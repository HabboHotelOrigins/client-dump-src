property pAnimThisUpdate, pSin, pDiscoCounter, pSpriteList, pDiscoStyleList, pDiscoStyle, pLightTimer, pTextImageList, pDbFrameCount, pDbAnimFrame, pDbStarSpr, pDbDestRect, pActiveColors

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 20 .............................. pSpriteList = []
  [  5] pushint8 1 .............................. <1>
  [  7] setprop 21 .............................. pDiscoStyle = 1
  [  9] pushzero ................................ <0>
  [ 10] setprop 22 .............................. pLightTimer = 0
  [ 12] pushzero ................................ <0>
  [ 13] setprop 23 .............................. pAnimThisUpdate = 0
  [ 15] pushcons 0 .............................. <22.39999999999999858>
  [ 17] setprop 24 .............................. pSin = 22.39999999999999858
  [ 19] pushint8 100 ............................ <100>
  [ 21] setprop 25 .............................. pDiscoCounter = 100
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] pusharglist 0 ........................... <[]>
  [ 28] pushlist ................................ <[]>
  [ 29] pusharglist 0 ........................... <[]>
  [ 31] pushlist ................................ <[]>
  [ 32] pusharglist 0 ........................... <[]>
  [ 34] pushlist ................................ <[]>
  [ 35] pusharglist 0 ........................... <[]>
  [ 37] pushlist ................................ <[]>
  [ 38] pusharglist 0 ........................... <[]>
  [ 40] pushlist ................................ <[]>
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] pusharglist 7 ........................... <[[], [], [], [], [], [], []]>
  [ 46] pushlist ................................ <[[], [], [], [], [], [], []]>
  [ 47] setprop 26 .............................. pTextImageList = [[], [], [], [], [], [], []]
  [ 49] pusharglist 0 ........................... <[]>
  [ 51] pushlist ................................ <[]>
  [ 52] setprop 27 .............................. pActiveColors = []
  [ 54] pushzero ................................ <0>
  [ 55] setprop 28 .............................. pDbFrameCount = 0
  [ 57] pushint8 9 .............................. <9>
  [ 59] setprop 29 .............................. pDbAnimFrame = 9
  [ 61] pusharglist 0 ........................... <>
  [ 63] extcall 31 .............................. <VOID>
  [ 65] setprop 30 .............................. pDbStarSpr = VOID
  [ 67] pushzero ................................ <0>
  [ 68] pushzero ................................ <0>
  [ 69] pushzero ................................ <0>
  [ 70] pushzero ................................ <0>
  [ 71] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 73] extcall 33 .............................. <rect(0, 0, 0, 0)>
  [ 75] setprop 32 .............................. pDbDestRect = rect(0, 0, 0, 0)
  [ 77] getprop 30 .............................. <pDbStarSpr>
  [ 79] getobjprop 34 ........................... <pDbStarSpr.ilk>
  [ 81] pushsymb 35 ............................. <#sprite>
  [ 83] nteq .................................... <pDbStarSpr.ilk <> #sprite>
  [ 84] jmpifz [109] ............................ if pDbStarSpr.ilk <> #sprite then
  [ 87] getparam 0 .............................. <me>
  [ 89] pusharglist 1 ........................... <me>
  [ 91] objcall 37 .............................. <me.getID()>
  [ 93] pusharglist 1 ........................... <me.getID()>
  [ 95] extcall 36 .............................. <reserveSprite(me.getID())>
  [ 97] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [ 99] extcall 35 .............................. <sprite(reserveSprite(me.getID()))>
  [101] setprop 30 .............................. pDbStarSpr = sprite(reserveSprite(me.getID()))
  [103] getprop 30 .............................. <pDbStarSpr>
  [105] pushint8 36 ............................. <36>
  [107] setobjprop 38 ........................... pDbStarSpr.ink = 36
  [109] pusharglist 0 ........................... <[]>
  [111] pushlist ................................ <[]>
  [112] setprop 39 .............................. pDiscoStyleList = []
  [114] pushint8 1 .............................. <1>
  [116] setlocal 0
  [118] getlocal 0
  [120] pushcons 1 .............................. <"discofloor">
  [122] pusharglist 1 ........................... <"discofloor">
  [124] extcall 41 .............................. <getmemnum("discofloor")>
  [126] pusharglist 1 ........................... <getmemnum("discofloor")>
  [128] extcall 40 .............................. <member(getmemnum("discofloor"))>
  [130] pushsymb 42 ............................. <#line>
  [132] pusharglist 2 ........................... <member(getmemnum("discofloor")), #line>
  [134] objcall 43 .............................. <member(getmemnum("discofloor")).line.count>
  [136] lteq
  [137] jmpifz [175] ............................ repeat with i = 1 to member(getmemnum("discofloor")).line.count
  [140] getprop 39 .............................. <pDiscoStyleList>
  [142] pushcons 1 .............................. <"discofloor">
  [144] pusharglist 1 ........................... <"discofloor">
  [146] extcall 41 .............................. <getmemnum("discofloor")>
  [148] pusharglist 1 ........................... <getmemnum("discofloor")>
  [150] extcall 40 .............................. <member(getmemnum("discofloor"))>
  [152] getchainedprop 44 ....................... <member(getmemnum("discofloor")).text>
  [154] pushsymb 42 ............................. <#line>
  [156] getlocal 0 .............................. <i>
  [158] pusharglist 3 ........................... <member(getmemnum("discofloor")).text, #line, i>
  [160] objcall 45 .............................. <member(getmemnum("discofloor")).text.line[i]>
  [162] pusharglistnoret 2 ...................... <pDiscoStyleList, member(getmemnum("discofloor")).text.line[i]>
  [164] objcall 46 .............................. pDiscoStyleList.add(member(getmemnum("discofloor")).text.line[i])
  [166] pushint8 1
  [168] getlocal 0
  [170] add
  [171] setlocal 0
  [173] endrepeat [118]
  [175] pushint8 1 .............................. <1>
  [177] pusharglistnoret 1 ...................... <1>
  [179] extcall 47 .............................. return 1
  [181] ret
end

on deconstruct me
  [  0] getprop 30 .............................. <pDbStarSpr>
  [  2] getobjprop 34 ........................... <pDbStarSpr.ilk>
  [  4] pushsymb 35 ............................. <#sprite>
  [  6] eq ...................................... <pDbStarSpr.ilk = #sprite>
  [  7] jmpifz [ 18] ............................ if pDbStarSpr.ilk = #sprite then
  [ 10] getprop 30 .............................. <pDbStarSpr>
  [ 12] getobjprop 51 ........................... <pDbStarSpr.spriteNum>
  [ 14] pusharglistnoret 1 ...................... <pDbStarSpr.spriteNum>
  [ 16] extcall 50 .............................. releaseSprite(pDbStarSpr.spriteNum)
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 37 .............................. <me.getID()>
  [ 24] pusharglist 1 ........................... <me.getID()>
  [ 26] extcall 52 .............................. <removeUpdate(me.getID())>
  [ 28] pusharglistnoret 1 ...................... <removeUpdate(me.getID())>
  [ 30] extcall 47 .............................. return removeUpdate(me.getID())
  [ 32] ret
end

on prepare me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 37 .............................. <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 53 .............................. <receiveUpdate(me.getID())>
  [ 10] pusharglistnoret 1 ...................... <receiveUpdate(me.getID())>
  [ 12] extcall 47 .............................. return receiveUpdate(me.getID())
  [ 14] ret
end

on showprogram me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pusharglist 1 ........................... <tMsg>
  [  4] extcall 54 .............................. <voidp(tMsg)>
  [  6] jmpifz [ 14] ............................ if voidp(tMsg) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 47 .............................. return 0
  [ 14] getparam 1 .............................. <tMsg>
  [ 16] pushsymb 55 ............................. <#show_command>
  [ 18] pusharglist 2 ........................... <tMsg, #show_command>
  [ 20] objcall 56 .............................. <tMsg[#show_command]>
  [ 22] setlocal 0 .............................. tNum = tMsg[#show_command]
  [ 24] getparam 0 .............................. <me>
  [ 26] getlocal 0 .............................. <tNum>
  [ 28] pusharglist 2 ........................... <me, tNum>
  [ 30] objcall 4 ............................... <me.changeDiscoStyle(tNum)>
  [ 32] pusharglistnoret 1 ...................... <me.changeDiscoStyle(tNum)>
  [ 34] extcall 47 .............................. return me.changeDiscoStyle(tNum)
  [ 36] ret
end

on changeDiscoStyle me, tNr
  [  0] getparam 1 .............................. <tNr>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 31 .............................. <VOID>
  [  6] eq ...................................... <tNr = VOID>
  [  7] jmpifz [ 20] ............................ if tNr = VOID then / else
  [ 10] getprop 21 .............................. <pDiscoStyle>
  [ 12] pushint8 1 .............................. <1>
  [ 14] add ..................................... <pDiscoStyle + 1>
  [ 15] setprop 21 .............................. pDiscoStyle = pDiscoStyle + 1
  [ 17] jmp [ 24]
  [ 20] getparam 1 .............................. <tNr>
  [ 22] setprop 21 .............................. pDiscoStyle = tNr
  [ 24] getprop 21 .............................. <pDiscoStyle>
  [ 26] pushint8 1 .............................. <1>
  [ 28] lt ...................................... <pDiscoStyle < 1>
  [ 29] getprop 21 .............................. <pDiscoStyle>
  [ 31] getprop 39 .............................. <pDiscoStyleList>
  [ 33] getobjprop 43 ........................... <pDiscoStyleList.count>
  [ 35] gt ...................................... <pDiscoStyle > pDiscoStyleList.count>
  [ 36] or ...................................... <(pDiscoStyle < 1) or (pDiscoStyle > pDiscoStyleList.count)>
  [ 37] jmpifz [ 44] ............................ if (pDiscoStyle < 1) or (pDiscoStyle > pDiscoStyleList.count) then
  [ 40] pushint8 1 .............................. <1>
  [ 42] setprop 21 .............................. pDiscoStyle = 1
  [ 44] pushcons 0 .............................. <22.39999999999999858>
  [ 46] setprop 24 .............................. pSin = 22.39999999999999858
  [ 48] pushint8 100 ............................ <100>
  [ 50] setprop 25 .............................. pDiscoCounter = 100
  [ 52] pusharglist 0 ........................... <[]>
  [ 54] pushlist ................................ <[]>
  [ 55] setprop 27 .............................. pActiveColors = []
  [ 57] pusharglist 0 ........................... <[]>
  [ 59] pushlist ................................ <[]>
  [ 60] pusharglist 0 ........................... <[]>
  [ 62] pushlist ................................ <[]>
  [ 63] pusharglist 0 ........................... <[]>
  [ 65] pushlist ................................ <[]>
  [ 66] pusharglist 0 ........................... <[]>
  [ 68] pushlist ................................ <[]>
  [ 69] pusharglist 0 ........................... <[]>
  [ 71] pushlist ................................ <[]>
  [ 72] pusharglist 0 ........................... <[]>
  [ 74] pushlist ................................ <[]>
  [ 75] pusharglist 0 ........................... <[]>
  [ 77] pushlist ................................ <[]>
  [ 78] pusharglist 7 ........................... <[[], [], [], [], [], [], []]>
  [ 80] pushlist ................................ <[[], [], [], [], [], [], []]>
  [ 81] setprop 26 .............................. pTextImageList = [[], [], [], [], [], [], []]
  [ 83] pushint8 1 .............................. <1>
  [ 85] pusharglistnoret 1 ...................... <1>
  [ 87] extcall 47 .............................. return 1
  [ 89] ret
end

on update me
  [  0] getprop 23 .............................. <pAnimThisUpdate>
  [  2] not ..................................... <not pAnimThisUpdate>
  [  3] setprop 23 .............................. pAnimThisUpdate = not pAnimThisUpdate
  [  5] getprop 23 .............................. <pAnimThisUpdate>
  [  7] not ..................................... <not pAnimThisUpdate>
  [  8] jmpifz [ 17] ............................ if not pAnimThisUpdate then
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 47 .............................. return 1
  [ 17] getprop 24 .............................. <pSin>
  [ 19] pushcons 2 .............................. <0.01>
  [ 21] add ..................................... <pSin + 0.01>
  [ 22] setprop 24 .............................. pSin = pSin + 0.01
  [ 24] getprop 20 .............................. <pSpriteList>
  [ 26] pusharglist 0 ........................... <[]>
  [ 28] pushlist ................................ <[]>
  [ 29] eq ...................................... <pSpriteList = []>
  [ 30] jmpifz [ 39] ............................ if pSpriteList = [] then
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 19 .............................. me.getSpriteList()
  [ 39] getparam 0 .............................. <me>
  [ 41] pusharglistnoret 1 ...................... <me>
  [ 43] objcall 18 .............................. me.animDiscoBall()
  [ 45] getprop 39 .............................. <pDiscoStyleList>
  [ 47] getprop 21 .............................. <pDiscoStyle>
  [ 49] pusharglist 1 ........................... <pDiscoStyle>
  [ 51] extcall 60 .............................. <integer(pDiscoStyle)>
  [ 53] pusharglist 2 ........................... <pDiscoStyleList, integer(pDiscoStyle)>
  [ 55] objcall 56 .............................. <pDiscoStyleList[integer(pDiscoStyle)]>
  [ 57] setlocal 0 .............................. tProps = pDiscoStyleList[integer(pDiscoStyle)]
  [ 59] getlocal 0 .............................. <tProps>
  [ 61] pushsymb 61 ............................. <#word>
  [ 63] pusharglist 2 ........................... <tProps, #word>
  [ 65] objcall 43 .............................. <tProps.word.count>
  [ 67] pushint8 7 .............................. <7>
  [ 69] lt ...................................... <tProps.word.count < 7>
  [ 70] jmpifz [ 78] ............................ if tProps.word.count < 7 then
  [ 73] pushzero ................................ <0>
  [ 74] pusharglistnoret 1 ...................... <0>
  [ 76] extcall 47 .............................. return 0
  [ 78] getlocal 0 .............................. <tProps>
  [ 80] pushsymb 61 ............................. <#word>
  [ 82] pushint8 1 .............................. <1>
  [ 84] pusharglist 3 ........................... <tProps, #word, 1>
  [ 86] objcall 45 .............................. <tProps.word[1]>
  [ 88] setlocal 1 .............................. tStyle = tProps.word[1]
  [ 90] getlocal 0 .............................. <tProps>
  [ 92] pushsymb 61 ............................. <#word>
  [ 94] pushint8 2 .............................. <2>
  [ 96] pusharglist 3 ........................... <tProps, #word, 2>
  [ 98] objcall 45 .............................. <tProps.word[2]>
  [100] pusharglist 1 ........................... <tProps.word[2]>
  [102] extcall 62 .............................. <value(tProps.word[2])>
  [104] setlocal 2 .............................. tOrCols = value(tProps.word[2])
  [106] getlocal 0 .............................. <tProps>
  [108] pushsymb 61 ............................. <#word>
  [110] pushint8 3 .............................. <3>
  [112] pusharglist 3 ........................... <tProps, #word, 3>
  [114] objcall 45 .............................. <tProps.word[3]>
  [116] pusharglist 1 ........................... <tProps.word[3]>
  [118] extcall 60 .............................. <integer(tProps.word[3])>
  [120] setlocal 3 .............................. tMultip = integer(tProps.word[3])
  [122] getlocal 0 .............................. <tProps>
  [124] pushsymb 61 ............................. <#word>
  [126] pushint8 4 .............................. <4>
  [128] pusharglist 3 ........................... <tProps, #word, 4>
  [130] objcall 45 .............................. <tProps.word[4]>
  [132] pusharglist 1 ........................... <tProps.word[4]>
  [134] extcall 60 .............................. <integer(tProps.word[4])>
  [136] setlocal 4 .............................. tSpeed = integer(tProps.word[4])
  [138] getlocal 0 .............................. <tProps>
  [140] pushsymb 61 ............................. <#word>
  [142] pushint8 5 .............................. <5>
  [144] pusharglist 3 ........................... <tProps, #word, 5>
  [146] objcall 45 .............................. <tProps.word[5]>
  [148] pusharglist 1 ........................... <tProps.word[5]>
  [150] extcall 62 .............................. <value(tProps.word[5])>
  [152] setlocal 5 .............................. tRange = value(tProps.word[5])
  [154] getlocal 0 .............................. <tProps>
  [156] pushsymb 61 ............................. <#word>
  [158] pushint8 6 .............................. <6>
  [160] pusharglist 3 ........................... <tProps, #word, 6>
  [162] objcall 45 .............................. <tProps.word[6]>
  [164] pusharglist 1 ........................... <tProps.word[6]>
  [166] extcall 60 .............................. <integer(tProps.word[6])>
  [168] setlocal 6 .............................. tTime = integer(tProps.word[6])
  [170] getlocal 0 .............................. <tProps>
  [172] pushsymb 61 ............................. <#word>
  [174] pushint8 7 .............................. <7>
  [176] pusharglist 3 ........................... <tProps, #word, 7>
  [178] objcall 45 .............................. <tProps.word[7]>
  [180] pusharglist 1 ........................... <tProps.word[7]>
  [182] extcall 60 .............................. <integer(tProps.word[7])>
  [184] setlocal 7 .............................. tHorz = integer(tProps.word[7])
  [186] getmovieprop 63 ......................... <the milliSeconds>
  [188] getlocal 6 .............................. <tTime>
  [190] getprop 22 .............................. <pLightTimer>
  [192] add ..................................... <tTime + pLightTimer>
  [193] lt ...................................... <the milliSeconds < (tTime + pLightTimer)>
  [194] jmpifz [203] ............................ if the milliSeconds < (tTime + pLightTimer) then
  [197] pushint8 1 .............................. <1>
  [199] pusharglistnoret 1 ...................... <1>
  [201] extcall 47 .............................. return 1
  [203] getprop 25 .............................. <pDiscoCounter>
  [205] pushint8 1 .............................. <1>
  [207] add ..................................... <pDiscoCounter + 1>
  [208] setprop 25 .............................. pDiscoCounter = pDiscoCounter + 1
  [210] getmovieprop 63 ......................... <the milliSeconds>
  [212] setprop 22 .............................. pLightTimer = the milliSeconds
  [214] getparam 0 .............................. <me>
  [216] getlocal 1 .............................. <tStyle>
  [218] getlocal 2 .............................. <tOrCols>
  [220] getlocal 3 .............................. <tMultip>
  [222] getlocal 4 .............................. <tSpeed>
  [224] getlocal 5 .............................. <tRange>
  [226] getlocal 7 .............................. <tHorz>
  [228] pusharglistnoret 7 ...................... <me, tStyle, tOrCols, tMultip, tSpeed, tRange, tHorz>
  [230] objcall 6 ............................... me.ColorTiles(tStyle, tOrCols, tMultip, tSpeed, tRange, tHorz)
  [232] ret
end

on ColorTiles me, tStyle, tOrCols, tMultiplier, tSpeed, tRange, tHorz
  [  0] getparam 5 .............................. <tRange>
  [  2] setprop 27 .............................. pActiveColors = tRange
  [  4] pushint8 1 .............................. <1>
  [  6] setlocal 0
  [  8] getlocal 0
  [ 10] getprop 20 .............................. <pSpriteList>
  [ 12] getobjprop 43 ........................... <pSpriteList.count>
  [ 14] lteq
  [ 15] jmpifz [519] ............................ repeat with i = 1 to pSpriteList.count
  [ 18] getlocal 0 .............................. <i>
  [ 20] pushint8 7 .............................. <7>
  [ 22] mod ..................................... <i mod 7>
  [ 23] setlocal 1 .............................. tX = i mod 7
  [ 25] getlocal 1 .............................. <tX>
  [ 27] pushzero ................................ <0>
  [ 28] eq ...................................... <tX = 0>
  [ 29] jmpifz [ 36] ............................ if tX = 0 then
  [ 32] pushint8 7 .............................. <7>
  [ 34] setlocal 1 .............................. tX = 7
  [ 36] getlocal 0 .............................. <i>
  [ 38] pushint8 1 .............................. <1>
  [ 40] sub ..................................... <i - 1>
  [ 41] pushint8 7 .............................. <7>
  [ 43] div ..................................... <(i - 1) / 7>
  [ 44] pushint8 1 .............................. <1>
  [ 46] add ..................................... <((i - 1) / 7) + 1>
  [ 47] setlocal 2 .............................. tY = ((i - 1) / 7) + 1
  [ 49] getparam 1 .............................. <tStyle>
  [ 51] peek 0 .................................. case tStyle of
  [ 53] pushcons 3 .............................. <"#vertRotateSin">
  [ 55] eq
  [ 56] jmpifz [ 82] ............................ (case) "#vertRotateSin":
  [ 59] getparam 0 .............................. <me>
  [ 61] getlocal 1 .............................. <tX>
  [ 63] getlocal 2 .............................. <tY>
  [ 65] getparam 2 .............................. <tOrCols>
  [ 67] getparam 3 .............................. <tMultiplier>
  [ 69] getparam 4 .............................. <tSpeed>
  [ 71] getprop 27 .............................. <pActiveColors>
  [ 73] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [ 75] objcall 12 .............................. <me.vertRotateSin(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [ 77] setlocal 3 .............................. tCols = me.vertRotateSin(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [ 79] jmp [411]
  [ 82] peek 0
  [ 84] pushcons 4 .............................. <"#vertRotate">
  [ 86] eq
  [ 87] jmpifz [113] ............................ (case) "#vertRotate":
  [ 90] getparam 0 .............................. <me>
  [ 92] getlocal 1 .............................. <tX>
  [ 94] getlocal 2 .............................. <tY>
  [ 96] getparam 2 .............................. <tOrCols>
  [ 98] getparam 3 .............................. <tMultiplier>
  [100] getparam 4 .............................. <tSpeed>
  [102] getprop 27 .............................. <pActiveColors>
  [104] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [106] objcall 13 .............................. <me.vertRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [108] setlocal 3 .............................. tCols = me.vertRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [110] jmp [411]
  [113] peek 0
  [115] pushcons 5 .............................. <"#centerRotateMovX">
  [117] eq
  [118] jmpifz [144] ............................ (case) "#centerRotateMovX":
  [121] getparam 0 .............................. <me>
  [123] getlocal 1 .............................. <tX>
  [125] getlocal 2 .............................. <tY>
  [127] getparam 2 .............................. <tOrCols>
  [129] getparam 3 .............................. <tMultiplier>
  [131] getparam 4 .............................. <tSpeed>
  [133] getprop 27 .............................. <pActiveColors>
  [135] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [137] objcall 14 .............................. <me.centerRotateMovX(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [139] setlocal 3 .............................. tCols = me.centerRotateMovX(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [141] jmp [411]
  [144] peek 0
  [146] pushcons 6 .............................. <"#centerRotateMovXY">
  [148] eq
  [149] jmpifz [175] ............................ (case) "#centerRotateMovXY":
  [152] getparam 0 .............................. <me>
  [154] getlocal 1 .............................. <tX>
  [156] getlocal 2 .............................. <tY>
  [158] getparam 2 .............................. <tOrCols>
  [160] getparam 3 .............................. <tMultiplier>
  [162] getparam 4 .............................. <tSpeed>
  [164] getprop 27 .............................. <pActiveColors>
  [166] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [168] objcall 15 .............................. <me.centerRotateMovXY(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [170] setlocal 3 .............................. tCols = me.centerRotateMovXY(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [172] jmp [411]
  [175] peek 0
  [177] pushcons 7 .............................. <"#centerRotate">
  [179] eq
  [180] jmpifz [206] ............................ (case) "#centerRotate":
  [183] getparam 0 .............................. <me>
  [185] getlocal 1 .............................. <tX>
  [187] getlocal 2 .............................. <tY>
  [189] getparam 2 .............................. <tOrCols>
  [191] getparam 3 .............................. <tMultiplier>
  [193] getparam 4 .............................. <tSpeed>
  [195] getprop 27 .............................. <pActiveColors>
  [197] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [199] objcall 17 .............................. <me.centerRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [201] setlocal 3 .............................. tCols = me.centerRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [203] jmp [411]
  [206] peek 0
  [208] pushcons 8 .............................. <"#randomColor">
  [210] eq
  [211] jmpifz [237] ............................ (case) "#randomColor":
  [214] getparam 0 .............................. <me>
  [216] getlocal 1 .............................. <tX>
  [218] getlocal 2 .............................. <tY>
  [220] getparam 2 .............................. <tOrCols>
  [222] getparam 3 .............................. <tMultiplier>
  [224] getparam 4 .............................. <tSpeed>
  [226] getprop 27 .............................. <pActiveColors>
  [228] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [230] objcall 10 .............................. <me.randomColor(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [232] setlocal 3 .............................. tCols = me.randomColor(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [234] jmp [411]
  [237] peek 0
  [239] pushcons 9 .............................. <"#chessBoard">
  [241] eq
  [242] jmpifz [268] ............................ (case) "#chessBoard":
  [245] getparam 0 .............................. <me>
  [247] getlocal 1 .............................. <tX>
  [249] getlocal 2 .............................. <tY>
  [251] getparam 2 .............................. <tOrCols>
  [253] getparam 3 .............................. <tMultiplier>
  [255] getparam 4 .............................. <tSpeed>
  [257] getprop 27 .............................. <pActiveColors>
  [259] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [261] objcall 11 .............................. <me.chessBoard(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [263] setlocal 3 .............................. tCols = me.chessBoard(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [265] jmp [411]
  [268] peek 0
  [270] pushcons 10 ............................. <"#arrow">
  [272] eq
  [273] jmpifz [301] ............................ (case) "#arrow":
  [276] getparam 0 .............................. <me>
  [278] getlocal 1 .............................. <tX>
  [280] getlocal 2 .............................. <tY>
  [282] getparam 2 .............................. <tOrCols>
  [284] getparam 3 .............................. <tMultiplier>
  [286] getparam 4 .............................. <tSpeed>
  [288] getprop 27 .............................. <pActiveColors>
  [290] getparam 6 .............................. <tHorz>
  [292] pusharglist 8 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz>
  [294] objcall 16 .............................. <me.arrow(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz)>
  [296] setlocal 3 .............................. tCols = me.arrow(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz)
  [298] jmp [411]
  [301] peek 0
  [303] pushcons 11 ............................. <"#textImage">
  [305] eq
  [306] jmpifz [336] ............................ (case) "#textImage":
  [309] getparam 0 .............................. <me>
  [311] getlocal 1 .............................. <tX>
  [313] getlocal 2 .............................. <tY>
  [315] getparam 2 .............................. <tOrCols>
  [317] getparam 3 .............................. <tMultiplier>
  [319] getparam 4 .............................. <tSpeed>
  [321] getprop 27 .............................. <pActiveColors>
  [323] getparam 6 .............................. <tHorz>
  [325] pushint8 1 .............................. <1>
  [327] pusharglist 9 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 1>
  [329] objcall 8 ............................... <me.textImage(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 1)>
  [331] setlocal 3 .............................. tCols = me.textImage(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 1)
  [333] jmp [411]
  [336] peek 0
  [338] pushcons 12 ............................. <"#textImage2">
  [340] eq
  [341] jmpifz [371] ............................ (case) "#textImage2":
  [344] getparam 0 .............................. <me>
  [346] getlocal 1 .............................. <tX>
  [348] getlocal 2 .............................. <tY>
  [350] getparam 2 .............................. <tOrCols>
  [352] getparam 3 .............................. <tMultiplier>
  [354] getparam 4 .............................. <tSpeed>
  [356] getprop 27 .............................. <pActiveColors>
  [358] getparam 6 .............................. <tHorz>
  [360] pushint8 2 .............................. <2>
  [362] pusharglist 9 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 2>
  [364] objcall 8 ............................... <me.textImage(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 2)>
  [366] setlocal 3 .............................. tCols = me.textImage(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 2)
  [368] jmp [411]
  [371] peek 0
  [373] pushcons 13 ............................. <"#blink">
  [375] eq
  [376] jmpifz [404] ............................ (case) "#blink":
  [379] getparam 0 .............................. <me>
  [381] getlocal 1 .............................. <tX>
  [383] getlocal 2 .............................. <tY>
  [385] getparam 2 .............................. <tOrCols>
  [387] getparam 3 .............................. <tMultiplier>
  [389] getparam 4 .............................. <tSpeed>
  [391] getprop 27 .............................. <pActiveColors>
  [393] getparam 6 .............................. <tHorz>
  [395] pusharglist 8 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz>
  [397] objcall 7 ............................... <me.blink(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz)>
  [399] setlocal 3 .............................. tCols = me.blink(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz)
  [401] jmp [411] ............................... (case) otherwise:
  [404] pop 1
  [406] pushzero ................................ <0>
  [407] pusharglistnoret 1 ...................... <0>
  [409] extcall 47 .............................. return 0
  [411] pop 1 ................................... end case
  [413] getlocal 3 .............................. <tCols>
  [415] getobjprop 34 ........................... <tCols.ilk>
  [417] pushsymb 72 ............................. <#list>
  [419] nteq .................................... <tCols.ilk <> #list>
  [420] jmpifz [471] ............................ if tCols.ilk <> #list then
  [423] getlocal 3 .............................. <tCols>
  [425] pushzero ................................ <0>
  [426] eq ...................................... <tCols = 0>
  [427] jmpifz [456] ............................ if tCols = 0 then / else
  [430] getprop 20 .............................. <pSpriteList>
  [432] getlocal 0 .............................. <i>
  [434] pusharglist 2 ........................... <pSpriteList, i>
  [436] objcall 56 .............................. <pSpriteList[i]>
  [438] pushint16 255 ........................... <255>
  [441] pushint16 255 ........................... <255>
  [444] pushint16 255 ........................... <255>
  [447] pusharglist 3 ........................... <255, 255, 255>
  [449] extcall 73 .............................. <rgb(255, 255, 255)>
  [451] setobjprop 74 ........................... pSpriteList[i].bgColor = rgb(255, 255, 255)
  [453] jmp [468]
  [456] getprop 20 .............................. <pSpriteList>
  [458] getlocal 0 .............................. <i>
  [460] pusharglist 2 ........................... <pSpriteList, i>
  [462] objcall 56 .............................. <pSpriteList[i]>
  [464] getlocal 3 .............................. <tCols>
  [466] setobjprop 74 ........................... pSpriteList[i].bgColor = tCols
  [468] jmp [509] ............................... next repeat
  [471] getprop 20 .............................. <pSpriteList>
  [473] getlocal 0 .............................. <i>
  [475] pusharglist 2 ........................... <pSpriteList, i>
  [477] objcall 56 .............................. <pSpriteList[i]>
  [479] getlocal 3 .............................. <tCols>
  [481] pushint8 1 .............................. <1>
  [483] pusharglist 2 ........................... <tCols, 1>
  [485] objcall 56 .............................. <tCols[1]>
  [487] getlocal 3 .............................. <tCols>
  [489] pushint8 2 .............................. <2>
  [491] pusharglist 2 ........................... <tCols, 2>
  [493] objcall 56 .............................. <tCols[2]>
  [495] getlocal 3 .............................. <tCols>
  [497] pushint8 3 .............................. <3>
  [499] pusharglist 2 ........................... <tCols, 3>
  [501] objcall 56 .............................. <tCols[3]>
  [503] pusharglist 3 ........................... <tCols[1], tCols[2], tCols[3]>
  [505] extcall 73 .............................. <rgb(tCols[1], tCols[2], tCols[3])>
  [507] setobjprop 74 ........................... pSpriteList[i].bgColor = rgb(tCols[1], tCols[2], tCols[3])
  [509] pushint8 1
  [511] getlocal 0
  [513] add
  [514] setlocal 0
  [516] endrepeat [  8]
  [519] ret
end

on blink me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange, tHorz
  [  0] getprop 25 .............................. <pDiscoCounter>
  [  2] pushint8 9 .............................. <9>
  [  4] mod ..................................... <pDiscoCounter mod 9>
  [  5] setlocal 0 .............................. tAnimFrame = pDiscoCounter mod 9
  [  7] pushcons 14 ............................. <"mammothblink">
  [  9] getlocal 0 .............................. <tAnimFrame>
  [ 11] pushint8 1 .............................. <1>
  [ 13] add ..................................... <tAnimFrame + 1>
  [ 14] joinstr ................................. <"mammothblink" & tAnimFrame + 1>
  [ 15] pusharglist 1 ........................... <"mammothblink" & tAnimFrame + 1>
  [ 17] extcall 41 .............................. <getmemnum("mammothblink" & tAnimFrame + 1)>
  [ 19] pusharglist 1 ........................... <getmemnum("mammothblink" & tAnimFrame + 1)>
  [ 21] extcall 40 .............................. <member(getmemnum("mammothblink" & tAnimFrame + 1))>
  [ 23] setlocal 1 .............................. tMem = member(getmemnum("mammothblink" & tAnimFrame + 1))
  [ 25] getlocal 1 .............................. <tMem>
  [ 27] getobjprop 79 ........................... <tMem.image>
  [ 29] setlocal 2 .............................. tImg = tMem.image
  [ 31] getlocal 2 .............................. <tImg>
  [ 33] getobjprop 80 ........................... <tImg.width>
  [ 35] setlocal 3 .............................. tWid = tImg.width
  [ 37] getlocal 3 .............................. <tWid>
  [ 39] pushint8 2 .............................. <2>
  [ 41] div ..................................... <tWid / 2>
  [ 42] pushint8 4 .............................. <4>
  [ 44] sub ..................................... <(tWid / 2) - 4>
  [ 45] setlocal 4 .............................. tMod = (tWid / 2) - 4
  [ 47] getlocal 2 .............................. <tImg>
  [ 49] getparam 1 .............................. <tX>
  [ 51] getlocal 4 .............................. <tMod>
  [ 53] add ..................................... <tX + tMod>
  [ 54] getparam 2 .............................. <tY>
  [ 56] getlocal 4 .............................. <tMod>
  [ 58] add ..................................... <tY + tMod>
  [ 59] pusharglist 3 ........................... <tImg, tX + tMod, tY + tMod>
  [ 61] objcall 81 .............................. <tImg.getPixel(tX + tMod, tY + tMod)>
  [ 63] pusharglistnoret 1 ...................... <tImg.getPixel(tX + tMod, tY + tMod)>
  [ 65] extcall 47 .............................. return tImg.getPixel(tX + tMod, tY + tMod)
  [ 67] ret
end

on textImage me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange, tHorz, tNr
  [  0] getparam 7 .............................. <tHorz>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tHorz = 1>
  [  5] jmpifz [ 20] ............................ if tHorz = 1 then
  [  8] getparam 1 .............................. <tX>
  [ 10] setlocal 0 .............................. tTemp = tX
  [ 12] getparam 2 .............................. <tY>
  [ 14] setparam 1 .............................. tX = tY
  [ 16] getlocal 0 .............................. <tTemp>
  [ 18] setparam 2 .............................. tY = tTemp
  [ 20] getprop 26 .............................. <pTextImageList>
  [ 22] pusharglist 0 ........................... <[]>
  [ 24] pushlist ................................ <[]>
  [ 25] pusharglist 0 ........................... <[]>
  [ 27] pushlist ................................ <[]>
  [ 28] pusharglist 0 ........................... <[]>
  [ 30] pushlist ................................ <[]>
  [ 31] pusharglist 0 ........................... <[]>
  [ 33] pushlist ................................ <[]>
  [ 34] pusharglist 0 ........................... <[]>
  [ 36] pushlist ................................ <[]>
  [ 37] pusharglist 0 ........................... <[]>
  [ 39] pushlist ................................ <[]>
  [ 40] pusharglist 0 ........................... <[]>
  [ 42] pushlist ................................ <[]>
  [ 43] pusharglist 7 ........................... <[[], [], [], [], [], [], []]>
  [ 45] pushlist ................................ <[[], [], [], [], [], [], []]>
  [ 46] eq ...................................... <pTextImageList = [[], [], [], [], [], [], []]>
  [ 47] jmpifz [ 67] ............................ if pTextImageList = [[], [], [], [], [], [], []] then
  [ 50] getparam 0 .............................. <me>
  [ 52] getparam 8 .............................. <tNr>
  [ 54] pusharglist 2 ........................... <me, tNr>
  [ 56] objcall 9 ............................... <me.getTextImage(tNr)>
  [ 58] not ..................................... <not me.getTextImage(tNr)>
  [ 59] jmpifz [ 67] ............................ if not me.getTextImage(tNr) then
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 47 .............................. return 0
  [ 67] getprop 25 .............................. <pDiscoCounter>
  [ 69] getprop 26 .............................. <pTextImageList>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 2 ........................... <pTextImageList, 1>
  [ 75] objcall 56 .............................. <pTextImageList[1]>
  [ 77] getobjprop 43 ........................... <pTextImageList[1].count>
  [ 79] mod ..................................... <pDiscoCounter mod pTextImageList[1].count>
  [ 80] setlocal 1 .............................. tSpot = pDiscoCounter mod pTextImageList[1].count
  [ 82] getparam 1 .............................. <tX>
  [ 84] getlocal 1 .............................. <tSpot>
  [ 86] add ..................................... <tX + tSpot>
  [ 87] getprop 26 .............................. <pTextImageList>
  [ 89] pushint8 1 .............................. <1>
  [ 91] pusharglist 2 ........................... <pTextImageList, 1>
  [ 93] objcall 56 .............................. <pTextImageList[1]>
  [ 95] getobjprop 43 ........................... <pTextImageList[1].count>
  [ 97] gt ...................................... <(tX + tSpot) > pTextImageList[1].count>
  [ 98] jmpifz [104] ............................ if (tX + tSpot) > pTextImageList[1].count then
  [101] pushzero ................................ <0>
  [102] setlocal 1 .............................. tSpot = 0
  [104] getprop 26 .............................. <pTextImageList>
  [106] getparam 2 .............................. <tY>
  [108] pusharglist 2 ........................... <pTextImageList, tY>
  [110] objcall 56 .............................. <pTextImageList[tY]>
  [112] getparam 1 .............................. <tX>
  [114] getlocal 1 .............................. <tSpot>
  [116] add ..................................... <tX + tSpot>
  [117] pusharglist 2 ........................... <pTextImageList[tY], tX + tSpot>
  [119] objcall 56 .............................. <pTextImageList[tY][tX + tSpot]>
  [121] jmpifz [158] ............................ if pTextImageList[tY][tX + tSpot] then / else
  [124] getparam 6 .............................. <tRange>
  [126] pushint8 4 .............................. <4>
  [128] pusharglist 2 ........................... <tRange, 4>
  [130] objcall 56 .............................. <tRange[4]>
  [132] getparam 6 .............................. <tRange>
  [134] pushint8 5 .............................. <5>
  [136] pusharglist 2 ........................... <tRange, 5>
  [138] objcall 56 .............................. <tRange[5]>
  [140] getparam 6 .............................. <tRange>
  [142] pushint8 6 .............................. <6>
  [144] pusharglist 2 ........................... <tRange, 6>
  [146] objcall 56 .............................. <tRange[6]>
  [148] pusharglist 3 ........................... <[tRange[4], tRange[5], tRange[6]]>
  [150] pushlist ................................ <[tRange[4], tRange[5], tRange[6]]>
  [151] pusharglistnoret 1 ...................... <[tRange[4], tRange[5], tRange[6]]>
  [153] extcall 47 .............................. return [tRange[4], tRange[5], tRange[6]]
  [155] jmp [189]
  [158] getparam 6 .............................. <tRange>
  [160] pushint8 1 .............................. <1>
  [162] pusharglist 2 ........................... <tRange, 1>
  [164] objcall 56 .............................. <tRange[1]>
  [166] getparam 6 .............................. <tRange>
  [168] pushint8 2 .............................. <2>
  [170] pusharglist 2 ........................... <tRange, 2>
  [172] objcall 56 .............................. <tRange[2]>
  [174] getparam 6 .............................. <tRange>
  [176] pushint8 3 .............................. <3>
  [178] pusharglist 2 ........................... <tRange, 3>
  [180] objcall 56 .............................. <tRange[3]>
  [182] pusharglist 3 ........................... <[tRange[1], tRange[2], tRange[3]]>
  [184] pushlist ................................ <[tRange[1], tRange[2], tRange[3]]>
  [185] pusharglistnoret 1 ...................... <[tRange[1], tRange[2], tRange[3]]>
  [187] extcall 47 .............................. return [tRange[1], tRange[2], tRange[3]]
  [189] ret
end

on getTextImage me, tNr
  [  0] pushcons 15 ............................. <"floortext">
  [  2] getparam 1 .............................. <tNr>
  [  4] joinstr ................................. <"floortext" & tNr>
  [  5] pusharglist 1 ........................... <"floortext" & tNr>
  [  7] extcall 89 .............................. <getMember("floortext" & tNr)>
  [  9] getchainedprop 79 ....................... <getMember("floortext" & tNr).image>
  [ 11] pusharglist 1 ........................... <getMember("floortext" & tNr).image>
  [ 13] objcall 90 .............................. <getMember("floortext" & tNr).image.trimWhiteSpace()>
  [ 15] setlocal 0 .............................. tImg = getMember("floortext" & tNr).image.trimWhiteSpace()
  [ 17] pushint8 1 .............................. <1>
  [ 19] setlocal 1
  [ 21] getlocal 1
  [ 23] pushint8 7 .............................. <7>
  [ 25] lteq
  [ 26] jmpifz [116] ............................ repeat with i = 1 to 7
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 2
  [ 33] getlocal 2
  [ 35] getlocal 0 .............................. <tImg>
  [ 37] getobjprop 80 ........................... <tImg.width>
  [ 39] lteq
  [ 40] jmpifz [107] ............................ repeat with j = 1 to tImg.width
  [ 43] getlocal 0 .............................. <tImg>
  [ 45] getlocal 2 .............................. <j>
  [ 47] getlocal 1 .............................. <i>
  [ 49] pushsymb 60 ............................. <#integer>
  [ 51] pusharglist 4 ........................... <tImg, j, i, #integer>
  [ 53] objcall 81 .............................. <tImg.getPixel(j, i, #integer)>
  [ 55] setlocal 3 .............................. tColor = tImg.getPixel(j, i, #integer)
  [ 57] getlocal 3 .............................. <tColor>
  [ 59] pushzero ................................ <0>
  [ 60] eq ...................................... <tColor = 0>
  [ 61] jmpifz [ 83] ............................ if tColor = 0 then
  [ 64] getprop 26 .............................. <pTextImageList>
  [ 66] getlocal 1 .............................. <i>
  [ 68] pusharglist 2 ........................... <pTextImageList, i>
  [ 70] objcall 56 .............................. <pTextImageList[i]>
  [ 72] getlocal 2 .............................. <j>
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglistnoret 3 ...................... <pTextImageList[i], j, 1>
  [ 78] objcall 91 .............................. pTextImageList[i][j] = 1
  [ 80] jmp [ 98] ............................... next repeat
  [ 83] getprop 26 .............................. <pTextImageList>
  [ 85] getlocal 1 .............................. <i>
  [ 87] pusharglist 2 ........................... <pTextImageList, i>
  [ 89] objcall 56 .............................. <pTextImageList[i]>
  [ 91] getlocal 2 .............................. <j>
  [ 93] pushzero ................................ <0>
  [ 94] pusharglistnoret 3 ...................... <pTextImageList[i], j, 0>
  [ 96] objcall 91 .............................. pTextImageList[i][j] = 0
  [ 98] pushint8 1
  [100] getlocal 2
  [102] add
  [103] setlocal 2
  [105] endrepeat [ 33]
  [107] pushint8 1
  [109] getlocal 1
  [111] add
  [112] setlocal 1
  [114] endrepeat [ 21]
  [116] pushint8 1 .............................. <1>
  [118] pusharglistnoret 1 ...................... <1>
  [120] extcall 47 .............................. return 1
  [122] ret
end

on randomColor me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 3 .............................. <3>
  [ 13] lteq
  [ 14] jmpifz [ 94] ............................ repeat with k = 1 to 3
  [ 17] getparam 6 .............................. <tRange>
  [ 19] getlocal 1 .............................. <k>
  [ 21] pushint8 3 .............................. <3>
  [ 23] add ..................................... <k + 3>
  [ 24] pusharglist 2 ........................... <tRange, k + 3>
  [ 26] objcall 56 .............................. <tRange[k + 3]>
  [ 28] setlocal 2 .............................. tMax = tRange[k + 3]
  [ 30] getparam 6 .............................. <tRange>
  [ 32] getlocal 1 .............................. <k>
  [ 34] pusharglist 2 ........................... <tRange, k>
  [ 36] objcall 56 .............................. <tRange[k]>
  [ 38] setlocal 3 .............................. tMin = tRange[k]
  [ 40] getlocal 2 .............................. <tMax>
  [ 42] getlocal 3 .............................. <tMin>
  [ 44] sub ..................................... <tMax - tMin>
  [ 45] setlocal 4 .............................. tdiff = tMax - tMin
  [ 47] getlocal 4 .............................. <tdiff>
  [ 49] pushint8 1 .............................. <1>
  [ 51] lt ...................................... <tdiff < 1>
  [ 52] jmpifz [ 68] ............................ if tdiff < 1 then
  [ 55] getlocal 0 .............................. <tCols>
  [ 57] getlocal 1 .............................. <k>
  [ 59] getlocal 3 .............................. <tMin>
  [ 61] pusharglistnoret 3 ...................... <tCols, k, tMin>
  [ 63] objcall 91 .............................. tCols[k] = tMin
  [ 65] jmp [ 85] ............................... next repeat
  [ 68] getlocal 0 .............................. <tCols>
  [ 70] getlocal 1 .............................. <k>
  [ 72] getlocal 3 .............................. <tMin>
  [ 74] getlocal 4 .............................. <tdiff>
  [ 76] pusharglist 1 ........................... <tdiff>
  [ 78] extcall 94 .............................. <random(tdiff)>
  [ 80] add ..................................... <tMin + random(tdiff)>
  [ 81] pusharglistnoret 3 ...................... <tCols, k, tMin + random(tdiff)>
  [ 83] objcall 91 .............................. tCols[k] = tMin + random(tdiff)
  [ 85] pushint8 1
  [ 87] getlocal 1
  [ 89] add
  [ 90] setlocal 1
  [ 92] endrepeat [  9]
  [ 94] getlocal 0 .............................. <tCols>
  [ 96] pusharglistnoret 1 ...................... <tCols>
  [ 98] extcall 47 .............................. return tCols
  [100] ret
end

on chessBoard me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] getprop 25 .............................. <pDiscoCounter>
  [  2] pushint8 2 .............................. <2>
  [  4] mod ..................................... <pDiscoCounter mod 2>
  [  5] setlocal 0 .............................. tPhase = pDiscoCounter mod 2
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] setlocal 1 .............................. tCols = []
  [ 12] pushint8 1 .............................. <1>
  [ 14] setlocal 2
  [ 16] getlocal 2
  [ 18] pushint8 3 .............................. <3>
  [ 20] lteq
  [ 21] jmpifz [ 96] ............................ repeat with k = 1 to 3
  [ 24] getparam 6 .............................. <tRange>
  [ 26] getlocal 2 .............................. <k>
  [ 28] pushint8 3 .............................. <3>
  [ 30] add ..................................... <k + 3>
  [ 31] pusharglist 2 ........................... <tRange, k + 3>
  [ 33] objcall 56 .............................. <tRange[k + 3]>
  [ 35] setlocal 3 .............................. tCol1 = tRange[k + 3]
  [ 37] getparam 6 .............................. <tRange>
  [ 39] getlocal 2 .............................. <k>
  [ 41] pusharglist 2 ........................... <tRange, k>
  [ 43] objcall 56 .............................. <tRange[k]>
  [ 45] setlocal 4 .............................. tCol2 = tRange[k]
  [ 47] getparam 1 .............................. <tX>
  [ 49] getparam 2 .............................. <tY>
  [ 51] add ..................................... <tX + tY>
  [ 52] getlocal 0 .............................. <tPhase>
  [ 54] add ..................................... <tX + tY + tPhase>
  [ 55] pushint8 2 .............................. <2>
  [ 57] mod ..................................... <(tX + tY + tPhase) mod 2>
  [ 58] pushint8 1 .............................. <1>
  [ 60] eq ...................................... <((tX + tY + tPhase) mod 2) = 1>
  [ 61] jmpifz [ 77] ............................ if ((tX + tY + tPhase) mod 2) = 1 then
  [ 64] getlocal 1 .............................. <tCols>
  [ 66] getlocal 2 .............................. <k>
  [ 68] getlocal 3 .............................. <tCol1>
  [ 70] pusharglistnoret 3 ...................... <tCols, k, tCol1>
  [ 72] objcall 91 .............................. tCols[k] = tCol1
  [ 74] jmp [ 87] ............................... next repeat
  [ 77] getlocal 1 .............................. <tCols>
  [ 79] getlocal 2 .............................. <k>
  [ 81] getlocal 4 .............................. <tCol2>
  [ 83] pusharglistnoret 3 ...................... <tCols, k, tCol2>
  [ 85] objcall 91 .............................. tCols[k] = tCol2
  [ 87] pushint8 1
  [ 89] getlocal 2
  [ 91] add
  [ 92] setlocal 2
  [ 94] endrepeat [ 16]
  [ 96] getlocal 1 .............................. <tCols>
  [ 98] pusharglistnoret 1 ...................... <tCols>
  [100] extcall 47 .............................. return tCols
  [102] ret
end

on vertRotateSin me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 3 .............................. <3>
  [ 13] lteq
  [ 14] jmpifz [162] ............................ repeat with k = 1 to 3
  [ 17] getlocal 0 .............................. <tCols>
  [ 19] getlocal 1 .............................. <k>
  [ 21] getparam 3 .............................. <tOrCols>
  [ 23] getlocal 1 .............................. <k>
  [ 25] pusharglist 2 ........................... <tOrCols, k>
  [ 27] objcall 56 .............................. <tOrCols[k]>
  [ 29] getparam 1 .............................. <tX>
  [ 31] getparam 2 .............................. <tY>
  [ 33] add ..................................... <tX + tY>
  [ 34] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 35] getparam 4 .............................. <tMultiplier>
  [ 37] getprop 24 .............................. <pSin>
  [ 39] pusharglist 1 ........................... <pSin>
  [ 41] extcall 102 ............................. <sin(pSin)>
  [ 43] mul ..................................... <tMultiplier * sin(pSin)>
  [ 44] getparam 5 .............................. <tSpeed>
  [ 46] mul ..................................... <tMultiplier * sin(pSin) * tSpeed>
  [ 47] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)>
  [ 48] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)>
  [ 50] objcall 91 .............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)
  [ 52] getparam 6 .............................. <tRange>
  [ 54] getlocal 1 .............................. <k>
  [ 56] pushint8 3 .............................. <3>
  [ 58] add ..................................... <k + 3>
  [ 59] pusharglist 2 ........................... <tRange, k + 3>
  [ 61] objcall 56 .............................. <tRange[k + 3]>
  [ 63] setlocal 2 .............................. tMax = tRange[k + 3]
  [ 65] getparam 6 .............................. <tRange>
  [ 67] getlocal 1 .............................. <k>
  [ 69] pusharglist 2 ........................... <tRange, k>
  [ 71] objcall 56 .............................. <tRange[k]>
  [ 73] setlocal 3 .............................. tMin = tRange[k]
  [ 75] getlocal 0 .............................. <tCols>
  [ 77] getlocal 1 .............................. <k>
  [ 79] pusharglist 2 ........................... <tCols, k>
  [ 81] objcall 56 .............................. <tCols[k]>
  [ 83] getlocal 2 .............................. <tMax>
  [ 85] gt ...................................... <tCols[k] > tMax>
  [ 86] jmpifz [114] ............................ if tCols[k] > tMax then
  [ 89] getlocal 0 .............................. <tCols>
  [ 91] getlocal 1 .............................. <k>
  [ 93] getlocal 2 .............................. <tMax>
  [ 95] getlocal 0 .............................. <tCols>
  [ 97] getlocal 1 .............................. <k>
  [ 99] pusharglist 2 ........................... <tCols, k>
  [101] objcall 56 .............................. <tCols[k]>
  [103] getlocal 2 .............................. <tMax>
  [105] getlocal 3 .............................. <tMin>
  [107] sub ..................................... <tMax - tMin>
  [108] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [109] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [110] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [112] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [114] getlocal 0 .............................. <tCols>
  [116] getlocal 1 .............................. <k>
  [118] pusharglist 2 ........................... <tCols, k>
  [120] objcall 56 .............................. <tCols[k]>
  [122] getlocal 3 .............................. <tMin>
  [124] lt ...................................... <tCols[k] < tMin>
  [125] jmpifz [153] ............................ if tCols[k] < tMin then
  [128] getlocal 0 .............................. <tCols>
  [130] getlocal 1 .............................. <k>
  [132] getlocal 3 .............................. <tMin>
  [134] getlocal 0 .............................. <tCols>
  [136] getlocal 1 .............................. <k>
  [138] pusharglist 2 ........................... <tCols, k>
  [140] objcall 56 .............................. <tCols[k]>
  [142] getlocal 2 .............................. <tMax>
  [144] getlocal 3 .............................. <tMin>
  [146] sub ..................................... <tMax - tMin>
  [147] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [148] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [149] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [151] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [153] pushint8 1
  [155] getlocal 1
  [157] add
  [158] setlocal 1
  [160] endrepeat [  9]
  [162] getlocal 0 .............................. <tCols>
  [164] pusharglistnoret 1 ...................... <tCols>
  [166] extcall 47 .............................. return tCols
  [168] ret
end

on vertRotate me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 3 .............................. <3>
  [ 13] lteq
  [ 14] jmpifz [158] ............................ repeat with k = 1 to 3
  [ 17] getlocal 0 .............................. <tCols>
  [ 19] getlocal 1 .............................. <k>
  [ 21] getparam 3 .............................. <tOrCols>
  [ 23] getlocal 1 .............................. <k>
  [ 25] pusharglist 2 ........................... <tOrCols, k>
  [ 27] objcall 56 .............................. <tOrCols[k]>
  [ 29] getparam 1 .............................. <tX>
  [ 31] getparam 2 .............................. <tY>
  [ 33] add ..................................... <tX + tY>
  [ 34] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 35] getparam 4 .............................. <tMultiplier>
  [ 37] getprop 24 .............................. <pSin>
  [ 39] mul ..................................... <tMultiplier * pSin>
  [ 40] getparam 5 .............................. <tSpeed>
  [ 42] mul ..................................... <tMultiplier * pSin * tSpeed>
  [ 43] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 44] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 46] objcall 91 .............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)
  [ 48] getparam 6 .............................. <tRange>
  [ 50] getlocal 1 .............................. <k>
  [ 52] pushint8 3 .............................. <3>
  [ 54] add ..................................... <k + 3>
  [ 55] pusharglist 2 ........................... <tRange, k + 3>
  [ 57] objcall 56 .............................. <tRange[k + 3]>
  [ 59] setlocal 2 .............................. tMax = tRange[k + 3]
  [ 61] getparam 6 .............................. <tRange>
  [ 63] getlocal 1 .............................. <k>
  [ 65] pusharglist 2 ........................... <tRange, k>
  [ 67] objcall 56 .............................. <tRange[k]>
  [ 69] setlocal 3 .............................. tMin = tRange[k]
  [ 71] getlocal 0 .............................. <tCols>
  [ 73] getlocal 1 .............................. <k>
  [ 75] pusharglist 2 ........................... <tCols, k>
  [ 77] objcall 56 .............................. <tCols[k]>
  [ 79] getlocal 2 .............................. <tMax>
  [ 81] gt ...................................... <tCols[k] > tMax>
  [ 82] jmpifz [110] ............................ if tCols[k] > tMax then
  [ 85] getlocal 0 .............................. <tCols>
  [ 87] getlocal 1 .............................. <k>
  [ 89] getlocal 2 .............................. <tMax>
  [ 91] getlocal 0 .............................. <tCols>
  [ 93] getlocal 1 .............................. <k>
  [ 95] pusharglist 2 ........................... <tCols, k>
  [ 97] objcall 56 .............................. <tCols[k]>
  [ 99] getlocal 2 .............................. <tMax>
  [101] getlocal 3 .............................. <tMin>
  [103] sub ..................................... <tMax - tMin>
  [104] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [105] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [106] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [108] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [110] getlocal 0 .............................. <tCols>
  [112] getlocal 1 .............................. <k>
  [114] pusharglist 2 ........................... <tCols, k>
  [116] objcall 56 .............................. <tCols[k]>
  [118] getlocal 3 .............................. <tMin>
  [120] lt ...................................... <tCols[k] < tMin>
  [121] jmpifz [149] ............................ if tCols[k] < tMin then
  [124] getlocal 0 .............................. <tCols>
  [126] getlocal 1 .............................. <k>
  [128] getlocal 3 .............................. <tMin>
  [130] getlocal 0 .............................. <tCols>
  [132] getlocal 1 .............................. <k>
  [134] pusharglist 2 ........................... <tCols, k>
  [136] objcall 56 .............................. <tCols[k]>
  [138] getlocal 2 .............................. <tMax>
  [140] getlocal 3 .............................. <tMin>
  [142] sub ..................................... <tMax - tMin>
  [143] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [144] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [145] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [147] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [149] pushint8 1
  [151] getlocal 1
  [153] add
  [154] setlocal 1
  [156] endrepeat [  9]
  [158] getlocal 0 .............................. <tCols>
  [160] pusharglistnoret 1 ...................... <tCols>
  [162] extcall 47 .............................. return tCols
  [164] ret
end

on centerRotateMovX me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] getprop 25 .............................. <pDiscoCounter>
  [  7] pushint8 14 ............................. <14>
  [  9] mod ..................................... <pDiscoCounter mod 14>
  [ 10] pushint8 7 .............................. <7>
  [ 12] sub ..................................... <(pDiscoCounter mod 14) - 7>
  [ 13] pusharglist 1 ........................... <(pDiscoCounter mod 14) - 7>
  [ 15] extcall 103 ............................. <abs((pDiscoCounter mod 14) - 7)>
  [ 17] setlocal 1 .............................. tRow = abs((pDiscoCounter mod 14) - 7)
  [ 19] getlocal 1 .............................. <tRow>
  [ 21] setlocal 2 .............................. tCenterX = tRow
  [ 23] pushint8 4 .............................. <4>
  [ 25] setlocal 3 .............................. tCenterY = 4
  [ 27] getparam 1 .............................. <tX>
  [ 29] getlocal 2 .............................. <tCenterX>
  [ 31] sub ..................................... <tX - tCenterX>
  [ 32] pusharglist 1 ........................... <tX - tCenterX>
  [ 34] extcall 103 ............................. <abs(tX - tCenterX)>
  [ 36] getparam 2 .............................. <tY>
  [ 38] getlocal 3 .............................. <tCenterY>
  [ 40] sub ..................................... <tY - tCenterY>
  [ 41] pusharglist 1 ........................... <tY - tCenterY>
  [ 43] extcall 103 ............................. <abs(tY - tCenterY)>
  [ 45] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [ 46] setlocal 4 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [ 48] getparam 4 .............................. <tMultiplier>
  [ 50] getlocal 4 .............................. <tCenterMultiplier>
  [ 52] mul ..................................... <tMultiplier * tCenterMultiplier>
  [ 53] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [ 55] pushint8 1 .............................. <1>
  [ 57] setlocal 5
  [ 59] getlocal 5
  [ 61] pushint8 3 .............................. <3>
  [ 63] lteq
  [ 64] jmpifz [208] ............................ repeat with k = 1 to 3
  [ 67] getlocal 0 .............................. <tCols>
  [ 69] getlocal 5 .............................. <k>
  [ 71] getparam 3 .............................. <tOrCols>
  [ 73] getlocal 5 .............................. <k>
  [ 75] pusharglist 2 ........................... <tOrCols, k>
  [ 77] objcall 56 .............................. <tOrCols[k]>
  [ 79] getparam 1 .............................. <tX>
  [ 81] getparam 2 .............................. <tY>
  [ 83] add ..................................... <tX + tY>
  [ 84] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 85] getparam 4 .............................. <tMultiplier>
  [ 87] getprop 24 .............................. <pSin>
  [ 89] mul ..................................... <tMultiplier * pSin>
  [ 90] getparam 5 .............................. <tSpeed>
  [ 92] mul ..................................... <tMultiplier * pSin * tSpeed>
  [ 93] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 94] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 96] objcall 91 .............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)
  [ 98] getparam 6 .............................. <tRange>
  [100] getlocal 5 .............................. <k>
  [102] pushint8 3 .............................. <3>
  [104] add ..................................... <k + 3>
  [105] pusharglist 2 ........................... <tRange, k + 3>
  [107] objcall 56 .............................. <tRange[k + 3]>
  [109] setlocal 6 .............................. tMax = tRange[k + 3]
  [111] getparam 6 .............................. <tRange>
  [113] getlocal 5 .............................. <k>
  [115] pusharglist 2 ........................... <tRange, k>
  [117] objcall 56 .............................. <tRange[k]>
  [119] setlocal 7 .............................. tMin = tRange[k]
  [121] getlocal 0 .............................. <tCols>
  [123] getlocal 5 .............................. <k>
  [125] pusharglist 2 ........................... <tCols, k>
  [127] objcall 56 .............................. <tCols[k]>
  [129] getlocal 6 .............................. <tMax>
  [131] gt ...................................... <tCols[k] > tMax>
  [132] jmpifz [160] ............................ if tCols[k] > tMax then
  [135] getlocal 0 .............................. <tCols>
  [137] getlocal 5 .............................. <k>
  [139] getlocal 6 .............................. <tMax>
  [141] getlocal 0 .............................. <tCols>
  [143] getlocal 5 .............................. <k>
  [145] pusharglist 2 ........................... <tCols, k>
  [147] objcall 56 .............................. <tCols[k]>
  [149] getlocal 6 .............................. <tMax>
  [151] getlocal 7 .............................. <tMin>
  [153] sub ..................................... <tMax - tMin>
  [154] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [155] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [156] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [158] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [160] getlocal 0 .............................. <tCols>
  [162] getlocal 5 .............................. <k>
  [164] pusharglist 2 ........................... <tCols, k>
  [166] objcall 56 .............................. <tCols[k]>
  [168] getlocal 7 .............................. <tMin>
  [170] lt ...................................... <tCols[k] < tMin>
  [171] jmpifz [199] ............................ if tCols[k] < tMin then
  [174] getlocal 0 .............................. <tCols>
  [176] getlocal 5 .............................. <k>
  [178] getlocal 7 .............................. <tMin>
  [180] getlocal 0 .............................. <tCols>
  [182] getlocal 5 .............................. <k>
  [184] pusharglist 2 ........................... <tCols, k>
  [186] objcall 56 .............................. <tCols[k]>
  [188] getlocal 6 .............................. <tMax>
  [190] getlocal 7 .............................. <tMin>
  [192] sub ..................................... <tMax - tMin>
  [193] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [194] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [195] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [197] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [199] pushint8 1
  [201] getlocal 5
  [203] add
  [204] setlocal 5
  [206] endrepeat [ 59]
  [208] getlocal 0 .............................. <tCols>
  [210] pusharglistnoret 1 ...................... <tCols>
  [212] extcall 47 .............................. return tCols
  [214] ret
end

on centerRotateMovXY me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] getprop 25 .............................. <pDiscoCounter>
  [  7] pushint8 24 ............................. <24>
  [  9] mod ..................................... <pDiscoCounter mod 24>
  [ 10] setlocal 1 .............................. tPlace = pDiscoCounter mod 24
  [ 12] getlocal 1 .............................. <tPlace>
  [ 14] pushint8 6 .............................. <6>
  [ 16] lt ...................................... <tPlace < 6>
  [ 17] jmpifz [ 34] ............................ if tPlace < 6 then / else
  [ 20] getlocal 1 .............................. <tPlace>
  [ 22] pushint8 1 .............................. <1>
  [ 24] add ..................................... <tPlace + 1>
  [ 25] setlocal 2 .............................. tCenterX = tPlace + 1
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 3 .............................. tCenterY = 1
  [ 31] jmp [100]
  [ 34] getlocal 1 .............................. <tPlace>
  [ 36] pushint8 13 ............................. <13>
  [ 38] lt ...................................... <tPlace < 13>
  [ 39] jmpifz [ 56] ............................ if tPlace < 13 then / else
  [ 42] pushint8 7 .............................. <7>
  [ 44] setlocal 2 .............................. tCenterX = 7
  [ 46] getlocal 1 .............................. <tPlace>
  [ 48] pushint8 5 .............................. <5>
  [ 50] sub ..................................... <tPlace - 5>
  [ 51] setlocal 3 .............................. tCenterY = tPlace - 5
  [ 53] jmp [100]
  [ 56] getlocal 1 .............................. <tPlace>
  [ 58] pushint8 18 ............................. <18>
  [ 60] lt ...................................... <tPlace < 18>
  [ 61] jmpifz [ 85] ............................ if tPlace < 18 then / else
  [ 64] getlocal 1 .............................. <tPlace>
  [ 66] pushint8 18 ............................. <18>
  [ 68] sub ..................................... <tPlace - 18>
  [ 69] pusharglist 1 ........................... <tPlace - 18>
  [ 71] extcall 103 ............................. <abs(tPlace - 18)>
  [ 73] pushint8 1 .............................. <1>
  [ 75] add ..................................... <abs(tPlace - 18) + 1>
  [ 76] setlocal 2 .............................. tCenterX = abs(tPlace - 18) + 1
  [ 78] pushint8 7 .............................. <7>
  [ 80] setlocal 3 .............................. tCenterY = 7
  [ 82] jmp [100]
  [ 85] pushint8 1 .............................. <1>
  [ 87] setlocal 2 .............................. tCenterX = 1
  [ 89] getlocal 1 .............................. <tPlace>
  [ 91] pushint8 25 ............................. <25>
  [ 93] sub ..................................... <tPlace - 25>
  [ 94] pusharglist 1 ........................... <tPlace - 25>
  [ 96] extcall 103 ............................. <abs(tPlace - 25)>
  [ 98] setlocal 3 .............................. tCenterY = abs(tPlace - 25)
  [100] getparam 1 .............................. <tX>
  [102] getlocal 2 .............................. <tCenterX>
  [104] sub ..................................... <tX - tCenterX>
  [105] pusharglist 1 ........................... <tX - tCenterX>
  [107] extcall 103 ............................. <abs(tX - tCenterX)>
  [109] getparam 2 .............................. <tY>
  [111] getlocal 3 .............................. <tCenterY>
  [113] sub ..................................... <tY - tCenterY>
  [114] pusharglist 1 ........................... <tY - tCenterY>
  [116] extcall 103 ............................. <abs(tY - tCenterY)>
  [118] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [119] setlocal 4 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [121] getparam 4 .............................. <tMultiplier>
  [123] getlocal 4 .............................. <tCenterMultiplier>
  [125] mul ..................................... <tMultiplier * tCenterMultiplier>
  [126] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [128] pushint8 1 .............................. <1>
  [130] setlocal 5
  [132] getlocal 5
  [134] pushint8 3 .............................. <3>
  [136] lteq
  [137] jmpifz [287] ............................ repeat with k = 1 to 3
  [140] getlocal 0 .............................. <tCols>
  [142] getlocal 5 .............................. <k>
  [144] getparam 3 .............................. <tOrCols>
  [146] getlocal 5 .............................. <k>
  [148] pusharglist 2 ........................... <tOrCols, k>
  [150] objcall 56 .............................. <tOrCols[k]>
  [152] getparam 1 .............................. <tX>
  [154] getparam 2 .............................. <tY>
  [156] add ..................................... <tX + tY>
  [157] add ..................................... <tOrCols[k] + (tX + tY)>
  [158] getparam 4 .............................. <tMultiplier>
  [160] getprop 24 .............................. <pSin>
  [162] mul ..................................... <tMultiplier * pSin>
  [163] getparam 5 .............................. <tSpeed>
  [165] mul ..................................... <tMultiplier * pSin * tSpeed>
  [166] pushfloat32 7.0 ......................... <7.0>
  [171] div ..................................... <tMultiplier * pSin * tSpeed / 7.0>
  [172] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)>
  [173] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)>
  [175] objcall 91 .............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)
  [177] getparam 6 .............................. <tRange>
  [179] getlocal 5 .............................. <k>
  [181] pushint8 3 .............................. <3>
  [183] add ..................................... <k + 3>
  [184] pusharglist 2 ........................... <tRange, k + 3>
  [186] objcall 56 .............................. <tRange[k + 3]>
  [188] setlocal 6 .............................. tMax = tRange[k + 3]
  [190] getparam 6 .............................. <tRange>
  [192] getlocal 5 .............................. <k>
  [194] pusharglist 2 ........................... <tRange, k>
  [196] objcall 56 .............................. <tRange[k]>
  [198] setlocal 7 .............................. tMin = tRange[k]
  [200] getlocal 0 .............................. <tCols>
  [202] getlocal 5 .............................. <k>
  [204] pusharglist 2 ........................... <tCols, k>
  [206] objcall 56 .............................. <tCols[k]>
  [208] getlocal 6 .............................. <tMax>
  [210] gt ...................................... <tCols[k] > tMax>
  [211] jmpifz [239] ............................ if tCols[k] > tMax then
  [214] getlocal 0 .............................. <tCols>
  [216] getlocal 5 .............................. <k>
  [218] getlocal 6 .............................. <tMax>
  [220] getlocal 0 .............................. <tCols>
  [222] getlocal 5 .............................. <k>
  [224] pusharglist 2 ........................... <tCols, k>
  [226] objcall 56 .............................. <tCols[k]>
  [228] getlocal 6 .............................. <tMax>
  [230] getlocal 7 .............................. <tMin>
  [232] sub ..................................... <tMax - tMin>
  [233] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [234] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [235] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [237] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [239] getlocal 0 .............................. <tCols>
  [241] getlocal 5 .............................. <k>
  [243] pusharglist 2 ........................... <tCols, k>
  [245] objcall 56 .............................. <tCols[k]>
  [247] getlocal 7 .............................. <tMin>
  [249] lt ...................................... <tCols[k] < tMin>
  [250] jmpifz [278] ............................ if tCols[k] < tMin then
  [253] getlocal 0 .............................. <tCols>
  [255] getlocal 5 .............................. <k>
  [257] getlocal 7 .............................. <tMin>
  [259] getlocal 0 .............................. <tCols>
  [261] getlocal 5 .............................. <k>
  [263] pusharglist 2 ........................... <tCols, k>
  [265] objcall 56 .............................. <tCols[k]>
  [267] getlocal 6 .............................. <tMax>
  [269] getlocal 7 .............................. <tMin>
  [271] sub ..................................... <tMax - tMin>
  [272] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [273] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [274] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [276] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [278] pushint8 1
  [280] getlocal 5
  [282] add
  [283] setlocal 5
  [285] endrepeat [132]
  [287] getlocal 0 .............................. <tCols>
  [289] pusharglistnoret 1 ...................... <tCols>
  [291] extcall 47 .............................. return tCols
  [293] ret
end

on arrow me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] getprop 25 .............................. <pDiscoCounter>
  [  7] pushint8 14 ............................. <14>
  [  9] mod ..................................... <pDiscoCounter mod 14>
  [ 10] pushint8 7 .............................. <7>
  [ 12] sub ..................................... <(pDiscoCounter mod 14) - 7>
  [ 13] pusharglist 1 ........................... <(pDiscoCounter mod 14) - 7>
  [ 15] extcall 103 ............................. <abs((pDiscoCounter mod 14) - 7)>
  [ 17] setlocal 1 .............................. tRow = abs((pDiscoCounter mod 14) - 7)
  [ 19] getlocal 1 .............................. <tRow>
  [ 21] setlocal 2 .............................. tCenterX = tRow
  [ 23] pushzero ................................ <0>
  [ 24] setlocal 3 .............................. tCenterY = 0
  [ 26] getparam 1 .............................. <tX>
  [ 28] getlocal 2 .............................. <tCenterX>
  [ 30] sub ..................................... <tX - tCenterX>
  [ 31] pusharglist 1 ........................... <tX - tCenterX>
  [ 33] extcall 103 ............................. <abs(tX - tCenterX)>
  [ 35] getparam 2 .............................. <tY>
  [ 37] getlocal 3 .............................. <tCenterY>
  [ 39] sub ..................................... <tY - tCenterY>
  [ 40] pusharglist 1 ........................... <tY - tCenterY>
  [ 42] extcall 103 ............................. <abs(tY - tCenterY)>
  [ 44] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [ 45] setlocal 4 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [ 47] getparam 4 .............................. <tMultiplier>
  [ 49] getlocal 4 .............................. <tCenterMultiplier>
  [ 51] mul ..................................... <tMultiplier * tCenterMultiplier>
  [ 52] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [ 54] pushint8 1 .............................. <1>
  [ 56] setlocal 5
  [ 58] getlocal 5
  [ 60] pushint8 3 .............................. <3>
  [ 62] lteq
  [ 63] jmpifz [207] ............................ repeat with k = 1 to 3
  [ 66] getlocal 0 .............................. <tCols>
  [ 68] getlocal 5 .............................. <k>
  [ 70] getparam 3 .............................. <tOrCols>
  [ 72] getlocal 5 .............................. <k>
  [ 74] pusharglist 2 ........................... <tOrCols, k>
  [ 76] objcall 56 .............................. <tOrCols[k]>
  [ 78] getparam 1 .............................. <tX>
  [ 80] getparam 2 .............................. <tY>
  [ 82] add ..................................... <tX + tY>
  [ 83] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 84] getparam 4 .............................. <tMultiplier>
  [ 86] getprop 24 .............................. <pSin>
  [ 88] mul ..................................... <tMultiplier * pSin>
  [ 89] getparam 5 .............................. <tSpeed>
  [ 91] mul ..................................... <tMultiplier * pSin * tSpeed>
  [ 92] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 93] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 95] objcall 91 .............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)
  [ 97] getparam 6 .............................. <tRange>
  [ 99] getlocal 5 .............................. <k>
  [101] pushint8 3 .............................. <3>
  [103] add ..................................... <k + 3>
  [104] pusharglist 2 ........................... <tRange, k + 3>
  [106] objcall 56 .............................. <tRange[k + 3]>
  [108] setlocal 6 .............................. tMax = tRange[k + 3]
  [110] getparam 6 .............................. <tRange>
  [112] getlocal 5 .............................. <k>
  [114] pusharglist 2 ........................... <tRange, k>
  [116] objcall 56 .............................. <tRange[k]>
  [118] setlocal 7 .............................. tMin = tRange[k]
  [120] getlocal 0 .............................. <tCols>
  [122] getlocal 5 .............................. <k>
  [124] pusharglist 2 ........................... <tCols, k>
  [126] objcall 56 .............................. <tCols[k]>
  [128] getlocal 6 .............................. <tMax>
  [130] gt ...................................... <tCols[k] > tMax>
  [131] jmpifz [159] ............................ if tCols[k] > tMax then
  [134] getlocal 0 .............................. <tCols>
  [136] getlocal 5 .............................. <k>
  [138] getlocal 6 .............................. <tMax>
  [140] getlocal 0 .............................. <tCols>
  [142] getlocal 5 .............................. <k>
  [144] pusharglist 2 ........................... <tCols, k>
  [146] objcall 56 .............................. <tCols[k]>
  [148] getlocal 6 .............................. <tMax>
  [150] getlocal 7 .............................. <tMin>
  [152] sub ..................................... <tMax - tMin>
  [153] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [154] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [155] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [157] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [159] getlocal 0 .............................. <tCols>
  [161] getlocal 5 .............................. <k>
  [163] pusharglist 2 ........................... <tCols, k>
  [165] objcall 56 .............................. <tCols[k]>
  [167] getlocal 7 .............................. <tMin>
  [169] lt ...................................... <tCols[k] < tMin>
  [170] jmpifz [198] ............................ if tCols[k] < tMin then
  [173] getlocal 0 .............................. <tCols>
  [175] getlocal 5 .............................. <k>
  [177] getlocal 7 .............................. <tMin>
  [179] getlocal 0 .............................. <tCols>
  [181] getlocal 5 .............................. <k>
  [183] pusharglist 2 ........................... <tCols, k>
  [185] objcall 56 .............................. <tCols[k]>
  [187] getlocal 6 .............................. <tMax>
  [189] getlocal 7 .............................. <tMin>
  [191] sub ..................................... <tMax - tMin>
  [192] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [193] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [194] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [196] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [198] pushint8 1
  [200] getlocal 5
  [202] add
  [203] setlocal 5
  [205] endrepeat [ 58]
  [207] getlocal 0 .............................. <tCols>
  [209] pusharglistnoret 1 ...................... <tCols>
  [211] extcall 47 .............................. return tCols
  [213] ret
end

on centerRotate me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pushint8 4 .............................. <4>
  [  2] setlocal 0 .............................. tCenterX = 4
  [  4] pushint8 4 .............................. <4>
  [  6] setlocal 1 .............................. tCenterY = 4
  [  8] getparam 1 .............................. <tX>
  [ 10] getlocal 0 .............................. <tCenterX>
  [ 12] sub ..................................... <tX - tCenterX>
  [ 13] pusharglist 1 ........................... <tX - tCenterX>
  [ 15] extcall 103 ............................. <abs(tX - tCenterX)>
  [ 17] getparam 2 .............................. <tY>
  [ 19] getlocal 1 .............................. <tCenterY>
  [ 21] sub ..................................... <tY - tCenterY>
  [ 22] pusharglist 1 ........................... <tY - tCenterY>
  [ 24] extcall 103 ............................. <abs(tY - tCenterY)>
  [ 26] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [ 27] setlocal 2 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [ 29] getparam 4 .............................. <tMultiplier>
  [ 31] getlocal 2 .............................. <tCenterMultiplier>
  [ 33] mul ..................................... <tMultiplier * tCenterMultiplier>
  [ 34] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [ 36] pusharglist 0 ........................... <[]>
  [ 38] pushlist ................................ <[]>
  [ 39] setlocal 3 .............................. tCols = []
  [ 41] pushint8 1 .............................. <1>
  [ 43] setlocal 4
  [ 45] getlocal 4
  [ 47] pushint8 3 .............................. <3>
  [ 49] lteq
  [ 50] jmpifz [194] ............................ repeat with k = 1 to 3
  [ 53] getlocal 3 .............................. <tCols>
  [ 55] getlocal 4 .............................. <k>
  [ 57] getparam 3 .............................. <tOrCols>
  [ 59] getlocal 4 .............................. <k>
  [ 61] pusharglist 2 ........................... <tOrCols, k>
  [ 63] objcall 56 .............................. <tOrCols[k]>
  [ 65] getparam 1 .............................. <tX>
  [ 67] getparam 2 .............................. <tY>
  [ 69] add ..................................... <tX + tY>
  [ 70] getparam 4 .............................. <tMultiplier>
  [ 72] mul ..................................... <(tX + tY) * tMultiplier>
  [ 73] add ..................................... <tOrCols[k] + ((tX + tY) * tMultiplier)>
  [ 74] getprop 24 .............................. <pSin>
  [ 76] getparam 5 .............................. <tSpeed>
  [ 78] mul ..................................... <pSin * tSpeed>
  [ 79] add ..................................... <tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)>
  [ 80] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)>
  [ 82] objcall 91 .............................. tCols[k] = tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)
  [ 84] getparam 6 .............................. <tRange>
  [ 86] getlocal 4 .............................. <k>
  [ 88] pushint8 3 .............................. <3>
  [ 90] add ..................................... <k + 3>
  [ 91] pusharglist 2 ........................... <tRange, k + 3>
  [ 93] objcall 56 .............................. <tRange[k + 3]>
  [ 95] setlocal 5 .............................. tMax = tRange[k + 3]
  [ 97] getparam 6 .............................. <tRange>
  [ 99] getlocal 4 .............................. <k>
  [101] pusharglist 2 ........................... <tRange, k>
  [103] objcall 56 .............................. <tRange[k]>
  [105] setlocal 6 .............................. tMin = tRange[k]
  [107] getlocal 3 .............................. <tCols>
  [109] getlocal 4 .............................. <k>
  [111] pusharglist 2 ........................... <tCols, k>
  [113] objcall 56 .............................. <tCols[k]>
  [115] getlocal 5 .............................. <tMax>
  [117] gt ...................................... <tCols[k] > tMax>
  [118] jmpifz [146] ............................ if tCols[k] > tMax then
  [121] getlocal 3 .............................. <tCols>
  [123] getlocal 4 .............................. <k>
  [125] getlocal 5 .............................. <tMax>
  [127] getlocal 3 .............................. <tCols>
  [129] getlocal 4 .............................. <k>
  [131] pusharglist 2 ........................... <tCols, k>
  [133] objcall 56 .............................. <tCols[k]>
  [135] getlocal 5 .............................. <tMax>
  [137] getlocal 6 .............................. <tMin>
  [139] sub ..................................... <tMax - tMin>
  [140] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [141] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [142] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [144] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [146] getlocal 3 .............................. <tCols>
  [148] getlocal 4 .............................. <k>
  [150] pusharglist 2 ........................... <tCols, k>
  [152] objcall 56 .............................. <tCols[k]>
  [154] getlocal 6 .............................. <tMin>
  [156] lt ...................................... <tCols[k] < tMin>
  [157] jmpifz [185] ............................ if tCols[k] < tMin then
  [160] getlocal 3 .............................. <tCols>
  [162] getlocal 4 .............................. <k>
  [164] getlocal 6 .............................. <tMin>
  [166] getlocal 3 .............................. <tCols>
  [168] getlocal 4 .............................. <k>
  [170] pusharglist 2 ........................... <tCols, k>
  [172] objcall 56 .............................. <tCols[k]>
  [174] getlocal 5 .............................. <tMax>
  [176] getlocal 6 .............................. <tMin>
  [178] sub ..................................... <tMax - tMin>
  [179] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [180] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [181] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [183] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [185] pushint8 1
  [187] getlocal 4
  [189] add
  [190] setlocal 4
  [192] endrepeat [ 45]
  [194] getlocal 3 .............................. <tCols>
  [196] pusharglistnoret 1 ...................... <tCols>
  [198] extcall 47 .............................. return tCols
  [200] ret
end

on animDiscoBall me
  [  0] getprop 28 .............................. <pDbFrameCount>
  [  2] pushint8 1 .............................. <1>
  [  4] add ..................................... <pDbFrameCount + 1>
  [  5] setprop 28 .............................. pDbFrameCount = pDbFrameCount + 1
  [  7] getprop 28 .............................. <pDbFrameCount>
  [  9] pushint8 2 .............................. <2>
  [ 11] mod ..................................... <pDbFrameCount mod 2>
  [ 12] pushzero ................................ <0>
  [ 13] nteq .................................... <(pDbFrameCount mod 2) <> 0>
  [ 14] jmpifz [ 21] ............................ if (pDbFrameCount mod 2) <> 0 then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 47 .............................. return 
  [ 21] getprop 32 .............................. <pDbDestRect>
  [ 23] getobjprop 34 ........................... <pDbDestRect.ilk>
  [ 25] pushsymb 33 ............................. <#rect>
  [ 27] eq ...................................... <pDbDestRect.ilk = #rect>
  [ 28] jmpifz [164] ............................ if pDbDestRect.ilk = #rect then
  [ 31] getprop 29 .............................. <pDbAnimFrame>
  [ 33] pushint8 1 .............................. <1>
  [ 35] add ..................................... <pDbAnimFrame + 1>
  [ 36] setprop 29 .............................. pDbAnimFrame = pDbAnimFrame + 1
  [ 38] getprop 29 .............................. <pDbAnimFrame>
  [ 40] pushint8 9 .............................. <9>
  [ 42] gt ...................................... <pDbAnimFrame > 9>
  [ 43] jmpifz [145] ............................ if pDbAnimFrame > 9 then
  [ 46] pushint8 1 .............................. <1>
  [ 48] setprop 29 .............................. pDbAnimFrame = 1
  [ 50] pushint16 1000 .......................... <1000>
  [ 53] pusharglist 1 ........................... <1000>
  [ 55] extcall 94 .............................. <random(1000)>
  [ 57] setlocal 0 .............................. tRandomSin = random(1000)
  [ 59] pushint8 100 ............................ <100>
  [ 61] pusharglist 1 ........................... <100>
  [ 63] extcall 94 .............................. <random(100)>
  [ 65] setlocal 1 .............................. tRandomDist = random(100)
  [ 67] getlocal 0 .............................. <tRandomSin>
  [ 69] pusharglist 1 ........................... <tRandomSin>
  [ 71] extcall 102 ............................. <sin(tRandomSin)>
  [ 73] getprop 32 .............................. <pDbDestRect>
  [ 75] getobjprop 80 ........................... <pDbDestRect.width>
  [ 77] mul ..................................... <sin(tRandomSin) * pDbDestRect.width>
  [ 78] pushint16 200 ........................... <200>
  [ 81] div ..................................... <sin(tRandomSin) * pDbDestRect.width / 200>
  [ 82] getlocal 1 .............................. <tRandomDist>
  [ 84] mul ..................................... <sin(tRandomSin) * pDbDestRect.width / 200 * tRandomDist>
  [ 85] getprop 32 .............................. <pDbDestRect>
  [ 87] getobjprop 109 .......................... <pDbDestRect.left>
  [ 89] add ..................................... <(sin(tRandomSin) * pDbDestRect.width / 200 * tRandomDist) + pDbDestRect.left>
  [ 90] getprop 32 .............................. <pDbDestRect>
  [ 92] getobjprop 80 ........................... <pDbDestRect.width>
  [ 94] pushint8 2 .............................. <2>
  [ 96] div ..................................... <pDbDestRect.width / 2>
  [ 97] add ..................................... <(sin(tRandomSin) * pDbDestRect.width / 200 * tRandomDist) + pDbDestRect.left + (pDbDestRect.width / 2)>
  [ 98] setlocal 2 .............................. tX = (sin(tRandomSin) * pDbDestRect.width / 200 * tRandomDist) + pDbDestRect.left + (pDbDestRect.width / 2)
  [100] getlocal 0 .............................. <tRandomSin>
  [102] pusharglist 1 ........................... <tRandomSin>
  [104] extcall 110 ............................. <cos(tRandomSin)>
  [106] getprop 32 .............................. <pDbDestRect>
  [108] getobjprop 111 .......................... <pDbDestRect.height>
  [110] mul ..................................... <cos(tRandomSin) * pDbDestRect.height>
  [111] pushint16 200 ........................... <200>
  [114] div ..................................... <cos(tRandomSin) * pDbDestRect.height / 200>
  [115] getlocal 1 .............................. <tRandomDist>
  [117] mul ..................................... <cos(tRandomSin) * pDbDestRect.height / 200 * tRandomDist>
  [118] getprop 32 .............................. <pDbDestRect>
  [120] getobjprop 112 .......................... <pDbDestRect.top>
  [122] add ..................................... <(cos(tRandomSin) * pDbDestRect.height / 200 * tRandomDist) + pDbDestRect.top>
  [123] getprop 32 .............................. <pDbDestRect>
  [125] getobjprop 111 .......................... <pDbDestRect.height>
  [127] pushint8 2 .............................. <2>
  [129] div ..................................... <pDbDestRect.height / 2>
  [130] add ..................................... <(cos(tRandomSin) * pDbDestRect.height / 200 * tRandomDist) + pDbDestRect.top + (pDbDestRect.height / 2)>
  [131] setlocal 3 .............................. tY = (cos(tRandomSin) * pDbDestRect.height / 200 * tRandomDist) + pDbDestRect.top + (pDbDestRect.height / 2)
  [133] getprop 30 .............................. <pDbStarSpr>
  [135] getlocal 2 .............................. <tX>
  [137] getlocal 3 .............................. <tY>
  [139] pusharglist 2 ........................... <tX, tY>
  [141] extcall 113 ............................. <point(tX, tY)>
  [143] setobjprop 114 .......................... pDbStarSpr.loc = point(tX, tY)
  [145] getprop 30 .............................. <pDbStarSpr>
  [147] getchainedprop 35 ....................... <pDbStarSpr.sprite>
  [149] pushcons 14 ............................. <"mammothblink">
  [151] getprop 29 .............................. <pDbAnimFrame>
  [153] joinstr ................................. <"mammothblink" & pDbAnimFrame>
  [154] pusharglist 1 ........................... <"mammothblink" & pDbAnimFrame>
  [156] extcall 41 .............................. <getmemnum("mammothblink" & pDbAnimFrame)>
  [158] pusharglist 1 ........................... <getmemnum("mammothblink" & pDbAnimFrame)>
  [160] extcall 40 .............................. <member(getmemnum("mammothblink" & pDbAnimFrame))>
  [162] setobjprop 40 ........................... pDbStarSpr.sprite.member = member(getmemnum("mammothblink" & pDbAnimFrame))
  [164] ret
end

on getSpriteList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 20 .............................. pSpriteList = []
  [  5] pushsymb 118 ............................ <#room>
  [  7] pusharglist 1 ........................... <#room>
  [  9] extcall 117 ............................. <getThread(#room)>
  [ 11] pusharglist 1 ........................... <getThread(#room)>
  [ 13] objcall 119 ............................. <getThread(#room).getInterface()>
  [ 15] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 17] objcall 120 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 19] setlocal 0 .............................. tObj = getThread(#room).getInterface().getRoomVisualizer()
  [ 21] getlocal 0 .............................. <tObj>
  [ 23] pushzero ................................ <0>
  [ 24] eq ...................................... <tObj = 0>
  [ 25] jmpifz [ 33] ............................ if tObj = 0 then
  [ 28] pushzero ................................ <0>
  [ 29] pusharglistnoret 1 ...................... <0>
  [ 31] extcall 47 .............................. return 0
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 1
  [ 37] getlocal 1
  [ 39] pushint8 49 ............................. <49>
  [ 41] lteq
  [ 42] jmpifz [ 93] ............................ repeat with i = 1 to 49
  [ 45] getlocal 0 .............................. <tObj>
  [ 47] pushcons 16 ............................. <"discotile">
  [ 49] getlocal 1 .............................. <i>
  [ 51] joinstr ................................. <"discotile" & i>
  [ 52] pusharglist 2 ........................... <tObj, "discotile" & i>
  [ 54] objcall 121 ............................. <tObj.getSprById("discotile" & i)>
  [ 56] setlocal 2 .............................. tSp = tObj.getSprById("discotile" & i)
  [ 58] getlocal 2 .............................. <tSp>
  [ 60] pushint8 1 .............................. <1>
  [ 62] lt ...................................... <tSp < 1>
  [ 63] jmpifz [ 76] ............................ if tSp < 1 then
  [ 66] pusharglist 0 ........................... <[]>
  [ 68] pushlist ................................ <[]>
  [ 69] setprop 20 .............................. pSpriteList = []
  [ 71] pushzero ................................ <0>
  [ 72] pusharglistnoret 1 ...................... <0>
  [ 74] extcall 47 .............................. return 0
  [ 76] getprop 20 .............................. <pSpriteList>
  [ 78] getlocal 2 .............................. <tSp>
  [ 80] pusharglistnoret 2 ...................... <pSpriteList, tSp>
  [ 82] objcall 46 .............................. pSpriteList.add(tSp)
  [ 84] pushint8 1
  [ 86] getlocal 1
  [ 88] add
  [ 89] setlocal 1
  [ 91] endrepeat [ 37]
  [ 93] getlocal 0 .............................. <tObj>
  [ 95] pushcons 17 ............................. <"disco_mirrorball">
  [ 97] pusharglist 2 ........................... <tObj, "disco_mirrorball">
  [ 99] objcall 121 ............................. <tObj.getSprById("disco_mirrorball")>
  [101] setlocal 2 .............................. tSp = tObj.getSprById("disco_mirrorball")
  [103] getlocal 2 .............................. <tSp>
  [105] pushint8 1 .............................. <1>
  [107] lt ...................................... <tSp < 1>
  [108] jmpifz [116] ............................ if tSp < 1 then
  [111] pushzero ................................ <0>
  [112] pusharglistnoret 1 ...................... <0>
  [114] extcall 47 .............................. return 0
  [116] getlocal 2 .............................. <tSp>
  [118] pushsymb 33 ............................. <#rect>
  [120] pushint8 1 .............................. <1>
  [122] pusharglist 3 ........................... <tSp, #rect, 1>
  [124] objcall 45 .............................. <tSp.rect[1]>
  [126] getlocal 2 .............................. <tSp>
  [128] pushsymb 33 ............................. <#rect>
  [130] pushint8 4 .............................. <4>
  [132] pusharglist 3 ........................... <tSp, #rect, 4>
  [134] objcall 45 .............................. <tSp.rect[4]>
  [136] getlocal 2 .............................. <tSp>
  [138] getobjprop 80 ........................... <tSp.width>
  [140] sub ..................................... <tSp.rect[4] - tSp.width>
  [141] getlocal 2 .............................. <tSp>
  [143] pushsymb 33 ............................. <#rect>
  [145] pushint8 3 .............................. <3>
  [147] pusharglist 3 ........................... <tSp, #rect, 3>
  [149] objcall 45 .............................. <tSp.rect[3]>
  [151] getlocal 2 .............................. <tSp>
  [153] pushsymb 33 ............................. <#rect>
  [155] pushint8 4 .............................. <4>
  [157] pusharglist 3 ........................... <tSp, #rect, 4>
  [159] objcall 45 .............................. <tSp.rect[4]>
  [161] pusharglist 4 ........................... <tSp.rect[1], tSp.rect[4] - tSp.width, tSp.rect[3], tSp.rect[4]>
  [163] extcall 33 .............................. <rect(tSp.rect[1], tSp.rect[4] - tSp.width, tSp.rect[3], tSp.rect[4])>
  [165] setprop 32 .............................. pDbDestRect = rect(tSp.rect[1], tSp.rect[4] - tSp.width, tSp.rect[3], tSp.rect[4])
  [167] getprop 30 .............................. <pDbStarSpr>
  [169] getlocal 2 .............................. <tSp>
  [171] getobjprop 122 .......................... <tSp.locZ>
  [173] pushint8 1 .............................. <1>
  [175] add ..................................... <tSp.locZ + 1>
  [176] setobjprop 122 .......................... pDbStarSpr.locZ = tSp.locZ + 1
  [178] pushint8 1 .............................. <1>
  [180] pusharglistnoret 1 ...................... <1>
  [182] extcall 47 .............................. return 1
  [184] ret
end
