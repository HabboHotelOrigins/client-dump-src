property pAnimThisUpdate, pSin, pDiscoCounter, pAnimTimer, pSpriteList, pGlowList, pDiscoStyleList, pDiscoStyle, pLightTimer, pColorOrder, pItemObjList

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 125 ............................. pItemObjList = []
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 37 .............................. <me.getID()>
  [ 11] pusharglistnoret 1 ...................... <me.getID()>
  [ 13] extcall 53 .............................. receiveUpdate(me.getID())
  [ 15] pushsymb 118 ............................ <#room>
  [ 17] pusharglist 1 ........................... <#room>
  [ 19] extcall 117 ............................. <getThread(#room)>
  [ 21] pusharglist 1 ........................... <getThread(#room)>
  [ 23] objcall 119 ............................. <getThread(#room).getInterface()>
  [ 25] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 27] objcall 120 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 29] setlocal 0 .............................. tVisObj = getThread(#room).getInterface().getRoomVisualizer()
  [ 31] pushint8 1 .............................. <1>
  [ 33] setlocal 1 .............................. i = 1
  [ 35] pushint8 1 .............................. <1>
  [ 37] jmpifz [101] ............................ repeat while 1
  [ 40] getlocal 0 .............................. <tVisObj>
  [ 42] pushcons 0 .............................. <"duck">
  [ 44] getlocal 1 .............................. <i>
  [ 46] joinstr ................................. <"duck" & i>
  [ 47] pusharglist 2 ........................... <tVisObj, "duck" & i>
  [ 49] objcall 121 ............................. <tVisObj.getSprById("duck" & i)>
  [ 51] setlocal 2 .............................. tSpr = tVisObj.getSprById("duck" & i)
  [ 53] getlocal 2 .............................. <tSpr>
  [ 55] pushzero ................................ <0>
  [ 56] nteq .................................... <tSpr <> 0>
  [ 57] jmpifz [ 89] ............................ if tSpr <> 0 then / else
  [ 60] pushsymb 127 ............................ <#temp>
  [ 62] pushcons 1 .............................. <"Duck Class">
  [ 64] pusharglist 2 ........................... <#temp, "Duck Class">
  [ 66] extcall 126 ............................. <createObject(#temp, "Duck Class")>
  [ 68] setlocal 3 .............................. tObj = createObject(#temp, "Duck Class")
  [ 70] getlocal 3 .............................. <tObj>
  [ 72] getlocal 2 .............................. <tSpr>
  [ 74] pusharglistnoret 2 ...................... <tObj, tSpr>
  [ 76] objcall 128 ............................. tObj.define(tSpr)
  [ 78] getprop 125 ............................. <pItemObjList>
  [ 80] getlocal 3 .............................. <tObj>
  [ 82] pusharglistnoret 2 ...................... <pItemObjList, tObj>
  [ 84] objcall 46 .............................. pItemObjList.add(tObj)
  [ 86] jmp [ 92]
  [ 89] jmp [101] ............................... exit repeat
  [ 92] getlocal 1 .............................. <i>
  [ 94] pushint8 1 .............................. <1>
  [ 96] add ..................................... <i + 1>
  [ 97] setlocal 1 .............................. i = i + 1
  [ 99] endrepeat [ 35]
  [101] pushint8 34 ............................. <34>
  [103] get 7 ................................... <the timer>
  [105] setprop 129 ............................. pAnimTimer = the timer
  [107] pusharglist 0 ........................... <[]>
  [109] pushlist ................................ <[]>
  [110] setprop 20 .............................. pSpriteList = []
  [112] pusharglist 0 ........................... <[]>
  [114] pushlist ................................ <[]>
  [115] setprop 130 ............................. pGlowList = []
  [117] pushint8 1 .............................. <1>
  [119] setprop 21 .............................. pDiscoStyle = 1
  [121] pushzero ................................ <0>
  [122] setprop 22 .............................. pLightTimer = 0
  [124] pushzero ................................ <0>
  [125] setprop 23 .............................. pAnimThisUpdate = 0
  [127] pushcons 2 .............................. <22.39999999999999858>
  [129] setprop 24 .............................. pSin = 22.39999999999999858
  [131] pushint8 100 ............................ <100>
  [133] setprop 25 .............................. pDiscoCounter = 100
  [135] pushzero ................................ <0>
  [136] pushint8 3 .............................. <3>
  [138] pushint8 2 .............................. <2>
  [140] pushint8 1 .............................. <1>
  [142] pushint8 2 .............................. <2>
  [144] pushint8 3 .............................. <3>
  [146] pushzero ................................ <0>
  [147] pushint8 6 .............................. <6>
  [149] pushint8 5 .............................. <5>
  [151] pushint8 4 .............................. <4>
  [153] pushint8 5 .............................. <5>
  [155] pushint8 6 .............................. <6>
  [157] pushzero ................................ <0>
  [158] pushint8 9 .............................. <9>
  [160] pushint8 8 .............................. <8>
  [162] pushint8 7 .............................. <7>
  [164] pushint8 8 .............................. <8>
  [166] pushint8 9 .............................. <9>
  [168] pusharglist 18 .......................... <[0, 3, 2, 1, 2, 3, 0, 6, 5, 4, 5, 6, 0, 9, 8, 7, 8, 9]>
  [170] pushlist ................................ <[0, 3, 2, 1, 2, 3, 0, 6, 5, 4, 5, 6, 0, 9, 8, 7, 8, 9]>
  [171] setprop 131 ............................. pColorOrder = [0, 3, 2, 1, 2, 3, 0, 6, 5, 4, 5, 6, 0, 9, 8, 7, 8, 9]
  [173] pusharglist 0 ........................... <[]>
  [175] pushlist ................................ <[]>
  [176] setprop 39 .............................. pDiscoStyleList = []
  [178] pushcons 3 .............................. <"discofloor">
  [180] pusharglist 1 ........................... <"discofloor">
  [182] extcall 41 .............................. <getmemnum("discofloor")>
  [184] pushzero ................................ <0>
  [185] lteq .................................... <getmemnum("discofloor") <= 0>
  [186] jmpifz [194] ............................ if getmemnum("discofloor") <= 0 then
  [189] pushzero ................................ <0>
  [190] pusharglistnoret 1 ...................... <0>
  [192] extcall 47 .............................. return 0
  [194] pushcons 3 .............................. <"discofloor">
  [196] pusharglist 1 ........................... <"discofloor">
  [198] extcall 41 .............................. <getmemnum("discofloor")>
  [200] pusharglist 1 ........................... <getmemnum("discofloor")>
  [202] extcall 40 .............................. <member(getmemnum("discofloor"))>
  [204] getobjprop 132 .......................... <member(getmemnum("discofloor")).type>
  [206] pushsymb 133 ............................ <#field>
  [208] nteq .................................... <member(getmemnum("discofloor")).type <> #field>
  [209] jmpifz [217] ............................ if member(getmemnum("discofloor")).type <> #field then
  [212] pushzero ................................ <0>
  [213] pusharglistnoret 1 ...................... <0>
  [215] extcall 47 .............................. return 0
  [217] pushint8 1 .............................. <1>
  [219] setlocal 1
  [221] getlocal 1
  [223] pushcons 3 .............................. <"discofloor">
  [225] pusharglist 1 ........................... <"discofloor">
  [227] extcall 41 .............................. <getmemnum("discofloor")>
  [229] pusharglist 1 ........................... <getmemnum("discofloor")>
  [231] extcall 40 .............................. <member(getmemnum("discofloor"))>
  [233] pushsymb 42 ............................. <#line>
  [235] pusharglist 2 ........................... <member(getmemnum("discofloor")), #line>
  [237] objcall 43 .............................. <member(getmemnum("discofloor")).line.count>
  [239] lteq
  [240] jmpifz [278] ............................ repeat with i = 1 to member(getmemnum("discofloor")).line.count
  [243] getprop 39 .............................. <pDiscoStyleList>
  [245] pushcons 3 .............................. <"discofloor">
  [247] pusharglist 1 ........................... <"discofloor">
  [249] extcall 41 .............................. <getmemnum("discofloor")>
  [251] pusharglist 1 ........................... <getmemnum("discofloor")>
  [253] extcall 40 .............................. <member(getmemnum("discofloor"))>
  [255] getchainedprop 44 ....................... <member(getmemnum("discofloor")).text>
  [257] pushsymb 42 ............................. <#line>
  [259] getlocal 1 .............................. <i>
  [261] pusharglist 3 ........................... <member(getmemnum("discofloor")).text, #line, i>
  [263] objcall 45 .............................. <member(getmemnum("discofloor")).text.line[i]>
  [265] pusharglistnoret 2 ...................... <pDiscoStyleList, member(getmemnum("discofloor")).text.line[i]>
  [267] objcall 46 .............................. pDiscoStyleList.add(member(getmemnum("discofloor")).text.line[i])
  [269] pushint8 1
  [271] getlocal 1
  [273] add
  [274] setlocal 1
  [276] endrepeat [221]
  [278] pushint8 1 .............................. <1>
  [280] pusharglistnoret 1 ...................... <1>
  [282] extcall 47 .............................. return 1
  [284] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 37 .............................. <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 52 .............................. <removeUpdate(me.getID())>
  [ 10] pusharglistnoret 1 ...................... <removeUpdate(me.getID())>
  [ 12] extcall 47 .............................. return removeUpdate(me.getID())
  [ 14] ret
end

on prepare me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 37 .............................. <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 53 .............................. <receiveUpdate(me.getID())>
  [ 10] pusharglistnoret 1 ...................... <receiveUpdate(me.getID())>
  [ 12] extcall 47 .............................. return receiveUpdate(me.getID())
  [ 14] ret
end

on showprogram me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pusharglist 1 ........................... <tMsg>
  [  4] extcall 54 .............................. <voidp(tMsg)>
  [  6] jmpifz [ 14] ............................ if voidp(tMsg) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 47 .............................. return 0
  [ 14] getparam 1 .............................. <tMsg>
  [ 16] pushsymb 55 ............................. <#show_command>
  [ 18] pusharglist 2 ........................... <tMsg, #show_command>
  [ 20] objcall 56 .............................. <tMsg[#show_command]>
  [ 22] setlocal 0 .............................. tNum = tMsg[#show_command]
  [ 24] getparam 0 .............................. <me>
  [ 26] getlocal 0 .............................. <tNum>
  [ 28] pusharglist 2 ........................... <me, tNum>
  [ 30] objcall 4 ............................... <me.changeDiscoStyle(tNum)>
  [ 32] pusharglistnoret 1 ...................... <me.changeDiscoStyle(tNum)>
  [ 34] extcall 47 .............................. return me.changeDiscoStyle(tNum)
  [ 36] ret
end

on changeDiscoStyle me, tNr
  [  0] getparam 1 .............................. <tNr>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 31 .............................. <VOID>
  [  6] eq ...................................... <tNr = VOID>
  [  7] jmpifz [ 20] ............................ if tNr = VOID then / else
  [ 10] getprop 21 .............................. <pDiscoStyle>
  [ 12] pushint8 1 .............................. <1>
  [ 14] add ..................................... <pDiscoStyle + 1>
  [ 15] setprop 21 .............................. pDiscoStyle = pDiscoStyle + 1
  [ 17] jmp [ 24]
  [ 20] getparam 1 .............................. <tNr>
  [ 22] setprop 21 .............................. pDiscoStyle = tNr
  [ 24] getprop 21 .............................. <pDiscoStyle>
  [ 26] pushint8 1 .............................. <1>
  [ 28] lt ...................................... <pDiscoStyle < 1>
  [ 29] getprop 21 .............................. <pDiscoStyle>
  [ 31] getprop 39 .............................. <pDiscoStyleList>
  [ 33] getobjprop 43 ........................... <pDiscoStyleList.count>
  [ 35] gt ...................................... <pDiscoStyle > pDiscoStyleList.count>
  [ 36] or ...................................... <(pDiscoStyle < 1) or (pDiscoStyle > pDiscoStyleList.count)>
  [ 37] jmpifz [ 44] ............................ if (pDiscoStyle < 1) or (pDiscoStyle > pDiscoStyleList.count) then
  [ 40] pushint8 1 .............................. <1>
  [ 42] setprop 21 .............................. pDiscoStyle = 1
  [ 44] pushcons 2 .............................. <22.39999999999999858>
  [ 46] setprop 24 .............................. pSin = 22.39999999999999858
  [ 48] pushint8 100 ............................ <100>
  [ 50] setprop 25 .............................. pDiscoCounter = 100
  [ 52] pushint8 1 .............................. <1>
  [ 54] pusharglistnoret 1 ...................... <1>
  [ 56] extcall 47 .............................. return 1
  [ 58] ret
end

on update me
  [  0] pushsymb 5 .............................. <#update>
  [  2] getprop 125 ............................. <pItemObjList>
  [  4] pusharglistnoret 2 ...................... <#update, pItemObjList>
  [  6] extcall 136 ............................. call(#update, pItemObjList)
  [  8] getprop 23 .............................. <pAnimThisUpdate>
  [ 10] not ..................................... <not pAnimThisUpdate>
  [ 11] setprop 23 .............................. pAnimThisUpdate = not pAnimThisUpdate
  [ 13] getprop 23 .............................. <pAnimThisUpdate>
  [ 15] not ..................................... <not pAnimThisUpdate>
  [ 16] jmpifz [ 25] ............................ if not pAnimThisUpdate then
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglistnoret 1 ...................... <1>
  [ 23] extcall 47 .............................. return 1
  [ 25] getprop 24 .............................. <pSin>
  [ 27] pushcons 4 .............................. <0.01>
  [ 29] add ..................................... <pSin + 0.01>
  [ 30] setprop 24 .............................. pSin = pSin + 0.01
  [ 32] getprop 20 .............................. <pSpriteList>
  [ 34] pusharglist 0 ........................... <[]>
  [ 36] pushlist ................................ <[]>
  [ 37] eq ...................................... <pSpriteList = []>
  [ 38] jmpifz [ 47] ............................ if pSpriteList = [] then
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 1 ...................... <me>
  [ 45] objcall 19 .............................. me.getSpriteList()
  [ 47] getprop 39 .............................. <pDiscoStyleList>
  [ 49] getprop 21 .............................. <pDiscoStyle>
  [ 51] pusharglist 1 ........................... <pDiscoStyle>
  [ 53] extcall 60 .............................. <integer(pDiscoStyle)>
  [ 55] pusharglist 2 ........................... <pDiscoStyleList, integer(pDiscoStyle)>
  [ 57] objcall 56 .............................. <pDiscoStyleList[integer(pDiscoStyle)]>
  [ 59] setlocal 0 .............................. tProps = pDiscoStyleList[integer(pDiscoStyle)]
  [ 61] getlocal 0 .............................. <tProps>
  [ 63] pushsymb 61 ............................. <#word>
  [ 65] pusharglist 2 ........................... <tProps, #word>
  [ 67] objcall 43 .............................. <tProps.word.count>
  [ 69] pushint8 7 .............................. <7>
  [ 71] lt ...................................... <tProps.word.count < 7>
  [ 72] jmpifz [ 80] ............................ if tProps.word.count < 7 then
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 1 ...................... <0>
  [ 78] extcall 47 .............................. return 0
  [ 80] getlocal 0 .............................. <tProps>
  [ 82] pushsymb 61 ............................. <#word>
  [ 84] pushint8 1 .............................. <1>
  [ 86] pusharglist 3 ........................... <tProps, #word, 1>
  [ 88] objcall 45 .............................. <tProps.word[1]>
  [ 90] setlocal 1 .............................. tStyle = tProps.word[1]
  [ 92] getlocal 0 .............................. <tProps>
  [ 94] pushsymb 61 ............................. <#word>
  [ 96] pushint8 2 .............................. <2>
  [ 98] pusharglist 3 ........................... <tProps, #word, 2>
  [100] objcall 45 .............................. <tProps.word[2]>
  [102] pusharglist 1 ........................... <tProps.word[2]>
  [104] extcall 62 .............................. <value(tProps.word[2])>
  [106] setlocal 2 .............................. tOrCols = value(tProps.word[2])
  [108] getlocal 0 .............................. <tProps>
  [110] pushsymb 61 ............................. <#word>
  [112] pushint8 3 .............................. <3>
  [114] pusharglist 3 ........................... <tProps, #word, 3>
  [116] objcall 45 .............................. <tProps.word[3]>
  [118] pusharglist 1 ........................... <tProps.word[3]>
  [120] extcall 60 .............................. <integer(tProps.word[3])>
  [122] setlocal 3 .............................. tMultip = integer(tProps.word[3])
  [124] getlocal 0 .............................. <tProps>
  [126] pushsymb 61 ............................. <#word>
  [128] pushint8 4 .............................. <4>
  [130] pusharglist 3 ........................... <tProps, #word, 4>
  [132] objcall 45 .............................. <tProps.word[4]>
  [134] pusharglist 1 ........................... <tProps.word[4]>
  [136] extcall 60 .............................. <integer(tProps.word[4])>
  [138] setlocal 4 .............................. tSpeed = integer(tProps.word[4])
  [140] getlocal 0 .............................. <tProps>
  [142] pushsymb 61 ............................. <#word>
  [144] pushint8 5 .............................. <5>
  [146] pusharglist 3 ........................... <tProps, #word, 5>
  [148] objcall 45 .............................. <tProps.word[5]>
  [150] pusharglist 1 ........................... <tProps.word[5]>
  [152] extcall 62 .............................. <value(tProps.word[5])>
  [154] setlocal 5 .............................. tRange = value(tProps.word[5])
  [156] getlocal 0 .............................. <tProps>
  [158] pushsymb 61 ............................. <#word>
  [160] pushint8 6 .............................. <6>
  [162] pusharglist 3 ........................... <tProps, #word, 6>
  [164] objcall 45 .............................. <tProps.word[6]>
  [166] pusharglist 1 ........................... <tProps.word[6]>
  [168] extcall 60 .............................. <integer(tProps.word[6])>
  [170] setlocal 6 .............................. tTime = integer(tProps.word[6])
  [172] getlocal 0 .............................. <tProps>
  [174] pushsymb 61 ............................. <#word>
  [176] pushint8 7 .............................. <7>
  [178] pusharglist 3 ........................... <tProps, #word, 7>
  [180] objcall 45 .............................. <tProps.word[7]>
  [182] pusharglist 1 ........................... <tProps.word[7]>
  [184] extcall 60 .............................. <integer(tProps.word[7])>
  [186] setlocal 7 .............................. tHorz = integer(tProps.word[7])
  [188] getmovieprop 63 ......................... <the milliSeconds>
  [190] getlocal 6 .............................. <tTime>
  [192] getprop 22 .............................. <pLightTimer>
  [194] add ..................................... <tTime + pLightTimer>
  [195] lt ...................................... <the milliSeconds < (tTime + pLightTimer)>
  [196] jmpifz [205] ............................ if the milliSeconds < (tTime + pLightTimer) then
  [199] pushint8 1 .............................. <1>
  [201] pusharglistnoret 1 ...................... <1>
  [203] extcall 47 .............................. return 1
  [205] getprop 25 .............................. <pDiscoCounter>
  [207] pushint8 1 .............................. <1>
  [209] add ..................................... <pDiscoCounter + 1>
  [210] setprop 25 .............................. pDiscoCounter = pDiscoCounter + 1
  [212] getmovieprop 63 ......................... <the milliSeconds>
  [214] setprop 22 .............................. pLightTimer = the milliSeconds
  [216] getparam 0 .............................. <me>
  [218] getlocal 1 .............................. <tStyle>
  [220] getlocal 2 .............................. <tOrCols>
  [222] getlocal 3 .............................. <tMultip>
  [224] getlocal 4 .............................. <tSpeed>
  [226] getlocal 5 .............................. <tRange>
  [228] getlocal 7 .............................. <tHorz>
  [230] pusharglistnoret 7 ...................... <me, tStyle, tOrCols, tMultip, tSpeed, tRange, tHorz>
  [232] objcall 6 ............................... me.ColorTiles(tStyle, tOrCols, tMultip, tSpeed, tRange, tHorz)
  [234] ret
end

on ColorTiles me, tStyle, tOrCols, tMultiplier, tSpeed, tRange, tHorz
  [  0] getparam 5 .............................. <tRange>
  [  2] setlocal 0 .............................. pActiveColors = tRange
  [  4] pushint8 1 .............................. <1>
  [  6] setlocal 1
  [  8] getlocal 1
  [ 10] getprop 20 .............................. <pSpriteList>
  [ 12] getobjprop 43 ........................... <pSpriteList.count>
  [ 14] lteq
  [ 15] jmpifz [349] ............................ repeat with i = 1 to pSpriteList.count
  [ 18] getlocal 1 .............................. <i>
  [ 20] pushint8 6 .............................. <6>
  [ 22] mod ..................................... <i mod 6>
  [ 23] setlocal 2 .............................. tX = i mod 6
  [ 25] getlocal 2 .............................. <tX>
  [ 27] pushzero ................................ <0>
  [ 28] eq ...................................... <tX = 0>
  [ 29] jmpifz [ 36] ............................ if tX = 0 then
  [ 32] pushint8 6 .............................. <6>
  [ 34] setlocal 2 .............................. tX = 6
  [ 36] getlocal 1 .............................. <i>
  [ 38] pushint8 1 .............................. <1>
  [ 40] sub ..................................... <i - 1>
  [ 41] pushint8 6 .............................. <6>
  [ 43] div ..................................... <(i - 1) / 6>
  [ 44] pushint8 1 .............................. <1>
  [ 46] add ..................................... <((i - 1) / 6) + 1>
  [ 47] setlocal 3 .............................. tY = ((i - 1) / 6) + 1
  [ 49] getparam 1 .............................. <tStyle>
  [ 51] peek 0 .................................. case tStyle of
  [ 53] pushcons 5 .............................. <"#vertRotateSin">
  [ 55] eq
  [ 56] jmpifz [ 82] ............................ (case) "#vertRotateSin":
  [ 59] getparam 0 .............................. <me>
  [ 61] getlocal 2 .............................. <tX>
  [ 63] getlocal 3 .............................. <tY>
  [ 65] getparam 2 .............................. <tOrCols>
  [ 67] getparam 3 .............................. <tMultiplier>
  [ 69] getparam 4 .............................. <tSpeed>
  [ 71] getlocal 0 .............................. <pActiveColors>
  [ 73] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [ 75] objcall 12 .............................. <me.vertRotateSin(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [ 77] setlocal 4 .............................. tColNum = me.vertRotateSin(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [ 79] jmp [275]
  [ 82] peek 0
  [ 84] pushcons 6 .............................. <"#vertRotate">
  [ 86] eq
  [ 87] jmpifz [113] ............................ (case) "#vertRotate":
  [ 90] getparam 0 .............................. <me>
  [ 92] getlocal 2 .............................. <tX>
  [ 94] getlocal 3 .............................. <tY>
  [ 96] getparam 2 .............................. <tOrCols>
  [ 98] getparam 3 .............................. <tMultiplier>
  [100] getparam 4 .............................. <tSpeed>
  [102] getlocal 0 .............................. <pActiveColors>
  [104] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [106] objcall 13 .............................. <me.vertRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [108] setlocal 4 .............................. tColNum = me.vertRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [110] jmp [275]
  [113] peek 0
  [115] pushcons 7 .............................. <"#centerRotateMovX">
  [117] eq
  [118] jmpifz [144] ............................ (case) "#centerRotateMovX":
  [121] getparam 0 .............................. <me>
  [123] getlocal 2 .............................. <tX>
  [125] getlocal 3 .............................. <tY>
  [127] getparam 2 .............................. <tOrCols>
  [129] getparam 3 .............................. <tMultiplier>
  [131] getparam 4 .............................. <tSpeed>
  [133] getlocal 0 .............................. <pActiveColors>
  [135] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [137] objcall 14 .............................. <me.centerRotateMovX(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [139] setlocal 4 .............................. tColNum = me.centerRotateMovX(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [141] jmp [275]
  [144] peek 0
  [146] pushcons 8 .............................. <"#centerRotateMovXY">
  [148] eq
  [149] jmpifz [175] ............................ (case) "#centerRotateMovXY":
  [152] getparam 0 .............................. <me>
  [154] getlocal 2 .............................. <tX>
  [156] getlocal 3 .............................. <tY>
  [158] getparam 2 .............................. <tOrCols>
  [160] getparam 3 .............................. <tMultiplier>
  [162] getparam 4 .............................. <tSpeed>
  [164] getlocal 0 .............................. <pActiveColors>
  [166] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [168] objcall 15 .............................. <me.centerRotateMovXY(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [170] setlocal 4 .............................. tColNum = me.centerRotateMovXY(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [172] jmp [275]
  [175] peek 0
  [177] pushcons 9 .............................. <"#centerRotate">
  [179] eq
  [180] jmpifz [206] ............................ (case) "#centerRotate":
  [183] getparam 0 .............................. <me>
  [185] getlocal 2 .............................. <tX>
  [187] getlocal 3 .............................. <tY>
  [189] getparam 2 .............................. <tOrCols>
  [191] getparam 3 .............................. <tMultiplier>
  [193] getparam 4 .............................. <tSpeed>
  [195] getlocal 0 .............................. <pActiveColors>
  [197] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [199] objcall 17 .............................. <me.centerRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [201] setlocal 4 .............................. tColNum = me.centerRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [203] jmp [275]
  [206] peek 0
  [208] pushcons 10 ............................. <"#randomColor">
  [210] eq
  [211] jmpifz [237] ............................ (case) "#randomColor":
  [214] getparam 0 .............................. <me>
  [216] getlocal 2 .............................. <tX>
  [218] getlocal 3 .............................. <tY>
  [220] getparam 2 .............................. <tOrCols>
  [222] getparam 3 .............................. <tMultiplier>
  [224] getparam 4 .............................. <tSpeed>
  [226] getlocal 0 .............................. <pActiveColors>
  [228] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [230] objcall 10 .............................. <me.randomColor(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [232] setlocal 4 .............................. tColNum = me.randomColor(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [234] jmp [275]
  [237] peek 0
  [239] pushcons 11 ............................. <"#chessBoard">
  [241] eq
  [242] jmpifz [268] ............................ (case) "#chessBoard":
  [245] getparam 0 .............................. <me>
  [247] getlocal 2 .............................. <tX>
  [249] getlocal 3 .............................. <tY>
  [251] getparam 2 .............................. <tOrCols>
  [253] getparam 3 .............................. <tMultiplier>
  [255] getparam 4 .............................. <tSpeed>
  [257] getlocal 0 .............................. <pActiveColors>
  [259] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [261] objcall 11 .............................. <me.chessBoard(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [263] setlocal 4 .............................. tColNum = me.chessBoard(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [265] jmp [275] ............................... (case) otherwise:
  [268] pop 1
  [270] pushzero ................................ <0>
  [271] pusharglistnoret 1 ...................... <0>
  [273] extcall 47 .............................. return 0
  [275] pop 1 ................................... end case
  [277] getlocal 4 .............................. <tColNum>
  [279] getprop 131 ............................. <pColorOrder>
  [281] getobjprop 43 ........................... <pColorOrder.count>
  [283] mod ..................................... <tColNum mod pColorOrder.count>
  [284] pushint8 1 .............................. <1>
  [286] add ..................................... <(tColNum mod pColorOrder.count) + 1>
  [287] setlocal 5 .............................. tNum = (tColNum mod pColorOrder.count) + 1
  [289] getprop 20 .............................. <pSpriteList>
  [291] getlocal 1 .............................. <i>
  [293] pusharglist 2 ........................... <pSpriteList, i>
  [295] objcall 56 .............................. <pSpriteList[i]>
  [297] pushcons 12 ............................. <"disco_">
  [299] getprop 131 ............................. <pColorOrder>
  [301] getlocal 5 .............................. <tNum>
  [303] pusharglist 2 ........................... <pColorOrder, tNum>
  [305] objcall 56 .............................. <pColorOrder[tNum]>
  [307] joinstr ................................. <"disco_" & pColorOrder[tNum]>
  [308] pusharglist 1 ........................... <"disco_" & pColorOrder[tNum]>
  [310] extcall 89 .............................. <getMember("disco_" & pColorOrder[tNum])>
  [312] setobjprop 40 ........................... pSpriteList[i].member = getMember("disco_" & pColorOrder[tNum])
  [314] getprop 130 ............................. <pGlowList>
  [316] getlocal 1 .............................. <i>
  [318] pusharglist 2 ........................... <pGlowList, i>
  [320] objcall 56 .............................. <pGlowList[i]>
  [322] pushcons 13 ............................. <"light_disco_">
  [324] getprop 131 ............................. <pColorOrder>
  [326] getlocal 5 .............................. <tNum>
  [328] pusharglist 2 ........................... <pColorOrder, tNum>
  [330] objcall 56 .............................. <pColorOrder[tNum]>
  [332] joinstr ................................. <"light_disco_" & pColorOrder[tNum]>
  [333] pusharglist 1 ........................... <"light_disco_" & pColorOrder[tNum]>
  [335] extcall 89 .............................. <getMember("light_disco_" & pColorOrder[tNum])>
  [337] setobjprop 40 ........................... pGlowList[i].member = getMember("light_disco_" & pColorOrder[tNum])
  [339] pushint8 1
  [341] getlocal 1
  [343] add
  [344] setlocal 1
  [346] endrepeat [  8]
  [349] ret
end

on randomColor me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pushint8 100 ............................ <100>
  [  2] pusharglist 1 ........................... <100>
  [  4] extcall 94 .............................. <random(100)>
  [  6] pusharglistnoret 1 ...................... <random(100)>
  [  8] extcall 47 .............................. return random(100)
  [ 10] ret
end

on chessBoard me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] getprop 25 .............................. <pDiscoCounter>
  [  2] pushint8 2 .............................. <2>
  [  4] mod ..................................... <pDiscoCounter mod 2>
  [  5] setlocal 0 .............................. tPhase = pDiscoCounter mod 2
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] setlocal 1 .............................. tCols = []
  [ 12] pushint8 1 .............................. <1>
  [ 14] setlocal 2
  [ 16] getlocal 2
  [ 18] pushint8 3 .............................. <3>
  [ 20] lteq
  [ 21] jmpifz [ 96] ............................ repeat with k = 1 to 3
  [ 24] getparam 6 .............................. <tRange>
  [ 26] getlocal 2 .............................. <k>
  [ 28] pushint8 3 .............................. <3>
  [ 30] add ..................................... <k + 3>
  [ 31] pusharglist 2 ........................... <tRange, k + 3>
  [ 33] objcall 56 .............................. <tRange[k + 3]>
  [ 35] setlocal 3 .............................. tCol1 = tRange[k + 3]
  [ 37] getparam 6 .............................. <tRange>
  [ 39] getlocal 2 .............................. <k>
  [ 41] pusharglist 2 ........................... <tRange, k>
  [ 43] objcall 56 .............................. <tRange[k]>
  [ 45] setlocal 4 .............................. tCol2 = tRange[k]
  [ 47] getparam 1 .............................. <tX>
  [ 49] getparam 2 .............................. <tY>
  [ 51] add ..................................... <tX + tY>
  [ 52] getlocal 0 .............................. <tPhase>
  [ 54] add ..................................... <tX + tY + tPhase>
  [ 55] pushint8 2 .............................. <2>
  [ 57] mod ..................................... <(tX + tY + tPhase) mod 2>
  [ 58] pushint8 1 .............................. <1>
  [ 60] eq ...................................... <((tX + tY + tPhase) mod 2) = 1>
  [ 61] jmpifz [ 77] ............................ if ((tX + tY + tPhase) mod 2) = 1 then
  [ 64] getlocal 1 .............................. <tCols>
  [ 66] getlocal 2 .............................. <k>
  [ 68] getlocal 3 .............................. <tCol1>
  [ 70] pusharglistnoret 3 ...................... <tCols, k, tCol1>
  [ 72] objcall 91 .............................. tCols[k] = tCol1
  [ 74] jmp [ 87] ............................... next repeat
  [ 77] getlocal 1 .............................. <tCols>
  [ 79] getlocal 2 .............................. <k>
  [ 81] getlocal 4 .............................. <tCol2>
  [ 83] pusharglistnoret 3 ...................... <tCols, k, tCol2>
  [ 85] objcall 91 .............................. tCols[k] = tCol2
  [ 87] pushint8 1
  [ 89] getlocal 2
  [ 91] add
  [ 92] setlocal 2
  [ 94] endrepeat [ 16]
  [ 96] getlocal 1 .............................. <tCols>
  [ 98] pushint8 1 .............................. <1>
  [100] pusharglist 2 ........................... <tCols, 1>
  [102] objcall 56 .............................. <tCols[1]>
  [104] pusharglistnoret 1 ...................... <tCols[1]>
  [106] extcall 47 .............................. return tCols[1]
  [108] ret
end

on vertRotateSin me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 3 .............................. <3>
  [ 13] lteq
  [ 14] jmpifz [162] ............................ repeat with k = 1 to 3
  [ 17] getlocal 0 .............................. <tCols>
  [ 19] getlocal 1 .............................. <k>
  [ 21] getparam 3 .............................. <tOrCols>
  [ 23] getlocal 1 .............................. <k>
  [ 25] pusharglist 2 ........................... <tOrCols, k>
  [ 27] objcall 56 .............................. <tOrCols[k]>
  [ 29] getparam 1 .............................. <tX>
  [ 31] getparam 2 .............................. <tY>
  [ 33] add ..................................... <tX + tY>
  [ 34] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 35] getparam 4 .............................. <tMultiplier>
  [ 37] getprop 24 .............................. <pSin>
  [ 39] pusharglist 1 ........................... <pSin>
  [ 41] extcall 102 ............................. <sin(pSin)>
  [ 43] mul ..................................... <tMultiplier * sin(pSin)>
  [ 44] getparam 5 .............................. <tSpeed>
  [ 46] mul ..................................... <tMultiplier * sin(pSin) * tSpeed>
  [ 47] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)>
  [ 48] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)>
  [ 50] objcall 91 .............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)
  [ 52] getparam 6 .............................. <tRange>
  [ 54] getlocal 1 .............................. <k>
  [ 56] pushint8 3 .............................. <3>
  [ 58] add ..................................... <k + 3>
  [ 59] pusharglist 2 ........................... <tRange, k + 3>
  [ 61] objcall 56 .............................. <tRange[k + 3]>
  [ 63] setlocal 2 .............................. tMax = tRange[k + 3]
  [ 65] getparam 6 .............................. <tRange>
  [ 67] getlocal 1 .............................. <k>
  [ 69] pusharglist 2 ........................... <tRange, k>
  [ 71] objcall 56 .............................. <tRange[k]>
  [ 73] setlocal 3 .............................. tMin = tRange[k]
  [ 75] getlocal 0 .............................. <tCols>
  [ 77] getlocal 1 .............................. <k>
  [ 79] pusharglist 2 ........................... <tCols, k>
  [ 81] objcall 56 .............................. <tCols[k]>
  [ 83] getlocal 2 .............................. <tMax>
  [ 85] gt ...................................... <tCols[k] > tMax>
  [ 86] jmpifz [114] ............................ if tCols[k] > tMax then
  [ 89] getlocal 0 .............................. <tCols>
  [ 91] getlocal 1 .............................. <k>
  [ 93] getlocal 2 .............................. <tMax>
  [ 95] getlocal 0 .............................. <tCols>
  [ 97] getlocal 1 .............................. <k>
  [ 99] pusharglist 2 ........................... <tCols, k>
  [101] objcall 56 .............................. <tCols[k]>
  [103] getlocal 2 .............................. <tMax>
  [105] getlocal 3 .............................. <tMin>
  [107] sub ..................................... <tMax - tMin>
  [108] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [109] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [110] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [112] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [114] getlocal 0 .............................. <tCols>
  [116] getlocal 1 .............................. <k>
  [118] pusharglist 2 ........................... <tCols, k>
  [120] objcall 56 .............................. <tCols[k]>
  [122] getlocal 3 .............................. <tMin>
  [124] lt ...................................... <tCols[k] < tMin>
  [125] jmpifz [153] ............................ if tCols[k] < tMin then
  [128] getlocal 0 .............................. <tCols>
  [130] getlocal 1 .............................. <k>
  [132] getlocal 3 .............................. <tMin>
  [134] getlocal 0 .............................. <tCols>
  [136] getlocal 1 .............................. <k>
  [138] pusharglist 2 ........................... <tCols, k>
  [140] objcall 56 .............................. <tCols[k]>
  [142] getlocal 2 .............................. <tMax>
  [144] getlocal 3 .............................. <tMin>
  [146] sub ..................................... <tMax - tMin>
  [147] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [148] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [149] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [151] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [153] pushint8 1
  [155] getlocal 1
  [157] add
  [158] setlocal 1
  [160] endrepeat [  9]
  [162] getlocal 0 .............................. <tCols>
  [164] pushint8 1 .............................. <1>
  [166] pusharglist 2 ........................... <tCols, 1>
  [168] objcall 56 .............................. <tCols[1]>
  [170] pusharglistnoret 1 ...................... <tCols[1]>
  [172] extcall 47 .............................. return tCols[1]
  [174] ret
end

on vertRotate me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 3 .............................. <3>
  [ 13] lteq
  [ 14] jmpifz [158] ............................ repeat with k = 1 to 3
  [ 17] getlocal 0 .............................. <tCols>
  [ 19] getlocal 1 .............................. <k>
  [ 21] getparam 3 .............................. <tOrCols>
  [ 23] getlocal 1 .............................. <k>
  [ 25] pusharglist 2 ........................... <tOrCols, k>
  [ 27] objcall 56 .............................. <tOrCols[k]>
  [ 29] getparam 1 .............................. <tX>
  [ 31] getparam 2 .............................. <tY>
  [ 33] add ..................................... <tX + tY>
  [ 34] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 35] getparam 4 .............................. <tMultiplier>
  [ 37] getprop 24 .............................. <pSin>
  [ 39] mul ..................................... <tMultiplier * pSin>
  [ 40] getparam 5 .............................. <tSpeed>
  [ 42] mul ..................................... <tMultiplier * pSin * tSpeed>
  [ 43] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 44] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 46] objcall 91 .............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)
  [ 48] getparam 6 .............................. <tRange>
  [ 50] getlocal 1 .............................. <k>
  [ 52] pushint8 3 .............................. <3>
  [ 54] add ..................................... <k + 3>
  [ 55] pusharglist 2 ........................... <tRange, k + 3>
  [ 57] objcall 56 .............................. <tRange[k + 3]>
  [ 59] setlocal 2 .............................. tMax = tRange[k + 3]
  [ 61] getparam 6 .............................. <tRange>
  [ 63] getlocal 1 .............................. <k>
  [ 65] pusharglist 2 ........................... <tRange, k>
  [ 67] objcall 56 .............................. <tRange[k]>
  [ 69] setlocal 3 .............................. tMin = tRange[k]
  [ 71] getlocal 0 .............................. <tCols>
  [ 73] getlocal 1 .............................. <k>
  [ 75] pusharglist 2 ........................... <tCols, k>
  [ 77] objcall 56 .............................. <tCols[k]>
  [ 79] getlocal 2 .............................. <tMax>
  [ 81] gt ...................................... <tCols[k] > tMax>
  [ 82] jmpifz [110] ............................ if tCols[k] > tMax then
  [ 85] getlocal 0 .............................. <tCols>
  [ 87] getlocal 1 .............................. <k>
  [ 89] getlocal 2 .............................. <tMax>
  [ 91] getlocal 0 .............................. <tCols>
  [ 93] getlocal 1 .............................. <k>
  [ 95] pusharglist 2 ........................... <tCols, k>
  [ 97] objcall 56 .............................. <tCols[k]>
  [ 99] getlocal 2 .............................. <tMax>
  [101] getlocal 3 .............................. <tMin>
  [103] sub ..................................... <tMax - tMin>
  [104] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [105] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [106] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [108] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [110] getlocal 0 .............................. <tCols>
  [112] getlocal 1 .............................. <k>
  [114] pusharglist 2 ........................... <tCols, k>
  [116] objcall 56 .............................. <tCols[k]>
  [118] getlocal 3 .............................. <tMin>
  [120] lt ...................................... <tCols[k] < tMin>
  [121] jmpifz [149] ............................ if tCols[k] < tMin then
  [124] getlocal 0 .............................. <tCols>
  [126] getlocal 1 .............................. <k>
  [128] getlocal 3 .............................. <tMin>
  [130] getlocal 0 .............................. <tCols>
  [132] getlocal 1 .............................. <k>
  [134] pusharglist 2 ........................... <tCols, k>
  [136] objcall 56 .............................. <tCols[k]>
  [138] getlocal 2 .............................. <tMax>
  [140] getlocal 3 .............................. <tMin>
  [142] sub ..................................... <tMax - tMin>
  [143] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [144] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [145] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [147] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [149] pushint8 1
  [151] getlocal 1
  [153] add
  [154] setlocal 1
  [156] endrepeat [  9]
  [158] getlocal 0 .............................. <tCols>
  [160] pushint8 1 .............................. <1>
  [162] pusharglist 2 ........................... <tCols, 1>
  [164] objcall 56 .............................. <tCols[1]>
  [166] pusharglistnoret 1 ...................... <tCols[1]>
  [168] extcall 47 .............................. return tCols[1]
  [170] ret
end

on centerRotateMovX me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] getprop 25 .............................. <pDiscoCounter>
  [  7] pushint8 12 ............................. <12>
  [  9] mod ..................................... <pDiscoCounter mod 12>
  [ 10] pushint8 6 .............................. <6>
  [ 12] sub ..................................... <(pDiscoCounter mod 12) - 6>
  [ 13] pusharglist 1 ........................... <(pDiscoCounter mod 12) - 6>
  [ 15] extcall 103 ............................. <abs((pDiscoCounter mod 12) - 6)>
  [ 17] setlocal 1 .............................. tRow = abs((pDiscoCounter mod 12) - 6)
  [ 19] getlocal 1 .............................. <tRow>
  [ 21] setlocal 2 .............................. tCenterX = tRow
  [ 23] pushint8 4 .............................. <4>
  [ 25] setlocal 3 .............................. tCenterY = 4
  [ 27] getparam 1 .............................. <tX>
  [ 29] getlocal 2 .............................. <tCenterX>
  [ 31] sub ..................................... <tX - tCenterX>
  [ 32] pusharglist 1 ........................... <tX - tCenterX>
  [ 34] extcall 103 ............................. <abs(tX - tCenterX)>
  [ 36] getparam 2 .............................. <tY>
  [ 38] getlocal 3 .............................. <tCenterY>
  [ 40] sub ..................................... <tY - tCenterY>
  [ 41] pusharglist 1 ........................... <tY - tCenterY>
  [ 43] extcall 103 ............................. <abs(tY - tCenterY)>
  [ 45] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [ 46] setlocal 4 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [ 48] getparam 4 .............................. <tMultiplier>
  [ 50] getlocal 4 .............................. <tCenterMultiplier>
  [ 52] mul ..................................... <tMultiplier * tCenterMultiplier>
  [ 53] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [ 55] getlocal 1 .............................. <tRow>
  [ 57] getparam 1 .............................. <tX>
  [ 59] add ..................................... <tRow + tX>
  [ 60] pusharglistnoret 1 ...................... <tRow + tX>
  [ 62] extcall 47 .............................. return tRow + tX
  [ 64] ret
end

on centerRotateMovXY me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] getprop 25 .............................. <pDiscoCounter>
  [  7] pushint8 18 ............................. <18>
  [  9] mod ..................................... <pDiscoCounter mod 18>
  [ 10] setlocal 1 .............................. tPlace = pDiscoCounter mod 18
  [ 12] getlocal 1 .............................. <tPlace>
  [ 14] pushint8 6 .............................. <6>
  [ 16] lt ...................................... <tPlace < 6>
  [ 17] jmpifz [ 34] ............................ if tPlace < 6 then / else
  [ 20] getlocal 1 .............................. <tPlace>
  [ 22] pushint8 1 .............................. <1>
  [ 24] add ..................................... <tPlace + 1>
  [ 25] setlocal 2 .............................. tCenterX = tPlace + 1
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 3 .............................. tCenterY = 1
  [ 31] jmp [100]
  [ 34] getlocal 1 .............................. <tPlace>
  [ 36] pushint8 10 ............................. <10>
  [ 38] lt ...................................... <tPlace < 10>
  [ 39] jmpifz [ 56] ............................ if tPlace < 10 then / else
  [ 42] pushint8 3 .............................. <3>
  [ 44] setlocal 2 .............................. tCenterX = 3
  [ 46] getlocal 1 .............................. <tPlace>
  [ 48] pushint8 3 .............................. <3>
  [ 50] sub ..................................... <tPlace - 3>
  [ 51] setlocal 3 .............................. tCenterY = tPlace - 3
  [ 53] jmp [100]
  [ 56] getlocal 1 .............................. <tPlace>
  [ 58] pushint8 14 ............................. <14>
  [ 60] lt ...................................... <tPlace < 14>
  [ 61] jmpifz [ 85] ............................ if tPlace < 14 then / else
  [ 64] getlocal 1 .............................. <tPlace>
  [ 66] pushint8 14 ............................. <14>
  [ 68] sub ..................................... <tPlace - 14>
  [ 69] pusharglist 1 ........................... <tPlace - 14>
  [ 71] extcall 103 ............................. <abs(tPlace - 14)>
  [ 73] pushint8 1 .............................. <1>
  [ 75] add ..................................... <abs(tPlace - 14) + 1>
  [ 76] setlocal 2 .............................. tCenterX = abs(tPlace - 14) + 1
  [ 78] pushint8 3 .............................. <3>
  [ 80] setlocal 3 .............................. tCenterY = 3
  [ 82] jmp [100]
  [ 85] pushint8 1 .............................. <1>
  [ 87] setlocal 2 .............................. tCenterX = 1
  [ 89] getlocal 1 .............................. <tPlace>
  [ 91] pushint8 18 ............................. <18>
  [ 93] sub ..................................... <tPlace - 18>
  [ 94] pusharglist 1 ........................... <tPlace - 18>
  [ 96] extcall 103 ............................. <abs(tPlace - 18)>
  [ 98] setlocal 3 .............................. tCenterY = abs(tPlace - 18)
  [100] getparam 1 .............................. <tX>
  [102] getlocal 2 .............................. <tCenterX>
  [104] sub ..................................... <tX - tCenterX>
  [105] pusharglist 1 ........................... <tX - tCenterX>
  [107] extcall 103 ............................. <abs(tX - tCenterX)>
  [109] getparam 2 .............................. <tY>
  [111] getlocal 3 .............................. <tCenterY>
  [113] sub ..................................... <tY - tCenterY>
  [114] pusharglist 1 ........................... <tY - tCenterY>
  [116] extcall 103 ............................. <abs(tY - tCenterY)>
  [118] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [119] setlocal 4 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [121] getparam 4 .............................. <tMultiplier>
  [123] getlocal 4 .............................. <tCenterMultiplier>
  [125] mul ..................................... <tMultiplier * tCenterMultiplier>
  [126] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [128] pushint8 1 .............................. <1>
  [130] setlocal 5
  [132] getlocal 5
  [134] pushint8 3 .............................. <3>
  [136] lteq
  [137] jmpifz [287] ............................ repeat with k = 1 to 3
  [140] getlocal 0 .............................. <tCols>
  [142] getlocal 5 .............................. <k>
  [144] getparam 3 .............................. <tOrCols>
  [146] getlocal 5 .............................. <k>
  [148] pusharglist 2 ........................... <tOrCols, k>
  [150] objcall 56 .............................. <tOrCols[k]>
  [152] getparam 1 .............................. <tX>
  [154] getparam 2 .............................. <tY>
  [156] add ..................................... <tX + tY>
  [157] add ..................................... <tOrCols[k] + (tX + tY)>
  [158] getparam 4 .............................. <tMultiplier>
  [160] getprop 24 .............................. <pSin>
  [162] mul ..................................... <tMultiplier * pSin>
  [163] getparam 5 .............................. <tSpeed>
  [165] mul ..................................... <tMultiplier * pSin * tSpeed>
  [166] pushfloat32 7.0 ......................... <7.0>
  [171] div ..................................... <tMultiplier * pSin * tSpeed / 7.0>
  [172] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)>
  [173] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)>
  [175] objcall 91 .............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)
  [177] getparam 6 .............................. <tRange>
  [179] getlocal 5 .............................. <k>
  [181] pushint8 3 .............................. <3>
  [183] add ..................................... <k + 3>
  [184] pusharglist 2 ........................... <tRange, k + 3>
  [186] objcall 56 .............................. <tRange[k + 3]>
  [188] setlocal 6 .............................. tMax = tRange[k + 3]
  [190] getparam 6 .............................. <tRange>
  [192] getlocal 5 .............................. <k>
  [194] pusharglist 2 ........................... <tRange, k>
  [196] objcall 56 .............................. <tRange[k]>
  [198] setlocal 7 .............................. tMin = tRange[k]
  [200] getlocal 0 .............................. <tCols>
  [202] getlocal 5 .............................. <k>
  [204] pusharglist 2 ........................... <tCols, k>
  [206] objcall 56 .............................. <tCols[k]>
  [208] getlocal 6 .............................. <tMax>
  [210] gt ...................................... <tCols[k] > tMax>
  [211] jmpifz [239] ............................ if tCols[k] > tMax then
  [214] getlocal 0 .............................. <tCols>
  [216] getlocal 5 .............................. <k>
  [218] getlocal 6 .............................. <tMax>
  [220] getlocal 0 .............................. <tCols>
  [222] getlocal 5 .............................. <k>
  [224] pusharglist 2 ........................... <tCols, k>
  [226] objcall 56 .............................. <tCols[k]>
  [228] getlocal 6 .............................. <tMax>
  [230] getlocal 7 .............................. <tMin>
  [232] sub ..................................... <tMax - tMin>
  [233] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [234] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [235] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [237] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [239] getlocal 0 .............................. <tCols>
  [241] getlocal 5 .............................. <k>
  [243] pusharglist 2 ........................... <tCols, k>
  [245] objcall 56 .............................. <tCols[k]>
  [247] getlocal 7 .............................. <tMin>
  [249] lt ...................................... <tCols[k] < tMin>
  [250] jmpifz [278] ............................ if tCols[k] < tMin then
  [253] getlocal 0 .............................. <tCols>
  [255] getlocal 5 .............................. <k>
  [257] getlocal 7 .............................. <tMin>
  [259] getlocal 0 .............................. <tCols>
  [261] getlocal 5 .............................. <k>
  [263] pusharglist 2 ........................... <tCols, k>
  [265] objcall 56 .............................. <tCols[k]>
  [267] getlocal 6 .............................. <tMax>
  [269] getlocal 7 .............................. <tMin>
  [271] sub ..................................... <tMax - tMin>
  [272] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [273] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [274] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [276] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [278] pushint8 1
  [280] getlocal 5
  [282] add
  [283] setlocal 5
  [285] endrepeat [132]
  [287] getlocal 0 .............................. <tCols>
  [289] pushint8 1 .............................. <1>
  [291] pusharglist 2 ........................... <tCols, 1>
  [293] objcall 56 .............................. <tCols[1]>
  [295] pusharglistnoret 1 ...................... <tCols[1]>
  [297] extcall 47 .............................. return tCols[1]
  [299] ret
end

on centerRotate me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pushint8 3 .............................. <3>
  [  2] setlocal 0 .............................. tCenterX = 3
  [  4] pushint8 3 .............................. <3>
  [  6] setlocal 1 .............................. tCenterY = 3
  [  8] getparam 1 .............................. <tX>
  [ 10] getlocal 0 .............................. <tCenterX>
  [ 12] sub ..................................... <tX - tCenterX>
  [ 13] pusharglist 1 ........................... <tX - tCenterX>
  [ 15] extcall 103 ............................. <abs(tX - tCenterX)>
  [ 17] getparam 2 .............................. <tY>
  [ 19] getlocal 1 .............................. <tCenterY>
  [ 21] sub ..................................... <tY - tCenterY>
  [ 22] pusharglist 1 ........................... <tY - tCenterY>
  [ 24] extcall 103 ............................. <abs(tY - tCenterY)>
  [ 26] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [ 27] setlocal 2 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [ 29] getparam 4 .............................. <tMultiplier>
  [ 31] getlocal 2 .............................. <tCenterMultiplier>
  [ 33] mul ..................................... <tMultiplier * tCenterMultiplier>
  [ 34] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [ 36] pusharglist 0 ........................... <[]>
  [ 38] pushlist ................................ <[]>
  [ 39] setlocal 3 .............................. tCols = []
  [ 41] pushint8 1 .............................. <1>
  [ 43] setlocal 4
  [ 45] getlocal 4
  [ 47] pushint8 3 .............................. <3>
  [ 49] lteq
  [ 50] jmpifz [194] ............................ repeat with k = 1 to 3
  [ 53] getlocal 3 .............................. <tCols>
  [ 55] getlocal 4 .............................. <k>
  [ 57] getparam 3 .............................. <tOrCols>
  [ 59] getlocal 4 .............................. <k>
  [ 61] pusharglist 2 ........................... <tOrCols, k>
  [ 63] objcall 56 .............................. <tOrCols[k]>
  [ 65] getparam 1 .............................. <tX>
  [ 67] getparam 2 .............................. <tY>
  [ 69] add ..................................... <tX + tY>
  [ 70] getparam 4 .............................. <tMultiplier>
  [ 72] mul ..................................... <(tX + tY) * tMultiplier>
  [ 73] add ..................................... <tOrCols[k] + ((tX + tY) * tMultiplier)>
  [ 74] getprop 24 .............................. <pSin>
  [ 76] getparam 5 .............................. <tSpeed>
  [ 78] mul ..................................... <pSin * tSpeed>
  [ 79] add ..................................... <tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)>
  [ 80] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)>
  [ 82] objcall 91 .............................. tCols[k] = tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)
  [ 84] getparam 6 .............................. <tRange>
  [ 86] getlocal 4 .............................. <k>
  [ 88] pushint8 3 .............................. <3>
  [ 90] add ..................................... <k + 3>
  [ 91] pusharglist 2 ........................... <tRange, k + 3>
  [ 93] objcall 56 .............................. <tRange[k + 3]>
  [ 95] setlocal 5 .............................. tMax = tRange[k + 3]
  [ 97] getparam 6 .............................. <tRange>
  [ 99] getlocal 4 .............................. <k>
  [101] pusharglist 2 ........................... <tRange, k>
  [103] objcall 56 .............................. <tRange[k]>
  [105] setlocal 6 .............................. tMin = tRange[k]
  [107] getlocal 3 .............................. <tCols>
  [109] getlocal 4 .............................. <k>
  [111] pusharglist 2 ........................... <tCols, k>
  [113] objcall 56 .............................. <tCols[k]>
  [115] getlocal 5 .............................. <tMax>
  [117] gt ...................................... <tCols[k] > tMax>
  [118] jmpifz [146] ............................ if tCols[k] > tMax then
  [121] getlocal 3 .............................. <tCols>
  [123] getlocal 4 .............................. <k>
  [125] getlocal 5 .............................. <tMax>
  [127] getlocal 3 .............................. <tCols>
  [129] getlocal 4 .............................. <k>
  [131] pusharglist 2 ........................... <tCols, k>
  [133] objcall 56 .............................. <tCols[k]>
  [135] getlocal 5 .............................. <tMax>
  [137] getlocal 6 .............................. <tMin>
  [139] sub ..................................... <tMax - tMin>
  [140] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [141] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [142] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [144] objcall 91 .............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [146] getlocal 3 .............................. <tCols>
  [148] getlocal 4 .............................. <k>
  [150] pusharglist 2 ........................... <tCols, k>
  [152] objcall 56 .............................. <tCols[k]>
  [154] getlocal 6 .............................. <tMin>
  [156] lt ...................................... <tCols[k] < tMin>
  [157] jmpifz [185] ............................ if tCols[k] < tMin then
  [160] getlocal 3 .............................. <tCols>
  [162] getlocal 4 .............................. <k>
  [164] getlocal 6 .............................. <tMin>
  [166] getlocal 3 .............................. <tCols>
  [168] getlocal 4 .............................. <k>
  [170] pusharglist 2 ........................... <tCols, k>
  [172] objcall 56 .............................. <tCols[k]>
  [174] getlocal 5 .............................. <tMax>
  [176] getlocal 6 .............................. <tMin>
  [178] sub ..................................... <tMax - tMin>
  [179] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [180] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [181] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [183] objcall 91 .............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [185] pushint8 1
  [187] getlocal 4
  [189] add
  [190] setlocal 4
  [192] endrepeat [ 45]
  [194] getlocal 3 .............................. <tCols>
  [196] pushint8 1 .............................. <1>
  [198] pusharglist 2 ........................... <tCols, 1>
  [200] objcall 56 .............................. <tCols[1]>
  [202] pusharglistnoret 1 ...................... <tCols[1]>
  [204] extcall 47 .............................. return tCols[1]
  [206] ret
end

on getSpriteList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 20 .............................. pSpriteList = []
  [  5] pushsymb 118 ............................ <#room>
  [  7] pusharglist 1 ........................... <#room>
  [  9] extcall 117 ............................. <getThread(#room)>
  [ 11] pusharglist 1 ........................... <getThread(#room)>
  [ 13] objcall 119 ............................. <getThread(#room).getInterface()>
  [ 15] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 17] objcall 120 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 19] setlocal 0 .............................. tObj = getThread(#room).getInterface().getRoomVisualizer()
  [ 21] getlocal 0 .............................. <tObj>
  [ 23] pushzero ................................ <0>
  [ 24] eq ...................................... <tObj = 0>
  [ 25] jmpifz [ 33] ............................ if tObj = 0 then
  [ 28] pushzero ................................ <0>
  [ 29] pusharglistnoret 1 ...................... <0>
  [ 31] extcall 47 .............................. return 0
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 1
  [ 37] getlocal 1
  [ 39] pushint8 30 ............................. <30>
  [ 41] lteq
  [ 42] jmpifz [114] ............................ repeat with i = 1 to 30
  [ 45] getlocal 0 .............................. <tObj>
  [ 47] pushcons 14 ............................. <"discolight">
  [ 49] getlocal 1 .............................. <i>
  [ 51] joinstr ................................. <"discolight" & i>
  [ 52] pusharglist 2 ........................... <tObj, "discolight" & i>
  [ 54] objcall 121 ............................. <tObj.getSprById("discolight" & i)>
  [ 56] setlocal 2 .............................. tSp = tObj.getSprById("discolight" & i)
  [ 58] getlocal 0 .............................. <tObj>
  [ 60] pushcons 15 ............................. <"discoglow">
  [ 62] getlocal 1 .............................. <i>
  [ 64] joinstr ................................. <"discoglow" & i>
  [ 65] pusharglist 2 ........................... <tObj, "discoglow" & i>
  [ 67] objcall 121 ............................. <tObj.getSprById("discoglow" & i)>
  [ 69] setlocal 3 .............................. tSp2 = tObj.getSprById("discoglow" & i)
  [ 71] getlocal 2 .............................. <tSp>
  [ 73] pushint8 1 .............................. <1>
  [ 75] lt ...................................... <tSp < 1>
  [ 76] jmpifz [ 89] ............................ if tSp < 1 then
  [ 79] pusharglist 0 ........................... <[]>
  [ 81] pushlist ................................ <[]>
  [ 82] setprop 20 .............................. pSpriteList = []
  [ 84] pushzero ................................ <0>
  [ 85] pusharglistnoret 1 ...................... <0>
  [ 87] extcall 47 .............................. return 0
  [ 89] getprop 20 .............................. <pSpriteList>
  [ 91] getlocal 2 .............................. <tSp>
  [ 93] pusharglistnoret 2 ...................... <pSpriteList, tSp>
  [ 95] objcall 46 .............................. pSpriteList.add(tSp)
  [ 97] getprop 130 ............................. <pGlowList>
  [ 99] getlocal 3 .............................. <tSp2>
  [101] pusharglistnoret 2 ...................... <pGlowList, tSp2>
  [103] objcall 46 .............................. pGlowList.add(tSp2)
  [105] pushint8 1
  [107] getlocal 1
  [109] add
  [110] setlocal 1
  [112] endrepeat [ 37]
  [114] pushint8 1 .............................. <1>
  [116] pusharglistnoret 1 ...................... <1>
  [118] extcall 47 .............................. return 1
  [120] ret
end
