property pClass, pName, pCustom, pLayerProps, pDirection, pDimensions, pPartColors, pAnimFrame, pObjectType, pLoczList, pLocShiftList

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 839 ............................. pClass = EMPTY
  [  5] pushcons 0 .............................. <EMPTY>
  [  7] setprop 713 ............................. pName = EMPTY
  [ 10] pushcons 0 .............................. <EMPTY>
  [ 12] setprop 840 ............................. pCustom = EMPTY
  [ 15] pusharglist 0 ........................... <[]>
  [ 17] pushlist ................................ <[]>
  [ 18] setprop 841 ............................. pDirection = []
  [ 21] pusharglist 0 ........................... <[]>
  [ 23] pushlist ................................ <[]>
  [ 24] setprop 842 ............................. pDimensions = []
  [ 27] pusharglist 0 ........................... <[]>
  [ 29] pushlist ................................ <[]>
  [ 30] setprop 843 ............................. pPartColors = []
  [ 33] pushzero ................................ <0>
  [ 34] setprop 844 ............................. pAnimFrame = 0
  [ 37] pusharglist 0 ........................... <[]>
  [ 39] pushlist ................................ <[]>
  [ 40] setprop 845 ............................. pLayerProps = []
  [ 43] pushcons 0 .............................. <EMPTY>
  [ 45] setprop 846 ............................. pObjectType = EMPTY
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 37 .............................. return 1
  [ 54] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 845 ............................. pLayerProps = []
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 37 .............................. return 1
  [ 12] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 268 ............................ <#class>
  [  5] pusharglist 2 ........................... <tdata, #class>
  [  7] objcall 41 .............................. <tdata[#class]>
  [  9] setprop 839 ............................. pClass = tdata[#class]
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 269 ............................ <#name>
  [ 17] pusharglist 2 ........................... <tdata, #name>
  [ 19] objcall 41 .............................. <tdata[#name]>
  [ 21] setprop 713 ............................. pName = tdata[#name]
  [ 24] getparam 1 .............................. <tdata>
  [ 26] pushsymb 270 ............................ <#custom>
  [ 29] pusharglist 2 ........................... <tdata, #custom>
  [ 31] objcall 41 .............................. <tdata[#custom]>
  [ 33] setprop 840 ............................. pCustom = tdata[#custom]
  [ 36] getparam 1 .............................. <tdata>
  [ 38] pushsymb 271 ............................ <#direction>
  [ 41] pusharglist 2 ........................... <tdata, #direction>
  [ 43] objcall 41 .............................. <tdata[#direction]>
  [ 45] setprop 841 ............................. pDirection = tdata[#direction]
  [ 48] getparam 1 .............................. <tdata>
  [ 50] pushsymb 272 ............................ <#dimensions>
  [ 53] pusharglist 2 ........................... <tdata, #dimensions>
  [ 55] objcall 41 .............................. <tdata[#dimensions]>
  [ 57] setprop 842 ............................. pDimensions = tdata[#dimensions]
  [ 60] getparam 1 .............................. <tdata>
  [ 62] pushsymb 274 ............................ <#objectType>
  [ 65] pusharglist 2 ........................... <tdata, #objectType>
  [ 67] objcall 41 .............................. <tdata[#objectType]>
  [ 69] setprop 846 ............................. pObjectType = tdata[#objectType]
  [ 72] getprop 839 ............................. <pClass>
  [ 75] pushcons 1 .............................. <"*">
  [ 77] containsstr ............................. <pClass contains "*">
  [ 78] jmpifz [109] ............................ if pClass contains "*" then
  [ 81] getprop 839 ............................. <pClass>
  [ 84] pushsymb 292 ............................ <#char>
  [ 87] pushint8 1 .............................. <1>
  [ 89] pushcons 1 .............................. <"*">
  [ 91] getprop 839 ............................. <pClass>
  [ 94] pusharglist 2 ........................... <"*", pClass>
  [ 96] extcall 293 ............................. <offset("*", pClass)>
  [ 99] pushint8 1 .............................. <1>
  [101] sub ..................................... <offset("*", pClass) - 1>
  [102] pusharglist 4 ........................... <pClass, #char, 1, offset("*", pClass) - 1>
  [104] objcall 123 ............................. <pClass.char[1..offset("*", pClass) - 1]>
  [106] setprop 839 ............................. pClass = pClass.char[1..offset("*", pClass) - 1]
  [109] getprop 846 ............................. <pObjectType>
  [112] peek 0 .................................. case pObjectType of
  [114] pushcons 2 .............................. <"s">
  [116] eq
  [117] jmpifz [158] ............................ (case) "s":
  [120] getparam 0 .............................. <me>
  [122] getparam 1 .............................. <tdata>
  [124] pushsymb 273 ............................ <#colors>
  [127] pusharglist 2 ........................... <tdata, #colors>
  [129] objcall 41 .............................. <tdata[#colors]>
  [131] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [133] objcall 831 ............................. me.solveColors(tdata[#colors])
  [136] getparam 0 .............................. <me>
  [138] pusharglist 1 ........................... <me>
  [140] objcall 834 ............................. <me.solveStuffMembers()>
  [143] pushzero ................................ <0>
  [144] eq ...................................... <me.solveStuffMembers() = 0>
  [145] jmpifz [155] ............................ if me.solveStuffMembers() = 0 then
  [148] pop 1
  [150] pushzero ................................ <0>
  [151] pusharglistnoret 1 ...................... <0>
  [153] extcall 37 .............................. return 0
  [155] jmp [191]
  [158] peek 0
  [160] pushcons 3 .............................. <"i">
  [162] eq
  [163] jmpifz [191] ............................ (case) "i":
  [166] pusharglist 0 ........................... <[]>
  [168] pushlist ................................ <[]>
  [169] setprop 843 ............................. pPartColors = []
  [172] getparam 0 .............................. <me>
  [174] pusharglist 1 ........................... <me>
  [176] objcall 835 ............................. <me.solveItemMembers()>
  [179] pushzero ................................ <0>
  [180] eq ...................................... <me.solveItemMembers() = 0>
  [181] jmpifz [191] ............................ if me.solveItemMembers() = 0 then
  [184] pop 1
  [186] pushzero ................................ <0>
  [187] pusharglistnoret 1 ...................... <0>
  [189] extcall 37 .............................. return 0
  [191] pop 1 ................................... end case
  [193] pushint8 1 .............................. <1>
  [195] pusharglistnoret 1 ...................... <1>
  [197] extcall 37 .............................. return 1
  [199] ret
end

on getPicture me, tImg
  [  0] getprop 845 ............................. <pLayerProps>
  [  3] getobjprop 43 ........................... <pLayerProps.ilk>
  [  5] pushsymb 507 ............................ <#list>
  [  8] nteq .................................... <pLayerProps.ilk <> #list>
  [  9] jmpifz [ 29] ............................ if pLayerProps.ilk <> #list then
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 4 .............................. <"Properties not found!!!">
  [ 16] pushsymb 263 ............................ <#getPicture>
  [ 19] pushsymb 58 ............................. <#minor>
  [ 21] pusharglist 4 ........................... <me, "Properties not found!!!", #getPicture, #minor>
  [ 23] extcall 46 .............................. <error(me, "Properties not found!!!", #getPicture, #minor)>
  [ 25] pusharglistnoret 1 ...................... <error(me, "Properties not found!!!", #getPicture, #minor)>
  [ 27] extcall 37 .............................. return error(me, "Properties not found!!!", #getPicture, #minor)
  [ 29] getprop 845 ............................. <pLayerProps>
  [ 32] getobjprop 48 ........................... <pLayerProps.count>
  [ 34] pushint8 1 .............................. <1>
  [ 36] lt ...................................... <pLayerProps.count < 1>
  [ 37] jmpifz [ 57] ............................ if pLayerProps.count < 1 then
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 5 .............................. <"No Properties!!!">
  [ 44] pushsymb 263 ............................ <#getPicture>
  [ 47] pushsymb 58 ............................. <#minor>
  [ 49] pusharglist 4 ........................... <me, "No Properties!!!", #getPicture, #minor>
  [ 51] extcall 46 .............................. <error(me, "No Properties!!!", #getPicture, #minor)>
  [ 53] pusharglistnoret 1 ...................... <error(me, "No Properties!!!", #getPicture, #minor)>
  [ 55] extcall 37 .............................. return error(me, "No Properties!!!", #getPicture, #minor)
  [ 57] pushint16 300 ........................... <300>
  [ 60] pushint16 400 ........................... <400>
  [ 63] pushint8 32 ............................. <32>
  [ 65] pusharglist 3 ........................... <300, 400, 32>
  [ 67] extcall 17 .............................. <image(300, 400, 32)>
  [ 69] setlocal 0 .............................. tCanvas = image(300, 400, 32)
  [ 71] getlocal 0 .............................. <tCanvas>
  [ 73] getlocal 0 .............................. <tCanvas>
  [ 75] getobjprop 69 ........................... <tCanvas.rect>
  [ 77] pushint16 255 ........................... <255>
  [ 80] pushint16 255 ........................... <255>
  [ 83] pushint16 255 ........................... <255>
  [ 86] pusharglist 3 ........................... <255, 255, 255>
  [ 88] extcall 27 .............................. <rgb(255, 255, 255)>
  [ 90] pusharglistnoret 3 ...................... <tCanvas, tCanvas.rect, rgb(255, 255, 255)>
  [ 92] objcall 72 .............................. tCanvas.fill(tCanvas.rect, rgb(255, 255, 255))
  [ 94] pushzero ................................ <0>
  [ 95] setlocal 1 .............................. tFlipFlag = 0
  [ 97] getprop 846 ............................. <pObjectType>
  [100] peek 0 .................................. case pObjectType of
  [102] pushcons 3 .............................. <"i">
  [104] eq
  [105] jmpifz [161] ............................ (case) "i":
  [108] getprop 845 ............................. <pLayerProps>
  [111] pushint8 1 .............................. <1>
  [113] pusharglist 2 ........................... <pLayerProps, 1>
  [115] objcall 41 .............................. <pLayerProps[1]>
  [117] setlocal 2 .............................. tProps = pLayerProps[1]
  [119] getlocal 2 .............................. <tProps>
  [121] pushsymb 255 ............................ <#member>
  [123] pusharglist 2 ........................... <tProps, #member>
  [125] objcall 41 .............................. <tProps[#member]>
  [127] setlocal 3 .............................. tMemNum = tProps[#member]
  [129] getlocal 3 .............................. <tMemNum>
  [131] pusharglist 1 ........................... <tMemNum>
  [133] extcall 255 ............................. <member(tMemNum)>
  [135] getobjprop 17 ........................... <member(tMemNum).image>
  [137] setlocal 4 .............................. tImage = member(tMemNum).image
  [139] getlocal 4 .............................. <tImage>
  [141] pusharglist 1 ........................... <tImage>
  [143] objcall 107 ............................. <tImage.duplicate()>
  [145] setlocal 0 .............................. tCanvas = tImage.duplicate()
  [147] getlocal 2 .............................. <tProps>
  [149] pushsymb 847 ............................ <#flipH>
  [152] pusharglist 2 ........................... <tProps, #flipH>
  [154] objcall 41 .............................. <tProps[#flipH]>
  [156] setlocal 5 .............................. tFlipItem = tProps[#flipH]
  [158] jmp [762]
  [161] peek 0
  [163] pushcons 2 .............................. <"s">
  [165] eq
  [166] jmpifz [762] ............................ (case) "s":
  [169] pusharglist 0 ........................... <[:]>
  [171] pushproplist ............................ <[:]>
  [172] setlocal 6 .............................. tTempLayerProps = [:]
  [174] getlocal 6 .............................. <tTempLayerProps>
  [176] pusharglistnoret 1 ...................... <tTempLayerProps>
  [178] objcall 493 ............................. tTempLayerProps.sort()
  [181] pusharglist 0 ........................... <[:]>
  [183] pushproplist ............................ <[:]>
  [184] setlocal 7 .............................. tTempLocShifts = [:]
  [186] getlocal 7 .............................. <tTempLocShifts>
  [188] pusharglistnoret 1 ...................... <tTempLocShifts>
  [190] objcall 493 ............................. tTempLocShifts.sort()
  [193] pushint8 1 .............................. <1>
  [195] setlocal 8
  [197] getlocal 8
  [199] getprop 845 ............................. <pLayerProps>
  [202] getobjprop 48 ........................... <pLayerProps.count>
  [204] lteq
  [205] jmpifz [296] ............................ repeat with f = 1 to pLayerProps.count
  [208] getprop 848 ............................. <pLoczList>
  [211] getlocal 8 .............................. <f>
  [213] pusharglist 2 ........................... <pLoczList, f>
  [215] objcall 41 .............................. <pLoczList[f]>
  [217] getprop 841 ............................. <pDirection>
  [220] pushint8 1 .............................. <1>
  [222] pusharglist 2 ........................... <pDirection, 1>
  [224] objcall 41 .............................. <pDirection[1]>
  [226] pushint8 1 .............................. <1>
  [228] add ..................................... <pDirection[1] + 1>
  [229] pusharglist 2 ........................... <pLoczList[f], pDirection[1] + 1>
  [231] objcall 41 .............................. <pLoczList[f][pDirection[1] + 1]>
  [233] setlocal 9 .............................. tlocz = pLoczList[f][pDirection[1] + 1]
  [235] getlocal 6 .............................. <tTempLayerProps>
  [237] getlocal 9 .............................. <tlocz>
  [239] getprop 845 ............................. <pLayerProps>
  [242] getlocal 8 .............................. <f>
  [244] pusharglist 2 ........................... <pLayerProps, f>
  [246] objcall 41 .............................. <pLayerProps[f]>
  [248] pusharglistnoret 3 ...................... <tTempLayerProps, tlocz, pLayerProps[f]>
  [250] objcall 384 ............................. tTempLayerProps.addProp(tlocz, pLayerProps[f])
  [253] getlocal 7 .............................. <tTempLocShifts>
  [255] getlocal 9 .............................. <tlocz>
  [257] getprop 849 ............................. <pLocShiftList>
  [260] getlocal 8 .............................. <f>
  [262] pusharglist 2 ........................... <pLocShiftList, f>
  [264] objcall 41 .............................. <pLocShiftList[f]>
  [266] getprop 841 ............................. <pDirection>
  [269] pushint8 1 .............................. <1>
  [271] pusharglist 2 ........................... <pDirection, 1>
  [273] objcall 41 .............................. <pDirection[1]>
  [275] pushint8 1 .............................. <1>
  [277] add ..................................... <pDirection[1] + 1>
  [278] pusharglist 2 ........................... <pLocShiftList[f], pDirection[1] + 1>
  [280] objcall 41 .............................. <pLocShiftList[f][pDirection[1] + 1]>
  [282] pusharglistnoret 3 ...................... <tTempLocShifts, tlocz, pLocShiftList[f][pDirection[1] + 1]>
  [284] objcall 384 ............................. tTempLocShifts.addProp(tlocz, pLocShiftList[f][pDirection[1] + 1])
  [287] pushint8 1
  [289] getlocal 8
  [291] add
  [292] setlocal 8
  [294] endrepeat [197]
  [296] pushint8 1 .............................. <1>
  [298] setlocal 10
  [300] getlocal 10
  [302] getlocal 6 .............................. <tTempLayerProps>
  [304] getobjprop 48 ........................... <tTempLayerProps.count>
  [306] lteq
  [307] jmpifz [762] ............................ repeat with j = 1 to tTempLayerProps.count
  [310] getlocal 6 .............................. <tTempLayerProps>
  [312] getlocal 10 ............................. <j>
  [314] pusharglist 2 ........................... <tTempLayerProps, j>
  [316] objcall 41 .............................. <tTempLayerProps[j]>
  [318] setlocal 2 .............................. tProps = tTempLayerProps[j]
  [320] getlocal 2 .............................. <tProps>
  [322] pushsymb 255 ............................ <#member>
  [324] pusharglist 2 ........................... <tProps, #member>
  [326] objcall 41 .............................. <tProps[#member]>
  [328] setlocal 3 .............................. tMemNum = tProps[#member]
  [330] getlocal 2 .............................. <tProps>
  [332] pushsymb 850 ............................ <#blend>
  [335] pusharglist 2 ........................... <tProps, #blend>
  [337] objcall 41 .............................. <tProps[#blend]>
  [339] setlocal 11 ............................. tBlend = tProps[#blend]
  [341] getlocal 2 .............................. <tProps>
  [343] pushsymb 851 ............................ <#bgColor>
  [346] pusharglist 2 ........................... <tProps, #bgColor>
  [348] objcall 41 .............................. <tProps[#bgColor]>
  [350] setlocal 12 ............................. tColor = tProps[#bgColor]
  [352] getlocal 2 .............................. <tProps>
  [354] pushsymb 84 ............................. <#ink>
  [356] pusharglist 2 ........................... <tProps, #ink>
  [358] objcall 41 .............................. <tProps[#ink]>
  [360] setlocal 13 ............................. tInk = tProps[#ink]
  [362] getlocal 3 .............................. <tMemNum>
  [364] pusharglist 1 ........................... <tMemNum>
  [366] extcall 255 ............................. <member(tMemNum)>
  [368] getobjprop 17 ........................... <member(tMemNum).image>
  [370] setlocal 4 .............................. tImage = member(tMemNum).image
  [372] getlocal 3 .............................. <tMemNum>
  [374] pusharglist 1 ........................... <tMemNum>
  [376] extcall 255 ............................. <member(tMemNum)>
  [378] getobjprop 852 .......................... <member(tMemNum).regPoint>
  [381] setlocal 14 ............................. tRegp = member(tMemNum).regPoint
  [383] getlocal 0 .............................. <tCanvas>
  [385] getobjprop 34 ........................... <tCanvas.height>
  [387] pushint8 2 .............................. <2>
  [389] div ..................................... <tCanvas.height / 2>
  [390] getlocal 14 ............................. <tRegp>
  [392] pushint8 2 .............................. <2>
  [394] pusharglist 2 ........................... <tRegp, 2>
  [396] objcall 41 .............................. <tRegp[2]>
  [398] sub ..................................... <(tCanvas.height / 2) - tRegp[2]>
  [399] setlocal 15 ............................. tY = (tCanvas.height / 2) - tRegp[2]
  [401] getlocal 2 .............................. <tProps>
  [403] pushsymb 847 ............................ <#flipH>
  [406] pusharglist 2 ........................... <tProps, #flipH>
  [408] objcall 41 .............................. <tProps[#flipH]>
  [410] jmpifz [553] ............................ if tProps[#flipH] then / else
  [413] getparam 0 .............................. <me>
  [415] getlocal 4 .............................. <tImage>
  [417] pusharglist 2 ........................... <me, tImage>
  [419] objcall 830 ............................. <me.flipImage(tImage)>
  [422] setlocal 4 .............................. tImage = me.flipImage(tImage)
  [424] getlocal 4 .............................. <tImage>
  [426] getobjprop 33 ........................... <tImage.width>
  [428] getlocal 14 ............................. <tRegp>
  [430] pushint8 1 .............................. <1>
  [432] pusharglist 2 ........................... <tRegp, 1>
  [434] objcall 41 .............................. <tRegp[1]>
  [436] sub ..................................... <tImage.width - tRegp[1]>
  [437] setlocal 16 ............................. tNewRegX = tImage.width - tRegp[1]
  [439] getlocal 0 .............................. <tCanvas>
  [441] getobjprop 33 ........................... <tCanvas.width>
  [443] pushint8 2 .............................. <2>
  [445] div ..................................... <tCanvas.width / 2>
  [446] getlocal 16 ............................. <tNewRegX>
  [448] sub ..................................... <(tCanvas.width / 2) - tNewRegX>
  [449] pushint8 64 ............................. <64>
  [451] add ..................................... <(tCanvas.width / 2) - tNewRegX + 64>
  [452] setlocal 17 ............................. tX = (tCanvas.width / 2) - tNewRegX + 64
  [454] getlocal 7 .............................. <tTempLocShifts>
  [456] getlocal 10 ............................. <j>
  [458] pusharglist 2 ........................... <tTempLocShifts, j>
  [460] objcall 41 .............................. <tTempLocShifts[j]>
  [462] pusharglist 1 ........................... <tTempLocShifts[j]>
  [464] extcall 43 .............................. <ilk(tTempLocShifts[j])>
  [466] pushsymb 32 ............................. <#point>
  [468] eq ...................................... <ilk(tTempLocShifts[j]) = #point>
  [469] jmpifz [505] ............................ if ilk(tTempLocShifts[j]) = #point then / else
  [472] getlocal 17 ............................. <tX>
  [474] getlocal 7 .............................. <tTempLocShifts>
  [476] getlocal 10 ............................. <j>
  [478] pusharglist 2 ........................... <tTempLocShifts, j>
  [480] objcall 41 .............................. <tTempLocShifts[j]>
  [482] getobjprop 82 ........................... <tTempLocShifts[j].locH>
  [484] sub ..................................... <tX - tTempLocShifts[j].locH>
  [485] setlocal 17 ............................. tX = tX - tTempLocShifts[j].locH
  [487] getlocal 15 ............................. <tY>
  [489] getlocal 7 .............................. <tTempLocShifts>
  [491] getlocal 10 ............................. <j>
  [493] pusharglist 2 ........................... <tTempLocShifts, j>
  [495] objcall 41 .............................. <tTempLocShifts[j]>
  [497] getobjprop 83 ........................... <tTempLocShifts[j].locV>
  [499] add ..................................... <tY + tTempLocShifts[j].locV>
  [500] setlocal 15 ............................. tY = tY + tTempLocShifts[j].locV
  [502] jmp [550]
  [505] getlocal 7 .............................. <tTempLocShifts>
  [507] getlocal 10 ............................. <j>
  [509] pusharglist 2 ........................... <tTempLocShifts, j>
  [511] objcall 41 .............................. <tTempLocShifts[j]>
  [513] pusharglist 1 ........................... <tTempLocShifts[j]>
  [515] extcall 43 .............................. <ilk(tTempLocShifts[j])>
  [517] pushsymb 382 ............................ <#integer>
  [520] eq ...................................... <ilk(tTempLocShifts[j]) = #integer>
  [521] jmpifz [550] ............................ if ilk(tTempLocShifts[j]) = #integer then
  [524] getlocal 17 ............................. <tX>
  [526] getlocal 7 .............................. <tTempLocShifts>
  [528] getlocal 10 ............................. <j>
  [530] pusharglist 2 ........................... <tTempLocShifts, j>
  [532] objcall 41 .............................. <tTempLocShifts[j]>
  [534] sub ..................................... <tX - tTempLocShifts[j]>
  [535] setlocal 17 ............................. tX = tX - tTempLocShifts[j]
  [537] getlocal 17 ............................. <tX>
  [539] getlocal 7 .............................. <tTempLocShifts>
  [541] getlocal 10 ............................. <j>
  [543] pusharglist 2 ........................... <tTempLocShifts, j>
  [545] objcall 41 .............................. <tTempLocShifts[j]>
  [547] sub ..................................... <tX - tTempLocShifts[j]>
  [548] setlocal 17 ............................. tX = tX - tTempLocShifts[j]
  [550] jmp [667]
  [553] getlocal 0 .............................. <tCanvas>
  [555] getobjprop 33 ........................... <tCanvas.width>
  [557] pushint8 2 .............................. <2>
  [559] div ..................................... <tCanvas.width / 2>
  [560] getlocal 14 ............................. <tRegp>
  [562] pushint8 1 .............................. <1>
  [564] pusharglist 2 ........................... <tRegp, 1>
  [566] objcall 41 .............................. <tRegp[1]>
  [568] sub ..................................... <(tCanvas.width / 2) - tRegp[1]>
  [569] setlocal 17 ............................. tX = (tCanvas.width / 2) - tRegp[1]
  [571] getlocal 7 .............................. <tTempLocShifts>
  [573] getlocal 10 ............................. <j>
  [575] pusharglist 2 ........................... <tTempLocShifts, j>
  [577] objcall 41 .............................. <tTempLocShifts[j]>
  [579] pusharglist 1 ........................... <tTempLocShifts[j]>
  [581] extcall 43 .............................. <ilk(tTempLocShifts[j])>
  [583] pushsymb 32 ............................. <#point>
  [585] eq ...................................... <ilk(tTempLocShifts[j]) = #point>
  [586] jmpifz [622] ............................ if ilk(tTempLocShifts[j]) = #point then / else
  [589] getlocal 17 ............................. <tX>
  [591] getlocal 7 .............................. <tTempLocShifts>
  [593] getlocal 10 ............................. <j>
  [595] pusharglist 2 ........................... <tTempLocShifts, j>
  [597] objcall 41 .............................. <tTempLocShifts[j]>
  [599] getobjprop 82 ........................... <tTempLocShifts[j].locH>
  [601] add ..................................... <tX + tTempLocShifts[j].locH>
  [602] setlocal 17 ............................. tX = tX + tTempLocShifts[j].locH
  [604] getlocal 15 ............................. <tY>
  [606] getlocal 7 .............................. <tTempLocShifts>
  [608] getlocal 10 ............................. <j>
  [610] pusharglist 2 ........................... <tTempLocShifts, j>
  [612] objcall 41 .............................. <tTempLocShifts[j]>
  [614] getobjprop 83 ........................... <tTempLocShifts[j].locV>
  [616] add ..................................... <tY + tTempLocShifts[j].locV>
  [617] setlocal 15 ............................. tY = tY + tTempLocShifts[j].locV
  [619] jmp [667]
  [622] getlocal 7 .............................. <tTempLocShifts>
  [624] getlocal 10 ............................. <j>
  [626] pusharglist 2 ........................... <tTempLocShifts, j>
  [628] objcall 41 .............................. <tTempLocShifts[j]>
  [630] pusharglist 1 ........................... <tTempLocShifts[j]>
  [632] extcall 43 .............................. <ilk(tTempLocShifts[j])>
  [634] pushsymb 382 ............................ <#integer>
  [637] eq ...................................... <ilk(tTempLocShifts[j]) = #integer>
  [638] jmpifz [667] ............................ if ilk(tTempLocShifts[j]) = #integer then
  [641] getlocal 17 ............................. <tX>
  [643] getlocal 7 .............................. <tTempLocShifts>
  [645] getlocal 10 ............................. <j>
  [647] pusharglist 2 ........................... <tTempLocShifts, j>
  [649] objcall 41 .............................. <tTempLocShifts[j]>
  [651] add ..................................... <tX + tTempLocShifts[j]>
  [652] setlocal 17 ............................. tX = tX + tTempLocShifts[j]
  [654] getlocal 17 ............................. <tX>
  [656] getlocal 7 .............................. <tTempLocShifts>
  [658] getlocal 10 ............................. <j>
  [660] pusharglist 2 ........................... <tTempLocShifts, j>
  [662] objcall 41 .............................. <tTempLocShifts[j]>
  [664] add ..................................... <tX + tTempLocShifts[j]>
  [665] setlocal 17 ............................. tX = tX + tTempLocShifts[j]
  [667] getlocal 17 ............................. <tX>
  [669] getlocal 15 ............................. <tY>
  [671] getlocal 17 ............................. <tX>
  [673] getlocal 4 .............................. <tImage>
  [675] getobjprop 33 ........................... <tImage.width>
  [677] add ..................................... <tX + tImage.width>
  [678] getlocal 15 ............................. <tY>
  [680] getlocal 4 .............................. <tImage>
  [682] getobjprop 34 ........................... <tImage.height>
  [684] add ..................................... <tY + tImage.height>
  [685] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [687] extcall 69 .............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [689] setlocal 18 ............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [691] getlocal 2 .............................. <tProps>
  [693] pushsymb 847 ............................ <#flipH>
  [696] pusharglist 2 ........................... <tProps, #flipH>
  [698] objcall 41 .............................. <tProps[#flipH]>
  [700] jmpifz [707] ............................ if tProps[#flipH] then
  [703] pushint8 1 .............................. <1>
  [705] setlocal 1 .............................. tFlipFlag = 1
  [707] getlocal 4 .............................. <tImage>
  [709] pusharglist 1 ........................... <tImage>
  [711] objcall 660 ............................. <tImage.createMatte()>
  [714] setlocal 19 ............................. tMatte = tImage.createMatte()
  [716] getlocal 0 .............................. <tCanvas>
  [718] getlocal 4 .............................. <tImage>
  [720] getlocal 18 ............................. <tRect>
  [722] getlocal 4 .............................. <tImage>
  [724] getobjprop 69 ........................... <tImage.rect>
  [726] pushsymb 661 ............................ <#maskImage>
  [729] getlocal 19 ............................. <tMatte>
  [731] pushsymb 84 ............................. <#ink>
  [733] getlocal 13 ............................. <tInk>
  [735] pushsymb 851 ............................ <#bgColor>
  [738] getlocal 12 ............................. <tColor>
  [740] pushsymb 850 ............................ <#blend>
  [743] getlocal 11 ............................. <tBlend>
  [745] pusharglist 8 ........................... <[#maskImage: tMatte, #ink: tInk, #bgColor: tColor, #blend: tBlend]>
  [747] pushproplist ............................ <[#maskImage: tMatte, #ink: tInk, #bgColor: tColor, #blend: tBlend]>
  [748] pusharglistnoret 5 ...................... <tCanvas, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: tInk, #bgColor: tColor, #blend: tBlend]>
  [750] objcall 77 .............................. tCanvas.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: tInk, #bgColor: tColor, #blend: tBlend])
  [752] pushint8 1
  [754] getlocal 10
  [756] add
  [757] setlocal 10
  [759] endrepeat [300]
  [762] pop 1 ................................... end case
  [764] getparam 1 .............................. <tImg>
  [766] pusharglist 1 ........................... <tImg>
  [768] extcall 78 .............................. <voidp(tImg)>
  [770] jmpifz [780] ............................ if voidp(tImg) then / else
  [773] getlocal 0 .............................. <tCanvas>
  [775] setparam 1 .............................. tImg = tCanvas
  [777] jmp [856]
  [780] getparam 1 .............................. <tImg>
  [782] getobjprop 69 ........................... <tImg.rect>
  [784] getlocal 0 .............................. <tCanvas>
  [786] getobjprop 69 ........................... <tCanvas.rect>
  [788] sub ..................................... <tImg.rect - tCanvas.rect>
  [789] setlocal 20 ............................. tdestrect = tImg.rect - tCanvas.rect
  [791] getlocal 20 ............................. <tdestrect>
  [793] getobjprop 33 ........................... <tdestrect.width>
  [795] pushint8 2 .............................. <2>
  [797] div ..................................... <tdestrect.width / 2>
  [798] getlocal 20 ............................. <tdestrect>
  [800] getobjprop 34 ........................... <tdestrect.height>
  [802] pushint8 2 .............................. <2>
  [804] div ..................................... <tdestrect.height / 2>
  [805] getlocal 0 .............................. <tCanvas>
  [807] getobjprop 33 ........................... <tCanvas.width>
  [809] getlocal 20 ............................. <tdestrect>
  [811] getobjprop 33 ........................... <tdestrect.width>
  [813] pushint8 2 .............................. <2>
  [815] div ..................................... <tdestrect.width / 2>
  [816] add ..................................... <tCanvas.width + (tdestrect.width / 2)>
  [817] getlocal 20 ............................. <tdestrect>
  [819] getobjprop 34 ........................... <tdestrect.height>
  [821] pushint8 2 .............................. <2>
  [823] div ..................................... <tdestrect.height / 2>
  [824] getlocal 0 .............................. <tCanvas>
  [826] getobjprop 34 ........................... <tCanvas.height>
  [828] add ..................................... <(tdestrect.height / 2) + tCanvas.height>
  [829] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height>
  [831] extcall 69 .............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height)>
  [833] setlocal 20 ............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height)
  [835] getparam 1 .............................. <tImg>
  [837] getlocal 0 .............................. <tCanvas>
  [839] getlocal 20 ............................. <tdestrect>
  [841] getlocal 0 .............................. <tCanvas>
  [843] getobjprop 69 ........................... <tCanvas.rect>
  [845] pushsymb 84 ............................. <#ink>
  [847] pushint8 36 ............................. <36>
  [849] pusharglist 2 ........................... <[#ink: 36]>
  [851] pushproplist ............................ <[#ink: 36]>
  [852] pusharglistnoret 5 ...................... <tImg, tCanvas, tdestrect, tCanvas.rect, [#ink: 36]>
  [854] objcall 77 .............................. tImg.copyPixels(tCanvas, tdestrect, tCanvas.rect, [#ink: 36])
  [856] getlocal 5 .............................. <tFlipItem>
  [858] jmpifz [872] ............................ if tFlipItem then
  [861] getparam 0 .............................. <me>
  [863] getparam 1 .............................. <tImg>
  [865] pusharglist 2 ........................... <me, tImg>
  [867] objcall 830 ............................. <me.flipImage(tImg)>
  [870] setparam 1 .............................. tImg = me.flipImage(tImg)
  [872] getparam 1 .............................. <tImg>
  [874] pusharglist 1 ........................... <tImg>
  [876] objcall 806 ............................. <tImg.trimWhiteSpace()>
  [879] pusharglistnoret 1 ...................... <tImg.trimWhiteSpace()>
  [881] extcall 37 .............................. return tImg.trimWhiteSpace()
  [883] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 862 .......................... <tImg_a.paletteRef>
  [  5] setlocal 0 .............................. tPaletteRef = tImg_a.paletteRef
  [  7] getlocal 0 .............................. <tPaletteRef>
  [  9] getobjprop 43 ........................... <tPaletteRef.ilk>
  [ 11] pushsymb 255 ............................ <#member>
  [ 13] eq ...................................... <tPaletteRef.ilk = #member>
  [ 14] jmpifz [ 45] ............................ if tPaletteRef.ilk = #member then / else
  [ 17] getparam 1 .............................. <tImg_a>
  [ 19] getobjprop 33 ........................... <tImg_a.width>
  [ 21] getparam 1 .............................. <tImg_a>
  [ 23] getobjprop 34 ........................... <tImg_a.height>
  [ 25] getparam 1 .............................. <tImg_a>
  [ 27] getobjprop 633 .......................... <tImg_a.depth>
  [ 30] getlocal 0 .............................. <tPaletteRef>
  [ 32] pusharglist 1 ........................... <tPaletteRef>
  [ 34] extcall 255 ............................. <member(tPaletteRef)>
  [ 36] pusharglist 4 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth, member(tPaletteRef)>
  [ 38] extcall 17 .............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth, member(tPaletteRef))>
  [ 40] setlocal 1 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth, member(tPaletteRef))
  [ 42] jmp [ 61]
  [ 45] getparam 1 .............................. <tImg_a>
  [ 47] getobjprop 33 ........................... <tImg_a.width>
  [ 49] getparam 1 .............................. <tImg_a>
  [ 51] getobjprop 34 ........................... <tImg_a.height>
  [ 53] pushint8 32 ............................. <32>
  [ 55] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, 32>
  [ 57] extcall 17 .............................. <image(tImg_a.width, tImg_a.height, 32)>
  [ 59] setlocal 1 .............................. tImg_b = image(tImg_a.width, tImg_a.height, 32)
  [ 61] getparam 1 .............................. <tImg_a>
  [ 63] getobjprop 33 ........................... <tImg_a.width>
  [ 65] pushzero ................................ <0>
  [ 66] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 68] extcall 32 .............................. <point(tImg_a.width, 0)>
  [ 70] pushzero ................................ <0>
  [ 71] pushzero ................................ <0>
  [ 72] pusharglist 2 ........................... <0, 0>
  [ 74] extcall 32 .............................. <point(0, 0)>
  [ 76] pushzero ................................ <0>
  [ 77] getparam 1 .............................. <tImg_a>
  [ 79] getobjprop 34 ........................... <tImg_a.height>
  [ 81] pusharglist 2 ........................... <0, tImg_a.height>
  [ 83] extcall 32 .............................. <point(0, tImg_a.height)>
  [ 85] getparam 1 .............................. <tImg_a>
  [ 87] getobjprop 33 ........................... <tImg_a.width>
  [ 89] getparam 1 .............................. <tImg_a>
  [ 91] getobjprop 34 ........................... <tImg_a.height>
  [ 93] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 95] extcall 32 .............................. <point(tImg_a.width, tImg_a.height)>
  [ 97] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 99] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [100] setlocal 2 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [102] getlocal 1 .............................. <tImg_b>
  [104] getparam 1 .............................. <tImg_a>
  [106] getlocal 2 .............................. <tQuad>
  [108] getparam 1 .............................. <tImg_a>
  [110] getobjprop 69 ........................... <tImg_a.rect>
  [112] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [114] objcall 77 .............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [116] getlocal 1 .............................. <tImg_b>
  [118] pusharglistnoret 1 ...................... <tImg_b>
  [120] extcall 37 .............................. return tImg_b
  [122] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 78 .............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 6 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 843 ............................. pPartColors = []
  [ 19] getmovieprop 641 ........................ <the itemDelimiter>
  [ 22] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 24] pushcons 7 .............................. <",">
  [ 26] setmovieprop 641 ........................ the itemDelimiter = ","
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 1
  [ 33] getlocal 1
  [ 35] getparam 1 .............................. <tpartColors>
  [ 37] pushsymb 352 ............................ <#item>
  [ 40] pusharglist 2 ........................... <tpartColors, #item>
  [ 42] objcall 48 .............................. <tpartColors.item.count>
  [ 44] lteq
  [ 45] jmpifz [ 81] ............................ repeat with i = 1 to tpartColors.item.count
  [ 48] getprop 843 ............................. <pPartColors>
  [ 51] getparam 1 .............................. <tpartColors>
  [ 53] pushsymb 352 ............................ <#item>
  [ 56] getlocal 1 .............................. <i>
  [ 58] pusharglist 3 ........................... <tpartColors, #item, i>
  [ 60] objcall 123 ............................. <tpartColors.item[i]>
  [ 62] pusharglist 1 ........................... <tpartColors.item[i]>
  [ 64] extcall 291 ............................. <string(tpartColors.item[i])>
  [ 67] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[i])>
  [ 69] objcall 339 ............................. pPartColors.add(string(tpartColors.item[i]))
  [ 72] pushint8 1
  [ 74] getlocal 1
  [ 76] add
  [ 77] setlocal 1
  [ 79] endrepeat [ 33]
  [ 81] getprop 843 ............................. <pPartColors>
  [ 84] getobjprop 48 ........................... <pPartColors.count>
  [ 86] setlocal 2
  [ 88] getlocal 2
  [ 90] pushint8 4 .............................. <4>
  [ 92] lteq
  [ 93] jmpifz [115] ............................ repeat with j = pPartColors.count to 4
  [ 96] getprop 843 ............................. <pPartColors>
  [ 99] pushcons 8 .............................. <"*ffffff">
  [101] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [103] objcall 339 ............................. pPartColors.add("*ffffff")
  [106] pushint8 1
  [108] getlocal 2
  [110] add
  [111] setlocal 2
  [113] endrepeat [ 88]
  [115] getlocal 0 .............................. <tDelim>
  [117] setmovieprop 641 ........................ the itemDelimiter = tDelim
  [120] ret
end

on solveInk me, tPart
  [  0] getprop 839 ............................. <pClass>
  [  3] pushcons 9 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 63 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 20] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushint8 8 .............................. <8>
  [ 16] pusharglistnoret 1 ...................... <8>
  [ 18] extcall 37 .............................. return 8
  [ 20] getprop 839 ............................. <pClass>
  [ 23] pushcons 9 .............................. <".props">
  [ 25] joinstr ................................. <pClass & ".props">
  [ 26] pusharglist 1 ........................... <pClass & ".props">
  [ 28] extcall 652 ............................. <getmemnum(pClass & ".props")>
  [ 31] pushzero ................................ <0>
  [ 32] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 33] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 35] extcall 266 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 38] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 40] getlocal 0 .............................. <tPropList>
  [ 42] pusharglist 1 ........................... <tPropList>
  [ 44] extcall 43 .............................. <ilk(tPropList)>
  [ 46] pushsymb 45 ............................. <#propList>
  [ 48] nteq .................................... <ilk(tPropList) <> #propList>
  [ 49] jmpifz [ 78] ............................ if ilk(tPropList) <> #propList then / else
  [ 52] getparam 0 .............................. <me>
  [ 54] getprop 839 ............................. <pClass>
  [ 57] pushcons 10 ............................. <".props is not valid!">
  [ 59] joinstr ................................. <pClass & ".props is not valid!">
  [ 60] pushsymb 832 ............................ <#solveInk>
  [ 63] pushsymb 58 ............................. <#minor>
  [ 65] pusharglistnoret 4 ...................... <me, pClass & ".props is not valid!", #solveInk, #minor>
  [ 67] extcall 46 .............................. error(me, pClass & ".props is not valid!", #solveInk, #minor)
  [ 69] pushint8 8 .............................. <8>
  [ 71] pusharglistnoret 1 ...................... <8>
  [ 73] extcall 37 .............................. return 8
  [ 75] jmp [140]
  [ 78] getlocal 0 .............................. <tPropList>
  [ 80] getparam 1 .............................. <tPart>
  [ 82] pusharglist 2 ........................... <tPropList, tPart>
  [ 84] objcall 41 .............................. <tPropList[tPart]>
  [ 86] pusharglist 0 ........................... <>
  [ 88] extcall 55 .............................. <VOID>
  [ 90] eq ...................................... <tPropList[tPart] = VOID>
  [ 91] jmpifz [100] ............................ if tPropList[tPart] = VOID then
  [ 94] pushint8 8 .............................. <8>
  [ 96] pusharglistnoret 1 ...................... <8>
  [ 98] extcall 37 .............................. return 8
  [100] getlocal 0 .............................. <tPropList>
  [102] getparam 1 .............................. <tPart>
  [104] pusharglist 2 ........................... <tPropList, tPart>
  [106] objcall 41 .............................. <tPropList[tPart]>
  [108] pushsymb 84 ............................. <#ink>
  [110] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [112] objcall 41 .............................. <tPropList[tPart][#ink]>
  [114] pusharglist 0 ........................... <>
  [116] extcall 55 .............................. <VOID>
  [118] nteq .................................... <tPropList[tPart][#ink] <> VOID>
  [119] jmpifz [140] ............................ if tPropList[tPart][#ink] <> VOID then
  [122] getlocal 0 .............................. <tPropList>
  [124] getparam 1 .............................. <tPart>
  [126] pusharglist 2 ........................... <tPropList, tPart>
  [128] objcall 41 .............................. <tPropList[tPart]>
  [130] pushsymb 84 ............................. <#ink>
  [132] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [134] objcall 41 .............................. <tPropList[tPart][#ink]>
  [136] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [138] extcall 37 .............................. return tPropList[tPart][#ink]
  [140] pushint8 8 .............................. <8>
  [142] pusharglistnoret 1 ...................... <8>
  [144] extcall 37 .............................. return 8
  [146] ret
end

on solveBlend me, tPart
  [  0] getprop 839 ............................. <pClass>
  [  3] pushcons 9 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 63 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 20] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushint8 100 ............................ <100>
  [ 16] pusharglistnoret 1 ...................... <100>
  [ 18] extcall 37 .............................. return 100
  [ 20] getprop 839 ............................. <pClass>
  [ 23] pushcons 9 .............................. <".props">
  [ 25] joinstr ................................. <pClass & ".props">
  [ 26] pusharglist 1 ........................... <pClass & ".props">
  [ 28] extcall 652 ............................. <getmemnum(pClass & ".props")>
  [ 31] pushzero ................................ <0>
  [ 32] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 33] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 35] extcall 266 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 38] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 40] getlocal 0 .............................. <tPropList>
  [ 42] pusharglist 1 ........................... <tPropList>
  [ 44] extcall 43 .............................. <ilk(tPropList)>
  [ 46] pushsymb 45 ............................. <#propList>
  [ 48] nteq .................................... <ilk(tPropList) <> #propList>
  [ 49] jmpifz [ 78] ............................ if ilk(tPropList) <> #propList then / else
  [ 52] getparam 0 .............................. <me>
  [ 54] getprop 839 ............................. <pClass>
  [ 57] pushcons 10 ............................. <".props is not valid!">
  [ 59] joinstr ................................. <pClass & ".props is not valid!">
  [ 60] pushsymb 833 ............................ <#solveBlend>
  [ 63] pushsymb 58 ............................. <#minor>
  [ 65] pusharglistnoret 4 ...................... <me, pClass & ".props is not valid!", #solveBlend, #minor>
  [ 67] extcall 46 .............................. error(me, pClass & ".props is not valid!", #solveBlend, #minor)
  [ 69] pushint8 100 ............................ <100>
  [ 71] pusharglistnoret 1 ...................... <100>
  [ 73] extcall 37 .............................. return 100
  [ 75] jmp [142]
  [ 78] getlocal 0 .............................. <tPropList>
  [ 80] getparam 1 .............................. <tPart>
  [ 82] pusharglist 2 ........................... <tPropList, tPart>
  [ 84] objcall 41 .............................. <tPropList[tPart]>
  [ 86] pusharglist 0 ........................... <>
  [ 88] extcall 55 .............................. <VOID>
  [ 90] eq ...................................... <tPropList[tPart] = VOID>
  [ 91] jmpifz [100] ............................ if tPropList[tPart] = VOID then
  [ 94] pushint8 100 ............................ <100>
  [ 96] pusharglistnoret 1 ...................... <100>
  [ 98] extcall 37 .............................. return 100
  [100] getlocal 0 .............................. <tPropList>
  [102] getparam 1 .............................. <tPart>
  [104] pusharglist 2 ........................... <tPropList, tPart>
  [106] objcall 41 .............................. <tPropList[tPart]>
  [108] pushsymb 850 ............................ <#blend>
  [111] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [113] objcall 41 .............................. <tPropList[tPart][#blend]>
  [115] pusharglist 0 ........................... <>
  [117] extcall 55 .............................. <VOID>
  [119] nteq .................................... <tPropList[tPart][#blend] <> VOID>
  [120] jmpifz [142] ............................ if tPropList[tPart][#blend] <> VOID then
  [123] getlocal 0 .............................. <tPropList>
  [125] getparam 1 .............................. <tPart>
  [127] pusharglist 2 ........................... <tPropList, tPart>
  [129] objcall 41 .............................. <tPropList[tPart]>
  [131] pushsymb 850 ............................ <#blend>
  [134] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [136] objcall 41 .............................. <tPropList[tPart][#blend]>
  [138] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [140] extcall 37 .............................. return tPropList[tPart][#blend]
  [142] pushint8 100 ............................ <100>
  [144] pusharglistnoret 1 ...................... <100>
  [146] extcall 37 .............................. return 100
  [148] ret
end

on solveStuffMembers me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0 .............................. tMemNum = 1
  [  4] pushcons 11 ............................. <"a">
  [  6] pusharglist 1 ........................... <"a">
  [  8] extcall 869 ............................. <charToNum("a")>
  [ 11] setlocal 1 .............................. i = charToNum("a")
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 2 .............................. j = 1
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setprop 845 ............................. pLayerProps = []
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] setprop 848 ............................. pLoczList = []
  [ 29] pusharglist 0 ........................... <[]>
  [ 31] pushlist ................................ <[]>
  [ 32] setprop 849 ............................. pLocShiftList = []
  [ 35] getlocal 0 .............................. <tMemNum>
  [ 37] pushzero ................................ <0>
  [ 38] gt ...................................... <tMemNum > 0>
  [ 39] jmpifz [747] ............................ repeat while tMemNum > 0
  [ 42] pushzero ................................ <0>
  [ 43] setlocal 3 .............................. tFound = 0
  [ 45] getlocal 3 .............................. <tFound>
  [ 47] pushzero ................................ <0>
  [ 48] eq ...................................... <tFound = 0>
  [ 49] jmpifz [383] ............................ repeat while tFound = 0
  [ 52] getprop 839 ............................. <pClass>
  [ 55] pushcons 12 ............................. <"_">
  [ 57] joinstr ................................. <pClass & "_">
  [ 58] getlocal 1 .............................. <i>
  [ 60] pusharglist 1 ........................... <i>
  [ 62] extcall 870 ............................. <numToChar(i)>
  [ 65] joinstr ................................. <pClass & "_" & numToChar(i)>
  [ 66] pushcons 12 ............................. <"_">
  [ 68] joinstr ................................. <pClass & "_" & numToChar(i) & "_">
  [ 69] pushcons 13 ............................. <"0">
  [ 71] joinstr ................................. <pClass & "_" & numToChar(i) & "_" & "0">
  [ 72] setlocal 4 .............................. tMemNameA = pClass & "_" & numToChar(i) & "_" & "0"
  [ 74] getprop 842 ............................. <pDimensions>
  [ 77] pusharglist 1 ........................... <pDimensions>
  [ 79] extcall 349 ............................. <listp(pDimensions)>
  [ 82] jmpifz [115] ............................ if listp(pDimensions) then
  [ 85] getlocal 4 .............................. <tMemNameA>
  [ 87] pushcons 12 ............................. <"_">
  [ 89] joinstr ................................. <tMemNameA & "_">
  [ 90] getprop 842 ............................. <pDimensions>
  [ 93] pushint8 1 .............................. <1>
  [ 95] pusharglist 2 ........................... <pDimensions, 1>
  [ 97] objcall 41 .............................. <pDimensions[1]>
  [ 99] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [100] pushcons 12 ............................. <"_">
  [102] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [103] getprop 842 ............................. <pDimensions>
  [106] pushint8 2 .............................. <2>
  [108] pusharglist 2 ........................... <pDimensions, 2>
  [110] objcall 41 .............................. <pDimensions[2]>
  [112] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [113] setlocal 4 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [115] getprop 841 ............................. <pDirection>
  [118] pusharglist 1 ........................... <pDirection>
  [120] extcall 78 .............................. <voidp(pDirection)>
  [122] not ..................................... <not voidp(pDirection)>
  [123] jmpifz [193] ............................ if not voidp(pDirection) then / else
  [126] getprop 841 ............................. <pDirection>
  [129] pusharglist 1 ........................... <pDirection>
  [131] extcall 48 .............................. <count(pDirection)>
  [133] getlocal 2 .............................. <j>
  [135] gteq .................................... <count(pDirection) >= j>
  [136] jmpifz [166] ............................ if count(pDirection) >= j then / else
  [139] getlocal 4 .............................. <tMemNameA>
  [141] pushcons 12 ............................. <"_">
  [143] joinstr ................................. <tMemNameA & "_">
  [144] getprop 841 ............................. <pDirection>
  [147] getlocal 2 .............................. <j>
  [149] pusharglist 2 ........................... <pDirection, j>
  [151] objcall 41 .............................. <pDirection[j]>
  [153] joinstr ................................. <tMemNameA & "_" & pDirection[j]>
  [154] pushcons 12 ............................. <"_">
  [156] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_">
  [157] getprop 844 ............................. <pAnimFrame>
  [160] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame>
  [161] setlocal 5 .............................. tMemName = tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame
  [163] jmp [190]
  [166] getlocal 4 .............................. <tMemNameA>
  [168] pushcons 12 ............................. <"_">
  [170] joinstr ................................. <tMemNameA & "_">
  [171] getprop 841 ............................. <pDirection>
  [174] pushint8 1 .............................. <1>
  [176] pusharglist 2 ........................... <pDirection, 1>
  [178] objcall 41 .............................. <pDirection[1]>
  [180] joinstr ................................. <tMemNameA & "_" & pDirection[1]>
  [181] pushcons 12 ............................. <"_">
  [183] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_">
  [184] getprop 844 ............................. <pAnimFrame>
  [187] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame>
  [188] setlocal 5 .............................. tMemName = tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame
  [190] jmp [204]
  [193] getlocal 4 .............................. <tMemNameA>
  [195] pushcons 12 ............................. <"_">
  [197] joinstr ................................. <tMemNameA & "_">
  [198] getprop 844 ............................. <pAnimFrame>
  [201] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [202] setlocal 5 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [204] getlocal 5 .............................. <tMemName>
  [206] pusharglist 1 ........................... <tMemName>
  [208] extcall 652 ............................. <getmemnum(tMemName)>
  [211] setlocal 0 .............................. tMemNum = getmemnum(tMemName)
  [213] getlocal 5 .............................. <tMemName>
  [215] setlocal 6 .............................. tOldMemName = tMemName
  [217] getlocal 0 .............................. <tMemNum>
  [219] not ..................................... <not tMemNum>
  [220] jmpifz [243] ............................ if not tMemNum then
  [223] getlocal 4 .............................. <tMemNameA>
  [225] pushcons 14 ............................. <"_0_">
  [227] joinstr ................................. <tMemNameA & "_0_">
  [228] getprop 844 ............................. <pAnimFrame>
  [231] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [232] setlocal 5 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [234] getlocal 5 .............................. <tMemName>
  [236] pusharglist 1 ........................... <tMemName>
  [238] extcall 652 ............................. <getmemnum(tMemName)>
  [241] setlocal 0 .............................. tMemNum = getmemnum(tMemName)
  [243] getlocal 0 .............................. <tMemNum>
  [245] not ..................................... <not tMemNum>
  [246] getlocal 2 .............................. <j>
  [248] pushint8 1 .............................. <1>
  [250] eq ...................................... <j = 1>
  [251] and ..................................... <not tMemNum and (j = 1)>
  [252] jmpifz [376] ............................ if not tMemNum and (j = 1) then
  [255] pushzero ................................ <0>
  [256] setlocal 3 .............................. tFound = 0
  [258] getprop 841 ............................. <pDirection>
  [261] pusharglist 1 ........................... <pDirection>
  [263] extcall 349 ............................. <listp(pDirection)>
  [266] jmpifz [373] ............................ if listp(pDirection) then
  [269] pushint8 1 .............................. <1>
  [271] setlocal 7
  [273] getlocal 7
  [275] getprop 841 ............................. <pDirection>
  [278] getobjprop 48 ........................... <pDirection.count>
  [280] lteq
  [281] jmpifz [319] ............................ repeat with tdir = 1 to pDirection.count
  [284] getprop 841 ............................. <pDirection>
  [287] getlocal 7 .............................. <tdir>
  [289] getprop 841 ............................. <pDirection>
  [292] getlocal 7 .............................. <tdir>
  [294] pusharglist 2 ........................... <pDirection, tdir>
  [296] objcall 41 .............................. <pDirection[tdir]>
  [298] pushint8 1 .............................. <1>
  [300] add ..................................... <pDirection[tdir] + 1>
  [301] pusharglist 1 ........................... <pDirection[tdir] + 1>
  [303] extcall 382 ............................. <integer(pDirection[tdir] + 1)>
  [306] pusharglistnoret 3 ...................... <pDirection, tdir, integer(pDirection[tdir] + 1)>
  [308] objcall 254 ............................. pDirection[tdir] = integer(pDirection[tdir] + 1)
  [310] pushint8 1
  [312] getlocal 7
  [314] add
  [315] setlocal 7
  [317] endrepeat [273]
  [319] getprop 841 ............................. <pDirection>
  [322] pushint8 1 .............................. <1>
  [324] pusharglist 2 ........................... <pDirection, 1>
  [326] objcall 41 .............................. <pDirection[1]>
  [328] pushint8 8 .............................. <8>
  [330] eq ...................................... <pDirection[1] = 8>
  [331] jmpifz [373] ............................ if pDirection[1] = 8 then
  [334] getparam 0 .............................. <me>
  [336] pushcons 15 ............................. <"Couldn't define members:">
  [338] getprop 839 ............................. <pClass>
  [341] joinpadstr .............................. <"Couldn't define members:" && pClass>
  [342] pushsymb 871 ............................ <#solveMembers>
  [345] pushsymb 58 ............................. <#minor>
  [347] pusharglistnoret 4 ...................... <me, "Couldn't define members:" && pClass, #solveMembers, #minor>
  [349] extcall 46 .............................. error(me, "Couldn't define members:" && pClass, #solveMembers, #minor)
  [351] pushcons 16 ............................. <"room_object_placeholder">
  [353] pusharglist 1 ........................... <"room_object_placeholder">
  [355] extcall 652 ............................. <getmemnum("room_object_placeholder")>
  [358] setlocal 0 .............................. tMemNum = getmemnum("room_object_placeholder")
  [360] pushzero ................................ <0>
  [361] pushzero ................................ <0>
  [362] pushzero ................................ <0>
  [363] pusharglist 3 ........................... <[0, 0, 0]>
  [365] pushlist ................................ <[0, 0, 0]>
  [366] setprop 841 ............................. pDirection = [0, 0, 0]
  [369] pushint8 1 .............................. <1>
  [371] setlocal 3 .............................. tFound = 1
  [373] jmp [380] ............................... next repeat
  [376] pushint8 1 .............................. <1>
  [378] setlocal 3 .............................. tFound = 1
  [380] endrepeat [ 45]
  [383] getlocal 0 .............................. <tMemNum>
  [385] pushzero ................................ <0>
  [386] nteq .................................... <tMemNum <> 0>
  [387] jmpifz [730] ............................ if tMemNum <> 0 then
  [390] getprop 848 ............................. <pLoczList>
  [393] pusharglist 0 ........................... <[]>
  [395] pushlist ................................ <[]>
  [396] pusharglistnoret 2 ...................... <pLoczList, []>
  [398] objcall 339 ............................. pLoczList.add([])
  [401] getprop 849 ............................. <pLocShiftList>
  [404] pusharglist 0 ........................... <[]>
  [406] pushlist ................................ <[]>
  [407] pusharglistnoret 2 ...................... <pLocShiftList, []>
  [409] objcall 339 ............................. pLocShiftList.add([])
  [412] pushzero ................................ <0>
  [413] setlocal 7
  [415] getlocal 7
  [417] pushint8 7 .............................. <7>
  [419] lteq
  [420] jmpifz [493] ............................ repeat with tdir = 0 to 7
  [423] getprop 848 ............................. <pLoczList>
  [426] pusharglist 1 ........................... <pLoczList>
  [428] objcall 872 ............................. <pLoczList.getLast()>
  [431] getparam 0 .............................. <me>
  [433] getlocal 1 .............................. <i>
  [435] pusharglist 1 ........................... <i>
  [437] extcall 870 ............................. <numToChar(i)>
  [440] getlocal 7 .............................. <tdir>
  [442] pusharglist 3 ........................... <me, numToChar(i), tdir>
  [444] objcall 837 ............................. <me.solveLocZ(numToChar(i), tdir)>
  [447] getlocal 1 .............................. <i>
  [449] add ..................................... <me.solveLocZ(numToChar(i), tdir) + i>
  [450] pusharglistnoret 2 ...................... <pLoczList.getLast(), me.solveLocZ(numToChar(i), tdir) + i>
  [452] objcall 339 ............................. pLoczList.getLast().add(me.solveLocZ(numToChar(i), tdir) + i)
  [455] getprop 849 ............................. <pLocShiftList>
  [458] pusharglist 1 ........................... <pLocShiftList>
  [460] objcall 872 ............................. <pLocShiftList.getLast()>
  [463] getparam 0 .............................. <me>
  [465] getlocal 1 .............................. <i>
  [467] pusharglist 1 ........................... <i>
  [469] extcall 870 ............................. <numToChar(i)>
  [472] getlocal 7 .............................. <tdir>
  [474] pusharglist 3 ........................... <me, numToChar(i), tdir>
  [476] objcall 838 ............................. <me.solveLocShift(numToChar(i), tdir)>
  [479] pusharglistnoret 2 ...................... <pLocShiftList.getLast(), me.solveLocShift(numToChar(i), tdir)>
  [481] objcall 339 ............................. pLocShiftList.getLast().add(me.solveLocShift(numToChar(i), tdir))
  [484] pushint8 1
  [486] getlocal 7
  [488] add
  [489] setlocal 7
  [491] endrepeat [415]
  [493] getlocal 0 .............................. <tMemNum>
  [495] pushint8 1 .............................. <1>
  [497] lt ...................................... <tMemNum < 1>
  [498] jmpifz [517] ............................ if tMemNum < 1 then / else
  [501] getlocal 0 .............................. <tMemNum>
  [503] pusharglist 1 ........................... <tMemNum>
  [505] extcall 873 ............................. <abs(tMemNum)>
  [508] setlocal 0 .............................. tMemNum = abs(tMemNum)
  [510] pushint8 1 .............................. <1>
  [512] setlocal 8 .............................. tFlipH = 1
  [514] jmp [520]
  [517] pushzero ................................ <0>
  [518] setlocal 8 .............................. tFlipH = 0
  [520] pusharglist 0 ........................... <[:]>
  [522] pushproplist ............................ <[:]>
  [523] setlocal 9 .............................. tProps = [:]
  [525] getlocal 9 .............................. <tProps>
  [527] pushsymb 255 ............................ <#member>
  [529] getlocal 0 .............................. <tMemNum>
  [531] pusharglistnoret 3 ...................... <tProps, #member, tMemNum>
  [533] objcall 254 ............................. tProps[#member] = tMemNum
  [535] getlocal 9 .............................. <tProps>
  [537] pushsymb 33 ............................. <#width>
  [539] getlocal 0 .............................. <tMemNum>
  [541] pusharglist 1 ........................... <tMemNum>
  [543] extcall 255 ............................. <member(tMemNum)>
  [545] getobjprop 33 ........................... <member(tMemNum).width>
  [547] pusharglistnoret 3 ...................... <tProps, #width, member(tMemNum).width>
  [549] objcall 254 ............................. tProps[#width] = member(tMemNum).width
  [551] getlocal 9 .............................. <tProps>
  [553] pushsymb 34 ............................. <#height>
  [555] getlocal 0 .............................. <tMemNum>
  [557] pusharglist 1 ........................... <tMemNum>
  [559] extcall 255 ............................. <member(tMemNum)>
  [561] getobjprop 34 ........................... <member(tMemNum).height>
  [563] pusharglistnoret 3 ...................... <tProps, #height, member(tMemNum).height>
  [565] objcall 254 ............................. tProps[#height] = member(tMemNum).height
  [567] getlocal 9 .............................. <tProps>
  [569] pushsymb 84 ............................. <#ink>
  [571] getparam 0 .............................. <me>
  [573] getlocal 1 .............................. <i>
  [575] pusharglist 1 ........................... <i>
  [577] extcall 870 ............................. <numToChar(i)>
  [580] pusharglist 2 ........................... <me, numToChar(i)>
  [582] objcall 832 ............................. <me.solveInk(numToChar(i))>
  [585] pusharglistnoret 3 ...................... <tProps, #ink, me.solveInk(numToChar(i))>
  [587] objcall 254 ............................. tProps[#ink] = me.solveInk(numToChar(i))
  [589] getlocal 9 .............................. <tProps>
  [591] pushsymb 850 ............................ <#blend>
  [594] getparam 0 .............................. <me>
  [596] getlocal 1 .............................. <i>
  [598] pusharglist 1 ........................... <i>
  [600] extcall 870 ............................. <numToChar(i)>
  [603] pusharglist 2 ........................... <me, numToChar(i)>
  [605] objcall 833 ............................. <me.solveBlend(numToChar(i))>
  [608] pusharglistnoret 3 ...................... <tProps, #blend, me.solveBlend(numToChar(i))>
  [610] objcall 254 ............................. tProps[#blend] = me.solveBlend(numToChar(i))
  [612] getlocal 9 .............................. <tProps>
  [614] pushsymb 847 ............................ <#flipH>
  [617] getlocal 8 .............................. <tFlipH>
  [619] pusharglistnoret 3 ...................... <tProps, #flipH, tFlipH>
  [621] objcall 254 ............................. tProps[#flipH] = tFlipH
  [623] getlocal 2 .............................. <j>
  [625] getprop 843 ............................. <pPartColors>
  [628] getobjprop 48 ........................... <pPartColors.count>
  [630] lteq .................................... <j <= pPartColors.count>
  [631] jmpifz [720] ............................ if j <= pPartColors.count then
  [634] getprop 843 ............................. <pPartColors>
  [637] getlocal 2 .............................. <j>
  [639] pusharglist 2 ........................... <pPartColors, j>
  [641] objcall 41 .............................. <pPartColors[j]>
  [643] pusharglist 1 ........................... <pPartColors[j]>
  [645] extcall 291 ............................. <string(pPartColors[j])>
  [648] pushsymb 292 ............................ <#char>
  [651] pushint8 1 .............................. <1>
  [653] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [655] objcall 123 ............................. <string(pPartColors[j]).char[1]>
  [657] pushcons 17 ............................. <"#">
  [659] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [660] jmpifz [692] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [663] getlocal 9 .............................. <tProps>
  [665] pushsymb 851 ............................ <#bgColor>
  [668] getprop 843 ............................. <pPartColors>
  [671] getlocal 2 .............................. <j>
  [673] pusharglist 2 ........................... <pPartColors, j>
  [675] objcall 41 .............................. <pPartColors[j]>
  [677] pusharglist 1 ........................... <pPartColors[j]>
  [679] extcall 27 .............................. <rgb(pPartColors[j])>
  [681] pusharglistnoret 3 ...................... <tProps, #bgColor, rgb(pPartColors[j])>
  [683] objcall 254 ............................. tProps[#bgColor] = rgb(pPartColors[j])
  [685] pushint8 41 ............................. <41>
  [687] setlocal 10 ............................. tInk = 41
  [689] jmp [720]
  [692] getlocal 9 .............................. <tProps>
  [694] pushsymb 851 ............................ <#bgColor>
  [697] getprop 843 ............................. <pPartColors>
  [700] getlocal 2 .............................. <j>
  [702] pusharglist 2 ........................... <pPartColors, j>
  [704] objcall 41 .............................. <pPartColors[j]>
  [706] pusharglist 1 ........................... <pPartColors[j]>
  [708] extcall 382 ............................. <integer(pPartColors[j])>
  [711] pusharglist 1 ........................... <integer(pPartColors[j])>
  [713] extcall 874 ............................. <paletteIndex(integer(pPartColors[j]))>
  [716] pusharglistnoret 3 ...................... <tProps, #bgColor, paletteIndex(integer(pPartColors[j]))>
  [718] objcall 254 ............................. tProps[#bgColor] = paletteIndex(integer(pPartColors[j]))
  [720] getprop 845 ............................. <pLayerProps>
  [723] getlocal 9 .............................. <tProps>
  [725] pusharglistnoret 2 ...................... <pLayerProps, tProps>
  [727] objcall 629 ............................. pLayerProps.append(tProps)
  [730] getlocal 1 .............................. <i>
  [732] pushint8 1 .............................. <1>
  [734] add ..................................... <i + 1>
  [735] setlocal 1 .............................. i = i + 1
  [737] getlocal 2 .............................. <j>
  [739] pushint8 1 .............................. <1>
  [741] add ..................................... <j + 1>
  [742] setlocal 2 .............................. j = j + 1
  [744] endrepeat [ 35]
  [747] getprop 845 ............................. <pLayerProps>
  [750] getobjprop 48 ........................... <pLayerProps.count>
  [752] pushzero ................................ <0>
  [753] gt ...................................... <pLayerProps.count > 0>
  [754] jmpifz [766] ............................ if pLayerProps.count > 0 then / else
  [757] pushint8 1 .............................. <1>
  [759] pusharglistnoret 1 ...................... <1>
  [761] extcall 37 .............................. return 1
  [763] jmp [787]
  [766] getparam 0 .............................. <me>
  [768] pushcons 15 ............................. <"Couldn't define members:">
  [770] getprop 839 ............................. <pClass>
  [773] joinpadstr .............................. <"Couldn't define members:" && pClass>
  [774] pushsymb 834 ............................ <#solveStuffMembers>
  [777] pushsymb 58 ............................. <#minor>
  [779] pusharglist 4 ........................... <me, "Couldn't define members:" && pClass, #solveStuffMembers, #minor>
  [781] extcall 46 .............................. <error(me, "Couldn't define members:" && pClass, #solveStuffMembers, #minor)>
  [783] pusharglistnoret 1 ...................... <error(me, "Couldn't define members:" && pClass, #solveStuffMembers, #minor)>
  [785] extcall 37 .............................. return error(me, "Couldn't define members:" && pClass, #solveStuffMembers, #minor)
  [787] ret
end

on solveItemMembers me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tMemNum = 0
  [  3] pusharglist 0 ........................... <[]>
  [  5] pushlist ................................ <[]>
  [  6] setprop 845 ............................. pLayerProps = []
  [  9] pushcons 18 ............................. <"rightwall">
  [ 11] getprop 839 ............................. <pClass>
  [ 14] joinpadstr .............................. <"rightwall" && pClass>
  [ 15] setlocal 1 .............................. tMemName = "rightwall" && pClass
  [ 17] getlocal 1 .............................. <tMemName>
  [ 19] pusharglist 1 ........................... <tMemName>
  [ 21] extcall 652 ............................. <getmemnum(tMemName)>
  [ 24] setlocal 0 .............................. tMemNum = getmemnum(tMemName)
  [ 26] pusharglist 0 ........................... <[:]>
  [ 28] pushproplist ............................ <[:]>
  [ 29] setlocal 2 .............................. tProps = [:]
  [ 31] getlocal 2 .............................. <tProps>
  [ 33] pushsymb 847 ............................ <#flipH>
  [ 36] getlocal 0 .............................. <tMemNum>
  [ 38] pushzero ................................ <0>
  [ 39] lt ...................................... <tMemNum < 0>
  [ 40] pusharglistnoret 3 ...................... <tProps, #flipH, tMemNum < 0>
  [ 42] objcall 254 ............................. tProps[#flipH] = tMemNum < 0
  [ 44] getlocal 2 .............................. <tProps>
  [ 46] pushsymb 255 ............................ <#member>
  [ 48] getlocal 0 .............................. <tMemNum>
  [ 50] pusharglist 1 ........................... <tMemNum>
  [ 52] extcall 873 ............................. <abs(tMemNum)>
  [ 55] pusharglistnoret 3 ...................... <tProps, #member, abs(tMemNum)>
  [ 57] objcall 254 ............................. tProps[#member] = abs(tMemNum)
  [ 59] getlocal 0 .............................. <tMemNum>
  [ 61] pushzero ................................ <0>
  [ 62] nteq .................................... <tMemNum <> 0>
  [ 63] jmpifz [ 76] ............................ if tMemNum <> 0 then
  [ 66] getprop 845 ............................. <pLayerProps>
  [ 69] getlocal 2 .............................. <tProps>
  [ 71] pusharglistnoret 2 ...................... <pLayerProps, tProps>
  [ 73] objcall 629 ............................. pLayerProps.append(tProps)
  [ 76] getprop 845 ............................. <pLayerProps>
  [ 79] getobjprop 48 ........................... <pLayerProps.count>
  [ 81] pushzero ................................ <0>
  [ 82] gt ...................................... <pLayerProps.count > 0>
  [ 83] jmpifz [ 95] ............................ if pLayerProps.count > 0 then / else
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglistnoret 1 ...................... <1>
  [ 90] extcall 37 .............................. return 1
  [ 92] jmp [127]
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglist 1 ........................... <me>
  [ 99] objcall 836 ............................. <me.solveAnimatedItemMembers()>
  [102] not ..................................... <not me.solveAnimatedItemMembers()>
  [103] jmpifz [127] ............................ if not me.solveAnimatedItemMembers() then
  [106] getparam 0 .............................. <me>
  [108] pushcons 15 ............................. <"Couldn't define members:">
  [110] getprop 839 ............................. <pClass>
  [113] joinpadstr .............................. <"Couldn't define members:" && pClass>
  [114] pushsymb 835 ............................ <#solveItemMembers>
  [117] pushsymb 58 ............................. <#minor>
  [119] pusharglist 4 ........................... <me, "Couldn't define members:" && pClass, #solveItemMembers, #minor>
  [121] extcall 46 .............................. <error(me, "Couldn't define members:" && pClass, #solveItemMembers, #minor)>
  [123] pusharglistnoret 1 ...................... <error(me, "Couldn't define members:" && pClass, #solveItemMembers, #minor)>
  [125] extcall 37 .............................. return error(me, "Couldn't define members:" && pClass, #solveItemMembers, #minor)
  [127] ret
end

on solveAnimatedItemMembers me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0 .............................. tMemNum = 1
  [  4] pushcons 11 ............................. <"a">
  [  6] pusharglist 1 ........................... <"a">
  [  8] extcall 869 ............................. <charToNum("a")>
  [ 11] setlocal 1 .............................. i = charToNum("a")
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 2 .............................. j = 1
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setprop 845 ............................. pLayerProps = []
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] setprop 848 ............................. pLoczList = []
  [ 29] pusharglist 0 ........................... <[]>
  [ 31] pushlist ................................ <[]>
  [ 32] setprop 849 ............................. pLocShiftList = []
  [ 35] getlocal 0 .............................. <tMemNum>
  [ 37] pushzero ................................ <0>
  [ 38] gt ...................................... <tMemNum > 0>
  [ 39] jmpifz [483] ............................ repeat while tMemNum > 0
  [ 42] pushcons 18 ............................. <"rightwall">
  [ 44] getprop 839 ............................. <pClass>
  [ 47] joinpadstr .............................. <"rightwall" && pClass>
  [ 48] pushcons 12 ............................. <"_">
  [ 50] joinstr ................................. <"rightwall" && pClass & "_">
  [ 51] getlocal 1 .............................. <i>
  [ 53] pusharglist 1 ........................... <i>
  [ 55] extcall 870 ............................. <numToChar(i)>
  [ 58] joinstr ................................. <"rightwall" && pClass & "_" & numToChar(i)>
  [ 59] pushcons 12 ............................. <"_">
  [ 61] joinstr ................................. <"rightwall" && pClass & "_" & numToChar(i) & "_">
  [ 62] setlocal 3 .............................. tMemNameA = "rightwall" && pClass & "_" & numToChar(i) & "_"
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 4
  [ 67] getlocal 4
  [ 69] pushint8 10 ............................. <10>
  [ 71] lteq
  [ 72] jmpifz [119] ............................ repeat with tFrame = 0 to 10
  [ 75] getlocal 3 .............................. <tMemNameA>
  [ 77] getlocal 4 .............................. <tFrame>
  [ 79] pusharglist 1 ........................... <tFrame>
  [ 81] extcall 291 ............................. <string(tFrame)>
  [ 84] joinstr ................................. <tMemNameA & string(tFrame)>
  [ 85] setlocal 5 .............................. tMemName = tMemNameA & string(tFrame)
  [ 87] getlocal 5 .............................. <tMemName>
  [ 89] pusharglist 1 ........................... <tMemName>
  [ 91] extcall 652 ............................. <getmemnum(tMemName)>
  [ 94] setlocal 0 .............................. tMemNum = getmemnum(tMemName)
  [ 96] getlocal 5 .............................. <tMemName>
  [ 98] setlocal 6 .............................. tOldMemName = tMemName
  [100] getlocal 0 .............................. <tMemNum>
  [102] pushzero ................................ <0>
  [103] nteq .................................... <tMemNum <> 0>
  [104] jmpifz [110] ............................ if tMemNum <> 0 then
  [107] jmp [119] ............................... exit repeat
  [110] pushint8 1
  [112] getlocal 4
  [114] add
  [115] setlocal 4
  [117] endrepeat [ 67]
  [119] getlocal 0 .............................. <tMemNum>
  [121] pushzero ................................ <0>
  [122] nteq .................................... <tMemNum <> 0>
  [123] jmpifz [466] ............................ if tMemNum <> 0 then
  [126] getprop 848 ............................. <pLoczList>
  [129] pusharglist 0 ........................... <[]>
  [131] pushlist ................................ <[]>
  [132] pusharglistnoret 2 ...................... <pLoczList, []>
  [134] objcall 339 ............................. pLoczList.add([])
  [137] getprop 849 ............................. <pLocShiftList>
  [140] pusharglist 0 ........................... <[]>
  [142] pushlist ................................ <[]>
  [143] pusharglistnoret 2 ...................... <pLocShiftList, []>
  [145] objcall 339 ............................. pLocShiftList.add([])
  [148] pushzero ................................ <0>
  [149] setlocal 7
  [151] getlocal 7
  [153] pushint8 7 .............................. <7>
  [155] lteq
  [156] jmpifz [229] ............................ repeat with tdir = 0 to 7
  [159] getprop 848 ............................. <pLoczList>
  [162] pusharglist 1 ........................... <pLoczList>
  [164] objcall 872 ............................. <pLoczList.getLast()>
  [167] getparam 0 .............................. <me>
  [169] getlocal 1 .............................. <i>
  [171] pusharglist 1 ........................... <i>
  [173] extcall 870 ............................. <numToChar(i)>
  [176] getlocal 7 .............................. <tdir>
  [178] pusharglist 3 ........................... <me, numToChar(i), tdir>
  [180] objcall 837 ............................. <me.solveLocZ(numToChar(i), tdir)>
  [183] getlocal 1 .............................. <i>
  [185] add ..................................... <me.solveLocZ(numToChar(i), tdir) + i>
  [186] pusharglistnoret 2 ...................... <pLoczList.getLast(), me.solveLocZ(numToChar(i), tdir) + i>
  [188] objcall 339 ............................. pLoczList.getLast().add(me.solveLocZ(numToChar(i), tdir) + i)
  [191] getprop 849 ............................. <pLocShiftList>
  [194] pusharglist 1 ........................... <pLocShiftList>
  [196] objcall 872 ............................. <pLocShiftList.getLast()>
  [199] getparam 0 .............................. <me>
  [201] getlocal 1 .............................. <i>
  [203] pusharglist 1 ........................... <i>
  [205] extcall 870 ............................. <numToChar(i)>
  [208] getlocal 7 .............................. <tdir>
  [210] pusharglist 3 ........................... <me, numToChar(i), tdir>
  [212] objcall 838 ............................. <me.solveLocShift(numToChar(i), tdir)>
  [215] pusharglistnoret 2 ...................... <pLocShiftList.getLast(), me.solveLocShift(numToChar(i), tdir)>
  [217] objcall 339 ............................. pLocShiftList.getLast().add(me.solveLocShift(numToChar(i), tdir))
  [220] pushint8 1
  [222] getlocal 7
  [224] add
  [225] setlocal 7
  [227] endrepeat [151]
  [229] getlocal 0 .............................. <tMemNum>
  [231] pushint8 1 .............................. <1>
  [233] lt ...................................... <tMemNum < 1>
  [234] jmpifz [253] ............................ if tMemNum < 1 then / else
  [237] getlocal 0 .............................. <tMemNum>
  [239] pusharglist 1 ........................... <tMemNum>
  [241] extcall 873 ............................. <abs(tMemNum)>
  [244] setlocal 0 .............................. tMemNum = abs(tMemNum)
  [246] pushint8 1 .............................. <1>
  [248] setlocal 8 .............................. tFlipH = 1
  [250] jmp [256]
  [253] pushzero ................................ <0>
  [254] setlocal 8 .............................. tFlipH = 0
  [256] pusharglist 0 ........................... <[:]>
  [258] pushproplist ............................ <[:]>
  [259] setlocal 9 .............................. tProps = [:]
  [261] getlocal 9 .............................. <tProps>
  [263] pushsymb 255 ............................ <#member>
  [265] getlocal 0 .............................. <tMemNum>
  [267] pusharglistnoret 3 ...................... <tProps, #member, tMemNum>
  [269] objcall 254 ............................. tProps[#member] = tMemNum
  [271] getlocal 9 .............................. <tProps>
  [273] pushsymb 33 ............................. <#width>
  [275] getlocal 0 .............................. <tMemNum>
  [277] pusharglist 1 ........................... <tMemNum>
  [279] extcall 255 ............................. <member(tMemNum)>
  [281] getobjprop 33 ........................... <member(tMemNum).width>
  [283] pusharglistnoret 3 ...................... <tProps, #width, member(tMemNum).width>
  [285] objcall 254 ............................. tProps[#width] = member(tMemNum).width
  [287] getlocal 9 .............................. <tProps>
  [289] pushsymb 34 ............................. <#height>
  [291] getlocal 0 .............................. <tMemNum>
  [293] pusharglist 1 ........................... <tMemNum>
  [295] extcall 255 ............................. <member(tMemNum)>
  [297] getobjprop 34 ........................... <member(tMemNum).height>
  [299] pusharglistnoret 3 ...................... <tProps, #height, member(tMemNum).height>
  [301] objcall 254 ............................. tProps[#height] = member(tMemNum).height
  [303] getlocal 9 .............................. <tProps>
  [305] pushsymb 84 ............................. <#ink>
  [307] getparam 0 .............................. <me>
  [309] getlocal 1 .............................. <i>
  [311] pusharglist 1 ........................... <i>
  [313] extcall 870 ............................. <numToChar(i)>
  [316] pusharglist 2 ........................... <me, numToChar(i)>
  [318] objcall 832 ............................. <me.solveInk(numToChar(i))>
  [321] pusharglistnoret 3 ...................... <tProps, #ink, me.solveInk(numToChar(i))>
  [323] objcall 254 ............................. tProps[#ink] = me.solveInk(numToChar(i))
  [325] getlocal 9 .............................. <tProps>
  [327] pushsymb 850 ............................ <#blend>
  [330] getparam 0 .............................. <me>
  [332] getlocal 1 .............................. <i>
  [334] pusharglist 1 ........................... <i>
  [336] extcall 870 ............................. <numToChar(i)>
  [339] pusharglist 2 ........................... <me, numToChar(i)>
  [341] objcall 833 ............................. <me.solveBlend(numToChar(i))>
  [344] pusharglistnoret 3 ...................... <tProps, #blend, me.solveBlend(numToChar(i))>
  [346] objcall 254 ............................. tProps[#blend] = me.solveBlend(numToChar(i))
  [348] getlocal 9 .............................. <tProps>
  [350] pushsymb 847 ............................ <#flipH>
  [353] getlocal 8 .............................. <tFlipH>
  [355] pusharglistnoret 3 ...................... <tProps, #flipH, tFlipH>
  [357] objcall 254 ............................. tProps[#flipH] = tFlipH
  [359] getlocal 2 .............................. <j>
  [361] getprop 843 ............................. <pPartColors>
  [364] getobjprop 48 ........................... <pPartColors.count>
  [366] lteq .................................... <j <= pPartColors.count>
  [367] jmpifz [456] ............................ if j <= pPartColors.count then
  [370] getprop 843 ............................. <pPartColors>
  [373] getlocal 2 .............................. <j>
  [375] pusharglist 2 ........................... <pPartColors, j>
  [377] objcall 41 .............................. <pPartColors[j]>
  [379] pusharglist 1 ........................... <pPartColors[j]>
  [381] extcall 291 ............................. <string(pPartColors[j])>
  [384] pushsymb 292 ............................ <#char>
  [387] pushint8 1 .............................. <1>
  [389] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [391] objcall 123 ............................. <string(pPartColors[j]).char[1]>
  [393] pushcons 17 ............................. <"#">
  [395] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [396] jmpifz [428] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [399] getlocal 9 .............................. <tProps>
  [401] pushsymb 851 ............................ <#bgColor>
  [404] getprop 843 ............................. <pPartColors>
  [407] getlocal 2 .............................. <j>
  [409] pusharglist 2 ........................... <pPartColors, j>
  [411] objcall 41 .............................. <pPartColors[j]>
  [413] pusharglist 1 ........................... <pPartColors[j]>
  [415] extcall 27 .............................. <rgb(pPartColors[j])>
  [417] pusharglistnoret 3 ...................... <tProps, #bgColor, rgb(pPartColors[j])>
  [419] objcall 254 ............................. tProps[#bgColor] = rgb(pPartColors[j])
  [421] pushint8 41 ............................. <41>
  [423] setlocal 10 ............................. tInk = 41
  [425] jmp [456]
  [428] getlocal 9 .............................. <tProps>
  [430] pushsymb 851 ............................ <#bgColor>
  [433] getprop 843 ............................. <pPartColors>
  [436] getlocal 2 .............................. <j>
  [438] pusharglist 2 ........................... <pPartColors, j>
  [440] objcall 41 .............................. <pPartColors[j]>
  [442] pusharglist 1 ........................... <pPartColors[j]>
  [444] extcall 382 ............................. <integer(pPartColors[j])>
  [447] pusharglist 1 ........................... <integer(pPartColors[j])>
  [449] extcall 874 ............................. <paletteIndex(integer(pPartColors[j]))>
  [452] pusharglistnoret 3 ...................... <tProps, #bgColor, paletteIndex(integer(pPartColors[j]))>
  [454] objcall 254 ............................. tProps[#bgColor] = paletteIndex(integer(pPartColors[j]))
  [456] getprop 845 ............................. <pLayerProps>
  [459] getlocal 9 .............................. <tProps>
  [461] pusharglistnoret 2 ...................... <pLayerProps, tProps>
  [463] objcall 629 ............................. pLayerProps.append(tProps)
  [466] getlocal 1 .............................. <i>
  [468] pushint8 1 .............................. <1>
  [470] add ..................................... <i + 1>
  [471] setlocal 1 .............................. i = i + 1
  [473] getlocal 2 .............................. <j>
  [475] pushint8 1 .............................. <1>
  [477] add ..................................... <j + 1>
  [478] setlocal 2 .............................. j = j + 1
  [480] endrepeat [ 35]
  [483] getprop 845 ............................. <pLayerProps>
  [486] getobjprop 48 ........................... <pLayerProps.count>
  [488] pushzero ................................ <0>
  [489] gt ...................................... <pLayerProps.count > 0>
  [490] jmpifz [507] ............................ if pLayerProps.count > 0 then / else
  [493] pushcons 2 .............................. <"s">
  [495] setprop 846 ............................. pObjectType = "s"
  [498] pushint8 1 .............................. <1>
  [500] pusharglistnoret 1 ...................... <1>
  [502] extcall 37 .............................. return 1
  [504] jmp [528]
  [507] getparam 0 .............................. <me>
  [509] pushcons 15 ............................. <"Couldn't define members:">
  [511] getprop 839 ............................. <pClass>
  [514] joinpadstr .............................. <"Couldn't define members:" && pClass>
  [515] pushsymb 836 ............................ <#solveAnimatedItemMembers>
  [518] pushsymb 58 ............................. <#minor>
  [520] pusharglist 4 ........................... <me, "Couldn't define members:" && pClass, #solveAnimatedItemMembers, #minor>
  [522] extcall 46 .............................. <error(me, "Couldn't define members:" && pClass, #solveAnimatedItemMembers, #minor)>
  [524] pusharglistnoret 1 ...................... <error(me, "Couldn't define members:" && pClass, #solveAnimatedItemMembers, #minor)>
  [526] extcall 37 .............................. return error(me, "Couldn't define members:" && pClass, #solveAnimatedItemMembers, #minor)
  [528] ret
end

on solveLocZ me, tPart, tdir
  [  0] getprop 839 ............................. <pClass>
  [  3] pushcons 9 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 63 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 25] ............................ if not memberExists(pClass & ".props") then
  [ 14] getparam 1 .............................. <tPart>
  [ 16] pusharglist 1 ........................... <tPart>
  [ 18] extcall 869 ............................. <charToNum(tPart)>
  [ 21] pusharglistnoret 1 ...................... <charToNum(tPart)>
  [ 23] extcall 37 .............................. return charToNum(tPart)
  [ 25] getprop 839 ............................. <pClass>
  [ 28] pushcons 9 .............................. <".props">
  [ 30] joinstr ................................. <pClass & ".props">
  [ 31] pusharglist 1 ........................... <pClass & ".props">
  [ 33] extcall 652 ............................. <getmemnum(pClass & ".props")>
  [ 36] pushzero ................................ <0>
  [ 37] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 38] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 40] extcall 266 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 43] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 45] getlocal 0 .............................. <tPropList>
  [ 47] pusharglist 1 ........................... <tPropList>
  [ 49] extcall 43 .............................. <ilk(tPropList)>
  [ 51] pushsymb 45 ............................. <#propList>
  [ 53] nteq .................................... <ilk(tPropList) <> #propList>
  [ 54] jmpifz [ 82] ............................ if ilk(tPropList) <> #propList then / else
  [ 57] getparam 0 .............................. <me>
  [ 59] getprop 839 ............................. <pClass>
  [ 62] pushcons 10 ............................. <".props is not valid!">
  [ 64] joinstr ................................. <pClass & ".props is not valid!">
  [ 65] pushsymb 837 ............................ <#solveLocZ>
  [ 68] pushsymb 58 ............................. <#minor>
  [ 70] pusharglistnoret 4 ...................... <me, pClass & ".props is not valid!", #solveLocZ, #minor>
  [ 72] extcall 46 .............................. error(me, pClass & ".props is not valid!", #solveLocZ, #minor)
  [ 74] pushzero ................................ <0>
  [ 75] pusharglistnoret 1 ...................... <0>
  [ 77] extcall 37 .............................. return 0
  [ 79] jmp [157]
  [ 82] getlocal 0 .............................. <tPropList>
  [ 84] getparam 1 .............................. <tPart>
  [ 86] pusharglist 2 ........................... <tPropList, tPart>
  [ 88] objcall 41 .............................. <tPropList[tPart]>
  [ 90] pusharglist 0 ........................... <>
  [ 92] extcall 55 .............................. <VOID>
  [ 94] eq ...................................... <tPropList[tPart] = VOID>
  [ 95] jmpifz [103] ............................ if tPropList[tPart] = VOID then
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 1 ...................... <0>
  [101] extcall 37 .............................. return 0
  [103] getlocal 0 .............................. <tPropList>
  [105] getparam 1 .............................. <tPart>
  [107] pusharglist 2 ........................... <tPropList, tPart>
  [109] objcall 41 .............................. <tPropList[tPart]>
  [111] pushsymb 882 ............................ <#zshift>
  [114] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [116] objcall 41 .............................. <tPropList[tPart][#zshift]>
  [118] pusharglist 0 ........................... <>
  [120] extcall 55 .............................. <VOID>
  [122] eq ...................................... <tPropList[tPart][#zshift] = VOID>
  [123] jmpifz [131] ............................ if tPropList[tPart][#zshift] = VOID then
  [126] pushzero ................................ <0>
  [127] pusharglistnoret 1 ...................... <0>
  [129] extcall 37 .............................. return 0
  [131] getlocal 0 .............................. <tPropList>
  [133] getparam 1 .............................. <tPart>
  [135] pusharglist 2 ........................... <tPropList, tPart>
  [137] objcall 41 .............................. <tPropList[tPart]>
  [139] pushsymb 882 ............................ <#zshift>
  [142] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [144] objcall 41 .............................. <tPropList[tPart][#zshift]>
  [146] getobjprop 48 ........................... <tPropList[tPart][#zshift].count>
  [148] getparam 2 .............................. <tdir>
  [150] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [151] jmpifz [157] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [154] pushzero ................................ <0>
  [155] setparam 2 .............................. tdir = 0
  [157] getlocal 0 .............................. <tPropList>
  [159] getparam 1 .............................. <tPart>
  [161] pusharglist 2 ........................... <tPropList, tPart>
  [163] objcall 41 .............................. <tPropList[tPart]>
  [165] pushsymb 882 ............................ <#zshift>
  [168] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [170] objcall 41 .............................. <tPropList[tPart][#zshift]>
  [172] getparam 2 .............................. <tdir>
  [174] pushint8 1 .............................. <1>
  [176] add ..................................... <tdir + 1>
  [177] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [179] objcall 41 .............................. <tPropList[tPart][#zshift][tdir + 1]>
  [181] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [183] extcall 37 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [185] ret
end

on solveLocShift me, tPart, tdir
  [  0] getprop 839 ............................. <pClass>
  [  3] pushcons 9 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 63 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 19] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 37 .............................. return 0
  [ 19] getprop 839 ............................. <pClass>
  [ 22] pushcons 9 .............................. <".props">
  [ 24] joinstr ................................. <pClass & ".props">
  [ 25] pusharglist 1 ........................... <pClass & ".props">
  [ 27] extcall 652 ............................. <getmemnum(pClass & ".props")>
  [ 30] pushzero ................................ <0>
  [ 31] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 32] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 34] extcall 266 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 37] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 39] getlocal 0 .............................. <tPropList>
  [ 41] pusharglist 1 ........................... <tPropList>
  [ 43] extcall 43 .............................. <ilk(tPropList)>
  [ 45] pushsymb 45 ............................. <#propList>
  [ 47] nteq .................................... <ilk(tPropList) <> #propList>
  [ 48] jmpifz [ 76] ............................ if ilk(tPropList) <> #propList then / else
  [ 51] getparam 0 .............................. <me>
  [ 53] getprop 839 ............................. <pClass>
  [ 56] pushcons 10 ............................. <".props is not valid!">
  [ 58] joinstr ................................. <pClass & ".props is not valid!">
  [ 59] pushsymb 838 ............................ <#solveLocShift>
  [ 62] pushsymb 58 ............................. <#minor>
  [ 64] pusharglistnoret 4 ...................... <me, pClass & ".props is not valid!", #solveLocShift, #minor>
  [ 66] extcall 46 .............................. error(me, pClass & ".props is not valid!", #solveLocShift, #minor)
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 37 .............................. return 0
  [ 73] jmp [200]
  [ 76] getlocal 0 .............................. <tPropList>
  [ 78] getparam 1 .............................. <tPart>
  [ 80] pusharglist 2 ........................... <tPropList, tPart>
  [ 82] objcall 41 .............................. <tPropList[tPart]>
  [ 84] pusharglist 1 ........................... <tPropList[tPart]>
  [ 86] extcall 78 .............................. <voidp(tPropList[tPart])>
  [ 88] jmpifz [ 96] ............................ if voidp(tPropList[tPart]) then
  [ 91] pushzero ................................ <0>
  [ 92] pusharglistnoret 1 ...................... <0>
  [ 94] extcall 37 .............................. return 0
  [ 96] getlocal 0 .............................. <tPropList>
  [ 98] getparam 1 .............................. <tPart>
  [100] pusharglist 2 ........................... <tPropList, tPart>
  [102] objcall 41 .............................. <tPropList[tPart]>
  [104] pushsymb 883 ............................ <#locshift>
  [107] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [109] objcall 41 .............................. <tPropList[tPart][#locshift]>
  [111] pusharglist 1 ........................... <tPropList[tPart][#locshift]>
  [113] extcall 78 .............................. <voidp(tPropList[tPart][#locshift])>
  [115] jmpifz [123] ............................ if voidp(tPropList[tPart][#locshift]) then
  [118] pushzero ................................ <0>
  [119] pusharglistnoret 1 ...................... <0>
  [121] extcall 37 .............................. return 0
  [123] getlocal 0 .............................. <tPropList>
  [125] getparam 1 .............................. <tPart>
  [127] pusharglist 2 ........................... <tPropList, tPart>
  [129] objcall 41 .............................. <tPropList[tPart]>
  [131] pushsymb 883 ............................ <#locshift>
  [134] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [136] objcall 41 .............................. <tPropList[tPart][#locshift]>
  [138] getobjprop 48 ........................... <tPropList[tPart][#locshift].count>
  [140] getparam 2 .............................. <tdir>
  [142] lteq .................................... <tPropList[tPart][#locshift].count <= tdir>
  [143] jmpifz [151] ............................ if tPropList[tPart][#locshift].count <= tdir then
  [146] pushzero ................................ <0>
  [147] pusharglistnoret 1 ...................... <0>
  [149] extcall 37 .............................. return 0
  [151] getlocal 0 .............................. <tPropList>
  [153] getparam 1 .............................. <tPart>
  [155] pusharglist 2 ........................... <tPropList, tPart>
  [157] objcall 41 .............................. <tPropList[tPart]>
  [159] pushsymb 883 ............................ <#locshift>
  [162] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [164] objcall 41 .............................. <tPropList[tPart][#locshift]>
  [166] getparam 2 .............................. <tdir>
  [168] pushint8 1 .............................. <1>
  [170] add ..................................... <tdir + 1>
  [171] pusharglist 2 ........................... <tPropList[tPart][#locshift], tdir + 1>
  [173] objcall 41 .............................. <tPropList[tPart][#locshift][tdir + 1]>
  [175] pusharglist 1 ........................... <tPropList[tPart][#locshift][tdir + 1]>
  [177] extcall 266 ............................. <value(tPropList[tPart][#locshift][tdir + 1])>
  [180] setlocal 1 .............................. tShift = value(tPropList[tPart][#locshift][tdir + 1])
  [182] getlocal 1 .............................. <tShift>
  [184] pusharglist 1 ........................... <tShift>
  [186] extcall 43 .............................. <ilk(tShift)>
  [188] pushsymb 32 ............................. <#point>
  [190] eq ...................................... <ilk(tShift) = #point>
  [191] jmpifz [200] ............................ if ilk(tShift) = #point then
  [194] getlocal 1 .............................. <tShift>
  [196] pusharglistnoret 1 ...................... <tShift>
  [198] extcall 37 .............................. return tShift
  [200] pushzero ................................ <0>
  [201] pusharglistnoret 1 ...................... <0>
  [203] extcall 37 .............................. return 0
  [205] ret
end
