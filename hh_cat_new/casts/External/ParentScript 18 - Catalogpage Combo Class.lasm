on resolveLargePreview me, tOffer
  [  0] getparam 1 .............................. <tOffer>
  [  2] pusharglist 1 ........................... <tOffer>
  [  4] extcall 57 .............................. <objectp(tOffer)>
  [  6] not ..................................... <not objectp(tOffer)>
  [  7] jmpifz [ 27] ............................ if not objectp(tOffer) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 0 .............................. <"Invalid input format">
  [ 14] pushsymb 555 ............................ <#resolveLargePreview>
  [ 17] pushsymb 47 ............................. <#major>
  [ 19] pusharglist 4 ........................... <me, "Invalid input format", #resolveLargePreview, #major>
  [ 21] extcall 46 .............................. <error(me, "Invalid input format", #resolveLargePreview, #major)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Invalid input format", #resolveLargePreview, #major)>
  [ 25] extcall 37 .............................. return error(me, "Invalid input format", #resolveLargePreview, #major)
  [ 27] getparam 1 .............................. <tOffer>
  [ 29] pusharglist 1 ........................... <tOffer>
  [ 31] objcall 59 .............................. <tOffer.getCount()>
  [ 33] pushint8 1 .............................. <1>
  [ 35] lt ...................................... <tOffer.getCount() < 1>
  [ 36] jmpifz [ 56] ............................ if tOffer.getCount() < 1 then
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 1 .............................. <"Offer  has no content">
  [ 43] pushsymb 555 ............................ <#resolveLargePreview>
  [ 46] pushsymb 47 ............................. <#major>
  [ 48] pusharglist 4 ........................... <me, "Offer  has no content", #resolveLargePreview, #major>
  [ 50] extcall 46 .............................. <error(me, "Offer  has no content", #resolveLargePreview, #major)>
  [ 52] pusharglistnoret 1 ...................... <error(me, "Offer  has no content", #resolveLargePreview, #major)>
  [ 54] extcall 37 .............................. return error(me, "Offer  has no content", #resolveLargePreview, #major)
  [ 56] pushcons 2 .............................. <"ctlg_pic_">
  [ 58] setlocal 0 .............................. tPrevMember = "ctlg_pic_"
  [ 60] getparam 1 .............................. <tOffer>
  [ 62] pusharglist 1 ........................... <tOffer>
  [ 64] objcall 581 ............................. <tOffer.getName()>
  [ 67] setlocal 1 .............................. tOfferName = tOffer.getName()
  [ 69] getlocal 0 .............................. <tPrevMember>
  [ 71] getlocal 1 .............................. <tOfferName>
  [ 73] joinstr ................................. <tPrevMember & tOfferName>
  [ 74] pusharglist 1 ........................... <tPrevMember & tOfferName>
  [ 76] extcall 63 .............................. <memberExists(tPrevMember & tOfferName)>
  [ 78] jmpifz [ 96] ............................ if memberExists(tPrevMember & tOfferName) then
  [ 81] getlocal 0 .............................. <tPrevMember>
  [ 83] getlocal 1 .............................. <tOfferName>
  [ 85] joinstr ................................. <tPrevMember & tOfferName>
  [ 86] pusharglist 1 ........................... <tPrevMember & tOfferName>
  [ 88] extcall 21 .............................. <getMember(tPrevMember & tOfferName)>
  [ 90] getobjprop 17 ........................... <getMember(tPrevMember & tOfferName).image>
  [ 92] pusharglistnoret 1 ...................... <getMember(tPrevMember & tOfferName).image>
  [ 94] extcall 37 .............................. return getMember(tPrevMember & tOfferName).image
  [ 96] getparam 1 .............................. <tOffer>
  [ 98] pushint8 1 .............................. <1>
  [100] pusharglist 2 ........................... <tOffer, 1>
  [102] objcall 60 .............................. <tOffer.getContent(1)>
  [104] pusharglist 1 ........................... <tOffer.getContent(1)>
  [106] objcall 61 .............................. <tOffer.getContent(1).getType()>
  [108] setlocal 2 .............................. ttype = tOffer.getContent(1).getType()
  [110] getlocal 2 .............................. <ttype>
  [112] pushcons 3 .............................. <"e">
  [114] eq ...................................... <ttype = "e">
  [115] jmpifz [162] ............................ if ttype = "e" then / else
  [118] getparam 1 .............................. <tOffer>
  [120] pushint8 1 .............................. <1>
  [122] pusharglist 2 ........................... <tOffer, 1>
  [124] objcall 60 .............................. <tOffer.getContent(1)>
  [126] pusharglist 1 ........................... <tOffer.getContent(1)>
  [128] objcall 62 .............................. <tOffer.getContent(1).getClassId()>
  [130] setlocal 3 .............................. tClassID = tOffer.getContent(1).getClassId()
  [132] pushcons 4 .............................. <"ctlg_fx_prev_">
  [134] getlocal 3 .............................. <tClassID>
  [136] joinstr ................................. <"ctlg_fx_prev_" & tClassID>
  [137] pusharglist 1 ........................... <"ctlg_fx_prev_" & tClassID>
  [139] extcall 63 .............................. <memberExists("ctlg_fx_prev_" & tClassID)>
  [141] jmpifz [159] ............................ if memberExists("ctlg_fx_prev_" & tClassID) then
  [144] pushcons 4 .............................. <"ctlg_fx_prev_">
  [146] getlocal 3 .............................. <tClassID>
  [148] joinstr ................................. <"ctlg_fx_prev_" & tClassID>
  [149] pusharglist 1 ........................... <"ctlg_fx_prev_" & tClassID>
  [151] extcall 21 .............................. <getMember("ctlg_fx_prev_" & tClassID)>
  [153] getobjprop 17 ........................... <getMember("ctlg_fx_prev_" & tClassID).image>
  [155] pusharglistnoret 1 ...................... <getMember("ctlg_fx_prev_" & tClassID).image>
  [157] extcall 37 .............................. return getMember("ctlg_fx_prev_" & tClassID).image
  [159] jmp [177]
  [162] getparam 0 .............................. <me>
  [164] getchainedprop 64 ....................... <me.ancestor>
  [166] getparam 1 .............................. <tOffer>
  [168] pusharglist 2 ........................... <me.ancestor, tOffer>
  [170] objcall 555 ............................. <me.ancestor.resolveLargePreview(tOffer)>
  [173] pusharglistnoret 1 ...................... <me.ancestor.resolveLargePreview(tOffer)>
  [175] extcall 37 .............................. return me.ancestor.resolveLargePreview(tOffer)
  [177] pushcons 5 .............................. <"no_icon_small">
  [179] pusharglist 1 ........................... <"no_icon_small">
  [181] extcall 21 .............................. <getMember("no_icon_small")>
  [183] getobjprop 17 ........................... <getMember("no_icon_small").image>
  [185] pusharglistnoret 1 ...................... <getMember("no_icon_small").image>
  [187] extcall 37 .............................. return getMember("no_icon_small").image
  [189] ret
end

on showPreview me, tOfferGroup
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 150 .......................... <me.pWndObj>
  [  4] pusharglist 1 ........................... <me.pWndObj>
  [  6] extcall 78 .............................. <voidp(me.pWndObj)>
  [  8] jmpifz [ 30] ............................ if voidp(me.pWndObj) then
  [ 11] pushcons 6 .............................. <RETURN>
  [ 13] getparam 0 .............................. <me>
  [ 15] pushcons 7 .............................. <"Missing handle to window object!">
  [ 17] pushsymb 556 ............................ <#showPreview>
  [ 20] pushsymb 47 ............................. <#major>
  [ 22] pusharglist 4 ........................... <me, "Missing handle to window object!", #showPreview, #major>
  [ 24] extcall 46 .............................. <error(me, "Missing handle to window object!", #showPreview, #major)>
  [ 26] pusharglistnoret 2 ...................... <RETURN, error(me, "Missing handle to window object!", #showPreview, #major)>
  [ 28] extcall 37 .............................. return RETURN, error(me, "Missing handle to window object!", #showPreview, #major)
  [ 30] getparam 1 .............................. <tOfferGroup>
  [ 32] pusharglist 1 ........................... <tOfferGroup>
  [ 34] extcall 57 .............................. <objectp(tOfferGroup)>
  [ 36] not ..................................... <not objectp(tOfferGroup)>
  [ 37] jmpifz [ 57] ............................ if not objectp(tOfferGroup) then
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 0 .............................. <"Invalid input format">
  [ 44] pushsymb 556 ............................ <#showPreview>
  [ 47] pushsymb 47 ............................. <#major>
  [ 49] pusharglist 4 ........................... <me, "Invalid input format", #showPreview, #major>
  [ 51] extcall 46 .............................. <error(me, "Invalid input format", #showPreview, #major)>
  [ 53] pusharglistnoret 1 ...................... <error(me, "Invalid input format", #showPreview, #major)>
  [ 55] extcall 37 .............................. return error(me, "Invalid input format", #showPreview, #major)
  [ 57] getparam 1 .............................. <tOfferGroup>
  [ 59] pusharglist 1 ........................... <tOfferGroup>
  [ 61] objcall 59 .............................. <tOfferGroup.getCount()>
  [ 63] pushint8 1 .............................. <1>
  [ 65] lt ...................................... <tOfferGroup.getCount() < 1>
  [ 66] jmpifz [ 86] ............................ if tOfferGroup.getCount() < 1 then
  [ 69] getparam 0 .............................. <me>
  [ 71] pushcons 8 .............................. <"Offer group is empty">
  [ 73] pushsymb 556 ............................ <#showPreview>
  [ 76] pushsymb 47 ............................. <#major>
  [ 78] pusharglist 4 ........................... <me, "Offer group is empty", #showPreview, #major>
  [ 80] extcall 46 .............................. <error(me, "Offer group is empty", #showPreview, #major)>
  [ 82] pusharglistnoret 1 ...................... <error(me, "Offer group is empty", #showPreview, #major)>
  [ 84] extcall 37 .............................. return error(me, "Offer group is empty", #showPreview, #major)
  [ 86] getparam 1 .............................. <tOfferGroup>
  [ 88] pushint8 1 .............................. <1>
  [ 90] pusharglist 2 ........................... <tOfferGroup, 1>
  [ 92] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [ 95] pusharglist 1 ........................... <tOfferGroup.getOffer(1)>
  [ 97] objcall 59 .............................. <tOfferGroup.getOffer(1).getCount()>
  [ 99] pushint8 1 .............................. <1>
  [101] lt ...................................... <tOfferGroup.getOffer(1).getCount() < 1>
  [102] jmpifz [122] ............................ if tOfferGroup.getOffer(1).getCount() < 1 then
  [105] getparam 0 .............................. <me>
  [107] pushcons 9 .............................. <"Offer group item at index 1 has no content">
  [109] pushsymb 556 ............................ <#showPreview>
  [112] pushsymb 47 ............................. <#major>
  [114] pusharglist 4 ........................... <me, "Offer group item at index 1 has no content", #showPreview, #major>
  [116] extcall 46 .............................. <error(me, "Offer group item at index 1 has no content", #showPreview, #major)>
  [118] pusharglistnoret 1 ...................... <error(me, "Offer group item at index 1 has no content", #showPreview, #major)>
  [120] extcall 37 .............................. return error(me, "Offer group item at index 1 has no content", #showPreview, #major)
  [122] getparam 0 .............................. <me>
  [124] getparam 1 .............................. <tOfferGroup>
  [126] pushint8 1 .............................. <1>
  [128] pusharglist 2 ........................... <tOfferGroup, 1>
  [130] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [133] pusharglist 2 ........................... <me, tOfferGroup.getOffer(1)>
  [135] objcall 555 ............................. <me.resolveLargePreview(tOfferGroup.getOffer(1))>
  [138] setlocal 0 .............................. tPrevImage = me.resolveLargePreview(tOfferGroup.getOffer(1))
  [140] getlocal 0 .............................. <tPrevImage>
  [142] pusharglist 1 ........................... <tPrevImage>
  [144] extcall 43 .............................. <ilk(tPrevImage)>
  [146] pushsymb 17 ............................. <#image>
  [148] nteq .................................... <ilk(tPrevImage) <> #image>
  [149] jmpifz [157] ............................ if ilk(tPrevImage) <> #image then
  [152] pushzero ................................ <0>
  [153] pusharglistnoret 1 ...................... <0>
  [155] extcall 37 .............................. return 0
  [157] getparam 0 .............................. <me>
  [159] getlocal 0 .............................. <tPrevImage>
  [161] getparam 0 .............................. <me>
  [163] getchainedprop 150 ...................... <me.pWndObj>
  [165] getparam 0 .............................. <me>
  [167] pushsymb 561 ............................ <#pImageElements>
  [170] pushint8 2 .............................. <2>
  [172] pusharglist 3 ........................... <me, #pImageElements, 2>
  [174] objcall 123 ............................. <me.pImageElements[2]>
  [176] pusharglist 2 ........................... <me.pWndObj, me.pImageElements[2]>
  [178] objcall 178 ............................. <me.pWndObj.getElement(me.pImageElements[2])>
  [180] pusharglistnoret 3 ...................... <me, tPrevImage, me.pWndObj.getElement(me.pImageElements[2])>
  [182] objcall 524 ............................. me.centerBlitImageToElement(tPrevImage, me.pWndObj.getElement(me.pImageElements[2]))
  [185] getparam 0 .............................. <me>
  [187] getchainedprop 565 ...................... <me.pPersistentCatalogData>
  [190] getparam 1 .............................. <tOfferGroup>
  [192] pushint8 1 .............................. <1>
  [194] pusharglist 2 ........................... <tOfferGroup, 1>
  [196] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [199] pusharglist 1 ........................... <tOfferGroup.getOffer(1)>
  [201] objcall 581 ............................. <tOfferGroup.getOffer(1).getName()>
  [204] pusharglist 2 ........................... <me.pPersistentCatalogData, tOfferGroup.getOffer(1).getName()>
  [206] objcall 487 ............................. <me.pPersistentCatalogData.getProps(tOfferGroup.getOffer(1).getName())>
  [209] setlocal 1 .............................. tCatalogProps = me.pPersistentCatalogData.getProps(tOfferGroup.getOffer(1).getName())
  [211] getlocal 1 .............................. <tCatalogProps>
  [213] pusharglist 1 ........................... <tCatalogProps>
  [215] extcall 349 ............................. <listp(tCatalogProps)>
  [218] jmpifz [356] ............................ if listp(tCatalogProps) then / else
  [221] getlocal 1 .............................. <tCatalogProps>
  [223] pushsymb 510 ............................ <#description>
  [226] pusharglist 2 ........................... <tCatalogProps, #description>
  [228] objcall 41 .............................. <tCatalogProps[#description]>
  [230] setlocal 2 .............................. tDesc = tCatalogProps[#description]
  [232] getparam 1 .............................. <tOfferGroup>
  [234] pushint8 1 .............................. <1>
  [236] pusharglist 2 ........................... <tOfferGroup, 1>
  [238] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [241] pushint8 1 .............................. <1>
  [243] pusharglist 2 ........................... <tOfferGroup.getOffer(1), 1>
  [245] objcall 60 .............................. <tOfferGroup.getOffer(1).getContent(1)>
  [247] pusharglist 1 ........................... <tOfferGroup.getOffer(1).getContent(1)>
  [249] objcall 591 ............................. <tOfferGroup.getOffer(1).getContent(1).getExpiration()>
  [252] setlocal 3 .............................. tExp = tOfferGroup.getOffer(1).getContent(1).getExpiration()
  [254] getlocal 3 .............................. <tExp>
  [256] pushint8 1 .............................. <1>
  [258] inv ..................................... <-1>
  [259] nteq .................................... <tExp <> -1>
  [260] jmpifz [316] ............................ if tExp <> -1 then
  [263] getlocal 3 .............................. <tExp>
  [265] pushint8 60 ............................. <60>
  [267] div ..................................... <tExp / 60>
  [268] setlocal 4 .............................. tHours = tExp / 60
  [270] getlocal 3 .............................. <tExp>
  [272] pushint8 60 ............................. <60>
  [274] mod ..................................... <tExp mod 60>
  [275] setlocal 5 .............................. tMins = tExp mod 60
  [277] pushcons 10 ............................. <"expiring_item_postfix">
  [279] pushcons 11 ............................. <"Lasts %x% hours %y% minutes.">
  [281] pusharglist 2 ........................... <"expiring_item_postfix", "Lasts %x% hours %y% minutes.">
  [283] extcall 158 ............................. <getText("expiring_item_postfix", "Lasts %x% hours %y% minutes.")>
  [285] pushcons 12 ............................. <"%x%">
  [287] getlocal 4 .............................. <tHours>
  [289] pusharglist 3 ........................... <getText("expiring_item_postfix", "Lasts %x% hours %y% minutes."), "%x%", tHours>
  [291] extcall 415 ............................. <replaceChunks(getText("expiring_item_postfix", "Lasts %x% hours %y% minutes."), "%x%", tHours)>
  [294] setlocal 6 .............................. tExpText = replaceChunks(getText("expiring_item_postfix", "Lasts %x% hours %y% minutes."), "%x%", tHours)
  [296] getlocal 6 .............................. <tExpText>
  [298] pushcons 13 ............................. <"%y%">
  [300] getlocal 5 .............................. <tMins>
  [302] pusharglist 3 ........................... <tExpText, "%y%", tMins>
  [304] extcall 415 ............................. <replaceChunks(tExpText, "%y%", tMins)>
  [307] setlocal 6 .............................. tExpText = replaceChunks(tExpText, "%y%", tMins)
  [309] getlocal 2 .............................. <tDesc>
  [311] getlocal 6 .............................. <tExpText>
  [313] joinpadstr .............................. <tDesc && tExpText>
  [314] setlocal 2 .............................. tDesc = tDesc && tExpText
  [316] getparam 0 .............................. <me>
  [318] getparam 0 .............................. <me>
  [320] getobjprop 150 .......................... <me.pWndObj>
  [322] pushcons 14 ............................. <"ctlg_description">
  [324] getlocal 2 .............................. <tDesc>
  [326] pusharglistnoret 4 ...................... <me, me.pWndObj, "ctlg_description", tDesc>
  [328] objcall 525 ............................. me.setElementText(me.pWndObj, "ctlg_description", tDesc)
  [331] getparam 0 .............................. <me>
  [333] getparam 0 .............................. <me>
  [335] getobjprop 150 .......................... <me.pWndObj>
  [337] pushcons 15 ............................. <"ctlg_product_name">
  [339] getlocal 1 .............................. <tCatalogProps>
  [341] pushsymb 269 ............................ <#name>
  [344] pusharglist 2 ........................... <tCatalogProps, #name>
  [346] objcall 41 .............................. <tCatalogProps[#name]>
  [348] pusharglistnoret 4 ...................... <me, me.pWndObj, "ctlg_product_name", tCatalogProps[#name]>
  [350] objcall 525 ............................. me.setElementText(me.pWndObj, "ctlg_product_name", tCatalogProps[#name])
  [353] jmp [384]
  [356] getparam 0 .............................. <me>
  [358] pushcons 16 ............................. <"Missing catalogprops for offer ">
  [360] getparam 1 .............................. <tOfferGroup>
  [362] pushint8 1 .............................. <1>
  [364] pusharglist 2 ........................... <tOfferGroup, 1>
  [366] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [369] pusharglist 1 ........................... <tOfferGroup.getOffer(1)>
  [371] objcall 581 ............................. <tOfferGroup.getOffer(1).getName()>
  [374] joinstr ................................. <"Missing catalogprops for offer " & tOfferGroup.getOffer(1).getName()>
  [375] pushsymb 556 ............................ <#showPreview>
  [378] pushsymb 58 ............................. <#minor>
  [380] pusharglistnoret 4 ...................... <me, "Missing catalogprops for offer " & tOfferGroup.getOffer(1).getName(), #showPreview, #minor>
  [382] extcall 46 .............................. error(me, "Missing catalogprops for offer " & tOfferGroup.getOffer(1).getName(), #showPreview, #minor)
  [384] pushint8 1 .............................. <1>
  [386] setlocal 7
  [388] getlocal 7
  [390] getparam 0 .............................. <me>
  [392] pushsymb 558 ............................ <#pOfferTypesAvailable>
  [395] pusharglist 2 ........................... <me, #pOfferTypesAvailable>
  [397] objcall 48 .............................. <me.pOfferTypesAvailable.count>
  [399] lteq
  [400] jmpifz [511] ............................ repeat with i = 1 to me.pOfferTypesAvailable.count
  [403] getparam 0 .............................. <me>
  [405] getchainedprop 558 ...................... <me.pOfferTypesAvailable>
  [408] getlocal 7 .............................. <i>
  [410] pusharglist 2 ........................... <me.pOfferTypesAvailable, i>
  [412] objcall 41 .............................. <me.pOfferTypesAvailable[i]>
  [414] pushsymb 592 ............................ <#elements>
  [417] pusharglist 2 ........................... <me.pOfferTypesAvailable[i], #elements>
  [419] objcall 102 ............................. <me.pOfferTypesAvailable[i].getaProp(#elements)>
  [421] setlocal 8 .............................. tElements = me.pOfferTypesAvailable[i].getaProp(#elements)
  [423] getparam 0 .............................. <me>
  [425] getparam 1 .............................. <tOfferGroup>
  [427] getparam 0 .............................. <me>
  [429] getchainedprop 558 ...................... <me.pOfferTypesAvailable>
  [432] getlocal 7 .............................. <i>
  [434] pusharglist 2 ........................... <me.pOfferTypesAvailable, i>
  [436] objcall 41 .............................. <me.pOfferTypesAvailable[i]>
  [438] pushsymb 399 ............................ <#type>
  [441] pusharglist 2 ........................... <me.pOfferTypesAvailable[i], #type>
  [443] objcall 102 ............................. <me.pOfferTypesAvailable[i].getaProp(#type)>
  [445] pusharglist 3 ........................... <me, tOfferGroup, me.pOfferTypesAvailable[i].getaProp(#type)>
  [447] objcall 523 ............................. <me.getOfferPriceTextByType(tOfferGroup, me.pOfferTypesAvailable[i].getaProp(#type))>
  [450] setlocal 9 .............................. tText = me.getOfferPriceTextByType(tOfferGroup, me.pOfferTypesAvailable[i].getaProp(#type))
  [452] getlocal 8 .............................. <tElements>
  [454] peek 0
  [456] pusharglist 1
  [458] extcall 48
  [460] pushint8 1
  [462] peek 0
  [464] peek 2
  [466] lteq
  [467] jmpifz [500] ............................ repeat with tElement in tElements
  [470] peek 2
  [472] peek 1
  [474] pusharglist 2
  [476] extcall 41
  [478] setlocal 10
  [480] getparam 0 .............................. <me>
  [482] getparam 0 .............................. <me>
  [484] getobjprop 150 .......................... <me.pWndObj>
  [486] getlocal 10 ............................. <tElement>
  [488] getlocal 9 .............................. <tText>
  [490] pusharglistnoret 4 ...................... <me, me.pWndObj, tElement, tText>
  [492] objcall 525 ............................. me.setElementText(me.pWndObj, tElement, tText)
  [495] pushint8 1
  [497] add
  [498] endrepeat [462]
  [500] pop 3
  [502] pushint8 1
  [504] getlocal 7
  [506] add
  [507] setlocal 7
  [509] endrepeat [388]
  [511] ret
end

on handleClick me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 198 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [697] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] peek 0 .................................. case tSprID of
  [ 12] pushcons 17 ............................. <"ctlg_productstrip">
  [ 14] eq
  [ 15] jmpifz [186] ............................ (case) "ctlg_productstrip":
  [ 18] getparam 3 .............................. <tProp>
  [ 20] pusharglist 1 ........................... <tProp>
  [ 22] extcall 43 .............................. <ilk(tProp)>
  [ 24] pushsymb 32 ............................. <#point>
  [ 26] nteq .................................... <ilk(tProp) <> #point>
  [ 27] jmpifz [ 36] ............................ if ilk(tProp) <> #point then
  [ 30] pop 1
  [ 32] pusharglistnoret 0 ...................... <>
  [ 34] extcall 37 .............................. return 
  [ 36] pusharglist 0 ........................... <>
  [ 38] extcall 55 .............................. <VOID>
  [ 40] setlocal 0 .............................. tSelectedItem = VOID
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 557 .......................... <me.pProductStrip>
  [ 47] pusharglist 1 ........................... <me.pProductStrip>
  [ 49] extcall 57 .............................. <objectp(me.pProductStrip)>
  [ 51] jmpifz [ 76] ............................ if objectp(me.pProductStrip) then
  [ 54] getparam 0 .............................. <me>
  [ 56] getchainedprop 557 ...................... <me.pProductStrip>
  [ 59] getparam 3 .............................. <tProp>
  [ 61] pusharglistnoret 2 ...................... <me.pProductStrip, tProp>
  [ 63] objcall 13 .............................. me.pProductStrip.selectItemAt(tProp)
  [ 65] getparam 0 .............................. <me>
  [ 67] getchainedprop 557 ...................... <me.pProductStrip>
  [ 70] pusharglist 1 ........................... <me.pProductStrip>
  [ 72] objcall 14 .............................. <me.pProductStrip.getSelectedItem()>
  [ 74] setlocal 0 .............................. tSelectedItem = me.pProductStrip.getSelectedItem()
  [ 76] getlocal 0 .............................. <tSelectedItem>
  [ 78] pusharglist 1 ........................... <tSelectedItem>
  [ 80] extcall 78 .............................. <voidp(tSelectedItem)>
  [ 82] not ..................................... <not voidp(tSelectedItem)>
  [ 83] jmpifz [183] ............................ if not voidp(tSelectedItem) then
  [ 86] getparam 0 .............................. <me>
  [ 88] getobjprop 563 .......................... <me.pHideElements>
  [ 91] peek 0
  [ 93] pusharglist 1
  [ 95] extcall 48
  [ 97] pushint8 1
  [ 99] peek 0
  [101] peek 2
  [103] lteq
  [104] jmpifz [149] ............................ repeat with tElement in me.pHideElements
  [107] peek 2
  [109] peek 1
  [111] pusharglist 2
  [113] extcall 41
  [115] setlocal 1
  [117] getparam 0 .............................. <me>
  [119] getchainedprop 150 ...................... <me.pWndObj>
  [121] getlocal 1 .............................. <tElement>
  [123] pusharglist 2 ........................... <me.pWndObj, tElement>
  [125] objcall 253 ............................. <me.pWndObj.elementExists(tElement)>
  [127] jmpifz [144] ............................ if me.pWndObj.elementExists(tElement) then
  [130] getparam 0 .............................. <me>
  [132] getchainedprop 150 ...................... <me.pWndObj>
  [134] getlocal 1 .............................. <tElement>
  [136] pusharglist 2 ........................... <me.pWndObj, tElement>
  [138] objcall 178 ............................. <me.pWndObj.getElement(tElement)>
  [140] pusharglistnoret 1 ...................... <me.pWndObj.getElement(tElement)>
  [142] objcall 121 ............................. me.pWndObj.getElement(tElement).hide()
  [144] pushint8 1
  [146] add
  [147] endrepeat [ 99]
  [149] pop 3
  [151] getparam 0 .............................. <me>
  [153] getlocal 0 .............................. <tSelectedItem>
  [155] pusharglistnoret 2 ...................... <me, tSelectedItem>
  [157] objcall 556 ............................. me.showPreview(tSelectedItem)
  [160] getparam 0 .............................. <me>
  [162] pusharglistnoret 1 ...................... <me>
  [164] objcall 553 ............................. me.showPriceBox()
  [167] getparam 0 .............................. <me>
  [169] getparam 0 .............................. <me>
  [171] getlocal 0 .............................. <tSelectedItem>
  [173] pusharglist 2 ........................... <me, tSelectedItem>
  [175] objcall 521 ............................. <me.getOfferTypeList(tSelectedItem)>
  [178] pusharglistnoret 2 ...................... <me, me.getOfferTypeList(tSelectedItem)>
  [180] objcall 554 ............................. me.setBuyButtonStates(me.getOfferTypeList(tSelectedItem))
  [183] jmp [695]
  [186] peek 0
  [188] pushcons 18 ............................. <"ctlg_buy_button">
  [190] nteq
  [191] jmpifz [210] ............................ (case) "ctlg_buy_button", ...
  [194] peek 0
  [196] pushcons 19 ............................. <"ctlg_buy_pixels_credits">
  [198] nteq
  [199] jmpifz [210] ............................ (case) ..., "ctlg_buy_pixels_credits", ...
  [202] peek 0
  [204] pushcons 20 ............................. <"ctlg_buy_pixels">
  [206] eq
  [207] jmpifz [385] ............................ (case) ..., "ctlg_buy_pixels":
  [210] getparam 0 .............................. <me>
  [212] getobjprop 557 .......................... <me.pProductStrip>
  [215] pusharglist 1 ........................... <me.pProductStrip>
  [217] extcall 57 .............................. <objectp(me.pProductStrip)>
  [219] not ..................................... <not objectp(me.pProductStrip)>
  [220] jmpifz [229] ............................ if not objectp(me.pProductStrip) then
  [223] pop 1
  [225] pusharglistnoret 0 ...................... <>
  [227] extcall 37 .............................. return 
  [229] getparam 0 .............................. <me>
  [231] getchainedprop 557 ...................... <me.pProductStrip>
  [234] pusharglist 1 ........................... <me.pProductStrip>
  [236] objcall 14 .............................. <me.pProductStrip.getSelectedItem()>
  [238] setlocal 0 .............................. tSelectedItem = me.pProductStrip.getSelectedItem()
  [240] getlocal 0 .............................. <tSelectedItem>
  [242] pusharglist 1 ........................... <tSelectedItem>
  [244] extcall 78 .............................. <voidp(tSelectedItem)>
  [246] not ..................................... <not voidp(tSelectedItem)>
  [247] jmpifz [382] ............................ if not voidp(tSelectedItem) then
  [250] getparam 0 .............................. <me>
  [252] pushsymb 558 ............................ <#pOfferTypesAvailable>
  [255] getparam 2 .............................. <tSprID>
  [257] pusharglist 3 ........................... <me, #pOfferTypesAvailable, tSprID>
  [259] objcall 566 ............................. <me.pOfferTypesAvailable[tSprID]>
  [262] pushsymb 399 ............................ <#type>
  [265] pusharglist 2 ........................... <me.pOfferTypesAvailable[tSprID], #type>
  [267] objcall 102 ............................. <me.pOfferTypesAvailable[tSprID].getaProp(#type)>
  [269] setlocal 2 .............................. tOfferType = me.pOfferTypesAvailable[tSprID].getaProp(#type)
  [271] getparam 0 .............................. <me>
  [273] getlocal 0 .............................. <tSelectedItem>
  [275] getlocal 2 .............................. <tOfferType>
  [277] pusharglist 3 ........................... <me, tSelectedItem, tOfferType>
  [279] objcall 522 ............................. <me.getOfferByType(tSelectedItem, tOfferType)>
  [282] setlocal 3 .............................. tOffer = me.getOfferByType(tSelectedItem, tOfferType)
  [284] getlocal 3 .............................. <tOffer>
  [286] pusharglist 1 ........................... <tOffer>
  [288] extcall 78 .............................. <voidp(tOffer)>
  [290] jmpifz [317] ............................ if voidp(tOffer) then
  [293] pop 1
  [295] getparam 0 .............................. <me>
  [297] pushcons 21 ............................. <"Unable to find offer of type ">
  [299] getlocal 2 .............................. <tOfferType>
  [301] joinstr ................................. <"Unable to find offer of type " & tOfferType>
  [302] pushcons 22 ............................. <" check page offer configuration.">
  [304] joinstr ................................. <"Unable to find offer of type " & tOfferType & " check page offer configuration.">
  [305] pushsymb 225 ............................ <#handleClick>
  [307] pushsymb 47 ............................. <#major>
  [309] pusharglist 4 ........................... <me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major>
  [311] extcall 46 .............................. <error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)>
  [313] pusharglistnoret 1 ...................... <error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)>
  [315] extcall 37 .............................. return error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)
  [317] pusharglist 0 ........................... <>
  [319] extcall 55 .............................. <VOID>
  [321] setlocal 4 .............................. tExtraProps = VOID
  [323] getparam 2 .............................. <tSprID>
  [325] pushcons 19 ............................. <"ctlg_buy_pixels_credits">
  [327] eq ...................................... <tSprID = "ctlg_buy_pixels_credits">
  [328] getparam 2 .............................. <tSprID>
  [330] pushcons 20 ............................. <"ctlg_buy_pixels">
  [332] eq ...................................... <tSprID = "ctlg_buy_pixels">
  [333] or ...................................... <(tSprID = "ctlg_buy_pixels_credits") or (tSprID = "ctlg_buy_pixels")>
  [334] jmpifz [345] ............................ if (tSprID = "ctlg_buy_pixels_credits") or (tSprID = "ctlg_buy_pixels") then
  [337] pushsymb 602 ............................ <#disableGift>
  [340] pusharglist 1 ........................... <[#disableGift]>
  [342] pushlist ................................ <[#disableGift]>
  [343] setlocal 4 .............................. tExtraProps = [#disableGift]
  [345] pushsymb 559 ............................ <#catalogue>
  [348] pusharglist 1 ........................... <#catalogue>
  [350] extcall 471 ............................. <getThread(#catalogue)>
  [353] pusharglist 1 ........................... <getThread(#catalogue)>
  [355] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [357] getlocal 2 .............................. <tOfferType>
  [359] getparam 0 .............................. <me>
  [361] pushsymb 528 ............................ <#pPageData>
  [364] pushsymb 103 ............................ <#pageid>
  [366] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [368] objcall 123 ............................. <me.pPageData[#pageid]>
  [370] getlocal 3 .............................. <tOffer>
  [372] pushsymb 354 ............................ <#sendPurchaseFromCatalog>
  [375] getlocal 4 .............................. <tExtraProps>
  [377] pusharglistnoret 6 ...................... <getThread(#catalogue).getComponent(), tOfferType, me.pPageData[#pageid], tOffer, #sendPurchaseFromCatalog, tExtraProps>
  [379] objcall 306 ............................. getThread(#catalogue).getComponent().requestPurchase(tOfferType, me.pPageData[#pageid], tOffer, #sendPurchaseFromCatalog, tExtraProps)
  [382] jmp [695]
  [385] peek 0
  [387] pushcons 23 ............................. <"ctlg_buy_andwear">
  [389] eq
  [390] jmpifz [547] ............................ (case) "ctlg_buy_andwear":
  [393] getparam 0 .............................. <me>
  [395] getobjprop 557 .......................... <me.pProductStrip>
  [398] pusharglist 1 ........................... <me.pProductStrip>
  [400] extcall 57 .............................. <objectp(me.pProductStrip)>
  [402] not ..................................... <not objectp(me.pProductStrip)>
  [403] jmpifz [412] ............................ if not objectp(me.pProductStrip) then
  [406] pop 1
  [408] pusharglistnoret 0 ...................... <>
  [410] extcall 37 .............................. return 
  [412] getparam 0 .............................. <me>
  [414] getchainedprop 557 ...................... <me.pProductStrip>
  [417] pusharglist 1 ........................... <me.pProductStrip>
  [419] objcall 14 .............................. <me.pProductStrip.getSelectedItem()>
  [421] setlocal 0 .............................. tSelectedItem = me.pProductStrip.getSelectedItem()
  [423] getlocal 0 .............................. <tSelectedItem>
  [425] pusharglist 1 ........................... <tSelectedItem>
  [427] extcall 78 .............................. <voidp(tSelectedItem)>
  [429] not ..................................... <not voidp(tSelectedItem)>
  [430] jmpifz [544] ............................ if not voidp(tSelectedItem) then
  [433] getparam 0 .............................. <me>
  [435] pushsymb 558 ............................ <#pOfferTypesAvailable>
  [438] getparam 2 .............................. <tSprID>
  [440] pusharglist 3 ........................... <me, #pOfferTypesAvailable, tSprID>
  [442] objcall 566 ............................. <me.pOfferTypesAvailable[tSprID]>
  [445] pushsymb 399 ............................ <#type>
  [448] pusharglist 2 ........................... <me.pOfferTypesAvailable[tSprID], #type>
  [450] objcall 102 ............................. <me.pOfferTypesAvailable[tSprID].getaProp(#type)>
  [452] setlocal 2 .............................. tOfferType = me.pOfferTypesAvailable[tSprID].getaProp(#type)
  [454] getparam 0 .............................. <me>
  [456] getlocal 0 .............................. <tSelectedItem>
  [458] getlocal 2 .............................. <tOfferType>
  [460] pusharglist 3 ........................... <me, tSelectedItem, tOfferType>
  [462] objcall 522 ............................. <me.getOfferByType(tSelectedItem, tOfferType)>
  [465] setlocal 3 .............................. tOffer = me.getOfferByType(tSelectedItem, tOfferType)
  [467] getlocal 3 .............................. <tOffer>
  [469] pusharglist 1 ........................... <tOffer>
  [471] extcall 78 .............................. <voidp(tOffer)>
  [473] jmpifz [500] ............................ if voidp(tOffer) then
  [476] pop 1
  [478] getparam 0 .............................. <me>
  [480] pushcons 21 ............................. <"Unable to find offer of type ">
  [482] getlocal 2 .............................. <tOfferType>
  [484] joinstr ................................. <"Unable to find offer of type " & tOfferType>
  [485] pushcons 22 ............................. <" check page offer configuration.">
  [487] joinstr ................................. <"Unable to find offer of type " & tOfferType & " check page offer configuration.">
  [488] pushsymb 225 ............................ <#handleClick>
  [490] pushsymb 47 ............................. <#major>
  [492] pusharglist 4 ........................... <me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major>
  [494] extcall 46 .............................. <error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)>
  [496] pusharglistnoret 1 ...................... <error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)>
  [498] extcall 37 .............................. return error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)
  [500] pushsymb 559 ............................ <#catalogue>
  [503] pusharglist 1 ........................... <#catalogue>
  [505] extcall 471 ............................. <getThread(#catalogue)>
  [508] pusharglist 1 ........................... <getThread(#catalogue)>
  [510] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [512] getlocal 2 .............................. <tOfferType>
  [514] getparam 0 .............................. <me>
  [516] pushsymb 528 ............................ <#pPageData>
  [519] pushsymb 103 ............................ <#pageid>
  [521] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [523] objcall 123 ............................. <me.pPageData[#pageid]>
  [525] getlocal 3 .............................. <tOffer>
  [527] pushsymb 362 ............................ <#sendPurchaseAndWear>
  [530] pushsymb 602 ............................ <#disableGift>
  [533] pushsymb 603 ............................ <#closeCatalogue>
  [536] pusharglist 2 ........................... <[#disableGift, #closeCatalogue]>
  [538] pushlist ................................ <[#disableGift, #closeCatalogue]>
  [539] pusharglistnoret 6 ...................... <getThread(#catalogue).getComponent(), tOfferType, me.pPageData[#pageid], tOffer, #sendPurchaseAndWear, [#disableGift, #closeCatalogue]>
  [541] objcall 306 ............................. getThread(#catalogue).getComponent().requestPurchase(tOfferType, me.pPageData[#pageid], tOffer, #sendPurchaseAndWear, [#disableGift, #closeCatalogue])
  [544] jmp [695] ............................... (case) otherwise:
  [547] getparam 2 .............................. <tSprID>
  [549] pushcons 24 ............................. <"ctlg_buy_">
  [551] containsstr ............................. <tSprID contains "ctlg_buy_">
  [552] jmpifz [695] ............................ if tSprID contains "ctlg_buy_" then
  [555] getparam 2 .............................. <tSprID>
  [557] pushint8 10 ............................. <10>
  [559] pushint8 10 ............................. <10>
  [561] pusharglist 3 ........................... <tSprID, 10, 10>
  [563] extcall 593 ............................. <chars(tSprID, 10, 10)>
  [566] pusharglist 1 ........................... <chars(tSprID, 10, 10)>
  [568] extcall 266 ............................. <value(chars(tSprID, 10, 10))>
  [571] setlocal 5 .............................. tItemIndex = value(chars(tSprID, 10, 10))
  [573] getlocal 5 .............................. <tItemIndex>
  [575] pusharglist 1 ........................... <tItemIndex>
  [577] extcall 187 ............................. <integerp(tItemIndex)>
  [579] not ..................................... <not integerp(tItemIndex)>
  [580] jmpifz [589] ............................ if not integerp(tItemIndex) then
  [583] pop 1
  [585] pusharglistnoret 0 ...................... <>
  [587] extcall 37 .............................. return 
  [589] getlocal 5 .............................. <tItemIndex>
  [591] getparam 0 .............................. <me>
  [593] pushsymb 528 ............................ <#pPageData>
  [596] pushsymb 336 ............................ <#offers>
  [599] pusharglist 3 ........................... <me, #pPageData, #offers>
  [601] objcall 566 ............................. <me.pPageData[#offers]>
  [604] getobjprop 48 ........................... <me.pPageData[#offers].count>
  [606] gt ...................................... <tItemIndex > me.pPageData[#offers].count>
  [607] jmpifz [629] ............................ if tItemIndex > me.pPageData[#offers].count then
  [610] pop 1
  [612] getparam 0 .............................. <me>
  [614] pushcons 25 ............................. <"No product to purchase at index : ">
  [616] getlocal 5 .............................. <tItemIndex>
  [618] joinstr ................................. <"No product to purchase at index : " & tItemIndex>
  [619] pushsymb 58 ............................. <#minor>
  [621] pusharglist 3 ........................... <me, "No product to purchase at index : " & tItemIndex, #minor>
  [623] extcall 46 .............................. <error(me, "No product to purchase at index : " & tItemIndex, #minor)>
  [625] pusharglistnoret 1 ...................... <error(me, "No product to purchase at index : " & tItemIndex, #minor)>
  [627] extcall 37 .............................. return error(me, "No product to purchase at index : " & tItemIndex, #minor)
  [629] getparam 0 .............................. <me>
  [631] getparam 0 .............................. <me>
  [633] pushsymb 528 ............................ <#pPageData>
  [636] pushsymb 336 ............................ <#offers>
  [639] pusharglist 3 ........................... <me, #pPageData, #offers>
  [641] objcall 566 ............................. <me.pPageData[#offers]>
  [644] getlocal 5 .............................. <tItemIndex>
  [646] pusharglist 2 ........................... <me.pPageData[#offers], tItemIndex>
  [648] objcall 41 .............................. <me.pPageData[#offers][tItemIndex]>
  [650] pushsymb 351 ............................ <#credits>
  [653] pusharglist 3 ........................... <me, me.pPageData[#offers][tItemIndex], #credits>
  [655] objcall 522 ............................. <me.getOfferByType(me.pPageData[#offers][tItemIndex], #credits)>
  [658] setlocal 3 .............................. tOffer = me.getOfferByType(me.pPageData[#offers][tItemIndex], #credits)
  [660] pushsymb 559 ............................ <#catalogue>
  [663] pusharglist 1 ........................... <#catalogue>
  [665] extcall 471 ............................. <getThread(#catalogue)>
  [668] pusharglist 1 ........................... <getThread(#catalogue)>
  [670] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [672] getlocal 2 .............................. <tOfferType>
  [674] getparam 0 .............................. <me>
  [676] pushsymb 528 ............................ <#pPageData>
  [679] pushsymb 103 ............................ <#pageid>
  [681] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [683] objcall 123 ............................. <me.pPageData[#pageid]>
  [685] getlocal 3 .............................. <tOffer>
  [687] pushsymb 354 ............................ <#sendPurchaseFromCatalog>
  [690] pusharglistnoret 5 ...................... <getThread(#catalogue).getComponent(), tOfferType, me.pPageData[#pageid], tOffer, #sendPurchaseFromCatalog>
  [692] objcall 306 ............................. getThread(#catalogue).getComponent().requestPurchase(tOfferType, me.pPageData[#pageid], tOffer, #sendPurchaseFromCatalog)
  [695] pop 1 ................................... end case
  [697] ret
end
