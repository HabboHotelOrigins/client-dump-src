property pPageData, pSmallImg, pSelectedOrderNum, pSelectedColorNum, pSelectedProduct, pLastProductNum, pNumOfColorBoxies

on construct me
  [  0] pushsymb 559 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 471 ............................. <getThread(#catalogue)>
  [  8] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 10] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 14] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 16] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 18] getlocal 0 .............................. <tCataloguePage>
  [ 20] not ..................................... <not tCataloguePage>
  [ 21] jmpifz [ 40] ............................ if not tCataloguePage then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 28] pushsymb 0 .............................. <#construct>
  [ 30] pushsymb 47 ............................. <#major>
  [ 32] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #construct, #major>
  [ 34] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #construct, #major)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #construct, #major)>
  [ 38] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #construct, #major)
  [ 40] pusharglist 0 ........................... <[:]>
  [ 42] pushproplist ............................ <[:]>
  [ 43] setprop 528 ............................. pPageData = [:]
  [ 46] pushint8 32 ............................. <32>
  [ 48] pushint8 32 ............................. <32>
  [ 50] pushint8 32 ............................. <32>
  [ 52] pusharglist 3 ........................... <32, 32, 32>
  [ 54] extcall 17 .............................. <image(32, 32, 32)>
  [ 56] setprop 978 ............................. pSmallImg = image(32, 32, 32)
  [ 59] pushint8 1 .............................. <1>
  [ 61] setprop 979 ............................. pSelectedOrderNum = 1
  [ 64] pushint8 1 .............................. <1>
  [ 66] setprop 980 ............................. pSelectedColorNum = 1
  [ 69] pushzero ................................ <0>
  [ 70] setprop 645 ............................. pLastProductNum = 0
  [ 73] pushzero ................................ <0>
  [ 74] setprop 981 ............................. pNumOfColorBoxies = 0
  [ 77] pushint8 1 .............................. <1>
  [ 79] setlocal 1
  [ 81] getlocal 1
  [ 83] pushint8 50 ............................. <50>
  [ 85] lteq
  [ 86] jmpifz [131] ............................ repeat with f = 1 to 50
  [ 89] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [ 91] getlocal 1 .............................. <f>
  [ 93] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [ 94] setlocal 2 .............................. tID = "ctlg_selectcolor_bg_" & f
  [ 96] getlocal 0 .............................. <tCataloguePage>
  [ 98] getlocal 2 .............................. <tID>
  [100] pusharglist 2 ........................... <tCataloguePage, tID>
  [102] objcall 253 ............................. <tCataloguePage.elementExists(tID)>
  [104] jmpifz [119] ............................ if tCataloguePage.elementExists(tID) then
  [107] getprop 981 ............................. <pNumOfColorBoxies>
  [110] pushint8 1 .............................. <1>
  [112] add ..................................... <pNumOfColorBoxies + 1>
  [113] setprop 981 ............................. pNumOfColorBoxies = pNumOfColorBoxies + 1
  [116] jmp [122] ............................... next repeat
  [119] jmp [131] ............................... exit repeat
  [122] pushint8 1
  [124] getlocal 1
  [126] add
  [127] setlocal 1
  [129] endrepeat [ 81]
  [131] pushint8 1 .............................. <1>
  [133] pusharglistnoret 1 ...................... <1>
  [135] extcall 37 .............................. return 1
  [137] ret
end

on define me, tPageProps
  [  0] getparam 1 .............................. <tPageProps>
  [  2] getobjprop 43 ........................... <tPageProps.ilk>
  [  4] pushsymb 45 ............................. <#propList>
  [  6] nteq .................................... <tPageProps.ilk <> #propList>
  [  7] jmpifz [ 26] ............................ if tPageProps.ilk <> #propList then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 2 .............................. <"Incorrect Catalogue page data">
  [ 14] pushsymb 237 ............................ <#define>
  [ 16] pushsymb 47 ............................. <#major>
  [ 18] pusharglist 4 ........................... <me, "Incorrect Catalogue page data", #define, #major>
  [ 20] extcall 46 .............................. <error(me, "Incorrect Catalogue page data", #define, #major)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Incorrect Catalogue page data", #define, #major)>
  [ 24] extcall 37 .............................. return error(me, "Incorrect Catalogue page data", #define, #major)
  [ 26] pusharglist 0 ........................... <[:]>
  [ 28] pushproplist ............................ <[:]>
  [ 29] setprop 528 ............................. pPageData = [:]
  [ 32] getprop 528 ............................. <pPageData>
  [ 35] pusharglistnoret 1 ...................... <pPageData>
  [ 37] objcall 493 ............................. pPageData.sort()
  [ 40] getparam 1 .............................. <tPageProps>
  [ 42] pushcons 3 .............................. <"productList">
  [ 44] pusharglist 2 ........................... <tPageProps, "productList">
  [ 46] objcall 41 .............................. <tPageProps["productList"]>
  [ 48] pusharglist 1 ........................... <tPageProps["productList"]>
  [ 50] extcall 78 .............................. <voidp(tPageProps["productList"])>
  [ 52] not ..................................... <not voidp(tPageProps["productList"])>
  [ 53] jmpifz [243] ............................ if not voidp(tPageProps["productList"]) then
  [ 56] getparam 1 .............................. <tPageProps>
  [ 58] pushcons 3 .............................. <"productList">
  [ 60] pusharglist 2 ........................... <tPageProps, "productList">
  [ 62] objcall 41 .............................. <tPageProps["productList"]>
  [ 64] setlocal 0 .............................. tProducts = tPageProps["productList"]
  [ 66] getmovieprop 983 ........................ <the milliSeconds>
  [ 69] setlocal 1 .............................. aa = the milliSeconds
  [ 71] pushint8 1 .............................. <1>
  [ 73] setlocal 2
  [ 75] getlocal 2
  [ 77] getlocal 0 .............................. <tProducts>
  [ 79] getobjprop 48 ........................... <tProducts.count>
  [ 81] lteq
  [ 82] jmpifz [243] ............................ repeat with f = 1 to tProducts.count
  [ 85] getlocal 0 .............................. <tProducts>
  [ 87] getlocal 2 .............................. <f>
  [ 89] pusharglist 2 ........................... <tProducts, f>
  [ 91] objcall 41 .............................. <tProducts[f]>
  [ 93] pushcons 4 .............................. <"class">
  [ 95] pusharglist 2 ........................... <tProducts[f], "class">
  [ 97] objcall 41 .............................. <tProducts[f]["class"]>
  [ 99] pusharglist 1 ........................... <tProducts[f]["class"]>
  [101] extcall 78 .............................. <voidp(tProducts[f]["class"])>
  [103] not ..................................... <not voidp(tProducts[f]["class"])>
  [104] jmpifz [234] ............................ if not voidp(tProducts[f]["class"]) then
  [107] getlocal 0 .............................. <tProducts>
  [109] getlocal 2 .............................. <f>
  [111] pusharglist 2 ........................... <tProducts, f>
  [113] objcall 41 .............................. <tProducts[f]>
  [115] pushcons 4 .............................. <"class">
  [117] pusharglist 2 ........................... <tProducts[f], "class">
  [119] objcall 41 .............................. <tProducts[f]["class"]>
  [121] setlocal 3 .............................. tClass = tProducts[f]["class"]
  [123] getlocal 3 .............................. <tClass>
  [125] pushcons 5 .............................. <"*">
  [127] containsstr ............................. <tClass contains "*">
  [128] jmpifz [156] ............................ if tClass contains "*" then
  [131] getlocal 3 .............................. <tClass>
  [133] pushsymb 292 ............................ <#char>
  [136] pushint8 1 .............................. <1>
  [138] pushcons 5 .............................. <"*">
  [140] getlocal 3 .............................. <tClass>
  [142] pusharglist 2 ........................... <"*", tClass>
  [144] extcall 293 ............................. <offset("*", tClass)>
  [147] pushint8 1 .............................. <1>
  [149] sub ..................................... <offset("*", tClass) - 1>
  [150] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [152] objcall 123 ............................. <tClass.char[1..offset("*", tClass) - 1]>
  [154] setlocal 3 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [156] getprop 528 ............................. <pPageData>
  [159] getlocal 3 .............................. <tClass>
  [161] pusharglist 2 ........................... <pPageData, tClass>
  [163] objcall 41 .............................. <pPageData[tClass]>
  [165] pusharglist 1 ........................... <pPageData[tClass]>
  [167] extcall 78 .............................. <voidp(pPageData[tClass])>
  [169] jmpifz [198] ............................ if voidp(pPageData[tClass]) then
  [172] getprop 528 ............................. <pPageData>
  [175] getlocal 3 .............................. <tClass>
  [177] pusharglist 0 ........................... <[:]>
  [179] pushproplist ............................ <[:]>
  [180] pusharglistnoret 3 ...................... <pPageData, tClass, [:]>
  [182] objcall 254 ............................. pPageData[tClass] = [:]
  [184] getprop 528 ............................. <pPageData>
  [187] getlocal 3 .............................. <tClass>
  [189] pusharglist 2 ........................... <pPageData, tClass>
  [191] objcall 41 .............................. <pPageData[tClass]>
  [193] pusharglistnoret 1 ...................... <pPageData[tClass]>
  [195] objcall 493 ............................. pPageData[tClass].sort()
  [198] getprop 528 ............................. <pPageData>
  [201] getlocal 3 .............................. <tClass>
  [203] pusharglist 2 ........................... <pPageData, tClass>
  [205] objcall 41 .............................. <pPageData[tClass]>
  [207] getlocal 0 .............................. <tProducts>
  [209] getlocal 2 .............................. <f>
  [211] pusharglist 2 ........................... <tProducts, f>
  [213] objcall 41 .............................. <tProducts[f]>
  [215] pushcons 4 .............................. <"class">
  [217] pusharglist 2 ........................... <tProducts[f], "class">
  [219] objcall 41 .............................. <tProducts[f]["class"]>
  [221] getlocal 0 .............................. <tProducts>
  [223] getlocal 2 .............................. <f>
  [225] pusharglist 2 ........................... <tProducts, f>
  [227] objcall 41 .............................. <tProducts[f]>
  [229] pusharglistnoret 3 ...................... <pPageData[tClass], tProducts[f]["class"], tProducts[f]>
  [231] objcall 384 ............................. pPageData[tClass].addProp(tProducts[f]["class"], tProducts[f])
  [234] pushint8 1
  [236] getlocal 2
  [238] add
  [239] setlocal 2
  [241] endrepeat [ 75]
  [243] getprop 528 ............................. <pPageData>
  [246] getobjprop 48 ........................... <pPageData.count>
  [248] pushint8 1 .............................. <1>
  [250] gt ...................................... <pPageData.count > 1>
  [251] jmpifz [286] ............................ if pPageData.count > 1 then
  [254] pushint8 1 .............................. <1>
  [256] setprop 979 ............................. pSelectedOrderNum = 1
  [259] pushint8 1 .............................. <1>
  [261] setprop 980 ............................. pSelectedColorNum = 1
  [264] getparam 0 .............................. <me>
  [266] pusharglistnoret 1 ...................... <me>
  [268] localcall 2 ............................. renderSmallIcons(me)
  [270] getparam 0 .............................. <me>
  [272] pushint8 1 .............................. <1>
  [274] pusharglistnoret 2 ...................... <me, 1>
  [276] localcall 4 ............................. selectProduct(me, 1)
  [278] getparam 0 .............................. <me>
  [280] pushint8 1 .............................. <1>
  [282] pusharglistnoret 2 ...................... <me, 1>
  [284] localcall 3 ............................. renderProductColors(me, 1)
  [286] ret
end

on renderSmallIcons me, tstate, tPram
  [  0] pushsymb 559 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 471 ............................. <getThread(#catalogue)>
  [  8] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 10] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 14] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 16] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 18] getlocal 0 .............................. <tCataloguePage>
  [ 20] not ..................................... <not tCataloguePage>
  [ 21] jmpifz [ 41] ............................ if not tCataloguePage then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 28] pushsymb 627 ............................ <#renderSmallIcons>
  [ 31] pushsymb 47 ............................. <#major>
  [ 33] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #renderSmallIcons, #major>
  [ 35] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #renderSmallIcons, #major)>
  [ 37] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #renderSmallIcons, #major)>
  [ 39] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #renderSmallIcons, #major)
  [ 41] getlocal 0 .............................. <tCataloguePage>
  [ 43] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 45] getparam 1 .............................. <tstate>
  [ 47] peek 0 .................................. case tstate of
  [ 49] pusharglist 0 ........................... <>
  [ 51] extcall 55 .............................. <VOID>
  [ 53] eq
  [ 54] jmpifz [142] ............................ (case) VOID:
  [ 57] pushint8 1 .............................. <1>
  [ 59] setlocal 2 .............................. tFirst = 1
  [ 61] getprop 528 ............................. <pPageData>
  [ 64] getobjprop 48 ........................... <pPageData.count>
  [ 66] setlocal 3 .............................. tLast = pPageData.count
  [ 68] pushint8 1 .............................. <1>
  [ 70] setlocal 4
  [ 72] getlocal 4
  [ 74] getprop 528 ............................. <pPageData>
  [ 77] getobjprop 48 ........................... <pPageData.count>
  [ 79] lteq
  [ 80] jmpifz [139] ............................ repeat with f = 1 to pPageData.count
  [ 83] pushcons 6 .............................. <"ctlg_small_img_">
  [ 85] getlocal 4 .............................. <f>
  [ 87] joinstr ................................. <"ctlg_small_img_" & f>
  [ 88] setlocal 5 .............................. tID = "ctlg_small_img_" & f
  [ 90] getlocal 1 .............................. <tWndObj>
  [ 92] getlocal 5 .............................. <tID>
  [ 94] pusharglist 2 ........................... <tWndObj, tID>
  [ 96] objcall 253 ............................. <tWndObj.elementExists(tID)>
  [ 98] jmpifz [130] ............................ if tWndObj.elementExists(tID) then
  [101] getlocal 1 .............................. <tWndObj>
  [103] getlocal 5 .............................. <tID>
  [105] pusharglist 2 ........................... <tWndObj, tID>
  [107] objcall 178 ............................. <tWndObj.getElement(tID)>
  [109] pusharglistnoret 1 ...................... <tWndObj.getElement(tID)>
  [111] objcall 656 ............................. tWndObj.getElement(tID).clearImage()
  [114] getlocal 1 .............................. <tWndObj>
  [116] getlocal 5 .............................. <tID>
  [118] pusharglist 2 ........................... <tWndObj, tID>
  [120] objcall 178 ............................. <tWndObj.getElement(tID)>
  [122] pushsymb 84 ............................. <#ink>
  [124] pushint8 36 ............................. <36>
  [126] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #ink, 36>
  [128] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#ink, 36)
  [130] pushint8 1
  [132] getlocal 4
  [134] add
  [135] setlocal 4
  [137] endrepeat [ 72]
  [139] jmp [297]
  [142] peek 0
  [144] pushsymb 658 ............................ <#hilite>
  [147] nteq
  [148] jmpifz [160] ............................ (case) #hilite, ...
  [151] peek 0
  [153] pushsymb 659 ............................ <#unhilite>
  [156] eq
  [157] jmpifz [171] ............................ (case) ..., #unhilite:
  [160] getparam 2 .............................. <tPram>
  [162] setlocal 2 .............................. tFirst = tPram
  [164] getparam 2 .............................. <tPram>
  [166] setlocal 3 .............................. tLast = tPram
  [168] jmp [297]
  [171] peek 0
  [173] pushsymb 639 ............................ <#furniLoaded>
  [176] eq
  [177] jmpifz [278] ............................ (case) #furniLoaded:
  [180] getprop 528 ............................. <pPageData>
  [183] pusharglist 1 ........................... <pPageData>
  [185] extcall 78 .............................. <voidp(pPageData)>
  [187] jmpifz [196] ............................ if voidp(pPageData) then
  [190] pop 1
  [192] pusharglistnoret 0 ...................... <>
  [194] extcall 37 .............................. return 
  [196] getparam 2 .............................. <tPram>
  [198] setlocal 6 .............................. tFurniName = tPram
  [200] getprop 528 ............................. <pPageData>
  [203] getobjprop 48 ........................... <pPageData.count>
  [205] setlocal 2 .............................. tFirst = pPageData.count
  [207] pushint8 1 .............................. <1>
  [209] setlocal 3 .............................. tLast = 1
  [211] pushint8 1 .............................. <1>
  [213] setlocal 7
  [215] getlocal 7
  [217] getprop 528 ............................. <pPageData>
  [220] getobjprop 48 ........................... <pPageData.count>
  [222] lteq
  [223] jmpifz [275] ............................ repeat with i = 1 to pPageData.count
  [226] getprop 528 ............................. <pPageData>
  [229] getlocal 7 .............................. <i>
  [231] pusharglist 2 ........................... <pPageData, i>
  [233] objcall 343 ............................. <pPageData.getPropAt(i)>
  [236] getlocal 6 .............................. <tFurniName>
  [238] containsstr ............................. <pPageData.getPropAt(i) contains tFurniName>
  [239] jmpifz [266] ............................ if pPageData.getPropAt(i) contains tFurniName then
  [242] getlocal 2 .............................. <tFirst>
  [244] getlocal 7 .............................. <i>
  [246] gt ...................................... <tFirst > i>
  [247] jmpifz [254] ............................ if tFirst > i then
  [250] getlocal 7 .............................. <i>
  [252] setlocal 2 .............................. tFirst = i
  [254] getlocal 3 .............................. <tLast>
  [256] getlocal 7 .............................. <i>
  [258] lt ...................................... <tLast < i>
  [259] jmpifz [266] ............................ if tLast < i then
  [262] getlocal 7 .............................. <i>
  [264] setlocal 3 .............................. tLast = i
  [266] pushint8 1
  [268] getlocal 7
  [270] add
  [271] setlocal 7
  [273] endrepeat [215]
  [275] jmp [297] ............................... (case) otherwise:
  [278] pop 1
  [280] getparam 0 .............................. <me>
  [282] pushcons 7 .............................. <"unsupported mode">
  [284] pushsymb 608 ............................ <#ShowSmallIcons>
  [287] pushsymb 58 ............................. <#minor>
  [289] pusharglist 4 ........................... <me, "unsupported mode", #ShowSmallIcons, #minor>
  [291] extcall 46 .............................. <error(me, "unsupported mode", #ShowSmallIcons, #minor)>
  [293] pusharglistnoret 1 ...................... <error(me, "unsupported mode", #ShowSmallIcons, #minor)>
  [295] extcall 37 .............................. return error(me, "unsupported mode", #ShowSmallIcons, #minor)
  [297] pop 1 ................................... end case
  [299] getlocal 2 .............................. <tFirst>
  [301] pusharglist 1 ........................... <tFirst>
  [303] extcall 78 .............................. <voidp(tFirst)>
  [305] getlocal 3 .............................. <tLast>
  [307] pusharglist 1 ........................... <tLast>
  [309] extcall 78 .............................. <voidp(tLast)>
  [311] or ...................................... <voidp(tFirst) or voidp(tLast)>
  [312] jmpifz [319] ............................ if voidp(tFirst) or voidp(tLast) then
  [315] pusharglistnoret 0 ...................... <>
  [317] extcall 37 .............................. return 
  [319] getlocal 2 .............................. <tFirst>
  [321] pushint8 1 .............................. <1>
  [323] lt ...................................... <tFirst < 1>
  [324] getlocal 3 .............................. <tLast>
  [326] pushint8 1 .............................. <1>
  [328] lt ...................................... <tLast < 1>
  [329] or ...................................... <(tFirst < 1) or (tLast < 1)>
  [330] jmpifz [337] ............................ if (tFirst < 1) or (tLast < 1) then
  [333] pusharglistnoret 0 ...................... <>
  [335] extcall 37 .............................. return 
  [337] pushsymb 559 ............................ <#catalogue>
  [340] pusharglist 1 ........................... <#catalogue>
  [342] extcall 471 ............................. <getThread(#catalogue)>
  [345] pusharglist 1 ........................... <getThread(#catalogue)>
  [347] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [349] pusharglist 1 ........................... <getThread(#catalogue).getComponent()>
  [351] objcall 264 ............................. <getThread(#catalogue).getComponent().getPageItemDownloader()>
  [354] setlocal 8 .............................. tPageItemDownloader = getThread(#catalogue).getComponent().getPageItemDownloader()
  [356] getlocal 2 .............................. <tFirst>
  [358] setlocal 4
  [360] getlocal 4
  [362] getlocal 3 .............................. <tLast>
  [364] lteq
  [365] jmpifz [728] ............................ repeat with f = tFirst to tLast
  [368] getprop 528 ............................. <pPageData>
  [371] getlocal 4 .............................. <f>
  [373] pusharglist 2 ........................... <pPageData, f>
  [375] objcall 41 .............................. <pPageData[f]>
  [377] pushint8 1 .............................. <1>
  [379] pusharglist 2 ........................... <pPageData[f], 1>
  [381] objcall 41 .............................. <pPageData[f][1]>
  [383] pushcons 8 .............................. <"smallPrewImg">
  [385] pusharglist 2 ........................... <pPageData[f][1], "smallPrewImg">
  [387] objcall 41 .............................. <pPageData[f][1]["smallPrewImg"]>
  [389] pusharglist 1 ........................... <pPageData[f][1]["smallPrewImg"]>
  [391] extcall 78 .............................. <voidp(pPageData[f][1]["smallPrewImg"])>
  [393] not ..................................... <not voidp(pPageData[f][1]["smallPrewImg"])>
  [394] jmpifz [718] ............................ if not voidp(pPageData[f][1]["smallPrewImg"]) then
  [397] getprop 528 ............................. <pPageData>
  [400] getlocal 4 .............................. <f>
  [402] pusharglist 2 ........................... <pPageData, f>
  [404] objcall 41 .............................. <pPageData[f]>
  [406] pushint8 1 .............................. <1>
  [408] pusharglist 2 ........................... <pPageData[f], 1>
  [410] objcall 41 .............................. <pPageData[f][1]>
  [412] pushcons 8 .............................. <"smallPrewImg">
  [414] pusharglist 2 ........................... <pPageData[f][1], "smallPrewImg">
  [416] objcall 41 .............................. <pPageData[f][1]["smallPrewImg"]>
  [418] setlocal 9 .............................. tmember = pPageData[f][1]["smallPrewImg"]
  [420] pushcons 6 .............................. <"ctlg_small_img_">
  [422] getlocal 4 .............................. <f>
  [424] joinstr ................................. <"ctlg_small_img_" & f>
  [425] setlocal 5 .............................. tID = "ctlg_small_img_" & f
  [427] getlocal 9 .............................. <tmember>
  [429] pushzero ................................ <0>
  [430] nteq .................................... <tmember <> 0>
  [431] jmpifz [718] ............................ if tmember <> 0 then
  [434] getlocal 1 .............................. <tWndObj>
  [436] getlocal 5 .............................. <tID>
  [438] pusharglist 2 ........................... <tWndObj, tID>
  [440] objcall 253 ............................. <tWndObj.elementExists(tID)>
  [442] jmpifz [718] ............................ if tWndObj.elementExists(tID) then
  [445] getprop 978 ............................. <pSmallImg>
  [448] getprop 978 ............................. <pSmallImg>
  [451] getobjprop 69 ........................... <pSmallImg.rect>
  [453] pushint16 255 ........................... <255>
  [456] pushint16 255 ........................... <255>
  [459] pushint16 255 ........................... <255>
  [462] pusharglist 3 ........................... <255, 255, 255>
  [464] extcall 27 .............................. <rgb(255, 255, 255)>
  [466] pusharglistnoret 3 ...................... <pSmallImg, pSmallImg.rect, rgb(255, 255, 255)>
  [468] objcall 72 .............................. pSmallImg.fill(pSmallImg.rect, rgb(255, 255, 255))
  [470] getparam 1 .............................. <tstate>
  [472] pusharglist 1 ........................... <tstate>
  [474] extcall 78 .............................. <voidp(tstate)>
  [476] not ..................................... <not voidp(tstate)>
  [477] jmpifz [524] ............................ if not voidp(tstate) then
  [480] getparam 1 .............................. <tstate>
  [482] pushsymb 658 ............................ <#hilite>
  [485] eq ...................................... <tstate = #hilite>
  [486] pushcons 9 .............................. <"ctlg_small_active2_bg">
  [488] pusharglist 1 ........................... <"ctlg_small_active2_bg">
  [490] extcall 63 .............................. <memberExists("ctlg_small_active2_bg")>
  [492] and ..................................... <(tstate = #hilite) and memberExists("ctlg_small_active2_bg")>
  [493] jmpifz [524] ............................ if (tstate = #hilite) and memberExists("ctlg_small_active2_bg") then
  [496] pushcons 9 .............................. <"ctlg_small_active2_bg">
  [498] pusharglist 1 ........................... <"ctlg_small_active2_bg">
  [500] extcall 255 ............................. <member("ctlg_small_active2_bg")>
  [502] getobjprop 17 ........................... <member("ctlg_small_active2_bg").image>
  [504] setlocal 10 ............................. tBgImage = member("ctlg_small_active2_bg").image
  [506] getprop 978 ............................. <pSmallImg>
  [509] getlocal 10 ............................. <tBgImage>
  [511] getlocal 10 ............................. <tBgImage>
  [513] getobjprop 69 ........................... <tBgImage.rect>
  [515] getprop 978 ............................. <pSmallImg>
  [518] getobjprop 69 ........................... <pSmallImg.rect>
  [520] pusharglistnoret 4 ...................... <pSmallImg, tBgImage, tBgImage.rect, pSmallImg.rect>
  [522] objcall 77 .............................. pSmallImg.copyPixels(tBgImage, tBgImage.rect, pSmallImg.rect)
  [524] getprop 528 ............................. <pPageData>
  [527] getlocal 4 .............................. <f>
  [529] pusharglist 2 ........................... <pPageData, f>
  [531] objcall 343 ............................. <pPageData.getPropAt(f)>
  [534] setlocal 11 ............................. tClass = pPageData.getPropAt(f)
  [536] getlocal 8 .............................. <tPageItemDownloader>
  [538] getlocal 11 ............................. <tClass>
  [540] pusharglist 2 ........................... <tPageItemDownloader, tClass>
  [542] objcall 265 ............................. <tPageItemDownloader.isAssetDownloading(tClass)>
  [545] not ..................................... <not tPageItemDownloader.isAssetDownloading(tClass)>
  [546] jmpifz [576] ............................ if not tPageItemDownloader.isAssetDownloading(tClass) then / else
  [549] pushcons 10 ............................. <"Preview_renderer">
  [551] pusharglist 1 ........................... <"Preview_renderer">
  [553] extcall 184 ............................. <getObject("Preview_renderer")>
  [555] pusharglist 0 ........................... <>
  [557] extcall 55 .............................. <VOID>
  [559] pusharglist 0 ........................... <>
  [561] extcall 55 .............................. <VOID>
  [563] pushcons 11 ............................. <EMPTY>
  [565] getlocal 11 ............................. <tClass>
  [567] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, VOID, EMPTY, tClass>
  [569] objcall 145 ............................. <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, EMPTY, tClass)>
  [571] setlocal 12 ............................. tTempSmallImg = getObject("Preview_renderer").renderPreviewImage(VOID, VOID, EMPTY, tClass)
  [573] jmp [599]
  [576] getprop 528 ............................. <pPageData>
  [579] getlocal 4 .............................. <f>
  [581] pusharglist 2 ........................... <pPageData, f>
  [583] objcall 41 .............................. <pPageData[f]>
  [585] pushint8 1 .............................. <1>
  [587] pusharglist 2 ........................... <pPageData[f], 1>
  [589] objcall 41 .............................. <pPageData[f][1]>
  [591] pushcons 8 .............................. <"smallPrewImg">
  [593] pusharglist 2 ........................... <pPageData[f][1], "smallPrewImg">
  [595] objcall 41 .............................. <pPageData[f][1]["smallPrewImg"]>
  [597] setlocal 12 ............................. tTempSmallImg = pPageData[f][1]["smallPrewImg"]
  [599] getprop 978 ............................. <pSmallImg>
  [602] getobjprop 69 ........................... <pSmallImg.rect>
  [604] getlocal 12 ............................. <tTempSmallImg>
  [606] getobjprop 69 ........................... <tTempSmallImg.rect>
  [608] sub ..................................... <pSmallImg.rect - tTempSmallImg.rect>
  [609] setlocal 13 ............................. tdestrect = pSmallImg.rect - tTempSmallImg.rect
  [611] pushzero ................................ <0>
  [612] pushzero ................................ <0>
  [613] pushzero ................................ <0>
  [614] pushzero ................................ <0>
  [615] pusharglist 4 ........................... <0, 0, 0, 0>
  [617] extcall 69 .............................. <rect(0, 0, 0, 0)>
  [619] setlocal 14 ............................. tMargins = rect(0, 0, 0, 0)
  [621] getlocal 13 ............................. <tdestrect>
  [623] getobjprop 33 ........................... <tdestrect.width>
  [625] pushint8 2 .............................. <2>
  [627] div ..................................... <tdestrect.width / 2>
  [628] getlocal 13 ............................. <tdestrect>
  [630] getobjprop 34 ........................... <tdestrect.height>
  [632] pushint8 2 .............................. <2>
  [634] div ..................................... <tdestrect.height / 2>
  [635] getlocal 12 ............................. <tTempSmallImg>
  [637] getobjprop 33 ........................... <tTempSmallImg.width>
  [639] getlocal 13 ............................. <tdestrect>
  [641] getobjprop 33 ........................... <tdestrect.width>
  [643] pushint8 2 .............................. <2>
  [645] div ..................................... <tdestrect.width / 2>
  [646] add ..................................... <tTempSmallImg.width + (tdestrect.width / 2)>
  [647] getlocal 13 ............................. <tdestrect>
  [649] getobjprop 34 ........................... <tdestrect.height>
  [651] pushint8 2 .............................. <2>
  [653] div ..................................... <tdestrect.height / 2>
  [654] getlocal 12 ............................. <tTempSmallImg>
  [656] getobjprop 34 ........................... <tTempSmallImg.height>
  [658] add ..................................... <(tdestrect.height / 2) + tTempSmallImg.height>
  [659] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height>
  [661] extcall 69 .............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height)>
  [663] getlocal 14 ............................. <tMargins>
  [665] add ..................................... <rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height) + tMargins>
  [666] setlocal 13 ............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height) + tMargins
  [668] getprop 978 ............................. <pSmallImg>
  [671] getlocal 12 ............................. <tTempSmallImg>
  [673] getlocal 13 ............................. <tdestrect>
  [675] getlocal 12 ............................. <tTempSmallImg>
  [677] getobjprop 69 ........................... <tTempSmallImg.rect>
  [679] pushsymb 84 ............................. <#ink>
  [681] pushint8 36 ............................. <36>
  [683] pusharglist 2 ........................... <[#ink: 36]>
  [685] pushproplist ............................ <[#ink: 36]>
  [686] pusharglistnoret 5 ...................... <pSmallImg, tTempSmallImg, tdestrect, tTempSmallImg.rect, [#ink: 36]>
  [688] objcall 77 .............................. pSmallImg.copyPixels(tTempSmallImg, tdestrect, tTempSmallImg.rect, [#ink: 36])
  [690] getlocal 1 .............................. <tWndObj>
  [692] getlocal 5 .............................. <tID>
  [694] pusharglist 2 ........................... <tWndObj, tID>
  [696] objcall 178 ............................. <tWndObj.getElement(tID)>
  [698] pusharglistnoret 1 ...................... <tWndObj.getElement(tID)>
  [700] objcall 656 ............................. tWndObj.getElement(tID).clearImage()
  [703] getlocal 1 .............................. <tWndObj>
  [705] getlocal 5 .............................. <tID>
  [707] pusharglist 2 ........................... <tWndObj, tID>
  [709] objcall 178 ............................. <tWndObj.getElement(tID)>
  [711] getprop 978 ............................. <pSmallImg>
  [714] pusharglistnoret 2 ...................... <tWndObj.getElement(tID), pSmallImg>
  [716] objcall 118 ............................. tWndObj.getElement(tID).feedImage(pSmallImg)
  [718] pushint8 1
  [720] getlocal 4
  [722] add
  [723] setlocal 4
  [725] endrepeat [360]
  [728] ret
end

on renderProductColors me, tOrderNum
  [  0] getparam 1 .............................. <tOrderNum>
  [  2] pusharglist 1 ........................... <tOrderNum>
  [  4] extcall 187 ............................. <integerp(tOrderNum)>
  [  6] not ..................................... <not integerp(tOrderNum)>
  [  7] jmpifz [ 27] ............................ if not integerp(tOrderNum) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 12 ............................. <"Incorrect value">
  [ 14] pushsymb 976 ............................ <#renderProductColors>
  [ 17] pushsymb 47 ............................. <#major>
  [ 19] pusharglist 4 ........................... <me, "Incorrect value", #renderProductColors, #major>
  [ 21] extcall 46 .............................. <error(me, "Incorrect value", #renderProductColors, #major)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #renderProductColors, #major)>
  [ 25] extcall 37 .............................. return error(me, "Incorrect value", #renderProductColors, #major)
  [ 27] getprop 528 ............................. <pPageData>
  [ 30] getobjprop 43 ........................... <pPageData.ilk>
  [ 32] pushsymb 45 ............................. <#propList>
  [ 34] nteq .................................... <pPageData.ilk <> #propList>
  [ 35] jmpifz [ 55] ............................ if pPageData.ilk <> #propList then
  [ 38] getparam 0 .............................. <me>
  [ 40] pushcons 13 ............................. <"page data not found">
  [ 42] pushsymb 976 ............................ <#renderProductColors>
  [ 45] pushsymb 47 ............................. <#major>
  [ 47] pusharglist 4 ........................... <me, "page data not found", #renderProductColors, #major>
  [ 49] extcall 46 .............................. <error(me, "page data not found", #renderProductColors, #major)>
  [ 51] pusharglistnoret 1 ...................... <error(me, "page data not found", #renderProductColors, #major)>
  [ 53] extcall 37 .............................. return error(me, "page data not found", #renderProductColors, #major)
  [ 55] pushsymb 559 ............................ <#catalogue>
  [ 58] pusharglist 1 ........................... <#catalogue>
  [ 60] extcall 471 ............................. <getThread(#catalogue)>
  [ 63] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 65] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 67] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 69] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 71] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 73] getlocal 0 .............................. <tCataloguePage>
  [ 75] not ..................................... <not tCataloguePage>
  [ 76] jmpifz [ 96] ............................ if not tCataloguePage then
  [ 79] getparam 0 .............................. <me>
  [ 81] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 83] pushsymb 976 ............................ <#renderProductColors>
  [ 86] pushsymb 47 ............................. <#major>
  [ 88] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #renderProductColors, #major>
  [ 90] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #renderProductColors, #major)>
  [ 92] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #renderProductColors, #major)>
  [ 94] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #renderProductColors, #major)
  [ 96] getlocal 0 .............................. <tCataloguePage>
  [ 98] setlocal 1 .............................. tWndObj = tCataloguePage
  [100] pushint8 1 .............................. <1>
  [102] setlocal 2
  [104] getlocal 2
  [106] getprop 981 ............................. <pNumOfColorBoxies>
  [109] lteq
  [110] jmpifz [217] ............................ repeat with f = 1 to pNumOfColorBoxies
  [113] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [115] getlocal 2 .............................. <f>
  [117] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [118] setlocal 3 .............................. tID = "ctlg_selectcolor_bg_" & f
  [120] getlocal 0 .............................. <tCataloguePage>
  [122] getlocal 3 .............................. <tID>
  [124] pusharglist 2 ........................... <tCataloguePage, tID>
  [126] objcall 253 ............................. <tCataloguePage.elementExists(tID)>
  [128] jmpifz [173] ............................ if tCataloguePage.elementExists(tID) then
  [131] pushzero ................................ <0>
  [132] pusharglist 1 ........................... <0>
  [134] extcall 874 ............................. <paletteIndex(0)>
  [137] setlocal 4 .............................. tColor = paletteIndex(0)
  [139] getlocal 1 .............................. <tWndObj>
  [141] getlocal 3 .............................. <tID>
  [143] pusharglist 2 ........................... <tWndObj, tID>
  [145] objcall 178 ............................. <tWndObj.getElement(tID)>
  [147] pushsymb 851 ............................ <#bgColor>
  [150] getlocal 4 .............................. <tColor>
  [152] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #bgColor, tColor>
  [154] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#bgColor, tColor)
  [156] getlocal 1 .............................. <tWndObj>
  [158] getlocal 3 .............................. <tID>
  [160] pusharglist 2 ........................... <tWndObj, tID>
  [162] objcall 178 ............................. <tWndObj.getElement(tID)>
  [164] pushsymb 850 ............................ <#blend>
  [167] pushint8 30 ............................. <30>
  [169] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #blend, 30>
  [171] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#blend, 30)
  [173] pushcons 14 ............................. <"ctlg_selectcolor_">
  [175] getlocal 2 .............................. <f>
  [177] joinstr ................................. <"ctlg_selectcolor_" & f>
  [178] setlocal 3 .............................. tID = "ctlg_selectcolor_" & f
  [180] getlocal 0 .............................. <tCataloguePage>
  [182] getlocal 3 .............................. <tID>
  [184] pusharglist 2 ........................... <tCataloguePage, tID>
  [186] objcall 253 ............................. <tCataloguePage.elementExists(tID)>
  [188] jmpifz [208] ............................ if tCataloguePage.elementExists(tID) then
  [191] getlocal 1 .............................. <tWndObj>
  [193] getlocal 3 .............................. <tID>
  [195] pusharglist 2 ........................... <tWndObj, tID>
  [197] objcall 178 ............................. <tWndObj.getElement(tID)>
  [199] pushsymb 850 ............................ <#blend>
  [202] pushint8 30 ............................. <30>
  [204] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #blend, 30>
  [206] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#blend, 30)
  [208] pushint8 1
  [210] getlocal 2
  [212] add
  [213] setlocal 2
  [215] endrepeat [104]
  [217] getparam 1 .............................. <tOrderNum>
  [219] getprop 528 ............................. <pPageData>
  [222] getobjprop 48 ........................... <pPageData.count>
  [224] lteq .................................... <tOrderNum <= pPageData.count>
  [225] jmpifz [472] ............................ if tOrderNum <= pPageData.count then
  [228] getprop 528 ............................. <pPageData>
  [231] getparam 1 .............................. <tOrderNum>
  [233] pusharglist 2 ........................... <pPageData, tOrderNum>
  [235] objcall 41 .............................. <pPageData[tOrderNum]>
  [237] setlocal 5 .............................. tProducts = pPageData[tOrderNum]
  [239] pushint8 1 .............................. <1>
  [241] setlocal 2
  [243] getlocal 2
  [245] getlocal 5 .............................. <tProducts>
  [247] getobjprop 48 ........................... <tProducts.count>
  [249] lteq
  [250] jmpifz [472] ............................ repeat with f = 1 to tProducts.count
  [253] getlocal 5 .............................. <tProducts>
  [255] getlocal 2 .............................. <f>
  [257] pusharglist 2 ........................... <tProducts, f>
  [259] objcall 41 .............................. <tProducts[f]>
  [261] pushcons 15 ............................. <"partColors">
  [263] pusharglist 2 ........................... <tProducts[f], "partColors">
  [265] objcall 41 .............................. <tProducts[f]["partColors"]>
  [267] pusharglist 1 ........................... <tProducts[f]["partColors"]>
  [269] extcall 78 .............................. <voidp(tProducts[f]["partColors"])>
  [271] not ..................................... <not voidp(tProducts[f]["partColors"])>
  [272] jmpifz [463] ............................ if not voidp(tProducts[f]["partColors"]) then
  [275] getmovieprop 641 ........................ <the itemDelimiter>
  [278] setlocal 6 .............................. tItemDeLimiter = the itemDelimiter
  [280] pushcons 16 ............................. <",">
  [282] setmovieprop 641 ........................ the itemDelimiter = ","
  [285] getlocal 5 .............................. <tProducts>
  [287] getlocal 2 .............................. <f>
  [289] pusharglist 2 ........................... <tProducts, f>
  [291] objcall 41 .............................. <tProducts[f]>
  [293] pushcons 15 ............................. <"partColors">
  [295] pusharglist 2 ........................... <tProducts[f], "partColors">
  [297] objcall 41 .............................. <tProducts[f]["partColors"]>
  [299] pushsymb 352 ............................ <#item>
  [302] getlocal 5 .............................. <tProducts>
  [304] getlocal 2 .............................. <f>
  [306] pusharglist 2 ........................... <tProducts, f>
  [308] objcall 41 .............................. <tProducts[f]>
  [310] pushcons 15 ............................. <"partColors">
  [312] pusharglist 2 ........................... <tProducts[f], "partColors">
  [314] objcall 41 .............................. <tProducts[f]["partColors"]>
  [316] pushsymb 352 ............................ <#item>
  [319] pusharglist 2 ........................... <tProducts[f]["partColors"], #item>
  [321] objcall 48 .............................. <tProducts[f]["partColors"].item.count>
  [323] pusharglist 3 ........................... <tProducts[f]["partColors"], #item, tProducts[f]["partColors"].item.count>
  [325] objcall 123 ............................. <tProducts[f]["partColors"].item[tProducts[f]["partColors"].item.count]>
  [327] setlocal 4 .............................. tColor = tProducts[f]["partColors"].item[tProducts[f]["partColors"].item.count]
  [329] getlocal 6 .............................. <tItemDeLimiter>
  [331] setmovieprop 641 ........................ the itemDelimiter = tItemDeLimiter
  [334] getlocal 4 .............................. <tColor>
  [336] pushsymb 292 ............................ <#char>
  [339] pushint8 1 .............................. <1>
  [341] pusharglist 3 ........................... <tColor, #char, 1>
  [343] objcall 123 ............................. <tColor.char[1]>
  [345] pushcons 17 ............................. <"#">
  [347] eq ...................................... <tColor.char[1] = "#">
  [348] jmpifz [362] ............................ if tColor.char[1] = "#" then / else
  [351] getlocal 4 .............................. <tColor>
  [353] pusharglist 1 ........................... <tColor>
  [355] extcall 27 .............................. <rgb(tColor)>
  [357] setlocal 4 .............................. tColor = rgb(tColor)
  [359] jmp [376]
  [362] getlocal 4 .............................. <tColor>
  [364] pusharglist 1 ........................... <tColor>
  [366] extcall 382 ............................. <integer(tColor)>
  [369] pusharglist 1 ........................... <integer(tColor)>
  [371] extcall 874 ............................. <paletteIndex(integer(tColor))>
  [374] setlocal 4 .............................. tColor = paletteIndex(integer(tColor))
  [376] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [378] getlocal 2 .............................. <f>
  [380] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [381] setlocal 3 .............................. tID = "ctlg_selectcolor_bg_" & f
  [383] getlocal 1 .............................. <tWndObj>
  [385] getlocal 3 .............................. <tID>
  [387] pusharglist 2 ........................... <tWndObj, tID>
  [389] objcall 253 ............................. <tWndObj.elementExists(tID)>
  [391] jmpifz [428] ............................ if tWndObj.elementExists(tID) then
  [394] getlocal 1 .............................. <tWndObj>
  [396] getlocal 3 .............................. <tID>
  [398] pusharglist 2 ........................... <tWndObj, tID>
  [400] objcall 178 ............................. <tWndObj.getElement(tID)>
  [402] pushsymb 851 ............................ <#bgColor>
  [405] getlocal 4 .............................. <tColor>
  [407] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #bgColor, tColor>
  [409] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#bgColor, tColor)
  [411] getlocal 1 .............................. <tWndObj>
  [413] getlocal 3 .............................. <tID>
  [415] pusharglist 2 ........................... <tWndObj, tID>
  [417] objcall 178 ............................. <tWndObj.getElement(tID)>
  [419] pushsymb 850 ............................ <#blend>
  [422] pushint8 100 ............................ <100>
  [424] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #blend, 100>
  [426] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#blend, 100)
  [428] pushcons 14 ............................. <"ctlg_selectcolor_">
  [430] getlocal 2 .............................. <f>
  [432] joinstr ................................. <"ctlg_selectcolor_" & f>
  [433] setlocal 3 .............................. tID = "ctlg_selectcolor_" & f
  [435] getlocal 0 .............................. <tCataloguePage>
  [437] getlocal 3 .............................. <tID>
  [439] pusharglist 2 ........................... <tCataloguePage, tID>
  [441] objcall 253 ............................. <tCataloguePage.elementExists(tID)>
  [443] jmpifz [463] ............................ if tCataloguePage.elementExists(tID) then
  [446] getlocal 1 .............................. <tWndObj>
  [448] getlocal 3 .............................. <tID>
  [450] pusharglist 2 ........................... <tWndObj, tID>
  [452] objcall 178 ............................. <tWndObj.getElement(tID)>
  [454] pushsymb 850 ............................ <#blend>
  [457] pushint8 100 ............................ <100>
  [459] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #blend, 100>
  [461] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#blend, 100)
  [463] pushint8 1
  [465] getlocal 2
  [467] add
  [468] setlocal 2
  [470] endrepeat [243]
  [472] ret
end

on selectProduct me, tOrderNum
  [  0] pushsymb 559 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 471 ............................. <getThread(#catalogue)>
  [  8] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 10] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 14] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 16] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 18] getlocal 0 .............................. <tCataloguePage>
  [ 20] not ..................................... <not tCataloguePage>
  [ 21] jmpifz [ 41] ............................ if not tCataloguePage then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 28] pushsymb 610 ............................ <#selectProduct>
  [ 31] pushsymb 47 ............................. <#major>
  [ 33] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #selectProduct, #major>
  [ 35] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #selectProduct, #major)>
  [ 37] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #selectProduct, #major)>
  [ 39] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #selectProduct, #major)
  [ 41] getlocal 0 .............................. <tCataloguePage>
  [ 43] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 45] getparam 1 .............................. <tOrderNum>
  [ 47] pusharglist 1 ........................... <tOrderNum>
  [ 49] extcall 187 ............................. <integerp(tOrderNum)>
  [ 51] not ..................................... <not integerp(tOrderNum)>
  [ 52] jmpifz [ 72] ............................ if not integerp(tOrderNum) then
  [ 55] getparam 0 .............................. <me>
  [ 57] pushcons 12 ............................. <"Incorrect value">
  [ 59] pushsymb 610 ............................ <#selectProduct>
  [ 62] pushsymb 47 ............................. <#major>
  [ 64] pusharglist 4 ........................... <me, "Incorrect value", #selectProduct, #major>
  [ 66] extcall 46 .............................. <error(me, "Incorrect value", #selectProduct, #major)>
  [ 68] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #selectProduct, #major)>
  [ 70] extcall 37 .............................. return error(me, "Incorrect value", #selectProduct, #major)
  [ 72] getprop 528 ............................. <pPageData>
  [ 75] pusharglist 1 ........................... <pPageData>
  [ 77] extcall 78 .............................. <voidp(pPageData)>
  [ 79] jmpifz [ 99] ............................ if voidp(pPageData) then
  [ 82] getparam 0 .............................. <me>
  [ 84] pushcons 18 ............................. <"product not found">
  [ 86] pushsymb 610 ............................ <#selectProduct>
  [ 89] pushsymb 47 ............................. <#major>
  [ 91] pusharglist 4 ........................... <me, "product not found", #selectProduct, #major>
  [ 93] extcall 46 .............................. <error(me, "product not found", #selectProduct, #major)>
  [ 95] pusharglistnoret 1 ...................... <error(me, "product not found", #selectProduct, #major)>
  [ 97] extcall 37 .............................. return error(me, "product not found", #selectProduct, #major)
  [ 99] getparam 1 .............................. <tOrderNum>
  [101] getprop 528 ............................. <pPageData>
  [104] getobjprop 48 ........................... <pPageData.count>
  [106] gt ...................................... <tOrderNum > pPageData.count>
  [107] jmpifz [114] ............................ if tOrderNum > pPageData.count then
  [110] pusharglistnoret 0 ...................... <>
  [112] extcall 37 .............................. return 
  [114] getprop 528 ............................. <pPageData>
  [117] getparam 1 .............................. <tOrderNum>
  [119] pusharglist 2 ........................... <pPageData, tOrderNum>
  [121] objcall 41 .............................. <pPageData[tOrderNum]>
  [123] pushint8 1 .............................. <1>
  [125] pusharglist 2 ........................... <pPageData[tOrderNum], 1>
  [127] objcall 41 .............................. <pPageData[tOrderNum][1]>
  [129] pusharglist 1 ........................... <pPageData[tOrderNum][1]>
  [131] extcall 78 .............................. <voidp(pPageData[tOrderNum][1])>
  [133] jmpifz [140] ............................ if voidp(pPageData[tOrderNum][1]) then
  [136] pusharglistnoret 0 ...................... <>
  [138] extcall 37 .............................. return 
  [140] getprop 528 ............................. <pPageData>
  [143] getparam 1 .............................. <tOrderNum>
  [145] pusharglist 2 ........................... <pPageData, tOrderNum>
  [147] objcall 41 .............................. <pPageData[tOrderNum]>
  [149] pushint8 1 .............................. <1>
  [151] pusharglist 2 ........................... <pPageData[tOrderNum], 1>
  [153] objcall 41 .............................. <pPageData[tOrderNum][1]>
  [155] setprop 252 ............................. pSelectedProduct = pPageData[tOrderNum][1]
  [157] pushint8 1 .............................. <1>
  [159] setprop 980 ............................. pSelectedColorNum = 1
  [162] getparam 1 .............................. <tOrderNum>
  [164] setprop 979 ............................. pSelectedOrderNum = tOrderNum
  [167] getparam 0 .............................. <me>
  [169] getparam 1 .............................. <tOrderNum>
  [171] pusharglistnoret 2 ...................... <me, tOrderNum>
  [173] localcall 3 ............................. renderProductColors(me, tOrderNum)
  [175] pushsymb 559 ............................ <#catalogue>
  [178] pusharglist 1 ........................... <#catalogue>
  [180] extcall 471 ............................. <getThread(#catalogue)>
  [183] pusharglist 1 ........................... <getThread(#catalogue)>
  [185] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [187] getprop 252 ............................. <pSelectedProduct>
  [189] pusharglistnoret 2 ...................... <getThread(#catalogue).getInterface(), pSelectedProduct>
  [191] objcall 144 ............................. getThread(#catalogue).getInterface().showPreviewImage(pSelectedProduct)
  [193] getprop 252 ............................. <pSelectedProduct>
  [195] pushcons 19 ............................. <"name">
  [197] pusharglist 2 ........................... <pSelectedProduct, "name">
  [199] objcall 41 .............................. <pSelectedProduct["name"]>
  [201] pusharglist 1 ........................... <pSelectedProduct["name"]>
  [203] extcall 78 .............................. <voidp(pSelectedProduct["name"])>
  [205] not ..................................... <not voidp(pSelectedProduct["name"])>
  [206] jmpifz [240] ............................ if not voidp(pSelectedProduct["name"]) then
  [209] getlocal 1 .............................. <tWndObj>
  [211] pushcons 20 ............................. <"ctlg_product_name">
  [213] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [215] objcall 253 ............................. <tWndObj.elementExists("ctlg_product_name")>
  [217] jmpifz [240] ............................ if tWndObj.elementExists("ctlg_product_name") then
  [220] getlocal 1 .............................. <tWndObj>
  [222] pushcons 20 ............................. <"ctlg_product_name">
  [224] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [226] objcall 178 ............................. <tWndObj.getElement("ctlg_product_name")>
  [228] getprop 252 ............................. <pSelectedProduct>
  [230] pushcons 19 ............................. <"name">
  [232] pusharglist 2 ........................... <pSelectedProduct, "name">
  [234] objcall 41 .............................. <pSelectedProduct["name"]>
  [236] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_product_name"), pSelectedProduct["name"]>
  [238] objcall 188 ............................. tWndObj.getElement("ctlg_product_name").setText(pSelectedProduct["name"])
  [240] getprop 252 ............................. <pSelectedProduct>
  [242] pushcons 21 ............................. <"description">
  [244] pusharglist 2 ........................... <pSelectedProduct, "description">
  [246] objcall 41 .............................. <pSelectedProduct["description"]>
  [248] pusharglist 1 ........................... <pSelectedProduct["description"]>
  [250] extcall 78 .............................. <voidp(pSelectedProduct["description"])>
  [252] not ..................................... <not voidp(pSelectedProduct["description"])>
  [253] jmpifz [287] ............................ if not voidp(pSelectedProduct["description"]) then
  [256] getlocal 1 .............................. <tWndObj>
  [258] pushcons 22 ............................. <"ctlg_description">
  [260] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [262] objcall 253 ............................. <tWndObj.elementExists("ctlg_description")>
  [264] jmpifz [287] ............................ if tWndObj.elementExists("ctlg_description") then
  [267] getlocal 1 .............................. <tWndObj>
  [269] pushcons 22 ............................. <"ctlg_description">
  [271] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [273] objcall 178 ............................. <tWndObj.getElement("ctlg_description")>
  [275] getprop 252 ............................. <pSelectedProduct>
  [277] pushcons 21 ............................. <"description">
  [279] pusharglist 2 ........................... <pSelectedProduct, "description">
  [281] objcall 41 .............................. <pSelectedProduct["description"]>
  [283] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_description"), pSelectedProduct["description"]>
  [285] objcall 188 ............................. tWndObj.getElement("ctlg_description").setText(pSelectedProduct["description"])
  [287] getprop 252 ............................. <pSelectedProduct>
  [289] pushcons 23 ............................. <"price">
  [291] pusharglist 2 ........................... <pSelectedProduct, "price">
  [293] objcall 41 .............................. <pSelectedProduct["price"]>
  [295] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [297] extcall 78 .............................. <voidp(pSelectedProduct["price"])>
  [299] not ..................................... <not voidp(pSelectedProduct["price"])>
  [300] jmpifz [388] ............................ if not voidp(pSelectedProduct["price"]) then
  [303] getlocal 1 .............................. <tWndObj>
  [305] pushcons 24 ............................. <"ctlg_price_1">
  [307] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [309] objcall 253 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [311] jmpifz [388] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [314] getprop 252 ............................. <pSelectedProduct>
  [316] pushcons 23 ............................. <"price">
  [318] pusharglist 2 ........................... <pSelectedProduct, "price">
  [320] objcall 41 .............................. <pSelectedProduct["price"]>
  [322] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [324] extcall 266 ............................. <value(pSelectedProduct["price"])>
  [327] pushint8 1 .............................. <1>
  [329] gt ...................................... <value(pSelectedProduct["price"]) > 1>
  [330] jmpifz [355] ............................ if value(pSelectedProduct["price"]) > 1 then / else
  [333] getprop 252 ............................. <pSelectedProduct>
  [335] pushcons 23 ............................. <"price">
  [337] pusharglist 2 ........................... <pSelectedProduct, "price">
  [339] objcall 41 .............................. <pSelectedProduct["price"]>
  [341] pushcons 25 ............................. <"credits">
  [343] pushcons 25 ............................. <"credits">
  [345] pusharglist 2 ........................... <"credits", "credits">
  [347] extcall 158 ............................. <getText("credits", "credits")>
  [349] joinpadstr .............................. <pSelectedProduct["price"] && getText("credits", "credits")>
  [350] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credits", "credits")
  [352] jmp [374]
  [355] getprop 252 ............................. <pSelectedProduct>
  [357] pushcons 23 ............................. <"price">
  [359] pusharglist 2 ........................... <pSelectedProduct, "price">
  [361] objcall 41 .............................. <pSelectedProduct["price"]>
  [363] pushcons 26 ............................. <"credit">
  [365] pushcons 26 ............................. <"credit">
  [367] pusharglist 2 ........................... <"credit", "credit">
  [369] extcall 158 ............................. <getText("credit", "credit")>
  [371] joinpadstr .............................. <pSelectedProduct["price"] && getText("credit", "credit")>
  [372] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credit", "credit")
  [374] getlocal 1 .............................. <tWndObj>
  [376] pushcons 24 ............................. <"ctlg_price_1">
  [378] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [380] objcall 178 ............................. <tWndObj.getElement("ctlg_price_1")>
  [382] getlocal 2 .............................. <tText>
  [384] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [386] objcall 188 ............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [388] getlocal 1 .............................. <tWndObj>
  [390] pushcons 27 ............................. <"ctlg_buy_button">
  [392] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [394] objcall 253 ............................. <tWndObj.elementExists("ctlg_buy_button")>
  [396] jmpifz [416] ............................ if tWndObj.elementExists("ctlg_buy_button") then
  [399] getlocal 1 .............................. <tWndObj>
  [401] pushcons 27 ............................. <"ctlg_buy_button">
  [403] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [405] objcall 178 ............................. <tWndObj.getElement("ctlg_buy_button")>
  [407] pushsymb 624 ............................ <#visible>
  [410] pushint8 1 .............................. <1>
  [412] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_button"), #visible, 1>
  [414] objcall 201 ............................. tWndObj.getElement("ctlg_buy_button").setProperty(#visible, 1)
  [416] getparam 0 .............................. <me>
  [418] pushsymb 658 ............................ <#hilite>
  [421] getparam 1 .............................. <tOrderNum>
  [423] pusharglistnoret 3 ...................... <me, #hilite, tOrderNum>
  [425] localcall 2 ............................. renderSmallIcons(me, #hilite, tOrderNum)
  [427] getparam 0 .............................. <me>
  [429] pushsymb 659 ............................ <#unhilite>
  [432] getprop 645 ............................. <pLastProductNum>
  [435] pusharglistnoret 3 ...................... <me, #unhilite, pLastProductNum>
  [437] localcall 2 ............................. renderSmallIcons(me, #unhilite, pLastProductNum)
  [439] getprop 979 ............................. <pSelectedOrderNum>
  [442] setprop 645 ............................. pLastProductNum = pSelectedOrderNum
  [445] ret
end

on selectColor me, tOrderNum
  [  0] getprop 979 ............................. <pSelectedOrderNum>
  [  3] pusharglist 1 ........................... <pSelectedOrderNum>
  [  5] extcall 78 .............................. <voidp(pSelectedOrderNum)>
  [  7] jmpifz [ 14] ............................ if voidp(pSelectedOrderNum) then
  [ 10] pusharglistnoret 0 ...................... <>
  [ 12] extcall 37 .............................. return 
  [ 14] pushsymb 559 ............................ <#catalogue>
  [ 17] pusharglist 1 ........................... <#catalogue>
  [ 19] extcall 471 ............................. <getThread(#catalogue)>
  [ 22] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 24] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 26] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 28] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 30] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 32] getlocal 0 .............................. <tCataloguePage>
  [ 34] not ..................................... <not tCataloguePage>
  [ 35] jmpifz [ 55] ............................ if not tCataloguePage then
  [ 38] getparam 0 .............................. <me>
  [ 40] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 42] pushsymb 977 ............................ <#selectColor>
  [ 45] pushsymb 47 ............................. <#major>
  [ 47] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #selectColor, #major>
  [ 49] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #selectColor, #major)>
  [ 51] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #selectColor, #major)>
  [ 53] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #selectColor, #major)
  [ 55] getlocal 0 .............................. <tCataloguePage>
  [ 57] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 59] getprop 979 ............................. <pSelectedOrderNum>
  [ 62] pusharglist 1 ........................... <pSelectedOrderNum>
  [ 64] extcall 187 ............................. <integerp(pSelectedOrderNum)>
  [ 66] not ..................................... <not integerp(pSelectedOrderNum)>
  [ 67] jmpifz [ 87] ............................ if not integerp(pSelectedOrderNum) then
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 28 ............................. <"Incorrect SelectedOrderNum">
  [ 74] pushsymb 977 ............................ <#selectColor>
  [ 77] pushsymb 47 ............................. <#major>
  [ 79] pusharglist 4 ........................... <me, "Incorrect SelectedOrderNum", #selectColor, #major>
  [ 81] extcall 46 .............................. <error(me, "Incorrect SelectedOrderNum", #selectColor, #major)>
  [ 83] pusharglistnoret 1 ...................... <error(me, "Incorrect SelectedOrderNum", #selectColor, #major)>
  [ 85] extcall 37 .............................. return error(me, "Incorrect SelectedOrderNum", #selectColor, #major)
  [ 87] getparam 1 .............................. <tOrderNum>
  [ 89] pusharglist 1 ........................... <tOrderNum>
  [ 91] extcall 187 ............................. <integerp(tOrderNum)>
  [ 93] not ..................................... <not integerp(tOrderNum)>
  [ 94] jmpifz [114] ............................ if not integerp(tOrderNum) then
  [ 97] getparam 0 .............................. <me>
  [ 99] pushcons 12 ............................. <"Incorrect value">
  [101] pushsymb 977 ............................ <#selectColor>
  [104] pushsymb 47 ............................. <#major>
  [106] pusharglist 4 ........................... <me, "Incorrect value", #selectColor, #major>
  [108] extcall 46 .............................. <error(me, "Incorrect value", #selectColor, #major)>
  [110] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #selectColor, #major)>
  [112] extcall 37 .............................. return error(me, "Incorrect value", #selectColor, #major)
  [114] getprop 528 ............................. <pPageData>
  [117] pusharglist 1 ........................... <pPageData>
  [119] extcall 78 .............................. <voidp(pPageData)>
  [121] jmpifz [141] ............................ if voidp(pPageData) then
  [124] getparam 0 .............................. <me>
  [126] pushcons 18 ............................. <"product not found">
  [128] pushsymb 977 ............................ <#selectColor>
  [131] pushsymb 47 ............................. <#major>
  [133] pusharglist 4 ........................... <me, "product not found", #selectColor, #major>
  [135] extcall 46 .............................. <error(me, "product not found", #selectColor, #major)>
  [137] pusharglistnoret 1 ...................... <error(me, "product not found", #selectColor, #major)>
  [139] extcall 37 .............................. return error(me, "product not found", #selectColor, #major)
  [141] getprop 528 ............................. <pPageData>
  [144] getprop 979 ............................. <pSelectedOrderNum>
  [147] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [149] objcall 41 .............................. <pPageData[pSelectedOrderNum]>
  [151] pusharglist 1 ........................... <pPageData[pSelectedOrderNum]>
  [153] extcall 78 .............................. <voidp(pPageData[pSelectedOrderNum])>
  [155] jmpifz [162] ............................ if voidp(pPageData[pSelectedOrderNum]) then
  [158] pusharglistnoret 0 ...................... <>
  [160] extcall 37 .............................. return 
  [162] getparam 1 .............................. <tOrderNum>
  [164] getprop 528 ............................. <pPageData>
  [167] getprop 979 ............................. <pSelectedOrderNum>
  [170] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [172] objcall 41 .............................. <pPageData[pSelectedOrderNum]>
  [174] getobjprop 48 ........................... <pPageData[pSelectedOrderNum].count>
  [176] gt ...................................... <tOrderNum > pPageData[pSelectedOrderNum].count>
  [177] jmpifz [184] ............................ if tOrderNum > pPageData[pSelectedOrderNum].count then
  [180] pusharglistnoret 0 ...................... <>
  [182] extcall 37 .............................. return 
  [184] getparam 1 .............................. <tOrderNum>
  [186] setprop 980 ............................. pSelectedColorNum = tOrderNum
  [189] getprop 528 ............................. <pPageData>
  [192] getprop 979 ............................. <pSelectedOrderNum>
  [195] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [197] objcall 41 .............................. <pPageData[pSelectedOrderNum]>
  [199] getprop 980 ............................. <pSelectedColorNum>
  [202] pusharglist 2 ........................... <pPageData[pSelectedOrderNum], pSelectedColorNum>
  [204] objcall 41 .............................. <pPageData[pSelectedOrderNum][pSelectedColorNum]>
  [206] setprop 252 ............................. pSelectedProduct = pPageData[pSelectedOrderNum][pSelectedColorNum]
  [208] pushsymb 559 ............................ <#catalogue>
  [211] pusharglist 1 ........................... <#catalogue>
  [213] extcall 471 ............................. <getThread(#catalogue)>
  [216] pusharglist 1 ........................... <getThread(#catalogue)>
  [218] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [220] getprop 252 ............................. <pSelectedProduct>
  [222] pusharglistnoret 2 ...................... <getThread(#catalogue).getInterface(), pSelectedProduct>
  [224] objcall 144 ............................. getThread(#catalogue).getInterface().showPreviewImage(pSelectedProduct)
  [226] getprop 252 ............................. <pSelectedProduct>
  [228] pushcons 19 ............................. <"name">
  [230] pusharglist 2 ........................... <pSelectedProduct, "name">
  [232] objcall 41 .............................. <pSelectedProduct["name"]>
  [234] pusharglist 1 ........................... <pSelectedProduct["name"]>
  [236] extcall 78 .............................. <voidp(pSelectedProduct["name"])>
  [238] not ..................................... <not voidp(pSelectedProduct["name"])>
  [239] jmpifz [273] ............................ if not voidp(pSelectedProduct["name"]) then
  [242] getlocal 1 .............................. <tWndObj>
  [244] pushcons 20 ............................. <"ctlg_product_name">
  [246] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [248] objcall 253 ............................. <tWndObj.elementExists("ctlg_product_name")>
  [250] jmpifz [273] ............................ if tWndObj.elementExists("ctlg_product_name") then
  [253] getlocal 1 .............................. <tWndObj>
  [255] pushcons 20 ............................. <"ctlg_product_name">
  [257] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [259] objcall 178 ............................. <tWndObj.getElement("ctlg_product_name")>
  [261] getprop 252 ............................. <pSelectedProduct>
  [263] pushcons 19 ............................. <"name">
  [265] pusharglist 2 ........................... <pSelectedProduct, "name">
  [267] objcall 41 .............................. <pSelectedProduct["name"]>
  [269] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_product_name"), pSelectedProduct["name"]>
  [271] objcall 188 ............................. tWndObj.getElement("ctlg_product_name").setText(pSelectedProduct["name"])
  [273] getprop 252 ............................. <pSelectedProduct>
  [275] pushcons 21 ............................. <"description">
  [277] pusharglist 2 ........................... <pSelectedProduct, "description">
  [279] objcall 41 .............................. <pSelectedProduct["description"]>
  [281] pusharglist 1 ........................... <pSelectedProduct["description"]>
  [283] extcall 78 .............................. <voidp(pSelectedProduct["description"])>
  [285] not ..................................... <not voidp(pSelectedProduct["description"])>
  [286] jmpifz [320] ............................ if not voidp(pSelectedProduct["description"]) then
  [289] getlocal 1 .............................. <tWndObj>
  [291] pushcons 22 ............................. <"ctlg_description">
  [293] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [295] objcall 253 ............................. <tWndObj.elementExists("ctlg_description")>
  [297] jmpifz [320] ............................ if tWndObj.elementExists("ctlg_description") then
  [300] getlocal 1 .............................. <tWndObj>
  [302] pushcons 22 ............................. <"ctlg_description">
  [304] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [306] objcall 178 ............................. <tWndObj.getElement("ctlg_description")>
  [308] getprop 252 ............................. <pSelectedProduct>
  [310] pushcons 21 ............................. <"description">
  [312] pusharglist 2 ........................... <pSelectedProduct, "description">
  [314] objcall 41 .............................. <pSelectedProduct["description"]>
  [316] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_description"), pSelectedProduct["description"]>
  [318] objcall 188 ............................. tWndObj.getElement("ctlg_description").setText(pSelectedProduct["description"])
  [320] getprop 252 ............................. <pSelectedProduct>
  [322] pushcons 23 ............................. <"price">
  [324] pusharglist 2 ........................... <pSelectedProduct, "price">
  [326] objcall 41 .............................. <pSelectedProduct["price"]>
  [328] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [330] extcall 78 .............................. <voidp(pSelectedProduct["price"])>
  [332] not ..................................... <not voidp(pSelectedProduct["price"])>
  [333] jmpifz [421] ............................ if not voidp(pSelectedProduct["price"]) then
  [336] getlocal 1 .............................. <tWndObj>
  [338] pushcons 24 ............................. <"ctlg_price_1">
  [340] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [342] objcall 253 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [344] jmpifz [421] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [347] getprop 252 ............................. <pSelectedProduct>
  [349] pushcons 23 ............................. <"price">
  [351] pusharglist 2 ........................... <pSelectedProduct, "price">
  [353] objcall 41 .............................. <pSelectedProduct["price"]>
  [355] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [357] extcall 266 ............................. <value(pSelectedProduct["price"])>
  [360] pushint8 1 .............................. <1>
  [362] gt ...................................... <value(pSelectedProduct["price"]) > 1>
  [363] jmpifz [388] ............................ if value(pSelectedProduct["price"]) > 1 then / else
  [366] getprop 252 ............................. <pSelectedProduct>
  [368] pushcons 23 ............................. <"price">
  [370] pusharglist 2 ........................... <pSelectedProduct, "price">
  [372] objcall 41 .............................. <pSelectedProduct["price"]>
  [374] pushcons 25 ............................. <"credits">
  [376] pushcons 25 ............................. <"credits">
  [378] pusharglist 2 ........................... <"credits", "credits">
  [380] extcall 158 ............................. <getText("credits", "credits")>
  [382] joinpadstr .............................. <pSelectedProduct["price"] && getText("credits", "credits")>
  [383] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credits", "credits")
  [385] jmp [407]
  [388] getprop 252 ............................. <pSelectedProduct>
  [390] pushcons 23 ............................. <"price">
  [392] pusharglist 2 ........................... <pSelectedProduct, "price">
  [394] objcall 41 .............................. <pSelectedProduct["price"]>
  [396] pushcons 26 ............................. <"credit">
  [398] pushcons 26 ............................. <"credit">
  [400] pusharglist 2 ........................... <"credit", "credit">
  [402] extcall 158 ............................. <getText("credit", "credit")>
  [404] joinpadstr .............................. <pSelectedProduct["price"] && getText("credit", "credit")>
  [405] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credit", "credit")
  [407] getlocal 1 .............................. <tWndObj>
  [409] pushcons 24 ............................. <"ctlg_price_1">
  [411] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [413] objcall 178 ............................. <tWndObj.getElement("ctlg_price_1")>
  [415] getlocal 2 .............................. <tText>
  [417] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [419] objcall 188 ............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [421] ret
end

on eventProc me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 198 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [ 21] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] pushcons 29 ............................. <"close">
  [ 12] eq ...................................... <tSprID = "close">
  [ 13] jmpifz [ 21] ............................ if tSprID = "close" then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 37 .............................. return 0
  [ 21] getparam 1 .............................. <tEvent>
  [ 23] pushsymb 232 ............................ <#mouseDown>
  [ 25] eq ...................................... <tEvent = #mouseDown>
  [ 26] jmpifz [215] ............................ if tEvent = #mouseDown then
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] pushcons 6 .............................. <"ctlg_small_img_">
  [ 33] containsstr ............................. <tSprID contains "ctlg_small_img_">
  [ 34] jmpifz [ 88] ............................ if tSprID contains "ctlg_small_img_" then / else
  [ 37] getmovieprop 641 ........................ <the itemDelimiter>
  [ 40] setlocal 0 .............................. tItemDeLimiter = the itemDelimiter
  [ 42] pushcons 30 ............................. <"_">
  [ 44] setmovieprop 641 ........................ the itemDelimiter = "_"
  [ 47] getparam 2 .............................. <tSprID>
  [ 49] pushsymb 352 ............................ <#item>
  [ 52] getparam 2 .............................. <tSprID>
  [ 54] pushsymb 352 ............................ <#item>
  [ 57] pusharglist 2 ........................... <tSprID, #item>
  [ 59] objcall 48 .............................. <tSprID.item.count>
  [ 61] pusharglist 3 ........................... <tSprID, #item, tSprID.item.count>
  [ 63] objcall 123 ............................. <tSprID.item[tSprID.item.count]>
  [ 65] pusharglist 1 ........................... <tSprID.item[tSprID.item.count]>
  [ 67] extcall 382 ............................. <integer(tSprID.item[tSprID.item.count])>
  [ 70] setlocal 1 .............................. tProductOrderNum = integer(tSprID.item[tSprID.item.count])
  [ 72] getlocal 0 .............................. <tItemDeLimiter>
  [ 74] setmovieprop 641 ........................ the itemDelimiter = tItemDeLimiter
  [ 77] getparam 0 .............................. <me>
  [ 79] getlocal 1 .............................. <tProductOrderNum>
  [ 81] pusharglistnoret 2 ...................... <me, tProductOrderNum>
  [ 83] localcall 4 ............................. selectProduct(me, tProductOrderNum)
  [ 85] jmp [215]
  [ 88] getparam 2 .............................. <tSprID>
  [ 90] pushcons 14 ............................. <"ctlg_selectcolor_">
  [ 92] containsstr ............................. <tSprID contains "ctlg_selectcolor_">
  [ 93] getparam 2 .............................. <tSprID>
  [ 95] pushcons 31 ............................. <"ctlg_selectcolor_bg_10">
  [ 97] containsstr ............................. <tSprID contains "ctlg_selectcolor_bg_10">
  [ 98] or ...................................... <(tSprID contains "ctlg_selectcolor_") or (tSprID contains "ctlg_selectcolor_bg_10")>
  [ 99] jmpifz [153] ............................ if (tSprID contains "ctlg_selectcolor_") or (tSprID contains "ctlg_selectcolor_bg_10") then / else
  [102] getmovieprop 641 ........................ <the itemDelimiter>
  [105] setlocal 0 .............................. tItemDeLimiter = the itemDelimiter
  [107] pushcons 30 ............................. <"_">
  [109] setmovieprop 641 ........................ the itemDelimiter = "_"
  [112] getparam 2 .............................. <tSprID>
  [114] pushsymb 352 ............................ <#item>
  [117] getparam 2 .............................. <tSprID>
  [119] pushsymb 352 ............................ <#item>
  [122] pusharglist 2 ........................... <tSprID, #item>
  [124] objcall 48 .............................. <tSprID.item.count>
  [126] pusharglist 3 ........................... <tSprID, #item, tSprID.item.count>
  [128] objcall 123 ............................. <tSprID.item[tSprID.item.count]>
  [130] pusharglist 1 ........................... <tSprID.item[tSprID.item.count]>
  [132] extcall 382 ............................. <integer(tSprID.item[tSprID.item.count])>
  [135] setlocal 2 .............................. tOrderNum = integer(tSprID.item[tSprID.item.count])
  [137] getlocal 0 .............................. <tItemDeLimiter>
  [139] setmovieprop 641 ........................ the itemDelimiter = tItemDeLimiter
  [142] getparam 0 .............................. <me>
  [144] getlocal 2 .............................. <tOrderNum>
  [146] pusharglistnoret 2 ...................... <me, tOrderNum>
  [148] localcall 5 ............................. selectColor(me, tOrderNum)
  [150] jmp [215]
  [153] getparam 2 .............................. <tSprID>
  [155] pushcons 27 ............................. <"ctlg_buy_button">
  [157] eq ...................................... <tSprID = "ctlg_buy_button">
  [158] jmpifz [210] ............................ if tSprID = "ctlg_buy_button" then / else
  [161] getprop 252 ............................. <pSelectedProduct>
  [163] getobjprop 43 ........................... <pSelectedProduct.ilk>
  [165] pushsymb 45 ............................. <#propList>
  [167] nteq .................................... <pSelectedProduct.ilk <> #propList>
  [168] jmpifz [188] ............................ if pSelectedProduct.ilk <> #propList then
  [171] getparam 0 .............................. <me>
  [173] pushcons 32 ............................. <"incorrect Selected Product Data">
  [175] pushsymb 640 ............................ <#eventProc>
  [178] pushsymb 47 ............................. <#major>
  [180] pusharglist 4 ........................... <me, "incorrect Selected Product Data", #eventProc, #major>
  [182] extcall 46 .............................. <error(me, "incorrect Selected Product Data", #eventProc, #major)>
  [184] pusharglistnoret 1 ...................... <error(me, "incorrect Selected Product Data", #eventProc, #major)>
  [186] extcall 37 .............................. return error(me, "incorrect Selected Product Data", #eventProc, #major)
  [188] pushsymb 559 ............................ <#catalogue>
  [191] pusharglist 1 ........................... <#catalogue>
  [193] extcall 471 ............................. <getThread(#catalogue)>
  [196] pusharglist 1 ........................... <getThread(#catalogue)>
  [198] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [200] getprop 252 ............................. <pSelectedProduct>
  [202] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pSelectedProduct>
  [204] objcall 305 ............................. getThread(#catalogue).getComponent().checkProductOrder(pSelectedProduct)
  [207] jmp [215]
  [210] pushzero ................................ <0>
  [211] pusharglistnoret 1 ...................... <0>
  [213] extcall 37 .............................. return 0
  [215] pushint8 1 .............................. <1>
  [217] pusharglistnoret 1 ...................... <1>
  [219] extcall 37 .............................. return 1
  [221] ret
end
