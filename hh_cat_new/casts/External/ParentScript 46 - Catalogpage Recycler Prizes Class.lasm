property pWndObj, pProductStrip, pSelectedProduct, pPageItemDownloader, pImageElements, pTextElements, pPersistentFurniData, pDealPreviewObj, pOfferTypesAvailable, pHideElements, pPrizes, pWriter, pStripImage, pFurnisPerRow, pRowHeight, pStripBg, pSlotRects

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 1097 ............................ pSlotRects = []
  [  6] pushint8 3 .............................. <3>
  [  8] setprop 1098 ............................ pFurnisPerRow = 3
  [ 11] pushint8 40 ............................. <40>
  [ 13] setprop 1099 ............................ pRowHeight = 40
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 55 .............................. <VOID>
  [ 20] setprop 150 ............................. pWndObj = VOID
  [ 22] pusharglist 0 ........................... <>
  [ 24] extcall 55 .............................. <VOID>
  [ 26] setprop 557 ............................. pProductStrip = VOID
  [ 29] pusharglist 0 ........................... <>
  [ 31] extcall 55 .............................. <VOID>
  [ 33] setprop 252 ............................. pSelectedProduct = VOID
  [ 35] pusharglist 0 ........................... <[]>
  [ 37] pushlist ................................ <[]>
  [ 38] setprop 558 ............................. pOfferTypesAvailable = []
  [ 41] pushsymb 559 ............................ <#catalogue>
  [ 44] pusharglist 1 ........................... <#catalogue>
  [ 46] extcall 471 ............................. <getThread(#catalogue)>
  [ 49] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 51] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [ 53] pusharglist 1 ........................... <getThread(#catalogue).getComponent()>
  [ 55] objcall 264 ............................. <getThread(#catalogue).getComponent().getPageItemDownloader()>
  [ 58] setprop 313 ............................. pPageItemDownloader = getThread(#catalogue).getComponent().getPageItemDownloader()
  [ 61] pushcons 0 .............................. <"catalogue_deal_preview_object">
  [ 63] pusharglist 1 ........................... <"catalogue_deal_preview_object">
  [ 65] extcall 184 ............................. <getObject("catalogue_deal_preview_object")>
  [ 67] setprop 560 ............................. pDealPreviewObj = getObject("catalogue_deal_preview_object")
  [ 70] pushcons 1 .............................. <"layout.fields.image.default">
  [ 72] pusharglist 1 ........................... <"layout.fields.image.default">
  [ 74] extcall 529 ............................. <getStructVariable("layout.fields.image.default")>
  [ 77] setprop 561 ............................. pImageElements = getStructVariable("layout.fields.image.default")
  [ 80] pushcons 2 .............................. <"layout.fields.text.default">
  [ 82] pusharglist 1 ........................... <"layout.fields.text.default">
  [ 84] extcall 529 ............................. <getStructVariable("layout.fields.text.default")>
  [ 87] setprop 562 ............................. pTextElements = getStructVariable("layout.fields.text.default")
  [ 90] pushcons 3 .............................. <"layout.hide.onclick.default">
  [ 92] pusharglist 1 ........................... <"layout.hide.onclick.default">
  [ 94] extcall 529 ............................. <getStructVariable("layout.hide.onclick.default")>
  [ 97] setprop 563 ............................. pHideElements = getStructVariable("layout.hide.onclick.default")
  [100] pushsymb 434 ............................ <#recyclerPrizesReceived>
  [103] getparam 0 .............................. <me>
  [105] pusharglist 1 ........................... <me>
  [107] objcall 54 .............................. <me.getID()>
  [109] pushsymb 1089 ........................... <#setPrizes>
  [112] pusharglistnoret 3 ...................... <#recyclerPrizesReceived, me.getID(), #setPrizes>
  [114] extcall 159 ............................. registerMessage(#recyclerPrizesReceived, me.getID(), #setPrizes)
  [116] pusharglist 0 ........................... <>
  [118] extcall 30 .............................. <getUniqueID()>
  [120] setlocal 0 .............................. tWriterId = getUniqueID()
  [122] getlocal 0 .............................. <tWriterId>
  [124] pushcons 4 .............................. <"struct.font.bold">
  [126] pusharglist 1 ........................... <"struct.font.bold">
  [128] extcall 529 ............................. <getStructVariable("struct.font.bold")>
  [131] pusharglistnoret 2 ...................... <tWriterId, getStructVariable("struct.font.bold")>
  [133] extcall 772 ............................. createWriter(tWriterId, getStructVariable("struct.font.bold"))
  [136] getlocal 0 .............................. <tWriterId>
  [138] pusharglist 1 ........................... <tWriterId>
  [140] extcall 776 ............................. <getWriter(tWriterId)>
  [143] setprop 1100 ............................ pWriter = getWriter(tWriterId)
  [146] pushsymb 0 .............................. <#construct>
  [148] getparam 0 .............................. <me>
  [150] pusharglist 1 ........................... <[me]>
  [152] pushlist ................................ <[me]>
  [153] pusharglist 2 ........................... <#construct, [me]>
  [155] extcall 15 .............................. <callAncestor(#construct, [me])>
  [157] pusharglistnoret 1 ...................... <callAncestor(#construct, [me])>
  [159] extcall 37 .............................. return callAncestor(#construct, [me])
  [161] ret
end

on deconstruct me
  [  0] pushsymb 434 ............................ <#recyclerPrizesReceived>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 54 .............................. <me.getID()>
  [  9] pusharglistnoret 2 ...................... <#recyclerPrizesReceived, me.getID()>
  [ 11] extcall 169 ............................. unregisterMessage(#recyclerPrizesReceived, me.getID())
  [ 13] getparam 0 .............................. <me>
  [ 15] getobjprop 557 .......................... <me.pProductStrip>
  [ 18] pusharglist 1 ........................... <me.pProductStrip>
  [ 20] extcall 78 .............................. <voidp(me.pProductStrip)>
  [ 22] not ..................................... <not voidp(me.pProductStrip)>
  [ 23] jmpifz [ 51] ............................ if not voidp(me.pProductStrip) then
  [ 26] getprop 557 ............................. <pProductStrip>
  [ 29] pusharglist 1 ........................... <pProductStrip>
  [ 31] objcall 54 .............................. <pProductStrip.getID()>
  [ 33] pusharglist 1 ........................... <pProductStrip.getID()>
  [ 35] extcall 167 ............................. <objectExists(pProductStrip.getID())>
  [ 37] jmpifz [ 51] ............................ if objectExists(pProductStrip.getID()) then
  [ 40] getprop 557 ............................. <pProductStrip>
  [ 43] pusharglist 1 ........................... <pProductStrip>
  [ 45] objcall 54 .............................. <pProductStrip.getID()>
  [ 47] pusharglistnoret 1 ...................... <pProductStrip.getID()>
  [ 49] extcall 168 ............................. removeObject(pProductStrip.getID())
  [ 51] getprop 313 ............................. <pPageItemDownloader>
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 10 ............................. <#downloadCompleted>
  [ 58] pusharglistnoret 3 ...................... <pPageItemDownloader, me, #downloadCompleted>
  [ 60] objcall 453 ............................. pPageItemDownloader.removeCallback(me, #downloadCompleted)
  [ 63] pushsymb 1 .............................. <#deconstruct>
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglist 1 ........................... <[me]>
  [ 69] pushlist ................................ <[me]>
  [ 70] pusharglist 2 ........................... <#deconstruct, [me]>
  [ 72] extcall 15 .............................. <callAncestor(#deconstruct, [me])>
  [ 74] pusharglistnoret 1 ...................... <callAncestor(#deconstruct, [me])>
  [ 76] extcall 37 .............................. return callAncestor(#deconstruct, [me])
  [ 78] ret
end

on define me, tdata
  [  0] pushsymb 237 ............................ <#define>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <[me]>
  [  6] pushlist ................................ <[me]>
  [  7] getparam 1 .............................. <tdata>
  [  9] pusharglistnoret 3 ...................... <#define, [me], tdata>
  [ 11] extcall 15 .............................. callAncestor(#define, [me], tdata)
  [ 13] pushcons 5 .............................. <"connection.info.id">
  [ 15] pushsymb 381 ............................ <#Info>
  [ 18] pusharglist 2 ........................... <"connection.info.id", #Info>
  [ 20] extcall 22 .............................. <getVariable("connection.info.id", #Info)>
  [ 22] pusharglist 1 ........................... <getVariable("connection.info.id", #Info)>
  [ 24] extcall 380 ............................. <getConnection(getVariable("connection.info.id", #Info))>
  [ 27] setlocal 0 .............................. tConn = getConnection(getVariable("connection.info.id", #Info))
  [ 29] getlocal 0 .............................. <tConn>
  [ 31] pushzero ................................ <0>
  [ 32] nteq .................................... <tConn <> 0>
  [ 33] jmpifz [ 45] ............................ if tConn <> 0 then
  [ 36] getlocal 0 .............................. <tConn>
  [ 38] pushcons 6 .............................. <"GET_RECYCLER_PRIZES">
  [ 40] pusharglistnoret 2 ...................... <tConn, "GET_RECYCLER_PRIZES">
  [ 42] objcall 383 ............................. tConn.send("GET_RECYCLER_PRIZES")
  [ 45] getprop 546 ............................. <pPersistentFurniData>
  [ 48] pusharglist 1 ........................... <pPersistentFurniData>
  [ 50] extcall 78 .............................. <voidp(pPersistentFurniData)>
  [ 52] jmpifz [ 74] ............................ if voidp(pPersistentFurniData) then
  [ 55] pushcons 7 .............................. <"dynamicdownloader">
  [ 57] pusharglist 1 ........................... <"dynamicdownloader">
  [ 59] extcall 471 ............................. <getThread("dynamicdownloader")>
  [ 62] pusharglist 1 ........................... <getThread("dynamicdownloader")>
  [ 64] objcall 170 ............................. <getThread("dynamicdownloader").getComponent()>
  [ 66] pusharglist 1 ........................... <getThread("dynamicdownloader").getComponent()>
  [ 68] objcall 564 ............................. <getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()>
  [ 71] setprop 546 ............................. pPersistentFurniData = getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()
  [ 74] ret
end

on testPrizes me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tPrizes = [:]
  [  5] getlocal 0 .............................. <tPrizes>
  [  7] pushint8 5 .............................. <5>
  [  9] pushsymb 267 ............................ <#id>
  [ 12] pushint8 5 .............................. <5>
  [ 14] pushsymb 432 ............................ <#odds>
  [ 17] pushint16 1000 .......................... <1000>
  [ 20] pushsymb 433 ............................ <#furniList>
  [ 23] pushcons 8 .............................. <"s">
  [ 25] pushint16 2995 .......................... <2995>
  [ 28] pusharglist 2 ........................... <["s", 2995]>
  [ 30] pushlist ................................ <["s", 2995]>
  [ 31] pushcons 8 .............................. <"s">
  [ 33] pushint16 2999 .......................... <2999>
  [ 36] pusharglist 2 ........................... <["s", 2999]>
  [ 38] pushlist ................................ <["s", 2999]>
  [ 39] pusharglist 2 ........................... <[["s", 2995], ["s", 2999]]>
  [ 41] pushlist ................................ <[["s", 2995], ["s", 2999]]>
  [ 42] pusharglist 6 ........................... <[#id: 5, #odds: 1000, #furniList: [["s", 2995], ["s", 2999]]]>
  [ 44] pushproplist ............................ <[#id: 5, #odds: 1000, #furniList: [["s", 2995], ["s", 2999]]]>
  [ 45] pusharglistnoret 3 ...................... <tPrizes, 5, [#id: 5, #odds: 1000, #furniList: [["s", 2995], ["s", 2999]]]>
  [ 47] objcall 321 ............................. tPrizes.setaProp(5, [#id: 5, #odds: 1000, #furniList: [["s", 2995], ["s", 2999]]])
  [ 50] getlocal 0 .............................. <tPrizes>
  [ 52] pushint8 4 .............................. <4>
  [ 54] pushsymb 267 ............................ <#id>
  [ 57] pushint8 4 .............................. <4>
  [ 59] pushsymb 432 ............................ <#odds>
  [ 62] pushint16 500 ........................... <500>
  [ 65] pushsymb 433 ............................ <#furniList>
  [ 68] pushcons 8 .............................. <"s">
  [ 70] pushint16 1897 .......................... <1897>
  [ 73] pusharglist 2 ........................... <["s", 1897]>
  [ 75] pushlist ................................ <["s", 1897]>
  [ 76] pushcons 8 .............................. <"s">
  [ 78] pushint16 2443 .......................... <2443>
  [ 81] pusharglist 2 ........................... <["s", 2443]>
  [ 83] pushlist ................................ <["s", 2443]>
  [ 84] pushcons 8 .............................. <"s">
  [ 86] pushint16 2306 .......................... <2306>
  [ 89] pusharglist 2 ........................... <["s", 2306]>
  [ 91] pushlist ................................ <["s", 2306]>
  [ 92] pushcons 8 .............................. <"s">
  [ 94] pushint16 2644 .......................... <2644>
  [ 97] pusharglist 2 ........................... <["s", 2644]>
  [ 99] pushlist ................................ <["s", 2644]>
  [100] pusharglist 4 ........................... <[["s", 1897], ["s", 2443], ["s", 2306], ["s", 2644]]>
  [102] pushlist ................................ <[["s", 1897], ["s", 2443], ["s", 2306], ["s", 2644]]>
  [103] pusharglist 6 ........................... <[#id: 4, #odds: 500, #furniList: [["s", 1897], ["s", 2443], ["s", 2306], ["s", 2644]]]>
  [105] pushproplist ............................ <[#id: 4, #odds: 500, #furniList: [["s", 1897], ["s", 2443], ["s", 2306], ["s", 2644]]]>
  [106] pusharglistnoret 3 ...................... <tPrizes, 4, [#id: 4, #odds: 500, #furniList: [["s", 1897], ["s", 2443], ["s", 2306], ["s", 2644]]]>
  [108] objcall 321 ............................. tPrizes.setaProp(4, [#id: 4, #odds: 500, #furniList: [["s", 1897], ["s", 2443], ["s", 2306], ["s", 2644]]])
  [111] pushsymb 434 ............................ <#recyclerPrizesReceived>
  [114] getlocal 0 .............................. <tPrizes>
  [116] pusharglistnoret 2 ...................... <#recyclerPrizesReceived, tPrizes>
  [118] extcall 220 ............................. executeMessage(#recyclerPrizesReceived, tPrizes)
  [120] ret
end

on setPrizes me, tPrizes
  [  0] getparam 1 .............................. <tPrizes>
  [  2] getobjprop 43 ........................... <tPrizes.ilk>
  [  4] pushsymb 45 ............................. <#propList>
  [  6] nteq .................................... <tPrizes.ilk <> #propList>
  [  7] jmpifz [ 15] ............................ if tPrizes.ilk <> #propList then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 37 .............................. return 0
  [ 15] getparam 1 .............................. <tPrizes>
  [ 17] setprop 1102 ............................ pPrizes = tPrizes
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglistnoret 1 ...................... <me>
  [ 24] objcall 6 ............................... me.renderStripBg()
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglistnoret 1 ...................... <me>
  [ 30] objcall 1092 ............................ me.renderStripItems()
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 1090 ............................ me.downloadFurniCasts()
  [ 40] ret
end

on downloadFurniCasts me
  [  0] getprop 1102 ............................ <pPrizes>
  [  3] getobjprop 43 ........................... <pPrizes.ilk>
  [  5] pushsymb 45 ............................. <#propList>
  [  7] nteq .................................... <pPrizes.ilk <> #propList>
  [  8] jmpifz [ 16] ............................ if pPrizes.ilk <> #propList then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 37 .............................. return 0
  [ 16] getprop 546 ............................. <pPersistentFurniData>
  [ 19] pusharglist 1 ........................... <pPersistentFurniData>
  [ 21] extcall 78 .............................. <voidp(pPersistentFurniData)>
  [ 23] jmpifz [ 45] ............................ if voidp(pPersistentFurniData) then
  [ 26] pushcons 7 .............................. <"dynamicdownloader">
  [ 28] pusharglist 1 ........................... <"dynamicdownloader">
  [ 30] extcall 471 ............................. <getThread("dynamicdownloader")>
  [ 33] pusharglist 1 ........................... <getThread("dynamicdownloader")>
  [ 35] objcall 170 ............................. <getThread("dynamicdownloader").getComponent()>
  [ 37] pusharglist 1 ........................... <getThread("dynamicdownloader").getComponent()>
  [ 39] objcall 564 ............................. <getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()>
  [ 42] setprop 546 ............................. pPersistentFurniData = getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()
  [ 45] getprop 313 ............................. <pPageItemDownloader>
  [ 48] getparam 0 .............................. <me>
  [ 50] pushsymb 10 ............................. <#downloadCompleted>
  [ 52] pusharglistnoret 3 ...................... <pPageItemDownloader, me, #downloadCompleted>
  [ 54] objcall 452 ............................. pPageItemDownloader.defineCallback(me, #downloadCompleted)
  [ 57] getprop 1102 ............................ <pPrizes>
  [ 60] peek 0
  [ 62] pusharglist 1
  [ 64] extcall 48
  [ 66] pushint8 1
  [ 68] peek 0
  [ 70] peek 2
  [ 72] lteq
  [ 73] jmpifz [255] ............................ repeat with tCategory in pPrizes
  [ 76] peek 2
  [ 78] peek 1
  [ 80] pusharglist 2
  [ 82] extcall 41
  [ 84] setlocal 0
  [ 86] getlocal 0 .............................. <tCategory>
  [ 88] pushsymb 433 ............................ <#furniList>
  [ 91] pusharglist 2 ........................... <tCategory, #furniList>
  [ 93] objcall 41 .............................. <tCategory[#furniList]>
  [ 95] setlocal 1 .............................. tFurniList = tCategory[#furniList]
  [ 97] pushint8 1 .............................. <1>
  [ 99] setlocal 2
  [101] getlocal 2
  [103] getlocal 1 .............................. <tFurniList>
  [105] getobjprop 48 ........................... <tFurniList.count>
  [107] lteq
  [108] jmpifz [250] ............................ repeat with i = 1 to tFurniList.count
  [111] getlocal 1 .............................. <tFurniList>
  [113] getlocal 2 .............................. <i>
  [115] pusharglist 2 ........................... <tFurniList, i>
  [117] objcall 41 .............................. <tFurniList[i]>
  [119] pushint8 1 .............................. <1>
  [121] pusharglist 2 ........................... <tFurniList[i], 1>
  [123] objcall 41 .............................. <tFurniList[i][1]>
  [125] setlocal 3 .............................. ttype = tFurniList[i][1]
  [127] getlocal 1 .............................. <tFurniList>
  [129] getlocal 2 .............................. <i>
  [131] pusharglist 2 ........................... <tFurniList, i>
  [133] objcall 41 .............................. <tFurniList[i]>
  [135] pushint8 2 .............................. <2>
  [137] pusharglist 2 ........................... <tFurniList[i], 2>
  [139] objcall 41 .............................. <tFurniList[i][2]>
  [141] setlocal 4 .............................. tClassID = tFurniList[i][2]
  [143] getprop 546 ............................. <pPersistentFurniData>
  [146] getlocal 3 .............................. <ttype>
  [148] getlocal 4 .............................. <tClassID>
  [150] pusharglist 3 ........................... <pPersistentFurniData, ttype, tClassID>
  [152] objcall 487 ............................. <pPersistentFurniData.getProps(ttype, tClassID)>
  [155] setlocal 5 .............................. tFurniProps = pPersistentFurniData.getProps(ttype, tClassID)
  [157] getlocal 5 .............................. <tFurniProps>
  [159] getobjprop 43 ........................... <tFurniProps.ilk>
  [161] pushsymb 45 ............................. <#propList>
  [163] nteq .................................... <tFurniProps.ilk <> #propList>
  [164] jmpifz [190] ............................ if tFurniProps.ilk <> #propList then
  [167] getparam 0 .............................. <me>
  [169] pushcons 9 .............................. <"Type not found in persistent furni data!">
  [171] getlocal 3 .............................. <ttype>
  [173] joinpadstr .............................. <"Type not found in persistent furni data!" && ttype>
  [174] getlocal 4 .............................. <tClassID>
  [176] joinpadstr .............................. <"Type not found in persistent furni data!" && ttype && tClassID>
  [177] pushsymb 1090 ........................... <#downloadFurniCasts>
  [180] pushsymb 47 ............................. <#major>
  [182] pusharglist 4 ........................... <me, "Type not found in persistent furni data!" && ttype && tClassID, #downloadFurniCasts, #major>
  [184] extcall 46 .............................. <error(me, "Type not found in persistent furni data!" && ttype && tClassID, #downloadFurniCasts, #major)>
  [186] pusharglistnoret 1 ...................... <error(me, "Type not found in persistent furni data!" && ttype && tClassID, #downloadFurniCasts, #major)>
  [188] extcall 37 .............................. return error(me, "Type not found in persistent furni data!" && ttype && tClassID, #downloadFurniCasts, #major)
  [190] getparam 0 .............................. <me>
  [192] getlocal 5 .............................. <tFurniProps>
  [194] pushsymb 268 ............................ <#class>
  [197] pusharglist 2 ........................... <tFurniProps, #class>
  [199] objcall 41 .............................. <tFurniProps[#class]>
  [201] pusharglist 2 ........................... <me, tFurniProps[#class]>
  [203] objcall 1091 ............................ <me.removeColorFromClassName(tFurniProps[#class])>
  [206] setlocal 6 .............................. tClass = me.removeColorFromClassName(tFurniProps[#class])
  [208] getprop 313 ............................. <pPageItemDownloader>
  [211] pushsymb 478 ............................ <#furni>
  [214] getlocal 6 .............................. <tClass>
  [216] pushsymb 1103 ........................... <#category>
  [219] getlocal 0 .............................. <tCategory>
  [221] pushsymb 267 ............................ <#id>
  [224] pusharglist 2 ........................... <tCategory, #id>
  [226] objcall 41 .............................. <tCategory[#id]>
  [228] pushsymb 352 ............................ <#item>
  [231] getlocal 2 .............................. <i>
  [233] pusharglist 4 ........................... <[#category: tCategory[#id], #item: i]>
  [235] pushproplist ............................ <[#category: tCategory[#id], #item: i]>
  [236] pusharglistnoret 4 ...................... <pPageItemDownloader, #furni, tClass, [#category: tCategory[#id], #item: i]>
  [238] objcall 455 ............................. pPageItemDownloader.registerDownload(#furni, tClass, [#category: tCategory[#id], #item: i])
  [241] pushint8 1
  [243] getlocal 2
  [245] add
  [246] setlocal 2
  [248] endrepeat [101]
  [250] pushint8 1
  [252] add
  [253] endrepeat [ 68]
  [255] pop 3
  [257] ret
end

on removeColorFromClassName me, tClass
  [  0] getparam 1 .............................. <tClass>
  [  2] pushcons 10 ............................. <"*">
  [  4] containsstr ............................. <tClass contains "*">
  [  5] jmpifz [ 36] ............................ if tClass contains "*" then
  [  8] getmovieprop 641 ........................ <the itemDelimiter>
  [ 11] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 13] pushcons 10 ............................. <"*">
  [ 15] setmovieprop 641 ........................ the itemDelimiter = "*"
  [ 18] getparam 1 .............................. <tClass>
  [ 20] pushsymb 352 ............................ <#item>
  [ 23] pushint8 1 .............................. <1>
  [ 25] pusharglist 3 ........................... <tClass, #item, 1>
  [ 27] objcall 123 ............................. <tClass.item[1]>
  [ 29] setparam 1 .............................. tClass = tClass.item[1]
  [ 31] getlocal 0 .............................. <tDelim>
  [ 33] setmovieprop 641 ........................ the itemDelimiter = tDelim
  [ 36] getparam 1 .............................. <tClass>
  [ 38] pusharglistnoret 1 ...................... <tClass>
  [ 40] extcall 37 .............................. return tClass
  [ 42] ret
end

on renderStripItems me
  [  0] getprop 1102 ............................ <pPrizes>
  [  3] getobjprop 43 ........................... <pPrizes.ilk>
  [  5] pushsymb 45 ............................. <#propList>
  [  7] nteq .................................... <pPrizes.ilk <> #propList>
  [  8] jmpifz [ 16] ............................ if pPrizes.ilk <> #propList then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 37 .............................. return 0
  [ 16] pushint8 1 .............................. <1>
  [ 18] setlocal 0
  [ 20] getlocal 0
  [ 22] getprop 1102 ............................ <pPrizes>
  [ 25] getobjprop 48 ........................... <pPrizes.count>
  [ 27] lteq
  [ 28] jmpifz [105] ............................ repeat with i = 1 to pPrizes.count
  [ 31] getprop 1102 ............................ <pPrizes>
  [ 34] getlocal 0 .............................. <i>
  [ 36] pusharglist 2 ........................... <pPrizes, i>
  [ 38] objcall 41 .............................. <pPrizes[i]>
  [ 40] pushsymb 433 ............................ <#furniList>
  [ 43] pusharglist 2 ........................... <pPrizes[i], #furniList>
  [ 45] objcall 41 .............................. <pPrizes[i][#furniList]>
  [ 47] setlocal 1 .............................. tFurniList = pPrizes[i][#furniList]
  [ 49] pushint8 1 .............................. <1>
  [ 51] setlocal 2
  [ 53] getlocal 2
  [ 55] getlocal 1 .............................. <tFurniList>
  [ 57] getobjprop 48 ........................... <tFurniList.count>
  [ 59] lteq
  [ 60] jmpifz [ 96] ............................ repeat with j = 1 to tFurniList.count
  [ 63] getparam 0 .............................. <me>
  [ 65] getprop 1102 ............................ <pPrizes>
  [ 68] getlocal 0 .............................. <i>
  [ 70] pusharglist 2 ........................... <pPrizes, i>
  [ 72] objcall 41 .............................. <pPrizes[i]>
  [ 74] pushsymb 267 ............................ <#id>
  [ 77] pusharglist 2 ........................... <pPrizes[i], #id>
  [ 79] objcall 41 .............................. <pPrizes[i][#id]>
  [ 81] getlocal 2 .............................. <j>
  [ 83] pusharglistnoret 3 ...................... <me, pPrizes[i][#id], j>
  [ 85] objcall 7 ............................... me.renderStripItem(pPrizes[i][#id], j)
  [ 87] pushint8 1
  [ 89] getlocal 2
  [ 91] add
  [ 92] setlocal 2
  [ 94] endrepeat [ 53]
  [ 96] pushint8 1
  [ 98] getlocal 0
  [100] add
  [101] setlocal 0
  [103] endrepeat [ 20]
  [105] getparam 0 .............................. <me>
  [107] getprop 1105 ............................ <pStripBg>
  [110] pushcons 11 ............................. <"ctlg_productstrip">
  [112] pusharglistnoret 3 ...................... <me, pStripBg, "ctlg_productstrip">
  [114] objcall 1095 ............................ me.setImage(pStripBg, "ctlg_productstrip")
  [117] ret
end

on renderStripItem me, tCategoryId, tIndex, tIsSelected
  [  0] getparam 3 .............................. <tIsSelected>
  [  2] jmpifz [ 17] ............................ if tIsSelected then / else
  [  5] pushcons 12 ............................. <"stripitem.basic.bg.selected">
  [  7] pusharglist 1 ........................... <"stripitem.basic.bg.selected">
  [  9] extcall 652 ............................. <getmemnum("stripitem.basic.bg.selected")>
  [ 12] setlocal 0 .............................. tMemNum = getmemnum("stripitem.basic.bg.selected")
  [ 14] jmp [ 26]
  [ 17] pushcons 13 ............................. <"stripitem.basic.bg.unselected">
  [ 19] pusharglist 1 ........................... <"stripitem.basic.bg.unselected">
  [ 21] extcall 652 ............................. <getmemnum("stripitem.basic.bg.unselected")>
  [ 24] setlocal 0 .............................. tMemNum = getmemnum("stripitem.basic.bg.unselected")
  [ 26] getlocal 0 .............................. <tMemNum>
  [ 28] pushzero ................................ <0>
  [ 29] nteq .................................... <tMemNum <> 0>
  [ 30] jmpifz [ 43] ............................ if tMemNum <> 0 then
  [ 33] getlocal 0 .............................. <tMemNum>
  [ 35] pusharglist 1 ........................... <tMemNum>
  [ 37] extcall 255 ............................. <member(tMemNum)>
  [ 39] getobjprop 17 ........................... <member(tMemNum).image>
  [ 41] setlocal 1 .............................. tSlotBg = member(tMemNum).image
  [ 43] getparam 0 .............................. <me>
  [ 45] getparam 1 .............................. <tCategoryId>
  [ 47] getparam 2 .............................. <tIndex>
  [ 49] pusharglist 3 ........................... <me, tCategoryId, tIndex>
  [ 51] objcall 1094 ............................ <me.getSlotRect(tCategoryId, tIndex)>
  [ 54] setlocal 2 .............................. tSlotRect = me.getSlotRect(tCategoryId, tIndex)
  [ 56] getlocal 2 .............................. <tSlotRect>
  [ 58] not ..................................... <not tSlotRect>
  [ 59] jmpifz [ 67] ............................ if not tSlotRect then
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 37 .............................. return 0
  [ 67] getlocal 1 .............................. <tSlotBg>
  [ 69] getobjprop 43 ........................... <tSlotBg.ilk>
  [ 71] pushsymb 17 ............................. <#image>
  [ 73] eq ...................................... <tSlotBg.ilk = #image>
  [ 74] jmpifz [ 92] ............................ if tSlotBg.ilk = #image then
  [ 77] getprop 1105 ............................ <pStripBg>
  [ 80] getlocal 1 .............................. <tSlotBg>
  [ 82] getlocal 2 .............................. <tSlotRect>
  [ 84] getlocal 1 .............................. <tSlotBg>
  [ 86] getobjprop 69 ........................... <tSlotBg.rect>
  [ 88] pusharglistnoret 4 ...................... <pStripBg, tSlotBg, tSlotRect, tSlotBg.rect>
  [ 90] objcall 77 .............................. pStripBg.copyPixels(tSlotBg, tSlotRect, tSlotBg.rect)
  [ 92] getprop 1102 ............................ <pPrizes>
  [ 95] getparam 1 .............................. <tCategoryId>
  [ 97] pusharglist 2 ........................... <pPrizes, tCategoryId>
  [ 99] objcall 102 ............................. <pPrizes.getaProp(tCategoryId)>
  [101] setlocal 3 .............................. tCategoryData = pPrizes.getaProp(tCategoryId)
  [103] getlocal 3 .............................. <tCategoryData>
  [105] pushsymb 433 ............................ <#furniList>
  [108] pusharglist 2 ........................... <tCategoryData, #furniList>
  [110] objcall 102 ............................. <tCategoryData.getaProp(#furniList)>
  [112] setlocal 4 .............................. tFurniList = tCategoryData.getaProp(#furniList)
  [114] getprop 546 ............................. <pPersistentFurniData>
  [117] getlocal 4 .............................. <tFurniList>
  [119] getparam 2 .............................. <tIndex>
  [121] pusharglist 2 ........................... <tFurniList, tIndex>
  [123] objcall 41 .............................. <tFurniList[tIndex]>
  [125] pushint8 1 .............................. <1>
  [127] pusharglist 2 ........................... <tFurniList[tIndex], 1>
  [129] objcall 41 .............................. <tFurniList[tIndex][1]>
  [131] getlocal 4 .............................. <tFurniList>
  [133] getparam 2 .............................. <tIndex>
  [135] pusharglist 2 ........................... <tFurniList, tIndex>
  [137] objcall 41 .............................. <tFurniList[tIndex]>
  [139] pushint8 2 .............................. <2>
  [141] pusharglist 2 ........................... <tFurniList[tIndex], 2>
  [143] objcall 41 .............................. <tFurniList[tIndex][2]>
  [145] pusharglist 3 ........................... <pPersistentFurniData, tFurniList[tIndex][1], tFurniList[tIndex][2]>
  [147] objcall 487 ............................. <pPersistentFurniData.getProps(tFurniList[tIndex][1], tFurniList[tIndex][2])>
  [150] setlocal 5 .............................. tProps = pPersistentFurniData.getProps(tFurniList[tIndex][1], tFurniList[tIndex][2])
  [152] getlocal 5 .............................. <tProps>
  [154] getobjprop 43 ........................... <tProps.ilk>
  [156] pushsymb 45 ............................. <#propList>
  [158] nteq .................................... <tProps.ilk <> #propList>
  [159] jmpifz [208] ............................ if tProps.ilk <> #propList then
  [162] getparam 0 .............................. <me>
  [164] pushcons 9 .............................. <"Type not found in persistent furni data!">
  [166] getlocal 4 .............................. <tFurniList>
  [168] getparam 2 .............................. <tIndex>
  [170] pusharglist 2 ........................... <tFurniList, tIndex>
  [172] objcall 41 .............................. <tFurniList[tIndex]>
  [174] pushint8 1 .............................. <1>
  [176] pusharglist 2 ........................... <tFurniList[tIndex], 1>
  [178] objcall 41 .............................. <tFurniList[tIndex][1]>
  [180] joinpadstr .............................. <"Type not found in persistent furni data!" && tFurniList[tIndex][1]>
  [181] getlocal 4 .............................. <tFurniList>
  [183] getparam 2 .............................. <tIndex>
  [185] pusharglist 2 ........................... <tFurniList, tIndex>
  [187] objcall 41 .............................. <tFurniList[tIndex]>
  [189] pushint8 2 .............................. <2>
  [191] pusharglist 2 ........................... <tFurniList[tIndex], 2>
  [193] objcall 41 .............................. <tFurniList[tIndex][2]>
  [195] joinpadstr .............................. <"Type not found in persistent furni data!" && tFurniList[tIndex][1] && tFurniList[tIndex][2]>
  [196] pushsymb 7 .............................. <#renderStripItem>
  [198] pushsymb 47 ............................. <#major>
  [200] pusharglist 4 ........................... <me, "Type not found in persistent furni data!" && tFurniList[tIndex][1] && tFurniList[tIndex][2], #renderStripItem, #major>
  [202] extcall 46 .............................. <error(me, "Type not found in persistent furni data!" && tFurniList[tIndex][1] && tFurniList[tIndex][2], #renderStripItem, #major)>
  [204] pusharglistnoret 1 ...................... <error(me, "Type not found in persistent furni data!" && tFurniList[tIndex][1] && tFurniList[tIndex][2], #renderStripItem, #major)>
  [206] extcall 37 .............................. return error(me, "Type not found in persistent furni data!" && tFurniList[tIndex][1] && tFurniList[tIndex][2], #renderStripItem, #major)
  [208] getlocal 5 .............................. <tProps>
  [210] pushsymb 268 ............................ <#class>
  [213] pusharglist 2 ........................... <tProps, #class>
  [215] objcall 41 .............................. <tProps[#class]>
  [217] setlocal 6 .............................. tClass = tProps[#class]
  [219] getlocal 5 .............................. <tProps>
  [221] pushsymb 547 ............................ <#partColors>
  [224] pusharglist 2 ........................... <tProps, #partColors>
  [226] objcall 41 .............................. <tProps[#partColors]>
  [228] setlocal 7 .............................. tColors = tProps[#partColors]
  [230] pushsymb 472 ............................ <#dynamicdownloader>
  [233] pusharglist 1 ........................... <#dynamicdownloader>
  [235] extcall 471 ............................. <getThread(#dynamicdownloader)>
  [238] pusharglist 1 ........................... <getThread(#dynamicdownloader)>
  [240] objcall 170 ............................. <getThread(#dynamicdownloader).getComponent()>
  [242] getlocal 6 .............................. <tClass>
  [244] pusharglist 2 ........................... <getThread(#dynamicdownloader).getComponent(), tClass>
  [246] objcall 582 ............................. <getThread(#dynamicdownloader).getComponent().isAssetDownloaded(tClass)>
  [249] jmpifz [279] ............................ if getThread(#dynamicdownloader).getComponent().isAssetDownloaded(tClass) then / else
  [252] pushcons 14 ............................. <"Preview_renderer">
  [254] pusharglist 1 ........................... <"Preview_renderer">
  [256] extcall 184 ............................. <getObject("Preview_renderer")>
  [258] pusharglist 0 ........................... <>
  [260] extcall 55 .............................. <VOID>
  [262] pusharglist 0 ........................... <>
  [264] extcall 55 .............................. <VOID>
  [266] getlocal 7 .............................. <tColors>
  [268] getlocal 6 .............................. <tClass>
  [270] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, VOID, tColors, tClass>
  [272] objcall 145 ............................. <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tColors, tClass)>
  [274] setlocal 8 .............................. tImage = getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tColors, tClass)
  [276] jmp [310]
  [279] pushcons 15 ............................. <"ctlg_loading_icon2">
  [281] pusharglist 1 ........................... <"ctlg_loading_icon2">
  [283] extcall 652 ............................. <getmemnum("ctlg_loading_icon2")>
  [286] pusharglist 1 ........................... <getmemnum("ctlg_loading_icon2")>
  [288] extcall 255 ............................. <member(getmemnum("ctlg_loading_icon2"))>
  [290] setlocal 9 .............................. tIconMem = member(getmemnum("ctlg_loading_icon2"))
  [292] getlocal 9 .............................. <tIconMem>
  [294] getobjprop 399 .......................... <tIconMem.type>
  [297] pushsymb 474 ............................ <#bitmap>
  [300] eq ...................................... <tIconMem.type = #bitmap>
  [301] jmpifz [310] ............................ if tIconMem.type = #bitmap then
  [304] getlocal 9 .............................. <tIconMem>
  [306] getobjprop 17 ........................... <tIconMem.image>
  [308] setlocal 8 .............................. tImage = tIconMem.image
  [310] getlocal 8 .............................. <tImage>
  [312] getobjprop 43 ........................... <tImage.ilk>
  [314] pushsymb 17 ............................. <#image>
  [316] nteq .................................... <tImage.ilk <> #image>
  [317] jmpifz [325] ............................ if tImage.ilk <> #image then
  [320] pushzero ................................ <0>
  [321] pusharglistnoret 1 ...................... <0>
  [323] extcall 37 .............................. return 0
  [325] getlocal 2 .............................. <tSlotRect>
  [327] pushint8 1 .............................. <1>
  [329] pusharglist 2 ........................... <tSlotRect, 1>
  [331] objcall 41 .............................. <tSlotRect[1]>
  [333] getlocal 2 .............................. <tSlotRect>
  [335] getobjprop 33 ........................... <tSlotRect.width>
  [337] getlocal 8 .............................. <tImage>
  [339] getchainedprop 69 ....................... <tImage.rect>
  [341] getobjprop 33 ........................... <tImage.rect.width>
  [343] sub ..................................... <tSlotRect.width - tImage.rect.width>
  [344] pushint8 2 .............................. <2>
  [346] div ..................................... <(tSlotRect.width - tImage.rect.width) / 2>
  [347] add ..................................... <tSlotRect[1] + ((tSlotRect.width - tImage.rect.width) / 2)>
  [348] setlocal 10 ............................. tOffsetX = tSlotRect[1] + ((tSlotRect.width - tImage.rect.width) / 2)
  [350] getlocal 2 .............................. <tSlotRect>
  [352] pushint8 2 .............................. <2>
  [354] pusharglist 2 ........................... <tSlotRect, 2>
  [356] objcall 41 .............................. <tSlotRect[2]>
  [358] getlocal 2 .............................. <tSlotRect>
  [360] getobjprop 34 ........................... <tSlotRect.height>
  [362] getlocal 8 .............................. <tImage>
  [364] getchainedprop 69 ....................... <tImage.rect>
  [366] getobjprop 34 ........................... <tImage.rect.height>
  [368] sub ..................................... <tSlotRect.height - tImage.rect.height>
  [369] pushint8 2 .............................. <2>
  [371] div ..................................... <(tSlotRect.height - tImage.rect.height) / 2>
  [372] add ..................................... <tSlotRect[2] + ((tSlotRect.height - tImage.rect.height) / 2)>
  [373] setlocal 11 ............................. tOffsetY = tSlotRect[2] + ((tSlotRect.height - tImage.rect.height) / 2)
  [375] getlocal 8 .............................. <tImage>
  [377] getchainedprop 69 ....................... <tImage.rect>
  [379] getlocal 10 ............................. <tOffsetX>
  [381] getlocal 11 ............................. <tOffsetY>
  [383] pusharglist 3 ........................... <tImage.rect, tOffsetX, tOffsetY>
  [385] objcall 293 ............................. <tImage.rect.offset(tOffsetX, tOffsetY)>
  [388] setlocal 12 ............................. tRect = tImage.rect.offset(tOffsetX, tOffsetY)
  [390] getprop 1105 ............................ <pStripBg>
  [393] getlocal 8 .............................. <tImage>
  [395] getlocal 12 ............................. <tRect>
  [397] getlocal 8 .............................. <tImage>
  [399] getobjprop 69 ........................... <tImage.rect>
  [401] pushsymb 84 ............................. <#ink>
  [403] pushint8 36 ............................. <36>
  [405] pusharglist 2 ........................... <[#ink: 36]>
  [407] pushproplist ............................ <[#ink: 36]>
  [408] pusharglistnoret 5 ...................... <pStripBg, tImage, tRect, tImage.rect, [#ink: 36]>
  [410] objcall 77 .............................. pStripBg.copyPixels(tImage, tRect, tImage.rect, [#ink: 36])
  [412] ret
end

on renderStripBg me
  [  0] getprop 1102 ............................ <pPrizes>
  [  3] getobjprop 43 ........................... <pPrizes.ilk>
  [  5] pushsymb 45 ............................. <#propList>
  [  7] nteq .................................... <pPrizes.ilk <> #propList>
  [  8] jmpifz [ 16] ............................ if pPrizes.ilk <> #propList then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 37 .............................. return 0
  [ 16] getprop 150 ............................. <pWndObj>
  [ 18] pusharglist 1 ........................... <pWndObj>
  [ 20] extcall 78 .............................. <voidp(pWndObj)>
  [ 22] jmpifz [ 30] ............................ if voidp(pWndObj) then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 37 .............................. return 0
  [ 30] getprop 150 ............................. <pWndObj>
  [ 32] pushcons 11 ............................. <"ctlg_productstrip">
  [ 34] pusharglist 2 ........................... <pWndObj, "ctlg_productstrip">
  [ 36] objcall 178 ............................. <pWndObj.getElement("ctlg_productstrip")>
  [ 38] setlocal 0 .............................. tStripElem = pWndObj.getElement("ctlg_productstrip")
  [ 40] getlocal 0 .............................. <tStripElem>
  [ 42] not ..................................... <not tStripElem>
  [ 43] jmpifz [ 51] ............................ if not tStripElem then
  [ 46] pushzero ................................ <0>
  [ 47] pusharglistnoret 1 ...................... <0>
  [ 49] extcall 37 .............................. return 0
  [ 51] getlocal 0 .............................. <tStripElem>
  [ 53] pushsymb 33 ............................. <#width>
  [ 55] pusharglist 2 ........................... <tStripElem, #width>
  [ 57] objcall 120 ............................. <tStripElem.getProperty(#width)>
  [ 59] setlocal 1 .............................. tStripWidth = tStripElem.getProperty(#width)
  [ 61] getlocal 1 .............................. <tStripWidth>
  [ 63] pushint16 2000 .......................... <2000>
  [ 66] pushint8 32 ............................. <32>
  [ 68] pusharglist 3 ........................... <tStripWidth, 2000, 32>
  [ 70] extcall 17 .............................. <image(tStripWidth, 2000, 32)>
  [ 72] setprop 1105 ............................ pStripBg = image(tStripWidth, 2000, 32)
  [ 75] pushcons 13 ............................. <"stripitem.basic.bg.unselected">
  [ 77] pusharglist 1 ........................... <"stripitem.basic.bg.unselected">
  [ 79] extcall 652 ............................. <getmemnum("stripitem.basic.bg.unselected")>
  [ 82] setlocal 2 .............................. tMemNum = getmemnum("stripitem.basic.bg.unselected")
  [ 84] getlocal 2 .............................. <tMemNum>
  [ 86] pushzero ................................ <0>
  [ 87] nteq .................................... <tMemNum <> 0>
  [ 88] jmpifz [104] ............................ if tMemNum <> 0 then / else
  [ 91] getlocal 2 .............................. <tMemNum>
  [ 93] pusharglist 1 ........................... <tMemNum>
  [ 95] extcall 255 ............................. <member(tMemNum)>
  [ 97] getobjprop 17 ........................... <member(tMemNum).image>
  [ 99] setlocal 3 .............................. tSlotBg = member(tMemNum).image
  [101] jmp [116]
  [104] pushint8 38 ............................. <38>
  [106] pushint8 38 ............................. <38>
  [108] pushint8 32 ............................. <32>
  [110] pusharglist 3 ........................... <38, 38, 32>
  [112] extcall 17 .............................. <image(38, 38, 32)>
  [114] setlocal 3 .............................. tSlotBg = image(38, 38, 32)
  [116] getlocal 3 .............................. <tSlotBg>
  [118] getobjprop 33 ........................... <tSlotBg.width>
  [120] setlocal 4 .............................. tSlotSize = tSlotBg.width
  [122] pushint8 5 .............................. <5>
  [124] setlocal 5 .............................. tTitleMargin = 5
  [126] pushzero ................................ <0>
  [127] setlocal 6 .............................. tOffsetY = 0
  [129] pusharglist 0 ........................... <[:]>
  [131] pushproplist ............................ <[:]>
  [132] setprop 1097 ............................ pSlotRects = [:]
  [135] pushint8 1 .............................. <1>
  [137] setlocal 7
  [139] getlocal 7
  [141] getprop 1102 ............................ <pPrizes>
  [144] getobjprop 48 ........................... <pPrizes.count>
  [146] lteq
  [147] jmpifz [438] ............................ repeat with i = 1 to pPrizes.count
  [150] getprop 1102 ............................ <pPrizes>
  [153] getlocal 7 .............................. <i>
  [155] pusharglist 2 ........................... <pPrizes, i>
  [157] objcall 41 .............................. <pPrizes[i]>
  [159] pushsymb 433 ............................ <#furniList>
  [162] pusharglist 2 ........................... <pPrizes[i], #furniList>
  [164] objcall 41 .............................. <pPrizes[i][#furniList]>
  [166] setlocal 8 .............................. tFurniList = pPrizes[i][#furniList]
  [168] getlocal 8 .............................. <tFurniList>
  [170] pusharglist 1 ........................... <tFurniList>
  [172] extcall 349 ............................. <listp(tFurniList)>
  [175] not ..................................... <not listp(tFurniList)>
  [176] jmpifz [182] ............................ if not listp(tFurniList) then
  [179] jmp [428] ............................... next repeat
  [182] getlocal 8 .............................. <tFurniList>
  [184] getobjprop 48 ........................... <tFurniList.count>
  [186] pushzero ................................ <0>
  [187] eq ...................................... <tFurniList.count = 0>
  [188] jmpifz [194] ............................ if tFurniList.count = 0 then
  [191] jmp [428] ............................... next repeat
  [194] getprop 1102 ............................ <pPrizes>
  [197] getlocal 7 .............................. <i>
  [199] pusharglist 2 ........................... <pPrizes, i>
  [201] objcall 41 .............................. <pPrizes[i]>
  [203] pushsymb 267 ............................ <#id>
  [206] pusharglist 2 ........................... <pPrizes[i], #id>
  [208] objcall 41 .............................. <pPrizes[i][#id]>
  [210] setlocal 9 .............................. tID = pPrizes[i][#id]
  [212] pushcons 16 ............................. <"recycler_prize_category_">
  [214] getlocal 9 .............................. <tID>
  [216] joinstr ................................. <"recycler_prize_category_" & tID>
  [217] pusharglist 1 ........................... <"recycler_prize_category_" & tID>
  [219] extcall 158 ............................. <getText("recycler_prize_category_" & tID)>
  [221] setlocal 10 ............................. tTitle = getText("recycler_prize_category_" & tID)
  [223] getprop 1100 ............................ <pWriter>
  [226] getlocal 10 ............................. <tTitle>
  [228] pusharglist 2 ........................... <pWriter, tTitle>
  [230] objcall 735 ............................. <pWriter.render(tTitle)>
  [233] pusharglist 1 ........................... <pWriter.render(tTitle)>
  [235] objcall 107 ............................. <pWriter.render(tTitle).duplicate()>
  [237] setlocal 11 ............................. tTitleImage = pWriter.render(tTitle).duplicate()
  [239] pushzero ................................ <0>
  [240] getlocal 6 .............................. <tOffsetY>
  [242] getlocal 11 ............................. <tTitleImage>
  [244] getobjprop 33 ........................... <tTitleImage.width>
  [246] getlocal 6 .............................. <tOffsetY>
  [248] getlocal 11 ............................. <tTitleImage>
  [250] getobjprop 34 ........................... <tTitleImage.height>
  [252] add ..................................... <tOffsetY + tTitleImage.height>
  [253] pusharglist 4 ........................... <0, tOffsetY, tTitleImage.width, tOffsetY + tTitleImage.height>
  [255] extcall 69 .............................. <rect(0, tOffsetY, tTitleImage.width, tOffsetY + tTitleImage.height)>
  [257] setlocal 12 ............................. tTargetRect = rect(0, tOffsetY, tTitleImage.width, tOffsetY + tTitleImage.height)
  [259] getprop 1105 ............................ <pStripBg>
  [262] getlocal 11 ............................. <tTitleImage>
  [264] getlocal 12 ............................. <tTargetRect>
  [266] getlocal 11 ............................. <tTitleImage>
  [268] getobjprop 69 ........................... <tTitleImage.rect>
  [270] pusharglistnoret 4 ...................... <pStripBg, tTitleImage, tTargetRect, tTitleImage.rect>
  [272] objcall 77 .............................. pStripBg.copyPixels(tTitleImage, tTargetRect, tTitleImage.rect)
  [274] getlocal 6 .............................. <tOffsetY>
  [276] getlocal 11 ............................. <tTitleImage>
  [278] getobjprop 34 ........................... <tTitleImage.height>
  [280] add ..................................... <tOffsetY + tTitleImage.height>
  [281] getlocal 5 .............................. <tTitleMargin>
  [283] add ..................................... <tOffsetY + tTitleImage.height + tTitleMargin>
  [284] setlocal 6 .............................. tOffsetY = tOffsetY + tTitleImage.height + tTitleMargin
  [286] pushint8 1 .............................. <1>
  [288] setlocal 13 ............................. tRowCount = 1
  [290] pushzero ................................ <0>
  [291] setlocal 14 ............................. tOffsetX = 0
  [293] pushint8 1 .............................. <1>
  [295] setlocal 15
  [297] getlocal 15
  [299] getlocal 8 .............................. <tFurniList>
  [301] getobjprop 48 ........................... <tFurniList.count>
  [303] lteq
  [304] jmpifz [416] ............................ repeat with j = 1 to tFurniList.count
  [307] getlocal 14 ............................. <tOffsetX>
  [309] getlocal 3 .............................. <tSlotBg>
  [311] getobjprop 33 ........................... <tSlotBg.width>
  [313] add ..................................... <tOffsetX + tSlotBg.width>
  [314] getlocal 1 .............................. <tStripWidth>
  [316] gt ...................................... <(tOffsetX + tSlotBg.width) > tStripWidth>
  [317] jmpifz [332] ............................ if (tOffsetX + tSlotBg.width) > tStripWidth then
  [320] pushzero ................................ <0>
  [321] setlocal 14 ............................. tOffsetX = 0
  [323] getlocal 6 .............................. <tOffsetY>
  [325] getlocal 3 .............................. <tSlotBg>
  [327] getobjprop 34 ........................... <tSlotBg.height>
  [329] add ..................................... <tOffsetY + tSlotBg.height>
  [330] setlocal 6 .............................. tOffsetY = tOffsetY + tSlotBg.height
  [332] getlocal 14 ............................. <tOffsetX>
  [334] getlocal 6 .............................. <tOffsetY>
  [336] getlocal 14 ............................. <tOffsetX>
  [338] getlocal 3 .............................. <tSlotBg>
  [340] getobjprop 33 ........................... <tSlotBg.width>
  [342] add ..................................... <tOffsetX + tSlotBg.width>
  [343] getlocal 6 .............................. <tOffsetY>
  [345] getlocal 3 .............................. <tSlotBg>
  [347] getobjprop 34 ........................... <tSlotBg.height>
  [349] add ..................................... <tOffsetY + tSlotBg.height>
  [350] pusharglist 4 ........................... <tOffsetX, tOffsetY, tOffsetX + tSlotBg.width, tOffsetY + tSlotBg.height>
  [352] extcall 69 .............................. <rect(tOffsetX, tOffsetY, tOffsetX + tSlotBg.width, tOffsetY + tSlotBg.height)>
  [354] setlocal 12 ............................. tTargetRect = rect(tOffsetX, tOffsetY, tOffsetX + tSlotBg.width, tOffsetY + tSlotBg.height)
  [356] getprop 1105 ............................ <pStripBg>
  [359] getlocal 3 .............................. <tSlotBg>
  [361] getlocal 12 ............................. <tTargetRect>
  [363] getlocal 3 .............................. <tSlotBg>
  [365] getobjprop 69 ........................... <tSlotBg.rect>
  [367] pusharglistnoret 4 ...................... <pStripBg, tSlotBg, tTargetRect, tSlotBg.rect>
  [369] objcall 77 .............................. pStripBg.copyPixels(tSlotBg, tTargetRect, tSlotBg.rect)
  [371] getparam 0 .............................. <me>
  [373] getprop 1102 ............................ <pPrizes>
  [376] getlocal 7 .............................. <i>
  [378] pusharglist 2 ........................... <pPrizes, i>
  [380] objcall 41 .............................. <pPrizes[i]>
  [382] pushsymb 267 ............................ <#id>
  [385] pusharglist 2 ........................... <pPrizes[i], #id>
  [387] objcall 41 .............................. <pPrizes[i][#id]>
  [389] getlocal 15 ............................. <j>
  [391] getlocal 12 ............................. <tTargetRect>
  [393] pusharglistnoret 4 ...................... <me, pPrizes[i][#id], j, tTargetRect>
  [395] objcall 1093 ............................ me.setSlotRect(pPrizes[i][#id], j, tTargetRect)
  [398] getlocal 14 ............................. <tOffsetX>
  [400] getlocal 3 .............................. <tSlotBg>
  [402] getobjprop 33 ........................... <tSlotBg.width>
  [404] add ..................................... <tOffsetX + tSlotBg.width>
  [405] setlocal 14 ............................. tOffsetX = tOffsetX + tSlotBg.width
  [407] pushint8 1
  [409] getlocal 15
  [411] add
  [412] setlocal 15
  [414] endrepeat [297]
  [416] getlocal 6 .............................. <tOffsetY>
  [418] getlocal 3 .............................. <tSlotBg>
  [420] getobjprop 34 ........................... <tSlotBg.height>
  [422] add ..................................... <tOffsetY + tSlotBg.height>
  [423] getlocal 5 .............................. <tTitleMargin>
  [425] add ..................................... <tOffsetY + tSlotBg.height + tTitleMargin>
  [426] setlocal 6 .............................. tOffsetY = tOffsetY + tSlotBg.height + tTitleMargin
  [428] pushint8 1
  [430] getlocal 7
  [432] add
  [433] setlocal 7
  [435] endrepeat [139]
  [438] getprop 1105 ............................ <pStripBg>
  [441] pushzero ................................ <0>
  [442] pushzero ................................ <0>
  [443] getlocal 1 .............................. <tStripWidth>
  [445] getlocal 6 .............................. <tOffsetY>
  [447] pusharglist 4 ........................... <0, 0, tStripWidth, tOffsetY>
  [449] extcall 69 .............................. <rect(0, 0, tStripWidth, tOffsetY)>
  [451] pusharglist 2 ........................... <pStripBg, rect(0, 0, tStripWidth, tOffsetY)>
  [453] objcall 1110 ............................ <pStripBg.crop(rect(0, 0, tStripWidth, tOffsetY))>
  [456] setprop 1105 ............................ pStripBg = pStripBg.crop(rect(0, 0, tStripWidth, tOffsetY))
  [459] getparam 0 .............................. <me>
  [461] getprop 1105 ............................ <pStripBg>
  [464] pushcons 11 ............................. <"ctlg_productstrip">
  [466] pusharglistnoret 3 ...................... <me, pStripBg, "ctlg_productstrip">
  [468] objcall 1095 ............................ me.setImage(pStripBg, "ctlg_productstrip")
  [471] getparam 0 .............................. <me>
  [473] pusharglistnoret 1 ...................... <me>
  [475] objcall 1096 ............................ me.updateStripScroll()
  [478] ret
end

on setSlotRect me, tCategoryId, tItem, tRect
  [  0] getprop 1097 ............................ <pSlotRects>
  [  3] getparam 1 .............................. <tCategoryId>
  [  5] pusharglist 2 ........................... <pSlotRects, tCategoryId>
  [  7] objcall 102 ............................. <pSlotRects.getaProp(tCategoryId)>
  [  9] setlocal 0 .............................. tCategory = pSlotRects.getaProp(tCategoryId)
  [ 11] getlocal 0 .............................. <tCategory>
  [ 13] pusharglist 1 ........................... <tCategory>
  [ 15] extcall 78 .............................. <voidp(tCategory)>
  [ 17] jmpifz [ 25] ............................ if voidp(tCategory) then
  [ 20] pusharglist 0 ........................... <[]>
  [ 22] pushlist ................................ <[]>
  [ 23] setlocal 0 .............................. tCategory = []
  [ 25] getlocal 0 .............................. <tCategory>
  [ 27] getparam 2 .............................. <tItem>
  [ 29] getparam 3 .............................. <tRect>
  [ 31] pusharglistnoret 3 ...................... <tCategory, tItem, tRect>
  [ 33] objcall 254 ............................. tCategory[tItem] = tRect
  [ 35] getprop 1097 ............................ <pSlotRects>
  [ 38] getparam 1 .............................. <tCategoryId>
  [ 40] getlocal 0 .............................. <tCategory>
  [ 42] pusharglistnoret 3 ...................... <pSlotRects, tCategoryId, tCategory>
  [ 44] objcall 321 ............................. pSlotRects.setaProp(tCategoryId, tCategory)
  [ 47] ret
end

on getSlotRect me, tCategoryId, tIndex
  [  0] getprop 1097 ............................ <pSlotRects>
  [  3] getobjprop 43 ........................... <pSlotRects.ilk>
  [  5] pushsymb 45 ............................. <#propList>
  [  7] nteq .................................... <pSlotRects.ilk <> #propList>
  [  8] jmpifz [ 16] ............................ if pSlotRects.ilk <> #propList then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 37 .............................. return 0
  [ 16] getprop 1097 ............................ <pSlotRects>
  [ 19] getparam 1 .............................. <tCategoryId>
  [ 21] pusharglist 2 ........................... <pSlotRects, tCategoryId>
  [ 23] objcall 102 ............................. <pSlotRects.getaProp(tCategoryId)>
  [ 25] setlocal 0 .............................. tCategory = pSlotRects.getaProp(tCategoryId)
  [ 27] getlocal 0 .............................. <tCategory>
  [ 29] pusharglist 1 ........................... <tCategory>
  [ 31] extcall 349 ............................. <listp(tCategory)>
  [ 34] not ..................................... <not listp(tCategory)>
  [ 35] jmpifz [ 43] ............................ if not listp(tCategory) then
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 1 ...................... <0>
  [ 41] extcall 37 .............................. return 0
  [ 43] getparam 2 .............................. <tIndex>
  [ 45] pushint8 1 .............................. <1>
  [ 47] lt ...................................... <tIndex < 1>
  [ 48] getparam 2 .............................. <tIndex>
  [ 50] getlocal 0 .............................. <tCategory>
  [ 52] getobjprop 48 ........................... <tCategory.count>
  [ 54] gt ...................................... <tIndex > tCategory.count>
  [ 55] or ...................................... <(tIndex < 1) or (tIndex > tCategory.count)>
  [ 56] jmpifz [ 64] ............................ if (tIndex < 1) or (tIndex > tCategory.count) then
  [ 59] pushzero ................................ <0>
  [ 60] pusharglistnoret 1 ...................... <0>
  [ 62] extcall 37 .............................. return 0
  [ 64] getlocal 0 .............................. <tCategory>
  [ 66] getparam 2 .............................. <tIndex>
  [ 68] pusharglist 2 ........................... <tCategory, tIndex>
  [ 70] objcall 41 .............................. <tCategory[tIndex]>
  [ 72] pusharglistnoret 1 ...................... <tCategory[tIndex]>
  [ 74] extcall 37 .............................. return tCategory[tIndex]
  [ 76] ret
end

on setImage me, tImage, tElemID
  [  0] getprop 150 ............................. <pWndObj>
  [  2] pusharglist 1 ........................... <pWndObj>
  [  4] extcall 78 .............................. <voidp(pWndObj)>
  [  6] jmpifz [ 14] ............................ if voidp(pWndObj) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 37 .............................. return 0
  [ 14] getprop 150 ............................. <pWndObj>
  [ 16] getparam 2 .............................. <tElemID>
  [ 18] pusharglist 2 ........................... <pWndObj, tElemID>
  [ 20] objcall 253 ............................. <pWndObj.elementExists(tElemID)>
  [ 22] not ..................................... <not pWndObj.elementExists(tElemID)>
  [ 23] jmpifz [ 31] ............................ if not pWndObj.elementExists(tElemID) then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 37 .............................. return 0
  [ 31] getprop 150 ............................. <pWndObj>
  [ 33] getparam 2 .............................. <tElemID>
  [ 35] pusharglist 2 ........................... <pWndObj, tElemID>
  [ 37] objcall 178 ............................. <pWndObj.getElement(tElemID)>
  [ 39] setlocal 0 .............................. tElem = pWndObj.getElement(tElemID)
  [ 41] getlocal 0 .............................. <tElem>
  [ 43] getparam 1 .............................. <tImage>
  [ 45] pusharglistnoret 2 ...................... <tElem, tImage>
  [ 47] objcall 118 ............................. tElem.feedImage(tImage)
  [ 49] ret
end

on updateStripScroll me
  [  0] getprop 150 ............................. <pWndObj>
  [  2] pusharglist 1 ........................... <pWndObj>
  [  4] extcall 78 .............................. <voidp(pWndObj)>
  [  6] jmpifz [ 14] ............................ if voidp(pWndObj) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 37 .............................. return 0
  [ 14] getprop 150 ............................. <pWndObj>
  [ 16] pushcons 11 ............................. <"ctlg_productstrip">
  [ 18] pusharglist 2 ........................... <pWndObj, "ctlg_productstrip">
  [ 20] objcall 178 ............................. <pWndObj.getElement("ctlg_productstrip")>
  [ 22] setlocal 0 .............................. tStrip = pWndObj.getElement("ctlg_productstrip")
  [ 24] getlocal 0 .............................. <tStrip>
  [ 26] not ..................................... <not tStrip>
  [ 27] jmpifz [ 35] ............................ if not tStrip then
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 37 .............................. return 0
  [ 35] getprop 150 ............................. <pWndObj>
  [ 37] pushcons 17 ............................. <"ctlg_products_scroll">
  [ 39] pusharglist 2 ........................... <pWndObj, "ctlg_products_scroll">
  [ 41] objcall 178 ............................. <pWndObj.getElement("ctlg_products_scroll")>
  [ 43] setlocal 1 .............................. tScroll = pWndObj.getElement("ctlg_products_scroll")
  [ 45] getlocal 1 .............................. <tScroll>
  [ 47] not ..................................... <not tScroll>
  [ 48] jmpifz [ 56] ............................ if not tScroll then
  [ 51] pushzero ................................ <0>
  [ 52] pusharglistnoret 1 ...................... <0>
  [ 54] extcall 37 .............................. return 0
  [ 56] getprop 1105 ............................ <pStripBg>
  [ 59] getobjprop 43 ........................... <pStripBg.ilk>
  [ 61] pushsymb 17 ............................. <#image>
  [ 63] nteq .................................... <pStripBg.ilk <> #image>
  [ 64] jmpifz [ 72] ............................ if pStripBg.ilk <> #image then
  [ 67] pushzero ................................ <0>
  [ 68] pusharglistnoret 1 ...................... <0>
  [ 70] extcall 37 .............................. return 0
  [ 72] getprop 1105 ............................ <pStripBg>
  [ 75] getobjprop 34 ........................... <pStripBg.height>
  [ 77] getlocal 0 .............................. <tStrip>
  [ 79] pushsymb 34 ............................. <#height>
  [ 81] pusharglist 2 ........................... <tStrip, #height>
  [ 83] objcall 120 ............................. <tStrip.getProperty(#height)>
  [ 85] gt ...................................... <pStripBg.height > tStrip.getProperty(#height)>
  [ 86] setlocal 2 .............................. tShowScroll = pStripBg.height > tStrip.getProperty(#height)
  [ 88] getlocal 1 .............................. <tScroll>
  [ 90] pushsymb 624 ............................ <#visible>
  [ 93] getlocal 2 .............................. <tShowScroll>
  [ 95] pusharglistnoret 3 ...................... <tScroll, #visible, tShowScroll>
  [ 97] objcall 201 ............................. tScroll.setProperty(#visible, tShowScroll)
  [ 99] ret
end

on mergeWindow me, tParentWndObj
  [  0] pushcons 18 ............................. <"ctlg_">
  [  2] getparam 0 .............................. <me>
  [  4] pushsymb 528 ............................ <#pPageData>
  [  7] pushsymb 242 ............................ <#layout>
  [  9] pusharglist 3 ........................... <me, #pPageData, #layout>
  [ 11] objcall 123 ............................. <me.pPageData[#layout]>
  [ 13] joinstr ................................. <"ctlg_" & me.pPageData[#layout]>
  [ 14] pushcons 19 ............................. <".window">
  [ 16] joinstr ................................. <"ctlg_" & me.pPageData[#layout] & ".window">
  [ 17] setlocal 0 .............................. tLayoutMember = "ctlg_" & me.pPageData[#layout] & ".window"
  [ 19] getlocal 0 .............................. <tLayoutMember>
  [ 21] pusharglist 1 ........................... <tLayoutMember>
  [ 23] extcall 63 .............................. <memberExists(tLayoutMember)>
  [ 25] not ..................................... <not memberExists(tLayoutMember)>
  [ 26] jmpifz [ 49] ............................ if not memberExists(tLayoutMember) then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushcons 20 ............................. <"Layout member ">
  [ 33] getlocal 0 .............................. <tLayoutMember>
  [ 35] joinstr ................................. <"Layout member " & tLayoutMember>
  [ 36] pushcons 21 ............................. <" missing.">
  [ 38] joinstr ................................. <"Layout member " & tLayoutMember & " missing.">
  [ 39] pushsymb 244 ............................ <#mergeWindow>
  [ 41] pusharglist 3 ........................... <me, "Layout member " & tLayoutMember & " missing.", #mergeWindow>
  [ 43] extcall 46 .............................. <error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)>
  [ 45] pusharglistnoret 1 ...................... <error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)>
  [ 47] extcall 37 .............................. return error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)
  [ 49] getparam 1 .............................. <tParentWndObj>
  [ 51] getlocal 0 .............................. <tLayoutMember>
  [ 53] pusharglistnoret 2 ...................... <tParentWndObj, tLayoutMember>
  [ 55] objcall 195 ............................. tParentWndObj.merge(tLayoutMember)
  [ 57] getparam 1 .............................. <tParentWndObj>
  [ 59] setprop 150 ............................. pWndObj = tParentWndObj
  [ 61] getparam 0 .............................. <me>
  [ 63] pushsymb 528 ............................ <#pPageData>
  [ 66] pushsymb 412 ............................ <#localization>
  [ 69] pusharglist 3 ........................... <me, #pPageData, #localization>
  [ 71] objcall 566 ............................. <me.pPageData[#localization]>
  [ 74] pushsymb 414 ............................ <#texts>
  [ 77] pusharglist 2 ........................... <me.pPageData[#localization], #texts>
  [ 79] objcall 41 .............................. <me.pPageData[#localization][#texts]>
  [ 81] setlocal 1 .............................. tTextFields = me.pPageData[#localization][#texts]
  [ 83] pushint8 1 .............................. <1>
  [ 85] setlocal 2
  [ 87] getlocal 2
  [ 89] getlocal 1 .............................. <tTextFields>
  [ 91] getobjprop 48 ........................... <tTextFields.count>
  [ 93] lteq
  [ 94] jmpifz [143] ............................ repeat with i = 1 to tTextFields.count
  [ 97] getprop 562 ............................. <pTextElements>
  [100] getobjprop 48 ........................... <pTextElements.count>
  [102] getlocal 2 .............................. <i>
  [104] gteq .................................... <pTextElements.count >= i>
  [105] jmpifz [134] ............................ if pTextElements.count >= i then
  [108] getparam 0 .............................. <me>
  [110] getprop 150 ............................. <pWndObj>
  [112] getprop 562 ............................. <pTextElements>
  [115] getlocal 2 .............................. <i>
  [117] pusharglist 2 ........................... <pTextElements, i>
  [119] objcall 41 .............................. <pTextElements[i]>
  [121] getlocal 1 .............................. <tTextFields>
  [123] getlocal 2 .............................. <i>
  [125] pusharglist 2 ........................... <tTextFields, i>
  [127] objcall 41 .............................. <tTextFields[i]>
  [129] pusharglistnoret 4 ...................... <me, pWndObj, pTextElements[i], tTextFields[i]>
  [131] objcall 525 ............................. me.setElementText(pWndObj, pTextElements[i], tTextFields[i])
  [134] pushint8 1
  [136] getlocal 2
  [138] add
  [139] setlocal 2
  [141] endrepeat [ 87]
  [143] getparam 0 .............................. <me>
  [145] pushsymb 528 ............................ <#pPageData>
  [148] pushsymb 412 ............................ <#localization>
  [151] pusharglist 3 ........................... <me, #pPageData, #localization>
  [153] objcall 566 ............................. <me.pPageData[#localization]>
  [156] pushsymb 413 ............................ <#images>
  [159] pusharglist 2 ........................... <me.pPageData[#localization], #images>
  [161] objcall 41 .............................. <me.pPageData[#localization][#images]>
  [163] setlocal 3 .............................. tBitmaps = me.pPageData[#localization][#images]
  [165] pusharglist 0 ........................... <[]>
  [167] pushlist ................................ <[]>
  [168] setlocal 4 .............................. tObjectLoadList = []
  [170] pushint8 1 .............................. <1>
  [172] setlocal 2
  [174] getlocal 2
  [176] getlocal 3 .............................. <tBitmaps>
  [178] getobjprop 48 ........................... <tBitmaps.count>
  [180] lteq
  [181] jmpifz [343] ............................ repeat with i = 1 to tBitmaps.count
  [184] getprop 561 ............................. <pImageElements>
  [187] getobjprop 48 ........................... <pImageElements.count>
  [189] getlocal 2 .............................. <i>
  [191] gteq .................................... <pImageElements.count >= i>
  [192] jmpifz [334] ............................ if pImageElements.count >= i then
  [195] getlocal 3 .............................. <tBitmaps>
  [197] getlocal 2 .............................. <i>
  [199] pusharglist 2 ........................... <tBitmaps, i>
  [201] objcall 41 .............................. <tBitmaps[i]>
  [203] setlocal 5 .............................. tBitmap = tBitmaps[i]
  [205] getparam 1 .............................. <tParentWndObj>
  [207] getprop 561 ............................. <pImageElements>
  [210] getlocal 2 .............................. <i>
  [212] pusharglist 2 ........................... <pImageElements, i>
  [214] objcall 41 .............................. <pImageElements[i]>
  [216] pusharglist 2 ........................... <tParentWndObj, pImageElements[i]>
  [218] objcall 253 ............................. <tParentWndObj.elementExists(pImageElements[i])>
  [220] getlocal 5 .............................. <tBitmap>
  [222] getobjprop 567 .......................... <tBitmap.length>
  [225] pushint8 1 .............................. <1>
  [227] gt ...................................... <tBitmap.length > 1>
  [228] and ..................................... <tParentWndObj.elementExists(pImageElements[i]) and (tBitmap.length > 1)>
  [229] jmpifz [334] ............................ if tParentWndObj.elementExists(pImageElements[i]) and (tBitmap.length > 1) then
  [232] getlocal 5 .............................. <tBitmap>
  [234] pusharglist 1 ........................... <tBitmap>
  [236] extcall 63 .............................. <memberExists(tBitmap)>
  [238] jmpifz [274] ............................ if memberExists(tBitmap) then
  [241] getparam 0 .............................. <me>
  [243] getlocal 5 .............................. <tBitmap>
  [245] pusharglist 1 ........................... <tBitmap>
  [247] extcall 21 .............................. <getMember(tBitmap)>
  [249] getobjprop 17 ........................... <getMember(tBitmap).image>
  [251] getparam 1 .............................. <tParentWndObj>
  [253] getprop 561 ............................. <pImageElements>
  [256] getlocal 2 .............................. <i>
  [258] pusharglist 2 ........................... <pImageElements, i>
  [260] objcall 41 .............................. <pImageElements[i]>
  [262] pusharglist 2 ........................... <tParentWndObj, pImageElements[i]>
  [264] objcall 178 ............................. <tParentWndObj.getElement(pImageElements[i])>
  [266] pusharglistnoret 3 ...................... <me, getMember(tBitmap).image, tParentWndObj.getElement(pImageElements[i])>
  [268] objcall 524 ............................. me.centerBlitImageToElement(getMember(tBitmap).image, tParentWndObj.getElement(pImageElements[i]))
  [271] jmp [334] ............................... next repeat
  [274] getlocal 4 .............................. <tObjectLoadList>
  [276] pushsymb 473 ............................ <#assetId>
  [279] getlocal 5 .............................. <tBitmap>
  [281] pushsymb 399 ............................ <#type>
  [284] pushsymb 474 ............................ <#bitmap>
  [287] pushsymb 100 ............................ <#props>
  [289] pushsymb 101 ............................ <#imagedownload>
  [291] pushint8 1 .............................. <1>
  [293] pushsymb 568 ............................ <#element>
  [296] getprop 561 ............................. <pImageElements>
  [299] getlocal 2 .............................. <i>
  [301] pusharglist 2 ........................... <pImageElements, i>
  [303] objcall 41 .............................. <pImageElements[i]>
  [305] pushsymb 473 ............................ <#assetId>
  [308] getlocal 5 .............................. <tBitmap>
  [310] pushsymb 103 ............................ <#pageid>
  [312] getparam 0 .............................. <me>
  [314] pushsymb 528 ............................ <#pPageData>
  [317] pushsymb 103 ............................ <#pageid>
  [319] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [321] objcall 123 ............................. <me.pPageData[#pageid]>
  [323] pusharglist 8 ........................... <[#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]>
  [325] pushproplist ............................ <[#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]>
  [326] pusharglist 6 ........................... <[#assetId: tBitmap, #type: #bitmap, #props: [#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]]>
  [328] pushproplist ............................ <[#assetId: tBitmap, #type: #bitmap, #props: [#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]]>
  [329] pusharglistnoret 2 ...................... <tObjectLoadList, [#assetId: tBitmap, #type: #bitmap, #props: [#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]]>
  [331] objcall 339 ............................. tObjectLoadList.add([#assetId: tBitmap, #type: #bitmap, #props: [#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]])
  [334] pushint8 1
  [336] getlocal 2
  [338] add
  [339] setlocal 2
  [341] endrepeat [174]
  [343] getlocal 4 .............................. <tObjectLoadList>
  [345] getobjprop 48 ........................... <tObjectLoadList.count>
  [347] pushzero ................................ <0>
  [348] gt ...................................... <tObjectLoadList.count > 0>
  [349] jmpifz [433] ............................ if tObjectLoadList.count > 0 then
  [352] getprop 313 ............................. <pPageItemDownloader>
  [355] getparam 0 .............................. <me>
  [357] pushsymb 10 ............................. <#downloadCompleted>
  [359] pusharglistnoret 3 ...................... <pPageItemDownloader, me, #downloadCompleted>
  [361] objcall 452 ............................. pPageItemDownloader.defineCallback(me, #downloadCompleted)
  [364] getlocal 4 .............................. <tObjectLoadList>
  [366] peek 0
  [368] pusharglist 1
  [370] extcall 48
  [372] pushint8 1
  [374] peek 0
  [376] peek 2
  [378] lteq
  [379] jmpifz [431] ............................ repeat with tLoadObject in tObjectLoadList
  [382] peek 2
  [384] peek 1
  [386] pusharglist 2
  [388] extcall 41
  [390] setlocal 6
  [392] getprop 313 ............................. <pPageItemDownloader>
  [395] getlocal 6 .............................. <tLoadObject>
  [397] pushsymb 399 ............................ <#type>
  [400] pusharglist 2 ........................... <tLoadObject, #type>
  [402] objcall 41 .............................. <tLoadObject[#type]>
  [404] getlocal 6 .............................. <tLoadObject>
  [406] pushsymb 473 ............................ <#assetId>
  [409] pusharglist 2 ........................... <tLoadObject, #assetId>
  [411] objcall 41 .............................. <tLoadObject[#assetId]>
  [413] getlocal 6 .............................. <tLoadObject>
  [415] pushsymb 100 ............................ <#props>
  [417] pusharglist 2 ........................... <tLoadObject, #props>
  [419] objcall 41 .............................. <tLoadObject[#props]>
  [421] pusharglistnoret 4 ...................... <pPageItemDownloader, tLoadObject[#type], tLoadObject[#assetId], tLoadObject[#props]>
  [423] objcall 455 ............................. pPageItemDownloader.registerDownload(tLoadObject[#type], tLoadObject[#assetId], tLoadObject[#props])
  [426] pushint8 1
  [428] add
  [429] endrepeat [374]
  [431] pop 3
  [433] ret
end

on setElementText me, tWndObj, tElemName, tText
  [  0] getparam 1 .............................. <tWndObj>
  [  2] pusharglist 1 ........................... <tWndObj>
  [  4] extcall 78 .............................. <voidp(tWndObj)>
  [  6] jmpifz [ 14] ............................ if voidp(tWndObj) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 37 .............................. return 0
  [ 14] getparam 1 .............................. <tWndObj>
  [ 16] getparam 2 .............................. <tElemName>
  [ 18] pusharglist 2 ........................... <tWndObj, tElemName>
  [ 20] objcall 253 ............................. <tWndObj.elementExists(tElemName)>
  [ 22] jmpifz [ 42] ............................ if tWndObj.elementExists(tElemName) then / else
  [ 25] getparam 1 .............................. <tWndObj>
  [ 27] getparam 2 .............................. <tElemName>
  [ 29] pusharglist 2 ........................... <tWndObj, tElemName>
  [ 31] objcall 178 ............................. <tWndObj.getElement(tElemName)>
  [ 33] getparam 3 .............................. <tText>
  [ 35] pusharglistnoret 2 ...................... <tWndObj.getElement(tElemName), tText>
  [ 37] objcall 188 ............................. tWndObj.getElement(tElemName).setText(tText)
  [ 39] jmp [ 42]
  [ 42] ret
end

on unmergeWindow me, tParentWndObj
  [  0] pushcons 18 ............................. <"ctlg_">
  [  2] getparam 0 .............................. <me>
  [  4] pushsymb 528 ............................ <#pPageData>
  [  7] pushsymb 242 ............................ <#layout>
  [  9] pusharglist 3 ........................... <me, #pPageData, #layout>
  [ 11] objcall 123 ............................. <me.pPageData[#layout]>
  [ 13] joinstr ................................. <"ctlg_" & me.pPageData[#layout]>
  [ 14] pushcons 19 ............................. <".window">
  [ 16] joinstr ................................. <"ctlg_" & me.pPageData[#layout] & ".window">
  [ 17] setlocal 0 .............................. tLayoutMember = "ctlg_" & me.pPageData[#layout] & ".window"
  [ 19] getlocal 0 .............................. <tLayoutMember>
  [ 21] pusharglist 1 ........................... <tLayoutMember>
  [ 23] extcall 63 .............................. <memberExists(tLayoutMember)>
  [ 25] not ..................................... <not memberExists(tLayoutMember)>
  [ 26] jmpifz [ 49] ............................ if not memberExists(tLayoutMember) then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushcons 20 ............................. <"Layout member ">
  [ 33] getlocal 0 .............................. <tLayoutMember>
  [ 35] joinstr ................................. <"Layout member " & tLayoutMember>
  [ 36] pushcons 21 ............................. <" missing.">
  [ 38] joinstr ................................. <"Layout member " & tLayoutMember & " missing.">
  [ 39] pushsymb 244 ............................ <#mergeWindow>
  [ 41] pusharglist 3 ........................... <me, "Layout member " & tLayoutMember & " missing.", #mergeWindow>
  [ 43] extcall 46 .............................. <error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)>
  [ 45] pusharglistnoret 1 ...................... <error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)>
  [ 47] extcall 37 .............................. return error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)
  [ 49] getparam 1 .............................. <tParentWndObj>
  [ 51] pusharglistnoret 1 ...................... <tParentWndObj>
  [ 53] objcall 576 ............................. tParentWndObj.unmerge()
  [ 56] ret
end

on showPreview me, tCategory, tItem
  [  0] getprop 150 ............................. <pWndObj>
  [  2] pusharglist 1 ........................... <pWndObj>
  [  4] extcall 78 .............................. <voidp(pWndObj)>
  [  6] jmpifz [ 26] ............................ if voidp(pWndObj) then
  [  9] getparam 0 .............................. <me>
  [ 11] pushcons 22 ............................. <"Missing handle to window object!">
  [ 13] pushsymb 556 ............................ <#showPreview>
  [ 16] pushsymb 47 ............................. <#major>
  [ 18] pusharglist 4 ........................... <me, "Missing handle to window object!", #showPreview, #major>
  [ 20] extcall 46 .............................. <error(me, "Missing handle to window object!", #showPreview, #major)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Missing handle to window object!", #showPreview, #major)>
  [ 24] extcall 37 .............................. return error(me, "Missing handle to window object!", #showPreview, #major)
  [ 26] getprop 546 ............................. <pPersistentFurniData>
  [ 29] pusharglist 1 ........................... <pPersistentFurniData>
  [ 31] extcall 78 .............................. <voidp(pPersistentFurniData)>
  [ 33] jmpifz [ 55] ............................ if voidp(pPersistentFurniData) then
  [ 36] pushcons 7 .............................. <"dynamicdownloader">
  [ 38] pusharglist 1 ........................... <"dynamicdownloader">
  [ 40] extcall 471 ............................. <getThread("dynamicdownloader")>
  [ 43] pusharglist 1 ........................... <getThread("dynamicdownloader")>
  [ 45] objcall 170 ............................. <getThread("dynamicdownloader").getComponent()>
  [ 47] pusharglist 1 ........................... <getThread("dynamicdownloader").getComponent()>
  [ 49] objcall 564 ............................. <getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()>
  [ 52] setprop 546 ............................. pPersistentFurniData = getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()
  [ 55] getprop 1102 ............................ <pPrizes>
  [ 58] getparam 1 .............................. <tCategory>
  [ 60] pusharglist 2 ........................... <pPrizes, tCategory>
  [ 62] objcall 102 ............................. <pPrizes.getaProp(tCategory)>
  [ 64] setlocal 0 .............................. tCategoryInfo = pPrizes.getaProp(tCategory)
  [ 66] getlocal 0 .............................. <tCategoryInfo>
  [ 68] pushsymb 433 ............................ <#furniList>
  [ 71] pusharglist 2 ........................... <tCategoryInfo, #furniList>
  [ 73] objcall 41 .............................. <tCategoryInfo[#furniList]>
  [ 75] setlocal 1 .............................. tFurniList = tCategoryInfo[#furniList]
  [ 77] getlocal 1 .............................. <tFurniList>
  [ 79] getparam 2 .............................. <tItem>
  [ 81] pusharglist 2 ........................... <tFurniList, tItem>
  [ 83] objcall 41 .............................. <tFurniList[tItem]>
  [ 85] setlocal 2 .............................. tFurni = tFurniList[tItem]
  [ 87] getprop 546 ............................. <pPersistentFurniData>
  [ 90] getlocal 2 .............................. <tFurni>
  [ 92] pushint8 1 .............................. <1>
  [ 94] pusharglist 2 ........................... <tFurni, 1>
  [ 96] objcall 41 .............................. <tFurni[1]>
  [ 98] getlocal 2 .............................. <tFurni>
  [100] pushint8 2 .............................. <2>
  [102] pusharglist 2 ........................... <tFurni, 2>
  [104] objcall 41 .............................. <tFurni[2]>
  [106] pusharglist 3 ........................... <pPersistentFurniData, tFurni[1], tFurni[2]>
  [108] objcall 487 ............................. <pPersistentFurniData.getProps(tFurni[1], tFurni[2])>
  [111] setlocal 3 .............................. tProps = pPersistentFurniData.getProps(tFurni[1], tFurni[2])
  [113] pusharglist 0 ........................... <[:]>
  [115] pushproplist ............................ <[:]>
  [116] setlocal 4 .............................. tPreviewProps = [:]
  [118] getlocal 4 .............................. <tPreviewProps>
  [120] pushcons 23 ............................. <"class">
  [122] getparam 0 .............................. <me>
  [124] getlocal 3 .............................. <tProps>
  [126] pushsymb 268 ............................ <#class>
  [129] pusharglist 2 ........................... <tProps, #class>
  [131] objcall 41 .............................. <tProps[#class]>
  [133] pusharglist 2 ........................... <me, tProps[#class]>
  [135] objcall 1091 ............................ <me.removeColorFromClassName(tProps[#class])>
  [138] pusharglistnoret 3 ...................... <tPreviewProps, "class", me.removeColorFromClassName(tProps[#class])>
  [140] objcall 254 ............................. tPreviewProps["class"] = me.removeColorFromClassName(tProps[#class])
  [142] getlocal 4 .............................. <tPreviewProps>
  [144] pushcons 24 ............................. <"direction">
  [146] pushcons 25 ............................. <EMPTY>
  [148] pusharglistnoret 3 ...................... <tPreviewProps, "direction", EMPTY>
  [150] objcall 254 ............................. tPreviewProps["direction"] = EMPTY
  [152] getlocal 4 .............................. <tPreviewProps>
  [154] pushcons 26 ............................. <"dimensions">
  [156] getlocal 3 .............................. <tProps>
  [158] pushsymb 584 ............................ <#xdim>
  [161] pusharglist 2 ........................... <tProps, #xdim>
  [163] objcall 41 .............................. <tProps[#xdim]>
  [165] pushcons 27 ............................. <",">
  [167] joinstr ................................. <tProps[#xdim] & ",">
  [168] getlocal 3 .............................. <tProps>
  [170] pushsymb 585 ............................ <#ydim>
  [173] pusharglist 2 ........................... <tProps, #ydim>
  [175] objcall 41 .............................. <tProps[#ydim]>
  [177] joinstr ................................. <tProps[#xdim] & "," & tProps[#ydim]>
  [178] pusharglistnoret 3 ...................... <tPreviewProps, "dimensions", tProps[#xdim] & "," & tProps[#ydim]>
  [180] objcall 254 ............................. tPreviewProps["dimensions"] = tProps[#xdim] & "," & tProps[#ydim]
  [182] getlocal 4 .............................. <tPreviewProps>
  [184] pushcons 28 ............................. <"objectType">
  [186] getlocal 3 .............................. <tProps>
  [188] pushsymb 399 ............................ <#type>
  [191] pusharglist 2 ........................... <tProps, #type>
  [193] objcall 41 .............................. <tProps[#type]>
  [195] pusharglistnoret 3 ...................... <tPreviewProps, "objectType", tProps[#type]>
  [197] objcall 254 ............................. tPreviewProps["objectType"] = tProps[#type]
  [199] getlocal 4 .............................. <tPreviewProps>
  [201] pushcons 29 ............................. <"partColors">
  [203] getlocal 3 .............................. <tProps>
  [205] pushsymb 547 ............................ <#partColors>
  [208] pusharglist 2 ........................... <tProps, #partColors>
  [210] objcall 41 .............................. <tProps[#partColors]>
  [212] pusharglistnoret 3 ...................... <tPreviewProps, "partColors", tProps[#partColors]>
  [214] objcall 254 ............................. tPreviewProps["partColors"] = tProps[#partColors]
  [216] getparam 0 .............................. <me>
  [218] getlocal 4 .............................. <tPreviewProps>
  [220] pusharglist 2 ........................... <me, tPreviewProps>
  [222] objcall 519 ............................. <me.renderLargePreviewImage(tPreviewProps)>
  [225] setlocal 5 .............................. tPreviewImage = me.renderLargePreviewImage(tPreviewProps)
  [227] getlocal 5 .............................. <tPreviewImage>
  [229] getobjprop 43 ........................... <tPreviewImage.ilk>
  [231] pushsymb 17 ............................. <#image>
  [233] nteq .................................... <tPreviewImage.ilk <> #image>
  [234] jmpifz [242] ............................ if tPreviewImage.ilk <> #image then
  [237] pushzero ................................ <0>
  [238] pusharglistnoret 1 ...................... <0>
  [240] extcall 37 .............................. return 0
  [242] getprop 150 ............................. <pWndObj>
  [244] getprop 561 ............................. <pImageElements>
  [247] pushint8 2 .............................. <2>
  [249] pusharglist 2 ........................... <pImageElements, 2>
  [251] objcall 41 .............................. <pImageElements[2]>
  [253] pusharglist 2 ........................... <pWndObj, pImageElements[2]>
  [255] objcall 253 ............................. <pWndObj.elementExists(pImageElements[2])>
  [257] jmpifz [284] ............................ if pWndObj.elementExists(pImageElements[2]) then
  [260] getparam 0 .............................. <me>
  [262] getlocal 5 .............................. <tPreviewImage>
  [264] getprop 150 ............................. <pWndObj>
  [266] getprop 561 ............................. <pImageElements>
  [269] pushint8 2 .............................. <2>
  [271] pusharglist 2 ........................... <pImageElements, 2>
  [273] objcall 41 .............................. <pImageElements[2]>
  [275] pusharglist 2 ........................... <pWndObj, pImageElements[2]>
  [277] objcall 178 ............................. <pWndObj.getElement(pImageElements[2])>
  [279] pusharglistnoret 3 ...................... <me, tPreviewImage, pWndObj.getElement(pImageElements[2])>
  [281] objcall 524 ............................. me.centerBlitImageToElement(tPreviewImage, pWndObj.getElement(pImageElements[2]))
  [284] getlocal 3 .............................. <tProps>
  [286] pushsymb 1120 ........................... <#localizedName>
  [289] pusharglist 2 ........................... <tProps, #localizedName>
  [291] objcall 41 .............................. <tProps[#localizedName]>
  [293] setlocal 6 .............................. tFurniName = tProps[#localizedName]
  [295] getprop 1102 ............................ <pPrizes>
  [298] getparam 1 .............................. <tCategory>
  [300] pusharglist 2 ........................... <pPrizes, tCategory>
  [302] objcall 102 ............................. <pPrizes.getaProp(tCategory)>
  [304] setlocal 7 .............................. tCatInfo = pPrizes.getaProp(tCategory)
  [306] getlocal 7 .............................. <tCatInfo>
  [308] pushsymb 432 ............................ <#odds>
  [311] pusharglist 2 ........................... <tCatInfo, #odds>
  [313] objcall 102 ............................. <tCatInfo.getaProp(#odds)>
  [315] setlocal 8 .............................. tOdds = tCatInfo.getaProp(#odds)
  [317] pushcons 30 ............................. <"recycler_prize_odds_">
  [319] getparam 1 .............................. <tCategory>
  [321] joinstr ................................. <"recycler_prize_odds_" & tCategory>
  [322] pusharglist 1 ........................... <"recycler_prize_odds_" & tCategory>
  [324] extcall 158 ............................. <getText("recycler_prize_odds_" & tCategory)>
  [326] setlocal 9 .............................. tOddsText = getText("recycler_prize_odds_" & tCategory)
  [328] getlocal 9 .............................. <tOddsText>
  [330] pushcons 31 ............................. <"%odds%">
  [332] pushcons 32 ............................. <"1:">
  [334] getlocal 8 .............................. <tOdds>
  [336] joinstr ................................. <"1:" & tOdds>
  [337] pusharglist 3 ........................... <tOddsText, "%odds%", "1:" & tOdds>
  [339] extcall 415 ............................. <replaceChunks(tOddsText, "%odds%", "1:" & tOdds)>
  [342] setlocal 9 .............................. tOddsText = replaceChunks(tOddsText, "%odds%", "1:" & tOdds)
  [344] getparam 0 .............................. <me>
  [346] getparam 0 .............................. <me>
  [348] getobjprop 150 .......................... <me.pWndObj>
  [350] pushcons 33 ............................. <"ctlg_description">
  [352] getlocal 9 .............................. <tOddsText>
  [354] pusharglistnoret 4 ...................... <me, me.pWndObj, "ctlg_description", tOddsText>
  [356] objcall 525 ............................. me.setElementText(me.pWndObj, "ctlg_description", tOddsText)
  [359] getparam 0 .............................. <me>
  [361] getparam 0 .............................. <me>
  [363] getobjprop 150 .......................... <me.pWndObj>
  [365] pushcons 34 ............................. <"ctlg_product_name">
  [367] getlocal 6 .............................. <tFurniName>
  [369] pusharglistnoret 4 ...................... <me, me.pWndObj, "ctlg_product_name", tFurniName>
  [371] objcall 525 ............................. me.setElementText(me.pWndObj, "ctlg_product_name", tFurniName)
  [374] ret
end

on downloadCompleted me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 1092 ............................ me.renderStripItems()
  [  7] getparam 1 .............................. <tProps>
  [  9] pushsymb 100 ............................ <#props>
  [ 11] pusharglist 2 ........................... <tProps, #props>
  [ 13] objcall 41 .............................. <tProps[#props]>
  [ 15] pushsymb 103 ............................ <#pageid>
  [ 17] pusharglist 2 ........................... <tProps[#props], #pageid>
  [ 19] objcall 41 .............................. <tProps[#props][#pageid]>
  [ 21] getparam 0 .............................. <me>
  [ 23] pushsymb 528 ............................ <#pPageData>
  [ 26] pushsymb 103 ............................ <#pageid>
  [ 28] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [ 30] objcall 123 ............................. <me.pPageData[#pageid]>
  [ 32] nteq .................................... <tProps[#props][#pageid] <> me.pPageData[#pageid]>
  [ 33] jmpifz [ 40] ............................ if tProps[#props][#pageid] <> me.pPageData[#pageid] then
  [ 36] pusharglistnoret 0 ...................... <>
  [ 38] extcall 37 .............................. return 
  [ 40] getparam 1 .............................. <tProps>
  [ 42] pushsymb 100 ............................ <#props>
  [ 44] pusharglist 2 ........................... <tProps, #props>
  [ 46] objcall 41 .............................. <tProps[#props]>
  [ 48] setlocal 0 .............................. tDlProps = tProps[#props]
  [ 50] getlocal 0 .............................. <tDlProps>
  [ 52] pushsymb 101 ............................ <#imagedownload>
  [ 54] pusharglist 2 ........................... <tDlProps, #imagedownload>
  [ 56] objcall 102 ............................. <tDlProps.getaProp(#imagedownload)>
  [ 58] jmpifz [205] ............................ if tDlProps.getaProp(#imagedownload) then / else
  [ 61] getprop 150 ............................. <pWndObj>
  [ 63] pusharglist 1 ........................... <pWndObj>
  [ 65] extcall 78 .............................. <voidp(pWndObj)>
  [ 67] jmpifz [ 88] ............................ if voidp(pWndObj) then
  [ 70] pushcons 35 ............................. <RETURN>
  [ 72] getparam 0 .............................. <me>
  [ 74] pushcons 22 ............................. <"Missing handle to window object!">
  [ 76] pushsymb 10 ............................. <#downloadCompleted>
  [ 78] pushsymb 47 ............................. <#major>
  [ 80] pusharglist 4 ........................... <me, "Missing handle to window object!", #downloadCompleted, #major>
  [ 82] extcall 46 .............................. <error(me, "Missing handle to window object!", #downloadCompleted, #major)>
  [ 84] pusharglistnoret 2 ...................... <RETURN, error(me, "Missing handle to window object!", #downloadCompleted, #major)>
  [ 86] extcall 37 .............................. return RETURN, error(me, "Missing handle to window object!", #downloadCompleted, #major)
  [ 88] getprop 150 ............................. <pWndObj>
  [ 90] getlocal 0 .............................. <tDlProps>
  [ 92] pushsymb 568 ............................ <#element>
  [ 95] pusharglist 2 ........................... <tDlProps, #element>
  [ 97] objcall 41 .............................. <tDlProps[#element]>
  [ 99] pusharglist 2 ........................... <pWndObj, tDlProps[#element]>
  [101] objcall 253 ............................. <pWndObj.elementExists(tDlProps[#element])>
  [103] not ..................................... <not pWndObj.elementExists(tDlProps[#element])>
  [104] jmpifz [133] ............................ if not pWndObj.elementExists(tDlProps[#element]) then
  [107] getparam 0 .............................. <me>
  [109] pushcons 36 ............................. <"Missing target element ">
  [111] getlocal 0 .............................. <tDlProps>
  [113] pushsymb 568 ............................ <#element>
  [116] pusharglist 2 ........................... <tDlProps, #element>
  [118] objcall 41 .............................. <tDlProps[#element]>
  [120] joinstr ................................. <"Missing target element " & tDlProps[#element]>
  [121] pushsymb 10 ............................. <#downloadCompleted>
  [123] pushsymb 58 ............................. <#minor>
  [125] pusharglist 4 ........................... <me, "Missing target element " & tDlProps[#element], #downloadCompleted, #minor>
  [127] extcall 46 .............................. <error(me, "Missing target element " & tDlProps[#element], #downloadCompleted, #minor)>
  [129] pusharglistnoret 1 ...................... <error(me, "Missing target element " & tDlProps[#element], #downloadCompleted, #minor)>
  [131] extcall 37 .............................. return error(me, "Missing target element " & tDlProps[#element], #downloadCompleted, #minor)
  [133] getparam 1 .............................. <tProps>
  [135] pushsymb 473 ............................ <#assetId>
  [138] pusharglist 2 ........................... <tProps, #assetId>
  [140] objcall 102 ............................. <tProps.getaProp(#assetId)>
  [142] pusharglist 1 ........................... <tProps.getaProp(#assetId)>
  [144] extcall 21 .............................. <getMember(tProps.getaProp(#assetId))>
  [146] setlocal 1 .............................. tmember = getMember(tProps.getaProp(#assetId))
  [148] getlocal 1 .............................. <tmember>
  [150] getobjprop 399 .......................... <tmember.type>
  [153] pushsymb 474 ............................ <#bitmap>
  [156] nteq .................................... <tmember.type <> #bitmap>
  [157] jmpifz [176] ............................ if tmember.type <> #bitmap then
  [160] getparam 0 .............................. <me>
  [162] pushcons 37 ............................. <"Downloaded member was of incorrect type!">
  [164] pushsymb 10 ............................. <#downloadCompleted>
  [166] pushsymb 47 ............................. <#major>
  [168] pusharglist 4 ........................... <me, "Downloaded member was of incorrect type!", #downloadCompleted, #major>
  [170] extcall 46 .............................. <error(me, "Downloaded member was of incorrect type!", #downloadCompleted, #major)>
  [172] pusharglistnoret 1 ...................... <error(me, "Downloaded member was of incorrect type!", #downloadCompleted, #major)>
  [174] extcall 37 .............................. return error(me, "Downloaded member was of incorrect type!", #downloadCompleted, #major)
  [176] getparam 0 .............................. <me>
  [178] getlocal 1 .............................. <tmember>
  [180] getobjprop 17 ........................... <tmember.image>
  [182] getprop 150 ............................. <pWndObj>
  [184] getlocal 0 .............................. <tDlProps>
  [186] pushsymb 568 ............................ <#element>
  [189] pusharglist 2 ........................... <tDlProps, #element>
  [191] objcall 41 .............................. <tDlProps[#element]>
  [193] pusharglist 2 ........................... <pWndObj, tDlProps[#element]>
  [195] objcall 178 ............................. <pWndObj.getElement(tDlProps[#element])>
  [197] pusharglistnoret 3 ...................... <me, tmember.image, pWndObj.getElement(tDlProps[#element])>
  [199] objcall 524 ............................. me.centerBlitImageToElement(tmember.image, pWndObj.getElement(tDlProps[#element]))
  [202] jmp [306]
  [205] getparam 0 .............................. <me>
  [207] pusharglist 1 ........................... <me>
  [209] objcall 143 ............................. <me.getSelectedProduct()>
  [211] setlocal 2 .............................. tSelectedItem = me.getSelectedProduct()
  [213] getlocal 2 .............................. <tSelectedItem>
  [215] pusharglist 1 ........................... <tSelectedItem>
  [217] extcall 78 .............................. <voidp(tSelectedItem)>
  [219] not ..................................... <not voidp(tSelectedItem)>
  [220] jmpifz [306] ............................ if not voidp(tSelectedItem) then
  [223] getprop 546 ............................. <pPersistentFurniData>
  [226] getlocal 2 .............................. <tSelectedItem>
  [228] pushint8 1 .............................. <1>
  [230] pusharglist 2 ........................... <tSelectedItem, 1>
  [232] objcall 344 ............................. <tSelectedItem.getOffer(1)>
  [235] pusharglist 1 ........................... <tSelectedItem.getOffer(1)>
  [237] objcall 61 .............................. <tSelectedItem.getOffer(1).getType()>
  [239] getlocal 2 .............................. <tSelectedItem>
  [241] pushint8 1 .............................. <1>
  [243] pusharglist 2 ........................... <tSelectedItem, 1>
  [245] objcall 344 ............................. <tSelectedItem.getOffer(1)>
  [248] pusharglist 1 ........................... <tSelectedItem.getOffer(1)>
  [250] objcall 62 .............................. <tSelectedItem.getOffer(1).getClassId()>
  [252] pusharglist 3 ........................... <pPersistentFurniData, tSelectedItem.getOffer(1).getType(), tSelectedItem.getOffer(1).getClassId()>
  [254] objcall 487 ............................. <pPersistentFurniData.getProps(tSelectedItem.getOffer(1).getType(), tSelectedItem.getOffer(1).getClassId())>
  [257] setlocal 3 .............................. tFurniProps = pPersistentFurniData.getProps(tSelectedItem.getOffer(1).getType(), tSelectedItem.getOffer(1).getClassId())
  [259] getlocal 3 .............................. <tFurniProps>
  [261] pusharglist 1 ........................... <tFurniProps>
  [263] extcall 78 .............................. <voidp(tFurniProps)>
  [265] not ..................................... <not voidp(tFurniProps)>
  [266] jmpifz [306] ............................ if not voidp(tFurniProps) then
  [269] getparam 1 .............................. <tProps>
  [271] pushsymb 473 ............................ <#assetId>
  [274] pusharglist 2 ........................... <tProps, #assetId>
  [276] objcall 41 .............................. <tProps[#assetId]>
  [278] getparam 0 .............................. <me>
  [280] getlocal 3 .............................. <tFurniProps>
  [282] pushsymb 268 ............................ <#class>
  [285] pusharglist 2 ........................... <tFurniProps, #class>
  [287] objcall 41 .............................. <tFurniProps[#class]>
  [289] pusharglist 2 ........................... <me, tFurniProps[#class]>
  [291] objcall 149 ............................. <me.getClassAsset(tFurniProps[#class])>
  [293] eq ...................................... <tProps[#assetId] = me.getClassAsset(tFurniProps[#class])>
  [294] jmpifz [306] ............................ if tProps[#assetId] = me.getClassAsset(tFurniProps[#class]) then
  [297] getparam 0 .............................. <me>
  [299] getlocal 2 .............................. <tSelectedItem>
  [301] pusharglistnoret 2 ...................... <me, tSelectedItem>
  [303] objcall 556 ............................. me.showPreview(tSelectedItem)
  [306] ret
end

on getSelectedProduct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 55 .............................. <VOID>
  [  4] setlocal 0 .............................. tSelectedItem = VOID
  [  6] getprop 557 ............................. <pProductStrip>
  [  9] pusharglist 1 ........................... <pProductStrip>
  [ 11] extcall 57 .............................. <objectp(pProductStrip)>
  [ 13] jmpifz [ 25] ............................ if objectp(pProductStrip) then
  [ 16] getprop 557 ............................. <pProductStrip>
  [ 19] pusharglist 1 ........................... <pProductStrip>
  [ 21] objcall 14 .............................. <pProductStrip.getSelectedItem()>
  [ 23] setlocal 0 .............................. tSelectedItem = pProductStrip.getSelectedItem()
  [ 25] getlocal 0 .............................. <tSelectedItem>
  [ 27] pusharglistnoret 1 ...................... <tSelectedItem>
  [ 29] extcall 37 .............................. return tSelectedItem
  [ 31] ret
end

on handleClick me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 198 ............................ <#mouseUp>
  [  4] nteq .................................... <tEvent <> #mouseUp>
  [  5] jmpifz [ 13] ............................ if tEvent <> #mouseUp then
  [  8] pushzero ................................ <0>
  [  9] pusharglistnoret 1 ...................... <0>
  [ 11] extcall 37 .............................. return 0
  [ 13] getparam 2 .............................. <tSprID>
  [ 15] pushcons 11 ............................. <"ctlg_productstrip">
  [ 17] nteq .................................... <tSprID <> "ctlg_productstrip">
  [ 18] jmpifz [ 26] ............................ if tSprID <> "ctlg_productstrip" then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 37 .............................. return 0
  [ 26] getparam 3 .............................. <tProp>
  [ 28] pusharglist 1 ........................... <tProp>
  [ 30] extcall 43 .............................. <ilk(tProp)>
  [ 32] pushsymb 32 ............................. <#point>
  [ 34] nteq .................................... <ilk(tProp) <> #point>
  [ 35] jmpifz [ 43] ............................ if ilk(tProp) <> #point then
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 1 ...................... <0>
  [ 41] extcall 37 .............................. return 0
  [ 43] pushint8 1 .............................. <1>
  [ 45] setlocal 0
  [ 47] getlocal 0
  [ 49] getprop 1097 ............................ <pSlotRects>
  [ 52] getobjprop 48 ........................... <pSlotRects.count>
  [ 54] lteq
  [ 55] jmpifz [162] ............................ repeat with i = 1 to pSlotRects.count
  [ 58] getprop 1097 ............................ <pSlotRects>
  [ 61] getlocal 0 .............................. <i>
  [ 63] pusharglist 2 ........................... <pSlotRects, i>
  [ 65] objcall 343 ............................. <pSlotRects.getPropAt(i)>
  [ 68] setlocal 1 .............................. tCategoryId = pSlotRects.getPropAt(i)
  [ 70] getprop 1097 ............................ <pSlotRects>
  [ 73] getlocal 0 .............................. <i>
  [ 75] pusharglist 2 ........................... <pSlotRects, i>
  [ 77] objcall 41 .............................. <pSlotRects[i]>
  [ 79] setlocal 2 .............................. tRects = pSlotRects[i]
  [ 81] pushint8 1 .............................. <1>
  [ 83] setlocal 3
  [ 85] getlocal 3
  [ 87] getlocal 2 .............................. <tRects>
  [ 89] getobjprop 48 ........................... <tRects.count>
  [ 91] lteq
  [ 92] jmpifz [153] ............................ repeat with j = 1 to tRects.count
  [ 95] getlocal 2 .............................. <tRects>
  [ 97] getlocal 3 .............................. <j>
  [ 99] pusharglist 2 ........................... <tRects, j>
  [101] objcall 41 .............................. <tRects[j]>
  [103] setlocal 4 .............................. tRect = tRects[j]
  [105] getlocal 4 .............................. <tRect>
  [107] getobjprop 43 ........................... <tRect.ilk>
  [109] pushsymb 69 ............................. <#rect>
  [111] nteq .................................... <tRect.ilk <> #rect>
  [112] jmpifz [118] ............................ if tRect.ilk <> #rect then
  [115] jmp [144] ............................... next repeat
  [118] getparam 3 .............................. <tProp>
  [120] getlocal 4 .............................. <tRect>
  [122] pusharglist 2 ........................... <tProp, tRect>
  [124] objcall 1128 ............................ <tProp.inside(tRect)>
  [127] jmpifz [144] ............................ if tProp.inside(tRect) then
  [130] getparam 0 .............................. <me>
  [132] getlocal 1 .............................. <tCategoryId>
  [134] getlocal 3 .............................. <j>
  [136] pusharglistnoret 3 ...................... <me, tCategoryId, j>
  [138] objcall 556 ............................. me.showPreview(tCategoryId, j)
  [141] jmp [153] ............................... exit repeat
  [144] pushint8 1
  [146] getlocal 3
  [148] add
  [149] setlocal 3
  [151] endrepeat [ 85]
  [153] pushint8 1
  [155] getlocal 0
  [157] add
  [158] setlocal 0
  [160] endrepeat [ 47]
  [162] ret
end
