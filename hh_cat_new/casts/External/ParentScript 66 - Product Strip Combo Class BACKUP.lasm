property pimage, pSelectedItem, pBgImages, pSpacing, pBgColor, pRefreshTimeoutId, pRotationQuad

on construct me
  [  0] pushsymb 0 .............................. <#construct>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <[me]>
  [  6] pushlist ................................ <[me]>
  [  7] pusharglistnoret 2 ...................... <#construct, [me]>
  [  9] extcall 15 .............................. callAncestor(#construct, [me])
  [ 11] pushzero ................................ <0>
  [ 12] pushzero ................................ <0>
  [ 13] pushint8 32 ............................. <32>
  [ 15] pusharglist 3 ........................... <0, 0, 32>
  [ 17] extcall 17 .............................. <image(0, 0, 32)>
  [ 19] setprop 16 .............................. pimage = image(0, 0, 32)
  [ 21] pushzero ................................ <0>
  [ 22] setprop 18 .............................. pSelectedItem = 0
  [ 24] pushsymb 20 ............................. <#selected>
  [ 26] pushcons 0 .............................. <"productstrip.itembg.selected">
  [ 28] pusharglist 1 ........................... <"productstrip.itembg.selected">
  [ 30] extcall 22 .............................. <getVariable("productstrip.itembg.selected")>
  [ 32] pusharglist 1 ........................... <getVariable("productstrip.itembg.selected")>
  [ 34] extcall 21 .............................. <getMember(getVariable("productstrip.itembg.selected"))>
  [ 36] pushsymb 23 ............................. <#unselected>
  [ 38] pushcons 1 .............................. <"productstrip.itembg.unselected">
  [ 40] pusharglist 1 ........................... <"productstrip.itembg.unselected">
  [ 42] extcall 22 .............................. <getVariable("productstrip.itembg.unselected")>
  [ 44] pusharglist 1 ........................... <getVariable("productstrip.itembg.unselected")>
  [ 46] extcall 21 .............................. <getMember(getVariable("productstrip.itembg.unselected"))>
  [ 48] pusharglist 4 ........................... <[#selected: getMember(getVariable("productstrip.itembg.selected")), #unselected: getMember(getVariable("productstrip.itembg.unselected"))]>
  [ 50] pushproplist ............................ <[#selected: getMember(getVariable("productstrip.itembg.selected")), #unselected: getMember(getVariable("productstrip.itembg.unselected"))]>
  [ 51] setprop 19 .............................. pBgImages = [#selected: getMember(getVariable("productstrip.itembg.selected")), #unselected: getMember(getVariable("productstrip.itembg.unselected"))]
  [ 53] pushcons 2 .............................. <"productstrip.pixelfx.default.item.spacing">
  [ 55] pusharglist 1 ........................... <"productstrip.pixelfx.default.item.spacing">
  [ 57] extcall 25 .............................. <getIntVariable("productstrip.pixelfx.default.item.spacing")>
  [ 59] setprop 24 .............................. pSpacing = getIntVariable("productstrip.pixelfx.default.item.spacing")
  [ 61] pushcons 3 .............................. <"productstrip.default.background.color">
  [ 63] pusharglist 1 ........................... <"productstrip.default.background.color">
  [ 65] extcall 28 .............................. <getStringVariable("productstrip.default.background.color")>
  [ 67] pusharglist 1 ........................... <getStringVariable("productstrip.default.background.color")>
  [ 69] extcall 27 .............................. <rgb(getStringVariable("productstrip.default.background.color"))>
  [ 71] setprop 26 .............................. pBgColor = rgb(getStringVariable("productstrip.default.background.color"))
  [ 73] pusharglist 0 ........................... <>
  [ 75] extcall 30 .............................. <getUniqueID()>
  [ 77] setprop 29 .............................. pRefreshTimeoutId = getUniqueID()
  [ 79] pushcons 4 .............................. <"ctlg_loading_icon2">
  [ 81] pusharglist 1 ........................... <"ctlg_loading_icon2">
  [ 83] extcall 21 .............................. <getMember("ctlg_loading_icon2")>
  [ 85] getobjprop 17 ........................... <getMember("ctlg_loading_icon2").image>
  [ 87] setlocal 0 .............................. tLoadImg = getMember("ctlg_loading_icon2").image
  [ 89] pushzero ................................ <0>
  [ 90] pushzero ................................ <0>
  [ 91] pusharglist 2 ........................... <0, 0>
  [ 93] extcall 32 .............................. <point(0, 0)>
  [ 95] getlocal 0 .............................. <tLoadImg>
  [ 97] getobjprop 33 ........................... <tLoadImg.width>
  [ 99] pushzero ................................ <0>
  [100] pusharglist 2 ........................... <tLoadImg.width, 0>
  [102] extcall 32 .............................. <point(tLoadImg.width, 0)>
  [104] getlocal 0 .............................. <tLoadImg>
  [106] getobjprop 33 ........................... <tLoadImg.width>
  [108] getlocal 0 .............................. <tLoadImg>
  [110] getobjprop 34 ........................... <tLoadImg.height>
  [112] pusharglist 2 ........................... <tLoadImg.width, tLoadImg.height>
  [114] extcall 32 .............................. <point(tLoadImg.width, tLoadImg.height)>
  [116] pushzero ................................ <0>
  [117] getlocal 0 .............................. <tLoadImg>
  [119] getobjprop 34 ........................... <tLoadImg.height>
  [121] pusharglist 2 ........................... <0, tLoadImg.height>
  [123] extcall 32 .............................. <point(0, tLoadImg.height)>
  [125] pusharglist 4 ........................... <[point(0, 0), point(tLoadImg.width, 0), point(tLoadImg.width, tLoadImg.height), point(0, tLoadImg.height)]>
  [127] pushlist ................................ <[point(0, 0), point(tLoadImg.width, 0), point(tLoadImg.width, tLoadImg.height), point(0, tLoadImg.height)]>
  [128] setprop 31 .............................. pRotationQuad = [point(0, 0), point(tLoadImg.width, 0), point(tLoadImg.width, tLoadImg.height), point(0, tLoadImg.height)]
  [130] getparam 0 .............................. <me>
  [132] pushcons 0 .............................. <"productstrip.itembg.selected">
  [134] pusharglist 1 ........................... <"productstrip.itembg.selected">
  [136] extcall 22 .............................. <getVariable("productstrip.itembg.selected")>
  [138] pusharglist 1 ........................... <getVariable("productstrip.itembg.selected")>
  [140] extcall 21 .............................. <getMember(getVariable("productstrip.itembg.selected"))>
  [142] getobjprop 33 ........................... <getMember(getVariable("productstrip.itembg.selected")).width>
  [144] setobjprop 35 ........................... me.pSmallItemWidth = getMember(getVariable("productstrip.itembg.selected")).width
  [146] getparam 0 .............................. <me>
  [148] pushcons 0 .............................. <"productstrip.itembg.selected">
  [150] pusharglist 1 ........................... <"productstrip.itembg.selected">
  [152] extcall 22 .............................. <getVariable("productstrip.itembg.selected")>
  [154] pusharglist 1 ........................... <getVariable("productstrip.itembg.selected")>
  [156] extcall 21 .............................. <getMember(getVariable("productstrip.itembg.selected"))>
  [158] getobjprop 34 ........................... <getMember(getVariable("productstrip.itembg.selected")).height>
  [160] setobjprop 36 ........................... me.pSmallItemHeight = getMember(getVariable("productstrip.itembg.selected")).height
  [162] pushint8 1 .............................. <1>
  [164] pusharglistnoret 1 ...................... <1>
  [166] extcall 37 .............................. return 1
  [168] ret
end

on deconstruct me
  [  0] pushsymb 1 .............................. <#deconstruct>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <[me]>
  [  6] pushlist ................................ <[me]>
  [  7] pusharglist 2 ........................... <#deconstruct, [me]>
  [  9] extcall 15 .............................. <callAncestor(#deconstruct, [me])>
  [ 11] pusharglistnoret 1 ...................... <callAncestor(#deconstruct, [me])>
  [ 13] extcall 37 .............................. return callAncestor(#deconstruct, [me])
  [ 15] ret
end

on setTargetElement me, tElement, tScroll
  [  0] pushsymb 2 .............................. <#setTargetElement>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <[me]>
  [  6] pushlist ................................ <[me]>
  [  7] getparam 1 .............................. <tElement>
  [  9] getparam 2 .............................. <tScroll>
  [ 11] pusharglistnoret 4 ...................... <#setTargetElement, [me], tElement, tScroll>
  [ 13] extcall 15 .............................. callAncestor(#setTargetElement, [me], tElement, tScroll)
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 40 ........................... <me.pwidth>
  [ 21] getprop 19 .............................. <pBgImages>
  [ 23] pushsymb 23 ............................. <#unselected>
  [ 25] pusharglist 2 ........................... <pBgImages, #unselected>
  [ 27] objcall 41 .............................. <pBgImages[#unselected]>
  [ 29] getchainedprop 17 ....................... <pBgImages[#unselected].image>
  [ 31] getobjprop 33 ........................... <pBgImages[#unselected].image.width>
  [ 33] getprop 24 .............................. <pSpacing>
  [ 35] add ..................................... <pBgImages[#unselected].image.width + pSpacing>
  [ 36] div ..................................... <me.pwidth / (pBgImages[#unselected].image.width + pSpacing)>
  [ 37] setobjprop 42 ........................... me.pItemsPerRow = me.pwidth / (pBgImages[#unselected].image.width + pSpacing)
  [ 39] getparam 0 .............................. <me>
  [ 41] getobjprop 44 ........................... <me.pStripData>
  [ 43] pusharglist 1 ........................... <me.pStripData>
  [ 45] extcall 43 .............................. <ilk(me.pStripData)>
  [ 47] pushsymb 45 ............................. <#propList>
  [ 49] nteq .................................... <ilk(me.pStripData) <> #propList>
  [ 50] jmpifz [ 69] ............................ if ilk(me.pStripData) <> #propList then
  [ 53] getparam 0 .............................. <me>
  [ 55] pushcons 5 .............................. <"Stripdata was invalid">
  [ 57] pushsymb 2 .............................. <#setTargetElement>
  [ 59] pushsymb 47 ............................. <#major>
  [ 61] pusharglist 4 ........................... <me, "Stripdata was invalid", #setTargetElement, #major>
  [ 63] extcall 46 .............................. <error(me, "Stripdata was invalid", #setTargetElement, #major)>
  [ 65] pusharglistnoret 1 ...................... <error(me, "Stripdata was invalid", #setTargetElement, #major)>
  [ 67] extcall 37 .............................. return error(me, "Stripdata was invalid", #setTargetElement, #major)
  [ 69] getparam 0 .............................. <me>
  [ 71] pusharglistnoret 1 ...................... <me>
  [ 73] objcall 6 ............................... me.renderStripBg()
  [ 75] pushzero ................................ <0>
  [ 76] setprop 18 .............................. pSelectedItem = 0
  [ 78] pushint8 1 .............................. <1>
  [ 80] setlocal 0
  [ 82] getlocal 0
  [ 84] getparam 0 .............................. <me>
  [ 86] pushsymb 44 ............................. <#pStripData>
  [ 88] pusharglist 2 ........................... <me, #pStripData>
  [ 90] objcall 48 .............................. <me.pStripData.count>
  [ 92] lteq
  [ 93] jmpifz [113] ............................ repeat with i = 1 to me.pStripData.count
  [ 96] getparam 0 .............................. <me>
  [ 98] getlocal 0 .............................. <i>
  [100] pusharglistnoret 2 ...................... <me, i>
  [102] objcall 7 ............................... me.renderStripItem(i)
  [104] pushint8 1
  [106] getlocal 0
  [108] add
  [109] setlocal 0
  [111] endrepeat [ 82]
  [113] getparam 0 .............................. <me>
  [115] pusharglistnoret 1 ...................... <me>
  [117] objcall 12 .............................. me.pushImage()
  [119] ret
end

on enableRefreshTimeout me
  [  0] getprop 29 .............................. <pRefreshTimeoutId>
  [  2] pusharglist 1 ........................... <pRefreshTimeoutId>
  [  4] extcall 52 .............................. <timeoutExists(pRefreshTimeoutId)>
  [  6] not ..................................... <not timeoutExists(pRefreshTimeoutId)>
  [  7] jmpifz [ 32] ............................ if not timeoutExists(pRefreshTimeoutId) then
  [ 10] getprop 29 .............................. <pRefreshTimeoutId>
  [ 12] pushint16 500 ........................... <500>
  [ 15] pushsymb 11 ............................. <#refreshDownloadingSlots>
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 54 .............................. <me.getID()>
  [ 23] pusharglist 0 ........................... <>
  [ 25] extcall 55 .............................. <VOID>
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 6 ...................... <pRefreshTimeoutId, 500, #refreshDownloadingSlots, me.getID(), VOID, 0>
  [ 30] extcall 53 .............................. createTimeout(pRefreshTimeoutId, 500, #refreshDownloadingSlots, me.getID(), VOID, 0)
  [ 32] ret
end

on disableRefreshTimeout me
  [  0] getprop 29 .............................. <pRefreshTimeoutId>
  [  2] pusharglist 1 ........................... <pRefreshTimeoutId>
  [  4] extcall 52 .............................. <timeoutExists(pRefreshTimeoutId)>
  [  6] jmpifz [ 15] ............................ if timeoutExists(pRefreshTimeoutId) then
  [  9] getprop 29 .............................. <pRefreshTimeoutId>
  [ 11] pusharglistnoret 1 ...................... <pRefreshTimeoutId>
  [ 13] extcall 56 .............................. removeTimeout(pRefreshTimeoutId)
  [ 15] ret
end

on resolveSmallPreview me, tOffer
  [  0] getparam 1 .............................. <tOffer>
  [  2] pusharglist 1 ........................... <tOffer>
  [  4] extcall 57 .............................. <objectp(tOffer)>
  [  6] not ..................................... <not objectp(tOffer)>
  [  7] jmpifz [ 26] ............................ if not objectp(tOffer) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 6 .............................. <"Invalid input format">
  [ 14] pushsymb 5 .............................. <#resolveSmallPreview>
  [ 16] pushsymb 58 ............................. <#minor>
  [ 18] pusharglist 4 ........................... <me, "Invalid input format", #resolveSmallPreview, #minor>
  [ 20] extcall 46 .............................. <error(me, "Invalid input format", #resolveSmallPreview, #minor)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Invalid input format", #resolveSmallPreview, #minor)>
  [ 24] extcall 37 .............................. return error(me, "Invalid input format", #resolveSmallPreview, #minor)
  [ 26] getparam 1 .............................. <tOffer>
  [ 28] pusharglist 1 ........................... <tOffer>
  [ 30] objcall 59 .............................. <tOffer.getCount()>
  [ 32] pushint8 1 .............................. <1>
  [ 34] nteq .................................... <tOffer.getCount() <> 1>
  [ 35] jmpifz [ 53] ............................ if tOffer.getCount() <> 1 then
  [ 38] pushsymb 5 .............................. <#resolveSmallPreview>
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglist 1 ........................... <[me]>
  [ 44] pushlist ................................ <[me]>
  [ 45] pusharglist 2 ........................... <#resolveSmallPreview, [me]>
  [ 47] extcall 15 .............................. <callAncestor(#resolveSmallPreview, [me])>
  [ 49] pusharglistnoret 1 ...................... <callAncestor(#resolveSmallPreview, [me])>
  [ 51] extcall 37 .............................. return callAncestor(#resolveSmallPreview, [me])
  [ 53] getparam 1 .............................. <tOffer>
  [ 55] pushint8 1 .............................. <1>
  [ 57] pusharglist 2 ........................... <tOffer, 1>
  [ 59] objcall 60 .............................. <tOffer.getContent(1)>
  [ 61] pusharglist 1 ........................... <tOffer.getContent(1)>
  [ 63] objcall 61 .............................. <tOffer.getContent(1).getType()>
  [ 65] setlocal 0 .............................. ttype = tOffer.getContent(1).getType()
  [ 67] getlocal 0 .............................. <ttype>
  [ 69] pushcons 7 .............................. <"e">
  [ 71] eq ...................................... <ttype = "e">
  [ 72] jmpifz [123] ............................ if ttype = "e" then / else
  [ 75] pushcons 8 .............................. <"ctlg_pic_small_fx_">
  [ 77] setlocal 1 .............................. tPrefix = "ctlg_pic_small_fx_"
  [ 79] getparam 1 .............................. <tOffer>
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglist 2 ........................... <tOffer, 1>
  [ 85] objcall 60 .............................. <tOffer.getContent(1)>
  [ 87] pusharglist 1 ........................... <tOffer.getContent(1)>
  [ 89] objcall 62 .............................. <tOffer.getContent(1).getClassId()>
  [ 91] setlocal 2 .............................. tClassID = tOffer.getContent(1).getClassId()
  [ 93] getlocal 1 .............................. <tPrefix>
  [ 95] getlocal 2 .............................. <tClassID>
  [ 97] joinstr ................................. <tPrefix & tClassID>
  [ 98] pusharglist 1 ........................... <tPrefix & tClassID>
  [100] extcall 63 .............................. <memberExists(tPrefix & tClassID)>
  [102] jmpifz [120] ............................ if memberExists(tPrefix & tClassID) then
  [105] getlocal 1 .............................. <tPrefix>
  [107] getlocal 2 .............................. <tClassID>
  [109] joinstr ................................. <tPrefix & tClassID>
  [110] pusharglist 1 ........................... <tPrefix & tClassID>
  [112] extcall 21 .............................. <getMember(tPrefix & tClassID)>
  [114] getobjprop 17 ........................... <getMember(tPrefix & tClassID).image>
  [116] pusharglistnoret 1 ...................... <getMember(tPrefix & tClassID).image>
  [118] extcall 37 .............................. return getMember(tPrefix & tClassID).image
  [120] jmp [137]
  [123] getparam 0 .............................. <me>
  [125] getchainedprop 64 ....................... <me.ancestor>
  [127] getparam 1 .............................. <tOffer>
  [129] pusharglist 2 ........................... <me.ancestor, tOffer>
  [131] objcall 5 ............................... <me.ancestor.resolveSmallPreview(tOffer)>
  [133] pusharglistnoret 1 ...................... <me.ancestor.resolveSmallPreview(tOffer)>
  [135] extcall 37 .............................. return me.ancestor.resolveSmallPreview(tOffer)
  [137] ret
end

on renderStripBg me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 44 ........................... <me.pStripData>
  [  4] pusharglist 1 ........................... <me.pStripData>
  [  6] extcall 43 .............................. <ilk(me.pStripData)>
  [  8] pushsymb 45 ............................. <#propList>
  [ 10] nteq .................................... <ilk(me.pStripData) <> #propList>
  [ 11] jmpifz [ 30] ............................ if ilk(me.pStripData) <> #propList then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 9 .............................. <"Strip data invalid">
  [ 18] pushsymb 6 .............................. <#renderStripBg>
  [ 20] pushsymb 47 ............................. <#major>
  [ 22] pusharglist 4 ........................... <me, "Strip data invalid", #renderStripBg, #major>
  [ 24] extcall 46 .............................. <error(me, "Strip data invalid", #renderStripBg, #major)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "Strip data invalid", #renderStripBg, #major)>
  [ 28] extcall 37 .............................. return error(me, "Strip data invalid", #renderStripBg, #major)
  [ 30] getparam 0 .............................. <me>
  [ 32] pushsymb 44 ............................. <#pStripData>
  [ 34] pusharglist 2 ........................... <me, #pStripData>
  [ 36] objcall 48 .............................. <me.pStripData.count>
  [ 38] setlocal 0 .............................. tItemCount = me.pStripData.count
  [ 40] getlocal 0 .............................. <tItemCount>
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 42 ........................... <me.pItemsPerRow>
  [ 46] div ..................................... <tItemCount / me.pItemsPerRow>
  [ 47] pushint8 1 .............................. <1>
  [ 49] add ..................................... <(tItemCount / me.pItemsPerRow) + 1>
  [ 50] setlocal 1 .............................. tRowCount = (tItemCount / me.pItemsPerRow) + 1
  [ 52] getlocal 0 .............................. <tItemCount>
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 42 ........................... <me.pItemsPerRow>
  [ 58] mod ..................................... <tItemCount mod me.pItemsPerRow>
  [ 59] pushzero ................................ <0>
  [ 60] eq ...................................... <(tItemCount mod me.pItemsPerRow) = 0>
  [ 61] jmpifz [ 71] ............................ if (tItemCount mod me.pItemsPerRow) = 0 then
  [ 64] getlocal 1 .............................. <tRowCount>
  [ 66] pushint8 1 .............................. <1>
  [ 68] sub ..................................... <tRowCount - 1>
  [ 69] setlocal 1 .............................. tRowCount = tRowCount - 1
  [ 71] getprop 19 .............................. <pBgImages>
  [ 73] pushsymb 23 ............................. <#unselected>
  [ 75] pusharglist 2 ........................... <pBgImages, #unselected>
  [ 77] objcall 41 .............................. <pBgImages[#unselected]>
  [ 79] getchainedprop 17 ....................... <pBgImages[#unselected].image>
  [ 81] getobjprop 34 ........................... <pBgImages[#unselected].image.height>
  [ 83] getprop 24 .............................. <pSpacing>
  [ 85] add ..................................... <pBgImages[#unselected].image.height + pSpacing>
  [ 86] getlocal 1 .............................. <tRowCount>
  [ 88] mul ..................................... <(pBgImages[#unselected].image.height + pSpacing) * tRowCount>
  [ 89] setlocal 2 .............................. tImageHeight = (pBgImages[#unselected].image.height + pSpacing) * tRowCount
  [ 91] getparam 0 .............................. <me>
  [ 93] getobjprop 40 ........................... <me.pwidth>
  [ 95] getlocal 2 .............................. <tImageHeight>
  [ 97] pushint8 32 ............................. <32>
  [ 99] pusharglist 3 ........................... <me.pwidth, tImageHeight, 32>
  [101] extcall 17 .............................. <image(me.pwidth, tImageHeight, 32)>
  [103] setprop 16 .............................. pimage = image(me.pwidth, tImageHeight, 32)
  [105] getprop 16 .............................. <pimage>
  [107] getprop 16 .............................. <pimage>
  [109] getobjprop 69 ........................... <pimage.rect>
  [111] pushsymb 70 ............................. <#shapeType>
  [113] pushsymb 69 ............................. <#rect>
  [115] pushsymb 71 ............................. <#color>
  [117] getprop 26 .............................. <pBgColor>
  [119] pusharglist 4 ........................... <[#shapeType: #rect, #color: pBgColor]>
  [121] pushproplist ............................ <[#shapeType: #rect, #color: pBgColor]>
  [122] pusharglistnoret 3 ...................... <pimage, pimage.rect, [#shapeType: #rect, #color: pBgColor]>
  [124] objcall 72 .............................. pimage.fill(pimage.rect, [#shapeType: #rect, #color: pBgColor])
  [126] ret
end

on renderStripItem me, tItemIndex, tImageOverride
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 42 ........................... <me.pItemsPerRow>
  [  4] pushzero ................................ <0>
  [  5] eq ...................................... <me.pItemsPerRow = 0>
  [  6] jmpifz [ 23] ............................ if me.pItemsPerRow = 0 then
  [  9] getparam 0 .............................. <me>
  [ 11] pushcons 10 ............................. <"Cannot render, strip items per row not resolved yet!">
  [ 13] pushsymb 7 .............................. <#renderStripItem>
  [ 15] pusharglist 3 ........................... <me, "Cannot render, strip items per row not resolved yet!", #renderStripItem>
  [ 17] extcall 46 .............................. <error(me, "Cannot render, strip items per row not resolved yet!", #renderStripItem)>
  [ 19] pusharglistnoret 1 ...................... <error(me, "Cannot render, strip items per row not resolved yet!", #renderStripItem)>
  [ 21] extcall 37 .............................. return error(me, "Cannot render, strip items per row not resolved yet!", #renderStripItem)
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 44 ........................... <me.pStripData>
  [ 27] pusharglist 1 ........................... <me.pStripData>
  [ 29] extcall 43 .............................. <ilk(me.pStripData)>
  [ 31] pushsymb 45 ............................. <#propList>
  [ 33] nteq .................................... <ilk(me.pStripData) <> #propList>
  [ 34] jmpifz [ 53] ............................ if ilk(me.pStripData) <> #propList then
  [ 37] getparam 0 .............................. <me>
  [ 39] pushcons 9 .............................. <"Strip data invalid">
  [ 41] pushsymb 7 .............................. <#renderStripItem>
  [ 43] pushsymb 47 ............................. <#major>
  [ 45] pusharglist 4 ........................... <me, "Strip data invalid", #renderStripItem, #major>
  [ 47] extcall 46 .............................. <error(me, "Strip data invalid", #renderStripItem, #major)>
  [ 49] pusharglistnoret 1 ...................... <error(me, "Strip data invalid", #renderStripItem, #major)>
  [ 51] extcall 37 .............................. return error(me, "Strip data invalid", #renderStripItem, #major)
  [ 53] getprop 19 .............................. <pBgImages>
  [ 55] pushsymb 23 ............................. <#unselected>
  [ 57] pusharglist 2 ........................... <pBgImages, #unselected>
  [ 59] objcall 41 .............................. <pBgImages[#unselected]>
  [ 61] getchainedprop 17 ....................... <pBgImages[#unselected].image>
  [ 63] getobjprop 34 ........................... <pBgImages[#unselected].image.height>
  [ 65] getprop 24 .............................. <pSpacing>
  [ 67] add ..................................... <pBgImages[#unselected].image.height + pSpacing>
  [ 68] setlocal 0 .............................. tRowHeight = pBgImages[#unselected].image.height + pSpacing
  [ 70] getprop 19 .............................. <pBgImages>
  [ 72] pushsymb 23 ............................. <#unselected>
  [ 74] pusharglist 2 ........................... <pBgImages, #unselected>
  [ 76] objcall 41 .............................. <pBgImages[#unselected]>
  [ 78] getchainedprop 17 ....................... <pBgImages[#unselected].image>
  [ 80] getobjprop 33 ........................... <pBgImages[#unselected].image.width>
  [ 82] getprop 24 .............................. <pSpacing>
  [ 84] add ..................................... <pBgImages[#unselected].image.width + pSpacing>
  [ 85] setlocal 1 .............................. tItemWidth = pBgImages[#unselected].image.width + pSpacing
  [ 87] getparam 0 .............................. <me>
  [ 89] pushsymb 44 ............................. <#pStripData>
  [ 91] pusharglist 2 ........................... <me, #pStripData>
  [ 93] objcall 48 .............................. <me.pStripData.count>
  [ 95] setlocal 2 .............................. tItemCount = me.pStripData.count
  [ 97] getparam 1 .............................. <tItemIndex>
  [ 99] getlocal 2 .............................. <tItemCount>
  [101] gt ...................................... <tItemIndex > tItemCount>
  [102] jmpifz [109] ............................ if tItemIndex > tItemCount then
  [105] pusharglistnoret 0 ...................... <>
  [107] extcall 37 .............................. return 
  [109] getlocal 0 .............................. <tRowHeight>
  [111] getparam 1 .............................. <tItemIndex>
  [113] pushint8 1 .............................. <1>
  [115] sub ..................................... <tItemIndex - 1>
  [116] getparam 0 .............................. <me>
  [118] getobjprop 42 ........................... <me.pItemsPerRow>
  [120] div ..................................... <(tItemIndex - 1) / me.pItemsPerRow>
  [121] mul ..................................... <tRowHeight * ((tItemIndex - 1) / me.pItemsPerRow)>
  [122] setlocal 3 .............................. tOffsetY = tRowHeight * ((tItemIndex - 1) / me.pItemsPerRow)
  [124] getparam 1 .............................. <tItemIndex>
  [126] pushint8 1 .............................. <1>
  [128] sub ..................................... <tItemIndex - 1>
  [129] getparam 0 .............................. <me>
  [131] getobjprop 42 ........................... <me.pItemsPerRow>
  [133] mod ..................................... <(tItemIndex - 1) mod me.pItemsPerRow>
  [134] getlocal 1 .............................. <tItemWidth>
  [136] mul ..................................... <(tItemIndex - 1) mod me.pItemsPerRow * tItemWidth>
  [137] setlocal 4 .............................. tOffsetX = (tItemIndex - 1) mod me.pItemsPerRow * tItemWidth
  [139] getprop 18 .............................. <pSelectedItem>
  [141] getparam 1 .............................. <tItemIndex>
  [143] eq ...................................... <pSelectedItem = tItemIndex>
  [144] jmpifz [162] ............................ if pSelectedItem = tItemIndex then / else
  [147] getprop 19 .............................. <pBgImages>
  [149] pushsymb 20 ............................. <#selected>
  [151] pusharglist 2 ........................... <pBgImages, #selected>
  [153] objcall 41 .............................. <pBgImages[#selected]>
  [155] getobjprop 17 ........................... <pBgImages[#selected].image>
  [157] setlocal 5 .............................. tBgImg = pBgImages[#selected].image
  [159] jmp [174]
  [162] getprop 19 .............................. <pBgImages>
  [164] pushsymb 23 ............................. <#unselected>
  [166] pusharglist 2 ........................... <pBgImages, #unselected>
  [168] objcall 41 .............................. <pBgImages[#unselected]>
  [170] getobjprop 17 ........................... <pBgImages[#unselected].image>
  [172] setlocal 5 .............................. tBgImg = pBgImages[#unselected].image
  [174] getlocal 5 .............................. <tBgImg>
  [176] getobjprop 69 ........................... <tBgImg.rect>
  [178] setlocal 6 .............................. tRect = tBgImg.rect
  [180] getprop 16 .............................. <pimage>
  [182] getlocal 5 .............................. <tBgImg>
  [184] getlocal 6 .............................. <tRect>
  [186] getlocal 4 .............................. <tOffsetX>
  [188] getlocal 3 .............................. <tOffsetY>
  [190] getlocal 4 .............................. <tOffsetX>
  [192] getlocal 3 .............................. <tOffsetY>
  [194] pusharglist 4 ........................... <tOffsetX, tOffsetY, tOffsetX, tOffsetY>
  [196] extcall 69 .............................. <rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)>
  [198] add ..................................... <tRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)>
  [199] getlocal 6 .............................. <tRect>
  [201] pushsymb 76 ............................. <#useFastQuads>
  [203] pushint8 1 .............................. <1>
  [205] pusharglist 2 ........................... <[#useFastQuads: 1]>
  [207] pushproplist ............................ <[#useFastQuads: 1]>
  [208] pusharglistnoret 5 ...................... <pimage, tBgImg, tRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY), tRect, [#useFastQuads: 1]>
  [210] objcall 77 .............................. pimage.copyPixels(tBgImg, tRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY), tRect, [#useFastQuads: 1])
  [212] getparam 2 .............................. <tImageOverride>
  [214] pusharglist 1 ........................... <tImageOverride>
  [216] extcall 78 .............................. <voidp(tImageOverride)>
  [218] jmpifz [303] ............................ if voidp(tImageOverride) then / else
  [221] getparam 0 .............................. <me>
  [223] getchainedprop 44 ....................... <me.pStripData>
  [225] getparam 1 .............................. <tItemIndex>
  [227] pusharglist 2 ........................... <me.pStripData, tItemIndex>
  [229] objcall 41 .............................. <me.pStripData[tItemIndex]>
  [231] pusharglist 1 ........................... <me.pStripData[tItemIndex]>
  [233] objcall 79 .............................. <me.pStripData[tItemIndex].getSmallPreview()>
  [235] setlocal 7 .............................. tPrevImage = me.pStripData[tItemIndex].getSmallPreview()
  [237] getlocal 7 .............................. <tPrevImage>
  [239] pusharglist 1 ........................... <tPrevImage>
  [241] extcall 78 .............................. <voidp(tPrevImage)>
  [243] not ..................................... <not voidp(tPrevImage)>
  [244] jmpifz [268] ............................ if not voidp(tPrevImage) then / else
  [247] getparam 0 .............................. <me>
  [249] getchainedprop 44 ....................... <me.pStripData>
  [251] getparam 1 .............................. <tItemIndex>
  [253] pusharglist 2 ........................... <me.pStripData, tItemIndex>
  [255] objcall 41 .............................. <me.pStripData[tItemIndex]>
  [257] pusharglist 0 ........................... <>
  [259] extcall 55 .............................. <VOID>
  [261] pusharglistnoret 2 ...................... <me.pStripData[tItemIndex], VOID>
  [263] objcall 80 .............................. me.pStripData[tItemIndex].setState(VOID)
  [265] jmp [300]
  [268] pushcons 4 .............................. <"ctlg_loading_icon2">
  [270] pusharglist 1 ........................... <"ctlg_loading_icon2">
  [272] extcall 21 .............................. <getMember("ctlg_loading_icon2")>
  [274] getobjprop 17 ........................... <getMember("ctlg_loading_icon2").image>
  [276] setlocal 7 .............................. tPrevImage = getMember("ctlg_loading_icon2").image
  [278] getparam 0 .............................. <me>
  [280] getchainedprop 44 ....................... <me.pStripData>
  [282] getparam 1 .............................. <tItemIndex>
  [284] pusharglist 2 ........................... <me.pStripData, tItemIndex>
  [286] objcall 41 .............................. <me.pStripData[tItemIndex]>
  [288] pushsymb 81 ............................. <#downloading>
  [290] pusharglistnoret 2 ...................... <me.pStripData[tItemIndex], #downloading>
  [292] objcall 80 .............................. me.pStripData[tItemIndex].setState(#downloading)
  [294] getparam 0 .............................. <me>
  [296] pusharglistnoret 1 ...................... <me>
  [298] objcall 3 ............................... me.enableRefreshTimeout()
  [300] jmp [307]
  [303] getparam 2 .............................. <tImageOverride>
  [305] setlocal 7 .............................. tPrevImage = tImageOverride
  [307] getlocal 7 .............................. <tPrevImage>
  [309] getobjprop 69 ........................... <tPrevImage.rect>
  [311] setlocal 8 .............................. tItemRect = tPrevImage.rect
  [313] getparam 0 .............................. <me>
  [315] getlocal 8 .............................. <tItemRect>
  [317] getlocal 6 .............................. <tRect>
  [319] pusharglist 3 ........................... <me, tItemRect, tRect>
  [321] objcall 8 ............................... <me.centerRectInRect(tItemRect, tRect)>
  [323] setlocal 9 .............................. tCenterOffset = me.centerRectInRect(tItemRect, tRect)
  [325] getprop 16 .............................. <pimage>
  [327] getlocal 7 .............................. <tPrevImage>
  [329] getlocal 8 .............................. <tItemRect>
  [331] getlocal 4 .............................. <tOffsetX>
  [333] getlocal 3 .............................. <tOffsetY>
  [335] getlocal 4 .............................. <tOffsetX>
  [337] getlocal 3 .............................. <tOffsetY>
  [339] pusharglist 4 ........................... <tOffsetX, tOffsetY, tOffsetX, tOffsetY>
  [341] extcall 69 .............................. <rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)>
  [343] add ..................................... <tItemRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)>
  [344] getlocal 9 .............................. <tCenterOffset>
  [346] getobjprop 82 ........................... <tCenterOffset.locH>
  [348] getlocal 9 .............................. <tCenterOffset>
  [350] getobjprop 83 ........................... <tCenterOffset.locV>
  [352] getlocal 9 .............................. <tCenterOffset>
  [354] getobjprop 82 ........................... <tCenterOffset.locH>
  [356] getlocal 9 .............................. <tCenterOffset>
  [358] getobjprop 83 ........................... <tCenterOffset.locV>
  [360] pusharglist 4 ........................... <tCenterOffset.locH, tCenterOffset.locV, tCenterOffset.locH, tCenterOffset.locV>
  [362] extcall 69 .............................. <rect(tCenterOffset.locH, tCenterOffset.locV, tCenterOffset.locH, tCenterOffset.locV)>
  [364] add ..................................... <tItemRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY) + rect(tCenterOffset.locH, tCenterOffset.locV, tCenterOffset.locH, tCenterOffset.locV)>
  [365] getlocal 8 .............................. <tItemRect>
  [367] pushsymb 76 ............................. <#useFastQuads>
  [369] pushint8 1 .............................. <1>
  [371] pushsymb 84 ............................. <#ink>
  [373] pushint8 36 ............................. <36>
  [375] pusharglist 4 ........................... <[#useFastQuads: 1, #ink: 36]>
  [377] pushproplist ............................ <[#useFastQuads: 1, #ink: 36]>
  [378] pusharglistnoret 5 ...................... <pimage, tPrevImage, tItemRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY) + rect(tCenterOffset.locH, tCenterOffset.locV, tCenterOffset.locH, tCenterOffset.locV), tItemRect, [#useFastQuads: 1, #ink: 36]>
  [380] objcall 77 .............................. pimage.copyPixels(tPrevImage, tItemRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY) + rect(tCenterOffset.locH, tCenterOffset.locV, tCenterOffset.locH, tCenterOffset.locV), tItemRect, [#useFastQuads: 1, #ink: 36])
  [382] ret
end

on centerRectInRect me, tSmallrect, tLargeRect
  [  0] pushzero ................................ <0>
  [  1] pushzero ................................ <0>
  [  2] pusharglist 2 ........................... <0, 0>
  [  4] extcall 32 .............................. <point(0, 0)>
  [  6] setlocal 0 .............................. tpoint = point(0, 0)
  [  8] getlocal 0 .............................. <tpoint>
  [ 10] getparam 2 .............................. <tLargeRect>
  [ 12] getobjprop 33 ........................... <tLargeRect.width>
  [ 14] getparam 1 .............................. <tSmallrect>
  [ 16] getobjprop 33 ........................... <tSmallrect.width>
  [ 18] sub ..................................... <tLargeRect.width - tSmallrect.width>
  [ 19] pushint8 2 .............................. <2>
  [ 21] div ..................................... <(tLargeRect.width - tSmallrect.width) / 2>
  [ 22] setobjprop 82 ........................... tpoint.locH = (tLargeRect.width - tSmallrect.width) / 2
  [ 24] getlocal 0 .............................. <tpoint>
  [ 26] getparam 2 .............................. <tLargeRect>
  [ 28] getobjprop 34 ........................... <tLargeRect.height>
  [ 30] getparam 1 .............................. <tSmallrect>
  [ 32] getobjprop 34 ........................... <tSmallrect.height>
  [ 34] sub ..................................... <tLargeRect.height - tSmallrect.height>
  [ 35] pushint8 2 .............................. <2>
  [ 37] div ..................................... <(tLargeRect.height - tSmallrect.height) / 2>
  [ 38] setobjprop 83 ........................... tpoint.locV = (tLargeRect.height - tSmallrect.height) / 2
  [ 40] getlocal 0 .............................. <tpoint>
  [ 42] pusharglistnoret 1 ...................... <tpoint>
  [ 44] extcall 37 .............................. return tpoint
  [ 46] ret
end

on getItemIndexAt me, tloc
  [  0] getprop 19 .............................. <pBgImages>
  [  2] pushsymb 23 ............................. <#unselected>
  [  4] pusharglist 2 ........................... <pBgImages, #unselected>
  [  6] objcall 41 .............................. <pBgImages[#unselected]>
  [  8] getchainedprop 17 ....................... <pBgImages[#unselected].image>
  [ 10] getobjprop 34 ........................... <pBgImages[#unselected].image.height>
  [ 12] getprop 24 .............................. <pSpacing>
  [ 14] add ..................................... <pBgImages[#unselected].image.height + pSpacing>
  [ 15] setlocal 0 .............................. tRowHeight = pBgImages[#unselected].image.height + pSpacing
  [ 17] getprop 19 .............................. <pBgImages>
  [ 19] pushsymb 23 ............................. <#unselected>
  [ 21] pusharglist 2 ........................... <pBgImages, #unselected>
  [ 23] objcall 41 .............................. <pBgImages[#unselected]>
  [ 25] getchainedprop 17 ....................... <pBgImages[#unselected].image>
  [ 27] getobjprop 33 ........................... <pBgImages[#unselected].image.width>
  [ 29] getprop 24 .............................. <pSpacing>
  [ 31] add ..................................... <pBgImages[#unselected].image.width + pSpacing>
  [ 32] setlocal 1 .............................. tItemWidth = pBgImages[#unselected].image.width + pSpacing
  [ 34] getparam 1 .............................. <tloc>
  [ 36] getobjprop 83 ........................... <tloc.locV>
  [ 38] getlocal 0 .............................. <tRowHeight>
  [ 40] div ..................................... <tloc.locV / tRowHeight>
  [ 41] getparam 0 .............................. <me>
  [ 43] getobjprop 42 ........................... <me.pItemsPerRow>
  [ 45] mul ..................................... <tloc.locV / tRowHeight * me.pItemsPerRow>
  [ 46] getparam 1 .............................. <tloc>
  [ 48] getobjprop 82 ........................... <tloc.locH>
  [ 50] getlocal 1 .............................. <tItemWidth>
  [ 52] div ..................................... <tloc.locH / tItemWidth>
  [ 53] pushint8 1 .............................. <1>
  [ 55] add ..................................... <(tloc.locH / tItemWidth) + 1>
  [ 56] add ..................................... <(tloc.locV / tRowHeight * me.pItemsPerRow) + ((tloc.locH / tItemWidth) + 1)>
  [ 57] pusharglistnoret 1 ...................... <(tloc.locV / tRowHeight * me.pItemsPerRow) + ((tloc.locH / tItemWidth) + 1)>
  [ 59] extcall 37 .............................. return (tloc.locV / tRowHeight * me.pItemsPerRow) + ((tloc.locH / tItemWidth) + 1)
  [ 61] ret
end

on downloadCompleted me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#props>
  [  4] pusharglist 2 ........................... <tProps, #props>
  [  6] objcall 41 .............................. <tProps[#props]>
  [  8] pushsymb 101 ............................ <#imagedownload>
  [ 10] pusharglist 2 ........................... <tProps[#props], #imagedownload>
  [ 12] objcall 102 ............................. <tProps[#props].getaProp(#imagedownload)>
  [ 14] jmpifz [ 21] ............................ if tProps[#props].getaProp(#imagedownload) then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 37 .............................. return 
  [ 21] getparam 1 .............................. <tProps>
  [ 23] pushsymb 100 ............................ <#props>
  [ 25] pusharglist 2 ........................... <tProps, #props>
  [ 27] objcall 41 .............................. <tProps[#props]>
  [ 29] pushsymb 103 ............................ <#pageid>
  [ 31] pusharglist 2 ........................... <tProps[#props], #pageid>
  [ 33] objcall 41 .............................. <tProps[#props][#pageid]>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 104 .......................... <me.pPageId>
  [ 39] nteq .................................... <tProps[#props][#pageid] <> me.pPageId>
  [ 40] jmpifz [ 47] ............................ if tProps[#props][#pageid] <> me.pPageId then
  [ 43] pusharglistnoret 0 ...................... <>
  [ 45] extcall 37 .............................. return 
  [ 47] pushsymb 10 ............................. <#downloadCompleted>
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglist 1 ........................... <[me]>
  [ 53] pushlist ................................ <[me]>
  [ 54] getparam 1 .............................. <tProps>
  [ 56] pusharglistnoret 3 ...................... <#downloadCompleted, [me], tProps>
  [ 58] extcall 15 .............................. callAncestor(#downloadCompleted, [me], tProps)
  [ 60] getparam 1 .............................. <tProps>
  [ 62] pushsymb 100 ............................ <#props>
  [ 64] pusharglist 2 ........................... <tProps, #props>
  [ 66] objcall 41 .............................. <tProps[#props]>
  [ 68] pushsymb 105 ............................ <#itemIndex>
  [ 70] pusharglist 2 ........................... <tProps[#props], #itemIndex>
  [ 72] objcall 41 .............................. <tProps[#props][#itemIndex]>
  [ 74] setlocal 0 .............................. tItemIndex = tProps[#props][#itemIndex]
  [ 76] getparam 0 .............................. <me>
  [ 78] getlocal 0 .............................. <tItemIndex>
  [ 80] pusharglistnoret 2 ...................... <me, tItemIndex>
  [ 82] objcall 7 ............................... me.renderStripItem(tItemIndex)
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglistnoret 1 ...................... <me>
  [ 88] objcall 12 .............................. me.pushImage()
  [ 90] ret
end

on refreshDownloadingSlots me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 44 ........................... <me.pStripData>
  [  4] pusharglist 1 ........................... <me.pStripData>
  [  6] extcall 43 .............................. <ilk(me.pStripData)>
  [  8] pushsymb 45 ............................. <#propList>
  [ 10] nteq .................................... <ilk(me.pStripData) <> #propList>
  [ 11] jmpifz [ 30] ............................ if ilk(me.pStripData) <> #propList then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 9 .............................. <"Strip data invalid">
  [ 18] pushsymb 11 ............................. <#refreshDownloadingSlots>
  [ 20] pushsymb 47 ............................. <#major>
  [ 22] pusharglist 4 ........................... <me, "Strip data invalid", #refreshDownloadingSlots, #major>
  [ 24] extcall 46 .............................. <error(me, "Strip data invalid", #refreshDownloadingSlots, #major)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "Strip data invalid", #refreshDownloadingSlots, #major)>
  [ 28] extcall 37 .............................. return error(me, "Strip data invalid", #refreshDownloadingSlots, #major)
  [ 30] pushcons 4 .............................. <"ctlg_loading_icon2">
  [ 32] pusharglist 1 ........................... <"ctlg_loading_icon2">
  [ 34] extcall 21 .............................. <getMember("ctlg_loading_icon2")>
  [ 36] setlocal 0 .............................. tIcon = getMember("ctlg_loading_icon2")
  [ 38] getprop 31 .............................. <pRotationQuad>
  [ 40] pushint8 1 .............................. <1>
  [ 42] pusharglist 2 ........................... <pRotationQuad, 1>
  [ 44] objcall 41 .............................. <pRotationQuad[1]>
  [ 46] setlocal 1 .............................. t1 = pRotationQuad[1]
  [ 48] getprop 31 .............................. <pRotationQuad>
  [ 50] pushint8 2 .............................. <2>
  [ 52] pusharglist 2 ........................... <pRotationQuad, 2>
  [ 54] objcall 41 .............................. <pRotationQuad[2]>
  [ 56] setlocal 2 .............................. t2 = pRotationQuad[2]
  [ 58] getprop 31 .............................. <pRotationQuad>
  [ 60] pushint8 3 .............................. <3>
  [ 62] pusharglist 2 ........................... <pRotationQuad, 3>
  [ 64] objcall 41 .............................. <pRotationQuad[3]>
  [ 66] setlocal 3 .............................. t3 = pRotationQuad[3]
  [ 68] getprop 31 .............................. <pRotationQuad>
  [ 70] pushint8 4 .............................. <4>
  [ 72] pusharglist 2 ........................... <pRotationQuad, 4>
  [ 74] objcall 41 .............................. <pRotationQuad[4]>
  [ 76] setlocal 4 .............................. t4 = pRotationQuad[4]
  [ 78] getlocal 2 .............................. <t2>
  [ 80] getlocal 3 .............................. <t3>
  [ 82] getlocal 4 .............................. <t4>
  [ 84] getlocal 1 .............................. <t1>
  [ 86] pusharglist 4 ........................... <[t2, t3, t4, t1]>
  [ 88] pushlist ................................ <[t2, t3, t4, t1]>
  [ 89] setprop 31 .............................. pRotationQuad = [t2, t3, t4, t1]
  [ 91] getlocal 0 .............................. <tIcon>
  [ 93] getchainedprop 17 ....................... <tIcon.image>
  [ 95] pusharglist 1 ........................... <tIcon.image>
  [ 97] objcall 107 ............................. <tIcon.image.duplicate()>
  [ 99] setlocal 5 .............................. tImage = tIcon.image.duplicate()
  [101] getlocal 5 .............................. <tImage>
  [103] getlocal 0 .............................. <tIcon>
  [105] getobjprop 17 ........................... <tIcon.image>
  [107] getprop 31 .............................. <pRotationQuad>
  [109] getlocal 0 .............................. <tIcon>
  [111] getobjprop 69 ........................... <tIcon.rect>
  [113] pusharglistnoret 4 ...................... <tImage, tIcon.image, pRotationQuad, tIcon.rect>
  [115] objcall 77 .............................. tImage.copyPixels(tIcon.image, pRotationQuad, tIcon.rect)
  [117] pushzero ................................ <0>
  [118] setlocal 6 .............................. tDownloadingStuffs = 0
  [120] pushint8 1 .............................. <1>
  [122] setlocal 7
  [124] getlocal 7
  [126] getparam 0 .............................. <me>
  [128] pushsymb 44 ............................. <#pStripData>
  [130] pusharglist 2 ........................... <me, #pStripData>
  [132] objcall 48 .............................. <me.pStripData.count>
  [134] lteq
  [135] jmpifz [185] ............................ repeat with i = 1 to me.pStripData.count
  [138] getparam 0 .............................. <me>
  [140] getchainedprop 44 ....................... <me.pStripData>
  [142] getlocal 7 .............................. <i>
  [144] pusharglist 2 ........................... <me.pStripData, i>
  [146] objcall 41 .............................. <me.pStripData[i]>
  [148] setlocal 8 .............................. tStripItem = me.pStripData[i]
  [150] getlocal 8 .............................. <tStripItem>
  [152] pusharglist 1 ........................... <tStripItem>
  [154] objcall 108 ............................. <tStripItem.getState()>
  [156] pushsymb 81 ............................. <#downloading>
  [158] eq ...................................... <tStripItem.getState() = #downloading>
  [159] jmpifz [176] ............................ if tStripItem.getState() = #downloading then
  [162] getparam 0 .............................. <me>
  [164] getlocal 7 .............................. <i>
  [166] getlocal 5 .............................. <tImage>
  [168] pusharglistnoret 3 ...................... <me, i, tImage>
  [170] objcall 7 ............................... me.renderStripItem(i, tImage)
  [172] pushint8 1 .............................. <1>
  [174] setlocal 6 .............................. tDownloadingStuffs = 1
  [176] pushint8 1
  [178] getlocal 7
  [180] add
  [181] setlocal 7
  [183] endrepeat [124]
  [185] getparam 0 .............................. <me>
  [187] pusharglistnoret 1 ...................... <me>
  [189] objcall 12 .............................. me.pushImage()
  [191] getlocal 6 .............................. <tDownloadingStuffs>
  [193] not ..................................... <not tDownloadingStuffs>
  [194] jmpifz [203] ............................ if not tDownloadingStuffs then
  [197] getparam 0 .............................. <me>
  [199] pusharglistnoret 1 ...................... <me>
  [201] objcall 4 ............................... me.disableRefreshTimeout()
  [203] ret
end

on pushImage me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 117 .......................... <me.pTargetElement>
  [  4] pusharglist 1 ........................... <me.pTargetElement>
  [  6] extcall 78 .............................. <voidp(me.pTargetElement)>
  [  8] not ..................................... <not voidp(me.pTargetElement)>
  [  9] jmpifz [ 60] ............................ if not voidp(me.pTargetElement) then
  [ 12] getparam 0 .............................. <me>
  [ 14] getchainedprop 117 ...................... <me.pTargetElement>
  [ 16] getprop 16 .............................. <pimage>
  [ 18] pusharglistnoret 2 ...................... <me.pTargetElement, pimage>
  [ 20] objcall 118 ............................. me.pTargetElement.feedImage(pimage)
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 119 .......................... <me.pTargetScroll>
  [ 26] pusharglist 1 ........................... <me.pTargetScroll>
  [ 28] extcall 78 .............................. <voidp(me.pTargetScroll)>
  [ 30] not ..................................... <not voidp(me.pTargetScroll)>
  [ 31] jmpifz [ 60] ............................ if not voidp(me.pTargetScroll) then
  [ 34] getprop 16 .............................. <pimage>
  [ 36] getobjprop 34 ........................... <pimage.height>
  [ 38] getparam 0 .............................. <me>
  [ 40] getchainedprop 117 ...................... <me.pTargetElement>
  [ 42] pushsymb 34 ............................. <#height>
  [ 44] pusharglist 2 ........................... <me.pTargetElement, #height>
  [ 46] objcall 120 ............................. <me.pTargetElement.getProperty(#height)>
  [ 48] lteq .................................... <pimage.height <= me.pTargetElement.getProperty(#height)>
  [ 49] jmpifz [ 60] ............................ if pimage.height <= me.pTargetElement.getProperty(#height) then
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 119 ...................... <me.pTargetScroll>
  [ 56] pusharglistnoret 1 ...................... <me.pTargetScroll>
  [ 58] objcall 121 ............................. me.pTargetScroll.hide()
  [ 60] ret
end

on selectItemAt me, tloc
  [  0] getparam 1 .............................. <tloc>
  [  2] pusharglist 1 ........................... <tloc>
  [  4] extcall 43 .............................. <ilk(tloc)>
  [  6] pushsymb 32 ............................. <#point>
  [  8] nteq .................................... <ilk(tloc) <> #point>
  [  9] jmpifz [ 16] ............................ if ilk(tloc) <> #point then
  [ 12] pusharglistnoret 0 ...................... <>
  [ 14] extcall 37 .............................. return 
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 44 ........................... <me.pStripData>
  [ 20] pusharglist 1 ........................... <me.pStripData>
  [ 22] extcall 43 .............................. <ilk(me.pStripData)>
  [ 24] pushsymb 45 ............................. <#propList>
  [ 26] nteq .................................... <ilk(me.pStripData) <> #propList>
  [ 27] jmpifz [ 46] ............................ if ilk(me.pStripData) <> #propList then
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 9 .............................. <"Strip data invalid">
  [ 34] pushsymb 13 ............................. <#selectItemAt>
  [ 36] pushsymb 47 ............................. <#major>
  [ 38] pusharglist 4 ........................... <me, "Strip data invalid", #selectItemAt, #major>
  [ 40] extcall 46 .............................. <error(me, "Strip data invalid", #selectItemAt, #major)>
  [ 42] pusharglistnoret 1 ...................... <error(me, "Strip data invalid", #selectItemAt, #major)>
  [ 44] extcall 37 .............................. return error(me, "Strip data invalid", #selectItemAt, #major)
  [ 46] getparam 0 .............................. <me>
  [ 48] getparam 1 .............................. <tloc>
  [ 50] pusharglist 2 ........................... <me, tloc>
  [ 52] objcall 9 ............................... <me.getItemIndexAt(tloc)>
  [ 54] setlocal 0 .............................. tItemIndex = me.getItemIndexAt(tloc)
  [ 56] getlocal 0 .............................. <tItemIndex>
  [ 58] getprop 18 .............................. <pSelectedItem>
  [ 60] nteq .................................... <tItemIndex <> pSelectedItem>
  [ 61] getlocal 0 .............................. <tItemIndex>
  [ 63] getparam 0 .............................. <me>
  [ 65] pushsymb 44 ............................. <#pStripData>
  [ 67] pusharglist 2 ........................... <me, #pStripData>
  [ 69] objcall 48 .............................. <me.pStripData.count>
  [ 71] lteq .................................... <tItemIndex <= me.pStripData.count>
  [ 72] and ..................................... <(tItemIndex <> pSelectedItem) and (tItemIndex <= me.pStripData.count)>
  [ 73] jmpifz [113] ............................ if (tItemIndex <> pSelectedItem) and (tItemIndex <= me.pStripData.count) then
  [ 76] getprop 18 .............................. <pSelectedItem>
  [ 78] setlocal 1 .............................. tOldSelection = pSelectedItem
  [ 80] getlocal 0 .............................. <tItemIndex>
  [ 82] setprop 18 .............................. pSelectedItem = tItemIndex
  [ 84] getlocal 1 .............................. <tOldSelection>
  [ 86] pushzero ................................ <0>
  [ 87] gt ...................................... <tOldSelection > 0>
  [ 88] jmpifz [ 99] ............................ if tOldSelection > 0 then
  [ 91] getparam 0 .............................. <me>
  [ 93] getlocal 1 .............................. <tOldSelection>
  [ 95] pusharglistnoret 2 ...................... <me, tOldSelection>
  [ 97] objcall 7 ............................... me.renderStripItem(tOldSelection)
  [ 99] getparam 0 .............................. <me>
  [101] getlocal 0 .............................. <tItemIndex>
  [103] pusharglistnoret 2 ...................... <me, tItemIndex>
  [105] objcall 7 ............................... me.renderStripItem(tItemIndex)
  [107] getparam 0 .............................. <me>
  [109] pusharglistnoret 1 ...................... <me>
  [111] objcall 12 .............................. me.pushImage()
  [113] ret
end

on getSelectedItem me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 44 ........................... <me.pStripData>
  [  4] pusharglist 1 ........................... <me.pStripData>
  [  6] extcall 43 .............................. <ilk(me.pStripData)>
  [  8] pushsymb 45 ............................. <#propList>
  [ 10] nteq .................................... <ilk(me.pStripData) <> #propList>
  [ 11] jmpifz [ 34] ............................ if ilk(me.pStripData) <> #propList then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 9 .............................. <"Strip data invalid">
  [ 18] pushsymb 14 ............................. <#getSelectedItem>
  [ 20] pushsymb 47 ............................. <#major>
  [ 22] pusharglistnoret 4 ...................... <me, "Strip data invalid", #getSelectedItem, #major>
  [ 24] extcall 46 .............................. error(me, "Strip data invalid", #getSelectedItem, #major)
  [ 26] pusharglist 0 ........................... <>
  [ 28] extcall 55 .............................. <VOID>
  [ 30] pusharglistnoret 1 ...................... <VOID>
  [ 32] extcall 37 .............................. return VOID
  [ 34] getprop 18 .............................. <pSelectedItem>
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 44 ............................. <#pStripData>
  [ 40] pusharglist 2 ........................... <me, #pStripData>
  [ 42] objcall 48 .............................. <me.pStripData.count>
  [ 44] gt ...................................... <pSelectedItem > me.pStripData.count>
  [ 45] jmpifz [ 68] ............................ if pSelectedItem > me.pStripData.count then
  [ 48] getparam 0 .............................. <me>
  [ 50] pushcons 11 ............................. <"Selected item index was larger than stripitem count!">
  [ 52] pushsymb 14 ............................. <#getSelectedItem>
  [ 54] pushsymb 47 ............................. <#major>
  [ 56] pusharglistnoret 4 ...................... <me, "Selected item index was larger than stripitem count!", #getSelectedItem, #major>
  [ 58] extcall 46 .............................. error(me, "Selected item index was larger than stripitem count!", #getSelectedItem, #major)
  [ 60] pusharglist 0 ........................... <>
  [ 62] extcall 55 .............................. <VOID>
  [ 64] pusharglistnoret 1 ...................... <VOID>
  [ 66] extcall 37 .............................. return VOID
  [ 68] getprop 18 .............................. <pSelectedItem>
  [ 70] pushzero ................................ <0>
  [ 71] gt ...................................... <pSelectedItem > 0>
  [ 72] jmpifz [ 92] ............................ if pSelectedItem > 0 then / else
  [ 75] getparam 0 .............................. <me>
  [ 77] pushsymb 44 ............................. <#pStripData>
  [ 79] getprop 18 .............................. <pSelectedItem>
  [ 81] pusharglist 3 ........................... <me, #pStripData, pSelectedItem>
  [ 83] objcall 123 ............................. <me.pStripData[pSelectedItem]>
  [ 85] pusharglistnoret 1 ...................... <me.pStripData[pSelectedItem]>
  [ 87] extcall 37 .............................. return me.pStripData[pSelectedItem]
  [ 89] jmp [100]
  [ 92] pusharglist 0 ........................... <>
  [ 94] extcall 55 .............................. <VOID>
  [ 96] pusharglistnoret 1 ...................... <VOID>
  [ 98] extcall 37 .............................. return VOID
  [100] ret
end
