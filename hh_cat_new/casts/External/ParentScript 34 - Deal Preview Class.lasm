property pImageWidth, pImageHeight, pCellWidth, pCellHeight, pwidth, pheight, pMarginLeft, pMarginRight, pMarginTop, pMarginBottom, pNumberPosX, pNumberPosY, pDealList, pCountWriterID, pAlign

on construct me
  [  0] pushcons 0 .............................. <"catalogue.deal.cellwidth">
  [  2] pusharglist 1 ........................... <"catalogue.deal.cellwidth">
  [  4] extcall 22 .............................. <getVariable("catalogue.deal.cellwidth")>
  [  6] setprop 785 ............................. pCellWidth = getVariable("catalogue.deal.cellwidth")
  [  9] pushcons 1 .............................. <"catalogue.deal.cellheight">
  [ 11] pusharglist 1 ........................... <"catalogue.deal.cellheight">
  [ 13] extcall 22 .............................. <getVariable("catalogue.deal.cellheight")>
  [ 15] setprop 786 ............................. pCellHeight = getVariable("catalogue.deal.cellheight")
  [ 18] pushcons 2 .............................. <"catalogue.deal.gridwidth">
  [ 20] pusharglist 1 ........................... <"catalogue.deal.gridwidth">
  [ 22] extcall 22 .............................. <getVariable("catalogue.deal.gridwidth")>
  [ 24] setprop 40 .............................. pwidth = getVariable("catalogue.deal.gridwidth")
  [ 26] pushcons 3 .............................. <"catalogue.deal.gridheight">
  [ 28] pusharglist 1 ........................... <"catalogue.deal.gridheight">
  [ 30] extcall 22 .............................. <getVariable("catalogue.deal.gridheight")>
  [ 32] setprop 696 ............................. pheight = getVariable("catalogue.deal.gridheight")
  [ 35] pushcons 4 .............................. <"catalogue.deal.numberpos.x">
  [ 37] pusharglist 1 ........................... <"catalogue.deal.numberpos.x">
  [ 39] extcall 22 .............................. <getVariable("catalogue.deal.numberpos.x")>
  [ 41] setprop 698 ............................. pNumberPosX = getVariable("catalogue.deal.numberpos.x")
  [ 44] pushcons 5 .............................. <"catalogue.deal.numberpos.y">
  [ 46] pusharglist 1 ........................... <"catalogue.deal.numberpos.y">
  [ 48] extcall 22 .............................. <getVariable("catalogue.deal.numberpos.y")>
  [ 50] setprop 699 ............................. pNumberPosY = getVariable("catalogue.deal.numberpos.y")
  [ 53] pushcons 6 .............................. <"catalogue.deal.margin.left">
  [ 55] pusharglist 1 ........................... <"catalogue.deal.margin.left">
  [ 57] extcall 22 .............................. <getVariable("catalogue.deal.margin.left")>
  [ 59] setprop 787 ............................. pMarginLeft = getVariable("catalogue.deal.margin.left")
  [ 62] pushcons 7 .............................. <"catalogue.deal.margin.right">
  [ 64] pusharglist 1 ........................... <"catalogue.deal.margin.right">
  [ 66] extcall 22 .............................. <getVariable("catalogue.deal.margin.right")>
  [ 68] setprop 788 ............................. pMarginRight = getVariable("catalogue.deal.margin.right")
  [ 71] pushcons 8 .............................. <"catalogue.deal.margin.top">
  [ 73] pusharglist 1 ........................... <"catalogue.deal.margin.top">
  [ 75] extcall 22 .............................. <getVariable("catalogue.deal.margin.top")>
  [ 77] setprop 789 ............................. pMarginTop = getVariable("catalogue.deal.margin.top")
  [ 80] pushcons 9 .............................. <"catalogue.deal.margin.bottom">
  [ 82] pusharglist 1 ........................... <"catalogue.deal.margin.bottom">
  [ 84] extcall 22 .............................. <getVariable("catalogue.deal.margin.bottom")>
  [ 86] setprop 790 ............................. pMarginBottom = getVariable("catalogue.deal.margin.bottom")
  [ 89] pushint8 1 .............................. <1>
  [ 91] setprop 791 ............................. pAlign = 1
  [ 94] pushcons 10 ............................. <"catalogue.deal.number.align">
  [ 96] pusharglist 1 ........................... <"catalogue.deal.number.align">
  [ 98] extcall 22 .............................. <getVariable("catalogue.deal.number.align")>
  [100] setlocal 0 .............................. tAlign = getVariable("catalogue.deal.number.align")
  [102] getlocal 0 .............................. <tAlign>
  [104] pushcons 11 ............................. <"left">
  [106] eq ...................................... <tAlign = "left">
  [107] jmpifz [117] ............................ if tAlign = "left" then / else
  [110] pushzero ................................ <0>
  [111] setprop 791 ............................. pAlign = 0
  [114] jmp [130]
  [117] getlocal 0 .............................. <tAlign>
  [119] pushcons 12 ............................. <"right">
  [121] eq ...................................... <tAlign = "right">
  [122] jmpifz [130] ............................ if tAlign = "right" then
  [125] pushint8 2 .............................. <2>
  [127] setprop 791 ............................. pAlign = 2
  [130] pusharglist 0 ........................... <[:]>
  [132] pushproplist ............................ <[:]>
  [133] setprop 792 ............................. pDealList = [:]
  [136] pusharglist 0 ........................... <>
  [138] extcall 30 .............................. <getUniqueID()>
  [140] setprop 793 ............................. pCountWriterID = getUniqueID()
  [143] pushcons 13 ............................. <"struct.font.bold">
  [145] pusharglist 1 ........................... <"struct.font.bold">
  [147] extcall 529 ............................. <getStructVariable("struct.font.bold")>
  [150] setlocal 1 .............................. tBold = getStructVariable("struct.font.bold")
  [152] pushsymb 794 ............................ <#font>
  [155] getlocal 1 .............................. <tBold>
  [157] pushsymb 794 ............................ <#font>
  [160] pusharglist 2 ........................... <tBold, #font>
  [162] objcall 102 ............................. <tBold.getaProp(#font)>
  [164] pushsymb 795 ............................ <#fontStyle>
  [167] getlocal 1 .............................. <tBold>
  [169] pushsymb 795 ............................ <#fontStyle>
  [172] pusharglist 2 ........................... <tBold, #fontStyle>
  [174] objcall 102 ............................. <tBold.getaProp(#fontStyle)>
  [176] pushsymb 71 ............................. <#color>
  [178] pushcons 14 ............................. <"#FFFFCC">
  [180] pusharglist 1 ........................... <"#FFFFCC">
  [182] extcall 27 .............................. <rgb("#FFFFCC")>
  [184] pusharglist 6 ........................... <[#font: tBold.getaProp(#font), #fontStyle: tBold.getaProp(#fontStyle), #color: rgb("#FFFFCC")]>
  [186] pushproplist ............................ <[#font: tBold.getaProp(#font), #fontStyle: tBold.getaProp(#fontStyle), #color: rgb("#FFFFCC")]>
  [187] setlocal 2 .............................. tMetrics = [#font: tBold.getaProp(#font), #fontStyle: tBold.getaProp(#fontStyle), #color: rgb("#FFFFCC")]
  [189] getprop 793 ............................. <pCountWriterID>
  [192] getlocal 2 .............................. <tMetrics>
  [194] pusharglistnoret 2 ...................... <pCountWriterID, tMetrics>
  [196] extcall 772 ............................. createWriter(pCountWriterID, tMetrics)
  [199] pushint8 1 .............................. <1>
  [201] pusharglistnoret 1 ...................... <1>
  [203] extcall 37 .............................. return 1
  [205] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 792 ............................. pDealList = [:]
  [  6] getprop 793 ............................. <pCountWriterID>
  [  9] pusharglistnoret 1 ...................... <pCountWriterID>
  [ 11] extcall 799 ............................. removeWriter(pCountWriterID)
  [ 14] pushint8 1 .............................. <1>
  [ 16] pusharglistnoret 1 ...................... <1>
  [ 18] extcall 37 .............................. return 1
  [ 20] ret
end

on define me, tDealList, tCellWidth, tCellHeight, tWidth, tHeight, tNumberPosX, tNumberPosY
  [  0] getparam 1 .............................. <tDealList>
  [  2] pusharglist 1 ........................... <tDealList>
  [  4] objcall 107 ............................. <tDealList.duplicate()>
  [  6] setprop 792 ............................. pDealList = tDealList.duplicate()
  [  9] getparam 2 .............................. <tCellWidth>
  [ 11] pusharglist 1 ........................... <tCellWidth>
  [ 13] extcall 187 ............................. <integerp(tCellWidth)>
  [ 15] jmpifz [ 23] ............................ if integerp(tCellWidth) then
  [ 18] getparam 2 .............................. <tCellWidth>
  [ 20] setprop 785 ............................. pCellWidth = tCellWidth
  [ 23] getparam 3 .............................. <tCellHeight>
  [ 25] pusharglist 1 ........................... <tCellHeight>
  [ 27] extcall 187 ............................. <integerp(tCellHeight)>
  [ 29] jmpifz [ 37] ............................ if integerp(tCellHeight) then
  [ 32] getparam 3 .............................. <tCellHeight>
  [ 34] setprop 786 ............................. pCellHeight = tCellHeight
  [ 37] getparam 4 .............................. <tWidth>
  [ 39] pusharglist 1 ........................... <tWidth>
  [ 41] extcall 187 ............................. <integerp(tWidth)>
  [ 43] jmpifz [ 50] ............................ if integerp(tWidth) then
  [ 46] getparam 4 .............................. <tWidth>
  [ 48] setprop 40 .............................. pwidth = tWidth
  [ 50] getparam 5 .............................. <tHeight>
  [ 52] pusharglist 1 ........................... <tHeight>
  [ 54] extcall 187 ............................. <integerp(tHeight)>
  [ 56] jmpifz [ 64] ............................ if integerp(tHeight) then
  [ 59] getparam 5 .............................. <tHeight>
  [ 61] setprop 696 ............................. pheight = tHeight
  [ 64] getparam 6 .............................. <tNumberPosX>
  [ 66] pusharglist 1 ........................... <tNumberPosX>
  [ 68] extcall 187 ............................. <integerp(tNumberPosX)>
  [ 70] jmpifz [ 78] ............................ if integerp(tNumberPosX) then
  [ 73] getparam 6 .............................. <tNumberPosX>
  [ 75] setprop 698 ............................. pNumberPosX = tNumberPosX
  [ 78] getparam 7 .............................. <tNumberPosY>
  [ 80] pusharglist 1 ........................... <tNumberPosY>
  [ 82] extcall 187 ............................. <integerp(tNumberPosY)>
  [ 84] jmpifz [ 92] ............................ if integerp(tNumberPosY) then
  [ 87] getparam 7 .............................. <tNumberPosY>
  [ 89] setprop 699 ............................. pNumberPosY = tNumberPosY
  [ 92] getprop 40 .............................. <pwidth>
  [ 94] pushint8 1 .............................. <1>
  [ 96] lt ...................................... <pwidth < 1>
  [ 97] jmpifz [104] ............................ if pwidth < 1 then
  [100] pushint8 1 .............................. <1>
  [102] setprop 40 .............................. pwidth = 1
  [104] getprop 696 ............................. <pheight>
  [107] pushint8 1 .............................. <1>
  [109] lt ...................................... <pheight < 1>
  [110] jmpifz [118] ............................ if pheight < 1 then
  [113] pushint8 1 .............................. <1>
  [115] setprop 696 ............................. pheight = 1
  [118] getprop 40 .............................. <pwidth>
  [120] getprop 785 ............................. <pCellWidth>
  [123] mul ..................................... <pwidth * pCellWidth>
  [124] pushint8 1 .............................. <1>
  [126] add ..................................... <(pwidth * pCellWidth) + 1>
  [127] getprop 787 ............................. <pMarginLeft>
  [130] add ..................................... <(pwidth * pCellWidth) + 1 + pMarginLeft>
  [131] getprop 788 ............................. <pMarginRight>
  [134] add ..................................... <(pwidth * pCellWidth) + 1 + pMarginLeft + pMarginRight>
  [135] setprop 800 ............................. pImageWidth = (pwidth * pCellWidth) + 1 + pMarginLeft + pMarginRight
  [138] getprop 696 ............................. <pheight>
  [141] getprop 786 ............................. <pCellHeight>
  [144] mul ..................................... <pheight * pCellHeight>
  [145] pushint8 1 .............................. <1>
  [147] add ..................................... <(pheight * pCellHeight) + 1>
  [148] getprop 789 ............................. <pMarginTop>
  [151] add ..................................... <(pheight * pCellHeight) + 1 + pMarginTop>
  [152] getprop 790 ............................. <pMarginBottom>
  [155] add ..................................... <(pheight * pCellHeight) + 1 + pMarginTop + pMarginBottom>
  [156] setprop 801 ............................. pImageHeight = (pheight * pCellHeight) + 1 + pMarginTop + pMarginBottom
  [159] pushint8 1 .............................. <1>
  [161] pusharglistnoret 1 ...................... <1>
  [163] extcall 37 .............................. return 1
  [165] ret
end

on getPicture me, tImg
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 783 ............................. <me.drawBackground()>
  [  7] setlocal 0 .............................. tCanvas = me.drawBackground()
  [  9] getprop 792 ............................. <pDealList>
  [ 12] pusharglist 1 ........................... <pDealList>
  [ 14] objcall 48 .............................. <pDealList.count()>
  [ 16] setlocal 1 .............................. tLimit = pDealList.count()
  [ 18] getprop 696 ............................. <pheight>
  [ 21] getprop 40 .............................. <pwidth>
  [ 23] mul ..................................... <pheight * pwidth>
  [ 24] getlocal 1 .............................. <tLimit>
  [ 26] lt ...................................... <(pheight * pwidth) < tLimit>
  [ 27] jmpifz [ 38] ............................ if (pheight * pwidth) < tLimit then
  [ 30] getprop 696 ............................. <pheight>
  [ 33] getprop 40 .............................. <pwidth>
  [ 35] mul ..................................... <pheight * pwidth>
  [ 36] setlocal 1 .............................. tLimit = pheight * pwidth
  [ 38] pushsymb 559 ............................ <#catalogue>
  [ 41] pusharglist 1 ........................... <#catalogue>
  [ 43] extcall 471 ............................. <getThread(#catalogue)>
  [ 46] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 48] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [ 50] pusharglist 1 ........................... <getThread(#catalogue).getComponent()>
  [ 52] objcall 264 ............................. <getThread(#catalogue).getComponent().getPageItemDownloader()>
  [ 55] setlocal 2 .............................. tDownloader = getThread(#catalogue).getComponent().getPageItemDownloader()
  [ 57] getlocal 1 .............................. <tLimit>
  [ 59] setlocal 3
  [ 61] getlocal 3
  [ 63] pushint8 1 .............................. <1>
  [ 65] gteq
  [ 66] jmpifz [295] ............................ repeat with i = tLimit down to 1
  [ 69] getprop 792 ............................. <pDealList>
  [ 72] getlocal 3 .............................. <i>
  [ 74] pusharglist 2 ........................... <pDealList, i>
  [ 76] objcall 41 .............................. <pDealList[i]>
  [ 78] pushcons 15 ............................. <"class">
  [ 80] pusharglist 2 ........................... <pDealList[i], "class">
  [ 82] objcall 41 .............................. <pDealList[i]["class"]>
  [ 84] pusharglist 1 ........................... <pDealList[i]["class"]>
  [ 86] extcall 78 .............................. <voidp(pDealList[i]["class"])>
  [ 88] jmpifz [110] ............................ if voidp(pDealList[i]["class"]) then
  [ 91] getparam 0 .............................. <me>
  [ 93] pushcons 16 ............................. <"class property missing">
  [ 95] pushsymb 144 ............................ <#showPreviewImage>
  [ 97] pushsymb 58 ............................. <#minor>
  [ 99] pusharglist 4 ........................... <me, "class property missing", #showPreviewImage, #minor>
  [101] extcall 46 .............................. <error(me, "class property missing", #showPreviewImage, #minor)>
  [103] pusharglistnoret 1 ...................... <error(me, "class property missing", #showPreviewImage, #minor)>
  [105] extcall 37 .............................. return error(me, "class property missing", #showPreviewImage, #minor)
  [107] jmp [286] ............................... next repeat
  [110] getprop 792 ............................. <pDealList>
  [113] getlocal 3 .............................. <i>
  [115] pusharglist 2 ........................... <pDealList, i>
  [117] objcall 41 .............................. <pDealList[i]>
  [119] pushcons 15 ............................. <"class">
  [121] pusharglist 2 ........................... <pDealList[i], "class">
  [123] objcall 41 .............................. <pDealList[i]["class"]>
  [125] setlocal 4 .............................. tClass = pDealList[i]["class"]
  [127] getprop 792 ............................. <pDealList>
  [130] getlocal 3 .............................. <i>
  [132] pusharglist 2 ........................... <pDealList, i>
  [134] objcall 41 .............................. <pDealList[i]>
  [136] pushcons 17 ............................. <"partColors">
  [138] pusharglist 2 ........................... <pDealList[i], "partColors">
  [140] objcall 41 .............................. <pDealList[i]["partColors"]>
  [142] setlocal 5 .............................. tpartColors = pDealList[i]["partColors"]
  [144] getprop 792 ............................. <pDealList>
  [147] getlocal 3 .............................. <i>
  [149] pusharglist 2 ........................... <pDealList, i>
  [151] objcall 41 .............................. <pDealList[i]>
  [153] pushcons 18 ............................. <"count">
  [155] pusharglist 2 ........................... <pDealList[i], "count">
  [157] objcall 41 .............................. <pDealList[i]["count"]>
  [159] setlocal 6 .............................. tCount = pDealList[i]["count"]
  [161] getlocal 4 .............................. <tClass>
  [163] pusharglist 1 ........................... <tClass>
  [165] localcall 7 ............................. <getImage(tClass)>
  [167] setlocal 7 .............................. tmember = getImage(tClass)
  [169] getlocal 7 .............................. <tmember>
  [171] pushzero ................................ <0>
  [172] nteq .................................... <tmember <> 0>
  [173] jmpifz [286] ............................ if tmember <> 0 then
  [176] getparam 0 .............................. <me>
  [178] getlocal 4 .............................. <tClass>
  [180] pusharglist 2 ........................... <me, tClass>
  [182] objcall 149 ............................. <me.getClassAsset(tClass)>
  [184] setlocal 8 .............................. tAssetId = me.getClassAsset(tClass)
  [186] getlocal 2 .............................. <tDownloader>
  [188] getlocal 8 .............................. <tAssetId>
  [190] pusharglist 2 ........................... <tDownloader, tAssetId>
  [192] objcall 265 ............................. <tDownloader.isAssetDownloading(tAssetId)>
  [195] not ..................................... <not tDownloader.isAssetDownloading(tAssetId)>
  [196] jmpifz [261] ............................ if not tDownloader.isAssetDownloading(tAssetId) then / else
  [199] getlocal 4 .............................. <tClass>
  [201] pusharglist 1 ........................... <tClass>
  [203] extcall 78 .............................. <voidp(tClass)>
  [205] not ..................................... <not voidp(tClass)>
  [206] getlocal 5 .............................. <tpartColors>
  [208] pusharglist 1 ........................... <tpartColors>
  [210] extcall 78 .............................. <voidp(tpartColors)>
  [212] not ..................................... <not voidp(tpartColors)>
  [213] and ..................................... <not voidp(tClass) and not voidp(tpartColors)>
  [214] jmpifz [248] ............................ if not voidp(tClass) and not voidp(tpartColors) then / else
  [217] pushcons 19 ............................. <"Preview_renderer">
  [219] pusharglist 1 ........................... <"Preview_renderer">
  [221] extcall 184 ............................. <getObject("Preview_renderer")>
  [223] pusharglist 0 ........................... <>
  [225] extcall 55 .............................. <VOID>
  [227] pusharglist 0 ........................... <>
  [229] extcall 55 .............................. <VOID>
  [231] getlocal 5 .............................. <tpartColors>
  [233] getlocal 4 .............................. <tClass>
  [235] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, VOID, tpartColors, tClass>
  [237] objcall 145 ............................. <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tpartColors, tClass)>
  [239] pusharglist 1 ........................... <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tpartColors, tClass)>
  [241] objcall 107 ............................. <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tpartColors, tClass).duplicate()>
  [243] setlocal 9 .............................. tRenderedImage = getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tpartColors, tClass).duplicate()
  [245] jmp [258]
  [248] getlocal 7 .............................. <tmember>
  [250] pusharglist 1 ........................... <tmember>
  [252] extcall 255 ............................. <member(tmember)>
  [254] getobjprop 17 ........................... <member(tmember).image>
  [256] setlocal 9 .............................. tRenderedImage = member(tmember).image
  [258] jmp [271]
  [261] pushcons 20 ............................. <"ctlg_loading_icon2">
  [263] pusharglist 1 ........................... <"ctlg_loading_icon2">
  [265] extcall 21 .............................. <getMember("ctlg_loading_icon2")>
  [267] getobjprop 17 ........................... <getMember("ctlg_loading_icon2").image>
  [269] setlocal 9 .............................. tRenderedImage = getMember("ctlg_loading_icon2").image
  [271] getparam 0 .............................. <me>
  [273] getlocal 0 .............................. <tCanvas>
  [275] getlocal 9 .............................. <tRenderedImage>
  [277] getlocal 3 .............................. <i>
  [279] getlocal 6 .............................. <tCount>
  [281] pusharglistnoret 5 ...................... <me, tCanvas, tRenderedImage, i, tCount>
  [283] objcall 784 ............................. me.drawItem(tCanvas, tRenderedImage, i, tCount)
  [286] pushint8 -1
  [288] getlocal 3
  [290] add
  [291] setlocal 3
  [293] endrepeat [ 61]
  [295] getparam 1 .............................. <tImg>
  [297] pusharglist 1 ........................... <tImg>
  [299] extcall 78 .............................. <voidp(tImg)>
  [301] jmpifz [311] ............................ if voidp(tImg) then / else
  [304] getlocal 0 .............................. <tCanvas>
  [306] setparam 1 .............................. tImg = tCanvas
  [308] jmp [387]
  [311] getparam 1 .............................. <tImg>
  [313] getobjprop 69 ........................... <tImg.rect>
  [315] getlocal 0 .............................. <tCanvas>
  [317] getobjprop 69 ........................... <tCanvas.rect>
  [319] sub ..................................... <tImg.rect - tCanvas.rect>
  [320] setlocal 10 ............................. tdestrect = tImg.rect - tCanvas.rect
  [322] getlocal 10 ............................. <tdestrect>
  [324] getobjprop 33 ........................... <tdestrect.width>
  [326] pushint8 2 .............................. <2>
  [328] div ..................................... <tdestrect.width / 2>
  [329] getlocal 10 ............................. <tdestrect>
  [331] getobjprop 34 ........................... <tdestrect.height>
  [333] pushint8 2 .............................. <2>
  [335] div ..................................... <tdestrect.height / 2>
  [336] getlocal 0 .............................. <tCanvas>
  [338] getobjprop 33 ........................... <tCanvas.width>
  [340] getlocal 10 ............................. <tdestrect>
  [342] getobjprop 33 ........................... <tdestrect.width>
  [344] pushint8 2 .............................. <2>
  [346] div ..................................... <tdestrect.width / 2>
  [347] add ..................................... <tCanvas.width + (tdestrect.width / 2)>
  [348] getlocal 10 ............................. <tdestrect>
  [350] getobjprop 34 ........................... <tdestrect.height>
  [352] pushint8 2 .............................. <2>
  [354] div ..................................... <tdestrect.height / 2>
  [355] getlocal 0 .............................. <tCanvas>
  [357] getobjprop 34 ........................... <tCanvas.height>
  [359] add ..................................... <(tdestrect.height / 2) + tCanvas.height>
  [360] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height>
  [362] extcall 69 .............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height)>
  [364] setlocal 10 ............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height)
  [366] getparam 1 .............................. <tImg>
  [368] getlocal 0 .............................. <tCanvas>
  [370] getlocal 10 ............................. <tdestrect>
  [372] getlocal 0 .............................. <tCanvas>
  [374] getobjprop 69 ........................... <tCanvas.rect>
  [376] pushsymb 84 ............................. <#ink>
  [378] pushint8 36 ............................. <36>
  [380] pusharglist 2 ........................... <[#ink: 36]>
  [382] pushproplist ............................ <[#ink: 36]>
  [383] pusharglistnoret 5 ...................... <tImg, tCanvas, tdestrect, tCanvas.rect, [#ink: 36]>
  [385] objcall 77 .............................. tImg.copyPixels(tCanvas, tdestrect, tCanvas.rect, [#ink: 36])
  [387] getparam 1 .............................. <tImg>
  [389] pusharglist 1 ........................... <tImg>
  [391] objcall 806 ............................. <tImg.trimWhiteSpace()>
  [394] pusharglistnoret 1 ...................... <tImg.trimWhiteSpace()>
  [396] extcall 37 .............................. return tImg.trimWhiteSpace()
  [398] ret
end

on renderDealPreviewImage me, tDealNumber, tDealList, tWidth, tHeight
  [  0] getparam 2 .............................. <tDealList>
  [  2] getobjprop 48 ........................... <tDealList.count>
  [  4] pushzero ................................ <0>
  [  5] eq ...................................... <tDealList.count = 0>
  [  6] jmpifz [ 17] ............................ if tDealList.count = 0 then
  [  9] pusharglist 0 ........................... <>
  [ 11] extcall 55 .............................. <VOID>
  [ 13] pusharglistnoret 1 ...................... <VOID>
  [ 15] extcall 37 .............................. return VOID
  [ 17] getparam 2 .............................. <tDealList>
  [ 19] getobjprop 48 ........................... <tDealList.count>
  [ 21] pushint8 1 .............................. <1>
  [ 23] gt ...................................... <tDealList.count > 1>
  [ 24] jmpifz [301] ............................ if tDealList.count > 1 then / else
  [ 27] pushcons 21 ............................. <"ctlg_pic_deal_icon_narrow">
  [ 29] setlocal 0 .............................. tmember = "ctlg_pic_deal_icon_narrow"
  [ 31] getlocal 0 .............................. <tmember>
  [ 33] pusharglist 1 ........................... <tmember>
  [ 35] extcall 63 .............................. <memberExists(tmember)>
  [ 37] jmpifz [286] ............................ if memberExists(tmember) then / else
  [ 40] getlocal 0 .............................. <tmember>
  [ 42] pusharglist 1 ........................... <tmember>
  [ 44] extcall 652 ............................. <getmemnum(tmember)>
  [ 47] pusharglist 1 ........................... <getmemnum(tmember)>
  [ 49] extcall 255 ............................. <member(getmemnum(tmember))>
  [ 51] setlocal 1 .............................. tMem = member(getmemnum(tmember))
  [ 53] getlocal 1 .............................. <tMem>
  [ 55] getobjprop 33 ........................... <tMem.width>
  [ 57] getlocal 1 .............................. <tMem>
  [ 59] getobjprop 34 ........................... <tMem.height>
  [ 61] pushint8 32 ............................. <32>
  [ 63] pusharglist 3 ........................... <tMem.width, tMem.height, 32>
  [ 65] extcall 17 .............................. <image(tMem.width, tMem.height, 32)>
  [ 67] setlocal 2 .............................. tRenderedImage = image(tMem.width, tMem.height, 32)
  [ 69] getlocal 2 .............................. <tRenderedImage>
  [ 71] getlocal 1 .............................. <tMem>
  [ 73] getobjprop 17 ........................... <tMem.image>
  [ 75] getlocal 1 .............................. <tMem>
  [ 77] getobjprop 69 ........................... <tMem.rect>
  [ 79] getlocal 1 .............................. <tMem>
  [ 81] getobjprop 69 ........................... <tMem.rect>
  [ 83] pusharglistnoret 4 ...................... <tRenderedImage, tMem.image, tMem.rect, tMem.rect>
  [ 85] objcall 77 .............................. tRenderedImage.copyPixels(tMem.image, tMem.rect, tMem.rect)
  [ 87] getprop 793 ............................. <pCountWriterID>
  [ 90] pusharglist 1 ........................... <pCountWriterID>
  [ 92] extcall 776 ............................. <getWriter(pCountWriterID)>
  [ 95] setlocal 3 .............................. tWriteObj = getWriter(pCountWriterID)
  [ 97] getlocal 3 .............................. <tWriteObj>
  [ 99] getparam 1 .............................. <tDealNumber>
  [101] pusharglist 1 ........................... <tDealNumber>
  [103] extcall 291 ............................. <string(tDealNumber)>
  [106] pusharglist 2 ........................... <tWriteObj, string(tDealNumber)>
  [108] objcall 735 ............................. <tWriteObj.render(string(tDealNumber))>
  [111] setlocal 4 .............................. tCountImg = tWriteObj.render(string(tDealNumber))
  [113] getlocal 4 .............................. <tCountImg>
  [115] getobjprop 33 ........................... <tCountImg.width>
  [117] getlocal 4 .............................. <tCountImg>
  [119] getobjprop 34 ........................... <tCountImg.height>
  [121] pushint8 32 ............................. <32>
  [123] pusharglist 3 ........................... <tCountImg.width, tCountImg.height, 32>
  [125] extcall 17 .............................. <image(tCountImg.width, tCountImg.height, 32)>
  [127] setlocal 5 .............................. tCountImgTrimmed = image(tCountImg.width, tCountImg.height, 32)
  [129] getlocal 5 .............................. <tCountImgTrimmed>
  [131] getlocal 4 .............................. <tCountImg>
  [133] getlocal 4 .............................. <tCountImg>
  [135] getobjprop 69 ........................... <tCountImg.rect>
  [137] getlocal 4 .............................. <tCountImg>
  [139] getobjprop 69 ........................... <tCountImg.rect>
  [141] pushsymb 84 ............................. <#ink>
  [143] pushint8 36 ............................. <36>
  [145] pusharglist 2 ........................... <[#ink: 36]>
  [147] pushproplist ............................ <[#ink: 36]>
  [148] pusharglistnoret 5 ...................... <tCountImgTrimmed, tCountImg, tCountImg.rect, tCountImg.rect, [#ink: 36]>
  [150] objcall 77 .............................. tCountImgTrimmed.copyPixels(tCountImg, tCountImg.rect, tCountImg.rect, [#ink: 36])
  [152] getlocal 5 .............................. <tCountImgTrimmed>
  [154] pusharglist 1 ........................... <tCountImgTrimmed>
  [156] objcall 806 ............................. <tCountImgTrimmed.trimWhiteSpace()>
  [159] setlocal 5 .............................. tCountImgTrimmed = tCountImgTrimmed.trimWhiteSpace()
  [161] getlocal 5 .............................. <tCountImgTrimmed>
  [163] pushsymb 69 ............................. <#rect>
  [165] pushint8 3 .............................. <3>
  [167] pusharglist 3 ........................... <tCountImgTrimmed, #rect, 3>
  [169] objcall 123 ............................. <tCountImgTrimmed.rect[3]>
  [171] getlocal 5 .............................. <tCountImgTrimmed>
  [173] pushsymb 69 ............................. <#rect>
  [175] pushint8 1 .............................. <1>
  [177] pusharglist 3 ........................... <tCountImgTrimmed, #rect, 1>
  [179] objcall 123 ............................. <tCountImgTrimmed.rect[1]>
  [181] sub ..................................... <tCountImgTrimmed.rect[3] - tCountImgTrimmed.rect[1]>
  [182] setlocal 6 .............................. tNumberWd = tCountImgTrimmed.rect[3] - tCountImgTrimmed.rect[1]
  [184] getlocal 5 .............................. <tCountImgTrimmed>
  [186] pushsymb 69 ............................. <#rect>
  [188] pushint8 4 .............................. <4>
  [190] pusharglist 3 ........................... <tCountImgTrimmed, #rect, 4>
  [192] objcall 123 ............................. <tCountImgTrimmed.rect[4]>
  [194] getlocal 5 .............................. <tCountImgTrimmed>
  [196] pushsymb 69 ............................. <#rect>
  [198] pushint8 2 .............................. <2>
  [200] pusharglist 3 ........................... <tCountImgTrimmed, #rect, 2>
  [202] objcall 123 ............................. <tCountImgTrimmed.rect[2]>
  [204] sub ..................................... <tCountImgTrimmed.rect[4] - tCountImgTrimmed.rect[2]>
  [205] setlocal 7 .............................. tNumberHt = tCountImgTrimmed.rect[4] - tCountImgTrimmed.rect[2]
  [207] pushint8 20 ............................. <20>
  [209] getlocal 6 .............................. <tNumberWd>
  [211] pushint8 1 .............................. <1>
  [213] add ..................................... <tNumberWd + 1>
  [214] pushint8 2 .............................. <2>
  [216] div ..................................... <(tNumberWd + 1) / 2>
  [217] sub ..................................... <20 - ((tNumberWd + 1) / 2)>
  [218] pushint8 20 ............................. <20>
  [220] getlocal 7 .............................. <tNumberHt>
  [222] pushint8 1 .............................. <1>
  [224] add ..................................... <tNumberHt + 1>
  [225] pushint8 2 .............................. <2>
  [227] div ..................................... <(tNumberHt + 1) / 2>
  [228] sub ..................................... <20 - ((tNumberHt + 1) / 2)>
  [229] pushint8 20 ............................. <20>
  [231] getlocal 6 .............................. <tNumberWd>
  [233] pushint8 1 .............................. <1>
  [235] add ..................................... <tNumberWd + 1>
  [236] pushint8 2 .............................. <2>
  [238] div ..................................... <(tNumberWd + 1) / 2>
  [239] sub ..................................... <20 - ((tNumberWd + 1) / 2)>
  [240] pushint8 20 ............................. <20>
  [242] getlocal 7 .............................. <tNumberHt>
  [244] pushint8 1 .............................. <1>
  [246] add ..................................... <tNumberHt + 1>
  [247] pushint8 2 .............................. <2>
  [249] div ..................................... <(tNumberHt + 1) / 2>
  [250] sub ..................................... <20 - ((tNumberHt + 1) / 2)>
  [251] pusharglist 4 ........................... <20 - ((tNumberWd + 1) / 2), 20 - ((tNumberHt + 1) / 2), 20 - ((tNumberWd + 1) / 2), 20 - ((tNumberHt + 1) / 2)>
  [253] extcall 69 .............................. <rect(20 - ((tNumberWd + 1) / 2), 20 - ((tNumberHt + 1) / 2), 20 - ((tNumberWd + 1) / 2), 20 - ((tNumberHt + 1) / 2))>
  [255] setlocal 8 .............................. tOffsetRect = rect(20 - ((tNumberWd + 1) / 2), 20 - ((tNumberHt + 1) / 2), 20 - ((tNumberWd + 1) / 2), 20 - ((tNumberHt + 1) / 2))
  [257] getlocal 2 .............................. <tRenderedImage>
  [259] getlocal 4 .............................. <tCountImg>
  [261] getlocal 4 .............................. <tCountImg>
  [263] getobjprop 69 ........................... <tCountImg.rect>
  [265] getlocal 8 .............................. <tOffsetRect>
  [267] add ..................................... <tCountImg.rect + tOffsetRect>
  [268] getlocal 4 .............................. <tCountImg>
  [270] getobjprop 69 ........................... <tCountImg.rect>
  [272] pushsymb 84 ............................. <#ink>
  [274] pushint8 36 ............................. <36>
  [276] pusharglist 2 ........................... <[#ink: 36]>
  [278] pushproplist ............................ <[#ink: 36]>
  [279] pusharglistnoret 5 ...................... <tRenderedImage, tCountImg, tCountImg.rect + tOffsetRect, tCountImg.rect, [#ink: 36]>
  [281] objcall 77 .............................. tRenderedImage.copyPixels(tCountImg, tCountImg.rect + tOffsetRect, tCountImg.rect, [#ink: 36])
  [283] jmp [298]
  [286] pushint8 1 .............................. <1>
  [288] pushint8 1 .............................. <1>
  [290] pushint8 32 ............................. <32>
  [292] pusharglist 3 ........................... <1, 1, 32>
  [294] extcall 17 .............................. <image(1, 1, 32)>
  [296] setlocal 2 .............................. tRenderedImage = image(1, 1, 32)
  [298] jmp [563]
  [301] getparam 2 .............................. <tDealList>
  [303] pushint8 1 .............................. <1>
  [305] pusharglist 2 ........................... <tDealList, 1>
  [307] objcall 41 .............................. <tDealList[1]>
  [309] pushsymb 547 ............................ <#partColors>
  [312] pusharglist 2 ........................... <tDealList[1], #partColors>
  [314] objcall 41 .............................. <tDealList[1][#partColors]>
  [316] setlocal 9 .............................. tpartColors = tDealList[1][#partColors]
  [318] getparam 2 .............................. <tDealList>
  [320] pushint8 1 .............................. <1>
  [322] pusharglist 2 ........................... <tDealList, 1>
  [324] objcall 41 .............................. <tDealList[1]>
  [326] pushsymb 268 ............................ <#class>
  [329] pusharglist 2 ........................... <tDealList[1], #class>
  [331] objcall 41 .............................. <tDealList[1][#class]>
  [333] setlocal 10 ............................. tClass = tDealList[1][#class]
  [335] getparam 2 .............................. <tDealList>
  [337] pushint8 1 .............................. <1>
  [339] pusharglist 2 ........................... <tDealList, 1>
  [341] objcall 41 .............................. <tDealList[1]>
  [343] pushsymb 48 ............................. <#count>
  [345] pusharglist 2 ........................... <tDealList[1], #count>
  [347] objcall 41 .............................. <tDealList[1][#count]>
  [349] setlocal 11 ............................. tCount = tDealList[1][#count]
  [351] getparam 3 .............................. <tWidth>
  [353] getparam 4 .............................. <tHeight>
  [355] pushint8 32 ............................. <32>
  [357] pusharglist 3 ........................... <tWidth, tHeight, 32>
  [359] extcall 17 .............................. <image(tWidth, tHeight, 32)>
  [361] setlocal 12 ............................. tBackgroundImage = image(tWidth, tHeight, 32)
  [363] pushcons 19 ............................. <"Preview_renderer">
  [365] pusharglist 1 ........................... <"Preview_renderer">
  [367] extcall 184 ............................. <getObject("Preview_renderer")>
  [369] pusharglist 0 ........................... <>
  [371] extcall 55 .............................. <VOID>
  [373] pusharglist 0 ........................... <>
  [375] extcall 55 .............................. <VOID>
  [377] getlocal 9 .............................. <tpartColors>
  [379] getlocal 10 ............................. <tClass>
  [381] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, VOID, tpartColors, tClass>
  [383] objcall 145 ............................. <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tpartColors, tClass)>
  [385] setlocal 2 .............................. tRenderedImage = getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tpartColors, tClass)
  [387] getlocal 2 .............................. <tRenderedImage>
  [389] pushsymb 69 ............................. <#rect>
  [391] pushint8 3 .............................. <3>
  [393] pusharglist 3 ........................... <tRenderedImage, #rect, 3>
  [395] objcall 123 ............................. <tRenderedImage.rect[3]>
  [397] getlocal 2 .............................. <tRenderedImage>
  [399] pushsymb 69 ............................. <#rect>
  [401] pushint8 1 .............................. <1>
  [403] pusharglist 3 ........................... <tRenderedImage, #rect, 1>
  [405] objcall 123 ............................. <tRenderedImage.rect[1]>
  [407] sub ..................................... <tRenderedImage.rect[3] - tRenderedImage.rect[1]>
  [408] setlocal 13 ............................. tRenderWd = tRenderedImage.rect[3] - tRenderedImage.rect[1]
  [410] getlocal 2 .............................. <tRenderedImage>
  [412] pushsymb 69 ............................. <#rect>
  [414] pushint8 4 .............................. <4>
  [416] pusharglist 3 ........................... <tRenderedImage, #rect, 4>
  [418] objcall 123 ............................. <tRenderedImage.rect[4]>
  [420] getlocal 2 .............................. <tRenderedImage>
  [422] pushsymb 69 ............................. <#rect>
  [424] pushint8 2 .............................. <2>
  [426] pusharglist 3 ........................... <tRenderedImage, #rect, 2>
  [428] objcall 123 ............................. <tRenderedImage.rect[2]>
  [430] sub ..................................... <tRenderedImage.rect[4] - tRenderedImage.rect[2]>
  [431] setlocal 14 ............................. tRenderHt = tRenderedImage.rect[4] - tRenderedImage.rect[2]
  [433] getparam 3 .............................. <tWidth>
  [435] getlocal 13 ............................. <tRenderWd>
  [437] sub ..................................... <tWidth - tRenderWd>
  [438] pushint8 2 .............................. <2>
  [440] div ..................................... <(tWidth - tRenderWd) / 2>
  [441] pushint8 8 .............................. <8>
  [443] getparam 4 .............................. <tHeight>
  [445] getlocal 14 ............................. <tRenderHt>
  [447] sub ..................................... <tHeight - tRenderHt>
  [448] pusharglist 2 ........................... <8, tHeight - tRenderHt>
  [450] extcall 747 ............................. <min(8, tHeight - tRenderHt)>
  [453] getparam 3 .............................. <tWidth>
  [455] getlocal 13 ............................. <tRenderWd>
  [457] sub ..................................... <tWidth - tRenderWd>
  [458] pushint8 2 .............................. <2>
  [460] div ..................................... <(tWidth - tRenderWd) / 2>
  [461] pushint8 8 .............................. <8>
  [463] getparam 4 .............................. <tHeight>
  [465] getlocal 14 ............................. <tRenderHt>
  [467] sub ..................................... <tHeight - tRenderHt>
  [468] pusharglist 2 ........................... <8, tHeight - tRenderHt>
  [470] extcall 747 ............................. <min(8, tHeight - tRenderHt)>
  [473] pusharglist 4 ........................... <(tWidth - tRenderWd) / 2, min(8, tHeight - tRenderHt), (tWidth - tRenderWd) / 2, min(8, tHeight - tRenderHt)>
  [475] extcall 69 .............................. <rect((tWidth - tRenderWd) / 2, min(8, tHeight - tRenderHt), (tWidth - tRenderWd) / 2, min(8, tHeight - tRenderHt))>
  [477] setlocal 8 .............................. tOffsetRect = rect((tWidth - tRenderWd) / 2, min(8, tHeight - tRenderHt), (tWidth - tRenderWd) / 2, min(8, tHeight - tRenderHt))
  [479] getlocal 12 ............................. <tBackgroundImage>
  [481] getlocal 2 .............................. <tRenderedImage>
  [483] getlocal 2 .............................. <tRenderedImage>
  [485] getobjprop 69 ........................... <tRenderedImage.rect>
  [487] getlocal 8 .............................. <tOffsetRect>
  [489] add ..................................... <tRenderedImage.rect + tOffsetRect>
  [490] getlocal 2 .............................. <tRenderedImage>
  [492] getobjprop 69 ........................... <tRenderedImage.rect>
  [494] pushsymb 84 ............................. <#ink>
  [496] pushint8 36 ............................. <36>
  [498] pusharglist 2 ........................... <[#ink: 36]>
  [500] pushproplist ............................ <[#ink: 36]>
  [501] pusharglistnoret 5 ...................... <tBackgroundImage, tRenderedImage, tRenderedImage.rect + tOffsetRect, tRenderedImage.rect, [#ink: 36]>
  [503] objcall 77 .............................. tBackgroundImage.copyPixels(tRenderedImage, tRenderedImage.rect + tOffsetRect, tRenderedImage.rect, [#ink: 36])
  [505] getparam 0 .............................. <me>
  [507] getlocal 11 ............................. <tCount>
  [509] pusharglist 2 ........................... <me, tCount>
  [511] objcall 632 ............................. <me.getNumberImage(tCount)>
  [514] setlocal 4 .............................. tCountImg = me.getNumberImage(tCount)
  [516] pushint8 2 .............................. <2>
  [518] pushzero ................................ <0>
  [519] pushint8 2 .............................. <2>
  [521] pushzero ................................ <0>
  [522] pusharglist 4 ........................... <2, 0, 2, 0>
  [524] extcall 69 .............................. <rect(2, 0, 2, 0)>
  [526] setlocal 8 .............................. tOffsetRect = rect(2, 0, 2, 0)
  [528] getlocal 12 ............................. <tBackgroundImage>
  [530] getlocal 4 .............................. <tCountImg>
  [532] getlocal 4 .............................. <tCountImg>
  [534] getobjprop 69 ........................... <tCountImg.rect>
  [536] getlocal 8 .............................. <tOffsetRect>
  [538] add ..................................... <tCountImg.rect + tOffsetRect>
  [539] getlocal 4 .............................. <tCountImg>
  [541] getobjprop 69 ........................... <tCountImg.rect>
  [543] pushsymb 84 ............................. <#ink>
  [545] pushint8 36 ............................. <36>
  [547] pusharglist 2 ........................... <[#ink: 36]>
  [549] pushproplist ............................ <[#ink: 36]>
  [550] pusharglistnoret 5 ...................... <tBackgroundImage, tCountImg, tCountImg.rect + tOffsetRect, tCountImg.rect, [#ink: 36]>
  [552] objcall 77 .............................. tBackgroundImage.copyPixels(tCountImg, tCountImg.rect + tOffsetRect, tCountImg.rect, [#ink: 36])
  [554] getlocal 12 ............................. <tBackgroundImage>
  [556] pusharglist 1 ........................... <tBackgroundImage>
  [558] objcall 806 ............................. <tBackgroundImage.trimWhiteSpace()>
  [561] setlocal 2 .............................. tRenderedImage = tBackgroundImage.trimWhiteSpace()
  [563] getlocal 2 .............................. <tRenderedImage>
  [565] pusharglistnoret 1 ...................... <tRenderedImage>
  [567] extcall 37 .............................. return tRenderedImage
  [569] ret
end

on drawBackground me
  [  0] getprop 800 ............................. <pImageWidth>
  [  3] getprop 801 ............................. <pImageHeight>
  [  6] pushint8 32 ............................. <32>
  [  8] pusharglist 3 ........................... <pImageWidth, pImageHeight, 32>
  [ 10] extcall 17 .............................. <image(pImageWidth, pImageHeight, 32)>
  [ 12] setlocal 0 .............................. tCanvas = image(pImageWidth, pImageHeight, 32)
  [ 14] pushzero ................................ <0>
  [ 15] setlocal 1 .............................. tFlipFlag = 0
  [ 17] pushcons 22 ............................. <"ctlg_dyndeal_background">
  [ 19] pusharglist 1 ........................... <"ctlg_dyndeal_background">
  [ 21] extcall 63 .............................. <memberExists("ctlg_dyndeal_background")>
  [ 23] jmpifz [ 57] ............................ if memberExists("ctlg_dyndeal_background") then
  [ 26] pushcons 22 ............................. <"ctlg_dyndeal_background">
  [ 28] pusharglist 1 ........................... <"ctlg_dyndeal_background">
  [ 30] extcall 652 ............................. <getmemnum("ctlg_dyndeal_background")>
  [ 33] pusharglist 1 ........................... <getmemnum("ctlg_dyndeal_background")>
  [ 35] extcall 255 ............................. <member(getmemnum("ctlg_dyndeal_background"))>
  [ 37] getobjprop 17 ........................... <member(getmemnum("ctlg_dyndeal_background")).image>
  [ 39] setlocal 2 .............................. tImage = member(getmemnum("ctlg_dyndeal_background")).image
  [ 41] getlocal 0 .............................. <tCanvas>
  [ 43] getlocal 2 .............................. <tImage>
  [ 45] getlocal 2 .............................. <tImage>
  [ 47] getobjprop 69 ........................... <tImage.rect>
  [ 49] getlocal 2 .............................. <tImage>
  [ 51] getobjprop 69 ........................... <tImage.rect>
  [ 53] pusharglistnoret 4 ...................... <tCanvas, tImage, tImage.rect, tImage.rect>
  [ 55] objcall 77 .............................. tCanvas.copyPixels(tImage, tImage.rect, tImage.rect)
  [ 57] getlocal 0 .............................. <tCanvas>
  [ 59] pusharglistnoret 1 ...................... <tCanvas>
  [ 61] extcall 37 .............................. return tCanvas
  [ 63] ret
end

on drawItem me, tCanvas, tImage, tIndex, tCount
  [  0] getparam 3 .............................. <tIndex>
  [  2] pushint8 1 .............................. <1>
  [  4] sub ..................................... <tIndex - 1>
  [  5] getprop 40 .............................. <pwidth>
  [  7] mod ..................................... <(tIndex - 1) mod pwidth>
  [  8] getprop 785 ............................. <pCellWidth>
  [ 11] mul ..................................... <(tIndex - 1) mod pwidth * pCellWidth>
  [ 12] getprop 787 ............................. <pMarginLeft>
  [ 15] add ..................................... <((tIndex - 1) mod pwidth * pCellWidth) + pMarginLeft>
  [ 16] setlocal 0 .............................. tX = ((tIndex - 1) mod pwidth * pCellWidth) + pMarginLeft
  [ 18] getparam 3 .............................. <tIndex>
  [ 20] pushint8 1 .............................. <1>
  [ 22] sub ..................................... <tIndex - 1>
  [ 23] getprop 40 .............................. <pwidth>
  [ 25] div ..................................... <(tIndex - 1) / pwidth>
  [ 26] getprop 786 ............................. <pCellHeight>
  [ 29] mul ..................................... <(tIndex - 1) / pwidth * pCellHeight>
  [ 30] getprop 789 ............................. <pMarginTop>
  [ 33] add ..................................... <((tIndex - 1) / pwidth * pCellHeight) + pMarginTop>
  [ 34] setlocal 1 .............................. tY = ((tIndex - 1) / pwidth * pCellHeight) + pMarginTop
  [ 36] getlocal 0 .............................. <tX>
  [ 38] getprop 785 ............................. <pCellWidth>
  [ 41] getparam 2 .............................. <tImage>
  [ 43] pushsymb 69 ............................. <#rect>
  [ 45] pushint8 3 .............................. <3>
  [ 47] pusharglist 3 ........................... <tImage, #rect, 3>
  [ 49] objcall 123 ............................. <tImage.rect[3]>
  [ 51] getparam 2 .............................. <tImage>
  [ 53] pushsymb 69 ............................. <#rect>
  [ 55] pushint8 1 .............................. <1>
  [ 57] pusharglist 3 ........................... <tImage, #rect, 1>
  [ 59] objcall 123 ............................. <tImage.rect[1]>
  [ 61] sub ..................................... <tImage.rect[3] - tImage.rect[1]>
  [ 62] sub ..................................... <pCellWidth - (tImage.rect[3] - tImage.rect[1])>
  [ 63] pushint8 2 .............................. <2>
  [ 65] div ..................................... <(pCellWidth - (tImage.rect[3] - tImage.rect[1])) / 2>
  [ 66] add ..................................... <tX + ((pCellWidth - (tImage.rect[3] - tImage.rect[1])) / 2)>
  [ 67] setlocal 2 .............................. tCenteredX = tX + ((pCellWidth - (tImage.rect[3] - tImage.rect[1])) / 2)
  [ 69] getlocal 1 .............................. <tY>
  [ 71] getprop 786 ............................. <pCellHeight>
  [ 74] getparam 2 .............................. <tImage>
  [ 76] pushsymb 69 ............................. <#rect>
  [ 78] pushint8 4 .............................. <4>
  [ 80] pusharglist 3 ........................... <tImage, #rect, 4>
  [ 82] objcall 123 ............................. <tImage.rect[4]>
  [ 84] getparam 2 .............................. <tImage>
  [ 86] pushsymb 69 ............................. <#rect>
  [ 88] pushint8 2 .............................. <2>
  [ 90] pusharglist 3 ........................... <tImage, #rect, 2>
  [ 92] objcall 123 ............................. <tImage.rect[2]>
  [ 94] sub ..................................... <tImage.rect[4] - tImage.rect[2]>
  [ 95] sub ..................................... <pCellHeight - (tImage.rect[4] - tImage.rect[2])>
  [ 96] pushint8 2 .............................. <2>
  [ 98] div ..................................... <(pCellHeight - (tImage.rect[4] - tImage.rect[2])) / 2>
  [ 99] add ..................................... <tY + ((pCellHeight - (tImage.rect[4] - tImage.rect[2])) / 2)>
  [100] setlocal 3 .............................. tCenteredY = tY + ((pCellHeight - (tImage.rect[4] - tImage.rect[2])) / 2)
  [102] getparam 1 .............................. <tCanvas>
  [104] getparam 2 .............................. <tImage>
  [106] getparam 2 .............................. <tImage>
  [108] getobjprop 69 ........................... <tImage.rect>
  [110] getlocal 2 .............................. <tCenteredX>
  [112] getlocal 3 .............................. <tCenteredY>
  [114] getlocal 2 .............................. <tCenteredX>
  [116] getlocal 3 .............................. <tCenteredY>
  [118] pusharglist 4 ........................... <tCenteredX, tCenteredY, tCenteredX, tCenteredY>
  [120] extcall 69 .............................. <rect(tCenteredX, tCenteredY, tCenteredX, tCenteredY)>
  [122] add ..................................... <tImage.rect + rect(tCenteredX, tCenteredY, tCenteredX, tCenteredY)>
  [123] getparam 2 .............................. <tImage>
  [125] getobjprop 69 ........................... <tImage.rect>
  [127] pushsymb 84 ............................. <#ink>
  [129] pushint8 36 ............................. <36>
  [131] pusharglist 2 ........................... <[#ink: 36]>
  [133] pushproplist ............................ <[#ink: 36]>
  [134] pusharglistnoret 5 ...................... <tCanvas, tImage, tImage.rect + rect(tCenteredX, tCenteredY, tCenteredX, tCenteredY), tImage.rect, [#ink: 36]>
  [136] objcall 77 .............................. tCanvas.copyPixels(tImage, tImage.rect + rect(tCenteredX, tCenteredY, tCenteredX, tCenteredY), tImage.rect, [#ink: 36])
  [138] getparam 4 .............................. <tCount>
  [140] pushint8 1 .............................. <1>
  [142] gt ...................................... <tCount > 1>
  [143] jmpifz [317] ............................ if tCount > 1 then
  [146] getparam 0 .............................. <me>
  [148] getparam 4 .............................. <tCount>
  [150] pusharglist 2 ........................... <me, tCount>
  [152] objcall 632 ............................. <me.getNumberImage(tCount)>
  [155] setlocal 4 .............................. tCountImg = me.getNumberImage(tCount)
  [157] getlocal 0 .............................. <tX>
  [159] getprop 698 ............................. <pNumberPosX>
  [162] add ..................................... <tX + pNumberPosX>
  [163] getlocal 4 .............................. <tCountImg>
  [165] pushsymb 69 ............................. <#rect>
  [167] pushint8 3 .............................. <3>
  [169] pusharglist 3 ........................... <tCountImg, #rect, 3>
  [171] objcall 123 ............................. <tCountImg.rect[3]>
  [173] getlocal 4 .............................. <tCountImg>
  [175] pushsymb 69 ............................. <#rect>
  [177] pushint8 1 .............................. <1>
  [179] pusharglist 3 ........................... <tCountImg, #rect, 1>
  [181] objcall 123 ............................. <tCountImg.rect[1]>
  [183] sub ..................................... <tCountImg.rect[3] - tCountImg.rect[1]>
  [184] pushint8 2 .............................. <2>
  [186] div ..................................... <(tCountImg.rect[3] - tCountImg.rect[1]) / 2>
  [187] sub ..................................... <tX + pNumberPosX - ((tCountImg.rect[3] - tCountImg.rect[1]) / 2)>
  [188] setlocal 2 .............................. tCenteredX = tX + pNumberPosX - ((tCountImg.rect[3] - tCountImg.rect[1]) / 2)
  [190] getlocal 1 .............................. <tY>
  [192] getprop 699 ............................. <pNumberPosY>
  [195] add ..................................... <tY + pNumberPosY>
  [196] getlocal 4 .............................. <tCountImg>
  [198] pushsymb 69 ............................. <#rect>
  [200] pushint8 4 .............................. <4>
  [202] pusharglist 3 ........................... <tCountImg, #rect, 4>
  [204] objcall 123 ............................. <tCountImg.rect[4]>
  [206] getlocal 4 .............................. <tCountImg>
  [208] pushsymb 69 ............................. <#rect>
  [210] pushint8 2 .............................. <2>
  [212] pusharglist 3 ........................... <tCountImg, #rect, 2>
  [214] objcall 123 ............................. <tCountImg.rect[2]>
  [216] sub ..................................... <tCountImg.rect[4] - tCountImg.rect[2]>
  [217] pushint8 2 .............................. <2>
  [219] div ..................................... <(tCountImg.rect[4] - tCountImg.rect[2]) / 2>
  [220] sub ..................................... <tY + pNumberPosY - ((tCountImg.rect[4] - tCountImg.rect[2]) / 2)>
  [221] setlocal 3 .............................. tCenteredY = tY + pNumberPosY - ((tCountImg.rect[4] - tCountImg.rect[2]) / 2)
  [223] getprop 791 ............................. <pAlign>
  [226] pushzero ................................ <0>
  [227] eq ...................................... <pAlign = 0>
  [228] jmpifz [242] ............................ if pAlign = 0 then / else
  [231] getlocal 0 .............................. <tX>
  [233] getprop 698 ............................. <pNumberPosX>
  [236] add ..................................... <tX + pNumberPosX>
  [237] setlocal 2 .............................. tCenteredX = tX + pNumberPosX
  [239] jmp [281]
  [242] getprop 791 ............................. <pAlign>
  [245] pushint8 2 .............................. <2>
  [247] eq ...................................... <pAlign = 2>
  [248] jmpifz [281] ............................ if pAlign = 2 then
  [251] getlocal 0 .............................. <tX>
  [253] getprop 698 ............................. <pNumberPosX>
  [256] add ..................................... <tX + pNumberPosX>
  [257] getlocal 4 .............................. <tCountImg>
  [259] pushsymb 69 ............................. <#rect>
  [261] pushint8 3 .............................. <3>
  [263] pusharglist 3 ........................... <tCountImg, #rect, 3>
  [265] objcall 123 ............................. <tCountImg.rect[3]>
  [267] getlocal 4 .............................. <tCountImg>
  [269] pushsymb 69 ............................. <#rect>
  [271] pushint8 1 .............................. <1>
  [273] pusharglist 3 ........................... <tCountImg, #rect, 1>
  [275] objcall 123 ............................. <tCountImg.rect[1]>
  [277] sub ..................................... <tCountImg.rect[3] - tCountImg.rect[1]>
  [278] sub ..................................... <tX + pNumberPosX - (tCountImg.rect[3] - tCountImg.rect[1])>
  [279] setlocal 2 .............................. tCenteredX = tX + pNumberPosX - (tCountImg.rect[3] - tCountImg.rect[1])
  [281] getparam 1 .............................. <tCanvas>
  [283] getlocal 4 .............................. <tCountImg>
  [285] getlocal 4 .............................. <tCountImg>
  [287] getobjprop 69 ........................... <tCountImg.rect>
  [289] getlocal 2 .............................. <tCenteredX>
  [291] getlocal 3 .............................. <tCenteredY>
  [293] getlocal 2 .............................. <tCenteredX>
  [295] getlocal 3 .............................. <tCenteredY>
  [297] pusharglist 4 ........................... <tCenteredX, tCenteredY, tCenteredX, tCenteredY>
  [299] extcall 69 .............................. <rect(tCenteredX, tCenteredY, tCenteredX, tCenteredY)>
  [301] add ..................................... <tCountImg.rect + rect(tCenteredX, tCenteredY, tCenteredX, tCenteredY)>
  [302] getlocal 4 .............................. <tCountImg>
  [304] getobjprop 69 ........................... <tCountImg.rect>
  [306] pushsymb 84 ............................. <#ink>
  [308] pushint8 36 ............................. <36>
  [310] pusharglist 2 ........................... <[#ink: 36]>
  [312] pushproplist ............................ <[#ink: 36]>
  [313] pusharglistnoret 5 ...................... <tCanvas, tCountImg, tCountImg.rect + rect(tCenteredX, tCenteredY, tCenteredX, tCenteredY), tCountImg.rect, [#ink: 36]>
  [315] objcall 77 .............................. tCanvas.copyPixels(tCountImg, tCountImg.rect + rect(tCenteredX, tCenteredY, tCenteredX, tCenteredY), tCountImg.rect, [#ink: 36])
  [317] ret
end

on getImage me, tClass
  [  0] getparam 1 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 78 .............................. <voidp(tClass)>
  [  6] not ..................................... <not voidp(tClass)>
  [  7] jmpifz [ 97] ............................ if not voidp(tClass) then
  [ 10] getparam 1 .............................. <tClass>
  [ 12] pushcons 23 ............................. <"*">
  [ 14] containsstr ............................. <tClass contains "*">
  [ 15] jmpifz [ 70] ............................ if tClass contains "*" then / else
  [ 18] getparam 1 .............................. <tClass>
  [ 20] pushcons 24 ............................. <"_small">
  [ 22] joinstr ................................. <tClass & "_small">
  [ 23] setlocal 0 .............................. tSmallMem = tClass & "_small"
  [ 25] getparam 1 .............................. <tClass>
  [ 27] pushsymb 292 ............................ <#char>
  [ 30] pushint8 1 .............................. <1>
  [ 32] pushcons 23 ............................. <"*">
  [ 34] getparam 1 .............................. <tClass>
  [ 36] pusharglist 2 ........................... <"*", tClass>
  [ 38] extcall 293 ............................. <offset("*", tClass)>
  [ 41] pushint8 1 .............................. <1>
  [ 43] sub ..................................... <offset("*", tClass) - 1>
  [ 44] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [ 46] objcall 123 ............................. <tClass.char[1..offset("*", tClass) - 1]>
  [ 48] setparam 1 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [ 50] getlocal 0 .............................. <tSmallMem>
  [ 52] pusharglist 1 ........................... <tSmallMem>
  [ 54] extcall 63 .............................. <memberExists(tSmallMem)>
  [ 56] not ..................................... <not memberExists(tSmallMem)>
  [ 57] jmpifz [ 67] ............................ if not memberExists(tSmallMem) then
  [ 60] getparam 1 .............................. <tClass>
  [ 62] pushcons 24 ............................. <"_small">
  [ 64] joinstr ................................. <tClass & "_small">
  [ 65] setlocal 0 .............................. tSmallMem = tClass & "_small"
  [ 67] jmp [ 77]
  [ 70] getparam 1 .............................. <tClass>
  [ 72] pushcons 24 ............................. <"_small">
  [ 74] joinstr ................................. <tClass & "_small">
  [ 75] setlocal 0 .............................. tSmallMem = tClass & "_small"
  [ 77] getlocal 0 .............................. <tSmallMem>
  [ 79] pusharglist 1 ........................... <tSmallMem>
  [ 81] extcall 63 .............................. <memberExists(tSmallMem)>
  [ 83] jmpifz [ 97] ............................ if memberExists(tSmallMem) then
  [ 86] getlocal 0 .............................. <tSmallMem>
  [ 88] pusharglist 1 ........................... <tSmallMem>
  [ 90] extcall 652 ............................. <getmemnum(tSmallMem)>
  [ 93] pusharglistnoret 1 ...................... <getmemnum(tSmallMem)>
  [ 95] extcall 37 .............................. return getmemnum(tSmallMem)
  [ 97] pushcons 25 ............................. <"no_icon_small">
  [ 99] pusharglist 1 ........................... <"no_icon_small">
  [101] extcall 652 ............................. <getmemnum("no_icon_small")>
  [104] pusharglistnoret 1 ...................... <getmemnum("no_icon_small")>
  [106] extcall 37 .............................. return getmemnum("no_icon_small")
  [108] ret
end

on getNumberImage me, tNumber
  [  0] pushint8 80 ............................. <80>
  [  2] pushint8 20 ............................. <20>
  [  4] pushint8 32 ............................. <32>
  [  6] pusharglist 3 ........................... <80, 20, 32>
  [  8] extcall 17 .............................. <image(80, 20, 32)>
  [ 10] setlocal 0 .............................. tCountImg = image(80, 20, 32)
  [ 12] getparam 1 .............................. <tNumber>
  [ 14] pusharglist 1 ........................... <tNumber>
  [ 16] extcall 382 ............................. <integer(tNumber)>
  [ 19] setlocal 1 .............................. tTemp = integer(tNumber)
  [ 21] pusharglist 0 ........................... <[]>
  [ 23] pushlist ................................ <[]>
  [ 24] setlocal 2 .............................. tDigit = []
  [ 26] pushint8 1 .............................. <1>
  [ 28] setlocal 3
  [ 30] getlocal 3
  [ 32] pushint8 2 .............................. <2>
  [ 34] lteq
  [ 35] jmpifz [ 76] ............................ repeat with i = 1 to 2
  [ 38] getlocal 2 .............................. <tDigit>
  [ 40] getlocal 3 .............................. <i>
  [ 42] getlocal 1 .............................. <tTemp>
  [ 44] pushint8 10 ............................. <10>
  [ 46] mod ..................................... <tTemp mod 10>
  [ 47] pusharglistnoret 3 ...................... <tDigit, i, tTemp mod 10>
  [ 49] objcall 254 ............................. tDigit[i] = tTemp mod 10
  [ 51] getlocal 1 .............................. <tTemp>
  [ 53] getlocal 2 .............................. <tDigit>
  [ 55] getlocal 3 .............................. <i>
  [ 57] pusharglist 2 ........................... <tDigit, i>
  [ 59] objcall 41 .............................. <tDigit[i]>
  [ 61] sub ..................................... <tTemp - tDigit[i]>
  [ 62] pushint8 10 ............................. <10>
  [ 64] div ..................................... <(tTemp - tDigit[i]) / 10>
  [ 65] setlocal 1 .............................. tTemp = (tTemp - tDigit[i]) / 10
  [ 67] pushint8 1
  [ 69] getlocal 3
  [ 71] add
  [ 72] setlocal 3
  [ 74] endrepeat [ 30]
  [ 76] pushzero ................................ <0>
  [ 77] setlocal 4 .............................. tstart = 0
  [ 79] pushzero ................................ <0>
  [ 80] setlocal 5 .............................. tWidth = 0
  [ 82] pushint8 2 .............................. <2>
  [ 84] setlocal 3
  [ 86] getlocal 3
  [ 88] pushint8 1 .............................. <1>
  [ 90] gteq
  [ 91] jmpifz [143] ............................ repeat with i = 2 down to 1
  [ 94] getlocal 2 .............................. <tDigit>
  [ 96] getlocal 3 .............................. <i>
  [ 98] pusharglist 2 ........................... <tDigit, i>
  [100] objcall 41 .............................. <tDigit[i]>
  [102] pushzero ................................ <0>
  [103] eq ...................................... <tDigit[i] = 0>
  [104] jmpifz [121] ............................ if tDigit[i] = 0 then
  [107] getlocal 2 .............................. <tDigit>
  [109] getlocal 3 .............................. <i>
  [111] pushint8 1 .............................. <1>
  [113] inv ..................................... <-1>
  [114] pusharglistnoret 3 ...................... <tDigit, i, -1>
  [116] objcall 254 ............................. tDigit[i] = -1
  [118] jmp [134] ............................... next repeat
  [121] getlocal 5 .............................. <tWidth>
  [123] getlocal 3 .............................. <i>
  [125] pushint8 1 .............................. <1>
  [127] sub ..................................... <i - 1>
  [128] add ..................................... <tWidth + (i - 1)>
  [129] setlocal 5 .............................. tWidth = tWidth + (i - 1)
  [131] jmp [143] ............................... exit repeat
  [134] pushint8 -1
  [136] getlocal 3
  [138] add
  [139] setlocal 3
  [141] endrepeat [ 86]
  [143] pusharglist 0 ........................... <[]>
  [145] pushlist ................................ <[]>
  [146] setlocal 6 .............................. tDigitImg = []
  [148] pushint8 1 .............................. <1>
  [150] setlocal 3
  [152] getlocal 3
  [154] pushint8 2 .............................. <2>
  [156] lteq
  [157] jmpifz [280] ............................ repeat with i = 1 to 2
  [160] pushcons 26 ............................. <"ctlg_dyndeal_">
  [162] getlocal 2 .............................. <tDigit>
  [164] getlocal 3 .............................. <i>
  [166] pusharglist 2 ........................... <tDigit, i>
  [168] objcall 41 .............................. <tDigit[i]>
  [170] pusharglist 1 ........................... <tDigit[i]>
  [172] extcall 291 ............................. <string(tDigit[i])>
  [175] joinstr ................................. <"ctlg_dyndeal_" & string(tDigit[i])>
  [176] pusharglist 1 ........................... <"ctlg_dyndeal_" & string(tDigit[i])>
  [178] extcall 63 .............................. <memberExists("ctlg_dyndeal_" & string(tDigit[i]))>
  [180] jmpifz [259] ............................ if memberExists("ctlg_dyndeal_" & string(tDigit[i])) then
  [183] getlocal 6 .............................. <tDigitImg>
  [185] getlocal 3 .............................. <i>
  [187] pushcons 26 ............................. <"ctlg_dyndeal_">
  [189] getlocal 2 .............................. <tDigit>
  [191] getlocal 3 .............................. <i>
  [193] pusharglist 2 ........................... <tDigit, i>
  [195] objcall 41 .............................. <tDigit[i]>
  [197] pusharglist 1 ........................... <tDigit[i]>
  [199] extcall 291 ............................. <string(tDigit[i])>
  [202] joinstr ................................. <"ctlg_dyndeal_" & string(tDigit[i])>
  [203] pusharglist 1 ........................... <"ctlg_dyndeal_" & string(tDigit[i])>
  [205] extcall 652 ............................. <getmemnum("ctlg_dyndeal_" & string(tDigit[i]))>
  [208] pusharglist 1 ........................... <getmemnum("ctlg_dyndeal_" & string(tDigit[i]))>
  [210] extcall 255 ............................. <member(getmemnum("ctlg_dyndeal_" & string(tDigit[i])))>
  [212] getobjprop 17 ........................... <member(getmemnum("ctlg_dyndeal_" & string(tDigit[i]))).image>
  [214] pusharglistnoret 3 ...................... <tDigitImg, i, member(getmemnum("ctlg_dyndeal_" & string(tDigit[i]))).image>
  [216] objcall 254 ............................. tDigitImg[i] = member(getmemnum("ctlg_dyndeal_" & string(tDigit[i]))).image
  [218] getlocal 5 .............................. <tWidth>
  [220] getlocal 6 .............................. <tDigitImg>
  [222] getlocal 3 .............................. <i>
  [224] pusharglist 2 ........................... <tDigitImg, i>
  [226] objcall 41 .............................. <tDigitImg[i]>
  [228] pushsymb 69 ............................. <#rect>
  [230] pushint8 3 .............................. <3>
  [232] pusharglist 3 ........................... <tDigitImg[i], #rect, 3>
  [234] objcall 123 ............................. <tDigitImg[i].rect[3]>
  [236] getlocal 6 .............................. <tDigitImg>
  [238] getlocal 3 .............................. <i>
  [240] pusharglist 2 ........................... <tDigitImg, i>
  [242] objcall 41 .............................. <tDigitImg[i]>
  [244] pushsymb 69 ............................. <#rect>
  [246] pushint8 1 .............................. <1>
  [248] pusharglist 3 ........................... <tDigitImg[i], #rect, 1>
  [250] objcall 123 ............................. <tDigitImg[i].rect[1]>
  [252] sub ..................................... <tDigitImg[i].rect[3] - tDigitImg[i].rect[1]>
  [253] add ..................................... <tWidth + (tDigitImg[i].rect[3] - tDigitImg[i].rect[1])>
  [254] setlocal 5 .............................. tWidth = tWidth + (tDigitImg[i].rect[3] - tDigitImg[i].rect[1])
  [256] jmp [271] ............................... next repeat
  [259] getlocal 6 .............................. <tDigitImg>
  [261] getlocal 3 .............................. <i>
  [263] pusharglist 0 ........................... <>
  [265] extcall 55 .............................. <VOID>
  [267] pusharglistnoret 3 ...................... <tDigitImg, i, VOID>
  [269] objcall 254 ............................. tDigitImg[i] = VOID
  [271] pushint8 1
  [273] getlocal 3
  [275] add
  [276] setlocal 3
  [278] endrepeat [152]
  [280] pushcons 27 ............................. <"ctlg_dyndeal_button_left">
  [282] pusharglist 1 ........................... <"ctlg_dyndeal_button_left">
  [284] extcall 63 .............................. <memberExists("ctlg_dyndeal_button_left")>
  [286] jmpifz [343] ............................ if memberExists("ctlg_dyndeal_button_left") then
  [289] pushcons 27 ............................. <"ctlg_dyndeal_button_left">
  [291] pusharglist 1 ........................... <"ctlg_dyndeal_button_left">
  [293] extcall 652 ............................. <getmemnum("ctlg_dyndeal_button_left")>
  [296] pusharglist 1 ........................... <getmemnum("ctlg_dyndeal_button_left")>
  [298] extcall 255 ............................. <member(getmemnum("ctlg_dyndeal_button_left"))>
  [300] getobjprop 17 ........................... <member(getmemnum("ctlg_dyndeal_button_left")).image>
  [302] setlocal 7 .............................. tImage = member(getmemnum("ctlg_dyndeal_button_left")).image
  [304] getlocal 0 .............................. <tCountImg>
  [306] getlocal 7 .............................. <tImage>
  [308] getlocal 7 .............................. <tImage>
  [310] getobjprop 69 ........................... <tImage.rect>
  [312] getlocal 7 .............................. <tImage>
  [314] getobjprop 69 ........................... <tImage.rect>
  [316] pusharglistnoret 4 ...................... <tCountImg, tImage, tImage.rect, tImage.rect>
  [318] objcall 77 .............................. tCountImg.copyPixels(tImage, tImage.rect, tImage.rect)
  [320] getlocal 7 .............................. <tImage>
  [322] pushsymb 69 ............................. <#rect>
  [324] pushint8 3 .............................. <3>
  [326] pusharglist 3 ........................... <tImage, #rect, 3>
  [328] objcall 123 ............................. <tImage.rect[3]>
  [330] getlocal 7 .............................. <tImage>
  [332] pushsymb 69 ............................. <#rect>
  [334] pushint8 1 .............................. <1>
  [336] pusharglist 3 ........................... <tImage, #rect, 1>
  [338] objcall 123 ............................. <tImage.rect[1]>
  [340] sub ..................................... <tImage.rect[3] - tImage.rect[1]>
  [341] setlocal 4 .............................. tstart = tImage.rect[3] - tImage.rect[1]
  [343] pushcons 28 ............................. <"ctlg_dyndeal_button_center">
  [345] pusharglist 1 ........................... <"ctlg_dyndeal_button_center">
  [347] extcall 63 .............................. <memberExists("ctlg_dyndeal_button_center")>
  [349] jmpifz [418] ............................ if memberExists("ctlg_dyndeal_button_center") then
  [352] pushcons 28 ............................. <"ctlg_dyndeal_button_center">
  [354] pusharglist 1 ........................... <"ctlg_dyndeal_button_center">
  [356] extcall 652 ............................. <getmemnum("ctlg_dyndeal_button_center")>
  [359] pusharglist 1 ........................... <getmemnum("ctlg_dyndeal_button_center")>
  [361] extcall 255 ............................. <member(getmemnum("ctlg_dyndeal_button_center"))>
  [363] getobjprop 17 ........................... <member(getmemnum("ctlg_dyndeal_button_center")).image>
  [365] setlocal 7 .............................. tImage = member(getmemnum("ctlg_dyndeal_button_center")).image
  [367] getlocal 4 .............................. <tstart>
  [369] setlocal 3
  [371] getlocal 3
  [373] getlocal 4 .............................. <tstart>
  [375] getlocal 5 .............................. <tWidth>
  [377] add ..................................... <tstart + tWidth>
  [378] lteq
  [379] jmpifz [418] ............................ repeat with i = tstart to tstart + tWidth
  [382] getlocal 0 .............................. <tCountImg>
  [384] getlocal 7 .............................. <tImage>
  [386] getlocal 7 .............................. <tImage>
  [388] getobjprop 69 ........................... <tImage.rect>
  [390] getlocal 3 .............................. <i>
  [392] pushzero ................................ <0>
  [393] getlocal 3 .............................. <i>
  [395] pushzero ................................ <0>
  [396] pusharglist 4 ........................... <i, 0, i, 0>
  [398] extcall 69 .............................. <rect(i, 0, i, 0)>
  [400] add ..................................... <tImage.rect + rect(i, 0, i, 0)>
  [401] getlocal 7 .............................. <tImage>
  [403] getobjprop 69 ........................... <tImage.rect>
  [405] pusharglistnoret 4 ...................... <tCountImg, tImage, tImage.rect + rect(i, 0, i, 0), tImage.rect>
  [407] objcall 77 .............................. tCountImg.copyPixels(tImage, tImage.rect + rect(i, 0, i, 0), tImage.rect)
  [409] pushint8 1
  [411] getlocal 3
  [413] add
  [414] setlocal 3
  [416] endrepeat [371]
  [418] pushcons 29 ............................. <"ctlg_dyndeal_button_right">
  [420] pusharglist 1 ........................... <"ctlg_dyndeal_button_right">
  [422] extcall 63 .............................. <memberExists("ctlg_dyndeal_button_right")>
  [424] jmpifz [481] ............................ if memberExists("ctlg_dyndeal_button_right") then
  [427] pushcons 29 ............................. <"ctlg_dyndeal_button_right">
  [429] pusharglist 1 ........................... <"ctlg_dyndeal_button_right">
  [431] extcall 652 ............................. <getmemnum("ctlg_dyndeal_button_right")>
  [434] pusharglist 1 ........................... <getmemnum("ctlg_dyndeal_button_right")>
  [436] extcall 255 ............................. <member(getmemnum("ctlg_dyndeal_button_right"))>
  [438] getobjprop 17 ........................... <member(getmemnum("ctlg_dyndeal_button_right")).image>
  [440] setlocal 7 .............................. tImage = member(getmemnum("ctlg_dyndeal_button_right")).image
  [442] getlocal 0 .............................. <tCountImg>
  [444] getlocal 7 .............................. <tImage>
  [446] getlocal 7 .............................. <tImage>
  [448] getobjprop 69 ........................... <tImage.rect>
  [450] getlocal 4 .............................. <tstart>
  [452] getlocal 5 .............................. <tWidth>
  [454] add ..................................... <tstart + tWidth>
  [455] pushint8 1 .............................. <1>
  [457] add ..................................... <tstart + tWidth + 1>
  [458] pushzero ................................ <0>
  [459] getlocal 4 .............................. <tstart>
  [461] getlocal 5 .............................. <tWidth>
  [463] add ..................................... <tstart + tWidth>
  [464] pushint8 1 .............................. <1>
  [466] add ..................................... <tstart + tWidth + 1>
  [467] pushzero ................................ <0>
  [468] pusharglist 4 ........................... <tstart + tWidth + 1, 0, tstart + tWidth + 1, 0>
  [470] extcall 69 .............................. <rect(tstart + tWidth + 1, 0, tstart + tWidth + 1, 0)>
  [472] add ..................................... <tImage.rect + rect(tstart + tWidth + 1, 0, tstart + tWidth + 1, 0)>
  [473] getlocal 7 .............................. <tImage>
  [475] getobjprop 69 ........................... <tImage.rect>
  [477] pusharglistnoret 4 ...................... <tCountImg, tImage, tImage.rect + rect(tstart + tWidth + 1, 0, tstart + tWidth + 1, 0), tImage.rect>
  [479] objcall 77 .............................. tCountImg.copyPixels(tImage, tImage.rect + rect(tstart + tWidth + 1, 0, tstart + tWidth + 1, 0), tImage.rect)
  [481] pushint8 2 .............................. <2>
  [483] setlocal 3
  [485] getlocal 3
  [487] pushint8 1 .............................. <1>
  [489] gteq
  [490] jmpifz [619] ............................ repeat with i = 2 down to 1
  [493] getlocal 6 .............................. <tDigitImg>
  [495] getlocal 3 .............................. <i>
  [497] pusharglist 2 ........................... <tDigitImg, i>
  [499] objcall 41 .............................. <tDigitImg[i]>
  [501] pusharglist 1 ........................... <tDigitImg[i]>
  [503] extcall 78 .............................. <voidp(tDigitImg[i])>
  [505] not ..................................... <not voidp(tDigitImg[i])>
  [506] jmpifz [610] ............................ if not voidp(tDigitImg[i]) then
  [509] getlocal 0 .............................. <tCountImg>
  [511] getlocal 6 .............................. <tDigitImg>
  [513] getlocal 3 .............................. <i>
  [515] pusharglist 2 ........................... <tDigitImg, i>
  [517] objcall 41 .............................. <tDigitImg[i]>
  [519] getlocal 6 .............................. <tDigitImg>
  [521] getlocal 3 .............................. <i>
  [523] pusharglist 2 ........................... <tDigitImg, i>
  [525] objcall 41 .............................. <tDigitImg[i]>
  [527] getobjprop 69 ........................... <tDigitImg[i].rect>
  [529] getlocal 4 .............................. <tstart>
  [531] pushint8 2 .............................. <2>
  [533] add ..................................... <tstart + 2>
  [534] pushint8 3 .............................. <3>
  [536] getlocal 4 .............................. <tstart>
  [538] pushint8 2 .............................. <2>
  [540] add ..................................... <tstart + 2>
  [541] pushint8 3 .............................. <3>
  [543] pusharglist 4 ........................... <tstart + 2, 3, tstart + 2, 3>
  [545] extcall 69 .............................. <rect(tstart + 2, 3, tstart + 2, 3)>
  [547] add ..................................... <tDigitImg[i].rect + rect(tstart + 2, 3, tstart + 2, 3)>
  [548] getlocal 6 .............................. <tDigitImg>
  [550] getlocal 3 .............................. <i>
  [552] pusharglist 2 ........................... <tDigitImg, i>
  [554] objcall 41 .............................. <tDigitImg[i]>
  [556] getobjprop 69 ........................... <tDigitImg[i].rect>
  [558] pushsymb 84 ............................. <#ink>
  [560] pushint8 36 ............................. <36>
  [562] pusharglist 2 ........................... <[#ink: 36]>
  [564] pushproplist ............................ <[#ink: 36]>
  [565] pusharglistnoret 5 ...................... <tCountImg, tDigitImg[i], tDigitImg[i].rect + rect(tstart + 2, 3, tstart + 2, 3), tDigitImg[i].rect, [#ink: 36]>
  [567] objcall 77 .............................. tCountImg.copyPixels(tDigitImg[i], tDigitImg[i].rect + rect(tstart + 2, 3, tstart + 2, 3), tDigitImg[i].rect, [#ink: 36])
  [569] getlocal 4 .............................. <tstart>
  [571] getlocal 6 .............................. <tDigitImg>
  [573] getlocal 3 .............................. <i>
  [575] pusharglist 2 ........................... <tDigitImg, i>
  [577] objcall 41 .............................. <tDigitImg[i]>
  [579] pushsymb 69 ............................. <#rect>
  [581] pushint8 3 .............................. <3>
  [583] pusharglist 3 ........................... <tDigitImg[i], #rect, 3>
  [585] objcall 123 ............................. <tDigitImg[i].rect[3]>
  [587] getlocal 6 .............................. <tDigitImg>
  [589] getlocal 3 .............................. <i>
  [591] pusharglist 2 ........................... <tDigitImg, i>
  [593] objcall 41 .............................. <tDigitImg[i]>
  [595] pushsymb 69 ............................. <#rect>
  [597] pushint8 1 .............................. <1>
  [599] pusharglist 3 ........................... <tDigitImg[i], #rect, 1>
  [601] objcall 123 ............................. <tDigitImg[i].rect[1]>
  [603] sub ..................................... <tDigitImg[i].rect[3] - tDigitImg[i].rect[1]>
  [604] add ..................................... <tstart + (tDigitImg[i].rect[3] - tDigitImg[i].rect[1])>
  [605] pushint8 1 .............................. <1>
  [607] add ..................................... <tstart + (tDigitImg[i].rect[3] - tDigitImg[i].rect[1]) + 1>
  [608] setlocal 4 .............................. tstart = tstart + (tDigitImg[i].rect[3] - tDigitImg[i].rect[1]) + 1
  [610] pushint8 -1
  [612] getlocal 3
  [614] add
  [615] setlocal 3
  [617] endrepeat [485]
  [619] getlocal 0 .............................. <tCountImg>
  [621] pusharglist 1 ........................... <tCountImg>
  [623] objcall 806 ............................. <tCountImg.trimWhiteSpace()>
  [626] pusharglistnoret 1 ...................... <tCountImg.trimWhiteSpace()>
  [628] extcall 37 .............................. return tCountImg.trimWhiteSpace()
  [630] ret
end

on getClassAsset me, tClassName
  [  0] getparam 1 .............................. <tClassName>
  [  2] pusharglist 1 ........................... <tClassName>
  [  4] extcall 43 .............................. <ilk(tClassName)>
  [  6] pushsymb 291 ............................ <#string>
  [  9] nteq .................................... <ilk(tClassName) <> #string>
  [ 10] jmpifz [ 19] ............................ if ilk(tClassName) <> #string then
  [ 13] pushcons 30 ............................. <EMPTY>
  [ 15] pusharglistnoret 1 ...................... <EMPTY>
  [ 17] extcall 37 .............................. return EMPTY
  [ 19] getparam 1 .............................. <tClassName>
  [ 21] setlocal 0 .............................. tClass = tClassName
  [ 23] getlocal 0 .............................. <tClass>
  [ 25] pushcons 23 ............................. <"*">
  [ 27] containsstr ............................. <tClass contains "*">
  [ 28] jmpifz [ 56] ............................ if tClass contains "*" then
  [ 31] getlocal 0 .............................. <tClass>
  [ 33] pushsymb 292 ............................ <#char>
  [ 36] pushint8 1 .............................. <1>
  [ 38] pushcons 23 ............................. <"*">
  [ 40] getlocal 0 .............................. <tClass>
  [ 42] pusharglist 2 ........................... <"*", tClass>
  [ 44] extcall 293 ............................. <offset("*", tClass)>
  [ 47] pushint8 1 .............................. <1>
  [ 49] sub ..................................... <offset("*", tClass) - 1>
  [ 50] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [ 52] objcall 123 ............................. <tClass.char[1..offset("*", tClass) - 1]>
  [ 54] setlocal 0 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [ 56] getlocal 0 .............................. <tClass>
  [ 58] pusharglistnoret 1 ...................... <tClass>
  [ 60] extcall 37 .............................. return tClass
  [ 62] ret
end
