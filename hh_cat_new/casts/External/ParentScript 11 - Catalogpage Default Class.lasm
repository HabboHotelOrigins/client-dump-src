property pWndObj, pProductStrip, pSelectedProduct, pPageItemDownloader, pImageElements, pTextElements, pPersistentFurniData, pPersistentCatalogData, pDealPreviewObj, pOfferTypesAvailable, pHideElements

on construct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 55 .............................. <VOID>
  [  4] setprop 150 ............................. pWndObj = VOID
  [  6] pusharglist 0 ........................... <>
  [  8] extcall 55 .............................. <VOID>
  [ 10] setprop 557 ............................. pProductStrip = VOID
  [ 13] pusharglist 0 ........................... <>
  [ 15] extcall 55 .............................. <VOID>
  [ 17] setprop 252 ............................. pSelectedProduct = VOID
  [ 19] pusharglist 0 ........................... <[]>
  [ 21] pushlist ................................ <[]>
  [ 22] setprop 558 ............................. pOfferTypesAvailable = []
  [ 25] pushsymb 559 ............................ <#catalogue>
  [ 28] pusharglist 1 ........................... <#catalogue>
  [ 30] extcall 471 ............................. <getThread(#catalogue)>
  [ 33] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 35] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [ 37] pusharglist 1 ........................... <getThread(#catalogue).getComponent()>
  [ 39] objcall 264 ............................. <getThread(#catalogue).getComponent().getPageItemDownloader()>
  [ 42] setprop 313 ............................. pPageItemDownloader = getThread(#catalogue).getComponent().getPageItemDownloader()
  [ 45] pushcons 0 .............................. <"catalogue_deal_preview_object">
  [ 47] pusharglist 1 ........................... <"catalogue_deal_preview_object">
  [ 49] extcall 184 ............................. <getObject("catalogue_deal_preview_object")>
  [ 51] setprop 560 ............................. pDealPreviewObj = getObject("catalogue_deal_preview_object")
  [ 54] pushcons 1 .............................. <"layout.fields.image.default">
  [ 56] pusharglist 1 ........................... <"layout.fields.image.default">
  [ 58] extcall 529 ............................. <getStructVariable("layout.fields.image.default")>
  [ 61] setprop 561 ............................. pImageElements = getStructVariable("layout.fields.image.default")
  [ 64] pushcons 2 .............................. <"layout.fields.text.default">
  [ 66] pusharglist 1 ........................... <"layout.fields.text.default">
  [ 68] extcall 529 ............................. <getStructVariable("layout.fields.text.default")>
  [ 71] setprop 562 ............................. pTextElements = getStructVariable("layout.fields.text.default")
  [ 74] pushcons 3 .............................. <"layout.hide.onclick.default">
  [ 76] pusharglist 1 ........................... <"layout.hide.onclick.default">
  [ 78] extcall 529 ............................. <getStructVariable("layout.hide.onclick.default")>
  [ 81] setprop 563 ............................. pHideElements = getStructVariable("layout.hide.onclick.default")
  [ 84] pushsymb 0 .............................. <#construct>
  [ 86] getparam 0 .............................. <me>
  [ 88] pusharglist 1 ........................... <[me]>
  [ 90] pushlist ................................ <[me]>
  [ 91] pusharglist 2 ........................... <#construct, [me]>
  [ 93] extcall 15 .............................. <callAncestor(#construct, [me])>
  [ 95] pusharglistnoret 1 ...................... <callAncestor(#construct, [me])>
  [ 97] extcall 37 .............................. return callAncestor(#construct, [me])
  [ 99] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 557 .......................... <me.pProductStrip>
  [  5] pusharglist 1 ........................... <me.pProductStrip>
  [  7] extcall 78 .............................. <voidp(me.pProductStrip)>
  [  9] not ..................................... <not voidp(me.pProductStrip)>
  [ 10] jmpifz [ 38] ............................ if not voidp(me.pProductStrip) then
  [ 13] getprop 557 ............................. <pProductStrip>
  [ 16] pusharglist 1 ........................... <pProductStrip>
  [ 18] objcall 54 .............................. <pProductStrip.getID()>
  [ 20] pusharglist 1 ........................... <pProductStrip.getID()>
  [ 22] extcall 167 ............................. <objectExists(pProductStrip.getID())>
  [ 24] jmpifz [ 38] ............................ if objectExists(pProductStrip.getID()) then
  [ 27] getprop 557 ............................. <pProductStrip>
  [ 30] pusharglist 1 ........................... <pProductStrip>
  [ 32] objcall 54 .............................. <pProductStrip.getID()>
  [ 34] pusharglistnoret 1 ...................... <pProductStrip.getID()>
  [ 36] extcall 168 ............................. removeObject(pProductStrip.getID())
  [ 38] getprop 313 ............................. <pPageItemDownloader>
  [ 41] getparam 0 .............................. <me>
  [ 43] pushsymb 10 ............................. <#downloadCompleted>
  [ 45] pusharglistnoret 3 ...................... <pPageItemDownloader, me, #downloadCompleted>
  [ 47] objcall 453 ............................. pPageItemDownloader.removeCallback(me, #downloadCompleted)
  [ 50] pushsymb 1 .............................. <#deconstruct>
  [ 52] getparam 0 .............................. <me>
  [ 54] pusharglist 1 ........................... <[me]>
  [ 56] pushlist ................................ <[me]>
  [ 57] pusharglist 2 ........................... <#deconstruct, [me]>
  [ 59] extcall 15 .............................. <callAncestor(#deconstruct, [me])>
  [ 61] pusharglistnoret 1 ...................... <callAncestor(#deconstruct, [me])>
  [ 63] extcall 37 .............................. return callAncestor(#deconstruct, [me])
  [ 65] ret
end

on define me, tdata
  [  0] pushsymb 237 ............................ <#define>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <[me]>
  [  6] pushlist ................................ <[me]>
  [  7] getparam 1 .............................. <tdata>
  [  9] pusharglistnoret 3 ...................... <#define, [me], tdata>
  [ 11] extcall 15 .............................. callAncestor(#define, [me], tdata)
  [ 13] pushcons 4 .............................. <"layout.class.">
  [ 15] getparam 0 .............................. <me>
  [ 17] pushsymb 528 ............................ <#pPageData>
  [ 20] pushsymb 242 ............................ <#layout>
  [ 22] pusharglist 3 ........................... <me, #pPageData, #layout>
  [ 24] objcall 123 ............................. <me.pPageData[#layout]>
  [ 26] joinstr ................................. <"layout.class." & me.pPageData[#layout]>
  [ 27] pushcons 5 .............................. <".productstrip">
  [ 29] joinstr ................................. <"layout.class." & me.pPageData[#layout] & ".productstrip">
  [ 30] pusharglist 1 ........................... <"layout.class." & me.pPageData[#layout] & ".productstrip">
  [ 32] extcall 241 ............................. <variableExists("layout.class." & me.pPageData[#layout] & ".productstrip")>
  [ 34] jmpifz [ 63] ............................ if variableExists("layout.class." & me.pPageData[#layout] & ".productstrip") then / else
  [ 37] pushcons 4 .............................. <"layout.class.">
  [ 39] getparam 0 .............................. <me>
  [ 41] pushsymb 528 ............................ <#pPageData>
  [ 44] pushsymb 242 ............................ <#layout>
  [ 46] pusharglist 3 ........................... <me, #pPageData, #layout>
  [ 48] objcall 123 ............................. <me.pPageData[#layout]>
  [ 50] joinstr ................................. <"layout.class." & me.pPageData[#layout]>
  [ 51] pushcons 5 .............................. <".productstrip">
  [ 53] joinstr ................................. <"layout.class." & me.pPageData[#layout] & ".productstrip">
  [ 54] pusharglist 1 ........................... <"layout.class." & me.pPageData[#layout] & ".productstrip">
  [ 56] extcall 243 ............................. <getClassVariable("layout.class." & me.pPageData[#layout] & ".productstrip")>
  [ 58] setlocal 0 .............................. tClass = getClassVariable("layout.class." & me.pPageData[#layout] & ".productstrip")
  [ 60] jmp [ 71]
  [ 63] pushcons 6 .............................. <"layout.class.default.productstrip">
  [ 65] pusharglist 1 ........................... <"layout.class.default.productstrip">
  [ 67] extcall 243 ............................. <getClassVariable("layout.class.default.productstrip")>
  [ 69] setlocal 0 .............................. tClass = getClassVariable("layout.class.default.productstrip")
  [ 71] getlocal 0 .............................. <tClass>
  [ 73] getobjprop 48 ........................... <tClass.count>
  [ 75] pushint8 1 .............................. <1>
  [ 77] gt ...................................... <tClass.count > 1>
  [ 78] jmpifz [109] ............................ if tClass.count > 1 then
  [ 81] pusharglist 0 ........................... <>
  [ 83] extcall 30 .............................. <getUniqueID()>
  [ 85] getlocal 0 .............................. <tClass>
  [ 87] pusharglist 2 ........................... <getUniqueID(), tClass>
  [ 89] extcall 155 ............................. <createObject(getUniqueID(), tClass)>
  [ 91] setprop 557 ............................. pProductStrip = createObject(getUniqueID(), tClass)
  [ 94] getprop 557 ............................. <pProductStrip>
  [ 97] getparam 0 .............................. <me>
  [ 99] getchainedprop 528 ...................... <me.pPageData>
  [102] getobjprop 336 .......................... <me.pPageData.offers>
  [105] pusharglistnoret 2 ...................... <pProductStrip, me.pPageData.offers>
  [107] objcall 237 ............................. pProductStrip.define(me.pPageData.offers)
  [109] getprop 546 ............................. <pPersistentFurniData>
  [112] pusharglist 1 ........................... <pPersistentFurniData>
  [114] extcall 78 .............................. <voidp(pPersistentFurniData)>
  [116] jmpifz [138] ............................ if voidp(pPersistentFurniData) then
  [119] pushcons 7 .............................. <"dynamicdownloader">
  [121] pusharglist 1 ........................... <"dynamicdownloader">
  [123] extcall 471 ............................. <getThread("dynamicdownloader")>
  [126] pusharglist 1 ........................... <getThread("dynamicdownloader")>
  [128] objcall 170 ............................. <getThread("dynamicdownloader").getComponent()>
  [130] pusharglist 1 ........................... <getThread("dynamicdownloader").getComponent()>
  [132] objcall 564 ............................. <getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()>
  [135] setprop 546 ............................. pPersistentFurniData = getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()
  [138] getprop 565 ............................. <pPersistentCatalogData>
  [141] pusharglist 1 ........................... <pPersistentCatalogData>
  [143] extcall 78 .............................. <voidp(pPersistentCatalogData)>
  [145] jmpifz [168] ............................ if voidp(pPersistentCatalogData) then
  [148] pushsymb 559 ............................ <#catalogue>
  [151] pusharglist 1 ........................... <#catalogue>
  [153] extcall 471 ............................. <getThread(#catalogue)>
  [156] pusharglist 1 ........................... <getThread(#catalogue)>
  [158] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [160] pusharglist 1 ........................... <getThread(#catalogue).getComponent()>
  [162] objcall 299 ............................. <getThread(#catalogue).getComponent().getPersistentCatalogDataObject()>
  [165] setprop 565 ............................. pPersistentCatalogData = getThread(#catalogue).getComponent().getPersistentCatalogDataObject()
  [168] pushcons 8 .............................. <"layout.fields.image.">
  [170] getparam 0 .............................. <me>
  [172] pushsymb 528 ............................ <#pPageData>
  [175] pushsymb 242 ............................ <#layout>
  [177] pusharglist 3 ........................... <me, #pPageData, #layout>
  [179] objcall 123 ............................. <me.pPageData[#layout]>
  [181] joinstr ................................. <"layout.fields.image." & me.pPageData[#layout]>
  [182] pusharglist 1 ........................... <"layout.fields.image." & me.pPageData[#layout]>
  [184] extcall 241 ............................. <variableExists("layout.fields.image." & me.pPageData[#layout])>
  [186] jmpifz [211] ............................ if variableExists("layout.fields.image." & me.pPageData[#layout]) then
  [189] pushcons 8 .............................. <"layout.fields.image.">
  [191] getparam 0 .............................. <me>
  [193] pushsymb 528 ............................ <#pPageData>
  [196] pushsymb 242 ............................ <#layout>
  [198] pusharglist 3 ........................... <me, #pPageData, #layout>
  [200] objcall 123 ............................. <me.pPageData[#layout]>
  [202] joinstr ................................. <"layout.fields.image." & me.pPageData[#layout]>
  [203] pusharglist 1 ........................... <"layout.fields.image." & me.pPageData[#layout]>
  [205] extcall 529 ............................. <getStructVariable("layout.fields.image." & me.pPageData[#layout])>
  [208] setprop 561 ............................. pImageElements = getStructVariable("layout.fields.image." & me.pPageData[#layout])
  [211] pushcons 9 .............................. <"layout.fields.text.">
  [213] getparam 0 .............................. <me>
  [215] pushsymb 528 ............................ <#pPageData>
  [218] pushsymb 242 ............................ <#layout>
  [220] pusharglist 3 ........................... <me, #pPageData, #layout>
  [222] objcall 123 ............................. <me.pPageData[#layout]>
  [224] joinstr ................................. <"layout.fields.text." & me.pPageData[#layout]>
  [225] pusharglist 1 ........................... <"layout.fields.text." & me.pPageData[#layout]>
  [227] extcall 241 ............................. <variableExists("layout.fields.text." & me.pPageData[#layout])>
  [229] jmpifz [254] ............................ if variableExists("layout.fields.text." & me.pPageData[#layout]) then
  [232] pushcons 9 .............................. <"layout.fields.text.">
  [234] getparam 0 .............................. <me>
  [236] pushsymb 528 ............................ <#pPageData>
  [239] pushsymb 242 ............................ <#layout>
  [241] pusharglist 3 ........................... <me, #pPageData, #layout>
  [243] objcall 123 ............................. <me.pPageData[#layout]>
  [245] joinstr ................................. <"layout.fields.text." & me.pPageData[#layout]>
  [246] pusharglist 1 ........................... <"layout.fields.text." & me.pPageData[#layout]>
  [248] extcall 529 ............................. <getStructVariable("layout.fields.text." & me.pPageData[#layout])>
  [251] setprop 562 ............................. pTextElements = getStructVariable("layout.fields.text." & me.pPageData[#layout])
  [254] pushcons 10 ............................. <"layout.hide.onclick.">
  [256] getparam 0 .............................. <me>
  [258] pushsymb 528 ............................ <#pPageData>
  [261] pushsymb 242 ............................ <#layout>
  [263] pusharglist 3 ........................... <me, #pPageData, #layout>
  [265] objcall 123 ............................. <me.pPageData[#layout]>
  [267] joinstr ................................. <"layout.hide.onclick." & me.pPageData[#layout]>
  [268] pusharglist 1 ........................... <"layout.hide.onclick." & me.pPageData[#layout]>
  [270] extcall 241 ............................. <variableExists("layout.hide.onclick." & me.pPageData[#layout])>
  [272] jmpifz [297] ............................ if variableExists("layout.hide.onclick." & me.pPageData[#layout]) then
  [275] pushcons 10 ............................. <"layout.hide.onclick.">
  [277] getparam 0 .............................. <me>
  [279] pushsymb 528 ............................ <#pPageData>
  [282] pushsymb 242 ............................ <#layout>
  [284] pusharglist 3 ........................... <me, #pPageData, #layout>
  [286] objcall 123 ............................. <me.pPageData[#layout]>
  [288] joinstr ................................. <"layout.hide.onclick." & me.pPageData[#layout]>
  [289] pusharglist 1 ........................... <"layout.hide.onclick." & me.pPageData[#layout]>
  [291] extcall 529 ............................. <getStructVariable("layout.hide.onclick." & me.pPageData[#layout])>
  [294] setprop 563 ............................. pHideElements = getStructVariable("layout.hide.onclick." & me.pPageData[#layout])
  [297] ret
end

on mergeWindow me, tParentWndObj
  [  0] pushcons 11 ............................. <"ctlg_">
  [  2] getparam 0 .............................. <me>
  [  4] pushsymb 528 ............................ <#pPageData>
  [  7] pushsymb 242 ............................ <#layout>
  [  9] pusharglist 3 ........................... <me, #pPageData, #layout>
  [ 11] objcall 123 ............................. <me.pPageData[#layout]>
  [ 13] joinstr ................................. <"ctlg_" & me.pPageData[#layout]>
  [ 14] pushcons 12 ............................. <".window">
  [ 16] joinstr ................................. <"ctlg_" & me.pPageData[#layout] & ".window">
  [ 17] setlocal 0 .............................. tLayoutMember = "ctlg_" & me.pPageData[#layout] & ".window"
  [ 19] getlocal 0 .............................. <tLayoutMember>
  [ 21] pusharglist 1 ........................... <tLayoutMember>
  [ 23] extcall 63 .............................. <memberExists(tLayoutMember)>
  [ 25] not ..................................... <not memberExists(tLayoutMember)>
  [ 26] jmpifz [ 49] ............................ if not memberExists(tLayoutMember) then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushcons 13 ............................. <"Layout member ">
  [ 33] getlocal 0 .............................. <tLayoutMember>
  [ 35] joinstr ................................. <"Layout member " & tLayoutMember>
  [ 36] pushcons 14 ............................. <" missing.">
  [ 38] joinstr ................................. <"Layout member " & tLayoutMember & " missing.">
  [ 39] pushsymb 244 ............................ <#mergeWindow>
  [ 41] pusharglist 3 ........................... <me, "Layout member " & tLayoutMember & " missing.", #mergeWindow>
  [ 43] extcall 46 .............................. <error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)>
  [ 45] pusharglistnoret 1 ...................... <error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)>
  [ 47] extcall 37 .............................. return error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)
  [ 49] getparam 1 .............................. <tParentWndObj>
  [ 51] getlocal 0 .............................. <tLayoutMember>
  [ 53] pusharglistnoret 2 ...................... <tParentWndObj, tLayoutMember>
  [ 55] objcall 195 ............................. tParentWndObj.merge(tLayoutMember)
  [ 57] getparam 1 .............................. <tParentWndObj>
  [ 59] setprop 150 ............................. pWndObj = tParentWndObj
  [ 61] getparam 0 .............................. <me>
  [ 63] pushsymb 528 ............................ <#pPageData>
  [ 66] pushsymb 412 ............................ <#localization>
  [ 69] pusharglist 3 ........................... <me, #pPageData, #localization>
  [ 71] objcall 566 ............................. <me.pPageData[#localization]>
  [ 74] pushsymb 414 ............................ <#texts>
  [ 77] pusharglist 2 ........................... <me.pPageData[#localization], #texts>
  [ 79] objcall 41 .............................. <me.pPageData[#localization][#texts]>
  [ 81] setlocal 1 .............................. tTextFields = me.pPageData[#localization][#texts]
  [ 83] pushint8 1 .............................. <1>
  [ 85] setlocal 2
  [ 87] getlocal 2
  [ 89] getlocal 1 .............................. <tTextFields>
  [ 91] getobjprop 48 ........................... <tTextFields.count>
  [ 93] lteq
  [ 94] jmpifz [143] ............................ repeat with i = 1 to tTextFields.count
  [ 97] getprop 562 ............................. <pTextElements>
  [100] getobjprop 48 ........................... <pTextElements.count>
  [102] getlocal 2 .............................. <i>
  [104] gteq .................................... <pTextElements.count >= i>
  [105] jmpifz [134] ............................ if pTextElements.count >= i then
  [108] getparam 0 .............................. <me>
  [110] getprop 150 ............................. <pWndObj>
  [112] getprop 562 ............................. <pTextElements>
  [115] getlocal 2 .............................. <i>
  [117] pusharglist 2 ........................... <pTextElements, i>
  [119] objcall 41 .............................. <pTextElements[i]>
  [121] getlocal 1 .............................. <tTextFields>
  [123] getlocal 2 .............................. <i>
  [125] pusharglist 2 ........................... <tTextFields, i>
  [127] objcall 41 .............................. <tTextFields[i]>
  [129] pusharglistnoret 4 ...................... <me, pWndObj, pTextElements[i], tTextFields[i]>
  [131] objcall 525 ............................. me.setElementText(pWndObj, pTextElements[i], tTextFields[i])
  [134] pushint8 1
  [136] getlocal 2
  [138] add
  [139] setlocal 2
  [141] endrepeat [ 87]
  [143] getparam 0 .............................. <me>
  [145] pushsymb 528 ............................ <#pPageData>
  [148] pushsymb 412 ............................ <#localization>
  [151] pusharglist 3 ........................... <me, #pPageData, #localization>
  [153] objcall 566 ............................. <me.pPageData[#localization]>
  [156] pushsymb 413 ............................ <#images>
  [159] pusharglist 2 ........................... <me.pPageData[#localization], #images>
  [161] objcall 41 .............................. <me.pPageData[#localization][#images]>
  [163] setlocal 3 .............................. tBitmaps = me.pPageData[#localization][#images]
  [165] pusharglist 0 ........................... <[]>
  [167] pushlist ................................ <[]>
  [168] setlocal 4 .............................. tObjectLoadList = []
  [170] pushint8 1 .............................. <1>
  [172] setlocal 2
  [174] getlocal 2
  [176] getlocal 3 .............................. <tBitmaps>
  [178] getobjprop 48 ........................... <tBitmaps.count>
  [180] lteq
  [181] jmpifz [343] ............................ repeat with i = 1 to tBitmaps.count
  [184] getprop 561 ............................. <pImageElements>
  [187] getobjprop 48 ........................... <pImageElements.count>
  [189] getlocal 2 .............................. <i>
  [191] gteq .................................... <pImageElements.count >= i>
  [192] jmpifz [334] ............................ if pImageElements.count >= i then
  [195] getlocal 3 .............................. <tBitmaps>
  [197] getlocal 2 .............................. <i>
  [199] pusharglist 2 ........................... <tBitmaps, i>
  [201] objcall 41 .............................. <tBitmaps[i]>
  [203] setlocal 5 .............................. tBitmap = tBitmaps[i]
  [205] getparam 1 .............................. <tParentWndObj>
  [207] getprop 561 ............................. <pImageElements>
  [210] getlocal 2 .............................. <i>
  [212] pusharglist 2 ........................... <pImageElements, i>
  [214] objcall 41 .............................. <pImageElements[i]>
  [216] pusharglist 2 ........................... <tParentWndObj, pImageElements[i]>
  [218] objcall 253 ............................. <tParentWndObj.elementExists(pImageElements[i])>
  [220] getlocal 5 .............................. <tBitmap>
  [222] getobjprop 567 .......................... <tBitmap.length>
  [225] pushint8 1 .............................. <1>
  [227] gt ...................................... <tBitmap.length > 1>
  [228] and ..................................... <tParentWndObj.elementExists(pImageElements[i]) and (tBitmap.length > 1)>
  [229] jmpifz [334] ............................ if tParentWndObj.elementExists(pImageElements[i]) and (tBitmap.length > 1) then
  [232] getlocal 5 .............................. <tBitmap>
  [234] pusharglist 1 ........................... <tBitmap>
  [236] extcall 63 .............................. <memberExists(tBitmap)>
  [238] jmpifz [274] ............................ if memberExists(tBitmap) then
  [241] getparam 0 .............................. <me>
  [243] getlocal 5 .............................. <tBitmap>
  [245] pusharglist 1 ........................... <tBitmap>
  [247] extcall 21 .............................. <getMember(tBitmap)>
  [249] getobjprop 17 ........................... <getMember(tBitmap).image>
  [251] getparam 1 .............................. <tParentWndObj>
  [253] getprop 561 ............................. <pImageElements>
  [256] getlocal 2 .............................. <i>
  [258] pusharglist 2 ........................... <pImageElements, i>
  [260] objcall 41 .............................. <pImageElements[i]>
  [262] pusharglist 2 ........................... <tParentWndObj, pImageElements[i]>
  [264] objcall 178 ............................. <tParentWndObj.getElement(pImageElements[i])>
  [266] pusharglistnoret 3 ...................... <me, getMember(tBitmap).image, tParentWndObj.getElement(pImageElements[i])>
  [268] objcall 524 ............................. me.centerBlitImageToElement(getMember(tBitmap).image, tParentWndObj.getElement(pImageElements[i]))
  [271] jmp [334] ............................... next repeat
  [274] getlocal 4 .............................. <tObjectLoadList>
  [276] pushsymb 473 ............................ <#assetId>
  [279] getlocal 5 .............................. <tBitmap>
  [281] pushsymb 399 ............................ <#type>
  [284] pushsymb 474 ............................ <#bitmap>
  [287] pushsymb 100 ............................ <#props>
  [289] pushsymb 101 ............................ <#imagedownload>
  [291] pushint8 1 .............................. <1>
  [293] pushsymb 568 ............................ <#element>
  [296] getprop 561 ............................. <pImageElements>
  [299] getlocal 2 .............................. <i>
  [301] pusharglist 2 ........................... <pImageElements, i>
  [303] objcall 41 .............................. <pImageElements[i]>
  [305] pushsymb 473 ............................ <#assetId>
  [308] getlocal 5 .............................. <tBitmap>
  [310] pushsymb 103 ............................ <#pageid>
  [312] getparam 0 .............................. <me>
  [314] pushsymb 528 ............................ <#pPageData>
  [317] pushsymb 103 ............................ <#pageid>
  [319] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [321] objcall 123 ............................. <me.pPageData[#pageid]>
  [323] pusharglist 8 ........................... <[#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]>
  [325] pushproplist ............................ <[#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]>
  [326] pusharglist 6 ........................... <[#assetId: tBitmap, #type: #bitmap, #props: [#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]]>
  [328] pushproplist ............................ <[#assetId: tBitmap, #type: #bitmap, #props: [#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]]>
  [329] pusharglistnoret 2 ...................... <tObjectLoadList, [#assetId: tBitmap, #type: #bitmap, #props: [#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]]>
  [331] objcall 339 ............................. tObjectLoadList.add([#assetId: tBitmap, #type: #bitmap, #props: [#imagedownload: 1, #element: pImageElements[i], #assetId: tBitmap, #pageid: me.pPageData[#pageid]]])
  [334] pushint8 1
  [336] getlocal 2
  [338] add
  [339] setlocal 2
  [341] endrepeat [174]
  [343] getlocal 4 .............................. <tObjectLoadList>
  [345] getobjprop 48 ........................... <tObjectLoadList.count>
  [347] pushzero ................................ <0>
  [348] gt ...................................... <tObjectLoadList.count > 0>
  [349] jmpifz [433] ............................ if tObjectLoadList.count > 0 then
  [352] getprop 313 ............................. <pPageItemDownloader>
  [355] getparam 0 .............................. <me>
  [357] pushsymb 10 ............................. <#downloadCompleted>
  [359] pusharglistnoret 3 ...................... <pPageItemDownloader, me, #downloadCompleted>
  [361] objcall 452 ............................. pPageItemDownloader.defineCallback(me, #downloadCompleted)
  [364] getlocal 4 .............................. <tObjectLoadList>
  [366] peek 0
  [368] pusharglist 1
  [370] extcall 48
  [372] pushint8 1
  [374] peek 0
  [376] peek 2
  [378] lteq
  [379] jmpifz [431] ............................ repeat with tLoadObject in tObjectLoadList
  [382] peek 2
  [384] peek 1
  [386] pusharglist 2
  [388] extcall 41
  [390] setlocal 6
  [392] getprop 313 ............................. <pPageItemDownloader>
  [395] getlocal 6 .............................. <tLoadObject>
  [397] pushsymb 399 ............................ <#type>
  [400] pusharglist 2 ........................... <tLoadObject, #type>
  [402] objcall 41 .............................. <tLoadObject[#type]>
  [404] getlocal 6 .............................. <tLoadObject>
  [406] pushsymb 473 ............................ <#assetId>
  [409] pusharglist 2 ........................... <tLoadObject, #assetId>
  [411] objcall 41 .............................. <tLoadObject[#assetId]>
  [413] getlocal 6 .............................. <tLoadObject>
  [415] pushsymb 100 ............................ <#props>
  [417] pusharglist 2 ........................... <tLoadObject, #props>
  [419] objcall 41 .............................. <tLoadObject[#props]>
  [421] pusharglistnoret 4 ...................... <pPageItemDownloader, tLoadObject[#type], tLoadObject[#assetId], tLoadObject[#props]>
  [423] objcall 455 ............................. pPageItemDownloader.registerDownload(tLoadObject[#type], tLoadObject[#assetId], tLoadObject[#props])
  [426] pushint8 1
  [428] add
  [429] endrepeat [374]
  [431] pop 3
  [433] getprop 557 ............................. <pProductStrip>
  [436] pusharglist 1 ........................... <pProductStrip>
  [438] extcall 57 .............................. <objectp(pProductStrip)>
  [440] getparam 1 .............................. <tParentWndObj>
  [442] pushcons 15 ............................. <"ctlg_productstrip">
  [444] pusharglist 2 ........................... <tParentWndObj, "ctlg_productstrip">
  [446] objcall 253 ............................. <tParentWndObj.elementExists("ctlg_productstrip")>
  [448] and ..................................... <objectp(pProductStrip) and tParentWndObj.elementExists("ctlg_productstrip")>
  [449] jmpifz [475] ............................ if objectp(pProductStrip) and tParentWndObj.elementExists("ctlg_productstrip") then
  [452] getprop 557 ............................. <pProductStrip>
  [455] getparam 1 .............................. <tParentWndObj>
  [457] pushcons 15 ............................. <"ctlg_productstrip">
  [459] pusharglist 2 ........................... <tParentWndObj, "ctlg_productstrip">
  [461] objcall 178 ............................. <tParentWndObj.getElement("ctlg_productstrip")>
  [463] getparam 1 .............................. <tParentWndObj>
  [465] pushcons 16 ............................. <"ctlg_products_scroll">
  [467] pusharglist 2 ........................... <tParentWndObj, "ctlg_products_scroll">
  [469] objcall 178 ............................. <tParentWndObj.getElement("ctlg_products_scroll")>
  [471] pusharglistnoret 3 ...................... <pProductStrip, tParentWndObj.getElement("ctlg_productstrip"), tParentWndObj.getElement("ctlg_products_scroll")>
  [473] objcall 2 ............................... pProductStrip.setTargetElement(tParentWndObj.getElement("ctlg_productstrip"), tParentWndObj.getElement("ctlg_products_scroll"))
  [475] getparam 0 .............................. <me>
  [477] getparam 1 .............................. <tParentWndObj>
  [479] pusharglist 2 ........................... <me, tParentWndObj>
  [481] objcall 520 ............................. <me.getPossibleBuyButtonTypes(tParentWndObj)>
  [484] setprop 558 ............................. pOfferTypesAvailable = me.getPossibleBuyButtonTypes(tParentWndObj)
  [487] getparam 0 .............................. <me>
  [489] pusharglistnoret 1 ...................... <me>
  [491] objcall 552 ............................. me.hidePriceBox()
  [494] ret
end

on unmergeWindow me, tParentWndObj
  [  0] pushcons 11 ............................. <"ctlg_">
  [  2] getparam 0 .............................. <me>
  [  4] pushsymb 528 ............................ <#pPageData>
  [  7] pushsymb 242 ............................ <#layout>
  [  9] pusharglist 3 ........................... <me, #pPageData, #layout>
  [ 11] objcall 123 ............................. <me.pPageData[#layout]>
  [ 13] joinstr ................................. <"ctlg_" & me.pPageData[#layout]>
  [ 14] pushcons 12 ............................. <".window">
  [ 16] joinstr ................................. <"ctlg_" & me.pPageData[#layout] & ".window">
  [ 17] setlocal 0 .............................. tLayoutMember = "ctlg_" & me.pPageData[#layout] & ".window"
  [ 19] getlocal 0 .............................. <tLayoutMember>
  [ 21] pusharglist 1 ........................... <tLayoutMember>
  [ 23] extcall 63 .............................. <memberExists(tLayoutMember)>
  [ 25] not ..................................... <not memberExists(tLayoutMember)>
  [ 26] jmpifz [ 49] ............................ if not memberExists(tLayoutMember) then
  [ 29] getparam 0 .............................. <me>
  [ 31] pushcons 13 ............................. <"Layout member ">
  [ 33] getlocal 0 .............................. <tLayoutMember>
  [ 35] joinstr ................................. <"Layout member " & tLayoutMember>
  [ 36] pushcons 14 ............................. <" missing.">
  [ 38] joinstr ................................. <"Layout member " & tLayoutMember & " missing.">
  [ 39] pushsymb 244 ............................ <#mergeWindow>
  [ 41] pusharglist 3 ........................... <me, "Layout member " & tLayoutMember & " missing.", #mergeWindow>
  [ 43] extcall 46 .............................. <error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)>
  [ 45] pusharglistnoret 1 ...................... <error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)>
  [ 47] extcall 37 .............................. return error(me, "Layout member " & tLayoutMember & " missing.", #mergeWindow)
  [ 49] getparam 1 .............................. <tParentWndObj>
  [ 51] pusharglistnoret 1 ...................... <tParentWndObj>
  [ 53] objcall 576 ............................. tParentWndObj.unmerge()
  [ 56] ret
end

on hidePriceBox me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 558 ............................. <pOfferTypesAvailable>
  [  9] getobjprop 48 ........................... <pOfferTypesAvailable.count>
  [ 11] lteq
  [ 12] jmpifz [100] ............................ repeat with i = 1 to pOfferTypesAvailable.count
  [ 15] getprop 558 ............................. <pOfferTypesAvailable>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [ 22] objcall 41 .............................. <pOfferTypesAvailable[i]>
  [ 24] pushsymb 577 ............................ <#hideelements>
  [ 27] pusharglist 2 ........................... <pOfferTypesAvailable[i], #hideelements>
  [ 29] objcall 41 .............................. <pOfferTypesAvailable[i][#hideelements]>
  [ 31] setlocal 1 .............................. tElementList = pOfferTypesAvailable[i][#hideelements]
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 2
  [ 37] getlocal 2
  [ 39] getlocal 1 .............................. <tElementList>
  [ 41] getobjprop 48 ........................... <tElementList.count>
  [ 43] lteq
  [ 44] jmpifz [ 91] ............................ repeat with j = 1 to tElementList.count
  [ 47] getprop 150 ............................. <pWndObj>
  [ 49] getlocal 1 .............................. <tElementList>
  [ 51] getlocal 2 .............................. <j>
  [ 53] pusharglist 2 ........................... <tElementList, j>
  [ 55] objcall 41 .............................. <tElementList[j]>
  [ 57] pusharglist 2 ........................... <pWndObj, tElementList[j]>
  [ 59] objcall 253 ............................. <pWndObj.elementExists(tElementList[j])>
  [ 61] jmpifz [ 82] ............................ if pWndObj.elementExists(tElementList[j]) then
  [ 64] getprop 150 ............................. <pWndObj>
  [ 66] getlocal 1 .............................. <tElementList>
  [ 68] getlocal 2 .............................. <j>
  [ 70] pusharglist 2 ........................... <tElementList, j>
  [ 72] objcall 41 .............................. <tElementList[j]>
  [ 74] pusharglist 2 ........................... <pWndObj, tElementList[j]>
  [ 76] objcall 178 ............................. <pWndObj.getElement(tElementList[j])>
  [ 78] pusharglistnoret 1 ...................... <pWndObj.getElement(tElementList[j])>
  [ 80] objcall 121 ............................. pWndObj.getElement(tElementList[j]).hide()
  [ 82] pushint8 1
  [ 84] getlocal 2
  [ 86] add
  [ 87] setlocal 2
  [ 89] endrepeat [ 37]
  [ 91] pushint8 1
  [ 93] getlocal 0
  [ 95] add
  [ 96] setlocal 0
  [ 98] endrepeat [  4]
  [100] ret
end

on showPriceBox me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 558 ............................. <pOfferTypesAvailable>
  [  9] getobjprop 48 ........................... <pOfferTypesAvailable.count>
  [ 11] lteq
  [ 12] jmpifz [100] ............................ repeat with i = 1 to pOfferTypesAvailable.count
  [ 15] getprop 558 ............................. <pOfferTypesAvailable>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [ 22] objcall 41 .............................. <pOfferTypesAvailable[i]>
  [ 24] pushsymb 577 ............................ <#hideelements>
  [ 27] pusharglist 2 ........................... <pOfferTypesAvailable[i], #hideelements>
  [ 29] objcall 41 .............................. <pOfferTypesAvailable[i][#hideelements]>
  [ 31] setlocal 1 .............................. tElementList = pOfferTypesAvailable[i][#hideelements]
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 2
  [ 37] getlocal 2
  [ 39] getlocal 1 .............................. <tElementList>
  [ 41] getobjprop 48 ........................... <tElementList.count>
  [ 43] lteq
  [ 44] jmpifz [ 91] ............................ repeat with j = 1 to tElementList.count
  [ 47] getprop 150 ............................. <pWndObj>
  [ 49] getlocal 1 .............................. <tElementList>
  [ 51] getlocal 2 .............................. <j>
  [ 53] pusharglist 2 ........................... <tElementList, j>
  [ 55] objcall 41 .............................. <tElementList[j]>
  [ 57] pusharglist 2 ........................... <pWndObj, tElementList[j]>
  [ 59] objcall 253 ............................. <pWndObj.elementExists(tElementList[j])>
  [ 61] jmpifz [ 82] ............................ if pWndObj.elementExists(tElementList[j]) then
  [ 64] getprop 150 ............................. <pWndObj>
  [ 66] getlocal 1 .............................. <tElementList>
  [ 68] getlocal 2 .............................. <j>
  [ 70] pusharglist 2 ........................... <tElementList, j>
  [ 72] objcall 41 .............................. <tElementList[j]>
  [ 74] pusharglist 2 ........................... <pWndObj, tElementList[j]>
  [ 76] objcall 178 ............................. <pWndObj.getElement(tElementList[j])>
  [ 78] pusharglistnoret 1 ...................... <pWndObj.getElement(tElementList[j])>
  [ 80] objcall 179 ............................. pWndObj.getElement(tElementList[j]).show()
  [ 82] pushint8 1
  [ 84] getlocal 2
  [ 86] add
  [ 87] setlocal 2
  [ 89] endrepeat [ 37]
  [ 91] pushint8 1
  [ 93] getlocal 0
  [ 95] add
  [ 96] setlocal 0
  [ 98] endrepeat [  4]
  [100] ret
end

on setBuyButtonStates me, tOfferTypeList
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 558 ............................. <pOfferTypesAvailable>
  [  9] getobjprop 48 ........................... <pOfferTypesAvailable.count>
  [ 11] lteq
  [ 12] jmpifz [ 64] ............................ repeat with i = 1 to pOfferTypesAvailable.count
  [ 15] getprop 150 ............................. <pWndObj>
  [ 17] getprop 558 ............................. <pOfferTypesAvailable>
  [ 20] getlocal 0 .............................. <i>
  [ 22] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [ 24] objcall 343 ............................. <pOfferTypesAvailable.getPropAt(i)>
  [ 27] pusharglist 2 ........................... <pWndObj, pOfferTypesAvailable.getPropAt(i)>
  [ 29] objcall 253 ............................. <pWndObj.elementExists(pOfferTypesAvailable.getPropAt(i))>
  [ 31] jmpifz [ 55] ............................ if pWndObj.elementExists(pOfferTypesAvailable.getPropAt(i)) then
  [ 34] getprop 150 ............................. <pWndObj>
  [ 36] getprop 558 ............................. <pOfferTypesAvailable>
  [ 39] getlocal 0 .............................. <i>
  [ 41] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [ 43] objcall 343 ............................. <pOfferTypesAvailable.getPropAt(i)>
  [ 46] pusharglist 2 ........................... <pWndObj, pOfferTypesAvailable.getPropAt(i)>
  [ 48] objcall 178 ............................. <pWndObj.getElement(pOfferTypesAvailable.getPropAt(i))>
  [ 50] pusharglistnoret 1 ...................... <pWndObj.getElement(pOfferTypesAvailable.getPropAt(i))>
  [ 52] objcall 578 ............................. pWndObj.getElement(pOfferTypesAvailable.getPropAt(i)).deactivate()
  [ 55] pushint8 1
  [ 57] getlocal 0
  [ 59] add
  [ 60] setlocal 0
  [ 62] endrepeat [  4]
  [ 64] pushint8 1 .............................. <1>
  [ 66] setlocal 1
  [ 68] getlocal 1
  [ 70] getparam 1 .............................. <tOfferTypeList>
  [ 72] getobjprop 48 ........................... <tOfferTypeList.count>
  [ 74] lteq
  [ 75] jmpifz [179] ............................ repeat with j = 1 to tOfferTypeList.count
  [ 78] pushint8 1 .............................. <1>
  [ 80] setlocal 0
  [ 82] getlocal 0
  [ 84] getprop 558 ............................. <pOfferTypesAvailable>
  [ 87] getobjprop 48 ........................... <pOfferTypesAvailable.count>
  [ 89] lteq
  [ 90] jmpifz [170] ............................ repeat with i = 1 to pOfferTypesAvailable.count
  [ 93] getprop 558 ............................. <pOfferTypesAvailable>
  [ 96] getlocal 0 .............................. <i>
  [ 98] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [100] objcall 41 .............................. <pOfferTypesAvailable[i]>
  [102] pushsymb 399 ............................ <#type>
  [105] pusharglist 2 ........................... <pOfferTypesAvailable[i], #type>
  [107] objcall 41 .............................. <pOfferTypesAvailable[i][#type]>
  [109] getparam 1 .............................. <tOfferTypeList>
  [111] getlocal 1 .............................. <j>
  [113] pusharglist 2 ........................... <tOfferTypeList, j>
  [115] objcall 41 .............................. <tOfferTypeList[j]>
  [117] eq ...................................... <pOfferTypesAvailable[i][#type] = tOfferTypeList[j]>
  [118] jmpifz [161] ............................ if pOfferTypesAvailable[i][#type] = tOfferTypeList[j] then
  [121] getprop 150 ............................. <pWndObj>
  [123] getprop 558 ............................. <pOfferTypesAvailable>
  [126] getlocal 0 .............................. <i>
  [128] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [130] objcall 343 ............................. <pOfferTypesAvailable.getPropAt(i)>
  [133] pusharglist 2 ........................... <pWndObj, pOfferTypesAvailable.getPropAt(i)>
  [135] objcall 253 ............................. <pWndObj.elementExists(pOfferTypesAvailable.getPropAt(i))>
  [137] jmpifz [161] ............................ if pWndObj.elementExists(pOfferTypesAvailable.getPropAt(i)) then
  [140] getprop 150 ............................. <pWndObj>
  [142] getprop 558 ............................. <pOfferTypesAvailable>
  [145] getlocal 0 .............................. <i>
  [147] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [149] objcall 343 ............................. <pOfferTypesAvailable.getPropAt(i)>
  [152] pusharglist 2 ........................... <pWndObj, pOfferTypesAvailable.getPropAt(i)>
  [154] objcall 178 ............................. <pWndObj.getElement(pOfferTypesAvailable.getPropAt(i))>
  [156] pusharglistnoret 1 ...................... <pWndObj.getElement(pOfferTypesAvailable.getPropAt(i))>
  [158] objcall 579 ............................. pWndObj.getElement(pOfferTypesAvailable.getPropAt(i)).Activate()
  [161] pushint8 1
  [163] getlocal 0
  [165] add
  [166] setlocal 0
  [168] endrepeat [ 82]
  [170] pushint8 1
  [172] getlocal 1
  [174] add
  [175] setlocal 1
  [177] endrepeat [ 68]
  [179] ret
end

on resolveLargePreview me, tOffer
  [  0] getparam 1 .............................. <tOffer>
  [  2] pusharglist 1 ........................... <tOffer>
  [  4] extcall 57 .............................. <objectp(tOffer)>
  [  6] not ..................................... <not objectp(tOffer)>
  [  7] jmpifz [ 27] ............................ if not objectp(tOffer) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 17 ............................. <"Invalid input format">
  [ 14] pushsymb 555 ............................ <#resolveLargePreview>
  [ 17] pushsymb 47 ............................. <#major>
  [ 19] pusharglist 4 ........................... <me, "Invalid input format", #resolveLargePreview, #major>
  [ 21] extcall 46 .............................. <error(me, "Invalid input format", #resolveLargePreview, #major)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Invalid input format", #resolveLargePreview, #major)>
  [ 25] extcall 37 .............................. return error(me, "Invalid input format", #resolveLargePreview, #major)
  [ 27] getparam 1 .............................. <tOffer>
  [ 29] pusharglist 1 ........................... <tOffer>
  [ 31] objcall 59 .............................. <tOffer.getCount()>
  [ 33] pushint8 1 .............................. <1>
  [ 35] lt ...................................... <tOffer.getCount() < 1>
  [ 36] jmpifz [ 56] ............................ if tOffer.getCount() < 1 then
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 18 ............................. <"Offer has no content">
  [ 43] pushsymb 555 ............................ <#resolveLargePreview>
  [ 46] pushsymb 47 ............................. <#major>
  [ 48] pusharglist 4 ........................... <me, "Offer has no content", #resolveLargePreview, #major>
  [ 50] extcall 46 .............................. <error(me, "Offer has no content", #resolveLargePreview, #major)>
  [ 52] pusharglistnoret 1 ...................... <error(me, "Offer has no content", #resolveLargePreview, #major)>
  [ 54] extcall 37 .............................. return error(me, "Offer has no content", #resolveLargePreview, #major)
  [ 56] pushcons 19 ............................. <"ctlg_pic_">
  [ 58] setlocal 0 .............................. tPrevMember = "ctlg_pic_"
  [ 60] getparam 1 .............................. <tOffer>
  [ 62] pusharglist 1 ........................... <tOffer>
  [ 64] objcall 581 ............................. <tOffer.getName()>
  [ 67] setlocal 1 .............................. tOfferName = tOffer.getName()
  [ 69] getlocal 0 .............................. <tPrevMember>
  [ 71] getlocal 1 .............................. <tOfferName>
  [ 73] joinstr ................................. <tPrevMember & tOfferName>
  [ 74] pusharglist 1 ........................... <tPrevMember & tOfferName>
  [ 76] extcall 63 .............................. <memberExists(tPrevMember & tOfferName)>
  [ 78] jmpifz [ 96] ............................ if memberExists(tPrevMember & tOfferName) then
  [ 81] getlocal 0 .............................. <tPrevMember>
  [ 83] getlocal 1 .............................. <tOfferName>
  [ 85] joinstr ................................. <tPrevMember & tOfferName>
  [ 86] pusharglist 1 ........................... <tPrevMember & tOfferName>
  [ 88] extcall 21 .............................. <getMember(tPrevMember & tOfferName)>
  [ 90] getobjprop 17 ........................... <getMember(tPrevMember & tOfferName).image>
  [ 92] pusharglistnoret 1 ...................... <getMember(tPrevMember & tOfferName).image>
  [ 94] extcall 37 .............................. return getMember(tPrevMember & tOfferName).image
  [ 96] getparam 1 .............................. <tOffer>
  [ 98] pusharglist 1 ........................... <tOffer>
  [100] objcall 59 .............................. <tOffer.getCount()>
  [102] pushint8 1 .............................. <1>
  [104] eq ...................................... <tOffer.getCount() = 1>
  [105] jmpifz [393] ............................ if tOffer.getCount() = 1 then / else
  [108] getprop 546 ............................. <pPersistentFurniData>
  [111] getparam 1 .............................. <tOffer>
  [113] pushint8 1 .............................. <1>
  [115] pusharglist 2 ........................... <tOffer, 1>
  [117] objcall 60 .............................. <tOffer.getContent(1)>
  [119] pusharglist 1 ........................... <tOffer.getContent(1)>
  [121] objcall 61 .............................. <tOffer.getContent(1).getType()>
  [123] getparam 1 .............................. <tOffer>
  [125] pushint8 1 .............................. <1>
  [127] pusharglist 2 ........................... <tOffer, 1>
  [129] objcall 60 .............................. <tOffer.getContent(1)>
  [131] pusharglist 1 ........................... <tOffer.getContent(1)>
  [133] objcall 62 .............................. <tOffer.getContent(1).getClassId()>
  [135] pusharglist 3 ........................... <pPersistentFurniData, tOffer.getContent(1).getType(), tOffer.getContent(1).getClassId()>
  [137] objcall 487 ............................. <pPersistentFurniData.getProps(tOffer.getContent(1).getType(), tOffer.getContent(1).getClassId())>
  [140] setlocal 2 .............................. tFurniProps = pPersistentFurniData.getProps(tOffer.getContent(1).getType(), tOffer.getContent(1).getClassId())
  [142] getlocal 2 .............................. <tFurniProps>
  [144] pusharglist 1 ........................... <tFurniProps>
  [146] extcall 349 ............................. <listp(tFurniProps)>
  [149] not ..................................... <not listp(tFurniProps)>
  [150] jmpifz [165] ............................ if not listp(tFurniProps) then
  [153] pushcons 20 ............................. <"no_icon_small">
  [155] pusharglist 1 ........................... <"no_icon_small">
  [157] extcall 21 .............................. <getMember("no_icon_small")>
  [159] getobjprop 17 ........................... <getMember("no_icon_small").image>
  [161] pusharglistnoret 1 ...................... <getMember("no_icon_small").image>
  [163] extcall 37 .............................. return getMember("no_icon_small").image
  [165] getparam 0 .............................. <me>
  [167] getlocal 2 .............................. <tFurniProps>
  [169] pushsymb 268 ............................ <#class>
  [172] pusharglist 2 ........................... <tFurniProps, #class>
  [174] objcall 102 ............................. <tFurniProps.getaProp(#class)>
  [176] pusharglist 2 ........................... <me, tFurniProps.getaProp(#class)>
  [178] objcall 149 ............................. <me.getClassAsset(tFurniProps.getaProp(#class))>
  [180] setlocal 3 .............................. tClass = me.getClassAsset(tFurniProps.getaProp(#class))
  [182] getlocal 3 .............................. <tClass>
  [184] pushcons 21 ............................. <"poster">
  [186] eq ...................................... <tClass = "poster">
  [187] jmpifz [208] ............................ if tClass = "poster" then
  [190] getlocal 3 .............................. <tClass>
  [192] getparam 1 .............................. <tOffer>
  [194] pushint8 1 .............................. <1>
  [196] pusharglist 2 ........................... <tOffer, 1>
  [198] objcall 60 .............................. <tOffer.getContent(1)>
  [200] pusharglist 1 ........................... <tOffer.getContent(1)>
  [202] objcall 548 ............................. <tOffer.getContent(1).getExtraParam()>
  [205] joinpadstr .............................. <tClass && tOffer.getContent(1).getExtraParam()>
  [206] setlocal 3 .............................. tClass = tClass && tOffer.getContent(1).getExtraParam()
  [208] pushsymb 472 ............................ <#dynamicdownloader>
  [211] pusharglist 1 ........................... <#dynamicdownloader>
  [213] extcall 471 ............................. <getThread(#dynamicdownloader)>
  [216] pusharglist 1 ........................... <getThread(#dynamicdownloader)>
  [218] objcall 170 ............................. <getThread(#dynamicdownloader).getComponent()>
  [220] getlocal 3 .............................. <tClass>
  [222] pusharglist 2 ........................... <getThread(#dynamicdownloader).getComponent(), tClass>
  [224] objcall 582 ............................. <getThread(#dynamicdownloader).getComponent().isAssetDownloaded(tClass)>
  [227] jmpifz [390] ............................ if getThread(#dynamicdownloader).getComponent().isAssetDownloaded(tClass) then
  [230] pusharglist 0 ........................... <[:]>
  [232] pushproplist ............................ <[:]>
  [233] setlocal 4 .............................. tPrevProps = [:]
  [235] getlocal 4 .............................. <tPrevProps>
  [237] pushcons 22 ............................. <"class">
  [239] getlocal 2 .............................. <tFurniProps>
  [241] pushsymb 268 ............................ <#class>
  [244] pusharglist 2 ........................... <tFurniProps, #class>
  [246] objcall 41 .............................. <tFurniProps[#class]>
  [248] pusharglistnoret 3 ...................... <tPrevProps, "class", tFurniProps[#class]>
  [250] objcall 254 ............................. tPrevProps["class"] = tFurniProps[#class]
  [252] getlocal 4 .............................. <tPrevProps>
  [254] pushcons 23 ............................. <"objectType">
  [256] getlocal 2 .............................. <tFurniProps>
  [258] pushsymb 399 ............................ <#type>
  [261] pusharglist 2 ........................... <tFurniProps, #type>
  [263] objcall 41 .............................. <tFurniProps[#type]>
  [265] pusharglistnoret 3 ...................... <tPrevProps, "objectType", tFurniProps[#type]>
  [267] objcall 254 ............................. tPrevProps["objectType"] = tFurniProps[#type]
  [269] getlocal 4 .............................. <tPrevProps>
  [271] pushcons 24 ............................. <"direction">
  [273] getlocal 2 .............................. <tFurniProps>
  [275] pushsymb 583 ............................ <#defaultDir>
  [278] pusharglist 2 ........................... <tFurniProps, #defaultDir>
  [280] objcall 41 .............................. <tFurniProps[#defaultDir]>
  [282] pusharglistnoret 3 ...................... <tPrevProps, "direction", tFurniProps[#defaultDir]>
  [284] objcall 254 ............................. tPrevProps["direction"] = tFurniProps[#defaultDir]
  [286] getlocal 4 .............................. <tPrevProps>
  [288] pushcons 25 ............................. <"dimensions">
  [290] getlocal 2 .............................. <tFurniProps>
  [292] pushsymb 584 ............................ <#xdim>
  [295] pusharglist 2 ........................... <tFurniProps, #xdim>
  [297] objcall 41 .............................. <tFurniProps[#xdim]>
  [299] pushcons 26 ............................. <",">
  [301] joinstr ................................. <tFurniProps[#xdim] & ",">
  [302] getlocal 2 .............................. <tFurniProps>
  [304] pushsymb 585 ............................ <#ydim>
  [307] pusharglist 2 ........................... <tFurniProps, #ydim>
  [309] objcall 41 .............................. <tFurniProps[#ydim]>
  [311] joinstr ................................. <tFurniProps[#xdim] & "," & tFurniProps[#ydim]>
  [312] pusharglistnoret 3 ...................... <tPrevProps, "dimensions", tFurniProps[#xdim] & "," & tFurniProps[#ydim]>
  [314] objcall 254 ............................. tPrevProps["dimensions"] = tFurniProps[#xdim] & "," & tFurniProps[#ydim]
  [316] getlocal 4 .............................. <tPrevProps>
  [318] pushcons 27 ............................. <"partColors">
  [320] getlocal 2 .............................. <tFurniProps>
  [322] pushsymb 547 ............................ <#partColors>
  [325] pusharglist 2 ........................... <tFurniProps, #partColors>
  [327] objcall 41 .............................. <tFurniProps[#partColors]>
  [329] pusharglistnoret 3 ...................... <tPrevProps, "partColors", tFurniProps[#partColors]>
  [331] objcall 254 ............................. tPrevProps["partColors"] = tFurniProps[#partColors]
  [333] getlocal 4 .............................. <tPrevProps>
  [335] pushcons 22 ............................. <"class">
  [337] pusharglist 2 ........................... <tPrevProps, "class">
  [339] objcall 41 .............................. <tPrevProps["class"]>
  [341] pushcons 21 ............................. <"poster">
  [343] eq ...................................... <tPrevProps["class"] = "poster">
  [344] jmpifz [377] ............................ if tPrevProps["class"] = "poster" then
  [347] getlocal 4 .............................. <tPrevProps>
  [349] pushcons 22 ............................. <"class">
  [351] getlocal 4 .............................. <tPrevProps>
  [353] pushcons 22 ............................. <"class">
  [355] pusharglist 2 ........................... <tPrevProps, "class">
  [357] objcall 41 .............................. <tPrevProps["class"]>
  [359] getparam 1 .............................. <tOffer>
  [361] pushint8 1 .............................. <1>
  [363] pusharglist 2 ........................... <tOffer, 1>
  [365] objcall 60 .............................. <tOffer.getContent(1)>
  [367] pusharglist 1 ........................... <tOffer.getContent(1)>
  [369] objcall 548 ............................. <tOffer.getContent(1).getExtraParam()>
  [372] joinpadstr .............................. <tPrevProps["class"] && tOffer.getContent(1).getExtraParam()>
  [373] pusharglistnoret 3 ...................... <tPrevProps, "class", tPrevProps["class"] && tOffer.getContent(1).getExtraParam()>
  [375] objcall 254 ............................. tPrevProps["class"] = tPrevProps["class"] && tOffer.getContent(1).getExtraParam()
  [377] getparam 0 .............................. <me>
  [379] getlocal 4 .............................. <tPrevProps>
  [381] pusharglist 2 ........................... <me, tPrevProps>
  [383] objcall 519 ............................. <me.renderLargePreviewImage(tPrevProps)>
  [386] pusharglistnoret 1 ...................... <me.renderLargePreviewImage(tPrevProps)>
  [388] extcall 37 .............................. return me.renderLargePreviewImage(tPrevProps)
  [390] jmp [551]
  [393] getprop 560 ............................. <pDealPreviewObj>
  [396] pusharglist 1 ........................... <pDealPreviewObj>
  [398] extcall 57 .............................. <objectp(pDealPreviewObj)>
  [400] not ..................................... <not objectp(pDealPreviewObj)>
  [401] jmpifz [419] ............................ if not objectp(pDealPreviewObj) then
  [404] getparam 0 .............................. <me>
  [406] pushcons 28 ............................. <"Deal preview renderer object missing.">
  [408] pushsymb 555 ............................ <#resolveLargePreview>
  [411] pusharglist 3 ........................... <me, "Deal preview renderer object missing.", #resolveLargePreview>
  [413] extcall 46 .............................. <error(me, "Deal preview renderer object missing.", #resolveLargePreview)>
  [415] pusharglistnoret 1 ...................... <error(me, "Deal preview renderer object missing.", #resolveLargePreview)>
  [417] extcall 37 .............................. return error(me, "Deal preview renderer object missing.", #resolveLargePreview)
  [419] pushint8 1 .............................. <1>
  [421] setlocal 5 .............................. tAssetsLoaded = 1
  [423] pushint8 1 .............................. <1>
  [425] setlocal 6
  [427] getlocal 6
  [429] getparam 1 .............................. <tOffer>
  [431] pusharglist 1 ........................... <tOffer>
  [433] objcall 59 .............................. <tOffer.getCount()>
  [435] lteq
  [436] jmpifz [523] ............................ repeat with k = 1 to tOffer.getCount()
  [439] getparam 1 .............................. <tOffer>
  [441] getlocal 6 .............................. <k>
  [443] pusharglist 2 ........................... <tOffer, k>
  [445] objcall 60 .............................. <tOffer.getContent(k)>
  [447] setlocal 7 .............................. tItem = tOffer.getContent(k)
  [449] getprop 546 ............................. <pPersistentFurniData>
  [452] getlocal 7 .............................. <tItem>
  [454] pusharglist 1 ........................... <tItem>
  [456] objcall 61 .............................. <tItem.getType()>
  [458] getlocal 7 .............................. <tItem>
  [460] pusharglist 1 ........................... <tItem>
  [462] objcall 62 .............................. <tItem.getClassId()>
  [464] pusharglist 3 ........................... <pPersistentFurniData, tItem.getType(), tItem.getClassId()>
  [466] objcall 487 ............................. <pPersistentFurniData.getProps(tItem.getType(), tItem.getClassId())>
  [469] setlocal 2 .............................. tFurniProps = pPersistentFurniData.getProps(tItem.getType(), tItem.getClassId())
  [471] getparam 0 .............................. <me>
  [473] getlocal 2 .............................. <tFurniProps>
  [475] pushsymb 268 ............................ <#class>
  [478] pusharglist 2 ........................... <tFurniProps, #class>
  [480] objcall 102 ............................. <tFurniProps.getaProp(#class)>
  [482] pusharglist 2 ........................... <me, tFurniProps.getaProp(#class)>
  [484] objcall 149 ............................. <me.getClassAsset(tFurniProps.getaProp(#class))>
  [486] setlocal 3 .............................. tClass = me.getClassAsset(tFurniProps.getaProp(#class))
  [488] pushsymb 472 ............................ <#dynamicdownloader>
  [491] pusharglist 1 ........................... <#dynamicdownloader>
  [493] extcall 471 ............................. <getThread(#dynamicdownloader)>
  [496] pusharglist 1 ........................... <getThread(#dynamicdownloader)>
  [498] objcall 170 ............................. <getThread(#dynamicdownloader).getComponent()>
  [500] getlocal 3 .............................. <tClass>
  [502] pusharglist 2 ........................... <getThread(#dynamicdownloader).getComponent(), tClass>
  [504] objcall 582 ............................. <getThread(#dynamicdownloader).getComponent().isAssetDownloaded(tClass)>
  [507] not ..................................... <not getThread(#dynamicdownloader).getComponent().isAssetDownloaded(tClass)>
  [508] jmpifz [514] ............................ if not getThread(#dynamicdownloader).getComponent().isAssetDownloaded(tClass) then
  [511] pushzero ................................ <0>
  [512] setlocal 5 .............................. tAssetsLoaded = 0
  [514] pushint8 1
  [516] getlocal 6
  [518] add
  [519] setlocal 6
  [521] endrepeat [427]
  [523] getprop 560 ............................. <pDealPreviewObj>
  [526] getparam 0 .............................. <me>
  [528] getparam 1 .............................. <tOffer>
  [530] pusharglist 2 ........................... <me, tOffer>
  [532] objcall 526 ............................. <me.convertOfferListToDeallist(tOffer)>
  [535] pusharglistnoret 2 ...................... <pDealPreviewObj, me.convertOfferListToDeallist(tOffer)>
  [537] objcall 237 ............................. pDealPreviewObj.define(me.convertOfferListToDeallist(tOffer))
  [539] getprop 560 ............................. <pDealPreviewObj>
  [542] pusharglist 1 ........................... <pDealPreviewObj>
  [544] objcall 263 ............................. <pDealPreviewObj.getPicture()>
  [547] pusharglistnoret 1 ...................... <pDealPreviewObj.getPicture()>
  [549] extcall 37 .............................. return pDealPreviewObj.getPicture()
  [551] ret
end

on showPreview me, tOfferGroup
  [  0] getprop 150 ............................. <pWndObj>
  [  2] pusharglist 1 ........................... <pWndObj>
  [  4] extcall 78 .............................. <voidp(pWndObj)>
  [  6] jmpifz [ 28] ............................ if voidp(pWndObj) then
  [  9] pushcons 29 ............................. <RETURN>
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 30 ............................. <"Missing handle to window object!">
  [ 15] pushsymb 556 ............................ <#showPreview>
  [ 18] pushsymb 47 ............................. <#major>
  [ 20] pusharglist 4 ........................... <me, "Missing handle to window object!", #showPreview, #major>
  [ 22] extcall 46 .............................. <error(me, "Missing handle to window object!", #showPreview, #major)>
  [ 24] pusharglistnoret 2 ...................... <RETURN, error(me, "Missing handle to window object!", #showPreview, #major)>
  [ 26] extcall 37 .............................. return RETURN, error(me, "Missing handle to window object!", #showPreview, #major)
  [ 28] getparam 1 .............................. <tOfferGroup>
  [ 30] pusharglist 1 ........................... <tOfferGroup>
  [ 32] extcall 57 .............................. <objectp(tOfferGroup)>
  [ 34] not ..................................... <not objectp(tOfferGroup)>
  [ 35] jmpifz [ 55] ............................ if not objectp(tOfferGroup) then
  [ 38] getparam 0 .............................. <me>
  [ 40] pushcons 17 ............................. <"Invalid input format">
  [ 42] pushsymb 556 ............................ <#showPreview>
  [ 45] pushsymb 47 ............................. <#major>
  [ 47] pusharglist 4 ........................... <me, "Invalid input format", #showPreview, #major>
  [ 49] extcall 46 .............................. <error(me, "Invalid input format", #showPreview, #major)>
  [ 51] pusharglistnoret 1 ...................... <error(me, "Invalid input format", #showPreview, #major)>
  [ 53] extcall 37 .............................. return error(me, "Invalid input format", #showPreview, #major)
  [ 55] getparam 1 .............................. <tOfferGroup>
  [ 57] pusharglist 1 ........................... <tOfferGroup>
  [ 59] objcall 59 .............................. <tOfferGroup.getCount()>
  [ 61] pushint8 1 .............................. <1>
  [ 63] lt ...................................... <tOfferGroup.getCount() < 1>
  [ 64] jmpifz [ 84] ............................ if tOfferGroup.getCount() < 1 then
  [ 67] getparam 0 .............................. <me>
  [ 69] pushcons 31 ............................. <"Offer group is empty">
  [ 71] pushsymb 556 ............................ <#showPreview>
  [ 74] pushsymb 47 ............................. <#major>
  [ 76] pusharglist 4 ........................... <me, "Offer group is empty", #showPreview, #major>
  [ 78] extcall 46 .............................. <error(me, "Offer group is empty", #showPreview, #major)>
  [ 80] pusharglistnoret 1 ...................... <error(me, "Offer group is empty", #showPreview, #major)>
  [ 82] extcall 37 .............................. return error(me, "Offer group is empty", #showPreview, #major)
  [ 84] getparam 1 .............................. <tOfferGroup>
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglist 2 ........................... <tOfferGroup, 1>
  [ 90] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [ 93] pusharglist 1 ........................... <tOfferGroup.getOffer(1)>
  [ 95] objcall 59 .............................. <tOfferGroup.getOffer(1).getCount()>
  [ 97] pushint8 1 .............................. <1>
  [ 99] lt ...................................... <tOfferGroup.getOffer(1).getCount() < 1>
  [100] jmpifz [120] ............................ if tOfferGroup.getOffer(1).getCount() < 1 then
  [103] getparam 0 .............................. <me>
  [105] pushcons 32 ............................. <"Offer group item at index 1 has no content">
  [107] pushsymb 556 ............................ <#showPreview>
  [110] pushsymb 47 ............................. <#major>
  [112] pusharglist 4 ........................... <me, "Offer group item at index 1 has no content", #showPreview, #major>
  [114] extcall 46 .............................. <error(me, "Offer group item at index 1 has no content", #showPreview, #major)>
  [116] pusharglistnoret 1 ...................... <error(me, "Offer group item at index 1 has no content", #showPreview, #major)>
  [118] extcall 37 .............................. return error(me, "Offer group item at index 1 has no content", #showPreview, #major)
  [120] getparam 0 .............................. <me>
  [122] getparam 1 .............................. <tOfferGroup>
  [124] pushint8 1 .............................. <1>
  [126] pusharglist 2 ........................... <tOfferGroup, 1>
  [128] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [131] pusharglist 2 ........................... <me, tOfferGroup.getOffer(1)>
  [133] objcall 555 ............................. <me.resolveLargePreview(tOfferGroup.getOffer(1))>
  [136] setlocal 0 .............................. tPrevImage = me.resolveLargePreview(tOfferGroup.getOffer(1))
  [138] getlocal 0 .............................. <tPrevImage>
  [140] pusharglist 1 ........................... <tPrevImage>
  [142] extcall 43 .............................. <ilk(tPrevImage)>
  [144] pushsymb 17 ............................. <#image>
  [146] nteq .................................... <ilk(tPrevImage) <> #image>
  [147] jmpifz [155] ............................ if ilk(tPrevImage) <> #image then
  [150] pushzero ................................ <0>
  [151] pusharglistnoret 1 ...................... <0>
  [153] extcall 37 .............................. return 0
  [155] getprop 150 ............................. <pWndObj>
  [157] getprop 561 ............................. <pImageElements>
  [160] pushint8 2 .............................. <2>
  [162] pusharglist 2 ........................... <pImageElements, 2>
  [164] objcall 41 .............................. <pImageElements[2]>
  [166] pusharglist 2 ........................... <pWndObj, pImageElements[2]>
  [168] objcall 253 ............................. <pWndObj.elementExists(pImageElements[2])>
  [170] jmpifz [197] ............................ if pWndObj.elementExists(pImageElements[2]) then
  [173] getparam 0 .............................. <me>
  [175] getlocal 0 .............................. <tPrevImage>
  [177] getprop 150 ............................. <pWndObj>
  [179] getprop 561 ............................. <pImageElements>
  [182] pushint8 2 .............................. <2>
  [184] pusharglist 2 ........................... <pImageElements, 2>
  [186] objcall 41 .............................. <pImageElements[2]>
  [188] pusharglist 2 ........................... <pWndObj, pImageElements[2]>
  [190] objcall 178 ............................. <pWndObj.getElement(pImageElements[2])>
  [192] pusharglistnoret 3 ...................... <me, tPrevImage, pWndObj.getElement(pImageElements[2])>
  [194] objcall 524 ............................. me.centerBlitImageToElement(tPrevImage, pWndObj.getElement(pImageElements[2]))
  [197] getprop 565 ............................. <pPersistentCatalogData>
  [200] getparam 1 .............................. <tOfferGroup>
  [202] pushint8 1 .............................. <1>
  [204] pusharglist 2 ........................... <tOfferGroup, 1>
  [206] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [209] pusharglist 1 ........................... <tOfferGroup.getOffer(1)>
  [211] objcall 581 ............................. <tOfferGroup.getOffer(1).getName()>
  [214] pusharglist 2 ........................... <pPersistentCatalogData, tOfferGroup.getOffer(1).getName()>
  [216] objcall 487 ............................. <pPersistentCatalogData.getProps(tOfferGroup.getOffer(1).getName())>
  [219] setlocal 1 .............................. tCatalogProps = pPersistentCatalogData.getProps(tOfferGroup.getOffer(1).getName())
  [221] getlocal 1 .............................. <tCatalogProps>
  [223] pusharglist 1 ........................... <tCatalogProps>
  [225] extcall 349 ............................. <listp(tCatalogProps)>
  [228] jmpifz [362] ............................ if listp(tCatalogProps) then / else
  [231] getlocal 1 .............................. <tCatalogProps>
  [233] pushsymb 510 ............................ <#description>
  [236] pusharglist 2 ........................... <tCatalogProps, #description>
  [238] objcall 41 .............................. <tCatalogProps[#description]>
  [240] setlocal 2 .............................. tDesc = tCatalogProps[#description]
  [242] getparam 1 .............................. <tOfferGroup>
  [244] pushint8 1 .............................. <1>
  [246] pusharglist 2 ........................... <tOfferGroup, 1>
  [248] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [251] pushint8 1 .............................. <1>
  [253] pusharglist 2 ........................... <tOfferGroup.getOffer(1), 1>
  [255] objcall 60 .............................. <tOfferGroup.getOffer(1).getContent(1)>
  [257] pusharglist 1 ........................... <tOfferGroup.getOffer(1).getContent(1)>
  [259] objcall 591 ............................. <tOfferGroup.getOffer(1).getContent(1).getExpiration()>
  [262] setlocal 3 .............................. tExp = tOfferGroup.getOffer(1).getContent(1).getExpiration()
  [264] getlocal 3 .............................. <tExp>
  [266] pushint8 1 .............................. <1>
  [268] inv ..................................... <-1>
  [269] nteq .................................... <tExp <> -1>
  [270] jmpifz [326] ............................ if tExp <> -1 then
  [273] getlocal 3 .............................. <tExp>
  [275] pushint8 60 ............................. <60>
  [277] div ..................................... <tExp / 60>
  [278] setlocal 4 .............................. tHours = tExp / 60
  [280] getlocal 3 .............................. <tExp>
  [282] pushint8 60 ............................. <60>
  [284] mod ..................................... <tExp mod 60>
  [285] setlocal 5 .............................. tMins = tExp mod 60
  [287] pushcons 33 ............................. <"expiring_item_postfix">
  [289] pushcons 34 ............................. <"Lasts %x% hours %y% minutes.">
  [291] pusharglist 2 ........................... <"expiring_item_postfix", "Lasts %x% hours %y% minutes.">
  [293] extcall 158 ............................. <getText("expiring_item_postfix", "Lasts %x% hours %y% minutes.")>
  [295] pushcons 35 ............................. <"%x%">
  [297] getlocal 4 .............................. <tHours>
  [299] pusharglist 3 ........................... <getText("expiring_item_postfix", "Lasts %x% hours %y% minutes."), "%x%", tHours>
  [301] extcall 415 ............................. <replaceChunks(getText("expiring_item_postfix", "Lasts %x% hours %y% minutes."), "%x%", tHours)>
  [304] setlocal 6 .............................. tExpText = replaceChunks(getText("expiring_item_postfix", "Lasts %x% hours %y% minutes."), "%x%", tHours)
  [306] getlocal 6 .............................. <tExpText>
  [308] pushcons 36 ............................. <"%y%">
  [310] getlocal 5 .............................. <tMins>
  [312] pusharglist 3 ........................... <tExpText, "%y%", tMins>
  [314] extcall 415 ............................. <replaceChunks(tExpText, "%y%", tMins)>
  [317] setlocal 6 .............................. tExpText = replaceChunks(tExpText, "%y%", tMins)
  [319] getlocal 2 .............................. <tDesc>
  [321] getlocal 6 .............................. <tExpText>
  [323] joinpadstr .............................. <tDesc && tExpText>
  [324] setlocal 2 .............................. tDesc = tDesc && tExpText
  [326] getparam 0 .............................. <me>
  [328] getprop 150 ............................. <pWndObj>
  [330] pushcons 37 ............................. <"ctlg_description">
  [332] getlocal 2 .............................. <tDesc>
  [334] pusharglistnoret 4 ...................... <me, pWndObj, "ctlg_description", tDesc>
  [336] objcall 525 ............................. me.setElementText(pWndObj, "ctlg_description", tDesc)
  [339] getparam 0 .............................. <me>
  [341] getprop 150 ............................. <pWndObj>
  [343] pushcons 38 ............................. <"ctlg_product_name">
  [345] getlocal 1 .............................. <tCatalogProps>
  [347] pushsymb 269 ............................ <#name>
  [350] pusharglist 2 ........................... <tCatalogProps, #name>
  [352] objcall 41 .............................. <tCatalogProps[#name]>
  [354] pusharglistnoret 4 ...................... <me, pWndObj, "ctlg_product_name", tCatalogProps[#name]>
  [356] objcall 525 ............................. me.setElementText(pWndObj, "ctlg_product_name", tCatalogProps[#name])
  [359] jmp [390]
  [362] getparam 0 .............................. <me>
  [364] pushcons 39 ............................. <"Missing catalogprops for offer ">
  [366] getparam 1 .............................. <tOfferGroup>
  [368] pushint8 1 .............................. <1>
  [370] pusharglist 2 ........................... <tOfferGroup, 1>
  [372] objcall 344 ............................. <tOfferGroup.getOffer(1)>
  [375] pusharglist 1 ........................... <tOfferGroup.getOffer(1)>
  [377] objcall 581 ............................. <tOfferGroup.getOffer(1).getName()>
  [380] joinstr ................................. <"Missing catalogprops for offer " & tOfferGroup.getOffer(1).getName()>
  [381] pushsymb 556 ............................ <#showPreview>
  [384] pushsymb 58 ............................. <#minor>
  [386] pusharglistnoret 4 ...................... <me, "Missing catalogprops for offer " & tOfferGroup.getOffer(1).getName(), #showPreview, #minor>
  [388] extcall 46 .............................. error(me, "Missing catalogprops for offer " & tOfferGroup.getOffer(1).getName(), #showPreview, #minor)
  [390] pushint8 1 .............................. <1>
  [392] setlocal 7
  [394] getlocal 7
  [396] getprop 558 ............................. <pOfferTypesAvailable>
  [399] getobjprop 48 ........................... <pOfferTypesAvailable.count>
  [401] lteq
  [402] jmpifz [507] ............................ repeat with i = 1 to pOfferTypesAvailable.count
  [405] getprop 558 ............................. <pOfferTypesAvailable>
  [408] getlocal 7 .............................. <i>
  [410] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [412] objcall 41 .............................. <pOfferTypesAvailable[i]>
  [414] pushsymb 592 ............................ <#elements>
  [417] pusharglist 2 ........................... <pOfferTypesAvailable[i], #elements>
  [419] objcall 102 ............................. <pOfferTypesAvailable[i].getaProp(#elements)>
  [421] setlocal 8 .............................. tElements = pOfferTypesAvailable[i].getaProp(#elements)
  [423] getparam 0 .............................. <me>
  [425] getparam 1 .............................. <tOfferGroup>
  [427] getprop 558 ............................. <pOfferTypesAvailable>
  [430] getlocal 7 .............................. <i>
  [432] pusharglist 2 ........................... <pOfferTypesAvailable, i>
  [434] objcall 41 .............................. <pOfferTypesAvailable[i]>
  [436] pushsymb 399 ............................ <#type>
  [439] pusharglist 2 ........................... <pOfferTypesAvailable[i], #type>
  [441] objcall 102 ............................. <pOfferTypesAvailable[i].getaProp(#type)>
  [443] pusharglist 3 ........................... <me, tOfferGroup, pOfferTypesAvailable[i].getaProp(#type)>
  [445] objcall 523 ............................. <me.getOfferPriceTextByType(tOfferGroup, pOfferTypesAvailable[i].getaProp(#type))>
  [448] setlocal 9 .............................. tText = me.getOfferPriceTextByType(tOfferGroup, pOfferTypesAvailable[i].getaProp(#type))
  [450] getlocal 8 .............................. <tElements>
  [452] peek 0
  [454] pusharglist 1
  [456] extcall 48
  [458] pushint8 1
  [460] peek 0
  [462] peek 2
  [464] lteq
  [465] jmpifz [496] ............................ repeat with tElement in tElements
  [468] peek 2
  [470] peek 1
  [472] pusharglist 2
  [474] extcall 41
  [476] setlocal 10
  [478] getparam 0 .............................. <me>
  [480] getprop 150 ............................. <pWndObj>
  [482] getlocal 10 ............................. <tElement>
  [484] getlocal 9 .............................. <tText>
  [486] pusharglistnoret 4 ...................... <me, pWndObj, tElement, tText>
  [488] objcall 525 ............................. me.setElementText(pWndObj, tElement, tText)
  [491] pushint8 1
  [493] add
  [494] endrepeat [460]
  [496] pop 3
  [498] pushint8 1
  [500] getlocal 7
  [502] add
  [503] setlocal 7
  [505] endrepeat [394]
  [507] getlocal 1 .............................. <tCatalogProps>
  [509] pusharglist 1 ........................... <tCatalogProps>
  [511] extcall 349 ............................. <listp(tCatalogProps)>
  [514] getprop 562 ............................. <pTextElements>
  [517] getobjprop 48 ........................... <pTextElements.count>
  [519] pushint8 3 .............................. <3>
  [521] gteq .................................... <pTextElements.count >= 3>
  [522] and ..................................... <listp(tCatalogProps) and (pTextElements.count >= 3)>
  [523] jmpifz [782] ............................ if listp(tCatalogProps) and (pTextElements.count >= 3) then
  [526] getlocal 1 .............................. <tCatalogProps>
  [528] pushsymb 511 ............................ <#specialText>
  [531] pusharglist 2 ........................... <tCatalogProps, #specialText>
  [533] objcall 41 .............................. <tCatalogProps[#specialText]>
  [535] pushint8 2 .............................. <2>
  [537] pushint8 2 .............................. <2>
  [539] pusharglist 3 ........................... <tCatalogProps[#specialText], 2, 2>
  [541] extcall 593 ............................. <chars(tCatalogProps[#specialText], 2, 2)>
  [544] pushcons 40 ............................. <":">
  [546] eq ...................................... <chars(tCatalogProps[#specialText], 2, 2) = ":">
  [547] jmpifz [608] ............................ if chars(tCatalogProps[#specialText], 2, 2) = ":" then / else
  [550] getlocal 1 .............................. <tCatalogProps>
  [552] pushsymb 511 ............................ <#specialText>
  [555] pusharglist 2 ........................... <tCatalogProps, #specialText>
  [557] objcall 41 .............................. <tCatalogProps[#specialText]>
  [559] pushsymb 292 ............................ <#char>
  [562] pushint8 1 .............................. <1>
  [564] pusharglist 3 ........................... <tCatalogProps[#specialText], #char, 1>
  [566] objcall 123 ............................. <tCatalogProps[#specialText].char[1]>
  [568] pusharglist 1 ........................... <tCatalogProps[#specialText].char[1]>
  [570] extcall 266 ............................. <value(tCatalogProps[#specialText].char[1])>
  [573] setlocal 11 ............................. tNum = value(tCatalogProps[#specialText].char[1])
  [575] getlocal 1 .............................. <tCatalogProps>
  [577] pushsymb 511 ............................ <#specialText>
  [580] pusharglist 2 ........................... <tCatalogProps, #specialText>
  [582] objcall 41 .............................. <tCatalogProps[#specialText]>
  [584] pushint8 3 .............................. <3>
  [586] getlocal 1 .............................. <tCatalogProps>
  [588] pushsymb 511 ............................ <#specialText>
  [591] pusharglist 2 ........................... <tCatalogProps, #specialText>
  [593] objcall 41 .............................. <tCatalogProps[#specialText]>
  [595] getobjprop 567 .......................... <tCatalogProps[#specialText].length>
  [598] pusharglist 3 ........................... <tCatalogProps[#specialText], 3, tCatalogProps[#specialText].length>
  [600] extcall 593 ............................. <chars(tCatalogProps[#specialText], 3, tCatalogProps[#specialText].length)>
  [603] setlocal 9 .............................. tText = chars(tCatalogProps[#specialText], 3, tCatalogProps[#specialText].length)
  [605] jmp [625]
  [608] pusharglist 0 ........................... <>
  [610] extcall 55 .............................. <VOID>
  [612] setlocal 11 ............................. tNum = VOID
  [614] getlocal 1 .............................. <tCatalogProps>
  [616] pushsymb 511 ............................ <#specialText>
  [619] pusharglist 2 ........................... <tCatalogProps, #specialText>
  [621] objcall 41 .............................. <tCatalogProps[#specialText]>
  [623] setlocal 9 .............................. tText = tCatalogProps[#specialText]
  [625] getprop 150 ............................. <pWndObj>
  [627] getprop 562 ............................. <pTextElements>
  [630] pushint8 3 .............................. <3>
  [632] pusharglist 2 ........................... <pTextElements, 3>
  [634] objcall 41 .............................. <pTextElements[3]>
  [636] pusharglist 2 ........................... <pWndObj, pTextElements[3]>
  [638] objcall 253 ............................. <pWndObj.elementExists(pTextElements[3])>
  [640] jmpifz [683] ............................ if pWndObj.elementExists(pTextElements[3]) then
  [643] getprop 150 ............................. <pWndObj>
  [645] getprop 562 ............................. <pTextElements>
  [648] pushint8 3 .............................. <3>
  [650] pusharglist 2 ........................... <pTextElements, 3>
  [652] objcall 41 .............................. <pTextElements[3]>
  [654] pusharglist 2 ........................... <pWndObj, pTextElements[3]>
  [656] objcall 178 ............................. <pWndObj.getElement(pTextElements[3])>
  [658] pusharglistnoret 1 ...................... <pWndObj.getElement(pTextElements[3])>
  [660] objcall 179 ............................. pWndObj.getElement(pTextElements[3]).show()
  [662] getprop 150 ............................. <pWndObj>
  [664] getprop 562 ............................. <pTextElements>
  [667] pushint8 3 .............................. <3>
  [669] pusharglist 2 ........................... <pTextElements, 3>
  [671] objcall 41 .............................. <pTextElements[3]>
  [673] pusharglist 2 ........................... <pWndObj, pTextElements[3]>
  [675] objcall 178 ............................. <pWndObj.getElement(pTextElements[3])>
  [677] getlocal 9 .............................. <tText>
  [679] pusharglistnoret 2 ...................... <pWndObj.getElement(pTextElements[3]), tText>
  [681] objcall 188 ............................. pWndObj.getElement(pTextElements[3]).setText(tText)
  [683] getprop 150 ............................. <pWndObj>
  [685] getprop 561 ............................. <pImageElements>
  [688] pushint8 3 .............................. <3>
  [690] pusharglist 2 ........................... <pImageElements, 3>
  [692] objcall 41 .............................. <pImageElements[3]>
  [694] pusharglist 2 ........................... <pWndObj, pImageElements[3]>
  [696] objcall 253 ............................. <pWndObj.elementExists(pImageElements[3])>
  [698] jmpifz [782] ............................ if pWndObj.elementExists(pImageElements[3]) then
  [701] getlocal 11 ............................. <tNum>
  [703] pusharglist 1 ........................... <tNum>
  [705] extcall 78 .............................. <voidp(tNum)>
  [707] not ..................................... <not voidp(tNum)>
  [708] jmpifz [763] ............................ if not voidp(tNum) then / else
  [711] getprop 150 ............................. <pWndObj>
  [713] getprop 561 ............................. <pImageElements>
  [716] pushint8 3 .............................. <3>
  [718] pusharglist 2 ........................... <pImageElements, 3>
  [720] objcall 41 .............................. <pImageElements[3]>
  [722] pusharglist 2 ........................... <pWndObj, pImageElements[3]>
  [724] objcall 178 ............................. <pWndObj.getElement(pImageElements[3])>
  [726] pusharglistnoret 1 ...................... <pWndObj.getElement(pImageElements[3])>
  [728] objcall 179 ............................. pWndObj.getElement(pImageElements[3]).show()
  [730] getprop 150 ............................. <pWndObj>
  [732] getprop 561 ............................. <pImageElements>
  [735] pushint8 3 .............................. <3>
  [737] pusharglist 2 ........................... <pImageElements, 3>
  [739] objcall 41 .............................. <pImageElements[3]>
  [741] pusharglist 2 ........................... <pWndObj, pImageElements[3]>
  [743] objcall 178 ............................. <pWndObj.getElement(pImageElements[3])>
  [745] pushcons 41 ............................. <"catalog_special_txtbg">
  [747] getlocal 11 ............................. <tNum>
  [749] joinstr ................................. <"catalog_special_txtbg" & tNum>
  [750] pusharglist 1 ........................... <"catalog_special_txtbg" & tNum>
  [752] extcall 21 .............................. <getMember("catalog_special_txtbg" & tNum)>
  [754] getobjprop 17 ........................... <getMember("catalog_special_txtbg" & tNum).image>
  [756] pusharglistnoret 2 ...................... <pWndObj.getElement(pImageElements[3]), getMember("catalog_special_txtbg" & tNum).image>
  [758] objcall 118 ............................. pWndObj.getElement(pImageElements[3]).feedImage(getMember("catalog_special_txtbg" & tNum).image)
  [760] jmp [782]
  [763] getprop 150 ............................. <pWndObj>
  [765] getprop 561 ............................. <pImageElements>
  [768] pushint8 3 .............................. <3>
  [770] pusharglist 2 ........................... <pImageElements, 3>
  [772] objcall 41 .............................. <pImageElements[3]>
  [774] pusharglist 2 ........................... <pWndObj, pImageElements[3]>
  [776] objcall 178 ............................. <pWndObj.getElement(pImageElements[3])>
  [778] pusharglistnoret 1 ...................... <pWndObj.getElement(pImageElements[3])>
  [780] objcall 121 ............................. pWndObj.getElement(pImageElements[3]).hide()
  [782] ret
end

on downloadCompleted me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#props>
  [  4] pusharglist 2 ........................... <tProps, #props>
  [  6] objcall 41 .............................. <tProps[#props]>
  [  8] pushsymb 103 ............................ <#pageid>
  [ 10] pusharglist 2 ........................... <tProps[#props], #pageid>
  [ 12] objcall 41 .............................. <tProps[#props][#pageid]>
  [ 14] getparam 0 .............................. <me>
  [ 16] pushsymb 528 ............................ <#pPageData>
  [ 19] pushsymb 103 ............................ <#pageid>
  [ 21] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [ 23] objcall 123 ............................. <me.pPageData[#pageid]>
  [ 25] nteq .................................... <tProps[#props][#pageid] <> me.pPageData[#pageid]>
  [ 26] jmpifz [ 33] ............................ if tProps[#props][#pageid] <> me.pPageData[#pageid] then
  [ 29] pusharglistnoret 0 ...................... <>
  [ 31] extcall 37 .............................. return 
  [ 33] getparam 1 .............................. <tProps>
  [ 35] pushsymb 100 ............................ <#props>
  [ 37] pusharglist 2 ........................... <tProps, #props>
  [ 39] objcall 41 .............................. <tProps[#props]>
  [ 41] setlocal 0 .............................. tDlProps = tProps[#props]
  [ 43] getlocal 0 .............................. <tDlProps>
  [ 45] pushsymb 101 ............................ <#imagedownload>
  [ 47] pusharglist 2 ........................... <tDlProps, #imagedownload>
  [ 49] objcall 102 ............................. <tDlProps.getaProp(#imagedownload)>
  [ 51] jmpifz [198] ............................ if tDlProps.getaProp(#imagedownload) then / else
  [ 54] getprop 150 ............................. <pWndObj>
  [ 56] pusharglist 1 ........................... <pWndObj>
  [ 58] extcall 78 .............................. <voidp(pWndObj)>
  [ 60] jmpifz [ 81] ............................ if voidp(pWndObj) then
  [ 63] pushcons 29 ............................. <RETURN>
  [ 65] getparam 0 .............................. <me>
  [ 67] pushcons 30 ............................. <"Missing handle to window object!">
  [ 69] pushsymb 10 ............................. <#downloadCompleted>
  [ 71] pushsymb 47 ............................. <#major>
  [ 73] pusharglist 4 ........................... <me, "Missing handle to window object!", #downloadCompleted, #major>
  [ 75] extcall 46 .............................. <error(me, "Missing handle to window object!", #downloadCompleted, #major)>
  [ 77] pusharglistnoret 2 ...................... <RETURN, error(me, "Missing handle to window object!", #downloadCompleted, #major)>
  [ 79] extcall 37 .............................. return RETURN, error(me, "Missing handle to window object!", #downloadCompleted, #major)
  [ 81] getprop 150 ............................. <pWndObj>
  [ 83] getlocal 0 .............................. <tDlProps>
  [ 85] pushsymb 568 ............................ <#element>
  [ 88] pusharglist 2 ........................... <tDlProps, #element>
  [ 90] objcall 41 .............................. <tDlProps[#element]>
  [ 92] pusharglist 2 ........................... <pWndObj, tDlProps[#element]>
  [ 94] objcall 253 ............................. <pWndObj.elementExists(tDlProps[#element])>
  [ 96] not ..................................... <not pWndObj.elementExists(tDlProps[#element])>
  [ 97] jmpifz [126] ............................ if not pWndObj.elementExists(tDlProps[#element]) then
  [100] getparam 0 .............................. <me>
  [102] pushcons 42 ............................. <"Missing target element ">
  [104] getlocal 0 .............................. <tDlProps>
  [106] pushsymb 568 ............................ <#element>
  [109] pusharglist 2 ........................... <tDlProps, #element>
  [111] objcall 41 .............................. <tDlProps[#element]>
  [113] joinstr ................................. <"Missing target element " & tDlProps[#element]>
  [114] pushsymb 10 ............................. <#downloadCompleted>
  [116] pushsymb 58 ............................. <#minor>
  [118] pusharglist 4 ........................... <me, "Missing target element " & tDlProps[#element], #downloadCompleted, #minor>
  [120] extcall 46 .............................. <error(me, "Missing target element " & tDlProps[#element], #downloadCompleted, #minor)>
  [122] pusharglistnoret 1 ...................... <error(me, "Missing target element " & tDlProps[#element], #downloadCompleted, #minor)>
  [124] extcall 37 .............................. return error(me, "Missing target element " & tDlProps[#element], #downloadCompleted, #minor)
  [126] getparam 1 .............................. <tProps>
  [128] pushsymb 473 ............................ <#assetId>
  [131] pusharglist 2 ........................... <tProps, #assetId>
  [133] objcall 102 ............................. <tProps.getaProp(#assetId)>
  [135] pusharglist 1 ........................... <tProps.getaProp(#assetId)>
  [137] extcall 21 .............................. <getMember(tProps.getaProp(#assetId))>
  [139] setlocal 1 .............................. tmember = getMember(tProps.getaProp(#assetId))
  [141] getlocal 1 .............................. <tmember>
  [143] getobjprop 399 .......................... <tmember.type>
  [146] pushsymb 474 ............................ <#bitmap>
  [149] nteq .................................... <tmember.type <> #bitmap>
  [150] jmpifz [169] ............................ if tmember.type <> #bitmap then
  [153] getparam 0 .............................. <me>
  [155] pushcons 43 ............................. <"Downloaded member was of incorrect type!">
  [157] pushsymb 10 ............................. <#downloadCompleted>
  [159] pushsymb 47 ............................. <#major>
  [161] pusharglist 4 ........................... <me, "Downloaded member was of incorrect type!", #downloadCompleted, #major>
  [163] extcall 46 .............................. <error(me, "Downloaded member was of incorrect type!", #downloadCompleted, #major)>
  [165] pusharglistnoret 1 ...................... <error(me, "Downloaded member was of incorrect type!", #downloadCompleted, #major)>
  [167] extcall 37 .............................. return error(me, "Downloaded member was of incorrect type!", #downloadCompleted, #major)
  [169] getparam 0 .............................. <me>
  [171] getlocal 1 .............................. <tmember>
  [173] getobjprop 17 ........................... <tmember.image>
  [175] getprop 150 ............................. <pWndObj>
  [177] getlocal 0 .............................. <tDlProps>
  [179] pushsymb 568 ............................ <#element>
  [182] pusharglist 2 ........................... <tDlProps, #element>
  [184] objcall 41 .............................. <tDlProps[#element]>
  [186] pusharglist 2 ........................... <pWndObj, tDlProps[#element]>
  [188] objcall 178 ............................. <pWndObj.getElement(tDlProps[#element])>
  [190] pusharglistnoret 3 ...................... <me, tmember.image, pWndObj.getElement(tDlProps[#element])>
  [192] objcall 524 ............................. me.centerBlitImageToElement(tmember.image, pWndObj.getElement(tDlProps[#element]))
  [195] jmp [299]
  [198] getparam 0 .............................. <me>
  [200] pusharglist 1 ........................... <me>
  [202] objcall 143 ............................. <me.getSelectedProduct()>
  [204] setlocal 2 .............................. tSelectedItem = me.getSelectedProduct()
  [206] getlocal 2 .............................. <tSelectedItem>
  [208] pusharglist 1 ........................... <tSelectedItem>
  [210] extcall 78 .............................. <voidp(tSelectedItem)>
  [212] not ..................................... <not voidp(tSelectedItem)>
  [213] jmpifz [299] ............................ if not voidp(tSelectedItem) then
  [216] getprop 546 ............................. <pPersistentFurniData>
  [219] getlocal 2 .............................. <tSelectedItem>
  [221] pushint8 1 .............................. <1>
  [223] pusharglist 2 ........................... <tSelectedItem, 1>
  [225] objcall 344 ............................. <tSelectedItem.getOffer(1)>
  [228] pusharglist 1 ........................... <tSelectedItem.getOffer(1)>
  [230] objcall 61 .............................. <tSelectedItem.getOffer(1).getType()>
  [232] getlocal 2 .............................. <tSelectedItem>
  [234] pushint8 1 .............................. <1>
  [236] pusharglist 2 ........................... <tSelectedItem, 1>
  [238] objcall 344 ............................. <tSelectedItem.getOffer(1)>
  [241] pusharglist 1 ........................... <tSelectedItem.getOffer(1)>
  [243] objcall 62 .............................. <tSelectedItem.getOffer(1).getClassId()>
  [245] pusharglist 3 ........................... <pPersistentFurniData, tSelectedItem.getOffer(1).getType(), tSelectedItem.getOffer(1).getClassId()>
  [247] objcall 487 ............................. <pPersistentFurniData.getProps(tSelectedItem.getOffer(1).getType(), tSelectedItem.getOffer(1).getClassId())>
  [250] setlocal 3 .............................. tFurniProps = pPersistentFurniData.getProps(tSelectedItem.getOffer(1).getType(), tSelectedItem.getOffer(1).getClassId())
  [252] getlocal 3 .............................. <tFurniProps>
  [254] pusharglist 1 ........................... <tFurniProps>
  [256] extcall 78 .............................. <voidp(tFurniProps)>
  [258] not ..................................... <not voidp(tFurniProps)>
  [259] jmpifz [299] ............................ if not voidp(tFurniProps) then
  [262] getparam 1 .............................. <tProps>
  [264] pushsymb 473 ............................ <#assetId>
  [267] pusharglist 2 ........................... <tProps, #assetId>
  [269] objcall 41 .............................. <tProps[#assetId]>
  [271] getparam 0 .............................. <me>
  [273] getlocal 3 .............................. <tFurniProps>
  [275] pushsymb 268 ............................ <#class>
  [278] pusharglist 2 ........................... <tFurniProps, #class>
  [280] objcall 41 .............................. <tFurniProps[#class]>
  [282] pusharglist 2 ........................... <me, tFurniProps[#class]>
  [284] objcall 149 ............................. <me.getClassAsset(tFurniProps[#class])>
  [286] eq ...................................... <tProps[#assetId] = me.getClassAsset(tFurniProps[#class])>
  [287] jmpifz [299] ............................ if tProps[#assetId] = me.getClassAsset(tFurniProps[#class]) then
  [290] getparam 0 .............................. <me>
  [292] getlocal 2 .............................. <tSelectedItem>
  [294] pusharglistnoret 2 ...................... <me, tSelectedItem>
  [296] objcall 556 ............................. me.showPreview(tSelectedItem)
  [299] ret
end

on getSelectedProduct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 55 .............................. <VOID>
  [  4] setlocal 0 .............................. tSelectedItem = VOID
  [  6] getprop 557 ............................. <pProductStrip>
  [  9] pusharglist 1 ........................... <pProductStrip>
  [ 11] extcall 57 .............................. <objectp(pProductStrip)>
  [ 13] jmpifz [ 25] ............................ if objectp(pProductStrip) then
  [ 16] getprop 557 ............................. <pProductStrip>
  [ 19] pusharglist 1 ........................... <pProductStrip>
  [ 21] objcall 14 .............................. <pProductStrip.getSelectedItem()>
  [ 23] setlocal 0 .............................. tSelectedItem = pProductStrip.getSelectedItem()
  [ 25] getlocal 0 .............................. <tSelectedItem>
  [ 27] pusharglistnoret 1 ...................... <tSelectedItem>
  [ 29] extcall 37 .............................. return tSelectedItem
  [ 31] ret
end

on handleClick me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 198 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [531] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] peek 0 .................................. case tSprID of
  [ 12] pushcons 15 ............................. <"ctlg_productstrip">
  [ 14] eq
  [ 15] jmpifz [174] ............................ (case) "ctlg_productstrip":
  [ 18] getparam 3 .............................. <tProp>
  [ 20] pusharglist 1 ........................... <tProp>
  [ 22] extcall 43 .............................. <ilk(tProp)>
  [ 24] pushsymb 32 ............................. <#point>
  [ 26] nteq .................................... <ilk(tProp) <> #point>
  [ 27] jmpifz [ 36] ............................ if ilk(tProp) <> #point then
  [ 30] pop 1
  [ 32] pusharglistnoret 0 ...................... <>
  [ 34] extcall 37 .............................. return 
  [ 36] pusharglist 0 ........................... <>
  [ 38] extcall 55 .............................. <VOID>
  [ 40] setlocal 0 .............................. tSelectedItem = VOID
  [ 42] getprop 557 ............................. <pProductStrip>
  [ 45] pusharglist 1 ........................... <pProductStrip>
  [ 47] extcall 57 .............................. <objectp(pProductStrip)>
  [ 49] jmpifz [ 70] ............................ if objectp(pProductStrip) then
  [ 52] getprop 557 ............................. <pProductStrip>
  [ 55] getparam 3 .............................. <tProp>
  [ 57] pusharglistnoret 2 ...................... <pProductStrip, tProp>
  [ 59] objcall 13 .............................. pProductStrip.selectItemAt(tProp)
  [ 61] getprop 557 ............................. <pProductStrip>
  [ 64] pusharglist 1 ........................... <pProductStrip>
  [ 66] objcall 14 .............................. <pProductStrip.getSelectedItem()>
  [ 68] setlocal 0 .............................. tSelectedItem = pProductStrip.getSelectedItem()
  [ 70] getlocal 0 .............................. <tSelectedItem>
  [ 72] pusharglist 1 ........................... <tSelectedItem>
  [ 74] extcall 78 .............................. <voidp(tSelectedItem)>
  [ 76] not ..................................... <not voidp(tSelectedItem)>
  [ 77] jmpifz [171] ............................ if not voidp(tSelectedItem) then
  [ 80] getprop 563 ............................. <pHideElements>
  [ 83] peek 0
  [ 85] pusharglist 1
  [ 87] extcall 48
  [ 89] pushint8 1
  [ 91] peek 0
  [ 93] peek 2
  [ 95] lteq
  [ 96] jmpifz [137] ............................ repeat with tElement in pHideElements
  [ 99] peek 2
  [101] peek 1
  [103] pusharglist 2
  [105] extcall 41
  [107] setlocal 1
  [109] getprop 150 ............................. <pWndObj>
  [111] getlocal 1 .............................. <tElement>
  [113] pusharglist 2 ........................... <pWndObj, tElement>
  [115] objcall 253 ............................. <pWndObj.elementExists(tElement)>
  [117] jmpifz [132] ............................ if pWndObj.elementExists(tElement) then
  [120] getprop 150 ............................. <pWndObj>
  [122] getlocal 1 .............................. <tElement>
  [124] pusharglist 2 ........................... <pWndObj, tElement>
  [126] objcall 178 ............................. <pWndObj.getElement(tElement)>
  [128] pusharglistnoret 1 ...................... <pWndObj.getElement(tElement)>
  [130] objcall 121 ............................. pWndObj.getElement(tElement).hide()
  [132] pushint8 1
  [134] add
  [135] endrepeat [ 91]
  [137] pop 3
  [139] getparam 0 .............................. <me>
  [141] pusharglistnoret 1 ...................... <me>
  [143] objcall 553 ............................. me.showPriceBox()
  [146] getparam 0 .............................. <me>
  [148] getparam 0 .............................. <me>
  [150] getlocal 0 .............................. <tSelectedItem>
  [152] pusharglist 2 ........................... <me, tSelectedItem>
  [154] objcall 521 ............................. <me.getOfferTypeList(tSelectedItem)>
  [157] pusharglistnoret 2 ...................... <me, me.getOfferTypeList(tSelectedItem)>
  [159] objcall 554 ............................. me.setBuyButtonStates(me.getOfferTypeList(tSelectedItem))
  [162] getparam 0 .............................. <me>
  [164] getlocal 0 .............................. <tSelectedItem>
  [166] pusharglistnoret 2 ...................... <me, tSelectedItem>
  [168] objcall 556 ............................. me.showPreview(tSelectedItem)
  [171] jmp [529]
  [174] peek 0
  [176] pushcons 44 ............................. <"ctlg_buy_button">
  [178] nteq
  [179] jmpifz [206] ............................ (case) "ctlg_buy_button", ...
  [182] peek 0
  [184] pushcons 45 ............................. <"ctlg_buy_pixels_credits">
  [186] nteq
  [187] jmpifz [206] ............................ (case) ..., "ctlg_buy_pixels_credits", ...
  [190] peek 0
  [192] pushcons 46 ............................. <"ctlg_buy_pixels">
  [194] nteq
  [195] jmpifz [206] ............................ (case) ..., "ctlg_buy_pixels", ...
  [198] peek 0
  [200] pushcons 47 ............................. <"ctlg_buy_andwear">
  [202] eq
  [203] jmpifz [380] ............................ (case) ..., "ctlg_buy_andwear":
  [206] getprop 557 ............................. <pProductStrip>
  [209] pusharglist 1 ........................... <pProductStrip>
  [211] extcall 57 .............................. <objectp(pProductStrip)>
  [213] not ..................................... <not objectp(pProductStrip)>
  [214] jmpifz [223] ............................ if not objectp(pProductStrip) then
  [217] pop 1
  [219] pusharglistnoret 0 ...................... <>
  [221] extcall 37 .............................. return 
  [223] getprop 557 ............................. <pProductStrip>
  [226] pusharglist 1 ........................... <pProductStrip>
  [228] objcall 14 .............................. <pProductStrip.getSelectedItem()>
  [230] setlocal 0 .............................. tSelectedItem = pProductStrip.getSelectedItem()
  [232] getlocal 0 .............................. <tSelectedItem>
  [234] pusharglist 1 ........................... <tSelectedItem>
  [236] extcall 78 .............................. <voidp(tSelectedItem)>
  [238] not ..................................... <not voidp(tSelectedItem)>
  [239] jmpifz [377] ............................ if not voidp(tSelectedItem) then
  [242] getprop 558 ............................. <pOfferTypesAvailable>
  [245] getparam 2 .............................. <tSprID>
  [247] pusharglist 2 ........................... <pOfferTypesAvailable, tSprID>
  [249] objcall 41 .............................. <pOfferTypesAvailable[tSprID]>
  [251] pushsymb 399 ............................ <#type>
  [254] pusharglist 2 ........................... <pOfferTypesAvailable[tSprID], #type>
  [256] objcall 102 ............................. <pOfferTypesAvailable[tSprID].getaProp(#type)>
  [258] setlocal 2 .............................. tOfferType = pOfferTypesAvailable[tSprID].getaProp(#type)
  [260] getparam 0 .............................. <me>
  [262] getlocal 0 .............................. <tSelectedItem>
  [264] getlocal 2 .............................. <tOfferType>
  [266] pusharglist 3 ........................... <me, tSelectedItem, tOfferType>
  [268] objcall 522 ............................. <me.getOfferByType(tSelectedItem, tOfferType)>
  [271] setlocal 3 .............................. tOffer = me.getOfferByType(tSelectedItem, tOfferType)
  [273] getlocal 3 .............................. <tOffer>
  [275] pusharglist 1 ........................... <tOffer>
  [277] extcall 78 .............................. <voidp(tOffer)>
  [279] jmpifz [306] ............................ if voidp(tOffer) then
  [282] pop 1
  [284] getparam 0 .............................. <me>
  [286] pushcons 48 ............................. <"Unable to find offer of type ">
  [288] getlocal 2 .............................. <tOfferType>
  [290] joinstr ................................. <"Unable to find offer of type " & tOfferType>
  [291] pushcons 49 ............................. <" check page offer configuration.">
  [293] joinstr ................................. <"Unable to find offer of type " & tOfferType & " check page offer configuration.">
  [294] pushsymb 225 ............................ <#handleClick>
  [296] pushsymb 47 ............................. <#major>
  [298] pusharglist 4 ........................... <me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major>
  [300] extcall 46 .............................. <error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)>
  [302] pusharglistnoret 1 ...................... <error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)>
  [304] extcall 37 .............................. return error(me, "Unable to find offer of type " & tOfferType & " check page offer configuration.", #handleClick, #major)
  [306] pusharglist 0 ........................... <>
  [308] extcall 55 .............................. <VOID>
  [310] setlocal 4 .............................. tExtraProps = VOID
  [312] getparam 2 .............................. <tSprID>
  [314] pushcons 45 ............................. <"ctlg_buy_pixels_credits">
  [316] eq ...................................... <tSprID = "ctlg_buy_pixels_credits">
  [317] getparam 2 .............................. <tSprID>
  [319] pushcons 46 ............................. <"ctlg_buy_pixels">
  [321] eq ...................................... <tSprID = "ctlg_buy_pixels">
  [322] or ...................................... <(tSprID = "ctlg_buy_pixels_credits") or (tSprID = "ctlg_buy_pixels")>
  [323] getparam 2 .............................. <tSprID>
  [325] pushcons 47 ............................. <"ctlg_buy_andwear">
  [327] eq ...................................... <tSprID = "ctlg_buy_andwear">
  [328] or ...................................... <(tSprID = "ctlg_buy_pixels_credits") or (tSprID = "ctlg_buy_pixels") or (tSprID = "ctlg_buy_andwear")>
  [329] jmpifz [340] ............................ if (tSprID = "ctlg_buy_pixels_credits") or (tSprID = "ctlg_buy_pixels") or (tSprID = "ctlg_buy_andwear") then
  [332] pushsymb 602 ............................ <#disableGift>
  [335] pusharglist 1 ........................... <[#disableGift]>
  [337] pushlist ................................ <[#disableGift]>
  [338] setlocal 4 .............................. tExtraProps = [#disableGift]
  [340] pushsymb 559 ............................ <#catalogue>
  [343] pusharglist 1 ........................... <#catalogue>
  [345] extcall 471 ............................. <getThread(#catalogue)>
  [348] pusharglist 1 ........................... <getThread(#catalogue)>
  [350] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [352] getlocal 2 .............................. <tOfferType>
  [354] getparam 0 .............................. <me>
  [356] pushsymb 528 ............................ <#pPageData>
  [359] pushsymb 103 ............................ <#pageid>
  [361] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [363] objcall 123 ............................. <me.pPageData[#pageid]>
  [365] getlocal 3 .............................. <tOffer>
  [367] pushsymb 354 ............................ <#sendPurchaseFromCatalog>
  [370] getlocal 4 .............................. <tExtraProps>
  [372] pusharglistnoret 6 ...................... <getThread(#catalogue).getComponent(), tOfferType, me.pPageData[#pageid], tOffer, #sendPurchaseFromCatalog, tExtraProps>
  [374] objcall 306 ............................. getThread(#catalogue).getComponent().requestPurchase(tOfferType, me.pPageData[#pageid], tOffer, #sendPurchaseFromCatalog, tExtraProps)
  [377] jmp [529] ............................... (case) otherwise:
  [380] getparam 2 .............................. <tSprID>
  [382] pushcons 50 ............................. <"ctlg_buy_">
  [384] containsstr ............................. <tSprID contains "ctlg_buy_">
  [385] jmpifz [529] ............................ if tSprID contains "ctlg_buy_" then
  [388] getparam 2 .............................. <tSprID>
  [390] pushint8 10 ............................. <10>
  [392] pushint8 10 ............................. <10>
  [394] pusharglist 3 ........................... <tSprID, 10, 10>
  [396] extcall 593 ............................. <chars(tSprID, 10, 10)>
  [399] pusharglist 1 ........................... <chars(tSprID, 10, 10)>
  [401] extcall 266 ............................. <value(chars(tSprID, 10, 10))>
  [404] setlocal 5 .............................. tItemIndex = value(chars(tSprID, 10, 10))
  [406] getlocal 5 .............................. <tItemIndex>
  [408] pusharglist 1 ........................... <tItemIndex>
  [410] extcall 187 ............................. <integerp(tItemIndex)>
  [412] not ..................................... <not integerp(tItemIndex)>
  [413] jmpifz [422] ............................ if not integerp(tItemIndex) then
  [416] pop 1
  [418] pusharglistnoret 0 ...................... <>
  [420] extcall 37 .............................. return 
  [422] getlocal 5 .............................. <tItemIndex>
  [424] getparam 0 .............................. <me>
  [426] pushsymb 528 ............................ <#pPageData>
  [429] pushsymb 336 ............................ <#offers>
  [432] pusharglist 3 ........................... <me, #pPageData, #offers>
  [434] objcall 566 ............................. <me.pPageData[#offers]>
  [437] getobjprop 48 ........................... <me.pPageData[#offers].count>
  [439] gt ...................................... <tItemIndex > me.pPageData[#offers].count>
  [440] jmpifz [462] ............................ if tItemIndex > me.pPageData[#offers].count then
  [443] pop 1
  [445] getparam 0 .............................. <me>
  [447] pushcons 51 ............................. <"No product to purchase at index : ">
  [449] getlocal 5 .............................. <tItemIndex>
  [451] joinstr ................................. <"No product to purchase at index : " & tItemIndex>
  [452] pushsymb 58 ............................. <#minor>
  [454] pusharglist 3 ........................... <me, "No product to purchase at index : " & tItemIndex, #minor>
  [456] extcall 46 .............................. <error(me, "No product to purchase at index : " & tItemIndex, #minor)>
  [458] pusharglistnoret 1 ...................... <error(me, "No product to purchase at index : " & tItemIndex, #minor)>
  [460] extcall 37 .............................. return error(me, "No product to purchase at index : " & tItemIndex, #minor)
  [462] getparam 0 .............................. <me>
  [464] getparam 0 .............................. <me>
  [466] pushsymb 528 ............................ <#pPageData>
  [469] pushsymb 336 ............................ <#offers>
  [472] pusharglist 3 ........................... <me, #pPageData, #offers>
  [474] objcall 566 ............................. <me.pPageData[#offers]>
  [477] getlocal 5 .............................. <tItemIndex>
  [479] pusharglist 2 ........................... <me.pPageData[#offers], tItemIndex>
  [481] objcall 41 .............................. <me.pPageData[#offers][tItemIndex]>
  [483] pushsymb 351 ............................ <#credits>
  [486] pusharglist 3 ........................... <me, me.pPageData[#offers][tItemIndex], #credits>
  [488] objcall 522 ............................. <me.getOfferByType(me.pPageData[#offers][tItemIndex], #credits)>
  [491] setlocal 3 .............................. tOffer = me.getOfferByType(me.pPageData[#offers][tItemIndex], #credits)
  [493] pushsymb 559 ............................ <#catalogue>
  [496] pusharglist 1 ........................... <#catalogue>
  [498] extcall 471 ............................. <getThread(#catalogue)>
  [501] pusharglist 1 ........................... <getThread(#catalogue)>
  [503] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [505] pushsymb 351 ............................ <#credits>
  [508] getparam 0 .............................. <me>
  [510] pushsymb 528 ............................ <#pPageData>
  [513] pushsymb 103 ............................ <#pageid>
  [515] pusharglist 3 ........................... <me, #pPageData, #pageid>
  [517] objcall 123 ............................. <me.pPageData[#pageid]>
  [519] getlocal 3 .............................. <tOffer>
  [521] pushsymb 354 ............................ <#sendPurchaseFromCatalog>
  [524] pusharglistnoret 5 ...................... <getThread(#catalogue).getComponent(), #credits, me.pPageData[#pageid], tOffer, #sendPurchaseFromCatalog>
  [526] objcall 306 ............................. getThread(#catalogue).getComponent().requestPurchase(#credits, me.pPageData[#pageid], tOffer, #sendPurchaseFromCatalog)
  [529] pop 1 ................................... end case
  [531] ret
end
