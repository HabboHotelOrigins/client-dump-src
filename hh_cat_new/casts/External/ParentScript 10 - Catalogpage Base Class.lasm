property pPageData

on construct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 55 .............................. <VOID>
  [  4] setprop 528 ............................. pPageData = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 37 .............................. return 1
  [ 13] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 55 .............................. <VOID>
  [  4] setprop 528 ............................. pPageData = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 37 .............................. return 1
  [ 13] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] setprop 528 ............................. pPageData = tdata
  [  5] ret
end

on getPageId me
  [  0] getprop 528 ............................. <pPageData>
  [  3] pushsymb 103 ............................ <#pageid>
  [  5] pusharglist 2 ........................... <pPageData, #pageid>
  [  7] objcall 41 .............................. <pPageData[#pageid]>
  [  9] pusharglistnoret 1 ...................... <pPageData[#pageid]>
  [ 11] extcall 37 .............................. return pPageData[#pageid]
  [ 13] ret
end

on getClassAsset me, tClassName
  [  0] getparam 1 .............................. <tClassName>
  [  2] pusharglist 1 ........................... <tClassName>
  [  4] extcall 43 .............................. <ilk(tClassName)>
  [  6] pushsymb 291 ............................ <#string>
  [  9] nteq .................................... <ilk(tClassName) <> #string>
  [ 10] jmpifz [ 19] ............................ if ilk(tClassName) <> #string then
  [ 13] pushcons 0 .............................. <EMPTY>
  [ 15] pusharglistnoret 1 ...................... <EMPTY>
  [ 17] extcall 37 .............................. return EMPTY
  [ 19] getparam 1 .............................. <tClassName>
  [ 21] setlocal 0 .............................. tClass = tClassName
  [ 23] getlocal 0 .............................. <tClass>
  [ 25] pushcons 1 .............................. <"*">
  [ 27] containsstr ............................. <tClass contains "*">
  [ 28] jmpifz [ 56] ............................ if tClass contains "*" then
  [ 31] getlocal 0 .............................. <tClass>
  [ 33] pushsymb 292 ............................ <#char>
  [ 36] pushint8 1 .............................. <1>
  [ 38] pushcons 1 .............................. <"*">
  [ 40] getlocal 0 .............................. <tClass>
  [ 42] pusharglist 2 ........................... <"*", tClass>
  [ 44] extcall 293 ............................. <offset("*", tClass)>
  [ 47] pushint8 1 .............................. <1>
  [ 49] sub ..................................... <offset("*", tClass) - 1>
  [ 50] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [ 52] objcall 123 ............................. <tClass.char[1..offset("*", tClass) - 1]>
  [ 54] setlocal 0 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [ 56] getlocal 0 .............................. <tClass>
  [ 58] pusharglistnoret 1 ...................... <tClass>
  [ 60] extcall 37 .............................. return tClass
  [ 62] ret
end

on renderLargePreviewImage me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushcons 2 .............................. <"dealList">
  [  4] pusharglist 2 ........................... <tProps, "dealList">
  [  6] objcall 41 .............................. <tProps["dealList"]>
  [  8] pusharglist 1 ........................... <tProps["dealList"]>
  [ 10] extcall 78 .............................. <voidp(tProps["dealList"])>
  [ 12] not ..................................... <not voidp(tProps["dealList"])>
  [ 13] jmpifz [100] ............................ if not voidp(tProps["dealList"]) then / else
  [ 16] pushcons 3 .............................. <"ctlg_dealpreviewObj">
  [ 18] pusharglist 1 ........................... <"ctlg_dealpreviewObj">
  [ 20] extcall 167 ............................. <objectExists("ctlg_dealpreviewObj")>
  [ 22] not ..................................... <not objectExists("ctlg_dealpreviewObj")>
  [ 23] jmpifz [ 66] ............................ if not objectExists("ctlg_dealpreviewObj") then / else
  [ 26] pushcons 3 .............................. <"ctlg_dealpreviewObj">
  [ 28] pushcons 4 .............................. <"Deal Preview Class">
  [ 30] pusharglist 1 ........................... <["Deal Preview Class"]>
  [ 32] pushlist ................................ <["Deal Preview Class"]>
  [ 33] pusharglist 2 ........................... <"ctlg_dealpreviewObj", ["Deal Preview Class"]>
  [ 35] extcall 155 ............................. <createObject("ctlg_dealpreviewObj", ["Deal Preview Class"])>
  [ 37] setlocal 0 .............................. tObj = createObject("ctlg_dealpreviewObj", ["Deal Preview Class"])
  [ 39] getlocal 0 .............................. <tObj>
  [ 41] pushzero ................................ <0>
  [ 42] eq ...................................... <tObj = 0>
  [ 43] jmpifz [ 63] ............................ if tObj = 0 then
  [ 46] getparam 0 .............................. <me>
  [ 48] pushcons 5 .............................. <"Failed object creation!">
  [ 50] pushsymb 262 ............................ <#showHideDialog>
  [ 53] pushsymb 47 ............................. <#major>
  [ 55] pusharglist 4 ........................... <me, "Failed object creation!", #showHideDialog, #major>
  [ 57] extcall 46 .............................. <error(me, "Failed object creation!", #showHideDialog, #major)>
  [ 59] pusharglistnoret 1 ...................... <error(me, "Failed object creation!", #showHideDialog, #major)>
  [ 61] extcall 37 .............................. return error(me, "Failed object creation!", #showHideDialog, #major)
  [ 63] jmp [ 74]
  [ 66] pushcons 3 .............................. <"ctlg_dealpreviewObj">
  [ 68] pusharglist 1 ........................... <"ctlg_dealpreviewObj">
  [ 70] extcall 184 ............................. <getObject("ctlg_dealpreviewObj")>
  [ 72] setlocal 0 .............................. tObj = getObject("ctlg_dealpreviewObj")
  [ 74] getlocal 0 .............................. <tObj>
  [ 76] getparam 1 .............................. <tProps>
  [ 78] pushcons 2 .............................. <"dealList">
  [ 80] pusharglist 2 ........................... <tProps, "dealList">
  [ 82] objcall 41 .............................. <tProps["dealList"]>
  [ 84] pusharglistnoret 2 ...................... <tObj, tProps["dealList"]>
  [ 86] objcall 237 ............................. tObj.define(tProps["dealList"])
  [ 88] getlocal 0 .............................. <tObj>
  [ 90] pusharglist 1 ........................... <tObj>
  [ 92] objcall 263 ............................. <tObj.getPicture()>
  [ 95] setlocal 1 .............................. tImage = tObj.getPicture()
  [ 97] jmp [579]
  [100] getparam 1 .............................. <tProps>
  [102] pushcons 6 .............................. <"class">
  [104] pusharglist 2 ........................... <tProps, "class">
  [106] objcall 41 .............................. <tProps["class"]>
  [108] pusharglist 1 ........................... <tProps["class"]>
  [110] extcall 78 .............................. <voidp(tProps["class"])>
  [112] jmpifz [134] ............................ if voidp(tProps["class"]) then / else
  [115] getparam 0 .............................. <me>
  [117] pushcons 7 .............................. <"Class property missing">
  [119] pushsymb 144 ............................ <#showPreviewImage>
  [121] pushsymb 58 ............................. <#minor>
  [123] pusharglist 4 ........................... <me, "Class property missing", #showPreviewImage, #minor>
  [125] extcall 46 .............................. <error(me, "Class property missing", #showPreviewImage, #minor)>
  [127] pusharglistnoret 1 ...................... <error(me, "Class property missing", #showPreviewImage, #minor)>
  [129] extcall 37 .............................. return error(me, "Class property missing", #showPreviewImage, #minor)
  [131] jmp [144]
  [134] getparam 1 .............................. <tProps>
  [136] pushcons 6 .............................. <"class">
  [138] pusharglist 2 ........................... <tProps, "class">
  [140] objcall 41 .............................. <tProps["class"]>
  [142] setlocal 2 .............................. tClass = tProps["class"]
  [144] getparam 1 .............................. <tProps>
  [146] pushcons 8 .............................. <"direction">
  [148] pusharglist 2 ........................... <tProps, "direction">
  [150] objcall 41 .............................. <tProps["direction"]>
  [152] pusharglist 1 ........................... <tProps["direction"]>
  [154] extcall 78 .............................. <voidp(tProps["direction"])>
  [156] jmpifz [178] ............................ if voidp(tProps["direction"]) then / else
  [159] getparam 0 .............................. <me>
  [161] pushcons 9 .............................. <"Direction property missing">
  [163] pushsymb 144 ............................ <#showPreviewImage>
  [165] pushsymb 58 ............................. <#minor>
  [167] pusharglist 4 ........................... <me, "Direction property missing", #showPreviewImage, #minor>
  [169] extcall 46 .............................. <error(me, "Direction property missing", #showPreviewImage, #minor)>
  [171] pusharglistnoret 1 ...................... <error(me, "Direction property missing", #showPreviewImage, #minor)>
  [173] extcall 37 .............................. return error(me, "Direction property missing", #showPreviewImage, #minor)
  [175] jmp [227]
  [178] getparam 1 .............................. <tProps>
  [180] pushcons 8 .............................. <"direction">
  [182] pushcons 10 ............................. <"2,2,2">
  [184] pusharglistnoret 3 ...................... <tProps, "direction", "2,2,2">
  [186] objcall 254 ............................. tProps["direction"] = "2,2,2"
  [188] pushcons 11 ............................. <"[">
  [190] getparam 1 .............................. <tProps>
  [192] pushcons 8 .............................. <"direction">
  [194] pusharglist 2 ........................... <tProps, "direction">
  [196] objcall 41 .............................. <tProps["direction"]>
  [198] joinstr ................................. <"[" & tProps["direction"]>
  [199] pushcons 12 ............................. <"]">
  [201] joinstr ................................. <"[" & tProps["direction"] & "]">
  [202] pusharglist 1 ........................... <"[" & tProps["direction"] & "]">
  [204] extcall 266 ............................. <value("[" & tProps["direction"] & "]")>
  [207] setlocal 3 .............................. tDirection = value("[" & tProps["direction"] & "]")
  [209] getlocal 3 .............................. <tDirection>
  [211] getobjprop 48 ........................... <tDirection.count>
  [213] pushint8 3 .............................. <3>
  [215] lt ...................................... <tDirection.count < 3>
  [216] jmpifz [227] ............................ if tDirection.count < 3 then
  [219] pushzero ................................ <0>
  [220] pushzero ................................ <0>
  [221] pushzero ................................ <0>
  [222] pusharglist 3 ........................... <[0, 0, 0]>
  [224] pushlist ................................ <[0, 0, 0]>
  [225] setlocal 3 .............................. tDirection = [0, 0, 0]
  [227] getparam 1 .............................. <tProps>
  [229] pushcons 13 ............................. <"dimensions">
  [231] pusharglist 2 ........................... <tProps, "dimensions">
  [233] objcall 41 .............................. <tProps["dimensions"]>
  [235] pusharglist 1 ........................... <tProps["dimensions"]>
  [237] extcall 78 .............................. <voidp(tProps["dimensions"])>
  [239] jmpifz [261] ............................ if voidp(tProps["dimensions"]) then / else
  [242] getparam 0 .............................. <me>
  [244] pushcons 14 ............................. <"Dimensions property missing">
  [246] pushsymb 144 ............................ <#showPreviewImage>
  [248] pushsymb 58 ............................. <#minor>
  [250] pusharglist 4 ........................... <me, "Dimensions property missing", #showPreviewImage, #minor>
  [252] extcall 46 .............................. <error(me, "Dimensions property missing", #showPreviewImage, #minor)>
  [254] pusharglistnoret 1 ...................... <error(me, "Dimensions property missing", #showPreviewImage, #minor)>
  [256] extcall 37 .............................. return error(me, "Dimensions property missing", #showPreviewImage, #minor)
  [258] jmp [301]
  [261] pushcons 11 ............................. <"[">
  [263] getparam 1 .............................. <tProps>
  [265] pushcons 13 ............................. <"dimensions">
  [267] pusharglist 2 ........................... <tProps, "dimensions">
  [269] objcall 41 .............................. <tProps["dimensions"]>
  [271] joinstr ................................. <"[" & tProps["dimensions"]>
  [272] pushcons 12 ............................. <"]">
  [274] joinstr ................................. <"[" & tProps["dimensions"] & "]">
  [275] pusharglist 1 ........................... <"[" & tProps["dimensions"] & "]">
  [277] extcall 266 ............................. <value("[" & tProps["dimensions"] & "]")>
  [280] setlocal 4 .............................. tDimensions = value("[" & tProps["dimensions"] & "]")
  [282] getlocal 4 .............................. <tDimensions>
  [284] getobjprop 48 ........................... <tDimensions.count>
  [286] pushint8 2 .............................. <2>
  [288] lt ...................................... <tDimensions.count < 2>
  [289] jmpifz [301] ............................ if tDimensions.count < 2 then
  [292] pushint8 1 .............................. <1>
  [294] pushint8 1 .............................. <1>
  [296] pusharglist 2 ........................... <[1, 1]>
  [298] pushlist ................................ <[1, 1]>
  [299] setlocal 4 .............................. tDimensions = [1, 1]
  [301] getparam 1 .............................. <tProps>
  [303] pushcons 15 ............................. <"partColors">
  [305] pusharglist 2 ........................... <tProps, "partColors">
  [307] objcall 41 .............................. <tProps["partColors"]>
  [309] pusharglist 1 ........................... <tProps["partColors"]>
  [311] extcall 78 .............................. <voidp(tProps["partColors"])>
  [313] jmpifz [335] ............................ if voidp(tProps["partColors"]) then / else
  [316] getparam 0 .............................. <me>
  [318] pushcons 16 ............................. <"PartColors property missing">
  [320] pushsymb 144 ............................ <#showPreviewImage>
  [322] pushsymb 58 ............................. <#minor>
  [324] pusharglist 4 ........................... <me, "PartColors property missing", #showPreviewImage, #minor>
  [326] extcall 46 .............................. <error(me, "PartColors property missing", #showPreviewImage, #minor)>
  [328] pusharglistnoret 1 ...................... <error(me, "PartColors property missing", #showPreviewImage, #minor)>
  [330] extcall 37 .............................. return error(me, "PartColors property missing", #showPreviewImage, #minor)
  [332] jmp [363]
  [335] getparam 1 .............................. <tProps>
  [337] pushcons 15 ............................. <"partColors">
  [339] pusharglist 2 ........................... <tProps, "partColors">
  [341] objcall 41 .............................. <tProps["partColors"]>
  [343] setlocal 5 .............................. tpartColors = tProps["partColors"]
  [345] getlocal 5 .............................. <tpartColors>
  [347] pushcons 0 .............................. <EMPTY>
  [349] eq ...................................... <tpartColors = EMPTY>
  [350] getlocal 5 .............................. <tpartColors>
  [352] pushcons 17 ............................. <"0,0,0">
  [354] eq ...................................... <tpartColors = "0,0,0">
  [355] or ...................................... <(tpartColors = EMPTY) or (tpartColors = "0,0,0")>
  [356] jmpifz [363] ............................ if (tpartColors = EMPTY) or (tpartColors = "0,0,0") then
  [359] pushcons 18 ............................. <"*ffffff">
  [361] setlocal 5 .............................. tpartColors = "*ffffff"
  [363] getparam 1 .............................. <tProps>
  [365] pushcons 19 ............................. <"objectType">
  [367] pusharglist 2 ........................... <tProps, "objectType">
  [369] objcall 41 .............................. <tProps["objectType"]>
  [371] pusharglist 1 ........................... <tProps["objectType"]>
  [373] extcall 78 .............................. <voidp(tProps["objectType"])>
  [375] jmpifz [397] ............................ if voidp(tProps["objectType"]) then / else
  [378] getparam 0 .............................. <me>
  [380] pushcons 20 ............................. <"objectType property missing">
  [382] pushsymb 144 ............................ <#showPreviewImage>
  [384] pushsymb 58 ............................. <#minor>
  [386] pusharglist 4 ........................... <me, "objectType property missing", #showPreviewImage, #minor>
  [388] extcall 46 .............................. <error(me, "objectType property missing", #showPreviewImage, #minor)>
  [390] pusharglistnoret 1 ...................... <error(me, "objectType property missing", #showPreviewImage, #minor)>
  [392] extcall 37 .............................. return error(me, "objectType property missing", #showPreviewImage, #minor)
  [394] jmp [407]
  [397] getparam 1 .............................. <tProps>
  [399] pushcons 19 ............................. <"objectType">
  [401] pusharglist 2 ........................... <tProps, "objectType">
  [403] objcall 41 .............................. <tProps["objectType"]>
  [405] setlocal 6 .............................. tObjectType = tProps["objectType"]
  [407] pusharglist 0 ........................... <[:]>
  [409] pushproplist ............................ <[:]>
  [410] setlocal 7 .............................. tdata = [:]
  [412] getlocal 7 .............................. <tdata>
  [414] pushsymb 267 ............................ <#id>
  [417] pushcons 21 ............................. <"ctlg_previewObj">
  [419] pusharglistnoret 3 ...................... <tdata, #id, "ctlg_previewObj">
  [421] objcall 254 ............................. tdata[#id] = "ctlg_previewObj"
  [423] getlocal 7 .............................. <tdata>
  [425] pushsymb 268 ............................ <#class>
  [428] getlocal 2 .............................. <tClass>
  [430] pusharglistnoret 3 ...................... <tdata, #class, tClass>
  [432] objcall 254 ............................. tdata[#class] = tClass
  [434] getlocal 7 .............................. <tdata>
  [436] pushsymb 269 ............................ <#name>
  [439] getlocal 2 .............................. <tClass>
  [441] pusharglistnoret 3 ...................... <tdata, #name, tClass>
  [443] objcall 254 ............................. tdata[#name] = tClass
  [445] getlocal 7 .............................. <tdata>
  [447] pushsymb 270 ............................ <#custom>
  [450] getlocal 2 .............................. <tClass>
  [452] pusharglistnoret 3 ...................... <tdata, #custom, tClass>
  [454] objcall 254 ............................. tdata[#custom] = tClass
  [456] getlocal 7 .............................. <tdata>
  [458] pushsymb 271 ............................ <#direction>
  [461] getlocal 3 .............................. <tDirection>
  [463] pusharglistnoret 3 ...................... <tdata, #direction, tDirection>
  [465] objcall 254 ............................. tdata[#direction] = tDirection
  [467] getlocal 7 .............................. <tdata>
  [469] pushsymb 272 ............................ <#dimensions>
  [472] getlocal 4 .............................. <tDimensions>
  [474] pusharglistnoret 3 ...................... <tdata, #dimensions, tDimensions>
  [476] objcall 254 ............................. tdata[#dimensions] = tDimensions
  [478] getlocal 7 .............................. <tdata>
  [480] pushsymb 273 ............................ <#colors>
  [483] getlocal 5 .............................. <tpartColors>
  [485] pusharglistnoret 3 ...................... <tdata, #colors, tpartColors>
  [487] objcall 254 ............................. tdata[#colors] = tpartColors
  [489] getlocal 7 .............................. <tdata>
  [491] pushsymb 274 ............................ <#objectType>
  [494] getlocal 6 .............................. <tObjectType>
  [496] pusharglistnoret 3 ...................... <tdata, #objectType, tObjectType>
  [498] objcall 254 ............................. tdata[#objectType] = tObjectType
  [500] pushcons 21 ............................. <"ctlg_previewObj">
  [502] pusharglist 1 ........................... <"ctlg_previewObj">
  [504] extcall 167 ............................. <objectExists("ctlg_previewObj")>
  [506] not ..................................... <not objectExists("ctlg_previewObj")>
  [507] jmpifz [550] ............................ if not objectExists("ctlg_previewObj") then / else
  [510] pushcons 21 ............................. <"ctlg_previewObj">
  [512] pushcons 22 ............................. <"Product Preview Class">
  [514] pusharglist 1 ........................... <["Product Preview Class"]>
  [516] pushlist ................................ <["Product Preview Class"]>
  [517] pusharglist 2 ........................... <"ctlg_previewObj", ["Product Preview Class"]>
  [519] extcall 155 ............................. <createObject("ctlg_previewObj", ["Product Preview Class"])>
  [521] setlocal 0 .............................. tObj = createObject("ctlg_previewObj", ["Product Preview Class"])
  [523] getlocal 0 .............................. <tObj>
  [525] pushzero ................................ <0>
  [526] eq ...................................... <tObj = 0>
  [527] jmpifz [547] ............................ if tObj = 0 then
  [530] getparam 0 .............................. <me>
  [532] pushcons 5 .............................. <"Failed object creation!">
  [534] pushsymb 262 ............................ <#showHideDialog>
  [537] pushsymb 47 ............................. <#major>
  [539] pusharglist 4 ........................... <me, "Failed object creation!", #showHideDialog, #major>
  [541] extcall 46 .............................. <error(me, "Failed object creation!", #showHideDialog, #major)>
  [543] pusharglistnoret 1 ...................... <error(me, "Failed object creation!", #showHideDialog, #major)>
  [545] extcall 37 .............................. return error(me, "Failed object creation!", #showHideDialog, #major)
  [547] jmp [558]
  [550] pushcons 21 ............................. <"ctlg_previewObj">
  [552] pusharglist 1 ........................... <"ctlg_previewObj">
  [554] extcall 184 ............................. <getObject("ctlg_previewObj")>
  [556] setlocal 0 .............................. tObj = getObject("ctlg_previewObj")
  [558] getlocal 0 .............................. <tObj>
  [560] getlocal 7 .............................. <tdata>
  [562] pusharglist 1 ........................... <tdata>
  [564] objcall 107 ............................. <tdata.duplicate()>
  [566] pusharglistnoret 2 ...................... <tObj, tdata.duplicate()>
  [568] objcall 237 ............................. tObj.define(tdata.duplicate())
  [570] getlocal 0 .............................. <tObj>
  [572] pusharglist 1 ........................... <tObj>
  [574] objcall 263 ............................. <tObj.getPicture()>
  [577] setlocal 1 .............................. tImage = tObj.getPicture()
  [579] getlocal 1 .............................. <tImage>
  [581] pusharglistnoret 1 ...................... <tImage>
  [583] extcall 37 .............................. return tImage
  [585] ret
end

on getPossibleBuyButtonTypes me, tWndObj
  [  0] pushcons 23 ............................. <"layout.buybutton.types">
  [  2] pusharglist 1 ........................... <"layout.buybutton.types">
  [  4] extcall 529 ............................. <getStructVariable("layout.buybutton.types")>
  [  7] setlocal 0 .............................. tBuyButtonNames = getStructVariable("layout.buybutton.types")
  [  9] pusharglist 0 ........................... <[:]>
  [ 11] pushproplist ............................ <[:]>
  [ 12] setlocal 1 .............................. tTypes = [:]
  [ 14] getparam 1 .............................. <tWndObj>
  [ 16] pushsymb 530 ............................ <#elementList>
  [ 19] pusharglist 2 ........................... <tWndObj, #elementList>
  [ 21] objcall 120 ............................. <tWndObj.getProperty(#elementList)>
  [ 23] setlocal 2 .............................. tElementList = tWndObj.getProperty(#elementList)
  [ 25] pushint8 1 .............................. <1>
  [ 27] setlocal 3
  [ 29] getlocal 3
  [ 31] getlocal 2 .............................. <tElementList>
  [ 33] getobjprop 48 ........................... <tElementList.count>
  [ 35] lteq
  [ 36] jmpifz [105] ............................ repeat with i = 1 to tElementList.count
  [ 39] getlocal 2 .............................. <tElementList>
  [ 41] getlocal 3 .............................. <i>
  [ 43] pusharglist 2 ........................... <tElementList, i>
  [ 45] objcall 343 ............................. <tElementList.getPropAt(i)>
  [ 48] setlocal 4 .............................. tID = tElementList.getPropAt(i)
  [ 50] getlocal 0 .............................. <tBuyButtonNames>
  [ 52] getlocal 4 .............................. <tID>
  [ 54] pusharglist 2 ........................... <tBuyButtonNames, tID>
  [ 56] objcall 102 ............................. <tBuyButtonNames.getaProp(tID)>
  [ 58] setlocal 5 .............................. ttype = tBuyButtonNames.getaProp(tID)
  [ 60] getlocal 5 .............................. <ttype>
  [ 62] pusharglist 1 ........................... <ttype>
  [ 64] extcall 78 .............................. <voidp(ttype)>
  [ 66] not ..................................... <not voidp(ttype)>
  [ 67] jmpifz [ 96] ............................ if not voidp(ttype) then
  [ 70] getlocal 1 .............................. <tTypes>
  [ 72] getlocal 4 .............................. <tID>
  [ 74] pusharglist 2 ........................... <tTypes, tID>
  [ 76] objcall 102 ............................. <tTypes.getaProp(tID)>
  [ 78] pusharglist 1 ........................... <tTypes.getaProp(tID)>
  [ 80] extcall 78 .............................. <voidp(tTypes.getaProp(tID))>
  [ 82] jmpifz [ 96] ............................ if voidp(tTypes.getaProp(tID)) then
  [ 85] getlocal 1 .............................. <tTypes>
  [ 87] getlocal 4 .............................. <tID>
  [ 89] getlocal 5 .............................. <ttype>
  [ 91] pusharglistnoret 3 ...................... <tTypes, tID, ttype>
  [ 93] objcall 321 ............................. tTypes.setaProp(tID, ttype)
  [ 96] pushint8 1
  [ 98] getlocal 3
  [100] add
  [101] setlocal 3
  [103] endrepeat [ 29]
  [105] getlocal 1 .............................. <tTypes>
  [107] pusharglistnoret 1 ...................... <tTypes>
  [109] extcall 37 .............................. return tTypes
  [111] ret
end

on getOfferTypeList me, tItemGroup
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tList = []
  [  5] getparam 0 .............................. <me>
  [  7] getparam 1 .............................. <tItemGroup>
  [  9] pushsymb 351 ............................ <#credits>
  [ 12] pusharglist 3 ........................... <me, tItemGroup, #credits>
  [ 14] objcall 522 ............................. <me.getOfferByType(tItemGroup, #credits)>
  [ 17] pushzero ................................ <0>
  [ 18] nteq .................................... <me.getOfferByType(tItemGroup, #credits) <> 0>
  [ 19] jmpifz [ 32] ............................ if me.getOfferByType(tItemGroup, #credits) <> 0 then
  [ 22] getlocal 0 .............................. <tList>
  [ 24] pushsymb 351 ............................ <#credits>
  [ 27] pusharglistnoret 2 ...................... <tList, #credits>
  [ 29] objcall 339 ............................. tList.add(#credits)
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 1 .............................. <tItemGroup>
  [ 36] pushsymb 535 ............................ <#creditsandpixels>
  [ 39] pusharglist 3 ........................... <me, tItemGroup, #creditsandpixels>
  [ 41] objcall 522 ............................. <me.getOfferByType(tItemGroup, #creditsandpixels)>
  [ 44] pushzero ................................ <0>
  [ 45] nteq .................................... <me.getOfferByType(tItemGroup, #creditsandpixels) <> 0>
  [ 46] jmpifz [ 59] ............................ if me.getOfferByType(tItemGroup, #creditsandpixels) <> 0 then
  [ 49] getlocal 0 .............................. <tList>
  [ 51] pushsymb 535 ............................ <#creditsandpixels>
  [ 54] pusharglistnoret 2 ...................... <tList, #creditsandpixels>
  [ 56] objcall 339 ............................. tList.add(#creditsandpixels)
  [ 59] getparam 0 .............................. <me>
  [ 61] getparam 1 .............................. <tItemGroup>
  [ 63] pushsymb 407 ............................ <#pixels>
  [ 66] pusharglist 3 ........................... <me, tItemGroup, #pixels>
  [ 68] objcall 522 ............................. <me.getOfferByType(tItemGroup, #pixels)>
  [ 71] pushzero ................................ <0>
  [ 72] nteq .................................... <me.getOfferByType(tItemGroup, #pixels) <> 0>
  [ 73] jmpifz [ 86] ............................ if me.getOfferByType(tItemGroup, #pixels) <> 0 then
  [ 76] getlocal 0 .............................. <tList>
  [ 78] pushsymb 407 ............................ <#pixels>
  [ 81] pusharglistnoret 2 ...................... <tList, #pixels>
  [ 83] objcall 339 ............................. tList.add(#pixels)
  [ 86] getlocal 0 .............................. <tList>
  [ 88] pusharglistnoret 1 ...................... <tList>
  [ 90] extcall 37 .............................. return tList
  [ 92] ret
end

on getOfferByType me, tItemGroup, tOfferType
  [  0] getparam 1 .............................. <tItemGroup>
  [  2] pusharglist 1 ........................... <tItemGroup>
  [  4] extcall 57 .............................. <objectp(tItemGroup)>
  [  6] not ..................................... <not objectp(tItemGroup)>
  [  7] getparam 1 .............................. <tItemGroup>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <tItemGroup = 0>
  [ 11] or ...................................... <not objectp(tItemGroup) or (tItemGroup = 0)>
  [ 12] jmpifz [ 32] ............................ if not objectp(tItemGroup) or (tItemGroup = 0) then
  [ 15] getparam 0 .............................. <me>
  [ 17] pushcons 24 ............................. <"Invalid input format">
  [ 19] pushsymb 522 ............................ <#getOfferByType>
  [ 22] pushsymb 47 ............................. <#major>
  [ 24] pusharglist 4 ........................... <me, "Invalid input format", #getOfferByType, #major>
  [ 26] extcall 46 .............................. <error(me, "Invalid input format", #getOfferByType, #major)>
  [ 28] pusharglistnoret 1 ...................... <error(me, "Invalid input format", #getOfferByType, #major)>
  [ 30] extcall 37 .............................. return error(me, "Invalid input format", #getOfferByType, #major)
  [ 32] getparam 1 .............................. <tItemGroup>
  [ 34] pusharglist 1 ........................... <tItemGroup>
  [ 36] objcall 59 .............................. <tItemGroup.getCount()>
  [ 38] pushint8 1 .............................. <1>
  [ 40] lt ...................................... <tItemGroup.getCount() < 1>
  [ 41] jmpifz [ 61] ............................ if tItemGroup.getCount() < 1 then
  [ 44] getparam 0 .............................. <me>
  [ 46] pushsymb 523 ............................ <#getOfferPriceTextByType>
  [ 49] pushcons 25 ............................. <"Offer group contains no offers">
  [ 51] pushsymb 58 ............................. <#minor>
  [ 53] pusharglist 4 ........................... <me, #getOfferPriceTextByType, "Offer group contains no offers", #minor>
  [ 55] extcall 46 .............................. <error(me, #getOfferPriceTextByType, "Offer group contains no offers", #minor)>
  [ 57] pusharglistnoret 1 ...................... <error(me, #getOfferPriceTextByType, "Offer group contains no offers", #minor)>
  [ 59] extcall 37 .............................. return error(me, #getOfferPriceTextByType, "Offer group contains no offers", #minor)
  [ 61] pushint8 1 .............................. <1>
  [ 63] setlocal 0
  [ 65] getlocal 0
  [ 67] getparam 1 .............................. <tItemGroup>
  [ 69] pusharglist 1 ........................... <tItemGroup>
  [ 71] objcall 59 .............................. <tItemGroup.getCount()>
  [ 73] lteq
  [ 74] jmpifz [216] ............................ repeat with i = 1 to tItemGroup.getCount()
  [ 77] getparam 1 .............................. <tItemGroup>
  [ 79] getlocal 0 .............................. <i>
  [ 81] pusharglist 2 ........................... <tItemGroup, i>
  [ 83] objcall 344 ............................. <tItemGroup.getOffer(i)>
  [ 86] setlocal 1 .............................. tOffer = tItemGroup.getOffer(i)
  [ 88] getparam 2 .............................. <tOfferType>
  [ 90] peek 0 .................................. case tOfferType of
  [ 92] pushsymb 351 ............................ <#credits>
  [ 95] eq
  [ 96] jmpifz [125] ............................ (case) #credits:
  [ 99] getlocal 1 .............................. <tOffer>
  [101] pushsymb 407 ............................ <#pixels>
  [104] pusharglist 2 ........................... <tOffer, #pixels>
  [106] objcall 538 ............................. <tOffer.getPrice(#pixels)>
  [109] pushzero ................................ <0>
  [110] eq ...................................... <tOffer.getPrice(#pixels) = 0>
  [111] jmpifz [122] ............................ if tOffer.getPrice(#pixels) = 0 then
  [114] pop 1
  [116] getlocal 1 .............................. <tOffer>
  [118] pusharglistnoret 1 ...................... <tOffer>
  [120] extcall 37 .............................. return tOffer
  [122] jmp [205]
  [125] peek 0
  [127] pushsymb 535 ............................ <#creditsandpixels>
  [130] eq
  [131] jmpifz [173] ............................ (case) #creditsandpixels:
  [134] getlocal 1 .............................. <tOffer>
  [136] pushsymb 407 ............................ <#pixels>
  [139] pusharglist 2 ........................... <tOffer, #pixels>
  [141] objcall 538 ............................. <tOffer.getPrice(#pixels)>
  [144] pushzero ................................ <0>
  [145] nteq .................................... <tOffer.getPrice(#pixels) <> 0>
  [146] getlocal 1 .............................. <tOffer>
  [148] pushsymb 351 ............................ <#credits>
  [151] pusharglist 2 ........................... <tOffer, #credits>
  [153] objcall 538 ............................. <tOffer.getPrice(#credits)>
  [156] pushzero ................................ <0>
  [157] nteq .................................... <tOffer.getPrice(#credits) <> 0>
  [158] and ..................................... <(tOffer.getPrice(#pixels) <> 0) and (tOffer.getPrice(#credits) <> 0)>
  [159] jmpifz [170] ............................ if (tOffer.getPrice(#pixels) <> 0) and (tOffer.getPrice(#credits) <> 0) then
  [162] pop 1
  [164] getlocal 1 .............................. <tOffer>
  [166] pusharglistnoret 1 ...................... <tOffer>
  [168] extcall 37 .............................. return tOffer
  [170] jmp [205]
  [173] peek 0
  [175] pushsymb 407 ............................ <#pixels>
  [178] eq
  [179] jmpifz [205] ............................ (case) #pixels:
  [182] getlocal 1 .............................. <tOffer>
  [184] pushsymb 351 ............................ <#credits>
  [187] pusharglist 2 ........................... <tOffer, #credits>
  [189] objcall 538 ............................. <tOffer.getPrice(#credits)>
  [192] pushzero ................................ <0>
  [193] eq ...................................... <tOffer.getPrice(#credits) = 0>
  [194] jmpifz [205] ............................ if tOffer.getPrice(#credits) = 0 then
  [197] pop 1
  [199] getlocal 1 .............................. <tOffer>
  [201] pusharglistnoret 1 ...................... <tOffer>
  [203] extcall 37 .............................. return tOffer
  [205] pop 1 ................................... end case
  [207] pushint8 1
  [209] getlocal 0
  [211] add
  [212] setlocal 0
  [214] endrepeat [ 65]
  [216] pushzero ................................ <0>
  [217] pusharglistnoret 1 ...................... <0>
  [219] extcall 37 .............................. return 0
  [221] ret
end

on getOfferPriceTextByType me, tItemGroup, tOfferType
  [  0] getparam 1 .............................. <tItemGroup>
  [  2] pusharglist 1 ........................... <tItemGroup>
  [  4] extcall 57 .............................. <objectp(tItemGroup)>
  [  6] not ..................................... <not objectp(tItemGroup)>
  [  7] getparam 1 .............................. <tItemGroup>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <tItemGroup = 0>
  [ 11] or ...................................... <not objectp(tItemGroup) or (tItemGroup = 0)>
  [ 12] jmpifz [ 32] ............................ if not objectp(tItemGroup) or (tItemGroup = 0) then
  [ 15] getparam 0 .............................. <me>
  [ 17] pushcons 24 ............................. <"Invalid input format">
  [ 19] pushsymb 523 ............................ <#getOfferPriceTextByType>
  [ 22] pushsymb 47 ............................. <#major>
  [ 24] pusharglist 4 ........................... <me, "Invalid input format", #getOfferPriceTextByType, #major>
  [ 26] extcall 46 .............................. <error(me, "Invalid input format", #getOfferPriceTextByType, #major)>
  [ 28] pusharglistnoret 1 ...................... <error(me, "Invalid input format", #getOfferPriceTextByType, #major)>
  [ 30] extcall 37 .............................. return error(me, "Invalid input format", #getOfferPriceTextByType, #major)
  [ 32] getparam 1 .............................. <tItemGroup>
  [ 34] pusharglist 1 ........................... <tItemGroup>
  [ 36] objcall 59 .............................. <tItemGroup.getCount()>
  [ 38] pushint8 1 .............................. <1>
  [ 40] lt ...................................... <tItemGroup.getCount() < 1>
  [ 41] jmpifz [ 61] ............................ if tItemGroup.getCount() < 1 then
  [ 44] getparam 0 .............................. <me>
  [ 46] pushsymb 523 ............................ <#getOfferPriceTextByType>
  [ 49] pushcons 25 ............................. <"Offer group contains no offers">
  [ 51] pushsymb 58 ............................. <#minor>
  [ 53] pusharglist 4 ........................... <me, #getOfferPriceTextByType, "Offer group contains no offers", #minor>
  [ 55] extcall 46 .............................. <error(me, #getOfferPriceTextByType, "Offer group contains no offers", #minor)>
  [ 57] pusharglistnoret 1 ...................... <error(me, #getOfferPriceTextByType, "Offer group contains no offers", #minor)>
  [ 59] extcall 37 .............................. return error(me, #getOfferPriceTextByType, "Offer group contains no offers", #minor)
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 1 .............................. <tItemGroup>
  [ 65] getparam 2 .............................. <tOfferType>
  [ 67] pusharglist 3 ........................... <me, tItemGroup, tOfferType>
  [ 69] objcall 522 ............................. <me.getOfferByType(tItemGroup, tOfferType)>
  [ 72] setlocal 0 .............................. tOffer = me.getOfferByType(tItemGroup, tOfferType)
  [ 74] getlocal 0 .............................. <tOffer>
  [ 76] pusharglist 1 ........................... <tOffer>
  [ 78] extcall 57 .............................. <objectp(tOffer)>
  [ 80] jmpifz [218] ............................ if objectp(tOffer) then
  [ 83] getparam 2 .............................. <tOfferType>
  [ 85] peek 0 .................................. case tOfferType of
  [ 87] pushsymb 351 ............................ <#credits>
  [ 90] eq
  [ 91] jmpifz [122] ............................ (case) #credits:
  [ 94] pop 1
  [ 96] getlocal 0 .............................. <tOffer>
  [ 98] pushsymb 351 ............................ <#credits>
  [101] pusharglist 2 ........................... <tOffer, #credits>
  [103] objcall 538 ............................. <tOffer.getPrice(#credits)>
  [106] pushcons 26 ............................. <"credits">
  [108] pushcons 26 ............................. <"credits">
  [110] pusharglist 2 ........................... <"credits", "credits">
  [112] extcall 158 ............................. <getText("credits", "credits")>
  [114] joinpadstr .............................. <tOffer.getPrice(#credits) && getText("credits", "credits")>
  [115] pusharglistnoret 1 ...................... <tOffer.getPrice(#credits) && getText("credits", "credits")>
  [117] extcall 37 .............................. return tOffer.getPrice(#credits) && getText("credits", "credits")
  [119] jmp [216]
  [122] peek 0
  [124] pushsymb 535 ............................ <#creditsandpixels>
  [127] eq
  [128] jmpifz [182] ............................ (case) #creditsandpixels:
  [131] pop 1
  [133] getlocal 0 .............................. <tOffer>
  [135] pushsymb 407 ............................ <#pixels>
  [138] pusharglist 2 ........................... <tOffer, #pixels>
  [140] objcall 538 ............................. <tOffer.getPrice(#pixels)>
  [143] pushcons 27 ............................. <"pixels">
  [145] pushcons 27 ............................. <"pixels">
  [147] pusharglist 2 ........................... <"pixels", "pixels">
  [149] extcall 158 ............................. <getText("pixels", "pixels")>
  [151] joinpadstr .............................. <tOffer.getPrice(#pixels) && getText("pixels", "pixels")>
  [152] pushcons 28 ............................. <"&">
  [154] joinpadstr .............................. <tOffer.getPrice(#pixels) && getText("pixels", "pixels") && "&">
  [155] getlocal 0 .............................. <tOffer>
  [157] pushsymb 351 ............................ <#credits>
  [160] pusharglist 2 ........................... <tOffer, #credits>
  [162] objcall 538 ............................. <tOffer.getPrice(#credits)>
  [165] joinpadstr .............................. <tOffer.getPrice(#pixels) && getText("pixels", "pixels") && "&" && tOffer.getPrice(#credits)>
  [166] pushcons 26 ............................. <"credits">
  [168] pushcons 26 ............................. <"credits">
  [170] pusharglist 2 ........................... <"credits", "credits">
  [172] extcall 158 ............................. <getText("credits", "credits")>
  [174] joinpadstr .............................. <tOffer.getPrice(#pixels) && getText("pixels", "pixels") && "&" && tOffer.getPrice(#credits) && getText("credits", "credits")>
  [175] pusharglistnoret 1 ...................... <tOffer.getPrice(#pixels) && getText("pixels", "pixels") && "&" && tOffer.getPrice(#credits) && getText("credits", "credits")>
  [177] extcall 37 .............................. return tOffer.getPrice(#pixels) && getText("pixels", "pixels") && "&" && tOffer.getPrice(#credits) && getText("credits", "credits")
  [179] jmp [216]
  [182] peek 0
  [184] pushsymb 407 ............................ <#pixels>
  [187] eq
  [188] jmpifz [216] ............................ (case) #pixels:
  [191] pop 1
  [193] getlocal 0 .............................. <tOffer>
  [195] pushsymb 407 ............................ <#pixels>
  [198] pusharglist 2 ........................... <tOffer, #pixels>
  [200] objcall 538 ............................. <tOffer.getPrice(#pixels)>
  [203] pushcons 27 ............................. <"pixels">
  [205] pushcons 27 ............................. <"pixels">
  [207] pusharglist 2 ........................... <"pixels", "pixels">
  [209] extcall 158 ............................. <getText("pixels", "pixels")>
  [211] joinpadstr .............................. <tOffer.getPrice(#pixels) && getText("pixels", "pixels")>
  [212] pusharglistnoret 1 ...................... <tOffer.getPrice(#pixels) && getText("pixels", "pixels")>
  [214] extcall 37 .............................. return tOffer.getPrice(#pixels) && getText("pixels", "pixels")
  [216] pop 1 ................................... end case
  [218] pushcons 0 .............................. <EMPTY>
  [220] pusharglistnoret 1 ...................... <EMPTY>
  [222] extcall 37 .............................. return EMPTY
  [224] ret
end

on centerRectInRect me, tSmallrect, tLargeRect
  [  0] pushzero ................................ <0>
  [  1] pushzero ................................ <0>
  [  2] pusharglist 2 ........................... <0, 0>
  [  4] extcall 32 .............................. <point(0, 0)>
  [  6] setlocal 0 .............................. tpoint = point(0, 0)
  [  8] getlocal 0 .............................. <tpoint>
  [ 10] getparam 2 .............................. <tLargeRect>
  [ 12] getobjprop 33 ........................... <tLargeRect.width>
  [ 14] getparam 1 .............................. <tSmallrect>
  [ 16] getobjprop 33 ........................... <tSmallrect.width>
  [ 18] sub ..................................... <tLargeRect.width - tSmallrect.width>
  [ 19] pushint8 2 .............................. <2>
  [ 21] div ..................................... <(tLargeRect.width - tSmallrect.width) / 2>
  [ 22] setobjprop 82 ........................... tpoint.locH = (tLargeRect.width - tSmallrect.width) / 2
  [ 24] getlocal 0 .............................. <tpoint>
  [ 26] getparam 2 .............................. <tLargeRect>
  [ 28] getobjprop 34 ........................... <tLargeRect.height>
  [ 30] getparam 1 .............................. <tSmallrect>
  [ 32] getobjprop 34 ........................... <tSmallrect.height>
  [ 34] sub ..................................... <tLargeRect.height - tSmallrect.height>
  [ 35] pushint8 2 .............................. <2>
  [ 37] div ..................................... <(tLargeRect.height - tSmallrect.height) / 2>
  [ 38] setobjprop 83 ........................... tpoint.locV = (tLargeRect.height - tSmallrect.height) / 2
  [ 40] getlocal 0 .............................. <tpoint>
  [ 42] pusharglistnoret 1 ...................... <tpoint>
  [ 44] extcall 37 .............................. return tpoint
  [ 46] ret
end

on centerBlitImageToElement me, tImage, tElement
  [  0] getparam 2 .............................. <tElement>
  [  2] pusharglist 1 ........................... <tElement>
  [  4] extcall 57 .............................. <objectp(tElement)>
  [  6] not ..................................... <not objectp(tElement)>
  [  7] getparam 2 .............................. <tElement>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <tElement = 0>
  [ 11] or ...................................... <not objectp(tElement) or (tElement = 0)>
  [ 12] jmpifz [ 32] ............................ if not objectp(tElement) or (tElement = 0) then
  [ 15] getparam 0 .............................. <me>
  [ 17] pushcons 29 ............................. <"Image element was invalid">
  [ 19] pushsymb 524 ............................ <#centerBlitImageToElement>
  [ 22] pushsymb 58 ............................. <#minor>
  [ 24] pusharglist 4 ........................... <me, "Image element was invalid", #centerBlitImageToElement, #minor>
  [ 26] extcall 46 .............................. <error(me, "Image element was invalid", #centerBlitImageToElement, #minor)>
  [ 28] pusharglistnoret 1 ...................... <error(me, "Image element was invalid", #centerBlitImageToElement, #minor)>
  [ 30] extcall 37 .............................. return error(me, "Image element was invalid", #centerBlitImageToElement, #minor)
  [ 32] getparam 2 .............................. <tElement>
  [ 34] pusharglistnoret 1 ...................... <tElement>
  [ 36] objcall 539 ............................. tElement.clearBuffer()
  [ 39] getparam 0 .............................. <me>
  [ 41] getparam 1 .............................. <tImage>
  [ 43] getobjprop 69 ........................... <tImage.rect>
  [ 45] getparam 2 .............................. <tElement>
  [ 47] pushsymb 17 ............................. <#image>
  [ 49] pusharglist 2 ........................... <tElement, #image>
  [ 51] objcall 120 ............................. <tElement.getProperty(#image)>
  [ 53] getobjprop 69 ........................... <tElement.getProperty(#image).rect>
  [ 55] pusharglist 3 ........................... <me, tImage.rect, tElement.getProperty(#image).rect>
  [ 57] objcall 8 ............................... <me.centerRectInRect(tImage.rect, tElement.getProperty(#image).rect)>
  [ 59] setlocal 0 .............................. tOffset = me.centerRectInRect(tImage.rect, tElement.getProperty(#image).rect)
  [ 61] getparam 2 .............................. <tElement>
  [ 63] pushsymb 17 ............................. <#image>
  [ 65] pusharglist 2 ........................... <tElement, #image>
  [ 67] objcall 120 ............................. <tElement.getProperty(#image)>
  [ 69] setlocal 1 .............................. tOldImage = tElement.getProperty(#image)
  [ 71] getlocal 0 .............................. <tOffset>
  [ 73] getobjprop 82 ........................... <tOffset.locH>
  [ 75] pushzero ................................ <0>
  [ 76] gteq .................................... <tOffset.locH >= 0>
  [ 77] getlocal 0 .............................. <tOffset>
  [ 79] getobjprop 83 ........................... <tOffset.locV>
  [ 81] pushzero ................................ <0>
  [ 82] gteq .................................... <tOffset.locV >= 0>
  [ 83] and ..................................... <(tOffset.locH >= 0) and (tOffset.locV >= 0)>
  [ 84] jmpifz [127] ............................ if (tOffset.locH >= 0) and (tOffset.locV >= 0) then / else
  [ 87] getlocal 1 .............................. <tOldImage>
  [ 89] getparam 1 .............................. <tImage>
  [ 91] getparam 1 .............................. <tImage>
  [ 93] getobjprop 69 ........................... <tImage.rect>
  [ 95] getlocal 0 .............................. <tOffset>
  [ 97] getobjprop 82 ........................... <tOffset.locH>
  [ 99] getlocal 0 .............................. <tOffset>
  [101] getobjprop 83 ........................... <tOffset.locV>
  [103] getlocal 0 .............................. <tOffset>
  [105] getobjprop 82 ........................... <tOffset.locH>
  [107] getlocal 0 .............................. <tOffset>
  [109] getobjprop 83 ........................... <tOffset.locV>
  [111] pusharglist 4 ........................... <tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV>
  [113] extcall 69 .............................. <rect(tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV)>
  [115] add ..................................... <tImage.rect + rect(tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV)>
  [116] getparam 1 .............................. <tImage>
  [118] getobjprop 69 ........................... <tImage.rect>
  [120] pusharglistnoret 4 ...................... <tOldImage, tImage, tImage.rect + rect(tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV), tImage.rect>
  [122] objcall 77 .............................. tOldImage.copyPixels(tImage, tImage.rect + rect(tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV), tImage.rect)
  [124] jmp [452]
  [127] getlocal 0 .............................. <tOffset>
  [129] getobjprop 82 ........................... <tOffset.locH>
  [131] pushzero ................................ <0>
  [132] lt ...................................... <tOffset.locH < 0>
  [133] getlocal 0 .............................. <tOffset>
  [135] getobjprop 83 ........................... <tOffset.locV>
  [137] pushzero ................................ <0>
  [138] gteq .................................... <tOffset.locV >= 0>
  [139] and ..................................... <(tOffset.locH < 0) and (tOffset.locV >= 0)>
  [140] jmpifz [260] ............................ if (tOffset.locH < 0) and (tOffset.locV >= 0) then / else
  [143] pushzero ................................ <0>
  [144] pushzero ................................ <0>
  [145] pusharglist 2 ........................... <0, 0>
  [147] extcall 32 .............................. <point(0, 0)>
  [149] setlocal 2 .............................. tOffsetDest = point(0, 0)
  [151] pushzero ................................ <0>
  [152] pushzero ................................ <0>
  [153] pusharglist 2 ........................... <0, 0>
  [155] extcall 32 .............................. <point(0, 0)>
  [157] setlocal 3 .............................. tOffsetSrc = point(0, 0)
  [159] getlocal 3 .............................. <tOffsetSrc>
  [161] getparam 1 .............................. <tImage>
  [163] getobjprop 33 ........................... <tImage.width>
  [165] getlocal 1 .............................. <tOldImage>
  [167] getobjprop 33 ........................... <tOldImage.width>
  [169] sub ..................................... <tImage.width - tOldImage.width>
  [170] pushint8 2 .............................. <2>
  [172] div ..................................... <(tImage.width - tOldImage.width) / 2>
  [173] setobjprop 82 ........................... tOffsetSrc.locH = (tImage.width - tOldImage.width) / 2
  [175] getlocal 2 .............................. <tOffsetDest>
  [177] getlocal 1 .............................. <tOldImage>
  [179] getobjprop 34 ........................... <tOldImage.height>
  [181] getparam 1 .............................. <tImage>
  [183] getobjprop 34 ........................... <tImage.height>
  [185] sub ..................................... <tOldImage.height - tImage.height>
  [186] pushint8 2 .............................. <2>
  [188] div ..................................... <(tOldImage.height - tImage.height) / 2>
  [189] setobjprop 83 ........................... tOffsetDest.locV = (tOldImage.height - tImage.height) / 2
  [191] getparam 1 .............................. <tImage>
  [193] getobjprop 69 ........................... <tImage.rect>
  [195] getlocal 3 .............................. <tOffsetSrc>
  [197] getobjprop 82 ........................... <tOffsetSrc.locH>
  [199] getlocal 3 .............................. <tOffsetSrc>
  [201] getobjprop 83 ........................... <tOffsetSrc.locV>
  [203] getlocal 3 .............................. <tOffsetSrc>
  [205] getobjprop 82 ........................... <tOffsetSrc.locH>
  [207] getlocal 3 .............................. <tOffsetSrc>
  [209] getobjprop 83 ........................... <tOffsetSrc.locV>
  [211] pusharglist 4 ........................... <tOffsetSrc.locH, tOffsetSrc.locV, tOffsetSrc.locH, tOffsetSrc.locV>
  [213] extcall 69 .............................. <rect(tOffsetSrc.locH, tOffsetSrc.locV, tOffsetSrc.locH, tOffsetSrc.locV)>
  [215] add ..................................... <tImage.rect + rect(tOffsetSrc.locH, tOffsetSrc.locV, tOffsetSrc.locH, tOffsetSrc.locV)>
  [216] setlocal 4 .............................. tSrcRect = tImage.rect + rect(tOffsetSrc.locH, tOffsetSrc.locV, tOffsetSrc.locH, tOffsetSrc.locV)
  [218] getparam 1 .............................. <tImage>
  [220] getobjprop 69 ........................... <tImage.rect>
  [222] getlocal 2 .............................. <tOffsetDest>
  [224] getobjprop 82 ........................... <tOffsetDest.locH>
  [226] getlocal 2 .............................. <tOffsetDest>
  [228] getobjprop 83 ........................... <tOffsetDest.locV>
  [230] getlocal 2 .............................. <tOffsetDest>
  [232] getobjprop 82 ........................... <tOffsetDest.locH>
  [234] getlocal 2 .............................. <tOffsetDest>
  [236] getobjprop 83 ........................... <tOffsetDest.locV>
  [238] pusharglist 4 ........................... <tOffsetDest.locH, tOffsetDest.locV, tOffsetDest.locH, tOffsetDest.locV>
  [240] extcall 69 .............................. <rect(tOffsetDest.locH, tOffsetDest.locV, tOffsetDest.locH, tOffsetDest.locV)>
  [242] add ..................................... <tImage.rect + rect(tOffsetDest.locH, tOffsetDest.locV, tOffsetDest.locH, tOffsetDest.locV)>
  [243] setlocal 5 .............................. tdestrect = tImage.rect + rect(tOffsetDest.locH, tOffsetDest.locV, tOffsetDest.locH, tOffsetDest.locV)
  [245] getlocal 1 .............................. <tOldImage>
  [247] getparam 1 .............................. <tImage>
  [249] getlocal 5 .............................. <tdestrect>
  [251] getlocal 4 .............................. <tSrcRect>
  [253] pusharglistnoret 4 ...................... <tOldImage, tImage, tdestrect, tSrcRect>
  [255] objcall 77 .............................. tOldImage.copyPixels(tImage, tdestrect, tSrcRect)
  [257] jmp [452]
  [260] getlocal 0 .............................. <tOffset>
  [262] getobjprop 82 ........................... <tOffset.locH>
  [264] pushzero ................................ <0>
  [265] gteq .................................... <tOffset.locH >= 0>
  [266] getlocal 0 .............................. <tOffset>
  [268] getobjprop 83 ........................... <tOffset.locV>
  [270] pushzero ................................ <0>
  [271] lt ...................................... <tOffset.locV < 0>
  [272] and ..................................... <(tOffset.locH >= 0) and (tOffset.locV < 0)>
  [273] jmpifz [393] ............................ if (tOffset.locH >= 0) and (tOffset.locV < 0) then / else
  [276] pushzero ................................ <0>
  [277] pushzero ................................ <0>
  [278] pusharglist 2 ........................... <0, 0>
  [280] extcall 32 .............................. <point(0, 0)>
  [282] setlocal 2 .............................. tOffsetDest = point(0, 0)
  [284] pushzero ................................ <0>
  [285] pushzero ................................ <0>
  [286] pusharglist 2 ........................... <0, 0>
  [288] extcall 32 .............................. <point(0, 0)>
  [290] setlocal 3 .............................. tOffsetSrc = point(0, 0)
  [292] getlocal 3 .............................. <tOffsetSrc>
  [294] getparam 1 .............................. <tImage>
  [296] getobjprop 34 ........................... <tImage.height>
  [298] getlocal 1 .............................. <tOldImage>
  [300] getobjprop 34 ........................... <tOldImage.height>
  [302] sub ..................................... <tImage.height - tOldImage.height>
  [303] pushint8 2 .............................. <2>
  [305] div ..................................... <(tImage.height - tOldImage.height) / 2>
  [306] setobjprop 83 ........................... tOffsetSrc.locV = (tImage.height - tOldImage.height) / 2
  [308] getlocal 2 .............................. <tOffsetDest>
  [310] getlocal 1 .............................. <tOldImage>
  [312] getobjprop 33 ........................... <tOldImage.width>
  [314] getparam 1 .............................. <tImage>
  [316] getobjprop 33 ........................... <tImage.width>
  [318] sub ..................................... <tOldImage.width - tImage.width>
  [319] pushint8 2 .............................. <2>
  [321] div ..................................... <(tOldImage.width - tImage.width) / 2>
  [322] setobjprop 82 ........................... tOffsetDest.locH = (tOldImage.width - tImage.width) / 2
  [324] getparam 1 .............................. <tImage>
  [326] getobjprop 69 ........................... <tImage.rect>
  [328] getlocal 3 .............................. <tOffsetSrc>
  [330] getobjprop 82 ........................... <tOffsetSrc.locH>
  [332] getlocal 3 .............................. <tOffsetSrc>
  [334] getobjprop 83 ........................... <tOffsetSrc.locV>
  [336] getlocal 3 .............................. <tOffsetSrc>
  [338] getobjprop 82 ........................... <tOffsetSrc.locH>
  [340] getlocal 3 .............................. <tOffsetSrc>
  [342] getobjprop 83 ........................... <tOffsetSrc.locV>
  [344] pusharglist 4 ........................... <tOffsetSrc.locH, tOffsetSrc.locV, tOffsetSrc.locH, tOffsetSrc.locV>
  [346] extcall 69 .............................. <rect(tOffsetSrc.locH, tOffsetSrc.locV, tOffsetSrc.locH, tOffsetSrc.locV)>
  [348] add ..................................... <tImage.rect + rect(tOffsetSrc.locH, tOffsetSrc.locV, tOffsetSrc.locH, tOffsetSrc.locV)>
  [349] setlocal 4 .............................. tSrcRect = tImage.rect + rect(tOffsetSrc.locH, tOffsetSrc.locV, tOffsetSrc.locH, tOffsetSrc.locV)
  [351] getparam 1 .............................. <tImage>
  [353] getobjprop 69 ........................... <tImage.rect>
  [355] getlocal 2 .............................. <tOffsetDest>
  [357] getobjprop 82 ........................... <tOffsetDest.locH>
  [359] getlocal 2 .............................. <tOffsetDest>
  [361] getobjprop 83 ........................... <tOffsetDest.locV>
  [363] getlocal 2 .............................. <tOffsetDest>
  [365] getobjprop 82 ........................... <tOffsetDest.locH>
  [367] getlocal 2 .............................. <tOffsetDest>
  [369] getobjprop 83 ........................... <tOffsetDest.locV>
  [371] pusharglist 4 ........................... <tOffsetDest.locH, tOffsetDest.locV, tOffsetDest.locH, tOffsetDest.locV>
  [373] extcall 69 .............................. <rect(tOffsetDest.locH, tOffsetDest.locV, tOffsetDest.locH, tOffsetDest.locV)>
  [375] add ..................................... <tImage.rect + rect(tOffsetDest.locH, tOffsetDest.locV, tOffsetDest.locH, tOffsetDest.locV)>
  [376] setlocal 5 .............................. tdestrect = tImage.rect + rect(tOffsetDest.locH, tOffsetDest.locV, tOffsetDest.locH, tOffsetDest.locV)
  [378] getlocal 1 .............................. <tOldImage>
  [380] getparam 1 .............................. <tImage>
  [382] getlocal 5 .............................. <tdestrect>
  [384] getlocal 4 .............................. <tSrcRect>
  [386] pusharglistnoret 4 ...................... <tOldImage, tImage, tdestrect, tSrcRect>
  [388] objcall 77 .............................. tOldImage.copyPixels(tImage, tdestrect, tSrcRect)
  [390] jmp [452]
  [393] getparam 0 .............................. <me>
  [395] getparam 2 .............................. <tElement>
  [397] pushsymb 17 ............................. <#image>
  [399] pusharglist 2 ........................... <tElement, #image>
  [401] objcall 120 ............................. <tElement.getProperty(#image)>
  [403] getobjprop 69 ........................... <tElement.getProperty(#image).rect>
  [405] getparam 1 .............................. <tImage>
  [407] getobjprop 69 ........................... <tImage.rect>
  [409] pusharglist 3 ........................... <me, tElement.getProperty(#image).rect, tImage.rect>
  [411] objcall 8 ............................... <me.centerRectInRect(tElement.getProperty(#image).rect, tImage.rect)>
  [413] setlocal 0 .............................. tOffset = me.centerRectInRect(tElement.getProperty(#image).rect, tImage.rect)
  [415] getlocal 1 .............................. <tOldImage>
  [417] getparam 1 .............................. <tImage>
  [419] getparam 1 .............................. <tImage>
  [421] getobjprop 69 ........................... <tImage.rect>
  [423] getparam 1 .............................. <tImage>
  [425] getobjprop 69 ........................... <tImage.rect>
  [427] getlocal 0 .............................. <tOffset>
  [429] getobjprop 82 ........................... <tOffset.locH>
  [431] getlocal 0 .............................. <tOffset>
  [433] getobjprop 83 ........................... <tOffset.locV>
  [435] getlocal 0 .............................. <tOffset>
  [437] getobjprop 82 ........................... <tOffset.locH>
  [439] getlocal 0 .............................. <tOffset>
  [441] getobjprop 83 ........................... <tOffset.locV>
  [443] pusharglist 4 ........................... <tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV>
  [445] extcall 69 .............................. <rect(tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV)>
  [447] add ..................................... <tImage.rect + rect(tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV)>
  [448] pusharglistnoret 4 ...................... <tOldImage, tImage, tImage.rect, tImage.rect + rect(tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV)>
  [450] objcall 77 .............................. tOldImage.copyPixels(tImage, tImage.rect, tImage.rect + rect(tOffset.locH, tOffset.locV, tOffset.locH, tOffset.locV))
  [452] getparam 2 .............................. <tElement>
  [454] getlocal 1 .............................. <tOldImage>
  [456] pusharglistnoret 2 ...................... <tElement, tOldImage>
  [458] objcall 118 ............................. tElement.feedImage(tOldImage)
  [460] ret
end

on setElementText me, tWndObj, tElemName, tText
  [  0] getparam 1 .............................. <tWndObj>
  [  2] pusharglist 1 ........................... <tWndObj>
  [  4] extcall 78 .............................. <voidp(tWndObj)>
  [  6] jmpifz [ 14] ............................ if voidp(tWndObj) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 37 .............................. return 0
  [ 14] getparam 1 .............................. <tWndObj>
  [ 16] getparam 2 .............................. <tElemName>
  [ 18] pusharglist 2 ........................... <tWndObj, tElemName>
  [ 20] objcall 253 ............................. <tWndObj.elementExists(tElemName)>
  [ 22] jmpifz [ 42] ............................ if tWndObj.elementExists(tElemName) then / else
  [ 25] getparam 1 .............................. <tWndObj>
  [ 27] getparam 2 .............................. <tElemName>
  [ 29] pusharglist 2 ........................... <tWndObj, tElemName>
  [ 31] objcall 178 ............................. <tWndObj.getElement(tElemName)>
  [ 33] getparam 3 .............................. <tText>
  [ 35] pusharglistnoret 2 ...................... <tWndObj.getElement(tElemName), tText>
  [ 37] objcall 188 ............................. tWndObj.getElement(tElemName).setText(tText)
  [ 39] jmp [ 42]
  [ 42] ret
end

on convertOfferListToDeallist me, tOffer
  [  0] getparam 1 .............................. <tOffer>
  [  2] pusharglist 1 ........................... <tOffer>
  [  4] extcall 57 .............................. <objectp(tOffer)>
  [  6] not ..................................... <not objectp(tOffer)>
  [  7] jmpifz [ 27] ............................ if not objectp(tOffer) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 24 ............................. <"Invalid input format">
  [ 14] pushsymb 526 ............................ <#convertOfferListToDeallist>
  [ 17] pushsymb 47 ............................. <#major>
  [ 19] pusharglist 4 ........................... <me, "Invalid input format", #convertOfferListToDeallist, #major>
  [ 21] extcall 46 .............................. <error(me, "Invalid input format", #convertOfferListToDeallist, #major)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Invalid input format", #convertOfferListToDeallist, #major)>
  [ 25] extcall 37 .............................. return error(me, "Invalid input format", #convertOfferListToDeallist, #major)
  [ 27] getparam 1 .............................. <tOffer>
  [ 29] pusharglist 1 ........................... <tOffer>
  [ 31] objcall 59 .............................. <tOffer.getCount()>
  [ 33] pushint8 1 .............................. <1>
  [ 35] lt ...................................... <tOffer.getCount() < 1>
  [ 36] jmpifz [ 52] ............................ if tOffer.getCount() < 1 then
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 30 ............................. <"Offer has no content">
  [ 43] pushsymb 526 ............................ <#convertOfferListToDeallist>
  [ 46] pushsymb 58 ............................. <#minor>
  [ 48] pusharglistnoret 4 ...................... <me, "Offer has no content", #convertOfferListToDeallist, #minor>
  [ 50] extcall 46 .............................. error(me, "Offer has no content", #convertOfferListToDeallist, #minor)
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 546 .......................... <me.pPersistentFurniData>
  [ 57] pusharglist 1 ........................... <me.pPersistentFurniData>
  [ 59] extcall 57 .............................. <objectp(me.pPersistentFurniData)>
  [ 61] not ..................................... <not objectp(me.pPersistentFurniData)>
  [ 62] jmpifz [ 85] ............................ if not objectp(me.pPersistentFurniData) then
  [ 65] getparam 0 .............................. <me>
  [ 67] pushcons 31 ............................. <"Persistent furnidata object is missing">
  [ 69] pushsymb 526 ............................ <#convertOfferListToDeallist>
  [ 72] pushsymb 47 ............................. <#major>
  [ 74] pusharglistnoret 4 ...................... <me, "Persistent furnidata object is missing", #convertOfferListToDeallist, #major>
  [ 76] extcall 46 .............................. error(me, "Persistent furnidata object is missing", #convertOfferListToDeallist, #major)
  [ 78] pusharglist 0 ........................... <[]>
  [ 80] pushlist ................................ <[]>
  [ 81] pusharglistnoret 1 ...................... <[]>
  [ 83] extcall 37 .............................. return []
  [ 85] pusharglist 0 ........................... <[]>
  [ 87] pushlist ................................ <[]>
  [ 88] setlocal 0 .............................. tDealList = []
  [ 90] pushint8 1 .............................. <1>
  [ 92] setlocal 1
  [ 94] getlocal 1
  [ 96] getparam 1 .............................. <tOffer>
  [ 98] pusharglist 1 ........................... <tOffer>
  [100] objcall 59 .............................. <tOffer.getCount()>
  [102] lteq
  [103] jmpifz [265] ............................ repeat with i = 1 to tOffer.getCount()
  [106] getparam 0 .............................. <me>
  [108] getchainedprop 546 ...................... <me.pPersistentFurniData>
  [111] getparam 1 .............................. <tOffer>
  [113] getlocal 1 .............................. <i>
  [115] pusharglist 2 ........................... <tOffer, i>
  [117] objcall 60 .............................. <tOffer.getContent(i)>
  [119] pusharglist 1 ........................... <tOffer.getContent(i)>
  [121] objcall 61 .............................. <tOffer.getContent(i).getType()>
  [123] getparam 1 .............................. <tOffer>
  [125] getlocal 1 .............................. <i>
  [127] pusharglist 2 ........................... <tOffer, i>
  [129] objcall 60 .............................. <tOffer.getContent(i)>
  [131] pusharglist 1 ........................... <tOffer.getContent(i)>
  [133] objcall 62 .............................. <tOffer.getContent(i).getClassId()>
  [135] pusharglist 3 ........................... <me.pPersistentFurniData, tOffer.getContent(i).getType(), tOffer.getContent(i).getClassId()>
  [137] objcall 487 ............................. <me.pPersistentFurniData.getProps(tOffer.getContent(i).getType(), tOffer.getContent(i).getClassId())>
  [140] setlocal 2 .............................. tFurniProps = me.pPersistentFurniData.getProps(tOffer.getContent(i).getType(), tOffer.getContent(i).getClassId())
  [142] getlocal 2 .............................. <tFurniProps>
  [144] pusharglist 1 ........................... <tFurniProps>
  [146] extcall 78 .............................. <voidp(tFurniProps)>
  [148] jmpifz [177] ............................ if voidp(tFurniProps) then
  [151] getlocal 0 .............................. <tDealList>
  [153] pushsymb 268 ............................ <#class>
  [156] pushcons 0 .............................. <EMPTY>
  [158] pushsymb 547 ............................ <#partColors>
  [161] pushcons 0 .............................. <EMPTY>
  [163] pushsymb 48 ............................. <#count>
  [165] pushzero ................................ <0>
  [166] pusharglist 6 ........................... <[#class: EMPTY, #partColors: EMPTY, #count: 0]>
  [168] pushproplist ............................ <[#class: EMPTY, #partColors: EMPTY, #count: 0]>
  [169] pusharglistnoret 2 ...................... <tDealList, [#class: EMPTY, #partColors: EMPTY, #count: 0]>
  [171] objcall 339 ............................. tDealList.add([#class: EMPTY, #partColors: EMPTY, #count: 0])
  [174] jmp [256] ............................... next repeat
  [177] getlocal 2 .............................. <tFurniProps>
  [179] pushsymb 268 ............................ <#class>
  [182] pusharglist 2 ........................... <tFurniProps, #class>
  [184] objcall 41 .............................. <tFurniProps[#class]>
  [186] setlocal 3 .............................. tClass = tFurniProps[#class]
  [188] getlocal 3 .............................. <tClass>
  [190] pushcons 32 ............................. <"poster">
  [192] eq ...................................... <tClass = "poster">
  [193] jmpifz [214] ............................ if tClass = "poster" then
  [196] getlocal 3 .............................. <tClass>
  [198] getparam 1 .............................. <tOffer>
  [200] getlocal 1 .............................. <i>
  [202] pusharglist 2 ........................... <tOffer, i>
  [204] objcall 60 .............................. <tOffer.getContent(i)>
  [206] pusharglist 1 ........................... <tOffer.getContent(i)>
  [208] objcall 548 ............................. <tOffer.getContent(i).getExtraParam()>
  [211] joinpadstr .............................. <tClass && tOffer.getContent(i).getExtraParam()>
  [212] setlocal 3 .............................. tClass = tClass && tOffer.getContent(i).getExtraParam()
  [214] getlocal 0 .............................. <tDealList>
  [216] pushsymb 268 ............................ <#class>
  [219] getlocal 3 .............................. <tClass>
  [221] pushsymb 547 ............................ <#partColors>
  [224] getlocal 2 .............................. <tFurniProps>
  [226] pushsymb 547 ............................ <#partColors>
  [229] pusharglist 2 ........................... <tFurniProps, #partColors>
  [231] objcall 41 .............................. <tFurniProps[#partColors]>
  [233] pushsymb 48 ............................. <#count>
  [235] getparam 1 .............................. <tOffer>
  [237] getlocal 1 .............................. <i>
  [239] pusharglist 2 ........................... <tOffer, i>
  [241] objcall 60 .............................. <tOffer.getContent(i)>
  [243] pusharglist 1 ........................... <tOffer.getContent(i)>
  [245] objcall 549 ............................. <tOffer.getContent(i).getProductCount()>
  [248] pusharglist 6 ........................... <[#class: tClass, #partColors: tFurniProps[#partColors], #count: tOffer.getContent(i).getProductCount()]>
  [250] pushproplist ............................ <[#class: tClass, #partColors: tFurniProps[#partColors], #count: tOffer.getContent(i).getProductCount()]>
  [251] pusharglistnoret 2 ...................... <tDealList, [#class: tClass, #partColors: tFurniProps[#partColors], #count: tOffer.getContent(i).getProductCount()]>
  [253] objcall 339 ............................. tDealList.add([#class: tClass, #partColors: tFurniProps[#partColors], #count: tOffer.getContent(i).getProductCount()])
  [256] pushint8 1
  [258] getlocal 1
  [260] add
  [261] setlocal 1
  [263] endrepeat [ 94]
  [265] getlocal 0 .............................. <tDealList>
  [267] pusharglistnoret 1 ...................... <tDealList>
  [269] extcall 37 .............................. return tDealList
  [271] ret
end

on mergeWindow me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  4] pusharglist 2 ........................... <me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  6] extcall 46 .............................. <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [  8] pusharglistnoret 1 ...................... <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [ 10] extcall 37 .............................. return error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")
  [ 12] ret
end

on downloadCompleted me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  4] pusharglist 2 ........................... <me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  6] extcall 46 .............................. <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [  8] pusharglistnoret 1 ...................... <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [ 10] extcall 37 .............................. return error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")
  [ 12] ret
end

on unmergeWindow me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  4] pusharglist 2 ........................... <me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  6] extcall 46 .............................. <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [  8] pusharglistnoret 1 ...................... <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [ 10] extcall 37 .............................. return error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")
  [ 12] ret
end

on renderPage me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  4] pusharglist 2 ........................... <me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  6] extcall 46 .............................. <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [  8] pusharglistnoret 1 ...................... <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [ 10] extcall 37 .............................. return error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")
  [ 12] ret
end

on getSelectedProduct me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  4] pusharglist 2 ........................... <me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  6] extcall 46 .............................. <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [  8] pusharglistnoret 1 ...................... <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [ 10] extcall 37 .............................. return error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")
  [ 12] ret
end

on handleClick me, tEvent, tSprID, tProp
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  4] pusharglist 2 ........................... <me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!">
  [  6] extcall 46 .............................. <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [  8] pusharglistnoret 1 ...................... <error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")>
  [ 10] extcall 37 .............................. return error(me, "Calling virtual function from Catalogpage Base Class, you shouldn't be doing this!")
  [ 12] ret
end
