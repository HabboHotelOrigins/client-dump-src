property pWallPatterns, pWallPattern, pWallModel, pWallThumbSpr, pWallPreviewIdList, pFloorPatterns, pFloorPattern, pFloorModel, pFloorThumbSpr, pFloorPreviewIdList, pLandscapePatterns, pLandscapeGradients, pLandscapeProducts, pLandscapePattern, pLandscapeGradient, pLandscapePreviewIdList, pLandscapeElement, pLandscapeBlockedCombos, pWallProps, pFloorProps, pLandscapeProps

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 900 ............................. pWallPatterns = [:]
  [  6] pushzero ................................ <0>
  [  7] setprop 901 ............................. pWallPattern = 0
  [ 10] pushzero ................................ <0>
  [ 11] setprop 902 ............................. pWallModel = 0
  [ 14] pushcons 0 .............................. <"catalog_floorpattern_patterns">
  [ 16] pushzero ................................ <0>
  [ 17] getfield ................................ <field("catalog_floorpattern_patterns")>
  [ 18] setprop 903 ............................. pFloorPatterns = field("catalog_floorpattern_patterns")
  [ 21] pushzero ................................ <0>
  [ 22] setprop 904 ............................. pFloorPattern = 0
  [ 25] pushzero ................................ <0>
  [ 26] setprop 905 ............................. pFloorModel = 0
  [ 29] pushint8 1 .............................. <1>
  [ 31] setprop 906 ............................. pLandscapePattern = 1
  [ 34] pushint8 1 .............................. <1>
  [ 36] setprop 907 ............................. pLandscapeGradient = 1
  [ 39] pusharglist 0 ........................... <[:]>
  [ 41] pushproplist ............................ <[:]>
  [ 42] setprop 908 ............................. pWallProps = [:]
  [ 45] pusharglist 0 ........................... <[:]>
  [ 47] pushproplist ............................ <[:]>
  [ 48] setprop 909 ............................. pFloorProps = [:]
  [ 51] pusharglist 0 ........................... <[:]>
  [ 53] pushproplist ............................ <[:]>
  [ 54] setprop 910 ............................. pLandscapeProps = [:]
  [ 57] pusharglist 0 ........................... <[:]>
  [ 59] pushproplist ............................ <[:]>
  [ 60] setprop 911 ............................. pLandscapeProducts = [:]
  [ 63] pusharglist 0 ........................... <[]>
  [ 65] pushlist ................................ <[]>
  [ 66] setprop 912 ............................. pFloorPreviewIdList = []
  [ 69] getprop 912 ............................. <pFloorPreviewIdList>
  [ 72] pushcons 1 .............................. <"catalog_floor_preview_example">
  [ 74] pusharglistnoret 2 ...................... <pFloorPreviewIdList, "catalog_floor_preview_example">
  [ 76] objcall 339 ............................. pFloorPreviewIdList.add("catalog_floor_preview_example")
  [ 79] pusharglist 0 ........................... <[]>
  [ 81] pushlist ................................ <[]>
  [ 82] setprop 913 ............................. pWallPreviewIdList = []
  [ 85] getprop 913 ............................. <pWallPreviewIdList>
  [ 88] pushcons 2 .............................. <"catalog_wall_preview_a_left">
  [ 90] pusharglistnoret 2 ...................... <pWallPreviewIdList, "catalog_wall_preview_a_left">
  [ 92] objcall 339 ............................. pWallPreviewIdList.add("catalog_wall_preview_a_left")
  [ 95] getprop 913 ............................. <pWallPreviewIdList>
  [ 98] pushcons 3 .............................. <"catalog_wall_preview_b_right">
  [100] pusharglistnoret 2 ...................... <pWallPreviewIdList, "catalog_wall_preview_b_right">
  [102] objcall 339 ............................. pWallPreviewIdList.add("catalog_wall_preview_b_right")
  [105] pushcons 4 .............................. <"catalog_space_preview_window">
  [107] setprop 914 ............................. pLandscapeElement = "catalog_space_preview_window"
  [110] pusharglist 0 ........................... <[]>
  [112] pushlist ................................ <[]>
  [113] setprop 915 ............................. pLandscapePreviewIdList = []
  [116] getprop 915 ............................. <pLandscapePreviewIdList>
  [119] pushcons 5 .............................. <"catalog_spaces_window">
  [121] pusharglistnoret 2 ...................... <pLandscapePreviewIdList, "catalog_spaces_window">
  [123] objcall 339 ............................. pLandscapePreviewIdList.add("catalog_spaces_window")
  [126] getprop 915 ............................. <pLandscapePreviewIdList>
  [129] pushcons 6 .............................. <"catalog_spaces_window_mask">
  [131] pusharglistnoret 2 ...................... <pLandscapePreviewIdList, "catalog_spaces_window_mask">
  [133] objcall 339 ............................. pLandscapePreviewIdList.add("catalog_spaces_window_mask")
  [136] getprop 915 ............................. <pLandscapePreviewIdList>
  [139] pushcons 7 .............................. <"catalog_landscape_preview_window_alpha">
  [141] pusharglistnoret 2 ...................... <pLandscapePreviewIdList, "catalog_landscape_preview_window_alpha">
  [143] objcall 339 ............................. pLandscapePreviewIdList.add("catalog_landscape_preview_window_alpha")
  [146] pushcons 8 .............................. <"catalog_landscape_patterns">
  [148] pushzero ................................ <0>
  [149] getfield ................................ <field("catalog_landscape_patterns")>
  [150] setlocal 0 .............................. tLandscapePatterns = field("catalog_landscape_patterns")
  [152] pushcons 9 .............................. <"catalog_landscape_gradients">
  [154] pushzero ................................ <0>
  [155] getfield ................................ <field("catalog_landscape_gradients")>
  [156] setlocal 1 .............................. tLandscapeGradients = field("catalog_landscape_gradients")
  [158] pusharglist 0 ........................... <[]>
  [160] pushlist ................................ <[]>
  [161] setprop 916 ............................. pLandscapePatterns = []
  [164] pusharglist 0 ........................... <[]>
  [166] pushlist ................................ <[]>
  [167] setprop 917 ............................. pLandscapeGradients = []
  [170] pushint8 1 .............................. <1>
  [172] setlocal 2
  [174] getlocal 2
  [176] getlocal 0 .............................. <tLandscapePatterns>
  [178] pushsymb 506 ............................ <#line>
  [181] pusharglist 2 ........................... <tLandscapePatterns, #line>
  [183] objcall 48 .............................. <tLandscapePatterns.line.count>
  [185] lteq
  [186] jmpifz [217] ............................ repeat with i = 1 to tLandscapePatterns.line.count
  [189] getprop 916 ............................. <pLandscapePatterns>
  [192] getlocal 0 .............................. <tLandscapePatterns>
  [194] pushsymb 506 ............................ <#line>
  [197] getlocal 2 .............................. <i>
  [199] pusharglist 3 ........................... <tLandscapePatterns, #line, i>
  [201] objcall 123 ............................. <tLandscapePatterns.line[i]>
  [203] pusharglistnoret 2 ...................... <pLandscapePatterns, tLandscapePatterns.line[i]>
  [205] objcall 339 ............................. pLandscapePatterns.add(tLandscapePatterns.line[i])
  [208] pushint8 1
  [210] getlocal 2
  [212] add
  [213] setlocal 2
  [215] endrepeat [174]
  [217] pushint8 1 .............................. <1>
  [219] setlocal 2
  [221] getlocal 2
  [223] getlocal 1 .............................. <tLandscapeGradients>
  [225] pushsymb 506 ............................ <#line>
  [228] pusharglist 2 ........................... <tLandscapeGradients, #line>
  [230] objcall 48 .............................. <tLandscapeGradients.line.count>
  [232] lteq
  [233] jmpifz [264] ............................ repeat with i = 1 to tLandscapeGradients.line.count
  [236] getprop 917 ............................. <pLandscapeGradients>
  [239] getlocal 1 .............................. <tLandscapeGradients>
  [241] pushsymb 506 ............................ <#line>
  [244] getlocal 2 .............................. <i>
  [246] pusharglist 3 ........................... <tLandscapeGradients, #line, i>
  [248] objcall 123 ............................. <tLandscapeGradients.line[i]>
  [250] pusharglistnoret 2 ...................... <pLandscapeGradients, tLandscapeGradients.line[i]>
  [252] objcall 339 ............................. pLandscapeGradients.add(tLandscapeGradients.line[i])
  [255] pushint8 1
  [257] getlocal 2
  [259] add
  [260] setlocal 2
  [262] endrepeat [221]
  [264] pusharglist 0 ........................... <[]>
  [266] pushlist ................................ <[]>
  [267] setprop 918 ............................. pLandscapeBlockedCombos = []
  [270] pushcons 10 ............................. <"catalog_landscape_blocked_combinations">
  [272] pusharglist 1 ........................... <"catalog_landscape_blocked_combinations">
  [274] extcall 63 .............................. <memberExists("catalog_landscape_blocked_combinations")>
  [276] jmpifz [381] ............................ if memberExists("catalog_landscape_blocked_combinations") then
  [279] getmovieprop 641 ........................ <the itemDelimiter>
  [282] setlocal 3 .............................. tDelim = the itemDelimiter
  [284] pushcons 11 ............................. <",">
  [286] setmovieprop 641 ........................ the itemDelimiter = ","
  [289] pushcons 10 ............................. <"catalog_landscape_blocked_combinations">
  [291] pushzero ................................ <0>
  [292] getfield ................................ <field("catalog_landscape_blocked_combinations")>
  [293] setlocal 4 .............................. tBlockList = field("catalog_landscape_blocked_combinations")
  [295] pushint8 1 .............................. <1>
  [297] setlocal 2
  [299] getlocal 2
  [301] getlocal 4 .............................. <tBlockList>
  [303] pushsymb 506 ............................ <#line>
  [306] pusharglist 2 ........................... <tBlockList, #line>
  [308] objcall 48 .............................. <tBlockList.line.count>
  [310] lteq
  [311] jmpifz [376] ............................ repeat with i = 1 to tBlockList.line.count
  [314] getprop 918 ............................. <pLandscapeBlockedCombos>
  [317] getlocal 4 .............................. <tBlockList>
  [319] pushsymb 506 ............................ <#line>
  [322] getlocal 2 .............................. <i>
  [324] pusharglist 3 ........................... <tBlockList, #line, i>
  [326] objcall 566 ............................. <tBlockList.line[i]>
  [329] pushsymb 352 ............................ <#item>
  [332] pushint8 1 .............................. <1>
  [334] pusharglist 3 ........................... <tBlockList.line[i], #item, 1>
  [336] objcall 123 ............................. <tBlockList.line[i].item[1]>
  [338] getlocal 4 .............................. <tBlockList>
  [340] pushsymb 506 ............................ <#line>
  [343] getlocal 2 .............................. <i>
  [345] pusharglist 3 ........................... <tBlockList, #line, i>
  [347] objcall 566 ............................. <tBlockList.line[i]>
  [350] pushsymb 352 ............................ <#item>
  [353] pushint8 2 .............................. <2>
  [355] pusharglist 3 ........................... <tBlockList.line[i], #item, 2>
  [357] objcall 123 ............................. <tBlockList.line[i].item[2]>
  [359] pusharglist 2 ........................... <[tBlockList.line[i].item[1], tBlockList.line[i].item[2]]>
  [361] pushlist ................................ <[tBlockList.line[i].item[1], tBlockList.line[i].item[2]]>
  [362] pusharglistnoret 2 ...................... <pLandscapeBlockedCombos, [tBlockList.line[i].item[1], tBlockList.line[i].item[2]]>
  [364] objcall 339 ............................. pLandscapeBlockedCombos.add([tBlockList.line[i].item[1], tBlockList.line[i].item[2]])
  [367] pushint8 1
  [369] getlocal 2
  [371] add
  [372] setlocal 2
  [374] endrepeat [299]
  [376] getlocal 3 .............................. <tDelim>
  [378] setmovieprop 641 ........................ the itemDelimiter = tDelim
  [381] pushint8 1 .............................. <1>
  [383] pusharglistnoret 1 ...................... <1>
  [385] extcall 37 .............................. return 1
  [387] ret
end

on define me, tPageProps
  [  0] getparam 1 .............................. <tPageProps>
  [  2] getobjprop 43 ........................... <tPageProps.ilk>
  [  4] pushsymb 45 ............................. <#propList>
  [  6] nteq .................................... <tPageProps.ilk <> #propList>
  [  7] jmpifz [ 26] ............................ if tPageProps.ilk <> #propList then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 12 ............................. <"Incorrect Catalogue page data">
  [ 14] pushsymb 237 ............................ <#define>
  [ 16] pushsymb 47 ............................. <#major>
  [ 18] pusharglist 4 ........................... <me, "Incorrect Catalogue page data", #define, #major>
  [ 20] extcall 46 .............................. <error(me, "Incorrect Catalogue page data", #define, #major)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Incorrect Catalogue page data", #define, #major)>
  [ 24] extcall 37 .............................. return error(me, "Incorrect Catalogue page data", #define, #major)
  [ 26] pushcons 13 ............................. <"catalog_wallpattern_patterns">
  [ 28] pushzero ................................ <0>
  [ 29] getfield ................................ <field("catalog_wallpattern_patterns")>
  [ 30] setlocal 0 .............................. tWallPatterns = field("catalog_wallpattern_patterns")
  [ 32] pushsymb 559 ............................ <#catalogue>
  [ 35] pusharglist 1 ........................... <#catalogue>
  [ 37] extcall 471 ............................. <getThread(#catalogue)>
  [ 40] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 42] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 44] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 46] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 48] setlocal 1 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 50] getlocal 1 .............................. <tWndObj>
  [ 52] not ..................................... <not tWndObj>
  [ 53] jmpifz [ 72] ............................ if not tWndObj then
  [ 56] getparam 0 .............................. <me>
  [ 58] pushcons 14 ............................. <"Couldn't access catalogue window!">
  [ 60] pushsymb 237 ............................ <#define>
  [ 62] pushsymb 47 ............................. <#major>
  [ 64] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #define, #major>
  [ 66] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #define, #major)>
  [ 68] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #define, #major)>
  [ 70] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #define, #major)
  [ 72] getparam 1 .............................. <tPageProps>
  [ 74] pushcons 15 ............................. <"productList">
  [ 76] pusharglist 2 ........................... <tPageProps, "productList">
  [ 78] objcall 41 .............................. <tPageProps["productList"]>
  [ 80] setlocal 2 .............................. tProdList = tPageProps["productList"]
  [ 82] getlocal 2 .............................. <tProdList>
  [ 84] pusharglist 1 ........................... <tProdList>
  [ 86] extcall 78 .............................. <voidp(tProdList)>
  [ 88] not ..................................... <not voidp(tProdList)>
  [ 89] jmpifz [759] ............................ if not voidp(tProdList) then
  [ 92] getlocal 2 .............................. <tProdList>
  [ 94] getobjprop 48 ........................... <tProdList.count>
  [ 96] pushint8 2 .............................. <2>
  [ 98] lt ...................................... <tProdList.count < 2>
  [ 99] jmpifz [188] ............................ if tProdList.count < 2 then
  [102] getlocal 1 .............................. <tWndObj>
  [104] pushcons 16 ............................. <"ctlg_buy_wall">
  [106] pusharglist 2 ........................... <tWndObj, "ctlg_buy_wall">
  [108] objcall 253 ............................. <tWndObj.elementExists("ctlg_buy_wall")>
  [110] jmpifz [129] ............................ if tWndObj.elementExists("ctlg_buy_wall") then
  [113] getlocal 1 .............................. <tWndObj>
  [115] pushcons 16 ............................. <"ctlg_buy_wall">
  [117] pusharglist 2 ........................... <tWndObj, "ctlg_buy_wall">
  [119] objcall 178 ............................. <tWndObj.getElement("ctlg_buy_wall")>
  [121] pushsymb 624 ............................ <#visible>
  [124] pushzero ................................ <0>
  [125] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_wall"), #visible, 0>
  [127] objcall 201 ............................. tWndObj.getElement("ctlg_buy_wall").setProperty(#visible, 0)
  [129] getlocal 1 .............................. <tWndObj>
  [131] pushcons 17 ............................. <"ctlg_buy_floor">
  [133] pusharglist 2 ........................... <tWndObj, "ctlg_buy_floor">
  [135] objcall 253 ............................. <tWndObj.elementExists("ctlg_buy_floor")>
  [137] jmpifz [156] ............................ if tWndObj.elementExists("ctlg_buy_floor") then
  [140] getlocal 1 .............................. <tWndObj>
  [142] pushcons 17 ............................. <"ctlg_buy_floor">
  [144] pusharglist 2 ........................... <tWndObj, "ctlg_buy_floor">
  [146] objcall 178 ............................. <tWndObj.getElement("ctlg_buy_floor")>
  [148] pushsymb 624 ............................ <#visible>
  [151] pushzero ................................ <0>
  [152] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_floor"), #visible, 0>
  [154] objcall 201 ............................. tWndObj.getElement("ctlg_buy_floor").setProperty(#visible, 0)
  [156] getlocal 1 .............................. <tWndObj>
  [158] pushcons 18 ............................. <"ctlg_buy_landscape">
  [160] pusharglist 2 ........................... <tWndObj, "ctlg_buy_landscape">
  [162] objcall 253 ............................. <tWndObj.elementExists("ctlg_buy_landscape")>
  [164] jmpifz [183] ............................ if tWndObj.elementExists("ctlg_buy_landscape") then
  [167] getlocal 1 .............................. <tWndObj>
  [169] pushcons 18 ............................. <"ctlg_buy_landscape">
  [171] pusharglist 2 ........................... <tWndObj, "ctlg_buy_landscape">
  [173] objcall 178 ............................. <tWndObj.getElement("ctlg_buy_landscape")>
  [175] pushsymb 624 ............................ <#visible>
  [178] pushzero ................................ <0>
  [179] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_landscape"), #visible, 0>
  [181] objcall 201 ............................. tWndObj.getElement("ctlg_buy_landscape").setProperty(#visible, 0)
  [183] pushzero ................................ <0>
  [184] pusharglistnoret 1 ...................... <0>
  [186] extcall 37 .............................. return 0
  [188] pushint8 1 .............................. <1>
  [190] setlocal 3
  [192] getlocal 3
  [194] getlocal 2 .............................. <tProdList>
  [196] getobjprop 48 ........................... <tProdList.count>
  [198] lteq
  [199] jmpifz [759] ............................ repeat with tItemNo = 1 to tProdList.count
  [202] getlocal 2 .............................. <tProdList>
  [204] getlocal 3 .............................. <tItemNo>
  [206] pusharglist 2 ........................... <tProdList, tItemNo>
  [208] objcall 41 .............................. <tProdList[tItemNo]>
  [210] setlocal 4 .............................. tProp = tProdList[tItemNo]
  [212] getlocal 4 .............................. <tProp>
  [214] pushcons 19 ............................. <"class">
  [216] pusharglist 2 ........................... <tProp, "class">
  [218] objcall 41 .............................. <tProp["class"]>
  [220] setlocal 5 .............................. tClass = tProp["class"]
  [222] getlocal 5 .............................. <tClass>
  [224] pusharglist 0 ........................... <>
  [226] extcall 55 .............................. <VOID>
  [228] eq ...................................... <tClass = VOID>
  [229] jmpifz [235] ............................ if tClass = VOID then
  [232] jmp [749] ............................... next repeat
  [235] getlocal 5 .............................. <tClass>
  [237] pushsymb 423 ............................ <#word>
  [240] pushint8 1 .............................. <1>
  [242] pusharglist 3 ........................... <tClass, #word, 1>
  [244] objcall 123 ............................. <tClass.word[1]>
  [246] setlocal 6 .............................. tClassPrefix = tClass.word[1]
  [248] getlocal 5 .............................. <tClass>
  [250] pushsymb 423 ............................ <#word>
  [253] pushint8 2 .............................. <2>
  [255] pusharglist 3 ........................... <tClass, #word, 2>
  [257] objcall 123 ............................. <tClass.word[2]>
  [259] setlocal 7 .............................. tClassPostfix = tClass.word[2]
  [261] getlocal 6 .............................. <tClassPrefix>
  [263] pushcons 20 ............................. <"wallpaper">
  [265] eq ...................................... <tClassPrefix = "wallpaper">
  [266] getlocal 7 .............................. <tClassPostfix>
  [268] pushcons 21 ............................. <EMPTY>
  [270] nteq .................................... <tClassPostfix <> EMPTY>
  [271] and ..................................... <(tClassPrefix = "wallpaper") and (tClassPostfix <> EMPTY)>
  [272] jmpifz [628] ............................ if (tClassPrefix = "wallpaper") and (tClassPostfix <> EMPTY) then
  [275] getlocal 7 .............................. <tClassPostfix>
  [277] setlocal 8 .............................. tPatternNo = tClassPostfix
  [279] getlocal 0 .............................. <tWallPatterns>
  [281] pushsymb 506 ............................ <#line>
  [284] getlocal 8 .............................. <tPatternNo>
  [286] pusharglist 1 ........................... <tPatternNo>
  [288] extcall 382 ............................. <integer(tPatternNo)>
  [291] pusharglist 3 ........................... <tWallPatterns, #line, integer(tPatternNo)>
  [293] objcall 123 ............................. <tWallPatterns.line[integer(tPatternNo)]>
  [295] setlocal 9 .............................. tPatternMemName = tWallPatterns.line[integer(tPatternNo)]
  [297] getlocal 9 .............................. <tPatternMemName>
  [299] pusharglist 1 ........................... <tPatternMemName>
  [301] extcall 255 ............................. <member(tPatternMemName)>
  [303] getobjprop 505 .......................... <member(tPatternMemName).text>
  [306] setlocal 10 ............................. tModelsRawData = member(tPatternMemName).text
  [308] getprop 900 ............................. <pWallPatterns>
  [311] getlocal 8 .............................. <tPatternNo>
  [313] pusharglist 2 ........................... <pWallPatterns, tPatternNo>
  [315] objcall 41 .............................. <pWallPatterns[tPatternNo]>
  [317] pusharglist 1 ........................... <pWallPatterns[tPatternNo]>
  [319] extcall 43 .............................. <ilk(pWallPatterns[tPatternNo])>
  [321] pushsymb 45 ............................. <#propList>
  [323] nteq .................................... <ilk(pWallPatterns[tPatternNo]) <> #propList>
  [324] jmpifz [339] ............................ if ilk(pWallPatterns[tPatternNo]) <> #propList then
  [327] getprop 900 ............................. <pWallPatterns>
  [330] getlocal 8 .............................. <tPatternNo>
  [332] pusharglist 0 ........................... <[:]>
  [334] pushproplist ............................ <[:]>
  [335] pusharglistnoret 3 ...................... <pWallPatterns, tPatternNo, [:]>
  [337] objcall 254 ............................. pWallPatterns[tPatternNo] = [:]
  [339] getprop 900 ............................. <pWallPatterns>
  [342] getlocal 8 .............................. <tPatternNo>
  [344] pusharglist 2 ........................... <pWallPatterns, tPatternNo>
  [346] objcall 41 .............................. <pWallPatterns[tPatternNo]>
  [348] pusharglist 1 ........................... <pWallPatterns[tPatternNo]>
  [350] objcall 107 ............................. <pWallPatterns[tPatternNo].duplicate()>
  [352] setlocal 11 ............................. tmodellist = pWallPatterns[tPatternNo].duplicate()
  [354] getmovieprop 641 ........................ <the itemDelimiter>
  [357] setlocal 12 ............................. tDelim = the itemDelimiter
  [359] pushcons 11 ............................. <",">
  [361] setmovieprop 641 ........................ the itemDelimiter = ","
  [364] pushint8 1 .............................. <1>
  [366] setlocal 13
  [368] getlocal 13
  [370] getlocal 10 ............................. <tModelsRawData>
  [372] pushsymb 506 ............................ <#line>
  [375] pusharglist 2 ........................... <tModelsRawData, #line>
  [377] objcall 48 .............................. <tModelsRawData.line.count>
  [379] lteq
  [380] jmpifz [609] ............................ repeat with tModelNo = 1 to tModelsRawData.line.count
  [383] getlocal 10 ............................. <tModelsRawData>
  [385] pushsymb 506 ............................ <#line>
  [388] getlocal 13 ............................. <tModelNo>
  [390] pusharglist 3 ........................... <tModelsRawData, #line, tModelNo>
  [392] objcall 123 ............................. <tModelsRawData.line[tModelNo]>
  [394] setlocal 14 ............................. tModelDataLn = tModelsRawData.line[tModelNo]
  [396] getlocal 14 ............................. <tModelDataLn>
  [398] pushsymb 352 ............................ <#item>
  [401] pusharglist 2 ........................... <tModelDataLn, #item>
  [403] objcall 48 .............................. <tModelDataLn.item.count>
  [405] pushint8 5 .............................. <5>
  [407] lt ...................................... <tModelDataLn.item.count < 5>
  [408] jmpifz [414] ............................ if tModelDataLn.item.count < 5 then
  [411] jmp [609] ............................... exit repeat
  [414] getlocal 14 ............................. <tModelDataLn>
  [416] pushsymb 352 ............................ <#item>
  [419] pushint8 1 .............................. <1>
  [421] pusharglist 3 ........................... <tModelDataLn, #item, 1>
  [423] objcall 123 ............................. <tModelDataLn.item[1]>
  [425] setlocal 15 ............................. tPatternID = tModelDataLn.item[1]
  [427] getlocal 14 ............................. <tModelDataLn>
  [429] pushsymb 352 ............................ <#item>
  [432] pushint8 2 .............................. <2>
  [434] pusharglist 3 ........................... <tModelDataLn, #item, 2>
  [436] objcall 123 ............................. <tModelDataLn.item[2]>
  [438] setlocal 16 ............................. tPalette = tModelDataLn.item[2]
  [440] getlocal 14 ............................. <tModelDataLn>
  [442] pushsymb 352 ............................ <#item>
  [445] pushint8 3 .............................. <3>
  [447] pusharglist 3 ........................... <tModelDataLn, #item, 3>
  [449] objcall 123 ............................. <tModelDataLn.item[3]>
  [451] pusharglist 1 ........................... <tModelDataLn.item[3]>
  [453] extcall 382 ............................. <integer(tModelDataLn.item[3])>
  [456] setlocal 17 ............................. tRed = integer(tModelDataLn.item[3])
  [458] getlocal 14 ............................. <tModelDataLn>
  [460] pushsymb 352 ............................ <#item>
  [463] pushint8 4 .............................. <4>
  [465] pusharglist 3 ........................... <tModelDataLn, #item, 4>
  [467] objcall 123 ............................. <tModelDataLn.item[4]>
  [469] pusharglist 1 ........................... <tModelDataLn.item[4]>
  [471] extcall 382 ............................. <integer(tModelDataLn.item[4])>
  [474] setlocal 18 ............................. tGreen = integer(tModelDataLn.item[4])
  [476] getlocal 14 ............................. <tModelDataLn>
  [478] pushsymb 352 ............................ <#item>
  [481] pushint8 5 .............................. <5>
  [483] pusharglist 3 ........................... <tModelDataLn, #item, 5>
  [485] objcall 123 ............................. <tModelDataLn.item[5]>
  [487] pusharglist 1 ........................... <tModelDataLn.item[5]>
  [489] extcall 382 ............................. <integer(tModelDataLn.item[5])>
  [492] setlocal 19 ............................. tBlue = integer(tModelDataLn.item[5])
  [494] getlocal 17 ............................. <tRed>
  [496] getlocal 18 ............................. <tGreen>
  [498] getlocal 19 ............................. <tBlue>
  [500] pusharglist 3 ........................... <tRed, tGreen, tBlue>
  [502] extcall 27 .............................. <rgb(tRed, tGreen, tBlue)>
  [504] setlocal 20 ............................. tRGB = rgb(tRed, tGreen, tBlue)
  [506] getlocal 13 ............................. <tModelNo>
  [508] setlocal 21 ............................. tTempModelNo = tModelNo
  [510] getlocal 13 ............................. <tModelNo>
  [512] pushint8 10 ............................. <10>
  [514] lt ...................................... <tModelNo < 10>
  [515] jmpifz [525] ............................ if tModelNo < 10 then
  [518] pushcons 22 ............................. <"0">
  [520] getlocal 13 ............................. <tModelNo>
  [522] joinstr ................................. <"0" & tModelNo>
  [523] setlocal 21 ............................. tTempModelNo = "0" & tModelNo
  [525] getlocal 8 .............................. <tPatternNo>
  [527] pushcons 21 ............................. <EMPTY>
  [529] joinstr ................................. <tPatternNo & EMPTY>
  [530] getlocal 21 ............................. <tTempModelNo>
  [532] joinstr ................................. <tPatternNo & EMPTY & tTempModelNo>
  [533] setlocal 22 ............................. tPaperID = tPatternNo & EMPTY & tTempModelNo
  [535] getlocal 4 .............................. <tProp>
  [537] pusharglist 1 ........................... <tProp>
  [539] objcall 107 ............................. <tProp.duplicate()>
  [541] setlocal 23 ............................. tModelProps = tProp.duplicate()
  [543] getlocal 23 ............................. <tModelProps>
  [545] pushcons 23 ............................. <"extra_parm">
  [547] getlocal 22 ............................. <tPaperID>
  [549] pusharglistnoret 3 ...................... <tModelProps, "extra_parm", tPaperID>
  [551] objcall 254 ............................. tModelProps["extra_parm"] = tPaperID
  [553] getlocal 23 ............................. <tModelProps>
  [555] pushsymb 922 ............................ <#patternID>
  [558] getlocal 15 ............................. <tPatternID>
  [560] pusharglistnoret 3 ...................... <tModelProps, #patternID, tPatternID>
  [562] objcall 254 ............................. tModelProps[#patternID] = tPatternID
  [564] getlocal 23 ............................. <tModelProps>
  [566] pushsymb 27 ............................. <#rgb>
  [568] getlocal 20 ............................. <tRGB>
  [570] pusharglistnoret 3 ...................... <tModelProps, #rgb, tRGB>
  [572] objcall 254 ............................. tModelProps[#rgb] = tRGB
  [574] getlocal 23 ............................. <tModelProps>
  [576] pushsymb 923 ............................ <#palette>
  [579] getlocal 16 ............................. <tPalette>
  [581] pusharglistnoret 3 ...................... <tModelProps, #palette, tPalette>
  [583] objcall 254 ............................. tModelProps[#palette] = tPalette
  [585] getlocal 11 ............................. <tmodellist>
  [587] getlocal 13 ............................. <tModelNo>
  [589] pusharglist 1 ........................... <tModelNo>
  [591] extcall 291 ............................. <string(tModelNo)>
  [594] getlocal 23 ............................. <tModelProps>
  [596] pusharglistnoret 3 ...................... <tmodellist, string(tModelNo), tModelProps>
  [598] objcall 254 ............................. tmodellist[string(tModelNo)] = tModelProps
  [600] pushint8 1
  [602] getlocal 13
  [604] add
  [605] setlocal 13
  [607] endrepeat [368]
  [609] getprop 900 ............................. <pWallPatterns>
  [612] getlocal 8 .............................. <tPatternNo>
  [614] getlocal 11 ............................. <tmodellist>
  [616] pusharglistnoret 3 ...................... <pWallPatterns, tPatternNo, tmodellist>
  [618] objcall 254 ............................. pWallPatterns[tPatternNo] = tmodellist
  [620] getlocal 12 ............................. <tDelim>
  [622] setmovieprop 641 ........................ the itemDelimiter = tDelim
  [625] jmp [749] ............................... next repeat
  [628] getlocal 5 .............................. <tClass>
  [630] pushcons 24 ............................. <"floor">
  [632] eq ...................................... <tClass = "floor">
  [633] jmpifz [648] ............................ if tClass = "floor" then
  [636] getlocal 4 .............................. <tProp>
  [638] pusharglist 1 ........................... <tProp>
  [640] objcall 107 ............................. <tProp.duplicate()>
  [642] setprop 909 ............................. pFloorProps = tProp.duplicate()
  [645] jmp [749] ............................... next repeat
  [648] getlocal 6 .............................. <tClassPrefix>
  [650] pushcons 25 ............................. <"landscape">
  [652] eq ...................................... <tClassPrefix = "landscape">
  [653] jmpifz [749] ............................ if tClassPrefix = "landscape" then
  [656] getlocal 7 .............................. <tClassPostfix>
  [658] setlocal 8 .............................. tPatternNo = tClassPostfix
  [660] getlocal 8 .............................. <tPatternNo>
  [662] getprop 916 ............................. <pLandscapePatterns>
  [665] getobjprop 48 ........................... <pLandscapePatterns.count>
  [667] lteq .................................... <tPatternNo <= pLandscapePatterns.count>
  [668] jmpifz [749] ............................ if tPatternNo <= pLandscapePatterns.count then
  [671] getlocal 8 .............................. <tPatternNo>
  [673] pushzero ................................ <0>
  [674] eq ...................................... <tPatternNo = 0>
  [675] jmpifz [685] ............................ if tPatternNo = 0 then / else
  [678] pushcons 21 ............................. <EMPTY>
  [680] setlocal 9 .............................. tPatternMemName = EMPTY
  [682] jmp [701]
  [685] getprop 916 ............................. <pLandscapePatterns>
  [688] getlocal 8 .............................. <tPatternNo>
  [690] pusharglist 1 ........................... <tPatternNo>
  [692] extcall 382 ............................. <integer(tPatternNo)>
  [695] pusharglist 2 ........................... <pLandscapePatterns, integer(tPatternNo)>
  [697] objcall 41 .............................. <pLandscapePatterns[integer(tPatternNo)]>
  [699] setlocal 9 .............................. tPatternMemName = pLandscapePatterns[integer(tPatternNo)]
  [701] getlocal 4 .............................. <tProp>
  [703] pusharglist 1 ........................... <tProp>
  [705] objcall 107 ............................. <tProp.duplicate()>
  [707] setlocal 24 ............................. tLandscapeProps = tProp.duplicate()
  [709] getlocal 24 ............................. <tLandscapeProps>
  [711] pushcons 23 ............................. <"extra_parm">
  [713] pushcons 26 ............................. <"1.">
  [715] getlocal 8 .............................. <tPatternNo>
  [717] joinstr ................................. <"1." & tPatternNo>
  [718] pusharglistnoret 3 ...................... <tLandscapeProps, "extra_parm", "1." & tPatternNo>
  [720] objcall 254 ............................. tLandscapeProps["extra_parm"] = "1." & tPatternNo
  [722] getlocal 24 ............................. <tLandscapeProps>
  [724] pushsymb 922 ............................ <#patternID>
  [727] getlocal 8 .............................. <tPatternNo>
  [729] pusharglistnoret 3 ...................... <tLandscapeProps, #patternID, tPatternNo>
  [731] objcall 254 ............................. tLandscapeProps[#patternID] = tPatternNo
  [733] getprop 911 ............................. <pLandscapeProducts>
  [736] getlocal 8 .............................. <tPatternNo>
  [738] pusharglist 1 ........................... <tPatternNo>
  [740] extcall 291 ............................. <string(tPatternNo)>
  [743] getlocal 24 ............................. <tLandscapeProps>
  [745] pusharglistnoret 3 ...................... <pLandscapeProducts, string(tPatternNo), tLandscapeProps>
  [747] objcall 254 ............................. pLandscapeProducts[string(tPatternNo)] = tLandscapeProps
  [749] pushint8 1
  [751] getlocal 3
  [753] add
  [754] setlocal 3
  [756] endrepeat [192]
  [759] getparam 0 .............................. <me>
  [761] pushcons 27 ............................. <"pattern">
  [763] pushint8 6 .............................. <6>
  [765] pusharglistnoret 3 ...................... <me, "pattern", 6>
  [767] objcall 894 ............................. me.setWallPaper("pattern", 6)
  [770] getparam 0 .............................. <me>
  [772] pushcons 27 ............................. <"pattern">
  [774] pushint8 3 .............................. <3>
  [776] pusharglistnoret 3 ...................... <me, "pattern", 3>
  [778] objcall 895 ............................. me.setFloorPattern("pattern", 3)
  [781] getparam 0 .............................. <me>
  [783] pushcons 27 ............................. <"pattern">
  [785] pushzero ................................ <0>
  [786] pusharglistnoret 3 ...................... <me, "pattern", 0>
  [788] objcall 899 ............................. me.setLandscapePreview("pattern", 0)
  [791] ret
end

on setWallPaper me, ttype, tChange
  [  0] pushsymb 559 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 471 ............................. <getThread(#catalogue)>
  [  8] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 10] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 14] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 16] setlocal 0 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 18] getlocal 0 .............................. <tWndObj>
  [ 20] not ..................................... <not tWndObj>
  [ 21] jmpifz [ 41] ............................ if not tWndObj then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 14 ............................. <"Couldn't access catalogue window!">
  [ 28] pushsymb 894 ............................ <#setWallPaper>
  [ 31] pushsymb 47 ............................. <#major>
  [ 33] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #setWallPaper, #major>
  [ 35] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #setWallPaper, #major)>
  [ 37] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #setWallPaper, #major)>
  [ 39] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #setWallPaper, #major)
  [ 41] getparam 1 .............................. <ttype>
  [ 43] pushcons 27 ............................. <"pattern">
  [ 45] eq ...................................... <ttype = "pattern">
  [ 46] jmpifz [197] ............................ if ttype = "pattern" then / else
  [ 49] getprop 901 ............................. <pWallPattern>
  [ 52] getparam 2 .............................. <tChange>
  [ 54] add ..................................... <pWallPattern + tChange>
  [ 55] setprop 901 ............................. pWallPattern = pWallPattern + tChange
  [ 58] getprop 901 ............................. <pWallPattern>
  [ 61] getprop 900 ............................. <pWallPatterns>
  [ 64] getobjprop 48 ........................... <pWallPatterns.count>
  [ 66] gt ...................................... <pWallPattern > pWallPatterns.count>
  [ 67] jmpifz [ 78] ............................ if pWallPattern > pWallPatterns.count then / else
  [ 70] pushint8 1 .............................. <1>
  [ 72] setprop 901 ............................. pWallPattern = 1
  [ 75] jmp [ 95]
  [ 78] getprop 901 ............................. <pWallPattern>
  [ 81] pushint8 1 .............................. <1>
  [ 83] lt ...................................... <pWallPattern < 1>
  [ 84] jmpifz [ 95] ............................ if pWallPattern < 1 then
  [ 87] getprop 900 ............................. <pWallPatterns>
  [ 90] getobjprop 48 ........................... <pWallPatterns.count>
  [ 92] setprop 901 ............................. pWallPattern = pWallPatterns.count
  [ 95] pushint8 1 .............................. <1>
  [ 97] setprop 902 ............................. pWallModel = 1
  [100] getlocal 0 .............................. <tWndObj>
  [102] pushcons 28 ............................. <"ctlg_wall_color_prev">
  [104] pusharglist 2 ........................... <tWndObj, "ctlg_wall_color_prev">
  [106] objcall 178 ............................. <tWndObj.getElement("ctlg_wall_color_prev")>
  [108] setlocal 1 .............................. tElemPrev = tWndObj.getElement("ctlg_wall_color_prev")
  [110] getlocal 0 .............................. <tWndObj>
  [112] pushcons 29 ............................. <"ctlg_wall_color_next">
  [114] pusharglist 2 ........................... <tWndObj, "ctlg_wall_color_next">
  [116] objcall 178 ............................. <tWndObj.getElement("ctlg_wall_color_next")>
  [118] setlocal 2 .............................. tElemNext = tWndObj.getElement("ctlg_wall_color_next")
  [120] getprop 900 ............................. <pWallPatterns>
  [123] getprop 901 ............................. <pWallPattern>
  [126] pusharglist 2 ........................... <pWallPatterns, pWallPattern>
  [128] objcall 102 ............................. <pWallPatterns.getaProp(pWallPattern)>
  [130] pusharglist 1 ........................... <pWallPatterns.getaProp(pWallPattern)>
  [132] extcall 43 .............................. <ilk(pWallPatterns.getaProp(pWallPattern))>
  [134] pushsymb 45 ............................. <#propList>
  [136] nteq .................................... <ilk(pWallPatterns.getaProp(pWallPattern)) <> #propList>
  [137] jmpifz [145] ............................ if ilk(pWallPatterns.getaProp(pWallPattern)) <> #propList then
  [140] pushzero ................................ <0>
  [141] pusharglistnoret 1 ...................... <0>
  [143] extcall 37 .............................. return 0
  [145] getprop 900 ............................. <pWallPatterns>
  [148] getprop 901 ............................. <pWallPattern>
  [151] pusharglist 2 ........................... <pWallPatterns, pWallPattern>
  [153] objcall 41 .............................. <pWallPatterns[pWallPattern]>
  [155] getobjprop 48 ........................... <pWallPatterns[pWallPattern].count>
  [157] pushint8 2 .............................. <2>
  [159] lt ...................................... <pWallPatterns[pWallPattern].count < 2>
  [160] jmpifz [180] ............................ if pWallPatterns[pWallPattern].count < 2 then / else
  [163] getlocal 1 .............................. <tElemPrev>
  [165] pusharglistnoret 1 ...................... <tElemPrev>
  [167] objcall 578 ............................. tElemPrev.deactivate()
  [170] getlocal 2 .............................. <tElemNext>
  [172] pusharglistnoret 1 ...................... <tElemNext>
  [174] objcall 578 ............................. tElemNext.deactivate()
  [177] jmp [194]
  [180] getlocal 1 .............................. <tElemPrev>
  [182] pusharglistnoret 1 ...................... <tElemPrev>
  [184] objcall 579 ............................. tElemPrev.Activate()
  [187] getlocal 2 .............................. <tElemNext>
  [189] pusharglistnoret 1 ...................... <tElemNext>
  [191] objcall 579 ............................. tElemNext.Activate()
  [194] jmp [265]
  [197] getparam 1 .............................. <ttype>
  [199] pushcons 30 ............................. <"model">
  [201] eq ...................................... <ttype = "model">
  [202] jmpifz [265] ............................ if ttype = "model" then
  [205] getprop 902 ............................. <pWallModel>
  [208] getparam 2 .............................. <tChange>
  [210] add ..................................... <pWallModel + tChange>
  [211] setprop 902 ............................. pWallModel = pWallModel + tChange
  [214] getprop 902 ............................. <pWallModel>
  [217] getprop 900 ............................. <pWallPatterns>
  [220] getprop 901 ............................. <pWallPattern>
  [223] pusharglist 2 ........................... <pWallPatterns, pWallPattern>
  [225] objcall 41 .............................. <pWallPatterns[pWallPattern]>
  [227] getobjprop 48 ........................... <pWallPatterns[pWallPattern].count>
  [229] gt ...................................... <pWallModel > pWallPatterns[pWallPattern].count>
  [230] jmpifz [241] ............................ if pWallModel > pWallPatterns[pWallPattern].count then / else
  [233] pushint8 1 .............................. <1>
  [235] setprop 902 ............................. pWallModel = 1
  [238] jmp [265]
  [241] getprop 902 ............................. <pWallModel>
  [244] pushint8 1 .............................. <1>
  [246] lt ...................................... <pWallModel < 1>
  [247] jmpifz [265] ............................ if pWallModel < 1 then
  [250] getprop 900 ............................. <pWallPatterns>
  [253] getprop 901 ............................. <pWallPattern>
  [256] pusharglist 2 ........................... <pWallPatterns, pWallPattern>
  [258] objcall 41 .............................. <pWallPatterns[pWallPattern]>
  [260] getobjprop 48 ........................... <pWallPatterns[pWallPattern].count>
  [262] setprop 902 ............................. pWallModel = pWallPatterns[pWallPattern].count
  [265] getprop 900 ............................. <pWallPatterns>
  [268] getprop 901 ............................. <pWallPattern>
  [271] pusharglist 2 ........................... <pWallPatterns, pWallPattern>
  [273] objcall 41 .............................. <pWallPatterns[pWallPattern]>
  [275] getprop 902 ............................. <pWallModel>
  [278] pusharglist 1 ........................... <pWallModel>
  [280] extcall 291 ............................. <string(pWallModel)>
  [283] pusharglist 2 ........................... <pWallPatterns[pWallPattern], string(pWallModel)>
  [285] objcall 41 .............................. <pWallPatterns[pWallPattern][string(pWallModel)]>
  [287] setlocal 3 .............................. tWallData = pWallPatterns[pWallPattern][string(pWallModel)]
  [289] getlocal 3 .............................. <tWallData>
  [291] pushsymb 922 ............................ <#patternID>
  [294] pusharglist 2 ........................... <tWallData, #patternID>
  [296] objcall 41 .............................. <tWallData[#patternID]>
  [298] setparam 1 .............................. ttype = tWallData[#patternID]
  [300] getlocal 3 .............................. <tWallData>
  [302] pushsymb 923 ............................ <#palette>
  [305] pusharglist 2 ........................... <tWallData, #palette>
  [307] objcall 41 .............................. <tWallData[#palette]>
  [309] setlocal 4 .............................. tPalette = tWallData[#palette]
  [311] getlocal 3 .............................. <tWallData>
  [313] pushsymb 27 ............................. <#rgb>
  [315] pusharglist 2 ........................... <tWallData, #rgb>
  [317] objcall 41 .............................. <tWallData[#rgb]>
  [319] setlocal 5 .............................. tColor = tWallData[#rgb]
  [321] pushcons 31 ............................. <"left">
  [323] getlocal 5 .............................. <tColor>
  [325] pushint8 16 ............................. <16>
  [327] pushint8 16 ............................. <16>
  [329] pushint8 16 ............................. <16>
  [331] pusharglist 3 ........................... <16, 16, 16>
  [333] extcall 27 .............................. <rgb(16, 16, 16)>
  [335] sub ..................................... <tColor - rgb(16, 16, 16)>
  [336] pushcons 32 ............................. <"right">
  [338] getlocal 5 .............................. <tColor>
  [340] pushcons 33 ............................. <"a">
  [342] getlocal 5 .............................. <tColor>
  [344] pushint8 16 ............................. <16>
  [346] pushint8 16 ............................. <16>
  [348] pushint8 16 ............................. <16>
  [350] pusharglist 3 ........................... <16, 16, 16>
  [352] extcall 27 .............................. <rgb(16, 16, 16)>
  [354] sub ..................................... <tColor - rgb(16, 16, 16)>
  [355] pushcons 34 ............................. <"b">
  [357] getlocal 5 .............................. <tColor>
  [359] pushcons 27 ............................. <"pattern">
  [361] getlocal 5 .............................. <tColor>
  [363] pusharglist 10 .......................... <["left": tColor - rgb(16, 16, 16), "right": tColor, "a": tColor - rgb(16, 16, 16), "b": tColor, "pattern": tColor]>
  [365] pushproplist ............................ <["left": tColor - rgb(16, 16, 16), "right": tColor, "a": tColor - rgb(16, 16, 16), "b": tColor, "pattern": tColor]>
  [366] setlocal 6 .............................. tColors = ["left": tColor - rgb(16, 16, 16), "right": tColor, "a": tColor - rgb(16, 16, 16), "b": tColor, "pattern": tColor]
  [368] getlocal 3 .............................. <tWallData>
  [370] pusharglist 1 ........................... <tWallData>
  [372] objcall 107 ............................. <tWallData.duplicate()>
  [374] setprop 908 ............................. pWallProps = tWallData.duplicate()
  [377] getmovieprop 641 ........................ <the itemDelimiter>
  [380] setlocal 7 .............................. tDelim = the itemDelimiter
  [382] pushcons 35 ............................. <"_">
  [384] setmovieprop 641 ........................ the itemDelimiter = "_"
  [387] getprop 913 ............................. <pWallPreviewIdList>
  [390] peek 0
  [392] pusharglist 1
  [394] extcall 48
  [396] pushint8 1
  [398] peek 0
  [400] peek 2
  [402] lteq
  [403] jmpifz [617] ............................ repeat with tID in pWallPreviewIdList
  [406] peek 2
  [408] peek 1
  [410] pusharglist 2
  [412] extcall 41
  [414] setlocal 8
  [416] getlocal 8 .............................. <tID>
  [418] pushsymb 352 ............................ <#item>
  [421] getlocal 8 .............................. <tID>
  [423] pushsymb 352 ............................ <#item>
  [426] pusharglist 2 ........................... <tID, #item>
  [428] objcall 48 .............................. <tID.item.count>
  [430] pusharglist 3 ........................... <tID, #item, tID.item.count>
  [432] objcall 123 ............................. <tID.item[tID.item.count]>
  [434] setlocal 9 .............................. tPiece = tID.item[tID.item.count]
  [436] pushcons 36 ............................. <"catalog_spaces_wall">
  [438] getparam 1 .............................. <ttype>
  [440] joinstr ................................. <"catalog_spaces_wall" & ttype>
  [441] pushcons 35 ............................. <"_">
  [443] joinstr ................................. <"catalog_spaces_wall" & ttype & "_">
  [444] getlocal 9 .............................. <tPiece>
  [446] joinstr ................................. <"catalog_spaces_wall" & ttype & "_" & tPiece>
  [447] setlocal 10 ............................. tMem = "catalog_spaces_wall" & ttype & "_" & tPiece
  [449] getlocal 10 ............................. <tMem>
  [451] pusharglist 1 ........................... <tMem>
  [453] extcall 63 .............................. <memberExists(tMem)>
  [455] jmpifz [587] ............................ if memberExists(tMem) then
  [458] getlocal 0 .............................. <tWndObj>
  [460] getlocal 8 .............................. <tID>
  [462] pusharglist 2 ........................... <tWndObj, tID>
  [464] objcall 253 ............................. <tWndObj.elementExists(tID)>
  [466] jmpifz [584] ............................ if tWndObj.elementExists(tID) then
  [469] getlocal 10 ............................. <tMem>
  [471] pusharglist 1 ........................... <tMem>
  [473] extcall 652 ............................. <getmemnum(tMem)>
  [476] pusharglist 1 ........................... <getmemnum(tMem)>
  [478] extcall 255 ............................. <member(getmemnum(tMem))>
  [480] setlocal 11 ............................. tmember = member(getmemnum(tMem))
  [482] getlocal 11 ............................. <tmember>
  [484] getlocal 4 .............................. <tPalette>
  [486] pusharglist 1 ........................... <tPalette>
  [488] extcall 652 ............................. <getmemnum(tPalette)>
  [491] pusharglist 1 ........................... <getmemnum(tPalette)>
  [493] extcall 255 ............................. <member(getmemnum(tPalette))>
  [495] setobjprop 862 .......................... tmember.paletteRef = member(getmemnum(tPalette))
  [498] getlocal 11 ............................. <tmember>
  [500] getobjprop 17 ........................... <tmember.image>
  [502] setlocal 12 ............................. tImg = tmember.image
  [504] getlocal 0 .............................. <tWndObj>
  [506] getlocal 8 .............................. <tID>
  [508] pusharglist 2 ........................... <tWndObj, tID>
  [510] objcall 178 ............................. <tWndObj.getElement(tID)>
  [512] setlocal 13 ............................. tElem = tWndObj.getElement(tID)
  [514] getlocal 13 ............................. <tElem>
  [516] pushsymb 17 ............................. <#image>
  [518] pusharglist 2 ........................... <tElem, #image>
  [520] objcall 120 ............................. <tElem.getProperty(#image)>
  [522] setlocal 14 ............................. tDestImg = tElem.getProperty(#image)
  [524] getlocal 14 ............................. <tDestImg>
  [526] getobjprop 69 ........................... <tDestImg.rect>
  [528] setlocal 15 ............................. tRect = tDestImg.rect
  [530] getlocal 12 ............................. <tImg>
  [532] pusharglist 1 ........................... <tImg>
  [534] objcall 660 ............................. <tImg.createMatte()>
  [537] setlocal 16 ............................. tMatte = tImg.createMatte()
  [539] getlocal 14 ............................. <tDestImg>
  [541] getlocal 12 ............................. <tImg>
  [543] getlocal 15 ............................. <tRect>
  [545] getlocal 12 ............................. <tImg>
  [547] getobjprop 69 ........................... <tImg.rect>
  [549] pushsymb 661 ............................ <#maskImage>
  [552] getlocal 16 ............................. <tMatte>
  [554] pushsymb 84 ............................. <#ink>
  [556] pushint8 41 ............................. <41>
  [558] pushsymb 851 ............................ <#bgColor>
  [561] getlocal 6 .............................. <tColors>
  [563] getlocal 9 .............................. <tPiece>
  [565] pusharglist 2 ........................... <tColors, tPiece>
  [567] objcall 41 .............................. <tColors[tPiece]>
  [569] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: 41, #bgColor: tColors[tPiece]]>
  [571] pushproplist ............................ <[#maskImage: tMatte, #ink: 41, #bgColor: tColors[tPiece]]>
  [572] pusharglistnoret 5 ...................... <tDestImg, tImg, tRect, tImg.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tColors[tPiece]]>
  [574] objcall 77 .............................. tDestImg.copyPixels(tImg, tRect, tImg.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tColors[tPiece]])
  [576] getlocal 13 ............................. <tElem>
  [578] getlocal 14 ............................. <tDestImg>
  [580] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [582] objcall 118 ............................. tElem.feedImage(tDestImg)
  [584] jmp [612] ............................... next repeat
  [587] getparam 0 .............................. <me>
  [589] pushcons 37 ............................. <"Wall member not found:">
  [591] pushcons 36 ............................. <"catalog_spaces_wall">
  [593] joinpadstr .............................. <"Wall member not found:" && "catalog_spaces_wall">
  [594] getparam 1 .............................. <ttype>
  [596] joinstr ................................. <"Wall member not found:" && "catalog_spaces_wall" & ttype>
  [597] pushcons 35 ............................. <"_">
  [599] joinstr ................................. <"Wall member not found:" && "catalog_spaces_wall" & ttype & "_">
  [600] getlocal 9 .............................. <tPiece>
  [602] joinstr ................................. <"Wall member not found:" && "catalog_spaces_wall" & ttype & "_" & tPiece>
  [603] pushsymb 894 ............................ <#setWallPaper>
  [606] pushsymb 58 ............................. <#minor>
  [608] pusharglistnoret 4 ...................... <me, "Wall member not found:" && "catalog_spaces_wall" & ttype & "_" & tPiece, #setWallPaper, #minor>
  [610] extcall 46 .............................. error(me, "Wall member not found:" && "catalog_spaces_wall" & ttype & "_" & tPiece, #setWallPaper, #minor)
  [612] pushint8 1
  [614] add
  [615] endrepeat [398]
  [617] pop 3
  [619] getlocal 7 .............................. <tDelim>
  [621] setmovieprop 641 ........................ the itemDelimiter = tDelim
  [624] getlocal 3 .............................. <tWallData>
  [626] pushcons 38 ............................. <"price">
  [628] pusharglist 2 ........................... <tWallData, "price">
  [630] objcall 41 .............................. <tWallData["price"]>
  [632] setlocal 17 ............................. tPrice = tWallData["price"]
  [634] pushcons 39 ............................. <"ctlg_wall_price">
  [636] setlocal 18 ............................. tElemName = "ctlg_wall_price"
  [638] getlocal 17 ............................. <tPrice>
  [640] pusharglist 1 ........................... <tPrice>
  [642] extcall 78 .............................. <voidp(tPrice)>
  [644] not ..................................... <not voidp(tPrice)>
  [645] jmpifz [698] ............................ if not voidp(tPrice) then
  [648] getlocal 0 .............................. <tWndObj>
  [650] getlocal 18 ............................. <tElemName>
  [652] pusharglist 2 ........................... <tWndObj, tElemName>
  [654] objcall 253 ............................. <tWndObj.elementExists(tElemName)>
  [656] jmpifz [698] ............................ if tWndObj.elementExists(tElemName) then
  [659] getlocal 17 ............................. <tPrice>
  [661] pusharglist 1 ........................... <tPrice>
  [663] extcall 266 ............................. <value(tPrice)>
  [666] pushzero ................................ <0>
  [667] gt ...................................... <value(tPrice) > 0>
  [668] jmpifz [698] ............................ if value(tPrice) > 0 then
  [671] getlocal 17 ............................. <tPrice>
  [673] pushcons 40 ............................. <"credits">
  [675] pushcons 40 ............................. <"credits">
  [677] pusharglist 2 ........................... <"credits", "credits">
  [679] extcall 158 ............................. <getText("credits", "credits")>
  [681] joinpadstr .............................. <tPrice && getText("credits", "credits")>
  [682] setlocal 19 ............................. tText = tPrice && getText("credits", "credits")
  [684] getlocal 0 .............................. <tWndObj>
  [686] getlocal 18 ............................. <tElemName>
  [688] pusharglist 2 ........................... <tWndObj, tElemName>
  [690] objcall 178 ............................. <tWndObj.getElement(tElemName)>
  [692] getlocal 19 ............................. <tText>
  [694] pusharglistnoret 2 ...................... <tWndObj.getElement(tElemName), tText>
  [696] objcall 188 ............................. tWndObj.getElement(tElemName).setText(tText)
  [698] pushint8 1 .............................. <1>
  [700] pusharglistnoret 1 ...................... <1>
  [702] extcall 37 .............................. return 1
  [704] ret
end

on setFloorPattern me, ttype, tChange
  [  0] getparam 1 .............................. <ttype>
  [  2] pushcons 27 ............................. <"pattern">
  [  4] eq ...................................... <ttype = "pattern">
  [  5] jmpifz [ 72] ............................ if ttype = "pattern" then / else
  [  8] getprop 904 ............................. <pFloorPattern>
  [ 11] getparam 2 .............................. <tChange>
  [ 13] add ..................................... <pFloorPattern + tChange>
  [ 14] setprop 904 ............................. pFloorPattern = pFloorPattern + tChange
  [ 17] getprop 904 ............................. <pFloorPattern>
  [ 20] getprop 903 ............................. <pFloorPatterns>
  [ 23] pushsymb 506 ............................ <#line>
  [ 26] pusharglist 2 ........................... <pFloorPatterns, #line>
  [ 28] objcall 48 .............................. <pFloorPatterns.line.count>
  [ 30] gt ...................................... <pFloorPattern > pFloorPatterns.line.count>
  [ 31] jmpifz [ 42] ............................ if pFloorPattern > pFloorPatterns.line.count then / else
  [ 34] pushint8 1 .............................. <1>
  [ 36] setprop 904 ............................. pFloorPattern = 1
  [ 39] jmp [ 64]
  [ 42] getprop 904 ............................. <pFloorPattern>
  [ 45] pushint8 1 .............................. <1>
  [ 47] lt ...................................... <pFloorPattern < 1>
  [ 48] jmpifz [ 64] ............................ if pFloorPattern < 1 then
  [ 51] getprop 903 ............................. <pFloorPatterns>
  [ 54] pushsymb 506 ............................ <#line>
  [ 57] pusharglist 2 ........................... <pFloorPatterns, #line>
  [ 59] objcall 48 .............................. <pFloorPatterns.line.count>
  [ 61] setprop 904 ............................. pFloorPattern = pFloorPatterns.line.count
  [ 64] pushint8 1 .............................. <1>
  [ 66] setprop 905 ............................. pFloorModel = 1
  [ 69] jmp [160]
  [ 72] getparam 1 .............................. <ttype>
  [ 74] pushcons 30 ............................. <"model">
  [ 76] eq ...................................... <ttype = "model">
  [ 77] jmpifz [160] ............................ if ttype = "model" then
  [ 80] getprop 905 ............................. <pFloorModel>
  [ 83] getparam 2 .............................. <tChange>
  [ 85] add ..................................... <pFloorModel + tChange>
  [ 86] setprop 905 ............................. pFloorModel = pFloorModel + tChange
  [ 89] getprop 905 ............................. <pFloorModel>
  [ 92] getprop 903 ............................. <pFloorPatterns>
  [ 95] pushsymb 506 ............................ <#line>
  [ 98] getprop 904 ............................. <pFloorPattern>
  [101] pusharglist 3 ........................... <pFloorPatterns, #line, pFloorPattern>
  [103] objcall 123 ............................. <pFloorPatterns.line[pFloorPattern]>
  [105] pushzero ................................ <0>
  [106] getfield ................................ <field(pFloorPatterns.line[pFloorPattern])>
  [107] pushsymb 506 ............................ <#line>
  [110] pusharglist 2 ........................... <field(pFloorPatterns.line[pFloorPattern]), #line>
  [112] objcall 48 .............................. <field(pFloorPatterns.line[pFloorPattern]).line.count>
  [114] gt ...................................... <pFloorModel > field(pFloorPatterns.line[pFloorPattern]).line.count>
  [115] jmpifz [126] ............................ if pFloorModel > field(pFloorPatterns.line[pFloorPattern]).line.count then / else
  [118] pushint8 1 .............................. <1>
  [120] setprop 905 ............................. pFloorModel = 1
  [123] jmp [160]
  [126] getprop 905 ............................. <pFloorModel>
  [129] pushint8 1 .............................. <1>
  [131] lt ...................................... <pFloorModel < 1>
  [132] jmpifz [160] ............................ if pFloorModel < 1 then
  [135] getprop 903 ............................. <pFloorPatterns>
  [138] pushsymb 506 ............................ <#line>
  [141] getprop 904 ............................. <pFloorPattern>
  [144] pusharglist 3 ........................... <pFloorPatterns, #line, pFloorPattern>
  [146] objcall 123 ............................. <pFloorPatterns.line[pFloorPattern]>
  [148] pushzero ................................ <0>
  [149] getfield ................................ <field(pFloorPatterns.line[pFloorPattern])>
  [150] pushsymb 506 ............................ <#line>
  [153] pusharglist 2 ........................... <field(pFloorPatterns.line[pFloorPattern]), #line>
  [155] objcall 48 .............................. <field(pFloorPatterns.line[pFloorPattern]).line.count>
  [157] setprop 905 ............................. pFloorModel = field(pFloorPatterns.line[pFloorPattern]).line.count
  [160] getprop 903 ............................. <pFloorPatterns>
  [163] pushsymb 506 ............................ <#line>
  [166] getprop 904 ............................. <pFloorPattern>
  [169] pusharglist 3 ........................... <pFloorPatterns, #line, pFloorPattern>
  [171] objcall 123 ............................. <pFloorPatterns.line[pFloorPattern]>
  [173] pushzero ................................ <0>
  [174] getfield ................................ <field(pFloorPatterns.line[pFloorPattern])>
  [175] setlocal 0 .............................. tmodel = field(pFloorPatterns.line[pFloorPattern])
  [177] getlocal 0 .............................. <tmodel>
  [179] pushsymb 506 ............................ <#line>
  [182] getprop 905 ............................. <pFloorModel>
  [185] pusharglist 3 ........................... <tmodel, #line, pFloorModel>
  [187] objcall 123 ............................. <tmodel.line[pFloorModel]>
  [189] setlocal 1 .............................. tPattern = tmodel.line[pFloorModel]
  [191] getmovieprop 641 ........................ <the itemDelimiter>
  [194] setlocal 2 .............................. tDelim = the itemDelimiter
  [196] pushcons 11 ............................. <",">
  [198] setmovieprop 641 ........................ the itemDelimiter = ","
  [201] getlocal 1 .............................. <tPattern>
  [203] pushsymb 352 ............................ <#item>
  [206] pushint8 1 .............................. <1>
  [208] pusharglist 3 ........................... <tPattern, #item, 1>
  [210] objcall 566 ............................. <tPattern.item[1]>
  [213] pushsymb 292 ............................ <#char>
  [216] pushint8 1 .............................. <1>
  [218] pusharglist 3 ........................... <tPattern.item[1], #char, 1>
  [220] objcall 123 ............................. <tPattern.item[1].char[1]>
  [222] setparam 1 .............................. ttype = tPattern.item[1].char[1]
  [224] getlocal 1 .............................. <tPattern>
  [226] pushsymb 352 ............................ <#item>
  [229] pushint8 2 .............................. <2>
  [231] pusharglist 3 ........................... <tPattern, #item, 2>
  [233] objcall 123 ............................. <tPattern.item[2]>
  [235] setlocal 3 .............................. tPalette = tPattern.item[2]
  [237] getlocal 1 .............................. <tPattern>
  [239] pushsymb 352 ............................ <#item>
  [242] pushint8 3 .............................. <3>
  [244] pusharglist 3 ........................... <tPattern, #item, 3>
  [246] objcall 123 ............................. <tPattern.item[3]>
  [248] pusharglist 1 ........................... <tPattern.item[3]>
  [250] extcall 382 ............................. <integer(tPattern.item[3])>
  [253] setlocal 4 .............................. tR = integer(tPattern.item[3])
  [255] getlocal 1 .............................. <tPattern>
  [257] pushsymb 352 ............................ <#item>
  [260] pushint8 4 .............................. <4>
  [262] pusharglist 3 ........................... <tPattern, #item, 4>
  [264] objcall 123 ............................. <tPattern.item[4]>
  [266] pusharglist 1 ........................... <tPattern.item[4]>
  [268] extcall 382 ............................. <integer(tPattern.item[4])>
  [271] setlocal 5 .............................. tG = integer(tPattern.item[4])
  [273] getlocal 1 .............................. <tPattern>
  [275] pushsymb 352 ............................ <#item>
  [278] pushint8 5 .............................. <5>
  [280] pusharglist 3 ........................... <tPattern, #item, 5>
  [282] objcall 123 ............................. <tPattern.item[5]>
  [284] pusharglist 1 ........................... <tPattern.item[5]>
  [286] extcall 382 ............................. <integer(tPattern.item[5])>
  [289] setlocal 6 .............................. tB = integer(tPattern.item[5])
  [291] getlocal 4 .............................. <tR>
  [293] getlocal 5 .............................. <tG>
  [295] getlocal 6 .............................. <tB>
  [297] pusharglist 3 ........................... <tR, tG, tB>
  [299] extcall 27 .............................. <rgb(tR, tG, tB)>
  [301] setlocal 7 .............................. tColor = rgb(tR, tG, tB)
  [303] getprop 909 ............................. <pFloorProps>
  [306] pushcons 23 ............................. <"extra_parm">
  [308] getlocal 1 .............................. <tPattern>
  [310] pushsymb 352 ............................ <#item>
  [313] pushint8 6 .............................. <6>
  [315] pusharglist 3 ........................... <tPattern, #item, 6>
  [317] objcall 123 ............................. <tPattern.item[6]>
  [319] pusharglistnoret 3 ...................... <pFloorProps, "extra_parm", tPattern.item[6]>
  [321] objcall 254 ............................. pFloorProps["extra_parm"] = tPattern.item[6]
  [323] pushcons 35 ............................. <"_">
  [325] setmovieprop 641 ........................ the itemDelimiter = "_"
  [328] pushsymb 559 ............................ <#catalogue>
  [331] pusharglist 1 ........................... <#catalogue>
  [333] extcall 471 ............................. <getThread(#catalogue)>
  [336] pusharglist 1 ........................... <getThread(#catalogue)>
  [338] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [340] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [342] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [344] setlocal 8 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [346] getlocal 8 .............................. <tWndObj>
  [348] not ..................................... <not tWndObj>
  [349] jmpifz [369] ............................ if not tWndObj then
  [352] getparam 0 .............................. <me>
  [354] pushcons 14 ............................. <"Couldn't access catalogue window!">
  [356] pushsymb 895 ............................ <#setFloorPattern>
  [359] pushsymb 47 ............................. <#major>
  [361] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #setFloorPattern, #major>
  [363] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #setFloorPattern, #major)>
  [365] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #setFloorPattern, #major)>
  [367] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #setFloorPattern, #major)
  [369] getprop 912 ............................. <pFloorPreviewIdList>
  [372] peek 0
  [374] pusharglist 1
  [376] extcall 48
  [378] pushint8 1
  [380] peek 0
  [382] peek 2
  [384] lteq
  [385] jmpifz [593] ............................ repeat with tID in pFloorPreviewIdList
  [388] peek 2
  [390] peek 1
  [392] pusharglist 2
  [394] extcall 41
  [396] setlocal 9
  [398] getlocal 9 .............................. <tID>
  [400] pushsymb 352 ............................ <#item>
  [403] getlocal 9 .............................. <tID>
  [405] pushsymb 352 ............................ <#item>
  [408] pusharglist 2 ........................... <tID, #item>
  [410] objcall 48 .............................. <tID.item.count>
  [412] pusharglist 3 ........................... <tID, #item, tID.item.count>
  [414] objcall 123 ............................. <tID.item[tID.item.count]>
  [416] setlocal 10 ............................. tPiece = tID.item[tID.item.count]
  [418] pushcons 41 ............................. <"catalog_spaces_floor">
  [420] getparam 1 .............................. <ttype>
  [422] joinstr ................................. <"catalog_spaces_floor" & ttype>
  [423] pushcons 35 ............................. <"_">
  [425] joinstr ................................. <"catalog_spaces_floor" & ttype & "_">
  [426] getlocal 10 ............................. <tPiece>
  [428] joinstr ................................. <"catalog_spaces_floor" & ttype & "_" & tPiece>
  [429] setlocal 11 ............................. tMem = "catalog_spaces_floor" & ttype & "_" & tPiece
  [431] getlocal 11 ............................. <tMem>
  [433] pusharglist 1 ........................... <tMem>
  [435] extcall 63 .............................. <memberExists(tMem)>
  [437] jmpifz [563] ............................ if memberExists(tMem) then
  [440] getlocal 8 .............................. <tWndObj>
  [442] getlocal 9 .............................. <tID>
  [444] pusharglist 2 ........................... <tWndObj, tID>
  [446] objcall 253 ............................. <tWndObj.elementExists(tID)>
  [448] jmpifz [560] ............................ if tWndObj.elementExists(tID) then
  [451] getlocal 11 ............................. <tMem>
  [453] pusharglist 1 ........................... <tMem>
  [455] extcall 652 ............................. <getmemnum(tMem)>
  [458] pusharglist 1 ........................... <getmemnum(tMem)>
  [460] extcall 255 ............................. <member(getmemnum(tMem))>
  [462] setlocal 12 ............................. tmember = member(getmemnum(tMem))
  [464] getlocal 12 ............................. <tmember>
  [466] getlocal 3 .............................. <tPalette>
  [468] pusharglist 1 ........................... <tPalette>
  [470] extcall 652 ............................. <getmemnum(tPalette)>
  [473] pusharglist 1 ........................... <getmemnum(tPalette)>
  [475] extcall 255 ............................. <member(getmemnum(tPalette))>
  [477] setobjprop 862 .......................... tmember.paletteRef = member(getmemnum(tPalette))
  [480] getlocal 12 ............................. <tmember>
  [482] getobjprop 17 ........................... <tmember.image>
  [484] setlocal 13 ............................. tImg = tmember.image
  [486] getlocal 8 .............................. <tWndObj>
  [488] getlocal 9 .............................. <tID>
  [490] pusharglist 2 ........................... <tWndObj, tID>
  [492] objcall 178 ............................. <tWndObj.getElement(tID)>
  [494] setlocal 14 ............................. tElem = tWndObj.getElement(tID)
  [496] getlocal 14 ............................. <tElem>
  [498] pushsymb 17 ............................. <#image>
  [500] pusharglist 2 ........................... <tElem, #image>
  [502] objcall 120 ............................. <tElem.getProperty(#image)>
  [504] setlocal 15 ............................. tDestImg = tElem.getProperty(#image)
  [506] getlocal 15 ............................. <tDestImg>
  [508] getobjprop 69 ........................... <tDestImg.rect>
  [510] setlocal 16 ............................. tRect = tDestImg.rect
  [512] getlocal 13 ............................. <tImg>
  [514] pusharglist 1 ........................... <tImg>
  [516] objcall 660 ............................. <tImg.createMatte()>
  [519] setlocal 17 ............................. tMatte = tImg.createMatte()
  [521] getlocal 15 ............................. <tDestImg>
  [523] getlocal 13 ............................. <tImg>
  [525] getlocal 16 ............................. <tRect>
  [527] getlocal 13 ............................. <tImg>
  [529] getobjprop 69 ........................... <tImg.rect>
  [531] pushsymb 661 ............................ <#maskImage>
  [534] getlocal 17 ............................. <tMatte>
  [536] pushsymb 84 ............................. <#ink>
  [538] pushint8 41 ............................. <41>
  [540] pushsymb 851 ............................ <#bgColor>
  [543] getlocal 7 .............................. <tColor>
  [545] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: 41, #bgColor: tColor]>
  [547] pushproplist ............................ <[#maskImage: tMatte, #ink: 41, #bgColor: tColor]>
  [548] pusharglistnoret 5 ...................... <tDestImg, tImg, tRect, tImg.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tColor]>
  [550] objcall 77 .............................. tDestImg.copyPixels(tImg, tRect, tImg.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tColor])
  [552] getlocal 14 ............................. <tElem>
  [554] getlocal 15 ............................. <tDestImg>
  [556] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [558] objcall 118 ............................. tElem.feedImage(tDestImg)
  [560] jmp [588] ............................... next repeat
  [563] getparam 0 .............................. <me>
  [565] pushcons 37 ............................. <"Wall member not found:">
  [567] pushcons 41 ............................. <"catalog_spaces_floor">
  [569] joinpadstr .............................. <"Wall member not found:" && "catalog_spaces_floor">
  [570] getparam 1 .............................. <ttype>
  [572] joinstr ................................. <"Wall member not found:" && "catalog_spaces_floor" & ttype>
  [573] pushcons 35 ............................. <"_">
  [575] joinstr ................................. <"Wall member not found:" && "catalog_spaces_floor" & ttype & "_">
  [576] getlocal 10 ............................. <tPiece>
  [578] joinstr ................................. <"Wall member not found:" && "catalog_spaces_floor" & ttype & "_" & tPiece>
  [579] pushsymb 895 ............................ <#setFloorPattern>
  [582] pushsymb 58 ............................. <#minor>
  [584] pusharglistnoret 4 ...................... <me, "Wall member not found:" && "catalog_spaces_floor" & ttype & "_" & tPiece, #setFloorPattern, #minor>
  [586] extcall 46 .............................. error(me, "Wall member not found:" && "catalog_spaces_floor" & ttype & "_" & tPiece, #setFloorPattern, #minor)
  [588] pushint8 1
  [590] add
  [591] endrepeat [380]
  [593] pop 3
  [595] getlocal 2 .............................. <tDelim>
  [597] setmovieprop 641 ........................ the itemDelimiter = tDelim
  [600] getprop 909 ............................. <pFloorProps>
  [603] pushcons 38 ............................. <"price">
  [605] pusharglist 2 ........................... <pFloorProps, "price">
  [607] objcall 41 .............................. <pFloorProps["price"]>
  [609] setlocal 18 ............................. tPrice = pFloorProps["price"]
  [611] pushcons 42 ............................. <"ctlg_floor_price">
  [613] setlocal 19 ............................. tElemName = "ctlg_floor_price"
  [615] getlocal 18 ............................. <tPrice>
  [617] pusharglist 1 ........................... <tPrice>
  [619] extcall 78 .............................. <voidp(tPrice)>
  [621] not ..................................... <not voidp(tPrice)>
  [622] jmpifz [675] ............................ if not voidp(tPrice) then
  [625] getlocal 8 .............................. <tWndObj>
  [627] getlocal 19 ............................. <tElemName>
  [629] pusharglist 2 ........................... <tWndObj, tElemName>
  [631] objcall 253 ............................. <tWndObj.elementExists(tElemName)>
  [633] jmpifz [675] ............................ if tWndObj.elementExists(tElemName) then
  [636] getlocal 18 ............................. <tPrice>
  [638] pusharglist 1 ........................... <tPrice>
  [640] extcall 266 ............................. <value(tPrice)>
  [643] pushzero ................................ <0>
  [644] gt ...................................... <value(tPrice) > 0>
  [645] jmpifz [675] ............................ if value(tPrice) > 0 then
  [648] getlocal 18 ............................. <tPrice>
  [650] pushcons 40 ............................. <"credits">
  [652] pushcons 40 ............................. <"credits">
  [654] pusharglist 2 ........................... <"credits", "credits">
  [656] extcall 158 ............................. <getText("credits", "credits")>
  [658] joinpadstr .............................. <tPrice && getText("credits", "credits")>
  [659] setlocal 20 ............................. tText = tPrice && getText("credits", "credits")
  [661] getlocal 8 .............................. <tWndObj>
  [663] getlocal 19 ............................. <tElemName>
  [665] pusharglist 2 ........................... <tWndObj, tElemName>
  [667] objcall 178 ............................. <tWndObj.getElement(tElemName)>
  [669] getlocal 20 ............................. <tText>
  [671] pusharglistnoret 2 ...................... <tWndObj.getElement(tElemName), tText>
  [673] objcall 188 ............................. tWndObj.getElement(tElemName).setText(tText)
  [675] pushint8 1 .............................. <1>
  [677] pusharglistnoret 1 ...................... <1>
  [679] extcall 37 .............................. return 1
  [681] ret
end

on GetLsProductOffset me, tNumber
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 911 ............................. <pLandscapeProducts>
  [  9] getobjprop 48 ........................... <pLandscapeProducts.count>
  [ 11] lteq
  [ 12] jmpifz [ 51] ............................ repeat with i = 1 to pLandscapeProducts.count
  [ 15] getparam 1 .............................. <tNumber>
  [ 17] pusharglist 1 ........................... <tNumber>
  [ 19] extcall 291 ............................. <string(tNumber)>
  [ 22] getprop 911 ............................. <pLandscapeProducts>
  [ 25] getlocal 0 .............................. <i>
  [ 27] pusharglist 2 ........................... <pLandscapeProducts, i>
  [ 29] objcall 343 ............................. <pLandscapeProducts.getPropAt(i)>
  [ 32] eq ...................................... <string(tNumber) = pLandscapeProducts.getPropAt(i)>
  [ 33] jmpifz [ 42] ............................ if string(tNumber) = pLandscapeProducts.getPropAt(i) then
  [ 36] getlocal 0 .............................. <i>
  [ 38] pusharglistnoret 1 ...................... <i>
  [ 40] extcall 37 .............................. return i
  [ 42] pushint8 1
  [ 44] getlocal 0
  [ 46] add
  [ 47] setlocal 0
  [ 49] endrepeat [  4]
  [ 51] pusharglist 0 ........................... <>
  [ 53] extcall 55 .............................. <VOID>
  [ 55] pusharglistnoret 1 ...................... <VOID>
  [ 57] extcall 37 .............................. return VOID
  [ 59] ret
end

on ComboIsBlocked me, tLandscape, tGradient
  [  0] getprop 918 ............................. <pLandscapeBlockedCombos>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 48
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 66] ............................ repeat with tCombo in pLandscapeBlockedCombos
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 41
  [ 27] setlocal 0
  [ 29] getparam 1 .............................. <tLandscape>
  [ 31] getlocal 0 .............................. <tCombo>
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglist 2 ........................... <tCombo, 1>
  [ 37] objcall 41 .............................. <tCombo[1]>
  [ 39] eq ...................................... <tLandscape = tCombo[1]>
  [ 40] getparam 2 .............................. <tGradient>
  [ 42] getlocal 0 .............................. <tCombo>
  [ 44] pushint8 2 .............................. <2>
  [ 46] pusharglist 2 ........................... <tCombo, 2>
  [ 48] objcall 41 .............................. <tCombo[2]>
  [ 50] eq ...................................... <tGradient = tCombo[2]>
  [ 51] and ..................................... <(tLandscape = tCombo[1]) and (tGradient = tCombo[2])>
  [ 52] jmpifz [ 61] ............................ if (tLandscape = tCombo[1]) and (tGradient = tCombo[2]) then
  [ 55] pushint8 1 .............................. <1>
  [ 57] pusharglistnoret 1 ...................... <1>
  [ 59] extcall 37 .............................. return 1
  [ 61] pushint8 1
  [ 63] add
  [ 64] endrepeat [ 11]
  [ 66] pop 3
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 37 .............................. return 0
  [ 73] ret
end

on availableGradientsCount me, tLandscape
  [  0] getprop 917 ............................. <pLandscapeGradients>
  [  3] getobjprop 48 ........................... <pLandscapeGradients.count>
  [  5] setlocal 0 .............................. tGradientsCount = pLandscapeGradients.count
  [  7] getprop 918 ............................. <pLandscapeBlockedCombos>
  [ 10] peek 0
  [ 12] pusharglist 1
  [ 14] extcall 48
  [ 16] pushint8 1
  [ 18] peek 0
  [ 20] peek 2
  [ 22] lteq
  [ 23] jmpifz [ 62] ............................ repeat with tCombo in pLandscapeBlockedCombos
  [ 26] peek 2
  [ 28] peek 1
  [ 30] pusharglist 2
  [ 32] extcall 41
  [ 34] setlocal 1
  [ 36] getparam 1 .............................. <tLandscape>
  [ 38] getlocal 1 .............................. <tCombo>
  [ 40] pushint8 1 .............................. <1>
  [ 42] pusharglist 2 ........................... <tCombo, 1>
  [ 44] objcall 41 .............................. <tCombo[1]>
  [ 46] eq ...................................... <tLandscape = tCombo[1]>
  [ 47] jmpifz [ 57] ............................ if tLandscape = tCombo[1] then
  [ 50] getlocal 0 .............................. <tGradientsCount>
  [ 52] pushint8 1 .............................. <1>
  [ 54] sub ..................................... <tGradientsCount - 1>
  [ 55] setlocal 0 .............................. tGradientsCount = tGradientsCount - 1
  [ 57] pushint8 1
  [ 59] add
  [ 60] endrepeat [ 18]
  [ 62] pop 3
  [ 64] getlocal 0 .............................. <tGradientsCount>
  [ 66] pusharglistnoret 1 ...................... <tGradientsCount>
  [ 68] extcall 37 .............................. return tGradientsCount
  [ 70] ret
end

on setLandscapePreview me, ttype, tChange
  [  0] getparam 0 .............................. <me>
  [  2] getprop 906 ............................. <pLandscapePattern>
  [  5] pusharglist 2 ........................... <me, pLandscapePattern>
  [  7] objcall 896 ............................. <me.GetLsProductOffset(pLandscapePattern)>
  [ 10] setlocal 0 .............................. tCurrent = me.GetLsProductOffset(pLandscapePattern)
  [ 12] getlocal 0 .............................. <tCurrent>
  [ 14] pusharglist 1 ........................... <tCurrent>
  [ 16] extcall 78 .............................. <voidp(tCurrent)>
  [ 18] jmpifz [ 28] ............................ if voidp(tCurrent) then
  [ 21] pushint8 1 .............................. <1>
  [ 23] getparam 2 .............................. <tChange>
  [ 25] sub ..................................... <1 - tChange>
  [ 26] setlocal 0 .............................. tCurrent = 1 - tChange
  [ 28] getprop 911 ............................. <pLandscapeProducts>
  [ 31] getobjprop 48 ........................... <pLandscapeProducts.count>
  [ 33] pushint8 1 .............................. <1>
  [ 35] lt ...................................... <pLandscapeProducts.count < 1>
  [ 36] jmpifz [ 44] ............................ if pLandscapeProducts.count < 1 then
  [ 39] pushzero ................................ <0>
  [ 40] pusharglistnoret 1 ...................... <0>
  [ 42] extcall 37 .............................. return 0
  [ 44] getparam 1 .............................. <ttype>
  [ 46] pushcons 27 ............................. <"pattern">
  [ 48] eq ...................................... <ttype = "pattern">
  [ 49] jmpifz [162] ............................ if ttype = "pattern" then / else
  [ 52] getlocal 0 .............................. <tCurrent>
  [ 54] getparam 2 .............................. <tChange>
  [ 56] add ..................................... <tCurrent + tChange>
  [ 57] setlocal 1 .............................. tNext = tCurrent + tChange
  [ 59] getlocal 1 .............................. <tNext>
  [ 61] getprop 911 ............................. <pLandscapeProducts>
  [ 64] getobjprop 48 ........................... <pLandscapeProducts.count>
  [ 66] gt ...................................... <tNext > pLandscapeProducts.count>
  [ 67] jmpifz [ 77] ............................ if tNext > pLandscapeProducts.count then / else
  [ 70] pushint8 1 .............................. <1>
  [ 72] setlocal 1 .............................. tNext = 1
  [ 74] jmp [ 92]
  [ 77] getlocal 1 .............................. <tNext>
  [ 79] pushint8 1 .............................. <1>
  [ 81] lt ...................................... <tNext < 1>
  [ 82] jmpifz [ 92] ............................ if tNext < 1 then
  [ 85] getprop 911 ............................. <pLandscapeProducts>
  [ 88] getobjprop 48 ........................... <pLandscapeProducts.count>
  [ 90] setlocal 1 .............................. tNext = pLandscapeProducts.count
  [ 92] getprop 911 ............................. <pLandscapeProducts>
  [ 95] getlocal 1 .............................. <tNext>
  [ 97] pusharglist 2 ........................... <pLandscapeProducts, tNext>
  [ 99] objcall 343 ............................. <pLandscapeProducts.getPropAt(tNext)>
  [102] pusharglist 1 ........................... <pLandscapeProducts.getPropAt(tNext)>
  [104] extcall 382 ............................. <integer(pLandscapeProducts.getPropAt(tNext))>
  [107] setprop 906 ............................. pLandscapePattern = integer(pLandscapeProducts.getPropAt(tNext))
  [110] getparam 0 .............................. <me>
  [112] getprop 906 ............................. <pLandscapePattern>
  [115] getprop 907 ............................. <pLandscapeGradient>
  [118] pusharglist 3 ........................... <me, pLandscapePattern, pLandscapeGradient>
  [120] objcall 897 ............................. <me.ComboIsBlocked(pLandscapePattern, pLandscapeGradient)>
  [123] jmpifz [159] ............................ if me.ComboIsBlocked(pLandscapePattern, pLandscapeGradient) then
  [126] pushint8 1 .............................. <1>
  [128] setlocal 2 .............................. tGradient = 1
  [130] getparam 0 .............................. <me>
  [132] getprop 906 ............................. <pLandscapePattern>
  [135] getlocal 2 .............................. <tGradient>
  [137] pusharglist 3 ........................... <me, pLandscapePattern, tGradient>
  [139] objcall 897 ............................. <me.ComboIsBlocked(pLandscapePattern, tGradient)>
  [142] jmpifz [154] ............................ repeat while me.ComboIsBlocked(pLandscapePattern, tGradient)
  [145] getlocal 2 .............................. <tGradient>
  [147] pushint8 1 .............................. <1>
  [149] add ..................................... <tGradient + 1>
  [150] setlocal 2 .............................. tGradient = tGradient + 1
  [152] endrepeat [130]
  [154] getlocal 2 .............................. <tGradient>
  [156] setprop 907 ............................. pLandscapeGradient = tGradient
  [159] jmp [280]
  [162] getparam 1 .............................. <ttype>
  [164] pushcons 43 ............................. <"gradient">
  [166] eq ...................................... <ttype = "gradient">
  [167] jmpifz [280] ............................ if ttype = "gradient" then
  [170] getprop 907 ............................. <pLandscapeGradient>
  [173] getparam 2 .............................. <tChange>
  [175] add ..................................... <pLandscapeGradient + tChange>
  [176] setprop 907 ............................. pLandscapeGradient = pLandscapeGradient + tChange
  [179] getparam 0 .............................. <me>
  [181] getprop 906 ............................. <pLandscapePattern>
  [184] getprop 907 ............................. <pLandscapeGradient>
  [187] pusharglist 3 ........................... <me, pLandscapePattern, pLandscapeGradient>
  [189] objcall 897 ............................. <me.ComboIsBlocked(pLandscapePattern, pLandscapeGradient)>
  [192] jmpifz [243] ............................ repeat while me.ComboIsBlocked(pLandscapePattern, pLandscapeGradient)
  [195] getprop 907 ............................. <pLandscapeGradient>
  [198] getparam 2 .............................. <tChange>
  [200] add ..................................... <pLandscapeGradient + tChange>
  [201] setprop 907 ............................. pLandscapeGradient = pLandscapeGradient + tChange
  [204] getprop 907 ............................. <pLandscapeGradient>
  [207] getprop 917 ............................. <pLandscapeGradients>
  [210] getobjprop 48 ........................... <pLandscapeGradients.count>
  [212] gt ...................................... <pLandscapeGradient > pLandscapeGradients.count>
  [213] jmpifz [224] ............................ if pLandscapeGradient > pLandscapeGradients.count then
  [216] pushint8 1 .............................. <1>
  [218] setprop 907 ............................. pLandscapeGradient = 1
  [221] jmp [241] ............................... next repeat
  [224] getprop 907 ............................. <pLandscapeGradient>
  [227] pushint8 1 .............................. <1>
  [229] lt ...................................... <pLandscapeGradient < 1>
  [230] jmpifz [241] ............................ if pLandscapeGradient < 1 then
  [233] getprop 917 ............................. <pLandscapeGradients>
  [236] getobjprop 48 ........................... <pLandscapeGradients.count>
  [238] setprop 907 ............................. pLandscapeGradient = pLandscapeGradients.count
  [241] endrepeat [179]
  [243] getprop 907 ............................. <pLandscapeGradient>
  [246] getprop 917 ............................. <pLandscapeGradients>
  [249] getobjprop 48 ........................... <pLandscapeGradients.count>
  [251] gt ...................................... <pLandscapeGradient > pLandscapeGradients.count>
  [252] jmpifz [263] ............................ if pLandscapeGradient > pLandscapeGradients.count then / else
  [255] pushint8 1 .............................. <1>
  [257] setprop 907 ............................. pLandscapeGradient = 1
  [260] jmp [280]
  [263] getprop 907 ............................. <pLandscapeGradient>
  [266] pushint8 1 .............................. <1>
  [268] lt ...................................... <pLandscapeGradient < 1>
  [269] jmpifz [280] ............................ if pLandscapeGradient < 1 then
  [272] getprop 917 ............................. <pLandscapeGradients>
  [275] getobjprop 48 ........................... <pLandscapeGradients.count>
  [277] setprop 907 ............................. pLandscapeGradient = pLandscapeGradients.count
  [280] pushsymb 559 ............................ <#catalogue>
  [283] pusharglist 1 ........................... <#catalogue>
  [285] extcall 471 ............................. <getThread(#catalogue)>
  [288] pusharglist 1 ........................... <getThread(#catalogue)>
  [290] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [292] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [294] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [296] setlocal 3 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [298] getlocal 3 .............................. <tWndObj>
  [300] not ..................................... <not tWndObj>
  [301] jmpifz [321] ............................ if not tWndObj then
  [304] getparam 0 .............................. <me>
  [306] pushcons 14 ............................. <"Couldn't access catalogue window!">
  [308] pushsymb 899 ............................ <#setLandscapePreview>
  [311] pushsymb 47 ............................. <#major>
  [313] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #setLandscapePreview, #major>
  [315] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #setLandscapePreview, #major)>
  [317] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #setLandscapePreview, #major)>
  [319] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #setLandscapePreview, #major)
  [321] getlocal 3 .............................. <tWndObj>
  [323] pushcons 44 ............................. <"ctlg_landscape_color_prev">
  [325] pusharglist 2 ........................... <tWndObj, "ctlg_landscape_color_prev">
  [327] objcall 178 ............................. <tWndObj.getElement("ctlg_landscape_color_prev")>
  [329] setlocal 4 .............................. tElemPrev = tWndObj.getElement("ctlg_landscape_color_prev")
  [331] getlocal 3 .............................. <tWndObj>
  [333] pushcons 45 ............................. <"ctlg_landscape_color_next">
  [335] pusharglist 2 ........................... <tWndObj, "ctlg_landscape_color_next">
  [337] objcall 178 ............................. <tWndObj.getElement("ctlg_landscape_color_next")>
  [339] setlocal 5 .............................. tElemNext = tWndObj.getElement("ctlg_landscape_color_next")
  [341] getparam 0 .............................. <me>
  [343] getprop 906 ............................. <pLandscapePattern>
  [346] pusharglist 2 ........................... <me, pLandscapePattern>
  [348] objcall 898 ............................. <me.availableGradientsCount(pLandscapePattern)>
  [351] pushint8 2 .............................. <2>
  [353] lt ...................................... <me.availableGradientsCount(pLandscapePattern) < 2>
  [354] jmpifz [374] ............................ if me.availableGradientsCount(pLandscapePattern) < 2 then / else
  [357] getlocal 4 .............................. <tElemPrev>
  [359] pusharglistnoret 1 ...................... <tElemPrev>
  [361] objcall 578 ............................. tElemPrev.deactivate()
  [364] getlocal 5 .............................. <tElemNext>
  [366] pusharglistnoret 1 ...................... <tElemNext>
  [368] objcall 578 ............................. tElemNext.deactivate()
  [371] jmp [388]
  [374] getlocal 4 .............................. <tElemPrev>
  [376] pusharglistnoret 1 ...................... <tElemPrev>
  [378] objcall 579 ............................. tElemPrev.Activate()
  [381] getlocal 5 .............................. <tElemNext>
  [383] pusharglistnoret 1 ...................... <tElemNext>
  [385] objcall 579 ............................. tElemNext.Activate()
  [388] getprop 911 ............................. <pLandscapeProducts>
  [391] getprop 906 ............................. <pLandscapePattern>
  [394] pusharglist 1 ........................... <pLandscapePattern>
  [396] extcall 291 ............................. <string(pLandscapePattern)>
  [399] pusharglist 2 ........................... <pLandscapeProducts, string(pLandscapePattern)>
  [401] objcall 102 ............................. <pLandscapeProducts.getaProp(string(pLandscapePattern))>
  [403] setlocal 6 .............................. tLandscapeProps = pLandscapeProducts.getaProp(string(pLandscapePattern))
  [405] getlocal 6 .............................. <tLandscapeProps>
  [407] pusharglist 1 ........................... <tLandscapeProps>
  [409] extcall 78 .............................. <voidp(tLandscapeProps)>
  [411] not ..................................... <not voidp(tLandscapeProps)>
  [412] jmpifz [467] ............................ if not voidp(tLandscapeProps) then / else
  [415] getlocal 6 .............................. <tLandscapeProps>
  [417] pusharglist 1 ........................... <tLandscapeProps>
  [419] objcall 107 ............................. <tLandscapeProps.duplicate()>
  [421] setprop 910 ............................. pLandscapeProps = tLandscapeProps.duplicate()
  [424] getprop 910 ............................. <pLandscapeProps>
  [427] pushcons 23 ............................. <"extra_parm">
  [429] getprop 907 ............................. <pLandscapeGradient>
  [432] pusharglist 1 ........................... <pLandscapeGradient>
  [434] extcall 291 ............................. <string(pLandscapeGradient)>
  [437] pushcons 46 ............................. <".">
  [439] joinstr ................................. <string(pLandscapeGradient) & ".">
  [440] getprop 906 ............................. <pLandscapePattern>
  [443] pusharglist 1 ........................... <pLandscapePattern>
  [445] extcall 291 ............................. <string(pLandscapePattern)>
  [448] joinstr ................................. <string(pLandscapeGradient) & "." & string(pLandscapePattern)>
  [449] pusharglistnoret 3 ...................... <pLandscapeProps, "extra_parm", string(pLandscapeGradient) & "." & string(pLandscapePattern)>
  [451] objcall 254 ............................. pLandscapeProps["extra_parm"] = string(pLandscapeGradient) & "." & string(pLandscapePattern)
  [453] getprop 910 ............................. <pLandscapeProps>
  [456] pushcons 38 ............................. <"price">
  [458] pusharglist 2 ........................... <pLandscapeProps, "price">
  [460] objcall 41 .............................. <pLandscapeProps["price"]>
  [462] setlocal 7 .............................. tPrice = pLandscapeProps["price"]
  [464] jmp [470]
  [467] pushzero ................................ <0>
  [468] setlocal 7 .............................. tPrice = 0
  [470] pushcons 47 ............................. <"ctlg_landscape_price">
  [472] setlocal 8 .............................. tElemName = "ctlg_landscape_price"
  [474] getlocal 7 .............................. <tPrice>
  [476] pusharglist 1 ........................... <tPrice>
  [478] extcall 78 .............................. <voidp(tPrice)>
  [480] not ..................................... <not voidp(tPrice)>
  [481] jmpifz [555] ............................ if not voidp(tPrice) then
  [484] getlocal 3 .............................. <tWndObj>
  [486] getlocal 8 .............................. <tElemName>
  [488] pusharglist 2 ........................... <tWndObj, tElemName>
  [490] objcall 253 ............................. <tWndObj.elementExists(tElemName)>
  [492] jmpifz [555] ............................ if tWndObj.elementExists(tElemName) then
  [495] getlocal 7 .............................. <tPrice>
  [497] pusharglist 1 ........................... <tPrice>
  [499] extcall 266 ............................. <value(tPrice)>
  [502] pushzero ................................ <0>
  [503] gt ...................................... <value(tPrice) > 0>
  [504] jmpifz [537] ............................ if value(tPrice) > 0 then / else
  [507] getlocal 7 .............................. <tPrice>
  [509] pushcons 40 ............................. <"credits">
  [511] pushcons 40 ............................. <"credits">
  [513] pusharglist 2 ........................... <"credits", "credits">
  [515] extcall 158 ............................. <getText("credits", "credits")>
  [517] joinpadstr .............................. <tPrice && getText("credits", "credits")>
  [518] setlocal 9 .............................. tText = tPrice && getText("credits", "credits")
  [520] getlocal 3 .............................. <tWndObj>
  [522] getlocal 8 .............................. <tElemName>
  [524] pusharglist 2 ........................... <tWndObj, tElemName>
  [526] objcall 178 ............................. <tWndObj.getElement(tElemName)>
  [528] getlocal 9 .............................. <tText>
  [530] pusharglistnoret 2 ...................... <tWndObj.getElement(tElemName), tText>
  [532] objcall 188 ............................. tWndObj.getElement(tElemName).setText(tText)
  [534] jmp [555]
  [537] pushcons 48 ............................. <"N/A">
  [539] setlocal 9 .............................. tText = "N/A"
  [541] getlocal 3 .............................. <tWndObj>
  [543] getlocal 8 .............................. <tElemName>
  [545] pusharglist 2 ........................... <tWndObj, tElemName>
  [547] objcall 178 ............................. <tWndObj.getElement(tElemName)>
  [549] getlocal 9 .............................. <tText>
  [551] pusharglistnoret 2 ...................... <tWndObj.getElement(tElemName), tText>
  [553] objcall 188 ............................. tWndObj.getElement(tElemName).setText(tText)
  [555] getlocal 3 .............................. <tWndObj>
  [557] getprop 914 ............................. <pLandscapeElement>
  [560] pusharglist 2 ........................... <tWndObj, pLandscapeElement>
  [562] objcall 178 ............................. <tWndObj.getElement(pLandscapeElement)>
  [564] setlocal 10 ............................. tElement = tWndObj.getElement(pLandscapeElement)
  [566] getlocal 10 ............................. <tElement>
  [568] pushsymb 33 ............................. <#width>
  [570] pusharglist 2 ........................... <tElement, #width>
  [572] objcall 120 ............................. <tElement.getProperty(#width)>
  [574] getlocal 10 ............................. <tElement>
  [576] pushsymb 34 ............................. <#height>
  [578] pusharglist 2 ........................... <tElement, #height>
  [580] objcall 120 ............................. <tElement.getProperty(#height)>
  [582] pushint8 32 ............................. <32>
  [584] pusharglist 3 ........................... <tElement.getProperty(#width), tElement.getProperty(#height), 32>
  [586] extcall 17 .............................. <image(tElement.getProperty(#width), tElement.getProperty(#height), 32)>
  [588] setlocal 11 ............................. tBuffer = image(tElement.getProperty(#width), tElement.getProperty(#height), 32)
  [590] getlocal 11 ............................. <tBuffer>
  [592] getlocal 11 ............................. <tBuffer>
  [594] getobjprop 69 ........................... <tBuffer.rect>
  [596] pushsymb 70 ............................. <#shapeType>
  [598] pushsymb 69 ............................. <#rect>
  [600] pushsymb 71 ............................. <#color>
  [602] pushcons 49 ............................. <"#FFFFFF">
  [604] pusharglist 1 ........................... <"#FFFFFF">
  [606] extcall 27 .............................. <rgb("#FFFFFF")>
  [608] pusharglist 4 ........................... <[#shapeType: #rect, #color: rgb("#FFFFFF")]>
  [610] pushproplist ............................ <[#shapeType: #rect, #color: rgb("#FFFFFF")]>
  [611] pusharglistnoret 3 ...................... <tBuffer, tBuffer.rect, [#shapeType: #rect, #color: rgb("#FFFFFF")]>
  [613] objcall 72 .............................. tBuffer.fill(tBuffer.rect, [#shapeType: #rect, #color: rgb("#FFFFFF")])
  [615] pushint8 8 .............................. <8>
  [617] setlocal 12 ............................. tRenderCount = 8
  [619] pushint8 16 ............................. <16>
  [621] pushint8 4 .............................. <4>
  [623] pushint8 16 ............................. <16>
  [625] pushint8 4 .............................. <4>
  [627] pusharglist 4 ........................... <16, 4, 16, 4>
  [629] extcall 69 .............................. <rect(16, 4, 16, 4)>
  [631] setlocal 13 ............................. tRenderOffsetRect = rect(16, 4, 16, 4)
  [633] getprop 917 ............................. <pLandscapeGradients>
  [636] getprop 907 ............................. <pLandscapeGradient>
  [639] pusharglist 2 ........................... <pLandscapeGradients, pLandscapeGradient>
  [641] objcall 41 .............................. <pLandscapeGradients[pLandscapeGradient]>
  [643] pusharglist 1 ........................... <pLandscapeGradients[pLandscapeGradient]>
  [645] extcall 21 .............................. <getMember(pLandscapeGradients[pLandscapeGradient])>
  [647] getobjprop 17 ........................... <getMember(pLandscapeGradients[pLandscapeGradient]).image>
  [649] setlocal 14 ............................. tSrc = getMember(pLandscapeGradients[pLandscapeGradient]).image
  [651] pushint8 88 ............................. <88>
  [653] setlocal 15 ............................. tClipAmount = 88
  [655] pushzero ................................ <0>
  [656] pushzero ................................ <0>
  [657] getlocal 14 ............................. <tSrc>
  [659] getobjprop 33 ........................... <tSrc.width>
  [661] getlocal 14 ............................. <tSrc>
  [663] getobjprop 34 ........................... <tSrc.height>
  [665] pusharglist 4 ........................... <0, 0, tSrc.width, tSrc.height>
  [667] extcall 69 .............................. <rect(0, 0, tSrc.width, tSrc.height)>
  [669] setlocal 16 ............................. tdestrect = rect(0, 0, tSrc.width, tSrc.height)
  [671] pushint8 1 .............................. <1>
  [673] setlocal 17
  [675] getlocal 17
  [677] getlocal 12 ............................. <tRenderCount>
  [679] lteq
  [680] jmpifz [827] ............................ repeat with i = 1 to tRenderCount
  [683] pushzero ................................ <0>
  [684] pushzero ................................ <0>
  [685] getlocal 14 ............................. <tSrc>
  [687] getobjprop 33 ........................... <tSrc.width>
  [689] getlocal 14 ............................. <tSrc>
  [691] getobjprop 34 ........................... <tSrc.height>
  [693] pusharglist 4 ........................... <0, 0, tSrc.width, tSrc.height>
  [695] extcall 69 .............................. <rect(0, 0, tSrc.width, tSrc.height)>
  [697] setlocal 18 ............................. tSrcRect = rect(0, 0, tSrc.width, tSrc.height)
  [699] getlocal 16 ............................. <tdestrect>
  [701] pusharglist 1 ........................... <tdestrect>
  [703] objcall 107 ............................. <tdestrect.duplicate()>
  [705] setlocal 19 ............................. tOldDest = tdestrect.duplicate()
  [707] getlocal 16 ............................. <tdestrect>
  [709] getlocal 16 ............................. <tdestrect>
  [711] getobjprop 740 .......................... <tdestrect.bottom>
  [714] getlocal 15 ............................. <tClipAmount>
  [716] sub ..................................... <tdestrect.bottom - tClipAmount>
  [717] setobjprop 740 .......................... tdestrect.bottom = tdestrect.bottom - tClipAmount
  [720] getlocal 16 ............................. <tdestrect>
  [722] getlocal 16 ............................. <tdestrect>
  [724] getobjprop 962 .......................... <tdestrect.top>
  [727] getlocal 15 ............................. <tClipAmount>
  [729] sub ..................................... <tdestrect.top - tClipAmount>
  [730] setobjprop 962 .......................... tdestrect.top = tdestrect.top - tClipAmount
  [733] getlocal 16 ............................. <tdestrect>
  [735] getobjprop 962 .......................... <tdestrect.top>
  [738] pushzero ................................ <0>
  [739] lt ...................................... <tdestrect.top < 0>
  [740] jmpifz [749] ............................ if tdestrect.top < 0 then
  [743] getlocal 16 ............................. <tdestrect>
  [745] pushzero ................................ <0>
  [746] setobjprop 962 .......................... tdestrect.top = 0
  [749] getlocal 18 ............................. <tSrcRect>
  [751] getlocal 18 ............................. <tSrcRect>
  [753] getobjprop 34 ........................... <tSrcRect.height>
  [755] getlocal 16 ............................. <tdestrect>
  [757] getobjprop 34 ........................... <tdestrect.height>
  [759] sub ..................................... <tSrcRect.height - tdestrect.height>
  [760] setobjprop 962 .......................... tSrcRect.top = tSrcRect.height - tdestrect.height
  [763] getlocal 11 ............................. <tBuffer>
  [765] getlocal 14 ............................. <tSrc>
  [767] getlocal 16 ............................. <tdestrect>
  [769] getlocal 18 ............................. <tSrcRect>
  [771] pushsymb 76 ............................. <#useFastQuads>
  [773] pushint8 1 .............................. <1>
  [775] pushsymb 84 ............................. <#ink>
  [777] pushsymb 345 ............................ <#copy>
  [780] pusharglist 4 ........................... <[#useFastQuads: 1, #ink: #copy]>
  [782] pushproplist ............................ <[#useFastQuads: 1, #ink: #copy]>
  [783] pusharglistnoret 5 ...................... <tBuffer, tSrc, tdestrect, tSrcRect, [#useFastQuads: 1, #ink: #copy]>
  [785] objcall 77 .............................. tBuffer.copyPixels(tSrc, tdestrect, tSrcRect, [#useFastQuads: 1, #ink: #copy])
  [787] getlocal 19 ............................. <tOldDest>
  [789] setlocal 16 ............................. tdestrect = tOldDest
  [791] getlocal 16 ............................. <tdestrect>
  [793] getlocal 13 ............................. <tRenderOffsetRect>
  [795] add ..................................... <tdestrect + tRenderOffsetRect>
  [796] setlocal 16 ............................. tdestrect = tdestrect + tRenderOffsetRect
  [798] getlocal 15 ............................. <tClipAmount>
  [800] getlocal 13 ............................. <tRenderOffsetRect>
  [802] getobjprop 962 .......................... <tRenderOffsetRect.top>
  [805] sub ..................................... <tClipAmount - tRenderOffsetRect.top>
  [806] setlocal 15 ............................. tClipAmount = tClipAmount - tRenderOffsetRect.top
  [808] getlocal 15 ............................. <tClipAmount>
  [810] pushzero ................................ <0>
  [811] lt ...................................... <tClipAmount < 0>
  [812] jmpifz [818] ............................ if tClipAmount < 0 then
  [815] pushzero ................................ <0>
  [816] setlocal 15 ............................. tClipAmount = 0
  [818] pushint8 1
  [820] getlocal 17
  [822] add
  [823] setlocal 17
  [825] endrepeat [675]
  [827] getprop 906 ............................. <pLandscapePattern>
  [830] getprop 916 ............................. <pLandscapePatterns>
  [833] getobjprop 48 ........................... <pLandscapePatterns.count>
  [835] lteq .................................... <pLandscapePattern <= pLandscapePatterns.count>
  [836] getprop 906 ............................. <pLandscapePattern>
  [839] pushzero ................................ <0>
  [840] gt ...................................... <pLandscapePattern > 0>
  [841] and ..................................... <(pLandscapePattern <= pLandscapePatterns.count) and (pLandscapePattern > 0)>
  [842] jmpifz [902] ............................ if (pLandscapePattern <= pLandscapePatterns.count) and (pLandscapePattern > 0) then
  [845] getprop 916 ............................. <pLandscapePatterns>
  [848] getprop 906 ............................. <pLandscapePattern>
  [851] pusharglist 2 ........................... <pLandscapePatterns, pLandscapePattern>
  [853] objcall 41 .............................. <pLandscapePatterns[pLandscapePattern]>
  [855] pusharglist 1 ........................... <pLandscapePatterns[pLandscapePattern]>
  [857] extcall 21 .............................. <getMember(pLandscapePatterns[pLandscapePattern])>
  [859] getobjprop 17 ........................... <getMember(pLandscapePatterns[pLandscapePattern]).image>
  [861] setlocal 14 ............................. tSrc = getMember(pLandscapePatterns[pLandscapePattern]).image
  [863] pushzero ................................ <0>
  [864] pushzero ................................ <0>
  [865] getlocal 11 ............................. <tBuffer>
  [867] getobjprop 33 ........................... <tBuffer.width>
  [869] getlocal 11 ............................. <tBuffer>
  [871] getobjprop 34 ........................... <tBuffer.height>
  [873] pusharglist 4 ........................... <0, 0, tBuffer.width, tBuffer.height>
  [875] extcall 69 .............................. <rect(0, 0, tBuffer.width, tBuffer.height)>
  [877] setlocal 16 ............................. tdestrect = rect(0, 0, tBuffer.width, tBuffer.height)
  [879] getlocal 11 ............................. <tBuffer>
  [881] getlocal 14 ............................. <tSrc>
  [883] getlocal 16 ............................. <tdestrect>
  [885] getlocal 16 ............................. <tdestrect>
  [887] pushsymb 76 ............................. <#useFastQuads>
  [889] pushint8 1 .............................. <1>
  [891] pushsymb 84 ............................. <#ink>
  [893] pushint8 36 ............................. <36>
  [895] pusharglist 4 ........................... <[#useFastQuads: 1, #ink: 36]>
  [897] pushproplist ............................ <[#useFastQuads: 1, #ink: 36]>
  [898] pusharglistnoret 5 ...................... <tBuffer, tSrc, tdestrect, tdestrect, [#useFastQuads: 1, #ink: 36]>
  [900] objcall 77 .............................. tBuffer.copyPixels(tSrc, tdestrect, tdestrect, [#useFastQuads: 1, #ink: 36])
  [902] getprop 915 ............................. <pLandscapePreviewIdList>
  [905] pushint8 2 .............................. <2>
  [907] pusharglist 2 ........................... <pLandscapePreviewIdList, 2>
  [909] objcall 41 .............................. <pLandscapePreviewIdList[2]>
  [911] pusharglist 1 ........................... <pLandscapePreviewIdList[2]>
  [913] extcall 21 .............................. <getMember(pLandscapePreviewIdList[2])>
  [915] getobjprop 17 ........................... <getMember(pLandscapePreviewIdList[2]).image>
  [917] pusharglist 1 ........................... <getMember(pLandscapePreviewIdList[2]).image>
  [919] extcall 963 ............................. <createMask(getMember(pLandscapePreviewIdList[2]).image)>
  [922] setlocal 20 ............................. tMask = createMask(getMember(pLandscapePreviewIdList[2]).image)
  [924] getlocal 11 ............................. <tBuffer>
  [926] getprop 915 ............................. <pLandscapePreviewIdList>
  [929] pushint8 1 .............................. <1>
  [931] pusharglist 2 ........................... <pLandscapePreviewIdList, 1>
  [933] objcall 41 .............................. <pLandscapePreviewIdList[1]>
  [935] pusharglist 1 ........................... <pLandscapePreviewIdList[1]>
  [937] extcall 21 .............................. <getMember(pLandscapePreviewIdList[1])>
  [939] getobjprop 17 ........................... <getMember(pLandscapePreviewIdList[1]).image>
  [941] getlocal 16 ............................. <tdestrect>
  [943] getlocal 16 ............................. <tdestrect>
  [945] pushsymb 76 ............................. <#useFastQuads>
  [947] pushint8 1 .............................. <1>
  [949] pushsymb 84 ............................. <#ink>
  [951] pushsymb 345 ............................ <#copy>
  [954] pushsymb 661 ............................ <#maskImage>
  [957] getlocal 20 ............................. <tMask>
  [959] pusharglist 6 ........................... <[#useFastQuads: 1, #ink: #copy, #maskImage: tMask]>
  [961] pushproplist ............................ <[#useFastQuads: 1, #ink: #copy, #maskImage: tMask]>
  [962] pusharglistnoret 5 ...................... <tBuffer, getMember(pLandscapePreviewIdList[1]).image, tdestrect, tdestrect, [#useFastQuads: 1, #ink: #copy, #maskImage: tMask]>
  [964] objcall 77 .............................. tBuffer.copyPixels(getMember(pLandscapePreviewIdList[1]).image, tdestrect, tdestrect, [#useFastQuads: 1, #ink: #copy, #maskImage: tMask])
  [966] getlocal 11 ............................. <tBuffer>
  [968] getprop 915 ............................. <pLandscapePreviewIdList>
  [971] pushint8 3 .............................. <3>
  [973] pusharglist 2 ........................... <pLandscapePreviewIdList, 3>
  [975] objcall 41 .............................. <pLandscapePreviewIdList[3]>
  [977] pusharglist 1 ........................... <pLandscapePreviewIdList[3]>
  [979] extcall 21 .............................. <getMember(pLandscapePreviewIdList[3])>
  [981] getobjprop 17 ........................... <getMember(pLandscapePreviewIdList[3]).image>
  [983] pusharglistnoret 2 ...................... <tBuffer, getMember(pLandscapePreviewIdList[3]).image>
  [985] objcall 964 ............................. tBuffer.setAlpha(getMember(pLandscapePreviewIdList[3]).image)
  [988] getlocal 11 ............................. <tBuffer>
  [990] pushint8 1 .............................. <1>
  [992] setobjprop 777 .......................... tBuffer.useAlpha = 1
  [995] getlocal 10 ............................. <tElement>
  [997] getchainedprop 965 ...................... <tElement.pSprite>
  [1000] getchainedprop 255 ..................... <tElement.pSprite.member>
  [1002] getlocal 11 ............................ <tBuffer>
  [1004] setobjprop 17 .......................... tElement.pSprite.member.image = tBuffer
  [1006] getlocal 10 ............................ <tElement>
  [1008] getchainedprop 965 ..................... <tElement.pSprite>
  [1011] getchainedprop 255 ..................... <tElement.pSprite.member>
  [1013] pushint8 1 ............................. <1>
  [1015] setobjprop 777 ......................... tElement.pSprite.member.useAlpha = 1
  [1018] getlocal 10 ............................ <tElement>
  [1020] getchainedprop 965 ..................... <tElement.pSprite>
  [1023] getchainedprop 255 ..................... <tElement.pSprite.member>
  [1025] pushzero ............................... <0>
  [1026] pushzero ............................... <0>
  [1027] pusharglist 2 .......................... <0, 0>
  [1029] extcall 32 ............................. <point(0, 0)>
  [1031] setobjprop 852 ......................... tElement.pSprite.member.regPoint = point(0, 0)
  [1034] ret
end

on eventProc me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 198 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [ 21] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] pushcons 50 ............................. <"close">
  [ 12] eq ...................................... <tSprID = "close">
  [ 13] jmpifz [ 21] ............................ if tSprID = "close" then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 37 .............................. return 0
  [ 21] getparam 1 .............................. <tEvent>
  [ 23] pushsymb 232 ............................ <#mouseDown>
  [ 25] eq ...................................... <tEvent = #mouseDown>
  [ 26] jmpifz [403] ............................ if tEvent = #mouseDown then
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] peek 0 .................................. case tSprID of
  [ 33] pushcons 51 ............................. <"ctlg_wall_pattern_prev">
  [ 35] eq
  [ 36] jmpifz [ 54] ............................ (case) "ctlg_wall_pattern_prev":
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 27 ............................. <"pattern">
  [ 43] pushint8 1 .............................. <1>
  [ 45] inv ..................................... <-1>
  [ 46] pusharglistnoret 3 ...................... <me, "pattern", -1>
  [ 48] objcall 894 ............................. me.setWallPaper("pattern", -1)
  [ 51] jmp [401]
  [ 54] peek 0
  [ 56] pushcons 52 ............................. <"ctlg_wall_pattern_next">
  [ 58] eq
  [ 59] jmpifz [ 76] ............................ (case) "ctlg_wall_pattern_next":
  [ 62] getparam 0 .............................. <me>
  [ 64] pushcons 27 ............................. <"pattern">
  [ 66] pushint8 1 .............................. <1>
  [ 68] pusharglistnoret 3 ...................... <me, "pattern", 1>
  [ 70] objcall 894 ............................. me.setWallPaper("pattern", 1)
  [ 73] jmp [401]
  [ 76] peek 0
  [ 78] pushcons 28 ............................. <"ctlg_wall_color_prev">
  [ 80] eq
  [ 81] jmpifz [ 99] ............................ (case) "ctlg_wall_color_prev":
  [ 84] getparam 0 .............................. <me>
  [ 86] pushcons 30 ............................. <"model">
  [ 88] pushint8 1 .............................. <1>
  [ 90] inv ..................................... <-1>
  [ 91] pusharglistnoret 3 ...................... <me, "model", -1>
  [ 93] objcall 894 ............................. me.setWallPaper("model", -1)
  [ 96] jmp [401]
  [ 99] peek 0
  [101] pushcons 29 ............................. <"ctlg_wall_color_next">
  [103] eq
  [104] jmpifz [121] ............................ (case) "ctlg_wall_color_next":
  [107] getparam 0 .............................. <me>
  [109] pushcons 30 ............................. <"model">
  [111] pushint8 1 .............................. <1>
  [113] pusharglistnoret 3 ...................... <me, "model", 1>
  [115] objcall 894 ............................. me.setWallPaper("model", 1)
  [118] jmp [401]
  [121] peek 0
  [123] pushcons 53 ............................. <"ctlg_floor_pattern_prev">
  [125] eq
  [126] jmpifz [144] ............................ (case) "ctlg_floor_pattern_prev":
  [129] getparam 0 .............................. <me>
  [131] pushcons 27 ............................. <"pattern">
  [133] pushint8 1 .............................. <1>
  [135] inv ..................................... <-1>
  [136] pusharglistnoret 3 ...................... <me, "pattern", -1>
  [138] objcall 895 ............................. me.setFloorPattern("pattern", -1)
  [141] jmp [401]
  [144] peek 0
  [146] pushcons 54 ............................. <"ctlg_floor_pattern_next">
  [148] eq
  [149] jmpifz [166] ............................ (case) "ctlg_floor_pattern_next":
  [152] getparam 0 .............................. <me>
  [154] pushcons 27 ............................. <"pattern">
  [156] pushint8 1 .............................. <1>
  [158] pusharglistnoret 3 ...................... <me, "pattern", 1>
  [160] objcall 895 ............................. me.setFloorPattern("pattern", 1)
  [163] jmp [401]
  [166] peek 0
  [168] pushcons 55 ............................. <"ctlg_floor_color_prev">
  [170] eq
  [171] jmpifz [189] ............................ (case) "ctlg_floor_color_prev":
  [174] getparam 0 .............................. <me>
  [176] pushcons 30 ............................. <"model">
  [178] pushint8 1 .............................. <1>
  [180] inv ..................................... <-1>
  [181] pusharglistnoret 3 ...................... <me, "model", -1>
  [183] objcall 895 ............................. me.setFloorPattern("model", -1)
  [186] jmp [401]
  [189] peek 0
  [191] pushcons 56 ............................. <"ctlg_floor_color_next">
  [193] eq
  [194] jmpifz [211] ............................ (case) "ctlg_floor_color_next":
  [197] getparam 0 .............................. <me>
  [199] pushcons 30 ............................. <"model">
  [201] pushint8 1 .............................. <1>
  [203] pusharglistnoret 3 ...................... <me, "model", 1>
  [205] objcall 895 ............................. me.setFloorPattern("model", 1)
  [208] jmp [401]
  [211] peek 0
  [213] pushcons 57 ............................. <"ctlg_landscape_pattern_prev">
  [215] eq
  [216] jmpifz [234] ............................ (case) "ctlg_landscape_pattern_prev":
  [219] getparam 0 .............................. <me>
  [221] pushcons 27 ............................. <"pattern">
  [223] pushint8 1 .............................. <1>
  [225] inv ..................................... <-1>
  [226] pusharglistnoret 3 ...................... <me, "pattern", -1>
  [228] objcall 899 ............................. me.setLandscapePreview("pattern", -1)
  [231] jmp [401]
  [234] peek 0
  [236] pushcons 58 ............................. <"ctlg_landscape_pattern_next">
  [238] eq
  [239] jmpifz [256] ............................ (case) "ctlg_landscape_pattern_next":
  [242] getparam 0 .............................. <me>
  [244] pushcons 27 ............................. <"pattern">
  [246] pushint8 1 .............................. <1>
  [248] pusharglistnoret 3 ...................... <me, "pattern", 1>
  [250] objcall 899 ............................. me.setLandscapePreview("pattern", 1)
  [253] jmp [401]
  [256] peek 0
  [258] pushcons 44 ............................. <"ctlg_landscape_color_prev">
  [260] eq
  [261] jmpifz [279] ............................ (case) "ctlg_landscape_color_prev":
  [264] getparam 0 .............................. <me>
  [266] pushcons 43 ............................. <"gradient">
  [268] pushint8 1 .............................. <1>
  [270] inv ..................................... <-1>
  [271] pusharglistnoret 3 ...................... <me, "gradient", -1>
  [273] objcall 899 ............................. me.setLandscapePreview("gradient", -1)
  [276] jmp [401]
  [279] peek 0
  [281] pushcons 45 ............................. <"ctlg_landscape_color_next">
  [283] eq
  [284] jmpifz [301] ............................ (case) "ctlg_landscape_color_next":
  [287] getparam 0 .............................. <me>
  [289] pushcons 43 ............................. <"gradient">
  [291] pushint8 1 .............................. <1>
  [293] pusharglistnoret 3 ...................... <me, "gradient", 1>
  [295] objcall 899 ............................. me.setLandscapePreview("gradient", 1)
  [298] jmp [401]
  [301] peek 0
  [303] pushcons 16 ............................. <"ctlg_buy_wall">
  [305] eq
  [306] jmpifz [332] ............................ (case) "ctlg_buy_wall":
  [309] pushsymb 559 ............................ <#catalogue>
  [312] pusharglist 1 ........................... <#catalogue>
  [314] extcall 471 ............................. <getThread(#catalogue)>
  [317] pusharglist 1 ........................... <getThread(#catalogue)>
  [319] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [321] getprop 908 ............................. <pWallProps>
  [324] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pWallProps>
  [326] objcall 305 ............................. getThread(#catalogue).getComponent().checkProductOrder(pWallProps)
  [329] jmp [401]
  [332] peek 0
  [334] pushcons 17 ............................. <"ctlg_buy_floor">
  [336] eq
  [337] jmpifz [363] ............................ (case) "ctlg_buy_floor":
  [340] pushsymb 559 ............................ <#catalogue>
  [343] pusharglist 1 ........................... <#catalogue>
  [345] extcall 471 ............................. <getThread(#catalogue)>
  [348] pusharglist 1 ........................... <getThread(#catalogue)>
  [350] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [352] getprop 909 ............................. <pFloorProps>
  [355] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pFloorProps>
  [357] objcall 305 ............................. getThread(#catalogue).getComponent().checkProductOrder(pFloorProps)
  [360] jmp [401]
  [363] peek 0
  [365] pushcons 18 ............................. <"ctlg_buy_landscape">
  [367] eq
  [368] jmpifz [394] ............................ (case) "ctlg_buy_landscape":
  [371] pushsymb 559 ............................ <#catalogue>
  [374] pusharglist 1 ........................... <#catalogue>
  [376] extcall 471 ............................. <getThread(#catalogue)>
  [379] pusharglist 1 ........................... <getThread(#catalogue)>
  [381] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [383] getprop 910 ............................. <pLandscapeProps>
  [386] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pLandscapeProps>
  [388] objcall 305 ............................. getThread(#catalogue).getComponent().checkProductOrder(pLandscapeProps)
  [391] jmp [401] ............................... (case) otherwise:
  [394] pop 1
  [396] pushzero ................................ <0>
  [397] pusharglistnoret 1 ...................... <0>
  [399] extcall 37 .............................. return 0
  [401] pop 1 ................................... end case
  [403] pushint8 1 .............................. <1>
  [405] pusharglistnoret 1 ...................... <1>
  [407] extcall 37 .............................. return 1
  [409] ret
end
