property pPageData, pSmallImg, pSelectedOrderNum, pSelectedColorNum, pSelectedProduct, pLastProductNum, pNumOfColorBoxies, pCurrentProductNum

on construct me
  [  0] pushsymb 559 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 471 ............................. <getThread(#catalogue)>
  [  8] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 10] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 14] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 16] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 18] getlocal 0 .............................. <tCataloguePage>
  [ 20] not ..................................... <not tCataloguePage>
  [ 21] jmpifz [ 40] ............................ if not tCataloguePage then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 28] pushsymb 0 .............................. <#construct>
  [ 30] pushsymb 47 ............................. <#major>
  [ 32] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #construct, #major>
  [ 34] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #construct, #major)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #construct, #major)>
  [ 38] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #construct, #major)
  [ 40] pusharglist 0 ........................... <[:]>
  [ 42] pushproplist ............................ <[:]>
  [ 43] setprop 528 ............................. pPageData = [:]
  [ 46] pushint8 32 ............................. <32>
  [ 48] pushint8 32 ............................. <32>
  [ 50] pushint8 32 ............................. <32>
  [ 52] pusharglist 3 ........................... <32, 32, 32>
  [ 54] extcall 17 .............................. <image(32, 32, 32)>
  [ 56] setprop 978 ............................. pSmallImg = image(32, 32, 32)
  [ 59] pushint8 1 .............................. <1>
  [ 61] setprop 979 ............................. pSelectedOrderNum = 1
  [ 64] pushint8 1 .............................. <1>
  [ 66] setprop 980 ............................. pSelectedColorNum = 1
  [ 69] pushzero ................................ <0>
  [ 70] setprop 645 ............................. pLastProductNum = 0
  [ 73] pushzero ................................ <0>
  [ 74] setprop 981 ............................. pNumOfColorBoxies = 0
  [ 77] pushint8 1 .............................. <1>
  [ 79] setlocal 1
  [ 81] getlocal 1
  [ 83] pushint8 50 ............................. <50>
  [ 85] lteq
  [ 86] jmpifz [131] ............................ repeat with f = 1 to 50
  [ 89] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [ 91] getlocal 1 .............................. <f>
  [ 93] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [ 94] setlocal 2 .............................. tID = "ctlg_selectcolor_bg_" & f
  [ 96] getlocal 0 .............................. <tCataloguePage>
  [ 98] getlocal 2 .............................. <tID>
  [100] pusharglist 2 ........................... <tCataloguePage, tID>
  [102] objcall 253 ............................. <tCataloguePage.elementExists(tID)>
  [104] jmpifz [119] ............................ if tCataloguePage.elementExists(tID) then
  [107] getprop 981 ............................. <pNumOfColorBoxies>
  [110] pushint8 1 .............................. <1>
  [112] add ..................................... <pNumOfColorBoxies + 1>
  [113] setprop 981 ............................. pNumOfColorBoxies = pNumOfColorBoxies + 1
  [116] jmp [122] ............................... next repeat
  [119] jmp [131] ............................... exit repeat
  [122] pushint8 1
  [124] getlocal 1
  [126] add
  [127] setlocal 1
  [129] endrepeat [ 81]
  [131] getlocal 0 .............................. <tCataloguePage>
  [133] pushcons 2 .............................. <"trophies_habbo_name">
  [135] pusharglist 2 ........................... <tCataloguePage, "trophies_habbo_name">
  [137] objcall 253 ............................. <tCataloguePage.elementExists("trophies_habbo_name")>
  [139] jmpifz [171] ............................ if tCataloguePage.elementExists("trophies_habbo_name") then
  [142] pushsymb 185 ............................ <#session>
  [144] pusharglist 1 ........................... <#session>
  [146] extcall 184 ............................. <getObject(#session)>
  [148] pushsymb 286 ............................ <#userName>
  [151] pusharglist 2 ........................... <getObject(#session), #userName>
  [153] objcall 186 ............................. <getObject(#session).GET(#userName)>
  [155] setlocal 3 .............................. tUserName = getObject(#session).GET(#userName)
  [157] getlocal 0 .............................. <tCataloguePage>
  [159] pushcons 2 .............................. <"trophies_habbo_name">
  [161] pusharglist 2 ........................... <tCataloguePage, "trophies_habbo_name">
  [163] objcall 178 ............................. <tCataloguePage.getElement("trophies_habbo_name")>
  [165] getlocal 3 .............................. <tUserName>
  [167] pusharglistnoret 2 ...................... <tCataloguePage.getElement("trophies_habbo_name"), tUserName>
  [169] objcall 188 ............................. tCataloguePage.getElement("trophies_habbo_name").setText(tUserName)
  [171] pushsymb 990 ............................ <#serverDate>
  [174] getparam 0 .............................. <me>
  [176] pusharglist 1 ........................... <me>
  [178] objcall 54 .............................. <me.getID()>
  [180] pushsymb 987 ............................ <#setDate>
  [183] pusharglistnoret 3 ...................... <#serverDate, me.getID(), #setDate>
  [185] extcall 159 ............................. registerMessage(#serverDate, me.getID(), #setDate)
  [187] pushsymb 991 ............................ <#getServerDate>
  [190] pusharglist 1 ........................... <#getServerDate>
  [192] extcall 167 ............................. <objectExists(#getServerDate)>
  [194] jmpifz [209] ............................ if objectExists(#getServerDate) then
  [197] pushsymb 991 ............................ <#getServerDate>
  [200] pusharglist 1 ........................... <#getServerDate>
  [202] extcall 184 ............................. <getObject(#getServerDate)>
  [204] pusharglistnoret 1 ...................... <getObject(#getServerDate)>
  [206] objcall 992 ............................. getObject(#getServerDate).getDate()
  [209] pushint8 1 .............................. <1>
  [211] pusharglistnoret 1 ...................... <1>
  [213] extcall 37 .............................. return 1
  [215] ret
end

on define me, tPageProps
  [  0] getparam 1 .............................. <tPageProps>
  [  2] getobjprop 43 ........................... <tPageProps.ilk>
  [  4] pushsymb 45 ............................. <#propList>
  [  6] nteq .................................... <tPageProps.ilk <> #propList>
  [  7] jmpifz [ 26] ............................ if tPageProps.ilk <> #propList then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 3 .............................. <"Incorrect Catalogue page data">
  [ 14] pushsymb 237 ............................ <#define>
  [ 16] pushsymb 47 ............................. <#major>
  [ 18] pusharglist 4 ........................... <me, "Incorrect Catalogue page data", #define, #major>
  [ 20] extcall 46 .............................. <error(me, "Incorrect Catalogue page data", #define, #major)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Incorrect Catalogue page data", #define, #major)>
  [ 24] extcall 37 .............................. return error(me, "Incorrect Catalogue page data", #define, #major)
  [ 26] pusharglist 0 ........................... <[:]>
  [ 28] pushproplist ............................ <[:]>
  [ 29] setprop 528 ............................. pPageData = [:]
  [ 32] getprop 528 ............................. <pPageData>
  [ 35] pusharglistnoret 1 ...................... <pPageData>
  [ 37] objcall 493 ............................. pPageData.sort()
  [ 40] getparam 1 .............................. <tPageProps>
  [ 42] pushcons 4 .............................. <"productList">
  [ 44] pusharglist 2 ........................... <tPageProps, "productList">
  [ 46] objcall 41 .............................. <tPageProps["productList"]>
  [ 48] pusharglist 1 ........................... <tPageProps["productList"]>
  [ 50] extcall 78 .............................. <voidp(tPageProps["productList"])>
  [ 52] not ..................................... <not voidp(tPageProps["productList"])>
  [ 53] jmpifz [238] ............................ if not voidp(tPageProps["productList"]) then
  [ 56] getparam 1 .............................. <tPageProps>
  [ 58] pushcons 4 .............................. <"productList">
  [ 60] pusharglist 2 ........................... <tPageProps, "productList">
  [ 62] objcall 41 .............................. <tPageProps["productList"]>
  [ 64] setlocal 0 .............................. tProducts = tPageProps["productList"]
  [ 66] pushint8 1 .............................. <1>
  [ 68] setlocal 1
  [ 70] getlocal 1
  [ 72] getlocal 0 .............................. <tProducts>
  [ 74] getobjprop 48 ........................... <tProducts.count>
  [ 76] lteq
  [ 77] jmpifz [238] ............................ repeat with f = 1 to tProducts.count
  [ 80] getlocal 0 .............................. <tProducts>
  [ 82] getlocal 1 .............................. <f>
  [ 84] pusharglist 2 ........................... <tProducts, f>
  [ 86] objcall 41 .............................. <tProducts[f]>
  [ 88] pushcons 5 .............................. <"class">
  [ 90] pusharglist 2 ........................... <tProducts[f], "class">
  [ 92] objcall 41 .............................. <tProducts[f]["class"]>
  [ 94] pusharglist 1 ........................... <tProducts[f]["class"]>
  [ 96] extcall 78 .............................. <voidp(tProducts[f]["class"])>
  [ 98] not ..................................... <not voidp(tProducts[f]["class"])>
  [ 99] jmpifz [229] ............................ if not voidp(tProducts[f]["class"]) then
  [102] getlocal 0 .............................. <tProducts>
  [104] getlocal 1 .............................. <f>
  [106] pusharglist 2 ........................... <tProducts, f>
  [108] objcall 41 .............................. <tProducts[f]>
  [110] pushcons 5 .............................. <"class">
  [112] pusharglist 2 ........................... <tProducts[f], "class">
  [114] objcall 41 .............................. <tProducts[f]["class"]>
  [116] setlocal 2 .............................. tClass = tProducts[f]["class"]
  [118] getlocal 2 .............................. <tClass>
  [120] pushcons 6 .............................. <"*">
  [122] containsstr ............................. <tClass contains "*">
  [123] jmpifz [151] ............................ if tClass contains "*" then
  [126] getlocal 2 .............................. <tClass>
  [128] pushsymb 292 ............................ <#char>
  [131] pushint8 1 .............................. <1>
  [133] pushcons 6 .............................. <"*">
  [135] getlocal 2 .............................. <tClass>
  [137] pusharglist 2 ........................... <"*", tClass>
  [139] extcall 293 ............................. <offset("*", tClass)>
  [142] pushint8 1 .............................. <1>
  [144] sub ..................................... <offset("*", tClass) - 1>
  [145] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [147] objcall 123 ............................. <tClass.char[1..offset("*", tClass) - 1]>
  [149] setlocal 2 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [151] getprop 528 ............................. <pPageData>
  [154] getlocal 2 .............................. <tClass>
  [156] pusharglist 2 ........................... <pPageData, tClass>
  [158] objcall 41 .............................. <pPageData[tClass]>
  [160] pusharglist 1 ........................... <pPageData[tClass]>
  [162] extcall 78 .............................. <voidp(pPageData[tClass])>
  [164] jmpifz [193] ............................ if voidp(pPageData[tClass]) then
  [167] getprop 528 ............................. <pPageData>
  [170] getlocal 2 .............................. <tClass>
  [172] pusharglist 0 ........................... <[:]>
  [174] pushproplist ............................ <[:]>
  [175] pusharglistnoret 3 ...................... <pPageData, tClass, [:]>
  [177] objcall 254 ............................. pPageData[tClass] = [:]
  [179] getprop 528 ............................. <pPageData>
  [182] getlocal 2 .............................. <tClass>
  [184] pusharglist 2 ........................... <pPageData, tClass>
  [186] objcall 41 .............................. <pPageData[tClass]>
  [188] pusharglistnoret 1 ...................... <pPageData[tClass]>
  [190] objcall 493 ............................. pPageData[tClass].sort()
  [193] getprop 528 ............................. <pPageData>
  [196] getlocal 2 .............................. <tClass>
  [198] pusharglist 2 ........................... <pPageData, tClass>
  [200] objcall 41 .............................. <pPageData[tClass]>
  [202] getlocal 0 .............................. <tProducts>
  [204] getlocal 1 .............................. <f>
  [206] pusharglist 2 ........................... <tProducts, f>
  [208] objcall 41 .............................. <tProducts[f]>
  [210] pushcons 5 .............................. <"class">
  [212] pusharglist 2 ........................... <tProducts[f], "class">
  [214] objcall 41 .............................. <tProducts[f]["class"]>
  [216] getlocal 0 .............................. <tProducts>
  [218] getlocal 1 .............................. <f>
  [220] pusharglist 2 ........................... <tProducts, f>
  [222] objcall 41 .............................. <tProducts[f]>
  [224] pusharglistnoret 3 ...................... <pPageData[tClass], tProducts[f]["class"], tProducts[f]>
  [226] objcall 384 ............................. pPageData[tClass].addProp(tProducts[f]["class"], tProducts[f])
  [229] pushint8 1
  [231] getlocal 1
  [233] add
  [234] setlocal 1
  [236] endrepeat [ 70]
  [238] getprop 528 ............................. <pPageData>
  [241] getobjprop 48 ........................... <pPageData.count>
  [243] pushint8 1 .............................. <1>
  [245] gt ...................................... <pPageData.count > 1>
  [246] jmpifz [281] ............................ if pPageData.count > 1 then
  [249] pushint8 1 .............................. <1>
  [251] setprop 979 ............................. pSelectedOrderNum = 1
  [254] pushint8 1 .............................. <1>
  [256] setprop 980 ............................. pSelectedColorNum = 1
  [259] getparam 0 .............................. <me>
  [261] pusharglistnoret 1 ...................... <me>
  [263] localcall 3 ............................. renderSmallIcons(me)
  [265] getparam 0 .............................. <me>
  [267] pushint8 1 .............................. <1>
  [269] pusharglistnoret 2 ...................... <me, 1>
  [271] localcall 5 ............................. selectProduct(me, 1)
  [273] getparam 0 .............................. <me>
  [275] pushint8 1 .............................. <1>
  [277] pusharglistnoret 2 ...................... <me, 1>
  [279] localcall 4 ............................. renderProductColors(me, 1)
  [281] ret
end

on setDate me, tDate
  [  0] pushsymb 559 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 471 ............................. <getThread(#catalogue)>
  [  8] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 10] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 14] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 16] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 18] getlocal 0 .............................. <tCataloguePage>
  [ 20] not ..................................... <not tCataloguePage>
  [ 21] jmpifz [ 40] ............................ if not tCataloguePage then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 28] pushsymb 0 .............................. <#construct>
  [ 30] pushsymb 47 ............................. <#major>
  [ 32] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #construct, #major>
  [ 34] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #construct, #major)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #construct, #major)>
  [ 38] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #construct, #major)
  [ 40] getparam 1 .............................. <tDate>
  [ 42] pusharglist 1 ........................... <tDate>
  [ 44] extcall 284 ............................. <stringp(tDate)>
  [ 47] jmpifz [101] ............................ if stringp(tDate) then
  [ 50] getlocal 0 .............................. <tCataloguePage>
  [ 52] pushcons 7 .............................. <"trophies_date">
  [ 54] pusharglist 2 ........................... <tCataloguePage, "trophies_date">
  [ 56] objcall 253 ............................. <tCataloguePage.elementExists("trophies_date")>
  [ 58] jmpifz [101] ............................ if tCataloguePage.elementExists("trophies_date") then
  [ 61] pushsymb 994 ............................ <#dateFormatter>
  [ 64] pusharglist 1 ........................... <#dateFormatter>
  [ 66] extcall 167 ............................. <objectExists(#dateFormatter)>
  [ 68] jmpifz [ 87] ............................ if objectExists(#dateFormatter) then
  [ 71] pushsymb 994 ............................ <#dateFormatter>
  [ 74] pusharglist 1 ........................... <#dateFormatter>
  [ 76] extcall 184 ............................. <getObject(#dateFormatter)>
  [ 78] getparam 1 .............................. <tDate>
  [ 80] pusharglist 2 ........................... <getObject(#dateFormatter), tDate>
  [ 82] objcall 995 ............................. <getObject(#dateFormatter).getLocalDateFromStr(tDate)>
  [ 85] setparam 1 .............................. tDate = getObject(#dateFormatter).getLocalDateFromStr(tDate)
  [ 87] getlocal 0 .............................. <tCataloguePage>
  [ 89] pushcons 7 .............................. <"trophies_date">
  [ 91] pusharglist 2 ........................... <tCataloguePage, "trophies_date">
  [ 93] objcall 178 ............................. <tCataloguePage.getElement("trophies_date")>
  [ 95] getparam 1 .............................. <tDate>
  [ 97] pusharglistnoret 2 ...................... <tCataloguePage.getElement("trophies_date"), tDate>
  [ 99] objcall 188 ............................. tCataloguePage.getElement("trophies_date").setText(tDate)
  [101] ret
end

on renderSmallIcons me, tstate, tPram
  [  0] pushsymb 559 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 471 ............................. <getThread(#catalogue)>
  [  8] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 10] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 14] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 16] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 18] getlocal 0 .............................. <tCataloguePage>
  [ 20] not ..................................... <not tCataloguePage>
  [ 21] jmpifz [ 41] ............................ if not tCataloguePage then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 28] pushsymb 627 ............................ <#renderSmallIcons>
  [ 31] pushsymb 47 ............................. <#major>
  [ 33] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #renderSmallIcons, #major>
  [ 35] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #renderSmallIcons, #major)>
  [ 37] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #renderSmallIcons, #major)>
  [ 39] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #renderSmallIcons, #major)
  [ 41] getlocal 0 .............................. <tCataloguePage>
  [ 43] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 45] getparam 1 .............................. <tstate>
  [ 47] peek 0 .................................. case tstate of
  [ 49] pusharglist 0 ........................... <>
  [ 51] extcall 55 .............................. <VOID>
  [ 53] eq
  [ 54] jmpifz [142] ............................ (case) VOID:
  [ 57] pushint8 1 .............................. <1>
  [ 59] setlocal 2 .............................. tFirst = 1
  [ 61] getprop 528 ............................. <pPageData>
  [ 64] getobjprop 48 ........................... <pPageData.count>
  [ 66] setlocal 3 .............................. tLast = pPageData.count
  [ 68] pushint8 1 .............................. <1>
  [ 70] setlocal 4
  [ 72] getlocal 4
  [ 74] getprop 528 ............................. <pPageData>
  [ 77] getobjprop 48 ........................... <pPageData.count>
  [ 79] lteq
  [ 80] jmpifz [139] ............................ repeat with f = 1 to pPageData.count
  [ 83] pushcons 8 .............................. <"ctlg_small_img_">
  [ 85] getlocal 4 .............................. <f>
  [ 87] joinstr ................................. <"ctlg_small_img_" & f>
  [ 88] setlocal 5 .............................. tID = "ctlg_small_img_" & f
  [ 90] getlocal 1 .............................. <tWndObj>
  [ 92] getlocal 5 .............................. <tID>
  [ 94] pusharglist 2 ........................... <tWndObj, tID>
  [ 96] objcall 253 ............................. <tWndObj.elementExists(tID)>
  [ 98] jmpifz [130] ............................ if tWndObj.elementExists(tID) then
  [101] getlocal 1 .............................. <tWndObj>
  [103] getlocal 5 .............................. <tID>
  [105] pusharglist 2 ........................... <tWndObj, tID>
  [107] objcall 178 ............................. <tWndObj.getElement(tID)>
  [109] pusharglistnoret 1 ...................... <tWndObj.getElement(tID)>
  [111] objcall 656 ............................. tWndObj.getElement(tID).clearImage()
  [114] getlocal 1 .............................. <tWndObj>
  [116] getlocal 5 .............................. <tID>
  [118] pusharglist 2 ........................... <tWndObj, tID>
  [120] objcall 178 ............................. <tWndObj.getElement(tID)>
  [122] pushsymb 84 ............................. <#ink>
  [124] pushint8 36 ............................. <36>
  [126] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #ink, 36>
  [128] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#ink, 36)
  [130] pushint8 1
  [132] getlocal 4
  [134] add
  [135] setlocal 4
  [137] endrepeat [ 72]
  [139] jmp [302]
  [142] peek 0
  [144] pushsymb 658 ............................ <#hilite>
  [147] nteq
  [148] jmpifz [160] ............................ (case) #hilite, ...
  [151] peek 0
  [153] pushsymb 659 ............................ <#unhilite>
  [156] eq
  [157] jmpifz [171] ............................ (case) ..., #unhilite:
  [160] getparam 2 .............................. <tPram>
  [162] setlocal 2 .............................. tFirst = tPram
  [164] getparam 2 .............................. <tPram>
  [166] setlocal 3 .............................. tLast = tPram
  [168] jmp [302]
  [171] peek 0
  [173] pushsymb 639 ............................ <#furniLoaded>
  [176] eq
  [177] jmpifz [283] ............................ (case) #furniLoaded:
  [180] getprop 528 ............................. <pPageData>
  [183] pusharglist 1 ........................... <pPageData>
  [185] extcall 78 .............................. <voidp(pPageData)>
  [187] jmpifz [196] ............................ if voidp(pPageData) then
  [190] pop 1
  [192] pusharglistnoret 0 ...................... <>
  [194] extcall 37 .............................. return 
  [196] getparam 2 .............................. <tPram>
  [198] setlocal 6 .............................. tFurniName = tPram
  [200] getprop 528 ............................. <pPageData>
  [203] getobjprop 48 ........................... <pPageData.count>
  [205] setlocal 2 .............................. tFirst = pPageData.count
  [207] pushint8 1 .............................. <1>
  [209] setlocal 3 .............................. tLast = 1
  [211] pushint8 1 .............................. <1>
  [213] setlocal 7
  [215] getlocal 7
  [217] getprop 528 ............................. <pPageData>
  [220] getobjprop 48 ........................... <pPageData.count>
  [222] lteq
  [223] jmpifz [280] ............................ repeat with i = 1 to pPageData.count
  [226] getprop 528 ............................. <pPageData>
  [229] getlocal 7 .............................. <i>
  [231] pusharglist 2 ........................... <pPageData, i>
  [233] objcall 41 .............................. <pPageData[i]>
  [235] pushcons 5 .............................. <"class">
  [237] pusharglist 2 ........................... <pPageData[i], "class">
  [239] objcall 41 .............................. <pPageData[i]["class"]>
  [241] getlocal 6 .............................. <tFurniName>
  [243] containsstr ............................. <pPageData[i]["class"] contains tFurniName>
  [244] jmpifz [271] ............................ if pPageData[i]["class"] contains tFurniName then
  [247] getlocal 2 .............................. <tFirst>
  [249] getlocal 7 .............................. <i>
  [251] gt ...................................... <tFirst > i>
  [252] jmpifz [259] ............................ if tFirst > i then
  [255] getlocal 7 .............................. <i>
  [257] setlocal 2 .............................. tFirst = i
  [259] getlocal 3 .............................. <tLast>
  [261] getlocal 7 .............................. <i>
  [263] lt ...................................... <tLast < i>
  [264] jmpifz [271] ............................ if tLast < i then
  [267] getlocal 7 .............................. <i>
  [269] setlocal 3 .............................. tLast = i
  [271] pushint8 1
  [273] getlocal 7
  [275] add
  [276] setlocal 7
  [278] endrepeat [215]
  [280] jmp [302] ............................... (case) otherwise:
  [283] pop 1
  [285] getparam 0 .............................. <me>
  [287] pushcons 9 .............................. <"unsupported mode">
  [289] pushsymb 608 ............................ <#ShowSmallIcons>
  [292] pushsymb 58 ............................. <#minor>
  [294] pusharglist 4 ........................... <me, "unsupported mode", #ShowSmallIcons, #minor>
  [296] extcall 46 .............................. <error(me, "unsupported mode", #ShowSmallIcons, #minor)>
  [298] pusharglistnoret 1 ...................... <error(me, "unsupported mode", #ShowSmallIcons, #minor)>
  [300] extcall 37 .............................. return error(me, "unsupported mode", #ShowSmallIcons, #minor)
  [302] pop 1 ................................... end case
  [304] getlocal 2 .............................. <tFirst>
  [306] pusharglist 1 ........................... <tFirst>
  [308] extcall 78 .............................. <voidp(tFirst)>
  [310] getlocal 3 .............................. <tLast>
  [312] pusharglist 1 ........................... <tLast>
  [314] extcall 78 .............................. <voidp(tLast)>
  [316] or ...................................... <voidp(tFirst) or voidp(tLast)>
  [317] jmpifz [324] ............................ if voidp(tFirst) or voidp(tLast) then
  [320] pusharglistnoret 0 ...................... <>
  [322] extcall 37 .............................. return 
  [324] getlocal 2 .............................. <tFirst>
  [326] pushint8 1 .............................. <1>
  [328] lt ...................................... <tFirst < 1>
  [329] getlocal 3 .............................. <tLast>
  [331] pushint8 1 .............................. <1>
  [333] lt ...................................... <tLast < 1>
  [334] or ...................................... <(tFirst < 1) or (tLast < 1)>
  [335] jmpifz [342] ............................ if (tFirst < 1) or (tLast < 1) then
  [338] pusharglistnoret 0 ...................... <>
  [340] extcall 37 .............................. return 
  [342] getlocal 2 .............................. <tFirst>
  [344] setlocal 4
  [346] getlocal 4
  [348] getlocal 3 .............................. <tLast>
  [350] lteq
  [351] jmpifz [649] ............................ repeat with f = tFirst to tLast
  [354] getprop 528 ............................. <pPageData>
  [357] getlocal 4 .............................. <f>
  [359] pusharglist 2 ........................... <pPageData, f>
  [361] objcall 41 .............................. <pPageData[f]>
  [363] pushint8 1 .............................. <1>
  [365] pusharglist 2 ........................... <pPageData[f], 1>
  [367] objcall 41 .............................. <pPageData[f][1]>
  [369] pushcons 10 ............................. <"smallPrewImg">
  [371] pusharglist 2 ........................... <pPageData[f][1], "smallPrewImg">
  [373] objcall 41 .............................. <pPageData[f][1]["smallPrewImg"]>
  [375] pusharglist 1 ........................... <pPageData[f][1]["smallPrewImg"]>
  [377] extcall 78 .............................. <voidp(pPageData[f][1]["smallPrewImg"])>
  [379] not ..................................... <not voidp(pPageData[f][1]["smallPrewImg"])>
  [380] jmpifz [639] ............................ if not voidp(pPageData[f][1]["smallPrewImg"]) then
  [383] getprop 528 ............................. <pPageData>
  [386] getlocal 4 .............................. <f>
  [388] pusharglist 2 ........................... <pPageData, f>
  [390] objcall 41 .............................. <pPageData[f]>
  [392] pushint8 1 .............................. <1>
  [394] pusharglist 2 ........................... <pPageData[f], 1>
  [396] objcall 41 .............................. <pPageData[f][1]>
  [398] pushcons 10 ............................. <"smallPrewImg">
  [400] pusharglist 2 ........................... <pPageData[f][1], "smallPrewImg">
  [402] objcall 41 .............................. <pPageData[f][1]["smallPrewImg"]>
  [404] setlocal 8 .............................. tmember = pPageData[f][1]["smallPrewImg"]
  [406] pushcons 8 .............................. <"ctlg_small_img_">
  [408] getlocal 4 .............................. <f>
  [410] joinstr ................................. <"ctlg_small_img_" & f>
  [411] setlocal 5 .............................. tID = "ctlg_small_img_" & f
  [413] getlocal 8 .............................. <tmember>
  [415] pushzero ................................ <0>
  [416] nteq .................................... <tmember <> 0>
  [417] jmpifz [639] ............................ if tmember <> 0 then
  [420] getlocal 1 .............................. <tWndObj>
  [422] getlocal 5 .............................. <tID>
  [424] pusharglist 2 ........................... <tWndObj, tID>
  [426] objcall 253 ............................. <tWndObj.elementExists(tID)>
  [428] jmpifz [639] ............................ if tWndObj.elementExists(tID) then
  [431] getprop 978 ............................. <pSmallImg>
  [434] getprop 978 ............................. <pSmallImg>
  [437] getobjprop 69 ........................... <pSmallImg.rect>
  [439] pushint16 255 ........................... <255>
  [442] pushint16 255 ........................... <255>
  [445] pushint16 255 ........................... <255>
  [448] pusharglist 3 ........................... <255, 255, 255>
  [450] extcall 27 .............................. <rgb(255, 255, 255)>
  [452] pusharglistnoret 3 ...................... <pSmallImg, pSmallImg.rect, rgb(255, 255, 255)>
  [454] objcall 72 .............................. pSmallImg.fill(pSmallImg.rect, rgb(255, 255, 255))
  [456] getparam 1 .............................. <tstate>
  [458] pusharglist 1 ........................... <tstate>
  [460] extcall 78 .............................. <voidp(tstate)>
  [462] not ..................................... <not voidp(tstate)>
  [463] jmpifz [510] ............................ if not voidp(tstate) then
  [466] getparam 1 .............................. <tstate>
  [468] pushsymb 658 ............................ <#hilite>
  [471] eq ...................................... <tstate = #hilite>
  [472] pushcons 11 ............................. <"ctlg_small_active2_bg">
  [474] pusharglist 1 ........................... <"ctlg_small_active2_bg">
  [476] extcall 63 .............................. <memberExists("ctlg_small_active2_bg")>
  [478] and ..................................... <(tstate = #hilite) and memberExists("ctlg_small_active2_bg")>
  [479] jmpifz [510] ............................ if (tstate = #hilite) and memberExists("ctlg_small_active2_bg") then
  [482] pushcons 11 ............................. <"ctlg_small_active2_bg">
  [484] pusharglist 1 ........................... <"ctlg_small_active2_bg">
  [486] extcall 255 ............................. <member("ctlg_small_active2_bg")>
  [488] getobjprop 17 ........................... <member("ctlg_small_active2_bg").image>
  [490] setlocal 9 .............................. tBgImage = member("ctlg_small_active2_bg").image
  [492] getprop 978 ............................. <pSmallImg>
  [495] getlocal 9 .............................. <tBgImage>
  [497] getlocal 9 .............................. <tBgImage>
  [499] getobjprop 69 ........................... <tBgImage.rect>
  [501] getprop 978 ............................. <pSmallImg>
  [504] getobjprop 69 ........................... <pSmallImg.rect>
  [506] pusharglistnoret 4 ...................... <pSmallImg, tBgImage, tBgImage.rect, pSmallImg.rect>
  [508] objcall 77 .............................. pSmallImg.copyPixels(tBgImage, tBgImage.rect, pSmallImg.rect)
  [510] getlocal 8 .............................. <tmember>
  [512] pusharglist 1 ........................... <tmember>
  [514] extcall 255 ............................. <member(tmember)>
  [516] getobjprop 17 ........................... <member(tmember).image>
  [518] setlocal 10 ............................. tTempSmallImg = member(tmember).image
  [520] getprop 978 ............................. <pSmallImg>
  [523] getobjprop 69 ........................... <pSmallImg.rect>
  [525] getlocal 10 ............................. <tTempSmallImg>
  [527] getobjprop 69 ........................... <tTempSmallImg.rect>
  [529] sub ..................................... <pSmallImg.rect - tTempSmallImg.rect>
  [530] setlocal 11 ............................. tdestrect = pSmallImg.rect - tTempSmallImg.rect
  [532] pushzero ................................ <0>
  [533] pushzero ................................ <0>
  [534] pushzero ................................ <0>
  [535] pushzero ................................ <0>
  [536] pusharglist 4 ........................... <0, 0, 0, 0>
  [538] extcall 69 .............................. <rect(0, 0, 0, 0)>
  [540] setlocal 12 ............................. tMargins = rect(0, 0, 0, 0)
  [542] getlocal 11 ............................. <tdestrect>
  [544] getobjprop 33 ........................... <tdestrect.width>
  [546] pushint8 2 .............................. <2>
  [548] div ..................................... <tdestrect.width / 2>
  [549] getlocal 11 ............................. <tdestrect>
  [551] getobjprop 34 ........................... <tdestrect.height>
  [553] pushint8 2 .............................. <2>
  [555] div ..................................... <tdestrect.height / 2>
  [556] getlocal 10 ............................. <tTempSmallImg>
  [558] getobjprop 33 ........................... <tTempSmallImg.width>
  [560] getlocal 11 ............................. <tdestrect>
  [562] getobjprop 33 ........................... <tdestrect.width>
  [564] pushint8 2 .............................. <2>
  [566] div ..................................... <tdestrect.width / 2>
  [567] add ..................................... <tTempSmallImg.width + (tdestrect.width / 2)>
  [568] getlocal 11 ............................. <tdestrect>
  [570] getobjprop 34 ........................... <tdestrect.height>
  [572] pushint8 2 .............................. <2>
  [574] div ..................................... <tdestrect.height / 2>
  [575] getlocal 10 ............................. <tTempSmallImg>
  [577] getobjprop 34 ........................... <tTempSmallImg.height>
  [579] add ..................................... <(tdestrect.height / 2) + tTempSmallImg.height>
  [580] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height>
  [582] extcall 69 .............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height)>
  [584] getlocal 12 ............................. <tMargins>
  [586] add ..................................... <rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height) + tMargins>
  [587] setlocal 11 ............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height) + tMargins
  [589] getprop 978 ............................. <pSmallImg>
  [592] getlocal 10 ............................. <tTempSmallImg>
  [594] getlocal 11 ............................. <tdestrect>
  [596] getlocal 10 ............................. <tTempSmallImg>
  [598] getobjprop 69 ........................... <tTempSmallImg.rect>
  [600] pushsymb 84 ............................. <#ink>
  [602] pushint8 36 ............................. <36>
  [604] pusharglist 2 ........................... <[#ink: 36]>
  [606] pushproplist ............................ <[#ink: 36]>
  [607] pusharglistnoret 5 ...................... <pSmallImg, tTempSmallImg, tdestrect, tTempSmallImg.rect, [#ink: 36]>
  [609] objcall 77 .............................. pSmallImg.copyPixels(tTempSmallImg, tdestrect, tTempSmallImg.rect, [#ink: 36])
  [611] getlocal 1 .............................. <tWndObj>
  [613] getlocal 5 .............................. <tID>
  [615] pusharglist 2 ........................... <tWndObj, tID>
  [617] objcall 178 ............................. <tWndObj.getElement(tID)>
  [619] pusharglistnoret 1 ...................... <tWndObj.getElement(tID)>
  [621] objcall 656 ............................. tWndObj.getElement(tID).clearImage()
  [624] getlocal 1 .............................. <tWndObj>
  [626] getlocal 5 .............................. <tID>
  [628] pusharglist 2 ........................... <tWndObj, tID>
  [630] objcall 178 ............................. <tWndObj.getElement(tID)>
  [632] getprop 978 ............................. <pSmallImg>
  [635] pusharglistnoret 2 ...................... <tWndObj.getElement(tID), pSmallImg>
  [637] objcall 118 ............................. tWndObj.getElement(tID).feedImage(pSmallImg)
  [639] pushint8 1
  [641] getlocal 4
  [643] add
  [644] setlocal 4
  [646] endrepeat [346]
  [649] pushint8 1 .............................. <1>
  [651] pusharglistnoret 1 ...................... <1>
  [653] extcall 37 .............................. return 1
  [655] ret
end

on renderProductColors me, tOrderNum
  [  0] getparam 1 .............................. <tOrderNum>
  [  2] pusharglist 1 ........................... <tOrderNum>
  [  4] extcall 187 ............................. <integerp(tOrderNum)>
  [  6] not ..................................... <not integerp(tOrderNum)>
  [  7] jmpifz [ 27] ............................ if not integerp(tOrderNum) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 12 ............................. <"Incorrect value">
  [ 14] pushsymb 976 ............................ <#renderProductColors>
  [ 17] pushsymb 47 ............................. <#major>
  [ 19] pusharglist 4 ........................... <me, "Incorrect value", #renderProductColors, #major>
  [ 21] extcall 46 .............................. <error(me, "Incorrect value", #renderProductColors, #major)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #renderProductColors, #major)>
  [ 25] extcall 37 .............................. return error(me, "Incorrect value", #renderProductColors, #major)
  [ 27] getprop 528 ............................. <pPageData>
  [ 30] getobjprop 43 ........................... <pPageData.ilk>
  [ 32] pushsymb 45 ............................. <#propList>
  [ 34] nteq .................................... <pPageData.ilk <> #propList>
  [ 35] jmpifz [ 55] ............................ if pPageData.ilk <> #propList then
  [ 38] getparam 0 .............................. <me>
  [ 40] pushcons 13 ............................. <"page data not found">
  [ 42] pushsymb 976 ............................ <#renderProductColors>
  [ 45] pushsymb 47 ............................. <#major>
  [ 47] pusharglist 4 ........................... <me, "page data not found", #renderProductColors, #major>
  [ 49] extcall 46 .............................. <error(me, "page data not found", #renderProductColors, #major)>
  [ 51] pusharglistnoret 1 ...................... <error(me, "page data not found", #renderProductColors, #major)>
  [ 53] extcall 37 .............................. return error(me, "page data not found", #renderProductColors, #major)
  [ 55] pushsymb 559 ............................ <#catalogue>
  [ 58] pusharglist 1 ........................... <#catalogue>
  [ 60] extcall 471 ............................. <getThread(#catalogue)>
  [ 63] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 65] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 67] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 69] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 71] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 73] getlocal 0 .............................. <tCataloguePage>
  [ 75] not ..................................... <not tCataloguePage>
  [ 76] jmpifz [ 95] ............................ if not tCataloguePage then
  [ 79] getparam 0 .............................. <me>
  [ 81] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 83] pushsymb 0 .............................. <#construct>
  [ 85] pushsymb 47 ............................. <#major>
  [ 87] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #construct, #major>
  [ 89] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #construct, #major)>
  [ 91] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #construct, #major)>
  [ 93] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #construct, #major)
  [ 95] getlocal 0 .............................. <tCataloguePage>
  [ 97] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 99] pushint8 1 .............................. <1>
  [101] setlocal 2
  [103] getlocal 2
  [105] getprop 981 ............................. <pNumOfColorBoxies>
  [108] lteq
  [109] jmpifz [216] ............................ repeat with f = 1 to pNumOfColorBoxies
  [112] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [114] getlocal 2 .............................. <f>
  [116] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [117] setlocal 3 .............................. tID = "ctlg_selectcolor_bg_" & f
  [119] getlocal 0 .............................. <tCataloguePage>
  [121] getlocal 3 .............................. <tID>
  [123] pusharglist 2 ........................... <tCataloguePage, tID>
  [125] objcall 253 ............................. <tCataloguePage.elementExists(tID)>
  [127] jmpifz [172] ............................ if tCataloguePage.elementExists(tID) then
  [130] pushzero ................................ <0>
  [131] pusharglist 1 ........................... <0>
  [133] extcall 874 ............................. <paletteIndex(0)>
  [136] setlocal 4 .............................. tColor = paletteIndex(0)
  [138] getlocal 1 .............................. <tWndObj>
  [140] getlocal 3 .............................. <tID>
  [142] pusharglist 2 ........................... <tWndObj, tID>
  [144] objcall 178 ............................. <tWndObj.getElement(tID)>
  [146] pushsymb 851 ............................ <#bgColor>
  [149] getlocal 4 .............................. <tColor>
  [151] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #bgColor, tColor>
  [153] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#bgColor, tColor)
  [155] getlocal 1 .............................. <tWndObj>
  [157] getlocal 3 .............................. <tID>
  [159] pusharglist 2 ........................... <tWndObj, tID>
  [161] objcall 178 ............................. <tWndObj.getElement(tID)>
  [163] pushsymb 850 ............................ <#blend>
  [166] pushint8 30 ............................. <30>
  [168] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #blend, 30>
  [170] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#blend, 30)
  [172] pushcons 14 ............................. <"ctlg_selectcolor_">
  [174] getlocal 2 .............................. <f>
  [176] joinstr ................................. <"ctlg_selectcolor_" & f>
  [177] setlocal 3 .............................. tID = "ctlg_selectcolor_" & f
  [179] getlocal 0 .............................. <tCataloguePage>
  [181] getlocal 3 .............................. <tID>
  [183] pusharglist 2 ........................... <tCataloguePage, tID>
  [185] objcall 253 ............................. <tCataloguePage.elementExists(tID)>
  [187] jmpifz [207] ............................ if tCataloguePage.elementExists(tID) then
  [190] getlocal 1 .............................. <tWndObj>
  [192] getlocal 3 .............................. <tID>
  [194] pusharglist 2 ........................... <tWndObj, tID>
  [196] objcall 178 ............................. <tWndObj.getElement(tID)>
  [198] pushsymb 850 ............................ <#blend>
  [201] pushint8 30 ............................. <30>
  [203] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #blend, 30>
  [205] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#blend, 30)
  [207] pushint8 1
  [209] getlocal 2
  [211] add
  [212] setlocal 2
  [214] endrepeat [103]
  [216] getparam 1 .............................. <tOrderNum>
  [218] getprop 528 ............................. <pPageData>
  [221] getobjprop 48 ........................... <pPageData.count>
  [223] lteq .................................... <tOrderNum <= pPageData.count>
  [224] jmpifz [471] ............................ if tOrderNum <= pPageData.count then
  [227] getprop 528 ............................. <pPageData>
  [230] getparam 1 .............................. <tOrderNum>
  [232] pusharglist 2 ........................... <pPageData, tOrderNum>
  [234] objcall 41 .............................. <pPageData[tOrderNum]>
  [236] setlocal 5 .............................. tProducts = pPageData[tOrderNum]
  [238] pushint8 1 .............................. <1>
  [240] setlocal 2
  [242] getlocal 2
  [244] getlocal 5 .............................. <tProducts>
  [246] getobjprop 48 ........................... <tProducts.count>
  [248] lteq
  [249] jmpifz [471] ............................ repeat with f = 1 to tProducts.count
  [252] getlocal 5 .............................. <tProducts>
  [254] getlocal 2 .............................. <f>
  [256] pusharglist 2 ........................... <tProducts, f>
  [258] objcall 41 .............................. <tProducts[f]>
  [260] pushcons 15 ............................. <"partColors">
  [262] pusharglist 2 ........................... <tProducts[f], "partColors">
  [264] objcall 41 .............................. <tProducts[f]["partColors"]>
  [266] pusharglist 1 ........................... <tProducts[f]["partColors"]>
  [268] extcall 78 .............................. <voidp(tProducts[f]["partColors"])>
  [270] not ..................................... <not voidp(tProducts[f]["partColors"])>
  [271] jmpifz [462] ............................ if not voidp(tProducts[f]["partColors"]) then
  [274] getmovieprop 641 ........................ <the itemDelimiter>
  [277] setlocal 6 .............................. tItemDeLimiter = the itemDelimiter
  [279] pushcons 16 ............................. <",">
  [281] setmovieprop 641 ........................ the itemDelimiter = ","
  [284] getlocal 5 .............................. <tProducts>
  [286] getlocal 2 .............................. <f>
  [288] pusharglist 2 ........................... <tProducts, f>
  [290] objcall 41 .............................. <tProducts[f]>
  [292] pushcons 15 ............................. <"partColors">
  [294] pusharglist 2 ........................... <tProducts[f], "partColors">
  [296] objcall 41 .............................. <tProducts[f]["partColors"]>
  [298] pushsymb 352 ............................ <#item>
  [301] getlocal 5 .............................. <tProducts>
  [303] getlocal 2 .............................. <f>
  [305] pusharglist 2 ........................... <tProducts, f>
  [307] objcall 41 .............................. <tProducts[f]>
  [309] pushcons 15 ............................. <"partColors">
  [311] pusharglist 2 ........................... <tProducts[f], "partColors">
  [313] objcall 41 .............................. <tProducts[f]["partColors"]>
  [315] pushsymb 352 ............................ <#item>
  [318] pusharglist 2 ........................... <tProducts[f]["partColors"], #item>
  [320] objcall 48 .............................. <tProducts[f]["partColors"].item.count>
  [322] pusharglist 3 ........................... <tProducts[f]["partColors"], #item, tProducts[f]["partColors"].item.count>
  [324] objcall 123 ............................. <tProducts[f]["partColors"].item[tProducts[f]["partColors"].item.count]>
  [326] setlocal 4 .............................. tColor = tProducts[f]["partColors"].item[tProducts[f]["partColors"].item.count]
  [328] getlocal 6 .............................. <tItemDeLimiter>
  [330] setmovieprop 641 ........................ the itemDelimiter = tItemDeLimiter
  [333] getlocal 4 .............................. <tColor>
  [335] pushsymb 292 ............................ <#char>
  [338] pushint8 1 .............................. <1>
  [340] pusharglist 3 ........................... <tColor, #char, 1>
  [342] objcall 123 ............................. <tColor.char[1]>
  [344] pushcons 17 ............................. <"#">
  [346] eq ...................................... <tColor.char[1] = "#">
  [347] jmpifz [361] ............................ if tColor.char[1] = "#" then / else
  [350] getlocal 4 .............................. <tColor>
  [352] pusharglist 1 ........................... <tColor>
  [354] extcall 27 .............................. <rgb(tColor)>
  [356] setlocal 4 .............................. tColor = rgb(tColor)
  [358] jmp [375]
  [361] getlocal 4 .............................. <tColor>
  [363] pusharglist 1 ........................... <tColor>
  [365] extcall 382 ............................. <integer(tColor)>
  [368] pusharglist 1 ........................... <integer(tColor)>
  [370] extcall 874 ............................. <paletteIndex(integer(tColor))>
  [373] setlocal 4 .............................. tColor = paletteIndex(integer(tColor))
  [375] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [377] getlocal 2 .............................. <f>
  [379] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [380] setlocal 3 .............................. tID = "ctlg_selectcolor_bg_" & f
  [382] getlocal 1 .............................. <tWndObj>
  [384] getlocal 3 .............................. <tID>
  [386] pusharglist 2 ........................... <tWndObj, tID>
  [388] objcall 253 ............................. <tWndObj.elementExists(tID)>
  [390] jmpifz [427] ............................ if tWndObj.elementExists(tID) then
  [393] getlocal 1 .............................. <tWndObj>
  [395] getlocal 3 .............................. <tID>
  [397] pusharglist 2 ........................... <tWndObj, tID>
  [399] objcall 178 ............................. <tWndObj.getElement(tID)>
  [401] pushsymb 851 ............................ <#bgColor>
  [404] getlocal 4 .............................. <tColor>
  [406] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #bgColor, tColor>
  [408] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#bgColor, tColor)
  [410] getlocal 1 .............................. <tWndObj>
  [412] getlocal 3 .............................. <tID>
  [414] pusharglist 2 ........................... <tWndObj, tID>
  [416] objcall 178 ............................. <tWndObj.getElement(tID)>
  [418] pushsymb 850 ............................ <#blend>
  [421] pushint8 100 ............................ <100>
  [423] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #blend, 100>
  [425] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#blend, 100)
  [427] pushcons 14 ............................. <"ctlg_selectcolor_">
  [429] getlocal 2 .............................. <f>
  [431] joinstr ................................. <"ctlg_selectcolor_" & f>
  [432] setlocal 3 .............................. tID = "ctlg_selectcolor_" & f
  [434] getlocal 0 .............................. <tCataloguePage>
  [436] getlocal 3 .............................. <tID>
  [438] pusharglist 2 ........................... <tCataloguePage, tID>
  [440] objcall 253 ............................. <tCataloguePage.elementExists(tID)>
  [442] jmpifz [462] ............................ if tCataloguePage.elementExists(tID) then
  [445] getlocal 1 .............................. <tWndObj>
  [447] getlocal 3 .............................. <tID>
  [449] pusharglist 2 ........................... <tWndObj, tID>
  [451] objcall 178 ............................. <tWndObj.getElement(tID)>
  [453] pushsymb 850 ............................ <#blend>
  [456] pushint8 100 ............................ <100>
  [458] pusharglistnoret 3 ...................... <tWndObj.getElement(tID), #blend, 100>
  [460] objcall 201 ............................. tWndObj.getElement(tID).setProperty(#blend, 100)
  [462] pushint8 1
  [464] getlocal 2
  [466] add
  [467] setlocal 2
  [469] endrepeat [242]
  [471] ret
end

on selectProduct me, tOrderNum
  [  0] pushsymb 559 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 471 ............................. <getThread(#catalogue)>
  [  8] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 10] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 14] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 16] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 18] getlocal 0 .............................. <tCataloguePage>
  [ 20] not ..................................... <not tCataloguePage>
  [ 21] jmpifz [ 41] ............................ if not tCataloguePage then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 28] pushsymb 610 ............................ <#selectProduct>
  [ 31] pushsymb 47 ............................. <#major>
  [ 33] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #selectProduct, #major>
  [ 35] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #selectProduct, #major)>
  [ 37] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #selectProduct, #major)>
  [ 39] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #selectProduct, #major)
  [ 41] getlocal 0 .............................. <tCataloguePage>
  [ 43] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 45] getparam 1 .............................. <tOrderNum>
  [ 47] pusharglist 1 ........................... <tOrderNum>
  [ 49] extcall 187 ............................. <integerp(tOrderNum)>
  [ 51] not ..................................... <not integerp(tOrderNum)>
  [ 52] jmpifz [ 72] ............................ if not integerp(tOrderNum) then
  [ 55] getparam 0 .............................. <me>
  [ 57] pushcons 12 ............................. <"Incorrect value">
  [ 59] pushsymb 610 ............................ <#selectProduct>
  [ 62] pushsymb 47 ............................. <#major>
  [ 64] pusharglist 4 ........................... <me, "Incorrect value", #selectProduct, #major>
  [ 66] extcall 46 .............................. <error(me, "Incorrect value", #selectProduct, #major)>
  [ 68] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #selectProduct, #major)>
  [ 70] extcall 37 .............................. return error(me, "Incorrect value", #selectProduct, #major)
  [ 72] getprop 528 ............................. <pPageData>
  [ 75] pusharglist 1 ........................... <pPageData>
  [ 77] extcall 78 .............................. <voidp(pPageData)>
  [ 79] jmpifz [ 99] ............................ if voidp(pPageData) then
  [ 82] getparam 0 .............................. <me>
  [ 84] pushcons 18 ............................. <"product not found">
  [ 86] pushsymb 610 ............................ <#selectProduct>
  [ 89] pushsymb 47 ............................. <#major>
  [ 91] pusharglist 4 ........................... <me, "product not found", #selectProduct, #major>
  [ 93] extcall 46 .............................. <error(me, "product not found", #selectProduct, #major)>
  [ 95] pusharglistnoret 1 ...................... <error(me, "product not found", #selectProduct, #major)>
  [ 97] extcall 37 .............................. return error(me, "product not found", #selectProduct, #major)
  [ 99] getparam 1 .............................. <tOrderNum>
  [101] getprop 528 ............................. <pPageData>
  [104] getobjprop 48 ........................... <pPageData.count>
  [106] gt ...................................... <tOrderNum > pPageData.count>
  [107] jmpifz [114] ............................ if tOrderNum > pPageData.count then
  [110] pusharglistnoret 0 ...................... <>
  [112] extcall 37 .............................. return 
  [114] getprop 528 ............................. <pPageData>
  [117] getparam 1 .............................. <tOrderNum>
  [119] pusharglist 2 ........................... <pPageData, tOrderNum>
  [121] objcall 41 .............................. <pPageData[tOrderNum]>
  [123] pushint8 1 .............................. <1>
  [125] pusharglist 2 ........................... <pPageData[tOrderNum], 1>
  [127] objcall 41 .............................. <pPageData[tOrderNum][1]>
  [129] pusharglist 1 ........................... <pPageData[tOrderNum][1]>
  [131] extcall 78 .............................. <voidp(pPageData[tOrderNum][1])>
  [133] jmpifz [140] ............................ if voidp(pPageData[tOrderNum][1]) then
  [136] pusharglistnoret 0 ...................... <>
  [138] extcall 37 .............................. return 
  [140] getprop 528 ............................. <pPageData>
  [143] getparam 1 .............................. <tOrderNum>
  [145] pusharglist 2 ........................... <pPageData, tOrderNum>
  [147] objcall 41 .............................. <pPageData[tOrderNum]>
  [149] pushint8 1 .............................. <1>
  [151] pusharglist 2 ........................... <pPageData[tOrderNum], 1>
  [153] objcall 41 .............................. <pPageData[tOrderNum][1]>
  [155] setprop 252 ............................. pSelectedProduct = pPageData[tOrderNum][1]
  [157] pushint8 1 .............................. <1>
  [159] setprop 980 ............................. pSelectedColorNum = 1
  [162] getparam 1 .............................. <tOrderNum>
  [164] setprop 979 ............................. pSelectedOrderNum = tOrderNum
  [167] getparam 0 .............................. <me>
  [169] getparam 1 .............................. <tOrderNum>
  [171] pusharglistnoret 2 ...................... <me, tOrderNum>
  [173] localcall 4 ............................. renderProductColors(me, tOrderNum)
  [175] pushsymb 559 ............................ <#catalogue>
  [178] pusharglist 1 ........................... <#catalogue>
  [180] extcall 471 ............................. <getThread(#catalogue)>
  [183] pusharglist 1 ........................... <getThread(#catalogue)>
  [185] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [187] getprop 252 ............................. <pSelectedProduct>
  [189] pusharglistnoret 2 ...................... <getThread(#catalogue).getInterface(), pSelectedProduct>
  [191] objcall 144 ............................. getThread(#catalogue).getInterface().showPreviewImage(pSelectedProduct)
  [193] getprop 252 ............................. <pSelectedProduct>
  [195] pushcons 19 ............................. <"name">
  [197] pusharglist 2 ........................... <pSelectedProduct, "name">
  [199] objcall 41 .............................. <pSelectedProduct["name"]>
  [201] pusharglist 1 ........................... <pSelectedProduct["name"]>
  [203] extcall 78 .............................. <voidp(pSelectedProduct["name"])>
  [205] not ..................................... <not voidp(pSelectedProduct["name"])>
  [206] jmpifz [240] ............................ if not voidp(pSelectedProduct["name"]) then
  [209] getlocal 1 .............................. <tWndObj>
  [211] pushcons 20 ............................. <"ctlg_product_name">
  [213] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [215] objcall 253 ............................. <tWndObj.elementExists("ctlg_product_name")>
  [217] jmpifz [240] ............................ if tWndObj.elementExists("ctlg_product_name") then
  [220] getlocal 1 .............................. <tWndObj>
  [222] pushcons 20 ............................. <"ctlg_product_name">
  [224] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [226] objcall 178 ............................. <tWndObj.getElement("ctlg_product_name")>
  [228] getprop 252 ............................. <pSelectedProduct>
  [230] pushcons 19 ............................. <"name">
  [232] pusharglist 2 ........................... <pSelectedProduct, "name">
  [234] objcall 41 .............................. <pSelectedProduct["name"]>
  [236] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_product_name"), pSelectedProduct["name"]>
  [238] objcall 188 ............................. tWndObj.getElement("ctlg_product_name").setText(pSelectedProduct["name"])
  [240] getprop 252 ............................. <pSelectedProduct>
  [242] pushcons 21 ............................. <"description">
  [244] pusharglist 2 ........................... <pSelectedProduct, "description">
  [246] objcall 41 .............................. <pSelectedProduct["description"]>
  [248] pusharglist 1 ........................... <pSelectedProduct["description"]>
  [250] extcall 78 .............................. <voidp(pSelectedProduct["description"])>
  [252] not ..................................... <not voidp(pSelectedProduct["description"])>
  [253] jmpifz [287] ............................ if not voidp(pSelectedProduct["description"]) then
  [256] getlocal 1 .............................. <tWndObj>
  [258] pushcons 22 ............................. <"ctlg_description">
  [260] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [262] objcall 253 ............................. <tWndObj.elementExists("ctlg_description")>
  [264] jmpifz [287] ............................ if tWndObj.elementExists("ctlg_description") then
  [267] getlocal 1 .............................. <tWndObj>
  [269] pushcons 22 ............................. <"ctlg_description">
  [271] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [273] objcall 178 ............................. <tWndObj.getElement("ctlg_description")>
  [275] getprop 252 ............................. <pSelectedProduct>
  [277] pushcons 21 ............................. <"description">
  [279] pusharglist 2 ........................... <pSelectedProduct, "description">
  [281] objcall 41 .............................. <pSelectedProduct["description"]>
  [283] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_description"), pSelectedProduct["description"]>
  [285] objcall 188 ............................. tWndObj.getElement("ctlg_description").setText(pSelectedProduct["description"])
  [287] getprop 252 ............................. <pSelectedProduct>
  [289] pushcons 23 ............................. <"price">
  [291] pusharglist 2 ........................... <pSelectedProduct, "price">
  [293] objcall 41 .............................. <pSelectedProduct["price"]>
  [295] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [297] extcall 78 .............................. <voidp(pSelectedProduct["price"])>
  [299] not ..................................... <not voidp(pSelectedProduct["price"])>
  [300] jmpifz [388] ............................ if not voidp(pSelectedProduct["price"]) then
  [303] getlocal 1 .............................. <tWndObj>
  [305] pushcons 24 ............................. <"ctlg_price_1">
  [307] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [309] objcall 253 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [311] jmpifz [388] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [314] getprop 252 ............................. <pSelectedProduct>
  [316] pushcons 23 ............................. <"price">
  [318] pusharglist 2 ........................... <pSelectedProduct, "price">
  [320] objcall 41 .............................. <pSelectedProduct["price"]>
  [322] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [324] extcall 266 ............................. <value(pSelectedProduct["price"])>
  [327] pushint8 1 .............................. <1>
  [329] gt ...................................... <value(pSelectedProduct["price"]) > 1>
  [330] jmpifz [355] ............................ if value(pSelectedProduct["price"]) > 1 then / else
  [333] getprop 252 ............................. <pSelectedProduct>
  [335] pushcons 23 ............................. <"price">
  [337] pusharglist 2 ........................... <pSelectedProduct, "price">
  [339] objcall 41 .............................. <pSelectedProduct["price"]>
  [341] pushcons 25 ............................. <"credits">
  [343] pushcons 25 ............................. <"credits">
  [345] pusharglist 2 ........................... <"credits", "credits">
  [347] extcall 158 ............................. <getText("credits", "credits")>
  [349] joinpadstr .............................. <pSelectedProduct["price"] && getText("credits", "credits")>
  [350] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credits", "credits")
  [352] jmp [374]
  [355] getprop 252 ............................. <pSelectedProduct>
  [357] pushcons 23 ............................. <"price">
  [359] pusharglist 2 ........................... <pSelectedProduct, "price">
  [361] objcall 41 .............................. <pSelectedProduct["price"]>
  [363] pushcons 26 ............................. <"credit">
  [365] pushcons 26 ............................. <"credit">
  [367] pusharglist 2 ........................... <"credit", "credit">
  [369] extcall 158 ............................. <getText("credit", "credit")>
  [371] joinpadstr .............................. <pSelectedProduct["price"] && getText("credit", "credit")>
  [372] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credit", "credit")
  [374] getlocal 1 .............................. <tWndObj>
  [376] pushcons 24 ............................. <"ctlg_price_1">
  [378] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [380] objcall 178 ............................. <tWndObj.getElement("ctlg_price_1")>
  [382] getlocal 2 .............................. <tText>
  [384] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [386] objcall 188 ............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [388] getlocal 1 .............................. <tWndObj>
  [390] pushcons 27 ............................. <"ctlg_buy_button">
  [392] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [394] objcall 253 ............................. <tWndObj.elementExists("ctlg_buy_button")>
  [396] jmpifz [416] ............................ if tWndObj.elementExists("ctlg_buy_button") then
  [399] getlocal 1 .............................. <tWndObj>
  [401] pushcons 27 ............................. <"ctlg_buy_button">
  [403] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [405] objcall 178 ............................. <tWndObj.getElement("ctlg_buy_button")>
  [407] pushsymb 624 ............................ <#visible>
  [410] pushint8 1 .............................. <1>
  [412] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_button"), #visible, 1>
  [414] objcall 201 ............................. tWndObj.getElement("ctlg_buy_button").setProperty(#visible, 1)
  [416] getparam 0 .............................. <me>
  [418] pushsymb 658 ............................ <#hilite>
  [421] getparam 1 .............................. <tOrderNum>
  [423] pusharglistnoret 3 ...................... <me, #hilite, tOrderNum>
  [425] localcall 3 ............................. renderSmallIcons(me, #hilite, tOrderNum)
  [427] getparam 0 .............................. <me>
  [429] pushsymb 659 ............................ <#unhilite>
  [432] getprop 645 ............................. <pLastProductNum>
  [435] pusharglistnoret 3 ...................... <me, #unhilite, pLastProductNum>
  [437] localcall 3 ............................. renderSmallIcons(me, #unhilite, pLastProductNum)
  [439] getprop 979 ............................. <pSelectedOrderNum>
  [442] setprop 645 ............................. pLastProductNum = pSelectedOrderNum
  [445] ret
end

on nextProduct me
  [  0] getprop 528 ............................. <pPageData>
  [  3] getobjprop 43 ........................... <pPageData.ilk>
  [  5] pushsymb 45 ............................. <#propList>
  [  7] nteq .................................... <pPageData.ilk <> #propList>
  [  8] jmpifz [ 28] ............................ if pPageData.ilk <> #propList then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 28 ............................. <"Incorrect data">
  [ 15] pushsymb 988 ............................ <#nextProduct>
  [ 18] pushsymb 47 ............................. <#major>
  [ 20] pusharglist 4 ........................... <me, "Incorrect data", #nextProduct, #major>
  [ 22] extcall 46 .............................. <error(me, "Incorrect data", #nextProduct, #major)>
  [ 24] pusharglistnoret 1 ...................... <error(me, "Incorrect data", #nextProduct, #major)>
  [ 26] extcall 37 .............................. return error(me, "Incorrect data", #nextProduct, #major)
  [ 28] getprop 645 ............................. <pLastProductNum>
  [ 31] pushint8 1 .............................. <1>
  [ 33] add ..................................... <pLastProductNum + 1>
  [ 34] setlocal 0 .............................. tNext = pLastProductNum + 1
  [ 36] getlocal 0 .............................. <tNext>
  [ 38] getprop 528 ............................. <pPageData>
  [ 41] getobjprop 48 ........................... <pPageData.count>
  [ 43] gt ...................................... <tNext > pPageData.count>
  [ 44] jmpifz [ 54] ............................ if tNext > pPageData.count then
  [ 47] getprop 528 ............................. <pPageData>
  [ 50] getobjprop 48 ........................... <pPageData.count>
  [ 52] setlocal 0 .............................. tNext = pPageData.count
  [ 54] getlocal 0 .............................. <tNext>
  [ 56] setprop 979 ............................. pSelectedOrderNum = tNext
  [ 59] pushint8 1 .............................. <1>
  [ 61] setprop 980 ............................. pSelectedColorNum = 1
  [ 64] getparam 0 .............................. <me>
  [ 66] getlocal 0 .............................. <tNext>
  [ 68] pusharglistnoret 2 ...................... <me, tNext>
  [ 70] localcall 5 ............................. selectProduct(me, tNext)
  [ 72] getparam 0 .............................. <me>
  [ 74] getlocal 0 .............................. <tNext>
  [ 76] pusharglistnoret 2 ...................... <me, tNext>
  [ 78] localcall 4 ............................. renderProductColors(me, tNext)
  [ 80] ret
end

on prevProduct me
  [  0] getprop 528 ............................. <pPageData>
  [  3] getobjprop 43 ........................... <pPageData.ilk>
  [  5] pushsymb 45 ............................. <#propList>
  [  7] nteq .................................... <pPageData.ilk <> #propList>
  [  8] jmpifz [ 28] ............................ if pPageData.ilk <> #propList then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 28 ............................. <"Incorrect data">
  [ 15] pushsymb 997 ............................ <#prewProduct>
  [ 18] pushsymb 47 ............................. <#major>
  [ 20] pusharglist 4 ........................... <me, "Incorrect data", #prewProduct, #major>
  [ 22] extcall 46 .............................. <error(me, "Incorrect data", #prewProduct, #major)>
  [ 24] pusharglistnoret 1 ...................... <error(me, "Incorrect data", #prewProduct, #major)>
  [ 26] extcall 37 .............................. return error(me, "Incorrect data", #prewProduct, #major)
  [ 28] getprop 645 ............................. <pLastProductNum>
  [ 31] pushint8 1 .............................. <1>
  [ 33] sub ..................................... <pLastProductNum - 1>
  [ 34] setlocal 0 .............................. tPrev = pLastProductNum - 1
  [ 36] getlocal 0 .............................. <tPrev>
  [ 38] pushint8 1 .............................. <1>
  [ 40] lt ...................................... <tPrev < 1>
  [ 41] jmpifz [ 48] ............................ if tPrev < 1 then
  [ 44] pushint8 1 .............................. <1>
  [ 46] setlocal 0 .............................. tPrev = 1
  [ 48] getlocal 0 .............................. <tPrev>
  [ 50] setprop 979 ............................. pSelectedOrderNum = tPrev
  [ 53] pushint8 1 .............................. <1>
  [ 55] setprop 980 ............................. pSelectedColorNum = 1
  [ 58] getparam 0 .............................. <me>
  [ 60] getlocal 0 .............................. <tPrev>
  [ 62] pusharglistnoret 2 ...................... <me, tPrev>
  [ 64] localcall 5 ............................. selectProduct(me, tPrev)
  [ 66] getparam 0 .............................. <me>
  [ 68] getlocal 0 .............................. <tPrev>
  [ 70] pusharglistnoret 2 ...................... <me, tPrev>
  [ 72] localcall 4 ............................. renderProductColors(me, tPrev)
  [ 74] ret
end

on selectColor me, tOrderNum
  [  0] getprop 979 ............................. <pSelectedOrderNum>
  [  3] pusharglist 1 ........................... <pSelectedOrderNum>
  [  5] extcall 78 .............................. <voidp(pSelectedOrderNum)>
  [  7] jmpifz [ 14] ............................ if voidp(pSelectedOrderNum) then
  [ 10] pusharglistnoret 0 ...................... <>
  [ 12] extcall 37 .............................. return 
  [ 14] pushsymb 559 ............................ <#catalogue>
  [ 17] pusharglist 1 ........................... <#catalogue>
  [ 19] extcall 471 ............................. <getThread(#catalogue)>
  [ 22] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 24] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [ 26] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 28] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 30] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 32] getlocal 0 .............................. <tCataloguePage>
  [ 34] not ..................................... <not tCataloguePage>
  [ 35] jmpifz [ 55] ............................ if not tCataloguePage then
  [ 38] getparam 0 .............................. <me>
  [ 40] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 42] pushsymb 977 ............................ <#selectColor>
  [ 45] pushsymb 47 ............................. <#major>
  [ 47] pusharglist 4 ........................... <me, "Couldn't access catalogue window!", #selectColor, #major>
  [ 49] extcall 46 .............................. <error(me, "Couldn't access catalogue window!", #selectColor, #major)>
  [ 51] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #selectColor, #major)>
  [ 53] extcall 37 .............................. return error(me, "Couldn't access catalogue window!", #selectColor, #major)
  [ 55] getlocal 0 .............................. <tCataloguePage>
  [ 57] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 59] getprop 979 ............................. <pSelectedOrderNum>
  [ 62] pusharglist 1 ........................... <pSelectedOrderNum>
  [ 64] extcall 187 ............................. <integerp(pSelectedOrderNum)>
  [ 66] not ..................................... <not integerp(pSelectedOrderNum)>
  [ 67] jmpifz [ 87] ............................ if not integerp(pSelectedOrderNum) then
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 29 ............................. <"Incorrect SelectedOrderNum">
  [ 74] pushsymb 977 ............................ <#selectColor>
  [ 77] pushsymb 47 ............................. <#major>
  [ 79] pusharglist 4 ........................... <me, "Incorrect SelectedOrderNum", #selectColor, #major>
  [ 81] extcall 46 .............................. <error(me, "Incorrect SelectedOrderNum", #selectColor, #major)>
  [ 83] pusharglistnoret 1 ...................... <error(me, "Incorrect SelectedOrderNum", #selectColor, #major)>
  [ 85] extcall 37 .............................. return error(me, "Incorrect SelectedOrderNum", #selectColor, #major)
  [ 87] getparam 1 .............................. <tOrderNum>
  [ 89] pusharglist 1 ........................... <tOrderNum>
  [ 91] extcall 187 ............................. <integerp(tOrderNum)>
  [ 93] not ..................................... <not integerp(tOrderNum)>
  [ 94] jmpifz [114] ............................ if not integerp(tOrderNum) then
  [ 97] getparam 0 .............................. <me>
  [ 99] pushcons 12 ............................. <"Incorrect value">
  [101] pushsymb 977 ............................ <#selectColor>
  [104] pushsymb 47 ............................. <#major>
  [106] pusharglist 4 ........................... <me, "Incorrect value", #selectColor, #major>
  [108] extcall 46 .............................. <error(me, "Incorrect value", #selectColor, #major)>
  [110] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #selectColor, #major)>
  [112] extcall 37 .............................. return error(me, "Incorrect value", #selectColor, #major)
  [114] getprop 528 ............................. <pPageData>
  [117] pusharglist 1 ........................... <pPageData>
  [119] extcall 78 .............................. <voidp(pPageData)>
  [121] jmpifz [141] ............................ if voidp(pPageData) then
  [124] getparam 0 .............................. <me>
  [126] pushcons 18 ............................. <"product not found">
  [128] pushsymb 977 ............................ <#selectColor>
  [131] pushsymb 47 ............................. <#major>
  [133] pusharglist 4 ........................... <me, "product not found", #selectColor, #major>
  [135] extcall 46 .............................. <error(me, "product not found", #selectColor, #major)>
  [137] pusharglistnoret 1 ...................... <error(me, "product not found", #selectColor, #major)>
  [139] extcall 37 .............................. return error(me, "product not found", #selectColor, #major)
  [141] getprop 528 ............................. <pPageData>
  [144] getprop 979 ............................. <pSelectedOrderNum>
  [147] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [149] objcall 41 .............................. <pPageData[pSelectedOrderNum]>
  [151] pusharglist 1 ........................... <pPageData[pSelectedOrderNum]>
  [153] extcall 78 .............................. <voidp(pPageData[pSelectedOrderNum])>
  [155] jmpifz [162] ............................ if voidp(pPageData[pSelectedOrderNum]) then
  [158] pusharglistnoret 0 ...................... <>
  [160] extcall 37 .............................. return 
  [162] getparam 1 .............................. <tOrderNum>
  [164] getprop 528 ............................. <pPageData>
  [167] getprop 979 ............................. <pSelectedOrderNum>
  [170] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [172] objcall 41 .............................. <pPageData[pSelectedOrderNum]>
  [174] getobjprop 48 ........................... <pPageData[pSelectedOrderNum].count>
  [176] gt ...................................... <tOrderNum > pPageData[pSelectedOrderNum].count>
  [177] jmpifz [184] ............................ if tOrderNum > pPageData[pSelectedOrderNum].count then
  [180] pusharglistnoret 0 ...................... <>
  [182] extcall 37 .............................. return 
  [184] getparam 1 .............................. <tOrderNum>
  [186] setprop 980 ............................. pSelectedColorNum = tOrderNum
  [189] getprop 528 ............................. <pPageData>
  [192] getprop 979 ............................. <pSelectedOrderNum>
  [195] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [197] objcall 41 .............................. <pPageData[pSelectedOrderNum]>
  [199] getprop 980 ............................. <pSelectedColorNum>
  [202] pusharglist 2 ........................... <pPageData[pSelectedOrderNum], pSelectedColorNum>
  [204] objcall 41 .............................. <pPageData[pSelectedOrderNum][pSelectedColorNum]>
  [206] setprop 252 ............................. pSelectedProduct = pPageData[pSelectedOrderNum][pSelectedColorNum]
  [208] pushsymb 559 ............................ <#catalogue>
  [211] pusharglist 1 ........................... <#catalogue>
  [213] extcall 471 ............................. <getThread(#catalogue)>
  [216] pusharglist 1 ........................... <getThread(#catalogue)>
  [218] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [220] getprop 252 ............................. <pSelectedProduct>
  [222] pusharglistnoret 2 ...................... <getThread(#catalogue).getInterface(), pSelectedProduct>
  [224] objcall 144 ............................. getThread(#catalogue).getInterface().showPreviewImage(pSelectedProduct)
  [226] getprop 252 ............................. <pSelectedProduct>
  [228] pushcons 23 ............................. <"price">
  [230] pusharglist 2 ........................... <pSelectedProduct, "price">
  [232] objcall 41 .............................. <pSelectedProduct["price"]>
  [234] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [236] extcall 78 .............................. <voidp(pSelectedProduct["price"])>
  [238] not ..................................... <not voidp(pSelectedProduct["price"])>
  [239] jmpifz [327] ............................ if not voidp(pSelectedProduct["price"]) then
  [242] getlocal 1 .............................. <tWndObj>
  [244] pushcons 24 ............................. <"ctlg_price_1">
  [246] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [248] objcall 253 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [250] jmpifz [327] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [253] getprop 252 ............................. <pSelectedProduct>
  [255] pushcons 23 ............................. <"price">
  [257] pusharglist 2 ........................... <pSelectedProduct, "price">
  [259] objcall 41 .............................. <pSelectedProduct["price"]>
  [261] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [263] extcall 266 ............................. <value(pSelectedProduct["price"])>
  [266] pushint8 1 .............................. <1>
  [268] gt ...................................... <value(pSelectedProduct["price"]) > 1>
  [269] jmpifz [294] ............................ if value(pSelectedProduct["price"]) > 1 then / else
  [272] getprop 252 ............................. <pSelectedProduct>
  [274] pushcons 23 ............................. <"price">
  [276] pusharglist 2 ........................... <pSelectedProduct, "price">
  [278] objcall 41 .............................. <pSelectedProduct["price"]>
  [280] pushcons 25 ............................. <"credits">
  [282] pushcons 25 ............................. <"credits">
  [284] pusharglist 2 ........................... <"credits", "credits">
  [286] extcall 158 ............................. <getText("credits", "credits")>
  [288] joinpadstr .............................. <pSelectedProduct["price"] && getText("credits", "credits")>
  [289] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credits", "credits")
  [291] jmp [313]
  [294] getprop 252 ............................. <pSelectedProduct>
  [296] pushcons 23 ............................. <"price">
  [298] pusharglist 2 ........................... <pSelectedProduct, "price">
  [300] objcall 41 .............................. <pSelectedProduct["price"]>
  [302] pushcons 26 ............................. <"credit">
  [304] pushcons 26 ............................. <"credit">
  [306] pusharglist 2 ........................... <"credit", "credit">
  [308] extcall 158 ............................. <getText("credit", "credit")>
  [310] joinpadstr .............................. <pSelectedProduct["price"] && getText("credit", "credit")>
  [311] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credit", "credit")
  [313] getlocal 1 .............................. <tWndObj>
  [315] pushcons 24 ............................. <"ctlg_price_1">
  [317] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [319] objcall 178 ............................. <tWndObj.getElement("ctlg_price_1")>
  [321] getlocal 2 .............................. <tText>
  [323] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [325] objcall 188 ............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [327] ret
end

on eventProc me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 198 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [ 21] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] pushcons 30 ............................. <"close">
  [ 12] eq ...................................... <tSprID = "close">
  [ 13] jmpifz [ 21] ............................ if tSprID = "close" then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 37 .............................. return 0
  [ 21] getparam 1 .............................. <tEvent>
  [ 23] pushsymb 232 ............................ <#mouseDown>
  [ 25] eq ...................................... <tEvent = #mouseDown>
  [ 26] jmpifz [395] ............................ if tEvent = #mouseDown then
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] pushcons 8 .............................. <"ctlg_small_img_">
  [ 33] containsstr ............................. <tSprID contains "ctlg_small_img_">
  [ 34] jmpifz [ 88] ............................ if tSprID contains "ctlg_small_img_" then / else
  [ 37] getmovieprop 641 ........................ <the itemDelimiter>
  [ 40] setlocal 0 .............................. tItemDeLimiter = the itemDelimiter
  [ 42] pushcons 31 ............................. <"_">
  [ 44] setmovieprop 641 ........................ the itemDelimiter = "_"
  [ 47] getparam 2 .............................. <tSprID>
  [ 49] pushsymb 352 ............................ <#item>
  [ 52] getparam 2 .............................. <tSprID>
  [ 54] pushsymb 352 ............................ <#item>
  [ 57] pusharglist 2 ........................... <tSprID, #item>
  [ 59] objcall 48 .............................. <tSprID.item.count>
  [ 61] pusharglist 3 ........................... <tSprID, #item, tSprID.item.count>
  [ 63] objcall 123 ............................. <tSprID.item[tSprID.item.count]>
  [ 65] pusharglist 1 ........................... <tSprID.item[tSprID.item.count]>
  [ 67] extcall 382 ............................. <integer(tSprID.item[tSprID.item.count])>
  [ 70] setlocal 1 .............................. tProductOrderNum = integer(tSprID.item[tSprID.item.count])
  [ 72] getlocal 0 .............................. <tItemDeLimiter>
  [ 74] setmovieprop 641 ........................ the itemDelimiter = tItemDeLimiter
  [ 77] getparam 0 .............................. <me>
  [ 79] getlocal 1 .............................. <tProductOrderNum>
  [ 81] pusharglistnoret 2 ...................... <me, tProductOrderNum>
  [ 83] localcall 5 ............................. selectProduct(me, tProductOrderNum)
  [ 85] jmp [395]
  [ 88] getparam 2 .............................. <tSprID>
  [ 90] pushcons 32 ............................. <"ctlg_nextmodel_button">
  [ 92] eq ...................................... <tSprID = "ctlg_nextmodel_button">
  [ 93] jmpifz [106] ............................ if tSprID = "ctlg_nextmodel_button" then / else
  [ 96] getparam 0 .............................. <me>
  [ 98] pusharglistnoret 1 ...................... <me>
  [100] objcall 988 ............................. me.nextProduct()
  [103] jmp [395]
  [106] getparam 2 .............................. <tSprID>
  [108] pushcons 33 ............................. <"ctlg_prevmodel_button">
  [110] eq ...................................... <tSprID = "ctlg_prevmodel_button">
  [111] jmpifz [124] ............................ if tSprID = "ctlg_prevmodel_button" then / else
  [114] getparam 0 .............................. <me>
  [116] pusharglistnoret 1 ...................... <me>
  [118] objcall 989 ............................. me.prevProduct()
  [121] jmp [395]
  [124] getparam 2 .............................. <tSprID>
  [126] pushcons 14 ............................. <"ctlg_selectcolor_">
  [128] containsstr ............................. <tSprID contains "ctlg_selectcolor_">
  [129] getparam 2 .............................. <tSprID>
  [131] pushcons 34 ............................. <"ctlg_selectcolor_bg_10">
  [133] containsstr ............................. <tSprID contains "ctlg_selectcolor_bg_10">
  [134] or ...................................... <(tSprID contains "ctlg_selectcolor_") or (tSprID contains "ctlg_selectcolor_bg_10")>
  [135] jmpifz [189] ............................ if (tSprID contains "ctlg_selectcolor_") or (tSprID contains "ctlg_selectcolor_bg_10") then / else
  [138] getmovieprop 641 ........................ <the itemDelimiter>
  [141] setlocal 0 .............................. tItemDeLimiter = the itemDelimiter
  [143] pushcons 31 ............................. <"_">
  [145] setmovieprop 641 ........................ the itemDelimiter = "_"
  [148] getparam 2 .............................. <tSprID>
  [150] pushsymb 352 ............................ <#item>
  [153] getparam 2 .............................. <tSprID>
  [155] pushsymb 352 ............................ <#item>
  [158] pusharglist 2 ........................... <tSprID, #item>
  [160] objcall 48 .............................. <tSprID.item.count>
  [162] pusharglist 3 ........................... <tSprID, #item, tSprID.item.count>
  [164] objcall 123 ............................. <tSprID.item[tSprID.item.count]>
  [166] pusharglist 1 ........................... <tSprID.item[tSprID.item.count]>
  [168] extcall 382 ............................. <integer(tSprID.item[tSprID.item.count])>
  [171] setlocal 2 .............................. tOrderNum = integer(tSprID.item[tSprID.item.count])
  [173] getlocal 0 .............................. <tItemDeLimiter>
  [175] setmovieprop 641 ........................ the itemDelimiter = tItemDeLimiter
  [178] getparam 0 .............................. <me>
  [180] getlocal 2 .............................. <tOrderNum>
  [182] pusharglistnoret 2 ...................... <me, tOrderNum>
  [184] localcall 8 ............................. selectColor(me, tOrderNum)
  [186] jmp [395]
  [189] getparam 2 .............................. <tSprID>
  [191] pushcons 27 ............................. <"ctlg_buy_button">
  [193] eq ...................................... <tSprID = "ctlg_buy_button">
  [194] jmpifz [390] ............................ if tSprID = "ctlg_buy_button" then / else
  [197] pushsymb 559 ............................ <#catalogue>
  [200] pusharglist 1 ........................... <#catalogue>
  [202] extcall 471 ............................. <getThread(#catalogue)>
  [205] pusharglist 1 ........................... <getThread(#catalogue)>
  [207] objcall 176 ............................. <getThread(#catalogue).getInterface()>
  [209] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [211] objcall 142 ............................. <getThread(#catalogue).getInterface().getCatalogWindow()>
  [213] setlocal 3 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [215] pushcons 35 ............................. <EMPTY>
  [217] setlocal 4 .............................. tText = EMPTY
  [219] getlocal 3 .............................. <tWndObj>
  [221] pushcons 36 ............................. <"dedication_text">
  [223] pusharglist 2 ........................... <tWndObj, "dedication_text">
  [225] objcall 253 ............................. <tWndObj.elementExists("dedication_text")>
  [227] jmpifz [257] ............................ if tWndObj.elementExists("dedication_text") then
  [230] getlocal 3 .............................. <tWndObj>
  [232] pushcons 36 ............................. <"dedication_text">
  [234] pusharglist 2 ........................... <tWndObj, "dedication_text">
  [236] objcall 178 ............................. <tWndObj.getElement("dedication_text")>
  [238] pusharglist 1 ........................... <tWndObj.getElement("dedication_text")>
  [240] objcall 158 ............................. <tWndObj.getElement("dedication_text").getText()>
  [242] setlocal 4 .............................. tText = tWndObj.getElement("dedication_text").getText()
  [244] getlocal 4 .............................. <tText>
  [246] pushcons 37 ............................. <RETURN>
  [248] pushcons 38 ............................. <"\\r">
  [250] pusharglist 3 ........................... <tText, RETURN, "\\r">
  [252] extcall 415 ............................. <replaceChunks(tText, RETURN, "\\r")>
  [255] setlocal 4 .............................. tText = replaceChunks(tText, RETURN, "\\r")
  [257] getlocal 4 .............................. <tText>
  [259] getobjprop 567 .......................... <tText.length>
  [262] pushint8 1 .............................. <1>
  [264] lt ...................................... <tText.length < 1>
  [265] jmpifz [295] ............................ if tText.length < 1 then / else
  [268] pushsymb 420 ............................ <#alert>
  [271] pushsymb 421 ............................ <#Msg>
  [274] pushcons 39 ............................. <"catalog_give_trophymsg">
  [276] pushsymb 267 ............................ <#id>
  [279] pushcons 40 ............................. <"ctlg_trophymsg">
  [281] pusharglist 4 ........................... <[#Msg: "catalog_give_trophymsg", #id: "ctlg_trophymsg"]>
  [283] pushproplist ............................ <[#Msg: "catalog_give_trophymsg", #id: "ctlg_trophymsg"]>
  [284] pusharglist 2 ........................... <#alert, [#Msg: "catalog_give_trophymsg", #id: "ctlg_trophymsg"]>
  [286] extcall 220 ............................. <executeMessage(#alert, [#Msg: "catalog_give_trophymsg", #id: "ctlg_trophymsg"])>
  [288] pusharglistnoret 1 ...................... <executeMessage(#alert, [#Msg: "catalog_give_trophymsg", #id: "ctlg_trophymsg"])>
  [290] extcall 37 .............................. return executeMessage(#alert, [#Msg: "catalog_give_trophymsg", #id: "ctlg_trophymsg"])
  [292] jmp [331]
  [295] getlocal 4 .............................. <tText>
  [297] getobjprop 567 .......................... <tText.length>
  [300] pushint16 150 ........................... <150>
  [303] gt ...................................... <tText.length > 150>
  [304] jmpifz [331] ............................ if tText.length > 150 then
  [307] pushsymb 420 ............................ <#alert>
  [310] pushsymb 421 ............................ <#Msg>
  [313] pushcons 41 ............................. <"catalog_length_trophymsg">
  [315] pushsymb 267 ............................ <#id>
  [318] pushcons 40 ............................. <"ctlg_trophymsg">
  [320] pusharglist 4 ........................... <[#Msg: "catalog_length_trophymsg", #id: "ctlg_trophymsg"]>
  [322] pushproplist ............................ <[#Msg: "catalog_length_trophymsg", #id: "ctlg_trophymsg"]>
  [323] pusharglist 2 ........................... <#alert, [#Msg: "catalog_length_trophymsg", #id: "ctlg_trophymsg"]>
  [325] extcall 220 ............................. <executeMessage(#alert, [#Msg: "catalog_length_trophymsg", #id: "ctlg_trophymsg"])>
  [327] pusharglistnoret 1 ...................... <executeMessage(#alert, [#Msg: "catalog_length_trophymsg", #id: "ctlg_trophymsg"])>
  [329] extcall 37 .............................. return executeMessage(#alert, [#Msg: "catalog_length_trophymsg", #id: "ctlg_trophymsg"])
  [331] getprop 252 ............................. <pSelectedProduct>
  [333] getobjprop 43 ........................... <pSelectedProduct.ilk>
  [335] pushsymb 45 ............................. <#propList>
  [337] nteq .................................... <pSelectedProduct.ilk <> #propList>
  [338] jmpifz [358] ............................ if pSelectedProduct.ilk <> #propList then
  [341] getparam 0 .............................. <me>
  [343] pushcons 42 ............................. <"incorrect Selected Product Data">
  [345] pushsymb 640 ............................ <#eventProc>
  [348] pushsymb 47 ............................. <#major>
  [350] pusharglist 4 ........................... <me, "incorrect Selected Product Data", #eventProc, #major>
  [352] extcall 46 .............................. <error(me, "incorrect Selected Product Data", #eventProc, #major)>
  [354] pusharglistnoret 1 ...................... <error(me, "incorrect Selected Product Data", #eventProc, #major)>
  [356] extcall 37 .............................. return error(me, "incorrect Selected Product Data", #eventProc, #major)
  [358] getprop 252 ............................. <pSelectedProduct>
  [360] pushcons 43 ............................. <"extra_parm">
  [362] getlocal 4 .............................. <tText>
  [364] pusharglistnoret 3 ...................... <pSelectedProduct, "extra_parm", tText>
  [366] objcall 254 ............................. pSelectedProduct["extra_parm"] = tText
  [368] pushsymb 559 ............................ <#catalogue>
  [371] pusharglist 1 ........................... <#catalogue>
  [373] extcall 471 ............................. <getThread(#catalogue)>
  [376] pusharglist 1 ........................... <getThread(#catalogue)>
  [378] objcall 170 ............................. <getThread(#catalogue).getComponent()>
  [380] getprop 252 ............................. <pSelectedProduct>
  [382] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pSelectedProduct>
  [384] objcall 305 ............................. getThread(#catalogue).getComponent().checkProductOrder(pSelectedProduct)
  [387] jmp [395]
  [390] pushzero ................................ <0>
  [391] pusharglistnoret 1 ...................... <0>
  [393] extcall 37 .............................. return 0
  [395] pushint8 1 .............................. <1>
  [397] pusharglistnoret 1 ...................... <1>
  [399] extcall 37 .............................. return 1
  [401] ret
end
