property pPulseState, pSprite, pMember, pStopLoc, pStartloc, pProps

on construct me
  [  0] pushcons 0 .............................. <"bb2_pwrupbubble.pulse">
  [  2] pusharglist 1 ........................... <"bb2_pwrupbubble.pulse">
  [  4] extcall 238 ............................. <getmemnum("bb2_pwrupbubble.pulse")>
  [  6] pusharglist 1 ........................... <getmemnum("bb2_pwrupbubble.pulse")>
  [  8] extcall 91 .............................. <member(getmemnum("bb2_pwrupbubble.pulse"))>
  [ 10] setprop 43 .............................. pMember = member(getmemnum("bb2_pwrupbubble.pulse"))
  [ 12] pusharglist 0 ........................... <[:]>
  [ 14] pushproplist ............................ <[:]>
  [ 15] setprop 661 ............................. pProps = [:]
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 1 ...................... <1>
  [ 22] extcall 28 .............................. return 1
  [ 24] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 661 ............................. pProps = [:]
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 28 .............................. return 1
  [ 12] ret
end

on definePulse me
  [  0] pushsymb 663 ............................ <#Opening>
  [  3] setprop 662 ............................. pPulseState = #Opening
  [  6] getparam 0 .............................. <me>
  [  8] pushsymb 470 ............................ <#sprite>
  [ 11] pusharglist 2 ........................... <me, #sprite>
  [ 13] objcall 306 ............................. <me.GET(#sprite)>
  [ 16] pusharglist 1 ........................... <me.GET(#sprite)>
  [ 18] extcall 470 ............................. <sprite(me.GET(#sprite))>
  [ 21] setprop 98 .............................. pSprite = sprite(me.GET(#sprite))
  [ 23] getparam 0 .............................. <me>
  [ 25] pushsymb 609 ............................ <#humanLoc>
  [ 28] pusharglist 2 ........................... <me, #humanLoc>
  [ 30] objcall 306 ............................. <me.GET(#humanLoc)>
  [ 33] pushzero ................................ <0>
  [ 34] pushint8 20 ............................. <20>
  [ 36] inv ..................................... <-20>
  [ 37] pusharglist 2 ........................... <0, -20>
  [ 39] extcall 96 .............................. <point(0, -20)>
  [ 41] add ..................................... <me.GET(#humanLoc) + point(0, -20)>
  [ 42] setprop 664 ............................. pStartloc = me.GET(#humanLoc) + point(0, -20)
  [ 45] getparam 0 .............................. <me>
  [ 47] pushsymb 610 ............................ <#stoploc>
  [ 50] pusharglist 2 ........................... <me, #stoploc>
  [ 52] objcall 306 ............................. <me.GET(#stoploc)>
  [ 55] setprop 665 ............................. pStopLoc = me.GET(#stoploc)
  [ 58] getprop 98 .............................. <pSprite>
  [ 60] getprop 664 ............................. <pStartloc>
  [ 63] setobjprop 112 .......................... pSprite.loc = pStartloc
  [ 65] getprop 98 .............................. <pSprite>
  [ 67] getprop 43 .............................. <pMember>
  [ 69] setobjprop 91 ........................... pSprite.member = pMember
  [ 71] getprop 98 .............................. <pSprite>
  [ 73] getparam 0 .............................. <me>
  [ 75] pushsymb 611 ............................ <#balloonColor>
  [ 78] pusharglist 2 ........................... <me, #balloonColor>
  [ 80] objcall 306 ............................. <me.GET(#balloonColor)>
  [ 83] setobjprop 130 .......................... pSprite.color = me.GET(#balloonColor)
  [ 85] pushint8 1 .............................. <1>
  [ 87] pusharglistnoret 1 ...................... <1>
  [ 89] extcall 28 .............................. return 1
  [ 91] ret
end

on removePulse me
  [  0] getprop 98 .............................. <pSprite>
  [  2] pusharglist 1 ........................... <pSprite>
  [  4] extcall 122 ............................. <voidp(pSprite)>
  [  6] jmpifz [ 14] ............................ if voidp(pSprite) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 28 .............................. return 0
  [ 14] getprop 98 .............................. <pSprite>
  [ 16] pushint16 1000 .......................... <1000>
  [ 19] inv ..................................... <-1000>
  [ 20] setobjprop 110 .......................... pSprite.locV = -1000
  [ 22] pushsymb 666 ............................ <#hide>
  [ 25] setprop 662 ............................. pPulseState = #hide
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 28 .............................. return 1
  [ 34] ret
end

on OpeningBalloon me, tLocV
  [  0] getprop 662 ............................. <pPulseState>
  [  3] pushsymb 663 ............................ <#Opening>
  [  6] nteq .................................... <pPulseState <> #Opening>
  [  7] jmpifz [ 15] ............................ if pPulseState <> #Opening then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 28 .............................. return 0
  [ 15] getprop 664 ............................. <pStartloc>
  [ 18] getobjprop 110 .......................... <pStartloc.locV>
  [ 20] getparam 1 .............................. <tLocV>
  [ 22] add ..................................... <pStartloc.locV + tLocV>
  [ 23] getprop 665 ............................. <pStopLoc>
  [ 26] getobjprop 110 .......................... <pStopLoc.locV>
  [ 28] lteq .................................... <(pStartloc.locV + tLocV) <= pStopLoc.locV>
  [ 29] jmpifz [ 49] ............................ if (pStartloc.locV + tLocV) <= pStopLoc.locV then / else
  [ 32] pushsymb 667 ............................ <#ready>
  [ 35] setprop 662 ............................. pPulseState = #ready
  [ 38] getprop 98 .............................. <pSprite>
  [ 40] pushint16 1000 .......................... <1000>
  [ 43] inv ..................................... <-1000>
  [ 44] setobjprop 110 .......................... pSprite.locV = -1000
  [ 46] jmp [ 70]
  [ 49] getprop 664 ............................. <pStartloc>
  [ 52] pushzero ................................ <0>
  [ 53] getparam 1 .............................. <tLocV>
  [ 55] pusharglist 2 ........................... <0, tLocV>
  [ 57] extcall 96 .............................. <point(0, tLocV)>
  [ 59] add ..................................... <pStartloc + point(0, tLocV)>
  [ 60] setprop 664 ............................. pStartloc = pStartloc + point(0, tLocV)
  [ 63] getprop 98 .............................. <pSprite>
  [ 65] getprop 664 ............................. <pStartloc>
  [ 68] setobjprop 112 .......................... pSprite.loc = pStartloc
  [ 70] ret
end

on set me, tKey, tValue
  [  0] getprop 661 ............................. <pProps>
  [  3] getparam 1 .............................. <tKey>
  [  5] getparam 2 .............................. <tValue>
  [  7] pusharglistnoret 3 ...................... <pProps, tKey, tValue>
  [  9] objcall 123 ............................. pProps[tKey] = tValue
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 28 .............................. return 1
  [ 17] ret
end

on GET me, tKey
  [  0] getprop 661 ............................. <pProps>
  [  3] getparam 1 .............................. <tKey>
  [  5] pusharglist 2 ........................... <pProps, tKey>
  [  7] objcall 31 .............................. <pProps[tKey]>
  [  9] setlocal 0 .............................. tValue = pProps[tKey]
  [ 11] getlocal 0 .............................. <tValue>
  [ 13] pusharglist 1 ........................... <tValue>
  [ 15] extcall 122 ............................. <voidp(tValue)>
  [ 17] jmpifz [ 23] ............................ if voidp(tValue) then
  [ 20] pushzero ................................ <0>
  [ 21] setlocal 0 .............................. tValue = 0
  [ 23] getlocal 0 .............................. <tValue>
  [ 25] pusharglistnoret 1 ...................... <tValue>
  [ 27] extcall 28 .............................. return tValue
  [ 29] ret
end
