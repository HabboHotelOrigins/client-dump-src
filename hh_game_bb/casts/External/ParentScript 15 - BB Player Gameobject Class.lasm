property STATE_NORMAL, STATE_STUNNED, STATE_TURBO_BOOST, STATE_HIGH_JUMPS, STATE_CLEANING_TILES, STATE_COLORING_FOR_OPPONENT, STATE_CLIMBING_INTO_CANNON, STATE_FLYING_THROUGH_AIR, STATE_BALL_BROKEN, pRoomObject, pActiveEffects, pDirBody, pLocation, pTargetLocation, pExpectedLocation, pDirObject, pDump

on construct me
  [  0] pushzero ................................ <0>
  [  1] setprop 323 ............................. pDirBody = 0
  [  4] pushsymb 60 ............................. <#x>
  [  6] pushint8 1 .............................. <1>
  [  8] inv ..................................... <-1>
  [  9] pushsymb 61 ............................. <#y>
  [ 11] pushint8 1 .............................. <1>
  [ 13] inv ..................................... <-1>
  [ 14] pushsymb 62 ............................. <#z>
  [ 16] pushint8 1 .............................. <1>
  [ 18] inv ..................................... <-1>
  [ 19] pusharglist 6 ........................... <[#x: -1, #y: -1, #z: -1]>
  [ 21] pushproplist ............................ <[#x: -1, #y: -1, #z: -1]>
  [ 22] setprop 324 ............................. pLocation = [#x: -1, #y: -1, #z: -1]
  [ 25] pushsymb 60 ............................. <#x>
  [ 27] pushint8 1 .............................. <1>
  [ 29] inv ..................................... <-1>
  [ 30] pushsymb 61 ............................. <#y>
  [ 32] pushint8 1 .............................. <1>
  [ 34] inv ..................................... <-1>
  [ 35] pusharglist 4 ........................... <[#x: -1, #y: -1]>
  [ 37] pushproplist ............................ <[#x: -1, #y: -1]>
  [ 38] setprop 325 ............................. pTargetLocation = [#x: -1, #y: -1]
  [ 41] pushsymb 60 ............................. <#x>
  [ 43] pushint8 1 .............................. <1>
  [ 45] inv ..................................... <-1>
  [ 46] pushsymb 61 ............................. <#y>
  [ 48] pushint8 1 .............................. <1>
  [ 50] inv ..................................... <-1>
  [ 51] pusharglist 4 ........................... <[#x: -1, #y: -1]>
  [ 53] pushproplist ............................ <[#x: -1, #y: -1]>
  [ 54] setprop 326 ............................. pExpectedLocation = [#x: -1, #y: -1]
  [ 57] pushzero ................................ <0>
  [ 58] setprop 327 ............................. STATE_NORMAL = 0
  [ 61] pushint8 1 .............................. <1>
  [ 63] setprop 328 ............................. STATE_STUNNED = 1
  [ 66] pushint8 2 .............................. <2>
  [ 68] setprop 329 ............................. STATE_TURBO_BOOST = 2
  [ 71] pushint8 3 .............................. <3>
  [ 73] setprop 330 ............................. STATE_HIGH_JUMPS = 3
  [ 76] pushint8 4 .............................. <4>
  [ 78] setprop 331 ............................. STATE_CLEANING_TILES = 4
  [ 81] pushint8 5 .............................. <5>
  [ 83] setprop 332 ............................. STATE_COLORING_FOR_OPPONENT = 5
  [ 86] pushint8 6 .............................. <6>
  [ 88] setprop 333 ............................. STATE_CLIMBING_INTO_CANNON = 6
  [ 91] pushint8 7 .............................. <7>
  [ 93] setprop 334 ............................. STATE_FLYING_THROUGH_AIR = 7
  [ 96] pushint8 8 .............................. <8>
  [ 98] setprop 335 ............................. STATE_BALL_BROKEN = 8
  [101] pusharglist 0 ........................... <[]>
  [103] pushlist ................................ <[]>
  [104] setprop 25 .............................. pActiveEffects = []
  [106] pushsymb 125 ............................ <#temp>
  [108] pushcons 0 .............................. <"BB Direction8 Class">
  [110] pusharglist 2 ........................... <#temp, "BB Direction8 Class">
  [112] extcall 124 ............................. <createObject(#temp, "BB Direction8 Class")>
  [114] setprop 336 ............................. pDirObject = createObject(#temp, "BB Direction8 Class")
  [117] pushint8 1 .............................. <1>
  [119] pusharglistnoret 1 ...................... <1>
  [121] extcall 28 .............................. return 1
  [123] ret
end

on deconstruct me
  [  0] getprop 25 .............................. <pActiveEffects>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 30
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 39] ............................ repeat with tEffect in pActiveEffects
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 31
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tEffect>
  [ 30] pusharglistnoret 1 ...................... <tEffect>
  [ 32] objcall 1 ............................... tEffect.deconstruct()
  [ 34] pushint8 1
  [ 36] add
  [ 37] endrepeat [ 10]
  [ 39] pop 3
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setprop 25 .............................. pActiveEffects = []
  [ 46] pusharglist 0 ........................... <>
  [ 48] extcall 116 ............................. <VOID>
  [ 50] setprop 336 ............................. pDirObject = VOID
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglistnoret 1 ...................... <me>
  [ 57] objcall 315 ............................. me.removeRoomObject()
  [ 60] pushint8 1 .............................. <1>
  [ 62] pusharglistnoret 1 ...................... <1>
  [ 64] extcall 28 .............................. return 1
  [ 66] ret
end

on define me, tGameObject
  [  0] getparam 1 .............................. <tGameObject>
  [  2] pusharglist 1 ........................... <tGameObject>
  [  4] objcall 74 .............................. <tGameObject.duplicate()>
  [  6] setparam 1 .............................. tGameObject = tGameObject.duplicate()
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tGameObject>
  [ 12] pusharglistnoret 2 ...................... <me, tGameObject>
  [ 14] objcall 214 ............................. me.setGameObjectProperty(tGameObject)
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <tGameObject>
  [ 20] pusharglistnoret 2 ...................... <me, tGameObject>
  [ 22] objcall 314 ............................. me.createRoomObject(tGameObject)
  [ 25] getprop 324 ............................. <pLocation>
  [ 28] pushsymb 60 ............................. <#x>
  [ 30] getparam 1 .............................. <tGameObject>
  [ 32] pushsymb 60 ............................. <#x>
  [ 34] pusharglist 2 ........................... <tGameObject, #x>
  [ 36] objcall 31 .............................. <tGameObject[#x]>
  [ 38] pusharglistnoret 3 ...................... <pLocation, #x, tGameObject[#x]>
  [ 40] objcall 123 ............................. pLocation[#x] = tGameObject[#x]
  [ 42] getprop 324 ............................. <pLocation>
  [ 45] pushsymb 61 ............................. <#y>
  [ 47] getparam 1 .............................. <tGameObject>
  [ 49] pushsymb 61 ............................. <#y>
  [ 51] pusharglist 2 ........................... <tGameObject, #y>
  [ 53] objcall 31 .............................. <tGameObject[#y]>
  [ 55] pusharglistnoret 3 ...................... <pLocation, #y, tGameObject[#y]>
  [ 57] objcall 123 ............................. pLocation[#y] = tGameObject[#y]
  [ 59] getprop 324 ............................. <pLocation>
  [ 62] pushsymb 62 ............................. <#z>
  [ 64] getparam 1 .............................. <tGameObject>
  [ 66] pushsymb 62 ............................. <#z>
  [ 68] pusharglist 2 ........................... <tGameObject, #z>
  [ 70] objcall 31 .............................. <tGameObject[#z]>
  [ 72] pusharglistnoret 3 ...................... <pLocation, #z, tGameObject[#z]>
  [ 74] objcall 123 ............................. pLocation[#z] = tGameObject[#z]
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 1 ...................... <1>
  [ 80] extcall 28 .............................. return 1
  [ 82] ret
end

on update me
  [  0] getprop 25 .............................. <pActiveEffects>
  [  2] getobjprop 30 ........................... <pActiveEffects.count>
  [  4] pushzero ................................ <0>
  [  5] eq ...................................... <pActiveEffects.count = 0>
  [  6] jmpifz [ 15] ............................ if pActiveEffects.count = 0 then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 28 .............................. return 1
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 0
  [ 19] getlocal 0
  [ 21] getprop 25 .............................. <pActiveEffects>
  [ 23] getobjprop 30 ........................... <pActiveEffects.count>
  [ 25] lteq
  [ 26] jmpifz [ 78] ............................ repeat with i = 1 to pActiveEffects.count
  [ 29] getprop 25 .............................. <pActiveEffects>
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 2 ........................... <pActiveEffects, i>
  [ 35] objcall 31 .............................. <pActiveEffects[i]>
  [ 37] setlocal 1 .............................. tEffect = pActiveEffects[i]
  [ 39] getlocal 1 .............................. <tEffect>
  [ 41] getobjprop 85 ........................... <tEffect.pActive>
  [ 43] jmpifz [ 55] ............................ if tEffect.pActive then
  [ 46] getlocal 1 .............................. <tEffect>
  [ 48] pusharglistnoret 1 ...................... <tEffect>
  [ 50] objcall 6 ............................... tEffect.update()
  [ 52] jmp [ 69] ............................... next repeat
  [ 55] getlocal 1 .............................. <tEffect>
  [ 57] pusharglistnoret 1 ...................... <tEffect>
  [ 59] objcall 1 ............................... tEffect.deconstruct()
  [ 61] getprop 25 .............................. <pActiveEffects>
  [ 63] getlocal 0 .............................. <i>
  [ 65] pusharglistnoret 2 ...................... <pActiveEffects, i>
  [ 67] objcall 86 .............................. pActiveEffects.deleteAt(i)
  [ 69] pushint8 1
  [ 71] getlocal 0
  [ 73] add
  [ 74] setlocal 0
  [ 76] endrepeat [ 19]
  [ 78] pushint8 1 .............................. <1>
  [ 80] pusharglistnoret 1 ...................... <1>
  [ 82] extcall 28 .............................. return 1
  [ 84] ret
end

on executeGameObjectEvent me, tEvent, tdata
  [  0] getprop 337 ............................. <pDump>
  [  3] jmpifz [ 30] ............................ if pDump then
  [  6] pushcons 1 .............................. <"* executeGameObjectEvent on">
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 338 ............................. <me.getObjectId()>
  [ 15] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId()>
  [ 16] pushcons 2 .............................. <":">
  [ 18] joinstr ................................. <"* executeGameObjectEvent on" && me.getObjectId() & ":">
  [ 19] getparam 1 .............................. <tEvent>
  [ 21] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent>
  [ 22] getparam 2 .............................. <tdata>
  [ 24] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata>
  [ 25] pusharglistnoret 1 ...................... <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata>
  [ 27] extcall 339 ............................. put "* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata
  [ 30] getparam 1 .............................. <tEvent>
  [ 32] peek 0 .................................. case tEvent of
  [ 34] pushsymb 218 ............................ <#gameobject_update>
  [ 36] eq
  [ 37] jmpifz [ 52] ............................ (case) #gameobject_update:
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 2 .............................. <tdata>
  [ 44] pusharglistnoret 2 ...................... <me, tdata>
  [ 46] objcall 318 ............................. me.updateRoomObject(tdata)
  [ 49] jmp [223]
  [ 52] peek 0
  [ 54] pushsymb 225 ............................ <#set_target_custom>
  [ 56] eq
  [ 57] jmpifz [ 72] ............................ (case) #set_target_custom:
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 2 .............................. <tdata>
  [ 64] pusharglistnoret 2 ...................... <me, tdata>
  [ 66] objcall 317 ............................. me.updateRoomObjectGoal(tdata)
  [ 69] jmp [223]
  [ 72] peek 0
  [ 74] pushsymb 221 ............................ <#activate_powerup>
  [ 76] eq
  [ 77] jmpifz [161] ............................ (case) #activate_powerup:
  [ 80] getparam 0 .............................. <me>
  [ 82] getparam 2 .............................. <tdata>
  [ 84] pusharglistnoret 2 ...................... <me, tdata>
  [ 86] objcall 321 ............................. me.startPowerupActivateAnimation(tdata)
  [ 89] getparam 2 .............................. <tdata>
  [ 91] pushsymb 206 ............................ <#powerupType>
  [ 93] pusharglist 2 ........................... <tdata, #powerupType>
  [ 95] objcall 31 .............................. <tdata[#powerupType]>
  [ 97] pushint8 7 .............................. <7>
  [ 99] eq ...................................... <tdata[#powerupType] = 7>
  [100] jmpifz [158] ............................ if tdata[#powerupType] = 7 then
  [103] getparam 0 .............................. <me>
  [105] pushsymb 60 ............................. <#x>
  [107] getprop 324 ............................. <pLocation>
  [110] pushsymb 60 ............................. <#x>
  [112] pusharglist 2 ........................... <pLocation, #x>
  [114] objcall 31 .............................. <pLocation[#x]>
  [116] pushsymb 61 ............................. <#y>
  [118] getprop 324 ............................. <pLocation>
  [121] pushsymb 61 ............................. <#y>
  [123] pusharglist 2 ........................... <pLocation, #y>
  [125] objcall 31 .............................. <pLocation[#y]>
  [127] pushsymb 62 ............................. <#z>
  [129] getprop 324 ............................. <pLocation>
  [132] pushsymb 62 ............................. <#z>
  [134] pusharglist 2 ........................... <pLocation, #z>
  [136] objcall 31 .............................. <pLocation[#z]>
  [138] pushsymb 340 ............................ <#state>
  [141] getprop 328 ............................. <STATE_STUNNED>
  [144] pushsymb 341 ............................ <#dirBody>
  [147] getprop 323 ............................. <pDirBody>
  [150] pusharglist 10 .......................... <[#x: pLocation[#x], #y: pLocation[#y], #z: pLocation[#z], #state: STATE_STUNNED, #dirBody: pDirBody]>
  [152] pushproplist ............................ <[#x: pLocation[#x], #y: pLocation[#y], #z: pLocation[#z], #state: STATE_STUNNED, #dirBody: pDirBody]>
  [153] pusharglistnoret 2 ...................... <me, [#x: pLocation[#x], #y: pLocation[#y], #z: pLocation[#z], #state: STATE_STUNNED, #dirBody: pDirBody]>
  [155] objcall 318 ............................. me.updateRoomObject([#x: pLocation[#x], #y: pLocation[#y], #z: pLocation[#z], #state: STATE_STUNNED, #dirBody: pDirBody])
  [158] jmp [223]
  [161] peek 0
  [163] pushsymb 249 ............................ <#gamereset>
  [165] nteq
  [166] jmpifz [177] ............................ (case) #gamereset, ...
  [169] peek 0
  [171] pushsymb 207 ............................ <#gameend>
  [173] eq
  [174] jmpifz [210] ............................ (case) ..., #gameend:
  [177] getprop 325 ............................. <pTargetLocation>
  [180] pushsymb 60 ............................. <#x>
  [182] pushint8 1 .............................. <1>
  [184] inv ..................................... <-1>
  [185] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [187] objcall 123 ............................. pTargetLocation[#x] = -1
  [189] getprop 326 ............................. <pExpectedLocation>
  [192] pushsymb 60 ............................. <#x>
  [194] pushint8 1 .............................. <1>
  [196] inv ..................................... <-1>
  [197] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [199] objcall 123 ............................. pExpectedLocation[#x] = -1
  [201] getparam 0 .............................. <me>
  [203] pusharglistnoret 1 ...................... <me>
  [205] objcall 15 .............................. me.clearEffectAnimation()
  [207] jmp [223] ............................... (case) otherwise:
  [210] pushcons 3 .............................. <"* Gameobject: UNDEFINED EVENT:">
  [212] getparam 1 .............................. <tEvent>
  [214] joinpadstr .............................. <"* Gameobject: UNDEFINED EVENT:" && tEvent>
  [215] getparam 2 .............................. <tdata>
  [217] joinpadstr .............................. <"* Gameobject: UNDEFINED EVENT:" && tEvent && tdata>
  [218] pusharglistnoret 1 ...................... <"* Gameobject: UNDEFINED EVENT:" && tEvent && tdata>
  [220] extcall 339 ............................. put "* Gameobject: UNDEFINED EVENT:" && tEvent && tdata
  [223] pop 1 ................................... end case
  [225] ret
end

on createRoomObject me, tDataStruct
  [  0] pushsymb 125 ............................ <#temp>
  [  2] pushcons 4 .............................. <"bb_gamesystem.roomobject.player.wrapper.class">
  [  4] pusharglist 1 ........................... <"bb_gamesystem.roomobject.player.wrapper.class">
  [  6] extcall 344 ............................. <getClassVariable("bb_gamesystem.roomobject.player.wrapper.class")>
  [  9] pusharglist 2 ........................... <#temp, getClassVariable("bb_gamesystem.roomobject.player.wrapper.class")>
  [ 11] extcall 124 ............................. <createObject(#temp, getClassVariable("bb_gamesystem.roomobject.player.wrapper.class"))>
  [ 13] setprop 343 ............................. pRoomObject = createObject(#temp, getClassVariable("bb_gamesystem.roomobject.player.wrapper.class"))
  [ 16] getprop 343 ............................. <pRoomObject>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <pRoomObject = 0>
  [ 21] jmpifz [ 39] ............................ if pRoomObject = 0 then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 5 .............................. <"Cannot create roomobject wrapper!">
  [ 28] pushsymb 314 ............................ <#createRoomObject>
  [ 31] pusharglist 3 ........................... <me, "Cannot create roomobject wrapper!", #createRoomObject>
  [ 33] extcall 173 ............................. <error(me, "Cannot create roomobject wrapper!", #createRoomObject)>
  [ 35] pusharglistnoret 1 ...................... <error(me, "Cannot create roomobject wrapper!", #createRoomObject)>
  [ 37] extcall 28 .............................. return error(me, "Cannot create roomobject wrapper!", #createRoomObject)
  [ 39] getprop 343 ............................. <pRoomObject>
  [ 42] getparam 1 .............................. <tDataStruct>
  [ 44] pusharglist 2 ........................... <pRoomObject, tDataStruct>
  [ 46] objcall 135 ............................. <pRoomObject.define(tDataStruct)>
  [ 48] pusharglistnoret 1 ...................... <pRoomObject.define(tDataStruct)>
  [ 50] extcall 28 .............................. return pRoomObject.define(tDataStruct)
  [ 52] ret
end

on removeRoomObject me
  [  0] getprop 343 ............................. <pRoomObject>
  [  3] pusharglistnoret 1 ...................... <pRoomObject>
  [  5] objcall 1 ............................... pRoomObject.deconstruct()
  [  7] pusharglist 0 ........................... <>
  [  9] extcall 116 ............................. <VOID>
  [ 11] setprop 343 ............................. pRoomObject = VOID
  [ 14] pushint8 1 .............................. <1>
  [ 16] pusharglistnoret 1 ...................... <1>
  [ 18] extcall 28 .............................. return 1
  [ 20] ret
end

on roomObjectAction me, tAction, tdata
  [  0] getprop 343 ............................. <pRoomObject>
  [  3] pusharglist 1 ........................... <pRoomObject>
  [  5] extcall 26 .............................. <objectp(pRoomObject)>
  [  7] not ..................................... <not objectp(pRoomObject)>
  [  8] jmpifz [ 26] ............................ if not objectp(pRoomObject) then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 6 .............................. <"Roomobject wrapper missing!">
  [ 15] pushsymb 346 ............................ <#getRoomObject>
  [ 18] pusharglist 3 ........................... <me, "Roomobject wrapper missing!", #getRoomObject>
  [ 20] extcall 173 ............................. <error(me, "Roomobject wrapper missing!", #getRoomObject)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Roomobject wrapper missing!", #getRoomObject)>
  [ 24] extcall 28 .............................. return error(me, "Roomobject wrapper missing!", #getRoomObject)
  [ 26] pushsymb 2 .............................. <#roomObjectAction>
  [ 28] getprop 343 ............................. <pRoomObject>
  [ 31] getparam 1 .............................. <tAction>
  [ 33] getparam 2 .............................. <tdata>
  [ 35] pusharglistnoret 4 ...................... <#roomObjectAction, pRoomObject, tAction, tdata>
  [ 37] extcall 103 ............................. call(#roomObjectAction, pRoomObject, tAction, tdata)
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 1 ...................... <1>
  [ 43] extcall 28 .............................. return 1
  [ 45] ret
end

on getRoomObjectImage me
  [  0] getprop 343 ............................. <pRoomObject>
  [  3] pusharglist 1 ........................... <pRoomObject>
  [  5] extcall 26 .............................. <objectp(pRoomObject)>
  [  7] not ..................................... <not objectp(pRoomObject)>
  [  8] jmpifz [ 16] ............................ if not objectp(pRoomObject) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 28 .............................. return 0
  [ 16] getprop 343 ............................. <pRoomObject>
  [ 19] pusharglist 1 ........................... <pRoomObject>
  [ 21] objcall 12 .............................. <pRoomObject.getPicture()>
  [ 23] pusharglistnoret 1 ...................... <pRoomObject.getPicture()>
  [ 25] extcall 28 .............................. return pRoomObject.getPicture()
  [ 27] ret
end

on updateRoomObjectGoal me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 298 ............................. <me.checkStateAllowsMoving()>
  [  7] not ..................................... <not me.checkStateAllowsMoving()>
  [  8] jmpifz [ 17] ............................ if not me.checkStateAllowsMoving() then
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 28 .............................. return 1
  [ 17] getprop 325 ............................. <pTargetLocation>
  [ 20] pushsymb 60 ............................. <#x>
  [ 22] getparam 1 .............................. <tdata>
  [ 24] pushsymb 347 ............................ <#goalx>
  [ 27] pusharglist 2 ........................... <tdata, #goalx>
  [ 29] objcall 31 .............................. <tdata[#goalx]>
  [ 31] pusharglistnoret 3 ...................... <pTargetLocation, #x, tdata[#goalx]>
  [ 33] objcall 123 ............................. pTargetLocation[#x] = tdata[#goalx]
  [ 35] getprop 325 ............................. <pTargetLocation>
  [ 38] pushsymb 61 ............................. <#y>
  [ 40] getparam 1 .............................. <tdata>
  [ 42] pushsymb 348 ............................ <#goaly>
  [ 45] pusharglist 2 ........................... <tdata, #goaly>
  [ 47] objcall 31 .............................. <tdata[#goaly]>
  [ 49] pusharglistnoret 3 ...................... <pTargetLocation, #y, tdata[#goaly]>
  [ 51] objcall 123 ............................. pTargetLocation[#y] = tdata[#goaly]
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglist 1 ........................... <me>
  [ 57] objcall 201 ............................. <me.getGameSystem()>
  [ 59] setlocal 0 .............................. tGameSystem = me.getGameSystem()
  [ 61] getlocal 0 .............................. <tGameSystem>
  [ 63] pushzero ................................ <0>
  [ 64] eq ...................................... <tGameSystem = 0>
  [ 65] jmpifz [ 73] ............................ if tGameSystem = 0 then
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 28 .............................. return 0
  [ 73] getparam 1 .............................. <tdata>
  [ 75] pushsymb 60 ............................. <#x>
  [ 77] getprop 324 ............................. <pLocation>
  [ 80] pushsymb 60 ............................. <#x>
  [ 82] pusharglist 2 ........................... <pLocation, #x>
  [ 84] objcall 31 .............................. <pLocation[#x]>
  [ 86] pusharglistnoret 3 ...................... <tdata, #x, pLocation[#x]>
  [ 88] objcall 123 ............................. tdata[#x] = pLocation[#x]
  [ 90] getparam 1 .............................. <tdata>
  [ 92] pushsymb 61 ............................. <#y>
  [ 94] getprop 324 ............................. <pLocation>
  [ 97] pushsymb 61 ............................. <#y>
  [ 99] pusharglist 2 ........................... <pLocation, #y>
  [101] objcall 31 .............................. <pLocation[#y]>
  [103] pusharglistnoret 3 ...................... <tdata, #y, pLocation[#y]>
  [105] objcall 123 ............................. tdata[#y] = pLocation[#y]
  [107] getparam 1 .............................. <tdata>
  [109] pushsymb 62 ............................. <#z>
  [111] getprop 324 ............................. <pLocation>
  [114] pushsymb 62 ............................. <#z>
  [116] pusharglist 2 ........................... <pLocation, #z>
  [118] objcall 31 .............................. <pLocation[#z]>
  [120] pusharglistnoret 3 ...................... <tdata, #z, pLocation[#z]>
  [122] objcall 123 ............................. tdata[#z] = pLocation[#z]
  [124] getparam 1 .............................. <tdata>
  [126] pushsymb 341 ............................ <#dirBody>
  [129] getprop 323 ............................. <pDirBody>
  [132] pusharglistnoret 3 ...................... <tdata, #dirBody, pDirBody>
  [134] objcall 123 ............................. tdata[#dirBody] = pDirBody
  [136] getprop 326 ............................. <pExpectedLocation>
  [139] pushsymb 60 ............................. <#x>
  [141] pushint8 1 .............................. <1>
  [143] inv ..................................... <-1>
  [144] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [146] objcall 123 ............................. pExpectedLocation[#x] = -1
  [148] getparam 0 .............................. <me>
  [150] getparam 1 .............................. <tdata>
  [152] pusharglist 2 ........................... <me, tdata>
  [154] objcall 319 ............................. <me.updateRoomObjectLocation(tdata)>
  [157] pusharglistnoret 1 ...................... <me.updateRoomObjectLocation(tdata)>
  [159] extcall 28 .............................. return me.updateRoomObjectLocation(tdata)
  [161] ret
end

on checkStateAllowsMoving me, tstate
  [  0] getparam 1 .............................. <tstate>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 116 ............................. <VOID>
  [  6] eq ...................................... <tstate = VOID>
  [  7] jmpifz [ 22] ............................ if tstate = VOID then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 340 ............................ <#state>
  [ 15] pusharglist 2 ........................... <me, #state>
  [ 17] objcall 349 ............................. <me.getGameObjectProperty(#state)>
  [ 20] setparam 1 .............................. tstate = me.getGameObjectProperty(#state)
  [ 22] getparam 1 .............................. <tstate>
  [ 24] peek 0 .................................. case tstate of
  [ 26] getprop 328 ............................. <STATE_STUNNED>
  [ 29] nteq
  [ 30] jmpifz [ 60] ............................ (case) STATE_STUNNED, ...
  [ 33] peek 0
  [ 35] getprop 333 ............................. <STATE_CLIMBING_INTO_CANNON>
  [ 38] nteq
  [ 39] jmpifz [ 60] ............................ (case) ..., STATE_CLIMBING_INTO_CANNON, ...
  [ 42] peek 0
  [ 44] getprop 334 ............................. <STATE_FLYING_THROUGH_AIR>
  [ 47] nteq
  [ 48] jmpifz [ 60] ............................ (case) ..., STATE_FLYING_THROUGH_AIR, ...
  [ 51] peek 0
  [ 53] getprop 335 ............................. <STATE_BALL_BROKEN>
  [ 56] eq
  [ 57] jmpifz [ 70] ............................ (case) ..., STATE_BALL_BROKEN:
  [ 60] pop 1
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 28 .............................. return 0
  [ 67] jmp [ 78] ............................... (case) otherwise:
  [ 70] pop 1
  [ 72] pushint8 1 .............................. <1>
  [ 74] pusharglistnoret 1 ...................... <1>
  [ 76] extcall 28 .............................. return 1
  [ 78] pop 1 ................................... end case
  [ 80] ret
end

on updateRoomObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 340 ............................ <#state>
  [  5] pusharglist 2 ........................... <me, #state>
  [  7] objcall 349 ............................. <me.getGameObjectProperty(#state)>
  [ 10] setlocal 0 .............................. tOldState = me.getGameObjectProperty(#state)
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 340 ............................ <#state>
  [ 17] pusharglist 2 ........................... <tdata, #state>
  [ 19] objcall 31 .............................. <tdata[#state]>
  [ 21] getlocal 0 .............................. <tOldState>
  [ 23] nteq .................................... <tdata[#state] <> tOldState>
  [ 24] jmpifz [617] ............................ if tdata[#state] <> tOldState then
  [ 27] getparam 0 .............................. <me>
  [ 29] pushsymb 340 ............................ <#state>
  [ 32] getparam 1 .............................. <tdata>
  [ 34] pushsymb 340 ............................ <#state>
  [ 37] pusharglist 2 ........................... <tdata, #state>
  [ 39] objcall 31 .............................. <tdata[#state]>
  [ 41] pusharglist 2 ........................... <[#state: tdata[#state]]>
  [ 43] pushproplist ............................ <[#state: tdata[#state]]>
  [ 44] pusharglistnoret 2 ...................... <me, [#state: tdata[#state]]>
  [ 46] objcall 350 ............................. me.setGameObjectSyncProperty([#state: tdata[#state]])
  [ 49] getlocal 0 .............................. <tOldState>
  [ 51] getprop 335 ............................. <STATE_BALL_BROKEN>
  [ 54] eq ...................................... <tOldState = STATE_BALL_BROKEN>
  [ 55] jmpifz [ 68] ............................ if tOldState = STATE_BALL_BROKEN then
  [ 58] getparam 0 .............................. <me>
  [ 60] pushsymb 39 ............................. <#set_ball>
  [ 62] pushint8 1 .............................. <1>
  [ 64] pusharglistnoret 3 ...................... <me, #set_ball, 1>
  [ 66] objcall 2 ............................... me.roomObjectAction(#set_ball, 1)
  [ 68] getparam 1 .............................. <tdata>
  [ 70] pushsymb 340 ............................ <#state>
  [ 73] pusharglist 2 ........................... <tdata, #state>
  [ 75] objcall 31 .............................. <tdata[#state]>
  [ 77] peek 0 .................................. case tdata[#state] of
  [ 79] getprop 327 ............................. <STATE_NORMAL>
  [ 82] eq
  [ 83] jmpifz [120] ............................ (case) STATE_NORMAL:
  [ 86] getparam 0 .............................. <me>
  [ 88] pusharglistnoret 1 ...................... <me>
  [ 90] objcall 15 .............................. me.clearEffectAnimation()
  [ 92] getparam 0 .............................. <me>
  [ 94] pushsymb 36 ............................. <#reset_ball_color>
  [ 96] pusharglistnoret 2 ...................... <me, #reset_ball_color>
  [ 98] objcall 2 ............................... me.roomObjectAction(#reset_ball_color)
  [100] getparam 0 .............................. <me>
  [102] pushsymb 38 ............................. <#set_bounce_state>
  [104] getparam 1 .............................. <tdata>
  [106] pushsymb 340 ............................ <#state>
  [109] pusharglist 2 ........................... <tdata, #state>
  [111] objcall 31 .............................. <tdata[#state]>
  [113] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [115] objcall 2 ............................... me.roomObjectAction(#set_bounce_state, tdata[#state])
  [117] jmp [615]
  [120] peek 0
  [122] getprop 330 ............................. <STATE_HIGH_JUMPS>
  [125] eq
  [126] jmpifz [149] ............................ (case) STATE_HIGH_JUMPS:
  [129] getparam 0 .............................. <me>
  [131] pushsymb 38 ............................. <#set_bounce_state>
  [133] getparam 1 .............................. <tdata>
  [135] pushsymb 340 ............................ <#state>
  [138] pusharglist 2 ........................... <tdata, #state>
  [140] objcall 31 .............................. <tdata[#state]>
  [142] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [144] objcall 2 ............................... me.roomObjectAction(#set_bounce_state, tdata[#state])
  [146] jmp [615]
  [149] peek 0
  [151] getprop 331 ............................. <STATE_CLEANING_TILES>
  [154] eq
  [155] jmpifz [178] ............................ (case) STATE_CLEANING_TILES:
  [158] getparam 0 .............................. <me>
  [160] pushsymb 38 ............................. <#set_bounce_state>
  [162] getparam 1 .............................. <tdata>
  [164] pushsymb 340 ............................ <#state>
  [167] pusharglist 2 ........................... <tdata, #state>
  [169] objcall 31 .............................. <tdata[#state]>
  [171] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [173] objcall 2 ............................... me.roomObjectAction(#set_bounce_state, tdata[#state])
  [175] jmp [615]
  [178] peek 0
  [180] getprop 328 ............................. <STATE_STUNNED>
  [183] eq
  [184] jmpifz [282] ............................ (case) STATE_STUNNED:
  [187] getprop 325 ............................. <pTargetLocation>
  [190] pushsymb 60 ............................. <#x>
  [192] pushint8 1 .............................. <1>
  [194] inv ..................................... <-1>
  [195] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [197] objcall 123 ............................. pTargetLocation[#x] = -1
  [199] getprop 326 ............................. <pExpectedLocation>
  [202] pushsymb 60 ............................. <#x>
  [204] pushint8 1 .............................. <1>
  [206] inv ..................................... <-1>
  [207] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [209] objcall 123 ............................. pExpectedLocation[#x] = -1
  [211] getparam 0 .............................. <me>
  [213] pushsymb 49 ............................. <#loop>
  [215] pushcons 7 .............................. <"bb2_stunned_">
  [217] pushsymb 50 ............................. <#ink>
  [219] pushint8 8 .............................. <8>
  [221] pusharglist 2 ........................... <[#ink: 8]>
  [223] pushproplist ............................ <[#ink: 8]>
  [224] pusharglistnoret 4 ...................... <me, #loop, "bb2_stunned_", [#ink: 8]>
  [226] objcall 17 .............................. me.createEffect(#loop, "bb2_stunned_", [#ink: 8])
  [228] getparam 0 .............................. <me>
  [230] pushsymb 38 ............................. <#set_bounce_state>
  [232] getparam 1 .............................. <tdata>
  [234] pushsymb 340 ............................ <#state>
  [237] pusharglist 2 ........................... <tdata, #state>
  [239] objcall 31 .............................. <tdata[#state]>
  [241] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [243] objcall 2 ............................... me.roomObjectAction(#set_bounce_state, tdata[#state])
  [245] getparam 0 .............................. <me>
  [247] pushsymb 197 ............................ <#id>
  [249] pusharglist 2 ........................... <me, #id>
  [251] objcall 349 ............................. <me.getGameObjectProperty(#id)>
  [254] getparam 0 .............................. <me>
  [256] pusharglist 1 ........................... <me>
  [258] objcall 322 ............................. <me.getOwnGameIndex()>
  [261] eq ...................................... <me.getGameObjectProperty(#id) = me.getOwnGameIndex()>
  [262] jmpifz [279] ............................ if me.getGameObjectProperty(#id) = me.getOwnGameIndex() then
  [265] getparam 0 .............................. <me>
  [267] pusharglist 1 ........................... <me>
  [269] objcall 201 ............................. <me.getGameSystem()>
  [271] pushsymb 199 ............................ <#soundeffect>
  [273] pushcons 8 .............................. <"SFX-10-stunned">
  [275] pusharglistnoret 3 ...................... <me.getGameSystem(), #soundeffect, "SFX-10-stunned">
  [277] objcall 200 ............................. me.getGameSystem().sendGameSystemEvent(#soundeffect, "SFX-10-stunned")
  [279] jmp [615]
  [282] peek 0
  [284] getprop 333 ............................. <STATE_CLIMBING_INTO_CANNON>
  [287] nteq
  [288] jmpifz [300] ............................ (case) STATE_CLIMBING_INTO_CANNON, ...
  [291] peek 0
  [293] getprop 334 ............................. <STATE_FLYING_THROUGH_AIR>
  [296] eq
  [297] jmpifz [362] ............................ (case) ..., STATE_FLYING_THROUGH_AIR:
  [300] getparam 0 .............................. <me>
  [302] pushsymb 38 ............................. <#set_bounce_state>
  [304] getparam 1 .............................. <tdata>
  [306] pushsymb 340 ............................ <#state>
  [309] pusharglist 2 ........................... <tdata, #state>
  [311] objcall 31 .............................. <tdata[#state]>
  [313] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [315] objcall 2 ............................... me.roomObjectAction(#set_bounce_state, tdata[#state])
  [317] getprop 325 ............................. <pTargetLocation>
  [320] pushsymb 60 ............................. <#x>
  [322] pushint8 1 .............................. <1>
  [324] inv ..................................... <-1>
  [325] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [327] objcall 123 ............................. pTargetLocation[#x] = -1
  [329] getprop 326 ............................. <pExpectedLocation>
  [332] pushsymb 60 ............................. <#x>
  [334] pushint8 1 .............................. <1>
  [336] inv ..................................... <-1>
  [337] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [339] objcall 123 ............................. pExpectedLocation[#x] = -1
  [341] getparam 0 .............................. <me>
  [343] pushsymb 48 ............................. <#fly_into>
  [345] getparam 1 .............................. <tdata>
  [347] pusharglistnoret 3 ...................... <me, #fly_into, tdata>
  [349] objcall 2 ............................... me.roomObjectAction(#fly_into, tdata)
  [351] pop 1
  [353] pushint8 1 .............................. <1>
  [355] pusharglistnoret 1 ...................... <1>
  [357] extcall 28 .............................. return 1
  [359] jmp [615]
  [362] peek 0
  [364] getprop 332 ............................. <STATE_COLORING_FOR_OPPONENT>
  [367] eq
  [368] jmpifz [479] ............................ (case) STATE_COLORING_FOR_OPPONENT:
  [371] getparam 0 .............................. <me>
  [373] pusharglistnoret 1 ...................... <me>
  [375] objcall 15 .............................. me.clearEffectAnimation()
  [377] getparam 0 .............................. <me>
  [379] pushsymb 38 ............................. <#set_bounce_state>
  [381] getparam 1 .............................. <tdata>
  [383] pushsymb 340 ............................ <#state>
  [386] pusharglist 2 ........................... <tdata, #state>
  [388] objcall 31 .............................. <tdata[#state]>
  [390] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [392] objcall 2 ............................... me.roomObjectAction(#set_bounce_state, tdata[#state])
  [394] getparam 0 .............................. <me>
  [396] pushsymb 80 ............................. <#once>
  [398] pushcons 9 .............................. <"bb2_efct_pu_harlequin_">
  [400] pushsymb 50 ............................. <#ink>
  [402] pushint8 33 ............................. <33>
  [404] pusharglist 2 ........................... <[#ink: 33]>
  [406] pushproplist ............................ <[#ink: 33]>
  [407] pusharglistnoret 4 ...................... <me, #once, "bb2_efct_pu_harlequin_", [#ink: 33]>
  [409] objcall 17 .............................. me.createEffect(#once, "bb2_efct_pu_harlequin_", [#ink: 33])
  [411] getparam 1 .............................. <tdata>
  [413] pushsymb 351 ............................ <#coloringForOpponentTeamId>
  [416] pusharglist 2 ........................... <tdata, #coloringForOpponentTeamId>
  [418] objcall 31 .............................. <tdata[#coloringForOpponentTeamId]>
  [420] setlocal 1 .............................. tOpponentId = tdata[#coloringForOpponentTeamId]
  [422] getparam 0 .............................. <me>
  [424] pusharglist 1 ........................... <me>
  [426] objcall 201 ............................. <me.getGameSystem()>
  [428] getlocal 1 .............................. <tOpponentId>
  [430] pusharglist 2 ........................... <me.getGameSystem(), tOpponentId>
  [432] objcall 213 ............................. <me.getGameSystem().getGameObject(tOpponentId)>
  [434] setlocal 2 .............................. tGameObject = me.getGameSystem().getGameObject(tOpponentId)
  [436] getlocal 2 .............................. <tGameObject>
  [438] pushzero ................................ <0>
  [439] nteq .................................... <tGameObject <> 0>
  [440] jmpifz [476] ............................ if tGameObject <> 0 then
  [443] getlocal 2 .............................. <tGameObject>
  [445] pushsymb 257 ............................ <#teamId>
  [448] pusharglist 2 ........................... <tGameObject, #teamId>
  [450] objcall 349 ............................. <tGameObject.getGameObjectProperty(#teamId)>
  [453] setlocal 3 .............................. tTeamId = tGameObject.getGameObjectProperty(#teamId)
  [455] getparam 1 .............................. <tdata>
  [457] pushsymb 35 ............................. <#opponentTeamId>
  [459] getlocal 3 .............................. <tTeamId>
  [461] pusharglistnoret 3 ...................... <tdata, #opponentTeamId, tTeamId>
  [463] objcall 352 ............................. tdata.addProp(#opponentTeamId, tTeamId)
  [466] getparam 0 .............................. <me>
  [468] pushsymb 33 ............................. <#set_ball_color>
  [470] getparam 1 .............................. <tdata>
  [472] pusharglistnoret 3 ...................... <me, #set_ball_color, tdata>
  [474] objcall 2 ............................... me.roomObjectAction(#set_ball_color, tdata)
  [476] jmp [615]
  [479] peek 0
  [481] getprop 335 ............................. <STATE_BALL_BROKEN>
  [484] eq
  [485] jmpifz [615] ............................ (case) STATE_BALL_BROKEN:
  [488] getparam 0 .............................. <me>
  [490] pushsymb 38 ............................. <#set_bounce_state>
  [492] getparam 1 .............................. <tdata>
  [494] pushsymb 340 ............................ <#state>
  [497] pusharglist 2 ........................... <tdata, #state>
  [499] objcall 31 .............................. <tdata[#state]>
  [501] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [503] objcall 2 ............................... me.roomObjectAction(#set_bounce_state, tdata[#state])
  [505] getparam 0 .............................. <me>
  [507] pushsymb 80 ............................. <#once>
  [509] pushcons 9 .............................. <"bb2_efct_pu_harlequin_">
  [511] pushsymb 50 ............................. <#ink>
  [513] pushint8 33 ............................. <33>
  [515] pusharglist 2 ........................... <[#ink: 33]>
  [517] pushproplist ............................ <[#ink: 33]>
  [518] pusharglistnoret 4 ...................... <me, #once, "bb2_efct_pu_harlequin_", [#ink: 33]>
  [520] objcall 17 .............................. me.createEffect(#once, "bb2_efct_pu_harlequin_", [#ink: 33])
  [522] getparam 0 .............................. <me>
  [524] pushsymb 49 ............................. <#loop>
  [526] pushcons 7 .............................. <"bb2_stunned_">
  [528] pushsymb 112 ............................ <#loc>
  [530] pushzero ................................ <0>
  [531] pushint8 13 ............................. <13>
  [533] pusharglist 2 ........................... <0, 13>
  [535] extcall 96 .............................. <point(0, 13)>
  [537] pushsymb 50 ............................. <#ink>
  [539] pushint8 8 .............................. <8>
  [541] pusharglist 4 ........................... <[#loc: point(0, 13), #ink: 8]>
  [543] pushproplist ............................ <[#loc: point(0, 13), #ink: 8]>
  [544] pusharglistnoret 4 ...................... <me, #loop, "bb2_stunned_", [#loc: point(0, 13), #ink: 8]>
  [546] objcall 17 .............................. me.createEffect(#loop, "bb2_stunned_", [#loc: point(0, 13), #ink: 8])
  [548] getprop 325 ............................. <pTargetLocation>
  [551] pushsymb 60 ............................. <#x>
  [553] pushint8 1 .............................. <1>
  [555] inv ..................................... <-1>
  [556] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [558] objcall 123 ............................. pTargetLocation[#x] = -1
  [560] getprop 326 ............................. <pExpectedLocation>
  [563] pushsymb 60 ............................. <#x>
  [565] pushint8 1 .............................. <1>
  [567] inv ..................................... <-1>
  [568] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [570] objcall 123 ............................. pExpectedLocation[#x] = -1
  [572] getparam 0 .............................. <me>
  [574] pushsymb 39 ............................. <#set_ball>
  [576] pushzero ................................ <0>
  [577] pusharglistnoret 3 ...................... <me, #set_ball, 0>
  [579] objcall 2 ............................... me.roomObjectAction(#set_ball, 0)
  [581] getparam 0 .............................. <me>
  [583] pushsymb 197 ............................ <#id>
  [585] pusharglist 2 ........................... <me, #id>
  [587] objcall 349 ............................. <me.getGameObjectProperty(#id)>
  [590] getparam 0 .............................. <me>
  [592] pusharglist 1 ........................... <me>
  [594] objcall 322 ............................. <me.getOwnGameIndex()>
  [597] eq ...................................... <me.getGameObjectProperty(#id) = me.getOwnGameIndex()>
  [598] jmpifz [615] ............................ if me.getGameObjectProperty(#id) = me.getOwnGameIndex() then
  [601] getparam 0 .............................. <me>
  [603] pusharglist 1 ........................... <me>
  [605] objcall 201 ............................. <me.getGameSystem()>
  [607] pushsymb 199 ............................ <#soundeffect>
  [609] pushcons 8 .............................. <"SFX-10-stunned">
  [611] pusharglistnoret 3 ...................... <me.getGameSystem(), #soundeffect, "SFX-10-stunned">
  [613] objcall 200 ............................. me.getGameSystem().sendGameSystemEvent(#soundeffect, "SFX-10-stunned")
  [615] pop 1 ................................... end case
  [617] getparam 0 .............................. <me>
  [619] getparam 1 .............................. <tdata>
  [621] pusharglist 2 ........................... <me, tdata>
  [623] objcall 319 ............................. <me.updateRoomObjectLocation(tdata)>
  [626] pusharglistnoret 1 ...................... <me.updateRoomObjectLocation(tdata)>
  [628] extcall 28 .............................. return me.updateRoomObjectLocation(tdata)
  [630] ret
end

on updateRoomObjectLocation me, tuser
  [  0] getparam 1 .............................. <tuser>
  [  2] pushsymb 60 ............................. <#x>
  [  4] pusharglist 2 ........................... <tuser, #x>
  [  6] objcall 31 .............................. <tuser[#x]>
  [  8] getprop 325 ............................. <pTargetLocation>
  [ 11] pushsymb 60 ............................. <#x>
  [ 13] pusharglist 2 ........................... <pTargetLocation, #x>
  [ 15] objcall 31 .............................. <pTargetLocation[#x]>
  [ 17] eq ...................................... <tuser[#x] = pTargetLocation[#x]>
  [ 18] getparam 1 .............................. <tuser>
  [ 20] pushsymb 61 ............................. <#y>
  [ 22] pusharglist 2 ........................... <tuser, #y>
  [ 24] objcall 31 .............................. <tuser[#y]>
  [ 26] getprop 325 ............................. <pTargetLocation>
  [ 29] pushsymb 61 ............................. <#y>
  [ 31] pusharglist 2 ........................... <pTargetLocation, #y>
  [ 33] objcall 31 .............................. <pTargetLocation[#y]>
  [ 35] eq ...................................... <tuser[#y] = pTargetLocation[#y]>
  [ 36] and ..................................... <(tuser[#x] = pTargetLocation[#x]) and (tuser[#y] = pTargetLocation[#y])>
  [ 37] jmpifz [ 67] ............................ if (tuser[#x] = pTargetLocation[#x]) and (tuser[#y] = pTargetLocation[#y]) then / else
  [ 40] getprop 325 ............................. <pTargetLocation>
  [ 43] pushsymb 60 ............................. <#x>
  [ 45] pushint8 1 .............................. <1>
  [ 47] inv ..................................... <-1>
  [ 48] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [ 50] objcall 123 ............................. pTargetLocation[#x] = -1
  [ 52] getprop 326 ............................. <pExpectedLocation>
  [ 55] pushsymb 60 ............................. <#x>
  [ 57] pushint8 1 .............................. <1>
  [ 59] inv ..................................... <-1>
  [ 60] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [ 62] objcall 123 ............................. pExpectedLocation[#x] = -1
  [ 64] jmp [ 92]
  [ 67] getparam 0 .............................. <me>
  [ 69] getparam 1 .............................. <tuser>
  [ 71] pushsymb 60 ............................. <#x>
  [ 73] pusharglist 2 ........................... <tuser, #x>
  [ 75] objcall 31 .............................. <tuser[#x]>
  [ 77] getparam 1 .............................. <tuser>
  [ 79] pushsymb 61 ............................. <#y>
  [ 81] pusharglist 2 ........................... <tuser, #y>
  [ 83] objcall 31 .............................. <tuser[#y]>
  [ 85] pusharglist 3 ........................... <me, tuser[#x], tuser[#y]>
  [ 87] objcall 320 ............................. <me.solveNextTile(tuser[#x], tuser[#y])>
  [ 90] setlocal 0 .............................. tNextLoc = me.solveNextTile(tuser[#x], tuser[#y])
  [ 92] getlocal 0 .............................. <tNextLoc>
  [ 94] pushzero ................................ <0>
  [ 95] eq ...................................... <tNextLoc = 0>
  [ 96] jmpifz [113] ............................ if tNextLoc = 0 then / else
  [ 99] getparam 1 .............................. <tuser>
  [101] pushsymb 341 ............................ <#dirBody>
  [104] pusharglist 2 ........................... <tuser, #dirBody>
  [106] objcall 31 .............................. <tuser[#dirBody]>
  [108] setlocal 1 .............................. tDirBody = tuser[#dirBody]
  [110] jmp [131]
  [113] getparam 1 .............................. <tuser>
  [115] pushsymb 341 ............................ <#dirBody>
  [118] getlocal 0 .............................. <tNextLoc>
  [120] pushsymb 341 ............................ <#dirBody>
  [123] pusharglist 2 ........................... <tNextLoc, #dirBody>
  [125] objcall 31 .............................. <tNextLoc[#dirBody]>
  [127] pusharglistnoret 3 ...................... <tuser, #dirBody, tNextLoc[#dirBody]>
  [129] objcall 123 ............................. tuser[#dirBody] = tNextLoc[#dirBody]
  [131] getparam 1 .............................. <tuser>
  [133] pushsymb 341 ............................ <#dirBody>
  [136] pusharglist 2 ........................... <tuser, #dirBody>
  [138] objcall 31 .............................. <tuser[#dirBody]>
  [140] setprop 323 ............................. pDirBody = tuser[#dirBody]
  [143] getprop 324 ............................. <pLocation>
  [146] pushsymb 60 ............................. <#x>
  [148] getparam 1 .............................. <tuser>
  [150] pushsymb 60 ............................. <#x>
  [152] pusharglist 2 ........................... <tuser, #x>
  [154] objcall 31 .............................. <tuser[#x]>
  [156] pusharglistnoret 3 ...................... <pLocation, #x, tuser[#x]>
  [158] objcall 123 ............................. pLocation[#x] = tuser[#x]
  [160] getprop 324 ............................. <pLocation>
  [163] pushsymb 61 ............................. <#y>
  [165] getparam 1 .............................. <tuser>
  [167] pushsymb 61 ............................. <#y>
  [169] pusharglist 2 ........................... <tuser, #y>
  [171] objcall 31 .............................. <tuser[#y]>
  [173] pusharglistnoret 3 ...................... <pLocation, #y, tuser[#y]>
  [175] objcall 123 ............................. pLocation[#y] = tuser[#y]
  [177] getprop 324 ............................. <pLocation>
  [180] pushsymb 62 ............................. <#z>
  [182] getparam 1 .............................. <tuser>
  [184] pushsymb 62 ............................. <#z>
  [186] pusharglist 2 ........................... <tuser, #z>
  [188] objcall 31 .............................. <tuser[#z]>
  [190] pusharglistnoret 3 ...................... <pLocation, #z, tuser[#z]>
  [192] objcall 123 ............................. pLocation[#z] = tuser[#z]
  [194] getprop 343 ............................. <pRoomObject>
  [197] pusharglist 1 ........................... <pRoomObject>
  [199] extcall 26 .............................. <objectp(pRoomObject)>
  [201] not ..................................... <not objectp(pRoomObject)>
  [202] jmpifz [220] ............................ if not objectp(pRoomObject) then
  [205] getparam 0 .............................. <me>
  [207] pushcons 10 ............................. <"Room object wrapper missing">
  [209] pushsymb 319 ............................ <#updateRoomObjectLocation>
  [212] pusharglist 3 ........................... <me, "Room object wrapper missing", #updateRoomObjectLocation>
  [214] extcall 173 ............................. <error(me, "Room object wrapper missing", #updateRoomObjectLocation)>
  [216] pusharglistnoret 1 ...................... <error(me, "Room object wrapper missing", #updateRoomObjectLocation)>
  [218] extcall 28 .............................. return error(me, "Room object wrapper missing", #updateRoomObjectLocation)
  [220] getprop 343 ............................. <pRoomObject>
  [223] getparam 1 .............................. <tuser>
  [225] pusharglistnoret 2 ...................... <pRoomObject, tuser>
  [227] objcall 169 ............................. pRoomObject.setLocation(tuser)
  [229] getparam 0 .............................. <me>
  [231] getparam 1 .............................. <tuser>
  [233] pusharglistnoret 2 ...................... <me, tuser>
  [235] objcall 16 .............................. me.setEffectAnimationLocations(tuser)
  [237] getprop 326 ............................. <pExpectedLocation>
  [240] pushsymb 60 ............................. <#x>
  [242] pusharglist 2 ........................... <pExpectedLocation, #x>
  [244] objcall 31 .............................. <pExpectedLocation[#x]>
  [246] pushint8 1 .............................. <1>
  [248] inv ..................................... <-1>
  [249] gt ...................................... <pExpectedLocation[#x] > -1>
  [250] jmpifz [316] ............................ if pExpectedLocation[#x] > -1 then
  [253] getparam 1 .............................. <tuser>
  [255] pushsymb 60 ............................. <#x>
  [257] pusharglist 2 ........................... <tuser, #x>
  [259] objcall 31 .............................. <tuser[#x]>
  [261] getprop 326 ............................. <pExpectedLocation>
  [264] pushsymb 60 ............................. <#x>
  [266] pusharglist 2 ........................... <pExpectedLocation, #x>
  [268] objcall 31 .............................. <pExpectedLocation[#x]>
  [270] nteq .................................... <tuser[#x] <> pExpectedLocation[#x]>
  [271] getparam 1 .............................. <tuser>
  [273] pushsymb 61 ............................. <#y>
  [275] pusharglist 2 ........................... <tuser, #y>
  [277] objcall 31 .............................. <tuser[#y]>
  [279] getprop 326 ............................. <pExpectedLocation>
  [282] pushsymb 61 ............................. <#y>
  [284] pusharglist 2 ........................... <pExpectedLocation, #y>
  [286] objcall 31 .............................. <pExpectedLocation[#y]>
  [288] nteq .................................... <tuser[#y] <> pExpectedLocation[#y]>
  [289] or ...................................... <(tuser[#x] <> pExpectedLocation[#x]) or (tuser[#y] <> pExpectedLocation[#y])>
  [290] getlocal 0 .............................. <tNextLoc>
  [292] pushzero ................................ <0>
  [293] nteq .................................... <tNextLoc <> 0>
  [294] and ..................................... <((tuser[#x] <> pExpectedLocation[#x]) or (tuser[#y] <> pExpectedLocation[#y])) and (tNextLoc <> 0)>
  [295] jmpifz [316] ............................ if ((tuser[#x] <> pExpectedLocation[#x]) or (tuser[#y] <> pExpectedLocation[#y])) and (tNextLoc <> 0) then
  [298] getprop 325 ............................. <pTargetLocation>
  [301] pushsymb 60 ............................. <#x>
  [303] pushint8 1 .............................. <1>
  [305] inv ..................................... <-1>
  [306] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [308] objcall 123 ............................. pTargetLocation[#x] = -1
  [310] pushint8 1 .............................. <1>
  [312] pusharglistnoret 1 ...................... <1>
  [314] extcall 28 .............................. return 1
  [316] getlocal 0 .............................. <tNextLoc>
  [318] pushzero ................................ <0>
  [319] nteq .................................... <tNextLoc <> 0>
  [320] jmpifz [357] ............................ if tNextLoc <> 0 then
  [323] getprop 326 ............................. <pExpectedLocation>
  [326] pushsymb 60 ............................. <#x>
  [328] getlocal 0 .............................. <tNextLoc>
  [330] pushsymb 60 ............................. <#x>
  [332] pusharglist 2 ........................... <tNextLoc, #x>
  [334] objcall 31 .............................. <tNextLoc[#x]>
  [336] pusharglistnoret 3 ...................... <pExpectedLocation, #x, tNextLoc[#x]>
  [338] objcall 123 ............................. pExpectedLocation[#x] = tNextLoc[#x]
  [340] getprop 326 ............................. <pExpectedLocation>
  [343] pushsymb 61 ............................. <#y>
  [345] getlocal 0 .............................. <tNextLoc>
  [347] pushsymb 61 ............................. <#y>
  [349] pusharglist 2 ........................... <tNextLoc, #y>
  [351] objcall 31 .............................. <tNextLoc[#y]>
  [353] pusharglistnoret 3 ...................... <pExpectedLocation, #y, tNextLoc[#y]>
  [355] objcall 123 ............................. pExpectedLocation[#y] = tNextLoc[#y]
  [357] getprop 343 ............................. <pRoomObject>
  [360] getparam 1 .............................. <tuser>
  [362] getlocal 0 .............................. <tNextLoc>
  [364] pusharglistnoret 3 ...................... <pRoomObject, tuser, tNextLoc>
  [366] objcall 355 ............................. pRoomObject.setTarget(tuser, tNextLoc)
  [369] pushint8 1 .............................. <1>
  [371] pusharglistnoret 1 ...................... <1>
  [373] extcall 28 .............................. return 1
  [375] ret
end

on solveNextTile me, tCurrentLocX, tCurrentLocY
  [  0] getprop 325 ............................. <pTargetLocation>
  [  3] pushsymb 60 ............................. <#x>
  [  5] pusharglist 2 ........................... <pTargetLocation, #x>
  [  7] objcall 31 .............................. <pTargetLocation[#x]>
  [  9] pushint8 1 .............................. <1>
  [ 11] inv ..................................... <-1>
  [ 12] eq ...................................... <pTargetLocation[#x] = -1>
  [ 13] jmpifz [ 21] ............................ if pTargetLocation[#x] = -1 then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 28 .............................. return 0
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 1 ........................... <me>
  [ 25] objcall 201 ............................. <me.getGameSystem()>
  [ 27] setlocal 0 .............................. tGameSystem = me.getGameSystem()
  [ 29] getlocal 0 .............................. <tGameSystem>
  [ 31] pushzero ................................ <0>
  [ 32] eq ...................................... <tGameSystem = 0>
  [ 33] jmpifz [ 41] ............................ if tGameSystem = 0 then
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 1 ...................... <0>
  [ 39] extcall 28 .............................. return 0
  [ 41] getprop 325 ............................. <pTargetLocation>
  [ 44] pushsymb 60 ............................. <#x>
  [ 46] pusharglist 2 ........................... <pTargetLocation, #x>
  [ 48] objcall 31 .............................. <pTargetLocation[#x]>
  [ 50] setlocal 1 .............................. tGoalX = pTargetLocation[#x]
  [ 52] getprop 325 ............................. <pTargetLocation>
  [ 55] pushsymb 61 ............................. <#y>
  [ 57] pusharglist 2 ........................... <pTargetLocation, #y>
  [ 59] objcall 31 .............................. <pTargetLocation[#y]>
  [ 61] setlocal 2 .............................. tGoalY = pTargetLocation[#y]
  [ 63] getprop 336 ............................. <pDirObject>
  [ 66] getparam 1 .............................. <tCurrentLocX>
  [ 68] getparam 2 .............................. <tCurrentLocY>
  [ 70] getlocal 1 .............................. <tGoalX>
  [ 72] getlocal 2 .............................. <tGoalY>
  [ 74] pusharglistnoret 5 ...................... <pDirObject, tCurrentLocX, tCurrentLocY, tGoalX, tGoalY>
  [ 76] objcall 358 ............................. pDirObject.defineLine(tCurrentLocX, tCurrentLocY, tGoalX, tGoalY)
  [ 79] getparam 1 .............................. <tCurrentLocX>
  [ 81] getprop 336 ............................. <pDirObject>
  [ 84] pusharglist 1 ........................... <pDirObject>
  [ 86] objcall 359 ............................. <pDirObject.getUnitVectorXComponent()>
  [ 89] add ..................................... <tCurrentLocX + pDirObject.getUnitVectorXComponent()>
  [ 90] setlocal 3 .............................. tNextX = tCurrentLocX + pDirObject.getUnitVectorXComponent()
  [ 92] getparam 2 .............................. <tCurrentLocY>
  [ 94] getprop 336 ............................. <pDirObject>
  [ 97] pusharglist 1 ........................... <pDirObject>
  [ 99] objcall 360 ............................. <pDirObject.getUnitVectorYComponent()>
  [102] add ..................................... <tCurrentLocY + pDirObject.getUnitVectorYComponent()>
  [103] setlocal 4 .............................. tNextY = tCurrentLocY + pDirObject.getUnitVectorYComponent()
  [105] getlocal 0 .............................. <tGameSystem>
  [107] pusharglist 1 ........................... <tGameSystem>
  [109] objcall 262 ............................. <tGameSystem.getWorld()>
  [112] getlocal 3 .............................. <tNextX>
  [114] getlocal 4 .............................. <tNextY>
  [116] pusharglist 3 ........................... <tGameSystem.getWorld(), tNextX, tNextY>
  [118] objcall 263 ............................. <tGameSystem.getWorld().getTile(tNextX, tNextY)>
  [121] setlocal 5 .............................. tNextTile = tGameSystem.getWorld().getTile(tNextX, tNextY)
  [123] getlocal 5 .............................. <tNextTile>
  [125] pushzero ................................ <0>
  [126] nteq .................................... <tNextTile <> 0>
  [127] jmpifz [187] ............................ if tNextTile <> 0 then
  [130] getlocal 5 .............................. <tNextTile>
  [132] getlocal 3 .............................. <tNextX>
  [134] getlocal 4 .............................. <tNextY>
  [136] pusharglist 3 ........................... <tNextTile, tNextX, tNextY>
  [138] objcall 264 ............................. <tNextTile.getType(tNextX, tNextY)>
  [141] setlocal 6 .............................. tNextZ = tNextTile.getType(tNextX, tNextY)
  [143] getlocal 6 .............................. <tNextZ>
  [145] pusharglist 1 ........................... <tNextZ>
  [147] extcall 181 ............................. <integer(tNextZ)>
  [149] pusharglist 1 ........................... <integer(tNextZ)>
  [151] extcall 265 ............................. <integerp(integer(tNextZ))>
  [154] jmpifz [187] ............................ if integerp(integer(tNextZ)) then
  [157] pushsymb 60 ............................. <#x>
  [159] getlocal 3 .............................. <tNextX>
  [161] pushsymb 61 ............................. <#y>
  [163] getlocal 4 .............................. <tNextY>
  [165] pushsymb 62 ............................. <#z>
  [167] getlocal 6 .............................. <tNextZ>
  [169] pushsymb 341 ............................ <#dirBody>
  [172] getprop 336 ............................. <pDirObject>
  [175] pusharglist 1 ........................... <pDirObject>
  [177] objcall 361 ............................. <pDirObject.getDirection()>
  [180] pusharglist 8 ........................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [182] pushproplist ............................ <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [183] pusharglistnoret 1 ...................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [185] extcall 28 .............................. return [#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]
  [187] getprop 336 ............................. <pDirObject>
  [190] pushint8 1 .............................. <1>
  [192] pusharglistnoret 2 ...................... <pDirObject, 1>
  [194] objcall 362 ............................. pDirObject.rotateDirection45Degrees(1)
  [197] getparam 1 .............................. <tCurrentLocX>
  [199] getprop 336 ............................. <pDirObject>
  [202] pusharglist 1 ........................... <pDirObject>
  [204] objcall 359 ............................. <pDirObject.getUnitVectorXComponent()>
  [207] add ..................................... <tCurrentLocX + pDirObject.getUnitVectorXComponent()>
  [208] setlocal 3 .............................. tNextX = tCurrentLocX + pDirObject.getUnitVectorXComponent()
  [210] getparam 2 .............................. <tCurrentLocY>
  [212] getprop 336 ............................. <pDirObject>
  [215] pusharglist 1 ........................... <pDirObject>
  [217] objcall 360 ............................. <pDirObject.getUnitVectorYComponent()>
  [220] add ..................................... <tCurrentLocY + pDirObject.getUnitVectorYComponent()>
  [221] setlocal 4 .............................. tNextY = tCurrentLocY + pDirObject.getUnitVectorYComponent()
  [223] getlocal 0 .............................. <tGameSystem>
  [225] pusharglist 1 ........................... <tGameSystem>
  [227] objcall 262 ............................. <tGameSystem.getWorld()>
  [230] getlocal 3 .............................. <tNextX>
  [232] getlocal 4 .............................. <tNextY>
  [234] pusharglist 3 ........................... <tGameSystem.getWorld(), tNextX, tNextY>
  [236] objcall 263 ............................. <tGameSystem.getWorld().getTile(tNextX, tNextY)>
  [239] setlocal 5 .............................. tNextTile = tGameSystem.getWorld().getTile(tNextX, tNextY)
  [241] getlocal 5 .............................. <tNextTile>
  [243] pushzero ................................ <0>
  [244] nteq .................................... <tNextTile <> 0>
  [245] jmpifz [305] ............................ if tNextTile <> 0 then
  [248] getlocal 5 .............................. <tNextTile>
  [250] getlocal 3 .............................. <tNextX>
  [252] getlocal 4 .............................. <tNextY>
  [254] pusharglist 3 ........................... <tNextTile, tNextX, tNextY>
  [256] objcall 264 ............................. <tNextTile.getType(tNextX, tNextY)>
  [259] setlocal 6 .............................. tNextZ = tNextTile.getType(tNextX, tNextY)
  [261] getlocal 6 .............................. <tNextZ>
  [263] pusharglist 1 ........................... <tNextZ>
  [265] extcall 181 ............................. <integer(tNextZ)>
  [267] pusharglist 1 ........................... <integer(tNextZ)>
  [269] extcall 265 ............................. <integerp(integer(tNextZ))>
  [272] jmpifz [305] ............................ if integerp(integer(tNextZ)) then
  [275] pushsymb 60 ............................. <#x>
  [277] getlocal 3 .............................. <tNextX>
  [279] pushsymb 61 ............................. <#y>
  [281] getlocal 4 .............................. <tNextY>
  [283] pushsymb 62 ............................. <#z>
  [285] getlocal 6 .............................. <tNextZ>
  [287] pushsymb 341 ............................ <#dirBody>
  [290] getprop 336 ............................. <pDirObject>
  [293] pusharglist 1 ........................... <pDirObject>
  [295] objcall 361 ............................. <pDirObject.getDirection()>
  [298] pusharglist 8 ........................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [300] pushproplist ............................ <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [301] pusharglistnoret 1 ...................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [303] extcall 28 .............................. return [#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]
  [305] getprop 336 ............................. <pDirObject>
  [308] pushzero ................................ <0>
  [309] pusharglistnoret 2 ...................... <pDirObject, 0>
  [311] objcall 362 ............................. pDirObject.rotateDirection45Degrees(0)
  [314] getprop 336 ............................. <pDirObject>
  [317] pushzero ................................ <0>
  [318] pusharglistnoret 2 ...................... <pDirObject, 0>
  [320] objcall 362 ............................. pDirObject.rotateDirection45Degrees(0)
  [323] getparam 1 .............................. <tCurrentLocX>
  [325] getprop 336 ............................. <pDirObject>
  [328] pusharglist 1 ........................... <pDirObject>
  [330] objcall 359 ............................. <pDirObject.getUnitVectorXComponent()>
  [333] add ..................................... <tCurrentLocX + pDirObject.getUnitVectorXComponent()>
  [334] setlocal 3 .............................. tNextX = tCurrentLocX + pDirObject.getUnitVectorXComponent()
  [336] getparam 2 .............................. <tCurrentLocY>
  [338] getprop 336 ............................. <pDirObject>
  [341] pusharglist 1 ........................... <pDirObject>
  [343] objcall 360 ............................. <pDirObject.getUnitVectorYComponent()>
  [346] add ..................................... <tCurrentLocY + pDirObject.getUnitVectorYComponent()>
  [347] setlocal 4 .............................. tNextY = tCurrentLocY + pDirObject.getUnitVectorYComponent()
  [349] getlocal 0 .............................. <tGameSystem>
  [351] pusharglist 1 ........................... <tGameSystem>
  [353] objcall 262 ............................. <tGameSystem.getWorld()>
  [356] getlocal 3 .............................. <tNextX>
  [358] getlocal 4 .............................. <tNextY>
  [360] pusharglist 3 ........................... <tGameSystem.getWorld(), tNextX, tNextY>
  [362] objcall 263 ............................. <tGameSystem.getWorld().getTile(tNextX, tNextY)>
  [365] setlocal 5 .............................. tNextTile = tGameSystem.getWorld().getTile(tNextX, tNextY)
  [367] getlocal 5 .............................. <tNextTile>
  [369] pushzero ................................ <0>
  [370] nteq .................................... <tNextTile <> 0>
  [371] jmpifz [431] ............................ if tNextTile <> 0 then
  [374] getlocal 5 .............................. <tNextTile>
  [376] getlocal 3 .............................. <tNextX>
  [378] getlocal 4 .............................. <tNextY>
  [380] pusharglist 3 ........................... <tNextTile, tNextX, tNextY>
  [382] objcall 264 ............................. <tNextTile.getType(tNextX, tNextY)>
  [385] setlocal 6 .............................. tNextZ = tNextTile.getType(tNextX, tNextY)
  [387] getlocal 6 .............................. <tNextZ>
  [389] pusharglist 1 ........................... <tNextZ>
  [391] extcall 181 ............................. <integer(tNextZ)>
  [393] pusharglist 1 ........................... <integer(tNextZ)>
  [395] extcall 265 ............................. <integerp(integer(tNextZ))>
  [398] jmpifz [431] ............................ if integerp(integer(tNextZ)) then
  [401] pushsymb 60 ............................. <#x>
  [403] getlocal 3 .............................. <tNextX>
  [405] pushsymb 61 ............................. <#y>
  [407] getlocal 4 .............................. <tNextY>
  [409] pushsymb 62 ............................. <#z>
  [411] getlocal 6 .............................. <tNextZ>
  [413] pushsymb 341 ............................ <#dirBody>
  [416] getprop 336 ............................. <pDirObject>
  [419] pusharglist 1 ........................... <pDirObject>
  [421] objcall 361 ............................. <pDirObject.getDirection()>
  [424] pusharglist 8 ........................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [426] pushproplist ............................ <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [427] pusharglistnoret 1 ...................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [429] extcall 28 .............................. return [#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]
  [431] pushzero ................................ <0>
  [432] pusharglistnoret 1 ...................... <0>
  [434] extcall 28 .............................. return 0
  [436] ret
end

on clearEffectAnimation me
  [  0] getprop 25 .............................. <pActiveEffects>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 30
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 38] ............................ repeat with tEffect in pActiveEffects
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 31
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tEffect>
  [ 30] pushzero ................................ <0>
  [ 31] setobjprop 85 ........................... tEffect.pActive = 0
  [ 33] pushint8 1
  [ 35] add
  [ 36] endrepeat [ 10]
  [ 38] pop 3
  [ 40] ret
end

on setEffectAnimationLocations me, tlocation
  [  0] getparam 1 .............................. <tlocation>
  [  2] pushsymb 60 ............................. <#x>
  [  4] pusharglist 2 ........................... <tlocation, #x>
  [  6] objcall 31 .............................. <tlocation[#x]>
  [  8] setlocal 0 .............................. tX = tlocation[#x]
  [ 10] getparam 1 .............................. <tlocation>
  [ 12] pushsymb 61 ............................. <#y>
  [ 14] pusharglist 2 ........................... <tlocation, #y>
  [ 16] objcall 31 .............................. <tlocation[#y]>
  [ 18] setlocal 1 .............................. tY = tlocation[#y]
  [ 20] getparam 1 .............................. <tlocation>
  [ 22] pushsymb 62 ............................. <#z>
  [ 24] pusharglist 2 ........................... <tlocation, #z>
  [ 26] objcall 31 .............................. <tlocation[#z]>
  [ 28] setlocal 2 .............................. tZ = tlocation[#z]
  [ 30] pushint8 1 .............................. <1>
  [ 32] getprop 25 .............................. <pActiveEffects>
  [ 34] getobjprop 30 ........................... <pActiveEffects.count>
  [ 36] add ..................................... <1 + pActiveEffects.count>
  [ 37] setlocal 3 .............................. tlocz = 1 + pActiveEffects.count
  [ 39] pushsymb 167 ............................ <#room_interface>
  [ 41] pusharglist 1 ........................... <#room_interface>
  [ 43] extcall 166 ............................. <getObject(#room_interface)>
  [ 45] pushzero ................................ <0>
  [ 46] eq ...................................... <getObject(#room_interface) = 0>
  [ 47] jmpifz [ 55] ............................ if getObject(#room_interface) = 0 then
  [ 50] pushzero ................................ <0>
  [ 51] pusharglistnoret 1 ...................... <0>
  [ 53] extcall 28 .............................. return 0
  [ 55] pushsymb 167 ............................ <#room_interface>
  [ 57] pusharglist 1 ........................... <#room_interface>
  [ 59] extcall 166 ............................. <getObject(#room_interface)>
  [ 61] pusharglist 1 ........................... <getObject(#room_interface)>
  [ 63] objcall 168 ............................. <getObject(#room_interface).getGeometry()>
  [ 65] setlocal 4 .............................. pGeometry = getObject(#room_interface).getGeometry()
  [ 67] getlocal 4 .............................. <pGeometry>
  [ 69] pushzero ................................ <0>
  [ 70] eq ...................................... <pGeometry = 0>
  [ 71] jmpifz [ 79] ............................ if pGeometry = 0 then
  [ 74] pushzero ................................ <0>
  [ 75] pusharglistnoret 1 ...................... <0>
  [ 77] extcall 28 .............................. return 0
  [ 79] getlocal 4 .............................. <pGeometry>
  [ 81] getlocal 0 .............................. <tX>
  [ 83] getlocal 1 .............................. <tY>
  [ 85] getlocal 2 .............................. <tZ>
  [ 87] pusharglist 4 ........................... <pGeometry, tX, tY, tZ>
  [ 89] objcall 58 .............................. <pGeometry.getScreenCoordinate(tX, tY, tZ)>
  [ 91] setlocal 5 .............................. tScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tZ)
  [ 93] getprop 25 .............................. <pActiveEffects>
  [ 95] peek 0
  [ 97] pusharglist 1
  [ 99] extcall 30
  [101] pushint8 1
  [103] peek 0
  [105] peek 2
  [107] lteq
  [108] jmpifz [134] ............................ repeat with tEffect in pActiveEffects
  [111] peek 2
  [113] peek 1
  [115] pusharglist 2
  [117] extcall 31
  [119] setlocal 6
  [121] getlocal 6 .............................. <tEffect>
  [123] getlocal 5 .............................. <tScreenLoc>
  [125] pusharglistnoret 2 ...................... <tEffect, tScreenLoc>
  [127] objcall 169 ............................. tEffect.setLocation(tScreenLoc)
  [129] pushint8 1
  [131] add
  [132] endrepeat [103]
  [134] pop 3
  [136] pushint8 1 .............................. <1>
  [138] pusharglistnoret 1 ...................... <1>
  [140] extcall 28 .............................. return 1
  [142] ret
end

on startPowerupActivateAnimation me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 206 ............................ <#powerupType>
  [  4] pusharglist 2 ........................... <tdata, #powerupType>
  [  6] objcall 31 .............................. <tdata[#powerupType]>
  [  8] peek 0 .................................. case tdata[#powerupType] of
  [ 10] pushint8 1 .............................. <1>
  [ 12] eq
  [ 13] jmpifz [ 36] ............................ (case) 1:
  [ 16] getparam 0 .............................. <me>
  [ 18] pushsymb 80 ............................. <#once>
  [ 20] pushcons 11 ............................. <"bb2_efct_pu_lghtbulb_">
  [ 22] pushsymb 50 ............................. <#ink>
  [ 24] pushint8 33 ............................. <33>
  [ 26] pusharglist 2 ........................... <[#ink: 33]>
  [ 28] pushproplist ............................ <[#ink: 33]>
  [ 29] pusharglistnoret 4 ...................... <me, #once, "bb2_efct_pu_lghtbulb_", [#ink: 33]>
  [ 31] objcall 17 .............................. me.createEffect(#once, "bb2_efct_pu_lghtbulb_", [#ink: 33])
  [ 33] jmp [119]
  [ 36] peek 0
  [ 38] pushint8 3 .............................. <3>
  [ 40] eq
  [ 41] jmpifz [ 74] ............................ (case) 3:
  [ 44] getparam 0 .............................. <me>
  [ 46] pushsymb 371 ............................ <#once_slow>
  [ 49] pushcons 12 ............................. <"bb2_efct_pu_flashlght_">
  [ 51] pushsymb 50 ............................. <#ink>
  [ 53] pushint8 33 ............................. <33>
  [ 55] pusharglist 2 ........................... <[#ink: 33]>
  [ 57] pushproplist ............................ <[#ink: 33]>
  [ 58] getparam 1 .............................. <tdata>
  [ 60] pushsymb 372 ............................ <#effectdirection>
  [ 63] pusharglist 2 ........................... <tdata, #effectdirection>
  [ 65] objcall 31 .............................. <tdata[#effectdirection]>
  [ 67] pusharglistnoret 5 ...................... <me, #once_slow, "bb2_efct_pu_flashlght_", [#ink: 33], tdata[#effectdirection]>
  [ 69] objcall 17 .............................. me.createEffect(#once_slow, "bb2_efct_pu_flashlght_", [#ink: 33], tdata[#effectdirection])
  [ 71] jmp [119]
  [ 74] peek 0
  [ 76] pushint8 7 .............................. <7>
  [ 78] eq
  [ 79] jmpifz [102] ............................ (case) 7:
  [ 82] getparam 0 .............................. <me>
  [ 84] pushsymb 80 ............................. <#once>
  [ 86] pushcons 11 ............................. <"bb2_efct_pu_lghtbulb_">
  [ 88] pushsymb 50 ............................. <#ink>
  [ 90] pushint8 35 ............................. <35>
  [ 92] pusharglist 2 ........................... <[#ink: 35]>
  [ 94] pushproplist ............................ <[#ink: 35]>
  [ 95] pusharglistnoret 4 ...................... <me, #once, "bb2_efct_pu_lghtbulb_", [#ink: 35]>
  [ 97] objcall 17 .............................. me.createEffect(#once, "bb2_efct_pu_lghtbulb_", [#ink: 35])
  [ 99] jmp [119] ............................... (case) otherwise:
  [102] getparam 0 .............................. <me>
  [104] pushsymb 80 ............................. <#once>
  [106] pushcons 13 ............................. <"bb2_pickup_">
  [108] pushsymb 50 ............................. <#ink>
  [110] pushint8 33 ............................. <33>
  [112] pusharglist 2 ........................... <[#ink: 33]>
  [114] pushproplist ............................ <[#ink: 33]>
  [115] pusharglistnoret 4 ...................... <me, #once, "bb2_pickup_", [#ink: 33]>
  [117] objcall 17 .............................. me.createEffect(#once, "bb2_pickup_", [#ink: 33])
  [119] pop 1 ................................... end case
  [121] pushint8 1 .............................. <1>
  [123] pusharglistnoret 1 ...................... <1>
  [125] extcall 28 .............................. return 1
  [127] ret
end

on createEffect me, tMode, tEffectID, tProps, tDirection
  [  0] getprop 324 ............................. <pLocation>
  [  3] pushsymb 60 ............................. <#x>
  [  5] pusharglist 2 ........................... <pLocation, #x>
  [  7] objcall 31 .............................. <pLocation[#x]>
  [  9] setlocal 0 .............................. tX = pLocation[#x]
  [ 11] getprop 324 ............................. <pLocation>
  [ 14] pushsymb 61 ............................. <#y>
  [ 16] pusharglist 2 ........................... <pLocation, #y>
  [ 18] objcall 31 .............................. <pLocation[#y]>
  [ 20] setlocal 1 .............................. tY = pLocation[#y]
  [ 22] getprop 324 ............................. <pLocation>
  [ 25] pushsymb 62 ............................. <#z>
  [ 27] pusharglist 2 ........................... <pLocation, #z>
  [ 29] objcall 31 .............................. <pLocation[#z]>
  [ 31] setlocal 2 .............................. tZ = pLocation[#z]
  [ 33] pushint8 1 .............................. <1>
  [ 35] getprop 25 .............................. <pActiveEffects>
  [ 37] getobjprop 30 ........................... <pActiveEffects.count>
  [ 39] add ..................................... <1 + pActiveEffects.count>
  [ 40] setlocal 3 .............................. tlocz = 1 + pActiveEffects.count
  [ 42] pushsymb 167 ............................ <#room_interface>
  [ 44] pusharglist 1 ........................... <#room_interface>
  [ 46] extcall 166 ............................. <getObject(#room_interface)>
  [ 48] pushzero ................................ <0>
  [ 49] eq ...................................... <getObject(#room_interface) = 0>
  [ 50] jmpifz [ 58] ............................ if getObject(#room_interface) = 0 then
  [ 53] pushzero ................................ <0>
  [ 54] pusharglistnoret 1 ...................... <0>
  [ 56] extcall 28 .............................. return 0
  [ 58] pushsymb 167 ............................ <#room_interface>
  [ 60] pusharglist 1 ........................... <#room_interface>
  [ 62] extcall 166 ............................. <getObject(#room_interface)>
  [ 64] pusharglist 1 ........................... <getObject(#room_interface)>
  [ 66] objcall 168 ............................. <getObject(#room_interface).getGeometry()>
  [ 68] setlocal 4 .............................. pGeometry = getObject(#room_interface).getGeometry()
  [ 70] getlocal 4 .............................. <pGeometry>
  [ 72] pushzero ................................ <0>
  [ 73] eq ...................................... <pGeometry = 0>
  [ 74] jmpifz [ 82] ............................ if pGeometry = 0 then
  [ 77] pushzero ................................ <0>
  [ 78] pusharglistnoret 1 ...................... <0>
  [ 80] extcall 28 .............................. return 0
  [ 82] getlocal 4 .............................. <pGeometry>
  [ 84] getlocal 0 .............................. <tX>
  [ 86] getlocal 1 .............................. <tY>
  [ 88] getlocal 2 .............................. <tZ>
  [ 90] pusharglist 4 ........................... <pGeometry, tX, tY, tZ>
  [ 92] objcall 58 .............................. <pGeometry.getScreenCoordinate(tX, tY, tZ)>
  [ 94] setlocal 5 .............................. tScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tZ)
  [ 96] pushsymb 125 ............................ <#temp>
  [ 98] pushcons 14 ............................. <"BB Effect Animation Class">
  [100] pusharglist 2 ........................... <#temp, "BB Effect Animation Class">
  [102] extcall 124 ............................. <createObject(#temp, "BB Effect Animation Class")>
  [104] setlocal 6 .............................. tEffect = createObject(#temp, "BB Effect Animation Class")
  [106] getlocal 6 .............................. <tEffect>
  [108] pushzero ................................ <0>
  [109] eq ...................................... <tEffect = 0>
  [110] jmpifz [127] ............................ if tEffect = 0 then
  [113] getparam 0 .............................. <me>
  [115] pushcons 15 ............................. <"Unable to create effect object!">
  [117] pushsymb 17 ............................. <#createEffect>
  [119] pusharglist 3 ........................... <me, "Unable to create effect object!", #createEffect>
  [121] extcall 173 ............................. <error(me, "Unable to create effect object!", #createEffect)>
  [123] pusharglistnoret 1 ...................... <error(me, "Unable to create effect object!", #createEffect)>
  [125] extcall 28 .............................. return error(me, "Unable to create effect object!", #createEffect)
  [127] getlocal 6 .............................. <tEffect>
  [129] getparam 1 .............................. <tMode>
  [131] getlocal 5 .............................. <tScreenLoc>
  [133] getlocal 3 .............................. <tlocz>
  [135] getparam 2 .............................. <tEffectID>
  [137] getparam 3 .............................. <tProps>
  [139] getparam 4 .............................. <tDirection>
  [141] pusharglistnoret 7 ...................... <tEffect, tMode, tScreenLoc, tlocz, tEffectID, tProps, tDirection>
  [143] objcall 135 ............................. tEffect.define(tMode, tScreenLoc, tlocz, tEffectID, tProps, tDirection)
  [145] getprop 25 .............................. <pActiveEffects>
  [147] getlocal 6 .............................. <tEffect>
  [149] pusharglistnoret 2 ...................... <pActiveEffects, tEffect>
  [151] objcall 174 ............................. pActiveEffects.append(tEffect)
  [153] pushint8 1 .............................. <1>
  [155] pusharglistnoret 1 ...................... <1>
  [157] extcall 28 .............................. return 1
  [159] ret
end

on getOwnGameIndex me
  [  0] pushsymb 304 ............................ <#session>
  [  3] pusharglist 1 ........................... <#session>
  [  5] extcall 166 ............................. <getObject(#session)>
  [  7] setlocal 0 .............................. tSession = getObject(#session)
  [  9] getlocal 0 .............................. <tSession>
  [ 11] pushcons 16 ............................. <"user_game_index">
  [ 13] pusharglist 2 ........................... <tSession, "user_game_index">
  [ 15] objcall 305 ............................. <tSession.exists("user_game_index")>
  [ 18] not ..................................... <not tSession.exists("user_game_index")>
  [ 19] jmpifz [ 27] ............................ if not tSession.exists("user_game_index") then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 28 .............................. return 0
  [ 27] getlocal 0 .............................. <tSession>
  [ 29] pushcons 16 ............................. <"user_game_index">
  [ 31] pusharglist 2 ........................... <tSession, "user_game_index">
  [ 33] objcall 306 ............................. <tSession.GET("user_game_index")>
  [ 36] pusharglistnoret 1 ...................... <tSession.GET("user_game_index")>
  [ 38] extcall 28 .............................. return tSession.GET("user_game_index")
  [ 40] ret
end
