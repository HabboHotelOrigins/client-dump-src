property STATE_NORMAL, STATE_STUNNED, STATE_TURBO_BOOST, STATE_HIGH_JUMPS, STATE_CLEANING_TILES, STATE_COLORING_FOR_OPPONENT, STATE_CLIMBING_INTO_CANNON, STATE_FLYING_THROUGH_AIR, STATE_BALL_BROKEN, pRoomObject, pActiveEffects, pDirBody, pLocation, pTargetLocation, pExpectedLocation, pDirObject, pDump

on construct me
  [  0] pushzero ................................ <0>
  [  1] setprop 58 .............................. pDirBody = 0
  [  3] pushsymb 10 ............................. <#x>
  [  5] pushint8 1 .............................. <1>
  [  7] inv ..................................... <-1>
  [  8] pushsymb 11 ............................. <#y>
  [ 10] pushint8 1 .............................. <1>
  [ 12] inv ..................................... <-1>
  [ 13] pushsymb 12 ............................. <#z>
  [ 15] pushint8 1 .............................. <1>
  [ 17] inv ..................................... <-1>
  [ 18] pusharglist 6 ........................... <[#x: -1, #y: -1, #z: -1]>
  [ 20] pushproplist ............................ <[#x: -1, #y: -1, #z: -1]>
  [ 21] setprop 9 ............................... pLocation = [#x: -1, #y: -1, #z: -1]
  [ 23] pushsymb 10 ............................. <#x>
  [ 25] pushint8 1 .............................. <1>
  [ 27] inv ..................................... <-1>
  [ 28] pushsymb 11 ............................. <#y>
  [ 30] pushint8 1 .............................. <1>
  [ 32] inv ..................................... <-1>
  [ 33] pusharglist 4 ........................... <[#x: -1, #y: -1]>
  [ 35] pushproplist ............................ <[#x: -1, #y: -1]>
  [ 36] setprop 59 .............................. pTargetLocation = [#x: -1, #y: -1]
  [ 38] pushsymb 10 ............................. <#x>
  [ 40] pushint8 1 .............................. <1>
  [ 42] inv ..................................... <-1>
  [ 43] pushsymb 11 ............................. <#y>
  [ 45] pushint8 1 .............................. <1>
  [ 47] inv ..................................... <-1>
  [ 48] pusharglist 4 ........................... <[#x: -1, #y: -1]>
  [ 50] pushproplist ............................ <[#x: -1, #y: -1]>
  [ 51] setprop 60 .............................. pExpectedLocation = [#x: -1, #y: -1]
  [ 53] pushzero ................................ <0>
  [ 54] setprop 61 .............................. STATE_NORMAL = 0
  [ 56] pushint8 1 .............................. <1>
  [ 58] setprop 62 .............................. STATE_STUNNED = 1
  [ 60] pushint8 2 .............................. <2>
  [ 62] setprop 63 .............................. STATE_TURBO_BOOST = 2
  [ 64] pushint8 3 .............................. <3>
  [ 66] setprop 64 .............................. STATE_HIGH_JUMPS = 3
  [ 68] pushint8 4 .............................. <4>
  [ 70] setprop 956 ............................. STATE_CLEANING_TILES = 4
  [ 73] pushint8 5 .............................. <5>
  [ 75] setprop 955 ............................. STATE_COLORING_FOR_OPPONENT = 5
  [ 78] pushint8 6 .............................. <6>
  [ 80] setprop 954 ............................. STATE_CLIMBING_INTO_CANNON = 6
  [ 83] pushint8 7 .............................. <7>
  [ 85] setprop 953 ............................. STATE_FLYING_THROUGH_AIR = 7
  [ 88] pushint8 8 .............................. <8>
  [ 90] setprop 1012 ............................ STATE_BALL_BROKEN = 8
  [ 93] pusharglist 0 ........................... <[]>
  [ 95] pushlist ................................ <[]>
  [ 96] setprop 50 .............................. pActiveEffects = []
  [ 98] pushsymb 39 ............................. <#temp>
  [100] pushcons 0 .............................. <"BB Direction8 Class">
  [102] pusharglist 2 ........................... <#temp, "BB Direction8 Class">
  [104] extcall 38 .............................. <createObject(#temp, "BB Direction8 Class")>
  [106] setprop 1000 ............................ pDirObject = createObject(#temp, "BB Direction8 Class")
  [109] pushint8 1 .............................. <1>
  [111] pusharglistnoret 1 ...................... <1>
  [113] extcall 13 .............................. return 1
  [115] ret
end

on deconstruct me
  [  0] getprop 50 .............................. <pActiveEffects>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 20
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 39] ............................ repeat with tEffect in pActiveEffects
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 18
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tEffect>
  [ 30] pusharglistnoret 1 ...................... <tEffect>
  [ 32] objcall 1 ............................... tEffect.deconstruct()
  [ 34] pushint8 1
  [ 36] add
  [ 37] endrepeat [ 10]
  [ 39] pop 3
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setprop 50 .............................. pActiveEffects = []
  [ 46] pusharglist 0 ........................... <>
  [ 48] extcall 43 .............................. <VOID>
  [ 50] setprop 1000 ............................ pDirObject = VOID
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglistnoret 1 ...................... <me>
  [ 57] objcall 5 ............................... me.removeRoomObject()
  [ 59] pushint8 1 .............................. <1>
  [ 61] pusharglistnoret 1 ...................... <1>
  [ 63] extcall 13 .............................. return 1
  [ 65] ret
end

on define me, tGameObject
  [  0] getparam 1 .............................. <tGameObject>
  [  2] pusharglist 1 ........................... <tGameObject>
  [  4] objcall 15 .............................. <tGameObject.duplicate()>
  [  6] setparam 1 .............................. tGameObject = tGameObject.duplicate()
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tGameObject>
  [ 12] pusharglistnoret 2 ...................... <me, tGameObject>
  [ 14] objcall 16 .............................. me.setGameObjectProperty(tGameObject)
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <tGameObject>
  [ 20] pusharglistnoret 2 ...................... <me, tGameObject>
  [ 22] objcall 4 ............................... me.createRoomObject(tGameObject)
  [ 24] getprop 9 ............................... <pLocation>
  [ 26] pushsymb 10 ............................. <#x>
  [ 28] getparam 1 .............................. <tGameObject>
  [ 30] pushsymb 10 ............................. <#x>
  [ 32] pusharglist 2 ........................... <tGameObject, #x>
  [ 34] objcall 18 .............................. <tGameObject[#x]>
  [ 36] pusharglistnoret 3 ...................... <pLocation, #x, tGameObject[#x]>
  [ 38] objcall 21 .............................. pLocation[#x] = tGameObject[#x]
  [ 40] getprop 9 ............................... <pLocation>
  [ 42] pushsymb 11 ............................. <#y>
  [ 44] getparam 1 .............................. <tGameObject>
  [ 46] pushsymb 11 ............................. <#y>
  [ 48] pusharglist 2 ........................... <tGameObject, #y>
  [ 50] objcall 18 .............................. <tGameObject[#y]>
  [ 52] pusharglistnoret 3 ...................... <pLocation, #y, tGameObject[#y]>
  [ 54] objcall 21 .............................. pLocation[#y] = tGameObject[#y]
  [ 56] getprop 9 ............................... <pLocation>
  [ 58] pushsymb 12 ............................. <#z>
  [ 60] getparam 1 .............................. <tGameObject>
  [ 62] pushsymb 12 ............................. <#z>
  [ 64] pusharglist 2 ........................... <tGameObject, #z>
  [ 66] objcall 18 .............................. <tGameObject[#z]>
  [ 68] pusharglistnoret 3 ...................... <pLocation, #z, tGameObject[#z]>
  [ 70] objcall 21 .............................. pLocation[#z] = tGameObject[#z]
  [ 72] pushint8 1 .............................. <1>
  [ 74] pusharglistnoret 1 ...................... <1>
  [ 76] extcall 13 .............................. return 1
  [ 78] ret
end

on update me
  [  0] getprop 50 .............................. <pActiveEffects>
  [  2] getobjprop 20 ........................... <pActiveEffects.count>
  [  4] pushzero ................................ <0>
  [  5] eq ...................................... <pActiveEffects.count = 0>
  [  6] jmpifz [ 15] ............................ if pActiveEffects.count = 0 then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 13 .............................. return 1
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 0
  [ 19] getlocal 0
  [ 21] getprop 50 .............................. <pActiveEffects>
  [ 23] getobjprop 20 ........................... <pActiveEffects.count>
  [ 25] lteq
  [ 26] jmpifz [ 78] ............................ repeat with i = 1 to pActiveEffects.count
  [ 29] getprop 50 .............................. <pActiveEffects>
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 2 ........................... <pActiveEffects, i>
  [ 35] objcall 18 .............................. <pActiveEffects[i]>
  [ 37] setlocal 1 .............................. tEffect = pActiveEffects[i]
  [ 39] getlocal 1 .............................. <tEffect>
  [ 41] getobjprop 66 ........................... <tEffect.pActive>
  [ 43] jmpifz [ 55] ............................ if tEffect.pActive then
  [ 46] getlocal 1 .............................. <tEffect>
  [ 48] pusharglistnoret 1 ...................... <tEffect>
  [ 50] objcall 51 .............................. tEffect.update()
  [ 52] jmp [ 69] ............................... next repeat
  [ 55] getlocal 1 .............................. <tEffect>
  [ 57] pusharglistnoret 1 ...................... <tEffect>
  [ 59] objcall 1 ............................... tEffect.deconstruct()
  [ 61] getprop 50 .............................. <pActiveEffects>
  [ 63] getlocal 0 .............................. <i>
  [ 65] pusharglistnoret 2 ...................... <pActiveEffects, i>
  [ 67] objcall 67 .............................. pActiveEffects.deleteAt(i)
  [ 69] pushint8 1
  [ 71] getlocal 0
  [ 73] add
  [ 74] setlocal 0
  [ 76] endrepeat [ 19]
  [ 78] pushint8 1 .............................. <1>
  [ 80] pusharglistnoret 1 ...................... <1>
  [ 82] extcall 13 .............................. return 1
  [ 84] ret
end

on executeGameObjectEvent me, tEvent, tdata
  [  0] getprop 32 .............................. <pDump>
  [  2] jmpifz [ 27] ............................ if pDump then
  [  5] pushcons 1 .............................. <"* executeGameObjectEvent on">
  [  7] getparam 0 .............................. <me>
  [  9] pusharglist 1 ........................... <me>
  [ 11] objcall 33 .............................. <me.getObjectId()>
  [ 13] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId()>
  [ 14] pushcons 2 .............................. <":">
  [ 16] joinstr ................................. <"* executeGameObjectEvent on" && me.getObjectId() & ":">
  [ 17] getparam 1 .............................. <tEvent>
  [ 19] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent>
  [ 20] getparam 2 .............................. <tdata>
  [ 22] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata>
  [ 23] pusharglistnoret 1 ...................... <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata>
  [ 25] extcall 34 .............................. put "* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata
  [ 27] getparam 1 .............................. <tEvent>
  [ 29] peek 0 .................................. case tEvent of
  [ 31] pushsymb 952 ............................ <#gameobject_update>
  [ 34] eq
  [ 35] jmpifz [ 50] ............................ (case) #gameobject_update:
  [ 38] getparam 0 .............................. <me>
  [ 40] getparam 2 .............................. <tdata>
  [ 42] pusharglistnoret 2 ...................... <me, tdata>
  [ 44] objcall 949 ............................. me.updateRoomObject(tdata)
  [ 47] jmp [214]
  [ 50] peek 0
  [ 52] pushsymb 70 ............................. <#set_target_custom>
  [ 54] eq
  [ 55] jmpifz [ 69] ............................ (case) #set_target_custom:
  [ 58] getparam 0 .............................. <me>
  [ 60] getparam 2 .............................. <tdata>
  [ 62] pusharglistnoret 2 ...................... <me, tdata>
  [ 64] objcall 55 .............................. me.updateRoomObjectGoal(tdata)
  [ 66] jmp [214]
  [ 69] peek 0
  [ 71] pushsymb 1077 ........................... <#activate_powerup>
  [ 74] eq
  [ 75] jmpifz [153] ............................ (case) #activate_powerup:
  [ 78] getparam 0 .............................. <me>
  [ 80] getparam 2 .............................. <tdata>
  [ 82] pusharglistnoret 2 ...................... <me, tdata>
  [ 84] objcall 1095 ............................ me.startPowerupActivateAnimation(tdata)
  [ 87] getparam 2 .............................. <tdata>
  [ 89] pushsymb 17 ............................. <#powerupType>
  [ 91] pusharglist 2 ........................... <tdata, #powerupType>
  [ 93] objcall 18 .............................. <tdata[#powerupType]>
  [ 95] pushint8 7 .............................. <7>
  [ 97] eq ...................................... <tdata[#powerupType] = 7>
  [ 98] jmpifz [150] ............................ if tdata[#powerupType] = 7 then
  [101] getparam 0 .............................. <me>
  [103] pushsymb 10 ............................. <#x>
  [105] getprop 9 ............................... <pLocation>
  [107] pushsymb 10 ............................. <#x>
  [109] pusharglist 2 ........................... <pLocation, #x>
  [111] objcall 18 .............................. <pLocation[#x]>
  [113] pushsymb 11 ............................. <#y>
  [115] getprop 9 ............................... <pLocation>
  [117] pushsymb 11 ............................. <#y>
  [119] pusharglist 2 ........................... <pLocation, #y>
  [121] objcall 18 .............................. <pLocation[#y]>
  [123] pushsymb 12 ............................. <#z>
  [125] getprop 9 ............................... <pLocation>
  [127] pushsymb 12 ............................. <#z>
  [129] pusharglist 2 ........................... <pLocation, #z>
  [131] objcall 18 .............................. <pLocation[#z]>
  [133] pushsymb 396 ............................ <#state>
  [136] getprop 62 .............................. <STATE_STUNNED>
  [138] pushsymb 83 ............................. <#dirBody>
  [140] getprop 58 .............................. <pDirBody>
  [142] pusharglist 10 .......................... <[#x: pLocation[#x], #y: pLocation[#y], #z: pLocation[#z], #state: STATE_STUNNED, #dirBody: pDirBody]>
  [144] pushproplist ............................ <[#x: pLocation[#x], #y: pLocation[#y], #z: pLocation[#z], #state: STATE_STUNNED, #dirBody: pDirBody]>
  [145] pusharglistnoret 2 ...................... <me, [#x: pLocation[#x], #y: pLocation[#y], #z: pLocation[#z], #state: STATE_STUNNED, #dirBody: pDirBody]>
  [147] objcall 949 ............................. me.updateRoomObject([#x: pLocation[#x], #y: pLocation[#y], #z: pLocation[#z], #state: STATE_STUNNED, #dirBody: pDirBody])
  [150] jmp [214]
  [153] peek 0
  [155] pushsymb 145 ............................ <#gamereset>
  [157] nteq
  [158] jmpifz [170] ............................ (case) #gamereset, ...
  [161] peek 0
  [163] pushsymb 449 ............................ <#gameend>
  [166] eq
  [167] jmpifz [202] ............................ (case) ..., #gameend:
  [170] getprop 59 .............................. <pTargetLocation>
  [172] pushsymb 10 ............................. <#x>
  [174] pushint8 1 .............................. <1>
  [176] inv ..................................... <-1>
  [177] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [179] objcall 21 .............................. pTargetLocation[#x] = -1
  [181] getprop 60 .............................. <pExpectedLocation>
  [183] pushsymb 10 ............................. <#x>
  [185] pushint8 1 .............................. <1>
  [187] inv ..................................... <-1>
  [188] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [190] objcall 21 .............................. pExpectedLocation[#x] = -1
  [192] getparam 0 .............................. <me>
  [194] pusharglistnoret 1 ...................... <me>
  [196] objcall 946 ............................. me.clearEffectAnimation()
  [199] jmp [214] ............................... (case) otherwise:
  [202] pushcons 3 .............................. <"* Gameobject: UNDEFINED EVENT:">
  [204] getparam 1 .............................. <tEvent>
  [206] joinpadstr .............................. <"* Gameobject: UNDEFINED EVENT:" && tEvent>
  [207] getparam 2 .............................. <tdata>
  [209] joinpadstr .............................. <"* Gameobject: UNDEFINED EVENT:" && tEvent && tdata>
  [210] pusharglistnoret 1 ...................... <"* Gameobject: UNDEFINED EVENT:" && tEvent && tdata>
  [212] extcall 34 .............................. put "* Gameobject: UNDEFINED EVENT:" && tEvent && tdata
  [214] pop 1 ................................... end case
  [216] ret
end

on createRoomObject me, tDataStruct
  [  0] pushsymb 39 ............................. <#temp>
  [  2] pushcons 4 .............................. <"bb_gamesystem.roomobject.player.wrapper.class">
  [  4] pusharglist 1 ........................... <"bb_gamesystem.roomobject.player.wrapper.class">
  [  6] extcall 40 .............................. <getClassVariable("bb_gamesystem.roomobject.player.wrapper.class")>
  [  8] pusharglist 2 ........................... <#temp, getClassVariable("bb_gamesystem.roomobject.player.wrapper.class")>
  [ 10] extcall 38 .............................. <createObject(#temp, getClassVariable("bb_gamesystem.roomobject.player.wrapper.class"))>
  [ 12] setprop 37 .............................. pRoomObject = createObject(#temp, getClassVariable("bb_gamesystem.roomobject.player.wrapper.class"))
  [ 14] getprop 37 .............................. <pRoomObject>
  [ 16] pushzero ................................ <0>
  [ 17] eq ...................................... <pRoomObject = 0>
  [ 18] jmpifz [ 35] ............................ if pRoomObject = 0 then
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 5 .............................. <"Cannot create roomobject wrapper!">
  [ 25] pushsymb 4 .............................. <#createRoomObject>
  [ 27] pusharglist 3 ........................... <me, "Cannot create roomobject wrapper!", #createRoomObject>
  [ 29] extcall 19 .............................. <error(me, "Cannot create roomobject wrapper!", #createRoomObject)>
  [ 31] pusharglistnoret 1 ...................... <error(me, "Cannot create roomobject wrapper!", #createRoomObject)>
  [ 33] extcall 13 .............................. return error(me, "Cannot create roomobject wrapper!", #createRoomObject)
  [ 35] getprop 37 .............................. <pRoomObject>
  [ 37] getparam 1 .............................. <tDataStruct>
  [ 39] pusharglist 2 ........................... <pRoomObject, tDataStruct>
  [ 41] objcall 2 ............................... <pRoomObject.define(tDataStruct)>
  [ 43] pusharglistnoret 1 ...................... <pRoomObject.define(tDataStruct)>
  [ 45] extcall 13 .............................. return pRoomObject.define(tDataStruct)
  [ 47] ret
end

on removeRoomObject me
  [  0] getprop 37 .............................. <pRoomObject>
  [  2] pusharglistnoret 1 ...................... <pRoomObject>
  [  4] objcall 1 ............................... pRoomObject.deconstruct()
  [  6] pusharglist 0 ........................... <>
  [  8] extcall 43 .............................. <VOID>
  [ 10] setprop 37 .............................. pRoomObject = VOID
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 13 .............................. return 1
  [ 18] ret
end

on roomObjectAction me, tAction, tdata
  [  0] getprop 37 .............................. <pRoomObject>
  [  2] pusharglist 1 ........................... <pRoomObject>
  [  4] extcall 42 .............................. <objectp(pRoomObject)>
  [  6] not ..................................... <not objectp(pRoomObject)>
  [  7] jmpifz [ 24] ............................ if not objectp(pRoomObject) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 6 .............................. <"Roomobject wrapper missing!">
  [ 14] pushsymb 45 ............................. <#getRoomObject>
  [ 16] pusharglist 3 ........................... <me, "Roomobject wrapper missing!", #getRoomObject>
  [ 18] extcall 19 .............................. <error(me, "Roomobject wrapper missing!", #getRoomObject)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Roomobject wrapper missing!", #getRoomObject)>
  [ 22] extcall 13 .............................. return error(me, "Roomobject wrapper missing!", #getRoomObject)
  [ 24] pushsymb 1001 ........................... <#roomObjectAction>
  [ 27] getprop 37 .............................. <pRoomObject>
  [ 29] getparam 1 .............................. <tAction>
  [ 31] getparam 2 .............................. <tdata>
  [ 33] pusharglistnoret 4 ...................... <#roomObjectAction, pRoomObject, tAction, tdata>
  [ 35] extcall 267 ............................. call(#roomObjectAction, pRoomObject, tAction, tdata)
  [ 38] pushint8 1 .............................. <1>
  [ 40] pusharglistnoret 1 ...................... <1>
  [ 42] extcall 13 .............................. return 1
  [ 44] ret
end

on getRoomObjectImage me
  [  0] getprop 37 .............................. <pRoomObject>
  [  2] pusharglist 1 ........................... <pRoomObject>
  [  4] extcall 42 .............................. <objectp(pRoomObject)>
  [  6] not ..................................... <not objectp(pRoomObject)>
  [  7] jmpifz [ 15] ............................ if not objectp(pRoomObject) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 13 .............................. return 0
  [ 15] getprop 37 .............................. <pRoomObject>
  [ 17] pusharglist 1 ........................... <pRoomObject>
  [ 19] objcall 80 .............................. <pRoomObject.getPicture()>
  [ 21] pusharglistnoret 1 ...................... <pRoomObject.getPicture()>
  [ 23] extcall 13 .............................. return pRoomObject.getPicture()
  [ 25] ret
end

on updateRoomObjectGoal me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 957 ............................. <me.checkStateAllowsMoving()>
  [  7] not ..................................... <not me.checkStateAllowsMoving()>
  [  8] jmpifz [ 17] ............................ if not me.checkStateAllowsMoving() then
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 13 .............................. return 1
  [ 17] getprop 59 .............................. <pTargetLocation>
  [ 19] pushsymb 10 ............................. <#x>
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 81 ............................. <#goalx>
  [ 25] pusharglist 2 ........................... <tdata, #goalx>
  [ 27] objcall 18 .............................. <tdata[#goalx]>
  [ 29] pusharglistnoret 3 ...................... <pTargetLocation, #x, tdata[#goalx]>
  [ 31] objcall 21 .............................. pTargetLocation[#x] = tdata[#goalx]
  [ 33] getprop 59 .............................. <pTargetLocation>
  [ 35] pushsymb 11 ............................. <#y>
  [ 37] getparam 1 .............................. <tdata>
  [ 39] pushsymb 82 ............................. <#goaly>
  [ 41] pusharglist 2 ........................... <tdata, #goaly>
  [ 43] objcall 18 .............................. <tdata[#goaly]>
  [ 45] pusharglistnoret 3 ...................... <pTargetLocation, #y, tdata[#goaly]>
  [ 47] objcall 21 .............................. pTargetLocation[#y] = tdata[#goaly]
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglist 1 ........................... <me>
  [ 53] objcall 24 .............................. <me.getGameSystem()>
  [ 55] setlocal 0 .............................. tGameSystem = me.getGameSystem()
  [ 57] getlocal 0 .............................. <tGameSystem>
  [ 59] pushzero ................................ <0>
  [ 60] eq ...................................... <tGameSystem = 0>
  [ 61] jmpifz [ 69] ............................ if tGameSystem = 0 then
  [ 64] pushzero ................................ <0>
  [ 65] pusharglistnoret 1 ...................... <0>
  [ 67] extcall 13 .............................. return 0
  [ 69] getparam 1 .............................. <tdata>
  [ 71] pushsymb 10 ............................. <#x>
  [ 73] getprop 9 ............................... <pLocation>
  [ 75] pushsymb 10 ............................. <#x>
  [ 77] pusharglist 2 ........................... <pLocation, #x>
  [ 79] objcall 18 .............................. <pLocation[#x]>
  [ 81] pusharglistnoret 3 ...................... <tdata, #x, pLocation[#x]>
  [ 83] objcall 21 .............................. tdata[#x] = pLocation[#x]
  [ 85] getparam 1 .............................. <tdata>
  [ 87] pushsymb 11 ............................. <#y>
  [ 89] getprop 9 ............................... <pLocation>
  [ 91] pushsymb 11 ............................. <#y>
  [ 93] pusharglist 2 ........................... <pLocation, #y>
  [ 95] objcall 18 .............................. <pLocation[#y]>
  [ 97] pusharglistnoret 3 ...................... <tdata, #y, pLocation[#y]>
  [ 99] objcall 21 .............................. tdata[#y] = pLocation[#y]
  [101] getparam 1 .............................. <tdata>
  [103] pushsymb 12 ............................. <#z>
  [105] getprop 9 ............................... <pLocation>
  [107] pushsymb 12 ............................. <#z>
  [109] pusharglist 2 ........................... <pLocation, #z>
  [111] objcall 18 .............................. <pLocation[#z]>
  [113] pusharglistnoret 3 ...................... <tdata, #z, pLocation[#z]>
  [115] objcall 21 .............................. tdata[#z] = pLocation[#z]
  [117] getparam 1 .............................. <tdata>
  [119] pushsymb 83 ............................. <#dirBody>
  [121] getprop 58 .............................. <pDirBody>
  [123] pusharglistnoret 3 ...................... <tdata, #dirBody, pDirBody>
  [125] objcall 21 .............................. tdata[#dirBody] = pDirBody
  [127] getprop 60 .............................. <pExpectedLocation>
  [129] pushsymb 10 ............................. <#x>
  [131] pushint8 1 .............................. <1>
  [133] inv ..................................... <-1>
  [134] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [136] objcall 21 .............................. pExpectedLocation[#x] = -1
  [138] getparam 0 .............................. <me>
  [140] getparam 1 .............................. <tdata>
  [142] pusharglist 2 ........................... <me, tdata>
  [144] objcall 56 .............................. <me.updateRoomObjectLocation(tdata)>
  [146] pusharglistnoret 1 ...................... <me.updateRoomObjectLocation(tdata)>
  [148] extcall 13 .............................. return me.updateRoomObjectLocation(tdata)
  [150] ret
end

on checkStateAllowsMoving me, tstate
  [  0] getparam 1 .............................. <tstate>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 43 .............................. <VOID>
  [  6] eq ...................................... <tstate = VOID>
  [  7] jmpifz [ 22] ............................ if tstate = VOID then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 396 ............................ <#state>
  [ 15] pusharglist 2 ........................... <me, #state>
  [ 17] objcall 932 ............................. <me.getGameObjectProperty(#state)>
  [ 20] setparam 1 .............................. tstate = me.getGameObjectProperty(#state)
  [ 22] getparam 1 .............................. <tstate>
  [ 24] peek 0 .................................. case tstate of
  [ 26] getprop 62 .............................. <STATE_STUNNED>
  [ 28] nteq
  [ 29] jmpifz [ 59] ............................ (case) STATE_STUNNED, ...
  [ 32] peek 0
  [ 34] getprop 954 ............................. <STATE_CLIMBING_INTO_CANNON>
  [ 37] nteq
  [ 38] jmpifz [ 59] ............................ (case) ..., STATE_CLIMBING_INTO_CANNON, ...
  [ 41] peek 0
  [ 43] getprop 953 ............................. <STATE_FLYING_THROUGH_AIR>
  [ 46] nteq
  [ 47] jmpifz [ 59] ............................ (case) ..., STATE_FLYING_THROUGH_AIR, ...
  [ 50] peek 0
  [ 52] getprop 1012 ............................ <STATE_BALL_BROKEN>
  [ 55] eq
  [ 56] jmpifz [ 69] ............................ (case) ..., STATE_BALL_BROKEN:
  [ 59] pop 1
  [ 61] pushzero ................................ <0>
  [ 62] pusharglistnoret 1 ...................... <0>
  [ 64] extcall 13 .............................. return 0
  [ 66] jmp [ 77] ............................... (case) otherwise:
  [ 69] pop 1
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglistnoret 1 ...................... <1>
  [ 75] extcall 13 .............................. return 1
  [ 77] pop 1 ................................... end case
  [ 79] ret
end

on updateRoomObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 396 ............................ <#state>
  [  5] pusharglist 2 ........................... <me, #state>
  [  7] objcall 932 ............................. <me.getGameObjectProperty(#state)>
  [ 10] setlocal 0 .............................. tOldState = me.getGameObjectProperty(#state)
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 396 ............................ <#state>
  [ 17] pusharglist 2 ........................... <tdata, #state>
  [ 19] objcall 18 .............................. <tdata[#state]>
  [ 21] getlocal 0 .............................. <tOldState>
  [ 23] nteq .................................... <tdata[#state] <> tOldState>
  [ 24] jmpifz [647] ............................ if tdata[#state] <> tOldState then
  [ 27] getparam 0 .............................. <me>
  [ 29] pushsymb 396 ............................ <#state>
  [ 32] getparam 1 .............................. <tdata>
  [ 34] pushsymb 396 ............................ <#state>
  [ 37] pusharglist 2 ........................... <tdata, #state>
  [ 39] objcall 18 .............................. <tdata[#state]>
  [ 41] pusharglist 2 ........................... <[#state: tdata[#state]]>
  [ 43] pushproplist ............................ <[#state: tdata[#state]]>
  [ 44] pusharglistnoret 2 ...................... <me, [#state: tdata[#state]]>
  [ 46] objcall 963 ............................. me.setGameObjectSyncProperty([#state: tdata[#state]])
  [ 49] getlocal 0 .............................. <tOldState>
  [ 51] getprop 1012 ............................ <STATE_BALL_BROKEN>
  [ 54] eq ...................................... <tOldState = STATE_BALL_BROKEN>
  [ 55] jmpifz [ 70] ............................ if tOldState = STATE_BALL_BROKEN then
  [ 58] getparam 0 .............................. <me>
  [ 60] pushsymb 1024 ........................... <#set_ball>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pusharglistnoret 3 ...................... <me, #set_ball, 1>
  [ 67] objcall 1001 ............................ me.roomObjectAction(#set_ball, 1)
  [ 70] getparam 1 .............................. <tdata>
  [ 72] pushsymb 396 ............................ <#state>
  [ 75] pusharglist 2 ........................... <tdata, #state>
  [ 77] objcall 18 .............................. <tdata[#state]>
  [ 79] peek 0 .................................. case tdata[#state] of
  [ 81] getprop 61 .............................. <STATE_NORMAL>
  [ 83] eq
  [ 84] jmpifz [126] ............................ (case) STATE_NORMAL:
  [ 87] getparam 0 .............................. <me>
  [ 89] pusharglistnoret 1 ...................... <me>
  [ 91] objcall 946 ............................. me.clearEffectAnimation()
  [ 94] getparam 0 .............................. <me>
  [ 96] pushsymb 1017 ........................... <#reset_ball_color>
  [ 99] pusharglistnoret 2 ...................... <me, #reset_ball_color>
  [101] objcall 1001 ............................ me.roomObjectAction(#reset_ball_color)
  [104] getparam 0 .............................. <me>
  [106] pushsymb 1014 ........................... <#set_bounce_state>
  [109] getparam 1 .............................. <tdata>
  [111] pushsymb 396 ............................ <#state>
  [114] pusharglist 2 ........................... <tdata, #state>
  [116] objcall 18 .............................. <tdata[#state]>
  [118] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [120] objcall 1001 ............................ me.roomObjectAction(#set_bounce_state, tdata[#state])
  [123] jmp [645]
  [126] peek 0
  [128] getprop 64 .............................. <STATE_HIGH_JUMPS>
  [130] eq
  [131] jmpifz [156] ............................ (case) STATE_HIGH_JUMPS:
  [134] getparam 0 .............................. <me>
  [136] pushsymb 1014 ........................... <#set_bounce_state>
  [139] getparam 1 .............................. <tdata>
  [141] pushsymb 396 ............................ <#state>
  [144] pusharglist 2 ........................... <tdata, #state>
  [146] objcall 18 .............................. <tdata[#state]>
  [148] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [150] objcall 1001 ............................ me.roomObjectAction(#set_bounce_state, tdata[#state])
  [153] jmp [645]
  [156] peek 0
  [158] getprop 956 ............................. <STATE_CLEANING_TILES>
  [161] eq
  [162] jmpifz [187] ............................ (case) STATE_CLEANING_TILES:
  [165] getparam 0 .............................. <me>
  [167] pushsymb 1014 ........................... <#set_bounce_state>
  [170] getparam 1 .............................. <tdata>
  [172] pushsymb 396 ............................ <#state>
  [175] pusharglist 2 ........................... <tdata, #state>
  [177] objcall 18 .............................. <tdata[#state]>
  [179] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [181] objcall 1001 ............................ me.roomObjectAction(#set_bounce_state, tdata[#state])
  [184] jmp [645]
  [187] peek 0
  [189] getprop 62 .............................. <STATE_STUNNED>
  [191] eq
  [192] jmpifz [294] ............................ (case) STATE_STUNNED:
  [195] getprop 59 .............................. <pTargetLocation>
  [197] pushsymb 10 ............................. <#x>
  [199] pushint8 1 .............................. <1>
  [201] inv ..................................... <-1>
  [202] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [204] objcall 21 .............................. pTargetLocation[#x] = -1
  [206] getprop 60 .............................. <pExpectedLocation>
  [208] pushsymb 10 ............................. <#x>
  [210] pushint8 1 .............................. <1>
  [212] inv ..................................... <-1>
  [213] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [215] objcall 21 .............................. pExpectedLocation[#x] = -1
  [217] getparam 0 .............................. <me>
  [219] pushsymb 944 ............................ <#loop>
  [222] pushcons 7 .............................. <"bb2_stunned_">
  [224] pushsymb 197 ............................ <#ink>
  [226] pushint8 8 .............................. <8>
  [228] pusharglist 2 ........................... <[#ink: 8]>
  [230] pushproplist ............................ <[#ink: 8]>
  [231] pusharglistnoret 4 ...................... <me, #loop, "bb2_stunned_", [#ink: 8]>
  [233] objcall 935 ............................. me.createEffect(#loop, "bb2_stunned_", [#ink: 8])
  [236] getparam 0 .............................. <me>
  [238] pushsymb 1014 ........................... <#set_bounce_state>
  [241] getparam 1 .............................. <tdata>
  [243] pushsymb 396 ............................ <#state>
  [246] pusharglist 2 ........................... <tdata, #state>
  [248] objcall 18 .............................. <tdata[#state]>
  [250] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [252] objcall 1001 ............................ me.roomObjectAction(#set_bounce_state, tdata[#state])
  [255] getparam 0 .............................. <me>
  [257] pushsymb 88 ............................. <#id>
  [259] pusharglist 2 ........................... <me, #id>
  [261] objcall 932 ............................. <me.getGameObjectProperty(#id)>
  [264] getparam 0 .............................. <me>
  [266] pusharglist 1 ........................... <me>
  [268] objcall 1336 ............................ <me.getOwnGameIndex()>
  [271] eq ...................................... <me.getGameObjectProperty(#id) = me.getOwnGameIndex()>
  [272] jmpifz [291] ............................ if me.getGameObjectProperty(#id) = me.getOwnGameIndex() then
  [275] getparam 0 .............................. <me>
  [277] pusharglist 1 ........................... <me>
  [279] objcall 24 .............................. <me.getGameSystem()>
  [281] pushsymb 1329 ........................... <#soundeffect>
  [284] pushcons 8 .............................. <"SFX-10-stunned">
  [286] pusharglistnoret 3 ...................... <me.getGameSystem(), #soundeffect, "SFX-10-stunned">
  [288] objcall 600 ............................. me.getGameSystem().sendGameSystemEvent(#soundeffect, "SFX-10-stunned")
  [291] jmp [645]
  [294] peek 0
  [296] getprop 954 ............................. <STATE_CLIMBING_INTO_CANNON>
  [299] nteq
  [300] jmpifz [312] ............................ (case) STATE_CLIMBING_INTO_CANNON, ...
  [303] peek 0
  [305] getprop 953 ............................. <STATE_FLYING_THROUGH_AIR>
  [308] eq
  [309] jmpifz [376] ............................ (case) ..., STATE_FLYING_THROUGH_AIR:
  [312] getparam 0 .............................. <me>
  [314] pushsymb 1014 ........................... <#set_bounce_state>
  [317] getparam 1 .............................. <tdata>
  [319] pushsymb 396 ............................ <#state>
  [322] pusharglist 2 ........................... <tdata, #state>
  [324] objcall 18 .............................. <tdata[#state]>
  [326] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [328] objcall 1001 ............................ me.roomObjectAction(#set_bounce_state, tdata[#state])
  [331] getprop 59 .............................. <pTargetLocation>
  [333] pushsymb 10 ............................. <#x>
  [335] pushint8 1 .............................. <1>
  [337] inv ..................................... <-1>
  [338] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [340] objcall 21 .............................. pTargetLocation[#x] = -1
  [342] getprop 60 .............................. <pExpectedLocation>
  [344] pushsymb 10 ............................. <#x>
  [346] pushint8 1 .............................. <1>
  [348] inv ..................................... <-1>
  [349] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [351] objcall 21 .............................. pExpectedLocation[#x] = -1
  [353] getparam 0 .............................. <me>
  [355] pushsymb 1256 ........................... <#fly_into>
  [358] getparam 1 .............................. <tdata>
  [360] pusharglistnoret 3 ...................... <me, #fly_into, tdata>
  [362] objcall 1001 ............................ me.roomObjectAction(#fly_into, tdata)
  [365] pop 1
  [367] pushint8 1 .............................. <1>
  [369] pusharglistnoret 1 ...................... <1>
  [371] extcall 13 .............................. return 1
  [373] jmp [645]
  [376] peek 0
  [378] getprop 955 ............................. <STATE_COLORING_FOR_OPPONENT>
  [381] eq
  [382] jmpifz [499] ............................ (case) STATE_COLORING_FOR_OPPONENT:
  [385] getparam 0 .............................. <me>
  [387] pusharglistnoret 1 ...................... <me>
  [389] objcall 946 ............................. me.clearEffectAnimation()
  [392] getparam 0 .............................. <me>
  [394] pushsymb 1014 ........................... <#set_bounce_state>
  [397] getparam 1 .............................. <tdata>
  [399] pushsymb 396 ............................ <#state>
  [402] pusharglist 2 ........................... <tdata, #state>
  [404] objcall 18 .............................. <tdata[#state]>
  [406] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [408] objcall 1001 ............................ me.roomObjectAction(#set_bounce_state, tdata[#state])
  [411] getparam 0 .............................. <me>
  [413] pushsymb 945 ............................ <#once>
  [416] pushcons 9 .............................. <"bb2_efct_pu_harlequin_">
  [418] pushsymb 197 ............................ <#ink>
  [420] pushint8 33 ............................. <33>
  [422] pusharglist 2 ........................... <[#ink: 33]>
  [424] pushproplist ............................ <[#ink: 33]>
  [425] pusharglistnoret 4 ...................... <me, #once, "bb2_efct_pu_harlequin_", [#ink: 33]>
  [427] objcall 935 ............................. me.createEffect(#once, "bb2_efct_pu_harlequin_", [#ink: 33])
  [430] getparam 1 .............................. <tdata>
  [432] pushsymb 654 ............................ <#coloringForOpponentTeamId>
  [435] pusharglist 2 ........................... <tdata, #coloringForOpponentTeamId>
  [437] objcall 18 .............................. <tdata[#coloringForOpponentTeamId]>
  [439] setlocal 1 .............................. tOpponentId = tdata[#coloringForOpponentTeamId]
  [441] getparam 0 .............................. <me>
  [443] pusharglist 1 ........................... <me>
  [445] objcall 24 .............................. <me.getGameSystem()>
  [447] getlocal 1 .............................. <tOpponentId>
  [449] pusharglist 2 ........................... <me.getGameSystem(), tOpponentId>
  [451] objcall 130 ............................. <me.getGameSystem().getGameObject(tOpponentId)>
  [453] setlocal 2 .............................. tGameObject = me.getGameSystem().getGameObject(tOpponentId)
  [455] getlocal 2 .............................. <tGameObject>
  [457] pushzero ................................ <0>
  [458] nteq .................................... <tGameObject <> 0>
  [459] jmpifz [496] ............................ if tGameObject <> 0 then
  [462] getlocal 2 .............................. <tGameObject>
  [464] pushsymb 195 ............................ <#teamId>
  [466] pusharglist 2 ........................... <tGameObject, #teamId>
  [468] objcall 932 ............................. <tGameObject.getGameObjectProperty(#teamId)>
  [471] setlocal 3 .............................. tTeamId = tGameObject.getGameObjectProperty(#teamId)
  [473] getparam 1 .............................. <tdata>
  [475] pushsymb 1020 ........................... <#opponentTeamId>
  [478] getlocal 3 .............................. <tTeamId>
  [480] pusharglistnoret 3 ...................... <tdata, #opponentTeamId, tTeamId>
  [482] objcall 23 .............................. tdata.addProp(#opponentTeamId, tTeamId)
  [484] getparam 0 .............................. <me>
  [486] pushsymb 1018 ........................... <#set_ball_color>
  [489] getparam 1 .............................. <tdata>
  [491] pusharglistnoret 3 ...................... <me, #set_ball_color, tdata>
  [493] objcall 1001 ............................ me.roomObjectAction(#set_ball_color, tdata)
  [496] jmp [645]
  [499] peek 0
  [501] getprop 1012 ............................ <STATE_BALL_BROKEN>
  [504] eq
  [505] jmpifz [645] ............................ (case) STATE_BALL_BROKEN:
  [508] getparam 0 .............................. <me>
  [510] pushsymb 1014 ........................... <#set_bounce_state>
  [513] getparam 1 .............................. <tdata>
  [515] pushsymb 396 ............................ <#state>
  [518] pusharglist 2 ........................... <tdata, #state>
  [520] objcall 18 .............................. <tdata[#state]>
  [522] pusharglistnoret 3 ...................... <me, #set_bounce_state, tdata[#state]>
  [524] objcall 1001 ............................ me.roomObjectAction(#set_bounce_state, tdata[#state])
  [527] getparam 0 .............................. <me>
  [529] pushsymb 945 ............................ <#once>
  [532] pushcons 9 .............................. <"bb2_efct_pu_harlequin_">
  [534] pushsymb 197 ............................ <#ink>
  [536] pushint8 33 ............................. <33>
  [538] pusharglist 2 ........................... <[#ink: 33]>
  [540] pushproplist ............................ <[#ink: 33]>
  [541] pusharglistnoret 4 ...................... <me, #once, "bb2_efct_pu_harlequin_", [#ink: 33]>
  [543] objcall 935 ............................. me.createEffect(#once, "bb2_efct_pu_harlequin_", [#ink: 33])
  [546] getparam 0 .............................. <me>
  [548] pushsymb 944 ............................ <#loop>
  [551] pushcons 7 .............................. <"bb2_stunned_">
  [553] pushsymb 336 ............................ <#loc>
  [556] pushzero ................................ <0>
  [557] pushint8 13 ............................. <13>
  [559] pusharglist 2 ........................... <0, 13>
  [561] extcall 322 ............................. <point(0, 13)>
  [564] pushsymb 197 ............................ <#ink>
  [566] pushint8 8 .............................. <8>
  [568] pusharglist 4 ........................... <[#loc: point(0, 13), #ink: 8]>
  [570] pushproplist ............................ <[#loc: point(0, 13), #ink: 8]>
  [571] pusharglistnoret 4 ...................... <me, #loop, "bb2_stunned_", [#loc: point(0, 13), #ink: 8]>
  [573] objcall 935 ............................. me.createEffect(#loop, "bb2_stunned_", [#loc: point(0, 13), #ink: 8])
  [576] getprop 59 .............................. <pTargetLocation>
  [578] pushsymb 10 ............................. <#x>
  [580] pushint8 1 .............................. <1>
  [582] inv ..................................... <-1>
  [583] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [585] objcall 21 .............................. pTargetLocation[#x] = -1
  [587] getprop 60 .............................. <pExpectedLocation>
  [589] pushsymb 10 ............................. <#x>
  [591] pushint8 1 .............................. <1>
  [593] inv ..................................... <-1>
  [594] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [596] objcall 21 .............................. pExpectedLocation[#x] = -1
  [598] getparam 0 .............................. <me>
  [600] pushsymb 1024 ........................... <#set_ball>
  [603] pushzero ................................ <0>
  [604] pusharglistnoret 3 ...................... <me, #set_ball, 0>
  [606] objcall 1001 ............................ me.roomObjectAction(#set_ball, 0)
  [609] getparam 0 .............................. <me>
  [611] pushsymb 88 ............................. <#id>
  [613] pusharglist 2 ........................... <me, #id>
  [615] objcall 932 ............................. <me.getGameObjectProperty(#id)>
  [618] getparam 0 .............................. <me>
  [620] pusharglist 1 ........................... <me>
  [622] objcall 1336 ............................ <me.getOwnGameIndex()>
  [625] eq ...................................... <me.getGameObjectProperty(#id) = me.getOwnGameIndex()>
  [626] jmpifz [645] ............................ if me.getGameObjectProperty(#id) = me.getOwnGameIndex() then
  [629] getparam 0 .............................. <me>
  [631] pusharglist 1 ........................... <me>
  [633] objcall 24 .............................. <me.getGameSystem()>
  [635] pushsymb 1329 ........................... <#soundeffect>
  [638] pushcons 8 .............................. <"SFX-10-stunned">
  [640] pusharglistnoret 3 ...................... <me.getGameSystem(), #soundeffect, "SFX-10-stunned">
  [642] objcall 600 ............................. me.getGameSystem().sendGameSystemEvent(#soundeffect, "SFX-10-stunned")
  [645] pop 1 ................................... end case
  [647] getparam 0 .............................. <me>
  [649] getparam 1 .............................. <tdata>
  [651] pusharglist 2 ........................... <me, tdata>
  [653] objcall 56 .............................. <me.updateRoomObjectLocation(tdata)>
  [655] pusharglistnoret 1 ...................... <me.updateRoomObjectLocation(tdata)>
  [657] extcall 13 .............................. return me.updateRoomObjectLocation(tdata)
  [659] ret
end

on updateRoomObjectLocation me, tuser
  [  0] getparam 1 .............................. <tuser>
  [  2] pushsymb 10 ............................. <#x>
  [  4] pusharglist 2 ........................... <tuser, #x>
  [  6] objcall 18 .............................. <tuser[#x]>
  [  8] getprop 59 .............................. <pTargetLocation>
  [ 10] pushsymb 10 ............................. <#x>
  [ 12] pusharglist 2 ........................... <pTargetLocation, #x>
  [ 14] objcall 18 .............................. <pTargetLocation[#x]>
  [ 16] eq ...................................... <tuser[#x] = pTargetLocation[#x]>
  [ 17] getparam 1 .............................. <tuser>
  [ 19] pushsymb 11 ............................. <#y>
  [ 21] pusharglist 2 ........................... <tuser, #y>
  [ 23] objcall 18 .............................. <tuser[#y]>
  [ 25] getprop 59 .............................. <pTargetLocation>
  [ 27] pushsymb 11 ............................. <#y>
  [ 29] pusharglist 2 ........................... <pTargetLocation, #y>
  [ 31] objcall 18 .............................. <pTargetLocation[#y]>
  [ 33] eq ...................................... <tuser[#y] = pTargetLocation[#y]>
  [ 34] and ..................................... <(tuser[#x] = pTargetLocation[#x]) and (tuser[#y] = pTargetLocation[#y])>
  [ 35] jmpifz [ 63] ............................ if (tuser[#x] = pTargetLocation[#x]) and (tuser[#y] = pTargetLocation[#y]) then / else
  [ 38] getprop 59 .............................. <pTargetLocation>
  [ 40] pushsymb 10 ............................. <#x>
  [ 42] pushint8 1 .............................. <1>
  [ 44] inv ..................................... <-1>
  [ 45] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [ 47] objcall 21 .............................. pTargetLocation[#x] = -1
  [ 49] getprop 60 .............................. <pExpectedLocation>
  [ 51] pushsymb 10 ............................. <#x>
  [ 53] pushint8 1 .............................. <1>
  [ 55] inv ..................................... <-1>
  [ 56] pusharglistnoret 3 ...................... <pExpectedLocation, #x, -1>
  [ 58] objcall 21 .............................. pExpectedLocation[#x] = -1
  [ 60] jmp [ 87]
  [ 63] getparam 0 .............................. <me>
  [ 65] getparam 1 .............................. <tuser>
  [ 67] pushsymb 10 ............................. <#x>
  [ 69] pusharglist 2 ........................... <tuser, #x>
  [ 71] objcall 18 .............................. <tuser[#x]>
  [ 73] getparam 1 .............................. <tuser>
  [ 75] pushsymb 11 ............................. <#y>
  [ 77] pusharglist 2 ........................... <tuser, #y>
  [ 79] objcall 18 .............................. <tuser[#y]>
  [ 81] pusharglist 3 ........................... <me, tuser[#x], tuser[#y]>
  [ 83] objcall 57 .............................. <me.solveNextTile(tuser[#x], tuser[#y])>
  [ 85] setlocal 0 .............................. tNextLoc = me.solveNextTile(tuser[#x], tuser[#y])
  [ 87] getlocal 0 .............................. <tNextLoc>
  [ 89] pushzero ................................ <0>
  [ 90] eq ...................................... <tNextLoc = 0>
  [ 91] jmpifz [107] ............................ if tNextLoc = 0 then / else
  [ 94] getparam 1 .............................. <tuser>
  [ 96] pushsymb 83 ............................. <#dirBody>
  [ 98] pusharglist 2 ........................... <tuser, #dirBody>
  [100] objcall 18 .............................. <tuser[#dirBody]>
  [102] setlocal 1 .............................. tDirBody = tuser[#dirBody]
  [104] jmp [123]
  [107] getparam 1 .............................. <tuser>
  [109] pushsymb 83 ............................. <#dirBody>
  [111] getlocal 0 .............................. <tNextLoc>
  [113] pushsymb 83 ............................. <#dirBody>
  [115] pusharglist 2 ........................... <tNextLoc, #dirBody>
  [117] objcall 18 .............................. <tNextLoc[#dirBody]>
  [119] pusharglistnoret 3 ...................... <tuser, #dirBody, tNextLoc[#dirBody]>
  [121] objcall 21 .............................. tuser[#dirBody] = tNextLoc[#dirBody]
  [123] getparam 1 .............................. <tuser>
  [125] pushsymb 83 ............................. <#dirBody>
  [127] pusharglist 2 ........................... <tuser, #dirBody>
  [129] objcall 18 .............................. <tuser[#dirBody]>
  [131] setprop 58 .............................. pDirBody = tuser[#dirBody]
  [133] getprop 9 ............................... <pLocation>
  [135] pushsymb 10 ............................. <#x>
  [137] getparam 1 .............................. <tuser>
  [139] pushsymb 10 ............................. <#x>
  [141] pusharglist 2 ........................... <tuser, #x>
  [143] objcall 18 .............................. <tuser[#x]>
  [145] pusharglistnoret 3 ...................... <pLocation, #x, tuser[#x]>
  [147] objcall 21 .............................. pLocation[#x] = tuser[#x]
  [149] getprop 9 ............................... <pLocation>
  [151] pushsymb 11 ............................. <#y>
  [153] getparam 1 .............................. <tuser>
  [155] pushsymb 11 ............................. <#y>
  [157] pusharglist 2 ........................... <tuser, #y>
  [159] objcall 18 .............................. <tuser[#y]>
  [161] pusharglistnoret 3 ...................... <pLocation, #y, tuser[#y]>
  [163] objcall 21 .............................. pLocation[#y] = tuser[#y]
  [165] getprop 9 ............................... <pLocation>
  [167] pushsymb 12 ............................. <#z>
  [169] getparam 1 .............................. <tuser>
  [171] pushsymb 12 ............................. <#z>
  [173] pusharglist 2 ........................... <tuser, #z>
  [175] objcall 18 .............................. <tuser[#z]>
  [177] pusharglistnoret 3 ...................... <pLocation, #z, tuser[#z]>
  [179] objcall 21 .............................. pLocation[#z] = tuser[#z]
  [181] getprop 37 .............................. <pRoomObject>
  [183] pusharglist 1 ........................... <pRoomObject>
  [185] extcall 42 .............................. <objectp(pRoomObject)>
  [187] not ..................................... <not objectp(pRoomObject)>
  [188] jmpifz [205] ............................ if not objectp(pRoomObject) then
  [191] getparam 0 .............................. <me>
  [193] pushcons 10 ............................. <"Room object wrapper missing">
  [195] pushsymb 56 ............................. <#updateRoomObjectLocation>
  [197] pusharglist 3 ........................... <me, "Room object wrapper missing", #updateRoomObjectLocation>
  [199] extcall 19 .............................. <error(me, "Room object wrapper missing", #updateRoomObjectLocation)>
  [201] pusharglistnoret 1 ...................... <error(me, "Room object wrapper missing", #updateRoomObjectLocation)>
  [203] extcall 13 .............................. return error(me, "Room object wrapper missing", #updateRoomObjectLocation)
  [205] getprop 37 .............................. <pRoomObject>
  [207] getparam 1 .............................. <tuser>
  [209] pusharglistnoret 2 ...................... <pRoomObject, tuser>
  [211] objcall 89 .............................. pRoomObject.setLocation(tuser)
  [213] getparam 0 .............................. <me>
  [215] getparam 1 .............................. <tuser>
  [217] pusharglistnoret 2 ...................... <me, tuser>
  [219] objcall 1231 ............................ me.setEffectAnimationLocations(tuser)
  [222] getprop 60 .............................. <pExpectedLocation>
  [224] pushsymb 10 ............................. <#x>
  [226] pusharglist 2 ........................... <pExpectedLocation, #x>
  [228] objcall 18 .............................. <pExpectedLocation[#x]>
  [230] pushint8 1 .............................. <1>
  [232] inv ..................................... <-1>
  [233] gt ...................................... <pExpectedLocation[#x] > -1>
  [234] jmpifz [297] ............................ if pExpectedLocation[#x] > -1 then
  [237] getparam 1 .............................. <tuser>
  [239] pushsymb 10 ............................. <#x>
  [241] pusharglist 2 ........................... <tuser, #x>
  [243] objcall 18 .............................. <tuser[#x]>
  [245] getprop 60 .............................. <pExpectedLocation>
  [247] pushsymb 10 ............................. <#x>
  [249] pusharglist 2 ........................... <pExpectedLocation, #x>
  [251] objcall 18 .............................. <pExpectedLocation[#x]>
  [253] nteq .................................... <tuser[#x] <> pExpectedLocation[#x]>
  [254] getparam 1 .............................. <tuser>
  [256] pushsymb 11 ............................. <#y>
  [258] pusharglist 2 ........................... <tuser, #y>
  [260] objcall 18 .............................. <tuser[#y]>
  [262] getprop 60 .............................. <pExpectedLocation>
  [264] pushsymb 11 ............................. <#y>
  [266] pusharglist 2 ........................... <pExpectedLocation, #y>
  [268] objcall 18 .............................. <pExpectedLocation[#y]>
  [270] nteq .................................... <tuser[#y] <> pExpectedLocation[#y]>
  [271] or ...................................... <(tuser[#x] <> pExpectedLocation[#x]) or (tuser[#y] <> pExpectedLocation[#y])>
  [272] getlocal 0 .............................. <tNextLoc>
  [274] pushzero ................................ <0>
  [275] nteq .................................... <tNextLoc <> 0>
  [276] and ..................................... <((tuser[#x] <> pExpectedLocation[#x]) or (tuser[#y] <> pExpectedLocation[#y])) and (tNextLoc <> 0)>
  [277] jmpifz [297] ............................ if ((tuser[#x] <> pExpectedLocation[#x]) or (tuser[#y] <> pExpectedLocation[#y])) and (tNextLoc <> 0) then
  [280] getprop 59 .............................. <pTargetLocation>
  [282] pushsymb 10 ............................. <#x>
  [284] pushint8 1 .............................. <1>
  [286] inv ..................................... <-1>
  [287] pusharglistnoret 3 ...................... <pTargetLocation, #x, -1>
  [289] objcall 21 .............................. pTargetLocation[#x] = -1
  [291] pushint8 1 .............................. <1>
  [293] pusharglistnoret 1 ...................... <1>
  [295] extcall 13 .............................. return 1
  [297] getlocal 0 .............................. <tNextLoc>
  [299] pushzero ................................ <0>
  [300] nteq .................................... <tNextLoc <> 0>
  [301] jmpifz [336] ............................ if tNextLoc <> 0 then
  [304] getprop 60 .............................. <pExpectedLocation>
  [306] pushsymb 10 ............................. <#x>
  [308] getlocal 0 .............................. <tNextLoc>
  [310] pushsymb 10 ............................. <#x>
  [312] pusharglist 2 ........................... <tNextLoc, #x>
  [314] objcall 18 .............................. <tNextLoc[#x]>
  [316] pusharglistnoret 3 ...................... <pExpectedLocation, #x, tNextLoc[#x]>
  [318] objcall 21 .............................. pExpectedLocation[#x] = tNextLoc[#x]
  [320] getprop 60 .............................. <pExpectedLocation>
  [322] pushsymb 11 ............................. <#y>
  [324] getlocal 0 .............................. <tNextLoc>
  [326] pushsymb 11 ............................. <#y>
  [328] pusharglist 2 ........................... <tNextLoc, #y>
  [330] objcall 18 .............................. <tNextLoc[#y]>
  [332] pusharglistnoret 3 ...................... <pExpectedLocation, #y, tNextLoc[#y]>
  [334] objcall 21 .............................. pExpectedLocation[#y] = tNextLoc[#y]
  [336] getprop 37 .............................. <pRoomObject>
  [338] getparam 1 .............................. <tuser>
  [340] getlocal 0 .............................. <tNextLoc>
  [342] pusharglistnoret 3 ...................... <pRoomObject, tuser, tNextLoc>
  [344] objcall 90 .............................. pRoomObject.setTarget(tuser, tNextLoc)
  [346] pushint8 1 .............................. <1>
  [348] pusharglistnoret 1 ...................... <1>
  [350] extcall 13 .............................. return 1
  [352] ret
end

on solveNextTile me, tCurrentLocX, tCurrentLocY
  [  0] getprop 59 .............................. <pTargetLocation>
  [  2] pushsymb 10 ............................. <#x>
  [  4] pusharglist 2 ........................... <pTargetLocation, #x>
  [  6] objcall 18 .............................. <pTargetLocation[#x]>
  [  8] pushint8 1 .............................. <1>
  [ 10] inv ..................................... <-1>
  [ 11] eq ...................................... <pTargetLocation[#x] = -1>
  [ 12] jmpifz [ 20] ............................ if pTargetLocation[#x] = -1 then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 13 .............................. return 0
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 1 ........................... <me>
  [ 24] objcall 24 .............................. <me.getGameSystem()>
  [ 26] setlocal 0 .............................. tGameSystem = me.getGameSystem()
  [ 28] getlocal 0 .............................. <tGameSystem>
  [ 30] pushzero ................................ <0>
  [ 31] eq ...................................... <tGameSystem = 0>
  [ 32] jmpifz [ 40] ............................ if tGameSystem = 0 then
  [ 35] pushzero ................................ <0>
  [ 36] pusharglistnoret 1 ...................... <0>
  [ 38] extcall 13 .............................. return 0
  [ 40] getprop 59 .............................. <pTargetLocation>
  [ 42] pushsymb 10 ............................. <#x>
  [ 44] pusharglist 2 ........................... <pTargetLocation, #x>
  [ 46] objcall 18 .............................. <pTargetLocation[#x]>
  [ 48] setlocal 1 .............................. tGoalX = pTargetLocation[#x]
  [ 50] getprop 59 .............................. <pTargetLocation>
  [ 52] pushsymb 11 ............................. <#y>
  [ 54] pusharglist 2 ........................... <pTargetLocation, #y>
  [ 56] objcall 18 .............................. <pTargetLocation[#y]>
  [ 58] setlocal 2 .............................. tGoalY = pTargetLocation[#y]
  [ 60] getprop 1000 ............................ <pDirObject>
  [ 63] getparam 1 .............................. <tCurrentLocX>
  [ 65] getparam 2 .............................. <tCurrentLocY>
  [ 67] getlocal 1 .............................. <tGoalX>
  [ 69] getlocal 2 .............................. <tGoalY>
  [ 71] pusharglistnoret 5 ...................... <pDirObject, tCurrentLocX, tCurrentLocY, tGoalX, tGoalY>
  [ 73] objcall 998 ............................. pDirObject.defineLine(tCurrentLocX, tCurrentLocY, tGoalX, tGoalY)
  [ 76] getparam 1 .............................. <tCurrentLocX>
  [ 78] getprop 1000 ............................ <pDirObject>
  [ 81] pusharglist 1 ........................... <pDirObject>
  [ 83] objcall 984 ............................. <pDirObject.getUnitVectorXComponent()>
  [ 86] add ..................................... <tCurrentLocX + pDirObject.getUnitVectorXComponent()>
  [ 87] setlocal 3 .............................. tNextX = tCurrentLocX + pDirObject.getUnitVectorXComponent()
  [ 89] getparam 2 .............................. <tCurrentLocY>
  [ 91] getprop 1000 ............................ <pDirObject>
  [ 94] pusharglist 1 ........................... <pDirObject>
  [ 96] objcall 985 ............................. <pDirObject.getUnitVectorYComponent()>
  [ 99] add ..................................... <tCurrentLocY + pDirObject.getUnitVectorYComponent()>
  [100] setlocal 4 .............................. tNextY = tCurrentLocY + pDirObject.getUnitVectorYComponent()
  [102] getlocal 0 .............................. <tGameSystem>
  [104] pusharglist 1 ........................... <tGameSystem>
  [106] objcall 48 .............................. <tGameSystem.getWorld()>
  [108] getlocal 3 .............................. <tNextX>
  [110] getlocal 4 .............................. <tNextY>
  [112] pusharglist 3 ........................... <tGameSystem.getWorld(), tNextX, tNextY>
  [114] objcall 94 .............................. <tGameSystem.getWorld().getTile(tNextX, tNextY)>
  [116] setlocal 5 .............................. tNextTile = tGameSystem.getWorld().getTile(tNextX, tNextY)
  [118] getlocal 5 .............................. <tNextTile>
  [120] pushzero ................................ <0>
  [121] nteq .................................... <tNextTile <> 0>
  [122] jmpifz [179] ............................ if tNextTile <> 0 then
  [125] getlocal 5 .............................. <tNextTile>
  [127] getlocal 3 .............................. <tNextX>
  [129] getlocal 4 .............................. <tNextY>
  [131] pusharglist 3 ........................... <tNextTile, tNextX, tNextY>
  [133] objcall 96 .............................. <tNextTile.getType(tNextX, tNextY)>
  [135] setlocal 6 .............................. tNextZ = tNextTile.getType(tNextX, tNextY)
  [137] getlocal 6 .............................. <tNextZ>
  [139] pusharglist 1 ........................... <tNextZ>
  [141] extcall 95 .............................. <integer(tNextZ)>
  [143] pusharglist 1 ........................... <integer(tNextZ)>
  [145] extcall 97 .............................. <integerp(integer(tNextZ))>
  [147] jmpifz [179] ............................ if integerp(integer(tNextZ)) then
  [150] pushsymb 10 ............................. <#x>
  [152] getlocal 3 .............................. <tNextX>
  [154] pushsymb 11 ............................. <#y>
  [156] getlocal 4 .............................. <tNextY>
  [158] pushsymb 12 ............................. <#z>
  [160] getlocal 6 .............................. <tNextZ>
  [162] pushsymb 83 ............................. <#dirBody>
  [164] getprop 1000 ............................ <pDirObject>
  [167] pusharglist 1 ........................... <pDirObject>
  [169] objcall 982 ............................. <pDirObject.getDirection()>
  [172] pusharglist 8 ........................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [174] pushproplist ............................ <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [175] pusharglistnoret 1 ...................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [177] extcall 13 .............................. return [#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]
  [179] getprop 1000 ............................ <pDirObject>
  [182] pushint8 1 .............................. <1>
  [184] pusharglistnoret 2 ...................... <pDirObject, 1>
  [186] objcall 989 ............................. pDirObject.rotateDirection45Degrees(1)
  [189] getparam 1 .............................. <tCurrentLocX>
  [191] getprop 1000 ............................ <pDirObject>
  [194] pusharglist 1 ........................... <pDirObject>
  [196] objcall 984 ............................. <pDirObject.getUnitVectorXComponent()>
  [199] add ..................................... <tCurrentLocX + pDirObject.getUnitVectorXComponent()>
  [200] setlocal 3 .............................. tNextX = tCurrentLocX + pDirObject.getUnitVectorXComponent()
  [202] getparam 2 .............................. <tCurrentLocY>
  [204] getprop 1000 ............................ <pDirObject>
  [207] pusharglist 1 ........................... <pDirObject>
  [209] objcall 985 ............................. <pDirObject.getUnitVectorYComponent()>
  [212] add ..................................... <tCurrentLocY + pDirObject.getUnitVectorYComponent()>
  [213] setlocal 4 .............................. tNextY = tCurrentLocY + pDirObject.getUnitVectorYComponent()
  [215] getlocal 0 .............................. <tGameSystem>
  [217] pusharglist 1 ........................... <tGameSystem>
  [219] objcall 48 .............................. <tGameSystem.getWorld()>
  [221] getlocal 3 .............................. <tNextX>
  [223] getlocal 4 .............................. <tNextY>
  [225] pusharglist 3 ........................... <tGameSystem.getWorld(), tNextX, tNextY>
  [227] objcall 94 .............................. <tGameSystem.getWorld().getTile(tNextX, tNextY)>
  [229] setlocal 5 .............................. tNextTile = tGameSystem.getWorld().getTile(tNextX, tNextY)
  [231] getlocal 5 .............................. <tNextTile>
  [233] pushzero ................................ <0>
  [234] nteq .................................... <tNextTile <> 0>
  [235] jmpifz [292] ............................ if tNextTile <> 0 then
  [238] getlocal 5 .............................. <tNextTile>
  [240] getlocal 3 .............................. <tNextX>
  [242] getlocal 4 .............................. <tNextY>
  [244] pusharglist 3 ........................... <tNextTile, tNextX, tNextY>
  [246] objcall 96 .............................. <tNextTile.getType(tNextX, tNextY)>
  [248] setlocal 6 .............................. tNextZ = tNextTile.getType(tNextX, tNextY)
  [250] getlocal 6 .............................. <tNextZ>
  [252] pusharglist 1 ........................... <tNextZ>
  [254] extcall 95 .............................. <integer(tNextZ)>
  [256] pusharglist 1 ........................... <integer(tNextZ)>
  [258] extcall 97 .............................. <integerp(integer(tNextZ))>
  [260] jmpifz [292] ............................ if integerp(integer(tNextZ)) then
  [263] pushsymb 10 ............................. <#x>
  [265] getlocal 3 .............................. <tNextX>
  [267] pushsymb 11 ............................. <#y>
  [269] getlocal 4 .............................. <tNextY>
  [271] pushsymb 12 ............................. <#z>
  [273] getlocal 6 .............................. <tNextZ>
  [275] pushsymb 83 ............................. <#dirBody>
  [277] getprop 1000 ............................ <pDirObject>
  [280] pusharglist 1 ........................... <pDirObject>
  [282] objcall 982 ............................. <pDirObject.getDirection()>
  [285] pusharglist 8 ........................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [287] pushproplist ............................ <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [288] pusharglistnoret 1 ...................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [290] extcall 13 .............................. return [#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]
  [292] getprop 1000 ............................ <pDirObject>
  [295] pushzero ................................ <0>
  [296] pusharglistnoret 2 ...................... <pDirObject, 0>
  [298] objcall 989 ............................. pDirObject.rotateDirection45Degrees(0)
  [301] getprop 1000 ............................ <pDirObject>
  [304] pushzero ................................ <0>
  [305] pusharglistnoret 2 ...................... <pDirObject, 0>
  [307] objcall 989 ............................. pDirObject.rotateDirection45Degrees(0)
  [310] getparam 1 .............................. <tCurrentLocX>
  [312] getprop 1000 ............................ <pDirObject>
  [315] pusharglist 1 ........................... <pDirObject>
  [317] objcall 984 ............................. <pDirObject.getUnitVectorXComponent()>
  [320] add ..................................... <tCurrentLocX + pDirObject.getUnitVectorXComponent()>
  [321] setlocal 3 .............................. tNextX = tCurrentLocX + pDirObject.getUnitVectorXComponent()
  [323] getparam 2 .............................. <tCurrentLocY>
  [325] getprop 1000 ............................ <pDirObject>
  [328] pusharglist 1 ........................... <pDirObject>
  [330] objcall 985 ............................. <pDirObject.getUnitVectorYComponent()>
  [333] add ..................................... <tCurrentLocY + pDirObject.getUnitVectorYComponent()>
  [334] setlocal 4 .............................. tNextY = tCurrentLocY + pDirObject.getUnitVectorYComponent()
  [336] getlocal 0 .............................. <tGameSystem>
  [338] pusharglist 1 ........................... <tGameSystem>
  [340] objcall 48 .............................. <tGameSystem.getWorld()>
  [342] getlocal 3 .............................. <tNextX>
  [344] getlocal 4 .............................. <tNextY>
  [346] pusharglist 3 ........................... <tGameSystem.getWorld(), tNextX, tNextY>
  [348] objcall 94 .............................. <tGameSystem.getWorld().getTile(tNextX, tNextY)>
  [350] setlocal 5 .............................. tNextTile = tGameSystem.getWorld().getTile(tNextX, tNextY)
  [352] getlocal 5 .............................. <tNextTile>
  [354] pushzero ................................ <0>
  [355] nteq .................................... <tNextTile <> 0>
  [356] jmpifz [413] ............................ if tNextTile <> 0 then
  [359] getlocal 5 .............................. <tNextTile>
  [361] getlocal 3 .............................. <tNextX>
  [363] getlocal 4 .............................. <tNextY>
  [365] pusharglist 3 ........................... <tNextTile, tNextX, tNextY>
  [367] objcall 96 .............................. <tNextTile.getType(tNextX, tNextY)>
  [369] setlocal 6 .............................. tNextZ = tNextTile.getType(tNextX, tNextY)
  [371] getlocal 6 .............................. <tNextZ>
  [373] pusharglist 1 ........................... <tNextZ>
  [375] extcall 95 .............................. <integer(tNextZ)>
  [377] pusharglist 1 ........................... <integer(tNextZ)>
  [379] extcall 97 .............................. <integerp(integer(tNextZ))>
  [381] jmpifz [413] ............................ if integerp(integer(tNextZ)) then
  [384] pushsymb 10 ............................. <#x>
  [386] getlocal 3 .............................. <tNextX>
  [388] pushsymb 11 ............................. <#y>
  [390] getlocal 4 .............................. <tNextY>
  [392] pushsymb 12 ............................. <#z>
  [394] getlocal 6 .............................. <tNextZ>
  [396] pushsymb 83 ............................. <#dirBody>
  [398] getprop 1000 ............................ <pDirObject>
  [401] pusharglist 1 ........................... <pDirObject>
  [403] objcall 982 ............................. <pDirObject.getDirection()>
  [406] pusharglist 8 ........................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [408] pushproplist ............................ <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [409] pusharglistnoret 1 ...................... <[#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]>
  [411] extcall 13 .............................. return [#x: tNextX, #y: tNextY, #z: tNextZ, #dirBody: pDirObject.getDirection()]
  [413] pushzero ................................ <0>
  [414] pusharglistnoret 1 ...................... <0>
  [416] extcall 13 .............................. return 0
  [418] ret
end

on clearEffectAnimation me
  [  0] getprop 50 .............................. <pActiveEffects>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 20
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 38] ............................ repeat with tEffect in pActiveEffects
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 18
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tEffect>
  [ 30] pushzero ................................ <0>
  [ 31] setobjprop 66 ........................... tEffect.pActive = 0
  [ 33] pushint8 1
  [ 35] add
  [ 36] endrepeat [ 10]
  [ 38] pop 3
  [ 40] ret
end

on setEffectAnimationLocations me, tlocation
  [  0] getparam 1 .............................. <tlocation>
  [  2] pushsymb 10 ............................. <#x>
  [  4] pusharglist 2 ........................... <tlocation, #x>
  [  6] objcall 18 .............................. <tlocation[#x]>
  [  8] setlocal 0 .............................. tX = tlocation[#x]
  [ 10] getparam 1 .............................. <tlocation>
  [ 12] pushsymb 11 ............................. <#y>
  [ 14] pusharglist 2 ........................... <tlocation, #y>
  [ 16] objcall 18 .............................. <tlocation[#y]>
  [ 18] setlocal 1 .............................. tY = tlocation[#y]
  [ 20] getparam 1 .............................. <tlocation>
  [ 22] pushsymb 12 ............................. <#z>
  [ 24] pusharglist 2 ........................... <tlocation, #z>
  [ 26] objcall 18 .............................. <tlocation[#z]>
  [ 28] setlocal 2 .............................. tZ = tlocation[#z]
  [ 30] pushint8 1 .............................. <1>
  [ 32] getprop 50 .............................. <pActiveEffects>
  [ 34] getobjprop 20 ........................... <pActiveEffects.count>
  [ 36] add ..................................... <1 + pActiveEffects.count>
  [ 37] setlocal 3 .............................. tlocz = 1 + pActiveEffects.count
  [ 39] pushsymb 156 ............................ <#room_interface>
  [ 41] pusharglist 1 ........................... <#room_interface>
  [ 43] extcall 153 ............................. <getObject(#room_interface)>
  [ 45] pushzero ................................ <0>
  [ 46] eq ...................................... <getObject(#room_interface) = 0>
  [ 47] jmpifz [ 55] ............................ if getObject(#room_interface) = 0 then
  [ 50] pushzero ................................ <0>
  [ 51] pusharglistnoret 1 ...................... <0>
  [ 53] extcall 13 .............................. return 0
  [ 55] pushsymb 156 ............................ <#room_interface>
  [ 57] pusharglist 1 ........................... <#room_interface>
  [ 59] extcall 153 ............................. <getObject(#room_interface)>
  [ 61] pusharglist 1 ........................... <getObject(#room_interface)>
  [ 63] objcall 169 ............................. <getObject(#room_interface).getGeometry()>
  [ 65] setlocal 4 .............................. pGeometry = getObject(#room_interface).getGeometry()
  [ 67] getlocal 4 .............................. <pGeometry>
  [ 69] pushzero ................................ <0>
  [ 70] eq ...................................... <pGeometry = 0>
  [ 71] jmpifz [ 79] ............................ if pGeometry = 0 then
  [ 74] pushzero ................................ <0>
  [ 75] pusharglistnoret 1 ...................... <0>
  [ 77] extcall 13 .............................. return 0
  [ 79] getlocal 4 .............................. <pGeometry>
  [ 81] getlocal 0 .............................. <tX>
  [ 83] getlocal 1 .............................. <tY>
  [ 85] getlocal 2 .............................. <tZ>
  [ 87] pusharglist 4 ........................... <pGeometry, tX, tY, tZ>
  [ 89] objcall 202 ............................. <pGeometry.getScreenCoordinate(tX, tY, tZ)>
  [ 91] setlocal 5 .............................. tScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tZ)
  [ 93] getprop 50 .............................. <pActiveEffects>
  [ 95] peek 0
  [ 97] pusharglist 1
  [ 99] extcall 20
  [101] pushint8 1
  [103] peek 0
  [105] peek 2
  [107] lteq
  [108] jmpifz [134] ............................ repeat with tEffect in pActiveEffects
  [111] peek 2
  [113] peek 1
  [115] pusharglist 2
  [117] extcall 18
  [119] setlocal 6
  [121] getlocal 6 .............................. <tEffect>
  [123] getlocal 5 .............................. <tScreenLoc>
  [125] pusharglistnoret 2 ...................... <tEffect, tScreenLoc>
  [127] objcall 89 .............................. tEffect.setLocation(tScreenLoc)
  [129] pushint8 1
  [131] add
  [132] endrepeat [103]
  [134] pop 3
  [136] pushint8 1 .............................. <1>
  [138] pusharglistnoret 1 ...................... <1>
  [140] extcall 13 .............................. return 1
  [142] ret
end

on startPowerupActivateAnimation me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 17 ............................. <#powerupType>
  [  4] pusharglist 2 ........................... <tdata, #powerupType>
  [  6] objcall 18 .............................. <tdata[#powerupType]>
  [  8] peek 0 .................................. case tdata[#powerupType] of
  [ 10] pushint8 1 .............................. <1>
  [ 12] eq
  [ 13] jmpifz [ 38] ............................ (case) 1:
  [ 16] getparam 0 .............................. <me>
  [ 18] pushsymb 945 ............................ <#once>
  [ 21] pushcons 11 ............................. <"bb2_efct_pu_lghtbulb_">
  [ 23] pushsymb 197 ............................ <#ink>
  [ 25] pushint8 33 ............................. <33>
  [ 27] pusharglist 2 ........................... <[#ink: 33]>
  [ 29] pushproplist ............................ <[#ink: 33]>
  [ 30] pusharglistnoret 4 ...................... <me, #once, "bb2_efct_pu_lghtbulb_", [#ink: 33]>
  [ 32] objcall 935 ............................. me.createEffect(#once, "bb2_efct_pu_lghtbulb_", [#ink: 33])
  [ 35] jmp [126]
  [ 38] peek 0
  [ 40] pushint8 3 .............................. <3>
  [ 42] eq
  [ 43] jmpifz [ 77] ............................ (case) 3:
  [ 46] getparam 0 .............................. <me>
  [ 48] pushsymb 971 ............................ <#once_slow>
  [ 51] pushcons 12 ............................. <"bb2_efct_pu_flashlght_">
  [ 53] pushsymb 197 ............................ <#ink>
  [ 55] pushint8 33 ............................. <33>
  [ 57] pusharglist 2 ........................... <[#ink: 33]>
  [ 59] pushproplist ............................ <[#ink: 33]>
  [ 60] getparam 1 .............................. <tdata>
  [ 62] pushsymb 967 ............................ <#effectdirection>
  [ 65] pusharglist 2 ........................... <tdata, #effectdirection>
  [ 67] objcall 18 .............................. <tdata[#effectdirection]>
  [ 69] pusharglistnoret 5 ...................... <me, #once_slow, "bb2_efct_pu_flashlght_", [#ink: 33], tdata[#effectdirection]>
  [ 71] objcall 935 ............................. me.createEffect(#once_slow, "bb2_efct_pu_flashlght_", [#ink: 33], tdata[#effectdirection])
  [ 74] jmp [126]
  [ 77] peek 0
  [ 79] pushint8 7 .............................. <7>
  [ 81] eq
  [ 82] jmpifz [107] ............................ (case) 7:
  [ 85] getparam 0 .............................. <me>
  [ 87] pushsymb 945 ............................ <#once>
  [ 90] pushcons 11 ............................. <"bb2_efct_pu_lghtbulb_">
  [ 92] pushsymb 197 ............................ <#ink>
  [ 94] pushint8 35 ............................. <35>
  [ 96] pusharglist 2 ........................... <[#ink: 35]>
  [ 98] pushproplist ............................ <[#ink: 35]>
  [ 99] pusharglistnoret 4 ...................... <me, #once, "bb2_efct_pu_lghtbulb_", [#ink: 35]>
  [101] objcall 935 ............................. me.createEffect(#once, "bb2_efct_pu_lghtbulb_", [#ink: 35])
  [104] jmp [126] ............................... (case) otherwise:
  [107] getparam 0 .............................. <me>
  [109] pushsymb 945 ............................ <#once>
  [112] pushcons 13 ............................. <"bb2_pickup_">
  [114] pushsymb 197 ............................ <#ink>
  [116] pushint8 33 ............................. <33>
  [118] pusharglist 2 ........................... <[#ink: 33]>
  [120] pushproplist ............................ <[#ink: 33]>
  [121] pusharglistnoret 4 ...................... <me, #once, "bb2_pickup_", [#ink: 33]>
  [123] objcall 935 ............................. me.createEffect(#once, "bb2_pickup_", [#ink: 33])
  [126] pop 1 ................................... end case
  [128] pushint8 1 .............................. <1>
  [130] pusharglistnoret 1 ...................... <1>
  [132] extcall 13 .............................. return 1
  [134] ret
end

on createEffect me, tMode, tEffectId, tProps, tDirection
  [  0] getprop 9 ............................... <pLocation>
  [  2] pushsymb 10 ............................. <#x>
  [  4] pusharglist 2 ........................... <pLocation, #x>
  [  6] objcall 18 .............................. <pLocation[#x]>
  [  8] setlocal 0 .............................. tX = pLocation[#x]
  [ 10] getprop 9 ............................... <pLocation>
  [ 12] pushsymb 11 ............................. <#y>
  [ 14] pusharglist 2 ........................... <pLocation, #y>
  [ 16] objcall 18 .............................. <pLocation[#y]>
  [ 18] setlocal 1 .............................. tY = pLocation[#y]
  [ 20] getprop 9 ............................... <pLocation>
  [ 22] pushsymb 12 ............................. <#z>
  [ 24] pusharglist 2 ........................... <pLocation, #z>
  [ 26] objcall 18 .............................. <pLocation[#z]>
  [ 28] setlocal 2 .............................. tZ = pLocation[#z]
  [ 30] pushint8 1 .............................. <1>
  [ 32] getprop 50 .............................. <pActiveEffects>
  [ 34] getobjprop 20 ........................... <pActiveEffects.count>
  [ 36] add ..................................... <1 + pActiveEffects.count>
  [ 37] setlocal 3 .............................. tlocz = 1 + pActiveEffects.count
  [ 39] pushsymb 156 ............................ <#room_interface>
  [ 41] pusharglist 1 ........................... <#room_interface>
  [ 43] extcall 153 ............................. <getObject(#room_interface)>
  [ 45] pushzero ................................ <0>
  [ 46] eq ...................................... <getObject(#room_interface) = 0>
  [ 47] jmpifz [ 55] ............................ if getObject(#room_interface) = 0 then
  [ 50] pushzero ................................ <0>
  [ 51] pusharglistnoret 1 ...................... <0>
  [ 53] extcall 13 .............................. return 0
  [ 55] pushsymb 156 ............................ <#room_interface>
  [ 57] pusharglist 1 ........................... <#room_interface>
  [ 59] extcall 153 ............................. <getObject(#room_interface)>
  [ 61] pusharglist 1 ........................... <getObject(#room_interface)>
  [ 63] objcall 169 ............................. <getObject(#room_interface).getGeometry()>
  [ 65] setlocal 4 .............................. pGeometry = getObject(#room_interface).getGeometry()
  [ 67] getlocal 4 .............................. <pGeometry>
  [ 69] pushzero ................................ <0>
  [ 70] eq ...................................... <pGeometry = 0>
  [ 71] jmpifz [ 79] ............................ if pGeometry = 0 then
  [ 74] pushzero ................................ <0>
  [ 75] pusharglistnoret 1 ...................... <0>
  [ 77] extcall 13 .............................. return 0
  [ 79] getlocal 4 .............................. <pGeometry>
  [ 81] getlocal 0 .............................. <tX>
  [ 83] getlocal 1 .............................. <tY>
  [ 85] getlocal 2 .............................. <tZ>
  [ 87] pusharglist 4 ........................... <pGeometry, tX, tY, tZ>
  [ 89] objcall 202 ............................. <pGeometry.getScreenCoordinate(tX, tY, tZ)>
  [ 91] setlocal 5 .............................. tScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tZ)
  [ 93] pushsymb 39 ............................. <#temp>
  [ 95] pushcons 14 ............................. <"BB Effect Animation Class">
  [ 97] pusharglist 2 ........................... <#temp, "BB Effect Animation Class">
  [ 99] extcall 38 .............................. <createObject(#temp, "BB Effect Animation Class")>
  [101] setlocal 6 .............................. tEffect = createObject(#temp, "BB Effect Animation Class")
  [103] getlocal 6 .............................. <tEffect>
  [105] pushzero ................................ <0>
  [106] eq ...................................... <tEffect = 0>
  [107] jmpifz [125] ............................ if tEffect = 0 then
  [110] getparam 0 .............................. <me>
  [112] pushcons 15 ............................. <"Unable to create effect object!">
  [114] pushsymb 935 ............................ <#createEffect>
  [117] pusharglist 3 ........................... <me, "Unable to create effect object!", #createEffect>
  [119] extcall 19 .............................. <error(me, "Unable to create effect object!", #createEffect)>
  [121] pusharglistnoret 1 ...................... <error(me, "Unable to create effect object!", #createEffect)>
  [123] extcall 13 .............................. return error(me, "Unable to create effect object!", #createEffect)
  [125] getlocal 6 .............................. <tEffect>
  [127] getparam 1 .............................. <tMode>
  [129] getlocal 5 .............................. <tScreenLoc>
  [131] getlocal 3 .............................. <tlocz>
  [133] getparam 2 .............................. <tEffectId>
  [135] getparam 3 .............................. <tProps>
  [137] getparam 4 .............................. <tDirection>
  [139] pusharglistnoret 7 ...................... <tEffect, tMode, tScreenLoc, tlocz, tEffectId, tProps, tDirection>
  [141] objcall 2 ............................... tEffect.define(tMode, tScreenLoc, tlocz, tEffectId, tProps, tDirection)
  [143] getprop 50 .............................. <pActiveEffects>
  [145] getlocal 6 .............................. <tEffect>
  [147] pusharglistnoret 2 ...................... <pActiveEffects, tEffect>
  [149] objcall 362 ............................. pActiveEffects.append(tEffect)
  [152] pushint8 1 .............................. <1>
  [154] pusharglistnoret 1 ...................... <1>
  [156] extcall 13 .............................. return 1
  [158] ret
end

on getOwnGameIndex me
  [  0] pushsymb 154 ............................ <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 153 ............................. <getObject(#session)>
  [  6] setlocal 0 .............................. tSession = getObject(#session)
  [  8] getlocal 0 .............................. <tSession>
  [ 10] pushcons 16 ............................. <"user_game_index">
  [ 12] pusharglist 2 ........................... <tSession, "user_game_index">
  [ 14] objcall 256 ............................. <tSession.exists("user_game_index")>
  [ 17] not ..................................... <not tSession.exists("user_game_index")>
  [ 18] jmpifz [ 26] ............................ if not tSession.exists("user_game_index") then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 13 .............................. return 0
  [ 26] getlocal 0 .............................. <tSession>
  [ 28] pushcons 16 ............................. <"user_game_index">
  [ 30] pusharglist 2 ........................... <tSession, "user_game_index">
  [ 32] objcall 155 ............................. <tSession.get("user_game_index")>
  [ 34] pusharglistnoret 1 ...................... <tSession.get("user_game_index")>
  [ 36] extcall 13 .............................. return tSession.get("user_game_index")
  [ 38] ret
end
