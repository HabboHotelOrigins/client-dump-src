property pActiveEffects, pRoomObject, pTypeIndex, pLocation, pDump

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 50 .............................. pActiveEffects = []
  [  5] pushcons 0 .............................. <"bb2_pu_lghtbulb">
  [  7] pushcons 1 .............................. <"bb2_pu_spring">
  [  9] pushcons 2 .............................. <"bb2_pu_flashlght">
  [ 11] pushcons 3 .............................. <"bb2_pu_cannon">
  [ 13] pushcons 4 .............................. <"bb2_pu_pinbox">
  [ 15] pushcons 5 .............................. <"bb2_pu_harlequin">
  [ 17] pushcons 6 .............................. <"bb2_pu_bomb">
  [ 19] pushcons 7 .............................. <"bb2_pu_drill">
  [ 21] pushcons 8 .............................. <"bb2_pu_qstnmark">
  [ 23] pusharglist 9 ........................... <["bb2_pu_lghtbulb", "bb2_pu_spring", "bb2_pu_flashlght", "bb2_pu_cannon", "bb2_pu_pinbox", "bb2_pu_harlequin", "bb2_pu_bomb", "bb2_pu_drill", "bb2_pu_qstnmark"]>
  [ 25] pushlist ................................ <["bb2_pu_lghtbulb", "bb2_pu_spring", "bb2_pu_flashlght", "bb2_pu_cannon", "bb2_pu_pinbox", "bb2_pu_harlequin", "bb2_pu_bomb", "bb2_pu_drill", "bb2_pu_qstnmark"]>
  [ 26] setprop 8 ............................... pTypeIndex = ["bb2_pu_lghtbulb", "bb2_pu_spring", "bb2_pu_flashlght", "bb2_pu_cannon", "bb2_pu_pinbox", "bb2_pu_harlequin", "bb2_pu_bomb", "bb2_pu_drill", "bb2_pu_qstnmark"]
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 13 .............................. return 1
  [ 34] ret
end

on deconstruct me
  [  0] getprop 50 .............................. <pActiveEffects>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 20
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 39] ............................ repeat with tEffect in pActiveEffects
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 18
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tEffect>
  [ 30] pusharglistnoret 1 ...................... <tEffect>
  [ 32] objcall 1 ............................... tEffect.deconstruct()
  [ 34] pushint8 1
  [ 36] add
  [ 37] endrepeat [ 10]
  [ 39] pop 3
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setprop 50 .............................. pActiveEffects = []
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 1 ...................... <me>
  [ 50] objcall 5 ............................... me.removeRoomObject()
  [ 52] pushint8 1 .............................. <1>
  [ 54] pusharglistnoret 1 ...................... <1>
  [ 56] extcall 13 .............................. return 1
  [ 58] ret
end

on define me, tGameObject
  [  0] getparam 1 .............................. <tGameObject>
  [  2] pusharglist 1 ........................... <tGameObject>
  [  4] objcall 15 .............................. <tGameObject.duplicate()>
  [  6] setparam 1 .............................. tGameObject = tGameObject.duplicate()
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tGameObject>
  [ 12] pusharglistnoret 2 ...................... <me, tGameObject>
  [ 14] objcall 16 .............................. me.setGameObjectProperty(tGameObject)
  [ 16] getparam 1 .............................. <tGameObject>
  [ 18] pushsymb 17 ............................. <#powerupType>
  [ 20] pusharglist 2 ........................... <tGameObject, #powerupType>
  [ 22] objcall 18 .............................. <tGameObject[#powerupType]>
  [ 24] pushint8 1 .............................. <1>
  [ 26] lt ...................................... <tGameObject[#powerupType] < 1>
  [ 27] jmpifz [ 44] ............................ if tGameObject[#powerupType] < 1 then
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 9 .............................. <"Invalid powerup type!">
  [ 34] pushsymb 2 .............................. <#define>
  [ 36] pusharglist 3 ........................... <me, "Invalid powerup type!", #define>
  [ 38] extcall 19 .............................. <error(me, "Invalid powerup type!", #define)>
  [ 40] pusharglistnoret 1 ...................... <error(me, "Invalid powerup type!", #define)>
  [ 42] extcall 13 .............................. return error(me, "Invalid powerup type!", #define)
  [ 44] getparam 1 .............................. <tGameObject>
  [ 46] pushsymb 17 ............................. <#powerupType>
  [ 48] pusharglist 2 ........................... <tGameObject, #powerupType>
  [ 50] objcall 18 .............................. <tGameObject[#powerupType]>
  [ 52] getprop 8 ............................... <pTypeIndex>
  [ 54] getobjprop 20 ........................... <pTypeIndex.count>
  [ 56] gt ...................................... <tGameObject[#powerupType] > pTypeIndex.count>
  [ 57] jmpifz [ 74] ............................ if tGameObject[#powerupType] > pTypeIndex.count then
  [ 60] getparam 0 .............................. <me>
  [ 62] pushcons 10 ............................. <"Undefined powerup type, see pTypeIndex!">
  [ 64] pushsymb 2 .............................. <#define>
  [ 66] pusharglist 3 ........................... <me, "Undefined powerup type, see pTypeIndex!", #define>
  [ 68] extcall 19 .............................. <error(me, "Undefined powerup type, see pTypeIndex!", #define)>
  [ 70] pusharglistnoret 1 ...................... <error(me, "Undefined powerup type, see pTypeIndex!", #define)>
  [ 72] extcall 13 .............................. return error(me, "Undefined powerup type, see pTypeIndex!", #define)
  [ 74] getparam 0 .............................. <me>
  [ 76] getparam 1 .............................. <tGameObject>
  [ 78] pushsymb 10 ............................. <#x>
  [ 80] pusharglist 2 ........................... <tGameObject, #x>
  [ 82] objcall 18 .............................. <tGameObject[#x]>
  [ 84] getparam 1 .............................. <tGameObject>
  [ 86] pushsymb 11 ............................. <#y>
  [ 88] pusharglist 2 ........................... <tGameObject, #y>
  [ 90] objcall 18 .............................. <tGameObject[#y]>
  [ 92] getparam 1 .............................. <tGameObject>
  [ 94] pushsymb 12 ............................. <#z>
  [ 96] pusharglist 2 ........................... <tGameObject, #z>
  [ 98] objcall 18 .............................. <tGameObject[#z]>
  [100] pusharglistnoret 4 ...................... <me, tGameObject[#x], tGameObject[#y], tGameObject[#z]>
  [102] objcall 89 .............................. me.setLocation(tGameObject[#x], tGameObject[#y], tGameObject[#z])
  [104] getprop 8 ............................... <pTypeIndex>
  [106] getparam 1 .............................. <tGameObject>
  [108] pushsymb 17 ............................. <#powerupType>
  [110] pusharglist 2 ........................... <tGameObject, #powerupType>
  [112] objcall 18 .............................. <tGameObject[#powerupType]>
  [114] pusharglist 2 ........................... <pTypeIndex, tGameObject[#powerupType]>
  [116] objcall 18 .............................. <pTypeIndex[tGameObject[#powerupType]]>
  [118] setlocal 0 .............................. tStrType = pTypeIndex[tGameObject[#powerupType]]
  [120] getparam 1 .............................. <tGameObject>
  [122] pushsymb 22 ............................. <#class>
  [124] getlocal 0 .............................. <tStrType>
  [126] pusharglistnoret 3 ...................... <tGameObject, #class, tStrType>
  [128] objcall 23 .............................. tGameObject.addProp(#class, tStrType)
  [130] getparam 0 .............................. <me>
  [132] pusharglist 1 ........................... <me>
  [134] objcall 24 .............................. <me.getGameSystem()>
  [136] pusharglist 1 ........................... <me.getGameSystem()>
  [138] objcall 25 .............................. <me.getGameSystem().getID()>
  [140] setlocal 1 .............................. tSystemId = me.getGameSystem().getID()
  [142] getlocal 1 .............................. <tSystemId>
  [144] pushcons 11 ............................. <".roomobject.">
  [146] joinstr ................................. <tSystemId & ".roomobject.">
  [147] getparam 1 .............................. <tGameObject>
  [149] pushsymb 26 ............................. <#str_type>
  [151] pusharglist 2 ........................... <tGameObject, #str_type>
  [153] objcall 18 .............................. <tGameObject[#str_type]>
  [155] joinstr ................................. <tSystemId & ".roomobject." & tGameObject[#str_type]>
  [156] pushcons 12 ............................. <".class">
  [158] joinstr ................................. <tSystemId & ".roomobject." & tGameObject[#str_type] & ".class">
  [159] setlocal 2 .............................. tClassID = tSystemId & ".roomobject." & tGameObject[#str_type] & ".class"
  [161] getparam 1 .............................. <tGameObject>
  [163] pushsymb 27 ............................. <#classID>
  [165] getlocal 2 .............................. <tClassID>
  [167] pusharglistnoret 3 ...................... <tGameObject, #classID, tClassID>
  [169] objcall 23 .............................. tGameObject.addProp(#classID, tClassID)
  [171] getparam 0 .............................. <me>
  [173] getparam 1 .............................. <tGameObject>
  [175] pusharglistnoret 2 ...................... <me, tGameObject>
  [177] objcall 4 ............................... me.createRoomObject(tGameObject)
  [179] pushint8 1 .............................. <1>
  [181] pusharglistnoret 1 ...................... <1>
  [183] extcall 13 .............................. return 1
  [185] ret
end

on update me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 50 .............................. <pActiveEffects>
  [  8] getobjprop 20 ........................... <pActiveEffects.count>
  [ 10] lteq
  [ 11] jmpifz [ 70] ............................ repeat with i = 1 to pActiveEffects.count
  [ 14] getprop 50 .............................. <pActiveEffects>
  [ 16] getlocal 0 .............................. <i>
  [ 18] pusharglist 2 ........................... <pActiveEffects, i>
  [ 20] objcall 18 .............................. <pActiveEffects[i]>
  [ 22] setlocal 1 .............................. tEffect = pActiveEffects[i]
  [ 24] getlocal 1 .............................. <tEffect>
  [ 26] getobjprop 66 ........................... <tEffect.pActive>
  [ 28] jmpifz [ 40] ............................ if tEffect.pActive then
  [ 31] getlocal 1 .............................. <tEffect>
  [ 33] pusharglistnoret 1 ...................... <tEffect>
  [ 35] objcall 51 .............................. tEffect.update()
  [ 37] jmp [ 61] ............................... next repeat
  [ 40] getlocal 1 .............................. <tEffect>
  [ 42] pusharglistnoret 1 ...................... <tEffect>
  [ 44] objcall 1 ............................... tEffect.deconstruct()
  [ 46] getprop 50 .............................. <pActiveEffects>
  [ 48] getlocal 0 .............................. <i>
  [ 50] pusharglistnoret 2 ...................... <pActiveEffects, i>
  [ 52] objcall 67 .............................. pActiveEffects.deleteAt(i)
  [ 54] getparam 0 .............................. <me>
  [ 56] pushint8 1 .............................. <1>
  [ 58] setobjprop 923 .......................... me.pKilled = 1
  [ 61] pushint8 1
  [ 63] getlocal 0
  [ 65] add
  [ 66] setlocal 0
  [ 68] endrepeat [  4]
  [ 70] pushint8 1 .............................. <1>
  [ 72] pusharglistnoret 1 ...................... <1>
  [ 74] extcall 13 .............................. return 1
  [ 76] ret
end

on executeGameObjectEvent me, tEvent, tdata
  [  0] getprop 32 .............................. <pDump>
  [  2] jmpifz [ 27] ............................ if pDump then
  [  5] pushcons 13 ............................. <"* executeGameObjectEvent on">
  [  7] getparam 0 .............................. <me>
  [  9] pusharglist 1 ........................... <me>
  [ 11] objcall 33 .............................. <me.getObjectId()>
  [ 13] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId()>
  [ 14] pushcons 14 ............................. <":">
  [ 16] joinstr ................................. <"* executeGameObjectEvent on" && me.getObjectId() & ":">
  [ 17] getparam 1 .............................. <tEvent>
  [ 19] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent>
  [ 20] getparam 2 .............................. <tdata>
  [ 22] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata>
  [ 23] pusharglistnoret 1 ...................... <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata>
  [ 25] extcall 34 .............................. put "* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata
  [ 27] getparam 1 .............................. <tEvent>
  [ 29] peek 0 .................................. case tEvent of
  [ 31] pushsymb 126 ............................ <#pickup_powerup>
  [ 33] eq
  [ 34] jmpifz [ 56] ............................ (case) #pickup_powerup:
  [ 37] pop 1
  [ 39] getparam 0 .............................. <me>
  [ 41] pushsymb 1089 ........................... <#hide_roomobject>
  [ 44] pusharglist 2 ........................... <me, #hide_roomobject>
  [ 46] objcall 1001 ............................ <me.roomObjectAction(#hide_roomobject)>
  [ 49] pusharglistnoret 1 ...................... <me.roomObjectAction(#hide_roomobject)>
  [ 51] extcall 13 .............................. return me.roomObjectAction(#hide_roomobject)
  [ 53] jmp [ 86]
  [ 56] peek 0
  [ 58] pushsymb 449 ............................ <#gameend>
  [ 61] eq
  [ 62] jmpifz [ 74] ............................ (case) #gameend:
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglistnoret 1 ...................... <me>
  [ 69] objcall 5 ............................... me.removeRoomObject()
  [ 71] jmp [ 86] ............................... (case) otherwise:
  [ 74] pushcons 15 ............................. <"* Gameobject: UNDEFINED EVENT:">
  [ 76] getparam 1 .............................. <tEvent>
  [ 78] joinpadstr .............................. <"* Gameobject: UNDEFINED EVENT:" && tEvent>
  [ 79] getparam 2 .............................. <tdata>
  [ 81] joinpadstr .............................. <"* Gameobject: UNDEFINED EVENT:" && tEvent && tdata>
  [ 82] pusharglistnoret 1 ...................... <"* Gameobject: UNDEFINED EVENT:" && tEvent && tdata>
  [ 84] extcall 34 .............................. put "* Gameobject: UNDEFINED EVENT:" && tEvent && tdata
  [ 86] pop 1 ................................... end case
  [ 88] ret
end

on createRoomObject me, tDataStruct
  [  0] pushsymb 39 ............................. <#temp>
  [  2] pushcons 16 ............................. <"bb_gamesystem.roomobject.powerup.wrapper.class">
  [  4] pusharglist 1 ........................... <"bb_gamesystem.roomobject.powerup.wrapper.class">
  [  6] extcall 40 .............................. <getClassVariable("bb_gamesystem.roomobject.powerup.wrapper.class")>
  [  8] pusharglist 2 ........................... <#temp, getClassVariable("bb_gamesystem.roomobject.powerup.wrapper.class")>
  [ 10] extcall 38 .............................. <createObject(#temp, getClassVariable("bb_gamesystem.roomobject.powerup.wrapper.class"))>
  [ 12] setprop 37 .............................. pRoomObject = createObject(#temp, getClassVariable("bb_gamesystem.roomobject.powerup.wrapper.class"))
  [ 14] getprop 37 .............................. <pRoomObject>
  [ 16] pushzero ................................ <0>
  [ 17] eq ...................................... <pRoomObject = 0>
  [ 18] jmpifz [ 35] ............................ if pRoomObject = 0 then
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 17 ............................. <"Cannot create roomobject wrapper!">
  [ 25] pushsymb 4 .............................. <#createRoomObject>
  [ 27] pusharglist 3 ........................... <me, "Cannot create roomobject wrapper!", #createRoomObject>
  [ 29] extcall 19 .............................. <error(me, "Cannot create roomobject wrapper!", #createRoomObject)>
  [ 31] pusharglistnoret 1 ...................... <error(me, "Cannot create roomobject wrapper!", #createRoomObject)>
  [ 33] extcall 13 .............................. return error(me, "Cannot create roomobject wrapper!", #createRoomObject)
  [ 35] getprop 37 .............................. <pRoomObject>
  [ 37] getparam 1 .............................. <tDataStruct>
  [ 39] pusharglist 2 ........................... <pRoomObject, tDataStruct>
  [ 41] objcall 2 ............................... <pRoomObject.define(tDataStruct)>
  [ 43] pusharglistnoret 1 ...................... <pRoomObject.define(tDataStruct)>
  [ 45] extcall 13 .............................. return pRoomObject.define(tDataStruct)
  [ 47] ret
end

on removeRoomObject me
  [  0] getprop 37 .............................. <pRoomObject>
  [  2] pusharglist 1 ........................... <pRoomObject>
  [  4] extcall 42 .............................. <objectp(pRoomObject)>
  [  6] not ..................................... <not objectp(pRoomObject)>
  [  7] jmpifz [ 16] ............................ if not objectp(pRoomObject) then
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 13 .............................. return 1
  [ 16] getprop 37 .............................. <pRoomObject>
  [ 18] pusharglistnoret 1 ...................... <pRoomObject>
  [ 20] objcall 1 ............................... pRoomObject.deconstruct()
  [ 22] pusharglist 0 ........................... <>
  [ 24] extcall 43 .............................. <VOID>
  [ 26] setprop 37 .............................. pRoomObject = VOID
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 13 .............................. return 1
  [ 34] ret
end

on roomObjectAction me, tAction, tdata
  [  0] getprop 37 .............................. <pRoomObject>
  [  2] pusharglist 1 ........................... <pRoomObject>
  [  4] extcall 42 .............................. <objectp(pRoomObject)>
  [  6] not ..................................... <not objectp(pRoomObject)>
  [  7] jmpifz [ 15] ............................ if not objectp(pRoomObject) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 13 .............................. return 0
  [ 15] getprop 37 .............................. <pRoomObject>
  [ 17] getparam 1 .............................. <tAction>
  [ 19] getparam 2 .............................. <tdata>
  [ 21] pusharglist 3 ........................... <pRoomObject, tAction, tdata>
  [ 23] objcall 1001 ............................ <pRoomObject.roomObjectAction(tAction, tdata)>
  [ 26] pusharglistnoret 1 ...................... <pRoomObject.roomObjectAction(tAction, tdata)>
  [ 28] extcall 13 .............................. return pRoomObject.roomObjectAction(tAction, tdata)
  [ 30] ret
end
