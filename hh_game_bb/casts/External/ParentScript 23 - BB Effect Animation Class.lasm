property pActive, pSprite, pMemberID, pmode, pLocAdjust, pSkipAmount, pSkipCounter, pAnimFrame, pDirection

on construct me
  [  0] pushzero ................................ <0>
  [  1] pushzero ................................ <0>
  [  2] pusharglist 2 ........................... <0, 0>
  [  4] extcall 322 ............................. <point(0, 0)>
  [  7] setprop 1234 ............................ pLocAdjust = point(0, 0)
  [ 10] pushint8 1 .............................. <1>
  [ 12] setprop 66 .............................. pActive = 1
  [ 14] pushint8 1 .............................. <1>
  [ 16] pusharglistnoret 1 ...................... <1>
  [ 18] extcall 13 .............................. return 1
  [ 20] ret
end

on deconstruct me
  [  0] pushzero ................................ <0>
  [  1] setprop 66 .............................. pActive = 0
  [  3] getparam 0 .............................. <me>
  [  5] pusharglistnoret 1 ...................... <me>
  [  7] objcall 561 ............................. me.removeSprites()
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 13 .............................. return 1
  [ 16] ret
end

on define me, tMode, tScreenLoc, tlocz, tMemberId, tProps, tDirection
  [  0] getparam 1 .............................. <tMode>
  [  2] setprop 942 ............................. pmode = tMode
  [  5] pushzero ................................ <0>
  [  6] setprop 563 ............................. pAnimFrame = 0
  [  9] getparam 4 .............................. <tMemberId>
  [ 11] setprop 917 ............................. pMemberID = tMemberId
  [ 14] getparam 6 .............................. <tDirection>
  [ 16] pusharglist 1 ........................... <tDirection>
  [ 18] extcall 345 ............................. <voidp(tDirection)>
  [ 21] jmpifz [ 31] ............................ if voidp(tDirection) then / else
  [ 24] pushzero ................................ <0>
  [ 25] setprop 257 ............................. pDirection = 0
  [ 28] jmp [ 36]
  [ 31] getparam 6 .............................. <tDirection>
  [ 33] setprop 257 ............................. pDirection = tDirection
  [ 36] getparam 5 .............................. <tProps>
  [ 38] pushsymb 336 ............................ <#loc>
  [ 41] pusharglist 2 ........................... <tProps, #loc>
  [ 43] objcall 18 .............................. <tProps[#loc]>
  [ 45] pusharglist 0 ........................... <>
  [ 47] extcall 43 .............................. <VOID>
  [ 49] nteq .................................... <tProps[#loc] <> VOID>
  [ 50] jmpifz [ 75] ............................ if tProps[#loc] <> VOID then
  [ 53] getparam 5 .............................. <tProps>
  [ 55] pushsymb 336 ............................ <#loc>
  [ 58] pusharglist 2 ........................... <tProps, #loc>
  [ 60] objcall 18 .............................. <tProps[#loc]>
  [ 62] setprop 1234 ............................ pLocAdjust = tProps[#loc]
  [ 65] getparam 5 .............................. <tProps>
  [ 67] pushsymb 336 ............................ <#loc>
  [ 70] pusharglistnoret 2 ...................... <tProps, #loc>
  [ 72] objcall 1170 ............................ tProps.deleteProp(#loc)
  [ 75] getprop 942 ............................. <pmode>
  [ 78] peek 0 .................................. case pmode of
  [ 80] pushsymb 944 ............................ <#loop>
  [ 83] nteq
  [ 84] jmpifz [ 96] ............................ (case) #loop, ...
  [ 87] peek 0
  [ 89] pushsymb 945 ............................ <#once>
  [ 92] eq
  [ 93] jmpifz [104] ............................ (case) ..., #once:
  [ 96] pushint8 2 .............................. <2>
  [ 98] setprop 970 ............................. pSkipAmount = 2
  [101] jmp [118]
  [104] peek 0
  [106] pushsymb 971 ............................ <#once_slow>
  [109] eq
  [110] jmpifz [118] ............................ (case) #once_slow:
  [113] pushint8 10 ............................. <10>
  [115] setprop 970 ............................. pSkipAmount = 10
  [118] pop 1 ................................... end case
  [120] getprop 970 ............................. <pSkipAmount>
  [123] setprop 242 ............................. pSkipCounter = pSkipAmount
  [125] getparam 0 .............................. <me>
  [127] getparam 2 .............................. <tScreenLoc>
  [129] getparam 3 .............................. <tlocz>
  [131] getparam 5 .............................. <tProps>
  [133] getparam 6 .............................. <tDirection>
  [135] pusharglistnoret 5 ...................... <me, tScreenLoc, tlocz, tProps, tDirection>
  [137] objcall 560 ............................. me.createSprites(tScreenLoc, tlocz, tProps, tDirection)
  [140] pushint8 1 .............................. <1>
  [142] pusharglistnoret 1 ...................... <1>
  [144] extcall 13 .............................. return 1
  [146] ret
end

on setLocation me, tScreenLoc
  [  0] getparam 1 .............................. <tScreenLoc>
  [  2] pushint8 1 .............................. <1>
  [  4] getparam 1 .............................. <tScreenLoc>
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglist 2 ........................... <tScreenLoc, 1>
  [ 10] objcall 18 .............................. <tScreenLoc[1]>
  [ 12] getprop 1234 ............................ <pLocAdjust>
  [ 15] getobjprop 334 .......................... <pLocAdjust.locH>
  [ 18] add ..................................... <tScreenLoc[1] + pLocAdjust.locH>
  [ 19] pusharglistnoret 3 ...................... <tScreenLoc, 1, tScreenLoc[1] + pLocAdjust.locH>
  [ 21] objcall 21 .............................. tScreenLoc[1] = tScreenLoc[1] + pLocAdjust.locH
  [ 23] getparam 1 .............................. <tScreenLoc>
  [ 25] pushint8 2 .............................. <2>
  [ 27] getparam 1 .............................. <tScreenLoc>
  [ 29] pushint8 2 .............................. <2>
  [ 31] pusharglist 2 ........................... <tScreenLoc, 2>
  [ 33] objcall 18 .............................. <tScreenLoc[2]>
  [ 35] getprop 1234 ............................ <pLocAdjust>
  [ 38] getobjprop 335 .......................... <pLocAdjust.locV>
  [ 41] add ..................................... <tScreenLoc[2] + pLocAdjust.locV>
  [ 42] pusharglistnoret 3 ...................... <tScreenLoc, 2, tScreenLoc[2] + pLocAdjust.locV>
  [ 44] objcall 21 .............................. tScreenLoc[2] = tScreenLoc[2] + pLocAdjust.locV
  [ 46] getprop 46 .............................. <pSprite>
  [ 48] pusharglist 0 ........................... <>
  [ 50] extcall 43 .............................. <VOID>
  [ 52] nteq .................................... <pSprite <> VOID>
  [ 53] jmpifz [ 82] ............................ if pSprite <> VOID then
  [ 56] getprop 46 .............................. <pSprite>
  [ 58] getparam 1 .............................. <tScreenLoc>
  [ 60] pushint8 1 .............................. <1>
  [ 62] pusharglist 2 ........................... <tScreenLoc, 1>
  [ 64] objcall 18 .............................. <tScreenLoc[1]>
  [ 66] getparam 1 .............................. <tScreenLoc>
  [ 68] pushint8 2 .............................. <2>
  [ 70] pusharglist 2 ........................... <tScreenLoc, 2>
  [ 72] objcall 18 .............................. <tScreenLoc[2]>
  [ 74] pusharglist 2 ........................... <tScreenLoc[1], tScreenLoc[2]>
  [ 76] extcall 322 ............................. <point(tScreenLoc[1], tScreenLoc[2])>
  [ 79] setobjprop 336 .......................... pSprite.loc = point(tScreenLoc[1], tScreenLoc[2])
  [ 82] pushint8 1 .............................. <1>
  [ 84] pusharglistnoret 1 ...................... <1>
  [ 86] extcall 13 .............................. return 1
  [ 88] ret
end

on update me
  [  0] getprop 66 .............................. <pActive>
  [  2] not ..................................... <not pActive>
  [  3] jmpifz [ 12] ............................ if not pActive then
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 13 .............................. return 1
  [ 12] getprop 242 ............................. <pSkipCounter>
  [ 14] pushint8 1 .............................. <1>
  [ 16] add ..................................... <pSkipCounter + 1>
  [ 17] setprop 242 ............................. pSkipCounter = pSkipCounter + 1
  [ 19] getprop 242 ............................. <pSkipCounter>
  [ 21] getprop 970 ............................. <pSkipAmount>
  [ 24] lt ...................................... <pSkipCounter < pSkipAmount>
  [ 25] jmpifz [ 34] ............................ if pSkipCounter < pSkipAmount then
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 13 .............................. return 1
  [ 34] pushzero ................................ <0>
  [ 35] setprop 242 ............................. pSkipCounter = 0
  [ 37] getprop 917 ............................. <pMemberID>
  [ 40] getprop 257 ............................. <pDirection>
  [ 43] joinstr ................................. <pMemberID & pDirection>
  [ 44] pushcons 0 .............................. <"_">
  [ 46] joinstr ................................. <pMemberID & pDirection & "_">
  [ 47] getprop 563 ............................. <pAnimFrame>
  [ 50] joinstr ................................. <pMemberID & pDirection & "_" & pAnimFrame>
  [ 51] pusharglist 1 ........................... <pMemberID & pDirection & "_" & pAnimFrame>
  [ 53] extcall 175 ............................. <getmemnum(pMemberID & pDirection & "_" & pAnimFrame)>
  [ 55] setlocal 0 .............................. tMemNum = getmemnum(pMemberID & pDirection & "_" & pAnimFrame)
  [ 57] getlocal 0 .............................. <tMemNum>
  [ 59] pushzero ................................ <0>
  [ 60] eq ...................................... <tMemNum = 0>
  [ 61] jmpifz [101] ............................ if tMemNum = 0 then
  [ 64] getprop 942 ............................. <pmode>
  [ 67] pushsymb 944 ............................ <#loop>
  [ 70] eq ...................................... <pmode = #loop>
  [ 71] jmpifz [ 91] ............................ if pmode = #loop then / else
  [ 74] pushzero ................................ <0>
  [ 75] setprop 563 ............................. pAnimFrame = 0
  [ 78] getparam 0 .............................. <me>
  [ 80] pusharglistnoret 1 ...................... <me>
  [ 82] objcall 51 .............................. me.update()
  [ 84] pusharglistnoret 0 ...................... <>
  [ 86] extcall 13 .............................. return 
  [ 88] jmp [101]
  [ 91] getparam 0 .............................. <me>
  [ 93] pusharglist 1 ........................... <me>
  [ 95] objcall 1 ............................... <me.deconstruct()>
  [ 97] pusharglistnoret 1 ...................... <me.deconstruct()>
  [ 99] extcall 13 .............................. return me.deconstruct()
  [101] getprop 46 .............................. <pSprite>
  [103] getlocal 0 .............................. <tMemNum>
  [105] pusharglist 1 ........................... <tMemNum>
  [107] extcall 171 ............................. <member(tMemNum)>
  [109] setobjprop 171 .......................... pSprite.member = member(tMemNum)
  [111] getprop 46 .............................. <pSprite>
  [113] getobjprop 218 .......................... <pSprite.width>
  [115] getlocal 0 .............................. <tMemNum>
  [117] pusharglist 1 ........................... <tMemNum>
  [119] extcall 171 ............................. <member(tMemNum)>
  [121] getchainedprop 172 ...................... <member(tMemNum).image>
  [123] getobjprop 218 .......................... <member(tMemNum).image.width>
  [125] nteq .................................... <pSprite.width <> member(tMemNum).image.width>
  [126] jmpifz [143] ............................ if pSprite.width <> member(tMemNum).image.width then
  [129] getprop 46 .............................. <pSprite>
  [131] getlocal 0 .............................. <tMemNum>
  [133] pusharglist 1 ........................... <tMemNum>
  [135] extcall 171 ............................. <member(tMemNum)>
  [137] getchainedprop 172 ...................... <member(tMemNum).image>
  [139] getobjprop 218 .......................... <member(tMemNum).image.width>
  [141] setobjprop 218 .......................... pSprite.width = member(tMemNum).image.width
  [143] getprop 46 .............................. <pSprite>
  [145] getobjprop 205 .......................... <pSprite.height>
  [147] getlocal 0 .............................. <tMemNum>
  [149] pusharglist 1 ........................... <tMemNum>
  [151] extcall 171 ............................. <member(tMemNum)>
  [153] getchainedprop 172 ...................... <member(tMemNum).image>
  [155] getobjprop 205 .......................... <member(tMemNum).image.height>
  [157] nteq .................................... <pSprite.height <> member(tMemNum).image.height>
  [158] jmpifz [175] ............................ if pSprite.height <> member(tMemNum).image.height then
  [161] getprop 46 .............................. <pSprite>
  [163] getlocal 0 .............................. <tMemNum>
  [165] pusharglist 1 ........................... <tMemNum>
  [167] extcall 171 ............................. <member(tMemNum)>
  [169] getchainedprop 172 ...................... <member(tMemNum).image>
  [171] getobjprop 205 .......................... <member(tMemNum).image.height>
  [173] setobjprop 205 .......................... pSprite.height = member(tMemNum).image.height
  [175] getprop 563 ............................. <pAnimFrame>
  [178] pushint8 1 .............................. <1>
  [180] add ..................................... <pAnimFrame + 1>
  [181] setprop 563 ............................. pAnimFrame = pAnimFrame + 1
  [184] pushint8 1 .............................. <1>
  [186] pusharglistnoret 1 ...................... <1>
  [188] extcall 13 .............................. return 1
  [190] ret
end

on createSprites me, tScreenLoc, tlocz, tProps, tDirection
  [  0] getprop 917 ............................. <pMemberID>
  [  3] pusharglist 0 ........................... <>
  [  5] extcall 566 ............................. <getUniqueID()>
  [  8] joinstr ................................. <pMemberID & getUniqueID()>
  [  9] pusharglist 1 ........................... <pMemberID & getUniqueID()>
  [ 11] extcall 565 ............................. <reserveSprite(pMemberID & getUniqueID())>
  [ 14] pusharglist 1 ........................... <reserveSprite(pMemberID & getUniqueID())>
  [ 16] extcall 424 ............................. <sprite(reserveSprite(pMemberID & getUniqueID()))>
  [ 19] setprop 46 .............................. pSprite = sprite(reserveSprite(pMemberID & getUniqueID()))
  [ 21] getprop 46 .............................. <pSprite>
  [ 23] getparam 2 .............................. <tlocz>
  [ 25] setobjprop 47 ........................... pSprite.locZ = tlocz
  [ 27] getparam 3 .............................. <tProps>
  [ 29] pushsymb 197 ............................ <#ink>
  [ 31] pusharglist 2 ........................... <tProps, #ink>
  [ 33] objcall 18 .............................. <tProps[#ink]>
  [ 35] pusharglist 0 ........................... <>
  [ 37] extcall 43 .............................. <VOID>
  [ 39] eq ...................................... <tProps[#ink] = VOID>
  [ 40] jmpifz [ 52] ............................ if tProps[#ink] = VOID then / else
  [ 43] getprop 46 .............................. <pSprite>
  [ 45] pushint8 8 .............................. <8>
  [ 47] setobjprop 197 .......................... pSprite.ink = 8
  [ 49] jmp [ 64]
  [ 52] getprop 46 .............................. <pSprite>
  [ 54] getparam 3 .............................. <tProps>
  [ 56] pushsymb 197 ............................ <#ink>
  [ 58] pusharglist 2 ........................... <tProps, #ink>
  [ 60] objcall 18 .............................. <tProps[#ink]>
  [ 62] setobjprop 197 .......................... pSprite.ink = tProps[#ink]
  [ 64] getparam 0 .............................. <me>
  [ 66] getparam 1 .............................. <tScreenLoc>
  [ 68] pusharglistnoret 2 ...................... <me, tScreenLoc>
  [ 70] objcall 89 .............................. me.setLocation(tScreenLoc)
  [ 72] getparam 0 .............................. <me>
  [ 74] pusharglistnoret 1 ...................... <me>
  [ 76] objcall 51 .............................. me.update()
  [ 78] pushint8 1 .............................. <1>
  [ 80] pusharglistnoret 1 ...................... <1>
  [ 82] extcall 13 .............................. return 1
  [ 84] ret
end

on removeSprites me
  [  0] getprop 46 .............................. <pSprite>
  [  2] pusharglist 1 ........................... <pSprite>
  [  4] extcall 85 .............................. <ilk(pSprite)>
  [  6] pushsymb 424 ............................ <#sprite>
  [  9] nteq .................................... <ilk(pSprite) <> #sprite>
  [ 10] jmpifz [ 18] ............................ if ilk(pSprite) <> #sprite then
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 13 .............................. return 0
  [ 18] getprop 46 .............................. <pSprite>
  [ 20] getobjprop 568 .......................... <pSprite.spriteNum>
  [ 23] pusharglistnoret 1 ...................... <pSprite.spriteNum>
  [ 25] extcall 567 ............................. releaseSprite(pSprite.spriteNum)
  [ 28] pusharglist 0 ........................... <>
  [ 30] extcall 43 .............................. <VOID>
  [ 32] setprop 46 .............................. pSprite = VOID
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 1 ...................... <1>
  [ 38] extcall 13 .............................. return 1
  [ 40] ret
end
