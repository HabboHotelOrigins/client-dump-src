property pSprite, pAreaWidth, pAreaHeight, pLocV, pOffV, pMuutos, pMuutos2, pMiddle, pMaksimi, pFromLeft, pDivPi

on define me, tSprite
  [  0] getparam 1 .............................. <tSprite>
  [  2] setprop 24 .............................. pSprite = tSprite
  [  4] pushint8 20 ............................. <20>
  [  6] setprop 56 .............................. pAreaWidth = 20
  [  8] pushint16 500 ........................... <500>
  [ 11] setprop 57 .............................. pAreaHeight = 500
  [ 13] pushint8 114 ............................ <114>
  [ 15] setprop 27 .............................. pFromLeft = 114
  [ 17] pusharglist 0 ........................... <>
  [ 19] extcall 39 .............................. <PI>
  [ 21] pushint16 180 ........................... <180>
  [ 24] div ..................................... <PI / 180>
  [ 25] setprop 58 .............................. pDivPi = PI / 180
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglistnoret 1 ...................... <me>
  [ 31] objcall 23 .............................. me.replace()
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglistnoret 1 ...................... <1>
  [ 37] extcall 4 ............................... return 1
  [ 39] ret
end

on replace me
  [  0] getprop 57 .............................. <pAreaHeight>
  [  2] pusharglist 1 ........................... <pAreaHeight>
  [  4] extcall 30 .............................. <random(pAreaHeight)>
  [  6] setprop 59 .............................. pLocV = random(pAreaHeight)
  [  8] pushint8 3 .............................. <3>
  [ 10] pusharglist 1 ........................... <3>
  [ 12] extcall 30 .............................. <random(3)>
  [ 14] setprop 60 .............................. pOffV = random(3)
  [ 16] getprop 24 .............................. <pSprite>
  [ 18] getobjprop 35 ........................... <pSprite.width>
  [ 20] getprop 56 .............................. <pAreaWidth>
  [ 22] pusharglist 1 ........................... <pAreaWidth>
  [ 24] extcall 30 .............................. <random(pAreaWidth)>
  [ 26] getprop 24 .............................. <pSprite>
  [ 28] getobjprop 35 ........................... <pSprite.width>
  [ 30] sub ..................................... <random(pAreaWidth) - pSprite.width>
  [ 31] add ..................................... <pSprite.width + (random(pAreaWidth) - pSprite.width)>
  [ 32] setprop 34 .............................. pMiddle = pSprite.width + (random(pAreaWidth) - pSprite.width)
  [ 34] pushint8 10 ............................. <10>
  [ 36] pusharglist 1 ........................... <10>
  [ 38] extcall 30 .............................. <random(10)>
  [ 40] setprop 32 .............................. pMuutos = random(10)
  [ 42] pushint8 20 ............................. <20>
  [ 44] pusharglist 1 ........................... <20>
  [ 46] extcall 30 .............................. <random(20)>
  [ 48] setprop 33 .............................. pMuutos2 = random(20)
  [ 50] getprop 56 .............................. <pAreaWidth>
  [ 52] getprop 56 .............................. <pAreaWidth>
  [ 54] getprop 34 .............................. <pMiddle>
  [ 56] sub ..................................... <pAreaWidth - pMiddle>
  [ 57] sub ..................................... <pAreaWidth - (pAreaWidth - pMiddle)>
  [ 58] pushint8 2 .............................. <2>
  [ 60] div ..................................... <(pAreaWidth - (pAreaWidth - pMiddle)) / 2>
  [ 61] setprop 36 .............................. pMaksimi = (pAreaWidth - (pAreaWidth - pMiddle)) / 2
  [ 63] ret
end

on update me
  [  0] getprop 32 .............................. <pMuutos>
  [  2] pushint8 7 .............................. <7>
  [  4] add ..................................... <pMuutos + 7>
  [  5] setprop 32 .............................. pMuutos = pMuutos + 7
  [  7] getprop 24 .............................. <pSprite>
  [  9] getprop 59 .............................. <pLocV>
  [ 11] setobjprop 37 ........................... pSprite.locV = pLocV
  [ 13] getprop 24 .............................. <pSprite>
  [ 15] getobjprop 37 ........................... <pSprite.locV>
  [ 17] pushint16 354 ........................... <354>
  [ 20] gt ...................................... <pSprite.locV > 354>
  [ 21] getprop 24 .............................. <pSprite>
  [ 23] getobjprop 37 ........................... <pSprite.locV>
  [ 25] pushint16 244 ........................... <244>
  [ 28] lt ...................................... <pSprite.locV < 244>
  [ 29] or ...................................... <(pSprite.locV > 354) or (pSprite.locV < 244)>
  [ 30] jmpifz [ 68] ............................ if (pSprite.locV > 354) or (pSprite.locV < 244) then / else
  [ 33] getprop 24 .............................. <pSprite>
  [ 35] getprop 27 .............................. <pFromLeft>
  [ 37] getprop 34 .............................. <pMiddle>
  [ 39] add ..................................... <pFromLeft + pMiddle>
  [ 40] getprop 36 .............................. <pMaksimi>
  [ 42] getprop 32 .............................. <pMuutos>
  [ 44] getprop 58 .............................. <pDivPi>
  [ 46] mul ..................................... <pMuutos * pDivPi>
  [ 47] pusharglist 1 ........................... <pMuutos * pDivPi>
  [ 49] extcall 38 .............................. <sin(pMuutos * pDivPi)>
  [ 51] mul ..................................... <pMaksimi * sin(pMuutos * pDivPi)>
  [ 52] getprop 33 .............................. <pMuutos2>
  [ 54] getprop 58 .............................. <pDivPi>
  [ 56] mul ..................................... <pMuutos2 * pDivPi>
  [ 57] pusharglist 1 ........................... <pMuutos2 * pDivPi>
  [ 59] extcall 38 .............................. <sin(pMuutos2 * pDivPi)>
  [ 61] mul ..................................... <pMaksimi * sin(pMuutos * pDivPi) * sin(pMuutos2 * pDivPi)>
  [ 62] sub ..................................... <pFromLeft + pMiddle - (pMaksimi * sin(pMuutos * pDivPi) * sin(pMuutos2 * pDivPi))>
  [ 63] setobjprop 40 ........................... pSprite.locH = pFromLeft + pMiddle - (pMaksimi * sin(pMuutos * pDivPi) * sin(pMuutos2 * pDivPi))
  [ 65] jmp [ 75]
  [ 68] getprop 24 .............................. <pSprite>
  [ 70] pushint8 20 ............................. <20>
  [ 72] inv ..................................... <-20>
  [ 73] setobjprop 40 ........................... pSprite.locH = -20
  [ 75] getprop 59 .............................. <pLocV>
  [ 77] getprop 60 .............................. <pOffV>
  [ 79] sub ..................................... <pLocV - pOffV>
  [ 80] setprop 59 .............................. pLocV = pLocV - pOffV
  [ 82] getprop 59 .............................. <pLocV>
  [ 84] getprop 24 .............................. <pSprite>
  [ 86] getobjprop 41 ........................... <pSprite.height>
  [ 88] inv ..................................... <-pSprite.height>
  [ 89] lteq .................................... <pLocV <= -pSprite.height>
  [ 90] jmpifz [ 99] ............................ if pLocV <= -pSprite.height then
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglistnoret 1 ...................... <me>
  [ 97] objcall 23 .............................. me.replace()
  [ 99] ret
end
