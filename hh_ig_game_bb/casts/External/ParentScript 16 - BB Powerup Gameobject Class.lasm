property pActiveEffects, pRoomObject, pTypeIndex, pLocation, pDump

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 25 .............................. pActiveEffects = []
  [  5] pushcons 0 .............................. <"bb2_pu_lghtbulb">
  [  7] pushcons 1 .............................. <"bb2_pu_spring">
  [  9] pushcons 2 .............................. <"bb2_pu_flashlght">
  [ 11] pushcons 3 .............................. <"bb2_pu_cannon">
  [ 13] pushcons 4 .............................. <"bb2_pu_pinbox">
  [ 15] pushcons 5 .............................. <"bb2_pu_harlequin">
  [ 17] pushcons 6 .............................. <"bb2_pu_bomb">
  [ 19] pushcons 7 .............................. <"bb2_pu_drill">
  [ 21] pushcons 8 .............................. <"bb2_pu_qstnmark">
  [ 23] pusharglist 9 ........................... <["bb2_pu_lghtbulb", "bb2_pu_spring", "bb2_pu_flashlght", "bb2_pu_cannon", "bb2_pu_pinbox", "bb2_pu_harlequin", "bb2_pu_bomb", "bb2_pu_drill", "bb2_pu_qstnmark"]>
  [ 25] pushlist ................................ <["bb2_pu_lghtbulb", "bb2_pu_spring", "bb2_pu_flashlght", "bb2_pu_cannon", "bb2_pu_pinbox", "bb2_pu_harlequin", "bb2_pu_bomb", "bb2_pu_drill", "bb2_pu_qstnmark"]>
  [ 26] setprop 373 ............................. pTypeIndex = ["bb2_pu_lghtbulb", "bb2_pu_spring", "bb2_pu_flashlght", "bb2_pu_cannon", "bb2_pu_pinbox", "bb2_pu_harlequin", "bb2_pu_bomb", "bb2_pu_drill", "bb2_pu_qstnmark"]
  [ 29] pushint8 1 .............................. <1>
  [ 31] pusharglistnoret 1 ...................... <1>
  [ 33] extcall 28 .............................. return 1
  [ 35] ret
end

on deconstruct me
  [  0] getprop 25 .............................. <pActiveEffects>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 30
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 39] ............................ repeat with tEffect in pActiveEffects
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 31
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tEffect>
  [ 30] pusharglistnoret 1 ...................... <tEffect>
  [ 32] objcall 1 ............................... tEffect.deconstruct()
  [ 34] pushint8 1
  [ 36] add
  [ 37] endrepeat [ 10]
  [ 39] pop 3
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setprop 25 .............................. pActiveEffects = []
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 1 ...................... <me>
  [ 50] objcall 315 ............................. me.removeRoomObject()
  [ 53] pushint8 1 .............................. <1>
  [ 55] pusharglistnoret 1 ...................... <1>
  [ 57] extcall 28 .............................. return 1
  [ 59] ret
end

on define me, tGameObject
  [  0] getparam 1 .............................. <tGameObject>
  [  2] pusharglist 1 ........................... <tGameObject>
  [  4] objcall 74 .............................. <tGameObject.duplicate()>
  [  6] setparam 1 .............................. tGameObject = tGameObject.duplicate()
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tGameObject>
  [ 12] pusharglistnoret 2 ...................... <me, tGameObject>
  [ 14] objcall 214 ............................. me.setGameObjectProperty(tGameObject)
  [ 16] getparam 1 .............................. <tGameObject>
  [ 18] pushsymb 206 ............................ <#powerupType>
  [ 20] pusharglist 2 ........................... <tGameObject, #powerupType>
  [ 22] objcall 31 .............................. <tGameObject[#powerupType]>
  [ 24] pushint8 1 .............................. <1>
  [ 26] lt ...................................... <tGameObject[#powerupType] < 1>
  [ 27] jmpifz [ 44] ............................ if tGameObject[#powerupType] < 1 then
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 9 .............................. <"Invalid powerup type!">
  [ 34] pushsymb 135 ............................ <#define>
  [ 36] pusharglist 3 ........................... <me, "Invalid powerup type!", #define>
  [ 38] extcall 173 ............................. <error(me, "Invalid powerup type!", #define)>
  [ 40] pusharglistnoret 1 ...................... <error(me, "Invalid powerup type!", #define)>
  [ 42] extcall 28 .............................. return error(me, "Invalid powerup type!", #define)
  [ 44] getparam 1 .............................. <tGameObject>
  [ 46] pushsymb 206 ............................ <#powerupType>
  [ 48] pusharglist 2 ........................... <tGameObject, #powerupType>
  [ 50] objcall 31 .............................. <tGameObject[#powerupType]>
  [ 52] getprop 373 ............................. <pTypeIndex>
  [ 55] getobjprop 30 ........................... <pTypeIndex.count>
  [ 57] gt ...................................... <tGameObject[#powerupType] > pTypeIndex.count>
  [ 58] jmpifz [ 75] ............................ if tGameObject[#powerupType] > pTypeIndex.count then
  [ 61] getparam 0 .............................. <me>
  [ 63] pushcons 10 ............................. <"Undefined powerup type, see pTypeIndex!">
  [ 65] pushsymb 135 ............................ <#define>
  [ 67] pusharglist 3 ........................... <me, "Undefined powerup type, see pTypeIndex!", #define>
  [ 69] extcall 173 ............................. <error(me, "Undefined powerup type, see pTypeIndex!", #define)>
  [ 71] pusharglistnoret 1 ...................... <error(me, "Undefined powerup type, see pTypeIndex!", #define)>
  [ 73] extcall 28 .............................. return error(me, "Undefined powerup type, see pTypeIndex!", #define)
  [ 75] getparam 0 .............................. <me>
  [ 77] getparam 1 .............................. <tGameObject>
  [ 79] pushsymb 60 ............................. <#x>
  [ 81] pusharglist 2 ........................... <tGameObject, #x>
  [ 83] objcall 31 .............................. <tGameObject[#x]>
  [ 85] getparam 1 .............................. <tGameObject>
  [ 87] pushsymb 61 ............................. <#y>
  [ 89] pusharglist 2 ........................... <tGameObject, #y>
  [ 91] objcall 31 .............................. <tGameObject[#y]>
  [ 93] getparam 1 .............................. <tGameObject>
  [ 95] pushsymb 62 ............................. <#z>
  [ 97] pusharglist 2 ........................... <tGameObject, #z>
  [ 99] objcall 31 .............................. <tGameObject[#z]>
  [101] pusharglistnoret 4 ...................... <me, tGameObject[#x], tGameObject[#y], tGameObject[#z]>
  [103] objcall 169 ............................. me.setLocation(tGameObject[#x], tGameObject[#y], tGameObject[#z])
  [105] getprop 373 ............................. <pTypeIndex>
  [108] getparam 1 .............................. <tGameObject>
  [110] pushsymb 206 ............................ <#powerupType>
  [112] pusharglist 2 ........................... <tGameObject, #powerupType>
  [114] objcall 31 .............................. <tGameObject[#powerupType]>
  [116] pusharglist 2 ........................... <pTypeIndex, tGameObject[#powerupType]>
  [118] objcall 31 .............................. <pTypeIndex[tGameObject[#powerupType]]>
  [120] setlocal 0 .............................. tStrType = pTypeIndex[tGameObject[#powerupType]]
  [122] getparam 1 .............................. <tGameObject>
  [124] pushsymb 374 ............................ <#class>
  [127] getlocal 0 .............................. <tStrType>
  [129] pusharglistnoret 3 ...................... <tGameObject, #class, tStrType>
  [131] objcall 352 ............................. tGameObject.addProp(#class, tStrType)
  [134] getparam 0 .............................. <me>
  [136] pusharglist 1 ........................... <me>
  [138] objcall 201 ............................. <me.getGameSystem()>
  [140] pusharglist 1 ........................... <me.getGameSystem()>
  [142] objcall 245 ............................. <me.getGameSystem().getID()>
  [144] setlocal 1 .............................. tSystemId = me.getGameSystem().getID()
  [146] getlocal 1 .............................. <tSystemId>
  [148] pushcons 11 ............................. <".roomobject.">
  [150] joinstr ................................. <tSystemId & ".roomobject.">
  [151] getparam 1 .............................. <tGameObject>
  [153] pushsymb 211 ............................ <#str_type>
  [155] pusharglist 2 ........................... <tGameObject, #str_type>
  [157] objcall 31 .............................. <tGameObject[#str_type]>
  [159] joinstr ................................. <tSystemId & ".roomobject." & tGameObject[#str_type]>
  [160] pushcons 12 ............................. <".class">
  [162] joinstr ................................. <tSystemId & ".roomobject." & tGameObject[#str_type] & ".class">
  [163] setlocal 2 .............................. tClassID = tSystemId & ".roomobject." & tGameObject[#str_type] & ".class"
  [165] getparam 1 .............................. <tGameObject>
  [167] pushsymb 375 ............................ <#classID>
  [170] getlocal 2 .............................. <tClassID>
  [172] pusharglistnoret 3 ...................... <tGameObject, #classID, tClassID>
  [174] objcall 352 ............................. tGameObject.addProp(#classID, tClassID)
  [177] getparam 0 .............................. <me>
  [179] getparam 1 .............................. <tGameObject>
  [181] pusharglistnoret 2 ...................... <me, tGameObject>
  [183] objcall 314 ............................. me.createRoomObject(tGameObject)
  [186] pushint8 1 .............................. <1>
  [188] pusharglistnoret 1 ...................... <1>
  [190] extcall 28 .............................. return 1
  [192] ret
end

on update me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 25 .............................. <pActiveEffects>
  [  8] getobjprop 30 ........................... <pActiveEffects.count>
  [ 10] lteq
  [ 11] jmpifz [ 70] ............................ repeat with i = 1 to pActiveEffects.count
  [ 14] getprop 25 .............................. <pActiveEffects>
  [ 16] getlocal 0 .............................. <i>
  [ 18] pusharglist 2 ........................... <pActiveEffects, i>
  [ 20] objcall 31 .............................. <pActiveEffects[i]>
  [ 22] setlocal 1 .............................. tEffect = pActiveEffects[i]
  [ 24] getlocal 1 .............................. <tEffect>
  [ 26] getobjprop 85 ........................... <tEffect.pActive>
  [ 28] jmpifz [ 40] ............................ if tEffect.pActive then
  [ 31] getlocal 1 .............................. <tEffect>
  [ 33] pusharglistnoret 1 ...................... <tEffect>
  [ 35] objcall 6 ............................... tEffect.update()
  [ 37] jmp [ 61] ............................... next repeat
  [ 40] getlocal 1 .............................. <tEffect>
  [ 42] pusharglistnoret 1 ...................... <tEffect>
  [ 44] objcall 1 ............................... tEffect.deconstruct()
  [ 46] getprop 25 .............................. <pActiveEffects>
  [ 48] getlocal 0 .............................. <i>
  [ 50] pusharglistnoret 2 ...................... <pActiveEffects, i>
  [ 52] objcall 86 .............................. pActiveEffects.deleteAt(i)
  [ 54] getparam 0 .............................. <me>
  [ 56] pushint8 1 .............................. <1>
  [ 58] setobjprop 379 .......................... me.pKilled = 1
  [ 61] pushint8 1
  [ 63] getlocal 0
  [ 65] add
  [ 66] setlocal 0
  [ 68] endrepeat [  4]
  [ 70] pushint8 1 .............................. <1>
  [ 72] pusharglistnoret 1 ...................... <1>
  [ 74] extcall 28 .............................. return 1
  [ 76] ret
end

on executeGameObjectEvent me, tEvent, tdata
  [  0] getprop 337 ............................. <pDump>
  [  3] jmpifz [ 30] ............................ if pDump then
  [  6] pushcons 13 ............................. <"* executeGameObjectEvent on">
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 338 ............................. <me.getObjectId()>
  [ 15] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId()>
  [ 16] pushcons 14 ............................. <":">
  [ 18] joinstr ................................. <"* executeGameObjectEvent on" && me.getObjectId() & ":">
  [ 19] getparam 1 .............................. <tEvent>
  [ 21] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent>
  [ 22] getparam 2 .............................. <tdata>
  [ 24] joinpadstr .............................. <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata>
  [ 25] pusharglistnoret 1 ...................... <"* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata>
  [ 27] extcall 339 ............................. put "* executeGameObjectEvent on" && me.getObjectId() & ":" && tEvent && tdata
  [ 30] getparam 1 .............................. <tEvent>
  [ 32] peek 0 .................................. case tEvent of
  [ 34] pushsymb 203 ............................ <#pickup_powerup>
  [ 36] eq
  [ 37] jmpifz [ 58] ............................ (case) #pickup_powerup:
  [ 40] pop 1
  [ 42] getparam 0 .............................. <me>
  [ 44] pushsymb 380 ............................ <#hide_roomobject>
  [ 47] pusharglist 2 ........................... <me, #hide_roomobject>
  [ 49] objcall 2 ............................... <me.roomObjectAction(#hide_roomobject)>
  [ 51] pusharglistnoret 1 ...................... <me.roomObjectAction(#hide_roomobject)>
  [ 53] extcall 28 .............................. return me.roomObjectAction(#hide_roomobject)
  [ 55] jmp [ 89]
  [ 58] peek 0
  [ 60] pushsymb 207 ............................ <#gameend>
  [ 62] eq
  [ 63] jmpifz [ 76] ............................ (case) #gameend:
  [ 66] getparam 0 .............................. <me>
  [ 68] pusharglistnoret 1 ...................... <me>
  [ 70] objcall 315 ............................. me.removeRoomObject()
  [ 73] jmp [ 89] ............................... (case) otherwise:
  [ 76] pushcons 15 ............................. <"* Gameobject: UNDEFINED EVENT:">
  [ 78] getparam 1 .............................. <tEvent>
  [ 80] joinpadstr .............................. <"* Gameobject: UNDEFINED EVENT:" && tEvent>
  [ 81] getparam 2 .............................. <tdata>
  [ 83] joinpadstr .............................. <"* Gameobject: UNDEFINED EVENT:" && tEvent && tdata>
  [ 84] pusharglistnoret 1 ...................... <"* Gameobject: UNDEFINED EVENT:" && tEvent && tdata>
  [ 86] extcall 339 ............................. put "* Gameobject: UNDEFINED EVENT:" && tEvent && tdata
  [ 89] pop 1 ................................... end case
  [ 91] ret
end

on createRoomObject me, tDataStruct
  [  0] pushsymb 125 ............................ <#temp>
  [  2] pushcons 16 ............................. <"bb_gamesystem.roomobject.powerup.wrapper.class">
  [  4] pusharglist 1 ........................... <"bb_gamesystem.roomobject.powerup.wrapper.class">
  [  6] extcall 344 ............................. <getClassVariable("bb_gamesystem.roomobject.powerup.wrapper.class")>
  [  9] pusharglist 2 ........................... <#temp, getClassVariable("bb_gamesystem.roomobject.powerup.wrapper.class")>
  [ 11] extcall 124 ............................. <createObject(#temp, getClassVariable("bb_gamesystem.roomobject.powerup.wrapper.class"))>
  [ 13] setprop 343 ............................. pRoomObject = createObject(#temp, getClassVariable("bb_gamesystem.roomobject.powerup.wrapper.class"))
  [ 16] getprop 343 ............................. <pRoomObject>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <pRoomObject = 0>
  [ 21] jmpifz [ 39] ............................ if pRoomObject = 0 then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 17 ............................. <"Cannot create roomobject wrapper!">
  [ 28] pushsymb 314 ............................ <#createRoomObject>
  [ 31] pusharglist 3 ........................... <me, "Cannot create roomobject wrapper!", #createRoomObject>
  [ 33] extcall 173 ............................. <error(me, "Cannot create roomobject wrapper!", #createRoomObject)>
  [ 35] pusharglistnoret 1 ...................... <error(me, "Cannot create roomobject wrapper!", #createRoomObject)>
  [ 37] extcall 28 .............................. return error(me, "Cannot create roomobject wrapper!", #createRoomObject)
  [ 39] getprop 343 ............................. <pRoomObject>
  [ 42] getparam 1 .............................. <tDataStruct>
  [ 44] pusharglist 2 ........................... <pRoomObject, tDataStruct>
  [ 46] objcall 135 ............................. <pRoomObject.define(tDataStruct)>
  [ 48] pusharglistnoret 1 ...................... <pRoomObject.define(tDataStruct)>
  [ 50] extcall 28 .............................. return pRoomObject.define(tDataStruct)
  [ 52] ret
end

on removeRoomObject me
  [  0] getprop 343 ............................. <pRoomObject>
  [  3] pusharglist 1 ........................... <pRoomObject>
  [  5] extcall 26 .............................. <objectp(pRoomObject)>
  [  7] not ..................................... <not objectp(pRoomObject)>
  [  8] jmpifz [ 17] ............................ if not objectp(pRoomObject) then
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 28 .............................. return 1
  [ 17] getprop 343 ............................. <pRoomObject>
  [ 20] pusharglistnoret 1 ...................... <pRoomObject>
  [ 22] objcall 1 ............................... pRoomObject.deconstruct()
  [ 24] pusharglist 0 ........................... <>
  [ 26] extcall 116 ............................. <VOID>
  [ 28] setprop 343 ............................. pRoomObject = VOID
  [ 31] pushint8 1 .............................. <1>
  [ 33] pusharglistnoret 1 ...................... <1>
  [ 35] extcall 28 .............................. return 1
  [ 37] ret
end

on roomObjectAction me, tAction, tdata
  [  0] getprop 343 ............................. <pRoomObject>
  [  3] pusharglist 1 ........................... <pRoomObject>
  [  5] extcall 26 .............................. <objectp(pRoomObject)>
  [  7] not ..................................... <not objectp(pRoomObject)>
  [  8] jmpifz [ 16] ............................ if not objectp(pRoomObject) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 28 .............................. return 0
  [ 16] getprop 343 ............................. <pRoomObject>
  [ 19] getparam 1 .............................. <tAction>
  [ 21] getparam 2 .............................. <tdata>
  [ 23] pusharglist 3 ........................... <pRoomObject, tAction, tdata>
  [ 25] objcall 2 ............................... <pRoomObject.roomObjectAction(tAction, tdata)>
  [ 27] pusharglistnoret 1 ...................... <pRoomObject.roomObjectAction(tAction, tdata)>
  [ 29] extcall 28 .............................. return pRoomObject.roomObjectAction(tAction, tdata)
  [ 31] ret
end
