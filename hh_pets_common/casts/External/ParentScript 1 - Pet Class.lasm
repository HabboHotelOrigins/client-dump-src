property pName, pClass, pCustom, pIDPrefix, pBuffer, pSprite, pMatteSpr, pMember, pShadowSpr, pShadowFix, pDefShadowMem, pPartList, pPartIndex, pFlipList, pUpdateRect, pDirection, pLocX, pLocY, pLocH, pLocFix, pXFactor, pYFactor, pHFactor, pScreenLoc, pStartLScreen, pDestLScreen, pRestingHeight, pAnimCounter, pMoveStart, pMoveTime, pEyesClosed, pSync, pChanges, pAlphaColor, pCanvasSize, pMainAction, pWaving, pMoving, pTalking, pSniffing, pGeometry, pInfoStruct, pCorrectLocZ, pPartClass, pOffsetList, pOffsetListSmall, pMemberNamePrefix, pPetDefinitions, pRace, pWebID

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 56 .............................. pName = EMPTY
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 57 .............................. pIDPrefix = EMPTY
  [  8] pusharglist 0 ........................... <[]>
  [ 10] pushlist ................................ <[]>
  [ 11] setprop 58 .............................. pPartList = []
  [ 13] pusharglist 0 ........................... <[:]>
  [ 15] pushproplist ............................ <[:]>
  [ 16] setprop 59 .............................. pPartIndex = [:]
  [ 18] pushzero ................................ <0>
  [ 19] pushint8 1 .............................. <1>
  [ 21] pushint8 2 .............................. <2>
  [ 23] pushint8 3 .............................. <3>
  [ 25] pushint8 2 .............................. <2>
  [ 27] pushint8 1 .............................. <1>
  [ 29] pushzero ................................ <0>
  [ 30] pushint8 7 .............................. <7>
  [ 32] pusharglist 8 ........................... <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 34] pushlist ................................ <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 35] setprop 60 .............................. pFlipList = [0, 1, 2, 3, 2, 1, 0, 7]
  [ 37] pushzero ................................ <0>
  [ 38] pushint8 8 .............................. <8>
  [ 40] inv ..................................... <-8>
  [ 41] pusharglist 2 ........................... <0, -8>
  [ 43] extcall 62 .............................. <point(0, -8)>
  [ 45] setprop 61 .............................. pLocFix = point(0, -8)
  [ 47] pushzero ................................ <0>
  [ 48] pushzero ................................ <0>
  [ 49] pushzero ................................ <0>
  [ 50] pushzero ................................ <0>
  [ 51] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 53] extcall 64 .............................. <rect(0, 0, 0, 0)>
  [ 55] setprop 63 .............................. pUpdateRect = rect(0, 0, 0, 0)
  [ 57] pushzero ................................ <0>
  [ 58] pushzero ................................ <0>
  [ 59] pushzero ................................ <0>
  [ 60] pusharglist 3 ........................... <[0, 0, 0]>
  [ 62] pushlist ................................ <[0, 0, 0]>
  [ 63] setprop 65 .............................. pScreenLoc = [0, 0, 0]
  [ 65] pushzero ................................ <0>
  [ 66] pushzero ................................ <0>
  [ 67] pushzero ................................ <0>
  [ 68] pusharglist 3 ........................... <[0, 0, 0]>
  [ 70] pushlist ................................ <[0, 0, 0]>
  [ 71] setprop 66 .............................. pStartLScreen = [0, 0, 0]
  [ 73] pushzero ................................ <0>
  [ 74] pushzero ................................ <0>
  [ 75] pushzero ................................ <0>
  [ 76] pusharglist 3 ........................... <[0, 0, 0]>
  [ 78] pushlist ................................ <[0, 0, 0]>
  [ 79] setprop 67 .............................. pDestLScreen = [0, 0, 0]
  [ 81] pushfloat32 0.0 ......................... <0.0>
  [ 86] setprop 68 .............................. pRestingHeight = 0.0
  [ 88] pushzero ................................ <0>
  [ 89] setprop 69 .............................. pAnimCounter = 0
  [ 91] pushzero ................................ <0>
  [ 92] setprop 70 .............................. pMoveStart = 0
  [ 94] pushint16 500 ........................... <500>
  [ 97] setprop 71 .............................. pMoveTime = 500
  [ 99] pushzero ................................ <0>
  [100] setprop 72 .............................. pEyesClosed = 0
  [102] pushint8 1 .............................. <1>
  [104] setprop 73 .............................. pSync = 1
  [106] pushint8 1 .............................. <1>
  [108] setprop 74 .............................. pChanges = 1
  [110] pushcons 1 .............................. <"std">
  [112] setprop 75 .............................. pMainAction = "std"
  [114] pushzero ................................ <0>
  [115] setprop 76 .............................. pWaving = 0
  [117] pushzero ................................ <0>
  [118] setprop 77 .............................. pMoving = 0
  [120] pushzero ................................ <0>
  [121] setprop 78 .............................. pSniffing = 0
  [123] pushzero ................................ <0>
  [124] setprop 79 .............................. pTalking = 0
  [126] pushint16 255 ........................... <255>
  [129] pushint16 255 ........................... <255>
  [132] pushint16 255 ........................... <255>
  [135] pusharglist 3 ........................... <255, 255, 255>
  [137] extcall 81 .............................. <rgb(255, 255, 255)>
  [139] setprop 80 .............................. pAlphaColor = rgb(255, 255, 255)
  [141] pushint8 1 .............................. <1>
  [143] setprop 73 .............................. pSync = 1
  [145] pushzero ................................ <0>
  [146] pusharglist 1 ........................... <0>
  [148] extcall 83 .............................. <member(0)>
  [150] setprop 82 .............................. pDefShadowMem = member(0)
  [152] pusharglist 0 ........................... <[:]>
  [154] pushproplist ............................ <[:]>
  [155] setprop 84 .............................. pInfoStruct = [:]
  [157] pushcons 2 .............................. <"-1">
  [159] setprop 334 ............................. pWebID = "-1"
  [162] pushsymb 87 ............................. <#room>
  [164] pusharglist 1 ........................... <#room>
  [166] extcall 86 .............................. <getThread(#room)>
  [168] pusharglist 1 ........................... <getThread(#room)>
  [170] objcall 88 .............................. <getThread(#room).getInterface()>
  [172] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [174] objcall 89 .............................. <getThread(#room).getInterface().getGeometry()>
  [176] setprop 85 .............................. pGeometry = getThread(#room).getInterface().getGeometry()
  [178] getprop 85 .............................. <pGeometry>
  [180] getobjprop 90 ........................... <pGeometry.pXFactor>
  [182] setprop 90 .............................. pXFactor = pGeometry.pXFactor
  [184] getprop 85 .............................. <pGeometry>
  [186] getobjprop 91 ........................... <pGeometry.pYFactor>
  [188] setprop 91 .............................. pYFactor = pGeometry.pYFactor
  [190] getprop 85 .............................. <pGeometry>
  [192] getobjprop 92 ........................... <pGeometry.pHFactor>
  [194] setprop 92 .............................. pHFactor = pGeometry.pHFactor
  [196] pusharglist 0 ........................... <[:]>
  [198] pushproplist ............................ <[:]>
  [199] setprop 93 .............................. pOffsetList = [:]
  [201] pusharglist 0 ........................... <[:]>
  [203] pushproplist ............................ <[:]>
  [204] setprop 94 .............................. pOffsetListSmall = [:]
  [206] pushcons 3 .............................. <"pet.definitions">
  [208] pusharglist 1 ........................... <"pet.definitions">
  [210] extcall 95 .............................. <getmemnum("pet.definitions")>
  [212] pusharglist 1 ........................... <getmemnum("pet.definitions")>
  [214] extcall 83 .............................. <member(getmemnum("pet.definitions"))>
  [216] getobjprop 96 ........................... <member(getmemnum("pet.definitions")).text>
  [218] setlocal 0 .............................. tPetDEfText = member(getmemnum("pet.definitions")).text
  [220] getlocal 0 .............................. <tPetDEfText>
  [222] pushcons 4 .............................. <RETURN>
  [224] pushcons 0 .............................. <EMPTY>
  [226] pusharglist 3 ........................... <tPetDEfText, RETURN, EMPTY>
  [228] extcall 97 .............................. <replaceChunks(tPetDEfText, RETURN, EMPTY)>
  [230] setlocal 0 .............................. tPetDEfText = replaceChunks(tPetDEfText, RETURN, EMPTY)
  [232] getlocal 0 .............................. <tPetDEfText>
  [234] pusharglist 1 ........................... <tPetDEfText>
  [236] extcall 99 .............................. <value(tPetDEfText)>
  [238] setprop 98 .............................. pPetDefinitions = value(tPetDEfText)
  [240] getprop 98 .............................. <pPetDefinitions>
  [242] pusharglist 1 ........................... <pPetDefinitions>
  [244] extcall 100 ............................. <ilk(pPetDefinitions)>
  [246] pushsymb 101 ............................ <#propList>
  [248] nteq .................................... <ilk(pPetDefinitions) <> #propList>
  [249] jmpifz [276] ............................ if ilk(pPetDefinitions) <> #propList then
  [252] pusharglist 0 ........................... <[:]>
  [254] pushproplist ............................ <[:]>
  [255] setprop 98 .............................. pPetDefinitions = [:]
  [257] getparam 0 .............................. <me>
  [259] pushcons 5 .............................. <"Pet definitions has invalid data!">
  [261] getparam 0 .............................. <me>
  [263] pusharglist 1 ........................... <me>
  [265] objcall 103 ............................. <me.getID()>
  [267] pushsymb 2 .............................. <#construct>
  [269] pushsymb 325 ............................ <#major>
  [272] pusharglistnoret 5 ...................... <me, "Pet definitions has invalid data!", me.getID(), #construct, #major>
  [274] extcall 102 ............................. error(me, "Pet definitions has invalid data!", me.getID(), #construct, #major)
  [276] getprop 90 .............................. <pXFactor>
  [278] pushint8 32 ............................. <32>
  [280] eq ...................................... <pXFactor = 32>
  [281] jmpifz [295] ............................ if pXFactor = 32 then / else
  [284] pushcons 6 .............................. <"s_p_">
  [286] setprop 104 ............................. pMemberNamePrefix = "s_p_"
  [288] pushint8 1 .............................. <1>
  [290] setprop 105 ............................. pCorrectLocZ = 1
  [292] jmp [303]
  [295] pushcons 7 .............................. <"p_">
  [297] setprop 104 ............................. pMemberNamePrefix = "p_"
  [299] pushint8 1 .............................. <1>
  [301] setprop 105 ............................. pCorrectLocZ = 1
  [303] pushsymb 87 ............................. <#room>
  [305] pusharglist 1 ........................... <#room>
  [307] extcall 86 .............................. <getThread(#room)>
  [309] pusharglist 1 ........................... <getThread(#room)>
  [311] objcall 107 ............................. <getThread(#room).getComponent()>
  [313] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [315] objcall 108 ............................. <getThread(#room).getComponent().getClassContainer()>
  [317] pushcons 8 .............................. <"petpart">
  [319] pusharglist 2 ........................... <getThread(#room).getComponent().getClassContainer(), "petpart">
  [321] objcall 109 ............................. <getThread(#room).getComponent().getClassContainer().GET("petpart")>
  [323] pusharglist 1 ........................... <getThread(#room).getComponent().getClassContainer().GET("petpart")>
  [325] extcall 99 .............................. <value(getThread(#room).getComponent().getClassContainer().GET("petpart"))>
  [327] setprop 106 ............................. pPartClass = value(getThread(#room).getComponent().getClassContainer().GET("petpart"))
  [329] pushint8 1 .............................. <1>
  [331] pusharglistnoret 1 ...................... <1>
  [333] extcall 110 ............................. return 1
  [335] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 112 ............................. <VOID>
  [  4] setprop 85 .............................. pGeometry = VOID
  [  6] pusharglist 0 ........................... <[]>
  [  8] pushlist ................................ <[]>
  [  9] setprop 58 .............................. pPartList = []
  [ 11] pusharglist 0 ........................... <[:]>
  [ 13] pushproplist ............................ <[:]>
  [ 14] setprop 84 .............................. pInfoStruct = [:]
  [ 16] getprop 113 ............................. <pSprite>
  [ 18] getobjprop 100 .......................... <pSprite.ilk>
  [ 20] pushsymb 114 ............................ <#sprite>
  [ 22] eq ...................................... <pSprite.ilk = #sprite>
  [ 23] jmpifz [ 34] ............................ if pSprite.ilk = #sprite then
  [ 26] getprop 113 ............................. <pSprite>
  [ 28] getobjprop 116 .......................... <pSprite.spriteNum>
  [ 30] pusharglistnoret 1 ...................... <pSprite.spriteNum>
  [ 32] extcall 115 ............................. releaseSprite(pSprite.spriteNum)
  [ 34] getprop 117 ............................. <pMatteSpr>
  [ 36] getobjprop 100 .......................... <pMatteSpr.ilk>
  [ 38] pushsymb 114 ............................ <#sprite>
  [ 40] eq ...................................... <pMatteSpr.ilk = #sprite>
  [ 41] jmpifz [ 52] ............................ if pMatteSpr.ilk = #sprite then
  [ 44] getprop 117 ............................. <pMatteSpr>
  [ 46] getobjprop 116 .......................... <pMatteSpr.spriteNum>
  [ 48] pusharglistnoret 1 ...................... <pMatteSpr.spriteNum>
  [ 50] extcall 115 ............................. releaseSprite(pMatteSpr.spriteNum)
  [ 52] getprop 118 ............................. <pShadowSpr>
  [ 54] getobjprop 100 .......................... <pShadowSpr.ilk>
  [ 56] pushsymb 114 ............................ <#sprite>
  [ 58] eq ...................................... <pShadowSpr.ilk = #sprite>
  [ 59] jmpifz [ 70] ............................ if pShadowSpr.ilk = #sprite then
  [ 62] getprop 118 ............................. <pShadowSpr>
  [ 64] getobjprop 116 .......................... <pShadowSpr.spriteNum>
  [ 66] pusharglistnoret 1 ...................... <pShadowSpr.spriteNum>
  [ 68] extcall 115 ............................. releaseSprite(pShadowSpr.spriteNum)
  [ 70] getparam 0 .............................. <me>
  [ 72] pusharglist 1 ........................... <me>
  [ 74] objcall 38 .............................. <me.getCanvasName()>
  [ 76] pusharglist 1 ........................... <me.getCanvasName()>
  [ 78] extcall 119 ............................. <memberExists(me.getCanvasName())>
  [ 80] jmpifz [ 93] ............................ if memberExists(me.getCanvasName()) then
  [ 83] getparam 0 .............................. <me>
  [ 85] pusharglist 1 ........................... <me>
  [ 87] objcall 38 .............................. <me.getCanvasName()>
  [ 89] pusharglistnoret 1 ...................... <me.getCanvasName()>
  [ 91] extcall 120 ............................. removeMember(me.getCanvasName())
  [ 93] pusharglist 0 ........................... <>
  [ 95] extcall 112 ............................. <VOID>
  [ 97] setprop 118 ............................. pShadowSpr = VOID
  [ 99] pusharglist 0 ........................... <>
  [101] extcall 112 ............................. <VOID>
  [103] setprop 117 ............................. pMatteSpr = VOID
  [105] pusharglist 0 ........................... <>
  [107] extcall 112 ............................. <VOID>
  [109] setprop 113 ............................. pSprite = VOID
  [111] pushint8 1 .............................. <1>
  [113] pusharglistnoret 1 ...................... <1>
  [115] extcall 110 ............................. return 1
  [117] ret
end

on define me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pusharglistnoret 2 ...................... <me, tdata>
  [  6] objcall 5 ............................... me.setup(tdata)
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 38 .............................. <me.getCanvasName()>
  [ 14] pusharglist 1 ........................... <me.getCanvasName()>
  [ 16] extcall 119 ............................. <memberExists(me.getCanvasName())>
  [ 18] not ..................................... <not memberExists(me.getCanvasName())>
  [ 19] jmpifz [ 34] ............................ if not memberExists(me.getCanvasName()) then
  [ 22] getparam 0 .............................. <me>
  [ 24] pusharglist 1 ........................... <me>
  [ 26] objcall 38 .............................. <me.getCanvasName()>
  [ 28] pushsymb 122 ............................ <#bitmap>
  [ 30] pusharglistnoret 2 ...................... <me.getCanvasName(), #bitmap>
  [ 32] extcall 121 ............................. createMember(me.getCanvasName(), #bitmap)
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglist 1 ........................... <me>
  [ 38] objcall 38 .............................. <me.getCanvasName()>
  [ 40] pusharglist 1 ........................... <me.getCanvasName()>
  [ 42] extcall 95 .............................. <getmemnum(me.getCanvasName())>
  [ 44] pusharglist 1 ........................... <getmemnum(me.getCanvasName())>
  [ 46] extcall 83 .............................. <member(getmemnum(me.getCanvasName()))>
  [ 48] setprop 123 ............................. pMember = member(getmemnum(me.getCanvasName()))
  [ 50] getprop 123 ............................. <pMember>
  [ 52] getprop 125 ............................. <pCanvasSize>
  [ 54] pushint8 1 .............................. <1>
  [ 56] pusharglist 2 ........................... <pCanvasSize, 1>
  [ 58] objcall 126 ............................. <pCanvasSize[1]>
  [ 60] getprop 125 ............................. <pCanvasSize>
  [ 62] pushint8 2 .............................. <2>
  [ 64] pusharglist 2 ........................... <pCanvasSize, 2>
  [ 66] objcall 126 ............................. <pCanvasSize[2]>
  [ 68] getprop 125 ............................. <pCanvasSize>
  [ 70] pushint8 3 .............................. <3>
  [ 72] pusharglist 2 ........................... <pCanvasSize, 3>
  [ 74] objcall 126 ............................. <pCanvasSize[3]>
  [ 76] pusharglist 3 ........................... <pCanvasSize[1], pCanvasSize[2], pCanvasSize[3]>
  [ 78] extcall 124 ............................. <image(pCanvasSize[1], pCanvasSize[2], pCanvasSize[3])>
  [ 80] setobjprop 124 .......................... pMember.image = image(pCanvasSize[1], pCanvasSize[2], pCanvasSize[3])
  [ 82] getprop 123 ............................. <pMember>
  [ 84] pushzero ................................ <0>
  [ 85] getprop 123 ............................. <pMember>
  [ 87] getchainedprop 124 ...................... <pMember.image>
  [ 89] getobjprop 127 .......................... <pMember.image.height>
  [ 91] getprop 125 ............................. <pCanvasSize>
  [ 93] pushint8 4 .............................. <4>
  [ 95] pusharglist 2 ........................... <pCanvasSize, 4>
  [ 97] objcall 126 ............................. <pCanvasSize[4]>
  [ 99] add ..................................... <pMember.image.height + pCanvasSize[4]>
  [100] pusharglist 2 ........................... <0, pMember.image.height + pCanvasSize[4]>
  [102] extcall 62 .............................. <point(0, pMember.image.height + pCanvasSize[4])>
  [104] setobjprop 128 .......................... pMember.regPoint = point(0, pMember.image.height + pCanvasSize[4])
  [106] getprop 123 ............................. <pMember>
  [108] getchainedprop 124 ...................... <pMember.image>
  [110] pusharglist 1 ........................... <pMember.image>
  [112] objcall 130 ............................. <pMember.image.duplicate()>
  [114] setprop 129 ............................. pBuffer = pMember.image.duplicate()
  [116] getparam 0 .............................. <me>
  [118] pusharglist 1 ........................... <me>
  [120] objcall 103 ............................. <me.getID()>
  [122] pusharglist 1 ........................... <me.getID()>
  [124] extcall 131 ............................. <reserveSprite(me.getID())>
  [126] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [128] extcall 114 ............................. <sprite(reserveSprite(me.getID()))>
  [130] setprop 113 ............................. pSprite = sprite(reserveSprite(me.getID()))
  [132] getprop 113 ............................. <pSprite>
  [134] getprop 123 ............................. <pMember>
  [136] getobjprop 132 .......................... <pMember.number>
  [138] setobjprop 133 .......................... pSprite.castNum = pMember.number
  [140] getprop 113 ............................. <pSprite>
  [142] getprop 123 ............................. <pMember>
  [144] getobjprop 134 .......................... <pMember.width>
  [146] setobjprop 134 .......................... pSprite.width = pMember.width
  [148] getprop 113 ............................. <pSprite>
  [150] getprop 123 ............................. <pMember>
  [152] getobjprop 127 .......................... <pMember.height>
  [154] setobjprop 127 .......................... pSprite.height = pMember.height
  [156] getprop 113 ............................. <pSprite>
  [158] pushint8 36 ............................. <36>
  [160] setobjprop 135 .......................... pSprite.ink = 36
  [162] getparam 0 .............................. <me>
  [164] pusharglist 1 ........................... <me>
  [166] objcall 103 ............................. <me.getID()>
  [168] pusharglist 1 ........................... <me.getID()>
  [170] extcall 131 ............................. <reserveSprite(me.getID())>
  [172] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [174] extcall 114 ............................. <sprite(reserveSprite(me.getID()))>
  [176] setprop 117 ............................. pMatteSpr = sprite(reserveSprite(me.getID()))
  [178] getprop 117 ............................. <pMatteSpr>
  [180] getprop 123 ............................. <pMember>
  [182] getobjprop 132 .......................... <pMember.number>
  [184] setobjprop 133 .......................... pMatteSpr.castNum = pMember.number
  [186] getprop 117 ............................. <pMatteSpr>
  [188] pushint8 8 .............................. <8>
  [190] setobjprop 135 .......................... pMatteSpr.ink = 8
  [192] getprop 117 ............................. <pMatteSpr>
  [194] pushzero ................................ <0>
  [195] setobjprop 136 .......................... pMatteSpr.blend = 0
  [197] getparam 0 .............................. <me>
  [199] pusharglist 1 ........................... <me>
  [201] objcall 103 ............................. <me.getID()>
  [203] pusharglist 1 ........................... <me.getID()>
  [205] extcall 131 ............................. <reserveSprite(me.getID())>
  [207] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [209] extcall 114 ............................. <sprite(reserveSprite(me.getID()))>
  [211] setprop 118 ............................. pShadowSpr = sprite(reserveSprite(me.getID()))
  [213] getprop 118 ............................. <pShadowSpr>
  [215] pushint8 16 ............................. <16>
  [217] setobjprop 136 .......................... pShadowSpr.blend = 16
  [219] getprop 118 ............................. <pShadowSpr>
  [221] pushint8 8 .............................. <8>
  [223] setobjprop 135 .......................... pShadowSpr.ink = 8
  [225] pushzero ................................ <0>
  [226] setprop 137 ............................. pShadowFix = 0
  [228] getprop 104 ............................. <pMemberNamePrefix>
  [230] pushcons 9 .............................. <"std_sd_001_0_0">
  [232] joinstr ................................. <pMemberNamePrefix & "std_sd_001_0_0">
  [233] pusharglist 1 ........................... <pMemberNamePrefix & "std_sd_001_0_0">
  [235] extcall 95 .............................. <getmemnum(pMemberNamePrefix & "std_sd_001_0_0")>
  [237] pusharglist 1 ........................... <getmemnum(pMemberNamePrefix & "std_sd_001_0_0")>
  [239] extcall 83 .............................. <member(getmemnum(pMemberNamePrefix & "std_sd_001_0_0"))>
  [241] setprop 82 .............................. pDefShadowMem = member(getmemnum(pMemberNamePrefix & "std_sd_001_0_0"))
  [243] pushsymb 87 ............................. <#room>
  [245] pusharglist 1 ........................... <#room>
  [247] extcall 86 .............................. <getThread(#room)>
  [249] pusharglist 1 ........................... <getThread(#room)>
  [251] objcall 88 .............................. <getThread(#room).getInterface()>
  [253] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [255] objcall 103 ............................. <getThread(#room).getInterface().getID()>
  [257] setlocal 0 .............................. tTargetID = getThread(#room).getInterface().getID()
  [259] getprop 117 ............................. <pMatteSpr>
  [261] getobjprop 116 .......................... <pMatteSpr.spriteNum>
  [263] getparam 0 .............................. <me>
  [265] pusharglist 1 ........................... <me>
  [267] objcall 103 ............................. <me.getID()>
  [269] pusharglistnoret 2 ...................... <pMatteSpr.spriteNum, me.getID()>
  [271] extcall 138 ............................. setEventBroker(pMatteSpr.spriteNum, me.getID())
  [273] getprop 117 ............................. <pMatteSpr>
  [275] pushsymb 139 ............................ <#eventProcUserObj>
  [277] getlocal 0 .............................. <tTargetID>
  [279] pushsymb 140 ............................ <#mouseDown>
  [281] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [283] objcall 141 ............................. pMatteSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [285] getprop 117 ............................. <pMatteSpr>
  [287] pushsymb 142 ............................ <#eventProcUserRollOver>
  [289] getlocal 0 .............................. <tTargetID>
  [291] pushsymb 143 ............................ <#mouseEnter>
  [293] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseEnter>
  [295] objcall 141 ............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseEnter)
  [297] getprop 117 ............................. <pMatteSpr>
  [299] pushsymb 142 ............................ <#eventProcUserRollOver>
  [301] getlocal 0 .............................. <tTargetID>
  [303] pushsymb 144 ............................ <#mouseLeave>
  [305] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseLeave>
  [307] objcall 141 ............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseLeave)
  [309] getprop 118 ............................. <pShadowSpr>
  [311] getobjprop 116 .......................... <pShadowSpr.spriteNum>
  [313] getparam 0 .............................. <me>
  [315] pusharglist 1 ........................... <me>
  [317] objcall 103 ............................. <me.getID()>
  [319] pusharglistnoret 2 ...................... <pShadowSpr.spriteNum, me.getID()>
  [321] extcall 138 ............................. setEventBroker(pShadowSpr.spriteNum, me.getID())
  [323] getprop 118 ............................. <pShadowSpr>
  [325] pushsymb 139 ............................ <#eventProcUserObj>
  [327] getlocal 0 .............................. <tTargetID>
  [329] pushsymb 140 ............................ <#mouseDown>
  [331] pusharglistnoret 4 ...................... <pShadowSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [333] objcall 141 ............................. pShadowSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [335] getmovieprop 145 ........................ <the itemDelimiter>
  [337] setlocal 1 .............................. tDelim = the itemDelimiter
  [339] pushint8 4 .............................. <4>
  [341] pusharglist 1 ........................... <4>
  [343] extcall 146 ............................. <numToChar(4)>
  [345] setmovieprop 145 ........................ the itemDelimiter = numToChar(4)
  [347] getprop 84 .............................. <pInfoStruct>
  [349] pushsymb 147 ............................ <#name>
  [351] pushzero ................................ <0>
  [352] pushzero ................................ <0>
  [353] pushzero ................................ <0>
  [354] pushzero ................................ <0>
  [355] pushint8 2 .............................. <2>
  [357] pushzero ................................ <0>
  [358] pushzero ................................ <0>
  [359] pushzero ................................ <0>
  [360] getparam 0 .............................. <me>
  [362] pusharglist 1 ........................... <me>
  [364] objcall 103 ............................. <me.getID()>
  [366] getchunk ................................ <item 2 of me.getID()>
  [367] pusharglistnoret 3 ...................... <pInfoStruct, #name, item 2 of me.getID()>
  [369] objcall 148 ............................. pInfoStruct[#name] = item 2 of me.getID()
  [371] getlocal 1 .............................. <tDelim>
  [373] setmovieprop 145 ........................ the itemDelimiter = tDelim
  [375] getprop 84 .............................. <pInfoStruct>
  [377] pushsymb 147 ............................ <#name>
  [379] getprop 56 .............................. <pName>
  [381] pusharglistnoret 3 ...................... <pInfoStruct, #name, pName>
  [383] objcall 148 ............................. pInfoStruct[#name] = pName
  [385] getprop 84 .............................. <pInfoStruct>
  [387] pushsymb 149 ............................ <#class>
  [389] getprop 150 ............................. <pClass>
  [391] pusharglistnoret 3 ...................... <pInfoStruct, #class, pClass>
  [393] objcall 148 ............................. pInfoStruct[#class] = pClass
  [395] getprop 84 .............................. <pInfoStruct>
  [397] pushsymb 151 ............................ <#custom>
  [399] getprop 152 ............................. <pCustom>
  [401] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [403] objcall 148 ............................. pInfoStruct[#custom] = pCustom
  [405] getprop 84 .............................. <pInfoStruct>
  [407] pushsymb 124 ............................ <#image>
  [409] getparam 0 .............................. <me>
  [411] pusharglist 1 ........................... <me>
  [413] objcall 23 .............................. <me.getPicture()>
  [415] pusharglistnoret 3 ...................... <pInfoStruct, #image, me.getPicture()>
  [417] objcall 148 ............................. pInfoStruct[#image] = me.getPicture()
  [419] pushint8 1 .............................. <1>
  [421] pusharglistnoret 1 ...................... <1>
  [423] extcall 110 ............................. return 1
  [425] ret
end

on setup me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 147 ............................ <#name>
  [  4] pusharglist 2 ........................... <tdata, #name>
  [  6] objcall 126 ............................. <tdata[#name]>
  [  8] setprop 56 .............................. pName = tdata[#name]
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 149 ............................ <#class>
  [ 14] pusharglist 2 ........................... <tdata, #class>
  [ 16] objcall 126 ............................. <tdata[#class]>
  [ 18] setprop 150 ............................. pClass = tdata[#class]
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 157 ............................ <#direction>
  [ 24] pusharglist 2 ........................... <tdata, #direction>
  [ 26] objcall 126 ............................. <tdata[#direction]>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 2 ........................... <tdata[#direction], 1>
  [ 32] objcall 126 ............................. <tdata[#direction][1]>
  [ 34] setprop 156 ............................. pDirection = tdata[#direction][1]
  [ 36] getparam 1 .............................. <tdata>
  [ 38] pushsymb 159 ............................ <#x>
  [ 40] pusharglist 2 ........................... <tdata, #x>
  [ 42] objcall 126 ............................. <tdata[#x]>
  [ 44] setprop 158 ............................. pLocX = tdata[#x]
  [ 46] getparam 1 .............................. <tdata>
  [ 48] pushsymb 161 ............................ <#y>
  [ 50] pusharglist 2 ........................... <tdata, #y>
  [ 52] objcall 126 ............................. <tdata[#y]>
  [ 54] setprop 160 ............................. pLocY = tdata[#y]
  [ 56] getparam 1 .............................. <tdata>
  [ 58] pushsymb 163 ............................ <#h>
  [ 60] pusharglist 2 ........................... <tdata, #h>
  [ 62] objcall 126 ............................. <tdata[#h]>
  [ 64] setprop 162 ............................. pLocH = tdata[#h]
  [ 66] getparam 1 .............................. <tdata>
  [ 68] pushsymb 335 ............................ <#webID>
  [ 71] pusharglist 2 ........................... <tdata, #webID>
  [ 73] objcall 256 ............................. <tdata.getaProp(#webID)>
  [ 76] pusharglist 1 ........................... <tdata.getaProp(#webID)>
  [ 78] extcall 189 ............................. <voidp(tdata.getaProp(#webID))>
  [ 80] not ..................................... <not voidp(tdata.getaProp(#webID))>
  [ 81] jmpifz [ 96] ............................ if not voidp(tdata.getaProp(#webID)) then
  [ 84] getparam 1 .............................. <tdata>
  [ 86] pushsymb 335 ............................ <#webID>
  [ 89] pusharglist 2 ........................... <tdata, #webID>
  [ 91] objcall 126 ............................. <tdata[#webID]>
  [ 93] setprop 334 ............................. pWebID = tdata[#webID]
  [ 96] getparam 1 .............................. <tdata>
  [ 98] pushsymb 165 ............................ <#figure>
  [100] pusharglist 2 ........................... <tdata, #figure>
  [102] objcall 126 ............................. <tdata[#figure]>
  [104] pushsymb 166 ............................ <#word>
  [106] pushint8 1 .............................. <1>
  [108] pusharglist 3 ........................... <tdata[#figure], #word, 1>
  [110] objcall 167 ............................. <tdata[#figure].word[1]>
  [112] setprop 164 ............................. pRace = tdata[#figure].word[1]
  [114] getparam 0 .............................. <me>
  [116] pusharglist 1 ........................... <me>
  [118] objcall 37 .............................. <me.getOffsetList()>
  [120] setprop 93 .............................. pOffsetList = me.getOffsetList()
  [122] getparam 0 .............................. <me>
  [124] pushsymb 168 ............................ <#small>
  [126] pusharglist 2 ........................... <me, #small>
  [128] objcall 37 .............................. <me.getOffsetList(#small)>
  [130] setprop 94 .............................. pOffsetListSmall = me.getOffsetList(#small)
  [132] pushcons 10 ............................. <"pet_race_">
  [134] getprop 164 ............................. <pRace>
  [136] joinstr ................................. <"pet_race_" & pRace>
  [137] pushcons 11 ............................. <"_">
  [139] joinstr ................................. <"pet_race_" & pRace & "_">
  [140] getparam 1 .............................. <tdata>
  [142] pushsymb 165 ............................ <#figure>
  [144] pusharglist 2 ........................... <tdata, #figure>
  [146] objcall 126 ............................. <tdata[#figure]>
  [148] pushsymb 166 ............................ <#word>
  [150] pushint8 2 .............................. <2>
  [152] pusharglist 3 ........................... <tdata[#figure], #word, 2>
  [154] objcall 167 ............................. <tdata[#figure].word[2]>
  [156] joinstr ................................. <"pet_race_" & pRace & "_" & tdata[#figure].word[2]>
  [157] pushcons 0 .............................. <EMPTY>
  [159] pusharglist 2 ........................... <"pet_race_" & pRace & "_" & tdata[#figure].word[2], EMPTY>
  [161] extcall 169 ............................. <getText("pet_race_" & pRace & "_" & tdata[#figure].word[2], EMPTY)>
  [163] setprop 152 ............................. pCustom = getText("pet_race_" & pRace & "_" & tdata[#figure].word[2], EMPTY)
  [165] getprop 56 .............................. <pName>
  [167] pushint8 4 .............................. <4>
  [169] pusharglist 1 ........................... <4>
  [171] extcall 146 ............................. <numToChar(4)>
  [173] containsstr ............................. <pName contains numToChar(4)>
  [174] jmpifz [232] ............................ if pName contains numToChar(4) then
  [177] getprop 56 .............................. <pName>
  [179] pushsymb 170 ............................ <#char>
  [181] pushint8 1 .............................. <1>
  [183] pushint8 4 .............................. <4>
  [185] pusharglist 1 ........................... <4>
  [187] extcall 146 ............................. <numToChar(4)>
  [189] getprop 56 .............................. <pName>
  [191] pusharglist 2 ........................... <numToChar(4), pName>
  [193] extcall 171 ............................. <offset(numToChar(4), pName)>
  [195] pusharglist 4 ........................... <pName, #char, 1, offset(numToChar(4), pName)>
  [197] objcall 167 ............................. <pName.char[1..offset(numToChar(4), pName)]>
  [199] setprop 57 .............................. pIDPrefix = pName.char[1..offset(numToChar(4), pName)]
  [201] getprop 56 .............................. <pName>
  [203] pushsymb 170 ............................ <#char>
  [205] pushint8 4 .............................. <4>
  [207] pusharglist 1 ........................... <4>
  [209] extcall 146 ............................. <numToChar(4)>
  [211] getprop 56 .............................. <pName>
  [213] pusharglist 2 ........................... <numToChar(4), pName>
  [215] extcall 171 ............................. <offset(numToChar(4), pName)>
  [217] pushint8 1 .............................. <1>
  [219] add ..................................... <offset(numToChar(4), pName) + 1>
  [220] getprop 56 .............................. <pName>
  [222] pusharglist 1 ........................... <pName>
  [224] extcall 172 ............................. <length(pName)>
  [226] pusharglist 4 ........................... <pName, #char, offset(numToChar(4), pName) + 1, length(pName)>
  [228] objcall 167 ............................. <pName.char[offset(numToChar(4), pName) + 1..length(pName)]>
  [230] setprop 56 .............................. pName = pName.char[offset(numToChar(4), pName) + 1..length(pName)]
  [232] pushint8 62 ............................. <62>
  [234] pushint8 62 ............................. <62>
  [236] pushint8 32 ............................. <32>
  [238] pushint8 18 ............................. <18>
  [240] inv ..................................... <-18>
  [241] pusharglist 4 ........................... <[62, 62, 32, -18]>
  [243] pushlist ................................ <[62, 62, 32, -18]>
  [244] setprop 125 ............................. pCanvasSize = [62, 62, 32, -18]
  [246] getparam 0 .............................. <me>
  [248] getparam 1 .............................. <tdata>
  [250] pushsymb 165 ............................ <#figure>
  [252] pusharglist 2 ........................... <tdata, #figure>
  [254] objcall 126 ............................. <tdata[#figure]>
  [256] pusharglist 2 ........................... <me, tdata[#figure]>
  [258] objcall 34 .............................. <me.setPartLists(tdata[#figure])>
  [260] not ..................................... <not me.setPartLists(tdata[#figure])>
  [261] jmpifz [281] ............................ if not me.setPartLists(tdata[#figure]) then
  [264] getparam 0 .............................. <me>
  [266] pushcons 12 ............................. <"Couldn't create part lists!">
  [268] pushsymb 5 .............................. <#setup>
  [270] pushsymb 325 ............................ <#major>
  [273] pusharglist 4 ........................... <me, "Couldn't create part lists!", #setup, #major>
  [275] extcall 102 ............................. <error(me, "Couldn't create part lists!", #setup, #major)>
  [277] pusharglistnoret 1 ...................... <error(me, "Couldn't create part lists!", #setup, #major)>
  [279] extcall 110 ............................. return error(me, "Couldn't create part lists!", #setup, #major)
  [281] getparam 0 .............................. <me>
  [283] getprop 158 ............................. <pLocX>
  [285] getprop 160 ............................. <pLocY>
  [287] getprop 162 ............................. <pLocH>
  [289] getprop 156 ............................. <pDirection>
  [291] getprop 156 ............................. <pDirection>
  [293] pusharglistnoret 6 ...................... <me, pLocX, pLocY, pLocH, pDirection, pDirection>
  [295] objcall 7 ............................... me.resetValues(pLocX, pLocY, pLocH, pDirection, pDirection)
  [297] getparam 0 .............................. <me>
  [299] getprop 158 ............................. <pLocX>
  [301] getprop 160 ............................. <pLocY>
  [303] getprop 162 ............................. <pLocH>
  [305] pusharglistnoret 4 ...................... <me, pLocX, pLocY, pLocH>
  [307] objcall 8 ............................... me.Refresh(pLocX, pLocY, pLocH)
  [309] pushzero ................................ <0>
  [310] setprop 73 .............................. pSync = 0
  [312] ret
end

on update me
  [  0] getprop 73 .............................. <pSync>
  [  2] not ..................................... <not pSync>
  [  3] setprop 73 .............................. pSync = not pSync
  [  5] getprop 73 .............................. <pSync>
  [  7] jmpifz [ 19] ............................ if pSync then / else
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglistnoret 1 ...................... <me>
  [ 14] objcall 31 .............................. me.prepare()
  [ 16] jmp [ 25]
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglistnoret 1 ...................... <me>
  [ 23] objcall 32 .............................. me.render()
  [ 25] ret
end

on getWebID me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 110 ............................. return 0
  [  5] ret
end

on setUserTypingStatus me, tStatus
  [  0] pusharglistnoret 0 ...................... <>
  [  2] extcall 329 ............................. nothing()
  [  5] ret
end

on resetValues me, tX, tY, tH, tDirHead, tDirBody
  [  0] pushzero ................................ <0>
  [  1] setprop 76 .............................. pWaving = 0
  [  3] pushzero ................................ <0>
  [  4] setprop 77 .............................. pMoving = 0
  [  6] pushzero ................................ <0>
  [  7] setprop 78 .............................. pSniffing = 0
  [  9] pushsymb 174 ............................ <#reset>
  [ 11] getprop 58 .............................. <pPartList>
  [ 13] pusharglistnoret 2 ...................... <#reset, pPartList>
  [ 15] extcall 173 ............................. call(#reset, pPartList)
  [ 17] getprop 105 ............................. <pCorrectLocZ>
  [ 19] jmpifz [ 42] ............................ if pCorrectLocZ then / else
  [ 22] getprop 85 .............................. <pGeometry>
  [ 24] getparam 1 .............................. <tX>
  [ 26] getparam 2 .............................. <tY>
  [ 28] getparam 3 .............................. <tH>
  [ 30] getprop 68 .............................. <pRestingHeight>
  [ 32] add ..................................... <tH + pRestingHeight>
  [ 33] pusharglist 4 ........................... <pGeometry, tX, tY, tH + pRestingHeight>
  [ 35] objcall 175 ............................. <pGeometry.getScreenCoordinate(tX, tY, tH + pRestingHeight)>
  [ 37] setprop 65 .............................. pScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tH + pRestingHeight)
  [ 39] jmp [ 56]
  [ 42] getprop 85 .............................. <pGeometry>
  [ 44] getparam 1 .............................. <tX>
  [ 46] getparam 2 .............................. <tY>
  [ 48] getparam 3 .............................. <tH>
  [ 50] pusharglist 4 ........................... <pGeometry, tX, tY, tH>
  [ 52] objcall 175 ............................. <pGeometry.getScreenCoordinate(tX, tY, tH)>
  [ 54] setprop 65 .............................. pScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tH)
  [ 56] pushcons 1 .............................. <"std">
  [ 58] setprop 75 .............................. pMainAction = "std"
  [ 60] getparam 1 .............................. <tX>
  [ 62] setprop 158 ............................. pLocX = tX
  [ 64] getparam 2 .............................. <tY>
  [ 66] setprop 160 ............................. pLocY = tY
  [ 68] getparam 3 .............................. <tH>
  [ 70] setprop 162 ............................. pLocH = tH
  [ 72] pushfloat32 0.0 ......................... <0.0>
  [ 77] setprop 68 .............................. pRestingHeight = 0.0
  [ 79] pushsymb 176 ............................ <#defineDir>
  [ 81] getprop 58 .............................. <pPartList>
  [ 83] getparam 5 .............................. <tDirBody>
  [ 85] pusharglistnoret 3 ...................... <#defineDir, pPartList, tDirBody>
  [ 87] extcall 173 ............................. call(#defineDir, pPartList, tDirBody)
  [ 89] getparam 5 .............................. <tDirBody>
  [ 91] getprop 60 .............................. <pFlipList>
  [ 93] getparam 5 .............................. <tDirBody>
  [ 95] pushint8 1 .............................. <1>
  [ 97] add ..................................... <tDirBody + 1>
  [ 98] pusharglist 2 ........................... <pFlipList, tDirBody + 1>
  [100] objcall 126 ............................. <pFlipList[tDirBody + 1]>
  [102] nteq .................................... <tDirBody <> pFlipList[tDirBody + 1]>
  [103] jmpifz [175] ............................ if tDirBody <> pFlipList[tDirBody + 1] then
  [106] getparam 5 .............................. <tDirBody>
  [108] getparam 4 .............................. <tDirHead>
  [110] nteq .................................... <tDirBody <> tDirHead>
  [111] jmpifz [175] ............................ if tDirBody <> tDirHead then
  [114] getparam 4 .............................. <tDirHead>
  [116] peek 0 .................................. case tDirHead of
  [118] pushint8 4 .............................. <4>
  [120] eq
  [121] jmpifz [131] ............................ (case) 4:
  [124] pushint8 2 .............................. <2>
  [126] setparam 4 .............................. tDirHead = 2
  [128] jmp [173]
  [131] peek 0
  [133] pushint8 5 .............................. <5>
  [135] eq
  [136] jmpifz [146] ............................ (case) 5:
  [139] pushint8 1 .............................. <1>
  [141] setparam 4 .............................. tDirHead = 1
  [143] jmp [173]
  [146] peek 0
  [148] pushint8 6 .............................. <6>
  [150] eq
  [151] jmpifz [161] ............................ (case) 6:
  [154] pushint8 4 .............................. <4>
  [156] setparam 4 .............................. tDirHead = 4
  [158] jmp [173]
  [161] peek 0
  [163] pushint8 7 .............................. <7>
  [165] eq
  [166] jmpifz [173] ............................ (case) 7:
  [169] pushint8 5 .............................. <5>
  [171] setparam 4 .............................. tDirHead = 5
  [173] pop 1 ................................... end case
  [175] getprop 58 .............................. <pPartList>
  [177] getprop 59 .............................. <pPartIndex>
  [179] pushcons 13 ............................. <"hd">
  [181] pusharglist 2 ........................... <pPartIndex, "hd">
  [183] objcall 126 ............................. <pPartIndex["hd"]>
  [185] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [187] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [189] getparam 4 .............................. <tDirHead>
  [191] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], tDirHead>
  [193] objcall 176 ............................. pPartList[pPartIndex["hd"]].defineDir(tDirHead)
  [195] getparam 5 .............................. <tDirBody>
  [197] setprop 156 ............................. pDirection = tDirBody
  [199] ret
end

on Refresh me, tX, tY, tH, tDirHead, tDirBody
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 35 .............................. me.arrangeParts()
  [  6] pushint8 1 .............................. <1>
  [  8] setprop 74 .............................. pChanges = 1
  [ 10] ret
end

on select me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 182 .......................... <the doubleClick>
  [  4] jmpifz [ 58] ............................ if the doubleClick then
  [  7] pushcons 14 ............................. <"connection.info.id">
  [  9] pushsymb 185 ............................ <#Info>
  [ 11] pusharglist 2 ........................... <"connection.info.id", #Info>
  [ 13] extcall 184 ............................. <getVariable("connection.info.id", #Info)>
  [ 15] pusharglist 1 ........................... <getVariable("connection.info.id", #Info)>
  [ 17] extcall 183 ............................. <connectionExists(getVariable("connection.info.id", #Info))>
  [ 19] jmpifz [ 58] ............................ if connectionExists(getVariable("connection.info.id", #Info)) then
  [ 22] pushcons 14 ............................. <"connection.info.id">
  [ 24] pushsymb 185 ............................ <#Info>
  [ 26] pusharglist 2 ........................... <"connection.info.id", #Info>
  [ 28] extcall 184 ............................. <getVariable("connection.info.id", #Info)>
  [ 30] pusharglist 1 ........................... <getVariable("connection.info.id", #Info)>
  [ 32] extcall 186 ............................. <getConnection(getVariable("connection.info.id", #Info))>
  [ 34] pushcons 15 ............................. <"GETPETSTAT">
  [ 36] pushsymb 270 ............................ <#integer>
  [ 39] getprop 334 ............................. <pWebID>
  [ 42] pusharglist 1 ........................... <pWebID>
  [ 44] extcall 270 ............................. <integer(pWebID)>
  [ 47] pushsymb 187 ............................ <#string>
  [ 49] getprop 56 .............................. <pName>
  [ 51] pusharglist 4 ........................... <[#integer: integer(pWebID), #string: pName]>
  [ 53] pushproplist ............................ <[#integer: integer(pWebID), #string: pName]>
  [ 54] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id", #Info)), "GETPETSTAT", [#integer: integer(pWebID), #string: pName]>
  [ 56] objcall 188 ............................. getConnection(getVariable("connection.info.id", #Info)).send("GETPETSTAT", [#integer: integer(pWebID), #string: pName])
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglistnoret 1 ...................... <1>
  [ 62] extcall 110 ............................. return 1
  [ 64] ret
end

on getClass me
  [  0] pushcons 16 ............................. <"pet">
  [  2] pusharglistnoret 1 ...................... <"pet">
  [  4] extcall 110 ............................. return "pet"
  [  6] ret
end

on getName me
  [  0] getprop 56 .............................. <pName>
  [  2] pusharglistnoret 1 ...................... <pName>
  [  4] extcall 110 ............................. return pName
  [  6] ret
end

on setPartModel me, tPart, tmodel
  [  0] getprop 59 .............................. <pPartIndex>
  [  2] getparam 1 .............................. <tPart>
  [  4] pusharglist 2 ........................... <pPartIndex, tPart>
  [  6] objcall 126 ............................. <pPartIndex[tPart]>
  [  8] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 10] extcall 189 ............................. <voidp(pPartIndex[tPart])>
  [ 12] jmpifz [ 23] ............................ if voidp(pPartIndex[tPart]) then
  [ 15] pusharglist 0 ........................... <>
  [ 17] extcall 112 ............................. <VOID>
  [ 19] pusharglistnoret 1 ...................... <VOID>
  [ 21] extcall 110 ............................. return VOID
  [ 23] getprop 58 .............................. <pPartList>
  [ 25] getprop 59 .............................. <pPartIndex>
  [ 27] getparam 1 .............................. <tPart>
  [ 29] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 31] objcall 126 ............................. <pPartIndex[tPart]>
  [ 33] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 35] objcall 126 ............................. <pPartList[pPartIndex[tPart]]>
  [ 37] getparam 2 .............................. <tmodel>
  [ 39] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tmodel>
  [ 41] objcall 190 ............................. pPartList[pPartIndex[tPart]].setModel(tmodel)
  [ 43] ret
end

on setPartColor me, tPart, tColor
  [  0] getprop 59 .............................. <pPartIndex>
  [  2] getparam 1 .............................. <tPart>
  [  4] pusharglist 2 ........................... <pPartIndex, tPart>
  [  6] objcall 126 ............................. <pPartIndex[tPart]>
  [  8] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 10] extcall 189 ............................. <voidp(pPartIndex[tPart])>
  [ 12] jmpifz [ 32] ............................ if voidp(pPartIndex[tPart]) then
  [ 15] pushint16 255 ........................... <255>
  [ 18] pushint16 199 ........................... <199>
  [ 21] pushint16 199 ........................... <199>
  [ 24] pusharglist 3 ........................... <255, 199, 199>
  [ 26] extcall 81 .............................. <rgb(255, 199, 199)>
  [ 28] pusharglistnoret 1 ...................... <rgb(255, 199, 199)>
  [ 30] extcall 110 ............................. return rgb(255, 199, 199)
  [ 32] getprop 58 .............................. <pPartList>
  [ 34] getprop 59 .............................. <pPartIndex>
  [ 36] getparam 1 .............................. <tPart>
  [ 38] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 40] objcall 126 ............................. <pPartIndex[tPart]>
  [ 42] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 44] objcall 126 ............................. <pPartList[pPartIndex[tPart]]>
  [ 46] getparam 2 .............................. <tColor>
  [ 48] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tColor>
  [ 50] objcall 193 ............................. pPartList[pPartIndex[tPart]].setColor(tColor)
  [ 52] ret
end

on getProperty me, tPropID
  [  0] getparam 1 .............................. <tPropID>
  [  2] peek 0 .................................. case tPropID of
  [  4] pushsymb 195 ............................ <#loc>
  [  6] eq
  [  7] jmpifz [ 28] ............................ (case) #loc:
  [ 10] pop 1
  [ 12] getprop 158 ............................. <pLocX>
  [ 14] getprop 160 ............................. <pLocY>
  [ 16] getprop 162 ............................. <pLocH>
  [ 18] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 20] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 21] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 23] extcall 110 ............................. return [pLocX, pLocY, pLocH]
  [ 25] jmp [ 56]
  [ 28] peek 0
  [ 30] pushsymb 196 ............................ <#moving>
  [ 32] eq
  [ 33] jmpifz [ 49] ............................ (case) #moving:
  [ 36] pop 1
  [ 38] getparam 0 .............................. <me>
  [ 40] getobjprop 77 ........................... <me.pMoving>
  [ 42] pusharglistnoret 1 ...................... <me.pMoving>
  [ 44] extcall 110 ............................. return me.pMoving
  [ 46] jmp [ 56] ............................... (case) otherwise:
  [ 49] pop 1
  [ 51] pushzero ................................ <0>
  [ 52] pusharglistnoret 1 ...................... <0>
  [ 54] extcall 110 ............................. return 0
  [ 56] pop 1 ................................... end case
  [ 58] ret
end

on getCustom me
  [  0] getprop 152 ............................. <pCustom>
  [  2] pusharglistnoret 1 ...................... <pCustom>
  [  4] extcall 110 ............................. return pCustom
  [  6] ret
end

on getLocation me
  [  0] getprop 158 ............................. <pLocX>
  [  2] getprop 160 ............................. <pLocY>
  [  4] getprop 162 ............................. <pLocH>
  [  6] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [  8] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [  9] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 11] extcall 110 ............................. return [pLocX, pLocY, pLocH]
  [ 13] ret
end

on getScrLocation me
  [  0] getprop 65 .............................. <pScreenLoc>
  [  2] pusharglistnoret 1 ...................... <pScreenLoc>
  [  4] extcall 110 ............................. return pScreenLoc
  [  6] ret
end

on getTileCenter me
  [  0] getprop 65 .............................. <pScreenLoc>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglist 2 ........................... <pScreenLoc, 1>
  [  6] objcall 126 ............................. <pScreenLoc[1]>
  [  8] getprop 90 .............................. <pXFactor>
  [ 10] pushint8 2 .............................. <2>
  [ 12] div ..................................... <pXFactor / 2>
  [ 13] add ..................................... <pScreenLoc[1] + (pXFactor / 2)>
  [ 14] getprop 65 .............................. <pScreenLoc>
  [ 16] pushint8 2 .............................. <2>
  [ 18] pusharglist 2 ........................... <pScreenLoc, 2>
  [ 20] objcall 126 ............................. <pScreenLoc[2]>
  [ 22] pusharglist 2 ........................... <pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2]>
  [ 24] extcall 62 .............................. <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 26] pusharglistnoret 1 ...................... <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 28] extcall 110 ............................. return point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])
  [ 30] ret
end

on getPartLocation me, tPart
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 18 .............................. <me.getTileCenter()>
  [  6] pusharglistnoret 1 ...................... <me.getTileCenter()>
  [  8] extcall 110 ............................. return me.getTileCenter()
  [ 10] ret
end

on getDirection me
  [  0] getprop 156 ............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 110 ............................. return pDirection
  [  6] ret
end

on getPartMember me, tPart
  [  0] getprop 59 .............................. <pPartIndex>
  [  2] getparam 1 .............................. <tPart>
  [  4] pusharglist 2 ........................... <pPartIndex, tPart>
  [  6] objcall 126 ............................. <pPartIndex[tPart]>
  [  8] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 10] extcall 189 ............................. <voidp(pPartIndex[tPart])>
  [ 12] jmpifz [ 23] ............................ if voidp(pPartIndex[tPart]) then
  [ 15] pusharglist 0 ........................... <>
  [ 17] extcall 112 ............................. <VOID>
  [ 19] pusharglistnoret 1 ...................... <VOID>
  [ 21] extcall 110 ............................. return VOID
  [ 23] getprop 58 .............................. <pPartList>
  [ 25] getprop 59 .............................. <pPartIndex>
  [ 27] getparam 1 .............................. <tPart>
  [ 29] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 31] objcall 126 ............................. <pPartIndex[tPart]>
  [ 33] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 35] objcall 126 ............................. <pPartList[pPartIndex[tPart]]>
  [ 37] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 39] objcall 198 ............................. <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 41] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 43] extcall 110 ............................. return pPartList[pPartIndex[tPart]].getCurrentMember()
  [ 45] ret
end

on getPartColor me, tPart
  [  0] getprop 59 .............................. <pPartIndex>
  [  2] getparam 1 .............................. <tPart>
  [  4] pusharglist 2 ........................... <pPartIndex, tPart>
  [  6] objcall 126 ............................. <pPartIndex[tPart]>
  [  8] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 10] extcall 189 ............................. <voidp(pPartIndex[tPart])>
  [ 12] jmpifz [ 32] ............................ if voidp(pPartIndex[tPart]) then
  [ 15] pushint16 255 ........................... <255>
  [ 18] pushint16 199 ........................... <199>
  [ 21] pushint16 199 ........................... <199>
  [ 24] pusharglist 3 ........................... <255, 199, 199>
  [ 26] extcall 81 .............................. <rgb(255, 199, 199)>
  [ 28] pusharglistnoret 1 ...................... <rgb(255, 199, 199)>
  [ 30] extcall 110 ............................. return rgb(255, 199, 199)
  [ 32] getprop 58 .............................. <pPartList>
  [ 34] getprop 59 .............................. <pPartIndex>
  [ 36] getparam 1 .............................. <tPart>
  [ 38] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 40] objcall 126 ............................. <pPartIndex[tPart]>
  [ 42] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 44] objcall 126 ............................. <pPartList[pPartIndex[tPart]]>
  [ 46] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 48] objcall 199 ............................. <pPartList[pPartIndex[tPart]].getColor()>
  [ 50] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getColor()>
  [ 52] extcall 110 ............................. return pPartList[pPartIndex[tPart]].getColor()
  [ 54] ret
end

on getPicture me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] pusharglist 1 ........................... <tImg>
  [  4] extcall 189 ............................. <voidp(tImg)>
  [  6] jmpifz [ 42] ............................ if voidp(tImg) then / else
  [  9] getprop 125 ............................. <pCanvasSize>
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglist 2 ........................... <pCanvasSize, 1>
  [ 15] objcall 126 ............................. <pCanvasSize[1]>
  [ 17] getprop 125 ............................. <pCanvasSize>
  [ 19] pushint8 2 .............................. <2>
  [ 21] pusharglist 2 ........................... <pCanvasSize, 2>
  [ 23] objcall 126 ............................. <pCanvasSize[2]>
  [ 25] getprop 125 ............................. <pCanvasSize>
  [ 27] pushint8 3 .............................. <3>
  [ 29] pusharglist 2 ........................... <pCanvasSize, 3>
  [ 31] objcall 126 ............................. <pCanvasSize[3]>
  [ 33] pusharglist 3 ........................... <pCanvasSize[1], pCanvasSize[2], pCanvasSize[3]>
  [ 35] extcall 124 ............................. <image(pCanvasSize[1], pCanvasSize[2], pCanvasSize[3])>
  [ 37] setlocal 0 .............................. tCanvas = image(pCanvasSize[1], pCanvasSize[2], pCanvasSize[3])
  [ 39] jmp [ 46]
  [ 42] getparam 1 .............................. <tImg>
  [ 44] setlocal 0 .............................. tCanvas = tImg
  [ 46] getprop 84 .............................. <pInfoStruct>
  [ 48] pushsymb 124 ............................ <#image>
  [ 50] pusharglist 2 ........................... <pInfoStruct, #image>
  [ 52] objcall 126 ............................. <pInfoStruct[#image]>
  [ 54] pusharglist 1 ........................... <pInfoStruct[#image]>
  [ 56] extcall 189 ............................. <voidp(pInfoStruct[#image])>
  [ 58] jmpifz [161] ............................ if voidp(pInfoStruct[#image]) then / else
  [ 61] pushcons 17 ............................. <"tl">
  [ 63] pushcons 18 ............................. <"bd">
  [ 65] pushcons 13 ............................. <"hd">
  [ 67] pusharglist 3 ........................... <["tl", "bd", "hd"]>
  [ 69] pushlist ................................ <["tl", "bd", "hd"]>
  [ 70] setlocal 1 .............................. tPartDefinition = ["tl", "bd", "hd"]
  [ 72] pusharglist 0 ........................... <[]>
  [ 74] pushlist ................................ <[]>
  [ 75] setlocal 2 .............................. tTempPartList = []
  [ 77] getlocal 1 .............................. <tPartDefinition>
  [ 79] peek 0
  [ 81] pusharglist 1
  [ 83] extcall 200
  [ 85] pushint8 1
  [ 87] peek 0
  [ 89] peek 2
  [ 91] lteq
  [ 92] jmpifz [146] ............................ repeat with tPartSymbol in tPartDefinition
  [ 95] peek 2
  [ 97] peek 1
  [ 99] pusharglist 2
  [101] extcall 126
  [103] setlocal 3
  [105] getprop 59 .............................. <pPartIndex>
  [107] getlocal 3 .............................. <tPartSymbol>
  [109] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [111] objcall 126 ............................. <pPartIndex[tPartSymbol]>
  [113] pusharglist 1 ........................... <pPartIndex[tPartSymbol]>
  [115] extcall 189 ............................. <voidp(pPartIndex[tPartSymbol])>
  [117] not ..................................... <not voidp(pPartIndex[tPartSymbol])>
  [118] jmpifz [141] ............................ if not voidp(pPartIndex[tPartSymbol]) then
  [121] getlocal 2 .............................. <tTempPartList>
  [123] getprop 58 .............................. <pPartList>
  [125] getprop 59 .............................. <pPartIndex>
  [127] getlocal 3 .............................. <tPartSymbol>
  [129] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [131] objcall 126 ............................. <pPartIndex[tPartSymbol]>
  [133] pusharglist 2 ........................... <pPartList, pPartIndex[tPartSymbol]>
  [135] objcall 126 ............................. <pPartList[pPartIndex[tPartSymbol]]>
  [137] pusharglistnoret 2 ...................... <tTempPartList, pPartList[pPartIndex[tPartSymbol]]>
  [139] objcall 201 ............................. tTempPartList.append(pPartList[pPartIndex[tPartSymbol]])
  [141] pushint8 1
  [143] add
  [144] endrepeat [ 87]
  [146] pop 3
  [148] pushsymb 202 ............................ <#copyPicture>
  [150] getlocal 2 .............................. <tTempPartList>
  [152] getlocal 0 .............................. <tCanvas>
  [154] pusharglistnoret 3 ...................... <#copyPicture, tTempPartList, tCanvas>
  [156] extcall 173 ............................. call(#copyPicture, tTempPartList, tCanvas)
  [158] jmp [183]
  [161] getlocal 0 .............................. <tCanvas>
  [163] getprop 84 .............................. <pInfoStruct>
  [165] pushsymb 124 ............................ <#image>
  [167] pusharglist 2 ........................... <pInfoStruct, #image>
  [169] objcall 126 ............................. <pInfoStruct[#image]>
  [171] getlocal 0 .............................. <tCanvas>
  [173] getobjprop 64 ........................... <tCanvas.rect>
  [175] getlocal 0 .............................. <tCanvas>
  [177] getobjprop 64 ........................... <tCanvas.rect>
  [179] pusharglistnoret 4 ...................... <tCanvas, pInfoStruct[#image], tCanvas.rect, tCanvas.rect>
  [181] objcall 203 ............................. tCanvas.copyPixels(pInfoStruct[#image], tCanvas.rect, tCanvas.rect)
  [183] getparam 0 .............................. <me>
  [185] getlocal 0 .............................. <tCanvas>
  [187] pusharglist 2 ........................... <me, tCanvas>
  [189] objcall 36 .............................. <me.flipImage(tCanvas)>
  [191] pusharglistnoret 1 ...................... <me.flipImage(tCanvas)>
  [193] extcall 110 ............................. return me.flipImage(tCanvas)
  [195] ret
end

on getInfo me
  [  0] getprop 84 .............................. <pInfoStruct>
  [  2] pusharglistnoret 1 ...................... <pInfoStruct>
  [  4] extcall 110 ............................. return pInfoStruct
  [  6] ret
end

on getSprites me
  [  0] getprop 113 ............................. <pSprite>
  [  2] getprop 118 ............................. <pShadowSpr>
  [  4] getprop 117 ............................. <pMatteSpr>
  [  6] pusharglist 3 ........................... <[pSprite, pShadowSpr, pMatteSpr]>
  [  8] pushlist ................................ <[pSprite, pShadowSpr, pMatteSpr]>
  [  9] pusharglistnoret 1 ...................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 11] extcall 110 ............................. return [pSprite, pShadowSpr, pMatteSpr]
  [ 13] ret
end

on closeEyes me
  [  0] getprop 58 .............................. <pPartList>
  [  2] getprop 59 .............................. <pPartIndex>
  [  4] pushcons 13 ............................. <"hd">
  [  6] pusharglist 2 ........................... <pPartIndex, "hd">
  [  8] objcall 126 ............................. <pPartIndex["hd"]>
  [ 10] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 12] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 14] pushcons 19 ............................. <"eyb">
  [ 16] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "eyb">
  [ 18] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("eyb")
  [ 20] pushint8 1 .............................. <1>
  [ 22] setprop 72 .............................. pEyesClosed = 1
  [ 24] pushint8 1 .............................. <1>
  [ 26] setprop 74 .............................. pChanges = 1
  [ 28] ret
end

on openEyes me
  [  0] getprop 58 .............................. <pPartList>
  [  2] getprop 59 .............................. <pPartIndex>
  [  4] pushcons 13 ............................. <"hd">
  [  6] pusharglist 2 ........................... <pPartIndex, "hd">
  [  8] objcall 126 ............................. <pPartIndex["hd"]>
  [ 10] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 12] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 14] pushcons 1 .............................. <"std">
  [ 16] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "std">
  [ 18] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("std")
  [ 20] pushzero ................................ <0>
  [ 21] setprop 72 .............................. pEyesClosed = 0
  [ 23] pushint8 1 .............................. <1>
  [ 25] setprop 74 .............................. pChanges = 1
  [ 27] ret
end

on show me
  [  0] getprop 113 ............................. <pSprite>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 210 .......................... pSprite.visible = 1
  [  6] getprop 117 ............................. <pMatteSpr>
  [  8] pushint8 1 .............................. <1>
  [ 10] setobjprop 210 .......................... pMatteSpr.visible = 1
  [ 12] getprop 118 ............................. <pShadowSpr>
  [ 14] pushint8 1 .............................. <1>
  [ 16] setobjprop 210 .......................... pShadowSpr.visible = 1
  [ 18] ret
end

on hide me
  [  0] getprop 113 ............................. <pSprite>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 210 .......................... pSprite.visible = 0
  [  5] getprop 117 ............................. <pMatteSpr>
  [  7] pushzero ................................ <0>
  [  8] setobjprop 210 .......................... pMatteSpr.visible = 0
  [ 10] getprop 118 ............................. <pShadowSpr>
  [ 12] pushzero ................................ <0>
  [ 13] setobjprop 210 .......................... pShadowSpr.visible = 0
  [ 15] ret
end

on draw me, tRGB
  [  0] getparam 1 .............................. <tRGB>
  [  2] pushsymb 211 ............................ <#color>
  [  4] pusharglist 2 ........................... <tRGB, #color>
  [  6] extcall 100 ............................. <ilk(tRGB, #color)>
  [  8] not ..................................... <not ilk(tRGB, #color)>
  [  9] jmpifz [ 23] ............................ if not ilk(tRGB, #color) then
  [ 12] pushint16 255 ........................... <255>
  [ 15] pushzero ................................ <0>
  [ 16] pushzero ................................ <0>
  [ 17] pusharglist 3 ........................... <255, 0, 0>
  [ 19] extcall 81 .............................. <rgb(255, 0, 0)>
  [ 21] setparam 1 .............................. tRGB = rgb(255, 0, 0)
  [ 23] getprop 123 ............................. <pMember>
  [ 25] getchainedprop 124 ...................... <pMember.image>
  [ 27] getprop 123 ............................. <pMember>
  [ 29] getchainedprop 124 ...................... <pMember.image>
  [ 31] getobjprop 64 ........................... <pMember.image.rect>
  [ 33] pushsymb 212 ............................ <#shapeType>
  [ 35] pushsymb 64 ............................. <#rect>
  [ 37] pushsymb 211 ............................ <#color>
  [ 39] getparam 1 .............................. <tRGB>
  [ 41] pusharglist 4 ........................... <[#shapeType: #rect, #color: tRGB]>
  [ 43] pushproplist ............................ <[#shapeType: #rect, #color: tRGB]>
  [ 44] pusharglistnoret 3 ...................... <pMember.image, pMember.image.rect, [#shapeType: #rect, #color: tRGB]>
  [ 46] objcall 30 .............................. pMember.image.draw(pMember.image.rect, [#shapeType: #rect, #color: tRGB])
  [ 48] ret
end

on prepare me
  [  0] getprop 69 .............................. <pAnimCounter>
  [  2] pushint8 1 .............................. <1>
  [  4] add ..................................... <pAnimCounter + 1>
  [  5] pushint8 4 .............................. <4>
  [  7] mod ..................................... <(pAnimCounter + 1) mod 4>
  [  8] setprop 69 .............................. pAnimCounter = (pAnimCounter + 1) mod 4
  [ 10] getprop 72 .............................. <pEyesClosed>
  [ 12] jmpifz [ 24] ............................ if pEyesClosed then / else
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglistnoret 1 ...................... <me>
  [ 19] objcall 27 .............................. me.openEyes()
  [ 21] jmp [ 42]
  [ 24] pushint8 30 ............................. <30>
  [ 26] pusharglist 1 ........................... <30>
  [ 28] extcall 214 ............................. <random(30)>
  [ 30] pushint8 3 .............................. <3>
  [ 32] eq ...................................... <random(30) = 3>
  [ 33] jmpifz [ 42] ............................ if random(30) = 3 then
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 26 .............................. me.closeEyes()
  [ 42] getprop 79 .............................. <pTalking>
  [ 44] pushint8 3 .............................. <3>
  [ 46] pusharglist 1 ........................... <3>
  [ 48] extcall 214 ............................. <random(3)>
  [ 50] pushint8 1 .............................. <1>
  [ 52] gt ...................................... <random(3) > 1>
  [ 53] and ..................................... <pTalking and (random(3) > 1)>
  [ 54] jmpifz [ 81] ............................ if pTalking and (random(3) > 1) then
  [ 57] getprop 58 .............................. <pPartList>
  [ 59] getprop 59 .............................. <pPartIndex>
  [ 61] pushcons 13 ............................. <"hd">
  [ 63] pusharglist 2 ........................... <pPartIndex, "hd">
  [ 65] objcall 126 ............................. <pPartIndex["hd"]>
  [ 67] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 69] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 71] pushcons 20 ............................. <"spk">
  [ 73] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "spk">
  [ 75] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("spk")
  [ 77] pushint8 1 .............................. <1>
  [ 79] setprop 74 .............................. pChanges = 1
  [ 81] getprop 76 .............................. <pWaving>
  [ 83] jmpifz [110] ............................ if pWaving then
  [ 86] getprop 58 .............................. <pPartList>
  [ 88] getprop 59 .............................. <pPartIndex>
  [ 90] pushcons 17 ............................. <"tl">
  [ 92] pusharglist 2 ........................... <pPartIndex, "tl">
  [ 94] objcall 126 ............................. <pPartIndex["tl"]>
  [ 96] pusharglist 2 ........................... <pPartList, pPartIndex["tl"]>
  [ 98] objcall 126 ............................. <pPartList[pPartIndex["tl"]]>
  [100] pushcons 21 ............................. <"wav">
  [102] pusharglistnoret 2 ...................... <pPartList[pPartIndex["tl"]], "wav">
  [104] objcall 209 ............................. pPartList[pPartIndex["tl"]].defineAct("wav")
  [106] pushint8 1 .............................. <1>
  [108] setprop 74 .............................. pChanges = 1
  [110] getprop 78 .............................. <pSniffing>
  [112] jmpifz [139] ............................ if pSniffing then
  [115] getprop 58 .............................. <pPartList>
  [117] getprop 59 .............................. <pPartIndex>
  [119] pushcons 13 ............................. <"hd">
  [121] pusharglist 2 ........................... <pPartIndex, "hd">
  [123] objcall 126 ............................. <pPartIndex["hd"]>
  [125] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [127] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [129] pushcons 22 ............................. <"snf">
  [131] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "snf">
  [133] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("snf")
  [135] pushint8 1 .............................. <1>
  [137] setprop 74 .............................. pChanges = 1
  [139] getprop 75 .............................. <pMainAction>
  [141] pushcons 23 ............................. <"scr">
  [143] eq ...................................... <pMainAction = "scr">
  [144] jmpifz [171] ............................ if pMainAction = "scr" then
  [147] getprop 58 .............................. <pPartList>
  [149] getprop 59 .............................. <pPartIndex>
  [151] pushcons 18 ............................. <"bd">
  [153] pusharglist 2 ........................... <pPartIndex, "bd">
  [155] objcall 126 ............................. <pPartIndex["bd"]>
  [157] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [159] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [161] pushcons 23 ............................. <"scr">
  [163] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "scr">
  [165] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("scr")
  [167] pushint8 1 .............................. <1>
  [169] setprop 74 .............................. pChanges = 1
  [171] getprop 75 .............................. <pMainAction>
  [173] pushcons 24 ............................. <"bnd">
  [175] eq ...................................... <pMainAction = "bnd">
  [176] jmpifz [203] ............................ if pMainAction = "bnd" then
  [179] getprop 58 .............................. <pPartList>
  [181] getprop 59 .............................. <pPartIndex>
  [183] pushcons 18 ............................. <"bd">
  [185] pusharglist 2 ........................... <pPartIndex, "bd">
  [187] objcall 126 ............................. <pPartIndex["bd"]>
  [189] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [191] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [193] pushcons 24 ............................. <"bnd">
  [195] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "bnd">
  [197] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("bnd")
  [199] pushint8 1 .............................. <1>
  [201] setprop 74 .............................. pChanges = 1
  [203] getprop 75 .............................. <pMainAction>
  [205] pushcons 25 ............................. <"jmp">
  [207] eq ...................................... <pMainAction = "jmp">
  [208] jmpifz [235] ............................ if pMainAction = "jmp" then
  [211] getprop 58 .............................. <pPartList>
  [213] getprop 59 .............................. <pPartIndex>
  [215] pushcons 18 ............................. <"bd">
  [217] pusharglist 2 ........................... <pPartIndex, "bd">
  [219] objcall 126 ............................. <pPartIndex["bd"]>
  [221] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [223] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [225] pushcons 25 ............................. <"jmp">
  [227] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "jmp">
  [229] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("jmp")
  [231] pushint8 1 .............................. <1>
  [233] setprop 74 .............................. pChanges = 1
  [235] getprop 75 .............................. <pMainAction>
  [237] pushcons 26 ............................. <"pla">
  [239] eq ...................................... <pMainAction = "pla">
  [240] jmpifz [267] ............................ if pMainAction = "pla" then
  [243] getprop 58 .............................. <pPartList>
  [245] getprop 59 .............................. <pPartIndex>
  [247] pushcons 18 ............................. <"bd">
  [249] pusharglist 2 ........................... <pPartIndex, "bd">
  [251] objcall 126 ............................. <pPartIndex["bd"]>
  [253] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [255] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [257] pushcons 26 ............................. <"pla">
  [259] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "pla">
  [261] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("pla")
  [263] pushint8 1 .............................. <1>
  [265] setprop 74 .............................. pChanges = 1
  [267] getprop 77 .............................. <pMoving>
  [269] jmpifz [321] ............................ if pMoving then
  [272] getmovieprop 216 ........................ <the milliSeconds>
  [274] getprop 70 .............................. <pMoveStart>
  [276] sub ..................................... <the milliSeconds - pMoveStart>
  [277] pusharglist 1 ........................... <the milliSeconds - pMoveStart>
  [279] extcall 215 ............................. <float(the milliSeconds - pMoveStart)>
  [281] getprop 71 .............................. <pMoveTime>
  [283] div ..................................... <float(the milliSeconds - pMoveStart) / pMoveTime>
  [284] setlocal 0 .............................. tFactor = float(the milliSeconds - pMoveStart) / pMoveTime
  [286] getlocal 0 .............................. <tFactor>
  [288] pushfloat32 1.0 ......................... <1.0>
  [293] gt ...................................... <tFactor > 1.0>
  [294] jmpifz [304] ............................ if tFactor > 1.0 then
  [297] pushfloat32 1.0 ......................... <1.0>
  [302] setlocal 0 .............................. tFactor = 1.0
  [304] getprop 67 .............................. <pDestLScreen>
  [306] getprop 66 .............................. <pStartLScreen>
  [308] sub ..................................... <pDestLScreen - pStartLScreen>
  [309] getlocal 0 .............................. <tFactor>
  [311] mul ..................................... <(pDestLScreen - pStartLScreen) * tFactor>
  [312] getprop 66 .............................. <pStartLScreen>
  [314] add ..................................... <((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen>
  [315] setprop 65 .............................. pScreenLoc = ((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen
  [317] pushint8 1 .............................. <1>
  [319] setprop 74 .............................. pChanges = 1
  [321] ret
end

on render me
  [  0] getprop 74 .............................. <pChanges>
  [  2] not ..................................... <not pChanges>
  [  3] jmpifz [ 10] ............................ if not pChanges then
  [  6] pusharglistnoret 0 ...................... <>
  [  8] extcall 110 ............................. return 
  [ 10] pushzero ................................ <0>
  [ 11] setprop 74 .............................. pChanges = 0
  [ 13] getprop 118 ............................. <pShadowSpr>
  [ 15] getobjprop 83 ........................... <pShadowSpr.member>
  [ 17] getprop 82 .............................. <pDefShadowMem>
  [ 19] nteq .................................... <pShadowSpr.member <> pDefShadowMem>
  [ 20] jmpifz [ 29] ............................ if pShadowSpr.member <> pDefShadowMem then
  [ 23] getprop 118 ............................. <pShadowSpr>
  [ 25] getprop 82 .............................. <pDefShadowMem>
  [ 27] setobjprop 83 ........................... pShadowSpr.member = pDefShadowMem
  [ 29] getprop 129 ............................. <pBuffer>
  [ 31] getobjprop 134 .......................... <pBuffer.width>
  [ 33] getprop 125 ............................. <pCanvasSize>
  [ 35] pushint8 1 .............................. <1>
  [ 37] pusharglist 2 ........................... <pCanvasSize, 1>
  [ 39] objcall 126 ............................. <pCanvasSize[1]>
  [ 41] nteq .................................... <pBuffer.width <> pCanvasSize[1]>
  [ 42] getprop 129 ............................. <pBuffer>
  [ 44] getobjprop 127 .......................... <pBuffer.height>
  [ 46] getprop 125 ............................. <pCanvasSize>
  [ 48] pushint8 2 .............................. <2>
  [ 50] pusharglist 2 ........................... <pCanvasSize, 2>
  [ 52] objcall 126 ............................. <pCanvasSize[2]>
  [ 54] nteq .................................... <pBuffer.height <> pCanvasSize[2]>
  [ 55] or ...................................... <(pBuffer.width <> pCanvasSize[1]) or (pBuffer.height <> pCanvasSize[2])>
  [ 56] jmpifz [195] ............................ if (pBuffer.width <> pCanvasSize[1]) or (pBuffer.height <> pCanvasSize[2]) then
  [ 59] getprop 123 ............................. <pMember>
  [ 61] getprop 125 ............................. <pCanvasSize>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pusharglist 2 ........................... <pCanvasSize, 1>
  [ 67] objcall 126 ............................. <pCanvasSize[1]>
  [ 69] getprop 125 ............................. <pCanvasSize>
  [ 71] pushint8 2 .............................. <2>
  [ 73] pusharglist 2 ........................... <pCanvasSize, 2>
  [ 75] objcall 126 ............................. <pCanvasSize[2]>
  [ 77] getprop 125 ............................. <pCanvasSize>
  [ 79] pushint8 3 .............................. <3>
  [ 81] pusharglist 2 ........................... <pCanvasSize, 3>
  [ 83] objcall 126 ............................. <pCanvasSize[3]>
  [ 85] pusharglist 3 ........................... <pCanvasSize[1], pCanvasSize[2], pCanvasSize[3]>
  [ 87] extcall 124 ............................. <image(pCanvasSize[1], pCanvasSize[2], pCanvasSize[3])>
  [ 89] setobjprop 124 .......................... pMember.image = image(pCanvasSize[1], pCanvasSize[2], pCanvasSize[3])
  [ 91] getprop 123 ............................. <pMember>
  [ 93] pushzero ................................ <0>
  [ 94] getprop 125 ............................. <pCanvasSize>
  [ 96] pushint8 2 .............................. <2>
  [ 98] pusharglist 2 ........................... <pCanvasSize, 2>
  [100] objcall 126 ............................. <pCanvasSize[2]>
  [102] getprop 125 ............................. <pCanvasSize>
  [104] pushint8 4 .............................. <4>
  [106] pusharglist 2 ........................... <pCanvasSize, 4>
  [108] objcall 126 ............................. <pCanvasSize[4]>
  [110] add ..................................... <pCanvasSize[2] + pCanvasSize[4]>
  [111] pusharglist 2 ........................... <0, pCanvasSize[2] + pCanvasSize[4]>
  [113] extcall 62 .............................. <point(0, pCanvasSize[2] + pCanvasSize[4])>
  [115] setobjprop 128 .......................... pMember.regPoint = point(0, pCanvasSize[2] + pCanvasSize[4])
  [117] getprop 113 ............................. <pSprite>
  [119] getprop 125 ............................. <pCanvasSize>
  [121] pushint8 1 .............................. <1>
  [123] pusharglist 2 ........................... <pCanvasSize, 1>
  [125] objcall 126 ............................. <pCanvasSize[1]>
  [127] setobjprop 134 .......................... pSprite.width = pCanvasSize[1]
  [129] getprop 113 ............................. <pSprite>
  [131] getprop 125 ............................. <pCanvasSize>
  [133] pushint8 2 .............................. <2>
  [135] pusharglist 2 ........................... <pCanvasSize, 2>
  [137] objcall 126 ............................. <pCanvasSize[2]>
  [139] setobjprop 127 .......................... pSprite.height = pCanvasSize[2]
  [141] getprop 117 ............................. <pMatteSpr>
  [143] getprop 125 ............................. <pCanvasSize>
  [145] pushint8 1 .............................. <1>
  [147] pusharglist 2 ........................... <pCanvasSize, 1>
  [149] objcall 126 ............................. <pCanvasSize[1]>
  [151] setobjprop 134 .......................... pMatteSpr.width = pCanvasSize[1]
  [153] getprop 117 ............................. <pMatteSpr>
  [155] getprop 125 ............................. <pCanvasSize>
  [157] pushint8 2 .............................. <2>
  [159] pusharglist 2 ........................... <pCanvasSize, 2>
  [161] objcall 126 ............................. <pCanvasSize[2]>
  [163] setobjprop 127 .......................... pMatteSpr.height = pCanvasSize[2]
  [165] getprop 125 ............................. <pCanvasSize>
  [167] pushint8 1 .............................. <1>
  [169] pusharglist 2 ........................... <pCanvasSize, 1>
  [171] objcall 126 ............................. <pCanvasSize[1]>
  [173] getprop 125 ............................. <pCanvasSize>
  [175] pushint8 2 .............................. <2>
  [177] pusharglist 2 ........................... <pCanvasSize, 2>
  [179] objcall 126 ............................. <pCanvasSize[2]>
  [181] getprop 125 ............................. <pCanvasSize>
  [183] pushint8 3 .............................. <3>
  [185] pusharglist 2 ........................... <pCanvasSize, 3>
  [187] objcall 126 ............................. <pCanvasSize[3]>
  [189] pusharglist 3 ........................... <pCanvasSize[1], pCanvasSize[2], pCanvasSize[3]>
  [191] extcall 124 ............................. <image(pCanvasSize[1], pCanvasSize[2], pCanvasSize[3])>
  [193] setprop 129 ............................. pBuffer = image(pCanvasSize[1], pCanvasSize[2], pCanvasSize[3])
  [195] pushzero ................................ <0>
  [196] setlocal 0 .............................. tFlip = 0
  [198] getlocal 0 .............................. <tFlip>
  [200] getprop 60 .............................. <pFlipList>
  [202] getprop 156 ............................. <pDirection>
  [204] pushint8 1 .............................. <1>
  [206] add ..................................... <pDirection + 1>
  [207] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [209] objcall 126 ............................. <pFlipList[pDirection + 1]>
  [211] getprop 156 ............................. <pDirection>
  [213] nteq .................................... <pFlipList[pDirection + 1] <> pDirection>
  [214] or ...................................... <tFlip or (pFlipList[pDirection + 1] <> pDirection)>
  [215] setlocal 0 .............................. tFlip = tFlip or (pFlipList[pDirection + 1] <> pDirection)
  [217] getlocal 0 .............................. <tFlip>
  [219] getprop 156 ............................. <pDirection>
  [221] pushint8 3 .............................. <3>
  [223] eq ...................................... <pDirection = 3>
  [224] getprop 58 .............................. <pPartList>
  [226] getprop 59 .............................. <pPartIndex>
  [228] pushcons 13 ............................. <"hd">
  [230] pusharglist 2 ........................... <pPartIndex, "hd">
  [232] objcall 126 ............................. <pPartIndex["hd"]>
  [234] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [236] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [238] getobjprop 156 .......................... <pPartList[pPartIndex["hd"]].pDirection>
  [240] pushint8 4 .............................. <4>
  [242] eq ...................................... <pPartList[pPartIndex["hd"]].pDirection = 4>
  [243] and ..................................... <(pDirection = 3) and (pPartList[pPartIndex["hd"]].pDirection = 4)>
  [244] or ...................................... <tFlip or ((pDirection = 3) and (pPartList[pPartIndex["hd"]].pDirection = 4))>
  [245] setlocal 0 .............................. tFlip = tFlip or ((pDirection = 3) and (pPartList[pPartIndex["hd"]].pDirection = 4))
  [247] getlocal 0 .............................. <tFlip>
  [249] getprop 156 ............................. <pDirection>
  [251] pushint8 7 .............................. <7>
  [253] eq ...................................... <pDirection = 7>
  [254] getprop 58 .............................. <pPartList>
  [256] getprop 59 .............................. <pPartIndex>
  [258] pushcons 13 ............................. <"hd">
  [260] pusharglist 2 ........................... <pPartIndex, "hd">
  [262] objcall 126 ............................. <pPartIndex["hd"]>
  [264] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [266] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [268] getobjprop 156 .......................... <pPartList[pPartIndex["hd"]].pDirection>
  [270] pushint8 6 .............................. <6>
  [272] eq ...................................... <pPartList[pPartIndex["hd"]].pDirection = 6>
  [273] and ..................................... <(pDirection = 7) and (pPartList[pPartIndex["hd"]].pDirection = 6)>
  [274] or ...................................... <tFlip or ((pDirection = 7) and (pPartList[pPartIndex["hd"]].pDirection = 6))>
  [275] setlocal 0 .............................. tFlip = tFlip or ((pDirection = 7) and (pPartList[pPartIndex["hd"]].pDirection = 6))
  [277] getlocal 0 .............................. <tFlip>
  [279] jmpifz [339] ............................ if tFlip then / else
  [282] getprop 123 ............................. <pMember>
  [284] getprop 123 ............................. <pMember>
  [286] getchainedprop 124 ...................... <pMember.image>
  [288] getobjprop 134 .......................... <pMember.image.width>
  [290] getprop 123 ............................. <pMember>
  [292] pushsymb 128 ............................ <#regPoint>
  [294] pushint8 2 .............................. <2>
  [296] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [298] objcall 167 ............................. <pMember.regPoint[2]>
  [300] pusharglist 2 ........................... <pMember.image.width, pMember.regPoint[2]>
  [302] extcall 62 .............................. <point(pMember.image.width, pMember.regPoint[2])>
  [304] setobjprop 128 .......................... pMember.regPoint = point(pMember.image.width, pMember.regPoint[2])
  [306] getprop 90 .............................. <pXFactor>
  [308] setprop 137 ............................. pShadowFix = pXFactor
  [310] getprop 113 ............................. <pSprite>
  [312] getobjprop 218 .......................... <pSprite.flipH>
  [314] not ..................................... <not pSprite.flipH>
  [315] jmpifz [336] ............................ if not pSprite.flipH then
  [318] getprop 113 ............................. <pSprite>
  [320] pushint8 1 .............................. <1>
  [322] setobjprop 218 .......................... pSprite.flipH = 1
  [324] getprop 117 ............................. <pMatteSpr>
  [326] pushint8 1 .............................. <1>
  [328] setobjprop 218 .......................... pMatteSpr.flipH = 1
  [330] getprop 118 ............................. <pShadowSpr>
  [332] pushint8 1 .............................. <1>
  [334] setobjprop 218 .......................... pShadowSpr.flipH = 1
  [336] jmp [383]
  [339] getprop 123 ............................. <pMember>
  [341] pushzero ................................ <0>
  [342] getprop 123 ............................. <pMember>
  [344] pushsymb 128 ............................ <#regPoint>
  [346] pushint8 2 .............................. <2>
  [348] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [350] objcall 167 ............................. <pMember.regPoint[2]>
  [352] pusharglist 2 ........................... <0, pMember.regPoint[2]>
  [354] extcall 62 .............................. <point(0, pMember.regPoint[2])>
  [356] setobjprop 128 .......................... pMember.regPoint = point(0, pMember.regPoint[2])
  [358] pushzero ................................ <0>
  [359] setprop 137 ............................. pShadowFix = 0
  [361] getprop 113 ............................. <pSprite>
  [363] getobjprop 218 .......................... <pSprite.flipH>
  [365] jmpifz [383] ............................ if pSprite.flipH then
  [368] getprop 113 ............................. <pSprite>
  [370] pushzero ................................ <0>
  [371] setobjprop 218 .......................... pSprite.flipH = 0
  [373] getprop 117 ............................. <pMatteSpr>
  [375] pushzero ................................ <0>
  [376] setobjprop 218 .......................... pMatteSpr.flipH = 0
  [378] getprop 118 ............................. <pShadowSpr>
  [380] pushzero ................................ <0>
  [381] setobjprop 218 .......................... pShadowSpr.flipH = 0
  [383] getprop 105 ............................. <pCorrectLocZ>
  [385] jmpifz [405] ............................ if pCorrectLocZ then / else
  [388] getprop 162 ............................. <pLocH>
  [390] getprop 68 .............................. <pRestingHeight>
  [392] add ..................................... <pLocH + pRestingHeight>
  [393] pushint16 1000 .......................... <1000>
  [396] mul ..................................... <(pLocH + pRestingHeight) * 1000>
  [397] pushint8 2 .............................. <2>
  [399] add ..................................... <((pLocH + pRestingHeight) * 1000) + 2>
  [400] setlocal 1 .............................. tOffZ = ((pLocH + pRestingHeight) * 1000) + 2
  [402] jmp [409]
  [405] pushint8 2 .............................. <2>
  [407] setlocal 1 .............................. tOffZ = 2
  [409] getprop 113 ............................. <pSprite>
  [411] getprop 65 .............................. <pScreenLoc>
  [413] pushint8 1 .............................. <1>
  [415] pusharglist 2 ........................... <pScreenLoc, 1>
  [417] objcall 126 ............................. <pScreenLoc[1]>
  [419] setobjprop 219 .......................... pSprite.locH = pScreenLoc[1]
  [421] getprop 113 ............................. <pSprite>
  [423] getprop 65 .............................. <pScreenLoc>
  [425] pushint8 2 .............................. <2>
  [427] pusharglist 2 ........................... <pScreenLoc, 2>
  [429] objcall 126 ............................. <pScreenLoc[2]>
  [431] setobjprop 220 .......................... pSprite.locV = pScreenLoc[2]
  [433] getprop 113 ............................. <pSprite>
  [435] getprop 65 .............................. <pScreenLoc>
  [437] pushint8 3 .............................. <3>
  [439] pusharglist 2 ........................... <pScreenLoc, 3>
  [441] objcall 126 ............................. <pScreenLoc[3]>
  [443] getlocal 1 .............................. <tOffZ>
  [445] add ..................................... <pScreenLoc[3] + tOffZ>
  [446] setobjprop 221 .......................... pSprite.locZ = pScreenLoc[3] + tOffZ
  [448] getprop 117 ............................. <pMatteSpr>
  [450] getprop 113 ............................. <pSprite>
  [452] getobjprop 195 .......................... <pSprite.loc>
  [454] setobjprop 195 .......................... pMatteSpr.loc = pSprite.loc
  [456] getprop 117 ............................. <pMatteSpr>
  [458] getprop 113 ............................. <pSprite>
  [460] getobjprop 221 .......................... <pSprite.locZ>
  [462] pushint8 1 .............................. <1>
  [464] add ..................................... <pSprite.locZ + 1>
  [465] setobjprop 221 .......................... pMatteSpr.locZ = pSprite.locZ + 1
  [467] getprop 118 ............................. <pShadowSpr>
  [469] getprop 113 ............................. <pSprite>
  [471] getobjprop 195 .......................... <pSprite.loc>
  [473] getprop 137 ............................. <pShadowFix>
  [475] pushzero ................................ <0>
  [476] pusharglist 2 ........................... <[pShadowFix, 0]>
  [478] pushlist ................................ <[pShadowFix, 0]>
  [479] add ..................................... <pSprite.loc + [pShadowFix, 0]>
  [480] setobjprop 195 .......................... pShadowSpr.loc = pSprite.loc + [pShadowFix, 0]
  [482] getprop 118 ............................. <pShadowSpr>
  [484] getprop 113 ............................. <pSprite>
  [486] getobjprop 221 .......................... <pSprite.locZ>
  [488] pushint8 3 .............................. <3>
  [490] sub ..................................... <pSprite.locZ - 3>
  [491] setobjprop 221 .......................... pShadowSpr.locZ = pSprite.locZ - 3
  [493] pushzero ................................ <0>
  [494] pushzero ................................ <0>
  [495] pushzero ................................ <0>
  [496] pushzero ................................ <0>
  [497] pusharglist 4 ........................... <0, 0, 0, 0>
  [499] extcall 64 .............................. <rect(0, 0, 0, 0)>
  [501] setprop 63 .............................. pUpdateRect = rect(0, 0, 0, 0)
  [503] getprop 129 ............................. <pBuffer>
  [505] getprop 129 ............................. <pBuffer>
  [507] getobjprop 64 ........................... <pBuffer.rect>
  [509] getprop 80 .............................. <pAlphaColor>
  [511] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [513] objcall 222 ............................. pBuffer.fill(pBuffer.rect, pAlphaColor)
  [515] pushsymb 6 .............................. <#update>
  [517] getprop 58 .............................. <pPartList>
  [519] pusharglistnoret 2 ...................... <#update, pPartList>
  [521] extcall 173 ............................. call(#update, pPartList)
  [523] getprop 123 ............................. <pMember>
  [525] getchainedprop 124 ...................... <pMember.image>
  [527] getprop 129 ............................. <pBuffer>
  [529] getprop 63 .............................. <pUpdateRect>
  [531] getprop 63 .............................. <pUpdateRect>
  [533] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pUpdateRect, pUpdateRect>
  [535] objcall 203 ............................. pMember.image.copyPixels(pBuffer, pUpdateRect, pUpdateRect)
  [537] ret
end

on reDraw me
  [  0] getprop 129 ............................. <pBuffer>
  [  2] getprop 129 ............................. <pBuffer>
  [  4] getobjprop 64 ........................... <pBuffer.rect>
  [  6] getprop 80 .............................. <pAlphaColor>
  [  8] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [ 10] objcall 222 ............................. pBuffer.fill(pBuffer.rect, pAlphaColor)
  [ 12] pushsymb 32 ............................. <#render>
  [ 14] getprop 58 .............................. <pPartList>
  [ 16] pusharglistnoret 2 ...................... <#render, pPartList>
  [ 18] extcall 173 ............................. call(#render, pPartList)
  [ 20] getprop 123 ............................. <pMember>
  [ 22] getchainedprop 124 ...................... <pMember.image>
  [ 24] getprop 129 ............................. <pBuffer>
  [ 26] getprop 129 ............................. <pBuffer>
  [ 28] getobjprop 64 ........................... <pBuffer.rect>
  [ 30] getprop 129 ............................. <pBuffer>
  [ 32] getobjprop 64 ........................... <pBuffer.rect>
  [ 34] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pBuffer.rect, pBuffer.rect>
  [ 36] objcall 203 ............................. pMember.image.copyPixels(pBuffer, pBuffer.rect, pBuffer.rect)
  [ 38] ret
end

on setPartLists me, tFigure
  [  0] getprop 75 .............................. <pMainAction>
  [  2] setlocal 0 .............................. tAction = pMainAction
  [  4] pusharglist 0 ........................... <[]>
  [  6] pushlist ................................ <[]>
  [  7] setprop 58 .............................. pPartList = []
  [  9] pushcons 17 ............................. <"tl">
  [ 11] pushcons 18 ............................. <"bd">
  [ 13] pushcons 13 ............................. <"hd">
  [ 15] pusharglist 3 ........................... <["tl", "bd", "hd"]>
  [ 17] pushlist ................................ <["tl", "bd", "hd"]>
  [ 18] setlocal 1 .............................. tPartDefinition = ["tl", "bd", "hd"]
  [ 20] getparam 1 .............................. <tFigure>
  [ 22] pushsymb 166 ............................ <#word>
  [ 24] pusharglist 2 ........................... <tFigure, #word>
  [ 26] objcall 200 ............................. <tFigure.word.count>
  [ 28] pushint8 3 .............................. <3>
  [ 30] lt ...................................... <tFigure.word.count < 3>
  [ 31] jmpifz [ 38] ............................ if tFigure.word.count < 3 then
  [ 34] pushcons 27 ............................. <"0 4 AA98EF">
  [ 36] setparam 1 .............................. tFigure = "0 4 AA98EF"
  [ 38] getparam 1 .............................. <tFigure>
  [ 40] pushsymb 166 ............................ <#word>
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglist 3 ........................... <tFigure, #word, 1>
  [ 46] objcall 167 ............................. <tFigure.word[1]>
  [ 48] setlocal 2 .............................. tRaceNum = tFigure.word[1]
  [ 50] getparam 1 .............................. <tFigure>
  [ 52] pushsymb 166 ............................ <#word>
  [ 54] pushint8 2 .............................. <2>
  [ 56] pusharglist 3 ........................... <tFigure, #word, 2>
  [ 58] objcall 167 ............................. <tFigure.word[2]>
  [ 60] setlocal 3 .............................. tPalette = tFigure.word[2]
  [ 62] getlocal 3 .............................. <tPalette>
  [ 64] getobjprop 172 .......................... <tPalette.length>
  [ 66] pushint8 2 .............................. <2>
  [ 68] lt ...................................... <tPalette.length < 2>
  [ 69] jmpifz [ 82] ............................ if tPalette.length < 2 then / else
  [ 72] pushcons 28 ............................. <"00">
  [ 74] getlocal 3 .............................. <tPalette>
  [ 76] joinstr ................................. <"00" & tPalette>
  [ 77] setlocal 3 .............................. tPalette = "00" & tPalette
  [ 79] jmp [ 99]
  [ 82] getlocal 3 .............................. <tPalette>
  [ 84] getobjprop 172 .......................... <tPalette.length>
  [ 86] pushint8 3 .............................. <3>
  [ 88] lt ...................................... <tPalette.length < 3>
  [ 89] jmpifz [ 99] ............................ if tPalette.length < 3 then
  [ 92] pushcons 29 ............................. <"0">
  [ 94] getlocal 3 .............................. <tPalette>
  [ 96] joinstr ................................. <"0" & tPalette>
  [ 97] setlocal 3 .............................. tPalette = "0" & tPalette
  [ 99] getprop 98 .............................. <pPetDefinitions>
  [101] getprop 164 ............................. <pRace>
  [103] pusharglist 2 ........................... <pPetDefinitions, pRace>
  [105] objcall 126 ............................. <pPetDefinitions[pRace]>
  [107] pushsymb 225 ............................ <#paletteid>
  [109] pusharglist 2 ........................... <pPetDefinitions[pRace], #paletteid>
  [111] objcall 126 ............................. <pPetDefinitions[pRace][#paletteid]>
  [113] setlocal 4 .............................. tPaletteType = pPetDefinitions[pRace][#paletteid]
  [115] pushcons 30 ............................. <"Palette">
  [117] getlocal 4 .............................. <tPaletteType>
  [119] joinpadstr .............................. <"Palette" && tPaletteType>
  [120] getlocal 3 .............................. <tPalette>
  [122] joinpadstr .............................. <"Palette" && tPaletteType && tPalette>
  [123] setlocal 3 .............................. tPalette = "Palette" && tPaletteType && tPalette
  [125] getparam 1 .............................. <tFigure>
  [127] pushsymb 166 ............................ <#word>
  [129] pushint8 3 .............................. <3>
  [131] pusharglist 3 ........................... <tFigure, #word, 3>
  [133] objcall 167 ............................. <tFigure.word[3]>
  [135] pusharglist 1 ........................... <tFigure.word[3]>
  [137] extcall 81 .............................. <rgb(tFigure.word[3])>
  [139] setlocal 5 .............................. tColor = rgb(tFigure.word[3])
  [141] pushint8 1 .............................. <1>
  [143] setlocal 6
  [145] getlocal 6
  [147] getlocal 1 .............................. <tPartDefinition>
  [149] getobjprop 200 .......................... <tPartDefinition.count>
  [151] lteq
  [152] jmpifz [234] ............................ repeat with i = 1 to tPartDefinition.count
  [155] getlocal 1 .............................. <tPartDefinition>
  [157] getlocal 6 .............................. <i>
  [159] pusharglist 2 ........................... <tPartDefinition, i>
  [161] objcall 126 ............................. <tPartDefinition[i]>
  [163] setlocal 7 .............................. tPartSymbol = tPartDefinition[i]
  [165] pushsymb 227 ............................ <#temp>
  [167] getprop 106 ............................. <pPartClass>
  [169] pusharglist 2 ........................... <#temp, pPartClass>
  [171] extcall 226 ............................. <createObject(#temp, pPartClass)>
  [173] setlocal 8 .............................. tPartObj = createObject(#temp, pPartClass)
  [175] getprop 98 .............................. <pPetDefinitions>
  [177] getprop 164 ............................. <pRace>
  [179] pusharglist 2 ........................... <pPetDefinitions, pRace>
  [181] objcall 126 ............................. <pPetDefinitions[pRace]>
  [183] pushsymb 228 ............................ <#parts>
  [185] pusharglist 2 ........................... <pPetDefinitions[pRace], #parts>
  [187] objcall 126 ............................. <pPetDefinitions[pRace][#parts]>
  [189] getlocal 7 .............................. <tPartSymbol>
  [191] pusharglist 2 ........................... <pPetDefinitions[pRace][#parts], tPartSymbol>
  [193] objcall 126 ............................. <pPetDefinitions[pRace][#parts][tPartSymbol]>
  [195] setlocal 9 .............................. tmodel = pPetDefinitions[pRace][#parts][tPartSymbol]
  [197] getlocal 8 .............................. <tPartObj>
  [199] getlocal 7 .............................. <tPartSymbol>
  [201] getlocal 9 .............................. <tmodel>
  [203] getlocal 3 .............................. <tPalette>
  [205] getlocal 5 .............................. <tColor>
  [207] getprop 156 ............................. <pDirection>
  [209] getlocal 0 .............................. <tAction>
  [211] getparam 0 .............................. <me>
  [213] pusharglistnoret 8 ...................... <tPartObj, tPartSymbol, tmodel, tPalette, tColor, pDirection, tAction, me>
  [215] objcall 4 ............................... tPartObj.define(tPartSymbol, tmodel, tPalette, tColor, pDirection, tAction, me)
  [217] getprop 58 .............................. <pPartList>
  [219] getlocal 8 .............................. <tPartObj>
  [221] pusharglistnoret 2 ...................... <pPartList, tPartObj>
  [223] objcall 229 ............................. pPartList.add(tPartObj)
  [225] pushint8 1
  [227] getlocal 6
  [229] add
  [230] setlocal 6
  [232] endrepeat [145]
  [234] pusharglist 0 ........................... <[:]>
  [236] pushproplist ............................ <[:]>
  [237] setprop 59 .............................. pPartIndex = [:]
  [239] pushint8 1 .............................. <1>
  [241] setlocal 6
  [243] getlocal 6
  [245] getprop 58 .............................. <pPartList>
  [247] getobjprop 200 .......................... <pPartList.count>
  [249] lteq
  [250] jmpifz [280] ............................ repeat with i = 1 to pPartList.count
  [253] getprop 59 .............................. <pPartIndex>
  [255] getprop 58 .............................. <pPartList>
  [257] getlocal 6 .............................. <i>
  [259] pusharglist 2 ........................... <pPartList, i>
  [261] objcall 126 ............................. <pPartList[i]>
  [263] getobjprop 230 .......................... <pPartList[i].pPart>
  [265] getlocal 6 .............................. <i>
  [267] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [269] objcall 148 ............................. pPartIndex[pPartList[i].pPart] = i
  [271] pushint8 1
  [273] getlocal 6
  [275] add
  [276] setlocal 6
  [278] endrepeat [243]
  [280] pushint8 1 .............................. <1>
  [282] pusharglistnoret 1 ...................... <1>
  [284] extcall 110 ............................. return 1
  [286] ret
end

on arrangeParts me
  [  0] getprop 59 .............................. <pPartIndex>
  [  2] pushcons 17 ............................. <"tl">
  [  4] pusharglist 2 ........................... <pPartIndex, "tl">
  [  6] objcall 126 ............................. <pPartIndex["tl"]>
  [  8] setlocal 0 .............................. tTailInd = pPartIndex["tl"]
  [ 10] getprop 59 .............................. <pPartIndex>
  [ 12] pushcons 13 ............................. <"hd">
  [ 14] pusharglist 2 ........................... <pPartIndex, "hd">
  [ 16] objcall 126 ............................. <pPartIndex["hd"]>
  [ 18] setlocal 1 .............................. tHeadInd = pPartIndex["hd"]
  [ 20] getprop 59 .............................. <pPartIndex>
  [ 22] pushcons 18 ............................. <"bd">
  [ 24] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 26] objcall 126 ............................. <pPartIndex["bd"]>
  [ 28] setlocal 2 .............................. tBodyInd = pPartIndex["bd"]
  [ 30] getprop 58 .............................. <pPartList>
  [ 32] getlocal 0 .............................. <tTailInd>
  [ 34] pusharglist 2 ........................... <pPartList, tTailInd>
  [ 36] objcall 126 ............................. <pPartList[tTailInd]>
  [ 38] setlocal 3 .............................. tTail = pPartList[tTailInd]
  [ 40] getprop 58 .............................. <pPartList>
  [ 42] getlocal 1 .............................. <tHeadInd>
  [ 44] pusharglist 2 ........................... <pPartList, tHeadInd>
  [ 46] objcall 126 ............................. <pPartList[tHeadInd]>
  [ 48] setlocal 4 .............................. tHead = pPartList[tHeadInd]
  [ 50] getprop 58 .............................. <pPartList>
  [ 52] getlocal 2 .............................. <tBodyInd>
  [ 54] pusharglist 2 ........................... <pPartList, tBodyInd>
  [ 56] objcall 126 ............................. <pPartList[tBodyInd]>
  [ 58] setlocal 5 .............................. tBody = pPartList[tBodyInd]
  [ 60] getlocal 4 .............................. <tHead>
  [ 62] pusharglist 1 ........................... <tHead>
  [ 64] objcall 20 .............................. <tHead.getDirection()>
  [ 66] setlocal 6 .............................. tHeadDir = tHead.getDirection()
  [ 68] getlocal 6 .............................. <tHeadDir>
  [ 70] pushint8 7 .............................. <7>
  [ 72] eq ...................................... <tHeadDir = 7>
  [ 73] jmpifz [107] ............................ if tHeadDir = 7 then / else
  [ 76] getlocal 4 .............................. <tHead>
  [ 78] getlocal 5 .............................. <tBody>
  [ 80] getlocal 3 .............................. <tTail>
  [ 82] pusharglist 3 ........................... <[tHead, tBody, tTail]>
  [ 84] pushlist ................................ <[tHead, tBody, tTail]>
  [ 85] setprop 58 .............................. pPartList = [tHead, tBody, tTail]
  [ 87] pushcons 13 ............................. <"hd">
  [ 89] pushint8 1 .............................. <1>
  [ 91] pushcons 18 ............................. <"bd">
  [ 93] pushint8 2 .............................. <2>
  [ 95] pushcons 17 ............................. <"tl">
  [ 97] pushint8 3 .............................. <3>
  [ 99] pusharglist 6 ........................... <["hd": 1, "bd": 2, "tl": 3]>
  [101] pushproplist ............................ <["hd": 1, "bd": 2, "tl": 3]>
  [102] setprop 59 .............................. pPartIndex = ["hd": 1, "bd": 2, "tl": 3]
  [104] jmp [185]
  [107] getprop 156 ............................. <pDirection>
  [109] pushint8 6 .............................. <6>
  [111] eq ...................................... <pDirection = 6>
  [112] getprop 156 ............................. <pDirection>
  [114] pushint8 7 .............................. <7>
  [116] eq ...................................... <pDirection = 7>
  [117] or ...................................... <(pDirection = 6) or (pDirection = 7)>
  [118] getprop 156 ............................. <pDirection>
  [120] pushzero ................................ <0>
  [121] eq ...................................... <pDirection = 0>
  [122] or ...................................... <(pDirection = 6) or (pDirection = 7) or (pDirection = 0)>
  [123] jmpifz [157] ............................ if (pDirection = 6) or (pDirection = 7) or (pDirection = 0) then / else
  [126] getlocal 5 .............................. <tBody>
  [128] getlocal 4 .............................. <tHead>
  [130] getlocal 3 .............................. <tTail>
  [132] pusharglist 3 ........................... <[tBody, tHead, tTail]>
  [134] pushlist ................................ <[tBody, tHead, tTail]>
  [135] setprop 58 .............................. pPartList = [tBody, tHead, tTail]
  [137] pushcons 18 ............................. <"bd">
  [139] pushint8 1 .............................. <1>
  [141] pushcons 13 ............................. <"hd">
  [143] pushint8 2 .............................. <2>
  [145] pushcons 17 ............................. <"tl">
  [147] pushint8 3 .............................. <3>
  [149] pusharglist 6 ........................... <["bd": 1, "hd": 2, "tl": 3]>
  [151] pushproplist ............................ <["bd": 1, "hd": 2, "tl": 3]>
  [152] setprop 59 .............................. pPartIndex = ["bd": 1, "hd": 2, "tl": 3]
  [154] jmp [185]
  [157] getlocal 3 .............................. <tTail>
  [159] getlocal 5 .............................. <tBody>
  [161] getlocal 4 .............................. <tHead>
  [163] pusharglist 3 ........................... <[tTail, tBody, tHead]>
  [165] pushlist ................................ <[tTail, tBody, tHead]>
  [166] setprop 58 .............................. pPartList = [tTail, tBody, tHead]
  [168] pushcons 17 ............................. <"tl">
  [170] pushint8 1 .............................. <1>
  [172] pushcons 18 ............................. <"bd">
  [174] pushint8 2 .............................. <2>
  [176] pushcons 13 ............................. <"hd">
  [178] pushint8 3 .............................. <3>
  [180] pusharglist 6 ........................... <["tl": 1, "bd": 2, "hd": 3]>
  [182] pushproplist ............................ <["tl": 1, "bd": 2, "hd": 3]>
  [183] setprop 59 .............................. pPartIndex = ["tl": 1, "bd": 2, "hd": 3]
  [185] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 134 .......................... <tImg_a.width>
  [  4] getparam 1 .............................. <tImg_a>
  [  6] getobjprop 127 .......................... <tImg_a.height>
  [  8] getparam 1 .............................. <tImg_a>
  [ 10] getobjprop 245 .......................... <tImg_a.depth>
  [ 12] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth>
  [ 14] extcall 124 ............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth)>
  [ 16] setlocal 0 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth)
  [ 18] getparam 1 .............................. <tImg_a>
  [ 20] getobjprop 134 .......................... <tImg_a.width>
  [ 22] pushzero ................................ <0>
  [ 23] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 25] extcall 62 .............................. <point(tImg_a.width, 0)>
  [ 27] pushzero ................................ <0>
  [ 28] pushzero ................................ <0>
  [ 29] pusharglist 2 ........................... <0, 0>
  [ 31] extcall 62 .............................. <point(0, 0)>
  [ 33] pushzero ................................ <0>
  [ 34] getparam 1 .............................. <tImg_a>
  [ 36] getobjprop 127 .......................... <tImg_a.height>
  [ 38] pusharglist 2 ........................... <0, tImg_a.height>
  [ 40] extcall 62 .............................. <point(0, tImg_a.height)>
  [ 42] getparam 1 .............................. <tImg_a>
  [ 44] getobjprop 134 .......................... <tImg_a.width>
  [ 46] getparam 1 .............................. <tImg_a>
  [ 48] getobjprop 127 .......................... <tImg_a.height>
  [ 50] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 52] extcall 62 .............................. <point(tImg_a.width, tImg_a.height)>
  [ 54] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 56] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 57] setlocal 1 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [ 59] getlocal 0 .............................. <tImg_b>
  [ 61] getparam 1 .............................. <tImg_a>
  [ 63] getlocal 1 .............................. <tQuad>
  [ 65] getparam 1 .............................. <tImg_a>
  [ 67] getobjprop 64 ........................... <tImg_a.rect>
  [ 69] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [ 71] objcall 203 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [ 73] getlocal 0 .............................. <tImg_b>
  [ 75] pusharglistnoret 1 ...................... <tImg_b>
  [ 77] extcall 110 ............................. return tImg_b
  [ 79] ret
end

on getOffsetList me, tSize
  [  0] getparam 1 .............................. <tSize>
  [  2] pusharglist 1 ........................... <tSize>
  [  4] extcall 189 ............................. <voidp(tSize)>
  [  6] jmpifz [ 13] ............................ if voidp(tSize) then
  [  9] pushsymb 249 ............................ <#large>
  [ 11] setparam 1 .............................. tSize = #large
  [ 13] getprop 98 .............................. <pPetDefinitions>
  [ 15] getprop 164 ............................. <pRace>
  [ 17] pusharglist 2 ........................... <pPetDefinitions, pRace>
  [ 19] objcall 126 ............................. <pPetDefinitions[pRace]>
  [ 21] pushsymb 250 ............................ <#offsetid>
  [ 23] pusharglist 2 ........................... <pPetDefinitions[pRace], #offsetid>
  [ 25] objcall 126 ............................. <pPetDefinitions[pRace][#offsetid]>
  [ 27] setlocal 0 .............................. tPetOffsetId = pPetDefinitions[pRace][#offsetid]
  [ 29] getparam 1 .............................. <tSize>
  [ 31] pushsymb 249 ............................ <#large>
  [ 33] eq ...................................... <tSize = #large>
  [ 34] jmpifz [ 50] ............................ if tSize = #large then / else
  [ 37] pushcons 31 ............................. <"offset.">
  [ 39] getlocal 0 .............................. <tPetOffsetId>
  [ 41] joinstr ................................. <"offset." & tPetOffsetId>
  [ 42] pushcons 32 ............................. <".large">
  [ 44] joinstr ................................. <"offset." & tPetOffsetId & ".large">
  [ 45] setlocal 1 .............................. tListMemName = "offset." & tPetOffsetId & ".large"
  [ 47] jmp [ 60]
  [ 50] pushcons 31 ............................. <"offset.">
  [ 52] getlocal 0 .............................. <tPetOffsetId>
  [ 54] joinstr ................................. <"offset." & tPetOffsetId>
  [ 55] pushcons 33 ............................. <".small">
  [ 57] joinstr ................................. <"offset." & tPetOffsetId & ".small">
  [ 58] setlocal 1 .............................. tListMemName = "offset." & tPetOffsetId & ".small"
  [ 60] getlocal 1 .............................. <tListMemName>
  [ 62] pusharglist 1 ........................... <tListMemName>
  [ 64] extcall 119 ............................. <memberExists(tListMemName)>
  [ 66] not ..................................... <not memberExists(tListMemName)>
  [ 67] jmpifz [ 77] ............................ if not memberExists(tListMemName) then
  [ 70] pusharglist 0 ........................... <[:]>
  [ 72] pushproplist ............................ <[:]>
  [ 73] pusharglistnoret 1 ...................... <[:]>
  [ 75] extcall 110 ............................. return [:]
  [ 77] getlocal 1 .............................. <tListMemName>
  [ 79] pusharglist 1 ........................... <tListMemName>
  [ 81] extcall 95 .............................. <getmemnum(tListMemName)>
  [ 83] pusharglist 1 ........................... <getmemnum(tListMemName)>
  [ 85] extcall 83 .............................. <member(getmemnum(tListMemName))>
  [ 87] getobjprop 96 ........................... <member(getmemnum(tListMemName)).text>
  [ 89] setlocal 2 .............................. tListText = member(getmemnum(tListMemName)).text
  [ 91] pusharglist 0 ........................... <[:]>
  [ 93] pushproplist ............................ <[:]>
  [ 94] setlocal 3 .............................. tList = [:]
  [ 96] pusharglist 0 ........................... <[:]>
  [ 98] pushproplist ............................ <[:]>
  [ 99] setlocal 4 .............................. tAliasList = [:]
  [101] getmovieprop 145 ........................ <the itemDelimiter>
  [103] setlocal 5 .............................. tDelim = the itemDelimiter
  [105] pushcons 34 ............................. <"=">
  [107] setmovieprop 145 ........................ the itemDelimiter = "="
  [109] pushint8 1 .............................. <1>
  [111] setlocal 6
  [113] getlocal 6
  [115] getlocal 2 .............................. <tListText>
  [117] pushsymb 251 ............................ <#line>
  [119] pusharglist 2 ........................... <tListText, #line>
  [121] objcall 200 ............................. <tListText.line.count>
  [123] lteq
  [124] jmpifz [262] ............................ repeat with tLineNo = 1 to tListText.line.count
  [127] getlocal 2 .............................. <tListText>
  [129] pushsymb 251 ............................ <#line>
  [131] getlocal 6 .............................. <tLineNo>
  [133] pusharglist 3 ........................... <tListText, #line, tLineNo>
  [135] objcall 167 ............................. <tListText.line[tLineNo]>
  [137] setlocal 7 .............................. tLineText = tListText.line[tLineNo]
  [139] getlocal 7 .............................. <tLineText>
  [141] pushint8 1 .............................. <1>
  [143] pushint8 1 .............................. <1>
  [145] pusharglist 3 ........................... <tLineText, 1, 1>
  [147] extcall 252 ............................. <chars(tLineText, 1, 1)>
  [149] pushcons 35 ............................. <"#">
  [151] eq ...................................... <chars(tLineText, 1, 1) = "#">
  [152] not ..................................... <not (chars(tLineText, 1, 1) = "#")>
  [153] jmpifz [253] ............................ if not (chars(tLineText, 1, 1) = "#") then
  [156] getlocal 7 .............................. <tLineText>
  [158] pushsymb 253 ............................ <#item>
  [160] pusharglist 2 ........................... <tLineText, #item>
  [162] objcall 200 ............................. <tLineText.item.count>
  [164] pushint8 1 .............................. <1>
  [166] gt ...................................... <tLineText.item.count > 1>
  [167] jmpifz [253] ............................ if tLineText.item.count > 1 then
  [170] getlocal 7 .............................. <tLineText>
  [172] pushsymb 253 ............................ <#item>
  [174] pushint8 1 .............................. <1>
  [176] pusharglist 3 ........................... <tLineText, #item, 1>
  [178] objcall 167 ............................. <tLineText.item[1]>
  [180] setlocal 8 .............................. tKey = tLineText.item[1]
  [182] getlocal 7 .............................. <tLineText>
  [184] pushsymb 253 ............................ <#item>
  [186] pushint8 2 .............................. <2>
  [188] getlocal 7 .............................. <tLineText>
  [190] pushsymb 253 ............................ <#item>
  [192] pusharglist 2 ........................... <tLineText, #item>
  [194] objcall 200 ............................. <tLineText.item.count>
  [196] pusharglist 4 ........................... <tLineText, #item, 2, tLineText.item.count>
  [198] objcall 167 ............................. <tLineText.item[2..tLineText.item.count]>
  [200] setlocal 9 .............................. tValue = tLineText.item[2..tLineText.item.count]
  [202] getlocal 8 .............................. <tKey>
  [204] pusharglist 1 ........................... <tKey>
  [206] extcall 99 .............................. <value(tKey)>
  [208] setlocal 8 .............................. tKey = value(tKey)
  [210] getlocal 9 .............................. <tValue>
  [212] pusharglist 1 ........................... <tValue>
  [214] extcall 99 .............................. <value(tValue)>
  [216] setlocal 9 .............................. tValue = value(tValue)
  [218] getlocal 9 .............................. <tValue>
  [220] pusharglist 1 ........................... <tValue>
  [222] extcall 100 ............................. <ilk(tValue)>
  [224] pushsymb 254 ............................ <#list>
  [226] eq ...................................... <ilk(tValue) = #list>
  [227] jmpifz [243] ............................ if ilk(tValue) = #list then
  [230] getlocal 3 .............................. <tList>
  [232] getlocal 8 .............................. <tKey>
  [234] getlocal 9 .............................. <tValue>
  [236] pusharglistnoret 3 ...................... <tList, tKey, tValue>
  [238] objcall 148 ............................. tList[tKey] = tValue
  [240] jmp [253] ............................... next repeat
  [243] getlocal 4 .............................. <tAliasList>
  [245] getlocal 8 .............................. <tKey>
  [247] getlocal 9 .............................. <tValue>
  [249] pusharglistnoret 3 ...................... <tAliasList, tKey, tValue>
  [251] objcall 148 ............................. tAliasList[tKey] = tValue
  [253] pushint8 1
  [255] getlocal 6
  [257] add
  [258] setlocal 6
  [260] endrepeat [113]
  [262] getlocal 5 .............................. <tDelim>
  [264] setmovieprop 145 ........................ the itemDelimiter = tDelim
  [266] pushint8 1 .............................. <1>
  [268] setlocal 10
  [270] getlocal 10
  [272] getlocal 4 .............................. <tAliasList>
  [274] getobjprop 200 .......................... <tAliasList.count>
  [276] lteq
  [277] jmpifz [371] ............................ repeat with tItemNo = 1 to tAliasList.count
  [280] getlocal 4 .............................. <tAliasList>
  [282] getlocal 10 ............................. <tItemNo>
  [284] pusharglist 2 ........................... <tAliasList, tItemNo>
  [286] objcall 255 ............................. <tAliasList.getPropAt(tItemNo)>
  [288] setlocal 8 .............................. tKey = tAliasList.getPropAt(tItemNo)
  [290] getlocal 4 .............................. <tAliasList>
  [292] getlocal 10 ............................. <tItemNo>
  [294] pusharglist 2 ........................... <tAliasList, tItemNo>
  [296] objcall 126 ............................. <tAliasList[tItemNo]>
  [298] setlocal 11 ............................. tAliasKey = tAliasList[tItemNo]
  [300] getlocal 3 .............................. <tList>
  [302] getlocal 11 ............................. <tAliasKey>
  [304] pusharglist 2 ........................... <tList, tAliasKey>
  [306] objcall 256 ............................. <tList.getaProp(tAliasKey)>
  [309] pusharglist 0 ........................... <>
  [311] extcall 112 ............................. <VOID>
  [313] nteq .................................... <tList.getaProp(tAliasKey) <> VOID>
  [314] jmpifz [340] ............................ if tList.getaProp(tAliasKey) <> VOID then
  [317] getlocal 3 .............................. <tList>
  [319] getlocal 11 ............................. <tAliasKey>
  [321] pusharglist 2 ........................... <tList, tAliasKey>
  [323] objcall 126 ............................. <tList[tAliasKey]>
  [325] setlocal 12 ............................. tOffsetData = tList[tAliasKey]
  [327] getlocal 3 .............................. <tList>
  [329] getlocal 8 .............................. <tKey>
  [331] getlocal 12 ............................. <tOffsetData>
  [333] pusharglistnoret 3 ...................... <tList, tKey, tOffsetData>
  [335] objcall 148 ............................. tList[tKey] = tOffsetData
  [337] jmp [362] ............................... next repeat
  [340] getparam 0 .............................. <me>
  [342] pushcons 36 ............................. <"Invalid alias definition, no offset available: ">
  [344] getlocal 9 .............................. <tValue>
  [346] joinstr ................................. <"Invalid alias definition, no offset available: " & tValue>
  [347] getparam 0 .............................. <me>
  [349] pusharglist 1 ........................... <me>
  [351] objcall 103 ............................. <me.getID()>
  [353] pushsymb 37 ............................. <#getOffsetList>
  [355] pushsymb 326 ............................ <#minor>
  [358] pusharglistnoret 5 ...................... <me, "Invalid alias definition, no offset available: " & tValue, me.getID(), #getOffsetList, #minor>
  [360] extcall 102 ............................. error(me, "Invalid alias definition, no offset available: " & tValue, me.getID(), #getOffsetList, #minor)
  [362] pushint8 1
  [364] getlocal 10
  [366] add
  [367] setlocal 10
  [369] endrepeat [270]
  [371] getlocal 3 .............................. <tList>
  [373] pusharglistnoret 1 ...................... <tList>
  [375] extcall 110 ............................. return tList
  [377] ret
end

on getCanvasName me
  [  0] getprop 150 ............................. <pClass>
  [  2] getprop 57 .............................. <pIDPrefix>
  [  4] joinpadstr .............................. <pClass && pIDPrefix>
  [  5] getprop 56 .............................. <pName>
  [  7] joinpadstr .............................. <pClass && pIDPrefix && pName>
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 103 ............................. <me.getID()>
  [ 14] joinstr ................................. <pClass && pIDPrefix && pName & me.getID()>
  [ 15] pushcons 37 ............................. <"Canvas">
  [ 17] joinpadstr .............................. <pClass && pIDPrefix && pName & me.getID() && "Canvas">
  [ 18] pusharglistnoret 1 ...................... <pClass && pIDPrefix && pName & me.getID() && "Canvas">
  [ 20] extcall 110 ............................. return pClass && pIDPrefix && pName & me.getID() && "Canvas"
  [ 22] ret
end

on action_mv me, tProps
  [  0] pushcons 38 ............................. <"wlk">
  [  2] setprop 75 .............................. pMainAction = "wlk"
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 77 .............................. pMoving = 1
  [  8] getmovieprop 145 ........................ <the itemDelimiter>
  [ 10] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 12] pushcons 39 ............................. <",">
  [ 14] setmovieprop 145 ........................ the itemDelimiter = ","
  [ 16] getparam 1 .............................. <tProps>
  [ 18] pushsymb 166 ............................ <#word>
  [ 20] pushint8 2 .............................. <2>
  [ 22] pusharglist 3 ........................... <tProps, #word, 2>
  [ 24] objcall 167 ............................. <tProps.word[2]>
  [ 26] setlocal 1 .............................. tloc = tProps.word[2]
  [ 28] getlocal 1 .............................. <tloc>
  [ 30] pushsymb 253 ............................ <#item>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pusharglist 3 ........................... <tloc, #item, 1>
  [ 36] objcall 167 ............................. <tloc.item[1]>
  [ 38] pusharglist 1 ........................... <tloc.item[1]>
  [ 40] extcall 270 ............................. <integer(tloc.item[1])>
  [ 43] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 45] getlocal 1 .............................. <tloc>
  [ 47] pushsymb 253 ............................ <#item>
  [ 49] pushint8 2 .............................. <2>
  [ 51] pusharglist 3 ........................... <tloc, #item, 2>
  [ 53] objcall 167 ............................. <tloc.item[2]>
  [ 55] pusharglist 1 ........................... <tloc.item[2]>
  [ 57] extcall 270 ............................. <integer(tloc.item[2])>
  [ 60] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 62] getlocal 1 .............................. <tloc>
  [ 64] pushsymb 253 ............................ <#item>
  [ 66] pushint8 3 .............................. <3>
  [ 68] pusharglist 3 ........................... <tloc, #item, 3>
  [ 70] objcall 167 ............................. <tloc.item[3]>
  [ 72] pusharglist 1 ........................... <tloc.item[3]>
  [ 74] extcall 271 ............................. <getLocalFloat(tloc.item[3])>
  [ 77] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 79] getlocal 0 .............................. <tDelim>
  [ 81] setmovieprop 145 ........................ the itemDelimiter = tDelim
  [ 83] getprop 85 .............................. <pGeometry>
  [ 85] getprop 158 ............................. <pLocX>
  [ 87] getprop 160 ............................. <pLocY>
  [ 89] getprop 162 ............................. <pLocH>
  [ 91] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH>
  [ 93] objcall 175 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 95] setprop 66 .............................. pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 97] getprop 85 .............................. <pGeometry>
  [ 99] getlocal 2 .............................. <tLocX>
  [101] getlocal 3 .............................. <tLocY>
  [103] getlocal 4 .............................. <tLocH>
  [105] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [107] objcall 175 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [109] setprop 67 .............................. pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [111] getmovieprop 216 ........................ <the milliSeconds>
  [113] setprop 70 .............................. pMoveStart = the milliSeconds
  [115] getprop 58 .............................. <pPartList>
  [117] getprop 59 .............................. <pPartIndex>
  [119] pushcons 18 ............................. <"bd">
  [121] pusharglist 2 ........................... <pPartIndex, "bd">
  [123] objcall 126 ............................. <pPartIndex["bd"]>
  [125] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [127] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [129] pushcons 38 ............................. <"wlk">
  [131] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "wlk">
  [133] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("wlk")
  [135] ret
end

on action_sld me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 77 .............................. pMoving = 1
  [  4] getmovieprop 145 ........................ <the itemDelimiter>
  [  6] setlocal 0 .............................. tDelim = the itemDelimiter
  [  8] pushcons 39 ............................. <",">
  [ 10] setmovieprop 145 ........................ the itemDelimiter = ","
  [ 12] getparam 1 .............................. <tProps>
  [ 14] pushsymb 166 ............................ <#word>
  [ 16] pushint8 2 .............................. <2>
  [ 18] pusharglist 3 ........................... <tProps, #word, 2>
  [ 20] objcall 167 ............................. <tProps.word[2]>
  [ 22] setlocal 1 .............................. tloc = tProps.word[2]
  [ 24] getlocal 1 .............................. <tloc>
  [ 26] pushsymb 253 ............................ <#item>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 3 ........................... <tloc, #item, 1>
  [ 32] objcall 167 ............................. <tloc.item[1]>
  [ 34] pusharglist 1 ........................... <tloc.item[1]>
  [ 36] extcall 270 ............................. <integer(tloc.item[1])>
  [ 39] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 41] getlocal 1 .............................. <tloc>
  [ 43] pushsymb 253 ............................ <#item>
  [ 45] pushint8 2 .............................. <2>
  [ 47] pusharglist 3 ........................... <tloc, #item, 2>
  [ 49] objcall 167 ............................. <tloc.item[2]>
  [ 51] pusharglist 1 ........................... <tloc.item[2]>
  [ 53] extcall 270 ............................. <integer(tloc.item[2])>
  [ 56] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 58] getlocal 1 .............................. <tloc>
  [ 60] pushsymb 253 ............................ <#item>
  [ 62] pushint8 3 .............................. <3>
  [ 64] pusharglist 3 ........................... <tloc, #item, 3>
  [ 66] objcall 167 ............................. <tloc.item[3]>
  [ 68] pusharglist 1 ........................... <tloc.item[3]>
  [ 70] extcall 271 ............................. <getLocalFloat(tloc.item[3])>
  [ 73] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 75] getlocal 0 .............................. <tDelim>
  [ 77] setmovieprop 145 ........................ the itemDelimiter = tDelim
  [ 79] getprop 85 .............................. <pGeometry>
  [ 81] getprop 158 ............................. <pLocX>
  [ 83] getprop 160 ............................. <pLocY>
  [ 85] getprop 162 ............................. <pLocH>
  [ 87] getprop 68 .............................. <pRestingHeight>
  [ 89] add ..................................... <pLocH + pRestingHeight>
  [ 90] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 92] objcall 175 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 94] setprop 66 .............................. pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 96] getprop 85 .............................. <pGeometry>
  [ 98] getlocal 2 .............................. <tLocX>
  [100] getlocal 3 .............................. <tLocY>
  [102] getlocal 4 .............................. <tLocH>
  [104] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [106] objcall 175 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [108] setprop 67 .............................. pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [110] getmovieprop 216 ........................ <the milliSeconds>
  [112] setprop 70 .............................. pMoveStart = the milliSeconds
  [114] ret
end

on action_sit me, tProps
  [  0] pushcons 40 ............................. <"sit">
  [  2] setprop 75 .............................. pMainAction = "sit"
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 18 ............................. <"bd">
  [ 10] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 12] objcall 126 ............................. <pPartIndex["bd"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 18] pushcons 40 ............................. <"sit">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "sit">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("sit")
  [ 24] getprop 105 ............................. <pCorrectLocZ>
  [ 26] jmpifz [ 69] ............................ if pCorrectLocZ then / else
  [ 29] getparam 1 .............................. <tProps>
  [ 31] pushsymb 166 ............................ <#word>
  [ 33] pushint8 2 .............................. <2>
  [ 35] pusharglist 3 ........................... <tProps, #word, 2>
  [ 37] objcall 167 ............................. <tProps.word[2]>
  [ 39] pusharglist 1 ........................... <tProps.word[2]>
  [ 41] extcall 271 ............................. <getLocalFloat(tProps.word[2])>
  [ 44] getprop 162 ............................. <pLocH>
  [ 46] sub ..................................... <getLocalFloat(tProps.word[2]) - pLocH>
  [ 47] setprop 68 .............................. pRestingHeight = getLocalFloat(tProps.word[2]) - pLocH
  [ 49] getprop 85 .............................. <pGeometry>
  [ 51] getprop 158 ............................. <pLocX>
  [ 53] getprop 160 ............................. <pLocY>
  [ 55] getprop 162 ............................. <pLocH>
  [ 57] getprop 68 .............................. <pRestingHeight>
  [ 59] add ..................................... <pLocH + pRestingHeight>
  [ 60] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 62] objcall 175 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 64] setprop 65 .............................. pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 66] jmp [100]
  [ 69] getparam 1 .............................. <tProps>
  [ 71] pushsymb 166 ............................ <#word>
  [ 73] pushint8 2 .............................. <2>
  [ 75] pusharglist 3 ........................... <tProps, #word, 2>
  [ 77] objcall 167 ............................. <tProps.word[2]>
  [ 79] pusharglist 1 ........................... <tProps.word[2]>
  [ 81] extcall 271 ............................. <getLocalFloat(tProps.word[2])>
  [ 84] setprop 68 .............................. pRestingHeight = getLocalFloat(tProps.word[2])
  [ 86] getprop 85 .............................. <pGeometry>
  [ 88] getprop 158 ............................. <pLocX>
  [ 90] getprop 160 ............................. <pLocY>
  [ 92] getprop 68 .............................. <pRestingHeight>
  [ 94] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pRestingHeight>
  [ 96] objcall 175 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pRestingHeight)>
  [ 98] setprop 65 .............................. pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pRestingHeight)
  [100] ret
end

on action_snf me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 78 .............................. pSniffing = 1
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 13 ............................. <"hd">
  [ 10] pusharglist 2 ........................... <pPartIndex, "hd">
  [ 12] objcall 126 ............................. <pPartIndex["hd"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 18] pushcons 22 ............................. <"snf">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "snf">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("snf")
  [ 24] ret
end

on action_scr me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 23 ............................. <"scr">
  [  4] setobjprop 75 ........................... me.pMainAction = "scr"
  [  6] getprop 58 .............................. <pPartList>
  [  8] getprop 59 .............................. <pPartIndex>
  [ 10] pushcons 18 ............................. <"bd">
  [ 12] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 14] objcall 126 ............................. <pPartIndex["bd"]>
  [ 16] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 18] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 20] pushcons 23 ............................. <"scr">
  [ 22] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "scr">
  [ 24] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("scr")
  [ 26] ret
end

on action_bnd me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 24 ............................. <"bnd">
  [  4] setobjprop 75 ........................... me.pMainAction = "bnd"
  [  6] getprop 58 .............................. <pPartList>
  [  8] getprop 59 .............................. <pPartIndex>
  [ 10] pushcons 18 ............................. <"bd">
  [ 12] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 14] objcall 126 ............................. <pPartIndex["bd"]>
  [ 16] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 18] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 20] pushcons 24 ............................. <"bnd">
  [ 22] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "bnd">
  [ 24] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("bnd")
  [ 26] ret
end

on action_lay me, tProps
  [  0] pushcons 41 ............................. <"lay">
  [  2] setprop 75 .............................. pMainAction = "lay"
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 18 ............................. <"bd">
  [ 10] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 12] objcall 126 ............................. <pPartIndex["bd"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 18] pushcons 41 ............................. <"lay">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "lay">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("lay")
  [ 24] getprop 105 ............................. <pCorrectLocZ>
  [ 26] jmpifz [ 69] ............................ if pCorrectLocZ then / else
  [ 29] getparam 1 .............................. <tProps>
  [ 31] pushsymb 166 ............................ <#word>
  [ 33] pushint8 2 .............................. <2>
  [ 35] pusharglist 3 ........................... <tProps, #word, 2>
  [ 37] objcall 167 ............................. <tProps.word[2]>
  [ 39] pusharglist 1 ........................... <tProps.word[2]>
  [ 41] extcall 271 ............................. <getLocalFloat(tProps.word[2])>
  [ 44] getprop 162 ............................. <pLocH>
  [ 46] sub ..................................... <getLocalFloat(tProps.word[2]) - pLocH>
  [ 47] setprop 68 .............................. pRestingHeight = getLocalFloat(tProps.word[2]) - pLocH
  [ 49] getprop 85 .............................. <pGeometry>
  [ 51] getprop 158 ............................. <pLocX>
  [ 53] getprop 160 ............................. <pLocY>
  [ 55] getprop 162 ............................. <pLocH>
  [ 57] getprop 68 .............................. <pRestingHeight>
  [ 59] add ..................................... <pLocH + pRestingHeight>
  [ 60] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 62] objcall 175 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 64] setprop 65 .............................. pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 66] jmp [100]
  [ 69] getparam 1 .............................. <tProps>
  [ 71] pushsymb 166 ............................ <#word>
  [ 73] pushint8 2 .............................. <2>
  [ 75] pusharglist 3 ........................... <tProps, #word, 2>
  [ 77] objcall 167 ............................. <tProps.word[2]>
  [ 79] pusharglist 1 ........................... <tProps.word[2]>
  [ 81] extcall 271 ............................. <getLocalFloat(tProps.word[2])>
  [ 84] setprop 68 .............................. pRestingHeight = getLocalFloat(tProps.word[2])
  [ 86] getprop 85 .............................. <pGeometry>
  [ 88] getprop 158 ............................. <pLocX>
  [ 90] getprop 160 ............................. <pLocY>
  [ 92] getprop 68 .............................. <pRestingHeight>
  [ 94] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pRestingHeight>
  [ 96] objcall 175 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pRestingHeight)>
  [ 98] setprop 65 .............................. pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pRestingHeight)
  [100] ret
end

on action_slp me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tProps>
  [  4] pusharglistnoret 2 ...................... <me, tProps>
  [  6] objcall 45 .............................. me.action_lay(tProps)
  [  8] pushcons 42 ............................. <"slp">
  [ 10] setprop 75 .............................. pMainAction = "slp"
  [ 12] getprop 58 .............................. <pPartList>
  [ 14] getprop 59 .............................. <pPartIndex>
  [ 16] pushcons 13 ............................. <"hd">
  [ 18] pusharglist 2 ........................... <pPartIndex, "hd">
  [ 20] objcall 126 ............................. <pPartIndex["hd"]>
  [ 22] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 24] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 26] pushcons 42 ............................. <"slp">
  [ 28] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "slp">
  [ 30] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("slp")
  [ 32] ret
end

on action_jmp me, tProps
  [  0] pushcons 25 ............................. <"jmp">
  [  2] setprop 75 .............................. pMainAction = "jmp"
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 18 ............................. <"bd">
  [ 10] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 12] objcall 126 ............................. <pPartIndex["bd"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 18] pushcons 25 ............................. <"jmp">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "jmp">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("jmp")
  [ 24] ret
end

on action_ded me, tProps
  [  0] pushcons 43 ............................. <"ded">
  [  2] setprop 75 .............................. pMainAction = "ded"
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 13 ............................. <"hd">
  [ 10] pusharglist 2 ........................... <pPartIndex, "hd">
  [ 12] objcall 126 ............................. <pPartIndex["hd"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 18] pushcons 43 ............................. <"ded">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "ded">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("ded")
  [ 24] getprop 58 .............................. <pPartList>
  [ 26] getprop 59 .............................. <pPartIndex>
  [ 28] pushcons 18 ............................. <"bd">
  [ 30] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 32] objcall 126 ............................. <pPartIndex["bd"]>
  [ 34] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 36] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 38] pushcons 43 ............................. <"ded">
  [ 40] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "ded">
  [ 42] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("ded")
  [ 44] getprop 58 .............................. <pPartList>
  [ 46] getprop 59 .............................. <pPartIndex>
  [ 48] pushcons 17 ............................. <"tl">
  [ 50] pusharglist 2 ........................... <pPartIndex, "tl">
  [ 52] objcall 126 ............................. <pPartIndex["tl"]>
  [ 54] pusharglist 2 ........................... <pPartList, pPartIndex["tl"]>
  [ 56] objcall 126 ............................. <pPartList[pPartIndex["tl"]]>
  [ 58] pushcons 43 ............................. <"ded">
  [ 60] pusharglistnoret 2 ...................... <pPartList[pPartIndex["tl"]], "ded">
  [ 62] objcall 209 ............................. pPartList[pPartIndex["tl"]].defineAct("ded")
  [ 64] ret
end

on action_eat me, tProps
  [  0] getprop 58 .............................. <pPartList>
  [  2] getprop 59 .............................. <pPartIndex>
  [  4] pushcons 13 ............................. <"hd">
  [  6] pusharglist 2 ........................... <pPartIndex, "hd">
  [  8] objcall 126 ............................. <pPartIndex["hd"]>
  [ 10] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 12] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 14] pushcons 44 ............................. <"eat">
  [ 16] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "eat">
  [ 18] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("eat")
  [ 20] ret
end

on action_beg me, tProps
  [  0] pushcons 45 ............................. <"beg">
  [  2] setprop 75 .............................. pMainAction = "beg"
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 18 ............................. <"bd">
  [ 10] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 12] objcall 126 ............................. <pPartIndex["bd"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 18] pushcons 45 ............................. <"beg">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "beg">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("beg")
  [ 24] getprop 58 .............................. <pPartList>
  [ 26] getprop 59 .............................. <pPartIndex>
  [ 28] pushcons 13 ............................. <"hd">
  [ 30] pusharglist 2 ........................... <pPartIndex, "hd">
  [ 32] objcall 126 ............................. <pPartIndex["hd"]>
  [ 34] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 36] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 38] pushcons 45 ............................. <"beg">
  [ 40] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], "beg">
  [ 42] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct("beg")
  [ 44] ret
end

on action_pla me, tProps
  [  0] pushcons 26 ............................. <"pla">
  [  2] setprop 75 .............................. pMainAction = "pla"
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 18 ............................. <"bd">
  [ 10] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 12] objcall 126 ............................. <pPartIndex["bd"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 18] pushcons 26 ............................. <"pla">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "pla">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("pla")
  [ 24] ret
end

on action_rdy me, tProps
  [  0] pushcons 46 ............................. <"rdy">
  [  2] setprop 75 .............................. pMainAction = "rdy"
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 18 ............................. <"bd">
  [ 10] pusharglist 2 ........................... <pPartIndex, "bd">
  [ 12] objcall 126 ............................. <pPartIndex["bd"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["bd"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["bd"]]>
  [ 18] pushcons 46 ............................. <"rdy">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["bd"]], "rdy">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["bd"]].defineAct("rdy")
  [ 24] ret
end

on action_talk me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 79 .............................. pTalking = 1
  [  4] ret
end

on stop_action_talk me, tProps
  [  0] pushzero ................................ <0>
  [  1] setprop 79 .............................. pTalking = 0
  [  3] ret
end

on action_wav me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 76 .............................. pWaving = 1
  [  4] getprop 58 .............................. <pPartList>
  [  6] getprop 59 .............................. <pPartIndex>
  [  8] pushcons 17 ............................. <"tl">
  [ 10] pusharglist 2 ........................... <pPartIndex, "tl">
  [ 12] objcall 126 ............................. <pPartIndex["tl"]>
  [ 14] pusharglist 2 ........................... <pPartList, pPartIndex["tl"]>
  [ 16] objcall 126 ............................. <pPartList[pPartIndex["tl"]]>
  [ 18] pushcons 21 ............................. <"wav">
  [ 20] pusharglistnoret 2 ...................... <pPartList[pPartIndex["tl"]], "wav">
  [ 22] objcall 209 ............................. pPartList[pPartIndex["tl"]].defineAct("wav")
  [ 24] ret
end

on action_gst me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 166 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 167 ............................. <tProps.word[2]>
  [ 10] setlocal 0 .............................. tGesture = tProps.word[2]
  [ 12] getprop 58 .............................. <pPartList>
  [ 14] getprop 59 .............................. <pPartIndex>
  [ 16] pushcons 13 ............................. <"hd">
  [ 18] pusharglist 2 ........................... <pPartIndex, "hd">
  [ 20] objcall 126 ............................. <pPartIndex["hd"]>
  [ 22] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [ 24] objcall 126 ............................. <pPartList[pPartIndex["hd"]]>
  [ 26] getlocal 0 .............................. <tGesture>
  [ 28] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], tGesture>
  [ 30] objcall 209 ............................. pPartList[pPartIndex["hd"]].defineAct(tGesture)
  [ 32] getlocal 0 .............................. <tGesture>
  [ 34] peek 0 .................................. case tGesture of
  [ 36] pushcons 47 ............................. <"sml">
  [ 38] nteq
  [ 39] jmpifz [ 66] ............................ (case) "sml", ...
  [ 42] peek 0
  [ 44] pushcons 48 ............................. <"agr">
  [ 46] nteq
  [ 47] jmpifz [ 66] ............................ (case) ..., "agr", ...
  [ 50] peek 0
  [ 52] pushcons 49 ............................. <"sad">
  [ 54] nteq
  [ 55] jmpifz [ 66] ............................ (case) ..., "sad", ...
  [ 58] peek 0
  [ 60] pushcons 50 ............................. <"puz">
  [ 62] eq
  [ 63] jmpifz [ 86] ............................ (case) ..., "puz":
  [ 66] getprop 58 .............................. <pPartList>
  [ 68] getprop 59 .............................. <pPartIndex>
  [ 70] pushcons 17 ............................. <"tl">
  [ 72] pusharglist 2 ........................... <pPartIndex, "tl">
  [ 74] objcall 126 ............................. <pPartIndex["tl"]>
  [ 76] pusharglist 2 ........................... <pPartList, pPartIndex["tl"]>
  [ 78] objcall 126 ............................. <pPartList[pPartIndex["tl"]]>
  [ 80] getlocal 0 .............................. <tGesture>
  [ 82] pusharglistnoret 2 ...................... <pPartList[pPartIndex["tl"]], tGesture>
  [ 84] objcall 209 ............................. pPartList[pPartIndex["tl"]].defineAct(tGesture)
  [ 86] pop 1
  [ 88] ret
end
