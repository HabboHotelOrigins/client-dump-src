property pProcessorObjList, pUpdateBrokerList

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 328 ............................. pProcessorObjList = [:]
  [  6] pusharglist 0 ........................... <[:]>
  [  8] pushproplist ............................ <[:]>
  [  9] setprop 329 ............................. pUpdateBrokerList = [:]
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 53 .............................. return 1
  [ 18] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 60 .............................. me.removeProcessors()
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 53 .............................. return 1
  [ 12] ret
end

on defineClient me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] pusharglist 2 ........................... <me, tid>
  [  6] objcall 327 ............................. <me.defineProcessors(tid)>
  [  9] pusharglistnoret 1 ...................... <me.defineProcessors(tid)>
  [ 11] extcall 53 .............................. return me.defineProcessors(tid)
  [ 13] ret
end

on distributeEvent me, tTopic, tdata
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getBaseLogic()>
  [  6] pushcons 0 .............................. <"store_">
  [  8] getparam 1 .............................. <tTopic>
  [ 10] joinstr ................................. <"store_" & tTopic>
  [ 11] pusharglist 1 ........................... <"store_" & tTopic>
  [ 13] extcall 144 ............................. <symbol("store_" & tTopic)>
  [ 15] pusharglist 2 ........................... <me.getBaseLogic(), symbol("store_" & tTopic)>
  [ 17] objcall 330 ............................. <me.getBaseLogic().handler(symbol("store_" & tTopic))>
  [ 20] jmpifz [ 45] ............................ if me.getBaseLogic().handler(symbol("store_" & tTopic)) then
  [ 23] pushcons 0 .............................. <"store_">
  [ 25] getparam 1 .............................. <tTopic>
  [ 27] joinstr ................................. <"store_" & tTopic>
  [ 28] pusharglist 1 ........................... <"store_" & tTopic>
  [ 30] extcall 144 ............................. <symbol("store_" & tTopic)>
  [ 32] getparam 0 .............................. <me>
  [ 34] pusharglist 1 ........................... <me>
  [ 36] objcall 57 .............................. <me.getBaseLogic()>
  [ 38] getparam 2 .............................. <tdata>
  [ 40] pusharglistnoret 3 ...................... <symbol("store_" & tTopic), me.getBaseLogic(), tdata>
  [ 42] extcall 291 ............................. call(symbol("store_" & tTopic), me.getBaseLogic(), tdata)
  [ 45] getprop 329 ............................. <pUpdateBrokerList>
  [ 48] getparam 1 .............................. <tTopic>
  [ 50] pusharglist 2 ........................... <pUpdateBrokerList, tTopic>
  [ 52] objcall 99 .............................. <pUpdateBrokerList[tTopic]>
  [ 54] setlocal 0 .............................. tList = pUpdateBrokerList[tTopic]
  [ 56] getlocal 0 .............................. <tList>
  [ 58] pusharglist 1 ........................... <tList>
  [ 60] extcall 199 ............................. <listp(tList)>
  [ 62] not ..................................... <not listp(tList)>
  [ 63] jmpifz [ 71] ............................ if not listp(tList) then
  [ 66] pushzero ................................ <0>
  [ 67] pusharglistnoret 1 ...................... <0>
  [ 69] extcall 53 .............................. return 0
  [ 71] getlocal 0 .............................. <tList>
  [ 73] peek 0
  [ 75] pusharglist 1
  [ 77] extcall 143
  [ 79] pushint8 1
  [ 81] peek 0
  [ 83] peek 2
  [ 85] lteq
  [ 86] jmpifz [167] ............................ repeat with tListenerId in tList
  [ 89] peek 2
  [ 91] peek 1
  [ 93] pusharglist 2
  [ 95] extcall 99
  [ 97] setlocal 1
  [ 99] getprop 328 ............................. <pProcessorObjList>
  [102] getlocal 1 .............................. <tListenerId>
  [104] pusharglist 2 ........................... <pProcessorObjList, tListenerId>
  [106] objcall 99 .............................. <pProcessorObjList[tListenerId]>
  [108] setlocal 2 .............................. tListener = pProcessorObjList[tListenerId]
  [110] getlocal 2 .............................. <tListener>
  [112] pusharglist 0 ........................... <>
  [114] extcall 61 .............................. <VOID>
  [116] nteq .................................... <tListener <> VOID>
  [117] jmpifz [137] ............................ if tListener <> VOID then
  [120] pushsymb 331 ............................ <#handleUpdate>
  [123] getlocal 2 .............................. <tListener>
  [125] getparam 1 .............................. <tTopic>
  [127] getparam 2 .............................. <tdata>
  [129] pusharglistnoret 4 ...................... <#handleUpdate, tListener, tTopic, tdata>
  [131] extcall 291 ............................. call(#handleUpdate, tListener, tTopic, tdata)
  [134] jmp [162] ............................... next repeat
  [137] getprop 328 ............................. <pProcessorObjList>
  [140] getlocal 1 .............................. <tListenerId>
  [142] pusharglistnoret 2 ...................... <pProcessorObjList, tListenerId>
  [144] objcall 237 ............................. pProcessorObjList.deleteProp(tListenerId)
  [146] getprop 329 ............................. <pUpdateBrokerList>
  [149] getparam 1 .............................. <tTopic>
  [151] pusharglist 2 ........................... <pUpdateBrokerList, tTopic>
  [153] objcall 99 .............................. <pUpdateBrokerList[tTopic]>
  [155] getlocal 1 .............................. <tListenerId>
  [157] pusharglistnoret 2 ...................... <pUpdateBrokerList[tTopic], tListenerId>
  [159] objcall 332 ............................. pUpdateBrokerList[tTopic].deleteOne(tListenerId)
  [162] pushint8 1
  [164] add
  [165] endrepeat [ 81]
  [167] pop 3
  [169] pushint8 1 .............................. <1>
  [171] pusharglistnoret 1 ...................... <1>
  [173] extcall 53 .............................. return 1
  [175] ret
end

on defineProcessors me, tid
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 60 .............................. me.removeProcessors()
  [  6] getparam 1 .............................. <tid>
  [  8] pushcons 1 .............................. <".processors">
  [ 10] joinstr ................................. <tid & ".processors">
  [ 11] pusharglist 1 ........................... <tid & ".processors">
  [ 13] extcall 335 ............................. <variableExists(tid & ".processors")>
  [ 16] jmpifz [ 31] ............................ if variableExists(tid & ".processors") then
  [ 19] getparam 1 .............................. <tid>
  [ 21] pushcons 1 .............................. <".processors">
  [ 23] joinstr ................................. <tid & ".processors">
  [ 24] pusharglist 1 ........................... <tid & ".processors">
  [ 26] extcall 264 ............................. <getVariableValue(tid & ".processors")>
  [ 29] setlocal 0 .............................. tProcIdList = getVariableValue(tid & ".processors")
  [ 31] getlocal 0 .............................. <tProcIdList>
  [ 33] pusharglist 1 ........................... <tProcIdList>
  [ 35] extcall 199 ............................. <listp(tProcIdList)>
  [ 37] not ..................................... <not listp(tProcIdList)>
  [ 38] jmpifz [ 59] ............................ if not listp(tProcIdList) then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 2 .............................. <"Processor list not found:">
  [ 45] getparam 1 .............................. <tid>
  [ 47] joinpadstr .............................. <"Processor list not found:" && tid>
  [ 48] pushsymb 327 ............................ <#defineProcessors>
  [ 51] pusharglist 3 ........................... <me, "Processor list not found:" && tid, #defineProcessors>
  [ 53] extcall 62 .............................. <error(me, "Processor list not found:" && tid, #defineProcessors)>
  [ 55] pusharglistnoret 1 ...................... <error(me, "Processor list not found:" && tid, #defineProcessors)>
  [ 57] extcall 53 .............................. return error(me, "Processor list not found:" && tid, #defineProcessors)
  [ 59] pushcons 3 .............................. <"gamesystem.processor.superclass">
  [ 61] pusharglist 1 ........................... <"gamesystem.processor.superclass">
  [ 63] extcall 335 ............................. <variableExists("gamesystem.processor.superclass")>
  [ 66] not ..................................... <not variableExists("gamesystem.processor.superclass")>
  [ 67] jmpifz [ 85] ............................ if not variableExists("gamesystem.processor.superclass") then
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 4 .............................. <"gamesystem.processor.superclass not found.">
  [ 74] pushsymb 327 ............................ <#defineProcessors>
  [ 77] pusharglist 3 ........................... <me, "gamesystem.processor.superclass not found.", #defineProcessors>
  [ 79] extcall 62 .............................. <error(me, "gamesystem.processor.superclass not found.", #defineProcessors)>
  [ 81] pusharglistnoret 1 ...................... <error(me, "gamesystem.processor.superclass not found.", #defineProcessors)>
  [ 83] extcall 53 .............................. return error(me, "gamesystem.processor.superclass not found.", #defineProcessors)
  [ 85] pushcons 3 .............................. <"gamesystem.processor.superclass">
  [ 87] pusharglist 1 ........................... <"gamesystem.processor.superclass">
  [ 89] extcall 138 ............................. <getClassVariable("gamesystem.processor.superclass")>
  [ 91] setlocal 1 .............................. tBaseProcClassList = getClassVariable("gamesystem.processor.superclass")
  [ 93] getlocal 0 .............................. <tProcIdList>
  [ 95] peek 0
  [ 97] pusharglist 1
  [ 99] extcall 143
  [101] pushint8 1
  [103] peek 0
  [105] peek 2
  [107] lteq
  [108] jmpifz [453] ............................ repeat with tProcId in tProcIdList
  [111] peek 2
  [113] peek 1
  [115] pusharglist 2
  [117] extcall 99
  [119] setlocal 2
  [121] getparam 1 .............................. <tid>
  [123] pushcons 5 .............................. <"_proc_">
  [125] joinstr ................................. <tid & "_proc_">
  [126] getlocal 2 .............................. <tProcId>
  [128] joinstr ................................. <tid & "_proc_" & tProcId>
  [129] pusharglist 1 ........................... <tid & "_proc_" & tProcId>
  [131] extcall 144 ............................. <symbol(tid & "_proc_" & tProcId)>
  [133] setlocal 3 .............................. tProcObjId = symbol(tid & "_proc_" & tProcId)
  [135] getparam 1 .............................. <tid>
  [137] pushcons 6 .............................. <".">
  [139] joinstr ................................. <tid & ".">
  [140] getlocal 2 .............................. <tProcId>
  [142] joinstr ................................. <tid & "." & tProcId>
  [143] pushcons 7 .............................. <".processor.class">
  [145] joinstr ................................. <tid & "." & tProcId & ".processor.class">
  [146] pusharglist 1 ........................... <tid & "." & tProcId & ".processor.class">
  [148] extcall 138 ............................. <getClassVariable(tid & "." & tProcId & ".processor.class")>
  [150] setlocal 4 .............................. tScriptList = getClassVariable(tid & "." & tProcId & ".processor.class")
  [152] getlocal 4 .............................. <tScriptList>
  [154] pusharglist 1 ........................... <tScriptList>
  [156] extcall 199 ............................. <listp(tScriptList)>
  [158] not ..................................... <not listp(tScriptList)>
  [159] jmpifz [186] ............................ if not listp(tScriptList) then
  [162] getparam 0 .............................. <me>
  [164] pushcons 8 .............................. <"Script list not found:">
  [166] getparam 1 .............................. <tid>
  [168] joinpadstr .............................. <"Script list not found:" && tid>
  [169] pushcons 6 .............................. <".">
  [171] joinstr ................................. <"Script list not found:" && tid & ".">
  [172] getlocal 2 .............................. <tProcId>
  [174] joinstr ................................. <"Script list not found:" && tid & "." & tProcId>
  [175] pushsymb 327 ............................ <#defineProcessors>
  [178] pusharglist 3 ........................... <me, "Script list not found:" && tid & "." & tProcId, #defineProcessors>
  [180] extcall 62 .............................. <error(me, "Script list not found:" && tid & "." & tProcId, #defineProcessors)>
  [182] pusharglistnoret 1 ...................... <error(me, "Script list not found:" && tid & "." & tProcId, #defineProcessors)>
  [184] extcall 53 .............................. return error(me, "Script list not found:" && tid & "." & tProcId, #defineProcessors)
  [186] getlocal 4 .............................. <tScriptList>
  [188] pushint8 1 .............................. <1>
  [190] getlocal 1 .............................. <tBaseProcClassList>
  [192] pusharglistnoret 3 ...................... <tScriptList, 1, tBaseProcClassList>
  [194] objcall 336 ............................. tScriptList.addAt(1, tBaseProcClassList)
  [197] getlocal 3 .............................. <tProcObjId>
  [199] getlocal 4 .............................. <tScriptList>
  [201] pusharglist 2 ........................... <tProcObjId, tScriptList>
  [203] extcall 137 ............................. <createObject(tProcObjId, tScriptList)>
  [205] setlocal 5 .............................. tProcObject = createObject(tProcObjId, tScriptList)
  [207] getlocal 5 .............................. <tProcObject>
  [209] pusharglist 1 ........................... <tProcObject>
  [211] extcall 55 .............................. <objectp(tProcObject)>
  [213] not ..................................... <not objectp(tProcObject)>
  [214] jmpifz [244] ............................ if not objectp(tProcObject) then
  [217] getparam 0 .............................. <me>
  [219] pushcons 9 .............................. <"Unable to create processor object:">
  [221] getlocal 3 .............................. <tProcObjId>
  [223] joinpadstr .............................. <"Unable to create processor object:" && tProcObjId>
  [224] getlocal 4 .............................. <tScriptList>
  [226] joinpadstr .............................. <"Unable to create processor object:" && tProcObjId && tScriptList>
  [227] getlocal 4 .............................. <tScriptList>
  [229] getobjprop 282 .......................... <tScriptList.ilk>
  [232] joinpadstr .............................. <"Unable to create processor object:" && tProcObjId && tScriptList && tScriptList.ilk>
  [233] pushsymb 327 ............................ <#defineProcessors>
  [236] pusharglist 3 ........................... <me, "Unable to create processor object:" && tProcObjId && tScriptList && tScriptList.ilk, #defineProcessors>
  [238] extcall 62 .............................. <error(me, "Unable to create processor object:" && tProcObjId && tScriptList && tScriptList.ilk, #defineProcessors)>
  [240] pusharglistnoret 1 ...................... <error(me, "Unable to create processor object:" && tProcObjId && tScriptList && tScriptList.ilk, #defineProcessors)>
  [242] extcall 53 .............................. return error(me, "Unable to create processor object:" && tProcObjId && tScriptList && tScriptList.ilk, #defineProcessors)
  [244] getlocal 5 .............................. <tProcObject>
  [246] pushsymb 337 ............................ <#pFacadeId>
  [249] getparam 1 .............................. <tid>
  [251] pusharglistnoret 3 ...................... <tProcObject, #pFacadeId, tid>
  [253] objcall 146 ............................. tProcObject[#pFacadeId] = tid
  [255] getlocal 5 .............................. <tProcObject>
  [257] pushsymb 338 ............................ <#pID>
  [260] getlocal 2 .............................. <tProcId>
  [262] pusharglistnoret 3 ...................... <tProcObject, #pID, tProcId>
  [264] objcall 146 ............................. tProcObject[#pID] = tProcId
  [266] getlocal 5 .............................. <tProcObject>
  [268] getlocal 2 .............................. <tProcId>
  [270] getparam 1 .............................. <tid>
  [272] pusharglistnoret 3 ...................... <tProcObject, tProcId, tid>
  [274] objcall 339 ............................. tProcObject.setID(tProcId, tid)
  [277] getprop 328 ............................. <pProcessorObjList>
  [280] getlocal 2 .............................. <tProcId>
  [282] getlocal 5 .............................. <tProcObject>
  [284] pusharglistnoret 3 ...................... <pProcessorObjList, tProcId, tProcObject>
  [286] objcall 240 ............................. pProcessorObjList.addProp(tProcId, tProcObject)
  [288] getparam 1 .............................. <tid>
  [290] pushcons 6 .............................. <".">
  [292] joinstr ................................. <tid & ".">
  [293] getlocal 2 .............................. <tProcId>
  [295] joinstr ................................. <tid & "." & tProcId>
  [296] pushcons 10 ............................. <".processor.updates">
  [298] joinstr ................................. <tid & "." & tProcId & ".processor.updates">
  [299] pusharglist 1 ........................... <tid & "." & tProcId & ".processor.updates">
  [301] extcall 264 ............................. <getVariableValue(tid & "." & tProcId & ".processor.updates")>
  [304] setlocal 6 .............................. tProcessorRegList = getVariableValue(tid & "." & tProcId & ".processor.updates")
  [306] getlocal 6 .............................. <tProcessorRegList>
  [308] pusharglist 1 ........................... <tProcessorRegList>
  [310] extcall 199 ............................. <listp(tProcessorRegList)>
  [312] jmpifz [447] ............................ if listp(tProcessorRegList) then
  [315] getlocal 6 .............................. <tProcessorRegList>
  [317] peek 0
  [319] pusharglist 1
  [321] extcall 143
  [323] pushint8 1
  [325] peek 0
  [327] peek 2
  [329] lteq
  [330] jmpifz [445] ............................ repeat with tMsg in tProcessorRegList
  [333] peek 2
  [335] peek 1
  [337] pusharglist 2
  [339] extcall 99
  [341] setlocal 7
  [343] getlocal 7 .............................. <tMsg>
  [345] pusharglist 0 ........................... <>
  [347] extcall 61 .............................. <VOID>
  [349] eq ...................................... <tMsg = VOID>
  [350] jmpifz [374] ............................ if tMsg = VOID then
  [353] getparam 0 .............................. <me>
  [355] pushcons 11 ............................. <"Invalid format in processor message:">
  [357] getlocal 3 .............................. <tProcObjId>
  [359] joinpadstr .............................. <"Invalid format in processor message:" && tProcObjId>
  [360] getlocal 7 .............................. <tMsg>
  [362] joinpadstr .............................. <"Invalid format in processor message:" && tProcObjId && tMsg>
  [363] pushsymb 327 ............................ <#defineProcessors>
  [366] pusharglist 3 ........................... <me, "Invalid format in processor message:" && tProcObjId && tMsg, #defineProcessors>
  [368] extcall 62 .............................. <error(me, "Invalid format in processor message:" && tProcObjId && tMsg, #defineProcessors)>
  [370] pusharglistnoret 1 ...................... <error(me, "Invalid format in processor message:" && tProcObjId && tMsg, #defineProcessors)>
  [372] extcall 53 .............................. return error(me, "Invalid format in processor message:" && tProcObjId && tMsg, #defineProcessors)
  [374] getprop 329 ............................. <pUpdateBrokerList>
  [377] getlocal 7 .............................. <tMsg>
  [379] pusharglist 2 ........................... <pUpdateBrokerList, tMsg>
  [381] objcall 99 .............................. <pUpdateBrokerList[tMsg]>
  [383] pusharglist 0 ........................... <>
  [385] extcall 61 .............................. <VOID>
  [387] eq ...................................... <pUpdateBrokerList[tMsg] = VOID>
  [388] jmpifz [403] ............................ if pUpdateBrokerList[tMsg] = VOID then
  [391] getprop 329 ............................. <pUpdateBrokerList>
  [394] getlocal 7 .............................. <tMsg>
  [396] pusharglist 0 ........................... <[]>
  [398] pushlist ................................ <[]>
  [399] pusharglistnoret 3 ...................... <pUpdateBrokerList, tMsg, []>
  [401] objcall 240 ............................. pUpdateBrokerList.addProp(tMsg, [])
  [403] getprop 329 ............................. <pUpdateBrokerList>
  [406] getlocal 7 .............................. <tMsg>
  [408] pusharglist 2 ........................... <pUpdateBrokerList, tMsg>
  [410] objcall 99 .............................. <pUpdateBrokerList[tMsg]>
  [412] getlocal 2 .............................. <tProcId>
  [414] pusharglist 2 ........................... <pUpdateBrokerList[tMsg], tProcId>
  [416] objcall 340 ............................. <pUpdateBrokerList[tMsg].getPos(tProcId)>
  [419] pushzero ................................ <0>
  [420] eq ...................................... <pUpdateBrokerList[tMsg].getPos(tProcId) = 0>
  [421] jmpifz [440] ............................ if pUpdateBrokerList[tMsg].getPos(tProcId) = 0 then
  [424] getprop 329 ............................. <pUpdateBrokerList>
  [427] getlocal 7 .............................. <tMsg>
  [429] pusharglist 2 ........................... <pUpdateBrokerList, tMsg>
  [431] objcall 99 .............................. <pUpdateBrokerList[tMsg]>
  [433] getlocal 2 .............................. <tProcId>
  [435] pusharglistnoret 2 ...................... <pUpdateBrokerList[tMsg], tProcId>
  [437] objcall 341 ............................. pUpdateBrokerList[tMsg].add(tProcId)
  [440] pushint8 1
  [442] add
  [443] endrepeat [325]
  [445] pop 3
  [447] pushint8 1
  [449] add
  [450] endrepeat [103]
  [453] pop 3
  [455] pushint8 1 .............................. <1>
  [457] pusharglistnoret 1 ...................... <1>
  [459] extcall 53 .............................. return 1
  [461] ret
end

on removeProcessors me
  [  0] getprop 328 ............................. <pProcessorObjList>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 143
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 44] ............................ repeat with pProc in pProcessorObjList
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 99
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <pProc>
  [ 31] pusharglist 1 ........................... <pProc>
  [ 33] objcall 63 .............................. <pProc.getID()>
  [ 35] pusharglistnoret 1 ...................... <pProc.getID()>
  [ 37] extcall 139 ............................. removeObject(pProc.getID())
  [ 39] pushint8 1
  [ 41] add
  [ 42] endrepeat [ 11]
  [ 44] pop 3
  [ 46] pusharglist 0 ........................... <[:]>
  [ 48] pushproplist ............................ <[:]>
  [ 49] setprop 328 ............................. pProcessorObjList = [:]
  [ 52] pusharglist 0 ........................... <[:]>
  [ 54] pushproplist ............................ <[:]>
  [ 55] setprop 329 ............................. pUpdateBrokerList = [:]
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglistnoret 1 ...................... <1>
  [ 62] extcall 53 .............................. return 1
  [ 64] ret
end
