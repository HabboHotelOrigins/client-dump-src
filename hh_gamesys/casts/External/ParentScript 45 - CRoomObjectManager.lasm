property m_mp_ar_rUsepool, m_mp_ar_rFreepool, m_iRefSource, m_iAllocationSize, m_rEmptyFactor, m_rEmptyVisual

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 692 ............................. m_mp_ar_rUsepool = [:]
  [  6] pusharglist 0 ........................... <[:]>
  [  8] pushproplist ............................ <[:]>
  [  9] setprop 693 ............................. m_mp_ar_rFreepool = [:]
  [ 12] pushzero ................................ <0>
  [ 13] setprop 694 ............................. m_iRefSource = 0
  [ 16] pushint8 8 .............................. <8>
  [ 18] setprop 695 ............................. m_iAllocationSize = 8
  [ 21] pushcons 0 .............................. <"StubFactor">
  [ 23] pushcons 1 .............................. <"CEmptyFactor">
  [ 25] pusharglist 2 ........................... <"StubFactor", "CEmptyFactor">
  [ 27] extcall 137 ............................. <createObject("StubFactor", "CEmptyFactor")>
  [ 29] setprop 696 ............................. m_rEmptyFactor = createObject("StubFactor", "CEmptyFactor")
  [ 32] pushcons 2 .............................. <"StubVisual">
  [ 34] pushcons 3 .............................. <"CEmptyVisualizer">
  [ 36] pusharglist 2 ........................... <"StubVisual", "CEmptyVisualizer">
  [ 38] extcall 137 ............................. <createObject("StubVisual", "CEmptyVisualizer")>
  [ 40] setprop 697 ............................. m_rEmptyVisual = createObject("StubVisual", "CEmptyVisualizer")
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 53 .............................. return 1
  [ 49] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 684 ............................. me.clearAll()
  [  7] pushcons 0 .............................. <"StubFactor">
  [  9] pusharglistnoret 1 ...................... <"StubFactor">
  [ 11] extcall 139 ............................. removeObject("StubFactor")
  [ 13] pushcons 2 .............................. <"StubVisual">
  [ 15] pusharglistnoret 1 ...................... <"StubVisual">
  [ 17] extcall 139 ............................. removeObject("StubVisual")
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglistnoret 1 ...................... <1>
  [ 23] extcall 53 .............................. return 1
  [ 25] ret
end

on clearAll me
  [  0] getprop 692 ............................. <m_mp_ar_rUsepool>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 143
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [108] ............................ repeat with t_ar_pool in m_mp_ar_rUsepool
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 99
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <t_ar_pool>
  [ 31] getobjprop 143 .......................... <t_ar_pool.count>
  [ 33] pushzero ................................ <0>
  [ 34] gt ...................................... <t_ar_pool.count > 0>
  [ 35] jmpifz [103] ............................ if t_ar_pool.count > 0 then
  [ 38] getlocal 0 .............................. <t_ar_pool>
  [ 40] peek 0
  [ 42] pusharglist 1
  [ 44] extcall 143
  [ 46] pushint8 1
  [ 48] peek 0
  [ 50] peek 2
  [ 52] lteq
  [ 53] jmpifz [ 96] ............................ repeat with tObject in t_ar_pool
  [ 56] peek 2
  [ 58] peek 1
  [ 60] pusharglist 2
  [ 62] extcall 99
  [ 64] setlocal 1
  [ 66] getparam 0 .............................. <me>
  [ 68] getlocal 1 .............................. <tObject>
  [ 70] pushcons 4 .............................. <"CLASS">
  [ 72] pusharglist 2 ........................... <tObject, "CLASS">
  [ 74] objcall 698 ............................. <tObject.GetParam("CLASS")>
  [ 77] getlocal 1 .............................. <tObject>
  [ 79] pushcons 5 .............................. <"REF">
  [ 81] pusharglist 2 ........................... <tObject, "REF">
  [ 83] objcall 698 ............................. <tObject.GetParam("REF")>
  [ 86] pusharglistnoret 3 ...................... <me, tObject.GetParam("CLASS"), tObject.GetParam("REF")>
  [ 88] objcall 690 ............................. me.removeRoomObject(tObject.GetParam("CLASS"), tObject.GetParam("REF"))
  [ 91] pushint8 1
  [ 93] add
  [ 94] endrepeat [ 48]
  [ 96] pop 3
  [ 98] pusharglist 0 ........................... <[]>
  [100] pushlist ................................ <[]>
  [101] setlocal 0 .............................. t_ar_pool = []
  [103] pushint8 1
  [105] add
  [106] endrepeat [ 11]
  [108] pop 3
  [110] pusharglist 0 ........................... <[:]>
  [112] pushproplist ............................ <[:]>
  [113] setprop 692 ............................. m_mp_ar_rUsepool = [:]
  [116] getprop 693 ............................. <m_mp_ar_rFreepool>
  [119] peek 0
  [121] pusharglist 1
  [123] extcall 143
  [125] pushint8 1
  [127] peek 0
  [129] peek 2
  [131] lteq
  [132] jmpifz [224] ............................ repeat with t_ar_pool in m_mp_ar_rFreepool
  [135] peek 2
  [137] peek 1
  [139] pusharglist 2
  [141] extcall 99
  [143] setlocal 0
  [145] getlocal 0 .............................. <t_ar_pool>
  [147] getobjprop 143 .......................... <t_ar_pool.count>
  [149] pushzero ................................ <0>
  [150] gt ...................................... <t_ar_pool.count > 0>
  [151] jmpifz [219] ............................ if t_ar_pool.count > 0 then
  [154] getlocal 0 .............................. <t_ar_pool>
  [156] peek 0
  [158] pusharglist 1
  [160] extcall 143
  [162] pushint8 1
  [164] peek 0
  [166] peek 2
  [168] lteq
  [169] jmpifz [212] ............................ repeat with tObject in t_ar_pool
  [172] peek 2
  [174] peek 1
  [176] pusharglist 2
  [178] extcall 99
  [180] setlocal 1
  [182] getparam 0 .............................. <me>
  [184] getlocal 1 .............................. <tObject>
  [186] pushcons 4 .............................. <"CLASS">
  [188] pusharglist 2 ........................... <tObject, "CLASS">
  [190] objcall 698 ............................. <tObject.GetParam("CLASS")>
  [193] getlocal 1 .............................. <tObject>
  [195] pushcons 5 .............................. <"REF">
  [197] pusharglist 2 ........................... <tObject, "REF">
  [199] objcall 698 ............................. <tObject.GetParam("REF")>
  [202] pusharglistnoret 3 ...................... <me, tObject.GetParam("CLASS"), tObject.GetParam("REF")>
  [204] objcall 690 ............................. me.removeRoomObject(tObject.GetParam("CLASS"), tObject.GetParam("REF"))
  [207] pushint8 1
  [209] add
  [210] endrepeat [164]
  [212] pop 3
  [214] pusharglist 0 ........................... <[]>
  [216] pushlist ................................ <[]>
  [217] setlocal 0 .............................. t_ar_pool = []
  [219] pushint8 1
  [221] add
  [222] endrepeat [127]
  [224] pop 3
  [226] pusharglist 0 ........................... <[:]>
  [228] pushproplist ............................ <[:]>
  [229] setprop 693 ............................. m_mp_ar_rFreepool = [:]
  [232] ret
end

on FreeAll me
  [  0] getprop 692 ............................. <m_mp_ar_rUsepool>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 143
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 87] ............................ repeat with t_ar_pool in m_mp_ar_rUsepool
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 99
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <t_ar_pool>
  [ 31] getobjprop 143 .......................... <t_ar_pool.count>
  [ 33] pushzero ................................ <0>
  [ 34] gt ...................................... <t_ar_pool.count > 0>
  [ 35] jmpifz [ 82] ............................ if t_ar_pool.count > 0 then
  [ 38] getlocal 0 .............................. <t_ar_pool>
  [ 40] peek 0
  [ 42] pusharglist 1
  [ 44] extcall 143
  [ 46] pushint8 1
  [ 48] peek 0
  [ 50] peek 2
  [ 52] lteq
  [ 53] jmpifz [ 80] ............................ repeat with tObject in t_ar_pool
  [ 56] peek 2
  [ 58] peek 1
  [ 60] pusharglist 2
  [ 62] extcall 99
  [ 64] setlocal 1
  [ 66] getparam 0 .............................. <me>
  [ 68] getlocal 1 .............................. <tObject>
  [ 70] pusharglistnoret 2 ...................... <me, tObject>
  [ 72] objcall 688 ............................. me.FreeObject(tObject)
  [ 75] pushint8 1
  [ 77] add
  [ 78] endrepeat [ 48]
  [ 80] pop 3
  [ 82] pushint8 1
  [ 84] add
  [ 85] endrepeat [ 11]
  [ 87] pop 3
  [ 89] ret
end

on Reserve me, a_sClass, a_iCount
  [  0] getprop 693 ............................. <m_mp_ar_rFreepool>
  [  3] getparam 1 .............................. <a_sClass>
  [  5] pusharglist 2 ........................... <m_mp_ar_rFreepool, a_sClass>
  [  7] objcall 472 ............................. <m_mp_ar_rFreepool.getaProp(a_sClass)>
  [ 10] setlocal 0 .............................. tClassPool = m_mp_ar_rFreepool.getaProp(a_sClass)
  [ 12] getlocal 0 .............................. <tClassPool>
  [ 14] pusharglist 1 ........................... <tClassPool>
  [ 16] extcall 564 ............................. <voidp(tClassPool)>
  [ 19] jmpifz [ 34] ............................ if voidp(tClassPool) then
  [ 22] getprop 693 ............................. <m_mp_ar_rFreepool>
  [ 25] getparam 1 .............................. <a_sClass>
  [ 27] pusharglist 0 ........................... <[]>
  [ 29] pushlist ................................ <[]>
  [ 30] pusharglistnoret 3 ...................... <m_mp_ar_rFreepool, a_sClass, []>
  [ 32] objcall 142 ............................. m_mp_ar_rFreepool.setaProp(a_sClass, [])
  [ 34] getprop 693 ............................. <m_mp_ar_rFreepool>
  [ 37] getparam 1 .............................. <a_sClass>
  [ 39] pusharglist 2 ........................... <m_mp_ar_rFreepool, a_sClass>
  [ 41] objcall 472 ............................. <m_mp_ar_rFreepool.getaProp(a_sClass)>
  [ 44] setlocal 0 .............................. tClassPool = m_mp_ar_rFreepool.getaProp(a_sClass)
  [ 46] getparam 2 .............................. <a_iCount>
  [ 48] pusharglist 1 ........................... <a_iCount>
  [ 50] extcall 564 ............................. <voidp(a_iCount)>
  [ 53] jmpifz [ 61] ............................ if voidp(a_iCount) then
  [ 56] getprop 695 ............................. <m_iAllocationSize>
  [ 59] setparam 2 .............................. a_iCount = m_iAllocationSize
  [ 61] pushint8 1 .............................. <1>
  [ 63] setlocal 1
  [ 65] getlocal 1
  [ 67] getparam 2 .............................. <a_iCount>
  [ 69] lteq
  [ 70] jmpifz [175] ............................ repeat with i = 1 to a_iCount
  [ 73] getparam 0 .............................. <me>
  [ 75] getparam 1 .............................. <a_sClass>
  [ 77] getparam 0 .............................. <me>
  [ 79] pusharglist 1 ........................... <me>
  [ 81] objcall 691 ............................. <me.GetNewRef()>
  [ 84] pusharglist 3 ........................... <me, a_sClass, me.GetNewRef()>
  [ 86] objcall 689 ............................. <me.createRoomObject(a_sClass, me.GetNewRef())>
  [ 89] setlocal 2 .............................. tNewObject = me.createRoomObject(a_sClass, me.GetNewRef())
  [ 91] getlocal 2 .............................. <tNewObject>
  [ 93] getchainedprop 700 ...................... <tNewObject.m_rFactor>
  [ 96] pusharglistnoret 1 ...................... <tNewObject.m_rFactor>
  [ 98] objcall 1 ............................... tNewObject.m_rFactor.deconstruct()
  [100] getlocal 2 .............................. <tNewObject>
  [102] getchainedprop 701 ...................... <tNewObject.m_rVisual>
  [105] pusharglistnoret 1 ...................... <tNewObject.m_rVisual>
  [107] objcall 1 ............................... tNewObject.m_rVisual.deconstruct()
  [109] getlocal 2 .............................. <tNewObject>
  [111] pushcons 6 .............................. <"StandardFactor">
  [113] getlocal 2 .............................. <tNewObject>
  [115] pusharglist 1 ........................... <tNewObject>
  [117] objcall 702 ............................. <tNewObject.GetFactor()>
  [120] pusharglistnoret 3 ...................... <tNewObject, "StandardFactor", tNewObject.GetFactor()>
  [122] objcall 703 ............................. tNewObject.SetParam("StandardFactor", tNewObject.GetFactor())
  [125] getlocal 2 .............................. <tNewObject>
  [127] pushcons 7 .............................. <"StandardVisual">
  [129] getlocal 2 .............................. <tNewObject>
  [131] pusharglist 1 ........................... <tNewObject>
  [133] objcall 704 ............................. <tNewObject.getVisual()>
  [136] pusharglistnoret 3 ...................... <tNewObject, "StandardVisual", tNewObject.getVisual()>
  [138] objcall 703 ............................. tNewObject.SetParam("StandardVisual", tNewObject.getVisual())
  [141] getlocal 2 .............................. <tNewObject>
  [143] getprop 696 ............................. <m_rEmptyFactor>
  [146] setobjprop 700 .......................... tNewObject.m_rFactor = m_rEmptyFactor
  [149] getlocal 2 .............................. <tNewObject>
  [151] getprop 697 ............................. <m_rEmptyVisual>
  [154] setobjprop 701 .......................... tNewObject.m_rVisual = m_rEmptyVisual
  [157] getlocal 0 .............................. <tClassPool>
  [159] getlocal 2 .............................. <tNewObject>
  [161] pusharglistnoret 2 ...................... <tClassPool, tNewObject>
  [163] objcall 385 ............................. tClassPool.append(tNewObject)
  [166] pushint8 1
  [168] getlocal 1
  [170] add
  [171] setlocal 1
  [173] endrepeat [ 65]
  [175] ret
end

on newObject me, a_sClass, a_mp_params
  [  0] getprop 693 ............................. <m_mp_ar_rFreepool>
  [  3] getparam 1 .............................. <a_sClass>
  [  5] pusharglist 2 ........................... <m_mp_ar_rFreepool, a_sClass>
  [  7] objcall 472 ............................. <m_mp_ar_rFreepool.getaProp(a_sClass)>
  [ 10] setlocal 0 .............................. tClassPool = m_mp_ar_rFreepool.getaProp(a_sClass)
  [ 12] getlocal 0 .............................. <tClassPool>
  [ 14] pusharglist 1 ........................... <tClassPool>
  [ 16] extcall 564 ............................. <voidp(tClassPool)>
  [ 19] jmpifz [ 31] ............................ if voidp(tClassPool) then
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 1 .............................. <a_sClass>
  [ 26] pusharglistnoret 2 ...................... <me, a_sClass>
  [ 28] objcall 686 ............................. me.Reserve(a_sClass)
  [ 31] getprop 693 ............................. <m_mp_ar_rFreepool>
  [ 34] getparam 1 .............................. <a_sClass>
  [ 36] pusharglist 2 ........................... <m_mp_ar_rFreepool, a_sClass>
  [ 38] objcall 472 ............................. <m_mp_ar_rFreepool.getaProp(a_sClass)>
  [ 41] setlocal 0 .............................. tClassPool = m_mp_ar_rFreepool.getaProp(a_sClass)
  [ 43] getlocal 0 .............................. <tClassPool>
  [ 45] getobjprop 143 .......................... <tClassPool.count>
  [ 47] pushint8 1 .............................. <1>
  [ 49] lt ...................................... <tClassPool.count < 1>
  [ 50] jmpifz [ 62] ............................ if tClassPool.count < 1 then
  [ 53] getparam 0 .............................. <me>
  [ 55] getparam 1 .............................. <a_sClass>
  [ 57] pusharglistnoret 2 ...................... <me, a_sClass>
  [ 59] objcall 686 ............................. me.Reserve(a_sClass)
  [ 62] getprop 692 ............................. <m_mp_ar_rUsepool>
  [ 65] getparam 1 .............................. <a_sClass>
  [ 67] pusharglist 2 ........................... <m_mp_ar_rUsepool, a_sClass>
  [ 69] objcall 472 ............................. <m_mp_ar_rUsepool.getaProp(a_sClass)>
  [ 72] setlocal 1 .............................. tUsePool = m_mp_ar_rUsepool.getaProp(a_sClass)
  [ 74] getlocal 1 .............................. <tUsePool>
  [ 76] pusharglist 1 ........................... <tUsePool>
  [ 78] extcall 564 ............................. <voidp(tUsePool)>
  [ 81] jmpifz [ 96] ............................ if voidp(tUsePool) then
  [ 84] getprop 692 ............................. <m_mp_ar_rUsepool>
  [ 87] getparam 1 .............................. <a_sClass>
  [ 89] pusharglist 0 ........................... <[]>
  [ 91] pushlist ................................ <[]>
  [ 92] pusharglistnoret 3 ...................... <m_mp_ar_rUsepool, a_sClass, []>
  [ 94] objcall 142 ............................. m_mp_ar_rUsepool.setaProp(a_sClass, [])
  [ 96] getprop 692 ............................. <m_mp_ar_rUsepool>
  [ 99] getparam 1 .............................. <a_sClass>
  [101] pusharglist 2 ........................... <m_mp_ar_rUsepool, a_sClass>
  [103] objcall 472 ............................. <m_mp_ar_rUsepool.getaProp(a_sClass)>
  [106] setlocal 1 .............................. tUsePool = m_mp_ar_rUsepool.getaProp(a_sClass)
  [108] getlocal 0 .............................. <tClassPool>
  [110] getlocal 0 .............................. <tClassPool>
  [112] getobjprop 143 .......................... <tClassPool.count>
  [114] pusharglist 2 ........................... <tClassPool, tClassPool.count>
  [116] objcall 99 .............................. <tClassPool[tClassPool.count]>
  [118] setlocal 2 .............................. tObject = tClassPool[tClassPool.count]
  [120] getlocal 2 .............................. <tObject>
  [122] getlocal 2 .............................. <tObject>
  [124] pushcons 6 .............................. <"StandardFactor">
  [126] pusharglist 2 ........................... <tObject, "StandardFactor">
  [128] objcall 698 ............................. <tObject.GetParam("StandardFactor")>
  [131] setobjprop 700 .......................... tObject.m_rFactor = tObject.GetParam("StandardFactor")
  [134] getlocal 2 .............................. <tObject>
  [136] getlocal 2 .............................. <tObject>
  [138] pushcons 7 .............................. <"StandardVisual">
  [140] pusharglist 2 ........................... <tObject, "StandardVisual">
  [142] objcall 698 ............................. <tObject.GetParam("StandardVisual")>
  [145] setobjprop 701 .......................... tObject.m_rVisual = tObject.GetParam("StandardVisual")
  [148] getlocal 2 .............................. <tObject>
  [150] getchainedprop 700 ...................... <tObject.m_rFactor>
  [153] pusharglistnoret 1 ...................... <tObject.m_rFactor>
  [155] objcall 0 ............................... tObject.m_rFactor.construct()
  [157] getlocal 2 .............................. <tObject>
  [159] getchainedprop 701 ...................... <tObject.m_rVisual>
  [162] pusharglistnoret 1 ...................... <tObject.m_rVisual>
  [164] objcall 0 ............................... tObject.m_rVisual.construct()
  [166] getlocal 0 .............................. <tClassPool>
  [168] getlocal 0 .............................. <tClassPool>
  [170] getobjprop 143 .......................... <tClassPool.count>
  [172] pusharglistnoret 2 ...................... <tClassPool, tClassPool.count>
  [174] objcall 566 ............................. tClassPool.deleteAt(tClassPool.count)
  [177] getlocal 1 .............................. <tUsePool>
  [179] getlocal 2 .............................. <tObject>
  [181] pusharglistnoret 2 ...................... <tUsePool, tObject>
  [183] objcall 385 ............................. tUsePool.append(tObject)
  [186] getparam 2 .............................. <a_mp_params>
  [188] pusharglist 1 ........................... <a_mp_params>
  [190] extcall 564 ............................. <voidp(a_mp_params)>
  [193] not ..................................... <not voidp(a_mp_params)>
  [194] jmpifz [252] ............................ if not voidp(a_mp_params) then
  [197] pushint8 1 .............................. <1>
  [199] setlocal 3
  [201] getlocal 3
  [203] getparam 2 .............................. <a_mp_params>
  [205] getobjprop 143 .......................... <a_mp_params.count>
  [207] lteq
  [208] jmpifz [252] ............................ repeat with i = 1 to a_mp_params.count
  [211] getparam 2 .............................. <a_mp_params>
  [213] getlocal 3 .............................. <i>
  [215] pusharglist 2 ........................... <a_mp_params, i>
  [217] objcall 245 ............................. <a_mp_params.getPropAt(i)>
  [219] setlocal 4 .............................. tKey = a_mp_params.getPropAt(i)
  [221] getparam 2 .............................. <a_mp_params>
  [223] getlocal 4 .............................. <tKey>
  [225] pusharglist 2 ........................... <a_mp_params, tKey>
  [227] objcall 472 ............................. <a_mp_params.getaProp(tKey)>
  [230] setlocal 5 .............................. tValue = a_mp_params.getaProp(tKey)
  [232] getlocal 2 .............................. <tObject>
  [234] getlocal 4 .............................. <tKey>
  [236] getlocal 5 .............................. <tValue>
  [238] pusharglistnoret 3 ...................... <tObject, tKey, tValue>
  [240] objcall 703 ............................. tObject.SetParam(tKey, tValue)
  [243] pushint8 1
  [245] getlocal 3
  [247] add
  [248] setlocal 3
  [250] endrepeat [201]
  [252] getlocal 2 .............................. <tObject>
  [254] pusharglistnoret 1 ...................... <tObject>
  [256] extcall 53 .............................. return tObject
  [258] ret
end

on FreeObject me, a_rObject
  [  0] getparam 1 .............................. <a_rObject>
  [  2] pushcons 4 .............................. <"CLASS">
  [  4] pusharglist 2 ........................... <a_rObject, "CLASS">
  [  6] objcall 698 ............................. <a_rObject.GetParam("CLASS")>
  [  9] setlocal 0 .............................. t_sClass = a_rObject.GetParam("CLASS")
  [ 11] getprop 692 ............................. <m_mp_ar_rUsepool>
  [ 14] getlocal 0 .............................. <t_sClass>
  [ 16] pusharglist 2 ........................... <m_mp_ar_rUsepool, t_sClass>
  [ 18] objcall 472 ............................. <m_mp_ar_rUsepool.getaProp(t_sClass)>
  [ 21] setlocal 1 .............................. tUsePool = m_mp_ar_rUsepool.getaProp(t_sClass)
  [ 23] getlocal 1 .............................. <tUsePool>
  [ 25] getparam 1 .............................. <a_rObject>
  [ 27] pusharglist 2 ........................... <tUsePool, a_rObject>
  [ 29] objcall 712 ............................. <tUsePool.getOne(a_rObject)>
  [ 32] setlocal 2 .............................. t_iIndex = tUsePool.getOne(a_rObject)
  [ 34] getlocal 2 .............................. <t_iIndex>
  [ 36] pushzero ................................ <0>
  [ 37] eq ...................................... <t_iIndex = 0>
  [ 38] jmpifz [ 56] ............................ if t_iIndex = 0 then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 8 .............................. <"ERROR : Objectpool reference mismatch!">
  [ 45] pushsymb 688 ............................ <#FreeObject>
  [ 48] pusharglist 3 ........................... <me, "ERROR : Objectpool reference mismatch!", #FreeObject>
  [ 50] extcall 62 .............................. <error(me, "ERROR : Objectpool reference mismatch!", #FreeObject)>
  [ 52] pusharglistnoret 1 ...................... <error(me, "ERROR : Objectpool reference mismatch!", #FreeObject)>
  [ 54] extcall 53 .............................. return error(me, "ERROR : Objectpool reference mismatch!", #FreeObject)
  [ 56] getlocal 1 .............................. <tUsePool>
  [ 58] getlocal 2 .............................. <t_iIndex>
  [ 60] pusharglistnoret 2 ...................... <tUsePool, t_iIndex>
  [ 62] objcall 566 ............................. tUsePool.deleteAt(t_iIndex)
  [ 65] getprop 693 ............................. <m_mp_ar_rFreepool>
  [ 68] getlocal 0 .............................. <t_sClass>
  [ 70] pusharglist 2 ........................... <m_mp_ar_rFreepool, t_sClass>
  [ 72] objcall 472 ............................. <m_mp_ar_rFreepool.getaProp(t_sClass)>
  [ 75] setlocal 3 .............................. tClassPool = m_mp_ar_rFreepool.getaProp(t_sClass)
  [ 77] getlocal 3 .............................. <tClassPool>
  [ 79] getparam 1 .............................. <a_rObject>
  [ 81] pusharglistnoret 2 ...................... <tClassPool, a_rObject>
  [ 83] objcall 385 ............................. tClassPool.append(a_rObject)
  [ 86] getparam 1 .............................. <a_rObject>
  [ 88] getchainedprop 700 ...................... <a_rObject.m_rFactor>
  [ 91] pusharglistnoret 1 ...................... <a_rObject.m_rFactor>
  [ 93] objcall 1 ............................... a_rObject.m_rFactor.deconstruct()
  [ 95] getparam 1 .............................. <a_rObject>
  [ 97] getchainedprop 701 ...................... <a_rObject.m_rVisual>
  [100] pusharglistnoret 1 ...................... <a_rObject.m_rVisual>
  [102] objcall 1 ............................... a_rObject.m_rVisual.deconstruct()
  [104] getparam 1 .............................. <a_rObject>
  [106] pushcons 6 .............................. <"StandardFactor">
  [108] getparam 1 .............................. <a_rObject>
  [110] pusharglist 1 ........................... <a_rObject>
  [112] objcall 702 ............................. <a_rObject.GetFactor()>
  [115] pusharglistnoret 3 ...................... <a_rObject, "StandardFactor", a_rObject.GetFactor()>
  [117] objcall 703 ............................. a_rObject.SetParam("StandardFactor", a_rObject.GetFactor())
  [120] getparam 1 .............................. <a_rObject>
  [122] pushcons 7 .............................. <"StandardVisual">
  [124] getparam 1 .............................. <a_rObject>
  [126] pusharglist 1 ........................... <a_rObject>
  [128] objcall 704 ............................. <a_rObject.getVisual()>
  [131] pusharglistnoret 3 ...................... <a_rObject, "StandardVisual", a_rObject.getVisual()>
  [133] objcall 703 ............................. a_rObject.SetParam("StandardVisual", a_rObject.getVisual())
  [136] getparam 1 .............................. <a_rObject>
  [138] getprop 696 ............................. <m_rEmptyFactor>
  [141] setobjprop 700 .......................... a_rObject.m_rFactor = m_rEmptyFactor
  [144] getparam 1 .............................. <a_rObject>
  [146] getprop 697 ............................. <m_rEmptyVisual>
  [149] setobjprop 701 .......................... a_rObject.m_rVisual = m_rEmptyVisual
  [152] pushint8 1 .............................. <1>
  [154] pusharglistnoret 1 ...................... <1>
  [156] extcall 53 .............................. return 1
  [158] ret
end

on createRoomObject me, a_sClass, a_iRef, a_mp_params
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 716 ............................. <CreateXML()>
  [  5] setlocal 0 .............................. t_rXML = CreateXML()
  [  7] getlocal 0 .............................. <t_rXML>
  [  9] pushcons 9 .............................. <"empty.node.xml">
  [ 11] pusharglist 1 ........................... <"empty.node.xml">
  [ 13] extcall 717 ............................. <getMember("empty.node.xml")>
  [ 16] getobjprop 718 .......................... <getMember("empty.node.xml").text>
  [ 19] pusharglistnoret 2 ...................... <t_rXML, getMember("empty.node.xml").text>
  [ 21] objcall 719 ............................. t_rXML.open(getMember("empty.node.xml").text)
  [ 24] getlocal 0 .............................. <t_rXML>
  [ 26] pushcons 10 ............................. <"type">
  [ 28] pushcons 11 ............................. <"NODE">
  [ 30] pusharglistnoret 3 ...................... <t_rXML, "type", "NODE">
  [ 32] objcall 720 ............................. t_rXML.Search("type", "NODE")
  [ 35] getlocal 0 .............................. <t_rXML>
  [ 37] pushcons 5 .............................. <"REF">
  [ 39] getparam 2 .............................. <a_iRef>
  [ 41] pusharglistnoret 3 ...................... <t_rXML, "REF", a_iRef>
  [ 43] objcall 703 ............................. t_rXML.SetParam("REF", a_iRef)
  [ 46] getlocal 0 .............................. <t_rXML>
  [ 48] pushcons 4 .............................. <"CLASS">
  [ 50] getparam 1 .............................. <a_sClass>
  [ 52] pusharglistnoret 3 ...................... <t_rXML, "CLASS", a_sClass>
  [ 54] objcall 703 ............................. t_rXML.SetParam("CLASS", a_sClass)
  [ 57] pushsymb 419 ............................ <#room>
  [ 60] pusharglist 1 ........................... <#room>
  [ 62] extcall 418 ............................. <getThread(#room)>
  [ 65] pusharglist 1 ........................... <getThread(#room)>
  [ 67] objcall 67 .............................. <getThread(#room).getComponent()>
  [ 69] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 71] objcall 721 ............................. <getThread(#room).getComponent()._AccessRoom()>
  [ 74] setlocal 1 .............................. t_rRoomContext = getThread(#room).getComponent()._AccessRoom()
  [ 76] getlocal 1 .............................. <t_rRoomContext>
  [ 78] getparam 2 .............................. <a_iRef>
  [ 80] getparam 1 .............................. <a_sClass>
  [ 82] getlocal 0 .............................. <t_rXML>
  [ 84] pusharglistnoret 4 ...................... <t_rRoomContext, a_iRef, a_sClass, t_rXML>
  [ 86] objcall 722 ............................. t_rRoomContext._CreateIndexed(a_iRef, a_sClass, t_rXML)
  [ 89] getlocal 1 .............................. <t_rRoomContext>
  [ 91] getparam 2 .............................. <a_iRef>
  [ 93] getparam 1 .............................. <a_sClass>
  [ 95] pusharglist 3 ........................... <t_rRoomContext, a_iRef, a_sClass>
  [ 97] objcall 723 ............................. <t_rRoomContext._AccessIndexed(a_iRef, a_sClass)>
  [100] setlocal 2 .............................. tNewObject = t_rRoomContext._AccessIndexed(a_iRef, a_sClass)
  [102] getlocal 2 .............................. <tNewObject>
  [104] pushcons 12 ............................. <"Reference">
  [106] getparam 2 .............................. <a_iRef>
  [108] pusharglistnoret 3 ...................... <tNewObject, "Reference", a_iRef>
  [110] objcall 703 ............................. tNewObject.SetParam("Reference", a_iRef)
  [113] getparam 3 .............................. <a_mp_params>
  [115] pusharglist 1 ........................... <a_mp_params>
  [117] extcall 564 ............................. <voidp(a_mp_params)>
  [120] not ..................................... <not voidp(a_mp_params)>
  [121] jmpifz [179] ............................ if not voidp(a_mp_params) then
  [124] pushint8 1 .............................. <1>
  [126] setlocal 3
  [128] getlocal 3
  [130] getparam 3 .............................. <a_mp_params>
  [132] getobjprop 143 .......................... <a_mp_params.count>
  [134] lteq
  [135] jmpifz [179] ............................ repeat with i = 1 to a_mp_params.count
  [138] getparam 3 .............................. <a_mp_params>
  [140] getlocal 3 .............................. <i>
  [142] pusharglist 2 ........................... <a_mp_params, i>
  [144] objcall 245 ............................. <a_mp_params.getPropAt(i)>
  [146] setlocal 4 .............................. tKey = a_mp_params.getPropAt(i)
  [148] getparam 3 .............................. <a_mp_params>
  [150] getlocal 4 .............................. <tKey>
  [152] pusharglist 2 ........................... <a_mp_params, tKey>
  [154] objcall 472 ............................. <a_mp_params.getaProp(tKey)>
  [157] setlocal 5 .............................. tValue = a_mp_params.getaProp(tKey)
  [159] getlocal 2 .............................. <tNewObject>
  [161] getlocal 4 .............................. <tKey>
  [163] getlocal 5 .............................. <tValue>
  [165] pusharglistnoret 3 ...................... <tNewObject, tKey, tValue>
  [167] objcall 703 ............................. tNewObject.SetParam(tKey, tValue)
  [170] pushint8 1
  [172] getlocal 3
  [174] add
  [175] setlocal 3
  [177] endrepeat [128]
  [179] getlocal 2 .............................. <tNewObject>
  [181] pusharglistnoret 1 ...................... <tNewObject>
  [183] extcall 53 .............................. return tNewObject
  [185] ret
end

on removeRoomObject me, a_sClass, a_iRef
  [  0] pushsymb 419 ............................ <#room>
  [  3] pusharglist 1 ........................... <#room>
  [  5] extcall 418 ............................. <getThread(#room)>
  [  8] pusharglist 1 ........................... <getThread(#room)>
  [ 10] objcall 67 .............................. <getThread(#room).getComponent()>
  [ 12] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 14] objcall 721 ............................. <getThread(#room).getComponent()._AccessRoom()>
  [ 17] setlocal 0 .............................. t_rRoomContext = getThread(#room).getComponent()._AccessRoom()
  [ 19] getlocal 0 .............................. <t_rRoomContext>
  [ 21] pusharglist 1 ........................... <t_rRoomContext>
  [ 23] extcall 564 ............................. <voidp(t_rRoomContext)>
  [ 26] not ..................................... <not voidp(t_rRoomContext)>
  [ 27] jmpifz [ 41] ............................ if not voidp(t_rRoomContext) then
  [ 30] getlocal 0 .............................. <t_rRoomContext>
  [ 32] getparam 2 .............................. <a_iRef>
  [ 34] getparam 1 .............................. <a_sClass>
  [ 36] pusharglistnoret 3 ...................... <t_rRoomContext, a_iRef, a_sClass>
  [ 38] objcall 727 ............................. t_rRoomContext._RemoveIndexed(a_iRef, a_sClass)
  [ 41] ret
end

on GetNewRef me
  [  0] getprop 694 ............................. <m_iRefSource>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <m_iRefSource + 1>
  [  6] setprop 694 ............................. m_iRefSource = m_iRefSource + 1
  [  9] getprop 694 ............................. <m_iRefSource>
  [ 12] pusharglistnoret 1 ...................... <m_iRefSource>
  [ 14] extcall 53 .............................. return m_iRefSource
  [ 16] ret
end
