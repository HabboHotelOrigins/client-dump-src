property pDiscoTimer

on construct me
  [  0] pushzero ................................ <0>
  [  1] setprop 5 ............................... pDiscoTimer = 0
  [  3] pushint8 1 .............................. <1>
  [  5] pusharglistnoret 1 ...................... <1>
  [  7] extcall 6 ............................... return 1
  [  9] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 9 ............................... <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 8 ............................... <removeUpdate(me.getID())>
  [ 10] pusharglistnoret 1 ...................... <removeUpdate(me.getID())>
  [ 12] extcall 6 ............................... return removeUpdate(me.getID())
  [ 14] ret
end

on prepare me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 9 ............................... <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 10 .............................. <receiveUpdate(me.getID())>
  [ 10] pusharglistnoret 1 ...................... <receiveUpdate(me.getID())>
  [ 12] extcall 6 ............................... return receiveUpdate(me.getID())
  [ 14] ret
end

on update me
  [  0] getmovieprop 11 ......................... <the milliSeconds>
  [  2] getprop 5 ............................... <pDiscoTimer>
  [  4] pushint16 1000 .......................... <1000>
  [  7] add ..................................... <pDiscoTimer + 1000>
  [  8] lt ...................................... <the milliSeconds < (pDiscoTimer + 1000)>
  [  9] jmpifz [ 18] ............................ if the milliSeconds < (pDiscoTimer + 1000) then
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 6 ............................... return 1
  [ 18] getmovieprop 11 ......................... <the milliSeconds>
  [ 20] setprop 5 ............................... pDiscoTimer = the milliSeconds
  [ 22] pushsymb 13 ............................. <#room>
  [ 24] pusharglist 1 ........................... <#room>
  [ 26] extcall 12 .............................. <getThread(#room)>
  [ 28] setlocal 0 .............................. tThread = getThread(#room)
  [ 30] getlocal 0 .............................. <tThread>
  [ 32] pushzero ................................ <0>
  [ 33] eq ...................................... <tThread = 0>
  [ 34] jmpifz [ 42] ............................ if tThread = 0 then
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 6 ............................... return 0
  [ 42] getlocal 0 .............................. <tThread>
  [ 44] pusharglist 1 ........................... <tThread>
  [ 46] objcall 14 .............................. <tThread.getInterface()>
  [ 48] pusharglist 1 ........................... <tThread.getInterface()>
  [ 50] objcall 15 .............................. <tThread.getInterface().getRoomVisualizer()>
  [ 52] setlocal 1 .............................. tRoomVis = tThread.getInterface().getRoomVisualizer()
  [ 54] getlocal 1 .............................. <tRoomVis>
  [ 56] pushzero ................................ <0>
  [ 57] eq ...................................... <tRoomVis = 0>
  [ 58] jmpifz [ 66] ............................ if tRoomVis = 0 then
  [ 61] pushzero ................................ <0>
  [ 62] pusharglistnoret 1 ...................... <0>
  [ 64] extcall 6 ............................... return 0
  [ 66] pushint8 7 .............................. <7>
  [ 68] pusharglist 1 ........................... <7>
  [ 70] extcall 17 .............................. <random(7)>
  [ 72] pusharglist 1 ........................... <random(7)>
  [ 74] extcall 16 .............................. <string(random(7))>
  [ 76] setlocal 2 .............................. tNum = string(random(7))
  [ 78] pushsymb 13 ............................. <#room>
  [ 80] pusharglist 1 ........................... <#room>
  [ 82] extcall 12 .............................. <getThread(#room)>
  [ 84] pusharglist 1 ........................... <getThread(#room)>
  [ 86] objcall 14 .............................. <getThread(#room).getInterface()>
  [ 88] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 90] objcall 15 .............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 92] pushcons 0 .............................. <"show_discofloor">
  [ 94] pusharglist 2 ........................... <getThread(#room).getInterface().getRoomVisualizer(), "show_discofloor">
  [ 96] objcall 18 .............................. <getThread(#room).getInterface().getRoomVisualizer().getSprById("show_discofloor")>
  [ 98] setlocal 3 .............................. tSpr = getThread(#room).getInterface().getRoomVisualizer().getSprById("show_discofloor")
  [100] getlocal 3 .............................. <tSpr>
  [102] pushzero ................................ <0>
  [103] nteq .................................... <tSpr <> 0>
  [104] jmpifz [129] ............................ if tSpr <> 0 then / else
  [107] getlocal 3 .............................. <tSpr>
  [109] getchainedprop 19 ....................... <tSpr.member>
  [111] pushcons 1 .............................. <"chrome_floorpalette">
  [113] getlocal 2 .............................. <tNum>
  [115] joinstr ................................. <"chrome_floorpalette" & tNum>
  [116] pusharglist 1 ........................... <"chrome_floorpalette" & tNum>
  [118] extcall 20 .............................. <getmemnum("chrome_floorpalette" & tNum)>
  [120] pusharglist 1 ........................... <getmemnum("chrome_floorpalette" & tNum)>
  [122] extcall 19 .............................. <member(getmemnum("chrome_floorpalette" & tNum))>
  [124] setobjprop 21 ........................... tSpr.member.paletteRef = member(getmemnum("chrome_floorpalette" & tNum))
  [126] jmp [142]
  [129] getparam 0 .............................. <me>
  [131] pushcons 2 .............................. <"Sprite not found:">
  [133] pushcons 0 .............................. <"show_discofloor">
  [135] joinpadstr .............................. <"Sprite not found:" && "show_discofloor">
  [136] pushsymb 4 .............................. <#showprogram>
  [138] pusharglistnoret 3 ...................... <me, "Sprite not found:" && "show_discofloor", #showprogram>
  [140] extcall 22 .............................. error(me, "Sprite not found:" && "show_discofloor", #showprogram)
  [142] ret
end

on showprogram me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pusharglist 1 ........................... <tMsg>
  [  4] extcall 27 .............................. <listp(tMsg)>
  [  6] jmpifz [115] ............................ if listp(tMsg) then
  [  9] getparam 1 .............................. <tMsg>
  [ 11] pushsymb 28 ............................. <#show_dest>
  [ 13] pusharglist 2 ........................... <tMsg, #show_dest>
  [ 15] objcall 29 .............................. <tMsg[#show_dest]>
  [ 17] setlocal 0 .............................. tDst = tMsg[#show_dest]
  [ 19] getparam 1 .............................. <tMsg>
  [ 21] pushsymb 30 ............................. <#show_command>
  [ 23] pusharglist 2 ........................... <tMsg, #show_command>
  [ 25] objcall 29 .............................. <tMsg[#show_command]>
  [ 27] setlocal 1 .............................. tCmd = tMsg[#show_command]
  [ 29] getparam 1 .............................. <tMsg>
  [ 31] pushsymb 31 ............................. <#show_params>
  [ 33] pusharglist 2 ........................... <tMsg, #show_params>
  [ 35] objcall 29 .............................. <tMsg[#show_params]>
  [ 37] setlocal 2 .............................. tNum = tMsg[#show_params]
  [ 39] pushsymb 13 ............................. <#room>
  [ 41] pusharglist 1 ........................... <#room>
  [ 43] extcall 12 .............................. <getThread(#room)>
  [ 45] pusharglist 1 ........................... <getThread(#room)>
  [ 47] objcall 14 .............................. <getThread(#room).getInterface()>
  [ 49] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 51] objcall 15 .............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 53] pushcons 3 .............................. <"show_">
  [ 55] getlocal 0 .............................. <tDst>
  [ 57] joinstr ................................. <"show_" & tDst>
  [ 58] pusharglist 2 ........................... <getThread(#room).getInterface().getRoomVisualizer(), "show_" & tDst>
  [ 60] objcall 18 .............................. <getThread(#room).getInterface().getRoomVisualizer().getSprById("show_" & tDst)>
  [ 62] setlocal 3 .............................. tSpr = getThread(#room).getInterface().getRoomVisualizer().getSprById("show_" & tDst)
  [ 64] getlocal 3 .............................. <tSpr>
  [ 66] pushzero ................................ <0>
  [ 67] nteq .................................... <tSpr <> 0>
  [ 68] jmpifz [ 99] ............................ if tSpr <> 0 then / else
  [ 71] getlocal 1 .............................. <tCmd>
  [ 73] peek 0 .................................. case tCmd of
  [ 75] pushcons 4 .............................. <"fade">
  [ 77] eq
  [ 78] jmpifz [ 94] ............................ (case) "fade":
  [ 81] getlocal 3 .............................. <tSpr>
  [ 83] pushcons 5 .............................. <"#">
  [ 85] getlocal 2 .............................. <tNum>
  [ 87] joinstr ................................. <"#" & tNum>
  [ 88] pusharglist 1 ........................... <"#" & tNum>
  [ 90] extcall 32 .............................. <rgb("#" & tNum)>
  [ 92] setobjprop 33 ........................... tSpr.color = rgb("#" & tNum)
  [ 94] pop 1
  [ 96] jmp [115]
  [ 99] getparam 0 .............................. <me>
  [101] pushcons 2 .............................. <"Sprite not found:">
  [103] pushcons 3 .............................. <"show_">
  [105] joinpadstr .............................. <"Sprite not found:" && "show_">
  [106] getlocal 0 .............................. <tDst>
  [108] joinstr ................................. <"Sprite not found:" && "show_" & tDst>
  [109] pushsymb 4 .............................. <#showprogram>
  [111] pusharglistnoret 3 ...................... <me, "Sprite not found:" && "show_" & tDst, #showprogram>
  [113] extcall 22 .............................. error(me, "Sprite not found:" && "show_" & tDst, #showprogram)
  [115] ret
end
