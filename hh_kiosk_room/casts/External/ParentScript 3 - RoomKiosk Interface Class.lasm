property pTempPassword, pWindowTitle, pRoomProps, pRoomsProps, pRoomIndex

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 15 .............................. pTempPassword = [:]
  [  5] pushcons 0 .............................. <"RoomMatic">
  [  7] setprop 16 .............................. pWindowTitle = "RoomMatic"
  [  9] pusharglist 0 ........................... <[:]>
  [ 11] pushproplist ............................ <[:]>
  [ 12] setprop 17 .............................. pRoomProps = [:]
  [ 14] pushcons 1 .............................. <"private.room.properties">
  [ 16] pusharglist 1 ........................... <"private.room.properties">
  [ 18] extcall 19 .............................. <getVariableValue("private.room.properties")>
  [ 20] setprop 18 .............................. pRoomsProps = getVariableValue("private.room.properties")
  [ 22] pushint8 1 .............................. <1>
  [ 24] setprop 20 .............................. pRoomIndex = 1
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglistnoret 1 ...................... <1>
  [ 30] extcall 21 .............................. return 1
  [ 32] ret
end

on deconstruct me
  [  0] getprop 16 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 23 .............................. <windowExists(pWindowTitle)>
  [  6] jmpifz [ 15] ............................ if windowExists(pWindowTitle) then
  [  9] getprop 16 .............................. <pWindowTitle>
  [ 11] pusharglistnoret 1 ...................... <pWindowTitle>
  [ 13] extcall 24 .............................. removeWindow(pWindowTitle)
  [ 15] pushint8 1 .............................. <1>
  [ 17] pusharglistnoret 1 ...................... <1>
  [ 19] extcall 21 .............................. return 1
  [ 21] ret
end

on showHideRoomKiosk me
  [  0] getprop 16 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 23 .............................. <windowExists(pWindowTitle)>
  [  6] jmpifz [ 30] ............................ if windowExists(pWindowTitle) then / else
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 25 .............................. <me.getComponent()>
  [ 15] pushcons 2 .............................. <"start">
  [ 17] pusharglistnoret 2 ...................... <me.getComponent(), "start">
  [ 19] objcall 26 .............................. me.getComponent().updateState("start")
  [ 21] getprop 16 .............................. <pWindowTitle>
  [ 23] pusharglistnoret 1 ...................... <pWindowTitle>
  [ 25] extcall 24 .............................. removeWindow(pWindowTitle)
  [ 27] jmp [ 48]
  [ 30] pusharglist 0 ........................... <[:]>
  [ 32] pushproplist ............................ <[:]>
  [ 33] setprop 15 .............................. pTempPassword = [:]
  [ 35] pusharglist 0 ........................... <[:]>
  [ 37] pushproplist ............................ <[:]>
  [ 38] setprop 17 .............................. pRoomProps = [:]
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 3 .............................. <"roomatic1.window">
  [ 44] pusharglistnoret 2 ...................... <me, "roomatic1.window">
  [ 46] objcall 3 ............................... me.ChangeWindowView("roomatic1.window")
  [ 48] ret
end

on ChangeWindowView me, tWindowName
  [  0] getprop 16 .............................. <pWindowTitle>
  [  2] pusharglistnoret 1 ...................... <pWindowTitle>
  [  4] extcall 27 .............................. createWindow(pWindowTitle)
  [  6] getprop 16 .............................. <pWindowTitle>
  [  8] pusharglist 1 ........................... <pWindowTitle>
  [ 10] extcall 23 .............................. <windowExists(pWindowTitle)>
  [ 12] jmpifz [ 93] ............................ if windowExists(pWindowTitle) then
  [ 15] getprop 16 .............................. <pWindowTitle>
  [ 17] pusharglist 1 ........................... <pWindowTitle>
  [ 19] extcall 28 .............................. <getWindow(pWindowTitle)>
  [ 21] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 23] getlocal 0 .............................. <tWndObj>
  [ 25] getparam 1 .............................. <tWindowName>
  [ 27] pusharglistnoret 2 ...................... <tWndObj, tWindowName>
  [ 29] objcall 29 .............................. tWndObj.merge(tWindowName)
  [ 31] getlocal 0 .............................. <tWndObj>
  [ 33] pushzero ................................ <0>
  [ 34] pushint8 4 .............................. <4>
  [ 36] inv ..................................... <-4>
  [ 37] pusharglistnoret 3 ...................... <tWndObj, 0, -4>
  [ 39] objcall 30 .............................. tWndObj.moveTo(0, -4)
  [ 41] getlocal 0 .............................. <tWndObj>
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglist 1 ........................... <me>
  [ 47] objcall 31 .............................. <me.getID()>
  [ 49] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [ 51] objcall 32 .............................. tWndObj.registerClient(me.getID())
  [ 53] getlocal 0 .............................. <tWndObj>
  [ 55] pushsymb 14 ............................. <#eventProc>
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglist 1 ........................... <me>
  [ 61] objcall 31 .............................. <me.getID()>
  [ 63] pushsymb 33 ............................. <#mouseUp>
  [ 65] pusharglistnoret 4 ...................... <tWndObj, #eventProc, me.getID(), #mouseUp>
  [ 67] objcall 34 .............................. tWndObj.registerProcedure(#eventProc, me.getID(), #mouseUp)
  [ 69] getlocal 0 .............................. <tWndObj>
  [ 71] pushsymb 14 ............................. <#eventProc>
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglist 1 ........................... <me>
  [ 77] objcall 31 .............................. <me.getID()>
  [ 79] pushsymb 35 ............................. <#keyDown>
  [ 81] pusharglistnoret 4 ...................... <tWndObj, #eventProc, me.getID(), #keyDown>
  [ 83] objcall 34 .............................. tWndObj.registerProcedure(#eventProc, me.getID(), #keyDown)
  [ 85] getparam 0 .............................. <me>
  [ 87] getparam 1 .............................. <tWindowName>
  [ 89] pusharglistnoret 2 ...................... <me, tWindowName>
  [ 91] objcall 12 .............................. me.setPageValues(tWindowName)
  [ 93] ret
end

on createRoom me
  [  0] getprop 17 .............................. <pRoomProps>
  [  2] pushsymb 38 ............................. <#name>
  [  4] pusharglist 0 ........................... <>
  [  6] extcall 39 .............................. <getStringServices()>
  [  8] getprop 17 .............................. <pRoomProps>
  [ 10] pushsymb 38 ............................. <#name>
  [ 12] pusharglist 2 ........................... <pRoomProps, #name>
  [ 14] objcall 40 .............................. <pRoomProps[#name]>
  [ 16] pushint8 1 .............................. <1>
  [ 18] pusharglist 3 ........................... <getStringServices(), pRoomProps[#name], 1>
  [ 20] objcall 41 .............................. <getStringServices().convertSpecialChars(pRoomProps[#name], 1)>
  [ 22] pusharglistnoret 3 ...................... <pRoomProps, #name, getStringServices().convertSpecialChars(pRoomProps[#name], 1)>
  [ 24] objcall 42 .............................. pRoomProps[#name] = getStringServices().convertSpecialChars(pRoomProps[#name], 1)
  [ 26] getprop 17 .............................. <pRoomProps>
  [ 28] pushsymb 43 ............................. <#description>
  [ 30] pusharglist 0 ........................... <>
  [ 32] extcall 39 .............................. <getStringServices()>
  [ 34] getprop 17 .............................. <pRoomProps>
  [ 36] pushsymb 43 ............................. <#description>
  [ 38] pusharglist 2 ........................... <pRoomProps, #description>
  [ 40] objcall 40 .............................. <pRoomProps[#description]>
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglist 3 ........................... <getStringServices(), pRoomProps[#description], 1>
  [ 46] objcall 41 .............................. <getStringServices().convertSpecialChars(pRoomProps[#description], 1)>
  [ 48] pusharglistnoret 3 ...................... <pRoomProps, #description, getStringServices().convertSpecialChars(pRoomProps[#description], 1)>
  [ 50] objcall 42 .............................. pRoomProps[#description] = getStringServices().convertSpecialChars(pRoomProps[#description], 1)
  [ 52] getprop 17 .............................. <pRoomProps>
  [ 54] pushsymb 44 ............................. <#marker>
  [ 56] pushcons 4 .............................. <"model_">
  [ 58] getprop 17 .............................. <pRoomProps>
  [ 60] pushcons 5 .............................. <"model">
  [ 62] pusharglist 2 ........................... <pRoomProps, "model">
  [ 64] objcall 40 .............................. <pRoomProps["model"]>
  [ 66] joinstr ................................. <"model_" & pRoomProps["model"]>
  [ 67] pusharglistnoret 3 ...................... <pRoomProps, #marker, "model_" & pRoomProps["model"]>
  [ 69] objcall 42 .............................. pRoomProps[#marker] = "model_" & pRoomProps["model"]
  [ 71] pushcons 6 .............................. <"/first floor/">
  [ 73] setlocal 0 .............................. tFlatData = "/first floor/"
  [ 75] pushsymb 38 ............................. <#name>
  [ 77] pushsymb 44 ............................. <#marker>
  [ 79] pushsymb 45 ............................. <#door>
  [ 81] pushsymb 46 ............................. <#showownername>
  [ 83] pusharglist 4 ........................... <[#name, #marker, #door, #showownername]>
  [ 85] pushlist ................................ <[#name, #marker, #door, #showownername]>
  [ 86] peek 0
  [ 88] pusharglist 1
  [ 90] extcall 47
  [ 92] pushint8 1
  [ 94] peek 0
  [ 96] peek 2
  [ 98] lteq
  [ 99] jmpifz [143] ............................ repeat with f in [#name, #marker, #door, #showownername]
  [102] peek 2
  [104] peek 1
  [106] pusharglist 2
  [108] extcall 40
  [110] setlocal 1
  [112] getlocal 0 .............................. <tFlatData>
  [114] getprop 17 .............................. <pRoomProps>
  [116] getlocal 1 .............................. <f>
  [118] pusharglist 2 ........................... <pRoomProps, f>
  [120] objcall 40 .............................. <pRoomProps[f]>
  [122] pushcons 7 .............................. <"/">
  [124] pusharglist 0 ........................... <>
  [126] extcall 49 .............................. <SPACE>
  [128] pusharglist 3 ........................... <pRoomProps[f], "/", SPACE>
  [130] extcall 48 .............................. <replaceChars(pRoomProps[f], "/", SPACE)>
  [132] joinstr ................................. <tFlatData & replaceChars(pRoomProps[f], "/", SPACE)>
  [133] pushcons 7 .............................. <"/">
  [135] joinstr ................................. <tFlatData & replaceChars(pRoomProps[f], "/", SPACE) & "/">
  [136] setlocal 0 .............................. tFlatData = tFlatData & replaceChars(pRoomProps[f], "/", SPACE) & "/"
  [138] pushint8 1
  [140] add
  [141] endrepeat [ 94]
  [143] pop 3
  [145] getlocal 0 .............................. <tFlatData>
  [147] pushsymb 50 ............................. <#char>
  [149] pushint8 1 .............................. <1>
  [151] getlocal 0 .............................. <tFlatData>
  [153] pusharglist 1 ........................... <tFlatData>
  [155] extcall 51 .............................. <length(tFlatData)>
  [157] pushint8 1 .............................. <1>
  [159] sub ..................................... <length(tFlatData) - 1>
  [160] pusharglist 4 ........................... <tFlatData, #char, 1, length(tFlatData) - 1>
  [162] objcall 52 .............................. <tFlatData.char[1..length(tFlatData) - 1]>
  [164] setlocal 0 .............................. tFlatData = tFlatData.char[1..length(tFlatData) - 1]
  [166] getparam 0 .............................. <me>
  [168] pusharglist 1 ........................... <me>
  [170] objcall 25 .............................. <me.getComponent()>
  [172] getlocal 0 .............................. <tFlatData>
  [174] pusharglistnoret 2 ...................... <me.getComponent(), tFlatData>
  [176] objcall 53 .............................. me.getComponent().sendNewRoomData(tFlatData)
  [178] ret
end

on flatcreated me, tFlatName, tFlatID
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 25 .............................. <me.getComponent()>
  [  6] getparam 2 .............................. <tFlatID>
  [  8] getprop 17 .............................. <pRoomProps>
  [ 10] pushsymb 56 ............................. <#category>
  [ 12] pusharglist 2 ........................... <pRoomProps, #category>
  [ 14] objcall 40 .............................. <pRoomProps[#category]>
  [ 16] pusharglistnoret 3 ...................... <me.getComponent(), tFlatID, pRoomProps[#category]>
  [ 18] objcall 57 .............................. me.getComponent().sendFlatCategory(tFlatID, pRoomProps[#category])
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 8 .............................. <"roomatic7.window">
  [ 24] pusharglistnoret 2 ...................... <me, "roomatic7.window">
  [ 26] objcall 3 ............................... me.ChangeWindowView("roomatic7.window")
  [ 28] getprop 16 .............................. <pWindowTitle>
  [ 30] pusharglist 1 ........................... <pWindowTitle>
  [ 32] extcall 28 .............................. <getWindow(pWindowTitle)>
  [ 34] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 36] getprop 17 .............................. <pRoomProps>
  [ 38] pushsymb 58 ............................. <#id>
  [ 40] getparam 2 .............................. <tFlatID>
  [ 42] pusharglistnoret 3 ...................... <pRoomProps, #id, tFlatID>
  [ 44] objcall 42 .............................. pRoomProps[#id] = tFlatID
  [ 46] getprop 17 .............................. <pRoomProps>
  [ 48] pushsymb 38 ............................. <#name>
  [ 50] getparam 1 .............................. <tFlatName>
  [ 52] pusharglistnoret 3 ...................... <pRoomProps, #name, tFlatName>
  [ 54] objcall 42 .............................. pRoomProps[#name] = tFlatName
  [ 56] getprop 17 .............................. <pRoomProps>
  [ 58] pushsymb 45 ............................. <#door>
  [ 60] pusharglist 2 ........................... <pRoomProps, #door>
  [ 62] objcall 40 .............................. <pRoomProps[#door]>
  [ 64] pushcons 9 .............................. <"password">
  [ 66] eq ...................................... <pRoomProps[#door] = "password">
  [ 67] jmpifz [ 87] ............................ if pRoomProps[#door] = "password" then / else
  [ 70] getprop 17 .............................. <pRoomProps>
  [ 72] pushsymb 59 ............................. <#password>
  [ 74] getparam 0 .............................. <me>
  [ 76] pusharglist 1 ........................... <me>
  [ 78] objcall 10 .............................. <me.getPassword()>
  [ 80] pusharglistnoret 3 ...................... <pRoomProps, #password, me.getPassword()>
  [ 82] objcall 42 .............................. pRoomProps[#password] = me.getPassword()
  [ 84] jmp [ 97]
  [ 87] getprop 17 .............................. <pRoomProps>
  [ 89] pushsymb 59 ............................. <#password>
  [ 91] pushcons 10 ............................. <EMPTY>
  [ 93] pusharglistnoret 3 ...................... <pRoomProps, #password, EMPTY>
  [ 95] objcall 42 .............................. pRoomProps[#password] = EMPTY
  [ 97] pushcons 11 ............................. <"roomatic_roomnumber">
  [ 99] pushcons 12 ............................. <"Room number:">
  [101] pusharglist 2 ........................... <"roomatic_roomnumber", "Room number:">
  [103] extcall 60 .............................. <getText("roomatic_roomnumber", "Room number:")>
  [105] getprop 17 .............................. <pRoomProps>
  [107] pushsymb 58 ............................. <#id>
  [109] pusharglist 2 ........................... <pRoomProps, #id>
  [111] objcall 40 .............................. <pRoomProps[#id]>
  [113] joinpadstr .............................. <getText("roomatic_roomnumber", "Room number:") && pRoomProps[#id]>
  [114] setlocal 1 .............................. tText = getText("roomatic_roomnumber", "Room number:") && pRoomProps[#id]
  [116] getlocal 0 .............................. <tWndObj>
  [118] pushcons 13 ............................. <"roomatic_newnumber">
  [120] pusharglist 2 ........................... <tWndObj, "roomatic_newnumber">
  [122] objcall 61 .............................. <tWndObj.elementExists("roomatic_newnumber")>
  [124] jmpifz [141] ............................ if tWndObj.elementExists("roomatic_newnumber") then
  [127] getlocal 0 .............................. <tWndObj>
  [129] pushcons 13 ............................. <"roomatic_newnumber">
  [131] pusharglist 2 ........................... <tWndObj, "roomatic_newnumber">
  [133] objcall 62 .............................. <tWndObj.getElement("roomatic_newnumber")>
  [135] getlocal 1 .............................. <tText>
  [137] pusharglistnoret 2 ...................... <tWndObj.getElement("roomatic_newnumber"), tText>
  [139] objcall 63 .............................. tWndObj.getElement("roomatic_newnumber").setText(tText)
  [141] pushcons 14 ............................. <"roomatic_roomname">
  [143] pushcons 15 ............................. <"Room name:">
  [145] pusharglist 2 ........................... <"roomatic_roomname", "Room name:">
  [147] extcall 60 .............................. <getText("roomatic_roomname", "Room name:")>
  [149] getprop 17 .............................. <pRoomProps>
  [151] pushsymb 38 ............................. <#name>
  [153] pusharglist 2 ........................... <pRoomProps, #name>
  [155] objcall 40 .............................. <pRoomProps[#name]>
  [157] joinpadstr .............................. <getText("roomatic_roomname", "Room name:") && pRoomProps[#name]>
  [158] setlocal 1 .............................. tText = getText("roomatic_roomname", "Room name:") && pRoomProps[#name]
  [160] getlocal 0 .............................. <tWndObj>
  [162] pushcons 16 ............................. <"roomatic_newname">
  [164] pusharglist 2 ........................... <tWndObj, "roomatic_newname">
  [166] objcall 61 .............................. <tWndObj.elementExists("roomatic_newname")>
  [168] jmpifz [185] ............................ if tWndObj.elementExists("roomatic_newname") then
  [171] getlocal 0 .............................. <tWndObj>
  [173] pushcons 16 ............................. <"roomatic_newname">
  [175] pusharglist 2 ........................... <tWndObj, "roomatic_newname">
  [177] objcall 62 .............................. <tWndObj.getElement("roomatic_newname")>
  [179] getlocal 1 .............................. <tText>
  [181] pusharglistnoret 2 ...................... <tWndObj.getElement("roomatic_newname"), tText>
  [183] objcall 63 .............................. tWndObj.getElement("roomatic_newname").setText(tText)
  [185] getparam 0 .............................. <me>
  [187] pusharglist 1 ........................... <me>
  [189] objcall 6 ............................... <me.sendFlatInfo()>
  [191] pusharglistnoret 1 ...................... <me.sendFlatInfo()>
  [193] extcall 21 .............................. return me.sendFlatInfo()
  [195] ret
end

on sendFlatInfo me
  [  0] getprop 17 .............................. <pRoomProps>
  [  2] pushsymb 58 ............................. <#id>
  [  4] pusharglist 2 ........................... <pRoomProps, #id>
  [  6] objcall 40 .............................. <pRoomProps[#id]>
  [  8] pusharglist 1 ........................... <pRoomProps[#id]>
  [ 10] extcall 67 .............................. <string(pRoomProps[#id])>
  [ 12] pushcons 7 .............................. <"/">
  [ 14] pusharglist 0 ........................... <>
  [ 16] extcall 49 .............................. <SPACE>
  [ 18] pusharglist 3 ........................... <string(pRoomProps[#id]), "/", SPACE>
  [ 20] extcall 48 .............................. <replaceChars(string(pRoomProps[#id]), "/", SPACE)>
  [ 22] pushcons 7 .............................. <"/">
  [ 24] joinstr ................................. <replaceChars(string(pRoomProps[#id]), "/", SPACE) & "/">
  [ 25] pushcons 17 ............................. <RETURN>
  [ 27] joinstr ................................. <replaceChars(string(pRoomProps[#id]), "/", SPACE) & "/" & RETURN>
  [ 28] setlocal 0 .............................. tFlatMsg = replaceChars(string(pRoomProps[#id]), "/", SPACE) & "/" & RETURN
  [ 30] getlocal 0 .............................. <tFlatMsg>
  [ 32] pushcons 18 ............................. <"description=">
  [ 34] joinstr ................................. <tFlatMsg & "description=">
  [ 35] getprop 17 .............................. <pRoomProps>
  [ 37] pushsymb 43 ............................. <#description>
  [ 39] pusharglist 2 ........................... <pRoomProps, #description>
  [ 41] objcall 40 .............................. <pRoomProps[#description]>
  [ 43] pushcons 7 .............................. <"/">
  [ 45] pusharglist 0 ........................... <>
  [ 47] extcall 49 .............................. <SPACE>
  [ 49] pusharglist 3 ........................... <pRoomProps[#description], "/", SPACE>
  [ 51] extcall 48 .............................. <replaceChars(pRoomProps[#description], "/", SPACE)>
  [ 53] joinstr ................................. <tFlatMsg & "description=" & replaceChars(pRoomProps[#description], "/", SPACE)>
  [ 54] pushcons 17 ............................. <RETURN>
  [ 56] joinstr ................................. <tFlatMsg & "description=" & replaceChars(pRoomProps[#description], "/", SPACE) & RETURN>
  [ 57] setlocal 0 .............................. tFlatMsg = tFlatMsg & "description=" & replaceChars(pRoomProps[#description], "/", SPACE) & RETURN
  [ 59] getlocal 0 .............................. <tFlatMsg>
  [ 61] pushcons 19 ............................. <"password=">
  [ 63] joinstr ................................. <tFlatMsg & "password=">
  [ 64] getprop 17 .............................. <pRoomProps>
  [ 66] pushsymb 59 ............................. <#password>
  [ 68] pusharglist 2 ........................... <pRoomProps, #password>
  [ 70] objcall 40 .............................. <pRoomProps[#password]>
  [ 72] joinstr ................................. <tFlatMsg & "password=" & pRoomProps[#password]>
  [ 73] pushcons 17 ............................. <RETURN>
  [ 75] joinstr ................................. <tFlatMsg & "password=" & pRoomProps[#password] & RETURN>
  [ 76] setlocal 0 .............................. tFlatMsg = tFlatMsg & "password=" & pRoomProps[#password] & RETURN
  [ 78] getlocal 0 .............................. <tFlatMsg>
  [ 80] pushcons 20 ............................. <"allsuperuser=">
  [ 82] joinstr ................................. <tFlatMsg & "allsuperuser=">
  [ 83] getprop 17 .............................. <pRoomProps>
  [ 85] pushsymb 68 ............................. <#ableothersmovefurniture>
  [ 87] pusharglist 2 ........................... <pRoomProps, #ableothersmovefurniture>
  [ 89] objcall 40 .............................. <pRoomProps[#ableothersmovefurniture]>
  [ 91] joinstr ................................. <tFlatMsg & "allsuperuser=" & pRoomProps[#ableothersmovefurniture]>
  [ 92] setlocal 0 .............................. tFlatMsg = tFlatMsg & "allsuperuser=" & pRoomProps[#ableothersmovefurniture]
  [ 94] pushcons 21 ............................. <"Sending flat info (2)">
  [ 96] pusharglistnoret 1 ...................... <"Sending flat info (2)">
  [ 98] extcall 69 .............................. put "Sending flat info (2)"
  [100] getparam 0 .............................. <me>
  [102] pusharglist 1 ........................... <me>
  [104] objcall 25 .............................. <me.getComponent()>
  [106] getlocal 0 .............................. <tFlatMsg>
  [108] pusharglistnoret 2 ...................... <me.getComponent(), tFlatMsg>
  [110] objcall 70 .............................. me.getComponent().sendSetFlatInfo(tFlatMsg)
  [112] ret
end

on updateRadioButton me, tElement, tListOfOtherElements
  [  0] pushcons 22 ............................. <"button.radio_green.on">
  [  2] pusharglist 1 ........................... <"button.radio_green.on">
  [  4] extcall 73 .............................. <getmemnum("button.radio_green.on")>
  [  6] pusharglist 1 ........................... <getmemnum("button.radio_green.on")>
  [  8] extcall 72 .............................. <member(getmemnum("button.radio_green.on"))>
  [ 10] getobjprop 74 ........................... <member(getmemnum("button.radio_green.on")).image>
  [ 12] setlocal 0 .............................. tOnImg = member(getmemnum("button.radio_green.on")).image
  [ 14] pushcons 23 ............................. <"button.radio_green.off">
  [ 16] pusharglist 1 ........................... <"button.radio_green.off">
  [ 18] extcall 73 .............................. <getmemnum("button.radio_green.off")>
  [ 20] pusharglist 1 ........................... <getmemnum("button.radio_green.off")>
  [ 22] extcall 72 .............................. <member(getmemnum("button.radio_green.off"))>
  [ 24] getobjprop 74 ........................... <member(getmemnum("button.radio_green.off")).image>
  [ 26] setlocal 1 .............................. tOffImg = member(getmemnum("button.radio_green.off")).image
  [ 28] getprop 16 .............................. <pWindowTitle>
  [ 30] pusharglist 1 ........................... <pWindowTitle>
  [ 32] extcall 28 .............................. <getWindow(pWindowTitle)>
  [ 34] setlocal 2 .............................. tWindowObj = getWindow(pWindowTitle)
  [ 36] getlocal 2 .............................. <tWindowObj>
  [ 38] getparam 1 .............................. <tElement>
  [ 40] pusharglist 2 ........................... <tWindowObj, tElement>
  [ 42] objcall 61 .............................. <tWindowObj.elementExists(tElement)>
  [ 44] jmpifz [ 61] ............................ if tWindowObj.elementExists(tElement) then
  [ 47] getlocal 2 .............................. <tWindowObj>
  [ 49] getparam 1 .............................. <tElement>
  [ 51] pusharglist 2 ........................... <tWindowObj, tElement>
  [ 53] objcall 62 .............................. <tWindowObj.getElement(tElement)>
  [ 55] getlocal 0 .............................. <tOnImg>
  [ 57] pusharglistnoret 2 ...................... <tWindowObj.getElement(tElement), tOnImg>
  [ 59] objcall 75 .............................. tWindowObj.getElement(tElement).feedImage(tOnImg)
  [ 61] getparam 2 .............................. <tListOfOtherElements>
  [ 63] peek 0
  [ 65] pusharglist 1
  [ 67] extcall 47
  [ 69] pushint8 1
  [ 71] peek 0
  [ 73] peek 2
  [ 75] lteq
  [ 76] jmpifz [119] ............................ repeat with tElement in tListOfOtherElements
  [ 79] peek 2
  [ 81] peek 1
  [ 83] pusharglist 2
  [ 85] extcall 40
  [ 87] setparam 1
  [ 89] getlocal 2 .............................. <tWindowObj>
  [ 91] getparam 1 .............................. <tElement>
  [ 93] pusharglist 2 ........................... <tWindowObj, tElement>
  [ 95] objcall 61 .............................. <tWindowObj.elementExists(tElement)>
  [ 97] jmpifz [114] ............................ if tWindowObj.elementExists(tElement) then
  [100] getlocal 2 .............................. <tWindowObj>
  [102] getparam 1 .............................. <tElement>
  [104] pusharglist 2 ........................... <tWindowObj, tElement>
  [106] objcall 62 .............................. <tWindowObj.getElement(tElement)>
  [108] getlocal 1 .............................. <tOffImg>
  [110] pusharglistnoret 2 ...................... <tWindowObj.getElement(tElement), tOffImg>
  [112] objcall 75 .............................. tWindowObj.getElement(tElement).feedImage(tOffImg)
  [114] pushint8 1
  [116] add
  [117] endrepeat [ 71]
  [119] pop 3
  [121] ret
end

on updateCheckButton me, tElement, tProp, tChangeMode
  [  0] getprop 16 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 28 .............................. <getWindow(pWindowTitle)>
  [  6] setlocal 0 .............................. tWindowObj = getWindow(pWindowTitle)
  [  8] pushcons 24 ............................. <"button.checkbox_green.on">
  [ 10] pusharglist 1 ........................... <"button.checkbox_green.on">
  [ 12] extcall 73 .............................. <getmemnum("button.checkbox_green.on")>
  [ 14] pusharglist 1 ........................... <getmemnum("button.checkbox_green.on")>
  [ 16] extcall 72 .............................. <member(getmemnum("button.checkbox_green.on"))>
  [ 18] getobjprop 74 ........................... <member(getmemnum("button.checkbox_green.on")).image>
  [ 20] setlocal 1 .............................. tOnImg = member(getmemnum("button.checkbox_green.on")).image
  [ 22] pushcons 25 ............................. <"button.checkbox_green.off">
  [ 24] pusharglist 1 ........................... <"button.checkbox_green.off">
  [ 26] extcall 73 .............................. <getmemnum("button.checkbox_green.off")>
  [ 28] pusharglist 1 ........................... <getmemnum("button.checkbox_green.off")>
  [ 30] extcall 72 .............................. <member(getmemnum("button.checkbox_green.off"))>
  [ 32] getobjprop 74 ........................... <member(getmemnum("button.checkbox_green.off")).image>
  [ 34] setlocal 2 .............................. tOffImg = member(getmemnum("button.checkbox_green.off")).image
  [ 36] getprop 17 .............................. <pRoomProps>
  [ 38] getparam 2 .............................. <tProp>
  [ 40] pusharglist 2 ........................... <pRoomProps, tProp>
  [ 42] objcall 40 .............................. <pRoomProps[tProp]>
  [ 44] pusharglist 1 ........................... <pRoomProps[tProp]>
  [ 46] extcall 81 .............................. <voidp(pRoomProps[tProp])>
  [ 48] jmpifz [ 61] ............................ if voidp(pRoomProps[tProp]) then
  [ 51] getprop 17 .............................. <pRoomProps>
  [ 53] getparam 2 .............................. <tProp>
  [ 55] pushcons 26 ............................. <"0">
  [ 57] pusharglistnoret 3 ...................... <pRoomProps, tProp, "0">
  [ 59] objcall 42 .............................. pRoomProps[tProp] = "0"
  [ 61] getparam 3 .............................. <tChangeMode>
  [ 63] pusharglist 1 ........................... <tChangeMode>
  [ 65] extcall 81 .............................. <voidp(tChangeMode)>
  [ 67] jmpifz [ 73] ............................ if voidp(tChangeMode) then
  [ 70] pushzero ................................ <0>
  [ 71] setparam 3 .............................. tChangeMode = 0
  [ 73] getparam 3 .............................. <tChangeMode>
  [ 75] jmpifz [115] ............................ if tChangeMode then
  [ 78] getprop 17 .............................. <pRoomProps>
  [ 80] getparam 2 .............................. <tProp>
  [ 82] pusharglist 2 ........................... <pRoomProps, tProp>
  [ 84] objcall 40 .............................. <pRoomProps[tProp]>
  [ 86] pushcons 27 ............................. <"1">
  [ 88] eq ...................................... <pRoomProps[tProp] = "1">
  [ 89] jmpifz [105] ............................ if pRoomProps[tProp] = "1" then / else
  [ 92] getprop 17 .............................. <pRoomProps>
  [ 94] getparam 2 .............................. <tProp>
  [ 96] pushcons 26 ............................. <"0">
  [ 98] pusharglistnoret 3 ...................... <pRoomProps, tProp, "0">
  [100] objcall 42 .............................. pRoomProps[tProp] = "0"
  [102] jmp [115]
  [105] getprop 17 .............................. <pRoomProps>
  [107] getparam 2 .............................. <tProp>
  [109] pushcons 27 ............................. <"1">
  [111] pusharglistnoret 3 ...................... <pRoomProps, tProp, "1">
  [113] objcall 42 .............................. pRoomProps[tProp] = "1"
  [115] getprop 17 .............................. <pRoomProps>
  [117] getparam 2 .............................. <tProp>
  [119] pusharglist 2 ........................... <pRoomProps, tProp>
  [121] objcall 40 .............................. <pRoomProps[tProp]>
  [123] pushcons 27 ............................. <"1">
  [125] eq ...................................... <pRoomProps[tProp] = "1">
  [126] jmpifz [157] ............................ if pRoomProps[tProp] = "1" then / else
  [129] getlocal 0 .............................. <tWindowObj>
  [131] getparam 1 .............................. <tElement>
  [133] pusharglist 2 ........................... <tWindowObj, tElement>
  [135] objcall 61 .............................. <tWindowObj.elementExists(tElement)>
  [137] jmpifz [154] ............................ if tWindowObj.elementExists(tElement) then
  [140] getlocal 0 .............................. <tWindowObj>
  [142] getparam 1 .............................. <tElement>
  [144] pusharglist 2 ........................... <tWindowObj, tElement>
  [146] objcall 62 .............................. <tWindowObj.getElement(tElement)>
  [148] getlocal 1 .............................. <tOnImg>
  [150] pusharglistnoret 2 ...................... <tWindowObj.getElement(tElement), tOnImg>
  [152] objcall 75 .............................. tWindowObj.getElement(tElement).feedImage(tOnImg)
  [154] jmp [182]
  [157] getlocal 0 .............................. <tWindowObj>
  [159] getparam 1 .............................. <tElement>
  [161] pusharglist 2 ........................... <tWindowObj, tElement>
  [163] objcall 61 .............................. <tWindowObj.elementExists(tElement)>
  [165] jmpifz [182] ............................ if tWindowObj.elementExists(tElement) then
  [168] getlocal 0 .............................. <tWindowObj>
  [170] getparam 1 .............................. <tElement>
  [172] pusharglist 2 ........................... <tWindowObj, tElement>
  [174] objcall 62 .............................. <tWindowObj.getElement(tElement)>
  [176] getlocal 2 .............................. <tOffImg>
  [178] pusharglistnoret 2 ...................... <tWindowObj.getElement(tElement), tOffImg>
  [180] objcall 75 .............................. tWindowObj.getElement(tElement).feedImage(tOffImg)
  [182] ret
end

on checkPassword me
  [  0] getprop 15 .............................. <pTempPassword>
  [  2] pushcons 28 ............................. <"roomatic_password_field">
  [  4] pusharglist 2 ........................... <pTempPassword, "roomatic_password_field">
  [  6] objcall 40 .............................. <pTempPassword["roomatic_password_field"]>
  [  8] pusharglist 1 ........................... <pTempPassword["roomatic_password_field"]>
  [ 10] extcall 81 .............................. <voidp(pTempPassword["roomatic_password_field"])>
  [ 12] jmpifz [ 23] ............................ if voidp(pTempPassword["roomatic_password_field"]) then / else
  [ 15] pusharglist 0 ........................... <[]>
  [ 17] pushlist ................................ <[]>
  [ 18] setlocal 0 .............................. tPw1 = []
  [ 20] jmp [ 33]
  [ 23] getprop 15 .............................. <pTempPassword>
  [ 25] pushcons 28 ............................. <"roomatic_password_field">
  [ 27] pusharglist 2 ........................... <pTempPassword, "roomatic_password_field">
  [ 29] objcall 40 .............................. <pTempPassword["roomatic_password_field"]>
  [ 31] setlocal 0 .............................. tPw1 = pTempPassword["roomatic_password_field"]
  [ 33] getprop 15 .............................. <pTempPassword>
  [ 35] pushcons 29 ............................. <"roomatic_password2_field">
  [ 37] pusharglist 2 ........................... <pTempPassword, "roomatic_password2_field">
  [ 39] objcall 40 .............................. <pTempPassword["roomatic_password2_field"]>
  [ 41] pusharglist 1 ........................... <pTempPassword["roomatic_password2_field"]>
  [ 43] extcall 81 .............................. <voidp(pTempPassword["roomatic_password2_field"])>
  [ 45] jmpifz [ 56] ............................ if voidp(pTempPassword["roomatic_password2_field"]) then / else
  [ 48] pusharglist 0 ........................... <[]>
  [ 50] pushlist ................................ <[]>
  [ 51] setlocal 1 .............................. tPw2 = []
  [ 53] jmp [ 66]
  [ 56] getprop 15 .............................. <pTempPassword>
  [ 58] pushcons 29 ............................. <"roomatic_password2_field">
  [ 60] pusharglist 2 ........................... <pTempPassword, "roomatic_password2_field">
  [ 62] objcall 40 .............................. <pTempPassword["roomatic_password2_field"]>
  [ 64] setlocal 1 .............................. tPw2 = pTempPassword["roomatic_password2_field"]
  [ 66] getlocal 0 .............................. <tPw1>
  [ 68] getobjprop 47 ........................... <tPw1.count>
  [ 70] pushzero ................................ <0>
  [ 71] eq ...................................... <tPw1.count = 0>
  [ 72] jmpifz [ 81] ............................ if tPw1.count = 0 then
  [ 75] pushcons 30 ............................. <"Alert_ForgotSetPassword">
  [ 77] pusharglistnoret 1 ...................... <"Alert_ForgotSetPassword">
  [ 79] extcall 21 .............................. return "Alert_ForgotSetPassword"
  [ 81] getlocal 0 .............................. <tPw1>
  [ 83] getobjprop 47 ........................... <tPw1.count>
  [ 85] pushint8 3 .............................. <3>
  [ 87] lt ...................................... <tPw1.count < 3>
  [ 88] jmpifz [ 97] ............................ if tPw1.count < 3 then
  [ 91] pushcons 31 ............................. <"nav_error_passwordtooshort">
  [ 93] pusharglistnoret 1 ...................... <"nav_error_passwordtooshort">
  [ 95] extcall 21 .............................. return "nav_error_passwordtooshort"
  [ 97] getlocal 0 .............................. <tPw1>
  [ 99] getlocal 1 .............................. <tPw2>
  [101] nteq .................................... <tPw1 <> tPw2>
  [102] jmpifz [111] ............................ if tPw1 <> tPw2 then
  [105] pushcons 32 ............................. <"Alert_WrongPassword">
  [107] pusharglistnoret 1 ...................... <"Alert_WrongPassword">
  [109] extcall 21 .............................. return "Alert_WrongPassword"
  [111] pushint8 1 .............................. <1>
  [113] pusharglistnoret 1 ...................... <1>
  [115] extcall 21 .............................. return 1
  [117] ret
end

on getPassword me
  [  0] getprop 15 .............................. <pTempPassword>
  [  2] getobjprop 47 ........................... <pTempPassword.count>
  [  4] pushzero ................................ <0>
  [  5] eq ...................................... <pTempPassword.count = 0>
  [  6] jmpifz [ 15] ............................ if pTempPassword.count = 0 then
  [  9] pushcons 10 ............................. <EMPTY>
  [ 11] pusharglistnoret 1 ...................... <EMPTY>
  [ 13] extcall 21 .............................. return EMPTY
  [ 15] pushcons 10 ............................. <EMPTY>
  [ 17] setlocal 0 .............................. tPw = EMPTY
  [ 19] pushint8 1 .............................. <1>
  [ 21] setlocal 1
  [ 23] getlocal 1
  [ 25] getprop 15 .............................. <pTempPassword>
  [ 27] pushcons 28 ............................. <"roomatic_password_field">
  [ 29] pusharglist 2 ........................... <pTempPassword, "roomatic_password_field">
  [ 31] objcall 40 .............................. <pTempPassword["roomatic_password_field"]>
  [ 33] pusharglist 1 ........................... <pTempPassword["roomatic_password_field"]>
  [ 35] extcall 47 .............................. <count(pTempPassword["roomatic_password_field"])>
  [ 37] lteq
  [ 38] jmpifz [ 69] ............................ repeat with f = 1 to count(pTempPassword["roomatic_password_field"])
  [ 41] getlocal 0 .............................. <tPw>
  [ 43] getprop 15 .............................. <pTempPassword>
  [ 45] pushcons 28 ............................. <"roomatic_password_field">
  [ 47] pusharglist 2 ........................... <pTempPassword, "roomatic_password_field">
  [ 49] objcall 40 .............................. <pTempPassword["roomatic_password_field"]>
  [ 51] getlocal 1 .............................. <f>
  [ 53] pusharglist 2 ........................... <pTempPassword["roomatic_password_field"], f>
  [ 55] objcall 40 .............................. <pTempPassword["roomatic_password_field"][f]>
  [ 57] joinstr ................................. <tPw & pTempPassword["roomatic_password_field"][f]>
  [ 58] setlocal 0 .............................. tPw = tPw & pTempPassword["roomatic_password_field"][f]
  [ 60] pushint8 1
  [ 62] getlocal 1
  [ 64] add
  [ 65] setlocal 1
  [ 67] endrepeat [ 23]
  [ 69] getlocal 0 .............................. <tPw>
  [ 71] pusharglistnoret 1 ...................... <tPw>
  [ 73] extcall 21 .............................. return tPw
  [ 75] ret
end

on getSpecialLayoutRights me
  [  0] pushsymb 88 ............................. <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 87 .............................. <getObject(#session)>
  [  6] pushcons 33 ............................. <"user_rights">
  [  8] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [ 10] objcall 89 .............................. <getObject(#session).get("user_rights")>
  [ 12] pushcons 34 ............................. <"fuse_use_special_room_layouts">
  [ 14] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_use_special_room_layouts">
  [ 16] objcall 90 .............................. <getObject(#session).get("user_rights").getPos("fuse_use_special_room_layouts")>
  [ 18] pusharglistnoret 1 ...................... <getObject(#session).get("user_rights").getPos("fuse_use_special_room_layouts")>
  [ 20] extcall 21 .............................. return getObject(#session).get("user_rights").getPos("fuse_use_special_room_layouts")
  [ 22] ret
end

on setPageValues me, tWindowName
  [  0] getparam 1 .............................. <tWindowName>
  [  2] peek 0 .................................. case tWindowName of
  [  4] pushcons 35 ............................. <"roomatic2.window">
  [  6] eq
  [  7] jmpifz [434] ............................ (case) "roomatic2.window":
  [ 10] getprop 16 .............................. <pWindowTitle>
  [ 12] pusharglist 1 ........................... <pWindowTitle>
  [ 14] extcall 28 .............................. <getWindow(pWindowTitle)>
  [ 16] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 18] getlocal 0 .............................. <tWndObj>
  [ 20] pushzero ................................ <0>
  [ 21] eq ...................................... <tWndObj = 0>
  [ 22] jmpifz [ 32] ............................ if tWndObj = 0 then
  [ 25] pop 1
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 21 .............................. return 0
  [ 32] getprop 17 .............................. <pRoomProps>
  [ 34] pushsymb 38 ............................. <#name>
  [ 36] pusharglist 2 ........................... <pRoomProps, #name>
  [ 38] objcall 40 .............................. <pRoomProps[#name]>
  [ 40] pusharglist 1 ........................... <pRoomProps[#name]>
  [ 42] extcall 81 .............................. <voidp(pRoomProps[#name])>
  [ 44] not ..................................... <not voidp(pRoomProps[#name])>
  [ 45] jmpifz [ 68] ............................ if not voidp(pRoomProps[#name]) then
  [ 48] getlocal 0 .............................. <tWndObj>
  [ 50] pushcons 36 ............................. <"roomatic_roomname_field">
  [ 52] pusharglist 2 ........................... <tWndObj, "roomatic_roomname_field">
  [ 54] objcall 62 .............................. <tWndObj.getElement("roomatic_roomname_field")>
  [ 56] getprop 17 .............................. <pRoomProps>
  [ 58] pushsymb 38 ............................. <#name>
  [ 60] pusharglist 2 ........................... <pRoomProps, #name>
  [ 62] objcall 40 .............................. <pRoomProps[#name]>
  [ 64] pusharglistnoret 2 ...................... <tWndObj.getElement("roomatic_roomname_field"), pRoomProps[#name]>
  [ 66] objcall 63 .............................. tWndObj.getElement("roomatic_roomname_field").setText(pRoomProps[#name])
  [ 68] getprop 17 .............................. <pRoomProps>
  [ 70] pushsymb 43 ............................. <#description>
  [ 72] pusharglist 2 ........................... <pRoomProps, #description>
  [ 74] objcall 40 .............................. <pRoomProps[#description]>
  [ 76] pusharglist 1 ........................... <pRoomProps[#description]>
  [ 78] extcall 81 .............................. <voidp(pRoomProps[#description])>
  [ 80] not ..................................... <not voidp(pRoomProps[#description])>
  [ 81] jmpifz [104] ............................ if not voidp(pRoomProps[#description]) then
  [ 84] getlocal 0 .............................. <tWndObj>
  [ 86] pushcons 37 ............................. <"romatic_roomdescription_field">
  [ 88] pusharglist 2 ........................... <tWndObj, "romatic_roomdescription_field">
  [ 90] objcall 62 .............................. <tWndObj.getElement("romatic_roomdescription_field")>
  [ 92] getprop 17 .............................. <pRoomProps>
  [ 94] pushsymb 43 ............................. <#description>
  [ 96] pusharglist 2 ........................... <pRoomProps, #description>
  [ 98] objcall 40 .............................. <pRoomProps[#description]>
  [100] pusharglistnoret 2 ...................... <tWndObj.getElement("romatic_roomdescription_field"), pRoomProps[#description]>
  [102] objcall 63 .............................. tWndObj.getElement("romatic_roomdescription_field").setText(pRoomProps[#description])
  [104] getprop 17 .............................. <pRoomProps>
  [106] pushsymb 91 ............................. <#owner>
  [108] pushsymb 88 ............................. <#session>
  [110] pusharglist 1 ........................... <#session>
  [112] extcall 87 .............................. <getObject(#session)>
  [114] pushcons 38 ............................. <"user_name">
  [116] pusharglist 2 ........................... <getObject(#session), "user_name">
  [118] objcall 89 .............................. <getObject(#session).get("user_name")>
  [120] pusharglistnoret 3 ...................... <pRoomProps, #owner, getObject(#session).get("user_name")>
  [122] objcall 42 .............................. pRoomProps[#owner] = getObject(#session).get("user_name")
  [124] getlocal 0 .............................. <tWndObj>
  [126] pushcons 39 ............................. <"roomatic_ownername_field">
  [128] pusharglist 2 ........................... <tWndObj, "roomatic_ownername_field">
  [130] objcall 62 .............................. <tWndObj.getElement("roomatic_ownername_field")>
  [132] getprop 17 .............................. <pRoomProps>
  [134] pushsymb 91 ............................. <#owner>
  [136] pusharglist 2 ........................... <pRoomProps, #owner>
  [138] objcall 40 .............................. <pRoomProps[#owner]>
  [140] pusharglistnoret 2 ...................... <tWndObj.getElement("roomatic_ownername_field"), pRoomProps[#owner]>
  [142] objcall 63 .............................. tWndObj.getElement("roomatic_ownername_field").setText(pRoomProps[#owner])
  [144] getprop 17 .............................. <pRoomProps>
  [146] pushsymb 46 ............................. <#showownername>
  [148] pusharglist 2 ........................... <pRoomProps, #showownername>
  [150] objcall 40 .............................. <pRoomProps[#showownername]>
  [152] pusharglist 1 ........................... <pRoomProps[#showownername]>
  [154] extcall 81 .............................. <voidp(pRoomProps[#showownername])>
  [156] not ..................................... <not voidp(pRoomProps[#showownername])>
  [157] jmpifz [206] ............................ if not voidp(pRoomProps[#showownername]) then / else
  [160] getprop 17 .............................. <pRoomProps>
  [162] pushsymb 46 ............................. <#showownername>
  [164] pusharglist 2 ........................... <pRoomProps, #showownername>
  [166] objcall 40 .............................. <pRoomProps[#showownername]>
  [168] pushint8 1 .............................. <1>
  [170] eq ...................................... <pRoomProps[#showownername] = 1>
  [171] jmpifz [190] ............................ if pRoomProps[#showownername] = 1 then / else
  [174] getparam 0 .............................. <me>
  [176] pushcons 40 ............................. <"roomatic_namedisplayed_yes_check">
  [178] pushcons 41 ............................. <"roomatic_namedisplayed_no_check">
  [180] pusharglist 1 ........................... <["roomatic_namedisplayed_no_check"]>
  [182] pushlist ................................ <["roomatic_namedisplayed_no_check"]>
  [183] pusharglistnoret 3 ...................... <me, "roomatic_namedisplayed_yes_check", ["roomatic_namedisplayed_no_check"]>
  [185] objcall 7 ............................... me.updateRadioButton("roomatic_namedisplayed_yes_check", ["roomatic_namedisplayed_no_check"])
  [187] jmp [203]
  [190] getparam 0 .............................. <me>
  [192] pushcons 41 ............................. <"roomatic_namedisplayed_no_check">
  [194] pushcons 40 ............................. <"roomatic_namedisplayed_yes_check">
  [196] pusharglist 1 ........................... <["roomatic_namedisplayed_yes_check"]>
  [198] pushlist ................................ <["roomatic_namedisplayed_yes_check"]>
  [199] pusharglistnoret 3 ...................... <me, "roomatic_namedisplayed_no_check", ["roomatic_namedisplayed_yes_check"]>
  [201] objcall 7 ............................... me.updateRadioButton("roomatic_namedisplayed_no_check", ["roomatic_namedisplayed_yes_check"])
  [203] jmp [229]
  [206] getprop 17 .............................. <pRoomProps>
  [208] pushsymb 46 ............................. <#showownername>
  [210] pushint8 1 .............................. <1>
  [212] pusharglistnoret 3 ...................... <pRoomProps, #showownername, 1>
  [214] objcall 42 .............................. pRoomProps[#showownername] = 1
  [216] getparam 0 .............................. <me>
  [218] pushcons 40 ............................. <"roomatic_namedisplayed_yes_check">
  [220] pushcons 41 ............................. <"roomatic_namedisplayed_no_check">
  [222] pusharglist 1 ........................... <["roomatic_namedisplayed_no_check"]>
  [224] pushlist ................................ <["roomatic_namedisplayed_no_check"]>
  [225] pusharglistnoret 3 ...................... <me, "roomatic_namedisplayed_yes_check", ["roomatic_namedisplayed_no_check"]>
  [227] objcall 7 ............................... me.updateRadioButton("roomatic_namedisplayed_yes_check", ["roomatic_namedisplayed_no_check"])
  [229] getlocal 0 .............................. <tWndObj>
  [231] pushcons 42 ............................. <"roomatic_choosecategory">
  [233] pusharglist 2 ........................... <tWndObj, "roomatic_choosecategory">
  [235] objcall 62 .............................. <tWndObj.getElement("roomatic_choosecategory")>
  [237] setlocal 1 .............................. tDropDown = tWndObj.getElement("roomatic_choosecategory")
  [239] getlocal 1 .............................. <tDropDown>
  [241] pushsymb 93 ............................. <#instance>
  [243] pusharglist 2 ........................... <tDropDown, #instance>
  [245] extcall 92 .............................. <ilk(tDropDown, #instance)>
  [247] not ..................................... <not ilk(tDropDown, #instance)>
  [248] jmpifz [270] ............................ if not ilk(tDropDown, #instance) then
  [251] pop 1
  [253] getparam 0 .............................. <me>
  [255] pushcons 43 ............................. <"Unable to retrieve dropdown:">
  [257] getlocal 1 .............................. <tDropDown>
  [259] joinpadstr .............................. <"Unable to retrieve dropdown:" && tDropDown>
  [260] pushsymb 12 ............................. <#setPageValues>
  [262] pusharglist 3 ........................... <me, "Unable to retrieve dropdown:" && tDropDown, #setPageValues>
  [264] extcall 94 .............................. <error(me, "Unable to retrieve dropdown:" && tDropDown, #setPageValues)>
  [266] pusharglistnoret 1 ...................... <error(me, "Unable to retrieve dropdown:" && tDropDown, #setPageValues)>
  [268] extcall 21 .............................. return error(me, "Unable to retrieve dropdown:" && tDropDown, #setPageValues)
  [270] pushsymb 88 ............................. <#session>
  [272] pusharglist 1 ........................... <#session>
  [274] extcall 87 .............................. <getObject(#session)>
  [276] pushcons 44 ............................. <"user_flat_cats">
  [278] pusharglist 2 ........................... <getObject(#session), "user_flat_cats">
  [280] objcall 89 .............................. <getObject(#session).get("user_flat_cats")>
  [282] setlocal 2 .............................. tCatProps = getObject(#session).get("user_flat_cats")
  [284] getlocal 2 .............................. <tCatProps>
  [286] pushsymb 95 ............................. <#propList>
  [288] pusharglist 2 ........................... <tCatProps, #propList>
  [290] extcall 92 .............................. <ilk(tCatProps, #propList)>
  [292] not ..................................... <not ilk(tCatProps, #propList)>
  [293] jmpifz [315] ............................ if not ilk(tCatProps, #propList) then
  [296] pop 1
  [298] getparam 0 .............................. <me>
  [300] pushcons 45 ............................. <"Category list was not a property list:">
  [302] getlocal 2 .............................. <tCatProps>
  [304] joinpadstr .............................. <"Category list was not a property list:" && tCatProps>
  [305] pushsymb 12 ............................. <#setPageValues>
  [307] pusharglist 3 ........................... <me, "Category list was not a property list:" && tCatProps, #setPageValues>
  [309] extcall 94 .............................. <error(me, "Category list was not a property list:" && tCatProps, #setPageValues)>
  [311] pusharglistnoret 1 ...................... <error(me, "Category list was not a property list:" && tCatProps, #setPageValues)>
  [313] extcall 21 .............................. return error(me, "Category list was not a property list:" && tCatProps, #setPageValues)
  [315] pusharglist 0 ........................... <[]>
  [317] pushlist ................................ <[]>
  [318] setlocal 3 .............................. tCatTxtItems = []
  [320] pusharglist 0 ........................... <[]>
  [322] pushlist ................................ <[]>
  [323] setlocal 4 .............................. tCatKeyItems = []
  [325] pushint8 1 .............................. <1>
  [327] setlocal 5
  [329] getlocal 5
  [331] getlocal 2 .............................. <tCatProps>
  [333] getobjprop 47 ........................... <tCatProps.count>
  [335] lteq
  [336] jmpifz [380] ............................ repeat with i = 1 to tCatProps.count
  [339] getlocal 3 .............................. <tCatTxtItems>
  [341] getlocal 5 .............................. <i>
  [343] getlocal 2 .............................. <tCatProps>
  [345] getlocal 5 .............................. <i>
  [347] pusharglist 2 ........................... <tCatProps, i>
  [349] extcall 40 .............................. <getAt(tCatProps, i)>
  [351] pusharglistnoret 3 ...................... <tCatTxtItems, i, getAt(tCatProps, i)>
  [353] objcall 42 .............................. tCatTxtItems[i] = getAt(tCatProps, i)
  [355] getlocal 4 .............................. <tCatKeyItems>
  [357] getlocal 5 .............................. <i>
  [359] getlocal 2 .............................. <tCatProps>
  [361] getlocal 5 .............................. <i>
  [363] pusharglist 2 ........................... <tCatProps, i>
  [365] extcall 96 .............................. <getPropAt(tCatProps, i)>
  [367] pusharglistnoret 3 ...................... <tCatKeyItems, i, getPropAt(tCatProps, i)>
  [369] objcall 42 .............................. tCatKeyItems[i] = getPropAt(tCatProps, i)
  [371] pushint8 1
  [373] getlocal 5
  [375] add
  [376] setlocal 5
  [378] endrepeat [329]
  [380] getprop 17 .............................. <pRoomProps>
  [382] pushsymb 56 ............................. <#category>
  [384] pusharglist 2 ........................... <pRoomProps, #category>
  [386] objcall 40 .............................. <pRoomProps[#category]>
  [388] pusharglist 1 ........................... <pRoomProps[#category]>
  [390] extcall 81 .............................. <voidp(pRoomProps[#category])>
  [392] not ..................................... <not voidp(pRoomProps[#category])>
  [393] jmpifz [421] ............................ if not voidp(pRoomProps[#category]) then / else
  [396] getlocal 1 .............................. <tDropDown>
  [398] getlocal 3 .............................. <tCatTxtItems>
  [400] getlocal 4 .............................. <tCatKeyItems>
  [402] pusharglist 0 ........................... <>
  [404] extcall 97 .............................. <VOID>
  [406] getprop 17 .............................. <pRoomProps>
  [408] pushsymb 56 ............................. <#category>
  [410] pusharglist 2 ........................... <pRoomProps, #category>
  [412] objcall 40 .............................. <pRoomProps[#category]>
  [414] pusharglistnoret 5 ...................... <tDropDown, tCatTxtItems, tCatKeyItems, VOID, pRoomProps[#category]>
  [416] objcall 98 .............................. tDropDown.updateData(tCatTxtItems, tCatKeyItems, VOID, pRoomProps[#category])
  [418] jmp [431]
  [421] getlocal 1 .............................. <tDropDown>
  [423] getlocal 3 .............................. <tCatTxtItems>
  [425] getlocal 4 .............................. <tCatKeyItems>
  [427] pusharglistnoret 3 ...................... <tDropDown, tCatTxtItems, tCatKeyItems>
  [429] objcall 98 .............................. tDropDown.updateData(tCatTxtItems, tCatKeyItems)
  [431] jmp [965]
  [434] peek 0
  [436] pushcons 46 ............................. <"roomatic3.window">
  [438] nteq
  [439] jmpifz [450] ............................ (case) "roomatic3.window", ...
  [442] peek 0
  [444] pushcons 47 ............................. <"roomatic_club.window">
  [446] eq
  [447] jmpifz [804] ............................ (case) ..., "roomatic_club.window":
  [450] getprop 18 .............................. <pRoomsProps>
  [452] getprop 20 .............................. <pRoomIndex>
  [454] pusharglist 2 ........................... <pRoomsProps, pRoomIndex>
  [456] objcall 40 .............................. <pRoomsProps[pRoomIndex]>
  [458] setlocal 6 .............................. tRoomSpecs = pRoomsProps[pRoomIndex]
  [460] getprop 17 .............................. <pRoomProps>
  [462] pushsymb 99 ............................. <#model>
  [464] getlocal 6 .............................. <tRoomSpecs>
  [466] pushsymb 99 ............................. <#model>
  [468] pusharglist 2 ........................... <tRoomSpecs, #model>
  [470] objcall 40 .............................. <tRoomSpecs[#model]>
  [472] pusharglistnoret 3 ...................... <pRoomProps, #model, tRoomSpecs[#model]>
  [474] objcall 42 .............................. pRoomProps[#model] = tRoomSpecs[#model]
  [476] getprop 16 .............................. <pWindowTitle>
  [478] pusharglist 1 ........................... <pWindowTitle>
  [480] extcall 28 .............................. <getWindow(pWindowTitle)>
  [482] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [484] getlocal 0 .............................. <tWndObj>
  [486] pushzero ................................ <0>
  [487] eq ...................................... <tWndObj = 0>
  [488] jmpifz [498] ............................ if tWndObj = 0 then
  [491] pop 1
  [493] pushzero ................................ <0>
  [494] pusharglistnoret 1 ...................... <0>
  [496] extcall 21 .............................. return 0
  [498] getlocal 0 .............................. <tWndObj>
  [500] pushcons 48 ............................. <"rm_room_layout">
  [502] pusharglist 2 ........................... <tWndObj, "rm_room_layout">
  [504] objcall 62 .............................. <tWndObj.getElement("rm_room_layout")>
  [506] setlocal 7 .............................. tElem = tWndObj.getElement("rm_room_layout")
  [508] pushcons 49 ............................. <"rm_model_">
  [510] getprop 17 .............................. <pRoomProps>
  [512] pushsymb 99 ............................. <#model>
  [514] pusharglist 2 ........................... <pRoomProps, #model>
  [516] objcall 40 .............................. <pRoomProps[#model]>
  [518] joinstr ................................. <"rm_model_" & pRoomProps[#model]>
  [519] pushcons 50 ............................. <"_layout">
  [521] joinstr ................................. <"rm_model_" & pRoomProps[#model] & "_layout">
  [522] setlocal 8 .............................. tMemName = "rm_model_" & pRoomProps[#model] & "_layout"
  [524] getlocal 8 .............................. <tMemName>
  [526] pusharglist 1 ........................... <tMemName>
  [528] extcall 73 .............................. <getmemnum(tMemName)>
  [530] pusharglist 1 ........................... <getmemnum(tMemName)>
  [532] extcall 72 .............................. <member(getmemnum(tMemName))>
  [534] setlocal 9 .............................. tmember = member(getmemnum(tMemName))
  [536] getlocal 7 .............................. <tElem>
  [538] pushsymb 100 ............................ <#width>
  [540] pusharglist 2 ........................... <tElem, #width>
  [542] objcall 101 ............................. <tElem.getProperty(#width)>
  [544] setlocal 10 ............................. tTargetWidth = tElem.getProperty(#width)
  [546] getlocal 7 .............................. <tElem>
  [548] pushsymb 102 ............................ <#height>
  [550] pusharglist 2 ........................... <tElem, #height>
  [552] objcall 101 ............................. <tElem.getProperty(#height)>
  [554] setlocal 11 ............................. tTargetHeight = tElem.getProperty(#height)
  [556] getlocal 10 ............................. <tTargetWidth>
  [558] getlocal 11 ............................. <tTargetHeight>
  [560] pushint8 32 ............................. <32>
  [562] pusharglist 3 ........................... <tTargetWidth, tTargetHeight, 32>
  [564] extcall 74 .............................. <image(tTargetWidth, tTargetHeight, 32)>
  [566] setlocal 12 ............................. tTargetImg = image(tTargetWidth, tTargetHeight, 32)
  [568] getlocal 9 .............................. <tmember>
  [570] getchainedprop 74 ....................... <tmember.image>
  [572] getobjprop 103 .......................... <tmember.image.rect>
  [574] setlocal 13 ............................. tSourceRect = tmember.image.rect
  [576] getlocal 10 ............................. <tTargetWidth>
  [578] getlocal 9 .............................. <tmember>
  [580] getchainedprop 74 ....................... <tmember.image>
  [582] getobjprop 100 .......................... <tmember.image.width>
  [584] sub ..................................... <tTargetWidth - tmember.image.width>
  [585] pushint8 2 .............................. <2>
  [587] div ..................................... <(tTargetWidth - tmember.image.width) / 2>
  [588] setlocal 14 ............................. tOffsetX = (tTargetWidth - tmember.image.width) / 2
  [590] getlocal 11 ............................. <tTargetHeight>
  [592] getlocal 9 .............................. <tmember>
  [594] getchainedprop 74 ....................... <tmember.image>
  [596] getobjprop 102 .......................... <tmember.image.height>
  [598] sub ..................................... <tTargetHeight - tmember.image.height>
  [599] pushint8 2 .............................. <2>
  [601] div ..................................... <(tTargetHeight - tmember.image.height) / 2>
  [602] setlocal 15 ............................. tOffsetY = (tTargetHeight - tmember.image.height) / 2
  [604] getlocal 13 ............................. <tSourceRect>
  [606] getlocal 14 ............................. <tOffsetX>
  [608] getlocal 15 ............................. <tOffsetY>
  [610] getlocal 14 ............................. <tOffsetX>
  [612] getlocal 15 ............................. <tOffsetY>
  [614] pusharglist 4 ........................... <tOffsetX, tOffsetY, tOffsetX, tOffsetY>
  [616] extcall 103 ............................. <rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)>
  [618] add ..................................... <tSourceRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)>
  [619] setlocal 16 ............................. tTargetRect = tSourceRect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)
  [621] getlocal 12 ............................. <tTargetImg>
  [623] getlocal 9 .............................. <tmember>
  [625] getobjprop 74 ........................... <tmember.image>
  [627] getlocal 16 ............................. <tTargetRect>
  [629] getlocal 13 ............................. <tSourceRect>
  [631] pusharglistnoret 4 ...................... <tTargetImg, tmember.image, tTargetRect, tSourceRect>
  [633] objcall 104 ............................. tTargetImg.copyPixels(tmember.image, tTargetRect, tSourceRect)
  [635] getlocal 9 .............................. <tmember>
  [637] getobjprop 105 .......................... <tmember.type>
  [639] pushsymb 106 ............................ <#bitmap>
  [641] eq ...................................... <tmember.type = #bitmap>
  [642] jmpifz [653] ............................ if tmember.type = #bitmap then
  [645] getlocal 7 .............................. <tElem>
  [647] getlocal 12 ............................. <tTargetImg>
  [649] pusharglistnoret 2 ...................... <tElem, tTargetImg>
  [651] objcall 75 .............................. tElem.feedImage(tTargetImg)
  [653] getlocal 6 .............................. <tRoomSpecs>
  [655] pushsymb 107 ............................ <#club>
  [657] pusharglist 2 ........................... <tRoomSpecs, #club>
  [659] objcall 40 .............................. <tRoomSpecs[#club]>
  [661] jmpifz [691] ............................ if tRoomSpecs[#club] then / else
  [664] getlocal 0 .............................. <tWndObj>
  [666] pushcons 51 ............................. <"rm_hc_icon">
  [668] pusharglist 2 ........................... <tWndObj, "rm_hc_icon">
  [670] objcall 62 .............................. <tWndObj.getElement("rm_hc_icon")>
  [672] pusharglistnoret 1 ...................... <tWndObj.getElement("rm_hc_icon")>
  [674] objcall 108 ............................. tWndObj.getElement("rm_hc_icon").show()
  [676] getlocal 0 .............................. <tWndObj>
  [678] pushcons 52 ............................. <"rm_hc_only">
  [680] pusharglist 2 ........................... <tWndObj, "rm_hc_only">
  [682] objcall 62 .............................. <tWndObj.getElement("rm_hc_only")>
  [684] pusharglistnoret 1 ...................... <tWndObj.getElement("rm_hc_only")>
  [686] objcall 108 ............................. tWndObj.getElement("rm_hc_only").show()
  [688] jmp [715]
  [691] getlocal 0 .............................. <tWndObj>
  [693] pushcons 51 ............................. <"rm_hc_icon">
  [695] pusharglist 2 ........................... <tWndObj, "rm_hc_icon">
  [697] objcall 62 .............................. <tWndObj.getElement("rm_hc_icon")>
  [699] pusharglistnoret 1 ...................... <tWndObj.getElement("rm_hc_icon")>
  [701] objcall 109 ............................. tWndObj.getElement("rm_hc_icon").hide()
  [703] getlocal 0 .............................. <tWndObj>
  [705] pushcons 52 ............................. <"rm_hc_only">
  [707] pusharglist 2 ........................... <tWndObj, "rm_hc_only">
  [709] objcall 62 .............................. <tWndObj.getElement("rm_hc_only")>
  [711] pusharglistnoret 1 ...................... <tWndObj.getElement("rm_hc_only")>
  [713] objcall 109 ............................. tWndObj.getElement("rm_hc_only").hide()
  [715] getlocal 6 .............................. <tRoomSpecs>
  [717] pushsymb 107 ............................ <#club>
  [719] pusharglist 2 ........................... <tRoomSpecs, #club>
  [721] objcall 40 .............................. <tRoomSpecs[#club]>
  [723] getparam 0 .............................. <me>
  [725] pusharglist 1 ........................... <me>
  [727] objcall 11 .............................. <me.getSpecialLayoutRights()>
  [729] not ..................................... <not me.getSpecialLayoutRights()>
  [730] and ..................................... <tRoomSpecs[#club] and not me.getSpecialLayoutRights()>
  [731] jmpifz [749] ............................ if tRoomSpecs[#club] and not me.getSpecialLayoutRights() then / else
  [734] getlocal 0 .............................. <tWndObj>
  [736] pushcons 53 ............................. <"roomatic_3_button_next">
  [738] pusharglist 2 ........................... <tWndObj, "roomatic_3_button_next">
  [740] objcall 62 .............................. <tWndObj.getElement("roomatic_3_button_next")>
  [742] pusharglistnoret 1 ...................... <tWndObj.getElement("roomatic_3_button_next")>
  [744] objcall 109 ............................. tWndObj.getElement("roomatic_3_button_next").hide()
  [746] jmp [761]
  [749] getlocal 0 .............................. <tWndObj>
  [751] pushcons 53 ............................. <"roomatic_3_button_next">
  [753] pusharglist 2 ........................... <tWndObj, "roomatic_3_button_next">
  [755] objcall 62 .............................. <tWndObj.getElement("roomatic_3_button_next")>
  [757] pusharglistnoret 1 ...................... <tWndObj.getElement("roomatic_3_button_next")>
  [759] objcall 108 ............................. tWndObj.getElement("roomatic_3_button_next").show()
  [761] pushcons 54 ............................. <"roommatic_modify_size">
  [763] pusharglist 1 ........................... <"roommatic_modify_size">
  [765] extcall 60 .............................. <getText("roommatic_modify_size")>
  [767] setlocal 17 ............................. tSizeTxt = getText("roommatic_modify_size")
  [769] getlocal 17 ............................. <tSizeTxt>
  [771] pushcons 55 ............................. <"%tileCount%">
  [773] getlocal 6 .............................. <tRoomSpecs>
  [775] pushsymb 111 ............................ <#size>
  [777] pusharglist 2 ........................... <tRoomSpecs, #size>
  [779] objcall 40 .............................. <tRoomSpecs[#size]>
  [781] pusharglist 3 ........................... <tSizeTxt, "%tileCount%", tRoomSpecs[#size]>
  [783] extcall 110 ............................. <replaceChunks(tSizeTxt, "%tileCount%", tRoomSpecs[#size])>
  [785] setlocal 17 ............................. tSizeTxt = replaceChunks(tSizeTxt, "%tileCount%", tRoomSpecs[#size])
  [787] getlocal 0 .............................. <tWndObj>
  [789] pushcons 56 ............................. <"rm_room_size">
  [791] pusharglist 2 ........................... <tWndObj, "rm_room_size">
  [793] objcall 62 .............................. <tWndObj.getElement("rm_room_size")>
  [795] getlocal 17 ............................. <tSizeTxt>
  [797] pusharglistnoret 2 ...................... <tWndObj.getElement("rm_room_size"), tSizeTxt>
  [799] objcall 63 .............................. tWndObj.getElement("rm_room_size").setText(tSizeTxt)
  [801] jmp [965]
  [804] peek 0
  [806] pushcons 57 ............................. <"roomatic4.window">
  [808] eq
  [809] jmpifz [965] ............................ (case) "roomatic4.window":
  [812] pusharglist 0 ........................... <[:]>
  [814] pushproplist ............................ <[:]>
  [815] setprop 15 .............................. pTempPassword = [:]
  [817] getprop 17 .............................. <pRoomProps>
  [819] pushsymb 45 ............................. <#door>
  [821] pusharglist 2 ........................... <pRoomProps, #door>
  [823] objcall 40 .............................. <pRoomProps[#door]>
  [825] pusharglist 1 ........................... <pRoomProps[#door]>
  [827] extcall 81 .............................. <voidp(pRoomProps[#door])>
  [829] not ..................................... <not voidp(pRoomProps[#door])>
  [830] jmpifz [893] ............................ if not voidp(pRoomProps[#door]) then / else
  [833] pushcons 58 ............................. <"open">
  [835] pushcons 59 ............................. <"roomatic_security_open">
  [837] pushcons 60 ............................. <"closed">
  [839] pushcons 61 ............................. <"roomatic_security_locked">
  [841] pushcons 9 .............................. <"password">
  [843] pushcons 62 ............................. <"roomatic_security_pwc">
  [845] pusharglist 6 ........................... <["open": "roomatic_security_open", "closed": "roomatic_security_locked", "password": "roomatic_security_pwc"]>
  [847] pushproplist ............................ <["open": "roomatic_security_open", "closed": "roomatic_security_locked", "password": "roomatic_security_pwc"]>
  [848] setlocal 18 ............................. tOthers = ["open": "roomatic_security_open", "closed": "roomatic_security_locked", "password": "roomatic_security_pwc"]
  [850] getlocal 18 ............................. <tOthers>
  [852] getprop 17 .............................. <pRoomProps>
  [854] pushsymb 45 ............................. <#door>
  [856] pusharglist 2 ........................... <pRoomProps, #door>
  [858] objcall 40 .............................. <pRoomProps[#door]>
  [860] pusharglist 2 ........................... <tOthers, pRoomProps[#door]>
  [862] objcall 40 .............................. <tOthers[pRoomProps[#door]]>
  [864] setlocal 19 ............................. tActive = tOthers[pRoomProps[#door]]
  [866] getlocal 18 ............................. <tOthers>
  [868] getprop 17 .............................. <pRoomProps>
  [870] pushsymb 45 ............................. <#door>
  [872] pusharglist 2 ........................... <pRoomProps, #door>
  [874] objcall 40 .............................. <pRoomProps[#door]>
  [876] pusharglistnoret 2 ...................... <tOthers, pRoomProps[#door]>
  [878] objcall 112 ............................. tOthers.deleteProp(pRoomProps[#door])
  [880] getparam 0 .............................. <me>
  [882] getlocal 19 ............................. <tActive>
  [884] getlocal 18 ............................. <tOthers>
  [886] pusharglistnoret 3 ...................... <me, tActive, tOthers>
  [888] objcall 7 ............................... me.updateRadioButton(tActive, tOthers)
  [890] jmp [922]
  [893] getprop 17 .............................. <pRoomProps>
  [895] pushsymb 45 ............................. <#door>
  [897] pushcons 58 ............................. <"open">
  [899] pusharglistnoret 3 ...................... <pRoomProps, #door, "open">
  [901] objcall 42 .............................. pRoomProps[#door] = "open"
  [903] pushcons 61 ............................. <"roomatic_security_locked">
  [905] pushcons 62 ............................. <"roomatic_security_pwc">
  [907] pusharglist 2 ........................... <["roomatic_security_locked", "roomatic_security_pwc"]>
  [909] pushlist ................................ <["roomatic_security_locked", "roomatic_security_pwc"]>
  [910] setlocal 18 ............................. tOthers = ["roomatic_security_locked", "roomatic_security_pwc"]
  [912] getparam 0 .............................. <me>
  [914] pushcons 59 ............................. <"roomatic_security_open">
  [916] getlocal 18 ............................. <tOthers>
  [918] pusharglistnoret 3 ...................... <me, "roomatic_security_open", tOthers>
  [920] objcall 7 ............................... me.updateRadioButton("roomatic_security_open", tOthers)
  [922] getparam 0 .............................. <me>
  [924] pushcons 63 ............................. <"roomatic_security_letmove">
  [926] pushsymb 68 ............................. <#ableothersmovefurniture>
  [928] pushzero ................................ <0>
  [929] pusharglistnoret 4 ...................... <me, "roomatic_security_letmove", #ableothersmovefurniture, 0>
  [931] objcall 8 ............................... me.updateCheckButton("roomatic_security_letmove", #ableothersmovefurniture, 0)
  [933] getprop 17 .............................. <pRoomProps>
  [935] pushsymb 45 ............................. <#door>
  [937] pusharglist 2 ........................... <pRoomProps, #door>
  [939] objcall 40 .............................. <pRoomProps[#door]>
  [941] pushcons 9 .............................. <"password">
  [943] nteq .................................... <pRoomProps[#door] <> "password">
  [944] jmpifz [957] ............................ if pRoomProps[#door] <> "password" then / else
  [947] getparam 0 .............................. <me>
  [949] pushzero ................................ <0>
  [950] pusharglistnoret 2 ...................... <me, 0>
  [952] objcall 13 .............................. me.showPasswordFields(0)
  [954] jmp [965]
  [957] getparam 0 .............................. <me>
  [959] pushint8 1 .............................. <1>
  [961] pusharglistnoret 2 ...................... <me, 1>
  [963] objcall 13 .............................. me.showPasswordFields(1)
  [965] pop 1 ................................... end case
  [967] ret
end

on showPasswordFields me, tVisible
  [  0] getprop 16 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 28 .............................. <getWindow(pWindowTitle)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tWndObj = 0>
  [ 12] jmpifz [ 29] ............................ if tWndObj = 0 then
  [ 15] getparam 0 .............................. <me>
  [ 17] pushcons 64 ............................. <"No window!">
  [ 19] pushsymb 13 ............................. <#showPasswordFields>
  [ 21] pusharglist 3 ........................... <me, "No window!", #showPasswordFields>
  [ 23] extcall 94 .............................. <error(me, "No window!", #showPasswordFields)>
  [ 25] pusharglistnoret 1 ...................... <error(me, "No window!", #showPasswordFields)>
  [ 27] extcall 21 .............................. return error(me, "No window!", #showPasswordFields)
  [ 29] pushcons 29 ............................. <"roomatic_password2_field">
  [ 31] pushcons 28 ............................. <"roomatic_password_field">
  [ 33] pushcons 65 ............................. <"roomatic_pwdfieldsbg">
  [ 35] pushcons 66 ............................. <"roomatic_pwd_desc">
  [ 37] pusharglist 4 ........................... <["roomatic_password2_field", "roomatic_password_field", "roomatic_pwdfieldsbg", "roomatic_pwd_desc"]>
  [ 39] pushlist ................................ <["roomatic_password2_field", "roomatic_password_field", "roomatic_pwdfieldsbg", "roomatic_pwd_desc"]>
  [ 40] setlocal 1 .............................. tElems = ["roomatic_password2_field", "roomatic_password_field", "roomatic_pwdfieldsbg", "roomatic_pwd_desc"]
  [ 42] getlocal 1 .............................. <tElems>
  [ 44] peek 0
  [ 46] pusharglist 1
  [ 48] extcall 47
  [ 50] pushint8 1
  [ 52] peek 0
  [ 54] peek 2
  [ 56] lteq
  [ 57] jmpifz [127] ............................ repeat with tElemID in tElems
  [ 60] peek 2
  [ 62] peek 1
  [ 64] pusharglist 2
  [ 66] extcall 40
  [ 68] setlocal 2
  [ 70] getlocal 0 .............................. <tWndObj>
  [ 72] getlocal 2 .............................. <tElemID>
  [ 74] pusharglist 2 ........................... <tWndObj, tElemID>
  [ 76] objcall 62 .............................. <tWndObj.getElement(tElemID)>
  [ 78] setlocal 3 .............................. tElem = tWndObj.getElement(tElemID)
  [ 80] getlocal 3 .............................. <tElem>
  [ 82] pusharglist 1 ........................... <tElem>
  [ 84] extcall 81 .............................. <voidp(tElem)>
  [ 86] not ..................................... <not voidp(tElem)>
  [ 87] jmpifz [122] ............................ if not voidp(tElem) then
  [ 90] getlocal 3 .............................. <tElem>
  [ 92] pushsymb 132 ............................ <#visible>
  [ 94] getparam 1 .............................. <tVisible>
  [ 96] pusharglistnoret 3 ...................... <tElem, #visible, tVisible>
  [ 98] objcall 133 ............................. tElem.setProperty(#visible, tVisible)
  [100] getlocal 2 .............................. <tElemID>
  [102] pushcons 29 ............................. <"roomatic_password2_field">
  [104] eq ...................................... <tElemID = "roomatic_password2_field">
  [105] getlocal 2 .............................. <tElemID>
  [107] pushcons 28 ............................. <"roomatic_password_field">
  [109] eq ...................................... <tElemID = "roomatic_password_field">
  [110] or ...................................... <(tElemID = "roomatic_password2_field") or (tElemID = "roomatic_password_field")>
  [111] jmpifz [122] ............................ if (tElemID = "roomatic_password2_field") or (tElemID = "roomatic_password_field") then
  [114] getlocal 3 .............................. <tElem>
  [116] pushcons 10 ............................. <EMPTY>
  [118] pusharglistnoret 2 ...................... <tElem, EMPTY>
  [120] objcall 63 .............................. tElem.setText(EMPTY)
  [122] pushint8 1
  [124] add
  [125] endrepeat [ 52]
  [127] pop 3
  [129] ret
end

on eventProc me, tEvent, tSprID, tParm
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 33 ............................. <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [836] ............................ if tEvent = #mouseUp then / else
  [  8] getparam 2 .............................. <tSprID>
  [ 10] peek 0 .................................. case tSprID of
  [ 12] pushcons 67 ............................. <"roomatic_1_button_start">
  [ 14] eq
  [ 15] jmpifz [ 29] ............................ (case) "roomatic_1_button_start":
  [ 18] getparam 0 .............................. <me>
  [ 20] pushcons 35 ............................. <"roomatic2.window">
  [ 22] pusharglistnoret 2 ...................... <me, "roomatic2.window">
  [ 24] objcall 3 ............................... me.ChangeWindowView("roomatic2.window")
  [ 26] jmp [831]
  [ 29] peek 0
  [ 31] pushcons 68 ............................. <"roomatic_1_button_cancel">
  [ 33] eq
  [ 34] jmpifz [ 46] ............................ (case) "roomatic_1_button_cancel":
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglistnoret 1 ...................... <me>
  [ 41] objcall 2 ............................... me.showHideRoomKiosk()
  [ 43] jmp [831]
  [ 46] peek 0
  [ 48] pushcons 42 ............................. <"roomatic_choosecategory">
  [ 50] eq
  [ 51] jmpifz [ 93] ............................ (case) "roomatic_choosecategory":
  [ 54] getprop 16 .............................. <pWindowTitle>
  [ 56] pusharglist 1 ........................... <pWindowTitle>
  [ 58] extcall 28 .............................. <getWindow(pWindowTitle)>
  [ 60] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 62] getlocal 0 .............................. <tWndObj>
  [ 64] pushcons 42 ............................. <"roomatic_choosecategory">
  [ 66] pusharglist 2 ........................... <tWndObj, "roomatic_choosecategory">
  [ 68] objcall 62 .............................. <tWndObj.getElement("roomatic_choosecategory")>
  [ 70] setlocal 1 .............................. tDropDown = tWndObj.getElement("roomatic_choosecategory")
  [ 72] getlocal 1 .............................. <tDropDown>
  [ 74] getparam 3 .............................. <tParm>
  [ 76] pusharglistnoret 2 ...................... <tDropDown, tParm>
  [ 78] objcall 137 ............................. tDropDown.setSelection(tParm)
  [ 80] getprop 17 .............................. <pRoomProps>
  [ 82] pushsymb 56 ............................. <#category>
  [ 84] getparam 3 .............................. <tParm>
  [ 86] pusharglistnoret 3 ...................... <pRoomProps, #category, tParm>
  [ 88] objcall 42 .............................. pRoomProps[#category] = tParm
  [ 90] jmp [831]
  [ 93] peek 0
  [ 95] pushcons 69 ............................. <"roomatic_2_button_cancel">
  [ 97] eq
  [ 98] jmpifz [110] ............................ (case) "roomatic_2_button_cancel":
  [101] getparam 0 .............................. <me>
  [103] pusharglistnoret 1 ...................... <me>
  [105] objcall 2 ............................... me.showHideRoomKiosk()
  [107] jmp [831]
  [110] peek 0
  [112] pushcons 70 ............................. <"roomatic_2_button_next">
  [114] eq
  [115] jmpifz [216] ............................ (case) "roomatic_2_button_next":
  [118] getprop 16 .............................. <pWindowTitle>
  [120] pusharglist 1 ........................... <pWindowTitle>
  [122] extcall 28 .............................. <getWindow(pWindowTitle)>
  [124] pushcons 36 ............................. <"roomatic_roomname_field">
  [126] pusharglist 2 ........................... <getWindow(pWindowTitle), "roomatic_roomname_field">
  [128] objcall 62 .............................. <getWindow(pWindowTitle).getElement("roomatic_roomname_field")>
  [130] pusharglist 1 ........................... <getWindow(pWindowTitle).getElement("roomatic_roomname_field")>
  [132] objcall 60 .............................. <getWindow(pWindowTitle).getElement("roomatic_roomname_field").getText()>
  [134] pushcons 7 .............................. <"/">
  [136] pushcons 10 ............................. <EMPTY>
  [138] pusharglist 3 ........................... <getWindow(pWindowTitle).getElement("roomatic_roomname_field").getText(), "/", EMPTY>
  [140] extcall 48 .............................. <replaceChars(getWindow(pWindowTitle).getElement("roomatic_roomname_field").getText(), "/", EMPTY)>
  [142] setlocal 2 .............................. tRoomName = replaceChars(getWindow(pWindowTitle).getElement("roomatic_roomname_field").getText(), "/", EMPTY)
  [144] getlocal 2 .............................. <tRoomName>
  [146] pushcons 10 ............................. <EMPTY>
  [148] eq ...................................... <tRoomName = EMPTY>
  [149] jmpifz [171] ............................ if tRoomName = EMPTY then
  [152] pop 1
  [154] pushsymb 139 ............................ <#alert>
  [156] pushsymb 140 ............................ <#msg>
  [158] pushcons 71 ............................. <"roomatic_givename">
  [160] pusharglist 2 ........................... <[#msg: "roomatic_givename"]>
  [162] pushproplist ............................ <[#msg: "roomatic_givename"]>
  [163] pusharglist 2 ........................... <#alert, [#msg: "roomatic_givename"]>
  [165] extcall 138 ............................. <executeMessage(#alert, [#msg: "roomatic_givename"])>
  [167] pusharglistnoret 1 ...................... <executeMessage(#alert, [#msg: "roomatic_givename"])>
  [169] extcall 21 .............................. return executeMessage(#alert, [#msg: "roomatic_givename"])
  [171] getprop 17 .............................. <pRoomProps>
  [173] pushsymb 38 ............................. <#name>
  [175] getlocal 2 .............................. <tRoomName>
  [177] pusharglistnoret 3 ...................... <pRoomProps, #name, tRoomName>
  [179] objcall 42 .............................. pRoomProps[#name] = tRoomName
  [181] getprop 17 .............................. <pRoomProps>
  [183] pushsymb 43 ............................. <#description>
  [185] getprop 16 .............................. <pWindowTitle>
  [187] pusharglist 1 ........................... <pWindowTitle>
  [189] extcall 28 .............................. <getWindow(pWindowTitle)>
  [191] pushcons 37 ............................. <"romatic_roomdescription_field">
  [193] pusharglist 2 ........................... <getWindow(pWindowTitle), "romatic_roomdescription_field">
  [195] objcall 62 .............................. <getWindow(pWindowTitle).getElement("romatic_roomdescription_field")>
  [197] pusharglist 1 ........................... <getWindow(pWindowTitle).getElement("romatic_roomdescription_field")>
  [199] objcall 60 .............................. <getWindow(pWindowTitle).getElement("romatic_roomdescription_field").getText()>
  [201] pusharglistnoret 3 ...................... <pRoomProps, #description, getWindow(pWindowTitle).getElement("romatic_roomdescription_field").getText()>
  [203] objcall 42 .............................. pRoomProps[#description] = getWindow(pWindowTitle).getElement("romatic_roomdescription_field").getText()
  [205] getparam 0 .............................. <me>
  [207] pushcons 46 ............................. <"roomatic3.window">
  [209] pusharglistnoret 2 ...................... <me, "roomatic3.window">
  [211] objcall 3 ............................... me.ChangeWindowView("roomatic3.window")
  [213] jmp [831]
  [216] peek 0
  [218] pushcons 40 ............................. <"roomatic_namedisplayed_yes_check">
  [220] eq
  [221] jmpifz [250] ............................ (case) "roomatic_namedisplayed_yes_check":
  [224] getprop 17 .............................. <pRoomProps>
  [226] pushsymb 46 ............................. <#showownername>
  [228] pushint8 1 .............................. <1>
  [230] pusharglistnoret 3 ...................... <pRoomProps, #showownername, 1>
  [232] objcall 42 .............................. pRoomProps[#showownername] = 1
  [234] getparam 0 .............................. <me>
  [236] pushcons 40 ............................. <"roomatic_namedisplayed_yes_check">
  [238] pushcons 41 ............................. <"roomatic_namedisplayed_no_check">
  [240] pusharglist 1 ........................... <["roomatic_namedisplayed_no_check"]>
  [242] pushlist ................................ <["roomatic_namedisplayed_no_check"]>
  [243] pusharglistnoret 3 ...................... <me, "roomatic_namedisplayed_yes_check", ["roomatic_namedisplayed_no_check"]>
  [245] objcall 7 ............................... me.updateRadioButton("roomatic_namedisplayed_yes_check", ["roomatic_namedisplayed_no_check"])
  [247] jmp [831]
  [250] peek 0
  [252] pushcons 41 ............................. <"roomatic_namedisplayed_no_check">
  [254] eq
  [255] jmpifz [283] ............................ (case) "roomatic_namedisplayed_no_check":
  [258] getprop 17 .............................. <pRoomProps>
  [260] pushsymb 46 ............................. <#showownername>
  [262] pushzero ................................ <0>
  [263] pusharglistnoret 3 ...................... <pRoomProps, #showownername, 0>
  [265] objcall 42 .............................. pRoomProps[#showownername] = 0
  [267] getparam 0 .............................. <me>
  [269] pushcons 41 ............................. <"roomatic_namedisplayed_no_check">
  [271] pushcons 40 ............................. <"roomatic_namedisplayed_yes_check">
  [273] pusharglist 1 ........................... <["roomatic_namedisplayed_yes_check"]>
  [275] pushlist ................................ <["roomatic_namedisplayed_yes_check"]>
  [276] pusharglistnoret 3 ...................... <me, "roomatic_namedisplayed_no_check", ["roomatic_namedisplayed_yes_check"]>
  [278] objcall 7 ............................... me.updateRadioButton("roomatic_namedisplayed_no_check", ["roomatic_namedisplayed_yes_check"])
  [280] jmp [831]
  [283] peek 0
  [285] pushcons 72 ............................. <"roomatic3_button_model_next">
  [287] eq
  [288] jmpifz [323] ............................ (case) "roomatic3_button_model_next":
  [291] getprop 20 .............................. <pRoomIndex>
  [293] pushint8 1 .............................. <1>
  [295] add ..................................... <pRoomIndex + 1>
  [296] setprop 20 .............................. pRoomIndex = pRoomIndex + 1
  [298] getprop 20 .............................. <pRoomIndex>
  [300] getprop 18 .............................. <pRoomsProps>
  [302] getobjprop 47 ........................... <pRoomsProps.count>
  [304] gt ...................................... <pRoomIndex > pRoomsProps.count>
  [305] jmpifz [312] ............................ if pRoomIndex > pRoomsProps.count then
  [308] pushint8 1 .............................. <1>
  [310] setprop 20 .............................. pRoomIndex = 1
  [312] getparam 0 .............................. <me>
  [314] pushcons 46 ............................. <"roomatic3.window">
  [316] pusharglistnoret 2 ...................... <me, "roomatic3.window">
  [318] objcall 12 .............................. me.setPageValues("roomatic3.window")
  [320] jmp [831]
  [323] peek 0
  [325] pushcons 73 ............................. <"roomatic3_button_model_prev">
  [327] eq
  [328] jmpifz [363] ............................ (case) "roomatic3_button_model_prev":
  [331] getprop 20 .............................. <pRoomIndex>
  [333] pushint8 1 .............................. <1>
  [335] sub ..................................... <pRoomIndex - 1>
  [336] setprop 20 .............................. pRoomIndex = pRoomIndex - 1
  [338] getprop 20 .............................. <pRoomIndex>
  [340] pushint8 1 .............................. <1>
  [342] lt ...................................... <pRoomIndex < 1>
  [343] jmpifz [352] ............................ if pRoomIndex < 1 then
  [346] getprop 18 .............................. <pRoomsProps>
  [348] getobjprop 47 ........................... <pRoomsProps.count>
  [350] setprop 20 .............................. pRoomIndex = pRoomsProps.count
  [352] getparam 0 .............................. <me>
  [354] pushcons 46 ............................. <"roomatic3.window">
  [356] pusharglistnoret 2 ...................... <me, "roomatic3.window">
  [358] objcall 12 .............................. me.setPageValues("roomatic3.window")
  [360] jmp [831]
  [363] peek 0
  [365] pushcons 53 ............................. <"roomatic_3_button_next">
  [367] eq
  [368] jmpifz [382] ............................ (case) "roomatic_3_button_next":
  [371] getparam 0 .............................. <me>
  [373] pushcons 57 ............................. <"roomatic4.window">
  [375] pusharglistnoret 2 ...................... <me, "roomatic4.window">
  [377] objcall 3 ............................... me.ChangeWindowView("roomatic4.window")
  [379] jmp [831]
  [382] peek 0
  [384] pushcons 74 ............................. <"roomatic_3_button_previous">
  [386] eq
  [387] jmpifz [401] ............................ (case) "roomatic_3_button_previous":
  [390] getparam 0 .............................. <me>
  [392] pushcons 35 ............................. <"roomatic2.window">
  [394] pusharglistnoret 2 ...................... <me, "roomatic2.window">
  [396] objcall 3 ............................... me.ChangeWindowView("roomatic2.window")
  [398] jmp [831]
  [401] peek 0
  [403] pushcons 75 ............................. <"roomatic_4_button_done">
  [405] eq
  [406] jmpifz [502] ............................ (case) "roomatic_4_button_done":
  [409] getprop 17 .............................. <pRoomProps>
  [411] pushsymb 45 ............................. <#door>
  [413] pusharglist 2 ........................... <pRoomProps, #door>
  [415] objcall 40 .............................. <pRoomProps[#door]>
  [417] pushcons 9 .............................. <"password">
  [419] eq ...................................... <pRoomProps[#door] = "password">
  [420] jmpifz [485] ............................ if pRoomProps[#door] = "password" then
  [423] getparam 0 .............................. <me>
  [425] pusharglist 1 ........................... <me>
  [427] objcall 9 ............................... <me.checkPassword()>
  [429] setlocal 3 .............................. tReturnValue = me.checkPassword()
  [431] getlocal 3 .............................. <tReturnValue>
  [433] pushint8 1 .............................. <1>
  [435] nteq .................................... <tReturnValue <> 1>
  [436] jmpifz [485] ............................ if tReturnValue <> 1 then
  [439] getlocal 3 .............................. <tReturnValue>
  [441] pusharglist 1 ........................... <tReturnValue>
  [443] extcall 60 .............................. <getText(tReturnValue)>
  [445] setlocal 4 .............................. tReturnText = getText(tReturnValue)
  [447] getparam 0 .............................. <me>
  [449] pushcons 76 ............................. <"roomatic5.window">
  [451] pusharglistnoret 2 ...................... <me, "roomatic5.window">
  [453] objcall 3 ............................... me.ChangeWindowView("roomatic5.window")
  [455] getprop 16 .............................. <pWindowTitle>
  [457] pusharglist 1 ........................... <pWindowTitle>
  [459] extcall 28 .............................. <getWindow(pWindowTitle)>
  [461] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [463] getlocal 0 .............................. <tWndObj>
  [465] pushcons 77 ............................. <"roomatic_errorMsg">
  [467] pusharglist 2 ........................... <tWndObj, "roomatic_errorMsg">
  [469] objcall 62 .............................. <tWndObj.getElement("roomatic_errorMsg")>
  [471] getlocal 4 .............................. <tReturnText>
  [473] pusharglistnoret 2 ...................... <tWndObj.getElement("roomatic_errorMsg"), tReturnText>
  [475] objcall 63 .............................. tWndObj.getElement("roomatic_errorMsg").setText(tReturnText)
  [477] pop 1
  [479] pushint8 1 .............................. <1>
  [481] pusharglistnoret 1 ...................... <1>
  [483] extcall 21 .............................. return 1
  [485] getparam 0 .............................. <me>
  [487] pusharglistnoret 1 ...................... <me>
  [489] objcall 4 ............................... me.createRoom()
  [491] getparam 0 .............................. <me>
  [493] pushcons 78 ............................. <"roomatic6.window">
  [495] pusharglistnoret 2 ...................... <me, "roomatic6.window">
  [497] objcall 3 ............................... me.ChangeWindowView("roomatic6.window")
  [499] jmp [831]
  [502] peek 0
  [504] pushcons 79 ............................. <"roomatic_4_button_previous">
  [506] eq
  [507] jmpifz [521] ............................ (case) "roomatic_4_button_previous":
  [510] getparam 0 .............................. <me>
  [512] pushcons 46 ............................. <"roomatic3.window">
  [514] pusharglistnoret 2 ...................... <me, "roomatic3.window">
  [516] objcall 3 ............................... me.ChangeWindowView("roomatic3.window")
  [518] jmp [831]
  [521] peek 0
  [523] pushcons 80 ............................. <"goto_club_layouts">
  [525] eq
  [526] jmpifz [540] ............................ (case) "goto_club_layouts":
  [529] getparam 0 .............................. <me>
  [531] pushcons 47 ............................. <"roomatic_club.window">
  [533] pusharglistnoret 2 ...................... <me, "roomatic_club.window">
  [535] objcall 3 ............................... me.ChangeWindowView("roomatic_club.window")
  [537] jmp [831]
  [540] peek 0
  [542] pushcons 81 ............................. <"goto_normal_layouts">
  [544] eq
  [545] jmpifz [559] ............................ (case) "goto_normal_layouts":
  [548] getparam 0 .............................. <me>
  [550] pushcons 46 ............................. <"roomatic3.window">
  [552] pusharglistnoret 2 ...................... <me, "roomatic3.window">
  [554] objcall 3 ............................... me.ChangeWindowView("roomatic3.window")
  [556] jmp [831]
  [559] peek 0
  [561] pushcons 59 ............................. <"roomatic_security_open">
  [563] eq
  [564] jmpifz [611] ............................ (case) "roomatic_security_open":
  [567] getprop 17 .............................. <pRoomProps>
  [569] pushsymb 45 ............................. <#door>
  [571] pushcons 58 ............................. <"open">
  [573] pusharglistnoret 3 ...................... <pRoomProps, #door, "open">
  [575] objcall 42 .............................. pRoomProps[#door] = "open"
  [577] pushcons 61 ............................. <"roomatic_security_locked">
  [579] pushcons 62 ............................. <"roomatic_security_pwc">
  [581] pusharglist 2 ........................... <["roomatic_security_locked", "roomatic_security_pwc"]>
  [583] pushlist ................................ <["roomatic_security_locked", "roomatic_security_pwc"]>
  [584] setlocal 5 .............................. tOthers = ["roomatic_security_locked", "roomatic_security_pwc"]
  [586] getparam 0 .............................. <me>
  [588] pushcons 59 ............................. <"roomatic_security_open">
  [590] getlocal 5 .............................. <tOthers>
  [592] pusharglistnoret 3 ...................... <me, "roomatic_security_open", tOthers>
  [594] objcall 7 ............................... me.updateRadioButton("roomatic_security_open", tOthers)
  [596] pusharglist 0 ........................... <[:]>
  [598] pushproplist ............................ <[:]>
  [599] setprop 15 .............................. pTempPassword = [:]
  [601] getparam 0 .............................. <me>
  [603] pushzero ................................ <0>
  [604] pusharglistnoret 2 ...................... <me, 0>
  [606] objcall 13 .............................. me.showPasswordFields(0)
  [608] jmp [831]
  [611] peek 0
  [613] pushcons 61 ............................. <"roomatic_security_locked">
  [615] eq
  [616] jmpifz [663] ............................ (case) "roomatic_security_locked":
  [619] getprop 17 .............................. <pRoomProps>
  [621] pushsymb 45 ............................. <#door>
  [623] pushcons 60 ............................. <"closed">
  [625] pusharglistnoret 3 ...................... <pRoomProps, #door, "closed">
  [627] objcall 42 .............................. pRoomProps[#door] = "closed"
  [629] pushcons 59 ............................. <"roomatic_security_open">
  [631] pushcons 62 ............................. <"roomatic_security_pwc">
  [633] pusharglist 2 ........................... <["roomatic_security_open", "roomatic_security_pwc"]>
  [635] pushlist ................................ <["roomatic_security_open", "roomatic_security_pwc"]>
  [636] setlocal 5 .............................. tOthers = ["roomatic_security_open", "roomatic_security_pwc"]
  [638] getparam 0 .............................. <me>
  [640] pushcons 61 ............................. <"roomatic_security_locked">
  [642] getlocal 5 .............................. <tOthers>
  [644] pusharglistnoret 3 ...................... <me, "roomatic_security_locked", tOthers>
  [646] objcall 7 ............................... me.updateRadioButton("roomatic_security_locked", tOthers)
  [648] pusharglist 0 ........................... <[:]>
  [650] pushproplist ............................ <[:]>
  [651] setprop 15 .............................. pTempPassword = [:]
  [653] getparam 0 .............................. <me>
  [655] pushzero ................................ <0>
  [656] pusharglistnoret 2 ...................... <me, 0>
  [658] objcall 13 .............................. me.showPasswordFields(0)
  [660] jmp [831]
  [663] peek 0
  [665] pushcons 62 ............................. <"roomatic_security_pwc">
  [667] eq
  [668] jmpifz [716] ............................ (case) "roomatic_security_pwc":
  [671] getprop 17 .............................. <pRoomProps>
  [673] pushsymb 45 ............................. <#door>
  [675] pushcons 9 .............................. <"password">
  [677] pusharglistnoret 3 ...................... <pRoomProps, #door, "password">
  [679] objcall 42 .............................. pRoomProps[#door] = "password"
  [681] pushcons 59 ............................. <"roomatic_security_open">
  [683] pushcons 61 ............................. <"roomatic_security_locked">
  [685] pusharglist 2 ........................... <["roomatic_security_open", "roomatic_security_locked"]>
  [687] pushlist ................................ <["roomatic_security_open", "roomatic_security_locked"]>
  [688] setlocal 5 .............................. tOthers = ["roomatic_security_open", "roomatic_security_locked"]
  [690] getparam 0 .............................. <me>
  [692] pushcons 62 ............................. <"roomatic_security_pwc">
  [694] getlocal 5 .............................. <tOthers>
  [696] pusharglistnoret 3 ...................... <me, "roomatic_security_pwc", tOthers>
  [698] objcall 7 ............................... me.updateRadioButton("roomatic_security_pwc", tOthers)
  [700] pusharglist 0 ........................... <[:]>
  [702] pushproplist ............................ <[:]>
  [703] setprop 15 .............................. pTempPassword = [:]
  [705] getparam 0 .............................. <me>
  [707] pushint8 1 .............................. <1>
  [709] pusharglistnoret 2 ...................... <me, 1>
  [711] objcall 13 .............................. me.showPasswordFields(1)
  [713] jmp [831]
  [716] peek 0
  [718] pushcons 63 ............................. <"roomatic_security_letmove">
  [720] eq
  [721] jmpifz [739] ............................ (case) "roomatic_security_letmove":
  [724] getparam 0 .............................. <me>
  [726] pushcons 63 ............................. <"roomatic_security_letmove">
  [728] pushsymb 68 ............................. <#ableothersmovefurniture>
  [730] pushint8 1 .............................. <1>
  [732] pusharglistnoret 4 ...................... <me, "roomatic_security_letmove", #ableothersmovefurniture, 1>
  [734] objcall 8 ............................... me.updateCheckButton("roomatic_security_letmove", #ableothersmovefurniture, 1)
  [736] jmp [831]
  [739] peek 0
  [741] pushcons 82 ............................. <"roomatic_5_button_back">
  [743] eq
  [744] jmpifz [758] ............................ (case) "roomatic_5_button_back":
  [747] getparam 0 .............................. <me>
  [749] pushcons 57 ............................. <"roomatic4.window">
  [751] pusharglistnoret 2 ...................... <me, "roomatic4.window">
  [753] objcall 3 ............................... me.ChangeWindowView("roomatic4.window")
  [755] jmp [831]
  [758] peek 0
  [760] pushcons 83 ............................. <"roomatic_7_button_go">
  [762] eq
  [763] jmpifz [800] ............................ (case) "roomatic_7_button_go":
  [766] getparam 0 .............................. <me>
  [768] pusharglistnoret 1 ...................... <me>
  [770] objcall 2 ............................... me.showHideRoomKiosk()
  [772] pushsymb 142 ............................ <#navigator>
  [774] pusharglist 1 ........................... <#navigator>
  [776] extcall 141 ............................. <threadExists(#navigator)>
  [778] jmpifz [797] ............................ if threadExists(#navigator) then
  [781] pushsymb 142 ............................ <#navigator>
  [783] pusharglist 1 ........................... <#navigator>
  [785] extcall 143 ............................. <getThread(#navigator)>
  [787] pusharglist 1 ........................... <getThread(#navigator)>
  [789] objcall 25 .............................. <getThread(#navigator).getComponent()>
  [791] getprop 17 .............................. <pRoomProps>
  [793] pusharglistnoret 2 ...................... <getThread(#navigator).getComponent(), pRoomProps>
  [795] objcall 144 ............................. getThread(#navigator).getComponent().roomkioskGoingFlat(pRoomProps)
  [797] jmp [831]
  [800] peek 0
  [802] pushcons 84 ............................. <"roomatic_7_button_cancel">
  [804] eq
  [805] jmpifz [817] ............................ (case) "roomatic_7_button_cancel":
  [808] getparam 0 .............................. <me>
  [810] pusharglistnoret 1 ...................... <me>
  [812] objcall 2 ............................... me.showHideRoomKiosk()
  [814] jmp [831]
  [817] peek 0
  [819] pushcons 85 ............................. <"close">
  [821] eq
  [822] jmpifz [831] ............................ (case) "close":
  [825] getparam 0 .............................. <me>
  [827] pusharglistnoret 1 ...................... <me>
  [829] objcall 2 ............................... me.showHideRoomKiosk()
  [831] pop 1 ................................... end case
  [833] jmp [1210]
  [836] getparam 1 .............................. <tEvent>
  [838] pushsymb 35 ............................. <#keyDown>
  [840] eq ...................................... <tEvent = #keyDown>
  [841] jmpifz [1210] ........................... if tEvent = #keyDown then
  [844] pusharglist 0 ........................... <>
  [846] thebuiltin 146 .......................... <the key>
  [848] pusharglist 1 ........................... <the key>
  [850] extcall 145 ............................. <charToNum(the key)>
  [852] setlocal 6 .............................. tASCII = charToNum(the key)
  [854] getlocal 6 .............................. <tASCII>
  [856] pushint8 28 ............................. <28>
  [858] lt ...................................... <tASCII < 28>
  [859] jmpifz [882] ............................ if tASCII < 28 then
  [862] getlocal 6 .............................. <tASCII>
  [864] pushint8 8 .............................. <8>
  [866] nteq .................................... <tASCII <> 8>
  [867] getlocal 6 .............................. <tASCII>
  [869] pushint8 9 .............................. <9>
  [871] nteq .................................... <tASCII <> 9>
  [872] and ..................................... <(tASCII <> 8) and (tASCII <> 9)>
  [873] jmpifz [882] ............................ if (tASCII <> 8) and (tASCII <> 9) then
  [876] pushint8 1 .............................. <1>
  [878] pusharglistnoret 1 ...................... <1>
  [880] extcall 21 .............................. return 1
  [882] getparam 2 .............................. <tSprID>
  [884] peek 0 .................................. case tSprID of
  [886] pushcons 28 ............................. <"roomatic_password_field">
  [888] nteq
  [889] jmpifz [900] ............................ (case) "roomatic_password_field", ...
  [892] peek 0
  [894] pushcons 29 ............................. <"roomatic_password2_field">
  [896] eq
  [897] jmpifz [1208] ........................... (case) ..., "roomatic_password2_field":
  [900] getprop 15 .............................. <pTempPassword>
  [902] getparam 2 .............................. <tSprID>
  [904] pusharglist 2 ........................... <pTempPassword, tSprID>
  [906] objcall 40 .............................. <pTempPassword[tSprID]>
  [908] pusharglist 1 ........................... <pTempPassword[tSprID]>
  [910] extcall 81 .............................. <voidp(pTempPassword[tSprID])>
  [912] jmpifz [926] ............................ if voidp(pTempPassword[tSprID]) then
  [915] getprop 15 .............................. <pTempPassword>
  [917] getparam 2 .............................. <tSprID>
  [919] pusharglist 0 ........................... <[]>
  [921] pushlist ................................ <[]>
  [922] pusharglistnoret 3 ...................... <pTempPassword, tSprID, []>
  [924] objcall 42 .............................. pTempPassword[tSprID] = []
  [926] pusharglist 0 ........................... <>
  [928] thebuiltin 147 .......................... <the keyCode>
  [930] peek 0 .................................. case the keyCode of
  [932] pushint8 48 ............................. <48>
  [934] eq
  [935] jmpifz [948] ............................ (case) 48:
  [938] pop 2
  [940] pushzero ................................ <0>
  [941] pusharglistnoret 1 ...................... <0>
  [943] extcall 21 .............................. return 0
  [945] jmp [1101]
  [948] peek 0
  [950] pushint8 51 ............................. <51>
  [952] eq
  [953] jmpifz [996] ............................ (case) 51:
  [956] getprop 15 .............................. <pTempPassword>
  [958] getparam 2 .............................. <tSprID>
  [960] pusharglist 2 ........................... <pTempPassword, tSprID>
  [962] objcall 40 .............................. <pTempPassword[tSprID]>
  [964] getobjprop 47 ........................... <pTempPassword[tSprID].count>
  [966] pushzero ................................ <0>
  [967] gt ...................................... <pTempPassword[tSprID].count > 0>
  [968] jmpifz [993] ............................ if pTempPassword[tSprID].count > 0 then
  [971] getprop 15 .............................. <pTempPassword>
  [973] getparam 2 .............................. <tSprID>
  [975] pusharglist 2 ........................... <pTempPassword, tSprID>
  [977] objcall 40 .............................. <pTempPassword[tSprID]>
  [979] getprop 15 .............................. <pTempPassword>
  [981] getparam 2 .............................. <tSprID>
  [983] pusharglist 2 ........................... <pTempPassword, tSprID>
  [985] objcall 40 .............................. <pTempPassword[tSprID]>
  [987] getobjprop 47 ........................... <pTempPassword[tSprID].count>
  [989] pusharglistnoret 2 ...................... <pTempPassword[tSprID], pTempPassword[tSprID].count>
  [991] objcall 148 ............................. pTempPassword[tSprID].deleteAt(pTempPassword[tSprID].count)
  [993] jmp [1101]
  [996] peek 0
  [998] pushint8 117 ............................ <117>
  [1000] eq
  [1001] jmpifz [1018] .......................... (case) 117:
  [1004] getprop 15 ............................. <pTempPassword>
  [1006] getparam 2 ............................. <tSprID>
  [1008] pusharglist 0 .......................... <[]>
  [1010] pushlist ............................... <[]>
  [1011] pusharglistnoret 3 ..................... <pTempPassword, tSprID, []>
  [1013] objcall 42 ............................. pTempPassword[tSprID] = []
  [1015] jmp [1101] ............................. (case) otherwise:
  [1018] pushcons 86 ............................ <"permitted.name.chars">
  [1020] pushcons 87 ............................ <"1234567890qwertyuiopasdfghjklzxcvbnm_-=+?!@<>:.,">
  [1022] pusharglist 2 .......................... <"permitted.name.chars", "1234567890qwertyuiopasdfghjklzxcvbnm_-=+?!@<>:.,">
  [1024] extcall 149 ............................ <getVariable("permitted.name.chars", "1234567890qwertyuiopasdfghjklzxcvbnm_-=+?!@<>:.,")>
  [1026] setlocal 7 ............................. tValidKeys = getVariable("permitted.name.chars", "1234567890qwertyuiopasdfghjklzxcvbnm_-=+?!@<>:.,")
  [1028] pusharglist 0 .......................... <>
  [1030] thebuiltin 146 ......................... <the key>
  [1032] setlocal 8 ............................. tTheKey = the key
  [1034] getlocal 8 ............................. <tTheKey>
  [1036] pusharglist 1 .......................... <tTheKey>
  [1038] extcall 145 ............................ <charToNum(tTheKey)>
  [1040] setlocal 6 ............................. tASCII = charToNum(tTheKey)
  [1042] getlocal 6 ............................. <tASCII>
  [1044] pushint8 31 ............................ <31>
  [1046] gt ..................................... <tASCII > 31>
  [1047] getlocal 6 ............................. <tASCII>
  [1049] pushint16 128 .......................... <128>
  [1052] lt ..................................... <tASCII < 128>
  [1053] and .................................... <(tASCII > 31) and (tASCII < 128)>
  [1054] jmpifz [1101] .......................... if (tASCII > 31) and (tASCII < 128) then
  [1057] getlocal 7 ............................. <tValidKeys>
  [1059] getlocal 8 ............................. <tTheKey>
  [1061] containsstr ............................ <tValidKeys contains tTheKey>
  [1062] getlocal 7 ............................. <tValidKeys>
  [1064] pushcons 10 ............................ <EMPTY>
  [1066] eq ..................................... <tValidKeys = EMPTY>
  [1067] or ..................................... <(tValidKeys contains tTheKey) or (tValidKeys = EMPTY)>
  [1068] jmpifz [1101] .......................... if (tValidKeys contains tTheKey) or (tValidKeys = EMPTY) then
  [1071] getprop 15 ............................. <pTempPassword>
  [1073] getparam 2 ............................. <tSprID>
  [1075] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1077] objcall 40 ............................. <pTempPassword[tSprID]>
  [1079] getobjprop 47 .......................... <pTempPassword[tSprID].count>
  [1081] pushint8 32 ............................ <32>
  [1083] lt ..................................... <pTempPassword[tSprID].count < 32>
  [1084] jmpifz [1101] .......................... if pTempPassword[tSprID].count < 32 then
  [1087] getprop 15 ............................. <pTempPassword>
  [1089] getparam 2 ............................. <tSprID>
  [1091] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1093] objcall 40 ............................. <pTempPassword[tSprID]>
  [1095] getlocal 8 ............................. <tTheKey>
  [1097] pusharglistnoret 2 ..................... <pTempPassword[tSprID], tTheKey>
  [1099] objcall 150 ............................ pTempPassword[tSprID].append(tTheKey)
  [1101] pop 1 .................................. end case
  [1103] pushcons 10 ............................ <EMPTY>
  [1105] setlocal 9 ............................. tStr = EMPTY
  [1107] getprop 15 ............................. <pTempPassword>
  [1109] getparam 2 ............................. <tSprID>
  [1111] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1113] objcall 40 ............................. <pTempPassword[tSprID]>
  [1115] peek 0
  [1117] pusharglist 1
  [1119] extcall 47
  [1121] pushint8 1
  [1123] peek 0
  [1125] peek 2
  [1127] lteq
  [1128] jmpifz [1152] .......................... repeat with tChar in pTempPassword[tSprID]
  [1131] peek 2
  [1133] peek 1
  [1135] pusharglist 2
  [1137] extcall 40
  [1139] setlocal 10
  [1141] pushcons 88 ............................ <"*">
  [1143] pushint8 9 ............................. <9>
  [1145] put 37 ................................. put "*" after tStr
  [1147] pushint8 1
  [1149] add
  [1150] endrepeat [1123]
  [1152] pop 3
  [1154] getprop 16 ............................. <pWindowTitle>
  [1156] pusharglist 1 .......................... <pWindowTitle>
  [1158] extcall 28 ............................. <getWindow(pWindowTitle)>
  [1160] getparam 2 ............................. <tSprID>
  [1162] pusharglist 2 .......................... <getWindow(pWindowTitle), tSprID>
  [1164] objcall 62 ............................. <getWindow(pWindowTitle).getElement(tSprID)>
  [1166] getlocal 9 ............................. <tStr>
  [1168] pusharglistnoret 2 ..................... <getWindow(pWindowTitle).getElement(tSprID), tStr>
  [1170] objcall 63 ............................. getWindow(pWindowTitle).getElement(tSprID).setText(tStr)
  [1172] getprop 15 ............................. <pTempPassword>
  [1174] getparam 2 ............................. <tSprID>
  [1176] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1178] objcall 40 ............................. <pTempPassword[tSprID]>
  [1180] getobjprop 47 .......................... <pTempPassword[tSprID].count>
  [1182] pushint8 24 ............................ <24>
  [1184] set 7 .................................. set the selStart to pTempPassword[tSprID].count
  [1186] getprop 15 ............................. <pTempPassword>
  [1188] getparam 2 ............................. <tSprID>
  [1190] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1192] objcall 40 ............................. <pTempPassword[tSprID]>
  [1194] getobjprop 47 .......................... <pTempPassword[tSprID].count>
  [1196] pushint8 23 ............................ <23>
  [1198] set 7 .................................. set the selEnd to pTempPassword[tSprID].count
  [1200] pop 1
  [1202] pushint8 1 ............................. <1>
  [1204] pusharglistnoret 1 ..................... <1>
  [1206] extcall 21 ............................. return 1
  [1208] pop 1
  [1210] ret
end
