property pState, pValidPartProps, pValidPartGroups

on construct me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"start">
  [  4] pusharglist 2 ........................... <me, "start">
  [  6] objcall 26 .............................. <me.updateState("start")>
  [  8] pusharglistnoret 1 ...................... <me.updateState("start")>
  [ 10] extcall 21 .............................. return me.updateState("start")
  [ 12] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 1 .............................. <"reset">
  [  4] pusharglist 2 ........................... <me, "reset">
  [  6] objcall 26 .............................. <me.updateState("reset")>
  [  8] pusharglistnoret 1 ...................... <me.updateState("reset")>
  [ 10] extcall 21 .............................. return me.updateState("reset")
  [ 12] ret
end

on showHideRoomKiosk me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 163 ............................. <me.getInterface()>
  [  6] pusharglist 1 ........................... <me.getInterface()>
  [  8] objcall 2 ............................... <me.getInterface().showHideRoomKiosk()>
  [ 10] pusharglistnoret 1 ...................... <me.getInterface().showHideRoomKiosk()>
  [ 12] extcall 21 .............................. return me.getInterface().showHideRoomKiosk()
  [ 14] ret
end

on sendNewRoomData me, tFlatData
  [  0] pushcons 2 .............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 149 ............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 164 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 10] jmpifz [ 47] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [ 13] pushcons 2 .............................. <"connection.info.id">
  [ 15] pusharglist 1 ........................... <"connection.info.id">
  [ 17] extcall 149 ............................. <getVariable("connection.info.id")>
  [ 19] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 21] extcall 165 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 23] pushcons 3 .............................. <"CREATEFLAT">
  [ 25] pushsymb 67 ............................. <#string>
  [ 27] getparam 1 .............................. <tFlatData>
  [ 29] pusharglist 1 ........................... <tFlatData>
  [ 31] extcall 67 .............................. <string(tFlatData)>
  [ 33] pusharglist 2 ........................... <[#string: string(tFlatData)]>
  [ 35] pushproplist ............................ <[#string: string(tFlatData)]>
  [ 36] pusharglist 3 ........................... <getConnection(getVariable("connection.info.id")), "CREATEFLAT", [#string: string(tFlatData)]>
  [ 38] objcall 166 ............................. <getConnection(getVariable("connection.info.id")).send("CREATEFLAT", [#string: string(tFlatData)])>
  [ 40] pusharglistnoret 1 ...................... <getConnection(getVariable("connection.info.id")).send("CREATEFLAT", [#string: string(tFlatData)])>
  [ 42] extcall 21 .............................. return getConnection(getVariable("connection.info.id")).send("CREATEFLAT", [#string: string(tFlatData)])
  [ 44] jmp [ 52]
  [ 47] pushzero ................................ <0>
  [ 48] pusharglistnoret 1 ...................... <0>
  [ 50] extcall 21 .............................. return 0
  [ 52] ret
end

on sendSetFlatInfo me, tFlatMsg
  [  0] pushcons 2 .............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 149 ............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 164 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 10] jmpifz [ 43] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [ 13] pushcons 2 .............................. <"connection.info.id">
  [ 15] pusharglist 1 ........................... <"connection.info.id">
  [ 17] extcall 149 ............................. <getVariable("connection.info.id")>
  [ 19] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 21] extcall 165 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 23] pushcons 4 .............................. <"SETFLATINFO">
  [ 25] pushsymb 67 ............................. <#string>
  [ 27] getparam 1 .............................. <tFlatMsg>
  [ 29] pusharglist 1 ........................... <tFlatMsg>
  [ 31] extcall 67 .............................. <string(tFlatMsg)>
  [ 33] pusharglist 2 ........................... <[#string: string(tFlatMsg)]>
  [ 35] pushproplist ............................ <[#string: string(tFlatMsg)]>
  [ 36] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "SETFLATINFO", [#string: string(tFlatMsg)]>
  [ 38] objcall 166 ............................. getConnection(getVariable("connection.info.id")).send("SETFLATINFO", [#string: string(tFlatMsg)])
  [ 40] jmp [ 48]
  [ 43] pushzero ................................ <0>
  [ 44] pusharglistnoret 1 ...................... <0>
  [ 46] extcall 21 .............................. return 0
  [ 48] ret
end

on sendFlatCategory me, tNodeId, tCategoryId
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pusharglist 1 ........................... <tNodeId>
  [  4] extcall 81 .............................. <voidp(tNodeId)>
  [  6] jmpifz [ 23] ............................ if voidp(tNodeId) then
  [  9] getparam 0 .............................. <me>
  [ 11] pushcons 5 .............................. <"Node ID expected!">
  [ 13] pushsymb 57 ............................. <#sendFlatCategory>
  [ 15] pusharglist 3 ........................... <me, "Node ID expected!", #sendFlatCategory>
  [ 17] extcall 94 .............................. <error(me, "Node ID expected!", #sendFlatCategory)>
  [ 19] pusharglistnoret 1 ...................... <error(me, "Node ID expected!", #sendFlatCategory)>
  [ 21] extcall 21 .............................. return error(me, "Node ID expected!", #sendFlatCategory)
  [ 23] getparam 2 .............................. <tCategoryId>
  [ 25] pusharglist 1 ........................... <tCategoryId>
  [ 27] extcall 81 .............................. <voidp(tCategoryId)>
  [ 29] jmpifz [ 46] ............................ if voidp(tCategoryId) then
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 6 .............................. <"Category ID expected!">
  [ 36] pushsymb 57 ............................. <#sendFlatCategory>
  [ 38] pusharglist 3 ........................... <me, "Category ID expected!", #sendFlatCategory>
  [ 40] extcall 94 .............................. <error(me, "Category ID expected!", #sendFlatCategory)>
  [ 42] pusharglistnoret 1 ...................... <error(me, "Category ID expected!", #sendFlatCategory)>
  [ 44] extcall 21 .............................. return error(me, "Category ID expected!", #sendFlatCategory)
  [ 46] pushcons 2 .............................. <"connection.info.id">
  [ 48] pusharglist 1 ........................... <"connection.info.id">
  [ 50] extcall 149 ............................. <getVariable("connection.info.id")>
  [ 52] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 54] extcall 164 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 56] jmpifz [101] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [ 59] pushcons 2 .............................. <"connection.info.id">
  [ 61] pusharglist 1 ........................... <"connection.info.id">
  [ 63] extcall 149 ............................. <getVariable("connection.info.id")>
  [ 65] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 67] extcall 165 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 69] pushcons 7 .............................. <"SETFLATCAT">
  [ 71] pushsymb 167 ............................ <#integer>
  [ 73] getparam 1 .............................. <tNodeId>
  [ 75] pusharglist 1 ........................... <tNodeId>
  [ 77] extcall 167 ............................. <integer(tNodeId)>
  [ 79] pushsymb 167 ............................ <#integer>
  [ 81] getparam 2 .............................. <tCategoryId>
  [ 83] pusharglist 1 ........................... <tCategoryId>
  [ 85] extcall 167 ............................. <integer(tCategoryId)>
  [ 87] pusharglist 4 ........................... <[#integer: integer(tNodeId), #integer: integer(tCategoryId)]>
  [ 89] pushproplist ............................ <[#integer: integer(tNodeId), #integer: integer(tCategoryId)]>
  [ 90] pusharglist 3 ........................... <getConnection(getVariable("connection.info.id")), "SETFLATCAT", [#integer: integer(tNodeId), #integer: integer(tCategoryId)]>
  [ 92] objcall 166 ............................. <getConnection(getVariable("connection.info.id")).send("SETFLATCAT", [#integer: integer(tNodeId), #integer: integer(tCategoryId)])>
  [ 94] pusharglistnoret 1 ...................... <getConnection(getVariable("connection.info.id")).send("SETFLATCAT", [#integer: integer(tNodeId), #integer: integer(tCategoryId)])>
  [ 96] extcall 21 .............................. return getConnection(getVariable("connection.info.id")).send("SETFLATCAT", [#integer: integer(tNodeId), #integer: integer(tCategoryId)])
  [ 98] jmp [106]
  [101] pushzero ................................ <0>
  [102] pusharglistnoret 1 ...................... <0>
  [104] extcall 21 .............................. return 0
  [106] ret
end

on updateState me, tstate, tProps
  [  0] getparam 1 .............................. <tstate>
  [  2] peek 0 .................................. case tstate of
  [  4] pushcons 1 .............................. <"reset">
  [  6] eq
  [  7] jmpifz [ 35] ............................ (case) "reset":
  [ 10] getparam 1 .............................. <tstate>
  [ 12] setprop 170 ............................. pState = tstate
  [ 14] pop 1
  [ 16] pushsymb 172 ............................ <#open_roomkiosk>
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 31 .............................. <me.getID()>
  [ 24] pusharglist 2 ........................... <#open_roomkiosk, me.getID()>
  [ 26] extcall 171 ............................. <unregisterMessage(#open_roomkiosk, me.getID())>
  [ 28] pusharglistnoret 1 ...................... <unregisterMessage(#open_roomkiosk, me.getID())>
  [ 30] extcall 21 .............................. return unregisterMessage(#open_roomkiosk, me.getID())
  [ 32] jmp [ 89]
  [ 35] peek 0
  [ 37] pushcons 0 .............................. <"start">
  [ 39] eq
  [ 40] jmpifz [ 70] ............................ (case) "start":
  [ 43] getparam 1 .............................. <tstate>
  [ 45] setprop 170 ............................. pState = tstate
  [ 47] pop 1
  [ 49] pushsymb 172 ............................ <#open_roomkiosk>
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 31 .............................. <me.getID()>
  [ 57] pushsymb 2 .............................. <#showHideRoomKiosk>
  [ 59] pusharglist 3 ........................... <#open_roomkiosk, me.getID(), #showHideRoomKiosk>
  [ 61] extcall 173 ............................. <registerMessage(#open_roomkiosk, me.getID(), #showHideRoomKiosk)>
  [ 63] pusharglistnoret 1 ...................... <registerMessage(#open_roomkiosk, me.getID(), #showHideRoomKiosk)>
  [ 65] extcall 21 .............................. return registerMessage(#open_roomkiosk, me.getID(), #showHideRoomKiosk)
  [ 67] jmp [ 89] ............................... (case) otherwise:
  [ 70] pop 1
  [ 72] getparam 0 .............................. <me>
  [ 74] pushcons 8 .............................. <"Unknown state:">
  [ 76] getparam 1 .............................. <tstate>
  [ 78] joinpadstr .............................. <"Unknown state:" && tstate>
  [ 79] pushsymb 26 ............................. <#updateState>
  [ 81] pusharglist 3 ........................... <me, "Unknown state:" && tstate, #updateState>
  [ 83] extcall 94 .............................. <error(me, "Unknown state:" && tstate, #updateState)>
  [ 85] pusharglistnoret 1 ...................... <error(me, "Unknown state:" && tstate, #updateState)>
  [ 87] extcall 21 .............................. return error(me, "Unknown state:" && tstate, #updateState)
  [ 89] pop 1 ................................... end case
  [ 91] ret
end

on getState me
  [  0] getprop 170 ............................. <pState>
  [  2] pusharglistnoret 1 ...................... <pState>
  [  4] extcall 21 .............................. return pState
  [  6] ret
end
