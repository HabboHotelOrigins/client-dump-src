property pTileImages, pPriorityTaskList, pSecondaryTaskList, pPriorityTilesPerUpdate, pGeometry, pSprite, pBuffer, pMember

on construct me
  [  0] pushint8 4 .............................. <4>
  [  2] setprop 338 ............................. pPriorityTilesPerUpdate = 4
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setprop 339 ............................. pPriorityTaskList = []
  [ 11] pusharglist 0 ........................... <[]>
  [ 13] pushlist ................................ <[]>
  [ 14] setprop 340 ............................. pSecondaryTaskList = []
  [ 17] pushsymb 42 ............................. <#room_interface>
  [ 19] pusharglist 1 ........................... <#room_interface>
  [ 21] extcall 41 .............................. <getObject(#room_interface)>
  [ 23] pusharglist 1 ........................... <getObject(#room_interface)>
  [ 25] objcall 212 ............................. <getObject(#room_interface).getGeometry()>
  [ 27] setprop 341 ............................. pGeometry = getObject(#room_interface).getGeometry()
  [ 30] pusharglist 0 ........................... <[]>
  [ 32] pushlist ................................ <[]>
  [ 33] setprop 342 ............................. pTileImages = []
  [ 36] pushint8 1 .............................. <1>
  [ 38] setlocal 0
  [ 40] getlocal 0
  [ 42] pushint8 4 .............................. <4>
  [ 44] lteq
  [ 45] jmpifz [117] ............................ repeat with tTeamId = 1 to 4
  [ 48] pusharglist 0 ........................... <[]>
  [ 50] pushlist ................................ <[]>
  [ 51] setlocal 1 .............................. tTemp = []
  [ 53] pushint8 1 .............................. <1>
  [ 55] setlocal 2
  [ 57] getlocal 2
  [ 59] pushint8 4 .............................. <4>
  [ 61] lteq
  [ 62] jmpifz [ 98] ............................ repeat with tstate = 1 to 4
  [ 65] getlocal 1 .............................. <tTemp>
  [ 67] pushcons 0 .............................. <"tile">
  [ 69] getlocal 0 .............................. <tTeamId>
  [ 71] joinstr ................................. <"tile" & tTeamId>
  [ 72] pushcons 1 .............................. <"_">
  [ 74] joinstr ................................. <"tile" & tTeamId & "_">
  [ 75] getlocal 2 .............................. <tstate>
  [ 77] joinstr ................................. <"tile" & tTeamId & "_" & tstate>
  [ 78] pusharglist 1 ........................... <"tile" & tTeamId & "_" & tstate>
  [ 80] extcall 78 .............................. <member("tile" & tTeamId & "_" & tstate)>
  [ 82] getobjprop 79 ........................... <member("tile" & tTeamId & "_" & tstate).image>
  [ 84] pusharglistnoret 2 ...................... <tTemp, member("tile" & tTeamId & "_" & tstate).image>
  [ 86] objcall 281 ............................. tTemp.add(member("tile" & tTeamId & "_" & tstate).image)
  [ 89] pushint8 1
  [ 91] getlocal 2
  [ 93] add
  [ 94] setlocal 2
  [ 96] endrepeat [ 57]
  [ 98] getprop 342 ............................. <pTileImages>
  [101] getlocal 1 .............................. <tTemp>
  [103] pusharglistnoret 2 ...................... <pTileImages, tTemp>
  [105] objcall 281 ............................. pTileImages.add(tTemp)
  [108] pushint8 1
  [110] getlocal 0
  [112] add
  [113] setlocal 0
  [115] endrepeat [ 40]
  [117] pushint8 1 .............................. <1>
  [119] pusharglistnoret 1 ...................... <1>
  [121] extcall 44 .............................. return 1
  [123] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 48 .............................. <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 344 ............................. removeUpdate(me.getID())
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglistnoret 1 ...................... <me>
  [ 15] objcall 337 ............................. me.clearAll()
  [ 18] ret
end

on refresh me, tTopic, tdata
  [  0] getparam 1 .............................. <tTopic>
  [  2] peek 0 .................................. case tTopic of
  [  4] pushsymb 345 ............................ <#fullgamestatus_tiles>
  [  7] eq
  [  8] jmpifz [ 43] ............................ (case) #fullgamestatus_tiles:
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglistnoret 1 ...................... <me>
  [ 15] objcall 336 ............................. me.initBuffer()
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 48 .............................. <me.getID()>
  [ 24] pusharglistnoret 1 ...................... <me.getID()>
  [ 26] extcall 346 ............................. receiveUpdate(me.getID())
  [ 29] getparam 0 .............................. <me>
  [ 31] pushsymb 347 ............................ <#gamestatus_flood>
  [ 34] getparam 2 .............................. <tdata>
  [ 36] pusharglistnoret 3 ...................... <me, #gamestatus_flood, tdata>
  [ 38] objcall 225 ............................. me.refresh(#gamestatus_flood, tdata)
  [ 40] jmp [192]
  [ 43] peek 0
  [ 45] pushsymb 232 ............................ <#gamereset>
  [ 47] eq
  [ 48] jmpifz [ 72] ............................ (case) #gamereset:
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglistnoret 1 ...................... <me>
  [ 55] objcall 336 ............................. me.initBuffer()
  [ 58] getparam 0 .............................. <me>
  [ 60] pusharglist 1 ........................... <me>
  [ 62] objcall 48 .............................. <me.getID()>
  [ 64] pusharglistnoret 1 ...................... <me.getID()>
  [ 66] extcall 346 ............................. receiveUpdate(me.getID())
  [ 69] jmp [192]
  [ 72] peek 0
  [ 74] pushsymb 348 ............................ <#gamestatus_tiles>
  [ 77] eq
  [ 78] jmpifz [138] ............................ (case) #gamestatus_tiles:
  [ 81] getparam 2 .............................. <tdata>
  [ 83] peek 0
  [ 85] pusharglist 1
  [ 87] extcall 90
  [ 89] pushint8 1
  [ 91] peek 0
  [ 93] peek 2
  [ 95] lteq
  [ 96] jmpifz [133] ............................ repeat with tTileProps in tdata
  [ 99] peek 2
  [101] peek 1
  [103] pusharglist 2
  [105] extcall 25
  [107] setlocal 0
  [109] getprop 339 ............................. <pPriorityTaskList>
  [112] getlocal 0 .............................. <tTileProps>
  [114] pusharglistnoret 2 ...................... <pPriorityTaskList, tTileProps>
  [116] objcall 281 ............................. pPriorityTaskList.add(tTileProps)
  [119] getparam 0 .............................. <me>
  [121] getlocal 0 .............................. <tTileProps>
  [123] pusharglistnoret 2 ...................... <me, tTileProps>
  [125] objcall 751 ............................. me.removeSecondaryTask(tTileProps)
  [128] pushint8 1
  [130] add
  [131] endrepeat [ 91]
  [133] pop 3
  [135] jmp [192]
  [138] peek 0
  [140] pushsymb 347 ............................ <#gamestatus_flood>
  [143] eq
  [144] jmpifz [192] ............................ (case) #gamestatus_flood:
  [147] getparam 2 .............................. <tdata>
  [149] peek 0
  [151] pusharglist 1
  [153] extcall 90
  [155] pushint8 1
  [157] peek 0
  [159] peek 2
  [161] lteq
  [162] jmpifz [190] ............................ repeat with tTileProps in tdata
  [165] peek 2
  [167] peek 1
  [169] pusharglist 2
  [171] extcall 25
  [173] setlocal 0
  [175] getprop 340 ............................. <pSecondaryTaskList>
  [178] getlocal 0 .............................. <tTileProps>
  [180] pusharglistnoret 2 ...................... <pSecondaryTaskList, tTileProps>
  [182] objcall 281 ............................. pSecondaryTaskList.add(tTileProps)
  [185] pushint8 1
  [187] add
  [188] endrepeat [157]
  [190] pop 3
  [192] pop 1 ................................... end case
  [194] ret
end

on update me
  [  0] getprop 339 ............................. <pPriorityTaskList>
  [  3] getobjprop 90 ........................... <pPriorityTaskList.count>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <pPriorityTaskList.count = 0>
  [  7] jmpifz [ 59] ............................ if pPriorityTaskList.count = 0 then / else
  [ 10] getprop 340 ............................. <pSecondaryTaskList>
  [ 13] getobjprop 90 ........................... <pSecondaryTaskList.count>
  [ 15] pushzero ................................ <0>
  [ 16] eq ...................................... <pSecondaryTaskList.count = 0>
  [ 17] jmpifz [ 26] ............................ if pSecondaryTaskList.count = 0 then
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 44 .............................. return 1
  [ 26] getprop 340 ............................. <pSecondaryTaskList>
  [ 29] pushint8 1 .............................. <1>
  [ 31] pusharglist 2 ........................... <pSecondaryTaskList, 1>
  [ 33] objcall 25 .............................. <pSecondaryTaskList[1]>
  [ 35] setlocal 0 .............................. tProps = pSecondaryTaskList[1]
  [ 37] getprop 340 ............................. <pSecondaryTaskList>
  [ 40] pushint8 1 .............................. <1>
  [ 42] pusharglistnoret 2 ...................... <pSecondaryTaskList, 1>
  [ 44] objcall 350 ............................. pSecondaryTaskList.deleteAt(1)
  [ 47] getparam 0 .............................. <me>
  [ 49] getlocal 0 .............................. <tProps>
  [ 51] pusharglistnoret 2 ...................... <me, tProps>
  [ 53] objcall 335 ............................. me.render(tProps)
  [ 56] jmp [132]
  [ 59] pushint8 1 .............................. <1>
  [ 61] setlocal 1
  [ 63] getlocal 1
  [ 65] getprop 338 ............................. <pPriorityTilesPerUpdate>
  [ 68] lteq
  [ 69] jmpifz [132] ............................ repeat with tTilesToRender = 1 to pPriorityTilesPerUpdate
  [ 72] getprop 339 ............................. <pPriorityTaskList>
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglist 2 ........................... <pPriorityTaskList, 1>
  [ 79] objcall 25 .............................. <pPriorityTaskList[1]>
  [ 81] setlocal 0 .............................. tProps = pPriorityTaskList[1]
  [ 83] getprop 339 ............................. <pPriorityTaskList>
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglistnoret 2 ...................... <pPriorityTaskList, 1>
  [ 90] objcall 350 ............................. pPriorityTaskList.deleteAt(1)
  [ 93] getparam 0 .............................. <me>
  [ 95] getlocal 0 .............................. <tProps>
  [ 97] pusharglistnoret 2 ...................... <me, tProps>
  [ 99] objcall 335 ............................. me.render(tProps)
  [102] getprop 339 ............................. <pPriorityTaskList>
  [105] getobjprop 90 ........................... <pPriorityTaskList.count>
  [107] pushzero ................................ <0>
  [108] eq ...................................... <pPriorityTaskList.count = 0>
  [109] jmpifz [123] ............................ if pPriorityTaskList.count = 0 then
  [112] getparam 0 .............................. <me>
  [114] pusharglist 1 ........................... <me>
  [116] objcall 334 ............................. <me.update()>
  [119] pusharglistnoret 1 ...................... <me.update()>
  [121] extcall 44 .............................. return me.update()
  [123] pushint8 1
  [125] getlocal 1
  [127] add
  [128] setlocal 1
  [130] endrepeat [ 63]
  [132] pushint8 1 .............................. <1>
  [134] pusharglistnoret 1 ...................... <1>
  [136] extcall 44 .............................. return 1
  [138] ret
end

on removeSecondaryTask me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 291 ............................ <#locX>
  [  5] pusharglist 2 ........................... <tProps, #locX>
  [  7] objcall 25 .............................. <tProps[#locX]>
  [  9] setlocal 0 .............................. tLocX = tProps[#locX]
  [ 11] getparam 1 .............................. <tProps>
  [ 13] pushsymb 293 ............................ <#locY>
  [ 16] pusharglist 2 ........................... <tProps, #locY>
  [ 18] objcall 25 .............................. <tProps[#locY]>
  [ 20] setlocal 1 .............................. tLocY = tProps[#locY]
  [ 22] pushint8 1 .............................. <1>
  [ 24] setlocal 2
  [ 26] getlocal 2
  [ 28] getprop 340 ............................. <pSecondaryTaskList>
  [ 31] getobjprop 90 ........................... <pSecondaryTaskList.count>
  [ 33] lteq
  [ 34] jmpifz [101] ............................ repeat with i = 1 to pSecondaryTaskList.count
  [ 37] getprop 340 ............................. <pSecondaryTaskList>
  [ 40] getlocal 2 .............................. <i>
  [ 42] pusharglist 2 ........................... <pSecondaryTaskList, i>
  [ 44] objcall 25 .............................. <pSecondaryTaskList[i]>
  [ 46] setlocal 3 .............................. tItem = pSecondaryTaskList[i]
  [ 48] getlocal 3 .............................. <tItem>
  [ 50] pushsymb 291 ............................ <#locX>
  [ 53] pusharglist 2 ........................... <tItem, #locX>
  [ 55] objcall 25 .............................. <tItem[#locX]>
  [ 57] getlocal 0 .............................. <tLocX>
  [ 59] eq ...................................... <tItem[#locX] = tLocX>
  [ 60] getlocal 3 .............................. <tItem>
  [ 62] pushsymb 293 ............................ <#locY>
  [ 65] pusharglist 2 ........................... <tItem, #locY>
  [ 67] objcall 25 .............................. <tItem[#locY]>
  [ 69] getlocal 1 .............................. <tLocY>
  [ 71] eq ...................................... <tItem[#locY] = tLocY>
  [ 72] and ..................................... <(tItem[#locX] = tLocX) and (tItem[#locY] = tLocY)>
  [ 73] jmpifz [ 92] ............................ if (tItem[#locX] = tLocX) and (tItem[#locY] = tLocY) then
  [ 76] getprop 340 ............................. <pSecondaryTaskList>
  [ 79] getlocal 2 .............................. <i>
  [ 81] pusharglistnoret 2 ...................... <pSecondaryTaskList, i>
  [ 83] objcall 350 ............................. pSecondaryTaskList.deleteAt(i)
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglistnoret 1 ...................... <1>
  [ 90] extcall 44 .............................. return 1
  [ 92] pushint8 1
  [ 94] getlocal 2
  [ 96] add
  [ 97] setlocal 2
  [ 99] endrepeat [ 26]
  [101] pushint8 1 .............................. <1>
  [103] pusharglistnoret 1 ...................... <1>
  [105] extcall 44 .............................. return 1
  [107] ret
end

on render me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pusharglist 1 ........................... <tProps>
  [  4] extcall 46 .............................. <ilk(tProps)>
  [  6] pushsymb 314 ............................ <#propList>
  [  9] eq ...................................... <ilk(tProps) = #propList>
  [ 10] not ..................................... <not (ilk(tProps) = #propList)>
  [ 11] jmpifz [ 19] ............................ if not (ilk(tProps) = #propList) then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 44 .............................. return 0
  [ 19] getparam 1 .............................. <tProps>
  [ 21] pushsymb 353 ............................ <#jumps>
  [ 24] pusharglist 2 ........................... <tProps, #jumps>
  [ 26] objcall 25 .............................. <tProps[#jumps]>
  [ 28] setlocal 0 .............................. tstate = tProps[#jumps]
  [ 30] getparam 1 .............................. <tProps>
  [ 32] pushsymb 298 ............................ <#teamId>
  [ 35] pusharglist 2 ........................... <tProps, #teamId>
  [ 37] objcall 25 .............................. <tProps[#teamId]>
  [ 39] pushint8 1 .............................. <1>
  [ 41] add ..................................... <tProps[#teamId] + 1>
  [ 42] setlocal 1 .............................. tTeamId = tProps[#teamId] + 1
  [ 44] getlocal 0 .............................. <tstate>
  [ 46] pushzero ................................ <0>
  [ 47] eq ...................................... <tstate = 0>
  [ 48] jmpifz [ 57] ............................ if tstate = 0 then
  [ 51] pushint8 1 .............................. <1>
  [ 53] pusharglistnoret 1 ...................... <1>
  [ 55] extcall 44 .............................. return 1
  [ 57] getprop 342 ............................. <pTileImages>
  [ 60] getlocal 1 .............................. <tTeamId>
  [ 62] pusharglist 2 ........................... <pTileImages, tTeamId>
  [ 64] objcall 25 .............................. <pTileImages[tTeamId]>
  [ 66] getlocal 0 .............................. <tstate>
  [ 68] pusharglist 2 ........................... <pTileImages[tTeamId], tstate>
  [ 70] objcall 25 .............................. <pTileImages[tTeamId][tstate]>
  [ 72] setlocal 2 .............................. tImage = pTileImages[tTeamId][tstate]
  [ 74] getlocal 2 .............................. <tImage>
  [ 76] pusharglist 0 ........................... <>
  [ 78] extcall 56 .............................. <VOID>
  [ 80] eq ...................................... <tImage = VOID>
  [ 81] jmpifz [ 89] ............................ if tImage = VOID then
  [ 84] pushzero ................................ <0>
  [ 85] pusharglistnoret 1 ...................... <0>
  [ 87] extcall 44 .............................. return 0
  [ 89] getprop 341 ............................. <pGeometry>
  [ 92] getparam 1 .............................. <tProps>
  [ 94] pushsymb 291 ............................ <#locX>
  [ 97] pusharglist 2 ........................... <tProps, #locX>
  [ 99] objcall 25 .............................. <tProps[#locX]>
  [101] getparam 1 .............................. <tProps>
  [103] pushsymb 293 ............................ <#locY>
  [106] pusharglist 2 ........................... <tProps, #locY>
  [108] objcall 25 .............................. <tProps[#locY]>
  [110] pushfloat32 0.0 ......................... <0.0>
  [115] pusharglist 4 ........................... <pGeometry, tProps[#locX], tProps[#locY], 0.0>
  [117] objcall 354 ............................. <pGeometry.getScreenCoordinate(tProps[#locX], tProps[#locY], 0.0)>
  [120] setlocal 3 .............................. tScreenLoc = pGeometry.getScreenCoordinate(tProps[#locX], tProps[#locY], 0.0)
  [122] getprop 355 ............................. <pSprite>
  [125] pusharglist 0 ........................... <>
  [127] extcall 56 .............................. <VOID>
  [129] eq ...................................... <pSprite = VOID>
  [130] jmpifz [138] ............................ if pSprite = VOID then
  [133] pushzero ................................ <0>
  [134] pusharglistnoret 1 ...................... <0>
  [136] extcall 44 .............................. return 0
  [138] getlocal 3 .............................. <tScreenLoc>
  [140] pushint8 1 .............................. <1>
  [142] getlocal 3 .............................. <tScreenLoc>
  [144] pushint8 1 .............................. <1>
  [146] pusharglist 2 ........................... <tScreenLoc, 1>
  [148] objcall 25 .............................. <tScreenLoc[1]>
  [150] getprop 355 ............................. <pSprite>
  [153] getobjprop 26 ........................... <pSprite.left>
  [155] sub ..................................... <tScreenLoc[1] - pSprite.left>
  [156] pushint8 2 .............................. <2>
  [158] add ..................................... <tScreenLoc[1] - pSprite.left + 2>
  [159] pusharglistnoret 3 ...................... <tScreenLoc, 1, tScreenLoc[1] - pSprite.left + 2>
  [161] objcall 28 .............................. tScreenLoc[1] = tScreenLoc[1] - pSprite.left + 2
  [163] getlocal 3 .............................. <tScreenLoc>
  [165] pushint8 2 .............................. <2>
  [167] getlocal 3 .............................. <tScreenLoc>
  [169] pushint8 2 .............................. <2>
  [171] pusharglist 2 ........................... <tScreenLoc, 2>
  [173] objcall 25 .............................. <tScreenLoc[2]>
  [175] getprop 355 ............................. <pSprite>
  [178] getobjprop 356 .......................... <pSprite.top>
  [181] sub ..................................... <tScreenLoc[2] - pSprite.top>
  [182] getlocal 2 .............................. <tImage>
  [184] getobjprop 357 .......................... <tImage.height>
  [187] pushint8 2 .............................. <2>
  [189] div ..................................... <tImage.height / 2>
  [190] sub ..................................... <tScreenLoc[2] - pSprite.top - (tImage.height / 2)>
  [191] pushint8 1 .............................. <1>
  [193] sub ..................................... <tScreenLoc[2] - pSprite.top - (tImage.height / 2) - 1>
  [194] pusharglistnoret 3 ...................... <tScreenLoc, 2, tScreenLoc[2] - pSprite.top - (tImage.height / 2) - 1>
  [196] objcall 28 .............................. tScreenLoc[2] = tScreenLoc[2] - pSprite.top - (tImage.height / 2) - 1
  [198] getlocal 2 .............................. <tImage>
  [200] getobjprop 358 .......................... <tImage.rect>
  [203] getlocal 3 .............................. <tScreenLoc>
  [205] pushint8 1 .............................. <1>
  [207] pusharglist 2 ........................... <tScreenLoc, 1>
  [209] objcall 25 .............................. <tScreenLoc[1]>
  [211] getlocal 3 .............................. <tScreenLoc>
  [213] pushint8 2 .............................. <2>
  [215] pusharglist 2 ........................... <tScreenLoc, 2>
  [217] objcall 25 .............................. <tScreenLoc[2]>
  [219] getlocal 3 .............................. <tScreenLoc>
  [221] pushint8 1 .............................. <1>
  [223] pusharglist 2 ........................... <tScreenLoc, 1>
  [225] objcall 25 .............................. <tScreenLoc[1]>
  [227] getlocal 3 .............................. <tScreenLoc>
  [229] pushint8 2 .............................. <2>
  [231] pusharglist 2 ........................... <tScreenLoc, 2>
  [233] objcall 25 .............................. <tScreenLoc[2]>
  [235] pusharglist 4 ........................... <tScreenLoc[1], tScreenLoc[2], tScreenLoc[1], tScreenLoc[2]>
  [237] extcall 358 ............................. <rect(tScreenLoc[1], tScreenLoc[2], tScreenLoc[1], tScreenLoc[2])>
  [240] add ..................................... <tImage.rect + rect(tScreenLoc[1], tScreenLoc[2], tScreenLoc[1], tScreenLoc[2])>
  [241] setlocal 4 .............................. tTargetRect = tImage.rect + rect(tScreenLoc[1], tScreenLoc[2], tScreenLoc[1], tScreenLoc[2])
  [243] getprop 359 ............................. <pBuffer>
  [246] getlocal 2 .............................. <tImage>
  [248] getlocal 4 .............................. <tTargetRect>
  [250] getlocal 2 .............................. <tImage>
  [252] getobjprop 358 .......................... <tImage.rect>
  [255] pushsymb 360 ............................ <#ink>
  [258] pushint8 36 ............................. <36>
  [260] pusharglist 2 ........................... <[#ink: 36]>
  [262] pushproplist ............................ <[#ink: 36]>
  [263] pusharglistnoret 5 ...................... <pBuffer, tImage, tTargetRect, tImage.rect, [#ink: 36]>
  [265] objcall 361 ............................. pBuffer.copyPixels(tImage, tTargetRect, tImage.rect, [#ink: 36])
  [268] pushint8 1 .............................. <1>
  [270] pusharglistnoret 1 ...................... <1>
  [272] extcall 44 .............................. return 1
  [274] ret
end

on initBuffer me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 339 ............................. pPriorityTaskList = []
  [  6] pusharglist 0 ........................... <[]>
  [  8] pushlist ................................ <[]>
  [  9] setprop 340 ............................. pSecondaryTaskList = []
  [ 12] pushcons 2 .............................. <"__bounce_tempworld">
  [ 14] setlocal 0 .............................. tName = "__bounce_tempworld"
  [ 16] getlocal 0 .............................. <tName>
  [ 18] pusharglist 1 ........................... <tName>
  [ 20] extcall 187 ............................. <getmemnum(tName)>
  [ 22] pushzero ................................ <0>
  [ 23] eq ...................................... <getmemnum(tName) = 0>
  [ 24] jmpifz [ 46] ............................ if getmemnum(tName) = 0 then / else
  [ 27] getlocal 0 .............................. <tName>
  [ 29] pushsymb 189 ............................ <#bitmap>
  [ 31] pusharglist 2 ........................... <tName, #bitmap>
  [ 33] extcall 366 ............................. <createMember(tName, #bitmap)>
  [ 36] pusharglist 1 ........................... <createMember(tName, #bitmap)>
  [ 38] extcall 78 .............................. <member(createMember(tName, #bitmap))>
  [ 40] setprop 365 ............................. pMember = member(createMember(tName, #bitmap))
  [ 43] jmp [ 59]
  [ 46] getlocal 0 .............................. <tName>
  [ 48] pusharglist 1 ........................... <tName>
  [ 50] extcall 187 ............................. <getmemnum(tName)>
  [ 52] pusharglist 1 ........................... <getmemnum(tName)>
  [ 54] extcall 78 .............................. <member(getmemnum(tName))>
  [ 56] setprop 365 ............................. pMember = member(getmemnum(tName))
  [ 59] pushsymb 42 ............................. <#room_interface>
  [ 61] pusharglist 1 ........................... <#room_interface>
  [ 63] extcall 41 .............................. <getObject(#room_interface)>
  [ 65] pusharglist 1 ........................... <getObject(#room_interface)>
  [ 67] objcall 43 .............................. <getObject(#room_interface).getRoomVisualizer()>
  [ 69] setlocal 1 .............................. tVisObj = getObject(#room_interface).getRoomVisualizer()
  [ 71] getlocal 1 .............................. <tVisObj>
  [ 73] pushzero ................................ <0>
  [ 74] eq ...................................... <tVisObj = 0>
  [ 75] jmpifz [ 93] ............................ if tVisObj = 0 then
  [ 78] getparam 0 .............................. <me>
  [ 80] pushcons 3 .............................. <"Room visualizer not found.">
  [ 82] pushsymb 336 ............................ <#initBuffer>
  [ 85] pusharglist 3 ........................... <me, "Room visualizer not found.", #initBuffer>
  [ 87] extcall 65 .............................. <error(me, "Room visualizer not found.", #initBuffer)>
  [ 89] pusharglistnoret 1 ...................... <error(me, "Room visualizer not found.", #initBuffer)>
  [ 91] extcall 44 .............................. return error(me, "Room visualizer not found.", #initBuffer)
  [ 93] getlocal 1 .............................. <tVisObj>
  [ 95] pushcons 4 .............................. <"floor">
  [ 97] pusharglist 2 ........................... <tVisObj, "floor">
  [ 99] objcall 45 .............................. <tVisObj.getSprById("floor")>
  [101] setprop 355 ............................. pSprite = tVisObj.getSprById("floor")
  [104] getprop 355 ............................. <pSprite>
  [107] pushzero ................................ <0>
  [108] eq ...................................... <pSprite = 0>
  [109] jmpifz [127] ............................ if pSprite = 0 then
  [112] getparam 0 .............................. <me>
  [114] pushcons 5 .............................. <"Arena floor not found.">
  [116] pushsymb 336 ............................ <#initBuffer>
  [119] pusharglist 3 ........................... <me, "Arena floor not found.", #initBuffer>
  [121] extcall 65 .............................. <error(me, "Arena floor not found.", #initBuffer)>
  [123] pusharglistnoret 1 ...................... <error(me, "Arena floor not found.", #initBuffer)>
  [125] extcall 44 .............................. return error(me, "Arena floor not found.", #initBuffer)
  [127] pushcons 6 .............................. <"bb_arena">
  [129] pusharglist 1 ........................... <"bb_arena">
  [131] extcall 78 .............................. <member("bb_arena")>
  [133] getobjprop 79 ........................... <member("bb_arena").image>
  [135] setlocal 2 .............................. tImg = member("bb_arena").image
  [137] getprop 365 ............................. <pMember>
  [140] getlocal 2 .............................. <tImg>
  [142] getobjprop 80 ........................... <tImg.width>
  [144] getlocal 2 .............................. <tImg>
  [146] getobjprop 357 .......................... <tImg.height>
  [149] pushint8 8 .............................. <8>
  [151] pusharglist 3 ........................... <tImg.width, tImg.height, 8>
  [153] extcall 79 .............................. <image(tImg.width, tImg.height, 8)>
  [155] setobjprop 79 ........................... pMember.image = image(tImg.width, tImg.height, 8)
  [157] getprop 365 ............................. <pMember>
  [160] getchainedprop 79 ....................... <pMember.image>
  [162] getlocal 2 .............................. <tImg>
  [164] getlocal 2 .............................. <tImg>
  [166] getobjprop 358 .......................... <tImg.rect>
  [169] getlocal 2 .............................. <tImg>
  [171] getobjprop 358 .......................... <tImg.rect>
  [174] pusharglistnoret 4 ...................... <pMember.image, tImg, tImg.rect, tImg.rect>
  [176] objcall 361 ............................. pMember.image.copyPixels(tImg, tImg.rect, tImg.rect)
  [179] getprop 365 ............................. <pMember>
  [182] pushcons 6 .............................. <"bb_arena">
  [184] pusharglist 1 ........................... <"bb_arena">
  [186] extcall 78 .............................. <member("bb_arena")>
  [188] getobjprop 367 .......................... <member("bb_arena").regPoint>
  [191] setobjprop 367 .......................... pMember.regPoint = member("bb_arena").regPoint
  [194] getprop 365 ............................. <pMember>
  [197] getobjprop 79 ........................... <pMember.image>
  [199] setprop 359 ............................. pBuffer = pMember.image
  [202] getprop 355 ............................. <pSprite>
  [205] getprop 365 ............................. <pMember>
  [208] pusharglistnoret 2 ...................... <pSprite, pMember>
  [210] objcall 368 ............................. pSprite.setMember(pMember)
  [213] pushint8 1 .............................. <1>
  [215] pusharglistnoret 1 ...................... <1>
  [217] extcall 44 .............................. return 1
  [219] ret
end

on clearAll me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 56 .............................. <VOID>
  [  4] setprop 359 ............................. pBuffer = VOID
  [  7] getprop 365 ............................. <pMember>
  [ 10] pusharglist 0 ........................... <>
  [ 12] extcall 56 .............................. <VOID>
  [ 14] nteq .................................... <pMember <> VOID>
  [ 15] jmpifz [ 28] ............................ if pMember <> VOID then
  [ 18] getprop 365 ............................. <pMember>
  [ 21] getobjprop 104 .......................... <pMember.name>
  [ 23] pusharglistnoret 1 ...................... <pMember.name>
  [ 25] extcall 370 ............................. removeMember(pMember.name)
  [ 28] pusharglist 0 ........................... <>
  [ 30] extcall 56 .............................. <VOID>
  [ 32] setprop 365 ............................. pMember = VOID
  [ 35] pushint8 1 .............................. <1>
  [ 37] pusharglistnoret 1 ...................... <1>
  [ 39] extcall 44 .............................. return 1
  [ 41] ret
end
