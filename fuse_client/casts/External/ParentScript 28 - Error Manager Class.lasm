property pDebugLevel, pErrorCache, pCacheSize

on construct me
  [  0] getmovieprop 82 ......................... <the runMode>
  [  2] pushcons 0 .............................. <"Author">
  [  4] containsstr ............................. <the runMode contains "Author">
  [  5] not ..................................... <not (the runMode contains "Author")>
  [  6] jmpifz [ 14] ............................ if not (the runMode contains "Author") then
  [  9] getparam 0 .............................. <me>
  [ 11] setmovieprop 673 ........................ the alertHook = me
  [ 14] pushint8 1 .............................. <1>
  [ 16] setprop 676 ............................. pDebugLevel = 1
  [ 19] pushcons 1 .............................. <EMPTY>
  [ 21] setprop 677 ............................. pErrorCache = EMPTY
  [ 24] pushint8 30 ............................. <30>
  [ 26] setprop 678 ............................. pCacheSize = 30
  [ 29] pushint8 1 .............................. <1>
  [ 31] pusharglistnoret 1 ...................... <1>
  [ 33] extcall 25 .............................. return 1
  [ 35] ret
end

on deconstruct me
  [  0] pushzero ................................ <0>
  [  1] setmovieprop 673 ........................ the alertHook = 0
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 1 ...................... <1>
  [  8] extcall 25 .............................. return 1
  [ 10] ret
end

on error me, tObject, tMsg, tMethod
  [  0] getparam 1 .............................. <tObject>
  [  2] pusharglist 1 ........................... <tObject>
  [  4] extcall 112 ............................. <objectp(tObject)>
  [  6] jmpifz [ 68] ............................ if objectp(tObject) then / else
  [  9] getparam 1 .............................. <tObject>
  [ 11] pusharglist 1 ........................... <tObject>
  [ 13] extcall 593 ............................. <string(tObject)>
  [ 16] setparam 1 .............................. tObject = string(tObject)
  [ 18] getparam 1 .............................. <tObject>
  [ 20] pushsymb 289 ............................ <#word>
  [ 23] pushint8 2 .............................. <2>
  [ 25] getparam 1 .............................. <tObject>
  [ 27] pushsymb 289 ............................ <#word>
  [ 30] pusharglist 2 ........................... <tObject, #word>
  [ 32] objcall 22 .............................. <tObject.word.count>
  [ 34] pushint8 2 .............................. <2>
  [ 36] sub ..................................... <tObject.word.count - 2>
  [ 37] pusharglist 4 ........................... <tObject, #word, 2, tObject.word.count - 2>
  [ 39] objcall 290 ............................. <tObject.word[2..tObject.word.count - 2]>
  [ 42] setparam 1 .............................. tObject = tObject.word[2..tObject.word.count - 2]
  [ 44] getparam 1 .............................. <tObject>
  [ 46] pushsymb 291 ............................ <#char>
  [ 49] pushint8 2 .............................. <2>
  [ 51] getparam 1 .............................. <tObject>
  [ 53] pusharglist 1 ........................... <tObject>
  [ 55] extcall 293 ............................. <length(tObject)>
  [ 58] pusharglist 4 ........................... <tObject, #char, 2, length(tObject)>
  [ 60] objcall 290 ............................. <tObject.char[2..length(tObject)]>
  [ 63] setparam 1 .............................. tObject = tObject.char[2..length(tObject)]
  [ 65] jmp [ 72]
  [ 68] pushcons 2 .............................. <"Unknown">
  [ 70] setparam 1 .............................. tObject = "Unknown"
  [ 72] getparam 2 .............................. <tMsg>
  [ 74] pusharglist 1 ........................... <tMsg>
  [ 76] extcall 38 .............................. <stringp(tMsg)>
  [ 78] not ..................................... <not stringp(tMsg)>
  [ 79] jmpifz [ 86] ............................ if not stringp(tMsg) then
  [ 82] pushcons 2 .............................. <"Unknown">
  [ 84] setparam 2 .............................. tMsg = "Unknown"
  [ 86] getparam 3 .............................. <tMethod>
  [ 88] pusharglist 1 ........................... <tMethod>
  [ 90] extcall 46 .............................. <symbolp(tMethod)>
  [ 92] not ..................................... <not symbolp(tMethod)>
  [ 93] jmpifz [100] ............................ if not symbolp(tMethod) then
  [ 96] pushcons 2 .............................. <"Unknown">
  [ 98] setparam 3 .............................. tMethod = "Unknown"
  [100] pushcons 3 .............................. <RETURN>
  [102] setlocal 0 .............................. tError = RETURN
  [104] getlocal 0 .............................. <tError>
  [106] pushcons 4 .............................. <TAB>
  [108] joinstr ................................. <tError & TAB>
  [109] pushcons 5 .............................. <"Time:   ">
  [111] joinpadstr .............................. <tError & TAB && "Time:   ">
  [112] pushint8 8 .............................. <8>
  [114] get 0 ................................... <the long time>
  [116] joinpadstr .............................. <tError & TAB && "Time:   " && the long time>
  [117] pushcons 3 .............................. <RETURN>
  [119] joinstr ................................. <tError & TAB && "Time:   " && the long time & RETURN>
  [120] setlocal 0 .............................. tError = tError & TAB && "Time:   " && the long time & RETURN
  [122] getlocal 0 .............................. <tError>
  [124] pushcons 4 .............................. <TAB>
  [126] joinstr ................................. <tError & TAB>
  [127] pushcons 6 .............................. <"Method: ">
  [129] joinpadstr .............................. <tError & TAB && "Method: ">
  [130] getparam 3 .............................. <tMethod>
  [132] joinpadstr .............................. <tError & TAB && "Method: " && tMethod>
  [133] pushcons 3 .............................. <RETURN>
  [135] joinstr ................................. <tError & TAB && "Method: " && tMethod & RETURN>
  [136] setlocal 0 .............................. tError = tError & TAB && "Method: " && tMethod & RETURN
  [138] getlocal 0 .............................. <tError>
  [140] pushcons 4 .............................. <TAB>
  [142] joinstr ................................. <tError & TAB>
  [143] pushcons 7 .............................. <"Object: ">
  [145] joinpadstr .............................. <tError & TAB && "Object: ">
  [146] getparam 1 .............................. <tObject>
  [148] joinpadstr .............................. <tError & TAB && "Object: " && tObject>
  [149] pushcons 3 .............................. <RETURN>
  [151] joinstr ................................. <tError & TAB && "Object: " && tObject & RETURN>
  [152] setlocal 0 .............................. tError = tError & TAB && "Object: " && tObject & RETURN
  [154] getlocal 0 .............................. <tError>
  [156] pushcons 4 .............................. <TAB>
  [158] joinstr ................................. <tError & TAB>
  [159] pushcons 8 .............................. <"Message:">
  [161] joinpadstr .............................. <tError & TAB && "Message:">
  [162] getparam 2 .............................. <tMsg>
  [164] pushsymb 598 ............................ <#line>
  [167] pushint8 1 .............................. <1>
  [169] pusharglist 3 ........................... <tMsg, #line, 1>
  [171] objcall 290 ............................. <tMsg.line[1]>
  [174] joinpadstr .............................. <tError & TAB && "Message:" && tMsg.line[1]>
  [175] pushcons 3 .............................. <RETURN>
  [177] joinstr ................................. <tError & TAB && "Message:" && tMsg.line[1] & RETURN>
  [178] setlocal 0 .............................. tError = tError & TAB && "Message:" && tMsg.line[1] & RETURN
  [180] getparam 2 .............................. <tMsg>
  [182] pushsymb 598 ............................ <#line>
  [185] pusharglist 2 ........................... <tMsg, #line>
  [187] objcall 22 .............................. <tMsg.line.count>
  [189] pushint8 1 .............................. <1>
  [191] gt ...................................... <tMsg.line.count > 1>
  [192] jmpifz [249] ............................ if tMsg.line.count > 1 then
  [195] pushint8 2 .............................. <2>
  [197] setlocal 1
  [199] getlocal 1
  [201] getparam 2 .............................. <tMsg>
  [203] pushsymb 598 ............................ <#line>
  [206] pusharglist 2 ........................... <tMsg, #line>
  [208] objcall 22 .............................. <tMsg.line.count>
  [210] lteq
  [211] jmpifz [249] ............................ repeat with i = 2 to tMsg.line.count
  [214] getlocal 0 .............................. <tError>
  [216] pushcons 4 .............................. <TAB>
  [218] joinstr ................................. <tError & TAB>
  [219] pushcons 9 .............................. <"        ">
  [221] joinpadstr .............................. <tError & TAB && "        ">
  [222] getparam 2 .............................. <tMsg>
  [224] pushsymb 598 ............................ <#line>
  [227] getlocal 1 .............................. <i>
  [229] pusharglist 3 ........................... <tMsg, #line, i>
  [231] objcall 290 ............................. <tMsg.line[i]>
  [234] joinpadstr .............................. <tError & TAB && "        " && tMsg.line[i]>
  [235] pushcons 3 .............................. <RETURN>
  [237] joinstr ................................. <tError & TAB && "        " && tMsg.line[i] & RETURN>
  [238] setlocal 0 .............................. tError = tError & TAB && "        " && tMsg.line[i] & RETURN
  [240] pushint8 1
  [242] getlocal 1
  [244] add
  [245] setlocal 1
  [247] endrepeat [199]
  [249] getprop 677 ............................. <pErrorCache>
  [252] getlocal 0 .............................. <tError>
  [254] joinstr ................................. <pErrorCache & tError>
  [255] setprop 677 ............................. pErrorCache = pErrorCache & tError
  [258] getprop 677 ............................. <pErrorCache>
  [261] pushsymb 598 ............................ <#line>
  [264] pusharglist 2 ........................... <pErrorCache, #line>
  [266] objcall 22 .............................. <pErrorCache.line.count>
  [268] getprop 678 ............................. <pCacheSize>
  [271] gt ...................................... <pErrorCache.line.count > pCacheSize>
  [272] jmpifz [313] ............................ if pErrorCache.line.count > pCacheSize then
  [275] getprop 677 ............................. <pErrorCache>
  [278] pushsymb 598 ............................ <#line>
  [281] getprop 677 ............................. <pErrorCache>
  [284] pushsymb 598 ............................ <#line>
  [287] pusharglist 2 ........................... <pErrorCache, #line>
  [289] objcall 22 .............................. <pErrorCache.line.count>
  [291] getprop 678 ............................. <pCacheSize>
  [294] sub ..................................... <pErrorCache.line.count - pCacheSize>
  [295] getprop 677 ............................. <pErrorCache>
  [298] pushsymb 598 ............................ <#line>
  [301] pusharglist 2 ........................... <pErrorCache, #line>
  [303] objcall 22 .............................. <pErrorCache.line.count>
  [305] pusharglist 4 ........................... <pErrorCache, #line, pErrorCache.line.count - pCacheSize, pErrorCache.line.count>
  [307] objcall 290 ............................. <pErrorCache.line[pErrorCache.line.count - pCacheSize..pErrorCache.line.count]>
  [310] setprop 677 ............................. pErrorCache = pErrorCache.line[pErrorCache.line.count - pCacheSize..pErrorCache.line.count]
  [313] getprop 676 ............................. <pDebugLevel>
  [316] peek 0 .................................. case pDebugLevel of
  [318] pushint8 1 .............................. <1>
  [320] eq
  [321] jmpifz [337] ............................ (case) 1:
  [324] pushcons 10 ............................. <"Error:">
  [326] getlocal 0 .............................. <tError>
  [328] joinstr ................................. <"Error:" & tError>
  [329] pusharglistnoret 1 ...................... <"Error:" & tError>
  [331] extcall 642 ............................. put "Error:" & tError
  [334] jmp [392]
  [337] peek 0
  [339] pushint8 2 .............................. <2>
  [341] eq
  [342] jmpifz [358] ............................ (case) 2:
  [345] pushcons 10 ............................. <"Error:">
  [347] getlocal 0 .............................. <tError>
  [349] joinstr ................................. <"Error:" & tError>
  [350] pusharglistnoret 1 ...................... <"Error:" & tError>
  [352] extcall 642 ............................. put "Error:" & tError
  [355] jmp [392]
  [358] peek 0
  [360] pushint8 3 .............................. <3>
  [362] eq
  [363] jmpifz [382] ............................ (case) 3:
  [366] pushsymb 679 ............................ <#debugdata>
  [369] pushcons 11 ............................. <"Error: ">
  [371] getlocal 0 .............................. <tError>
  [373] joinstr ................................. <"Error: " & tError>
  [374] pusharglistnoret 2 ...................... <#debugdata, "Error: " & tError>
  [376] extcall 357 ............................. executeMessage(#debugdata, "Error: " & tError)
  [379] jmp [392] ............................... (case) otherwise:
  [382] pushcons 10 ............................. <"Error:">
  [384] getlocal 0 .............................. <tError>
  [386] joinstr ................................. <"Error:" & tError>
  [387] pusharglistnoret 1 ...................... <"Error:" & tError>
  [389] extcall 642 ............................. put "Error:" & tError
  [392] pop 1 ................................... end case
  [394] pushzero ................................ <0>
  [395] pusharglistnoret 1 ...................... <0>
  [397] extcall 25 .............................. return 0
  [399] ret
end

on SystemAlert me, tObject, tMsg, tMethod
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tObject>
  [  4] getparam 2 .............................. <tMsg>
  [  6] getparam 3 .............................. <tMethod>
  [  8] pusharglist 4 ........................... <me, tObject, tMsg, tMethod>
  [ 10] objcall 39 .............................. <me.error(tObject, tMsg, tMethod)>
  [ 12] pusharglistnoret 1 ...................... <me.error(tObject, tMsg, tMethod)>
  [ 14] extcall 25 .............................. return me.error(tObject, tMsg, tMethod)
  [ 16] ret
end

on setDebugLevel me, tDebugLevel
  [  0] getparam 1 .............................. <tDebugLevel>
  [  2] pusharglist 1 ........................... <tDebugLevel>
  [  4] extcall 681 ............................. <integerp(tDebugLevel)>
  [  7] not ..................................... <not integerp(tDebugLevel)>
  [  8] jmpifz [ 16] ............................ if not integerp(tDebugLevel) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 25 .............................. return 0
  [ 16] getparam 1 .............................. <tDebugLevel>
  [ 18] setprop 676 ............................. pDebugLevel = tDebugLevel
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 25 .............................. return 1
  [ 27] ret
end

on print me
  [  0] pushcons 12 ............................. <"Errors:">
  [  2] pushcons 3 .............................. <RETURN>
  [  4] joinstr ................................. <"Errors:" & RETURN>
  [  5] getprop 677 ............................. <pErrorCache>
  [  8] joinstr ................................. <"Errors:" & RETURN & pErrorCache>
  [  9] pusharglistnoret 1 ...................... <"Errors:" & RETURN & pErrorCache>
  [ 11] extcall 642 ............................. put "Errors:" & RETURN & pErrorCache
  [ 14] pushint8 1 .............................. <1>
  [ 16] pusharglistnoret 1 ...................... <1>
  [ 18] extcall 25 .............................. return 1
  [ 20] ret
end

on alertHook me, tErr, tMsgA, tMsgB
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 674 ............................. me.showErrorDialog()
  [  7] pusharglistnoret 0 ...................... <>
  [  9] extcall 110 ............................. pauseUpdate()
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 25 .............................. return 1
  [ 17] ret
end

on showErrorDialog me
  [  0] pushsymb 39 ............................. <#error>
  [  2] pushcons 13 ............................. <"error.window">
  [  4] pushzero ................................ <0>
  [  5] pushzero ................................ <0>
  [  6] pushsymb 686 ............................ <#modal>
  [  9] pusharglist 5 ........................... <#error, "error.window", 0, 0, #modal>
  [ 11] extcall 323 ............................. <createWindow(#error, "error.window", 0, 0, #modal)>
  [ 14] pushzero ................................ <0>
  [ 15] nteq .................................... <createWindow(#error, "error.window", 0, 0, #modal) <> 0>
  [ 16] jmpifz [ 68] ............................ if createWindow(#error, "error.window", 0, 0, #modal) <> 0 then / else
  [ 19] pushsymb 39 ............................. <#error>
  [ 21] pusharglist 1 ........................... <#error>
  [ 23] extcall 325 ............................. <getWindow(#error)>
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 3 ............................... <me.getID()>
  [ 32] pusharglistnoret 2 ...................... <getWindow(#error), me.getID()>
  [ 34] objcall 330 ............................. getWindow(#error).registerClient(me.getID())
  [ 37] pushsymb 39 ............................. <#error>
  [ 39] pusharglist 1 ........................... <#error>
  [ 41] extcall 325 ............................. <getWindow(#error)>
  [ 44] pushsymb 675 ............................ <#eventProcError>
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglist 1 ........................... <me>
  [ 51] objcall 3 ............................... <me.getID()>
  [ 53] pushsymb 0 .............................. <#mouseUp>
  [ 55] pusharglistnoret 4 ...................... <getWindow(#error), #eventProcError, me.getID(), #mouseUp>
  [ 57] objcall 1 ............................... getWindow(#error).registerProcedure(#eventProcError, me.getID(), #mouseUp)
  [ 59] pushint8 1 .............................. <1>
  [ 61] pusharglistnoret 1 ...................... <1>
  [ 63] extcall 25 .............................. return 1
  [ 65] jmp [ 73]
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 25 .............................. return 0
  [ 73] ret
end

on eventProcError me, tEvent, tSprID, tParam
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 0 .............................. <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] getparam 2 .............................. <tSprID>
  [  7] pushcons 14 ............................. <"error_close">
  [  9] eq ...................................... <tSprID = "error_close">
  [ 10] and ..................................... <(tEvent = #mouseUp) and (tSprID = "error_close")>
  [ 11] jmpifz [ 18] ............................ if (tEvent = #mouseUp) and (tSprID = "error_close") then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 72 .............................. resetClient()
  [ 18] ret
end
