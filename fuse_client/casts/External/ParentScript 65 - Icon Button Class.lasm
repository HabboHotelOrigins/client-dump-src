property pIconImg

on prepare me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1101 ......................... <me.pType>
  [  5] getparam 0 .............................. <me>
  [  7] pushsymb 1415 ........................... <#pProps>
  [ 10] pushsymb 455 ............................ <#model>
  [ 13] pusharglist 3 ........................... <me, #pProps, #model>
  [ 15] objcall 290 ............................. <me.pProps[#model]>
  [ 18] joinstr ................................. <me.pType & me.pProps[#model]>
  [ 19] pushcons 0 .............................. <".element">
  [ 21] joinstr ................................. <me.pType & me.pProps[#model] & ".element">
  [ 22] setlocal 0 .............................. tField = me.pType & me.pProps[#model] & ".element"
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 457 ............................ <#layout_parser>
  [ 29] pusharglist 1 ........................... <#layout_parser>
  [ 31] extcall 58 .............................. <getObject(#layout_parser)>
  [ 33] getlocal 0 .............................. <tField>
  [ 35] pusharglist 2 ........................... <getObject(#layout_parser), tField>
  [ 37] objcall 458 ............................. <getObject(#layout_parser).parse(tField)>
  [ 40] setobjprop 456 .......................... me.pProp = getObject(#layout_parser).parse(tField)
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 456 .......................... <me.pProp>
  [ 48] pushzero ................................ <0>
  [ 49] eq ...................................... <me.pProp = 0>
  [ 50] jmpifz [ 58] ............................ if me.pProp = 0 then
  [ 53] pushzero ................................ <0>
  [ 54] pusharglistnoret 1 ...................... <0>
  [ 56] extcall 25 .............................. return 0
  [ 58] getparam 0 .............................. <me>
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 1415 ........................... <#pProps>
  [ 65] pushsymb 42 ............................. <#width>
  [ 67] pusharglist 3 ........................... <me, #pProps, #width>
  [ 69] objcall 290 ............................. <me.pProps[#width]>
  [ 72] setobjprop 473 .......................... me.pOrigWidth = me.pProps[#width]
  [ 75] getparam 0 .............................. <me>
  [ 77] getparam 0 .............................. <me>
  [ 79] pushsymb 1415 ........................... <#pProps>
  [ 82] pushsymb 479 ............................ <#maxwidth>
  [ 85] pusharglist 3 ........................... <me, #pProps, #maxwidth>
  [ 87] objcall 290 ............................. <me.pProps[#maxwidth]>
  [ 90] setobjprop 478 .......................... me.pMaxWidth = me.pProps[#maxwidth]
  [ 93] getparam 0 .............................. <me>
  [ 95] getparam 0 .............................. <me>
  [ 97] pushsymb 1415 ........................... <#pProps>
  [100] pushsymb 481 ............................ <#fixedsize>
  [103] pusharglist 3 ........................... <me, #pProps, #fixedsize>
  [105] objcall 290 ............................. <me.pProps[#fixedsize]>
  [108] setobjprop 480 .......................... me.pFixedSize = me.pProps[#fixedsize]
  [111] getparam 0 .............................. <me>
  [113] getparam 0 .............................. <me>
  [115] pushsymb 1415 ........................... <#pProps>
  [118] pushsymb 470 ............................ <#alignment>
  [121] pusharglist 3 ........................... <me, #pProps, #alignment>
  [123] objcall 290 ............................. <me.pProps[#alignment]>
  [126] setobjprop 469 .......................... me.pAlignment = me.pProps[#alignment]
  [129] getparam 0 .............................. <me>
  [131] getparam 0 .............................. <me>
  [133] pushsymb 1415 ........................... <#pProps>
  [136] pushsymb 515 ............................ <#key>
  [139] pusharglist 3 ........................... <me, #pProps, #key>
  [141] objcall 290 ............................. <me.pProps[#key]>
  [144] pusharglist 1 ........................... <me.pProps[#key]>
  [146] extcall 259 ............................. <getText(me.pProps[#key])>
  [149] setobjprop 1469 ......................... me.pButtonText = getText(me.pProps[#key])
  [152] getparam 0 .............................. <me>
  [154] getparam 0 .............................. <me>
  [156] pushsymb 1415 ........................... <#pProps>
  [159] pushsymb 501 ............................ <#blend>
  [162] pusharglist 3 ........................... <me, #pProps, #blend>
  [164] objcall 290 ............................. <me.pProps[#blend]>
  [167] setobjprop 1470 ......................... me.pBlend = me.pProps[#blend]
  [170] getparam 0 .............................. <me>
  [172] pusharglist 0 ........................... <[:]>
  [174] pushproplist ............................ <[:]>
  [175] setobjprop 1471 ......................... me.pCachedImgs = [:]
  [178] getparam 0 .............................. <me>
  [180] pushsymb 1415 ........................... <#pProps>
  [183] pushsymb 1488 ........................... <#icon>
  [186] pusharglist 3 ........................... <me, #pProps, #icon>
  [188] objcall 290 ............................. <me.pProps[#icon]>
  [191] pusharglist 1 ........................... <me.pProps[#icon]>
  [193] extcall 20 .............................. <voidp(me.pProps[#icon])>
  [195] not ..................................... <not voidp(me.pProps[#icon])>
  [196] jmpifz [242] ............................ if not voidp(me.pProps[#icon]) then
  [199] getparam 0 .............................. <me>
  [201] pushsymb 1415 ........................... <#pProps>
  [204] pushsymb 1488 ........................... <#icon>
  [207] pusharglist 3 ........................... <me, #pProps, #icon>
  [209] objcall 290 ............................. <me.pProps[#icon]>
  [212] pusharglist 1 ........................... <me.pProps[#icon]>
  [214] extcall 52 .............................. <getmemnum(me.pProps[#icon])>
  [216] setlocal 1 .............................. tMemNum = getmemnum(me.pProps[#icon])
  [218] getlocal 1 .............................. <tMemNum>
  [220] pushzero ................................ <0>
  [221] gt ...................................... <tMemNum > 0>
  [222] jmpifz [242] ............................ if tMemNum > 0 then
  [225] getlocal 1 .............................. <tMemNum>
  [227] pusharglist 1 ........................... <tMemNum>
  [229] extcall 41 .............................. <member(tMemNum)>
  [231] getchainedprop 500 ...................... <member(tMemNum).image>
  [234] pusharglist 1 ........................... <member(tMemNum).image>
  [236] objcall 552 ............................. <member(tMemNum).image.duplicate()>
  [239] setprop 1489 ............................ pIconImg = member(tMemNum).image.duplicate()
  [242] getparam 0 .............................. <me>
  [244] getobjprop 478 .......................... <me.pMaxWidth>
  [247] pusharglist 1 ........................... <me.pMaxWidth>
  [249] extcall 681 ............................. <integerp(me.pMaxWidth)>
  [252] not ..................................... <not integerp(me.pMaxWidth)>
  [253] jmpifz [264] ............................ if not integerp(me.pMaxWidth) then
  [256] getparam 0 .............................. <me>
  [258] pushint16 300 ........................... <300>
  [261] setobjprop 478 .......................... me.pMaxWidth = 300
  [264] getparam 0 .............................. <me>
  [266] getobjprop 480 .......................... <me.pFixedSize>
  [269] pusharglist 1 ........................... <me.pFixedSize>
  [271] extcall 20 .............................. <voidp(me.pFixedSize)>
  [273] jmpifz [282] ............................ if voidp(me.pFixedSize) then
  [276] getparam 0 .............................. <me>
  [278] pushzero ................................ <0>
  [279] setobjprop 480 .......................... me.pFixedSize = 0
  [282] getparam 0 .............................. <me>
  [284] pusharglist 0 ........................... <>
  [286] extcall 32 .............................. <VOID>
  [288] pushsymb 494 ............................ <#up>
  [291] pusharglistnoret 3 ...................... <me, VOID, #up>
  [293] objcall 448 ............................. me.UpdateImageObjects(VOID, #up)
  [296] getparam 0 .............................. <me>
  [298] getparam 0 .............................. <me>
  [300] getparam 0 .............................. <me>
  [302] getobjprop 1469 ......................... <me.pButtonText>
  [305] pushsymb 494 ............................ <#up>
  [308] pusharglist 3 ........................... <me, me.pButtonText, #up>
  [310] objcall 1467 ............................ <me.createButtonImg(me.pButtonText, #up)>
  [313] setobjprop 496 .......................... me.pimage = me.createButtonImg(me.pButtonText, #up)
  [316] getparam 0 .............................. <me>
  [318] getchainedprop 35 ....................... <me.pSprite>
  [320] getchainedprop 41 ....................... <me.pSprite.member>
  [322] getobjprop 499 .......................... <me.pSprite.member.regPoint>
  [325] setlocal 2 .............................. tTempOffset = me.pSprite.member.regPoint
  [327] getparam 0 .............................. <me>
  [329] getchainedprop 463 ...................... <me.pBuffer>
  [332] getparam 0 .............................. <me>
  [334] getobjprop 496 .......................... <me.pimage>
  [337] setobjprop 500 .......................... me.pBuffer.image = me.pimage
  [340] getparam 0 .............................. <me>
  [342] getchainedprop 463 ...................... <me.pBuffer>
  [345] getlocal 2 .............................. <tTempOffset>
  [347] setobjprop 499 .......................... me.pBuffer.regPoint = tTempOffset
  [350] getparam 0 .............................. <me>
  [352] getparam 0 .............................. <me>
  [354] getchainedprop 496 ...................... <me.pimage>
  [357] getobjprop 42 ........................... <me.pimage.width>
  [359] setobjprop 497 .......................... me.pwidth = me.pimage.width
  [362] getparam 0 .............................. <me>
  [364] getparam 0 .............................. <me>
  [366] getchainedprop 496 ...................... <me.pimage>
  [369] getobjprop 43 ........................... <me.pimage.height>
  [371] setobjprop 502 .......................... me.pheight = me.pimage.height
  [374] getparam 0 .............................. <me>
  [376] getparam 0 .............................. <me>
  [378] getchainedprop 35 ....................... <me.pSprite>
  [380] getobjprop 504 .......................... <me.pSprite.locH>
  [383] setobjprop 465 .......................... me.pLocX = me.pSprite.locH
  [386] getparam 0 .............................. <me>
  [388] getparam 0 .............................. <me>
  [390] getchainedprop 35 ....................... <me.pSprite>
  [392] getobjprop 505 .......................... <me.pSprite.locV>
  [395] setobjprop 467 .......................... me.pLocY = me.pSprite.locV
  [398] getparam 0 .............................. <me>
  [400] getchainedprop 35 ....................... <me.pSprite>
  [402] getparam 0 .............................. <me>
  [404] getobjprop 497 .......................... <me.pwidth>
  [407] setobjprop 42 ........................... me.pSprite.width = me.pwidth
  [409] getparam 0 .............................. <me>
  [411] getchainedprop 35 ....................... <me.pSprite>
  [413] getparam 0 .............................. <me>
  [415] getobjprop 502 .......................... <me.pheight>
  [418] setobjprop 43 ........................... me.pSprite.height = me.pheight
  [420] pushint8 1 .............................. <1>
  [422] pusharglistnoret 1 ...................... <1>
  [424] extcall 25 .............................. return 1
  [426] ret
end

on createButtonImg me, tText, tstate
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1471 ........................... <#pCachedImgs>
  [  5] getparam 2 .............................. <tstate>
  [  7] pusharglist 3 ........................... <me, #pCachedImgs, tstate>
  [  9] objcall 290 ............................. <me.pCachedImgs[tstate]>
  [ 12] pusharglist 1 ........................... <me.pCachedImgs[tstate]>
  [ 14] extcall 20 .............................. <voidp(me.pCachedImgs[tstate])>
  [ 16] not ..................................... <not voidp(me.pCachedImgs[tstate])>
  [ 17] jmpifz [ 36] ............................ if not voidp(me.pCachedImgs[tstate]) then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushsymb 1471 ........................... <#pCachedImgs>
  [ 25] getparam 2 .............................. <tstate>
  [ 27] pusharglist 3 ........................... <me, #pCachedImgs, tstate>
  [ 29] objcall 290 ............................. <me.pCachedImgs[tstate]>
  [ 32] pusharglistnoret 1 ...................... <me.pCachedImgs[tstate]>
  [ 34] extcall 25 .............................. return me.pCachedImgs[tstate]
  [ 36] pushcons 1 .............................. <"icon.button.text">
  [ 38] pusharglist 1 ........................... <"icon.button.text">
  [ 40] extcall 52 .............................. <getmemnum("icon.button.text")>
  [ 42] setlocal 0 .............................. tMemNum = getmemnum("icon.button.text")
  [ 44] getlocal 0 .............................. <tMemNum>
  [ 46] pushzero ................................ <0>
  [ 47] eq ...................................... <tMemNum = 0>
  [ 48] jmpifz [ 62] ............................ if tMemNum = 0 then
  [ 51] pushcons 1 .............................. <"icon.button.text">
  [ 53] pushsymb 514 ............................ <#text>
  [ 56] pusharglist 2 ........................... <"icon.button.text", #text>
  [ 58] extcall 164 ............................. <createMember("icon.button.text", #text)>
  [ 60] setlocal 0 .............................. tMemNum = createMember("icon.button.text", #text)
  [ 62] getlocal 0 .............................. <tMemNum>
  [ 64] pusharglist 1 ........................... <tMemNum>
  [ 66] extcall 41 .............................. <member(tMemNum)>
  [ 68] setlocal 1 .............................. tTextMem = member(tMemNum)
  [ 70] getparam 0 .............................. <me>
  [ 72] pushsymb 456 ............................ <#pProp>
  [ 75] getparam 2 .............................. <tstate>
  [ 77] pusharglist 3 ........................... <me, #pProp, tstate>
  [ 79] objcall 288 ............................. <me.pProp[tstate]>
  [ 82] pushsymb 514 ............................ <#text>
  [ 85] pusharglist 2 ........................... <me.pProp[tstate], #text>
  [ 87] objcall 54 .............................. <me.pProp[tstate][#text]>
  [ 89] setlocal 2 .............................. tFontDesc = me.pProp[tstate][#text]
  [ 91] getlocal 2 .............................. <tFontDesc>
  [ 93] pushsymb 594 ............................ <#font>
  [ 96] pusharglist 2 ........................... <tFontDesc, #font>
  [ 98] objcall 54 .............................. <tFontDesc[#font]>
  [100] setlocal 3 .............................. tFont = tFontDesc[#font]
  [102] getlocal 2 .............................. <tFontDesc>
  [104] pushsymb 595 ............................ <#fontStyle>
  [107] pusharglist 2 ........................... <tFontDesc, #fontStyle>
  [109] objcall 54 .............................. <tFontDesc[#fontStyle]>
  [111] pusharglist 1 ........................... <tFontDesc[#fontStyle]>
  [113] extcall 570 ............................. <symbol(tFontDesc[#fontStyle])>
  [116] pusharglist 1 ........................... <symbol(tFontDesc[#fontStyle])>
  [118] extcall 489 ............................. <list(symbol(tFontDesc[#fontStyle]))>
  [121] setlocal 4 .............................. tFontStyle = list(symbol(tFontDesc[#fontStyle]))
  [123] getlocal 2 .............................. <tFontDesc>
  [125] pushsymb 596 ............................ <#fontSize>
  [128] pusharglist 2 ........................... <tFontDesc, #fontSize>
  [130] objcall 54 .............................. <tFontDesc[#fontSize]>
  [132] setlocal 5 .............................. tFontSize = tFontDesc[#fontSize]
  [134] getlocal 2 .............................. <tFontDesc>
  [136] pushsymb 597 ............................ <#color>
  [139] pusharglist 2 ........................... <tFontDesc, #color>
  [141] objcall 54 .............................. <tFontDesc[#color]>
  [143] pusharglist 1 ........................... <tFontDesc[#color]>
  [145] extcall 576 ............................. <rgb(tFontDesc[#color])>
  [148] setlocal 6 .............................. tColor = rgb(tFontDesc[#color])
  [150] getlocal 2 .............................. <tFontDesc>
  [152] pushsymb 1225 ........................... <#bgColor>
  [155] pusharglist 2 ........................... <tFontDesc, #bgColor>
  [157] objcall 54 .............................. <tFontDesc[#bgColor]>
  [159] pusharglist 1 ........................... <tFontDesc[#bgColor]>
  [161] extcall 576 ............................. <rgb(tFontDesc[#bgColor])>
  [164] setlocal 7 .............................. tBgColor = rgb(tFontDesc[#bgColor])
  [166] getlocal 2 .............................. <tFontDesc>
  [168] pushsymb 851 ............................ <#boxType>
  [171] pusharglist 2 ........................... <tFontDesc, #boxType>
  [173] objcall 54 .............................. <tFontDesc[#boxType]>
  [175] setlocal 8 .............................. tBoxType = tFontDesc[#boxType]
  [177] getlocal 2 .............................. <tFontDesc>
  [179] pushsymb 596 ............................ <#fontSize>
  [182] pusharglist 2 ........................... <tFontDesc, #fontSize>
  [184] objcall 54 .............................. <tFontDesc[#fontSize]>
  [186] pushint8 2 .............................. <2>
  [188] add ..................................... <tFontDesc[#fontSize] + 2>
  [189] setlocal 9 .............................. tSpace = tFontDesc[#fontSize] + 2
  [191] getlocal 2 .............................. <tFontDesc>
  [193] pushsymb 590 ............................ <#marginH>
  [196] pusharglist 2 ........................... <tFontDesc, #marginH>
  [198] objcall 54 .............................. <tFontDesc[#marginH]>
  [200] setlocal 10 ............................. tMarginH = tFontDesc[#marginH]
  [202] getlocal 2 .............................. <tFontDesc>
  [204] pushsymb 588 ............................ <#marginV>
  [207] pusharglist 2 ........................... <tFontDesc, #marginV>
  [209] objcall 54 .............................. <tFontDesc[#marginV]>
  [211] setlocal 11 ............................. tMarginV = tFontDesc[#marginV]
  [213] getlocal 1 .............................. <tTextMem>
  [215] getobjprop 592 .......................... <tTextMem.wordWrap>
  [218] pushint8 1 .............................. <1>
  [220] eq ...................................... <tTextMem.wordWrap = 1>
  [221] jmpifz [230] ............................ if tTextMem.wordWrap = 1 then
  [224] getlocal 1 .............................. <tTextMem>
  [226] pushzero ................................ <0>
  [227] setobjprop 592 .......................... tTextMem.wordWrap = 0
  [230] getlocal 1 .............................. <tTextMem>
  [232] getobjprop 594 .......................... <tTextMem.font>
  [235] getlocal 3 .............................. <tFont>
  [237] nteq .................................... <tTextMem.font <> tFont>
  [238] jmpifz [248] ............................ if tTextMem.font <> tFont then
  [241] getlocal 1 .............................. <tTextMem>
  [243] getlocal 3 .............................. <tFont>
  [245] setobjprop 594 .......................... tTextMem.font = tFont
  [248] getlocal 1 .............................. <tTextMem>
  [250] getobjprop 595 .......................... <tTextMem.fontStyle>
  [253] getlocal 4 .............................. <tFontStyle>
  [255] nteq .................................... <tTextMem.fontStyle <> tFontStyle>
  [256] jmpifz [266] ............................ if tTextMem.fontStyle <> tFontStyle then
  [259] getlocal 1 .............................. <tTextMem>
  [261] getlocal 4 .............................. <tFontStyle>
  [263] setobjprop 595 .......................... tTextMem.fontStyle = tFontStyle
  [266] getlocal 1 .............................. <tTextMem>
  [268] getobjprop 596 .......................... <tTextMem.fontSize>
  [271] getlocal 5 .............................. <tFontSize>
  [273] nteq .................................... <tTextMem.fontSize <> tFontSize>
  [274] jmpifz [284] ............................ if tTextMem.fontSize <> tFontSize then
  [277] getlocal 1 .............................. <tTextMem>
  [279] getlocal 5 .............................. <tFontSize>
  [281] setobjprop 596 .......................... tTextMem.fontSize = tFontSize
  [284] getlocal 1 .............................. <tTextMem>
  [286] getobjprop 597 .......................... <tTextMem.color>
  [289] getlocal 6 .............................. <tColor>
  [291] nteq .................................... <tTextMem.color <> tColor>
  [292] jmpifz [302] ............................ if tTextMem.color <> tColor then
  [295] getlocal 1 .............................. <tTextMem>
  [297] getlocal 6 .............................. <tColor>
  [299] setobjprop 597 .......................... tTextMem.color = tColor
  [302] getlocal 1 .............................. <tTextMem>
  [304] getobjprop 1225 ......................... <tTextMem.bgColor>
  [307] getlocal 7 .............................. <tBgColor>
  [309] nteq .................................... <tTextMem.bgColor <> tBgColor>
  [310] jmpifz [320] ............................ if tTextMem.bgColor <> tBgColor then
  [313] getlocal 1 .............................. <tTextMem>
  [315] getlocal 7 .............................. <tBgColor>
  [317] setobjprop 1225 ......................... tTextMem.bgColor = tBgColor
  [320] getlocal 1 .............................. <tTextMem>
  [322] getobjprop 851 .......................... <tTextMem.boxType>
  [325] getlocal 8 .............................. <tBoxType>
  [327] nteq .................................... <tTextMem.boxType <> tBoxType>
  [328] jmpifz [338] ............................ if tTextMem.boxType <> tBoxType then
  [331] getlocal 1 .............................. <tTextMem>
  [333] getlocal 8 .............................. <tBoxType>
  [335] setobjprop 851 .......................... tTextMem.boxType = tBoxType
  [338] getlocal 1 .............................. <tTextMem>
  [340] getobjprop 475 .......................... <tTextMem.fixedLineSpace>
  [343] getlocal 9 .............................. <tSpace>
  [345] nteq .................................... <tTextMem.fixedLineSpace <> tSpace>
  [346] jmpifz [356] ............................ if tTextMem.fixedLineSpace <> tSpace then
  [349] getlocal 1 .............................. <tTextMem>
  [351] getlocal 9 .............................. <tSpace>
  [353] setobjprop 475 .......................... tTextMem.fixedLineSpace = tSpace
  [356] getlocal 1 .............................. <tTextMem>
  [358] getobjprop 514 .......................... <tTextMem.text>
  [361] getparam 1 .............................. <tText>
  [363] nteq .................................... <tTextMem.text <> tText>
  [364] jmpifz [374] ............................ if tTextMem.text <> tText then
  [367] getlocal 1 .............................. <tTextMem>
  [369] getparam 1 .............................. <tText>
  [371] setobjprop 514 .......................... tTextMem.text = tText
  [374] pushzero ................................ <0>
  [375] setlocal 12 ............................. tOptImgWidth = 0
  [377] getparam 0 .............................. <me>
  [379] pushsymb 456 ............................ <#pProp>
  [382] pushsymb 1488 ........................... <#icon>
  [385] pusharglist 3 ........................... <me, #pProp, #icon>
  [387] objcall 290 ............................. <me.pProp[#icon]>
  [390] pusharglist 1 ........................... <me.pProp[#icon]>
  [392] extcall 20 .............................. <voidp(me.pProp[#icon])>
  [394] not ..................................... <not voidp(me.pProp[#icon])>
  [395] getprop 1489 ............................ <pIconImg>
  [398] pusharglist 1 ........................... <pIconImg>
  [400] extcall 20 .............................. <voidp(pIconImg)>
  [402] not ..................................... <not voidp(pIconImg)>
  [403] and ..................................... <not voidp(me.pProp[#icon]) and not voidp(pIconImg)>
  [404] jmpifz [480] ............................ if not voidp(me.pProp[#icon]) and not voidp(pIconImg) then
  [407] getparam 0 .............................. <me>
  [409] pushsymb 456 ............................ <#pProp>
  [412] pushsymb 1488 ........................... <#icon>
  [415] pusharglist 3 ........................... <me, #pProp, #icon>
  [417] objcall 288 ............................. <me.pProp[#icon]>
  [420] pushsymb 1490 ........................... <#props>
  [423] pusharglist 2 ........................... <me.pProp[#icon], #props>
  [425] objcall 54 .............................. <me.pProp[#icon][#props]>
  [427] pushint8 1 .............................. <1>
  [429] pusharglist 2 ........................... <me.pProp[#icon][#props], 1>
  [431] objcall 23 .............................. <me.pProp[#icon][#props].getPropAt(1)>
  [433] setlocal 13 ............................. tAlignment = me.pProp[#icon][#props].getPropAt(1)
  [435] getparam 0 .............................. <me>
  [437] pushsymb 456 ............................ <#pProp>
  [440] pushsymb 1488 ........................... <#icon>
  [443] pusharglist 3 ........................... <me, #pProp, #icon>
  [445] objcall 288 ............................. <me.pProp[#icon]>
  [448] pushsymb 1490 ........................... <#props>
  [451] pusharglist 2 ........................... <me.pProp[#icon], #props>
  [453] objcall 54 .............................. <me.pProp[#icon][#props]>
  [455] getlocal 13 ............................. <tAlignment>
  [457] pusharglist 2 ........................... <me.pProp[#icon][#props], tAlignment>
  [459] objcall 54 .............................. <me.pProp[#icon][#props][tAlignment]>
  [461] pushsymb 590 ............................ <#marginH>
  [464] pusharglist 2 ........................... <me.pProp[#icon][#props][tAlignment], #marginH>
  [466] objcall 54 .............................. <me.pProp[#icon][#props][tAlignment][#marginH]>
  [468] setlocal 14 ............................. tOptImgMargH = me.pProp[#icon][#props][tAlignment][#marginH]
  [470] getprop 1489 ............................ <pIconImg>
  [473] getobjprop 42 ........................... <pIconImg.width>
  [475] getlocal 14 ............................. <tOptImgMargH>
  [477] add ..................................... <pIconImg.width + tOptImgMargH>
  [478] setlocal 12 ............................. tOptImgWidth = pIconImg.width + tOptImgMargH
  [480] getparam 0 .............................. <me>
  [482] getobjprop 480 .......................... <me.pFixedSize>
  [485] pushint8 1 .............................. <1>
  [487] eq ...................................... <me.pFixedSize = 1>
  [488] jmpifz [564] ............................ if me.pFixedSize = 1 then / else
  [491] getlocal 1 .............................. <tTextMem>
  [493] getparam 0 .............................. <me>
  [495] getobjprop 473 .......................... <me.pOrigWidth>
  [498] getlocal 10 ............................. <tMarginH>
  [500] pushint8 2 .............................. <2>
  [502] mul ..................................... <tMarginH * 2>
  [503] sub ..................................... <me.pOrigWidth - (tMarginH * 2)>
  [504] pushint8 5 .............................. <5>
  [506] pusharglist 2 ........................... <me.pOrigWidth - (tMarginH * 2), 5>
  [508] extcall 508 ............................. <point(me.pOrigWidth - (tMarginH * 2), 5)>
  [511] pusharglist 2 ........................... <tTextMem, point(me.pOrigWidth - (tMarginH * 2), 5)>
  [513] objcall 1491 ............................ <tTextMem.locToCharPos(point(me.pOrigWidth - (tMarginH * 2), 5))>
  [516] setlocal 15 ............................. tCharPosH = tTextMem.locToCharPos(point(me.pOrigWidth - (tMarginH * 2), 5))
  [518] getparam 0 .............................. <me>
  [520] getlocal 1 .............................. <tTextMem>
  [522] pusharglist 2 ........................... <me, tTextMem>
  [524] objcall 1468 ............................ <me.getTextWidth(tTextMem)>
  [527] setlocal 16 ............................. tTextWidth = me.getTextWidth(tTextMem)
  [529] getlocal 1 .............................. <tTextMem>
  [531] pushzero ................................ <0>
  [532] pushzero ................................ <0>
  [533] getlocal 16 ............................. <tTextWidth>
  [535] getlocal 1 .............................. <tTextMem>
  [537] getobjprop 43 ........................... <tTextMem.height>
  [539] pusharglist 4 ........................... <0, 0, tTextWidth, tTextMem.height>
  [541] extcall 555 ............................. <rect(0, 0, tTextWidth, tTextMem.height)>
  [544] setobjprop 555 .......................... tTextMem.rect = rect(0, 0, tTextWidth, tTextMem.height)
  [547] getlocal 1 .............................. <tTextMem>
  [549] getobjprop 500 .......................... <tTextMem.image>
  [552] setlocal 17 ............................. tTextImg = tTextMem.image
  [554] getparam 0 .............................. <me>
  [556] getobjprop 473 .......................... <me.pOrigWidth>
  [559] setlocal 18 ............................. tWidth = me.pOrigWidth
  [561] jmp [646]
  [564] getparam 0 .............................. <me>
  [566] getlocal 1 .............................. <tTextMem>
  [568] pusharglist 2 ........................... <me, tTextMem>
  [570] objcall 1468 ............................ <me.getTextWidth(tTextMem)>
  [573] setlocal 16 ............................. tTextWidth = me.getTextWidth(tTextMem)
  [575] getlocal 16 ............................. <tTextWidth>
  [577] getlocal 10 ............................. <tMarginH>
  [579] pushint8 2 .............................. <2>
  [581] mul ..................................... <tMarginH * 2>
  [582] add ..................................... <tTextWidth + (tMarginH * 2)>
  [583] getparam 0 .............................. <me>
  [585] getobjprop 478 .......................... <me.pMaxWidth>
  [588] gt ...................................... <(tTextWidth + (tMarginH * 2)) > me.pMaxWidth>
  [589] jmpifz [608] ............................ if (tTextWidth + (tMarginH * 2)) > me.pMaxWidth then
  [592] getparam 0 .............................. <me>
  [594] getobjprop 478 .......................... <me.pMaxWidth>
  [597] getlocal 10 ............................. <tMarginH>
  [599] pushint8 2 .............................. <2>
  [601] mul ..................................... <tMarginH * 2>
  [602] sub ..................................... <me.pMaxWidth - (tMarginH * 2)>
  [603] getlocal 12 ............................. <tOptImgWidth>
  [605] add ..................................... <me.pMaxWidth - (tMarginH * 2) + tOptImgWidth>
  [606] setlocal 16 ............................. tTextWidth = me.pMaxWidth - (tMarginH * 2) + tOptImgWidth
  [608] getlocal 1 .............................. <tTextMem>
  [610] pushzero ................................ <0>
  [611] pushzero ................................ <0>
  [612] getlocal 16 ............................. <tTextWidth>
  [614] getlocal 1 .............................. <tTextMem>
  [616] getobjprop 43 ........................... <tTextMem.height>
  [618] pusharglist 4 ........................... <0, 0, tTextWidth, tTextMem.height>
  [620] extcall 555 ............................. <rect(0, 0, tTextWidth, tTextMem.height)>
  [623] setobjprop 555 .......................... tTextMem.rect = rect(0, 0, tTextWidth, tTextMem.height)
  [626] getlocal 1 .............................. <tTextMem>
  [628] getobjprop 500 .......................... <tTextMem.image>
  [631] setlocal 17 ............................. tTextImg = tTextMem.image
  [633] getlocal 16 ............................. <tTextWidth>
  [635] getlocal 10 ............................. <tMarginH>
  [637] pushint8 2 .............................. <2>
  [639] mul ..................................... <tMarginH * 2>
  [640] add ..................................... <tTextWidth + (tMarginH * 2)>
  [641] getlocal 12 ............................. <tOptImgWidth>
  [643] add ..................................... <tTextWidth + (tMarginH * 2) + tOptImgWidth>
  [644] setlocal 18 ............................. tWidth = tTextWidth + (tMarginH * 2) + tOptImgWidth
  [646] getlocal 18 ............................. <tWidth>
  [648] getparam 0 .............................. <me>
  [650] pushsymb 1472 ........................... <#pButtonImg>
  [653] pushsymb 464 ............................ <#left>
  [656] pusharglist 3 ........................... <me, #pButtonImg, #left>
  [658] objcall 288 ............................. <me.pButtonImg[#left]>
  [661] getobjprop 43 ........................... <me.pButtonImg[#left].height>
  [663] pushint8 8 .............................. <8>
  [665] getparam 0 .............................. <me>
  [667] getobjprop 491 .......................... <me.pPalette>
  [670] pusharglist 1 ........................... <me.pPalette>
  [672] extcall 41 .............................. <member(me.pPalette)>
  [674] pusharglist 4 ........................... <tWidth, me.pButtonImg[#left].height, 8, member(me.pPalette)>
  [676] extcall 500 ............................. <image(tWidth, me.pButtonImg[#left].height, 8, member(me.pPalette))>
  [679] setlocal 19 ............................. tNewImg = image(tWidth, me.pButtonImg[#left].height, 8, member(me.pPalette))
  [681] pushzero ................................ <0>
  [682] setlocal 20 ............................. tStartPointY = 0
  [684] getlocal 19 ............................. <tNewImg>
  [686] getobjprop 43 ........................... <tNewImg.height>
  [688] setlocal 21 ............................. tEndPointY = tNewImg.height
  [690] pushzero ................................ <0>
  [691] setlocal 22 ............................. tStartPointX = 0
  [693] pushzero ................................ <0>
  [694] setlocal 23 ............................. tEndPointX = 0
  [696] pushsymb 464 ............................ <#left>
  [699] pushsymb 568 ............................ <#middle>
  [702] pushsymb 507 ............................ <#right>
  [705] pusharglist 3 ........................... <[#left, #middle, #right]>
  [707] pushlist ................................ <[#left, #middle, #right]>
  [708] peek 0
  [710] pusharglist 1
  [712] extcall 22
  [714] pushint8 1
  [716] peek 0
  [718] peek 2
  [720] lteq
  [721] jmpifz [908] ............................ repeat with i in [#left, #middle, #right]
  [724] peek 2
  [726] peek 1
  [728] pusharglist 2
  [730] extcall 54
  [732] setlocal 24
  [734] getlocal 23 ............................. <tEndPointX>
  [736] setlocal 22 ............................. tStartPointX = tEndPointX
  [738] getlocal 24 ............................. <i>
  [740] peek 0 .................................. case i of
  [742] pushsymb 464 ............................ <#left>
  [745] eq
  [746] jmpifz [771] ............................ (case) #left:
  [749] getlocal 23 ............................. <tEndPointX>
  [751] getparam 0 .............................. <me>
  [753] getchainedprop 1472 ..................... <me.pButtonImg>
  [756] getlocal 24 ............................. <i>
  [758] pusharglist 2 ........................... <me.pButtonImg, i>
  [760] objcall 290 ............................. <me.pButtonImg.getProp(i)>
  [763] getobjprop 42 ........................... <me.pButtonImg.getProp(i).width>
  [765] add ..................................... <tEndPointX + me.pButtonImg.getProp(i).width>
  [766] setlocal 23 ............................. tEndPointX = tEndPointX + me.pButtonImg.getProp(i).width
  [768] jmp [850]
  [771] peek 0
  [773] pushsymb 568 ............................ <#middle>
  [776] eq
  [777] jmpifz [822] ............................ (case) #middle:
  [780] getlocal 23 ............................. <tEndPointX>
  [782] getlocal 18 ............................. <tWidth>
  [784] add ..................................... <tEndPointX + tWidth>
  [785] getparam 0 .............................. <me>
  [787] getchainedprop 1472 ..................... <me.pButtonImg>
  [790] pushsymb 464 ............................ <#left>
  [793] pusharglist 2 ........................... <me.pButtonImg, #left>
  [795] objcall 290 ............................. <me.pButtonImg.getProp(#left)>
  [798] getobjprop 42 ........................... <me.pButtonImg.getProp(#left).width>
  [800] sub ..................................... <tEndPointX + tWidth - me.pButtonImg.getProp(#left).width>
  [801] getparam 0 .............................. <me>
  [803] getchainedprop 1472 ..................... <me.pButtonImg>
  [806] pushsymb 507 ............................ <#right>
  [809] pusharglist 2 ........................... <me.pButtonImg, #right>
  [811] objcall 290 ............................. <me.pButtonImg.getProp(#right)>
  [814] getobjprop 42 ........................... <me.pButtonImg.getProp(#right).width>
  [816] sub ..................................... <tEndPointX + tWidth - me.pButtonImg.getProp(#left).width - me.pButtonImg.getProp(#right).width>
  [817] setlocal 23 ............................. tEndPointX = tEndPointX + tWidth - me.pButtonImg.getProp(#left).width - me.pButtonImg.getProp(#right).width
  [819] jmp [850]
  [822] peek 0
  [824] pushsymb 507 ............................ <#right>
  [827] eq
  [828] jmpifz [850] ............................ (case) #right:
  [831] getlocal 23 ............................. <tEndPointX>
  [833] getparam 0 .............................. <me>
  [835] getchainedprop 1472 ..................... <me.pButtonImg>
  [838] getlocal 24 ............................. <i>
  [840] pusharglist 2 ........................... <me.pButtonImg, i>
  [842] objcall 290 ............................. <me.pButtonImg.getProp(i)>
  [845] getobjprop 42 ........................... <me.pButtonImg.getProp(i).width>
  [847] add ..................................... <tEndPointX + me.pButtonImg.getProp(i).width>
  [848] setlocal 23 ............................. tEndPointX = tEndPointX + me.pButtonImg.getProp(i).width
  [850] pop 1 ................................... end case
  [852] getlocal 22 ............................. <tStartPointX>
  [854] getlocal 20 ............................. <tStartPointY>
  [856] getlocal 23 ............................. <tEndPointX>
  [858] getlocal 21 ............................. <tEndPointY>
  [860] pusharglist 4 ........................... <tStartPointX, tStartPointY, tEndPointX, tEndPointY>
  [862] extcall 555 ............................. <rect(tStartPointX, tStartPointY, tEndPointX, tEndPointY)>
  [865] setlocal 25 ............................. tDstRect = rect(tStartPointX, tStartPointY, tEndPointX, tEndPointY)
  [867] getlocal 19 ............................. <tNewImg>
  [869] getparam 0 .............................. <me>
  [871] getchainedprop 1472 ..................... <me.pButtonImg>
  [874] getlocal 24 ............................. <i>
  [876] pusharglist 2 ........................... <me.pButtonImg, i>
  [878] objcall 290 ............................. <me.pButtonImg.getProp(i)>
  [881] getlocal 25 ............................. <tDstRect>
  [883] getparam 0 .............................. <me>
  [885] getchainedprop 1472 ..................... <me.pButtonImg>
  [888] getlocal 24 ............................. <i>
  [890] pusharglist 2 ........................... <me.pButtonImg, i>
  [892] objcall 290 ............................. <me.pButtonImg.getProp(i)>
  [895] getobjprop 555 .......................... <me.pButtonImg.getProp(i).rect>
  [898] pusharglistnoret 4 ...................... <tNewImg, me.pButtonImg.getProp(i), tDstRect, me.pButtonImg.getProp(i).rect>
  [900] objcall 556 ............................. tNewImg.copyPixels(me.pButtonImg.getProp(i), tDstRect, me.pButtonImg.getProp(i).rect)
  [903] pushint8 1
  [905] add
  [906] endrepeat [716]
  [908] pop 3
  [910] getparam 0 .............................. <me>
  [912] pushsymb 456 ............................ <#pProp>
  [915] pushsymb 1488 ........................... <#icon>
  [918] pusharglist 3 ........................... <me, #pProp, #icon>
  [920] objcall 290 ............................. <me.pProp[#icon]>
  [923] pusharglist 1 ........................... <me.pProp[#icon]>
  [925] extcall 20 .............................. <voidp(me.pProp[#icon])>
  [927] not ..................................... <not voidp(me.pProp[#icon])>
  [928] getprop 1489 ............................ <pIconImg>
  [931] pusharglist 1 ........................... <pIconImg>
  [933] extcall 20 .............................. <voidp(pIconImg)>
  [935] not ..................................... <not voidp(pIconImg)>
  [936] and ..................................... <not voidp(me.pProp[#icon]) and not voidp(pIconImg)>
  [937] jmpifz [1239] ........................... if not voidp(me.pProp[#icon]) and not voidp(pIconImg) then
  [940] getparam 0 .............................. <me>
  [942] pushsymb 456 ............................ <#pProp>
  [945] pushsymb 1488 ........................... <#icon>
  [948] pusharglist 3 ........................... <me, #pProp, #icon>
  [950] objcall 288 ............................. <me.pProp[#icon]>
  [953] pushsymb 1490 ........................... <#props>
  [956] pusharglist 2 ........................... <me.pProp[#icon], #props>
  [958] objcall 54 .............................. <me.pProp[#icon][#props]>
  [960] pushint8 1 .............................. <1>
  [962] pusharglist 2 ........................... <me.pProp[#icon][#props], 1>
  [964] objcall 23 .............................. <me.pProp[#icon][#props].getPropAt(1)>
  [966] setlocal 13 ............................. tAlignment = me.pProp[#icon][#props].getPropAt(1)
  [968] getprop 1489 ............................ <pIconImg>
  [971] getobjprop 555 .......................... <pIconImg.rect>
  [974] setlocal 26 ............................. tOptImgRect = pIconImg.rect
  [976] getparam 0 .............................. <me>
  [978] pushsymb 456 ............................ <#pProp>
  [981] pushsymb 1488 ........................... <#icon>
  [984] pusharglist 3 ........................... <me, #pProp, #icon>
  [986] objcall 288 ............................. <me.pProp[#icon]>
  [989] pushsymb 1490 ........................... <#props>
  [992] pusharglist 2 ........................... <me.pProp[#icon], #props>
  [994] objcall 54 .............................. <me.pProp[#icon][#props]>
  [996] getlocal 13 ............................. <tAlignment>
  [998] pusharglist 2 ........................... <me.pProp[#icon][#props], tAlignment>
  [1000] objcall 54 ............................. <me.pProp[#icon][#props][tAlignment]>
  [1002] pushsymb 590 ........................... <#marginH>
  [1005] pusharglist 2 .......................... <me.pProp[#icon][#props][tAlignment], #marginH>
  [1007] objcall 54 ............................. <me.pProp[#icon][#props][tAlignment][#marginH]>
  [1009] setlocal 14 ............................ tOptImgMargH = me.pProp[#icon][#props][tAlignment][#marginH]
  [1011] getlocal 19 ............................ <tNewImg>
  [1013] getobjprop 43 .......................... <tNewImg.height>
  [1015] pushint8 2 ............................. <2>
  [1017] div .................................... <tNewImg.height / 2>
  [1018] getlocal 26 ............................ <tOptImgRect>
  [1020] getobjprop 43 .......................... <tOptImgRect.height>
  [1022] pushint8 2 ............................. <2>
  [1024] div .................................... <tOptImgRect.height / 2>
  [1025] sub .................................... <(tNewImg.height / 2) - (tOptImgRect.height / 2)>
  [1026] setlocal 27 ............................ tOptImgMargV = (tNewImg.height / 2) - (tOptImgRect.height / 2)
  [1028] getlocal 13 ............................ <tAlignment>
  [1030] peek 0 ................................. case tAlignment of
  [1032] pushsymb 507 ........................... <#right>
  [1035] eq
  [1036] jmpifz [1082] .......................... (case) #right:
  [1039] getlocal 26 ............................ <tOptImgRect>
  [1041] getparam 0 ............................. <me>
  [1043] getobjprop 497 ......................... <me.pwidth>
  [1046] getlocal 14 ............................ <tOptImgMargH>
  [1048] sub .................................... <me.pwidth - tOptImgMargH>
  [1049] getlocal 26 ............................ <tOptImgRect>
  [1051] getobjprop 42 .......................... <tOptImgRect.width>
  [1053] sub .................................... <me.pwidth - tOptImgMargH - tOptImgRect.width>
  [1054] getlocal 27 ............................ <tOptImgMargV>
  [1056] getparam 0 ............................. <me>
  [1058] getobjprop 497 ......................... <me.pwidth>
  [1061] getlocal 14 ............................ <tOptImgMargH>
  [1063] sub .................................... <me.pwidth - tOptImgMargH>
  [1064] getlocal 26 ............................ <tOptImgRect>
  [1066] getobjprop 42 .......................... <tOptImgRect.width>
  [1068] sub .................................... <me.pwidth - tOptImgMargH - tOptImgRect.width>
  [1069] getlocal 27 ............................ <tOptImgMargV>
  [1071] pusharglist 4 .......................... <me.pwidth - tOptImgMargH - tOptImgRect.width, tOptImgMargV, me.pwidth - tOptImgMargH - tOptImgRect.width, tOptImgMargV>
  [1073] extcall 555 ............................ <rect(me.pwidth - tOptImgMargH - tOptImgRect.width, tOptImgMargV, me.pwidth - tOptImgMargH - tOptImgRect.width, tOptImgMargV)>
  [1076] add .................................... <tOptImgRect + rect(me.pwidth - tOptImgMargH - tOptImgRect.width, tOptImgMargV, me.pwidth - tOptImgMargH - tOptImgRect.width, tOptImgMargV)>
  [1077] setlocal 25 ............................ tDstRect = tOptImgRect + rect(me.pwidth - tOptImgMargH - tOptImgRect.width, tOptImgMargV, me.pwidth - tOptImgMargH - tOptImgRect.width, tOptImgMargV)
  [1079] jmp [1167]
  [1082] peek 0
  [1084] pushsymb 464 ........................... <#left>
  [1087] eq
  [1088] jmpifz [1112] .......................... (case) #left:
  [1091] getlocal 26 ............................ <tOptImgRect>
  [1093] getlocal 14 ............................ <tOptImgMargH>
  [1095] getlocal 27 ............................ <tOptImgMargV>
  [1097] getlocal 14 ............................ <tOptImgMargH>
  [1099] getlocal 27 ............................ <tOptImgMargV>
  [1101] pusharglist 4 .......................... <tOptImgMargH, tOptImgMargV, tOptImgMargH, tOptImgMargV>
  [1103] extcall 555 ............................ <rect(tOptImgMargH, tOptImgMargV, tOptImgMargH, tOptImgMargV)>
  [1106] add .................................... <tOptImgRect + rect(tOptImgMargH, tOptImgMargV, tOptImgMargH, tOptImgMargV)>
  [1107] setlocal 25 ............................ tDstRect = tOptImgRect + rect(tOptImgMargH, tOptImgMargV, tOptImgMargH, tOptImgMargV)
  [1109] jmp [1167]
  [1112] peek 0
  [1114] pushsymb 506 ........................... <#center>
  [1117] eq
  [1118] jmpifz [1167] .......................... (case) #center:
  [1121] getlocal 26 ............................ <tOptImgRect>
  [1123] getlocal 19 ............................ <tNewImg>
  [1125] getobjprop 42 .......................... <tNewImg.width>
  [1127] pushint8 2 ............................. <2>
  [1129] div .................................... <tNewImg.width / 2>
  [1130] pushzero ............................... <0>
  [1131] getlocal 19 ............................ <tNewImg>
  [1133] getobjprop 42 .......................... <tNewImg.width>
  [1135] pushint8 2 ............................. <2>
  [1137] div .................................... <tNewImg.width / 2>
  [1138] pushzero ............................... <0>
  [1139] pusharglist 4 .......................... <tNewImg.width / 2, 0, tNewImg.width / 2, 0>
  [1141] extcall 555 ............................ <rect(tNewImg.width / 2, 0, tNewImg.width / 2, 0)>
  [1144] add .................................... <tOptImgRect + rect(tNewImg.width / 2, 0, tNewImg.width / 2, 0)>
  [1145] getprop 1489 ........................... <pIconImg>
  [1148] pushint8 2 ............................. <2>
  [1150] div .................................... <pIconImg / 2>
  [1151] pushzero ............................... <0>
  [1152] getprop 1489 ........................... <pIconImg>
  [1155] pushint8 2 ............................. <2>
  [1157] div .................................... <pIconImg / 2>
  [1158] pushzero ............................... <0>
  [1159] pusharglist 4 .......................... <pIconImg / 2, 0, pIconImg / 2, 0>
  [1161] extcall 555 ............................ <rect(pIconImg / 2, 0, pIconImg / 2, 0)>
  [1164] sub .................................... <tOptImgRect + rect(tNewImg.width / 2, 0, tNewImg.width / 2, 0) - rect(pIconImg / 2, 0, pIconImg / 2, 0)>
  [1165] setlocal 25 ............................ tDstRect = tOptImgRect + rect(tNewImg.width / 2, 0, tNewImg.width / 2, 0) - rect(pIconImg / 2, 0, pIconImg / 2, 0)
  [1167] pop 1 .................................. end case
  [1169] getparam 0 ............................. <me>
  [1171] pushsymb 456 ........................... <#pProp>
  [1174] pushsymb 1488 .......................... <#icon>
  [1177] pusharglist 3 .......................... <me, #pProp, #icon>
  [1179] objcall 288 ............................ <me.pProp[#icon]>
  [1182] pushsymb 1490 .......................... <#props>
  [1185] pusharglist 2 .......................... <me.pProp[#icon], #props>
  [1187] objcall 54 ............................. <me.pProp[#icon][#props]>
  [1189] getlocal 13 ............................ <tAlignment>
  [1191] pusharglist 2 .......................... <me.pProp[#icon][#props], tAlignment>
  [1193] objcall 54 ............................. <me.pProp[#icon][#props][tAlignment]>
  [1195] pushsymb 560 ........................... <#ink>
  [1198] pusharglist 2 .......................... <me.pProp[#icon][#props][tAlignment], #ink>
  [1200] objcall 54 ............................. <me.pProp[#icon][#props][tAlignment][#ink]>
  [1202] setlocal 28 ............................ tInk = me.pProp[#icon][#props][tAlignment][#ink]
  [1204] getlocal 28 ............................ <tInk>
  [1206] pusharglist 1 .......................... <tInk>
  [1208] extcall 20 ............................. <voidp(tInk)>
  [1210] jmpifz [1217] .......................... if voidp(tInk) then
  [1213] pushint8 36 ............................ <36>
  [1215] setlocal 28 ............................ tInk = 36
  [1217] getlocal 19 ............................ <tNewImg>
  [1219] getprop 1489 ........................... <pIconImg>
  [1222] getlocal 25 ............................ <tDstRect>
  [1224] getlocal 26 ............................ <tOptImgRect>
  [1226] pushsymb 560 ........................... <#ink>
  [1229] getlocal 28 ............................ <tInk>
  [1231] pusharglist 2 .......................... <[#ink: tInk]>
  [1233] pushproplist ........................... <[#ink: tInk]>
  [1234] pusharglistnoret 5 ..................... <tNewImg, pIconImg, tDstRect, tOptImgRect, [#ink: tInk]>
  [1236] objcall 556 ............................ tNewImg.copyPixels(pIconImg, tDstRect, tOptImgRect, [#ink: tInk])
  [1239] getlocal 17 ............................ <tTextImg>
  [1241] getobjprop 555 ......................... <tTextImg.rect>
  [1244] pushint8 1 ............................. <1>
  [1246] getlocal 11 ............................ <tMarginV>
  [1248] pushint8 1 ............................. <1>
  [1250] getlocal 11 ............................ <tMarginV>
  [1252] pusharglist 4 .......................... <1, tMarginV, 1, tMarginV>
  [1254] extcall 555 ............................ <rect(1, tMarginV, 1, tMarginV)>
  [1257] add .................................... <tTextImg.rect + rect(1, tMarginV, 1, tMarginV)>
  [1258] setlocal 25 ............................ tDstRect = tTextImg.rect + rect(1, tMarginV, 1, tMarginV)
  [1260] getlocal 2 ............................. <tFontDesc>
  [1262] pushsymb 470 ........................... <#alignment>
  [1265] pusharglist 2 .......................... <tFontDesc, #alignment>
  [1267] objcall 54 ............................. <tFontDesc[#alignment]>
  [1269] peek 0 ................................. case tFontDesc[#alignment] of
  [1271] pushsymb 464 ........................... <#left>
  [1274] eq
  [1275] jmpifz [1323] .......................... (case) #left:
  [1278] getlocal 25 ............................ <tDstRect>
  [1280] getparam 0 ............................. <me>
  [1282] getchainedprop 1472 .................... <me.pButtonImg>
  [1285] pushsymb 464 ........................... <#left>
  [1288] pusharglist 2 .......................... <me.pButtonImg, #left>
  [1290] objcall 290 ............................ <me.pButtonImg.getProp(#left)>
  [1293] getobjprop 42 .......................... <me.pButtonImg.getProp(#left).width>
  [1295] pushzero ............................... <0>
  [1296] getparam 0 ............................. <me>
  [1298] getchainedprop 1472 .................... <me.pButtonImg>
  [1301] pushsymb 464 ........................... <#left>
  [1304] pusharglist 2 .......................... <me.pButtonImg, #left>
  [1306] objcall 290 ............................ <me.pButtonImg.getProp(#left)>
  [1309] getobjprop 42 .......................... <me.pButtonImg.getProp(#left).width>
  [1311] pushzero ............................... <0>
  [1312] pusharglist 4 .......................... <me.pButtonImg.getProp(#left).width, 0, me.pButtonImg.getProp(#left).width, 0>
  [1314] extcall 555 ............................ <rect(me.pButtonImg.getProp(#left).width, 0, me.pButtonImg.getProp(#left).width, 0)>
  [1317] add .................................... <tDstRect + rect(me.pButtonImg.getProp(#left).width, 0, me.pButtonImg.getProp(#left).width, 0)>
  [1318] setlocal 25 ............................ tDstRect = tDstRect + rect(me.pButtonImg.getProp(#left).width, 0, me.pButtonImg.getProp(#left).width, 0)
  [1320] jmp [1452]
  [1323] peek 0
  [1325] pushsymb 506 ........................... <#center>
  [1328] eq
  [1329] jmpifz [1379] .......................... (case) #center:
  [1332] getlocal 25 ............................ <tDstRect>
  [1334] getlocal 19 ............................ <tNewImg>
  [1336] getobjprop 42 .......................... <tNewImg.width>
  [1338] pushint8 2 ............................. <2>
  [1340] div .................................... <tNewImg.width / 2>
  [1341] pushzero ............................... <0>
  [1342] getlocal 19 ............................ <tNewImg>
  [1344] getobjprop 42 .......................... <tNewImg.width>
  [1346] pushint8 2 ............................. <2>
  [1348] div .................................... <tNewImg.width / 2>
  [1349] pushzero ............................... <0>
  [1350] pusharglist 4 .......................... <tNewImg.width / 2, 0, tNewImg.width / 2, 0>
  [1352] extcall 555 ............................ <rect(tNewImg.width / 2, 0, tNewImg.width / 2, 0)>
  [1355] add .................................... <tDstRect + rect(tNewImg.width / 2, 0, tNewImg.width / 2, 0)>
  [1356] getlocal 16 ............................ <tTextWidth>
  [1358] pushint8 2 ............................. <2>
  [1360] div .................................... <tTextWidth / 2>
  [1361] pushzero ............................... <0>
  [1362] getlocal 16 ............................ <tTextWidth>
  [1364] pushint8 2 ............................. <2>
  [1366] div .................................... <tTextWidth / 2>
  [1367] pushzero ............................... <0>
  [1368] pusharglist 4 .......................... <tTextWidth / 2, 0, tTextWidth / 2, 0>
  [1370] extcall 555 ............................ <rect(tTextWidth / 2, 0, tTextWidth / 2, 0)>
  [1373] sub .................................... <tDstRect + rect(tNewImg.width / 2, 0, tNewImg.width / 2, 0) - rect(tTextWidth / 2, 0, tTextWidth / 2, 0)>
  [1374] setlocal 25 ............................ tDstRect = tDstRect + rect(tNewImg.width / 2, 0, tNewImg.width / 2, 0) - rect(tTextWidth / 2, 0, tTextWidth / 2, 0)
  [1376] jmp [1452]
  [1379] peek 0
  [1381] pushsymb 507 ........................... <#right>
  [1384] eq
  [1385] jmpifz [1452] .......................... (case) #right:
  [1388] getlocal 25 ............................ <tDstRect>
  [1390] getlocal 19 ............................ <tNewImg>
  [1392] getobjprop 42 .......................... <tNewImg.width>
  [1394] pushzero ............................... <0>
  [1395] getlocal 19 ............................ <tNewImg>
  [1397] getobjprop 42 .......................... <tNewImg.width>
  [1399] pushzero ............................... <0>
  [1400] pusharglist 4 .......................... <tNewImg.width, 0, tNewImg.width, 0>
  [1402] extcall 555 ............................ <rect(tNewImg.width, 0, tNewImg.width, 0)>
  [1405] add .................................... <tDstRect + rect(tNewImg.width, 0, tNewImg.width, 0)>
  [1406] getlocal 16 ............................ <tTextWidth>
  [1408] getparam 0 ............................. <me>
  [1410] getchainedprop 1472 .................... <me.pButtonImg>
  [1413] pushsymb 507 ........................... <#right>
  [1416] pusharglist 2 .......................... <me.pButtonImg, #right>
  [1418] objcall 290 ............................ <me.pButtonImg.getProp(#right)>
  [1421] getobjprop 42 .......................... <me.pButtonImg.getProp(#right).width>
  [1423] add .................................... <tTextWidth + me.pButtonImg.getProp(#right).width>
  [1424] pushzero ............................... <0>
  [1425] getlocal 16 ............................ <tTextWidth>
  [1427] getparam 0 ............................. <me>
  [1429] getchainedprop 1472 .................... <me.pButtonImg>
  [1432] pushsymb 507 ........................... <#right>
  [1435] pusharglist 2 .......................... <me.pButtonImg, #right>
  [1437] objcall 290 ............................ <me.pButtonImg.getProp(#right)>
  [1440] getobjprop 42 .......................... <me.pButtonImg.getProp(#right).width>
  [1442] add .................................... <tTextWidth + me.pButtonImg.getProp(#right).width>
  [1443] pushzero ............................... <0>
  [1444] pusharglist 4 .......................... <tTextWidth + me.pButtonImg.getProp(#right).width, 0, tTextWidth + me.pButtonImg.getProp(#right).width, 0>
  [1446] extcall 555 ............................ <rect(tTextWidth + me.pButtonImg.getProp(#right).width, 0, tTextWidth + me.pButtonImg.getProp(#right).width, 0)>
  [1449] sub .................................... <tDstRect + rect(tNewImg.width, 0, tNewImg.width, 0) - rect(tTextWidth + me.pButtonImg.getProp(#right).width, 0, tTextWidth + me.pButtonImg.getProp(#right).width, 0)>
  [1450] setlocal 25 ............................ tDstRect = tDstRect + rect(tNewImg.width, 0, tNewImg.width, 0) - rect(tTextWidth + me.pButtonImg.getProp(#right).width, 0, tTextWidth + me.pButtonImg.getProp(#right).width, 0)
  [1452] pop 1 .................................. end case
  [1454] getlocal 19 ............................ <tNewImg>
  [1456] getlocal 17 ............................ <tTextImg>
  [1458] getlocal 25 ............................ <tDstRect>
  [1460] getlocal 17 ............................ <tTextImg>
  [1462] getobjprop 555 ......................... <tTextImg.rect>
  [1465] pusharglistnoret 4 ..................... <tNewImg, tTextImg, tDstRect, tTextImg.rect>
  [1467] objcall 556 ............................ tNewImg.copyPixels(tTextImg, tDstRect, tTextImg.rect)
  [1470] getparam 0 ............................. <me>
  [1472] pushsymb 1471 .......................... <#pCachedImgs>
  [1475] getparam 2 ............................. <tstate>
  [1477] getlocal 19 ............................ <tNewImg>
  [1479] pusharglistnoret 4 ..................... <me, #pCachedImgs, tstate, tNewImg>
  [1481] objcall 889 ............................ me.pCachedImgs[tstate] = tNewImg
  [1484] getlocal 19 ............................ <tNewImg>
  [1486] pusharglistnoret 1 ..................... <tNewImg>
  [1488] extcall 25 ............................. return tNewImg
  [1490] ret
end
