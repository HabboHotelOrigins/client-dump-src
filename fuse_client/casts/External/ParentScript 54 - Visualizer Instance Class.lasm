property pTitle, pLayout, pLocX, pLocY, pLocZ, pwidth, pheight, pVisible, pSpriteList, pSpriteData, pActSprList, pDragFlag, pDragOffset, pBoundary, pWrappedParts, pSwapAnimList

on construct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 3 ............................... <me.getID()>
  [  6] setprop 1363 ............................ pTitle = me.getID()
  [  9] pusharglist 0 ........................... <[]>
  [ 11] pushlist ................................ <[]>
  [ 12] setprop 1364 ............................ pLayout = []
  [ 15] pushzero ................................ <0>
  [ 16] setprop 467 ............................. pLocX = 0
  [ 19] pushzero ................................ <0>
  [ 20] setprop 469 ............................. pLocY = 0
  [ 23] pushzero ................................ <0>
  [ 24] setprop 1365 ............................ pLocZ = 0
  [ 27] pushzero ................................ <0>
  [ 28] setprop 499 ............................. pwidth = 0
  [ 31] pushzero ................................ <0>
  [ 32] setprop 504 ............................. pheight = 0
  [ 35] pushint8 1 .............................. <1>
  [ 37] setprop 1366 ............................ pVisible = 1
  [ 40] pusharglist 0 ........................... <[]>
  [ 42] pushlist ................................ <[]>
  [ 43] setprop 1367 ............................ pSpriteList = []
  [ 46] pusharglist 0 ........................... <[]>
  [ 48] pushlist ................................ <[]>
  [ 49] setprop 1368 ............................ pSpriteData = []
  [ 52] pusharglist 0 ........................... <[:]>
  [ 54] pushproplist ............................ <[:]>
  [ 55] setprop 1369 ............................ pActSprList = [:]
  [ 58] pushzero ................................ <0>
  [ 59] setprop 1370 ............................ pDragFlag = 0
  [ 62] pushzero ................................ <0>
  [ 63] pushzero ................................ <0>
  [ 64] pusharglist 2 ........................... <[0, 0]>
  [ 66] pushlist ................................ <[0, 0]>
  [ 67] setprop 1371 ............................ pDragOffset = [0, 0]
  [ 70] pushzero ................................ <0>
  [ 71] pushzero ................................ <0>
  [ 72] getmovieprop 970 ........................ <the stage>
  [ 75] getchainedprop 971 ...................... <(the stage).sourceRect>
  [ 78] getobjprop 42 ........................... <(the stage).sourceRect.width>
  [ 80] getmovieprop 970 ........................ <the stage>
  [ 83] getchainedprop 971 ...................... <(the stage).sourceRect>
  [ 86] getobjprop 43 ........................... <(the stage).sourceRect.height>
  [ 88] pusharglist 4 ........................... <0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height>
  [ 90] extcall 557 ............................. <rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height)>
  [ 93] pushint16 1000 .......................... <1000>
  [ 96] inv ..................................... <-1000>
  [ 97] pushint16 1000 .......................... <1000>
  [100] inv ..................................... <-1000>
  [101] pushint16 1000 .......................... <1000>
  [104] pushint16 1000 .......................... <1000>
  [107] pusharglist 4 ........................... <[-1000, -1000, 1000, 1000]>
  [109] pushlist ................................ <[-1000, -1000, 1000, 1000]>
  [110] add ..................................... <rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height) + [-1000, -1000, 1000, 1000]>
  [111] setprop 969 ............................. pBoundary = rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height) + [-1000, -1000, 1000, 1000]
  [114] pusharglist 0 ........................... <[:]>
  [116] pushproplist ............................ <[:]>
  [117] setprop 1372 ............................ pWrappedParts = [:]
  [120] pusharglist 0 ........................... <[:]>
  [122] pushproplist ............................ <[:]>
  [123] setprop 1373 ............................ pSwapAnimList = [:]
  [126] pushint8 1 .............................. <1>
  [128] pusharglistnoret 1 ...................... <1>
  [130] extcall 25 .............................. return 1
  [132] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 3 ............................... <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 109 ............................. removeUpdate(me.getID())
  [ 10] pushint8 1 .............................. <1>
  [ 12] setlocal 0
  [ 14] getlocal 0
  [ 16] getprop 1367 ............................ <pSpriteList>
  [ 19] getobjprop 22 ........................... <pSpriteList.count>
  [ 21] lteq
  [ 22] jmpifz [ 49] ............................ repeat with i = 1 to pSpriteList.count
  [ 25] getprop 1367 ............................ <pSpriteList>
  [ 28] getlocal 0 .............................. <i>
  [ 30] pusharglist 2 ........................... <pSpriteList, i>
  [ 32] objcall 54 .............................. <pSpriteList[i]>
  [ 34] getobjprop 37 ........................... <pSpriteList[i].spriteNum>
  [ 36] pusharglistnoret 1 ...................... <pSpriteList[i].spriteNum>
  [ 38] extcall 233 ............................. releaseSprite(pSpriteList[i].spriteNum)
  [ 40] pushint8 1
  [ 42] getlocal 0
  [ 44] add
  [ 45] setlocal 0
  [ 47] endrepeat [ 14]
  [ 49] pusharglist 0 ........................... <[]>
  [ 51] pushlist ................................ <[]>
  [ 52] setprop 1367 ............................ pSpriteList = []
  [ 55] pusharglist 0 ........................... <[]>
  [ 57] pushlist ................................ <[]>
  [ 58] setprop 1368 ............................ pSpriteData = []
  [ 61] pusharglist 0 ........................... <[:]>
  [ 63] pushproplist ............................ <[:]>
  [ 64] setprop 1369 ............................ pActSprList = [:]
  [ 67] pusharglist 0 ........................... <[]>
  [ 69] pushlist ................................ <[]>
  [ 70] setprop 969 ............................. pBoundary = []
  [ 73] getprop 1372 ............................ <pWrappedParts>
  [ 76] peek 0
  [ 78] pusharglist 1
  [ 80] extcall 22
  [ 82] pushint8 1
  [ 84] peek 0
  [ 86] peek 2
  [ 88] lteq
  [ 89] jmpifz [113] ............................ repeat with tWrapper in pWrappedParts
  [ 92] peek 2
  [ 94] peek 1
  [ 96] pusharglist 2
  [ 98] extcall 54
  [100] setlocal 1
  [102] getlocal 1 .............................. <tWrapper>
  [104] pusharglistnoret 1 ...................... <tWrapper>
  [106] objcall 119 ............................. tWrapper.deconstruct()
  [108] pushint8 1
  [110] add
  [111] endrepeat [ 84]
  [113] pop 3
  [115] pusharglist 0 ........................... <[:]>
  [117] pushproplist ............................ <[:]>
  [118] setprop 1372 ............................ pWrappedParts = [:]
  [121] pushint8 1 .............................. <1>
  [123] pusharglistnoret 1 ...................... <1>
  [125] extcall 25 .............................. return 1
  [127] ret
end

on define me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pusharglist 1 ........................... <tProps>
  [  4] extcall 20 .............................. <voidp(tProps)>
  [  6] jmpifz [ 14] ............................ if voidp(tProps) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 25 .............................. return 0
  [ 14] getparam 1 .............................. <tProps>
  [ 16] pushsymb 540 ............................ <#locX>
  [ 19] pusharglist 2 ........................... <tProps, #locX>
  [ 21] objcall 54 .............................. <tProps[#locX]>
  [ 23] pusharglist 1 ........................... <tProps[#locX]>
  [ 25] extcall 20 .............................. <voidp(tProps[#locX])>
  [ 27] not ..................................... <not voidp(tProps[#locX])>
  [ 28] jmpifz [ 43] ............................ if not voidp(tProps[#locX]) then
  [ 31] getparam 1 .............................. <tProps>
  [ 33] pushsymb 540 ............................ <#locX>
  [ 36] pusharglist 2 ........................... <tProps, #locX>
  [ 38] objcall 54 .............................. <tProps[#locX]>
  [ 40] setprop 467 ............................. pLocX = tProps[#locX]
  [ 43] getparam 1 .............................. <tProps>
  [ 45] pushsymb 541 ............................ <#locY>
  [ 48] pusharglist 2 ........................... <tProps, #locY>
  [ 50] objcall 54 .............................. <tProps[#locY]>
  [ 52] pusharglist 1 ........................... <tProps[#locY]>
  [ 54] extcall 20 .............................. <voidp(tProps[#locY])>
  [ 56] not ..................................... <not voidp(tProps[#locY])>
  [ 57] jmpifz [ 72] ............................ if not voidp(tProps[#locY]) then
  [ 60] getparam 1 .............................. <tProps>
  [ 62] pushsymb 541 ............................ <#locY>
  [ 65] pusharglist 2 ........................... <tProps, #locY>
  [ 67] objcall 54 .............................. <tProps[#locY]>
  [ 69] setprop 469 ............................. pLocY = tProps[#locY]
  [ 72] getparam 1 .............................. <tProps>
  [ 74] pushsymb 883 ............................ <#locZ>
  [ 77] pusharglist 2 ........................... <tProps, #locZ>
  [ 79] objcall 54 .............................. <tProps[#locZ]>
  [ 81] pusharglist 1 ........................... <tProps[#locZ]>
  [ 83] extcall 20 .............................. <voidp(tProps[#locZ])>
  [ 85] not ..................................... <not voidp(tProps[#locZ])>
  [ 86] jmpifz [101] ............................ if not voidp(tProps[#locZ]) then
  [ 89] getparam 1 .............................. <tProps>
  [ 91] pushsymb 883 ............................ <#locZ>
  [ 94] pusharglist 2 ........................... <tProps, #locZ>
  [ 96] objcall 54 .............................. <tProps[#locZ]>
  [ 98] setprop 1365 ............................ pLocZ = tProps[#locZ]
  [101] getparam 1 .............................. <tProps>
  [103] pushsymb 973 ............................ <#layout>
  [106] pusharglist 2 ........................... <tProps, #layout>
  [108] objcall 54 .............................. <tProps[#layout]>
  [110] pusharglist 1 ........................... <tProps[#layout]>
  [112] extcall 20 .............................. <voidp(tProps[#layout])>
  [114] not ..................................... <not voidp(tProps[#layout])>
  [115] jmpifz [130] ............................ if not voidp(tProps[#layout]) then
  [118] getparam 1 .............................. <tProps>
  [120] pushsymb 973 ............................ <#layout>
  [123] pusharglist 2 ........................... <tProps, #layout>
  [125] objcall 54 .............................. <tProps[#layout]>
  [127] setprop 1364 ............................ pLayout = tProps[#layout]
  [130] getparam 1 .............................. <tProps>
  [132] pushsymb 974 ............................ <#boundary>
  [135] pusharglist 2 ........................... <tProps, #boundary>
  [137] objcall 54 .............................. <tProps[#boundary]>
  [139] pusharglist 1 ........................... <tProps[#boundary]>
  [141] extcall 20 .............................. <voidp(tProps[#boundary])>
  [143] not ..................................... <not voidp(tProps[#boundary])>
  [144] jmpifz [159] ............................ if not voidp(tProps[#boundary]) then
  [147] getparam 1 .............................. <tProps>
  [149] pushsymb 974 ............................ <#boundary>
  [152] pusharglist 2 ........................... <tProps, #boundary>
  [154] objcall 54 .............................. <tProps[#boundary]>
  [156] setprop 969 ............................. pBoundary = tProps[#boundary]
  [159] getparam 0 .............................. <me>
  [161] getprop 1364 ............................ <pLayout>
  [164] pusharglist 2 ........................... <me, pLayout>
  [166] objcall 539 ............................. <me.open(pLayout)>
  [169] pusharglistnoret 1 ...................... <me.open(pLayout)>
  [171] extcall 25 .............................. return me.open(pLayout)
  [173] ret
end

on open me, tLayout
  [  0] getparam 1 .............................. <tLayout>
  [  2] pusharglist 1 ........................... <tLayout>
  [  4] extcall 20 .............................. <voidp(tLayout)>
  [  6] jmpifz [ 14] ............................ if voidp(tLayout) then
  [  9] getprop 1364 ............................ <pLayout>
  [ 12] setparam 1 .............................. tLayout = pLayout
  [ 14] getparam 1 .............................. <tLayout>
  [ 16] setprop 1364 ............................ pLayout = tLayout
  [ 19] getprop 1367 ............................ <pSpriteList>
  [ 22] getobjprop 22 ........................... <pSpriteList.count>
  [ 24] pushzero ................................ <0>
  [ 25] gt ...................................... <pSpriteList.count > 0>
  [ 26] jmpifz [ 74] ............................ if pSpriteList.count > 0 then
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 0
  [ 33] getlocal 0
  [ 35] getprop 1367 ............................ <pSpriteList>
  [ 38] getobjprop 22 ........................... <pSpriteList.count>
  [ 40] lteq
  [ 41] jmpifz [ 68] ............................ repeat with i = 1 to pSpriteList.count
  [ 44] getprop 1367 ............................ <pSpriteList>
  [ 47] getlocal 0 .............................. <i>
  [ 49] pusharglist 2 ........................... <pSpriteList, i>
  [ 51] objcall 54 .............................. <pSpriteList[i]>
  [ 53] getobjprop 37 ........................... <pSpriteList[i].spriteNum>
  [ 55] pusharglistnoret 1 ...................... <pSpriteList[i].spriteNum>
  [ 57] extcall 233 ............................. releaseSprite(pSpriteList[i].spriteNum)
  [ 59] pushint8 1
  [ 61] getlocal 0
  [ 63] add
  [ 64] setlocal 0
  [ 66] endrepeat [ 33]
  [ 68] pusharglist 0 ........................... <[]>
  [ 70] pushlist ................................ <[]>
  [ 71] setprop 1367 ............................ pSpriteList = []
  [ 74] getparam 0 .............................. <me>
  [ 76] getprop 1364 ............................ <pLayout>
  [ 79] pusharglist 2 ........................... <me, pLayout>
  [ 81] objcall 1362 ............................ <me.buildVisual(pLayout)>
  [ 84] pusharglistnoret 1 ...................... <me.buildVisual(pLayout)>
  [ 86] extcall 25 .............................. return me.buildVisual(pLayout)
  [ 88] ret
end

on close me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 3 ............................ <me.getID>
  [  6] pusharglist 2 ........................... <me, me.getID>
  [  8] objcall 125 ............................. <me.Remove(me.getID)>
  [ 10] pusharglistnoret 1 ...................... <me.Remove(me.getID)>
  [ 12] extcall 25 .............................. return me.Remove(me.getID)
  [ 14] ret
end

on moveTo me, tX, tY
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tX>
  [  4] getprop 467 ............................. <pLocX>
  [  7] sub ..................................... <tX - pLocX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getprop 469 ............................. <pLocY>
  [ 13] sub ..................................... <tY - pLocY>
  [ 14] pusharglistnoret 3 ...................... <me, tX - pLocX, tY - pLocY>
  [ 16] objcall 982 ............................. me.moveBy(tX - pLocX, tY - pLocY)
  [ 19] ret
end

on moveBy me, tOffX, tOffY
  [  0] getprop 467 ............................. <pLocX>
  [  3] getparam 1 .............................. <tOffX>
  [  5] add ..................................... <pLocX + tOffX>
  [  6] getprop 969 ............................. <pBoundary>
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglist 2 ........................... <pBoundary, 1>
  [ 13] objcall 54 .............................. <pBoundary[1]>
  [ 15] lt ...................................... <(pLocX + tOffX) < pBoundary[1]>
  [ 16] jmpifz [ 34] ............................ if (pLocX + tOffX) < pBoundary[1] then
  [ 19] getprop 969 ............................. <pBoundary>
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglist 2 ........................... <pBoundary, 1>
  [ 26] objcall 54 .............................. <pBoundary[1]>
  [ 28] getprop 467 ............................. <pLocX>
  [ 31] sub ..................................... <pBoundary[1] - pLocX>
  [ 32] setparam 1 .............................. tOffX = pBoundary[1] - pLocX
  [ 34] getprop 469 ............................. <pLocY>
  [ 37] getparam 2 .............................. <tOffY>
  [ 39] add ..................................... <pLocY + tOffY>
  [ 40] getprop 969 ............................. <pBoundary>
  [ 43] pushint8 2 .............................. <2>
  [ 45] pusharglist 2 ........................... <pBoundary, 2>
  [ 47] objcall 54 .............................. <pBoundary[2]>
  [ 49] lt ...................................... <(pLocY + tOffY) < pBoundary[2]>
  [ 50] jmpifz [ 68] ............................ if (pLocY + tOffY) < pBoundary[2] then
  [ 53] getprop 969 ............................. <pBoundary>
  [ 56] pushint8 2 .............................. <2>
  [ 58] pusharglist 2 ........................... <pBoundary, 2>
  [ 60] objcall 54 .............................. <pBoundary[2]>
  [ 62] getprop 469 ............................. <pLocY>
  [ 65] sub ..................................... <pBoundary[2] - pLocY>
  [ 66] setparam 2 .............................. tOffY = pBoundary[2] - pLocY
  [ 68] getprop 467 ............................. <pLocX>
  [ 71] getprop 499 ............................. <pwidth>
  [ 74] add ..................................... <pLocX + pwidth>
  [ 75] getparam 1 .............................. <tOffX>
  [ 77] add ..................................... <pLocX + pwidth + tOffX>
  [ 78] getprop 969 ............................. <pBoundary>
  [ 81] pushint8 3 .............................. <3>
  [ 83] pusharglist 2 ........................... <pBoundary, 3>
  [ 85] objcall 54 .............................. <pBoundary[3]>
  [ 87] gt ...................................... <(pLocX + pwidth + tOffX) > pBoundary[3]>
  [ 88] jmpifz [110] ............................ if (pLocX + pwidth + tOffX) > pBoundary[3] then
  [ 91] getprop 969 ............................. <pBoundary>
  [ 94] pushint8 3 .............................. <3>
  [ 96] pusharglist 2 ........................... <pBoundary, 3>
  [ 98] objcall 54 .............................. <pBoundary[3]>
  [100] getprop 467 ............................. <pLocX>
  [103] sub ..................................... <pBoundary[3] - pLocX>
  [104] getprop 499 ............................. <pwidth>
  [107] sub ..................................... <pBoundary[3] - pLocX - pwidth>
  [108] setparam 1 .............................. tOffX = pBoundary[3] - pLocX - pwidth
  [110] getprop 469 ............................. <pLocY>
  [113] getprop 504 ............................. <pheight>
  [116] add ..................................... <pLocY + pheight>
  [117] getparam 2 .............................. <tOffY>
  [119] add ..................................... <pLocY + pheight + tOffY>
  [120] getprop 969 ............................. <pBoundary>
  [123] pushint8 4 .............................. <4>
  [125] pusharglist 2 ........................... <pBoundary, 4>
  [127] objcall 54 .............................. <pBoundary[4]>
  [129] gt ...................................... <(pLocY + pheight + tOffY) > pBoundary[4]>
  [130] jmpifz [152] ............................ if (pLocY + pheight + tOffY) > pBoundary[4] then
  [133] getprop 969 ............................. <pBoundary>
  [136] pushint8 4 .............................. <4>
  [138] pusharglist 2 ........................... <pBoundary, 4>
  [140] objcall 54 .............................. <pBoundary[4]>
  [142] getprop 469 ............................. <pLocY>
  [145] sub ..................................... <pBoundary[4] - pLocY>
  [146] getprop 504 ............................. <pheight>
  [149] sub ..................................... <pBoundary[4] - pLocY - pheight>
  [150] setparam 2 .............................. tOffY = pBoundary[4] - pLocY - pheight
  [152] getprop 467 ............................. <pLocX>
  [155] getparam 1 .............................. <tOffX>
  [157] add ..................................... <pLocX + tOffX>
  [158] setprop 467 ............................. pLocX = pLocX + tOffX
  [161] getprop 469 ............................. <pLocY>
  [164] getparam 2 .............................. <tOffY>
  [166] add ..................................... <pLocY + tOffY>
  [167] setprop 469 ............................. pLocY = pLocY + tOffY
  [170] getparam 0 .............................. <me>
  [172] getparam 1 .............................. <tOffX>
  [174] getparam 2 .............................. <tOffY>
  [176] pusharglistnoret 3 ...................... <me, tOffX, tOffY>
  [178] objcall 1360 ............................ me.moveXY(tOffX, tOffY)
  [181] ret
end

on moveZ me, tZ
  [  0] getparam 1 .............................. <tZ>
  [  2] pusharglist 1 ........................... <tZ>
  [  4] extcall 683 ............................. <integerp(tZ)>
  [  7] not ..................................... <not integerp(tZ)>
  [  8] jmpifz [ 29] ............................ if not integerp(tZ) then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 0 .............................. <"Integer expected:">
  [ 15] getparam 1 .............................. <tZ>
  [ 17] joinpadstr .............................. <"Integer expected:" && tZ>
  [ 18] pushsymb 1345 ........................... <#moveZ>
  [ 21] pusharglist 3 ........................... <me, "Integer expected:" && tZ, #moveZ>
  [ 23] extcall 39 .............................. <error(me, "Integer expected:" && tZ, #moveZ)>
  [ 25] pusharglistnoret 1 ...................... <error(me, "Integer expected:" && tZ, #moveZ)>
  [ 27] extcall 25 .............................. return error(me, "Integer expected:" && tZ, #moveZ)
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 0
  [ 33] getlocal 0
  [ 35] getprop 1367 ............................ <pSpriteList>
  [ 38] getobjprop 22 ........................... <pSpriteList.count>
  [ 40] lteq
  [ 41] jmpifz [ 73] ............................ repeat with i = 1 to pSpriteList.count
  [ 44] getprop 1367 ............................ <pSpriteList>
  [ 47] getlocal 0 .............................. <i>
  [ 49] pusharglist 2 ........................... <pSpriteList, i>
  [ 51] objcall 54 .............................. <pSpriteList[i]>
  [ 53] getparam 1 .............................. <tZ>
  [ 55] getlocal 0 .............................. <i>
  [ 57] add ..................................... <tZ + i>
  [ 58] pushint8 1 .............................. <1>
  [ 60] sub ..................................... <tZ + i - 1>
  [ 61] setobjprop 883 .......................... pSpriteList[i].locZ = tZ + i - 1
  [ 64] pushint8 1
  [ 66] getlocal 0
  [ 68] add
  [ 69] setlocal 0
  [ 71] endrepeat [ 33]
  [ 73] getprop 1372 ............................ <pWrappedParts>
  [ 76] peek 0
  [ 78] pusharglist 1
  [ 80] extcall 22
  [ 82] pushint8 1
  [ 84] peek 0
  [ 86] peek 2
  [ 88] lteq
  [ 89] jmpifz [119] ............................ repeat with tPart in pWrappedParts
  [ 92] peek 2
  [ 94] peek 1
  [ 96] pusharglist 2
  [ 98] extcall 54
  [100] setlocal 1
  [102] getlocal 1 .............................. <tPart>
  [104] pushsymb 1375 ........................... <#visLocZ>
  [107] getparam 1 .............................. <tZ>
  [109] pusharglistnoret 3 ...................... <tPart, #visLocZ, tZ>
  [111] objcall 711 ............................. tPart.setProperty(#visLocZ, tZ)
  [114] pushint8 1
  [116] add
  [117] endrepeat [ 84]
  [119] pop 3
  [121] getparam 1 .............................. <tZ>
  [123] setprop 1365 ............................ pLocZ = tZ
  [126] ret
end

on getSprite me, tid
  [  0] getprop 1369 ............................ <pActSprList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pActSprList, tid>
  [  7] objcall 54 .............................. <pActSprList[tid]>
  [  9] pusharglistnoret 1 ...................... <pActSprList[tid]>
  [ 11] extcall 25 .............................. return pActSprList[tid]
  [ 13] ret
end

on getSprById me, tid
  [  0] getprop 1369 ............................ <pActSprList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pActSprList, tid>
  [  7] objcall 54 .............................. <pActSprList[tid]>
  [  9] pusharglistnoret 1 ...................... <pActSprList[tid]>
  [ 11] extcall 25 .............................. return pActSprList[tid]
  [ 13] ret
end

on getSpriteByID me, tid
  [  0] getprop 1369 ............................ <pActSprList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pActSprList, tid>
  [  7] objcall 54 .............................. <pActSprList[tid]>
  [  9] pusharglistnoret 1 ...................... <pActSprList[tid]>
  [ 11] extcall 25 .............................. return pActSprList[tid]
  [ 13] ret
end

on spriteExists me, tid
  [  0] getprop 1369 ............................ <pActSprList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pActSprList, tid>
  [  7] objcall 54 .............................. <pActSprList[tid]>
  [  9] pusharglist 1 ........................... <pActSprList[tid]>
  [ 11] extcall 20 .............................. <voidp(pActSprList[tid])>
  [ 13] not ..................................... <not voidp(pActSprList[tid])>
  [ 14] pusharglistnoret 1 ...................... <not voidp(pActSprList[tid])>
  [ 16] extcall 25 .............................. return not voidp(pActSprList[tid])
  [ 18] ret
end

on moveSprBy me, tid, tX, tY
  [  0] getprop 1369 ............................ <pActSprList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pActSprList, tid>
  [  7] objcall 54 .............................. <pActSprList[tid]>
  [  9] setlocal 0 .............................. tsprite = pActSprList[tid]
  [ 11] getlocal 0 .............................. <tsprite>
  [ 13] pusharglist 1 ........................... <tsprite>
  [ 15] extcall 20 .............................. <voidp(tsprite)>
  [ 17] jmpifz [ 38] ............................ if voidp(tsprite) then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 1 .............................. <"Sprite not found:">
  [ 24] getparam 1 .............................. <tid>
  [ 26] joinpadstr .............................. <"Sprite not found:" && tid>
  [ 27] pushsymb 1350 ........................... <#moveSprBy>
  [ 30] pusharglist 3 ........................... <me, "Sprite not found:" && tid, #moveSprBy>
  [ 32] extcall 39 .............................. <error(me, "Sprite not found:" && tid, #moveSprBy)>
  [ 34] pusharglistnoret 1 ...................... <error(me, "Sprite not found:" && tid, #moveSprBy)>
  [ 36] extcall 25 .............................. return error(me, "Sprite not found:" && tid, #moveSprBy)
  [ 38] getlocal 0 .............................. <tsprite>
  [ 40] getlocal 0 .............................. <tsprite>
  [ 42] getobjprop 511 .......................... <tsprite.loc>
  [ 45] getparam 2 .............................. <tX>
  [ 47] getparam 3 .............................. <tY>
  [ 49] pusharglist 2 ........................... <[tX, tY]>
  [ 51] pushlist ................................ <[tX, tY]>
  [ 52] add ..................................... <tsprite.loc + [tX, tY]>
  [ 53] setobjprop 511 .......................... tsprite.loc = tsprite.loc + [tX, tY]
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglist 1 ........................... <me>
  [ 60] objcall 1361 ............................ <me.Refresh()>
  [ 63] pusharglistnoret 1 ...................... <me.Refresh()>
  [ 65] extcall 25 .............................. return me.Refresh()
  [ 67] ret
end

on moveSprTo me, tid, tX, tY
  [  0] getprop 1369 ............................ <pActSprList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pActSprList, tid>
  [  7] objcall 54 .............................. <pActSprList[tid]>
  [  9] setlocal 0 .............................. tsprite = pActSprList[tid]
  [ 11] getlocal 0 .............................. <tsprite>
  [ 13] pusharglist 1 ........................... <tsprite>
  [ 15] extcall 20 .............................. <voidp(tsprite)>
  [ 17] jmpifz [ 38] ............................ if voidp(tsprite) then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 1 .............................. <"Sprite not found:">
  [ 24] getparam 1 .............................. <tid>
  [ 26] joinpadstr .............................. <"Sprite not found:" && tid>
  [ 27] pushsymb 1351 ........................... <#moveSprTo>
  [ 30] pusharglist 3 ........................... <me, "Sprite not found:" && tid, #moveSprTo>
  [ 32] extcall 39 .............................. <error(me, "Sprite not found:" && tid, #moveSprTo)>
  [ 34] pusharglistnoret 1 ...................... <error(me, "Sprite not found:" && tid, #moveSprTo)>
  [ 36] extcall 25 .............................. return error(me, "Sprite not found:" && tid, #moveSprTo)
  [ 38] getlocal 0 .............................. <tsprite>
  [ 40] getparam 2 .............................. <tX>
  [ 42] getparam 3 .............................. <tY>
  [ 44] pusharglist 2 ........................... <tX, tY>
  [ 46] extcall 510 ............................. <point(tX, tY)>
  [ 49] setobjprop 511 .......................... tsprite.loc = point(tX, tY)
  [ 52] getparam 0 .............................. <me>
  [ 54] pusharglist 1 ........................... <me>
  [ 56] objcall 1361 ............................ <me.Refresh()>
  [ 59] pusharglistnoret 1 ...................... <me.Refresh()>
  [ 61] extcall 25 .............................. return me.Refresh()
  [ 63] ret
end

on setActive me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 25 .............................. return 1
  [  6] ret
end

on setDeactive me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 25 .............................. return 1
  [  6] ret
end

on hide me
  [  0] getprop 1366 ............................ <pVisible>
  [  3] pushint8 1 .............................. <1>
  [  5] eq ...................................... <pVisible = 1>
  [  6] jmpifz [ 29] ............................ if pVisible = 1 then
  [  9] pushzero ................................ <0>
  [ 10] setprop 1366 ............................ pVisible = 0
  [ 13] getparam 0 .............................. <me>
  [ 15] pushint16 10000 ......................... <10000>
  [ 18] pusharglistnoret 2 ...................... <me, 10000>
  [ 20] objcall 1358 ............................ me.moveX(10000)
  [ 23] pushint8 1 .............................. <1>
  [ 25] pusharglistnoret 1 ...................... <1>
  [ 27] extcall 25 .............................. return 1
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 25 .............................. return 0
  [ 34] ret
end

on show me
  [  0] getprop 1366 ............................ <pVisible>
  [  3] pushzero ................................ <0>
  [  4] eq ...................................... <pVisible = 0>
  [  5] jmpifz [ 30] ............................ if pVisible = 0 then
  [  8] pushint8 1 .............................. <1>
  [ 10] setprop 1366 ............................ pVisible = 1
  [ 13] getparam 0 .............................. <me>
  [ 15] pushint16 10000 ......................... <10000>
  [ 18] inv ..................................... <-10000>
  [ 19] pusharglistnoret 2 ...................... <me, -10000>
  [ 21] objcall 1358 ............................ me.moveX(-10000)
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 25 .............................. return 1
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 25 .............................. return 0
  [ 35] ret
end

on drag me, tBoolean
  [  0] getparam 1 .............................. <tBoolean>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tBoolean = 1>
  [  5] getprop 1370 ............................ <pDragFlag>
  [  8] pushzero ................................ <0>
  [  9] eq ...................................... <pDragFlag = 0>
  [ 10] and ..................................... <(tBoolean = 1) and (pDragFlag = 0)>
  [ 11] jmpifz [ 48] ............................ if (tBoolean = 1) and (pDragFlag = 0) then / else
  [ 14] getmovieprop 1090 ....................... <the mouseLoc>
  [ 17] getprop 467 ............................. <pLocX>
  [ 20] getprop 469 ............................. <pLocY>
  [ 23] pusharglist 2 ........................... <[pLocX, pLocY]>
  [ 25] pushlist ................................ <[pLocX, pLocY]>
  [ 26] sub ..................................... <the mouseLoc - [pLocX, pLocY]>
  [ 27] setprop 1371 ............................ pDragOffset = the mouseLoc - [pLocX, pLocY]
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglist 1 ........................... <me>
  [ 34] objcall 3 ............................... <me.getID()>
  [ 36] pusharglistnoret 1 ...................... <me.getID()>
  [ 38] extcall 108 ............................. receiveUpdate(me.getID())
  [ 40] pushint8 1 .............................. <1>
  [ 42] setprop 1370 ............................ pDragFlag = 1
  [ 45] jmp [ 76]
  [ 48] getparam 1 .............................. <tBoolean>
  [ 50] pushzero ................................ <0>
  [ 51] eq ...................................... <tBoolean = 0>
  [ 52] getprop 1370 ............................ <pDragFlag>
  [ 55] pushint8 1 .............................. <1>
  [ 57] eq ...................................... <pDragFlag = 1>
  [ 58] and ..................................... <(tBoolean = 0) and (pDragFlag = 1)>
  [ 59] jmpifz [ 76] ............................ if (tBoolean = 0) and (pDragFlag = 1) then
  [ 62] getparam 0 .............................. <me>
  [ 64] pusharglist 1 ........................... <me>
  [ 66] objcall 3 ............................... <me.getID()>
  [ 68] pusharglistnoret 1 ...................... <me.getID()>
  [ 70] extcall 109 ............................. removeUpdate(me.getID())
  [ 72] pushzero ................................ <0>
  [ 73] setprop 1370 ............................ pDragFlag = 0
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 1 ...................... <1>
  [ 80] extcall 25 .............................. return 1
  [ 82] ret
end

on getProperty me, tProp
  [  0] getparam 1 .............................. <tProp>
  [  2] peek 0 .................................. case tProp of
  [  4] pushsymb 973 ............................ <#layout>
  [  7] eq
  [  8] jmpifz [ 23] ............................ (case) #layout:
  [ 11] pop 1
  [ 13] getprop 1364 ............................ <pLayout>
  [ 16] pusharglistnoret 1 ...................... <pLayout>
  [ 18] extcall 25 .............................. return pLayout
  [ 20] jmp [295]
  [ 23] peek 0
  [ 25] pushsymb 540 ............................ <#locX>
  [ 28] eq
  [ 29] jmpifz [ 44] ............................ (case) #locX:
  [ 32] pop 1
  [ 34] getprop 467 ............................. <pLocX>
  [ 37] pusharglistnoret 1 ...................... <pLocX>
  [ 39] extcall 25 .............................. return pLocX
  [ 41] jmp [295]
  [ 44] peek 0
  [ 46] pushsymb 541 ............................ <#locY>
  [ 49] eq
  [ 50] jmpifz [ 65] ............................ (case) #locY:
  [ 53] pop 1
  [ 55] getprop 469 ............................. <pLocY>
  [ 58] pusharglistnoret 1 ...................... <pLocY>
  [ 60] extcall 25 .............................. return pLocY
  [ 62] jmp [295]
  [ 65] peek 0
  [ 67] pushsymb 883 ............................ <#locZ>
  [ 70] eq
  [ 71] jmpifz [ 86] ............................ (case) #locZ:
  [ 74] pop 1
  [ 76] getprop 1365 ............................ <pLocZ>
  [ 79] pusharglistnoret 1 ...................... <pLocZ>
  [ 81] extcall 25 .............................. return pLocZ
  [ 83] jmp [295]
  [ 86] peek 0
  [ 88] pushsymb 974 ............................ <#boundary>
  [ 91] eq
  [ 92] jmpifz [107] ............................ (case) #boundary:
  [ 95] pop 1
  [ 97] getprop 969 ............................. <pBoundary>
  [100] pusharglistnoret 1 ...................... <pBoundary>
  [102] extcall 25 .............................. return pBoundary
  [104] jmp [295]
  [107] peek 0
  [109] pushsymb 42 ............................. <#width>
  [111] eq
  [112] jmpifz [127] ............................ (case) #width:
  [115] pop 1
  [117] getprop 499 ............................. <pwidth>
  [120] pusharglistnoret 1 ...................... <pwidth>
  [122] extcall 25 .............................. return pwidth
  [124] jmp [295]
  [127] peek 0
  [129] pushsymb 43 ............................. <#height>
  [131] eq
  [132] jmpifz [147] ............................ (case) #height:
  [135] pop 1
  [137] getprop 504 ............................. <pheight>
  [140] pusharglistnoret 1 ...................... <pheight>
  [142] extcall 25 .............................. return pheight
  [144] jmp [295]
  [147] peek 0
  [149] pushsymb 975 ............................ <#sprCount>
  [152] eq
  [153] jmpifz [170] ............................ (case) #sprCount:
  [156] pop 1
  [158] getprop 1367 ............................ <pSpriteList>
  [161] getobjprop 22 ........................... <pSpriteList.count>
  [163] pusharglistnoret 1 ...................... <pSpriteList.count>
  [165] extcall 25 .............................. return pSpriteList.count
  [167] jmp [295]
  [170] peek 0
  [172] pushsymb 1005 ........................... <#spriteList>
  [175] eq
  [176] jmpifz [191] ............................ (case) #spriteList:
  [179] pop 1
  [181] getprop 1367 ............................ <pSpriteList>
  [184] pusharglistnoret 1 ...................... <pSpriteList>
  [186] extcall 25 .............................. return pSpriteList
  [188] jmp [295]
  [191] peek 0
  [193] pushsymb 1378 ........................... <#spriteData>
  [196] eq
  [197] jmpifz [212] ............................ (case) #spriteData:
  [200] pop 1
  [202] getprop 1368 ............................ <pSpriteData>
  [205] pusharglistnoret 1 ...................... <pSpriteData>
  [207] extcall 25 .............................. return pSpriteData
  [209] jmp [295]
  [212] peek 0
  [214] pushsymb 880 ............................ <#visible>
  [217] eq
  [218] jmpifz [233] ............................ (case) #visible:
  [221] pop 1
  [223] getprop 1366 ............................ <pVisible>
  [226] pusharglistnoret 1 ...................... <pVisible>
  [228] extcall 25 .............................. return pVisible
  [230] jmp [295]
  [233] peek 0
  [235] pushsymb 1013 ........................... <#title>
  [238] eq
  [239] jmpifz [254] ............................ (case) #title:
  [242] pop 1
  [244] getprop 1363 ............................ <pTitle>
  [247] pusharglistnoret 1 ...................... <pTitle>
  [249] extcall 25 .............................. return pTitle
  [251] jmp [295]
  [254] peek 0
  [256] pushsymb 34 ............................. <#id>
  [258] eq
  [259] jmpifz [277] ............................ (case) #id:
  [262] pop 1
  [264] getparam 0 .............................. <me>
  [266] pusharglist 1 ........................... <me>
  [268] objcall 3 ............................... <me.getID()>
  [270] pusharglistnoret 1 ...................... <me.getID()>
  [272] extcall 25 .............................. return me.getID()
  [274] jmp [295]
  [277] peek 0
  [279] pushsymb 1379 ........................... <#swapAnims>
  [282] eq
  [283] jmpifz [295] ............................ (case) #swapAnims:
  [286] pop 1
  [288] getprop 1373 ............................ <pSwapAnimList>
  [291] pusharglistnoret 1 ...................... <pSwapAnimList>
  [293] extcall 25 .............................. return pSwapAnimList
  [295] pop 1 ................................... end case
  [297] pushzero ................................ <0>
  [298] pusharglistnoret 1 ...................... <0>
  [300] extcall 25 .............................. return 0
  [302] ret
end

on setProperty me, tProp, tValue
  [  0] getparam 1 .............................. <tProp>
  [  2] peek 0 .................................. case tProp of
  [  4] pushsymb 973 ............................ <#layout>
  [  7] eq
  [  8] jmpifz [ 29] ............................ (case) #layout:
  [ 11] pop 1
  [ 13] getparam 0 .............................. <me>
  [ 15] getparam 2 .............................. <tValue>
  [ 17] pusharglist 2 ........................... <me, tValue>
  [ 19] objcall 539 ............................. <me.open(tValue)>
  [ 22] pusharglistnoret 1 ...................... <me.open(tValue)>
  [ 24] extcall 25 .............................. return me.open(tValue)
  [ 26] jmp [203]
  [ 29] peek 0
  [ 31] pushsymb 540 ............................ <#locX>
  [ 34] eq
  [ 35] jmpifz [ 56] ............................ (case) #locX:
  [ 38] pop 1
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 2 .............................. <tValue>
  [ 44] pusharglist 2 ........................... <me, tValue>
  [ 46] objcall 1358 ............................ <me.moveX(tValue)>
  [ 49] pusharglistnoret 1 ...................... <me.moveX(tValue)>
  [ 51] extcall 25 .............................. return me.moveX(tValue)
  [ 53] jmp [203]
  [ 56] peek 0
  [ 58] pushsymb 541 ............................ <#locY>
  [ 61] eq
  [ 62] jmpifz [ 83] ............................ (case) #locY:
  [ 65] pop 1
  [ 67] getparam 0 .............................. <me>
  [ 69] getparam 2 .............................. <tValue>
  [ 71] pusharglist 2 ........................... <me, tValue>
  [ 73] objcall 1359 ............................ <me.moveY(tValue)>
  [ 76] pusharglistnoret 1 ...................... <me.moveY(tValue)>
  [ 78] extcall 25 .............................. return me.moveY(tValue)
  [ 80] jmp [203]
  [ 83] peek 0
  [ 85] pushsymb 883 ............................ <#locZ>
  [ 88] eq
  [ 89] jmpifz [110] ............................ (case) #locZ:
  [ 92] pop 1
  [ 94] getparam 0 .............................. <me>
  [ 96] getparam 2 .............................. <tValue>
  [ 98] pusharglist 2 ........................... <me, tValue>
  [100] objcall 1345 ............................ <me.moveZ(tValue)>
  [103] pusharglistnoret 1 ...................... <me.moveZ(tValue)>
  [105] extcall 25 .............................. return me.moveZ(tValue)
  [107] jmp [203]
  [110] peek 0
  [112] pushsymb 974 ............................ <#boundary>
  [115] eq
  [116] jmpifz [135] ............................ (case) #boundary:
  [119] getparam 2 .............................. <tValue>
  [121] setprop 969 ............................. pBoundary = tValue
  [124] pop 1
  [126] pushint8 1 .............................. <1>
  [128] pusharglistnoret 1 ...................... <1>
  [130] extcall 25 .............................. return 1
  [132] jmp [203]
  [135] peek 0
  [137] pushsymb 880 ............................ <#visible>
  [140] eq
  [141] jmpifz [181] ............................ (case) #visible:
  [144] getparam 2 .............................. <tValue>
  [146] jmpifz [165] ............................ if tValue then / else
  [149] pop 1
  [151] getparam 0 .............................. <me>
  [153] pusharglist 1 ........................... <me>
  [155] objcall 980 ............................. <me.show()>
  [158] pusharglistnoret 1 ...................... <me.show()>
  [160] extcall 25 .............................. return me.show()
  [162] jmp [178]
  [165] pop 1
  [167] getparam 0 .............................. <me>
  [169] pusharglist 1 ........................... <me>
  [171] objcall 979 ............................. <me.hide()>
  [174] pusharglistnoret 1 ...................... <me.hide()>
  [176] extcall 25 .............................. return me.hide()
  [178] jmp [203]
  [181] peek 0
  [183] pushsymb 1013 ........................... <#title>
  [186] eq
  [187] jmpifz [203] ............................ (case) #title:
  [190] getparam 2 .............................. <tValue>
  [192] setprop 1363 ............................ pTitle = tValue
  [195] pop 1
  [197] pushint8 1 .............................. <1>
  [199] pusharglistnoret 1 ...................... <1>
  [201] extcall 25 .............................. return 1
  [203] pop 1 ................................... end case
  [205] pushzero ................................ <0>
  [206] pusharglistnoret 1 ...................... <0>
  [208] extcall 25 .............................. return 0
  [210] ret
end

on getWrappedParts me, tWrapTypes
  [  0] getparam 1 .............................. <tWrapTypes>
  [  2] pusharglist 1 ........................... <tWrapTypes>
  [  4] extcall 20 .............................. <voidp(tWrapTypes)>
  [  6] getparam 1 .............................. <tWrapTypes>
  [  8] pusharglist 1 ........................... <tWrapTypes>
  [ 10] extcall 490 ............................. <ilk(tWrapTypes)>
  [ 13] pushsymb 491 ............................ <#list>
  [ 16] nteq .................................... <ilk(tWrapTypes) <> #list>
  [ 17] or ...................................... <voidp(tWrapTypes) or (ilk(tWrapTypes) <> #list)>
  [ 18] jmpifz [ 29] ............................ if voidp(tWrapTypes) or (ilk(tWrapTypes) <> #list) then
  [ 21] pushsymb 1380 ........................... <#all>
  [ 24] pusharglist 1 ........................... <[#all]>
  [ 26] pushlist ................................ <[#all]>
  [ 27] setparam 1 .............................. tWrapTypes = [#all]
  [ 29] getparam 1 .............................. <tWrapTypes>
  [ 31] pushsymb 1380 ........................... <#all>
  [ 34] pusharglist 2 ........................... <tWrapTypes, #all>
  [ 36] objcall 519 ............................. <tWrapTypes.getPos(#all)>
  [ 39] pushzero ................................ <0>
  [ 40] gt ...................................... <tWrapTypes.getPos(#all) > 0>
  [ 41] jmpifz [ 51] ............................ if tWrapTypes.getPos(#all) > 0 then
  [ 44] getprop 1372 ............................ <pWrappedParts>
  [ 47] pusharglistnoret 1 ...................... <pWrappedParts>
  [ 49] extcall 25 .............................. return pWrappedParts
  [ 51] pusharglist 0 ........................... <[:]>
  [ 53] pushproplist ............................ <[:]>
  [ 54] setlocal 0 .............................. tWrappedParts = [:]
  [ 56] getprop 1372 ............................ <pWrappedParts>
  [ 59] peek 0
  [ 61] pusharglist 1
  [ 63] extcall 22
  [ 65] pushint8 1
  [ 67] peek 0
  [ 69] peek 2
  [ 71] lteq
  [ 72] jmpifz [129] ............................ repeat with tWrap in pWrappedParts
  [ 75] peek 2
  [ 77] peek 1
  [ 79] pusharglist 2
  [ 81] extcall 54
  [ 83] setlocal 1
  [ 85] getparam 1 .............................. <tWrapTypes>
  [ 87] getlocal 1 .............................. <tWrap>
  [ 89] pushsymb 456 ............................ <#type>
  [ 92] pusharglist 2 ........................... <tWrap, #type>
  [ 94] objcall 444 ............................. <tWrap.getProperty(#type)>
  [ 97] pusharglist 2 ........................... <tWrapTypes, tWrap.getProperty(#type)>
  [ 99] objcall 519 ............................. <tWrapTypes.getPos(tWrap.getProperty(#type))>
  [102] pushzero ................................ <0>
  [103] gt ...................................... <tWrapTypes.getPos(tWrap.getProperty(#type)) > 0>
  [104] jmpifz [124] ............................ if tWrapTypes.getPos(tWrap.getProperty(#type)) > 0 then
  [107] getlocal 0 .............................. <tWrappedParts>
  [109] getlocal 1 .............................. <tWrap>
  [111] pushsymb 34 ............................. <#id>
  [113] pusharglist 2 ........................... <tWrap, #id>
  [115] objcall 444 ............................. <tWrap.getProperty(#id)>
  [118] getlocal 1 .............................. <tWrap>
  [120] pusharglistnoret 3 ...................... <tWrappedParts, tWrap.getProperty(#id), tWrap>
  [122] objcall 24 .............................. tWrappedParts[tWrap.getProperty(#id)] = tWrap
  [124] pushint8 1
  [126] add
  [127] endrepeat [ 67]
  [129] pop 3
  [131] getlocal 0 .............................. <tWrappedParts>
  [133] pusharglistnoret 1 ...................... <tWrappedParts>
  [135] extcall 25 .............................. return tWrappedParts
  [137] ret
end

on activateWrap me, tWrapper
  [  0] getparam 1 .............................. <tWrapper>
  [  2] pushsymb 36 ............................. <#sprite>
  [  4] pusharglist 2 ........................... <tWrapper, #sprite>
  [  6] objcall 444 ............................. <tWrapper.getProperty(#sprite)>
  [  9] setlocal 0 .............................. tSpr = tWrapper.getProperty(#sprite)
  [ 11] pusharglist 0 ........................... <>
  [ 13] extcall 231 ............................. <getSpriteManager()>
  [ 15] getlocal 0 .............................. <tSpr>
  [ 17] getobjprop 37 ........................... <tSpr.spriteNum>
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 1 ........................... <me>
  [ 23] objcall 3 ............................... <me.getID()>
  [ 25] pusharglistnoret 3 ...................... <getSpriteManager(), tSpr.spriteNum, me.getID()>
  [ 27] objcall 234 ............................. getSpriteManager().setEventBroker(tSpr.spriteNum, me.getID())
  [ 29] ret
end

on getPartAtLocation me, tLocX, tLocY, tWrapperTypes
  [  0] getparam 3 .............................. <tWrapperTypes>
  [  2] pusharglist 1 ........................... <tWrapperTypes>
  [  4] extcall 490 ............................. <ilk(tWrapperTypes)>
  [  7] pushsymb 491 ............................ <#list>
  [ 10] eq ...................................... <ilk(tWrapperTypes) = #list>
  [ 11] not ..................................... <not (ilk(tWrapperTypes) = #list)>
  [ 12] jmpifz [ 22] ............................ if not (ilk(tWrapperTypes) = #list) then
  [ 15] getparam 3 .............................. <tWrapperTypes>
  [ 17] pusharglist 1 ........................... <[tWrapperTypes]>
  [ 19] pushlist ................................ <[tWrapperTypes]>
  [ 20] setparam 3 .............................. tWrapperTypes = [tWrapperTypes]
  [ 22] getprop 1372 ............................ <pWrappedParts>
  [ 25] peek 0
  [ 27] pusharglist 1
  [ 29] extcall 22
  [ 31] pushint8 1
  [ 33] peek 0
  [ 35] peek 2
  [ 37] lteq
  [ 38] jmpifz [109] ............................ repeat with tWrap in pWrappedParts
  [ 41] peek 2
  [ 43] peek 1
  [ 45] pusharglist 2
  [ 47] extcall 54
  [ 49] setlocal 0
  [ 51] getparam 3 .............................. <tWrapperTypes>
  [ 53] getlocal 0 .............................. <tWrap>
  [ 55] pushsymb 456 ............................ <#type>
  [ 58] pusharglist 2 ........................... <tWrap, #type>
  [ 60] objcall 444 ............................. <tWrap.getProperty(#type)>
  [ 63] pusharglist 2 ........................... <tWrapperTypes, tWrap.getProperty(#type)>
  [ 65] objcall 643 ............................. <tWrapperTypes.getOne(tWrap.getProperty(#type))>
  [ 68] jmpifz [104] ............................ if tWrapperTypes.getOne(tWrap.getProperty(#type)) then
  [ 71] getlocal 0 .............................. <tWrap>
  [ 73] getparam 1 .............................. <tLocX>
  [ 75] getparam 2 .............................. <tLocY>
  [ 77] pusharglist 3 ........................... <tWrap, tLocX, tLocY>
  [ 79] objcall 1384 ............................ <tWrap.getPartAt(tLocX, tLocY)>
  [ 82] setlocal 1 .............................. tPart = tWrap.getPartAt(tLocX, tLocY)
  [ 84] getlocal 1 .............................. <tPart>
  [ 86] pusharglist 1 ........................... <tPart>
  [ 88] extcall 490 ............................. <ilk(tPart)>
  [ 91] pushsymb 809 ............................ <#propList>
  [ 94] eq ...................................... <ilk(tPart) = #propList>
  [ 95] jmpifz [104] ............................ if ilk(tPart) = #propList then
  [ 98] getlocal 1 .............................. <tPart>
  [100] pusharglistnoret 1 ...................... <tPart>
  [102] extcall 25 .............................. return tPart
  [104] pushint8 1
  [106] add
  [107] endrepeat [ 33]
  [109] pop 3
  [111] pushzero ................................ <0>
  [112] pusharglistnoret 1 ...................... <0>
  [114] extcall 25 .............................. return 0
  [116] ret
end

on createWrapper me, tWrapID
  [  0] getprop 1372 ............................ <pWrappedParts>
  [  3] getparam 1 .............................. <tWrapID>
  [  5] pusharglist 2 ........................... <pWrappedParts, tWrapID>
  [  7] extcall 31 .............................. <getaProp(pWrappedParts, tWrapID)>
  [  9] pusharglist 1 ........................... <getaProp(pWrappedParts, tWrapID)>
  [ 11] extcall 20 .............................. <voidp(getaProp(pWrappedParts, tWrapID))>
  [ 13] not ..................................... <not voidp(getaProp(pWrappedParts, tWrapID))>
  [ 14] jmpifz [ 35] ............................ if not voidp(getaProp(pWrappedParts, tWrapID)) then
  [ 17] getparam 0 .............................. <me>
  [ 19] pushcons 2 .............................. <"Duplicate wrap id:">
  [ 21] getparam 1 .............................. <tWrapID>
  [ 23] joinpadstr .............................. <"Duplicate wrap id:" && tWrapID>
  [ 24] pushsymb 1356 ........................... <#createWrapper>
  [ 27] pusharglist 3 ........................... <me, "Duplicate wrap id:" && tWrapID, #createWrapper>
  [ 29] extcall 39 .............................. <error(me, "Duplicate wrap id:" && tWrapID, #createWrapper)>
  [ 31] pusharglistnoret 1 ...................... <error(me, "Duplicate wrap id:" && tWrapID, #createWrapper)>
  [ 33] extcall 25 .............................. return error(me, "Duplicate wrap id:" && tWrapID, #createWrapper)
  [ 35] pushsymb 657 ............................ <#random>
  [ 38] pushcons 3 .............................. <"visualizer.wrapper.class">
  [ 40] pusharglist 1 ........................... <"visualizer.wrapper.class">
  [ 42] extcall 155 ............................. <getClassVariable("visualizer.wrapper.class")>
  [ 44] pusharglist 2 ........................... <#random, getClassVariable("visualizer.wrapper.class")>
  [ 46] extcall 94 .............................. <createObject(#random, getClassVariable("visualizer.wrapper.class"))>
  [ 48] setlocal 0 .............................. tWrap = createObject(#random, getClassVariable("visualizer.wrapper.class"))
  [ 50] getlocal 0 .............................. <tWrap>
  [ 52] pushsymb 1386 ........................... <#owner>
  [ 55] getparam 0 .............................. <me>
  [ 57] pusharglist 1 ........................... <me>
  [ 59] objcall 3 ............................... <me.getID()>
  [ 61] pusharglistnoret 3 ...................... <tWrap, #owner, me.getID()>
  [ 63] objcall 711 ............................. tWrap.setProperty(#owner, me.getID())
  [ 66] getprop 1372 ............................ <pWrappedParts>
  [ 69] getparam 1 .............................. <tWrapID>
  [ 71] getlocal 0 .............................. <tWrap>
  [ 73] pusharglistnoret 3 ...................... <pWrappedParts, tWrapID, tWrap>
  [ 75] objcall 24 .............................. pWrappedParts[tWrapID] = tWrap
  [ 77] pusharglist 0 ........................... <>
  [ 79] extcall 231 ............................. <getSpriteManager()>
  [ 81] getparam 0 .............................. <me>
  [ 83] pusharglist 1 ........................... <me>
  [ 85] objcall 3 ............................... <me.getID()>
  [ 87] pusharglist 2 ........................... <getSpriteManager(), me.getID()>
  [ 89] objcall 232 ............................. <getSpriteManager().reserveSprite(me.getID())>
  [ 91] pusharglist 1 ........................... <getSpriteManager().reserveSprite(me.getID())>
  [ 93] extcall 36 .............................. <sprite(getSpriteManager().reserveSprite(me.getID()))>
  [ 95] setlocal 1 .............................. tSpr = sprite(getSpriteManager().reserveSprite(me.getID()))
  [ 97] getlocal 0 .............................. <tWrap>
  [ 99] pushsymb 36 ............................. <#sprite>
  [101] getlocal 1 .............................. <tSpr>
  [103] pusharglistnoret 3 ...................... <tWrap, #sprite, tSpr>
  [105] objcall 711 ............................. tWrap.setProperty(#sprite, tSpr)
  [108] getprop 1367 ............................ <pSpriteList>
  [111] getlocal 1 .............................. <tSpr>
  [113] pusharglistnoret 2 ...................... <pSpriteList, tSpr>
  [115] objcall 666 ............................. pSpriteList.append(tSpr)
  [118] getprop 1368 ............................ <pSpriteData>
  [121] pusharglist 0 ........................... <[:]>
  [123] pushproplist ............................ <[:]>
  [124] pusharglistnoret 2 ...................... <pSpriteData, [:]>
  [126] objcall 666 ............................. pSpriteData.append([:])
  [129] getlocal 0 .............................. <tWrap>
  [131] pusharglistnoret 1 ...................... <tWrap>
  [133] extcall 25 .............................. return tWrap
  [135] ret
end

on getWallPartUnderRect me, tRect, tSlope
  [  0] getprop 1372 ............................ <pWrappedParts>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 22
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 96] ............................ repeat with tWrap in pWrappedParts
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 54
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <tWrap>
  [ 31] pushsymb 456 ............................ <#type>
  [ 34] pusharglist 2 ........................... <tWrap, #type>
  [ 36] objcall 444 ............................. <tWrap.getProperty(#type)>
  [ 39] setlocal 1 .............................. tWrapType = tWrap.getProperty(#type)
  [ 41] getlocal 1 .............................. <tWrapType>
  [ 43] pushsymb 1388 ........................... <#wallleft>
  [ 46] eq ...................................... <tWrapType = #wallleft>
  [ 47] getlocal 1 .............................. <tWrapType>
  [ 49] pushsymb 1389 ........................... <#wallright>
  [ 52] eq ...................................... <tWrapType = #wallright>
  [ 53] or ...................................... <(tWrapType = #wallleft) or (tWrapType = #wallright)>
  [ 54] jmpifz [ 91] ............................ if (tWrapType = #wallleft) or (tWrapType = #wallright) then
  [ 57] getlocal 0 .............................. <tWrap>
  [ 59] getparam 1 .............................. <tRect>
  [ 61] getparam 2 .............................. <tSlope>
  [ 63] pusharglist 3 ........................... <tWrap, tRect, tSlope>
  [ 65] objcall 1390 ............................ <tWrap.fitRectToWall(tRect, tSlope)>
  [ 68] setlocal 2 .............................. tPart = tWrap.fitRectToWall(tRect, tSlope)
  [ 70] getlocal 2 .............................. <tPart>
  [ 72] pushsymb 1391 ........................... <#insideWall>
  [ 75] pusharglist 2 ........................... <tPart, #insideWall>
  [ 77] objcall 54 .............................. <tPart[#insideWall]>
  [ 79] pushint8 1 .............................. <1>
  [ 81] eq ...................................... <tPart[#insideWall] = 1>
  [ 82] jmpifz [ 91] ............................ if tPart[#insideWall] = 1 then
  [ 85] getlocal 2 .............................. <tPart>
  [ 87] pusharglistnoret 1 ...................... <tPart>
  [ 89] extcall 25 .............................. return tPart
  [ 91] pushint8 1
  [ 93] add
  [ 94] endrepeat [ 11]
  [ 96] pop 3
  [ 98] pushsymb 1391 ........................... <#insideWall>
  [101] pushzero ................................ <0>
  [102] pusharglist 2 ........................... <[#insideWall: 0]>
  [104] pushproplist ............................ <[#insideWall: 0]>
  [105] pusharglistnoret 1 ...................... <[#insideWall: 0]>
  [107] extcall 25 .............................. return [#insideWall: 0]
  [109] ret
end

on moveX me, tOffX
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1367 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 51] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1367 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1367 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 506 .......................... <pSpriteList[i].locH>
  [ 36] getparam 1 .............................. <tOffX>
  [ 38] add ..................................... <pSpriteList[i].locH + tOffX>
  [ 39] setobjprop 506 .......................... pSpriteList[i].locH = pSpriteList[i].locH + tOffX
  [ 42] pushint8 1
  [ 44] getlocal 0
  [ 46] add
  [ 47] setlocal 0
  [ 49] endrepeat [  4]
  [ 51] ret
end

on moveY me, tOffY
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1367 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 51] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1367 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1367 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 507 .......................... <pSpriteList[i].locV>
  [ 36] getparam 1 .............................. <tOffY>
  [ 38] add ..................................... <pSpriteList[i].locV + tOffY>
  [ 39] setobjprop 507 .......................... pSpriteList[i].locV = pSpriteList[i].locV + tOffY
  [ 42] pushint8 1
  [ 44] getlocal 0
  [ 46] add
  [ 47] setlocal 0
  [ 49] endrepeat [  4]
  [ 51] ret
end

on moveXY me, tOffX, tOffY
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1367 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 56] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1367 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1367 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 511 .......................... <pSpriteList[i].loc>
  [ 36] getparam 1 .............................. <tOffX>
  [ 38] getparam 2 .............................. <tOffY>
  [ 40] pusharglist 2 ........................... <[tOffX, tOffY]>
  [ 42] pushlist ................................ <[tOffX, tOffY]>
  [ 43] add ..................................... <pSpriteList[i].loc + [tOffX, tOffY]>
  [ 44] setobjprop 511 .......................... pSpriteList[i].loc = pSpriteList[i].loc + [tOffX, tOffY]
  [ 47] pushint8 1
  [ 49] getlocal 0
  [ 51] add
  [ 52] setlocal 0
  [ 54] endrepeat [  4]
  [ 56] ret
end

on update me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <>
  [  4] thebuiltin 1394 ......................... <the mouseH>
  [  7] getprop 1371 ............................ <pDragOffset>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglist 2 ........................... <pDragOffset, 1>
  [ 14] objcall 54 .............................. <pDragOffset[1]>
  [ 16] sub ..................................... <the mouseH - pDragOffset[1]>
  [ 17] pusharglist 0 ........................... <>
  [ 19] thebuiltin 552 .......................... <the mouseV>
  [ 22] getprop 1371 ............................ <pDragOffset>
  [ 25] pushint8 2 .............................. <2>
  [ 27] pusharglist 2 ........................... <pDragOffset, 2>
  [ 29] objcall 54 .............................. <pDragOffset[2]>
  [ 31] sub ..................................... <the mouseV - pDragOffset[2]>
  [ 32] pusharglistnoret 3 ...................... <me, the mouseH - pDragOffset[1], the mouseV - pDragOffset[2]>
  [ 34] objcall 1009 ............................ me.moveTo(the mouseH - pDragOffset[1], the mouseV - pDragOffset[2])
  [ 37] ret
end

on Refresh me
  [  0] pushint32 100000 ........................ <100000>
  [  5] pushint32 100000 ........................ <100000>
  [ 10] pushint32 100000 ........................ <100000>
  [ 15] inv ..................................... <-100000>
  [ 16] pushint32 100000 ........................ <100000>
  [ 21] inv ..................................... <-100000>
  [ 22] pusharglist 4 ........................... <100000, 100000, -100000, -100000>
  [ 24] extcall 557 ............................. <rect(100000, 100000, -100000, -100000)>
  [ 27] setlocal 0 .............................. tRect = rect(100000, 100000, -100000, -100000)
  [ 29] getprop 1372 ............................ <pWrappedParts>
  [ 32] peek 0
  [ 34] pusharglist 1
  [ 36] extcall 22
  [ 38] pushint8 1
  [ 40] peek 0
  [ 42] peek 2
  [ 44] lteq
  [ 45] jmpifz [ 70] ............................ repeat with tWrapper in pWrappedParts
  [ 48] peek 2
  [ 50] peek 1
  [ 52] pusharglist 2
  [ 54] extcall 54
  [ 56] setlocal 1
  [ 58] getlocal 1 .............................. <tWrapper>
  [ 60] pusharglistnoret 1 ...................... <tWrapper>
  [ 62] objcall 1395 ............................ tWrapper.updateWrap()
  [ 65] pushint8 1
  [ 67] add
  [ 68] endrepeat [ 40]
  [ 70] pop 3
  [ 72] getprop 1367 ............................ <pSpriteList>
  [ 75] peek 0
  [ 77] pusharglist 1
  [ 79] extcall 22
  [ 81] pushint8 1
  [ 83] peek 0
  [ 85] peek 2
  [ 87] lteq
  [ 88] jmpifz [246] ............................ repeat with tSpr in pSpriteList
  [ 91] peek 2
  [ 93] peek 1
  [ 95] pusharglist 2
  [ 97] extcall 54
  [ 99] setlocal 2
  [101] getlocal 2 .............................. <tSpr>
  [103] getobjprop 506 .......................... <tSpr.locH>
  [106] getlocal 0 .............................. <tRect>
  [108] pushint8 1 .............................. <1>
  [110] pusharglist 2 ........................... <tRect, 1>
  [112] objcall 54 .............................. <tRect[1]>
  [114] lt ...................................... <tSpr.locH < tRect[1]>
  [115] jmpifz [131] ............................ if tSpr.locH < tRect[1] then
  [118] getlocal 0 .............................. <tRect>
  [120] pushint8 1 .............................. <1>
  [122] getlocal 2 .............................. <tSpr>
  [124] getobjprop 506 .......................... <tSpr.locH>
  [127] pusharglistnoret 3 ...................... <tRect, 1, tSpr.locH>
  [129] objcall 24 .............................. tRect[1] = tSpr.locH
  [131] getlocal 2 .............................. <tSpr>
  [133] getobjprop 507 .......................... <tSpr.locV>
  [136] getlocal 0 .............................. <tRect>
  [138] pushint8 2 .............................. <2>
  [140] pusharglist 2 ........................... <tRect, 2>
  [142] objcall 54 .............................. <tRect[2]>
  [144] lt ...................................... <tSpr.locV < tRect[2]>
  [145] jmpifz [161] ............................ if tSpr.locV < tRect[2] then
  [148] getlocal 0 .............................. <tRect>
  [150] pushint8 2 .............................. <2>
  [152] getlocal 2 .............................. <tSpr>
  [154] getobjprop 507 .......................... <tSpr.locV>
  [157] pusharglistnoret 3 ...................... <tRect, 2, tSpr.locV>
  [159] objcall 24 .............................. tRect[2] = tSpr.locV
  [161] getlocal 2 .............................. <tSpr>
  [163] getobjprop 506 .......................... <tSpr.locH>
  [166] getlocal 2 .............................. <tSpr>
  [168] getobjprop 42 ........................... <tSpr.width>
  [170] add ..................................... <tSpr.locH + tSpr.width>
  [171] getlocal 0 .............................. <tRect>
  [173] pushint8 3 .............................. <3>
  [175] pusharglist 2 ........................... <tRect, 3>
  [177] objcall 54 .............................. <tRect[3]>
  [179] gt ...................................... <(tSpr.locH + tSpr.width) > tRect[3]>
  [180] jmpifz [201] ............................ if (tSpr.locH + tSpr.width) > tRect[3] then
  [183] getlocal 0 .............................. <tRect>
  [185] pushint8 3 .............................. <3>
  [187] getlocal 2 .............................. <tSpr>
  [189] getobjprop 506 .......................... <tSpr.locH>
  [192] getlocal 2 .............................. <tSpr>
  [194] getobjprop 42 ........................... <tSpr.width>
  [196] add ..................................... <tSpr.locH + tSpr.width>
  [197] pusharglistnoret 3 ...................... <tRect, 3, tSpr.locH + tSpr.width>
  [199] objcall 24 .............................. tRect[3] = tSpr.locH + tSpr.width
  [201] getlocal 2 .............................. <tSpr>
  [203] getobjprop 507 .......................... <tSpr.locV>
  [206] getlocal 2 .............................. <tSpr>
  [208] getobjprop 43 ........................... <tSpr.height>
  [210] add ..................................... <tSpr.locV + tSpr.height>
  [211] getlocal 0 .............................. <tRect>
  [213] pushint8 4 .............................. <4>
  [215] pusharglist 2 ........................... <tRect, 4>
  [217] objcall 54 .............................. <tRect[4]>
  [219] gt ...................................... <(tSpr.locV + tSpr.height) > tRect[4]>
  [220] jmpifz [241] ............................ if (tSpr.locV + tSpr.height) > tRect[4] then
  [223] getlocal 0 .............................. <tRect>
  [225] pushint8 4 .............................. <4>
  [227] getlocal 2 .............................. <tSpr>
  [229] getobjprop 507 .......................... <tSpr.locV>
  [232] getlocal 2 .............................. <tSpr>
  [234] getobjprop 43 ........................... <tSpr.height>
  [236] add ..................................... <tSpr.locV + tSpr.height>
  [237] pusharglistnoret 3 ...................... <tRect, 4, tSpr.locV + tSpr.height>
  [239] objcall 24 .............................. tRect[4] = tSpr.locV + tSpr.height
  [241] pushint8 1
  [243] add
  [244] endrepeat [ 83]
  [246] pop 3
  [248] getlocal 0 .............................. <tRect>
  [250] pushint8 1 .............................. <1>
  [252] pusharglist 2 ........................... <tRect, 1>
  [254] objcall 54 .............................. <tRect[1]>
  [256] setprop 467 ............................. pLocX = tRect[1]
  [259] getlocal 0 .............................. <tRect>
  [261] pushint8 2 .............................. <2>
  [263] pusharglist 2 ........................... <tRect, 2>
  [265] objcall 54 .............................. <tRect[2]>
  [267] setprop 469 ............................. pLocY = tRect[2]
  [270] getlocal 0 .............................. <tRect>
  [272] getobjprop 42 ........................... <tRect.width>
  [274] setprop 499 ............................. pwidth = tRect.width
  [277] getlocal 0 .............................. <tRect>
  [279] getobjprop 43 ........................... <tRect.height>
  [281] setprop 504 ............................. pheight = tRect.height
  [284] getprop 1368 ............................ <pSpriteData>
  [287] getobjprop 22 ........................... <pSpriteData.count>
  [289] pushzero ................................ <0>
  [290] gt ...................................... <pSpriteData.count > 0>
  [291] jmpifz [382] ............................ if pSpriteData.count > 0 then
  [294] pushint8 1 .............................. <1>
  [296] setlocal 3
  [298] getlocal 3
  [300] getprop 1367 ............................ <pSpriteList>
  [303] getobjprop 22 ........................... <pSpriteList.count>
  [305] lteq
  [306] jmpifz [382] ............................ repeat with i = 1 to pSpriteList.count
  [309] getprop 1368 ............................ <pSpriteData>
  [312] getlocal 3 .............................. <i>
  [314] pusharglist 2 ........................... <pSpriteData, i>
  [316] objcall 54 .............................. <pSpriteData[i]>
  [318] pusharglist 1 ........................... <pSpriteData[i]>
  [320] extcall 53 .............................. <listp(pSpriteData[i])>
  [322] jmpifz [373] ............................ if listp(pSpriteData[i]) then
  [325] getprop 1368 ............................ <pSpriteData>
  [328] getlocal 3 .............................. <i>
  [330] pusharglist 2 ........................... <pSpriteData, i>
  [332] objcall 54 .............................. <pSpriteData[i]>
  [334] pushsymb 511 ............................ <#loc>
  [337] getprop 1367 ............................ <pSpriteList>
  [340] getlocal 3 .............................. <i>
  [342] pusharglist 2 ........................... <pSpriteList, i>
  [344] objcall 54 .............................. <pSpriteList[i]>
  [346] getobjprop 511 .......................... <pSpriteList[i].loc>
  [349] getlocal 0 .............................. <tRect>
  [351] pushint8 1 .............................. <1>
  [353] pusharglist 2 ........................... <tRect, 1>
  [355] objcall 54 .............................. <tRect[1]>
  [357] getlocal 0 .............................. <tRect>
  [359] pushint8 2 .............................. <2>
  [361] pusharglist 2 ........................... <tRect, 2>
  [363] objcall 54 .............................. <tRect[2]>
  [365] pusharglist 2 ........................... <[tRect[1], tRect[2]]>
  [367] pushlist ................................ <[tRect[1], tRect[2]]>
  [368] sub ..................................... <pSpriteList[i].loc - [tRect[1], tRect[2]]>
  [369] pusharglistnoret 3 ...................... <pSpriteData[i], #loc, pSpriteList[i].loc - [tRect[1], tRect[2]]>
  [371] objcall 24 .............................. pSpriteData[i][#loc] = pSpriteList[i].loc - [tRect[1], tRect[2]]
  [373] pushint8 1
  [375] getlocal 3
  [377] add
  [378] setlocal 3
  [380] endrepeat [298]
  [382] pushint8 1 .............................. <1>
  [384] pusharglistnoret 1 ...................... <1>
  [386] extcall 25 .............................. return 1
  [388] ret
end

on buildVisual me, tLayout
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 93 .............................. <getObjectManager()>
  [  4] pushsymb 459 ............................ <#layout_parser>
  [  7] pusharglist 2 ........................... <getObjectManager(), #layout_parser>
  [  9] objcall 90 .............................. <getObjectManager().get(#layout_parser)>
  [ 11] getparam 1 .............................. <tLayout>
  [ 13] pusharglist 2 ........................... <getObjectManager().get(#layout_parser), tLayout>
  [ 15] objcall 460 ............................. <getObjectManager().get(#layout_parser).parse(tLayout)>
  [ 18] setparam 1 .............................. tLayout = getObjectManager().get(#layout_parser).parse(tLayout)
  [ 20] getparam 1 .............................. <tLayout>
  [ 22] pusharglist 1 ........................... <tLayout>
  [ 24] extcall 53 .............................. <listp(tLayout)>
  [ 26] not ..................................... <not listp(tLayout)>
  [ 27] jmpifz [ 48] ............................ if not listp(tLayout) then
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 4 .............................. <"Invalid visualizer definition:">
  [ 34] getparam 1 .............................. <tLayout>
  [ 36] joinpadstr .............................. <"Invalid visualizer definition:" && tLayout>
  [ 37] pushsymb 1362 ........................... <#buildVisual>
  [ 40] pusharglist 3 ........................... <me, "Invalid visualizer definition:" && tLayout, #buildVisual>
  [ 42] extcall 39 .............................. <error(me, "Invalid visualizer definition:" && tLayout, #buildVisual)>
  [ 44] pusharglistnoret 1 ...................... <error(me, "Invalid visualizer definition:" && tLayout, #buildVisual)>
  [ 46] extcall 25 .............................. return error(me, "Invalid visualizer definition:" && tLayout, #buildVisual)
  [ 48] getparam 1 .............................. <tLayout>
  [ 50] pushsymb 557 ............................ <#rect>
  [ 53] pusharglist 2 ........................... <tLayout, #rect>
  [ 55] objcall 54 .............................. <tLayout[#rect]>
  [ 57] pusharglist 1 ........................... <tLayout[#rect]>
  [ 59] extcall 20 .............................. <voidp(tLayout[#rect])>
  [ 61] not ..................................... <not voidp(tLayout[#rect])>
  [ 62] jmpifz [137] ............................ if not voidp(tLayout[#rect]) then
  [ 65] getparam 1 .............................. <tLayout>
  [ 67] pushsymb 557 ............................ <#rect>
  [ 70] pusharglist 2 ........................... <tLayout, #rect>
  [ 72] objcall 54 .............................. <tLayout[#rect]>
  [ 74] getobjprop 22 ........................... <tLayout[#rect].count>
  [ 76] pushzero ................................ <0>
  [ 77] gt ...................................... <tLayout[#rect].count > 0>
  [ 78] jmpifz [137] ............................ if tLayout[#rect].count > 0 then
  [ 81] getprop 467 ............................. <pLocX>
  [ 84] getparam 1 .............................. <tLayout>
  [ 86] pushsymb 557 ............................ <#rect>
  [ 89] pusharglist 2 ........................... <tLayout, #rect>
  [ 91] objcall 54 .............................. <tLayout[#rect]>
  [ 93] pushint8 1 .............................. <1>
  [ 95] pusharglist 2 ........................... <tLayout[#rect], 1>
  [ 97] objcall 54 .............................. <tLayout[#rect][1]>
  [ 99] pushint8 1 .............................. <1>
  [101] pusharglist 2 ........................... <tLayout[#rect][1], 1>
  [103] objcall 54 .............................. <tLayout[#rect][1][1]>
  [105] add ..................................... <pLocX + tLayout[#rect][1][1]>
  [106] setprop 467 ............................. pLocX = pLocX + tLayout[#rect][1][1]
  [109] getprop 469 ............................. <pLocY>
  [112] getparam 1 .............................. <tLayout>
  [114] pushsymb 557 ............................ <#rect>
  [117] pusharglist 2 ........................... <tLayout, #rect>
  [119] objcall 54 .............................. <tLayout[#rect]>
  [121] pushint8 1 .............................. <1>
  [123] pusharglist 2 ........................... <tLayout[#rect], 1>
  [125] objcall 54 .............................. <tLayout[#rect][1]>
  [127] pushint8 2 .............................. <2>
  [129] pusharglist 2 ........................... <tLayout[#rect][1], 2>
  [131] objcall 54 .............................. <tLayout[#rect][1][2]>
  [133] add ..................................... <pLocY + tLayout[#rect][1][2]>
  [134] setprop 469 ............................. pLocY = pLocY + tLayout[#rect][1][2]
  [137] getparam 1 .............................. <tLayout>
  [139] pushsymb 998 ............................ <#elements>
  [142] pusharglist 2 ........................... <tLayout, #elements>
  [144] objcall 54 .............................. <tLayout[#elements]>
  [146] setparam 1 .............................. tLayout = tLayout[#elements]
  [148] pusharglist 0 ........................... <[]>
  [150] pushlist ................................ <[]>
  [151] setlocal 0 .............................. tSpriteList = []
  [153] pusharglist 0 ........................... <[:]>
  [155] pushproplist ............................ <[:]>
  [156] setlocal 1 .............................. tSpriteCollections = [:]
  [158] pushint8 1 .............................. <1>
  [160] setlocal 2
  [162] getlocal 2
  [164] getparam 1 .............................. <tLayout>
  [166] getobjprop 22 ........................... <tLayout.count>
  [168] lteq
  [169] jmpifz [1481] ........................... repeat with i = 1 to tLayout.count
  [172] pusharglist 0 ........................... <>
  [174] extcall 76 .............................. <getResourceManager()>
  [176] getparam 1 .............................. <tLayout>
  [178] getlocal 2 .............................. <i>
  [180] pusharglist 2 ........................... <tLayout, i>
  [182] objcall 54 .............................. <tLayout[i]>
  [184] pushsymb 41 ............................. <#member>
  [186] pusharglist 2 ........................... <tLayout[i], #member>
  [188] objcall 54 .............................. <tLayout[i][#member]>
  [190] pusharglist 2 ........................... <getResourceManager(), tLayout[i][#member]>
  [192] objcall 52 .............................. <getResourceManager().getmemnum(tLayout[i][#member])>
  [194] setlocal 3 .............................. tMemNum = getResourceManager().getmemnum(tLayout[i][#member])
  [196] getlocal 3 .............................. <tMemNum>
  [198] pushint8 1 .............................. <1>
  [200] lt ...................................... <tMemNum < 1>
  [201] jmpifz [246] ............................ if tMemNum < 1 then
  [204] getparam 0 .............................. <me>
  [206] pushcons 5 .............................. <"Member">
  [208] getparam 1 .............................. <tLayout>
  [210] getlocal 2 .............................. <i>
  [212] pusharglist 2 ........................... <tLayout, i>
  [214] objcall 54 .............................. <tLayout[i]>
  [216] pushsymb 41 ............................. <#member>
  [218] pusharglist 2 ........................... <tLayout[i], #member>
  [220] objcall 54 .............................. <tLayout[i][#member]>
  [222] joinpadstr .............................. <"Member" && tLayout[i][#member]>
  [223] pushcons 6 .............................. <"required by visualizer:">
  [225] joinpadstr .............................. <"Member" && tLayout[i][#member] && "required by visualizer:">
  [226] getparam 0 .............................. <me>
  [228] pusharglist 1 ........................... <me>
  [230] objcall 3 ............................... <me.getID()>
  [232] joinpadstr .............................. <"Member" && tLayout[i][#member] && "required by visualizer:" && me.getID()>
  [233] pushcons 7 .............................. <"not found!">
  [235] joinpadstr .............................. <"Member" && tLayout[i][#member] && "required by visualizer:" && me.getID() && "not found!">
  [236] pushsymb 1362 ........................... <#buildVisual>
  [239] pusharglistnoret 3 ...................... <me, "Member" && tLayout[i][#member] && "required by visualizer:" && me.getID() && "not found!", #buildVisual>
  [241] extcall 39 .............................. error(me, "Member" && tLayout[i][#member] && "required by visualizer:" && me.getID() && "not found!", #buildVisual)
  [243] jmp [1471] .............................. next repeat
  [246] getparam 1 .............................. <tLayout>
  [248] getlocal 2 .............................. <i>
  [250] pusharglist 2 ........................... <tLayout, i>
  [252] objcall 54 .............................. <tLayout[i]>
  [254] setlocal 4 .............................. tElem = tLayout[i]
  [256] getlocal 4 .............................. <tElem>
  [258] pushsymb 1396 ........................... <#wrapperID>
  [261] pusharglist 2 ........................... <tElem, #wrapperID>
  [263] objcall 54 .............................. <tElem[#wrapperID]>
  [265] pusharglist 1 ........................... <tElem[#wrapperID]>
  [267] extcall 20 .............................. <voidp(tElem[#wrapperID])>
  [269] not ..................................... <not voidp(tElem[#wrapperID])>
  [270] jmpifz [433] ............................ if not voidp(tElem[#wrapperID]) then / else
  [273] getlocal 4 .............................. <tElem>
  [275] pushsymb 1396 ........................... <#wrapperID>
  [278] pusharglist 2 ........................... <tElem, #wrapperID>
  [280] objcall 54 .............................. <tElem[#wrapperID]>
  [282] setlocal 5 .............................. tWrapID = tElem[#wrapperID]
  [284] getprop 1372 ............................ <pWrappedParts>
  [287] getlocal 5 .............................. <tWrapID>
  [289] pusharglist 2 ........................... <pWrappedParts, tWrapID>
  [291] objcall 54 .............................. <pWrappedParts[tWrapID]>
  [293] pusharglist 1 ........................... <pWrappedParts[tWrapID]>
  [295] extcall 20 .............................. <voidp(pWrappedParts[tWrapID])>
  [297] jmpifz [410] ............................ if voidp(pWrappedParts[tWrapID]) then / else
  [300] getparam 0 .............................. <me>
  [302] getlocal 5 .............................. <tWrapID>
  [304] pusharglist 2 ........................... <me, tWrapID>
  [306] objcall 1356 ............................ <me.createWrapper(tWrapID)>
  [309] setlocal 6 .............................. tPartWrapper = me.createWrapper(tWrapID)
  [311] pusharglist 0 ........................... <[:]>
  [313] pushproplist ............................ <[:]>
  [314] setlocal 7 .............................. tProps = [:]
  [316] getlocal 7 .............................. <tProps>
  [318] pushsymb 34 ............................. <#id>
  [320] getlocal 5 .............................. <tWrapID>
  [322] pusharglistnoret 3 ...................... <tProps, #id, tWrapID>
  [324] objcall 24 .............................. tProps[#id] = tWrapID
  [326] getlocal 7 .............................. <tProps>
  [328] pushsymb 1299 ........................... <#palette>
  [331] getlocal 4 .............................. <tElem>
  [333] pushsymb 1299 ........................... <#palette>
  [336] pusharglist 2 ........................... <tElem, #palette>
  [338] objcall 54 .............................. <tElem[#palette]>
  [340] pusharglistnoret 3 ...................... <tProps, #palette, tElem[#palette]>
  [342] objcall 24 .............................. tProps[#palette] = tElem[#palette]
  [344] getlocal 7 .............................. <tProps>
  [346] pushsymb 1397 ........................... <#offsetx>
  [349] getprop 467 ............................. <pLocX>
  [352] pusharglistnoret 3 ...................... <tProps, #offsetx, pLocX>
  [354] objcall 24 .............................. tProps[#offsetx] = pLocX
  [356] getlocal 7 .............................. <tProps>
  [358] pushsymb 1398 ........................... <#offsety>
  [361] getprop 469 ............................. <pLocY>
  [364] pusharglistnoret 3 ...................... <tProps, #offsety, pLocY>
  [366] objcall 24 .............................. tProps[#offsety] = pLocY
  [368] getlocal 7 .............................. <tProps>
  [370] pushsymb 883 ............................ <#locZ>
  [373] getprop 1365 ............................ <pLocZ>
  [376] pusharglistnoret 3 ...................... <tProps, #locZ, pLocZ>
  [378] objcall 24 .............................. tProps[#locZ] = pLocZ
  [380] getlocal 7 .............................. <tProps>
  [382] pushsymb 1399 ........................... <#typeDef>
  [385] getlocal 4 .............................. <tElem>
  [387] pushsymb 1399 ........................... <#typeDef>
  [390] pusharglist 2 ........................... <tElem, #typeDef>
  [392] objcall 54 .............................. <tElem[#typeDef]>
  [394] pusharglistnoret 3 ...................... <tProps, #typeDef, tElem[#typeDef]>
  [396] objcall 24 .............................. tProps[#typeDef] = tElem[#typeDef]
  [398] getlocal 6 .............................. <tPartWrapper>
  [400] getlocal 7 .............................. <tProps>
  [402] pusharglistnoret 2 ...................... <tPartWrapper, tProps>
  [404] objcall 436 ............................. tPartWrapper.define(tProps)
  [407] jmp [421]
  [410] getprop 1372 ............................ <pWrappedParts>
  [413] getlocal 5 .............................. <tWrapID>
  [415] pusharglist 2 ........................... <pWrappedParts, tWrapID>
  [417] objcall 54 .............................. <pWrappedParts[tWrapID]>
  [419] setlocal 6 .............................. tPartWrapper = pWrappedParts[tWrapID]
  [421] getlocal 6 .............................. <tPartWrapper>
  [423] getlocal 4 .............................. <tElem>
  [425] pusharglistnoret 2 ...................... <tPartWrapper, tElem>
  [427] objcall 1400 ............................ tPartWrapper.addPart(tElem)
  [430] jmp [1266]
  [433] pusharglist 0 ........................... <>
  [435] extcall 231 ............................. <getSpriteManager()>
  [437] getparam 0 .............................. <me>
  [439] pusharglist 1 ........................... <me>
  [441] objcall 3 ............................... <me.getID()>
  [443] pusharglist 2 ........................... <getSpriteManager(), me.getID()>
  [445] objcall 232 ............................. <getSpriteManager().reserveSprite(me.getID())>
  [447] pusharglist 1 ........................... <getSpriteManager().reserveSprite(me.getID())>
  [449] extcall 36 .............................. <sprite(getSpriteManager().reserveSprite(me.getID()))>
  [451] setlocal 8 .............................. tSpr = sprite(getSpriteManager().reserveSprite(me.getID()))
  [453] getlocal 8 .............................. <tSpr>
  [455] getobjprop 37 ........................... <tSpr.spriteNum>
  [457] pushint8 1 .............................. <1>
  [459] lt ...................................... <tSpr.spriteNum < 1>
  [460] jmpifz [532] ............................ if tSpr.spriteNum < 1 then
  [463] getlocal 0 .............................. <tSpriteList>
  [465] peek 0
  [467] pusharglist 1
  [469] extcall 22
  [471] pushint8 1
  [473] peek 0
  [475] peek 2
  [477] lteq
  [478] jmpifz [510] ............................ repeat with t_rSpr in tSpriteList
  [481] peek 2
  [483] peek 1
  [485] pusharglist 2
  [487] extcall 54
  [489] setlocal 9
  [491] getlocal 9 .............................. <t_rSpr>
  [493] getobjprop 37 ........................... <t_rSpr.spriteNum>
  [495] getparam 0 .............................. <me>
  [497] pusharglist 1 ........................... <me>
  [499] objcall 3 ............................... <me.getID()>
  [501] pusharglistnoret 2 ...................... <t_rSpr.spriteNum, me.getID()>
  [503] extcall 233 ............................. releaseSprite(t_rSpr.spriteNum, me.getID())
  [505] pushint8 1
  [507] add
  [508] endrepeat [473]
  [510] pop 3
  [512] pusharglist 0 ........................... <[:]>
  [514] pushproplist ............................ <[:]>
  [515] setlocal 0 .............................. tSpriteList = [:]
  [517] getparam 0 .............................. <me>
  [519] pushcons 8 .............................. <"Failed to build visual. System out of sprites!">
  [521] pushsymb 1362 ........................... <#buildVisual>
  [524] pusharglist 3 ........................... <me, "Failed to build visual. System out of sprites!", #buildVisual>
  [526] extcall 39 .............................. <error(me, "Failed to build visual. System out of sprites!", #buildVisual)>
  [528] pusharglistnoret 1 ...................... <error(me, "Failed to build visual. System out of sprites!", #buildVisual)>
  [530] extcall 25 .............................. return error(me, "Failed to build visual. System out of sprites!", #buildVisual)
  [532] getlocal 8 .............................. <tSpr>
  [534] getlocal 3 .............................. <tMemNum>
  [536] setobjprop 884 .......................... tSpr.castNum = tMemNum
  [539] getlocal 8 .............................. <tSpr>
  [541] getlocal 4 .............................. <tElem>
  [543] pushsymb 562 ............................ <#ink>
  [546] pusharglist 2 ........................... <tElem, #ink>
  [548] objcall 54 .............................. <tElem[#ink]>
  [550] setobjprop 562 .......................... tSpr.ink = tElem[#ink]
  [553] getlocal 8 .............................. <tSpr>
  [555] getlocal 4 .............................. <tElem>
  [557] pushsymb 506 ............................ <#locH>
  [560] pusharglist 2 ........................... <tElem, #locH>
  [562] objcall 54 .............................. <tElem[#locH]>
  [564] getprop 467 ............................. <pLocX>
  [567] add ..................................... <tElem[#locH] + pLocX>
  [568] setobjprop 506 .......................... tSpr.locH = tElem[#locH] + pLocX
  [571] getlocal 8 .............................. <tSpr>
  [573] getlocal 4 .............................. <tElem>
  [575] pushsymb 507 ............................ <#locV>
  [578] pusharglist 2 ........................... <tElem, #locV>
  [580] objcall 54 .............................. <tElem[#locV]>
  [582] getprop 469 ............................. <pLocY>
  [585] add ..................................... <tElem[#locV] + pLocY>
  [586] setobjprop 507 .......................... tSpr.locV = tElem[#locV] + pLocY
  [589] getlocal 8 .............................. <tSpr>
  [591] getlocal 4 .............................. <tElem>
  [593] pushsymb 42 ............................. <#width>
  [595] pusharglist 2 ........................... <tElem, #width>
  [597] objcall 54 .............................. <tElem[#width]>
  [599] setobjprop 42 ........................... tSpr.width = tElem[#width]
  [601] getlocal 8 .............................. <tSpr>
  [603] getlocal 4 .............................. <tElem>
  [605] pushsymb 43 ............................. <#height>
  [607] pusharglist 2 ........................... <tElem, #height>
  [609] objcall 54 .............................. <tElem[#height]>
  [611] setobjprop 43 ........................... tSpr.height = tElem[#height]
  [613] getlocal 8 .............................. <tSpr>
  [615] getlocal 4 .............................. <tElem>
  [617] pushsymb 503 ............................ <#blend>
  [620] pusharglist 2 ........................... <tElem, #blend>
  [622] objcall 54 .............................. <tElem[#blend]>
  [624] setobjprop 503 .......................... tSpr.blend = tElem[#blend]
  [627] getlocal 8 .............................. <tSpr>
  [629] getlocal 4 .............................. <tElem>
  [631] pushsymb 1401 ........................... <#rotation>
  [634] pusharglist 2 ........................... <tElem, #rotation>
  [636] objcall 54 .............................. <tElem[#rotation]>
  [638] setobjprop 1401 ......................... tSpr.rotation = tElem[#rotation]
  [641] getlocal 8 .............................. <tSpr>
  [643] getlocal 4 .............................. <tElem>
  [645] pushsymb 1402 ........................... <#skew>
  [648] pusharglist 2 ........................... <tElem, #skew>
  [650] objcall 54 .............................. <tElem[#skew]>
  [652] setobjprop 1402 ......................... tSpr.skew = tElem[#skew]
  [655] getlocal 8 .............................. <tSpr>
  [657] getlocal 4 .............................. <tElem>
  [659] pushsymb 452 ............................ <#flipH>
  [662] pusharglist 2 ........................... <tElem, #flipH>
  [664] objcall 54 .............................. <tElem[#flipH]>
  [666] setobjprop 452 .......................... tSpr.flipH = tElem[#flipH]
  [669] getlocal 8 .............................. <tSpr>
  [671] getlocal 4 .............................. <tElem>
  [673] pushsymb 453 ............................ <#flipV>
  [676] pusharglist 2 ........................... <tElem, #flipV>
  [678] objcall 54 .............................. <tElem[#flipV]>
  [680] setobjprop 453 .......................... tSpr.flipV = tElem[#flipV]
  [683] getlocal 8 .............................. <tSpr>
  [685] getlocal 4 .............................. <tElem>
  [687] pushsymb 599 ............................ <#color>
  [690] pusharglist 2 ........................... <tElem, #color>
  [692] objcall 54 .............................. <tElem[#color]>
  [694] pusharglist 1 ........................... <tElem[#color]>
  [696] extcall 578 ............................. <rgb(tElem[#color])>
  [699] setobjprop 599 .......................... tSpr.color = rgb(tElem[#color])
  [702] getlocal 8 .............................. <tSpr>
  [704] getlocal 4 .............................. <tElem>
  [706] pushsymb 1298 ........................... <#bgColor>
  [709] pusharglist 2 ........................... <tElem, #bgColor>
  [711] objcall 54 .............................. <tElem[#bgColor]>
  [713] pusharglist 1 ........................... <tElem[#bgColor]>
  [715] extcall 578 ............................. <rgb(tElem[#bgColor])>
  [718] setobjprop 1298 ......................... tSpr.bgColor = rgb(tElem[#bgColor])
  [721] getlocal 4 .............................. <tElem>
  [723] pushsymb 1342 ........................... <#media>
  [726] pusharglist 2 ........................... <tElem, #media>
  [728] objcall 54 .............................. <tElem[#media]>
  [730] pushsymb 516 ............................ <#text>
  [733] eq ...................................... <tElem[#media] = #text>
  [734] getlocal 4 .............................. <tElem>
  [736] pushsymb 1342 ........................... <#media>
  [739] pusharglist 2 ........................... <tElem, #media>
  [741] objcall 54 .............................. <tElem[#media]>
  [743] pushsymb 786 ............................ <#field>
  [746] eq ...................................... <tElem[#media] = #field>
  [747] or ...................................... <(tElem[#media] = #text) or (tElem[#media] = #field)>
  [748] jmpifz [1026] ........................... if (tElem[#media] = #text) or (tElem[#media] = #field) then
  [751] getlocal 3 .............................. <tMemNum>
  [753] pusharglist 1 ........................... <tMemNum>
  [755] extcall 41 .............................. <member(tMemNum)>
  [757] setlocal 10 ............................. tTxtMem = member(tMemNum)
  [759] getlocal 4 .............................. <tElem>
  [761] pushsymb 1296 ........................... <#txtColor>
  [764] pusharglist 2 ........................... <tElem, #txtColor>
  [766] objcall 54 .............................. <tElem[#txtColor]>
  [768] pusharglist 1 ........................... <tElem[#txtColor]>
  [770] extcall 20 .............................. <voidp(tElem[#txtColor])>
  [772] not ..................................... <not voidp(tElem[#txtColor])>
  [773] jmpifz [795] ............................ if not voidp(tElem[#txtColor]) then
  [776] getlocal 10 ............................. <tTxtMem>
  [778] getlocal 4 .............................. <tElem>
  [780] pushsymb 1296 ........................... <#txtColor>
  [783] pusharglist 2 ........................... <tElem, #txtColor>
  [785] objcall 54 .............................. <tElem[#txtColor]>
  [787] pusharglist 1 ........................... <tElem[#txtColor]>
  [789] extcall 578 ............................. <rgb(tElem[#txtColor])>
  [792] setobjprop 599 .......................... tTxtMem.color = rgb(tElem[#txtColor])
  [795] getlocal 4 .............................. <tElem>
  [797] pushsymb 1297 ........................... <#txtBgColor>
  [800] pusharglist 2 ........................... <tElem, #txtBgColor>
  [802] objcall 54 .............................. <tElem[#txtBgColor]>
  [804] pusharglist 1 ........................... <tElem[#txtBgColor]>
  [806] extcall 20 .............................. <voidp(tElem[#txtBgColor])>
  [808] not ..................................... <not voidp(tElem[#txtBgColor])>
  [809] jmpifz [831] ............................ if not voidp(tElem[#txtBgColor]) then
  [812] getlocal 10 ............................. <tTxtMem>
  [814] getlocal 4 .............................. <tElem>
  [816] pushsymb 1297 ........................... <#txtBgColor>
  [819] pusharglist 2 ........................... <tElem, #txtBgColor>
  [821] objcall 54 .............................. <tElem[#txtBgColor]>
  [823] pusharglist 1 ........................... <tElem[#txtBgColor]>
  [825] extcall 578 ............................. <rgb(tElem[#txtBgColor])>
  [828] setobjprop 1298 ......................... tTxtMem.bgColor = rgb(tElem[#txtBgColor])
  [831] getlocal 10 ............................. <tTxtMem>
  [833] getobjprop 596 .......................... <tTxtMem.font>
  [836] getlocal 4 .............................. <tElem>
  [838] pushsymb 596 ............................ <#font>
  [841] pusharglist 2 ........................... <tElem, #font>
  [843] objcall 54 .............................. <tElem[#font]>
  [845] nteq .................................... <tTxtMem.font <> tElem[#font]>
  [846] jmpifz [863] ............................ if tTxtMem.font <> tElem[#font] then
  [849] getlocal 10 ............................. <tTxtMem>
  [851] getlocal 4 .............................. <tElem>
  [853] pushsymb 596 ............................ <#font>
  [856] pusharglist 2 ........................... <tElem, #font>
  [858] objcall 54 .............................. <tElem[#font]>
  [860] setobjprop 596 .......................... tTxtMem.font = tElem[#font]
  [863] getlocal 10 ............................. <tTxtMem>
  [865] getobjprop 598 .......................... <tTxtMem.fontSize>
  [868] getlocal 4 .............................. <tElem>
  [870] pushsymb 598 ............................ <#fontSize>
  [873] pusharglist 2 ........................... <tElem, #fontSize>
  [875] objcall 54 .............................. <tElem[#fontSize]>
  [877] nteq .................................... <tTxtMem.fontSize <> tElem[#fontSize]>
  [878] jmpifz [895] ............................ if tTxtMem.fontSize <> tElem[#fontSize] then
  [881] getlocal 10 ............................. <tTxtMem>
  [883] getlocal 4 .............................. <tElem>
  [885] pushsymb 598 ............................ <#fontSize>
  [888] pusharglist 2 ........................... <tElem, #fontSize>
  [890] objcall 54 .............................. <tElem[#fontSize]>
  [892] setobjprop 598 .......................... tTxtMem.fontSize = tElem[#fontSize]
  [895] getlocal 10 ............................. <tTxtMem>
  [897] getobjprop 597 .......................... <tTxtMem.fontStyle>
  [900] getlocal 4 .............................. <tElem>
  [902] pushsymb 597 ............................ <#fontStyle>
  [905] pusharglist 2 ........................... <tElem, #fontStyle>
  [907] objcall 54 .............................. <tElem[#fontStyle]>
  [909] nteq .................................... <tTxtMem.fontStyle <> tElem[#fontStyle]>
  [910] jmpifz [927] ............................ if tTxtMem.fontStyle <> tElem[#fontStyle] then
  [913] getlocal 10 ............................. <tTxtMem>
  [915] getlocal 4 .............................. <tElem>
  [917] pushsymb 597 ............................ <#fontStyle>
  [920] pusharglist 2 ........................... <tElem, #fontStyle>
  [922] objcall 54 .............................. <tElem[#fontStyle]>
  [924] setobjprop 597 .......................... tTxtMem.fontStyle = tElem[#fontStyle]
  [927] getlocal 4 .............................. <tElem>
  [929] pushsymb 1342 ........................... <#media>
  [932] pusharglist 2 ........................... <tElem, #media>
  [934] objcall 54 .............................. <tElem[#media]>
  [936] pushsymb 516 ............................ <#text>
  [939] eq ...................................... <tElem[#media] = #text>
  [940] jmpifz [978] ............................ if tElem[#media] = #text then / else
  [943] getlocal 10 ............................. <tTxtMem>
  [945] getobjprop 477 .......................... <tTxtMem.fixedLineSpace>
  [948] getlocal 4 .............................. <tElem>
  [950] pushsymb 477 ............................ <#fixedLineSpace>
  [953] pusharglist 2 ........................... <tElem, #fixedLineSpace>
  [955] objcall 54 .............................. <tElem[#fixedLineSpace]>
  [957] nteq .................................... <tTxtMem.fixedLineSpace <> tElem[#fixedLineSpace]>
  [958] jmpifz [975] ............................ if tTxtMem.fixedLineSpace <> tElem[#fixedLineSpace] then
  [961] getlocal 10 ............................. <tTxtMem>
  [963] getlocal 4 .............................. <tElem>
  [965] pushsymb 477 ............................ <#fixedLineSpace>
  [968] pusharglist 2 ........................... <tElem, #fixedLineSpace>
  [970] objcall 54 .............................. <tElem[#fixedLineSpace]>
  [972] setobjprop 477 .......................... tTxtMem.fixedLineSpace = tElem[#fixedLineSpace]
  [975] jmp [1026]
  [978] getlocal 4 .............................. <tElem>
  [980] pushsymb 1342 ........................... <#media>
  [983] pusharglist 2 ........................... <tElem, #media>
  [985] objcall 54 .............................. <tElem[#media]>
  [987] pushsymb 786 ............................ <#field>
  [990] eq ...................................... <tElem[#media] = #field>
  [991] jmpifz [1026] ........................... if tElem[#media] = #field then
  [994] getlocal 10 ............................. <tTxtMem>
  [996] getobjprop 1403 ......................... <tTxtMem.lineHeight>
  [999] getlocal 4 .............................. <tElem>
  [1001] pushsymb 1403 .......................... <#lineHeight>
  [1004] pusharglist 2 .......................... <tElem, #lineHeight>
  [1006] objcall 54 ............................. <tElem[#lineHeight]>
  [1008] nteq ................................... <tTxtMem.lineHeight <> tElem[#lineHeight]>
  [1009] jmpifz [1026] .......................... if tTxtMem.lineHeight <> tElem[#lineHeight] then
  [1012] getlocal 10 ............................ <tTxtMem>
  [1014] getlocal 4 ............................. <tElem>
  [1016] pushsymb 1403 .......................... <#lineHeight>
  [1019] pusharglist 2 .......................... <tElem, #lineHeight>
  [1021] objcall 54 ............................. <tElem[#lineHeight]>
  [1023] setobjprop 1403 ........................ tTxtMem.lineHeight = tElem[#lineHeight]
  [1026] getlocal 4 ............................. <tElem>
  [1028] pushsymb 883 ........................... <#locZ>
  [1031] pusharglist 2 .......................... <tElem, #locZ>
  [1033] objcall 54 ............................. <tElem[#locZ]>
  [1035] pusharglist 1 .......................... <tElem[#locZ]>
  [1037] extcall 20 ............................. <voidp(tElem[#locZ])>
  [1039] jmpifz [1059] .......................... if voidp(tElem[#locZ]) then / else
  [1042] getlocal 8 ............................. <tSpr>
  [1044] getprop 1365 ........................... <pLocZ>
  [1047] getlocal 2 ............................. <i>
  [1049] add .................................... <pLocZ + i>
  [1050] pushint8 1 ............................. <1>
  [1052] sub .................................... <pLocZ + i - 1>
  [1053] setobjprop 883 ......................... tSpr.locZ = pLocZ + i - 1
  [1056] jmp [1082]
  [1059] getlocal 8 ............................. <tSpr>
  [1061] getlocal 4 ............................. <tElem>
  [1063] pushsymb 883 ........................... <#locZ>
  [1066] pusharglist 2 .......................... <tElem, #locZ>
  [1068] objcall 54 ............................. <tElem[#locZ]>
  [1070] pusharglist 1 .......................... <tElem[#locZ]>
  [1072] extcall 957 ............................ <integer(tElem[#locZ])>
  [1075] getprop 1365 ........................... <pLocZ>
  [1078] add .................................... <integer(tElem[#locZ]) + pLocZ>
  [1079] setobjprop 883 ......................... tSpr.locZ = integer(tElem[#locZ]) + pLocZ
  [1082] getlocal 4 ............................. <tElem>
  [1084] pushsymb 34 ............................ <#id>
  [1086] pusharglist 2 .......................... <tElem, #id>
  [1088] objcall 54 ............................. <tElem[#id]>
  [1090] pusharglist 1 .......................... <tElem[#id]>
  [1092] extcall 20 ............................. <voidp(tElem[#id])>
  [1094] not .................................... <not voidp(tElem[#id])>
  [1095] jmpifz [1246] .......................... if not voidp(tElem[#id]) then
  [1098] getlocal 4 ............................. <tElem>
  [1100] pushsymb 772 ........................... <#Active>
  [1103] pusharglist 2 .......................... <tElem, #Active>
  [1105] objcall 54 ............................. <tElem[#Active]>
  [1107] pushint8 1 ............................. <1>
  [1109] eq ..................................... <tElem[#Active] = 1>
  [1110] getlocal 4 ............................. <tElem>
  [1112] pushsymb 772 ........................... <#Active>
  [1115] pusharglist 2 .......................... <tElem, #Active>
  [1117] objcall 54 ............................. <tElem[#Active]>
  [1119] pusharglist 1 .......................... <tElem[#Active]>
  [1121] extcall 20 ............................. <voidp(tElem[#Active])>
  [1123] getlocal 4 ............................. <tElem>
  [1125] pushsymb 456 ........................... <#type>
  [1128] pusharglist 2 .......................... <tElem, #type>
  [1130] objcall 54 ............................. <tElem[#type]>
  [1132] pusharglist 1 .......................... <tElem[#type]>
  [1134] extcall 20 ............................. <voidp(tElem[#type])>
  [1136] and .................................... <voidp(tElem[#Active]) and voidp(tElem[#type])>
  [1137] or ..................................... <(tElem[#Active] = 1) or (voidp(tElem[#Active]) and voidp(tElem[#type]))>
  [1138] jmpifz [1223] .......................... if (tElem[#Active] = 1) or (voidp(tElem[#Active]) and voidp(tElem[#type])) then
  [1141] pusharglist 0 .......................... <>
  [1143] extcall 231 ............................ <getSpriteManager()>
  [1145] getlocal 8 ............................. <tSpr>
  [1147] getobjprop 37 .......................... <tSpr.spriteNum>
  [1149] getlocal 4 ............................. <tElem>
  [1151] pushsymb 34 ............................ <#id>
  [1153] pusharglist 2 .......................... <tElem, #id>
  [1155] objcall 54 ............................. <tElem[#id]>
  [1157] pusharglistnoret 3 ..................... <getSpriteManager(), tSpr.spriteNum, tElem[#id]>
  [1159] objcall 234 ............................ getSpriteManager().setEventBroker(tSpr.spriteNum, tElem[#id])
  [1161] getlocal 4 ............................. <tElem>
  [1163] pushsymb 45 ............................ <#cursor>
  [1165] pusharglist 2 .......................... <tElem, #cursor>
  [1167] objcall 54 ............................. <tElem[#cursor]>
  [1169] pusharglist 1 .......................... <tElem[#cursor]>
  [1171] extcall 20 ............................. <voidp(tElem[#cursor])>
  [1173] not .................................... <not voidp(tElem[#cursor])>
  [1174] jmpifz [1191] .......................... if not voidp(tElem[#cursor]) then
  [1177] getlocal 8 ............................. <tSpr>
  [1179] getlocal 4 ............................. <tElem>
  [1181] pushsymb 45 ............................ <#cursor>
  [1183] pusharglist 2 .......................... <tElem, #cursor>
  [1185] objcall 54 ............................. <tElem[#cursor]>
  [1187] pusharglistnoret 2 ..................... <tSpr, tElem[#cursor]>
  [1189] objcall 8 .............................. tSpr.setcursor(tElem[#cursor])
  [1191] getlocal 4 ............................. <tElem>
  [1193] pushsymb 1404 .......................... <#link>
  [1196] pusharglist 2 .......................... <tElem, #link>
  [1198] objcall 54 ............................. <tElem[#link]>
  [1200] pusharglist 1 .......................... <tElem[#link]>
  [1202] extcall 20 ............................. <voidp(tElem[#link])>
  [1204] not .................................... <not voidp(tElem[#link])>
  [1205] jmpifz [1223] .......................... if not voidp(tElem[#link]) then
  [1208] getlocal 8 ............................. <tSpr>
  [1210] getlocal 4 ............................. <tElem>
  [1212] pushsymb 1404 .......................... <#link>
  [1215] pusharglist 2 .......................... <tElem, #link>
  [1217] objcall 54 ............................. <tElem[#link]>
  [1219] pusharglistnoret 2 ..................... <tSpr, tElem[#link]>
  [1221] objcall 10 ............................. tSpr.setLink(tElem[#link])
  [1223] getprop 1369 ........................... <pActSprList>
  [1226] getparam 1 ............................. <tLayout>
  [1228] getlocal 2 ............................. <i>
  [1230] pusharglist 2 .......................... <tLayout, i>
  [1232] objcall 54 ............................. <tLayout[i]>
  [1234] pushsymb 34 ............................ <#id>
  [1236] pusharglist 2 .......................... <tLayout[i], #id>
  [1238] objcall 54 ............................. <tLayout[i][#id]>
  [1240] getlocal 8 ............................. <tSpr>
  [1242] pusharglistnoret 3 ..................... <pActSprList, tLayout[i][#id], tSpr>
  [1244] objcall 24 ............................. pActSprList[tLayout[i][#id]] = tSpr
  [1246] getprop 1368 ........................... <pSpriteData>
  [1249] pusharglist 0 .......................... <[:]>
  [1251] pushproplist ........................... <[:]>
  [1252] pusharglistnoret 2 ..................... <pSpriteData, [:]>
  [1254] objcall 666 ............................ pSpriteData.append([:])
  [1257] getlocal 0 ............................. <tSpriteList>
  [1259] getlocal 8 ............................. <tSpr>
  [1261] pusharglistnoret 2 ..................... <tSpriteList, tSpr>
  [1263] objcall 666 ............................ tSpriteList.append(tSpr)
  [1266] getlocal 4 ............................. <tElem>
  [1268] pushsymb 1405 .......................... <#swapAnimType>
  [1271] pusharglist 2 .......................... <tElem, #swapAnimType>
  [1273] objcall 54 ............................. <tElem[#swapAnimType]>
  [1275] pusharglist 1 .......................... <tElem[#swapAnimType]>
  [1277] extcall 20 ............................. <voidp(tElem[#swapAnimType])>
  [1279] not .................................... <not voidp(tElem[#swapAnimType])>
  [1280] jmpifz [1471] .......................... if not voidp(tElem[#swapAnimType]) then
  [1283] pusharglist 0 .......................... <[:]>
  [1285] pushproplist ........................... <[:]>
  [1286] setlocal 11 ............................ tAnimProps = [:]
  [1288] getlocal 11 ............................ <tAnimProps>
  [1290] pushsymb 36 ............................ <#sprite>
  [1292] getlocal 8 ............................. <tSpr>
  [1294] pusharglistnoret 3 ..................... <tAnimProps, #sprite, tSpr>
  [1296] objcall 24 ............................. tAnimProps[#sprite] = tSpr
  [1298] getlocal 11 ............................ <tAnimProps>
  [1300] pushsymb 1406 .......................... <#animType>
  [1303] getlocal 4 ............................. <tElem>
  [1305] pushsymb 1405 .......................... <#swapAnimType>
  [1308] pusharglist 2 .......................... <tElem, #swapAnimType>
  [1310] objcall 54 ............................. <tElem[#swapAnimType]>
  [1312] pusharglistnoret 3 ..................... <tAnimProps, #animType, tElem[#swapAnimType]>
  [1314] objcall 24 ............................. tAnimProps[#animType] = tElem[#swapAnimType]
  [1316] getlocal 11 ............................ <tAnimProps>
  [1318] pushsymb 1407 .......................... <#initDelayType>
  [1321] getlocal 4 ............................. <tElem>
  [1323] pushsymb 1408 .......................... <#swapInitDelayType>
  [1326] pusharglist 2 .......................... <tElem, #swapInitDelayType>
  [1328] objcall 54 ............................. <tElem[#swapInitDelayType]>
  [1330] pusharglistnoret 3 ..................... <tAnimProps, #initDelayType, tElem[#swapInitDelayType]>
  [1332] objcall 24 ............................. tAnimProps[#initDelayType] = tElem[#swapInitDelayType]
  [1334] getlocal 11 ............................ <tAnimProps>
  [1336] pushsymb 1409 .......................... <#initDelay>
  [1339] getlocal 4 ............................. <tElem>
  [1341] pushsymb 1410 .......................... <#swapInitDelayValue>
  [1344] pusharglist 2 .......................... <tElem, #swapInitDelayValue>
  [1346] objcall 54 ............................. <tElem[#swapInitDelayValue]>
  [1348] pusharglistnoret 3 ..................... <tAnimProps, #initDelay, tElem[#swapInitDelayValue]>
  [1350] objcall 24 ............................. tAnimProps[#initDelay] = tElem[#swapInitDelayValue]
  [1352] getlocal 11 ............................ <tAnimProps>
  [1354] pushsymb 1411 .......................... <#animDelayType>
  [1357] getlocal 4 ............................. <tElem>
  [1359] pushsymb 1412 .......................... <#swapAnimDelayType>
  [1362] pusharglist 2 .......................... <tElem, #swapAnimDelayType>
  [1364] objcall 54 ............................. <tElem[#swapAnimDelayType]>
  [1366] pusharglistnoret 3 ..................... <tAnimProps, #animDelayType, tElem[#swapAnimDelayType]>
  [1368] objcall 24 ............................. tAnimProps[#animDelayType] = tElem[#swapAnimDelayType]
  [1370] getlocal 11 ............................ <tAnimProps>
  [1372] pushsymb 1413 .......................... <#animDelay>
  [1375] getlocal 4 ............................. <tElem>
  [1377] pushsymb 1414 .......................... <#swapAnimDelayValue>
  [1380] pusharglist 2 .......................... <tElem, #swapAnimDelayValue>
  [1382] objcall 54 ............................. <tElem[#swapAnimDelayValue]>
  [1384] pusharglistnoret 3 ..................... <tAnimProps, #animDelay, tElem[#swapAnimDelayValue]>
  [1386] objcall 24 ............................. tAnimProps[#animDelay] = tElem[#swapAnimDelayValue]
  [1388] getlocal 11 ............................ <tAnimProps>
  [1390] pushsymb 1415 .......................... <#frameList>
  [1393] getlocal 4 ............................. <tElem>
  [1395] pushsymb 1416 .......................... <#swapAnimFrameList>
  [1398] pusharglist 2 .......................... <tElem, #swapAnimFrameList>
  [1400] objcall 54 ............................. <tElem[#swapAnimFrameList]>
  [1402] pusharglistnoret 3 ..................... <tAnimProps, #frameList, tElem[#swapAnimFrameList]>
  [1404] objcall 24 ............................. tAnimProps[#frameList] = tElem[#swapAnimFrameList]
  [1406] getlocal 11 ............................ <tAnimProps>
  [1408] pushsymb 1417 .......................... <#animLoopCount>
  [1411] getlocal 4 ............................. <tElem>
  [1413] pushsymb 1418 .......................... <#swapAnimLoopCount>
  [1416] pusharglist 2 .......................... <tElem, #swapAnimLoopCount>
  [1418] objcall 54 ............................. <tElem[#swapAnimLoopCount]>
  [1420] pusharglistnoret 3 ..................... <tAnimProps, #animLoopCount, tElem[#swapAnimLoopCount]>
  [1422] objcall 24 ............................. tAnimProps[#animLoopCount] = tElem[#swapAnimLoopCount]
  [1424] getlocal 4 ............................. <tElem>
  [1426] pushsymb 34 ............................ <#id>
  [1428] pusharglist 2 .......................... <tElem, #id>
  [1430] objcall 54 ............................. <tElem[#id]>
  [1432] pusharglist 1 .......................... <tElem[#id]>
  [1434] extcall 20 ............................. <voidp(tElem[#id])>
  [1436] not .................................... <not voidp(tElem[#id])>
  [1437] jmpifz [1460] .......................... if not voidp(tElem[#id]) then
  [1440] getprop 1373 ........................... <pSwapAnimList>
  [1443] getlocal 4 ............................. <tElem>
  [1445] pushsymb 34 ............................ <#id>
  [1447] pusharglist 2 .......................... <tElem, #id>
  [1449] objcall 54 ............................. <tElem[#id]>
  [1451] getlocal 11 ............................ <tAnimProps>
  [1453] pusharglistnoret 3 ..................... <pSwapAnimList, tElem[#id], tAnimProps>
  [1455] objcall 24 ............................. pSwapAnimList[tElem[#id]] = tAnimProps
  [1457] jmp [1471] ............................. next repeat
  [1460] getparam 0 ............................. <me>
  [1462] pushcons 9 ............................. <"Animation had no ID">
  [1464] pushsymb 1362 .......................... <#buildVisual>
  [1467] pusharglistnoret 3 ..................... <me, "Animation had no ID", #buildVisual>
  [1469] extcall 39 ............................. error(me, "Animation had no ID", #buildVisual)
  [1471] pushint8 1
  [1473] getlocal 2
  [1475] add
  [1476] setlocal 2
  [1478] endrepeat [162]
  [1481] getlocal 0 ............................. <tSpriteList>
  [1483] peek 0
  [1485] pusharglist 1
  [1487] extcall 22
  [1489] pushint8 1
  [1491] peek 0
  [1493] peek 2
  [1495] lteq
  [1496] jmpifz [1524] .......................... repeat with tSpr in tSpriteList
  [1499] peek 2
  [1501] peek 1
  [1503] pusharglist 2
  [1505] extcall 54
  [1507] setlocal 8
  [1509] getprop 1367 ........................... <pSpriteList>
  [1512] getlocal 8 ............................. <tSpr>
  [1514] pusharglistnoret 2 ..................... <pSpriteList, tSpr>
  [1516] objcall 666 ............................ pSpriteList.append(tSpr)
  [1519] pushint8 1
  [1521] add
  [1522] endrepeat [1491]
  [1524] pop 3
  [1526] getprop 1372 ........................... <pWrappedParts>
  [1529] peek 0
  [1531] pusharglist 1
  [1533] extcall 22
  [1535] pushint8 1
  [1537] peek 0
  [1539] peek 2
  [1541] lteq
  [1542] jmpifz [1582] .......................... repeat with tWrapper in pWrappedParts
  [1545] peek 2
  [1547] peek 1
  [1549] pusharglist 2
  [1551] extcall 54
  [1553] setlocal 12
  [1555] getlocal 12 ............................ <tWrapper>
  [1557] pushsymb 772 ........................... <#Active>
  [1560] pusharglist 2 .......................... <tWrapper, #Active>
  [1562] objcall 444 ............................ <tWrapper.getProperty(#Active)>
  [1565] jmpifz [1577] .......................... if tWrapper.getProperty(#Active) then
  [1568] getparam 0 ............................. <me>
  [1570] getlocal 12 ............................ <tWrapper>
  [1572] pusharglistnoret 2 ..................... <me, tWrapper>
  [1574] objcall 1354 ........................... me.activateWrap(tWrapper)
  [1577] pushint8 1
  [1579] add
  [1580] endrepeat [1537]
  [1582] pop 3
  [1584] getparam 0 ............................. <me>
  [1586] pusharglist 1 .......................... <me>
  [1588] objcall 1361 ........................... <me.Refresh()>
  [1591] pusharglistnoret 1 ..................... <me.Refresh()>
  [1593] extcall 25 ............................. return me.Refresh()
  [1595] ret
end
