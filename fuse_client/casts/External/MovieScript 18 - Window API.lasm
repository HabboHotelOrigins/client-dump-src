on constructWindowManager
  [  0] pushsymb 336 ............................ <#window_manager>
  [  3] pushcons 0 .............................. <"window.manager.class">
  [  5] pusharglist 1 ........................... <"window.manager.class">
  [  7] extcall 155 ............................. <getClassVariable("window.manager.class")>
  [  9] pusharglist 2 ........................... <#window_manager, getClassVariable("window.manager.class")>
  [ 11] extcall 99 .............................. <createManager(#window_manager, getClassVariable("window.manager.class"))>
  [ 13] pusharglistnoret 1 ...................... <createManager(#window_manager, getClassVariable("window.manager.class"))>
  [ 15] extcall 25 .............................. return createManager(#window_manager, getClassVariable("window.manager.class"))
  [ 17] ret
end

on deconstructWindowManager
  [  0] pushsymb 336 ............................ <#window_manager>
  [  3] pusharglist 1 ........................... <#window_manager>
  [  5] extcall 100 ............................. <removeManager(#window_manager)>
  [  7] pusharglistnoret 1 ...................... <removeManager(#window_manager)>
  [  9] extcall 25 .............................. return removeManager(#window_manager)
  [ 11] ret
end

on getWindowManager
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 93 .............................. <getObjectManager()>
  [  4] setlocal 0 .............................. tMgr = getObjectManager()
  [  6] getlocal 0 .............................. <tMgr>
  [  8] pushsymb 336 ............................ <#window_manager>
  [ 11] pusharglist 2 ........................... <tMgr, #window_manager>
  [ 13] objcall 102 ............................. <tMgr.managerExists(#window_manager)>
  [ 15] not ..................................... <not tMgr.managerExists(#window_manager)>
  [ 16] jmpifz [ 27] ............................ if not tMgr.managerExists(#window_manager) then
  [ 19] pusharglist 0 ........................... <>
  [ 21] localcall 0 ............................. <constructWindowManager()>
  [ 23] pusharglistnoret 1 ...................... <constructWindowManager()>
  [ 25] extcall 25 .............................. return constructWindowManager()
  [ 27] getlocal 0 .............................. <tMgr>
  [ 29] pushsymb 336 ............................ <#window_manager>
  [ 32] pusharglist 2 ........................... <tMgr, #window_manager>
  [ 34] objcall 101 ............................. <tMgr.getManager(#window_manager)>
  [ 36] pusharglistnoret 1 ...................... <tMgr.getManager(#window_manager)>
  [ 38] extcall 25 .............................. return tMgr.getManager(#window_manager)
  [ 40] ret
end

on createWindow tid, tLayout, tLocX, tLocY, tSpecial
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] getparam 1 .............................. <tLayout>
  [  8] getparam 2 .............................. <tLocX>
  [ 10] getparam 3 .............................. <tLocY>
  [ 12] getparam 4 .............................. <tSpecial>
  [ 14] pusharglist 6 ........................... <getWindowManager(), tid, tLayout, tLocX, tLocY, tSpecial>
  [ 16] objcall 81 .............................. <getWindowManager().create(tid, tLayout, tLocX, tLocY, tSpecial)>
  [ 18] pusharglistnoret 1 ...................... <getWindowManager().create(tid, tLayout, tLocX, tLocY, tSpecial)>
  [ 20] extcall 25 .............................. return getWindowManager().create(tid, tLayout, tLocX, tLocY, tSpecial)
  [ 22] ret
end

on removeWindow tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getWindowManager(), tid>
  [  8] objcall 125 ............................. <getWindowManager().Remove(tid)>
  [ 10] pusharglistnoret 1 ...................... <getWindowManager().Remove(tid)>
  [ 12] extcall 25 .............................. return getWindowManager().Remove(tid)
  [ 14] ret
end

on getWindow tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getWindowManager(), tid>
  [  8] objcall 90 .............................. <getWindowManager().get(tid)>
  [ 10] pusharglistnoret 1 ...................... <getWindowManager().get(tid)>
  [ 12] extcall 25 .............................. return getWindowManager().get(tid)
  [ 14] ret
end

on windowExists tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getWindowManager(), tid>
  [  8] objcall 88 .............................. <getWindowManager().exists(tid)>
  [ 10] pusharglistnoret 1 ...................... <getWindowManager().exists(tid)>
  [ 12] extcall 25 .............................. return getWindowManager().exists(tid)
  [ 14] ret
end

on mergeWindow tid, tLayout
  [  0] getparam 0 .............................. <tid>
  [  2] pusharglist 1 ........................... <tid>
  [  4] localcall 6 ............................. <windowExists(tid)>
  [  6] jmpifz [ 29] ............................ if windowExists(tid) then / else
  [  9] getparam 0 .............................. <tid>
  [ 11] pusharglist 1 ........................... <tid>
  [ 13] localcall 5 ............................. <getWindow(tid)>
  [ 15] getparam 1 .............................. <tLayout>
  [ 17] pusharglist 2 ........................... <getWindow(tid), tLayout>
  [ 19] objcall 340 ............................. <getWindow(tid).merge(tLayout)>
  [ 22] pusharglistnoret 1 ...................... <getWindow(tid).merge(tLayout)>
  [ 24] extcall 25 .............................. return getWindow(tid).merge(tLayout)
  [ 26] jmp [ 34]
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 25 .............................. return 0
  [ 34] ret
end

on activateWindow tid
  [  0] getparam 0 .............................. <tid>
  [  2] pusharglist 1 ........................... <tid>
  [  4] extcall 20 .............................. <voidp(tid)>
  [  6] jmpifz [ 14] ............................ if voidp(tid) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 25 .............................. return 0
  [ 14] pusharglist 0 ........................... <>
  [ 16] localcall 2 ............................. <getWindowManager()>
  [ 18] getparam 0 .............................. <tid>
  [ 20] pusharglist 2 ........................... <getWindowManager(), tid>
  [ 22] objcall 341 ............................. <getWindowManager().Activate(tid)>
  [ 25] pusharglistnoret 1 ...................... <getWindowManager().Activate(tid)>
  [ 27] extcall 25 .............................. return getWindowManager().Activate(tid)
  [ 29] ret
end

on deactivateWindow tid
  [  0] getparam 0 .............................. <tid>
  [  2] pusharglist 1 ........................... <tid>
  [  4] extcall 20 .............................. <voidp(tid)>
  [  6] jmpifz [ 14] ............................ if voidp(tid) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 25 .............................. return 0
  [ 14] pusharglist 0 ........................... <>
  [ 16] localcall 2 ............................. <getWindowManager()>
  [ 18] getparam 0 .............................. <tid>
  [ 20] pusharglist 2 ........................... <getWindowManager(), tid>
  [ 22] objcall 342 ............................. <getWindowManager().deactivate(tid)>
  [ 25] pusharglistnoret 1 ...................... <getWindowManager().deactivate(tid)>
  [ 27] extcall 25 .............................. return getWindowManager().deactivate(tid)
  [ 29] ret
end

on registerClient tid, tClientID
  [  0] getparam 0 .............................. <tid>
  [  2] pusharglist 1 ........................... <tid>
  [  4] localcall 6 ............................. <windowExists(tid)>
  [  6] jmpifz [ 29] ............................ if windowExists(tid) then / else
  [  9] getparam 0 .............................. <tid>
  [ 11] pusharglist 1 ........................... <tid>
  [ 13] localcall 5 ............................. <getWindow(tid)>
  [ 15] getparam 1 .............................. <tClientID>
  [ 17] pusharglist 2 ........................... <getWindow(tid), tClientID>
  [ 19] objcall 330 ............................. <getWindow(tid).registerClient(tClientID)>
  [ 22] pusharglistnoret 1 ...................... <getWindow(tid).registerClient(tClientID)>
  [ 24] extcall 25 .............................. return getWindow(tid).registerClient(tClientID)
  [ 26] jmp [ 34]
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 25 .............................. return 0
  [ 34] ret
end

on registerProcedure tid, tHandler, tClientID, tEvent
  [  0] getparam 0 .............................. <tid>
  [  2] pusharglist 1 ........................... <tid>
  [  4] localcall 6 ............................. <windowExists(tid)>
  [  6] jmpifz [ 32] ............................ if windowExists(tid) then / else
  [  9] getparam 0 .............................. <tid>
  [ 11] pusharglist 1 ........................... <tid>
  [ 13] localcall 5 ............................. <getWindow(tid)>
  [ 15] getparam 1 .............................. <tHandler>
  [ 17] getparam 2 .............................. <tClientID>
  [ 19] getparam 3 .............................. <tEvent>
  [ 21] pusharglist 4 ........................... <getWindow(tid), tHandler, tClientID, tEvent>
  [ 23] objcall 1 ............................... <getWindow(tid).registerProcedure(tHandler, tClientID, tEvent)>
  [ 25] pusharglistnoret 1 ...................... <getWindow(tid).registerProcedure(tHandler, tClientID, tEvent)>
  [ 27] extcall 25 .............................. return getWindow(tid).registerProcedure(tHandler, tClientID, tEvent)
  [ 29] jmp [ 37]
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 25 .............................. return 0
  [ 37] ret
end

on showWindows
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] pusharglist 1 ........................... <getWindowManager()>
  [  6] objcall 343 ............................. <getWindowManager().showAll()>
  [  9] pusharglistnoret 1 ...................... <getWindowManager().showAll()>
  [ 11] extcall 25 .............................. return getWindowManager().showAll()
  [ 13] ret
end

on hideWindows
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] pusharglist 1 ........................... <getWindowManager()>
  [  6] objcall 344 ............................. <getWindowManager().hideAll()>
  [  9] pusharglistnoret 1 ...................... <getWindowManager().hideAll()>
  [ 11] extcall 25 .............................. return getWindowManager().hideAll()
  [ 13] ret
end

on lockWindowLayering
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] pusharglist 1 ........................... <getWindowManager()>
  [  6] objcall 345 ............................. <getWindowManager().lock()>
  [  9] pusharglistnoret 1 ...................... <getWindowManager().lock()>
  [ 11] extcall 25 .............................. return getWindowManager().lock()
  [ 13] ret
end

on unlockWindowLayering
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] pusharglist 1 ........................... <getWindowManager()>
  [  6] objcall 346 ............................. <getWindowManager().unlock()>
  [  9] pusharglistnoret 1 ...................... <getWindowManager().unlock()>
  [ 11] extcall 25 .............................. return getWindowManager().unlock()
  [ 13] ret
end

on printWindows
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getWindowManager()>
  [  4] pusharglist 1 ........................... <getWindowManager()>
  [  6] objcall 126 ............................. <getWindowManager().print()>
  [  8] pusharglistnoret 1 ...................... <getWindowManager().print()>
  [ 10] extcall 25 .............................. return getWindowManager().print()
  [ 12] ret
end
