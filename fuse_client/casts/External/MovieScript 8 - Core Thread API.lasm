on constructThreadManager
  [  0] pushsymb 154 ............................ <#thread_manager>
  [  2] pushcons 0 .............................. <"thread.manager.class">
  [  4] pusharglist 1 ........................... <"thread.manager.class">
  [  6] extcall 155 ............................. <getClassVariable("thread.manager.class")>
  [  8] pusharglist 2 ........................... <#thread_manager, getClassVariable("thread.manager.class")>
  [ 10] extcall 99 .............................. <createManager(#thread_manager, getClassVariable("thread.manager.class"))>
  [ 12] pusharglistnoret 1 ...................... <createManager(#thread_manager, getClassVariable("thread.manager.class"))>
  [ 14] extcall 25 .............................. return createManager(#thread_manager, getClassVariable("thread.manager.class"))
  [ 16] ret
end

on deconstructThreadManager
  [  0] pushsymb 154 ............................ <#thread_manager>
  [  2] pusharglist 1 ........................... <#thread_manager>
  [  4] extcall 100 ............................. <removeManager(#thread_manager)>
  [  6] pusharglistnoret 1 ...................... <removeManager(#thread_manager)>
  [  8] extcall 25 .............................. return removeManager(#thread_manager)
  [ 10] ret
end

on getThreadManager
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 93 .............................. <getObjectManager()>
  [  4] setlocal 0 .............................. tMgr = getObjectManager()
  [  6] getlocal 0 .............................. <tMgr>
  [  8] pushsymb 154 ............................ <#thread_manager>
  [ 10] pusharglist 2 ........................... <tMgr, #thread_manager>
  [ 12] objcall 102 ............................. <tMgr.managerExists(#thread_manager)>
  [ 14] not ..................................... <not tMgr.managerExists(#thread_manager)>
  [ 15] jmpifz [ 26] ............................ if not tMgr.managerExists(#thread_manager) then
  [ 18] pusharglist 0 ........................... <>
  [ 20] localcall 0 ............................. <constructThreadManager()>
  [ 22] pusharglistnoret 1 ...................... <constructThreadManager()>
  [ 24] extcall 25 .............................. return constructThreadManager()
  [ 26] getlocal 0 .............................. <tMgr>
  [ 28] pushsymb 154 ............................ <#thread_manager>
  [ 30] pusharglist 2 ........................... <tMgr, #thread_manager>
  [ 32] objcall 101 ............................. <tMgr.getManager(#thread_manager)>
  [ 34] pusharglistnoret 1 ...................... <tMgr.getManager(#thread_manager)>
  [ 36] extcall 25 .............................. return tMgr.getManager(#thread_manager)
  [ 38] ret
end

on createThread tid, tInitField
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] getparam 1 .............................. <tInitField>
  [  8] pusharglist 3 ........................... <getThreadManager(), tid, tInitField>
  [ 10] objcall 81 .............................. <getThreadManager().create(tid, tInitField)>
  [ 12] pusharglistnoret 1 ...................... <getThreadManager().create(tid, tInitField)>
  [ 14] extcall 25 .............................. return getThreadManager().create(tid, tInitField)
  [ 16] ret
end

on removeThread tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getThreadManager(), tid>
  [  8] objcall 125 ............................. <getThreadManager().Remove(tid)>
  [ 10] pusharglistnoret 1 ...................... <getThreadManager().Remove(tid)>
  [ 12] extcall 25 .............................. return getThreadManager().Remove(tid)
  [ 14] ret
end

on getThread tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getThreadManager(), tid>
  [  8] objcall 90 .............................. <getThreadManager().get(tid)>
  [ 10] pusharglistnoret 1 ...................... <getThreadManager().get(tid)>
  [ 12] extcall 25 .............................. return getThreadManager().get(tid)
  [ 14] ret
end

on threadExists tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getThreadManager(), tid>
  [  8] objcall 88 .............................. <getThreadManager().exists(tid)>
  [ 10] pusharglistnoret 1 ...................... <getThreadManager().exists(tid)>
  [ 12] extcall 25 .............................. return getThreadManager().exists(tid)
  [ 14] ret
end

on initThread tCastNumOrMemName
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] getparam 0 .............................. <tCastNumOrMemName>
  [  6] pusharglist 2 ........................... <getThreadManager(), tCastNumOrMemName>
  [  8] objcall 149 ............................. <getThreadManager().initThread(tCastNumOrMemName)>
  [ 10] pusharglistnoret 1 ...................... <getThreadManager().initThread(tCastNumOrMemName)>
  [ 12] extcall 25 .............................. return getThreadManager().initThread(tCastNumOrMemName)
  [ 14] ret
end

on initExistingThreads
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] pusharglist 1 ........................... <getThreadManager()>
  [  6] objcall 159 ............................. <getThreadManager().initAll()>
  [  8] pusharglistnoret 1 ...................... <getThreadManager().initAll()>
  [ 10] extcall 25 .............................. return getThreadManager().initAll()
  [ 12] ret
end

on closeThread tCastNumOrID
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] getparam 0 .............................. <tCastNumOrID>
  [  6] pusharglist 2 ........................... <getThreadManager(), tCastNumOrID>
  [  8] objcall 151 ............................. <getThreadManager().closeThread(tCastNumOrID)>
  [ 10] pusharglistnoret 1 ...................... <getThreadManager().closeThread(tCastNumOrID)>
  [ 12] extcall 25 .............................. return getThreadManager().closeThread(tCastNumOrID)
  [ 14] ret
end

on closeExistingThreads
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] pusharglist 1 ........................... <getThreadManager()>
  [  6] objcall 161 ............................. <getThreadManager().closeAll()>
  [  8] pusharglistnoret 1 ...................... <getThreadManager().closeAll()>
  [ 10] extcall 25 .............................. return getThreadManager().closeAll()
  [ 12] ret
end

on printThreads
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getThreadManager()>
  [  4] pusharglist 1 ........................... <getThreadManager()>
  [  6] objcall 126 ............................. <getThreadManager().print()>
  [  8] pusharglistnoret 1 ...................... <getThreadManager().print()>
  [ 10] extcall 25 .............................. return getThreadManager().print()
  [ 12] ret
end
