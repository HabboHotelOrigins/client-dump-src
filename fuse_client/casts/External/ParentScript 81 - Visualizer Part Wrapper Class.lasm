property pPartList, pImgMemberID, pTypeDef, pSprite, pLocZ, pWrapperStatus, pOffsets, pWrapID, pBoundingRect, pCapturesEvents, pSpriteProps, pOwnerID, pVisualizerLocZ

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 1656 ............................ pPartList = []
  [  6] pushsymb 1658 ........................... <#rendered>
  [  9] pushzero ................................ <0>
  [ 10] pushsymb 1659 ........................... <#rectOk>
  [ 13] pushzero ................................ <0>
  [ 14] pusharglist 4 ........................... <[#rendered: 0, #rectOk: 0]>
  [ 16] pushproplist ............................ <[#rendered: 0, #rectOk: 0]>
  [ 17] setprop 1657 ............................ pWrapperStatus = [#rendered: 0, #rectOk: 0]
  [ 20] pushzero ................................ <0>
  [ 21] pushzero ................................ <0>
  [ 22] pusharglist 2 ........................... <[0, 0]>
  [ 24] pushlist ................................ <[0, 0]>
  [ 25] setprop 1660 ............................ pOffsets = [0, 0]
  [ 28] pushcons 0 .............................. <"NoID">
  [ 30] setprop 1661 ............................ pWrapID = "NoID"
  [ 33] pushzero ................................ <0>
  [ 34] pushzero ................................ <0>
  [ 35] pushzero ................................ <0>
  [ 36] pushzero ................................ <0>
  [ 37] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 39] extcall 555 ............................. <rect(0, 0, 0, 0)>
  [ 42] setprop 1662 ............................ pBoundingRect = rect(0, 0, 0, 0)
  [ 45] pushzero ................................ <0>
  [ 46] setprop 1663 ............................ pCapturesEvents = 0
  [ 49] pushsymb 501 ............................ <#blend>
  [ 52] pushint8 100 ............................ <100>
  [ 54] pushsymb 560 ............................ <#ink>
  [ 57] pushint8 41 ............................. <41>
  [ 59] pushsymb 1225 ........................... <#bgColor>
  [ 62] pushint16 255 ........................... <255>
  [ 65] pushint16 255 ........................... <255>
  [ 68] pushint16 255 ........................... <255>
  [ 71] pusharglist 3 ........................... <255, 255, 255>
  [ 73] extcall 576 ............................. <rgb(255, 255, 255)>
  [ 76] pusharglist 6 ........................... <[#blend: 100, #ink: 41, #bgColor: rgb(255, 255, 255)]>
  [ 78] pushproplist ............................ <[#blend: 100, #ink: 41, #bgColor: rgb(255, 255, 255)]>
  [ 79] setprop 1664 ............................ pSpriteProps = [#blend: 100, #ink: 41, #bgColor: rgb(255, 255, 255)]
  [ 82] pushzero ................................ <0>
  [ 83] setprop 1665 ............................ pVisualizerLocZ = 0
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglistnoret 1 ...................... <1>
  [ 90] extcall 25 .............................. return 1
  [ 92] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 1656 ............................ pPartList = []
  [  6] getprop 1666 ............................ <pImgMemberID>
  [  9] pusharglist 1 ........................... <pImgMemberID>
  [ 11] extcall 20 .............................. <voidp(pImgMemberID)>
  [ 13] not ..................................... <not voidp(pImgMemberID)>
  [ 14] jmpifz [ 34] ............................ if not voidp(pImgMemberID) then
  [ 17] getprop 1666 ............................ <pImgMemberID>
  [ 20] pusharglist 1 ........................... <pImgMemberID>
  [ 22] extcall 170 ............................. <memberExists(pImgMemberID)>
  [ 24] jmpifz [ 34] ............................ if memberExists(pImgMemberID) then
  [ 27] getprop 1666 ............................ <pImgMemberID>
  [ 30] pusharglistnoret 1 ...................... <pImgMemberID>
  [ 32] extcall 165 ............................. removeMember(pImgMemberID)
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 1 ...................... <1>
  [ 38] extcall 25 .............................. return 1
  [ 40] ret
end

on define me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pusharglist 1 ........................... <tProps>
  [  4] extcall 488 ............................. <ilk(tProps)>
  [  7] pushsymb 807 ............................ <#propList>
  [ 10] nteq .................................... <ilk(tProps) <> #propList>
  [ 11] jmpifz [ 32] ............................ if ilk(tProps) <> #propList then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 1 .............................. <"Not a proplist">
  [ 18] getparam 1 .............................. <tProps>
  [ 20] joinpadstr .............................. <"Not a proplist" && tProps>
  [ 21] pushsymb 434 ............................ <#define>
  [ 24] pusharglist 3 ........................... <me, "Not a proplist" && tProps, #define>
  [ 26] extcall 39 .............................. <error(me, "Not a proplist" && tProps, #define)>
  [ 28] pusharglistnoret 1 ...................... <error(me, "Not a proplist" && tProps, #define)>
  [ 30] extcall 25 .............................. return error(me, "Not a proplist" && tProps, #define)
  [ 32] getparam 1 .............................. <tProps>
  [ 34] pushsymb 1226 ........................... <#palette>
  [ 37] pusharglist 2 ........................... <tProps, #palette>
  [ 39] objcall 54 .............................. <tProps[#palette]>
  [ 41] pusharglist 1 ........................... <tProps[#palette]>
  [ 43] extcall 20 .............................. <voidp(tProps[#palette])>
  [ 45] not ..................................... <not voidp(tProps[#palette])>
  [ 46] jmpifz [ 68] ............................ if not voidp(tProps[#palette]) then
  [ 49] getprop 1664 ............................ <pSpriteProps>
  [ 52] pushsymb 1226 ........................... <#palette>
  [ 55] getparam 1 .............................. <tProps>
  [ 57] pushsymb 1226 ........................... <#palette>
  [ 60] pusharglist 2 ........................... <tProps, #palette>
  [ 62] objcall 54 .............................. <tProps[#palette]>
  [ 64] pusharglistnoret 3 ...................... <pSpriteProps, #palette, tProps[#palette]>
  [ 66] objcall 24 .............................. pSpriteProps[#palette] = tProps[#palette]
  [ 68] getparam 1 .............................. <tProps>
  [ 70] pushsymb 34 ............................. <#id>
  [ 72] pusharglist 2 ........................... <tProps, #id>
  [ 74] objcall 54 .............................. <tProps[#id]>
  [ 76] pusharglist 1 ........................... <tProps[#id]>
  [ 78] extcall 20 .............................. <voidp(tProps[#id])>
  [ 80] not ..................................... <not voidp(tProps[#id])>
  [ 81] jmpifz [ 95] ............................ if not voidp(tProps[#id]) then
  [ 84] getparam 1 .............................. <tProps>
  [ 86] pushsymb 34 ............................. <#id>
  [ 88] pusharglist 2 ........................... <tProps, #id>
  [ 90] objcall 54 .............................. <tProps[#id]>
  [ 92] setprop 1661 ............................ pWrapID = tProps[#id]
  [ 95] getparam 1 .............................. <tProps>
  [ 97] pushsymb 1327 ........................... <#typeDef>
  [100] pusharglist 2 ........................... <tProps, #typeDef>
  [102] objcall 54 .............................. <tProps[#typeDef]>
  [104] setprop 1667 ............................ pTypeDef = tProps[#typeDef]
  [107] getparam 1 .............................. <tProps>
  [109] pushsymb 1325 ........................... <#offsetx>
  [112] pusharglist 2 ........................... <tProps, #offsetx>
  [114] objcall 54 .............................. <tProps[#offsetx]>
  [116] pusharglist 1 ........................... <tProps[#offsetx]>
  [118] extcall 955 ............................. <integer(tProps[#offsetx])>
  [121] getparam 1 .............................. <tProps>
  [123] pushsymb 1326 ........................... <#offsety>
  [126] pusharglist 2 ........................... <tProps, #offsety>
  [128] objcall 54 .............................. <tProps[#offsety]>
  [130] pusharglist 1 ........................... <tProps[#offsety]>
  [132] extcall 955 ............................. <integer(tProps[#offsety])>
  [135] pusharglist 2 ........................... <[integer(tProps[#offsetx]), integer(tProps[#offsety])]>
  [137] pushlist ................................ <[integer(tProps[#offsetx]), integer(tProps[#offsety])]>
  [138] setprop 1660 ............................ pOffsets = [integer(tProps[#offsetx]), integer(tProps[#offsety])]
  [141] getparam 1 .............................. <tProps>
  [143] pushsymb 881 ............................ <#locZ>
  [146] pusharglist 2 ........................... <tProps, #locZ>
  [148] objcall 54 .............................. <tProps[#locZ]>
  [150] pusharglist 1 ........................... <tProps[#locZ]>
  [152] extcall 955 ............................. <integer(tProps[#locZ])>
  [155] setprop 1665 ............................ pVisualizerLocZ = integer(tProps[#locZ])
  [158] pushcons 2 .............................. <"VizWrap_">
  [160] getprop 1661 ............................ <pWrapID>
  [163] joinstr ................................. <"VizWrap_" & pWrapID>
  [164] pushcons 3 .............................. <"_">
  [166] joinstr ................................. <"VizWrap_" & pWrapID & "_">
  [167] getparam 0 .............................. <me>
  [169] pusharglist 1 ........................... <me>
  [171] objcall 3 ............................... <me.getID()>
  [173] joinstr ................................. <"VizWrap_" & pWrapID & "_" & me.getID()>
  [174] setprop 1666 ............................ pImgMemberID = "VizWrap_" & pWrapID & "_" & me.getID()
  [177] pushsymb 1658 ........................... <#rendered>
  [180] pushzero ................................ <0>
  [181] pushsymb 1659 ........................... <#rectOk>
  [184] pushzero ................................ <0>
  [185] pusharglist 4 ........................... <[#rendered: 0, #rectOk: 0]>
  [187] pushproplist ............................ <[#rendered: 0, #rectOk: 0]>
  [188] setprop 1657 ............................ pWrapperStatus = [#rendered: 0, #rectOk: 0]
  [191] pushint8 1 .............................. <1>
  [193] pusharglistnoret 1 ...................... <1>
  [195] extcall 25 .............................. return 1
  [197] ret
end

on addPart me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pusharglist 1 ........................... <tProps>
  [  4] extcall 488 ............................. <ilk(tProps)>
  [  7] pushsymb 807 ............................ <#propList>
  [ 10] nteq .................................... <ilk(tProps) <> #propList>
  [ 11] jmpifz [ 32] ............................ if ilk(tProps) <> #propList then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 1 .............................. <"Not a proplist">
  [ 18] getparam 1 .............................. <tProps>
  [ 20] joinpadstr .............................. <"Not a proplist" && tProps>
  [ 21] pushsymb 1328 ........................... <#addPart>
  [ 24] pusharglist 3 ........................... <me, "Not a proplist" && tProps, #addPart>
  [ 26] extcall 39 .............................. <error(me, "Not a proplist" && tProps, #addPart)>
  [ 28] pusharglistnoret 1 ...................... <error(me, "Not a proplist" && tProps, #addPart)>
  [ 30] extcall 25 .............................. return error(me, "Not a proplist" && tProps, #addPart)
  [ 32] getparam 1 .............................. <tProps>
  [ 34] pushsymb 41 ............................. <#member>
  [ 36] pusharglist 2 ........................... <tProps, #member>
  [ 38] objcall 54 .............................. <tProps[#member]>
  [ 40] pusharglist 1 ........................... <tProps[#member]>
  [ 42] extcall 170 ............................. <memberExists(tProps[#member])>
  [ 44] not ..................................... <not memberExists(tProps[#member])>
  [ 45] jmpifz [116] ............................ if not memberExists(tProps[#member]) then / else
  [ 48] getparam 1 .............................. <tProps>
  [ 50] pushsymb 41 ............................. <#member>
  [ 52] pusharglist 2 ........................... <tProps, #member>
  [ 54] objcall 54 .............................. <tProps[#member]>
  [ 56] pusharglist 1 ........................... <tProps[#member]>
  [ 58] extcall 52 .............................. <getmemnum(tProps[#member])>
  [ 60] pusharglist 1 ........................... <getmemnum(tProps[#member])>
  [ 62] extcall 1547 ............................ <abs(getmemnum(tProps[#member]))>
  [ 65] pusharglist 1 ........................... <abs(getmemnum(tProps[#member]))>
  [ 67] extcall 41 .............................. <member(abs(getmemnum(tProps[#member])))>
  [ 69] setlocal 0 .............................. tpartNum = member(abs(getmemnum(tProps[#member])))
  [ 71] getlocal 0 .............................. <tpartNum>
  [ 73] pushzero ................................ <0>
  [ 74] gt ...................................... <tpartNum > 0>
  [ 75] jmpifz [ 89] ............................ if tpartNum > 0 then / else
  [ 78] getlocal 0 .............................. <tpartNum>
  [ 80] pusharglist 1 ........................... <tpartNum>
  [ 82] extcall 41 .............................. <member(tpartNum)>
  [ 84] setlocal 1 .............................. tPartMember = member(tpartNum)
  [ 86] jmp [113]
  [ 89] getparam 0 .............................. <me>
  [ 91] pushcons 4 .............................. <"No member found:">
  [ 93] getparam 1 .............................. <tProps>
  [ 95] pushsymb 41 ............................. <#member>
  [ 97] pusharglist 2 ........................... <tProps, #member>
  [ 99] objcall 54 .............................. <tProps[#member]>
  [101] joinpadstr .............................. <"No member found:" && tProps[#member]>
  [102] pushsymb 1328 ........................... <#addPart>
  [105] pusharglist 3 ........................... <me, "No member found:" && tProps[#member], #addPart>
  [107] extcall 39 .............................. <error(me, "No member found:" && tProps[#member], #addPart)>
  [109] pusharglistnoret 1 ...................... <error(me, "No member found:" && tProps[#member], #addPart)>
  [111] extcall 25 .............................. return error(me, "No member found:" && tProps[#member], #addPart)
  [113] jmp [139]
  [116] getparam 1 .............................. <tProps>
  [118] pushsymb 41 ............................. <#member>
  [120] pusharglist 2 ........................... <tProps, #member>
  [122] objcall 54 .............................. <tProps[#member]>
  [124] pusharglist 1 ........................... <tProps[#member]>
  [126] extcall 52 .............................. <getmemnum(tProps[#member])>
  [128] pusharglist 1 ........................... <getmemnum(tProps[#member])>
  [130] extcall 1547 ............................ <abs(getmemnum(tProps[#member]))>
  [133] pusharglist 1 ........................... <abs(getmemnum(tProps[#member]))>
  [135] extcall 41 .............................. <member(abs(getmemnum(tProps[#member])))>
  [137] setlocal 1 .............................. tPartMember = member(abs(getmemnum(tProps[#member])))
  [139] getparam 1 .............................. <tProps>
  [141] pushsymb 504 ............................ <#locH>
  [144] pusharglist 2 ........................... <tProps, #locH>
  [146] objcall 54 .............................. <tProps[#locH]>
  [148] getprop 1660 ............................ <pOffsets>
  [151] pushint8 1 .............................. <1>
  [153] pusharglist 2 ........................... <pOffsets, 1>
  [155] objcall 54 .............................. <pOffsets[1]>
  [157] add ..................................... <tProps[#locH] + pOffsets[1]>
  [158] getlocal 1 .............................. <tPartMember>
  [160] pushsymb 499 ............................ <#regPoint>
  [163] pushint8 1 .............................. <1>
  [165] pusharglist 3 ........................... <tPartMember, #regPoint, 1>
  [167] objcall 290 ............................. <tPartMember.regPoint[1]>
  [170] sub ..................................... <tProps[#locH] + pOffsets[1] - tPartMember.regPoint[1]>
  [171] setlocal 2 .............................. tX1 = tProps[#locH] + pOffsets[1] - tPartMember.regPoint[1]
  [173] getparam 1 .............................. <tProps>
  [175] pushsymb 505 ............................ <#locV>
  [178] pusharglist 2 ........................... <tProps, #locV>
  [180] objcall 54 .............................. <tProps[#locV]>
  [182] getprop 1660 ............................ <pOffsets>
  [185] pushint8 2 .............................. <2>
  [187] pusharglist 2 ........................... <pOffsets, 2>
  [189] objcall 54 .............................. <pOffsets[2]>
  [191] add ..................................... <tProps[#locV] + pOffsets[2]>
  [192] getlocal 1 .............................. <tPartMember>
  [194] pushsymb 499 ............................ <#regPoint>
  [197] pushint8 2 .............................. <2>
  [199] pusharglist 3 ........................... <tPartMember, #regPoint, 2>
  [201] objcall 290 ............................. <tPartMember.regPoint[2]>
  [204] sub ..................................... <tProps[#locV] + pOffsets[2] - tPartMember.regPoint[2]>
  [205] setlocal 3 .............................. tY1 = tProps[#locV] + pOffsets[2] - tPartMember.regPoint[2]
  [207] getlocal 2 .............................. <tX1>
  [209] getparam 1 .............................. <tProps>
  [211] pushsymb 42 ............................. <#width>
  [213] pusharglist 2 ........................... <tProps, #width>
  [215] objcall 54 .............................. <tProps[#width]>
  [217] add ..................................... <tX1 + tProps[#width]>
  [218] setlocal 4 .............................. tX2 = tX1 + tProps[#width]
  [220] getlocal 3 .............................. <tY1>
  [222] getparam 1 .............................. <tProps>
  [224] pushsymb 43 ............................. <#height>
  [226] pusharglist 2 ........................... <tProps, #height>
  [228] objcall 54 .............................. <tProps[#height]>
  [230] add ..................................... <tY1 + tProps[#height]>
  [231] setlocal 5 .............................. tY2 = tY1 + tProps[#height]
  [233] getparam 1 .............................. <tProps>
  [235] pushsymb 1668 ........................... <#screenrect>
  [238] getlocal 2 .............................. <tX1>
  [240] getlocal 3 .............................. <tY1>
  [242] getlocal 4 .............................. <tX2>
  [244] getlocal 5 .............................. <tY2>
  [246] pusharglist 4 ........................... <tX1, tY1, tX2, tY2>
  [248] extcall 555 ............................. <rect(tX1, tY1, tX2, tY2)>
  [251] pusharglistnoret 3 ...................... <tProps, #screenrect, rect(tX1, tY1, tX2, tY2)>
  [253] objcall 24 .............................. tProps[#screenrect] = rect(tX1, tY1, tX2, tY2)
  [255] getmovieprop 286 ........................ <the itemDelimiter>
  [258] setlocal 6 .............................. tDelim = the itemDelimiter
  [260] pushcons 3 .............................. <"_">
  [262] setmovieprop 286 ........................ the itemDelimiter = "_"
  [265] getparam 1 .............................. <tProps>
  [267] pushsymb 1669 ........................... <#class>
  [270] getparam 1 .............................. <tProps>
  [272] pushsymb 41 ............................. <#member>
  [274] pusharglist 2 ........................... <tProps, #member>
  [276] objcall 54 .............................. <tProps[#member]>
  [278] pushsymb 287 ............................ <#item>
  [281] pushint8 2 .............................. <2>
  [283] pusharglist 3 ........................... <tProps[#member], #item, 2>
  [285] objcall 290 ............................. <tProps[#member].item[2]>
  [288] pusharglistnoret 3 ...................... <tProps, #class, tProps[#member].item[2]>
  [290] objcall 24 .............................. tProps[#class] = tProps[#member].item[2]
  [292] getlocal 6 .............................. <tDelim>
  [294] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [297] getparam 1 .............................. <tProps>
  [299] pushsymb 881 ............................ <#locZ>
  [302] pusharglist 2 ........................... <tProps, #locZ>
  [304] objcall 54 .............................. <tProps[#locZ]>
  [306] pusharglist 1 ........................... <tProps[#locZ]>
  [308] extcall 20 .............................. <voidp(tProps[#locZ])>
  [310] not ..................................... <not voidp(tProps[#locZ])>
  [311] jmpifz [326] ............................ if not voidp(tProps[#locZ]) then
  [314] getparam 1 .............................. <tProps>
  [316] pushsymb 881 ............................ <#locZ>
  [319] pusharglist 2 ........................... <tProps, #locZ>
  [321] objcall 54 .............................. <tProps[#locZ]>
  [323] setprop 1292 ............................ pLocZ = tProps[#locZ]
  [326] getparam 1 .............................. <tProps>
  [328] pushsymb 560 ............................ <#ink>
  [331] pusharglist 2 ........................... <tProps, #ink>
  [333] objcall 54 .............................. <tProps[#ink]>
  [335] pusharglist 1 ........................... <tProps[#ink]>
  [337] extcall 20 .............................. <voidp(tProps[#ink])>
  [339] not ..................................... <not voidp(tProps[#ink])>
  [340] jmpifz [362] ............................ if not voidp(tProps[#ink]) then
  [343] getprop 1664 ............................ <pSpriteProps>
  [346] pushsymb 560 ............................ <#ink>
  [349] getparam 1 .............................. <tProps>
  [351] pushsymb 560 ............................ <#ink>
  [354] pusharglist 2 ........................... <tProps, #ink>
  [356] objcall 54 .............................. <tProps[#ink]>
  [358] pusharglistnoret 3 ...................... <pSpriteProps, #ink, tProps[#ink]>
  [360] objcall 24 .............................. pSpriteProps[#ink] = tProps[#ink]
  [362] getparam 1 .............................. <tProps>
  [364] pushsymb 501 ............................ <#blend>
  [367] pusharglist 2 ........................... <tProps, #blend>
  [369] objcall 54 .............................. <tProps[#blend]>
  [371] pusharglist 1 ........................... <tProps[#blend]>
  [373] extcall 20 .............................. <voidp(tProps[#blend])>
  [375] not ..................................... <not voidp(tProps[#blend])>
  [376] jmpifz [398] ............................ if not voidp(tProps[#blend]) then
  [379] getprop 1664 ............................ <pSpriteProps>
  [382] pushsymb 501 ............................ <#blend>
  [385] getparam 1 .............................. <tProps>
  [387] pushsymb 501 ............................ <#blend>
  [390] pusharglist 2 ........................... <tProps, #blend>
  [392] objcall 54 .............................. <tProps[#blend]>
  [394] pusharglistnoret 3 ...................... <pSpriteProps, #blend, tProps[#blend]>
  [396] objcall 24 .............................. pSpriteProps[#blend] = tProps[#blend]
  [398] getparam 1 .............................. <tProps>
  [400] pushsymb 1226 ........................... <#palette>
  [403] pusharglist 2 ........................... <tProps, #palette>
  [405] objcall 54 .............................. <tProps[#palette]>
  [407] pusharglist 1 ........................... <tProps[#palette]>
  [409] extcall 20 .............................. <voidp(tProps[#palette])>
  [411] not ..................................... <not voidp(tProps[#palette])>
  [412] jmpifz [434] ............................ if not voidp(tProps[#palette]) then
  [415] getprop 1664 ............................ <pSpriteProps>
  [418] pushsymb 1226 ........................... <#palette>
  [421] getparam 1 .............................. <tProps>
  [423] pushsymb 1226 ........................... <#palette>
  [426] pusharglist 2 ........................... <tProps, #palette>
  [428] objcall 54 .............................. <tProps[#palette]>
  [430] pusharglistnoret 3 ...................... <pSpriteProps, #palette, tProps[#palette]>
  [432] objcall 24 .............................. pSpriteProps[#palette] = tProps[#palette]
  [434] getprop 1663 ............................ <pCapturesEvents>
  [437] pushzero ................................ <0>
  [438] eq ...................................... <pCapturesEvents = 0>
  [439] jmpifz [454] ............................ if pCapturesEvents = 0 then
  [442] getparam 1 .............................. <tProps>
  [444] pushsymb 1670 ........................... <#catchEvents>
  [447] pusharglist 2 ........................... <tProps, #catchEvents>
  [449] objcall 54 .............................. <tProps[#catchEvents]>
  [451] setprop 1663 ............................ pCapturesEvents = tProps[#catchEvents]
  [454] getprop 1656 ............................ <pPartList>
  [457] getparam 1 .............................. <tProps>
  [459] pusharglistnoret 2 ...................... <pPartList, tProps>
  [461] objcall 664 ............................. pPartList.append(tProps)
  [464] pushsymb 1658 ........................... <#rendered>
  [467] pushzero ................................ <0>
  [468] pushsymb 1659 ........................... <#rectOk>
  [471] pushzero ................................ <0>
  [472] pusharglist 4 ........................... <[#rendered: 0, #rectOk: 0]>
  [474] pushproplist ............................ <[#rendered: 0, #rectOk: 0]>
  [475] setprop 1657 ............................ pWrapperStatus = [#rendered: 0, #rectOk: 0]
  [478] pushint8 1 .............................. <1>
  [480] pusharglistnoret 1 ...................... <1>
  [482] extcall 25 .............................. return 1
  [484] ret
end

on removePart me, tPartId
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1656 ............................ <pPartList>
  [  9] getobjprop 22 ........................... <pPartList.count>
  [ 11] lteq
  [ 12] jmpifz [ 72] ............................ repeat with tPos = 1 to pPartList.count
  [ 15] getprop 1656 ............................ <pPartList>
  [ 18] getlocal 0 .............................. <tPos>
  [ 20] pusharglist 2 ........................... <pPartList, tPos>
  [ 22] objcall 54 .............................. <pPartList[tPos]>
  [ 24] pushsymb 34 ............................. <#id>
  [ 26] pusharglist 2 ........................... <pPartList[tPos], #id>
  [ 28] objcall 54 .............................. <pPartList[tPos][#id]>
  [ 30] getparam 1 .............................. <tPartId>
  [ 32] eq ...................................... <pPartList[tPos][#id] = tPartId>
  [ 33] jmpifz [ 63] ............................ if pPartList[tPos][#id] = tPartId then
  [ 36] getprop 1656 ............................ <pPartList>
  [ 39] getlocal 0 .............................. <tPos>
  [ 41] pusharglistnoret 2 ...................... <pPartList, tPos>
  [ 43] objcall 723 ............................. pPartList.deleteAt(tPos)
  [ 46] pushsymb 1658 ........................... <#rendered>
  [ 49] pushzero ................................ <0>
  [ 50] pushsymb 1659 ........................... <#rectOk>
  [ 53] pushzero ................................ <0>
  [ 54] pusharglist 4 ........................... <[#rendered: 0, #rectOk: 0]>
  [ 56] pushproplist ............................ <[#rendered: 0, #rectOk: 0]>
  [ 57] setprop 1657 ............................ pWrapperStatus = [#rendered: 0, #rectOk: 0]
  [ 60] jmp [ 72] ............................... exit repeat
  [ 63] pushint8 1
  [ 65] getlocal 0
  [ 67] add
  [ 68] setlocal 0
  [ 70] endrepeat [  4]
  [ 72] getparam 0 .............................. <me>
  [ 74] pusharglist 1 ........................... <me>
  [ 76] objcall 1323 ............................ <me.updateWrap()>
  [ 79] pusharglistnoret 1 ...................... <me.updateWrap()>
  [ 81] extcall 25 .............................. return me.updateWrap()
  [ 83] ret
end

on setProperty me, tProp, tValue
  [  0] getparam 1 .............................. <tProp>
  [  2] pusharglist 1 ........................... <tProp>
  [  4] extcall 20 .............................. <voidp(tProp)>
  [  6] getparam 2 .............................. <tValue>
  [  8] pusharglist 1 ........................... <tValue>
  [ 10] extcall 20 .............................. <voidp(tValue)>
  [ 12] or ...................................... <voidp(tProp) or voidp(tValue)>
  [ 13] jmpifz [ 21] ............................ if voidp(tProp) or voidp(tValue) then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 25 .............................. return 0
  [ 21] getparam 1 .............................. <tProp>
  [ 23] peek 0 .................................. case tProp of
  [ 25] pushsymb 36 ............................. <#sprite>
  [ 27] eq
  [ 28] jmpifz [ 48] ............................ (case) #sprite:
  [ 31] getparam 0 .............................. <me>
  [ 33] getparam 2 .............................. <tValue>
  [ 35] pusharglist 1 ........................... <tValue>
  [ 37] extcall 955 ............................. <integer(tValue)>
  [ 40] pusharglistnoret 2 ...................... <me, integer(tValue)>
  [ 42] objcall 1652 ............................ me.setSprite(integer(tValue))
  [ 45] jmp [183]
  [ 48] peek 0
  [ 50] pushsymb 1314 ........................... <#owner>
  [ 53] eq
  [ 54] jmpifz [ 65] ............................ (case) #owner:
  [ 57] getparam 2 .............................. <tValue>
  [ 59] setprop 1678 ............................ pOwnerID = tValue
  [ 62] jmp [183]
  [ 65] peek 0
  [ 67] pushsymb 881 ............................ <#locZ>
  [ 70] eq
  [ 71] jmpifz [ 87] ............................ (case) #locZ:
  [ 74] getparam 2 .............................. <tValue>
  [ 76] pusharglist 1 ........................... <tValue>
  [ 78] extcall 955 ............................. <integer(tValue)>
  [ 81] setprop 1292 ............................ pLocZ = integer(tValue)
  [ 84] jmp [183]
  [ 87] peek 0
  [ 89] pushsymb 1302 ........................... <#visLocZ>
  [ 92] eq
  [ 93] jmpifz [109] ............................ (case) #visLocZ:
  [ 96] getparam 2 .............................. <tValue>
  [ 98] pusharglist 1 ........................... <tValue>
  [100] extcall 955 ............................. <integer(tValue)>
  [103] setprop 1665 ............................ pVisualizerLocZ = integer(tValue)
  [106] jmp [183]
  [109] peek 0
  [111] pushsymb 501 ............................ <#blend>
  [114] eq
  [115] jmpifz [138] ............................ (case) #blend:
  [118] getprop 1664 ............................ <pSpriteProps>
  [121] pushsymb 501 ............................ <#blend>
  [124] getparam 2 .............................. <tValue>
  [126] pusharglist 1 ........................... <tValue>
  [128] extcall 955 ............................. <integer(tValue)>
  [131] pusharglistnoret 3 ...................... <pSpriteProps, #blend, integer(tValue)>
  [133] objcall 24 .............................. pSpriteProps[#blend] = integer(tValue)
  [135] jmp [183]
  [138] peek 0
  [140] pushsymb 560 ............................ <#ink>
  [143] eq
  [144] jmpifz [162] ............................ (case) #ink:
  [147] getprop 1664 ............................ <pSpriteProps>
  [150] pushsymb 560 ............................ <#ink>
  [153] getparam 2 .............................. <tValue>
  [155] pusharglistnoret 3 ...................... <pSpriteProps, #ink, tValue>
  [157] objcall 24 .............................. pSpriteProps[#ink] = tValue
  [159] jmp [183]
  [162] peek 0
  [164] pushsymb 1226 ........................... <#palette>
  [167] eq
  [168] jmpifz [183] ............................ (case) #palette:
  [171] getprop 1664 ............................ <pSpriteProps>
  [174] pushsymb 1226 ........................... <#palette>
  [177] getparam 2 .............................. <tValue>
  [179] pusharglistnoret 3 ...................... <pSpriteProps, #palette, tValue>
  [181] objcall 24 .............................. pSpriteProps[#palette] = tValue
  [183] pop 1 ................................... end case
  [185] pushint8 1 .............................. <1>
  [187] pusharglistnoret 1 ...................... <1>
  [189] extcall 25 .............................. return 1
  [191] ret
end

on getProperty me, tProp
  [  0] getparam 1 .............................. <tProp>
  [  2] peek 0 .................................. case tProp of
  [  4] pushsymb 881 ............................ <#locZ>
  [  7] eq
  [  8] jmpifz [ 27] ............................ (case) #locZ:
  [ 11] pop 1
  [ 13] getprop 1292 ............................ <pLocZ>
  [ 16] getprop 1665 ............................ <pVisualizerLocZ>
  [ 19] add ..................................... <pLocZ + pVisualizerLocZ>
  [ 20] pusharglistnoret 1 ...................... <pLocZ + pVisualizerLocZ>
  [ 22] extcall 25 .............................. return pLocZ + pVisualizerLocZ
  [ 24] jmp [161]
  [ 27] peek 0
  [ 29] pushsymb 36 ............................. <#sprite>
  [ 31] eq
  [ 32] jmpifz [ 46] ............................ (case) #sprite:
  [ 35] pop 1
  [ 37] getprop 35 .............................. <pSprite>
  [ 39] pusharglistnoret 1 ...................... <pSprite>
  [ 41] extcall 25 .............................. return pSprite
  [ 43] jmp [161]
  [ 46] peek 0
  [ 48] pushsymb 454 ............................ <#type>
  [ 51] eq
  [ 52] jmpifz [ 67] ............................ (case) #type:
  [ 55] pop 1
  [ 57] getprop 1667 ............................ <pTypeDef>
  [ 60] pusharglistnoret 1 ...................... <pTypeDef>
  [ 62] extcall 25 .............................. return pTypeDef
  [ 64] jmp [161]
  [ 67] peek 0
  [ 69] pushsymb 34 ............................. <#id>
  [ 71] eq
  [ 72] jmpifz [ 90] ............................ (case) #id:
  [ 75] pop 1
  [ 77] getparam 0 .............................. <me>
  [ 79] pusharglist 1 ........................... <me>
  [ 81] objcall 3 ............................... <me.getID()>
  [ 83] pusharglistnoret 1 ...................... <me.getID()>
  [ 85] extcall 25 .............................. return me.getID()
  [ 87] jmp [161]
  [ 90] peek 0
  [ 92] pushsymb 1679 ........................... <#imagePntr>
  [ 95] eq
  [ 96] jmpifz [115] ............................ (case) #imagePntr:
  [ 99] pop 1
  [101] getparam 0 .............................. <me>
  [103] pusharglist 1 ........................... <me>
  [105] objcall 1651 ............................ <me.getImagePointer()>
  [108] pusharglistnoret 1 ...................... <me.getImagePointer()>
  [110] extcall 25 .............................. return me.getImagePointer()
  [112] jmp [161]
  [115] peek 0
  [117] pushsymb 770 ............................ <#Active>
  [120] eq
  [121] jmpifz [136] ............................ (case) #Active:
  [124] pop 1
  [126] getprop 1663 ............................ <pCapturesEvents>
  [129] pusharglistnoret 1 ...................... <pCapturesEvents>
  [131] extcall 25 .............................. return pCapturesEvents
  [133] jmp [161]
  [136] peek 0
  [138] pushsymb 501 ............................ <#blend>
  [141] eq
  [142] jmpifz [161] ............................ (case) #blend:
  [145] pop 1
  [147] getprop 1664 ............................ <pSpriteProps>
  [150] pushsymb 501 ............................ <#blend>
  [153] pusharglist 2 ........................... <pSpriteProps, #blend>
  [155] objcall 54 .............................. <pSpriteProps[#blend]>
  [157] pusharglistnoret 1 ...................... <pSpriteProps[#blend]>
  [159] extcall 25 .............................. return pSpriteProps[#blend]
  [161] pop 1 ................................... end case
  [163] pushzero ................................ <0>
  [164] pusharglistnoret 1 ...................... <0>
  [166] extcall 25 .............................. return 0
  [168] ret
end

on fitRectToWall me, tRect, tSlope
  [  0] getprop 1667 ............................ <pTypeDef>
  [  3] pushsymb 1316 ........................... <#wallleft>
  [  6] eq ...................................... <pTypeDef = #wallleft>
  [  7] getprop 1667 ............................ <pTypeDef>
  [ 10] pushsymb 1317 ........................... <#wallright>
  [ 13] eq ...................................... <pTypeDef = #wallright>
  [ 14] or ...................................... <(pTypeDef = #wallleft) or (pTypeDef = #wallright)>
  [ 15] not ..................................... <not ((pTypeDef = #wallleft) or (pTypeDef = #wallright))>
  [ 16] jmpifz [ 30] ............................ if not ((pTypeDef = #wallleft) or (pTypeDef = #wallright)) then
  [ 19] pushsymb 1319 ........................... <#insideWall>
  [ 22] pushzero ................................ <0>
  [ 23] pusharglist 2 ........................... <[#insideWall: 0]>
  [ 25] pushproplist ............................ <[#insideWall: 0]>
  [ 26] pusharglistnoret 1 ...................... <[#insideWall: 0]>
  [ 28] extcall 25 .............................. return [#insideWall: 0]
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglist 1 ........................... <me>
  [ 34] objcall 1650 ............................ <me.getBounds()>
  [ 37] setlocal 0 .............................. tB = me.getBounds()
  [ 39] getlocal 0 .............................. <tB>
  [ 41] pushint8 1 .............................. <1>
  [ 43] pusharglist 2 ........................... <tB, 1>
  [ 45] objcall 54 .............................. <tB[1]>
  [ 47] getparam 1 .............................. <tRect>
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglist 2 ........................... <tRect, 1>
  [ 53] objcall 54 .............................. <tRect[1]>
  [ 55] gt ...................................... <tB[1] > tRect[1]>
  [ 56] getlocal 0 .............................. <tB>
  [ 58] pushint8 2 .............................. <2>
  [ 60] pusharglist 2 ........................... <tB, 2>
  [ 62] objcall 54 .............................. <tB[2]>
  [ 64] getparam 1 .............................. <tRect>
  [ 66] pushint8 2 .............................. <2>
  [ 68] pusharglist 2 ........................... <tRect, 2>
  [ 70] objcall 54 .............................. <tRect[2]>
  [ 72] gt ...................................... <tB[2] > tRect[2]>
  [ 73] or ...................................... <(tB[1] > tRect[1]) or (tB[2] > tRect[2])>
  [ 74] getlocal 0 .............................. <tB>
  [ 76] pushint8 3 .............................. <3>
  [ 78] pusharglist 2 ........................... <tB, 3>
  [ 80] objcall 54 .............................. <tB[3]>
  [ 82] getparam 1 .............................. <tRect>
  [ 84] pushint8 3 .............................. <3>
  [ 86] pusharglist 2 ........................... <tRect, 3>
  [ 88] objcall 54 .............................. <tRect[3]>
  [ 90] lt ...................................... <tB[3] < tRect[3]>
  [ 91] or ...................................... <(tB[1] > tRect[1]) or (tB[2] > tRect[2]) or (tB[3] < tRect[3])>
  [ 92] getlocal 0 .............................. <tB>
  [ 94] pushint8 4 .............................. <4>
  [ 96] pusharglist 2 ........................... <tB, 4>
  [ 98] objcall 54 .............................. <tB[4]>
  [100] getparam 1 .............................. <tRect>
  [102] pushint8 4 .............................. <4>
  [104] pusharglist 2 ........................... <tRect, 4>
  [106] objcall 54 .............................. <tRect[4]>
  [108] lt ...................................... <tB[4] < tRect[4]>
  [109] or ...................................... <(tB[1] > tRect[1]) or (tB[2] > tRect[2]) or (tB[3] < tRect[3]) or (tB[4] < tRect[4])>
  [110] jmpifz [124] ............................ if (tB[1] > tRect[1]) or (tB[2] > tRect[2]) or (tB[3] < tRect[3]) or (tB[4] < tRect[4]) then
  [113] pushsymb 1319 ........................... <#insideWall>
  [116] pushzero ................................ <0>
  [117] pusharglist 2 ........................... <[#insideWall: 0]>
  [119] pushproplist ............................ <[#insideWall: 0]>
  [120] pusharglistnoret 1 ...................... <[#insideWall: 0]>
  [122] extcall 25 .............................. return [#insideWall: 0]
  [124] getprop 1667 ............................ <pTypeDef>
  [127] pushsymb 1316 ........................... <#wallleft>
  [130] eq ...................................... <pTypeDef = #wallleft>
  [131] jmpifz [195] ............................ if pTypeDef = #wallleft then / else
  [134] getparam 1 .............................. <tRect>
  [136] pushint8 3 .............................. <3>
  [138] pusharglist 2 ........................... <tRect, 3>
  [140] objcall 54 .............................. <tRect[3]>
  [142] getparam 1 .............................. <tRect>
  [144] pushint8 2 .............................. <2>
  [146] pusharglist 2 ........................... <tRect, 2>
  [148] objcall 54 .............................. <tRect[2]>
  [150] pusharglist 2 ........................... <tRect[3], tRect[2]>
  [152] extcall 508 ............................. <point(tRect[3], tRect[2])>
  [155] setlocal 1 .............................. tHighestPoint = point(tRect[3], tRect[2])
  [157] getparam 1 .............................. <tRect>
  [159] pushint8 1 .............................. <1>
  [161] pusharglist 2 ........................... <tRect, 1>
  [163] objcall 54 .............................. <tRect[1]>
  [165] getparam 1 .............................. <tRect>
  [167] pushint8 4 .............................. <4>
  [169] pusharglist 2 ........................... <tRect, 4>
  [171] objcall 54 .............................. <tRect[4]>
  [173] pusharglist 2 ........................... <tRect[1], tRect[4]>
  [175] extcall 508 ............................. <point(tRect[1], tRect[4])>
  [178] setlocal 2 .............................. tLowestPoint = point(tRect[1], tRect[4])
  [180] getparam 2 .............................. <tSlope>
  [182] pushint8 1 .............................. <1>
  [184] inv ..................................... <-1>
  [185] mul ..................................... <tSlope * -1>
  [186] setparam 2 .............................. tSlope = tSlope * -1
  [188] pushcons 5 .............................. <"leftwall">
  [190] setlocal 3 .............................. tdir = "leftwall"
  [192] jmp [245]
  [195] getparam 1 .............................. <tRect>
  [197] pushint8 1 .............................. <1>
  [199] pusharglist 2 ........................... <tRect, 1>
  [201] objcall 54 .............................. <tRect[1]>
  [203] getparam 1 .............................. <tRect>
  [205] pushint8 2 .............................. <2>
  [207] pusharglist 2 ........................... <tRect, 2>
  [209] objcall 54 .............................. <tRect[2]>
  [211] pusharglist 2 ........................... <tRect[1], tRect[2]>
  [213] extcall 508 ............................. <point(tRect[1], tRect[2])>
  [216] setlocal 1 .............................. tHighestPoint = point(tRect[1], tRect[2])
  [218] getparam 1 .............................. <tRect>
  [220] pushint8 3 .............................. <3>
  [222] pusharglist 2 ........................... <tRect, 3>
  [224] objcall 54 .............................. <tRect[3]>
  [226] getparam 1 .............................. <tRect>
  [228] pushint8 4 .............................. <4>
  [230] pusharglist 2 ........................... <tRect, 4>
  [232] objcall 54 .............................. <tRect[4]>
  [234] pusharglist 2 ........................... <tRect[3], tRect[4]>
  [236] extcall 508 ............................. <point(tRect[3], tRect[4])>
  [239] setlocal 2 .............................. tLowestPoint = point(tRect[3], tRect[4])
  [241] pushcons 6 .............................. <"rightwall">
  [243] setlocal 3 .............................. tdir = "rightwall"
  [245] getprop 1656 ............................ <pPartList>
  [248] peek 0
  [250] pusharglist 1
  [252] extcall 22
  [254] pushint8 1
  [256] peek 0
  [258] peek 2
  [260] lteq
  [261] jmpifz [391] ............................ repeat with tPart in pPartList
  [264] peek 2
  [266] peek 1
  [268] pusharglist 2
  [270] extcall 54
  [272] setlocal 4
  [274] getprop 1667 ............................ <pTypeDef>
  [277] pushsymb 1316 ........................... <#wallleft>
  [280] eq ...................................... <pTypeDef = #wallleft>
  [281] jmpifz [301] ............................ if pTypeDef = #wallleft then / else
  [284] getlocal 4 .............................. <tPart>
  [286] getobjprop 42 ........................... <tPart.width>
  [288] getparam 2 .............................. <tSlope>
  [290] mul ..................................... <tPart.width * tSlope>
  [291] pusharglist 1 ........................... <tPart.width * tSlope>
  [293] extcall 1547 ............................ <abs(tPart.width * tSlope)>
  [296] setlocal 5 .............................. tSlopeSpace = abs(tPart.width * tSlope)
  [298] jmp [304]
  [301] pushzero ................................ <0>
  [302] setlocal 5 .............................. tSlopeSpace = 0
  [304] getlocal 4 .............................. <tPart>
  [306] getobjprop 1668 ......................... <tPart.screenrect>
  [309] setlocal 6 .............................. tPartScreenrect = tPart.screenrect
  [311] getlocal 1 .............................. <tHighestPoint>
  [313] getlocal 6 .............................. <tPartScreenrect>
  [315] pusharglist 2 ........................... <tHighestPoint, tPartScreenrect>
  [317] objcall 1560 ............................ <tHighestPoint.inside(tPartScreenrect)>
  [320] jmpifz [386] ............................ if tHighestPoint.inside(tPartScreenrect) then
  [323] getlocal 1 .............................. <tHighestPoint>
  [325] pushint8 1 .............................. <1>
  [327] pusharglist 2 ........................... <tHighestPoint, 1>
  [329] objcall 54 .............................. <tHighestPoint[1]>
  [331] getlocal 6 .............................. <tPartScreenrect>
  [333] pushint8 1 .............................. <1>
  [335] pusharglist 2 ........................... <tPartScreenrect, 1>
  [337] objcall 54 .............................. <tPartScreenrect[1]>
  [339] sub ..................................... <tHighestPoint[1] - tPartScreenrect[1]>
  [340] setlocal 7 .............................. tDistX = tHighestPoint[1] - tPartScreenrect[1]
  [342] getlocal 7 .............................. <tDistX>
  [344] getparam 2 .............................. <tSlope>
  [346] mul ..................................... <tDistX * tSlope>
  [347] setlocal 8 .............................. tDistY = tDistX * tSlope
  [349] getlocal 6 .............................. <tPartScreenrect>
  [351] pushint8 2 .............................. <2>
  [353] pusharglist 2 ........................... <tPartScreenrect, 2>
  [355] objcall 54 .............................. <tPartScreenrect[2]>
  [357] getlocal 5 .............................. <tSlopeSpace>
  [359] add ..................................... <tPartScreenrect[2] + tSlopeSpace>
  [360] getlocal 8 .............................. <tDistY>
  [362] add ..................................... <tPartScreenrect[2] + tSlopeSpace + tDistY>
  [363] setlocal 9 .............................. tSlopeYAtX = tPartScreenrect[2] + tSlopeSpace + tDistY
  [365] getlocal 9 .............................. <tSlopeYAtX>
  [367] getlocal 1 .............................. <tHighestPoint>
  [369] pushint8 2 .............................. <2>
  [371] pusharglist 2 ........................... <tHighestPoint, 2>
  [373] objcall 54 .............................. <tHighestPoint[2]>
  [375] lt ...................................... <tSlopeYAtX < tHighestPoint[2]>
  [376] jmpifz [386] ............................ if tSlopeYAtX < tHighestPoint[2] then
  [379] getlocal 4 .............................. <tPart>
  [381] setlocal 10 ............................. tPartForHighest = tPart
  [383] jmp [391] ............................... exit repeat
  [386] pushint8 1
  [388] add
  [389] endrepeat [256]
  [391] pop 3
  [393] getlocal 10 ............................. <tPartForHighest>
  [395] pusharglist 1 ........................... <tPartForHighest>
  [397] extcall 20 .............................. <voidp(tPartForHighest)>
  [399] jmpifz [413] ............................ if voidp(tPartForHighest) then
  [402] pushsymb 1319 ........................... <#insideWall>
  [405] pushzero ................................ <0>
  [406] pusharglist 2 ........................... <[#insideWall: 0]>
  [408] pushproplist ............................ <[#insideWall: 0]>
  [409] pusharglistnoret 1 ...................... <[#insideWall: 0]>
  [411] extcall 25 .............................. return [#insideWall: 0]
  [413] getprop 1656 ............................ <pPartList>
  [416] peek 0
  [418] pusharglist 1
  [420] extcall 22
  [422] pushint8 1
  [424] peek 0
  [426] peek 2
  [428] lteq
  [429] jmpifz [564] ............................ repeat with tPart in pPartList
  [432] peek 2
  [434] peek 1
  [436] pusharglist 2
  [438] extcall 54
  [440] setlocal 4
  [442] getprop 1667 ............................ <pTypeDef>
  [445] pushsymb 1316 ........................... <#wallleft>
  [448] eq ...................................... <pTypeDef = #wallleft>
  [449] jmpifz [458] ............................ if pTypeDef = #wallleft then / else
  [452] pushzero ................................ <0>
  [453] setlocal 5 .............................. tSlopeSpace = 0
  [455] jmp [472]
  [458] getlocal 4 .............................. <tPart>
  [460] getobjprop 42 ........................... <tPart.width>
  [462] getparam 2 .............................. <tSlope>
  [464] mul ..................................... <tPart.width * tSlope>
  [465] pusharglist 1 ........................... <tPart.width * tSlope>
  [467] extcall 1547 ............................ <abs(tPart.width * tSlope)>
  [470] setlocal 5 .............................. tSlopeSpace = abs(tPart.width * tSlope)
  [472] getlocal 4 .............................. <tPart>
  [474] getobjprop 1668 ......................... <tPart.screenrect>
  [477] setlocal 6 .............................. tPartScreenrect = tPart.screenrect
  [479] getlocal 2 .............................. <tLowestPoint>
  [481] getlocal 6 .............................. <tPartScreenrect>
  [483] pusharglist 2 ........................... <tLowestPoint, tPartScreenrect>
  [485] objcall 1560 ............................ <tLowestPoint.inside(tPartScreenrect)>
  [488] jmpifz [559] ............................ if tLowestPoint.inside(tPartScreenrect) then
  [491] getlocal 2 .............................. <tLowestPoint>
  [493] pushint8 1 .............................. <1>
  [495] pusharglist 2 ........................... <tLowestPoint, 1>
  [497] objcall 54 .............................. <tLowestPoint[1]>
  [499] getlocal 6 .............................. <tPartScreenrect>
  [501] pushint8 1 .............................. <1>
  [503] pusharglist 2 ........................... <tPartScreenrect, 1>
  [505] objcall 54 .............................. <tPartScreenrect[1]>
  [507] sub ..................................... <tLowestPoint[1] - tPartScreenrect[1]>
  [508] setlocal 7 .............................. tDistX = tLowestPoint[1] - tPartScreenrect[1]
  [510] getlocal 7 .............................. <tDistX>
  [512] getparam 2 .............................. <tSlope>
  [514] mul ..................................... <tDistX * tSlope>
  [515] setlocal 8 .............................. tDistY = tDistX * tSlope
  [517] getlocal 6 .............................. <tPartScreenrect>
  [519] pushint8 2 .............................. <2>
  [521] pusharglist 2 ........................... <tPartScreenrect, 2>
  [523] objcall 54 .............................. <tPartScreenrect[2]>
  [525] getlocal 4 .............................. <tPart>
  [527] getobjprop 43 ........................... <tPart.height>
  [529] add ..................................... <tPartScreenrect[2] + tPart.height>
  [530] getlocal 5 .............................. <tSlopeSpace>
  [532] sub ..................................... <tPartScreenrect[2] + tPart.height - tSlopeSpace>
  [533] getlocal 8 .............................. <tDistY>
  [535] add ..................................... <tPartScreenrect[2] + tPart.height - tSlopeSpace + tDistY>
  [536] setlocal 9 .............................. tSlopeYAtX = tPartScreenrect[2] + tPart.height - tSlopeSpace + tDistY
  [538] getlocal 9 .............................. <tSlopeYAtX>
  [540] getlocal 2 .............................. <tLowestPoint>
  [542] pushint8 2 .............................. <2>
  [544] pusharglist 2 ........................... <tLowestPoint, 2>
  [546] objcall 54 .............................. <tLowestPoint[2]>
  [548] gt ...................................... <tSlopeYAtX > tLowestPoint[2]>
  [549] jmpifz [559] ............................ if tSlopeYAtX > tLowestPoint[2] then
  [552] getlocal 4 .............................. <tPart>
  [554] setlocal 11 ............................. tPartForLowest = tPart
  [556] jmp [564] ............................... exit repeat
  [559] pushint8 1
  [561] add
  [562] endrepeat [424]
  [564] pop 3
  [566] getlocal 11 ............................. <tPartForLowest>
  [568] pusharglist 1 ........................... <tPartForLowest>
  [570] extcall 20 .............................. <voidp(tPartForLowest)>
  [572] jmpifz [586] ............................ if voidp(tPartForLowest) then
  [575] pushsymb 1319 ........................... <#insideWall>
  [578] pushzero ................................ <0>
  [579] pusharglist 2 ........................... <[#insideWall: 0]>
  [581] pushproplist ............................ <[#insideWall: 0]>
  [582] pusharglistnoret 1 ...................... <[#insideWall: 0]>
  [584] extcall 25 .............................. return [#insideWall: 0]
  [586] getprop 1667 ............................ <pTypeDef>
  [589] pushsymb 1316 ........................... <#wallleft>
  [592] eq ...................................... <pTypeDef = #wallleft>
  [593] jmpifz [603] ............................ if pTypeDef = #wallleft then / else
  [596] getlocal 11 ............................. <tPartForLowest>
  [598] setlocal 12 ............................. tRePart = tPartForLowest
  [600] jmp [607]
  [603] getlocal 10 ............................. <tPartForHighest>
  [605] setlocal 12 ............................. tRePart = tPartForHighest
  [607] getlocal 12 ............................. <tRePart>
  [609] getobjprop 1668 ......................... <tRePart.screenrect>
  [612] setlocal 6 .............................. tPartScreenrect = tRePart.screenrect
  [614] pusharglist 0 ........................... <[:]>
  [616] pushproplist ............................ <[:]>
  [617] setlocal 13 ............................. tReturnProps = [:]
  [619] getlocal 13 ............................. <tReturnProps>
  [621] pushsymb 1319 ........................... <#insideWall>
  [624] pushint8 1 .............................. <1>
  [626] pusharglistnoret 3 ...................... <tReturnProps, #insideWall, 1>
  [628] objcall 24 .............................. tReturnProps[#insideWall] = 1
  [630] getlocal 13 ............................. <tReturnProps>
  [632] pushsymb 1680 ........................... <#wallLocation>
  [635] getlocal 12 ............................. <tRePart>
  [637] getobjprop 538 .......................... <tRePart.locX>
  [640] getlocal 12 ............................. <tRePart>
  [642] getobjprop 539 .......................... <tRePart.locY>
  [645] pusharglist 2 ........................... <tRePart.locX, tRePart.locY>
  [647] extcall 508 ............................. <point(tRePart.locX, tRePart.locY)>
  [650] pusharglistnoret 3 ...................... <tReturnProps, #wallLocation, point(tRePart.locX, tRePart.locY)>
  [652] objcall 24 .............................. tReturnProps[#wallLocation] = point(tRePart.locX, tRePart.locY)
  [654] getparam 1 .............................. <tRect>
  [656] pushint8 1 .............................. <1>
  [658] pusharglist 2 ........................... <tRect, 1>
  [660] objcall 54 .............................. <tRect[1]>
  [662] getlocal 6 .............................. <tPartScreenrect>
  [664] pushint8 1 .............................. <1>
  [666] pusharglist 2 ........................... <tPartScreenrect, 1>
  [668] objcall 54 .............................. <tPartScreenrect[1]>
  [670] sub ..................................... <tRect[1] - tPartScreenrect[1]>
  [671] setlocal 14 ............................. tLocalX = tRect[1] - tPartScreenrect[1]
  [673] getparam 1 .............................. <tRect>
  [675] pushint8 2 .............................. <2>
  [677] pusharglist 2 ........................... <tRect, 2>
  [679] objcall 54 .............................. <tRect[2]>
  [681] getlocal 6 .............................. <tPartScreenrect>
  [683] pushint8 2 .............................. <2>
  [685] pusharglist 2 ........................... <tPartScreenrect, 2>
  [687] objcall 54 .............................. <tPartScreenrect[2]>
  [689] sub ..................................... <tRect[2] - tPartScreenrect[2]>
  [690] setlocal 15 ............................. tLocalY = tRect[2] - tPartScreenrect[2]
  [692] getlocal 13 ............................. <tReturnProps>
  [694] pushsymb 1681 ........................... <#localCoordinate>
  [697] getlocal 14 ............................. <tLocalX>
  [699] getlocal 15 ............................. <tLocalY>
  [701] pusharglist 2 ........................... <tLocalX, tLocalY>
  [703] extcall 508 ............................. <point(tLocalX, tLocalY)>
  [706] pusharglistnoret 3 ...................... <tReturnProps, #localCoordinate, point(tLocalX, tLocalY)>
  [708] objcall 24 .............................. tReturnProps[#localCoordinate] = point(tLocalX, tLocalY)
  [710] getlocal 13 ............................. <tReturnProps>
  [712] pushsymb 477 ............................ <#direction>
  [715] getlocal 3 .............................. <tdir>
  [717] pusharglistnoret 3 ...................... <tReturnProps, #direction, tdir>
  [719] objcall 24 .............................. tReturnProps[#direction] = tdir
  [721] getlocal 13 ............................. <tReturnProps>
  [723] pushsymb 1682 ........................... <#wallSprites>
  [726] getprop 35 .............................. <pSprite>
  [728] pusharglist 1 ........................... <[pSprite]>
  [730] pushlist ................................ <[pSprite]>
  [731] pusharglistnoret 3 ...................... <tReturnProps, #wallSprites, [pSprite]>
  [733] objcall 24 .............................. tReturnProps[#wallSprites] = [pSprite]
  [735] getlocal 13 ............................. <tReturnProps>
  [737] pusharglistnoret 1 ...................... <tReturnProps>
  [739] extcall 25 .............................. return tReturnProps
  [741] ret
end

on setPartPattern me, tPatternType, tPalette, tColor, tWrapType
  [  0] getparam 4 .............................. <tWrapType>
  [  2] getprop 1667 ............................ <pTypeDef>
  [  5] nteq .................................... <tWrapType <> pTypeDef>
  [  6] jmpifz [ 14] ............................ if tWrapType <> pTypeDef then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 25 .............................. return 0
  [ 14] getmovieprop 286 ........................ <the itemDelimiter>
  [ 17] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 19] pushcons 3 .............................. <"_">
  [ 21] setmovieprop 286 ........................ the itemDelimiter = "_"
  [ 24] getprop 1656 ............................ <pPartList>
  [ 27] peek 0
  [ 29] pusharglist 1
  [ 31] extcall 22
  [ 33] pushint8 1
  [ 35] peek 0
  [ 37] peek 2
  [ 39] lteq
  [ 40] jmpifz [235] ............................ repeat with tPart in pPartList
  [ 43] peek 2
  [ 45] peek 1
  [ 47] pusharglist 2
  [ 49] extcall 54
  [ 51] setlocal 1
  [ 53] getlocal 1 .............................. <tPart>
  [ 55] pushsymb 41 ............................. <#member>
  [ 57] pusharglist 2 ........................... <tPart, #member>
  [ 59] objcall 54 .............................. <tPart[#member]>
  [ 61] setlocal 2 .............................. tMem = tPart[#member]
  [ 63] getlocal 2 .............................. <tMem>
  [ 65] pushsymb 287 ............................ <#item>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglist 3 ........................... <tMem, #item, 1>
  [ 72] objcall 290 ............................. <tMem.item[1]>
  [ 75] pushcons 3 .............................. <"_">
  [ 77] joinstr ................................. <tMem.item[1] & "_">
  [ 78] getlocal 2 .............................. <tMem>
  [ 80] pushsymb 287 ............................ <#item>
  [ 83] pushint8 2 .............................. <2>
  [ 85] pusharglist 3 ........................... <tMem, #item, 2>
  [ 87] objcall 290 ............................. <tMem.item[2]>
  [ 90] joinstr ................................. <tMem.item[1] & "_" & tMem.item[2]>
  [ 91] pushcons 3 .............................. <"_">
  [ 93] joinstr ................................. <tMem.item[1] & "_" & tMem.item[2] & "_">
  [ 94] setlocal 3 .............................. tClass = tMem.item[1] & "_" & tMem.item[2] & "_"
  [ 96] getparam 1 .............................. <tPatternType>
  [ 98] pushcons 3 .............................. <"_">
  [100] joinstr ................................. <tPatternType & "_">
  [101] setlocal 4 .............................. ttype = tPatternType & "_"
  [103] getlocal 2 .............................. <tMem>
  [105] pushsymb 287 ............................ <#item>
  [108] pushint8 4 .............................. <4>
  [110] pusharglist 3 ........................... <tMem, #item, 4>
  [112] objcall 290 ............................. <tMem.item[4]>
  [115] pushcons 3 .............................. <"_">
  [117] joinstr ................................. <tMem.item[4] & "_">
  [118] setlocal 5 .............................. tLayer = tMem.item[4] & "_"
  [120] getlocal 2 .............................. <tMem>
  [122] pushsymb 287 ............................ <#item>
  [125] pushint8 5 .............................. <5>
  [127] pusharglist 3 ........................... <tMem, #item, 5>
  [129] objcall 290 ............................. <tMem.item[5]>
  [132] pushcons 3 .............................. <"_">
  [134] joinstr ................................. <tMem.item[5] & "_">
  [135] setlocal 6 .............................. tObs1 = tMem.item[5] & "_"
  [137] getlocal 2 .............................. <tMem>
  [139] pushsymb 287 ............................ <#item>
  [142] pushint8 6 .............................. <6>
  [144] pusharglist 3 ........................... <tMem, #item, 6>
  [146] objcall 290 ............................. <tMem.item[6]>
  [149] pushcons 3 .............................. <"_">
  [151] joinstr ................................. <tMem.item[6] & "_">
  [152] setlocal 7 .............................. tdir = tMem.item[6] & "_"
  [154] getlocal 2 .............................. <tMem>
  [156] pushsymb 287 ............................ <#item>
  [159] pushint8 7 .............................. <7>
  [161] pusharglist 3 ........................... <tMem, #item, 7>
  [163] objcall 290 ............................. <tMem.item[7]>
  [166] setlocal 8 .............................. tObs2 = tMem.item[7]
  [168] getlocal 3 .............................. <tClass>
  [170] getlocal 4 .............................. <ttype>
  [172] joinstr ................................. <tClass & ttype>
  [173] getlocal 5 .............................. <tLayer>
  [175] joinstr ................................. <tClass & ttype & tLayer>
  [176] getlocal 6 .............................. <tObs1>
  [178] joinstr ................................. <tClass & ttype & tLayer & tObs1>
  [179] getlocal 7 .............................. <tdir>
  [181] joinstr ................................. <tClass & ttype & tLayer & tObs1 & tdir>
  [182] getlocal 8 .............................. <tObs2>
  [184] joinstr ................................. <tClass & ttype & tLayer & tObs1 & tdir & tObs2>
  [185] setlocal 9 .............................. tNewMemName = tClass & ttype & tLayer & tObs1 & tdir & tObs2
  [187] getlocal 9 .............................. <tNewMemName>
  [189] pusharglist 1 ........................... <tNewMemName>
  [191] extcall 170 ............................. <memberExists(tNewMemName)>
  [193] jmpifz [206] ............................ if memberExists(tNewMemName) then
  [196] getlocal 1 .............................. <tPart>
  [198] pushsymb 41 ............................. <#member>
  [200] getlocal 9 .............................. <tNewMemName>
  [202] pusharglistnoret 3 ...................... <tPart, #member, tNewMemName>
  [204] objcall 24 .............................. tPart[#member] = tNewMemName
  [206] getprop 1664 ............................ <pSpriteProps>
  [209] pushsymb 1225 ........................... <#bgColor>
  [212] getparam 3 .............................. <tColor>
  [214] pusharglistnoret 3 ...................... <pSpriteProps, #bgColor, tColor>
  [216] objcall 24 .............................. pSpriteProps[#bgColor] = tColor
  [218] getprop 1664 ............................ <pSpriteProps>
  [221] pushsymb 1226 ........................... <#palette>
  [224] getparam 2 .............................. <tPalette>
  [226] pusharglistnoret 3 ...................... <pSpriteProps, #palette, tPalette>
  [228] objcall 24 .............................. pSpriteProps[#palette] = tPalette
  [230] pushint8 1
  [232] add
  [233] endrepeat [ 35]
  [235] pop 3
  [237] getlocal 0 .............................. <tDelim>
  [239] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [242] getprop 1657 ............................ <pWrapperStatus>
  [245] pushsymb 1658 ........................... <#rendered>
  [248] pushzero ................................ <0>
  [249] pusharglistnoret 3 ...................... <pWrapperStatus, #rendered, 0>
  [251] objcall 24 .............................. pWrapperStatus[#rendered] = 0
  [253] getparam 0 .............................. <me>
  [255] pusharglist 1 ........................... <me>
  [257] objcall 1323 ............................ <me.updateWrap()>
  [260] pusharglistnoret 1 ...................... <me.updateWrap()>
  [262] extcall 25 .............................. return me.updateWrap()
  [264] ret
end

on updateWrap me
  [  0] getprop 1657 ............................ <pWrapperStatus>
  [  3] pushsymb 1658 ........................... <#rendered>
  [  6] pusharglist 2 ........................... <pWrapperStatus, #rendered>
  [  8] objcall 54 .............................. <pWrapperStatus[#rendered]>
  [ 10] not ..................................... <not pWrapperStatus[#rendered]>
  [ 11] jmpifz [ 21] ............................ if not pWrapperStatus[#rendered] then
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglistnoret 1 ...................... <me>
  [ 18] objcall 1655 ............................ me.renderImage()
  [ 21] getprop 1657 ............................ <pWrapperStatus>
  [ 24] pushsymb 1659 ........................... <#rectOk>
  [ 27] pusharglist 2 ........................... <pWrapperStatus, #rectOk>
  [ 29] objcall 54 .............................. <pWrapperStatus[#rectOk]>
  [ 31] not ..................................... <not pWrapperStatus[#rectOk]>
  [ 32] jmpifz [ 42] ............................ if not pWrapperStatus[#rectOk] then
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 1 ...................... <me>
  [ 39] objcall 1653 ............................ me.updateBounds()
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 1654 ............................ <me.updateSprite()>
  [ 49] pusharglistnoret 1 ...................... <me.updateSprite()>
  [ 51] extcall 25 .............................. return me.updateSprite()
  [ 53] ret
end

on getPartAt me, tLocX, tLocY
  [  0] getprop 1656 ............................ <pPartList>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 22
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [161] ............................ repeat with tPart in pPartList
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 54
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <tPart>
  [ 31] pushsymb 538 ............................ <#locX>
  [ 34] pusharglist 2 ........................... <tPart, #locX>
  [ 36] objcall 54 .............................. <tPart[#locX]>
  [ 38] getparam 1 .............................. <tLocX>
  [ 40] eq ...................................... <tPart[#locX] = tLocX>
  [ 41] getlocal 0 .............................. <tPart>
  [ 43] pushsymb 539 ............................ <#locY>
  [ 46] pusharglist 2 ........................... <tPart, #locY>
  [ 48] objcall 54 .............................. <tPart[#locY]>
  [ 50] getparam 2 .............................. <tLocY>
  [ 52] eq ...................................... <tPart[#locY] = tLocY>
  [ 53] and ..................................... <(tPart[#locX] = tLocX) and (tPart[#locY] = tLocY)>
  [ 54] jmpifz [156] ............................ if (tPart[#locX] = tLocX) and (tPart[#locY] = tLocY) then
  [ 57] pusharglist 0 ........................... <[:]>
  [ 59] pushproplist ............................ <[:]>
  [ 60] setlocal 1 .............................. tPartValues = [:]
  [ 62] getlocal 1 .............................. <tPartValues>
  [ 64] pushsymb 41 ............................. <#member>
  [ 66] getlocal 0 .............................. <tPart>
  [ 68] pushsymb 41 ............................. <#member>
  [ 70] pusharglist 2 ........................... <tPart, #member>
  [ 72] objcall 54 .............................. <tPart[#member]>
  [ 74] pusharglistnoret 3 ...................... <tPartValues, #member, tPart[#member]>
  [ 76] objcall 24 .............................. tPartValues[#member] = tPart[#member]
  [ 78] getlocal 1 .............................. <tPartValues>
  [ 80] pushsymb 504 ............................ <#locH>
  [ 83] getlocal 0 .............................. <tPart>
  [ 85] pushsymb 504 ............................ <#locH>
  [ 88] pusharglist 2 ........................... <tPart, #locH>
  [ 90] objcall 54 .............................. <tPart[#locH]>
  [ 92] getprop 1660 ............................ <pOffsets>
  [ 95] pushint8 1 .............................. <1>
  [ 97] pusharglist 2 ........................... <pOffsets, 1>
  [ 99] objcall 54 .............................. <pOffsets[1]>
  [101] add ..................................... <tPart[#locH] + pOffsets[1]>
  [102] pusharglistnoret 3 ...................... <tPartValues, #locH, tPart[#locH] + pOffsets[1]>
  [104] objcall 24 .............................. tPartValues[#locH] = tPart[#locH] + pOffsets[1]
  [106] getlocal 1 .............................. <tPartValues>
  [108] pushsymb 505 ............................ <#locV>
  [111] getlocal 0 .............................. <tPart>
  [113] pushsymb 505 ............................ <#locV>
  [116] pusharglist 2 ........................... <tPart, #locV>
  [118] objcall 54 .............................. <tPart[#locV]>
  [120] getprop 1660 ............................ <pOffsets>
  [123] pushint8 2 .............................. <2>
  [125] pusharglist 2 ........................... <pOffsets, 2>
  [127] objcall 54 .............................. <pOffsets[2]>
  [129] add ..................................... <tPart[#locV] + pOffsets[2]>
  [130] pusharglistnoret 3 ...................... <tPartValues, #locV, tPart[#locV] + pOffsets[2]>
  [132] objcall 24 .............................. tPartValues[#locV] = tPart[#locV] + pOffsets[2]
  [134] getlocal 1 .............................. <tPartValues>
  [136] pushsymb 881 ............................ <#locZ>
  [139] getprop 1292 ............................ <pLocZ>
  [142] getprop 1665 ............................ <pVisualizerLocZ>
  [145] add ..................................... <pLocZ + pVisualizerLocZ>
  [146] pusharglistnoret 3 ...................... <tPartValues, #locZ, pLocZ + pVisualizerLocZ>
  [148] objcall 24 .............................. tPartValues[#locZ] = pLocZ + pVisualizerLocZ
  [150] getlocal 1 .............................. <tPartValues>
  [152] pusharglistnoret 1 ...................... <tPartValues>
  [154] extcall 25 .............................. return tPartValues
  [156] pushint8 1
  [158] add
  [159] endrepeat [ 11]
  [161] pop 3
  [163] pushzero ................................ <0>
  [164] pusharglistnoret 1 ...................... <0>
  [166] extcall 25 .............................. return 0
  [168] ret
end

on getBounds me
  [  0] getprop 1657 ............................ <pWrapperStatus>
  [  3] pushsymb 1659 ........................... <#rectOk>
  [  6] pusharglist 2 ........................... <pWrapperStatus, #rectOk>
  [  8] objcall 54 .............................. <pWrapperStatus[#rectOk]>
  [ 10] not ..................................... <not pWrapperStatus[#rectOk]>
  [ 11] jmpifz [ 21] ............................ if not pWrapperStatus[#rectOk] then
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglistnoret 1 ...................... <me>
  [ 18] objcall 1653 ............................ me.updateBounds()
  [ 21] getprop 1662 ............................ <pBoundingRect>
  [ 24] getprop 1660 ............................ <pOffsets>
  [ 27] pushint8 1 .............................. <1>
  [ 29] pusharglist 2 ........................... <pOffsets, 1>
  [ 31] objcall 54 .............................. <pOffsets[1]>
  [ 33] getprop 1660 ............................ <pOffsets>
  [ 36] pushint8 2 .............................. <2>
  [ 38] pusharglist 2 ........................... <pOffsets, 2>
  [ 40] objcall 54 .............................. <pOffsets[2]>
  [ 42] getprop 1660 ............................ <pOffsets>
  [ 45] pushint8 1 .............................. <1>
  [ 47] pusharglist 2 ........................... <pOffsets, 1>
  [ 49] objcall 54 .............................. <pOffsets[1]>
  [ 51] getprop 1660 ............................ <pOffsets>
  [ 54] pushint8 2 .............................. <2>
  [ 56] pusharglist 2 ........................... <pOffsets, 2>
  [ 58] objcall 54 .............................. <pOffsets[2]>
  [ 60] pusharglist 4 ........................... <pOffsets[1], pOffsets[2], pOffsets[1], pOffsets[2]>
  [ 62] extcall 555 ............................. <rect(pOffsets[1], pOffsets[2], pOffsets[1], pOffsets[2])>
  [ 65] add ..................................... <pBoundingRect + rect(pOffsets[1], pOffsets[2], pOffsets[1], pOffsets[2])>
  [ 66] pusharglistnoret 1 ...................... <pBoundingRect + rect(pOffsets[1], pOffsets[2], pOffsets[1], pOffsets[2])>
  [ 68] extcall 25 .............................. return pBoundingRect + rect(pOffsets[1], pOffsets[2], pOffsets[1], pOffsets[2])
  [ 70] ret
end

on getImagePointer me
  [  0] getprop 1657 ............................ <pWrapperStatus>
  [  3] pushsymb 447 ............................ <#render>
  [  6] pusharglist 2 ........................... <pWrapperStatus, #render>
  [  8] objcall 54 .............................. <pWrapperStatus[#render]>
  [ 10] not ..................................... <not pWrapperStatus[#render]>
  [ 11] jmpifz [ 21] ............................ if not pWrapperStatus[#render] then
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglistnoret 1 ...................... <me>
  [ 18] objcall 1655 ............................ me.renderImage()
  [ 21] getprop 1666 ............................ <pImgMemberID>
  [ 24] pusharglistnoret 1 ...................... <pImgMemberID>
  [ 26] extcall 25 .............................. return pImgMemberID
  [ 28] ret
end

on setSprite me, tSpr
  [  0] getparam 1 .............................. <tSpr>
  [  2] pusharglist 1 ........................... <tSpr>
  [  4] extcall 955 ............................. <integer(tSpr)>
  [  7] pusharglist 1 ........................... <integer(tSpr)>
  [  9] extcall 36 .............................. <sprite(integer(tSpr))>
  [ 11] setprop 35 .............................. pSprite = sprite(integer(tSpr))
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 1 ...................... <1>
  [ 17] extcall 25 .............................. return 1
  [ 19] ret
end

on updateBounds me
  [  0] getprop 1656 ............................ <pPartList>
  [  3] getobjprop 22 ........................... <pPartList.count>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <pPartList.count = 0>
  [  7] jmpifz [ 40] ............................ if pPartList.count = 0 then
  [ 10] pushzero ................................ <0>
  [ 11] pushzero ................................ <0>
  [ 12] pushzero ................................ <0>
  [ 13] pushzero ................................ <0>
  [ 14] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 16] extcall 555 ............................. <rect(0, 0, 0, 0)>
  [ 19] setprop 1662 ............................ pBoundingRect = rect(0, 0, 0, 0)
  [ 22] getprop 1657 ............................ <pWrapperStatus>
  [ 25] pushsymb 1659 ........................... <#rectOk>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 3 ...................... <pWrapperStatus, #rectOk, 1>
  [ 32] objcall 24 .............................. pWrapperStatus[#rectOk] = 1
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 1 ...................... <1>
  [ 38] extcall 25 .............................. return 1
  [ 40] pushsymb 1705 ........................... <#X1>
  [ 43] pusharglist 0 ........................... <[]>
  [ 45] pushlist ................................ <[]>
  [ 46] pushsymb 1706 ........................... <#X2>
  [ 49] pusharglist 0 ........................... <[]>
  [ 51] pushlist ................................ <[]>
  [ 52] pushsymb 1707 ........................... <#Y1>
  [ 55] pusharglist 0 ........................... <[]>
  [ 57] pushlist ................................ <[]>
  [ 58] pushsymb 1708 ........................... <#Y2>
  [ 61] pusharglist 0 ........................... <[]>
  [ 63] pushlist ................................ <[]>
  [ 64] pusharglist 8 ........................... <[#X1: [], #X2: [], #Y1: [], #Y2: []]>
  [ 66] pushproplist ............................ <[#X1: [], #X2: [], #Y1: [], #Y2: []]>
  [ 67] setlocal 0 .............................. tLocs = [#X1: [], #X2: [], #Y1: [], #Y2: []]
  [ 69] getprop 1656 ............................ <pPartList>
  [ 72] peek 0
  [ 74] pusharglist 1
  [ 76] extcall 22
  [ 78] pushint8 1
  [ 80] peek 0
  [ 82] peek 2
  [ 84] lteq
  [ 85] jmpifz [240] ............................ repeat with tPart in pPartList
  [ 88] peek 2
  [ 90] peek 1
  [ 92] pusharglist 2
  [ 94] extcall 54
  [ 96] setlocal 1
  [ 98] getlocal 1 .............................. <tPart>
  [100] pushsymb 41 ............................. <#member>
  [102] pusharglist 2 ........................... <tPart, #member>
  [104] objcall 54 .............................. <tPart[#member]>
  [106] pusharglist 1 ........................... <tPart[#member]>
  [108] extcall 52 .............................. <getmemnum(tPart[#member])>
  [110] pusharglist 1 ........................... <getmemnum(tPart[#member])>
  [112] extcall 1547 ............................ <abs(getmemnum(tPart[#member]))>
  [115] pusharglist 1 ........................... <abs(getmemnum(tPart[#member]))>
  [117] extcall 41 .............................. <member(abs(getmemnum(tPart[#member])))>
  [119] setlocal 2 .............................. tPartMem = member(abs(getmemnum(tPart[#member])))
  [121] getlocal 1 .............................. <tPart>
  [123] getobjprop 504 .......................... <tPart.locH>
  [126] getlocal 2 .............................. <tPartMem>
  [128] pushsymb 499 ............................ <#regPoint>
  [131] pushint8 1 .............................. <1>
  [133] pusharglist 3 ........................... <tPartMem, #regPoint, 1>
  [135] objcall 290 ............................. <tPartMem.regPoint[1]>
  [138] sub ..................................... <tPart.locH - tPartMem.regPoint[1]>
  [139] setlocal 3 .............................. tX1 = tPart.locH - tPartMem.regPoint[1]
  [141] getlocal 1 .............................. <tPart>
  [143] getobjprop 505 .......................... <tPart.locV>
  [146] getlocal 2 .............................. <tPartMem>
  [148] pushsymb 499 ............................ <#regPoint>
  [151] pushint8 2 .............................. <2>
  [153] pusharglist 3 ........................... <tPartMem, #regPoint, 2>
  [155] objcall 290 ............................. <tPartMem.regPoint[2]>
  [158] sub ..................................... <tPart.locV - tPartMem.regPoint[2]>
  [159] setlocal 4 .............................. tY1 = tPart.locV - tPartMem.regPoint[2]
  [161] getlocal 0 .............................. <tLocs>
  [163] pushsymb 1705 ........................... <#X1>
  [166] pusharglist 2 ........................... <tLocs, #X1>
  [168] objcall 54 .............................. <tLocs[#X1]>
  [170] getlocal 3 .............................. <tX1>
  [172] pusharglistnoret 2 ...................... <tLocs[#X1], tX1>
  [174] objcall 664 ............................. tLocs[#X1].append(tX1)
  [177] getlocal 0 .............................. <tLocs>
  [179] pushsymb 1707 ........................... <#Y1>
  [182] pusharglist 2 ........................... <tLocs, #Y1>
  [184] objcall 54 .............................. <tLocs[#Y1]>
  [186] getlocal 4 .............................. <tY1>
  [188] pusharglistnoret 2 ...................... <tLocs[#Y1], tY1>
  [190] objcall 664 ............................. tLocs[#Y1].append(tY1)
  [193] getlocal 0 .............................. <tLocs>
  [195] pushsymb 1706 ........................... <#X2>
  [198] pusharglist 2 ........................... <tLocs, #X2>
  [200] objcall 54 .............................. <tLocs[#X2]>
  [202] getlocal 3 .............................. <tX1>
  [204] getlocal 1 .............................. <tPart>
  [206] getobjprop 42 ........................... <tPart.width>
  [208] add ..................................... <tX1 + tPart.width>
  [209] pusharglistnoret 2 ...................... <tLocs[#X2], tX1 + tPart.width>
  [211] objcall 664 ............................. tLocs[#X2].append(tX1 + tPart.width)
  [214] getlocal 0 .............................. <tLocs>
  [216] pushsymb 1708 ........................... <#Y2>
  [219] pusharglist 2 ........................... <tLocs, #Y2>
  [221] objcall 54 .............................. <tLocs[#Y2]>
  [223] getlocal 4 .............................. <tY1>
  [225] getlocal 1 .............................. <tPart>
  [227] getobjprop 43 ........................... <tPart.height>
  [229] add ..................................... <tY1 + tPart.height>
  [230] pusharglistnoret 2 ...................... <tLocs[#Y2], tY1 + tPart.height>
  [232] objcall 664 ............................. tLocs[#Y2].append(tY1 + tPart.height)
  [235] pushint8 1
  [237] add
  [238] endrepeat [ 80]
  [240] pop 3
  [242] getlocal 0 .............................. <tLocs>
  [244] pushsymb 1705 ........................... <#X1>
  [247] pusharglist 2 ........................... <tLocs, #X1>
  [249] objcall 54 .............................. <tLocs[#X1]>
  [251] pusharglist 1 ........................... <tLocs[#X1]>
  [253] extcall 1709 ............................ <min(tLocs[#X1])>
  [256] setlocal 5 .............................. tMinX1 = min(tLocs[#X1])
  [258] getlocal 0 .............................. <tLocs>
  [260] pushsymb 1706 ........................... <#X2>
  [263] pusharglist 2 ........................... <tLocs, #X2>
  [265] objcall 54 .............................. <tLocs[#X2]>
  [267] pusharglist 1 ........................... <tLocs[#X2]>
  [269] extcall 1710 ............................ <max(tLocs[#X2])>
  [272] setlocal 6 .............................. tMaxX2 = max(tLocs[#X2])
  [274] getlocal 0 .............................. <tLocs>
  [276] pushsymb 1707 ........................... <#Y1>
  [279] pusharglist 2 ........................... <tLocs, #Y1>
  [281] objcall 54 .............................. <tLocs[#Y1]>
  [283] pusharglist 1 ........................... <tLocs[#Y1]>
  [285] extcall 1709 ............................ <min(tLocs[#Y1])>
  [288] setlocal 7 .............................. tMinY1 = min(tLocs[#Y1])
  [290] getlocal 0 .............................. <tLocs>
  [292] pushsymb 1708 ........................... <#Y2>
  [295] pusharglist 2 ........................... <tLocs, #Y2>
  [297] objcall 54 .............................. <tLocs[#Y2]>
  [299] pusharglist 1 ........................... <tLocs[#Y2]>
  [301] extcall 1710 ............................ <max(tLocs[#Y2])>
  [304] setlocal 8 .............................. tMaxY2 = max(tLocs[#Y2])
  [306] getlocal 5 .............................. <tMinX1>
  [308] getlocal 7 .............................. <tMinY1>
  [310] getlocal 6 .............................. <tMaxX2>
  [312] getlocal 8 .............................. <tMaxY2>
  [314] pusharglist 4 ........................... <tMinX1, tMinY1, tMaxX2, tMaxY2>
  [316] extcall 555 ............................. <rect(tMinX1, tMinY1, tMaxX2, tMaxY2)>
  [319] setprop 1662 ............................ pBoundingRect = rect(tMinX1, tMinY1, tMaxX2, tMaxY2)
  [322] getprop 1657 ............................ <pWrapperStatus>
  [325] pushsymb 1659 ........................... <#rectOk>
  [328] pushint8 1 .............................. <1>
  [330] pusharglistnoret 3 ...................... <pWrapperStatus, #rectOk, 1>
  [332] objcall 24 .............................. pWrapperStatus[#rectOk] = 1
  [334] pushint8 1 .............................. <1>
  [336] pusharglistnoret 1 ...................... <1>
  [338] extcall 25 .............................. return 1
  [340] ret
end

on updateSprite me
  [  0] getprop 35 .............................. <pSprite>
  [  2] pusharglist 1 ........................... <pSprite>
  [  4] extcall 20 .............................. <voidp(pSprite)>
  [  6] jmpifz [ 14] ............................ if voidp(pSprite) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 25 .............................. return 0
  [ 14] getprop 1666 ............................ <pImgMemberID>
  [ 17] pusharglist 1 ........................... <pImgMemberID>
  [ 19] extcall 52 .............................. <getmemnum(pImgMemberID)>
  [ 21] setlocal 0 .............................. tMemNum = getmemnum(pImgMemberID)
  [ 23] getlocal 0 .............................. <tMemNum>
  [ 25] pushzero ................................ <0>
  [ 26] eq ...................................... <tMemNum = 0>
  [ 27] jmpifz [ 35] ............................ if tMemNum = 0 then
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 25 .............................. return 0
  [ 35] getprop 35 .............................. <pSprite>
  [ 37] getlocal 0 .............................. <tMemNum>
  [ 39] pusharglist 1 ........................... <tMemNum>
  [ 41] extcall 41 .............................. <member(tMemNum)>
  [ 43] setobjprop 41 ........................... pSprite.member = member(tMemNum)
  [ 45] getprop 35 .............................. <pSprite>
  [ 47] getlocal 0 .............................. <tMemNum>
  [ 49] pusharglist 1 ........................... <tMemNum>
  [ 51] extcall 41 .............................. <member(tMemNum)>
  [ 53] getobjprop 42 ........................... <member(tMemNum).width>
  [ 55] setobjprop 42 ........................... pSprite.width = member(tMemNum).width
  [ 57] getprop 35 .............................. <pSprite>
  [ 59] getlocal 0 .............................. <tMemNum>
  [ 61] pusharglist 1 ........................... <tMemNum>
  [ 63] extcall 41 .............................. <member(tMemNum)>
  [ 65] getobjprop 43 ........................... <member(tMemNum).height>
  [ 67] setobjprop 43 ........................... pSprite.height = member(tMemNum).height
  [ 69] getprop 35 .............................. <pSprite>
  [ 71] getprop 1292 ............................ <pLocZ>
  [ 74] getprop 1665 ............................ <pVisualizerLocZ>
  [ 77] add ..................................... <pLocZ + pVisualizerLocZ>
  [ 78] setobjprop 881 .......................... pSprite.locZ = pLocZ + pVisualizerLocZ
  [ 81] getprop 35 .............................. <pSprite>
  [ 83] getprop 1664 ............................ <pSpriteProps>
  [ 86] pushsymb 1225 ........................... <#bgColor>
  [ 89] pusharglist 2 ........................... <pSpriteProps, #bgColor>
  [ 91] objcall 54 .............................. <pSpriteProps[#bgColor]>
  [ 93] setobjprop 1225 ......................... pSprite.bgColor = pSpriteProps[#bgColor]
  [ 96] getprop 35 .............................. <pSprite>
  [ 98] getprop 1664 ............................ <pSpriteProps>
  [101] pushsymb 560 ............................ <#ink>
  [104] pusharglist 2 ........................... <pSpriteProps, #ink>
  [106] objcall 54 .............................. <pSpriteProps[#ink]>
  [108] setobjprop 560 .......................... pSprite.ink = pSpriteProps[#ink]
  [111] getprop 35 .............................. <pSprite>
  [113] getprop 1664 ............................ <pSpriteProps>
  [116] pushsymb 501 ............................ <#blend>
  [119] pusharglist 2 ........................... <pSpriteProps, #blend>
  [121] objcall 54 .............................. <pSpriteProps[#blend]>
  [123] setobjprop 501 .......................... pSprite.blend = pSpriteProps[#blend]
  [126] getprop 35 .............................. <pSprite>
  [128] getprop 1660 ............................ <pOffsets>
  [131] pushint8 1 .............................. <1>
  [133] pusharglist 2 ........................... <pOffsets, 1>
  [135] objcall 54 .............................. <pOffsets[1]>
  [137] getprop 1660 ............................ <pOffsets>
  [140] pushint8 2 .............................. <2>
  [142] pusharglist 2 ........................... <pOffsets, 2>
  [144] objcall 54 .............................. <pOffsets[2]>
  [146] pusharglist 2 ........................... <pOffsets[1], pOffsets[2]>
  [148] extcall 508 ............................. <point(pOffsets[1], pOffsets[2])>
  [151] setobjprop 509 .......................... pSprite.loc = point(pOffsets[1], pOffsets[2])
  [154] pushint8 1 .............................. <1>
  [156] pusharglistnoret 1 ...................... <1>
  [158] extcall 25 .............................. return 1
  [160] ret
end

on renderImage me
  [  0] getprop 1666 ............................ <pImgMemberID>
  [  3] pusharglist 1 ........................... <pImgMemberID>
  [  5] extcall 52 .............................. <getmemnum(pImgMemberID)>
  [  7] pushint8 1 .............................. <1>
  [  9] lt ...................................... <getmemnum(pImgMemberID) < 1>
  [ 10] jmpifz [ 23] ............................ if getmemnum(pImgMemberID) < 1 then
  [ 13] getprop 1666 ............................ <pImgMemberID>
  [ 16] pushsymb 722 ............................ <#bitmap>
  [ 19] pusharglistnoret 2 ...................... <pImgMemberID, #bitmap>
  [ 21] extcall 164 ............................. createMember(pImgMemberID, #bitmap)
  [ 23] getprop 1666 ............................ <pImgMemberID>
  [ 26] pusharglist 1 ........................... <pImgMemberID>
  [ 28] extcall 52 .............................. <getmemnum(pImgMemberID)>
  [ 30] pusharglist 1 ........................... <getmemnum(pImgMemberID)>
  [ 32] extcall 41 .............................. <member(getmemnum(pImgMemberID))>
  [ 34] setlocal 0 .............................. tImgMember = member(getmemnum(pImgMemberID))
  [ 36] getmovieprop 968 ........................ <the stage>
  [ 39] getchainedprop 969 ...................... <(the stage).sourceRect>
  [ 42] getobjprop 42 ........................... <(the stage).sourceRect.width>
  [ 44] setlocal 1 .............................. tStageWidth = (the stage).sourceRect.width
  [ 46] getmovieprop 968 ........................ <the stage>
  [ 49] getchainedprop 969 ...................... <(the stage).sourceRect>
  [ 52] getobjprop 43 ........................... <(the stage).sourceRect.height>
  [ 54] setlocal 2 .............................. tStageHeight = (the stage).sourceRect.height
  [ 56] getlocal 1 .............................. <tStageWidth>
  [ 58] getlocal 2 .............................. <tStageHeight>
  [ 60] pushint8 32 ............................. <32>
  [ 62] pusharglist 3 ........................... <tStageWidth, tStageHeight, 32>
  [ 64] extcall 500 ............................. <image(tStageWidth, tStageHeight, 32)>
  [ 67] setlocal 3 .............................. tTargetImage = image(tStageWidth, tStageHeight, 32)
  [ 69] getprop 1656 ............................ <pPartList>
  [ 72] peek 0
  [ 74] pusharglist 1
  [ 76] extcall 22
  [ 78] pushint8 1
  [ 80] peek 0
  [ 82] peek 2
  [ 84] lteq
  [ 85] jmpifz [635] ............................ repeat with tPart in pPartList
  [ 88] peek 2
  [ 90] peek 1
  [ 92] pusharglist 2
  [ 94] extcall 54
  [ 96] setlocal 4
  [ 98] getlocal 4 .............................. <tPart>
  [100] pushsymb 41 ............................. <#member>
  [102] pusharglist 2 ........................... <tPart, #member>
  [104] objcall 54 .............................. <tPart[#member]>
  [106] pusharglist 1 ........................... <tPart[#member]>
  [108] extcall 52 .............................. <getmemnum(tPart[#member])>
  [110] pusharglist 1 ........................... <getmemnum(tPart[#member])>
  [112] extcall 41 .............................. <member(getmemnum(tPart[#member]))>
  [114] setlocal 5 .............................. tPartMem = member(getmemnum(tPart[#member]))
  [116] getprop 1664 ............................ <pSpriteProps>
  [119] pushsymb 1226 ........................... <#palette>
  [122] pusharglist 2 ........................... <pSpriteProps, #palette>
  [124] objcall 54 .............................. <pSpriteProps[#palette]>
  [126] setlocal 6 .............................. tPalette = pSpriteProps[#palette]
  [128] getlocal 6 .............................. <tPalette>
  [130] pusharglist 1 ........................... <tPalette>
  [132] extcall 488 ............................. <ilk(tPalette)>
  [135] pushsymb 570 ............................ <#symbol>
  [138] eq ...................................... <ilk(tPalette) = #symbol>
  [139] jmpifz [152] ............................ if ilk(tPalette) = #symbol then / else
  [142] getlocal 5 .............................. <tPartMem>
  [144] getlocal 6 .............................. <tPalette>
  [146] setobjprop 571 .......................... tPartMem.paletteRef = tPalette
  [149] jmp [167]
  [152] getlocal 5 .............................. <tPartMem>
  [154] getlocal 6 .............................. <tPalette>
  [156] pusharglist 1 ........................... <tPalette>
  [158] extcall 52 .............................. <getmemnum(tPalette)>
  [160] pusharglist 1 ........................... <getmemnum(tPalette)>
  [162] extcall 41 .............................. <member(getmemnum(tPalette))>
  [164] setobjprop 1226 ......................... tPartMem.palette = member(getmemnum(tPalette))
  [167] getlocal 4 .............................. <tPart>
  [169] pushsymb 504 ............................ <#locH>
  [172] pusharglist 2 ........................... <tPart, #locH>
  [174] objcall 54 .............................. <tPart[#locH]>
  [176] getlocal 5 .............................. <tPartMem>
  [178] pushsymb 499 ............................ <#regPoint>
  [181] pushint8 1 .............................. <1>
  [183] pusharglist 3 ........................... <tPartMem, #regPoint, 1>
  [185] objcall 290 ............................. <tPartMem.regPoint[1]>
  [188] sub ..................................... <tPart[#locH] - tPartMem.regPoint[1]>
  [189] setlocal 7 .............................. tPartRectX1 = tPart[#locH] - tPartMem.regPoint[1]
  [191] getlocal 4 .............................. <tPart>
  [193] pushsymb 505 ............................ <#locV>
  [196] pusharglist 2 ........................... <tPart, #locV>
  [198] objcall 54 .............................. <tPart[#locV]>
  [200] getlocal 5 .............................. <tPartMem>
  [202] pushsymb 499 ............................ <#regPoint>
  [205] pushint8 2 .............................. <2>
  [207] pusharglist 3 ........................... <tPartMem, #regPoint, 2>
  [209] objcall 290 ............................. <tPartMem.regPoint[2]>
  [212] sub ..................................... <tPart[#locV] - tPartMem.regPoint[2]>
  [213] setlocal 8 .............................. tPartRectY1 = tPart[#locV] - tPartMem.regPoint[2]
  [215] getlocal 7 .............................. <tPartRectX1>
  [217] getlocal 4 .............................. <tPart>
  [219] pushsymb 42 ............................. <#width>
  [221] pusharglist 2 ........................... <tPart, #width>
  [223] objcall 54 .............................. <tPart[#width]>
  [225] add ..................................... <tPartRectX1 + tPart[#width]>
  [226] setlocal 9 .............................. tPartRectX2 = tPartRectX1 + tPart[#width]
  [228] getlocal 8 .............................. <tPartRectY1>
  [230] getlocal 4 .............................. <tPart>
  [232] pushsymb 43 ............................. <#height>
  [234] pusharglist 2 ........................... <tPart, #height>
  [236] objcall 54 .............................. <tPart[#height]>
  [238] add ..................................... <tPartRectY1 + tPart[#height]>
  [239] setlocal 10 ............................. tPartRectY2 = tPartRectY1 + tPart[#height]
  [241] getlocal 5 .............................. <tPartMem>
  [243] getobjprop 500 .......................... <tPartMem.image>
  [246] setlocal 11 ............................. tSourceImage = tPartMem.image
  [248] getlocal 4 .............................. <tPart>
  [250] pushsymb 450 ............................ <#flipH>
  [253] pusharglist 2 ........................... <tPart, #flipH>
  [255] objcall 54 .............................. <tPart[#flipH]>
  [257] jmpifz [368] ............................ if tPart[#flipH] then
  [260] getlocal 11 ............................. <tSourceImage>
  [262] getobjprop 42 ........................... <tSourceImage.width>
  [264] getlocal 11 ............................. <tSourceImage>
  [266] getobjprop 43 ........................... <tSourceImage.height>
  [268] getlocal 11 ............................. <tSourceImage>
  [270] getobjprop 540 .......................... <tSourceImage.depth>
  [273] getlocal 11 ............................. <tSourceImage>
  [275] getobjprop 571 .......................... <tSourceImage.paletteRef>
  [278] pusharglist 4 ........................... <tSourceImage.width, tSourceImage.height, tSourceImage.depth, tSourceImage.paletteRef>
  [280] extcall 500 ............................. <image(tSourceImage.width, tSourceImage.height, tSourceImage.depth, tSourceImage.paletteRef)>
  [283] setlocal 12 ............................. tImage = image(tSourceImage.width, tSourceImage.height, tSourceImage.depth, tSourceImage.paletteRef)
  [285] getlocal 11 ............................. <tSourceImage>
  [287] getobjprop 42 ........................... <tSourceImage.width>
  [289] pushzero ................................ <0>
  [290] pusharglist 2 ........................... <tSourceImage.width, 0>
  [292] extcall 508 ............................. <point(tSourceImage.width, 0)>
  [295] pushzero ................................ <0>
  [296] pushzero ................................ <0>
  [297] pusharglist 2 ........................... <0, 0>
  [299] extcall 508 ............................. <point(0, 0)>
  [302] pushzero ................................ <0>
  [303] getlocal 11 ............................. <tSourceImage>
  [305] getobjprop 43 ........................... <tSourceImage.height>
  [307] pusharglist 2 ........................... <0, tSourceImage.height>
  [309] extcall 508 ............................. <point(0, tSourceImage.height)>
  [312] getlocal 11 ............................. <tSourceImage>
  [314] getobjprop 42 ........................... <tSourceImage.width>
  [316] getlocal 11 ............................. <tSourceImage>
  [318] getobjprop 43 ........................... <tSourceImage.height>
  [320] pusharglist 2 ........................... <tSourceImage.width, tSourceImage.height>
  [322] extcall 508 ............................. <point(tSourceImage.width, tSourceImage.height)>
  [325] pusharglist 4 ........................... <[point(tSourceImage.width, 0), point(0, 0), point(0, tSourceImage.height), point(tSourceImage.width, tSourceImage.height)]>
  [327] pushlist ................................ <[point(tSourceImage.width, 0), point(0, 0), point(0, tSourceImage.height), point(tSourceImage.width, tSourceImage.height)]>
  [328] setlocal 13 ............................. tQuad = [point(tSourceImage.width, 0), point(0, 0), point(0, tSourceImage.height), point(tSourceImage.width, tSourceImage.height)]
  [330] getlocal 12 ............................. <tImage>
  [332] getlocal 11 ............................. <tSourceImage>
  [334] getlocal 13 ............................. <tQuad>
  [336] getlocal 11 ............................. <tSourceImage>
  [338] getobjprop 555 .......................... <tSourceImage.rect>
  [341] pusharglistnoret 4 ...................... <tImage, tSourceImage, tQuad, tSourceImage.rect>
  [343] objcall 556 ............................. tImage.copyPixels(tSourceImage, tQuad, tSourceImage.rect)
  [346] getlocal 12 ............................. <tImage>
  [348] setlocal 11 ............................. tSourceImage = tImage
  [350] getlocal 7 .............................. <tPartRectX1>
  [352] getlocal 11 ............................. <tSourceImage>
  [354] getobjprop 42 ........................... <tSourceImage.width>
  [356] sub ..................................... <tPartRectX1 - tSourceImage.width>
  [357] setlocal 7 .............................. tPartRectX1 = tPartRectX1 - tSourceImage.width
  [359] getlocal 9 .............................. <tPartRectX2>
  [361] getlocal 11 ............................. <tSourceImage>
  [363] getobjprop 42 ........................... <tSourceImage.width>
  [365] sub ..................................... <tPartRectX2 - tSourceImage.width>
  [366] setlocal 9 .............................. tPartRectX2 = tPartRectX2 - tSourceImage.width
  [368] getlocal 4 .............................. <tPart>
  [370] pushsymb 1717 ........................... <#multiflip>
  [373] pusharglist 2 ........................... <tPart, #multiflip>
  [375] objcall 54 .............................. <tPart[#multiflip]>
  [377] jmpifz [555] ............................ if tPart[#multiflip] then
  [380] getlocal 11 ............................. <tSourceImage>
  [382] getobjprop 42 ........................... <tSourceImage.width>
  [384] getlocal 11 ............................. <tSourceImage>
  [386] getobjprop 43 ........................... <tSourceImage.height>
  [388] getlocal 11 ............................. <tSourceImage>
  [390] getobjprop 540 .......................... <tSourceImage.depth>
  [393] getlocal 11 ............................. <tSourceImage>
  [395] getobjprop 571 .......................... <tSourceImage.paletteRef>
  [398] pusharglist 4 ........................... <tSourceImage.width, tSourceImage.height, tSourceImage.depth, tSourceImage.paletteRef>
  [400] extcall 500 ............................. <image(tSourceImage.width, tSourceImage.height, tSourceImage.depth, tSourceImage.paletteRef)>
  [403] setlocal 12 ............................. tImage = image(tSourceImage.width, tSourceImage.height, tSourceImage.depth, tSourceImage.paletteRef)
  [405] getlocal 11 ............................. <tSourceImage>
  [407] getobjprop 42 ........................... <tSourceImage.width>
  [409] pushzero ................................ <0>
  [410] pusharglist 2 ........................... <tSourceImage.width, 0>
  [412] extcall 508 ............................. <point(tSourceImage.width, 0)>
  [415] pushzero ................................ <0>
  [416] pushzero ................................ <0>
  [417] pusharglist 2 ........................... <0, 0>
  [419] extcall 508 ............................. <point(0, 0)>
  [422] pushzero ................................ <0>
  [423] getlocal 11 ............................. <tSourceImage>
  [425] getobjprop 43 ........................... <tSourceImage.height>
  [427] pusharglist 2 ........................... <0, tSourceImage.height>
  [429] extcall 508 ............................. <point(0, tSourceImage.height)>
  [432] getlocal 11 ............................. <tSourceImage>
  [434] getobjprop 42 ........................... <tSourceImage.width>
  [436] getlocal 11 ............................. <tSourceImage>
  [438] getobjprop 43 ........................... <tSourceImage.height>
  [440] pusharglist 2 ........................... <tSourceImage.width, tSourceImage.height>
  [442] extcall 508 ............................. <point(tSourceImage.width, tSourceImage.height)>
  [445] pusharglist 4 ........................... <[point(tSourceImage.width, 0), point(0, 0), point(0, tSourceImage.height), point(tSourceImage.width, tSourceImage.height)]>
  [447] pushlist ................................ <[point(tSourceImage.width, 0), point(0, 0), point(0, tSourceImage.height), point(tSourceImage.width, tSourceImage.height)]>
  [448] setlocal 13 ............................. tQuad = [point(tSourceImage.width, 0), point(0, 0), point(0, tSourceImage.height), point(tSourceImage.width, tSourceImage.height)]
  [450] getlocal 12 ............................. <tImage>
  [452] getlocal 11 ............................. <tSourceImage>
  [454] getlocal 13 ............................. <tQuad>
  [456] getlocal 11 ............................. <tSourceImage>
  [458] getobjprop 555 .......................... <tSourceImage.rect>
  [461] pusharglistnoret 4 ...................... <tImage, tSourceImage, tQuad, tSourceImage.rect>
  [463] objcall 556 ............................. tImage.copyPixels(tSourceImage, tQuad, tSourceImage.rect)
  [466] getlocal 12 ............................. <tImage>
  [468] setlocal 11 ............................. tSourceImage = tImage
  [470] getlocal 4 .............................. <tPart>
  [472] pushsymb 504 ............................ <#locH>
  [475] pusharglist 2 ........................... <tPart, #locH>
  [477] objcall 54 .............................. <tPart[#locH]>
  [479] getlocal 4 .............................. <tPart>
  [481] pushsymb 1325 ........................... <#offsetx>
  [484] pusharglist 2 ........................... <tPart, #offsetx>
  [486] objcall 54 .............................. <tPart[#offsetx]>
  [488] add ..................................... <tPart[#locH] + tPart[#offsetx]>
  [489] getlocal 5 .............................. <tPartMem>
  [491] pushsymb 499 ............................ <#regPoint>
  [494] pushint8 1 .............................. <1>
  [496] pusharglist 3 ........................... <tPartMem, #regPoint, 1>
  [498] objcall 290 ............................. <tPartMem.regPoint[1]>
  [501] pushint8 1 .............................. <1>
  [503] inv ..................................... <-1>
  [504] mul ..................................... <tPartMem.regPoint[1] * -1>
  [505] sub ..................................... <tPart[#locH] + tPart[#offsetx] - (tPartMem.regPoint[1] * -1)>
  [506] getlocal 11 ............................. <tSourceImage>
  [508] getobjprop 42 ........................... <tSourceImage.width>
  [510] sub ..................................... <tPart[#locH] + tPart[#offsetx] - (tPartMem.regPoint[1] * -1) - tSourceImage.width>
  [511] setlocal 7 .............................. tPartRectX1 = tPart[#locH] + tPart[#offsetx] - (tPartMem.regPoint[1] * -1) - tSourceImage.width
  [513] getlocal 7 .............................. <tPartRectX1>
  [515] getlocal 11 ............................. <tSourceImage>
  [517] getobjprop 42 ........................... <tSourceImage.width>
  [519] add ..................................... <tPartRectX1 + tSourceImage.width>
  [520] setlocal 9 .............................. tPartRectX2 = tPartRectX1 + tSourceImage.width
  [522] getlocal 4 .............................. <tPart>
  [524] pushsymb 505 ............................ <#locV>
  [527] pusharglist 2 ........................... <tPart, #locV>
  [529] objcall 54 .............................. <tPart[#locV]>
  [531] getlocal 5 .............................. <tPartMem>
  [533] pushsymb 499 ............................ <#regPoint>
  [536] pushint8 2 .............................. <2>
  [538] pusharglist 3 ........................... <tPartMem, #regPoint, 2>
  [540] objcall 290 ............................. <tPartMem.regPoint[2]>
  [543] sub ..................................... <tPart[#locV] - tPartMem.regPoint[2]>
  [544] setlocal 8 .............................. tPartRectY1 = tPart[#locV] - tPartMem.regPoint[2]
  [546] getlocal 8 .............................. <tPartRectY1>
  [548] getlocal 11 ............................. <tSourceImage>
  [550] getobjprop 43 ........................... <tSourceImage.height>
  [552] add ..................................... <tPartRectY1 + tSourceImage.height>
  [553] setlocal 10 ............................. tPartRectY2 = tPartRectY1 + tSourceImage.height
  [555] getlocal 7 .............................. <tPartRectX1>
  [557] getlocal 8 .............................. <tPartRectY1>
  [559] getlocal 9 .............................. <tPartRectX2>
  [561] getlocal 10 ............................. <tPartRectY2>
  [563] pusharglist 4 ........................... <tPartRectX1, tPartRectY1, tPartRectX2, tPartRectY2>
  [565] extcall 555 ............................. <rect(tPartRectX1, tPartRectY1, tPartRectX2, tPartRectY2)>
  [568] setlocal 14 ............................. tPartRect = rect(tPartRectX1, tPartRectY1, tPartRectX2, tPartRectY2)
  [570] getlocal 11 ............................. <tSourceImage>
  [572] pusharglist 1 ........................... <tSourceImage>
  [574] objcall 558 ............................. <tSourceImage.createMatte()>
  [577] setlocal 15 ............................. tMatte = tSourceImage.createMatte()
  [579] pushint16 254 ........................... <254>
  [582] pushint16 254 ........................... <254>
  [585] pushint16 254 ........................... <254>
  [588] pusharglist 3 ........................... <254, 254, 254>
  [590] extcall 576 ............................. <rgb(254, 254, 254)>
  [593] setlocal 16 ............................. tBgColor = rgb(254, 254, 254)
  [595] getlocal 3 .............................. <tTargetImage>
  [597] getlocal 11 ............................. <tSourceImage>
  [599] getlocal 14 ............................. <tPartRect>
  [601] getlocal 11 ............................. <tSourceImage>
  [603] getobjprop 555 .......................... <tSourceImage.rect>
  [606] pushsymb 557 ............................ <#maskImage>
  [609] getlocal 15 ............................. <tMatte>
  [611] pushsymb 560 ............................ <#ink>
  [614] pushint8 41 ............................. <41>
  [616] pushsymb 1225 ........................... <#bgColor>
  [619] getlocal 16 ............................. <tBgColor>
  [621] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: 41, #bgColor: tBgColor]>
  [623] pushproplist ............................ <[#maskImage: tMatte, #ink: 41, #bgColor: tBgColor]>
  [624] pusharglistnoret 5 ...................... <tTargetImage, tSourceImage, tPartRect, tSourceImage.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tBgColor]>
  [626] objcall 556 ............................. tTargetImage.copyPixels(tSourceImage, tPartRect, tSourceImage.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tBgColor])
  [629] pushint8 1
  [631] add
  [632] endrepeat [ 80]
  [635] pop 3
  [637] getlocal 0 .............................. <tImgMember>
  [639] getlocal 3 .............................. <tTargetImage>
  [641] setobjprop 500 .......................... tImgMember.image = tTargetImage
  [644] getlocal 0 .............................. <tImgMember>
  [646] pushzero ................................ <0>
  [647] pushzero ................................ <0>
  [648] pusharglist 2 ........................... <0, 0>
  [650] extcall 508 ............................. <point(0, 0)>
  [653] setobjprop 499 .......................... tImgMember.regPoint = point(0, 0)
  [656] getprop 1657 ............................ <pWrapperStatus>
  [659] pushsymb 1658 ........................... <#rendered>
  [662] pushint8 1 .............................. <1>
  [664] pusharglistnoret 3 ...................... <pWrapperStatus, #rendered, 1>
  [666] objcall 24 .............................. pWrapperStatus[#rendered] = 1
  [668] pushint8 1 .............................. <1>
  [670] pusharglistnoret 1 ...................... <1>
  [672] extcall 25 .............................. return 1
  [674] ret
end
