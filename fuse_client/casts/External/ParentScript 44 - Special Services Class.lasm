property pCatchFlag, pSavedHook, pToolTipAct, pToolTipSpr, pToolTipMem, pToolTipID, pToolTipDel, pCurrCursor, pLastCursor, pUniqueSeed, pDecoder

on construct me
  [  0] pushzero ................................ <0>
  [  1] setprop 1078 ............................ pCatchFlag = 0
  [  4] pushzero ................................ <0>
  [  5] setprop 1079 ............................ pSavedHook = 0
  [  8] pushcons 0 .............................. <"tooltip.active">
  [ 10] pushzero ................................ <0>
  [ 11] pusharglist 2 ........................... <"tooltip.active", 0>
  [ 13] extcall 373 ............................. <getIntVariable("tooltip.active", 0)>
  [ 16] setprop 1080 ............................ pToolTipAct = getIntVariable("tooltip.active", 0)
  [ 19] pusharglist 0 ........................... <>
  [ 21] extcall 32 .............................. <VOID>
  [ 23] setprop 1081 ............................ pToolTipMem = VOID
  [ 26] pusharglist 0 ........................... <>
  [ 28] extcall 32 .............................. <VOID>
  [ 30] setprop 1082 ............................ pToolTipSpr = VOID
  [ 33] pushzero ................................ <0>
  [ 34] setprop 1083 ............................ pCurrCursor = 0
  [ 37] pushzero ................................ <0>
  [ 38] setprop 1084 ............................ pLastCursor = 0
  [ 41] pushzero ................................ <0>
  [ 42] setprop 1085 ............................ pUniqueSeed = 0
  [ 45] pushsymb 658 ............................ <#temp>
  [ 48] pushcons 1 .............................. <"connection.decoder.class">
  [ 50] pusharglist 1 ........................... <"connection.decoder.class">
  [ 52] extcall 155 ............................. <getClassVariable("connection.decoder.class")>
  [ 54] pusharglist 2 ........................... <#temp, getClassVariable("connection.decoder.class")>
  [ 56] extcall 94 .............................. <createObject(#temp, getClassVariable("connection.decoder.class"))>
  [ 58] setprop 1086 ............................ pDecoder = createObject(#temp, getClassVariable("connection.decoder.class"))
  [ 61] getprop 1086 ............................ <pDecoder>
  [ 64] pushcons 2 .............................. <"sulake1Unique2Key3Generator">
  [ 66] pusharglistnoret 2 ...................... <pDecoder, "sulake1Unique2Key3Generator">
  [ 68] objcall 1063 ............................ pDecoder.setKey("sulake1Unique2Key3Generator")
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglistnoret 1 ...................... <1>
  [ 75] extcall 25 .............................. return 1
  [ 77] ret
end

on deconstruct me
  [  0] getprop 1082 ............................ <pToolTipSpr>
  [  3] pusharglist 1 ........................... <pToolTipSpr>
  [  5] extcall 20 .............................. <voidp(pToolTipSpr)>
  [  7] not ..................................... <not voidp(pToolTipSpr)>
  [  8] jmpifz [ 20] ............................ if not voidp(pToolTipSpr) then
  [ 11] getprop 1082 ............................ <pToolTipSpr>
  [ 14] getobjprop 37 ........................... <pToolTipSpr.spriteNum>
  [ 16] pusharglistnoret 1 ...................... <pToolTipSpr.spriteNum>
  [ 18] extcall 233 ............................. releaseSprite(pToolTipSpr.spriteNum)
  [ 20] getprop 1081 ............................ <pToolTipMem>
  [ 23] pusharglist 1 ........................... <pToolTipMem>
  [ 25] extcall 20 .............................. <voidp(pToolTipMem)>
  [ 27] not ..................................... <not voidp(pToolTipMem)>
  [ 28] jmpifz [ 41] ............................ if not voidp(pToolTipMem) then
  [ 31] getprop 1081 ............................ <pToolTipMem>
  [ 34] getobjprop 727 .......................... <pToolTipMem.name>
  [ 37] pusharglistnoret 1 ...................... <pToolTipMem.name>
  [ 39] extcall 165 ............................. removeMember(pToolTipMem.name)
  [ 41] pusharglist 0 ........................... <>
  [ 43] extcall 32 .............................. <VOID>
  [ 45] setprop 1086 ............................ pDecoder = VOID
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 25 .............................. return 1
  [ 54] ret
end

on try me
  [  0] pushzero ................................ <0>
  [  1] setprop 1078 ............................ pCatchFlag = 0
  [  4] getmovieprop 675 ........................ <the alertHook>
  [  7] setprop 1079 ............................ pSavedHook = the alertHook
  [ 10] getparam 0 .............................. <me>
  [ 12] setmovieprop 675 ........................ the alertHook = me
  [ 15] pushint8 1 .............................. <1>
  [ 17] pusharglistnoret 1 ...................... <1>
  [ 19] extcall 25 .............................. return 1
  [ 21] ret
end

on catch me
  [  0] getprop 1079 ............................ <pSavedHook>
  [  3] setmovieprop 675 ........................ the alertHook = pSavedHook
  [  6] getprop 1078 ............................ <pCatchFlag>
  [  9] pusharglistnoret 1 ...................... <pCatchFlag>
  [ 11] extcall 25 .............................. return pCatchFlag
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 25 .............................. return 0
  [ 18] ret
end

on createToolTip me, tText
  [  0] getprop 1080 ............................ <pToolTipAct>
  [  3] jmpifz [129] ............................ if pToolTipAct then
  [  6] getprop 1081 ............................ <pToolTipMem>
  [  9] pusharglist 1 ........................... <pToolTipMem>
  [ 11] extcall 20 .............................. <voidp(pToolTipMem)>
  [ 13] jmpifz [ 23] ............................ if voidp(pToolTipMem) then
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 1 ...................... <me>
  [ 20] objcall 1076 ............................ me.prepareToolTip()
  [ 23] getprop 1082 ............................ <pToolTipSpr>
  [ 26] pusharglist 1 ........................... <pToolTipSpr>
  [ 28] extcall 20 .............................. <voidp(pToolTipSpr)>
  [ 30] jmpifz [ 40] ............................ if voidp(pToolTipSpr) then
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 1076 ............................ me.prepareToolTip()
  [ 40] getparam 1 .............................. <tText>
  [ 42] pusharglist 1 ........................... <tText>
  [ 44] extcall 20 .............................. <voidp(tText)>
  [ 46] jmpifz [ 53] ............................ if voidp(tText) then
  [ 49] pushcons 3 .............................. <"...">
  [ 51] setparam 1 .............................. tText = "..."
  [ 53] getprop 1082 ............................ <pToolTipSpr>
  [ 56] pushzero ................................ <0>
  [ 57] setobjprop 880 .......................... pToolTipSpr.visible = 0
  [ 60] getprop 1081 ............................ <pToolTipMem>
  [ 63] pushzero ................................ <0>
  [ 64] pushzero ................................ <0>
  [ 65] getparam 1 .............................. <tText>
  [ 67] pushsymb 600 ............................ <#line>
  [ 70] pushint8 1 .............................. <1>
  [ 72] pusharglist 3 ........................... <tText, #line, 1>
  [ 74] objcall 290 ............................. <tText.line[1]>
  [ 77] pusharglist 1 ........................... <tText.line[1]>
  [ 79] extcall 293 ............................. <length(tText.line[1])>
  [ 82] pushint8 8 .............................. <8>
  [ 84] mul ..................................... <length(tText.line[1]) * 8>
  [ 85] pushint8 20 ............................. <20>
  [ 87] pusharglist 4 ........................... <0, 0, length(tText.line[1]) * 8, 20>
  [ 89] extcall 557 ............................. <rect(0, 0, length(tText.line[1]) * 8, 20)>
  [ 92] setobjprop 557 .......................... pToolTipMem.rect = rect(0, 0, length(tText.line[1]) * 8, 20)
  [ 95] getprop 1081 ............................ <pToolTipMem>
  [ 98] getparam 1 .............................. <tText>
  [100] setobjprop 516 .......................... pToolTipMem.text = tText
  [103] getmovieprop 673 ........................ <the milliSeconds>
  [106] setprop 1087 ............................ pToolTipID = the milliSeconds
  [109] getparam 0 .............................. <me>
  [111] getprop 1088 ............................ <pToolTipDel>
  [114] pushsymb 1069 ........................... <#renderToolTip>
  [117] getprop 1087 ............................ <pToolTipID>
  [120] pusharglist 4 ........................... <me, pToolTipDel, #renderToolTip, pToolTipID>
  [122] objcall 551 ............................. <me.delay(pToolTipDel, #renderToolTip, pToolTipID)>
  [125] pusharglistnoret 1 ...................... <me.delay(pToolTipDel, #renderToolTip, pToolTipID)>
  [127] extcall 25 .............................. return me.delay(pToolTipDel, #renderToolTip, pToolTipID)
  [129] ret
end

on removeToolTip me, tNextID
  [  0] getprop 1080 ............................ <pToolTipAct>
  [  3] jmpifz [ 42] ............................ if pToolTipAct then
  [  6] getparam 1 .............................. <tNextID>
  [  8] pusharglist 1 ........................... <tNextID>
  [ 10] extcall 20 .............................. <voidp(tNextID)>
  [ 12] getprop 1087 ............................ <pToolTipID>
  [ 15] getparam 1 .............................. <tNextID>
  [ 17] eq ...................................... <pToolTipID = tNextID>
  [ 18] or ...................................... <voidp(tNextID) or (pToolTipID = tNextID)>
  [ 19] jmpifz [ 42] ............................ if voidp(tNextID) or (pToolTipID = tNextID) then
  [ 22] pusharglist 0 ........................... <>
  [ 24] extcall 32 .............................. <VOID>
  [ 26] setprop 1087 ............................ pToolTipID = VOID
  [ 29] getprop 1082 ............................ <pToolTipSpr>
  [ 32] pushzero ................................ <0>
  [ 33] setobjprop 880 .......................... pToolTipSpr.visible = 0
  [ 36] pushint8 1 .............................. <1>
  [ 38] pusharglistnoret 1 ...................... <1>
  [ 40] extcall 25 .............................. return 1
  [ 42] ret
end

on renderToolTip me, tNextID
  [  0] getprop 1080 ............................ <pToolTipAct>
  [  3] jmpifz [ 73] ............................ if pToolTipAct then
  [  6] getparam 1 .............................. <tNextID>
  [  8] getprop 1087 ............................ <pToolTipID>
  [ 11] nteq .................................... <tNextID <> pToolTipID>
  [ 12] getprop 1087 ............................ <pToolTipID>
  [ 15] pusharglist 1 ........................... <pToolTipID>
  [ 17] extcall 20 .............................. <voidp(pToolTipID)>
  [ 19] or ...................................... <(tNextID <> pToolTipID) or voidp(pToolTipID)>
  [ 20] jmpifz [ 28] ............................ if (tNextID <> pToolTipID) or voidp(pToolTipID) then
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 1 ...................... <0>
  [ 26] extcall 25 .............................. return 0
  [ 28] getprop 1082 ............................ <pToolTipSpr>
  [ 31] getmovieprop 1090 ....................... <the mouseLoc>
  [ 34] pushint8 2 .............................. <2>
  [ 36] inv ..................................... <-2>
  [ 37] pushint8 15 ............................. <15>
  [ 39] pusharglist 2 ........................... <[-2, 15]>
  [ 41] pushlist ................................ <[-2, 15]>
  [ 42] add ..................................... <the mouseLoc + [-2, 15]>
  [ 43] setobjprop 511 .......................... pToolTipSpr.loc = the mouseLoc + [-2, 15]
  [ 46] getprop 1082 ............................ <pToolTipSpr>
  [ 49] pushint8 1 .............................. <1>
  [ 51] setobjprop 880 .......................... pToolTipSpr.visible = 1
  [ 54] getparam 0 .............................. <me>
  [ 56] getprop 1088 ............................ <pToolTipDel>
  [ 59] pushint8 2 .............................. <2>
  [ 61] mul ..................................... <pToolTipDel * 2>
  [ 62] pushsymb 407 ............................ <#removeToolTip>
  [ 65] getprop 1087 ............................ <pToolTipID>
  [ 68] pusharglistnoret 4 ...................... <me, pToolTipDel * 2, #removeToolTip, pToolTipID>
  [ 70] objcall 551 ............................. me.delay(pToolTipDel * 2, #removeToolTip, pToolTipID)
  [ 73] ret
end

on setcursor me, ttype
  [  0] getparam 1 .............................. <ttype>
  [  2] peek 0 .................................. case ttype of
  [  4] pusharglist 0 ........................... <>
  [  6] extcall 32 .............................. <VOID>
  [  8] eq
  [  9] jmpifz [ 18] ............................ (case) VOID:
  [ 12] pushzero ................................ <0>
  [ 13] setparam 1 .............................. ttype = 0
  [ 15] jmp [106]
  [ 18] peek 0
  [ 20] pushsymb 47 ............................. <#arrow>
  [ 22] eq
  [ 23] jmpifz [ 32] ............................ (case) #arrow:
  [ 26] pushzero ................................ <0>
  [ 27] setparam 1 .............................. ttype = 0
  [ 29] jmp [106]
  [ 32] peek 0
  [ 34] pushsymb 48 ............................. <#ibeam>
  [ 36] eq
  [ 37] jmpifz [ 47] ............................ (case) #ibeam:
  [ 40] pushint8 1 .............................. <1>
  [ 42] setparam 1 .............................. ttype = 1
  [ 44] jmp [106]
  [ 47] peek 0
  [ 49] pushsymb 49 ............................. <#crosshair>
  [ 51] eq
  [ 52] jmpifz [ 62] ............................ (case) #crosshair:
  [ 55] pushint8 2 .............................. <2>
  [ 57] setparam 1 .............................. ttype = 2
  [ 59] jmp [106]
  [ 62] peek 0
  [ 64] pushsymb 50 ............................. <#crossbar>
  [ 66] eq
  [ 67] jmpifz [ 77] ............................ (case) #crossbar:
  [ 70] pushint8 3 .............................. <3>
  [ 72] setparam 1 .............................. ttype = 3
  [ 74] jmp [106]
  [ 77] peek 0
  [ 79] pushsymb 51 ............................. <#timer>
  [ 81] eq
  [ 82] jmpifz [ 92] ............................ (case) #timer:
  [ 85] pushint8 4 .............................. <4>
  [ 87] setparam 1 .............................. ttype = 4
  [ 89] jmp [106]
  [ 92] peek 0
  [ 94] pushsymb 1091 ........................... <#previous>
  [ 97] eq
  [ 98] jmpifz [106] ............................ (case) #previous:
  [101] getprop 1084 ............................ <pLastCursor>
  [104] setparam 1 .............................. ttype = pLastCursor
  [106] pop 1 ................................... end case
  [108] getparam 1 .............................. <ttype>
  [110] pusharglistnoret 1 ...................... <ttype>
  [112] extcall 45 .............................. cursor(ttype)
  [114] getprop 1083 ............................ <pCurrCursor>
  [117] setprop 1084 ............................ pLastCursor = pCurrCursor
  [120] getparam 1 .............................. <ttype>
  [122] setprop 1083 ............................ pCurrCursor = ttype
  [125] pushint8 1 .............................. <1>
  [127] pusharglistnoret 1 ...................... <1>
  [129] extcall 25 .............................. return 1
  [131] ret
end

on callJavaScriptFunction me, tCallString, tdata
  [  0] pushcons 4 .............................. <"Special Services::callJavascriptFunction">
  [  2] pusharglistnoret 1 ...................... <"Special Services::callJavascriptFunction">
  [  4] extcall 1092 ............................ startProfilingTask("Special Services::callJavascriptFunction")
  [  7] getmovieprop 82 ......................... <the runMode>
  [  9] pushcons 5 .............................. <"Author">
  [ 11] eq ...................................... <the runMode = "Author">
  [ 12] jmpifz [ 20] ............................ if the runMode = "Author" then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 25 .............................. return 0
  [ 20] pushcons 6 .............................. <"JavaScript Proxy">
  [ 22] pusharglist 1 ........................... <"JavaScript Proxy">
  [ 24] extcall 115 ............................. <script("JavaScript Proxy")>
  [ 26] pushcons 7 .............................. <QUOTE>
  [ 28] getparam 1 .............................. <tCallString>
  [ 30] joinstr ................................. <QUOTE & tCallString>
  [ 31] pushcons 7 .............................. <QUOTE>
  [ 33] joinstr ................................. <QUOTE & tCallString & QUOTE>
  [ 34] pushcons 7 .............................. <QUOTE>
  [ 36] getparam 2 .............................. <tdata>
  [ 38] joinstr ................................. <QUOTE & tdata>
  [ 39] pushcons 7 .............................. <QUOTE>
  [ 41] joinstr ................................. <QUOTE & tdata & QUOTE>
  [ 42] pusharglistnoret 3 ...................... <script("JavaScript Proxy"), QUOTE & tCallString & QUOTE, QUOTE & tdata & QUOTE>
  [ 44] objcall 1093 ............................ script("JavaScript Proxy").callJavaScript(QUOTE & tCallString & QUOTE, QUOTE & tdata & QUOTE)
  [ 47] pushcons 4 .............................. <"Special Services::callJavascriptFunction">
  [ 49] pusharglistnoret 1 ...................... <"Special Services::callJavascriptFunction">
  [ 51] extcall 1094 ............................ finishProfilingTask("Special Services::callJavascriptFunction")
  [ 54] ret
end

on openNetPage me, tURL_key, tTarget
  [  0] getparam 1 .............................. <tURL_key>
  [  2] pusharglist 1 ........................... <tURL_key>
  [  4] extcall 38 .............................. <stringp(tURL_key)>
  [  6] not ..................................... <not stringp(tURL_key)>
  [  7] jmpifz [ 15] ............................ if not stringp(tURL_key) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 25 .............................. return 0
  [ 15] getparam 1 .............................. <tURL_key>
  [ 17] pusharglist 1 ........................... <tURL_key>
  [ 19] extcall 260 ............................. <textExists(tURL_key)>
  [ 22] jmpifz [ 39] ............................ if textExists(tURL_key) then / else
  [ 25] getparam 1 .............................. <tURL_key>
  [ 27] getparam 1 .............................. <tURL_key>
  [ 29] pusharglist 2 ........................... <tURL_key, tURL_key>
  [ 31] extcall 259 ............................. <getText(tURL_key, tURL_key)>
  [ 34] setlocal 0 .............................. tURL = getText(tURL_key, tURL_key)
  [ 36] jmp [ 43]
  [ 39] getparam 1 .............................. <tURL_key>
  [ 41] setlocal 0 .............................. tURL = tURL_key
  [ 43] getparam 0 .............................. <me>
  [ 45] getlocal 0 .............................. <tURL>
  [ 47] pusharglist 2 ........................... <me, tURL>
  [ 49] objcall 1071 ............................ <me.getPredefinedURL(tURL)>
  [ 52] setlocal 0 .............................. tURL = me.getPredefinedURL(tURL)
  [ 54] pusharglist 0 ........................... <>
  [ 56] extcall 32 .............................. <VOID>
  [ 58] setlocal 1 .............................. tResolvedTarget = VOID
  [ 60] pushzero ................................ <0>
  [ 61] setlocal 2 .............................. tTargetIsPArent = 0
  [ 63] getparam 2 .............................. <tTarget>
  [ 65] pusharglist 1 ........................... <tTarget>
  [ 67] extcall 20 .............................. <voidp(tTarget)>
  [ 69] jmpifz [105] ............................ if voidp(tTarget) then / else
  [ 72] pushcons 8 .............................. <"default.url.open.target">
  [ 74] pusharglist 1 ........................... <"default.url.open.target">
  [ 76] extcall 376 ............................. <variableExists("default.url.open.target")>
  [ 79] jmpifz [ 98] ............................ if variableExists("default.url.open.target") then / else
  [ 82] pushcons 8 .............................. <"default.url.open.target">
  [ 84] pusharglist 1 ........................... <"default.url.open.target">
  [ 86] extcall 372 ............................. <getVariable("default.url.open.target")>
  [ 89] setlocal 1 .............................. tResolvedTarget = getVariable("default.url.open.target")
  [ 91] pushint8 1 .............................. <1>
  [ 93] setlocal 2 .............................. tTargetIsPArent = 1
  [ 95] jmp [102]
  [ 98] pushcons 9 .............................. <"_new">
  [100] setlocal 1 .............................. tResolvedTarget = "_new"
  [102] jmp [153]
  [105] getparam 2 .............................. <tTarget>
  [107] pushcons 10 ............................. <"self">
  [109] eq ...................................... <tTarget = "self">
  [110] getparam 2 .............................. <tTarget>
  [112] pushcons 11 ............................. <"_self">
  [114] eq ...................................... <tTarget = "_self">
  [115] or ...................................... <(tTarget = "self") or (tTarget = "_self")>
  [116] jmpifz [128] ............................ if (tTarget = "self") or (tTarget = "_self") then / else
  [119] pusharglist 0 ........................... <>
  [121] extcall 32 .............................. <VOID>
  [123] setlocal 1 .............................. tResolvedTarget = VOID
  [125] jmp [153]
  [128] getparam 2 .............................. <tTarget>
  [130] pushcons 9 .............................. <"_new">
  [132] eq ...................................... <tTarget = "_new">
  [133] getparam 2 .............................. <tTarget>
  [135] pushcons 12 ............................. <"new">
  [137] eq ...................................... <tTarget = "new">
  [138] or ...................................... <(tTarget = "_new") or (tTarget = "new")>
  [139] jmpifz [149] ............................ if (tTarget = "_new") or (tTarget = "new") then / else
  [142] pushcons 9 .............................. <"_new">
  [144] setlocal 1 .............................. tResolvedTarget = "_new"
  [146] jmp [153]
  [149] getparam 2 .............................. <tTarget>
  [151] setlocal 1 .............................. tResolvedTarget = tTarget
  [153] getlocal 0 .............................. <tURL>
  [155] getlocal 1 .............................. <tResolvedTarget>
  [157] pusharglistnoret 2 ...................... <tURL, tResolvedTarget>
  [159] extcall 91 .............................. gotoNetPage(tURL, tResolvedTarget)
  [161] pushcons 13 ............................. <"Open page:">
  [163] getlocal 0 .............................. <tURL>
  [165] joinpadstr .............................. <"Open page:" && tURL>
  [166] pushcons 14 ............................. <"target:">
  [168] joinpadstr .............................. <"Open page:" && tURL && "target:">
  [169] getlocal 1 .............................. <tResolvedTarget>
  [171] joinpadstr .............................. <"Open page:" && tURL && "target:" && tResolvedTarget>
  [172] pusharglistnoret 1 ...................... <"Open page:" && tURL && "target:" && tResolvedTarget>
  [174] extcall 644 ............................. put "Open page:" && tURL && "target:" && tResolvedTarget
  [177] pushint8 1 .............................. <1>
  [179] pusharglistnoret 1 ...................... <1>
  [181] extcall 25 .............................. return 1
  [183] ret
end

on showLoadingBar me, tLoadID, tProps
  [  0] pushsymb 657 ............................ <#random>
  [  3] pushcons 15 ............................. <"loading.bar.class">
  [  5] pusharglist 1 ........................... <"loading.bar.class">
  [  7] extcall 155 ............................. <getClassVariable("loading.bar.class")>
  [  9] pusharglist 2 ........................... <#random, getClassVariable("loading.bar.class")>
  [ 11] extcall 94 .............................. <createObject(#random, getClassVariable("loading.bar.class"))>
  [ 13] setlocal 0 .............................. tObj = createObject(#random, getClassVariable("loading.bar.class"))
  [ 15] getlocal 0 .............................. <tObj>
  [ 17] pushzero ................................ <0>
  [ 18] eq ...................................... <tObj = 0>
  [ 19] jmpifz [ 40] ............................ if tObj = 0 then
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 16 ............................. <"Couldn't create loading bar instance!">
  [ 26] pushsymb 408 ............................ <#showLoadingBar>
  [ 29] pushsymb 972 ............................ <#major>
  [ 32] pusharglist 4 ........................... <me, "Couldn't create loading bar instance!", #showLoadingBar, #major>
  [ 34] extcall 39 .............................. <error(me, "Couldn't create loading bar instance!", #showLoadingBar, #major)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Couldn't create loading bar instance!", #showLoadingBar, #major)>
  [ 38] extcall 25 .............................. return error(me, "Couldn't create loading bar instance!", #showLoadingBar, #major)
  [ 40] getlocal 0 .............................. <tObj>
  [ 42] getparam 1 .............................. <tLoadID>
  [ 44] getparam 2 .............................. <tProps>
  [ 46] pusharglist 3 ........................... <tObj, tLoadID, tProps>
  [ 48] objcall 436 ............................. <tObj.define(tLoadID, tProps)>
  [ 51] not ..................................... <not tObj.define(tLoadID, tProps)>
  [ 52] jmpifz [ 83] ............................ if not tObj.define(tLoadID, tProps) then
  [ 55] getlocal 0 .............................. <tObj>
  [ 57] pusharglist 1 ........................... <tObj>
  [ 59] objcall 3 ............................... <tObj.getID()>
  [ 61] pusharglistnoret 1 ...................... <tObj.getID()>
  [ 63] extcall 95 .............................. removeObject(tObj.getID())
  [ 65] getparam 0 .............................. <me>
  [ 67] pushcons 17 ............................. <"Couldn't initialize loading bar instance!">
  [ 69] pushsymb 408 ............................ <#showLoadingBar>
  [ 72] pushsymb 972 ............................ <#major>
  [ 75] pusharglist 4 ........................... <me, "Couldn't initialize loading bar instance!", #showLoadingBar, #major>
  [ 77] extcall 39 .............................. <error(me, "Couldn't initialize loading bar instance!", #showLoadingBar, #major)>
  [ 79] pusharglistnoret 1 ...................... <error(me, "Couldn't initialize loading bar instance!", #showLoadingBar, #major)>
  [ 81] extcall 25 .............................. return error(me, "Couldn't initialize loading bar instance!", #showLoadingBar, #major)
  [ 83] getlocal 0 .............................. <tObj>
  [ 85] pusharglist 1 ........................... <tObj>
  [ 87] objcall 3 ............................... <tObj.getID()>
  [ 89] pusharglistnoret 1 ...................... <tObj.getID()>
  [ 91] extcall 25 .............................. return tObj.getID()
  [ 93] ret
end

on getUniqueID me
  [  0] getprop 1085 ............................ <pUniqueSeed>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <pUniqueSeed + 1>
  [  6] setprop 1085 ............................ pUniqueSeed = pUniqueSeed + 1
  [  9] pushcons 18 ............................. <"uid:">
  [ 11] getprop 1085 ............................ <pUniqueSeed>
  [ 14] joinstr ................................. <"uid:" & pUniqueSeed>
  [ 15] pushcons 19 ............................. <":">
  [ 17] joinstr ................................. <"uid:" & pUniqueSeed & ":">
  [ 18] getmovieprop 673 ........................ <the milliSeconds>
  [ 21] joinstr ................................. <"uid:" & pUniqueSeed & ":" & the milliSeconds>
  [ 22] pusharglistnoret 1 ...................... <"uid:" & pUniqueSeed & ":" & the milliSeconds>
  [ 24] extcall 25 .............................. return "uid:" & pUniqueSeed & ":" & the milliSeconds
  [ 26] ret
end

on getMachineID me
  [  0] pushcons 20 ............................. <"pref.value.id">
  [  2] pusharglist 1 ........................... <"pref.value.id">
  [  4] extcall 372 ............................. <getVariable("pref.value.id")>
  [  7] pusharglist 1 ........................... <getVariable("pref.value.id")>
  [  9] extcall 1098 ............................ <getPref(getVariable("pref.value.id"))>
  [ 12] pusharglist 1 ........................... <getPref(getVariable("pref.value.id"))>
  [ 14] extcall 595 ............................. <string(getPref(getVariable("pref.value.id")))>
  [ 17] setlocal 0 .............................. tMachineID = string(getPref(getVariable("pref.value.id")))
  [ 19] getlocal 0 .............................. <tMachineID>
  [ 21] pushint8 10 ............................. <10>
  [ 23] pusharglist 1 ........................... <10>
  [ 25] extcall 861 ............................. <numToChar(10)>
  [ 28] pushcons 21 ............................. <EMPTY>
  [ 30] pusharglist 3 ........................... <tMachineID, numToChar(10), EMPTY>
  [ 32] extcall 279 ............................. <replaceChunks(tMachineID, numToChar(10), EMPTY)>
  [ 35] setlocal 0 .............................. tMachineID = replaceChunks(tMachineID, numToChar(10), EMPTY)
  [ 37] getlocal 0 .............................. <tMachineID>
  [ 39] pushint8 13 ............................. <13>
  [ 41] pusharglist 1 ........................... <13>
  [ 43] extcall 861 ............................. <numToChar(13)>
  [ 46] pushcons 21 ............................. <EMPTY>
  [ 48] pusharglist 3 ........................... <tMachineID, numToChar(13), EMPTY>
  [ 50] extcall 279 ............................. <replaceChunks(tMachineID, numToChar(13), EMPTY)>
  [ 53] setlocal 0 .............................. tMachineID = replaceChunks(tMachineID, numToChar(13), EMPTY)
  [ 55] pushint8 24 ............................. <24>
  [ 57] setlocal 1 .............................. tMaxLength = 24
  [ 59] getlocal 0 .............................. <tMachineID>
  [ 61] pushint8 1 .............................. <1>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pusharglist 3 ........................... <tMachineID, 1, 1>
  [ 67] extcall 932 ............................. <chars(tMachineID, 1, 1)>
  [ 70] pushcons 22 ............................. <"#">
  [ 72] eq ...................................... <chars(tMachineID, 1, 1) = "#">
  [ 73] jmpifz [ 95] ............................ if chars(tMachineID, 1, 1) = "#" then / else
  [ 76] getlocal 0 .............................. <tMachineID>
  [ 78] pushint8 2 .............................. <2>
  [ 80] getlocal 0 .............................. <tMachineID>
  [ 82] getobjprop 293 .......................... <tMachineID.length>
  [ 85] pusharglist 3 ........................... <tMachineID, 2, tMachineID.length>
  [ 87] extcall 932 ............................. <chars(tMachineID, 2, tMachineID.length)>
  [ 90] setlocal 0 .............................. tMachineID = chars(tMachineID, 2, tMachineID.length)
  [ 92] jmp [123]
  [ 95] getparam 0 .............................. <me>
  [ 97] getlocal 1 .............................. <tMaxLength>
  [ 99] pusharglist 2 ........................... <me, tMaxLength>
  [101] objcall 1074 ............................ <me.generateMachineId(tMaxLength)>
  [104] setlocal 0 .............................. tMachineID = me.generateMachineId(tMaxLength)
  [106] pushcons 20 ............................. <"pref.value.id">
  [108] pusharglist 1 ........................... <"pref.value.id">
  [110] extcall 372 ............................. <getVariable("pref.value.id")>
  [113] pushcons 22 ............................. <"#">
  [115] getlocal 0 .............................. <tMachineID>
  [117] joinstr ................................. <"#" & tMachineID>
  [118] pusharglistnoret 2 ...................... <getVariable("pref.value.id"), "#" & tMachineID>
  [120] extcall 1099 ............................ setPref(getVariable("pref.value.id"), "#" & tMachineID)
  [123] getlocal 0 .............................. <tMachineID>
  [125] pusharglistnoret 1 ...................... <tMachineID>
  [127] extcall 25 .............................. return tMachineID
  [129] ret
end

on getMoviePath me
  [  0] pushcons 23 ............................. <"system.v1">
  [  2] setlocal 0 .............................. tVariableID = "system.v1"
  [  4] getlocal 0 .............................. <tVariableID>
  [  6] pusharglist 1 ........................... <tVariableID>
  [  8] extcall 376 ............................. <variableExists(tVariableID)>
  [ 11] not ..................................... <not variableExists(tVariableID)>
  [ 12] jmpifz [ 30] ............................ if not variableExists(tVariableID) then
  [ 15] getlocal 0 .............................. <tVariableID>
  [ 17] getmovieprop 1101 ....................... <the moviePath>
  [ 20] pusharglist 1 ........................... <the moviePath>
  [ 22] extcall 281 ............................. <obfuscate(the moviePath)>
  [ 25] pusharglistnoret 2 ...................... <tVariableID, obfuscate(the moviePath)>
  [ 27] extcall 371 ............................. setVariable(tVariableID, obfuscate(the moviePath))
  [ 30] getlocal 0 .............................. <tVariableID>
  [ 32] pusharglist 1 ........................... <tVariableID>
  [ 34] extcall 372 ............................. <getVariable(tVariableID)>
  [ 37] pusharglist 1 ........................... <getVariable(tVariableID)>
  [ 39] extcall 89 .............................. <deobfuscate(getVariable(tVariableID))>
  [ 41] pusharglistnoret 1 ...................... <deobfuscate(getVariable(tVariableID))>
  [ 43] extcall 25 .............................. return deobfuscate(getVariable(tVariableID))
  [ 45] ret
end

on getDomainPart me, tPath
  [  0] getparam 1 .............................. <tPath>
  [  2] pusharglist 1 ........................... <tPath>
  [  4] extcall 20 .............................. <voidp(tPath)>
  [  6] jmpifz [ 15] ............................ if voidp(tPath) then
  [  9] pushcons 21 ............................. <EMPTY>
  [ 11] pusharglistnoret 1 ...................... <EMPTY>
  [ 13] extcall 25 .............................. return EMPTY
  [ 15] getparam 1 .............................. <tPath>
  [ 17] pushint8 1 .............................. <1>
  [ 19] pushint8 8 .............................. <8>
  [ 21] pusharglist 3 ........................... <tPath, 1, 8>
  [ 23] extcall 932 ............................. <chars(tPath, 1, 8)>
  [ 26] pushcons 24 ............................. <"https://">
  [ 28] eq ...................................... <chars(tPath, 1, 8) = "https://">
  [ 29] jmpifz [ 51] ............................ if chars(tPath, 1, 8) = "https://" then / else
  [ 32] getparam 1 .............................. <tPath>
  [ 34] pushint8 9 .............................. <9>
  [ 36] getparam 1 .............................. <tPath>
  [ 38] getobjprop 293 .......................... <tPath.length>
  [ 41] pusharglist 3 ........................... <tPath, 9, tPath.length>
  [ 43] extcall 932 ............................. <chars(tPath, 9, tPath.length)>
  [ 46] setparam 1 .............................. tPath = chars(tPath, 9, tPath.length)
  [ 48] jmp [ 84]
  [ 51] getparam 1 .............................. <tPath>
  [ 53] pushint8 1 .............................. <1>
  [ 55] pushint8 7 .............................. <7>
  [ 57] pusharglist 3 ........................... <tPath, 1, 7>
  [ 59] extcall 932 ............................. <chars(tPath, 1, 7)>
  [ 62] pushcons 25 ............................. <"http://">
  [ 64] eq ...................................... <chars(tPath, 1, 7) = "http://">
  [ 65] jmpifz [ 84] ............................ if chars(tPath, 1, 7) = "http://" then
  [ 68] getparam 1 .............................. <tPath>
  [ 70] pushint8 8 .............................. <8>
  [ 72] getparam 1 .............................. <tPath>
  [ 74] getobjprop 293 .......................... <tPath.length>
  [ 77] pusharglist 3 ........................... <tPath, 8, tPath.length>
  [ 79] extcall 932 ............................. <chars(tPath, 8, tPath.length)>
  [ 82] setparam 1 .............................. tPath = chars(tPath, 8, tPath.length)
  [ 84] getmovieprop 286 ........................ <the itemDelimiter>
  [ 87] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 89] pushcons 26 ............................. <"/">
  [ 91] setmovieprop 286 ........................ the itemDelimiter = "/"
  [ 94] getparam 1 .............................. <tPath>
  [ 96] pushsymb 287 ............................ <#item>
  [ 99] pushint8 1 .............................. <1>
  [101] pusharglist 3 ........................... <tPath, #item, 1>
  [103] objcall 290 ............................. <tPath.item[1]>
  [106] setparam 1 .............................. tPath = tPath.item[1]
  [108] pushcons 27 ............................. <".">
  [110] setmovieprop 286 ........................ the itemDelimiter = "."
  [113] pushint8 2 .............................. <2>
  [115] setlocal 1 .............................. tMaxItemCount = 2
  [117] getparam 1 .............................. <tPath>
  [119] pushcons 28 ............................. <".co.">
  [121] containsstr ............................. <tPath contains ".co.">
  [122] jmpifz [132] ............................ if tPath contains ".co." then
  [125] getlocal 1 .............................. <tMaxItemCount>
  [127] pushint8 1 .............................. <1>
  [129] add ..................................... <tMaxItemCount + 1>
  [130] setlocal 1 .............................. tMaxItemCount = tMaxItemCount + 1
  [132] getparam 1 .............................. <tPath>
  [134] pushsymb 287 ............................ <#item>
  [137] getparam 1 .............................. <tPath>
  [139] pushsymb 287 ............................ <#item>
  [142] pusharglist 2 ........................... <tPath, #item>
  [144] objcall 22 .............................. <tPath.item.count>
  [146] getlocal 1 .............................. <tMaxItemCount>
  [148] sub ..................................... <tPath.item.count - tMaxItemCount>
  [149] pushint8 1 .............................. <1>
  [151] add ..................................... <tPath.item.count - tMaxItemCount + 1>
  [152] getparam 1 .............................. <tPath>
  [154] pushsymb 287 ............................ <#item>
  [157] pusharglist 2 ........................... <tPath, #item>
  [159] objcall 22 .............................. <tPath.item.count>
  [161] pusharglist 4 ........................... <tPath, #item, tPath.item.count - tMaxItemCount + 1, tPath.item.count>
  [163] objcall 290 ............................. <tPath.item[tPath.item.count - tMaxItemCount + 1..tPath.item.count]>
  [166] setparam 1 .............................. tPath = tPath.item[tPath.item.count - tMaxItemCount + 1..tPath.item.count]
  [168] pushcons 19 ............................. <":">
  [170] setmovieprop 286 ........................ the itemDelimiter = ":"
  [173] getparam 1 .............................. <tPath>
  [175] pushsymb 287 ............................ <#item>
  [178] pushint8 1 .............................. <1>
  [180] pusharglist 3 ........................... <tPath, #item, 1>
  [182] objcall 290 ............................. <tPath.item[1]>
  [185] setparam 1 .............................. tPath = tPath.item[1]
  [187] getlocal 0 .............................. <tDelim>
  [189] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [192] getparam 1 .............................. <tPath>
  [194] pusharglistnoret 1 ...................... <tPath>
  [196] extcall 25 .............................. return tPath
  [198] ret
end

on getPredefinedURL me, tURL
  [  0] getparam 1 .............................. <tURL>
  [  2] pushcons 29 ............................. <"http://%predefined%/">
  [  4] containsstr ............................. <tURL contains "http://%predefined%/">
  [  5] jmpifz [ 92] ............................ if tURL contains "http://%predefined%/" then
  [  8] pushcons 30 ............................. <"url.prefix">
  [ 10] pusharglist 1 ........................... <"url.prefix">
  [ 12] extcall 376 ............................. <variableExists("url.prefix")>
  [ 15] jmpifz [ 74] ............................ if variableExists("url.prefix") then / else
  [ 18] pushcons 31 ............................. <"http://%predefined%">
  [ 20] setlocal 0 .............................. tReplace = "http://%predefined%"
  [ 22] pushcons 30 ............................. <"url.prefix">
  [ 24] pusharglist 1 ........................... <"url.prefix">
  [ 26] extcall 372 ............................. <getVariable("url.prefix")>
  [ 29] setlocal 1 .............................. tPrefix = getVariable("url.prefix")
  [ 31] getlocal 1 .............................. <tPrefix>
  [ 33] getlocal 1 .............................. <tPrefix>
  [ 35] getobjprop 293 .......................... <tPrefix.length>
  [ 38] getlocal 1 .............................. <tPrefix>
  [ 40] getobjprop 293 .......................... <tPrefix.length>
  [ 43] pusharglist 3 ........................... <tPrefix, tPrefix.length, tPrefix.length>
  [ 45] extcall 932 ............................. <chars(tPrefix, tPrefix.length, tPrefix.length)>
  [ 48] pushcons 26 ............................. <"/">
  [ 50] eq ...................................... <chars(tPrefix, tPrefix.length, tPrefix.length) = "/">
  [ 51] jmpifz [ 58] ............................ if chars(tPrefix, tPrefix.length, tPrefix.length) = "/" then
  [ 54] pushcons 29 ............................. <"http://%predefined%/">
  [ 56] setlocal 0 .............................. tReplace = "http://%predefined%/"
  [ 58] getparam 1 .............................. <tURL>
  [ 60] getlocal 0 .............................. <tReplace>
  [ 62] getlocal 1 .............................. <tPrefix>
  [ 64] pusharglist 3 ........................... <tURL, tReplace, tPrefix>
  [ 66] extcall 279 ............................. <replaceChunks(tURL, tReplace, tPrefix)>
  [ 69] setparam 1 .............................. tURL = replaceChunks(tURL, tReplace, tPrefix)
  [ 71] jmp [ 92]
  [ 74] getparam 0 .............................. <me>
  [ 76] pushcons 32 ............................. <"URL prefix not defined, invalid link.">
  [ 78] pushsymb 1071 ........................... <#getPredefinedURL>
  [ 81] pushsymb 934 ............................ <#minor>
  [ 84] pusharglist 4 ........................... <me, "URL prefix not defined, invalid link.", #getPredefinedURL, #minor>
  [ 86] extcall 39 .............................. <error(me, "URL prefix not defined, invalid link.", #getPredefinedURL, #minor)>
  [ 88] pusharglistnoret 1 ...................... <error(me, "URL prefix not defined, invalid link.", #getPredefinedURL, #minor)>
  [ 90] extcall 25 .............................. return error(me, "URL prefix not defined, invalid link.", #getPredefinedURL, #minor)
  [ 92] getparam 1 .............................. <tURL>
  [ 94] pusharglistnoret 1 ...................... <tURL>
  [ 96] extcall 25 .............................. return tURL
  [ 98] ret
end

on getExtVarPath me
  [  0] pushcons 33 ............................. <"system.v2">
  [  2] setlocal 0 .............................. tVariableID = "system.v2"
  [  4] getlocal 0 .............................. <tVariableID>
  [  6] pusharglist 1 ........................... <tVariableID>
  [  8] extcall 376 ............................. <variableExists(tVariableID)>
  [ 11] not ..................................... <not variableExists(tVariableID)>
  [ 12] jmpifz [ 30] ............................ if not variableExists(tVariableID) then
  [ 15] pusharglist 0 ........................... <>
  [ 17] extcall 368 ............................. <getVariableManager()>
  [ 20] pushcons 34 ............................. <"external.variables.txt">
  [ 22] pusharglist 2 ........................... <getVariableManager(), "external.variables.txt">
  [ 24] objcall 90 .............................. <getVariableManager().get("external.variables.txt")>
  [ 26] pusharglistnoret 1 ...................... <getVariableManager().get("external.variables.txt")>
  [ 28] extcall 25 .............................. return getVariableManager().get("external.variables.txt")
  [ 30] getlocal 0 .............................. <tVariableID>
  [ 32] pusharglist 1 ........................... <tVariableID>
  [ 34] extcall 372 ............................. <getVariable(tVariableID)>
  [ 37] pusharglist 1 ........................... <getVariable(tVariableID)>
  [ 39] extcall 89 .............................. <deobfuscate(getVariable(tVariableID))>
  [ 41] pusharglistnoret 1 ...................... <deobfuscate(getVariable(tVariableID))>
  [ 43] extcall 25 .............................. return deobfuscate(getVariable(tVariableID))
  [ 45] ret
end

on sendProcessTracking me, tStepValue
  [  0] pushcons 35 ............................. <"processlog.enabled">
  [  2] pusharglist 1 ........................... <"processlog.enabled">
  [  4] extcall 376 ............................. <variableExists("processlog.enabled")>
  [  7] not ..................................... <not variableExists("processlog.enabled")>
  [  8] jmpifz [ 16] ............................ if not variableExists("processlog.enabled") then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 25 .............................. return 0
  [ 16] pushcons 35 ............................. <"processlog.enabled">
  [ 18] pusharglist 1 ........................... <"processlog.enabled">
  [ 20] extcall 372 ............................. <getVariable("processlog.enabled")>
  [ 23] not ..................................... <not getVariable("processlog.enabled")>
  [ 24] jmpifz [ 32] ............................ if not getVariable("processlog.enabled") then
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 25 .............................. return 0
  [ 32] pushcons 36 ............................. <"javascriptLog">
  [ 34] pusharglist 1 ........................... <"javascriptLog">
  [ 36] extcall 115 ............................. <script("javascriptLog")>
  [ 38] pusharglist 1 ........................... <script("javascriptLog")>
  [ 40] objcall 1107 ............................ <script("javascriptLog").newJavascriptLog()>
  [ 43] setlocal 0 .............................. tJsHandler = script("javascriptLog").newJavascriptLog()
  [ 45] getlocal 0 .............................. <tJsHandler>
  [ 47] getparam 1 .............................. <tStepValue>
  [ 49] pusharglistnoret 2 ...................... <tJsHandler, tStepValue>
  [ 51] objcall 68 .............................. tJsHandler.call(tStepValue)
  [ 53] ret
end

on secretDecode me, tKey
  [  0] getparam 1 .............................. <tKey>
  [  2] getobjprop 293 .......................... <tKey.length>
  [  5] setlocal 0 .............................. tLength = tKey.length
  [  7] getlocal 0 .............................. <tLength>
  [  9] pushint8 2 .............................. <2>
  [ 11] mod ..................................... <tLength mod 2>
  [ 12] pushint8 1 .............................. <1>
  [ 14] eq ...................................... <(tLength mod 2) = 1>
  [ 15] jmpifz [ 25] ............................ if (tLength mod 2) = 1 then
  [ 18] getlocal 0 .............................. <tLength>
  [ 20] pushint8 1 .............................. <1>
  [ 22] sub ..................................... <tLength - 1>
  [ 23] setlocal 0 .............................. tLength = tLength - 1
  [ 25] getparam 1 .............................. <tKey>
  [ 27] pushsymb 291 ............................ <#char>
  [ 30] pushint8 1 .............................. <1>
  [ 32] getparam 1 .............................. <tKey>
  [ 34] getobjprop 293 .......................... <tKey.length>
  [ 37] pushint8 2 .............................. <2>
  [ 39] div ..................................... <tKey.length / 2>
  [ 40] pusharglist 4 ........................... <tKey, #char, 1, tKey.length / 2>
  [ 42] objcall 290 ............................. <tKey.char[1..tKey.length / 2]>
  [ 45] setlocal 1 .............................. tTable = tKey.char[1..tKey.length / 2]
  [ 47] getparam 1 .............................. <tKey>
  [ 49] pushsymb 291 ............................ <#char>
  [ 52] pushint8 1 .............................. <1>
  [ 54] getparam 1 .............................. <tKey>
  [ 56] getobjprop 293 .......................... <tKey.length>
  [ 59] pushint8 2 .............................. <2>
  [ 61] div ..................................... <tKey.length / 2>
  [ 62] add ..................................... <1 + (tKey.length / 2)>
  [ 63] getlocal 0 .............................. <tLength>
  [ 65] pusharglist 4 ........................... <tKey, #char, 1 + (tKey.length / 2), tLength>
  [ 67] objcall 290 ............................. <tKey.char[1 + (tKey.length / 2)..tLength]>
  [ 70] setparam 1 .............................. tKey = tKey.char[1 + (tKey.length / 2)..tLength]
  [ 72] pushzero ................................ <0>
  [ 73] setlocal 2 .............................. tCheckSum = 0
  [ 75] pushint8 1 .............................. <1>
  [ 77] setlocal 3
  [ 79] getlocal 3
  [ 81] getparam 1 .............................. <tKey>
  [ 83] getobjprop 293 .......................... <tKey.length>
  [ 86] lteq
  [ 87] jmpifz [218] ............................ repeat with i = 1 to tKey.length
  [ 90] getparam 1 .............................. <tKey>
  [ 92] pushsymb 291 ............................ <#char>
  [ 95] getlocal 3 .............................. <i>
  [ 97] pusharglist 3 ........................... <tKey, #char, i>
  [ 99] objcall 290 ............................. <tKey.char[i]>
  [102] setlocal 4 .............................. c = tKey.char[i]
  [104] getlocal 4 .............................. <c>
  [106] getlocal 1 .............................. <tTable>
  [108] pusharglist 2 ........................... <c, tTable>
  [110] extcall 292 ............................. <offset(c, tTable)>
  [113] pushint8 1 .............................. <1>
  [115] sub ..................................... <offset(c, tTable) - 1>
  [116] setlocal 5 .............................. a = offset(c, tTable) - 1
  [118] getlocal 5 .............................. <a>
  [120] pushint8 2 .............................. <2>
  [122] mod ..................................... <a mod 2>
  [123] pushzero ................................ <0>
  [124] eq ...................................... <(a mod 2) = 0>
  [125] jmpifz [135] ............................ if (a mod 2) = 0 then
  [128] getlocal 5 .............................. <a>
  [130] pushint8 2 .............................. <2>
  [132] mul ..................................... <a * 2>
  [133] setlocal 5 .............................. a = a * 2
  [135] getlocal 3 .............................. <i>
  [137] pushint8 1 .............................. <1>
  [139] sub ..................................... <i - 1>
  [140] pushint8 3 .............................. <3>
  [142] mod ..................................... <(i - 1) mod 3>
  [143] pushzero ................................ <0>
  [144] eq ...................................... <((i - 1) mod 3) = 0>
  [145] jmpifz [155] ............................ if ((i - 1) mod 3) = 0 then
  [148] getlocal 5 .............................. <a>
  [150] pushint8 3 .............................. <3>
  [152] mul ..................................... <a * 3>
  [153] setlocal 5 .............................. a = a * 3
  [155] getlocal 5 .............................. <a>
  [157] pushzero ................................ <0>
  [158] lt ...................................... <a < 0>
  [159] jmpifz [172] ............................ if a < 0 then
  [162] getparam 1 .............................. <tKey>
  [164] getobjprop 293 .......................... <tKey.length>
  [167] pushint8 2 .............................. <2>
  [169] mod ..................................... <tKey.length mod 2>
  [170] setlocal 5 .............................. a = tKey.length mod 2
  [172] getlocal 2 .............................. <tCheckSum>
  [174] getlocal 5 .............................. <a>
  [176] add ..................................... <tCheckSum + a>
  [177] setlocal 2 .............................. tCheckSum = tCheckSum + a
  [179] getlocal 2 .............................. <tCheckSum>
  [181] getlocal 5 .............................. <a>
  [183] pushint8 2 .............................. <2>
  [185] getlocal 3 .............................. <i>
  [187] pushint8 1 .............................. <1>
  [189] sub ..................................... <i - 1>
  [190] pushint8 3 .............................. <3>
  [192] mod ..................................... <(i - 1) mod 3>
  [193] pushint8 8 .............................. <8>
  [195] mul ..................................... <(i - 1) mod 3 * 8>
  [196] pusharglist 2 ........................... <2, (i - 1) mod 3 * 8>
  [198] extcall 1111 ............................ <power(2, (i - 1) mod 3 * 8)>
  [201] mul ..................................... <a * power(2, (i - 1) mod 3 * 8)>
  [202] pusharglist 2 ........................... <tCheckSum, a * power(2, (i - 1) mod 3 * 8)>
  [204] extcall 1110 ............................ <bitXor(tCheckSum, a * power(2, (i - 1) mod 3 * 8))>
  [207] setlocal 2 .............................. tCheckSum = bitXor(tCheckSum, a * power(2, (i - 1) mod 3 * 8))
  [209] pushint8 1
  [211] getlocal 3
  [213] add
  [214] setlocal 3
  [216] endrepeat [ 79]
  [218] getlocal 2 .............................. <tCheckSum>
  [220] pusharglistnoret 1 ...................... <tCheckSum>
  [222] extcall 25 .............................. return tCheckSum
  [224] ret
end

on readValueFromField me, tField, tDelimiter, tSearchedKey
  [  0] getparam 1 .............................. <tField>
  [  2] pushzero ................................ <0>
  [  3] getfield ................................ <field(tField)>
  [  4] setlocal 0 .............................. tStr = field(tField)
  [  6] getmovieprop 286 ........................ <the itemDelimiter>
  [  9] setlocal 1 .............................. tDelim = the itemDelimiter
  [ 11] getparam 2 .............................. <tDelimiter>
  [ 13] pusharglist 1 ........................... <tDelimiter>
  [ 15] extcall 20 .............................. <voidp(tDelimiter)>
  [ 17] jmpifz [ 24] ............................ if voidp(tDelimiter) then
  [ 20] pushcons 37 ............................. <RETURN>
  [ 22] setparam 2 .............................. tDelimiter = RETURN
  [ 24] getparam 2 .............................. <tDelimiter>
  [ 26] setmovieprop 286 ........................ the itemDelimiter = tDelimiter
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 2
  [ 33] getlocal 2
  [ 35] getlocal 0 .............................. <tStr>
  [ 37] pushsymb 287 ............................ <#item>
  [ 40] pusharglist 2 ........................... <tStr, #item>
  [ 42] objcall 22 .............................. <tStr.item.count>
  [ 44] lteq
  [ 45] jmpifz [367] ............................ repeat with i = 1 to tStr.item.count
  [ 48] getlocal 0 .............................. <tStr>
  [ 50] pushsymb 287 ............................ <#item>
  [ 53] getlocal 2 .............................. <i>
  [ 55] pusharglist 3 ........................... <tStr, #item, i>
  [ 57] objcall 290 ............................. <tStr.item[i]>
  [ 60] setlocal 3 .............................. tPair = tStr.item[i]
  [ 62] getlocal 3 .............................. <tPair>
  [ 64] pushsymb 289 ............................ <#word>
  [ 67] pushint8 1 .............................. <1>
  [ 69] pusharglist 3 ........................... <tPair, #word, 1>
  [ 71] objcall 288 ............................. <tPair.word[1]>
  [ 74] pushsymb 291 ............................ <#char>
  [ 77] pushint8 1 .............................. <1>
  [ 79] pusharglist 3 ........................... <tPair.word[1], #char, 1>
  [ 81] objcall 290 ............................. <tPair.word[1].char[1]>
  [ 84] pushcons 22 ............................. <"#">
  [ 86] nteq .................................... <tPair.word[1].char[1] <> "#">
  [ 87] getlocal 3 .............................. <tPair>
  [ 89] pushcons 21 ............................. <EMPTY>
  [ 91] nteq .................................... <tPair <> EMPTY>
  [ 92] and ..................................... <(tPair.word[1].char[1] <> "#") and (tPair <> EMPTY)>
  [ 93] jmpifz [352] ............................ if (tPair.word[1].char[1] <> "#") and (tPair <> EMPTY) then
  [ 96] pushcons 38 ............................. <"=">
  [ 98] setmovieprop 286 ........................ the itemDelimiter = "="
  [101] getlocal 3 .............................. <tPair>
  [103] pushsymb 287 ............................ <#item>
  [106] pushint8 1 .............................. <1>
  [108] pusharglist 3 ........................... <tPair, #item, 1>
  [110] objcall 288 ............................. <tPair.item[1]>
  [113] pushsymb 289 ............................ <#word>
  [116] pushint8 1 .............................. <1>
  [118] getlocal 3 .............................. <tPair>
  [120] pushsymb 287 ............................ <#item>
  [123] pushint8 1 .............................. <1>
  [125] pusharglist 3 ........................... <tPair, #item, 1>
  [127] objcall 288 ............................. <tPair.item[1]>
  [130] pushsymb 289 ............................ <#word>
  [133] pusharglist 2 ........................... <tPair.item[1], #word>
  [135] objcall 22 .............................. <tPair.item[1].word.count>
  [137] pusharglist 4 ........................... <tPair.item[1], #word, 1, tPair.item[1].word.count>
  [139] objcall 290 ............................. <tPair.item[1].word[1..tPair.item[1].word.count]>
  [142] setlocal 4 .............................. tProp = tPair.item[1].word[1..tPair.item[1].word.count]
  [144] getlocal 3 .............................. <tPair>
  [146] pushsymb 287 ............................ <#item>
  [149] pushint8 2 .............................. <2>
  [151] getlocal 3 .............................. <tPair>
  [153] pushsymb 287 ............................ <#item>
  [156] pusharglist 2 ........................... <tPair, #item>
  [158] objcall 22 .............................. <tPair.item.count>
  [160] pusharglist 4 ........................... <tPair, #item, 2, tPair.item.count>
  [162] objcall 290 ............................. <tPair.item[2..tPair.item.count]>
  [165] setlocal 5 .............................. tValue = tPair.item[2..tPair.item.count]
  [167] getlocal 5 .............................. <tValue>
  [169] pushsymb 289 ............................ <#word>
  [172] pushint8 1 .............................. <1>
  [174] getlocal 5 .............................. <tValue>
  [176] pushsymb 289 ............................ <#word>
  [179] pusharglist 2 ........................... <tValue, #word>
  [181] objcall 22 .............................. <tValue.word.count>
  [183] pusharglist 4 ........................... <tValue, #word, 1, tValue.word.count>
  [185] objcall 290 ............................. <tValue.word[1..tValue.word.count]>
  [188] setlocal 5 .............................. tValue = tValue.word[1..tValue.word.count]
  [190] getlocal 4 .............................. <tProp>
  [192] getparam 3 .............................. <tSearchedKey>
  [194] eq ...................................... <tProp = tSearchedKey>
  [195] jmpifz [352] ............................ if tProp = tSearchedKey then
  [198] getlocal 5 .............................. <tValue>
  [200] pusharglist 0 ........................... <>
  [202] extcall 886 ............................. <SPACE>
  [205] containsstr ............................. <tValue contains SPACE>
  [206] not ..................................... <not (tValue contains SPACE)>
  [207] getlocal 5 .............................. <tValue>
  [209] pusharglist 1 ........................... <tValue>
  [211] extcall 957 ............................. <integer(tValue)>
  [214] pusharglist 1 ........................... <integer(tValue)>
  [216] extcall 683 ............................. <integerp(integer(tValue))>
  [219] and ..................................... <not (tValue contains SPACE) and integerp(integer(tValue))>
  [220] jmpifz [263] ............................ if not (tValue contains SPACE) and integerp(integer(tValue)) then / else
  [223] getlocal 5 .............................. <tValue>
  [225] pusharglist 1 ........................... <tValue>
  [227] extcall 957 ............................. <integer(tValue)>
  [230] pusharglist 1 ........................... <integer(tValue)>
  [232] extcall 595 ............................. <string(integer(tValue))>
  [235] pusharglist 1 ........................... <string(integer(tValue))>
  [237] extcall 293 ............................. <length(string(integer(tValue)))>
  [240] getlocal 5 .............................. <tValue>
  [242] pusharglist 1 ........................... <tValue>
  [244] extcall 293 ............................. <length(tValue)>
  [247] eq ...................................... <length(string(integer(tValue))) = length(tValue)>
  [248] jmpifz [260] ............................ if length(string(integer(tValue))) = length(tValue) then
  [251] getlocal 5 .............................. <tValue>
  [253] pusharglist 1 ........................... <tValue>
  [255] extcall 957 ............................. <integer(tValue)>
  [258] setlocal 5 .............................. tValue = integer(tValue)
  [260] jmp [287]
  [263] getlocal 5 .............................. <tValue>
  [265] pusharglist 1 ........................... <tValue>
  [267] extcall 944 ............................. <float(tValue)>
  [270] pusharglist 1 ........................... <float(tValue)>
  [272] extcall 1116 ............................ <floatp(float(tValue))>
  [275] jmpifz [287] ............................ if floatp(float(tValue)) then
  [278] getlocal 5 .............................. <tValue>
  [280] pusharglist 1 ........................... <tValue>
  [282] extcall 944 ............................. <float(tValue)>
  [285] setlocal 5 .............................. tValue = float(tValue)
  [287] getlocal 5 .............................. <tValue>
  [289] pusharglist 1 ........................... <tValue>
  [291] extcall 38 .............................. <stringp(tValue)>
  [293] jmpifz [341] ............................ if stringp(tValue) then
  [296] pushint8 1 .............................. <1>
  [298] setlocal 6
  [300] getlocal 6
  [302] getlocal 5 .............................. <tValue>
  [304] pusharglist 1 ........................... <tValue>
  [306] extcall 293 ............................. <length(tValue)>
  [309] lteq
  [310] jmpifz [341] ............................ repeat with j = 1 to length(tValue)
  [313] getlocal 5 .............................. <tValue>
  [315] pushsymb 291 ............................ <#char>
  [318] getlocal 6 .............................. <j>
  [320] pusharglist 3 ........................... <tValue, #char, j>
  [322] objcall 290 ............................. <tValue.char[j]>
  [325] pusharglist 1 ........................... <tValue.char[j]>
  [327] extcall 917 ............................. <charToNum(tValue.char[j])>
  [330] pop 1 ................................... case charToNum(tValue.char[j]) of / end case
  [332] pushint8 1
  [334] getlocal 6
  [336] add
  [337] setlocal 6
  [339] endrepeat [300]
  [341] getlocal 1 .............................. <tDelim>
  [343] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [346] getlocal 5 .............................. <tValue>
  [348] pusharglistnoret 1 ...................... <tValue>
  [350] extcall 25 .............................. return tValue
  [352] getparam 2 .............................. <tDelimiter>
  [354] setmovieprop 286 ........................ the itemDelimiter = tDelimiter
  [357] pushint8 1
  [359] getlocal 2
  [361] add
  [362] setlocal 2
  [364] endrepeat [ 33]
  [367] getlocal 1 .............................. <tDelim>
  [369] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [372] pushzero ................................ <0>
  [373] pusharglistnoret 1 ...................... <0>
  [375] extcall 25 .............................. return 0
  [377] ret
end

on addRandomParamToURL me, tURL
  [  0] pushcons 39 ............................. <"randp">
  [  2] setlocal 0 .............................. tRandomParamName = "randp"
  [  4] pushcons 40 ............................. <"?">
  [  6] setlocal 1 .............................. tSeparator = "?"
  [  8] getparam 1 .............................. <tURL>
  [ 10] pushcons 40 ............................. <"?">
  [ 12] containsstr ............................. <tURL contains "?">
  [ 13] jmpifz [ 20] ............................ if tURL contains "?" then
  [ 16] pushcons 41 ............................. <"&">
  [ 18] setlocal 1 .............................. tSeparator = "&"
  [ 20] getparam 1 .............................. <tURL>
  [ 22] getlocal 1 .............................. <tSeparator>
  [ 24] joinstr ................................. <tURL & tSeparator>
  [ 25] getlocal 0 .............................. <tRandomParamName>
  [ 27] joinstr ................................. <tURL & tSeparator & tRandomParamName>
  [ 28] pushint16 999 ........................... <999>
  [ 31] pusharglist 1 ........................... <999>
  [ 33] extcall 657 ............................. <random(999)>
  [ 36] joinstr ................................. <tURL & tSeparator & tRandomParamName & random(999)>
  [ 37] pushcons 42 ............................. <"=1">
  [ 39] joinstr ................................. <tURL & tSeparator & tRandomParamName & random(999) & "=1">
  [ 40] setparam 1 .............................. tURL = tURL & tSeparator & tRandomParamName & random(999) & "=1"
  [ 42] getparam 1 .............................. <tURL>
  [ 44] pusharglistnoret 1 ...................... <tURL>
  [ 46] extcall 25 .............................. return tURL
  [ 48] ret
end

on print me, tObj, tMsg
  [  0] getparam 1 .............................. <tObj>
  [  2] pusharglist 1 ........................... <tObj>
  [  4] extcall 595 ............................. <string(tObj)>
  [  7] setparam 1 .............................. tObj = string(tObj)
  [  9] getparam 1 .............................. <tObj>
  [ 11] pushsymb 289 ............................ <#word>
  [ 14] pushint8 2 .............................. <2>
  [ 16] getparam 1 .............................. <tObj>
  [ 18] pushsymb 289 ............................ <#word>
  [ 21] pusharglist 2 ........................... <tObj, #word>
  [ 23] objcall 22 .............................. <tObj.word.count>
  [ 25] pushint8 2 .............................. <2>
  [ 27] sub ..................................... <tObj.word.count - 2>
  [ 28] pusharglist 4 ........................... <tObj, #word, 2, tObj.word.count - 2>
  [ 30] objcall 290 ............................. <tObj.word[2..tObj.word.count - 2]>
  [ 33] setparam 1 .............................. tObj = tObj.word[2..tObj.word.count - 2]
  [ 35] getparam 1 .............................. <tObj>
  [ 37] pushsymb 291 ............................ <#char>
  [ 40] pushint8 2 .............................. <2>
  [ 42] getparam 1 .............................. <tObj>
  [ 44] pusharglist 1 ........................... <tObj>
  [ 46] extcall 293 ............................. <length(tObj)>
  [ 49] pusharglist 4 ........................... <tObj, #char, 2, length(tObj)>
  [ 51] objcall 290 ............................. <tObj.char[2..length(tObj)]>
  [ 54] setparam 1 .............................. tObj = tObj.char[2..length(tObj)]
  [ 56] pushcons 43 ............................. <"Print:">
  [ 58] pushcons 37 ............................. <RETURN>
  [ 60] joinstr ................................. <"Print:" & RETURN>
  [ 61] pushcons 44 ............................. <TAB>
  [ 63] joinstr ................................. <"Print:" & RETURN & TAB>
  [ 64] pushcons 45 ............................. <"Object: ">
  [ 66] joinpadstr .............................. <"Print:" & RETURN & TAB && "Object: ">
  [ 67] getparam 1 .............................. <tObj>
  [ 69] joinpadstr .............................. <"Print:" & RETURN & TAB && "Object: " && tObj>
  [ 70] pushcons 37 ............................. <RETURN>
  [ 72] joinstr ................................. <"Print:" & RETURN & TAB && "Object: " && tObj & RETURN>
  [ 73] pushcons 44 ............................. <TAB>
  [ 75] joinstr ................................. <"Print:" & RETURN & TAB && "Object: " && tObj & RETURN & TAB>
  [ 76] pushcons 46 ............................. <"Message:">
  [ 78] joinpadstr .............................. <"Print:" & RETURN & TAB && "Object: " && tObj & RETURN & TAB && "Message:">
  [ 79] getparam 2 .............................. <tMsg>
  [ 81] joinpadstr .............................. <"Print:" & RETURN & TAB && "Object: " && tObj & RETURN & TAB && "Message:" && tMsg>
  [ 82] pusharglistnoret 1 ...................... <"Print:" & RETURN & TAB && "Object: " && tObj & RETURN & TAB && "Message:" && tMsg>
  [ 84] extcall 644 ............................. put "Print:" & RETURN & TAB && "Object: " && tObj & RETURN & TAB && "Message:" && tMsg
  [ 87] ret
end

on generateMachineId me, tMaxLength
  [  0] getmovieprop 673 ........................ <the milliSeconds>
  [  3] pusharglist 1 ........................... <the milliSeconds>
  [  5] extcall 595 ............................. <string(the milliSeconds)>
  [  8] pusharglist 0 ........................... <>
  [ 10] thebuiltin 1119 ......................... <the time>
  [ 13] pusharglist 1 ........................... <the time>
  [ 15] extcall 595 ............................. <string(the time)>
  [ 18] joinstr ................................. <string(the milliSeconds) & string(the time)>
  [ 19] pusharglist 0 ........................... <>
  [ 21] thebuiltin 1120 ......................... <the date>
  [ 24] pusharglist 1 ........................... <the date>
  [ 26] extcall 595 ............................. <string(the date)>
  [ 29] joinstr ................................. <string(the milliSeconds) & string(the time) & string(the date)>
  [ 30] setlocal 0 .............................. tMachineID = string(the milliSeconds) & string(the time) & string(the date)
  [ 32] pushcons 27 ............................. <".">
  [ 34] pushcons 47 ............................. <",">
  [ 36] pushcons 19 ............................. <":">
  [ 38] pushcons 48 ............................. <";">
  [ 40] pushcons 26 ............................. <"/">
  [ 42] pushcons 49 ............................. <"\\">
  [ 44] pushcons 50 ............................. <"am">
  [ 46] pushcons 51 ............................. <"pm">
  [ 48] pushcons 52 ............................. <" ">
  [ 50] pushcons 53 ............................. <"-">
  [ 52] pushcons 54 ............................. <"AM">
  [ 54] pushcons 55 ............................. <"PM">
  [ 56] pushint8 10 ............................. <10>
  [ 58] pusharglist 1 ........................... <10>
  [ 60] extcall 861 ............................. <numToChar(10)>
  [ 63] pushint8 13 ............................. <13>
  [ 65] pusharglist 1 ........................... <13>
  [ 67] extcall 861 ............................. <numToChar(13)>
  [ 70] pusharglist 14 .......................... <[".", ",", ":", ";", "/", "\\", "am", "pm", " ", "-", "AM", "PM", numToChar(10), numToChar(13)]>
  [ 72] pushlist ................................ <[".", ",", ":", ";", "/", "\\", "am", "pm", " ", "-", "AM", "PM", numToChar(10), numToChar(13)]>
  [ 73] setlocal 1 .............................. tLocaleDelimiters = [".", ",", ":", ";", "/", "\\", "am", "pm", " ", "-", "AM", "PM", numToChar(10), numToChar(13)]
  [ 75] getlocal 1 .............................. <tLocaleDelimiters>
  [ 77] peek 0
  [ 79] pusharglist 1
  [ 81] extcall 22
  [ 83] pushint8 1
  [ 85] peek 0
  [ 87] peek 2
  [ 89] lteq
  [ 90] jmpifz [121] ............................ repeat with tDelimiter in tLocaleDelimiters
  [ 93] peek 2
  [ 95] peek 1
  [ 97] pusharglist 2
  [ 99] extcall 54
  [101] setlocal 2
  [103] getlocal 0 .............................. <tMachineID>
  [105] getlocal 2 .............................. <tDelimiter>
  [107] pushcons 21 ............................. <EMPTY>
  [109] pusharglist 3 ........................... <tMachineID, tDelimiter, EMPTY>
  [111] extcall 279 ............................. <replaceChunks(tMachineID, tDelimiter, EMPTY)>
  [114] setlocal 0 .............................. tMachineID = replaceChunks(tMachineID, tDelimiter, EMPTY)
  [116] pushint8 1
  [118] add
  [119] endrepeat [ 85]
  [121] pop 3
  [123] getlocal 0 .............................. <tMachineID>
  [125] pushint8 1 .............................. <1>
  [127] getparam 1 .............................. <tMaxLength>
  [129] pusharglist 3 ........................... <tMachineID, 1, tMaxLength>
  [131] extcall 932 ............................. <chars(tMachineID, 1, tMaxLength)>
  [134] setlocal 0 .............................. tMachineID = chars(tMachineID, 1, tMaxLength)
  [136] getlocal 0 .............................. <tMachineID>
  [138] pusharglistnoret 1 ...................... <tMachineID>
  [140] extcall 25 .............................. return tMachineID
  [142] ret
end

on setExtVarPath me, tURL
  [  0] pushcons 33 ............................. <"system.v2">
  [  2] getparam 1 .............................. <tURL>
  [  4] pusharglist 1 ........................... <tURL>
  [  6] extcall 281 ............................. <obfuscate(tURL)>
  [  9] pusharglist 2 ........................... <"system.v2", obfuscate(tURL)>
  [ 11] extcall 371 ............................. <setVariable("system.v2", obfuscate(tURL))>
  [ 14] pusharglistnoret 1 ...................... <setVariable("system.v2", obfuscate(tURL))>
  [ 16] extcall 25 .............................. return setVariable("system.v2", obfuscate(tURL))
  [ 18] ret
end

on prepareToolTip me
  [  0] getprop 1080 ............................ <pToolTipAct>
  [  3] jmpifz [196] ............................ if pToolTipAct then
  [  6] pushcons 56 ............................. <"struct.font.tooltip">
  [  8] pusharglist 1 ........................... <"struct.font.tooltip">
  [ 10] extcall 374 ............................. <getStructVariable("struct.font.tooltip")>
  [ 13] setlocal 0 .............................. tFontStruct = getStructVariable("struct.font.tooltip")
  [ 15] pushcons 57 ............................. <"ToolTip Text">
  [ 17] pushsymb 786 ............................ <#field>
  [ 20] pusharglist 2 ........................... <"ToolTip Text", #field>
  [ 22] extcall 164 ............................. <createMember("ToolTip Text", #field)>
  [ 24] pusharglist 1 ........................... <createMember("ToolTip Text", #field)>
  [ 26] extcall 41 .............................. <member(createMember("ToolTip Text", #field))>
  [ 28] setprop 1081 ............................ pToolTipMem = member(createMember("ToolTip Text", #field))
  [ 31] getprop 1081 ............................ <pToolTipMem>
  [ 34] pushsymb 1122 ........................... <#adjust>
  [ 37] setobjprop 853 .......................... pToolTipMem.boxType = #adjust
  [ 40] getprop 1081 ............................ <pToolTipMem>
  [ 43] pushzero ................................ <0>
  [ 44] setobjprop 594 .......................... pToolTipMem.wordWrap = 0
  [ 47] getprop 1081 ............................ <pToolTipMem>
  [ 50] pushzero ................................ <0>
  [ 51] pushzero ................................ <0>
  [ 52] pushint8 10 ............................. <10>
  [ 54] pushint8 20 ............................. <20>
  [ 56] pusharglist 4 ........................... <0, 0, 10, 20>
  [ 58] extcall 557 ............................. <rect(0, 0, 10, 20)>
  [ 61] setobjprop 557 .......................... pToolTipMem.rect = rect(0, 0, 10, 20)
  [ 64] getprop 1081 ............................ <pToolTipMem>
  [ 67] pushint8 1 .............................. <1>
  [ 69] setobjprop 1123 ......................... pToolTipMem.border = 1
  [ 72] getprop 1081 ............................ <pToolTipMem>
  [ 75] pushint8 4 .............................. <4>
  [ 77] setobjprop 1124 ......................... pToolTipMem.margin = 4
  [ 80] getprop 1081 ............................ <pToolTipMem>
  [ 83] pushcons 58 ............................. <"center">
  [ 85] setobjprop 472 .......................... pToolTipMem.alignment = "center"
  [ 88] getprop 1081 ............................ <pToolTipMem>
  [ 91] getlocal 0 .............................. <tFontStruct>
  [ 93] pushsymb 596 ............................ <#font>
  [ 96] pusharglist 2 ........................... <tFontStruct, #font>
  [ 98] objcall 31 .............................. <tFontStruct.getaProp(#font)>
  [100] setobjprop 596 .......................... pToolTipMem.font = tFontStruct.getaProp(#font)
  [103] getprop 1081 ............................ <pToolTipMem>
  [106] getlocal 0 .............................. <tFontStruct>
  [108] pushsymb 598 ............................ <#fontSize>
  [111] pusharglist 2 ........................... <tFontStruct, #fontSize>
  [113] objcall 31 .............................. <tFontStruct.getaProp(#fontSize)>
  [115] setobjprop 598 .......................... pToolTipMem.fontSize = tFontStruct.getaProp(#fontSize)
  [118] getprop 1081 ............................ <pToolTipMem>
  [121] getlocal 0 .............................. <tFontStruct>
  [123] pushsymb 599 ............................ <#color>
  [126] pusharglist 2 ........................... <tFontStruct, #color>
  [128] objcall 31 .............................. <tFontStruct.getaProp(#color)>
  [130] setobjprop 599 .......................... pToolTipMem.color = tFontStruct.getaProp(#color)
  [133] getparam 0 .............................. <me>
  [135] pusharglist 1 ........................... <me>
  [137] objcall 3 ............................... <me.getID()>
  [139] pusharglist 1 ........................... <me.getID()>
  [141] extcall 232 ............................. <reserveSprite(me.getID())>
  [143] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [145] extcall 36 .............................. <sprite(reserveSprite(me.getID()))>
  [147] setprop 1082 ............................ pToolTipSpr = sprite(reserveSprite(me.getID()))
  [150] getprop 1082 ............................ <pToolTipSpr>
  [153] getprop 1081 ............................ <pToolTipMem>
  [156] setobjprop 41 ........................... pToolTipSpr.member = pToolTipMem
  [158] getprop 1082 ............................ <pToolTipSpr>
  [161] pushzero ................................ <0>
  [162] setobjprop 880 .......................... pToolTipSpr.visible = 0
  [165] getprop 1082 ............................ <pToolTipSpr>
  [168] pushint32 200000000 ..................... <200000000>
  [173] setobjprop 883 .......................... pToolTipSpr.locZ = 200000000
  [176] pusharglist 0 ........................... <>
  [178] extcall 32 .............................. <VOID>
  [180] setprop 1087 ............................ pToolTipID = VOID
  [183] pushcons 59 ............................. <"tooltip.delay">
  [185] pushint16 2000 .......................... <2000>
  [188] pusharglist 2 ........................... <"tooltip.delay", 2000>
  [190] extcall 373 ............................. <getIntVariable("tooltip.delay", 2000)>
  [193] setprop 1088 ............................ pToolTipDel = getIntVariable("tooltip.delay", 2000)
  [196] ret
end

on alertHook me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1078 ............................ pCatchFlag = 1
  [  5] getprop 1079 ............................ <pSavedHook>
  [  8] setmovieprop 675 ........................ the alertHook = pSavedHook
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 25 .............................. return 1
  [ 17] ret
end

on getReceipt me, tStamp
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tReceipt = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] getparam 1 .............................. <tStamp>
  [ 13] getobjprop 293 .......................... <tStamp.length>
  [ 16] lteq
  [ 17] jmpifz [ 74] ............................ repeat with tCharNo = 1 to tStamp.length
  [ 20] getparam 1 .............................. <tStamp>
  [ 22] getlocal 1 .............................. <tCharNo>
  [ 24] getlocal 1 .............................. <tCharNo>
  [ 26] pusharglist 3 ........................... <tStamp, tCharNo, tCharNo>
  [ 28] extcall 932 ............................. <chars(tStamp, tCharNo, tCharNo)>
  [ 31] setlocal 2 .............................. tChar = chars(tStamp, tCharNo, tCharNo)
  [ 33] getlocal 2 .............................. <tChar>
  [ 35] pusharglist 1 ........................... <tChar>
  [ 37] extcall 917 ............................. <charToNum(tChar)>
  [ 40] setlocal 2 .............................. tChar = charToNum(tChar)
  [ 42] getlocal 2 .............................. <tChar>
  [ 44] getlocal 1 .............................. <tCharNo>
  [ 46] mul ..................................... <tChar * tCharNo>
  [ 47] pushint32 309203 ........................ <309203>
  [ 52] add ..................................... <(tChar * tCharNo) + 309203>
  [ 53] setlocal 2 .............................. tChar = (tChar * tCharNo) + 309203
  [ 55] getlocal 0 .............................. <tReceipt>
  [ 57] getlocal 1 .............................. <tCharNo>
  [ 59] getlocal 2 .............................. <tChar>
  [ 61] pusharglistnoret 3 ...................... <tReceipt, tCharNo, tChar>
  [ 63] objcall 24 .............................. tReceipt[tCharNo] = tChar
  [ 65] pushint8 1
  [ 67] getlocal 1
  [ 69] add
  [ 70] setlocal 1
  [ 72] endrepeat [  9]
  [ 74] getlocal 0 .............................. <tReceipt>
  [ 76] pusharglistnoret 1 ...................... <tReceipt>
  [ 78] extcall 25 .............................. return tReceipt
  [ 80] ret
end
