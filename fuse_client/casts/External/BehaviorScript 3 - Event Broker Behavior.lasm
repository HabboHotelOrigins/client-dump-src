property id, pSprite, pLink, pProcList

on registerProcedure me, tMethod, tClientID, tEvent
  [  0] getprop 21 .............................. <pProcList>
  [  2] pusharglist 1 ........................... <pProcList>
  [  4] extcall 20 .............................. <voidp(pProcList)>
  [  6] jmpifz [ 17] ............................ if voidp(pProcList) then
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 19 .............................. <me.createProcListTemplate()>
  [ 15] setprop 21 .............................. pProcList = me.createProcListTemplate()
  [ 17] getparam 3 .............................. <tEvent>
  [ 19] pusharglist 1 ........................... <tEvent>
  [ 21] extcall 20 .............................. <voidp(tEvent)>
  [ 23] getparam 1 .............................. <tMethod>
  [ 25] pusharglist 1 ........................... <tMethod>
  [ 27] extcall 20 .............................. <voidp(tMethod)>
  [ 29] and ..................................... <voidp(tEvent) and voidp(tMethod)>
  [ 30] jmpifz [ 80] ............................ if voidp(tEvent) and voidp(tMethod) then / else
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 0
  [ 37] getlocal 0
  [ 39] getprop 21 .............................. <pProcList>
  [ 41] getobjprop 22 ........................... <pProcList.count>
  [ 43] lteq
  [ 44] jmpifz [ 77] ............................ repeat with i = 1 to pProcList.count
  [ 47] getprop 21 .............................. <pProcList>
  [ 49] getlocal 0 .............................. <i>
  [ 51] getprop 21 .............................. <pProcList>
  [ 53] getlocal 0 .............................. <i>
  [ 55] pusharglist 2 ........................... <pProcList, i>
  [ 57] objcall 23 .............................. <pProcList.getPropAt(i)>
  [ 59] getparam 2 .............................. <tClientID>
  [ 61] pusharglist 2 ........................... <[pProcList.getPropAt(i), tClientID]>
  [ 63] pushlist ................................ <[pProcList.getPropAt(i), tClientID]>
  [ 64] pusharglistnoret 3 ...................... <pProcList, i, [pProcList.getPropAt(i), tClientID]>
  [ 66] objcall 24 .............................. pProcList[i] = [pProcList.getPropAt(i), tClientID]
  [ 68] pushint8 1
  [ 70] getlocal 0
  [ 72] add
  [ 73] setlocal 0
  [ 75] endrepeat [ 37]
  [ 77] jmp [158]
  [ 80] getparam 3 .............................. <tEvent>
  [ 82] pusharglist 1 ........................... <tEvent>
  [ 84] extcall 20 .............................. <voidp(tEvent)>
  [ 86] jmpifz [130] ............................ if voidp(tEvent) then / else
  [ 89] pushint8 1 .............................. <1>
  [ 91] setlocal 0
  [ 93] getlocal 0
  [ 95] getprop 21 .............................. <pProcList>
  [ 97] getobjprop 22 ........................... <pProcList.count>
  [ 99] lteq
  [100] jmpifz [127] ............................ repeat with i = 1 to pProcList.count
  [103] getprop 21 .............................. <pProcList>
  [105] getlocal 0 .............................. <i>
  [107] getparam 1 .............................. <tMethod>
  [109] getparam 2 .............................. <tClientID>
  [111] pusharglist 2 ........................... <[tMethod, tClientID]>
  [113] pushlist ................................ <[tMethod, tClientID]>
  [114] pusharglistnoret 3 ...................... <pProcList, i, [tMethod, tClientID]>
  [116] objcall 24 .............................. pProcList[i] = [tMethod, tClientID]
  [118] pushint8 1
  [120] getlocal 0
  [122] add
  [123] setlocal 0
  [125] endrepeat [ 93]
  [127] jmp [158]
  [130] getparam 1 .............................. <tMethod>
  [132] pusharglist 1 ........................... <tMethod>
  [134] extcall 20 .............................. <voidp(tMethod)>
  [136] jmpifz [143] ............................ if voidp(tMethod) then
  [139] getparam 3 .............................. <tEvent>
  [141] setparam 1 .............................. tMethod = tEvent
  [143] getprop 21 .............................. <pProcList>
  [145] getparam 3 .............................. <tEvent>
  [147] getparam 1 .............................. <tMethod>
  [149] getparam 2 .............................. <tClientID>
  [151] pusharglist 2 ........................... <[tMethod, tClientID]>
  [153] pushlist ................................ <[tMethod, tClientID]>
  [154] pusharglistnoret 3 ...................... <pProcList, tEvent, [tMethod, tClientID]>
  [156] objcall 24 .............................. pProcList[tEvent] = [tMethod, tClientID]
  [158] pushint8 1 .............................. <1>
  [160] pusharglistnoret 1 ...................... <1>
  [162] extcall 25 .............................. return 1
  [164] ret
end

on removeProcedure me, tEvent
  [  0] getparam 1 .............................. <tEvent>
  [  2] pusharglist 1 ........................... <tEvent>
  [  4] extcall 20 .............................. <voidp(tEvent)>
  [  6] jmpifz [ 20] ............................ if voidp(tEvent) then / else
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 19 .............................. <me.createProcListTemplate()>
  [ 15] setprop 21 .............................. pProcList = me.createProcListTemplate()
  [ 17] jmp [ 50]
  [ 20] getprop 21 .............................. <pProcList>
  [ 22] getparam 1 .............................. <tEvent>
  [ 24] pusharglist 2 ........................... <pProcList, tEvent>
  [ 26] objcall 31 .............................. <pProcList.getaProp(tEvent)>
  [ 28] pusharglist 0 ........................... <>
  [ 30] extcall 32 .............................. <VOID>
  [ 32] nteq .................................... <pProcList.getaProp(tEvent) <> VOID>
  [ 33] jmpifz [ 50] ............................ if pProcList.getaProp(tEvent) <> VOID then
  [ 36] getprop 21 .............................. <pProcList>
  [ 38] getparam 1 .............................. <tEvent>
  [ 40] pushsymb 33 ............................. <#null>
  [ 42] pushzero ................................ <0>
  [ 43] pusharglist 2 ........................... <[#null, 0]>
  [ 45] pushlist ................................ <[#null, 0]>
  [ 46] pusharglistnoret 3 ...................... <pProcList, tEvent, [#null, 0]>
  [ 48] objcall 24 .............................. pProcList[tEvent] = [#null, 0]
  [ 50] pushint8 1 .............................. <1>
  [ 52] pusharglistnoret 1 ...................... <1>
  [ 54] extcall 25 .............................. return 1
  [ 56] ret
end

on getID me
  [  0] getprop 34 .............................. <id>
  [  2] pusharglistnoret 1 ...................... <id>
  [  4] extcall 25 .............................. return id
  [  6] ret
end

on setID me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 37 ........................... <me.spriteNum>
  [  4] pusharglist 1 ........................... <me.spriteNum>
  [  6] extcall 36 .............................. <sprite(me.spriteNum)>
  [  8] setprop 35 .............................. pSprite = sprite(me.spriteNum)
  [ 10] getparam 1 .............................. <tid>
  [ 12] pusharglist 1 ........................... <tid>
  [ 14] extcall 38 .............................. <stringp(tid)>
  [ 16] not ..................................... <not stringp(tid)>
  [ 17] jmpifz [ 37] ............................ if not stringp(tid) then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 0 .............................. <"String expected:">
  [ 24] getparam 1 .............................. <tid>
  [ 26] joinpadstr .............................. <"String expected:" && tid>
  [ 27] pushsymb 4 .............................. <#setID>
  [ 29] pusharglist 3 ........................... <me, "String expected:" && tid, #setID>
  [ 31] extcall 39 .............................. <error(me, "String expected:" && tid, #setID)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "String expected:" && tid, #setID)>
  [ 35] extcall 25 .............................. return error(me, "String expected:" && tid, #setID)
  [ 37] getparam 1 .............................. <tid>
  [ 39] setprop 34 .............................. id = tid
  [ 41] pushint8 1 .............................. <1>
  [ 43] pusharglistnoret 1 ...................... <1>
  [ 45] extcall 25 .............................. return 1
  [ 47] ret
end

on getMember me
  [  0] getprop 35 .............................. <pSprite>
  [  2] getobjprop 41 ........................... <pSprite.member>
  [  4] pusharglistnoret 1 ...................... <pSprite.member>
  [  6] extcall 25 .............................. return pSprite.member
  [  8] ret
end

on setMember me, tmember
  [  0] getprop 35 .............................. <pSprite>
  [  2] getparam 1 .............................. <tmember>
  [  4] setobjprop 41 ........................... pSprite.member = tmember
  [  6] getprop 35 .............................. <pSprite>
  [  8] getprop 35 .............................. <pSprite>
  [ 10] getchainedprop 41 ....................... <pSprite.member>
  [ 12] getobjprop 42 ........................... <pSprite.member.width>
  [ 14] setobjprop 42 ........................... pSprite.width = pSprite.member.width
  [ 16] getprop 35 .............................. <pSprite>
  [ 18] getprop 35 .............................. <pSprite>
  [ 20] getchainedprop 41 ....................... <pSprite.member>
  [ 22] getobjprop 43 ........................... <pSprite.member.height>
  [ 24] setobjprop 43 ........................... pSprite.height = pSprite.member.height
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglistnoret 1 ...................... <1>
  [ 30] extcall 25 .............................. return 1
  [ 32] ret
end

on getCursor me
  [  0] getprop 35 .............................. <pSprite>
  [  2] getobjprop 45 ........................... <pSprite.cursor>
  [  4] pusharglistnoret 1 ...................... <pSprite.cursor>
  [  6] extcall 25 .............................. return pSprite.cursor
  [  8] ret
end

on setcursor me, ttype
  [  0] getparam 1 .............................. <ttype>
  [  2] pusharglist 1 ........................... <ttype>
  [  4] extcall 46 .............................. <symbolp(ttype)>
  [  6] jmpifz [ 89] ............................ if symbolp(ttype) then / else
  [  9] getparam 1 .............................. <ttype>
  [ 11] peek 0 .................................. case ttype of
  [ 13] pushsymb 47 ............................. <#arrow>
  [ 15] eq
  [ 16] jmpifz [ 27] ............................ (case) #arrow:
  [ 19] pushint8 1 .............................. <1>
  [ 21] inv ..................................... <-1>
  [ 22] setparam 1 .............................. ttype = -1
  [ 24] jmp [ 84]
  [ 27] peek 0
  [ 29] pushsymb 48 ............................. <#ibeam>
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) #ibeam:
  [ 35] pushint8 1 .............................. <1>
  [ 37] setparam 1 .............................. ttype = 1
  [ 39] jmp [ 84]
  [ 42] peek 0
  [ 44] pushsymb 49 ............................. <#crosshair>
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) #crosshair:
  [ 50] pushint8 2 .............................. <2>
  [ 52] setparam 1 .............................. ttype = 2
  [ 54] jmp [ 84]
  [ 57] peek 0
  [ 59] pushsymb 50 ............................. <#crossbar>
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) #crossbar:
  [ 65] pushint8 3 .............................. <3>
  [ 67] setparam 1 .............................. ttype = 3
  [ 69] jmp [ 84]
  [ 72] peek 0
  [ 74] pushsymb 51 ............................. <#timer>
  [ 76] eq
  [ 77] jmpifz [ 84] ............................ (case) #timer:
  [ 80] pushint8 4 .............................. <4>
  [ 82] setparam 1 .............................. ttype = 4
  [ 84] pop 1 ................................... end case
  [ 86] jmp [174]
  [ 89] getparam 1 .............................. <ttype>
  [ 91] pusharglist 1 ........................... <ttype>
  [ 93] extcall 38 .............................. <stringp(ttype)>
  [ 95] jmpifz [121] ............................ if stringp(ttype) then / else
  [ 98] getparam 1 .............................. <ttype>
  [100] pusharglist 1 ........................... <ttype>
  [102] extcall 52 .............................. <getmemnum(ttype)>
  [104] getparam 1 .............................. <ttype>
  [106] pushcons 1 .............................. <".mask">
  [108] joinstr ................................. <ttype & ".mask">
  [109] pusharglist 1 ........................... <ttype & ".mask">
  [111] extcall 52 .............................. <getmemnum(ttype & ".mask")>
  [113] pusharglist 2 ........................... <[getmemnum(ttype), getmemnum(ttype & ".mask")]>
  [115] pushlist ................................ <[getmemnum(ttype), getmemnum(ttype & ".mask")]>
  [116] setparam 1 .............................. ttype = [getmemnum(ttype), getmemnum(ttype & ".mask")]
  [118] jmp [174]
  [121] getparam 1 .............................. <ttype>
  [123] pusharglist 1 ........................... <ttype>
  [125] extcall 53 .............................. <listp(ttype)>
  [127] jmpifz [162] ............................ if listp(ttype) then / else
  [130] getparam 1 .............................. <ttype>
  [132] pushint8 1 .............................. <1>
  [134] pusharglist 2 ........................... <ttype, 1>
  [136] objcall 54 .............................. <ttype[1]>
  [138] pusharglist 1 ........................... <ttype[1]>
  [140] extcall 52 .............................. <getmemnum(ttype[1])>
  [142] getparam 1 .............................. <ttype>
  [144] pushint8 2 .............................. <2>
  [146] pusharglist 2 ........................... <ttype, 2>
  [148] objcall 54 .............................. <ttype[2]>
  [150] pusharglist 1 ........................... <ttype[2]>
  [152] extcall 52 .............................. <getmemnum(ttype[2])>
  [154] pusharglist 2 ........................... <[getmemnum(ttype[1]), getmemnum(ttype[2])]>
  [156] pushlist ................................ <[getmemnum(ttype[1]), getmemnum(ttype[2])]>
  [157] setparam 1 .............................. ttype = [getmemnum(ttype[1]), getmemnum(ttype[2])]
  [159] jmp [174]
  [162] getparam 1 .............................. <ttype>
  [164] pusharglist 1 ........................... <ttype>
  [166] extcall 20 .............................. <voidp(ttype)>
  [168] jmpifz [174] ............................ if voidp(ttype) then
  [171] pushzero ................................ <0>
  [172] setparam 1 .............................. ttype = 0
  [174] getprop 35 .............................. <pSprite>
  [176] getparam 1 .............................. <ttype>
  [178] setobjprop 45 ........................... pSprite.cursor = ttype
  [180] pushint8 1 .............................. <1>
  [182] pusharglistnoret 1 ...................... <1>
  [184] extcall 25 .............................. return 1
  [186] ret
end

on getLink me
  [  0] getprop 56 .............................. <pLink>
  [  2] pusharglist 1 ........................... <pLink>
  [  4] extcall 38 .............................. <stringp(pLink)>
  [  6] jmpifz [ 18] ............................ if stringp(pLink) then / else
  [  9] getprop 56 .............................. <pLink>
  [ 11] pusharglistnoret 1 ...................... <pLink>
  [ 13] extcall 25 .............................. return pLink
  [ 15] jmp [ 23]
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 1 ...................... <0>
  [ 21] extcall 25 .............................. return 0
  [ 23] ret
end

on setLink me, tUrlOrKey
  [  0] getparam 1 .............................. <tUrlOrKey>
  [  2] pusharglist 1 ........................... <tUrlOrKey>
  [  4] extcall 38 .............................. <stringp(tUrlOrKey)>
  [  6] jmpifz [ 22] ............................ if stringp(tUrlOrKey) then / else
  [  9] getparam 1 .............................. <tUrlOrKey>
  [ 11] setprop 56 .............................. pLink = tUrlOrKey
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 1 ...................... <1>
  [ 17] extcall 25 .............................. return 1
  [ 19] jmp [ 27]
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 25 .............................. return 0
  [ 27] ret
end

on mouseEnter me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 11 ............................. <#mouseEnter>
  [  4] pusharglist 2 ........................... <me, #mouseEnter>
  [  6] objcall 18 .............................. <me.redirectEvent(#mouseEnter)>
  [  8] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseEnter)>
  [ 10] extcall 25 .............................. return me.redirectEvent(#mouseEnter)
  [ 12] ret
end

on mouseLeave me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 12 ............................. <#mouseLeave>
  [  4] pusharglist 2 ........................... <me, #mouseLeave>
  [  6] objcall 18 .............................. <me.redirectEvent(#mouseLeave)>
  [  8] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseLeave)>
  [ 10] extcall 25 .............................. return me.redirectEvent(#mouseLeave)
  [ 12] ret
end

on mouseWithin me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 13 ............................. <#mouseWithin>
  [  4] pusharglist 2 ........................... <me, #mouseWithin>
  [  6] objcall 18 .............................. <me.redirectEvent(#mouseWithin)>
  [  8] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseWithin)>
  [ 10] extcall 25 .............................. return me.redirectEvent(#mouseWithin)
  [ 12] ret
end

on mouseDown me
  [  0] getprop 21 .............................. <pProcList>
  [  2] pusharglist 1 ........................... <pProcList>
  [  4] extcall 20 .............................. <voidp(pProcList)>
  [  6] not ..................................... <not voidp(pProcList)>
  [  7] jmpifz [ 50] ............................ if not voidp(pProcList) then
  [ 10] pushsymb 59 ............................. <#session>
  [ 12] pusharglist 1 ........................... <#session>
  [ 14] extcall 58 .............................. <getObject(#session)>
  [ 16] pushcons 2 .............................. <"client_lastclick">
  [ 18] getprop 34 .............................. <id>
  [ 20] pushcons 3 .............................. <"->">
  [ 22] joinpadstr .............................. <id && "->">
  [ 23] getprop 21 .............................. <pProcList>
  [ 25] pushsymb 14 ............................. <#mouseDown>
  [ 27] pusharglist 2 ........................... <pProcList, #mouseDown>
  [ 29] objcall 54 .............................. <pProcList[#mouseDown]>
  [ 31] pushint8 2 .............................. <2>
  [ 33] pusharglist 2 ........................... <pProcList[#mouseDown], 2>
  [ 35] objcall 54 .............................. <pProcList[#mouseDown][2]>
  [ 37] joinpadstr .............................. <id && "->" && pProcList[#mouseDown][2]>
  [ 38] pushcons 4 .............................. <"/">
  [ 40] joinpadstr .............................. <id && "->" && pProcList[#mouseDown][2] && "/">
  [ 41] pushint8 8 .............................. <8>
  [ 43] get 0 ................................... <the long time>
  [ 45] joinpadstr .............................. <id && "->" && pProcList[#mouseDown][2] && "/" && the long time>
  [ 46] pusharglistnoret 3 ...................... <getObject(#session), "client_lastclick", id && "->" && pProcList[#mouseDown][2] && "/" && the long time>
  [ 48] objcall 60 .............................. getObject(#session).set("client_lastclick", id && "->" && pProcList[#mouseDown][2] && "/" && the long time)
  [ 50] getparam 0 .............................. <me>
  [ 52] pushsymb 14 ............................. <#mouseDown>
  [ 54] pusharglist 2 ........................... <me, #mouseDown>
  [ 56] objcall 18 .............................. <me.redirectEvent(#mouseDown)>
  [ 58] setlocal 0 .............................. tResult = me.redirectEvent(#mouseDown)
  [ 60] getlocal 0 .............................. <tResult>
  [ 62] jmpifz [ 69] ............................ if tResult then
  [ 65] pusharglistnoret 0 ...................... <>
  [ 67] extcall 61 .............................. stopEvent()
  [ 69] getlocal 0 .............................. <tResult>
  [ 71] pusharglistnoret 1 ...................... <tResult>
  [ 73] extcall 25 .............................. return tResult
  [ 75] ret
end

on mouseUp me
  [  0] getprop 56 .............................. <pLink>
  [  2] pusharglist 1 ........................... <pLink>
  [  4] extcall 20 .............................. <voidp(pLink)>
  [  6] not ..................................... <not voidp(pLink)>
  [  7] jmpifz [ 20] ............................ if not voidp(pLink) then
  [ 10] pusharglist 0 ........................... <>
  [ 12] extcall 63 .............................. <getSpecialServices()>
  [ 14] getprop 56 .............................. <pLink>
  [ 16] pusharglistnoret 2 ...................... <getSpecialServices(), pLink>
  [ 18] objcall 64 .............................. getSpecialServices().openNetPage(pLink)
  [ 20] getparam 0 .............................. <me>
  [ 22] pushsymb 0 .............................. <#mouseUp>
  [ 24] pusharglist 2 ........................... <me, #mouseUp>
  [ 26] objcall 18 .............................. <me.redirectEvent(#mouseUp)>
  [ 28] setlocal 0 .............................. tResult = me.redirectEvent(#mouseUp)
  [ 30] getlocal 0 .............................. <tResult>
  [ 32] jmpifz [ 39] ............................ if tResult then
  [ 35] pusharglistnoret 0 ...................... <>
  [ 37] extcall 61 .............................. stopEvent()
  [ 39] getlocal 0 .............................. <tResult>
  [ 41] pusharglistnoret 1 ...................... <tResult>
  [ 43] extcall 25 .............................. return tResult
  [ 45] ret
end

on mouseUpOutSide me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 15 ............................. <#mouseUpOutSide>
  [  4] pusharglist 2 ........................... <me, #mouseUpOutSide>
  [  6] objcall 18 .............................. <me.redirectEvent(#mouseUpOutSide)>
  [  8] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseUpOutSide)>
  [ 10] extcall 25 .............................. return me.redirectEvent(#mouseUpOutSide)
  [ 12] ret
end

on keyDown me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 35 ....................... <me.pSprite>
  [  4] getobjprop 37 ........................... <me.pSprite.spriteNum>
  [  6] getmovieprop 65 ......................... <the keyboardFocusSprite>
  [  8] nteq .................................... <me.pSprite.spriteNum <> the keyboardFocusSprite>
  [  9] jmpifz [ 18] ............................ if me.pSprite.spriteNum <> the keyboardFocusSprite then
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 25 .............................. return 1
  [ 18] getparam 0 .............................. <me>
  [ 20] pushsymb 16 ............................. <#keyDown>
  [ 22] pusharglist 2 ........................... <me, #keyDown>
  [ 24] objcall 18 .............................. <me.redirectEvent(#keyDown)>
  [ 26] jmpifz [ 35] ............................ if me.redirectEvent(#keyDown) then
  [ 29] pushint8 1 .............................. <1>
  [ 31] pusharglistnoret 1 ...................... <1>
  [ 33] extcall 25 .............................. return 1
  [ 35] pusharglistnoret 0 ...................... <>
  [ 37] extcall 66 .............................. pass()
  [ 39] ret
end

on keyUp me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 35 ....................... <me.pSprite>
  [  4] getobjprop 37 ........................... <me.pSprite.spriteNum>
  [  6] getmovieprop 65 ......................... <the keyboardFocusSprite>
  [  8] nteq .................................... <me.pSprite.spriteNum <> the keyboardFocusSprite>
  [  9] jmpifz [ 18] ............................ if me.pSprite.spriteNum <> the keyboardFocusSprite then
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 25 .............................. return 1
  [ 18] getparam 0 .............................. <me>
  [ 20] pushsymb 17 ............................. <#keyUp>
  [ 22] pusharglist 2 ........................... <me, #keyUp>
  [ 24] objcall 18 .............................. <me.redirectEvent(#keyUp)>
  [ 26] jmpifz [ 35] ............................ if me.redirectEvent(#keyUp) then
  [ 29] pushint8 1 .............................. <1>
  [ 31] pusharglistnoret 1 ...................... <1>
  [ 33] extcall 25 .............................. return 1
  [ 35] pusharglistnoret 0 ...................... <>
  [ 37] extcall 66 .............................. pass()
  [ 39] ret
end

on redirectEvent me, tEvent
  [  0] getprop 21 .............................. <pProcList>
  [  2] pusharglist 1 ........................... <pProcList>
  [  4] extcall 20 .............................. <voidp(pProcList)>
  [  6] jmpifz [ 17] ............................ if voidp(pProcList) then
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 19 .............................. <me.createProcListTemplate()>
  [ 15] setprop 21 .............................. pProcList = me.createProcListTemplate()
  [ 17] getprop 21 .............................. <pProcList>
  [ 19] getparam 1 .............................. <tEvent>
  [ 21] pusharglist 2 ........................... <pProcList, tEvent>
  [ 23] objcall 54 .............................. <pProcList[tEvent]>
  [ 25] pushint8 2 .............................. <2>
  [ 27] pusharglist 2 ........................... <pProcList[tEvent], 2>
  [ 29] objcall 54 .............................. <pProcList[tEvent][2]>
  [ 31] not ..................................... <not pProcList[tEvent][2]>
  [ 32] jmpifz [ 40] ............................ if not pProcList[tEvent][2] then
  [ 35] pushzero ................................ <0>
  [ 36] pusharglistnoret 1 ...................... <0>
  [ 38] extcall 25 .............................. return 0
  [ 40] getprop 21 .............................. <pProcList>
  [ 42] getparam 1 .............................. <tEvent>
  [ 44] pusharglist 2 ........................... <pProcList, tEvent>
  [ 46] objcall 54 .............................. <pProcList[tEvent]>
  [ 48] pushint8 2 .............................. <2>
  [ 50] pusharglist 2 ........................... <pProcList[tEvent], 2>
  [ 52] objcall 54 .............................. <pProcList[tEvent][2]>
  [ 54] pusharglist 1 ........................... <pProcList[tEvent][2]>
  [ 56] extcall 67 .............................. <objectExists(pProcList[tEvent][2])>
  [ 58] not ..................................... <not objectExists(pProcList[tEvent][2])>
  [ 59] jmpifz [ 67] ............................ if not objectExists(pProcList[tEvent][2]) then
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 25 .............................. return 0
  [ 67] getprop 21 .............................. <pProcList>
  [ 69] getparam 1 .............................. <tEvent>
  [ 71] pusharglist 2 ........................... <pProcList, tEvent>
  [ 73] objcall 54 .............................. <pProcList[tEvent]>
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglist 2 ........................... <pProcList[tEvent], 1>
  [ 79] objcall 54 .............................. <pProcList[tEvent][1]>
  [ 81] getprop 21 .............................. <pProcList>
  [ 83] getparam 1 .............................. <tEvent>
  [ 85] pusharglist 2 ........................... <pProcList, tEvent>
  [ 87] objcall 54 .............................. <pProcList[tEvent]>
  [ 89] pushint8 2 .............................. <2>
  [ 91] pusharglist 2 ........................... <pProcList[tEvent], 2>
  [ 93] objcall 54 .............................. <pProcList[tEvent][2]>
  [ 95] pusharglist 1 ........................... <pProcList[tEvent][2]>
  [ 97] extcall 58 .............................. <getObject(pProcList[tEvent][2])>
  [ 99] getparam 1 .............................. <tEvent>
  [101] getprop 34 .............................. <id>
  [103] pusharglist 4 ........................... <pProcList[tEvent][1], getObject(pProcList[tEvent][2]), tEvent, id>
  [105] extcall 68 .............................. <call(pProcList[tEvent][1], getObject(pProcList[tEvent][2]), tEvent, id)>
  [107] pusharglistnoret 1 ...................... <call(pProcList[tEvent][1], getObject(pProcList[tEvent][2]), tEvent, id)>
  [109] extcall 25 .............................. return call(pProcList[tEvent][1], getObject(pProcList[tEvent][2]), tEvent, id)
  [111] ret
end

on createProcListTemplate me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tList = [:]
  [  5] getlocal 0 .............................. <tList>
  [  7] pushsymb 11 ............................. <#mouseEnter>
  [  9] pushsymb 33 ............................. <#null>
  [ 11] pushzero ................................ <0>
  [ 12] pusharglist 2 ........................... <[#null, 0]>
  [ 14] pushlist ................................ <[#null, 0]>
  [ 15] pusharglistnoret 3 ...................... <tList, #mouseEnter, [#null, 0]>
  [ 17] objcall 24 .............................. tList[#mouseEnter] = [#null, 0]
  [ 19] getlocal 0 .............................. <tList>
  [ 21] pushsymb 12 ............................. <#mouseLeave>
  [ 23] pushsymb 33 ............................. <#null>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglist 2 ........................... <[#null, 0]>
  [ 28] pushlist ................................ <[#null, 0]>
  [ 29] pusharglistnoret 3 ...................... <tList, #mouseLeave, [#null, 0]>
  [ 31] objcall 24 .............................. tList[#mouseLeave] = [#null, 0]
  [ 33] getlocal 0 .............................. <tList>
  [ 35] pushsymb 13 ............................. <#mouseWithin>
  [ 37] pushsymb 33 ............................. <#null>
  [ 39] pushzero ................................ <0>
  [ 40] pusharglist 2 ........................... <[#null, 0]>
  [ 42] pushlist ................................ <[#null, 0]>
  [ 43] pusharglistnoret 3 ...................... <tList, #mouseWithin, [#null, 0]>
  [ 45] objcall 24 .............................. tList[#mouseWithin] = [#null, 0]
  [ 47] getlocal 0 .............................. <tList>
  [ 49] pushsymb 14 ............................. <#mouseDown>
  [ 51] pushsymb 33 ............................. <#null>
  [ 53] pushzero ................................ <0>
  [ 54] pusharglist 2 ........................... <[#null, 0]>
  [ 56] pushlist ................................ <[#null, 0]>
  [ 57] pusharglistnoret 3 ...................... <tList, #mouseDown, [#null, 0]>
  [ 59] objcall 24 .............................. tList[#mouseDown] = [#null, 0]
  [ 61] getlocal 0 .............................. <tList>
  [ 63] pushsymb 0 .............................. <#mouseUp>
  [ 65] pushsymb 33 ............................. <#null>
  [ 67] pushzero ................................ <0>
  [ 68] pusharglist 2 ........................... <[#null, 0]>
  [ 70] pushlist ................................ <[#null, 0]>
  [ 71] pusharglistnoret 3 ...................... <tList, #mouseUp, [#null, 0]>
  [ 73] objcall 24 .............................. tList[#mouseUp] = [#null, 0]
  [ 75] getlocal 0 .............................. <tList>
  [ 77] pushsymb 15 ............................. <#mouseUpOutSide>
  [ 79] pushsymb 33 ............................. <#null>
  [ 81] pushzero ................................ <0>
  [ 82] pusharglist 2 ........................... <[#null, 0]>
  [ 84] pushlist ................................ <[#null, 0]>
  [ 85] pusharglistnoret 3 ...................... <tList, #mouseUpOutSide, [#null, 0]>
  [ 87] objcall 24 .............................. tList[#mouseUpOutSide] = [#null, 0]
  [ 89] getlocal 0 .............................. <tList>
  [ 91] pushsymb 16 ............................. <#keyDown>
  [ 93] pushsymb 33 ............................. <#null>
  [ 95] pushzero ................................ <0>
  [ 96] pusharglist 2 ........................... <[#null, 0]>
  [ 98] pushlist ................................ <[#null, 0]>
  [ 99] pusharglistnoret 3 ...................... <tList, #keyDown, [#null, 0]>
  [101] objcall 24 .............................. tList[#keyDown] = [#null, 0]
  [103] getlocal 0 .............................. <tList>
  [105] pushsymb 17 ............................. <#keyUp>
  [107] pushsymb 33 ............................. <#null>
  [109] pushzero ................................ <0>
  [110] pusharglist 2 ........................... <[#null, 0]>
  [112] pushlist ................................ <[#null, 0]>
  [113] pusharglistnoret 3 ...................... <tList, #keyUp, [#null, 0]>
  [115] objcall 24 .............................. tList[#keyUp] = [#null, 0]
  [117] getlocal 0 .............................. <tList>
  [119] pusharglistnoret 1 ...................... <tList>
  [121] extcall 25 .............................. return tList
  [123] ret
end
