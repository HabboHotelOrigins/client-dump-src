on construct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 639 .......................... me.pItemList = [:]
  [  8] getparam 0 .............................. <me>
  [ 10] getchainedprop 639 ...................... <me.pItemList>
  [ 13] pusharglistnoret 1 ...................... <me.pItemList>
  [ 15] objcall 640 ............................. me.pItemList.sort()
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 1 ...................... <1>
  [ 22] extcall 25 .............................. return 1
  [ 24] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 639 .......................... me.pItemList = [:]
  [  8] pushint8 1 .............................. <1>
  [ 10] pusharglistnoret 1 ...................... <1>
  [ 12] extcall 25 .............................. return 1
  [ 14] ret
end

on create me, tVariable, tValue
  [  0] getparam 1 .............................. <tVariable>
  [  2] pusharglist 1 ........................... <tVariable>
  [  4] extcall 38 .............................. <stringp(tVariable)>
  [  6] not ..................................... <not stringp(tVariable)>
  [  7] getparam 1 .............................. <tVariable>
  [  9] pusharglist 1 ........................... <tVariable>
  [ 11] extcall 46 .............................. <symbolp(tVariable)>
  [ 13] not ..................................... <not symbolp(tVariable)>
  [ 14] and ..................................... <not stringp(tVariable) and not symbolp(tVariable)>
  [ 15] jmpifz [ 35] ............................ if not stringp(tVariable) and not symbolp(tVariable) then
  [ 18] getparam 0 .............................. <me>
  [ 20] pushcons 0 .............................. <"String or symbol expected:">
  [ 22] getparam 1 .............................. <tVariable>
  [ 24] joinpadstr .............................. <"String or symbol expected:" && tVariable>
  [ 25] pushsymb 81 ............................. <#create>
  [ 27] pusharglist 3 ........................... <me, "String or symbol expected:" && tVariable, #create>
  [ 29] extcall 39 .............................. <error(me, "String or symbol expected:" && tVariable, #create)>
  [ 31] pusharglistnoret 1 ...................... <error(me, "String or symbol expected:" && tVariable, #create)>
  [ 33] extcall 25 .............................. return error(me, "String or symbol expected:" && tVariable, #create)
  [ 35] getparam 0 .............................. <me>
  [ 37] pushsymb 639 ............................ <#pItemList>
  [ 40] getparam 1 .............................. <tVariable>
  [ 42] getparam 2 .............................. <tValue>
  [ 44] pusharglistnoret 4 ...................... <me, #pItemList, tVariable, tValue>
  [ 46] objcall 889 ............................. me.pItemList[tVariable] = tValue
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglistnoret 1 ...................... <1>
  [ 53] extcall 25 .............................. return 1
  [ 55] ret
end

on set me, tVariable, tValue
  [  0] getparam 1 .............................. <tVariable>
  [  2] pusharglist 1 ........................... <tVariable>
  [  4] extcall 38 .............................. <stringp(tVariable)>
  [  6] not ..................................... <not stringp(tVariable)>
  [  7] getparam 1 .............................. <tVariable>
  [  9] pusharglist 1 ........................... <tVariable>
  [ 11] extcall 46 .............................. <symbolp(tVariable)>
  [ 13] not ..................................... <not symbolp(tVariable)>
  [ 14] and ..................................... <not stringp(tVariable) and not symbolp(tVariable)>
  [ 15] jmpifz [ 35] ............................ if not stringp(tVariable) and not symbolp(tVariable) then
  [ 18] getparam 0 .............................. <me>
  [ 20] pushcons 0 .............................. <"String or symbol expected:">
  [ 22] getparam 1 .............................. <tVariable>
  [ 24] joinpadstr .............................. <"String or symbol expected:" && tVariable>
  [ 25] pushsymb 60 ............................. <#set>
  [ 27] pusharglist 3 ........................... <me, "String or symbol expected:" && tVariable, #set>
  [ 29] extcall 39 .............................. <error(me, "String or symbol expected:" && tVariable, #set)>
  [ 31] pusharglistnoret 1 ...................... <error(me, "String or symbol expected:" && tVariable, #set)>
  [ 33] extcall 25 .............................. return error(me, "String or symbol expected:" && tVariable, #set)
  [ 35] getparam 0 .............................. <me>
  [ 37] pushsymb 639 ............................ <#pItemList>
  [ 40] getparam 1 .............................. <tVariable>
  [ 42] getparam 2 .............................. <tValue>
  [ 44] pusharglistnoret 4 ...................... <me, #pItemList, tVariable, tValue>
  [ 46] objcall 889 ............................. me.pItemList[tVariable] = tValue
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglistnoret 1 ...................... <1>
  [ 53] extcall 25 .............................. return 1
  [ 55] ret
end

on get me, tVariable, tDefault
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 639 ............................ <#pItemList>
  [  5] getparam 1 .............................. <tVariable>
  [  7] pusharglist 3 ........................... <me, #pItemList, tVariable>
  [  9] objcall 290 ............................. <me.pItemList[tVariable]>
  [ 12] setlocal 0 .............................. tValue = me.pItemList[tVariable]
  [ 14] getlocal 0 .............................. <tValue>
  [ 16] pusharglist 1 ........................... <tValue>
  [ 18] extcall 20 .............................. <voidp(tValue)>
  [ 20] jmpifz [ 79] ............................ if voidp(tValue) then
  [ 23] pushcons 1 .............................. <"Variable not found:">
  [ 25] pushcons 2 .............................. <QUOTE>
  [ 27] joinpadstr .............................. <"Variable not found:" && QUOTE>
  [ 28] getparam 1 .............................. <tVariable>
  [ 30] joinstr ................................. <"Variable not found:" && QUOTE & tVariable>
  [ 31] pushcons 2 .............................. <QUOTE>
  [ 33] joinstr ................................. <"Variable not found:" && QUOTE & tVariable & QUOTE>
  [ 34] setlocal 1 .............................. tError = "Variable not found:" && QUOTE & tVariable & QUOTE
  [ 36] getparam 2 .............................. <tDefault>
  [ 38] pusharglist 1 ........................... <tDefault>
  [ 40] extcall 20 .............................. <voidp(tDefault)>
  [ 42] not ..................................... <not voidp(tDefault)>
  [ 43] jmpifz [ 66] ............................ if not voidp(tDefault) then / else
  [ 46] getparam 2 .............................. <tDefault>
  [ 48] setlocal 0 .............................. tValue = tDefault
  [ 50] getlocal 1 .............................. <tError>
  [ 52] pushcons 3 .............................. <RETURN>
  [ 54] joinstr ................................. <tError & RETURN>
  [ 55] pushcons 4 .............................. <"Using given default:">
  [ 57] joinstr ................................. <tError & RETURN & "Using given default:">
  [ 58] getparam 2 .............................. <tDefault>
  [ 60] joinpadstr .............................. <tError & RETURN & "Using given default:" && tDefault>
  [ 61] setlocal 1 .............................. tError = tError & RETURN & "Using given default:" && tDefault
  [ 63] jmp [ 69]
  [ 66] pushzero ................................ <0>
  [ 67] setlocal 0 .............................. tValue = 0
  [ 69] getparam 0 .............................. <me>
  [ 71] getlocal 1 .............................. <tError>
  [ 73] pushsymb 90 ............................. <#get>
  [ 75] pusharglistnoret 3 ...................... <me, tError, #get>
  [ 77] extcall 39 .............................. error(me, tError, #get)
  [ 79] getlocal 0 .............................. <tValue>
  [ 81] pusharglistnoret 1 ...................... <tValue>
  [ 83] extcall 25 .............................. return tValue
  [ 85] ret
end

on getInt me, tVariable, tDefault
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 639 ............................ <#pItemList>
  [  5] getparam 1 .............................. <tVariable>
  [  7] pusharglist 3 ........................... <me, #pItemList, tVariable>
  [  9] objcall 290 ............................. <me.pItemList[tVariable]>
  [ 12] pusharglist 1 ........................... <me.pItemList[tVariable]>
  [ 14] extcall 955 ............................. <integer(me.pItemList[tVariable])>
  [ 17] setlocal 0 .............................. tValue = integer(me.pItemList[tVariable])
  [ 19] getlocal 0 .............................. <tValue>
  [ 21] pusharglist 1 ........................... <tValue>
  [ 23] extcall 681 ............................. <integerp(tValue)>
  [ 26] not ..................................... <not integerp(tValue)>
  [ 27] jmpifz [ 81] ............................ if not integerp(tValue) then
  [ 30] pushcons 1 .............................. <"Variable not found:">
  [ 32] pushcons 2 .............................. <QUOTE>
  [ 34] joinpadstr .............................. <"Variable not found:" && QUOTE>
  [ 35] getparam 1 .............................. <tVariable>
  [ 37] joinstr ................................. <"Variable not found:" && QUOTE & tVariable>
  [ 38] pushcons 2 .............................. <QUOTE>
  [ 40] joinstr ................................. <"Variable not found:" && QUOTE & tVariable & QUOTE>
  [ 41] setlocal 1 .............................. tError = "Variable not found:" && QUOTE & tVariable & QUOTE
  [ 43] getparam 2 .............................. <tDefault>
  [ 45] pusharglist 1 ........................... <tDefault>
  [ 47] extcall 20 .............................. <voidp(tDefault)>
  [ 49] not ..................................... <not voidp(tDefault)>
  [ 50] jmpifz [ 70] ............................ if not voidp(tDefault) then
  [ 53] getparam 2 .............................. <tDefault>
  [ 55] setlocal 0 .............................. tValue = tDefault
  [ 57] getlocal 1 .............................. <tError>
  [ 59] pushcons 3 .............................. <RETURN>
  [ 61] joinstr ................................. <tError & RETURN>
  [ 62] pushcons 4 .............................. <"Using given default:">
  [ 64] joinstr ................................. <tError & RETURN & "Using given default:">
  [ 65] getparam 2 .............................. <tDefault>
  [ 67] joinpadstr .............................. <tError & RETURN & "Using given default:" && tDefault>
  [ 68] setlocal 1 .............................. tError = tError & RETURN & "Using given default:" && tDefault
  [ 70] getparam 0 .............................. <me>
  [ 72] getlocal 1 .............................. <tError>
  [ 74] pushsymb 379 ............................ <#getInt>
  [ 77] pusharglistnoret 3 ...................... <me, tError, #getInt>
  [ 79] extcall 39 .............................. error(me, tError, #getInt)
  [ 81] getlocal 0 .............................. <tValue>
  [ 83] pusharglistnoret 1 ...................... <tValue>
  [ 85] extcall 25 .............................. return tValue
  [ 87] ret
end

on getValue me, tVariable, tDefault
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 639 ............................ <#pItemList>
  [  5] getparam 1 .............................. <tVariable>
  [  7] pusharglist 3 ........................... <me, #pItemList, tVariable>
  [  9] objcall 290 ............................. <me.pItemList[tVariable]>
  [ 12] pusharglist 1 ........................... <me.pItemList[tVariable]>
  [ 14] extcall 113 ............................. <value(me.pItemList[tVariable])>
  [ 16] setlocal 0 .............................. tValue = value(me.pItemList[tVariable])
  [ 18] getlocal 0 .............................. <tValue>
  [ 20] pusharglist 1 ........................... <tValue>
  [ 22] extcall 20 .............................. <voidp(tValue)>
  [ 24] jmpifz [ 78] ............................ if voidp(tValue) then
  [ 27] pushcons 1 .............................. <"Variable not found:">
  [ 29] pushcons 2 .............................. <QUOTE>
  [ 31] joinpadstr .............................. <"Variable not found:" && QUOTE>
  [ 32] getparam 1 .............................. <tVariable>
  [ 34] joinstr ................................. <"Variable not found:" && QUOTE & tVariable>
  [ 35] pushcons 2 .............................. <QUOTE>
  [ 37] joinstr ................................. <"Variable not found:" && QUOTE & tVariable & QUOTE>
  [ 38] setlocal 1 .............................. tError = "Variable not found:" && QUOTE & tVariable & QUOTE
  [ 40] getparam 2 .............................. <tDefault>
  [ 42] pusharglist 1 ........................... <tDefault>
  [ 44] extcall 20 .............................. <voidp(tDefault)>
  [ 46] not ..................................... <not voidp(tDefault)>
  [ 47] jmpifz [ 67] ............................ if not voidp(tDefault) then
  [ 50] getparam 2 .............................. <tDefault>
  [ 52] setlocal 0 .............................. tValue = tDefault
  [ 54] getlocal 1 .............................. <tError>
  [ 56] pushcons 3 .............................. <RETURN>
  [ 58] joinstr ................................. <tError & RETURN>
  [ 59] pushcons 4 .............................. <"Using given default:">
  [ 61] joinstr ................................. <tError & RETURN & "Using given default:">
  [ 62] getparam 2 .............................. <tDefault>
  [ 64] joinpadstr .............................. <tError & RETURN & "Using given default:" && tDefault>
  [ 65] setlocal 1 .............................. tError = tError & RETURN & "Using given default:" && tDefault
  [ 67] getparam 0 .............................. <me>
  [ 69] getlocal 1 .............................. <tError>
  [ 71] pushsymb 380 ............................ <#getValue>
  [ 74] pusharglistnoret 3 ...................... <me, tError, #getValue>
  [ 76] extcall 39 .............................. error(me, tError, #getValue)
  [ 78] getlocal 0 .............................. <tValue>
  [ 80] pusharglistnoret 1 ...................... <tValue>
  [ 82] extcall 25 .............................. return tValue
  [ 84] ret
end

on Remove me, tVariable
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 639 ...................... <me.pItemList>
  [  5] getparam 1 .............................. <tVariable>
  [  7] pusharglist 2 ........................... <me.pItemList, tVariable>
  [  9] objcall 659 ............................. <me.pItemList.deleteProp(tVariable)>
  [ 12] pusharglistnoret 1 ...................... <me.pItemList.deleteProp(tVariable)>
  [ 14] extcall 25 .............................. return me.pItemList.deleteProp(tVariable)
  [ 16] ret
end

on exists me, tVariable
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 639 ............................ <#pItemList>
  [  5] getparam 1 .............................. <tVariable>
  [  7] pusharglist 3 ........................... <me, #pItemList, tVariable>
  [  9] objcall 290 ............................. <me.pItemList[tVariable]>
  [ 12] pusharglist 1 ........................... <me.pItemList[tVariable]>
  [ 14] extcall 20 .............................. <voidp(me.pItemList[tVariable])>
  [ 16] not ..................................... <not voidp(me.pItemList[tVariable])>
  [ 17] pusharglistnoret 1 ...................... <not voidp(me.pItemList[tVariable])>
  [ 19] extcall 25 .............................. return not voidp(me.pItemList[tVariable])
  [ 21] ret
end

on dump me, tField, tDelimiter
  [  0] getparam 1 .............................. <tField>
  [  2] pushzero ................................ <0>
  [  3] getfield ................................ <field(tField)>
  [  4] setlocal 0 .............................. tStr = field(tField)
  [  6] getmovieprop 286 ........................ <the itemDelimiter>
  [  9] setlocal 1 .............................. tDelim = the itemDelimiter
  [ 11] getparam 2 .............................. <tDelimiter>
  [ 13] pusharglist 1 ........................... <tDelimiter>
  [ 15] extcall 20 .............................. <voidp(tDelimiter)>
  [ 17] jmpifz [ 24] ............................ if voidp(tDelimiter) then
  [ 20] pushcons 3 .............................. <RETURN>
  [ 22] setparam 2 .............................. tDelimiter = RETURN
  [ 24] getparam 2 .............................. <tDelimiter>
  [ 26] setmovieprop 286 ........................ the itemDelimiter = tDelimiter
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 2
  [ 33] getlocal 2
  [ 35] getlocal 0 .............................. <tStr>
  [ 37] pushsymb 287 ............................ <#item>
  [ 40] pusharglist 2 ........................... <tStr, #item>
  [ 42] objcall 22 .............................. <tStr.item.count>
  [ 44] lteq
  [ 45] jmpifz [459] ............................ repeat with i = 1 to tStr.item.count
  [ 48] getlocal 0 .............................. <tStr>
  [ 50] pushsymb 287 ............................ <#item>
  [ 53] getlocal 2 .............................. <i>
  [ 55] pusharglist 3 ........................... <tStr, #item, i>
  [ 57] objcall 290 ............................. <tStr.item[i]>
  [ 60] setlocal 3 .............................. tPair = tStr.item[i]
  [ 62] getlocal 3 .............................. <tPair>
  [ 64] pushsymb 289 ............................ <#word>
  [ 67] pushint8 1 .............................. <1>
  [ 69] pusharglist 3 ........................... <tPair, #word, 1>
  [ 71] objcall 288 ............................. <tPair.word[1]>
  [ 74] pushsymb 291 ............................ <#char>
  [ 77] pushint8 1 .............................. <1>
  [ 79] pusharglist 3 ........................... <tPair.word[1], #char, 1>
  [ 81] objcall 290 ............................. <tPair.word[1].char[1]>
  [ 84] pushcons 5 .............................. <"#">
  [ 86] nteq .................................... <tPair.word[1].char[1] <> "#">
  [ 87] getlocal 3 .............................. <tPair>
  [ 89] pushcons 6 .............................. <EMPTY>
  [ 91] nteq .................................... <tPair <> EMPTY>
  [ 92] and ..................................... <(tPair.word[1].char[1] <> "#") and (tPair <> EMPTY)>
  [ 93] jmpifz [449] ............................ if (tPair.word[1].char[1] <> "#") and (tPair <> EMPTY) then
  [ 96] pushcons 7 .............................. <"=">
  [ 98] setmovieprop 286 ........................ the itemDelimiter = "="
  [101] getlocal 3 .............................. <tPair>
  [103] pushsymb 287 ............................ <#item>
  [106] pushint8 1 .............................. <1>
  [108] pusharglist 3 ........................... <tPair, #item, 1>
  [110] objcall 288 ............................. <tPair.item[1]>
  [113] pushsymb 289 ............................ <#word>
  [116] pushint8 1 .............................. <1>
  [118] getlocal 3 .............................. <tPair>
  [120] pushsymb 287 ............................ <#item>
  [123] pushint8 1 .............................. <1>
  [125] pusharglist 3 ........................... <tPair, #item, 1>
  [127] objcall 288 ............................. <tPair.item[1]>
  [130] pushsymb 289 ............................ <#word>
  [133] pusharglist 2 ........................... <tPair.item[1], #word>
  [135] objcall 22 .............................. <tPair.item[1].word.count>
  [137] pusharglist 4 ........................... <tPair.item[1], #word, 1, tPair.item[1].word.count>
  [139] objcall 290 ............................. <tPair.item[1].word[1..tPair.item[1].word.count]>
  [142] setlocal 4 .............................. tProp = tPair.item[1].word[1..tPair.item[1].word.count]
  [144] getlocal 3 .............................. <tPair>
  [146] pushsymb 287 ............................ <#item>
  [149] pushint8 2 .............................. <2>
  [151] getlocal 3 .............................. <tPair>
  [153] pushsymb 287 ............................ <#item>
  [156] pusharglist 2 ........................... <tPair, #item>
  [158] objcall 22 .............................. <tPair.item.count>
  [160] pusharglist 4 ........................... <tPair, #item, 2, tPair.item.count>
  [162] objcall 290 ............................. <tPair.item[2..tPair.item.count]>
  [165] setlocal 5 .............................. tValue = tPair.item[2..tPair.item.count]
  [167] getlocal 5 .............................. <tValue>
  [169] pushsymb 289 ............................ <#word>
  [172] pushint8 1 .............................. <1>
  [174] getlocal 5 .............................. <tValue>
  [176] pushsymb 289 ............................ <#word>
  [179] pusharglist 2 ........................... <tValue, #word>
  [181] objcall 22 .............................. <tValue.word.count>
  [183] pusharglist 4 ........................... <tValue, #word, 1, tValue.word.count>
  [185] objcall 290 ............................. <tValue.word[1..tValue.word.count]>
  [188] setlocal 5 .............................. tValue = tValue.word[1..tValue.word.count]
  [190] getlocal 5 .............................. <tValue>
  [192] pusharglist 0 ........................... <>
  [194] extcall 884 ............................. <SPACE>
  [197] containsstr ............................. <tValue contains SPACE>
  [198] not ..................................... <not (tValue contains SPACE)>
  [199] jmpifz [301] ............................ if not (tValue contains SPACE) then / else
  [202] getlocal 5 .............................. <tValue>
  [204] pushsymb 291 ............................ <#char>
  [207] pushint8 1 .............................. <1>
  [209] pusharglist 3 ........................... <tValue, #char, 1>
  [211] objcall 290 ............................. <tValue.char[1]>
  [214] pushcons 5 .............................. <"#">
  [216] eq ...................................... <tValue.char[1] = "#">
  [217] jmpifz [246] ............................ if tValue.char[1] = "#" then / else
  [220] getlocal 5 .............................. <tValue>
  [222] pushint8 2 .............................. <2>
  [224] getlocal 5 .............................. <tValue>
  [226] pusharglist 1 ........................... <tValue>
  [228] extcall 293 ............................. <length(tValue)>
  [231] pusharglist 3 ........................... <tValue, 2, length(tValue)>
  [233] extcall 930 ............................. <chars(tValue, 2, length(tValue))>
  [236] pusharglist 1 ........................... <chars(tValue, 2, length(tValue))>
  [238] extcall 570 ............................. <symbol(chars(tValue, 2, length(tValue)))>
  [241] setlocal 5 .............................. tValue = symbol(chars(tValue, 2, length(tValue)))
  [243] jmp [298]
  [246] getlocal 5 .............................. <tValue>
  [248] pusharglist 1 ........................... <tValue>
  [250] extcall 955 ............................. <integer(tValue)>
  [253] pusharglist 1 ........................... <integer(tValue)>
  [255] extcall 681 ............................. <integerp(integer(tValue))>
  [258] jmpifz [298] ............................ if integerp(integer(tValue)) then
  [261] getlocal 5 .............................. <tValue>
  [263] pusharglist 1 ........................... <tValue>
  [265] extcall 955 ............................. <integer(tValue)>
  [268] pusharglist 1 ........................... <integer(tValue)>
  [270] extcall 593 ............................. <string(integer(tValue))>
  [273] pusharglist 1 ........................... <string(integer(tValue))>
  [275] extcall 293 ............................. <length(string(integer(tValue)))>
  [278] getlocal 5 .............................. <tValue>
  [280] pusharglist 1 ........................... <tValue>
  [282] extcall 293 ............................. <length(tValue)>
  [285] eq ...................................... <length(string(integer(tValue))) = length(tValue)>
  [286] jmpifz [298] ............................ if length(string(integer(tValue))) = length(tValue) then
  [289] getlocal 5 .............................. <tValue>
  [291] pusharglist 1 ........................... <tValue>
  [293] extcall 955 ............................. <integer(tValue)>
  [296] setlocal 5 .............................. tValue = integer(tValue)
  [298] jmp [325]
  [301] getlocal 5 .............................. <tValue>
  [303] pusharglist 1 ........................... <tValue>
  [305] extcall 942 ............................. <float(tValue)>
  [308] pusharglist 1 ........................... <float(tValue)>
  [310] extcall 1088 ............................ <floatp(float(tValue))>
  [313] jmpifz [325] ............................ if floatp(float(tValue)) then
  [316] getlocal 5 .............................. <tValue>
  [318] pusharglist 1 ........................... <tValue>
  [320] extcall 942 ............................. <float(tValue)>
  [323] setlocal 5 .............................. tValue = float(tValue)
  [325] getlocal 5 .............................. <tValue>
  [327] pusharglist 1 ........................... <tValue>
  [329] extcall 38 .............................. <stringp(tValue)>
  [331] jmpifz [430] ............................ if stringp(tValue) then
  [334] pushint8 1 .............................. <1>
  [336] setlocal 6
  [338] getlocal 6
  [340] getlocal 5 .............................. <tValue>
  [342] pusharglist 1 ........................... <tValue>
  [344] extcall 293 ............................. <length(tValue)>
  [347] lteq
  [348] jmpifz [430] ............................ repeat with j = 1 to length(tValue)
  [351] getlocal 5 .............................. <tValue>
  [353] pushsymb 291 ............................ <#char>
  [356] getlocal 6 .............................. <j>
  [358] pusharglist 3 ........................... <tValue, #char, j>
  [360] objcall 290 ............................. <tValue.char[j]>
  [363] pusharglist 1 ........................... <tValue.char[j]>
  [365] extcall 915 ............................. <charToNum(tValue.char[j])>
  [368] peek 0 .................................. case charToNum(tValue.char[j]) of
  [370] pushint16 228 ........................... <228>
  [373] eq
  [374] jmpifz [395] ............................ (case) 228:
  [377] pushcons 8 .............................. <"\x8A">
  [379] getlocal 6 .............................. <j>
  [381] pushzero ................................ <0>
  [382] pushzero ................................ <0>
  [383] pushzero ................................ <0>
  [384] pushzero ................................ <0>
  [385] pushzero ................................ <0>
  [386] pushzero ................................ <0>
  [387] pushzero ................................ <0>
  [388] pushint8 5 .............................. <5>
  [390] putchunk 21 ............................. put "\x8A" into char j of tValue
  [392] jmp [419]
  [395] peek 0
  [397] pushint16 246 ........................... <246>
  [400] eq
  [401] jmpifz [419] ............................ (case) 246:
  [404] pushcons 9 .............................. <"\x9A">
  [406] getlocal 6 .............................. <j>
  [408] pushzero ................................ <0>
  [409] pushzero ................................ <0>
  [410] pushzero ................................ <0>
  [411] pushzero ................................ <0>
  [412] pushzero ................................ <0>
  [413] pushzero ................................ <0>
  [414] pushzero ................................ <0>
  [415] pushint8 5 .............................. <5>
  [417] putchunk 21 ............................. put "\x9A" into char j of tValue
  [419] pop 1 ................................... end case
  [421] pushint8 1
  [423] getlocal 6
  [425] add
  [426] setlocal 6
  [428] endrepeat [338]
  [430] getparam 0 .............................. <me>
  [432] pushsymb 639 ............................ <#pItemList>
  [435] getlocal 4 .............................. <tProp>
  [437] getlocal 5 .............................. <tValue>
  [439] pusharglistnoret 4 ...................... <me, #pItemList, tProp, tValue>
  [441] objcall 889 ............................. me.pItemList[tProp] = tValue
  [444] getparam 2 .............................. <tDelimiter>
  [446] setmovieprop 286 ........................ the itemDelimiter = tDelimiter
  [449] pushint8 1
  [451] getlocal 2
  [453] add
  [454] setlocal 2
  [456] endrepeat [ 33]
  [459] getlocal 1 .............................. <tDelim>
  [461] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [464] pushint8 1 .............................. <1>
  [466] pusharglistnoret 1 ...................... <1>
  [468] extcall 25 .............................. return 1
  [470] ret
end

on clear me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <[:]>
  [  4] pushproplist ............................ <[:]>
  [  5] setobjprop 639 .......................... me.pItemList = [:]
  [  8] ret
end
