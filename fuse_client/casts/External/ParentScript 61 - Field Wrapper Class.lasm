property pMember

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 76 .............................. <getResourceManager()>
  [  4] getprop 1456 ............................ <pMember>
  [  7] getobjprop 725 .......................... <pMember.name>
  [ 10] pusharglist 2 ........................... <getResourceManager(), pMember.name>
  [ 12] objcall 165 ............................. <getResourceManager().removeMember(pMember.name)>
  [ 14] pusharglistnoret 1 ...................... <getResourceManager().removeMember(pMember.name)>
  [ 16] extcall 25 .............................. return getResourceManager().removeMember(pMember.name)
  [ 18] ret
end

on prepare me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 76 .............................. <getResourceManager()>
  [  4] getparam 0 .............................. <me>
  [  6] pushsymb 1415 ........................... <#pProps>
  [  9] pushsymb 41 ............................. <#member>
  [ 11] pusharglist 3 ........................... <me, #pProps, #member>
  [ 13] objcall 290 ............................. <me.pProps[#member]>
  [ 16] getmovieprop 671 ........................ <the milliSeconds>
  [ 19] joinstr ................................. <me.pProps[#member] & the milliSeconds>
  [ 20] pushint8 99 ............................. <99>
  [ 22] pusharglist 1 ........................... <99>
  [ 24] extcall 655 ............................. <random(99)>
  [ 27] pusharglist 1 ........................... <random(99)>
  [ 29] extcall 859 ............................. <numToChar(random(99))>
  [ 32] joinstr ................................. <me.pProps[#member] & the milliSeconds & numToChar(random(99))>
  [ 33] pushsymb 784 ............................ <#field>
  [ 36] pusharglist 3 ........................... <getResourceManager(), me.pProps[#member] & the milliSeconds & numToChar(random(99)), #field>
  [ 38] objcall 164 ............................. <getResourceManager().createMember(me.pProps[#member] & the milliSeconds & numToChar(random(99)), #field)>
  [ 40] pusharglist 1 ........................... <getResourceManager().createMember(me.pProps[#member] & the milliSeconds & numToChar(random(99)), #field)>
  [ 42] extcall 41 .............................. <member(getResourceManager().createMember(me.pProps[#member] & the milliSeconds & numToChar(random(99)), #field))>
  [ 44] setprop 1456 ............................ pMember = member(getResourceManager().createMember(me.pProps[#member] & the milliSeconds & numToChar(random(99)), #field))
  [ 47] getprop 1456 ............................ <pMember>
  [ 50] getparam 0 .............................. <me>
  [ 52] pushsymb 1415 ........................... <#pProps>
  [ 55] pushsymb 592 ............................ <#wordWrap>
  [ 58] pusharglist 3 ........................... <me, #pProps, #wordWrap>
  [ 60] objcall 290 ............................. <me.pProps[#wordWrap]>
  [ 63] setobjprop 592 .......................... pMember.wordWrap = me.pProps[#wordWrap]
  [ 66] getprop 1456 ............................ <pMember>
  [ 69] getparam 0 .............................. <me>
  [ 71] pushsymb 1415 ........................... <#pProps>
  [ 74] pushsymb 1457 ........................... <#autoTab>
  [ 77] pusharglist 3 ........................... <me, #pProps, #autoTab>
  [ 79] objcall 290 ............................. <me.pProps[#autoTab]>
  [ 82] setobjprop 1457 ......................... pMember.autoTab = me.pProps[#autoTab]
  [ 85] getprop 1456 ............................ <pMember>
  [ 88] getparam 0 .............................. <me>
  [ 90] pushsymb 1415 ........................... <#pProps>
  [ 93] pushsymb 470 ............................ <#alignment>
  [ 96] pusharglist 3 ........................... <me, #pProps, #alignment>
  [ 98] objcall 290 ............................. <me.pProps[#alignment]>
  [101] setobjprop 470 .......................... pMember.alignment = me.pProps[#alignment]
  [104] getprop 1456 ............................ <pMember>
  [107] getparam 0 .............................. <me>
  [109] pushsymb 1415 ........................... <#pProps>
  [112] pushsymb 594 ............................ <#font>
  [115] pusharglist 3 ........................... <me, #pProps, #font>
  [117] objcall 290 ............................. <me.pProps[#font]>
  [120] setobjprop 594 .......................... pMember.font = me.pProps[#font]
  [123] getprop 1456 ............................ <pMember>
  [126] getparam 0 .............................. <me>
  [128] pushsymb 1415 ........................... <#pProps>
  [131] pushsymb 596 ............................ <#fontSize>
  [134] pusharglist 3 ........................... <me, #pProps, #fontSize>
  [136] objcall 290 ............................. <me.pProps[#fontSize]>
  [139] setobjprop 596 .......................... pMember.fontSize = me.pProps[#fontSize]
  [142] getprop 1456 ............................ <pMember>
  [145] getparam 0 .............................. <me>
  [147] pushsymb 1415 ........................... <#pProps>
  [150] pushsymb 851 ............................ <#boxType>
  [153] pusharglist 3 ........................... <me, #pProps, #boxType>
  [155] objcall 290 ............................. <me.pProps[#boxType]>
  [158] setobjprop 851 .......................... pMember.boxType = me.pProps[#boxType]
  [161] getprop 1456 ............................ <pMember>
  [164] getparam 0 .............................. <me>
  [166] pushsymb 1415 ........................... <#pProps>
  [169] pushsymb 595 ............................ <#fontStyle>
  [172] pusharglist 3 ........................... <me, #pProps, #fontStyle>
  [174] objcall 290 ............................. <me.pProps[#fontStyle]>
  [177] setobjprop 595 .......................... pMember.fontStyle = me.pProps[#fontStyle]
  [180] getprop 1456 ............................ <pMember>
  [183] pushint8 1 .............................. <1>
  [185] setobjprop 1458 ......................... pMember.editable = 1
  [188] getparam 0 .............................. <me>
  [190] pushsymb 1415 ........................... <#pProps>
  [193] pushsymb 1090 ........................... <#border>
  [196] pusharglist 3 ........................... <me, #pProps, #border>
  [198] objcall 290 ............................. <me.pProps[#border]>
  [201] pusharglist 1 ........................... <me.pProps[#border]>
  [203] extcall 20 .............................. <voidp(me.pProps[#border])>
  [205] jmpifz [222] ............................ if voidp(me.pProps[#border]) then
  [208] getparam 0 .............................. <me>
  [210] pushsymb 1415 ........................... <#pProps>
  [213] pushsymb 1090 ........................... <#border>
  [216] pushzero ................................ <0>
  [217] pusharglistnoret 4 ...................... <me, #pProps, #border, 0>
  [219] objcall 889 ............................. me.pProps[#border] = 0
  [222] getprop 1456 ............................ <pMember>
  [225] getparam 0 .............................. <me>
  [227] pushsymb 1415 ........................... <#pProps>
  [230] pushsymb 1223 ........................... <#txtColor>
  [233] pusharglist 3 ........................... <me, #pProps, #txtColor>
  [235] objcall 290 ............................. <me.pProps[#txtColor]>
  [238] setobjprop 597 .......................... pMember.color = me.pProps[#txtColor]
  [241] getprop 1456 ............................ <pMember>
  [244] getparam 0 .............................. <me>
  [246] pushsymb 1415 ........................... <#pProps>
  [249] pushsymb 1224 ........................... <#txtBgColor>
  [252] pusharglist 3 ........................... <me, #pProps, #txtBgColor>
  [254] objcall 290 ............................. <me.pProps[#txtBgColor]>
  [257] setobjprop 1225 ......................... pMember.bgColor = me.pProps[#txtBgColor]
  [260] getprop 1456 ............................ <pMember>
  [263] getparam 0 .............................. <me>
  [265] pushsymb 1415 ........................... <#pProps>
  [268] pushsymb 1090 ........................... <#border>
  [271] pusharglist 3 ........................... <me, #pProps, #border>
  [273] objcall 290 ............................. <me.pProps[#border]>
  [276] setobjprop 1090 ......................... pMember.border = me.pProps[#border]
  [279] getparam 0 .............................. <me>
  [281] pushsymb 1415 ........................... <#pProps>
  [284] pushsymb 1459 ........................... <#boxDropShadow>
  [287] pusharglist 3 ........................... <me, #pProps, #boxDropShadow>
  [289] objcall 290 ............................. <me.pProps[#boxDropShadow]>
  [292] pusharglist 1 ........................... <me.pProps[#boxDropShadow]>
  [294] extcall 681 ............................. <integerp(me.pProps[#boxDropShadow])>
  [297] jmpifz [319] ............................ if integerp(me.pProps[#boxDropShadow]) then
  [300] getprop 1456 ............................ <pMember>
  [303] getparam 0 .............................. <me>
  [305] pushsymb 1415 ........................... <#pProps>
  [308] pushsymb 1459 ........................... <#boxDropShadow>
  [311] pusharglist 3 ........................... <me, #pProps, #boxDropShadow>
  [313] objcall 290 ............................. <me.pProps[#boxDropShadow]>
  [316] setobjprop 1459 ......................... pMember.boxDropShadow = me.pProps[#boxDropShadow]
  [319] getparam 0 .............................. <me>
  [321] pushsymb 1415 ........................... <#pProps>
  [324] pushsymb 515 ............................ <#key>
  [327] pusharglist 3 ........................... <me, #pProps, #key>
  [329] objcall 290 ............................. <me.pProps[#key]>
  [332] pushcons 0 .............................. <EMPTY>
  [334] eq ...................................... <me.pProps[#key] = EMPTY>
  [335] jmpifz [349] ............................ if me.pProps[#key] = EMPTY then / else
  [338] getprop 1456 ............................ <pMember>
  [341] pushcons 0 .............................. <EMPTY>
  [343] setobjprop 514 .......................... pMember.text = EMPTY
  [346] jmp [443]
  [349] getparam 0 .............................. <me>
  [351] pushsymb 1415 ........................... <#pProps>
  [354] pushsymb 515 ............................ <#key>
  [357] pusharglist 3 ........................... <me, #pProps, #key>
  [359] objcall 290 ............................. <me.pProps[#key]>
  [362] pusharglist 1 ........................... <me.pProps[#key]>
  [364] extcall 260 ............................. <textExists(me.pProps[#key])>
  [367] jmpifz [396] ............................ if textExists(me.pProps[#key]) then / else
  [370] getprop 1456 ............................ <pMember>
  [373] getparam 0 .............................. <me>
  [375] pushsymb 1415 ........................... <#pProps>
  [378] pushsymb 515 ............................ <#key>
  [381] pusharglist 3 ........................... <me, #pProps, #key>
  [383] objcall 290 ............................. <me.pProps[#key]>
  [386] pusharglist 1 ........................... <me.pProps[#key]>
  [388] localcall 2 ............................. <getText(me.pProps[#key])>
  [390] setobjprop 514 .......................... pMember.text = getText(me.pProps[#key])
  [393] jmp [443]
  [396] getparam 0 .............................. <me>
  [398] pushcons 1 .............................. <"Text not found:">
  [400] getparam 0 .............................. <me>
  [402] pushsymb 1415 ........................... <#pProps>
  [405] pushsymb 515 ............................ <#key>
  [408] pusharglist 3 ........................... <me, #pProps, #key>
  [410] objcall 290 ............................. <me.pProps[#key]>
  [413] joinpadstr .............................. <"Text not found:" && me.pProps[#key]>
  [414] pushsymb 434 ............................ <#define>
  [417] pushsymb 932 ............................ <#minor>
  [420] pusharglistnoret 4 ...................... <me, "Text not found:" && me.pProps[#key], #define, #minor>
  [422] extcall 39 .............................. error(me, "Text not found:" && me.pProps[#key], #define, #minor)
  [424] getprop 1456 ............................ <pMember>
  [427] getparam 0 .............................. <me>
  [429] pushsymb 1415 ........................... <#pProps>
  [432] pushsymb 515 ............................ <#key>
  [435] pusharglist 3 ........................... <me, #pProps, #key>
  [437] objcall 290 ............................. <me.pProps[#key]>
  [440] setobjprop 514 .......................... pMember.text = me.pProps[#key]
  [443] getparam 0 .............................. <me>
  [445] getchainedprop 35 ....................... <me.pSprite>
  [447] getprop 1456 ............................ <pMember>
  [450] setobjprop 41 ........................... me.pSprite.member = pMember
  [452] getprop 1456 ............................ <pMember>
  [455] pushzero ................................ <0>
  [456] pushzero ................................ <0>
  [457] getparam 0 .............................. <me>
  [459] getobjprop 497 .......................... <me.pwidth>
  [462] getparam 0 .............................. <me>
  [464] getobjprop 502 .......................... <me.pheight>
  [467] pusharglist 4 ........................... <0, 0, me.pwidth, me.pheight>
  [469] extcall 555 ............................. <rect(0, 0, me.pwidth, me.pheight)>
  [472] setobjprop 555 .......................... pMember.rect = rect(0, 0, me.pwidth, me.pheight)
  [475] pushint8 1 .............................. <1>
  [477] pusharglistnoret 1 ...................... <1>
  [479] extcall 25 .............................. return 1
  [481] ret
end

on getText me
  [  0] getprop 1456 ............................ <pMember>
  [  3] getobjprop 514 .......................... <pMember.text>
  [  6] pusharglistnoret 1 ...................... <pMember.text>
  [  8] extcall 25 .............................. return pMember.text
  [ 10] ret
end

on setText me, tText
  [  0] getparam 1 .............................. <tText>
  [  2] pusharglist 1 ........................... <tText>
  [  4] extcall 38 .............................. <stringp(tText)>
  [  6] not ..................................... <not stringp(tText)>
  [  7] jmpifz [ 19] ............................ if not stringp(tText) then
  [ 10] getparam 1 .............................. <tText>
  [ 12] pusharglist 1 ........................... <tText>
  [ 14] extcall 593 ............................. <string(tText)>
  [ 17] setparam 1 .............................. tText = string(tText)
  [ 19] getprop 1456 ............................ <pMember>
  [ 22] getparam 1 .............................. <tText>
  [ 24] setobjprop 514 .......................... pMember.text = tText
  [ 27] pushint8 1 .............................. <1>
  [ 29] pusharglistnoret 1 ...................... <1>
  [ 31] extcall 25 .............................. return 1
  [ 33] ret
end

on setEdit me, tBool
  [  0] getparam 1 .............................. <tBool>
  [  2] pushint8 1 .............................. <1>
  [  4] nteq .................................... <tBool <> 1>
  [  5] getparam 1 .............................. <tBool>
  [  7] pushzero ................................ <0>
  [  8] nteq .................................... <tBool <> 0>
  [  9] and ..................................... <(tBool <> 1) and (tBool <> 0)>
  [ 10] jmpifz [ 18] ............................ if (tBool <> 1) and (tBool <> 0) then
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 25 .............................. return 0
  [ 18] getprop 1456 ............................ <pMember>
  [ 21] getparam 1 .............................. <tBool>
  [ 23] setobjprop 1458 ......................... pMember.editable = tBool
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 35 ....................... <me.pSprite>
  [ 30] getparam 1 .............................. <tBool>
  [ 32] setobjprop 1458 ......................... me.pSprite.editable = tBool
  [ 35] pushint8 1 .............................. <1>
  [ 37] pusharglistnoret 1 ...................... <1>
  [ 39] extcall 25 .............................. return 1
  [ 41] ret
end

on setFocus me, tBool
  [  0] getparam 1 .............................. <tBool>
  [  2] peek 0 .................................. case tBool of
  [  4] pushint8 1 .............................. <1>
  [  6] eq
  [  7] jmpifz [ 21] ............................ (case) 1:
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 35 ....................... <me.pSprite>
  [ 14] getobjprop 37 ........................... <me.pSprite.spriteNum>
  [ 16] setmovieprop 65 ......................... the keyboardFocusSprite = me.pSprite.spriteNum
  [ 18] jmp [ 41]
  [ 21] peek 0
  [ 23] pushzero ................................ <0>
  [ 24] eq
  [ 25] jmpifz [ 34] ............................ (case) 0:
  [ 28] pushzero ................................ <0>
  [ 29] setmovieprop 65 ......................... the keyboardFocusSprite = 0
  [ 31] jmp [ 41] ............................... (case) otherwise:
  [ 34] pop 1
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 1 ...................... <0>
  [ 39] extcall 25 .............................. return 0
  [ 41] pop 1 ................................... end case
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 25 .............................. return 1
  [ 49] ret
end

on render me
  [  0] getparam 0 .............................. <me>
  [  2] getparam 0 .............................. <me>
  [  4] getchainedprop 35 ....................... <me.pSprite>
  [  6] getobjprop 504 .......................... <me.pSprite.locH>
  [  9] setobjprop 465 .......................... me.pLocX = me.pSprite.locH
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 0 .............................. <me>
  [ 16] getchainedprop 35 ....................... <me.pSprite>
  [ 18] getobjprop 505 .......................... <me.pSprite.locV>
  [ 21] setobjprop 467 .......................... me.pLocY = me.pSprite.locV
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 35 ....................... <me.pSprite>
  [ 30] getobjprop 42 ........................... <me.pSprite.width>
  [ 32] setobjprop 497 .......................... me.pwidth = me.pSprite.width
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 0 .............................. <me>
  [ 39] getchainedprop 35 ....................... <me.pSprite>
  [ 41] getobjprop 43 ........................... <me.pSprite.height>
  [ 43] setobjprop 502 .......................... me.pheight = me.pSprite.height
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 1456 ..................... <me.pMember>
  [ 51] pushzero ................................ <0>
  [ 52] pushzero ................................ <0>
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 497 .......................... <me.pwidth>
  [ 58] getparam 0 .............................. <me>
  [ 60] getobjprop 502 .......................... <me.pheight>
  [ 63] pusharglist 4 ........................... <0, 0, me.pwidth, me.pheight>
  [ 65] extcall 555 ............................. <rect(0, 0, me.pwidth, me.pheight)>
  [ 68] setobjprop 555 .......................... me.pMember.rect = rect(0, 0, me.pwidth, me.pheight)
  [ 71] ret
end

on draw me, tRGB
  [  0] getparam 1 .............................. <tRGB>
  [  2] pushsymb 597 ............................ <#color>
  [  5] pusharglist 2 ........................... <tRGB, #color>
  [  7] extcall 488 ............................. <ilk(tRGB, #color)>
  [ 10] not ..................................... <not ilk(tRGB, #color)>
  [ 11] jmpifz [ 26] ............................ if not ilk(tRGB, #color) then
  [ 14] pushint16 255 ........................... <255>
  [ 17] pushzero ................................ <0>
  [ 18] pushzero ................................ <0>
  [ 19] pusharglist 3 ........................... <255, 0, 0>
  [ 21] extcall 576 ............................. <rgb(255, 0, 0)>
  [ 24] setparam 1 .............................. tRGB = rgb(255, 0, 0)
  [ 26] getmovieprop 968 ........................ <the stage>
  [ 29] getchainedprop 500 ...................... <(the stage).image>
  [ 32] getparam 0 .............................. <me>
  [ 34] getchainedprop 35 ....................... <me.pSprite>
  [ 36] getobjprop 555 .......................... <me.pSprite.rect>
  [ 39] pushsymb 1421 ........................... <#shapeType>
  [ 42] pushsymb 555 ............................ <#rect>
  [ 45] pushsymb 597 ............................ <#color>
  [ 48] getparam 1 .............................. <tRGB>
  [ 50] pusharglist 4 ........................... <[#shapeType: #rect, #color: tRGB]>
  [ 52] pushproplist ............................ <[#shapeType: #rect, #color: tRGB]>
  [ 53] pusharglistnoret 3 ...................... <(the stage).image, me.pSprite.rect, [#shapeType: #rect, #color: tRGB]>
  [ 55] objcall 1360 ............................ (the stage).image.draw(me.pSprite.rect, [#shapeType: #rect, #color: tRGB])
  [ 58] ret
end
