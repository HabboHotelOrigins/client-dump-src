property pFontData, pTextMem, pNeedFill

on prepare me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 1434 ......................... me.pOffX = 0
  [  6] getparam 0 .............................. <me>
  [  8] pushzero ................................ <0>
  [  9] setobjprop 1435 ......................... me.pOffY = 0
  [ 12] getparam 0 .............................. <me>
  [ 14] getparam 0 .............................. <me>
  [ 16] pushsymb 1415 ........................... <#pProps>
  [ 19] pushsymb 42 ............................. <#width>
  [ 21] pusharglist 3 ........................... <me, #pProps, #width>
  [ 23] objcall 290 ............................. <me.pProps[#width]>
  [ 26] setobjprop 1436 ......................... me.pOwnW = me.pProps[#width]
  [ 29] getparam 0 .............................. <me>
  [ 31] getparam 0 .............................. <me>
  [ 33] pushsymb 1415 ........................... <#pProps>
  [ 36] pushsymb 43 ............................. <#height>
  [ 38] pusharglist 3 ........................... <me, #pProps, #height>
  [ 40] objcall 290 ............................. <me.pProps[#height]>
  [ 43] setobjprop 1437 ......................... me.pOwnH = me.pProps[#height]
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglist 0 ........................... <[]>
  [ 50] pushlist ................................ <[]>
  [ 51] setobjprop 1438 ......................... me.pScrolls = []
  [ 54] getparam 0 .............................. <me>
  [ 56] pushsymb 1415 ........................... <#pProps>
  [ 59] pushsymb 1385 ........................... <#style>
  [ 62] pusharglist 3 ........................... <me, #pProps, #style>
  [ 64] objcall 290 ............................. <me.pProps[#style]>
  [ 67] pushsymb 986 ............................ <#unique>
  [ 70] eq ...................................... <me.pProps[#style] = #unique>
  [ 71] jmpifz [ 89] ............................ if me.pProps[#style] = #unique then / else
  [ 74] getparam 0 .............................. <me>
  [ 76] pushzero ................................ <0>
  [ 77] setobjprop 1440 ......................... me.pOwnX = 0
  [ 80] getparam 0 .............................. <me>
  [ 82] pushzero ................................ <0>
  [ 83] setobjprop 1441 ......................... me.pOwnY = 0
  [ 86] jmp [125]
  [ 89] getparam 0 .............................. <me>
  [ 91] getparam 0 .............................. <me>
  [ 93] pushsymb 1415 ........................... <#pProps>
  [ 96] pushsymb 504 ............................ <#locH>
  [ 99] pusharglist 3 ........................... <me, #pProps, #locH>
  [101] objcall 290 ............................. <me.pProps[#locH]>
  [104] setobjprop 1440 ......................... me.pOwnX = me.pProps[#locH]
  [107] getparam 0 .............................. <me>
  [109] getparam 0 .............................. <me>
  [111] pushsymb 1415 ........................... <#pProps>
  [114] pushsymb 505 ............................ <#locV>
  [117] pusharglist 3 ........................... <me, #pProps, #locV>
  [119] objcall 290 ............................. <me.pProps[#locV]>
  [122] setobjprop 1441 ......................... me.pOwnY = me.pProps[#locV]
  [125] pusharglist 0 ........................... <[:]>
  [127] pushproplist ............................ <[:]>
  [128] setprop 1448 ............................ pFontData = [:]
  [131] getprop 1448 ............................ <pFontData>
  [134] pushsymb 597 ............................ <#color>
  [137] getparam 0 .............................. <me>
  [139] pushsymb 1415 ........................... <#pProps>
  [142] pushsymb 1223 ........................... <#txtColor>
  [145] pusharglist 3 ........................... <me, #pProps, #txtColor>
  [147] objcall 290 ............................. <me.pProps[#txtColor]>
  [150] pusharglistnoret 3 ...................... <pFontData, #color, me.pProps[#txtColor]>
  [152] objcall 24 .............................. pFontData[#color] = me.pProps[#txtColor]
  [154] getprop 1448 ............................ <pFontData>
  [157] pushsymb 1225 ........................... <#bgColor>
  [160] getparam 0 .............................. <me>
  [162] pushsymb 1415 ........................... <#pProps>
  [165] pushsymb 1224 ........................... <#txtBgColor>
  [168] pusharglist 3 ........................... <me, #pProps, #txtBgColor>
  [170] objcall 290 ............................. <me.pProps[#txtBgColor]>
  [173] pusharglistnoret 3 ...................... <pFontData, #bgColor, me.pProps[#txtBgColor]>
  [175] objcall 24 .............................. pFontData[#bgColor] = me.pProps[#txtBgColor]
  [177] getprop 1448 ............................ <pFontData>
  [180] pushsymb 515 ............................ <#key>
  [183] getparam 0 .............................. <me>
  [185] pushsymb 1415 ........................... <#pProps>
  [188] pushsymb 515 ............................ <#key>
  [191] pusharglist 3 ........................... <me, #pProps, #key>
  [193] objcall 290 ............................. <me.pProps[#key]>
  [196] pusharglistnoret 3 ...................... <pFontData, #key, me.pProps[#key]>
  [198] objcall 24 .............................. pFontData[#key] = me.pProps[#key]
  [200] getprop 1448 ............................ <pFontData>
  [203] pushsymb 592 ............................ <#wordWrap>
  [206] getparam 0 .............................. <me>
  [208] pushsymb 1415 ........................... <#pProps>
  [211] pushsymb 592 ............................ <#wordWrap>
  [214] pusharglist 3 ........................... <me, #pProps, #wordWrap>
  [216] objcall 290 ............................. <me.pProps[#wordWrap]>
  [219] pusharglistnoret 3 ...................... <pFontData, #wordWrap, me.pProps[#wordWrap]>
  [221] objcall 24 .............................. pFontData[#wordWrap] = me.pProps[#wordWrap]
  [223] getprop 1448 ............................ <pFontData>
  [226] pushsymb 470 ............................ <#alignment>
  [229] getparam 0 .............................. <me>
  [231] pushsymb 1415 ........................... <#pProps>
  [234] pushsymb 470 ............................ <#alignment>
  [237] pusharglist 3 ........................... <me, #pProps, #alignment>
  [239] objcall 290 ............................. <me.pProps[#alignment]>
  [242] pusharglist 1 ........................... <me.pProps[#alignment]>
  [244] extcall 570 ............................. <symbol(me.pProps[#alignment])>
  [247] pusharglistnoret 3 ...................... <pFontData, #alignment, symbol(me.pProps[#alignment])>
  [249] objcall 24 .............................. pFontData[#alignment] = symbol(me.pProps[#alignment])
  [251] getprop 1448 ............................ <pFontData>
  [254] pushsymb 594 ............................ <#font>
  [257] getparam 0 .............................. <me>
  [259] pushsymb 1415 ........................... <#pProps>
  [262] pushsymb 594 ............................ <#font>
  [265] pusharglist 3 ........................... <me, #pProps, #font>
  [267] objcall 290 ............................. <me.pProps[#font]>
  [270] pusharglistnoret 3 ...................... <pFontData, #font, me.pProps[#font]>
  [272] objcall 24 .............................. pFontData[#font] = me.pProps[#font]
  [274] getprop 1448 ............................ <pFontData>
  [277] pushsymb 596 ............................ <#fontSize>
  [280] getparam 0 .............................. <me>
  [282] pushsymb 1415 ........................... <#pProps>
  [285] pushsymb 596 ............................ <#fontSize>
  [288] pusharglist 3 ........................... <me, #pProps, #fontSize>
  [290] objcall 290 ............................. <me.pProps[#fontSize]>
  [293] pusharglistnoret 3 ...................... <pFontData, #fontSize, me.pProps[#fontSize]>
  [295] objcall 24 .............................. pFontData[#fontSize] = me.pProps[#fontSize]
  [297] getprop 1448 ............................ <pFontData>
  [300] pushsymb 595 ............................ <#fontStyle>
  [303] getparam 0 .............................. <me>
  [305] pushsymb 1415 ........................... <#pProps>
  [308] pushsymb 595 ............................ <#fontStyle>
  [311] pusharglist 3 ........................... <me, #pProps, #fontStyle>
  [313] objcall 290 ............................. <me.pProps[#fontStyle]>
  [316] pusharglistnoret 3 ...................... <pFontData, #fontStyle, me.pProps[#fontStyle]>
  [318] objcall 24 .............................. pFontData[#fontStyle] = me.pProps[#fontStyle]
  [320] getparam 0 .............................. <me>
  [322] pushsymb 1415 ........................... <#pProps>
  [325] pushsymb 475 ............................ <#fixedLineSpace>
  [328] pusharglist 3 ........................... <me, #pProps, #fixedLineSpace>
  [330] objcall 290 ............................. <me.pProps[#fixedLineSpace]>
  [333] pusharglist 1 ........................... <me.pProps[#fixedLineSpace]>
  [335] extcall 681 ............................. <integerp(me.pProps[#fixedLineSpace])>
  [338] jmpifz [367] ............................ if integerp(me.pProps[#fixedLineSpace]) then / else
  [341] getprop 1448 ............................ <pFontData>
  [344] pushsymb 475 ............................ <#fixedLineSpace>
  [347] getparam 0 .............................. <me>
  [349] pushsymb 1415 ........................... <#pProps>
  [352] pushsymb 475 ............................ <#fixedLineSpace>
  [355] pusharglist 3 ........................... <me, #pProps, #fixedLineSpace>
  [357] objcall 290 ............................. <me.pProps[#fixedLineSpace]>
  [360] pusharglistnoret 3 ...................... <pFontData, #fixedLineSpace, me.pProps[#fixedLineSpace]>
  [362] objcall 24 .............................. pFontData[#fixedLineSpace] = me.pProps[#fixedLineSpace]
  [364] jmp [390]
  [367] getprop 1448 ............................ <pFontData>
  [370] pushsymb 475 ............................ <#fixedLineSpace>
  [373] getparam 0 .............................. <me>
  [375] pushsymb 1415 ........................... <#pProps>
  [378] pushsymb 596 ............................ <#fontSize>
  [381] pusharglist 3 ........................... <me, #pProps, #fontSize>
  [383] objcall 290 ............................. <me.pProps[#fontSize]>
  [386] pusharglistnoret 3 ...................... <pFontData, #fixedLineSpace, me.pProps[#fontSize]>
  [388] objcall 24 .............................. pFontData[#fixedLineSpace] = me.pProps[#fontSize]
  [390] getprop 1448 ............................ <pFontData>
  [393] pushsymb 515 ............................ <#key>
  [396] pusharglist 2 ........................... <pFontData, #key>
  [398] objcall 54 .............................. <pFontData[#key]>
  [400] pusharglist 1 ........................... <pFontData[#key]>
  [402] extcall 20 .............................. <voidp(pFontData[#key])>
  [404] jmpifz [419] ............................ if voidp(pFontData[#key]) then
  [407] getprop 1448 ............................ <pFontData>
  [410] pushsymb 515 ............................ <#key>
  [413] pushcons 0 .............................. <EMPTY>
  [415] pusharglistnoret 3 ...................... <pFontData, #key, EMPTY>
  [417] objcall 24 .............................. pFontData[#key] = EMPTY
  [419] getprop 1448 ............................ <pFontData>
  [422] pushsymb 1225 ........................... <#bgColor>
  [425] pusharglist 2 ........................... <pFontData, #bgColor>
  [427] objcall 54 .............................. <pFontData[#bgColor]>
  [429] pushint16 255 ........................... <255>
  [432] pushint16 255 ........................... <255>
  [435] pushint16 255 ........................... <255>
  [438] pusharglist 3 ........................... <255, 255, 255>
  [440] extcall 576 ............................. <rgb(255, 255, 255)>
  [443] nteq .................................... <pFontData[#bgColor] <> rgb(255, 255, 255)>
  [444] jmpifz [455] ............................ if pFontData[#bgColor] <> rgb(255, 255, 255) then / else
  [447] pushint8 1 .............................. <1>
  [449] setprop 1449 ............................ pNeedFill = 1
  [452] jmp [459]
  [455] pushzero ................................ <0>
  [456] setprop 1449 ............................ pNeedFill = 0
  [459] getparam 0 .............................. <me>
  [461] getprop 1448 ............................ <pFontData>
  [464] pusharglistnoret 2 ...................... <me, pFontData>
  [466] objcall 1446 ............................ me.initResources(pFontData)
  [469] getparam 0 .............................. <me>
  [471] pusharglist 1 ........................... <me>
  [473] objcall 1447 ............................ <me.createImgFromTxt()>
  [476] pusharglistnoret 1 ...................... <me.createImgFromTxt()>
  [478] extcall 25 .............................. return me.createImgFromTxt()
  [480] ret
end

on setText me, tText
  [  0] getparam 1 .............................. <tText>
  [  2] pusharglist 1 ........................... <tText>
  [  4] extcall 593 ............................. <string(tText)>
  [  7] setparam 1 .............................. tText = string(tText)
  [  9] getprop 1448 ............................ <pFontData>
  [ 12] pushsymb 514 ............................ <#text>
  [ 15] getparam 1 .............................. <tText>
  [ 17] pusharglistnoret 3 ...................... <pFontData, #text, tText>
  [ 19] objcall 24 .............................. pFontData[#text] = tText
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 1440 ......................... <me.pOwnX>
  [ 26] getparam 0 .............................. <me>
  [ 28] getobjprop 1441 ......................... <me.pOwnY>
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 1440 ......................... <me.pOwnX>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 1436 ......................... <me.pOwnW>
  [ 41] add ..................................... <me.pOwnX + me.pOwnW>
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 1441 ......................... <me.pOwnY>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 1437 ......................... <me.pOwnH>
  [ 52] add ..................................... <me.pOwnY + me.pOwnH>
  [ 53] pusharglist 4 ........................... <me.pOwnX, me.pOwnY, me.pOwnX + me.pOwnW, me.pOwnY + me.pOwnH>
  [ 55] extcall 555 ............................. <rect(me.pOwnX, me.pOwnY, me.pOwnX + me.pOwnW, me.pOwnY + me.pOwnH)>
  [ 58] setlocal 0 .............................. tRect = rect(me.pOwnX, me.pOwnY, me.pOwnX + me.pOwnW, me.pOwnY + me.pOwnH)
  [ 60] getparam 0 .............................. <me>
  [ 62] getchainedprop 463 ...................... <me.pBuffer>
  [ 65] getchainedprop 500 ...................... <me.pBuffer.image>
  [ 68] getlocal 0 .............................. <tRect>
  [ 70] pushint16 255 ........................... <255>
  [ 73] pushint16 255 ........................... <255>
  [ 76] pushint16 255 ........................... <255>
  [ 79] pusharglist 3 ........................... <255, 255, 255>
  [ 81] extcall 576 ............................. <rgb(255, 255, 255)>
  [ 84] pusharglistnoret 3 ...................... <me.pBuffer.image, tRect, rgb(255, 255, 255)>
  [ 86] objcall 1442 ............................ me.pBuffer.image.fill(tRect, rgb(255, 255, 255))
  [ 89] getparam 0 .............................. <me>
  [ 91] pusharglistnoret 1 ...................... <me>
  [ 93] objcall 1447 ............................ me.createImgFromTxt()
  [ 96] getparam 0 .............................. <me>
  [ 98] pusharglistnoret 1 ...................... <me>
  [100] objcall 447 ............................. me.render()
  [103] getparam 0 .............................. <me>
  [105] pusharglistnoret 1 ...................... <me>
  [107] objcall 1425 ............................ me.registerScroll()
  [110] pushint8 1 .............................. <1>
  [112] pusharglistnoret 1 ...................... <1>
  [114] extcall 25 .............................. return 1
  [116] ret
end

on getText me
  [  0] getprop 1448 ............................ <pFontData>
  [  3] pushsymb 514 ............................ <#text>
  [  6] pusharglist 2 ........................... <pFontData, #text>
  [  8] objcall 54 .............................. <pFontData[#text]>
  [ 10] pusharglistnoret 1 ...................... <pFontData[#text]>
  [ 12] extcall 25 .............................. return pFontData[#text]
  [ 14] ret
end

on setFont me, tStruct
  [  0] getprop 1448 ............................ <pFontData>
  [  3] getparam 1 .............................. <tStruct>
  [  5] pushsymb 594 ............................ <#font>
  [  8] pusharglist 2 ........................... <tStruct, #font>
  [ 10] objcall 31 .............................. <tStruct.getaProp(#font)>
  [ 12] setobjprop 594 .......................... pFontData.font = tStruct.getaProp(#font)
  [ 15] getprop 1448 ............................ <pFontData>
  [ 18] getparam 1 .............................. <tStruct>
  [ 20] pushsymb 595 ............................ <#fontStyle>
  [ 23] pusharglist 2 ........................... <tStruct, #fontStyle>
  [ 25] objcall 31 .............................. <tStruct.getaProp(#fontStyle)>
  [ 27] setobjprop 595 .......................... pFontData.fontStyle = tStruct.getaProp(#fontStyle)
  [ 30] getprop 1448 ............................ <pFontData>
  [ 33] getparam 1 .............................. <tStruct>
  [ 35] pushsymb 596 ............................ <#fontSize>
  [ 38] pusharglist 2 ........................... <tStruct, #fontSize>
  [ 40] objcall 31 .............................. <tStruct.getaProp(#fontSize)>
  [ 42] setobjprop 596 .......................... pFontData.fontSize = tStruct.getaProp(#fontSize)
  [ 45] getprop 1448 ............................ <pFontData>
  [ 48] getparam 1 .............................. <tStruct>
  [ 50] pushsymb 597 ............................ <#color>
  [ 53] pusharglist 2 ........................... <tStruct, #color>
  [ 55] objcall 31 .............................. <tStruct.getaProp(#color)>
  [ 57] setobjprop 597 .......................... pFontData.color = tStruct.getaProp(#color)
  [ 60] getprop 1448 ............................ <pFontData>
  [ 63] getparam 1 .............................. <tStruct>
  [ 65] pushsymb 1331 ........................... <#lineHeight>
  [ 68] pusharglist 2 ........................... <tStruct, #lineHeight>
  [ 70] objcall 31 .............................. <tStruct.getaProp(#lineHeight)>
  [ 72] setobjprop 475 .......................... pFontData.fixedLineSpace = tStruct.getaProp(#lineHeight)
  [ 75] getparam 0 .............................. <me>
  [ 77] getobjprop 1440 ......................... <me.pOwnX>
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 1441 ......................... <me.pOwnY>
  [ 85] getparam 0 .............................. <me>
  [ 87] getobjprop 1440 ......................... <me.pOwnX>
  [ 90] getparam 0 .............................. <me>
  [ 92] getobjprop 1436 ......................... <me.pOwnW>
  [ 95] add ..................................... <me.pOwnX + me.pOwnW>
  [ 96] getparam 0 .............................. <me>
  [ 98] getobjprop 1441 ......................... <me.pOwnY>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 1437 ......................... <me.pOwnH>
  [106] add ..................................... <me.pOwnY + me.pOwnH>
  [107] pusharglist 4 ........................... <me.pOwnX, me.pOwnY, me.pOwnX + me.pOwnW, me.pOwnY + me.pOwnH>
  [109] extcall 555 ............................. <rect(me.pOwnX, me.pOwnY, me.pOwnX + me.pOwnW, me.pOwnY + me.pOwnH)>
  [112] setlocal 0 .............................. tRect = rect(me.pOwnX, me.pOwnY, me.pOwnX + me.pOwnW, me.pOwnY + me.pOwnH)
  [114] getparam 0 .............................. <me>
  [116] getchainedprop 463 ...................... <me.pBuffer>
  [119] getchainedprop 500 ...................... <me.pBuffer.image>
  [122] getlocal 0 .............................. <tRect>
  [124] pushint16 255 ........................... <255>
  [127] pushint16 255 ........................... <255>
  [130] pushint16 255 ........................... <255>
  [133] pusharglist 3 ........................... <255, 255, 255>
  [135] extcall 576 ............................. <rgb(255, 255, 255)>
  [138] pusharglistnoret 3 ...................... <me.pBuffer.image, tRect, rgb(255, 255, 255)>
  [140] objcall 1442 ............................ me.pBuffer.image.fill(tRect, rgb(255, 255, 255))
  [143] getparam 0 .............................. <me>
  [145] pusharglistnoret 1 ...................... <me>
  [147] objcall 1447 ............................ me.createImgFromTxt()
  [150] getparam 0 .............................. <me>
  [152] pusharglistnoret 1 ...................... <me>
  [154] objcall 447 ............................. me.render()
  [157] getparam 0 .............................. <me>
  [159] pusharglistnoret 1 ...................... <me>
  [161] objcall 1425 ............................ me.registerScroll()
  [164] pushint8 1 .............................. <1>
  [166] pusharglistnoret 1 ...................... <1>
  [168] extcall 25 .............................. return 1
  [170] ret
end

on getFont me
  [  0] pushcons 1 .............................. <"struct.font.empty">
  [  2] pusharglist 1 ........................... <"struct.font.empty">
  [  4] extcall 374 ............................. <getStructVariable("struct.font.empty")>
  [  7] setlocal 0 .............................. tStruct = getStructVariable("struct.font.empty")
  [  9] getlocal 0 .............................. <tStruct>
  [ 11] pushsymb 594 ............................ <#font>
  [ 14] getprop 1448 ............................ <pFontData>
  [ 17] getobjprop 594 .......................... <pFontData.font>
  [ 20] pusharglistnoret 3 ...................... <tStruct, #font, pFontData.font>
  [ 22] objcall 128 ............................. tStruct.setaProp(#font, pFontData.font)
  [ 24] getlocal 0 .............................. <tStruct>
  [ 26] pushsymb 595 ............................ <#fontStyle>
  [ 29] getprop 1448 ............................ <pFontData>
  [ 32] getobjprop 595 .......................... <pFontData.fontStyle>
  [ 35] pusharglistnoret 3 ...................... <tStruct, #fontStyle, pFontData.fontStyle>
  [ 37] objcall 128 ............................. tStruct.setaProp(#fontStyle, pFontData.fontStyle)
  [ 39] getlocal 0 .............................. <tStruct>
  [ 41] pushsymb 596 ............................ <#fontSize>
  [ 44] getprop 1448 ............................ <pFontData>
  [ 47] getobjprop 596 .......................... <pFontData.fontSize>
  [ 50] pusharglistnoret 3 ...................... <tStruct, #fontSize, pFontData.fontSize>
  [ 52] objcall 128 ............................. tStruct.setaProp(#fontSize, pFontData.fontSize)
  [ 54] getlocal 0 .............................. <tStruct>
  [ 56] pushsymb 597 ............................ <#color>
  [ 59] getprop 1448 ............................ <pFontData>
  [ 62] getobjprop 597 .......................... <pFontData.color>
  [ 65] pusharglistnoret 3 ...................... <tStruct, #color, pFontData.color>
  [ 67] objcall 128 ............................. tStruct.setaProp(#color, pFontData.color)
  [ 69] getlocal 0 .............................. <tStruct>
  [ 71] pushsymb 1331 ........................... <#lineHeight>
  [ 74] getprop 1448 ............................ <pFontData>
  [ 77] getobjprop 475 .......................... <pFontData.fixedLineSpace>
  [ 80] pusharglistnoret 3 ...................... <tStruct, #lineHeight, pFontData.fixedLineSpace>
  [ 82] objcall 128 ............................. tStruct.setaProp(#lineHeight, pFontData.fixedLineSpace)
  [ 84] getlocal 0 .............................. <tStruct>
  [ 86] pusharglistnoret 1 ...................... <tStruct>
  [ 88] extcall 25 .............................. return tStruct
  [ 90] ret
end

on registerScroll me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 1438 ......................... <me.pScrolls>
  [  5] pusharglist 1 ........................... <me.pScrolls>
  [  7] extcall 20 .............................. <voidp(me.pScrolls)>
  [  9] jmpifz [ 19] ............................ if voidp(me.pScrolls) then
  [ 12] getparam 0 .............................. <me>
  [ 14] pusharglistnoret 1 ...................... <me>
  [ 16] objcall 435 ............................. me.prepare()
  [ 19] getparam 1 .............................. <tid>
  [ 21] pusharglist 1 ........................... <tid>
  [ 23] extcall 20 .............................. <voidp(tid)>
  [ 25] not ..................................... <not voidp(tid)>
  [ 26] jmpifz [ 60] ............................ if not voidp(tid) then / else
  [ 29] getparam 0 .............................. <me>
  [ 31] getchainedprop 1438 ..................... <me.pScrolls>
  [ 34] getparam 1 .............................. <tid>
  [ 36] pusharglist 2 ........................... <me.pScrolls, tid>
  [ 38] objcall 517 ............................. <me.pScrolls.getPos(tid)>
  [ 41] pushzero ................................ <0>
  [ 42] eq ...................................... <me.pScrolls.getPos(tid) = 0>
  [ 43] jmpifz [ 57] ............................ if me.pScrolls.getPos(tid) = 0 then
  [ 46] getparam 0 .............................. <me>
  [ 48] getchainedprop 1438 ..................... <me.pScrolls>
  [ 51] getparam 1 .............................. <tid>
  [ 53] pusharglistnoret 2 ...................... <me.pScrolls, tid>
  [ 55] objcall 122 ............................. me.pScrolls.add(tid)
  [ 57] jmp [ 79]
  [ 60] getparam 0 .............................. <me>
  [ 62] pushsymb 1438 ........................... <#pScrolls>
  [ 65] pusharglist 2 ........................... <me, #pScrolls>
  [ 67] objcall 22 .............................. <me.pScrolls.count>
  [ 69] pushzero ................................ <0>
  [ 70] eq ...................................... <me.pScrolls.count = 0>
  [ 71] jmpifz [ 79] ............................ if me.pScrolls.count = 0 then
  [ 74] pushzero ................................ <0>
  [ 75] pusharglistnoret 1 ...................... <0>
  [ 77] extcall 25 .............................. return 0
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 1434 ......................... <me.pOffX>
  [ 84] getparam 0 .............................. <me>
  [ 86] getobjprop 1435 ......................... <me.pOffY>
  [ 89] getparam 0 .............................. <me>
  [ 91] getobjprop 1434 ......................... <me.pOffX>
  [ 94] getparam 0 .............................. <me>
  [ 96] getobjprop 1436 ......................... <me.pOwnW>
  [ 99] add ..................................... <me.pOffX + me.pOwnW>
  [100] getparam 0 .............................. <me>
  [102] getobjprop 1435 ......................... <me.pOffY>
  [105] getparam 0 .............................. <me>
  [107] getobjprop 1437 ......................... <me.pOwnH>
  [110] add ..................................... <me.pOffY + me.pOwnH>
  [111] pusharglist 4 ........................... <me.pOffX, me.pOffY, me.pOffX + me.pOwnW, me.pOffY + me.pOwnH>
  [113] extcall 555 ............................. <rect(me.pOffX, me.pOffY, me.pOffX + me.pOwnW, me.pOffY + me.pOwnH)>
  [116] setlocal 0 .............................. tSourceRect = rect(me.pOffX, me.pOffY, me.pOffX + me.pOwnW, me.pOffY + me.pOwnH)
  [118] pusharglist 0 ........................... <[]>
  [120] pushlist ................................ <[]>
  [121] setlocal 1 .............................. tScrollList = []
  [123] pusharglist 0 ........................... <>
  [125] extcall 322 ............................. <getWindowManager()>
  [128] getparam 0 .............................. <me>
  [130] getobjprop 1414 ......................... <me.pMotherId>
  [133] pusharglist 2 ........................... <getWindowManager(), me.pMotherId>
  [135] objcall 90 .............................. <getWindowManager().get(me.pMotherId)>
  [137] setlocal 2 .............................. tWndObj = getWindowManager().get(me.pMotherId)
  [139] getparam 0 .............................. <me>
  [141] getobjprop 1438 ......................... <me.pScrolls>
  [144] peek 0
  [146] pusharglist 1
  [148] extcall 22
  [150] pushint8 1
  [152] peek 0
  [154] peek 2
  [156] lteq
  [157] jmpifz [190] ............................ repeat with tScrollId in me.pScrolls
  [160] peek 2
  [162] peek 1
  [164] pusharglist 2
  [166] extcall 54
  [168] setlocal 3
  [170] getlocal 1 .............................. <tScrollList>
  [172] getlocal 2 .............................. <tWndObj>
  [174] getlocal 3 .............................. <tScrollId>
  [176] pusharglist 2 ........................... <tWndObj, tScrollId>
  [178] objcall 1001 ............................ <tWndObj.getElement(tScrollId)>
  [181] pusharglistnoret 2 ...................... <tScrollList, tWndObj.getElement(tScrollId)>
  [183] objcall 122 ............................. tScrollList.add(tWndObj.getElement(tScrollId))
  [185] pushint8 1
  [187] add
  [188] endrepeat [152]
  [190] pop 3
  [192] getparam 0 .............................. <me>
  [194] pusharglistnoret 1 ...................... <me>
  [196] objcall 1447 ............................ me.createImgFromTxt()
  [199] pushsymb 436 ............................ <#updateData>
  [202] getlocal 1 .............................. <tScrollList>
  [204] getlocal 0 .............................. <tSourceRect>
  [206] getparam 0 .............................. <me>
  [208] getchainedprop 496 ...................... <me.pimage>
  [211] getobjprop 555 .......................... <me.pimage.rect>
  [214] pusharglistnoret 4 ...................... <#updateData, tScrollList, tSourceRect, me.pimage.rect>
  [216] extcall 68 .............................. call(#updateData, tScrollList, tSourceRect, me.pimage.rect)
  [218] ret
end

on initResources me, tFontProps
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 76 .............................. <getResourceManager()>
  [  4] pushcons 2 .............................. <"visual window text">
  [  6] pusharglist 2 ........................... <getResourceManager(), "visual window text">
  [  8] objcall 52 .............................. <getResourceManager().getmemnum("visual window text")>
  [ 10] setlocal 0 .............................. tMemNum = getResourceManager().getmemnum("visual window text")
  [ 12] getlocal 0 .............................. <tMemNum>
  [ 14] pushzero ................................ <0>
  [ 15] eq ...................................... <tMemNum = 0>
  [ 16] jmpifz [ 55] ............................ if tMemNum = 0 then / else
  [ 19] pusharglist 0 ........................... <>
  [ 21] extcall 76 .............................. <getResourceManager()>
  [ 23] pushcons 2 .............................. <"visual window text">
  [ 25] pushsymb 514 ............................ <#text>
  [ 28] pusharglist 3 ........................... <getResourceManager(), "visual window text", #text>
  [ 30] objcall 164 ............................. <getResourceManager().createMember("visual window text", #text)>
  [ 32] setlocal 0 .............................. tMemNum = getResourceManager().createMember("visual window text", #text)
  [ 34] getlocal 0 .............................. <tMemNum>
  [ 36] pusharglist 1 ........................... <tMemNum>
  [ 38] extcall 41 .............................. <member(tMemNum)>
  [ 40] setprop 1451 ............................ pTextMem = member(tMemNum)
  [ 43] getprop 1451 ............................ <pTextMem>
  [ 46] pushsymb 1089 ........................... <#adjust>
  [ 49] setobjprop 851 .......................... pTextMem.boxType = #adjust
  [ 52] jmp [ 64]
  [ 55] getlocal 0 .............................. <tMemNum>
  [ 57] pusharglist 1 ........................... <tMemNum>
  [ 59] extcall 41 .............................. <member(tMemNum)>
  [ 61] setprop 1451 ............................ pTextMem = member(tMemNum)
  [ 64] pushint8 1 .............................. <1>
  [ 66] pusharglistnoret 1 ...................... <1>
  [ 68] extcall 25 .............................. return 1
  [ 70] ret
end

on createImgFromTxt me
  [  0] getprop 1451 ............................ <pTextMem>
  [  3] pushzero ................................ <0>
  [  4] pushzero ................................ <0>
  [  5] getparam 0 .............................. <me>
  [  7] getobjprop 1436 ......................... <me.pOwnW>
  [ 10] getparam 0 .............................. <me>
  [ 12] getobjprop 1437 ......................... <me.pOwnH>
  [ 15] pusharglist 4 ........................... <0, 0, me.pOwnW, me.pOwnH>
  [ 17] extcall 555 ............................. <rect(0, 0, me.pOwnW, me.pOwnH)>
  [ 20] setobjprop 555 .......................... pTextMem.rect = rect(0, 0, me.pOwnW, me.pOwnH)
  [ 23] getprop 1448 ............................ <pFontData>
  [ 26] pushsymb 595 ............................ <#fontStyle>
  [ 29] pusharglist 2 ........................... <pFontData, #fontStyle>
  [ 31] objcall 54 .............................. <pFontData[#fontStyle]>
  [ 33] pusharglist 1 ........................... <pFontData[#fontStyle]>
  [ 35] extcall 53 .............................. <listp(pFontData[#fontStyle])>
  [ 37] not ..................................... <not listp(pFontData[#fontStyle])>
  [ 38] jmpifz [140] ............................ if not listp(pFontData[#fontStyle]) then
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setlocal 0 .............................. tList = []
  [ 46] getmovieprop 286 ........................ <the itemDelimiter>
  [ 49] setlocal 1 .............................. tDelim = the itemDelimiter
  [ 51] pushcons 3 .............................. <",">
  [ 53] setmovieprop 286 ........................ the itemDelimiter = ","
  [ 56] pushint8 1 .............................. <1>
  [ 58] setlocal 2
  [ 60] getlocal 2
  [ 62] getprop 1448 ............................ <pFontData>
  [ 65] pushsymb 595 ............................ <#fontStyle>
  [ 68] pusharglist 2 ........................... <pFontData, #fontStyle>
  [ 70] objcall 54 .............................. <pFontData[#fontStyle]>
  [ 72] pushsymb 287 ............................ <#item>
  [ 75] pusharglist 2 ........................... <pFontData[#fontStyle], #item>
  [ 77] objcall 22 .............................. <pFontData[#fontStyle].item.count>
  [ 79] lteq
  [ 80] jmpifz [123] ............................ repeat with i = 1 to pFontData[#fontStyle].item.count
  [ 83] getlocal 0 .............................. <tList>
  [ 85] getprop 1448 ............................ <pFontData>
  [ 88] pushsymb 595 ............................ <#fontStyle>
  [ 91] pusharglist 2 ........................... <pFontData, #fontStyle>
  [ 93] objcall 54 .............................. <pFontData[#fontStyle]>
  [ 95] pushsymb 287 ............................ <#item>
  [ 98] getlocal 2 .............................. <i>
  [100] pusharglist 3 ........................... <pFontData[#fontStyle], #item, i>
  [102] objcall 290 ............................. <pFontData[#fontStyle].item[i]>
  [105] pusharglist 1 ........................... <pFontData[#fontStyle].item[i]>
  [107] extcall 570 ............................. <symbol(pFontData[#fontStyle].item[i])>
  [110] pusharglistnoret 2 ...................... <tList, symbol(pFontData[#fontStyle].item[i])>
  [112] objcall 122 ............................. tList.add(symbol(pFontData[#fontStyle].item[i]))
  [114] pushint8 1
  [116] getlocal 2
  [118] add
  [119] setlocal 2
  [121] endrepeat [ 60]
  [123] getlocal 1 .............................. <tDelim>
  [125] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [128] getprop 1448 ............................ <pFontData>
  [131] pushsymb 595 ............................ <#fontStyle>
  [134] getlocal 0 .............................. <tList>
  [136] pusharglistnoret 3 ...................... <pFontData, #fontStyle, tList>
  [138] objcall 24 .............................. pFontData[#fontStyle] = tList
  [140] getprop 1448 ............................ <pFontData>
  [143] pushsymb 514 ............................ <#text>
  [146] pusharglist 2 ........................... <pFontData, #text>
  [148] objcall 54 .............................. <pFontData[#text]>
  [150] pusharglist 1 ........................... <pFontData[#text]>
  [152] extcall 20 .............................. <voidp(pFontData[#text])>
  [154] not ..................................... <not voidp(pFontData[#text])>
  [155] jmpifz [191] ............................ if not voidp(pFontData[#text]) then / else
  [158] getprop 1451 ............................ <pTextMem>
  [161] getprop 1448 ............................ <pFontData>
  [164] pushsymb 514 ............................ <#text>
  [167] pusharglist 2 ........................... <pFontData, #text>
  [169] objcall 54 .............................. <pFontData[#text]>
  [171] setobjprop 514 .......................... pTextMem.text = pFontData[#text]
  [174] getprop 1448 ............................ <pFontData>
  [177] pushsymb 514 ............................ <#text>
  [180] pusharglist 0 ........................... <>
  [182] extcall 32 .............................. <VOID>
  [184] pusharglistnoret 3 ...................... <pFontData, #text, VOID>
  [186] objcall 24 .............................. pFontData[#text] = VOID
  [188] jmp [399]
  [191] getprop 1448 ............................ <pFontData>
  [194] pushsymb 515 ............................ <#key>
  [197] pusharglist 2 ........................... <pFontData, #key>
  [199] objcall 54 .............................. <pFontData[#key]>
  [201] pushcons 0 .............................. <EMPTY>
  [203] eq ...................................... <pFontData[#key] = EMPTY>
  [204] jmpifz [218] ............................ if pFontData[#key] = EMPTY then / else
  [207] getprop 1451 ............................ <pTextMem>
  [210] pushcons 0 .............................. <EMPTY>
  [212] setobjprop 514 .......................... pTextMem.text = EMPTY
  [215] jmp [399]
  [218] getprop 1448 ............................ <pFontData>
  [221] pushsymb 515 ............................ <#key>
  [224] pusharglist 2 ........................... <pFontData, #key>
  [226] objcall 54 .............................. <pFontData[#key]>
  [228] pushsymb 291 ............................ <#char>
  [231] pushint8 1 .............................. <1>
  [233] pusharglist 3 ........................... <pFontData[#key], #char, 1>
  [235] objcall 290 ............................. <pFontData[#key].char[1]>
  [238] pushcons 4 .............................. <"%">
  [240] eq ...................................... <pFontData[#key].char[1] = "%">
  [241] jmpifz [316] ............................ if pFontData[#key].char[1] = "%" then / else
  [244] getprop 1448 ............................ <pFontData>
  [247] pushsymb 515 ............................ <#key>
  [250] pusharglist 2 ........................... <pFontData, #key>
  [252] objcall 54 .............................. <pFontData[#key]>
  [254] pushsymb 291 ............................ <#char>
  [257] pushint8 2 .............................. <2>
  [259] getprop 1448 ............................ <pFontData>
  [262] pushsymb 515 ............................ <#key>
  [265] pusharglist 2 ........................... <pFontData, #key>
  [267] objcall 54 .............................. <pFontData[#key]>
  [269] pusharglist 1 ........................... <pFontData[#key]>
  [271] extcall 293 ............................. <length(pFontData[#key])>
  [274] pusharglist 4 ........................... <pFontData[#key], #char, 2, length(pFontData[#key])>
  [276] objcall 290 ............................. <pFontData[#key].char[2..length(pFontData[#key])]>
  [279] pusharglist 1 ........................... <pFontData[#key].char[2..length(pFontData[#key])]>
  [281] extcall 570 ............................. <symbol(pFontData[#key].char[2..length(pFontData[#key])])>
  [284] setlocal 3 .............................. tKey = symbol(pFontData[#key].char[2..length(pFontData[#key])])
  [286] getprop 1451 ............................ <pTextMem>
  [289] getparam 0 .............................. <me>
  [291] getobjprop 1414 ......................... <me.pMotherId>
  [294] pusharglist 1 ........................... <me.pMotherId>
  [296] extcall 58 .............................. <getObject(me.pMotherId)>
  [298] getlocal 3 .............................. <tKey>
  [300] pusharglist 2 ........................... <getObject(me.pMotherId), tKey>
  [302] objcall 442 ............................. <getObject(me.pMotherId).getProperty(tKey)>
  [305] pusharglist 1 ........................... <getObject(me.pMotherId).getProperty(tKey)>
  [307] extcall 593 ............................. <string(getObject(me.pMotherId).getProperty(tKey))>
  [310] setobjprop 514 .......................... pTextMem.text = string(getObject(me.pMotherId).getProperty(tKey))
  [313] jmp [399]
  [316] getprop 1448 ............................ <pFontData>
  [319] pushsymb 515 ............................ <#key>
  [322] pusharglist 2 ........................... <pFontData, #key>
  [324] objcall 54 .............................. <pFontData[#key]>
  [326] pusharglist 1 ........................... <pFontData[#key]>
  [328] extcall 260 ............................. <textExists(pFontData[#key])>
  [331] jmpifz [361] ............................ if textExists(pFontData[#key]) then / else
  [334] getprop 1451 ............................ <pTextMem>
  [337] pusharglist 0 ........................... <>
  [339] extcall 255 ............................. <getTextManager()>
  [341] getprop 1448 ............................ <pFontData>
  [344] pushsymb 515 ............................ <#key>
  [347] pusharglist 2 ........................... <pFontData, #key>
  [349] objcall 54 .............................. <pFontData[#key]>
  [351] pusharglist 2 ........................... <getTextManager(), pFontData[#key]>
  [353] objcall 90 .............................. <getTextManager().get(pFontData[#key])>
  [355] setobjprop 514 .......................... pTextMem.text = getTextManager().get(pFontData[#key])
  [358] jmp [399]
  [361] getparam 0 .............................. <me>
  [363] pushcons 5 .............................. <"Text not found:">
  [365] getprop 1448 ............................ <pFontData>
  [368] pushsymb 515 ............................ <#key>
  [371] pusharglist 2 ........................... <pFontData, #key>
  [373] objcall 54 .............................. <pFontData[#key]>
  [375] joinpadstr .............................. <"Text not found:" && pFontData[#key]>
  [376] pushsymb 1447 ........................... <#createImgFromTxt>
  [379] pusharglistnoret 3 ...................... <me, "Text not found:" && pFontData[#key], #createImgFromTxt>
  [381] extcall 39 .............................. error(me, "Text not found:" && pFontData[#key], #createImgFromTxt)
  [383] getprop 1451 ............................ <pTextMem>
  [386] getprop 1448 ............................ <pFontData>
  [389] pushsymb 515 ............................ <#key>
  [392] pusharglist 2 ........................... <pFontData, #key>
  [394] objcall 54 .............................. <pFontData[#key]>
  [396] setobjprop 514 .......................... pTextMem.text = pFontData[#key]
  [399] getprop 1448 ............................ <pFontData>
  [402] pushsymb 514 ............................ <#text>
  [405] getprop 1451 ............................ <pTextMem>
  [408] getobjprop 514 .......................... <pTextMem.text>
  [411] pusharglistnoret 3 ...................... <pFontData, #text, pTextMem.text>
  [413] objcall 24 .............................. pFontData[#text] = pTextMem.text
  [415] getprop 1451 ............................ <pTextMem>
  [418] getobjprop 595 .......................... <pTextMem.fontStyle>
  [421] getprop 1448 ............................ <pFontData>
  [424] pushsymb 595 ............................ <#fontStyle>
  [427] pusharglist 2 ........................... <pFontData, #fontStyle>
  [429] objcall 54 .............................. <pFontData[#fontStyle]>
  [431] nteq .................................... <pTextMem.fontStyle <> pFontData[#fontStyle]>
  [432] jmpifz [451] ............................ if pTextMem.fontStyle <> pFontData[#fontStyle] then
  [435] getprop 1451 ............................ <pTextMem>
  [438] getprop 1448 ............................ <pFontData>
  [441] pushsymb 595 ............................ <#fontStyle>
  [444] pusharglist 2 ........................... <pFontData, #fontStyle>
  [446] objcall 54 .............................. <pFontData[#fontStyle]>
  [448] setobjprop 595 .......................... pTextMem.fontStyle = pFontData[#fontStyle]
  [451] getprop 1451 ............................ <pTextMem>
  [454] getobjprop 592 .......................... <pTextMem.wordWrap>
  [457] getprop 1448 ............................ <pFontData>
  [460] pushsymb 592 ............................ <#wordWrap>
  [463] pusharglist 2 ........................... <pFontData, #wordWrap>
  [465] objcall 54 .............................. <pFontData[#wordWrap]>
  [467] nteq .................................... <pTextMem.wordWrap <> pFontData[#wordWrap]>
  [468] jmpifz [487] ............................ if pTextMem.wordWrap <> pFontData[#wordWrap] then
  [471] getprop 1451 ............................ <pTextMem>
  [474] getprop 1448 ............................ <pFontData>
  [477] pushsymb 592 ............................ <#wordWrap>
  [480] pusharglist 2 ........................... <pFontData, #wordWrap>
  [482] objcall 54 .............................. <pFontData[#wordWrap]>
  [484] setobjprop 592 .......................... pTextMem.wordWrap = pFontData[#wordWrap]
  [487] getprop 1451 ............................ <pTextMem>
  [490] getobjprop 470 .......................... <pTextMem.alignment>
  [493] getprop 1448 ............................ <pFontData>
  [496] pushsymb 470 ............................ <#alignment>
  [499] pusharglist 2 ........................... <pFontData, #alignment>
  [501] objcall 54 .............................. <pFontData[#alignment]>
  [503] nteq .................................... <pTextMem.alignment <> pFontData[#alignment]>
  [504] jmpifz [523] ............................ if pTextMem.alignment <> pFontData[#alignment] then
  [507] getprop 1451 ............................ <pTextMem>
  [510] getprop 1448 ............................ <pFontData>
  [513] pushsymb 470 ............................ <#alignment>
  [516] pusharglist 2 ........................... <pFontData, #alignment>
  [518] objcall 54 .............................. <pFontData[#alignment]>
  [520] setobjprop 470 .......................... pTextMem.alignment = pFontData[#alignment]
  [523] getprop 1451 ............................ <pTextMem>
  [526] getobjprop 1225 ......................... <pTextMem.bgColor>
  [529] getprop 1448 ............................ <pFontData>
  [532] pushsymb 1225 ........................... <#bgColor>
  [535] pusharglist 2 ........................... <pFontData, #bgColor>
  [537] objcall 54 .............................. <pFontData[#bgColor]>
  [539] nteq .................................... <pTextMem.bgColor <> pFontData[#bgColor]>
  [540] jmpifz [559] ............................ if pTextMem.bgColor <> pFontData[#bgColor] then
  [543] getprop 1451 ............................ <pTextMem>
  [546] getprop 1448 ............................ <pFontData>
  [549] pushsymb 1225 ........................... <#bgColor>
  [552] pusharglist 2 ........................... <pFontData, #bgColor>
  [554] objcall 54 .............................. <pFontData[#bgColor]>
  [556] setobjprop 1225 ......................... pTextMem.bgColor = pFontData[#bgColor]
  [559] getprop 1451 ............................ <pTextMem>
  [562] getobjprop 594 .......................... <pTextMem.font>
  [565] getprop 1448 ............................ <pFontData>
  [568] pushsymb 594 ............................ <#font>
  [571] pusharglist 2 ........................... <pFontData, #font>
  [573] objcall 54 .............................. <pFontData[#font]>
  [575] nteq .................................... <pTextMem.font <> pFontData[#font]>
  [576] jmpifz [595] ............................ if pTextMem.font <> pFontData[#font] then
  [579] getprop 1451 ............................ <pTextMem>
  [582] getprop 1448 ............................ <pFontData>
  [585] pushsymb 594 ............................ <#font>
  [588] pusharglist 2 ........................... <pFontData, #font>
  [590] objcall 54 .............................. <pFontData[#font]>
  [592] setobjprop 594 .......................... pTextMem.font = pFontData[#font]
  [595] getprop 1451 ............................ <pTextMem>
  [598] getobjprop 596 .......................... <pTextMem.fontSize>
  [601] getprop 1448 ............................ <pFontData>
  [604] pushsymb 596 ............................ <#fontSize>
  [607] pusharglist 2 ........................... <pFontData, #fontSize>
  [609] objcall 54 .............................. <pFontData[#fontSize]>
  [611] nteq .................................... <pTextMem.fontSize <> pFontData[#fontSize]>
  [612] jmpifz [631] ............................ if pTextMem.fontSize <> pFontData[#fontSize] then
  [615] getprop 1451 ............................ <pTextMem>
  [618] getprop 1448 ............................ <pFontData>
  [621] pushsymb 596 ............................ <#fontSize>
  [624] pusharglist 2 ........................... <pFontData, #fontSize>
  [626] objcall 54 .............................. <pFontData[#fontSize]>
  [628] setobjprop 596 .......................... pTextMem.fontSize = pFontData[#fontSize]
  [631] getprop 1451 ............................ <pTextMem>
  [634] getobjprop 597 .......................... <pTextMem.color>
  [637] getprop 1448 ............................ <pFontData>
  [640] pushsymb 597 ............................ <#color>
  [643] pusharglist 2 ........................... <pFontData, #color>
  [645] objcall 54 .............................. <pFontData[#color]>
  [647] nteq .................................... <pTextMem.color <> pFontData[#color]>
  [648] jmpifz [667] ............................ if pTextMem.color <> pFontData[#color] then
  [651] getprop 1451 ............................ <pTextMem>
  [654] getprop 1448 ............................ <pFontData>
  [657] pushsymb 597 ............................ <#color>
  [660] pusharglist 2 ........................... <pFontData, #color>
  [662] objcall 54 .............................. <pFontData[#color]>
  [664] setobjprop 597 .......................... pTextMem.color = pFontData[#color]
  [667] getprop 1451 ............................ <pTextMem>
  [670] getobjprop 475 .......................... <pTextMem.fixedLineSpace>
  [673] getprop 1448 ............................ <pFontData>
  [676] pushsymb 475 ............................ <#fixedLineSpace>
  [679] pusharglist 2 ........................... <pFontData, #fixedLineSpace>
  [681] objcall 54 .............................. <pFontData[#fixedLineSpace]>
  [683] nteq .................................... <pTextMem.fixedLineSpace <> pFontData[#fixedLineSpace]>
  [684] jmpifz [703] ............................ if pTextMem.fixedLineSpace <> pFontData[#fixedLineSpace] then
  [687] getprop 1451 ............................ <pTextMem>
  [690] getprop 1448 ............................ <pFontData>
  [693] pushsymb 475 ............................ <#fixedLineSpace>
  [696] pusharglist 2 ........................... <pFontData, #fixedLineSpace>
  [698] objcall 54 .............................. <pFontData[#fixedLineSpace]>
  [700] setobjprop 475 .......................... pTextMem.fixedLineSpace = pFontData[#fixedLineSpace]
  [703] getparam 0 .............................. <me>
  [705] getobjprop 1411 ......................... <me.pScaleH>
  [708] pushsymb 506 ............................ <#center>
  [711] eq ...................................... <me.pScaleH = #center>
  [712] jmpifz [852] ............................ if me.pScaleH = #center then / else
  [715] getprop 1451 ............................ <pTextMem>
  [718] getprop 1451 ............................ <pTextMem>
  [721] pushsymb 291 ............................ <#char>
  [724] pusharglist 2 ........................... <pTextMem, #char>
  [726] objcall 22 .............................. <pTextMem.char.count>
  [728] pusharglist 2 ........................... <pTextMem, pTextMem.char.count>
  [730] objcall 600 ............................. <pTextMem.charPosToLoc(pTextMem.char.count)>
  [733] getobjprop 504 .......................... <pTextMem.charPosToLoc(pTextMem.char.count).locH>
  [736] pushint8 16 ............................. <16>
  [738] add ..................................... <pTextMem.charPosToLoc(pTextMem.char.count).locH + 16>
  [739] setlocal 4 .............................. tWidth = pTextMem.charPosToLoc(pTextMem.char.count).locH + 16
  [741] getparam 0 .............................. <me>
  [743] pushsymb 1415 ........................... <#pProps>
  [746] pushsymb 1385 ........................... <#style>
  [749] pusharglist 3 ........................... <me, #pProps, #style>
  [751] objcall 290 ............................. <me.pProps[#style]>
  [754] pushsymb 986 ............................ <#unique>
  [757] eq ...................................... <me.pProps[#style] = #unique>
  [758] jmpifz [800] ............................ if me.pProps[#style] = #unique then / else
  [761] getparam 0 .............................. <me>
  [763] getparam 0 .............................. <me>
  [765] getobjprop 465 .......................... <me.pLocX>
  [768] getparam 0 .............................. <me>
  [770] getobjprop 497 .......................... <me.pwidth>
  [773] getlocal 4 .............................. <tWidth>
  [775] sub ..................................... <me.pwidth - tWidth>
  [776] pushint8 2 .............................. <2>
  [778] div ..................................... <(me.pwidth - tWidth) / 2>
  [779] add ..................................... <me.pLocX + ((me.pwidth - tWidth) / 2)>
  [780] setobjprop 465 .......................... me.pLocX = me.pLocX + ((me.pwidth - tWidth) / 2)
  [783] getparam 0 .............................. <me>
  [785] getlocal 4 .............................. <tWidth>
  [787] setobjprop 497 .......................... me.pwidth = tWidth
  [790] getparam 0 .............................. <me>
  [792] getlocal 4 .............................. <tWidth>
  [794] setobjprop 1436 ......................... me.pOwnW = tWidth
  [797] jmp [829]
  [800] getparam 0 .............................. <me>
  [802] getparam 0 .............................. <me>
  [804] getobjprop 1440 ......................... <me.pOwnX>
  [807] getparam 0 .............................. <me>
  [809] getobjprop 1436 ......................... <me.pOwnW>
  [812] getlocal 4 .............................. <tWidth>
  [814] sub ..................................... <me.pOwnW - tWidth>
  [815] pushint8 2 .............................. <2>
  [817] div ..................................... <(me.pOwnW - tWidth) / 2>
  [818] add ..................................... <me.pOwnX + ((me.pOwnW - tWidth) / 2)>
  [819] setobjprop 1440 ......................... me.pOwnX = me.pOwnX + ((me.pOwnW - tWidth) / 2)
  [822] getparam 0 .............................. <me>
  [824] getlocal 4 .............................. <tWidth>
  [826] setobjprop 1436 ......................... me.pOwnW = tWidth
  [829] getprop 1451 ............................ <pTextMem>
  [832] pushzero ................................ <0>
  [833] pushzero ................................ <0>
  [834] getlocal 4 .............................. <tWidth>
  [836] getprop 1451 ............................ <pTextMem>
  [839] getobjprop 43 ........................... <pTextMem.height>
  [841] pusharglist 4 ........................... <0, 0, tWidth, pTextMem.height>
  [843] extcall 555 ............................. <rect(0, 0, tWidth, pTextMem.height)>
  [846] setobjprop 555 .......................... pTextMem.rect = rect(0, 0, tWidth, pTextMem.height)
  [849] jmp [911]
  [852] getparam 0 .............................. <me>
  [854] pushsymb 1415 ........................... <#pProps>
  [857] pushsymb 1385 ........................... <#style>
  [860] pusharglist 3 ........................... <me, #pProps, #style>
  [862] objcall 290 ............................. <me.pProps[#style]>
  [865] pushsymb 986 ............................ <#unique>
  [868] eq ...................................... <me.pProps[#style] = #unique>
  [869] jmpifz [898] ............................ if me.pProps[#style] = #unique then / else
  [872] getparam 0 .............................. <me>
  [874] getprop 1451 ............................ <pTextMem>
  [877] getchainedprop 500 ...................... <pTextMem.image>
  [880] getobjprop 42 ........................... <pTextMem.image.width>
  [882] setobjprop 497 .......................... me.pwidth = pTextMem.image.width
  [885] getparam 0 .............................. <me>
  [887] getparam 0 .............................. <me>
  [889] getobjprop 497 .......................... <me.pwidth>
  [892] setobjprop 1436 ......................... me.pOwnW = me.pwidth
  [895] jmp [911]
  [898] getparam 0 .............................. <me>
  [900] getprop 1451 ............................ <pTextMem>
  [903] getchainedprop 500 ...................... <pTextMem.image>
  [906] getobjprop 42 ........................... <pTextMem.image.width>
  [908] setobjprop 1436 ......................... me.pOwnW = pTextMem.image.width
  [911] getparam 0 .............................. <me>
  [913] pushsymb 1438 ........................... <#pScrolls>
  [916] pusharglist 2 ........................... <me, #pScrolls>
  [918] objcall 22 .............................. <me.pScrolls.count>
  [920] pushzero ................................ <0>
  [921] gt ...................................... <me.pScrolls.count > 0>
  [922] jmpifz [938] ............................ if me.pScrolls.count > 0 then / else
  [925] getprop 1451 ............................ <pTextMem>
  [928] getchainedprop 555 ...................... <pTextMem.rect>
  [931] getobjprop 43 ........................... <pTextMem.rect.height>
  [933] setlocal 5 .............................. tHeight = pTextMem.rect.height
  [935] jmp [945]
  [938] getparam 0 .............................. <me>
  [940] getobjprop 1437 ......................... <me.pOwnH>
  [943] setlocal 5 .............................. tHeight = me.pOwnH
  [945] getparam 0 .............................. <me>
  [947] getparam 0 .............................. <me>
  [949] getobjprop 1436 ......................... <me.pOwnW>
  [952] getlocal 5 .............................. <tHeight>
  [954] getparam 0 .............................. <me>
  [956] getobjprop 1416 ......................... <me.pDepth>
  [959] getparam 0 .............................. <me>
  [961] getobjprop 491 .......................... <me.pPalette>
  [964] pusharglist 4 ........................... <me.pOwnW, tHeight, me.pDepth, me.pPalette>
  [966] extcall 500 ............................. <image(me.pOwnW, tHeight, me.pDepth, me.pPalette)>
  [969] setobjprop 496 .......................... me.pimage = image(me.pOwnW, tHeight, me.pDepth, me.pPalette)
  [972] getparam 0 .............................. <me>
  [974] getobjprop 496 .......................... <me.pimage>
  [977] pusharglist 0 ........................... <>
  [979] extcall 32 .............................. <VOID>
  [981] eq ...................................... <me.pimage = VOID>
  [982] jmpifz [990] ............................ if me.pimage = VOID then
  [985] pushzero ................................ <0>
  [986] pusharglistnoret 1 ...................... <0>
  [988] extcall 25 .............................. return 0
  [990] getprop 1451 ............................ <pTextMem>
  [993] pusharglist 0 ........................... <>
  [995] extcall 32 .............................. <VOID>
  [997] eq ...................................... <pTextMem = VOID>
  [998] jmpifz [1006] ........................... if pTextMem = VOID then
  [1001] pushzero ............................... <0>
  [1002] pusharglistnoret 1 ..................... <0>
  [1004] extcall 25 ............................. return 0
  [1006] getprop 1449 ........................... <pNeedFill>
  [1009] jmpifz [1043] .......................... if pNeedFill then
  [1012] getparam 0 ............................. <me>
  [1014] getchainedprop 496 ..................... <me.pimage>
  [1017] getparam 0 ............................. <me>
  [1019] getchainedprop 496 ..................... <me.pimage>
  [1022] getobjprop 555 ......................... <me.pimage.rect>
  [1025] getparam 0 ............................. <me>
  [1027] pushsymb 1448 .......................... <#pFontData>
  [1030] pushsymb 1225 .......................... <#bgColor>
  [1033] pusharglist 3 .......................... <me, #pFontData, #bgColor>
  [1035] objcall 290 ............................ <me.pFontData[#bgColor]>
  [1038] pusharglistnoret 3 ..................... <me.pimage, me.pimage.rect, me.pFontData[#bgColor]>
  [1040] objcall 1442 ........................... me.pimage.fill(me.pimage.rect, me.pFontData[#bgColor])
  [1043] getparam 0 ............................. <me>
  [1045] getchainedprop 496 ..................... <me.pimage>
  [1048] getprop 1451 ........................... <pTextMem>
  [1051] getobjprop 500 ......................... <pTextMem.image>
  [1054] getparam 0 ............................. <me>
  [1056] getchainedprop 496 ..................... <me.pimage>
  [1059] getobjprop 555 ......................... <me.pimage.rect>
  [1062] getparam 0 ............................. <me>
  [1064] getchainedprop 496 ..................... <me.pimage>
  [1067] getobjprop 555 ......................... <me.pimage.rect>
  [1070] pushsymb 560 ........................... <#ink>
  [1073] pushint8 8 ............................. <8>
  [1075] pusharglist 2 .......................... <[#ink: 8]>
  [1077] pushproplist ........................... <[#ink: 8]>
  [1078] pusharglistnoret 5 ..................... <me.pimage, pTextMem.image, me.pimage.rect, me.pimage.rect, [#ink: 8]>
  [1080] objcall 556 ............................ me.pimage.copyPixels(pTextMem.image, me.pimage.rect, me.pimage.rect, [#ink: 8])
  [1083] pushint8 1 ............................. <1>
  [1085] pusharglistnoret 1 ..................... <1>
  [1087] extcall 25 ............................. return 1
  [1089] ret
end
