on constructTimeoutManager
  [  0] pushsymb 248 ............................ <#timeout_manager>
  [  2] pushcons 0 .............................. <"timeout.manager.class">
  [  4] pusharglist 1 ........................... <"timeout.manager.class">
  [  6] extcall 155 ............................. <getClassVariable("timeout.manager.class")>
  [  8] pusharglist 2 ........................... <#timeout_manager, getClassVariable("timeout.manager.class")>
  [ 10] extcall 99 .............................. <createManager(#timeout_manager, getClassVariable("timeout.manager.class"))>
  [ 12] pusharglistnoret 1 ...................... <createManager(#timeout_manager, getClassVariable("timeout.manager.class"))>
  [ 14] extcall 25 .............................. return createManager(#timeout_manager, getClassVariable("timeout.manager.class"))
  [ 16] ret
end

on deconstructTimeoutManager
  [  0] pushsymb 248 ............................ <#timeout_manager>
  [  2] pusharglist 1 ........................... <#timeout_manager>
  [  4] extcall 100 ............................. <removeManager(#timeout_manager)>
  [  6] pusharglistnoret 1 ...................... <removeManager(#timeout_manager)>
  [  8] extcall 25 .............................. return removeManager(#timeout_manager)
  [ 10] ret
end

on getTimeoutManager
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 93 .............................. <getObjectManager()>
  [  4] setlocal 0 .............................. tMgr = getObjectManager()
  [  6] getlocal 0 .............................. <tMgr>
  [  8] pushsymb 248 ............................ <#timeout_manager>
  [ 10] pusharglist 2 ........................... <tMgr, #timeout_manager>
  [ 12] objcall 102 ............................. <tMgr.managerExists(#timeout_manager)>
  [ 14] not ..................................... <not tMgr.managerExists(#timeout_manager)>
  [ 15] jmpifz [ 26] ............................ if not tMgr.managerExists(#timeout_manager) then
  [ 18] pusharglist 0 ........................... <>
  [ 20] localcall 0 ............................. <constructTimeoutManager()>
  [ 22] pusharglistnoret 1 ...................... <constructTimeoutManager()>
  [ 24] extcall 25 .............................. return constructTimeoutManager()
  [ 26] getlocal 0 .............................. <tMgr>
  [ 28] pushsymb 248 ............................ <#timeout_manager>
  [ 30] pusharglist 2 ........................... <tMgr, #timeout_manager>
  [ 32] objcall 101 ............................. <tMgr.getManager(#timeout_manager)>
  [ 34] pusharglistnoret 1 ...................... <tMgr.getManager(#timeout_manager)>
  [ 36] extcall 25 .............................. return tMgr.getManager(#timeout_manager)
  [ 38] ret
end

on createTimeout tid, tTime, tHandler, tClientID, tArguments, tIterations
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getTimeoutManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] getparam 1 .............................. <tTime>
  [  8] getparam 2 .............................. <tHandler>
  [ 10] getparam 3 .............................. <tClientID>
  [ 12] getparam 4 .............................. <tArguments>
  [ 14] getparam 5 .............................. <tIterations>
  [ 16] pusharglist 7 ........................... <getTimeoutManager(), tid, tTime, tHandler, tClientID, tArguments, tIterations>
  [ 18] objcall 81 .............................. <getTimeoutManager().create(tid, tTime, tHandler, tClientID, tArguments, tIterations)>
  [ 20] pusharglistnoret 1 ...................... <getTimeoutManager().create(tid, tTime, tHandler, tClientID, tArguments, tIterations)>
  [ 22] extcall 25 .............................. return getTimeoutManager().create(tid, tTime, tHandler, tClientID, tArguments, tIterations)
  [ 24] ret
end

on removeTimeout tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getTimeoutManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getTimeoutManager(), tid>
  [  8] objcall 125 ............................. <getTimeoutManager().Remove(tid)>
  [ 10] pusharglistnoret 1 ...................... <getTimeoutManager().Remove(tid)>
  [ 12] extcall 25 .............................. return getTimeoutManager().Remove(tid)
  [ 14] ret
end

on getTimeout tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getTimeoutManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getTimeoutManager(), tid>
  [  8] objcall 90 .............................. <getTimeoutManager().get(tid)>
  [ 10] pusharglistnoret 1 ...................... <getTimeoutManager().get(tid)>
  [ 12] extcall 25 .............................. return getTimeoutManager().get(tid)
  [ 14] ret
end

on timeoutExists tid
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getTimeoutManager()>
  [  4] getparam 0 .............................. <tid>
  [  6] pusharglist 2 ........................... <getTimeoutManager(), tid>
  [  8] objcall 88 .............................. <getTimeoutManager().exists(tid)>
  [ 10] pusharglistnoret 1 ...................... <getTimeoutManager().exists(tid)>
  [ 12] extcall 25 .............................. return getTimeoutManager().exists(tid)
  [ 14] ret
end

on printTimeouts
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 2 ............................. <getTimeoutManager()>
  [  4] pusharglist 1 ........................... <getTimeoutManager()>
  [  6] objcall 126 ............................. <getTimeoutManager().print()>
  [  8] pusharglistnoret 1 ...................... <getTimeoutManager().print()>
  [ 10] extcall 25 .............................. return getTimeoutManager().print()
  [ 12] ret
end
