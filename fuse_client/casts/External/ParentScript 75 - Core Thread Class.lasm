property pState, pLogoSpr

on construct me
  [  0] pushsymb 59 ............................. <#session>
  [  2] pushcons 0 .............................. <"variable.manager.class">
  [  4] pusharglist 1 ........................... <"variable.manager.class">
  [  6] extcall 155 ............................. <getClassVariable("variable.manager.class")>
  [  8] pusharglist 2 ........................... <#session, getClassVariable("variable.manager.class")>
  [ 10] extcall 94 .............................. <createObject(#session, getClassVariable("variable.manager.class"))>
  [ 12] setlocal 0 .............................. tSession = createObject(#session, getClassVariable("variable.manager.class"))
  [ 14] getlocal 0 .............................. <tSession>
  [ 16] pushcons 1 .............................. <"client_startdate">
  [ 18] pusharglist 0 ........................... <>
  [ 20] thebuiltin 1120 ......................... <the date>
  [ 23] pusharglistnoret 3 ...................... <tSession, "client_startdate", the date>
  [ 25] objcall 60 .............................. tSession.set("client_startdate", the date)
  [ 27] getlocal 0 .............................. <tSession>
  [ 29] pushcons 2 .............................. <"client_starttime">
  [ 31] pushint8 8 .............................. <8>
  [ 33] get 0 ................................... <the long time>
  [ 35] pusharglistnoret 3 ...................... <tSession, "client_starttime", the long time>
  [ 37] objcall 60 .............................. tSession.set("client_starttime", the long time)
  [ 39] getlocal 0 .............................. <tSession>
  [ 41] pushcons 3 .............................. <"client_version">
  [ 43] pushcons 4 .............................. <"system.version">
  [ 45] pusharglist 1 ........................... <"system.version">
  [ 47] extcall 372 ............................. <getVariable("system.version")>
  [ 50] pusharglistnoret 3 ...................... <tSession, "client_version", getVariable("system.version")>
  [ 52] objcall 60 .............................. tSession.set("client_version", getVariable("system.version"))
  [ 54] getlocal 0 .............................. <tSession>
  [ 56] pushcons 5 .............................. <"client_url">
  [ 58] pusharglist 0 ........................... <>
  [ 60] extcall 87 .............................. <getMoviePath()>
  [ 62] pusharglistnoret 3 ...................... <tSession, "client_url", getMoviePath()>
  [ 64] objcall 60 .............................. tSession.set("client_url", getMoviePath())
  [ 66] getlocal 0 .............................. <tSession>
  [ 68] pushcons 6 .............................. <"client_lastclick">
  [ 70] pushcons 7 .............................. <EMPTY>
  [ 72] pusharglistnoret 3 ...................... <tSession, "client_lastclick", EMPTY>
  [ 74] objcall 60 .............................. tSession.set("client_lastclick", EMPTY)
  [ 76] pushsymb 1747 ........................... <#headers>
  [ 79] pushcons 0 .............................. <"variable.manager.class">
  [ 81] pusharglist 1 ........................... <"variable.manager.class">
  [ 83] extcall 155 ............................. <getClassVariable("variable.manager.class")>
  [ 85] pusharglistnoret 2 ...................... <#headers, getClassVariable("variable.manager.class")>
  [ 87] extcall 94 .............................. createObject(#headers, getClassVariable("variable.manager.class"))
  [ 89] pushsymb 730 ............................ <#classes>
  [ 92] pushcons 0 .............................. <"variable.manager.class">
  [ 94] pusharglist 1 ........................... <"variable.manager.class">
  [ 96] extcall 155 ............................. <getClassVariable("variable.manager.class")>
  [ 98] pusharglistnoret 2 ...................... <#classes, getClassVariable("variable.manager.class")>
  [100] extcall 94 .............................. createObject(#classes, getClassVariable("variable.manager.class"))
  [102] pushsymb 1748 ........................... <#cache>
  [105] pushcons 0 .............................. <"variable.manager.class">
  [107] pusharglist 1 ........................... <"variable.manager.class">
  [109] extcall 155 ............................. <getClassVariable("variable.manager.class")>
  [111] pusharglistnoret 2 ...................... <#cache, getClassVariable("variable.manager.class")>
  [113] extcall 94 .............................. createObject(#cache, getClassVariable("variable.manager.class"))
  [115] pushsymb 1749 ........................... <#Initialize>
  [118] pusharglistnoret 1 ...................... <#Initialize>
  [120] extcall 350 ............................. createBroker(#Initialize)
  [123] getparam 0 .............................. <me>
  [125] pushcons 8 .............................. <"load_variables">
  [127] pusharglist 2 ........................... <me, "load_variables">
  [129] objcall 1746 ............................ <me.updateState("load_variables")>
  [132] pusharglistnoret 1 ...................... <me.updateState("load_variables")>
  [134] extcall 25 .............................. return me.updateState("load_variables")
  [136] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 1745 ............................ <me.hideLogo()>
  [  7] pusharglistnoret 1 ...................... <me.hideLogo()>
  [  9] extcall 25 .............................. return me.hideLogo()
  [ 11] ret
end

on showLogo me
  [  0] pushcons 9 .............................. <"Logo">
  [  2] pusharglist 1 ........................... <"Logo">
  [  4] extcall 170 ............................. <memberExists("Logo")>
  [  6] jmpifz [111] ............................ if memberExists("Logo") then
  [  9] pushcons 9 .............................. <"Logo">
  [ 11] pusharglist 1 ........................... <"Logo">
  [ 13] extcall 52 .............................. <getmemnum("Logo")>
  [ 15] pusharglist 1 ........................... <getmemnum("Logo")>
  [ 17] extcall 41 .............................. <member(getmemnum("Logo"))>
  [ 19] setlocal 0 .............................. tmember = member(getmemnum("Logo"))
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 1 ........................... <me>
  [ 25] objcall 3 ............................... <me.getID()>
  [ 27] pusharglist 1 ........................... <me.getID()>
  [ 29] extcall 232 ............................. <reserveSprite(me.getID())>
  [ 31] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [ 33] extcall 36 .............................. <sprite(reserveSprite(me.getID()))>
  [ 35] setprop 1751 ............................ pLogoSpr = sprite(reserveSprite(me.getID()))
  [ 38] getprop 1751 ............................ <pLogoSpr>
  [ 41] pushint8 36 ............................. <36>
  [ 43] setobjprop 562 .......................... pLogoSpr.ink = 36
  [ 46] getprop 1751 ............................ <pLogoSpr>
  [ 49] pushint8 60 ............................. <60>
  [ 51] setobjprop 503 .......................... pLogoSpr.blend = 60
  [ 54] getprop 1751 ............................ <pLogoSpr>
  [ 57] getlocal 0 .............................. <tmember>
  [ 59] setobjprop 41 ........................... pLogoSpr.member = tmember
  [ 61] getprop 1751 ............................ <pLogoSpr>
  [ 64] pushint32 20000001 ...................... <20000001>
  [ 69] inv ..................................... <-20000001>
  [ 70] setobjprop 883 .......................... pLogoSpr.locZ = -20000001
  [ 73] getprop 1751 ............................ <pLogoSpr>
  [ 76] getmovieprop 970 ........................ <the stage>
  [ 79] getchainedprop 971 ...................... <(the stage).sourceRect>
  [ 82] getobjprop 42 ........................... <(the stage).sourceRect.width>
  [ 84] pushint8 2 .............................. <2>
  [ 86] div ..................................... <(the stage).sourceRect.width / 2>
  [ 87] getmovieprop 970 ........................ <the stage>
  [ 90] getchainedprop 971 ...................... <(the stage).sourceRect>
  [ 93] getobjprop 43 ........................... <(the stage).sourceRect.height>
  [ 95] pushint8 2 .............................. <2>
  [ 97] div ..................................... <(the stage).sourceRect.height / 2>
  [ 98] getlocal 0 .............................. <tmember>
  [100] getobjprop 43 ........................... <tmember.height>
  [102] sub ..................................... <((the stage).sourceRect.height / 2) - tmember.height>
  [103] pusharglist 2 ........................... <(the stage).sourceRect.width / 2, ((the stage).sourceRect.height / 2) - tmember.height>
  [105] extcall 510 ............................. <point((the stage).sourceRect.width / 2, ((the stage).sourceRect.height / 2) - tmember.height)>
  [108] setobjprop 511 .......................... pLogoSpr.loc = point((the stage).sourceRect.width / 2, ((the stage).sourceRect.height / 2) - tmember.height)
  [111] pushint8 1 .............................. <1>
  [113] pusharglistnoret 1 ...................... <1>
  [115] extcall 25 .............................. return 1
  [117] ret
end

on hideLogo me
  [  0] getprop 1751 ............................ <pLogoSpr>
  [  3] getobjprop 490 .......................... <pLogoSpr.ilk>
  [  6] pushsymb 36 ............................. <#sprite>
  [  8] eq ...................................... <pLogoSpr.ilk = #sprite>
  [  9] jmpifz [ 28] ............................ if pLogoSpr.ilk = #sprite then
  [ 12] getprop 1751 ............................ <pLogoSpr>
  [ 15] getobjprop 37 ........................... <pLogoSpr.spriteNum>
  [ 17] pusharglistnoret 1 ...................... <pLogoSpr.spriteNum>
  [ 19] extcall 233 ............................. releaseSprite(pLogoSpr.spriteNum)
  [ 21] pusharglist 0 ........................... <>
  [ 23] extcall 32 .............................. <VOID>
  [ 25] setprop 1751 ............................ pLogoSpr = VOID
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 25 .............................. return 1
  [ 34] ret
end

on updateState me, tstate
  [  0] getparam 1 .............................. <tstate>
  [  2] peek 0 .................................. case tstate of
  [  4] pushcons 8 .............................. <"load_variables">
  [  6] eq
  [  7] jmpifz [322] ............................ (case) "load_variables":
  [ 10] getparam 1 .............................. <tstate>
  [ 12] setprop 461 ............................. pState = tstate
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglistnoret 1 ...................... <me>
  [ 19] objcall 1744 ............................ me.showLogo()
  [ 22] pushint8 4 .............................. <4>
  [ 24] pusharglistnoret 1 ...................... <4>
  [ 26] extcall 45 .............................. cursor(4)
  [ 28] getmovieprop 82 ......................... <the runMode>
  [ 30] pushcons 10 ............................. <"Plugin">
  [ 32] containsstr ............................. <the runMode contains "Plugin">
  [ 33] jmpifz [209] ............................ if the runMode contains "Plugin" then
  [ 36] getmovieprop 286 ........................ <the itemDelimiter>
  [ 39] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 41] pushint8 1 .............................. <1>
  [ 43] setlocal 1
  [ 45] getlocal 1
  [ 47] pushint8 9 .............................. <9>
  [ 49] lteq
  [ 50] jmpifz [204] ............................ repeat with i = 1 to 9
  [ 53] pushcons 11 ............................. <"sw">
  [ 55] getlocal 1 .............................. <i>
  [ 57] joinstr ................................. <"sw" & i>
  [ 58] pusharglist 1 ........................... <"sw" & i>
  [ 60] extcall 1752 ............................ <externalParamValue("sw" & i)>
  [ 63] setlocal 2 .............................. tParamBundle = externalParamValue("sw" & i)
  [ 65] getlocal 2 .............................. <tParamBundle>
  [ 67] pusharglist 1 ........................... <tParamBundle>
  [ 69] extcall 20 .............................. <voidp(tParamBundle)>
  [ 71] not ..................................... <not voidp(tParamBundle)>
  [ 72] jmpifz [195] ............................ if not voidp(tParamBundle) then
  [ 75] pushcons 12 ............................. <";">
  [ 77] setmovieprop 286 ........................ the itemDelimiter = ";"
  [ 80] pushint8 1 .............................. <1>
  [ 82] setlocal 3
  [ 84] getlocal 3
  [ 86] getlocal 2 .............................. <tParamBundle>
  [ 88] pushsymb 287 ............................ <#item>
  [ 91] pusharglist 2 ........................... <tParamBundle, #item>
  [ 93] objcall 22 .............................. <tParamBundle.item.count>
  [ 95] lteq
  [ 96] jmpifz [195] ............................ repeat with j = 1 to tParamBundle.item.count
  [ 99] getlocal 2 .............................. <tParamBundle>
  [101] pushsymb 287 ............................ <#item>
  [104] getlocal 3 .............................. <j>
  [106] pusharglist 3 ........................... <tParamBundle, #item, j>
  [108] objcall 290 ............................. <tParamBundle.item[j]>
  [111] setlocal 4 .............................. tParam = tParamBundle.item[j]
  [113] pushcons 13 ............................. <"=">
  [115] setmovieprop 286 ........................ the itemDelimiter = "="
  [118] getlocal 4 .............................. <tParam>
  [120] pushsymb 287 ............................ <#item>
  [123] pusharglist 2 ........................... <tParam, #item>
  [125] objcall 22 .............................. <tParam.item.count>
  [127] pushint8 1 .............................. <1>
  [129] gt ...................................... <tParam.item.count > 1>
  [130] jmpifz [181] ............................ if tParam.item.count > 1 then
  [133] getlocal 4 .............................. <tParam>
  [135] pushsymb 287 ............................ <#item>
  [138] pushint8 1 .............................. <1>
  [140] pusharglist 3 ........................... <tParam, #item, 1>
  [142] objcall 290 ............................. <tParam.item[1]>
  [145] pushcons 14 ............................. <"external.variables.txt">
  [147] eq ...................................... <tParam.item[1] = "external.variables.txt">
  [148] jmpifz [181] ............................ if tParam.item[1] = "external.variables.txt" then
  [151] pusharglist 0 ........................... <>
  [153] extcall 63 .............................. <getSpecialServices()>
  [155] getlocal 4 .............................. <tParam>
  [157] pushsymb 287 ............................ <#item>
  [160] pushint8 2 .............................. <2>
  [162] getlocal 4 .............................. <tParam>
  [164] pushsymb 287 ............................ <#item>
  [167] pusharglist 2 ........................... <tParam, #item>
  [169] objcall 22 .............................. <tParam.item.count>
  [171] pusharglist 4 ........................... <tParam, #item, 2, tParam.item.count>
  [173] objcall 290 ............................. <tParam.item[2..tParam.item.count]>
  [176] pusharglistnoret 2 ...................... <getSpecialServices(), tParam.item[2..tParam.item.count]>
  [178] objcall 1075 ............................ getSpecialServices().setExtVarPath(tParam.item[2..tParam.item.count])
  [181] pushcons 12 ............................. <";">
  [183] setmovieprop 286 ........................ the itemDelimiter = ";"
  [186] pushint8 1
  [188] getlocal 3
  [190] add
  [191] setlocal 3
  [193] endrepeat [ 84]
  [195] pushint8 1
  [197] getlocal 1
  [199] add
  [200] setlocal 1
  [202] endrepeat [ 45]
  [204] getlocal 0 .............................. <tDelim>
  [206] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [209] pusharglist 0 ........................... <>
  [211] extcall 411 ............................. <getExtVarPath()>
  [214] setlocal 5 .............................. tURL = getExtVarPath()
  [216] getlocal 5 .............................. <tURL>
  [218] setlocal 6 .............................. tMemName = tURL
  [220] getlocal 5 .............................. <tURL>
  [222] pushcons 15 ............................. <"?">
  [224] containsstr ............................. <tURL contains "?">
  [225] jmpifz [235] ............................ if tURL contains "?" then / else
  [228] pushcons 16 ............................. <"&">
  [230] setlocal 7 .............................. tParamDelim = "&"
  [232] jmp [239]
  [235] pushcons 15 ............................. <"?">
  [237] setlocal 7 .............................. tParamDelim = "?"
  [239] getmovieprop 1101 ....................... <the moviePath>
  [242] pushcons 17 ............................. <"http://">
  [244] containsstr ............................. <the moviePath contains "http://">
  [245] jmpifz [262] ............................ if the moviePath contains "http://" then / else
  [248] getlocal 5 .............................. <tURL>
  [250] getlocal 7 .............................. <tParamDelim>
  [252] joinstr ................................. <tURL & tParamDelim>
  [253] getmovieprop 673 ........................ <the milliSeconds>
  [256] joinstr ................................. <tURL & tParamDelim & the milliSeconds>
  [257] setlocal 5 .............................. tURL = tURL & tParamDelim & the milliSeconds
  [259] jmp [281]
  [262] getlocal 5 .............................. <tURL>
  [264] pushcons 17 ............................. <"http://">
  [266] containsstr ............................. <tURL contains "http://">
  [267] jmpifz [281] ............................ if tURL contains "http://" then
  [270] getlocal 5 .............................. <tURL>
  [272] getlocal 7 .............................. <tParamDelim>
  [274] joinstr ................................. <tURL & tParamDelim>
  [275] getmovieprop 673 ........................ <the milliSeconds>
  [278] joinstr ................................. <tURL & tParamDelim & the milliSeconds>
  [279] setlocal 5 .............................. tURL = tURL & tParamDelim & the milliSeconds
  [281] getlocal 5 .............................. <tURL>
  [283] getlocal 6 .............................. <tMemName>
  [285] pushsymb 786 ............................ <#field>
  [288] pushint8 1 .............................. <1>
  [290] pusharglist 4 ........................... <tURL, tMemName, #field, 1>
  [292] extcall 200 ............................. <queueDownload(tURL, tMemName, #field, 1)>
  [294] setlocal 8 .............................. tMemNum = queueDownload(tURL, tMemName, #field, 1)
  [296] pop 1
  [298] getlocal 8 .............................. <tMemNum>
  [300] pushsymb 1746 ........................... <#updateState>
  [303] getparam 0 .............................. <me>
  [305] pusharglist 1 ........................... <me>
  [307] objcall 3 ............................... <me.getID()>
  [309] pushcons 18 ............................. <"load_params">
  [311] pusharglist 4 ........................... <tMemNum, #updateState, me.getID(), "load_params">
  [313] extcall 202 ............................. <registerDownloadCallback(tMemNum, #updateState, me.getID(), "load_params")>
  [315] pusharglistnoret 1 ...................... <registerDownloadCallback(tMemNum, #updateState, me.getID(), "load_params")>
  [317] extcall 25 .............................. return registerDownloadCallback(tMemNum, #updateState, me.getID(), "load_params")
  [319] jmp [1286]
  [322] peek 0
  [324] pushcons 18 ............................. <"load_params">
  [326] eq
  [327] jmpifz [609] ............................ (case) "load_params":
  [330] getparam 1 .............................. <tstate>
  [332] setprop 461 ............................. pState = tstate
  [335] pusharglist 0 ........................... <>
  [337] extcall 411 ............................. <getExtVarPath()>
  [340] pusharglistnoret 1 ...................... <getExtVarPath()>
  [342] extcall 74 .............................. dumpVariableField(getExtVarPath())
  [344] pusharglist 0 ........................... <>
  [346] extcall 411 ............................. <getExtVarPath()>
  [349] pusharglistnoret 1 ...................... <getExtVarPath()>
  [351] extcall 165 ............................. removeMember(getExtVarPath())
  [353] getmovieprop 82 ......................... <the runMode>
  [355] pushcons 10 ............................. <"Plugin">
  [357] containsstr ............................. <the runMode contains "Plugin">
  [358] jmpifz [528] ............................ if the runMode contains "Plugin" then
  [361] getmovieprop 286 ........................ <the itemDelimiter>
  [364] setlocal 0 .............................. tDelim = the itemDelimiter
  [366] pushint8 1 .............................. <1>
  [368] setlocal 1
  [370] getlocal 1
  [372] pushint8 9 .............................. <9>
  [374] lteq
  [375] jmpifz [523] ............................ repeat with i = 1 to 9
  [378] pushcons 11 ............................. <"sw">
  [380] getlocal 1 .............................. <i>
  [382] joinstr ................................. <"sw" & i>
  [383] pusharglist 1 ........................... <"sw" & i>
  [385] extcall 1752 ............................ <externalParamValue("sw" & i)>
  [388] setlocal 2 .............................. tParamBundle = externalParamValue("sw" & i)
  [390] getlocal 2 .............................. <tParamBundle>
  [392] pusharglist 1 ........................... <tParamBundle>
  [394] extcall 20 .............................. <voidp(tParamBundle)>
  [396] not ..................................... <not voidp(tParamBundle)>
  [397] jmpifz [514] ............................ if not voidp(tParamBundle) then
  [400] pushcons 12 ............................. <";">
  [402] setmovieprop 286 ........................ the itemDelimiter = ";"
  [405] pushint8 1 .............................. <1>
  [407] setlocal 3
  [409] getlocal 3
  [411] getlocal 2 .............................. <tParamBundle>
  [413] pushsymb 287 ............................ <#item>
  [416] pusharglist 2 ........................... <tParamBundle, #item>
  [418] objcall 22 .............................. <tParamBundle.item.count>
  [420] lteq
  [421] jmpifz [514] ............................ repeat with j = 1 to tParamBundle.item.count
  [424] getlocal 2 .............................. <tParamBundle>
  [426] pushsymb 287 ............................ <#item>
  [429] getlocal 3 .............................. <j>
  [431] pusharglist 3 ........................... <tParamBundle, #item, j>
  [433] objcall 290 ............................. <tParamBundle.item[j]>
  [436] setlocal 4 .............................. tParam = tParamBundle.item[j]
  [438] pushcons 13 ............................. <"=">
  [440] setmovieprop 286 ........................ the itemDelimiter = "="
  [443] getlocal 4 .............................. <tParam>
  [445] pushsymb 287 ............................ <#item>
  [448] pusharglist 2 ........................... <tParam, #item>
  [450] objcall 22 .............................. <tParam.item.count>
  [452] pushint8 1 .............................. <1>
  [454] gt ...................................... <tParam.item.count > 1>
  [455] jmpifz [500] ............................ if tParam.item.count > 1 then
  [458] pusharglist 0 ........................... <>
  [460] extcall 368 ............................. <getVariableManager()>
  [463] getlocal 4 .............................. <tParam>
  [465] pushsymb 287 ............................ <#item>
  [468] pushint8 1 .............................. <1>
  [470] pusharglist 3 ........................... <tParam, #item, 1>
  [472] objcall 290 ............................. <tParam.item[1]>
  [475] getlocal 4 .............................. <tParam>
  [477] pushsymb 287 ............................ <#item>
  [480] pushint8 2 .............................. <2>
  [482] getlocal 4 .............................. <tParam>
  [484] pushsymb 287 ............................ <#item>
  [487] pusharglist 2 ........................... <tParam, #item>
  [489] objcall 22 .............................. <tParam.item.count>
  [491] pusharglist 4 ........................... <tParam, #item, 2, tParam.item.count>
  [493] objcall 290 ............................. <tParam.item[2..tParam.item.count]>
  [496] pusharglistnoret 3 ...................... <getVariableManager(), tParam.item[1], tParam.item[2..tParam.item.count]>
  [498] objcall 60 .............................. getVariableManager().set(tParam.item[1], tParam.item[2..tParam.item.count])
  [500] pushcons 12 ............................. <";">
  [502] setmovieprop 286 ........................ the itemDelimiter = ";"
  [505] pushint8 1
  [507] getlocal 3
  [509] add
  [510] setlocal 3
  [512] endrepeat [409]
  [514] pushint8 1
  [516] getlocal 1
  [518] add
  [519] setlocal 1
  [521] endrepeat [370]
  [523] getlocal 0 .............................. <tDelim>
  [525] setmovieprop 286 ........................ the itemDelimiter = tDelim
  [528] pushzero ................................ <0>
  [529] pusharglistnoret 1 ...................... <0>
  [531] extcall 135 ............................. setDebugLevel(0)
  [533] pusharglist 0 ........................... <>
  [535] extcall 270 ............................. <getStringServices()>
  [538] pusharglistnoret 1 ...................... <getStringServices()>
  [540] objcall 905 ............................. getStringServices().initConvList()
  [543] pushcons 19 ............................. <"system.tempo">
  [545] pushint8 30 ............................. <30>
  [547] pusharglist 2 ........................... <"system.tempo", 30>
  [549] extcall 373 ............................. <getIntVariable("system.tempo", 30)>
  [552] pusharglistnoret 1 ...................... <getIntVariable("system.tempo", 30)>
  [554] extcall 1753 ............................ puppetTempo(getIntVariable("system.tempo", 30))
  [557] pushcons 20 ............................. <"client.reload.url">
  [559] pusharglist 1 ........................... <"client.reload.url">
  [561] extcall 376 ............................. <variableExists("client.reload.url")>
  [564] jmpifz [591] ............................ if variableExists("client.reload.url") then
  [567] pushsymb 59 ............................. <#session>
  [569] pusharglist 1 ........................... <#session>
  [571] extcall 58 .............................. <getObject(#session)>
  [573] pushcons 5 .............................. <"client_url">
  [575] pushcons 20 ............................. <"client.reload.url">
  [577] pusharglist 1 ........................... <"client.reload.url">
  [579] extcall 372 ............................. <getVariable("client.reload.url")>
  [582] pusharglist 1 ........................... <getVariable("client.reload.url")>
  [584] extcall 281 ............................. <obfuscate(getVariable("client.reload.url"))>
  [587] pusharglistnoret 3 ...................... <getObject(#session), "client_url", obfuscate(getVariable("client.reload.url"))>
  [589] objcall 60 .............................. getObject(#session).set("client_url", obfuscate(getVariable("client.reload.url")))
  [591] pop 1
  [593] getparam 0 .............................. <me>
  [595] pushcons 21 ............................. <"load_texts">
  [597] pusharglist 2 ........................... <me, "load_texts">
  [599] objcall 1746 ............................ <me.updateState("load_texts")>
  [602] pusharglistnoret 1 ...................... <me.updateState("load_texts")>
  [604] extcall 25 .............................. return me.updateState("load_texts")
  [606] jmp [1286]
  [609] peek 0
  [611] pushcons 21 ............................. <"load_texts">
  [613] eq
  [614] jmpifz [758] ............................ (case) "load_texts":
  [617] getparam 1 .............................. <tstate>
  [619] setprop 461 ............................. pState = tstate
  [622] pushcons 22 ............................. <"external.texts.txt">
  [624] pusharglist 1 ........................... <"external.texts.txt">
  [626] extcall 372 ............................. <getVariable("external.texts.txt")>
  [629] setlocal 5 .............................. tURL = getVariable("external.texts.txt")
  [631] getlocal 5 .............................. <tURL>
  [633] setlocal 6 .............................. tMemName = tURL
  [635] getlocal 6 .............................. <tMemName>
  [637] pushcons 7 .............................. <EMPTY>
  [639] eq ...................................... <tMemName = EMPTY>
  [640] jmpifz [658] ............................ if tMemName = EMPTY then
  [643] pop 1
  [645] getparam 0 .............................. <me>
  [647] pushcons 23 ............................. <"load_casts">
  [649] pusharglist 2 ........................... <me, "load_casts">
  [651] objcall 1746 ............................ <me.updateState("load_casts")>
  [654] pusharglistnoret 1 ...................... <me.updateState("load_casts")>
  [656] extcall 25 .............................. return me.updateState("load_casts")
  [658] getlocal 5 .............................. <tURL>
  [660] pushcons 15 ............................. <"?">
  [662] containsstr ............................. <tURL contains "?">
  [663] jmpifz [673] ............................ if tURL contains "?" then / else
  [666] pushcons 16 ............................. <"&">
  [668] setlocal 7 .............................. tParamDelim = "&"
  [670] jmp [677]
  [673] pushcons 15 ............................. <"?">
  [675] setlocal 7 .............................. tParamDelim = "?"
  [677] getmovieprop 1101 ....................... <the moviePath>
  [680] pushcons 17 ............................. <"http://">
  [682] containsstr ............................. <the moviePath contains "http://">
  [683] jmpifz [700] ............................ if the moviePath contains "http://" then / else
  [686] getlocal 5 .............................. <tURL>
  [688] getlocal 7 .............................. <tParamDelim>
  [690] joinstr ................................. <tURL & tParamDelim>
  [691] getmovieprop 673 ........................ <the milliSeconds>
  [694] joinstr ................................. <tURL & tParamDelim & the milliSeconds>
  [695] setlocal 5 .............................. tURL = tURL & tParamDelim & the milliSeconds
  [697] jmp [719]
  [700] getlocal 5 .............................. <tURL>
  [702] pushcons 17 ............................. <"http://">
  [704] containsstr ............................. <tURL contains "http://">
  [705] jmpifz [719] ............................ if tURL contains "http://" then
  [708] getlocal 5 .............................. <tURL>
  [710] getlocal 7 .............................. <tParamDelim>
  [712] joinstr ................................. <tURL & tParamDelim>
  [713] getmovieprop 673 ........................ <the milliSeconds>
  [716] joinstr ................................. <tURL & tParamDelim & the milliSeconds>
  [717] setlocal 5 .............................. tURL = tURL & tParamDelim & the milliSeconds
  [719] getlocal 5 .............................. <tURL>
  [721] getlocal 6 .............................. <tMemName>
  [723] pushsymb 786 ............................ <#field>
  [726] pusharglist 3 ........................... <tURL, tMemName, #field>
  [728] extcall 200 ............................. <queueDownload(tURL, tMemName, #field)>
  [730] setlocal 8 .............................. tMemNum = queueDownload(tURL, tMemName, #field)
  [732] pop 1
  [734] getlocal 8 .............................. <tMemNum>
  [736] pushsymb 1746 ........................... <#updateState>
  [739] getparam 0 .............................. <me>
  [741] pusharglist 1 ........................... <me>
  [743] objcall 3 ............................... <me.getID()>
  [745] pushcons 23 ............................. <"load_casts">
  [747] pusharglist 4 ........................... <tMemNum, #updateState, me.getID(), "load_casts">
  [749] extcall 202 ............................. <registerDownloadCallback(tMemNum, #updateState, me.getID(), "load_casts")>
  [751] pusharglistnoret 1 ...................... <registerDownloadCallback(tMemNum, #updateState, me.getID(), "load_casts")>
  [753] extcall 25 .............................. return registerDownloadCallback(tMemNum, #updateState, me.getID(), "load_casts")
  [755] jmp [1286]
  [758] peek 0
  [760] pushcons 23 ............................. <"load_casts">
  [762] eq
  [763] jmpifz [959] ............................ (case) "load_casts":
  [766] getparam 1 .............................. <tstate>
  [768] setprop 461 ............................. pState = tstate
  [771] pushcons 22 ............................. <"external.texts.txt">
  [773] pusharglist 1 ........................... <"external.texts.txt">
  [775] extcall 372 ............................. <getVariable("external.texts.txt")>
  [778] setlocal 9 .............................. tTxtFile = getVariable("external.texts.txt")
  [780] getlocal 9 .............................. <tTxtFile>
  [782] pushzero ................................ <0>
  [783] nteq .................................... <tTxtFile <> 0>
  [784] jmpifz [808] ............................ if tTxtFile <> 0 then
  [787] getlocal 9 .............................. <tTxtFile>
  [789] pusharglist 1 ........................... <tTxtFile>
  [791] extcall 170 ............................. <memberExists(tTxtFile)>
  [793] jmpifz [808] ............................ if memberExists(tTxtFile) then
  [796] getlocal 9 .............................. <tTxtFile>
  [798] pusharglistnoret 1 ...................... <tTxtFile>
  [800] extcall 78 .............................. dumpTextField(tTxtFile)
  [802] getlocal 9 .............................. <tTxtFile>
  [804] pusharglistnoret 1 ...................... <tTxtFile>
  [806] extcall 165 ............................. removeMember(tTxtFile)
  [808] pusharglist 0 ........................... <[]>
  [810] pushlist ................................ <[]>
  [811] setlocal 10 ............................. tCastList = []
  [813] pushint8 1 .............................. <1>
  [815] setlocal 1 .............................. i = 1
  [817] pushint8 1 .............................. <1>
  [819] jmpifz [868] ............................ repeat while 1
  [822] pushcons 24 ............................. <"cast.entry.">
  [824] getlocal 1 .............................. <i>
  [826] joinstr ................................. <"cast.entry." & i>
  [827] pusharglist 1 ........................... <"cast.entry." & i>
  [829] extcall 376 ............................. <variableExists("cast.entry." & i)>
  [832] not ..................................... <not variableExists("cast.entry." & i)>
  [833] jmpifz [839] ............................ if not variableExists("cast.entry." & i) then
  [836] jmp [868] ............................... exit repeat
  [839] pushcons 24 ............................. <"cast.entry.">
  [841] getlocal 1 .............................. <i>
  [843] joinstr ................................. <"cast.entry." & i>
  [844] pusharglist 1 ........................... <"cast.entry." & i>
  [846] extcall 372 ............................. <getVariable("cast.entry." & i)>
  [849] setlocal 11 ............................. tFileName = getVariable("cast.entry." & i)
  [851] getlocal 10 ............................. <tCastList>
  [853] getlocal 11 ............................. <tFileName>
  [855] pusharglistnoret 2 ...................... <tCastList, tFileName>
  [857] objcall 122 ............................. tCastList.add(tFileName)
  [859] getlocal 1 .............................. <i>
  [861] pushint8 1 .............................. <1>
  [863] add ..................................... <i + 1>
  [864] setlocal 1 .............................. i = i + 1
  [866] endrepeat [817]
  [868] getlocal 10 ............................. <tCastList>
  [870] pusharglist 1 ........................... <tCastList>
  [872] extcall 22 .............................. <count(tCastList)>
  [874] pushzero ................................ <0>
  [875] gt ...................................... <count(tCastList) > 0>
  [876] jmpifz [941] ............................ if count(tCastList) > 0 then / else
  [879] getlocal 10 ............................. <tCastList>
  [881] pushint8 1 .............................. <1>
  [883] pusharglist 2 ........................... <tCastList, 1>
  [885] extcall 180 ............................. <startCastLoad(tCastList, 1)>
  [887] setlocal 12 ............................. tLoadID = startCastLoad(tCastList, 1)
  [889] pushcons 25 ............................. <"loading.bar.active">
  [891] pusharglist 1 ........................... <"loading.bar.active">
  [893] extcall 372 ............................. <getVariable("loading.bar.active")>
  [896] jmpifz [915] ............................ if getVariable("loading.bar.active") then
  [899] getlocal 12 ............................. <tLoadID>
  [901] pushsymb 464 ............................ <#buffer>
  [904] pushsymb 1659 ........................... <#window>
  [907] pusharglist 2 ........................... <[#buffer: #window]>
  [909] pushproplist ............................ <[#buffer: #window]>
  [910] pusharglistnoret 2 ...................... <tLoadID, [#buffer: #window]>
  [912] extcall 408 ............................. showLoadingBar(tLoadID, [#buffer: #window])
  [915] pop 1
  [917] getlocal 12 ............................. <tLoadID>
  [919] pushsymb 1746 ........................... <#updateState>
  [922] getparam 0 .............................. <me>
  [924] pusharglist 1 ........................... <me>
  [926] objcall 3 ............................... <me.getID()>
  [928] pushcons 26 ............................. <"validate_resources">
  [930] pusharglist 4 ........................... <tLoadID, #updateState, me.getID(), "validate_resources">
  [932] extcall 181 ............................. <registerCastloadCallback(tLoadID, #updateState, me.getID(), "validate_resources")>
  [934] pusharglistnoret 1 ...................... <registerCastloadCallback(tLoadID, #updateState, me.getID(), "validate_resources")>
  [936] extcall 25 .............................. return registerCastloadCallback(tLoadID, #updateState, me.getID(), "validate_resources")
  [938] jmp [956]
  [941] pop 1
  [943] getparam 0 .............................. <me>
  [945] pushcons 27 ............................. <"init_threads">
  [947] pusharglist 2 ........................... <me, "init_threads">
  [949] objcall 1746 ............................ <me.updateState("init_threads")>
  [952] pusharglistnoret 1 ...................... <me.updateState("init_threads")>
  [954] extcall 25 .............................. return me.updateState("init_threads")
  [956] jmp [1286]
  [959] peek 0
  [961] pushcons 26 ............................. <"validate_resources">
  [963] eq
  [964] jmpifz [1201] ........................... (case) "validate_resources":
  [967] getparam 1 .............................. <tstate>
  [969] setprop 461 ............................. pState = tstate
  [972] pusharglist 0 ........................... <[]>
  [974] pushlist ................................ <[]>
  [975] setlocal 10 ............................. tCastList = []
  [977] pusharglist 0 ........................... <[]>
  [979] pushlist ................................ <[]>
  [980] setlocal 13 ............................. tNewList = []
  [982] pusharglist 0 ........................... <>
  [984] extcall 368 ............................. <getVariableManager()>
  [987] setlocal 14 ............................. tVarMngr = getVariableManager()
  [989] pushint8 1 .............................. <1>
  [991] setlocal 1 .............................. i = 1
  [993] pushint8 1 .............................. <1>
  [995] jmpifz [1046] ........................... repeat while 1
  [998] getlocal 14 ............................. <tVarMngr>
  [1000] pushcons 24 ............................ <"cast.entry.">
  [1002] getlocal 1 ............................. <i>
  [1004] joinstr ................................ <"cast.entry." & i>
  [1005] pusharglist 2 .......................... <tVarMngr, "cast.entry." & i>
  [1007] objcall 88 ............................. <tVarMngr.exists("cast.entry." & i)>
  [1009] not .................................... <not tVarMngr.exists("cast.entry." & i)>
  [1010] jmpifz [1016] .......................... if not tVarMngr.exists("cast.entry." & i) then
  [1013] jmp [1046] ............................. exit repeat
  [1016] getlocal 14 ............................ <tVarMngr>
  [1018] pushcons 24 ............................ <"cast.entry.">
  [1020] getlocal 1 ............................. <i>
  [1022] joinstr ................................ <"cast.entry." & i>
  [1023] pusharglist 2 .......................... <tVarMngr, "cast.entry." & i>
  [1025] objcall 90 ............................. <tVarMngr.get("cast.entry." & i)>
  [1027] setlocal 11 ............................ tFileName = tVarMngr.get("cast.entry." & i)
  [1029] getlocal 10 ............................ <tCastList>
  [1031] getlocal 11 ............................ <tFileName>
  [1033] pusharglistnoret 2 ..................... <tCastList, tFileName>
  [1035] objcall 122 ............................ tCastList.add(tFileName)
  [1037] getlocal 1 ............................. <i>
  [1039] pushint8 1 ............................. <1>
  [1041] add .................................... <i + 1>
  [1042] setlocal 1 ............................. i = i + 1
  [1044] endrepeat [993]
  [1046] getlocal 10 ............................ <tCastList>
  [1048] pusharglist 1 .......................... <tCastList>
  [1050] extcall 22 ............................. <count(tCastList)>
  [1052] pushzero ............................... <0>
  [1053] gt ..................................... <count(tCastList) > 0>
  [1054] jmpifz [1110] .......................... if count(tCastList) > 0 then
  [1057] getlocal 10 ............................ <tCastList>
  [1059] peek 0
  [1061] pusharglist 1
  [1063] extcall 22
  [1065] pushint8 1
  [1067] peek 0
  [1069] peek 2
  [1071] lteq
  [1072] jmpifz [1108] .......................... repeat with tCast in tCastList
  [1075] peek 2
  [1077] peek 1
  [1079] pusharglist 2
  [1081] extcall 54
  [1083] setlocal 15
  [1085] getlocal 15 ............................ <tCast>
  [1087] pusharglist 1 .......................... <tCast>
  [1089] extcall 184 ............................ <castExists(tCast)>
  [1091] not .................................... <not castExists(tCast)>
  [1092] jmpifz [1103] .......................... if not castExists(tCast) then
  [1095] getlocal 13 ............................ <tNewList>
  [1097] getlocal 15 ............................ <tCast>
  [1099] pusharglistnoret 2 ..................... <tNewList, tCast>
  [1101] objcall 122 ............................ tNewList.add(tCast)
  [1103] pushint8 1
  [1105] add
  [1106] endrepeat [1067]
  [1108] pop 3
  [1110] getlocal 13 ............................ <tNewList>
  [1112] pusharglist 1 .......................... <tNewList>
  [1114] extcall 22 ............................. <count(tNewList)>
  [1116] pushzero ............................... <0>
  [1117] gt ..................................... <count(tNewList) > 0>
  [1118] jmpifz [1183] .......................... if count(tNewList) > 0 then / else
  [1121] getlocal 13 ............................ <tNewList>
  [1123] pushint8 1 ............................. <1>
  [1125] pusharglist 2 .......................... <tNewList, 1>
  [1127] extcall 180 ............................ <startCastLoad(tNewList, 1)>
  [1129] setlocal 12 ............................ tLoadID = startCastLoad(tNewList, 1)
  [1131] pushcons 25 ............................ <"loading.bar.active">
  [1133] pusharglist 1 .......................... <"loading.bar.active">
  [1135] extcall 372 ............................ <getVariable("loading.bar.active")>
  [1138] jmpifz [1157] .......................... if getVariable("loading.bar.active") then
  [1141] getlocal 12 ............................ <tLoadID>
  [1143] pushsymb 464 ........................... <#buffer>
  [1146] pushsymb 1659 .......................... <#window>
  [1149] pusharglist 2 .......................... <[#buffer: #window]>
  [1151] pushproplist ........................... <[#buffer: #window]>
  [1152] pusharglistnoret 2 ..................... <tLoadID, [#buffer: #window]>
  [1154] extcall 408 ............................ showLoadingBar(tLoadID, [#buffer: #window])
  [1157] pop 1
  [1159] getlocal 12 ............................ <tLoadID>
  [1161] pushsymb 1746 .......................... <#updateState>
  [1164] getparam 0 ............................. <me>
  [1166] pusharglist 1 .......................... <me>
  [1168] objcall 3 .............................. <me.getID()>
  [1170] pushcons 26 ............................ <"validate_resources">
  [1172] pusharglist 4 .......................... <tLoadID, #updateState, me.getID(), "validate_resources">
  [1174] extcall 181 ............................ <registerCastloadCallback(tLoadID, #updateState, me.getID(), "validate_resources")>
  [1176] pusharglistnoret 1 ..................... <registerCastloadCallback(tLoadID, #updateState, me.getID(), "validate_resources")>
  [1178] extcall 25 ............................. return registerCastloadCallback(tLoadID, #updateState, me.getID(), "validate_resources")
  [1180] jmp [1198]
  [1183] pop 1
  [1185] getparam 0 ............................. <me>
  [1187] pushcons 27 ............................ <"init_threads">
  [1189] pusharglist 2 .......................... <me, "init_threads">
  [1191] objcall 1746 ........................... <me.updateState("init_threads")>
  [1194] pusharglistnoret 1 ..................... <me.updateState("init_threads")>
  [1196] extcall 25 ............................. return me.updateState("init_threads")
  [1198] jmp [1286]
  [1201] peek 0
  [1203] pushcons 27 ............................ <"init_threads">
  [1205] eq
  [1206] jmpifz [1266] .......................... (case) "init_threads":
  [1209] getparam 1 ............................. <tstate>
  [1211] setprop 461 ............................ pState = tstate
  [1214] pushzero ............................... <0>
  [1215] pusharglistnoret 1 ..................... <0>
  [1217] extcall 45 ............................. cursor(0)
  [1219] getmovieprop 970 ....................... <the stage>
  [1222] pushcons 28 ............................ <"client.window.title">
  [1224] pusharglist 1 .......................... <"client.window.title">
  [1226] extcall 372 ............................ <getVariable("client.window.title")>
  [1229] setobjprop 1013 ........................ (the stage).title = getVariable("client.window.title")
  [1232] getparam 0 ............................. <me>
  [1234] pusharglistnoret 1 ..................... <me>
  [1236] objcall 1745 ........................... me.hideLogo()
  [1239] pusharglist 0 .......................... <>
  [1241] extcall 79 ............................. <getThreadManager()>
  [1243] pusharglistnoret 1 ..................... <getThreadManager()>
  [1245] objcall 159 ............................ getThreadManager().initAll()
  [1247] pop 1
  [1249] pushsymb 1749 .......................... <#Initialize>
  [1252] pushcons 29 ............................ <"initialize">
  [1254] pusharglist 2 .......................... <#Initialize, "initialize">
  [1256] extcall 357 ............................ <executeMessage(#Initialize, "initialize")>
  [1259] pusharglistnoret 1 ..................... <executeMessage(#Initialize, "initialize")>
  [1261] extcall 25 ............................. return executeMessage(#Initialize, "initialize")
  [1263] jmp [1286] ............................. (case) otherwise:
  [1266] pop 1
  [1268] getparam 0 ............................. <me>
  [1270] pushcons 30 ............................ <"Unknown state:">
  [1272] getparam 1 ............................. <tstate>
  [1274] joinpadstr ............................. <"Unknown state:" && tstate>
  [1275] pushsymb 1746 .......................... <#updateState>
  [1278] pusharglist 3 .......................... <me, "Unknown state:" && tstate, #updateState>
  [1280] extcall 39 ............................. <error(me, "Unknown state:" && tstate, #updateState)>
  [1282] pusharglistnoret 1 ..................... <error(me, "Unknown state:" && tstate, #updateState)>
  [1284] extcall 25 ............................. return error(me, "Unknown state:" && tstate, #updateState)
  [1286] pop 1 .................................. end case
  [1288] ret
end
