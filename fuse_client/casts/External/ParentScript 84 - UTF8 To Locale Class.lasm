property pUnicodeValues, pLocaleValues, pLocaleFormat

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 1841 ............................ pUnicodeValues = [:]
  [  6] pusharglist 0 ........................... <[:]>
  [  8] pushproplist ............................ <[:]>
  [  9] setprop 1842 ............................ pLocaleValues = [:]
  [ 12] pushcons 0 .............................. <EMPTY>
  [ 14] setprop 1843 ............................ pLocaleFormat = EMPTY
  [ 17] ret
end

on defineLocale me, tLocaleFormat
  [  0] getparam 1 .............................. <tLocaleFormat>
  [  2] pushcons 1 .............................. <"sjis">
  [  4] nteq .................................... <tLocaleFormat <> "sjis">
  [  5] getparam 1 .............................. <tLocaleFormat>
  [  7] pushcons 2 .............................. <"windows-1251">
  [  9] nteq .................................... <tLocaleFormat <> "windows-1251">
  [ 10] and ..................................... <(tLocaleFormat <> "sjis") and (tLocaleFormat <> "windows-1251")>
  [ 11] jmpifz [ 35] ............................ if (tLocaleFormat <> "sjis") and (tLocaleFormat <> "windows-1251") then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 3 .............................. <"Invalid locale format:">
  [ 18] getparam 1 .............................. <tLocaleFormat>
  [ 20] joinpadstr .............................. <"Invalid locale format:" && tLocaleFormat>
  [ 21] pushsymb 912 ............................ <#defineLocale>
  [ 24] pushsymb 972 ............................ <#major>
  [ 27] pusharglist 4 ........................... <me, "Invalid locale format:" && tLocaleFormat, #defineLocale, #major>
  [ 29] extcall 39 .............................. <error(me, "Invalid locale format:" && tLocaleFormat, #defineLocale, #major)>
  [ 31] pusharglistnoret 1 ...................... <error(me, "Invalid locale format:" && tLocaleFormat, #defineLocale, #major)>
  [ 33] extcall 25 .............................. return error(me, "Invalid locale format:" && tLocaleFormat, #defineLocale, #major)
  [ 35] getparam 1 .............................. <tLocaleFormat>
  [ 37] setprop 1843 ............................ pLocaleFormat = tLocaleFormat
  [ 40] getparam 0 .............................. <me>
  [ 42] getparam 1 .............................. <tLocaleFormat>
  [ 44] pusharglist 2 ........................... <me, tLocaleFormat>
  [ 46] objcall 1839 ............................ <me.createCharacterConversionArrays(tLocaleFormat)>
  [ 49] setlocal 0 .............................. tResult = me.createCharacterConversionArrays(tLocaleFormat)
  [ 51] getlocal 0 .............................. <tResult>
  [ 53] pushcons 4 .............................. <"unicode_values">
  [ 55] pusharglist 2 ........................... <tResult, "unicode_values">
  [ 57] objcall 54 .............................. <tResult["unicode_values"]>
  [ 59] setprop 1841 ............................ pUnicodeValues = tResult["unicode_values"]
  [ 62] getlocal 0 .............................. <tResult>
  [ 64] pushcons 5 .............................. <"locale_values">
  [ 66] pusharglist 2 ........................... <tResult, "locale_values">
  [ 68] objcall 54 .............................. <tResult["locale_values"]>
  [ 70] setprop 1842 ............................ pLocaleValues = tResult["locale_values"]
  [ 73] ret
end

on convertToUnicode me, tStr
  [  0] getprop 1841 ............................ <pUnicodeValues>
  [  3] getobjprop 22 ........................... <pUnicodeValues.count>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <pUnicodeValues.count = 0>
  [  7] getprop 1842 ............................ <pLocaleValues>
  [ 10] getobjprop 22 ........................... <pLocaleValues.count>
  [ 12] pushzero ................................ <0>
  [ 13] eq ...................................... <pLocaleValues.count = 0>
  [ 14] or ...................................... <(pUnicodeValues.count = 0) or (pLocaleValues.count = 0)>
  [ 15] jmpifz [ 23] ............................ if (pUnicodeValues.count = 0) or (pLocaleValues.count = 0) then
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 1 ...................... <0>
  [ 21] extcall 25 .............................. return 0
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] setlocal 0 .............................. tUnicodeData = []
  [ 28] pushint8 1 .............................. <1>
  [ 30] setlocal 1
  [ 32] getlocal 1
  [ 34] getparam 1 .............................. <tStr>
  [ 36] getobjprop 293 .......................... <tStr.length>
  [ 39] lteq
  [ 40] jmpifz [141] ............................ repeat with i = 1 to tStr.length
  [ 43] getparam 1 .............................. <tStr>
  [ 45] pushsymb 291 ............................ <#char>
  [ 48] getlocal 1 .............................. <i>
  [ 50] pusharglist 3 ........................... <tStr, #char, i>
  [ 52] objcall 290 ............................. <tStr.char[i]>
  [ 55] setlocal 2 .............................. tChar = tStr.char[i]
  [ 57] getlocal 2 .............................. <tChar>
  [ 59] pusharglist 1 ........................... <tChar>
  [ 61] extcall 917 ............................. <charToNum(tChar)>
  [ 64] setlocal 3 .............................. tValue = charToNum(tChar)
  [ 66] pushzero ................................ <0>
  [ 67] setlocal 4 .............................. tUnicodeValue = 0
  [ 69] getlocal 3 .............................. <tValue>
  [ 71] pushint8 1 .............................. <1>
  [ 73] add ..................................... <tValue + 1>
  [ 74] setlocal 5 .............................. tIndex = tValue + 1
  [ 76] getlocal 3 .............................. <tValue>
  [ 78] pushint16 128 ........................... <128>
  [ 81] lt ...................................... <tValue < 128>
  [ 82] jmpifz [ 92] ............................ if tValue < 128 then / else
  [ 85] getlocal 3 .............................. <tValue>
  [ 87] setlocal 4 .............................. tUnicodeValue = tValue
  [ 89] jmp [114]
  [ 92] getlocal 5 .............................. <tIndex>
  [ 94] getprop 1841 ............................ <pUnicodeValues>
  [ 97] getobjprop 22 ........................... <pUnicodeValues.count>
  [ 99] lteq .................................... <tIndex <= pUnicodeValues.count>
  [100] jmpifz [114] ............................ if tIndex <= pUnicodeValues.count then
  [103] getprop 1841 ............................ <pUnicodeValues>
  [106] getlocal 5 .............................. <tIndex>
  [108] pusharglist 2 ........................... <pUnicodeValues, tIndex>
  [110] objcall 54 .............................. <pUnicodeValues[tIndex]>
  [112] setlocal 4 .............................. tUnicodeValue = pUnicodeValues[tIndex]
  [114] getlocal 4 .............................. <tUnicodeValue>
  [116] pushzero ................................ <0>
  [117] gt ...................................... <tUnicodeValue > 0>
  [118] jmpifz [132] ............................ if tUnicodeValue > 0 then
  [121] getlocal 0 .............................. <tUnicodeData>
  [123] getlocal 4 .............................. <tUnicodeValue>
  [125] pusharglistnoret 2 ...................... <tUnicodeData, tUnicodeValue>
  [127] objcall 122 ............................. tUnicodeData.add(tUnicodeValue)
  [129] jmp [132] ............................... next repeat
  [132] pushint8 1
  [134] getlocal 1
  [136] add
  [137] setlocal 1
  [139] endrepeat [ 32]
  [141] getlocal 0 .............................. <tUnicodeData>
  [143] pusharglistnoret 1 ...................... <tUnicodeData>
  [145] extcall 25 .............................. return tUnicodeData
  [147] ret
end

on convertFromUnicode me, tUnicodeData
  [  0] getprop 1841 ............................ <pUnicodeValues>
  [  3] getobjprop 22 ........................... <pUnicodeValues.count>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <pUnicodeValues.count = 0>
  [  7] getprop 1842 ............................ <pLocaleValues>
  [ 10] getobjprop 22 ........................... <pLocaleValues.count>
  [ 12] pushzero ................................ <0>
  [ 13] eq ...................................... <pLocaleValues.count = 0>
  [ 14] or ...................................... <(pUnicodeValues.count = 0) or (pLocaleValues.count = 0)>
  [ 15] jmpifz [ 23] ............................ if (pUnicodeValues.count = 0) or (pLocaleValues.count = 0) then
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 1 ...................... <0>
  [ 21] extcall 25 .............................. return 0
  [ 23] pushcons 0 .............................. <EMPTY>
  [ 25] setlocal 0 .............................. tResult = EMPTY
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 1
  [ 31] getlocal 1
  [ 33] getparam 1 .............................. <tUnicodeData>
  [ 35] getobjprop 22 ........................... <tUnicodeData.count>
  [ 37] lteq
  [ 38] jmpifz [130] ............................ repeat with i = 1 to tUnicodeData.count
  [ 41] getparam 1 .............................. <tUnicodeData>
  [ 43] getlocal 1 .............................. <i>
  [ 45] pusharglist 2 ........................... <tUnicodeData, i>
  [ 47] objcall 54 .............................. <tUnicodeData[i]>
  [ 49] setlocal 2 .............................. tUnicodeValue = tUnicodeData[i]
  [ 51] pushzero ................................ <0>
  [ 52] setlocal 3 .............................. tLocaleValue = 0
  [ 54] getlocal 2 .............................. <tUnicodeValue>
  [ 56] pushint8 1 .............................. <1>
  [ 58] add ..................................... <tUnicodeValue + 1>
  [ 59] setlocal 4 .............................. tIndex = tUnicodeValue + 1
  [ 61] getlocal 2 .............................. <tUnicodeValue>
  [ 63] pushint16 128 ........................... <128>
  [ 66] lt ...................................... <tUnicodeValue < 128>
  [ 67] jmpifz [ 77] ............................ if tUnicodeValue < 128 then / else
  [ 70] getlocal 2 .............................. <tUnicodeValue>
  [ 72] setlocal 3 .............................. tLocaleValue = tUnicodeValue
  [ 74] jmp [ 99]
  [ 77] getlocal 4 .............................. <tIndex>
  [ 79] getprop 1842 ............................ <pLocaleValues>
  [ 82] getobjprop 22 ........................... <pLocaleValues.count>
  [ 84] lteq .................................... <tIndex <= pLocaleValues.count>
  [ 85] jmpifz [ 99] ............................ if tIndex <= pLocaleValues.count then
  [ 88] getprop 1842 ............................ <pLocaleValues>
  [ 91] getlocal 4 .............................. <tIndex>
  [ 93] pusharglist 2 ........................... <pLocaleValues, tIndex>
  [ 95] objcall 54 .............................. <pLocaleValues[tIndex]>
  [ 97] setlocal 3 .............................. tLocaleValue = pLocaleValues[tIndex]
  [ 99] getlocal 3 .............................. <tLocaleValue>
  [101] pushzero ................................ <0>
  [102] gt ...................................... <tLocaleValue > 0>
  [103] jmpifz [121] ............................ if tLocaleValue > 0 then
  [106] getlocal 0 .............................. <tResult>
  [108] getlocal 3 .............................. <tLocaleValue>
  [110] pusharglist 1 ........................... <tLocaleValue>
  [112] extcall 861 ............................. <numToChar(tLocaleValue)>
  [115] joinstr ................................. <tResult & numToChar(tLocaleValue)>
  [116] setlocal 0 .............................. tResult = tResult & numToChar(tLocaleValue)
  [118] jmp [121] ............................... next repeat
  [121] pushint8 1
  [123] getlocal 1
  [125] add
  [126] setlocal 1
  [128] endrepeat [ 31]
  [130] getlocal 0 .............................. <tResult>
  [132] pusharglistnoret 1 ...................... <tResult>
  [134] extcall 25 .............................. return tResult
  [136] ret
end

on generateStringFromUTF8 me, tUTF8Data
  [  0] getprop 1843 ............................ <pLocaleFormat>
  [  3] pushcons 2 .............................. <"windows-1251">
  [  5] eq ...................................... <pLocaleFormat = "windows-1251">
  [  6] jmpifz [ 17] ............................ if pLocaleFormat = "windows-1251" then
  [  9] pusharglist 0 ........................... <>
  [ 11] extcall 32 .............................. <VOID>
  [ 13] pusharglistnoret 1 ...................... <VOID>
  [ 15] extcall 25 .............................. return VOID
  [ 17] pushcons 0 .............................. <EMPTY>
  [ 19] setlocal 0 .............................. tResult = EMPTY
  [ 21] pushint8 1 .............................. <1>
  [ 23] setlocal 1 .............................. i = 1
  [ 25] getlocal 1 .............................. <i>
  [ 27] getparam 1 .............................. <tUTF8Data>
  [ 29] getobjprop 22 ........................... <tUTF8Data.count>
  [ 31] lteq .................................... <i <= tUTF8Data.count>
  [ 32] jmpifz [133] ............................ repeat while i <= tUTF8Data.count
  [ 35] getparam 1 .............................. <tUTF8Data>
  [ 37] getlocal 1 .............................. <i>
  [ 39] pusharglist 2 ........................... <tUTF8Data, i>
  [ 41] objcall 54 .............................. <tUTF8Data[i]>
  [ 43] setlocal 2 .............................. tValue = tUTF8Data[i]
  [ 45] getlocal 1 .............................. <i>
  [ 47] pushint8 1 .............................. <1>
  [ 49] add ..................................... <i + 1>
  [ 50] setlocal 1 .............................. i = i + 1
  [ 52] getlocal 2 .............................. <tValue>
  [ 54] pushint16 129 ........................... <129>
  [ 57] gteq .................................... <tValue >= 129>
  [ 58] getlocal 2 .............................. <tValue>
  [ 60] pushint16 159 ........................... <159>
  [ 63] lteq .................................... <tValue <= 159>
  [ 64] and ..................................... <(tValue >= 129) and (tValue <= 159)>
  [ 65] getlocal 2 .............................. <tValue>
  [ 67] pushint16 224 ........................... <224>
  [ 70] gteq .................................... <tValue >= 224>
  [ 71] getlocal 2 .............................. <tValue>
  [ 73] pushint16 239 ........................... <239>
  [ 76] lteq .................................... <tValue <= 239>
  [ 77] and ..................................... <(tValue >= 224) and (tValue <= 239)>
  [ 78] or ...................................... <((tValue >= 129) and (tValue <= 159)) or ((tValue >= 224) and (tValue <= 239))>
  [ 79] jmpifz [119] ............................ if ((tValue >= 129) and (tValue <= 159)) or ((tValue >= 224) and (tValue <= 239)) then
  [ 82] getlocal 1 .............................. <i>
  [ 84] getparam 1 .............................. <tUTF8Data>
  [ 86] getobjprop 22 ........................... <tUTF8Data.count>
  [ 88] lteq .................................... <i <= tUTF8Data.count>
  [ 89] jmpifz [119] ............................ if i <= tUTF8Data.count then / else
  [ 92] getlocal 2 .............................. <tValue>
  [ 94] pushint16 256 ........................... <256>
  [ 97] mul ..................................... <tValue * 256>
  [ 98] getparam 1 .............................. <tUTF8Data>
  [100] getlocal 1 .............................. <i>
  [102] pusharglist 2 ........................... <tUTF8Data, i>
  [104] objcall 54 .............................. <tUTF8Data[i]>
  [106] add ..................................... <(tValue * 256) + tUTF8Data[i]>
  [107] setlocal 2 .............................. tValue = (tValue * 256) + tUTF8Data[i]
  [109] getlocal 1 .............................. <i>
  [111] pushint8 1 .............................. <1>
  [113] add ..................................... <i + 1>
  [114] setlocal 1 .............................. i = i + 1
  [116] jmp [119]
  [119] getlocal 0 .............................. <tResult>
  [121] getlocal 2 .............................. <tValue>
  [123] pusharglist 1 ........................... <tValue>
  [125] extcall 861 ............................. <numToChar(tValue)>
  [128] joinstr ................................. <tResult & numToChar(tValue)>
  [129] setlocal 0 .............................. tResult = tResult & numToChar(tValue)
  [131] endrepeat [ 25]
  [133] getlocal 0 .............................. <tResult>
  [135] pusharglistnoret 1 ...................... <tResult>
  [137] extcall 25 .............................. return tResult
  [139] ret
end

on createCharacterConversionArrays me, tEncodingFormat
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tUnicodeValues = []
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setlocal 1 .............................. tLocaleValues = []
  [ 10] pushcons 0 .............................. <EMPTY>
  [ 12] setlocal 2 .............................. tText = EMPTY
  [ 14] getparam 1 .............................. <tEncodingFormat>
  [ 16] peek 0 .................................. case tEncodingFormat of
  [ 18] pushcons 1 .............................. <"sjis">
  [ 20] eq
  [ 21] jmpifz [ 38] ............................ (case) "sjis":
  [ 24] pushcons 6 .............................. <"Shift JIS to Unicode map">
  [ 26] pusharglist 1 ........................... <"Shift JIS to Unicode map">
  [ 28] extcall 41 .............................. <member("Shift JIS to Unicode map")>
  [ 30] getobjprop 516 .......................... <member("Shift JIS to Unicode map").text>
  [ 33] setlocal 2 .............................. tText = member("Shift JIS to Unicode map").text
  [ 35] jmp [ 57]
  [ 38] peek 0
  [ 40] pushcons 2 .............................. <"windows-1251">
  [ 42] eq
  [ 43] jmpifz [ 57] ............................ (case) "windows-1251":
  [ 46] pushcons 7 .............................. <"Windows-1251 to Unicode map">
  [ 48] pusharglist 1 ........................... <"Windows-1251 to Unicode map">
  [ 50] extcall 41 .............................. <member("Windows-1251 to Unicode map")>
  [ 52] getobjprop 516 .......................... <member("Windows-1251 to Unicode map").text>
  [ 55] setlocal 2 .............................. tText = member("Windows-1251 to Unicode map").text
  [ 57] pop 1 ................................... end case
  [ 59] getlocal 2 .............................. <tText>
  [ 61] pusharglist 1 ........................... <tText>
  [ 63] extcall 490 ............................. <ilk(tText)>
  [ 66] pushsymb 595 ............................ <#string>
  [ 69] eq ...................................... <ilk(tText) = #string>
  [ 70] jmpifz [380] ............................ if ilk(tText) = #string then
  [ 73] getlocal 2 .............................. <tText>
  [ 75] pushint8 4 .............................. <4>
  [ 77] get 1 ................................... <the number of lines in tText>
  [ 79] setlocal 3 .............................. tLineCount = the number of lines in tText
  [ 81] pushint8 100 ............................ <100>
  [ 83] setlocal 4 .............................. tChunkSize = 100
  [ 85] getlocal 3 .............................. <tLineCount>
  [ 87] getlocal 4 .............................. <tChunkSize>
  [ 89] div ..................................... <tLineCount / tChunkSize>
  [ 90] setlocal 5 .............................. tChunkCount = tLineCount / tChunkSize
  [ 92] getlocal 3 .............................. <tLineCount>
  [ 94] getlocal 4 .............................. <tChunkSize>
  [ 96] mod ..................................... <tLineCount mod tChunkSize>
  [ 97] pushzero ................................ <0>
  [ 98] nteq .................................... <(tLineCount mod tChunkSize) <> 0>
  [ 99] jmpifz [109] ............................ if (tLineCount mod tChunkSize) <> 0 then
  [102] getlocal 5 .............................. <tChunkCount>
  [104] pushint8 1 .............................. <1>
  [106] add ..................................... <tChunkCount + 1>
  [107] setlocal 5 .............................. tChunkCount = tChunkCount + 1
  [109] pushint8 1 .............................. <1>
  [111] setlocal 6
  [113] getlocal 6
  [115] getlocal 5 .............................. <tChunkCount>
  [117] lteq
  [118] jmpifz [380] ............................ repeat with j = 1 to tChunkCount
  [121] pushint8 1 .............................. <1>
  [123] getlocal 6 .............................. <j>
  [125] pushint8 1 .............................. <1>
  [127] sub ..................................... <j - 1>
  [128] getlocal 4 .............................. <tChunkSize>
  [130] mul ..................................... <(j - 1) * tChunkSize>
  [131] add ..................................... <1 + ((j - 1) * tChunkSize)>
  [132] setlocal 7 .............................. tFirstLineIndex = 1 + ((j - 1) * tChunkSize)
  [134] getlocal 7 .............................. <tFirstLineIndex>
  [136] getlocal 4 .............................. <tChunkSize>
  [138] add ..................................... <tFirstLineIndex + tChunkSize>
  [139] pushint8 1 .............................. <1>
  [141] sub ..................................... <tFirstLineIndex + tChunkSize - 1>
  [142] setlocal 8 .............................. tLastLineIndex = tFirstLineIndex + tChunkSize - 1
  [144] getlocal 2 .............................. <tText>
  [146] pushsymb 600 ............................ <#line>
  [149] getlocal 7 .............................. <tFirstLineIndex>
  [151] getlocal 8 .............................. <tLastLineIndex>
  [153] pusharglist 4 ........................... <tText, #line, tFirstLineIndex, tLastLineIndex>
  [155] objcall 290 ............................. <tText.line[tFirstLineIndex..tLastLineIndex]>
  [158] setlocal 9 .............................. tSubText = tText.line[tFirstLineIndex..tLastLineIndex]
  [160] getlocal 9 .............................. <tSubText>
  [162] pushint8 4 .............................. <4>
  [164] get 1 ................................... <the number of lines in tSubText>
  [166] setlocal 10 ............................. tSubLineCount = the number of lines in tSubText
  [168] pushint8 1 .............................. <1>
  [170] setlocal 11
  [172] getlocal 11
  [174] getlocal 10 ............................. <tSubLineCount>
  [176] lteq
  [177] jmpifz [370] ............................ repeat with i = 1 to tSubLineCount
  [180] pushzero ................................ <0>
  [181] pushzero ................................ <0>
  [182] pushzero ................................ <0>
  [183] pushzero ................................ <0>
  [184] pushzero ................................ <0>
  [185] pushzero ................................ <0>
  [186] pushint8 1 .............................. <1>
  [188] pushzero ................................ <0>
  [189] getlocal 9 .............................. <tSubText>
  [191] getchunk ................................ <line 1 of tSubText>
  [192] setlocal 12 ............................. tLine = line 1 of tSubText
  [194] pushzero ................................ <0>
  [195] pushzero ................................ <0>
  [196] pushzero ................................ <0>
  [197] pushzero ................................ <0>
  [198] pushzero ................................ <0>
  [199] pushzero ................................ <0>
  [200] pushint8 1 .............................. <1>
  [202] pushzero ................................ <0>
  [203] pushint8 9 .............................. <9>
  [205] deletechunk 5 ........................... delete line 1 of tSubText
  [207] pushzero ................................ <0>
  [208] pushzero ................................ <0>
  [209] pushint8 1 .............................. <1>
  [211] pushzero ................................ <0>
  [212] pushzero ................................ <0>
  [213] pushzero ................................ <0>
  [214] pushzero ................................ <0>
  [215] pushzero ................................ <0>
  [216] getlocal 12 ............................. <tLine>
  [218] getchunk ................................ <word 1 of tLine>
  [219] setlocal 13 ............................. tValueLocale = word 1 of tLine
  [221] getlocal 13 ............................. <tValueLocale>
  [223] pushsymb 291 ............................ <#char>
  [226] pushint8 1 .............................. <1>
  [228] pushint8 2 .............................. <2>
  [230] pusharglist 4 ........................... <tValueLocale, #char, 1, 2>
  [232] objcall 290 ............................. <tValueLocale.char[1..2]>
  [235] pushcons 8 .............................. <"0x">
  [237] eq ...................................... <tValueLocale.char[1..2] = "0x">
  [238] jmpifz [361] ............................ if tValueLocale.char[1..2] = "0x" then
  [241] pushzero ................................ <0>
  [242] pushzero ................................ <0>
  [243] pushint8 2 .............................. <2>
  [245] pushzero ................................ <0>
  [246] pushzero ................................ <0>
  [247] pushzero ................................ <0>
  [248] pushzero ................................ <0>
  [249] pushzero ................................ <0>
  [250] getlocal 12 ............................. <tLine>
  [252] getchunk ................................ <word 2 of tLine>
  [253] setlocal 14 ............................. tValueUnicode = word 2 of tLine
  [255] getlocal 13 ............................. <tValueLocale>
  [257] pushsymb 291 ............................ <#char>
  [260] pushint8 3 .............................. <3>
  [262] getlocal 13 ............................. <tValueLocale>
  [264] getobjprop 293 .......................... <tValueLocale.length>
  [267] pusharglist 4 ........................... <tValueLocale, #char, 3, tValueLocale.length>
  [269] objcall 290 ............................. <tValueLocale.char[3..tValueLocale.length]>
  [272] setlocal 13 ............................. tValueLocale = tValueLocale.char[3..tValueLocale.length]
  [274] getlocal 14 ............................. <tValueUnicode>
  [276] pushsymb 291 ............................ <#char>
  [279] pushint8 1 .............................. <1>
  [281] pushint8 2 .............................. <2>
  [283] pusharglist 4 ........................... <tValueUnicode, #char, 1, 2>
  [285] objcall 290 ............................. <tValueUnicode.char[1..2]>
  [288] pushcons 8 .............................. <"0x">
  [290] eq ...................................... <tValueUnicode.char[1..2] = "0x">
  [291] jmpifz [361] ............................ if tValueUnicode.char[1..2] = "0x" then
  [294] getlocal 14 ............................. <tValueUnicode>
  [296] pushsymb 291 ............................ <#char>
  [299] pushint8 3 .............................. <3>
  [301] getlocal 14 ............................. <tValueUnicode>
  [303] getobjprop 293 .......................... <tValueUnicode.length>
  [306] pusharglist 4 ........................... <tValueUnicode, #char, 3, tValueUnicode.length>
  [308] objcall 290 ............................. <tValueUnicode.char[3..tValueUnicode.length]>
  [311] setlocal 14 ............................. tValueUnicode = tValueUnicode.char[3..tValueUnicode.length]
  [313] getparam 0 .............................. <me>
  [315] getlocal 14 ............................. <tValueUnicode>
  [317] pusharglist 2 ........................... <me, tValueUnicode>
  [319] objcall 1840 ............................ <me.hexToInt(tValueUnicode)>
  [322] setlocal 14 ............................. tValueUnicode = me.hexToInt(tValueUnicode)
  [324] getparam 0 .............................. <me>
  [326] getlocal 13 ............................. <tValueLocale>
  [328] pusharglist 2 ........................... <me, tValueLocale>
  [330] objcall 1840 ............................ <me.hexToInt(tValueLocale)>
  [333] setlocal 13 ............................. tValueLocale = me.hexToInt(tValueLocale)
  [335] getlocal 0 .............................. <tUnicodeValues>
  [337] getlocal 13 ............................. <tValueLocale>
  [339] pushint8 1 .............................. <1>
  [341] add ..................................... <tValueLocale + 1>
  [342] getlocal 14 ............................. <tValueUnicode>
  [344] pusharglistnoret 3 ...................... <tUnicodeValues, tValueLocale + 1, tValueUnicode>
  [346] objcall 24 .............................. tUnicodeValues[tValueLocale + 1] = tValueUnicode
  [348] getlocal 1 .............................. <tLocaleValues>
  [350] getlocal 14 ............................. <tValueUnicode>
  [352] pushint8 1 .............................. <1>
  [354] add ..................................... <tValueUnicode + 1>
  [355] getlocal 13 ............................. <tValueLocale>
  [357] pusharglistnoret 3 ...................... <tLocaleValues, tValueUnicode + 1, tValueLocale>
  [359] objcall 24 .............................. tLocaleValues[tValueUnicode + 1] = tValueLocale
  [361] pushint8 1
  [363] getlocal 11
  [365] add
  [366] setlocal 11
  [368] endrepeat [172]
  [370] pushint8 1
  [372] getlocal 6
  [374] add
  [375] setlocal 6
  [377] endrepeat [113]
  [380] pushcons 4 .............................. <"unicode_values">
  [382] getlocal 0 .............................. <tUnicodeValues>
  [384] pushcons 5 .............................. <"locale_values">
  [386] getlocal 1 .............................. <tLocaleValues>
  [388] pusharglist 4 ........................... <["unicode_values": tUnicodeValues, "locale_values": tLocaleValues]>
  [390] pushproplist ............................ <["unicode_values": tUnicodeValues, "locale_values": tLocaleValues]>
  [391] pusharglistnoret 1 ...................... <["unicode_values": tUnicodeValues, "locale_values": tLocaleValues]>
  [393] extcall 25 .............................. return ["unicode_values": tUnicodeValues, "locale_values": tLocaleValues]
  [395] ret
end

on hexToInt me, tStr
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tValue = 0
  [  3] pushint8 1 .............................. <1>
  [  5] setlocal 1
  [  7] getlocal 1
  [  9] getparam 1 .............................. <tStr>
  [ 11] getobjprop 293 .......................... <tStr.length>
  [ 14] lteq
  [ 15] jmpifz [159] ............................ repeat with i = 1 to tStr.length
  [ 18] getlocal 0 .............................. <tValue>
  [ 20] pushint8 16 ............................. <16>
  [ 22] mul ..................................... <tValue * 16>
  [ 23] setlocal 0 .............................. tValue = tValue * 16
  [ 25] getparam 1 .............................. <tStr>
  [ 27] pushsymb 291 ............................ <#char>
  [ 30] getlocal 1 .............................. <i>
  [ 32] pusharglist 3 ........................... <tStr, #char, i>
  [ 34] objcall 290 ............................. <tStr.char[i]>
  [ 37] setlocal 2 .............................. tChar = tStr.char[i]
  [ 39] getlocal 2 .............................. <tChar>
  [ 41] pusharglist 1 ........................... <tChar>
  [ 43] extcall 113 ............................. <value(tChar)>
  [ 45] setlocal 3 .............................. tVal = value(tChar)
  [ 47] getlocal 3 .............................. <tVal>
  [ 49] pusharglist 1 ........................... <tVal>
  [ 51] extcall 20 .............................. <voidp(tVal)>
  [ 53] jmpifz [143] ............................ if voidp(tVal) then
  [ 56] getlocal 2 .............................. <tChar>
  [ 58] pushcons 9 .............................. <"a">
  [ 60] eq ...................................... <tChar = "a">
  [ 61] jmpifz [ 71] ............................ if tChar = "a" then / else
  [ 64] pushint8 10 ............................. <10>
  [ 66] setlocal 3 .............................. tVal = 10
  [ 68] jmp [143]
  [ 71] getlocal 2 .............................. <tChar>
  [ 73] pushcons 10 ............................. <"b">
  [ 75] eq ...................................... <tChar = "b">
  [ 76] jmpifz [ 86] ............................ if tChar = "b" then / else
  [ 79] pushint8 11 ............................. <11>
  [ 81] setlocal 3 .............................. tVal = 11
  [ 83] jmp [143]
  [ 86] getlocal 2 .............................. <tChar>
  [ 88] pushcons 11 ............................. <"c">
  [ 90] eq ...................................... <tChar = "c">
  [ 91] jmpifz [101] ............................ if tChar = "c" then / else
  [ 94] pushint8 12 ............................. <12>
  [ 96] setlocal 3 .............................. tVal = 12
  [ 98] jmp [143]
  [101] getlocal 2 .............................. <tChar>
  [103] pushcons 12 ............................. <"d">
  [105] eq ...................................... <tChar = "d">
  [106] jmpifz [116] ............................ if tChar = "d" then / else
  [109] pushint8 13 ............................. <13>
  [111] setlocal 3 .............................. tVal = 13
  [113] jmp [143]
  [116] getlocal 2 .............................. <tChar>
  [118] pushcons 13 ............................. <"e">
  [120] eq ...................................... <tChar = "e">
  [121] jmpifz [131] ............................ if tChar = "e" then / else
  [124] pushint8 14 ............................. <14>
  [126] setlocal 3 .............................. tVal = 14
  [128] jmp [143]
  [131] getlocal 2 .............................. <tChar>
  [133] pushcons 14 ............................. <"f">
  [135] eq ...................................... <tChar = "f">
  [136] jmpifz [143] ............................ if tChar = "f" then
  [139] pushint8 15 ............................. <15>
  [141] setlocal 3 .............................. tVal = 15
  [143] getlocal 0 .............................. <tValue>
  [145] getlocal 3 .............................. <tVal>
  [147] add ..................................... <tValue + tVal>
  [148] setlocal 0 .............................. tValue = tValue + tVal
  [150] pushint8 1
  [152] getlocal 1
  [154] add
  [155] setlocal 1
  [157] endrepeat [  7]
  [159] getlocal 0 .............................. <tValue>
  [161] pusharglistnoret 1 ...................... <tValue>
  [163] extcall 25 .............................. return tValue
  [165] ret
end
