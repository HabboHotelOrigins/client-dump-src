property pTitle, pClientID, pProcedures, pLock, pLocX, pLocY, pLocZ, pwidth, pheight, pModal, pActive, pVisible, pDragFlag, pDragOffset, pBoundary, pScaleFlag, pScaleOffset, pElemList, pMemberList, pGroupData, pSpriteList, pSpecialIDList, pClientRect, pElemClsList, pWindowMngr

on construct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 3 ............................... <me.getID()>
  [  6] setprop 1365 ............................ pTitle = me.getID()
  [  9] pushzero ................................ <0>
  [ 10] setprop 467 ............................. pLocX = 0
  [ 13] pushzero ................................ <0>
  [ 14] setprop 469 ............................. pLocY = 0
  [ 17] pushzero ................................ <0>
  [ 18] setprop 1367 ............................ pLocZ = 0
  [ 21] pushzero ................................ <0>
  [ 22] setprop 499 ............................. pwidth = 0
  [ 25] pushzero ................................ <0>
  [ 26] setprop 505 ............................. pheight = 0
  [ 29] pushint8 1 .............................. <1>
  [ 31] setprop 1368 ............................ pVisible = 1
  [ 34] pushzero ................................ <0>
  [ 35] setprop 1438 ............................ pActive = 0
  [ 38] pushzero ................................ <0>
  [ 39] setprop 1439 ............................ pLock = 0
  [ 42] pushzero ................................ <0>
  [ 43] setprop 1440 ............................ pModal = 0
  [ 46] pusharglist 0 ........................... <[:]>
  [ 48] pushproplist ............................ <[:]>
  [ 49] setprop 1369 ............................ pSpriteList = [:]
  [ 52] pushzero ................................ <0>
  [ 53] setprop 1441 ............................ pScaleFlag = 0
  [ 56] pushzero ................................ <0>
  [ 57] setprop 1372 ............................ pDragFlag = 0
  [ 60] pushzero ................................ <0>
  [ 61] pushzero ................................ <0>
  [ 62] pusharglist 2 ........................... <[0, 0]>
  [ 64] pushlist ................................ <[0, 0]>
  [ 65] setprop 1373 ............................ pDragOffset = [0, 0]
  [ 68] pushzero ................................ <0>
  [ 69] pushzero ................................ <0>
  [ 70] getmovieprop 970 ........................ <the stage>
  [ 73] getchainedprop 971 ...................... <(the stage).sourceRect>
  [ 76] getobjprop 42 ........................... <(the stage).sourceRect.width>
  [ 78] getmovieprop 970 ........................ <the stage>
  [ 81] getchainedprop 971 ...................... <(the stage).sourceRect>
  [ 84] getobjprop 43 ........................... <(the stage).sourceRect.height>
  [ 86] pusharglist 4 ........................... <0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height>
  [ 88] extcall 557 ............................. <rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height)>
  [ 91] pushint8 20 ............................. <20>
  [ 93] inv ..................................... <-20>
  [ 94] pushint8 20 ............................. <20>
  [ 96] inv ..................................... <-20>
  [ 97] pushint8 20 ............................. <20>
  [ 99] pushint8 20 ............................. <20>
  [101] pusharglist 4 ........................... <[-20, -20, 20, 20]>
  [103] pushlist ................................ <[-20, -20, 20, 20]>
  [104] add ..................................... <rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height) + [-20, -20, 20, 20]>
  [105] setprop 969 ............................. pBoundary = rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height) + [-20, -20, 20, 20]
  [108] pusharglist 0 ........................... <>
  [110] extcall 32 .............................. <VOID>
  [112] setprop 1442 ............................ pClientID = VOID
  [115] pusharglist 0 ........................... <[:]>
  [117] pushproplist ............................ <[:]>
  [118] setprop 1443 ............................ pMemberList = [:]
  [121] pusharglist 0 ........................... <[:]>
  [123] pushproplist ............................ <[:]>
  [124] setprop 1444 ............................ pElemList = [:]
  [127] pusharglist 0 ........................... <[]>
  [129] pushlist ................................ <[]>
  [130] setprop 1445 ............................ pGroupData = []
  [133] pushzero ................................ <0>
  [134] pushzero ................................ <0>
  [135] pushzero ................................ <0>
  [136] pushzero ................................ <0>
  [137] pusharglist 4 ........................... <[0, 0, 0, 0]>
  [139] pushlist ................................ <[0, 0, 0, 0]>
  [140] setprop 1446 ............................ pClientRect = [0, 0, 0, 0]
  [143] pushcons 0 .............................. <"drag">
  [145] pushcons 1 .............................. <"close">
  [147] pushcons 2 .............................. <"scale">
  [149] pusharglist 3 ........................... <["drag", "close", "scale"]>
  [151] pushlist ................................ <["drag", "close", "scale"]>
  [152] setprop 1447 ............................ pSpecialIDList = ["drag", "close", "scale"]
  [155] getparam 0 .............................. <me>
  [157] pusharglist 1 ........................... <me>
  [159] objcall 19 .............................. <me.createProcListTemplate()>
  [161] setprop 1448 ............................ pProcedures = me.createProcListTemplate()
  [164] pushint8 1 .............................. <1>
  [166] pusharglistnoret 1 ...................... <1>
  [168] extcall 25 .............................. return 1
  [170] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 3 ............................... <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 109 ............................. removeUpdate(me.getID())
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 3 ............................... <me.getID()>
  [ 16] pusharglistnoret 1 ...................... <me.getID()>
  [ 18] extcall 107 ............................. removePrepare(me.getID())
  [ 20] pushint8 1 .............................. <1>
  [ 22] setlocal 0
  [ 24] getlocal 0
  [ 26] getprop 1369 ............................ <pSpriteList>
  [ 29] getobjprop 22 ........................... <pSpriteList.count>
  [ 31] lteq
  [ 32] jmpifz [ 63] ............................ repeat with i = 1 to pSpriteList.count
  [ 35] getprop 1369 ............................ <pSpriteList>
  [ 38] getlocal 0 .............................. <i>
  [ 40] pusharglist 2 ........................... <pSpriteList, i>
  [ 42] objcall 54 .............................. <pSpriteList[i]>
  [ 44] getobjprop 37 ........................... <pSpriteList[i].spriteNum>
  [ 46] setlocal 1 .............................. tSprNum = pSpriteList[i].spriteNum
  [ 48] getlocal 1 .............................. <tSprNum>
  [ 50] pusharglistnoret 1 ...................... <tSprNum>
  [ 52] extcall 233 ............................. releaseSprite(tSprNum)
  [ 54] pushint8 1
  [ 56] getlocal 0
  [ 58] add
  [ 59] setlocal 0
  [ 61] endrepeat [ 24]
  [ 63] pushsymb 119 ............................ <#deconstruct>
  [ 65] getprop 1444 ............................ <pElemList>
  [ 68] pusharglistnoret 2 ...................... <#deconstruct, pElemList>
  [ 70] extcall 68 .............................. call(#deconstruct, pElemList)
  [ 72] pushint8 1 .............................. <1>
  [ 74] setlocal 0
  [ 76] getlocal 0
  [ 78] getprop 1443 ............................ <pMemberList>
  [ 81] getobjprop 22 ........................... <pMemberList.count>
  [ 83] lteq
  [ 84] jmpifz [112] ............................ repeat with i = 1 to pMemberList.count
  [ 87] getprop 1443 ............................ <pMemberList>
  [ 90] getlocal 0 .............................. <i>
  [ 92] pusharglist 2 ........................... <pMemberList, i>
  [ 94] objcall 54 .............................. <pMemberList[i]>
  [ 96] getobjprop 727 .......................... <pMemberList[i].name>
  [ 99] pusharglistnoret 1 ...................... <pMemberList[i].name>
  [101] extcall 165 ............................. removeMember(pMemberList[i].name)
  [103] pushint8 1
  [105] getlocal 0
  [107] add
  [108] setlocal 0
  [110] endrepeat [ 76]
  [112] pusharglist 0 ........................... <[:]>
  [114] pushproplist ............................ <[:]>
  [115] setprop 1444 ............................ pElemList = [:]
  [118] pusharglist 0 ........................... <[:]>
  [120] pushproplist ............................ <[:]>
  [121] setprop 1369 ............................ pSpriteList = [:]
  [124] pusharglist 0 ........................... <[:]>
  [126] pushproplist ............................ <[:]>
  [127] setprop 1443 ............................ pMemberList = [:]
  [130] pusharglist 0 ........................... <[]>
  [132] pushlist ................................ <[]>
  [133] setprop 1445 ............................ pGroupData = []
  [136] pushcons 3 .............................. <EMPTY>
  [138] setprop 1442 ............................ pClientID = EMPTY
  [141] pusharglist 0 ........................... <>
  [143] extcall 32 .............................. <VOID>
  [145] setprop 1449 ............................ pWindowMngr = VOID
  [148] pushint8 1 .............................. <1>
  [150] pusharglistnoret 1 ...................... <1>
  [152] extcall 25 .............................. return 1
  [154] ret
end

on define me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 540 ............................ <#locX>
  [  5] pusharglist 2 ........................... <tProps, #locX>
  [  7] objcall 54 .............................. <tProps[#locX]>
  [  9] setprop 467 ............................. pLocX = tProps[#locX]
  [ 12] getparam 1 .............................. <tProps>
  [ 14] pushsymb 541 ............................ <#locY>
  [ 17] pusharglist 2 ........................... <tProps, #locY>
  [ 19] objcall 54 .............................. <tProps[#locY]>
  [ 21] setprop 469 ............................. pLocY = tProps[#locY]
  [ 24] getparam 1 .............................. <tProps>
  [ 26] pushsymb 883 ............................ <#locZ>
  [ 29] pusharglist 2 ........................... <tProps, #locZ>
  [ 31] objcall 54 .............................. <tProps[#locZ]>
  [ 33] setprop 1367 ............................ pLocZ = tProps[#locZ]
  [ 36] getparam 1 .............................. <tProps>
  [ 38] pushsymb 974 ............................ <#boundary>
  [ 41] pusharglist 2 ........................... <tProps, #boundary>
  [ 43] objcall 54 .............................. <tProps[#boundary]>
  [ 45] setprop 969 ............................. pBoundary = tProps[#boundary]
  [ 48] getparam 1 .............................. <tProps>
  [ 50] pushsymb 998 ............................ <#elements>
  [ 53] pusharglist 2 ........................... <tProps, #elements>
  [ 55] objcall 54 .............................. <tProps[#elements]>
  [ 57] setprop 1450 ............................ pElemClsList = tProps[#elements]
  [ 60] getparam 1 .............................. <tProps>
  [ 62] pushsymb 999 ............................ <#manager>
  [ 65] pusharglist 2 ........................... <tProps, #manager>
  [ 67] objcall 54 .............................. <tProps[#manager]>
  [ 69] setprop 1449 ............................ pWindowMngr = tProps[#manager]
  [ 72] pushint8 1 .............................. <1>
  [ 74] pusharglistnoret 1 ...................... <1>
  [ 76] extcall 25 .............................. return 1
  [ 78] ret
end

on close me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 3 ............................... <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 324 ............................. <removeWindow(me.getID())>
  [ 11] pusharglistnoret 1 ...................... <removeWindow(me.getID())>
  [ 13] extcall 25 .............................. return removeWindow(me.getID())
  [ 15] ret
end

on merge me, tLayout
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 978 ............................. me.setDeactive()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <tLayout>
  [ 11] pusharglist 2 ........................... <me, tLayout>
  [ 13] objcall 1364 ............................ <me.buildVisual(tLayout)>
  [ 16] not ..................................... <not me.buildVisual(tLayout)>
  [ 17] jmpifz [ 25] ............................ if not me.buildVisual(tLayout) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 25 .............................. return 0
  [ 25] getprop 1447 ............................ <pSpecialIDList>
  [ 28] pushcons 0 .............................. <"drag">
  [ 30] getprop 1445 ............................ <pGroupData>
  [ 33] getobjprop 22 ........................... <pGroupData.count>
  [ 35] joinstr ................................. <"drag" & pGroupData.count>
  [ 36] pusharglistnoret 2 ...................... <pSpecialIDList, "drag" & pGroupData.count>
  [ 38] objcall 122 ............................. pSpecialIDList.add("drag" & pGroupData.count)
  [ 40] getprop 1447 ............................ <pSpecialIDList>
  [ 43] pushcons 1 .............................. <"close">
  [ 45] getprop 1445 ............................ <pGroupData>
  [ 48] getobjprop 22 ........................... <pGroupData.count>
  [ 50] joinstr ................................. <"close" & pGroupData.count>
  [ 51] pusharglistnoret 2 ...................... <pSpecialIDList, "close" & pGroupData.count>
  [ 53] objcall 122 ............................. pSpecialIDList.add("close" & pGroupData.count)
  [ 55] getprop 1449 ............................ <pWindowMngr>
  [ 58] getparam 0 .............................. <me>
  [ 60] pusharglist 1 ........................... <me>
  [ 62] objcall 3 ............................... <me.getID()>
  [ 64] pusharglistnoret 2 ...................... <pWindowMngr, me.getID()>
  [ 66] objcall 341 ............................. pWindowMngr.Activate(me.getID())
  [ 69] pushint8 1 .............................. <1>
  [ 71] pusharglistnoret 1 ...................... <1>
  [ 73] extcall 25 .............................. return 1
  [ 75] ret
end

on unmerge me
  [  0] getprop 1445 ............................ <pGroupData>
  [  3] getobjprop 22 ........................... <pGroupData.count>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <pGroupData.count = 0>
  [  7] jmpifz [ 28] ............................ if pGroupData.count = 0 then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 4 .............................. <"Cant't unmerge window without content!">
  [ 14] pushsymb 1427 ........................... <#unmerge>
  [ 17] pushsymb 934 ............................ <#minor>
  [ 20] pusharglist 4 ........................... <me, "Cant't unmerge window without content!", #unmerge, #minor>
  [ 22] extcall 39 .............................. <error(me, "Cant't unmerge window without content!", #unmerge, #minor)>
  [ 24] pusharglistnoret 1 ...................... <error(me, "Cant't unmerge window without content!", #unmerge, #minor)>
  [ 26] extcall 25 .............................. return error(me, "Cant't unmerge window without content!", #unmerge, #minor)
  [ 28] getprop 1445 ............................ <pGroupData>
  [ 31] pusharglist 1 ........................... <pGroupData>
  [ 33] objcall 665 ............................. <pGroupData.getLast()>
  [ 36] setlocal 0 .............................. tGroupData = pGroupData.getLast()
  [ 38] pushsymb 119 ............................ <#deconstruct>
  [ 40] getlocal 0 .............................. <tGroupData>
  [ 42] pushsymb 1451 ........................... <#items>
  [ 45] pusharglist 2 ........................... <tGroupData, #items>
  [ 47] objcall 54 .............................. <tGroupData[#items]>
  [ 49] pusharglistnoret 2 ...................... <#deconstruct, tGroupData[#items]>
  [ 51] extcall 68 .............................. call(#deconstruct, tGroupData[#items])
  [ 53] getprop 1446 ............................ <pClientRect>
  [ 56] getlocal 0 .............................. <tGroupData>
  [ 58] pushsymb 1124 ........................... <#border>
  [ 61] pusharglist 2 ........................... <tGroupData, #border>
  [ 63] objcall 54 .............................. <tGroupData[#border]>
  [ 65] sub ..................................... <pClientRect - tGroupData[#border]>
  [ 66] setprop 1446 ............................ pClientRect = pClientRect - tGroupData[#border]
  [ 69] getlocal 0 .............................. <tGroupData>
  [ 71] pushsymb 1451 ........................... <#items>
  [ 74] pusharglist 2 ........................... <tGroupData, #items>
  [ 76] objcall 54 .............................. <tGroupData[#items]>
  [ 78] peek 0
  [ 80] pusharglist 1
  [ 82] extcall 22
  [ 84] pushint8 1
  [ 86] peek 0
  [ 88] peek 2
  [ 90] lteq
  [ 91] jmpifz [127] ............................ repeat with tItem in tGroupData[#items]
  [ 94] peek 2
  [ 96] peek 1
  [ 98] pusharglist 2
  [100] extcall 54
  [102] setlocal 1
  [104] getprop 1444 ............................ <pElemList>
  [107] getprop 1444 ............................ <pElemList>
  [110] getlocal 1 .............................. <tItem>
  [112] pusharglist 2 ........................... <pElemList, tItem>
  [114] objcall 643 ............................. <pElemList.getOne(tItem)>
  [117] pusharglistnoret 2 ...................... <pElemList, pElemList.getOne(tItem)>
  [119] objcall 661 ............................. pElemList.deleteProp(pElemList.getOne(tItem))
  [122] pushint8 1
  [124] add
  [125] endrepeat [ 86]
  [127] pop 3
  [129] getlocal 0 .............................. <tGroupData>
  [131] pushsymb 1452 ........................... <#sprites>
  [134] pusharglist 2 ........................... <tGroupData, #sprites>
  [136] objcall 54 .............................. <tGroupData[#sprites]>
  [138] peek 0
  [140] pusharglist 1
  [142] extcall 22
  [144] pushint8 1
  [146] peek 0
  [148] peek 2
  [150] lteq
  [151] jmpifz [195] ............................ repeat with tsprite in tGroupData[#sprites]
  [154] peek 2
  [156] peek 1
  [158] pusharglist 2
  [160] extcall 54
  [162] setlocal 2
  [164] getprop 1369 ............................ <pSpriteList>
  [167] getprop 1369 ............................ <pSpriteList>
  [170] getlocal 2 .............................. <tsprite>
  [172] pusharglist 2 ........................... <pSpriteList, tsprite>
  [174] objcall 643 ............................. <pSpriteList.getOne(tsprite)>
  [177] pusharglistnoret 2 ...................... <pSpriteList, pSpriteList.getOne(tsprite)>
  [179] objcall 661 ............................. pSpriteList.deleteProp(pSpriteList.getOne(tsprite))
  [182] getlocal 2 .............................. <tsprite>
  [184] getobjprop 37 ........................... <tsprite.spriteNum>
  [186] pusharglistnoret 1 ...................... <tsprite.spriteNum>
  [188] extcall 233 ............................. releaseSprite(tsprite.spriteNum)
  [190] pushint8 1
  [192] add
  [193] endrepeat [146]
  [195] pop 3
  [197] getlocal 0 .............................. <tGroupData>
  [199] pushsymb 555 ............................ <#members>
  [202] pusharglist 2 ........................... <tGroupData, #members>
  [204] objcall 54 .............................. <tGroupData[#members]>
  [206] peek 0
  [208] pusharglist 1
  [210] extcall 22
  [212] pushint8 1
  [214] peek 0
  [216] peek 2
  [218] lteq
  [219] jmpifz [264] ............................ repeat with tmember in tGroupData[#members]
  [222] peek 2
  [224] peek 1
  [226] pusharglist 2
  [228] extcall 54
  [230] setlocal 3
  [232] getprop 1443 ............................ <pMemberList>
  [235] getprop 1443 ............................ <pMemberList>
  [238] getlocal 3 .............................. <tmember>
  [240] pusharglist 2 ........................... <pMemberList, tmember>
  [242] objcall 643 ............................. <pMemberList.getOne(tmember)>
  [245] pusharglistnoret 2 ...................... <pMemberList, pMemberList.getOne(tmember)>
  [247] objcall 661 ............................. pMemberList.deleteProp(pMemberList.getOne(tmember))
  [250] getlocal 3 .............................. <tmember>
  [252] getobjprop 727 .......................... <tmember.name>
  [255] pusharglistnoret 1 ...................... <tmember.name>
  [257] extcall 165 ............................. removeMember(tmember.name)
  [259] pushint8 1
  [261] add
  [262] endrepeat [214]
  [264] pop 3
  [266] getprop 1447 ............................ <pSpecialIDList>
  [269] pushcons 0 .............................. <"drag">
  [271] getprop 1445 ............................ <pGroupData>
  [274] getobjprop 22 ........................... <pGroupData.count>
  [276] joinstr ................................. <"drag" & pGroupData.count>
  [277] pusharglistnoret 2 ...................... <pSpecialIDList, "drag" & pGroupData.count>
  [279] objcall 529 ............................. pSpecialIDList.deleteOne("drag" & pGroupData.count)
  [282] getprop 1447 ............................ <pSpecialIDList>
  [285] pushcons 0 .............................. <"drag">
  [287] getprop 1445 ............................ <pGroupData>
  [290] getobjprop 22 ........................... <pGroupData.count>
  [292] joinstr ................................. <"drag" & pGroupData.count>
  [293] pusharglistnoret 2 ...................... <pSpecialIDList, "drag" & pGroupData.count>
  [295] objcall 529 ............................. pSpecialIDList.deleteOne("drag" & pGroupData.count)
  [298] getprop 1445 ............................ <pGroupData>
  [301] getprop 1445 ............................ <pGroupData>
  [304] getobjprop 22 ........................... <pGroupData.count>
  [306] pusharglistnoret 2 ...................... <pGroupData, pGroupData.count>
  [308] objcall 725 ............................. pGroupData.deleteAt(pGroupData.count)
  [311] pushint8 1 .............................. <1>
  [313] pusharglistnoret 1 ...................... <1>
  [315] extcall 25 .............................. return 1
  [317] ret
end

on lock me, tBoolean
  [  0] getparam 1 .............................. <tBoolean>
  [  2] pusharglist 1 ........................... <tBoolean>
  [  4] extcall 20 .............................. <voidp(tBoolean)>
  [  6] jmpifz [ 13] ............................ if voidp(tBoolean) then
  [  9] pushint8 1 .............................. <1>
  [ 11] setparam 1 .............................. tBoolean = 1
  [ 13] getparam 1 .............................. <tBoolean>
  [ 15] setprop 1439 ............................ pLock = tBoolean
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 1 ...................... <1>
  [ 22] extcall 25 .............................. return 1
  [ 24] ret
end

on hide me
  [  0] getprop 1368 ............................ <pVisible>
  [  3] pushint8 1 .............................. <1>
  [  5] eq ...................................... <pVisible = 1>
  [  6] jmpifz [ 29] ............................ if pVisible = 1 then
  [  9] pushzero ................................ <0>
  [ 10] setprop 1368 ............................ pVisible = 0
  [ 13] getparam 0 .............................. <me>
  [ 15] pushint16 10000 ......................... <10000>
  [ 18] pusharglistnoret 2 ...................... <me, 10000>
  [ 20] objcall 1360 ............................ me.moveX(10000)
  [ 23] pushint8 1 .............................. <1>
  [ 25] pusharglistnoret 1 ...................... <1>
  [ 27] extcall 25 .............................. return 1
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 25 .............................. return 0
  [ 34] ret
end

on show me
  [  0] getprop 1368 ............................ <pVisible>
  [  3] pushzero ................................ <0>
  [  4] eq ...................................... <pVisible = 0>
  [  5] jmpifz [ 30] ............................ if pVisible = 0 then
  [  8] pushint8 1 .............................. <1>
  [ 10] setprop 1368 ............................ pVisible = 1
  [ 13] getparam 0 .............................. <me>
  [ 15] pushint16 10000 ......................... <10000>
  [ 18] inv ..................................... <-10000>
  [ 19] pusharglistnoret 2 ...................... <me, -10000>
  [ 21] objcall 1360 ............................ me.moveX(-10000)
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 25 .............................. return 1
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 25 .............................. return 0
  [ 35] ret
end

on moveTo me, tX, tY
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tX>
  [  4] getprop 467 ............................. <pLocX>
  [  7] sub ..................................... <tX - pLocX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getprop 469 ............................. <pLocY>
  [ 13] sub ..................................... <tY - pLocY>
  [ 14] pusharglistnoret 3 ...................... <me, tX - pLocX, tY - pLocY>
  [ 16] objcall 982 ............................. me.moveBy(tX - pLocX, tY - pLocY)
  [ 19] ret
end

on moveBy me, tOffX, tOffY
  [  0] getprop 467 ............................. <pLocX>
  [  3] getparam 1 .............................. <tOffX>
  [  5] add ..................................... <pLocX + tOffX>
  [  6] getprop 969 ............................. <pBoundary>
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglist 2 ........................... <pBoundary, 1>
  [ 13] objcall 54 .............................. <pBoundary[1]>
  [ 15] lt ...................................... <(pLocX + tOffX) < pBoundary[1]>
  [ 16] jmpifz [ 34] ............................ if (pLocX + tOffX) < pBoundary[1] then
  [ 19] getprop 969 ............................. <pBoundary>
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglist 2 ........................... <pBoundary, 1>
  [ 26] objcall 54 .............................. <pBoundary[1]>
  [ 28] getprop 467 ............................. <pLocX>
  [ 31] sub ..................................... <pBoundary[1] - pLocX>
  [ 32] setparam 1 .............................. tOffX = pBoundary[1] - pLocX
  [ 34] getprop 469 ............................. <pLocY>
  [ 37] getparam 2 .............................. <tOffY>
  [ 39] add ..................................... <pLocY + tOffY>
  [ 40] getprop 969 ............................. <pBoundary>
  [ 43] pushint8 2 .............................. <2>
  [ 45] pusharglist 2 ........................... <pBoundary, 2>
  [ 47] objcall 54 .............................. <pBoundary[2]>
  [ 49] lt ...................................... <(pLocY + tOffY) < pBoundary[2]>
  [ 50] jmpifz [ 68] ............................ if (pLocY + tOffY) < pBoundary[2] then
  [ 53] getprop 969 ............................. <pBoundary>
  [ 56] pushint8 2 .............................. <2>
  [ 58] pusharglist 2 ........................... <pBoundary, 2>
  [ 60] objcall 54 .............................. <pBoundary[2]>
  [ 62] getprop 469 ............................. <pLocY>
  [ 65] sub ..................................... <pBoundary[2] - pLocY>
  [ 66] setparam 2 .............................. tOffY = pBoundary[2] - pLocY
  [ 68] getprop 467 ............................. <pLocX>
  [ 71] getprop 499 ............................. <pwidth>
  [ 74] add ..................................... <pLocX + pwidth>
  [ 75] getparam 1 .............................. <tOffX>
  [ 77] add ..................................... <pLocX + pwidth + tOffX>
  [ 78] getprop 969 ............................. <pBoundary>
  [ 81] pushint8 3 .............................. <3>
  [ 83] pusharglist 2 ........................... <pBoundary, 3>
  [ 85] objcall 54 .............................. <pBoundary[3]>
  [ 87] gt ...................................... <(pLocX + pwidth + tOffX) > pBoundary[3]>
  [ 88] jmpifz [110] ............................ if (pLocX + pwidth + tOffX) > pBoundary[3] then
  [ 91] getprop 969 ............................. <pBoundary>
  [ 94] pushint8 3 .............................. <3>
  [ 96] pusharglist 2 ........................... <pBoundary, 3>
  [ 98] objcall 54 .............................. <pBoundary[3]>
  [100] getprop 467 ............................. <pLocX>
  [103] sub ..................................... <pBoundary[3] - pLocX>
  [104] getprop 499 ............................. <pwidth>
  [107] sub ..................................... <pBoundary[3] - pLocX - pwidth>
  [108] setparam 1 .............................. tOffX = pBoundary[3] - pLocX - pwidth
  [110] getprop 469 ............................. <pLocY>
  [113] getprop 505 ............................. <pheight>
  [116] add ..................................... <pLocY + pheight>
  [117] getparam 2 .............................. <tOffY>
  [119] add ..................................... <pLocY + pheight + tOffY>
  [120] getprop 969 ............................. <pBoundary>
  [123] pushint8 4 .............................. <4>
  [125] pusharglist 2 ........................... <pBoundary, 4>
  [127] objcall 54 .............................. <pBoundary[4]>
  [129] gt ...................................... <(pLocY + pheight + tOffY) > pBoundary[4]>
  [130] jmpifz [152] ............................ if (pLocY + pheight + tOffY) > pBoundary[4] then
  [133] getprop 969 ............................. <pBoundary>
  [136] pushint8 4 .............................. <4>
  [138] pusharglist 2 ........................... <pBoundary, 4>
  [140] objcall 54 .............................. <pBoundary[4]>
  [142] getprop 469 ............................. <pLocY>
  [145] sub ..................................... <pBoundary[4] - pLocY>
  [146] getprop 505 ............................. <pheight>
  [149] sub ..................................... <pBoundary[4] - pLocY - pheight>
  [150] setparam 2 .............................. tOffY = pBoundary[4] - pLocY - pheight
  [152] getprop 467 ............................. <pLocX>
  [155] getparam 1 .............................. <tOffX>
  [157] add ..................................... <pLocX + tOffX>
  [158] setprop 467 ............................. pLocX = pLocX + tOffX
  [161] getprop 469 ............................. <pLocY>
  [164] getparam 2 .............................. <tOffY>
  [166] add ..................................... <pLocY + tOffY>
  [167] setprop 469 ............................. pLocY = pLocY + tOffY
  [170] getparam 0 .............................. <me>
  [172] getparam 1 .............................. <tOffX>
  [174] getparam 2 .............................. <tOffY>
  [176] pusharglistnoret 3 ...................... <me, tOffX, tOffY>
  [178] objcall 1362 ............................ me.moveXY(tOffX, tOffY)
  [181] ret
end

on moveZ me, tZ
  [  0] getparam 1 .............................. <tZ>
  [  2] pusharglist 1 ........................... <tZ>
  [  4] extcall 683 ............................. <integerp(tZ)>
  [  7] not ..................................... <not integerp(tZ)>
  [  8] jmpifz [ 32] ............................ if not integerp(tZ) then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 5 .............................. <"Integer expected:">
  [ 15] getparam 1 .............................. <tZ>
  [ 17] joinpadstr .............................. <"Integer expected:" && tZ>
  [ 18] pushsymb 1347 ........................... <#moveZ>
  [ 21] pushsymb 934 ............................ <#minor>
  [ 24] pusharglist 4 ........................... <me, "Integer expected:" && tZ, #moveZ, #minor>
  [ 26] extcall 39 .............................. <error(me, "Integer expected:" && tZ, #moveZ, #minor)>
  [ 28] pusharglistnoret 1 ...................... <error(me, "Integer expected:" && tZ, #moveZ, #minor)>
  [ 30] extcall 25 .............................. return error(me, "Integer expected:" && tZ, #moveZ, #minor)
  [ 32] pushint8 1 .............................. <1>
  [ 34] setlocal 0
  [ 36] getlocal 0
  [ 38] getprop 1369 ............................ <pSpriteList>
  [ 41] getobjprop 22 ........................... <pSpriteList.count>
  [ 43] lteq
  [ 44] jmpifz [ 76] ............................ repeat with i = 1 to pSpriteList.count
  [ 47] getprop 1369 ............................ <pSpriteList>
  [ 50] getlocal 0 .............................. <i>
  [ 52] pusharglist 2 ........................... <pSpriteList, i>
  [ 54] objcall 54 .............................. <pSpriteList[i]>
  [ 56] getparam 1 .............................. <tZ>
  [ 58] getlocal 0 .............................. <i>
  [ 60] add ..................................... <tZ + i>
  [ 61] pushint8 1 .............................. <1>
  [ 63] sub ..................................... <tZ + i - 1>
  [ 64] setobjprop 883 .......................... pSpriteList[i].locZ = tZ + i - 1
  [ 67] pushint8 1
  [ 69] getlocal 0
  [ 71] add
  [ 72] setlocal 0
  [ 74] endrepeat [ 36]
  [ 76] getparam 1 .............................. <tZ>
  [ 78] setprop 1367 ............................ pLocZ = tZ
  [ 81] ret
end

on center me
  [  0] getmovieprop 970 ........................ <the stage>
  [  3] getobjprop 971 .......................... <(the stage).sourceRect>
  [  6] setlocal 0 .............................. blah = (the stage).sourceRect
  [  8] getmovieprop 970 ........................ <the stage>
  [ 11] getchainedprop 971 ...................... <(the stage).sourceRect>
  [ 14] getobjprop 42 ........................... <(the stage).sourceRect.width>
  [ 16] pushint8 2 .............................. <2>
  [ 18] div ..................................... <(the stage).sourceRect.width / 2>
  [ 19] getprop 499 ............................. <pwidth>
  [ 22] pushint8 2 .............................. <2>
  [ 24] div ..................................... <pwidth / 2>
  [ 25] sub ..................................... <((the stage).sourceRect.width / 2) - (pwidth / 2)>
  [ 26] setlocal 1 .............................. tX = ((the stage).sourceRect.width / 2) - (pwidth / 2)
  [ 28] getmovieprop 970 ........................ <the stage>
  [ 31] getchainedprop 971 ...................... <(the stage).sourceRect>
  [ 34] getobjprop 43 ........................... <(the stage).sourceRect.height>
  [ 36] pushint8 2 .............................. <2>
  [ 38] div ..................................... <(the stage).sourceRect.height / 2>
  [ 39] getprop 505 ............................. <pheight>
  [ 42] pushint8 2 .............................. <2>
  [ 44] div ..................................... <pheight / 2>
  [ 45] sub ..................................... <((the stage).sourceRect.height / 2) - (pheight / 2)>
  [ 46] setlocal 2 .............................. tY = ((the stage).sourceRect.height / 2) - (pheight / 2)
  [ 48] getparam 0 .............................. <me>
  [ 50] getlocal 1 .............................. <tX>
  [ 52] getlocal 2 .............................. <tY>
  [ 54] pusharglist 3 ........................... <me, tX, tY>
  [ 56] objcall 1009 ............................ <me.moveTo(tX, tY)>
  [ 59] pusharglistnoret 1 ...................... <me.moveTo(tX, tY)>
  [ 61] extcall 25 .............................. return me.moveTo(tX, tY)
  [ 63] ret
end

on resizeBy me, tOffX, tOffY
  [  0] getparam 1 .............................. <tOffX>
  [  2] pushzero ................................ <0>
  [  3] nteq .................................... <tOffX <> 0>
  [  4] getparam 2 .............................. <tOffY>
  [  6] pushzero ................................ <0>
  [  7] nteq .................................... <tOffY <> 0>
  [  8] or ...................................... <(tOffX <> 0) or (tOffY <> 0)>
  [  9] jmpifz [ 44] ............................ if (tOffX <> 0) or (tOffY <> 0) then
  [ 12] getprop 499 ............................. <pwidth>
  [ 15] getparam 1 .............................. <tOffX>
  [ 17] add ..................................... <pwidth + tOffX>
  [ 18] setprop 499 ............................. pwidth = pwidth + tOffX
  [ 21] getprop 505 ............................. <pheight>
  [ 24] getparam 2 .............................. <tOffY>
  [ 26] add ..................................... <pheight + tOffY>
  [ 27] setprop 505 ............................. pheight = pheight + tOffY
  [ 30] pushsymb 1428 ........................... <#resizeBy>
  [ 33] getprop 1444 ............................ <pElemList>
  [ 36] getparam 1 .............................. <tOffX>
  [ 38] getparam 2 .............................. <tOffY>
  [ 40] pusharglistnoret 4 ...................... <#resizeBy, pElemList, tOffX, tOffY>
  [ 42] extcall 68 .............................. call(#resizeBy, pElemList, tOffX, tOffY)
  [ 44] ret
end

on resizeTo me, tX, tY
  [  0] getparam 1 .............................. <tX>
  [  2] getprop 499 ............................. <pwidth>
  [  5] sub ..................................... <tX - pwidth>
  [  6] setlocal 0 .............................. tOffW = tX - pwidth
  [  8] getparam 2 .............................. <tY>
  [ 10] getprop 505 ............................. <pheight>
  [ 13] sub ..................................... <tY - pheight>
  [ 14] setlocal 1 .............................. tOffH = tY - pheight
  [ 16] getparam 0 .............................. <me>
  [ 18] getlocal 0 .............................. <tOffW>
  [ 20] getlocal 1 .............................. <tOffH>
  [ 22] pusharglistnoret 3 ...................... <me, tOffW, tOffH>
  [ 24] objcall 1428 ............................ me.resizeBy(tOffW, tOffH)
  [ 27] ret
end

on setActive me
  [  0] getprop 1438 ............................ <pActive>
  [  3] not ..................................... <not pActive>
  [  4] jmpifz [ 21] ............................ if not pActive then / else
  [  7] pushint8 1 .............................. <1>
  [  9] setprop 1438 ............................ pActive = 1
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 25 .............................. return 1
  [ 18] jmp [ 26]
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 25 .............................. return 0
  [ 26] ret
end

on setDeactive me
  [  0] getprop 1439 ............................ <pLock>
  [  3] jmpifz [ 14] ............................ if pLock then / else
  [  6] pushzero ................................ <0>
  [  7] pusharglistnoret 1 ...................... <0>
  [  9] extcall 25 .............................. return 0
  [ 11] jmp [ 38]
  [ 14] getprop 1438 ............................ <pActive>
  [ 17] jmpifz [ 33] ............................ if pActive then / else
  [ 20] pushzero ................................ <0>
  [ 21] setprop 1438 ............................ pActive = 0
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 25 .............................. return 1
  [ 30] jmp [ 38]
  [ 33] pushzero ................................ <0>
  [ 34] pusharglistnoret 1 ...................... <0>
  [ 36] extcall 25 .............................. return 0
  [ 38] ret
end

on getClientRect me
  [  0] getprop 467 ............................. <pLocX>
  [  3] getprop 469 ............................. <pLocY>
  [  6] getprop 467 ............................. <pLocX>
  [  9] getprop 499 ............................. <pwidth>
  [ 12] add ..................................... <pLocX + pwidth>
  [ 13] getprop 469 ............................. <pLocY>
  [ 16] getprop 505 ............................. <pheight>
  [ 19] add ..................................... <pLocY + pheight>
  [ 20] pusharglist 4 ........................... <pLocX, pLocY, pLocX + pwidth, pLocY + pheight>
  [ 22] extcall 557 ............................. <rect(pLocX, pLocY, pLocX + pwidth, pLocY + pheight)>
  [ 25] pusharglistnoret 1 ...................... <rect(pLocX, pLocY, pLocX + pwidth, pLocY + pheight)>
  [ 27] extcall 25 .............................. return rect(pLocX, pLocY, pLocX + pwidth, pLocY + pheight)
  [ 29] ret
end

on getElement me, tid
  [  0] getprop 1444 ............................ <pElemList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pElemList, tid>
  [  7] objcall 54 .............................. <pElemList[tid]>
  [  9] setlocal 0 .............................. tElement = pElemList[tid]
  [ 11] getlocal 0 .............................. <tElement>
  [ 13] pusharglist 1 ........................... <tElement>
  [ 15] extcall 20 .............................. <voidp(tElement)>
  [ 17] jmpifz [ 25] ............................ if voidp(tElement) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 25 .............................. return 0
  [ 25] getlocal 0 .............................. <tElement>
  [ 27] pusharglistnoret 1 ...................... <tElement>
  [ 29] extcall 25 .............................. return tElement
  [ 31] ret
end

on elementExists me, tid
  [  0] getprop 1444 ............................ <pElemList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pElemList, tid>
  [  7] objcall 54 .............................. <pElemList[tid]>
  [  9] pusharglist 1 ........................... <pElemList[tid]>
  [ 11] extcall 20 .............................. <voidp(pElemList[tid])>
  [ 13] not ..................................... <not voidp(pElemList[tid])>
  [ 14] pusharglistnoret 1 ...................... <not voidp(pElemList[tid])>
  [ 16] extcall 25 .............................. return not voidp(pElemList[tid])
  [ 18] ret
end

on registerClient me, tClientID
  [  0] getparam 1 .............................. <tClientID>
  [  2] pusharglist 1 ........................... <tClientID>
  [  4] extcall 67 .............................. <objectExists(tClientID)>
  [  6] not ..................................... <not objectExists(tClientID)>
  [  7] jmpifz [ 31] ............................ if not objectExists(tClientID) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 6 .............................. <"Object not found:">
  [ 14] getparam 1 .............................. <tClientID>
  [ 16] joinpadstr .............................. <"Object not found:" && tClientID>
  [ 17] pushsymb 330 ............................ <#registerClient>
  [ 20] pushsymb 972 ............................ <#major>
  [ 23] pusharglist 4 ........................... <me, "Object not found:" && tClientID, #registerClient, #major>
  [ 25] extcall 39 .............................. <error(me, "Object not found:" && tClientID, #registerClient, #major)>
  [ 27] pusharglistnoret 1 ...................... <error(me, "Object not found:" && tClientID, #registerClient, #major)>
  [ 29] extcall 25 .............................. return error(me, "Object not found:" && tClientID, #registerClient, #major)
  [ 31] getparam 1 .............................. <tClientID>
  [ 33] setprop 1442 ............................ pClientID = tClientID
  [ 36] pushint8 1 .............................. <1>
  [ 38] pusharglistnoret 1 ...................... <1>
  [ 40] extcall 25 .............................. return 1
  [ 42] ret
end

on removeClient me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 32 .............................. <VOID>
  [  4] setprop 1442 ............................ pClientID = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 25 .............................. return 1
  [ 13] ret
end

on registerProcedure me, tMethod, tClientID, tEvent
  [  0] getparam 1 .............................. <tMethod>
  [  2] pusharglist 1 ........................... <tMethod>
  [  4] extcall 46 .............................. <symbolp(tMethod)>
  [  6] not ..................................... <not symbolp(tMethod)>
  [  7] jmpifz [ 30] ............................ if not symbolp(tMethod) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 7 .............................. <"Symbol expected:">
  [ 14] getparam 1 .............................. <tMethod>
  [ 16] joinpadstr .............................. <"Symbol expected:" && tMethod>
  [ 17] pushsymb 1 .............................. <#registerProcedure>
  [ 19] pushsymb 972 ............................ <#major>
  [ 22] pusharglist 4 ........................... <me, "Symbol expected:" && tMethod, #registerProcedure, #major>
  [ 24] extcall 39 .............................. <error(me, "Symbol expected:" && tMethod, #registerProcedure, #major)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "Symbol expected:" && tMethod, #registerProcedure, #major)>
  [ 28] extcall 25 .............................. return error(me, "Symbol expected:" && tMethod, #registerProcedure, #major)
  [ 30] getparam 2 .............................. <tClientID>
  [ 32] pusharglist 1 ........................... <tClientID>
  [ 34] extcall 67 .............................. <objectExists(tClientID)>
  [ 36] not ..................................... <not objectExists(tClientID)>
  [ 37] jmpifz [ 60] ............................ if not objectExists(tClientID) then
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 6 .............................. <"Object not found:">
  [ 44] getparam 2 .............................. <tClientID>
  [ 46] joinpadstr .............................. <"Object not found:" && tClientID>
  [ 47] pushsymb 1 .............................. <#registerProcedure>
  [ 49] pushsymb 972 ............................ <#major>
  [ 52] pusharglist 4 ........................... <me, "Object not found:" && tClientID, #registerProcedure, #major>
  [ 54] extcall 39 .............................. <error(me, "Object not found:" && tClientID, #registerProcedure, #major)>
  [ 56] pusharglistnoret 1 ...................... <error(me, "Object not found:" && tClientID, #registerProcedure, #major)>
  [ 58] extcall 25 .............................. return error(me, "Object not found:" && tClientID, #registerProcedure, #major)
  [ 60] getparam 3 .............................. <tEvent>
  [ 62] pusharglist 1 ........................... <tEvent>
  [ 64] extcall 20 .............................. <voidp(tEvent)>
  [ 66] jmpifz [112] ............................ if voidp(tEvent) then / else
  [ 69] pushint8 1 .............................. <1>
  [ 71] setlocal 0
  [ 73] getlocal 0
  [ 75] getprop 1448 ............................ <pProcedures>
  [ 78] getobjprop 22 ........................... <pProcedures.count>
  [ 80] lteq
  [ 81] jmpifz [109] ............................ repeat with i = 1 to pProcedures.count
  [ 84] getprop 1448 ............................ <pProcedures>
  [ 87] getlocal 0 .............................. <i>
  [ 89] getparam 1 .............................. <tMethod>
  [ 91] getparam 2 .............................. <tClientID>
  [ 93] pusharglist 2 ........................... <[tMethod, tClientID]>
  [ 95] pushlist ................................ <[tMethod, tClientID]>
  [ 96] pusharglistnoret 3 ...................... <pProcedures, i, [tMethod, tClientID]>
  [ 98] objcall 24 .............................. pProcedures[i] = [tMethod, tClientID]
  [100] pushint8 1
  [102] getlocal 0
  [104] add
  [105] setlocal 0
  [107] endrepeat [ 73]
  [109] jmp [128]
  [112] getprop 1448 ............................ <pProcedures>
  [115] getparam 3 .............................. <tEvent>
  [117] getparam 1 .............................. <tMethod>
  [119] getparam 2 .............................. <tClientID>
  [121] pusharglist 2 ........................... <[tMethod, tClientID]>
  [123] pushlist ................................ <[tMethod, tClientID]>
  [124] pusharglistnoret 3 ...................... <pProcedures, tEvent, [tMethod, tClientID]>
  [126] objcall 24 .............................. pProcedures[tEvent] = [tMethod, tClientID]
  [128] pushint8 1 .............................. <1>
  [130] pusharglistnoret 1 ...................... <1>
  [132] extcall 25 .............................. return 1
  [134] ret
end

on removeProcedure me, tEvent
  [  0] getparam 1 .............................. <tEvent>
  [  2] pusharglist 1 ........................... <tEvent>
  [  4] extcall 20 .............................. <voidp(tEvent)>
  [  6] jmpifz [ 21] ............................ if voidp(tEvent) then / else
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 19 .............................. <me.createProcListTemplate()>
  [ 15] setprop 1448 ............................ pProcedures = me.createProcListTemplate()
  [ 18] jmp [ 58]
  [ 21] getprop 1448 ............................ <pProcedures>
  [ 24] getparam 1 .............................. <tEvent>
  [ 26] pusharglist 2 ........................... <pProcedures, tEvent>
  [ 28] objcall 31 .............................. <pProcedures.getaProp(tEvent)>
  [ 30] pusharglist 0 ........................... <>
  [ 32] extcall 32 .............................. <VOID>
  [ 34] nteq .................................... <pProcedures.getaProp(tEvent) <> VOID>
  [ 35] jmpifz [ 58] ............................ if pProcedures.getaProp(tEvent) <> VOID then
  [ 38] getprop 1448 ............................ <pProcedures>
  [ 41] getparam 1 .............................. <tEvent>
  [ 43] pushsymb 33 ............................. <#null>
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 3 ............................... <me.getID()>
  [ 51] pusharglist 2 ........................... <[#null, me.getID()]>
  [ 53] pushlist ................................ <[#null, me.getID()]>
  [ 54] pusharglistnoret 3 ...................... <pProcedures, tEvent, [#null, me.getID()]>
  [ 56] objcall 24 .............................. pProcedures[tEvent] = [#null, me.getID()]
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglistnoret 1 ...................... <1>
  [ 62] extcall 25 .............................. return 1
  [ 64] ret
end

on getProperty me, tProp
  [  0] getparam 1 .............................. <tProp>
  [  2] peek 0 .................................. case tProp of
  [  4] pushsymb 540 ............................ <#locX>
  [  7] eq
  [  8] jmpifz [ 23] ............................ (case) #locX:
  [ 11] pop 1
  [ 13] getprop 467 ............................. <pLocX>
  [ 16] pusharglistnoret 1 ...................... <pLocX>
  [ 18] extcall 25 .............................. return pLocX
  [ 20] jmp [293]
  [ 23] peek 0
  [ 25] pushsymb 541 ............................ <#locY>
  [ 28] eq
  [ 29] jmpifz [ 44] ............................ (case) #locY:
  [ 32] pop 1
  [ 34] getprop 469 ............................. <pLocY>
  [ 37] pusharglistnoret 1 ...................... <pLocY>
  [ 39] extcall 25 .............................. return pLocY
  [ 41] jmp [293]
  [ 44] peek 0
  [ 46] pushsymb 883 ............................ <#locZ>
  [ 49] eq
  [ 50] jmpifz [ 65] ............................ (case) #locZ:
  [ 53] pop 1
  [ 55] getprop 1367 ............................ <pLocZ>
  [ 58] pusharglistnoret 1 ...................... <pLocZ>
  [ 60] extcall 25 .............................. return pLocZ
  [ 62] jmp [293]
  [ 65] peek 0
  [ 67] pushsymb 974 ............................ <#boundary>
  [ 70] eq
  [ 71] jmpifz [ 86] ............................ (case) #boundary:
  [ 74] pop 1
  [ 76] getprop 969 ............................. <pBoundary>
  [ 79] pusharglistnoret 1 ...................... <pBoundary>
  [ 81] extcall 25 .............................. return pBoundary
  [ 83] jmp [293]
  [ 86] peek 0
  [ 88] pushsymb 42 ............................. <#width>
  [ 90] eq
  [ 91] jmpifz [106] ............................ (case) #width:
  [ 94] pop 1
  [ 96] getprop 499 ............................. <pwidth>
  [ 99] pusharglistnoret 1 ...................... <pwidth>
  [101] extcall 25 .............................. return pwidth
  [103] jmp [293]
  [106] peek 0
  [108] pushsymb 43 ............................. <#height>
  [110] eq
  [111] jmpifz [126] ............................ (case) #height:
  [114] pop 1
  [116] getprop 505 ............................. <pheight>
  [119] pusharglistnoret 1 ...................... <pheight>
  [121] extcall 25 .............................. return pheight
  [123] jmp [293]
  [126] peek 0
  [128] pushsymb 880 ............................ <#visible>
  [131] eq
  [132] jmpifz [147] ............................ (case) #visible:
  [135] pop 1
  [137] getprop 1368 ............................ <pVisible>
  [140] pusharglistnoret 1 ...................... <pVisible>
  [142] extcall 25 .............................. return pVisible
  [144] jmp [293]
  [147] peek 0
  [149] pushsymb 1013 ........................... <#title>
  [152] eq
  [153] jmpifz [168] ............................ (case) #title:
  [156] pop 1
  [158] getprop 1365 ............................ <pTitle>
  [161] pusharglistnoret 1 ...................... <pTitle>
  [163] extcall 25 .............................. return pTitle
  [165] jmp [293]
  [168] peek 0
  [170] pushsymb 34 ............................. <#id>
  [172] eq
  [173] jmpifz [191] ............................ (case) #id:
  [176] pop 1
  [178] getparam 0 .............................. <me>
  [180] pusharglist 1 ........................... <me>
  [182] objcall 3 ............................... <me.getID()>
  [184] pusharglistnoret 1 ...................... <me.getID()>
  [186] extcall 25 .............................. return me.getID()
  [188] jmp [293]
  [191] peek 0
  [193] pushsymb 688 ............................ <#modal>
  [196] eq
  [197] jmpifz [212] ............................ (case) #modal:
  [200] pop 1
  [202] getprop 1440 ............................ <pModal>
  [205] pusharglistnoret 1 ...................... <pModal>
  [207] extcall 25 .............................. return pModal
  [209] jmp [293]
  [212] peek 0
  [214] pushsymb 1005 ........................... <#spriteList>
  [217] eq
  [218] jmpifz [233] ............................ (case) #spriteList:
  [221] pop 1
  [223] getprop 1369 ............................ <pSpriteList>
  [226] pusharglistnoret 1 ...................... <pSpriteList>
  [228] extcall 25 .............................. return pSpriteList
  [230] jmp [293]
  [233] peek 0
  [235] pushsymb 1457 ........................... <#elementList>
  [238] eq
  [239] jmpifz [254] ............................ (case) #elementList:
  [242] pop 1
  [244] getprop 1444 ............................ <pElemList>
  [247] pusharglistnoret 1 ...................... <pElemList>
  [249] extcall 25 .............................. return pElemList
  [251] jmp [293]
  [254] peek 0
  [256] pushsymb 772 ............................ <#Active>
  [259] eq
  [260] jmpifz [275] ............................ (case) #Active:
  [263] pop 1
  [265] getprop 1438 ............................ <pActive>
  [268] pusharglistnoret 1 ...................... <pActive>
  [270] extcall 25 .............................. return pActive
  [272] jmp [293]
  [275] peek 0
  [277] pushsymb 345 ............................ <#lock>
  [280] eq
  [281] jmpifz [293] ............................ (case) #lock:
  [284] pop 1
  [286] getprop 1439 ............................ <pLock>
  [289] pusharglistnoret 1 ...................... <pLock>
  [291] extcall 25 .............................. return pLock
  [293] pop 1 ................................... end case
  [295] pushzero ................................ <0>
  [296] pusharglistnoret 1 ...................... <0>
  [298] extcall 25 .............................. return 0
  [300] ret
end

on setProperty me, tProp, tValue
  [  0] getparam 1 .............................. <tProp>
  [  2] peek 0 .................................. case tProp of
  [  4] pushsymb 540 ............................ <#locX>
  [  7] eq
  [  8] jmpifz [ 23] ............................ (case) #locX:
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 2 .............................. <tValue>
  [ 15] pusharglistnoret 2 ...................... <me, tValue>
  [ 17] objcall 1360 ............................ me.moveX(tValue)
  [ 20] jmp [166]
  [ 23] peek 0
  [ 25] pushsymb 541 ............................ <#locY>
  [ 28] eq
  [ 29] jmpifz [ 44] ............................ (case) #locY:
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 2 .............................. <tValue>
  [ 36] pusharglistnoret 2 ...................... <me, tValue>
  [ 38] objcall 1361 ............................ me.moveY(tValue)
  [ 41] jmp [166]
  [ 44] peek 0
  [ 46] pushsymb 883 ............................ <#locZ>
  [ 49] eq
  [ 50] jmpifz [ 65] ............................ (case) #locZ:
  [ 53] getparam 0 .............................. <me>
  [ 55] getparam 2 .............................. <tValue>
  [ 57] pusharglistnoret 2 ...................... <me, tValue>
  [ 59] objcall 1347 ............................ me.moveZ(tValue)
  [ 62] jmp [166]
  [ 65] peek 0
  [ 67] pushsymb 974 ............................ <#boundary>
  [ 70] eq
  [ 71] jmpifz [ 82] ............................ (case) #boundary:
  [ 74] getparam 2 .............................. <tValue>
  [ 76] setprop 969 ............................. pBoundary = tValue
  [ 79] jmp [166]
  [ 82] peek 0
  [ 84] pushsymb 1013 ........................... <#title>
  [ 87] eq
  [ 88] jmpifz [ 99] ............................ (case) #title:
  [ 91] getparam 2 .............................. <tValue>
  [ 93] setprop 1365 ............................ pTitle = tValue
  [ 96] jmp [166]
  [ 99] peek 0
  [101] pushsymb 688 ............................ <#modal>
  [104] eq
  [105] jmpifz [116] ............................ (case) #modal:
  [108] getparam 2 .............................. <tValue>
  [110] setprop 1440 ............................ pModal = tValue
  [113] jmp [166]
  [116] peek 0
  [118] pushsymb 880 ............................ <#visible>
  [121] eq
  [122] jmpifz [150] ............................ (case) #visible:
  [125] getparam 2 .............................. <tValue>
  [127] jmpifz [140] ............................ if tValue then / else
  [130] getparam 0 .............................. <me>
  [132] pusharglistnoret 1 ...................... <me>
  [134] objcall 980 ............................. me.show()
  [137] jmp [147]
  [140] getparam 0 .............................. <me>
  [142] pusharglistnoret 1 ...................... <me>
  [144] objcall 979 ............................. me.hide()
  [147] jmp [166]
  [150] peek 0
  [152] pushsymb 1458 ........................... <#otherwise>
  [155] eq
  [156] jmpifz [166] ............................ (case) #otherwise:
  [159] pop 1
  [161] pushzero ................................ <0>
  [162] pusharglistnoret 1 ...................... <0>
  [164] extcall 25 .............................. return 0
  [166] pop 1 ................................... end case
  [168] pushint8 1 .............................. <1>
  [170] pusharglistnoret 1 ...................... <1>
  [172] extcall 25 .............................. return 1
  [174] ret
end

on setBlend me, tNewBlend
  [  0] getprop 1369 ............................ <pSpriteList>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 22
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 41] ............................ repeat with tsprite in pSpriteList
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 54
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <tsprite>
  [ 31] getparam 1 .............................. <tNewBlend>
  [ 33] setobjprop 503 .......................... tsprite.blend = tNewBlend
  [ 36] pushint8 1
  [ 38] add
  [ 39] endrepeat [ 11]
  [ 41] pop 3
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 25 .............................. return 1
  [ 49] ret
end

on mouseEnter me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 11 ............................. <#mouseEnter>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #mouseEnter, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#mouseEnter, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseEnter, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#mouseEnter, tSprID)
  [ 14] ret
end

on mouseLeave me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 12 ............................. <#mouseLeave>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #mouseLeave, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#mouseLeave, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseLeave, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#mouseLeave, tSprID)
  [ 14] ret
end

on mouseWithin me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 13 ............................. <#mouseWithin>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #mouseWithin, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#mouseWithin, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseWithin, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#mouseWithin, tSprID)
  [ 14] ret
end

on mouseDown me, tNull, tSprID
  [  0] getprop 1438 ............................ <pActive>
  [  3] not ..................................... <not pActive>
  [  4] getprop 1439 ............................ <pLock>
  [  7] not ..................................... <not pLock>
  [  8] and ..................................... <not pActive and not pLock>
  [  9] jmpifz [ 26] ............................ if not pActive and not pLock then
  [ 12] getprop 1449 ............................ <pWindowMngr>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 3 ............................... <me.getID()>
  [ 21] pusharglistnoret 2 ...................... <pWindowMngr, me.getID()>
  [ 23] objcall 341 ............................. pWindowMngr.Activate(me.getID())
  [ 26] getprop 1447 ............................ <pSpecialIDList>
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] pusharglist 2 ........................... <pSpecialIDList, tSprID>
  [ 33] objcall 519 ............................. <pSpecialIDList.getPos(tSprID)>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <pSpecialIDList.getPos(tSprID) <> 0>
  [ 38] jmpifz [ 78] ............................ if pSpecialIDList.getPos(tSprID) <> 0 then
  [ 41] getparam 2 .............................. <tSprID>
  [ 43] pushcons 0 .............................. <"drag">
  [ 45] containsstr ............................. <tSprID contains "drag">
  [ 46] jmpifz [ 61] ............................ if tSprID contains "drag" then / else
  [ 49] getparam 0 .............................. <me>
  [ 51] pushint8 1 .............................. <1>
  [ 53] pusharglistnoret 2 ...................... <me, 1>
  [ 55] objcall 1354 ............................ me.drag(1)
  [ 58] jmp [ 78]
  [ 61] getparam 2 .............................. <tSprID>
  [ 63] pushcons 2 .............................. <"scale">
  [ 65] containsstr ............................. <tSprID contains "scale">
  [ 66] jmpifz [ 78] ............................ if tSprID contains "scale" then
  [ 69] getparam 0 .............................. <me>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglistnoret 2 ...................... <me, 1>
  [ 75] objcall 1310 ............................ me.scale(1)
  [ 78] getparam 0 .............................. <me>
  [ 80] pushsymb 14 ............................. <#mouseDown>
  [ 82] getparam 2 .............................. <tSprID>
  [ 84] pusharglist 3 ........................... <me, #mouseDown, tSprID>
  [ 86] objcall 18 .............................. <me.redirectEvent(#mouseDown, tSprID)>
  [ 88] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseDown, tSprID)>
  [ 90] extcall 25 .............................. return me.redirectEvent(#mouseDown, tSprID)
  [ 92] ret
end

on mouseUp me, tNull, tSprID
  [  0] getprop 1447 ............................ <pSpecialIDList>
  [  3] getparam 2 .............................. <tSprID>
  [  5] pusharglist 2 ........................... <pSpecialIDList, tSprID>
  [  7] objcall 519 ............................. <pSpecialIDList.getPos(tSprID)>
  [ 10] pushzero ................................ <0>
  [ 11] nteq .................................... <pSpecialIDList.getPos(tSprID) <> 0>
  [ 12] jmpifz [ 95] ............................ if pSpecialIDList.getPos(tSprID) <> 0 then
  [ 15] getparam 2 .............................. <tSprID>
  [ 17] pushcons 0 .............................. <"drag">
  [ 19] containsstr ............................. <tSprID contains "drag">
  [ 20] jmpifz [ 34] ............................ if tSprID contains "drag" then / else
  [ 23] getparam 0 .............................. <me>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 2 ...................... <me, 0>
  [ 28] objcall 1354 ............................ me.drag(0)
  [ 31] jmp [ 95]
  [ 34] getparam 2 .............................. <tSprID>
  [ 36] pushcons 2 .............................. <"scale">
  [ 38] containsstr ............................. <tSprID contains "scale">
  [ 39] jmpifz [ 53] ............................ if tSprID contains "scale" then / else
  [ 42] getparam 0 .............................. <me>
  [ 44] pushzero ................................ <0>
  [ 45] pusharglistnoret 2 ...................... <me, 0>
  [ 47] objcall 1310 ............................ me.scale(0)
  [ 50] jmp [ 95]
  [ 53] getparam 2 .............................. <tSprID>
  [ 55] pushcons 1 .............................. <"close">
  [ 57] containsstr ............................. <tSprID contains "close">
  [ 58] jmpifz [ 95] ............................ if tSprID contains "close" then
  [ 61] getprop 1442 ............................ <pClientID>
  [ 64] pusharglist 1 ........................... <pClientID>
  [ 66] extcall 20 .............................. <voidp(pClientID)>
  [ 68] jmpifz [ 91] ............................ if voidp(pClientID) then / else
  [ 71] getprop 1449 ............................ <pWindowMngr>
  [ 74] getparam 0 .............................. <me>
  [ 76] pusharglist 1 ........................... <me>
  [ 78] objcall 3 ............................... <me.getID()>
  [ 80] pusharglist 2 ........................... <pWindowMngr, me.getID()>
  [ 82] objcall 125 ............................. <pWindowMngr.Remove(me.getID())>
  [ 84] pusharglistnoret 1 ...................... <pWindowMngr.Remove(me.getID())>
  [ 86] extcall 25 .............................. return pWindowMngr.Remove(me.getID())
  [ 88] jmp [ 95]
  [ 91] pushcons 1 .............................. <"close">
  [ 93] setparam 2 .............................. tSprID = "close"
  [ 95] getparam 0 .............................. <me>
  [ 97] pushsymb 0 .............................. <#mouseUp>
  [ 99] getparam 2 .............................. <tSprID>
  [101] pusharglist 3 ........................... <me, #mouseUp, tSprID>
  [103] objcall 18 .............................. <me.redirectEvent(#mouseUp, tSprID)>
  [105] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseUp, tSprID)>
  [107] extcall 25 .............................. return me.redirectEvent(#mouseUp, tSprID)
  [109] ret
end

on mouseUpOutSide me, tNull, tSprID
  [  0] getparam 2 .............................. <tSprID>
  [  2] pushcons 0 .............................. <"drag">
  [  4] containsstr ............................. <tSprID contains "drag">
  [  5] jmpifz [ 16] ............................ if tSprID contains "drag" then
  [  8] getparam 0 .............................. <me>
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 2 ...................... <me, 0>
  [ 13] objcall 1354 ............................ me.drag(0)
  [ 16] getparam 2 .............................. <tSprID>
  [ 18] pushcons 2 .............................. <"scale">
  [ 20] containsstr ............................. <tSprID contains "scale">
  [ 21] jmpifz [ 32] ............................ if tSprID contains "scale" then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 2 ...................... <me, 0>
  [ 29] objcall 1310 ............................ me.scale(0)
  [ 32] getparam 0 .............................. <me>
  [ 34] pushsymb 15 ............................. <#mouseUpOutSide>
  [ 36] getparam 2 .............................. <tSprID>
  [ 38] pusharglist 3 ........................... <me, #mouseUpOutSide, tSprID>
  [ 40] objcall 18 .............................. <me.redirectEvent(#mouseUpOutSide, tSprID)>
  [ 42] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseUpOutSide, tSprID)>
  [ 44] extcall 25 .............................. return me.redirectEvent(#mouseUpOutSide, tSprID)
  [ 46] ret
end

on keyDown me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 16 ............................. <#keyDown>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #keyDown, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#keyDown, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#keyDown, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#keyDown, tSprID)
  [ 14] ret
end

on keyUp me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 17 ............................. <#keyUp>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #keyUp, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#keyUp, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#keyUp, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#keyUp, tSprID)
  [ 14] ret
end

on supportedEvents me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tList = []
  [  5] getlocal 0 .............................. <tList>
  [  7] pushsymb 11 ............................. <#mouseEnter>
  [  9] pusharglistnoret 2 ...................... <tList, #mouseEnter>
  [ 11] objcall 122 ............................. tList.add(#mouseEnter)
  [ 13] getlocal 0 .............................. <tList>
  [ 15] pushsymb 12 ............................. <#mouseLeave>
  [ 17] pusharglistnoret 2 ...................... <tList, #mouseLeave>
  [ 19] objcall 122 ............................. tList.add(#mouseLeave)
  [ 21] getlocal 0 .............................. <tList>
  [ 23] pushsymb 13 ............................. <#mouseWithin>
  [ 25] pusharglistnoret 2 ...................... <tList, #mouseWithin>
  [ 27] objcall 122 ............................. tList.add(#mouseWithin)
  [ 29] getlocal 0 .............................. <tList>
  [ 31] pushsymb 14 ............................. <#mouseDown>
  [ 33] pusharglistnoret 2 ...................... <tList, #mouseDown>
  [ 35] objcall 122 ............................. tList.add(#mouseDown)
  [ 37] getlocal 0 .............................. <tList>
  [ 39] pushsymb 0 .............................. <#mouseUp>
  [ 41] pusharglistnoret 2 ...................... <tList, #mouseUp>
  [ 43] objcall 122 ............................. tList.add(#mouseUp)
  [ 45] getlocal 0 .............................. <tList>
  [ 47] pushsymb 15 ............................. <#mouseUpOutSide>
  [ 49] pusharglistnoret 2 ...................... <tList, #mouseUpOutSide>
  [ 51] objcall 122 ............................. tList.add(#mouseUpOutSide)
  [ 53] getlocal 0 .............................. <tList>
  [ 55] pushsymb 16 ............................. <#keyDown>
  [ 57] pusharglistnoret 2 ...................... <tList, #keyDown>
  [ 59] objcall 122 ............................. tList.add(#keyDown)
  [ 61] getlocal 0 .............................. <tList>
  [ 63] pushsymb 17 ............................. <#keyUp>
  [ 65] pusharglistnoret 2 ...................... <tList, #keyUp>
  [ 67] objcall 122 ............................. tList.add(#keyUp)
  [ 69] getlocal 0 .............................. <tList>
  [ 71] pusharglistnoret 1 ...................... <tList>
  [ 73] extcall 25 .............................. return tList
  [ 75] ret
end

on redirectEvent me, tEvent, tSprID
  [  0] getprop 1448 ............................ <pProcedures>
  [  3] getparam 1 .............................. <tEvent>
  [  5] pusharglist 2 ........................... <pProcedures, tEvent>
  [  7] objcall 54 .............................. <pProcedures[tEvent]>
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglist 2 ........................... <pProcedures[tEvent], 1>
  [ 13] objcall 54 .............................. <pProcedures[tEvent][1]>
  [ 15] setlocal 0 .............................. tMethod = pProcedures[tEvent][1]
  [ 17] getprop 1448 ............................ <pProcedures>
  [ 20] getparam 1 .............................. <tEvent>
  [ 22] pusharglist 2 ........................... <pProcedures, tEvent>
  [ 24] objcall 54 .............................. <pProcedures[tEvent]>
  [ 26] pushint8 2 .............................. <2>
  [ 28] pusharglist 2 ........................... <pProcedures[tEvent], 2>
  [ 30] objcall 54 .............................. <pProcedures[tEvent][2]>
  [ 32] setlocal 1 .............................. tTarget = pProcedures[tEvent][2]
  [ 34] getparam 1 .............................. <tEvent>
  [ 36] getprop 1444 ............................ <pElemList>
  [ 39] getparam 2 .............................. <tSprID>
  [ 41] pusharglist 2 ........................... <pElemList, tSprID>
  [ 43] objcall 54 .............................. <pElemList[tSprID]>
  [ 45] pusharglist 1 ........................... <[pElemList[tSprID]]>
  [ 47] pushlist ................................ <[pElemList[tSprID]]>
  [ 48] getparam 2 .............................. <tSprID>
  [ 50] pusharglist 3 ........................... <tEvent, [pElemList[tSprID]], tSprID>
  [ 52] extcall 68 .............................. <call(tEvent, [pElemList[tSprID]], tSprID)>
  [ 54] setlocal 2 .............................. tParam = call(tEvent, [pElemList[tSprID]], tSprID)
  [ 56] getlocal 2 .............................. <tParam>
  [ 58] pushzero ................................ <0>
  [ 59] eq ...................................... <tParam = 0>
  [ 60] getlocal 2 .............................. <tParam>
  [ 62] pusharglist 1 ........................... <tParam>
  [ 64] extcall 490 ............................. <ilk(tParam)>
  [ 67] pushsymb 957 ............................ <#integer>
  [ 70] eq ...................................... <ilk(tParam) = #integer>
  [ 71] and ..................................... <(tParam = 0) and (ilk(tParam) = #integer)>
  [ 72] jmpifz [ 80] ............................ if (tParam = 0) and (ilk(tParam) = #integer) then
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 1 ...................... <0>
  [ 78] extcall 25 .............................. return 0
  [ 80] getlocal 1 .............................. <tTarget>
  [ 82] pusharglist 1 ........................... <tTarget>
  [ 84] extcall 58 .............................. <getObject(tTarget)>
  [ 86] setlocal 3 .............................. tClient = getObject(tTarget)
  [ 88] getlocal 3 .............................. <tClient>
  [ 90] pushzero ................................ <0>
  [ 91] nteq .................................... <tClient <> 0>
  [ 92] jmpifz [122] ............................ if tClient <> 0 then / else
  [ 95] getlocal 0 .............................. <tMethod>
  [ 97] getlocal 3 .............................. <tClient>
  [ 99] getparam 1 .............................. <tEvent>
  [101] getparam 2 .............................. <tSprID>
  [103] getlocal 2 .............................. <tParam>
  [105] getparam 0 .............................. <me>
  [107] pusharglist 1 ........................... <me>
  [109] objcall 3 ............................... <me.getID()>
  [111] pusharglist 6 ........................... <tMethod, tClient, tEvent, tSprID, tParam, me.getID()>
  [113] extcall 68 .............................. <call(tMethod, tClient, tEvent, tSprID, tParam, me.getID())>
  [115] pusharglistnoret 1 ...................... <call(tMethod, tClient, tEvent, tSprID, tParam, me.getID())>
  [117] extcall 25 .............................. return call(tMethod, tClient, tEvent, tSprID, tParam, me.getID())
  [119] jmp [134]
  [122] getparam 0 .............................. <me>
  [124] getparam 1 .............................. <tEvent>
  [126] pusharglist 2 ........................... <me, tEvent>
  [128] objcall 2 ............................... <me.removeProcedure(tEvent)>
  [130] pusharglistnoret 1 ...................... <me.removeProcedure(tEvent)>
  [132] extcall 25 .............................. return me.removeProcedure(tEvent)
  [134] ret
end

on buildVisual me, tLayout
  [  0] pushsymb 459 ............................ <#layout_parser>
  [  3] pusharglist 1 ........................... <#layout_parser>
  [  5] extcall 58 .............................. <getObject(#layout_parser)>
  [  7] getparam 1 .............................. <tLayout>
  [  9] pusharglist 2 ........................... <getObject(#layout_parser), tLayout>
  [ 11] objcall 460 ............................. <getObject(#layout_parser).parse(tLayout)>
  [ 14] setparam 1 .............................. tLayout = getObject(#layout_parser).parse(tLayout)
  [ 16] getparam 1 .............................. <tLayout>
  [ 18] pusharglist 1 ........................... <tLayout>
  [ 20] extcall 53 .............................. <listp(tLayout)>
  [ 22] not ..................................... <not listp(tLayout)>
  [ 23] jmpifz [ 47] ............................ if not listp(tLayout) then
  [ 26] getparam 0 .............................. <me>
  [ 28] pushcons 8 .............................. <"Invalid window definition:">
  [ 30] getparam 1 .............................. <tLayout>
  [ 32] joinpadstr .............................. <"Invalid window definition:" && tLayout>
  [ 33] pushsymb 1364 ........................... <#buildVisual>
  [ 36] pushsymb 972 ............................ <#major>
  [ 39] pusharglist 4 ........................... <me, "Invalid window definition:" && tLayout, #buildVisual, #major>
  [ 41] extcall 39 .............................. <error(me, "Invalid window definition:" && tLayout, #buildVisual, #major)>
  [ 43] pusharglistnoret 1 ...................... <error(me, "Invalid window definition:" && tLayout, #buildVisual, #major)>
  [ 45] extcall 25 .............................. return error(me, "Invalid window definition:" && tLayout, #buildVisual, #major)
  [ 47] getprop 1445 ............................ <pGroupData>
  [ 50] getobjprop 22 ........................... <pGroupData.count>
  [ 52] setlocal 0 .............................. tGroupNum = pGroupData.count
  [ 54] pusharglist 0 ........................... <[:]>
  [ 56] pushproplist ............................ <[:]>
  [ 57] setlocal 1 .............................. tElemList = [:]
  [ 59] pusharglist 0 ........................... <[:]>
  [ 61] pushproplist ............................ <[:]>
  [ 62] setlocal 2 .............................. tmemberlist = [:]
  [ 64] pusharglist 0 ........................... <[:]>
  [ 66] pushproplist ............................ <[:]>
  [ 67] setlocal 3 .............................. tSpriteList = [:]
  [ 69] pushsymb 555 ............................ <#members>
  [ 72] pusharglist 0 ........................... <[]>
  [ 74] pushlist ................................ <[]>
  [ 75] pushsymb 1452 ........................... <#sprites>
  [ 78] pusharglist 0 ........................... <[]>
  [ 80] pushlist ................................ <[]>
  [ 81] pushsymb 1451 ........................... <#items>
  [ 84] pusharglist 0 ........................... <[]>
  [ 86] pushlist ................................ <[]>
  [ 87] pushsymb 557 ............................ <#rect>
  [ 90] pusharglist 0 ........................... <[]>
  [ 92] pushlist ................................ <[]>
  [ 93] pushsymb 1124 ........................... <#border>
  [ 96] pusharglist 0 ........................... <[]>
  [ 98] pushlist ................................ <[]>
  [ 99] pusharglist 10 .......................... <[#members: [], #sprites: [], #items: [], #rect: [], #border: []]>
  [101] pushproplist ............................ <[#members: [], #sprites: [], #items: [], #rect: [], #border: []]>
  [102] setlocal 4 .............................. tGroupData = [#members: [], #sprites: [], #items: [], #rect: [], #border: []]
  [104] pusharglist 0 ........................... <>
  [106] extcall 231 ............................. <getSpriteManager()>
  [108] setlocal 5 .............................. tSprManager = getSpriteManager()
  [110] pusharglist 0 ........................... <>
  [112] extcall 76 .............................. <getResourceManager()>
  [114] setlocal 6 .............................. tResManager = getResourceManager()
  [116] getparam 1 .............................. <tLayout>
  [118] pushsymb 998 ............................ <#elements>
  [121] pusharglist 2 ........................... <tLayout, #elements>
  [123] objcall 54 .............................. <tLayout[#elements]>
  [125] peek 0
  [127] pusharglist 1
  [129] extcall 22
  [131] pushint8 1
  [133] peek 0
  [135] peek 2
  [137] lteq
  [138] jmpifz [1568] ........................... repeat with tElement in tLayout[#elements]
  [141] peek 2
  [143] peek 1
  [145] pusharglist 2
  [147] extcall 54
  [149] setlocal 7
  [151] getlocal 7 .............................. <tElement>
  [153] pushint8 1 .............................. <1>
  [155] pusharglist 2 ........................... <tElement, 1>
  [157] objcall 54 .............................. <tElement[1]>
  [159] pushsymb 34 ............................. <#id>
  [161] pusharglist 2 ........................... <tElement[1], #id>
  [163] objcall 54 .............................. <tElement[1][#id]>
  [165] setlocal 8 .............................. tid = tElement[1][#id]
  [167] getprop 1444 ............................ <pElemList>
  [170] getlocal 8 .............................. <tid>
  [172] pusharglist 2 ........................... <pElemList, tid>
  [174] objcall 54 .............................. <pElemList[tid]>
  [176] pusharglist 1 ........................... <pElemList[tid]>
  [178] extcall 20 .............................. <voidp(pElemList[tid])>
  [180] not ..................................... <not voidp(pElemList[tid])>
  [181] jmpifz [191] ............................ if not voidp(pElemList[tid]) then
  [184] getlocal 8 .............................. <tid>
  [186] getlocal 0 .............................. <tGroupNum>
  [188] joinstr ................................. <tid & tGroupNum>
  [189] setlocal 8 .............................. tid = tid & tGroupNum
  [191] getlocal 6 .............................. <tResManager>
  [193] getparam 0 .............................. <me>
  [195] pusharglist 1 ........................... <me>
  [197] objcall 3 ............................... <me.getID()>
  [199] pushcons 9 .............................. <"_">
  [201] joinstr ................................. <me.getID() & "_">
  [202] getlocal 8 .............................. <tid>
  [204] joinstr ................................. <me.getID() & "_" & tid>
  [205] pushsymb 724 ............................ <#bitmap>
  [208] pusharglist 3 ........................... <tResManager, me.getID() & "_" & tid, #bitmap>
  [210] objcall 164 ............................. <tResManager.createMember(me.getID() & "_" & tid, #bitmap)>
  [212] pusharglist 1 ........................... <tResManager.createMember(me.getID() & "_" & tid, #bitmap)>
  [214] extcall 41 .............................. <member(tResManager.createMember(me.getID() & "_" & tid, #bitmap))>
  [216] setlocal 9 .............................. tmember = member(tResManager.createMember(me.getID() & "_" & tid, #bitmap))
  [218] getlocal 5 .............................. <tSprManager>
  [220] getparam 0 .............................. <me>
  [222] pusharglist 1 ........................... <me>
  [224] objcall 3 ............................... <me.getID()>
  [226] pusharglist 2 ........................... <tSprManager, me.getID()>
  [228] objcall 232 ............................. <tSprManager.reserveSprite(me.getID())>
  [230] pusharglist 1 ........................... <tSprManager.reserveSprite(me.getID())>
  [232] extcall 36 .............................. <sprite(tSprManager.reserveSprite(me.getID()))>
  [234] setlocal 10 ............................. tsprite = sprite(tSprManager.reserveSprite(me.getID()))
  [236] getlocal 10 ............................. <tsprite>
  [238] getobjprop 37 ........................... <tsprite.spriteNum>
  [240] pushint8 1 .............................. <1>
  [242] lt ...................................... <tsprite.spriteNum < 1>
  [243] jmpifz [367] ............................ if tsprite.spriteNum < 1 then
  [246] getlocal 3 .............................. <tSpriteList>
  [248] peek 0
  [250] pusharglist 1
  [252] extcall 22
  [254] pushint8 1
  [256] peek 0
  [258] peek 2
  [260] lteq
  [261] jmpifz [293] ............................ repeat with t_rSpr in tSpriteList
  [264] peek 2
  [266] peek 1
  [268] pusharglist 2
  [270] extcall 54
  [272] setlocal 11
  [274] getlocal 11 ............................. <t_rSpr>
  [276] getobjprop 37 ........................... <t_rSpr.spriteNum>
  [278] getparam 0 .............................. <me>
  [280] pusharglist 1 ........................... <me>
  [282] objcall 3 ............................... <me.getID()>
  [284] pusharglistnoret 2 ...................... <t_rSpr.spriteNum, me.getID()>
  [286] extcall 233 ............................. releaseSprite(t_rSpr.spriteNum, me.getID())
  [288] pushint8 1
  [290] add
  [291] endrepeat [256]
  [293] pop 3
  [295] pusharglist 0 ........................... <[:]>
  [297] pushproplist ............................ <[:]>
  [298] setlocal 3 .............................. tSpriteList = [:]
  [300] getlocal 2 .............................. <tmemberlist>
  [302] peek 0
  [304] pusharglist 1
  [306] extcall 22
  [308] pushint8 1
  [310] peek 0
  [312] peek 2
  [314] lteq
  [315] jmpifz [342] ............................ repeat with t_rMem in tmemberlist
  [318] peek 2
  [320] peek 1
  [322] pusharglist 2
  [324] extcall 54
  [326] setlocal 12
  [328] getlocal 12 ............................. <t_rMem>
  [330] getobjprop 727 .......................... <t_rMem.name>
  [333] pusharglistnoret 1 ...................... <t_rMem.name>
  [335] extcall 165 ............................. removeMember(t_rMem.name)
  [337] pushint8 1
  [339] add
  [340] endrepeat [310]
  [342] pop 3
  [344] pusharglist 0 ........................... <[:]>
  [346] pushproplist ............................ <[:]>
  [347] setlocal 2 .............................. tmemberlist = [:]
  [349] getparam 0 .............................. <me>
  [351] pushcons 10 ............................. <"Failed to build window. System out of sprites!">
  [353] pushsymb 1364 ........................... <#buildVisual>
  [356] pushsymb 972 ............................ <#major>
  [359] pusharglist 4 ........................... <me, "Failed to build window. System out of sprites!", #buildVisual, #major>
  [361] extcall 39 .............................. <error(me, "Failed to build window. System out of sprites!", #buildVisual, #major)>
  [363] pusharglistnoret 1 ...................... <error(me, "Failed to build window. System out of sprites!", #buildVisual, #major)>
  [365] extcall 25 .............................. return error(me, "Failed to build window. System out of sprites!", #buildVisual, #major)
  [367] getlocal 2 .............................. <tmemberlist>
  [369] getlocal 8 .............................. <tid>
  [371] getlocal 9 .............................. <tmember>
  [373] pusharglistnoret 3 ...................... <tmemberlist, tid, tmember>
  [375] objcall 24 .............................. tmemberlist[tid] = tmember
  [377] getlocal 3 .............................. <tSpriteList>
  [379] getlocal 8 .............................. <tid>
  [381] getlocal 10 ............................. <tsprite>
  [383] pusharglistnoret 3 ...................... <tSpriteList, tid, tsprite>
  [385] objcall 24 .............................. tSpriteList[tid] = tsprite
  [387] getlocal 10 ............................. <tsprite>
  [389] getlocal 9 .............................. <tmember>
  [391] getobjprop 660 .......................... <tmember.number>
  [394] setobjprop 884 .......................... tsprite.castNum = tmember.number
  [397] getlocal 10 ............................. <tsprite>
  [399] pushint8 8 .............................. <8>
  [401] setobjprop 562 .......................... tsprite.ink = 8
  [404] pushint16 2000 .......................... <2000>
  [407] pushint16 2000 .......................... <2000>
  [410] pushint16 2000 .......................... <2000>
  [413] inv ..................................... <-2000>
  [414] pushint16 2000 .......................... <2000>
  [417] inv ..................................... <-2000>
  [418] pusharglist 4 ........................... <2000, 2000, -2000, -2000>
  [420] extcall 557 ............................. <rect(2000, 2000, -2000, -2000)>
  [423] setlocal 13 ............................. tElemRect = rect(2000, 2000, -2000, -2000)
  [425] getlocal 4 .............................. <tGroupData>
  [427] pushsymb 555 ............................ <#members>
  [430] pusharglist 2 ........................... <tGroupData, #members>
  [432] objcall 54 .............................. <tGroupData[#members]>
  [434] getlocal 9 .............................. <tmember>
  [436] pusharglistnoret 2 ...................... <tGroupData[#members], tmember>
  [438] objcall 122 ............................. tGroupData[#members].add(tmember)
  [440] getlocal 4 .............................. <tGroupData>
  [442] pushsymb 1452 ........................... <#sprites>
  [445] pusharglist 2 ........................... <tGroupData, #sprites>
  [447] objcall 54 .............................. <tGroupData[#sprites]>
  [449] getlocal 10 ............................. <tsprite>
  [451] pusharglistnoret 2 ...................... <tGroupData[#sprites], tsprite>
  [453] objcall 122 ............................. tGroupData[#sprites].add(tsprite)
  [455] getlocal 5 .............................. <tSprManager>
  [457] getlocal 10 ............................. <tsprite>
  [459] getobjprop 37 ........................... <tsprite.spriteNum>
  [461] getlocal 8 .............................. <tid>
  [463] pusharglistnoret 3 ...................... <tSprManager, tsprite.spriteNum, tid>
  [465] objcall 234 ............................. tSprManager.setEventBroker(tsprite.spriteNum, tid)
  [467] getlocal 10 ............................. <tsprite>
  [469] pusharglist 0 ........................... <>
  [471] extcall 32 .............................. <VOID>
  [473] getparam 0 .............................. <me>
  [475] pusharglist 1 ........................... <me>
  [477] objcall 3 ............................... <me.getID()>
  [479] pusharglist 0 ........................... <>
  [481] extcall 32 .............................. <VOID>
  [483] pusharglistnoret 4 ...................... <tsprite, VOID, me.getID(), VOID>
  [485] objcall 1 ............................... tsprite.registerProcedure(VOID, me.getID(), VOID)
  [487] getlocal 7 .............................. <tElement>
  [489] pushint8 1 .............................. <1>
  [491] pusharglist 2 ........................... <tElement, 1>
  [493] objcall 54 .............................. <tElement[1]>
  [495] pushsymb 503 ............................ <#blend>
  [498] pusharglist 2 ........................... <tElement[1], #blend>
  [500] objcall 54 .............................. <tElement[1][#blend]>
  [502] setlocal 14 ............................. tBlend = tElement[1][#blend]
  [504] getlocal 7 .............................. <tElement>
  [506] pushint8 1 .............................. <1>
  [508] pusharglist 2 ........................... <tElement, 1>
  [510] objcall 54 .............................. <tElement[1]>
  [512] pushsymb 562 ............................ <#ink>
  [515] pusharglist 2 ........................... <tElement[1], #ink>
  [517] objcall 54 .............................. <tElement[1][#ink]>
  [519] setlocal 15 ............................. tInk = tElement[1][#ink]
  [521] getlocal 7 .............................. <tElement>
  [523] pushint8 1 .............................. <1>
  [525] pusharglist 2 ........................... <tElement, 1>
  [527] objcall 54 .............................. <tElement[1]>
  [529] pushsymb 599 ............................ <#color>
  [532] pusharglist 2 ........................... <tElement[1], #color>
  [534] objcall 54 .............................. <tElement[1][#color]>
  [536] setlocal 16 ............................. tColor = tElement[1][#color]
  [538] getlocal 7 .............................. <tElement>
  [540] pushint8 1 .............................. <1>
  [542] pusharglist 2 ........................... <tElement, 1>
  [544] objcall 54 .............................. <tElement[1]>
  [546] pushsymb 1300 ........................... <#bgColor>
  [549] pusharglist 2 ........................... <tElement[1], #bgColor>
  [551] objcall 54 .............................. <tElement[1][#bgColor]>
  [553] setlocal 17 ............................. tBgColor = tElement[1][#bgColor]
  [555] getlocal 7 .............................. <tElement>
  [557] pushint8 1 .............................. <1>
  [559] pusharglist 2 ........................... <tElement, 1>
  [561] objcall 54 .............................. <tElement[1]>
  [563] pushsymb 1301 ........................... <#palette>
  [566] pusharglist 2 ........................... <tElement[1], #palette>
  [568] objcall 54 .............................. <tElement[1][#palette]>
  [570] setlocal 18 ............................. tPalette = tElement[1][#palette]
  [572] pushint8 1 .............................. <1>
  [574] setlocal 19 ............................. tIsBlendShared = 1
  [576] pushint8 1 .............................. <1>
  [578] setlocal 20 ............................. tIsColorShared = 1
  [580] pushint8 1 .............................. <1>
  [582] setlocal 21 ............................. tIsBgColorShared = 1
  [584] pushint8 1 .............................. <1>
  [586] setlocal 22 ............................. tIsInkShared = 1
  [588] pushint8 1 .............................. <1>
  [590] setlocal 23 ............................. tIsPaletteShared = 1
  [592] getlocal 7 .............................. <tElement>
  [594] peek 0
  [596] pusharglist 1
  [598] extcall 22
  [600] pushint8 1
  [602] peek 0
  [604] peek 2
  [606] lteq
  [607] jmpifz [1063] ........................... repeat with tItem in tElement
  [610] peek 2
  [612] peek 1
  [614] pusharglist 2
  [616] extcall 54
  [618] setlocal 24
  [620] getlocal 24 ............................. <tItem>
  [622] pushsymb 34 ............................. <#id>
  [624] getlocal 8 .............................. <tid>
  [626] pusharglistnoret 3 ...................... <tItem, #id, tid>
  [628] objcall 24 .............................. tItem[#id] = tid
  [630] getlocal 24 ............................. <tItem>
  [632] pushsymb 1461 ........................... <#mother>
  [635] getparam 0 .............................. <me>
  [637] pusharglist 1 ........................... <me>
  [639] objcall 3 ............................... <me.getID()>
  [641] pusharglistnoret 3 ...................... <tItem, #mother, me.getID()>
  [643] objcall 24 .............................. tItem[#mother] = me.getID()
  [645] getlocal 24 ............................. <tItem>
  [647] pushsymb 464 ............................ <#buffer>
  [650] getlocal 9 .............................. <tmember>
  [652] pusharglistnoret 3 ...................... <tItem, #buffer, tmember>
  [654] objcall 24 .............................. tItem[#buffer] = tmember
  [656] getlocal 24 ............................. <tItem>
  [658] pushsymb 36 ............................. <#sprite>
  [660] getlocal 10 ............................. <tsprite>
  [662] pusharglistnoret 3 ...................... <tItem, #sprite, tsprite>
  [664] objcall 24 .............................. tItem[#sprite] = tsprite
  [666] getlocal 24 ............................. <tItem>
  [668] pushsymb 503 ............................ <#blend>
  [671] pusharglist 2 ........................... <tItem, #blend>
  [673] objcall 54 .............................. <tItem[#blend]>
  [675] getlocal 14 ............................. <tBlend>
  [677] nteq .................................... <tItem[#blend] <> tBlend>
  [678] jmpifz [684] ............................ if tItem[#blend] <> tBlend then
  [681] pushzero ................................ <0>
  [682] setlocal 19 ............................. tIsBlendShared = 0
  [684] getlocal 24 ............................. <tItem>
  [686] pushsymb 562 ............................ <#ink>
  [689] pusharglist 2 ........................... <tItem, #ink>
  [691] objcall 54 .............................. <tItem[#ink]>
  [693] getlocal 15 ............................. <tInk>
  [695] nteq .................................... <tItem[#ink] <> tInk>
  [696] jmpifz [702] ............................ if tItem[#ink] <> tInk then
  [699] pushzero ................................ <0>
  [700] setlocal 22 ............................. tIsInkShared = 0
  [702] getlocal 24 ............................. <tItem>
  [704] pushsymb 599 ............................ <#color>
  [707] pusharglist 2 ........................... <tItem, #color>
  [709] objcall 54 .............................. <tItem[#color]>
  [711] getlocal 16 ............................. <tColor>
  [713] nteq .................................... <tItem[#color] <> tColor>
  [714] jmpifz [720] ............................ if tItem[#color] <> tColor then
  [717] pushzero ................................ <0>
  [718] setlocal 20 ............................. tIsColorShared = 0
  [720] getlocal 24 ............................. <tItem>
  [722] pushsymb 1300 ........................... <#bgColor>
  [725] pusharglist 2 ........................... <tItem, #bgColor>
  [727] objcall 54 .............................. <tItem[#bgColor]>
  [729] getlocal 17 ............................. <tBgColor>
  [731] nteq .................................... <tItem[#bgColor] <> tBgColor>
  [732] jmpifz [738] ............................ if tItem[#bgColor] <> tBgColor then
  [735] pushzero ................................ <0>
  [736] setlocal 21 ............................. tIsBgColorShared = 0
  [738] getlocal 24 ............................. <tItem>
  [740] pushsymb 1301 ........................... <#palette>
  [743] pusharglist 2 ........................... <tItem, #palette>
  [745] objcall 54 .............................. <tItem[#palette]>
  [747] getlocal 18 ............................. <tPalette>
  [749] nteq .................................... <tItem[#palette] <> tPalette>
  [750] jmpifz [756] ............................ if tItem[#palette] <> tPalette then
  [753] pushzero ................................ <0>
  [754] setlocal 23 ............................. tIsPaletteShared = 0
  [756] getlocal 24 ............................. <tItem>
  [758] pushsymb 456 ............................ <#type>
  [761] pusharglist 2 ........................... <tItem, #type>
  [763] objcall 54 .............................. <tItem[#type]>
  [765] pushcons 11 ............................. <"image">
  [767] eq ...................................... <tItem[#type] = "image">
  [768] jmpifz [774] ............................ if tItem[#type] = "image" then
  [771] pushzero ................................ <0>
  [772] setlocal 23 ............................. tIsPaletteShared = 0
  [774] getlocal 24 ............................. <tItem>
  [776] pushsymb 452 ............................ <#flipH>
  [779] pusharglist 2 ........................... <tItem, #flipH>
  [781] objcall 54 .............................. <tItem[#flipH]>
  [783] jmpifz [801] ............................ if tItem[#flipH] then
  [786] getlocal 24 ............................. <tItem>
  [788] getlocal 24 ............................. <tItem>
  [790] getobjprop 506 .......................... <tItem.locH>
  [793] getlocal 24 ............................. <tItem>
  [795] getobjprop 42 ........................... <tItem.width>
  [797] sub ..................................... <tItem.locH - tItem.width>
  [798] setobjprop 506 .......................... tItem.locH = tItem.locH - tItem.width
  [801] getlocal 24 ............................. <tItem>
  [803] pushsymb 453 ............................ <#flipV>
  [806] pusharglist 2 ........................... <tItem, #flipV>
  [808] objcall 54 .............................. <tItem[#flipV]>
  [810] jmpifz [828] ............................ if tItem[#flipV] then
  [813] getlocal 24 ............................. <tItem>
  [815] getlocal 24 ............................. <tItem>
  [817] getobjprop 507 .......................... <tItem.locV>
  [820] getlocal 24 ............................. <tItem>
  [822] getobjprop 43 ........................... <tItem.height>
  [824] sub ..................................... <tItem.locV - tItem.height>
  [825] setobjprop 507 .......................... tItem.locV = tItem.locV - tItem.height
  [828] getlocal 24 ............................. <tItem>
  [830] pushsymb 506 ............................ <#locH>
  [833] pusharglist 2 ........................... <tItem, #locH>
  [835] objcall 54 .............................. <tItem[#locH]>
  [837] getlocal 13 ............................. <tElemRect>
  [839] pushint8 1 .............................. <1>
  [841] pusharglist 2 ........................... <tElemRect, 1>
  [843] objcall 54 .............................. <tElemRect[1]>
  [845] lt ...................................... <tItem[#locH] < tElemRect[1]>
  [846] jmpifz [866] ............................ if tItem[#locH] < tElemRect[1] then
  [849] getlocal 13 ............................. <tElemRect>
  [851] pushint8 1 .............................. <1>
  [853] getlocal 24 ............................. <tItem>
  [855] pushsymb 506 ............................ <#locH>
  [858] pusharglist 2 ........................... <tItem, #locH>
  [860] objcall 54 .............................. <tItem[#locH]>
  [862] pusharglistnoret 3 ...................... <tElemRect, 1, tItem[#locH]>
  [864] objcall 24 .............................. tElemRect[1] = tItem[#locH]
  [866] getlocal 24 ............................. <tItem>
  [868] pushsymb 507 ............................ <#locV>
  [871] pusharglist 2 ........................... <tItem, #locV>
  [873] objcall 54 .............................. <tItem[#locV]>
  [875] getlocal 13 ............................. <tElemRect>
  [877] pushint8 2 .............................. <2>
  [879] pusharglist 2 ........................... <tElemRect, 2>
  [881] objcall 54 .............................. <tElemRect[2]>
  [883] lt ...................................... <tItem[#locV] < tElemRect[2]>
  [884] jmpifz [904] ............................ if tItem[#locV] < tElemRect[2] then
  [887] getlocal 13 ............................. <tElemRect>
  [889] pushint8 2 .............................. <2>
  [891] getlocal 24 ............................. <tItem>
  [893] pushsymb 507 ............................ <#locV>
  [896] pusharglist 2 ........................... <tItem, #locV>
  [898] objcall 54 .............................. <tItem[#locV]>
  [900] pusharglistnoret 3 ...................... <tElemRect, 2, tItem[#locV]>
  [902] objcall 24 .............................. tElemRect[2] = tItem[#locV]
  [904] getlocal 24 ............................. <tItem>
  [906] pushsymb 506 ............................ <#locH>
  [909] pusharglist 2 ........................... <tItem, #locH>
  [911] objcall 54 .............................. <tItem[#locH]>
  [913] getlocal 24 ............................. <tItem>
  [915] pushsymb 42 ............................. <#width>
  [917] pusharglist 2 ........................... <tItem, #width>
  [919] objcall 54 .............................. <tItem[#width]>
  [921] add ..................................... <tItem[#locH] + tItem[#width]>
  [922] getlocal 13 ............................. <tElemRect>
  [924] pushint8 3 .............................. <3>
  [926] pusharglist 2 ........................... <tElemRect, 3>
  [928] objcall 54 .............................. <tElemRect[3]>
  [930] gt ...................................... <(tItem[#locH] + tItem[#width]) > tElemRect[3]>
  [931] jmpifz [960] ............................ if (tItem[#locH] + tItem[#width]) > tElemRect[3] then
  [934] getlocal 13 ............................. <tElemRect>
  [936] pushint8 3 .............................. <3>
  [938] getlocal 24 ............................. <tItem>
  [940] pushsymb 506 ............................ <#locH>
  [943] pusharglist 2 ........................... <tItem, #locH>
  [945] objcall 54 .............................. <tItem[#locH]>
  [947] getlocal 24 ............................. <tItem>
  [949] pushsymb 42 ............................. <#width>
  [951] pusharglist 2 ........................... <tItem, #width>
  [953] objcall 54 .............................. <tItem[#width]>
  [955] add ..................................... <tItem[#locH] + tItem[#width]>
  [956] pusharglistnoret 3 ...................... <tElemRect, 3, tItem[#locH] + tItem[#width]>
  [958] objcall 24 .............................. tElemRect[3] = tItem[#locH] + tItem[#width]
  [960] getlocal 24 ............................. <tItem>
  [962] pushsymb 507 ............................ <#locV>
  [965] pusharglist 2 ........................... <tItem, #locV>
  [967] objcall 54 .............................. <tItem[#locV]>
  [969] getlocal 24 ............................. <tItem>
  [971] pushsymb 43 ............................. <#height>
  [973] pusharglist 2 ........................... <tItem, #height>
  [975] objcall 54 .............................. <tItem[#height]>
  [977] add ..................................... <tItem[#locV] + tItem[#height]>
  [978] getlocal 13 ............................. <tElemRect>
  [980] pushint8 4 .............................. <4>
  [982] pusharglist 2 ........................... <tElemRect, 4>
  [984] objcall 54 .............................. <tElemRect[4]>
  [986] gt ...................................... <(tItem[#locV] + tItem[#height]) > tElemRect[4]>
  [987] jmpifz [1016] ........................... if (tItem[#locV] + tItem[#height]) > tElemRect[4] then
  [990] getlocal 13 ............................. <tElemRect>
  [992] pushint8 4 .............................. <4>
  [994] getlocal 24 ............................. <tItem>
  [996] pushsymb 507 ............................ <#locV>
  [999] pusharglist 2 ........................... <tItem, #locV>
  [1001] objcall 54 ............................. <tItem[#locV]>
  [1003] getlocal 24 ............................ <tItem>
  [1005] pushsymb 43 ............................ <#height>
  [1007] pusharglist 2 .......................... <tItem, #height>
  [1009] objcall 54 ............................. <tItem[#height]>
  [1011] add .................................... <tItem[#locV] + tItem[#height]>
  [1012] pusharglistnoret 3 ..................... <tElemRect, 4, tItem[#locV] + tItem[#height]>
  [1014] objcall 24 ............................. tElemRect[4] = tItem[#locV] + tItem[#height]
  [1016] getlocal 24 ............................ <tItem>
  [1018] pushsymb 45 ............................ <#cursor>
  [1020] pusharglist 2 .......................... <tItem, #cursor>
  [1022] objcall 54 ............................. <tItem[#cursor]>
  [1024] pusharglist 1 .......................... <tItem[#cursor]>
  [1026] extcall 20 ............................. <voidp(tItem[#cursor])>
  [1028] not .................................... <not voidp(tItem[#cursor])>
  [1029] jmpifz [1049] .......................... if not voidp(tItem[#cursor]) then
  [1032] getlocal 10 ............................ <tsprite>
  [1034] getlocal 24 ............................ <tItem>
  [1036] pushsymb 45 ............................ <#cursor>
  [1038] pusharglist 2 .......................... <tItem, #cursor>
  [1040] objcall 54 ............................. <tItem[#cursor]>
  [1042] pusharglistnoret 2 ..................... <tsprite, tItem[#cursor]>
  [1044] objcall 8 .............................. tsprite.setcursor(tItem[#cursor])
  [1046] jmp [1057] ............................. next repeat
  [1049] getlocal 10 ............................ <tsprite>
  [1051] pushsymb 47 ............................ <#arrow>
  [1053] pusharglistnoret 2 ..................... <tsprite, #arrow>
  [1055] objcall 8 .............................. tsprite.setcursor(#arrow)
  [1057] pushint8 1
  [1059] add
  [1060] endrepeat [602]
  [1063] pop 3
  [1065] getlocal 23 ............................ <tIsPaletteShared>
  [1067] getlocal 18 ............................ <tPalette>
  [1069] pusharglist 1 .......................... <tPalette>
  [1071] extcall 20 ............................. <voidp(tPalette)>
  [1073] not .................................... <not voidp(tPalette)>
  [1074] and .................................... <tIsPaletteShared and not voidp(tPalette)>
  [1075] jmpifz [1126] .......................... if tIsPaletteShared and not voidp(tPalette) then / else
  [1078] getlocal 18 ............................ <tPalette>
  [1080] pusharglist 1 .......................... <tPalette>
  [1082] extcall 38 ............................. <stringp(tPalette)>
  [1084] jmpifz [1101] .......................... if stringp(tPalette) then
  [1087] getlocal 6 ............................. <tResManager>
  [1089] getlocal 18 ............................ <tPalette>
  [1091] pusharglist 2 .......................... <tResManager, tPalette>
  [1093] objcall 52 ............................. <tResManager.getmemnum(tPalette)>
  [1095] pusharglist 1 .......................... <tResManager.getmemnum(tPalette)>
  [1097] extcall 41 ............................. <member(tResManager.getmemnum(tPalette))>
  [1099] setlocal 18 ............................ tPalette = member(tResManager.getmemnum(tPalette))
  [1101] getlocal 9 ............................. <tmember>
  [1103] getlocal 13 ............................ <tElemRect>
  [1105] getobjprop 42 .......................... <tElemRect.width>
  [1107] getlocal 13 ............................ <tElemRect>
  [1109] getobjprop 43 .......................... <tElemRect.height>
  [1111] pushint8 8 ............................. <8>
  [1113] getlocal 18 ............................ <tPalette>
  [1115] pusharglist 4 .......................... <tElemRect.width, tElemRect.height, 8, tPalette>
  [1117] extcall 502 ............................ <image(tElemRect.width, tElemRect.height, 8, tPalette)>
  [1120] setobjprop 502 ......................... tmember.image = image(tElemRect.width, tElemRect.height, 8, tPalette)
  [1123] jmp [1148]
  [1126] getlocal 9 ............................. <tmember>
  [1128] getlocal 13 ............................ <tElemRect>
  [1130] getobjprop 42 .......................... <tElemRect.width>
  [1132] getlocal 13 ............................ <tElemRect>
  [1134] getobjprop 43 .......................... <tElemRect.height>
  [1136] pushint8 6 ............................. <6>
  [1138] get 7 .................................. <the colorDepth>
  [1140] pusharglist 3 .......................... <tElemRect.width, tElemRect.height, the colorDepth>
  [1142] extcall 502 ............................ <image(tElemRect.width, tElemRect.height, the colorDepth)>
  [1145] setobjprop 502 ......................... tmember.image = image(tElemRect.width, tElemRect.height, the colorDepth)
  [1148] getlocal 9 ............................. <tmember>
  [1150] pushzero ............................... <0>
  [1151] pushzero ............................... <0>
  [1152] pusharglist 2 .......................... <0, 0>
  [1154] extcall 510 ............................ <point(0, 0)>
  [1157] setobjprop 501 ......................... tmember.regPoint = point(0, 0)
  [1160] getlocal 7 ............................. <tElement>
  [1162] getobjprop 22 .......................... <tElement.count>
  [1164] pushint8 1 ............................. <1>
  [1166] eq ..................................... <tElement.count = 1>
  [1167] jmpifz [1222] .......................... if tElement.count = 1 then / else
  [1170] getlocal 7 ............................. <tElement>
  [1172] pushint8 1 ............................. <1>
  [1174] pusharglist 2 .......................... <tElement, 1>
  [1176] objcall 54 ............................. <tElement[1]>
  [1178] setlocal 24 ............................ tItem = tElement[1]
  [1180] getlocal 24 ............................ <tItem>
  [1182] pushsymb 1462 .......................... <#style>
  [1185] pushsymb 993 ........................... <#unique>
  [1188] pusharglistnoret 3 ..................... <tItem, #style, #unique>
  [1190] objcall 24 ............................. tItem[#style] = #unique
  [1192] getlocal 19 ............................ <tIsBlendShared>
  [1194] jmpifz [1208] .......................... if tIsBlendShared then
  [1197] getlocal 24 ............................ <tItem>
  [1199] pushsymb 503 ........................... <#blend>
  [1202] pushint8 100 ........................... <100>
  [1204] pusharglistnoret 3 ..................... <tItem, #blend, 100>
  [1206] objcall 24 ............................. tItem[#blend] = 100
  [1208] getparam 0 ............................. <me>
  [1210] getlocal 24 ............................ <tItem>
  [1212] pusharglist 2 .......................... <me, tItem>
  [1214] objcall 1434 ........................... <me.CreateElement(tItem)>
  [1217] setlocal 25 ............................ tWrapper = me.CreateElement(tItem)
  [1219] jmp [1417]
  [1222] pushsymb 34 ............................ <#id>
  [1224] getlocal 8 ............................. <tid>
  [1226] pushsymb 456 ........................... <#type>
  [1229] pushsymb 992 ........................... <#wrapper>
  [1232] pushsymb 1462 .......................... <#style>
  [1235] pushsymb 992 ........................... <#wrapper>
  [1238] pushsymb 464 ........................... <#buffer>
  [1241] getlocal 9 ............................. <tmember>
  [1243] pushsymb 36 ............................ <#sprite>
  [1245] getlocal 10 ............................ <tsprite>
  [1247] pushsymb 540 ........................... <#locX>
  [1250] getlocal 13 ............................ <tElemRect>
  [1252] pushint8 1 ............................. <1>
  [1254] pusharglist 2 .......................... <tElemRect, 1>
  [1256] objcall 54 ............................. <tElemRect[1]>
  [1258] pushsymb 541 ........................... <#locY>
  [1261] getlocal 13 ............................ <tElemRect>
  [1263] pushint8 2 ............................. <2>
  [1265] pusharglist 2 .......................... <tElemRect, 2>
  [1267] objcall 54 ............................. <tElemRect[2]>
  [1269] pusharglist 14 ......................... <[#id: tid, #type: #wrapper, #style: #wrapper, #buffer: tmember, #sprite: tsprite, #locX: tElemRect[1], #locY: tElemRect[2]]>
  [1271] pushproplist ........................... <[#id: tid, #type: #wrapper, #style: #wrapper, #buffer: tmember, #sprite: tsprite, #locX: tElemRect[1], #locY: tElemRect[2]]>
  [1272] setlocal 26 ............................ tProps = [#id: tid, #type: #wrapper, #style: #wrapper, #buffer: tmember, #sprite: tsprite, #locX: tElemRect[1], #locY: tElemRect[2]]
  [1274] getparam 0 ............................. <me>
  [1276] getlocal 26 ............................ <tProps>
  [1278] pusharglist 2 .......................... <me, tProps>
  [1280] objcall 1434 ........................... <me.CreateElement(tProps)>
  [1283] setlocal 25 ............................ tWrapper = me.CreateElement(tProps)
  [1285] getlocal 7 ............................. <tElement>
  [1287] peek 0
  [1289] pusharglist 1
  [1291] extcall 22
  [1293] pushint8 1
  [1295] peek 0
  [1297] peek 2
  [1299] lteq
  [1300] jmpifz [1415] .......................... repeat with tItem in tElement
  [1303] peek 2
  [1305] peek 1
  [1307] pusharglist 2
  [1309] extcall 54
  [1311] setlocal 24
  [1313] getlocal 24 ............................ <tItem>
  [1315] pushsymb 506 ........................... <#locH>
  [1318] getlocal 24 ............................ <tItem>
  [1320] pushsymb 506 ........................... <#locH>
  [1323] pusharglist 2 .......................... <tItem, #locH>
  [1325] objcall 54 ............................. <tItem[#locH]>
  [1327] getlocal 13 ............................ <tElemRect>
  [1329] pushint8 1 ............................. <1>
  [1331] pusharglist 2 .......................... <tElemRect, 1>
  [1333] objcall 54 ............................. <tElemRect[1]>
  [1335] sub .................................... <tItem[#locH] - tElemRect[1]>
  [1336] pusharglistnoret 3 ..................... <tItem, #locH, tItem[#locH] - tElemRect[1]>
  [1338] objcall 24 ............................. tItem[#locH] = tItem[#locH] - tElemRect[1]
  [1340] getlocal 24 ............................ <tItem>
  [1342] pushsymb 507 ........................... <#locV>
  [1345] getlocal 24 ............................ <tItem>
  [1347] pushsymb 507 ........................... <#locV>
  [1350] pusharglist 2 .......................... <tItem, #locV>
  [1352] objcall 54 ............................. <tItem[#locV]>
  [1354] getlocal 13 ............................ <tElemRect>
  [1356] pushint8 2 ............................. <2>
  [1358] pusharglist 2 .......................... <tElemRect, 2>
  [1360] objcall 54 ............................. <tElemRect[2]>
  [1362] sub .................................... <tItem[#locV] - tElemRect[2]>
  [1363] pusharglistnoret 3 ..................... <tItem, #locV, tItem[#locV] - tElemRect[2]>
  [1365] objcall 24 ............................. tItem[#locV] = tItem[#locV] - tElemRect[2]
  [1367] getlocal 24 ............................ <tItem>
  [1369] pushsymb 1462 .......................... <#style>
  [1372] pushsymb 994 ........................... <#grouped>
  [1375] pusharglistnoret 3 ..................... <tItem, #style, #grouped>
  [1377] objcall 24 ............................. tItem[#style] = #grouped
  [1379] getlocal 19 ............................ <tIsBlendShared>
  [1381] jmpifz [1395] .......................... if tIsBlendShared then
  [1384] getlocal 24 ............................ <tItem>
  [1386] pushsymb 503 ........................... <#blend>
  [1389] pushint8 100 ........................... <100>
  [1391] pusharglistnoret 3 ..................... <tItem, #blend, 100>
  [1393] objcall 24 ............................. tItem[#blend] = 100
  [1395] getlocal 25 ............................ <tWrapper>
  [1397] getparam 0 ............................. <me>
  [1399] getlocal 24 ............................ <tItem>
  [1401] pusharglist 2 .......................... <me, tItem>
  [1403] objcall 1434 ........................... <me.CreateElement(tItem)>
  [1406] pusharglistnoret 2 ..................... <tWrapper, me.CreateElement(tItem)>
  [1408] objcall 122 ............................ tWrapper.add(me.CreateElement(tItem))
  [1410] pushint8 1
  [1412] add
  [1413] endrepeat [1295]
  [1415] pop 3
  [1417] getlocal 25 ............................ <tWrapper>
  [1419] pusharglist 1 .......................... <tWrapper>
  [1421] extcall 112 ............................ <objectp(tWrapper)>
  [1423] jmpifz [1452] .......................... if objectp(tWrapper) then
  [1426] getlocal 1 ............................. <tElemList>
  [1428] getlocal 8 ............................. <tid>
  [1430] getlocal 25 ............................ <tWrapper>
  [1432] pusharglistnoret 3 ..................... <tElemList, tid, tWrapper>
  [1434] objcall 575 ............................ tElemList.addProp(tid, tWrapper)
  [1437] getlocal 4 ............................. <tGroupData>
  [1439] pushsymb 1451 .......................... <#items>
  [1442] pusharglist 2 .......................... <tGroupData, #items>
  [1444] objcall 54 ............................. <tGroupData[#items]>
  [1446] getlocal 25 ............................ <tWrapper>
  [1448] pusharglistnoret 2 ..................... <tGroupData[#items], tWrapper>
  [1450] objcall 122 ............................ tGroupData[#items].add(tWrapper)
  [1452] getlocal 19 ............................ <tIsBlendShared>
  [1454] jmpifz [1464] .......................... if tIsBlendShared then
  [1457] getlocal 10 ............................ <tsprite>
  [1459] getlocal 14 ............................ <tBlend>
  [1461] setobjprop 503 ......................... tsprite.blend = tBlend
  [1464] getlocal 22 ............................ <tIsInkShared>
  [1466] jmpifz [1476] .......................... if tIsInkShared then
  [1469] getlocal 10 ............................ <tsprite>
  [1471] getlocal 15 ............................ <tInk>
  [1473] setobjprop 562 ......................... tsprite.ink = tInk
  [1476] getlocal 20 ............................ <tIsColorShared>
  [1478] jmpifz [1488] .......................... if tIsColorShared then
  [1481] getlocal 10 ............................ <tsprite>
  [1483] getlocal 16 ............................ <tColor>
  [1485] setobjprop 599 ......................... tsprite.color = tColor
  [1488] getlocal 21 ............................ <tIsBgColorShared>
  [1490] jmpifz [1500] .......................... if tIsBgColorShared then
  [1493] getlocal 10 ............................ <tsprite>
  [1495] getlocal 17 ............................ <tBgColor>
  [1497] setobjprop 1300 ........................ tsprite.bgColor = tBgColor
  [1500] getlocal 10 ............................ <tsprite>
  [1502] getlocal 13 ............................ <tElemRect>
  [1504] pushint8 1 ............................. <1>
  [1506] pusharglist 2 .......................... <tElemRect, 1>
  [1508] objcall 54 ............................. <tElemRect[1]>
  [1510] getprop 1446 ........................... <pClientRect>
  [1513] pushint8 1 ............................. <1>
  [1515] pusharglist 2 .......................... <pClientRect, 1>
  [1517] objcall 54 ............................. <pClientRect[1]>
  [1519] add .................................... <tElemRect[1] + pClientRect[1]>
  [1520] setobjprop 506 ......................... tsprite.locH = tElemRect[1] + pClientRect[1]
  [1523] getlocal 10 ............................ <tsprite>
  [1525] getlocal 13 ............................ <tElemRect>
  [1527] pushint8 2 ............................. <2>
  [1529] pusharglist 2 .......................... <tElemRect, 2>
  [1531] objcall 54 ............................. <tElemRect[2]>
  [1533] getprop 1446 ........................... <pClientRect>
  [1536] pushint8 2 ............................. <2>
  [1538] pusharglist 2 .......................... <pClientRect, 2>
  [1540] objcall 54 ............................. <pClientRect[2]>
  [1542] add .................................... <tElemRect[2] + pClientRect[2]>
  [1543] setobjprop 507 ......................... tsprite.locV = tElemRect[2] + pClientRect[2]
  [1546] getlocal 10 ............................ <tsprite>
  [1548] getlocal 13 ............................ <tElemRect>
  [1550] getobjprop 42 .......................... <tElemRect.width>
  [1552] setobjprop 42 .......................... tsprite.width = tElemRect.width
  [1554] getlocal 10 ............................ <tsprite>
  [1556] getlocal 13 ............................ <tElemRect>
  [1558] getobjprop 43 .......................... <tElemRect.height>
  [1560] setobjprop 43 .......................... tsprite.height = tElemRect.height
  [1562] pushint8 1
  [1564] add
  [1565] endrepeat [133]
  [1568] pop 3
  [1570] getlocal 4 ............................. <tGroupData>
  [1572] pushsymb 557 ........................... <#rect>
  [1575] getparam 1 ............................. <tLayout>
  [1577] pushsymb 557 ........................... <#rect>
  [1580] pusharglist 2 .......................... <tLayout, #rect>
  [1582] objcall 54 ............................. <tLayout[#rect]>
  [1584] pushint8 1 ............................. <1>
  [1586] pusharglist 2 .......................... <tLayout[#rect], 1>
  [1588] objcall 54 ............................. <tLayout[#rect][1]>
  [1590] pusharglistnoret 3 ..................... <tGroupData, #rect, tLayout[#rect][1]>
  [1592] objcall 24 ............................. tGroupData[#rect] = tLayout[#rect][1]
  [1594] getlocal 4 ............................. <tGroupData>
  [1596] pushsymb 1124 .......................... <#border>
  [1599] getparam 1 ............................. <tLayout>
  [1601] pushsymb 1124 .......................... <#border>
  [1604] pusharglist 2 .......................... <tLayout, #border>
  [1606] objcall 54 ............................. <tLayout[#border]>
  [1608] pushint8 1 ............................. <1>
  [1610] pusharglist 2 .......................... <tLayout[#border], 1>
  [1612] objcall 54 ............................. <tLayout[#border][1]>
  [1614] pusharglistnoret 3 ..................... <tGroupData, #border, tLayout[#border][1]>
  [1616] objcall 24 ............................. tGroupData[#border] = tLayout[#border][1]
  [1618] getlocal 0 ............................. <tGroupNum>
  [1620] pushzero ............................... <0>
  [1621] eq ..................................... <tGroupNum = 0>
  [1622] jmpifz [1700] .......................... if tGroupNum = 0 then / else
  [1625] getprop 467 ............................ <pLocX>
  [1628] getlocal 4 ............................. <tGroupData>
  [1630] pushsymb 557 ........................... <#rect>
  [1633] pusharglist 2 .......................... <tGroupData, #rect>
  [1635] objcall 54 ............................. <tGroupData[#rect]>
  [1637] pushint8 1 ............................. <1>
  [1639] pusharglist 2 .......................... <tGroupData[#rect], 1>
  [1641] objcall 54 ............................. <tGroupData[#rect][1]>
  [1643] add .................................... <pLocX + tGroupData[#rect][1]>
  [1644] setprop 467 ............................ pLocX = pLocX + tGroupData[#rect][1]
  [1647] getprop 469 ............................ <pLocY>
  [1650] getlocal 4 ............................. <tGroupData>
  [1652] pushsymb 557 ........................... <#rect>
  [1655] pusharglist 2 .......................... <tGroupData, #rect>
  [1657] objcall 54 ............................. <tGroupData[#rect]>
  [1659] pushint8 2 ............................. <2>
  [1661] pusharglist 2 .......................... <tGroupData[#rect], 2>
  [1663] objcall 54 ............................. <tGroupData[#rect][2]>
  [1665] add .................................... <pLocY + tGroupData[#rect][2]>
  [1666] setprop 469 ............................ pLocY = pLocY + tGroupData[#rect][2]
  [1669] getlocal 4 ............................. <tGroupData>
  [1671] pushsymb 557 ........................... <#rect>
  [1674] pusharglist 2 .......................... <tGroupData, #rect>
  [1676] objcall 54 ............................. <tGroupData[#rect]>
  [1678] getobjprop 42 .......................... <tGroupData[#rect].width>
  [1680] setprop 499 ............................ pwidth = tGroupData[#rect].width
  [1683] getlocal 4 ............................. <tGroupData>
  [1685] pushsymb 557 ........................... <#rect>
  [1688] pusharglist 2 .......................... <tGroupData, #rect>
  [1690] objcall 54 ............................. <tGroupData[#rect]>
  [1692] getobjprop 43 .......................... <tGroupData[#rect].height>
  [1694] setprop 505 ............................ pheight = tGroupData[#rect].height
  [1697] jmp [1793]
  [1700] getprop 1446 ........................... <pClientRect>
  [1703] pushint8 1 ............................. <1>
  [1705] pusharglist 2 .......................... <pClientRect, 1>
  [1707] objcall 54 ............................. <pClientRect[1]>
  [1709] getprop 1446 ........................... <pClientRect>
  [1712] pushint8 3 ............................. <3>
  [1714] pusharglist 2 .......................... <pClientRect, 3>
  [1716] objcall 54 ............................. <pClientRect[3]>
  [1718] add .................................... <pClientRect[1] + pClientRect[3]>
  [1719] getlocal 4 ............................. <tGroupData>
  [1721] pushsymb 557 ........................... <#rect>
  [1724] pusharglist 2 .......................... <tGroupData, #rect>
  [1726] objcall 54 ............................. <tGroupData[#rect]>
  [1728] getobjprop 42 .......................... <tGroupData[#rect].width>
  [1730] add .................................... <pClientRect[1] + pClientRect[3] + tGroupData[#rect].width>
  [1731] setlocal 27 ............................ tNewW = pClientRect[1] + pClientRect[3] + tGroupData[#rect].width
  [1733] getprop 1446 ........................... <pClientRect>
  [1736] pushint8 2 ............................. <2>
  [1738] pusharglist 2 .......................... <pClientRect, 2>
  [1740] objcall 54 ............................. <pClientRect[2]>
  [1742] getprop 1446 ........................... <pClientRect>
  [1745] pushint8 4 ............................. <4>
  [1747] pusharglist 2 .......................... <pClientRect, 4>
  [1749] objcall 54 ............................. <pClientRect[4]>
  [1751] add .................................... <pClientRect[2] + pClientRect[4]>
  [1752] getlocal 4 ............................. <tGroupData>
  [1754] pushsymb 557 ........................... <#rect>
  [1757] pusharglist 2 .......................... <tGroupData, #rect>
  [1759] objcall 54 ............................. <tGroupData[#rect]>
  [1761] getobjprop 43 .......................... <tGroupData[#rect].height>
  [1763] add .................................... <pClientRect[2] + pClientRect[4] + tGroupData[#rect].height>
  [1764] setlocal 28 ............................ tNewH = pClientRect[2] + pClientRect[4] + tGroupData[#rect].height
  [1766] getlocal 27 ............................ <tNewW>
  [1768] getprop 499 ............................ <pwidth>
  [1771] nteq ................................... <tNewW <> pwidth>
  [1772] getlocal 28 ............................ <tNewH>
  [1774] getprop 505 ............................ <pheight>
  [1777] nteq ................................... <tNewH <> pheight>
  [1778] or ..................................... <(tNewW <> pwidth) or (tNewH <> pheight)>
  [1779] jmpifz [1793] .......................... if (tNewW <> pwidth) or (tNewH <> pheight) then
  [1782] getparam 0 ............................. <me>
  [1784] getlocal 27 ............................ <tNewW>
  [1786] getlocal 28 ............................ <tNewH>
  [1788] pusharglistnoret 3 ..................... <me, tNewW, tNewH>
  [1790] objcall 1010 ........................... me.resizeTo(tNewW, tNewH)
  [1793] getprop 1446 ........................... <pClientRect>
  [1796] getlocal 4 ............................. <tGroupData>
  [1798] pushsymb 1124 .......................... <#border>
  [1801] pusharglist 2 .......................... <tGroupData, #border>
  [1803] objcall 54 ............................. <tGroupData[#border]>
  [1805] add .................................... <pClientRect + tGroupData[#border]>
  [1806] setprop 1446 ........................... pClientRect = pClientRect + tGroupData[#border]
  [1809] pushint8 1 ............................. <1>
  [1811] setlocal 29
  [1813] getlocal 29
  [1815] getlocal 3 ............................. <tSpriteList>
  [1817] getobjprop 22 .......................... <tSpriteList.count>
  [1819] lteq
  [1820] jmpifz [1950] .......................... repeat with i = 1 to tSpriteList.count
  [1823] getlocal 3 ............................. <tSpriteList>
  [1825] getlocal 29 ............................ <i>
  [1827] pusharglist 2 .......................... <tSpriteList, i>
  [1829] objcall 54 ............................. <tSpriteList[i]>
  [1831] getobjprop 511 ......................... <tSpriteList[i].loc>
  [1834] getlocal 4 ............................. <tGroupData>
  [1836] pushsymb 557 ........................... <#rect>
  [1839] pusharglist 2 .......................... <tGroupData, #rect>
  [1841] objcall 54 ............................. <tGroupData[#rect]>
  [1843] pushint8 1 ............................. <1>
  [1845] pusharglist 2 .......................... <tGroupData[#rect], 1>
  [1847] objcall 54 ............................. <tGroupData[#rect][1]>
  [1849] getlocal 4 ............................. <tGroupData>
  [1851] pushsymb 557 ........................... <#rect>
  [1854] pusharglist 2 .......................... <tGroupData, #rect>
  [1856] objcall 54 ............................. <tGroupData[#rect]>
  [1858] pushint8 2 ............................. <2>
  [1860] pusharglist 2 .......................... <tGroupData[#rect], 2>
  [1862] objcall 54 ............................. <tGroupData[#rect][2]>
  [1864] pusharglist 2 .......................... <[tGroupData[#rect][1], tGroupData[#rect][2]]>
  [1866] pushlist ............................... <[tGroupData[#rect][1], tGroupData[#rect][2]]>
  [1867] sub .................................... <tSpriteList[i].loc - [tGroupData[#rect][1], tGroupData[#rect][2]]>
  [1868] setlocal 30 ............................ tloc = tSpriteList[i].loc - [tGroupData[#rect][1], tGroupData[#rect][2]]
  [1870] getlocal 3 ............................. <tSpriteList>
  [1872] getlocal 29 ............................ <i>
  [1874] pusharglist 2 .......................... <tSpriteList, i>
  [1876] objcall 54 ............................. <tSpriteList[i]>
  [1878] getprop 467 ............................ <pLocX>
  [1881] getprop 469 ............................ <pLocY>
  [1884] pusharglist 2 .......................... <pLocX, pLocY>
  [1886] extcall 510 ............................ <point(pLocX, pLocY)>
  [1889] getlocal 30 ............................ <tloc>
  [1891] add .................................... <point(pLocX, pLocY) + tloc>
  [1892] setobjprop 511 ......................... tSpriteList[i].loc = point(pLocX, pLocY) + tloc
  [1895] getlocal 2 ............................. <tmemberlist>
  [1897] getlocal 29 ............................ <i>
  [1899] pusharglist 2 .......................... <tmemberlist, i>
  [1901] objcall 23 ............................. <tmemberlist.getPropAt(i)>
  [1903] setlocal 8 ............................. tid = tmemberlist.getPropAt(i)
  [1905] getprop 1443 ........................... <pMemberList>
  [1908] getlocal 8 ............................. <tid>
  [1910] getlocal 2 ............................. <tmemberlist>
  [1912] getlocal 8 ............................. <tid>
  [1914] pusharglist 2 .......................... <tmemberlist, tid>
  [1916] objcall 54 ............................. <tmemberlist[tid]>
  [1918] pusharglistnoret 3 ..................... <pMemberList, tid, tmemberlist[tid]>
  [1920] objcall 575 ............................ pMemberList.addProp(tid, tmemberlist[tid])
  [1923] getprop 1369 ........................... <pSpriteList>
  [1926] getlocal 8 ............................. <tid>
  [1928] getlocal 3 ............................. <tSpriteList>
  [1930] getlocal 8 ............................. <tid>
  [1932] pusharglist 2 .......................... <tSpriteList, tid>
  [1934] objcall 54 ............................. <tSpriteList[tid]>
  [1936] pusharglistnoret 3 ..................... <pSpriteList, tid, tSpriteList[tid]>
  [1938] objcall 575 ............................ pSpriteList.addProp(tid, tSpriteList[tid])
  [1941] pushint8 1
  [1943] getlocal 29
  [1945] add
  [1946] setlocal 29
  [1948] endrepeat [1813]
  [1950] pushint8 1 ............................. <1>
  [1952] setlocal 29
  [1954] getlocal 29
  [1956] getlocal 1 ............................. <tElemList>
  [1958] getobjprop 22 .......................... <tElemList.count>
  [1960] lteq
  [1961] jmpifz [1997] .......................... repeat with i = 1 to tElemList.count
  [1964] getprop 1444 ........................... <pElemList>
  [1967] getlocal 1 ............................. <tElemList>
  [1969] getlocal 29 ............................ <i>
  [1971] pusharglist 2 .......................... <tElemList, i>
  [1973] objcall 23 ............................. <tElemList.getPropAt(i)>
  [1975] getlocal 1 ............................. <tElemList>
  [1977] getlocal 29 ............................ <i>
  [1979] pusharglist 2 .......................... <tElemList, i>
  [1981] objcall 54 ............................. <tElemList[i]>
  [1983] pusharglistnoret 3 ..................... <pElemList, tElemList.getPropAt(i), tElemList[i]>
  [1985] objcall 575 ............................ pElemList.addProp(tElemList.getPropAt(i), tElemList[i])
  [1988] pushint8 1
  [1990] getlocal 29
  [1992] add
  [1993] setlocal 29
  [1995] endrepeat [1954]
  [1997] getprop 1445 ........................... <pGroupData>
  [2000] getlocal 4 ............................. <tGroupData>
  [2002] pusharglistnoret 2 ..................... <pGroupData, tGroupData>
  [2004] objcall 122 ............................ pGroupData.add(tGroupData)
  [2006] pushsymb 437 ........................... <#prepare>
  [2009] getlocal 4 ............................. <tGroupData>
  [2011] pushsymb 1451 .......................... <#items>
  [2014] pusharglist 2 .......................... <tGroupData, #items>
  [2016] objcall 54 ............................. <tGroupData[#items]>
  [2018] pusharglistnoret 2 ..................... <#prepare, tGroupData[#items]>
  [2020] extcall 68 ............................. call(#prepare, tGroupData[#items])
  [2022] pushsymb 449 ........................... <#render>
  [2025] getlocal 4 ............................. <tGroupData>
  [2027] pushsymb 1451 .......................... <#items>
  [2030] pusharglist 2 .......................... <tGroupData, #items>
  [2032] objcall 54 ............................. <tGroupData[#items]>
  [2034] pusharglistnoret 2 ..................... <#render, tGroupData[#items]>
  [2036] extcall 68 ............................. call(#render, tGroupData[#items])
  [2038] pushint8 1 ............................. <1>
  [2040] pusharglistnoret 1 ..................... <1>
  [2042] extcall 25 ............................. return 1
  [2044] ret
end

on prepare me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 1396 ......................... <the mouseH>
  [  5] getprop 1482 ............................ <pScaleOffset>
  [  8] pushint8 1 .............................. <1>
  [ 10] pusharglist 2 ........................... <pScaleOffset, 1>
  [ 12] objcall 54 .............................. <pScaleOffset[1]>
  [ 14] sub ..................................... <the mouseH - pScaleOffset[1]>
  [ 15] setlocal 0 .............................. tOffX = the mouseH - pScaleOffset[1]
  [ 17] pusharglist 0 ........................... <>
  [ 19] thebuiltin 552 .......................... <the mouseV>
  [ 22] getprop 1482 ............................ <pScaleOffset>
  [ 25] pushint8 2 .............................. <2>
  [ 27] pusharglist 2 ........................... <pScaleOffset, 2>
  [ 29] objcall 54 .............................. <pScaleOffset[2]>
  [ 31] sub ..................................... <the mouseV - pScaleOffset[2]>
  [ 32] setlocal 1 .............................. tOffY = the mouseV - pScaleOffset[2]
  [ 34] getmovieprop 1090 ....................... <the mouseLoc>
  [ 37] setprop 1482 ............................ pScaleOffset = the mouseLoc
  [ 40] getprop 499 ............................. <pwidth>
  [ 43] getlocal 0 .............................. <tOffX>
  [ 45] add ..................................... <pwidth + tOffX>
  [ 46] pushint8 64 ............................. <64>
  [ 48] lt ...................................... <(pwidth + tOffX) < 64>
  [ 49] jmpifz [ 60] ............................ if (pwidth + tOffX) < 64 then
  [ 52] pushint8 64 ............................. <64>
  [ 54] getprop 499 ............................. <pwidth>
  [ 57] sub ..................................... <64 - pwidth>
  [ 58] setlocal 0 .............................. tOffX = 64 - pwidth
  [ 60] getprop 505 ............................. <pheight>
  [ 63] getlocal 1 .............................. <tOffY>
  [ 65] add ..................................... <pheight + tOffY>
  [ 66] pushint8 64 ............................. <64>
  [ 68] lt ...................................... <(pheight + tOffY) < 64>
  [ 69] jmpifz [ 80] ............................ if (pheight + tOffY) < 64 then
  [ 72] pushint8 64 ............................. <64>
  [ 74] getprop 505 ............................. <pheight>
  [ 77] sub ..................................... <64 - pheight>
  [ 78] setlocal 1 .............................. tOffY = 64 - pheight
  [ 80] getparam 0 .............................. <me>
  [ 82] getlocal 0 .............................. <tOffX>
  [ 84] getlocal 1 .............................. <tOffY>
  [ 86] pusharglistnoret 3 ...................... <me, tOffX, tOffY>
  [ 88] objcall 1428 ............................ me.resizeBy(tOffX, tOffY)
  [ 91] ret
end

on update me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <>
  [  4] thebuiltin 1396 ......................... <the mouseH>
  [  7] getprop 1373 ............................ <pDragOffset>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglist 2 ........................... <pDragOffset, 1>
  [ 14] objcall 54 .............................. <pDragOffset[1]>
  [ 16] sub ..................................... <the mouseH - pDragOffset[1]>
  [ 17] pusharglist 0 ........................... <>
  [ 19] thebuiltin 552 .......................... <the mouseV>
  [ 22] getprop 1373 ............................ <pDragOffset>
  [ 25] pushint8 2 .............................. <2>
  [ 27] pusharglist 2 ........................... <pDragOffset, 2>
  [ 29] objcall 54 .............................. <pDragOffset[2]>
  [ 31] sub ..................................... <the mouseV - pDragOffset[2]>
  [ 32] pusharglistnoret 3 ...................... <me, the mouseH - pDragOffset[1], the mouseV - pDragOffset[2]>
  [ 34] objcall 1009 ............................ me.moveTo(the mouseH - pDragOffset[1], the mouseV - pDragOffset[2])
  [ 37] ret
end

on CreateElement me, tProps
  [  0] getprop 1450 ............................ <pElemClsList>
  [  3] getparam 1 .............................. <tProps>
  [  5] pushsymb 1462 ........................... <#style>
  [  8] pusharglist 2 ........................... <tProps, #style>
  [ 10] objcall 54 .............................. <tProps[#style]>
  [ 12] pusharglist 2 ........................... <pElemClsList, tProps[#style]>
  [ 14] objcall 54 .............................. <pElemClsList[tProps[#style]]>
  [ 16] setlocal 0 .............................. tTemplate = pElemClsList[tProps[#style]]
  [ 18] getparam 1 .............................. <tProps>
  [ 20] pushsymb 456 ............................ <#type>
  [ 23] pusharglist 2 ........................... <tProps, #type>
  [ 25] objcall 54 .............................. <tProps[#type]>
  [ 27] setlocal 1 .............................. ttype = tProps[#type]
  [ 29] getparam 1 .............................. <tProps>
  [ 31] pushsymb 457 ............................ <#model>
  [ 34] pusharglist 2 ........................... <tProps, #model>
  [ 36] objcall 54 .............................. <tProps[#model]>
  [ 38] setlocal 2 .............................. tmodel = tProps[#model]
  [ 40] pushcons 12 ............................. <"window.">
  [ 42] getlocal 1 .............................. <ttype>
  [ 44] joinstr ................................. <"window." & ttype>
  [ 45] getlocal 2 .............................. <tmodel>
  [ 47] joinstr ................................. <"window." & ttype & tmodel>
  [ 48] pushcons 13 ............................. <".class">
  [ 50] joinstr ................................. <"window." & ttype & tmodel & ".class">
  [ 51] setlocal 3 .............................. tClass = "window." & ttype & tmodel & ".class"
  [ 53] getprop 1450 ............................ <pElemClsList>
  [ 56] getlocal 3 .............................. <tClass>
  [ 58] pusharglist 2 ........................... <pElemClsList, tClass>
  [ 60] objcall 54 .............................. <pElemClsList[tClass]>
  [ 62] pusharglist 1 ........................... <pElemClsList[tClass]>
  [ 64] extcall 20 .............................. <voidp(pElemClsList[tClass])>
  [ 66] not ..................................... <not voidp(pElemClsList[tClass])>
  [ 67] jmpifz [ 84] ............................ if not voidp(pElemClsList[tClass]) then / else
  [ 70] getprop 1450 ............................ <pElemClsList>
  [ 73] getlocal 3 .............................. <tClass>
  [ 75] pusharglist 2 ........................... <pElemClsList, tClass>
  [ 77] objcall 54 .............................. <pElemClsList[tClass]>
  [ 79] setlocal 4 .............................. tClsStruct = pElemClsList[tClass]
  [ 81] jmp [122]
  [ 84] getlocal 3 .............................. <tClass>
  [ 86] pusharglist 1 ........................... <tClass>
  [ 88] extcall 376 ............................. <variableExists(tClass)>
  [ 91] jmpifz [116] ............................ if variableExists(tClass) then / else
  [ 94] getlocal 3 .............................. <tClass>
  [ 96] pusharglist 1 ........................... <tClass>
  [ 98] extcall 155 ............................. <getClassVariable(tClass)>
  [100] setlocal 4 .............................. tClsStruct = getClassVariable(tClass)
  [102] getprop 1450 ............................ <pElemClsList>
  [105] getlocal 3 .............................. <tClass>
  [107] getlocal 4 .............................. <tClsStruct>
  [109] pusharglistnoret 3 ...................... <pElemClsList, tClass, tClsStruct>
  [111] objcall 24 .............................. pElemClsList[tClass] = tClsStruct
  [113] jmp [122]
  [116] pusharglist 0 ........................... <>
  [118] extcall 32 .............................. <VOID>
  [120] setlocal 4 .............................. tClsStruct = VOID
  [122] getlocal 4 .............................. <tClsStruct>
  [124] pusharglist 1 ........................... <tClsStruct>
  [126] extcall 20 .............................. <voidp(tClsStruct)>
  [128] jmpifz [145] ............................ if voidp(tClsStruct) then / else
  [131] pushsymb 658 ............................ <#temp>
  [134] getlocal 0 .............................. <tTemplate>
  [136] pusharglist 2 ........................... <#temp, tTemplate>
  [138] extcall 94 .............................. <createObject(#temp, tTemplate)>
  [140] setlocal 5 .............................. tElement = createObject(#temp, tTemplate)
  [142] jmp [158]
  [145] pushsymb 658 ............................ <#temp>
  [148] getlocal 0 .............................. <tTemplate>
  [150] getlocal 4 .............................. <tClsStruct>
  [152] pusharglist 3 ........................... <#temp, tTemplate, tClsStruct>
  [154] extcall 94 .............................. <createObject(#temp, tTemplate, tClsStruct)>
  [156] setlocal 5 .............................. tElement = createObject(#temp, tTemplate, tClsStruct)
  [158] getlocal 5 .............................. <tElement>
  [160] not ..................................... <not tElement>
  [161] jmpifz [194] ............................ if not tElement then
  [164] getparam 0 .............................. <me>
  [166] pushcons 14 ............................. <"Illegal element type:">
  [168] getparam 1 .............................. <tProps>
  [170] pushsymb 34 ............................. <#id>
  [172] pusharglist 2 ........................... <tProps, #id>
  [174] objcall 54 .............................. <tProps[#id]>
  [176] joinpadstr .............................. <"Illegal element type:" && tProps[#id]>
  [177] getlocal 3 .............................. <tClass>
  [179] joinpadstr .............................. <"Illegal element type:" && tProps[#id] && tClass>
  [180] pushsymb 1434 ........................... <#CreateElement>
  [183] pushsymb 972 ............................ <#major>
  [186] pusharglist 4 ........................... <me, "Illegal element type:" && tProps[#id] && tClass, #CreateElement, #major>
  [188] extcall 39 .............................. <error(me, "Illegal element type:" && tProps[#id] && tClass, #CreateElement, #major)>
  [190] pusharglistnoret 1 ...................... <error(me, "Illegal element type:" && tProps[#id] && tClass, #CreateElement, #major)>
  [192] extcall 25 .............................. return error(me, "Illegal element type:" && tProps[#id] && tClass, #CreateElement, #major)
  [194] getlocal 5 .............................. <tElement>
  [196] getparam 1 .............................. <tProps>
  [198] pushsymb 34 ............................. <#id>
  [200] pusharglist 2 ........................... <tProps, #id>
  [202] objcall 54 .............................. <tProps[#id]>
  [204] pusharglistnoret 2 ...................... <tElement, tProps[#id]>
  [206] objcall 4 ............................... tElement.setID(tProps[#id])
  [208] getlocal 5 .............................. <tElement>
  [210] getparam 1 .............................. <tProps>
  [212] pusharglistnoret 2 ...................... <tElement, tProps>
  [214] objcall 436 ............................. tElement.define(tProps)
  [217] getlocal 5 .............................. <tElement>
  [219] pusharglistnoret 1 ...................... <tElement>
  [221] extcall 25 .............................. return tElement
  [223] ret
end

on createProcListTemplate me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tList = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 1433 ............................ <me.supportedEvents()>
  [ 12] peek 0
  [ 14] pusharglist 1
  [ 16] extcall 22
  [ 18] pushint8 1
  [ 20] peek 0
  [ 22] peek 2
  [ 24] lteq
  [ 25] jmpifz [ 62] ............................ repeat with tEvent in me.supportedEvents()
  [ 28] peek 2
  [ 30] peek 1
  [ 32] pusharglist 2
  [ 34] extcall 54
  [ 36] setlocal 1
  [ 38] getlocal 0 .............................. <tList>
  [ 40] getlocal 1 .............................. <tEvent>
  [ 42] pushsymb 33 ............................. <#null>
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglist 1 ........................... <me>
  [ 48] objcall 3 ............................... <me.getID()>
  [ 50] pusharglist 2 ........................... <[#null, me.getID()]>
  [ 52] pushlist ................................ <[#null, me.getID()]>
  [ 53] pusharglistnoret 3 ...................... <tList, tEvent, [#null, me.getID()]>
  [ 55] objcall 24 .............................. tList[tEvent] = [#null, me.getID()]
  [ 57] pushint8 1
  [ 59] add
  [ 60] endrepeat [ 20]
  [ 62] pop 3
  [ 64] getlocal 0 .............................. <tList>
  [ 66] pusharglistnoret 1 ...................... <tList>
  [ 68] extcall 25 .............................. return tList
  [ 70] ret
end

on scale me, tBoolean
  [  0] getparam 1 .............................. <tBoolean>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tBoolean = 1>
  [  5] getprop 1441 ............................ <pScaleFlag>
  [  8] pushzero ................................ <0>
  [  9] eq ...................................... <pScaleFlag = 0>
  [ 10] and ..................................... <(tBoolean = 1) and (pScaleFlag = 0)>
  [ 11] jmpifz [ 38] ............................ if (tBoolean = 1) and (pScaleFlag = 0) then / else
  [ 14] getmovieprop 1090 ....................... <the mouseLoc>
  [ 17] setprop 1482 ............................ pScaleOffset = the mouseLoc
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 1 ........................... <me>
  [ 24] objcall 3 ............................... <me.getID()>
  [ 26] pusharglistnoret 1 ...................... <me.getID()>
  [ 28] extcall 106 ............................. receivePrepare(me.getID())
  [ 30] pushint8 1 .............................. <1>
  [ 32] setprop 1441 ............................ pScaleFlag = 1
  [ 35] jmp [ 66]
  [ 38] getparam 1 .............................. <tBoolean>
  [ 40] pushzero ................................ <0>
  [ 41] eq ...................................... <tBoolean = 0>
  [ 42] getprop 1441 ............................ <pScaleFlag>
  [ 45] pushint8 1 .............................. <1>
  [ 47] eq ...................................... <pScaleFlag = 1>
  [ 48] and ..................................... <(tBoolean = 0) and (pScaleFlag = 1)>
  [ 49] jmpifz [ 66] ............................ if (tBoolean = 0) and (pScaleFlag = 1) then
  [ 52] getparam 0 .............................. <me>
  [ 54] pusharglist 1 ........................... <me>
  [ 56] objcall 3 ............................... <me.getID()>
  [ 58] pusharglistnoret 1 ...................... <me.getID()>
  [ 60] extcall 107 ............................. removePrepare(me.getID())
  [ 62] pushzero ................................ <0>
  [ 63] setprop 1441 ............................ pScaleFlag = 0
  [ 66] pushint8 1 .............................. <1>
  [ 68] pusharglistnoret 1 ...................... <1>
  [ 70] extcall 25 .............................. return 1
  [ 72] ret
end

on drag me, tBoolean
  [  0] getparam 1 .............................. <tBoolean>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tBoolean = 1>
  [  5] getprop 1372 ............................ <pDragFlag>
  [  8] pushzero ................................ <0>
  [  9] eq ...................................... <pDragFlag = 0>
  [ 10] and ..................................... <(tBoolean = 1) and (pDragFlag = 0)>
  [ 11] jmpifz [ 48] ............................ if (tBoolean = 1) and (pDragFlag = 0) then / else
  [ 14] getmovieprop 1090 ....................... <the mouseLoc>
  [ 17] getprop 467 ............................. <pLocX>
  [ 20] getprop 469 ............................. <pLocY>
  [ 23] pusharglist 2 ........................... <[pLocX, pLocY]>
  [ 25] pushlist ................................ <[pLocX, pLocY]>
  [ 26] sub ..................................... <the mouseLoc - [pLocX, pLocY]>
  [ 27] setprop 1373 ............................ pDragOffset = the mouseLoc - [pLocX, pLocY]
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglist 1 ........................... <me>
  [ 34] objcall 3 ............................... <me.getID()>
  [ 36] pusharglistnoret 1 ...................... <me.getID()>
  [ 38] extcall 108 ............................. receiveUpdate(me.getID())
  [ 40] pushint8 1 .............................. <1>
  [ 42] setprop 1372 ............................ pDragFlag = 1
  [ 45] jmp [ 76]
  [ 48] getparam 1 .............................. <tBoolean>
  [ 50] pushzero ................................ <0>
  [ 51] eq ...................................... <tBoolean = 0>
  [ 52] getprop 1372 ............................ <pDragFlag>
  [ 55] pushint8 1 .............................. <1>
  [ 57] eq ...................................... <pDragFlag = 1>
  [ 58] and ..................................... <(tBoolean = 0) and (pDragFlag = 1)>
  [ 59] jmpifz [ 76] ............................ if (tBoolean = 0) and (pDragFlag = 1) then
  [ 62] getparam 0 .............................. <me>
  [ 64] pusharglist 1 ........................... <me>
  [ 66] objcall 3 ............................... <me.getID()>
  [ 68] pusharglistnoret 1 ...................... <me.getID()>
  [ 70] extcall 109 ............................. removeUpdate(me.getID())
  [ 72] pushzero ................................ <0>
  [ 73] setprop 1372 ............................ pDragFlag = 0
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 1 ...................... <1>
  [ 80] extcall 25 .............................. return 1
  [ 82] ret
end

on draw me, tRGB
  [  0] pushsymb 1435 ........................... <#draw>
  [  3] getprop 1444 ............................ <pElemList>
  [  6] getparam 1 .............................. <tRGB>
  [  8] pusharglistnoret 3 ...................... <#draw, pElemList, tRGB>
  [ 10] extcall 68 .............................. call(#draw, pElemList, tRGB)
  [ 12] ret
end

on moveX me, tOffX
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1369 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 51] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1369 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1369 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 506 .......................... <pSpriteList[i].locH>
  [ 36] getparam 1 .............................. <tOffX>
  [ 38] add ..................................... <pSpriteList[i].locH + tOffX>
  [ 39] setobjprop 506 .......................... pSpriteList[i].locH = pSpriteList[i].locH + tOffX
  [ 42] pushint8 1
  [ 44] getlocal 0
  [ 46] add
  [ 47] setlocal 0
  [ 49] endrepeat [  4]
  [ 51] ret
end

on moveY me, tOffY
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1369 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 51] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1369 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1369 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 507 .......................... <pSpriteList[i].locV>
  [ 36] getparam 1 .............................. <tOffY>
  [ 38] add ..................................... <pSpriteList[i].locV + tOffY>
  [ 39] setobjprop 507 .......................... pSpriteList[i].locV = pSpriteList[i].locV + tOffY
  [ 42] pushint8 1
  [ 44] getlocal 0
  [ 46] add
  [ 47] setlocal 0
  [ 49] endrepeat [  4]
  [ 51] ret
end

on moveXY me, tOffX, tOffY
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1369 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 56] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1369 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1369 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 511 .......................... <pSpriteList[i].loc>
  [ 36] getparam 1 .............................. <tOffX>
  [ 38] getparam 2 .............................. <tOffY>
  [ 40] pusharglist 2 ........................... <[tOffX, tOffY]>
  [ 42] pushlist ................................ <[tOffX, tOffY]>
  [ 43] add ..................................... <pSpriteList[i].loc + [tOffX, tOffY]>
  [ 44] setobjprop 511 .......................... pSpriteList[i].loc = pSpriteList[i].loc + [tOffX, tOffY]
  [ 47] pushint8 1
  [ 49] getlocal 0
  [ 51] add
  [ 52] setlocal 0
  [ 54] endrepeat [  4]
  [ 56] ret
end

on null me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 25 .............................. return 0
  [  5] ret
end

on movePartBy me, ttype, tX, tY, tInverse
  [  0] getprop 1369 ............................ <pSpriteList>
  [  3] getparam 1 .............................. <ttype>
  [  5] pusharglist 2 ........................... <pSpriteList, ttype>
  [  7] objcall 54 .............................. <pSpriteList[ttype]>
  [  9] setlocal 0 .............................. tsprite = pSpriteList[ttype]
  [ 11] getlocal 0 .............................. <tsprite>
  [ 13] pusharglist 1 ........................... <tsprite>
  [ 15] extcall 20 .............................. <voidp(tsprite)>
  [ 17] jmpifz [ 25] ............................ if voidp(tsprite) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 25 .............................. return 0
  [ 25] getparam 4 .............................. <tInverse>
  [ 27] jmpifz [105] ............................ if tInverse then / else
  [ 30] pushint8 1 .............................. <1>
  [ 32] setlocal 1
  [ 34] getlocal 1
  [ 36] getprop 1369 ............................ <pSpriteList>
  [ 39] getobjprop 22 ........................... <pSpriteList.count>
  [ 41] lteq
  [ 42] jmpifz [102] ............................ repeat with i = 1 to pSpriteList.count
  [ 45] getprop 1369 ............................ <pSpriteList>
  [ 48] getlocal 1 .............................. <i>
  [ 50] pusharglist 2 ........................... <pSpriteList, i>
  [ 52] objcall 23 .............................. <pSpriteList.getPropAt(i)>
  [ 54] setlocal 2 .............................. tSymbol = pSpriteList.getPropAt(i)
  [ 56] getlocal 2 .............................. <tSymbol>
  [ 58] getparam 1 .............................. <ttype>
  [ 60] nteq .................................... <tSymbol <> ttype>
  [ 61] jmpifz [ 93] ............................ if tSymbol <> ttype then
  [ 64] getprop 1369 ............................ <pSpriteList>
  [ 67] getlocal 2 .............................. <tSymbol>
  [ 69] pusharglist 2 ........................... <pSpriteList, tSymbol>
  [ 71] objcall 54 .............................. <pSpriteList[tSymbol]>
  [ 73] setlocal 0 .............................. tsprite = pSpriteList[tSymbol]
  [ 75] getlocal 0 .............................. <tsprite>
  [ 77] getlocal 0 .............................. <tsprite>
  [ 79] getobjprop 511 .......................... <tsprite.loc>
  [ 82] getparam 2 .............................. <tX>
  [ 84] getparam 3 .............................. <tY>
  [ 86] pusharglist 2 ........................... <[tX, tY]>
  [ 88] pushlist ................................ <[tX, tY]>
  [ 89] add ..................................... <tsprite.loc + [tX, tY]>
  [ 90] setobjprop 511 .......................... tsprite.loc = tsprite.loc + [tX, tY]
  [ 93] pushint8 1
  [ 95] getlocal 1
  [ 97] add
  [ 98] setlocal 1
  [100] endrepeat [ 34]
  [102] jmp [123]
  [105] getlocal 0 .............................. <tsprite>
  [107] getlocal 0 .............................. <tsprite>
  [109] getobjprop 511 .......................... <tsprite.loc>
  [112] getparam 2 .............................. <tX>
  [114] getparam 3 .............................. <tY>
  [116] pusharglist 2 ........................... <[tX, tY]>
  [118] pushlist ................................ <[tX, tY]>
  [119] add ..................................... <tsprite.loc + [tX, tY]>
  [120] setobjprop 511 .......................... tsprite.loc = tsprite.loc + [tX, tY]
  [123] ret
end

on movePartTo me, ttype, tX, tY, tInverse
  [  0] getparam 2 .............................. <tX>
  [  2] getprop 467 ............................. <pLocX>
  [  5] sub ..................................... <tX - pLocX>
  [  6] setparam 2 .............................. tX = tX - pLocX
  [  8] getparam 3 .............................. <tY>
  [ 10] getprop 469 ............................. <pLocY>
  [ 13] sub ..................................... <tY - pLocY>
  [ 14] setparam 3 .............................. tY = tY - pLocY
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <ttype>
  [ 20] getparam 2 .............................. <tX>
  [ 22] getparam 3 .............................. <tY>
  [ 24] getparam 4 .............................. <tInverse>
  [ 26] pusharglistnoret 5 ...................... <me, ttype, tX, tY, tInverse>
  [ 28] objcall 1436 ............................ me.movePartBy(ttype, tX, tY, tInverse)
  [ 31] ret
end
