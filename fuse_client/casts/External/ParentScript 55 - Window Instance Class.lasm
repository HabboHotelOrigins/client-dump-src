property pTitle, pClientID, pProcedures, pLock, pLocX, pLocY, pLocZ, pwidth, pheight, pModal, pActive, pVisible, pDragFlag, pDragOffset, pBoundary, pScaleFlag, pScaleOffset, pElemList, pMemberList, pGroupData, pSpriteList, pSpecialIDList, pClientRect, pElemClsList, pWindowMngr

on construct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 3 ............................... <me.getID()>
  [  6] setprop 1290 ............................ pTitle = me.getID()
  [  9] pushzero ................................ <0>
  [ 10] setprop 465 ............................. pLocX = 0
  [ 13] pushzero ................................ <0>
  [ 14] setprop 467 ............................. pLocY = 0
  [ 17] pushzero ................................ <0>
  [ 18] setprop 1292 ............................ pLocZ = 0
  [ 21] pushzero ................................ <0>
  [ 22] setprop 497 ............................. pwidth = 0
  [ 25] pushzero ................................ <0>
  [ 26] setprop 502 ............................. pheight = 0
  [ 29] pushint8 1 .............................. <1>
  [ 31] setprop 1293 ............................ pVisible = 1
  [ 34] pushzero ................................ <0>
  [ 35] setprop 1363 ............................ pActive = 0
  [ 38] pushzero ................................ <0>
  [ 39] setprop 1364 ............................ pLock = 0
  [ 42] pushzero ................................ <0>
  [ 43] setprop 1365 ............................ pModal = 0
  [ 46] pusharglist 0 ........................... <[:]>
  [ 48] pushproplist ............................ <[:]>
  [ 49] setprop 1294 ............................ pSpriteList = [:]
  [ 52] pushzero ................................ <0>
  [ 53] setprop 1366 ............................ pScaleFlag = 0
  [ 56] pushzero ................................ <0>
  [ 57] setprop 1297 ............................ pDragFlag = 0
  [ 60] pushzero ................................ <0>
  [ 61] pushzero ................................ <0>
  [ 62] pusharglist 2 ........................... <[0, 0]>
  [ 64] pushlist ................................ <[0, 0]>
  [ 65] setprop 1298 ............................ pDragOffset = [0, 0]
  [ 68] pushzero ................................ <0>
  [ 69] pushzero ................................ <0>
  [ 70] getmovieprop 968 ........................ <the stage>
  [ 73] getchainedprop 969 ...................... <(the stage).sourceRect>
  [ 76] getobjprop 42 ........................... <(the stage).sourceRect.width>
  [ 78] getmovieprop 968 ........................ <the stage>
  [ 81] getchainedprop 969 ...................... <(the stage).sourceRect>
  [ 84] getobjprop 43 ........................... <(the stage).sourceRect.height>
  [ 86] pusharglist 4 ........................... <0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height>
  [ 88] extcall 555 ............................. <rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height)>
  [ 91] pushint8 20 ............................. <20>
  [ 93] inv ..................................... <-20>
  [ 94] pushint8 20 ............................. <20>
  [ 96] inv ..................................... <-20>
  [ 97] pushint8 20 ............................. <20>
  [ 99] pushint8 20 ............................. <20>
  [101] pusharglist 4 ........................... <[-20, -20, 20, 20]>
  [103] pushlist ................................ <[-20, -20, 20, 20]>
  [104] add ..................................... <rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height) + [-20, -20, 20, 20]>
  [105] setprop 967 ............................. pBoundary = rect(0, 0, (the stage).sourceRect.width, (the stage).sourceRect.height) + [-20, -20, 20, 20]
  [108] pusharglist 0 ........................... <>
  [110] extcall 32 .............................. <VOID>
  [112] setprop 1367 ............................ pClientID = VOID
  [115] pusharglist 0 ........................... <[:]>
  [117] pushproplist ............................ <[:]>
  [118] setprop 1368 ............................ pMemberList = [:]
  [121] pusharglist 0 ........................... <[:]>
  [123] pushproplist ............................ <[:]>
  [124] setprop 1369 ............................ pElemList = [:]
  [127] pusharglist 0 ........................... <[]>
  [129] pushlist ................................ <[]>
  [130] setprop 1370 ............................ pGroupData = []
  [133] pushzero ................................ <0>
  [134] pushzero ................................ <0>
  [135] pushzero ................................ <0>
  [136] pushzero ................................ <0>
  [137] pusharglist 4 ........................... <[0, 0, 0, 0]>
  [139] pushlist ................................ <[0, 0, 0, 0]>
  [140] setprop 1371 ............................ pClientRect = [0, 0, 0, 0]
  [143] pushcons 0 .............................. <"drag">
  [145] pushcons 1 .............................. <"close">
  [147] pushcons 2 .............................. <"scale">
  [149] pusharglist 3 ........................... <["drag", "close", "scale"]>
  [151] pushlist ................................ <["drag", "close", "scale"]>
  [152] setprop 1372 ............................ pSpecialIDList = ["drag", "close", "scale"]
  [155] getparam 0 .............................. <me>
  [157] pusharglist 1 ........................... <me>
  [159] objcall 19 .............................. <me.createProcListTemplate()>
  [161] setprop 1373 ............................ pProcedures = me.createProcListTemplate()
  [164] pushint8 1 .............................. <1>
  [166] pusharglistnoret 1 ...................... <1>
  [168] extcall 25 .............................. return 1
  [170] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 3 ............................... <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 109 ............................. removeUpdate(me.getID())
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 3 ............................... <me.getID()>
  [ 16] pusharglistnoret 1 ...................... <me.getID()>
  [ 18] extcall 107 ............................. removePrepare(me.getID())
  [ 20] pushint8 1 .............................. <1>
  [ 22] setlocal 0
  [ 24] getlocal 0
  [ 26] getprop 1294 ............................ <pSpriteList>
  [ 29] getobjprop 22 ........................... <pSpriteList.count>
  [ 31] lteq
  [ 32] jmpifz [ 63] ............................ repeat with i = 1 to pSpriteList.count
  [ 35] getprop 1294 ............................ <pSpriteList>
  [ 38] getlocal 0 .............................. <i>
  [ 40] pusharglist 2 ........................... <pSpriteList, i>
  [ 42] objcall 54 .............................. <pSpriteList[i]>
  [ 44] getobjprop 37 ........................... <pSpriteList[i].spriteNum>
  [ 46] setlocal 1 .............................. tSprNum = pSpriteList[i].spriteNum
  [ 48] getlocal 1 .............................. <tSprNum>
  [ 50] pusharglistnoret 1 ...................... <tSprNum>
  [ 52] extcall 233 ............................. releaseSprite(tSprNum)
  [ 54] pushint8 1
  [ 56] getlocal 0
  [ 58] add
  [ 59] setlocal 0
  [ 61] endrepeat [ 24]
  [ 63] pushsymb 119 ............................ <#deconstruct>
  [ 65] getprop 1369 ............................ <pElemList>
  [ 68] pusharglistnoret 2 ...................... <#deconstruct, pElemList>
  [ 70] extcall 68 .............................. call(#deconstruct, pElemList)
  [ 72] pushint8 1 .............................. <1>
  [ 74] setlocal 0
  [ 76] getlocal 0
  [ 78] getprop 1368 ............................ <pMemberList>
  [ 81] getobjprop 22 ........................... <pMemberList.count>
  [ 83] lteq
  [ 84] jmpifz [112] ............................ repeat with i = 1 to pMemberList.count
  [ 87] getprop 1368 ............................ <pMemberList>
  [ 90] getlocal 0 .............................. <i>
  [ 92] pusharglist 2 ........................... <pMemberList, i>
  [ 94] objcall 54 .............................. <pMemberList[i]>
  [ 96] getobjprop 725 .......................... <pMemberList[i].name>
  [ 99] pusharglistnoret 1 ...................... <pMemberList[i].name>
  [101] extcall 165 ............................. removeMember(pMemberList[i].name)
  [103] pushint8 1
  [105] getlocal 0
  [107] add
  [108] setlocal 0
  [110] endrepeat [ 76]
  [112] pusharglist 0 ........................... <[:]>
  [114] pushproplist ............................ <[:]>
  [115] setprop 1369 ............................ pElemList = [:]
  [118] pusharglist 0 ........................... <[:]>
  [120] pushproplist ............................ <[:]>
  [121] setprop 1294 ............................ pSpriteList = [:]
  [124] pusharglist 0 ........................... <[:]>
  [126] pushproplist ............................ <[:]>
  [127] setprop 1368 ............................ pMemberList = [:]
  [130] pusharglist 0 ........................... <[]>
  [132] pushlist ................................ <[]>
  [133] setprop 1370 ............................ pGroupData = []
  [136] pushcons 3 .............................. <EMPTY>
  [138] setprop 1367 ............................ pClientID = EMPTY
  [141] pusharglist 0 ........................... <>
  [143] extcall 32 .............................. <VOID>
  [145] setprop 1374 ............................ pWindowMngr = VOID
  [148] pushint8 1 .............................. <1>
  [150] pusharglistnoret 1 ...................... <1>
  [152] extcall 25 .............................. return 1
  [154] ret
end

on define me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 538 ............................ <#locX>
  [  5] pusharglist 2 ........................... <tProps, #locX>
  [  7] objcall 54 .............................. <tProps[#locX]>
  [  9] setprop 465 ............................. pLocX = tProps[#locX]
  [ 12] getparam 1 .............................. <tProps>
  [ 14] pushsymb 539 ............................ <#locY>
  [ 17] pusharglist 2 ........................... <tProps, #locY>
  [ 19] objcall 54 .............................. <tProps[#locY]>
  [ 21] setprop 467 ............................. pLocY = tProps[#locY]
  [ 24] getparam 1 .............................. <tProps>
  [ 26] pushsymb 881 ............................ <#locZ>
  [ 29] pusharglist 2 ........................... <tProps, #locZ>
  [ 31] objcall 54 .............................. <tProps[#locZ]>
  [ 33] setprop 1292 ............................ pLocZ = tProps[#locZ]
  [ 36] getparam 1 .............................. <tProps>
  [ 38] pushsymb 971 ............................ <#boundary>
  [ 41] pusharglist 2 ........................... <tProps, #boundary>
  [ 43] objcall 54 .............................. <tProps[#boundary]>
  [ 45] setprop 967 ............................. pBoundary = tProps[#boundary]
  [ 48] getparam 1 .............................. <tProps>
  [ 50] pushsymb 989 ............................ <#elements>
  [ 53] pusharglist 2 ........................... <tProps, #elements>
  [ 55] objcall 54 .............................. <tProps[#elements]>
  [ 57] setprop 1375 ............................ pElemClsList = tProps[#elements]
  [ 60] getparam 1 .............................. <tProps>
  [ 62] pushsymb 990 ............................ <#manager>
  [ 65] pusharglist 2 ........................... <tProps, #manager>
  [ 67] objcall 54 .............................. <tProps[#manager]>
  [ 69] setprop 1374 ............................ pWindowMngr = tProps[#manager]
  [ 72] pushint8 1 .............................. <1>
  [ 74] pusharglistnoret 1 ...................... <1>
  [ 76] extcall 25 .............................. return 1
  [ 78] ret
end

on close me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 3 ............................... <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 324 ............................. <removeWindow(me.getID())>
  [ 11] pusharglistnoret 1 ...................... <removeWindow(me.getID())>
  [ 13] extcall 25 .............................. return removeWindow(me.getID())
  [ 15] ret
end

on merge me, tLayout
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 975 ............................. me.setDeactive()
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <tLayout>
  [ 11] pusharglist 2 ........................... <me, tLayout>
  [ 13] objcall 1289 ............................ <me.buildVisual(tLayout)>
  [ 16] not ..................................... <not me.buildVisual(tLayout)>
  [ 17] jmpifz [ 25] ............................ if not me.buildVisual(tLayout) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 25 .............................. return 0
  [ 25] getprop 1372 ............................ <pSpecialIDList>
  [ 28] pushcons 0 .............................. <"drag">
  [ 30] getprop 1370 ............................ <pGroupData>
  [ 33] getobjprop 22 ........................... <pGroupData.count>
  [ 35] joinstr ................................. <"drag" & pGroupData.count>
  [ 36] pusharglistnoret 2 ...................... <pSpecialIDList, "drag" & pGroupData.count>
  [ 38] objcall 122 ............................. pSpecialIDList.add("drag" & pGroupData.count)
  [ 40] getprop 1372 ............................ <pSpecialIDList>
  [ 43] pushcons 1 .............................. <"close">
  [ 45] getprop 1370 ............................ <pGroupData>
  [ 48] getobjprop 22 ........................... <pGroupData.count>
  [ 50] joinstr ................................. <"close" & pGroupData.count>
  [ 51] pusharglistnoret 2 ...................... <pSpecialIDList, "close" & pGroupData.count>
  [ 53] objcall 122 ............................. pSpecialIDList.add("close" & pGroupData.count)
  [ 55] getprop 1374 ............................ <pWindowMngr>
  [ 58] getparam 0 .............................. <me>
  [ 60] pusharglist 1 ........................... <me>
  [ 62] objcall 3 ............................... <me.getID()>
  [ 64] pusharglistnoret 2 ...................... <pWindowMngr, me.getID()>
  [ 66] objcall 341 ............................. pWindowMngr.Activate(me.getID())
  [ 69] pushint8 1 .............................. <1>
  [ 71] pusharglistnoret 1 ...................... <1>
  [ 73] extcall 25 .............................. return 1
  [ 75] ret
end

on unmerge me
  [  0] getprop 1370 ............................ <pGroupData>
  [  3] getobjprop 22 ........................... <pGroupData.count>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <pGroupData.count = 0>
  [  7] jmpifz [ 25] ............................ if pGroupData.count = 0 then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 4 .............................. <"Cant't unmerge window without content!">
  [ 14] pushsymb 1353 ........................... <#unmerge>
  [ 17] pusharglist 3 ........................... <me, "Cant't unmerge window without content!", #unmerge>
  [ 19] extcall 39 .............................. <error(me, "Cant't unmerge window without content!", #unmerge)>
  [ 21] pusharglistnoret 1 ...................... <error(me, "Cant't unmerge window without content!", #unmerge)>
  [ 23] extcall 25 .............................. return error(me, "Cant't unmerge window without content!", #unmerge)
  [ 25] getprop 1370 ............................ <pGroupData>
  [ 28] pusharglist 1 ........................... <pGroupData>
  [ 30] objcall 663 ............................. <pGroupData.getLast()>
  [ 33] setlocal 0 .............................. tGroupData = pGroupData.getLast()
  [ 35] pushsymb 119 ............................ <#deconstruct>
  [ 37] getlocal 0 .............................. <tGroupData>
  [ 39] pushsymb 1376 ........................... <#items>
  [ 42] pusharglist 2 ........................... <tGroupData, #items>
  [ 44] objcall 54 .............................. <tGroupData[#items]>
  [ 46] pusharglistnoret 2 ...................... <#deconstruct, tGroupData[#items]>
  [ 48] extcall 68 .............................. call(#deconstruct, tGroupData[#items])
  [ 50] getprop 1371 ............................ <pClientRect>
  [ 53] getlocal 0 .............................. <tGroupData>
  [ 55] pushsymb 1090 ........................... <#border>
  [ 58] pusharglist 2 ........................... <tGroupData, #border>
  [ 60] objcall 54 .............................. <tGroupData[#border]>
  [ 62] sub ..................................... <pClientRect - tGroupData[#border]>
  [ 63] setprop 1371 ............................ pClientRect = pClientRect - tGroupData[#border]
  [ 66] getlocal 0 .............................. <tGroupData>
  [ 68] pushsymb 1376 ........................... <#items>
  [ 71] pusharglist 2 ........................... <tGroupData, #items>
  [ 73] objcall 54 .............................. <tGroupData[#items]>
  [ 75] peek 0
  [ 77] pusharglist 1
  [ 79] extcall 22
  [ 81] pushint8 1
  [ 83] peek 0
  [ 85] peek 2
  [ 87] lteq
  [ 88] jmpifz [124] ............................ repeat with tItem in tGroupData[#items]
  [ 91] peek 2
  [ 93] peek 1
  [ 95] pusharglist 2
  [ 97] extcall 54
  [ 99] setlocal 1
  [101] getprop 1369 ............................ <pElemList>
  [104] getprop 1369 ............................ <pElemList>
  [107] getlocal 1 .............................. <tItem>
  [109] pusharglist 2 ........................... <pElemList, tItem>
  [111] objcall 641 ............................. <pElemList.getOne(tItem)>
  [114] pusharglistnoret 2 ...................... <pElemList, pElemList.getOne(tItem)>
  [116] objcall 659 ............................. pElemList.deleteProp(pElemList.getOne(tItem))
  [119] pushint8 1
  [121] add
  [122] endrepeat [ 83]
  [124] pop 3
  [126] getlocal 0 .............................. <tGroupData>
  [128] pushsymb 1377 ........................... <#sprites>
  [131] pusharglist 2 ........................... <tGroupData, #sprites>
  [133] objcall 54 .............................. <tGroupData[#sprites]>
  [135] peek 0
  [137] pusharglist 1
  [139] extcall 22
  [141] pushint8 1
  [143] peek 0
  [145] peek 2
  [147] lteq
  [148] jmpifz [192] ............................ repeat with tsprite in tGroupData[#sprites]
  [151] peek 2
  [153] peek 1
  [155] pusharglist 2
  [157] extcall 54
  [159] setlocal 2
  [161] getprop 1294 ............................ <pSpriteList>
  [164] getprop 1294 ............................ <pSpriteList>
  [167] getlocal 2 .............................. <tsprite>
  [169] pusharglist 2 ........................... <pSpriteList, tsprite>
  [171] objcall 641 ............................. <pSpriteList.getOne(tsprite)>
  [174] pusharglistnoret 2 ...................... <pSpriteList, pSpriteList.getOne(tsprite)>
  [176] objcall 659 ............................. pSpriteList.deleteProp(pSpriteList.getOne(tsprite))
  [179] getlocal 2 .............................. <tsprite>
  [181] getobjprop 37 ........................... <tsprite.spriteNum>
  [183] pusharglistnoret 1 ...................... <tsprite.spriteNum>
  [185] extcall 233 ............................. releaseSprite(tsprite.spriteNum)
  [187] pushint8 1
  [189] add
  [190] endrepeat [143]
  [192] pop 3
  [194] getlocal 0 .............................. <tGroupData>
  [196] pushsymb 553 ............................ <#members>
  [199] pusharglist 2 ........................... <tGroupData, #members>
  [201] objcall 54 .............................. <tGroupData[#members]>
  [203] peek 0
  [205] pusharglist 1
  [207] extcall 22
  [209] pushint8 1
  [211] peek 0
  [213] peek 2
  [215] lteq
  [216] jmpifz [261] ............................ repeat with tmember in tGroupData[#members]
  [219] peek 2
  [221] peek 1
  [223] pusharglist 2
  [225] extcall 54
  [227] setlocal 3
  [229] getprop 1368 ............................ <pMemberList>
  [232] getprop 1368 ............................ <pMemberList>
  [235] getlocal 3 .............................. <tmember>
  [237] pusharglist 2 ........................... <pMemberList, tmember>
  [239] objcall 641 ............................. <pMemberList.getOne(tmember)>
  [242] pusharglistnoret 2 ...................... <pMemberList, pMemberList.getOne(tmember)>
  [244] objcall 659 ............................. pMemberList.deleteProp(pMemberList.getOne(tmember))
  [247] getlocal 3 .............................. <tmember>
  [249] getobjprop 725 .......................... <tmember.name>
  [252] pusharglistnoret 1 ...................... <tmember.name>
  [254] extcall 165 ............................. removeMember(tmember.name)
  [256] pushint8 1
  [258] add
  [259] endrepeat [211]
  [261] pop 3
  [263] getprop 1372 ............................ <pSpecialIDList>
  [266] pushcons 0 .............................. <"drag">
  [268] getprop 1370 ............................ <pGroupData>
  [271] getobjprop 22 ........................... <pGroupData.count>
  [273] joinstr ................................. <"drag" & pGroupData.count>
  [274] pusharglistnoret 2 ...................... <pSpecialIDList, "drag" & pGroupData.count>
  [276] objcall 527 ............................. pSpecialIDList.deleteOne("drag" & pGroupData.count)
  [279] getprop 1372 ............................ <pSpecialIDList>
  [282] pushcons 0 .............................. <"drag">
  [284] getprop 1370 ............................ <pGroupData>
  [287] getobjprop 22 ........................... <pGroupData.count>
  [289] joinstr ................................. <"drag" & pGroupData.count>
  [290] pusharglistnoret 2 ...................... <pSpecialIDList, "drag" & pGroupData.count>
  [292] objcall 527 ............................. pSpecialIDList.deleteOne("drag" & pGroupData.count)
  [295] getprop 1370 ............................ <pGroupData>
  [298] getprop 1370 ............................ <pGroupData>
  [301] getobjprop 22 ........................... <pGroupData.count>
  [303] pusharglistnoret 2 ...................... <pGroupData, pGroupData.count>
  [305] objcall 723 ............................. pGroupData.deleteAt(pGroupData.count)
  [308] pushint8 1 .............................. <1>
  [310] pusharglistnoret 1 ...................... <1>
  [312] extcall 25 .............................. return 1
  [314] ret
end

on lock me, tBoolean
  [  0] getparam 1 .............................. <tBoolean>
  [  2] pusharglist 1 ........................... <tBoolean>
  [  4] extcall 20 .............................. <voidp(tBoolean)>
  [  6] jmpifz [ 13] ............................ if voidp(tBoolean) then
  [  9] pushint8 1 .............................. <1>
  [ 11] setparam 1 .............................. tBoolean = 1
  [ 13] getparam 1 .............................. <tBoolean>
  [ 15] setprop 1364 ............................ pLock = tBoolean
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 1 ...................... <1>
  [ 22] extcall 25 .............................. return 1
  [ 24] ret
end

on hide me
  [  0] getprop 1293 ............................ <pVisible>
  [  3] pushint8 1 .............................. <1>
  [  5] eq ...................................... <pVisible = 1>
  [  6] jmpifz [ 29] ............................ if pVisible = 1 then
  [  9] pushzero ................................ <0>
  [ 10] setprop 1293 ............................ pVisible = 0
  [ 13] getparam 0 .............................. <me>
  [ 15] pushint16 10000 ......................... <10000>
  [ 18] pusharglistnoret 2 ...................... <me, 10000>
  [ 20] objcall 1285 ............................ me.moveX(10000)
  [ 23] pushint8 1 .............................. <1>
  [ 25] pusharglistnoret 1 ...................... <1>
  [ 27] extcall 25 .............................. return 1
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 25 .............................. return 0
  [ 34] ret
end

on show me
  [  0] getprop 1293 ............................ <pVisible>
  [  3] pushzero ................................ <0>
  [  4] eq ...................................... <pVisible = 0>
  [  5] jmpifz [ 30] ............................ if pVisible = 0 then
  [  8] pushint8 1 .............................. <1>
  [ 10] setprop 1293 ............................ pVisible = 1
  [ 13] getparam 0 .............................. <me>
  [ 15] pushint16 10000 ......................... <10000>
  [ 18] inv ..................................... <-10000>
  [ 19] pusharglistnoret 2 ...................... <me, -10000>
  [ 21] objcall 1285 ............................ me.moveX(-10000)
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 25 .............................. return 1
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 25 .............................. return 0
  [ 35] ret
end

on moveTo me, tX, tY
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tX>
  [  4] getprop 465 ............................. <pLocX>
  [  7] sub ..................................... <tX - pLocX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getprop 467 ............................. <pLocY>
  [ 13] sub ..................................... <tY - pLocY>
  [ 14] pusharglistnoret 3 ...................... <me, tX - pLocX, tY - pLocY>
  [ 16] objcall 979 ............................. me.moveBy(tX - pLocX, tY - pLocY)
  [ 19] ret
end

on moveBy me, tOffX, tOffY
  [  0] getprop 465 ............................. <pLocX>
  [  3] getparam 1 .............................. <tOffX>
  [  5] add ..................................... <pLocX + tOffX>
  [  6] getprop 967 ............................. <pBoundary>
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglist 2 ........................... <pBoundary, 1>
  [ 13] objcall 54 .............................. <pBoundary[1]>
  [ 15] lt ...................................... <(pLocX + tOffX) < pBoundary[1]>
  [ 16] jmpifz [ 34] ............................ if (pLocX + tOffX) < pBoundary[1] then
  [ 19] getprop 967 ............................. <pBoundary>
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglist 2 ........................... <pBoundary, 1>
  [ 26] objcall 54 .............................. <pBoundary[1]>
  [ 28] getprop 465 ............................. <pLocX>
  [ 31] sub ..................................... <pBoundary[1] - pLocX>
  [ 32] setparam 1 .............................. tOffX = pBoundary[1] - pLocX
  [ 34] getprop 467 ............................. <pLocY>
  [ 37] getparam 2 .............................. <tOffY>
  [ 39] add ..................................... <pLocY + tOffY>
  [ 40] getprop 967 ............................. <pBoundary>
  [ 43] pushint8 2 .............................. <2>
  [ 45] pusharglist 2 ........................... <pBoundary, 2>
  [ 47] objcall 54 .............................. <pBoundary[2]>
  [ 49] lt ...................................... <(pLocY + tOffY) < pBoundary[2]>
  [ 50] jmpifz [ 68] ............................ if (pLocY + tOffY) < pBoundary[2] then
  [ 53] getprop 967 ............................. <pBoundary>
  [ 56] pushint8 2 .............................. <2>
  [ 58] pusharglist 2 ........................... <pBoundary, 2>
  [ 60] objcall 54 .............................. <pBoundary[2]>
  [ 62] getprop 467 ............................. <pLocY>
  [ 65] sub ..................................... <pBoundary[2] - pLocY>
  [ 66] setparam 2 .............................. tOffY = pBoundary[2] - pLocY
  [ 68] getprop 465 ............................. <pLocX>
  [ 71] getprop 497 ............................. <pwidth>
  [ 74] add ..................................... <pLocX + pwidth>
  [ 75] getparam 1 .............................. <tOffX>
  [ 77] add ..................................... <pLocX + pwidth + tOffX>
  [ 78] getprop 967 ............................. <pBoundary>
  [ 81] pushint8 3 .............................. <3>
  [ 83] pusharglist 2 ........................... <pBoundary, 3>
  [ 85] objcall 54 .............................. <pBoundary[3]>
  [ 87] gt ...................................... <(pLocX + pwidth + tOffX) > pBoundary[3]>
  [ 88] jmpifz [110] ............................ if (pLocX + pwidth + tOffX) > pBoundary[3] then
  [ 91] getprop 967 ............................. <pBoundary>
  [ 94] pushint8 3 .............................. <3>
  [ 96] pusharglist 2 ........................... <pBoundary, 3>
  [ 98] objcall 54 .............................. <pBoundary[3]>
  [100] getprop 465 ............................. <pLocX>
  [103] sub ..................................... <pBoundary[3] - pLocX>
  [104] getprop 497 ............................. <pwidth>
  [107] sub ..................................... <pBoundary[3] - pLocX - pwidth>
  [108] setparam 1 .............................. tOffX = pBoundary[3] - pLocX - pwidth
  [110] getprop 467 ............................. <pLocY>
  [113] getprop 502 ............................. <pheight>
  [116] add ..................................... <pLocY + pheight>
  [117] getparam 2 .............................. <tOffY>
  [119] add ..................................... <pLocY + pheight + tOffY>
  [120] getprop 967 ............................. <pBoundary>
  [123] pushint8 4 .............................. <4>
  [125] pusharglist 2 ........................... <pBoundary, 4>
  [127] objcall 54 .............................. <pBoundary[4]>
  [129] gt ...................................... <(pLocY + pheight + tOffY) > pBoundary[4]>
  [130] jmpifz [152] ............................ if (pLocY + pheight + tOffY) > pBoundary[4] then
  [133] getprop 967 ............................. <pBoundary>
  [136] pushint8 4 .............................. <4>
  [138] pusharglist 2 ........................... <pBoundary, 4>
  [140] objcall 54 .............................. <pBoundary[4]>
  [142] getprop 467 ............................. <pLocY>
  [145] sub ..................................... <pBoundary[4] - pLocY>
  [146] getprop 502 ............................. <pheight>
  [149] sub ..................................... <pBoundary[4] - pLocY - pheight>
  [150] setparam 2 .............................. tOffY = pBoundary[4] - pLocY - pheight
  [152] getprop 465 ............................. <pLocX>
  [155] getparam 1 .............................. <tOffX>
  [157] add ..................................... <pLocX + tOffX>
  [158] setprop 465 ............................. pLocX = pLocX + tOffX
  [161] getprop 467 ............................. <pLocY>
  [164] getparam 2 .............................. <tOffY>
  [166] add ..................................... <pLocY + tOffY>
  [167] setprop 467 ............................. pLocY = pLocY + tOffY
  [170] getparam 0 .............................. <me>
  [172] getparam 1 .............................. <tOffX>
  [174] getparam 2 .............................. <tOffY>
  [176] pusharglistnoret 3 ...................... <me, tOffX, tOffY>
  [178] objcall 1287 ............................ me.moveXY(tOffX, tOffY)
  [181] ret
end

on moveZ me, tZ
  [  0] getparam 1 .............................. <tZ>
  [  2] pusharglist 1 ........................... <tZ>
  [  4] extcall 681 ............................. <integerp(tZ)>
  [  7] not ..................................... <not integerp(tZ)>
  [  8] jmpifz [ 29] ............................ if not integerp(tZ) then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 5 .............................. <"Integer expected:">
  [ 15] getparam 1 .............................. <tZ>
  [ 17] joinpadstr .............................. <"Integer expected:" && tZ>
  [ 18] pushsymb 1272 ........................... <#moveZ>
  [ 21] pusharglist 3 ........................... <me, "Integer expected:" && tZ, #moveZ>
  [ 23] extcall 39 .............................. <error(me, "Integer expected:" && tZ, #moveZ)>
  [ 25] pusharglistnoret 1 ...................... <error(me, "Integer expected:" && tZ, #moveZ)>
  [ 27] extcall 25 .............................. return error(me, "Integer expected:" && tZ, #moveZ)
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 0
  [ 33] getlocal 0
  [ 35] getprop 1294 ............................ <pSpriteList>
  [ 38] getobjprop 22 ........................... <pSpriteList.count>
  [ 40] lteq
  [ 41] jmpifz [ 73] ............................ repeat with i = 1 to pSpriteList.count
  [ 44] getprop 1294 ............................ <pSpriteList>
  [ 47] getlocal 0 .............................. <i>
  [ 49] pusharglist 2 ........................... <pSpriteList, i>
  [ 51] objcall 54 .............................. <pSpriteList[i]>
  [ 53] getparam 1 .............................. <tZ>
  [ 55] getlocal 0 .............................. <i>
  [ 57] add ..................................... <tZ + i>
  [ 58] pushint8 1 .............................. <1>
  [ 60] sub ..................................... <tZ + i - 1>
  [ 61] setobjprop 881 .......................... pSpriteList[i].locZ = tZ + i - 1
  [ 64] pushint8 1
  [ 66] getlocal 0
  [ 68] add
  [ 69] setlocal 0
  [ 71] endrepeat [ 33]
  [ 73] getparam 1 .............................. <tZ>
  [ 75] setprop 1292 ............................ pLocZ = tZ
  [ 78] ret
end

on center me
  [  0] getmovieprop 968 ........................ <the stage>
  [  3] getchainedprop 969 ...................... <(the stage).sourceRect>
  [  6] getobjprop 42 ........................... <(the stage).sourceRect.width>
  [  8] pushint8 2 .............................. <2>
  [ 10] div ..................................... <(the stage).sourceRect.width / 2>
  [ 11] getprop 497 ............................. <pwidth>
  [ 14] pushint8 2 .............................. <2>
  [ 16] div ..................................... <pwidth / 2>
  [ 17] sub ..................................... <((the stage).sourceRect.width / 2) - (pwidth / 2)>
  [ 18] setlocal 0 .............................. tX = ((the stage).sourceRect.width / 2) - (pwidth / 2)
  [ 20] getmovieprop 968 ........................ <the stage>
  [ 23] getchainedprop 969 ...................... <(the stage).sourceRect>
  [ 26] getobjprop 43 ........................... <(the stage).sourceRect.height>
  [ 28] pushint8 2 .............................. <2>
  [ 30] div ..................................... <(the stage).sourceRect.height / 2>
  [ 31] getprop 502 ............................. <pheight>
  [ 34] pushint8 2 .............................. <2>
  [ 36] div ..................................... <pheight / 2>
  [ 37] sub ..................................... <((the stage).sourceRect.height / 2) - (pheight / 2)>
  [ 38] setlocal 1 .............................. tY = ((the stage).sourceRect.height / 2) - (pheight / 2)
  [ 40] getparam 0 .............................. <me>
  [ 42] getlocal 0 .............................. <tX>
  [ 44] getlocal 1 .............................. <tY>
  [ 46] pusharglist 3 ........................... <me, tX, tY>
  [ 48] objcall 999 ............................. <me.moveTo(tX, tY)>
  [ 51] pusharglistnoret 1 ...................... <me.moveTo(tX, tY)>
  [ 53] extcall 25 .............................. return me.moveTo(tX, tY)
  [ 55] ret
end

on resizeBy me, tOffX, tOffY
  [  0] getparam 1 .............................. <tOffX>
  [  2] pushzero ................................ <0>
  [  3] nteq .................................... <tOffX <> 0>
  [  4] getparam 2 .............................. <tOffY>
  [  6] pushzero ................................ <0>
  [  7] nteq .................................... <tOffY <> 0>
  [  8] or ...................................... <(tOffX <> 0) or (tOffY <> 0)>
  [  9] jmpifz [ 44] ............................ if (tOffX <> 0) or (tOffY <> 0) then
  [ 12] getprop 497 ............................. <pwidth>
  [ 15] getparam 1 .............................. <tOffX>
  [ 17] add ..................................... <pwidth + tOffX>
  [ 18] setprop 497 ............................. pwidth = pwidth + tOffX
  [ 21] getprop 502 ............................. <pheight>
  [ 24] getparam 2 .............................. <tOffY>
  [ 26] add ..................................... <pheight + tOffY>
  [ 27] setprop 502 ............................. pheight = pheight + tOffY
  [ 30] pushsymb 1354 ........................... <#resizeBy>
  [ 33] getprop 1369 ............................ <pElemList>
  [ 36] getparam 1 .............................. <tOffX>
  [ 38] getparam 2 .............................. <tOffY>
  [ 40] pusharglistnoret 4 ...................... <#resizeBy, pElemList, tOffX, tOffY>
  [ 42] extcall 68 .............................. call(#resizeBy, pElemList, tOffX, tOffY)
  [ 44] ret
end

on resizeTo me, tX, tY
  [  0] getparam 1 .............................. <tX>
  [  2] getprop 497 ............................. <pwidth>
  [  5] sub ..................................... <tX - pwidth>
  [  6] setlocal 0 .............................. tOffW = tX - pwidth
  [  8] getparam 2 .............................. <tY>
  [ 10] getprop 502 ............................. <pheight>
  [ 13] sub ..................................... <tY - pheight>
  [ 14] setlocal 1 .............................. tOffH = tY - pheight
  [ 16] getparam 0 .............................. <me>
  [ 18] getlocal 0 .............................. <tOffW>
  [ 20] getlocal 1 .............................. <tOffH>
  [ 22] pusharglistnoret 3 ...................... <me, tOffW, tOffH>
  [ 24] objcall 1354 ............................ me.resizeBy(tOffW, tOffH)
  [ 27] ret
end

on setActive me
  [  0] getprop 1363 ............................ <pActive>
  [  3] not ..................................... <not pActive>
  [  4] jmpifz [ 21] ............................ if not pActive then / else
  [  7] pushint8 1 .............................. <1>
  [  9] setprop 1363 ............................ pActive = 1
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 25 .............................. return 1
  [ 18] jmp [ 26]
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 25 .............................. return 0
  [ 26] ret
end

on setDeactive me
  [  0] getprop 1364 ............................ <pLock>
  [  3] jmpifz [ 14] ............................ if pLock then / else
  [  6] pushzero ................................ <0>
  [  7] pusharglistnoret 1 ...................... <0>
  [  9] extcall 25 .............................. return 0
  [ 11] jmp [ 38]
  [ 14] getprop 1363 ............................ <pActive>
  [ 17] jmpifz [ 33] ............................ if pActive then / else
  [ 20] pushzero ................................ <0>
  [ 21] setprop 1363 ............................ pActive = 0
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 25 .............................. return 1
  [ 30] jmp [ 38]
  [ 33] pushzero ................................ <0>
  [ 34] pusharglistnoret 1 ...................... <0>
  [ 36] extcall 25 .............................. return 0
  [ 38] ret
end

on getClientRect me
  [  0] getprop 465 ............................. <pLocX>
  [  3] getprop 467 ............................. <pLocY>
  [  6] getprop 465 ............................. <pLocX>
  [  9] getprop 497 ............................. <pwidth>
  [ 12] add ..................................... <pLocX + pwidth>
  [ 13] getprop 467 ............................. <pLocY>
  [ 16] getprop 502 ............................. <pheight>
  [ 19] add ..................................... <pLocY + pheight>
  [ 20] pusharglist 4 ........................... <pLocX, pLocY, pLocX + pwidth, pLocY + pheight>
  [ 22] extcall 555 ............................. <rect(pLocX, pLocY, pLocX + pwidth, pLocY + pheight)>
  [ 25] pusharglistnoret 1 ...................... <rect(pLocX, pLocY, pLocX + pwidth, pLocY + pheight)>
  [ 27] extcall 25 .............................. return rect(pLocX, pLocY, pLocX + pwidth, pLocY + pheight)
  [ 29] ret
end

on getElement me, tid
  [  0] getprop 1369 ............................ <pElemList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pElemList, tid>
  [  7] objcall 54 .............................. <pElemList[tid]>
  [  9] setlocal 0 .............................. tElement = pElemList[tid]
  [ 11] getlocal 0 .............................. <tElement>
  [ 13] pusharglist 1 ........................... <tElement>
  [ 15] extcall 20 .............................. <voidp(tElement)>
  [ 17] jmpifz [ 25] ............................ if voidp(tElement) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 25 .............................. return 0
  [ 25] getlocal 0 .............................. <tElement>
  [ 27] pusharglistnoret 1 ...................... <tElement>
  [ 29] extcall 25 .............................. return tElement
  [ 31] ret
end

on elementExists me, tid
  [  0] getprop 1369 ............................ <pElemList>
  [  3] getparam 1 .............................. <tid>
  [  5] pusharglist 2 ........................... <pElemList, tid>
  [  7] objcall 54 .............................. <pElemList[tid]>
  [  9] pusharglist 1 ........................... <pElemList[tid]>
  [ 11] extcall 20 .............................. <voidp(pElemList[tid])>
  [ 13] not ..................................... <not voidp(pElemList[tid])>
  [ 14] pusharglistnoret 1 ...................... <not voidp(pElemList[tid])>
  [ 16] extcall 25 .............................. return not voidp(pElemList[tid])
  [ 18] ret
end

on registerClient me, tClientID
  [  0] getparam 1 .............................. <tClientID>
  [  2] pusharglist 1 ........................... <tClientID>
  [  4] extcall 67 .............................. <objectExists(tClientID)>
  [  6] not ..................................... <not objectExists(tClientID)>
  [  7] jmpifz [ 28] ............................ if not objectExists(tClientID) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 6 .............................. <"Object not found:">
  [ 14] getparam 1 .............................. <tClientID>
  [ 16] joinpadstr .............................. <"Object not found:" && tClientID>
  [ 17] pushsymb 330 ............................ <#registerClient>
  [ 20] pusharglist 3 ........................... <me, "Object not found:" && tClientID, #registerClient>
  [ 22] extcall 39 .............................. <error(me, "Object not found:" && tClientID, #registerClient)>
  [ 24] pusharglistnoret 1 ...................... <error(me, "Object not found:" && tClientID, #registerClient)>
  [ 26] extcall 25 .............................. return error(me, "Object not found:" && tClientID, #registerClient)
  [ 28] getparam 1 .............................. <tClientID>
  [ 30] setprop 1367 ............................ pClientID = tClientID
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglistnoret 1 ...................... <1>
  [ 37] extcall 25 .............................. return 1
  [ 39] ret
end

on removeClient me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 32 .............................. <VOID>
  [  4] setprop 1367 ............................ pClientID = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 25 .............................. return 1
  [ 13] ret
end

on registerProcedure me, tMethod, tClientID, tEvent
  [  0] getparam 1 .............................. <tMethod>
  [  2] pusharglist 1 ........................... <tMethod>
  [  4] extcall 46 .............................. <symbolp(tMethod)>
  [  6] not ..................................... <not symbolp(tMethod)>
  [  7] jmpifz [ 27] ............................ if not symbolp(tMethod) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 7 .............................. <"Symbol expected:">
  [ 14] getparam 1 .............................. <tMethod>
  [ 16] joinpadstr .............................. <"Symbol expected:" && tMethod>
  [ 17] pushsymb 1 .............................. <#registerProcedure>
  [ 19] pusharglist 3 ........................... <me, "Symbol expected:" && tMethod, #registerProcedure>
  [ 21] extcall 39 .............................. <error(me, "Symbol expected:" && tMethod, #registerProcedure)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Symbol expected:" && tMethod, #registerProcedure)>
  [ 25] extcall 25 .............................. return error(me, "Symbol expected:" && tMethod, #registerProcedure)
  [ 27] getparam 2 .............................. <tClientID>
  [ 29] pusharglist 1 ........................... <tClientID>
  [ 31] extcall 67 .............................. <objectExists(tClientID)>
  [ 33] not ..................................... <not objectExists(tClientID)>
  [ 34] jmpifz [ 54] ............................ if not objectExists(tClientID) then
  [ 37] getparam 0 .............................. <me>
  [ 39] pushcons 6 .............................. <"Object not found:">
  [ 41] getparam 2 .............................. <tClientID>
  [ 43] joinpadstr .............................. <"Object not found:" && tClientID>
  [ 44] pushsymb 1 .............................. <#registerProcedure>
  [ 46] pusharglist 3 ........................... <me, "Object not found:" && tClientID, #registerProcedure>
  [ 48] extcall 39 .............................. <error(me, "Object not found:" && tClientID, #registerProcedure)>
  [ 50] pusharglistnoret 1 ...................... <error(me, "Object not found:" && tClientID, #registerProcedure)>
  [ 52] extcall 25 .............................. return error(me, "Object not found:" && tClientID, #registerProcedure)
  [ 54] getparam 3 .............................. <tEvent>
  [ 56] pusharglist 1 ........................... <tEvent>
  [ 58] extcall 20 .............................. <voidp(tEvent)>
  [ 60] jmpifz [106] ............................ if voidp(tEvent) then / else
  [ 63] pushint8 1 .............................. <1>
  [ 65] setlocal 0
  [ 67] getlocal 0
  [ 69] getprop 1373 ............................ <pProcedures>
  [ 72] getobjprop 22 ........................... <pProcedures.count>
  [ 74] lteq
  [ 75] jmpifz [103] ............................ repeat with i = 1 to pProcedures.count
  [ 78] getprop 1373 ............................ <pProcedures>
  [ 81] getlocal 0 .............................. <i>
  [ 83] getparam 1 .............................. <tMethod>
  [ 85] getparam 2 .............................. <tClientID>
  [ 87] pusharglist 2 ........................... <[tMethod, tClientID]>
  [ 89] pushlist ................................ <[tMethod, tClientID]>
  [ 90] pusharglistnoret 3 ...................... <pProcedures, i, [tMethod, tClientID]>
  [ 92] objcall 24 .............................. pProcedures[i] = [tMethod, tClientID]
  [ 94] pushint8 1
  [ 96] getlocal 0
  [ 98] add
  [ 99] setlocal 0
  [101] endrepeat [ 67]
  [103] jmp [122]
  [106] getprop 1373 ............................ <pProcedures>
  [109] getparam 3 .............................. <tEvent>
  [111] getparam 1 .............................. <tMethod>
  [113] getparam 2 .............................. <tClientID>
  [115] pusharglist 2 ........................... <[tMethod, tClientID]>
  [117] pushlist ................................ <[tMethod, tClientID]>
  [118] pusharglistnoret 3 ...................... <pProcedures, tEvent, [tMethod, tClientID]>
  [120] objcall 24 .............................. pProcedures[tEvent] = [tMethod, tClientID]
  [122] pushint8 1 .............................. <1>
  [124] pusharglistnoret 1 ...................... <1>
  [126] extcall 25 .............................. return 1
  [128] ret
end

on removeProcedure me, tEvent
  [  0] getparam 1 .............................. <tEvent>
  [  2] pusharglist 1 ........................... <tEvent>
  [  4] extcall 20 .............................. <voidp(tEvent)>
  [  6] jmpifz [ 21] ............................ if voidp(tEvent) then / else
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 19 .............................. <me.createProcListTemplate()>
  [ 15] setprop 1373 ............................ pProcedures = me.createProcListTemplate()
  [ 18] jmp [ 58]
  [ 21] getprop 1373 ............................ <pProcedures>
  [ 24] getparam 1 .............................. <tEvent>
  [ 26] pusharglist 2 ........................... <pProcedures, tEvent>
  [ 28] objcall 31 .............................. <pProcedures.getaProp(tEvent)>
  [ 30] pusharglist 0 ........................... <>
  [ 32] extcall 32 .............................. <VOID>
  [ 34] nteq .................................... <pProcedures.getaProp(tEvent) <> VOID>
  [ 35] jmpifz [ 58] ............................ if pProcedures.getaProp(tEvent) <> VOID then
  [ 38] getprop 1373 ............................ <pProcedures>
  [ 41] getparam 1 .............................. <tEvent>
  [ 43] pushsymb 33 ............................. <#null>
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 3 ............................... <me.getID()>
  [ 51] pusharglist 2 ........................... <[#null, me.getID()]>
  [ 53] pushlist ................................ <[#null, me.getID()]>
  [ 54] pusharglistnoret 3 ...................... <pProcedures, tEvent, [#null, me.getID()]>
  [ 56] objcall 24 .............................. pProcedures[tEvent] = [#null, me.getID()]
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglistnoret 1 ...................... <1>
  [ 62] extcall 25 .............................. return 1
  [ 64] ret
end

on getProperty me, tProp
  [  0] getparam 1 .............................. <tProp>
  [  2] peek 0 .................................. case tProp of
  [  4] pushsymb 538 ............................ <#locX>
  [  7] eq
  [  8] jmpifz [ 23] ............................ (case) #locX:
  [ 11] pop 1
  [ 13] getprop 465 ............................. <pLocX>
  [ 16] pusharglistnoret 1 ...................... <pLocX>
  [ 18] extcall 25 .............................. return pLocX
  [ 20] jmp [230]
  [ 23] peek 0
  [ 25] pushsymb 539 ............................ <#locY>
  [ 28] eq
  [ 29] jmpifz [ 44] ............................ (case) #locY:
  [ 32] pop 1
  [ 34] getprop 467 ............................. <pLocY>
  [ 37] pusharglistnoret 1 ...................... <pLocY>
  [ 39] extcall 25 .............................. return pLocY
  [ 41] jmp [230]
  [ 44] peek 0
  [ 46] pushsymb 881 ............................ <#locZ>
  [ 49] eq
  [ 50] jmpifz [ 65] ............................ (case) #locZ:
  [ 53] pop 1
  [ 55] getprop 1292 ............................ <pLocZ>
  [ 58] pusharglistnoret 1 ...................... <pLocZ>
  [ 60] extcall 25 .............................. return pLocZ
  [ 62] jmp [230]
  [ 65] peek 0
  [ 67] pushsymb 971 ............................ <#boundary>
  [ 70] eq
  [ 71] jmpifz [ 86] ............................ (case) #boundary:
  [ 74] pop 1
  [ 76] getprop 967 ............................. <pBoundary>
  [ 79] pusharglistnoret 1 ...................... <pBoundary>
  [ 81] extcall 25 .............................. return pBoundary
  [ 83] jmp [230]
  [ 86] peek 0
  [ 88] pushsymb 42 ............................. <#width>
  [ 90] eq
  [ 91] jmpifz [106] ............................ (case) #width:
  [ 94] pop 1
  [ 96] getprop 497 ............................. <pwidth>
  [ 99] pusharglistnoret 1 ...................... <pwidth>
  [101] extcall 25 .............................. return pwidth
  [103] jmp [230]
  [106] peek 0
  [108] pushsymb 43 ............................. <#height>
  [110] eq
  [111] jmpifz [126] ............................ (case) #height:
  [114] pop 1
  [116] getprop 502 ............................. <pheight>
  [119] pusharglistnoret 1 ...................... <pheight>
  [121] extcall 25 .............................. return pheight
  [123] jmp [230]
  [126] peek 0
  [128] pushsymb 878 ............................ <#visible>
  [131] eq
  [132] jmpifz [147] ............................ (case) #visible:
  [135] pop 1
  [137] getprop 1293 ............................ <pVisible>
  [140] pusharglistnoret 1 ...................... <pVisible>
  [142] extcall 25 .............................. return pVisible
  [144] jmp [230]
  [147] peek 0
  [149] pushsymb 1306 ........................... <#title>
  [152] eq
  [153] jmpifz [168] ............................ (case) #title:
  [156] pop 1
  [158] getprop 1290 ............................ <pTitle>
  [161] pusharglistnoret 1 ...................... <pTitle>
  [163] extcall 25 .............................. return pTitle
  [165] jmp [230]
  [168] peek 0
  [170] pushsymb 34 ............................. <#id>
  [172] eq
  [173] jmpifz [191] ............................ (case) #id:
  [176] pop 1
  [178] getparam 0 .............................. <me>
  [180] pusharglist 1 ........................... <me>
  [182] objcall 3 ............................... <me.getID()>
  [184] pusharglistnoret 1 ...................... <me.getID()>
  [186] extcall 25 .............................. return me.getID()
  [188] jmp [230]
  [191] peek 0
  [193] pushsymb 686 ............................ <#modal>
  [196] eq
  [197] jmpifz [212] ............................ (case) #modal:
  [200] pop 1
  [202] getprop 1365 ............................ <pModal>
  [205] pusharglistnoret 1 ...................... <pModal>
  [207] extcall 25 .............................. return pModal
  [209] jmp [230]
  [212] peek 0
  [214] pushsymb 996 ............................ <#spriteList>
  [217] eq
  [218] jmpifz [230] ............................ (case) #spriteList:
  [221] pop 1
  [223] getprop 1294 ............................ <pSpriteList>
  [226] pusharglistnoret 1 ...................... <pSpriteList>
  [228] extcall 25 .............................. return pSpriteList
  [230] pop 1 ................................... end case
  [232] pushzero ................................ <0>
  [233] pusharglistnoret 1 ...................... <0>
  [235] extcall 25 .............................. return 0
  [237] ret
end

on setProperty me, tProp, tValue
  [  0] getparam 1 .............................. <tProp>
  [  2] peek 0 .................................. case tProp of
  [  4] pushsymb 538 ............................ <#locX>
  [  7] eq
  [  8] jmpifz [ 23] ............................ (case) #locX:
  [ 11] getparam 0 .............................. <me>
  [ 13] getparam 2 .............................. <tValue>
  [ 15] pusharglistnoret 2 ...................... <me, tValue>
  [ 17] objcall 1285 ............................ me.moveX(tValue)
  [ 20] jmp [166]
  [ 23] peek 0
  [ 25] pushsymb 539 ............................ <#locY>
  [ 28] eq
  [ 29] jmpifz [ 44] ............................ (case) #locY:
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 2 .............................. <tValue>
  [ 36] pusharglistnoret 2 ...................... <me, tValue>
  [ 38] objcall 1286 ............................ me.moveY(tValue)
  [ 41] jmp [166]
  [ 44] peek 0
  [ 46] pushsymb 881 ............................ <#locZ>
  [ 49] eq
  [ 50] jmpifz [ 65] ............................ (case) #locZ:
  [ 53] getparam 0 .............................. <me>
  [ 55] getparam 2 .............................. <tValue>
  [ 57] pusharglistnoret 2 ...................... <me, tValue>
  [ 59] objcall 1272 ............................ me.moveZ(tValue)
  [ 62] jmp [166]
  [ 65] peek 0
  [ 67] pushsymb 971 ............................ <#boundary>
  [ 70] eq
  [ 71] jmpifz [ 82] ............................ (case) #boundary:
  [ 74] getparam 2 .............................. <tValue>
  [ 76] setprop 967 ............................. pBoundary = tValue
  [ 79] jmp [166]
  [ 82] peek 0
  [ 84] pushsymb 1306 ........................... <#title>
  [ 87] eq
  [ 88] jmpifz [ 99] ............................ (case) #title:
  [ 91] getparam 2 .............................. <tValue>
  [ 93] setprop 1290 ............................ pTitle = tValue
  [ 96] jmp [166]
  [ 99] peek 0
  [101] pushsymb 686 ............................ <#modal>
  [104] eq
  [105] jmpifz [116] ............................ (case) #modal:
  [108] getparam 2 .............................. <tValue>
  [110] setprop 1365 ............................ pModal = tValue
  [113] jmp [166]
  [116] peek 0
  [118] pushsymb 878 ............................ <#visible>
  [121] eq
  [122] jmpifz [150] ............................ (case) #visible:
  [125] getparam 2 .............................. <tValue>
  [127] jmpifz [140] ............................ if tValue then / else
  [130] getparam 0 .............................. <me>
  [132] pusharglistnoret 1 ...................... <me>
  [134] objcall 977 ............................. me.show()
  [137] jmp [147]
  [140] getparam 0 .............................. <me>
  [142] pusharglistnoret 1 ...................... <me>
  [144] objcall 976 ............................. me.hide()
  [147] jmp [166]
  [150] peek 0
  [152] pushsymb 1381 ........................... <#otherwise>
  [155] eq
  [156] jmpifz [166] ............................ (case) #otherwise:
  [159] pop 1
  [161] pushzero ................................ <0>
  [162] pusharglistnoret 1 ...................... <0>
  [164] extcall 25 .............................. return 0
  [166] pop 1 ................................... end case
  [168] pushint8 1 .............................. <1>
  [170] pusharglistnoret 1 ...................... <1>
  [172] extcall 25 .............................. return 1
  [174] ret
end

on mouseEnter me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 11 ............................. <#mouseEnter>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #mouseEnter, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#mouseEnter, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseEnter, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#mouseEnter, tSprID)
  [ 14] ret
end

on mouseLeave me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 12 ............................. <#mouseLeave>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #mouseLeave, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#mouseLeave, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseLeave, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#mouseLeave, tSprID)
  [ 14] ret
end

on mouseWithin me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 13 ............................. <#mouseWithin>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #mouseWithin, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#mouseWithin, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseWithin, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#mouseWithin, tSprID)
  [ 14] ret
end

on mouseDown me, tNull, tSprID
  [  0] getprop 1363 ............................ <pActive>
  [  3] not ..................................... <not pActive>
  [  4] getprop 1364 ............................ <pLock>
  [  7] not ..................................... <not pLock>
  [  8] and ..................................... <not pActive and not pLock>
  [  9] jmpifz [ 26] ............................ if not pActive and not pLock then
  [ 12] getprop 1374 ............................ <pWindowMngr>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 3 ............................... <me.getID()>
  [ 21] pusharglistnoret 2 ...................... <pWindowMngr, me.getID()>
  [ 23] objcall 341 ............................. pWindowMngr.Activate(me.getID())
  [ 26] getprop 1372 ............................ <pSpecialIDList>
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] pusharglist 2 ........................... <pSpecialIDList, tSprID>
  [ 33] objcall 517 ............................. <pSpecialIDList.getPos(tSprID)>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <pSpecialIDList.getPos(tSprID) <> 0>
  [ 38] jmpifz [ 78] ............................ if pSpecialIDList.getPos(tSprID) <> 0 then
  [ 41] getparam 2 .............................. <tSprID>
  [ 43] pushcons 0 .............................. <"drag">
  [ 45] containsstr ............................. <tSprID contains "drag">
  [ 46] jmpifz [ 61] ............................ if tSprID contains "drag" then / else
  [ 49] getparam 0 .............................. <me>
  [ 51] pushint8 1 .............................. <1>
  [ 53] pusharglistnoret 2 ...................... <me, 1>
  [ 55] objcall 1279 ............................ me.drag(1)
  [ 58] jmp [ 78]
  [ 61] getparam 2 .............................. <tSprID>
  [ 63] pushcons 2 .............................. <"scale">
  [ 65] containsstr ............................. <tSprID contains "scale">
  [ 66] jmpifz [ 78] ............................ if tSprID contains "scale" then
  [ 69] getparam 0 .............................. <me>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglistnoret 2 ...................... <me, 1>
  [ 75] objcall 1235 ............................ me.scale(1)
  [ 78] getparam 0 .............................. <me>
  [ 80] pushsymb 14 ............................. <#mouseDown>
  [ 82] getparam 2 .............................. <tSprID>
  [ 84] pusharglist 3 ........................... <me, #mouseDown, tSprID>
  [ 86] objcall 18 .............................. <me.redirectEvent(#mouseDown, tSprID)>
  [ 88] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseDown, tSprID)>
  [ 90] extcall 25 .............................. return me.redirectEvent(#mouseDown, tSprID)
  [ 92] ret
end

on mouseUp me, tNull, tSprID
  [  0] getprop 1372 ............................ <pSpecialIDList>
  [  3] getparam 2 .............................. <tSprID>
  [  5] pusharglist 2 ........................... <pSpecialIDList, tSprID>
  [  7] objcall 517 ............................. <pSpecialIDList.getPos(tSprID)>
  [ 10] pushzero ................................ <0>
  [ 11] nteq .................................... <pSpecialIDList.getPos(tSprID) <> 0>
  [ 12] jmpifz [ 95] ............................ if pSpecialIDList.getPos(tSprID) <> 0 then
  [ 15] getparam 2 .............................. <tSprID>
  [ 17] pushcons 0 .............................. <"drag">
  [ 19] containsstr ............................. <tSprID contains "drag">
  [ 20] jmpifz [ 34] ............................ if tSprID contains "drag" then / else
  [ 23] getparam 0 .............................. <me>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 2 ...................... <me, 0>
  [ 28] objcall 1279 ............................ me.drag(0)
  [ 31] jmp [ 95]
  [ 34] getparam 2 .............................. <tSprID>
  [ 36] pushcons 2 .............................. <"scale">
  [ 38] containsstr ............................. <tSprID contains "scale">
  [ 39] jmpifz [ 53] ............................ if tSprID contains "scale" then / else
  [ 42] getparam 0 .............................. <me>
  [ 44] pushzero ................................ <0>
  [ 45] pusharglistnoret 2 ...................... <me, 0>
  [ 47] objcall 1235 ............................ me.scale(0)
  [ 50] jmp [ 95]
  [ 53] getparam 2 .............................. <tSprID>
  [ 55] pushcons 1 .............................. <"close">
  [ 57] containsstr ............................. <tSprID contains "close">
  [ 58] jmpifz [ 95] ............................ if tSprID contains "close" then
  [ 61] getprop 1367 ............................ <pClientID>
  [ 64] pusharglist 1 ........................... <pClientID>
  [ 66] extcall 20 .............................. <voidp(pClientID)>
  [ 68] jmpifz [ 91] ............................ if voidp(pClientID) then / else
  [ 71] getprop 1374 ............................ <pWindowMngr>
  [ 74] getparam 0 .............................. <me>
  [ 76] pusharglist 1 ........................... <me>
  [ 78] objcall 3 ............................... <me.getID()>
  [ 80] pusharglist 2 ........................... <pWindowMngr, me.getID()>
  [ 82] objcall 125 ............................. <pWindowMngr.Remove(me.getID())>
  [ 84] pusharglistnoret 1 ...................... <pWindowMngr.Remove(me.getID())>
  [ 86] extcall 25 .............................. return pWindowMngr.Remove(me.getID())
  [ 88] jmp [ 95]
  [ 91] pushcons 1 .............................. <"close">
  [ 93] setparam 2 .............................. tSprID = "close"
  [ 95] getparam 0 .............................. <me>
  [ 97] pushsymb 0 .............................. <#mouseUp>
  [ 99] getparam 2 .............................. <tSprID>
  [101] pusharglist 3 ........................... <me, #mouseUp, tSprID>
  [103] objcall 18 .............................. <me.redirectEvent(#mouseUp, tSprID)>
  [105] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseUp, tSprID)>
  [107] extcall 25 .............................. return me.redirectEvent(#mouseUp, tSprID)
  [109] ret
end

on mouseUpOutSide me, tNull, tSprID
  [  0] getparam 2 .............................. <tSprID>
  [  2] pushcons 0 .............................. <"drag">
  [  4] containsstr ............................. <tSprID contains "drag">
  [  5] jmpifz [ 16] ............................ if tSprID contains "drag" then
  [  8] getparam 0 .............................. <me>
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 2 ...................... <me, 0>
  [ 13] objcall 1279 ............................ me.drag(0)
  [ 16] getparam 2 .............................. <tSprID>
  [ 18] pushcons 2 .............................. <"scale">
  [ 20] containsstr ............................. <tSprID contains "scale">
  [ 21] jmpifz [ 32] ............................ if tSprID contains "scale" then
  [ 24] getparam 0 .............................. <me>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 2 ...................... <me, 0>
  [ 29] objcall 1235 ............................ me.scale(0)
  [ 32] getparam 0 .............................. <me>
  [ 34] pushsymb 15 ............................. <#mouseUpOutSide>
  [ 36] getparam 2 .............................. <tSprID>
  [ 38] pusharglist 3 ........................... <me, #mouseUpOutSide, tSprID>
  [ 40] objcall 18 .............................. <me.redirectEvent(#mouseUpOutSide, tSprID)>
  [ 42] pusharglistnoret 1 ...................... <me.redirectEvent(#mouseUpOutSide, tSprID)>
  [ 44] extcall 25 .............................. return me.redirectEvent(#mouseUpOutSide, tSprID)
  [ 46] ret
end

on keyDown me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 16 ............................. <#keyDown>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #keyDown, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#keyDown, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#keyDown, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#keyDown, tSprID)
  [ 14] ret
end

on keyUp me, tNull, tSprID
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 17 ............................. <#keyUp>
  [  4] getparam 2 .............................. <tSprID>
  [  6] pusharglist 3 ........................... <me, #keyUp, tSprID>
  [  8] objcall 18 .............................. <me.redirectEvent(#keyUp, tSprID)>
  [ 10] pusharglistnoret 1 ...................... <me.redirectEvent(#keyUp, tSprID)>
  [ 12] extcall 25 .............................. return me.redirectEvent(#keyUp, tSprID)
  [ 14] ret
end

on supportedEvents me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tList = []
  [  5] getlocal 0 .............................. <tList>
  [  7] pushsymb 11 ............................. <#mouseEnter>
  [  9] pusharglistnoret 2 ...................... <tList, #mouseEnter>
  [ 11] objcall 122 ............................. tList.add(#mouseEnter)
  [ 13] getlocal 0 .............................. <tList>
  [ 15] pushsymb 12 ............................. <#mouseLeave>
  [ 17] pusharglistnoret 2 ...................... <tList, #mouseLeave>
  [ 19] objcall 122 ............................. tList.add(#mouseLeave)
  [ 21] getlocal 0 .............................. <tList>
  [ 23] pushsymb 13 ............................. <#mouseWithin>
  [ 25] pusharglistnoret 2 ...................... <tList, #mouseWithin>
  [ 27] objcall 122 ............................. tList.add(#mouseWithin)
  [ 29] getlocal 0 .............................. <tList>
  [ 31] pushsymb 14 ............................. <#mouseDown>
  [ 33] pusharglistnoret 2 ...................... <tList, #mouseDown>
  [ 35] objcall 122 ............................. tList.add(#mouseDown)
  [ 37] getlocal 0 .............................. <tList>
  [ 39] pushsymb 0 .............................. <#mouseUp>
  [ 41] pusharglistnoret 2 ...................... <tList, #mouseUp>
  [ 43] objcall 122 ............................. tList.add(#mouseUp)
  [ 45] getlocal 0 .............................. <tList>
  [ 47] pushsymb 15 ............................. <#mouseUpOutSide>
  [ 49] pusharglistnoret 2 ...................... <tList, #mouseUpOutSide>
  [ 51] objcall 122 ............................. tList.add(#mouseUpOutSide)
  [ 53] getlocal 0 .............................. <tList>
  [ 55] pushsymb 16 ............................. <#keyDown>
  [ 57] pusharglistnoret 2 ...................... <tList, #keyDown>
  [ 59] objcall 122 ............................. tList.add(#keyDown)
  [ 61] getlocal 0 .............................. <tList>
  [ 63] pushsymb 17 ............................. <#keyUp>
  [ 65] pusharglistnoret 2 ...................... <tList, #keyUp>
  [ 67] objcall 122 ............................. tList.add(#keyUp)
  [ 69] getlocal 0 .............................. <tList>
  [ 71] pusharglistnoret 1 ...................... <tList>
  [ 73] extcall 25 .............................. return tList
  [ 75] ret
end

on redirectEvent me, tEvent, tSprID
  [  0] getprop 1373 ............................ <pProcedures>
  [  3] getparam 1 .............................. <tEvent>
  [  5] pusharglist 2 ........................... <pProcedures, tEvent>
  [  7] objcall 54 .............................. <pProcedures[tEvent]>
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglist 2 ........................... <pProcedures[tEvent], 1>
  [ 13] objcall 54 .............................. <pProcedures[tEvent][1]>
  [ 15] setlocal 0 .............................. tMethod = pProcedures[tEvent][1]
  [ 17] getprop 1373 ............................ <pProcedures>
  [ 20] getparam 1 .............................. <tEvent>
  [ 22] pusharglist 2 ........................... <pProcedures, tEvent>
  [ 24] objcall 54 .............................. <pProcedures[tEvent]>
  [ 26] pushint8 2 .............................. <2>
  [ 28] pusharglist 2 ........................... <pProcedures[tEvent], 2>
  [ 30] objcall 54 .............................. <pProcedures[tEvent][2]>
  [ 32] setlocal 1 .............................. tTarget = pProcedures[tEvent][2]
  [ 34] getparam 1 .............................. <tEvent>
  [ 36] getprop 1369 ............................ <pElemList>
  [ 39] getparam 2 .............................. <tSprID>
  [ 41] pusharglist 2 ........................... <pElemList, tSprID>
  [ 43] objcall 54 .............................. <pElemList[tSprID]>
  [ 45] pusharglist 1 ........................... <[pElemList[tSprID]]>
  [ 47] pushlist ................................ <[pElemList[tSprID]]>
  [ 48] getparam 2 .............................. <tSprID>
  [ 50] pusharglist 3 ........................... <tEvent, [pElemList[tSprID]], tSprID>
  [ 52] extcall 68 .............................. <call(tEvent, [pElemList[tSprID]], tSprID)>
  [ 54] setlocal 2 .............................. tParam = call(tEvent, [pElemList[tSprID]], tSprID)
  [ 56] getlocal 2 .............................. <tParam>
  [ 58] pushzero ................................ <0>
  [ 59] eq ...................................... <tParam = 0>
  [ 60] jmpifz [ 68] ............................ if tParam = 0 then
  [ 63] pushzero ................................ <0>
  [ 64] pusharglistnoret 1 ...................... <0>
  [ 66] extcall 25 .............................. return 0
  [ 68] getlocal 1 .............................. <tTarget>
  [ 70] pusharglist 1 ........................... <tTarget>
  [ 72] extcall 58 .............................. <getObject(tTarget)>
  [ 74] setlocal 3 .............................. tClient = getObject(tTarget)
  [ 76] getlocal 3 .............................. <tClient>
  [ 78] pushzero ................................ <0>
  [ 79] nteq .................................... <tClient <> 0>
  [ 80] jmpifz [110] ............................ if tClient <> 0 then / else
  [ 83] getlocal 0 .............................. <tMethod>
  [ 85] getlocal 3 .............................. <tClient>
  [ 87] getparam 1 .............................. <tEvent>
  [ 89] getparam 2 .............................. <tSprID>
  [ 91] getlocal 2 .............................. <tParam>
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglist 1 ........................... <me>
  [ 97] objcall 3 ............................... <me.getID()>
  [ 99] pusharglist 6 ........................... <tMethod, tClient, tEvent, tSprID, tParam, me.getID()>
  [101] extcall 68 .............................. <call(tMethod, tClient, tEvent, tSprID, tParam, me.getID())>
  [103] pusharglistnoret 1 ...................... <call(tMethod, tClient, tEvent, tSprID, tParam, me.getID())>
  [105] extcall 25 .............................. return call(tMethod, tClient, tEvent, tSprID, tParam, me.getID())
  [107] jmp [122]
  [110] getparam 0 .............................. <me>
  [112] getparam 1 .............................. <tEvent>
  [114] pusharglist 2 ........................... <me, tEvent>
  [116] objcall 2 ............................... <me.removeProcedure(tEvent)>
  [118] pusharglistnoret 1 ...................... <me.removeProcedure(tEvent)>
  [120] extcall 25 .............................. return me.removeProcedure(tEvent)
  [122] ret
end

on buildVisual me, tLayout
  [  0] pushsymb 457 ............................ <#layout_parser>
  [  3] pusharglist 1 ........................... <#layout_parser>
  [  5] extcall 58 .............................. <getObject(#layout_parser)>
  [  7] getparam 1 .............................. <tLayout>
  [  9] pusharglist 2 ........................... <getObject(#layout_parser), tLayout>
  [ 11] objcall 458 ............................. <getObject(#layout_parser).parse(tLayout)>
  [ 14] setparam 1 .............................. tLayout = getObject(#layout_parser).parse(tLayout)
  [ 16] getparam 1 .............................. <tLayout>
  [ 18] pusharglist 1 ........................... <tLayout>
  [ 20] extcall 53 .............................. <listp(tLayout)>
  [ 22] not ..................................... <not listp(tLayout)>
  [ 23] jmpifz [ 44] ............................ if not listp(tLayout) then
  [ 26] getparam 0 .............................. <me>
  [ 28] pushcons 8 .............................. <"Invalid window definition:">
  [ 30] getparam 1 .............................. <tLayout>
  [ 32] joinpadstr .............................. <"Invalid window definition:" && tLayout>
  [ 33] pushsymb 1289 ........................... <#buildVisual>
  [ 36] pusharglist 3 ........................... <me, "Invalid window definition:" && tLayout, #buildVisual>
  [ 38] extcall 39 .............................. <error(me, "Invalid window definition:" && tLayout, #buildVisual)>
  [ 40] pusharglistnoret 1 ...................... <error(me, "Invalid window definition:" && tLayout, #buildVisual)>
  [ 42] extcall 25 .............................. return error(me, "Invalid window definition:" && tLayout, #buildVisual)
  [ 44] getprop 1370 ............................ <pGroupData>
  [ 47] getobjprop 22 ........................... <pGroupData.count>
  [ 49] setlocal 0 .............................. tGroupNum = pGroupData.count
  [ 51] pusharglist 0 ........................... <[:]>
  [ 53] pushproplist ............................ <[:]>
  [ 54] setlocal 1 .............................. tElemList = [:]
  [ 56] pusharglist 0 ........................... <[:]>
  [ 58] pushproplist ............................ <[:]>
  [ 59] setlocal 2 .............................. tmemberlist = [:]
  [ 61] pusharglist 0 ........................... <[:]>
  [ 63] pushproplist ............................ <[:]>
  [ 64] setlocal 3 .............................. tSpriteList = [:]
  [ 66] pushsymb 553 ............................ <#members>
  [ 69] pusharglist 0 ........................... <[]>
  [ 71] pushlist ................................ <[]>
  [ 72] pushsymb 1377 ........................... <#sprites>
  [ 75] pusharglist 0 ........................... <[]>
  [ 77] pushlist ................................ <[]>
  [ 78] pushsymb 1376 ........................... <#items>
  [ 81] pusharglist 0 ........................... <[]>
  [ 83] pushlist ................................ <[]>
  [ 84] pushsymb 555 ............................ <#rect>
  [ 87] pusharglist 0 ........................... <[]>
  [ 89] pushlist ................................ <[]>
  [ 90] pushsymb 1090 ........................... <#border>
  [ 93] pusharglist 0 ........................... <[]>
  [ 95] pushlist ................................ <[]>
  [ 96] pusharglist 10 .......................... <[#members: [], #sprites: [], #items: [], #rect: [], #border: []]>
  [ 98] pushproplist ............................ <[#members: [], #sprites: [], #items: [], #rect: [], #border: []]>
  [ 99] setlocal 4 .............................. tGroupData = [#members: [], #sprites: [], #items: [], #rect: [], #border: []]
  [101] pusharglist 0 ........................... <>
  [103] extcall 231 ............................. <getSpriteManager()>
  [105] setlocal 5 .............................. tSprManager = getSpriteManager()
  [107] pusharglist 0 ........................... <>
  [109] extcall 76 .............................. <getResourceManager()>
  [111] setlocal 6 .............................. tResManager = getResourceManager()
  [113] getparam 1 .............................. <tLayout>
  [115] pushsymb 989 ............................ <#elements>
  [118] pusharglist 2 ........................... <tLayout, #elements>
  [120] objcall 54 .............................. <tLayout[#elements]>
  [122] peek 0
  [124] pusharglist 1
  [126] extcall 22
  [128] pushint8 1
  [130] peek 0
  [132] peek 2
  [134] lteq
  [135] jmpifz [1562] ........................... repeat with tElement in tLayout[#elements]
  [138] peek 2
  [140] peek 1
  [142] pusharglist 2
  [144] extcall 54
  [146] setlocal 7
  [148] getlocal 7 .............................. <tElement>
  [150] pushint8 1 .............................. <1>
  [152] pusharglist 2 ........................... <tElement, 1>
  [154] objcall 54 .............................. <tElement[1]>
  [156] pushsymb 34 ............................. <#id>
  [158] pusharglist 2 ........................... <tElement[1], #id>
  [160] objcall 54 .............................. <tElement[1][#id]>
  [162] setlocal 8 .............................. tid = tElement[1][#id]
  [164] getprop 1369 ............................ <pElemList>
  [167] getlocal 8 .............................. <tid>
  [169] pusharglist 2 ........................... <pElemList, tid>
  [171] objcall 54 .............................. <pElemList[tid]>
  [173] pusharglist 1 ........................... <pElemList[tid]>
  [175] extcall 20 .............................. <voidp(pElemList[tid])>
  [177] not ..................................... <not voidp(pElemList[tid])>
  [178] jmpifz [188] ............................ if not voidp(pElemList[tid]) then
  [181] getlocal 8 .............................. <tid>
  [183] getlocal 0 .............................. <tGroupNum>
  [185] joinstr ................................. <tid & tGroupNum>
  [186] setlocal 8 .............................. tid = tid & tGroupNum
  [188] getlocal 6 .............................. <tResManager>
  [190] getparam 0 .............................. <me>
  [192] pusharglist 1 ........................... <me>
  [194] objcall 3 ............................... <me.getID()>
  [196] pushcons 9 .............................. <"_">
  [198] joinstr ................................. <me.getID() & "_">
  [199] getlocal 8 .............................. <tid>
  [201] joinstr ................................. <me.getID() & "_" & tid>
  [202] pushsymb 722 ............................ <#bitmap>
  [205] pusharglist 3 ........................... <tResManager, me.getID() & "_" & tid, #bitmap>
  [207] objcall 164 ............................. <tResManager.createMember(me.getID() & "_" & tid, #bitmap)>
  [209] pusharglist 1 ........................... <tResManager.createMember(me.getID() & "_" & tid, #bitmap)>
  [211] extcall 41 .............................. <member(tResManager.createMember(me.getID() & "_" & tid, #bitmap))>
  [213] setlocal 9 .............................. tmember = member(tResManager.createMember(me.getID() & "_" & tid, #bitmap))
  [215] getlocal 5 .............................. <tSprManager>
  [217] getparam 0 .............................. <me>
  [219] pusharglist 1 ........................... <me>
  [221] objcall 3 ............................... <me.getID()>
  [223] pusharglist 2 ........................... <tSprManager, me.getID()>
  [225] objcall 232 ............................. <tSprManager.reserveSprite(me.getID())>
  [227] pusharglist 1 ........................... <tSprManager.reserveSprite(me.getID())>
  [229] extcall 36 .............................. <sprite(tSprManager.reserveSprite(me.getID()))>
  [231] setlocal 10 ............................. tsprite = sprite(tSprManager.reserveSprite(me.getID()))
  [233] getlocal 10 ............................. <tsprite>
  [235] getobjprop 37 ........................... <tsprite.spriteNum>
  [237] pushint8 1 .............................. <1>
  [239] lt ...................................... <tsprite.spriteNum < 1>
  [240] jmpifz [361] ............................ if tsprite.spriteNum < 1 then
  [243] getlocal 3 .............................. <tSpriteList>
  [245] peek 0
  [247] pusharglist 1
  [249] extcall 22
  [251] pushint8 1
  [253] peek 0
  [255] peek 2
  [257] lteq
  [258] jmpifz [290] ............................ repeat with t_rSpr in tSpriteList
  [261] peek 2
  [263] peek 1
  [265] pusharglist 2
  [267] extcall 54
  [269] setlocal 11
  [271] getlocal 11 ............................. <t_rSpr>
  [273] getobjprop 37 ........................... <t_rSpr.spriteNum>
  [275] getparam 0 .............................. <me>
  [277] pusharglist 1 ........................... <me>
  [279] objcall 3 ............................... <me.getID()>
  [281] pusharglistnoret 2 ...................... <t_rSpr.spriteNum, me.getID()>
  [283] extcall 233 ............................. releaseSprite(t_rSpr.spriteNum, me.getID())
  [285] pushint8 1
  [287] add
  [288] endrepeat [253]
  [290] pop 3
  [292] pusharglist 0 ........................... <[:]>
  [294] pushproplist ............................ <[:]>
  [295] setlocal 3 .............................. tSpriteList = [:]
  [297] getlocal 2 .............................. <tmemberlist>
  [299] peek 0
  [301] pusharglist 1
  [303] extcall 22
  [305] pushint8 1
  [307] peek 0
  [309] peek 2
  [311] lteq
  [312] jmpifz [339] ............................ repeat with t_rMem in tmemberlist
  [315] peek 2
  [317] peek 1
  [319] pusharglist 2
  [321] extcall 54
  [323] setlocal 12
  [325] getlocal 12 ............................. <t_rMem>
  [327] getobjprop 725 .......................... <t_rMem.name>
  [330] pusharglistnoret 1 ...................... <t_rMem.name>
  [332] extcall 165 ............................. removeMember(t_rMem.name)
  [334] pushint8 1
  [336] add
  [337] endrepeat [307]
  [339] pop 3
  [341] pusharglist 0 ........................... <[:]>
  [343] pushproplist ............................ <[:]>
  [344] setlocal 2 .............................. tmemberlist = [:]
  [346] getparam 0 .............................. <me>
  [348] pushcons 10 ............................. <"Failed to build window. System out of sprites!">
  [350] pushsymb 1289 ........................... <#buildVisual>
  [353] pusharglist 3 ........................... <me, "Failed to build window. System out of sprites!", #buildVisual>
  [355] extcall 39 .............................. <error(me, "Failed to build window. System out of sprites!", #buildVisual)>
  [357] pusharglistnoret 1 ...................... <error(me, "Failed to build window. System out of sprites!", #buildVisual)>
  [359] extcall 25 .............................. return error(me, "Failed to build window. System out of sprites!", #buildVisual)
  [361] getlocal 2 .............................. <tmemberlist>
  [363] getlocal 8 .............................. <tid>
  [365] getlocal 9 .............................. <tmember>
  [367] pusharglistnoret 3 ...................... <tmemberlist, tid, tmember>
  [369] objcall 24 .............................. tmemberlist[tid] = tmember
  [371] getlocal 3 .............................. <tSpriteList>
  [373] getlocal 8 .............................. <tid>
  [375] getlocal 10 ............................. <tsprite>
  [377] pusharglistnoret 3 ...................... <tSpriteList, tid, tsprite>
  [379] objcall 24 .............................. tSpriteList[tid] = tsprite
  [381] getlocal 10 ............................. <tsprite>
  [383] getlocal 9 .............................. <tmember>
  [385] getobjprop 658 .......................... <tmember.number>
  [388] setobjprop 882 .......................... tsprite.castNum = tmember.number
  [391] getlocal 10 ............................. <tsprite>
  [393] pushint8 8 .............................. <8>
  [395] setobjprop 560 .......................... tsprite.ink = 8
  [398] pushint16 2000 .......................... <2000>
  [401] pushint16 2000 .......................... <2000>
  [404] pushint16 2000 .......................... <2000>
  [407] inv ..................................... <-2000>
  [408] pushint16 2000 .......................... <2000>
  [411] inv ..................................... <-2000>
  [412] pusharglist 4 ........................... <2000, 2000, -2000, -2000>
  [414] extcall 555 ............................. <rect(2000, 2000, -2000, -2000)>
  [417] setlocal 13 ............................. tElemRect = rect(2000, 2000, -2000, -2000)
  [419] getlocal 4 .............................. <tGroupData>
  [421] pushsymb 553 ............................ <#members>
  [424] pusharglist 2 ........................... <tGroupData, #members>
  [426] objcall 54 .............................. <tGroupData[#members]>
  [428] getlocal 9 .............................. <tmember>
  [430] pusharglistnoret 2 ...................... <tGroupData[#members], tmember>
  [432] objcall 122 ............................. tGroupData[#members].add(tmember)
  [434] getlocal 4 .............................. <tGroupData>
  [436] pushsymb 1377 ........................... <#sprites>
  [439] pusharglist 2 ........................... <tGroupData, #sprites>
  [441] objcall 54 .............................. <tGroupData[#sprites]>
  [443] getlocal 10 ............................. <tsprite>
  [445] pusharglistnoret 2 ...................... <tGroupData[#sprites], tsprite>
  [447] objcall 122 ............................. tGroupData[#sprites].add(tsprite)
  [449] getlocal 5 .............................. <tSprManager>
  [451] getlocal 10 ............................. <tsprite>
  [453] getobjprop 37 ........................... <tsprite.spriteNum>
  [455] getlocal 8 .............................. <tid>
  [457] pusharglistnoret 3 ...................... <tSprManager, tsprite.spriteNum, tid>
  [459] objcall 234 ............................. tSprManager.setEventBroker(tsprite.spriteNum, tid)
  [461] getlocal 10 ............................. <tsprite>
  [463] pusharglist 0 ........................... <>
  [465] extcall 32 .............................. <VOID>
  [467] getparam 0 .............................. <me>
  [469] pusharglist 1 ........................... <me>
  [471] objcall 3 ............................... <me.getID()>
  [473] pusharglist 0 ........................... <>
  [475] extcall 32 .............................. <VOID>
  [477] pusharglistnoret 4 ...................... <tsprite, VOID, me.getID(), VOID>
  [479] objcall 1 ............................... tsprite.registerProcedure(VOID, me.getID(), VOID)
  [481] getlocal 7 .............................. <tElement>
  [483] pushint8 1 .............................. <1>
  [485] pusharglist 2 ........................... <tElement, 1>
  [487] objcall 54 .............................. <tElement[1]>
  [489] pushsymb 501 ............................ <#blend>
  [492] pusharglist 2 ........................... <tElement[1], #blend>
  [494] objcall 54 .............................. <tElement[1][#blend]>
  [496] setlocal 14 ............................. tBlend = tElement[1][#blend]
  [498] getlocal 7 .............................. <tElement>
  [500] pushint8 1 .............................. <1>
  [502] pusharglist 2 ........................... <tElement, 1>
  [504] objcall 54 .............................. <tElement[1]>
  [506] pushsymb 560 ............................ <#ink>
  [509] pusharglist 2 ........................... <tElement[1], #ink>
  [511] objcall 54 .............................. <tElement[1][#ink]>
  [513] setlocal 15 ............................. tInk = tElement[1][#ink]
  [515] getlocal 7 .............................. <tElement>
  [517] pushint8 1 .............................. <1>
  [519] pusharglist 2 ........................... <tElement, 1>
  [521] objcall 54 .............................. <tElement[1]>
  [523] pushsymb 597 ............................ <#color>
  [526] pusharglist 2 ........................... <tElement[1], #color>
  [528] objcall 54 .............................. <tElement[1][#color]>
  [530] setlocal 16 ............................. tColor = tElement[1][#color]
  [532] getlocal 7 .............................. <tElement>
  [534] pushint8 1 .............................. <1>
  [536] pusharglist 2 ........................... <tElement, 1>
  [538] objcall 54 .............................. <tElement[1]>
  [540] pushsymb 1225 ........................... <#bgColor>
  [543] pusharglist 2 ........................... <tElement[1], #bgColor>
  [545] objcall 54 .............................. <tElement[1][#bgColor]>
  [547] setlocal 17 ............................. tBgColor = tElement[1][#bgColor]
  [549] getlocal 7 .............................. <tElement>
  [551] pushint8 1 .............................. <1>
  [553] pusharglist 2 ........................... <tElement, 1>
  [555] objcall 54 .............................. <tElement[1]>
  [557] pushsymb 1226 ........................... <#palette>
  [560] pusharglist 2 ........................... <tElement[1], #palette>
  [562] objcall 54 .............................. <tElement[1][#palette]>
  [564] setlocal 18 ............................. tPalette = tElement[1][#palette]
  [566] pushint8 1 .............................. <1>
  [568] setlocal 19 ............................. tIsBlendShared = 1
  [570] pushint8 1 .............................. <1>
  [572] setlocal 20 ............................. tIsColorShared = 1
  [574] pushint8 1 .............................. <1>
  [576] setlocal 21 ............................. tIsBgColorShared = 1
  [578] pushint8 1 .............................. <1>
  [580] setlocal 22 ............................. tIsInkShared = 1
  [582] pushint8 1 .............................. <1>
  [584] setlocal 23 ............................. tIsPaletteShared = 1
  [586] getlocal 7 .............................. <tElement>
  [588] peek 0
  [590] pusharglist 1
  [592] extcall 22
  [594] pushint8 1
  [596] peek 0
  [598] peek 2
  [600] lteq
  [601] jmpifz [1057] ........................... repeat with tItem in tElement
  [604] peek 2
  [606] peek 1
  [608] pusharglist 2
  [610] extcall 54
  [612] setlocal 24
  [614] getlocal 24 ............................. <tItem>
  [616] pushsymb 34 ............................. <#id>
  [618] getlocal 8 .............................. <tid>
  [620] pusharglistnoret 3 ...................... <tItem, #id, tid>
  [622] objcall 24 .............................. tItem[#id] = tid
  [624] getlocal 24 ............................. <tItem>
  [626] pushsymb 1384 ........................... <#mother>
  [629] getparam 0 .............................. <me>
  [631] pusharglist 1 ........................... <me>
  [633] objcall 3 ............................... <me.getID()>
  [635] pusharglistnoret 3 ...................... <tItem, #mother, me.getID()>
  [637] objcall 24 .............................. tItem[#mother] = me.getID()
  [639] getlocal 24 ............................. <tItem>
  [641] pushsymb 462 ............................ <#buffer>
  [644] getlocal 9 .............................. <tmember>
  [646] pusharglistnoret 3 ...................... <tItem, #buffer, tmember>
  [648] objcall 24 .............................. tItem[#buffer] = tmember
  [650] getlocal 24 ............................. <tItem>
  [652] pushsymb 36 ............................. <#sprite>
  [654] getlocal 10 ............................. <tsprite>
  [656] pusharglistnoret 3 ...................... <tItem, #sprite, tsprite>
  [658] objcall 24 .............................. tItem[#sprite] = tsprite
  [660] getlocal 24 ............................. <tItem>
  [662] pushsymb 501 ............................ <#blend>
  [665] pusharglist 2 ........................... <tItem, #blend>
  [667] objcall 54 .............................. <tItem[#blend]>
  [669] getlocal 14 ............................. <tBlend>
  [671] nteq .................................... <tItem[#blend] <> tBlend>
  [672] jmpifz [678] ............................ if tItem[#blend] <> tBlend then
  [675] pushzero ................................ <0>
  [676] setlocal 19 ............................. tIsBlendShared = 0
  [678] getlocal 24 ............................. <tItem>
  [680] pushsymb 560 ............................ <#ink>
  [683] pusharglist 2 ........................... <tItem, #ink>
  [685] objcall 54 .............................. <tItem[#ink]>
  [687] getlocal 15 ............................. <tInk>
  [689] nteq .................................... <tItem[#ink] <> tInk>
  [690] jmpifz [696] ............................ if tItem[#ink] <> tInk then
  [693] pushzero ................................ <0>
  [694] setlocal 22 ............................. tIsInkShared = 0
  [696] getlocal 24 ............................. <tItem>
  [698] pushsymb 597 ............................ <#color>
  [701] pusharglist 2 ........................... <tItem, #color>
  [703] objcall 54 .............................. <tItem[#color]>
  [705] getlocal 16 ............................. <tColor>
  [707] nteq .................................... <tItem[#color] <> tColor>
  [708] jmpifz [714] ............................ if tItem[#color] <> tColor then
  [711] pushzero ................................ <0>
  [712] setlocal 20 ............................. tIsColorShared = 0
  [714] getlocal 24 ............................. <tItem>
  [716] pushsymb 1225 ........................... <#bgColor>
  [719] pusharglist 2 ........................... <tItem, #bgColor>
  [721] objcall 54 .............................. <tItem[#bgColor]>
  [723] getlocal 17 ............................. <tBgColor>
  [725] nteq .................................... <tItem[#bgColor] <> tBgColor>
  [726] jmpifz [732] ............................ if tItem[#bgColor] <> tBgColor then
  [729] pushzero ................................ <0>
  [730] setlocal 21 ............................. tIsBgColorShared = 0
  [732] getlocal 24 ............................. <tItem>
  [734] pushsymb 1226 ........................... <#palette>
  [737] pusharglist 2 ........................... <tItem, #palette>
  [739] objcall 54 .............................. <tItem[#palette]>
  [741] getlocal 18 ............................. <tPalette>
  [743] nteq .................................... <tItem[#palette] <> tPalette>
  [744] jmpifz [750] ............................ if tItem[#palette] <> tPalette then
  [747] pushzero ................................ <0>
  [748] setlocal 23 ............................. tIsPaletteShared = 0
  [750] getlocal 24 ............................. <tItem>
  [752] pushsymb 454 ............................ <#type>
  [755] pusharglist 2 ........................... <tItem, #type>
  [757] objcall 54 .............................. <tItem[#type]>
  [759] pushcons 11 ............................. <"image">
  [761] eq ...................................... <tItem[#type] = "image">
  [762] jmpifz [768] ............................ if tItem[#type] = "image" then
  [765] pushzero ................................ <0>
  [766] setlocal 23 ............................. tIsPaletteShared = 0
  [768] getlocal 24 ............................. <tItem>
  [770] pushsymb 450 ............................ <#flipH>
  [773] pusharglist 2 ........................... <tItem, #flipH>
  [775] objcall 54 .............................. <tItem[#flipH]>
  [777] jmpifz [795] ............................ if tItem[#flipH] then
  [780] getlocal 24 ............................. <tItem>
  [782] getlocal 24 ............................. <tItem>
  [784] getobjprop 504 .......................... <tItem.locH>
  [787] getlocal 24 ............................. <tItem>
  [789] getobjprop 42 ........................... <tItem.width>
  [791] sub ..................................... <tItem.locH - tItem.width>
  [792] setobjprop 504 .......................... tItem.locH = tItem.locH - tItem.width
  [795] getlocal 24 ............................. <tItem>
  [797] pushsymb 451 ............................ <#flipV>
  [800] pusharglist 2 ........................... <tItem, #flipV>
  [802] objcall 54 .............................. <tItem[#flipV]>
  [804] jmpifz [822] ............................ if tItem[#flipV] then
  [807] getlocal 24 ............................. <tItem>
  [809] getlocal 24 ............................. <tItem>
  [811] getobjprop 505 .......................... <tItem.locV>
  [814] getlocal 24 ............................. <tItem>
  [816] getobjprop 43 ........................... <tItem.height>
  [818] sub ..................................... <tItem.locV - tItem.height>
  [819] setobjprop 505 .......................... tItem.locV = tItem.locV - tItem.height
  [822] getlocal 24 ............................. <tItem>
  [824] pushsymb 504 ............................ <#locH>
  [827] pusharglist 2 ........................... <tItem, #locH>
  [829] objcall 54 .............................. <tItem[#locH]>
  [831] getlocal 13 ............................. <tElemRect>
  [833] pushint8 1 .............................. <1>
  [835] pusharglist 2 ........................... <tElemRect, 1>
  [837] objcall 54 .............................. <tElemRect[1]>
  [839] lt ...................................... <tItem[#locH] < tElemRect[1]>
  [840] jmpifz [860] ............................ if tItem[#locH] < tElemRect[1] then
  [843] getlocal 13 ............................. <tElemRect>
  [845] pushint8 1 .............................. <1>
  [847] getlocal 24 ............................. <tItem>
  [849] pushsymb 504 ............................ <#locH>
  [852] pusharglist 2 ........................... <tItem, #locH>
  [854] objcall 54 .............................. <tItem[#locH]>
  [856] pusharglistnoret 3 ...................... <tElemRect, 1, tItem[#locH]>
  [858] objcall 24 .............................. tElemRect[1] = tItem[#locH]
  [860] getlocal 24 ............................. <tItem>
  [862] pushsymb 505 ............................ <#locV>
  [865] pusharglist 2 ........................... <tItem, #locV>
  [867] objcall 54 .............................. <tItem[#locV]>
  [869] getlocal 13 ............................. <tElemRect>
  [871] pushint8 2 .............................. <2>
  [873] pusharglist 2 ........................... <tElemRect, 2>
  [875] objcall 54 .............................. <tElemRect[2]>
  [877] lt ...................................... <tItem[#locV] < tElemRect[2]>
  [878] jmpifz [898] ............................ if tItem[#locV] < tElemRect[2] then
  [881] getlocal 13 ............................. <tElemRect>
  [883] pushint8 2 .............................. <2>
  [885] getlocal 24 ............................. <tItem>
  [887] pushsymb 505 ............................ <#locV>
  [890] pusharglist 2 ........................... <tItem, #locV>
  [892] objcall 54 .............................. <tItem[#locV]>
  [894] pusharglistnoret 3 ...................... <tElemRect, 2, tItem[#locV]>
  [896] objcall 24 .............................. tElemRect[2] = tItem[#locV]
  [898] getlocal 24 ............................. <tItem>
  [900] pushsymb 504 ............................ <#locH>
  [903] pusharglist 2 ........................... <tItem, #locH>
  [905] objcall 54 .............................. <tItem[#locH]>
  [907] getlocal 24 ............................. <tItem>
  [909] pushsymb 42 ............................. <#width>
  [911] pusharglist 2 ........................... <tItem, #width>
  [913] objcall 54 .............................. <tItem[#width]>
  [915] add ..................................... <tItem[#locH] + tItem[#width]>
  [916] getlocal 13 ............................. <tElemRect>
  [918] pushint8 3 .............................. <3>
  [920] pusharglist 2 ........................... <tElemRect, 3>
  [922] objcall 54 .............................. <tElemRect[3]>
  [924] gt ...................................... <(tItem[#locH] + tItem[#width]) > tElemRect[3]>
  [925] jmpifz [954] ............................ if (tItem[#locH] + tItem[#width]) > tElemRect[3] then
  [928] getlocal 13 ............................. <tElemRect>
  [930] pushint8 3 .............................. <3>
  [932] getlocal 24 ............................. <tItem>
  [934] pushsymb 504 ............................ <#locH>
  [937] pusharglist 2 ........................... <tItem, #locH>
  [939] objcall 54 .............................. <tItem[#locH]>
  [941] getlocal 24 ............................. <tItem>
  [943] pushsymb 42 ............................. <#width>
  [945] pusharglist 2 ........................... <tItem, #width>
  [947] objcall 54 .............................. <tItem[#width]>
  [949] add ..................................... <tItem[#locH] + tItem[#width]>
  [950] pusharglistnoret 3 ...................... <tElemRect, 3, tItem[#locH] + tItem[#width]>
  [952] objcall 24 .............................. tElemRect[3] = tItem[#locH] + tItem[#width]
  [954] getlocal 24 ............................. <tItem>
  [956] pushsymb 505 ............................ <#locV>
  [959] pusharglist 2 ........................... <tItem, #locV>
  [961] objcall 54 .............................. <tItem[#locV]>
  [963] getlocal 24 ............................. <tItem>
  [965] pushsymb 43 ............................. <#height>
  [967] pusharglist 2 ........................... <tItem, #height>
  [969] objcall 54 .............................. <tItem[#height]>
  [971] add ..................................... <tItem[#locV] + tItem[#height]>
  [972] getlocal 13 ............................. <tElemRect>
  [974] pushint8 4 .............................. <4>
  [976] pusharglist 2 ........................... <tElemRect, 4>
  [978] objcall 54 .............................. <tElemRect[4]>
  [980] gt ...................................... <(tItem[#locV] + tItem[#height]) > tElemRect[4]>
  [981] jmpifz [1010] ........................... if (tItem[#locV] + tItem[#height]) > tElemRect[4] then
  [984] getlocal 13 ............................. <tElemRect>
  [986] pushint8 4 .............................. <4>
  [988] getlocal 24 ............................. <tItem>
  [990] pushsymb 505 ............................ <#locV>
  [993] pusharglist 2 ........................... <tItem, #locV>
  [995] objcall 54 .............................. <tItem[#locV]>
  [997] getlocal 24 ............................. <tItem>
  [999] pushsymb 43 ............................. <#height>
  [1001] pusharglist 2 .......................... <tItem, #height>
  [1003] objcall 54 ............................. <tItem[#height]>
  [1005] add .................................... <tItem[#locV] + tItem[#height]>
  [1006] pusharglistnoret 3 ..................... <tElemRect, 4, tItem[#locV] + tItem[#height]>
  [1008] objcall 24 ............................. tElemRect[4] = tItem[#locV] + tItem[#height]
  [1010] getlocal 24 ............................ <tItem>
  [1012] pushsymb 45 ............................ <#cursor>
  [1014] pusharglist 2 .......................... <tItem, #cursor>
  [1016] objcall 54 ............................. <tItem[#cursor]>
  [1018] pusharglist 1 .......................... <tItem[#cursor]>
  [1020] extcall 20 ............................. <voidp(tItem[#cursor])>
  [1022] not .................................... <not voidp(tItem[#cursor])>
  [1023] jmpifz [1043] .......................... if not voidp(tItem[#cursor]) then
  [1026] getlocal 10 ............................ <tsprite>
  [1028] getlocal 24 ............................ <tItem>
  [1030] pushsymb 45 ............................ <#cursor>
  [1032] pusharglist 2 .......................... <tItem, #cursor>
  [1034] objcall 54 ............................. <tItem[#cursor]>
  [1036] pusharglistnoret 2 ..................... <tsprite, tItem[#cursor]>
  [1038] objcall 8 .............................. tsprite.setcursor(tItem[#cursor])
  [1040] jmp [1051] ............................. next repeat
  [1043] getlocal 10 ............................ <tsprite>
  [1045] pushsymb 47 ............................ <#arrow>
  [1047] pusharglistnoret 2 ..................... <tsprite, #arrow>
  [1049] objcall 8 .............................. tsprite.setcursor(#arrow)
  [1051] pushint8 1
  [1053] add
  [1054] endrepeat [596]
  [1057] pop 3
  [1059] getlocal 23 ............................ <tIsPaletteShared>
  [1061] getlocal 18 ............................ <tPalette>
  [1063] pusharglist 1 .......................... <tPalette>
  [1065] extcall 20 ............................. <voidp(tPalette)>
  [1067] not .................................... <not voidp(tPalette)>
  [1068] and .................................... <tIsPaletteShared and not voidp(tPalette)>
  [1069] jmpifz [1120] .......................... if tIsPaletteShared and not voidp(tPalette) then / else
  [1072] getlocal 18 ............................ <tPalette>
  [1074] pusharglist 1 .......................... <tPalette>
  [1076] extcall 38 ............................. <stringp(tPalette)>
  [1078] jmpifz [1095] .......................... if stringp(tPalette) then
  [1081] getlocal 6 ............................. <tResManager>
  [1083] getlocal 18 ............................ <tPalette>
  [1085] pusharglist 2 .......................... <tResManager, tPalette>
  [1087] objcall 52 ............................. <tResManager.getmemnum(tPalette)>
  [1089] pusharglist 1 .......................... <tResManager.getmemnum(tPalette)>
  [1091] extcall 41 ............................. <member(tResManager.getmemnum(tPalette))>
  [1093] setlocal 18 ............................ tPalette = member(tResManager.getmemnum(tPalette))
  [1095] getlocal 9 ............................. <tmember>
  [1097] getlocal 13 ............................ <tElemRect>
  [1099] getobjprop 42 .......................... <tElemRect.width>
  [1101] getlocal 13 ............................ <tElemRect>
  [1103] getobjprop 43 .......................... <tElemRect.height>
  [1105] pushint8 8 ............................. <8>
  [1107] getlocal 18 ............................ <tPalette>
  [1109] pusharglist 4 .......................... <tElemRect.width, tElemRect.height, 8, tPalette>
  [1111] extcall 500 ............................ <image(tElemRect.width, tElemRect.height, 8, tPalette)>
  [1114] setobjprop 500 ......................... tmember.image = image(tElemRect.width, tElemRect.height, 8, tPalette)
  [1117] jmp [1142]
  [1120] getlocal 9 ............................. <tmember>
  [1122] getlocal 13 ............................ <tElemRect>
  [1124] getobjprop 42 .......................... <tElemRect.width>
  [1126] getlocal 13 ............................ <tElemRect>
  [1128] getobjprop 43 .......................... <tElemRect.height>
  [1130] pushint8 6 ............................. <6>
  [1132] get 7 .................................. <the colorDepth>
  [1134] pusharglist 3 .......................... <tElemRect.width, tElemRect.height, the colorDepth>
  [1136] extcall 500 ............................ <image(tElemRect.width, tElemRect.height, the colorDepth)>
  [1139] setobjprop 500 ......................... tmember.image = image(tElemRect.width, tElemRect.height, the colorDepth)
  [1142] getlocal 9 ............................. <tmember>
  [1144] pushzero ............................... <0>
  [1145] pushzero ............................... <0>
  [1146] pusharglist 2 .......................... <0, 0>
  [1148] extcall 508 ............................ <point(0, 0)>
  [1151] setobjprop 499 ......................... tmember.regPoint = point(0, 0)
  [1154] getlocal 7 ............................. <tElement>
  [1156] getobjprop 22 .......................... <tElement.count>
  [1158] pushint8 1 ............................. <1>
  [1160] eq ..................................... <tElement.count = 1>
  [1161] jmpifz [1216] .......................... if tElement.count = 1 then / else
  [1164] getlocal 7 ............................. <tElement>
  [1166] pushint8 1 ............................. <1>
  [1168] pusharglist 2 .......................... <tElement, 1>
  [1170] objcall 54 ............................. <tElement[1]>
  [1172] setlocal 24 ............................ tItem = tElement[1]
  [1174] getlocal 24 ............................ <tItem>
  [1176] pushsymb 1385 .......................... <#style>
  [1179] pushsymb 986 ........................... <#unique>
  [1182] pusharglistnoret 3 ..................... <tItem, #style, #unique>
  [1184] objcall 24 ............................. tItem[#style] = #unique
  [1186] getlocal 19 ............................ <tIsBlendShared>
  [1188] jmpifz [1202] .......................... if tIsBlendShared then
  [1191] getlocal 24 ............................ <tItem>
  [1193] pushsymb 501 ........................... <#blend>
  [1196] pushint8 100 ........................... <100>
  [1198] pusharglistnoret 3 ..................... <tItem, #blend, 100>
  [1200] objcall 24 ............................. tItem[#blend] = 100
  [1202] getparam 0 ............................. <me>
  [1204] getlocal 24 ............................ <tItem>
  [1206] pusharglist 2 .......................... <me, tItem>
  [1208] objcall 1359 ........................... <me.CreateElement(tItem)>
  [1211] setlocal 25 ............................ tWrapper = me.CreateElement(tItem)
  [1213] jmp [1411]
  [1216] pushsymb 34 ............................ <#id>
  [1218] getlocal 8 ............................. <tid>
  [1220] pushsymb 454 ........................... <#type>
  [1223] pushsymb 985 ........................... <#wrapper>
  [1226] pushsymb 1385 .......................... <#style>
  [1229] pushsymb 985 ........................... <#wrapper>
  [1232] pushsymb 462 ........................... <#buffer>
  [1235] getlocal 9 ............................. <tmember>
  [1237] pushsymb 36 ............................ <#sprite>
  [1239] getlocal 10 ............................ <tsprite>
  [1241] pushsymb 538 ........................... <#locX>
  [1244] getlocal 13 ............................ <tElemRect>
  [1246] pushint8 1 ............................. <1>
  [1248] pusharglist 2 .......................... <tElemRect, 1>
  [1250] objcall 54 ............................. <tElemRect[1]>
  [1252] pushsymb 539 ........................... <#locY>
  [1255] getlocal 13 ............................ <tElemRect>
  [1257] pushint8 2 ............................. <2>
  [1259] pusharglist 2 .......................... <tElemRect, 2>
  [1261] objcall 54 ............................. <tElemRect[2]>
  [1263] pusharglist 14 ......................... <[#id: tid, #type: #wrapper, #style: #wrapper, #buffer: tmember, #sprite: tsprite, #locX: tElemRect[1], #locY: tElemRect[2]]>
  [1265] pushproplist ........................... <[#id: tid, #type: #wrapper, #style: #wrapper, #buffer: tmember, #sprite: tsprite, #locX: tElemRect[1], #locY: tElemRect[2]]>
  [1266] setlocal 26 ............................ tProps = [#id: tid, #type: #wrapper, #style: #wrapper, #buffer: tmember, #sprite: tsprite, #locX: tElemRect[1], #locY: tElemRect[2]]
  [1268] getparam 0 ............................. <me>
  [1270] getlocal 26 ............................ <tProps>
  [1272] pusharglist 2 .......................... <me, tProps>
  [1274] objcall 1359 ........................... <me.CreateElement(tProps)>
  [1277] setlocal 25 ............................ tWrapper = me.CreateElement(tProps)
  [1279] getlocal 7 ............................. <tElement>
  [1281] peek 0
  [1283] pusharglist 1
  [1285] extcall 22
  [1287] pushint8 1
  [1289] peek 0
  [1291] peek 2
  [1293] lteq
  [1294] jmpifz [1409] .......................... repeat with tItem in tElement
  [1297] peek 2
  [1299] peek 1
  [1301] pusharglist 2
  [1303] extcall 54
  [1305] setlocal 24
  [1307] getlocal 24 ............................ <tItem>
  [1309] pushsymb 504 ........................... <#locH>
  [1312] getlocal 24 ............................ <tItem>
  [1314] pushsymb 504 ........................... <#locH>
  [1317] pusharglist 2 .......................... <tItem, #locH>
  [1319] objcall 54 ............................. <tItem[#locH]>
  [1321] getlocal 13 ............................ <tElemRect>
  [1323] pushint8 1 ............................. <1>
  [1325] pusharglist 2 .......................... <tElemRect, 1>
  [1327] objcall 54 ............................. <tElemRect[1]>
  [1329] sub .................................... <tItem[#locH] - tElemRect[1]>
  [1330] pusharglistnoret 3 ..................... <tItem, #locH, tItem[#locH] - tElemRect[1]>
  [1332] objcall 24 ............................. tItem[#locH] = tItem[#locH] - tElemRect[1]
  [1334] getlocal 24 ............................ <tItem>
  [1336] pushsymb 505 ........................... <#locV>
  [1339] getlocal 24 ............................ <tItem>
  [1341] pushsymb 505 ........................... <#locV>
  [1344] pusharglist 2 .......................... <tItem, #locV>
  [1346] objcall 54 ............................. <tItem[#locV]>
  [1348] getlocal 13 ............................ <tElemRect>
  [1350] pushint8 2 ............................. <2>
  [1352] pusharglist 2 .......................... <tElemRect, 2>
  [1354] objcall 54 ............................. <tElemRect[2]>
  [1356] sub .................................... <tItem[#locV] - tElemRect[2]>
  [1357] pusharglistnoret 3 ..................... <tItem, #locV, tItem[#locV] - tElemRect[2]>
  [1359] objcall 24 ............................. tItem[#locV] = tItem[#locV] - tElemRect[2]
  [1361] getlocal 24 ............................ <tItem>
  [1363] pushsymb 1385 .......................... <#style>
  [1366] pushsymb 987 ........................... <#grouped>
  [1369] pusharglistnoret 3 ..................... <tItem, #style, #grouped>
  [1371] objcall 24 ............................. tItem[#style] = #grouped
  [1373] getlocal 19 ............................ <tIsBlendShared>
  [1375] jmpifz [1389] .......................... if tIsBlendShared then
  [1378] getlocal 24 ............................ <tItem>
  [1380] pushsymb 501 ........................... <#blend>
  [1383] pushint8 100 ........................... <100>
  [1385] pusharglistnoret 3 ..................... <tItem, #blend, 100>
  [1387] objcall 24 ............................. tItem[#blend] = 100
  [1389] getlocal 25 ............................ <tWrapper>
  [1391] getparam 0 ............................. <me>
  [1393] getlocal 24 ............................ <tItem>
  [1395] pusharglist 2 .......................... <me, tItem>
  [1397] objcall 1359 ........................... <me.CreateElement(tItem)>
  [1400] pusharglistnoret 2 ..................... <tWrapper, me.CreateElement(tItem)>
  [1402] objcall 122 ............................ tWrapper.add(me.CreateElement(tItem))
  [1404] pushint8 1
  [1406] add
  [1407] endrepeat [1289]
  [1409] pop 3
  [1411] getlocal 25 ............................ <tWrapper>
  [1413] pusharglist 1 .......................... <tWrapper>
  [1415] extcall 112 ............................ <objectp(tWrapper)>
  [1417] jmpifz [1446] .......................... if objectp(tWrapper) then
  [1420] getlocal 1 ............................. <tElemList>
  [1422] getlocal 8 ............................. <tid>
  [1424] getlocal 25 ............................ <tWrapper>
  [1426] pusharglistnoret 3 ..................... <tElemList, tid, tWrapper>
  [1428] objcall 573 ............................ tElemList.addProp(tid, tWrapper)
  [1431] getlocal 4 ............................. <tGroupData>
  [1433] pushsymb 1376 .......................... <#items>
  [1436] pusharglist 2 .......................... <tGroupData, #items>
  [1438] objcall 54 ............................. <tGroupData[#items]>
  [1440] getlocal 25 ............................ <tWrapper>
  [1442] pusharglistnoret 2 ..................... <tGroupData[#items], tWrapper>
  [1444] objcall 122 ............................ tGroupData[#items].add(tWrapper)
  [1446] getlocal 19 ............................ <tIsBlendShared>
  [1448] jmpifz [1458] .......................... if tIsBlendShared then
  [1451] getlocal 10 ............................ <tsprite>
  [1453] getlocal 14 ............................ <tBlend>
  [1455] setobjprop 501 ......................... tsprite.blend = tBlend
  [1458] getlocal 22 ............................ <tIsInkShared>
  [1460] jmpifz [1470] .......................... if tIsInkShared then
  [1463] getlocal 10 ............................ <tsprite>
  [1465] getlocal 15 ............................ <tInk>
  [1467] setobjprop 560 ......................... tsprite.ink = tInk
  [1470] getlocal 20 ............................ <tIsColorShared>
  [1472] jmpifz [1482] .......................... if tIsColorShared then
  [1475] getlocal 10 ............................ <tsprite>
  [1477] getlocal 16 ............................ <tColor>
  [1479] setobjprop 597 ......................... tsprite.color = tColor
  [1482] getlocal 21 ............................ <tIsBgColorShared>
  [1484] jmpifz [1494] .......................... if tIsBgColorShared then
  [1487] getlocal 10 ............................ <tsprite>
  [1489] getlocal 17 ............................ <tBgColor>
  [1491] setobjprop 1225 ........................ tsprite.bgColor = tBgColor
  [1494] getlocal 10 ............................ <tsprite>
  [1496] getlocal 13 ............................ <tElemRect>
  [1498] pushint8 1 ............................. <1>
  [1500] pusharglist 2 .......................... <tElemRect, 1>
  [1502] objcall 54 ............................. <tElemRect[1]>
  [1504] getprop 1371 ........................... <pClientRect>
  [1507] pushint8 1 ............................. <1>
  [1509] pusharglist 2 .......................... <pClientRect, 1>
  [1511] objcall 54 ............................. <pClientRect[1]>
  [1513] add .................................... <tElemRect[1] + pClientRect[1]>
  [1514] setobjprop 504 ......................... tsprite.locH = tElemRect[1] + pClientRect[1]
  [1517] getlocal 10 ............................ <tsprite>
  [1519] getlocal 13 ............................ <tElemRect>
  [1521] pushint8 2 ............................. <2>
  [1523] pusharglist 2 .......................... <tElemRect, 2>
  [1525] objcall 54 ............................. <tElemRect[2]>
  [1527] getprop 1371 ........................... <pClientRect>
  [1530] pushint8 2 ............................. <2>
  [1532] pusharglist 2 .......................... <pClientRect, 2>
  [1534] objcall 54 ............................. <pClientRect[2]>
  [1536] add .................................... <tElemRect[2] + pClientRect[2]>
  [1537] setobjprop 505 ......................... tsprite.locV = tElemRect[2] + pClientRect[2]
  [1540] getlocal 10 ............................ <tsprite>
  [1542] getlocal 13 ............................ <tElemRect>
  [1544] getobjprop 42 .......................... <tElemRect.width>
  [1546] setobjprop 42 .......................... tsprite.width = tElemRect.width
  [1548] getlocal 10 ............................ <tsprite>
  [1550] getlocal 13 ............................ <tElemRect>
  [1552] getobjprop 43 .......................... <tElemRect.height>
  [1554] setobjprop 43 .......................... tsprite.height = tElemRect.height
  [1556] pushint8 1
  [1558] add
  [1559] endrepeat [130]
  [1562] pop 3
  [1564] getlocal 4 ............................. <tGroupData>
  [1566] pushsymb 555 ........................... <#rect>
  [1569] getparam 1 ............................. <tLayout>
  [1571] pushsymb 555 ........................... <#rect>
  [1574] pusharglist 2 .......................... <tLayout, #rect>
  [1576] objcall 54 ............................. <tLayout[#rect]>
  [1578] pushint8 1 ............................. <1>
  [1580] pusharglist 2 .......................... <tLayout[#rect], 1>
  [1582] objcall 54 ............................. <tLayout[#rect][1]>
  [1584] pusharglistnoret 3 ..................... <tGroupData, #rect, tLayout[#rect][1]>
  [1586] objcall 24 ............................. tGroupData[#rect] = tLayout[#rect][1]
  [1588] getlocal 4 ............................. <tGroupData>
  [1590] pushsymb 1090 .......................... <#border>
  [1593] getparam 1 ............................. <tLayout>
  [1595] pushsymb 1090 .......................... <#border>
  [1598] pusharglist 2 .......................... <tLayout, #border>
  [1600] objcall 54 ............................. <tLayout[#border]>
  [1602] pushint8 1 ............................. <1>
  [1604] pusharglist 2 .......................... <tLayout[#border], 1>
  [1606] objcall 54 ............................. <tLayout[#border][1]>
  [1608] pusharglistnoret 3 ..................... <tGroupData, #border, tLayout[#border][1]>
  [1610] objcall 24 ............................. tGroupData[#border] = tLayout[#border][1]
  [1612] getlocal 0 ............................. <tGroupNum>
  [1614] pushzero ............................... <0>
  [1615] eq ..................................... <tGroupNum = 0>
  [1616] jmpifz [1694] .......................... if tGroupNum = 0 then / else
  [1619] getprop 465 ............................ <pLocX>
  [1622] getlocal 4 ............................. <tGroupData>
  [1624] pushsymb 555 ........................... <#rect>
  [1627] pusharglist 2 .......................... <tGroupData, #rect>
  [1629] objcall 54 ............................. <tGroupData[#rect]>
  [1631] pushint8 1 ............................. <1>
  [1633] pusharglist 2 .......................... <tGroupData[#rect], 1>
  [1635] objcall 54 ............................. <tGroupData[#rect][1]>
  [1637] add .................................... <pLocX + tGroupData[#rect][1]>
  [1638] setprop 465 ............................ pLocX = pLocX + tGroupData[#rect][1]
  [1641] getprop 467 ............................ <pLocY>
  [1644] getlocal 4 ............................. <tGroupData>
  [1646] pushsymb 555 ........................... <#rect>
  [1649] pusharglist 2 .......................... <tGroupData, #rect>
  [1651] objcall 54 ............................. <tGroupData[#rect]>
  [1653] pushint8 2 ............................. <2>
  [1655] pusharglist 2 .......................... <tGroupData[#rect], 2>
  [1657] objcall 54 ............................. <tGroupData[#rect][2]>
  [1659] add .................................... <pLocY + tGroupData[#rect][2]>
  [1660] setprop 467 ............................ pLocY = pLocY + tGroupData[#rect][2]
  [1663] getlocal 4 ............................. <tGroupData>
  [1665] pushsymb 555 ........................... <#rect>
  [1668] pusharglist 2 .......................... <tGroupData, #rect>
  [1670] objcall 54 ............................. <tGroupData[#rect]>
  [1672] getobjprop 42 .......................... <tGroupData[#rect].width>
  [1674] setprop 497 ............................ pwidth = tGroupData[#rect].width
  [1677] getlocal 4 ............................. <tGroupData>
  [1679] pushsymb 555 ........................... <#rect>
  [1682] pusharglist 2 .......................... <tGroupData, #rect>
  [1684] objcall 54 ............................. <tGroupData[#rect]>
  [1686] getobjprop 43 .......................... <tGroupData[#rect].height>
  [1688] setprop 502 ............................ pheight = tGroupData[#rect].height
  [1691] jmp [1787]
  [1694] getprop 1371 ........................... <pClientRect>
  [1697] pushint8 1 ............................. <1>
  [1699] pusharglist 2 .......................... <pClientRect, 1>
  [1701] objcall 54 ............................. <pClientRect[1]>
  [1703] getprop 1371 ........................... <pClientRect>
  [1706] pushint8 3 ............................. <3>
  [1708] pusharglist 2 .......................... <pClientRect, 3>
  [1710] objcall 54 ............................. <pClientRect[3]>
  [1712] add .................................... <pClientRect[1] + pClientRect[3]>
  [1713] getlocal 4 ............................. <tGroupData>
  [1715] pushsymb 555 ........................... <#rect>
  [1718] pusharglist 2 .......................... <tGroupData, #rect>
  [1720] objcall 54 ............................. <tGroupData[#rect]>
  [1722] getobjprop 42 .......................... <tGroupData[#rect].width>
  [1724] add .................................... <pClientRect[1] + pClientRect[3] + tGroupData[#rect].width>
  [1725] setlocal 27 ............................ tNewW = pClientRect[1] + pClientRect[3] + tGroupData[#rect].width
  [1727] getprop 1371 ........................... <pClientRect>
  [1730] pushint8 2 ............................. <2>
  [1732] pusharglist 2 .......................... <pClientRect, 2>
  [1734] objcall 54 ............................. <pClientRect[2]>
  [1736] getprop 1371 ........................... <pClientRect>
  [1739] pushint8 4 ............................. <4>
  [1741] pusharglist 2 .......................... <pClientRect, 4>
  [1743] objcall 54 ............................. <pClientRect[4]>
  [1745] add .................................... <pClientRect[2] + pClientRect[4]>
  [1746] getlocal 4 ............................. <tGroupData>
  [1748] pushsymb 555 ........................... <#rect>
  [1751] pusharglist 2 .......................... <tGroupData, #rect>
  [1753] objcall 54 ............................. <tGroupData[#rect]>
  [1755] getobjprop 43 .......................... <tGroupData[#rect].height>
  [1757] add .................................... <pClientRect[2] + pClientRect[4] + tGroupData[#rect].height>
  [1758] setlocal 28 ............................ tNewH = pClientRect[2] + pClientRect[4] + tGroupData[#rect].height
  [1760] getlocal 27 ............................ <tNewW>
  [1762] getprop 497 ............................ <pwidth>
  [1765] nteq ................................... <tNewW <> pwidth>
  [1766] getlocal 28 ............................ <tNewH>
  [1768] getprop 502 ............................ <pheight>
  [1771] nteq ................................... <tNewH <> pheight>
  [1772] or ..................................... <(tNewW <> pwidth) or (tNewH <> pheight)>
  [1773] jmpifz [1787] .......................... if (tNewW <> pwidth) or (tNewH <> pheight) then
  [1776] getparam 0 ............................. <me>
  [1778] getlocal 27 ............................ <tNewW>
  [1780] getlocal 28 ............................ <tNewH>
  [1782] pusharglistnoret 3 ..................... <me, tNewW, tNewH>
  [1784] objcall 1000 ........................... me.resizeTo(tNewW, tNewH)
  [1787] getprop 1371 ........................... <pClientRect>
  [1790] getlocal 4 ............................. <tGroupData>
  [1792] pushsymb 1090 .......................... <#border>
  [1795] pusharglist 2 .......................... <tGroupData, #border>
  [1797] objcall 54 ............................. <tGroupData[#border]>
  [1799] add .................................... <pClientRect + tGroupData[#border]>
  [1800] setprop 1371 ........................... pClientRect = pClientRect + tGroupData[#border]
  [1803] pushint8 1 ............................. <1>
  [1805] setlocal 29
  [1807] getlocal 29
  [1809] getlocal 3 ............................. <tSpriteList>
  [1811] getobjprop 22 .......................... <tSpriteList.count>
  [1813] lteq
  [1814] jmpifz [1944] .......................... repeat with i = 1 to tSpriteList.count
  [1817] getlocal 3 ............................. <tSpriteList>
  [1819] getlocal 29 ............................ <i>
  [1821] pusharglist 2 .......................... <tSpriteList, i>
  [1823] objcall 54 ............................. <tSpriteList[i]>
  [1825] getobjprop 509 ......................... <tSpriteList[i].loc>
  [1828] getlocal 4 ............................. <tGroupData>
  [1830] pushsymb 555 ........................... <#rect>
  [1833] pusharglist 2 .......................... <tGroupData, #rect>
  [1835] objcall 54 ............................. <tGroupData[#rect]>
  [1837] pushint8 1 ............................. <1>
  [1839] pusharglist 2 .......................... <tGroupData[#rect], 1>
  [1841] objcall 54 ............................. <tGroupData[#rect][1]>
  [1843] getlocal 4 ............................. <tGroupData>
  [1845] pushsymb 555 ........................... <#rect>
  [1848] pusharglist 2 .......................... <tGroupData, #rect>
  [1850] objcall 54 ............................. <tGroupData[#rect]>
  [1852] pushint8 2 ............................. <2>
  [1854] pusharglist 2 .......................... <tGroupData[#rect], 2>
  [1856] objcall 54 ............................. <tGroupData[#rect][2]>
  [1858] pusharglist 2 .......................... <[tGroupData[#rect][1], tGroupData[#rect][2]]>
  [1860] pushlist ............................... <[tGroupData[#rect][1], tGroupData[#rect][2]]>
  [1861] sub .................................... <tSpriteList[i].loc - [tGroupData[#rect][1], tGroupData[#rect][2]]>
  [1862] setlocal 30 ............................ tloc = tSpriteList[i].loc - [tGroupData[#rect][1], tGroupData[#rect][2]]
  [1864] getlocal 3 ............................. <tSpriteList>
  [1866] getlocal 29 ............................ <i>
  [1868] pusharglist 2 .......................... <tSpriteList, i>
  [1870] objcall 54 ............................. <tSpriteList[i]>
  [1872] getprop 465 ............................ <pLocX>
  [1875] getprop 467 ............................ <pLocY>
  [1878] pusharglist 2 .......................... <pLocX, pLocY>
  [1880] extcall 508 ............................ <point(pLocX, pLocY)>
  [1883] getlocal 30 ............................ <tloc>
  [1885] add .................................... <point(pLocX, pLocY) + tloc>
  [1886] setobjprop 509 ......................... tSpriteList[i].loc = point(pLocX, pLocY) + tloc
  [1889] getlocal 2 ............................. <tmemberlist>
  [1891] getlocal 29 ............................ <i>
  [1893] pusharglist 2 .......................... <tmemberlist, i>
  [1895] objcall 23 ............................. <tmemberlist.getPropAt(i)>
  [1897] setlocal 8 ............................. tid = tmemberlist.getPropAt(i)
  [1899] getprop 1368 ........................... <pMemberList>
  [1902] getlocal 8 ............................. <tid>
  [1904] getlocal 2 ............................. <tmemberlist>
  [1906] getlocal 8 ............................. <tid>
  [1908] pusharglist 2 .......................... <tmemberlist, tid>
  [1910] objcall 54 ............................. <tmemberlist[tid]>
  [1912] pusharglistnoret 3 ..................... <pMemberList, tid, tmemberlist[tid]>
  [1914] objcall 573 ............................ pMemberList.addProp(tid, tmemberlist[tid])
  [1917] getprop 1294 ........................... <pSpriteList>
  [1920] getlocal 8 ............................. <tid>
  [1922] getlocal 3 ............................. <tSpriteList>
  [1924] getlocal 8 ............................. <tid>
  [1926] pusharglist 2 .......................... <tSpriteList, tid>
  [1928] objcall 54 ............................. <tSpriteList[tid]>
  [1930] pusharglistnoret 3 ..................... <pSpriteList, tid, tSpriteList[tid]>
  [1932] objcall 573 ............................ pSpriteList.addProp(tid, tSpriteList[tid])
  [1935] pushint8 1
  [1937] getlocal 29
  [1939] add
  [1940] setlocal 29
  [1942] endrepeat [1807]
  [1944] pushint8 1 ............................. <1>
  [1946] setlocal 29
  [1948] getlocal 29
  [1950] getlocal 1 ............................. <tElemList>
  [1952] getobjprop 22 .......................... <tElemList.count>
  [1954] lteq
  [1955] jmpifz [1991] .......................... repeat with i = 1 to tElemList.count
  [1958] getprop 1369 ........................... <pElemList>
  [1961] getlocal 1 ............................. <tElemList>
  [1963] getlocal 29 ............................ <i>
  [1965] pusharglist 2 .......................... <tElemList, i>
  [1967] objcall 23 ............................. <tElemList.getPropAt(i)>
  [1969] getlocal 1 ............................. <tElemList>
  [1971] getlocal 29 ............................ <i>
  [1973] pusharglist 2 .......................... <tElemList, i>
  [1975] objcall 54 ............................. <tElemList[i]>
  [1977] pusharglistnoret 3 ..................... <pElemList, tElemList.getPropAt(i), tElemList[i]>
  [1979] objcall 573 ............................ pElemList.addProp(tElemList.getPropAt(i), tElemList[i])
  [1982] pushint8 1
  [1984] getlocal 29
  [1986] add
  [1987] setlocal 29
  [1989] endrepeat [1948]
  [1991] getprop 1370 ........................... <pGroupData>
  [1994] getlocal 4 ............................. <tGroupData>
  [1996] pusharglistnoret 2 ..................... <pGroupData, tGroupData>
  [1998] objcall 122 ............................ pGroupData.add(tGroupData)
  [2000] pushsymb 435 ........................... <#prepare>
  [2003] getlocal 4 ............................. <tGroupData>
  [2005] pushsymb 1376 .......................... <#items>
  [2008] pusharglist 2 .......................... <tGroupData, #items>
  [2010] objcall 54 ............................. <tGroupData[#items]>
  [2012] pusharglistnoret 2 ..................... <#prepare, tGroupData[#items]>
  [2014] extcall 68 ............................. call(#prepare, tGroupData[#items])
  [2016] pushsymb 447 ........................... <#render>
  [2019] getlocal 4 ............................. <tGroupData>
  [2021] pushsymb 1376 .......................... <#items>
  [2024] pusharglist 2 .......................... <tGroupData, #items>
  [2026] objcall 54 ............................. <tGroupData[#items]>
  [2028] pusharglistnoret 2 ..................... <#render, tGroupData[#items]>
  [2030] extcall 68 ............................. call(#render, tGroupData[#items])
  [2032] pushint8 1 ............................. <1>
  [2034] pusharglistnoret 1 ..................... <1>
  [2036] extcall 25 ............................. return 1
  [2038] ret
end

on prepare me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 1322 ......................... <the mouseH>
  [  5] getprop 1405 ............................ <pScaleOffset>
  [  8] pushint8 1 .............................. <1>
  [ 10] pusharglist 2 ........................... <pScaleOffset, 1>
  [ 12] objcall 54 .............................. <pScaleOffset[1]>
  [ 14] sub ..................................... <the mouseH - pScaleOffset[1]>
  [ 15] setlocal 0 .............................. tOffX = the mouseH - pScaleOffset[1]
  [ 17] pusharglist 0 ........................... <>
  [ 19] thebuiltin 550 .......................... <the mouseV>
  [ 22] getprop 1405 ............................ <pScaleOffset>
  [ 25] pushint8 2 .............................. <2>
  [ 27] pusharglist 2 ........................... <pScaleOffset, 2>
  [ 29] objcall 54 .............................. <pScaleOffset[2]>
  [ 31] sub ..................................... <the mouseV - pScaleOffset[2]>
  [ 32] setlocal 1 .............................. tOffY = the mouseV - pScaleOffset[2]
  [ 34] getmovieprop 1072 ....................... <the mouseLoc>
  [ 37] setprop 1405 ............................ pScaleOffset = the mouseLoc
  [ 40] getprop 497 ............................. <pwidth>
  [ 43] getlocal 0 .............................. <tOffX>
  [ 45] add ..................................... <pwidth + tOffX>
  [ 46] pushint8 64 ............................. <64>
  [ 48] lt ...................................... <(pwidth + tOffX) < 64>
  [ 49] jmpifz [ 60] ............................ if (pwidth + tOffX) < 64 then
  [ 52] pushint8 64 ............................. <64>
  [ 54] getprop 497 ............................. <pwidth>
  [ 57] sub ..................................... <64 - pwidth>
  [ 58] setlocal 0 .............................. tOffX = 64 - pwidth
  [ 60] getprop 502 ............................. <pheight>
  [ 63] getlocal 1 .............................. <tOffY>
  [ 65] add ..................................... <pheight + tOffY>
  [ 66] pushint8 64 ............................. <64>
  [ 68] lt ...................................... <(pheight + tOffY) < 64>
  [ 69] jmpifz [ 80] ............................ if (pheight + tOffY) < 64 then
  [ 72] pushint8 64 ............................. <64>
  [ 74] getprop 502 ............................. <pheight>
  [ 77] sub ..................................... <64 - pheight>
  [ 78] setlocal 1 .............................. tOffY = 64 - pheight
  [ 80] getparam 0 .............................. <me>
  [ 82] getlocal 0 .............................. <tOffX>
  [ 84] getlocal 1 .............................. <tOffY>
  [ 86] pusharglistnoret 3 ...................... <me, tOffX, tOffY>
  [ 88] objcall 1354 ............................ me.resizeBy(tOffX, tOffY)
  [ 91] ret
end

on update me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 0 ........................... <>
  [  4] thebuiltin 1322 ......................... <the mouseH>
  [  7] getprop 1298 ............................ <pDragOffset>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglist 2 ........................... <pDragOffset, 1>
  [ 14] objcall 54 .............................. <pDragOffset[1]>
  [ 16] sub ..................................... <the mouseH - pDragOffset[1]>
  [ 17] pusharglist 0 ........................... <>
  [ 19] thebuiltin 550 .......................... <the mouseV>
  [ 22] getprop 1298 ............................ <pDragOffset>
  [ 25] pushint8 2 .............................. <2>
  [ 27] pusharglist 2 ........................... <pDragOffset, 2>
  [ 29] objcall 54 .............................. <pDragOffset[2]>
  [ 31] sub ..................................... <the mouseV - pDragOffset[2]>
  [ 32] pusharglistnoret 3 ...................... <me, the mouseH - pDragOffset[1], the mouseV - pDragOffset[2]>
  [ 34] objcall 999 ............................. me.moveTo(the mouseH - pDragOffset[1], the mouseV - pDragOffset[2])
  [ 37] ret
end

on CreateElement me, tProps
  [  0] getprop 1375 ............................ <pElemClsList>
  [  3] getparam 1 .............................. <tProps>
  [  5] pushsymb 1385 ........................... <#style>
  [  8] pusharglist 2 ........................... <tProps, #style>
  [ 10] objcall 54 .............................. <tProps[#style]>
  [ 12] pusharglist 2 ........................... <pElemClsList, tProps[#style]>
  [ 14] objcall 54 .............................. <pElemClsList[tProps[#style]]>
  [ 16] setlocal 0 .............................. tTemplate = pElemClsList[tProps[#style]]
  [ 18] getparam 1 .............................. <tProps>
  [ 20] pushsymb 454 ............................ <#type>
  [ 23] pusharglist 2 ........................... <tProps, #type>
  [ 25] objcall 54 .............................. <tProps[#type]>
  [ 27] setlocal 1 .............................. ttype = tProps[#type]
  [ 29] getparam 1 .............................. <tProps>
  [ 31] pushsymb 455 ............................ <#model>
  [ 34] pusharglist 2 ........................... <tProps, #model>
  [ 36] objcall 54 .............................. <tProps[#model]>
  [ 38] setlocal 2 .............................. tmodel = tProps[#model]
  [ 40] pushcons 12 ............................. <"window.">
  [ 42] getlocal 1 .............................. <ttype>
  [ 44] joinstr ................................. <"window." & ttype>
  [ 45] getlocal 2 .............................. <tmodel>
  [ 47] joinstr ................................. <"window." & ttype & tmodel>
  [ 48] pushcons 13 ............................. <".class">
  [ 50] joinstr ................................. <"window." & ttype & tmodel & ".class">
  [ 51] setlocal 3 .............................. tClass = "window." & ttype & tmodel & ".class"
  [ 53] getprop 1375 ............................ <pElemClsList>
  [ 56] getlocal 3 .............................. <tClass>
  [ 58] pusharglist 2 ........................... <pElemClsList, tClass>
  [ 60] objcall 54 .............................. <pElemClsList[tClass]>
  [ 62] pusharglist 1 ........................... <pElemClsList[tClass]>
  [ 64] extcall 20 .............................. <voidp(pElemClsList[tClass])>
  [ 66] not ..................................... <not voidp(pElemClsList[tClass])>
  [ 67] jmpifz [ 84] ............................ if not voidp(pElemClsList[tClass]) then / else
  [ 70] getprop 1375 ............................ <pElemClsList>
  [ 73] getlocal 3 .............................. <tClass>
  [ 75] pusharglist 2 ........................... <pElemClsList, tClass>
  [ 77] objcall 54 .............................. <pElemClsList[tClass]>
  [ 79] setlocal 4 .............................. tClsStruct = pElemClsList[tClass]
  [ 81] jmp [122]
  [ 84] getlocal 3 .............................. <tClass>
  [ 86] pusharglist 1 ........................... <tClass>
  [ 88] extcall 376 ............................. <variableExists(tClass)>
  [ 91] jmpifz [116] ............................ if variableExists(tClass) then / else
  [ 94] getlocal 3 .............................. <tClass>
  [ 96] pusharglist 1 ........................... <tClass>
  [ 98] extcall 155 ............................. <getClassVariable(tClass)>
  [100] setlocal 4 .............................. tClsStruct = getClassVariable(tClass)
  [102] getprop 1375 ............................ <pElemClsList>
  [105] getlocal 3 .............................. <tClass>
  [107] getlocal 4 .............................. <tClsStruct>
  [109] pusharglistnoret 3 ...................... <pElemClsList, tClass, tClsStruct>
  [111] objcall 24 .............................. pElemClsList[tClass] = tClsStruct
  [113] jmp [122]
  [116] pusharglist 0 ........................... <>
  [118] extcall 32 .............................. <VOID>
  [120] setlocal 4 .............................. tClsStruct = VOID
  [122] getlocal 4 .............................. <tClsStruct>
  [124] pusharglist 1 ........................... <tClsStruct>
  [126] extcall 20 .............................. <voidp(tClsStruct)>
  [128] jmpifz [145] ............................ if voidp(tClsStruct) then / else
  [131] pushsymb 656 ............................ <#temp>
  [134] getlocal 0 .............................. <tTemplate>
  [136] pusharglist 2 ........................... <#temp, tTemplate>
  [138] extcall 94 .............................. <createObject(#temp, tTemplate)>
  [140] setlocal 5 .............................. tElement = createObject(#temp, tTemplate)
  [142] jmp [158]
  [145] pushsymb 656 ............................ <#temp>
  [148] getlocal 0 .............................. <tTemplate>
  [150] getlocal 4 .............................. <tClsStruct>
  [152] pusharglist 3 ........................... <#temp, tTemplate, tClsStruct>
  [154] extcall 94 .............................. <createObject(#temp, tTemplate, tClsStruct)>
  [156] setlocal 5 .............................. tElement = createObject(#temp, tTemplate, tClsStruct)
  [158] getlocal 5 .............................. <tElement>
  [160] not ..................................... <not tElement>
  [161] jmpifz [191] ............................ if not tElement then
  [164] getparam 0 .............................. <me>
  [166] pushcons 14 ............................. <"Illegal element type:">
  [168] getparam 1 .............................. <tProps>
  [170] pushsymb 34 ............................. <#id>
  [172] pusharglist 2 ........................... <tProps, #id>
  [174] objcall 54 .............................. <tProps[#id]>
  [176] joinpadstr .............................. <"Illegal element type:" && tProps[#id]>
  [177] getlocal 3 .............................. <tClass>
  [179] joinpadstr .............................. <"Illegal element type:" && tProps[#id] && tClass>
  [180] pushsymb 1359 ........................... <#CreateElement>
  [183] pusharglist 3 ........................... <me, "Illegal element type:" && tProps[#id] && tClass, #CreateElement>
  [185] extcall 39 .............................. <error(me, "Illegal element type:" && tProps[#id] && tClass, #CreateElement)>
  [187] pusharglistnoret 1 ...................... <error(me, "Illegal element type:" && tProps[#id] && tClass, #CreateElement)>
  [189] extcall 25 .............................. return error(me, "Illegal element type:" && tProps[#id] && tClass, #CreateElement)
  [191] getlocal 5 .............................. <tElement>
  [193] getparam 1 .............................. <tProps>
  [195] pushsymb 34 ............................. <#id>
  [197] pusharglist 2 ........................... <tProps, #id>
  [199] objcall 54 .............................. <tProps[#id]>
  [201] pusharglistnoret 2 ...................... <tElement, tProps[#id]>
  [203] objcall 4 ............................... tElement.setID(tProps[#id])
  [205] getlocal 5 .............................. <tElement>
  [207] getparam 1 .............................. <tProps>
  [209] pusharglistnoret 2 ...................... <tElement, tProps>
  [211] objcall 434 ............................. tElement.define(tProps)
  [214] getlocal 5 .............................. <tElement>
  [216] pusharglistnoret 1 ...................... <tElement>
  [218] extcall 25 .............................. return tElement
  [220] ret
end

on createProcListTemplate me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tList = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 1358 ............................ <me.supportedEvents()>
  [ 12] peek 0
  [ 14] pusharglist 1
  [ 16] extcall 22
  [ 18] pushint8 1
  [ 20] peek 0
  [ 22] peek 2
  [ 24] lteq
  [ 25] jmpifz [ 62] ............................ repeat with tEvent in me.supportedEvents()
  [ 28] peek 2
  [ 30] peek 1
  [ 32] pusharglist 2
  [ 34] extcall 54
  [ 36] setlocal 1
  [ 38] getlocal 0 .............................. <tList>
  [ 40] getlocal 1 .............................. <tEvent>
  [ 42] pushsymb 33 ............................. <#null>
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglist 1 ........................... <me>
  [ 48] objcall 3 ............................... <me.getID()>
  [ 50] pusharglist 2 ........................... <[#null, me.getID()]>
  [ 52] pushlist ................................ <[#null, me.getID()]>
  [ 53] pusharglistnoret 3 ...................... <tList, tEvent, [#null, me.getID()]>
  [ 55] objcall 24 .............................. tList[tEvent] = [#null, me.getID()]
  [ 57] pushint8 1
  [ 59] add
  [ 60] endrepeat [ 20]
  [ 62] pop 3
  [ 64] getlocal 0 .............................. <tList>
  [ 66] pusharglistnoret 1 ...................... <tList>
  [ 68] extcall 25 .............................. return tList
  [ 70] ret
end

on scale me, tBoolean
  [  0] getparam 1 .............................. <tBoolean>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tBoolean = 1>
  [  5] getprop 1366 ............................ <pScaleFlag>
  [  8] pushzero ................................ <0>
  [  9] eq ...................................... <pScaleFlag = 0>
  [ 10] and ..................................... <(tBoolean = 1) and (pScaleFlag = 0)>
  [ 11] jmpifz [ 38] ............................ if (tBoolean = 1) and (pScaleFlag = 0) then / else
  [ 14] getmovieprop 1072 ....................... <the mouseLoc>
  [ 17] setprop 1405 ............................ pScaleOffset = the mouseLoc
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 1 ........................... <me>
  [ 24] objcall 3 ............................... <me.getID()>
  [ 26] pusharglistnoret 1 ...................... <me.getID()>
  [ 28] extcall 106 ............................. receivePrepare(me.getID())
  [ 30] pushint8 1 .............................. <1>
  [ 32] setprop 1366 ............................ pScaleFlag = 1
  [ 35] jmp [ 66]
  [ 38] getparam 1 .............................. <tBoolean>
  [ 40] pushzero ................................ <0>
  [ 41] eq ...................................... <tBoolean = 0>
  [ 42] getprop 1366 ............................ <pScaleFlag>
  [ 45] pushint8 1 .............................. <1>
  [ 47] eq ...................................... <pScaleFlag = 1>
  [ 48] and ..................................... <(tBoolean = 0) and (pScaleFlag = 1)>
  [ 49] jmpifz [ 66] ............................ if (tBoolean = 0) and (pScaleFlag = 1) then
  [ 52] getparam 0 .............................. <me>
  [ 54] pusharglist 1 ........................... <me>
  [ 56] objcall 3 ............................... <me.getID()>
  [ 58] pusharglistnoret 1 ...................... <me.getID()>
  [ 60] extcall 107 ............................. removePrepare(me.getID())
  [ 62] pushzero ................................ <0>
  [ 63] setprop 1366 ............................ pScaleFlag = 0
  [ 66] pushint8 1 .............................. <1>
  [ 68] pusharglistnoret 1 ...................... <1>
  [ 70] extcall 25 .............................. return 1
  [ 72] ret
end

on drag me, tBoolean
  [  0] getparam 1 .............................. <tBoolean>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tBoolean = 1>
  [  5] getprop 1297 ............................ <pDragFlag>
  [  8] pushzero ................................ <0>
  [  9] eq ...................................... <pDragFlag = 0>
  [ 10] and ..................................... <(tBoolean = 1) and (pDragFlag = 0)>
  [ 11] jmpifz [ 48] ............................ if (tBoolean = 1) and (pDragFlag = 0) then / else
  [ 14] getmovieprop 1072 ....................... <the mouseLoc>
  [ 17] getprop 465 ............................. <pLocX>
  [ 20] getprop 467 ............................. <pLocY>
  [ 23] pusharglist 2 ........................... <[pLocX, pLocY]>
  [ 25] pushlist ................................ <[pLocX, pLocY]>
  [ 26] sub ..................................... <the mouseLoc - [pLocX, pLocY]>
  [ 27] setprop 1298 ............................ pDragOffset = the mouseLoc - [pLocX, pLocY]
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglist 1 ........................... <me>
  [ 34] objcall 3 ............................... <me.getID()>
  [ 36] pusharglistnoret 1 ...................... <me.getID()>
  [ 38] extcall 108 ............................. receiveUpdate(me.getID())
  [ 40] pushint8 1 .............................. <1>
  [ 42] setprop 1297 ............................ pDragFlag = 1
  [ 45] jmp [ 76]
  [ 48] getparam 1 .............................. <tBoolean>
  [ 50] pushzero ................................ <0>
  [ 51] eq ...................................... <tBoolean = 0>
  [ 52] getprop 1297 ............................ <pDragFlag>
  [ 55] pushint8 1 .............................. <1>
  [ 57] eq ...................................... <pDragFlag = 1>
  [ 58] and ..................................... <(tBoolean = 0) and (pDragFlag = 1)>
  [ 59] jmpifz [ 76] ............................ if (tBoolean = 0) and (pDragFlag = 1) then
  [ 62] getparam 0 .............................. <me>
  [ 64] pusharglist 1 ........................... <me>
  [ 66] objcall 3 ............................... <me.getID()>
  [ 68] pusharglistnoret 1 ...................... <me.getID()>
  [ 70] extcall 109 ............................. removeUpdate(me.getID())
  [ 72] pushzero ................................ <0>
  [ 73] setprop 1297 ............................ pDragFlag = 0
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 1 ...................... <1>
  [ 80] extcall 25 .............................. return 1
  [ 82] ret
end

on draw me, tRGB
  [  0] pushsymb 1360 ........................... <#draw>
  [  3] getprop 1369 ............................ <pElemList>
  [  6] getparam 1 .............................. <tRGB>
  [  8] pusharglistnoret 3 ...................... <#draw, pElemList, tRGB>
  [ 10] extcall 68 .............................. call(#draw, pElemList, tRGB)
  [ 12] ret
end

on moveX me, tOffX
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1294 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 51] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1294 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1294 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 504 .......................... <pSpriteList[i].locH>
  [ 36] getparam 1 .............................. <tOffX>
  [ 38] add ..................................... <pSpriteList[i].locH + tOffX>
  [ 39] setobjprop 504 .......................... pSpriteList[i].locH = pSpriteList[i].locH + tOffX
  [ 42] pushint8 1
  [ 44] getlocal 0
  [ 46] add
  [ 47] setlocal 0
  [ 49] endrepeat [  4]
  [ 51] ret
end

on moveY me, tOffY
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1294 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 51] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1294 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1294 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 505 .......................... <pSpriteList[i].locV>
  [ 36] getparam 1 .............................. <tOffY>
  [ 38] add ..................................... <pSpriteList[i].locV + tOffY>
  [ 39] setobjprop 505 .......................... pSpriteList[i].locV = pSpriteList[i].locV + tOffY
  [ 42] pushint8 1
  [ 44] getlocal 0
  [ 46] add
  [ 47] setlocal 0
  [ 49] endrepeat [  4]
  [ 51] ret
end

on moveXY me, tOffX, tOffY
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 1294 ............................ <pSpriteList>
  [  9] getobjprop 22 ........................... <pSpriteList.count>
  [ 11] lteq
  [ 12] jmpifz [ 56] ............................ repeat with i = 1 to pSpriteList.count
  [ 15] getprop 1294 ............................ <pSpriteList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pSpriteList, i>
  [ 22] objcall 54 .............................. <pSpriteList[i]>
  [ 24] getprop 1294 ............................ <pSpriteList>
  [ 27] getlocal 0 .............................. <i>
  [ 29] pusharglist 2 ........................... <pSpriteList, i>
  [ 31] objcall 54 .............................. <pSpriteList[i]>
  [ 33] getobjprop 509 .......................... <pSpriteList[i].loc>
  [ 36] getparam 1 .............................. <tOffX>
  [ 38] getparam 2 .............................. <tOffY>
  [ 40] pusharglist 2 ........................... <[tOffX, tOffY]>
  [ 42] pushlist ................................ <[tOffX, tOffY]>
  [ 43] add ..................................... <pSpriteList[i].loc + [tOffX, tOffY]>
  [ 44] setobjprop 509 .......................... pSpriteList[i].loc = pSpriteList[i].loc + [tOffX, tOffY]
  [ 47] pushint8 1
  [ 49] getlocal 0
  [ 51] add
  [ 52] setlocal 0
  [ 54] endrepeat [  4]
  [ 56] ret
end

on null me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 25 .............................. return 0
  [  5] ret
end

on movePartBy me, ttype, tX, tY, tInverse
  [  0] getprop 1294 ............................ <pSpriteList>
  [  3] getparam 1 .............................. <ttype>
  [  5] pusharglist 2 ........................... <pSpriteList, ttype>
  [  7] objcall 54 .............................. <pSpriteList[ttype]>
  [  9] setlocal 0 .............................. tsprite = pSpriteList[ttype]
  [ 11] getlocal 0 .............................. <tsprite>
  [ 13] pusharglist 1 ........................... <tsprite>
  [ 15] extcall 20 .............................. <voidp(tsprite)>
  [ 17] jmpifz [ 25] ............................ if voidp(tsprite) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 25 .............................. return 0
  [ 25] getparam 4 .............................. <tInverse>
  [ 27] jmpifz [105] ............................ if tInverse then / else
  [ 30] pushint8 1 .............................. <1>
  [ 32] setlocal 1
  [ 34] getlocal 1
  [ 36] getprop 1294 ............................ <pSpriteList>
  [ 39] getobjprop 22 ........................... <pSpriteList.count>
  [ 41] lteq
  [ 42] jmpifz [102] ............................ repeat with i = 1 to pSpriteList.count
  [ 45] getprop 1294 ............................ <pSpriteList>
  [ 48] getlocal 1 .............................. <i>
  [ 50] pusharglist 2 ........................... <pSpriteList, i>
  [ 52] objcall 23 .............................. <pSpriteList.getPropAt(i)>
  [ 54] setlocal 2 .............................. tSymbol = pSpriteList.getPropAt(i)
  [ 56] getlocal 2 .............................. <tSymbol>
  [ 58] getparam 1 .............................. <ttype>
  [ 60] nteq .................................... <tSymbol <> ttype>
  [ 61] jmpifz [ 93] ............................ if tSymbol <> ttype then
  [ 64] getprop 1294 ............................ <pSpriteList>
  [ 67] getlocal 2 .............................. <tSymbol>
  [ 69] pusharglist 2 ........................... <pSpriteList, tSymbol>
  [ 71] objcall 54 .............................. <pSpriteList[tSymbol]>
  [ 73] setlocal 0 .............................. tsprite = pSpriteList[tSymbol]
  [ 75] getlocal 0 .............................. <tsprite>
  [ 77] getlocal 0 .............................. <tsprite>
  [ 79] getobjprop 509 .......................... <tsprite.loc>
  [ 82] getparam 2 .............................. <tX>
  [ 84] getparam 3 .............................. <tY>
  [ 86] pusharglist 2 ........................... <[tX, tY]>
  [ 88] pushlist ................................ <[tX, tY]>
  [ 89] add ..................................... <tsprite.loc + [tX, tY]>
  [ 90] setobjprop 509 .......................... tsprite.loc = tsprite.loc + [tX, tY]
  [ 93] pushint8 1
  [ 95] getlocal 1
  [ 97] add
  [ 98] setlocal 1
  [100] endrepeat [ 34]
  [102] jmp [123]
  [105] getlocal 0 .............................. <tsprite>
  [107] getlocal 0 .............................. <tsprite>
  [109] getobjprop 509 .......................... <tsprite.loc>
  [112] getparam 2 .............................. <tX>
  [114] getparam 3 .............................. <tY>
  [116] pusharglist 2 ........................... <[tX, tY]>
  [118] pushlist ................................ <[tX, tY]>
  [119] add ..................................... <tsprite.loc + [tX, tY]>
  [120] setobjprop 509 .......................... tsprite.loc = tsprite.loc + [tX, tY]
  [123] ret
end

on movePartTo me, ttype, tX, tY, tInverse
  [  0] getparam 2 .............................. <tX>
  [  2] getprop 465 ............................. <pLocX>
  [  5] sub ..................................... <tX - pLocX>
  [  6] setparam 2 .............................. tX = tX - pLocX
  [  8] getparam 3 .............................. <tY>
  [ 10] getprop 467 ............................. <pLocY>
  [ 13] sub ..................................... <tY - pLocY>
  [ 14] setparam 3 .............................. tY = tY - pLocY
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <ttype>
  [ 20] getparam 2 .............................. <tX>
  [ 22] getparam 3 .............................. <tY>
  [ 24] getparam 4 .............................. <tInverse>
  [ 26] pusharglistnoret 5 ...................... <me, ttype, tX, tY, tInverse>
  [ 28] objcall 1361 ............................ me.movePartBy(ttype, tX, tY, tInverse)
  [ 31] ret
end
