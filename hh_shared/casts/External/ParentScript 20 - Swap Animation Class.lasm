property pPrefs, pAnimFrame, pInitDelayCounter, pAnimDelayCounter, pMemberClass, pPaletteClass, pCurrentFrame, pFrameList, pAnimLoopCounter

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 747 ............................. pFrameList = []
  [  6] pusharglist 0 ........................... <[]>
  [  8] pushlist ................................ <[]>
  [  9] setprop 748 ............................. pPrefs = []
  [ 12] pushzero ................................ <0>
  [ 13] setprop 749 ............................. pCurrentFrame = 0
  [ 16] pushint8 1 .............................. <1>
  [ 18] setprop 750 ............................. pAnimLoopCounter = 1
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 44 .............................. return 1
  [ 27] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 42 .............................. <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 46 .............................. removeUpdate(me.getID())
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 44 .............................. return 1
  [ 16] ret
end

on define me, tPrefs
  [  0] getparam 1 .............................. <tPrefs>
  [  2] setprop 748 ............................. pPrefs = tPrefs
  [  5] getprop 748 ............................. <pPrefs>
  [  8] pushsymb 751 ............................ <#animType>
  [ 11] pusharglist 2 ........................... <pPrefs, #animType>
  [ 13] objcall 96 .............................. <pPrefs[#animType]>
  [ 15] pushsymb 752 ............................ <#memberSwap>
  [ 18] eq ...................................... <pPrefs[#animType] = #memberSwap>
  [ 19] jmpifz [ 59] ............................ if pPrefs[#animType] = #memberSwap then / else
  [ 22] getprop 748 ............................. <pPrefs>
  [ 25] pushsymb 50 ............................. <#sprite>
  [ 27] pusharglist 2 ........................... <pPrefs, #sprite>
  [ 29] objcall 96 .............................. <pPrefs[#sprite]>
  [ 31] getchainedprop 99 ....................... <pPrefs[#sprite].member>
  [ 33] getobjprop 100 .......................... <pPrefs[#sprite].member.name>
  [ 35] setlocal 0 .............................. tMem = pPrefs[#sprite].member.name
  [ 37] getlocal 0 .............................. <tMem>
  [ 39] pushint8 1 .............................. <1>
  [ 41] getlocal 0 .............................. <tMem>
  [ 43] getobjprop 103 .......................... <tMem.length>
  [ 45] pushint8 1 .............................. <1>
  [ 47] sub ..................................... <tMem.length - 1>
  [ 48] pusharglist 3 ........................... <tMem, 1, tMem.length - 1>
  [ 50] extcall 754 ............................. <chars(tMem, 1, tMem.length - 1)>
  [ 53] setprop 753 ............................. pMemberClass = chars(tMem, 1, tMem.length - 1)
  [ 56] jmp [135]
  [ 59] getprop 748 ............................. <pPrefs>
  [ 62] pushsymb 50 ............................. <#sprite>
  [ 64] pusharglist 2 ........................... <pPrefs, #sprite>
  [ 66] objcall 96 .............................. <pPrefs[#sprite]>
  [ 68] getchainedprop 99 ....................... <pPrefs[#sprite].member>
  [ 70] getobjprop 755 .......................... <pPrefs[#sprite].member.paletteRef>
  [ 73] pusharglist 1 ........................... <pPrefs[#sprite].member.paletteRef>
  [ 75] extcall 49 .............................. <ilk(pPrefs[#sprite].member.paletteRef)>
  [ 77] pushsymb 99 ............................. <#member>
  [ 79] nteq .................................... <ilk(pPrefs[#sprite].member.paletteRef) <> #member>
  [ 80] jmpifz [ 98] ............................ if ilk(pPrefs[#sprite].member.paletteRef) <> #member then
  [ 83] getparam 0 .............................. <me>
  [ 85] pushcons 0 .............................. <"Palette must be a cast member for palette animations!">
  [ 87] pushsymb 356 ............................ <#define>
  [ 90] pusharglist 3 ........................... <me, "Palette must be a cast member for palette animations!", #define>
  [ 92] extcall 106 ............................. <error(me, "Palette must be a cast member for palette animations!", #define)>
  [ 94] pusharglistnoret 1 ...................... <error(me, "Palette must be a cast member for palette animations!", #define)>
  [ 96] extcall 44 .............................. return error(me, "Palette must be a cast member for palette animations!", #define)
  [ 98] getprop 748 ............................. <pPrefs>
  [101] pushsymb 50 ............................. <#sprite>
  [103] pusharglist 2 ........................... <pPrefs, #sprite>
  [105] objcall 96 .............................. <pPrefs[#sprite]>
  [107] getchainedprop 99 ....................... <pPrefs[#sprite].member>
  [109] getchainedprop 755 ...................... <pPrefs[#sprite].member.paletteRef>
  [112] getobjprop 100 .......................... <pPrefs[#sprite].member.paletteRef.name>
  [114] setlocal 0 .............................. tMem = pPrefs[#sprite].member.paletteRef.name
  [116] getlocal 0 .............................. <tMem>
  [118] pushint8 1 .............................. <1>
  [120] getlocal 0 .............................. <tMem>
  [122] getobjprop 103 .......................... <tMem.length>
  [124] pushint8 1 .............................. <1>
  [126] sub ..................................... <tMem.length - 1>
  [127] pusharglist 3 ........................... <tMem, 1, tMem.length - 1>
  [129] extcall 754 ............................. <chars(tMem, 1, tMem.length - 1)>
  [132] setprop 756 ............................. pPaletteClass = chars(tMem, 1, tMem.length - 1)
  [135] getparam 0 .............................. <me>
  [137] pusharglistnoret 1 ...................... <me>
  [139] objcall 744 ............................. me.setInitDelay()
  [142] getparam 0 .............................. <me>
  [144] pusharglistnoret 1 ...................... <me>
  [146] objcall 745 ............................. me.setAnimDelay()
  [149] getprop 748 ............................. <pPrefs>
  [152] pushsymb 757 ............................ <#frameList>
  [155] pusharglist 2 ........................... <pPrefs, #frameList>
  [157] objcall 96 .............................. <pPrefs[#frameList]>
  [159] pushcons 1 .............................. <EMPTY>
  [161] nteq .................................... <pPrefs[#frameList] <> EMPTY>
  [162] jmpifz [186] ............................ if pPrefs[#frameList] <> EMPTY then / else
  [165] getprop 748 ............................. <pPrefs>
  [168] pushsymb 757 ............................ <#frameList>
  [171] pusharglist 2 ........................... <pPrefs, #frameList>
  [173] objcall 96 .............................. <pPrefs[#frameList]>
  [175] pusharglist 1 ........................... <pPrefs[#frameList]>
  [177] extcall 301 ............................. <value(pPrefs[#frameList])>
  [180] setprop 747 ............................. pFrameList = value(pPrefs[#frameList])
  [183] jmp [274]
  [186] pushint8 1 .............................. <1>
  [188] setlocal 1 .............................. tMemFound = 1
  [190] pushint8 1 .............................. <1>
  [192] setlocal 2 .............................. tIndex = 1
  [194] getlocal 1 .............................. <tMemFound>
  [196] getlocal 2 .............................. <tIndex>
  [198] pushint8 100 ............................ <100>
  [200] lt ...................................... <tIndex < 100>
  [201] and ..................................... <tMemFound and (tIndex < 100)>
  [202] jmpifz [274] ............................ repeat while tMemFound and (tIndex < 100)
  [205] getprop 748 ............................. <pPrefs>
  [208] pushsymb 751 ............................ <#animType>
  [211] pusharglist 2 ........................... <pPrefs, #animType>
  [213] objcall 96 .............................. <pPrefs[#animType]>
  [215] pushsymb 752 ............................ <#memberSwap>
  [218] eq ...................................... <pPrefs[#animType] = #memberSwap>
  [219] jmpifz [233] ............................ if pPrefs[#animType] = #memberSwap then / else
  [222] getprop 753 ............................. <pMemberClass>
  [225] getlocal 2 .............................. <tIndex>
  [227] joinstr ................................. <pMemberClass & tIndex>
  [228] setlocal 0 .............................. tMem = pMemberClass & tIndex
  [230] jmp [241]
  [233] getprop 756 ............................. <pPaletteClass>
  [236] getlocal 2 .............................. <tIndex>
  [238] joinstr ................................. <pPaletteClass & tIndex>
  [239] setlocal 0 .............................. tMem = pPaletteClass & tIndex
  [241] getlocal 0 .............................. <tMem>
  [243] pusharglist 1 ........................... <tMem>
  [245] extcall 127 ............................. <memberExists(tMem)>
  [247] jmpifz [262] ............................ if memberExists(tMem) then / else
  [250] getprop 747 ............................. <pFrameList>
  [253] getlocal 2 .............................. <tIndex>
  [255] pusharglistnoret 2 ...................... <pFrameList, tIndex>
  [257] objcall 132 ............................. pFrameList.add(tIndex)
  [259] jmp [265]
  [262] pushzero ................................ <0>
  [263] setlocal 1 .............................. tMemFound = 0
  [265] getlocal 2 .............................. <tIndex>
  [267] pushint8 1 .............................. <1>
  [269] add ..................................... <tIndex + 1>
  [270] setlocal 2 .............................. tIndex = tIndex + 1
  [272] endrepeat [194]
  [274] getparam 0 .............................. <me>
  [276] pusharglist 1 ........................... <me>
  [278] objcall 42 .............................. <me.getID()>
  [280] pusharglistnoret 1 ...................... <me.getID()>
  [282] extcall 65 .............................. receiveUpdate(me.getID())
  [284] pushint8 1 .............................. <1>
  [286] pusharglistnoret 1 ...................... <1>
  [288] extcall 44 .............................. return 1
  [290] ret
end

on setInitDelay me
  [  0] getprop 748 ............................. <pPrefs>
  [  3] pushsymb 761 ............................ <#initDelayType>
  [  6] pusharglist 2 ........................... <pPrefs, #initDelayType>
  [  8] objcall 96 .............................. <pPrefs[#initDelayType]>
  [ 10] pushsymb 586 ............................ <#random>
  [ 13] eq ...................................... <pPrefs[#initDelayType] = #random>
  [ 14] jmpifz [ 38] ............................ if pPrefs[#initDelayType] = #random then / else
  [ 17] getprop 748 ............................. <pPrefs>
  [ 20] pushsymb 763 ............................ <#initDelay>
  [ 23] pusharglist 2 ........................... <pPrefs, #initDelay>
  [ 25] objcall 96 .............................. <pPrefs[#initDelay]>
  [ 27] pusharglist 1 ........................... <pPrefs[#initDelay]>
  [ 29] extcall 586 ............................. <random(pPrefs[#initDelay])>
  [ 32] setprop 762 ............................. pInitDelayCounter = random(pPrefs[#initDelay])
  [ 35] jmp [ 51]
  [ 38] getprop 748 ............................. <pPrefs>
  [ 41] pushsymb 763 ............................ <#initDelay>
  [ 44] pusharglist 2 ........................... <pPrefs, #initDelay>
  [ 46] objcall 96 .............................. <pPrefs[#initDelay]>
  [ 48] setprop 762 ............................. pInitDelayCounter = pPrefs[#initDelay]
  [ 51] ret
end

on setAnimDelay me
  [  0] getprop 748 ............................. <pPrefs>
  [  3] pushsymb 764 ............................ <#animDelayType>
  [  6] pusharglist 2 ........................... <pPrefs, #animDelayType>
  [  8] objcall 96 .............................. <pPrefs[#animDelayType]>
  [ 10] pushsymb 586 ............................ <#random>
  [ 13] eq ...................................... <pPrefs[#animDelayType] = #random>
  [ 14] jmpifz [ 38] ............................ if pPrefs[#animDelayType] = #random then / else
  [ 17] getprop 748 ............................. <pPrefs>
  [ 20] pushsymb 766 ............................ <#animDelay>
  [ 23] pusharglist 2 ........................... <pPrefs, #animDelay>
  [ 25] objcall 96 .............................. <pPrefs[#animDelay]>
  [ 27] pusharglist 1 ........................... <pPrefs[#animDelay]>
  [ 29] extcall 586 ............................. <random(pPrefs[#animDelay])>
  [ 32] setprop 765 ............................. pAnimDelayCounter = random(pPrefs[#animDelay])
  [ 35] jmp [ 51]
  [ 38] getprop 748 ............................. <pPrefs>
  [ 41] pushsymb 766 ............................ <#animDelay>
  [ 44] pusharglist 2 ........................... <pPrefs, #animDelay>
  [ 46] objcall 96 .............................. <pPrefs[#animDelay]>
  [ 48] setprop 765 ............................. pAnimDelayCounter = pPrefs[#animDelay]
  [ 51] ret
end

on update me
  [  0] getprop 762 ............................. <pInitDelayCounter>
  [  3] pushint8 1 .............................. <1>
  [  5] sub ..................................... <pInitDelayCounter - 1>
  [  6] setprop 762 ............................. pInitDelayCounter = pInitDelayCounter - 1
  [  9] getprop 762 ............................. <pInitDelayCounter>
  [ 12] pushzero ................................ <0>
  [ 13] lt ...................................... <pInitDelayCounter < 0>
  [ 14] jmpifz [ 48] ............................ if pInitDelayCounter < 0 then
  [ 17] getprop 765 ............................. <pAnimDelayCounter>
  [ 20] pushint8 1 .............................. <1>
  [ 22] sub ..................................... <pAnimDelayCounter - 1>
  [ 23] setprop 765 ............................. pAnimDelayCounter = pAnimDelayCounter - 1
  [ 26] getprop 765 ............................. <pAnimDelayCounter>
  [ 29] pushzero ................................ <0>
  [ 30] lt ...................................... <pAnimDelayCounter < 0>
  [ 31] jmpifz [ 48] ............................ if pAnimDelayCounter < 0 then
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglistnoret 1 ...................... <me>
  [ 38] objcall 746 ............................. me.advanceAnimFrame()
  [ 41] getparam 0 .............................. <me>
  [ 43] pusharglistnoret 1 ...................... <me>
  [ 45] objcall 745 ............................. me.setAnimDelay()
  [ 48] ret
end

on advanceAnimFrame me
  [  0] getprop 749 ............................. <pCurrentFrame>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <pCurrentFrame + 1>
  [  6] setprop 749 ............................. pCurrentFrame = pCurrentFrame + 1
  [  9] getprop 749 ............................. <pCurrentFrame>
  [ 12] getprop 747 ............................. <pFrameList>
  [ 15] getobjprop 78 ........................... <pFrameList.count>
  [ 17] gt ...................................... <pCurrentFrame > pFrameList.count>
  [ 18] jmpifz [108] ............................ if pCurrentFrame > pFrameList.count then
  [ 21] getprop 748 ............................. <pPrefs>
  [ 24] pushsymb 767 ............................ <#animLoopCount>
  [ 27] pusharglist 2 ........................... <pPrefs, #animLoopCount>
  [ 29] objcall 96 .............................. <pPrefs[#animLoopCount]>
  [ 31] pushzero ................................ <0>
  [ 32] gt ...................................... <pPrefs[#animLoopCount] > 0>
  [ 33] jmpifz [ 76] ............................ if pPrefs[#animLoopCount] > 0 then
  [ 36] getprop 750 ............................. <pAnimLoopCounter>
  [ 39] pushint8 1 .............................. <1>
  [ 41] add ..................................... <pAnimLoopCounter + 1>
  [ 42] setprop 750 ............................. pAnimLoopCounter = pAnimLoopCounter + 1
  [ 45] getprop 750 ............................. <pAnimLoopCounter>
  [ 48] getprop 748 ............................. <pPrefs>
  [ 51] pushsymb 767 ............................ <#animLoopCount>
  [ 54] pusharglist 2 ........................... <pPrefs, #animLoopCount>
  [ 56] objcall 96 .............................. <pPrefs[#animLoopCount]>
  [ 58] gt ...................................... <pAnimLoopCounter > pPrefs[#animLoopCount]>
  [ 59] jmpifz [ 76] ............................ if pAnimLoopCounter > pPrefs[#animLoopCount] then
  [ 62] getparam 0 .............................. <me>
  [ 64] pusharglist 1 ........................... <me>
  [ 66] objcall 42 .............................. <me.getID()>
  [ 68] pusharglist 1 ........................... <me.getID()>
  [ 70] extcall 46 .............................. <removeUpdate(me.getID())>
  [ 72] pusharglistnoret 1 ...................... <removeUpdate(me.getID())>
  [ 74] extcall 44 .............................. return removeUpdate(me.getID())
  [ 76] getparam 0 .............................. <me>
  [ 78] pusharglistnoret 1 ...................... <me>
  [ 80] objcall 744 ............................. me.setInitDelay()
  [ 83] getprop 762 ............................. <pInitDelayCounter>
  [ 86] pushzero ................................ <0>
  [ 87] gt ...................................... <pInitDelayCounter > 0>
  [ 88] jmpifz [103] ............................ if pInitDelayCounter > 0 then / else
  [ 91] pushzero ................................ <0>
  [ 92] setprop 749 ............................. pCurrentFrame = 0
  [ 95] pushzero ................................ <0>
  [ 96] pusharglistnoret 1 ...................... <0>
  [ 98] extcall 44 .............................. return 0
  [100] jmp [108]
  [103] pushint8 1 .............................. <1>
  [105] setprop 749 ............................. pCurrentFrame = 1
  [108] getprop 747 ............................. <pFrameList>
  [111] pusharglist 1 ........................... <pFrameList>
  [113] extcall 49 .............................. <ilk(pFrameList)>
  [115] pushsymb 312 ............................ <#list>
  [118] eq ...................................... <ilk(pFrameList) = #list>
  [119] jmpifz [254] ............................ if ilk(pFrameList) = #list then
  [122] getprop 747 ............................. <pFrameList>
  [125] getobjprop 78 ........................... <pFrameList.count>
  [127] pushzero ................................ <0>
  [128] gt ...................................... <pFrameList.count > 0>
  [129] jmpifz [254] ............................ if pFrameList.count > 0 then
  [132] getprop 747 ............................. <pFrameList>
  [135] getprop 749 ............................. <pCurrentFrame>
  [138] pusharglist 2 ........................... <pFrameList, pCurrentFrame>
  [140] objcall 96 .............................. <pFrameList[pCurrentFrame]>
  [142] pusharglist 1 ........................... <pFrameList[pCurrentFrame]>
  [144] extcall 301 ............................. <value(pFrameList[pCurrentFrame])>
  [147] setlocal 0 .............................. tAnimFrame = value(pFrameList[pCurrentFrame])
  [149] getprop 753 ............................. <pMemberClass>
  [152] pusharglist 1 ........................... <pMemberClass>
  [154] extcall 71 .............................. <voidp(pMemberClass)>
  [156] not ..................................... <not voidp(pMemberClass)>
  [157] jmpifz [226] ............................ if not voidp(pMemberClass) then / else
  [160] getprop 753 ............................. <pMemberClass>
  [163] getlocal 0 .............................. <tAnimFrame>
  [165] joinstr ................................. <pMemberClass & tAnimFrame>
  [166] setlocal 1 .............................. tMem = pMemberClass & tAnimFrame
  [168] getprop 748 ............................. <pPrefs>
  [171] pushsymb 50 ............................. <#sprite>
  [173] pusharglist 2 ........................... <pPrefs, #sprite>
  [175] objcall 96 .............................. <pPrefs[#sprite]>
  [177] getlocal 1 .............................. <tMem>
  [179] setobjprop 99 ........................... pPrefs[#sprite].member = tMem
  [181] getprop 748 ............................. <pPrefs>
  [184] pushsymb 50 ............................. <#sprite>
  [186] pusharglist 2 ........................... <pPrefs, #sprite>
  [188] objcall 96 .............................. <pPrefs[#sprite]>
  [190] getlocal 1 .............................. <tMem>
  [192] pusharglist 1 ........................... <tMem>
  [194] extcall 99 .............................. <member(tMem)>
  [196] getobjprop 407 .......................... <member(tMem).width>
  [199] setobjprop 407 .......................... pPrefs[#sprite].width = member(tMem).width
  [202] getprop 748 ............................. <pPrefs>
  [205] pushsymb 50 ............................. <#sprite>
  [207] pusharglist 2 ........................... <pPrefs, #sprite>
  [209] objcall 96 .............................. <pPrefs[#sprite]>
  [211] getlocal 1 .............................. <tMem>
  [213] pusharglist 1 ........................... <tMem>
  [215] extcall 99 .............................. <member(tMem)>
  [217] getobjprop 413 .......................... <member(tMem).height>
  [220] setobjprop 413 .......................... pPrefs[#sprite].height = member(tMem).height
  [223] jmp [254]
  [226] getprop 756 ............................. <pPaletteClass>
  [229] getlocal 0 .............................. <tAnimFrame>
  [231] joinstr ................................. <pPaletteClass & tAnimFrame>
  [232] setlocal 1 .............................. tMem = pPaletteClass & tAnimFrame
  [234] getprop 748 ............................. <pPrefs>
  [237] pushsymb 50 ............................. <#sprite>
  [239] pusharglist 2 ........................... <pPrefs, #sprite>
  [241] objcall 96 .............................. <pPrefs[#sprite]>
  [243] getchainedprop 99 ....................... <pPrefs[#sprite].member>
  [245] getlocal 1 .............................. <tMem>
  [247] pusharglist 1 ........................... <tMem>
  [249] extcall 99 .............................. <member(tMem)>
  [251] setobjprop 755 .......................... pPrefs[#sprite].member.paletteRef = member(tMem)
  [254] ret
end
