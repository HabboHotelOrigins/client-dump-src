property ancestor, pPart, pmodel, pDirection, pDrawProps, pAction, pActionLh, pActionRh, pMemString, pXFix, pYFix, pCacheImage, pCacheRectA, pCacheRectB, pAnimation, pAnimFrame, pTotalFrame

on deconsturct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 30 .............................. <VOID>
  [  4] setprop 379 ............................. ancestor = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 44 .............................. return 1
  [ 13] ret
end

on define me, tPart, tmodel, tColor, tDirection, tAction, tAncestor
  [  0] getparam 6 .............................. <tAncestor>
  [  2] setprop 379 ............................. ancestor = tAncestor
  [  5] getparam 1 .............................. <tPart>
  [  7] setprop 380 ............................. pPart = tPart
  [ 10] getparam 2 .............................. <tmodel>
  [ 12] setprop 381 ............................. pmodel = tmodel
  [ 15] pushsymb 383 ............................ <#maskImage>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 58 ............................. <#ink>
  [ 21] pushzero ................................ <0>
  [ 22] pushsymb 384 ............................ <#bgColor>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglist 6 ........................... <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 28] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 29] setprop 382 ............................. pDrawProps = [#maskImage: 0, #ink: 0, #bgColor: 0]
  [ 32] pushzero ................................ <0>
  [ 33] setprop 385 ............................. pCacheImage = 0
  [ 36] pushzero ................................ <0>
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pushzero ................................ <0>
  [ 40] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 42] extcall 387 ............................. <rect(0, 0, 0, 0)>
  [ 45] setprop 386 ............................. pCacheRectA = rect(0, 0, 0, 0)
  [ 48] pushzero ................................ <0>
  [ 49] pushzero ................................ <0>
  [ 50] pushzero ................................ <0>
  [ 51] pushzero ................................ <0>
  [ 52] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 54] extcall 387 ............................. <rect(0, 0, 0, 0)>
  [ 57] setprop 388 ............................. pCacheRectB = rect(0, 0, 0, 0)
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglistnoret 1 ...................... <me>
  [ 64] objcall 363 ............................. me.defineInk()
  [ 67] getparam 0 .............................. <me>
  [ 69] getparam 3 .............................. <tColor>
  [ 71] pusharglistnoret 2 ...................... <me, tColor>
  [ 73] objcall 365 ............................. me.setColor(tColor)
  [ 76] getparam 4 .............................. <tDirection>
  [ 78] setprop 389 ............................. pDirection = tDirection
  [ 81] getparam 5 .............................. <tAction>
  [ 83] setprop 390 ............................. pAction = tAction
  [ 86] getparam 5 .............................. <tAction>
  [ 88] setprop 391 ............................. pActionLh = tAction
  [ 91] getparam 5 .............................. <tAction>
  [ 93] setprop 392 ............................. pActionRh = tAction
  [ 96] pushcons 0 .............................. <EMPTY>
  [ 98] setprop 393 ............................. pMemString = EMPTY
  [101] pushzero ................................ <0>
  [102] setprop 394 ............................. pXFix = 0
  [105] pushzero ................................ <0>
  [106] setprop 395 ............................. pYFix = 0
  [109] pushzero ................................ <0>
  [110] setprop 396 ............................. pAnimation = 0
  [113] pushint8 1 .............................. <1>
  [115] setprop 397 ............................. pAnimFrame = 1
  [118] pushint8 1 .............................. <1>
  [120] setprop 398 ............................. pTotalFrame = 1
  [123] pushint8 1 .............................. <1>
  [125] pusharglistnoret 1 ...................... <1>
  [127] extcall 44 .............................. return 1
  [129] ret
end

on update me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tAnimCntr = 0
  [  3] getprop 390 ............................. <pAction>
  [  6] setlocal 1 .............................. tAction = pAction
  [  8] getprop 380 ............................. <pPart>
  [ 11] setlocal 2 .............................. tPart = pPart
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 401 ............................ <#pFlipList>
  [ 18] getprop 389 ............................. <pDirection>
  [ 21] pushint8 1 .............................. <1>
  [ 23] add ..................................... <pDirection + 1>
  [ 24] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 26] objcall 104 ............................. <me.pFlipList[pDirection + 1]>
  [ 28] setlocal 3 .............................. tdir = me.pFlipList[pDirection + 1]
  [ 30] pushzero ................................ <0>
  [ 31] setprop 394 ............................. pXFix = 0
  [ 34] pushzero ................................ <0>
  [ 35] setprop 395 ............................. pYFix = 0
  [ 38] getparam 0 .............................. <me>
  [ 40] getobjprop 402 .......................... <me.pAnimating>
  [ 43] jmpifz [ 58] ............................ if me.pAnimating then / else
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglist 1 ........................... <me>
  [ 50] objcall 378 ............................. <me.animate()>
  [ 53] setlocal 4 .............................. tMemString = me.animate()
  [ 55] jmp [694]
  [ 58] getprop 380 ............................. <pPart>
  [ 61] peek 0 .................................. case pPart of
  [ 63] pushcons 1 .............................. <"bd">
  [ 65] nteq
  [ 66] jmpifz [ 85] ............................ (case) "bd", ...
  [ 69] peek 0
  [ 71] pushcons 2 .............................. <"lg">
  [ 73] nteq
  [ 74] jmpifz [ 85] ............................ (case) ..., "lg", ...
  [ 77] peek 0
  [ 79] pushcons 3 .............................. <"sh">
  [ 81] eq
  [ 82] jmpifz [104] ............................ (case) ..., "sh":
  [ 85] getprop 390 ............................. <pAction>
  [ 88] pushcons 4 .............................. <"wlk">
  [ 90] eq ...................................... <pAction = "wlk">
  [ 91] jmpifz [101] ............................ if pAction = "wlk" then
  [ 94] getparam 0 .............................. <me>
  [ 96] getobjprop 403 .......................... <me.pAnimCounter>
  [ 99] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [101] jmp [654]
  [104] peek 0
  [106] pushcons 5 .............................. <"lh">
  [108] nteq
  [109] jmpifz [120] ............................ (case) "lh", ...
  [112] peek 0
  [114] pushcons 6 .............................. <"ls">
  [116] eq
  [117] jmpifz [254] ............................ (case) ..., "ls":
  [120] getprop 389 ............................. <pDirection>
  [123] getlocal 3 .............................. <tdir>
  [125] eq ...................................... <pDirection = tdir>
  [126] jmpifz [148] ............................ if pDirection = tdir then / else
  [129] getprop 391 ............................. <pActionLh>
  [132] pusharglist 1 ........................... <pActionLh>
  [134] extcall 71 .............................. <voidp(pActionLh)>
  [136] not ..................................... <not voidp(pActionLh)>
  [137] jmpifz [145] ............................ if not voidp(pActionLh) then
  [140] getprop 391 ............................. <pActionLh>
  [143] setlocal 1 .............................. tAction = pActionLh
  [145] jmp [164]
  [148] getprop 392 ............................. <pActionRh>
  [151] pusharglist 1 ........................... <pActionRh>
  [153] extcall 71 .............................. <voidp(pActionRh)>
  [155] not ..................................... <not voidp(pActionRh)>
  [156] jmpifz [164] ............................ if not voidp(pActionRh) then
  [159] getprop 392 ............................. <pActionRh>
  [162] setlocal 1 .............................. tAction = pActionRh
  [164] getlocal 1 .............................. <tAction>
  [166] pushcons 4 .............................. <"wlk">
  [168] eq ...................................... <tAction = "wlk">
  [169] jmpifz [182] ............................ if tAction = "wlk" then / else
  [172] getparam 0 .............................. <me>
  [174] getobjprop 403 .......................... <me.pAnimCounter>
  [177] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [179] jmp [251]
  [182] getlocal 1 .............................. <tAction>
  [184] pushcons 7 .............................. <"wav">
  [186] eq ...................................... <tAction = "wav">
  [187] jmpifz [203] ............................ if tAction = "wav" then / else
  [190] getparam 0 .............................. <me>
  [192] getobjprop 403 .......................... <me.pAnimCounter>
  [195] pushint8 2 .............................. <2>
  [197] mod ..................................... <me.pAnimCounter mod 2>
  [198] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [200] jmp [251]
  [203] pushcons 8 .............................. <"crr">
  [205] pushcons 9 .............................. <"drk">
  [207] pushcons 10 ............................. <"ohd">
  [209] pusharglist 3 ........................... <["crr", "drk", "ohd"]>
  [211] pushlist ................................ <["crr", "drk", "ohd"]>
  [212] getlocal 1 .............................. <tAction>
  [214] pusharglist 2 ........................... <["crr", "drk", "ohd"], tAction>
  [216] objcall 404 ............................. <["crr", "drk", "ohd"].getPos(tAction)>
  [219] pushzero ................................ <0>
  [220] nteq .................................... <["crr", "drk", "ohd"].getPos(tAction) <> 0>
  [221] jmpifz [251] ............................ if ["crr", "drk", "ohd"].getPos(tAction) <> 0 then
  [224] pushint8 40 ............................. <40>
  [226] inv ..................................... <-40>
  [227] setprop 394 ............................. pXFix = -40
  [230] pushcons 11 ............................. <"r">
  [232] getprop 380 ............................. <pPart>
  [235] pushsymb 102 ............................ <#char>
  [237] pushint8 2 .............................. <2>
  [239] pusharglist 3 ........................... <pPart, #char, 2>
  [241] objcall 104 ............................. <pPart.char[2]>
  [243] joinstr ................................. <"r" & pPart.char[2]>
  [244] setlocal 2 .............................. tPart = "r" & pPart.char[2]
  [246] getprop 389 ............................. <pDirection>
  [249] setlocal 3 .............................. tdir = pDirection
  [251] jmp [654]
  [254] peek 0
  [256] pushcons 12 ............................. <"rh">
  [258] nteq
  [259] jmpifz [270] ............................ (case) "rh", ...
  [262] peek 0
  [264] pushcons 13 ............................. <"rs">
  [266] eq
  [267] jmpifz [413] ............................ (case) ..., "rs":
  [270] getprop 389 ............................. <pDirection>
  [273] getlocal 3 .............................. <tdir>
  [275] eq ...................................... <pDirection = tdir>
  [276] jmpifz [298] ............................ if pDirection = tdir then / else
  [279] getprop 392 ............................. <pActionRh>
  [282] pusharglist 1 ........................... <pActionRh>
  [284] extcall 71 .............................. <voidp(pActionRh)>
  [286] not ..................................... <not voidp(pActionRh)>
  [287] jmpifz [295] ............................ if not voidp(pActionRh) then
  [290] getprop 392 ............................. <pActionRh>
  [293] setlocal 1 .............................. tAction = pActionRh
  [295] jmp [314]
  [298] getprop 391 ............................. <pActionLh>
  [301] pusharglist 1 ........................... <pActionLh>
  [303] extcall 71 .............................. <voidp(pActionLh)>
  [305] not ..................................... <not voidp(pActionLh)>
  [306] jmpifz [314] ............................ if not voidp(pActionLh) then
  [309] getprop 391 ............................. <pActionLh>
  [312] setlocal 1 .............................. tAction = pActionLh
  [314] getlocal 1 .............................. <tAction>
  [316] pushcons 4 .............................. <"wlk">
  [318] eq ...................................... <tAction = "wlk">
  [319] jmpifz [332] ............................ if tAction = "wlk" then / else
  [322] getparam 0 .............................. <me>
  [324] getobjprop 403 .......................... <me.pAnimCounter>
  [327] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [329] jmp [410]
  [332] getlocal 1 .............................. <tAction>
  [334] pushcons 7 .............................. <"wav">
  [336] eq ...................................... <tAction = "wav">
  [337] jmpifz [374] ............................ if tAction = "wav" then / else
  [340] getparam 0 .............................. <me>
  [342] getobjprop 403 .......................... <me.pAnimCounter>
  [345] pushint8 2 .............................. <2>
  [347] mod ..................................... <me.pAnimCounter mod 2>
  [348] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [350] pushcons 14 ............................. <"l">
  [352] getprop 380 ............................. <pPart>
  [355] pushsymb 102 ............................ <#char>
  [357] pushint8 2 .............................. <2>
  [359] pusharglist 3 ........................... <pPart, #char, 2>
  [361] objcall 104 ............................. <pPart.char[2]>
  [363] joinstr ................................. <"l" & pPart.char[2]>
  [364] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [366] getprop 389 ............................. <pDirection>
  [369] setlocal 3 .............................. tdir = pDirection
  [371] jmp [410]
  [374] getlocal 1 .............................. <tAction>
  [376] pushcons 15 ............................. <"sig">
  [378] eq ...................................... <tAction = "sig">
  [379] jmpifz [410] ............................ if tAction = "sig" then
  [382] pushzero ................................ <0>
  [383] setlocal 0 .............................. tAnimCntr = 0
  [385] pushcons 14 ............................. <"l">
  [387] getprop 380 ............................. <pPart>
  [390] pushsymb 102 ............................ <#char>
  [392] pushint8 2 .............................. <2>
  [394] pusharglist 3 ........................... <pPart, #char, 2>
  [396] objcall 104 ............................. <pPart.char[2]>
  [398] joinstr ................................. <"l" & pPart.char[2]>
  [399] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [401] getprop 389 ............................. <pDirection>
  [404] setlocal 3 .............................. tdir = pDirection
  [406] pushcons 7 .............................. <"wav">
  [408] setlocal 1 .............................. tAction = "wav"
  [410] jmp [654]
  [413] peek 0
  [415] pushcons 16 ............................. <"hd">
  [417] nteq
  [418] jmpifz [429] ............................ (case) "hd", ...
  [421] peek 0
  [423] pushcons 17 ............................. <"fc">
  [425] eq
  [426] jmpifz [470] ............................ (case) ..., "fc":
  [429] getparam 0 .............................. <me>
  [431] getobjprop 405 .......................... <me.pTalking>
  [434] jmpifz [467] ............................ if me.pTalking then
  [437] getprop 390 ............................. <pAction>
  [440] pushcons 18 ............................. <"lay">
  [442] eq ...................................... <pAction = "lay">
  [443] jmpifz [453] ............................ if pAction = "lay" then / else
  [446] pushcons 19 ............................. <"lsp">
  [448] setlocal 1 .............................. tAction = "lsp"
  [450] jmp [457]
  [453] pushcons 20 ............................. <"spk">
  [455] setlocal 1 .............................. tAction = "spk"
  [457] getparam 0 .............................. <me>
  [459] getobjprop 403 .......................... <me.pAnimCounter>
  [462] pushint8 2 .............................. <2>
  [464] mod ..................................... <me.pAnimCounter mod 2>
  [465] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [467] jmp [654]
  [470] peek 0
  [472] pushcons 21 ............................. <"ey">
  [474] eq
  [475] jmpifz [513] ............................ (case) "ey":
  [478] getparam 0 .............................. <me>
  [480] getobjprop 405 .......................... <me.pTalking>
  [483] getprop 390 ............................. <pAction>
  [486] pushcons 18 ............................. <"lay">
  [488] nteq .................................... <pAction <> "lay">
  [489] and ..................................... <me.pTalking and (pAction <> "lay")>
  [490] getparam 0 .............................. <me>
  [492] getobjprop 403 .......................... <me.pAnimCounter>
  [495] pushint8 2 .............................. <2>
  [497] mod ..................................... <me.pAnimCounter mod 2>
  [498] pushzero ................................ <0>
  [499] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [500] and ..................................... <me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0)>
  [501] jmpifz [510] ............................ if me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0) then
  [504] pushint8 1 .............................. <1>
  [506] inv ..................................... <-1>
  [507] setprop 395 ............................. pYFix = -1
  [510] jmp [654]
  [513] peek 0
  [515] pushcons 22 ............................. <"hr">
  [517] eq
  [518] jmpifz [556] ............................ (case) "hr":
  [521] getparam 0 .............................. <me>
  [523] getobjprop 405 .......................... <me.pTalking>
  [526] getparam 0 .............................. <me>
  [528] getobjprop 403 .......................... <me.pAnimCounter>
  [531] pushint8 2 .............................. <2>
  [533] mod ..................................... <me.pAnimCounter mod 2>
  [534] pushzero ................................ <0>
  [535] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [536] and ..................................... <me.pTalking and ((me.pAnimCounter mod 2) = 0)>
  [537] jmpifz [553] ............................ if me.pTalking and ((me.pAnimCounter mod 2) = 0) then
  [540] getprop 390 ............................. <pAction>
  [543] pushcons 18 ............................. <"lay">
  [545] nteq .................................... <pAction <> "lay">
  [546] jmpifz [553] ............................ if pAction <> "lay" then
  [549] pushcons 20 ............................. <"spk">
  [551] setlocal 1 .............................. tAction = "spk"
  [553] jmp [654]
  [556] peek 0
  [558] pushcons 23 ............................. <"ri">
  [560] eq
  [561] jmpifz [636] ............................ (case) "ri":
  [564] getparam 0 .............................. <me>
  [566] getobjprop 406 .......................... <me.pCarrying>
  [569] not ..................................... <not me.pCarrying>
  [570] jmpifz [623] ............................ if not me.pCarrying then / else
  [573] getprop 386 ............................. <pCacheRectA>
  [576] getobjprop 407 .......................... <pCacheRectA.width>
  [579] pushzero ................................ <0>
  [580] gt ...................................... <pCacheRectA.width > 0>
  [581] jmpifz [614] ............................ if pCacheRectA.width > 0 then
  [584] getparam 0 .............................. <me>
  [586] getparam 0 .............................. <me>
  [588] getobjprop 409 .......................... <me.pUpdateRect>
  [591] getprop 386 ............................. <pCacheRectA>
  [594] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [596] extcall 408 ............................. <union(me.pUpdateRect, pCacheRectA)>
  [599] setobjprop 409 .......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [602] pushzero ................................ <0>
  [603] pushzero ................................ <0>
  [604] pushzero ................................ <0>
  [605] pushzero ................................ <0>
  [606] pusharglist 4 ........................... <0, 0, 0, 0>
  [608] extcall 387 ............................. <rect(0, 0, 0, 0)>
  [611] setprop 386 ............................. pCacheRectA = rect(0, 0, 0, 0)
  [614] pop 1
  [616] pusharglistnoret 0 ...................... <>
  [618] extcall 44 .............................. return 
  [620] jmp [633]
  [623] getprop 392 ............................. <pActionRh>
  [626] setlocal 1 .............................. tAction = pActionRh
  [628] getprop 389 ............................. <pDirection>
  [631] setlocal 3 .............................. tdir = pDirection
  [633] jmp [654]
  [636] peek 0
  [638] pushcons 24 ............................. <"li">
  [640] eq
  [641] jmpifz [654] ............................ (case) "li":
  [644] getprop 391 ............................. <pActionLh>
  [647] setlocal 1 .............................. tAction = pActionLh
  [649] getprop 389 ............................. <pDirection>
  [652] setlocal 3 .............................. tdir = pDirection
  [654] pop 1 ................................... end case
  [656] getparam 0 .............................. <me>
  [658] getobjprop 410 .......................... <me.pPeopleSize>
  [661] pushcons 25 ............................. <"_">
  [663] joinstr ................................. <me.pPeopleSize & "_">
  [664] getlocal 1 .............................. <tAction>
  [666] joinstr ................................. <me.pPeopleSize & "_" & tAction>
  [667] pushcons 25 ............................. <"_">
  [669] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_">
  [670] getlocal 2 .............................. <tPart>
  [672] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart>
  [673] pushcons 25 ............................. <"_">
  [675] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_">
  [676] getprop 381 ............................. <pmodel>
  [679] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel>
  [680] pushcons 25 ............................. <"_">
  [682] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_">
  [683] getlocal 3 .............................. <tdir>
  [685] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir>
  [686] pushcons 25 ............................. <"_">
  [688] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_">
  [689] getlocal 0 .............................. <tAnimCntr>
  [691] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCntr>
  [692] setlocal 4 .............................. tMemString = me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCntr
  [694] getprop 393 ............................. <pMemString>
  [697] getlocal 4 .............................. <tMemString>
  [699] nteq .................................... <pMemString <> tMemString>
  [700] jmpifz [913] ............................ if pMemString <> tMemString then
  [703] getlocal 4 .............................. <tMemString>
  [705] pusharglist 1 ........................... <tMemString>
  [707] extcall 56 .............................. <getmemnum(tMemString)>
  [709] setlocal 5 .............................. tMemNum = getmemnum(tMemString)
  [711] getlocal 5 .............................. <tMemNum>
  [713] pushzero ................................ <0>
  [714] gt ...................................... <tMemNum > 0>
  [715] jmpifz [909] ............................ if tMemNum > 0 then / else
  [718] getlocal 4 .............................. <tMemString>
  [720] setprop 393 ............................. pMemString = tMemString
  [723] getlocal 5 .............................. <tMemNum>
  [725] pusharglist 1 ........................... <tMemNum>
  [727] extcall 99 .............................. <member(tMemNum)>
  [729] setlocal 6 .............................. tmember = member(tMemNum)
  [731] getlocal 6 .............................. <tmember>
  [733] getobjprop 411 .......................... <tmember.regPoint>
  [736] setlocal 7 .............................. tRegPnt = tmember.regPoint
  [738] getlocal 7 .............................. <tRegPnt>
  [740] pushint8 1 .............................. <1>
  [742] pusharglist 2 ........................... <tRegPnt, 1>
  [744] objcall 96 .............................. <tRegPnt[1]>
  [746] inv ..................................... <-tRegPnt[1]>
  [747] setlocal 8 .............................. tX = -tRegPnt[1]
  [749] getparam 0 .............................. <me>
  [751] getchainedprop 412 ...................... <me.pBuffer>
  [754] getchainedprop 387 ...................... <me.pBuffer.rect>
  [757] getobjprop 413 .......................... <me.pBuffer.rect.height>
  [760] getlocal 7 .............................. <tRegPnt>
  [762] pushint8 2 .............................. <2>
  [764] pusharglist 2 ........................... <tRegPnt, 2>
  [766] objcall 96 .............................. <tRegPnt[2]>
  [768] sub ..................................... <me.pBuffer.rect.height - tRegPnt[2]>
  [769] pushint8 10 ............................. <10>
  [771] sub ..................................... <me.pBuffer.rect.height - tRegPnt[2] - 10>
  [772] setlocal 9 .............................. tY = me.pBuffer.rect.height - tRegPnt[2] - 10
  [774] getparam 0 .............................. <me>
  [776] getparam 0 .............................. <me>
  [778] getobjprop 409 .......................... <me.pUpdateRect>
  [781] getprop 386 ............................. <pCacheRectA>
  [784] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [786] extcall 408 ............................. <union(me.pUpdateRect, pCacheRectA)>
  [789] setobjprop 409 .......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [792] getlocal 6 .............................. <tmember>
  [794] getobjprop 129 .......................... <tmember.image>
  [796] setprop 385 ............................. pCacheImage = tmember.image
  [799] getlocal 8 .............................. <tX>
  [801] getlocal 9 .............................. <tY>
  [803] getlocal 8 .............................. <tX>
  [805] getprop 385 ............................. <pCacheImage>
  [808] getobjprop 407 .......................... <pCacheImage.width>
  [811] add ..................................... <tX + pCacheImage.width>
  [812] getlocal 9 .............................. <tY>
  [814] getprop 385 ............................. <pCacheImage>
  [817] getobjprop 413 .......................... <pCacheImage.height>
  [820] add ..................................... <tY + pCacheImage.height>
  [821] pusharglist 4 ........................... <tX, tY, tX + pCacheImage.width, tY + pCacheImage.height>
  [823] extcall 387 ............................. <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)>
  [826] getprop 394 ............................. <pXFix>
  [829] getprop 395 ............................. <pYFix>
  [832] getprop 394 ............................. <pXFix>
  [835] getprop 395 ............................. <pYFix>
  [838] pusharglist 4 ........................... <[pXFix, pYFix, pXFix, pYFix]>
  [840] pushlist ................................ <[pXFix, pYFix, pXFix, pYFix]>
  [841] add ..................................... <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix]>
  [842] getparam 0 .............................. <me>
  [844] getobjprop 414 .......................... <me.pLocFix>
  [847] getparam 0 .............................. <me>
  [849] getobjprop 414 .......................... <me.pLocFix>
  [852] pusharglist 2 ........................... <me.pLocFix, me.pLocFix>
  [854] extcall 387 ............................. <rect(me.pLocFix, me.pLocFix)>
  [857] add ..................................... <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix)>
  [858] setprop 386 ............................. pCacheRectA = rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix)
  [861] getprop 385 ............................. <pCacheImage>
  [864] getobjprop 387 .......................... <pCacheImage.rect>
  [867] setprop 388 ............................. pCacheRectB = pCacheImage.rect
  [870] getprop 382 ............................. <pDrawProps>
  [873] pushsymb 383 ............................ <#maskImage>
  [876] getprop 385 ............................. <pCacheImage>
  [879] pusharglist 1 ........................... <pCacheImage>
  [881] objcall 415 ............................. <pCacheImage.createMatte()>
  [884] pusharglistnoret 3 ...................... <pDrawProps, #maskImage, pCacheImage.createMatte()>
  [886] objcall 142 ............................. pDrawProps[#maskImage] = pCacheImage.createMatte()
  [888] getparam 0 .............................. <me>
  [890] getparam 0 .............................. <me>
  [892] getobjprop 409 .......................... <me.pUpdateRect>
  [895] getprop 386 ............................. <pCacheRectA>
  [898] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [900] extcall 408 ............................. <union(me.pUpdateRect, pCacheRectA)>
  [903] setobjprop 409 .......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [906] jmp [913]
  [909] pusharglistnoret 0 ...................... <>
  [911] extcall 44 .............................. return 
  [913] getparam 0 .............................. <me>
  [915] getchainedprop 412 ...................... <me.pBuffer>
  [918] getprop 385 ............................. <pCacheImage>
  [921] getprop 386 ............................. <pCacheRectA>
  [924] getprop 388 ............................. <pCacheRectB>
  [927] getprop 382 ............................. <pDrawProps>
  [930] pusharglistnoret 5 ...................... <me.pBuffer, pCacheImage, pCacheRectA, pCacheRectB, pDrawProps>
  [932] objcall 416 ............................. me.pBuffer.copyPixels(pCacheImage, pCacheRectA, pCacheRectB, pDrawProps)
  [935] ret
end

on render me
  [  0] getprop 393 ............................. <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 127 ............................. <memberExists(pMemString)>
  [  7] jmpifz [ 32] ............................ if memberExists(pMemString) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 412 ...................... <me.pBuffer>
  [ 15] getprop 388 ............................. <pCacheRectB>
  [ 18] getprop 386 ............................. <pCacheRectA>
  [ 21] getprop 388 ............................. <pCacheRectB>
  [ 24] getprop 382 ............................. <pDrawProps>
  [ 27] pusharglistnoret 5 ...................... <me.pBuffer, pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps>
  [ 29] objcall 416 ............................. me.pBuffer.copyPixels(pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps)
  [ 32] ret
end

on setItemObj me, tmodel
  [  0] getprop 380 ............................. <pPart>
  [  3] pushcons 23 ............................. <"ri">
  [  5] eq ...................................... <pPart = "ri">
  [  6] getprop 380 ............................. <pPart>
  [  9] pushcons 24 ............................. <"li">
  [ 11] eq ...................................... <pPart = "li">
  [ 12] or ...................................... <(pPart = "ri") or (pPart = "li")>
  [ 13] jmpifz [ 21] ............................ if (pPart = "ri") or (pPart = "li") then
  [ 16] getparam 1 .............................. <tmodel>
  [ 18] setprop 381 ............................. pmodel = tmodel
  [ 21] ret
end

on defineDir me, tdir, tPart
  [  0] getparam 2 .............................. <tPart>
  [  2] pusharglist 1 ........................... <tPart>
  [  4] extcall 71 .............................. <voidp(tPart)>
  [  6] getparam 2 .............................. <tPart>
  [  8] getprop 380 ............................. <pPart>
  [ 11] eq ...................................... <tPart = pPart>
  [ 12] or ...................................... <voidp(tPart) or (tPart = pPart)>
  [ 13] jmpifz [ 21] ............................ if voidp(tPart) or (tPart = pPart) then
  [ 16] getparam 1 .............................. <tdir>
  [ 18] setprop 389 ............................. pDirection = tdir
  [ 21] ret
end

on defineDirMultiple me, tdir, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 380 ............................. <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 70 .............................. <tTargetPartList.getOne(pPart)>
  [  9] jmpifz [ 17] ............................ if tTargetPartList.getOne(pPart) then
  [ 12] getparam 1 .............................. <tdir>
  [ 14] setprop 389 ............................. pDirection = tdir
  [ 17] ret
end

on defineAct me, tAct, tTargetPartList
  [  0] getprop 390 ............................. <pAction>
  [  3] pushcons 26 ............................. <"std">
  [  5] eq ...................................... <pAction = "std">
  [  6] jmpifz [ 14] ............................ if pAction = "std" then
  [  9] getparam 1 .............................. <tAct>
  [ 11] setprop 390 ............................. pAction = tAct
  [ 14] ret
end

on defineActMultiple me, tAct, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 380 ............................. <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 70 .............................. <tTargetPartList.getOne(pPart)>
  [  9] jmpifz [ 46] ............................ if tTargetPartList.getOne(pPart) then
  [ 12] getprop 390 ............................. <pAction>
  [ 15] pushcons 26 ............................. <"std">
  [ 17] eq ...................................... <pAction = "std">
  [ 18] jmpifz [ 26] ............................ if pAction = "std" then
  [ 21] getparam 1 .............................. <tAct>
  [ 23] setprop 390 ............................. pAction = tAct
  [ 26] getprop 380 ............................. <pPart>
  [ 29] pushcons 21 ............................. <"ey">
  [ 31] eq ...................................... <pPart = "ey">
  [ 32] getparam 1 .............................. <tAct>
  [ 34] pushcons 26 ............................. <"std">
  [ 36] eq ...................................... <tAct = "std">
  [ 37] and ..................................... <(pPart = "ey") and (tAct = "std")>
  [ 38] jmpifz [ 46] ............................ if (pPart = "ey") and (tAct = "std") then
  [ 41] pushcons 26 ............................. <"std">
  [ 43] setprop 390 ............................. pAction = "std"
  [ 46] ret
end

on defineInk me, tInk
  [  0] getparam 1 .............................. <tInk>
  [  2] pusharglist 1 ........................... <tInk>
  [  4] extcall 71 .............................. <voidp(tInk)>
  [  6] jmpifz [ 78] ............................ if voidp(tInk) then
  [  9] getprop 380 ............................. <pPart>
  [ 12] peek 0 .................................. case pPart of
  [ 14] pushcons 21 ............................. <"ey">
  [ 16] eq
  [ 17] jmpifz [ 27] ............................ (case) "ey":
  [ 20] pushint8 36 ............................. <36>
  [ 22] setparam 1 .............................. tInk = 36
  [ 24] jmp [ 76]
  [ 27] peek 0
  [ 29] pushcons 27 ............................. <"sd">
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) "sd":
  [ 35] pushint8 32 ............................. <32>
  [ 37] setparam 1 .............................. tInk = 32
  [ 39] jmp [ 76]
  [ 42] peek 0
  [ 44] pushcons 23 ............................. <"ri">
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) "ri":
  [ 50] pushint8 8 .............................. <8>
  [ 52] setparam 1 .............................. tInk = 8
  [ 54] jmp [ 76]
  [ 57] peek 0
  [ 59] pushcons 24 ............................. <"li">
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) "li":
  [ 65] pushint8 8 .............................. <8>
  [ 67] setparam 1 .............................. tInk = 8
  [ 69] jmp [ 76] ............................... (case) otherwise:
  [ 72] pushint8 41 ............................. <41>
  [ 74] setparam 1 .............................. tInk = 41
  [ 76] pop 1 ................................... end case
  [ 78] getprop 382 ............................. <pDrawProps>
  [ 81] pushsymb 58 ............................. <#ink>
  [ 83] getparam 1 .............................. <tInk>
  [ 85] pusharglistnoret 3 ...................... <pDrawProps, #ink, tInk>
  [ 87] objcall 142 ............................. pDrawProps[#ink] = tInk
  [ 89] pushint8 1 .............................. <1>
  [ 91] pusharglistnoret 1 ...................... <1>
  [ 93] extcall 44 .............................. return 1
  [ 95] ret
end

on setModel me, tmodel
  [  0] getparam 1 .............................. <tmodel>
  [  2] setprop 381 ............................. pmodel = tmodel
  [  5] ret
end

on setColor me, tColor
  [  0] getparam 1 .............................. <tColor>
  [  2] pusharglist 1 ........................... <tColor>
  [  4] extcall 71 .............................. <voidp(tColor)>
  [  6] jmpifz [ 14] ............................ if voidp(tColor) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 44 .............................. return 0
  [ 14] getparam 1 .............................. <tColor>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] eq ...................................... <tColor = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tColor = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 44 .............................. return 0
  [ 27] getparam 1 .............................. <tColor>
  [ 29] getobjprop 49 ........................... <tColor.ilk>
  [ 31] pushsymb 344 ............................ <#color>
  [ 34] eq ...................................... <tColor.ilk = #color>
  [ 35] getprop 382 ............................. <pDrawProps>
  [ 38] pushsymb 58 ............................. <#ink>
  [ 40] pusharglist 2 ........................... <pDrawProps, #ink>
  [ 42] objcall 96 .............................. <pDrawProps[#ink]>
  [ 44] pushint8 36 ............................. <36>
  [ 46] nteq .................................... <pDrawProps[#ink] <> 36>
  [ 47] and ..................................... <(tColor.ilk = #color) and (pDrawProps[#ink] <> 36)>
  [ 48] jmpifz [ 66] ............................ if (tColor.ilk = #color) and (pDrawProps[#ink] <> 36) then / else
  [ 51] getprop 382 ............................. <pDrawProps>
  [ 54] pushsymb 384 ............................ <#bgColor>
  [ 57] getparam 1 .............................. <tColor>
  [ 59] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, tColor>
  [ 61] objcall 142 ............................. pDrawProps[#bgColor] = tColor
  [ 63] jmp [ 90]
  [ 66] getprop 382 ............................. <pDrawProps>
  [ 69] pushsymb 384 ............................ <#bgColor>
  [ 72] pushint16 255 ........................... <255>
  [ 75] pushint16 255 ........................... <255>
  [ 78] pushint16 255 ........................... <255>
  [ 81] pusharglist 3 ........................... <255, 255, 255>
  [ 83] extcall 322 ............................. <rgb(255, 255, 255)>
  [ 86] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, rgb(255, 255, 255)>
  [ 88] objcall 142 ............................. pDrawProps[#bgColor] = rgb(255, 255, 255)
  [ 90] pushint8 1 .............................. <1>
  [ 92] pusharglistnoret 1 ...................... <1>
  [ 94] extcall 44 .............................. return 1
  [ 96] ret
end

on doHandWork me, tAct
  [  0] pushcons 5 .............................. <"lh">
  [  2] pushcons 6 .............................. <"ls">
  [  4] pushcons 24 ............................. <"li">
  [  6] pushcons 12 ............................. <"rh">
  [  8] pushcons 13 ............................. <"rs">
  [ 10] pushcons 23 ............................. <"ri">
  [ 12] pusharglist 6 ........................... <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 14] pushlist ................................ <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 15] getprop 380 ............................. <pPart>
  [ 18] pusharglist 2 ........................... <["lh", "ls", "li", "rh", "rs", "ri"], pPart>
  [ 20] objcall 70 .............................. <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart)>
  [ 22] pushzero ................................ <0>
  [ 23] nteq .................................... <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0>
  [ 24] jmpifz [ 32] ............................ if ["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0 then
  [ 27] getparam 1 .............................. <tAct>
  [ 29] setprop 390 ............................. pAction = tAct
  [ 32] ret
end

on doHandWorkLeft me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 391 ............................. pActionLh = tAct
  [  5] ret
end

on doHandWorkRight me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 392 ............................. pActionRh = tAct
  [  5] ret
end

on layDown me
  [  0] pushcons 18 ............................. <"lay">
  [  2] setprop 390 ............................. pAction = "lay"
  [  5] ret
end

on getCurrentMember me
  [  0] getprop 393 ............................. <pMemString>
  [  3] pusharglistnoret 1 ...................... <pMemString>
  [  5] extcall 44 .............................. return pMemString
  [  7] ret
end

on getColor me
  [  0] getprop 382 ............................. <pDrawProps>
  [  3] pushsymb 384 ............................ <#bgColor>
  [  6] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [  8] objcall 96 .............................. <pDrawProps[#bgColor]>
  [ 10] pusharglistnoret 1 ...................... <pDrawProps[#bgColor]>
  [ 12] extcall 44 .............................. return pDrawProps[#bgColor]
  [ 14] ret
end

on getDirection me
  [  0] getprop 389 ............................. <pDirection>
  [  3] pusharglistnoret 1 ...................... <pDirection>
  [  5] extcall 44 .............................. return pDirection
  [  7] ret
end

on getLocation me
  [  0] getprop 393 ............................. <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 71 .............................. <voidp(pMemString)>
  [  7] jmpifz [ 15] ............................ if voidp(pMemString) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 44 .............................. return 0
  [ 15] getprop 393 ............................. <pMemString>
  [ 18] pusharglist 1 ........................... <pMemString>
  [ 20] extcall 127 ............................. <memberExists(pMemString)>
  [ 22] not ..................................... <not memberExists(pMemString)>
  [ 23] jmpifz [ 31] ............................ if not memberExists(pMemString) then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 44 .............................. return 0
  [ 31] getprop 393 ............................. <pMemString>
  [ 34] pusharglist 1 ........................... <pMemString>
  [ 36] extcall 56 .............................. <getmemnum(pMemString)>
  [ 38] pusharglist 1 ........................... <getmemnum(pMemString)>
  [ 40] extcall 99 .............................. <member(getmemnum(pMemString))>
  [ 42] setlocal 0 .............................. tmember = member(getmemnum(pMemString))
  [ 44] getlocal 0 .............................. <tmember>
  [ 46] getobjprop 387 .......................... <tmember.rect>
  [ 49] setlocal 1 .............................. tImgRect = tmember.rect
  [ 51] getlocal 1 .............................. <tImgRect>
  [ 53] getobjprop 407 .......................... <tImgRect.width>
  [ 56] pushint8 2 .............................. <2>
  [ 58] div ..................................... <tImgRect.width / 2>
  [ 59] getlocal 1 .............................. <tImgRect>
  [ 61] getobjprop 413 .......................... <tImgRect.height>
  [ 64] pushint8 2 .............................. <2>
  [ 66] div ..................................... <tImgRect.height / 2>
  [ 67] pusharglist 2 ........................... <tImgRect.width / 2, tImgRect.height / 2>
  [ 69] extcall 59 .............................. <point(tImgRect.width / 2, tImgRect.height / 2)>
  [ 71] setlocal 2 .............................. tCntrPoint = point(tImgRect.width / 2, tImgRect.height / 2)
  [ 73] getlocal 0 .............................. <tmember>
  [ 75] getobjprop 411 .......................... <tmember.regPoint>
  [ 78] setlocal 3 .............................. tRegPoint = tmember.regPoint
  [ 80] getlocal 3 .............................. <tRegPoint>
  [ 82] inv ..................................... <-tRegPoint>
  [ 83] getlocal 2 .............................. <tCntrPoint>
  [ 85] add ..................................... <-tRegPoint + tCntrPoint>
  [ 86] pusharglistnoret 1 ...................... <-tRegPoint + tCntrPoint>
  [ 88] extcall 44 .............................. return -tRegPoint + tCntrPoint
  [ 90] ret
end

on copyPicture me, tImg, tdir, tHumanSize, tAction, tAnimFrame
  [  0] getparam 2 .............................. <tdir>
  [  2] pusharglist 1 ........................... <tdir>
  [  4] extcall 71 .............................. <voidp(tdir)>
  [  6] jmpifz [ 13] ............................ if voidp(tdir) then
  [  9] pushcons 28 ............................. <"2">
  [ 11] setparam 2 .............................. tdir = "2"
  [ 13] getparam 3 .............................. <tHumanSize>
  [ 15] pusharglist 1 ........................... <tHumanSize>
  [ 17] extcall 71 .............................. <voidp(tHumanSize)>
  [ 19] jmpifz [ 26] ............................ if voidp(tHumanSize) then
  [ 22] pushcons 29 ............................. <"h">
  [ 24] setparam 3 .............................. tHumanSize = "h"
  [ 26] getparam 4 .............................. <tAction>
  [ 28] pusharglist 1 ........................... <tAction>
  [ 30] extcall 71 .............................. <voidp(tAction)>
  [ 32] jmpifz [ 39] ............................ if voidp(tAction) then
  [ 35] pushcons 26 ............................. <"std">
  [ 37] setparam 4 .............................. tAction = "std"
  [ 39] getparam 5 .............................. <tAnimFrame>
  [ 41] pusharglist 1 ........................... <tAnimFrame>
  [ 43] extcall 71 .............................. <voidp(tAnimFrame)>
  [ 45] jmpifz [ 52] ............................ if voidp(tAnimFrame) then
  [ 48] pushcons 30 ............................. <"0">
  [ 50] setparam 5 .............................. tAnimFrame = "0"
  [ 52] getparam 3 .............................. <tHumanSize>
  [ 54] pushcons 25 ............................. <"_">
  [ 56] joinstr ................................. <tHumanSize & "_">
  [ 57] getparam 4 .............................. <tAction>
  [ 59] joinstr ................................. <tHumanSize & "_" & tAction>
  [ 60] pushcons 25 ............................. <"_">
  [ 62] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [ 63] getprop 380 ............................. <pPart>
  [ 66] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [ 67] pushcons 25 ............................. <"_">
  [ 69] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [ 70] getprop 381 ............................. <pmodel>
  [ 73] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel>
  [ 74] pushcons 25 ............................. <"_">
  [ 76] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_">
  [ 77] getparam 2 .............................. <tdir>
  [ 79] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir>
  [ 80] pushcons 25 ............................. <"_">
  [ 82] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [ 83] getparam 5 .............................. <tAnimFrame>
  [ 85] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame>
  [ 86] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame
  [ 88] getlocal 0 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 127 ............................. <memberExists(tMemName)>
  [ 94] jmpifz [245] ............................ if memberExists(tMemName) then
  [ 97] getlocal 0 .............................. <tMemName>
  [ 99] pusharglist 1 ........................... <tMemName>
  [101] extcall 56 .............................. <getmemnum(tMemName)>
  [103] pusharglist 1 ........................... <getmemnum(tMemName)>
  [105] extcall 99 .............................. <member(getmemnum(tMemName))>
  [107] setlocal 1 .............................. tmember = member(getmemnum(tMemName))
  [109] getlocal 1 .............................. <tmember>
  [111] getobjprop 129 .......................... <tmember.image>
  [113] setlocal 2 .............................. tImage = tmember.image
  [115] getlocal 1 .............................. <tmember>
  [117] getobjprop 411 .......................... <tmember.regPoint>
  [120] setlocal 3 .............................. tRegPnt = tmember.regPoint
  [122] getlocal 3 .............................. <tRegPnt>
  [124] pushint8 1 .............................. <1>
  [126] pusharglist 2 ........................... <tRegPnt, 1>
  [128] objcall 96 .............................. <tRegPnt[1]>
  [130] inv ..................................... <-tRegPnt[1]>
  [131] setlocal 4 .............................. tX = -tRegPnt[1]
  [133] getparam 1 .............................. <tImg>
  [135] getchainedprop 387 ...................... <tImg.rect>
  [138] getobjprop 413 .......................... <tImg.rect.height>
  [141] getlocal 3 .............................. <tRegPnt>
  [143] pushint8 2 .............................. <2>
  [145] pusharglist 2 ........................... <tRegPnt, 2>
  [147] objcall 96 .............................. <tRegPnt[2]>
  [149] sub ..................................... <tImg.rect.height - tRegPnt[2]>
  [150] pushint8 10 ............................. <10>
  [152] sub ..................................... <tImg.rect.height - tRegPnt[2] - 10>
  [153] setlocal 5 .............................. tY = tImg.rect.height - tRegPnt[2] - 10
  [155] getlocal 4 .............................. <tX>
  [157] getlocal 5 .............................. <tY>
  [159] getlocal 4 .............................. <tX>
  [161] getlocal 2 .............................. <tImage>
  [163] getobjprop 407 .......................... <tImage.width>
  [166] add ..................................... <tX + tImage.width>
  [167] getlocal 5 .............................. <tY>
  [169] getlocal 2 .............................. <tImage>
  [171] getobjprop 413 .......................... <tImage.height>
  [174] add ..................................... <tY + tImage.height>
  [175] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [177] extcall 387 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [180] setlocal 6 .............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [182] getlocal 2 .............................. <tImage>
  [184] pusharglist 1 ........................... <tImage>
  [186] objcall 415 ............................. <tImage.createMatte()>
  [189] setlocal 7 .............................. tMatte = tImage.createMatte()
  [191] getparam 1 .............................. <tImg>
  [193] getlocal 2 .............................. <tImage>
  [195] getlocal 6 .............................. <tRect>
  [197] getlocal 2 .............................. <tImage>
  [199] getobjprop 387 .......................... <tImage.rect>
  [202] pushsymb 383 ............................ <#maskImage>
  [205] getlocal 7 .............................. <tMatte>
  [207] pushsymb 58 ............................. <#ink>
  [209] getprop 382 ............................. <pDrawProps>
  [212] pushsymb 58 ............................. <#ink>
  [214] pusharglist 2 ........................... <pDrawProps, #ink>
  [216] objcall 96 .............................. <pDrawProps[#ink]>
  [218] pushsymb 384 ............................ <#bgColor>
  [221] getprop 382 ............................. <pDrawProps>
  [224] pushsymb 384 ............................ <#bgColor>
  [227] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [229] objcall 96 .............................. <pDrawProps[#bgColor]>
  [231] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [233] pushproplist ............................ <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [234] pusharglistnoret 5 ...................... <tImg, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [236] objcall 416 ............................. tImg.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]])
  [239] pushint8 1 .............................. <1>
  [241] pusharglistnoret 1 ...................... <1>
  [243] extcall 44 .............................. return 1
  [245] pushzero ................................ <0>
  [246] pusharglistnoret 1 ...................... <0>
  [248] extcall 44 .............................. return 0
  [250] ret
end

on reset me
  [  0] pushcons 26 ............................. <"std">
  [  2] setprop 390 ............................. pAction = "std"
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 30 .............................. <VOID>
  [  9] setprop 391 ............................. pActionLh = VOID
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 30 .............................. <VOID>
  [ 16] setprop 392 ............................. pActionRh = VOID
  [ 19] ret
end

on setAnimation me, tPart, tAnim
  [  0] getparam 1 .............................. <tPart>
  [  2] getprop 380 ............................. <pPart>
  [  5] nteq .................................... <tPart <> pPart>
  [  6] jmpifz [ 13] ............................ if tPart <> pPart then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 44 .............................. return 
  [ 13] getparam 2 .............................. <tAnim>
  [ 15] pusharglist 1 ........................... <tAnim>
  [ 17] extcall 301 ............................. <value(tAnim)>
  [ 20] setprop 396 ............................. pAnimation = value(tAnim)
  [ 23] getprop 396 ............................. <pAnimation>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pAnimation, 1>
  [ 30] objcall 96 .............................. <pAnimation[1]>
  [ 32] getobjprop 78 ........................... <pAnimation[1].count>
  [ 34] setprop 398 ............................. pTotalFrame = pAnimation[1].count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setprop 397 ............................. pAnimFrame = 1
  [ 42] ret
end

on remAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 396 ............................. pAnimation = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 397 ............................. pAnimFrame = 1
  [  9] pushint8 1 .............................. <1>
  [ 11] setprop 398 ............................. pTotalFrame = 1
  [ 14] ret
end

on animate me
  [  0] getprop 396 ............................. <pAnimation>
  [  3] not ..................................... <not pAnimation>
  [  4] jmpifz [ 13] ............................ if not pAnimation then
  [  7] pushcons 0 .............................. <EMPTY>
  [  9] pusharglistnoret 1 ...................... <EMPTY>
  [ 11] extcall 44 .............................. return EMPTY
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 401 ............................ <#pFlipList>
  [ 18] getprop 389 ............................. <pDirection>
  [ 21] pushint8 1 .............................. <1>
  [ 23] add ..................................... <pDirection + 1>
  [ 24] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 26] objcall 104 ............................. <me.pFlipList[pDirection + 1]>
  [ 28] getprop 396 ............................. <pAnimation>
  [ 31] pushsymb 439 ............................ <#OffD>
  [ 34] pusharglist 2 ........................... <pAnimation, #OffD>
  [ 36] objcall 96 .............................. <pAnimation[#OffD]>
  [ 38] getprop 397 ............................. <pAnimFrame>
  [ 41] pusharglist 2 ........................... <pAnimation[#OffD], pAnimFrame>
  [ 43] objcall 96 .............................. <pAnimation[#OffD][pAnimFrame]>
  [ 45] add ..................................... <me.pFlipList[pDirection + 1] + pAnimation[#OffD][pAnimFrame]>
  [ 46] setlocal 0 .............................. tdir = me.pFlipList[pDirection + 1] + pAnimation[#OffD][pAnimFrame]
  [ 48] getprop 396 ............................. <pAnimation>
  [ 51] pushsymb 440 ............................ <#OffX>
  [ 54] pusharglist 2 ........................... <pAnimation, #OffX>
  [ 56] objcall 96 .............................. <pAnimation[#OffX]>
  [ 58] getprop 397 ............................. <pAnimFrame>
  [ 61] pusharglist 2 ........................... <pAnimation[#OffX], pAnimFrame>
  [ 63] objcall 96 .............................. <pAnimation[#OffX][pAnimFrame]>
  [ 65] setprop 394 ............................. pXFix = pAnimation[#OffX][pAnimFrame]
  [ 68] getprop 396 ............................. <pAnimation>
  [ 71] pushsymb 441 ............................ <#OffY>
  [ 74] pusharglist 2 ........................... <pAnimation, #OffY>
  [ 76] objcall 96 .............................. <pAnimation[#OffY]>
  [ 78] getprop 397 ............................. <pAnimFrame>
  [ 81] pusharglist 2 ........................... <pAnimation[#OffY], pAnimFrame>
  [ 83] objcall 96 .............................. <pAnimation[#OffY][pAnimFrame]>
  [ 85] setprop 395 ............................. pYFix = pAnimation[#OffY][pAnimFrame]
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 410 .......................... <me.pPeopleSize>
  [ 93] pushcons 25 ............................. <"_">
  [ 95] joinstr ................................. <me.pPeopleSize & "_">
  [ 96] getprop 396 ............................. <pAnimation>
  [ 99] pushsymb 442 ............................ <#act>
  [102] pusharglist 2 ........................... <pAnimation, #act>
  [104] objcall 96 .............................. <pAnimation[#act]>
  [106] getprop 397 ............................. <pAnimFrame>
  [109] pusharglist 2 ........................... <pAnimation[#act], pAnimFrame>
  [111] objcall 96 .............................. <pAnimation[#act][pAnimFrame]>
  [113] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame]>
  [114] pushcons 25 ............................. <"_">
  [116] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_">
  [117] getprop 380 ............................. <pPart>
  [120] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart>
  [121] pushcons 25 ............................. <"_">
  [123] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_">
  [124] getprop 381 ............................. <pmodel>
  [127] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel>
  [128] pushcons 25 ............................. <"_">
  [130] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_">
  [131] getlocal 0 .............................. <tdir>
  [133] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir>
  [134] pushcons 25 ............................. <"_">
  [136] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [137] getprop 396 ............................. <pAnimation>
  [140] pushsymb 443 ............................ <#frm>
  [143] pusharglist 2 ........................... <pAnimation, #frm>
  [145] objcall 96 .............................. <pAnimation[#frm]>
  [147] getprop 397 ............................. <pAnimFrame>
  [150] pusharglist 2 ........................... <pAnimation[#frm], pAnimFrame>
  [152] objcall 96 .............................. <pAnimation[#frm][pAnimFrame]>
  [154] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]>
  [155] setlocal 1 .............................. tMemName = me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]
  [157] getprop 397 ............................. <pAnimFrame>
  [160] pushint8 1 .............................. <1>
  [162] add ..................................... <pAnimFrame + 1>
  [163] setprop 397 ............................. pAnimFrame = pAnimFrame + 1
  [166] getprop 397 ............................. <pAnimFrame>
  [169] getprop 398 ............................. <pTotalFrame>
  [172] gt ...................................... <pAnimFrame > pTotalFrame>
  [173] jmpifz [181] ............................ if pAnimFrame > pTotalFrame then
  [176] pushint8 1 .............................. <1>
  [178] setprop 397 ............................. pAnimFrame = 1
  [181] getlocal 1 .............................. <tMemName>
  [183] pusharglistnoret 1 ...................... <tMemName>
  [185] extcall 44 .............................. return tMemName
  [187] ret
end
