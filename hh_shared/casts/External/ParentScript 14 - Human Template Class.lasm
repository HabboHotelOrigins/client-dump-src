property pName, pClass, pSex, pCanvasName, pBuffer, pMember, pShadowFix, pDefShadowMem, pPartList, pPartIndex, pFlipList, pUpdateRect, pDirection, pLastDir, pLocFix, pAnimCounter, pEyesClosed, pSync, pChanges, pAlphaColor, pCanvasSize, pColors, pPeopleSize, pMainAction, pMoving, pTalking, pCarrying, pSleeping, pDancing, pWaving, pTrading, pCurrentAnim, pValid

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 546 ............................. pPartList = []
  [  6] pusharglist 0 ........................... <[:]>
  [  8] pushproplist ............................ <[:]>
  [  9] setprop 547 ............................. pPartIndex = [:]
  [ 12] pushzero ................................ <0>
  [ 13] pushint8 1 .............................. <1>
  [ 15] pushint8 2 .............................. <2>
  [ 17] pushint8 3 .............................. <3>
  [ 19] pushint8 2 .............................. <2>
  [ 21] pushint8 1 .............................. <1>
  [ 23] pushzero ................................ <0>
  [ 24] pushint8 7 .............................. <7>
  [ 26] pusharglist 8 ........................... <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 28] pushlist ................................ <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 29] setprop 401 ............................. pFlipList = [0, 1, 2, 3, 2, 1, 0, 7]
  [ 32] pushzero ................................ <0>
  [ 33] pushzero ................................ <0>
  [ 34] pushzero ................................ <0>
  [ 35] pushzero ................................ <0>
  [ 36] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 38] extcall 387 ............................. <rect(0, 0, 0, 0)>
  [ 41] setprop 409 ............................. pUpdateRect = rect(0, 0, 0, 0)
  [ 44] pushzero ................................ <0>
  [ 45] pushzero ................................ <0>
  [ 46] pusharglist 2 ........................... <0, 0>
  [ 48] extcall 59 .............................. <point(0, 0)>
  [ 50] setprop 414 ............................. pLocFix = point(0, 0)
  [ 53] pushzero ................................ <0>
  [ 54] setprop 403 ............................. pAnimCounter = 0
  [ 57] pushzero ................................ <0>
  [ 58] setprop 548 ............................. pEyesClosed = 0
  [ 61] pushint8 1 .............................. <1>
  [ 63] setprop 549 ............................. pSync = 1
  [ 66] pushint8 1 .............................. <1>
  [ 68] setprop 550 ............................. pChanges = 1
  [ 71] pushcons 0 .............................. <"std">
  [ 73] setprop 551 ............................. pMainAction = "std"
  [ 76] pushzero ................................ <0>
  [ 77] setprop 552 ............................. pMoving = 0
  [ 80] pushzero ................................ <0>
  [ 81] setprop 405 ............................. pTalking = 0
  [ 84] pushzero ................................ <0>
  [ 85] setprop 406 ............................. pCarrying = 0
  [ 88] pushzero ................................ <0>
  [ 89] setprop 553 ............................. pSleeping = 0
  [ 92] pushzero ................................ <0>
  [ 93] setprop 554 ............................. pDancing = 0
  [ 96] pushzero ................................ <0>
  [ 97] setprop 555 ............................. pWaving = 0
  [100] pushcons 1 .............................. <EMPTY>
  [102] setprop 556 ............................. pCurrentAnim = EMPTY
  [105] pushint16 255 ........................... <255>
  [108] pushint16 255 ........................... <255>
  [111] pushint16 255 ........................... <255>
  [114] pusharglist 3 ........................... <255, 255, 255>
  [116] extcall 322 ............................. <rgb(255, 255, 255)>
  [119] setprop 557 ............................. pAlphaColor = rgb(255, 255, 255)
  [122] pushint8 1 .............................. <1>
  [124] setprop 549 ............................. pSync = 1
  [127] pusharglist 0 ........................... <[:]>
  [129] pushproplist ............................ <[:]>
  [130] setprop 558 ............................. pColors = [:]
  [133] pushzero ................................ <0>
  [134] pusharglist 1 ........................... <0>
  [136] extcall 99 .............................. <member(0)>
  [138] setprop 559 ............................. pDefShadowMem = member(0)
  [141] pushint8 1 .............................. <1>
  [143] pusharglistnoret 1 ...................... <1>
  [145] extcall 44 .............................. return 1
  [147] ret
end

on deconstruct me
  [  0] pushzero ................................ <0>
  [  1] setprop 560 ............................. pValid = 0
  [  4] pusharglist 0 ........................... <[]>
  [  6] pushlist ................................ <[]>
  [  7] setprop 546 ............................. pPartList = []
  [ 10] getprop 561 ............................. <pCanvasName>
  [ 13] pusharglist 1 ........................... <pCanvasName>
  [ 15] extcall 127 ............................. <memberExists(pCanvasName)>
  [ 17] getprop 561 ............................. <pCanvasName>
  [ 20] pusharglist 0 ........................... <>
  [ 22] extcall 30 .............................. <VOID>
  [ 24] nteq .................................... <pCanvasName <> VOID>
  [ 25] and ..................................... <memberExists(pCanvasName) and (pCanvasName <> VOID)>
  [ 26] jmpifz [ 37] ............................ if memberExists(pCanvasName) and (pCanvasName <> VOID) then
  [ 29] getprop 561 ............................. <pCanvasName>
  [ 32] pusharglistnoret 1 ...................... <pCanvasName>
  [ 34] extcall 475 ............................. removeMember(pCanvasName)
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglistnoret 1 ...................... <1>
  [ 41] extcall 44 .............................. return 1
  [ 43] ret
end

on define me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 560 ............................. pValid = 1
  [  5] pushcons 2 .............................. <"template">
  [  7] setprop 562 ............................. pName = "template"
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 564 ............................ <#class>
  [ 15] pusharglist 2 ........................... <tdata, #class>
  [ 17] objcall 96 .............................. <tdata[#class]>
  [ 19] setprop 563 ............................. pClass = tdata[#class]
  [ 22] getparam 1 .............................. <tdata>
  [ 24] pushsymb 499 ............................ <#direction>
  [ 27] pusharglist 2 ........................... <tdata, #direction>
  [ 29] objcall 96 .............................. <tdata[#direction]>
  [ 31] pushint8 1 .............................. <1>
  [ 33] pusharglist 2 ........................... <tdata[#direction], 1>
  [ 35] objcall 96 .............................. <tdata[#direction][1]>
  [ 37] setprop 389 ............................. pDirection = tdata[#direction][1]
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 389 .......................... <me.pDirection>
  [ 45] setprop 565 ............................. pLastDir = me.pDirection
  [ 48] getparam 0 .............................. <me>
  [ 50] pushcons 3 .............................. <"human.size.">
  [ 52] getparam 1 .............................. <tdata>
  [ 54] pushsymb 140 ............................ <#type>
  [ 56] pusharglist 2 ........................... <tdata, #type>
  [ 58] objcall 96 .............................. <tdata[#type]>
  [ 60] joinstr ................................. <"human.size." & tdata[#type]>
  [ 61] pusharglist 1 ........................... <"human.size." & tdata[#type]>
  [ 63] extcall 149 ............................. <getVariable("human.size." & tdata[#type])>
  [ 65] setobjprop 410 .......................... me.pPeopleSize = getVariable("human.size." & tdata[#type])
  [ 68] getparam 0 .............................. <me>
  [ 70] getobjprop 410 .......................... <me.pPeopleSize>
  [ 73] not ..................................... <not me.pPeopleSize>
  [ 74] jmpifz [ 95] ............................ if not me.pPeopleSize then
  [ 77] getparam 0 .............................. <me>
  [ 79] pushcons 4 .............................. <"People size not found, using default!">
  [ 81] pushsymb 356 ............................ <#define>
  [ 84] pusharglistnoret 3 ...................... <me, "People size not found, using default!", #define>
  [ 86] extcall 106 ............................. error(me, "People size not found, using default!", #define)
  [ 88] getparam 0 .............................. <me>
  [ 90] pushcons 5 .............................. <"h">
  [ 92] setobjprop 410 .......................... me.pPeopleSize = "h"
  [ 95] getparam 0 .............................. <me>
  [ 97] pushcons 6 .............................. <"human.canvas.">
  [ 99] getparam 0 .............................. <me>
  [101] getobjprop 410 .......................... <me.pPeopleSize>
  [104] joinstr ................................. <"human.canvas." & me.pPeopleSize>
  [105] pusharglist 1 ........................... <"human.canvas." & me.pPeopleSize>
  [107] extcall 149 ............................. <getVariable("human.canvas." & me.pPeopleSize)>
  [109] pusharglist 1 ........................... <getVariable("human.canvas." & me.pPeopleSize)>
  [111] extcall 301 ............................. <value(getVariable("human.canvas." & me.pPeopleSize))>
  [114] setobjprop 566 .......................... me.pCanvasSize = value(getVariable("human.canvas." & me.pPeopleSize))
  [117] getparam 0 .............................. <me>
  [119] getobjprop 566 .......................... <me.pCanvasSize>
  [122] not ..................................... <not me.pCanvasSize>
  [123] jmpifz [175] ............................ if not me.pCanvasSize then
  [126] getparam 0 .............................. <me>
  [128] pushcons 7 .............................. <"Canvas size not found, using default!">
  [130] pushsymb 356 ............................ <#define>
  [133] pusharglistnoret 3 ...................... <me, "Canvas size not found, using default!", #define>
  [135] extcall 106 ............................. error(me, "Canvas size not found, using default!", #define)
  [137] getparam 0 .............................. <me>
  [139] pushsymb 567 ............................ <#std>
  [142] pushint8 64 ............................. <64>
  [144] pushint8 102 ............................ <102>
  [146] pushint8 32 ............................. <32>
  [148] pushint8 10 ............................. <10>
  [150] inv ..................................... <-10>
  [151] pusharglist 4 ........................... <[64, 102, 32, -10]>
  [153] pushlist ................................ <[64, 102, 32, -10]>
  [154] pushsymb 568 ............................ <#lay>
  [157] pushint8 89 ............................. <89>
  [159] pushint8 102 ............................ <102>
  [161] pushint8 32 ............................. <32>
  [163] pushint8 8 .............................. <8>
  [165] inv ..................................... <-8>
  [166] pusharglist 4 ........................... <[89, 102, 32, -8]>
  [168] pushlist ................................ <[89, 102, 32, -8]>
  [169] pusharglist 4 ........................... <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [171] pushproplist ............................ <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [172] setobjprop 566 .......................... me.pCanvasSize = [#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]
  [175] getparam 0 .............................. <me>
  [177] getobjprop 563 .......................... <me.pClass>
  [180] getparam 0 .............................. <me>
  [182] getobjprop 562 .......................... <me.pName>
  [185] joinpadstr .............................. <me.pClass && me.pName>
  [186] getparam 0 .............................. <me>
  [188] pusharglist 1 ........................... <me>
  [190] objcall 42 .............................. <me.getID()>
  [192] joinpadstr .............................. <me.pClass && me.pName && me.getID()>
  [193] pushcons 8 .............................. <"Canvas">
  [195] joinpadstr .............................. <me.pClass && me.pName && me.getID() && "Canvas">
  [196] setprop 561 ............................. pCanvasName = me.pClass && me.pName && me.getID() && "Canvas"
  [199] getprop 561 ............................. <pCanvasName>
  [202] pusharglist 1 ........................... <pCanvasName>
  [204] extcall 127 ............................. <memberExists(pCanvasName)>
  [206] not ..................................... <not memberExists(pCanvasName)>
  [207] jmpifz [220] ............................ if not memberExists(pCanvasName) then
  [210] getprop 561 ............................. <pCanvasName>
  [213] pushsymb 141 ............................ <#bitmap>
  [215] pusharglistnoret 2 ...................... <pCanvasName, #bitmap>
  [217] extcall 569 ............................. createMember(pCanvasName, #bitmap)
  [220] getprop 566 ............................. <pCanvasSize>
  [223] pushsymb 567 ............................ <#std>
  [226] pusharglist 2 ........................... <pCanvasSize, #std>
  [228] objcall 96 .............................. <pCanvasSize[#std]>
  [230] setlocal 0 .............................. tSize = pCanvasSize[#std]
  [232] getprop 561 ............................. <pCanvasName>
  [235] pusharglist 1 ........................... <pCanvasName>
  [237] extcall 56 .............................. <getmemnum(pCanvasName)>
  [239] pusharglist 1 ........................... <getmemnum(pCanvasName)>
  [241] extcall 99 .............................. <member(getmemnum(pCanvasName))>
  [243] setprop 570 ............................. pMember = member(getmemnum(pCanvasName))
  [246] getprop 570 ............................. <pMember>
  [249] getlocal 0 .............................. <tSize>
  [251] pushint8 1 .............................. <1>
  [253] pusharglist 2 ........................... <tSize, 1>
  [255] objcall 96 .............................. <tSize[1]>
  [257] getlocal 0 .............................. <tSize>
  [259] pushint8 2 .............................. <2>
  [261] pusharglist 2 ........................... <tSize, 2>
  [263] objcall 96 .............................. <tSize[2]>
  [265] getlocal 0 .............................. <tSize>
  [267] pushint8 3 .............................. <3>
  [269] pusharglist 2 ........................... <tSize, 3>
  [271] objcall 96 .............................. <tSize[3]>
  [273] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [275] extcall 129 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [277] setobjprop 129 .......................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [279] getprop 570 ............................. <pMember>
  [282] pushzero ................................ <0>
  [283] getprop 570 ............................. <pMember>
  [286] getchainedprop 129 ...................... <pMember.image>
  [288] getobjprop 413 .......................... <pMember.image.height>
  [291] getlocal 0 .............................. <tSize>
  [293] pushint8 4 .............................. <4>
  [295] pusharglist 2 ........................... <tSize, 4>
  [297] objcall 96 .............................. <tSize[4]>
  [299] add ..................................... <pMember.image.height + tSize[4]>
  [300] pusharglist 2 ........................... <0, pMember.image.height + tSize[4]>
  [302] extcall 59 .............................. <point(0, pMember.image.height + tSize[4])>
  [304] setobjprop 411 .......................... pMember.regPoint = point(0, pMember.image.height + tSize[4])
  [307] getprop 570 ............................. <pMember>
  [310] getobjprop 129 .......................... <pMember.image>
  [312] setprop 412 ............................. pBuffer = pMember.image
  [315] getparam 1 .............................. <tdata>
  [317] pushsymb 571 ............................ <#parts>
  [320] pusharglist 2 ........................... <tdata, #parts>
  [322] objcall 96 .............................. <tdata[#parts]>
  [324] setlocal 1 .............................. tPartSymbols = tdata[#parts]
  [326] getparam 0 .............................. <me>
  [328] getparam 1 .............................. <tdata>
  [330] pushsymb 498 ............................ <#figure>
  [333] pusharglist 2 ........................... <tdata, #figure>
  [335] objcall 96 .............................. <tdata[#figure]>
  [337] pusharglist 2 ........................... <me, tdata[#figure]>
  [339] objcall 531 ............................. <me.setPartLists(tdata[#figure])>
  [342] not ..................................... <not me.setPartLists(tdata[#figure])>
  [343] jmpifz [361] ............................ if not me.setPartLists(tdata[#figure]) then
  [346] getparam 0 .............................. <me>
  [348] pushcons 9 .............................. <"Couldn't create part lists!">
  [350] pushsymb 356 ............................ <#define>
  [353] pusharglist 3 ........................... <me, "Couldn't create part lists!", #define>
  [355] extcall 106 ............................. <error(me, "Couldn't create part lists!", #define)>
  [357] pusharglistnoret 1 ...................... <error(me, "Couldn't create part lists!", #define)>
  [359] extcall 44 .............................. return error(me, "Couldn't create part lists!", #define)
  [361] getparam 0 .............................. <me>
  [363] pusharglistnoret 1 ...................... <me>
  [365] objcall 532 ............................. me.arrangeParts()
  [368] getparam 0 .............................. <me>
  [370] pusharglistnoret 1 ...................... <me>
  [372] objcall 520 ............................. me.simulateUpdate()
  [375] getprop 570 ............................. <pMember>
  [378] pusharglistnoret 1 ...................... <pMember>
  [380] extcall 44 .............................. return pMember
  [382] ret
end

on resetTemplateHuman me
  [  0] pushzero ................................ <0>
  [  1] setprop 552 ............................. pMoving = 0
  [  4] pushzero ................................ <0>
  [  5] setprop 554 ............................. pDancing = 0
  [  8] pushzero ................................ <0>
  [  9] setprop 405 ............................. pTalking = 0
  [ 12] pushzero ................................ <0>
  [ 13] setprop 406 ............................. pCarrying = 0
  [ 16] pushzero ................................ <0>
  [ 17] setprop 555 ............................. pWaving = 0
  [ 20] pushzero ................................ <0>
  [ 21] setprop 573 ............................. pTrading = 0
  [ 24] pushzero ................................ <0>
  [ 25] setlocal 0 .............................. pAnimating = 0
  [ 27] pushsymb 375 ............................ <#reset>
  [ 30] getprop 546 ............................. <pPartList>
  [ 33] pusharglistnoret 2 ...................... <#reset, pPartList>
  [ 35] extcall 503 ............................. call(#reset, pPartList)
  [ 38] pushcons 0 .............................. <"std">
  [ 40] setprop 551 ............................. pMainAction = "std"
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglistnoret 1 ...................... <me>
  [ 47] objcall 532 ............................. me.arrangeParts()
  [ 50] pushint8 1 .............................. <1>
  [ 52] setprop 550 ............................. pChanges = 1
  [ 55] ret
end

on simulateUpdate me
  [  0] getprop 560 ............................. <pValid>
  [  3] jmpifz [ 53] ............................ if pValid then
  [  6] getprop 549 ............................. <pSync>
  [  9] not ..................................... <not pSync>
  [ 10] setprop 549 ............................. pSync = not pSync
  [ 13] getprop 549 ............................. <pSync>
  [ 16] jmpifz [ 29] ............................ if pSync then / else
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglistnoret 1 ...................... <me>
  [ 23] objcall 529 ............................. me.prepare()
  [ 26] jmp [ 36]
  [ 29] getparam 0 .............................. <me>
  [ 31] pusharglistnoret 1 ...................... <me>
  [ 33] objcall 357 ............................. me.render()
  [ 36] getparam 0 .............................. <me>
  [ 38] pushint16 1000 .......................... <1000>
  [ 41] getmovieprop 574 ........................ <the frameTempo>
  [ 44] div ..................................... <1000 / the frameTempo>
  [ 45] pushsymb 520 ............................ <#simulateUpdate>
  [ 48] pusharglistnoret 3 ...................... <me, 1000 / the frameTempo, #simulateUpdate>
  [ 50] objcall 575 ............................. me.delay(1000 / the frameTempo, #simulateUpdate)
  [ 53] ret
end

on Refresh me, tX, tY, tH, tDirHead, tDirBody
  [  0] pushzero ................................ <0>
  [  1] setprop 552 ............................. pMoving = 0
  [  4] pushzero ................................ <0>
  [  5] setprop 554 ............................. pDancing = 0
  [  8] pushzero ................................ <0>
  [  9] setprop 405 ............................. pTalking = 0
  [ 12] pushzero ................................ <0>
  [ 13] setprop 406 ............................. pCarrying = 0
  [ 16] pushzero ................................ <0>
  [ 17] setprop 555 ............................. pWaving = 0
  [ 20] pushzero ................................ <0>
  [ 21] setprop 573 ............................. pTrading = 0
  [ 24] pushzero ................................ <0>
  [ 25] setlocal 0 .............................. pCtrlType = 0
  [ 27] pushzero ................................ <0>
  [ 28] setlocal 1 .............................. pModState = 0
  [ 30] pushint8 1 .............................. <1>
  [ 32] inv ..................................... <-1>
  [ 33] pushint8 2 .............................. <2>
  [ 35] pusharglist 2 ........................... <-1, 2>
  [ 37] extcall 59 .............................. <point(-1, 2)>
  [ 39] setprop 414 ............................. pLocFix = point(-1, 2)
  [ 42] pushsymb 375 ............................ <#reset>
  [ 45] getprop 546 ............................. <pPartList>
  [ 48] pusharglistnoret 2 ...................... <#reset, pPartList>
  [ 50] extcall 503 ............................. call(#reset, pPartList)
  [ 53] pushcons 0 .............................. <"std">
  [ 55] setprop 551 ............................. pMainAction = "std"
  [ 58] getparam 1 .............................. <tX>
  [ 60] setlocal 2 .............................. pLocX = tX
  [ 62] getparam 2 .............................. <tY>
  [ 64] setlocal 3 .............................. pLocY = tY
  [ 66] getparam 3 .............................. <tH>
  [ 68] setlocal 4 .............................. pLocH = tH
  [ 70] pushfloat32 0.0 ......................... <0.0>
  [ 75] setlocal 5 .............................. pRestingHeight = 0.0
  [ 77] pushsymb 359 ............................ <#defineDir>
  [ 80] getprop 546 ............................. <pPartList>
  [ 83] getparam 5 .............................. <tDirBody>
  [ 85] pusharglistnoret 3 ...................... <#defineDir, pPartList, tDirBody>
  [ 87] extcall 503 ............................. call(#defineDir, pPartList, tDirBody)
  [ 90] getprop 551 ............................. <pMainAction>
  [ 93] pushcons 10 ............................. <"lay">
  [ 95] nteq .................................... <pMainAction <> "lay">
  [ 96] jmpifz [123] ............................ if pMainAction <> "lay" then
  [ 99] pushsymb 360 ............................ <#defineDirMultiple>
  [102] getprop 546 ............................. <pPartList>
  [105] getparam 4 .............................. <tDirHead>
  [107] pushcons 11 ............................. <"hd">
  [109] pushcons 12 ............................. <"hr">
  [111] pushcons 13 ............................. <"ey">
  [113] pushcons 14 ............................. <"fc">
  [115] pusharglist 4 ........................... <["hd", "hr", "ey", "fc"]>
  [117] pushlist ................................ <["hd", "hr", "ey", "fc"]>
  [118] pusharglistnoret 4 ...................... <#defineDirMultiple, pPartList, tDirHead, ["hd", "hr", "ey", "fc"]>
  [120] extcall 503 ............................. call(#defineDirMultiple, pPartList, tDirHead, ["hd", "hr", "ey", "fc"])
  [123] getparam 5 .............................. <tDirBody>
  [125] setprop 389 ............................. pDirection = tDirBody
  [128] getparam 0 .............................. <me>
  [130] pusharglistnoret 1 ...................... <me>
  [132] objcall 532 ............................. me.arrangeParts()
  [135] pushint8 1 .............................. <1>
  [137] setprop 550 ............................. pChanges = 1
  [140] ret
end

on setPartModel me, tPart, tmodel
  [  0] getprop 547 ............................. <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 96 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 71 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 44 .............................. return VOID
  [ 24] getprop 546 ............................. <pPartList>
  [ 27] getprop 547 ............................. <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 96 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 96 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] getparam 2 .............................. <tmodel>
  [ 42] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tmodel>
  [ 44] objcall 364 ............................. pPartList[pPartIndex[tPart]].setModel(tmodel)
  [ 47] ret
end

on setPartColor me, tPart, tColor
  [  0] getprop 547 ............................. <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 96 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 71 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 44 .............................. return VOID
  [ 24] getprop 546 ............................. <pPartList>
  [ 27] getprop 547 ............................. <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 96 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 96 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] getparam 2 .............................. <tColor>
  [ 42] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tColor>
  [ 44] objcall 365 ............................. pPartList[pPartIndex[tPart]].setColor(tColor)
  [ 47] ret
end

on getPartMember me, tPart
  [  0] getprop 547 ............................. <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 96 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 71 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 44 .............................. return VOID
  [ 24] getprop 546 ............................. <pPartList>
  [ 27] getprop 547 ............................. <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 96 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 96 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 370 ............................. <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 45] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 47] extcall 44 .............................. return pPartList[pPartIndex[tPart]].getCurrentMember()
  [ 49] ret
end

on getPartColor me, tPart
  [  0] getprop 547 ............................. <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 96 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 71 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 44 .............................. return VOID
  [ 24] getprop 546 ............................. <pPartList>
  [ 27] getprop 547 ............................. <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 96 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 96 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 371 ............................. <pPartList[pPartIndex[tPart]].getColor()>
  [ 45] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getColor()>
  [ 47] extcall 44 .............................. return pPartList[pPartIndex[tPart]].getColor()
  [ 49] ret
end

on getPicture me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] pusharglist 1 ........................... <tImg>
  [  4] extcall 71 .............................. <voidp(tImg)>
  [  6] jmpifz [ 24] ............................ if voidp(tImg) then / else
  [  9] pushint8 64 ............................. <64>
  [ 11] pushint8 102 ............................ <102>
  [ 13] pushint8 16 ............................. <16>
  [ 15] pusharglist 3 ........................... <64, 102, 16>
  [ 17] extcall 129 ............................. <image(64, 102, 16)>
  [ 19] setlocal 0 .............................. tCanvas = image(64, 102, 16)
  [ 21] jmp [ 28]
  [ 24] getparam 1 .............................. <tImg>
  [ 26] setlocal 0 .............................. tCanvas = tImg
  [ 28] pushsymb 374 ............................ <#copyPicture>
  [ 31] getprop 546 ............................. <pPartList>
  [ 34] getlocal 0 .............................. <tCanvas>
  [ 36] pusharglistnoret 3 ...................... <#copyPicture, pPartList, tCanvas>
  [ 38] extcall 503 ............................. call(#copyPicture, pPartList, tCanvas)
  [ 41] getparam 0 .............................. <me>
  [ 43] getlocal 0 .............................. <tCanvas>
  [ 45] pusharglist 2 ........................... <me, tCanvas>
  [ 47] objcall 533 ............................. <me.flipImage(tCanvas)>
  [ 50] setlocal 0 .............................. tCanvas = me.flipImage(tCanvas)
  [ 52] getlocal 0 .............................. <tCanvas>
  [ 54] pusharglistnoret 1 ...................... <tCanvas>
  [ 56] extcall 44 .............................. return tCanvas
  [ 58] ret
end

on closeEyes me
  [  0] getprop 551 ............................. <pMainAction>
  [  3] pushcons 10 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] jmpifz [ 30] ............................ if pMainAction = "lay" then / else
  [  9] pushsymb 362 ............................ <#defineActMultiple>
  [ 12] getprop 546 ............................. <pPartList>
  [ 15] pushcons 15 ............................. <"ley">
  [ 17] pushcons 13 ............................. <"ey">
  [ 19] pusharglist 1 ........................... <["ey"]>
  [ 21] pushlist ................................ <["ey"]>
  [ 22] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "ley", ["ey"]>
  [ 24] extcall 503 ............................. call(#defineActMultiple, pPartList, "ley", ["ey"])
  [ 27] jmp [ 48]
  [ 30] pushsymb 362 ............................ <#defineActMultiple>
  [ 33] getprop 546 ............................. <pPartList>
  [ 36] pushcons 16 ............................. <"eyb">
  [ 38] pushcons 13 ............................. <"ey">
  [ 40] pusharglist 1 ........................... <["ey"]>
  [ 42] pushlist ................................ <["ey"]>
  [ 43] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "eyb", ["ey"]>
  [ 45] extcall 503 ............................. call(#defineActMultiple, pPartList, "eyb", ["ey"])
  [ 48] pushint8 1 .............................. <1>
  [ 50] setprop 548 ............................. pEyesClosed = 1
  [ 53] pushint8 1 .............................. <1>
  [ 55] setprop 550 ............................. pChanges = 1
  [ 58] ret
end

on openEyes me
  [  0] getprop 551 ............................. <pMainAction>
  [  3] pushcons 10 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] jmpifz [ 30] ............................ if pMainAction = "lay" then / else
  [  9] pushsymb 362 ............................ <#defineActMultiple>
  [ 12] getprop 546 ............................. <pPartList>
  [ 15] pushcons 10 ............................. <"lay">
  [ 17] pushcons 13 ............................. <"ey">
  [ 19] pusharglist 1 ........................... <["ey"]>
  [ 21] pushlist ................................ <["ey"]>
  [ 22] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "lay", ["ey"]>
  [ 24] extcall 503 ............................. call(#defineActMultiple, pPartList, "lay", ["ey"])
  [ 27] jmp [ 48]
  [ 30] pushsymb 362 ............................ <#defineActMultiple>
  [ 33] getprop 546 ............................. <pPartList>
  [ 36] pushcons 0 .............................. <"std">
  [ 38] pushcons 13 ............................. <"ey">
  [ 40] pusharglist 1 ........................... <["ey"]>
  [ 42] pushlist ................................ <["ey"]>
  [ 43] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "std", ["ey"]>
  [ 45] extcall 503 ............................. call(#defineActMultiple, pPartList, "std", ["ey"])
  [ 48] pushzero ................................ <0>
  [ 49] setprop 548 ............................. pEyesClosed = 0
  [ 52] pushint8 1 .............................. <1>
  [ 54] setprop 550 ............................. pChanges = 1
  [ 57] ret
end

on prepare me
  [  0] getprop 403 ............................. <pAnimCounter>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <pAnimCounter + 1>
  [  6] pushint8 4 .............................. <4>
  [  8] mod ..................................... <(pAnimCounter + 1) mod 4>
  [  9] setprop 403 ............................. pAnimCounter = (pAnimCounter + 1) mod 4
  [ 12] getprop 548 ............................. <pEyesClosed>
  [ 15] getprop 553 ............................. <pSleeping>
  [ 18] not ..................................... <not pSleeping>
  [ 19] and ..................................... <pEyesClosed and not pSleeping>
  [ 20] jmpifz [ 33] ............................ if pEyesClosed and not pSleeping then / else
  [ 23] getparam 0 .............................. <me>
  [ 25] pusharglistnoret 1 ...................... <me>
  [ 27] objcall 528 ............................. me.openEyes()
  [ 30] jmp [ 53]
  [ 33] pushint8 30 ............................. <30>
  [ 35] pusharglist 1 ........................... <30>
  [ 37] extcall 586 ............................. <random(30)>
  [ 40] pushint8 3 .............................. <3>
  [ 42] eq ...................................... <random(30) = 3>
  [ 43] jmpifz [ 53] ............................ if random(30) = 3 then
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 1 ...................... <me>
  [ 50] objcall 527 ............................. me.closeEyes()
  [ 53] getprop 405 ............................. <pTalking>
  [ 56] pushint8 3 .............................. <3>
  [ 58] pusharglist 1 ........................... <3>
  [ 60] extcall 586 ............................. <random(3)>
  [ 63] pushint8 1 .............................. <1>
  [ 65] gt ...................................... <random(3) > 1>
  [ 66] and ..................................... <pTalking and (random(3) > 1)>
  [ 67] jmpifz [131] ............................ if pTalking and (random(3) > 1) then
  [ 70] getprop 551 ............................. <pMainAction>
  [ 73] pushcons 10 ............................. <"lay">
  [ 75] eq ...................................... <pMainAction = "lay">
  [ 76] jmpifz [104] ............................ if pMainAction = "lay" then / else
  [ 79] pushsymb 362 ............................ <#defineActMultiple>
  [ 82] getprop 546 ............................. <pPartList>
  [ 85] pushcons 17 ............................. <"lsp">
  [ 87] pushcons 11 ............................. <"hd">
  [ 89] pushcons 12 ............................. <"hr">
  [ 91] pushcons 14 ............................. <"fc">
  [ 93] pusharglist 3 ........................... <["hd", "hr", "fc"]>
  [ 95] pushlist ................................ <["hd", "hr", "fc"]>
  [ 96] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "lsp", ["hd", "hr", "fc"]>
  [ 98] extcall 503 ............................. call(#defineActMultiple, pPartList, "lsp", ["hd", "hr", "fc"])
  [101] jmp [126]
  [104] pushsymb 362 ............................ <#defineActMultiple>
  [107] getprop 546 ............................. <pPartList>
  [110] pushcons 18 ............................. <"spk">
  [112] pushcons 11 ............................. <"hd">
  [114] pushcons 12 ............................. <"hr">
  [116] pushcons 14 ............................. <"fc">
  [118] pusharglist 3 ........................... <["hd", "hr", "fc"]>
  [120] pushlist ................................ <["hd", "hr", "fc"]>
  [121] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "spk", ["hd", "hr", "fc"]>
  [123] extcall 503 ............................. call(#defineActMultiple, pPartList, "spk", ["hd", "hr", "fc"])
  [126] pushint8 1 .............................. <1>
  [128] setprop 550 ............................. pChanges = 1
  [131] getprop 552 ............................. <pMoving>
  [134] jmpifz [142] ............................ if pMoving then
  [137] pushint8 1 .............................. <1>
  [139] setprop 550 ............................. pChanges = 1
  [142] getprop 555 ............................. <pWaving>
  [145] getprop 551 ............................. <pMainAction>
  [148] pushcons 10 ............................. <"lay">
  [150] nteq .................................... <pMainAction <> "lay">
  [151] and ..................................... <pWaving and (pMainAction <> "lay")>
  [152] jmpifz [173] ............................ if pWaving and (pMainAction <> "lay") then
  [155] pushsymb 367 ............................ <#doHandWorkLeft>
  [158] getprop 546 ............................. <pPartList>
  [161] pushcons 19 ............................. <"wav">
  [163] pusharglistnoret 3 ...................... <#doHandWorkLeft, pPartList, "wav">
  [165] extcall 503 ............................. call(#doHandWorkLeft, pPartList, "wav")
  [168] pushint8 1 .............................. <1>
  [170] setprop 550 ............................. pChanges = 1
  [173] getprop 554 ............................. <pDancing>
  [176] jmpifz [188] ............................ if pDancing then
  [179] pushint8 1 .............................. <1>
  [181] setlocal 0 .............................. pAnimating = 1
  [183] pushint8 1 .............................. <1>
  [185] setprop 550 ............................. pChanges = 1
  [188] ret
end

on render me
  [  0] getprop 550 ............................. <pChanges>
  [  3] not ..................................... <not pChanges>
  [  4] jmpifz [ 11] ............................ if not pChanges then
  [  7] pusharglistnoret 0 ...................... <>
  [  9] extcall 44 .............................. return 
  [ 11] pushzero ................................ <0>
  [ 12] setprop 550 ............................. pChanges = 0
  [ 15] pushzero ................................ <0>
  [ 16] pushzero ................................ <0>
  [ 17] pushzero ................................ <0>
  [ 18] pushzero ................................ <0>
  [ 19] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 21] extcall 387 ............................. <rect(0, 0, 0, 0)>
  [ 24] setprop 409 ............................. pUpdateRect = rect(0, 0, 0, 0)
  [ 27] getprop 412 ............................. <pBuffer>
  [ 30] getprop 412 ............................. <pBuffer>
  [ 33] getobjprop 387 .......................... <pBuffer.rect>
  [ 36] getprop 557 ............................. <pAlphaColor>
  [ 39] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [ 41] objcall 587 ............................. pBuffer.fill(pBuffer.rect, pAlphaColor)
  [ 44] pushsymb 16 ............................. <#update>
  [ 46] getprop 546 ............................. <pPartList>
  [ 49] pusharglistnoret 2 ...................... <#update, pPartList>
  [ 51] extcall 503 ............................. call(#update, pPartList)
  [ 54] ret
end

on reDraw me
  [  0] getprop 412 ............................. <pBuffer>
  [  3] getprop 412 ............................. <pBuffer>
  [  6] getobjprop 387 .......................... <pBuffer.rect>
  [  9] getprop 557 ............................. <pAlphaColor>
  [ 12] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [ 14] objcall 587 ............................. pBuffer.fill(pBuffer.rect, pAlphaColor)
  [ 17] pushsymb 357 ............................ <#render>
  [ 20] getprop 546 ............................. <pPartList>
  [ 23] pusharglistnoret 2 ...................... <#render, pPartList>
  [ 25] extcall 503 ............................. call(#render, pPartList)
  [ 28] getprop 570 ............................. <pMember>
  [ 31] getchainedprop 129 ...................... <pMember.image>
  [ 33] getprop 412 ............................. <pBuffer>
  [ 36] getprop 412 ............................. <pBuffer>
  [ 39] getobjprop 387 .......................... <pBuffer.rect>
  [ 42] getprop 412 ............................. <pBuffer>
  [ 45] getobjprop 387 .......................... <pBuffer.rect>
  [ 48] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pBuffer.rect, pBuffer.rect>
  [ 50] objcall 416 ............................. pMember.image.copyPixels(pBuffer, pBuffer.rect, pBuffer.rect)
  [ 53] ret
end

on setPartLists me, tmodels
  [  0] getprop 551 ............................. <pMainAction>
  [  3] setlocal 0 .............................. tAction = pMainAction
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setprop 546 ............................. pPartList = []
  [ 11] pushcons 20 ............................. <"human.parts.">
  [ 13] getprop 410 ............................. <pPeopleSize>
  [ 16] joinstr ................................. <"human.parts." & pPeopleSize>
  [ 17] pusharglist 1 ........................... <"human.parts." & pPeopleSize>
  [ 19] extcall 196 ............................. <getVariableValue("human.parts." & pPeopleSize)>
  [ 21] setlocal 1 .............................. tPartDefinition = getVariableValue("human.parts." & pPeopleSize)
  [ 23] pushint8 1 .............................. <1>
  [ 25] setlocal 2
  [ 27] getlocal 2
  [ 29] getlocal 1 .............................. <tPartDefinition>
  [ 31] getobjprop 78 ........................... <tPartDefinition.count>
  [ 33] lteq
  [ 34] jmpifz [373] ............................ repeat with i = 1 to tPartDefinition.count
  [ 37] getlocal 1 .............................. <tPartDefinition>
  [ 39] getlocal 2 .............................. <i>
  [ 41] pusharglist 2 ........................... <tPartDefinition, i>
  [ 43] objcall 96 .............................. <tPartDefinition[i]>
  [ 45] setlocal 3 .............................. tPartSymbol = tPartDefinition[i]
  [ 47] getparam 1 .............................. <tmodels>
  [ 49] getlocal 3 .............................. <tPartSymbol>
  [ 51] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [ 53] objcall 96 .............................. <tmodels[tPartSymbol]>
  [ 55] pusharglist 1 ........................... <tmodels[tPartSymbol]>
  [ 57] extcall 71 .............................. <voidp(tmodels[tPartSymbol])>
  [ 59] jmpifz [ 73] ............................ if voidp(tmodels[tPartSymbol]) then
  [ 62] getparam 1 .............................. <tmodels>
  [ 64] getlocal 3 .............................. <tPartSymbol>
  [ 66] pusharglist 0 ........................... <[:]>
  [ 68] pushproplist ............................ <[:]>
  [ 69] pusharglistnoret 3 ...................... <tmodels, tPartSymbol, [:]>
  [ 71] objcall 142 ............................. tmodels[tPartSymbol] = [:]
  [ 73] getparam 1 .............................. <tmodels>
  [ 75] getlocal 3 .............................. <tPartSymbol>
  [ 77] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [ 79] objcall 96 .............................. <tmodels[tPartSymbol]>
  [ 81] pushcons 21 ............................. <"model">
  [ 83] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [ 85] objcall 96 .............................. <tmodels[tPartSymbol]["model"]>
  [ 87] pusharglist 1 ........................... <tmodels[tPartSymbol]["model"]>
  [ 89] extcall 71 .............................. <voidp(tmodels[tPartSymbol]["model"])>
  [ 91] jmpifz [110] ............................ if voidp(tmodels[tPartSymbol]["model"]) then
  [ 94] getparam 1 .............................. <tmodels>
  [ 96] getlocal 3 .............................. <tPartSymbol>
  [ 98] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [100] objcall 96 .............................. <tmodels[tPartSymbol]>
  [102] pushcons 21 ............................. <"model">
  [104] pushcons 22 ............................. <"001">
  [106] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "model", "001">
  [108] objcall 142 ............................. tmodels[tPartSymbol]["model"] = "001"
  [110] getparam 1 .............................. <tmodels>
  [112] getlocal 3 .............................. <tPartSymbol>
  [114] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [116] objcall 96 .............................. <tmodels[tPartSymbol]>
  [118] pushcons 23 ............................. <"color">
  [120] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [122] objcall 96 .............................. <tmodels[tPartSymbol]["color"]>
  [124] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [126] extcall 71 .............................. <voidp(tmodels[tPartSymbol]["color"])>
  [128] jmpifz [152] ............................ if voidp(tmodels[tPartSymbol]["color"]) then
  [131] getparam 1 .............................. <tmodels>
  [133] getlocal 3 .............................. <tPartSymbol>
  [135] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [137] objcall 96 .............................. <tmodels[tPartSymbol]>
  [139] pushcons 23 ............................. <"color">
  [141] pushcons 24 ............................. <"EEEEEE">
  [143] pusharglist 1 ........................... <"EEEEEE">
  [145] extcall 322 ............................. <rgb("EEEEEE")>
  [148] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "color", rgb("EEEEEE")>
  [150] objcall 142 ............................. tmodels[tPartSymbol]["color"] = rgb("EEEEEE")
  [152] pushsymb 511 ............................ <#temp>
  [155] pushcons 25 ............................. <"Bodypart Template Class">
  [157] pusharglist 2 ........................... <#temp, "Bodypart Template Class">
  [159] extcall 496 ............................. <createObject(#temp, "Bodypart Template Class")>
  [162] setlocal 4 .............................. tPartObj = createObject(#temp, "Bodypart Template Class")
  [164] getparam 1 .............................. <tmodels>
  [166] getlocal 3 .............................. <tPartSymbol>
  [168] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [170] objcall 96 .............................. <tmodels[tPartSymbol]>
  [172] pushcons 23 ............................. <"color">
  [174] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [176] objcall 96 .............................. <tmodels[tPartSymbol]["color"]>
  [178] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [180] extcall 107 ............................. <stringp(tmodels[tPartSymbol]["color"])>
  [182] jmpifz [212] ............................ if stringp(tmodels[tPartSymbol]["color"]) then
  [185] pushcons 26 ............................. <"rgb(">
  [187] getparam 1 .............................. <tmodels>
  [189] getlocal 3 .............................. <tPartSymbol>
  [191] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [193] objcall 96 .............................. <tmodels[tPartSymbol]>
  [195] pushcons 23 ............................. <"color">
  [197] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [199] objcall 96 .............................. <tmodels[tPartSymbol]["color"]>
  [201] joinstr ................................. <"rgb(" & tmodels[tPartSymbol]["color"]>
  [202] pushcons 27 ............................. <")">
  [204] joinstr ................................. <"rgb(" & tmodels[tPartSymbol]["color"] & ")">
  [205] pusharglist 1 ........................... <"rgb(" & tmodels[tPartSymbol]["color"] & ")">
  [207] extcall 301 ............................. <value("rgb(" & tmodels[tPartSymbol]["color"] & ")")>
  [210] setlocal 5 .............................. tColor = value("rgb(" & tmodels[tPartSymbol]["color"] & ")")
  [212] getparam 1 .............................. <tmodels>
  [214] getlocal 3 .............................. <tPartSymbol>
  [216] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [218] objcall 96 .............................. <tmodels[tPartSymbol]>
  [220] pushcons 23 ............................. <"color">
  [222] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [224] objcall 96 .............................. <tmodels[tPartSymbol]["color"]>
  [226] getobjprop 49 ........................... <tmodels[tPartSymbol]["color"].ilk>
  [228] pushsymb 344 ............................ <#color>
  [231] nteq .................................... <tmodels[tPartSymbol]["color"].ilk <> #color>
  [232] jmpifz [259] ............................ if tmodels[tPartSymbol]["color"].ilk <> #color then / else
  [235] getparam 1 .............................. <tmodels>
  [237] getlocal 3 .............................. <tPartSymbol>
  [239] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [241] objcall 96 .............................. <tmodels[tPartSymbol]>
  [243] pushcons 23 ............................. <"color">
  [245] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [247] objcall 96 .............................. <tmodels[tPartSymbol]["color"]>
  [249] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [251] extcall 322 ............................. <rgb(tmodels[tPartSymbol]["color"])>
  [254] setlocal 5 .............................. tColor = rgb(tmodels[tPartSymbol]["color"])
  [256] jmp [275]
  [259] getparam 1 .............................. <tmodels>
  [261] getlocal 3 .............................. <tPartSymbol>
  [263] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [265] objcall 96 .............................. <tmodels[tPartSymbol]>
  [267] pushcons 23 ............................. <"color">
  [269] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [271] objcall 96 .............................. <tmodels[tPartSymbol]["color"]>
  [273] setlocal 5 .............................. tColor = tmodels[tPartSymbol]["color"]
  [275] getlocal 5 .............................. <tColor>
  [277] getobjprop 341 .......................... <tColor.red>
  [280] getlocal 5 .............................. <tColor>
  [282] getobjprop 342 .......................... <tColor.green>
  [285] add ..................................... <tColor.red + tColor.green>
  [286] getlocal 5 .............................. <tColor>
  [288] getobjprop 343 .......................... <tColor.blue>
  [291] add ..................................... <tColor.red + tColor.green + tColor.blue>
  [292] pushint16 238 ........................... <238>
  [295] pushint8 3 .............................. <3>
  [297] mul ..................................... <238 * 3>
  [298] gt ...................................... <(tColor.red + tColor.green + tColor.blue) > (238 * 3)>
  [299] jmpifz [311] ............................ if (tColor.red + tColor.green + tColor.blue) > (238 * 3) then
  [302] pushcons 24 ............................. <"EEEEEE">
  [304] pusharglist 1 ........................... <"EEEEEE">
  [306] extcall 322 ............................. <rgb("EEEEEE")>
  [309] setlocal 5 .............................. tColor = rgb("EEEEEE")
  [311] getlocal 4 .............................. <tPartObj>
  [313] getlocal 3 .............................. <tPartSymbol>
  [315] getparam 1 .............................. <tmodels>
  [317] getlocal 3 .............................. <tPartSymbol>
  [319] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [321] objcall 96 .............................. <tmodels[tPartSymbol]>
  [323] pushcons 21 ............................. <"model">
  [325] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [327] objcall 96 .............................. <tmodels[tPartSymbol]["model"]>
  [329] getlocal 5 .............................. <tColor>
  [331] getprop 389 ............................. <pDirection>
  [334] getlocal 0 .............................. <tAction>
  [336] getparam 0 .............................. <me>
  [338] pusharglistnoret 7 ...................... <tPartObj, tPartSymbol, tmodels[tPartSymbol]["model"], tColor, pDirection, tAction, me>
  [340] objcall 356 ............................. tPartObj.define(tPartSymbol, tmodels[tPartSymbol]["model"], tColor, pDirection, tAction, me)
  [343] getprop 546 ............................. <pPartList>
  [346] getlocal 4 .............................. <tPartObj>
  [348] pusharglistnoret 2 ...................... <pPartList, tPartObj>
  [350] objcall 132 ............................. pPartList.add(tPartObj)
  [352] getprop 558 ............................. <pColors>
  [355] getlocal 3 .............................. <tPartSymbol>
  [357] getlocal 5 .............................. <tColor>
  [359] pusharglistnoret 3 ...................... <pColors, tPartSymbol, tColor>
  [361] objcall 142 ............................. pColors[tPartSymbol] = tColor
  [363] pushint8 1
  [365] getlocal 2
  [367] add
  [368] setlocal 2
  [370] endrepeat [ 27]
  [373] pusharglist 0 ........................... <[:]>
  [375] pushproplist ............................ <[:]>
  [376] setprop 547 ............................. pPartIndex = [:]
  [379] pushint8 1 .............................. <1>
  [381] setlocal 2
  [383] getlocal 2
  [385] getprop 546 ............................. <pPartList>
  [388] getobjprop 78 ........................... <pPartList.count>
  [390] lteq
  [391] jmpifz [424] ............................ repeat with i = 1 to pPartList.count
  [394] getprop 547 ............................. <pPartIndex>
  [397] getprop 546 ............................. <pPartList>
  [400] getlocal 2 .............................. <i>
  [402] pusharglist 2 ........................... <pPartList, i>
  [404] objcall 96 .............................. <pPartList[i]>
  [406] getobjprop 380 .......................... <pPartList[i].pPart>
  [409] getlocal 2 .............................. <i>
  [411] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [413] objcall 142 ............................. pPartIndex[pPartList[i].pPart] = i
  [415] pushint8 1
  [417] getlocal 2
  [419] add
  [420] setlocal 2
  [422] endrepeat [383]
  [424] pushint8 1 .............................. <1>
  [426] pusharglistnoret 1 ...................... <1>
  [428] extcall 44 .............................. return 1
  [430] ret
end

on arrangeParts me
  [  0] getprop 547 ............................. <pPartIndex>
  [  3] pushcons 28 ............................. <"lg">
  [  5] pusharglist 2 ........................... <pPartIndex, "lg">
  [  7] objcall 96 .............................. <pPartIndex["lg"]>
  [  9] getprop 547 ............................. <pPartIndex>
  [ 12] pushcons 29 ............................. <"sh">
  [ 14] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 16] objcall 96 .............................. <pPartIndex["sh"]>
  [ 18] lt ...................................... <pPartIndex["lg"] < pPartIndex["sh"]>
  [ 19] jmpifz [ 47] ............................ if pPartIndex["lg"] < pPartIndex["sh"] then / else
  [ 22] getprop 547 ............................. <pPartIndex>
  [ 25] pushcons 28 ............................. <"lg">
  [ 27] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 29] objcall 96 .............................. <pPartIndex["lg"]>
  [ 31] setlocal 0 .............................. tIndex1 = pPartIndex["lg"]
  [ 33] getprop 547 ............................. <pPartIndex>
  [ 36] pushcons 29 ............................. <"sh">
  [ 38] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 40] objcall 96 .............................. <pPartIndex["sh"]>
  [ 42] setlocal 1 .............................. tIndex2 = pPartIndex["sh"]
  [ 44] jmp [ 69]
  [ 47] getprop 547 ............................. <pPartIndex>
  [ 50] pushcons 29 ............................. <"sh">
  [ 52] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 54] objcall 96 .............................. <pPartIndex["sh"]>
  [ 56] setlocal 0 .............................. tIndex1 = pPartIndex["sh"]
  [ 58] getprop 547 ............................. <pPartIndex>
  [ 61] pushcons 28 ............................. <"lg">
  [ 63] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 65] objcall 96 .............................. <pPartIndex["lg"]>
  [ 67] setlocal 1 .............................. tIndex2 = pPartIndex["lg"]
  [ 69] getprop 546 ............................. <pPartList>
  [ 72] getprop 547 ............................. <pPartIndex>
  [ 75] pushcons 28 ............................. <"lg">
  [ 77] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 79] objcall 96 .............................. <pPartIndex["lg"]>
  [ 81] pusharglist 2 ........................... <pPartList, pPartIndex["lg"]>
  [ 83] objcall 96 .............................. <pPartList[pPartIndex["lg"]]>
  [ 85] setlocal 2 .............................. tLG = pPartList[pPartIndex["lg"]]
  [ 87] getprop 546 ............................. <pPartList>
  [ 90] getprop 547 ............................. <pPartIndex>
  [ 93] pushcons 29 ............................. <"sh">
  [ 95] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 97] objcall 96 .............................. <pPartIndex["sh"]>
  [ 99] pusharglist 2 ........................... <pPartList, pPartIndex["sh"]>
  [101] objcall 96 .............................. <pPartList[pPartIndex["sh"]]>
  [103] setlocal 3 .............................. tSH = pPartList[pPartIndex["sh"]]
  [105] getprop 551 ............................. <pMainAction>
  [108] peek 0 .................................. case pMainAction of
  [110] pushcons 30 ............................. <"sit">
  [112] nteq
  [113] jmpifz [124] ............................ (case) "sit", ...
  [116] peek 0
  [118] pushcons 10 ............................. <"lay">
  [120] eq
  [121] jmpifz [192] ............................ (case) ..., "lay":
  [124] getprop 401 ............................. <pFlipList>
  [127] getprop 389 ............................. <pDirection>
  [130] pushint8 1 .............................. <1>
  [132] add ..................................... <pDirection + 1>
  [133] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [135] objcall 96 .............................. <pFlipList[pDirection + 1]>
  [137] pushzero ................................ <0>
  [138] eq ...................................... <pFlipList[pDirection + 1] = 0>
  [139] jmpifz [167] ............................ if pFlipList[pDirection + 1] = 0 then / else
  [142] getprop 546 ............................. <pPartList>
  [145] getlocal 0 .............................. <tIndex1>
  [147] getlocal 3 .............................. <tSH>
  [149] pusharglistnoret 3 ...................... <pPartList, tIndex1, tSH>
  [151] objcall 142 ............................. pPartList[tIndex1] = tSH
  [153] getprop 546 ............................. <pPartList>
  [156] getlocal 1 .............................. <tIndex2>
  [158] getlocal 2 .............................. <tLG>
  [160] pusharglistnoret 3 ...................... <pPartList, tIndex2, tLG>
  [162] objcall 142 ............................. pPartList[tIndex2] = tLG
  [164] jmp [189]
  [167] getprop 546 ............................. <pPartList>
  [170] getlocal 0 .............................. <tIndex1>
  [172] getlocal 2 .............................. <tLG>
  [174] pusharglistnoret 3 ...................... <pPartList, tIndex1, tLG>
  [176] objcall 142 ............................. pPartList[tIndex1] = tLG
  [178] getprop 546 ............................. <pPartList>
  [181] getlocal 1 .............................. <tIndex2>
  [183] getlocal 3 .............................. <tSH>
  [185] pusharglistnoret 3 ...................... <pPartList, tIndex2, tSH>
  [187] objcall 142 ............................. pPartList[tIndex2] = tSH
  [189] jmp [214] ............................... (case) otherwise:
  [192] getprop 546 ............................. <pPartList>
  [195] getlocal 0 .............................. <tIndex1>
  [197] getlocal 3 .............................. <tSH>
  [199] pusharglistnoret 3 ...................... <pPartList, tIndex1, tSH>
  [201] objcall 142 ............................. pPartList[tIndex1] = tSH
  [203] getprop 546 ............................. <pPartList>
  [206] getlocal 1 .............................. <tIndex2>
  [208] getlocal 2 .............................. <tLG>
  [210] pusharglistnoret 3 ...................... <pPartList, tIndex2, tLG>
  [212] objcall 142 ............................. pPartList[tIndex2] = tLG
  [214] pop 1 ................................... end case
  [216] getprop 546 ............................. <pPartList>
  [219] getprop 547 ............................. <pPartIndex>
  [222] pushcons 31 ............................. <"rs">
  [224] pusharglist 2 ........................... <pPartIndex, "rs">
  [226] objcall 96 .............................. <pPartIndex["rs"]>
  [228] pusharglist 2 ........................... <pPartList, pPartIndex["rs"]>
  [230] objcall 96 .............................. <pPartList[pPartIndex["rs"]]>
  [232] setlocal 4 .............................. tRS = pPartList[pPartIndex["rs"]]
  [234] getprop 546 ............................. <pPartList>
  [237] getprop 547 ............................. <pPartIndex>
  [240] pushcons 32 ............................. <"rh">
  [242] pusharglist 2 ........................... <pPartIndex, "rh">
  [244] objcall 96 .............................. <pPartIndex["rh"]>
  [246] pusharglist 2 ........................... <pPartList, pPartIndex["rh"]>
  [248] objcall 96 .............................. <pPartList[pPartIndex["rh"]]>
  [250] setlocal 5 .............................. tRH = pPartList[pPartIndex["rh"]]
  [252] getprop 546 ............................. <pPartList>
  [255] getprop 547 ............................. <pPartIndex>
  [258] pushcons 33 ............................. <"ri">
  [260] pusharglist 2 ........................... <pPartIndex, "ri">
  [262] objcall 96 .............................. <pPartIndex["ri"]>
  [264] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [266] objcall 96 .............................. <pPartList[pPartIndex["ri"]]>
  [268] setlocal 6 .............................. tRI = pPartList[pPartIndex["ri"]]
  [270] getprop 546 ............................. <pPartList>
  [273] getprop 547 ............................. <pPartIndex>
  [276] pushcons 31 ............................. <"rs">
  [278] pusharglist 2 ........................... <pPartIndex, "rs">
  [280] objcall 96 .............................. <pPartIndex["rs"]>
  [282] pusharglistnoret 2 ...................... <pPartList, pPartIndex["rs"]>
  [284] objcall 214 ............................. pPartList.deleteAt(pPartIndex["rs"])
  [286] getprop 546 ............................. <pPartList>
  [289] getprop 547 ............................. <pPartIndex>
  [292] pushcons 32 ............................. <"rh">
  [294] pusharglist 2 ........................... <pPartIndex, "rh">
  [296] objcall 96 .............................. <pPartIndex["rh"]>
  [298] pusharglistnoret 2 ...................... <pPartList, pPartIndex["rh"]>
  [300] objcall 214 ............................. pPartList.deleteAt(pPartIndex["rh"])
  [302] getprop 546 ............................. <pPartList>
  [305] getprop 547 ............................. <pPartIndex>
  [308] pushcons 33 ............................. <"ri">
  [310] pusharglist 2 ........................... <pPartIndex, "ri">
  [312] objcall 96 .............................. <pPartIndex["ri"]>
  [314] pusharglistnoret 2 ...................... <pPartList, pPartIndex["ri"]>
  [316] objcall 214 ............................. pPartList.deleteAt(pPartIndex["ri"])
  [318] getlocal 5 .............................. <tRH>
  [320] getobjprop 392 .......................... <tRH.pActionRh>
  [323] pushcons 34 ............................. <"drk">
  [325] eq ...................................... <tRH.pActionRh = "drk">
  [326] pushzero ................................ <0>
  [327] pushint8 6 .............................. <6>
  [329] pusharglist 2 ........................... <[0, 6]>
  [331] pushlist ................................ <[0, 6]>
  [332] getprop 389 ............................. <pDirection>
  [335] pusharglist 2 ........................... <[0, 6], pDirection>
  [337] objcall 404 ............................. <[0, 6].getPos(pDirection)>
  [340] pushzero ................................ <0>
  [341] nteq .................................... <[0, 6].getPos(pDirection) <> 0>
  [342] and ..................................... <(tRH.pActionRh = "drk") and ([0, 6].getPos(pDirection) <> 0)>
  [343] jmpifz [385] ............................ if (tRH.pActionRh = "drk") and ([0, 6].getPos(pDirection) <> 0) then / else
  [346] getprop 546 ............................. <pPartList>
  [349] pushint8 8 .............................. <8>
  [351] getlocal 6 .............................. <tRI>
  [353] pusharglistnoret 3 ...................... <pPartList, 8, tRI>
  [355] objcall 592 ............................. pPartList.addAt(8, tRI)
  [358] getprop 546 ............................. <pPartList>
  [361] pushint8 9 .............................. <9>
  [363] getlocal 5 .............................. <tRH>
  [365] pusharglistnoret 3 ...................... <pPartList, 9, tRH>
  [367] objcall 592 ............................. pPartList.addAt(9, tRH)
  [370] getprop 546 ............................. <pPartList>
  [373] pushint8 10 ............................. <10>
  [375] getlocal 4 .............................. <tRS>
  [377] pusharglistnoret 3 ...................... <pPartList, 10, tRS>
  [379] objcall 592 ............................. pPartList.addAt(10, tRS)
  [382] jmp [463]
  [385] getprop 389 ............................. <pDirection>
  [388] pushint8 7 .............................. <7>
  [390] eq ...................................... <pDirection = 7>
  [391] jmpifz [433] ............................ if pDirection = 7 then / else
  [394] getprop 546 ............................. <pPartList>
  [397] pushint8 1 .............................. <1>
  [399] getlocal 6 .............................. <tRI>
  [401] pusharglistnoret 3 ...................... <pPartList, 1, tRI>
  [403] objcall 592 ............................. pPartList.addAt(1, tRI)
  [406] getprop 546 ............................. <pPartList>
  [409] pushint8 2 .............................. <2>
  [411] getlocal 5 .............................. <tRH>
  [413] pusharglistnoret 3 ...................... <pPartList, 2, tRH>
  [415] objcall 592 ............................. pPartList.addAt(2, tRH)
  [418] getprop 546 ............................. <pPartList>
  [421] pushint8 3 .............................. <3>
  [423] getlocal 4 .............................. <tRS>
  [425] pusharglistnoret 3 ...................... <pPartList, 3, tRS>
  [427] objcall 592 ............................. pPartList.addAt(3, tRS)
  [430] jmp [463]
  [433] getprop 546 ............................. <pPartList>
  [436] getlocal 6 .............................. <tRI>
  [438] pusharglistnoret 2 ...................... <pPartList, tRI>
  [440] objcall 593 ............................. pPartList.append(tRI)
  [443] getprop 546 ............................. <pPartList>
  [446] getlocal 5 .............................. <tRH>
  [448] pusharglistnoret 2 ...................... <pPartList, tRH>
  [450] objcall 593 ............................. pPartList.append(tRH)
  [453] getprop 546 ............................. <pPartList>
  [456] getlocal 4 .............................. <tRS>
  [458] pusharglistnoret 2 ...................... <pPartList, tRS>
  [460] objcall 593 ............................. pPartList.append(tRS)
  [463] pushint8 1 .............................. <1>
  [465] setlocal 7
  [467] getlocal 7
  [469] getprop 546 ............................. <pPartList>
  [472] getobjprop 78 ........................... <pPartList.count>
  [474] lteq
  [475] jmpifz [508] ............................ repeat with i = 1 to pPartList.count
  [478] getprop 547 ............................. <pPartIndex>
  [481] getprop 546 ............................. <pPartList>
  [484] getlocal 7 .............................. <i>
  [486] pusharglist 2 ........................... <pPartList, i>
  [488] objcall 96 .............................. <pPartList[i]>
  [490] getobjprop 380 .......................... <pPartList[i].pPart>
  [493] getlocal 7 .............................. <i>
  [495] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [497] objcall 142 ............................. pPartIndex[pPartList[i].pPart] = i
  [499] pushint8 1
  [501] getlocal 7
  [503] add
  [504] setlocal 7
  [506] endrepeat [467]
  [508] getprop 565 ............................. <pLastDir>
  [511] getprop 389 ............................. <pDirection>
  [514] eq ...................................... <pLastDir = pDirection>
  [515] jmpifz [522] ............................ if pLastDir = pDirection then
  [518] pusharglistnoret 0 ...................... <>
  [520] extcall 44 .............................. return 
  [522] getprop 389 ............................. <pDirection>
  [525] setprop 565 ............................. pLastDir = pDirection
  [528] getprop 546 ............................. <pPartList>
  [531] getprop 547 ............................. <pPartIndex>
  [534] pushcons 35 ............................. <"ls">
  [536] pusharglist 2 ........................... <pPartIndex, "ls">
  [538] objcall 96 .............................. <pPartIndex["ls"]>
  [540] pusharglist 2 ........................... <pPartList, pPartIndex["ls"]>
  [542] objcall 96 .............................. <pPartList[pPartIndex["ls"]]>
  [544] setlocal 8 .............................. tLS = pPartList[pPartIndex["ls"]]
  [546] getprop 546 ............................. <pPartList>
  [549] getprop 547 ............................. <pPartIndex>
  [552] pushcons 36 ............................. <"lh">
  [554] pusharglist 2 ........................... <pPartIndex, "lh">
  [556] objcall 96 .............................. <pPartIndex["lh"]>
  [558] pusharglist 2 ........................... <pPartList, pPartIndex["lh"]>
  [560] objcall 96 .............................. <pPartList[pPartIndex["lh"]]>
  [562] setlocal 9 .............................. tLH = pPartList[pPartIndex["lh"]]
  [564] getprop 546 ............................. <pPartList>
  [567] getprop 547 ............................. <pPartIndex>
  [570] pushcons 37 ............................. <"li">
  [572] pusharglist 2 ........................... <pPartIndex, "li">
  [574] objcall 96 .............................. <pPartIndex["li"]>
  [576] pusharglist 2 ........................... <pPartList, pPartIndex["li"]>
  [578] objcall 96 .............................. <pPartList[pPartIndex["li"]]>
  [580] setlocal 10 ............................. tLI = pPartList[pPartIndex["li"]]
  [582] getprop 546 ............................. <pPartList>
  [585] getprop 547 ............................. <pPartIndex>
  [588] pushcons 35 ............................. <"ls">
  [590] pusharglist 2 ........................... <pPartIndex, "ls">
  [592] objcall 96 .............................. <pPartIndex["ls"]>
  [594] pusharglistnoret 2 ...................... <pPartList, pPartIndex["ls"]>
  [596] objcall 214 ............................. pPartList.deleteAt(pPartIndex["ls"])
  [598] getprop 546 ............................. <pPartList>
  [601] getprop 547 ............................. <pPartIndex>
  [604] pushcons 36 ............................. <"lh">
  [606] pusharglist 2 ........................... <pPartIndex, "lh">
  [608] objcall 96 .............................. <pPartIndex["lh"]>
  [610] pusharglistnoret 2 ...................... <pPartList, pPartIndex["lh"]>
  [612] objcall 214 ............................. pPartList.deleteAt(pPartIndex["lh"])
  [614] getprop 546 ............................. <pPartList>
  [617] getprop 547 ............................. <pPartIndex>
  [620] pushcons 37 ............................. <"li">
  [622] pusharglist 2 ........................... <pPartIndex, "li">
  [624] objcall 96 .............................. <pPartIndex["li"]>
  [626] pusharglistnoret 2 ...................... <pPartList, pPartIndex["li"]>
  [628] objcall 214 ............................. pPartList.deleteAt(pPartIndex["li"])
  [630] getprop 389 ............................. <pDirection>
  [633] peek 0 .................................. case pDirection of
  [635] pushint8 3 .............................. <3>
  [637] eq
  [638] jmpifz [680] ............................ (case) 3:
  [641] getprop 546 ............................. <pPartList>
  [644] pushint8 8 .............................. <8>
  [646] getlocal 10 ............................. <tLI>
  [648] pusharglistnoret 3 ...................... <pPartList, 8, tLI>
  [650] objcall 592 ............................. pPartList.addAt(8, tLI)
  [653] getprop 546 ............................. <pPartList>
  [656] pushint8 9 .............................. <9>
  [658] getlocal 9 .............................. <tLH>
  [660] pusharglistnoret 3 ...................... <pPartList, 9, tLH>
  [662] objcall 592 ............................. pPartList.addAt(9, tLH)
  [665] getprop 546 ............................. <pPartList>
  [668] pushint8 10 ............................. <10>
  [670] getlocal 8 .............................. <tLS>
  [672] pusharglistnoret 3 ...................... <pPartList, 10, tLS>
  [674] objcall 592 ............................. pPartList.addAt(10, tLS)
  [677] jmp [716] ............................... (case) otherwise:
  [680] getprop 546 ............................. <pPartList>
  [683] pushint8 1 .............................. <1>
  [685] getlocal 10 ............................. <tLI>
  [687] pusharglistnoret 3 ...................... <pPartList, 1, tLI>
  [689] objcall 592 ............................. pPartList.addAt(1, tLI)
  [692] getprop 546 ............................. <pPartList>
  [695] pushint8 2 .............................. <2>
  [697] getlocal 9 .............................. <tLH>
  [699] pusharglistnoret 3 ...................... <pPartList, 2, tLH>
  [701] objcall 592 ............................. pPartList.addAt(2, tLH)
  [704] getprop 546 ............................. <pPartList>
  [707] pushint8 3 .............................. <3>
  [709] getlocal 8 .............................. <tLS>
  [711] pusharglistnoret 3 ...................... <pPartList, 3, tLS>
  [713] objcall 592 ............................. pPartList.addAt(3, tLS)
  [716] pop 1 ................................... end case
  [718] pushint8 1 .............................. <1>
  [720] setlocal 7
  [722] getlocal 7
  [724] getprop 546 ............................. <pPartList>
  [727] getobjprop 78 ........................... <pPartList.count>
  [729] lteq
  [730] jmpifz [763] ............................ repeat with i = 1 to pPartList.count
  [733] getprop 547 ............................. <pPartIndex>
  [736] getprop 546 ............................. <pPartList>
  [739] getlocal 7 .............................. <i>
  [741] pusharglist 2 ........................... <pPartList, i>
  [743] objcall 96 .............................. <pPartList[i]>
  [745] getobjprop 380 .......................... <pPartList[i].pPart>
  [748] getlocal 7 .............................. <i>
  [750] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [752] objcall 142 ............................. pPartIndex[pPartList[i].pPart] = i
  [754] pushint8 1
  [756] getlocal 7
  [758] add
  [759] setlocal 7
  [761] endrepeat [722]
  [763] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 407 .......................... <tImg_a.width>
  [  5] getparam 1 .............................. <tImg_a>
  [  7] getobjprop 413 .......................... <tImg_a.height>
  [ 10] getparam 1 .............................. <tImg_a>
  [ 12] getobjprop 604 .......................... <tImg_a.depth>
  [ 15] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth>
  [ 17] extcall 129 ............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth)>
  [ 19] setlocal 0 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth)
  [ 21] getparam 1 .............................. <tImg_a>
  [ 23] getobjprop 407 .......................... <tImg_a.width>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 29] extcall 59 .............................. <point(tImg_a.width, 0)>
  [ 31] pushzero ................................ <0>
  [ 32] pushzero ................................ <0>
  [ 33] pusharglist 2 ........................... <0, 0>
  [ 35] extcall 59 .............................. <point(0, 0)>
  [ 37] pushzero ................................ <0>
  [ 38] getparam 1 .............................. <tImg_a>
  [ 40] getobjprop 413 .......................... <tImg_a.height>
  [ 43] pusharglist 2 ........................... <0, tImg_a.height>
  [ 45] extcall 59 .............................. <point(0, tImg_a.height)>
  [ 47] getparam 1 .............................. <tImg_a>
  [ 49] getobjprop 407 .......................... <tImg_a.width>
  [ 52] getparam 1 .............................. <tImg_a>
  [ 54] getobjprop 413 .......................... <tImg_a.height>
  [ 57] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 59] extcall 59 .............................. <point(tImg_a.width, tImg_a.height)>
  [ 61] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 63] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 64] setlocal 1 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [ 66] getlocal 0 .............................. <tImg_b>
  [ 68] getparam 1 .............................. <tImg_a>
  [ 70] getlocal 1 .............................. <tQuad>
  [ 72] getparam 1 .............................. <tImg_a>
  [ 74] getobjprop 387 .......................... <tImg_a.rect>
  [ 77] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [ 79] objcall 416 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [ 82] getlocal 0 .............................. <tImg_b>
  [ 84] pusharglistnoret 1 ...................... <tImg_b>
  [ 86] extcall 44 .............................. return tImg_b
  [ 88] ret
end

on action_mv me, tProps
  [  0] pushcons 38 ............................. <"wlk">
  [  2] setprop 551 ............................. pMainAction = "wlk"
  [  5] pushint8 1 .............................. <1>
  [  7] setprop 552 ............................. pMoving = 1
  [ 10] pushsymb 362 ............................ <#defineActMultiple>
  [ 13] getprop 546 ............................. <pPartList>
  [ 16] pushcons 38 ............................. <"wlk">
  [ 18] pushcons 39 ............................. <"bd">
  [ 20] pushcons 28 ............................. <"lg">
  [ 22] pushcons 36 ............................. <"lh">
  [ 24] pushcons 32 ............................. <"rh">
  [ 26] pushcons 35 ............................. <"ls">
  [ 28] pushcons 31 ............................. <"rs">
  [ 30] pushcons 29 ............................. <"sh">
  [ 32] pusharglist 7 ........................... <["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [ 34] pushlist ................................ <["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [ 35] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "wlk", ["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [ 37] extcall 503 ............................. call(#defineActMultiple, pPartList, "wlk", ["bd", "lg", "lh", "rh", "ls", "rs", "sh"])
  [ 40] ret
end

on action_sit me, tProps
  [  0] pushsymb 362 ............................ <#defineActMultiple>
  [  3] getprop 546 ............................. <pPartList>
  [  6] pushcons 30 ............................. <"sit">
  [  8] pushcons 39 ............................. <"bd">
  [ 10] pushcons 28 ............................. <"lg">
  [ 12] pushcons 29 ............................. <"sh">
  [ 14] pusharglist 3 ........................... <["bd", "lg", "sh"]>
  [ 16] pushlist ................................ <["bd", "lg", "sh"]>
  [ 17] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "sit", ["bd", "lg", "sh"]>
  [ 19] extcall 503 ............................. call(#defineActMultiple, pPartList, "sit", ["bd", "lg", "sh"])
  [ 22] pushcons 30 ............................. <"sit">
  [ 24] setprop 551 ............................. pMainAction = "sit"
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglistnoret 1 ...................... <me>
  [ 31] objcall 532 ............................. me.arrangeParts()
  [ 34] ret
end

on action_lay me, tProps
  [  0] pushcons 10 ............................. <"lay">
  [  2] setprop 551 ............................. pMainAction = "lay"
  [  5] pushzero ................................ <0>
  [  6] setprop 406 ............................. pCarrying = 0
  [  9] pushint8 30 ............................. <30>
  [ 11] pushint8 10 ............................. <10>
  [ 13] inv ..................................... <-10>
  [ 14] pusharglist 2 ........................... <30, -10>
  [ 16] extcall 59 .............................. <point(30, -10)>
  [ 18] setprop 414 ............................. pLocFix = point(30, -10)
  [ 21] pushsymb 369 ............................ <#layDown>
  [ 24] getprop 546 ............................. <pPartList>
  [ 27] pusharglistnoret 2 ...................... <#layDown, pPartList>
  [ 29] extcall 503 ............................. call(#layDown, pPartList)
  [ 32] getprop 389 ............................. <pDirection>
  [ 35] pushzero ................................ <0>
  [ 36] eq ...................................... <pDirection = 0>
  [ 37] jmpifz [ 45] ............................ if pDirection = 0 then
  [ 40] pushint8 4 .............................. <4>
  [ 42] setprop 389 ............................. pDirection = 4
  [ 45] pushsymb 359 ............................ <#defineDir>
  [ 48] getprop 546 ............................. <pPartList>
  [ 51] getprop 389 ............................. <pDirection>
  [ 54] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [ 56] extcall 503 ............................. call(#defineDir, pPartList, pDirection)
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglistnoret 1 ...................... <me>
  [ 63] objcall 532 ............................. me.arrangeParts()
  [ 66] ret
end

on action_carryd me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 608 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 104 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 301 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 109 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [100] ............................ if integerp(value(tItem)) then
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 40 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 267 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 40 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 22 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 149 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 22 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushsymb 368 ............................ <#doHandWorkRight>
  [ 67] getprop 546 ............................. <pPartList>
  [ 70] pushcons 41 ............................. <"crr">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 74] extcall 503 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 77] getprop 546 ............................. <pPartList>
  [ 80] getprop 547 ............................. <pPartIndex>
  [ 83] pushcons 33 ............................. <"ri">
  [ 85] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 87] objcall 96 .............................. <pPartIndex["ri"]>
  [ 89] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 91] objcall 96 .............................. <pPartList[pPartIndex["ri"]]>
  [ 93] getlocal 2 .............................. <tCarryItm>
  [ 95] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 97] objcall 364 ............................. pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [100] ret
end

on action_drink me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 608 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 104 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 301 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 109 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [107] ............................ if integerp(value(tItem)) then
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 40 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 267 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 40 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 22 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 149 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 22 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushsymb 368 ............................ <#doHandWorkRight>
  [ 67] getprop 546 ............................. <pPartList>
  [ 70] pushcons 34 ............................. <"drk">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [ 74] extcall 503 ............................. call(#doHandWorkRight, pPartList, "drk")
  [ 77] getprop 546 ............................. <pPartList>
  [ 80] getprop 547 ............................. <pPartIndex>
  [ 83] pushcons 33 ............................. <"ri">
  [ 85] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 87] objcall 96 .............................. <pPartIndex["ri"]>
  [ 89] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 91] objcall 96 .............................. <pPartList[pPartIndex["ri"]]>
  [ 93] getlocal 2 .............................. <tCarryItm>
  [ 95] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 97] objcall 364 ............................. pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [100] getparam 0 .............................. <me>
  [102] pusharglistnoret 1 ...................... <me>
  [104] objcall 532 ............................. me.arrangeParts()
  [107] ret
end

on action_carryf me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 608 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 104 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 301 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 109 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [100] ............................ if integerp(value(tItem)) then
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 40 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 267 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 40 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 22 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 149 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 22 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushsymb 368 ............................ <#doHandWorkRight>
  [ 67] getprop 546 ............................. <pPartList>
  [ 70] pushcons 41 ............................. <"crr">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 74] extcall 503 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 77] getprop 546 ............................. <pPartList>
  [ 80] getprop 547 ............................. <pPartIndex>
  [ 83] pushcons 33 ............................. <"ri">
  [ 85] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 87] objcall 96 .............................. <pPartIndex["ri"]>
  [ 89] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 91] objcall 96 .............................. <pPartList[pPartIndex["ri"]]>
  [ 93] getlocal 2 .............................. <tCarryItm>
  [ 95] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 97] objcall 364 ............................. pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [100] ret
end

on action_eat me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 608 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 104 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 301 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 109 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [100] ............................ if integerp(value(tItem)) then
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 40 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 267 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 40 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 22 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 149 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 22 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushsymb 368 ............................ <#doHandWorkRight>
  [ 67] getprop 546 ............................. <pPartList>
  [ 70] pushcons 34 ............................. <"drk">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [ 74] extcall 503 ............................. call(#doHandWorkRight, pPartList, "drk")
  [ 77] getprop 546 ............................. <pPartList>
  [ 80] getprop 547 ............................. <pPartIndex>
  [ 83] pushcons 33 ............................. <"ri">
  [ 85] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 87] objcall 96 .............................. <pPartIndex["ri"]>
  [ 89] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 91] objcall 96 .............................. <pPartList[pPartIndex["ri"]]>
  [ 93] getlocal 2 .............................. <tCarryItm>
  [ 95] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 97] objcall 364 ............................. pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [100] ret
end

on action_talk me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 405 ............................. pTalking = 1
  [  5] ret
end

on action_gest me, tProps
  [  0] getprop 410 ............................. <pPeopleSize>
  [  3] pushcons 29 ............................. <"sh">
  [  5] eq ...................................... <pPeopleSize = "sh">
  [  6] jmpifz [ 13] ............................ if pPeopleSize = "sh" then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 44 .............................. return 
  [ 13] pushcons 13 ............................. <"ey">
  [ 15] pushcons 14 ............................. <"fc">
  [ 17] pusharglist 2 ........................... <["ey", "fc"]>
  [ 19] pushlist ................................ <["ey", "fc"]>
  [ 20] setlocal 0 .............................. tList = ["ey", "fc"]
  [ 22] getparam 1 .............................. <tProps>
  [ 24] pushsymb 608 ............................ <#word>
  [ 27] pushint8 2 .............................. <2>
  [ 29] pusharglist 3 ........................... <tProps, #word, 2>
  [ 31] objcall 104 ............................. <tProps.word[2]>
  [ 33] setlocal 1 .............................. tGesture = tProps.word[2]
  [ 35] getlocal 1 .............................. <tGesture>
  [ 37] pushcons 42 ............................. <"spr">
  [ 39] eq ...................................... <tGesture = "spr">
  [ 40] jmpifz [ 47] ............................ if tGesture = "spr" then
  [ 43] pushcons 43 ............................. <"srp">
  [ 45] setlocal 1 .............................. tGesture = "srp"
  [ 47] getprop 551 ............................. <pMainAction>
  [ 50] pushcons 10 ............................. <"lay">
  [ 52] eq ...................................... <pMainAction = "lay">
  [ 53] jmpifz [ 91] ............................ if pMainAction = "lay" then / else
  [ 56] pushcons 44 ............................. <"l">
  [ 58] getlocal 1 .............................. <tGesture>
  [ 60] pushsymb 102 ............................ <#char>
  [ 62] pushint8 1 .............................. <1>
  [ 64] pushint8 2 .............................. <2>
  [ 66] pusharglist 4 ........................... <tGesture, #char, 1, 2>
  [ 68] objcall 104 ............................. <tGesture.char[1..2]>
  [ 70] joinstr ................................. <"l" & tGesture.char[1..2]>
  [ 71] setlocal 1 .............................. tGesture = "l" & tGesture.char[1..2]
  [ 73] pushsymb 362 ............................ <#defineActMultiple>
  [ 76] getprop 546 ............................. <pPartList>
  [ 79] getlocal 1 .............................. <tGesture>
  [ 81] getlocal 0 .............................. <tList>
  [ 83] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, tGesture, tList>
  [ 85] extcall 503 ............................. call(#defineActMultiple, pPartList, tGesture, tList)
  [ 88] jmp [160]
  [ 91] pushsymb 362 ............................ <#defineActMultiple>
  [ 94] getprop 546 ............................. <pPartList>
  [ 97] getlocal 1 .............................. <tGesture>
  [ 99] getlocal 0 .............................. <tList>
  [101] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, tGesture, tList>
  [103] extcall 503 ............................. call(#defineActMultiple, pPartList, tGesture, tList)
  [106] getlocal 1 .............................. <tGesture>
  [108] pushcons 45 ............................. <"ohd">
  [110] eq ...................................... <tGesture = "ohd">
  [111] jmpifz [160] ............................ if tGesture = "ohd" then
  [114] getprop 546 ............................. <pPartList>
  [117] getprop 547 ............................. <pPartIndex>
  [120] pushcons 11 ............................. <"hd">
  [122] pusharglist 2 ........................... <pPartIndex, "hd">
  [124] objcall 96 .............................. <pPartIndex["hd"]>
  [126] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [128] objcall 96 .............................. <pPartList[pPartIndex["hd"]]>
  [130] getlocal 1 .............................. <tGesture>
  [132] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], tGesture>
  [134] extcall 361 ............................. defineAct(pPartList[pPartIndex["hd"]], tGesture)
  [137] getprop 546 ............................. <pPartList>
  [140] getprop 547 ............................. <pPartIndex>
  [143] pushcons 12 ............................. <"hr">
  [145] pusharglist 2 ........................... <pPartIndex, "hr">
  [147] objcall 96 .............................. <pPartIndex["hr"]>
  [149] pusharglist 2 ........................... <pPartList, pPartIndex["hr"]>
  [151] objcall 96 .............................. <pPartList[pPartIndex["hr"]]>
  [153] getlocal 1 .............................. <tGesture>
  [155] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hr"]], tGesture>
  [157] extcall 361 ............................. defineAct(pPartList[pPartIndex["hr"]], tGesture)
  [160] ret
end

on action_wave me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 555 ............................. pWaving = 1
  [  5] ret
end

on action_ohd me
  [  0] pushsymb 362 ............................ <#defineActMultiple>
  [  3] getprop 546 ............................. <pPartList>
  [  6] pushcons 45 ............................. <"ohd">
  [  8] pushcons 11 ............................. <"hd">
  [ 10] pushcons 14 ............................. <"fc">
  [ 12] pushcons 13 ............................. <"ey">
  [ 14] pushcons 12 ............................. <"hr">
  [ 16] pusharglist 4 ........................... <["hd", "fc", "ey", "hr"]>
  [ 18] pushlist ................................ <["hd", "fc", "ey", "hr"]>
  [ 19] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "ohd", ["hd", "fc", "ey", "hr"]>
  [ 21] extcall 503 ............................. call(#defineActMultiple, pPartList, "ohd", ["hd", "fc", "ey", "hr"])
  [ 24] pushsymb 368 ............................ <#doHandWorkRight>
  [ 27] getprop 546 ............................. <pPartList>
  [ 30] pushcons 45 ............................. <"ohd">
  [ 32] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "ohd">
  [ 34] extcall 503 ............................. call(#doHandWorkRight, pPartList, "ohd")
  [ 37] ret
end

on action_sleep me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 553 ............................. pSleeping = 1
  [  5] ret
end
