property pCryWindowID, pAlertSpr, pAlertTimer, pCurrCryID, pCurrCryNum, pCurrCryData, pModtoolButtonSpr, pModtoolWindowID, pModToolCheckBoxes, pModToolMode, pCryWndMode, pButtonLocH

on construct me
  [  0] pushcons 0 .............................. <"hobba_alert">
  [  2] pusharglist 1 ........................... <"hobba_alert">
  [  4] extcall 27 .............................. <getText("hobba_alert")>
  [  6] setprop 26 .............................. pCryWindowID = getText("hobba_alert")
  [  8] pushcons 1 .............................. <"modtool_header">
  [ 10] pusharglist 1 ........................... <"modtool_header">
  [ 12] extcall 27 .............................. <getText("modtool_header")>
  [ 14] setprop 28 .............................. pModtoolWindowID = getText("modtool_header")
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] setprop 29 .............................. pAlertSpr = VOID
  [ 22] pusharglist 0 ........................... <>
  [ 24] extcall 30 .............................. <VOID>
  [ 26] setprop 31 .............................. pModtoolButtonSpr = VOID
  [ 28] pushzero ................................ <0>
  [ 29] setprop 32 .............................. pAlertTimer = 0
  [ 31] pushcons 2 .............................. <EMPTY>
  [ 33] setprop 33 .............................. pCurrCryID = EMPTY
  [ 35] pushzero ................................ <0>
  [ 36] setprop 34 .............................. pCurrCryNum = 0
  [ 38] pusharglist 0 ........................... <[:]>
  [ 40] pushproplist ............................ <[:]>
  [ 41] setprop 35 .............................. pCurrCryData = [:]
  [ 43] pushzero ................................ <0>
  [ 44] pushzero ................................ <0>
  [ 45] pusharglist 2 ........................... <[0, 0]>
  [ 47] pushlist ................................ <[0, 0]>
  [ 48] setprop 36 .............................. pModToolCheckBoxes = [0, 0]
  [ 50] pushcons 3 .............................. <"closed">
  [ 52] setprop 37 .............................. pModToolMode = "closed"
  [ 54] pushcons 3 .............................. <"closed">
  [ 56] setprop 38 .............................. pCryWndMode = "closed"
  [ 58] pushint8 5 .............................. <5>
  [ 60] setprop 39 .............................. pButtonLocH = 5
  [ 62] pushsymb 41 ............................. <#enterRoom>
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 1 ........................... <me>
  [ 68] objcall 42 .............................. <me.getID()>
  [ 70] pushsymb 4 .............................. <#showModtoolButton>
  [ 72] pusharglistnoret 3 ...................... <#enterRoom, me.getID(), #showModtoolButton>
  [ 74] extcall 40 .............................. registerMessage(#enterRoom, me.getID(), #showModtoolButton)
  [ 76] pushsymb 43 ............................. <#leaveRoom>
  [ 78] getparam 0 .............................. <me>
  [ 80] pusharglist 1 ........................... <me>
  [ 82] objcall 42 .............................. <me.getID()>
  [ 84] pushsymb 5 .............................. <#hideModtoolButton>
  [ 86] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #hideModtoolButton>
  [ 88] extcall 40 .............................. registerMessage(#leaveRoom, me.getID(), #hideModtoolButton)
  [ 90] pushsymb 13 ............................. <#userClicked>
  [ 92] getparam 0 .............................. <me>
  [ 94] pusharglist 1 ........................... <me>
  [ 96] objcall 42 .............................. <me.getID()>
  [ 98] pushsymb 13 ............................. <#userClicked>
  [100] pusharglistnoret 3 ...................... <#userClicked, me.getID(), #userClicked>
  [102] extcall 40 .............................. registerMessage(#userClicked, me.getID(), #userClicked)
  [104] pushint8 1 .............................. <1>
  [106] pusharglistnoret 1 ...................... <1>
  [108] extcall 44 .............................. return 1
  [110] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 42 .............................. <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 46 .............................. removeUpdate(me.getID())
  [ 10] getprop 26 .............................. <pCryWindowID>
  [ 12] pusharglist 1 ........................... <pCryWindowID>
  [ 14] extcall 47 .............................. <windowExists(pCryWindowID)>
  [ 16] jmpifz [ 25] ............................ if windowExists(pCryWindowID) then
  [ 19] getprop 26 .............................. <pCryWindowID>
  [ 21] pusharglistnoret 1 ...................... <pCryWindowID>
  [ 23] extcall 48 .............................. removeWindow(pCryWindowID)
  [ 25] getprop 29 .............................. <pAlertSpr>
  [ 27] getobjprop 49 ........................... <pAlertSpr.ilk>
  [ 29] pushsymb 50 ............................. <#sprite>
  [ 31] eq ...................................... <pAlertSpr.ilk = #sprite>
  [ 32] jmpifz [ 43] ............................ if pAlertSpr.ilk = #sprite then
  [ 35] getprop 29 .............................. <pAlertSpr>
  [ 37] getobjprop 52 ........................... <pAlertSpr.spriteNum>
  [ 39] pusharglistnoret 1 ...................... <pAlertSpr.spriteNum>
  [ 41] extcall 51 .............................. releaseSprite(pAlertSpr.spriteNum)
  [ 43] getprop 31 .............................. <pModtoolButtonSpr>
  [ 45] getobjprop 49 ........................... <pModtoolButtonSpr.ilk>
  [ 47] pushsymb 50 ............................. <#sprite>
  [ 49] eq ...................................... <pModtoolButtonSpr.ilk = #sprite>
  [ 50] jmpifz [ 61] ............................ if pModtoolButtonSpr.ilk = #sprite then
  [ 53] getprop 31 .............................. <pModtoolButtonSpr>
  [ 55] getobjprop 52 ........................... <pModtoolButtonSpr.spriteNum>
  [ 57] pusharglistnoret 1 ...................... <pModtoolButtonSpr.spriteNum>
  [ 59] extcall 51 .............................. releaseSprite(pModtoolButtonSpr.spriteNum)
  [ 61] pushcons 2 .............................. <EMPTY>
  [ 63] setprop 33 .............................. pCurrCryID = EMPTY
  [ 65] pushzero ................................ <0>
  [ 66] setprop 34 .............................. pCurrCryNum = 0
  [ 68] pusharglist 0 ........................... <[:]>
  [ 70] pushproplist ............................ <[:]>
  [ 71] setprop 35 .............................. pCurrCryData = [:]
  [ 73] pushsymb 54 ............................. <#userlogin>
  [ 75] getparam 0 .............................. <me>
  [ 77] pusharglist 1 ........................... <me>
  [ 79] objcall 42 .............................. <me.getID()>
  [ 81] pusharglistnoret 2 ...................... <#userlogin, me.getID()>
  [ 83] extcall 53 .............................. unregisterMessage(#userlogin, me.getID())
  [ 85] pushsymb 13 ............................. <#userClicked>
  [ 87] getparam 0 .............................. <me>
  [ 89] pusharglist 1 ........................... <me>
  [ 91] objcall 42 .............................. <me.getID()>
  [ 93] pusharglistnoret 2 ...................... <#userClicked, me.getID()>
  [ 95] extcall 53 .............................. unregisterMessage(#userClicked, me.getID())
  [ 97] pushint8 1 .............................. <1>
  [ 99] pusharglistnoret 1 ...................... <1>
  [101] extcall 44 .............................. return 1
  [103] ret
end

on ShowAlert me
  [  0] getprop 29 .............................. <pAlertSpr>
  [  2] getobjprop 49 ........................... <pAlertSpr.ilk>
  [  4] pushsymb 50 ............................. <#sprite>
  [  6] nteq .................................... <pAlertSpr.ilk <> #sprite>
  [  7] jmpifz [129] ............................ if pAlertSpr.ilk <> #sprite then
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 42 .............................. <me.getID()>
  [ 16] pusharglist 1 ........................... <me.getID()>
  [ 18] extcall 55 .............................. <reserveSprite(me.getID())>
  [ 20] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [ 22] extcall 50 .............................. <sprite(reserveSprite(me.getID()))>
  [ 24] setprop 29 .............................. pAlertSpr = sprite(reserveSprite(me.getID()))
  [ 26] getprop 29 .............................. <pAlertSpr>
  [ 28] pushzero ................................ <0>
  [ 29] pusharglist 1 ........................... <0>
  [ 31] extcall 50 .............................. <sprite(0)>
  [ 33] eq ...................................... <pAlertSpr = sprite(0)>
  [ 34] jmpifz [ 42] ............................ if pAlertSpr = sprite(0) then
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 44 .............................. return 0
  [ 42] getprop 29 .............................. <pAlertSpr>
  [ 44] pushcons 4 .............................. <"hobba_alert_0">
  [ 46] pusharglist 1 ........................... <"hobba_alert_0">
  [ 48] extcall 56 .............................. <getmemnum("hobba_alert_0")>
  [ 50] setobjprop 57 ........................... pAlertSpr.memberNum = getmemnum("hobba_alert_0")
  [ 52] getprop 29 .............................. <pAlertSpr>
  [ 54] pushint8 8 .............................. <8>
  [ 56] setobjprop 58 ........................... pAlertSpr.ink = 8
  [ 58] getprop 29 .............................. <pAlertSpr>
  [ 60] getparam 0 .............................. <me>
  [ 62] pushint8 2 .............................. <2>
  [ 64] pusharglist 2 ........................... <me, 2>
  [ 66] objcall 12 .............................. <me.buttonLocH(2)>
  [ 68] pushint8 5 .............................. <5>
  [ 70] pusharglist 2 ........................... <me.buttonLocH(2), 5>
  [ 72] extcall 59 .............................. <point(me.buttonLocH(2), 5)>
  [ 74] setobjprop 60 ........................... pAlertSpr.loc = point(me.buttonLocH(2), 5)
  [ 76] getprop 29 .............................. <pAlertSpr>
  [ 78] pushint32 200000000 ..................... <200000000>
  [ 83] setobjprop 61 ........................... pAlertSpr.locZ = 200000000
  [ 85] getprop 29 .............................. <pAlertSpr>
  [ 87] getobjprop 52 ........................... <pAlertSpr.spriteNum>
  [ 89] getparam 0 .............................. <me>
  [ 91] pusharglist 1 ........................... <me>
  [ 93] objcall 42 .............................. <me.getID()>
  [ 95] pushcons 5 .............................. <"_alert_spr">
  [ 97] joinstr ................................. <me.getID() & "_alert_spr">
  [ 98] pusharglistnoret 2 ...................... <pAlertSpr.spriteNum, me.getID() & "_alert_spr">
  [100] extcall 62 .............................. setEventBroker(pAlertSpr.spriteNum, me.getID() & "_alert_spr")
  [102] getprop 29 .............................. <pAlertSpr>
  [104] pushsymb 24 ............................. <#eventProcAlert>
  [106] getparam 0 .............................. <me>
  [108] pusharglist 1 ........................... <me>
  [110] objcall 42 .............................. <me.getID()>
  [112] pushsymb 0 .............................. <#mouseUp>
  [114] pusharglistnoret 4 ...................... <pAlertSpr, #eventProcAlert, me.getID(), #mouseUp>
  [116] objcall 63 .............................. pAlertSpr.registerProcedure(#eventProcAlert, me.getID(), #mouseUp)
  [118] getprop 29 .............................. <pAlertSpr>
  [120] pushcons 6 .............................. <"cursor.finger">
  [122] pusharglistnoret 2 ...................... <pAlertSpr, "cursor.finger">
  [124] objcall 64 .............................. pAlertSpr.setcursor("cursor.finger")
  [126] pushzero ................................ <0>
  [127] setprop 32 .............................. pAlertTimer = 0
  [129] getparam 0 .............................. <me>
  [131] pusharglist 1 ........................... <me>
  [133] objcall 42 .............................. <me.getID()>
  [135] pusharglist 1 ........................... <me.getID()>
  [137] extcall 65 .............................. <receiveUpdate(me.getID())>
  [139] pusharglistnoret 1 ...................... <receiveUpdate(me.getID())>
  [141] extcall 44 .............................. return receiveUpdate(me.getID())
  [143] ret
end

on showModtoolButton me
  [  0] pushsymb 68 ............................. <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 67 .............................. <getObject(#session)>
  [  6] pushcons 7 .............................. <"user_rights">
  [  8] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [ 10] objcall 69 .............................. <getObject(#session).get("user_rights")>
  [ 12] pusharglist 1 ........................... <getObject(#session).get("user_rights")>
  [ 14] extcall 66 .............................. <listp(getObject(#session).get("user_rights"))>
  [ 16] not ..................................... <not listp(getObject(#session).get("user_rights"))>
  [ 17] jmpifz [ 25] ............................ if not listp(getObject(#session).get("user_rights")) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 44 .............................. return 0
  [ 25] pushsymb 68 ............................. <#session>
  [ 27] pusharglist 1 ........................... <#session>
  [ 29] extcall 67 .............................. <getObject(#session)>
  [ 31] pushcons 7 .............................. <"user_rights">
  [ 33] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [ 35] objcall 69 .............................. <getObject(#session).get("user_rights")>
  [ 37] pushcons 8 .............................. <"fuse_kick">
  [ 39] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_kick">
  [ 41] objcall 70 .............................. <getObject(#session).get("user_rights").getOne("fuse_kick")>
  [ 43] pushzero ................................ <0>
  [ 44] eq ...................................... <getObject(#session).get("user_rights").getOne("fuse_kick") = 0>
  [ 45] jmpifz [ 54] ............................ if getObject(#session).get("user_rights").getOne("fuse_kick") = 0 then
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 44 .............................. return 1
  [ 54] getprop 31 .............................. <pModtoolButtonSpr>
  [ 56] getobjprop 49 ........................... <pModtoolButtonSpr.ilk>
  [ 58] pushsymb 50 ............................. <#sprite>
  [ 60] nteq .................................... <pModtoolButtonSpr.ilk <> #sprite>
  [ 61] jmpifz [183] ............................ if pModtoolButtonSpr.ilk <> #sprite then
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 1 ........................... <me>
  [ 68] objcall 42 .............................. <me.getID()>
  [ 70] pusharglist 1 ........................... <me.getID()>
  [ 72] extcall 55 .............................. <reserveSprite(me.getID())>
  [ 74] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [ 76] extcall 50 .............................. <sprite(reserveSprite(me.getID()))>
  [ 78] setprop 31 .............................. pModtoolButtonSpr = sprite(reserveSprite(me.getID()))
  [ 80] getprop 31 .............................. <pModtoolButtonSpr>
  [ 82] pushzero ................................ <0>
  [ 83] pusharglist 1 ........................... <0>
  [ 85] extcall 50 .............................. <sprite(0)>
  [ 87] eq ...................................... <pModtoolButtonSpr = sprite(0)>
  [ 88] jmpifz [ 96] ............................ if pModtoolButtonSpr = sprite(0) then
  [ 91] pushzero ................................ <0>
  [ 92] pusharglistnoret 1 ...................... <0>
  [ 94] extcall 44 .............................. return 0
  [ 96] getprop 31 .............................. <pModtoolButtonSpr>
  [ 98] pushcons 9 .............................. <"mod_tool_icon">
  [100] pusharglist 1 ........................... <"mod_tool_icon">
  [102] extcall 56 .............................. <getmemnum("mod_tool_icon")>
  [104] setobjprop 57 ........................... pModtoolButtonSpr.memberNum = getmemnum("mod_tool_icon")
  [106] getprop 31 .............................. <pModtoolButtonSpr>
  [108] pushint8 8 .............................. <8>
  [110] setobjprop 58 ........................... pModtoolButtonSpr.ink = 8
  [112] getprop 31 .............................. <pModtoolButtonSpr>
  [114] getparam 0 .............................. <me>
  [116] pushint8 1 .............................. <1>
  [118] pusharglist 2 ........................... <me, 1>
  [120] objcall 12 .............................. <me.buttonLocH(1)>
  [122] pushint8 5 .............................. <5>
  [124] pusharglist 2 ........................... <me.buttonLocH(1), 5>
  [126] extcall 59 .............................. <point(me.buttonLocH(1), 5)>
  [128] setobjprop 60 ........................... pModtoolButtonSpr.loc = point(me.buttonLocH(1), 5)
  [130] getprop 31 .............................. <pModtoolButtonSpr>
  [132] pushint32 200000000 ..................... <200000000>
  [137] setobjprop 61 ........................... pModtoolButtonSpr.locZ = 200000000
  [139] getprop 31 .............................. <pModtoolButtonSpr>
  [141] getobjprop 52 ........................... <pModtoolButtonSpr.spriteNum>
  [143] getparam 0 .............................. <me>
  [145] pusharglist 1 ........................... <me>
  [147] objcall 42 .............................. <me.getID()>
  [149] pushcons 10 ............................. <"_modtool_spr">
  [151] joinstr ................................. <me.getID() & "_modtool_spr">
  [152] pusharglistnoret 2 ...................... <pModtoolButtonSpr.spriteNum, me.getID() & "_modtool_spr">
  [154] extcall 62 .............................. setEventBroker(pModtoolButtonSpr.spriteNum, me.getID() & "_modtool_spr")
  [156] getprop 31 .............................. <pModtoolButtonSpr>
  [158] pushsymb 25 ............................. <#eventProcModToolButton>
  [160] getparam 0 .............................. <me>
  [162] pusharglist 1 ........................... <me>
  [164] objcall 42 .............................. <me.getID()>
  [166] pushsymb 0 .............................. <#mouseUp>
  [168] pusharglistnoret 4 ...................... <pModtoolButtonSpr, #eventProcModToolButton, me.getID(), #mouseUp>
  [170] objcall 63 .............................. pModtoolButtonSpr.registerProcedure(#eventProcModToolButton, me.getID(), #mouseUp)
  [172] getprop 31 .............................. <pModtoolButtonSpr>
  [174] pushcons 6 .............................. <"cursor.finger">
  [176] pusharglistnoret 2 ...................... <pModtoolButtonSpr, "cursor.finger">
  [178] objcall 64 .............................. pModtoolButtonSpr.setcursor("cursor.finger")
  [180] pushzero ................................ <0>
  [181] setprop 32 .............................. pAlertTimer = 0
  [183] pushint8 1 .............................. <1>
  [185] pusharglistnoret 1 ...................... <1>
  [187] extcall 44 .............................. return 1
  [189] ret
end

on hideModtoolButton me
  [  0] getprop 31 .............................. <pModtoolButtonSpr>
  [  2] pusharglist 1 ........................... <pModtoolButtonSpr>
  [  4] extcall 71 .............................. <voidp(pModtoolButtonSpr)>
  [  6] jmpifz [ 14] ............................ if voidp(pModtoolButtonSpr) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 44 .............................. return 0
  [ 14] getprop 31 .............................. <pModtoolButtonSpr>
  [ 16] getobjprop 49 ........................... <pModtoolButtonSpr.ilk>
  [ 18] pushsymb 50 ............................. <#sprite>
  [ 20] eq ...................................... <pModtoolButtonSpr.ilk = #sprite>
  [ 21] jmpifz [ 78] ............................ if pModtoolButtonSpr.ilk = #sprite then
  [ 24] getprop 31 .............................. <pModtoolButtonSpr>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglist 1 ........................... <0>
  [ 29] extcall 50 .............................. <sprite(0)>
  [ 31] eq ...................................... <pModtoolButtonSpr = sprite(0)>
  [ 32] jmpifz [ 40] ............................ if pModtoolButtonSpr = sprite(0) then
  [ 35] pushzero ................................ <0>
  [ 36] pusharglistnoret 1 ...................... <0>
  [ 38] extcall 44 .............................. return 0
  [ 40] getprop 31 .............................. <pModtoolButtonSpr>
  [ 42] pushsymb 72 ............................. <#arrow>
  [ 44] pusharglistnoret 2 ...................... <pModtoolButtonSpr, #arrow>
  [ 46] objcall 64 .............................. pModtoolButtonSpr.setcursor(#arrow)
  [ 48] getprop 31 .............................. <pModtoolButtonSpr>
  [ 50] pushsymb 0 .............................. <#mouseUp>
  [ 52] pusharglistnoret 2 ...................... <pModtoolButtonSpr, #mouseUp>
  [ 54] objcall 73 .............................. pModtoolButtonSpr.removeProcedure(#mouseUp)
  [ 56] getprop 31 .............................. <pModtoolButtonSpr>
  [ 58] getobjprop 52 ........................... <pModtoolButtonSpr.spriteNum>
  [ 60] pusharglistnoret 1 ...................... <pModtoolButtonSpr.spriteNum>
  [ 62] extcall 74 .............................. removeEventBroker(pModtoolButtonSpr.spriteNum)
  [ 64] getprop 31 .............................. <pModtoolButtonSpr>
  [ 66] getobjprop 52 ........................... <pModtoolButtonSpr.spriteNum>
  [ 68] pusharglistnoret 1 ...................... <pModtoolButtonSpr.spriteNum>
  [ 70] extcall 51 .............................. releaseSprite(pModtoolButtonSpr.spriteNum)
  [ 72] pusharglist 0 ........................... <>
  [ 74] extcall 30 .............................. <VOID>
  [ 76] setprop 31 .............................. pModtoolButtonSpr = VOID
  [ 78] ret
end

on hideAlert me
  [  0] getprop 29 .............................. <pAlertSpr>
  [  2] pushsymb 50 ............................. <#sprite>
  [  4] pusharglist 2 ........................... <pAlertSpr, #sprite>
  [  6] extcall 49 .............................. <ilk(pAlertSpr, #sprite)>
  [  8] jmpifz [ 21] ............................ if ilk(pAlertSpr, #sprite) then
  [ 11] getprop 29 .............................. <pAlertSpr>
  [ 13] pushcons 4 .............................. <"hobba_alert_0">
  [ 15] pusharglist 1 ........................... <"hobba_alert_0">
  [ 17] extcall 56 .............................. <getmemnum("hobba_alert_0")>
  [ 19] setobjprop 57 ........................... pAlertSpr.memberNum = getmemnum("hobba_alert_0")
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 1 ........................... <me>
  [ 25] objcall 42 .............................. <me.getID()>
  [ 27] pusharglist 1 ........................... <me.getID()>
  [ 29] extcall 46 .............................. <removeUpdate(me.getID())>
  [ 31] pusharglistnoret 1 ...................... <removeUpdate(me.getID())>
  [ 33] extcall 44 .............................. return removeUpdate(me.getID())
  [ 35] ret
end

on showCryWnd me
  [  0] getprop 26 .............................. <pCryWindowID>
  [  2] pusharglist 1 ........................... <pCryWindowID>
  [  4] extcall 47 .............................. <windowExists(pCryWindowID)>
  [  6] jmpifz [ 38] ............................ if windowExists(pCryWindowID) then / else
  [  9] getprop 26 .............................. <pCryWindowID>
  [ 11] pusharglist 1 ........................... <pCryWindowID>
  [ 13] extcall 75 .............................. <getWindow(pCryWindowID)>
  [ 15] setlocal 0 .............................. tWndObj = getWindow(pCryWindowID)
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 76 .............................. <me.getComponent()>
  [ 23] pusharglist 1 ........................... <me.getComponent()>
  [ 25] objcall 77 .............................. <me.getComponent().getCryDataBase()>
  [ 27] setlocal 1 .............................. tCryDB = me.getComponent().getCryDataBase()
  [ 29] getlocal 1 .............................. <tCryDB>
  [ 31] getobjprop 78 ........................... <tCryDB.count>
  [ 33] setprop 34 .............................. pCurrCryNum = tCryDB.count
  [ 35] jmp [124]
  [ 38] getprop 26 .............................. <pCryWindowID>
  [ 40] pushcons 11 ............................. <"habbo_basic.window">
  [ 42] pusharglistnoret 2 ...................... <pCryWindowID, "habbo_basic.window">
  [ 44] extcall 79 .............................. createWindow(pCryWindowID, "habbo_basic.window")
  [ 46] getprop 26 .............................. <pCryWindowID>
  [ 48] pusharglist 1 ........................... <pCryWindowID>
  [ 50] extcall 75 .............................. <getWindow(pCryWindowID)>
  [ 52] setlocal 0 .............................. tWndObj = getWindow(pCryWindowID)
  [ 54] getlocal 0 .............................. <tWndObj>
  [ 56] pushcons 12 ............................. <"habbo_hobba_alert.window">
  [ 58] pusharglistnoret 2 ...................... <tWndObj, "habbo_hobba_alert.window">
  [ 60] objcall 80 .............................. tWndObj.merge("habbo_hobba_alert.window")
  [ 62] getlocal 0 .............................. <tWndObj>
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 1 ........................... <me>
  [ 68] objcall 42 .............................. <me.getID()>
  [ 70] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [ 72] objcall 81 .............................. tWndObj.registerClient(me.getID())
  [ 74] getlocal 0 .............................. <tWndObj>
  [ 76] pushsymb 22 ............................. <#eventProcCryWnd>
  [ 78] getparam 0 .............................. <me>
  [ 80] pusharglist 1 ........................... <me>
  [ 82] objcall 42 .............................. <me.getID()>
  [ 84] pushsymb 0 .............................. <#mouseUp>
  [ 86] pusharglistnoret 4 ...................... <tWndObj, #eventProcCryWnd, me.getID(), #mouseUp>
  [ 88] objcall 63 .............................. tWndObj.registerProcedure(#eventProcCryWnd, me.getID(), #mouseUp)
  [ 90] getparam 0 .............................. <me>
  [ 92] pusharglist 1 ........................... <me>
  [ 94] objcall 76 .............................. <me.getComponent()>
  [ 96] pusharglist 1 ........................... <me.getComponent()>
  [ 98] objcall 77 .............................. <me.getComponent().getCryDataBase()>
  [100] setlocal 1 .............................. tCryDB = me.getComponent().getCryDataBase()
  [102] getprop 34 .............................. <pCurrCryNum>
  [104] pushint8 1 .............................. <1>
  [106] lt ...................................... <pCurrCryNum < 1>
  [107] getprop 34 .............................. <pCurrCryNum>
  [109] getlocal 1 .............................. <tCryDB>
  [111] getobjprop 78 ........................... <tCryDB.count>
  [113] gt ...................................... <pCurrCryNum > tCryDB.count>
  [114] or ...................................... <(pCurrCryNum < 1) or (pCurrCryNum > tCryDB.count)>
  [115] jmpifz [124] ............................ if (pCurrCryNum < 1) or (pCurrCryNum > tCryDB.count) then
  [118] getlocal 1 .............................. <tCryDB>
  [120] getobjprop 78 ........................... <tCryDB.count>
  [122] setprop 34 .............................. pCurrCryNum = tCryDB.count
  [124] pushcons 13 ............................. <"browse">
  [126] setprop 38 .............................. pCryWndMode = "browse"
  [128] pushsymb 68 ............................. <#session>
  [130] pusharglist 1 ........................... <#session>
  [132] extcall 67 .............................. <getObject(#session)>
  [134] pushcons 7 .............................. <"user_rights">
  [136] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [138] objcall 69 .............................. <getObject(#session).get("user_rights")>
  [140] pushcons 14 ............................. <"fuse_see_chat_log_link">
  [142] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_see_chat_log_link">
  [144] objcall 70 .............................. <getObject(#session).get("user_rights").getOne("fuse_see_chat_log_link")>
  [146] pushzero ................................ <0>
  [147] eq ...................................... <getObject(#session).get("user_rights").getOne("fuse_see_chat_log_link") = 0>
  [148] jmpifz [163] ............................ if getObject(#session).get("user_rights").getOne("fuse_see_chat_log_link") = 0 then
  [151] getlocal 0 .............................. <tWndObj>
  [153] pushcons 15 ............................. <"hobba_seelog">
  [155] pusharglist 2 ........................... <tWndObj, "hobba_seelog">
  [157] objcall 82 .............................. <tWndObj.getElement("hobba_seelog")>
  [159] pusharglistnoret 1 ...................... <tWndObj.getElement("hobba_seelog")>
  [161] objcall 83 .............................. tWndObj.getElement("hobba_seelog").hide()
  [163] getparam 0 .............................. <me>
  [165] getprop 34 .............................. <pCurrCryNum>
  [167] pusharglist 2 ........................... <me, pCurrCryNum>
  [169] objcall 17 .............................. <me.fillCryData(pCurrCryNum)>
  [171] pusharglistnoret 1 ...................... <me.fillCryData(pCurrCryNum)>
  [173] extcall 44 .............................. return me.fillCryData(pCurrCryNum)
  [175] ret
end

on hideCryWnd me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 35 .............................. pCurrCryData = [:]
  [  5] getparam 0 .............................. <me>
  [  7] pusharglistnoret 1 ...................... <me>
  [  9] objcall 6 ............................... me.hideAlert()
  [ 11] getprop 26 .............................. <pCryWindowID>
  [ 13] pusharglist 1 ........................... <pCryWindowID>
  [ 15] extcall 47 .............................. <windowExists(pCryWindowID)>
  [ 17] jmpifz [ 37] ............................ if windowExists(pCryWindowID) then / else
  [ 20] pushcons 3 .............................. <"closed">
  [ 22] setprop 38 .............................. pCryWndMode = "closed"
  [ 24] getprop 26 .............................. <pCryWindowID>
  [ 26] pusharglist 1 ........................... <pCryWindowID>
  [ 28] extcall 48 .............................. <removeWindow(pCryWindowID)>
  [ 30] pusharglistnoret 1 ...................... <removeWindow(pCryWindowID)>
  [ 32] extcall 44 .............................. return removeWindow(pCryWindowID)
  [ 34] jmp [ 42]
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 44 .............................. return 0
  [ 42] ret
end

on hideModToolWnd me
  [  0] getprop 28 .............................. <pModtoolWindowID>
  [  2] pusharglist 1 ........................... <pModtoolWindowID>
  [  4] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [  6] jmpifz [ 22] ............................ if windowExists(pModtoolWindowID) then / else
  [  9] getprop 28 .............................. <pModtoolWindowID>
  [ 11] pusharglist 1 ........................... <pModtoolWindowID>
  [ 13] extcall 48 .............................. <removeWindow(pModtoolWindowID)>
  [ 15] pusharglistnoret 1 ...................... <removeWindow(pModtoolWindowID)>
  [ 17] extcall 44 .............................. return removeWindow(pModtoolWindowID)
  [ 19] jmp [ 27]
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 44 .............................. return 0
  [ 27] ret
end

on updateCryWnd me
  [  0] getprop 38 .............................. <pCryWndMode>
  [  2] pushcons 13 ............................. <"browse">
  [  4] nteq .................................... <pCryWndMode <> "browse">
  [  5] jmpifz [ 14] ............................ if pCryWndMode <> "browse" then
  [  8] pushint8 1 .............................. <1>
  [ 10] pusharglistnoret 1 ...................... <1>
  [ 12] extcall 44 .............................. return 1
  [ 14] getparam 0 .............................. <me>
  [ 16] getprop 33 .............................. <pCurrCryID>
  [ 18] pusharglist 2 ........................... <me, pCurrCryID>
  [ 20] objcall 17 .............................. <me.fillCryData(pCurrCryID)>
  [ 22] pusharglistnoret 1 ...................... <me.fillCryData(pCurrCryID)>
  [ 24] extcall 44 .............................. return me.fillCryData(pCurrCryID)
  [ 26] ret
end

on showModToolWnd me
  [  0] getprop 28 .............................. <pModtoolWindowID>
  [  2] pusharglist 1 ........................... <pModtoolWindowID>
  [  4] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [  6] jmpifz [ 26] ............................ if windowExists(pModtoolWindowID) then / else
  [  9] getprop 28 .............................. <pModtoolWindowID>
  [ 11] pusharglist 1 ........................... <pModtoolWindowID>
  [ 13] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [ 15] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [ 17] getlocal 0 .............................. <tWndObj>
  [ 19] pusharglistnoret 1 ...................... <tWndObj>
  [ 21] objcall 86 .............................. tWndObj.unmerge()
  [ 23] jmp [ 54]
  [ 26] getprop 28 .............................. <pModtoolWindowID>
  [ 28] pushcons 16 ............................. <"habbo_full.window">
  [ 30] pusharglistnoret 2 ...................... <pModtoolWindowID, "habbo_full.window">
  [ 32] extcall 79 .............................. createWindow(pModtoolWindowID, "habbo_full.window")
  [ 34] getprop 28 .............................. <pModtoolWindowID>
  [ 36] pusharglist 1 ........................... <pModtoolWindowID>
  [ 38] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [ 40] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [ 42] getlocal 0 .............................. <tWndObj>
  [ 44] pushzero ................................ <0>
  [ 45] eq ...................................... <tWndObj = 0>
  [ 46] jmpifz [ 54] ............................ if tWndObj = 0 then
  [ 49] pushzero ................................ <0>
  [ 50] pusharglistnoret 1 ...................... <0>
  [ 52] extcall 44 .............................. return 0
  [ 54] getlocal 0 .............................. <tWndObj>
  [ 56] pushcons 17 ............................. <"habbo_modtool_main.window">
  [ 58] pusharglist 2 ........................... <tWndObj, "habbo_modtool_main.window">
  [ 60] objcall 80 .............................. <tWndObj.merge("habbo_modtool_main.window")>
  [ 62] not ..................................... <not tWndObj.merge("habbo_modtool_main.window")>
  [ 63] jmpifz [ 76] ............................ if not tWndObj.merge("habbo_modtool_main.window") then
  [ 66] getprop 28 .............................. <pModtoolWindowID>
  [ 68] pusharglist 1 ........................... <pModtoolWindowID>
  [ 70] extcall 48 .............................. <removeWindow(pModtoolWindowID)>
  [ 72] pusharglistnoret 1 ...................... <removeWindow(pModtoolWindowID)>
  [ 74] extcall 44 .............................. return removeWindow(pModtoolWindowID)
  [ 76] getlocal 0 .............................. <tWndObj>
  [ 78] getparam 0 .............................. <me>
  [ 80] pusharglist 1 ........................... <me>
  [ 82] objcall 42 .............................. <me.getID()>
  [ 84] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [ 86] objcall 81 .............................. tWndObj.registerClient(me.getID())
  [ 88] getlocal 0 .............................. <tWndObj>
  [ 90] pushsymb 23 ............................. <#eventProcModToolWnd>
  [ 92] getparam 0 .............................. <me>
  [ 94] pusharglist 1 ........................... <me>
  [ 96] objcall 42 .............................. <me.getID()>
  [ 98] pushsymb 0 .............................. <#mouseUp>
  [100] pusharglistnoret 4 ...................... <tWndObj, #eventProcModToolWnd, me.getID(), #mouseUp>
  [102] objcall 63 .............................. tWndObj.registerProcedure(#eventProcModToolWnd, me.getID(), #mouseUp)
  [104] getlocal 0 .............................. <tWndObj>
  [106] pushsymb 23 ............................. <#eventProcModToolWnd>
  [108] getparam 0 .............................. <me>
  [110] pusharglist 1 ........................... <me>
  [112] objcall 42 .............................. <me.getID()>
  [114] pushsymb 87 ............................. <#keyDown>
  [116] pusharglistnoret 4 ...................... <tWndObj, #eventProcModToolWnd, me.getID(), #keyDown>
  [118] objcall 63 .............................. tWndObj.registerProcedure(#eventProcModToolWnd, me.getID(), #keyDown)
  [120] pushint8 1 .............................. <1>
  [122] pusharglistnoret 1 ...................... <1>
  [124] extcall 44 .............................. return 1
  [126] ret
end

on buttonLocH me, tPos
  [  0] getparam 1 .............................. <tPos>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tPos = 1>
  [  5] jmpifz [ 17] ............................ if tPos = 1 then / else
  [  8] pushint8 5 .............................. <5>
  [ 10] pusharglistnoret 1 ...................... <5>
  [ 12] extcall 44 .............................. return 5
  [ 14] jmp [ 31]
  [ 17] getparam 1 .............................. <tPos>
  [ 19] pushint8 2 .............................. <2>
  [ 21] eq ...................................... <tPos = 2>
  [ 22] jmpifz [ 31] ............................ if tPos = 2 then
  [ 25] pushint8 35 ............................. <35>
  [ 27] pusharglistnoret 1 ...................... <35>
  [ 29] extcall 44 .............................. return 35
  [ 31] pushint8 5 .............................. <5>
  [ 33] pusharglistnoret 1 ...................... <5>
  [ 35] extcall 44 .............................. return 5
  [ 37] ret
end

on userClicked me, tName
  [  0] getprop 28 .............................. <pModtoolWindowID>
  [  2] pusharglist 1 ........................... <pModtoolWindowID>
  [  4] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [  6] not ..................................... <not windowExists(pModtoolWindowID)>
  [  7] jmpifz [ 16] ............................ if not windowExists(pModtoolWindowID) then
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 44 .............................. return 1
  [ 16] getparam 1 .............................. <tName>
  [ 18] pushsymb 68 ............................. <#session>
  [ 20] pusharglist 1 ........................... <#session>
  [ 22] extcall 67 .............................. <getObject(#session)>
  [ 24] pushcons 18 ............................. <"user_name">
  [ 26] pusharglist 2 ........................... <getObject(#session), "user_name">
  [ 28] objcall 69 .............................. <getObject(#session).get("user_name")>
  [ 30] eq ...................................... <tName = getObject(#session).get("user_name")>
  [ 31] jmpifz [ 40] ............................ if tName = getObject(#session).get("user_name") then
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 1 ...................... <1>
  [ 38] extcall 44 .............................. return 1
  [ 40] getprop 28 .............................. <pModtoolWindowID>
  [ 42] pusharglist 1 ........................... <pModtoolWindowID>
  [ 44] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [ 46] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [ 48] getlocal 0 .............................. <tWndObj>
  [ 50] pushcons 19 ............................. <"modtool_name">
  [ 52] pusharglist 2 ........................... <tWndObj, "modtool_name">
  [ 54] objcall 89 .............................. <tWndObj.elementExists("modtool_name")>
  [ 56] jmpifz [ 73] ............................ if tWndObj.elementExists("modtool_name") then
  [ 59] getlocal 0 .............................. <tWndObj>
  [ 61] pushcons 19 ............................. <"modtool_name">
  [ 63] pusharglist 2 ........................... <tWndObj, "modtool_name">
  [ 65] objcall 82 .............................. <tWndObj.getElement("modtool_name")>
  [ 67] getparam 1 .............................. <tName>
  [ 69] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_name"), tName>
  [ 71] objcall 90 .............................. tWndObj.getElement("modtool_name").setText(tName)
  [ 73] pushint8 1 .............................. <1>
  [ 75] pusharglistnoret 1 ...................... <1>
  [ 77] extcall 44 .............................. return 1
  [ 79] ret
end

on changeModtoolView me, tWndName, tAction
  [  0] getparam 2 .............................. <tAction>
  [  2] setprop 37 .............................. pModToolMode = tAction
  [  4] getprop 28 .............................. <pModtoolWindowID>
  [  6] pusharglist 1 ........................... <pModtoolWindowID>
  [  8] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [ 10] jmpifz [ 30] ............................ if windowExists(pModtoolWindowID) then / else
  [ 13] getprop 28 .............................. <pModtoolWindowID>
  [ 15] pusharglist 1 ........................... <pModtoolWindowID>
  [ 17] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [ 19] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [ 21] getlocal 0 .............................. <tWndObj>
  [ 23] pusharglistnoret 1 ...................... <tWndObj>
  [ 25] objcall 86 .............................. tWndObj.unmerge()
  [ 27] jmp [105]
  [ 30] getprop 28 .............................. <pModtoolWindowID>
  [ 32] pushcons 16 ............................. <"habbo_full.window">
  [ 34] pusharglistnoret 2 ...................... <pModtoolWindowID, "habbo_full.window">
  [ 36] extcall 79 .............................. createWindow(pModtoolWindowID, "habbo_full.window")
  [ 38] getprop 28 .............................. <pModtoolWindowID>
  [ 40] pusharglist 1 ........................... <pModtoolWindowID>
  [ 42] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [ 44] not ..................................... <not windowExists(pModtoolWindowID)>
  [ 45] jmpifz [ 53] ............................ if not windowExists(pModtoolWindowID) then
  [ 48] pushzero ................................ <0>
  [ 49] pusharglistnoret 1 ...................... <0>
  [ 51] extcall 44 .............................. return 0
  [ 53] getprop 28 .............................. <pModtoolWindowID>
  [ 55] pusharglist 1 ........................... <pModtoolWindowID>
  [ 57] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [ 59] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [ 61] getlocal 0 .............................. <tWndObj>
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglist 1 ........................... <me>
  [ 67] objcall 42 .............................. <me.getID()>
  [ 69] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [ 71] objcall 81 .............................. tWndObj.registerClient(me.getID())
  [ 73] getlocal 0 .............................. <tWndObj>
  [ 75] pushsymb 23 ............................. <#eventProcModToolWnd>
  [ 77] getparam 0 .............................. <me>
  [ 79] pusharglist 1 ........................... <me>
  [ 81] objcall 42 .............................. <me.getID()>
  [ 83] pushsymb 0 .............................. <#mouseUp>
  [ 85] pusharglistnoret 4 ...................... <tWndObj, #eventProcModToolWnd, me.getID(), #mouseUp>
  [ 87] objcall 63 .............................. tWndObj.registerProcedure(#eventProcModToolWnd, me.getID(), #mouseUp)
  [ 89] getlocal 0 .............................. <tWndObj>
  [ 91] pushsymb 23 ............................. <#eventProcModToolWnd>
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglist 1 ........................... <me>
  [ 97] objcall 42 .............................. <me.getID()>
  [ 99] pushsymb 87 ............................. <#keyDown>
  [101] pusharglistnoret 4 ...................... <tWndObj, #eventProcModToolWnd, me.getID(), #keyDown>
  [103] objcall 63 .............................. tWndObj.registerProcedure(#eventProcModToolWnd, me.getID(), #keyDown)
  [105] pushcons 2 .............................. <EMPTY>
  [107] setlocal 1 .............................. tHeader = EMPTY
  [109] getparam 1 .............................. <tWndName>
  [111] peek 0 .................................. case tWndName of
  [113] pushcons 20 ............................. <"user">
  [115] eq
  [116] jmpifz [222] ............................ (case) "user":
  [119] getlocal 0 .............................. <tWndObj>
  [121] pushcons 21 ............................. <"habbo_modtool_user.window">
  [123] pusharglist 2 ........................... <tWndObj, "habbo_modtool_user.window">
  [125] objcall 80 .............................. <tWndObj.merge("habbo_modtool_user.window")>
  [127] not ..................................... <not tWndObj.merge("habbo_modtool_user.window")>
  [128] jmpifz [143] ............................ if not tWndObj.merge("habbo_modtool_user.window") then
  [131] pop 1
  [133] getprop 28 .............................. <pModtoolWindowID>
  [135] pusharglist 1 ........................... <pModtoolWindowID>
  [137] extcall 48 .............................. <removeWindow(pModtoolWindowID)>
  [139] pusharglistnoret 1 ...................... <removeWindow(pModtoolWindowID)>
  [141] extcall 44 .............................. return removeWindow(pModtoolWindowID)
  [143] getparam 2 .............................. <tAction>
  [145] peek 0 .................................. case tAction of
  [147] pushcons 22 ............................. <"kick">
  [149] eq
  [150] jmpifz [164] ............................ (case) "kick":
  [153] pushcons 23 ............................. <"modtool_kickuser">
  [155] pusharglist 1 ........................... <"modtool_kickuser">
  [157] extcall 27 .............................. <getText("modtool_kickuser")>
  [159] setlocal 1 .............................. tHeader = getText("modtool_kickuser")
  [161] jmp [199]
  [164] peek 0
  [166] pushcons 24 ............................. <"alert">
  [168] eq
  [169] jmpifz [183] ............................ (case) "alert":
  [172] pushcons 25 ............................. <"modtool_alertuser">
  [174] pusharglist 1 ........................... <"modtool_alertuser">
  [176] extcall 27 .............................. <getText("modtool_alertuser")>
  [178] setlocal 1 .............................. tHeader = getText("modtool_alertuser")
  [180] jmp [199]
  [183] peek 0
  [185] pushcons 26 ............................. <"ban">
  [187] eq
  [188] jmpifz [199] ............................ (case) "ban":
  [191] pushcons 27 ............................. <"modtool_banuser">
  [193] pusharglist 1 ........................... <"modtool_banuser">
  [195] extcall 27 .............................. <getText("modtool_banuser")>
  [197] setlocal 1 .............................. tHeader = getText("modtool_banuser")
  [199] pop 1 ................................... end case
  [201] getlocal 0 .............................. <tWndObj>
  [203] pushcons 28 ............................. <"modtool_subtitle">
  [205] pusharglist 2 ........................... <tWndObj, "modtool_subtitle">
  [207] objcall 82 .............................. <tWndObj.getElement("modtool_subtitle")>
  [209] pushcons 29 ............................. <"modtool_message">
  [211] pusharglist 1 ........................... <"modtool_message">
  [213] extcall 27 .............................. <getText("modtool_message")>
  [215] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_subtitle"), getText("modtool_message")>
  [217] objcall 90 .............................. tWndObj.getElement("modtool_subtitle").setText(getText("modtool_message"))
  [219] jmp [324]
  [222] peek 0
  [224] pushcons 30 ............................. <"room">
  [226] eq
  [227] jmpifz [296] ............................ (case) "room":
  [230] getlocal 0 .............................. <tWndObj>
  [232] pushcons 31 ............................. <"habbo_modtool_room.window">
  [234] pusharglist 2 ........................... <tWndObj, "habbo_modtool_room.window">
  [236] objcall 80 .............................. <tWndObj.merge("habbo_modtool_room.window")>
  [238] not ..................................... <not tWndObj.merge("habbo_modtool_room.window")>
  [239] jmpifz [254] ............................ if not tWndObj.merge("habbo_modtool_room.window") then
  [242] pop 1
  [244] getprop 28 .............................. <pModtoolWindowID>
  [246] pusharglist 1 ........................... <pModtoolWindowID>
  [248] extcall 48 .............................. <removeWindow(pModtoolWindowID)>
  [250] pusharglistnoret 1 ...................... <removeWindow(pModtoolWindowID)>
  [252] extcall 44 .............................. return removeWindow(pModtoolWindowID)
  [254] getparam 2 .............................. <tAction>
  [256] peek 0 .................................. case tAction of
  [258] pushcons 32 ............................. <"roomalert">
  [260] eq
  [261] jmpifz [275] ............................ (case) "roomalert":
  [264] pushcons 33 ............................. <"modtool_roomalert">
  [266] pusharglist 1 ........................... <"modtool_roomalert">
  [268] extcall 27 .............................. <getText("modtool_roomalert")>
  [270] setlocal 1 .............................. tHeader = getText("modtool_roomalert")
  [272] jmp [291]
  [275] peek 0
  [277] pushcons 34 ............................. <"roomkick">
  [279] eq
  [280] jmpifz [291] ............................ (case) "roomkick":
  [283] pushcons 35 ............................. <"modtool_roomkick">
  [285] pusharglist 1 ........................... <"modtool_roomkick">
  [287] extcall 27 .............................. <getText("modtool_roomkick")>
  [289] setlocal 1 .............................. tHeader = getText("modtool_roomkick")
  [291] pop 1 ................................... end case
  [293] jmp [324]
  [296] peek 0
  [298] pushcons 26 ............................. <"ban">
  [300] eq
  [301] jmpifz [324] ............................ (case) "ban":
  [304] getlocal 0 .............................. <tWndObj>
  [306] pushcons 36 ............................. <"habbo_modtool_ban.window">
  [308] pusharglistnoret 2 ...................... <tWndObj, "habbo_modtool_ban.window">
  [310] objcall 80 .............................. tWndObj.merge("habbo_modtool_ban.window")
  [312] getparam 0 .............................. <me>
  [314] pusharglistnoret 1 ...................... <me>
  [316] objcall 18 .............................. me.InitializeBanCheckBoxes()
  [318] getparam 0 .............................. <me>
  [320] pusharglistnoret 1 ...................... <me>
  [322] objcall 19 .............................. me.initializeBanDropDown()
  [324] pop 1 ................................... end case
  [326] getlocal 1 .............................. <tHeader>
  [328] pushcons 2 .............................. <EMPTY>
  [330] nteq .................................... <tHeader <> EMPTY>
  [331] jmpifz [348] ............................ if tHeader <> EMPTY then
  [334] getlocal 0 .............................. <tWndObj>
  [336] pushcons 37 ............................. <"modtool_title">
  [338] pusharglist 2 ........................... <tWndObj, "modtool_title">
  [340] objcall 82 .............................. <tWndObj.getElement("modtool_title")>
  [342] getlocal 1 .............................. <tHeader>
  [344] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_title"), tHeader>
  [346] objcall 90 .............................. tWndObj.getElement("modtool_title").setText(tHeader)
  [348] pushint8 1 .............................. <1>
  [350] pusharglistnoret 1 ...................... <1>
  [352] extcall 44 .............................. return 1
  [354] ret
end

on openCryReplyWindow me
  [  0] getprop 26 .............................. <pCryWindowID>
  [  2] pusharglist 1 ........................... <pCryWindowID>
  [  4] extcall 47 .............................. <windowExists(pCryWindowID)>
  [  6] not ..................................... <not windowExists(pCryWindowID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pCryWindowID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 44 .............................. return 0
  [ 15] getprop 26 .............................. <pCryWindowID>
  [ 17] pusharglist 1 ........................... <pCryWindowID>
  [ 19] extcall 75 .............................. <getWindow(pCryWindowID)>
  [ 21] setlocal 0 .............................. tWndObj = getWindow(pCryWindowID)
  [ 23] pushcons 38 ............................. <"reply">
  [ 25] setprop 38 .............................. pCryWndMode = "reply"
  [ 27] getlocal 0 .............................. <tWndObj>
  [ 29] pusharglistnoret 1 ...................... <tWndObj>
  [ 31] objcall 86 .............................. tWndObj.unmerge()
  [ 33] getlocal 0 .............................. <tWndObj>
  [ 35] pushcons 39 ............................. <"habbo_hobba_reply.window">
  [ 37] pusharglist 2 ........................... <tWndObj, "habbo_hobba_reply.window">
  [ 39] objcall 80 .............................. <tWndObj.merge("habbo_hobba_reply.window")>
  [ 41] not ..................................... <not tWndObj.merge("habbo_hobba_reply.window")>
  [ 42] jmpifz [ 55] ............................ if not tWndObj.merge("habbo_hobba_reply.window") then
  [ 45] getprop 26 .............................. <pCryWindowID>
  [ 47] pusharglist 1 ........................... <pCryWindowID>
  [ 49] extcall 48 .............................. <removeWindow(pCryWindowID)>
  [ 51] pusharglistnoret 1 ...................... <removeWindow(pCryWindowID)>
  [ 53] extcall 44 .............................. return removeWindow(pCryWindowID)
  [ 55] getprop 35 .............................. <pCurrCryData>
  [ 57] pushsymb 95 ............................. <#sender>
  [ 59] pusharglist 2 ........................... <pCurrCryData, #sender>
  [ 61] objcall 96 .............................. <pCurrCryData[#sender]>
  [ 63] setlocal 1 .............................. tName = pCurrCryData[#sender]
  [ 65] getprop 35 .............................. <pCurrCryData>
  [ 67] pushsymb 97 ............................. <#msg>
  [ 69] pusharglist 2 ........................... <pCurrCryData, #msg>
  [ 71] objcall 96 .............................. <pCurrCryData[#msg]>
  [ 73] setlocal 2 .............................. tMsg = pCurrCryData[#msg]
  [ 75] getlocal 0 .............................. <tWndObj>
  [ 77] pushcons 40 ............................. <"hobba_reply_header">
  [ 79] pusharglist 2 ........................... <tWndObj, "hobba_reply_header">
  [ 81] objcall 82 .............................. <tWndObj.getElement("hobba_reply_header")>
  [ 83] pushcons 41 ............................. <"hobba_reply_cfh">
  [ 85] pusharglist 1 ........................... <"hobba_reply_cfh">
  [ 87] extcall 27 .............................. <getText("hobba_reply_cfh")>
  [ 89] getlocal 1 .............................. <tName>
  [ 91] joinpadstr .............................. <getText("hobba_reply_cfh") && tName>
  [ 92] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_reply_header"), getText("hobba_reply_cfh") && tName>
  [ 94] objcall 90 .............................. tWndObj.getElement("hobba_reply_header").setText(getText("hobba_reply_cfh") && tName)
  [ 96] getlocal 0 .............................. <tWndObj>
  [ 98] pushcons 42 ............................. <"hobba_reply_text">
  [100] pusharglist 2 ........................... <tWndObj, "hobba_reply_text">
  [102] objcall 82 .............................. <tWndObj.getElement("hobba_reply_text")>
  [104] getlocal 2 .............................. <tMsg>
  [106] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_reply_text"), tMsg>
  [108] objcall 90 .............................. tWndObj.getElement("hobba_reply_text").setText(tMsg)
  [110] pushint8 1 .............................. <1>
  [112] pusharglistnoret 1 ...................... <1>
  [114] extcall 44 .............................. return 1
  [116] ret
end

on update me
  [  0] getprop 32 .............................. <pAlertTimer>
  [  2] pushint8 1 .............................. <1>
  [  4] add ..................................... <pAlertTimer + 1>
  [  5] pushint8 4 .............................. <4>
  [  7] mod ..................................... <(pAlertTimer + 1) mod 4>
  [  8] setprop 32 .............................. pAlertTimer = (pAlertTimer + 1) mod 4
  [ 10] getprop 32 .............................. <pAlertTimer>
  [ 12] pushzero ................................ <0>
  [ 13] nteq .................................... <pAlertTimer <> 0>
  [ 14] jmpifz [ 23] ............................ if pAlertTimer <> 0 then
  [ 17] pushint8 1 .............................. <1>
  [ 19] pusharglistnoret 1 ...................... <1>
  [ 21] extcall 44 .............................. return 1
  [ 23] getprop 29 .............................. <pAlertSpr>
  [ 25] getobjprop 49 ........................... <pAlertSpr.ilk>
  [ 27] pushsymb 50 ............................. <#sprite>
  [ 29] nteq .................................... <pAlertSpr.ilk <> #sprite>
  [ 30] jmpifz [ 47] ............................ if pAlertSpr.ilk <> #sprite then
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglist 1 ........................... <me>
  [ 37] objcall 42 .............................. <me.getID()>
  [ 39] pusharglist 1 ........................... <me.getID()>
  [ 41] extcall 46 .............................. <removeUpdate(me.getID())>
  [ 43] pusharglistnoret 1 ...................... <removeUpdate(me.getID())>
  [ 45] extcall 44 .............................. return removeUpdate(me.getID())
  [ 47] getprop 29 .............................. <pAlertSpr>
  [ 49] getchainedprop 99 ....................... <pAlertSpr.member>
  [ 51] getobjprop 100 .......................... <pAlertSpr.member.name>
  [ 53] setlocal 0 .............................. tName = pAlertSpr.member.name
  [ 55] getlocal 0 .............................. <tName>
  [ 57] pushsymb 102 ............................ <#char>
  [ 59] getlocal 0 .............................. <tName>
  [ 61] pusharglist 1 ........................... <tName>
  [ 63] extcall 103 ............................. <length(tName)>
  [ 65] pusharglist 3 ........................... <tName, #char, length(tName)>
  [ 67] objcall 104 ............................. <tName.char[length(tName)]>
  [ 69] pusharglist 1 ........................... <tName.char[length(tName)]>
  [ 71] extcall 101 ............................. <integer(tName.char[length(tName)])>
  [ 73] setlocal 1 .............................. tNum = integer(tName.char[length(tName)])
  [ 75] getlocal 0 .............................. <tName>
  [ 77] pushsymb 102 ............................ <#char>
  [ 79] pushint8 1 .............................. <1>
  [ 81] getlocal 0 .............................. <tName>
  [ 83] pusharglist 1 ........................... <tName>
  [ 85] extcall 103 ............................. <length(tName)>
  [ 87] pushint8 1 .............................. <1>
  [ 89] sub ..................................... <length(tName) - 1>
  [ 90] pusharglist 4 ........................... <tName, #char, 1, length(tName) - 1>
  [ 92] objcall 104 ............................. <tName.char[1..length(tName) - 1]>
  [ 94] getlocal 1 .............................. <tNum>
  [ 96] not ..................................... <not tNum>
  [ 97] joinstr ................................. <tName.char[1..length(tName) - 1] & not tNum>
  [ 98] setlocal 0 .............................. tName = tName.char[1..length(tName) - 1] & not tNum
  [100] getprop 29 .............................. <pAlertSpr>
  [102] getlocal 0 .............................. <tName>
  [104] pusharglist 1 ........................... <tName>
  [106] extcall 56 .............................. <getmemnum(tName)>
  [108] setobjprop 57 ........................... pAlertSpr.memberNum = getmemnum(tName)
  [110] pushint8 1 .............................. <1>
  [112] pusharglistnoret 1 ...................... <1>
  [114] extcall 44 .............................. return 1
  [116] ret
end

on fillCryData me, tCryNumOrID
  [  0] getprop 26 .............................. <pCryWindowID>
  [  2] pusharglist 1 ........................... <pCryWindowID>
  [  4] extcall 47 .............................. <windowExists(pCryWindowID)>
  [  6] not ..................................... <not windowExists(pCryWindowID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pCryWindowID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 44 .............................. return 0
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 76 .............................. <me.getComponent()>
  [ 21] pusharglist 1 ........................... <me.getComponent()>
  [ 23] objcall 77 .............................. <me.getComponent().getCryDataBase()>
  [ 25] setlocal 0 .............................. tCryDB = me.getComponent().getCryDataBase()
  [ 27] getlocal 0 .............................. <tCryDB>
  [ 29] getobjprop 78 ........................... <tCryDB.count>
  [ 31] setlocal 1 .............................. tCryCount = tCryDB.count
  [ 33] getlocal 1 .............................. <tCryCount>
  [ 35] pushzero ................................ <0>
  [ 36] eq ...................................... <tCryCount = 0>
  [ 37] jmpifz [ 54] ............................ if tCryCount = 0 then
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 43 ............................. <"Hobba alerts not found!">
  [ 44] pushsymb 17 ............................. <#fillCryData>
  [ 46] pusharglist 3 ........................... <me, "Hobba alerts not found!", #fillCryData>
  [ 48] extcall 106 ............................. <error(me, "Hobba alerts not found!", #fillCryData)>
  [ 50] pusharglistnoret 1 ...................... <error(me, "Hobba alerts not found!", #fillCryData)>
  [ 52] extcall 44 .............................. return error(me, "Hobba alerts not found!", #fillCryData)
  [ 54] getparam 1 .............................. <tCryNumOrID>
  [ 56] pusharglist 1 ........................... <tCryNumOrID>
  [ 58] extcall 107 ............................. <stringp(tCryNumOrID)>
  [ 60] jmpifz [122] ............................ if stringp(tCryNumOrID) then / else
  [ 63] getparam 1 .............................. <tCryNumOrID>
  [ 65] setlocal 2 .............................. tCryID = tCryNumOrID
  [ 67] getlocal 0 .............................. <tCryDB>
  [ 69] getlocal 2 .............................. <tCryID>
  [ 71] pusharglist 2 ........................... <tCryDB, tCryID>
  [ 73] objcall 96 .............................. <tCryDB[tCryID]>
  [ 75] setprop 35 .............................. pCurrCryData = tCryDB[tCryID]
  [ 77] pushint8 1 .............................. <1>
  [ 79] setlocal 3
  [ 81] getlocal 3
  [ 83] getlocal 1 .............................. <tCryCount>
  [ 85] lteq
  [ 86] jmpifz [119] ............................ repeat with i = 1 to tCryCount
  [ 89] getlocal 0 .............................. <tCryDB>
  [ 91] getlocal 3 .............................. <i>
  [ 93] pusharglist 2 ........................... <tCryDB, i>
  [ 95] objcall 108 ............................. <tCryDB.getPropAt(i)>
  [ 97] getlocal 2 .............................. <tCryID>
  [ 99] eq ...................................... <tCryDB.getPropAt(i) = tCryID>
  [100] jmpifz [110] ............................ if tCryDB.getPropAt(i) = tCryID then
  [103] getlocal 3 .............................. <i>
  [105] setprop 34 .............................. pCurrCryNum = i
  [107] jmp [119] ............................... exit repeat
  [110] pushint8 1
  [112] getlocal 3
  [114] add
  [115] setlocal 3
  [117] endrepeat [ 81]
  [119] jmp [194]
  [122] getparam 1 .............................. <tCryNumOrID>
  [124] pusharglist 1 ........................... <tCryNumOrID>
  [126] extcall 109 ............................. <integerp(tCryNumOrID)>
  [128] jmpifz [177] ............................ if integerp(tCryNumOrID) then / else
  [131] getparam 1 .............................. <tCryNumOrID>
  [133] pushint8 1 .............................. <1>
  [135] lt ...................................... <tCryNumOrID < 1>
  [136] getparam 1 .............................. <tCryNumOrID>
  [138] getlocal 1 .............................. <tCryCount>
  [140] gt ...................................... <tCryNumOrID > tCryCount>
  [141] or ...................................... <(tCryNumOrID < 1) or (tCryNumOrID > tCryCount)>
  [142] jmpifz [150] ............................ if (tCryNumOrID < 1) or (tCryNumOrID > tCryCount) then
  [145] pushzero ................................ <0>
  [146] pusharglistnoret 1 ...................... <0>
  [148] extcall 44 .............................. return 0
  [150] getlocal 0 .............................. <tCryDB>
  [152] getparam 1 .............................. <tCryNumOrID>
  [154] pusharglist 2 ........................... <tCryDB, tCryNumOrID>
  [156] objcall 108 ............................. <tCryDB.getPropAt(tCryNumOrID)>
  [158] setlocal 2 .............................. tCryID = tCryDB.getPropAt(tCryNumOrID)
  [160] getlocal 0 .............................. <tCryDB>
  [162] getlocal 2 .............................. <tCryID>
  [164] pusharglist 2 ........................... <tCryDB, tCryID>
  [166] objcall 96 .............................. <tCryDB[tCryID]>
  [168] setprop 35 .............................. pCurrCryData = tCryDB[tCryID]
  [170] getparam 1 .............................. <tCryNumOrID>
  [172] setprop 34 .............................. pCurrCryNum = tCryNumOrID
  [174] jmp [194]
  [177] getparam 0 .............................. <me>
  [179] pushcons 44 ............................. <"String or integer expected:">
  [181] getparam 1 .............................. <tCryNumOrID>
  [183] joinpadstr .............................. <"String or integer expected:" && tCryNumOrID>
  [184] pushsymb 17 ............................. <#fillCryData>
  [186] pusharglist 3 ........................... <me, "String or integer expected:" && tCryNumOrID, #fillCryData>
  [188] extcall 106 ............................. <error(me, "String or integer expected:" && tCryNumOrID, #fillCryData)>
  [190] pusharglistnoret 1 ...................... <error(me, "String or integer expected:" && tCryNumOrID, #fillCryData)>
  [192] extcall 44 .............................. return error(me, "String or integer expected:" && tCryNumOrID, #fillCryData)
  [194] getprop 35 .............................. <pCurrCryData>
  [196] pusharglist 1 ........................... <pCurrCryData>
  [198] extcall 71 .............................. <voidp(pCurrCryData)>
  [200] jmpifz [232] ............................ if voidp(pCurrCryData) then / else
  [203] getlocal 0 .............................. <tCryDB>
  [205] getlocal 0 .............................. <tCryDB>
  [207] pusharglist 1 ........................... <tCryDB>
  [209] extcall 78 .............................. <count(tCryDB)>
  [211] pusharglist 2 ........................... <tCryDB, count(tCryDB)>
  [213] objcall 108 ............................. <tCryDB.getPropAt(count(tCryDB))>
  [215] setlocal 4 .............................. tNewID = tCryDB.getPropAt(count(tCryDB))
  [217] getparam 0 .............................. <me>
  [219] getlocal 4 .............................. <tNewID>
  [221] pusharglist 2 ........................... <me, tNewID>
  [223] objcall 17 .............................. <me.fillCryData(tNewID)>
  [225] pusharglistnoret 1 ...................... <me.fillCryData(tNewID)>
  [227] extcall 44 .............................. return me.fillCryData(tNewID)
  [229] jmp [236]
  [232] getlocal 2 .............................. <tCryID>
  [234] setprop 33 .............................. pCurrCryID = tCryID
  [236] getprop 35 .............................. <pCurrCryData>
  [238] pushsymb 95 ............................. <#sender>
  [240] pusharglist 2 ........................... <pCurrCryData, #sender>
  [242] objcall 96 .............................. <pCurrCryData[#sender]>
  [244] setlocal 5 .............................. tName = pCurrCryData[#sender]
  [246] getprop 35 .............................. <pCurrCryData>
  [248] pushsymb 110 ............................ <#roomname>
  [250] pusharglist 2 ........................... <pCurrCryData, #roomname>
  [252] objcall 96 .............................. <pCurrCryData[#roomname]>
  [254] setlocal 6 .............................. tPlace = pCurrCryData[#roomname]
  [256] getprop 35 .............................. <pCurrCryData>
  [258] pushsymb 97 ............................. <#msg>
  [260] pusharglist 2 ........................... <pCurrCryData, #msg>
  [262] objcall 96 .............................. <pCurrCryData[#msg]>
  [264] setlocal 7 .............................. tMsg = pCurrCryData[#msg]
  [266] getprop 35 .............................. <pCurrCryData>
  [268] pushsymb 111 ............................ <#time>
  [270] pusharglist 2 ........................... <pCurrCryData, #time>
  [272] objcall 96 .............................. <pCurrCryData[#time]>
  [274] setlocal 8 .............................. tTime = pCurrCryData[#time]
  [276] getprop 35 .............................. <pCurrCryData>
  [278] pushsymb 112 ............................ <#category>
  [280] pusharglist 2 ........................... <pCurrCryData, #category>
  [282] objcall 96 .............................. <pCurrCryData[#category]>
  [284] setlocal 9 .............................. tCategory = pCurrCryData[#category]
  [286] getprop 35 .............................. <pCurrCryData>
  [288] pushsymb 113 ............................ <#room_id>
  [290] pusharglist 2 ........................... <pCurrCryData, #room_id>
  [292] objcall 96 .............................. <pCurrCryData[#room_id]>
  [294] setlocal 10 ............................. tRoomID = pCurrCryData[#room_id]
  [296] getlocal 10 ............................. <tRoomID>
  [298] pusharglist 0 ........................... <>
  [300] extcall 30 .............................. <VOID>
  [302] nteq .................................... <tRoomID <> VOID>
  [303] pushsymb 68 ............................. <#session>
  [305] pusharglist 1 ........................... <#session>
  [307] extcall 67 .............................. <getObject(#session)>
  [309] pushcons 7 .............................. <"user_rights">
  [311] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [313] objcall 69 .............................. <getObject(#session).get("user_rights")>
  [315] pushcons 45 ............................. <"fuse_see_flat_ids">
  [317] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_see_flat_ids">
  [319] objcall 70 .............................. <getObject(#session).get("user_rights").getOne("fuse_see_flat_ids")>
  [321] pushzero ................................ <0>
  [322] nteq .................................... <getObject(#session).get("user_rights").getOne("fuse_see_flat_ids") <> 0>
  [323] and ..................................... <(tRoomID <> VOID) and (getObject(#session).get("user_rights").getOne("fuse_see_flat_ids") <> 0)>
  [324] jmpifz [340] ............................ if (tRoomID <> VOID) and (getObject(#session).get("user_rights").getOne("fuse_see_flat_ids") <> 0) then / else
  [327] pushcons 46 ............................. <"(id: ">
  [329] getlocal 10 ............................. <tRoomID>
  [331] joinstr ................................. <"(id: " & tRoomID>
  [332] pushcons 47 ............................. <")">
  [334] joinstr ................................. <"(id: " & tRoomID & ")">
  [335] setlocal 11 ............................. tShowRoomID = "(id: " & tRoomID & ")"
  [337] jmp [344]
  [340] pushcons 2 .............................. <EMPTY>
  [342] setlocal 11 ............................. tShowRoomID = EMPTY
  [344] getprop 26 .............................. <pCryWindowID>
  [346] pusharglist 1 ........................... <pCryWindowID>
  [348] extcall 75 .............................. <getWindow(pCryWindowID)>
  [350] setlocal 12 ............................. tWndObj = getWindow(pCryWindowID)
  [352] getlocal 9 .............................. <tCategory>
  [354] pushint8 1 .............................. <1>
  [356] eq ...................................... <tCategory = 1>
  [357] jmpifz [402] ............................ if tCategory = 1 then / else
  [360] getlocal 12 ............................. <tWndObj>
  [362] pushcons 48 ............................. <"hobba_header">
  [364] pusharglist 2 ........................... <tWndObj, "hobba_header">
  [366] objcall 82 .............................. <tWndObj.getElement("hobba_header")>
  [368] pushcons 49 ............................. <"hobba_emergency_help">
  [370] pusharglist 1 ........................... <"hobba_emergency_help">
  [372] extcall 27 .............................. <getText("hobba_emergency_help")>
  [374] getlocal 5 .............................. <tName>
  [376] joinpadstr .............................. <getText("hobba_emergency_help") && tName>
  [377] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_header"), getText("hobba_emergency_help") && tName>
  [379] objcall 90 .............................. tWndObj.getElement("hobba_header").setText(getText("hobba_emergency_help") && tName)
  [381] getlocal 12 ............................. <tWndObj>
  [383] pushcons 50 ............................. <"hobba_change_cfh_type">
  [385] pusharglist 2 ........................... <tWndObj, "hobba_change_cfh_type">
  [387] objcall 82 .............................. <tWndObj.getElement("hobba_change_cfh_type")>
  [389] pushcons 51 ............................. <"hobba_mark_normal">
  [391] pusharglist 1 ........................... <"hobba_mark_normal">
  [393] extcall 27 .............................. <getText("hobba_mark_normal")>
  [395] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_change_cfh_type"), getText("hobba_mark_normal")>
  [397] objcall 90 .............................. tWndObj.getElement("hobba_change_cfh_type").setText(getText("hobba_mark_normal"))
  [399] jmp [441]
  [402] getlocal 12 ............................. <tWndObj>
  [404] pushcons 48 ............................. <"hobba_header">
  [406] pusharglist 2 ........................... <tWndObj, "hobba_header">
  [408] objcall 82 .............................. <tWndObj.getElement("hobba_header")>
  [410] pushcons 52 ............................. <"hobba_cryforhelp">
  [412] pusharglist 1 ........................... <"hobba_cryforhelp">
  [414] extcall 27 .............................. <getText("hobba_cryforhelp")>
  [416] getlocal 5 .............................. <tName>
  [418] joinpadstr .............................. <getText("hobba_cryforhelp") && tName>
  [419] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_header"), getText("hobba_cryforhelp") && tName>
  [421] objcall 90 .............................. tWndObj.getElement("hobba_header").setText(getText("hobba_cryforhelp") && tName)
  [423] getlocal 12 ............................. <tWndObj>
  [425] pushcons 50 ............................. <"hobba_change_cfh_type">
  [427] pusharglist 2 ........................... <tWndObj, "hobba_change_cfh_type">
  [429] objcall 82 .............................. <tWndObj.getElement("hobba_change_cfh_type")>
  [431] pushcons 53 ............................. <"hobba_mark_emergency">
  [433] pusharglist 1 ........................... <"hobba_mark_emergency">
  [435] extcall 27 .............................. <getText("hobba_mark_emergency")>
  [437] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_change_cfh_type"), getText("hobba_mark_emergency")>
  [439] objcall 90 .............................. tWndObj.getElement("hobba_change_cfh_type").setText(getText("hobba_mark_emergency"))
  [441] getlocal 9 .............................. <tCategory>
  [443] pushint8 3 .............................. <3>
  [445] eq ...................................... <tCategory = 3>
  [446] jmpifz [464] ............................ if tCategory = 3 then / else
  [449] getlocal 12 ............................. <tWndObj>
  [451] pushcons 50 ............................. <"hobba_change_cfh_type">
  [453] pusharglist 2 ........................... <tWndObj, "hobba_change_cfh_type">
  [455] objcall 82 .............................. <tWndObj.getElement("hobba_change_cfh_type")>
  [457] pusharglistnoret 1 ...................... <tWndObj.getElement("hobba_change_cfh_type")>
  [459] objcall 114 ............................. tWndObj.getElement("hobba_change_cfh_type").deactivate()
  [461] jmp [476]
  [464] getlocal 12 ............................. <tWndObj>
  [466] pushcons 50 ............................. <"hobba_change_cfh_type">
  [468] pusharglist 2 ........................... <tWndObj, "hobba_change_cfh_type">
  [470] objcall 82 .............................. <tWndObj.getElement("hobba_change_cfh_type")>
  [472] pusharglistnoret 1 ...................... <tWndObj.getElement("hobba_change_cfh_type")>
  [474] objcall 115 ............................. tWndObj.getElement("hobba_change_cfh_type").Activate()
  [476] getlocal 12 ............................. <tWndObj>
  [478] pushcons 54 ............................. <"hobba_cry_text">
  [480] pusharglist 2 ........................... <tWndObj, "hobba_cry_text">
  [482] objcall 82 .............................. <tWndObj.getElement("hobba_cry_text")>
  [484] getlocal 6 .............................. <tPlace>
  [486] getlocal 11 ............................. <tShowRoomID>
  [488] joinpadstr .............................. <tPlace && tShowRoomID>
  [489] pushcons 55 ............................. <RETURN>
  [491] joinstr ................................. <tPlace && tShowRoomID & RETURN>
  [492] pushcons 55 ............................. <RETURN>
  [494] joinstr ................................. <tPlace && tShowRoomID & RETURN & RETURN>
  [495] getlocal 7 .............................. <tMsg>
  [497] joinstr ................................. <tPlace && tShowRoomID & RETURN & RETURN & tMsg>
  [498] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_cry_text"), tPlace && tShowRoomID & RETURN & RETURN & tMsg>
  [500] objcall 90 .............................. tWndObj.getElement("hobba_cry_text").setText(tPlace && tShowRoomID & RETURN & RETURN & tMsg)
  [502] getlocal 12 ............................. <tWndObj>
  [504] pushcons 56 ............................. <"page_num">
  [506] pusharglist 2 ........................... <tWndObj, "page_num">
  [508] objcall 82 .............................. <tWndObj.getElement("page_num")>
  [510] getprop 34 .............................. <pCurrCryNum>
  [512] pushcons 57 ............................. <"/">
  [514] joinstr ................................. <pCurrCryNum & "/">
  [515] getlocal 1 .............................. <tCryCount>
  [517] joinstr ................................. <pCurrCryNum & "/" & tCryCount>
  [518] pusharglistnoret 2 ...................... <tWndObj.getElement("page_num"), pCurrCryNum & "/" & tCryCount>
  [520] objcall 90 .............................. tWndObj.getElement("page_num").setText(pCurrCryNum & "/" & tCryCount)
  [522] getprop 35 .............................. <pCurrCryData>
  [524] getobjprop 116 .......................... <pCurrCryData.picker>
  [526] pushcons 2 .............................. <EMPTY>
  [528] eq ...................................... <pCurrCryData.picker = EMPTY>
  [529] jmpifz [549] ............................ if pCurrCryData.picker = EMPTY then / else
  [532] getlocal 12 ............................. <tWndObj>
  [534] pushcons 58 ............................. <"hobba_pickedby">
  [536] pusharglist 2 ........................... <tWndObj, "hobba_pickedby">
  [538] objcall 82 .............................. <tWndObj.getElement("hobba_pickedby")>
  [540] getlocal 8 .............................. <tTime>
  [542] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_pickedby"), tTime>
  [544] objcall 90 .............................. tWndObj.getElement("hobba_pickedby").setText(tTime)
  [546] jmp [572]
  [549] getlocal 12 ............................. <tWndObj>
  [551] pushcons 58 ............................. <"hobba_pickedby">
  [553] pusharglist 2 ........................... <tWndObj, "hobba_pickedby">
  [555] objcall 82 .............................. <tWndObj.getElement("hobba_pickedby")>
  [557] pushcons 58 ............................. <"hobba_pickedby">
  [559] pusharglist 1 ........................... <"hobba_pickedby">
  [561] extcall 27 .............................. <getText("hobba_pickedby")>
  [563] getprop 35 .............................. <pCurrCryData>
  [565] getobjprop 116 .......................... <pCurrCryData.picker>
  [567] joinpadstr .............................. <getText("hobba_pickedby") && pCurrCryData.picker>
  [568] pusharglistnoret 2 ...................... <tWndObj.getElement("hobba_pickedby"), getText("hobba_pickedby") && pCurrCryData.picker>
  [570] objcall 90 .............................. tWndObj.getElement("hobba_pickedby").setText(getText("hobba_pickedby") && pCurrCryData.picker)
  [572] pushint8 1 .............................. <1>
  [574] pusharglistnoret 1 ...................... <1>
  [576] extcall 44 .............................. return 1
  [578] ret
end

on InitializeBanCheckBoxes me
  [  0] getprop 28 .............................. <pModtoolWindowID>
  [  2] pusharglist 1 ........................... <pModtoolWindowID>
  [  4] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [  6] not ..................................... <not windowExists(pModtoolWindowID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pModtoolWindowID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 44 .............................. return 0
  [ 15] getprop 28 .............................. <pModtoolWindowID>
  [ 17] pusharglist 1 ........................... <pModtoolWindowID>
  [ 19] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [ 21] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [ 23] getlocal 0 .............................. <tWndObj>
  [ 25] pushcons 59 ............................. <"modtool_checkbox_ip">
  [ 27] pusharglist 2 ........................... <tWndObj, "modtool_checkbox_ip">
  [ 29] objcall 89 .............................. <tWndObj.elementExists("modtool_checkbox_ip")>
  [ 31] not ..................................... <not tWndObj.elementExists("modtool_checkbox_ip")>
  [ 32] jmpifz [ 40] ............................ if not tWndObj.elementExists("modtool_checkbox_ip") then
  [ 35] pushzero ................................ <0>
  [ 36] pusharglistnoret 1 ...................... <0>
  [ 38] extcall 44 .............................. return 0
  [ 40] pushcons 60 ............................. <"button.checkbox.off">
  [ 42] pusharglist 1 ........................... <"button.checkbox.off">
  [ 44] extcall 127 ............................. <memberExists("button.checkbox.off")>
  [ 46] not ..................................... <not memberExists("button.checkbox.off")>
  [ 47] jmpifz [ 55] ............................ if not memberExists("button.checkbox.off") then
  [ 50] pushzero ................................ <0>
  [ 51] pusharglistnoret 1 ...................... <0>
  [ 53] extcall 44 .............................. return 0
  [ 55] pushcons 60 ............................. <"button.checkbox.off">
  [ 57] pusharglist 1 ........................... <"button.checkbox.off">
  [ 59] extcall 128 ............................. <getMember("button.checkbox.off")>
  [ 61] getobjprop 129 .......................... <getMember("button.checkbox.off").image>
  [ 63] setlocal 1 .............................. tOffImg = getMember("button.checkbox.off").image
  [ 65] getlocal 0 .............................. <tWndObj>
  [ 67] pushcons 59 ............................. <"modtool_checkbox_ip">
  [ 69] pusharglist 2 ........................... <tWndObj, "modtool_checkbox_ip">
  [ 71] objcall 82 .............................. <tWndObj.getElement("modtool_checkbox_ip")>
  [ 73] getlocal 1 .............................. <tOffImg>
  [ 75] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_checkbox_ip"), tOffImg>
  [ 77] objcall 130 ............................. tWndObj.getElement("modtool_checkbox_ip").feedImage(tOffImg)
  [ 79] getlocal 0 .............................. <tWndObj>
  [ 81] pushcons 61 ............................. <"modtool_checkbox_computer">
  [ 83] pusharglist 2 ........................... <tWndObj, "modtool_checkbox_computer">
  [ 85] objcall 82 .............................. <tWndObj.getElement("modtool_checkbox_computer")>
  [ 87] getlocal 1 .............................. <tOffImg>
  [ 89] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_checkbox_computer"), tOffImg>
  [ 91] objcall 130 ............................. tWndObj.getElement("modtool_checkbox_computer").feedImage(tOffImg)
  [ 93] pushint8 1 .............................. <1>
  [ 95] pusharglistnoret 1 ...................... <1>
  [ 97] extcall 44 .............................. return 1
  [ 99] ret
end

on initializeBanDropDown me
  [  0] getprop 28 .............................. <pModtoolWindowID>
  [  2] pusharglist 1 ........................... <pModtoolWindowID>
  [  4] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tWndObj = 0>
  [ 12] jmpifz [ 20] ............................ if tWndObj = 0 then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 44 .............................. return 0
  [ 20] getlocal 0 .............................. <tWndObj>
  [ 22] pushcons 62 ............................. <"ban_length_menu">
  [ 24] pusharglist 2 ........................... <tWndObj, "ban_length_menu">
  [ 26] objcall 89 .............................. <tWndObj.elementExists("ban_length_menu")>
  [ 28] not ..................................... <not tWndObj.elementExists("ban_length_menu")>
  [ 29] jmpifz [ 37] ............................ if not tWndObj.elementExists("ban_length_menu") then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 44 .............................. return 0
  [ 37] getlocal 0 .............................. <tWndObj>
  [ 39] pushcons 62 ............................. <"ban_length_menu">
  [ 41] pusharglist 2 ........................... <tWndObj, "ban_length_menu">
  [ 43] objcall 82 .............................. <tWndObj.getElement("ban_length_menu")>
  [ 45] setlocal 1 .............................. tDropDown = tWndObj.getElement("ban_length_menu")
  [ 47] pushcons 63 ............................. <"modtool_hours">
  [ 49] pusharglist 1 ........................... <"modtool_hours">
  [ 51] extcall 27 .............................. <getText("modtool_hours")>
  [ 53] setlocal 2 .............................. tHours = getText("modtool_hours")
  [ 55] pushcons 64 ............................. <"modtool_days">
  [ 57] pusharglist 1 ........................... <"modtool_days">
  [ 59] extcall 27 .............................. <getText("modtool_days")>
  [ 61] setlocal 3 .............................. tDays = getText("modtool_days")
  [ 63] pushcons 65 ............................. <"2">
  [ 65] getlocal 2 .............................. <tHours>
  [ 67] joinpadstr .............................. <"2" && tHours>
  [ 68] pushcons 66 ............................. <"4">
  [ 70] getlocal 2 .............................. <tHours>
  [ 72] joinpadstr .............................. <"4" && tHours>
  [ 73] pushcons 67 ............................. <"12">
  [ 75] getlocal 2 .............................. <tHours>
  [ 77] joinpadstr .............................. <"12" && tHours>
  [ 78] pushcons 68 ............................. <"24">
  [ 80] getlocal 2 .............................. <tHours>
  [ 82] joinpadstr .............................. <"24" && tHours>
  [ 83] pushcons 65 ............................. <"2">
  [ 85] getlocal 3 .............................. <tDays>
  [ 87] joinpadstr .............................. <"2" && tDays>
  [ 88] pushcons 69 ............................. <"3">
  [ 90] getlocal 3 .............................. <tDays>
  [ 92] joinpadstr .............................. <"3" && tDays>
  [ 93] pushcons 70 ............................. <"7">
  [ 95] getlocal 3 .............................. <tDays>
  [ 97] joinpadstr .............................. <"7" && tDays>
  [ 98] pushcons 71 ............................. <"14">
  [100] getlocal 3 .............................. <tDays>
  [102] joinpadstr .............................. <"14" && tDays>
  [103] pusharglist 8 ........................... <["2" && tHours, "4" && tHours, "12" && tHours, "24" && tHours, "2" && tDays, "3" && tDays, "7" && tDays, "14" && tDays]>
  [105] pushlist ................................ <["2" && tHours, "4" && tHours, "12" && tHours, "24" && tHours, "2" && tDays, "3" && tDays, "7" && tDays, "14" && tDays]>
  [106] setlocal 4 .............................. tVisOptions = ["2" && tHours, "4" && tHours, "12" && tHours, "24" && tHours, "2" && tDays, "3" && tDays, "7" && tDays, "14" && tDays]
  [108] getlocal 4 .............................. <tVisOptions>
  [110] pushcons 72 ............................. <"21">
  [112] getlocal 3 .............................. <tDays>
  [114] joinpadstr .............................. <"21" && tDays>
  [115] pusharglistnoret 2 ...................... <tVisOptions, "21" && tDays>
  [117] objcall 132 ............................. tVisOptions.add("21" && tDays)
  [119] getlocal 4 .............................. <tVisOptions>
  [121] pushcons 73 ............................. <"30">
  [123] getlocal 3 .............................. <tDays>
  [125] joinpadstr .............................. <"30" && tDays>
  [126] pusharglistnoret 2 ...................... <tVisOptions, "30" && tDays>
  [128] objcall 132 ............................. tVisOptions.add("30" && tDays)
  [130] getlocal 4 .............................. <tVisOptions>
  [132] pushcons 74 ............................. <"60">
  [134] getlocal 3 .............................. <tDays>
  [136] joinpadstr .............................. <"60" && tDays>
  [137] pusharglistnoret 2 ...................... <tVisOptions, "60" && tDays>
  [139] objcall 132 ............................. tVisOptions.add("60" && tDays)
  [141] getlocal 4 .............................. <tVisOptions>
  [143] pushcons 75 ............................. <"365">
  [145] getlocal 3 .............................. <tDays>
  [147] joinpadstr .............................. <"365" && tDays>
  [148] pusharglistnoret 2 ...................... <tVisOptions, "365" && tDays>
  [150] objcall 132 ............................. tVisOptions.add("365" && tDays)
  [152] getlocal 4 .............................. <tVisOptions>
  [154] pushcons 76 ............................. <"730">
  [156] getlocal 3 .............................. <tDays>
  [158] joinpadstr .............................. <"730" && tDays>
  [159] pusharglistnoret 2 ...................... <tVisOptions, "730" && tDays>
  [161] objcall 132 ............................. tVisOptions.add("730" && tDays)
  [163] getlocal 4 .............................. <tVisOptions>
  [165] pushcons 77 ............................. <"4167">
  [167] getlocal 3 .............................. <tDays>
  [169] joinpadstr .............................. <"4167" && tDays>
  [170] pusharglistnoret 2 ...................... <tVisOptions, "4167" && tDays>
  [172] objcall 132 ............................. tVisOptions.add("4167" && tDays)
  [174] pushint8 2 .............................. <2>
  [176] pushint8 4 .............................. <4>
  [178] pushint8 12 ............................. <12>
  [180] pushint8 24 ............................. <24>
  [182] pushint8 2 .............................. <2>
  [184] pushint8 24 ............................. <24>
  [186] mul ..................................... <2 * 24>
  [187] pushint8 3 .............................. <3>
  [189] pushint8 24 ............................. <24>
  [191] mul ..................................... <3 * 24>
  [192] pushint8 7 .............................. <7>
  [194] pushint8 24 ............................. <24>
  [196] mul ..................................... <7 * 24>
  [197] pushint8 14 ............................. <14>
  [199] pushint8 24 ............................. <24>
  [201] mul ..................................... <14 * 24>
  [202] pushint8 21 ............................. <21>
  [204] pushint8 24 ............................. <24>
  [206] mul ..................................... <21 * 24>
  [207] pushint8 30 ............................. <30>
  [209] pushint8 24 ............................. <24>
  [211] mul ..................................... <30 * 24>
  [212] pushint8 60 ............................. <60>
  [214] pushint8 24 ............................. <24>
  [216] mul ..................................... <60 * 24>
  [217] pushint16 365 ........................... <365>
  [220] pushint8 24 ............................. <24>
  [222] mul ..................................... <365 * 24>
  [223] pushint16 730 ........................... <730>
  [226] pushint8 24 ............................. <24>
  [228] mul ..................................... <730 * 24>
  [229] pushint32 100000 ........................ <100000>
  [234] pusharglist 14 .......................... <[2, 4, 12, 24, 2 * 24, 3 * 24, 7 * 24, 14 * 24, 21 * 24, 30 * 24, 60 * 24, 365 * 24, 730 * 24, 100000]>
  [236] pushlist ................................ <[2, 4, 12, 24, 2 * 24, 3 * 24, 7 * 24, 14 * 24, 21 * 24, 30 * 24, 60 * 24, 365 * 24, 730 * 24, 100000]>
  [237] setlocal 5 .............................. tBanLengths = [2, 4, 12, 24, 2 * 24, 3 * 24, 7 * 24, 14 * 24, 21 * 24, 30 * 24, 60 * 24, 365 * 24, 730 * 24, 100000]
  [239] getlocal 1 .............................. <tDropDown>
  [241] getlocal 4 .............................. <tVisOptions>
  [243] getlocal 5 .............................. <tBanLengths>
  [245] pushint8 1 .............................. <1>
  [247] pusharglistnoret 4 ...................... <tDropDown, tVisOptions, tBanLengths, 1>
  [249] objcall 133 ............................. tDropDown.updateData(tVisOptions, tBanLengths, 1)
  [251] getlocal 1 .............................. <tDropDown>
  [253] pushzero ................................ <0>
  [254] pusharglistnoret 2 ...................... <tDropDown, 0>
  [256] objcall 134 ............................. tDropDown.setOrdering(0)
  [258] pushint8 1 .............................. <1>
  [260] pusharglistnoret 1 ...................... <1>
  [262] extcall 44 .............................. return 1
  [264] ret
end

on checkBoxClicked me, ttype
  [  0] getprop 28 .............................. <pModtoolWindowID>
  [  2] pusharglist 1 ........................... <pModtoolWindowID>
  [  4] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [  6] not ..................................... <not windowExists(pModtoolWindowID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pModtoolWindowID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 44 .............................. return 0
  [ 15] pushcons 78 ............................. <"button.checkbox.on">
  [ 17] pusharglist 1 ........................... <"button.checkbox.on">
  [ 19] extcall 127 ............................. <memberExists("button.checkbox.on")>
  [ 21] not ..................................... <not memberExists("button.checkbox.on")>
  [ 22] jmpifz [ 30] ............................ if not memberExists("button.checkbox.on") then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 44 .............................. return 0
  [ 30] pushcons 78 ............................. <"button.checkbox.on">
  [ 32] pusharglist 1 ........................... <"button.checkbox.on">
  [ 34] extcall 128 ............................. <getMember("button.checkbox.on")>
  [ 36] setlocal 0 .............................. tMemOn = getMember("button.checkbox.on")
  [ 38] pushcons 60 ............................. <"button.checkbox.off">
  [ 40] pusharglist 1 ........................... <"button.checkbox.off">
  [ 42] extcall 128 ............................. <getMember("button.checkbox.off")>
  [ 44] setlocal 1 .............................. tMemOff = getMember("button.checkbox.off")
  [ 46] getlocal 0 .............................. <tMemOn>
  [ 48] getobjprop 140 .......................... <tMemOn.type>
  [ 50] pushsymb 141 ............................ <#bitmap>
  [ 52] nteq .................................... <tMemOn.type <> #bitmap>
  [ 53] getlocal 1 .............................. <tMemOff>
  [ 55] getobjprop 140 .......................... <tMemOff.type>
  [ 57] pushsymb 141 ............................ <#bitmap>
  [ 59] nteq .................................... <tMemOff.type <> #bitmap>
  [ 60] or ...................................... <(tMemOn.type <> #bitmap) or (tMemOff.type <> #bitmap)>
  [ 61] jmpifz [ 69] ............................ if (tMemOn.type <> #bitmap) or (tMemOff.type <> #bitmap) then
  [ 64] pushzero ................................ <0>
  [ 65] pusharglistnoret 1 ...................... <0>
  [ 67] extcall 44 .............................. return 0
  [ 69] getprop 28 .............................. <pModtoolWindowID>
  [ 71] pusharglist 1 ........................... <pModtoolWindowID>
  [ 73] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [ 75] setlocal 2 .............................. tWndObj = getWindow(pModtoolWindowID)
  [ 77] getparam 1 .............................. <ttype>
  [ 79] pushcons 79 ............................. <"ip">
  [ 81] eq ...................................... <ttype = "ip">
  [ 82] jmpifz [151] ............................ if ttype = "ip" then / else
  [ 85] getprop 36 .............................. <pModToolCheckBoxes>
  [ 87] pushint8 1 .............................. <1>
  [ 89] getprop 36 .............................. <pModToolCheckBoxes>
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglist 2 ........................... <pModToolCheckBoxes, 1>
  [ 95] objcall 96 .............................. <pModToolCheckBoxes[1]>
  [ 97] not ..................................... <not pModToolCheckBoxes[1]>
  [ 98] pusharglistnoret 3 ...................... <pModToolCheckBoxes, 1, not pModToolCheckBoxes[1]>
  [100] objcall 142 ............................. pModToolCheckBoxes[1] = not pModToolCheckBoxes[1]
  [102] getprop 36 .............................. <pModToolCheckBoxes>
  [104] pushint8 1 .............................. <1>
  [106] pusharglist 2 ........................... <pModToolCheckBoxes, 1>
  [108] objcall 96 .............................. <pModToolCheckBoxes[1]>
  [110] jmpifz [132] ............................ if pModToolCheckBoxes[1] then / else
  [113] getlocal 2 .............................. <tWndObj>
  [115] pushcons 59 ............................. <"modtool_checkbox_ip">
  [117] pusharglist 2 ........................... <tWndObj, "modtool_checkbox_ip">
  [119] objcall 82 .............................. <tWndObj.getElement("modtool_checkbox_ip")>
  [121] getlocal 0 .............................. <tMemOn>
  [123] getobjprop 129 .......................... <tMemOn.image>
  [125] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_checkbox_ip"), tMemOn.image>
  [127] objcall 130 ............................. tWndObj.getElement("modtool_checkbox_ip").feedImage(tMemOn.image)
  [129] jmp [148]
  [132] getlocal 2 .............................. <tWndObj>
  [134] pushcons 59 ............................. <"modtool_checkbox_ip">
  [136] pusharglist 2 ........................... <tWndObj, "modtool_checkbox_ip">
  [138] objcall 82 .............................. <tWndObj.getElement("modtool_checkbox_ip")>
  [140] getlocal 1 .............................. <tMemOff>
  [142] getobjprop 129 .......................... <tMemOff.image>
  [144] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_checkbox_ip"), tMemOff.image>
  [146] objcall 130 ............................. tWndObj.getElement("modtool_checkbox_ip").feedImage(tMemOff.image)
  [148] jmp [214]
  [151] getprop 36 .............................. <pModToolCheckBoxes>
  [153] pushint8 2 .............................. <2>
  [155] getprop 36 .............................. <pModToolCheckBoxes>
  [157] pushint8 2 .............................. <2>
  [159] pusharglist 2 ........................... <pModToolCheckBoxes, 2>
  [161] objcall 96 .............................. <pModToolCheckBoxes[2]>
  [163] not ..................................... <not pModToolCheckBoxes[2]>
  [164] pusharglistnoret 3 ...................... <pModToolCheckBoxes, 2, not pModToolCheckBoxes[2]>
  [166] objcall 142 ............................. pModToolCheckBoxes[2] = not pModToolCheckBoxes[2]
  [168] getprop 36 .............................. <pModToolCheckBoxes>
  [170] pushint8 2 .............................. <2>
  [172] pusharglist 2 ........................... <pModToolCheckBoxes, 2>
  [174] objcall 96 .............................. <pModToolCheckBoxes[2]>
  [176] jmpifz [198] ............................ if pModToolCheckBoxes[2] then / else
  [179] getlocal 2 .............................. <tWndObj>
  [181] pushcons 61 ............................. <"modtool_checkbox_computer">
  [183] pusharglist 2 ........................... <tWndObj, "modtool_checkbox_computer">
  [185] objcall 82 .............................. <tWndObj.getElement("modtool_checkbox_computer")>
  [187] getlocal 0 .............................. <tMemOn>
  [189] getobjprop 129 .......................... <tMemOn.image>
  [191] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_checkbox_computer"), tMemOn.image>
  [193] objcall 130 ............................. tWndObj.getElement("modtool_checkbox_computer").feedImage(tMemOn.image)
  [195] jmp [214]
  [198] getlocal 2 .............................. <tWndObj>
  [200] pushcons 61 ............................. <"modtool_checkbox_computer">
  [202] pusharglist 2 ........................... <tWndObj, "modtool_checkbox_computer">
  [204] objcall 82 .............................. <tWndObj.getElement("modtool_checkbox_computer")>
  [206] getlocal 1 .............................. <tMemOff>
  [208] getobjprop 129 .......................... <tMemOff.image>
  [210] pusharglistnoret 2 ...................... <tWndObj.getElement("modtool_checkbox_computer"), tMemOff.image>
  [212] objcall 130 ............................. tWndObj.getElement("modtool_checkbox_computer").feedImage(tMemOff.image)
  [214] pushint8 1 .............................. <1>
  [216] pusharglistnoret 1 ...................... <1>
  [218] extcall 44 .............................. return 1
  [220] ret
end

on sendModCommand me
  [  0] getprop 28 .............................. <pModtoolWindowID>
  [  2] pusharglist 1 ........................... <pModtoolWindowID>
  [  4] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [  6] not ..................................... <not windowExists(pModtoolWindowID)>
  [  7] jmpifz [ 16] ............................ if not windowExists(pModtoolWindowID) then
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 44 .............................. return 1
  [ 16] getprop 28 .............................. <pModtoolWindowID>
  [ 18] pusharglist 1 ........................... <pModtoolWindowID>
  [ 20] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [ 22] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [ 24] pushcons 2 .............................. <EMPTY>
  [ 26] setlocal 1 .............................. tCommandString = EMPTY
  [ 28] getlocal 0 .............................. <tWndObj>
  [ 30] pushcons 19 ............................. <"modtool_name">
  [ 32] pusharglist 2 ........................... <tWndObj, "modtool_name">
  [ 34] objcall 89 .............................. <tWndObj.elementExists("modtool_name")>
  [ 36] jmpifz [ 53] ............................ if tWndObj.elementExists("modtool_name") then
  [ 39] getlocal 0 .............................. <tWndObj>
  [ 41] pushcons 19 ............................. <"modtool_name">
  [ 43] pusharglist 2 ........................... <tWndObj, "modtool_name">
  [ 45] objcall 82 .............................. <tWndObj.getElement("modtool_name")>
  [ 47] pusharglist 1 ........................... <tWndObj.getElement("modtool_name")>
  [ 49] objcall 27 .............................. <tWndObj.getElement("modtool_name").getText()>
  [ 51] setlocal 2 .............................. tName = tWndObj.getElement("modtool_name").getText()
  [ 53] getlocal 0 .............................. <tWndObj>
  [ 55] pushcons 80 ............................. <"modtool_reason">
  [ 57] pusharglist 2 ........................... <tWndObj, "modtool_reason">
  [ 59] objcall 89 .............................. <tWndObj.elementExists("modtool_reason")>
  [ 61] jmpifz [ 78] ............................ if tWndObj.elementExists("modtool_reason") then
  [ 64] getlocal 0 .............................. <tWndObj>
  [ 66] pushcons 80 ............................. <"modtool_reason">
  [ 68] pusharglist 2 ........................... <tWndObj, "modtool_reason">
  [ 70] objcall 82 .............................. <tWndObj.getElement("modtool_reason")>
  [ 72] pusharglist 1 ........................... <tWndObj.getElement("modtool_reason")>
  [ 74] objcall 27 .............................. <tWndObj.getElement("modtool_reason").getText()>
  [ 76] setlocal 3 .............................. tReason = tWndObj.getElement("modtool_reason").getText()
  [ 78] getlocal 0 .............................. <tWndObj>
  [ 80] pushcons 81 ............................. <"modtool_extrainfo">
  [ 82] pusharglist 2 ........................... <tWndObj, "modtool_extrainfo">
  [ 84] objcall 89 .............................. <tWndObj.elementExists("modtool_extrainfo")>
  [ 86] jmpifz [103] ............................ if tWndObj.elementExists("modtool_extrainfo") then
  [ 89] getlocal 0 .............................. <tWndObj>
  [ 91] pushcons 81 ............................. <"modtool_extrainfo">
  [ 93] pusharglist 2 ........................... <tWndObj, "modtool_extrainfo">
  [ 95] objcall 82 .............................. <tWndObj.getElement("modtool_extrainfo")>
  [ 97] pusharglist 1 ........................... <tWndObj.getElement("modtool_extrainfo")>
  [ 99] objcall 27 .............................. <tWndObj.getElement("modtool_extrainfo").getText()>
  [101] setlocal 4 .............................. tExtrainfo = tWndObj.getElement("modtool_extrainfo").getText()
  [103] getprop 37 .............................. <pModToolMode>
  [105] peek 0 .................................. case pModToolMode of
  [107] pushcons 26 ............................. <"ban">
  [109] eq
  [110] jmpifz [169] ............................ (case) "ban":
  [113] getlocal 0 .............................. <tWndObj>
  [115] pushcons 62 ............................. <"ban_length_menu">
  [117] pusharglist 2 ........................... <tWndObj, "ban_length_menu">
  [119] objcall 89 .............................. <tWndObj.elementExists("ban_length_menu")>
  [121] not ..................................... <not tWndObj.elementExists("ban_length_menu")>
  [122] jmpifz [132] ............................ if not tWndObj.elementExists("ban_length_menu") then
  [125] pop 1
  [127] pushzero ................................ <0>
  [128] pusharglistnoret 1 ...................... <0>
  [130] extcall 44 .............................. return 0
  [132] getlocal 0 .............................. <tWndObj>
  [134] pushcons 62 ............................. <"ban_length_menu">
  [136] pusharglist 2 ........................... <tWndObj, "ban_length_menu">
  [138] objcall 82 .............................. <tWndObj.getElement("ban_length_menu")>
  [140] pusharglist 1 ........................... <tWndObj.getElement("ban_length_menu")>
  [142] objcall 146 ............................. <tWndObj.getElement("ban_length_menu").getSelection()>
  [144] setlocal 5 .............................. tHours = tWndObj.getElement("ban_length_menu").getSelection()
  [146] getprop 36 .............................. <pModToolCheckBoxes>
  [148] pushint8 1 .............................. <1>
  [150] pusharglist 2 ........................... <pModToolCheckBoxes, 1>
  [152] objcall 96 .............................. <pModToolCheckBoxes[1]>
  [154] setlocal 6 .............................. tBanIP = pModToolCheckBoxes[1]
  [156] getprop 36 .............................. <pModToolCheckBoxes>
  [158] pushint8 2 .............................. <2>
  [160] pusharglist 2 ........................... <pModToolCheckBoxes, 2>
  [162] objcall 96 .............................. <pModToolCheckBoxes[2]>
  [164] setlocal 7 .............................. tBanComputer = pModToolCheckBoxes[2]
  [166] jmp [238]
  [169] peek 0
  [171] pushcons 24 ............................. <"alert">
  [173] eq
  [174] jmpifz [186] ............................ (case) "alert":
  [177] pushzero ................................ <0>
  [178] setlocal 8 .............................. tTargetType = 0
  [180] pushzero ................................ <0>
  [181] setlocal 9 .............................. tActionType = 0
  [183] jmp [238]
  [186] peek 0
  [188] pushcons 22 ............................. <"kick">
  [190] eq
  [191] jmpifz [204] ............................ (case) "kick":
  [194] pushzero ................................ <0>
  [195] setlocal 8 .............................. tTargetType = 0
  [197] pushint8 1 .............................. <1>
  [199] setlocal 9 .............................. tActionType = 1
  [201] jmp [238]
  [204] peek 0
  [206] pushcons 34 ............................. <"roomkick">
  [208] eq
  [209] jmpifz [223] ............................ (case) "roomkick":
  [212] pushint8 1 .............................. <1>
  [214] setlocal 8 .............................. tTargetType = 1
  [216] pushint8 1 .............................. <1>
  [218] setlocal 9 .............................. tActionType = 1
  [220] jmp [238]
  [223] peek 0
  [225] pushcons 32 ............................. <"roomalert">
  [227] eq
  [228] jmpifz [238] ............................ (case) "roomalert":
  [231] pushint8 1 .............................. <1>
  [233] setlocal 8 .............................. tTargetType = 1
  [235] pushzero ................................ <0>
  [236] setlocal 9 .............................. tActionType = 0
  [238] pop 1 ................................... end case
  [240] getprop 37 .............................. <pModToolMode>
  [242] pushcons 26 ............................. <"ban">
  [244] eq ...................................... <pModToolMode = "ban">
  [245] jmpifz [287] ............................ if pModToolMode = "ban" then / else
  [248] pushsymb 101 ............................ <#integer>
  [250] pushzero ................................ <0>
  [251] pushsymb 101 ............................ <#integer>
  [253] pushint8 2 .............................. <2>
  [255] pushsymb 147 ............................ <#string>
  [257] getlocal 3 .............................. <tReason>
  [259] pushsymb 147 ............................ <#string>
  [261] getlocal 4 .............................. <tExtrainfo>
  [263] pushsymb 147 ............................ <#string>
  [265] getlocal 2 .............................. <tName>
  [267] pushsymb 101 ............................ <#integer>
  [269] getlocal 5 .............................. <tHours>
  [271] pushsymb 101 ............................ <#integer>
  [273] getlocal 7 .............................. <tBanComputer>
  [275] pushsymb 101 ............................ <#integer>
  [277] getlocal 6 .............................. <tBanIP>
  [279] pusharglist 16 .......................... <[#integer: 0, #integer: 2, #string: tReason, #string: tExtrainfo, #string: tName, #integer: tHours, #integer: tBanComputer, #integer: tBanIP]>
  [281] pushproplist ............................ <[#integer: 0, #integer: 2, #string: tReason, #string: tExtrainfo, #string: tName, #integer: tHours, #integer: tBanComputer, #integer: tBanIP]>
  [282] setlocal 10 ............................. tStruct = [#integer: 0, #integer: 2, #string: tReason, #string: tExtrainfo, #string: tName, #integer: tHours, #integer: tBanComputer, #integer: tBanIP]
  [284] jmp [343]
  [287] getlocal 8 .............................. <tTargetType>
  [289] pushzero ................................ <0>
  [290] eq ...................................... <tTargetType = 0>
  [291] jmpifz [322] ............................ if tTargetType = 0 then / else
  [294] pushsymb 101 ............................ <#integer>
  [296] getlocal 8 .............................. <tTargetType>
  [298] pushsymb 101 ............................ <#integer>
  [300] getlocal 9 .............................. <tActionType>
  [302] pushsymb 147 ............................ <#string>
  [304] getlocal 3 .............................. <tReason>
  [306] pushsymb 147 ............................ <#string>
  [308] getlocal 4 .............................. <tExtrainfo>
  [310] pushsymb 147 ............................ <#string>
  [312] getlocal 2 .............................. <tName>
  [314] pusharglist 10 .......................... <[#integer: tTargetType, #integer: tActionType, #string: tReason, #string: tExtrainfo, #string: tName]>
  [316] pushproplist ............................ <[#integer: tTargetType, #integer: tActionType, #string: tReason, #string: tExtrainfo, #string: tName]>
  [317] setlocal 10 ............................. tStruct = [#integer: tTargetType, #integer: tActionType, #string: tReason, #string: tExtrainfo, #string: tName]
  [319] jmp [343]
  [322] pushsymb 101 ............................ <#integer>
  [324] getlocal 8 .............................. <tTargetType>
  [326] pushsymb 101 ............................ <#integer>
  [328] getlocal 9 .............................. <tActionType>
  [330] pushsymb 147 ............................ <#string>
  [332] getlocal 3 .............................. <tReason>
  [334] pushsymb 147 ............................ <#string>
  [336] getlocal 4 .............................. <tExtrainfo>
  [338] pusharglist 8 ........................... <[#integer: tTargetType, #integer: tActionType, #string: tReason, #string: tExtrainfo]>
  [340] pushproplist ............................ <[#integer: tTargetType, #integer: tActionType, #string: tReason, #string: tExtrainfo]>
  [341] setlocal 10 ............................. tStruct = [#integer: tTargetType, #integer: tActionType, #string: tReason, #string: tExtrainfo]
  [343] pushcons 82 ............................. <"connection.info.id">
  [345] pusharglist 1 ........................... <"connection.info.id">
  [347] extcall 149 ............................. <getVariable("connection.info.id")>
  [349] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [351] extcall 148 ............................. <getConnection(getVariable("connection.info.id"))>
  [353] pushcons 83 ............................. <"MODERATIONACTION">
  [355] getlocal 10 ............................. <tStruct>
  [357] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "MODERATIONACTION", tStruct>
  [359] objcall 150 ............................. getConnection(getVariable("connection.info.id")).send("MODERATIONACTION", tStruct)
  [361] getparam 0 .............................. <me>
  [363] pusharglist 1 ........................... <me>
  [365] objcall 11 .............................. <me.showModToolWnd()>
  [367] pusharglistnoret 1 ...................... <me.showModToolWnd()>
  [369] extcall 44 .............................. return me.showModToolWnd()
  [371] ret
end

on eventProcCryWnd me, tEvent, tElemID, tParam
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 0 .............................. <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [392] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tElemID>
  [ 10] peek 0 .................................. case tElemID of
  [ 12] pushcons 84 ............................. <"close">
  [ 14] eq
  [ 15] jmpifz [ 33] ............................ (case) "close":
  [ 18] pop 1
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 1 ........................... <me>
  [ 24] objcall 8 ............................... <me.hideCryWnd()>
  [ 26] pusharglistnoret 1 ...................... <me.hideCryWnd()>
  [ 28] extcall 44 .............................. return me.hideCryWnd()
  [ 30] jmp [390]
  [ 33] peek 0
  [ 35] pushcons 85 ............................. <"hobba_prev">
  [ 37] eq
  [ 38] jmpifz [ 61] ............................ (case) "hobba_prev":
  [ 41] pop 1
  [ 43] getparam 0 .............................. <me>
  [ 45] getprop 34 .............................. <pCurrCryNum>
  [ 47] pushint8 1 .............................. <1>
  [ 49] sub ..................................... <pCurrCryNum - 1>
  [ 50] pusharglist 2 ........................... <me, pCurrCryNum - 1>
  [ 52] objcall 17 .............................. <me.fillCryData(pCurrCryNum - 1)>
  [ 54] pusharglistnoret 1 ...................... <me.fillCryData(pCurrCryNum - 1)>
  [ 56] extcall 44 .............................. return me.fillCryData(pCurrCryNum - 1)
  [ 58] jmp [390]
  [ 61] peek 0
  [ 63] pushcons 86 ............................. <"hobba_next">
  [ 65] eq
  [ 66] jmpifz [ 89] ............................ (case) "hobba_next":
  [ 69] pop 1
  [ 71] getparam 0 .............................. <me>
  [ 73] getprop 34 .............................. <pCurrCryNum>
  [ 75] pushint8 1 .............................. <1>
  [ 77] add ..................................... <pCurrCryNum + 1>
  [ 78] pusharglist 2 ........................... <me, pCurrCryNum + 1>
  [ 80] objcall 17 .............................. <me.fillCryData(pCurrCryNum + 1)>
  [ 82] pusharglistnoret 1 ...................... <me.fillCryData(pCurrCryNum + 1)>
  [ 84] extcall 44 .............................. return me.fillCryData(pCurrCryNum + 1)
  [ 86] jmp [390]
  [ 89] peek 0
  [ 91] pushcons 15 ............................. <"hobba_seelog">
  [ 93] eq
  [ 94] jmpifz [159] ............................ (case) "hobba_seelog":
  [ 97] pushcons 87 ............................. <"chatlog.url">
  [ 99] pusharglist 1 ........................... <"chatlog.url">
  [101] extcall 27 .............................. <getText("chatlog.url")>
  [103] setlocal 0 .............................. tUrlPrefix = getText("chatlog.url")
  [105] getlocal 0 .............................. <tUrlPrefix>
  [107] pushcons 88 ............................. <"http">
  [109] containsstr ............................. <tUrlPrefix contains "http">
  [110] jmpifz [137] ............................ if tUrlPrefix contains "http" then / else
  [113] pop 1
  [115] getlocal 0 .............................. <tUrlPrefix>
  [117] getprop 35 .............................. <pCurrCryData>
  [119] pushsymb 160 ............................ <#url_id>
  [121] pusharglist 2 ........................... <pCurrCryData, #url_id>
  [123] objcall 96 .............................. <pCurrCryData[#url_id]>
  [125] joinstr ................................. <tUrlPrefix & pCurrCryData[#url_id]>
  [126] pusharglist 1 ........................... <tUrlPrefix & pCurrCryData[#url_id]>
  [128] extcall 159 ............................. <openNetPage(tUrlPrefix & pCurrCryData[#url_id])>
  [130] pusharglistnoret 1 ...................... <openNetPage(tUrlPrefix & pCurrCryData[#url_id])>
  [132] extcall 44 .............................. return openNetPage(tUrlPrefix & pCurrCryData[#url_id])
  [134] jmp [156]
  [137] pop 1
  [139] getparam 0 .............................. <me>
  [141] pushcons 89 ............................. <"CFH log url prefix not defined or illegal:">
  [143] getlocal 0 .............................. <tUrlPrefix>
  [145] joinpadstr .............................. <"CFH log url prefix not defined or illegal:" && tUrlPrefix>
  [146] pushsymb 22 ............................. <#eventProcCryWnd>
  [148] pusharglist 3 ........................... <me, "CFH log url prefix not defined or illegal:" && tUrlPrefix, #eventProcCryWnd>
  [150] extcall 106 ............................. <error(me, "CFH log url prefix not defined or illegal:" && tUrlPrefix, #eventProcCryWnd)>
  [152] pusharglistnoret 1 ...................... <error(me, "CFH log url prefix not defined or illegal:" && tUrlPrefix, #eventProcCryWnd)>
  [154] extcall 44 .............................. return error(me, "CFH log url prefix not defined or illegal:" && tUrlPrefix, #eventProcCryWnd)
  [156] jmp [390]
  [159] peek 0
  [161] pushcons 90 ............................. <"hobba_pickup">
  [163] eq
  [164] jmpifz [189] ............................ (case) "hobba_pickup":
  [167] pop 1
  [169] getparam 0 .............................. <me>
  [171] pusharglist 1 ........................... <me>
  [173] objcall 76 .............................. <me.getComponent()>
  [175] getprop 33 .............................. <pCurrCryID>
  [177] pushzero ................................ <0>
  [178] pusharglist 3 ........................... <me.getComponent(), pCurrCryID, 0>
  [180] objcall 161 ............................. <me.getComponent().send_cryPick(pCurrCryID, 0)>
  [182] pusharglistnoret 1 ...................... <me.getComponent().send_cryPick(pCurrCryID, 0)>
  [184] extcall 44 .............................. return me.getComponent().send_cryPick(pCurrCryID, 0)
  [186] jmp [390]
  [189] peek 0
  [191] pushcons 91 ............................. <"hobba_pickup_go">
  [193] eq
  [194] jmpifz [220] ............................ (case) "hobba_pickup_go":
  [197] pop 1
  [199] getparam 0 .............................. <me>
  [201] pusharglist 1 ........................... <me>
  [203] objcall 76 .............................. <me.getComponent()>
  [205] getprop 33 .............................. <pCurrCryID>
  [207] pushint8 1 .............................. <1>
  [209] pusharglist 3 ........................... <me.getComponent(), pCurrCryID, 1>
  [211] objcall 161 ............................. <me.getComponent().send_cryPick(pCurrCryID, 1)>
  [213] pusharglistnoret 1 ...................... <me.getComponent().send_cryPick(pCurrCryID, 1)>
  [215] extcall 44 .............................. return me.getComponent().send_cryPick(pCurrCryID, 1)
  [217] jmp [390]
  [220] peek 0
  [222] pushcons 92 ............................. <"hobba_pickandreply">
  [224] eq
  [225] jmpifz [256] ............................ (case) "hobba_pickandreply":
  [228] getparam 0 .............................. <me>
  [230] pusharglistnoret 1 ...................... <me>
  [232] objcall 15 .............................. me.openCryReplyWindow()
  [234] pop 1
  [236] getparam 0 .............................. <me>
  [238] pusharglist 1 ........................... <me>
  [240] objcall 76 .............................. <me.getComponent()>
  [242] getprop 33 .............................. <pCurrCryID>
  [244] pushzero ................................ <0>
  [245] pusharglist 3 ........................... <me.getComponent(), pCurrCryID, 0>
  [247] objcall 161 ............................. <me.getComponent().send_cryPick(pCurrCryID, 0)>
  [249] pusharglistnoret 1 ...................... <me.getComponent().send_cryPick(pCurrCryID, 0)>
  [251] extcall 44 .............................. return me.getComponent().send_cryPick(pCurrCryID, 0)
  [253] jmp [390]
  [256] peek 0
  [258] pushcons 93 ............................. <"hobba_reply_button">
  [260] eq
  [261] jmpifz [317] ............................ (case) "hobba_reply_button":
  [264] getprop 26 .............................. <pCryWindowID>
  [266] pusharglist 1 ........................... <pCryWindowID>
  [268] extcall 75 .............................. <getWindow(pCryWindowID)>
  [270] pushcons 94 ............................. <"hobba_reply_field">
  [272] pusharglist 2 ........................... <getWindow(pCryWindowID), "hobba_reply_field">
  [274] objcall 82 .............................. <getWindow(pCryWindowID).getElement("hobba_reply_field")>
  [276] pusharglist 1 ........................... <getWindow(pCryWindowID).getElement("hobba_reply_field")>
  [278] objcall 27 .............................. <getWindow(pCryWindowID).getElement("hobba_reply_field").getText()>
  [280] setlocal 1 .............................. tText = getWindow(pCryWindowID).getElement("hobba_reply_field").getText()
  [282] getparam 0 .............................. <me>
  [284] pusharglist 1 ........................... <me>
  [286] objcall 76 .............................. <me.getComponent()>
  [288] getprop 33 .............................. <pCurrCryID>
  [290] getlocal 1 .............................. <tText>
  [292] pusharglistnoret 3 ...................... <me.getComponent(), pCurrCryID, tText>
  [294] objcall 162 ............................. me.getComponent().send_CfhReply(pCurrCryID, tText)
  [296] getparam 0 .............................. <me>
  [298] pusharglistnoret 1 ...................... <me>
  [300] objcall 8 ............................... me.hideCryWnd()
  [302] pop 1
  [304] getparam 0 .............................. <me>
  [306] pusharglist 1 ........................... <me>
  [308] objcall 7 ............................... <me.showCryWnd()>
  [310] pusharglistnoret 1 ...................... <me.showCryWnd()>
  [312] extcall 44 .............................. return me.showCryWnd()
  [314] jmp [390]
  [317] peek 0
  [319] pushcons 95 ............................. <"hobba_reply_cancel">
  [321] eq
  [322] jmpifz [346] ............................ (case) "hobba_reply_cancel":
  [325] getparam 0 .............................. <me>
  [327] pusharglistnoret 1 ...................... <me>
  [329] objcall 8 ............................... me.hideCryWnd()
  [331] pop 1
  [333] getparam 0 .............................. <me>
  [335] pusharglist 1 ........................... <me>
  [337] objcall 7 ............................... <me.showCryWnd()>
  [339] pusharglistnoret 1 ...................... <me.showCryWnd()>
  [341] extcall 44 .............................. return me.showCryWnd()
  [343] jmp [390]
  [346] peek 0
  [348] pushcons 50 ............................. <"hobba_change_cfh_type">
  [350] eq
  [351] jmpifz [383] ............................ (case) "hobba_change_cfh_type":
  [354] pop 1
  [356] getparam 0 .............................. <me>
  [358] pusharglist 1 ........................... <me>
  [360] objcall 76 .............................. <me.getComponent()>
  [362] getprop 33 .............................. <pCurrCryID>
  [364] getprop 35 .............................. <pCurrCryData>
  [366] pushsymb 112 ............................ <#category>
  [368] pusharglist 2 ........................... <pCurrCryData, #category>
  [370] objcall 96 .............................. <pCurrCryData[#category]>
  [372] pusharglist 3 ........................... <me.getComponent(), pCurrCryID, pCurrCryData[#category]>
  [374] objcall 163 ............................. <me.getComponent().send_changeCfhType(pCurrCryID, pCurrCryData[#category])>
  [376] pusharglistnoret 1 ...................... <me.getComponent().send_changeCfhType(pCurrCryID, pCurrCryData[#category])>
  [378] extcall 44 .............................. return me.getComponent().send_changeCfhType(pCurrCryID, pCurrCryData[#category])
  [380] jmp [390] ............................... (case) otherwise:
  [383] pop 1
  [385] pushzero ................................ <0>
  [386] pusharglistnoret 1 ...................... <0>
  [388] extcall 44 .............................. return 0
  [390] pop 1 ................................... end case
  [392] ret
end

on eventProcModToolWnd me, tEvent, tElemID, tParam
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 0 .............................. <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [219] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tElemID>
  [ 10] peek 0 .................................. case tElemID of
  [ 12] pushcons 84 ............................. <"close">
  [ 14] eq
  [ 15] jmpifz [ 27] ............................ (case) "close":
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 9 ............................... me.hideModToolWnd()
  [ 24] jmp [217]
  [ 27] peek 0
  [ 29] pushcons 96 ............................. <"modtool_cancel">
  [ 31] eq
  [ 32] jmpifz [ 44] ............................ (case) "modtool_cancel":
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 1 ...................... <me>
  [ 39] objcall 11 .............................. me.showModToolWnd()
  [ 41] jmp [217]
  [ 44] peek 0
  [ 46] pushcons 23 ............................. <"modtool_kickuser">
  [ 48] eq
  [ 49] jmpifz [ 65] ............................ (case) "modtool_kickuser":
  [ 52] getparam 0 .............................. <me>
  [ 54] pushcons 20 ............................. <"user">
  [ 56] pushcons 22 ............................. <"kick">
  [ 58] pusharglistnoret 3 ...................... <me, "user", "kick">
  [ 60] objcall 14 .............................. me.changeModtoolView("user", "kick")
  [ 62] jmp [217]
  [ 65] peek 0
  [ 67] pushcons 27 ............................. <"modtool_banuser">
  [ 69] eq
  [ 70] jmpifz [ 86] ............................ (case) "modtool_banuser":
  [ 73] getparam 0 .............................. <me>
  [ 75] pushcons 26 ............................. <"ban">
  [ 77] pushcons 26 ............................. <"ban">
  [ 79] pusharglistnoret 3 ...................... <me, "ban", "ban">
  [ 81] objcall 14 .............................. me.changeModtoolView("ban", "ban")
  [ 83] jmp [217]
  [ 86] peek 0
  [ 88] pushcons 25 ............................. <"modtool_alertuser">
  [ 90] eq
  [ 91] jmpifz [107] ............................ (case) "modtool_alertuser":
  [ 94] getparam 0 .............................. <me>
  [ 96] pushcons 20 ............................. <"user">
  [ 98] pushcons 24 ............................. <"alert">
  [100] pusharglistnoret 3 ...................... <me, "user", "alert">
  [102] objcall 14 .............................. me.changeModtoolView("user", "alert")
  [104] jmp [217]
  [107] peek 0
  [109] pushcons 35 ............................. <"modtool_roomkick">
  [111] eq
  [112] jmpifz [128] ............................ (case) "modtool_roomkick":
  [115] getparam 0 .............................. <me>
  [117] pushcons 30 ............................. <"room">
  [119] pushcons 34 ............................. <"roomkick">
  [121] pusharglistnoret 3 ...................... <me, "room", "roomkick">
  [123] objcall 14 .............................. me.changeModtoolView("room", "roomkick")
  [125] jmp [217]
  [128] peek 0
  [130] pushcons 33 ............................. <"modtool_roomalert">
  [132] eq
  [133] jmpifz [149] ............................ (case) "modtool_roomalert":
  [136] getparam 0 .............................. <me>
  [138] pushcons 30 ............................. <"room">
  [140] pushcons 32 ............................. <"roomalert">
  [142] pusharglistnoret 3 ...................... <me, "room", "roomalert">
  [144] objcall 14 .............................. me.changeModtoolView("room", "roomalert")
  [146] jmp [217]
  [149] peek 0
  [151] pushcons 59 ............................. <"modtool_checkbox_ip">
  [153] eq
  [154] jmpifz [168] ............................ (case) "modtool_checkbox_ip":
  [157] getparam 0 .............................. <me>
  [159] pushcons 79 ............................. <"ip">
  [161] pusharglistnoret 2 ...................... <me, "ip">
  [163] objcall 20 .............................. me.checkBoxClicked("ip")
  [165] jmp [217]
  [168] peek 0
  [170] pushcons 61 ............................. <"modtool_checkbox_computer">
  [172] eq
  [173] jmpifz [187] ............................ (case) "modtool_checkbox_computer":
  [176] getparam 0 .............................. <me>
  [178] pushcons 97 ............................. <"computer">
  [180] pusharglistnoret 2 ...................... <me, "computer">
  [182] objcall 20 .............................. me.checkBoxClicked("computer")
  [184] jmp [217]
  [187] peek 0
  [189] pushcons 98 ............................. <"modtool_ok">
  [191] eq
  [192] jmpifz [210] ............................ (case) "modtool_ok":
  [195] pop 1
  [197] getparam 0 .............................. <me>
  [199] pusharglist 1 ........................... <me>
  [201] objcall 21 .............................. <me.sendModCommand()>
  [203] pusharglistnoret 1 ...................... <me.sendModCommand()>
  [205] extcall 44 .............................. return me.sendModCommand()
  [207] jmp [217] ............................... (case) otherwise:
  [210] pop 1
  [212] pushzero ................................ <0>
  [213] pusharglistnoret 1 ...................... <0>
  [215] extcall 44 .............................. return 0
  [217] pop 1 ................................... end case
  [219] getparam 1 .............................. <tEvent>
  [221] pushsymb 87 ............................. <#keyDown>
  [223] eq ...................................... <tEvent = #keyDown>
  [224] jmpifz [408] ............................ if tEvent = #keyDown then
  [227] pusharglist 0 ........................... <>
  [229] thebuiltin 169 .......................... <the key>
  [231] pushcons 99 ............................. <TAB>
  [233] eq ...................................... <the key = TAB>
  [234] jmpifz [404] ............................ if the key = TAB then / else
  [237] getprop 28 .............................. <pModtoolWindowID>
  [239] pusharglist 1 ........................... <pModtoolWindowID>
  [241] extcall 47 .............................. <windowExists(pModtoolWindowID)>
  [243] not ..................................... <not windowExists(pModtoolWindowID)>
  [244] jmpifz [252] ............................ if not windowExists(pModtoolWindowID) then
  [247] pushzero ................................ <0>
  [248] pusharglistnoret 1 ...................... <0>
  [250] extcall 44 .............................. return 0
  [252] getprop 28 .............................. <pModtoolWindowID>
  [254] pusharglist 1 ........................... <pModtoolWindowID>
  [256] extcall 75 .............................. <getWindow(pModtoolWindowID)>
  [258] setlocal 0 .............................. tWndObj = getWindow(pModtoolWindowID)
  [260] getparam 2 .............................. <tElemID>
  [262] pushcons 19 ............................. <"modtool_name">
  [264] eq ...................................... <tElemID = "modtool_name">
  [265] jmpifz [298] ............................ if tElemID = "modtool_name" then / else
  [268] getlocal 0 .............................. <tWndObj>
  [270] pushcons 80 ............................. <"modtool_reason">
  [272] pusharglist 2 ........................... <tWndObj, "modtool_reason">
  [274] objcall 82 .............................. <tWndObj.getElement("modtool_reason")>
  [276] setlocal 1 .............................. tElem = tWndObj.getElement("modtool_reason")
  [278] getlocal 1 .............................. <tElem>
  [280] pusharglist 1 ........................... <tElem>
  [282] extcall 170 ............................. <objectp(tElem)>
  [284] jmpifz [295] ............................ if objectp(tElem) then
  [287] getlocal 1 .............................. <tElem>
  [289] pushint8 1 .............................. <1>
  [291] pusharglistnoret 2 ...................... <tElem, 1>
  [293] objcall 171 ............................. tElem.setFocus(1)
  [295] jmp [401]
  [298] getparam 2 .............................. <tElemID>
  [300] pushcons 80 ............................. <"modtool_reason">
  [302] eq ...................................... <tElemID = "modtool_reason">
  [303] jmpifz [336] ............................ if tElemID = "modtool_reason" then / else
  [306] getlocal 0 .............................. <tWndObj>
  [308] pushcons 81 ............................. <"modtool_extrainfo">
  [310] pusharglist 2 ........................... <tWndObj, "modtool_extrainfo">
  [312] objcall 82 .............................. <tWndObj.getElement("modtool_extrainfo")>
  [314] setlocal 1 .............................. tElem = tWndObj.getElement("modtool_extrainfo")
  [316] getlocal 1 .............................. <tElem>
  [318] pusharglist 1 ........................... <tElem>
  [320] extcall 170 ............................. <objectp(tElem)>
  [322] jmpifz [333] ............................ if objectp(tElem) then
  [325] getlocal 1 .............................. <tElem>
  [327] pushint8 1 .............................. <1>
  [329] pusharglistnoret 2 ...................... <tElem, 1>
  [331] objcall 171 ............................. tElem.setFocus(1)
  [333] jmp [401]
  [336] getparam 2 .............................. <tElemID>
  [338] pushcons 81 ............................. <"modtool_extrainfo">
  [340] eq ...................................... <tElemID = "modtool_extrainfo">
  [341] jmpifz [401] ............................ if tElemID = "modtool_extrainfo" then
  [344] getlocal 0 .............................. <tWndObj>
  [346] pushcons 19 ............................. <"modtool_name">
  [348] pusharglist 2 ........................... <tWndObj, "modtool_name">
  [350] objcall 82 .............................. <tWndObj.getElement("modtool_name")>
  [352] setlocal 1 .............................. tElem = tWndObj.getElement("modtool_name")
  [354] getlocal 1 .............................. <tElem>
  [356] pusharglist 1 ........................... <tElem>
  [358] extcall 170 ............................. <objectp(tElem)>
  [360] jmpifz [374] ............................ if objectp(tElem) then / else
  [363] getlocal 1 .............................. <tElem>
  [365] pushint8 1 .............................. <1>
  [367] pusharglistnoret 2 ...................... <tElem, 1>
  [369] objcall 171 ............................. tElem.setFocus(1)
  [371] jmp [401]
  [374] getlocal 0 .............................. <tWndObj>
  [376] pushcons 80 ............................. <"modtool_reason">
  [378] pusharglist 2 ........................... <tWndObj, "modtool_reason">
  [380] objcall 82 .............................. <tWndObj.getElement("modtool_reason")>
  [382] setlocal 1 .............................. tElem = tWndObj.getElement("modtool_reason")
  [384] getlocal 1 .............................. <tElem>
  [386] pusharglist 1 ........................... <tElem>
  [388] extcall 170 ............................. <objectp(tElem)>
  [390] jmpifz [401] ............................ if objectp(tElem) then
  [393] getlocal 1 .............................. <tElem>
  [395] pushint8 1 .............................. <1>
  [397] pusharglistnoret 2 ...................... <tElem, 1>
  [399] objcall 171 ............................. tElem.setFocus(1)
  [401] jmp [408]
  [404] pusharglistnoret 0 ...................... <>
  [406] extcall 172 ............................. pass()
  [408] pushint8 1 .............................. <1>
  [410] pusharglistnoret 1 ...................... <1>
  [412] extcall 44 .............................. return 1
  [414] ret
end

on eventProcAlert me, tEvent, tElemID, tParam
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 7 ............................... me.showCryWnd()
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 44 .............................. return 1
  [ 12] ret
end

on eventProcModToolButton me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 11 .............................. me.showModToolWnd()
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 44 .............................. return 1
  [ 12] ret
end
