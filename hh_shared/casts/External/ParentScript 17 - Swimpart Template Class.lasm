property ancestor, pPart, pmodel, pDirection, pDrawProps, pSwimProps, pAction, pActionLh, pActionRh, pMemString, pXFix, pYFix, pCacheImage, pCacheRectA, pCacheRectB, pAnimation, pAnimFrame, pTotalFrame

on deconsturct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 30 .............................. <VOID>
  [  4] setprop 379 ............................. ancestor = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 44 .............................. return 1
  [ 13] ret
end

on define me, tPart, tmodel, tColor, tDirection, tAction, tAncestor
  [  0] getparam 6 .............................. <tAncestor>
  [  2] setprop 379 ............................. ancestor = tAncestor
  [  5] getparam 1 .............................. <tPart>
  [  7] setprop 380 ............................. pPart = tPart
  [ 10] getparam 2 .............................. <tmodel>
  [ 12] setprop 381 ............................. pmodel = tmodel
  [ 15] pushsymb 383 ............................ <#maskImage>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 58 ............................. <#ink>
  [ 21] pushzero ................................ <0>
  [ 22] pushsymb 384 ............................ <#bgColor>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglist 6 ........................... <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 28] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 29] setprop 382 ............................. pDrawProps = [#maskImage: 0, #ink: 0, #bgColor: 0]
  [ 32] pushsymb 383 ............................ <#maskImage>
  [ 35] pushzero ................................ <0>
  [ 36] pushsymb 58 ............................. <#ink>
  [ 38] pushzero ................................ <0>
  [ 39] pushsymb 384 ............................ <#bgColor>
  [ 42] pushzero ................................ <0>
  [ 43] pushint16 156 ........................... <156>
  [ 46] pushint16 156 ........................... <156>
  [ 49] pusharglist 3 ........................... <0, 156, 156>
  [ 51] extcall 322 ............................. <rgb(0, 156, 156)>
  [ 54] pushsymb 344 ............................ <#color>
  [ 57] pushzero ................................ <0>
  [ 58] pushint16 156 ........................... <156>
  [ 61] pushint16 156 ........................... <156>
  [ 64] pusharglist 3 ........................... <0, 156, 156>
  [ 66] extcall 322 ............................. <rgb(0, 156, 156)>
  [ 69] pushsymb 629 ............................ <#blend>
  [ 72] pushint8 60 ............................. <60>
  [ 74] pusharglist 10 .......................... <[#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]>
  [ 76] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]>
  [ 77] setprop 672 ............................. pSwimProps = [#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]
  [ 80] pushzero ................................ <0>
  [ 81] setprop 385 ............................. pCacheImage = 0
  [ 84] pushzero ................................ <0>
  [ 85] pushzero ................................ <0>
  [ 86] pushzero ................................ <0>
  [ 87] pushzero ................................ <0>
  [ 88] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 90] extcall 387 ............................. <rect(0, 0, 0, 0)>
  [ 93] setprop 386 ............................. pCacheRectA = rect(0, 0, 0, 0)
  [ 96] pushzero ................................ <0>
  [ 97] pushzero ................................ <0>
  [ 98] pushzero ................................ <0>
  [ 99] pushzero ................................ <0>
  [100] pusharglist 4 ........................... <0, 0, 0, 0>
  [102] extcall 387 ............................. <rect(0, 0, 0, 0)>
  [105] setprop 388 ............................. pCacheRectB = rect(0, 0, 0, 0)
  [108] getparam 0 .............................. <me>
  [110] pusharglistnoret 1 ...................... <me>
  [112] objcall 363 ............................. me.defineInk()
  [115] getparam 0 .............................. <me>
  [117] getparam 3 .............................. <tColor>
  [119] pusharglistnoret 2 ...................... <me, tColor>
  [121] objcall 365 ............................. me.setColor(tColor)
  [124] getparam 4 .............................. <tDirection>
  [126] setprop 389 ............................. pDirection = tDirection
  [129] getparam 5 .............................. <tAction>
  [131] setprop 390 ............................. pAction = tAction
  [134] getparam 5 .............................. <tAction>
  [136] setprop 391 ............................. pActionLh = tAction
  [139] getparam 5 .............................. <tAction>
  [141] setprop 392 ............................. pActionRh = tAction
  [144] pushcons 0 .............................. <EMPTY>
  [146] setprop 393 ............................. pMemString = EMPTY
  [149] pushzero ................................ <0>
  [150] setprop 394 ............................. pXFix = 0
  [153] pushzero ................................ <0>
  [154] setprop 395 ............................. pYFix = 0
  [157] pushzero ................................ <0>
  [158] setprop 396 ............................. pAnimation = 0
  [161] pushint8 1 .............................. <1>
  [163] setprop 397 ............................. pAnimFrame = 1
  [166] pushint8 1 .............................. <1>
  [168] setprop 398 ............................. pTotalFrame = 1
  [171] pushint8 1 .............................. <1>
  [173] pusharglistnoret 1 ...................... <1>
  [175] extcall 44 .............................. return 1
  [177] ret
end

on update me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tAnimCounter = 0
  [  3] getprop 390 ............................. <pAction>
  [  6] setlocal 1 .............................. tAction = pAction
  [  8] getprop 380 ............................. <pPart>
  [ 11] setlocal 2 .............................. tPart = pPart
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 401 ............................ <#pFlipList>
  [ 18] getprop 389 ............................. <pDirection>
  [ 21] pushint8 1 .............................. <1>
  [ 23] add ..................................... <pDirection + 1>
  [ 24] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 26] objcall 104 ............................. <me.pFlipList[pDirection + 1]>
  [ 28] setlocal 3 .............................. tdir = me.pFlipList[pDirection + 1]
  [ 30] pushzero ................................ <0>
  [ 31] setprop 394 ............................. pXFix = 0
  [ 34] pushzero ................................ <0>
  [ 35] setprop 395 ............................. pYFix = 0
  [ 38] getparam 0 .............................. <me>
  [ 40] getobjprop 402 .......................... <me.pAnimating>
  [ 43] jmpifz [ 58] ............................ if me.pAnimating then / else
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglist 1 ........................... <me>
  [ 50] objcall 378 ............................. <me.animate()>
  [ 53] setlocal 4 .............................. tMemString = me.animate()
  [ 55] jmp [681]
  [ 58] getprop 380 ............................. <pPart>
  [ 61] peek 0 .................................. case pPart of
  [ 63] pushcons 1 .............................. <"bd">
  [ 65] nteq
  [ 66] jmpifz [ 85] ............................ (case) "bd", ...
  [ 69] peek 0
  [ 71] pushcons 2 .............................. <"lg">
  [ 73] nteq
  [ 74] jmpifz [ 85] ............................ (case) ..., "lg", ...
  [ 77] peek 0
  [ 79] pushcons 3 .............................. <"sh">
  [ 81] eq
  [ 82] jmpifz [122] ............................ (case) ..., "sh":
  [ 85] pushint8 1 .............................. <1>
  [ 87] setlocal 5 .............................. tUnderWater = 1
  [ 89] getprop 390 ............................. <pAction>
  [ 92] pushcons 4 .............................. <"wlk">
  [ 94] eq ...................................... <pAction = "wlk">
  [ 95] getprop 390 ............................. <pAction>
  [ 98] pushcons 5 .............................. <"swm">
  [100] eq ...................................... <pAction = "swm">
  [101] or ...................................... <(pAction = "wlk") or (pAction = "swm")>
  [102] getprop 390 ............................. <pAction>
  [105] pushcons 6 .............................. <"sws">
  [107] eq ...................................... <pAction = "sws">
  [108] or ...................................... <(pAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [109] jmpifz [119] ............................ if (pAction = "wlk") or (pAction = "swm") or (pAction = "sws") then
  [112] getparam 0 .............................. <me>
  [114] getobjprop 403 .......................... <me.pAnimCounter>
  [117] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [119] jmp [641]
  [122] peek 0
  [124] pushcons 7 .............................. <"lh">
  [126] nteq
  [127] jmpifz [138] ............................ (case) "lh", ...
  [130] peek 0
  [132] pushcons 8 .............................. <"ls">
  [134] eq
  [135] jmpifz [290] ............................ (case) ..., "ls":
  [138] pushint8 1 .............................. <1>
  [140] setlocal 5 .............................. tUnderWater = 1
  [142] getprop 389 ............................. <pDirection>
  [145] getlocal 3 .............................. <tdir>
  [147] eq ...................................... <pDirection = tdir>
  [148] jmpifz [170] ............................ if pDirection = tdir then / else
  [151] getprop 391 ............................. <pActionLh>
  [154] pusharglist 1 ........................... <pActionLh>
  [156] extcall 71 .............................. <voidp(pActionLh)>
  [158] not ..................................... <not voidp(pActionLh)>
  [159] jmpifz [167] ............................ if not voidp(pActionLh) then
  [162] getprop 391 ............................. <pActionLh>
  [165] setlocal 1 .............................. tAction = pActionLh
  [167] jmp [186]
  [170] getprop 392 ............................. <pActionRh>
  [173] pusharglist 1 ........................... <pActionRh>
  [175] extcall 71 .............................. <voidp(pActionRh)>
  [177] not ..................................... <not voidp(pActionRh)>
  [178] jmpifz [186] ............................ if not voidp(pActionRh) then
  [181] getprop 392 ............................. <pActionRh>
  [184] setlocal 1 .............................. tAction = pActionRh
  [186] getlocal 1 .............................. <tAction>
  [188] pushcons 4 .............................. <"wlk">
  [190] eq ...................................... <tAction = "wlk">
  [191] getprop 390 ............................. <pAction>
  [194] pushcons 5 .............................. <"swm">
  [196] eq ...................................... <pAction = "swm">
  [197] or ...................................... <(tAction = "wlk") or (pAction = "swm")>
  [198] getprop 390 ............................. <pAction>
  [201] pushcons 6 .............................. <"sws">
  [203] eq ...................................... <pAction = "sws">
  [204] or ...................................... <(tAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [205] jmpifz [218] ............................ if (tAction = "wlk") or (pAction = "swm") or (pAction = "sws") then / else
  [208] getparam 0 .............................. <me>
  [210] getobjprop 403 .......................... <me.pAnimCounter>
  [213] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [215] jmp [287]
  [218] getlocal 1 .............................. <tAction>
  [220] pushcons 9 .............................. <"wav">
  [222] eq ...................................... <tAction = "wav">
  [223] jmpifz [239] ............................ if tAction = "wav" then / else
  [226] getparam 0 .............................. <me>
  [228] getobjprop 403 .......................... <me.pAnimCounter>
  [231] pushint8 2 .............................. <2>
  [233] mod ..................................... <me.pAnimCounter mod 2>
  [234] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [236] jmp [287]
  [239] pushcons 10 ............................. <"crr">
  [241] pushcons 11 ............................. <"drk">
  [243] pushcons 12 ............................. <"ohd">
  [245] pusharglist 3 ........................... <["crr", "drk", "ohd"]>
  [247] pushlist ................................ <["crr", "drk", "ohd"]>
  [248] getlocal 1 .............................. <tAction>
  [250] pusharglist 2 ........................... <["crr", "drk", "ohd"], tAction>
  [252] objcall 404 ............................. <["crr", "drk", "ohd"].getPos(tAction)>
  [255] pushzero ................................ <0>
  [256] nteq .................................... <["crr", "drk", "ohd"].getPos(tAction) <> 0>
  [257] jmpifz [287] ............................ if ["crr", "drk", "ohd"].getPos(tAction) <> 0 then
  [260] pushint8 40 ............................. <40>
  [262] inv ..................................... <-40>
  [263] setprop 394 ............................. pXFix = -40
  [266] pushcons 13 ............................. <"r">
  [268] getprop 380 ............................. <pPart>
  [271] pushsymb 102 ............................ <#char>
  [273] pushint8 2 .............................. <2>
  [275] pusharglist 3 ........................... <pPart, #char, 2>
  [277] objcall 104 ............................. <pPart.char[2]>
  [279] joinstr ................................. <"r" & pPart.char[2]>
  [280] setlocal 2 .............................. tPart = "r" & pPart.char[2]
  [282] getprop 389 ............................. <pDirection>
  [285] setlocal 3 .............................. tdir = pDirection
  [287] jmp [641]
  [290] peek 0
  [292] pushcons 14 ............................. <"rh">
  [294] nteq
  [295] jmpifz [306] ............................ (case) "rh", ...
  [298] peek 0
  [300] pushcons 15 ............................. <"rs">
  [302] eq
  [303] jmpifz [428] ............................ (case) ..., "rs":
  [306] pushint8 1 .............................. <1>
  [308] setlocal 5 .............................. tUnderWater = 1
  [310] getprop 389 ............................. <pDirection>
  [313] getlocal 3 .............................. <tdir>
  [315] eq ...................................... <pDirection = tdir>
  [316] jmpifz [338] ............................ if pDirection = tdir then / else
  [319] getprop 392 ............................. <pActionRh>
  [322] pusharglist 1 ........................... <pActionRh>
  [324] extcall 71 .............................. <voidp(pActionRh)>
  [326] not ..................................... <not voidp(pActionRh)>
  [327] jmpifz [335] ............................ if not voidp(pActionRh) then
  [330] getprop 392 ............................. <pActionRh>
  [333] setlocal 1 .............................. tAction = pActionRh
  [335] jmp [354]
  [338] getprop 391 ............................. <pActionLh>
  [341] pusharglist 1 ........................... <pActionLh>
  [343] extcall 71 .............................. <voidp(pActionLh)>
  [345] not ..................................... <not voidp(pActionLh)>
  [346] jmpifz [354] ............................ if not voidp(pActionLh) then
  [349] getprop 391 ............................. <pActionLh>
  [352] setlocal 1 .............................. tAction = pActionLh
  [354] getlocal 1 .............................. <tAction>
  [356] pushcons 4 .............................. <"wlk">
  [358] eq ...................................... <tAction = "wlk">
  [359] getprop 390 ............................. <pAction>
  [362] pushcons 5 .............................. <"swm">
  [364] eq ...................................... <pAction = "swm">
  [365] or ...................................... <(tAction = "wlk") or (pAction = "swm")>
  [366] getprop 390 ............................. <pAction>
  [369] pushcons 6 .............................. <"sws">
  [371] eq ...................................... <pAction = "sws">
  [372] or ...................................... <(tAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [373] jmpifz [386] ............................ if (tAction = "wlk") or (pAction = "swm") or (pAction = "sws") then / else
  [376] getparam 0 .............................. <me>
  [378] getobjprop 403 .......................... <me.pAnimCounter>
  [381] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [383] jmp [425]
  [386] getlocal 1 .............................. <tAction>
  [388] pushcons 9 .............................. <"wav">
  [390] eq ...................................... <tAction = "wav">
  [391] jmpifz [425] ............................ if tAction = "wav" then
  [394] getparam 0 .............................. <me>
  [396] getobjprop 403 .......................... <me.pAnimCounter>
  [399] pushint8 2 .............................. <2>
  [401] mod ..................................... <me.pAnimCounter mod 2>
  [402] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [404] pushcons 16 ............................. <"l">
  [406] getprop 380 ............................. <pPart>
  [409] pushsymb 102 ............................ <#char>
  [411] pushint8 2 .............................. <2>
  [413] pusharglist 3 ........................... <pPart, #char, 2>
  [415] objcall 104 ............................. <pPart.char[2]>
  [417] joinstr ................................. <"l" & pPart.char[2]>
  [418] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [420] getprop 389 ............................. <pDirection>
  [423] setlocal 3 .............................. tdir = pDirection
  [425] jmp [641]
  [428] peek 0
  [430] pushcons 17 ............................. <"hd">
  [432] nteq
  [433] jmpifz [444] ............................ (case) "hd", ...
  [436] peek 0
  [438] pushcons 18 ............................. <"fc">
  [440] eq
  [441] jmpifz [488] ............................ (case) ..., "fc":
  [444] pushzero ................................ <0>
  [445] setlocal 5 .............................. tUnderWater = 0
  [447] getparam 0 .............................. <me>
  [449] getobjprop 405 .......................... <me.pTalking>
  [452] jmpifz [485] ............................ if me.pTalking then
  [455] getprop 390 ............................. <pAction>
  [458] pushcons 19 ............................. <"lay">
  [460] eq ...................................... <pAction = "lay">
  [461] jmpifz [471] ............................ if pAction = "lay" then / else
  [464] pushcons 20 ............................. <"lsp">
  [466] setlocal 1 .............................. tAction = "lsp"
  [468] jmp [475]
  [471] pushcons 21 ............................. <"spk">
  [473] setlocal 1 .............................. tAction = "spk"
  [475] getparam 0 .............................. <me>
  [477] getobjprop 403 .......................... <me.pAnimCounter>
  [480] pushint8 2 .............................. <2>
  [482] mod ..................................... <me.pAnimCounter mod 2>
  [483] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [485] jmp [641]
  [488] peek 0
  [490] pushcons 22 ............................. <"ey">
  [492] eq
  [493] jmpifz [534] ............................ (case) "ey":
  [496] pushzero ................................ <0>
  [497] setlocal 5 .............................. tUnderWater = 0
  [499] getparam 0 .............................. <me>
  [501] getobjprop 405 .......................... <me.pTalking>
  [504] getprop 390 ............................. <pAction>
  [507] pushcons 19 ............................. <"lay">
  [509] nteq .................................... <pAction <> "lay">
  [510] and ..................................... <me.pTalking and (pAction <> "lay")>
  [511] getparam 0 .............................. <me>
  [513] getobjprop 403 .......................... <me.pAnimCounter>
  [516] pushint8 2 .............................. <2>
  [518] mod ..................................... <me.pAnimCounter mod 2>
  [519] pushzero ................................ <0>
  [520] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [521] and ..................................... <me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0)>
  [522] jmpifz [531] ............................ if me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0) then
  [525] pushint8 1 .............................. <1>
  [527] inv ..................................... <-1>
  [528] setprop 395 ............................. pYFix = -1
  [531] jmp [641]
  [534] peek 0
  [536] pushcons 23 ............................. <"hr">
  [538] eq
  [539] jmpifz [580] ............................ (case) "hr":
  [542] pushzero ................................ <0>
  [543] setlocal 5 .............................. tUnderWater = 0
  [545] getparam 0 .............................. <me>
  [547] getobjprop 405 .......................... <me.pTalking>
  [550] getparam 0 .............................. <me>
  [552] getobjprop 403 .......................... <me.pAnimCounter>
  [555] pushint8 2 .............................. <2>
  [557] mod ..................................... <me.pAnimCounter mod 2>
  [558] pushzero ................................ <0>
  [559] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [560] and ..................................... <me.pTalking and ((me.pAnimCounter mod 2) = 0)>
  [561] jmpifz [577] ............................ if me.pTalking and ((me.pAnimCounter mod 2) = 0) then
  [564] getprop 390 ............................. <pAction>
  [567] pushcons 19 ............................. <"lay">
  [569] nteq .................................... <pAction <> "lay">
  [570] jmpifz [577] ............................ if pAction <> "lay" then
  [573] pushcons 21 ............................. <"spk">
  [575] setlocal 1 .............................. tAction = "spk"
  [577] jmp [641]
  [580] peek 0
  [582] pushcons 24 ............................. <"ri">
  [584] eq
  [585] jmpifz [616] ............................ (case) "ri":
  [588] getparam 0 .............................. <me>
  [590] getobjprop 406 .......................... <me.pCarrying>
  [593] not ..................................... <not me.pCarrying>
  [594] jmpifz [603] ............................ if not me.pCarrying then
  [597] pop 1
  [599] pusharglistnoret 0 ...................... <>
  [601] extcall 44 .............................. return 
  [603] getprop 392 ............................. <pActionRh>
  [606] setlocal 1 .............................. tAction = pActionRh
  [608] getprop 389 ............................. <pDirection>
  [611] setlocal 3 .............................. tdir = pDirection
  [613] jmp [641]
  [616] peek 0
  [618] pushcons 25 ............................. <"li">
  [620] eq
  [621] jmpifz [637] ............................ (case) "li":
  [624] getprop 391 ............................. <pActionLh>
  [627] setlocal 1 .............................. tAction = pActionLh
  [629] getprop 389 ............................. <pDirection>
  [632] setlocal 3 .............................. tdir = pDirection
  [634] jmp [641] ............................... (case) otherwise:
  [637] pushint8 1 .............................. <1>
  [639] setlocal 5 .............................. tUnderWater = 1
  [641] pop 1 ................................... end case
  [643] getparam 0 .............................. <me>
  [645] getobjprop 410 .......................... <me.pPeopleSize>
  [648] pushcons 26 ............................. <"_">
  [650] joinstr ................................. <me.pPeopleSize & "_">
  [651] getlocal 1 .............................. <tAction>
  [653] joinstr ................................. <me.pPeopleSize & "_" & tAction>
  [654] pushcons 26 ............................. <"_">
  [656] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_">
  [657] getlocal 2 .............................. <tPart>
  [659] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart>
  [660] pushcons 26 ............................. <"_">
  [662] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_">
  [663] getprop 381 ............................. <pmodel>
  [666] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel>
  [667] pushcons 26 ............................. <"_">
  [669] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_">
  [670] getlocal 3 .............................. <tdir>
  [672] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir>
  [673] pushcons 26 ............................. <"_">
  [675] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_">
  [676] getlocal 0 .............................. <tAnimCounter>
  [678] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCounter>
  [679] setlocal 4 .............................. tMemString = me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCounter
  [681] getprop 393 ............................. <pMemString>
  [684] getlocal 4 .............................. <tMemString>
  [686] nteq .................................... <pMemString <> tMemString>
  [687] jmpifz [832] ............................ if pMemString <> tMemString then
  [690] getlocal 4 .............................. <tMemString>
  [692] pusharglist 1 ........................... <tMemString>
  [694] extcall 56 .............................. <getmemnum(tMemString)>
  [696] setlocal 6 .............................. tMemNum = getmemnum(tMemString)
  [698] getlocal 6 .............................. <tMemNum>
  [700] pushzero ................................ <0>
  [701] gt ...................................... <tMemNum > 0>
  [702] jmpifz [828] ............................ if tMemNum > 0 then / else
  [705] getlocal 4 .............................. <tMemString>
  [707] setprop 393 ............................. pMemString = tMemString
  [710] getlocal 6 .............................. <tMemNum>
  [712] pusharglist 1 ........................... <tMemNum>
  [714] extcall 99 .............................. <member(tMemNum)>
  [716] setlocal 7 .............................. tmember = member(tMemNum)
  [718] getlocal 7 .............................. <tmember>
  [720] getobjprop 411 .......................... <tmember.regPoint>
  [723] setlocal 8 .............................. tRegPnt = tmember.regPoint
  [725] getlocal 8 .............................. <tRegPnt>
  [727] pushint8 1 .............................. <1>
  [729] pusharglist 2 ........................... <tRegPnt, 1>
  [731] objcall 96 .............................. <tRegPnt[1]>
  [733] inv ..................................... <-tRegPnt[1]>
  [734] setlocal 9 .............................. tX = -tRegPnt[1]
  [736] getparam 0 .............................. <me>
  [738] getchainedprop 412 ...................... <me.pBuffer>
  [741] getchainedprop 387 ...................... <me.pBuffer.rect>
  [744] getobjprop 413 .......................... <me.pBuffer.rect.height>
  [747] getlocal 8 .............................. <tRegPnt>
  [749] pushint8 2 .............................. <2>
  [751] pusharglist 2 ........................... <tRegPnt, 2>
  [753] objcall 96 .............................. <tRegPnt[2]>
  [755] sub ..................................... <me.pBuffer.rect.height - tRegPnt[2]>
  [756] pushint8 10 ............................. <10>
  [758] sub ..................................... <me.pBuffer.rect.height - tRegPnt[2] - 10>
  [759] setlocal 10 ............................. tY = me.pBuffer.rect.height - tRegPnt[2] - 10
  [761] getlocal 7 .............................. <tmember>
  [763] getobjprop 129 .......................... <tmember.image>
  [765] setprop 385 ............................. pCacheImage = tmember.image
  [768] getlocal 9 .............................. <tX>
  [770] getlocal 10 ............................. <tY>
  [772] getlocal 9 .............................. <tX>
  [774] getprop 385 ............................. <pCacheImage>
  [777] getobjprop 407 .......................... <pCacheImage.width>
  [780] add ..................................... <tX + pCacheImage.width>
  [781] getlocal 10 ............................. <tY>
  [783] getprop 385 ............................. <pCacheImage>
  [786] getobjprop 413 .......................... <pCacheImage.height>
  [789] add ..................................... <tY + pCacheImage.height>
  [790] pusharglist 4 ........................... <tX, tY, tX + pCacheImage.width, tY + pCacheImage.height>
  [792] extcall 387 ............................. <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)>
  [795] setprop 386 ............................. pCacheRectA = rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)
  [798] getprop 385 ............................. <pCacheImage>
  [801] getobjprop 387 .......................... <pCacheImage.rect>
  [804] setprop 388 ............................. pCacheRectB = pCacheImage.rect
  [807] getprop 382 ............................. <pDrawProps>
  [810] pushsymb 383 ............................ <#maskImage>
  [813] getprop 385 ............................. <pCacheImage>
  [816] pusharglist 1 ........................... <pCacheImage>
  [818] objcall 415 ............................. <pCacheImage.createMatte()>
  [821] pusharglistnoret 3 ...................... <pDrawProps, #maskImage, pCacheImage.createMatte()>
  [823] objcall 142 ............................. pDrawProps[#maskImage] = pCacheImage.createMatte()
  [825] jmp [832]
  [828] pusharglistnoret 0 ...................... <>
  [830] extcall 44 .............................. return 
  [832] getparam 0 .............................. <me>
  [834] getobjprop 551 .......................... <me.pMainAction>
  [837] pushcons 5 .............................. <"swm">
  [839] eq ...................................... <me.pMainAction = "swm">
  [840] jmpifz [891] ............................ if me.pMainAction = "swm" then / else
  [843] pushint8 14 ............................. <14>
  [845] pushzero ................................ <0>
  [846] pushint8 14 ............................. <14>
  [848] pushzero ................................ <0>
  [849] pusharglist 4 ........................... <14, 0, 14, 0>
  [851] extcall 387 ............................. <rect(14, 0, 14, 0)>
  [854] getparam 0 .............................. <me>
  [856] getobjprop 414 .......................... <me.pLocFix>
  [859] getparam 0 .............................. <me>
  [861] getobjprop 414 .......................... <me.pLocFix>
  [864] pusharglist 2 ........................... <me.pLocFix, me.pLocFix>
  [866] extcall 387 ............................. <rect(me.pLocFix, me.pLocFix)>
  [869] add ..................................... <rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix)>
  [870] getprop 394 ............................. <pXFix>
  [873] getprop 395 ............................. <pYFix>
  [876] getprop 394 ............................. <pXFix>
  [879] getprop 395 ............................. <pYFix>
  [882] pusharglist 4 ........................... <[pXFix, pYFix, pXFix, pYFix]>
  [884] pushlist ................................ <[pXFix, pYFix, pXFix, pYFix]>
  [885] add ..................................... <rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]>
  [886] setlocal 11 ............................. tRectMod = rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]
  [888] jmp [924]
  [891] getparam 0 .............................. <me>
  [893] getobjprop 414 .......................... <me.pLocFix>
  [896] getparam 0 .............................. <me>
  [898] getobjprop 414 .......................... <me.pLocFix>
  [901] pusharglist 2 ........................... <me.pLocFix, me.pLocFix>
  [903] extcall 387 ............................. <rect(me.pLocFix, me.pLocFix)>
  [906] getprop 394 ............................. <pXFix>
  [909] getprop 395 ............................. <pYFix>
  [912] getprop 394 ............................. <pXFix>
  [915] getprop 395 ............................. <pYFix>
  [918] pusharglist 4 ........................... <[pXFix, pYFix, pXFix, pYFix]>
  [920] pushlist ................................ <[pXFix, pYFix, pXFix, pYFix]>
  [921] add ..................................... <rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]>
  [922] setlocal 11 ............................. tRectMod = rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]
  [924] getparam 0 .............................. <me>
  [926] getchainedprop 412 ...................... <me.pBuffer>
  [929] getprop 385 ............................. <pCacheImage>
  [932] getprop 386 ............................. <pCacheRectA>
  [935] getlocal 11 ............................. <tRectMod>
  [937] add ..................................... <pCacheRectA + tRectMod>
  [938] getprop 388 ............................. <pCacheRectB>
  [941] getprop 382 ............................. <pDrawProps>
  [944] pusharglistnoret 5 ...................... <me.pBuffer, pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pDrawProps>
  [946] objcall 416 ............................. me.pBuffer.copyPixels(pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pDrawProps)
  [949] getlocal 5 .............................. <tUnderWater>
  [951] getparam 0 .............................. <me>
  [953] getobjprop 641 .......................... <me.pSwim>
  [956] and ..................................... <tUnderWater and me.pSwim>
  [957] jmpifz [1005] ........................... if tUnderWater and me.pSwim then
  [960] getprop 672 ............................. <pSwimProps>
  [963] pushsymb 383 ............................ <#maskImage>
  [966] getprop 382 ............................. <pDrawProps>
  [969] pushsymb 383 ............................ <#maskImage>
  [972] pusharglist 2 ........................... <pDrawProps, #maskImage>
  [974] objcall 96 .............................. <pDrawProps[#maskImage]>
  [976] pusharglistnoret 3 ...................... <pSwimProps, #maskImage, pDrawProps[#maskImage]>
  [978] objcall 142 ............................. pSwimProps[#maskImage] = pDrawProps[#maskImage]
  [980] getparam 0 .............................. <me>
  [982] getchainedprop 412 ...................... <me.pBuffer>
  [985] getprop 385 ............................. <pCacheImage>
  [988] getprop 386 ............................. <pCacheRectA>
  [991] getlocal 11 ............................. <tRectMod>
  [993] add ..................................... <pCacheRectA + tRectMod>
  [994] getprop 388 ............................. <pCacheRectB>
  [997] getprop 672 ............................. <pSwimProps>
  [1000] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pSwimProps>
  [1002] objcall 416 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pSwimProps)
  [1005] ret
end

on render me
  [  0] getprop 393 ............................. <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 127 ............................. <memberExists(pMemString)>
  [  7] jmpifz [114] ............................ if memberExists(pMemString) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 412 ...................... <me.pBuffer>
  [ 15] getprop 388 ............................. <pCacheRectB>
  [ 18] getprop 386 ............................. <pCacheRectA>
  [ 21] getprop 388 ............................. <pCacheRectB>
  [ 24] getprop 382 ............................. <pDrawProps>
  [ 27] pusharglistnoret 5 ...................... <me.pBuffer, pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps>
  [ 29] objcall 416 ............................. me.pBuffer.copyPixels(pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps)
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 641 .......................... <me.pSwim>
  [ 37] jmpifz [114] ............................ if me.pSwim then
  [ 40] getprop 672 ............................. <pSwimProps>
  [ 43] pushsymb 383 ............................ <#maskImage>
  [ 46] getprop 382 ............................. <pDrawProps>
  [ 49] pushsymb 383 ............................ <#maskImage>
  [ 52] pusharglist 2 ........................... <pDrawProps, #maskImage>
  [ 54] objcall 96 .............................. <pDrawProps[#maskImage]>
  [ 56] pusharglistnoret 3 ...................... <pSwimProps, #maskImage, pDrawProps[#maskImage]>
  [ 58] objcall 142 ............................. pSwimProps[#maskImage] = pDrawProps[#maskImage]
  [ 60] getparam 0 .............................. <me>
  [ 62] getchainedprop 412 ...................... <me.pBuffer>
  [ 65] getprop 385 ............................. <pCacheImage>
  [ 68] getprop 386 ............................. <pCacheRectA>
  [ 71] getprop 394 ............................. <pXFix>
  [ 74] getprop 395 ............................. <pYFix>
  [ 77] getprop 394 ............................. <pXFix>
  [ 80] getprop 395 ............................. <pYFix>
  [ 83] pusharglist 4 ........................... <[pXFix, pYFix, pXFix, pYFix]>
  [ 85] pushlist ................................ <[pXFix, pYFix, pXFix, pYFix]>
  [ 86] add ..................................... <pCacheRectA + [pXFix, pYFix, pXFix, pYFix]>
  [ 87] getparam 0 .............................. <me>
  [ 89] getobjprop 414 .......................... <me.pLocFix>
  [ 92] getparam 0 .............................. <me>
  [ 94] getobjprop 414 .......................... <me.pLocFix>
  [ 97] pusharglist 2 ........................... <me.pLocFix, me.pLocFix>
  [ 99] extcall 387 ............................. <rect(me.pLocFix, me.pLocFix)>
  [102] add ..................................... <pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix)>
  [103] getprop 388 ............................. <pCacheRectB>
  [106] getprop 672 ............................. <pSwimProps>
  [109] pusharglistnoret 5 ...................... <me.pBuffer, pCacheImage, pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix), pCacheRectB, pSwimProps>
  [111] objcall 416 ............................. me.pBuffer.copyPixels(pCacheImage, pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix), pCacheRectB, pSwimProps)
  [114] ret
end

on setItemObj me, tmodel
  [  0] getprop 380 ............................. <pPart>
  [  3] pushcons 24 ............................. <"ri">
  [  5] nteq .................................... <pPart <> "ri">
  [  6] getprop 380 ............................. <pPart>
  [  9] pushcons 25 ............................. <"li">
  [ 11] nteq .................................... <pPart <> "li">
  [ 12] and ..................................... <(pPart <> "ri") and (pPart <> "li")>
  [ 13] jmpifz [ 20] ............................ if (pPart <> "ri") and (pPart <> "li") then
  [ 16] pusharglistnoret 0 ...................... <>
  [ 18] extcall 44 .............................. return 
  [ 20] getparam 1 .............................. <tmodel>
  [ 22] setprop 381 ............................. pmodel = tmodel
  [ 25] ret
end

on defineDir me, tdir, tPart
  [  0] getparam 2 .............................. <tPart>
  [  2] pusharglist 1 ........................... <tPart>
  [  4] extcall 71 .............................. <voidp(tPart)>
  [  6] getparam 2 .............................. <tPart>
  [  8] getprop 380 ............................. <pPart>
  [ 11] eq ...................................... <tPart = pPart>
  [ 12] or ...................................... <voidp(tPart) or (tPart = pPart)>
  [ 13] jmpifz [ 21] ............................ if voidp(tPart) or (tPart = pPart) then
  [ 16] getparam 1 .............................. <tdir>
  [ 18] setprop 389 ............................. pDirection = tdir
  [ 21] ret
end

on defineDirMultiple me, tdir, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 380 ............................. <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 404 ............................. <tTargetPartList.getPos(pPart)>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tTargetPartList.getPos(pPart) = 0>
  [ 12] jmpifz [ 19] ............................ if tTargetPartList.getPos(pPart) = 0 then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 44 .............................. return 
  [ 19] getparam 1 .............................. <tdir>
  [ 21] setprop 389 ............................. pDirection = tdir
  [ 24] ret
end

on defineAct me, tAct, tTargetPartList
  [  0] getprop 390 ............................. <pAction>
  [  3] pushcons 27 ............................. <"std">
  [  5] eq ...................................... <pAction = "std">
  [  6] jmpifz [ 14] ............................ if pAction = "std" then
  [  9] getparam 1 .............................. <tAct>
  [ 11] setprop 390 ............................. pAction = tAct
  [ 14] ret
end

on defineActMultiple me, tAct, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 380 ............................. <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 404 ............................. <tTargetPartList.getPos(pPart)>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tTargetPartList.getPos(pPart) = 0>
  [ 12] jmpifz [ 19] ............................ if tTargetPartList.getPos(pPart) = 0 then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 44 .............................. return 
  [ 19] getprop 390 ............................. <pAction>
  [ 22] pushcons 27 ............................. <"std">
  [ 24] eq ...................................... <pAction = "std">
  [ 25] jmpifz [ 33] ............................ if pAction = "std" then
  [ 28] getparam 1 .............................. <tAct>
  [ 30] setprop 390 ............................. pAction = tAct
  [ 33] getprop 380 ............................. <pPart>
  [ 36] pushcons 22 ............................. <"ey">
  [ 38] eq ...................................... <pPart = "ey">
  [ 39] getparam 1 .............................. <tAct>
  [ 41] pushcons 27 ............................. <"std">
  [ 43] eq ...................................... <tAct = "std">
  [ 44] and ..................................... <(pPart = "ey") and (tAct = "std")>
  [ 45] jmpifz [ 53] ............................ if (pPart = "ey") and (tAct = "std") then
  [ 48] pushcons 27 ............................. <"std">
  [ 50] setprop 390 ............................. pAction = "std"
  [ 53] ret
end

on defineInk me, tInk
  [  0] getparam 1 .............................. <tInk>
  [  2] pusharglist 1 ........................... <tInk>
  [  4] extcall 71 .............................. <voidp(tInk)>
  [  6] jmpifz [ 78] ............................ if voidp(tInk) then
  [  9] getprop 380 ............................. <pPart>
  [ 12] peek 0 .................................. case pPart of
  [ 14] pushcons 22 ............................. <"ey">
  [ 16] eq
  [ 17] jmpifz [ 27] ............................ (case) "ey":
  [ 20] pushint8 36 ............................. <36>
  [ 22] setparam 1 .............................. tInk = 36
  [ 24] jmp [ 76]
  [ 27] peek 0
  [ 29] pushcons 28 ............................. <"sd">
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) "sd":
  [ 35] pushint8 32 ............................. <32>
  [ 37] setparam 1 .............................. tInk = 32
  [ 39] jmp [ 76]
  [ 42] peek 0
  [ 44] pushcons 24 ............................. <"ri">
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) "ri":
  [ 50] pushint8 8 .............................. <8>
  [ 52] setparam 1 .............................. tInk = 8
  [ 54] jmp [ 76]
  [ 57] peek 0
  [ 59] pushcons 25 ............................. <"li">
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) "li":
  [ 65] pushint8 8 .............................. <8>
  [ 67] setparam 1 .............................. tInk = 8
  [ 69] jmp [ 76] ............................... (case) otherwise:
  [ 72] pushint8 41 ............................. <41>
  [ 74] setparam 1 .............................. tInk = 41
  [ 76] pop 1 ................................... end case
  [ 78] getprop 382 ............................. <pDrawProps>
  [ 81] pushsymb 58 ............................. <#ink>
  [ 83] getparam 1 .............................. <tInk>
  [ 85] pusharglistnoret 3 ...................... <pDrawProps, #ink, tInk>
  [ 87] objcall 142 ............................. pDrawProps[#ink] = tInk
  [ 89] getprop 672 ............................. <pSwimProps>
  [ 92] pushsymb 58 ............................. <#ink>
  [ 94] getparam 1 .............................. <tInk>
  [ 96] pusharglistnoret 3 ...................... <pSwimProps, #ink, tInk>
  [ 98] objcall 142 ............................. pSwimProps[#ink] = tInk
  [100] pushint8 1 .............................. <1>
  [102] pusharglistnoret 1 ...................... <1>
  [104] extcall 44 .............................. return 1
  [106] ret
end

on setModel me, tmodel
  [  0] getparam 1 .............................. <tmodel>
  [  2] setprop 381 ............................. pmodel = tmodel
  [  5] ret
end

on setColor me, tColor
  [  0] getparam 1 .............................. <tColor>
  [  2] pusharglist 1 ........................... <tColor>
  [  4] extcall 71 .............................. <voidp(tColor)>
  [  6] jmpifz [ 14] ............................ if voidp(tColor) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 44 .............................. return 0
  [ 14] getparam 1 .............................. <tColor>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] eq ...................................... <tColor = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tColor = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 44 .............................. return 0
  [ 27] getparam 1 .............................. <tColor>
  [ 29] getobjprop 49 ........................... <tColor.ilk>
  [ 31] pushsymb 344 ............................ <#color>
  [ 34] eq ...................................... <tColor.ilk = #color>
  [ 35] getprop 382 ............................. <pDrawProps>
  [ 38] pushsymb 58 ............................. <#ink>
  [ 40] pusharglist 2 ........................... <pDrawProps, #ink>
  [ 42] objcall 96 .............................. <pDrawProps[#ink]>
  [ 44] pushint8 36 ............................. <36>
  [ 46] nteq .................................... <pDrawProps[#ink] <> 36>
  [ 47] and ..................................... <(tColor.ilk = #color) and (pDrawProps[#ink] <> 36)>
  [ 48] jmpifz [ 66] ............................ if (tColor.ilk = #color) and (pDrawProps[#ink] <> 36) then / else
  [ 51] getprop 382 ............................. <pDrawProps>
  [ 54] pushsymb 384 ............................ <#bgColor>
  [ 57] getparam 1 .............................. <tColor>
  [ 59] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, tColor>
  [ 61] objcall 142 ............................. pDrawProps[#bgColor] = tColor
  [ 63] jmp [ 90]
  [ 66] getprop 382 ............................. <pDrawProps>
  [ 69] pushsymb 384 ............................ <#bgColor>
  [ 72] pushint16 255 ........................... <255>
  [ 75] pushint16 255 ........................... <255>
  [ 78] pushint16 255 ........................... <255>
  [ 81] pusharglist 3 ........................... <255, 255, 255>
  [ 83] extcall 322 ............................. <rgb(255, 255, 255)>
  [ 86] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, rgb(255, 255, 255)>
  [ 88] objcall 142 ............................. pDrawProps[#bgColor] = rgb(255, 255, 255)
  [ 90] pushint8 1 .............................. <1>
  [ 92] pusharglistnoret 1 ...................... <1>
  [ 94] extcall 44 .............................. return 1
  [ 96] ret
end

on doHandWork me, tAct
  [  0] pushcons 7 .............................. <"lh">
  [  2] pushcons 8 .............................. <"ls">
  [  4] pushcons 25 ............................. <"li">
  [  6] pushcons 14 ............................. <"rh">
  [  8] pushcons 15 ............................. <"rs">
  [ 10] pushcons 24 ............................. <"ri">
  [ 12] pusharglist 6 ........................... <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 14] pushlist ................................ <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 15] getprop 380 ............................. <pPart>
  [ 18] pusharglist 2 ........................... <["lh", "ls", "li", "rh", "rs", "ri"], pPart>
  [ 20] objcall 70 .............................. <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart)>
  [ 22] pushzero ................................ <0>
  [ 23] nteq .................................... <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0>
  [ 24] jmpifz [ 32] ............................ if ["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0 then
  [ 27] getparam 1 .............................. <tAct>
  [ 29] setprop 390 ............................. pAction = tAct
  [ 32] ret
end

on doHandWorkLeft me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 391 ............................. pActionLh = tAct
  [  5] ret
end

on doHandWorkRight me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 392 ............................. pActionRh = tAct
  [  5] ret
end

on layDown me
  [  0] pushcons 19 ............................. <"lay">
  [  2] setprop 390 ............................. pAction = "lay"
  [  5] ret
end

on getCurrentMember me
  [  0] getprop 393 ............................. <pMemString>
  [  3] pusharglistnoret 1 ...................... <pMemString>
  [  5] extcall 44 .............................. return pMemString
  [  7] ret
end

on getColor me
  [  0] getprop 382 ............................. <pDrawProps>
  [  3] pushsymb 384 ............................ <#bgColor>
  [  6] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [  8] objcall 96 .............................. <pDrawProps[#bgColor]>
  [ 10] pusharglistnoret 1 ...................... <pDrawProps[#bgColor]>
  [ 12] extcall 44 .............................. return pDrawProps[#bgColor]
  [ 14] ret
end

on getDirection me
  [  0] getprop 389 ............................. <pDirection>
  [  3] pusharglistnoret 1 ...................... <pDirection>
  [  5] extcall 44 .............................. return pDirection
  [  7] ret
end

on getLocation me
  [  0] getprop 393 ............................. <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 71 .............................. <voidp(pMemString)>
  [  7] jmpifz [ 15] ............................ if voidp(pMemString) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 44 .............................. return 0
  [ 15] getprop 393 ............................. <pMemString>
  [ 18] pusharglist 1 ........................... <pMemString>
  [ 20] extcall 56 .............................. <getmemnum(pMemString)>
  [ 22] setlocal 0 .............................. tMemNum = getmemnum(pMemString)
  [ 24] getlocal 0 .............................. <tMemNum>
  [ 26] pushzero ................................ <0>
  [ 27] eq ...................................... <tMemNum = 0>
  [ 28] jmpifz [ 36] ............................ if tMemNum = 0 then
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 44 .............................. return 0
  [ 36] getlocal 0 .............................. <tMemNum>
  [ 38] pusharglist 1 ........................... <tMemNum>
  [ 40] extcall 99 .............................. <member(tMemNum)>
  [ 42] getobjprop 387 .......................... <member(tMemNum).rect>
  [ 45] setlocal 1 .............................. tImgRect = member(tMemNum).rect
  [ 47] getlocal 1 .............................. <tImgRect>
  [ 49] getobjprop 407 .......................... <tImgRect.width>
  [ 52] pushint8 2 .............................. <2>
  [ 54] div ..................................... <tImgRect.width / 2>
  [ 55] getlocal 1 .............................. <tImgRect>
  [ 57] getobjprop 413 .......................... <tImgRect.height>
  [ 60] pushint8 2 .............................. <2>
  [ 62] div ..................................... <tImgRect.height / 2>
  [ 63] pusharglist 2 ........................... <tImgRect.width / 2, tImgRect.height / 2>
  [ 65] extcall 59 .............................. <point(tImgRect.width / 2, tImgRect.height / 2)>
  [ 67] setlocal 2 .............................. tCenterPoint = point(tImgRect.width / 2, tImgRect.height / 2)
  [ 69] getlocal 0 .............................. <tMemNum>
  [ 71] pusharglist 1 ........................... <tMemNum>
  [ 73] extcall 99 .............................. <member(tMemNum)>
  [ 75] getobjprop 411 .......................... <member(tMemNum).regPoint>
  [ 78] setlocal 3 .............................. tRegPoint = member(tMemNum).regPoint
  [ 80] getlocal 3 .............................. <tRegPoint>
  [ 82] pushint8 1 .............................. <1>
  [ 84] inv ..................................... <-1>
  [ 85] mul ..................................... <tRegPoint * -1>
  [ 86] getlocal 2 .............................. <tCenterPoint>
  [ 88] add ..................................... <(tRegPoint * -1) + tCenterPoint>
  [ 89] pusharglistnoret 1 ...................... <(tRegPoint * -1) + tCenterPoint>
  [ 91] extcall 44 .............................. return (tRegPoint * -1) + tCenterPoint
  [ 93] ret
end

on copyPicture me, tImg, tdir, tHumanSize, tAction, tAnimFrame
  [  0] getparam 2 .............................. <tdir>
  [  2] pusharglist 1 ........................... <tdir>
  [  4] extcall 71 .............................. <voidp(tdir)>
  [  6] jmpifz [ 13] ............................ if voidp(tdir) then
  [  9] pushcons 29 ............................. <"2">
  [ 11] setparam 2 .............................. tdir = "2"
  [ 13] getparam 3 .............................. <tHumanSize>
  [ 15] pusharglist 1 ........................... <tHumanSize>
  [ 17] extcall 71 .............................. <voidp(tHumanSize)>
  [ 19] jmpifz [ 26] ............................ if voidp(tHumanSize) then
  [ 22] pushcons 30 ............................. <"h">
  [ 24] setparam 3 .............................. tHumanSize = "h"
  [ 26] getparam 4 .............................. <tAction>
  [ 28] pusharglist 1 ........................... <tAction>
  [ 30] extcall 71 .............................. <voidp(tAction)>
  [ 32] jmpifz [ 39] ............................ if voidp(tAction) then
  [ 35] pushcons 27 ............................. <"std">
  [ 37] setparam 4 .............................. tAction = "std"
  [ 39] getparam 5 .............................. <tAnimFrame>
  [ 41] pusharglist 1 ........................... <tAnimFrame>
  [ 43] extcall 71 .............................. <voidp(tAnimFrame)>
  [ 45] jmpifz [ 52] ............................ if voidp(tAnimFrame) then
  [ 48] pushcons 31 ............................. <"0">
  [ 50] setparam 5 .............................. tAnimFrame = "0"
  [ 52] getparam 3 .............................. <tHumanSize>
  [ 54] pushcons 26 ............................. <"_">
  [ 56] joinstr ................................. <tHumanSize & "_">
  [ 57] getparam 4 .............................. <tAction>
  [ 59] joinstr ................................. <tHumanSize & "_" & tAction>
  [ 60] pushcons 26 ............................. <"_">
  [ 62] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [ 63] getprop 380 ............................. <pPart>
  [ 66] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [ 67] pushcons 26 ............................. <"_">
  [ 69] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [ 70] getprop 381 ............................. <pmodel>
  [ 73] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel>
  [ 74] pushcons 26 ............................. <"_">
  [ 76] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_">
  [ 77] getparam 2 .............................. <tdir>
  [ 79] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir>
  [ 80] pushcons 26 ............................. <"_">
  [ 82] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [ 83] getparam 5 .............................. <tAnimFrame>
  [ 85] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame>
  [ 86] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame
  [ 88] getlocal 0 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 56 .............................. <getmemnum(tMemName)>
  [ 94] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [ 96] getlocal 1 .............................. <tMemNum>
  [ 98] pushzero ................................ <0>
  [ 99] eq ...................................... <tMemNum = 0>
  [100] jmpifz [176] ............................ if tMemNum = 0 then
  [103] pushcons 31 ............................. <"0">
  [105] getprop 381 ............................. <pmodel>
  [108] pushsymb 102 ............................ <#char>
  [110] pushint8 2 .............................. <2>
  [112] pushint8 3 .............................. <3>
  [114] pusharglist 4 ........................... <pmodel, #char, 2, 3>
  [116] objcall 104 ............................. <pmodel.char[2..3]>
  [118] joinstr ................................. <"0" & pmodel.char[2..3]>
  [119] setlocal 2 .............................. tmodel = "0" & pmodel.char[2..3]
  [121] getparam 3 .............................. <tHumanSize>
  [123] pushcons 26 ............................. <"_">
  [125] joinstr ................................. <tHumanSize & "_">
  [126] getparam 4 .............................. <tAction>
  [128] joinstr ................................. <tHumanSize & "_" & tAction>
  [129] pushcons 26 ............................. <"_">
  [131] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [132] getprop 380 ............................. <pPart>
  [135] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [136] pushcons 26 ............................. <"_">
  [138] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [139] getlocal 2 .............................. <tmodel>
  [141] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel>
  [142] pushcons 26 ............................. <"_">
  [144] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_">
  [145] getparam 2 .............................. <tdir>
  [147] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir>
  [148] pushcons 26 ............................. <"_">
  [150] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_">
  [151] getparam 5 .............................. <tAnimFrame>
  [153] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_" & tAnimFrame>
  [154] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_" & tAnimFrame
  [156] getlocal 0 .............................. <tMemName>
  [158] pusharglist 1 ........................... <tMemName>
  [160] extcall 56 .............................. <getmemnum(tMemName)>
  [162] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [164] getlocal 1 .............................. <tMemNum>
  [166] pushzero ................................ <0>
  [167] eq ...................................... <tMemNum = 0>
  [168] jmpifz [176] ............................ if tMemNum = 0 then
  [171] pushzero ................................ <0>
  [172] pusharglistnoret 1 ...................... <0>
  [174] extcall 44 .............................. return 0
  [176] getlocal 1 .............................. <tMemNum>
  [178] pusharglist 1 ........................... <tMemNum>
  [180] extcall 99 .............................. <member(tMemNum)>
  [182] setlocal 3 .............................. tmember = member(tMemNum)
  [184] getlocal 3 .............................. <tmember>
  [186] getobjprop 129 .......................... <tmember.image>
  [188] setlocal 4 .............................. tImage = tmember.image
  [190] getlocal 3 .............................. <tmember>
  [192] getobjprop 411 .......................... <tmember.regPoint>
  [195] setlocal 5 .............................. tRegPnt = tmember.regPoint
  [197] getlocal 5 .............................. <tRegPnt>
  [199] pushint8 1 .............................. <1>
  [201] pusharglist 2 ........................... <tRegPnt, 1>
  [203] objcall 96 .............................. <tRegPnt[1]>
  [205] inv ..................................... <-tRegPnt[1]>
  [206] setlocal 6 .............................. tX = -tRegPnt[1]
  [208] getparam 1 .............................. <tImg>
  [210] getchainedprop 387 ...................... <tImg.rect>
  [213] getobjprop 413 .......................... <tImg.rect.height>
  [216] getlocal 5 .............................. <tRegPnt>
  [218] pushint8 2 .............................. <2>
  [220] pusharglist 2 ........................... <tRegPnt, 2>
  [222] objcall 96 .............................. <tRegPnt[2]>
  [224] sub ..................................... <tImg.rect.height - tRegPnt[2]>
  [225] pushint8 10 ............................. <10>
  [227] sub ..................................... <tImg.rect.height - tRegPnt[2] - 10>
  [228] setlocal 7 .............................. tY = tImg.rect.height - tRegPnt[2] - 10
  [230] getlocal 6 .............................. <tX>
  [232] getlocal 7 .............................. <tY>
  [234] getlocal 6 .............................. <tX>
  [236] getlocal 4 .............................. <tImage>
  [238] getobjprop 407 .......................... <tImage.width>
  [241] add ..................................... <tX + tImage.width>
  [242] getlocal 7 .............................. <tY>
  [244] getlocal 4 .............................. <tImage>
  [246] getobjprop 413 .......................... <tImage.height>
  [249] add ..................................... <tY + tImage.height>
  [250] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [252] extcall 387 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [255] setlocal 8 .............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [257] getlocal 4 .............................. <tImage>
  [259] pusharglist 1 ........................... <tImage>
  [261] objcall 415 ............................. <tImage.createMatte()>
  [264] setlocal 9 .............................. tMatte = tImage.createMatte()
  [266] getparam 1 .............................. <tImg>
  [268] getlocal 4 .............................. <tImage>
  [270] getlocal 8 .............................. <tRect>
  [272] getlocal 4 .............................. <tImage>
  [274] getobjprop 387 .......................... <tImage.rect>
  [277] pushsymb 383 ............................ <#maskImage>
  [280] getlocal 9 .............................. <tMatte>
  [282] pushsymb 58 ............................. <#ink>
  [284] getprop 382 ............................. <pDrawProps>
  [287] pushsymb 58 ............................. <#ink>
  [289] pusharglist 2 ........................... <pDrawProps, #ink>
  [291] objcall 96 .............................. <pDrawProps[#ink]>
  [293] pushsymb 384 ............................ <#bgColor>
  [296] getprop 382 ............................. <pDrawProps>
  [299] pushsymb 384 ............................ <#bgColor>
  [302] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [304] objcall 96 .............................. <pDrawProps[#bgColor]>
  [306] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [308] pushproplist ............................ <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [309] pusharglistnoret 5 ...................... <tImg, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [311] objcall 416 ............................. tImg.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]])
  [314] pushint8 1 .............................. <1>
  [316] pusharglistnoret 1 ...................... <1>
  [318] extcall 44 .............................. return 1
  [320] ret
end

on reset me, tSwimFlag
  [  0] pushcons 27 ............................. <"std">
  [  2] setprop 390 ............................. pAction = "std"
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 30 .............................. <VOID>
  [  9] setprop 391 ............................. pActionLh = VOID
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 30 .............................. <VOID>
  [ 16] setprop 392 ............................. pActionRh = VOID
  [ 19] ret
end

on setAnimation me, tPart, tAnim
  [  0] getparam 1 .............................. <tPart>
  [  2] getprop 380 ............................. <pPart>
  [  5] nteq .................................... <tPart <> pPart>
  [  6] jmpifz [ 13] ............................ if tPart <> pPart then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 44 .............................. return 
  [ 13] getparam 2 .............................. <tAnim>
  [ 15] pusharglist 1 ........................... <tAnim>
  [ 17] extcall 301 ............................. <value(tAnim)>
  [ 20] setprop 396 ............................. pAnimation = value(tAnim)
  [ 23] getprop 396 ............................. <pAnimation>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pAnimation, 1>
  [ 30] objcall 96 .............................. <pAnimation[1]>
  [ 32] getobjprop 78 ........................... <pAnimation[1].count>
  [ 34] setprop 398 ............................. pTotalFrame = pAnimation[1].count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setprop 397 ............................. pAnimFrame = 1
  [ 42] ret
end

on remAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 396 ............................. pAnimation = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 397 ............................. pAnimFrame = 1
  [  9] pushint8 1 .............................. <1>
  [ 11] setprop 398 ............................. pTotalFrame = 1
  [ 14] ret
end

on animate me
  [  0] getprop 396 ............................. <pAnimation>
  [  3] not ..................................... <not pAnimation>
  [  4] jmpifz [ 13] ............................ if not pAnimation then
  [  7] pushcons 0 .............................. <EMPTY>
  [  9] pusharglistnoret 1 ...................... <EMPTY>
  [ 11] extcall 44 .............................. return EMPTY
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 401 ............................ <#pFlipList>
  [ 18] getprop 389 ............................. <pDirection>
  [ 21] pushint8 1 .............................. <1>
  [ 23] add ..................................... <pDirection + 1>
  [ 24] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 26] objcall 104 ............................. <me.pFlipList[pDirection + 1]>
  [ 28] getprop 396 ............................. <pAnimation>
  [ 31] pushsymb 439 ............................ <#OffD>
  [ 34] pusharglist 2 ........................... <pAnimation, #OffD>
  [ 36] objcall 96 .............................. <pAnimation[#OffD]>
  [ 38] getprop 397 ............................. <pAnimFrame>
  [ 41] pusharglist 2 ........................... <pAnimation[#OffD], pAnimFrame>
  [ 43] objcall 96 .............................. <pAnimation[#OffD][pAnimFrame]>
  [ 45] add ..................................... <me.pFlipList[pDirection + 1] + pAnimation[#OffD][pAnimFrame]>
  [ 46] setlocal 0 .............................. tdir = me.pFlipList[pDirection + 1] + pAnimation[#OffD][pAnimFrame]
  [ 48] getprop 396 ............................. <pAnimation>
  [ 51] pushsymb 440 ............................ <#OffX>
  [ 54] pusharglist 2 ........................... <pAnimation, #OffX>
  [ 56] objcall 96 .............................. <pAnimation[#OffX]>
  [ 58] getprop 397 ............................. <pAnimFrame>
  [ 61] pusharglist 2 ........................... <pAnimation[#OffX], pAnimFrame>
  [ 63] objcall 96 .............................. <pAnimation[#OffX][pAnimFrame]>
  [ 65] setprop 394 ............................. pXFix = pAnimation[#OffX][pAnimFrame]
  [ 68] getprop 396 ............................. <pAnimation>
  [ 71] pushsymb 441 ............................ <#OffY>
  [ 74] pusharglist 2 ........................... <pAnimation, #OffY>
  [ 76] objcall 96 .............................. <pAnimation[#OffY]>
  [ 78] getprop 397 ............................. <pAnimFrame>
  [ 81] pusharglist 2 ........................... <pAnimation[#OffY], pAnimFrame>
  [ 83] objcall 96 .............................. <pAnimation[#OffY][pAnimFrame]>
  [ 85] setprop 395 ............................. pYFix = pAnimation[#OffY][pAnimFrame]
  [ 88] getparam 0 .............................. <me>
  [ 90] getobjprop 410 .......................... <me.pPeopleSize>
  [ 93] pushcons 26 ............................. <"_">
  [ 95] joinstr ................................. <me.pPeopleSize & "_">
  [ 96] getprop 396 ............................. <pAnimation>
  [ 99] pushsymb 442 ............................ <#act>
  [102] pusharglist 2 ........................... <pAnimation, #act>
  [104] objcall 96 .............................. <pAnimation[#act]>
  [106] getprop 397 ............................. <pAnimFrame>
  [109] pusharglist 2 ........................... <pAnimation[#act], pAnimFrame>
  [111] objcall 96 .............................. <pAnimation[#act][pAnimFrame]>
  [113] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame]>
  [114] pushcons 26 ............................. <"_">
  [116] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_">
  [117] getprop 380 ............................. <pPart>
  [120] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart>
  [121] pushcons 26 ............................. <"_">
  [123] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_">
  [124] getprop 381 ............................. <pmodel>
  [127] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel>
  [128] pushcons 26 ............................. <"_">
  [130] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_">
  [131] getlocal 0 .............................. <tdir>
  [133] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir>
  [134] pushcons 26 ............................. <"_">
  [136] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [137] getprop 396 ............................. <pAnimation>
  [140] pushsymb 443 ............................ <#frm>
  [143] pusharglist 2 ........................... <pAnimation, #frm>
  [145] objcall 96 .............................. <pAnimation[#frm]>
  [147] getprop 397 ............................. <pAnimFrame>
  [150] pusharglist 2 ........................... <pAnimation[#frm], pAnimFrame>
  [152] objcall 96 .............................. <pAnimation[#frm][pAnimFrame]>
  [154] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]>
  [155] setlocal 1 .............................. tMemName = me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]
  [157] getprop 397 ............................. <pAnimFrame>
  [160] pushint8 1 .............................. <1>
  [162] add ..................................... <pAnimFrame + 1>
  [163] setprop 397 ............................. pAnimFrame = pAnimFrame + 1
  [166] getprop 397 ............................. <pAnimFrame>
  [169] getprop 398 ............................. <pTotalFrame>
  [172] gt ...................................... <pAnimFrame > pTotalFrame>
  [173] jmpifz [181] ............................ if pAnimFrame > pTotalFrame then
  [176] pushint8 1 .............................. <1>
  [178] setprop 397 ............................. pAnimFrame = 1
  [181] getlocal 1 .............................. <tMemName>
  [183] pusharglistnoret 1 ...................... <tMemName>
  [185] extcall 44 .............................. return tMemName
  [187] ret
end
