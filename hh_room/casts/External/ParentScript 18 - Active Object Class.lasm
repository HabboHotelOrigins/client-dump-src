property pClass, pName, pCustom, pSprList, pDirection, pDimensions, pLoczList, pLocShiftList, pPartColors, pAnimFrame, pLocX, pLocY, pLocH, pAltitude, pXFactor, pCorrectLocZ, pSmallMember, pGeometry, pStartloc, pDestLoc, pSlideStartTime, pSlideEndTime, pSlideTimePerTile

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 1254 ............................ pClass = EMPTY
  [  5] pushcons 0 .............................. <EMPTY>
  [  7] setprop 1206 ............................ pName = EMPTY
  [ 10] pushcons 0 .............................. <EMPTY>
  [ 12] setprop 1255 ............................ pCustom = EMPTY
  [ 15] pusharglist 0 ........................... <[]>
  [ 17] pushlist ................................ <[]>
  [ 18] setprop 993 ............................. pSprList = []
  [ 21] pusharglist 0 ........................... <[]>
  [ 23] pushlist ................................ <[]>
  [ 24] setprop 376 ............................. pDirection = []
  [ 27] pusharglist 0 ........................... <[]>
  [ 29] pushlist ................................ <[]>
  [ 30] setprop 375 ............................. pDimensions = []
  [ 33] pusharglist 0 ........................... <[]>
  [ 35] pushlist ................................ <[]>
  [ 36] setprop 994 ............................. pLoczList = []
  [ 39] pusharglist 0 ........................... <[]>
  [ 41] pushlist ................................ <[]>
  [ 42] setprop 995 ............................. pLocShiftList = []
  [ 45] pusharglist 0 ........................... <[]>
  [ 47] pushlist ................................ <[]>
  [ 48] setprop 1415 ............................ pPartColors = []
  [ 51] pushzero ................................ <0>
  [ 52] setprop 1351 ............................ pAnimFrame = 0
  [ 55] pushzero ................................ <0>
  [ 56] setprop 465 ............................. pLocX = 0
  [ 59] pushzero ................................ <0>
  [ 60] setprop 467 ............................. pLocY = 0
  [ 63] pushzero ................................ <0>
  [ 64] setprop 469 ............................. pLocH = 0
  [ 67] pushfloat32 0.0 ......................... <0.0>
  [ 72] setprop 1416 ............................ pAltitude = 0.0
  [ 75] pushsymb 931 ............................ <#room>
  [ 78] pusharglist 1 ........................... <#room>
  [ 80] extcall 227 ............................. <getThread(#room)>
  [ 82] pusharglist 1 ........................... <getThread(#room)>
  [ 84] objcall 570 ............................. <getThread(#room).getInterface()>
  [ 87] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 89] objcall 29 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 91] getobjprop 959 .......................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [ 94] setprop 959 ............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [ 97] getprop 959 ............................. <pXFactor>
  [100] pushint8 32 ............................. <32>
  [102] eq ...................................... <pXFactor = 32>
  [103] jmpifz [113] ............................ if pXFactor = 32 then / else
  [106] pushzero ................................ <0>
  [107] setprop 1242 ............................ pCorrectLocZ = 0
  [110] jmp [118]
  [113] pushint8 1 .............................. <1>
  [115] setprop 1242 ............................ pCorrectLocZ = 1
  [118] pushint16 500 ........................... <500>
  [121] setprop 1417 ............................ pSlideTimePerTile = 500
  [124] pushint8 1 .............................. <1>
  [126] pusharglistnoret 1 ...................... <1>
  [128] extcall 116 ............................. return 1
  [130] ret
end

on deconstruct me
  [  0] getprop 993 ............................. <pSprList>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 149
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 44] ............................ repeat with tSpr in pSprList
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 138
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <tSpr>
  [ 31] getobjprop 335 .......................... <tSpr.spriteNum>
  [ 34] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 36] extcall 339 ............................. releaseSprite(tSpr.spriteNum)
  [ 39] pushint8 1
  [ 41] add
  [ 42] endrepeat [ 11]
  [ 44] pop 3
  [ 46] pushsymb 931 ............................ <#room>
  [ 49] pusharglist 1 ........................... <#room>
  [ 51] extcall 224 ............................. <threadExists(#room)>
  [ 53] jmpifz [108] ............................ if threadExists(#room) then
  [ 56] pushsymb 931 ............................ <#room>
  [ 59] pusharglist 1 ........................... <#room>
  [ 61] extcall 227 ............................. <getThread(#room)>
  [ 63] setlocal 1 .............................. tRoomThread = getThread(#room)
  [ 65] getlocal 1 .............................. <tRoomThread>
  [ 67] pusharglist 1 ........................... <tRoomThread>
  [ 69] objcall 173 ............................. <tRoomThread.getComponent()>
  [ 71] setlocal 2 .............................. tComponent = tRoomThread.getComponent()
  [ 73] getlocal 2 .............................. <tComponent>
  [ 75] pusharglist 1 ........................... <tComponent>
  [ 77] objcall 493 ............................. <tComponent.getShadowManager()>
  [ 80] setlocal 3 .............................. tShadowManager = tComponent.getShadowManager()
  [ 82] getlocal 3 .............................. <tShadowManager>
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglist 1 ........................... <me>
  [ 88] objcall 115 ............................. <me.getID()>
  [ 90] pusharglistnoret 2 ...................... <tShadowManager, me.getID()>
  [ 92] objcall 1418 ............................ tShadowManager.removeShadow(me.getID())
  [ 95] getlocal 2 .............................. <tComponent>
  [ 97] getparam 0 .............................. <me>
  [ 99] pusharglist 1 ........................... <me>
  [101] objcall 115 ............................. <me.getID()>
  [103] pusharglistnoret 2 ...................... <tComponent, me.getID()>
  [105] objcall 497 ............................. tComponent.removeSlideObject(me.getID())
  [108] pusharglist 0 ........................... <[]>
  [110] pushlist ................................ <[]>
  [111] setprop 993 ............................. pSprList = []
  [114] pushint8 1 .............................. <1>
  [116] pusharglistnoret 1 ...................... <1>
  [118] extcall 116 ............................. return 1
  [120] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 463 ............................ <#class>
  [  5] pusharglist 2 ........................... <tdata, #class>
  [  7] objcall 138 ............................. <tdata[#class]>
  [  9] setprop 1254 ............................ pClass = tdata[#class]
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 769 ............................ <#direction>
  [ 17] pusharglist 2 ........................... <tdata, #direction>
  [ 19] objcall 138 ............................. <tdata[#direction]>
  [ 21] setprop 376 ............................. pDirection = tdata[#direction]
  [ 24] getparam 1 .............................. <tdata>
  [ 26] pushsymb 795 ............................ <#dimensions>
  [ 29] pusharglist 2 ........................... <tdata, #dimensions>
  [ 31] objcall 138 ............................. <tdata[#dimensions]>
  [ 33] setprop 375 ............................. pDimensions = tdata[#dimensions]
  [ 36] getparam 1 .............................. <tdata>
  [ 38] pushsymb 799 ............................ <#altitude>
  [ 41] pusharglist 2 ........................... <tdata, #altitude>
  [ 43] objcall 138 ............................. <tdata[#altitude]>
  [ 45] setprop 1416 ............................ pAltitude = tdata[#altitude]
  [ 48] getparam 1 .............................. <tdata>
  [ 50] pushsymb 464 ............................ <#x>
  [ 53] pusharglist 2 ........................... <tdata, #x>
  [ 55] objcall 138 ............................. <tdata[#x]>
  [ 57] setprop 465 ............................. pLocX = tdata[#x]
  [ 60] getparam 1 .............................. <tdata>
  [ 62] pushsymb 466 ............................ <#y>
  [ 65] pusharglist 2 ........................... <tdata, #y>
  [ 67] objcall 138 ............................. <tdata[#y]>
  [ 69] setprop 467 ............................. pLocY = tdata[#y]
  [ 72] getprop 1416 ............................ <pAltitude>
  [ 75] setprop 469 ............................. pLocH = pAltitude
  [ 78] getparam 0 .............................. <me>
  [ 80] getparam 1 .............................. <tdata>
  [ 82] pushsymb 800 ............................ <#colors>
  [ 85] pusharglist 2 ........................... <tdata, #colors>
  [ 87] objcall 138 ............................. <tdata[#colors]>
  [ 89] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [ 91] objcall 1409 ............................ me.solveColors(tdata[#colors])
  [ 94] getparam 0 .............................. <me>
  [ 96] pusharglist 1 ........................... <me>
  [ 98] objcall 1414 ............................ <me.solveMembers()>
  [101] pushzero ................................ <0>
  [102] eq ...................................... <me.solveMembers() = 0>
  [103] jmpifz [111] ............................ if me.solveMembers() = 0 then
  [106] pushzero ................................ <0>
  [107] pusharglistnoret 1 ...................... <0>
  [109] extcall 116 ............................. return 0
  [111] getparam 0 .............................. <me>
  [113] getparam 1 .............................. <tdata>
  [115] pushsymb 801 ............................ <#props>
  [118] pusharglist 2 ........................... <tdata, #props>
  [120] objcall 138 ............................. <tdata[#props]>
  [122] pusharglist 2 ........................... <me, tdata[#props]>
  [124] objcall 478 ............................. <me.prepare(tdata[#props])>
  [127] pushzero ................................ <0>
  [128] eq ...................................... <me.prepare(tdata[#props]) = 0>
  [129] jmpifz [137] ............................ if me.prepare(tdata[#props]) = 0 then
  [132] pushzero ................................ <0>
  [133] pusharglistnoret 1 ...................... <0>
  [135] extcall 116 ............................. return 0
  [137] getparam 0 .............................. <me>
  [139] pusharglistnoret 1 ...................... <me>
  [141] objcall 1024 ............................ me.updateLocation()
  [144] pushint8 1 .............................. <1>
  [146] pusharglistnoret 1 ...................... <1>
  [148] extcall 116 ............................. return 1
  [150] ret
end

on getInfo me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tInfo = [:]
  [  5] getlocal 0 .............................. <tInfo>
  [  7] pushsymb 463 ............................ <#class>
  [ 10] getprop 1254 ............................ <pClass>
  [ 13] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 15] objcall 136 ............................. tInfo[#class] = pClass
  [ 17] getlocal 0 .............................. <tInfo>
  [ 19] pushsymb 187 ............................ <#name>
  [ 21] pushcons 1 .............................. <"furni_">
  [ 23] getprop 1254 ............................ <pClass>
  [ 26] joinstr ................................. <"furni_" & pClass>
  [ 27] pushcons 2 .............................. <"_name">
  [ 29] joinstr ................................. <"furni_" & pClass & "_name">
  [ 30] pushcons 1 .............................. <"furni_">
  [ 32] getprop 1254 ............................ <pClass>
  [ 35] joinstr ................................. <"furni_" & pClass>
  [ 36] pushcons 2 .............................. <"_name">
  [ 38] joinstr ................................. <"furni_" & pClass & "_name">
  [ 39] pusharglist 2 ........................... <"furni_" & pClass & "_name", "furni_" & pClass & "_name">
  [ 41] extcall 95 .............................. <getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")>
  [ 43] pusharglistnoret 3 ...................... <tInfo, #name, getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")>
  [ 45] objcall 136 ............................. tInfo[#name] = getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")
  [ 47] getlocal 0 .............................. <tInfo>
  [ 49] pushsymb 259 ............................ <#custom>
  [ 52] pushcons 1 .............................. <"furni_">
  [ 54] getprop 1254 ............................ <pClass>
  [ 57] joinstr ................................. <"furni_" & pClass>
  [ 58] pushcons 3 .............................. <"_desc">
  [ 60] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 61] pushcons 1 .............................. <"furni_">
  [ 63] getprop 1254 ............................ <pClass>
  [ 66] joinstr ................................. <"furni_" & pClass>
  [ 67] pushcons 3 .............................. <"_desc">
  [ 69] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 70] pusharglist 2 ........................... <"furni_" & pClass & "_desc", "furni_" & pClass & "_desc">
  [ 72] extcall 95 .............................. <getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 74] pusharglistnoret 3 ...................... <tInfo, #custom, getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 76] objcall 136 ............................. tInfo[#custom] = getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")
  [ 78] getlocal 0 .............................. <tInfo>
  [ 80] pushsymb 1420 ........................... <#smallmember>
  [ 83] getprop 1421 ............................ <pSmallMember>
  [ 86] pusharglistnoret 3 ...................... <tInfo, #smallmember, pSmallMember>
  [ 88] objcall 136 ............................. tInfo[#smallmember] = pSmallMember
  [ 90] getlocal 0 .............................. <tInfo>
  [ 92] pushsymb 260 ............................ <#image>
  [ 95] pushcons 4 .............................. <"Preview_renderer">
  [ 97] pusharglist 1 ........................... <"Preview_renderer">
  [ 99] extcall 112 ............................. <getObject("Preview_renderer")>
  [101] pusharglist 0 ........................... <>
  [103] extcall 120 ............................. <VOID>
  [105] getprop 1415 ............................ <pPartColors>
  [108] pusharglist 0 ........................... <>
  [110] extcall 120 ............................. <VOID>
  [112] getprop 1254 ............................ <pClass>
  [115] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, pPartColors, VOID, pClass>
  [117] objcall 1111 ............................ <getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)>
  [120] pusharglistnoret 3 ...................... <tInfo, #image, getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)>
  [122] objcall 136 ............................. tInfo[#image] = getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)
  [124] getlocal 0 .............................. <tInfo>
  [126] pusharglistnoret 1 ...................... <tInfo>
  [128] extcall 116 ............................. return tInfo
  [130] ret
end

on getLocation me
  [  0] getprop 465 ............................. <pLocX>
  [  3] getprop 467 ............................. <pLocY>
  [  6] getprop 469 ............................. <pLocH>
  [  9] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 11] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 12] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 14] extcall 116 ............................. return [pLocX, pLocY, pLocH]
  [ 16] ret
end

on getCustom me
  [  0] pushcons 1 .............................. <"furni_">
  [  2] getprop 1254 ............................ <pClass>
  [  5] joinstr ................................. <"furni_" & pClass>
  [  6] pushcons 3 .............................. <"_desc">
  [  8] joinstr ................................. <"furni_" & pClass & "_desc">
  [  9] pushcons 1 .............................. <"furni_">
  [ 11] getprop 1254 ............................ <pClass>
  [ 14] joinstr ................................. <"furni_" & pClass>
  [ 15] pushcons 3 .............................. <"_desc">
  [ 17] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 18] pusharglist 2 ........................... <"furni_" & pClass & "_desc", "furni_" & pClass & "_desc">
  [ 20] extcall 95 .............................. <getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 22] setlocal 0 .............................. tCustom = getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")
  [ 24] getlocal 0 .............................. <tCustom>
  [ 26] pusharglistnoret 1 ...................... <tCustom>
  [ 28] extcall 116 ............................. return tCustom
  [ 30] ret
end

on getSprites me
  [  0] getprop 993 ............................. <pSprList>
  [  3] pusharglistnoret 1 ...................... <pSprList>
  [  5] extcall 116 ............................. return pSprList
  [  7] ret
end

on select me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 116 ............................. return 0
  [  5] ret
end

on moveTo me, tX, tY, tH
  [  0] getparam 1 .............................. <tX>
  [  2] setprop 465 ............................. pLocX = tX
  [  5] getparam 2 .............................. <tY>
  [  7] setprop 467 ............................. pLocY = tY
  [ 10] getparam 3 .............................. <tH>
  [ 12] getprop 1416 ............................ <pAltitude>
  [ 15] add ..................................... <tH + pAltitude>
  [ 16] setprop 469 ............................. pLocH = tH + pAltitude
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglistnoret 1 ...................... <me>
  [ 23] objcall 1024 ............................ me.updateLocation()
  [ 26] ret
end

on moveBy me, tX, tY, tH
  [  0] getprop 465 ............................. <pLocX>
  [  3] getparam 1 .............................. <tX>
  [  5] add ..................................... <pLocX + tX>
  [  6] setprop 465 ............................. pLocX = pLocX + tX
  [  9] getprop 467 ............................. <pLocY>
  [ 12] getparam 2 .............................. <tY>
  [ 14] add ..................................... <pLocY + tY>
  [ 15] setprop 467 ............................. pLocY = pLocY + tY
  [ 18] getprop 469 ............................. <pLocH>
  [ 21] getparam 3 .............................. <tH>
  [ 23] add ..................................... <pLocH + tH>
  [ 24] setprop 469 ............................. pLocH = pLocH + tH
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglistnoret 1 ...................... <me>
  [ 31] objcall 1024 ............................ me.updateLocation()
  [ 34] ret
end

on rotate me, tChange
  [  0] getprop 993 ............................. <pSprList>
  [  3] pushint8 1 .............................. <1>
  [  5] pusharglist 2 ........................... <pSprList, 1>
  [  7] objcall 138 ............................. <pSprList[1]>
  [  9] pusharglist 1 ........................... <pSprList[1]>
  [ 11] extcall 146 ............................. <sprite(pSprList[1])>
  [ 13] getchainedprop 263 ...................... <sprite(pSprList[1]).member>
  [ 16] getobjprop 187 .......................... <sprite(pSprList[1]).member.name>
  [ 18] setlocal 0 .............................. tName = sprite(pSprList[1]).member.name
  [ 20] getprop 376 ............................. <pDirection>
  [ 23] setlocal 1 .............................. tDirection = pDirection
  [ 25] getparam 1 .............................. <tChange>
  [ 27] pusharglist 1 ........................... <tChange>
  [ 29] extcall 253 ............................. <voidp(tChange)>
  [ 31] jmpifz [ 38] ............................ if voidp(tChange) then
  [ 34] pushint8 2 .............................. <2>
  [ 36] setparam 1 .............................. tChange = 2
  [ 38] pushzero ................................ <0>
  [ 39] setlocal 2
  [ 41] getlocal 2
  [ 43] pushint8 3 .............................. <3>
  [ 45] lteq
  [ 46] jmpifz [138] ............................ repeat with j = 0 to 3
  [ 49] getlocal 1 .............................. <tDirection>
  [ 51] getparam 1 .............................. <tChange>
  [ 53] add ..................................... <tDirection + tChange>
  [ 54] getlocal 2 .............................. <j>
  [ 56] add ..................................... <tDirection + tChange + j>
  [ 57] pushint8 8 .............................. <8>
  [ 59] mod ..................................... <(tDirection + tChange + j) mod 8>
  [ 60] setlocal 1 .............................. tDirection = (tDirection + tChange + j) mod 8
  [ 62] getlocal 1 .............................. <tDirection>
  [ 64] pushint8 1 .............................. <1>
  [ 66] pusharglist 2 ........................... <tDirection, 1>
  [ 68] objcall 138 ............................. <tDirection[1]>
  [ 70] pushzero ................................ <0>
  [ 71] lt ...................................... <tDirection[1] < 0>
  [ 72] jmpifz [ 82] ............................ if tDirection[1] < 0 then
  [ 75] pushint8 8 .............................. <8>
  [ 77] getlocal 1 .............................. <tDirection>
  [ 79] add ..................................... <8 + tDirection>
  [ 80] setlocal 1 .............................. tDirection = 8 + tDirection
  [ 82] getlocal 0 .............................. <tName>
  [ 84] pushsymb 425 ............................ <#char>
  [ 87] pushint8 1 .............................. <1>
  [ 89] getlocal 0 .............................. <tName>
  [ 91] pusharglist 1 ........................... <tName>
  [ 93] extcall 595 ............................. <length(tName)>
  [ 96] pushint8 3 .............................. <3>
  [ 98] sub ..................................... <length(tName) - 3>
  [ 99] pusharglist 4 ........................... <tName, #char, 1, length(tName) - 3>
  [101] objcall 134 ............................. <tName.char[1..length(tName) - 3]>
  [103] getlocal 1 .............................. <tDirection>
  [105] pushint8 1 .............................. <1>
  [107] pusharglist 2 ........................... <tDirection, 1>
  [109] objcall 138 ............................. <tDirection[1]>
  [111] joinstr ................................. <tName.char[1..length(tName) - 3] & tDirection[1]>
  [112] pushcons 5 .............................. <"_0">
  [114] joinstr ................................. <tName.char[1..length(tName) - 3] & tDirection[1] & "_0">
  [115] setlocal 3 .............................. tTryName = tName.char[1..length(tName) - 3] & tDirection[1] & "_0"
  [117] getlocal 3 .............................. <tTryName>
  [119] pusharglist 1 ........................... <tTryName>
  [121] extcall 122 ............................. <memberExists(tTryName)>
  [123] jmpifz [129] ............................ if memberExists(tTryName) then
  [126] jmp [138] ............................... exit repeat
  [129] pushint8 1
  [131] getlocal 2
  [133] add
  [134] setlocal 2
  [136] endrepeat [ 41]
  [138] getlocal 3 .............................. <tTryName>
  [140] pusharglist 1 ........................... <tTryName>
  [142] extcall 122 ............................. <memberExists(tTryName)>
  [144] not ..................................... <not memberExists(tTryName)>
  [145] jmpifz [176] ............................ if not memberExists(tTryName) then
  [148] getparam 0 .............................. <me>
  [150] pushcons 6 .............................. <"Direction for object not found:">
  [152] getprop 1254 ............................ <pClass>
  [155] joinpadstr .............................. <"Direction for object not found:" && pClass>
  [156] getlocal 1 .............................. <tDirection>
  [158] pushint8 1 .............................. <1>
  [160] pusharglist 2 ........................... <tDirection, 1>
  [162] objcall 138 ............................. <tDirection[1]>
  [164] joinpadstr .............................. <"Direction for object not found:" && pClass && tDirection[1]>
  [165] pushsymb 427 ............................ <#rotate>
  [168] pusharglist 3 ........................... <me, "Direction for object not found:" && pClass && tDirection[1], #rotate>
  [170] extcall 123 ............................. <error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)>
  [172] pusharglistnoret 1 ...................... <error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)>
  [174] extcall 116 ............................. return error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)
  [176] pushsymb 931 ............................ <#room>
  [179] pusharglist 1 ........................... <#room>
  [181] extcall 227 ............................. <getThread(#room)>
  [183] pusharglist 1 ........................... <getThread(#room)>
  [185] objcall 173 ............................. <getThread(#room).getComponent()>
  [187] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [189] objcall 368 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [192] pushcons 7 .............................. <"MOVESTUFF">
  [194] getparam 0 .............................. <me>
  [196] pusharglist 1 ........................... <me>
  [198] objcall 115 ............................. <me.getID()>
  [200] getparam 0 .............................. <me>
  [202] getobjprop 465 .......................... <me.pLocX>
  [205] joinpadstr .............................. <me.getID() && me.pLocX>
  [206] getparam 0 .............................. <me>
  [208] getobjprop 467 .......................... <me.pLocY>
  [211] joinpadstr .............................. <me.getID() && me.pLocX && me.pLocY>
  [212] getlocal 1 .............................. <tDirection>
  [214] pushint8 1 .............................. <1>
  [216] pusharglist 2 ........................... <tDirection, 1>
  [218] objcall 138 ............................. <tDirection[1]>
  [220] joinpadstr .............................. <me.getID() && me.pLocX && me.pLocY && tDirection[1]>
  [221] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVESTUFF", me.getID() && me.pLocX && me.pLocY && tDirection[1]>
  [223] objcall 369 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVESTUFF", me.getID() && me.pLocX && me.pLocY && tDirection[1])
  [226] ret
end

on setSlideTo me, tFromLoc, tToLoc, tTimeNow, tHasCharacter
  [  0] getparam 3 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 253 ............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 14] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 407 ........................ <the milliSeconds>
  [ 12] setparam 3 .............................. tTimeNow = the milliSeconds
  [ 14] getparam 3 .............................. <tTimeNow>
  [ 16] setprop 1425 ............................ pSlideStartTime = tTimeNow
  [ 19] getprop 1425 ............................ <pSlideStartTime>
  [ 22] setlocal 0 .............................. pLastSlideUpdateTime = pSlideStartTime
  [ 24] getparam 1 .............................. <tFromLoc>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <tFromLoc, 1>
  [ 30] objcall 138 ............................. <tFromLoc[1]>
  [ 32] pusharglist 1 ........................... <tFromLoc[1]>
  [ 34] extcall 743 ............................. <getLocalFloat(tFromLoc[1])>
  [ 37] setprop 465 ............................. pLocX = getLocalFloat(tFromLoc[1])
  [ 40] getparam 1 .............................. <tFromLoc>
  [ 42] pushint8 2 .............................. <2>
  [ 44] pusharglist 2 ........................... <tFromLoc, 2>
  [ 46] objcall 138 ............................. <tFromLoc[2]>
  [ 48] pusharglist 1 ........................... <tFromLoc[2]>
  [ 50] extcall 743 ............................. <getLocalFloat(tFromLoc[2])>
  [ 53] setprop 467 ............................. pLocY = getLocalFloat(tFromLoc[2])
  [ 56] getparam 1 .............................. <tFromLoc>
  [ 58] pushint8 3 .............................. <3>
  [ 60] pusharglist 2 ........................... <tFromLoc, 3>
  [ 62] objcall 138 ............................. <tFromLoc[3]>
  [ 64] pusharglist 1 ........................... <tFromLoc[3]>
  [ 66] extcall 743 ............................. <getLocalFloat(tFromLoc[3])>
  [ 69] setprop 469 ............................. pLocH = getLocalFloat(tFromLoc[3])
  [ 72] pusharglist 0 ........................... <[]>
  [ 74] pushlist ................................ <[]>
  [ 75] setlocal 1 .............................. tDistances = []
  [ 77] getlocal 1 .............................. <tDistances>
  [ 79] pushint8 1 .............................. <1>
  [ 81] getparam 1 .............................. <tFromLoc>
  [ 83] pushint8 1 .............................. <1>
  [ 85] pusharglist 2 ........................... <tFromLoc, 1>
  [ 87] objcall 138 ............................. <tFromLoc[1]>
  [ 89] getparam 2 .............................. <tToLoc>
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglist 2 ........................... <tToLoc, 1>
  [ 95] objcall 138 ............................. <tToLoc[1]>
  [ 97] sub ..................................... <tFromLoc[1] - tToLoc[1]>
  [ 98] pusharglist 1 ........................... <tFromLoc[1] - tToLoc[1]>
  [100] extcall 1035 ............................ <abs(tFromLoc[1] - tToLoc[1])>
  [103] pusharglistnoret 3 ...................... <tDistances, 1, abs(tFromLoc[1] - tToLoc[1])>
  [105] objcall 136 ............................. tDistances[1] = abs(tFromLoc[1] - tToLoc[1])
  [107] getlocal 1 .............................. <tDistances>
  [109] pushint8 2 .............................. <2>
  [111] getparam 1 .............................. <tFromLoc>
  [113] pushint8 2 .............................. <2>
  [115] pusharglist 2 ........................... <tFromLoc, 2>
  [117] objcall 138 ............................. <tFromLoc[2]>
  [119] getparam 2 .............................. <tToLoc>
  [121] pushint8 2 .............................. <2>
  [123] pusharglist 2 ........................... <tToLoc, 2>
  [125] objcall 138 ............................. <tToLoc[2]>
  [127] sub ..................................... <tFromLoc[2] - tToLoc[2]>
  [128] pusharglist 1 ........................... <tFromLoc[2] - tToLoc[2]>
  [130] extcall 1035 ............................ <abs(tFromLoc[2] - tToLoc[2])>
  [133] pusharglistnoret 3 ...................... <tDistances, 2, abs(tFromLoc[2] - tToLoc[2])>
  [135] objcall 136 ............................. tDistances[2] = abs(tFromLoc[2] - tToLoc[2])
  [137] getlocal 1 .............................. <tDistances>
  [139] pushint8 3 .............................. <3>
  [141] getparam 1 .............................. <tFromLoc>
  [143] pushint8 3 .............................. <3>
  [145] pusharglist 2 ........................... <tFromLoc, 3>
  [147] objcall 138 ............................. <tFromLoc[3]>
  [149] getparam 2 .............................. <tToLoc>
  [151] pushint8 3 .............................. <3>
  [153] pusharglist 2 ........................... <tToLoc, 3>
  [155] objcall 138 ............................. <tToLoc[3]>
  [157] sub ..................................... <tFromLoc[3] - tToLoc[3]>
  [158] pusharglist 1 ........................... <tFromLoc[3] - tToLoc[3]>
  [160] extcall 1035 ............................ <abs(tFromLoc[3] - tToLoc[3])>
  [163] pusharglistnoret 3 ...................... <tDistances, 3, abs(tFromLoc[3] - tToLoc[3])>
  [165] objcall 136 ............................. tDistances[3] = abs(tFromLoc[3] - tToLoc[3])
  [167] getlocal 1 .............................. <tDistances>
  [169] pusharglist 1 ........................... <tDistances>
  [171] extcall 1373 ............................ <max(tDistances)>
  [174] getprop 1417 ............................ <pSlideTimePerTile>
  [177] mul ..................................... <max(tDistances) * pSlideTimePerTile>
  [178] setlocal 2 .............................. tMoveTime = max(tDistances) * pSlideTimePerTile
  [180] getprop 1425 ............................ <pSlideStartTime>
  [183] getlocal 2 .............................. <tMoveTime>
  [185] add ..................................... <pSlideStartTime + tMoveTime>
  [186] setprop 1426 ............................ pSlideEndTime = pSlideStartTime + tMoveTime
  [189] getprop 465 ............................. <pLocX>
  [192] getprop 467 ............................. <pLocY>
  [195] getprop 469 ............................. <pLocH>
  [198] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [200] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [201] setprop 1427 ............................ pStartloc = [pLocX, pLocY, pLocH]
  [204] getparam 2 .............................. <tToLoc>
  [206] setprop 1428 ............................ pDestLoc = tToLoc
  [209] getparam 0 .............................. <me>
  [211] pusharglistnoret 1 ...................... <me>
  [213] objcall 1024 ............................ me.updateLocation()
  [216] ret
end

on animateSlide me, tTimeNow
  [  0] getparam 1 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 253 ............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 14] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 407 ........................ <the milliSeconds>
  [ 12] setparam 1 .............................. tTimeNow = the milliSeconds
  [ 14] getprop 1426 ............................ <pSlideEndTime>
  [ 17] getparam 1 .............................. <tTimeNow>
  [ 19] lt ...................................... <pSlideEndTime < tTimeNow>
  [ 20] jmpifz [101] ............................ if pSlideEndTime < tTimeNow then
  [ 23] getprop 1428 ............................ <pDestLoc>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pDestLoc, 1>
  [ 30] objcall 138 ............................. <pDestLoc[1]>
  [ 32] getobjprop 426 .......................... <pDestLoc[1].integer>
  [ 35] setprop 465 ............................. pLocX = pDestLoc[1].integer
  [ 38] getprop 1428 ............................ <pDestLoc>
  [ 41] pushint8 2 .............................. <2>
  [ 43] pusharglist 2 ........................... <pDestLoc, 2>
  [ 45] objcall 138 ............................. <pDestLoc[2]>
  [ 47] getobjprop 426 .......................... <pDestLoc[2].integer>
  [ 50] setprop 467 ............................. pLocY = pDestLoc[2].integer
  [ 53] getprop 1428 ............................ <pDestLoc>
  [ 56] pushint8 3 .............................. <3>
  [ 58] pusharglist 2 ........................... <pDestLoc, 3>
  [ 60] objcall 138 ............................. <pDestLoc[3]>
  [ 62] setprop 469 ............................. pLocH = pDestLoc[3]
  [ 65] pushcons 8 .............................. <"room">
  [ 67] pusharglist 1 ........................... <"room">
  [ 69] extcall 227 ............................. <getThread("room")>
  [ 71] pusharglist 1 ........................... <getThread("room")>
  [ 73] objcall 173 ............................. <getThread("room").getComponent()>
  [ 75] getparam 0 .............................. <me>
  [ 77] getchainedprop 1337 ..................... <me.ancestor>
  [ 80] getobjprop 359 .......................... <me.ancestor.id>
  [ 83] pusharglistnoret 2 ...................... <getThread("room").getComponent(), me.ancestor.id>
  [ 85] objcall 497 ............................. getThread("room").getComponent().removeSlideObject(me.ancestor.id)
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglistnoret 1 ...................... <me>
  [ 92] objcall 1024 ............................ me.updateLocation()
  [ 95] pushint8 1 .............................. <1>
  [ 97] pusharglistnoret 1 ...................... <1>
  [ 99] extcall 116 ............................. return 1
  [101] getparam 1 .............................. <tTimeNow>
  [103] getprop 1425 ............................ <pSlideStartTime>
  [106] sub ..................................... <tTimeNow - pSlideStartTime>
  [107] pusharglist 1 ........................... <tTimeNow - pSlideStartTime>
  [109] extcall 589 ............................. <float(tTimeNow - pSlideStartTime)>
  [112] setlocal 0 .............................. tTimeUsed = float(tTimeNow - pSlideStartTime)
  [114] getlocal 0 .............................. <tTimeUsed>
  [116] getprop 1426 ............................ <pSlideEndTime>
  [119] getprop 1425 ............................ <pSlideStartTime>
  [122] sub ..................................... <pSlideEndTime - pSlideStartTime>
  [123] pusharglist 1 ........................... <pSlideEndTime - pSlideStartTime>
  [125] extcall 589 ............................. <float(pSlideEndTime - pSlideStartTime)>
  [128] div ..................................... <tTimeUsed / float(pSlideEndTime - pSlideStartTime)>
  [129] setlocal 1 .............................. tPercentSlided = tTimeUsed / float(pSlideEndTime - pSlideStartTime)
  [131] getprop 1428 ............................ <pDestLoc>
  [134] pushint8 1 .............................. <1>
  [136] pusharglist 2 ........................... <pDestLoc, 1>
  [138] objcall 138 ............................. <pDestLoc[1]>
  [140] getprop 1427 ............................ <pStartloc>
  [143] pushint8 1 .............................. <1>
  [145] pusharglist 2 ........................... <pStartloc, 1>
  [147] objcall 138 ............................. <pStartloc[1]>
  [149] sub ..................................... <pDestLoc[1] - pStartloc[1]>
  [150] pusharglist 1 ........................... <pDestLoc[1] - pStartloc[1]>
  [152] extcall 589 ............................. <float(pDestLoc[1] - pStartloc[1])>
  [155] getlocal 1 .............................. <tPercentSlided>
  [157] mul ..................................... <float(pDestLoc[1] - pStartloc[1]) * tPercentSlided>
  [158] getprop 1427 ............................ <pStartloc>
  [161] pushint8 1 .............................. <1>
  [163] pusharglist 2 ........................... <pStartloc, 1>
  [165] objcall 138 ............................. <pStartloc[1]>
  [167] add ..................................... <(float(pDestLoc[1] - pStartloc[1]) * tPercentSlided) + pStartloc[1]>
  [168] setprop 465 ............................. pLocX = (float(pDestLoc[1] - pStartloc[1]) * tPercentSlided) + pStartloc[1]
  [171] getprop 1428 ............................ <pDestLoc>
  [174] pushint8 2 .............................. <2>
  [176] pusharglist 2 ........................... <pDestLoc, 2>
  [178] objcall 138 ............................. <pDestLoc[2]>
  [180] getprop 1427 ............................ <pStartloc>
  [183] pushint8 2 .............................. <2>
  [185] pusharglist 2 ........................... <pStartloc, 2>
  [187] objcall 138 ............................. <pStartloc[2]>
  [189] sub ..................................... <pDestLoc[2] - pStartloc[2]>
  [190] pusharglist 1 ........................... <pDestLoc[2] - pStartloc[2]>
  [192] extcall 589 ............................. <float(pDestLoc[2] - pStartloc[2])>
  [195] getlocal 1 .............................. <tPercentSlided>
  [197] mul ..................................... <float(pDestLoc[2] - pStartloc[2]) * tPercentSlided>
  [198] getprop 1427 ............................ <pStartloc>
  [201] pushint8 2 .............................. <2>
  [203] pusharglist 2 ........................... <pStartloc, 2>
  [205] objcall 138 ............................. <pStartloc[2]>
  [207] add ..................................... <(float(pDestLoc[2] - pStartloc[2]) * tPercentSlided) + pStartloc[2]>
  [208] setprop 467 ............................. pLocY = (float(pDestLoc[2] - pStartloc[2]) * tPercentSlided) + pStartloc[2]
  [211] getprop 1428 ............................ <pDestLoc>
  [214] pushint8 3 .............................. <3>
  [216] pusharglist 2 ........................... <pDestLoc, 3>
  [218] objcall 138 ............................. <pDestLoc[3]>
  [220] getprop 1427 ............................ <pStartloc>
  [223] pushint8 3 .............................. <3>
  [225] pusharglist 2 ........................... <pStartloc, 3>
  [227] objcall 138 ............................. <pStartloc[3]>
  [229] sub ..................................... <pDestLoc[3] - pStartloc[3]>
  [230] pusharglist 1 ........................... <pDestLoc[3] - pStartloc[3]>
  [232] extcall 589 ............................. <float(pDestLoc[3] - pStartloc[3])>
  [235] getlocal 1 .............................. <tPercentSlided>
  [237] mul ..................................... <float(pDestLoc[3] - pStartloc[3]) * tPercentSlided>
  [238] getprop 1427 ............................ <pStartloc>
  [241] pushint8 3 .............................. <3>
  [243] pusharglist 2 ........................... <pStartloc, 3>
  [245] objcall 138 ............................. <pStartloc[3]>
  [247] add ..................................... <(float(pDestLoc[3] - pStartloc[3]) * tPercentSlided) + pStartloc[3]>
  [248] setprop 469 ............................. pLocH = (float(pDestLoc[3] - pStartloc[3]) * tPercentSlided) + pStartloc[3]
  [251] getparam 0 .............................. <me>
  [253] pusharglistnoret 1 ...................... <me>
  [255] objcall 1024 ............................ me.updateLocation()
  [258] pushint8 1 .............................. <1>
  [260] pusharglistnoret 1 ...................... <1>
  [262] extcall 116 ............................. return 1
  [264] ret
end

on ghostObject me
  [  0] getprop 993 ............................. <pSprList>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 149
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 60] ............................ repeat with tSpr in pSprList
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 138
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <tSpr>
  [ 31] getobjprop 393 .......................... <tSpr.ink>
  [ 34] pushint8 33 ............................. <33>
  [ 36] eq ...................................... <tSpr.ink = 33>
  [ 37] jmpifz [ 48] ............................ if tSpr.ink = 33 then
  [ 40] getlocal 0 .............................. <tSpr>
  [ 42] pushzero ................................ <0>
  [ 43] setobjprop 218 .......................... tSpr.visible = 0
  [ 45] jmp [ 55] ............................... next repeat
  [ 48] getlocal 0 .............................. <tSpr>
  [ 50] pushint8 35 ............................. <35>
  [ 52] setobjprop 333 .......................... tSpr.blend = 35
  [ 55] pushint8 1
  [ 57] add
  [ 58] endrepeat [ 11]
  [ 60] pop 3
  [ 62] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 116 ............................. return 1
  [  6] ret
end

on relocate me, tSpriteList
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 116 ............................. return 1
  [  6] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 253 ............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 9 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 1415 ............................ pPartColors = []
  [ 19] getmovieprop 654 ........................ <the itemDelimiter>
  [ 22] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 24] pushcons 10 ............................. <",">
  [ 26] setmovieprop 654 ........................ the itemDelimiter = ","
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 1
  [ 33] getlocal 1
  [ 35] getparam 1 .............................. <tpartColors>
  [ 37] pushsymb 655 ............................ <#item>
  [ 40] pusharglist 2 ........................... <tpartColors, #item>
  [ 42] objcall 149 ............................. <tpartColors.item.count>
  [ 44] lteq
  [ 45] jmpifz [ 80] ............................ repeat with i = 1 to tpartColors.item.count
  [ 48] getprop 1415 ............................ <pPartColors>
  [ 51] getparam 1 .............................. <tpartColors>
  [ 53] pushsymb 655 ............................ <#item>
  [ 56] getlocal 1 .............................. <i>
  [ 58] pusharglist 3 ........................... <tpartColors, #item, i>
  [ 60] objcall 134 ............................. <tpartColors.item[i]>
  [ 62] pusharglist 1 ........................... <tpartColors.item[i]>
  [ 64] extcall 596 ............................. <string(tpartColors.item[i])>
  [ 67] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[i])>
  [ 69] objcall 151 ............................. pPartColors.add(string(tpartColors.item[i]))
  [ 71] pushint8 1
  [ 73] getlocal 1
  [ 75] add
  [ 76] setlocal 1
  [ 78] endrepeat [ 33]
  [ 80] getprop 1415 ............................ <pPartColors>
  [ 83] getobjprop 149 .......................... <pPartColors.count>
  [ 85] setlocal 2
  [ 87] getlocal 2
  [ 89] pushint8 4 .............................. <4>
  [ 91] lteq
  [ 92] jmpifz [113] ............................ repeat with j = pPartColors.count to 4
  [ 95] getprop 1415 ............................ <pPartColors>
  [ 98] pushcons 11 ............................. <"*ffffff">
  [100] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [102] objcall 151 ............................. pPartColors.add("*ffffff")
  [104] pushint8 1
  [106] getlocal 2
  [108] add
  [109] setlocal 2
  [111] endrepeat [ 87]
  [113] getlocal 0 .............................. <tDelim>
  [115] setmovieprop 654 ........................ the itemDelimiter = tDelim
  [118] ret
end

on solveInk me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 253 ............................. <voidp(tClass)>
  [  6] jmpifz [ 14] ............................ if voidp(tClass) then
  [  9] getprop 1254 ............................ <pClass>
  [ 12] setparam 2 .............................. tClass = pClass
  [ 14] getparam 2 .............................. <tClass>
  [ 16] pushcons 12 ............................. <".props">
  [ 18] joinstr ................................. <tClass & ".props">
  [ 19] pusharglist 1 ........................... <tClass & ".props">
  [ 21] extcall 122 ............................. <memberExists(tClass & ".props")>
  [ 23] not ..................................... <not memberExists(tClass & ".props")>
  [ 24] jmpifz [ 33] ............................ if not memberExists(tClass & ".props") then
  [ 27] pushint8 8 .............................. <8>
  [ 29] pusharglistnoret 1 ...................... <8>
  [ 31] extcall 116 ............................. return 8
  [ 33] getparam 2 .............................. <tClass>
  [ 35] pushcons 12 ............................. <".props">
  [ 37] joinstr ................................. <tClass & ".props">
  [ 38] pusharglist 1 ........................... <tClass & ".props">
  [ 40] extcall 330 ............................. <getmemnum(tClass & ".props")>
  [ 43] pushzero ................................ <0>
  [ 44] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 45] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 47] extcall 385 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 50] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 52] getlocal 0 .............................. <tPropList>
  [ 54] pusharglist 1 ........................... <tPropList>
  [ 56] extcall 215 ............................. <ilk(tPropList)>
  [ 58] pushsymb 1436 ........................... <#propList>
  [ 61] nteq .................................... <ilk(tPropList) <> #propList>
  [ 62] jmpifz [ 88] ............................ if ilk(tPropList) <> #propList then / else
  [ 65] getparam 0 .............................. <me>
  [ 67] getparam 2 .............................. <tClass>
  [ 69] pushcons 13 ............................. <".props is not valid!">
  [ 71] joinstr ................................. <tClass & ".props is not valid!">
  [ 72] pushsymb 1410 ........................... <#solveInk>
  [ 75] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveInk>
  [ 77] extcall 123 ............................. error(me, tClass & ".props is not valid!", #solveInk)
  [ 79] pushint8 8 .............................. <8>
  [ 81] pusharglistnoret 1 ...................... <8>
  [ 83] extcall 116 ............................. return 8
  [ 85] jmp [151]
  [ 88] getlocal 0 .............................. <tPropList>
  [ 90] getparam 1 .............................. <tPart>
  [ 92] pusharglist 2 ........................... <tPropList, tPart>
  [ 94] objcall 138 ............................. <tPropList[tPart]>
  [ 96] pusharglist 1 ........................... <tPropList[tPart]>
  [ 98] extcall 253 ............................. <voidp(tPropList[tPart])>
  [100] jmpifz [109] ............................ if voidp(tPropList[tPart]) then
  [103] pushint8 8 .............................. <8>
  [105] pusharglistnoret 1 ...................... <8>
  [107] extcall 116 ............................. return 8
  [109] getlocal 0 .............................. <tPropList>
  [111] getparam 1 .............................. <tPart>
  [113] pusharglist 2 ........................... <tPropList, tPart>
  [115] objcall 138 ............................. <tPropList[tPart]>
  [117] pushsymb 393 ............................ <#ink>
  [120] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [122] objcall 138 ............................. <tPropList[tPart][#ink]>
  [124] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [126] extcall 253 ............................. <voidp(tPropList[tPart][#ink])>
  [128] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [129] jmpifz [151] ............................ if not voidp(tPropList[tPart][#ink]) then
  [132] getlocal 0 .............................. <tPropList>
  [134] getparam 1 .............................. <tPart>
  [136] pusharglist 2 ........................... <tPropList, tPart>
  [138] objcall 138 ............................. <tPropList[tPart]>
  [140] pushsymb 393 ............................ <#ink>
  [143] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [145] objcall 138 ............................. <tPropList[tPart][#ink]>
  [147] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [149] extcall 116 ............................. return tPropList[tPart][#ink]
  [151] pushint8 8 .............................. <8>
  [153] pusharglistnoret 1 ...................... <8>
  [155] extcall 116 ............................. return 8
  [157] ret
end

on solveBlend me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 253 ............................. <voidp(tClass)>
  [  6] jmpifz [ 14] ............................ if voidp(tClass) then
  [  9] getprop 1254 ............................ <pClass>
  [ 12] setparam 2 .............................. tClass = pClass
  [ 14] getparam 2 .............................. <tClass>
  [ 16] pushcons 12 ............................. <".props">
  [ 18] joinstr ................................. <tClass & ".props">
  [ 19] pusharglist 1 ........................... <tClass & ".props">
  [ 21] extcall 122 ............................. <memberExists(tClass & ".props")>
  [ 23] not ..................................... <not memberExists(tClass & ".props")>
  [ 24] jmpifz [ 33] ............................ if not memberExists(tClass & ".props") then
  [ 27] pushint8 100 ............................ <100>
  [ 29] pusharglistnoret 1 ...................... <100>
  [ 31] extcall 116 ............................. return 100
  [ 33] getparam 2 .............................. <tClass>
  [ 35] pushcons 12 ............................. <".props">
  [ 37] joinstr ................................. <tClass & ".props">
  [ 38] pusharglist 1 ........................... <tClass & ".props">
  [ 40] extcall 330 ............................. <getmemnum(tClass & ".props")>
  [ 43] pushzero ................................ <0>
  [ 44] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 45] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 47] extcall 385 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 50] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 52] getlocal 0 .............................. <tPropList>
  [ 54] pusharglist 1 ........................... <tPropList>
  [ 56] extcall 215 ............................. <ilk(tPropList)>
  [ 58] pushsymb 1436 ........................... <#propList>
  [ 61] nteq .................................... <ilk(tPropList) <> #propList>
  [ 62] jmpifz [ 88] ............................ if ilk(tPropList) <> #propList then / else
  [ 65] getparam 0 .............................. <me>
  [ 67] getparam 2 .............................. <tClass>
  [ 69] pushcons 13 ............................. <".props is not valid!">
  [ 71] joinstr ................................. <tClass & ".props is not valid!">
  [ 72] pushsymb 1411 ........................... <#solveBlend>
  [ 75] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveBlend>
  [ 77] extcall 123 ............................. error(me, tClass & ".props is not valid!", #solveBlend)
  [ 79] pushint8 100 ............................ <100>
  [ 81] pusharglistnoret 1 ...................... <100>
  [ 83] extcall 116 ............................. return 100
  [ 85] jmp [151]
  [ 88] getlocal 0 .............................. <tPropList>
  [ 90] getparam 1 .............................. <tPart>
  [ 92] pusharglist 2 ........................... <tPropList, tPart>
  [ 94] objcall 138 ............................. <tPropList[tPart]>
  [ 96] pusharglist 1 ........................... <tPropList[tPart]>
  [ 98] extcall 253 ............................. <voidp(tPropList[tPart])>
  [100] jmpifz [109] ............................ if voidp(tPropList[tPart]) then
  [103] pushint8 100 ............................ <100>
  [105] pusharglistnoret 1 ...................... <100>
  [107] extcall 116 ............................. return 100
  [109] getlocal 0 .............................. <tPropList>
  [111] getparam 1 .............................. <tPart>
  [113] pusharglist 2 ........................... <tPropList, tPart>
  [115] objcall 138 ............................. <tPropList[tPart]>
  [117] pushsymb 333 ............................ <#blend>
  [120] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [122] objcall 138 ............................. <tPropList[tPart][#blend]>
  [124] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [126] extcall 253 ............................. <voidp(tPropList[tPart][#blend])>
  [128] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [129] jmpifz [151] ............................ if not voidp(tPropList[tPart][#blend]) then
  [132] getlocal 0 .............................. <tPropList>
  [134] getparam 1 .............................. <tPart>
  [136] pusharglist 2 ........................... <tPropList, tPart>
  [138] objcall 138 ............................. <tPropList[tPart]>
  [140] pushsymb 333 ............................ <#blend>
  [143] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [145] objcall 138 ............................. <tPropList[tPart][#blend]>
  [147] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [149] extcall 116 ............................. return tPropList[tPart][#blend]
  [151] pushint8 100 ............................ <100>
  [153] pusharglistnoret 1 ...................... <100>
  [155] extcall 116 ............................. return 100
  [157] ret
end

on solveLocZ me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 253 ............................. <voidp(tClass)>
  [  6] jmpifz [ 14] ............................ if voidp(tClass) then
  [  9] getprop 1254 ............................ <pClass>
  [ 12] setparam 3 .............................. tClass = pClass
  [ 14] getparam 3 .............................. <tClass>
  [ 16] pushcons 12 ............................. <".props">
  [ 18] joinstr ................................. <tClass & ".props">
  [ 19] pusharglist 1 ........................... <tClass & ".props">
  [ 21] extcall 122 ............................. <memberExists(tClass & ".props")>
  [ 23] not ..................................... <not memberExists(tClass & ".props")>
  [ 24] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 116 ............................. return 0
  [ 32] getparam 3 .............................. <tClass>
  [ 34] pushcons 12 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 330 ............................. <getmemnum(tClass & ".props")>
  [ 42] pushzero ................................ <0>
  [ 43] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 44] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 46] extcall 385 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 49] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 51] getlocal 0 .............................. <tPropList>
  [ 53] pusharglist 1 ........................... <tPropList>
  [ 55] extcall 215 ............................. <ilk(tPropList)>
  [ 57] pushsymb 1436 ........................... <#propList>
  [ 60] nteq .................................... <ilk(tPropList) <> #propList>
  [ 61] jmpifz [ 86] ............................ if ilk(tPropList) <> #propList then / else
  [ 64] getparam 0 .............................. <me>
  [ 66] getparam 3 .............................. <tClass>
  [ 68] pushcons 13 ............................. <".props is not valid!">
  [ 70] joinstr ................................. <tClass & ".props is not valid!">
  [ 71] pushsymb 1412 ........................... <#solveLocZ>
  [ 74] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveLocZ>
  [ 76] extcall 123 ............................. error(me, tClass & ".props is not valid!", #solveLocZ)
  [ 78] pushzero ................................ <0>
  [ 79] pusharglistnoret 1 ...................... <0>
  [ 81] extcall 116 ............................. return 0
  [ 83] jmp [159]
  [ 86] getlocal 0 .............................. <tPropList>
  [ 88] getparam 1 .............................. <tPart>
  [ 90] pusharglist 2 ........................... <tPropList, tPart>
  [ 92] objcall 138 ............................. <tPropList[tPart]>
  [ 94] pusharglist 1 ........................... <tPropList[tPart]>
  [ 96] extcall 253 ............................. <voidp(tPropList[tPart])>
  [ 98] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [101] pushzero ................................ <0>
  [102] pusharglistnoret 1 ...................... <0>
  [104] extcall 116 ............................. return 0
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 138 ............................. <tPropList[tPart]>
  [114] pushsymb 1438 ........................... <#zshift>
  [117] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [119] objcall 138 ............................. <tPropList[tPart][#zshift]>
  [121] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [123] extcall 253 ............................. <voidp(tPropList[tPart][#zshift])>
  [125] jmpifz [133] ............................ if voidp(tPropList[tPart][#zshift]) then
  [128] pushzero ................................ <0>
  [129] pusharglistnoret 1 ...................... <0>
  [131] extcall 116 ............................. return 0
  [133] getlocal 0 .............................. <tPropList>
  [135] getparam 1 .............................. <tPart>
  [137] pusharglist 2 ........................... <tPropList, tPart>
  [139] objcall 138 ............................. <tPropList[tPart]>
  [141] pushsymb 1438 ........................... <#zshift>
  [144] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [146] objcall 138 ............................. <tPropList[tPart][#zshift]>
  [148] getobjprop 149 .......................... <tPropList[tPart][#zshift].count>
  [150] getparam 2 .............................. <tdir>
  [152] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [153] jmpifz [159] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [156] pushzero ................................ <0>
  [157] setparam 2 .............................. tdir = 0
  [159] getlocal 0 .............................. <tPropList>
  [161] getparam 1 .............................. <tPart>
  [163] pusharglist 2 ........................... <tPropList, tPart>
  [165] objcall 138 ............................. <tPropList[tPart]>
  [167] pushsymb 1438 ........................... <#zshift>
  [170] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [172] objcall 138 ............................. <tPropList[tPart][#zshift]>
  [174] getparam 2 .............................. <tdir>
  [176] pushint8 1 .............................. <1>
  [178] add ..................................... <tdir + 1>
  [179] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [181] objcall 138 ............................. <tPropList[tPart][#zshift][tdir + 1]>
  [183] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [185] extcall 116 ............................. return tPropList[tPart][#zshift][tdir + 1]
  [187] ret
end

on solveLocShift me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 253 ............................. <voidp(tClass)>
  [  6] jmpifz [ 14] ............................ if voidp(tClass) then
  [  9] getprop 1254 ............................ <pClass>
  [ 12] setparam 3 .............................. tClass = pClass
  [ 14] getparam 3 .............................. <tClass>
  [ 16] pushcons 12 ............................. <".props">
  [ 18] joinstr ................................. <tClass & ".props">
  [ 19] pusharglist 1 ........................... <tClass & ".props">
  [ 21] extcall 122 ............................. <memberExists(tClass & ".props")>
  [ 23] not ..................................... <not memberExists(tClass & ".props")>
  [ 24] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 116 ............................. return 0
  [ 32] getparam 3 .............................. <tClass>
  [ 34] pushcons 12 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 330 ............................. <getmemnum(tClass & ".props")>
  [ 42] pushzero ................................ <0>
  [ 43] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 44] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 46] extcall 385 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 49] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 51] getlocal 0 .............................. <tPropList>
  [ 53] pusharglist 1 ........................... <tPropList>
  [ 55] extcall 215 ............................. <ilk(tPropList)>
  [ 57] pushsymb 1436 ........................... <#propList>
  [ 60] nteq .................................... <ilk(tPropList) <> #propList>
  [ 61] jmpifz [ 86] ............................ if ilk(tPropList) <> #propList then / else
  [ 64] getparam 0 .............................. <me>
  [ 66] getparam 3 .............................. <tClass>
  [ 68] pushcons 13 ............................. <".props is not valid!">
  [ 70] joinstr ................................. <tClass & ".props is not valid!">
  [ 71] pushsymb 1413 ........................... <#solveLocShift>
  [ 74] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveLocShift>
  [ 76] extcall 123 ............................. error(me, tClass & ".props is not valid!", #solveLocShift)
  [ 78] pushzero ................................ <0>
  [ 79] pusharglistnoret 1 ...................... <0>
  [ 81] extcall 116 ............................. return 0
  [ 83] jmp [211]
  [ 86] getlocal 0 .............................. <tPropList>
  [ 88] getparam 1 .............................. <tPart>
  [ 90] pusharglist 2 ........................... <tPropList, tPart>
  [ 92] objcall 138 ............................. <tPropList[tPart]>
  [ 94] pusharglist 1 ........................... <tPropList[tPart]>
  [ 96] extcall 253 ............................. <voidp(tPropList[tPart])>
  [ 98] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [101] pushzero ................................ <0>
  [102] pusharglistnoret 1 ...................... <0>
  [104] extcall 116 ............................. return 0
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 138 ............................. <tPropList[tPart]>
  [114] pushsymb 1439 ........................... <#locshift>
  [117] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [119] objcall 138 ............................. <tPropList[tPart][#locshift]>
  [121] pusharglist 1 ........................... <tPropList[tPart][#locshift]>
  [123] extcall 253 ............................. <voidp(tPropList[tPart][#locshift])>
  [125] jmpifz [133] ............................ if voidp(tPropList[tPart][#locshift]) then
  [128] pushzero ................................ <0>
  [129] pusharglistnoret 1 ...................... <0>
  [131] extcall 116 ............................. return 0
  [133] getlocal 0 .............................. <tPropList>
  [135] getparam 1 .............................. <tPart>
  [137] pusharglist 2 ........................... <tPropList, tPart>
  [139] objcall 138 ............................. <tPropList[tPart]>
  [141] pushsymb 1439 ........................... <#locshift>
  [144] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [146] objcall 138 ............................. <tPropList[tPart][#locshift]>
  [148] getobjprop 149 .......................... <tPropList[tPart][#locshift].count>
  [150] getparam 2 .............................. <tdir>
  [152] lteq .................................... <tPropList[tPart][#locshift].count <= tdir>
  [153] jmpifz [161] ............................ if tPropList[tPart][#locshift].count <= tdir then
  [156] pushzero ................................ <0>
  [157] pusharglistnoret 1 ...................... <0>
  [159] extcall 116 ............................. return 0
  [161] getlocal 0 .............................. <tPropList>
  [163] getparam 1 .............................. <tPart>
  [165] pusharglist 2 ........................... <tPropList, tPart>
  [167] objcall 138 ............................. <tPropList[tPart]>
  [169] pushsymb 1439 ........................... <#locshift>
  [172] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [174] objcall 138 ............................. <tPropList[tPart][#locshift]>
  [176] getparam 2 .............................. <tdir>
  [178] pushint8 1 .............................. <1>
  [180] add ..................................... <tdir + 1>
  [181] pusharglist 2 ........................... <tPropList[tPart][#locshift], tdir + 1>
  [183] objcall 138 ............................. <tPropList[tPart][#locshift][tdir + 1]>
  [185] pusharglist 1 ........................... <tPropList[tPart][#locshift][tdir + 1]>
  [187] extcall 385 ............................. <value(tPropList[tPart][#locshift][tdir + 1])>
  [190] setlocal 1 .............................. tShift = value(tPropList[tPart][#locshift][tdir + 1])
  [192] getlocal 1 .............................. <tShift>
  [194] pusharglist 1 ........................... <tShift>
  [196] extcall 215 ............................. <ilk(tShift)>
  [198] pushsymb 264 ............................ <#point>
  [201] eq ...................................... <ilk(tShift) = #point>
  [202] jmpifz [211] ............................ if ilk(tShift) = #point then
  [205] getlocal 1 .............................. <tShift>
  [207] pusharglistnoret 1 ...................... <tShift>
  [209] extcall 116 ............................. return tShift
  [211] pushzero ................................ <0>
  [212] pusharglistnoret 1 ...................... <0>
  [214] extcall 116 ............................. return 0
  [216] ret
end

on solveMembers me
  [  0] getprop 1254 ............................ <pClass>
  [  3] setlocal 0 .............................. tClass = pClass
  [  5] getlocal 0 .............................. <tClass>
  [  7] pushcons 14 ............................. <"*">
  [  9] containsstr ............................. <tClass contains "*">
  [ 10] jmpifz [ 65] ............................ if tClass contains "*" then / else
  [ 13] getlocal 0 .............................. <tClass>
  [ 15] pushcons 15 ............................. <"_small">
  [ 17] joinstr ................................. <tClass & "_small">
  [ 18] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 20] getlocal 0 .............................. <tClass>
  [ 22] pushsymb 425 ............................ <#char>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pushcons 14 ............................. <"*">
  [ 29] getlocal 0 .............................. <tClass>
  [ 31] pusharglist 2 ........................... <"*", tClass>
  [ 33] extcall 594 ............................. <offset("*", tClass)>
  [ 36] pushint8 1 .............................. <1>
  [ 38] sub ..................................... <offset("*", tClass) - 1>
  [ 39] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [ 41] objcall 134 ............................. <tClass.char[1..offset("*", tClass) - 1]>
  [ 43] setlocal 0 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [ 45] getlocal 1 .............................. <tSmallMem>
  [ 47] pusharglist 1 ........................... <tSmallMem>
  [ 49] extcall 122 ............................. <memberExists(tSmallMem)>
  [ 51] not ..................................... <not memberExists(tSmallMem)>
  [ 52] jmpifz [ 62] ............................ if not memberExists(tSmallMem) then
  [ 55] getlocal 0 .............................. <tClass>
  [ 57] pushcons 15 ............................. <"_small">
  [ 59] joinstr ................................. <tClass & "_small">
  [ 60] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 62] jmp [ 72]
  [ 65] getlocal 0 .............................. <tClass>
  [ 67] pushcons 15 ............................. <"_small">
  [ 69] joinstr ................................. <tClass & "_small">
  [ 70] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 72] getlocal 1 .............................. <tSmallMem>
  [ 74] setprop 1421 ............................ pSmallMember = tSmallMem
  [ 77] getprop 959 ............................. <pXFactor>
  [ 80] pushint8 32 ............................. <32>
  [ 82] eq ...................................... <pXFactor = 32>
  [ 83] jmpifz [ 93] ............................ if pXFactor = 32 then
  [ 86] pushcons 16 ............................. <"s_">
  [ 88] getlocal 0 .............................. <tClass>
  [ 90] joinstr ................................. <"s_" & tClass>
  [ 91] setlocal 0 .............................. tClass = "s_" & tClass
  [ 93] getprop 993 ............................. <pSprList>
  [ 96] getobjprop 149 .......................... <pSprList.count>
  [ 98] pushzero ................................ <0>
  [ 99] gt ...................................... <pSprList.count > 0>
  [100] jmpifz [155] ............................ if pSprList.count > 0 then
  [103] getprop 993 ............................. <pSprList>
  [106] peek 0
  [108] pusharglist 1
  [110] extcall 149
  [112] pushint8 1
  [114] peek 0
  [116] peek 2
  [118] lteq
  [119] jmpifz [147] ............................ repeat with tSpr in pSprList
  [122] peek 2
  [124] peek 1
  [126] pusharglist 2
  [128] extcall 138
  [130] setlocal 2
  [132] getlocal 2 .............................. <tSpr>
  [134] getobjprop 335 .......................... <tSpr.spriteNum>
  [137] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [139] extcall 339 ............................. releaseSprite(tSpr.spriteNum)
  [142] pushint8 1
  [144] add
  [145] endrepeat [114]
  [147] pop 3
  [149] pusharglist 0 ........................... <[]>
  [151] pushlist ................................ <[]>
  [152] setprop 993 ............................. pSprList = []
  [155] pushint8 1 .............................. <1>
  [157] setlocal 3 .............................. tMemNum = 1
  [159] pushcons 17 ............................. <"a">
  [161] pusharglist 1 ........................... <"a">
  [163] extcall 640 ............................. <charToNum("a")>
  [166] setlocal 4 .............................. i = charToNum("a")
  [168] pushint8 1 .............................. <1>
  [170] setlocal 5 .............................. j = 1
  [172] pushint8 5 .............................. <5>
  [174] inv ..................................... <-5>
  [175] setlocal 6 .............................. tLoczAdjust = -5
  [177] getlocal 3 .............................. <tMemNum>
  [179] pushzero ................................ <0>
  [180] gt ...................................... <tMemNum > 0>
  [181] jmpifz [1065] ........................... repeat while tMemNum > 0
  [184] pushzero ................................ <0>
  [185] setlocal 7 .............................. tFound = 0
  [187] getlocal 7 .............................. <tFound>
  [189] pushzero ................................ <0>
  [190] eq ...................................... <tFound = 0>
  [191] jmpifz [542] ............................ repeat while tFound = 0
  [194] getlocal 0 .............................. <tClass>
  [196] pushcons 18 ............................. <"_">
  [198] joinstr ................................. <tClass & "_">
  [199] getlocal 4 .............................. <i>
  [201] pusharglist 1 ........................... <i>
  [203] extcall 350 ............................. <numToChar(i)>
  [206] joinstr ................................. <tClass & "_" & numToChar(i)>
  [207] pushcons 18 ............................. <"_">
  [209] joinstr ................................. <tClass & "_" & numToChar(i) & "_">
  [210] pushcons 19 ............................. <"0">
  [212] joinstr ................................. <tClass & "_" & numToChar(i) & "_" & "0">
  [213] setlocal 8 .............................. tMemNameA = tClass & "_" & numToChar(i) & "_" & "0"
  [215] getprop 375 ............................. <pDimensions>
  [218] pusharglist 1 ........................... <pDimensions>
  [220] extcall 258 ............................. <listp(pDimensions)>
  [223] jmpifz [256] ............................ if listp(pDimensions) then
  [226] getlocal 8 .............................. <tMemNameA>
  [228] pushcons 18 ............................. <"_">
  [230] joinstr ................................. <tMemNameA & "_">
  [231] getprop 375 ............................. <pDimensions>
  [234] pushint8 1 .............................. <1>
  [236] pusharglist 2 ........................... <pDimensions, 1>
  [238] objcall 138 ............................. <pDimensions[1]>
  [240] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [241] pushcons 18 ............................. <"_">
  [243] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [244] getprop 375 ............................. <pDimensions>
  [247] pushint8 2 .............................. <2>
  [249] pusharglist 2 ........................... <pDimensions, 2>
  [251] objcall 138 ............................. <pDimensions[2]>
  [253] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [254] setlocal 8 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [256] getprop 376 ............................. <pDirection>
  [259] pusharglist 1 ........................... <pDirection>
  [261] extcall 253 ............................. <voidp(pDirection)>
  [263] not ..................................... <not voidp(pDirection)>
  [264] jmpifz [334] ............................ if not voidp(pDirection) then / else
  [267] getprop 376 ............................. <pDirection>
  [270] pusharglist 1 ........................... <pDirection>
  [272] extcall 149 ............................. <count(pDirection)>
  [274] getlocal 5 .............................. <j>
  [276] gteq .................................... <count(pDirection) >= j>
  [277] jmpifz [307] ............................ if count(pDirection) >= j then / else
  [280] getlocal 8 .............................. <tMemNameA>
  [282] pushcons 18 ............................. <"_">
  [284] joinstr ................................. <tMemNameA & "_">
  [285] getprop 376 ............................. <pDirection>
  [288] getlocal 5 .............................. <j>
  [290] pusharglist 2 ........................... <pDirection, j>
  [292] objcall 138 ............................. <pDirection[j]>
  [294] joinstr ................................. <tMemNameA & "_" & pDirection[j]>
  [295] pushcons 18 ............................. <"_">
  [297] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_">
  [298] getprop 1351 ............................ <pAnimFrame>
  [301] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame>
  [302] setlocal 9 .............................. tMemName = tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame
  [304] jmp [331]
  [307] getlocal 8 .............................. <tMemNameA>
  [309] pushcons 18 ............................. <"_">
  [311] joinstr ................................. <tMemNameA & "_">
  [312] getprop 376 ............................. <pDirection>
  [315] pushint8 1 .............................. <1>
  [317] pusharglist 2 ........................... <pDirection, 1>
  [319] objcall 138 ............................. <pDirection[1]>
  [321] joinstr ................................. <tMemNameA & "_" & pDirection[1]>
  [322] pushcons 18 ............................. <"_">
  [324] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_">
  [325] getprop 1351 ............................ <pAnimFrame>
  [328] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame>
  [329] setlocal 9 .............................. tMemName = tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame
  [331] jmp [345]
  [334] getlocal 8 .............................. <tMemNameA>
  [336] pushcons 18 ............................. <"_">
  [338] joinstr ................................. <tMemNameA & "_">
  [339] getprop 1351 ............................ <pAnimFrame>
  [342] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [343] setlocal 9 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [345] getlocal 9 .............................. <tMemName>
  [347] pusharglist 1 ........................... <tMemName>
  [349] extcall 330 ............................. <getmemnum(tMemName)>
  [352] setlocal 3 .............................. tMemNum = getmemnum(tMemName)
  [354] getlocal 9 .............................. <tMemName>
  [356] setlocal 10 ............................. tOldMemName = tMemName
  [358] getlocal 3 .............................. <tMemNum>
  [360] not ..................................... <not tMemNum>
  [361] jmpifz [384] ............................ if not tMemNum then
  [364] getlocal 8 .............................. <tMemNameA>
  [366] pushcons 20 ............................. <"_0_">
  [368] joinstr ................................. <tMemNameA & "_0_">
  [369] getprop 1351 ............................ <pAnimFrame>
  [372] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [373] setlocal 9 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [375] getlocal 9 .............................. <tMemName>
  [377] pusharglist 1 ........................... <tMemName>
  [379] extcall 330 ............................. <getmemnum(tMemName)>
  [382] setlocal 3 .............................. tMemNum = getmemnum(tMemName)
  [384] getlocal 3 .............................. <tMemNum>
  [386] not ..................................... <not tMemNum>
  [387] getlocal 5 .............................. <j>
  [389] pushint8 1 .............................. <1>
  [391] eq ...................................... <j = 1>
  [392] and ..................................... <not tMemNum and (j = 1)>
  [393] jmpifz [535] ............................ if not tMemNum and (j = 1) then
  [396] pushzero ................................ <0>
  [397] setlocal 7 .............................. tFound = 0
  [399] getprop 376 ............................. <pDirection>
  [402] pusharglist 1 ........................... <pDirection>
  [404] extcall 258 ............................. <listp(pDirection)>
  [407] jmpifz [532] ............................ if listp(pDirection) then
  [410] pushint8 1 .............................. <1>
  [412] setlocal 11
  [414] getlocal 11
  [416] getprop 376 ............................. <pDirection>
  [419] getobjprop 149 .......................... <pDirection.count>
  [421] lteq
  [422] jmpifz [460] ............................ repeat with tdir = 1 to pDirection.count
  [425] getprop 376 ............................. <pDirection>
  [428] getlocal 11 ............................. <tdir>
  [430] getprop 376 ............................. <pDirection>
  [433] getlocal 11 ............................. <tdir>
  [435] pusharglist 2 ........................... <pDirection, tdir>
  [437] objcall 138 ............................. <pDirection[tdir]>
  [439] pushint8 1 .............................. <1>
  [441] add ..................................... <pDirection[tdir] + 1>
  [442] pusharglist 1 ........................... <pDirection[tdir] + 1>
  [444] extcall 426 ............................. <integer(pDirection[tdir] + 1)>
  [447] pusharglistnoret 3 ...................... <pDirection, tdir, integer(pDirection[tdir] + 1)>
  [449] objcall 136 ............................. pDirection[tdir] = integer(pDirection[tdir] + 1)
  [451] pushint8 1
  [453] getlocal 11
  [455] add
  [456] setlocal 11
  [458] endrepeat [414]
  [460] getprop 376 ............................. <pDirection>
  [463] pushint8 1 .............................. <1>
  [465] pusharglist 2 ........................... <pDirection, 1>
  [467] objcall 138 ............................. <pDirection[1]>
  [469] pushint8 8 .............................. <8>
  [471] eq ...................................... <pDirection[1] = 8>
  [472] jmpifz [532] ............................ if pDirection[1] = 8 then
  [475] getparam 0 .............................. <me>
  [477] pushcons 21 ............................. <"Couldn't define members:">
  [479] getlocal 0 .............................. <tClass>
  [481] joinpadstr .............................. <"Couldn't define members:" && tClass>
  [482] pushsymb 1414 ........................... <#solveMembers>
  [485] pusharglistnoret 3 ...................... <me, "Couldn't define members:" && tClass, #solveMembers>
  [487] extcall 123 ............................. error(me, "Couldn't define members:" && tClass, #solveMembers)
  [489] getprop 959 ............................. <pXFactor>
  [492] pushint8 32 ............................. <32>
  [494] eq ...................................... <pXFactor = 32>
  [495] jmpifz [510] ............................ if pXFactor = 32 then / else
  [498] pushcons 22 ............................. <"s_room_object_placeholder">
  [500] pusharglist 1 ........................... <"s_room_object_placeholder">
  [502] extcall 330 ............................. <getmemnum("s_room_object_placeholder")>
  [505] setlocal 3 .............................. tMemNum = getmemnum("s_room_object_placeholder")
  [507] jmp [519]
  [510] pushcons 23 ............................. <"room_object_placeholder">
  [512] pusharglist 1 ........................... <"room_object_placeholder">
  [514] extcall 330 ............................. <getmemnum("room_object_placeholder")>
  [517] setlocal 3 .............................. tMemNum = getmemnum("room_object_placeholder")
  [519] pushzero ................................ <0>
  [520] pushzero ................................ <0>
  [521] pushzero ................................ <0>
  [522] pusharglist 3 ........................... <[0, 0, 0]>
  [524] pushlist ................................ <[0, 0, 0]>
  [525] setprop 376 ............................. pDirection = [0, 0, 0]
  [528] pushint8 1 .............................. <1>
  [530] setlocal 7 .............................. tFound = 1
  [532] jmp [539] ............................... next repeat
  [535] pushint8 1 .............................. <1>
  [537] setlocal 7 .............................. tFound = 1
  [539] endrepeat [187]
  [542] getlocal 3 .............................. <tMemNum>
  [544] pushzero ................................ <0>
  [545] nteq .................................... <tMemNum <> 0>
  [546] jmpifz [1048] ........................... if tMemNum <> 0 then
  [549] getprop 993 ............................. <pSprList>
  [552] pusharglist 1 ........................... <pSprList>
  [554] extcall 149 ............................. <count(pSprList)>
  [556] getlocal 5 .............................. <j>
  [558] gteq .................................... <count(pSprList) >= j>
  [559] jmpifz [576] ............................ if count(pSprList) >= j then / else
  [562] getprop 993 ............................. <pSprList>
  [565] getlocal 5 .............................. <j>
  [567] pusharglist 2 ........................... <pSprList, j>
  [569] objcall 138 ............................. <pSprList[j]>
  [571] setlocal 2 .............................. tSpr = pSprList[j]
  [573] jmp [672]
  [576] pushsymb 931 ............................ <#room>
  [579] pusharglist 1 ........................... <#room>
  [581] extcall 227 ............................. <getThread(#room)>
  [583] pusharglist 1 ........................... <getThread(#room)>
  [585] objcall 570 ............................. <getThread(#room).getInterface()>
  [588] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [590] objcall 115 ............................. <getThread(#room).getInterface().getID()>
  [592] setlocal 12 ............................. tTargetID = getThread(#room).getInterface().getID()
  [594] getparam 0 .............................. <me>
  [596] pusharglist 1 ........................... <me>
  [598] objcall 115 ............................. <me.getID()>
  [600] pusharglist 1 ........................... <me.getID()>
  [602] extcall 328 ............................. <reserveSprite(me.getID())>
  [605] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [607] extcall 146 ............................. <sprite(reserveSprite(me.getID()))>
  [609] setlocal 2 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [611] getprop 993 ............................. <pSprList>
  [614] getlocal 2 .............................. <tSpr>
  [616] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [618] objcall 151 ............................. pSprList.add(tSpr)
  [620] getlocal 2 .............................. <tSpr>
  [622] getobjprop 335 .......................... <tSpr.spriteNum>
  [625] getparam 0 .............................. <me>
  [627] pusharglist 1 ........................... <me>
  [629] objcall 115 ............................. <me.getID()>
  [631] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [633] extcall 334 ............................. setEventBroker(tSpr.spriteNum, me.getID())
  [636] getlocal 2 .............................. <tSpr>
  [638] pushsymb 71 ............................. <#eventProcActiveObj>
  [640] getlocal 12 ............................. <tTargetID>
  [642] pushsymb 144 ............................ <#mouseDown>
  [644] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveObj, tTargetID, #mouseDown>
  [646] objcall 143 ............................. tSpr.registerProcedure(#eventProcActiveObj, tTargetID, #mouseDown)
  [648] getlocal 2 .............................. <tSpr>
  [650] pushsymb 63 ............................. <#eventProcActiveRollOver>
  [652] getlocal 12 ............................. <tTargetID>
  [654] pushsymb 178 ............................ <#mouseEnter>
  [656] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveRollOver, tTargetID, #mouseEnter>
  [658] objcall 143 ............................. tSpr.registerProcedure(#eventProcActiveRollOver, tTargetID, #mouseEnter)
  [660] getlocal 2 .............................. <tSpr>
  [662] pushsymb 63 ............................. <#eventProcActiveRollOver>
  [664] getlocal 12 ............................. <tTargetID>
  [666] pushsymb 179 ............................ <#mouseLeave>
  [668] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveRollOver, tTargetID, #mouseLeave>
  [670] objcall 143 ............................. tSpr.registerProcedure(#eventProcActiveRollOver, tTargetID, #mouseLeave)
  [672] getprop 994 ............................. <pLoczList>
  [675] getobjprop 149 .......................... <pLoczList.count>
  [677] getprop 993 ............................. <pSprList>
  [680] getobjprop 149 .......................... <pSprList.count>
  [682] lt ...................................... <pLoczList.count < pSprList.count>
  [683] jmpifz [696] ............................ if pLoczList.count < pSprList.count then
  [686] getprop 994 ............................. <pLoczList>
  [689] pusharglist 0 ........................... <[]>
  [691] pushlist ................................ <[]>
  [692] pusharglistnoret 2 ...................... <pLoczList, []>
  [694] objcall 151 ............................. pLoczList.add([])
  [696] getprop 995 ............................. <pLocShiftList>
  [699] getobjprop 149 .......................... <pLocShiftList.count>
  [701] getprop 993 ............................. <pSprList>
  [704] getobjprop 149 .......................... <pSprList.count>
  [706] lt ...................................... <pLocShiftList.count < pSprList.count>
  [707] jmpifz [720] ............................ if pLocShiftList.count < pSprList.count then
  [710] getprop 995 ............................. <pLocShiftList>
  [713] pusharglist 0 ........................... <[]>
  [715] pushlist ................................ <[]>
  [716] pusharglistnoret 2 ...................... <pLocShiftList, []>
  [718] objcall 151 ............................. pLocShiftList.add([])
  [720] pushzero ................................ <0>
  [721] setlocal 11
  [723] getlocal 11
  [725] pushint8 7 .............................. <7>
  [727] lteq
  [728] jmpifz [808] ............................ repeat with tdir = 0 to 7
  [731] getprop 994 ............................. <pLoczList>
  [734] pusharglist 1 ........................... <pLoczList>
  [736] objcall 1441 ............................ <pLoczList.getLast()>
  [739] getparam 0 .............................. <me>
  [741] getlocal 4 .............................. <i>
  [743] pusharglist 1 ........................... <i>
  [745] extcall 350 ............................. <numToChar(i)>
  [748] getlocal 11 ............................. <tdir>
  [750] getlocal 0 .............................. <tClass>
  [752] pusharglist 4 ........................... <me, numToChar(i), tdir, tClass>
  [754] objcall 1412 ............................ <me.solveLocZ(numToChar(i), tdir, tClass)>
  [757] pusharglist 1 ........................... <me.solveLocZ(numToChar(i), tdir, tClass)>
  [759] extcall 426 ............................. <integer(me.solveLocZ(numToChar(i), tdir, tClass))>
  [762] getlocal 6 .............................. <tLoczAdjust>
  [764] add ..................................... <integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust>
  [765] pusharglistnoret 2 ...................... <pLoczList.getLast(), integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust>
  [767] objcall 151 ............................. pLoczList.getLast().add(integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust)
  [769] getprop 995 ............................. <pLocShiftList>
  [772] pusharglist 1 ........................... <pLocShiftList>
  [774] objcall 1441 ............................ <pLocShiftList.getLast()>
  [777] getparam 0 .............................. <me>
  [779] getlocal 4 .............................. <i>
  [781] pusharglist 1 ........................... <i>
  [783] extcall 350 ............................. <numToChar(i)>
  [786] getlocal 11 ............................. <tdir>
  [788] getlocal 0 .............................. <tClass>
  [790] pusharglist 4 ........................... <me, numToChar(i), tdir, tClass>
  [792] objcall 1413 ............................ <me.solveLocShift(numToChar(i), tdir, tClass)>
  [795] pusharglistnoret 2 ...................... <pLocShiftList.getLast(), me.solveLocShift(numToChar(i), tdir, tClass)>
  [797] objcall 151 ............................. pLocShiftList.getLast().add(me.solveLocShift(numToChar(i), tdir, tClass))
  [799] pushint8 1
  [801] getlocal 11
  [803] add
  [804] setlocal 11
  [806] endrepeat [723]
  [808] getlocal 6 .............................. <tLoczAdjust>
  [810] pushint8 1 .............................. <1>
  [812] add ..................................... <tLoczAdjust + 1>
  [813] setlocal 6 .............................. tLoczAdjust = tLoczAdjust + 1
  [815] getlocal 2 .............................. <tSpr>
  [817] pusharglist 1 ........................... <tSpr>
  [819] extcall 253 ............................. <voidp(tSpr)>
  [821] not ..................................... <not voidp(tSpr)>
  [822] getlocal 2 .............................. <tSpr>
  [824] pushzero ................................ <0>
  [825] pusharglist 1 ........................... <0>
  [827] extcall 146 ............................. <sprite(0)>
  [829] nteq .................................... <tSpr <> sprite(0)>
  [830] and ..................................... <not voidp(tSpr) and (tSpr <> sprite(0))>
  [831] jmpifz [1033] ........................... if not voidp(tSpr) and (tSpr <> sprite(0)) then / else
  [834] getlocal 3 .............................. <tMemNum>
  [836] pushint8 1 .............................. <1>
  [838] lt ...................................... <tMemNum < 1>
  [839] jmpifz [867] ............................ if tMemNum < 1 then
  [842] getlocal 3 .............................. <tMemNum>
  [844] pusharglist 1 ........................... <tMemNum>
  [846] extcall 1035 ............................ <abs(tMemNum)>
  [849] setlocal 3 .............................. tMemNum = abs(tMemNum)
  [851] getlocal 2 .............................. <tSpr>
  [853] pushint16 180 ........................... <180>
  [856] setobjprop 1004 ......................... tSpr.rotation = 180
  [859] getlocal 2 .............................. <tSpr>
  [861] pushint16 180 ........................... <180>
  [864] setobjprop 1005 ......................... tSpr.skew = 180
  [867] getlocal 2 .............................. <tSpr>
  [869] getlocal 3 .............................. <tMemNum>
  [871] setobjprop 1036 ......................... tSpr.castNum = tMemNum
  [874] getlocal 2 .............................. <tSpr>
  [876] getlocal 3 .............................. <tMemNum>
  [878] pusharglist 1 ........................... <tMemNum>
  [880] extcall 263 ............................. <member(tMemNum)>
  [883] getobjprop 219 .......................... <member(tMemNum).width>
  [885] setobjprop 219 .......................... tSpr.width = member(tMemNum).width
  [887] getlocal 2 .............................. <tSpr>
  [889] getlocal 3 .............................. <tMemNum>
  [891] pusharglist 1 ........................... <tMemNum>
  [893] extcall 263 ............................. <member(tMemNum)>
  [896] getobjprop 261 .......................... <member(tMemNum).height>
  [899] setobjprop 261 .......................... tSpr.height = member(tMemNum).height
  [902] getlocal 2 .............................. <tSpr>
  [904] getparam 0 .............................. <me>
  [906] getlocal 4 .............................. <i>
  [908] pusharglist 1 ........................... <i>
  [910] extcall 350 ............................. <numToChar(i)>
  [913] getlocal 0 .............................. <tClass>
  [915] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [917] objcall 1410 ............................ <me.solveInk(numToChar(i), tClass)>
  [920] setobjprop 393 .......................... tSpr.ink = me.solveInk(numToChar(i), tClass)
  [923] getlocal 2 .............................. <tSpr>
  [925] getparam 0 .............................. <me>
  [927] getlocal 4 .............................. <i>
  [929] pusharglist 1 ........................... <i>
  [931] extcall 350 ............................. <numToChar(i)>
  [934] getlocal 0 .............................. <tClass>
  [936] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [938] objcall 1411 ............................ <me.solveBlend(numToChar(i), tClass)>
  [941] setobjprop 333 .......................... tSpr.blend = me.solveBlend(numToChar(i), tClass)
  [944] getlocal 5 .............................. <j>
  [946] getprop 1415 ............................ <pPartColors>
  [949] getobjprop 149 .......................... <pPartColors.count>
  [951] lteq .................................... <j <= pPartColors.count>
  [952] jmpifz [1030] ........................... if j <= pPartColors.count then
  [955] getprop 1415 ............................ <pPartColors>
  [958] getlocal 5 .............................. <j>
  [960] pusharglist 2 ........................... <pPartColors, j>
  [962] objcall 138 ............................. <pPartColors[j]>
  [964] pusharglist 1 ........................... <pPartColors[j]>
  [966] extcall 596 ............................. <string(pPartColors[j])>
  [969] pushsymb 425 ............................ <#char>
  [972] pushint8 1 .............................. <1>
  [974] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [976] objcall 134 ............................. <string(pPartColors[j]).char[1]>
  [978] pushcons 24 ............................. <"#">
  [980] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [981] jmpifz [1006] ........................... if string(pPartColors[j]).char[1] = "#" then / else
  [984] getlocal 2 .............................. <tSpr>
  [986] getprop 1415 ............................ <pPartColors>
  [989] getlocal 5 .............................. <j>
  [991] pusharglist 2 ........................... <pPartColors, j>
  [993] objcall 138 ............................. <pPartColors[j]>
  [995] pusharglist 1 ........................... <pPartColors[j]>
  [997] extcall 283 ............................. <rgb(pPartColors[j])>
  [1000] setobjprop 282 ......................... tSpr.bgColor = rgb(pPartColors[j])
  [1003] jmp [1030]
  [1006] getlocal 2 ............................. <tSpr>
  [1008] getprop 1415 ........................... <pPartColors>
  [1011] getlocal 5 ............................. <j>
  [1013] pusharglist 2 .......................... <pPartColors, j>
  [1015] objcall 138 ............................ <pPartColors[j]>
  [1017] pusharglist 1 .......................... <pPartColors[j]>
  [1019] extcall 426 ............................ <integer(pPartColors[j])>
  [1022] pusharglist 1 .......................... <integer(pPartColors[j])>
  [1024] extcall 1051 ........................... <paletteIndex(integer(pPartColors[j]))>
  [1027] setobjprop 282 ......................... tSpr.bgColor = paletteIndex(integer(pPartColors[j]))
  [1030] jmp [1048]
  [1033] getparam 0 ............................. <me>
  [1035] pushcons 25 ............................ <"Out of sprites!!!">
  [1037] pushsymb 1414 .......................... <#solveMembers>
  [1040] pusharglist 3 .......................... <me, "Out of sprites!!!", #solveMembers>
  [1042] extcall 123 ............................ <error(me, "Out of sprites!!!", #solveMembers)>
  [1044] pusharglistnoret 1 ..................... <error(me, "Out of sprites!!!", #solveMembers)>
  [1046] extcall 116 ............................ return error(me, "Out of sprites!!!", #solveMembers)
  [1048] getlocal 4 ............................. <i>
  [1050] pushint8 1 ............................. <1>
  [1052] add .................................... <i + 1>
  [1053] setlocal 4 ............................. i = i + 1
  [1055] getlocal 5 ............................. <j>
  [1057] pushint8 1 ............................. <1>
  [1059] add .................................... <j + 1>
  [1060] setlocal 5 ............................. j = j + 1
  [1062] endrepeat [177]
  [1065] getlocal 0 ............................. <tClass>
  [1067] pushcons 26 ............................ <"_sd">
  [1069] joinstr ................................ <tClass & "_sd">
  [1070] setlocal 13 ............................ tShadowName = tClass & "_sd"
  [1072] getprop 376 ............................ <pDirection>
  [1075] pusharglist 1 .......................... <pDirection>
  [1077] extcall 258 ............................ <listp(pDirection)>
  [1080] jmpifz [1100] .......................... if listp(pDirection) then
  [1083] getlocal 13 ............................ <tShadowName>
  [1085] pushcons 18 ............................ <"_">
  [1087] joinstr ................................ <tShadowName & "_">
  [1088] getprop 376 ............................ <pDirection>
  [1091] pushint8 1 ............................. <1>
  [1093] pusharglist 2 .......................... <pDirection, 1>
  [1095] objcall 138 ............................ <pDirection[1]>
  [1097] joinstr ................................ <tShadowName & "_" & pDirection[1]>
  [1098] setlocal 13 ............................ tShadowName = tShadowName & "_" & pDirection[1]
  [1100] getlocal 13 ............................ <tShadowName>
  [1102] pusharglist 1 .......................... <tShadowName>
  [1104] extcall 330 ............................ <getmemnum(tShadowName)>
  [1107] setlocal 14 ............................ tShadowNum = getmemnum(tShadowName)
  [1109] getlocal 14 ............................ <tShadowNum>
  [1111] not .................................... <not tShadowNum>
  [1112] getprop 376 ............................ <pDirection>
  [1115] pusharglist 1 .......................... <pDirection>
  [1117] extcall 258 ............................ <listp(pDirection)>
  [1120] and .................................... <not tShadowNum and listp(pDirection)>
  [1121] jmpifz [1136] .......................... if not tShadowNum and listp(pDirection) then
  [1124] getlocal 0 ............................. <tClass>
  [1126] pushcons 26 ............................ <"_sd">
  [1128] joinstr ................................ <tClass & "_sd">
  [1129] pusharglist 1 .......................... <tClass & "_sd">
  [1131] extcall 330 ............................ <getmemnum(tClass & "_sd")>
  [1134] setlocal 14 ............................ tShadowNum = getmemnum(tClass & "_sd")
  [1136] pushsymb 931 ........................... <#room>
  [1139] pusharglist 1 .......................... <#room>
  [1141] extcall 224 ............................ <threadExists(#room)>
  [1143] jmpifz [1175] .......................... if threadExists(#room) then / else
  [1146] pushsymb 931 ........................... <#room>
  [1149] pusharglist 1 .......................... <#room>
  [1151] extcall 227 ............................ <getThread(#room)>
  [1153] setlocal 15 ............................ tRoomThread = getThread(#room)
  [1155] getlocal 15 ............................ <tRoomThread>
  [1157] pusharglist 1 .......................... <tRoomThread>
  [1159] objcall 173 ............................ <tRoomThread.getComponent()>
  [1161] setlocal 16 ............................ tComponent = tRoomThread.getComponent()
  [1163] getlocal 16 ............................ <tComponent>
  [1165] pusharglist 1 .......................... <tComponent>
  [1167] objcall 493 ............................ <tComponent.getShadowManager()>
  [1170] setlocal 17 ............................ tShadowManager = tComponent.getShadowManager()
  [1172] jmp [1180]
  [1175] pushzero ............................... <0>
  [1176] pusharglistnoret 1 ..................... <0>
  [1178] extcall 116 ............................ return 0
  [1180] getparam 0 ............................. <me>
  [1182] pusharglist 1 .......................... <me>
  [1184] objcall 115 ............................ <me.getID()>
  [1186] setlocal 18 ............................ tid = me.getID()
  [1188] pushsymb 200 ........................... <#session>
  [1190] pusharglist 1 .......................... <#session>
  [1192] extcall 112 ............................ <getObject(#session)>
  [1194] pushcons 27 ............................ <"lastroom">
  [1196] pusharglist 2 .......................... <getObject(#session), "lastroom">
  [1198] objcall 201 ............................ <getObject(#session).get("lastroom")>
  [1200] pushsymb 184 ........................... <#type>
  [1202] pusharglist 2 .......................... <getObject(#session).get("lastroom"), #type>
  [1204] objcall 138 ............................ <getObject(#session).get("lastroom")[#type]>
  [1206] setlocal 19 ............................ tRoomType = getObject(#session).get("lastroom")[#type]
  [1208] getlocal 19 ............................ <tRoomType>
  [1210] pushsymb 185 ........................... <#private>
  [1212] nteq ................................... <tRoomType <> #private>
  [1213] jmpifz [1429] .......................... if tRoomType <> #private then / else
  [1216] getlocal 14 ............................ <tShadowNum>
  [1218] pushzero ............................... <0>
  [1219] nteq ................................... <tShadowNum <> 0>
  [1220] jmpifz [1426] .......................... if tShadowNum <> 0 then
  [1223] getlocal 18 ............................ <tid>
  [1225] pusharglist 1 .......................... <tid>
  [1227] extcall 328 ............................ <reserveSprite(tid)>
  [1230] pusharglist 1 .......................... <reserveSprite(tid)>
  [1232] extcall 146 ............................ <sprite(reserveSprite(tid))>
  [1234] setlocal 2 ............................. tSpr = sprite(reserveSprite(tid))
  [1236] getprop 993 ............................ <pSprList>
  [1239] getlocal 2 ............................. <tSpr>
  [1241] pusharglistnoret 2 ..................... <pSprList, tSpr>
  [1243] objcall 151 ............................ pSprList.add(tSpr)
  [1245] getprop 994 ............................ <pLoczList>
  [1248] pushint16 4000 ......................... <4000>
  [1251] inv .................................... <-4000>
  [1252] pushint16 4000 ......................... <4000>
  [1255] inv .................................... <-4000>
  [1256] pushint16 4000 ......................... <4000>
  [1259] inv .................................... <-4000>
  [1260] pushint16 4000 ......................... <4000>
  [1263] inv .................................... <-4000>
  [1264] pushint16 4000 ......................... <4000>
  [1267] inv .................................... <-4000>
  [1268] pushint16 4000 ......................... <4000>
  [1271] inv .................................... <-4000>
  [1272] pushint16 4000 ......................... <4000>
  [1275] inv .................................... <-4000>
  [1276] pusharglist 7 .......................... <[-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1278] pushlist ............................... <[-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1279] pusharglistnoret 2 ..................... <pLoczList, [-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1281] objcall 151 ............................ pLoczList.add([-4000, -4000, -4000, -4000, -4000, -4000, -4000])
  [1283] getprop 995 ............................ <pLocShiftList>
  [1286] pushzero ............................... <0>
  [1287] pushzero ............................... <0>
  [1288] pushzero ............................... <0>
  [1289] pushzero ............................... <0>
  [1290] pushzero ............................... <0>
  [1291] pushzero ............................... <0>
  [1292] pushzero ............................... <0>
  [1293] pushzero ............................... <0>
  [1294] pusharglist 8 .......................... <[0, 0, 0, 0, 0, 0, 0, 0]>
  [1296] pushlist ............................... <[0, 0, 0, 0, 0, 0, 0, 0]>
  [1297] pusharglistnoret 2 ..................... <pLocShiftList, [0, 0, 0, 0, 0, 0, 0, 0]>
  [1299] objcall 151 ............................ pLocShiftList.add([0, 0, 0, 0, 0, 0, 0, 0])
  [1301] getlocal 14 ............................ <tShadowNum>
  [1303] pushzero ............................... <0>
  [1304] lt ..................................... <tShadowNum < 0>
  [1305] jmpifz [1345] .......................... if tShadowNum < 0 then
  [1308] getlocal 14 ............................ <tShadowNum>
  [1310] pusharglist 1 .......................... <tShadowNum>
  [1312] extcall 1035 ........................... <abs(tShadowNum)>
  [1315] setlocal 14 ............................ tShadowNum = abs(tShadowNum)
  [1317] getlocal 2 ............................. <tSpr>
  [1319] pushint16 180 .......................... <180>
  [1322] setobjprop 1004 ........................ tSpr.rotation = 180
  [1325] getlocal 2 ............................. <tSpr>
  [1327] pushint16 180 .......................... <180>
  [1330] setobjprop 1005 ........................ tSpr.skew = 180
  [1333] getlocal 2 ............................. <tSpr>
  [1335] getlocal 2 ............................. <tSpr>
  [1337] getobjprop 222 ......................... <tSpr.locH>
  [1339] getprop 959 ............................ <pXFactor>
  [1342] add .................................... <tSpr.locH + pXFactor>
  [1343] setobjprop 222 ......................... tSpr.locH = tSpr.locH + pXFactor
  [1345] getlocal 2 ............................. <tSpr>
  [1347] getlocal 14 ............................ <tShadowNum>
  [1349] setobjprop 1036 ........................ tSpr.castNum = tShadowNum
  [1352] getlocal 2 ............................. <tSpr>
  [1354] getlocal 14 ............................ <tShadowNum>
  [1356] pusharglist 1 .......................... <tShadowNum>
  [1358] extcall 263 ............................ <member(tShadowNum)>
  [1361] getobjprop 219 ......................... <member(tShadowNum).width>
  [1363] setobjprop 219 ......................... tSpr.width = member(tShadowNum).width
  [1365] getlocal 2 ............................. <tSpr>
  [1367] getlocal 14 ............................ <tShadowNum>
  [1369] pusharglist 1 .......................... <tShadowNum>
  [1371] extcall 263 ............................ <member(tShadowNum)>
  [1374] getobjprop 261 ......................... <member(tShadowNum).height>
  [1377] setobjprop 261 ......................... tSpr.height = member(tShadowNum).height
  [1380] getlocal 2 ............................. <tSpr>
  [1382] getparam 0 ............................. <me>
  [1384] pushcons 28 ............................ <"sd">
  [1386] pusharglist 2 .......................... <me, "sd">
  [1388] objcall 1410 ........................... <me.solveInk("sd")>
  [1391] setobjprop 393 ......................... tSpr.ink = me.solveInk("sd")
  [1394] getlocal 2 ............................. <tSpr>
  [1396] getparam 0 ............................. <me>
  [1398] pushcons 28 ............................ <"sd">
  [1400] pusharglist 2 .......................... <me, "sd">
  [1402] objcall 1411 ........................... <me.solveBlend("sd")>
  [1405] setobjprop 333 ......................... tSpr.blend = me.solveBlend("sd")
  [1408] getlocal 2 ............................. <tSpr>
  [1410] getobjprop 333 ......................... <tSpr.blend>
  [1413] pushint8 100 ........................... <100>
  [1415] eq ..................................... <tSpr.blend = 100>
  [1416] jmpifz [1426] .......................... if tSpr.blend = 100 then
  [1419] getlocal 2 ............................. <tSpr>
  [1421] pushint8 20 ............................ <20>
  [1423] setobjprop 333 ......................... tSpr.blend = 20
  [1426] jmp [1664]
  [1429] getlocal 17 ............................ <tShadowManager>
  [1431] pusharglist 1 .......................... <tShadowManager>
  [1433] extcall 253 ............................ <voidp(tShadowManager)>
  [1435] jmpifz [1443] .......................... if voidp(tShadowManager) then
  [1438] pushzero ............................... <0>
  [1439] pusharglistnoret 1 ..................... <0>
  [1441] extcall 116 ............................ return 0
  [1443] getlocal 17 ............................ <tShadowManager>
  [1445] getlocal 18 ............................ <tid>
  [1447] pusharglistnoret 2 ..................... <tShadowManager, tid>
  [1449] objcall 1418 ........................... tShadowManager.removeShadow(tid)
  [1452] getlocal 14 ............................ <tShadowNum>
  [1454] pushzero ............................... <0>
  [1455] nteq ................................... <tShadowNum <> 0>
  [1456] getprop 469 ............................ <pLocH>
  [1459] getprop 469 ............................ <pLocH>
  [1462] pusharglist 1 .......................... <pLocH>
  [1464] extcall 426 ............................ <integer(pLocH)>
  [1467] eq ..................................... <pLocH = integer(pLocH)>
  [1468] and .................................... <(tShadowNum <> 0) and (pLocH = integer(pLocH))>
  [1469] jmpifz [1664] .......................... if (tShadowNum <> 0) and (pLocH = integer(pLocH)) then
  [1472] pusharglist 0 .......................... <[:]>
  [1474] pushproplist ........................... <[:]>
  [1475] setlocal 20 ............................ tProps = [:]
  [1477] getlocal 15 ............................ <tRoomThread>
  [1479] pusharglist 1 .......................... <tRoomThread>
  [1481] objcall 570 ............................ <tRoomThread.getInterface()>
  [1484] pusharglist 1 .......................... <tRoomThread.getInterface()>
  [1486] objcall 29 ............................. <tRoomThread.getInterface().getGeometry()>
  [1488] getprop 465 ............................ <pLocX>
  [1491] getprop 467 ............................ <pLocY>
  [1494] getprop 469 ............................ <pLocH>
  [1497] pusharglist 4 .......................... <tRoomThread.getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [1499] objcall 949 ............................ <tRoomThread.getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [1502] setlocal 21 ............................ tScreenLocs = tRoomThread.getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [1504] getlocal 14 ............................ <tShadowNum>
  [1506] pusharglist 1 .......................... <tShadowNum>
  [1508] extcall 263 ............................ <member(tShadowNum)>
  [1511] setlocal 22 ............................ tmember = member(tShadowNum)
  [1513] getlocal 14 ............................ <tShadowNum>
  [1515] pushzero ............................... <0>
  [1516] lt ..................................... <tShadowNum < 0>
  [1517] jmpifz [1560] .......................... if tShadowNum < 0 then
  [1520] getlocal 14 ............................ <tShadowNum>
  [1522] pusharglist 1 .......................... <tShadowNum>
  [1524] extcall 1035 ........................... <abs(tShadowNum)>
  [1527] setlocal 14 ............................ tShadowNum = abs(tShadowNum)
  [1529] getlocal 14 ............................ <tShadowNum>
  [1531] pusharglist 1 .......................... <tShadowNum>
  [1533] extcall 263 ............................ <member(tShadowNum)>
  [1536] setlocal 22 ............................ tmember = member(tShadowNum)
  [1538] getlocal 20 ............................ <tProps>
  [1540] pushsymb 1442 .......................... <#multiflip>
  [1543] pushint8 1 ............................. <1>
  [1545] pusharglistnoret 3 ..................... <tProps, #multiflip, 1>
  [1547] objcall 136 ............................ tProps[#multiflip] = 1
  [1549] getlocal 20 ............................ <tProps>
  [1551] pushsymb 137 ........................... <#offsetx>
  [1553] getprop 959 ............................ <pXFactor>
  [1556] pusharglistnoret 3 ..................... <tProps, #offsetx, pXFactor>
  [1558] objcall 136 ............................ tProps[#offsetx] = pXFactor
  [1560] getlocal 20 ............................ <tProps>
  [1562] pushsymb 263 ........................... <#member>
  [1565] getlocal 14 ............................ <tShadowNum>
  [1567] pusharglist 1 .......................... <tShadowNum>
  [1569] extcall 263 ............................ <member(tShadowNum)>
  [1572] getobjprop 187 ......................... <member(tShadowNum).name>
  [1574] pusharglistnoret 3 ..................... <tProps, #member, member(tShadowNum).name>
  [1576] objcall 136 ............................ tProps[#member] = member(tShadowNum).name
  [1578] getlocal 20 ............................ <tProps>
  [1580] pushsymb 222 ........................... <#locH>
  [1582] getlocal 21 ............................ <tScreenLocs>
  [1584] pushint8 1 ............................. <1>
  [1586] pusharglist 2 .......................... <tScreenLocs, 1>
  [1588] objcall 138 ............................ <tScreenLocs[1]>
  [1590] pusharglistnoret 3 ..................... <tProps, #locH, tScreenLocs[1]>
  [1592] objcall 136 ............................ tProps[#locH] = tScreenLocs[1]
  [1594] getlocal 20 ............................ <tProps>
  [1596] pushsymb 471 ........................... <#locV>
  [1599] getlocal 21 ............................ <tScreenLocs>
  [1601] pushint8 2 ............................. <2>
  [1603] pusharglist 2 .......................... <tScreenLocs, 2>
  [1605] objcall 138 ............................ <tScreenLocs[2]>
  [1607] pusharglistnoret 3 ..................... <tProps, #locV, tScreenLocs[2]>
  [1609] objcall 136 ............................ tProps[#locV] = tScreenLocs[2]
  [1611] getlocal 20 ............................ <tProps>
  [1613] pushsymb 219 ........................... <#width>
  [1615] getlocal 22 ............................ <tmember>
  [1617] getobjprop 219 ......................... <tmember.width>
  [1619] pusharglistnoret 3 ..................... <tProps, #width, tmember.width>
  [1621] objcall 136 ............................ tProps[#width] = tmember.width
  [1623] getlocal 20 ............................ <tProps>
  [1625] pushsymb 261 ........................... <#height>
  [1628] getlocal 22 ............................ <tmember>
  [1630] getobjprop 261 ......................... <tmember.height>
  [1633] pusharglistnoret 3 ..................... <tProps, #height, tmember.height>
  [1635] objcall 136 ............................ tProps[#height] = tmember.height
  [1637] getlocal 20 ............................ <tProps>
  [1639] pushsymb 359 ........................... <#id>
  [1642] getlocal 18 ............................ <tid>
  [1644] pusharglistnoret 3 ..................... <tProps, #id, tid>
  [1646] objcall 136 ............................ tProps[#id] = tid
  [1648] getlocal 17 ............................ <tShadowManager>
  [1650] getlocal 20 ............................ <tProps>
  [1652] pusharglistnoret 2 ..................... <tShadowManager, tProps>
  [1654] objcall 1443 ........................... tShadowManager.addShadow(tProps)
  [1657] getlocal 17 ............................ <tShadowManager>
  [1659] pusharglistnoret 1 ..................... <tShadowManager>
  [1661] objcall 647 ............................ tShadowManager.render()
  [1664] getprop 993 ............................ <pSprList>
  [1667] getobjprop 149 ......................... <pSprList.count>
  [1669] pushzero ............................... <0>
  [1670] gt ..................................... <pSprList.count > 0>
  [1671] jmpifz [1683] .......................... if pSprList.count > 0 then / else
  [1674] pushint8 1 ............................. <1>
  [1676] pusharglistnoret 1 ..................... <1>
  [1678] extcall 116 ............................ return 1
  [1680] jmp [1701]
  [1683] getparam 0 ............................. <me>
  [1685] pushcons 21 ............................ <"Couldn't define members:">
  [1687] getlocal 0 ............................. <tClass>
  [1689] joinpadstr ............................. <"Couldn't define members:" && tClass>
  [1690] pushsymb 1414 .......................... <#solveMembers>
  [1693] pusharglist 3 .......................... <me, "Couldn't define members:" && tClass, #solveMembers>
  [1695] extcall 123 ............................ <error(me, "Couldn't define members:" && tClass, #solveMembers)>
  [1697] pusharglistnoret 1 ..................... <error(me, "Couldn't define members:" && tClass, #solveMembers)>
  [1699] extcall 116 ............................ return error(me, "Couldn't define members:" && tClass, #solveMembers)
  [1701] ret
end

on updateLocation me
  [  0] pushsymb 931 ............................ <#room>
  [  3] pusharglist 1 ........................... <#room>
  [  5] extcall 227 ............................. <getThread(#room)>
  [  7] pusharglist 1 ........................... <getThread(#room)>
  [  9] objcall 570 ............................. <getThread(#room).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 14] objcall 29 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 16] getprop 465 ............................. <pLocX>
  [ 19] getprop 467 ............................. <pLocY>
  [ 22] getprop 469 ............................. <pLocH>
  [ 25] pusharglist 4 ........................... <getThread(#room).getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [ 27] objcall 949 ............................. <getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 30] setlocal 0 .............................. tScreenLocs = getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 32] pushzero ................................ <0>
  [ 33] setlocal 1 .............................. i = 0
  [ 35] getprop 993 ............................. <pSprList>
  [ 38] peek 0
  [ 40] pusharglist 1
  [ 42] extcall 149
  [ 44] pushint8 1
  [ 46] peek 0
  [ 48] peek 2
  [ 50] lteq
  [ 51] jmpifz [307] ............................ repeat with tSpr in pSprList
  [ 54] peek 2
  [ 56] peek 1
  [ 58] pusharglist 2
  [ 60] extcall 138
  [ 62] setlocal 2
  [ 64] getlocal 1 .............................. <i>
  [ 66] pushint8 1 .............................. <1>
  [ 68] add ..................................... <i + 1>
  [ 69] setlocal 1 .............................. i = i + 1
  [ 71] getlocal 2 .............................. <tSpr>
  [ 73] getlocal 0 .............................. <tScreenLocs>
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 79] objcall 138 ............................. <tScreenLocs[1]>
  [ 81] setobjprop 222 .......................... tSpr.locH = tScreenLocs[1]
  [ 83] getlocal 2 .............................. <tSpr>
  [ 85] getlocal 0 .............................. <tScreenLocs>
  [ 87] pushint8 2 .............................. <2>
  [ 89] pusharglist 2 ........................... <tScreenLocs, 2>
  [ 91] objcall 138 ............................. <tScreenLocs[2]>
  [ 93] setobjprop 471 .......................... tSpr.locV = tScreenLocs[2]
  [ 96] getlocal 2 .............................. <tSpr>
  [ 98] getobjprop 1004 ......................... <tSpr.rotation>
  [101] pushint16 180 ........................... <180>
  [104] eq ...................................... <tSpr.rotation = 180>
  [105] jmpifz [120] ............................ if tSpr.rotation = 180 then
  [108] getlocal 2 .............................. <tSpr>
  [110] getlocal 2 .............................. <tSpr>
  [112] getobjprop 222 .......................... <tSpr.locH>
  [114] getprop 959 ............................. <pXFactor>
  [117] add ..................................... <tSpr.locH + pXFactor>
  [118] setobjprop 222 .......................... tSpr.locH = tSpr.locH + pXFactor
  [120] getprop 376 ............................. <pDirection>
  [123] pushint8 1 .............................. <1>
  [125] pusharglist 2 ........................... <pDirection, 1>
  [127] objcall 138 ............................. <pDirection[1]>
  [129] pushzero ................................ <0>
  [130] lt ...................................... <pDirection[1] < 0>
  [131] jmpifz [144] ............................ if pDirection[1] < 0 then
  [134] getprop 376 ............................. <pDirection>
  [137] pushint8 1 .............................. <1>
  [139] pushzero ................................ <0>
  [140] pusharglistnoret 3 ...................... <pDirection, 1, 0>
  [142] objcall 136 ............................. pDirection[1] = 0
  [144] getprop 376 ............................. <pDirection>
  [147] pushint8 1 .............................. <1>
  [149] pusharglist 2 ........................... <pDirection, 1>
  [151] objcall 138 ............................. <pDirection[1]>
  [153] pushint8 1 .............................. <1>
  [155] add ..................................... <pDirection[1] + 1>
  [156] getprop 995 ............................. <pLocShiftList>
  [159] getlocal 1 .............................. <i>
  [161] pusharglist 2 ........................... <pLocShiftList, i>
  [163] objcall 138 ............................. <pLocShiftList[i]>
  [165] getobjprop 149 .......................... <pLocShiftList[i].count>
  [167] gt ...................................... <(pDirection[1] + 1) > pLocShiftList[i].count>
  [168] jmpifz [181] ............................ if (pDirection[1] + 1) > pLocShiftList[i].count then
  [171] getprop 376 ............................. <pDirection>
  [174] pushint8 1 .............................. <1>
  [176] pushzero ................................ <0>
  [177] pusharglistnoret 3 ...................... <pDirection, 1, 0>
  [179] objcall 136 ............................. pDirection[1] = 0
  [181] getprop 995 ............................. <pLocShiftList>
  [184] getlocal 1 .............................. <i>
  [186] pusharglist 2 ........................... <pLocShiftList, i>
  [188] objcall 138 ............................. <pLocShiftList[i]>
  [190] getprop 376 ............................. <pDirection>
  [193] pushint8 1 .............................. <1>
  [195] pusharglist 2 ........................... <pDirection, 1>
  [197] objcall 138 ............................. <pDirection[1]>
  [199] pushint8 1 .............................. <1>
  [201] add ..................................... <pDirection[1] + 1>
  [202] pusharglist 2 ........................... <pLocShiftList[i], pDirection[1] + 1>
  [204] objcall 138 ............................. <pLocShiftList[i][pDirection[1] + 1]>
  [206] setlocal 3 .............................. tLocShift = pLocShiftList[i][pDirection[1] + 1]
  [208] getlocal 2 .............................. <tSpr>
  [210] getlocal 2 .............................. <tSpr>
  [212] getobjprop 332 .......................... <tSpr.loc>
  [215] getlocal 3 .............................. <tLocShift>
  [217] add ..................................... <tSpr.loc + tLocShift>
  [218] setobjprop 332 .......................... tSpr.loc = tSpr.loc + tLocShift
  [221] getprop 994 ............................. <pLoczList>
  [224] getlocal 1 .............................. <i>
  [226] pusharglist 2 ........................... <pLoczList, i>
  [228] objcall 138 ............................. <pLoczList[i]>
  [230] getprop 376 ............................. <pDirection>
  [233] pushint8 1 .............................. <1>
  [235] pusharglist 2 ........................... <pDirection, 1>
  [237] objcall 138 ............................. <pDirection[1]>
  [239] pushint8 1 .............................. <1>
  [241] add ..................................... <pDirection[1] + 1>
  [242] pusharglist 2 ........................... <pLoczList[i], pDirection[1] + 1>
  [244] objcall 138 ............................. <pLoczList[i][pDirection[1] + 1]>
  [246] setlocal 4 .............................. tZ = pLoczList[i][pDirection[1] + 1]
  [248] getprop 1242 ............................ <pCorrectLocZ>
  [251] jmpifz [283] ............................ if pCorrectLocZ then
  [254] getlocal 2 .............................. <tSpr>
  [256] getlocal 0 .............................. <tScreenLocs>
  [258] pushint8 3 .............................. <3>
  [260] pusharglist 2 ........................... <tScreenLocs, 3>
  [262] objcall 138 ............................. <tScreenLocs[3]>
  [264] getprop 469 ............................. <pLocH>
  [267] pushint16 1000 .......................... <1000>
  [270] mul ..................................... <pLocH * 1000>
  [271] add ..................................... <tScreenLocs[3] + (pLocH * 1000)>
  [272] getlocal 4 .............................. <tZ>
  [274] add ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ>
  [275] pushint8 1 .............................. <1>
  [277] sub ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ - 1>
  [278] setobjprop 130 .......................... tSpr.locZ = tScreenLocs[3] + (pLocH * 1000) + tZ - 1
  [280] jmp [301] ............................... next repeat
  [283] getlocal 2 .............................. <tSpr>
  [285] getlocal 0 .............................. <tScreenLocs>
  [287] pushint8 3 .............................. <3>
  [289] pusharglist 2 ........................... <tScreenLocs, 3>
  [291] objcall 138 ............................. <tScreenLocs[3]>
  [293] getlocal 4 .............................. <tZ>
  [295] add ..................................... <tScreenLocs[3] + tZ>
  [296] pushint8 1 .............................. <1>
  [298] sub ..................................... <tScreenLocs[3] + tZ - 1>
  [299] setobjprop 130 .......................... tSpr.locZ = tScreenLocs[3] + tZ - 1
  [301] pushint8 1
  [303] add
  [304] endrepeat [ 46]
  [307] pop 3
  [309] getparam 0 .............................. <me>
  [311] getprop 993 ............................. <pSprList>
  [314] pusharglistnoret 2 ...................... <me, pSprList>
  [316] objcall 1046 ............................ me.relocate(pSprList)
  [319] ret
end
