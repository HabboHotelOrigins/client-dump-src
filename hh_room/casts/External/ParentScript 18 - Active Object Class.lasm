property pClass, pName, pCustom, pSprList, pDirection, pDimensions, pLoczList, pLocShiftList, pPartColors, pAnimFrame, pLocX, pLocY, pLocH, pAltitude, pXFactor, pCorrectLocZ, pSmallMember, pGeometry, pStartloc, pDestLoc, pSlideStartTime, pSlideEndTime, pSlideTimePerTile

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 1269 ............................ pClass = EMPTY
  [  5] pushcons 0 .............................. <EMPTY>
  [  7] setprop 1221 ............................ pName = EMPTY
  [ 10] pushcons 0 .............................. <EMPTY>
  [ 12] setprop 1270 ............................ pCustom = EMPTY
  [ 15] pusharglist 0 ........................... <[]>
  [ 17] pushlist ................................ <[]>
  [ 18] setprop 15 .............................. pSprList = []
  [ 20] pusharglist 0 ........................... <[]>
  [ 22] pushlist ................................ <[]>
  [ 23] setprop 34 .............................. pDirection = []
  [ 25] pusharglist 0 ........................... <[]>
  [ 27] pushlist ................................ <[]>
  [ 28] setprop 402 ............................. pDimensions = []
  [ 31] pusharglist 0 ........................... <[]>
  [ 33] pushlist ................................ <[]>
  [ 34] setprop 1011 ............................ pLoczList = []
  [ 37] pusharglist 0 ........................... <[]>
  [ 39] pushlist ................................ <[]>
  [ 40] setprop 1012 ............................ pLocShiftList = []
  [ 43] pusharglist 0 ........................... <[]>
  [ 45] pushlist ................................ <[]>
  [ 46] setprop 1428 ............................ pPartColors = []
  [ 49] pushzero ................................ <0>
  [ 50] setprop 6 ............................... pAnimFrame = 0
  [ 52] pushzero ................................ <0>
  [ 53] setprop 494 ............................. pLocX = 0
  [ 56] pushzero ................................ <0>
  [ 57] setprop 496 ............................. pLocY = 0
  [ 60] pushzero ................................ <0>
  [ 61] setprop 498 ............................. pLocH = 0
  [ 64] pushfloat32 0.0 ......................... <0.0>
  [ 69] setprop 1429 ............................ pAltitude = 0.0
  [ 72] pushsymb 949 ............................ <#room>
  [ 75] pusharglist 1 ........................... <#room>
  [ 77] extcall 260 ............................. <getThread(#room)>
  [ 80] pusharglist 1 ........................... <getThread(#room)>
  [ 82] objcall 597 ............................. <getThread(#room).getInterface()>
  [ 85] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 87] objcall 69 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 89] getobjprop 977 .......................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [ 92] setprop 977 ............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [ 95] getprop 977 ............................. <pXFactor>
  [ 98] pushint8 32 ............................. <32>
  [100] eq ...................................... <pXFactor = 32>
  [101] jmpifz [111] ............................ if pXFactor = 32 then / else
  [104] pushzero ................................ <0>
  [105] setprop 1257 ............................ pCorrectLocZ = 0
  [108] jmp [116]
  [111] pushint8 1 .............................. <1>
  [113] setprop 1257 ............................ pCorrectLocZ = 1
  [116] pushint16 500 ........................... <500>
  [119] setprop 1430 ............................ pSlideTimePerTile = 500
  [122] pushint8 1 .............................. <1>
  [124] pusharglistnoret 1 ...................... <1>
  [126] extcall 21 .............................. return 1
  [128] ret
end

on deconstruct me
  [  0] getprop 15 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 14
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 42] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 9
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 18 ........................... <tSpr.spriteNum>
  [ 32] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 34] extcall 367 ............................. releaseSprite(tSpr.spriteNum)
  [ 37] pushint8 1
  [ 39] add
  [ 40] endrepeat [ 10]
  [ 42] pop 3
  [ 44] pushsymb 949 ............................ <#room>
  [ 47] pusharglist 1 ........................... <#room>
  [ 49] extcall 257 ............................. <threadExists(#room)>
  [ 52] jmpifz [108] ............................ if threadExists(#room) then
  [ 55] pushsymb 949 ............................ <#room>
  [ 58] pusharglist 1 ........................... <#room>
  [ 60] extcall 260 ............................. <getThread(#room)>
  [ 63] setlocal 1 .............................. tRoomThread = getThread(#room)
  [ 65] getlocal 1 .............................. <tRoomThread>
  [ 67] pusharglist 1 ........................... <tRoomThread>
  [ 69] objcall 207 ............................. <tRoomThread.getComponent()>
  [ 71] setlocal 2 .............................. tComponent = tRoomThread.getComponent()
  [ 73] getlocal 2 .............................. <tComponent>
  [ 75] pusharglist 1 ........................... <tComponent>
  [ 77] objcall 521 ............................. <tComponent.getShadowManager()>
  [ 80] setlocal 3 .............................. tShadowManager = tComponent.getShadowManager()
  [ 82] getlocal 3 .............................. <tShadowManager>
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglist 1 ........................... <me>
  [ 88] objcall 156 ............................. <me.getID()>
  [ 90] pusharglistnoret 2 ...................... <tShadowManager, me.getID()>
  [ 92] objcall 1431 ............................ tShadowManager.removeShadow(me.getID())
  [ 95] getlocal 2 .............................. <tComponent>
  [ 97] getparam 0 .............................. <me>
  [ 99] pusharglist 1 ........................... <me>
  [101] objcall 156 ............................. <me.getID()>
  [103] pusharglistnoret 2 ...................... <tComponent, me.getID()>
  [105] objcall 525 ............................. tComponent.removeSlideObject(me.getID())
  [108] pusharglist 0 ........................... <[]>
  [110] pushlist ................................ <[]>
  [111] setprop 15 .............................. pSprList = []
  [113] pushint8 1 .............................. <1>
  [115] pusharglistnoret 1 ...................... <1>
  [117] extcall 21 .............................. return 1
  [119] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 492 ............................ <#class>
  [  5] pusharglist 2 ........................... <tdata, #class>
  [  7] objcall 9 ............................... <tdata[#class]>
  [  9] setprop 1269 ............................ pClass = tdata[#class]
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 792 ............................ <#direction>
  [ 17] pusharglist 2 ........................... <tdata, #direction>
  [ 19] objcall 9 ............................... <tdata[#direction]>
  [ 21] setprop 34 .............................. pDirection = tdata[#direction]
  [ 23] getparam 1 .............................. <tdata>
  [ 25] pushsymb 818 ............................ <#dimensions>
  [ 28] pusharglist 2 ........................... <tdata, #dimensions>
  [ 30] objcall 9 ............................... <tdata[#dimensions]>
  [ 32] setprop 402 ............................. pDimensions = tdata[#dimensions]
  [ 35] getparam 1 .............................. <tdata>
  [ 37] pushsymb 822 ............................ <#altitude>
  [ 40] pusharglist 2 ........................... <tdata, #altitude>
  [ 42] objcall 9 ............................... <tdata[#altitude]>
  [ 44] setprop 1429 ............................ pAltitude = tdata[#altitude]
  [ 47] getparam 1 .............................. <tdata>
  [ 49] pushsymb 493 ............................ <#x>
  [ 52] pusharglist 2 ........................... <tdata, #x>
  [ 54] objcall 9 ............................... <tdata[#x]>
  [ 56] setprop 494 ............................. pLocX = tdata[#x]
  [ 59] getparam 1 .............................. <tdata>
  [ 61] pushsymb 495 ............................ <#y>
  [ 64] pusharglist 2 ........................... <tdata, #y>
  [ 66] objcall 9 ............................... <tdata[#y]>
  [ 68] setprop 496 ............................. pLocY = tdata[#y]
  [ 71] getprop 1429 ............................ <pAltitude>
  [ 74] setprop 498 ............................. pLocH = pAltitude
  [ 77] getparam 0 .............................. <me>
  [ 79] getparam 1 .............................. <tdata>
  [ 81] pushsymb 823 ............................ <#colors>
  [ 84] pusharglist 2 ........................... <tdata, #colors>
  [ 86] objcall 9 ............................... <tdata[#colors]>
  [ 88] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [ 90] objcall 1422 ............................ me.solveColors(tdata[#colors])
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglist 1 ........................... <me>
  [ 97] objcall 1427 ............................ <me.solveMembers()>
  [100] pushzero ................................ <0>
  [101] eq ...................................... <me.solveMembers() = 0>
  [102] jmpifz [110] ............................ if me.solveMembers() = 0 then
  [105] pushzero ................................ <0>
  [106] pusharglistnoret 1 ...................... <0>
  [108] extcall 21 .............................. return 0
  [110] getparam 0 .............................. <me>
  [112] getparam 1 .............................. <tdata>
  [114] pushsymb 824 ............................ <#props>
  [117] pusharglist 2 ........................... <tdata, #props>
  [119] objcall 9 ............................... <tdata[#props]>
  [121] pusharglist 2 ........................... <me, tdata[#props]>
  [123] objcall 0 ............................... <me.prepare(tdata[#props])>
  [125] pushzero ................................ <0>
  [126] eq ...................................... <me.prepare(tdata[#props]) = 0>
  [127] jmpifz [135] ............................ if me.prepare(tdata[#props]) = 0 then
  [130] pushzero ................................ <0>
  [131] pusharglistnoret 1 ...................... <0>
  [133] extcall 21 .............................. return 0
  [135] getparam 0 .............................. <me>
  [137] pusharglistnoret 1 ...................... <me>
  [139] objcall 1041 ............................ me.updateLocation()
  [142] pushint8 1 .............................. <1>
  [144] pusharglistnoret 1 ...................... <1>
  [146] extcall 21 .............................. return 1
  [148] ret
end

on getInfo me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tInfo = [:]
  [  5] getlocal 0 .............................. <tInfo>
  [  7] pushsymb 492 ............................ <#class>
  [ 10] getprop 1269 ............................ <pClass>
  [ 13] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 15] objcall 173 ............................. tInfo[#class] = pClass
  [ 17] getlocal 0 .............................. <tInfo>
  [ 19] pushsymb 31 ............................. <#name>
  [ 21] pushcons 1 .............................. <"furni_">
  [ 23] getprop 1269 ............................ <pClass>
  [ 26] joinstr ................................. <"furni_" & pClass>
  [ 27] pushcons 2 .............................. <"_name">
  [ 29] joinstr ................................. <"furni_" & pClass & "_name">
  [ 30] pushcons 1 .............................. <"furni_">
  [ 32] getprop 1269 ............................ <pClass>
  [ 35] joinstr ................................. <"furni_" & pClass>
  [ 36] pushcons 2 .............................. <"_name">
  [ 38] joinstr ................................. <"furni_" & pClass & "_name">
  [ 39] pusharglist 2 ........................... <"furni_" & pClass & "_name", "furni_" & pClass & "_name">
  [ 41] extcall 136 ............................. <getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")>
  [ 43] pusharglistnoret 3 ...................... <tInfo, #name, getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")>
  [ 45] objcall 173 ............................. tInfo[#name] = getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")
  [ 47] getlocal 0 .............................. <tInfo>
  [ 49] pushsymb 289 ............................ <#custom>
  [ 52] pushcons 1 .............................. <"furni_">
  [ 54] getprop 1269 ............................ <pClass>
  [ 57] joinstr ................................. <"furni_" & pClass>
  [ 58] pushcons 3 .............................. <"_desc">
  [ 60] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 61] pushcons 1 .............................. <"furni_">
  [ 63] getprop 1269 ............................ <pClass>
  [ 66] joinstr ................................. <"furni_" & pClass>
  [ 67] pushcons 3 .............................. <"_desc">
  [ 69] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 70] pusharglist 2 ........................... <"furni_" & pClass & "_desc", "furni_" & pClass & "_desc">
  [ 72] extcall 136 ............................. <getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 74] pusharglistnoret 3 ...................... <tInfo, #custom, getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 76] objcall 173 ............................. tInfo[#custom] = getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")
  [ 78] getlocal 0 .............................. <tInfo>
  [ 80] pushsymb 1433 ........................... <#smallmember>
  [ 83] getprop 1434 ............................ <pSmallMember>
  [ 86] pusharglistnoret 3 ...................... <tInfo, #smallmember, pSmallMember>
  [ 88] objcall 173 ............................. tInfo[#smallmember] = pSmallMember
  [ 90] getlocal 0 .............................. <tInfo>
  [ 92] pushsymb 290 ............................ <#image>
  [ 95] pushcons 4 .............................. <"Preview_renderer">
  [ 97] pusharglist 1 ........................... <"Preview_renderer">
  [ 99] extcall 153 ............................. <getObject("Preview_renderer")>
  [101] pusharglist 0 ........................... <>
  [103] extcall 159 ............................. <VOID>
  [105] getprop 1428 ............................ <pPartColors>
  [108] pusharglist 0 ........................... <>
  [110] extcall 159 ............................. <VOID>
  [112] getprop 1269 ............................ <pClass>
  [115] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, pPartColors, VOID, pClass>
  [117] objcall 1127 ............................ <getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)>
  [120] pusharglistnoret 3 ...................... <tInfo, #image, getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)>
  [122] objcall 173 ............................. tInfo[#image] = getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)
  [124] getlocal 0 .............................. <tInfo>
  [126] pusharglistnoret 1 ...................... <tInfo>
  [128] extcall 21 .............................. return tInfo
  [130] ret
end

on getLocation me
  [  0] getprop 494 ............................. <pLocX>
  [  3] getprop 496 ............................. <pLocY>
  [  6] getprop 498 ............................. <pLocH>
  [  9] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 11] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 12] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 14] extcall 21 .............................. return [pLocX, pLocY, pLocH]
  [ 16] ret
end

on getCustom me
  [  0] pushcons 1 .............................. <"furni_">
  [  2] getprop 1269 ............................ <pClass>
  [  5] joinstr ................................. <"furni_" & pClass>
  [  6] pushcons 3 .............................. <"_desc">
  [  8] joinstr ................................. <"furni_" & pClass & "_desc">
  [  9] pushcons 1 .............................. <"furni_">
  [ 11] getprop 1269 ............................ <pClass>
  [ 14] joinstr ................................. <"furni_" & pClass>
  [ 15] pushcons 3 .............................. <"_desc">
  [ 17] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 18] pusharglist 2 ........................... <"furni_" & pClass & "_desc", "furni_" & pClass & "_desc">
  [ 20] extcall 136 ............................. <getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 22] setlocal 0 .............................. tCustom = getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")
  [ 24] getlocal 0 .............................. <tCustom>
  [ 26] pusharglistnoret 1 ...................... <tCustom>
  [ 28] extcall 21 .............................. return tCustom
  [ 30] ret
end

on getSprites me
  [  0] getprop 15 .............................. <pSprList>
  [  2] pusharglistnoret 1 ...................... <pSprList>
  [  4] extcall 21 .............................. return pSprList
  [  6] ret
end

on select me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 21 .............................. return 0
  [  5] ret
end

on moveTo me, tX, tY, tH
  [  0] getparam 1 .............................. <tX>
  [  2] setprop 494 ............................. pLocX = tX
  [  5] getparam 2 .............................. <tY>
  [  7] setprop 496 ............................. pLocY = tY
  [ 10] getparam 3 .............................. <tH>
  [ 12] getprop 1429 ............................ <pAltitude>
  [ 15] add ..................................... <tH + pAltitude>
  [ 16] setprop 498 ............................. pLocH = tH + pAltitude
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglistnoret 1 ...................... <me>
  [ 23] objcall 1041 ............................ me.updateLocation()
  [ 26] ret
end

on moveBy me, tX, tY, tH
  [  0] getprop 494 ............................. <pLocX>
  [  3] getparam 1 .............................. <tX>
  [  5] add ..................................... <pLocX + tX>
  [  6] setprop 494 ............................. pLocX = pLocX + tX
  [  9] getprop 496 ............................. <pLocY>
  [ 12] getparam 2 .............................. <tY>
  [ 14] add ..................................... <pLocY + tY>
  [ 15] setprop 496 ............................. pLocY = pLocY + tY
  [ 18] getprop 498 ............................. <pLocH>
  [ 21] getparam 3 .............................. <tH>
  [ 23] add ..................................... <pLocH + tH>
  [ 24] setprop 498 ............................. pLocH = pLocH + tH
  [ 27] getparam 0 .............................. <me>
  [ 29] pusharglistnoret 1 ...................... <me>
  [ 31] objcall 1041 ............................ me.updateLocation()
  [ 34] ret
end

on rotate me, tChange
  [  0] getprop 15 .............................. <pSprList>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglist 2 ........................... <pSprList, 1>
  [  6] objcall 9 ............................... <pSprList[1]>
  [  8] pusharglist 1 ........................... <pSprList[1]>
  [ 10] extcall 182 ............................. <sprite(pSprList[1])>
  [ 12] getchainedprop 30 ....................... <sprite(pSprList[1]).member>
  [ 14] getobjprop 31 ........................... <sprite(pSprList[1]).member.name>
  [ 16] setlocal 0 .............................. tName = sprite(pSprList[1]).member.name
  [ 18] getprop 34 .............................. <pDirection>
  [ 20] setlocal 1 .............................. tDirection = pDirection
  [ 22] getparam 1 .............................. <tChange>
  [ 24] pusharglist 1 ........................... <tChange>
  [ 26] extcall 10 .............................. <voidp(tChange)>
  [ 28] jmpifz [ 35] ............................ if voidp(tChange) then
  [ 31] pushint8 2 .............................. <2>
  [ 33] setparam 1 .............................. tChange = 2
  [ 35] pushzero ................................ <0>
  [ 36] setlocal 2
  [ 38] getlocal 2
  [ 40] pushint8 3 .............................. <3>
  [ 42] lteq
  [ 43] jmpifz [135] ............................ repeat with j = 0 to 3
  [ 46] getlocal 1 .............................. <tDirection>
  [ 48] getparam 1 .............................. <tChange>
  [ 50] add ..................................... <tDirection + tChange>
  [ 51] getlocal 2 .............................. <j>
  [ 53] add ..................................... <tDirection + tChange + j>
  [ 54] pushint8 8 .............................. <8>
  [ 56] mod ..................................... <(tDirection + tChange + j) mod 8>
  [ 57] setlocal 1 .............................. tDirection = (tDirection + tChange + j) mod 8
  [ 59] getlocal 1 .............................. <tDirection>
  [ 61] pushint8 1 .............................. <1>
  [ 63] pusharglist 2 ........................... <tDirection, 1>
  [ 65] objcall 9 ............................... <tDirection[1]>
  [ 67] pushzero ................................ <0>
  [ 68] lt ...................................... <tDirection[1] < 0>
  [ 69] jmpifz [ 79] ............................ if tDirection[1] < 0 then
  [ 72] pushint8 8 .............................. <8>
  [ 74] getlocal 1 .............................. <tDirection>
  [ 76] add ..................................... <8 + tDirection>
  [ 77] setlocal 1 .............................. tDirection = 8 + tDirection
  [ 79] getlocal 0 .............................. <tName>
  [ 81] pushsymb 450 ............................ <#char>
  [ 84] pushint8 1 .............................. <1>
  [ 86] getlocal 0 .............................. <tName>
  [ 88] pusharglist 1 ........................... <tName>
  [ 90] extcall 622 ............................. <length(tName)>
  [ 93] pushint8 3 .............................. <3>
  [ 95] sub ..................................... <length(tName) - 3>
  [ 96] pusharglist 4 ........................... <tName, #char, 1, length(tName) - 3>
  [ 98] objcall 33 .............................. <tName.char[1..length(tName) - 3]>
  [100] getlocal 1 .............................. <tDirection>
  [102] pushint8 1 .............................. <1>
  [104] pusharglist 2 ........................... <tDirection, 1>
  [106] objcall 9 ............................... <tDirection[1]>
  [108] joinstr ................................. <tName.char[1..length(tName) - 3] & tDirection[1]>
  [109] pushcons 5 .............................. <"_0">
  [111] joinstr ................................. <tName.char[1..length(tName) - 3] & tDirection[1] & "_0">
  [112] setlocal 3 .............................. tTryName = tName.char[1..length(tName) - 3] & tDirection[1] & "_0"
  [114] getlocal 3 .............................. <tTryName>
  [116] pusharglist 1 ........................... <tTryName>
  [118] extcall 35 .............................. <memberExists(tTryName)>
  [120] jmpifz [126] ............................ if memberExists(tTryName) then
  [123] jmp [135] ............................... exit repeat
  [126] pushint8 1
  [128] getlocal 2
  [130] add
  [131] setlocal 2
  [133] endrepeat [ 38]
  [135] getlocal 3 .............................. <tTryName>
  [137] pusharglist 1 ........................... <tTryName>
  [139] extcall 35 .............................. <memberExists(tTryName)>
  [141] not ..................................... <not memberExists(tTryName)>
  [142] jmpifz [173] ............................ if not memberExists(tTryName) then
  [145] getparam 0 .............................. <me>
  [147] pushcons 6 .............................. <"Direction for object not found:">
  [149] getprop 1269 ............................ <pClass>
  [152] joinpadstr .............................. <"Direction for object not found:" && pClass>
  [153] getlocal 1 .............................. <tDirection>
  [155] pushint8 1 .............................. <1>
  [157] pusharglist 2 ........................... <tDirection, 1>
  [159] objcall 9 ............................... <tDirection[1]>
  [161] joinpadstr .............................. <"Direction for object not found:" && pClass && tDirection[1]>
  [162] pushsymb 452 ............................ <#rotate>
  [165] pusharglist 3 ........................... <me, "Direction for object not found:" && pClass && tDirection[1], #rotate>
  [167] extcall 161 ............................. <error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)>
  [169] pusharglistnoret 1 ...................... <error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)>
  [171] extcall 21 .............................. return error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)
  [173] pushsymb 949 ............................ <#room>
  [176] pusharglist 1 ........................... <#room>
  [178] extcall 260 ............................. <getThread(#room)>
  [181] pusharglist 1 ........................... <getThread(#room)>
  [183] objcall 207 ............................. <getThread(#room).getComponent()>
  [185] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [187] objcall 395 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [190] pushcons 7 .............................. <"MOVESTUFF">
  [192] getparam 0 .............................. <me>
  [194] pusharglist 1 ........................... <me>
  [196] objcall 156 ............................. <me.getID()>
  [198] getparam 0 .............................. <me>
  [200] getobjprop 494 .......................... <me.pLocX>
  [203] joinpadstr .............................. <me.getID() && me.pLocX>
  [204] getparam 0 .............................. <me>
  [206] getobjprop 496 .......................... <me.pLocY>
  [209] joinpadstr .............................. <me.getID() && me.pLocX && me.pLocY>
  [210] getlocal 1 .............................. <tDirection>
  [212] pushint8 1 .............................. <1>
  [214] pusharglist 2 ........................... <tDirection, 1>
  [216] objcall 9 ............................... <tDirection[1]>
  [218] joinpadstr .............................. <me.getID() && me.pLocX && me.pLocY && tDirection[1]>
  [219] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVESTUFF", me.getID() && me.pLocX && me.pLocY && tDirection[1]>
  [221] objcall 396 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVESTUFF", me.getID() && me.pLocX && me.pLocY && tDirection[1])
  [224] ret
end

on setSlideTo me, tFromLoc, tToLoc, tTimeNow, tHasCharacter
  [  0] getparam 3 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 10 .............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 13] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 13 ......................... <the milliSeconds>
  [ 11] setparam 3 .............................. tTimeNow = the milliSeconds
  [ 13] getparam 3 .............................. <tTimeNow>
  [ 15] setprop 1438 ............................ pSlideStartTime = tTimeNow
  [ 18] getprop 1438 ............................ <pSlideStartTime>
  [ 21] setlocal 0 .............................. pLastSlideUpdateTime = pSlideStartTime
  [ 23] getparam 1 .............................. <tFromLoc>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pusharglist 2 ........................... <tFromLoc, 1>
  [ 29] objcall 9 ............................... <tFromLoc[1]>
  [ 31] pusharglist 1 ........................... <tFromLoc[1]>
  [ 33] extcall 766 ............................. <getLocalFloat(tFromLoc[1])>
  [ 36] setprop 494 ............................. pLocX = getLocalFloat(tFromLoc[1])
  [ 39] getparam 1 .............................. <tFromLoc>
  [ 41] pushint8 2 .............................. <2>
  [ 43] pusharglist 2 ........................... <tFromLoc, 2>
  [ 45] objcall 9 ............................... <tFromLoc[2]>
  [ 47] pusharglist 1 ........................... <tFromLoc[2]>
  [ 49] extcall 766 ............................. <getLocalFloat(tFromLoc[2])>
  [ 52] setprop 496 ............................. pLocY = getLocalFloat(tFromLoc[2])
  [ 55] getparam 1 .............................. <tFromLoc>
  [ 57] pushint8 3 .............................. <3>
  [ 59] pusharglist 2 ........................... <tFromLoc, 3>
  [ 61] objcall 9 ............................... <tFromLoc[3]>
  [ 63] pusharglist 1 ........................... <tFromLoc[3]>
  [ 65] extcall 766 ............................. <getLocalFloat(tFromLoc[3])>
  [ 68] setprop 498 ............................. pLocH = getLocalFloat(tFromLoc[3])
  [ 71] pusharglist 0 ........................... <[]>
  [ 73] pushlist ................................ <[]>
  [ 74] setlocal 1 .............................. tDistances = []
  [ 76] getlocal 1 .............................. <tDistances>
  [ 78] pushint8 1 .............................. <1>
  [ 80] getparam 1 .............................. <tFromLoc>
  [ 82] pushint8 1 .............................. <1>
  [ 84] pusharglist 2 ........................... <tFromLoc, 1>
  [ 86] objcall 9 ............................... <tFromLoc[1]>
  [ 88] getparam 2 .............................. <tToLoc>
  [ 90] pushint8 1 .............................. <1>
  [ 92] pusharglist 2 ........................... <tToLoc, 1>
  [ 94] objcall 9 ............................... <tToLoc[1]>
  [ 96] sub ..................................... <tFromLoc[1] - tToLoc[1]>
  [ 97] pusharglist 1 ........................... <tFromLoc[1] - tToLoc[1]>
  [ 99] extcall 36 .............................. <abs(tFromLoc[1] - tToLoc[1])>
  [101] pusharglistnoret 3 ...................... <tDistances, 1, abs(tFromLoc[1] - tToLoc[1])>
  [103] objcall 173 ............................. tDistances[1] = abs(tFromLoc[1] - tToLoc[1])
  [105] getlocal 1 .............................. <tDistances>
  [107] pushint8 2 .............................. <2>
  [109] getparam 1 .............................. <tFromLoc>
  [111] pushint8 2 .............................. <2>
  [113] pusharglist 2 ........................... <tFromLoc, 2>
  [115] objcall 9 ............................... <tFromLoc[2]>
  [117] getparam 2 .............................. <tToLoc>
  [119] pushint8 2 .............................. <2>
  [121] pusharglist 2 ........................... <tToLoc, 2>
  [123] objcall 9 ............................... <tToLoc[2]>
  [125] sub ..................................... <tFromLoc[2] - tToLoc[2]>
  [126] pusharglist 1 ........................... <tFromLoc[2] - tToLoc[2]>
  [128] extcall 36 .............................. <abs(tFromLoc[2] - tToLoc[2])>
  [130] pusharglistnoret 3 ...................... <tDistances, 2, abs(tFromLoc[2] - tToLoc[2])>
  [132] objcall 173 ............................. tDistances[2] = abs(tFromLoc[2] - tToLoc[2])
  [134] getlocal 1 .............................. <tDistances>
  [136] pushint8 3 .............................. <3>
  [138] getparam 1 .............................. <tFromLoc>
  [140] pushint8 3 .............................. <3>
  [142] pusharglist 2 ........................... <tFromLoc, 3>
  [144] objcall 9 ............................... <tFromLoc[3]>
  [146] getparam 2 .............................. <tToLoc>
  [148] pushint8 3 .............................. <3>
  [150] pusharglist 2 ........................... <tToLoc, 3>
  [152] objcall 9 ............................... <tToLoc[3]>
  [154] sub ..................................... <tFromLoc[3] - tToLoc[3]>
  [155] pusharglist 1 ........................... <tFromLoc[3] - tToLoc[3]>
  [157] extcall 36 .............................. <abs(tFromLoc[3] - tToLoc[3])>
  [159] pusharglistnoret 3 ...................... <tDistances, 3, abs(tFromLoc[3] - tToLoc[3])>
  [161] objcall 173 ............................. tDistances[3] = abs(tFromLoc[3] - tToLoc[3])
  [163] getlocal 1 .............................. <tDistances>
  [165] pusharglist 1 ........................... <tDistances>
  [167] extcall 1386 ............................ <max(tDistances)>
  [170] getprop 1430 ............................ <pSlideTimePerTile>
  [173] mul ..................................... <max(tDistances) * pSlideTimePerTile>
  [174] setlocal 2 .............................. tMoveTime = max(tDistances) * pSlideTimePerTile
  [176] getprop 1438 ............................ <pSlideStartTime>
  [179] getlocal 2 .............................. <tMoveTime>
  [181] add ..................................... <pSlideStartTime + tMoveTime>
  [182] setprop 1439 ............................ pSlideEndTime = pSlideStartTime + tMoveTime
  [185] getprop 494 ............................. <pLocX>
  [188] getprop 496 ............................. <pLocY>
  [191] getprop 498 ............................. <pLocH>
  [194] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [196] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [197] setprop 1440 ............................ pStartloc = [pLocX, pLocY, pLocH]
  [200] getparam 2 .............................. <tToLoc>
  [202] setprop 1441 ............................ pDestLoc = tToLoc
  [205] getparam 0 .............................. <me>
  [207] pusharglistnoret 1 ...................... <me>
  [209] objcall 1041 ............................ me.updateLocation()
  [212] ret
end

on animateSlide me, tTimeNow
  [  0] getparam 1 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 10 .............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 13] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 13 ......................... <the milliSeconds>
  [ 11] setparam 1 .............................. tTimeNow = the milliSeconds
  [ 13] getprop 1439 ............................ <pSlideEndTime>
  [ 16] getparam 1 .............................. <tTimeNow>
  [ 18] lt ...................................... <pSlideEndTime < tTimeNow>
  [ 19] jmpifz [101] ............................ if pSlideEndTime < tTimeNow then
  [ 22] getprop 1441 ............................ <pDestLoc>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pusharglist 2 ........................... <pDestLoc, 1>
  [ 29] objcall 9 ............................... <pDestLoc[1]>
  [ 31] getobjprop 451 .......................... <pDestLoc[1].integer>
  [ 34] setprop 494 ............................. pLocX = pDestLoc[1].integer
  [ 37] getprop 1441 ............................ <pDestLoc>
  [ 40] pushint8 2 .............................. <2>
  [ 42] pusharglist 2 ........................... <pDestLoc, 2>
  [ 44] objcall 9 ............................... <pDestLoc[2]>
  [ 46] getobjprop 451 .......................... <pDestLoc[2].integer>
  [ 49] setprop 496 ............................. pLocY = pDestLoc[2].integer
  [ 52] getprop 1441 ............................ <pDestLoc>
  [ 55] pushint8 3 .............................. <3>
  [ 57] pusharglist 2 ........................... <pDestLoc, 3>
  [ 59] objcall 9 ............................... <pDestLoc[3]>
  [ 61] setprop 498 ............................. pLocH = pDestLoc[3]
  [ 64] pushcons 8 .............................. <"room">
  [ 66] pusharglist 1 ........................... <"room">
  [ 68] extcall 260 ............................. <getThread("room")>
  [ 71] pusharglist 1 ........................... <getThread("room")>
  [ 73] objcall 207 ............................. <getThread("room").getComponent()>
  [ 75] getparam 0 .............................. <me>
  [ 77] getchainedprop 1351 ..................... <me.ancestor>
  [ 80] getobjprop 386 .......................... <me.ancestor.id>
  [ 83] pusharglistnoret 2 ...................... <getThread("room").getComponent(), me.ancestor.id>
  [ 85] objcall 525 ............................. getThread("room").getComponent().removeSlideObject(me.ancestor.id)
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglistnoret 1 ...................... <me>
  [ 92] objcall 1041 ............................ me.updateLocation()
  [ 95] pushint8 1 .............................. <1>
  [ 97] pusharglistnoret 1 ...................... <1>
  [ 99] extcall 21 .............................. return 1
  [101] getparam 1 .............................. <tTimeNow>
  [103] getprop 1438 ............................ <pSlideStartTime>
  [106] sub ..................................... <tTimeNow - pSlideStartTime>
  [107] pusharglist 1 ........................... <tTimeNow - pSlideStartTime>
  [109] extcall 616 ............................. <float(tTimeNow - pSlideStartTime)>
  [112] setlocal 0 .............................. tTimeUsed = float(tTimeNow - pSlideStartTime)
  [114] getlocal 0 .............................. <tTimeUsed>
  [116] getprop 1439 ............................ <pSlideEndTime>
  [119] getprop 1438 ............................ <pSlideStartTime>
  [122] sub ..................................... <pSlideEndTime - pSlideStartTime>
  [123] pusharglist 1 ........................... <pSlideEndTime - pSlideStartTime>
  [125] extcall 616 ............................. <float(pSlideEndTime - pSlideStartTime)>
  [128] div ..................................... <tTimeUsed / float(pSlideEndTime - pSlideStartTime)>
  [129] setlocal 1 .............................. tPercentSlided = tTimeUsed / float(pSlideEndTime - pSlideStartTime)
  [131] getprop 1441 ............................ <pDestLoc>
  [134] pushint8 1 .............................. <1>
  [136] pusharglist 2 ........................... <pDestLoc, 1>
  [138] objcall 9 ............................... <pDestLoc[1]>
  [140] getprop 1440 ............................ <pStartloc>
  [143] pushint8 1 .............................. <1>
  [145] pusharglist 2 ........................... <pStartloc, 1>
  [147] objcall 9 ............................... <pStartloc[1]>
  [149] sub ..................................... <pDestLoc[1] - pStartloc[1]>
  [150] pusharglist 1 ........................... <pDestLoc[1] - pStartloc[1]>
  [152] extcall 616 ............................. <float(pDestLoc[1] - pStartloc[1])>
  [155] getlocal 1 .............................. <tPercentSlided>
  [157] mul ..................................... <float(pDestLoc[1] - pStartloc[1]) * tPercentSlided>
  [158] getprop 1440 ............................ <pStartloc>
  [161] pushint8 1 .............................. <1>
  [163] pusharglist 2 ........................... <pStartloc, 1>
  [165] objcall 9 ............................... <pStartloc[1]>
  [167] add ..................................... <(float(pDestLoc[1] - pStartloc[1]) * tPercentSlided) + pStartloc[1]>
  [168] setprop 494 ............................. pLocX = (float(pDestLoc[1] - pStartloc[1]) * tPercentSlided) + pStartloc[1]
  [171] getprop 1441 ............................ <pDestLoc>
  [174] pushint8 2 .............................. <2>
  [176] pusharglist 2 ........................... <pDestLoc, 2>
  [178] objcall 9 ............................... <pDestLoc[2]>
  [180] getprop 1440 ............................ <pStartloc>
  [183] pushint8 2 .............................. <2>
  [185] pusharglist 2 ........................... <pStartloc, 2>
  [187] objcall 9 ............................... <pStartloc[2]>
  [189] sub ..................................... <pDestLoc[2] - pStartloc[2]>
  [190] pusharglist 1 ........................... <pDestLoc[2] - pStartloc[2]>
  [192] extcall 616 ............................. <float(pDestLoc[2] - pStartloc[2])>
  [195] getlocal 1 .............................. <tPercentSlided>
  [197] mul ..................................... <float(pDestLoc[2] - pStartloc[2]) * tPercentSlided>
  [198] getprop 1440 ............................ <pStartloc>
  [201] pushint8 2 .............................. <2>
  [203] pusharglist 2 ........................... <pStartloc, 2>
  [205] objcall 9 ............................... <pStartloc[2]>
  [207] add ..................................... <(float(pDestLoc[2] - pStartloc[2]) * tPercentSlided) + pStartloc[2]>
  [208] setprop 496 ............................. pLocY = (float(pDestLoc[2] - pStartloc[2]) * tPercentSlided) + pStartloc[2]
  [211] getprop 1441 ............................ <pDestLoc>
  [214] pushint8 3 .............................. <3>
  [216] pusharglist 2 ........................... <pDestLoc, 3>
  [218] objcall 9 ............................... <pDestLoc[3]>
  [220] getprop 1440 ............................ <pStartloc>
  [223] pushint8 3 .............................. <3>
  [225] pusharglist 2 ........................... <pStartloc, 3>
  [227] objcall 9 ............................... <pStartloc[3]>
  [229] sub ..................................... <pDestLoc[3] - pStartloc[3]>
  [230] pusharglist 1 ........................... <pDestLoc[3] - pStartloc[3]>
  [232] extcall 616 ............................. <float(pDestLoc[3] - pStartloc[3])>
  [235] getlocal 1 .............................. <tPercentSlided>
  [237] mul ..................................... <float(pDestLoc[3] - pStartloc[3]) * tPercentSlided>
  [238] getprop 1440 ............................ <pStartloc>
  [241] pushint8 3 .............................. <3>
  [243] pusharglist 2 ........................... <pStartloc, 3>
  [245] objcall 9 ............................... <pStartloc[3]>
  [247] add ..................................... <(float(pDestLoc[3] - pStartloc[3]) * tPercentSlided) + pStartloc[3]>
  [248] setprop 498 ............................. pLocH = (float(pDestLoc[3] - pStartloc[3]) * tPercentSlided) + pStartloc[3]
  [251] getparam 0 .............................. <me>
  [253] pusharglistnoret 1 ...................... <me>
  [255] objcall 1041 ............................ me.updateLocation()
  [258] pushint8 1 .............................. <1>
  [260] pusharglistnoret 1 ...................... <1>
  [262] extcall 21 .............................. return 1
  [264] ret
end

on ghostObject me
  [  0] getprop 15 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 14
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 59] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 9
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 419 .......................... <tSpr.ink>
  [ 33] pushint8 33 ............................. <33>
  [ 35] eq ...................................... <tSpr.ink = 33>
  [ 36] jmpifz [ 47] ............................ if tSpr.ink = 33 then
  [ 39] getlocal 0 .............................. <tSpr>
  [ 41] pushzero ................................ <0>
  [ 42] setobjprop 251 .......................... tSpr.visible = 0
  [ 44] jmp [ 54] ............................... next repeat
  [ 47] getlocal 0 .............................. <tSpr>
  [ 49] pushint8 35 ............................. <35>
  [ 51] setobjprop 362 .......................... tSpr.blend = 35
  [ 54] pushint8 1
  [ 56] add
  [ 57] endrepeat [ 10]
  [ 59] pop 3
  [ 61] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 21 .............................. return 1
  [  6] ret
end

on relocate me, tSpriteList
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 21 .............................. return 1
  [  6] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 10 .............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 9 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 1428 ............................ pPartColors = []
  [ 19] getmovieprop 29 ......................... <the itemDelimiter>
  [ 21] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 23] pushcons 10 ............................. <",">
  [ 25] setmovieprop 29 ......................... the itemDelimiter = ","
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 1
  [ 31] getlocal 1
  [ 33] getparam 1 .............................. <tpartColors>
  [ 35] pushsymb 32 ............................. <#item>
  [ 37] pusharglist 2 ........................... <tpartColors, #item>
  [ 39] objcall 14 .............................. <tpartColors.item.count>
  [ 41] lteq
  [ 42] jmpifz [ 76] ............................ repeat with i = 1 to tpartColors.item.count
  [ 45] getprop 1428 ............................ <pPartColors>
  [ 48] getparam 1 .............................. <tpartColors>
  [ 50] pushsymb 32 ............................. <#item>
  [ 52] getlocal 1 .............................. <i>
  [ 54] pusharglist 3 ........................... <tpartColors, #item, i>
  [ 56] objcall 33 .............................. <tpartColors.item[i]>
  [ 58] pusharglist 1 ........................... <tpartColors.item[i]>
  [ 60] extcall 453 ............................. <string(tpartColors.item[i])>
  [ 63] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[i])>
  [ 65] objcall 186 ............................. pPartColors.add(string(tpartColors.item[i]))
  [ 67] pushint8 1
  [ 69] getlocal 1
  [ 71] add
  [ 72] setlocal 1
  [ 74] endrepeat [ 31]
  [ 76] getprop 1428 ............................ <pPartColors>
  [ 79] getobjprop 14 ........................... <pPartColors.count>
  [ 81] setlocal 2
  [ 83] getlocal 2
  [ 85] pushint8 4 .............................. <4>
  [ 87] lteq
  [ 88] jmpifz [109] ............................ repeat with j = pPartColors.count to 4
  [ 91] getprop 1428 ............................ <pPartColors>
  [ 94] pushcons 11 ............................. <"*ffffff">
  [ 96] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [ 98] objcall 186 ............................. pPartColors.add("*ffffff")
  [100] pushint8 1
  [102] getlocal 2
  [104] add
  [105] setlocal 2
  [107] endrepeat [ 83]
  [109] getlocal 0 .............................. <tDelim>
  [111] setmovieprop 29 ......................... the itemDelimiter = tDelim
  [113] ret
end

on solveInk me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 10 .............................. <voidp(tClass)>
  [  6] jmpifz [ 14] ............................ if voidp(tClass) then
  [  9] getprop 1269 ............................ <pClass>
  [ 12] setparam 2 .............................. tClass = pClass
  [ 14] getparam 2 .............................. <tClass>
  [ 16] pushcons 12 ............................. <".props">
  [ 18] joinstr ................................. <tClass & ".props">
  [ 19] pusharglist 1 ........................... <tClass & ".props">
  [ 21] extcall 35 .............................. <memberExists(tClass & ".props")>
  [ 23] not ..................................... <not memberExists(tClass & ".props")>
  [ 24] jmpifz [ 33] ............................ if not memberExists(tClass & ".props") then
  [ 27] pushint8 8 .............................. <8>
  [ 29] pusharglistnoret 1 ...................... <8>
  [ 31] extcall 21 .............................. return 8
  [ 33] getparam 2 .............................. <tClass>
  [ 35] pushcons 12 ............................. <".props">
  [ 37] joinstr ................................. <tClass & ".props">
  [ 38] pusharglist 1 ........................... <tClass & ".props">
  [ 40] extcall 37 .............................. <getmemnum(tClass & ".props")>
  [ 42] pushzero ................................ <0>
  [ 43] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 44] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 46] extcall 411 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 49] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 51] getlocal 0 .............................. <tPropList>
  [ 53] pusharglist 1 ........................... <tPropList>
  [ 55] extcall 248 ............................. <ilk(tPropList)>
  [ 57] pushsymb 1449 ........................... <#propList>
  [ 60] nteq .................................... <ilk(tPropList) <> #propList>
  [ 61] jmpifz [ 87] ............................ if ilk(tPropList) <> #propList then / else
  [ 64] getparam 0 .............................. <me>
  [ 66] getparam 2 .............................. <tClass>
  [ 68] pushcons 13 ............................. <".props is not valid!">
  [ 70] joinstr ................................. <tClass & ".props is not valid!">
  [ 71] pushsymb 1423 ........................... <#solveInk>
  [ 74] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveInk>
  [ 76] extcall 161 ............................. error(me, tClass & ".props is not valid!", #solveInk)
  [ 78] pushint8 8 .............................. <8>
  [ 80] pusharglistnoret 1 ...................... <8>
  [ 82] extcall 21 .............................. return 8
  [ 84] jmp [150]
  [ 87] getlocal 0 .............................. <tPropList>
  [ 89] getparam 1 .............................. <tPart>
  [ 91] pusharglist 2 ........................... <tPropList, tPart>
  [ 93] objcall 9 ............................... <tPropList[tPart]>
  [ 95] pusharglist 1 ........................... <tPropList[tPart]>
  [ 97] extcall 10 .............................. <voidp(tPropList[tPart])>
  [ 99] jmpifz [108] ............................ if voidp(tPropList[tPart]) then
  [102] pushint8 8 .............................. <8>
  [104] pusharglistnoret 1 ...................... <8>
  [106] extcall 21 .............................. return 8
  [108] getlocal 0 .............................. <tPropList>
  [110] getparam 1 .............................. <tPart>
  [112] pusharglist 2 ........................... <tPropList, tPart>
  [114] objcall 9 ............................... <tPropList[tPart]>
  [116] pushsymb 419 ............................ <#ink>
  [119] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [121] objcall 9 ............................... <tPropList[tPart][#ink]>
  [123] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [125] extcall 10 .............................. <voidp(tPropList[tPart][#ink])>
  [127] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [128] jmpifz [150] ............................ if not voidp(tPropList[tPart][#ink]) then
  [131] getlocal 0 .............................. <tPropList>
  [133] getparam 1 .............................. <tPart>
  [135] pusharglist 2 ........................... <tPropList, tPart>
  [137] objcall 9 ............................... <tPropList[tPart]>
  [139] pushsymb 419 ............................ <#ink>
  [142] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [144] objcall 9 ............................... <tPropList[tPart][#ink]>
  [146] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [148] extcall 21 .............................. return tPropList[tPart][#ink]
  [150] pushint8 8 .............................. <8>
  [152] pusharglistnoret 1 ...................... <8>
  [154] extcall 21 .............................. return 8
  [156] ret
end

on solveBlend me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 10 .............................. <voidp(tClass)>
  [  6] jmpifz [ 14] ............................ if voidp(tClass) then
  [  9] getprop 1269 ............................ <pClass>
  [ 12] setparam 2 .............................. tClass = pClass
  [ 14] getparam 2 .............................. <tClass>
  [ 16] pushcons 12 ............................. <".props">
  [ 18] joinstr ................................. <tClass & ".props">
  [ 19] pusharglist 1 ........................... <tClass & ".props">
  [ 21] extcall 35 .............................. <memberExists(tClass & ".props")>
  [ 23] not ..................................... <not memberExists(tClass & ".props")>
  [ 24] jmpifz [ 33] ............................ if not memberExists(tClass & ".props") then
  [ 27] pushint8 100 ............................ <100>
  [ 29] pusharglistnoret 1 ...................... <100>
  [ 31] extcall 21 .............................. return 100
  [ 33] getparam 2 .............................. <tClass>
  [ 35] pushcons 12 ............................. <".props">
  [ 37] joinstr ................................. <tClass & ".props">
  [ 38] pusharglist 1 ........................... <tClass & ".props">
  [ 40] extcall 37 .............................. <getmemnum(tClass & ".props")>
  [ 42] pushzero ................................ <0>
  [ 43] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 44] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 46] extcall 411 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 49] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 51] getlocal 0 .............................. <tPropList>
  [ 53] pusharglist 1 ........................... <tPropList>
  [ 55] extcall 248 ............................. <ilk(tPropList)>
  [ 57] pushsymb 1449 ........................... <#propList>
  [ 60] nteq .................................... <ilk(tPropList) <> #propList>
  [ 61] jmpifz [ 87] ............................ if ilk(tPropList) <> #propList then / else
  [ 64] getparam 0 .............................. <me>
  [ 66] getparam 2 .............................. <tClass>
  [ 68] pushcons 13 ............................. <".props is not valid!">
  [ 70] joinstr ................................. <tClass & ".props is not valid!">
  [ 71] pushsymb 1424 ........................... <#solveBlend>
  [ 74] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveBlend>
  [ 76] extcall 161 ............................. error(me, tClass & ".props is not valid!", #solveBlend)
  [ 78] pushint8 100 ............................ <100>
  [ 80] pusharglistnoret 1 ...................... <100>
  [ 82] extcall 21 .............................. return 100
  [ 84] jmp [150]
  [ 87] getlocal 0 .............................. <tPropList>
  [ 89] getparam 1 .............................. <tPart>
  [ 91] pusharglist 2 ........................... <tPropList, tPart>
  [ 93] objcall 9 ............................... <tPropList[tPart]>
  [ 95] pusharglist 1 ........................... <tPropList[tPart]>
  [ 97] extcall 10 .............................. <voidp(tPropList[tPart])>
  [ 99] jmpifz [108] ............................ if voidp(tPropList[tPart]) then
  [102] pushint8 100 ............................ <100>
  [104] pusharglistnoret 1 ...................... <100>
  [106] extcall 21 .............................. return 100
  [108] getlocal 0 .............................. <tPropList>
  [110] getparam 1 .............................. <tPart>
  [112] pusharglist 2 ........................... <tPropList, tPart>
  [114] objcall 9 ............................... <tPropList[tPart]>
  [116] pushsymb 362 ............................ <#blend>
  [119] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [121] objcall 9 ............................... <tPropList[tPart][#blend]>
  [123] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [125] extcall 10 .............................. <voidp(tPropList[tPart][#blend])>
  [127] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [128] jmpifz [150] ............................ if not voidp(tPropList[tPart][#blend]) then
  [131] getlocal 0 .............................. <tPropList>
  [133] getparam 1 .............................. <tPart>
  [135] pusharglist 2 ........................... <tPropList, tPart>
  [137] objcall 9 ............................... <tPropList[tPart]>
  [139] pushsymb 362 ............................ <#blend>
  [142] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [144] objcall 9 ............................... <tPropList[tPart][#blend]>
  [146] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [148] extcall 21 .............................. return tPropList[tPart][#blend]
  [150] pushint8 100 ............................ <100>
  [152] pusharglistnoret 1 ...................... <100>
  [154] extcall 21 .............................. return 100
  [156] ret
end

on solveLocZ me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 10 .............................. <voidp(tClass)>
  [  6] jmpifz [ 14] ............................ if voidp(tClass) then
  [  9] getprop 1269 ............................ <pClass>
  [ 12] setparam 3 .............................. tClass = pClass
  [ 14] getparam 3 .............................. <tClass>
  [ 16] pushcons 12 ............................. <".props">
  [ 18] joinstr ................................. <tClass & ".props">
  [ 19] pusharglist 1 ........................... <tClass & ".props">
  [ 21] extcall 35 .............................. <memberExists(tClass & ".props")>
  [ 23] not ..................................... <not memberExists(tClass & ".props")>
  [ 24] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 21 .............................. return 0
  [ 32] getparam 3 .............................. <tClass>
  [ 34] pushcons 12 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 37 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 411 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 48] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 50] getlocal 0 .............................. <tPropList>
  [ 52] pusharglist 1 ........................... <tPropList>
  [ 54] extcall 248 ............................. <ilk(tPropList)>
  [ 56] pushsymb 1449 ........................... <#propList>
  [ 59] nteq .................................... <ilk(tPropList) <> #propList>
  [ 60] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 63] getparam 0 .............................. <me>
  [ 65] getparam 3 .............................. <tClass>
  [ 67] pushcons 13 ............................. <".props is not valid!">
  [ 69] joinstr ................................. <tClass & ".props is not valid!">
  [ 70] pushsymb 1425 ........................... <#solveLocZ>
  [ 73] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveLocZ>
  [ 75] extcall 161 ............................. error(me, tClass & ".props is not valid!", #solveLocZ)
  [ 77] pushzero ................................ <0>
  [ 78] pusharglistnoret 1 ...................... <0>
  [ 80] extcall 21 .............................. return 0
  [ 82] jmp [158]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 9 ............................... <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 10 .............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [105] ............................ if voidp(tPropList[tPart]) then
  [100] pushzero ................................ <0>
  [101] pusharglistnoret 1 ...................... <0>
  [103] extcall 21 .............................. return 0
  [105] getlocal 0 .............................. <tPropList>
  [107] getparam 1 .............................. <tPart>
  [109] pusharglist 2 ........................... <tPropList, tPart>
  [111] objcall 9 ............................... <tPropList[tPart]>
  [113] pushsymb 1451 ........................... <#zshift>
  [116] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [118] objcall 9 ............................... <tPropList[tPart][#zshift]>
  [120] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [122] extcall 10 .............................. <voidp(tPropList[tPart][#zshift])>
  [124] jmpifz [132] ............................ if voidp(tPropList[tPart][#zshift]) then
  [127] pushzero ................................ <0>
  [128] pusharglistnoret 1 ...................... <0>
  [130] extcall 21 .............................. return 0
  [132] getlocal 0 .............................. <tPropList>
  [134] getparam 1 .............................. <tPart>
  [136] pusharglist 2 ........................... <tPropList, tPart>
  [138] objcall 9 ............................... <tPropList[tPart]>
  [140] pushsymb 1451 ........................... <#zshift>
  [143] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [145] objcall 9 ............................... <tPropList[tPart][#zshift]>
  [147] getobjprop 14 ........................... <tPropList[tPart][#zshift].count>
  [149] getparam 2 .............................. <tdir>
  [151] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [152] jmpifz [158] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [155] pushzero ................................ <0>
  [156] setparam 2 .............................. tdir = 0
  [158] getlocal 0 .............................. <tPropList>
  [160] getparam 1 .............................. <tPart>
  [162] pusharglist 2 ........................... <tPropList, tPart>
  [164] objcall 9 ............................... <tPropList[tPart]>
  [166] pushsymb 1451 ........................... <#zshift>
  [169] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [171] objcall 9 ............................... <tPropList[tPart][#zshift]>
  [173] getparam 2 .............................. <tdir>
  [175] pushint8 1 .............................. <1>
  [177] add ..................................... <tdir + 1>
  [178] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [180] objcall 9 ............................... <tPropList[tPart][#zshift][tdir + 1]>
  [182] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [184] extcall 21 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [186] ret
end

on solveLocShift me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 10 .............................. <voidp(tClass)>
  [  6] jmpifz [ 14] ............................ if voidp(tClass) then
  [  9] getprop 1269 ............................ <pClass>
  [ 12] setparam 3 .............................. tClass = pClass
  [ 14] getparam 3 .............................. <tClass>
  [ 16] pushcons 12 ............................. <".props">
  [ 18] joinstr ................................. <tClass & ".props">
  [ 19] pusharglist 1 ........................... <tClass & ".props">
  [ 21] extcall 35 .............................. <memberExists(tClass & ".props")>
  [ 23] not ..................................... <not memberExists(tClass & ".props")>
  [ 24] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 21 .............................. return 0
  [ 32] getparam 3 .............................. <tClass>
  [ 34] pushcons 12 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 37 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 411 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 48] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 50] getlocal 0 .............................. <tPropList>
  [ 52] pusharglist 1 ........................... <tPropList>
  [ 54] extcall 248 ............................. <ilk(tPropList)>
  [ 56] pushsymb 1449 ........................... <#propList>
  [ 59] nteq .................................... <ilk(tPropList) <> #propList>
  [ 60] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 63] getparam 0 .............................. <me>
  [ 65] getparam 3 .............................. <tClass>
  [ 67] pushcons 13 ............................. <".props is not valid!">
  [ 69] joinstr ................................. <tClass & ".props is not valid!">
  [ 70] pushsymb 1426 ........................... <#solveLocShift>
  [ 73] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveLocShift>
  [ 75] extcall 161 ............................. error(me, tClass & ".props is not valid!", #solveLocShift)
  [ 77] pushzero ................................ <0>
  [ 78] pusharglistnoret 1 ...................... <0>
  [ 80] extcall 21 .............................. return 0
  [ 82] jmp [210]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 9 ............................... <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 10 .............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [105] ............................ if voidp(tPropList[tPart]) then
  [100] pushzero ................................ <0>
  [101] pusharglistnoret 1 ...................... <0>
  [103] extcall 21 .............................. return 0
  [105] getlocal 0 .............................. <tPropList>
  [107] getparam 1 .............................. <tPart>
  [109] pusharglist 2 ........................... <tPropList, tPart>
  [111] objcall 9 ............................... <tPropList[tPart]>
  [113] pushsymb 1452 ........................... <#locshift>
  [116] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [118] objcall 9 ............................... <tPropList[tPart][#locshift]>
  [120] pusharglist 1 ........................... <tPropList[tPart][#locshift]>
  [122] extcall 10 .............................. <voidp(tPropList[tPart][#locshift])>
  [124] jmpifz [132] ............................ if voidp(tPropList[tPart][#locshift]) then
  [127] pushzero ................................ <0>
  [128] pusharglistnoret 1 ...................... <0>
  [130] extcall 21 .............................. return 0
  [132] getlocal 0 .............................. <tPropList>
  [134] getparam 1 .............................. <tPart>
  [136] pusharglist 2 ........................... <tPropList, tPart>
  [138] objcall 9 ............................... <tPropList[tPart]>
  [140] pushsymb 1452 ........................... <#locshift>
  [143] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [145] objcall 9 ............................... <tPropList[tPart][#locshift]>
  [147] getobjprop 14 ........................... <tPropList[tPart][#locshift].count>
  [149] getparam 2 .............................. <tdir>
  [151] lteq .................................... <tPropList[tPart][#locshift].count <= tdir>
  [152] jmpifz [160] ............................ if tPropList[tPart][#locshift].count <= tdir then
  [155] pushzero ................................ <0>
  [156] pusharglistnoret 1 ...................... <0>
  [158] extcall 21 .............................. return 0
  [160] getlocal 0 .............................. <tPropList>
  [162] getparam 1 .............................. <tPart>
  [164] pusharglist 2 ........................... <tPropList, tPart>
  [166] objcall 9 ............................... <tPropList[tPart]>
  [168] pushsymb 1452 ........................... <#locshift>
  [171] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [173] objcall 9 ............................... <tPropList[tPart][#locshift]>
  [175] getparam 2 .............................. <tdir>
  [177] pushint8 1 .............................. <1>
  [179] add ..................................... <tdir + 1>
  [180] pusharglist 2 ........................... <tPropList[tPart][#locshift], tdir + 1>
  [182] objcall 9 ............................... <tPropList[tPart][#locshift][tdir + 1]>
  [184] pusharglist 1 ........................... <tPropList[tPart][#locshift][tdir + 1]>
  [186] extcall 411 ............................. <value(tPropList[tPart][#locshift][tdir + 1])>
  [189] setlocal 1 .............................. tShift = value(tPropList[tPart][#locshift][tdir + 1])
  [191] getlocal 1 .............................. <tShift>
  [193] pusharglist 1 ........................... <tShift>
  [195] extcall 248 ............................. <ilk(tShift)>
  [197] pushsymb 293 ............................ <#point>
  [200] eq ...................................... <ilk(tShift) = #point>
  [201] jmpifz [210] ............................ if ilk(tShift) = #point then
  [204] getlocal 1 .............................. <tShift>
  [206] pusharglistnoret 1 ...................... <tShift>
  [208] extcall 21 .............................. return tShift
  [210] pushzero ................................ <0>
  [211] pusharglistnoret 1 ...................... <0>
  [213] extcall 21 .............................. return 0
  [215] ret
end

on solveMembers me
  [  0] getprop 1269 ............................ <pClass>
  [  3] setlocal 0 .............................. tClass = pClass
  [  5] getlocal 0 .............................. <tClass>
  [  7] pushcons 14 ............................. <"*">
  [  9] containsstr ............................. <tClass contains "*">
  [ 10] jmpifz [ 65] ............................ if tClass contains "*" then / else
  [ 13] getlocal 0 .............................. <tClass>
  [ 15] pushcons 15 ............................. <"_small">
  [ 17] joinstr ................................. <tClass & "_small">
  [ 18] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 20] getlocal 0 .............................. <tClass>
  [ 22] pushsymb 450 ............................ <#char>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pushcons 14 ............................. <"*">
  [ 29] getlocal 0 .............................. <tClass>
  [ 31] pusharglist 2 ........................... <"*", tClass>
  [ 33] extcall 621 ............................. <offset("*", tClass)>
  [ 36] pushint8 1 .............................. <1>
  [ 38] sub ..................................... <offset("*", tClass) - 1>
  [ 39] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [ 41] objcall 33 .............................. <tClass.char[1..offset("*", tClass) - 1]>
  [ 43] setlocal 0 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [ 45] getlocal 1 .............................. <tSmallMem>
  [ 47] pusharglist 1 ........................... <tSmallMem>
  [ 49] extcall 35 .............................. <memberExists(tSmallMem)>
  [ 51] not ..................................... <not memberExists(tSmallMem)>
  [ 52] jmpifz [ 62] ............................ if not memberExists(tSmallMem) then
  [ 55] getlocal 0 .............................. <tClass>
  [ 57] pushcons 15 ............................. <"_small">
  [ 59] joinstr ................................. <tClass & "_small">
  [ 60] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 62] jmp [ 72]
  [ 65] getlocal 0 .............................. <tClass>
  [ 67] pushcons 15 ............................. <"_small">
  [ 69] joinstr ................................. <tClass & "_small">
  [ 70] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 72] getlocal 1 .............................. <tSmallMem>
  [ 74] setprop 1434 ............................ pSmallMember = tSmallMem
  [ 77] getprop 977 ............................. <pXFactor>
  [ 80] pushint8 32 ............................. <32>
  [ 82] eq ...................................... <pXFactor = 32>
  [ 83] jmpifz [ 93] ............................ if pXFactor = 32 then
  [ 86] pushcons 16 ............................. <"s_">
  [ 88] getlocal 0 .............................. <tClass>
  [ 90] joinstr ................................. <"s_" & tClass>
  [ 91] setlocal 0 .............................. tClass = "s_" & tClass
  [ 93] getprop 15 .............................. <pSprList>
  [ 95] getobjprop 14 ........................... <pSprList.count>
  [ 97] pushzero ................................ <0>
  [ 98] gt ...................................... <pSprList.count > 0>
  [ 99] jmpifz [151] ............................ if pSprList.count > 0 then
  [102] getprop 15 .............................. <pSprList>
  [104] peek 0
  [106] pusharglist 1
  [108] extcall 14
  [110] pushint8 1
  [112] peek 0
  [114] peek 2
  [116] lteq
  [117] jmpifz [144] ............................ repeat with tSpr in pSprList
  [120] peek 2
  [122] peek 1
  [124] pusharglist 2
  [126] extcall 9
  [128] setlocal 2
  [130] getlocal 2 .............................. <tSpr>
  [132] getobjprop 18 ........................... <tSpr.spriteNum>
  [134] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [136] extcall 367 ............................. releaseSprite(tSpr.spriteNum)
  [139] pushint8 1
  [141] add
  [142] endrepeat [112]
  [144] pop 3
  [146] pusharglist 0 ........................... <[]>
  [148] pushlist ................................ <[]>
  [149] setprop 15 .............................. pSprList = []
  [151] pushint8 1 .............................. <1>
  [153] setlocal 3 .............................. tMemNum = 1
  [155] pushcons 17 ............................. <"a">
  [157] pusharglist 1 ........................... <"a">
  [159] extcall 20 .............................. <charToNum("a")>
  [161] setlocal 4 .............................. i = charToNum("a")
  [163] pushint8 1 .............................. <1>
  [165] setlocal 5 .............................. j = 1
  [167] pushint8 5 .............................. <5>
  [169] inv ..................................... <-5>
  [170] setlocal 6 .............................. tLoczAdjust = -5
  [172] getlocal 3 .............................. <tMemNum>
  [174] pushzero ................................ <0>
  [175] gt ...................................... <tMemNum > 0>
  [176] jmpifz [1029] ........................... repeat while tMemNum > 0
  [179] pushzero ................................ <0>
  [180] setlocal 7 .............................. tFound = 0
  [182] getlocal 7 .............................. <tFound>
  [184] pushzero ................................ <0>
  [185] eq ...................................... <tFound = 0>
  [186] jmpifz [518] ............................ repeat while tFound = 0
  [189] getlocal 0 .............................. <tClass>
  [191] pushcons 18 ............................. <"_">
  [193] joinstr ................................. <tClass & "_">
  [194] getlocal 4 .............................. <i>
  [196] pusharglist 1 ........................... <i>
  [198] extcall 19 .............................. <numToChar(i)>
  [200] joinstr ................................. <tClass & "_" & numToChar(i)>
  [201] pushcons 18 ............................. <"_">
  [203] joinstr ................................. <tClass & "_" & numToChar(i) & "_">
  [204] pushcons 19 ............................. <"0">
  [206] joinstr ................................. <tClass & "_" & numToChar(i) & "_" & "0">
  [207] setlocal 8 .............................. tMemNameA = tClass & "_" & numToChar(i) & "_" & "0"
  [209] getprop 402 ............................. <pDimensions>
  [212] pusharglist 1 ........................... <pDimensions>
  [214] extcall 288 ............................. <listp(pDimensions)>
  [217] jmpifz [250] ............................ if listp(pDimensions) then
  [220] getlocal 8 .............................. <tMemNameA>
  [222] pushcons 18 ............................. <"_">
  [224] joinstr ................................. <tMemNameA & "_">
  [225] getprop 402 ............................. <pDimensions>
  [228] pushint8 1 .............................. <1>
  [230] pusharglist 2 ........................... <pDimensions, 1>
  [232] objcall 9 ............................... <pDimensions[1]>
  [234] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [235] pushcons 18 ............................. <"_">
  [237] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [238] getprop 402 ............................. <pDimensions>
  [241] pushint8 2 .............................. <2>
  [243] pusharglist 2 ........................... <pDimensions, 2>
  [245] objcall 9 ............................... <pDimensions[2]>
  [247] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [248] setlocal 8 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [250] getprop 34 .............................. <pDirection>
  [252] pusharglist 1 ........................... <pDirection>
  [254] extcall 10 .............................. <voidp(pDirection)>
  [256] not ..................................... <not voidp(pDirection)>
  [257] jmpifz [322] ............................ if not voidp(pDirection) then / else
  [260] getprop 34 .............................. <pDirection>
  [262] pusharglist 1 ........................... <pDirection>
  [264] extcall 14 .............................. <count(pDirection)>
  [266] getlocal 5 .............................. <j>
  [268] gteq .................................... <count(pDirection) >= j>
  [269] jmpifz [297] ............................ if count(pDirection) >= j then / else
  [272] getlocal 8 .............................. <tMemNameA>
  [274] pushcons 18 ............................. <"_">
  [276] joinstr ................................. <tMemNameA & "_">
  [277] getprop 34 .............................. <pDirection>
  [279] getlocal 5 .............................. <j>
  [281] pusharglist 2 ........................... <pDirection, j>
  [283] objcall 9 ............................... <pDirection[j]>
  [285] joinstr ................................. <tMemNameA & "_" & pDirection[j]>
  [286] pushcons 18 ............................. <"_">
  [288] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_">
  [289] getprop 6 ............................... <pAnimFrame>
  [291] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame>
  [292] setlocal 9 .............................. tMemName = tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame
  [294] jmp [319]
  [297] getlocal 8 .............................. <tMemNameA>
  [299] pushcons 18 ............................. <"_">
  [301] joinstr ................................. <tMemNameA & "_">
  [302] getprop 34 .............................. <pDirection>
  [304] pushint8 1 .............................. <1>
  [306] pusharglist 2 ........................... <pDirection, 1>
  [308] objcall 9 ............................... <pDirection[1]>
  [310] joinstr ................................. <tMemNameA & "_" & pDirection[1]>
  [311] pushcons 18 ............................. <"_">
  [313] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_">
  [314] getprop 6 ............................... <pAnimFrame>
  [316] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame>
  [317] setlocal 9 .............................. tMemName = tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame
  [319] jmp [332]
  [322] getlocal 8 .............................. <tMemNameA>
  [324] pushcons 18 ............................. <"_">
  [326] joinstr ................................. <tMemNameA & "_">
  [327] getprop 6 ............................... <pAnimFrame>
  [329] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [330] setlocal 9 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [332] getlocal 9 .............................. <tMemName>
  [334] pusharglist 1 ........................... <tMemName>
  [336] extcall 37 .............................. <getmemnum(tMemName)>
  [338] setlocal 3 .............................. tMemNum = getmemnum(tMemName)
  [340] getlocal 9 .............................. <tMemName>
  [342] setlocal 10 ............................. tOldMemName = tMemName
  [344] getlocal 3 .............................. <tMemNum>
  [346] not ..................................... <not tMemNum>
  [347] jmpifz [368] ............................ if not tMemNum then
  [350] getlocal 8 .............................. <tMemNameA>
  [352] pushcons 20 ............................. <"_0_">
  [354] joinstr ................................. <tMemNameA & "_0_">
  [355] getprop 6 ............................... <pAnimFrame>
  [357] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [358] setlocal 9 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [360] getlocal 9 .............................. <tMemName>
  [362] pusharglist 1 ........................... <tMemName>
  [364] extcall 37 .............................. <getmemnum(tMemName)>
  [366] setlocal 3 .............................. tMemNum = getmemnum(tMemName)
  [368] getlocal 3 .............................. <tMemNum>
  [370] not ..................................... <not tMemNum>
  [371] getlocal 5 .............................. <j>
  [373] pushint8 1 .............................. <1>
  [375] eq ...................................... <j = 1>
  [376] and ..................................... <not tMemNum and (j = 1)>
  [377] jmpifz [511] ............................ if not tMemNum and (j = 1) then
  [380] pushzero ................................ <0>
  [381] setlocal 7 .............................. tFound = 0
  [383] getprop 34 .............................. <pDirection>
  [385] pusharglist 1 ........................... <pDirection>
  [387] extcall 288 ............................. <listp(pDirection)>
  [390] jmpifz [508] ............................ if listp(pDirection) then
  [393] pushint8 1 .............................. <1>
  [395] setlocal 11
  [397] getlocal 11
  [399] getprop 34 .............................. <pDirection>
  [401] getobjprop 14 ........................... <pDirection.count>
  [403] lteq
  [404] jmpifz [440] ............................ repeat with tdir = 1 to pDirection.count
  [407] getprop 34 .............................. <pDirection>
  [409] getlocal 11 ............................. <tdir>
  [411] getprop 34 .............................. <pDirection>
  [413] getlocal 11 ............................. <tdir>
  [415] pusharglist 2 ........................... <pDirection, tdir>
  [417] objcall 9 ............................... <pDirection[tdir]>
  [419] pushint8 1 .............................. <1>
  [421] add ..................................... <pDirection[tdir] + 1>
  [422] pusharglist 1 ........................... <pDirection[tdir] + 1>
  [424] extcall 451 ............................. <integer(pDirection[tdir] + 1)>
  [427] pusharglistnoret 3 ...................... <pDirection, tdir, integer(pDirection[tdir] + 1)>
  [429] objcall 173 ............................. pDirection[tdir] = integer(pDirection[tdir] + 1)
  [431] pushint8 1
  [433] getlocal 11
  [435] add
  [436] setlocal 11
  [438] endrepeat [397]
  [440] getprop 34 .............................. <pDirection>
  [442] pushint8 1 .............................. <1>
  [444] pusharglist 2 ........................... <pDirection, 1>
  [446] objcall 9 ............................... <pDirection[1]>
  [448] pushint8 8 .............................. <8>
  [450] eq ...................................... <pDirection[1] = 8>
  [451] jmpifz [508] ............................ if pDirection[1] = 8 then
  [454] getparam 0 .............................. <me>
  [456] pushcons 21 ............................. <"Couldn't define members:">
  [458] getlocal 0 .............................. <tClass>
  [460] joinpadstr .............................. <"Couldn't define members:" && tClass>
  [461] pushsymb 1427 ........................... <#solveMembers>
  [464] pusharglistnoret 3 ...................... <me, "Couldn't define members:" && tClass, #solveMembers>
  [466] extcall 161 ............................. error(me, "Couldn't define members:" && tClass, #solveMembers)
  [468] getprop 977 ............................. <pXFactor>
  [471] pushint8 32 ............................. <32>
  [473] eq ...................................... <pXFactor = 32>
  [474] jmpifz [488] ............................ if pXFactor = 32 then / else
  [477] pushcons 22 ............................. <"s_room_object_placeholder">
  [479] pusharglist 1 ........................... <"s_room_object_placeholder">
  [481] extcall 37 .............................. <getmemnum("s_room_object_placeholder")>
  [483] setlocal 3 .............................. tMemNum = getmemnum("s_room_object_placeholder")
  [485] jmp [496]
  [488] pushcons 23 ............................. <"room_object_placeholder">
  [490] pusharglist 1 ........................... <"room_object_placeholder">
  [492] extcall 37 .............................. <getmemnum("room_object_placeholder")>
  [494] setlocal 3 .............................. tMemNum = getmemnum("room_object_placeholder")
  [496] pushzero ................................ <0>
  [497] pushzero ................................ <0>
  [498] pushzero ................................ <0>
  [499] pusharglist 3 ........................... <[0, 0, 0]>
  [501] pushlist ................................ <[0, 0, 0]>
  [502] setprop 34 .............................. pDirection = [0, 0, 0]
  [504] pushint8 1 .............................. <1>
  [506] setlocal 7 .............................. tFound = 1
  [508] jmp [515] ............................... next repeat
  [511] pushint8 1 .............................. <1>
  [513] setlocal 7 .............................. tFound = 1
  [515] endrepeat [182]
  [518] getlocal 3 .............................. <tMemNum>
  [520] pushzero ................................ <0>
  [521] nteq .................................... <tMemNum <> 0>
  [522] jmpifz [1012] ........................... if tMemNum <> 0 then
  [525] getprop 15 .............................. <pSprList>
  [527] pusharglist 1 ........................... <pSprList>
  [529] extcall 14 .............................. <count(pSprList)>
  [531] getlocal 5 .............................. <j>
  [533] gteq .................................... <count(pSprList) >= j>
  [534] jmpifz [550] ............................ if count(pSprList) >= j then / else
  [537] getprop 15 .............................. <pSprList>
  [539] getlocal 5 .............................. <j>
  [541] pusharglist 2 ........................... <pSprList, j>
  [543] objcall 9 ............................... <pSprList[j]>
  [545] setlocal 2 .............................. tSpr = pSprList[j]
  [547] jmp [645]
  [550] pushsymb 949 ............................ <#room>
  [553] pusharglist 1 ........................... <#room>
  [555] extcall 260 ............................. <getThread(#room)>
  [558] pusharglist 1 ........................... <getThread(#room)>
  [560] objcall 597 ............................. <getThread(#room).getInterface()>
  [563] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [565] objcall 156 ............................. <getThread(#room).getInterface().getID()>
  [567] setlocal 12 ............................. tTargetID = getThread(#room).getInterface().getID()
  [569] getparam 0 .............................. <me>
  [571] pusharglist 1 ........................... <me>
  [573] objcall 156 ............................. <me.getID()>
  [575] pusharglist 1 ........................... <me.getID()>
  [577] extcall 358 ............................. <reserveSprite(me.getID())>
  [580] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [582] extcall 182 ............................. <sprite(reserveSprite(me.getID()))>
  [584] setlocal 2 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [586] getprop 15 .............................. <pSprList>
  [588] getlocal 2 .............................. <tSpr>
  [590] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [592] objcall 186 ............................. pSprList.add(tSpr)
  [594] getlocal 2 .............................. <tSpr>
  [596] getobjprop 18 ........................... <tSpr.spriteNum>
  [598] getparam 0 .............................. <me>
  [600] pusharglist 1 ........................... <me>
  [602] objcall 156 ............................. <me.getID()>
  [604] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [606] extcall 363 ............................. setEventBroker(tSpr.spriteNum, me.getID())
  [609] getlocal 2 .............................. <tSpr>
  [611] pushsymb 111 ............................ <#eventProcActiveObj>
  [613] getlocal 12 ............................. <tTargetID>
  [615] pushsymb 180 ............................ <#mouseDown>
  [617] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveObj, tTargetID, #mouseDown>
  [619] objcall 179 ............................. tSpr.registerProcedure(#eventProcActiveObj, tTargetID, #mouseDown)
  [621] getlocal 2 .............................. <tSpr>
  [623] pushsymb 103 ............................ <#eventProcActiveRollOver>
  [625] getlocal 12 ............................. <tTargetID>
  [627] pushsymb 212 ............................ <#mouseEnter>
  [629] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveRollOver, tTargetID, #mouseEnter>
  [631] objcall 179 ............................. tSpr.registerProcedure(#eventProcActiveRollOver, tTargetID, #mouseEnter)
  [633] getlocal 2 .............................. <tSpr>
  [635] pushsymb 103 ............................ <#eventProcActiveRollOver>
  [637] getlocal 12 ............................. <tTargetID>
  [639] pushsymb 213 ............................ <#mouseLeave>
  [641] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveRollOver, tTargetID, #mouseLeave>
  [643] objcall 179 ............................. tSpr.registerProcedure(#eventProcActiveRollOver, tTargetID, #mouseLeave)
  [645] getprop 1011 ............................ <pLoczList>
  [648] getobjprop 14 ........................... <pLoczList.count>
  [650] getprop 15 .............................. <pSprList>
  [652] getobjprop 14 ........................... <pSprList.count>
  [654] lt ...................................... <pLoczList.count < pSprList.count>
  [655] jmpifz [668] ............................ if pLoczList.count < pSprList.count then
  [658] getprop 1011 ............................ <pLoczList>
  [661] pusharglist 0 ........................... <[]>
  [663] pushlist ................................ <[]>
  [664] pusharglistnoret 2 ...................... <pLoczList, []>
  [666] objcall 186 ............................. pLoczList.add([])
  [668] getprop 1012 ............................ <pLocShiftList>
  [671] getobjprop 14 ........................... <pLocShiftList.count>
  [673] getprop 15 .............................. <pSprList>
  [675] getobjprop 14 ........................... <pSprList.count>
  [677] lt ...................................... <pLocShiftList.count < pSprList.count>
  [678] jmpifz [691] ............................ if pLocShiftList.count < pSprList.count then
  [681] getprop 1012 ............................ <pLocShiftList>
  [684] pusharglist 0 ........................... <[]>
  [686] pushlist ................................ <[]>
  [687] pusharglistnoret 2 ...................... <pLocShiftList, []>
  [689] objcall 186 ............................. pLocShiftList.add([])
  [691] pushzero ................................ <0>
  [692] setlocal 11
  [694] getlocal 11
  [696] pushint8 7 .............................. <7>
  [698] lteq
  [699] jmpifz [777] ............................ repeat with tdir = 0 to 7
  [702] getprop 1011 ............................ <pLoczList>
  [705] pusharglist 1 ........................... <pLoczList>
  [707] objcall 1454 ............................ <pLoczList.getLast()>
  [710] getparam 0 .............................. <me>
  [712] getlocal 4 .............................. <i>
  [714] pusharglist 1 ........................... <i>
  [716] extcall 19 .............................. <numToChar(i)>
  [718] getlocal 11 ............................. <tdir>
  [720] getlocal 0 .............................. <tClass>
  [722] pusharglist 4 ........................... <me, numToChar(i), tdir, tClass>
  [724] objcall 1425 ............................ <me.solveLocZ(numToChar(i), tdir, tClass)>
  [727] pusharglist 1 ........................... <me.solveLocZ(numToChar(i), tdir, tClass)>
  [729] extcall 451 ............................. <integer(me.solveLocZ(numToChar(i), tdir, tClass))>
  [732] getlocal 6 .............................. <tLoczAdjust>
  [734] add ..................................... <integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust>
  [735] pusharglistnoret 2 ...................... <pLoczList.getLast(), integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust>
  [737] objcall 186 ............................. pLoczList.getLast().add(integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust)
  [739] getprop 1012 ............................ <pLocShiftList>
  [742] pusharglist 1 ........................... <pLocShiftList>
  [744] objcall 1454 ............................ <pLocShiftList.getLast()>
  [747] getparam 0 .............................. <me>
  [749] getlocal 4 .............................. <i>
  [751] pusharglist 1 ........................... <i>
  [753] extcall 19 .............................. <numToChar(i)>
  [755] getlocal 11 ............................. <tdir>
  [757] getlocal 0 .............................. <tClass>
  [759] pusharglist 4 ........................... <me, numToChar(i), tdir, tClass>
  [761] objcall 1426 ............................ <me.solveLocShift(numToChar(i), tdir, tClass)>
  [764] pusharglistnoret 2 ...................... <pLocShiftList.getLast(), me.solveLocShift(numToChar(i), tdir, tClass)>
  [766] objcall 186 ............................. pLocShiftList.getLast().add(me.solveLocShift(numToChar(i), tdir, tClass))
  [768] pushint8 1
  [770] getlocal 11
  [772] add
  [773] setlocal 11
  [775] endrepeat [694]
  [777] getlocal 6 .............................. <tLoczAdjust>
  [779] pushint8 1 .............................. <1>
  [781] add ..................................... <tLoczAdjust + 1>
  [782] setlocal 6 .............................. tLoczAdjust = tLoczAdjust + 1
  [784] getlocal 2 .............................. <tSpr>
  [786] pusharglist 1 ........................... <tSpr>
  [788] extcall 10 .............................. <voidp(tSpr)>
  [790] not ..................................... <not voidp(tSpr)>
  [791] getlocal 2 .............................. <tSpr>
  [793] pushzero ................................ <0>
  [794] pusharglist 1 ........................... <0>
  [796] extcall 182 ............................. <sprite(0)>
  [798] nteq .................................... <tSpr <> sprite(0)>
  [799] and ..................................... <not voidp(tSpr) and (tSpr <> sprite(0))>
  [800] jmpifz [997] ............................ if not voidp(tSpr) and (tSpr <> sprite(0)) then / else
  [803] getlocal 3 .............................. <tMemNum>
  [805] pushint8 1 .............................. <1>
  [807] lt ...................................... <tMemNum < 1>
  [808] jmpifz [835] ............................ if tMemNum < 1 then
  [811] getlocal 3 .............................. <tMemNum>
  [813] pusharglist 1 ........................... <tMemNum>
  [815] extcall 36 .............................. <abs(tMemNum)>
  [817] setlocal 3 .............................. tMemNum = abs(tMemNum)
  [819] getlocal 2 .............................. <tSpr>
  [821] pushint16 180 ........................... <180>
  [824] setobjprop 1021 ......................... tSpr.rotation = 180
  [827] getlocal 2 .............................. <tSpr>
  [829] pushint16 180 ........................... <180>
  [832] setobjprop 1022 ......................... tSpr.skew = 180
  [835] getlocal 2 .............................. <tSpr>
  [837] getlocal 3 .............................. <tMemNum>
  [839] setobjprop 1052 ......................... tSpr.castNum = tMemNum
  [842] getlocal 2 .............................. <tSpr>
  [844] getlocal 3 .............................. <tMemNum>
  [846] pusharglist 1 ........................... <tMemNum>
  [848] extcall 30 .............................. <member(tMemNum)>
  [850] getobjprop 252 .......................... <member(tMemNum).width>
  [852] setobjprop 252 .......................... tSpr.width = member(tMemNum).width
  [854] getlocal 2 .............................. <tSpr>
  [856] getlocal 3 .............................. <tMemNum>
  [858] pusharglist 1 ........................... <tMemNum>
  [860] extcall 30 .............................. <member(tMemNum)>
  [862] getobjprop 291 .......................... <member(tMemNum).height>
  [865] setobjprop 291 .......................... tSpr.height = member(tMemNum).height
  [868] getlocal 2 .............................. <tSpr>
  [870] getparam 0 .............................. <me>
  [872] getlocal 4 .............................. <i>
  [874] pusharglist 1 ........................... <i>
  [876] extcall 19 .............................. <numToChar(i)>
  [878] getlocal 0 .............................. <tClass>
  [880] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [882] objcall 1423 ............................ <me.solveInk(numToChar(i), tClass)>
  [885] setobjprop 419 .......................... tSpr.ink = me.solveInk(numToChar(i), tClass)
  [888] getlocal 2 .............................. <tSpr>
  [890] getparam 0 .............................. <me>
  [892] getlocal 4 .............................. <i>
  [894] pusharglist 1 ........................... <i>
  [896] extcall 19 .............................. <numToChar(i)>
  [898] getlocal 0 .............................. <tClass>
  [900] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [902] objcall 1424 ............................ <me.solveBlend(numToChar(i), tClass)>
  [905] setobjprop 362 .......................... tSpr.blend = me.solveBlend(numToChar(i), tClass)
  [908] getlocal 5 .............................. <j>
  [910] getprop 1428 ............................ <pPartColors>
  [913] getobjprop 14 ........................... <pPartColors.count>
  [915] lteq .................................... <j <= pPartColors.count>
  [916] jmpifz [994] ............................ if j <= pPartColors.count then
  [919] getprop 1428 ............................ <pPartColors>
  [922] getlocal 5 .............................. <j>
  [924] pusharglist 2 ........................... <pPartColors, j>
  [926] objcall 9 ............................... <pPartColors[j]>
  [928] pusharglist 1 ........................... <pPartColors[j]>
  [930] extcall 453 ............................. <string(pPartColors[j])>
  [933] pushsymb 450 ............................ <#char>
  [936] pushint8 1 .............................. <1>
  [938] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [940] objcall 33 .............................. <string(pPartColors[j]).char[1]>
  [942] pushcons 24 ............................. <"#">
  [944] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [945] jmpifz [970] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [948] getlocal 2 .............................. <tSpr>
  [950] getprop 1428 ............................ <pPartColors>
  [953] getlocal 5 .............................. <j>
  [955] pusharglist 2 ........................... <pPartColors, j>
  [957] objcall 9 ............................... <pPartColors[j]>
  [959] pusharglist 1 ........................... <pPartColors[j]>
  [961] extcall 312 ............................. <rgb(pPartColors[j])>
  [964] setobjprop 311 .......................... tSpr.bgColor = rgb(pPartColors[j])
  [967] jmp [994]
  [970] getlocal 2 .............................. <tSpr>
  [972] getprop 1428 ............................ <pPartColors>
  [975] getlocal 5 .............................. <j>
  [977] pusharglist 2 ........................... <pPartColors, j>
  [979] objcall 9 ............................... <pPartColors[j]>
  [981] pusharglist 1 ........................... <pPartColors[j]>
  [983] extcall 451 ............................. <integer(pPartColors[j])>
  [986] pusharglist 1 ........................... <integer(pPartColors[j])>
  [988] extcall 1067 ............................ <paletteIndex(integer(pPartColors[j]))>
  [991] setobjprop 311 .......................... tSpr.bgColor = paletteIndex(integer(pPartColors[j]))
  [994] jmp [1012]
  [997] getparam 0 .............................. <me>
  [999] pushcons 25 ............................. <"Out of sprites!!!">
  [1001] pushsymb 1427 .......................... <#solveMembers>
  [1004] pusharglist 3 .......................... <me, "Out of sprites!!!", #solveMembers>
  [1006] extcall 161 ............................ <error(me, "Out of sprites!!!", #solveMembers)>
  [1008] pusharglistnoret 1 ..................... <error(me, "Out of sprites!!!", #solveMembers)>
  [1010] extcall 21 ............................. return error(me, "Out of sprites!!!", #solveMembers)
  [1012] getlocal 4 ............................. <i>
  [1014] pushint8 1 ............................. <1>
  [1016] add .................................... <i + 1>
  [1017] setlocal 4 ............................. i = i + 1
  [1019] getlocal 5 ............................. <j>
  [1021] pushint8 1 ............................. <1>
  [1023] add .................................... <j + 1>
  [1024] setlocal 5 ............................. j = j + 1
  [1026] endrepeat [172]
  [1029] getlocal 0 ............................. <tClass>
  [1031] pushcons 26 ............................ <"_sd">
  [1033] joinstr ................................ <tClass & "_sd">
  [1034] setlocal 13 ............................ tShadowName = tClass & "_sd"
  [1036] getprop 34 ............................. <pDirection>
  [1038] pusharglist 1 .......................... <pDirection>
  [1040] extcall 288 ............................ <listp(pDirection)>
  [1043] jmpifz [1062] .......................... if listp(pDirection) then
  [1046] getlocal 13 ............................ <tShadowName>
  [1048] pushcons 18 ............................ <"_">
  [1050] joinstr ................................ <tShadowName & "_">
  [1051] getprop 34 ............................. <pDirection>
  [1053] pushint8 1 ............................. <1>
  [1055] pusharglist 2 .......................... <pDirection, 1>
  [1057] objcall 9 .............................. <pDirection[1]>
  [1059] joinstr ................................ <tShadowName & "_" & pDirection[1]>
  [1060] setlocal 13 ............................ tShadowName = tShadowName & "_" & pDirection[1]
  [1062] getlocal 13 ............................ <tShadowName>
  [1064] pusharglist 1 .......................... <tShadowName>
  [1066] extcall 37 ............................. <getmemnum(tShadowName)>
  [1068] setlocal 14 ............................ tShadowNum = getmemnum(tShadowName)
  [1070] getlocal 14 ............................ <tShadowNum>
  [1072] not .................................... <not tShadowNum>
  [1073] getprop 34 ............................. <pDirection>
  [1075] pusharglist 1 .......................... <pDirection>
  [1077] extcall 288 ............................ <listp(pDirection)>
  [1080] and .................................... <not tShadowNum and listp(pDirection)>
  [1081] jmpifz [1095] .......................... if not tShadowNum and listp(pDirection) then
  [1084] getlocal 0 ............................. <tClass>
  [1086] pushcons 26 ............................ <"_sd">
  [1088] joinstr ................................ <tClass & "_sd">
  [1089] pusharglist 1 .......................... <tClass & "_sd">
  [1091] extcall 37 ............................. <getmemnum(tClass & "_sd")>
  [1093] setlocal 14 ............................ tShadowNum = getmemnum(tClass & "_sd")
  [1095] pushsymb 949 ........................... <#room>
  [1098] pusharglist 1 .......................... <#room>
  [1100] extcall 257 ............................ <threadExists(#room)>
  [1103] jmpifz [1136] .......................... if threadExists(#room) then / else
  [1106] pushsymb 949 ........................... <#room>
  [1109] pusharglist 1 .......................... <#room>
  [1111] extcall 260 ............................ <getThread(#room)>
  [1114] setlocal 15 ............................ tRoomThread = getThread(#room)
  [1116] getlocal 15 ............................ <tRoomThread>
  [1118] pusharglist 1 .......................... <tRoomThread>
  [1120] objcall 207 ............................ <tRoomThread.getComponent()>
  [1122] setlocal 16 ............................ tComponent = tRoomThread.getComponent()
  [1124] getlocal 16 ............................ <tComponent>
  [1126] pusharglist 1 .......................... <tComponent>
  [1128] objcall 521 ............................ <tComponent.getShadowManager()>
  [1131] setlocal 17 ............................ tShadowManager = tComponent.getShadowManager()
  [1133] jmp [1141]
  [1136] pushzero ............................... <0>
  [1137] pusharglistnoret 1 ..................... <0>
  [1139] extcall 21 ............................. return 0
  [1141] getparam 0 ............................. <me>
  [1143] pusharglist 1 .......................... <me>
  [1145] objcall 156 ............................ <me.getID()>
  [1147] setlocal 18 ............................ tid = me.getID()
  [1149] pushsymb 233 ........................... <#session>
  [1151] pusharglist 1 .......................... <#session>
  [1153] extcall 153 ............................ <getObject(#session)>
  [1155] pushcons 27 ............................ <"lastroom">
  [1157] pusharglist 2 .......................... <getObject(#session), "lastroom">
  [1159] objcall 234 ............................ <getObject(#session).get("lastroom")>
  [1161] pushsymb 218 ........................... <#type>
  [1163] pusharglist 2 .......................... <getObject(#session).get("lastroom"), #type>
  [1165] objcall 9 .............................. <getObject(#session).get("lastroom")[#type]>
  [1167] setlocal 19 ............................ tRoomType = getObject(#session).get("lastroom")[#type]
  [1169] getlocal 19 ............................ <tRoomType>
  [1171] pushsymb 219 ........................... <#private>
  [1173] nteq ................................... <tRoomType <> #private>
  [1174] jmpifz [1386] .......................... if tRoomType <> #private then / else
  [1177] getlocal 14 ............................ <tShadowNum>
  [1179] pushzero ............................... <0>
  [1180] nteq ................................... <tShadowNum <> 0>
  [1181] jmpifz [1383] .......................... if tShadowNum <> 0 then
  [1184] getlocal 18 ............................ <tid>
  [1186] pusharglist 1 .......................... <tid>
  [1188] extcall 358 ............................ <reserveSprite(tid)>
  [1191] pusharglist 1 .......................... <reserveSprite(tid)>
  [1193] extcall 182 ............................ <sprite(reserveSprite(tid))>
  [1195] setlocal 2 ............................. tSpr = sprite(reserveSprite(tid))
  [1197] getprop 15 ............................. <pSprList>
  [1199] getlocal 2 ............................. <tSpr>
  [1201] pusharglistnoret 2 ..................... <pSprList, tSpr>
  [1203] objcall 186 ............................ pSprList.add(tSpr)
  [1205] getprop 1011 ........................... <pLoczList>
  [1208] pushint16 4000 ......................... <4000>
  [1211] inv .................................... <-4000>
  [1212] pushint16 4000 ......................... <4000>
  [1215] inv .................................... <-4000>
  [1216] pushint16 4000 ......................... <4000>
  [1219] inv .................................... <-4000>
  [1220] pushint16 4000 ......................... <4000>
  [1223] inv .................................... <-4000>
  [1224] pushint16 4000 ......................... <4000>
  [1227] inv .................................... <-4000>
  [1228] pushint16 4000 ......................... <4000>
  [1231] inv .................................... <-4000>
  [1232] pushint16 4000 ......................... <4000>
  [1235] inv .................................... <-4000>
  [1236] pusharglist 7 .......................... <[-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1238] pushlist ............................... <[-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1239] pusharglistnoret 2 ..................... <pLoczList, [-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1241] objcall 186 ............................ pLoczList.add([-4000, -4000, -4000, -4000, -4000, -4000, -4000])
  [1243] getprop 1012 ........................... <pLocShiftList>
  [1246] pushzero ............................... <0>
  [1247] pushzero ............................... <0>
  [1248] pushzero ............................... <0>
  [1249] pushzero ............................... <0>
  [1250] pushzero ............................... <0>
  [1251] pushzero ............................... <0>
  [1252] pushzero ............................... <0>
  [1253] pushzero ............................... <0>
  [1254] pusharglist 8 .......................... <[0, 0, 0, 0, 0, 0, 0, 0]>
  [1256] pushlist ............................... <[0, 0, 0, 0, 0, 0, 0, 0]>
  [1257] pusharglistnoret 2 ..................... <pLocShiftList, [0, 0, 0, 0, 0, 0, 0, 0]>
  [1259] objcall 186 ............................ pLocShiftList.add([0, 0, 0, 0, 0, 0, 0, 0])
  [1261] getlocal 14 ............................ <tShadowNum>
  [1263] pushzero ............................... <0>
  [1264] lt ..................................... <tShadowNum < 0>
  [1265] jmpifz [1304] .......................... if tShadowNum < 0 then
  [1268] getlocal 14 ............................ <tShadowNum>
  [1270] pusharglist 1 .......................... <tShadowNum>
  [1272] extcall 36 ............................. <abs(tShadowNum)>
  [1274] setlocal 14 ............................ tShadowNum = abs(tShadowNum)
  [1276] getlocal 2 ............................. <tSpr>
  [1278] pushint16 180 .......................... <180>
  [1281] setobjprop 1021 ........................ tSpr.rotation = 180
  [1284] getlocal 2 ............................. <tSpr>
  [1286] pushint16 180 .......................... <180>
  [1289] setobjprop 1022 ........................ tSpr.skew = 180
  [1292] getlocal 2 ............................. <tSpr>
  [1294] getlocal 2 ............................. <tSpr>
  [1296] getobjprop 255 ......................... <tSpr.locH>
  [1298] getprop 977 ............................ <pXFactor>
  [1301] add .................................... <tSpr.locH + pXFactor>
  [1302] setobjprop 255 ......................... tSpr.locH = tSpr.locH + pXFactor
  [1304] getlocal 2 ............................. <tSpr>
  [1306] getlocal 14 ............................ <tShadowNum>
  [1308] setobjprop 1052 ........................ tSpr.castNum = tShadowNum
  [1311] getlocal 2 ............................. <tSpr>
  [1313] getlocal 14 ............................ <tShadowNum>
  [1315] pusharglist 1 .......................... <tShadowNum>
  [1317] extcall 30 ............................. <member(tShadowNum)>
  [1319] getobjprop 252 ......................... <member(tShadowNum).width>
  [1321] setobjprop 252 ......................... tSpr.width = member(tShadowNum).width
  [1323] getlocal 2 ............................. <tSpr>
  [1325] getlocal 14 ............................ <tShadowNum>
  [1327] pusharglist 1 .......................... <tShadowNum>
  [1329] extcall 30 ............................. <member(tShadowNum)>
  [1331] getobjprop 291 ......................... <member(tShadowNum).height>
  [1334] setobjprop 291 ......................... tSpr.height = member(tShadowNum).height
  [1337] getlocal 2 ............................. <tSpr>
  [1339] getparam 0 ............................. <me>
  [1341] pushcons 28 ............................ <"sd">
  [1343] pusharglist 2 .......................... <me, "sd">
  [1345] objcall 1423 ........................... <me.solveInk("sd")>
  [1348] setobjprop 419 ......................... tSpr.ink = me.solveInk("sd")
  [1351] getlocal 2 ............................. <tSpr>
  [1353] getparam 0 ............................. <me>
  [1355] pushcons 28 ............................ <"sd">
  [1357] pusharglist 2 .......................... <me, "sd">
  [1359] objcall 1424 ........................... <me.solveBlend("sd")>
  [1362] setobjprop 362 ......................... tSpr.blend = me.solveBlend("sd")
  [1365] getlocal 2 ............................. <tSpr>
  [1367] getobjprop 362 ......................... <tSpr.blend>
  [1370] pushint8 100 ........................... <100>
  [1372] eq ..................................... <tSpr.blend = 100>
  [1373] jmpifz [1383] .......................... if tSpr.blend = 100 then
  [1376] getlocal 2 ............................. <tSpr>
  [1378] pushint8 20 ............................ <20>
  [1380] setobjprop 362 ......................... tSpr.blend = 20
  [1383] jmp [1616]
  [1386] getlocal 17 ............................ <tShadowManager>
  [1388] pusharglist 1 .......................... <tShadowManager>
  [1390] extcall 10 ............................. <voidp(tShadowManager)>
  [1392] jmpifz [1400] .......................... if voidp(tShadowManager) then
  [1395] pushzero ............................... <0>
  [1396] pusharglistnoret 1 ..................... <0>
  [1398] extcall 21 ............................. return 0
  [1400] getlocal 17 ............................ <tShadowManager>
  [1402] getlocal 18 ............................ <tid>
  [1404] pusharglistnoret 2 ..................... <tShadowManager, tid>
  [1406] objcall 1431 ........................... tShadowManager.removeShadow(tid)
  [1409] getlocal 14 ............................ <tShadowNum>
  [1411] pushzero ............................... <0>
  [1412] nteq ................................... <tShadowNum <> 0>
  [1413] getprop 498 ............................ <pLocH>
  [1416] getprop 498 ............................ <pLocH>
  [1419] pusharglist 1 .......................... <pLocH>
  [1421] extcall 451 ............................ <integer(pLocH)>
  [1424] eq ..................................... <pLocH = integer(pLocH)>
  [1425] and .................................... <(tShadowNum <> 0) and (pLocH = integer(pLocH))>
  [1426] jmpifz [1616] .......................... if (tShadowNum <> 0) and (pLocH = integer(pLocH)) then
  [1429] pusharglist 0 .......................... <[:]>
  [1431] pushproplist ........................... <[:]>
  [1432] setlocal 20 ............................ tProps = [:]
  [1434] getlocal 15 ............................ <tRoomThread>
  [1436] pusharglist 1 .......................... <tRoomThread>
  [1438] objcall 597 ............................ <tRoomThread.getInterface()>
  [1441] pusharglist 1 .......................... <tRoomThread.getInterface()>
  [1443] objcall 69 ............................. <tRoomThread.getInterface().getGeometry()>
  [1445] getprop 494 ............................ <pLocX>
  [1448] getprop 496 ............................ <pLocY>
  [1451] getprop 498 ............................ <pLocH>
  [1454] pusharglist 4 .......................... <tRoomThread.getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [1456] objcall 967 ............................ <tRoomThread.getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [1459] setlocal 21 ............................ tScreenLocs = tRoomThread.getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [1461] getlocal 14 ............................ <tShadowNum>
  [1463] pusharglist 1 .......................... <tShadowNum>
  [1465] extcall 30 ............................. <member(tShadowNum)>
  [1467] setlocal 22 ............................ tmember = member(tShadowNum)
  [1469] getlocal 14 ............................ <tShadowNum>
  [1471] pushzero ............................... <0>
  [1472] lt ..................................... <tShadowNum < 0>
  [1473] jmpifz [1514] .......................... if tShadowNum < 0 then
  [1476] getlocal 14 ............................ <tShadowNum>
  [1478] pusharglist 1 .......................... <tShadowNum>
  [1480] extcall 36 ............................. <abs(tShadowNum)>
  [1482] setlocal 14 ............................ tShadowNum = abs(tShadowNum)
  [1484] getlocal 14 ............................ <tShadowNum>
  [1486] pusharglist 1 .......................... <tShadowNum>
  [1488] extcall 30 ............................. <member(tShadowNum)>
  [1490] setlocal 22 ............................ tmember = member(tShadowNum)
  [1492] getlocal 20 ............................ <tProps>
  [1494] pushsymb 1455 .......................... <#multiflip>
  [1497] pushint8 1 ............................. <1>
  [1499] pusharglistnoret 3 ..................... <tProps, #multiflip, 1>
  [1501] objcall 173 ............................ tProps[#multiflip] = 1
  [1503] getlocal 20 ............................ <tProps>
  [1505] pushsymb 174 ........................... <#offsetx>
  [1507] getprop 977 ............................ <pXFactor>
  [1510] pusharglistnoret 3 ..................... <tProps, #offsetx, pXFactor>
  [1512] objcall 173 ............................ tProps[#offsetx] = pXFactor
  [1514] getlocal 20 ............................ <tProps>
  [1516] pushsymb 30 ............................ <#member>
  [1518] getlocal 14 ............................ <tShadowNum>
  [1520] pusharglist 1 .......................... <tShadowNum>
  [1522] extcall 30 ............................. <member(tShadowNum)>
  [1524] getobjprop 31 .......................... <member(tShadowNum).name>
  [1526] pusharglistnoret 3 ..................... <tProps, #member, member(tShadowNum).name>
  [1528] objcall 173 ............................ tProps[#member] = member(tShadowNum).name
  [1530] getlocal 20 ............................ <tProps>
  [1532] pushsymb 255 ........................... <#locH>
  [1534] getlocal 21 ............................ <tScreenLocs>
  [1536] pushint8 1 ............................. <1>
  [1538] pusharglist 2 .......................... <tScreenLocs, 1>
  [1540] objcall 9 .............................. <tScreenLocs[1]>
  [1542] pusharglistnoret 3 ..................... <tProps, #locH, tScreenLocs[1]>
  [1544] objcall 173 ............................ tProps[#locH] = tScreenLocs[1]
  [1546] getlocal 20 ............................ <tProps>
  [1548] pushsymb 500 ........................... <#locV>
  [1551] getlocal 21 ............................ <tScreenLocs>
  [1553] pushint8 2 ............................. <2>
  [1555] pusharglist 2 .......................... <tScreenLocs, 2>
  [1557] objcall 9 .............................. <tScreenLocs[2]>
  [1559] pusharglistnoret 3 ..................... <tProps, #locV, tScreenLocs[2]>
  [1561] objcall 173 ............................ tProps[#locV] = tScreenLocs[2]
  [1563] getlocal 20 ............................ <tProps>
  [1565] pushsymb 252 ........................... <#width>
  [1567] getlocal 22 ............................ <tmember>
  [1569] getobjprop 252 ......................... <tmember.width>
  [1571] pusharglistnoret 3 ..................... <tProps, #width, tmember.width>
  [1573] objcall 173 ............................ tProps[#width] = tmember.width
  [1575] getlocal 20 ............................ <tProps>
  [1577] pushsymb 291 ........................... <#height>
  [1580] getlocal 22 ............................ <tmember>
  [1582] getobjprop 291 ......................... <tmember.height>
  [1585] pusharglistnoret 3 ..................... <tProps, #height, tmember.height>
  [1587] objcall 173 ............................ tProps[#height] = tmember.height
  [1589] getlocal 20 ............................ <tProps>
  [1591] pushsymb 386 ........................... <#id>
  [1594] getlocal 18 ............................ <tid>
  [1596] pusharglistnoret 3 ..................... <tProps, #id, tid>
  [1598] objcall 173 ............................ tProps[#id] = tid
  [1600] getlocal 17 ............................ <tShadowManager>
  [1602] getlocal 20 ............................ <tProps>
  [1604] pusharglistnoret 2 ..................... <tShadowManager, tProps>
  [1606] objcall 1456 ........................... tShadowManager.addShadow(tProps)
  [1609] getlocal 17 ............................ <tShadowManager>
  [1611] pusharglistnoret 1 ..................... <tShadowManager>
  [1613] objcall 670 ............................ tShadowManager.render()
  [1616] getprop 15 ............................. <pSprList>
  [1618] getobjprop 14 .......................... <pSprList.count>
  [1620] pushzero ............................... <0>
  [1621] gt ..................................... <pSprList.count > 0>
  [1622] jmpifz [1634] .......................... if pSprList.count > 0 then / else
  [1625] pushint8 1 ............................. <1>
  [1627] pusharglistnoret 1 ..................... <1>
  [1629] extcall 21 ............................. return 1
  [1631] jmp [1652]
  [1634] getparam 0 ............................. <me>
  [1636] pushcons 21 ............................ <"Couldn't define members:">
  [1638] getlocal 0 ............................. <tClass>
  [1640] joinpadstr ............................. <"Couldn't define members:" && tClass>
  [1641] pushsymb 1427 .......................... <#solveMembers>
  [1644] pusharglist 3 .......................... <me, "Couldn't define members:" && tClass, #solveMembers>
  [1646] extcall 161 ............................ <error(me, "Couldn't define members:" && tClass, #solveMembers)>
  [1648] pusharglistnoret 1 ..................... <error(me, "Couldn't define members:" && tClass, #solveMembers)>
  [1650] extcall 21 ............................. return error(me, "Couldn't define members:" && tClass, #solveMembers)
  [1652] ret
end

on updateLocation me
  [  0] pushsymb 949 ............................ <#room>
  [  3] pusharglist 1 ........................... <#room>
  [  5] extcall 260 ............................. <getThread(#room)>
  [  8] pusharglist 1 ........................... <getThread(#room)>
  [ 10] objcall 597 ............................. <getThread(#room).getInterface()>
  [ 13] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 15] objcall 69 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 17] getprop 494 ............................. <pLocX>
  [ 20] getprop 496 ............................. <pLocY>
  [ 23] getprop 498 ............................. <pLocH>
  [ 26] pusharglist 4 ........................... <getThread(#room).getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [ 28] objcall 967 ............................. <getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 31] setlocal 0 .............................. tScreenLocs = getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 33] pushzero ................................ <0>
  [ 34] setlocal 1 .............................. i = 0
  [ 36] getprop 15 .............................. <pSprList>
  [ 38] peek 0
  [ 40] pusharglist 1
  [ 42] extcall 14
  [ 44] pushint8 1
  [ 46] peek 0
  [ 48] peek 2
  [ 50] lteq
  [ 51] jmpifz [300] ............................ repeat with tSpr in pSprList
  [ 54] peek 2
  [ 56] peek 1
  [ 58] pusharglist 2
  [ 60] extcall 9
  [ 62] setlocal 2
  [ 64] getlocal 1 .............................. <i>
  [ 66] pushint8 1 .............................. <1>
  [ 68] add ..................................... <i + 1>
  [ 69] setlocal 1 .............................. i = i + 1
  [ 71] getlocal 2 .............................. <tSpr>
  [ 73] getlocal 0 .............................. <tScreenLocs>
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 79] objcall 9 ............................... <tScreenLocs[1]>
  [ 81] setobjprop 255 .......................... tSpr.locH = tScreenLocs[1]
  [ 83] getlocal 2 .............................. <tSpr>
  [ 85] getlocal 0 .............................. <tScreenLocs>
  [ 87] pushint8 2 .............................. <2>
  [ 89] pusharglist 2 ........................... <tScreenLocs, 2>
  [ 91] objcall 9 ............................... <tScreenLocs[2]>
  [ 93] setobjprop 500 .......................... tSpr.locV = tScreenLocs[2]
  [ 96] getlocal 2 .............................. <tSpr>
  [ 98] getobjprop 1021 ......................... <tSpr.rotation>
  [101] pushint16 180 ........................... <180>
  [104] eq ...................................... <tSpr.rotation = 180>
  [105] jmpifz [120] ............................ if tSpr.rotation = 180 then
  [108] getlocal 2 .............................. <tSpr>
  [110] getlocal 2 .............................. <tSpr>
  [112] getobjprop 255 .......................... <tSpr.locH>
  [114] getprop 977 ............................. <pXFactor>
  [117] add ..................................... <tSpr.locH + pXFactor>
  [118] setobjprop 255 .......................... tSpr.locH = tSpr.locH + pXFactor
  [120] getprop 34 .............................. <pDirection>
  [122] pushint8 1 .............................. <1>
  [124] pusharglist 2 ........................... <pDirection, 1>
  [126] objcall 9 ............................... <pDirection[1]>
  [128] pushzero ................................ <0>
  [129] lt ...................................... <pDirection[1] < 0>
  [130] jmpifz [142] ............................ if pDirection[1] < 0 then
  [133] getprop 34 .............................. <pDirection>
  [135] pushint8 1 .............................. <1>
  [137] pushzero ................................ <0>
  [138] pusharglistnoret 3 ...................... <pDirection, 1, 0>
  [140] objcall 173 ............................. pDirection[1] = 0
  [142] getprop 34 .............................. <pDirection>
  [144] pushint8 1 .............................. <1>
  [146] pusharglist 2 ........................... <pDirection, 1>
  [148] objcall 9 ............................... <pDirection[1]>
  [150] pushint8 1 .............................. <1>
  [152] add ..................................... <pDirection[1] + 1>
  [153] getprop 1012 ............................ <pLocShiftList>
  [156] getlocal 1 .............................. <i>
  [158] pusharglist 2 ........................... <pLocShiftList, i>
  [160] objcall 9 ............................... <pLocShiftList[i]>
  [162] getobjprop 14 ........................... <pLocShiftList[i].count>
  [164] gt ...................................... <(pDirection[1] + 1) > pLocShiftList[i].count>
  [165] jmpifz [177] ............................ if (pDirection[1] + 1) > pLocShiftList[i].count then
  [168] getprop 34 .............................. <pDirection>
  [170] pushint8 1 .............................. <1>
  [172] pushzero ................................ <0>
  [173] pusharglistnoret 3 ...................... <pDirection, 1, 0>
  [175] objcall 173 ............................. pDirection[1] = 0
  [177] getprop 1012 ............................ <pLocShiftList>
  [180] getlocal 1 .............................. <i>
  [182] pusharglist 2 ........................... <pLocShiftList, i>
  [184] objcall 9 ............................... <pLocShiftList[i]>
  [186] getprop 34 .............................. <pDirection>
  [188] pushint8 1 .............................. <1>
  [190] pusharglist 2 ........................... <pDirection, 1>
  [192] objcall 9 ............................... <pDirection[1]>
  [194] pushint8 1 .............................. <1>
  [196] add ..................................... <pDirection[1] + 1>
  [197] pusharglist 2 ........................... <pLocShiftList[i], pDirection[1] + 1>
  [199] objcall 9 ............................... <pLocShiftList[i][pDirection[1] + 1]>
  [201] setlocal 3 .............................. tLocShift = pLocShiftList[i][pDirection[1] + 1]
  [203] getlocal 2 .............................. <tSpr>
  [205] getlocal 2 .............................. <tSpr>
  [207] getobjprop 361 .......................... <tSpr.loc>
  [210] getlocal 3 .............................. <tLocShift>
  [212] add ..................................... <tSpr.loc + tLocShift>
  [213] setobjprop 361 .......................... tSpr.loc = tSpr.loc + tLocShift
  [216] getprop 1011 ............................ <pLoczList>
  [219] getlocal 1 .............................. <i>
  [221] pusharglist 2 ........................... <pLoczList, i>
  [223] objcall 9 ............................... <pLoczList[i]>
  [225] getprop 34 .............................. <pDirection>
  [227] pushint8 1 .............................. <1>
  [229] pusharglist 2 ........................... <pDirection, 1>
  [231] objcall 9 ............................... <pDirection[1]>
  [233] pushint8 1 .............................. <1>
  [235] add ..................................... <pDirection[1] + 1>
  [236] pusharglist 2 ........................... <pLoczList[i], pDirection[1] + 1>
  [238] objcall 9 ............................... <pLoczList[i][pDirection[1] + 1]>
  [240] setlocal 4 .............................. tZ = pLoczList[i][pDirection[1] + 1]
  [242] getprop 1257 ............................ <pCorrectLocZ>
  [245] jmpifz [277] ............................ if pCorrectLocZ then
  [248] getlocal 2 .............................. <tSpr>
  [250] getlocal 0 .............................. <tScreenLocs>
  [252] pushint8 3 .............................. <3>
  [254] pusharglist 2 ........................... <tScreenLocs, 3>
  [256] objcall 9 ............................... <tScreenLocs[3]>
  [258] getprop 498 ............................. <pLocH>
  [261] pushint16 1000 .......................... <1000>
  [264] mul ..................................... <pLocH * 1000>
  [265] add ..................................... <tScreenLocs[3] + (pLocH * 1000)>
  [266] getlocal 4 .............................. <tZ>
  [268] add ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ>
  [269] pushint8 1 .............................. <1>
  [271] sub ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ - 1>
  [272] setobjprop 168 .......................... tSpr.locZ = tScreenLocs[3] + (pLocH * 1000) + tZ - 1
  [274] jmp [295] ............................... next repeat
  [277] getlocal 2 .............................. <tSpr>
  [279] getlocal 0 .............................. <tScreenLocs>
  [281] pushint8 3 .............................. <3>
  [283] pusharglist 2 ........................... <tScreenLocs, 3>
  [285] objcall 9 ............................... <tScreenLocs[3]>
  [287] getlocal 4 .............................. <tZ>
  [289] add ..................................... <tScreenLocs[3] + tZ>
  [290] pushint8 1 .............................. <1>
  [292] sub ..................................... <tScreenLocs[3] + tZ - 1>
  [293] setobjprop 168 .......................... tSpr.locZ = tScreenLocs[3] + tZ - 1
  [295] pushint8 1
  [297] add
  [298] endrepeat [ 46]
  [300] pop 3
  [302] getparam 0 .............................. <me>
  [304] getprop 15 .............................. <pSprList>
  [306] pusharglistnoret 2 ...................... <me, pSprList>
  [308] objcall 1062 ............................ me.relocate(pSprList)
  [311] ret
end
