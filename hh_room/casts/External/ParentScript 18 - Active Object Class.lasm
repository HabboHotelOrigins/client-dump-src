property pClass, pName, pCustom, pSprList, pDirection, pDimensions, pLoczList, pLocShiftList, pPartColors, pAnimFrame, pLocX, pLocY, pLocH, pAltitude, pXFactor, pCorrectLocZ, pSmallMember, pGeometry, pStartloc, pDestLoc, pSlideStartTime, pSlideEndTime, pSlideTimePerTile

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 14 .............................. pClass = EMPTY
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 15 .............................. pName = EMPTY
  [  8] pushcons 0 .............................. <EMPTY>
  [ 10] setprop 16 .............................. pCustom = EMPTY
  [ 12] pusharglist 0 ........................... <[]>
  [ 14] pushlist ................................ <[]>
  [ 15] setprop 18 .............................. pSprList = []
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setprop 28 .............................. pDirection = []
  [ 22] pusharglist 0 ........................... <[]>
  [ 24] pushlist ................................ <[]>
  [ 25] setprop 471 ............................. pDimensions = []
  [ 28] pusharglist 0 ........................... <[]>
  [ 30] pushlist ................................ <[]>
  [ 31] setprop 1050 ............................ pLoczList = []
  [ 34] pusharglist 0 ........................... <[]>
  [ 36] pushlist ................................ <[]>
  [ 37] setprop 1051 ............................ pLocShiftList = []
  [ 40] pusharglist 0 ........................... <[]>
  [ 42] pushlist ................................ <[]>
  [ 43] setprop 1450 ............................ pPartColors = []
  [ 46] pushzero ................................ <0>
  [ 47] setprop 1387 ............................ pAnimFrame = 0
  [ 50] pushzero ................................ <0>
  [ 51] setprop 19 .............................. pLocX = 0
  [ 53] pushzero ................................ <0>
  [ 54] setprop 20 .............................. pLocY = 0
  [ 56] pushzero ................................ <0>
  [ 57] setprop 21 .............................. pLocH = 0
  [ 59] pushfloat32 0.0 ......................... <0.0>
  [ 64] setprop 1451 ............................ pAltitude = 0.0
  [ 67] pushsymb 52 ............................. <#room>
  [ 69] pusharglist 1 ........................... <#room>
  [ 71] extcall 51 .............................. <getThread(#room)>
  [ 73] pusharglist 1 ........................... <getThread(#room)>
  [ 75] objcall 53 .............................. <getThread(#room).getInterface()>
  [ 77] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 79] objcall 54 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 81] getobjprop 50 ........................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [ 83] setprop 50 .............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [ 85] getprop 50 .............................. <pXFactor>
  [ 87] pushint8 32 ............................. <32>
  [ 89] eq ...................................... <pXFactor = 32>
  [ 90] jmpifz [100] ............................ if pXFactor = 32 then / else
  [ 93] pushzero ................................ <0>
  [ 94] setprop 1284 ............................ pCorrectLocZ = 0
  [ 97] jmp [105]
  [100] pushint8 1 .............................. <1>
  [102] setprop 1284 ............................ pCorrectLocZ = 1
  [105] pushint16 500 ........................... <500>
  [108] setprop 1452 ............................ pSlideTimePerTile = 500
  [111] pushint8 1 .............................. <1>
  [113] pusharglistnoret 1 ...................... <1>
  [115] extcall 31 .............................. return 1
  [117] ret
end

on deconstruct me
  [  0] getprop 18 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 33
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 41] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 34
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 36 ........................... <tSpr.spriteNum>
  [ 32] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 34] extcall 35 .............................. releaseSprite(tSpr.spriteNum)
  [ 36] pushint8 1
  [ 38] add
  [ 39] endrepeat [ 10]
  [ 41] pop 3
  [ 43] pushsymb 52 ............................. <#room>
  [ 45] pusharglist 1 ........................... <#room>
  [ 47] extcall 345 ............................. <threadExists(#room)>
  [ 50] jmpifz [104] ............................ if threadExists(#room) then
  [ 53] pushsymb 52 ............................. <#room>
  [ 55] pusharglist 1 ........................... <#room>
  [ 57] extcall 51 .............................. <getThread(#room)>
  [ 59] setlocal 1 .............................. tRoomThread = getThread(#room)
  [ 61] getlocal 1 .............................. <tRoomThread>
  [ 63] pusharglist 1 ........................... <tRoomThread>
  [ 65] objcall 115 ............................. <tRoomThread.getComponent()>
  [ 67] setlocal 2 .............................. tComponent = tRoomThread.getComponent()
  [ 69] getlocal 2 .............................. <tComponent>
  [ 71] pusharglist 1 ........................... <tComponent>
  [ 73] objcall 574 ............................. <tComponent.getShadowManager()>
  [ 76] setlocal 3 .............................. tShadowManager = tComponent.getShadowManager()
  [ 78] getlocal 3 .............................. <tShadowManager>
  [ 80] getparam 0 .............................. <me>
  [ 82] pusharglist 1 ........................... <me>
  [ 84] objcall 75 .............................. <me.getID()>
  [ 86] pusharglistnoret 2 ...................... <tShadowManager, me.getID()>
  [ 88] objcall 1453 ............................ tShadowManager.removeShadow(me.getID())
  [ 91] getlocal 2 .............................. <tComponent>
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglist 1 ........................... <me>
  [ 97] objcall 75 .............................. <me.getID()>
  [ 99] pusharglistnoret 2 ...................... <tComponent, me.getID()>
  [101] objcall 578 ............................. tComponent.removeSlideObject(me.getID())
  [104] pusharglist 0 ........................... <[]>
  [106] pushlist ................................ <[]>
  [107] setprop 18 .............................. pSprList = []
  [109] pushint8 1 .............................. <1>
  [111] pusharglistnoret 1 ...................... <1>
  [113] extcall 31 .............................. return 1
  [115] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 38 ............................. <#class>
  [  4] pusharglist 2 ........................... <tdata, #class>
  [  6] objcall 34 .............................. <tdata[#class]>
  [  8] setprop 14 .............................. pClass = tdata[#class]
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 48 ............................. <#direction>
  [ 14] pusharglist 2 ........................... <tdata, #direction>
  [ 16] objcall 34 .............................. <tdata[#direction]>
  [ 18] setprop 28 .............................. pDirection = tdata[#direction]
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 871 ............................ <#dimensions>
  [ 25] pusharglist 2 ........................... <tdata, #dimensions>
  [ 27] objcall 34 .............................. <tdata[#dimensions]>
  [ 29] setprop 471 ............................. pDimensions = tdata[#dimensions]
  [ 32] getparam 1 .............................. <tdata>
  [ 34] pushsymb 875 ............................ <#altitude>
  [ 37] pusharglist 2 ........................... <tdata, #altitude>
  [ 39] objcall 34 .............................. <tdata[#altitude]>
  [ 41] setprop 1451 ............................ pAltitude = tdata[#altitude]
  [ 44] getparam 1 .............................. <tdata>
  [ 46] pushsymb 39 ............................. <#x>
  [ 48] pusharglist 2 ........................... <tdata, #x>
  [ 50] objcall 34 .............................. <tdata[#x]>
  [ 52] setprop 19 .............................. pLocX = tdata[#x]
  [ 54] getparam 1 .............................. <tdata>
  [ 56] pushsymb 40 ............................. <#y>
  [ 58] pusharglist 2 ........................... <tdata, #y>
  [ 60] objcall 34 .............................. <tdata[#y]>
  [ 62] setprop 20 .............................. pLocY = tdata[#y]
  [ 64] getprop 1451 ............................ <pAltitude>
  [ 67] setprop 21 .............................. pLocH = pAltitude
  [ 69] getparam 0 .............................. <me>
  [ 71] getparam 1 .............................. <tdata>
  [ 73] pushsymb 876 ............................ <#colors>
  [ 76] pusharglist 2 ........................... <tdata, #colors>
  [ 78] objcall 34 .............................. <tdata[#colors]>
  [ 80] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [ 82] objcall 1445 ............................ me.solveColors(tdata[#colors])
  [ 85] getparam 0 .............................. <me>
  [ 87] pusharglist 1 ........................... <me>
  [ 89] objcall 10 .............................. <me.solveMembers()>
  [ 91] pushzero ................................ <0>
  [ 92] eq ...................................... <me.solveMembers() = 0>
  [ 93] jmpifz [101] ............................ if me.solveMembers() = 0 then
  [ 96] pushzero ................................ <0>
  [ 97] pusharglistnoret 1 ...................... <0>
  [ 99] extcall 31 .............................. return 0
  [101] getparam 0 .............................. <me>
  [103] getparam 1 .............................. <tdata>
  [105] pushsymb 877 ............................ <#props>
  [108] pusharglist 2 ........................... <tdata, #props>
  [110] objcall 34 .............................. <tdata[#props]>
  [112] pusharglist 2 ........................... <me, tdata[#props]>
  [114] objcall 559 ............................. <me.prepare(tdata[#props])>
  [117] pushzero ................................ <0>
  [118] eq ...................................... <me.prepare(tdata[#props]) = 0>
  [119] jmpifz [127] ............................ if me.prepare(tdata[#props]) = 0 then
  [122] pushzero ................................ <0>
  [123] pusharglistnoret 1 ...................... <0>
  [125] extcall 31 .............................. return 0
  [127] getparam 0 .............................. <me>
  [129] pusharglistnoret 1 ...................... <me>
  [131] objcall 13 .............................. me.updateLocation()
  [133] pushint8 1 .............................. <1>
  [135] pusharglistnoret 1 ...................... <1>
  [137] extcall 31 .............................. return 1
  [139] ret
end

on getInfo me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tInfo = [:]
  [  5] getlocal 0 .............................. <tInfo>
  [  7] pushsymb 38 ............................. <#class>
  [  9] getprop 14 .............................. <pClass>
  [ 11] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 13] objcall 59 .............................. tInfo[#class] = pClass
  [ 15] getlocal 0 .............................. <tInfo>
  [ 17] pushsymb 58 ............................. <#name>
  [ 19] pushcons 1 .............................. <"furni_">
  [ 21] getprop 14 .............................. <pClass>
  [ 23] joinstr ................................. <"furni_" & pClass>
  [ 24] pushcons 2 .............................. <"_name">
  [ 26] joinstr ................................. <"furni_" & pClass & "_name">
  [ 27] pushcons 1 .............................. <"furni_">
  [ 29] getprop 14 .............................. <pClass>
  [ 31] joinstr ................................. <"furni_" & pClass>
  [ 32] pushcons 2 .............................. <"_name">
  [ 34] joinstr ................................. <"furni_" & pClass & "_name">
  [ 35] pusharglist 2 ........................... <"furni_" & pClass & "_name", "furni_" & pClass & "_name">
  [ 37] extcall 55 .............................. <getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")>
  [ 39] pusharglistnoret 3 ...................... <tInfo, #name, getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")>
  [ 41] objcall 59 .............................. tInfo[#name] = getText("furni_" & pClass & "_name", "furni_" & pClass & "_name")
  [ 43] getlocal 0 .............................. <tInfo>
  [ 45] pushsymb 60 ............................. <#custom>
  [ 47] pushcons 1 .............................. <"furni_">
  [ 49] getprop 14 .............................. <pClass>
  [ 51] joinstr ................................. <"furni_" & pClass>
  [ 52] pushcons 3 .............................. <"_desc">
  [ 54] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 55] pushcons 1 .............................. <"furni_">
  [ 57] getprop 14 .............................. <pClass>
  [ 59] joinstr ................................. <"furni_" & pClass>
  [ 60] pushcons 3 .............................. <"_desc">
  [ 62] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 63] pusharglist 2 ........................... <"furni_" & pClass & "_desc", "furni_" & pClass & "_desc">
  [ 65] extcall 55 .............................. <getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 67] pusharglistnoret 3 ...................... <tInfo, #custom, getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 69] objcall 59 .............................. tInfo[#custom] = getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")
  [ 71] getlocal 0 .............................. <tInfo>
  [ 73] pushsymb 61 ............................. <#smallmember>
  [ 75] getprop 1455 ............................ <pSmallMember>
  [ 78] pusharglistnoret 3 ...................... <tInfo, #smallmember, pSmallMember>
  [ 80] objcall 59 .............................. tInfo[#smallmember] = pSmallMember
  [ 82] getlocal 0 .............................. <tInfo>
  [ 84] pushsymb 63 ............................. <#image>
  [ 86] pushcons 4 .............................. <"Preview_renderer">
  [ 88] pusharglist 1 ........................... <"Preview_renderer">
  [ 90] extcall 130 ............................. <getObject("Preview_renderer")>
  [ 92] pusharglist 0 ........................... <>
  [ 94] extcall 30 .............................. <VOID>
  [ 96] getprop 1450 ............................ <pPartColors>
  [ 99] pusharglist 0 ........................... <>
  [101] extcall 30 .............................. <VOID>
  [103] getprop 14 .............................. <pClass>
  [105] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, pPartColors, VOID, pClass>
  [107] objcall 1156 ............................ <getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)>
  [110] pusharglistnoret 3 ...................... <tInfo, #image, getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)>
  [112] objcall 59 .............................. tInfo[#image] = getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)
  [114] getlocal 0 .............................. <tInfo>
  [116] pusharglistnoret 1 ...................... <tInfo>
  [118] extcall 31 .............................. return tInfo
  [120] ret
end

on getLocation me
  [  0] getprop 19 .............................. <pLocX>
  [  2] getprop 20 .............................. <pLocY>
  [  4] getprop 21 .............................. <pLocH>
  [  6] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [  8] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [  9] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 11] extcall 31 .............................. return [pLocX, pLocY, pLocH]
  [ 13] ret
end

on getCustom me
  [  0] pushcons 1 .............................. <"furni_">
  [  2] getprop 14 .............................. <pClass>
  [  4] joinstr ................................. <"furni_" & pClass>
  [  5] pushcons 3 .............................. <"_desc">
  [  7] joinstr ................................. <"furni_" & pClass & "_desc">
  [  8] pushcons 1 .............................. <"furni_">
  [ 10] getprop 14 .............................. <pClass>
  [ 12] joinstr ................................. <"furni_" & pClass>
  [ 13] pushcons 3 .............................. <"_desc">
  [ 15] joinstr ................................. <"furni_" & pClass & "_desc">
  [ 16] pusharglist 2 ........................... <"furni_" & pClass & "_desc", "furni_" & pClass & "_desc">
  [ 18] extcall 55 .............................. <getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")>
  [ 20] setlocal 0 .............................. tCustom = getText("furni_" & pClass & "_desc", "furni_" & pClass & "_desc")
  [ 22] getlocal 0 .............................. <tCustom>
  [ 24] pusharglistnoret 1 ...................... <tCustom>
  [ 26] extcall 31 .............................. return tCustom
  [ 28] ret
end

on getSprites me
  [  0] getprop 18 .............................. <pSprList>
  [  2] pusharglistnoret 1 ...................... <pSprList>
  [  4] extcall 31 .............................. return pSprList
  [  6] ret
end

on select me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 31 .............................. return 0
  [  5] ret
end

on moveTo me, tX, tY, tH
  [  0] getparam 1 .............................. <tX>
  [  2] setprop 19 .............................. pLocX = tX
  [  4] getparam 2 .............................. <tY>
  [  6] setprop 20 .............................. pLocY = tY
  [  8] getparam 3 .............................. <tH>
  [ 10] getprop 1451 ............................ <pAltitude>
  [ 13] add ..................................... <tH + pAltitude>
  [ 14] setprop 21 .............................. pLocH = tH + pAltitude
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 1 ...................... <me>
  [ 20] objcall 13 .............................. me.updateLocation()
  [ 22] ret
end

on moveBy me, tX, tY, tH
  [  0] getprop 19 .............................. <pLocX>
  [  2] getparam 1 .............................. <tX>
  [  4] add ..................................... <pLocX + tX>
  [  5] setprop 19 .............................. pLocX = pLocX + tX
  [  7] getprop 20 .............................. <pLocY>
  [  9] getparam 2 .............................. <tY>
  [ 11] add ..................................... <pLocY + tY>
  [ 12] setprop 20 .............................. pLocY = pLocY + tY
  [ 14] getprop 21 .............................. <pLocH>
  [ 16] getparam 3 .............................. <tH>
  [ 18] add ..................................... <pLocH + tH>
  [ 19] setprop 21 .............................. pLocH = pLocH + tH
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglistnoret 1 ...................... <me>
  [ 25] objcall 13 .............................. me.updateLocation()
  [ 27] ret
end

on rotate me, tChange
  [  0] getprop 18 .............................. <pSprList>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglist 2 ........................... <pSprList, 1>
  [  6] objcall 34 .............................. <pSprList[1]>
  [  8] pusharglist 1 ........................... <pSprList[1]>
  [ 10] extcall 73 .............................. <sprite(pSprList[1])>
  [ 12] getchainedprop 64 ....................... <sprite(pSprList[1]).member>
  [ 14] getobjprop 58 ........................... <sprite(pSprList[1]).member.name>
  [ 16] setlocal 0 .............................. tName = sprite(pSprList[1]).member.name
  [ 18] getprop 28 .............................. <pDirection>
  [ 20] setlocal 1 .............................. tDirection = pDirection
  [ 22] getparam 1 .............................. <tChange>
  [ 24] pusharglist 1 ........................... <tChange>
  [ 26] extcall 120 ............................. <voidp(tChange)>
  [ 28] jmpifz [ 35] ............................ if voidp(tChange) then
  [ 31] pushint8 2 .............................. <2>
  [ 33] setparam 1 .............................. tChange = 2
  [ 35] pushzero ................................ <0>
  [ 36] setlocal 2
  [ 38] getlocal 2
  [ 40] pushint8 3 .............................. <3>
  [ 42] lteq
  [ 43] jmpifz [133] ............................ repeat with j = 0 to 3
  [ 46] getlocal 1 .............................. <tDirection>
  [ 48] getparam 1 .............................. <tChange>
  [ 50] add ..................................... <tDirection + tChange>
  [ 51] getlocal 2 .............................. <j>
  [ 53] add ..................................... <tDirection + tChange + j>
  [ 54] pushint8 8 .............................. <8>
  [ 56] mod ..................................... <(tDirection + tChange + j) mod 8>
  [ 57] setlocal 1 .............................. tDirection = (tDirection + tChange + j) mod 8
  [ 59] getlocal 1 .............................. <tDirection>
  [ 61] pushint8 1 .............................. <1>
  [ 63] pusharglist 2 ........................... <tDirection, 1>
  [ 65] objcall 34 .............................. <tDirection[1]>
  [ 67] pushzero ................................ <0>
  [ 68] lt ...................................... <tDirection[1] < 0>
  [ 69] jmpifz [ 79] ............................ if tDirection[1] < 0 then
  [ 72] pushint8 8 .............................. <8>
  [ 74] getlocal 1 .............................. <tDirection>
  [ 76] add ..................................... <8 + tDirection>
  [ 77] setlocal 1 .............................. tDirection = 8 + tDirection
  [ 79] getlocal 0 .............................. <tName>
  [ 81] pushsymb 66 ............................. <#char>
  [ 83] pushint8 1 .............................. <1>
  [ 85] getlocal 0 .............................. <tName>
  [ 87] pusharglist 1 ........................... <tName>
  [ 89] extcall 67 .............................. <length(tName)>
  [ 91] pushint8 3 .............................. <3>
  [ 93] sub ..................................... <length(tName) - 3>
  [ 94] pusharglist 4 ........................... <tName, #char, 1, length(tName) - 3>
  [ 96] objcall 68 .............................. <tName.char[1..length(tName) - 3]>
  [ 98] getlocal 1 .............................. <tDirection>
  [100] pushint8 1 .............................. <1>
  [102] pusharglist 2 ........................... <tDirection, 1>
  [104] objcall 34 .............................. <tDirection[1]>
  [106] joinstr ................................. <tName.char[1..length(tName) - 3] & tDirection[1]>
  [107] pushcons 5 .............................. <"_0">
  [109] joinstr ................................. <tName.char[1..length(tName) - 3] & tDirection[1] & "_0">
  [110] setlocal 3 .............................. tTryName = tName.char[1..length(tName) - 3] & tDirection[1] & "_0"
  [112] getlocal 3 .............................. <tTryName>
  [114] pusharglist 1 ........................... <tTryName>
  [116] extcall 62 .............................. <memberExists(tTryName)>
  [118] jmpifz [124] ............................ if memberExists(tTryName) then
  [121] jmp [133] ............................... exit repeat
  [124] pushint8 1
  [126] getlocal 2
  [128] add
  [129] setlocal 2
  [131] endrepeat [ 38]
  [133] getlocal 3 .............................. <tTryName>
  [135] pusharglist 1 ........................... <tTryName>
  [137] extcall 62 .............................. <memberExists(tTryName)>
  [139] not ..................................... <not memberExists(tTryName)>
  [140] jmpifz [170] ............................ if not memberExists(tTryName) then
  [143] getparam 0 .............................. <me>
  [145] pushcons 6 .............................. <"Direction for object not found:">
  [147] getprop 14 .............................. <pClass>
  [149] joinpadstr .............................. <"Direction for object not found:" && pClass>
  [150] getlocal 1 .............................. <tDirection>
  [152] pushint8 1 .............................. <1>
  [154] pusharglist 2 ........................... <tDirection, 1>
  [156] objcall 34 .............................. <tDirection[1]>
  [158] joinpadstr .............................. <"Direction for object not found:" && pClass && tDirection[1]>
  [159] pushsymb 518 ............................ <#rotate>
  [162] pusharglist 3 ........................... <me, "Direction for object not found:" && pClass && tDirection[1], #rotate>
  [164] extcall 72 .............................. <error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)>
  [166] pusharglistnoret 1 ...................... <error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)>
  [168] extcall 31 .............................. return error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate)
  [170] pushsymb 52 ............................. <#room>
  [172] pusharglist 1 ........................... <#room>
  [174] extcall 51 .............................. <getThread(#room)>
  [176] pusharglist 1 ........................... <getThread(#room)>
  [178] objcall 115 ............................. <getThread(#room).getComponent()>
  [180] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [182] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [184] pushcons 7 .............................. <"MOVESTUFF">
  [186] getparam 0 .............................. <me>
  [188] pusharglist 1 ........................... <me>
  [190] objcall 75 .............................. <me.getID()>
  [192] getparam 0 .............................. <me>
  [194] getobjprop 19 ........................... <me.pLocX>
  [196] joinpadstr .............................. <me.getID() && me.pLocX>
  [197] getparam 0 .............................. <me>
  [199] getobjprop 20 ........................... <me.pLocY>
  [201] joinpadstr .............................. <me.getID() && me.pLocX && me.pLocY>
  [202] getlocal 1 .............................. <tDirection>
  [204] pushint8 1 .............................. <1>
  [206] pusharglist 2 ........................... <tDirection, 1>
  [208] objcall 34 .............................. <tDirection[1]>
  [210] joinpadstr .............................. <me.getID() && me.pLocX && me.pLocY && tDirection[1]>
  [211] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVESTUFF", me.getID() && me.pLocX && me.pLocY && tDirection[1]>
  [213] objcall 135 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVESTUFF", me.getID() && me.pLocX && me.pLocY && tDirection[1])
  [215] ret
end

on setSlideTo me, tFromLoc, tToLoc, tTimeNow, tHasCharacter
  [  0] getparam 3 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 120 ............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 14] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 500 ........................ <the milliSeconds>
  [ 12] setparam 3 .............................. tTimeNow = the milliSeconds
  [ 14] getparam 3 .............................. <tTimeNow>
  [ 16] setprop 1459 ............................ pSlideStartTime = tTimeNow
  [ 19] getprop 1459 ............................ <pSlideStartTime>
  [ 22] setlocal 0 .............................. pLastSlideUpdateTime = pSlideStartTime
  [ 24] getparam 1 .............................. <tFromLoc>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <tFromLoc, 1>
  [ 30] objcall 34 .............................. <tFromLoc[1]>
  [ 32] pusharglist 1 ........................... <tFromLoc[1]>
  [ 34] extcall 820 ............................. <getLocalFloat(tFromLoc[1])>
  [ 37] setprop 19 .............................. pLocX = getLocalFloat(tFromLoc[1])
  [ 39] getparam 1 .............................. <tFromLoc>
  [ 41] pushint8 2 .............................. <2>
  [ 43] pusharglist 2 ........................... <tFromLoc, 2>
  [ 45] objcall 34 .............................. <tFromLoc[2]>
  [ 47] pusharglist 1 ........................... <tFromLoc[2]>
  [ 49] extcall 820 ............................. <getLocalFloat(tFromLoc[2])>
  [ 52] setprop 20 .............................. pLocY = getLocalFloat(tFromLoc[2])
  [ 54] getparam 1 .............................. <tFromLoc>
  [ 56] pushint8 3 .............................. <3>
  [ 58] pusharglist 2 ........................... <tFromLoc, 3>
  [ 60] objcall 34 .............................. <tFromLoc[3]>
  [ 62] pusharglist 1 ........................... <tFromLoc[3]>
  [ 64] extcall 820 ............................. <getLocalFloat(tFromLoc[3])>
  [ 67] setprop 21 .............................. pLocH = getLocalFloat(tFromLoc[3])
  [ 69] pusharglist 0 ........................... <[]>
  [ 71] pushlist ................................ <[]>
  [ 72] setlocal 1 .............................. tDistances = []
  [ 74] getlocal 1 .............................. <tDistances>
  [ 76] pushint8 1 .............................. <1>
  [ 78] getparam 1 .............................. <tFromLoc>
  [ 80] pushint8 1 .............................. <1>
  [ 82] pusharglist 2 ........................... <tFromLoc, 1>
  [ 84] objcall 34 .............................. <tFromLoc[1]>
  [ 86] getparam 2 .............................. <tToLoc>
  [ 88] pushint8 1 .............................. <1>
  [ 90] pusharglist 2 ........................... <tToLoc, 1>
  [ 92] objcall 34 .............................. <tToLoc[1]>
  [ 94] sub ..................................... <tFromLoc[1] - tToLoc[1]>
  [ 95] pusharglist 1 ........................... <tFromLoc[1] - tToLoc[1]>
  [ 97] extcall 77 .............................. <abs(tFromLoc[1] - tToLoc[1])>
  [ 99] pusharglistnoret 3 ...................... <tDistances, 1, abs(tFromLoc[1] - tToLoc[1])>
  [101] objcall 59 .............................. tDistances[1] = abs(tFromLoc[1] - tToLoc[1])
  [103] getlocal 1 .............................. <tDistances>
  [105] pushint8 2 .............................. <2>
  [107] getparam 1 .............................. <tFromLoc>
  [109] pushint8 2 .............................. <2>
  [111] pusharglist 2 ........................... <tFromLoc, 2>
  [113] objcall 34 .............................. <tFromLoc[2]>
  [115] getparam 2 .............................. <tToLoc>
  [117] pushint8 2 .............................. <2>
  [119] pusharglist 2 ........................... <tToLoc, 2>
  [121] objcall 34 .............................. <tToLoc[2]>
  [123] sub ..................................... <tFromLoc[2] - tToLoc[2]>
  [124] pusharglist 1 ........................... <tFromLoc[2] - tToLoc[2]>
  [126] extcall 77 .............................. <abs(tFromLoc[2] - tToLoc[2])>
  [128] pusharglistnoret 3 ...................... <tDistances, 2, abs(tFromLoc[2] - tToLoc[2])>
  [130] objcall 59 .............................. tDistances[2] = abs(tFromLoc[2] - tToLoc[2])
  [132] getlocal 1 .............................. <tDistances>
  [134] pushint8 3 .............................. <3>
  [136] getparam 1 .............................. <tFromLoc>
  [138] pushint8 3 .............................. <3>
  [140] pusharglist 2 ........................... <tFromLoc, 3>
  [142] objcall 34 .............................. <tFromLoc[3]>
  [144] getparam 2 .............................. <tToLoc>
  [146] pushint8 3 .............................. <3>
  [148] pusharglist 2 ........................... <tToLoc, 3>
  [150] objcall 34 .............................. <tToLoc[3]>
  [152] sub ..................................... <tFromLoc[3] - tToLoc[3]>
  [153] pusharglist 1 ........................... <tFromLoc[3] - tToLoc[3]>
  [155] extcall 77 .............................. <abs(tFromLoc[3] - tToLoc[3])>
  [157] pusharglistnoret 3 ...................... <tDistances, 3, abs(tFromLoc[3] - tToLoc[3])>
  [159] objcall 59 .............................. tDistances[3] = abs(tFromLoc[3] - tToLoc[3])
  [161] getlocal 1 .............................. <tDistances>
  [163] pusharglist 1 ........................... <tDistances>
  [165] extcall 1409 ............................ <max(tDistances)>
  [168] getprop 1452 ............................ <pSlideTimePerTile>
  [171] mul ..................................... <max(tDistances) * pSlideTimePerTile>
  [172] setlocal 2 .............................. tMoveTime = max(tDistances) * pSlideTimePerTile
  [174] getprop 1459 ............................ <pSlideStartTime>
  [177] getlocal 2 .............................. <tMoveTime>
  [179] add ..................................... <pSlideStartTime + tMoveTime>
  [180] setprop 1460 ............................ pSlideEndTime = pSlideStartTime + tMoveTime
  [183] getprop 19 .............................. <pLocX>
  [185] getprop 20 .............................. <pLocY>
  [187] getprop 21 .............................. <pLocH>
  [189] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [191] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [192] setprop 1461 ............................ pStartloc = [pLocX, pLocY, pLocH]
  [195] getparam 2 .............................. <tToLoc>
  [197] setprop 1462 ............................ pDestLoc = tToLoc
  [200] getparam 0 .............................. <me>
  [202] pusharglistnoret 1 ...................... <me>
  [204] objcall 13 .............................. me.updateLocation()
  [206] ret
end

on animateSlide me, tTimeNow
  [  0] getparam 1 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 120 ............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 14] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 500 ........................ <the milliSeconds>
  [ 12] setparam 1 .............................. tTimeNow = the milliSeconds
  [ 14] getprop 1460 ............................ <pSlideEndTime>
  [ 17] getparam 1 .............................. <tTimeNow>
  [ 19] lt ...................................... <pSlideEndTime < tTimeNow>
  [ 20] jmpifz [ 95] ............................ if pSlideEndTime < tTimeNow then
  [ 23] getprop 1462 ............................ <pDestLoc>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pDestLoc, 1>
  [ 30] objcall 34 .............................. <pDestLoc[1]>
  [ 32] getobjprop 102 .......................... <pDestLoc[1].integer>
  [ 34] setprop 19 .............................. pLocX = pDestLoc[1].integer
  [ 36] getprop 1462 ............................ <pDestLoc>
  [ 39] pushint8 2 .............................. <2>
  [ 41] pusharglist 2 ........................... <pDestLoc, 2>
  [ 43] objcall 34 .............................. <pDestLoc[2]>
  [ 45] getobjprop 102 .......................... <pDestLoc[2].integer>
  [ 47] setprop 20 .............................. pLocY = pDestLoc[2].integer
  [ 49] getprop 1462 ............................ <pDestLoc>
  [ 52] pushint8 3 .............................. <3>
  [ 54] pusharglist 2 ........................... <pDestLoc, 3>
  [ 56] objcall 34 .............................. <pDestLoc[3]>
  [ 58] setprop 21 .............................. pLocH = pDestLoc[3]
  [ 60] pushcons 8 .............................. <"room">
  [ 62] pusharglist 1 ........................... <"room">
  [ 64] extcall 51 .............................. <getThread("room")>
  [ 66] pusharglist 1 ........................... <getThread("room")>
  [ 68] objcall 115 ............................. <getThread("room").getComponent()>
  [ 70] getparam 0 .............................. <me>
  [ 72] getchainedprop 1373 ..................... <me.ancestor>
  [ 75] getobjprop 459 .......................... <me.ancestor.id>
  [ 78] pusharglistnoret 2 ...................... <getThread("room").getComponent(), me.ancestor.id>
  [ 80] objcall 578 ............................. getThread("room").getComponent().removeSlideObject(me.ancestor.id)
  [ 83] getparam 0 .............................. <me>
  [ 85] pusharglistnoret 1 ...................... <me>
  [ 87] objcall 13 .............................. me.updateLocation()
  [ 89] pushint8 1 .............................. <1>
  [ 91] pusharglistnoret 1 ...................... <1>
  [ 93] extcall 31 .............................. return 1
  [ 95] getparam 1 .............................. <tTimeNow>
  [ 97] getprop 1459 ............................ <pSlideStartTime>
  [100] sub ..................................... <tTimeNow - pSlideStartTime>
  [101] pusharglist 1 ........................... <tTimeNow - pSlideStartTime>
  [103] extcall 669 ............................. <float(tTimeNow - pSlideStartTime)>
  [106] setlocal 0 .............................. tTimeUsed = float(tTimeNow - pSlideStartTime)
  [108] getlocal 0 .............................. <tTimeUsed>
  [110] getprop 1460 ............................ <pSlideEndTime>
  [113] getprop 1459 ............................ <pSlideStartTime>
  [116] sub ..................................... <pSlideEndTime - pSlideStartTime>
  [117] pusharglist 1 ........................... <pSlideEndTime - pSlideStartTime>
  [119] extcall 669 ............................. <float(pSlideEndTime - pSlideStartTime)>
  [122] div ..................................... <tTimeUsed / float(pSlideEndTime - pSlideStartTime)>
  [123] setlocal 1 .............................. tPercentSlided = tTimeUsed / float(pSlideEndTime - pSlideStartTime)
  [125] getprop 1462 ............................ <pDestLoc>
  [128] pushint8 1 .............................. <1>
  [130] pusharglist 2 ........................... <pDestLoc, 1>
  [132] objcall 34 .............................. <pDestLoc[1]>
  [134] getprop 1461 ............................ <pStartloc>
  [137] pushint8 1 .............................. <1>
  [139] pusharglist 2 ........................... <pStartloc, 1>
  [141] objcall 34 .............................. <pStartloc[1]>
  [143] sub ..................................... <pDestLoc[1] - pStartloc[1]>
  [144] pusharglist 1 ........................... <pDestLoc[1] - pStartloc[1]>
  [146] extcall 669 ............................. <float(pDestLoc[1] - pStartloc[1])>
  [149] getlocal 1 .............................. <tPercentSlided>
  [151] mul ..................................... <float(pDestLoc[1] - pStartloc[1]) * tPercentSlided>
  [152] getprop 1461 ............................ <pStartloc>
  [155] pushint8 1 .............................. <1>
  [157] pusharglist 2 ........................... <pStartloc, 1>
  [159] objcall 34 .............................. <pStartloc[1]>
  [161] add ..................................... <(float(pDestLoc[1] - pStartloc[1]) * tPercentSlided) + pStartloc[1]>
  [162] setprop 19 .............................. pLocX = (float(pDestLoc[1] - pStartloc[1]) * tPercentSlided) + pStartloc[1]
  [164] getprop 1462 ............................ <pDestLoc>
  [167] pushint8 2 .............................. <2>
  [169] pusharglist 2 ........................... <pDestLoc, 2>
  [171] objcall 34 .............................. <pDestLoc[2]>
  [173] getprop 1461 ............................ <pStartloc>
  [176] pushint8 2 .............................. <2>
  [178] pusharglist 2 ........................... <pStartloc, 2>
  [180] objcall 34 .............................. <pStartloc[2]>
  [182] sub ..................................... <pDestLoc[2] - pStartloc[2]>
  [183] pusharglist 1 ........................... <pDestLoc[2] - pStartloc[2]>
  [185] extcall 669 ............................. <float(pDestLoc[2] - pStartloc[2])>
  [188] getlocal 1 .............................. <tPercentSlided>
  [190] mul ..................................... <float(pDestLoc[2] - pStartloc[2]) * tPercentSlided>
  [191] getprop 1461 ............................ <pStartloc>
  [194] pushint8 2 .............................. <2>
  [196] pusharglist 2 ........................... <pStartloc, 2>
  [198] objcall 34 .............................. <pStartloc[2]>
  [200] add ..................................... <(float(pDestLoc[2] - pStartloc[2]) * tPercentSlided) + pStartloc[2]>
  [201] setprop 20 .............................. pLocY = (float(pDestLoc[2] - pStartloc[2]) * tPercentSlided) + pStartloc[2]
  [203] getprop 1462 ............................ <pDestLoc>
  [206] pushint8 3 .............................. <3>
  [208] pusharglist 2 ........................... <pDestLoc, 3>
  [210] objcall 34 .............................. <pDestLoc[3]>
  [212] getprop 1461 ............................ <pStartloc>
  [215] pushint8 3 .............................. <3>
  [217] pusharglist 2 ........................... <pStartloc, 3>
  [219] objcall 34 .............................. <pStartloc[3]>
  [221] sub ..................................... <pDestLoc[3] - pStartloc[3]>
  [222] pusharglist 1 ........................... <pDestLoc[3] - pStartloc[3]>
  [224] extcall 669 ............................. <float(pDestLoc[3] - pStartloc[3])>
  [227] getlocal 1 .............................. <tPercentSlided>
  [229] mul ..................................... <float(pDestLoc[3] - pStartloc[3]) * tPercentSlided>
  [230] getprop 1461 ............................ <pStartloc>
  [233] pushint8 3 .............................. <3>
  [235] pusharglist 2 ........................... <pStartloc, 3>
  [237] objcall 34 .............................. <pStartloc[3]>
  [239] add ..................................... <(float(pDestLoc[3] - pStartloc[3]) * tPercentSlided) + pStartloc[3]>
  [240] setprop 21 .............................. pLocH = (float(pDestLoc[3] - pStartloc[3]) * tPercentSlided) + pStartloc[3]
  [242] getparam 0 .............................. <me>
  [244] pusharglistnoret 1 ...................... <me>
  [246] objcall 13 .............................. me.updateLocation()
  [248] pushint8 1 .............................. <1>
  [250] pusharglistnoret 1 ...................... <1>
  [252] extcall 31 .............................. return 1
  [254] ret
end

on ghostObject me
  [  0] getprop 18 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 33
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 59] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 34
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 93 ........................... <tSpr.ink>
  [ 32] pushint8 33 ............................. <33>
  [ 34] eq ...................................... <tSpr.ink = 33>
  [ 35] jmpifz [ 47] ............................ if tSpr.ink = 33 then
  [ 38] getlocal 0 .............................. <tSpr>
  [ 40] pushzero ................................ <0>
  [ 41] setobjprop 341 .......................... tSpr.visible = 0
  [ 44] jmp [ 54] ............................... next repeat
  [ 47] getlocal 0 .............................. <tSpr>
  [ 49] pushint8 35 ............................. <35>
  [ 51] setobjprop 436 .......................... tSpr.blend = 35
  [ 54] pushint8 1
  [ 56] add
  [ 57] endrepeat [ 10]
  [ 59] pop 3
  [ 61] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 31 .............................. return 1
  [  6] ret
end

on relocate me, tSpriteList
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 31 .............................. return 1
  [  6] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 120 ............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 9 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 1450 ............................ pPartColors = []
  [ 19] getmovieprop 99 ......................... <the itemDelimiter>
  [ 21] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 23] pushcons 10 ............................. <",">
  [ 25] setmovieprop 99 ......................... the itemDelimiter = ","
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 1
  [ 31] getlocal 1
  [ 33] getparam 1 .............................. <tpartColors>
  [ 35] pushsymb 103 ............................ <#item>
  [ 37] pusharglist 2 ........................... <tpartColors, #item>
  [ 39] objcall 33 .............................. <tpartColors.item.count>
  [ 41] lteq
  [ 42] jmpifz [ 76] ............................ repeat with i = 1 to tpartColors.item.count
  [ 45] getprop 1450 ............................ <pPartColors>
  [ 48] getparam 1 .............................. <tpartColors>
  [ 50] pushsymb 103 ............................ <#item>
  [ 52] getlocal 1 .............................. <i>
  [ 54] pusharglist 3 ........................... <tpartColors, #item, i>
  [ 56] objcall 68 .............................. <tpartColors.item[i]>
  [ 58] pusharglist 1 ........................... <tpartColors.item[i]>
  [ 60] extcall 519 ............................. <string(tpartColors.item[i])>
  [ 63] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[i])>
  [ 65] objcall 88 .............................. pPartColors.add(string(tpartColors.item[i]))
  [ 67] pushint8 1
  [ 69] getlocal 1
  [ 71] add
  [ 72] setlocal 1
  [ 74] endrepeat [ 31]
  [ 76] getprop 1450 ............................ <pPartColors>
  [ 79] getobjprop 33 ........................... <pPartColors.count>
  [ 81] setlocal 2
  [ 83] getlocal 2
  [ 85] pushint8 4 .............................. <4>
  [ 87] lteq
  [ 88] jmpifz [109] ............................ repeat with j = pPartColors.count to 4
  [ 91] getprop 1450 ............................ <pPartColors>
  [ 94] pushcons 11 ............................. <"*ffffff">
  [ 96] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [ 98] objcall 88 .............................. pPartColors.add("*ffffff")
  [100] pushint8 1
  [102] getlocal 2
  [104] add
  [105] setlocal 2
  [107] endrepeat [ 83]
  [109] getlocal 0 .............................. <tDelim>
  [111] setmovieprop 99 ......................... the itemDelimiter = tDelim
  [113] ret
end

on solveInk me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 120 ............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 14 .............................. <pClass>
  [ 11] setparam 2 .............................. tClass = pClass
  [ 13] getparam 2 .............................. <tClass>
  [ 15] pushcons 12 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 62 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushint8 8 .............................. <8>
  [ 28] pusharglistnoret 1 ...................... <8>
  [ 30] extcall 31 .............................. return 8
  [ 32] getparam 2 .............................. <tClass>
  [ 34] pushcons 12 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 65 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 480 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 48] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 50] getlocal 0 .............................. <tPropList>
  [ 52] pusharglist 1 ........................... <tPropList>
  [ 54] extcall 127 ............................. <ilk(tPropList)>
  [ 56] pushsymb 128 ............................ <#propList>
  [ 58] nteq .................................... <ilk(tPropList) <> #propList>
  [ 59] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 62] getparam 0 .............................. <me>
  [ 64] getparam 2 .............................. <tClass>
  [ 66] pushcons 13 ............................. <".props is not valid!">
  [ 68] joinstr ................................. <tClass & ".props is not valid!">
  [ 69] pushsymb 1446 ........................... <#solveInk>
  [ 72] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveInk>
  [ 74] extcall 72 .............................. error(me, tClass & ".props is not valid!", #solveInk)
  [ 76] pushint8 8 .............................. <8>
  [ 78] pusharglistnoret 1 ...................... <8>
  [ 80] extcall 31 .............................. return 8
  [ 82] jmp [146]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 34 .............................. <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 120 ............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [100] pushint8 8 .............................. <8>
  [102] pusharglistnoret 1 ...................... <8>
  [104] extcall 31 .............................. return 8
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 34 .............................. <tPropList[tPart]>
  [114] pushsymb 93 ............................. <#ink>
  [116] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [118] objcall 34 .............................. <tPropList[tPart][#ink]>
  [120] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [122] extcall 120 ............................. <voidp(tPropList[tPart][#ink])>
  [124] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [125] jmpifz [146] ............................ if not voidp(tPropList[tPart][#ink]) then
  [128] getlocal 0 .............................. <tPropList>
  [130] getparam 1 .............................. <tPart>
  [132] pusharglist 2 ........................... <tPropList, tPart>
  [134] objcall 34 .............................. <tPropList[tPart]>
  [136] pushsymb 93 ............................. <#ink>
  [138] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [140] objcall 34 .............................. <tPropList[tPart][#ink]>
  [142] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [144] extcall 31 .............................. return tPropList[tPart][#ink]
  [146] pushint8 8 .............................. <8>
  [148] pusharglistnoret 1 ...................... <8>
  [150] extcall 31 .............................. return 8
  [152] ret
end

on solveBlend me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 120 ............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 14 .............................. <pClass>
  [ 11] setparam 2 .............................. tClass = pClass
  [ 13] getparam 2 .............................. <tClass>
  [ 15] pushcons 12 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 62 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushint8 100 ............................ <100>
  [ 28] pusharglistnoret 1 ...................... <100>
  [ 30] extcall 31 .............................. return 100
  [ 32] getparam 2 .............................. <tClass>
  [ 34] pushcons 12 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 65 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 480 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 48] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 50] getlocal 0 .............................. <tPropList>
  [ 52] pusharglist 1 ........................... <tPropList>
  [ 54] extcall 127 ............................. <ilk(tPropList)>
  [ 56] pushsymb 128 ............................ <#propList>
  [ 58] nteq .................................... <ilk(tPropList) <> #propList>
  [ 59] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 62] getparam 0 .............................. <me>
  [ 64] getparam 2 .............................. <tClass>
  [ 66] pushcons 13 ............................. <".props is not valid!">
  [ 68] joinstr ................................. <tClass & ".props is not valid!">
  [ 69] pushsymb 1447 ........................... <#solveBlend>
  [ 72] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveBlend>
  [ 74] extcall 72 .............................. error(me, tClass & ".props is not valid!", #solveBlend)
  [ 76] pushint8 100 ............................ <100>
  [ 78] pusharglistnoret 1 ...................... <100>
  [ 80] extcall 31 .............................. return 100
  [ 82] jmp [148]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 34 .............................. <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 120 ............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [100] pushint8 100 ............................ <100>
  [102] pusharglistnoret 1 ...................... <100>
  [104] extcall 31 .............................. return 100
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 34 .............................. <tPropList[tPart]>
  [114] pushsymb 436 ............................ <#blend>
  [117] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [119] objcall 34 .............................. <tPropList[tPart][#blend]>
  [121] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [123] extcall 120 ............................. <voidp(tPropList[tPart][#blend])>
  [125] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [126] jmpifz [148] ............................ if not voidp(tPropList[tPart][#blend]) then
  [129] getlocal 0 .............................. <tPropList>
  [131] getparam 1 .............................. <tPart>
  [133] pusharglist 2 ........................... <tPropList, tPart>
  [135] objcall 34 .............................. <tPropList[tPart]>
  [137] pushsymb 436 ............................ <#blend>
  [140] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [142] objcall 34 .............................. <tPropList[tPart][#blend]>
  [144] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [146] extcall 31 .............................. return tPropList[tPart][#blend]
  [148] pushint8 100 ............................ <100>
  [150] pusharglistnoret 1 ...................... <100>
  [152] extcall 31 .............................. return 100
  [154] ret
end

on solveLocZ me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 120 ............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 14 .............................. <pClass>
  [ 11] setparam 3 .............................. tClass = pClass
  [ 13] getparam 3 .............................. <tClass>
  [ 15] pushcons 12 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 62 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 31] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 31 .............................. return 0
  [ 31] getparam 3 .............................. <tClass>
  [ 33] pushcons 12 ............................. <".props">
  [ 35] joinstr ................................. <tClass & ".props">
  [ 36] pusharglist 1 ........................... <tClass & ".props">
  [ 38] extcall 65 .............................. <getmemnum(tClass & ".props")>
  [ 40] pushzero ................................ <0>
  [ 41] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 42] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 44] extcall 480 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 47] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 49] getlocal 0 .............................. <tPropList>
  [ 51] pusharglist 1 ........................... <tPropList>
  [ 53] extcall 127 ............................. <ilk(tPropList)>
  [ 55] pushsymb 128 ............................ <#propList>
  [ 57] nteq .................................... <ilk(tPropList) <> #propList>
  [ 58] jmpifz [ 83] ............................ if ilk(tPropList) <> #propList then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 3 .............................. <tClass>
  [ 65] pushcons 13 ............................. <".props is not valid!">
  [ 67] joinstr ................................. <tClass & ".props is not valid!">
  [ 68] pushsymb 1448 ........................... <#solveLocZ>
  [ 71] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveLocZ>
  [ 73] extcall 72 .............................. error(me, tClass & ".props is not valid!", #solveLocZ)
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 1 ...................... <0>
  [ 78] extcall 31 .............................. return 0
  [ 80] jmp [156]
  [ 83] getlocal 0 .............................. <tPropList>
  [ 85] getparam 1 .............................. <tPart>
  [ 87] pusharglist 2 ........................... <tPropList, tPart>
  [ 89] objcall 34 .............................. <tPropList[tPart]>
  [ 91] pusharglist 1 ........................... <tPropList[tPart]>
  [ 93] extcall 120 ............................. <voidp(tPropList[tPart])>
  [ 95] jmpifz [103] ............................ if voidp(tPropList[tPart]) then
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 1 ...................... <0>
  [101] extcall 31 .............................. return 0
  [103] getlocal 0 .............................. <tPropList>
  [105] getparam 1 .............................. <tPart>
  [107] pusharglist 2 ........................... <tPropList, tPart>
  [109] objcall 34 .............................. <tPropList[tPart]>
  [111] pushsymb 1471 ........................... <#zshift>
  [114] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [116] objcall 34 .............................. <tPropList[tPart][#zshift]>
  [118] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [120] extcall 120 ............................. <voidp(tPropList[tPart][#zshift])>
  [122] jmpifz [130] ............................ if voidp(tPropList[tPart][#zshift]) then
  [125] pushzero ................................ <0>
  [126] pusharglistnoret 1 ...................... <0>
  [128] extcall 31 .............................. return 0
  [130] getlocal 0 .............................. <tPropList>
  [132] getparam 1 .............................. <tPart>
  [134] pusharglist 2 ........................... <tPropList, tPart>
  [136] objcall 34 .............................. <tPropList[tPart]>
  [138] pushsymb 1471 ........................... <#zshift>
  [141] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [143] objcall 34 .............................. <tPropList[tPart][#zshift]>
  [145] getobjprop 33 ........................... <tPropList[tPart][#zshift].count>
  [147] getparam 2 .............................. <tdir>
  [149] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [150] jmpifz [156] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [153] pushzero ................................ <0>
  [154] setparam 2 .............................. tdir = 0
  [156] getlocal 0 .............................. <tPropList>
  [158] getparam 1 .............................. <tPart>
  [160] pusharglist 2 ........................... <tPropList, tPart>
  [162] objcall 34 .............................. <tPropList[tPart]>
  [164] pushsymb 1471 ........................... <#zshift>
  [167] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [169] objcall 34 .............................. <tPropList[tPart][#zshift]>
  [171] getparam 2 .............................. <tdir>
  [173] pushint8 1 .............................. <1>
  [175] add ..................................... <tdir + 1>
  [176] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [178] objcall 34 .............................. <tPropList[tPart][#zshift][tdir + 1]>
  [180] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [182] extcall 31 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [184] ret
end

on solveLocShift me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 120 ............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 14 .............................. <pClass>
  [ 11] setparam 3 .............................. tClass = pClass
  [ 13] getparam 3 .............................. <tClass>
  [ 15] pushcons 12 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 62 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 31] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 31 .............................. return 0
  [ 31] getparam 3 .............................. <tClass>
  [ 33] pushcons 12 ............................. <".props">
  [ 35] joinstr ................................. <tClass & ".props">
  [ 36] pusharglist 1 ........................... <tClass & ".props">
  [ 38] extcall 65 .............................. <getmemnum(tClass & ".props")>
  [ 40] pushzero ................................ <0>
  [ 41] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 42] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 44] extcall 480 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 47] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 49] getlocal 0 .............................. <tPropList>
  [ 51] pusharglist 1 ........................... <tPropList>
  [ 53] extcall 127 ............................. <ilk(tPropList)>
  [ 55] pushsymb 128 ............................ <#propList>
  [ 57] nteq .................................... <ilk(tPropList) <> #propList>
  [ 58] jmpifz [ 83] ............................ if ilk(tPropList) <> #propList then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 3 .............................. <tClass>
  [ 65] pushcons 13 ............................. <".props is not valid!">
  [ 67] joinstr ................................. <tClass & ".props is not valid!">
  [ 68] pushsymb 1449 ........................... <#solveLocShift>
  [ 71] pusharglistnoret 3 ...................... <me, tClass & ".props is not valid!", #solveLocShift>
  [ 73] extcall 72 .............................. error(me, tClass & ".props is not valid!", #solveLocShift)
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 1 ...................... <0>
  [ 78] extcall 31 .............................. return 0
  [ 80] jmp [208]
  [ 83] getlocal 0 .............................. <tPropList>
  [ 85] getparam 1 .............................. <tPart>
  [ 87] pusharglist 2 ........................... <tPropList, tPart>
  [ 89] objcall 34 .............................. <tPropList[tPart]>
  [ 91] pusharglist 1 ........................... <tPropList[tPart]>
  [ 93] extcall 120 ............................. <voidp(tPropList[tPart])>
  [ 95] jmpifz [103] ............................ if voidp(tPropList[tPart]) then
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 1 ...................... <0>
  [101] extcall 31 .............................. return 0
  [103] getlocal 0 .............................. <tPropList>
  [105] getparam 1 .............................. <tPart>
  [107] pusharglist 2 ........................... <tPropList, tPart>
  [109] objcall 34 .............................. <tPropList[tPart]>
  [111] pushsymb 1472 ........................... <#locshift>
  [114] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [116] objcall 34 .............................. <tPropList[tPart][#locshift]>
  [118] pusharglist 1 ........................... <tPropList[tPart][#locshift]>
  [120] extcall 120 ............................. <voidp(tPropList[tPart][#locshift])>
  [122] jmpifz [130] ............................ if voidp(tPropList[tPart][#locshift]) then
  [125] pushzero ................................ <0>
  [126] pusharglistnoret 1 ...................... <0>
  [128] extcall 31 .............................. return 0
  [130] getlocal 0 .............................. <tPropList>
  [132] getparam 1 .............................. <tPart>
  [134] pusharglist 2 ........................... <tPropList, tPart>
  [136] objcall 34 .............................. <tPropList[tPart]>
  [138] pushsymb 1472 ........................... <#locshift>
  [141] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [143] objcall 34 .............................. <tPropList[tPart][#locshift]>
  [145] getobjprop 33 ........................... <tPropList[tPart][#locshift].count>
  [147] getparam 2 .............................. <tdir>
  [149] lteq .................................... <tPropList[tPart][#locshift].count <= tdir>
  [150] jmpifz [158] ............................ if tPropList[tPart][#locshift].count <= tdir then
  [153] pushzero ................................ <0>
  [154] pusharglistnoret 1 ...................... <0>
  [156] extcall 31 .............................. return 0
  [158] getlocal 0 .............................. <tPropList>
  [160] getparam 1 .............................. <tPart>
  [162] pusharglist 2 ........................... <tPropList, tPart>
  [164] objcall 34 .............................. <tPropList[tPart]>
  [166] pushsymb 1472 ........................... <#locshift>
  [169] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [171] objcall 34 .............................. <tPropList[tPart][#locshift]>
  [173] getparam 2 .............................. <tdir>
  [175] pushint8 1 .............................. <1>
  [177] add ..................................... <tdir + 1>
  [178] pusharglist 2 ........................... <tPropList[tPart][#locshift], tdir + 1>
  [180] objcall 34 .............................. <tPropList[tPart][#locshift][tdir + 1]>
  [182] pusharglist 1 ........................... <tPropList[tPart][#locshift][tdir + 1]>
  [184] extcall 480 ............................. <value(tPropList[tPart][#locshift][tdir + 1])>
  [187] setlocal 1 .............................. tShift = value(tPropList[tPart][#locshift][tdir + 1])
  [189] getlocal 1 .............................. <tShift>
  [191] pusharglist 1 ........................... <tShift>
  [193] extcall 127 ............................. <ilk(tShift)>
  [195] pushsymb 375 ............................ <#point>
  [198] eq ...................................... <ilk(tShift) = #point>
  [199] jmpifz [208] ............................ if ilk(tShift) = #point then
  [202] getlocal 1 .............................. <tShift>
  [204] pusharglistnoret 1 ...................... <tShift>
  [206] extcall 31 .............................. return tShift
  [208] pushzero ................................ <0>
  [209] pusharglistnoret 1 ...................... <0>
  [211] extcall 31 .............................. return 0
  [213] ret
end

on solveMembers me
  [  0] getprop 14 .............................. <pClass>
  [  2] setlocal 0 .............................. tClass = pClass
  [  4] getlocal 0 .............................. <tClass>
  [  6] pushcons 14 ............................. <"*">
  [  8] containsstr ............................. <tClass contains "*">
  [  9] jmpifz [ 63] ............................ if tClass contains "*" then / else
  [ 12] getlocal 0 .............................. <tClass>
  [ 14] pushcons 15 ............................. <"_small">
  [ 16] joinstr ................................. <tClass & "_small">
  [ 17] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 19] getlocal 0 .............................. <tClass>
  [ 21] pushsymb 66 ............................. <#char>
  [ 23] pushint8 1 .............................. <1>
  [ 25] pushcons 14 ............................. <"*">
  [ 27] getlocal 0 .............................. <tClass>
  [ 29] pusharglist 2 ........................... <"*", tClass>
  [ 31] extcall 674 ............................. <offset("*", tClass)>
  [ 34] pushint8 1 .............................. <1>
  [ 36] sub ..................................... <offset("*", tClass) - 1>
  [ 37] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [ 39] objcall 68 .............................. <tClass.char[1..offset("*", tClass) - 1]>
  [ 41] setlocal 0 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [ 43] getlocal 1 .............................. <tSmallMem>
  [ 45] pusharglist 1 ........................... <tSmallMem>
  [ 47] extcall 62 .............................. <memberExists(tSmallMem)>
  [ 49] not ..................................... <not memberExists(tSmallMem)>
  [ 50] jmpifz [ 60] ............................ if not memberExists(tSmallMem) then
  [ 53] getlocal 0 .............................. <tClass>
  [ 55] pushcons 15 ............................. <"_small">
  [ 57] joinstr ................................. <tClass & "_small">
  [ 58] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 60] jmp [ 70]
  [ 63] getlocal 0 .............................. <tClass>
  [ 65] pushcons 15 ............................. <"_small">
  [ 67] joinstr ................................. <tClass & "_small">
  [ 68] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 70] getlocal 1 .............................. <tSmallMem>
  [ 72] setprop 1455 ............................ pSmallMember = tSmallMem
  [ 75] getprop 50 .............................. <pXFactor>
  [ 77] pushint8 32 ............................. <32>
  [ 79] eq ...................................... <pXFactor = 32>
  [ 80] jmpifz [ 90] ............................ if pXFactor = 32 then
  [ 83] pushcons 16 ............................. <"s_">
  [ 85] getlocal 0 .............................. <tClass>
  [ 87] joinstr ................................. <"s_" & tClass>
  [ 88] setlocal 0 .............................. tClass = "s_" & tClass
  [ 90] getprop 18 .............................. <pSprList>
  [ 92] getobjprop 33 ........................... <pSprList.count>
  [ 94] pushzero ................................ <0>
  [ 95] gt ...................................... <pSprList.count > 0>
  [ 96] jmpifz [147] ............................ if pSprList.count > 0 then
  [ 99] getprop 18 .............................. <pSprList>
  [101] peek 0
  [103] pusharglist 1
  [105] extcall 33
  [107] pushint8 1
  [109] peek 0
  [111] peek 2
  [113] lteq
  [114] jmpifz [140] ............................ repeat with tSpr in pSprList
  [117] peek 2
  [119] peek 1
  [121] pusharglist 2
  [123] extcall 34
  [125] setlocal 2
  [127] getlocal 2 .............................. <tSpr>
  [129] getobjprop 36 ........................... <tSpr.spriteNum>
  [131] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [133] extcall 35 .............................. releaseSprite(tSpr.spriteNum)
  [135] pushint8 1
  [137] add
  [138] endrepeat [109]
  [140] pop 3
  [142] pusharglist 0 ........................... <[]>
  [144] pushlist ................................ <[]>
  [145] setprop 18 .............................. pSprList = []
  [147] pushint8 1 .............................. <1>
  [149] setlocal 3 .............................. tMemNum = 1
  [151] pushcons 17 ............................. <"a">
  [153] pusharglist 1 ........................... <"a">
  [155] extcall 718 ............................. <charToNum("a")>
  [158] setlocal 4 .............................. i = charToNum("a")
  [160] pushint8 1 .............................. <1>
  [162] setlocal 5 .............................. j = 1
  [164] pushint8 5 .............................. <5>
  [166] inv ..................................... <-5>
  [167] setlocal 6 .............................. tLoczAdjust = -5
  [169] getlocal 3 .............................. <tMemNum>
  [171] pushzero ................................ <0>
  [172] gt ...................................... <tMemNum > 0>
  [173] jmpifz [1013] ........................... repeat while tMemNum > 0
  [176] pushzero ................................ <0>
  [177] setlocal 7 .............................. tFound = 0
  [179] getlocal 7 .............................. <tFound>
  [181] pushzero ................................ <0>
  [182] eq ...................................... <tFound = 0>
  [183] jmpifz [515] ............................ repeat while tFound = 0
  [186] getlocal 0 .............................. <tClass>
  [188] pushcons 18 ............................. <"_">
  [190] joinstr ................................. <tClass & "_">
  [191] getlocal 4 .............................. <i>
  [193] pusharglist 1 ........................... <i>
  [195] extcall 451 ............................. <numToChar(i)>
  [198] joinstr ................................. <tClass & "_" & numToChar(i)>
  [199] pushcons 18 ............................. <"_">
  [201] joinstr ................................. <tClass & "_" & numToChar(i) & "_">
  [202] pushcons 19 ............................. <"0">
  [204] joinstr ................................. <tClass & "_" & numToChar(i) & "_" & "0">
  [205] setlocal 8 .............................. tMemNameA = tClass & "_" & numToChar(i) & "_" & "0"
  [207] getprop 471 ............................. <pDimensions>
  [210] pusharglist 1 ........................... <pDimensions>
  [212] extcall 92 .............................. <listp(pDimensions)>
  [214] jmpifz [247] ............................ if listp(pDimensions) then
  [217] getlocal 8 .............................. <tMemNameA>
  [219] pushcons 18 ............................. <"_">
  [221] joinstr ................................. <tMemNameA & "_">
  [222] getprop 471 ............................. <pDimensions>
  [225] pushint8 1 .............................. <1>
  [227] pusharglist 2 ........................... <pDimensions, 1>
  [229] objcall 34 .............................. <pDimensions[1]>
  [231] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [232] pushcons 18 ............................. <"_">
  [234] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [235] getprop 471 ............................. <pDimensions>
  [238] pushint8 2 .............................. <2>
  [240] pusharglist 2 ........................... <pDimensions, 2>
  [242] objcall 34 .............................. <pDimensions[2]>
  [244] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [245] setlocal 8 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [247] getprop 28 .............................. <pDirection>
  [249] pusharglist 1 ........................... <pDirection>
  [251] extcall 120 ............................. <voidp(pDirection)>
  [253] not ..................................... <not voidp(pDirection)>
  [254] jmpifz [321] ............................ if not voidp(pDirection) then / else
  [257] getprop 28 .............................. <pDirection>
  [259] pusharglist 1 ........................... <pDirection>
  [261] extcall 33 .............................. <count(pDirection)>
  [263] getlocal 5 .............................. <j>
  [265] gteq .................................... <count(pDirection) >= j>
  [266] jmpifz [295] ............................ if count(pDirection) >= j then / else
  [269] getlocal 8 .............................. <tMemNameA>
  [271] pushcons 18 ............................. <"_">
  [273] joinstr ................................. <tMemNameA & "_">
  [274] getprop 28 .............................. <pDirection>
  [276] getlocal 5 .............................. <j>
  [278] pusharglist 2 ........................... <pDirection, j>
  [280] objcall 34 .............................. <pDirection[j]>
  [282] joinstr ................................. <tMemNameA & "_" & pDirection[j]>
  [283] pushcons 18 ............................. <"_">
  [285] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_">
  [286] getprop 1387 ............................ <pAnimFrame>
  [289] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame>
  [290] setlocal 9 .............................. tMemName = tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame
  [292] jmp [318]
  [295] getlocal 8 .............................. <tMemNameA>
  [297] pushcons 18 ............................. <"_">
  [299] joinstr ................................. <tMemNameA & "_">
  [300] getprop 28 .............................. <pDirection>
  [302] pushint8 1 .............................. <1>
  [304] pusharglist 2 ........................... <pDirection, 1>
  [306] objcall 34 .............................. <pDirection[1]>
  [308] joinstr ................................. <tMemNameA & "_" & pDirection[1]>
  [309] pushcons 18 ............................. <"_">
  [311] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_">
  [312] getprop 1387 ............................ <pAnimFrame>
  [315] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame>
  [316] setlocal 9 .............................. tMemName = tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame
  [318] jmp [332]
  [321] getlocal 8 .............................. <tMemNameA>
  [323] pushcons 18 ............................. <"_">
  [325] joinstr ................................. <tMemNameA & "_">
  [326] getprop 1387 ............................ <pAnimFrame>
  [329] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [330] setlocal 9 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [332] getlocal 9 .............................. <tMemName>
  [334] pusharglist 1 ........................... <tMemName>
  [336] extcall 65 .............................. <getmemnum(tMemName)>
  [338] setlocal 3 .............................. tMemNum = getmemnum(tMemName)
  [340] getlocal 9 .............................. <tMemName>
  [342] setlocal 10 ............................. tOldMemName = tMemName
  [344] getlocal 3 .............................. <tMemNum>
  [346] not ..................................... <not tMemNum>
  [347] jmpifz [369] ............................ if not tMemNum then
  [350] getlocal 8 .............................. <tMemNameA>
  [352] pushcons 20 ............................. <"_0_">
  [354] joinstr ................................. <tMemNameA & "_0_">
  [355] getprop 1387 ............................ <pAnimFrame>
  [358] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [359] setlocal 9 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [361] getlocal 9 .............................. <tMemName>
  [363] pusharglist 1 ........................... <tMemName>
  [365] extcall 65 .............................. <getmemnum(tMemName)>
  [367] setlocal 3 .............................. tMemNum = getmemnum(tMemName)
  [369] getlocal 3 .............................. <tMemNum>
  [371] not ..................................... <not tMemNum>
  [372] getlocal 5 .............................. <j>
  [374] pushint8 1 .............................. <1>
  [376] eq ...................................... <j = 1>
  [377] and ..................................... <not tMemNum and (j = 1)>
  [378] jmpifz [508] ............................ if not tMemNum and (j = 1) then
  [381] pushzero ................................ <0>
  [382] setlocal 7 .............................. tFound = 0
  [384] getprop 28 .............................. <pDirection>
  [386] pusharglist 1 ........................... <pDirection>
  [388] extcall 92 .............................. <listp(pDirection)>
  [390] jmpifz [505] ............................ if listp(pDirection) then
  [393] pushint8 1 .............................. <1>
  [395] setlocal 11
  [397] getlocal 11
  [399] getprop 28 .............................. <pDirection>
  [401] getobjprop 33 ........................... <pDirection.count>
  [403] lteq
  [404] jmpifz [439] ............................ repeat with tdir = 1 to pDirection.count
  [407] getprop 28 .............................. <pDirection>
  [409] getlocal 11 ............................. <tdir>
  [411] getprop 28 .............................. <pDirection>
  [413] getlocal 11 ............................. <tdir>
  [415] pusharglist 2 ........................... <pDirection, tdir>
  [417] objcall 34 .............................. <pDirection[tdir]>
  [419] pushint8 1 .............................. <1>
  [421] add ..................................... <pDirection[tdir] + 1>
  [422] pusharglist 1 ........................... <pDirection[tdir] + 1>
  [424] extcall 102 ............................. <integer(pDirection[tdir] + 1)>
  [426] pusharglistnoret 3 ...................... <pDirection, tdir, integer(pDirection[tdir] + 1)>
  [428] objcall 59 .............................. pDirection[tdir] = integer(pDirection[tdir] + 1)
  [430] pushint8 1
  [432] getlocal 11
  [434] add
  [435] setlocal 11
  [437] endrepeat [397]
  [439] getprop 28 .............................. <pDirection>
  [441] pushint8 1 .............................. <1>
  [443] pusharglist 2 ........................... <pDirection, 1>
  [445] objcall 34 .............................. <pDirection[1]>
  [447] pushint8 8 .............................. <8>
  [449] eq ...................................... <pDirection[1] = 8>
  [450] jmpifz [505] ............................ if pDirection[1] = 8 then
  [453] getparam 0 .............................. <me>
  [455] pushcons 21 ............................. <"Couldn't define members:">
  [457] getlocal 0 .............................. <tClass>
  [459] joinpadstr .............................. <"Couldn't define members:" && tClass>
  [460] pushsymb 10 ............................. <#solveMembers>
  [462] pusharglistnoret 3 ...................... <me, "Couldn't define members:" && tClass, #solveMembers>
  [464] extcall 72 .............................. error(me, "Couldn't define members:" && tClass, #solveMembers)
  [466] getprop 50 .............................. <pXFactor>
  [468] pushint8 32 ............................. <32>
  [470] eq ...................................... <pXFactor = 32>
  [471] jmpifz [485] ............................ if pXFactor = 32 then / else
  [474] pushcons 22 ............................. <"s_room_object_placeholder">
  [476] pusharglist 1 ........................... <"s_room_object_placeholder">
  [478] extcall 65 .............................. <getmemnum("s_room_object_placeholder")>
  [480] setlocal 3 .............................. tMemNum = getmemnum("s_room_object_placeholder")
  [482] jmp [493]
  [485] pushcons 23 ............................. <"room_object_placeholder">
  [487] pusharglist 1 ........................... <"room_object_placeholder">
  [489] extcall 65 .............................. <getmemnum("room_object_placeholder")>
  [491] setlocal 3 .............................. tMemNum = getmemnum("room_object_placeholder")
  [493] pushzero ................................ <0>
  [494] pushzero ................................ <0>
  [495] pushzero ................................ <0>
  [496] pusharglist 3 ........................... <[0, 0, 0]>
  [498] pushlist ................................ <[0, 0, 0]>
  [499] setprop 28 .............................. pDirection = [0, 0, 0]
  [501] pushint8 1 .............................. <1>
  [503] setlocal 7 .............................. tFound = 1
  [505] jmp [512] ............................... next repeat
  [508] pushint8 1 .............................. <1>
  [510] setlocal 7 .............................. tFound = 1
  [512] endrepeat [179]
  [515] getlocal 3 .............................. <tMemNum>
  [517] pushzero ................................ <0>
  [518] nteq .................................... <tMemNum <> 0>
  [519] jmpifz [996] ............................ if tMemNum <> 0 then
  [522] getprop 18 .............................. <pSprList>
  [524] pusharglist 1 ........................... <pSprList>
  [526] extcall 33 .............................. <count(pSprList)>
  [528] getlocal 5 .............................. <j>
  [530] gteq .................................... <count(pSprList) >= j>
  [531] jmpifz [547] ............................ if count(pSprList) >= j then / else
  [534] getprop 18 .............................. <pSprList>
  [536] getlocal 5 .............................. <j>
  [538] pusharglist 2 ........................... <pSprList, j>
  [540] objcall 34 .............................. <pSprList[j]>
  [542] setlocal 2 .............................. tSpr = pSprList[j]
  [544] jmp [637]
  [547] pushsymb 52 ............................. <#room>
  [549] pusharglist 1 ........................... <#room>
  [551] extcall 51 .............................. <getThread(#room)>
  [553] pusharglist 1 ........................... <getThread(#room)>
  [555] objcall 53 .............................. <getThread(#room).getInterface()>
  [557] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [559] objcall 75 .............................. <getThread(#room).getInterface().getID()>
  [561] setlocal 12 ............................. tTargetID = getThread(#room).getInterface().getID()
  [563] getparam 0 .............................. <me>
  [565] pusharglist 1 ........................... <me>
  [567] objcall 75 .............................. <me.getID()>
  [569] pusharglist 1 ........................... <me.getID()>
  [571] extcall 74 .............................. <reserveSprite(me.getID())>
  [573] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [575] extcall 73 .............................. <sprite(reserveSprite(me.getID()))>
  [577] setlocal 2 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [579] getprop 18 .............................. <pSprList>
  [581] getlocal 2 .............................. <tSpr>
  [583] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [585] objcall 88 .............................. pSprList.add(tSpr)
  [587] getlocal 2 .............................. <tSpr>
  [589] getobjprop 36 ........................... <tSpr.spriteNum>
  [591] getparam 0 .............................. <me>
  [593] pusharglist 1 ........................... <me>
  [595] objcall 75 .............................. <me.getID()>
  [597] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [599] extcall 76 .............................. setEventBroker(tSpr.spriteNum, me.getID())
  [601] getlocal 2 .............................. <tSpr>
  [603] pushsymb 223 ............................ <#eventProcActiveObj>
  [605] getlocal 12 ............................. <tTargetID>
  [607] pushsymb 83 ............................. <#mouseDown>
  [609] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveObj, tTargetID, #mouseDown>
  [611] objcall 84 .............................. tSpr.registerProcedure(#eventProcActiveObj, tTargetID, #mouseDown)
  [613] getlocal 2 .............................. <tSpr>
  [615] pushsymb 216 ............................ <#eventProcActiveRollOver>
  [617] getlocal 12 ............................. <tTargetID>
  [619] pushsymb 86 ............................. <#mouseEnter>
  [621] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveRollOver, tTargetID, #mouseEnter>
  [623] objcall 84 .............................. tSpr.registerProcedure(#eventProcActiveRollOver, tTargetID, #mouseEnter)
  [625] getlocal 2 .............................. <tSpr>
  [627] pushsymb 216 ............................ <#eventProcActiveRollOver>
  [629] getlocal 12 ............................. <tTargetID>
  [631] pushsymb 87 ............................. <#mouseLeave>
  [633] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveRollOver, tTargetID, #mouseLeave>
  [635] objcall 84 .............................. tSpr.registerProcedure(#eventProcActiveRollOver, tTargetID, #mouseLeave)
  [637] getprop 1050 ............................ <pLoczList>
  [640] getobjprop 33 ........................... <pLoczList.count>
  [642] getprop 18 .............................. <pSprList>
  [644] getobjprop 33 ........................... <pSprList.count>
  [646] lt ...................................... <pLoczList.count < pSprList.count>
  [647] jmpifz [660] ............................ if pLoczList.count < pSprList.count then
  [650] getprop 1050 ............................ <pLoczList>
  [653] pusharglist 0 ........................... <[]>
  [655] pushlist ................................ <[]>
  [656] pusharglistnoret 2 ...................... <pLoczList, []>
  [658] objcall 88 .............................. pLoczList.add([])
  [660] getprop 1051 ............................ <pLocShiftList>
  [663] getobjprop 33 ........................... <pLocShiftList.count>
  [665] getprop 18 .............................. <pSprList>
  [667] getobjprop 33 ........................... <pSprList.count>
  [669] lt ...................................... <pLocShiftList.count < pSprList.count>
  [670] jmpifz [683] ............................ if pLocShiftList.count < pSprList.count then
  [673] getprop 1051 ............................ <pLocShiftList>
  [676] pusharglist 0 ........................... <[]>
  [678] pushlist ................................ <[]>
  [679] pusharglistnoret 2 ...................... <pLocShiftList, []>
  [681] objcall 88 .............................. pLocShiftList.add([])
  [683] pushzero ................................ <0>
  [684] setlocal 11
  [686] getlocal 11
  [688] pushint8 7 .............................. <7>
  [690] lteq
  [691] jmpifz [770] ............................ repeat with tdir = 0 to 7
  [694] getprop 1050 ............................ <pLoczList>
  [697] pusharglist 1 ........................... <pLoczList>
  [699] objcall 1474 ............................ <pLoczList.getLast()>
  [702] getparam 0 .............................. <me>
  [704] getlocal 4 .............................. <i>
  [706] pusharglist 1 ........................... <i>
  [708] extcall 451 ............................. <numToChar(i)>
  [711] getlocal 11 ............................. <tdir>
  [713] getlocal 0 .............................. <tClass>
  [715] pusharglist 4 ........................... <me, numToChar(i), tdir, tClass>
  [717] objcall 1448 ............................ <me.solveLocZ(numToChar(i), tdir, tClass)>
  [720] pusharglist 1 ........................... <me.solveLocZ(numToChar(i), tdir, tClass)>
  [722] extcall 102 ............................. <integer(me.solveLocZ(numToChar(i), tdir, tClass))>
  [724] getlocal 6 .............................. <tLoczAdjust>
  [726] add ..................................... <integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust>
  [727] pusharglistnoret 2 ...................... <pLoczList.getLast(), integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust>
  [729] objcall 88 .............................. pLoczList.getLast().add(integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust)
  [731] getprop 1051 ............................ <pLocShiftList>
  [734] pusharglist 1 ........................... <pLocShiftList>
  [736] objcall 1474 ............................ <pLocShiftList.getLast()>
  [739] getparam 0 .............................. <me>
  [741] getlocal 4 .............................. <i>
  [743] pusharglist 1 ........................... <i>
  [745] extcall 451 ............................. <numToChar(i)>
  [748] getlocal 11 ............................. <tdir>
  [750] getlocal 0 .............................. <tClass>
  [752] pusharglist 4 ........................... <me, numToChar(i), tdir, tClass>
  [754] objcall 1449 ............................ <me.solveLocShift(numToChar(i), tdir, tClass)>
  [757] pusharglistnoret 2 ...................... <pLocShiftList.getLast(), me.solveLocShift(numToChar(i), tdir, tClass)>
  [759] objcall 88 .............................. pLocShiftList.getLast().add(me.solveLocShift(numToChar(i), tdir, tClass))
  [761] pushint8 1
  [763] getlocal 11
  [765] add
  [766] setlocal 11
  [768] endrepeat [686]
  [770] getlocal 6 .............................. <tLoczAdjust>
  [772] pushint8 1 .............................. <1>
  [774] add ..................................... <tLoczAdjust + 1>
  [775] setlocal 6 .............................. tLoczAdjust = tLoczAdjust + 1
  [777] getlocal 2 .............................. <tSpr>
  [779] pusharglist 1 ........................... <tSpr>
  [781] extcall 120 ............................. <voidp(tSpr)>
  [783] not ..................................... <not voidp(tSpr)>
  [784] getlocal 2 .............................. <tSpr>
  [786] pushzero ................................ <0>
  [787] pusharglist 1 ........................... <0>
  [789] extcall 73 .............................. <sprite(0)>
  [791] nteq .................................... <tSpr <> sprite(0)>
  [792] and ..................................... <not voidp(tSpr) and (tSpr <> sprite(0))>
  [793] jmpifz [982] ............................ if not voidp(tSpr) and (tSpr <> sprite(0)) then / else
  [796] getlocal 3 .............................. <tMemNum>
  [798] pushint8 1 .............................. <1>
  [800] lt ...................................... <tMemNum < 1>
  [801] jmpifz [828] ............................ if tMemNum < 1 then
  [804] getlocal 3 .............................. <tMemNum>
  [806] pusharglist 1 ........................... <tMemNum>
  [808] extcall 77 .............................. <abs(tMemNum)>
  [810] setlocal 3 .............................. tMemNum = abs(tMemNum)
  [812] getlocal 2 .............................. <tSpr>
  [814] pushint16 180 ........................... <180>
  [817] setobjprop 1060 ......................... tSpr.rotation = 180
  [820] getlocal 2 .............................. <tSpr>
  [822] pushint16 180 ........................... <180>
  [825] setobjprop 1061 ......................... tSpr.skew = 180
  [828] getlocal 2 .............................. <tSpr>
  [830] getlocal 3 .............................. <tMemNum>
  [832] setobjprop 79 ........................... tSpr.castNum = tMemNum
  [834] getlocal 2 .............................. <tSpr>
  [836] getlocal 3 .............................. <tMemNum>
  [838] pusharglist 1 ........................... <tMemNum>
  [840] extcall 64 .............................. <member(tMemNum)>
  [842] getobjprop 80 ........................... <member(tMemNum).width>
  [844] setobjprop 80 ........................... tSpr.width = member(tMemNum).width
  [846] getlocal 2 .............................. <tSpr>
  [848] getlocal 3 .............................. <tMemNum>
  [850] pusharglist 1 ........................... <tMemNum>
  [852] extcall 64 .............................. <member(tMemNum)>
  [854] getobjprop 81 ........................... <member(tMemNum).height>
  [856] setobjprop 81 ........................... tSpr.height = member(tMemNum).height
  [858] getlocal 2 .............................. <tSpr>
  [860] getparam 0 .............................. <me>
  [862] getlocal 4 .............................. <i>
  [864] pusharglist 1 ........................... <i>
  [866] extcall 451 ............................. <numToChar(i)>
  [869] getlocal 0 .............................. <tClass>
  [871] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [873] objcall 1446 ............................ <me.solveInk(numToChar(i), tClass)>
  [876] setobjprop 93 ........................... tSpr.ink = me.solveInk(numToChar(i), tClass)
  [878] getlocal 2 .............................. <tSpr>
  [880] getparam 0 .............................. <me>
  [882] getlocal 4 .............................. <i>
  [884] pusharglist 1 ........................... <i>
  [886] extcall 451 ............................. <numToChar(i)>
  [889] getlocal 0 .............................. <tClass>
  [891] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [893] objcall 1447 ............................ <me.solveBlend(numToChar(i), tClass)>
  [896] setobjprop 436 .......................... tSpr.blend = me.solveBlend(numToChar(i), tClass)
  [899] getlocal 5 .............................. <j>
  [901] getprop 1450 ............................ <pPartColors>
  [904] getobjprop 33 ........................... <pPartColors.count>
  [906] lteq .................................... <j <= pPartColors.count>
  [907] jmpifz [979] ............................ if j <= pPartColors.count then
  [910] getprop 1450 ............................ <pPartColors>
  [913] getlocal 5 .............................. <j>
  [915] pusharglist 2 ........................... <pPartColors, j>
  [917] objcall 34 .............................. <pPartColors[j]>
  [919] pusharglist 1 ........................... <pPartColors[j]>
  [921] extcall 519 ............................. <string(pPartColors[j])>
  [924] pushsymb 66 ............................. <#char>
  [926] pushint8 1 .............................. <1>
  [928] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [930] objcall 68 .............................. <string(pPartColors[j]).char[1]>
  [932] pushcons 24 ............................. <"#">
  [934] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [935] jmpifz [958] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [938] getlocal 2 .............................. <tSpr>
  [940] getprop 1450 ............................ <pPartColors>
  [943] getlocal 5 .............................. <j>
  [945] pusharglist 2 ........................... <pPartColors, j>
  [947] objcall 34 .............................. <pPartColors[j]>
  [949] pusharglist 1 ........................... <pPartColors[j]>
  [951] extcall 94 .............................. <rgb(pPartColors[j])>
  [953] setobjprop 95 ........................... tSpr.bgColor = rgb(pPartColors[j])
  [955] jmp [979]
  [958] getlocal 2 .............................. <tSpr>
  [960] getprop 1450 ............................ <pPartColors>
  [963] getlocal 5 .............................. <j>
  [965] pusharglist 2 ........................... <pPartColors, j>
  [967] objcall 34 .............................. <pPartColors[j]>
  [969] pusharglist 1 ........................... <pPartColors[j]>
  [971] extcall 102 ............................. <integer(pPartColors[j])>
  [973] pusharglist 1 ........................... <integer(pPartColors[j])>
  [975] extcall 96 .............................. <paletteIndex(integer(pPartColors[j]))>
  [977] setobjprop 95 ........................... tSpr.bgColor = paletteIndex(integer(pPartColors[j]))
  [979] jmp [996]
  [982] getparam 0 .............................. <me>
  [984] pushcons 25 ............................. <"Out of sprites!!!">
  [986] pushsymb 10 ............................. <#solveMembers>
  [988] pusharglist 3 ........................... <me, "Out of sprites!!!", #solveMembers>
  [990] extcall 72 .............................. <error(me, "Out of sprites!!!", #solveMembers)>
  [992] pusharglistnoret 1 ...................... <error(me, "Out of sprites!!!", #solveMembers)>
  [994] extcall 31 .............................. return error(me, "Out of sprites!!!", #solveMembers)
  [996] getlocal 4 .............................. <i>
  [998] pushint8 1 .............................. <1>
  [1000] add .................................... <i + 1>
  [1001] setlocal 4 ............................. i = i + 1
  [1003] getlocal 5 ............................. <j>
  [1005] pushint8 1 ............................. <1>
  [1007] add .................................... <j + 1>
  [1008] setlocal 5 ............................. j = j + 1
  [1010] endrepeat [169]
  [1013] getlocal 0 ............................. <tClass>
  [1015] pushcons 26 ............................ <"_sd">
  [1017] joinstr ................................ <tClass & "_sd">
  [1018] setlocal 13 ............................ tShadowName = tClass & "_sd"
  [1020] getprop 28 ............................. <pDirection>
  [1022] pusharglist 1 .......................... <pDirection>
  [1024] extcall 92 ............................. <listp(pDirection)>
  [1026] jmpifz [1045] .......................... if listp(pDirection) then
  [1029] getlocal 13 ............................ <tShadowName>
  [1031] pushcons 18 ............................ <"_">
  [1033] joinstr ................................ <tShadowName & "_">
  [1034] getprop 28 ............................. <pDirection>
  [1036] pushint8 1 ............................. <1>
  [1038] pusharglist 2 .......................... <pDirection, 1>
  [1040] objcall 34 ............................. <pDirection[1]>
  [1042] joinstr ................................ <tShadowName & "_" & pDirection[1]>
  [1043] setlocal 13 ............................ tShadowName = tShadowName & "_" & pDirection[1]
  [1045] getlocal 13 ............................ <tShadowName>
  [1047] pusharglist 1 .......................... <tShadowName>
  [1049] extcall 65 ............................. <getmemnum(tShadowName)>
  [1051] setlocal 14 ............................ tShadowNum = getmemnum(tShadowName)
  [1053] getlocal 14 ............................ <tShadowNum>
  [1055] not .................................... <not tShadowNum>
  [1056] getprop 28 ............................. <pDirection>
  [1058] pusharglist 1 .......................... <pDirection>
  [1060] extcall 92 ............................. <listp(pDirection)>
  [1062] and .................................... <not tShadowNum and listp(pDirection)>
  [1063] jmpifz [1077] .......................... if not tShadowNum and listp(pDirection) then
  [1066] getlocal 0 ............................. <tClass>
  [1068] pushcons 26 ............................ <"_sd">
  [1070] joinstr ................................ <tClass & "_sd">
  [1071] pusharglist 1 .......................... <tClass & "_sd">
  [1073] extcall 65 ............................. <getmemnum(tClass & "_sd")>
  [1075] setlocal 14 ............................ tShadowNum = getmemnum(tClass & "_sd")
  [1077] pushsymb 52 ............................ <#room>
  [1079] pusharglist 1 .......................... <#room>
  [1081] extcall 345 ............................ <threadExists(#room)>
  [1084] jmpifz [1115] .......................... if threadExists(#room) then / else
  [1087] pushsymb 52 ............................ <#room>
  [1089] pusharglist 1 .......................... <#room>
  [1091] extcall 51 ............................. <getThread(#room)>
  [1093] setlocal 15 ............................ tRoomThread = getThread(#room)
  [1095] getlocal 15 ............................ <tRoomThread>
  [1097] pusharglist 1 .......................... <tRoomThread>
  [1099] objcall 115 ............................ <tRoomThread.getComponent()>
  [1101] setlocal 16 ............................ tComponent = tRoomThread.getComponent()
  [1103] getlocal 16 ............................ <tComponent>
  [1105] pusharglist 1 .......................... <tComponent>
  [1107] objcall 574 ............................ <tComponent.getShadowManager()>
  [1110] setlocal 17 ............................ tShadowManager = tComponent.getShadowManager()
  [1112] jmp [1120]
  [1115] pushzero ............................... <0>
  [1116] pusharglistnoret 1 ..................... <0>
  [1118] extcall 31 ............................. return 0
  [1120] getparam 0 ............................. <me>
  [1122] pusharglist 1 .......................... <me>
  [1124] objcall 75 ............................. <me.getID()>
  [1126] setlocal 18 ............................ tid = me.getID()
  [1128] pushsymb 131 ........................... <#session>
  [1130] pusharglist 1 .......................... <#session>
  [1132] extcall 130 ............................ <getObject(#session)>
  [1134] pushcons 27 ............................ <"lastroom">
  [1136] pusharglist 2 .......................... <getObject(#session), "lastroom">
  [1138] objcall 133 ............................ <getObject(#session).get("lastroom")>
  [1140] pushsymb 49 ............................ <#type>
  [1142] pusharglist 2 .......................... <getObject(#session).get("lastroom"), #type>
  [1144] objcall 34 ............................. <getObject(#session).get("lastroom")[#type]>
  [1146] setlocal 19 ............................ tRoomType = getObject(#session).get("lastroom")[#type]
  [1148] getlocal 19 ............................ <tRoomType>
  [1150] pushsymb 314 ........................... <#private>
  [1153] nteq ................................... <tRoomType <> #private>
  [1154] jmpifz [1360] .......................... if tRoomType <> #private then / else
  [1157] getlocal 14 ............................ <tShadowNum>
  [1159] pushzero ............................... <0>
  [1160] nteq ................................... <tShadowNum <> 0>
  [1161] jmpifz [1357] .......................... if tShadowNum <> 0 then
  [1164] getlocal 18 ............................ <tid>
  [1166] pusharglist 1 .......................... <tid>
  [1168] extcall 74 ............................. <reserveSprite(tid)>
  [1170] pusharglist 1 .......................... <reserveSprite(tid)>
  [1172] extcall 73 ............................. <sprite(reserveSprite(tid))>
  [1174] setlocal 2 ............................. tSpr = sprite(reserveSprite(tid))
  [1176] getprop 18 ............................. <pSprList>
  [1178] getlocal 2 ............................. <tSpr>
  [1180] pusharglistnoret 2 ..................... <pSprList, tSpr>
  [1182] objcall 88 ............................. pSprList.add(tSpr)
  [1184] getprop 1050 ........................... <pLoczList>
  [1187] pushint16 4000 ......................... <4000>
  [1190] inv .................................... <-4000>
  [1191] pushint16 4000 ......................... <4000>
  [1194] inv .................................... <-4000>
  [1195] pushint16 4000 ......................... <4000>
  [1198] inv .................................... <-4000>
  [1199] pushint16 4000 ......................... <4000>
  [1202] inv .................................... <-4000>
  [1203] pushint16 4000 ......................... <4000>
  [1206] inv .................................... <-4000>
  [1207] pushint16 4000 ......................... <4000>
  [1210] inv .................................... <-4000>
  [1211] pushint16 4000 ......................... <4000>
  [1214] inv .................................... <-4000>
  [1215] pusharglist 7 .......................... <[-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1217] pushlist ............................... <[-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1218] pusharglistnoret 2 ..................... <pLoczList, [-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1220] objcall 88 ............................. pLoczList.add([-4000, -4000, -4000, -4000, -4000, -4000, -4000])
  [1222] getprop 1051 ........................... <pLocShiftList>
  [1225] pushzero ............................... <0>
  [1226] pushzero ............................... <0>
  [1227] pushzero ............................... <0>
  [1228] pushzero ............................... <0>
  [1229] pushzero ............................... <0>
  [1230] pushzero ............................... <0>
  [1231] pushzero ............................... <0>
  [1232] pushzero ............................... <0>
  [1233] pusharglist 8 .......................... <[0, 0, 0, 0, 0, 0, 0, 0]>
  [1235] pushlist ............................... <[0, 0, 0, 0, 0, 0, 0, 0]>
  [1236] pusharglistnoret 2 ..................... <pLocShiftList, [0, 0, 0, 0, 0, 0, 0, 0]>
  [1238] objcall 88 ............................. pLocShiftList.add([0, 0, 0, 0, 0, 0, 0, 0])
  [1240] getlocal 14 ............................ <tShadowNum>
  [1242] pushzero ............................... <0>
  [1243] lt ..................................... <tShadowNum < 0>
  [1244] jmpifz [1282] .......................... if tShadowNum < 0 then
  [1247] getlocal 14 ............................ <tShadowNum>
  [1249] pusharglist 1 .......................... <tShadowNum>
  [1251] extcall 77 ............................. <abs(tShadowNum)>
  [1253] setlocal 14 ............................ tShadowNum = abs(tShadowNum)
  [1255] getlocal 2 ............................. <tSpr>
  [1257] pushint16 180 .......................... <180>
  [1260] setobjprop 1060 ........................ tSpr.rotation = 180
  [1263] getlocal 2 ............................. <tSpr>
  [1265] pushint16 180 .......................... <180>
  [1268] setobjprop 1061 ........................ tSpr.skew = 180
  [1271] getlocal 2 ............................. <tSpr>
  [1273] getlocal 2 ............................. <tSpr>
  [1275] getobjprop 112 ......................... <tSpr.locH>
  [1277] getprop 50 ............................. <pXFactor>
  [1279] add .................................... <tSpr.locH + pXFactor>
  [1280] setobjprop 112 ......................... tSpr.locH = tSpr.locH + pXFactor
  [1282] getlocal 2 ............................. <tSpr>
  [1284] getlocal 14 ............................ <tShadowNum>
  [1286] setobjprop 79 .......................... tSpr.castNum = tShadowNum
  [1288] getlocal 2 ............................. <tSpr>
  [1290] getlocal 14 ............................ <tShadowNum>
  [1292] pusharglist 1 .......................... <tShadowNum>
  [1294] extcall 64 ............................. <member(tShadowNum)>
  [1296] getobjprop 80 .......................... <member(tShadowNum).width>
  [1298] setobjprop 80 .......................... tSpr.width = member(tShadowNum).width
  [1300] getlocal 2 ............................. <tSpr>
  [1302] getlocal 14 ............................ <tShadowNum>
  [1304] pusharglist 1 .......................... <tShadowNum>
  [1306] extcall 64 ............................. <member(tShadowNum)>
  [1308] getobjprop 81 .......................... <member(tShadowNum).height>
  [1310] setobjprop 81 .......................... tSpr.height = member(tShadowNum).height
  [1312] getlocal 2 ............................. <tSpr>
  [1314] getparam 0 ............................. <me>
  [1316] pushcons 28 ............................ <"sd">
  [1318] pusharglist 2 .......................... <me, "sd">
  [1320] objcall 1446 ........................... <me.solveInk("sd")>
  [1323] setobjprop 93 .......................... tSpr.ink = me.solveInk("sd")
  [1325] getlocal 2 ............................. <tSpr>
  [1327] getparam 0 ............................. <me>
  [1329] pushcons 28 ............................ <"sd">
  [1331] pusharglist 2 .......................... <me, "sd">
  [1333] objcall 1447 ........................... <me.solveBlend("sd")>
  [1336] setobjprop 436 ......................... tSpr.blend = me.solveBlend("sd")
  [1339] getlocal 2 ............................. <tSpr>
  [1341] getobjprop 436 ......................... <tSpr.blend>
  [1344] pushint8 100 ........................... <100>
  [1346] eq ..................................... <tSpr.blend = 100>
  [1347] jmpifz [1357] .......................... if tSpr.blend = 100 then
  [1350] getlocal 2 ............................. <tSpr>
  [1352] pushint8 20 ............................ <20>
  [1354] setobjprop 436 ......................... tSpr.blend = 20
  [1357] jmp [1579]
  [1360] getlocal 17 ............................ <tShadowManager>
  [1362] pusharglist 1 .......................... <tShadowManager>
  [1364] extcall 120 ............................ <voidp(tShadowManager)>
  [1366] jmpifz [1374] .......................... if voidp(tShadowManager) then
  [1369] pushzero ............................... <0>
  [1370] pusharglistnoret 1 ..................... <0>
  [1372] extcall 31 ............................. return 0
  [1374] getlocal 17 ............................ <tShadowManager>
  [1376] getlocal 18 ............................ <tid>
  [1378] pusharglistnoret 2 ..................... <tShadowManager, tid>
  [1380] objcall 1453 ........................... tShadowManager.removeShadow(tid)
  [1383] getlocal 14 ............................ <tShadowNum>
  [1385] pushzero ............................... <0>
  [1386] nteq ................................... <tShadowNum <> 0>
  [1387] getprop 21 ............................. <pLocH>
  [1389] getprop 21 ............................. <pLocH>
  [1391] pusharglist 1 .......................... <pLocH>
  [1393] extcall 102 ............................ <integer(pLocH)>
  [1395] eq ..................................... <pLocH = integer(pLocH)>
  [1396] and .................................... <(tShadowNum <> 0) and (pLocH = integer(pLocH))>
  [1397] jmpifz [1579] .......................... if (tShadowNum <> 0) and (pLocH = integer(pLocH)) then
  [1400] pusharglist 0 .......................... <[:]>
  [1402] pushproplist ........................... <[:]>
  [1403] setlocal 20 ............................ tProps = [:]
  [1405] getlocal 15 ............................ <tRoomThread>
  [1407] pusharglist 1 .......................... <tRoomThread>
  [1409] objcall 53 ............................. <tRoomThread.getInterface()>
  [1411] pusharglist 1 .......................... <tRoomThread.getInterface()>
  [1413] objcall 54 ............................. <tRoomThread.getInterface().getGeometry()>
  [1415] getprop 19 ............................. <pLocX>
  [1417] getprop 20 ............................. <pLocY>
  [1419] getprop 21 ............................. <pLocH>
  [1421] pusharglist 4 .......................... <tRoomThread.getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [1423] objcall 111 ............................ <tRoomThread.getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [1425] setlocal 21 ............................ tScreenLocs = tRoomThread.getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [1427] getlocal 14 ............................ <tShadowNum>
  [1429] pusharglist 1 .......................... <tShadowNum>
  [1431] extcall 64 ............................. <member(tShadowNum)>
  [1433] setlocal 22 ............................ tmember = member(tShadowNum)
  [1435] getlocal 14 ............................ <tShadowNum>
  [1437] pushzero ............................... <0>
  [1438] lt ..................................... <tShadowNum < 0>
  [1439] jmpifz [1480] .......................... if tShadowNum < 0 then
  [1442] getlocal 14 ............................ <tShadowNum>
  [1444] pusharglist 1 .......................... <tShadowNum>
  [1446] extcall 77 ............................. <abs(tShadowNum)>
  [1448] setlocal 14 ............................ tShadowNum = abs(tShadowNum)
  [1450] getlocal 14 ............................ <tShadowNum>
  [1452] pusharglist 1 .......................... <tShadowNum>
  [1454] extcall 64 ............................. <member(tShadowNum)>
  [1456] setlocal 22 ............................ tmember = member(tShadowNum)
  [1458] getlocal 20 ............................ <tProps>
  [1460] pushsymb 1475 .......................... <#multiflip>
  [1463] pushint8 1 ............................. <1>
  [1465] pusharglistnoret 3 ..................... <tProps, #multiflip, 1>
  [1467] objcall 59 ............................. tProps[#multiflip] = 1
  [1469] getlocal 20 ............................ <tProps>
  [1471] pushsymb 278 ........................... <#offsetx>
  [1474] getprop 50 ............................. <pXFactor>
  [1476] pusharglistnoret 3 ..................... <tProps, #offsetx, pXFactor>
  [1478] objcall 59 ............................. tProps[#offsetx] = pXFactor
  [1480] getlocal 20 ............................ <tProps>
  [1482] pushsymb 64 ............................ <#member>
  [1484] getlocal 14 ............................ <tShadowNum>
  [1486] pusharglist 1 .......................... <tShadowNum>
  [1488] extcall 64 ............................. <member(tShadowNum)>
  [1490] getobjprop 58 .......................... <member(tShadowNum).name>
  [1492] pusharglistnoret 3 ..................... <tProps, #member, member(tShadowNum).name>
  [1494] objcall 59 ............................. tProps[#member] = member(tShadowNum).name
  [1496] getlocal 20 ............................ <tProps>
  [1498] pushsymb 112 ........................... <#locH>
  [1500] getlocal 21 ............................ <tScreenLocs>
  [1502] pushint8 1 ............................. <1>
  [1504] pusharglist 2 .......................... <tScreenLocs, 1>
  [1506] objcall 34 ............................. <tScreenLocs[1]>
  [1508] pusharglistnoret 3 ..................... <tProps, #locH, tScreenLocs[1]>
  [1510] objcall 59 ............................. tProps[#locH] = tScreenLocs[1]
  [1512] getlocal 20 ............................ <tProps>
  [1514] pushsymb 113 ........................... <#locV>
  [1516] getlocal 21 ............................ <tScreenLocs>
  [1518] pushint8 2 ............................. <2>
  [1520] pusharglist 2 .......................... <tScreenLocs, 2>
  [1522] objcall 34 ............................. <tScreenLocs[2]>
  [1524] pusharglistnoret 3 ..................... <tProps, #locV, tScreenLocs[2]>
  [1526] objcall 59 ............................. tProps[#locV] = tScreenLocs[2]
  [1528] getlocal 20 ............................ <tProps>
  [1530] pushsymb 80 ............................ <#width>
  [1532] getlocal 22 ............................ <tmember>
  [1534] getobjprop 80 .......................... <tmember.width>
  [1536] pusharglistnoret 3 ..................... <tProps, #width, tmember.width>
  [1538] objcall 59 ............................. tProps[#width] = tmember.width
  [1540] getlocal 20 ............................ <tProps>
  [1542] pushsymb 81 ............................ <#height>
  [1544] getlocal 22 ............................ <tmember>
  [1546] getobjprop 81 .......................... <tmember.height>
  [1548] pusharglistnoret 3 ..................... <tProps, #height, tmember.height>
  [1550] objcall 59 ............................. tProps[#height] = tmember.height
  [1552] getlocal 20 ............................ <tProps>
  [1554] pushsymb 459 ........................... <#id>
  [1557] getlocal 18 ............................ <tid>
  [1559] pusharglistnoret 3 ..................... <tProps, #id, tid>
  [1561] objcall 59 ............................. tProps[#id] = tid
  [1563] getlocal 17 ............................ <tShadowManager>
  [1565] getlocal 20 ............................ <tProps>
  [1567] pusharglistnoret 2 ..................... <tShadowManager, tProps>
  [1569] objcall 1476 ........................... tShadowManager.addShadow(tProps)
  [1572] getlocal 17 ............................ <tShadowManager>
  [1574] pusharglistnoret 1 ..................... <tShadowManager>
  [1576] objcall 724 ............................ tShadowManager.render()
  [1579] getprop 18 ............................. <pSprList>
  [1581] getobjprop 33 .......................... <pSprList.count>
  [1583] pushzero ............................... <0>
  [1584] gt ..................................... <pSprList.count > 0>
  [1585] jmpifz [1597] .......................... if pSprList.count > 0 then / else
  [1588] pushint8 1 ............................. <1>
  [1590] pusharglistnoret 1 ..................... <1>
  [1592] extcall 31 ............................. return 1
  [1594] jmp [1614]
  [1597] getparam 0 ............................. <me>
  [1599] pushcons 21 ............................ <"Couldn't define members:">
  [1601] getlocal 0 ............................. <tClass>
  [1603] joinpadstr ............................. <"Couldn't define members:" && tClass>
  [1604] pushsymb 10 ............................ <#solveMembers>
  [1606] pusharglist 3 .......................... <me, "Couldn't define members:" && tClass, #solveMembers>
  [1608] extcall 72 ............................. <error(me, "Couldn't define members:" && tClass, #solveMembers)>
  [1610] pusharglistnoret 1 ..................... <error(me, "Couldn't define members:" && tClass, #solveMembers)>
  [1612] extcall 31 ............................. return error(me, "Couldn't define members:" && tClass, #solveMembers)
  [1614] ret
end

on updateLocation me
  [  0] pushsymb 52 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 51 .............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 53 .............................. <getThread(#room).getInterface()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 12] objcall 54 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 14] getprop 19 .............................. <pLocX>
  [ 16] getprop 20 .............................. <pLocY>
  [ 18] getprop 21 .............................. <pLocH>
  [ 20] pusharglist 4 ........................... <getThread(#room).getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [ 22] objcall 111 ............................. <getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 24] setlocal 0 .............................. tScreenLocs = getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 26] pushzero ................................ <0>
  [ 27] setlocal 1 .............................. i = 0
  [ 29] getprop 18 .............................. <pSprList>
  [ 31] peek 0
  [ 33] pusharglist 1
  [ 35] extcall 33
  [ 37] pushint8 1
  [ 39] peek 0
  [ 41] peek 2
  [ 43] lteq
  [ 44] jmpifz [290] ............................ repeat with tSpr in pSprList
  [ 47] peek 2
  [ 49] peek 1
  [ 51] pusharglist 2
  [ 53] extcall 34
  [ 55] setlocal 2
  [ 57] getlocal 1 .............................. <i>
  [ 59] pushint8 1 .............................. <1>
  [ 61] add ..................................... <i + 1>
  [ 62] setlocal 1 .............................. i = i + 1
  [ 64] getlocal 2 .............................. <tSpr>
  [ 66] getlocal 0 .............................. <tScreenLocs>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 72] objcall 34 .............................. <tScreenLocs[1]>
  [ 74] setobjprop 112 .......................... tSpr.locH = tScreenLocs[1]
  [ 76] getlocal 2 .............................. <tSpr>
  [ 78] getlocal 0 .............................. <tScreenLocs>
  [ 80] pushint8 2 .............................. <2>
  [ 82] pusharglist 2 ........................... <tScreenLocs, 2>
  [ 84] objcall 34 .............................. <tScreenLocs[2]>
  [ 86] setobjprop 113 .......................... tSpr.locV = tScreenLocs[2]
  [ 88] getlocal 2 .............................. <tSpr>
  [ 90] getobjprop 1060 ......................... <tSpr.rotation>
  [ 93] pushint16 180 ........................... <180>
  [ 96] eq ...................................... <tSpr.rotation = 180>
  [ 97] jmpifz [111] ............................ if tSpr.rotation = 180 then
  [100] getlocal 2 .............................. <tSpr>
  [102] getlocal 2 .............................. <tSpr>
  [104] getobjprop 112 .......................... <tSpr.locH>
  [106] getprop 50 .............................. <pXFactor>
  [108] add ..................................... <tSpr.locH + pXFactor>
  [109] setobjprop 112 .......................... tSpr.locH = tSpr.locH + pXFactor
  [111] getprop 28 .............................. <pDirection>
  [113] pushint8 1 .............................. <1>
  [115] pusharglist 2 ........................... <pDirection, 1>
  [117] objcall 34 .............................. <pDirection[1]>
  [119] pushzero ................................ <0>
  [120] lt ...................................... <pDirection[1] < 0>
  [121] jmpifz [133] ............................ if pDirection[1] < 0 then
  [124] getprop 28 .............................. <pDirection>
  [126] pushint8 1 .............................. <1>
  [128] pushzero ................................ <0>
  [129] pusharglistnoret 3 ...................... <pDirection, 1, 0>
  [131] objcall 59 .............................. pDirection[1] = 0
  [133] getprop 28 .............................. <pDirection>
  [135] pushint8 1 .............................. <1>
  [137] pusharglist 2 ........................... <pDirection, 1>
  [139] objcall 34 .............................. <pDirection[1]>
  [141] pushint8 1 .............................. <1>
  [143] add ..................................... <pDirection[1] + 1>
  [144] getprop 1051 ............................ <pLocShiftList>
  [147] getlocal 1 .............................. <i>
  [149] pusharglist 2 ........................... <pLocShiftList, i>
  [151] objcall 34 .............................. <pLocShiftList[i]>
  [153] getobjprop 33 ........................... <pLocShiftList[i].count>
  [155] gt ...................................... <(pDirection[1] + 1) > pLocShiftList[i].count>
  [156] jmpifz [168] ............................ if (pDirection[1] + 1) > pLocShiftList[i].count then
  [159] getprop 28 .............................. <pDirection>
  [161] pushint8 1 .............................. <1>
  [163] pushzero ................................ <0>
  [164] pusharglistnoret 3 ...................... <pDirection, 1, 0>
  [166] objcall 59 .............................. pDirection[1] = 0
  [168] getprop 1051 ............................ <pLocShiftList>
  [171] getlocal 1 .............................. <i>
  [173] pusharglist 2 ........................... <pLocShiftList, i>
  [175] objcall 34 .............................. <pLocShiftList[i]>
  [177] getprop 28 .............................. <pDirection>
  [179] pushint8 1 .............................. <1>
  [181] pusharglist 2 ........................... <pDirection, 1>
  [183] objcall 34 .............................. <pDirection[1]>
  [185] pushint8 1 .............................. <1>
  [187] add ..................................... <pDirection[1] + 1>
  [188] pusharglist 2 ........................... <pLocShiftList[i], pDirection[1] + 1>
  [190] objcall 34 .............................. <pLocShiftList[i][pDirection[1] + 1]>
  [192] setlocal 3 .............................. tLocShift = pLocShiftList[i][pDirection[1] + 1]
  [194] getlocal 2 .............................. <tSpr>
  [196] getlocal 2 .............................. <tSpr>
  [198] getobjprop 435 .......................... <tSpr.loc>
  [201] getlocal 3 .............................. <tLocShift>
  [203] add ..................................... <tSpr.loc + tLocShift>
  [204] setobjprop 435 .......................... tSpr.loc = tSpr.loc + tLocShift
  [207] getprop 1050 ............................ <pLoczList>
  [210] getlocal 1 .............................. <i>
  [212] pusharglist 2 ........................... <pLoczList, i>
  [214] objcall 34 .............................. <pLoczList[i]>
  [216] getprop 28 .............................. <pDirection>
  [218] pushint8 1 .............................. <1>
  [220] pusharglist 2 ........................... <pDirection, 1>
  [222] objcall 34 .............................. <pDirection[1]>
  [224] pushint8 1 .............................. <1>
  [226] add ..................................... <pDirection[1] + 1>
  [227] pusharglist 2 ........................... <pLoczList[i], pDirection[1] + 1>
  [229] objcall 34 .............................. <pLoczList[i][pDirection[1] + 1]>
  [231] setlocal 4 .............................. tZ = pLoczList[i][pDirection[1] + 1]
  [233] getprop 1284 ............................ <pCorrectLocZ>
  [236] jmpifz [267] ............................ if pCorrectLocZ then
  [239] getlocal 2 .............................. <tSpr>
  [241] getlocal 0 .............................. <tScreenLocs>
  [243] pushint8 3 .............................. <3>
  [245] pusharglist 2 ........................... <tScreenLocs, 3>
  [247] objcall 34 .............................. <tScreenLocs[3]>
  [249] getprop 21 .............................. <pLocH>
  [251] pushint16 1000 .......................... <1000>
  [254] mul ..................................... <pLocH * 1000>
  [255] add ..................................... <tScreenLocs[3] + (pLocH * 1000)>
  [256] getlocal 4 .............................. <tZ>
  [258] add ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ>
  [259] pushint8 1 .............................. <1>
  [261] sub ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ - 1>
  [262] setobjprop 129 .......................... tSpr.locZ = tScreenLocs[3] + (pLocH * 1000) + tZ - 1
  [264] jmp [285] ............................... next repeat
  [267] getlocal 2 .............................. <tSpr>
  [269] getlocal 0 .............................. <tScreenLocs>
  [271] pushint8 3 .............................. <3>
  [273] pusharglist 2 ........................... <tScreenLocs, 3>
  [275] objcall 34 .............................. <tScreenLocs[3]>
  [277] getlocal 4 .............................. <tZ>
  [279] add ..................................... <tScreenLocs[3] + tZ>
  [280] pushint8 1 .............................. <1>
  [282] sub ..................................... <tScreenLocs[3] + tZ - 1>
  [283] setobjprop 129 .......................... tSpr.locZ = tScreenLocs[3] + tZ - 1
  [285] pushint8 1
  [287] add
  [288] endrepeat [ 39]
  [290] pop 3
  [292] getparam 0 .............................. <me>
  [294] getprop 18 .............................. <pSprList>
  [296] pusharglistnoret 2 ...................... <me, pSprList>
  [298] objcall 1097 ............................ me.relocate(pSprList)
  [301] ret
end
