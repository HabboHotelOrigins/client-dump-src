property pClass, pSprList, pDirection, pDimensions, pLoczList, pPartColors, pAnimFrame, pLocX, pLocY, pLocH, pAltitude, pXFactor, pCustom, pCorrectLocZ

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 1254 ............................ pClass = EMPTY
  [  5] pushcons 0 .............................. <EMPTY>
  [  7] setprop 1255 ............................ pCustom = EMPTY
  [ 10] pusharglist 0 ........................... <[]>
  [ 12] pushlist ................................ <[]>
  [ 13] setprop 993 ............................. pSprList = []
  [ 16] pusharglist 0 ........................... <[]>
  [ 18] pushlist ................................ <[]>
  [ 19] setprop 376 ............................. pDirection = []
  [ 22] pusharglist 0 ........................... <[]>
  [ 24] pushlist ................................ <[]>
  [ 25] setprop 375 ............................. pDimensions = []
  [ 28] pusharglist 0 ........................... <[]>
  [ 30] pushlist ................................ <[]>
  [ 31] setprop 994 ............................. pLoczList = []
  [ 34] pusharglist 0 ........................... <[]>
  [ 36] pushlist ................................ <[]>
  [ 37] setprop 1415 ............................ pPartColors = []
  [ 40] pushzero ................................ <0>
  [ 41] setprop 1351 ............................ pAnimFrame = 0
  [ 44] pushzero ................................ <0>
  [ 45] setprop 465 ............................. pLocX = 0
  [ 48] pushzero ................................ <0>
  [ 49] setprop 467 ............................. pLocY = 0
  [ 52] pushzero ................................ <0>
  [ 53] setprop 469 ............................. pLocH = 0
  [ 56] pushzero ................................ <0>
  [ 57] setprop 1416 ............................ pAltitude = 0
  [ 60] pushsymb 931 ............................ <#room>
  [ 63] pusharglist 1 ........................... <#room>
  [ 65] extcall 227 ............................. <getThread(#room)>
  [ 67] pusharglist 1 ........................... <getThread(#room)>
  [ 69] objcall 570 ............................. <getThread(#room).getInterface()>
  [ 72] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 74] objcall 29 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 76] getobjprop 959 .......................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [ 79] setprop 959 ............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [ 82] getprop 959 ............................. <pXFactor>
  [ 85] pushint8 32 ............................. <32>
  [ 87] eq ...................................... <pXFactor = 32>
  [ 88] jmpifz [ 98] ............................ if pXFactor = 32 then / else
  [ 91] pushzero ................................ <0>
  [ 92] setprop 1242 ............................ pCorrectLocZ = 0
  [ 95] jmp [103]
  [ 98] pushint8 1 .............................. <1>
  [100] setprop 1242 ............................ pCorrectLocZ = 1
  [103] pushint8 1 .............................. <1>
  [105] pusharglistnoret 1 ...................... <1>
  [107] extcall 116 ............................. return 1
  [109] ret
end

on deconstruct me
  [  0] getprop 993 ............................. <pSprList>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 149
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 44] ............................ repeat with tSpr in pSprList
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 138
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <tSpr>
  [ 31] getobjprop 335 .......................... <tSpr.spriteNum>
  [ 34] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 36] extcall 339 ............................. releaseSprite(tSpr.spriteNum)
  [ 39] pushint8 1
  [ 41] add
  [ 42] endrepeat [ 11]
  [ 44] pop 3
  [ 46] pusharglist 0 ........................... <[]>
  [ 48] pushlist ................................ <[]>
  [ 49] setprop 993 ............................. pSprList = []
  [ 52] pushint8 1 .............................. <1>
  [ 54] pusharglistnoret 1 ...................... <1>
  [ 56] extcall 116 ............................. return 1
  [ 58] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 463 ............................ <#class>
  [  5] pusharglist 2 ........................... <tdata, #class>
  [  7] objcall 138 ............................. <tdata[#class]>
  [  9] setprop 1254 ............................ pClass = tdata[#class]
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 769 ............................ <#direction>
  [ 17] pusharglist 2 ........................... <tdata, #direction>
  [ 19] objcall 138 ............................. <tdata[#direction]>
  [ 21] setprop 376 ............................. pDirection = tdata[#direction]
  [ 24] getparam 1 .............................. <tdata>
  [ 26] pushsymb 795 ............................ <#dimensions>
  [ 29] pusharglist 2 ........................... <tdata, #dimensions>
  [ 31] objcall 138 ............................. <tdata[#dimensions]>
  [ 33] setprop 375 ............................. pDimensions = tdata[#dimensions]
  [ 36] getparam 1 .............................. <tdata>
  [ 38] pushsymb 464 ............................ <#x>
  [ 41] pusharglist 2 ........................... <tdata, #x>
  [ 43] objcall 138 ............................. <tdata[#x]>
  [ 45] setprop 465 ............................. pLocX = tdata[#x]
  [ 48] getparam 1 .............................. <tdata>
  [ 50] pushsymb 466 ............................ <#y>
  [ 53] pusharglist 2 ........................... <tdata, #y>
  [ 55] objcall 138 ............................. <tdata[#y]>
  [ 57] setprop 467 ............................. pLocY = tdata[#y]
  [ 60] getparam 1 .............................. <tdata>
  [ 62] pushsymb 468 ............................ <#h>
  [ 65] pusharglist 2 ........................... <tdata, #h>
  [ 67] objcall 138 ............................. <tdata[#h]>
  [ 69] setprop 469 ............................. pLocH = tdata[#h]
  [ 72] getparam 0 .............................. <me>
  [ 74] getparam 1 .............................. <tdata>
  [ 76] pushsymb 800 ............................ <#colors>
  [ 79] pusharglist 2 ........................... <tdata, #colors>
  [ 81] objcall 138 ............................. <tdata[#colors]>
  [ 83] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [ 85] objcall 1409 ............................ me.solveColors(tdata[#colors])
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglist 1 ........................... <me>
  [ 92] objcall 1414 ............................ <me.solveMembers()>
  [ 95] pushzero ................................ <0>
  [ 96] eq ...................................... <me.solveMembers() = 0>
  [ 97] jmpifz [105] ............................ if me.solveMembers() = 0 then
  [100] pushzero ................................ <0>
  [101] pusharglistnoret 1 ...................... <0>
  [103] extcall 116 ............................. return 0
  [105] getparam 0 .............................. <me>
  [107] getparam 1 .............................. <tdata>
  [109] pushsymb 801 ............................ <#props>
  [112] pusharglist 2 ........................... <tdata, #props>
  [114] objcall 138 ............................. <tdata[#props]>
  [116] pusharglist 2 ........................... <me, tdata[#props]>
  [118] objcall 478 ............................. <me.prepare(tdata[#props])>
  [121] pushzero ................................ <0>
  [122] eq ...................................... <me.prepare(tdata[#props]) = 0>
  [123] jmpifz [131] ............................ if me.prepare(tdata[#props]) = 0 then
  [126] pushzero ................................ <0>
  [127] pusharglistnoret 1 ...................... <0>
  [129] extcall 116 ............................. return 0
  [131] getparam 0 .............................. <me>
  [133] pusharglistnoret 1 ...................... <me>
  [135] objcall 1024 ............................ me.updateLocation()
  [138] pushint8 1 .............................. <1>
  [140] pusharglistnoret 1 ...................... <1>
  [142] extcall 116 ............................. return 1
  [144] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 116 ............................. return 1
  [  6] ret
end

on getInfo me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tInfo = [:]
  [  5] getlocal 0 .............................. <tInfo>
  [  7] pushsymb 187 ............................ <#name>
  [  9] getprop 1254 ............................ <pClass>
  [ 12] pusharglistnoret 3 ...................... <tInfo, #name, pClass>
  [ 14] objcall 136 ............................. tInfo[#name] = pClass
  [ 16] getlocal 0 .............................. <tInfo>
  [ 18] pushsymb 463 ............................ <#class>
  [ 21] getprop 1254 ............................ <pClass>
  [ 24] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 26] objcall 136 ............................. tInfo[#class] = pClass
  [ 28] getlocal 0 .............................. <tInfo>
  [ 30] pushsymb 259 ............................ <#custom>
  [ 33] getprop 1255 ............................ <pCustom>
  [ 36] pusharglistnoret 3 ...................... <tInfo, #custom, pCustom>
  [ 38] objcall 136 ............................. tInfo[#custom] = pCustom
  [ 40] getlocal 0 .............................. <tInfo>
  [ 42] pusharglistnoret 1 ...................... <tInfo>
  [ 44] extcall 116 ............................. return tInfo
  [ 46] ret
end

on getLocation me
  [  0] getprop 465 ............................. <pLocX>
  [  3] getprop 467 ............................. <pLocY>
  [  6] getprop 469 ............................. <pLocH>
  [  9] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 11] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 12] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 14] extcall 116 ............................. return [pLocX, pLocY, pLocH]
  [ 16] ret
end

on getDirection me
  [  0] getprop 376 ............................. <pDirection>
  [  3] pusharglistnoret 1 ...................... <pDirection>
  [  5] extcall 116 ............................. return pDirection
  [  7] ret
end

on getSprites me
  [  0] getprop 993 ............................. <pSprList>
  [  3] pusharglistnoret 1 ...................... <pSprList>
  [  5] extcall 116 ............................. return pSprList
  [  7] ret
end

on select me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 116 ............................. return 0
  [  5] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 253 ............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 1 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 1415 ............................ pPartColors = []
  [ 19] getmovieprop 654 ........................ <the itemDelimiter>
  [ 22] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 24] pushcons 2 .............................. <",">
  [ 26] setmovieprop 654 ........................ the itemDelimiter = ","
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 1
  [ 33] getlocal 1
  [ 35] getparam 1 .............................. <tpartColors>
  [ 37] pushsymb 655 ............................ <#item>
  [ 40] pusharglist 2 ........................... <tpartColors, #item>
  [ 42] objcall 149 ............................. <tpartColors.item.count>
  [ 44] lteq
  [ 45] jmpifz [ 80] ............................ repeat with t = 1 to tpartColors.item.count
  [ 48] getprop 1415 ............................ <pPartColors>
  [ 51] getparam 1 .............................. <tpartColors>
  [ 53] pushsymb 655 ............................ <#item>
  [ 56] getlocal 1 .............................. <t>
  [ 58] pusharglist 3 ........................... <tpartColors, #item, t>
  [ 60] objcall 134 ............................. <tpartColors.item[t]>
  [ 62] pusharglist 1 ........................... <tpartColors.item[t]>
  [ 64] extcall 596 ............................. <string(tpartColors.item[t])>
  [ 67] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[t])>
  [ 69] objcall 151 ............................. pPartColors.add(string(tpartColors.item[t]))
  [ 71] pushint8 1
  [ 73] getlocal 1
  [ 75] add
  [ 76] setlocal 1
  [ 78] endrepeat [ 33]
  [ 80] getprop 1415 ............................ <pPartColors>
  [ 83] getobjprop 149 .......................... <pPartColors.count>
  [ 85] setlocal 2
  [ 87] getlocal 2
  [ 89] pushint8 4 .............................. <4>
  [ 91] lteq
  [ 92] jmpifz [113] ............................ repeat with j = pPartColors.count to 4
  [ 95] getprop 1415 ............................ <pPartColors>
  [ 98] pushcons 3 .............................. <"*ffffff">
  [100] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [102] objcall 151 ............................. pPartColors.add("*ffffff")
  [104] pushint8 1
  [106] getlocal 2
  [108] add
  [109] setlocal 2
  [111] endrepeat [ 87]
  [113] getlocal 0 .............................. <tDelim>
  [115] setmovieprop 654 ........................ the itemDelimiter = tDelim
  [118] ret
end

on solveInk me, tPart
  [  0] getprop 1254 ............................ <pClass>
  [  3] pushcons 4 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 122 ............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 20] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushint8 8 .............................. <8>
  [ 16] pusharglistnoret 1 ...................... <8>
  [ 18] extcall 116 ............................. return 8
  [ 20] getprop 1254 ............................ <pClass>
  [ 23] pushcons 4 .............................. <".props">
  [ 25] joinstr ................................. <pClass & ".props">
  [ 26] pusharglist 1 ........................... <pClass & ".props">
  [ 28] extcall 330 ............................. <getmemnum(pClass & ".props")>
  [ 31] pushzero ................................ <0>
  [ 32] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 33] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 35] extcall 385 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 38] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 40] getlocal 0 .............................. <tPropList>
  [ 42] pusharglist 1 ........................... <tPropList>
  [ 44] extcall 215 ............................. <ilk(tPropList)>
  [ 46] pushsymb 1436 ........................... <#propList>
  [ 49] nteq .................................... <ilk(tPropList) <> #propList>
  [ 50] jmpifz [ 77] ............................ if ilk(tPropList) <> #propList then / else
  [ 53] getparam 0 .............................. <me>
  [ 55] getprop 1254 ............................ <pClass>
  [ 58] pushcons 5 .............................. <".props is not valid!">
  [ 60] joinstr ................................. <pClass & ".props is not valid!">
  [ 61] pushsymb 1410 ........................... <#solveInk>
  [ 64] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveInk>
  [ 66] extcall 123 ............................. error(me, pClass & ".props is not valid!", #solveInk)
  [ 68] pushint8 8 .............................. <8>
  [ 70] pusharglistnoret 1 ...................... <8>
  [ 72] extcall 116 ............................. return 8
  [ 74] jmp [140]
  [ 77] getlocal 0 .............................. <tPropList>
  [ 79] getparam 1 .............................. <tPart>
  [ 81] pusharglist 2 ........................... <tPropList, tPart>
  [ 83] objcall 138 ............................. <tPropList[tPart]>
  [ 85] pusharglist 1 ........................... <tPropList[tPart]>
  [ 87] extcall 253 ............................. <voidp(tPropList[tPart])>
  [ 89] jmpifz [ 98] ............................ if voidp(tPropList[tPart]) then
  [ 92] pushint8 8 .............................. <8>
  [ 94] pusharglistnoret 1 ...................... <8>
  [ 96] extcall 116 ............................. return 8
  [ 98] getlocal 0 .............................. <tPropList>
  [100] getparam 1 .............................. <tPart>
  [102] pusharglist 2 ........................... <tPropList, tPart>
  [104] objcall 138 ............................. <tPropList[tPart]>
  [106] pushsymb 393 ............................ <#ink>
  [109] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [111] objcall 138 ............................. <tPropList[tPart][#ink]>
  [113] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [115] extcall 253 ............................. <voidp(tPropList[tPart][#ink])>
  [117] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [118] jmpifz [140] ............................ if not voidp(tPropList[tPart][#ink]) then
  [121] getlocal 0 .............................. <tPropList>
  [123] getparam 1 .............................. <tPart>
  [125] pusharglist 2 ........................... <tPropList, tPart>
  [127] objcall 138 ............................. <tPropList[tPart]>
  [129] pushsymb 393 ............................ <#ink>
  [132] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [134] objcall 138 ............................. <tPropList[tPart][#ink]>
  [136] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [138] extcall 116 ............................. return tPropList[tPart][#ink]
  [140] pushint8 8 .............................. <8>
  [142] pusharglistnoret 1 ...................... <8>
  [144] extcall 116 ............................. return 8
  [146] ret
end

on solveBlend me, tPart
  [  0] getprop 1254 ............................ <pClass>
  [  3] pushcons 4 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 122 ............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 20] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushint8 100 ............................ <100>
  [ 16] pusharglistnoret 1 ...................... <100>
  [ 18] extcall 116 ............................. return 100
  [ 20] getprop 1254 ............................ <pClass>
  [ 23] pushcons 4 .............................. <".props">
  [ 25] joinstr ................................. <pClass & ".props">
  [ 26] pusharglist 1 ........................... <pClass & ".props">
  [ 28] extcall 330 ............................. <getmemnum(pClass & ".props")>
  [ 31] pushzero ................................ <0>
  [ 32] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 33] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 35] extcall 385 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 38] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 40] getlocal 0 .............................. <tPropList>
  [ 42] pusharglist 1 ........................... <tPropList>
  [ 44] extcall 215 ............................. <ilk(tPropList)>
  [ 46] pushsymb 1436 ........................... <#propList>
  [ 49] nteq .................................... <ilk(tPropList) <> #propList>
  [ 50] jmpifz [ 77] ............................ if ilk(tPropList) <> #propList then / else
  [ 53] getparam 0 .............................. <me>
  [ 55] getprop 1254 ............................ <pClass>
  [ 58] pushcons 5 .............................. <".props is not valid!">
  [ 60] joinstr ................................. <pClass & ".props is not valid!">
  [ 61] pushsymb 1411 ........................... <#solveBlend>
  [ 64] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveBlend>
  [ 66] extcall 123 ............................. error(me, pClass & ".props is not valid!", #solveBlend)
  [ 68] pushint8 100 ............................ <100>
  [ 70] pusharglistnoret 1 ...................... <100>
  [ 72] extcall 116 ............................. return 100
  [ 74] jmp [140]
  [ 77] getlocal 0 .............................. <tPropList>
  [ 79] getparam 1 .............................. <tPart>
  [ 81] pusharglist 2 ........................... <tPropList, tPart>
  [ 83] objcall 138 ............................. <tPropList[tPart]>
  [ 85] pusharglist 1 ........................... <tPropList[tPart]>
  [ 87] extcall 253 ............................. <voidp(tPropList[tPart])>
  [ 89] jmpifz [ 98] ............................ if voidp(tPropList[tPart]) then
  [ 92] pushint8 100 ............................ <100>
  [ 94] pusharglistnoret 1 ...................... <100>
  [ 96] extcall 116 ............................. return 100
  [ 98] getlocal 0 .............................. <tPropList>
  [100] getparam 1 .............................. <tPart>
  [102] pusharglist 2 ........................... <tPropList, tPart>
  [104] objcall 138 ............................. <tPropList[tPart]>
  [106] pushsymb 333 ............................ <#blend>
  [109] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [111] objcall 138 ............................. <tPropList[tPart][#blend]>
  [113] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [115] extcall 253 ............................. <voidp(tPropList[tPart][#blend])>
  [117] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [118] jmpifz [140] ............................ if not voidp(tPropList[tPart][#blend]) then
  [121] getlocal 0 .............................. <tPropList>
  [123] getparam 1 .............................. <tPart>
  [125] pusharglist 2 ........................... <tPropList, tPart>
  [127] objcall 138 ............................. <tPropList[tPart]>
  [129] pushsymb 333 ............................ <#blend>
  [132] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [134] objcall 138 ............................. <tPropList[tPart][#blend]>
  [136] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [138] extcall 116 ............................. return tPropList[tPart][#blend]
  [140] pushint8 100 ............................ <100>
  [142] pusharglistnoret 1 ...................... <100>
  [144] extcall 116 ............................. return 100
  [146] ret
end

on solveLocZ me, tPart, tdir
  [  0] getprop 1254 ............................ <pClass>
  [  3] pushcons 4 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 122 ............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 19] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 116 ............................. return 0
  [ 19] getprop 1254 ............................ <pClass>
  [ 22] pushcons 4 .............................. <".props">
  [ 24] joinstr ................................. <pClass & ".props">
  [ 25] pusharglist 1 ........................... <pClass & ".props">
  [ 27] extcall 330 ............................. <getmemnum(pClass & ".props")>
  [ 30] pushzero ................................ <0>
  [ 31] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 32] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 34] extcall 385 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 37] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 39] getlocal 0 .............................. <tPropList>
  [ 41] pusharglist 1 ........................... <tPropList>
  [ 43] extcall 215 ............................. <ilk(tPropList)>
  [ 45] pushsymb 1436 ........................... <#propList>
  [ 48] nteq .................................... <ilk(tPropList) <> #propList>
  [ 49] jmpifz [ 75] ............................ if ilk(tPropList) <> #propList then / else
  [ 52] getparam 0 .............................. <me>
  [ 54] getprop 1254 ............................ <pClass>
  [ 57] pushcons 5 .............................. <".props is not valid!">
  [ 59] joinstr ................................. <pClass & ".props is not valid!">
  [ 60] pushsymb 1412 ........................... <#solveLocZ>
  [ 63] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveLocZ>
  [ 65] extcall 123 ............................. error(me, pClass & ".props is not valid!", #solveLocZ)
  [ 67] pushzero ................................ <0>
  [ 68] pusharglistnoret 1 ...................... <0>
  [ 70] extcall 116 ............................. return 0
  [ 72] jmp [148]
  [ 75] getlocal 0 .............................. <tPropList>
  [ 77] getparam 1 .............................. <tPart>
  [ 79] pusharglist 2 ........................... <tPropList, tPart>
  [ 81] objcall 138 ............................. <tPropList[tPart]>
  [ 83] pusharglist 1 ........................... <tPropList[tPart]>
  [ 85] extcall 253 ............................. <voidp(tPropList[tPart])>
  [ 87] jmpifz [ 95] ............................ if voidp(tPropList[tPart]) then
  [ 90] pushzero ................................ <0>
  [ 91] pusharglistnoret 1 ...................... <0>
  [ 93] extcall 116 ............................. return 0
  [ 95] getlocal 0 .............................. <tPropList>
  [ 97] getparam 1 .............................. <tPart>
  [ 99] pusharglist 2 ........................... <tPropList, tPart>
  [101] objcall 138 ............................. <tPropList[tPart]>
  [103] pushsymb 1438 ........................... <#zshift>
  [106] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [108] objcall 138 ............................. <tPropList[tPart][#zshift]>
  [110] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [112] extcall 253 ............................. <voidp(tPropList[tPart][#zshift])>
  [114] jmpifz [122] ............................ if voidp(tPropList[tPart][#zshift]) then
  [117] pushzero ................................ <0>
  [118] pusharglistnoret 1 ...................... <0>
  [120] extcall 116 ............................. return 0
  [122] getlocal 0 .............................. <tPropList>
  [124] getparam 1 .............................. <tPart>
  [126] pusharglist 2 ........................... <tPropList, tPart>
  [128] objcall 138 ............................. <tPropList[tPart]>
  [130] pushsymb 1438 ........................... <#zshift>
  [133] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [135] objcall 138 ............................. <tPropList[tPart][#zshift]>
  [137] getobjprop 149 .......................... <tPropList[tPart][#zshift].count>
  [139] getparam 2 .............................. <tdir>
  [141] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [142] jmpifz [148] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [145] pushzero ................................ <0>
  [146] setparam 2 .............................. tdir = 0
  [148] getlocal 0 .............................. <tPropList>
  [150] getparam 1 .............................. <tPart>
  [152] pusharglist 2 ........................... <tPropList, tPart>
  [154] objcall 138 ............................. <tPropList[tPart]>
  [156] pushsymb 1438 ........................... <#zshift>
  [159] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [161] objcall 138 ............................. <tPropList[tPart][#zshift]>
  [163] getparam 2 .............................. <tdir>
  [165] pushint8 1 .............................. <1>
  [167] add ..................................... <tdir + 1>
  [168] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [170] objcall 138 ............................. <tPropList[tPart][#zshift][tdir + 1]>
  [172] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [174] extcall 116 ............................. return tPropList[tPart][#zshift][tdir + 1]
  [176] ret
end

on solveMembers me
  [  0] getprop 376 ............................. <pDirection>
  [  3] pusharglist 1 ........................... <pDirection>
  [  5] extcall 258 ............................. <listp(pDirection)>
  [  8] jmpifz [ 24] ............................ if listp(pDirection) then / else
  [ 11] getprop 376 ............................. <pDirection>
  [ 14] pusharglist 1 ........................... <pDirection>
  [ 16] objcall 555 ............................. <pDirection.duplicate()>
  [ 19] setlocal 0 .............................. tTmpDirection = pDirection.duplicate()
  [ 21] jmp [ 29]
  [ 24] getprop 376 ............................. <pDirection>
  [ 27] setlocal 0 .............................. tTmpDirection = pDirection
  [ 29] getprop 993 ............................. <pSprList>
  [ 32] getobjprop 149 .......................... <pSprList.count>
  [ 34] pushzero ................................ <0>
  [ 35] gt ...................................... <pSprList.count > 0>
  [ 36] jmpifz [ 91] ............................ if pSprList.count > 0 then
  [ 39] getprop 993 ............................. <pSprList>
  [ 42] peek 0
  [ 44] pusharglist 1
  [ 46] extcall 149
  [ 48] pushint8 1
  [ 50] peek 0
  [ 52] peek 2
  [ 54] lteq
  [ 55] jmpifz [ 83] ............................ repeat with tSpr in pSprList
  [ 58] peek 2
  [ 60] peek 1
  [ 62] pusharglist 2
  [ 64] extcall 138
  [ 66] setlocal 1
  [ 68] getlocal 1 .............................. <tSpr>
  [ 70] getobjprop 335 .......................... <tSpr.spriteNum>
  [ 73] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 75] extcall 339 ............................. releaseSprite(tSpr.spriteNum)
  [ 78] pushint8 1
  [ 80] add
  [ 81] endrepeat [ 50]
  [ 83] pop 3
  [ 85] pusharglist 0 ........................... <[]>
  [ 87] pushlist ................................ <[]>
  [ 88] setprop 993 ............................. pSprList = []
  [ 91] pushint8 1 .............................. <1>
  [ 93] setlocal 2 .............................. tMemNum = 1
  [ 95] pushcons 6 .............................. <"a">
  [ 97] pusharglist 1 ........................... <"a">
  [ 99] extcall 640 ............................. <charToNum("a")>
  [102] setlocal 3 .............................. i = charToNum("a")
  [104] pushint8 1 .............................. <1>
  [106] setlocal 4 .............................. j = 1
  [108] getlocal 2 .............................. <tMemNum>
  [110] pushzero ................................ <0>
  [111] gt ...................................... <tMemNum > 0>
  [112] jmpifz [912] ............................ repeat while tMemNum > 0
  [115] getprop 1254 ............................ <pClass>
  [118] pushcons 7 .............................. <"null">
  [120] eq ...................................... <pClass = "null">
  [121] jmpifz [127] ............................ if pClass = "null" then
  [124] pushzero ................................ <0>
  [125] setlocal 5 .............................. opopop = 0
  [127] pushzero ................................ <0>
  [128] setlocal 6 .............................. tFound = 0
  [130] getlocal 6 .............................. <tFound>
  [132] pushzero ................................ <0>
  [133] eq ...................................... <tFound = 0>
  [134] jmpifz [450] ............................ repeat while tFound = 0
  [137] getprop 1254 ............................ <pClass>
  [140] pushcons 8 .............................. <"_">
  [142] joinstr ................................. <pClass & "_">
  [143] getlocal 3 .............................. <i>
  [145] pusharglist 1 ........................... <i>
  [147] extcall 350 ............................. <numToChar(i)>
  [150] joinstr ................................. <pClass & "_" & numToChar(i)>
  [151] pushcons 8 .............................. <"_">
  [153] joinstr ................................. <pClass & "_" & numToChar(i) & "_">
  [154] pushcons 9 .............................. <"0">
  [156] joinstr ................................. <pClass & "_" & numToChar(i) & "_" & "0">
  [157] setlocal 7 .............................. tMemNameA = pClass & "_" & numToChar(i) & "_" & "0"
  [159] getprop 375 ............................. <pDimensions>
  [162] pusharglist 1 ........................... <pDimensions>
  [164] extcall 258 ............................. <listp(pDimensions)>
  [167] jmpifz [200] ............................ if listp(pDimensions) then
  [170] getlocal 7 .............................. <tMemNameA>
  [172] pushcons 8 .............................. <"_">
  [174] joinstr ................................. <tMemNameA & "_">
  [175] getprop 375 ............................. <pDimensions>
  [178] pushint8 1 .............................. <1>
  [180] pusharglist 2 ........................... <pDimensions, 1>
  [182] objcall 138 ............................. <pDimensions[1]>
  [184] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [185] pushcons 8 .............................. <"_">
  [187] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [188] getprop 375 ............................. <pDimensions>
  [191] pushint8 2 .............................. <2>
  [193] pusharglist 2 ........................... <pDimensions, 2>
  [195] objcall 138 ............................. <pDimensions[2]>
  [197] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [198] setlocal 7 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [200] getlocal 0 .............................. <tTmpDirection>
  [202] pusharglist 1 ........................... <tTmpDirection>
  [204] extcall 253 ............................. <voidp(tTmpDirection)>
  [206] not ..................................... <not voidp(tTmpDirection)>
  [207] jmpifz [274] ............................ if not voidp(tTmpDirection) then / else
  [210] getlocal 0 .............................. <tTmpDirection>
  [212] pusharglist 1 ........................... <tTmpDirection>
  [214] extcall 149 ............................. <count(tTmpDirection)>
  [216] getlocal 4 .............................. <j>
  [218] gteq .................................... <count(tTmpDirection) >= j>
  [219] jmpifz [248] ............................ if count(tTmpDirection) >= j then / else
  [222] getlocal 7 .............................. <tMemNameA>
  [224] pushcons 8 .............................. <"_">
  [226] joinstr ................................. <tMemNameA & "_">
  [227] getlocal 0 .............................. <tTmpDirection>
  [229] getlocal 4 .............................. <j>
  [231] pusharglist 2 ........................... <tTmpDirection, j>
  [233] objcall 138 ............................. <tTmpDirection[j]>
  [235] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j]>
  [236] pushcons 8 .............................. <"_">
  [238] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j] & "_">
  [239] getprop 1351 ............................ <pAnimFrame>
  [242] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j] & "_" & pAnimFrame>
  [243] setlocal 8 .............................. tMemName = tMemNameA & "_" & tTmpDirection[j] & "_" & pAnimFrame
  [245] jmp [271]
  [248] getlocal 7 .............................. <tMemNameA>
  [250] pushcons 8 .............................. <"_">
  [252] joinstr ................................. <tMemNameA & "_">
  [253] getlocal 0 .............................. <tTmpDirection>
  [255] pushint8 1 .............................. <1>
  [257] pusharglist 2 ........................... <tTmpDirection, 1>
  [259] objcall 138 ............................. <tTmpDirection[1]>
  [261] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1]>
  [262] pushcons 8 .............................. <"_">
  [264] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1] & "_">
  [265] getprop 1351 ............................ <pAnimFrame>
  [268] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1] & "_" & pAnimFrame>
  [269] setlocal 8 .............................. tMemName = tMemNameA & "_" & tTmpDirection[1] & "_" & pAnimFrame
  [271] jmp [285]
  [274] getlocal 7 .............................. <tMemNameA>
  [276] pushcons 8 .............................. <"_">
  [278] joinstr ................................. <tMemNameA & "_">
  [279] getprop 1351 ............................ <pAnimFrame>
  [282] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [283] setlocal 8 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [285] getlocal 8 .............................. <tMemName>
  [287] pusharglist 1 ........................... <tMemName>
  [289] extcall 330 ............................. <getmemnum(tMemName)>
  [292] setlocal 2 .............................. tMemNum = getmemnum(tMemName)
  [294] getlocal 8 .............................. <tMemName>
  [296] setlocal 9 .............................. tOldMemName = tMemName
  [298] getlocal 2 .............................. <tMemNum>
  [300] pushzero ................................ <0>
  [301] eq ...................................... <tMemNum = 0>
  [302] jmpifz [325] ............................ if tMemNum = 0 then
  [305] getlocal 7 .............................. <tMemNameA>
  [307] pushcons 10 ............................. <"_0_">
  [309] joinstr ................................. <tMemNameA & "_0_">
  [310] getprop 1351 ............................ <pAnimFrame>
  [313] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [314] setlocal 8 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [316] getlocal 8 .............................. <tMemName>
  [318] pusharglist 1 ........................... <tMemName>
  [320] extcall 330 ............................. <getmemnum(tMemName)>
  [323] setlocal 2 .............................. tMemNum = getmemnum(tMemName)
  [325] getlocal 2 .............................. <tMemNum>
  [327] pushzero ................................ <0>
  [328] eq ...................................... <tMemNum = 0>
  [329] getlocal 4 .............................. <j>
  [331] pushint8 1 .............................. <1>
  [333] eq ...................................... <j = 1>
  [334] and ..................................... <(tMemNum = 0) and (j = 1)>
  [335] jmpifz [443] ............................ if (tMemNum = 0) and (j = 1) then
  [338] pushzero ................................ <0>
  [339] setlocal 6 .............................. tFound = 0
  [341] getprop 376 ............................. <pDirection>
  [344] pusharglist 1 ........................... <pDirection>
  [346] extcall 258 ............................. <listp(pDirection)>
  [349] jmpifz [421] ............................ if listp(pDirection) then / else
  [352] pushint8 1 .............................. <1>
  [354] setlocal 10
  [356] getlocal 10
  [358] getlocal 0 .............................. <tTmpDirection>
  [360] getobjprop 149 .......................... <tTmpDirection.count>
  [362] lteq
  [363] jmpifz [399] ............................ repeat with tdir = 1 to tTmpDirection.count
  [366] getlocal 0 .............................. <tTmpDirection>
  [368] getlocal 10 ............................. <tdir>
  [370] getlocal 0 .............................. <tTmpDirection>
  [372] getlocal 10 ............................. <tdir>
  [374] pusharglist 2 ........................... <tTmpDirection, tdir>
  [376] objcall 138 ............................. <tTmpDirection[tdir]>
  [378] pushint8 1 .............................. <1>
  [380] add ..................................... <tTmpDirection[tdir] + 1>
  [381] pusharglist 1 ........................... <tTmpDirection[tdir] + 1>
  [383] extcall 426 ............................. <integer(tTmpDirection[tdir] + 1)>
  [386] pusharglistnoret 3 ...................... <tTmpDirection, tdir, integer(tTmpDirection[tdir] + 1)>
  [388] objcall 136 ............................. tTmpDirection[tdir] = integer(tTmpDirection[tdir] + 1)
  [390] pushint8 1
  [392] getlocal 10
  [394] add
  [395] setlocal 10
  [397] endrepeat [356]
  [399] getlocal 0 .............................. <tTmpDirection>
  [401] pushint8 1 .............................. <1>
  [403] pusharglist 2 ........................... <tTmpDirection, 1>
  [405] objcall 138 ............................. <tTmpDirection[1]>
  [407] pushint8 8 .............................. <8>
  [409] eq ...................................... <tTmpDirection[1] = 8>
  [410] jmpifz [418] ............................ if tTmpDirection[1] = 8 then
  [413] pushzero ................................ <0>
  [414] pusharglistnoret 1 ...................... <0>
  [416] extcall 116 ............................. return 0
  [418] jmp [440]
  [421] getparam 0 .............................. <me>
  [423] pushcons 11 ............................. <"No good object:">
  [425] getprop 1254 ............................ <pClass>
  [428] joinpadstr .............................. <"No good object:" && pClass>
  [429] pushsymb 1414 ........................... <#solveMembers>
  [432] pusharglist 3 ........................... <me, "No good object:" && pClass, #solveMembers>
  [434] extcall 123 ............................. <error(me, "No good object:" && pClass, #solveMembers)>
  [436] pusharglistnoret 1 ...................... <error(me, "No good object:" && pClass, #solveMembers)>
  [438] extcall 116 ............................. return error(me, "No good object:" && pClass, #solveMembers)
  [440] jmp [447] ............................... next repeat
  [443] pushint8 1 .............................. <1>
  [445] setlocal 6 .............................. tFound = 1
  [447] endrepeat [130]
  [450] getlocal 2 .............................. <tMemNum>
  [452] pushzero ................................ <0>
  [453] nteq .................................... <tMemNum <> 0>
  [454] jmpifz [895] ............................ if tMemNum <> 0 then
  [457] getprop 993 ............................. <pSprList>
  [460] pusharglist 1 ........................... <pSprList>
  [462] extcall 149 ............................. <count(pSprList)>
  [464] getlocal 4 .............................. <j>
  [466] gteq .................................... <count(pSprList) >= j>
  [467] jmpifz [484] ............................ if count(pSprList) >= j then / else
  [470] getprop 993 ............................. <pSprList>
  [473] getlocal 4 .............................. <j>
  [475] pusharglist 2 ........................... <pSprList, j>
  [477] objcall 138 ............................. <pSprList[j]>
  [479] setlocal 1 .............................. tSpr = pSprList[j]
  [481] jmp [556]
  [484] getparam 0 .............................. <me>
  [486] pusharglist 1 ........................... <me>
  [488] objcall 115 ............................. <me.getID()>
  [490] pusharglist 1 ........................... <me.getID()>
  [492] extcall 328 ............................. <reserveSprite(me.getID())>
  [495] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [497] extcall 146 ............................. <sprite(reserveSprite(me.getID()))>
  [499] setlocal 1 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [501] getprop 993 ............................. <pSprList>
  [504] getlocal 1 .............................. <tSpr>
  [506] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [508] objcall 151 ............................. pSprList.add(tSpr)
  [510] getlocal 1 .............................. <tSpr>
  [512] getobjprop 335 .......................... <tSpr.spriteNum>
  [515] getparam 0 .............................. <me>
  [517] pusharglist 1 ........................... <me>
  [519] objcall 115 ............................. <me.getID()>
  [521] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [523] extcall 334 ............................. setEventBroker(tSpr.spriteNum, me.getID())
  [526] pushsymb 931 ............................ <#room>
  [529] pusharglist 1 ........................... <#room>
  [531] extcall 227 ............................. <getThread(#room)>
  [533] pusharglist 1 ........................... <getThread(#room)>
  [535] objcall 570 ............................. <getThread(#room).getInterface()>
  [538] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [540] objcall 115 ............................. <getThread(#room).getInterface().getID()>
  [542] setlocal 11 ............................. tTargetID = getThread(#room).getInterface().getID()
  [544] getlocal 1 .............................. <tSpr>
  [546] pushsymb 72 ............................. <#eventProcPassiveObj>
  [548] getlocal 11 ............................. <tTargetID>
  [550] pushsymb 144 ............................ <#mouseDown>
  [552] pusharglistnoret 4 ...................... <tSpr, #eventProcPassiveObj, tTargetID, #mouseDown>
  [554] objcall 143 ............................. tSpr.registerProcedure(#eventProcPassiveObj, tTargetID, #mouseDown)
  [556] getprop 376 ............................. <pDirection>
  [559] pusharglist 1 ........................... <pDirection>
  [561] extcall 253 ............................. <voidp(pDirection)>
  [563] not ..................................... <not voidp(pDirection)>
  [564] jmpifz [641] ............................ if not voidp(pDirection) then / else
  [567] getprop 376 ............................. <pDirection>
  [570] pusharglist 1 ........................... <pDirection>
  [572] extcall 149 ............................. <count(pDirection)>
  [574] getlocal 4 .............................. <j>
  [576] gteq .................................... <count(pDirection) >= j>
  [577] jmpifz [613] ............................ if count(pDirection) >= j then / else
  [580] getprop 994 ............................. <pLoczList>
  [583] getparam 0 .............................. <me>
  [585] getlocal 3 .............................. <i>
  [587] pusharglist 1 ........................... <i>
  [589] extcall 350 ............................. <numToChar(i)>
  [592] getprop 376 ............................. <pDirection>
  [595] getlocal 4 .............................. <j>
  [597] pusharglist 2 ........................... <pDirection, j>
  [599] objcall 138 ............................. <pDirection[j]>
  [601] pusharglist 3 ........................... <me, numToChar(i), pDirection[j]>
  [603] objcall 1412 ............................ <me.solveLocZ(numToChar(i), pDirection[j])>
  [606] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), pDirection[j])>
  [608] objcall 151 ............................. pLoczList.add(me.solveLocZ(numToChar(i), pDirection[j]))
  [610] jmp [638]
  [613] getprop 994 ............................. <pLoczList>
  [616] getparam 0 .............................. <me>
  [618] getlocal 3 .............................. <i>
  [620] pusharglist 1 ........................... <i>
  [622] extcall 350 ............................. <numToChar(i)>
  [625] pusharglist 0 ........................... <>
  [627] extcall 120 ............................. <VOID>
  [629] pusharglist 3 ........................... <me, numToChar(i), VOID>
  [631] objcall 1412 ............................ <me.solveLocZ(numToChar(i), VOID)>
  [634] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), VOID)>
  [636] objcall 151 ............................. pLoczList.add(me.solveLocZ(numToChar(i), VOID))
  [638] jmp [666]
  [641] getprop 994 ............................. <pLoczList>
  [644] getparam 0 .............................. <me>
  [646] getlocal 3 .............................. <i>
  [648] pusharglist 1 ........................... <i>
  [650] extcall 350 ............................. <numToChar(i)>
  [653] pusharglist 0 ........................... <>
  [655] extcall 120 ............................. <VOID>
  [657] pusharglist 3 ........................... <me, numToChar(i), VOID>
  [659] objcall 1412 ............................ <me.solveLocZ(numToChar(i), VOID)>
  [662] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), VOID)>
  [664] objcall 151 ............................. pLoczList.add(me.solveLocZ(numToChar(i), VOID))
  [666] getlocal 1 .............................. <tSpr>
  [668] pusharglist 1 ........................... <tSpr>
  [670] extcall 253 ............................. <voidp(tSpr)>
  [672] not ..................................... <not voidp(tSpr)>
  [673] getlocal 1 .............................. <tSpr>
  [675] pushzero ................................ <0>
  [676] pusharglist 1 ........................... <0>
  [678] extcall 146 ............................. <sprite(0)>
  [680] nteq .................................... <tSpr <> sprite(0)>
  [681] and ..................................... <not voidp(tSpr) and (tSpr <> sprite(0))>
  [682] jmpifz [880] ............................ if not voidp(tSpr) and (tSpr <> sprite(0)) then / else
  [685] getlocal 2 .............................. <tMemNum>
  [687] pushint8 1 .............................. <1>
  [689] lt ...................................... <tMemNum < 1>
  [690] jmpifz [718] ............................ if tMemNum < 1 then
  [693] getlocal 2 .............................. <tMemNum>
  [695] pusharglist 1 ........................... <tMemNum>
  [697] extcall 1035 ............................ <abs(tMemNum)>
  [700] setlocal 2 .............................. tMemNum = abs(tMemNum)
  [702] getlocal 1 .............................. <tSpr>
  [704] pushint16 180 ........................... <180>
  [707] setobjprop 1004 ......................... tSpr.rotation = 180
  [710] getlocal 1 .............................. <tSpr>
  [712] pushint16 180 ........................... <180>
  [715] setobjprop 1005 ......................... tSpr.skew = 180
  [718] getlocal 1 .............................. <tSpr>
  [720] getlocal 2 .............................. <tMemNum>
  [722] setobjprop 1036 ......................... tSpr.castNum = tMemNum
  [725] getlocal 1 .............................. <tSpr>
  [727] getlocal 2 .............................. <tMemNum>
  [729] pusharglist 1 ........................... <tMemNum>
  [731] extcall 263 ............................. <member(tMemNum)>
  [734] getobjprop 219 .......................... <member(tMemNum).width>
  [736] setobjprop 219 .......................... tSpr.width = member(tMemNum).width
  [738] getlocal 1 .............................. <tSpr>
  [740] getlocal 2 .............................. <tMemNum>
  [742] pusharglist 1 ........................... <tMemNum>
  [744] extcall 263 ............................. <member(tMemNum)>
  [747] getobjprop 261 .......................... <member(tMemNum).height>
  [750] setobjprop 261 .......................... tSpr.height = member(tMemNum).height
  [753] getlocal 1 .............................. <tSpr>
  [755] getparam 0 .............................. <me>
  [757] getlocal 3 .............................. <i>
  [759] pusharglist 1 ........................... <i>
  [761] extcall 350 ............................. <numToChar(i)>
  [764] pusharglist 2 ........................... <me, numToChar(i)>
  [766] objcall 1410 ............................ <me.solveInk(numToChar(i))>
  [769] setobjprop 393 .......................... tSpr.ink = me.solveInk(numToChar(i))
  [772] getlocal 1 .............................. <tSpr>
  [774] getparam 0 .............................. <me>
  [776] getlocal 3 .............................. <i>
  [778] pusharglist 1 ........................... <i>
  [780] extcall 350 ............................. <numToChar(i)>
  [783] pusharglist 2 ........................... <me, numToChar(i)>
  [785] objcall 1411 ............................ <me.solveBlend(numToChar(i))>
  [788] setobjprop 333 .......................... tSpr.blend = me.solveBlend(numToChar(i))
  [791] getlocal 4 .............................. <j>
  [793] getprop 1415 ............................ <pPartColors>
  [796] getobjprop 149 .......................... <pPartColors.count>
  [798] lteq .................................... <j <= pPartColors.count>
  [799] jmpifz [877] ............................ if j <= pPartColors.count then
  [802] getprop 1415 ............................ <pPartColors>
  [805] getlocal 4 .............................. <j>
  [807] pusharglist 2 ........................... <pPartColors, j>
  [809] objcall 138 ............................. <pPartColors[j]>
  [811] pusharglist 1 ........................... <pPartColors[j]>
  [813] extcall 596 ............................. <string(pPartColors[j])>
  [816] pushsymb 425 ............................ <#char>
  [819] pushint8 1 .............................. <1>
  [821] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [823] objcall 134 ............................. <string(pPartColors[j]).char[1]>
  [825] pushcons 12 ............................. <"#">
  [827] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [828] jmpifz [853] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [831] getlocal 1 .............................. <tSpr>
  [833] getprop 1415 ............................ <pPartColors>
  [836] getlocal 4 .............................. <j>
  [838] pusharglist 2 ........................... <pPartColors, j>
  [840] objcall 138 ............................. <pPartColors[j]>
  [842] pusharglist 1 ........................... <pPartColors[j]>
  [844] extcall 283 ............................. <rgb(pPartColors[j])>
  [847] setobjprop 282 .......................... tSpr.bgColor = rgb(pPartColors[j])
  [850] jmp [877]
  [853] getlocal 1 .............................. <tSpr>
  [855] getprop 1415 ............................ <pPartColors>
  [858] getlocal 4 .............................. <j>
  [860] pusharglist 2 ........................... <pPartColors, j>
  [862] objcall 138 ............................. <pPartColors[j]>
  [864] pusharglist 1 ........................... <pPartColors[j]>
  [866] extcall 426 ............................. <integer(pPartColors[j])>
  [869] pusharglist 1 ........................... <integer(pPartColors[j])>
  [871] extcall 1051 ............................ <paletteIndex(integer(pPartColors[j]))>
  [874] setobjprop 282 .......................... tSpr.bgColor = paletteIndex(integer(pPartColors[j]))
  [877] jmp [895]
  [880] getparam 0 .............................. <me>
  [882] pushcons 13 ............................. <"Out of sprites!!!">
  [884] pushsymb 1414 ........................... <#solveMembers>
  [887] pusharglist 3 ........................... <me, "Out of sprites!!!", #solveMembers>
  [889] extcall 123 ............................. <error(me, "Out of sprites!!!", #solveMembers)>
  [891] pusharglistnoret 1 ...................... <error(me, "Out of sprites!!!", #solveMembers)>
  [893] extcall 116 ............................. return error(me, "Out of sprites!!!", #solveMembers)
  [895] getlocal 3 .............................. <i>
  [897] pushint8 1 .............................. <1>
  [899] add ..................................... <i + 1>
  [900] setlocal 3 .............................. i = i + 1
  [902] getlocal 4 .............................. <j>
  [904] pushint8 1 .............................. <1>
  [906] add ..................................... <j + 1>
  [907] setlocal 4 .............................. j = j + 1
  [909] endrepeat [108]
  [912] getprop 1254 ............................ <pClass>
  [915] pushcons 14 ............................. <"_sd">
  [917] joinstr ................................. <pClass & "_sd">
  [918] setlocal 12 ............................. tShadowName = pClass & "_sd"
  [920] getprop 376 ............................. <pDirection>
  [923] pusharglist 1 ........................... <pDirection>
  [925] extcall 258 ............................. <listp(pDirection)>
  [928] jmpifz [948] ............................ if listp(pDirection) then
  [931] getlocal 12 ............................. <tShadowName>
  [933] pushcons 8 .............................. <"_">
  [935] joinstr ................................. <tShadowName & "_">
  [936] getprop 376 ............................. <pDirection>
  [939] pushint8 1 .............................. <1>
  [941] pusharglist 2 ........................... <pDirection, 1>
  [943] objcall 138 ............................. <pDirection[1]>
  [945] joinstr ................................. <tShadowName & "_" & pDirection[1]>
  [946] setlocal 12 ............................. tShadowName = tShadowName & "_" & pDirection[1]
  [948] getlocal 12 ............................. <tShadowName>
  [950] pusharglist 1 ........................... <tShadowName>
  [952] extcall 330 ............................. <getmemnum(tShadowName)>
  [955] setlocal 13 ............................. tShadowNum = getmemnum(tShadowName)
  [957] getlocal 13 ............................. <tShadowNum>
  [959] not ..................................... <not tShadowNum>
  [960] getlocal 0 .............................. <tTmpDirection>
  [962] pusharglist 1 ........................... <tTmpDirection>
  [964] extcall 258 ............................. <listp(tTmpDirection)>
  [967] and ..................................... <not tShadowNum and listp(tTmpDirection)>
  [968] jmpifz [984] ............................ if not tShadowNum and listp(tTmpDirection) then
  [971] getprop 1254 ............................ <pClass>
  [974] pushcons 14 ............................. <"_sd">
  [976] joinstr ................................. <pClass & "_sd">
  [977] pusharglist 1 ........................... <pClass & "_sd">
  [979] extcall 330 ............................. <getmemnum(pClass & "_sd")>
  [982] setlocal 13 ............................. tShadowNum = getmemnum(pClass & "_sd")
  [984] getlocal 13 ............................. <tShadowNum>
  [986] pushzero ................................ <0>
  [987] nteq .................................... <tShadowNum <> 0>
  [988] jmpifz [1153] ........................... if tShadowNum <> 0 then
  [991] getparam 0 .............................. <me>
  [993] pusharglist 1 ........................... <me>
  [995] objcall 115 ............................. <me.getID()>
  [997] pusharglist 1 ........................... <me.getID()>
  [999] extcall 328 ............................. <reserveSprite(me.getID())>
  [1002] pusharglist 1 .......................... <reserveSprite(me.getID())>
  [1004] extcall 146 ............................ <sprite(reserveSprite(me.getID()))>
  [1006] setlocal 1 ............................. tSpr = sprite(reserveSprite(me.getID()))
  [1008] getprop 993 ............................ <pSprList>
  [1011] getlocal 1 ............................. <tSpr>
  [1013] pusharglistnoret 2 ..................... <pSprList, tSpr>
  [1015] objcall 151 ............................ pSprList.add(tSpr)
  [1017] getprop 994 ............................ <pLoczList>
  [1020] pushint16 4000 ......................... <4000>
  [1023] inv .................................... <-4000>
  [1024] pusharglistnoret 2 ..................... <pLoczList, -4000>
  [1026] objcall 151 ............................ pLoczList.add(-4000)
  [1028] getlocal 13 ............................ <tShadowNum>
  [1030] pushzero ............................... <0>
  [1031] lt ..................................... <tShadowNum < 0>
  [1032] jmpifz [1072] .......................... if tShadowNum < 0 then
  [1035] getlocal 13 ............................ <tShadowNum>
  [1037] pusharglist 1 .......................... <tShadowNum>
  [1039] extcall 1035 ........................... <abs(tShadowNum)>
  [1042] setlocal 13 ............................ tShadowNum = abs(tShadowNum)
  [1044] getlocal 1 ............................. <tSpr>
  [1046] pushint16 180 .......................... <180>
  [1049] setobjprop 1004 ........................ tSpr.rotation = 180
  [1052] getlocal 1 ............................. <tSpr>
  [1054] pushint16 180 .......................... <180>
  [1057] setobjprop 1005 ........................ tSpr.skew = 180
  [1060] getlocal 1 ............................. <tSpr>
  [1062] getlocal 1 ............................. <tSpr>
  [1064] getobjprop 222 ......................... <tSpr.locH>
  [1066] getprop 959 ............................ <pXFactor>
  [1069] add .................................... <tSpr.locH + pXFactor>
  [1070] setobjprop 222 ......................... tSpr.locH = tSpr.locH + pXFactor
  [1072] getlocal 1 ............................. <tSpr>
  [1074] getlocal 13 ............................ <tShadowNum>
  [1076] setobjprop 1036 ........................ tSpr.castNum = tShadowNum
  [1079] getlocal 1 ............................. <tSpr>
  [1081] getlocal 13 ............................ <tShadowNum>
  [1083] pusharglist 1 .......................... <tShadowNum>
  [1085] extcall 263 ............................ <member(tShadowNum)>
  [1088] getobjprop 219 ......................... <member(tShadowNum).width>
  [1090] setobjprop 219 ......................... tSpr.width = member(tShadowNum).width
  [1092] getlocal 1 ............................. <tSpr>
  [1094] getlocal 13 ............................ <tShadowNum>
  [1096] pusharglist 1 .......................... <tShadowNum>
  [1098] extcall 263 ............................ <member(tShadowNum)>
  [1101] getobjprop 261 ......................... <member(tShadowNum).height>
  [1104] setobjprop 261 ......................... tSpr.height = member(tShadowNum).height
  [1107] getlocal 1 ............................. <tSpr>
  [1109] getparam 0 ............................. <me>
  [1111] pushcons 15 ............................ <"sd">
  [1113] pusharglist 2 .......................... <me, "sd">
  [1115] objcall 1410 ........................... <me.solveInk("sd")>
  [1118] setobjprop 393 ......................... tSpr.ink = me.solveInk("sd")
  [1121] getlocal 1 ............................. <tSpr>
  [1123] getparam 0 ............................. <me>
  [1125] pushcons 15 ............................ <"sd">
  [1127] pusharglist 2 .......................... <me, "sd">
  [1129] objcall 1411 ........................... <me.solveBlend("sd")>
  [1132] setobjprop 333 ......................... tSpr.blend = me.solveBlend("sd")
  [1135] getlocal 1 ............................. <tSpr>
  [1137] getobjprop 333 ......................... <tSpr.blend>
  [1140] pushint8 100 ........................... <100>
  [1142] eq ..................................... <tSpr.blend = 100>
  [1143] jmpifz [1153] .......................... if tSpr.blend = 100 then
  [1146] getlocal 1 ............................. <tSpr>
  [1148] pushint8 20 ............................ <20>
  [1150] setobjprop 333 ......................... tSpr.blend = 20
  [1153] getprop 993 ............................ <pSprList>
  [1156] getobjprop 149 ......................... <pSprList.count>
  [1158] pushzero ............................... <0>
  [1159] gt ..................................... <pSprList.count > 0>
  [1160] jmpifz [1172] .......................... if pSprList.count > 0 then / else
  [1163] pushint8 1 ............................. <1>
  [1165] pusharglistnoret 1 ..................... <1>
  [1167] extcall 116 ............................ return 1
  [1169] jmp [1191]
  [1172] getparam 0 ............................. <me>
  [1174] pushcons 16 ............................ <"Couldn't define members:">
  [1176] getprop 1254 ........................... <pClass>
  [1179] joinpadstr ............................. <"Couldn't define members:" && pClass>
  [1180] pushsymb 1414 .......................... <#solveMembers>
  [1183] pusharglist 3 .......................... <me, "Couldn't define members:" && pClass, #solveMembers>
  [1185] extcall 123 ............................ <error(me, "Couldn't define members:" && pClass, #solveMembers)>
  [1187] pusharglistnoret 1 ..................... <error(me, "Couldn't define members:" && pClass, #solveMembers)>
  [1189] extcall 116 ............................ return error(me, "Couldn't define members:" && pClass, #solveMembers)
  [1191] ret
end

on updateLocation me
  [  0] pushsymb 931 ............................ <#room>
  [  3] pusharglist 1 ........................... <#room>
  [  5] extcall 227 ............................. <getThread(#room)>
  [  7] pusharglist 1 ........................... <getThread(#room)>
  [  9] objcall 570 ............................. <getThread(#room).getInterface()>
  [ 12] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 14] objcall 29 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 16] getprop 465 ............................. <pLocX>
  [ 19] getprop 467 ............................. <pLocY>
  [ 22] getprop 469 ............................. <pLocH>
  [ 25] pusharglist 4 ........................... <getThread(#room).getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [ 27] objcall 949 ............................. <getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 30] setlocal 0 .............................. tScreenLocs = getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 32] pushzero ................................ <0>
  [ 33] setlocal 1 .............................. i = 0
  [ 35] getprop 993 ............................. <pSprList>
  [ 38] peek 0
  [ 40] pusharglist 1
  [ 42] extcall 149
  [ 44] pushint8 1
  [ 46] peek 0
  [ 48] peek 2
  [ 50] lteq
  [ 51] jmpifz [200] ............................ repeat with tSpr in pSprList
  [ 54] peek 2
  [ 56] peek 1
  [ 58] pusharglist 2
  [ 60] extcall 138
  [ 62] setlocal 2
  [ 64] getlocal 1 .............................. <i>
  [ 66] pushint8 1 .............................. <1>
  [ 68] add ..................................... <i + 1>
  [ 69] setlocal 1 .............................. i = i + 1
  [ 71] getlocal 2 .............................. <tSpr>
  [ 73] getlocal 0 .............................. <tScreenLocs>
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 79] objcall 138 ............................. <tScreenLocs[1]>
  [ 81] setobjprop 222 .......................... tSpr.locH = tScreenLocs[1]
  [ 83] getlocal 2 .............................. <tSpr>
  [ 85] getlocal 0 .............................. <tScreenLocs>
  [ 87] pushint8 2 .............................. <2>
  [ 89] pusharglist 2 ........................... <tScreenLocs, 2>
  [ 91] objcall 138 ............................. <tScreenLocs[2]>
  [ 93] setobjprop 471 .......................... tSpr.locV = tScreenLocs[2]
  [ 96] getlocal 2 .............................. <tSpr>
  [ 98] getobjprop 1004 ......................... <tSpr.rotation>
  [101] pushint16 180 ........................... <180>
  [104] eq ...................................... <tSpr.rotation = 180>
  [105] jmpifz [120] ............................ if tSpr.rotation = 180 then
  [108] getlocal 2 .............................. <tSpr>
  [110] getlocal 2 .............................. <tSpr>
  [112] getobjprop 222 .......................... <tSpr.locH>
  [114] getprop 959 ............................. <pXFactor>
  [117] add ..................................... <tSpr.locH + pXFactor>
  [118] setobjprop 222 .......................... tSpr.locH = tSpr.locH + pXFactor
  [120] getlocal 1 .............................. <i>
  [122] getprop 994 ............................. <pLoczList>
  [125] getobjprop 149 .......................... <pLoczList.count>
  [127] lteq .................................... <i <= pLoczList.count>
  [128] jmpifz [145] ............................ if i <= pLoczList.count then / else
  [131] getprop 994 ............................. <pLoczList>
  [134] getlocal 1 .............................. <i>
  [136] pusharglist 2 ........................... <pLoczList, i>
  [138] objcall 138 ............................. <pLoczList[i]>
  [140] setlocal 3 .............................. tZ = pLoczList[i]
  [142] jmp [148]
  [145] pushzero ................................ <0>
  [146] setlocal 3 .............................. tZ = 0
  [148] getprop 1242 ............................ <pCorrectLocZ>
  [151] jmpifz [180] ............................ if pCorrectLocZ then
  [154] getlocal 2 .............................. <tSpr>
  [156] getlocal 0 .............................. <tScreenLocs>
  [158] pushint8 3 .............................. <3>
  [160] pusharglist 2 ........................... <tScreenLocs, 3>
  [162] objcall 138 ............................. <tScreenLocs[3]>
  [164] getprop 469 ............................. <pLocH>
  [167] pushint16 1000 .......................... <1000>
  [170] mul ..................................... <pLocH * 1000>
  [171] add ..................................... <tScreenLocs[3] + (pLocH * 1000)>
  [172] getlocal 3 .............................. <tZ>
  [174] add ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ>
  [175] setobjprop 130 .......................... tSpr.locZ = tScreenLocs[3] + (pLocH * 1000) + tZ
  [177] jmp [195] ............................... next repeat
  [180] getlocal 2 .............................. <tSpr>
  [182] getlocal 0 .............................. <tScreenLocs>
  [184] pushint8 3 .............................. <3>
  [186] pusharglist 2 ........................... <tScreenLocs, 3>
  [188] objcall 138 ............................. <tScreenLocs[3]>
  [190] getlocal 3 .............................. <tZ>
  [192] add ..................................... <tScreenLocs[3] + tZ>
  [193] setobjprop 130 .......................... tSpr.locZ = tScreenLocs[3] + tZ
  [195] pushint8 1
  [197] add
  [198] endrepeat [ 46]
  [200] pop 3
  [202] ret
end

on show me
  [  0] getprop 993 ............................. <pSprList>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 149
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 40] ............................ repeat with tSpr in pSprList
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 138
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <tSpr>
  [ 31] pushint8 1 .............................. <1>
  [ 33] setobjprop 218 .......................... tSpr.visible = 1
  [ 35] pushint8 1
  [ 37] add
  [ 38] endrepeat [ 11]
  [ 40] pop 3
  [ 42] ret
end

on hide me
  [  0] getprop 993 ............................. <pSprList>
  [  3] peek 0
  [  5] pusharglist 1
  [  7] extcall 149
  [  9] pushint8 1
  [ 11] peek 0
  [ 13] peek 2
  [ 15] lteq
  [ 16] jmpifz [ 39] ............................ repeat with tSpr in pSprList
  [ 19] peek 2
  [ 21] peek 1
  [ 23] pusharglist 2
  [ 25] extcall 138
  [ 27] setlocal 0
  [ 29] getlocal 0 .............................. <tSpr>
  [ 31] pushzero ................................ <0>
  [ 32] setobjprop 218 .......................... tSpr.visible = 0
  [ 34] pushint8 1
  [ 36] add
  [ 37] endrepeat [ 11]
  [ 39] pop 3
  [ 41] ret
end
