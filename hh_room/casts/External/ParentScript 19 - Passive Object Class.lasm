property pClass, pSprList, pDirection, pDimensions, pLoczList, pPartColors, pAnimFrame, pLocX, pLocY, pLocH, pAltitude, pXFactor, pCustom, pCorrectLocZ

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 14 .............................. pClass = EMPTY
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 16 .............................. pCustom = EMPTY
  [  8] pusharglist 0 ........................... <[]>
  [ 10] pushlist ................................ <[]>
  [ 11] setprop 18 .............................. pSprList = []
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 28 .............................. pDirection = []
  [ 18] pusharglist 0 ........................... <[]>
  [ 20] pushlist ................................ <[]>
  [ 21] setprop 471 ............................. pDimensions = []
  [ 24] pusharglist 0 ........................... <[]>
  [ 26] pushlist ................................ <[]>
  [ 27] setprop 1050 ............................ pLoczList = []
  [ 30] pusharglist 0 ........................... <[]>
  [ 32] pushlist ................................ <[]>
  [ 33] setprop 1450 ............................ pPartColors = []
  [ 36] pushzero ................................ <0>
  [ 37] setprop 1387 ............................ pAnimFrame = 0
  [ 40] pushzero ................................ <0>
  [ 41] setprop 19 .............................. pLocX = 0
  [ 43] pushzero ................................ <0>
  [ 44] setprop 20 .............................. pLocY = 0
  [ 46] pushzero ................................ <0>
  [ 47] setprop 21 .............................. pLocH = 0
  [ 49] pushzero ................................ <0>
  [ 50] setprop 1451 ............................ pAltitude = 0
  [ 53] pushsymb 52 ............................. <#room>
  [ 55] pusharglist 1 ........................... <#room>
  [ 57] extcall 51 .............................. <getThread(#room)>
  [ 59] pusharglist 1 ........................... <getThread(#room)>
  [ 61] objcall 53 .............................. <getThread(#room).getInterface()>
  [ 63] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 65] objcall 54 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 67] getobjprop 50 ........................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [ 69] setprop 50 .............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [ 71] getprop 50 .............................. <pXFactor>
  [ 73] pushint8 32 ............................. <32>
  [ 75] eq ...................................... <pXFactor = 32>
  [ 76] jmpifz [ 86] ............................ if pXFactor = 32 then / else
  [ 79] pushzero ................................ <0>
  [ 80] setprop 1284 ............................ pCorrectLocZ = 0
  [ 83] jmp [ 91]
  [ 86] pushint8 1 .............................. <1>
  [ 88] setprop 1284 ............................ pCorrectLocZ = 1
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglistnoret 1 ...................... <1>
  [ 95] extcall 31 .............................. return 1
  [ 97] ret
end

on deconstruct me
  [  0] getprop 18 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 33
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 41] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 34
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 36 ........................... <tSpr.spriteNum>
  [ 32] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 34] extcall 35 .............................. releaseSprite(tSpr.spriteNum)
  [ 36] pushint8 1
  [ 38] add
  [ 39] endrepeat [ 10]
  [ 41] pop 3
  [ 43] pusharglist 0 ........................... <[]>
  [ 45] pushlist ................................ <[]>
  [ 46] setprop 18 .............................. pSprList = []
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 31 .............................. return 1
  [ 54] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 38 ............................. <#class>
  [  4] pusharglist 2 ........................... <tdata, #class>
  [  6] objcall 34 .............................. <tdata[#class]>
  [  8] setprop 14 .............................. pClass = tdata[#class]
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 48 ............................. <#direction>
  [ 14] pusharglist 2 ........................... <tdata, #direction>
  [ 16] objcall 34 .............................. <tdata[#direction]>
  [ 18] setprop 28 .............................. pDirection = tdata[#direction]
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 871 ............................ <#dimensions>
  [ 25] pusharglist 2 ........................... <tdata, #dimensions>
  [ 27] objcall 34 .............................. <tdata[#dimensions]>
  [ 29] setprop 471 ............................. pDimensions = tdata[#dimensions]
  [ 32] getparam 1 .............................. <tdata>
  [ 34] pushsymb 39 ............................. <#x>
  [ 36] pusharglist 2 ........................... <tdata, #x>
  [ 38] objcall 34 .............................. <tdata[#x]>
  [ 40] setprop 19 .............................. pLocX = tdata[#x]
  [ 42] getparam 1 .............................. <tdata>
  [ 44] pushsymb 40 ............................. <#y>
  [ 46] pusharglist 2 ........................... <tdata, #y>
  [ 48] objcall 34 .............................. <tdata[#y]>
  [ 50] setprop 20 .............................. pLocY = tdata[#y]
  [ 52] getparam 1 .............................. <tdata>
  [ 54] pushsymb 41 ............................. <#h>
  [ 56] pusharglist 2 ........................... <tdata, #h>
  [ 58] objcall 34 .............................. <tdata[#h]>
  [ 60] setprop 21 .............................. pLocH = tdata[#h]
  [ 62] getparam 0 .............................. <me>
  [ 64] getparam 1 .............................. <tdata>
  [ 66] pushsymb 876 ............................ <#colors>
  [ 69] pusharglist 2 ........................... <tdata, #colors>
  [ 71] objcall 34 .............................. <tdata[#colors]>
  [ 73] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [ 75] objcall 1445 ............................ me.solveColors(tdata[#colors])
  [ 78] getparam 0 .............................. <me>
  [ 80] pusharglist 1 ........................... <me>
  [ 82] objcall 10 .............................. <me.solveMembers()>
  [ 84] pushzero ................................ <0>
  [ 85] eq ...................................... <me.solveMembers() = 0>
  [ 86] jmpifz [ 94] ............................ if me.solveMembers() = 0 then
  [ 89] pushzero ................................ <0>
  [ 90] pusharglistnoret 1 ...................... <0>
  [ 92] extcall 31 .............................. return 0
  [ 94] getparam 0 .............................. <me>
  [ 96] getparam 1 .............................. <tdata>
  [ 98] pushsymb 877 ............................ <#props>
  [101] pusharglist 2 ........................... <tdata, #props>
  [103] objcall 34 .............................. <tdata[#props]>
  [105] pusharglist 2 ........................... <me, tdata[#props]>
  [107] objcall 559 ............................. <me.prepare(tdata[#props])>
  [110] pushzero ................................ <0>
  [111] eq ...................................... <me.prepare(tdata[#props]) = 0>
  [112] jmpifz [120] ............................ if me.prepare(tdata[#props]) = 0 then
  [115] pushzero ................................ <0>
  [116] pusharglistnoret 1 ...................... <0>
  [118] extcall 31 .............................. return 0
  [120] getparam 0 .............................. <me>
  [122] pusharglistnoret 1 ...................... <me>
  [124] objcall 13 .............................. me.updateLocation()
  [126] pushint8 1 .............................. <1>
  [128] pusharglistnoret 1 ...................... <1>
  [130] extcall 31 .............................. return 1
  [132] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 31 .............................. return 1
  [  6] ret
end

on getInfo me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tInfo = [:]
  [  5] getlocal 0 .............................. <tInfo>
  [  7] pushsymb 58 ............................. <#name>
  [  9] getprop 14 .............................. <pClass>
  [ 11] pusharglistnoret 3 ...................... <tInfo, #name, pClass>
  [ 13] objcall 59 .............................. tInfo[#name] = pClass
  [ 15] getlocal 0 .............................. <tInfo>
  [ 17] pushsymb 38 ............................. <#class>
  [ 19] getprop 14 .............................. <pClass>
  [ 21] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 23] objcall 59 .............................. tInfo[#class] = pClass
  [ 25] getlocal 0 .............................. <tInfo>
  [ 27] pushsymb 60 ............................. <#custom>
  [ 29] getprop 16 .............................. <pCustom>
  [ 31] pusharglistnoret 3 ...................... <tInfo, #custom, pCustom>
  [ 33] objcall 59 .............................. tInfo[#custom] = pCustom
  [ 35] getlocal 0 .............................. <tInfo>
  [ 37] pusharglistnoret 1 ...................... <tInfo>
  [ 39] extcall 31 .............................. return tInfo
  [ 41] ret
end

on getLocation me
  [  0] getprop 19 .............................. <pLocX>
  [  2] getprop 20 .............................. <pLocY>
  [  4] getprop 21 .............................. <pLocH>
  [  6] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [  8] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [  9] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 11] extcall 31 .............................. return [pLocX, pLocY, pLocH]
  [ 13] ret
end

on getDirection me
  [  0] getprop 28 .............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 31 .............................. return pDirection
  [  6] ret
end

on getSprites me
  [  0] getprop 18 .............................. <pSprList>
  [  2] pusharglistnoret 1 ...................... <pSprList>
  [  4] extcall 31 .............................. return pSprList
  [  6] ret
end

on select me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 31 .............................. return 0
  [  5] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 120 ............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 1 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 1450 ............................ pPartColors = []
  [ 19] getmovieprop 99 ......................... <the itemDelimiter>
  [ 21] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 23] pushcons 2 .............................. <",">
  [ 25] setmovieprop 99 ......................... the itemDelimiter = ","
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 1
  [ 31] getlocal 1
  [ 33] getparam 1 .............................. <tpartColors>
  [ 35] pushsymb 103 ............................ <#item>
  [ 37] pusharglist 2 ........................... <tpartColors, #item>
  [ 39] objcall 33 .............................. <tpartColors.item.count>
  [ 41] lteq
  [ 42] jmpifz [ 76] ............................ repeat with t = 1 to tpartColors.item.count
  [ 45] getprop 1450 ............................ <pPartColors>
  [ 48] getparam 1 .............................. <tpartColors>
  [ 50] pushsymb 103 ............................ <#item>
  [ 52] getlocal 1 .............................. <t>
  [ 54] pusharglist 3 ........................... <tpartColors, #item, t>
  [ 56] objcall 68 .............................. <tpartColors.item[t]>
  [ 58] pusharglist 1 ........................... <tpartColors.item[t]>
  [ 60] extcall 519 ............................. <string(tpartColors.item[t])>
  [ 63] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[t])>
  [ 65] objcall 88 .............................. pPartColors.add(string(tpartColors.item[t]))
  [ 67] pushint8 1
  [ 69] getlocal 1
  [ 71] add
  [ 72] setlocal 1
  [ 74] endrepeat [ 31]
  [ 76] getprop 1450 ............................ <pPartColors>
  [ 79] getobjprop 33 ........................... <pPartColors.count>
  [ 81] setlocal 2
  [ 83] getlocal 2
  [ 85] pushint8 4 .............................. <4>
  [ 87] lteq
  [ 88] jmpifz [109] ............................ repeat with j = pPartColors.count to 4
  [ 91] getprop 1450 ............................ <pPartColors>
  [ 94] pushcons 3 .............................. <"*ffffff">
  [ 96] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [ 98] objcall 88 .............................. pPartColors.add("*ffffff")
  [100] pushint8 1
  [102] getlocal 2
  [104] add
  [105] setlocal 2
  [107] endrepeat [ 83]
  [109] getlocal 0 .............................. <tDelim>
  [111] setmovieprop 99 ......................... the itemDelimiter = tDelim
  [113] ret
end

on solveInk me, tPart
  [  0] getprop 14 .............................. <pClass>
  [  2] pushcons 4 .............................. <".props">
  [  4] joinstr ................................. <pClass & ".props">
  [  5] pusharglist 1 ........................... <pClass & ".props">
  [  7] extcall 62 .............................. <memberExists(pClass & ".props")>
  [  9] not ..................................... <not memberExists(pClass & ".props")>
  [ 10] jmpifz [ 19] ............................ if not memberExists(pClass & ".props") then
  [ 13] pushint8 8 .............................. <8>
  [ 15] pusharglistnoret 1 ...................... <8>
  [ 17] extcall 31 .............................. return 8
  [ 19] getprop 14 .............................. <pClass>
  [ 21] pushcons 4 .............................. <".props">
  [ 23] joinstr ................................. <pClass & ".props">
  [ 24] pusharglist 1 ........................... <pClass & ".props">
  [ 26] extcall 65 .............................. <getmemnum(pClass & ".props")>
  [ 28] pushzero ................................ <0>
  [ 29] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 30] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 32] extcall 480 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 35] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 37] getlocal 0 .............................. <tPropList>
  [ 39] pusharglist 1 ........................... <tPropList>
  [ 41] extcall 127 ............................. <ilk(tPropList)>
  [ 43] pushsymb 128 ............................ <#propList>
  [ 45] nteq .................................... <ilk(tPropList) <> #propList>
  [ 46] jmpifz [ 72] ............................ if ilk(tPropList) <> #propList then / else
  [ 49] getparam 0 .............................. <me>
  [ 51] getprop 14 .............................. <pClass>
  [ 53] pushcons 5 .............................. <".props is not valid!">
  [ 55] joinstr ................................. <pClass & ".props is not valid!">
  [ 56] pushsymb 1446 ........................... <#solveInk>
  [ 59] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveInk>
  [ 61] extcall 72 .............................. error(me, pClass & ".props is not valid!", #solveInk)
  [ 63] pushint8 8 .............................. <8>
  [ 65] pusharglistnoret 1 ...................... <8>
  [ 67] extcall 31 .............................. return 8
  [ 69] jmp [133]
  [ 72] getlocal 0 .............................. <tPropList>
  [ 74] getparam 1 .............................. <tPart>
  [ 76] pusharglist 2 ........................... <tPropList, tPart>
  [ 78] objcall 34 .............................. <tPropList[tPart]>
  [ 80] pusharglist 1 ........................... <tPropList[tPart]>
  [ 82] extcall 120 ............................. <voidp(tPropList[tPart])>
  [ 84] jmpifz [ 93] ............................ if voidp(tPropList[tPart]) then
  [ 87] pushint8 8 .............................. <8>
  [ 89] pusharglistnoret 1 ...................... <8>
  [ 91] extcall 31 .............................. return 8
  [ 93] getlocal 0 .............................. <tPropList>
  [ 95] getparam 1 .............................. <tPart>
  [ 97] pusharglist 2 ........................... <tPropList, tPart>
  [ 99] objcall 34 .............................. <tPropList[tPart]>
  [101] pushsymb 93 ............................. <#ink>
  [103] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [105] objcall 34 .............................. <tPropList[tPart][#ink]>
  [107] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [109] extcall 120 ............................. <voidp(tPropList[tPart][#ink])>
  [111] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [112] jmpifz [133] ............................ if not voidp(tPropList[tPart][#ink]) then
  [115] getlocal 0 .............................. <tPropList>
  [117] getparam 1 .............................. <tPart>
  [119] pusharglist 2 ........................... <tPropList, tPart>
  [121] objcall 34 .............................. <tPropList[tPart]>
  [123] pushsymb 93 ............................. <#ink>
  [125] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [127] objcall 34 .............................. <tPropList[tPart][#ink]>
  [129] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [131] extcall 31 .............................. return tPropList[tPart][#ink]
  [133] pushint8 8 .............................. <8>
  [135] pusharglistnoret 1 ...................... <8>
  [137] extcall 31 .............................. return 8
  [139] ret
end

on solveBlend me, tPart
  [  0] getprop 14 .............................. <pClass>
  [  2] pushcons 4 .............................. <".props">
  [  4] joinstr ................................. <pClass & ".props">
  [  5] pusharglist 1 ........................... <pClass & ".props">
  [  7] extcall 62 .............................. <memberExists(pClass & ".props")>
  [  9] not ..................................... <not memberExists(pClass & ".props")>
  [ 10] jmpifz [ 19] ............................ if not memberExists(pClass & ".props") then
  [ 13] pushint8 100 ............................ <100>
  [ 15] pusharglistnoret 1 ...................... <100>
  [ 17] extcall 31 .............................. return 100
  [ 19] getprop 14 .............................. <pClass>
  [ 21] pushcons 4 .............................. <".props">
  [ 23] joinstr ................................. <pClass & ".props">
  [ 24] pusharglist 1 ........................... <pClass & ".props">
  [ 26] extcall 65 .............................. <getmemnum(pClass & ".props")>
  [ 28] pushzero ................................ <0>
  [ 29] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 30] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 32] extcall 480 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 35] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 37] getlocal 0 .............................. <tPropList>
  [ 39] pusharglist 1 ........................... <tPropList>
  [ 41] extcall 127 ............................. <ilk(tPropList)>
  [ 43] pushsymb 128 ............................ <#propList>
  [ 45] nteq .................................... <ilk(tPropList) <> #propList>
  [ 46] jmpifz [ 72] ............................ if ilk(tPropList) <> #propList then / else
  [ 49] getparam 0 .............................. <me>
  [ 51] getprop 14 .............................. <pClass>
  [ 53] pushcons 5 .............................. <".props is not valid!">
  [ 55] joinstr ................................. <pClass & ".props is not valid!">
  [ 56] pushsymb 1447 ........................... <#solveBlend>
  [ 59] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveBlend>
  [ 61] extcall 72 .............................. error(me, pClass & ".props is not valid!", #solveBlend)
  [ 63] pushint8 100 ............................ <100>
  [ 65] pusharglistnoret 1 ...................... <100>
  [ 67] extcall 31 .............................. return 100
  [ 69] jmp [135]
  [ 72] getlocal 0 .............................. <tPropList>
  [ 74] getparam 1 .............................. <tPart>
  [ 76] pusharglist 2 ........................... <tPropList, tPart>
  [ 78] objcall 34 .............................. <tPropList[tPart]>
  [ 80] pusharglist 1 ........................... <tPropList[tPart]>
  [ 82] extcall 120 ............................. <voidp(tPropList[tPart])>
  [ 84] jmpifz [ 93] ............................ if voidp(tPropList[tPart]) then
  [ 87] pushint8 100 ............................ <100>
  [ 89] pusharglistnoret 1 ...................... <100>
  [ 91] extcall 31 .............................. return 100
  [ 93] getlocal 0 .............................. <tPropList>
  [ 95] getparam 1 .............................. <tPart>
  [ 97] pusharglist 2 ........................... <tPropList, tPart>
  [ 99] objcall 34 .............................. <tPropList[tPart]>
  [101] pushsymb 436 ............................ <#blend>
  [104] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [106] objcall 34 .............................. <tPropList[tPart][#blend]>
  [108] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [110] extcall 120 ............................. <voidp(tPropList[tPart][#blend])>
  [112] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [113] jmpifz [135] ............................ if not voidp(tPropList[tPart][#blend]) then
  [116] getlocal 0 .............................. <tPropList>
  [118] getparam 1 .............................. <tPart>
  [120] pusharglist 2 ........................... <tPropList, tPart>
  [122] objcall 34 .............................. <tPropList[tPart]>
  [124] pushsymb 436 ............................ <#blend>
  [127] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [129] objcall 34 .............................. <tPropList[tPart][#blend]>
  [131] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [133] extcall 31 .............................. return tPropList[tPart][#blend]
  [135] pushint8 100 ............................ <100>
  [137] pusharglistnoret 1 ...................... <100>
  [139] extcall 31 .............................. return 100
  [141] ret
end

on solveLocZ me, tPart, tdir
  [  0] getprop 14 .............................. <pClass>
  [  2] pushcons 4 .............................. <".props">
  [  4] joinstr ................................. <pClass & ".props">
  [  5] pusharglist 1 ........................... <pClass & ".props">
  [  7] extcall 62 .............................. <memberExists(pClass & ".props")>
  [  9] not ..................................... <not memberExists(pClass & ".props")>
  [ 10] jmpifz [ 18] ............................ if not memberExists(pClass & ".props") then
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 31 .............................. return 0
  [ 18] getprop 14 .............................. <pClass>
  [ 20] pushcons 4 .............................. <".props">
  [ 22] joinstr ................................. <pClass & ".props">
  [ 23] pusharglist 1 ........................... <pClass & ".props">
  [ 25] extcall 65 .............................. <getmemnum(pClass & ".props")>
  [ 27] pushzero ................................ <0>
  [ 28] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 29] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 31] extcall 480 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 34] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 36] getlocal 0 .............................. <tPropList>
  [ 38] pusharglist 1 ........................... <tPropList>
  [ 40] extcall 127 ............................. <ilk(tPropList)>
  [ 42] pushsymb 128 ............................ <#propList>
  [ 44] nteq .................................... <ilk(tPropList) <> #propList>
  [ 45] jmpifz [ 70] ............................ if ilk(tPropList) <> #propList then / else
  [ 48] getparam 0 .............................. <me>
  [ 50] getprop 14 .............................. <pClass>
  [ 52] pushcons 5 .............................. <".props is not valid!">
  [ 54] joinstr ................................. <pClass & ".props is not valid!">
  [ 55] pushsymb 1448 ........................... <#solveLocZ>
  [ 58] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveLocZ>
  [ 60] extcall 72 .............................. error(me, pClass & ".props is not valid!", #solveLocZ)
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 31 .............................. return 0
  [ 67] jmp [143]
  [ 70] getlocal 0 .............................. <tPropList>
  [ 72] getparam 1 .............................. <tPart>
  [ 74] pusharglist 2 ........................... <tPropList, tPart>
  [ 76] objcall 34 .............................. <tPropList[tPart]>
  [ 78] pusharglist 1 ........................... <tPropList[tPart]>
  [ 80] extcall 120 ............................. <voidp(tPropList[tPart])>
  [ 82] jmpifz [ 90] ............................ if voidp(tPropList[tPart]) then
  [ 85] pushzero ................................ <0>
  [ 86] pusharglistnoret 1 ...................... <0>
  [ 88] extcall 31 .............................. return 0
  [ 90] getlocal 0 .............................. <tPropList>
  [ 92] getparam 1 .............................. <tPart>
  [ 94] pusharglist 2 ........................... <tPropList, tPart>
  [ 96] objcall 34 .............................. <tPropList[tPart]>
  [ 98] pushsymb 1471 ........................... <#zshift>
  [101] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [103] objcall 34 .............................. <tPropList[tPart][#zshift]>
  [105] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [107] extcall 120 ............................. <voidp(tPropList[tPart][#zshift])>
  [109] jmpifz [117] ............................ if voidp(tPropList[tPart][#zshift]) then
  [112] pushzero ................................ <0>
  [113] pusharglistnoret 1 ...................... <0>
  [115] extcall 31 .............................. return 0
  [117] getlocal 0 .............................. <tPropList>
  [119] getparam 1 .............................. <tPart>
  [121] pusharglist 2 ........................... <tPropList, tPart>
  [123] objcall 34 .............................. <tPropList[tPart]>
  [125] pushsymb 1471 ........................... <#zshift>
  [128] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [130] objcall 34 .............................. <tPropList[tPart][#zshift]>
  [132] getobjprop 33 ........................... <tPropList[tPart][#zshift].count>
  [134] getparam 2 .............................. <tdir>
  [136] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [137] jmpifz [143] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [140] pushzero ................................ <0>
  [141] setparam 2 .............................. tdir = 0
  [143] getlocal 0 .............................. <tPropList>
  [145] getparam 1 .............................. <tPart>
  [147] pusharglist 2 ........................... <tPropList, tPart>
  [149] objcall 34 .............................. <tPropList[tPart]>
  [151] pushsymb 1471 ........................... <#zshift>
  [154] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [156] objcall 34 .............................. <tPropList[tPart][#zshift]>
  [158] getparam 2 .............................. <tdir>
  [160] pushint8 1 .............................. <1>
  [162] add ..................................... <tdir + 1>
  [163] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [165] objcall 34 .............................. <tPropList[tPart][#zshift][tdir + 1]>
  [167] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [169] extcall 31 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [171] ret
end

on solveMembers me
  [  0] getprop 28 .............................. <pDirection>
  [  2] pusharglist 1 ........................... <pDirection>
  [  4] extcall 92 .............................. <listp(pDirection)>
  [  6] jmpifz [ 21] ............................ if listp(pDirection) then / else
  [  9] getprop 28 .............................. <pDirection>
  [ 11] pusharglist 1 ........................... <pDirection>
  [ 13] objcall 636 ............................. <pDirection.duplicate()>
  [ 16] setlocal 0 .............................. tTmpDirection = pDirection.duplicate()
  [ 18] jmp [ 25]
  [ 21] getprop 28 .............................. <pDirection>
  [ 23] setlocal 0 .............................. tTmpDirection = pDirection
  [ 25] getprop 18 .............................. <pSprList>
  [ 27] getobjprop 33 ........................... <pSprList.count>
  [ 29] pushzero ................................ <0>
  [ 30] gt ...................................... <pSprList.count > 0>
  [ 31] jmpifz [ 82] ............................ if pSprList.count > 0 then
  [ 34] getprop 18 .............................. <pSprList>
  [ 36] peek 0
  [ 38] pusharglist 1
  [ 40] extcall 33
  [ 42] pushint8 1
  [ 44] peek 0
  [ 46] peek 2
  [ 48] lteq
  [ 49] jmpifz [ 75] ............................ repeat with tSpr in pSprList
  [ 52] peek 2
  [ 54] peek 1
  [ 56] pusharglist 2
  [ 58] extcall 34
  [ 60] setlocal 1
  [ 62] getlocal 1 .............................. <tSpr>
  [ 64] getobjprop 36 ........................... <tSpr.spriteNum>
  [ 66] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 68] extcall 35 .............................. releaseSprite(tSpr.spriteNum)
  [ 70] pushint8 1
  [ 72] add
  [ 73] endrepeat [ 44]
  [ 75] pop 3
  [ 77] pusharglist 0 ........................... <[]>
  [ 79] pushlist ................................ <[]>
  [ 80] setprop 18 .............................. pSprList = []
  [ 82] pushint8 1 .............................. <1>
  [ 84] setlocal 2 .............................. tMemNum = 1
  [ 86] pushcons 6 .............................. <"a">
  [ 88] pusharglist 1 ........................... <"a">
  [ 90] extcall 718 ............................. <charToNum("a")>
  [ 93] setlocal 3 .............................. i = charToNum("a")
  [ 95] pushint8 1 .............................. <1>
  [ 97] setlocal 4 .............................. j = 1
  [ 99] getlocal 2 .............................. <tMemNum>
  [101] pushzero ................................ <0>
  [102] gt ...................................... <tMemNum > 0>
  [103] jmpifz [868] ............................ repeat while tMemNum > 0
  [106] getprop 14 .............................. <pClass>
  [108] pushcons 7 .............................. <"null">
  [110] eq ...................................... <pClass = "null">
  [111] jmpifz [117] ............................ if pClass = "null" then
  [114] pushzero ................................ <0>
  [115] setlocal 5 .............................. opopop = 0
  [117] pushzero ................................ <0>
  [118] setlocal 6 .............................. tFound = 0
  [120] getlocal 6 .............................. <tFound>
  [122] pushzero ................................ <0>
  [123] eq ...................................... <tFound = 0>
  [124] jmpifz [431] ............................ repeat while tFound = 0
  [127] getprop 14 .............................. <pClass>
  [129] pushcons 8 .............................. <"_">
  [131] joinstr ................................. <pClass & "_">
  [132] getlocal 3 .............................. <i>
  [134] pusharglist 1 ........................... <i>
  [136] extcall 451 ............................. <numToChar(i)>
  [139] joinstr ................................. <pClass & "_" & numToChar(i)>
  [140] pushcons 8 .............................. <"_">
  [142] joinstr ................................. <pClass & "_" & numToChar(i) & "_">
  [143] pushcons 9 .............................. <"0">
  [145] joinstr ................................. <pClass & "_" & numToChar(i) & "_" & "0">
  [146] setlocal 7 .............................. tMemNameA = pClass & "_" & numToChar(i) & "_" & "0"
  [148] getprop 471 ............................. <pDimensions>
  [151] pusharglist 1 ........................... <pDimensions>
  [153] extcall 92 .............................. <listp(pDimensions)>
  [155] jmpifz [188] ............................ if listp(pDimensions) then
  [158] getlocal 7 .............................. <tMemNameA>
  [160] pushcons 8 .............................. <"_">
  [162] joinstr ................................. <tMemNameA & "_">
  [163] getprop 471 ............................. <pDimensions>
  [166] pushint8 1 .............................. <1>
  [168] pusharglist 2 ........................... <pDimensions, 1>
  [170] objcall 34 .............................. <pDimensions[1]>
  [172] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [173] pushcons 8 .............................. <"_">
  [175] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [176] getprop 471 ............................. <pDimensions>
  [179] pushint8 2 .............................. <2>
  [181] pusharglist 2 ........................... <pDimensions, 2>
  [183] objcall 34 .............................. <pDimensions[2]>
  [185] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [186] setlocal 7 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [188] getlocal 0 .............................. <tTmpDirection>
  [190] pusharglist 1 ........................... <tTmpDirection>
  [192] extcall 120 ............................. <voidp(tTmpDirection)>
  [194] not ..................................... <not voidp(tTmpDirection)>
  [195] jmpifz [262] ............................ if not voidp(tTmpDirection) then / else
  [198] getlocal 0 .............................. <tTmpDirection>
  [200] pusharglist 1 ........................... <tTmpDirection>
  [202] extcall 33 .............................. <count(tTmpDirection)>
  [204] getlocal 4 .............................. <j>
  [206] gteq .................................... <count(tTmpDirection) >= j>
  [207] jmpifz [236] ............................ if count(tTmpDirection) >= j then / else
  [210] getlocal 7 .............................. <tMemNameA>
  [212] pushcons 8 .............................. <"_">
  [214] joinstr ................................. <tMemNameA & "_">
  [215] getlocal 0 .............................. <tTmpDirection>
  [217] getlocal 4 .............................. <j>
  [219] pusharglist 2 ........................... <tTmpDirection, j>
  [221] objcall 34 .............................. <tTmpDirection[j]>
  [223] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j]>
  [224] pushcons 8 .............................. <"_">
  [226] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j] & "_">
  [227] getprop 1387 ............................ <pAnimFrame>
  [230] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j] & "_" & pAnimFrame>
  [231] setlocal 8 .............................. tMemName = tMemNameA & "_" & tTmpDirection[j] & "_" & pAnimFrame
  [233] jmp [259]
  [236] getlocal 7 .............................. <tMemNameA>
  [238] pushcons 8 .............................. <"_">
  [240] joinstr ................................. <tMemNameA & "_">
  [241] getlocal 0 .............................. <tTmpDirection>
  [243] pushint8 1 .............................. <1>
  [245] pusharglist 2 ........................... <tTmpDirection, 1>
  [247] objcall 34 .............................. <tTmpDirection[1]>
  [249] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1]>
  [250] pushcons 8 .............................. <"_">
  [252] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1] & "_">
  [253] getprop 1387 ............................ <pAnimFrame>
  [256] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1] & "_" & pAnimFrame>
  [257] setlocal 8 .............................. tMemName = tMemNameA & "_" & tTmpDirection[1] & "_" & pAnimFrame
  [259] jmp [273]
  [262] getlocal 7 .............................. <tMemNameA>
  [264] pushcons 8 .............................. <"_">
  [266] joinstr ................................. <tMemNameA & "_">
  [267] getprop 1387 ............................ <pAnimFrame>
  [270] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [271] setlocal 8 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [273] getlocal 8 .............................. <tMemName>
  [275] pusharglist 1 ........................... <tMemName>
  [277] extcall 65 .............................. <getmemnum(tMemName)>
  [279] setlocal 2 .............................. tMemNum = getmemnum(tMemName)
  [281] getlocal 8 .............................. <tMemName>
  [283] setlocal 9 .............................. tOldMemName = tMemName
  [285] getlocal 2 .............................. <tMemNum>
  [287] pushzero ................................ <0>
  [288] eq ...................................... <tMemNum = 0>
  [289] jmpifz [311] ............................ if tMemNum = 0 then
  [292] getlocal 7 .............................. <tMemNameA>
  [294] pushcons 10 ............................. <"_0_">
  [296] joinstr ................................. <tMemNameA & "_0_">
  [297] getprop 1387 ............................ <pAnimFrame>
  [300] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [301] setlocal 8 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [303] getlocal 8 .............................. <tMemName>
  [305] pusharglist 1 ........................... <tMemName>
  [307] extcall 65 .............................. <getmemnum(tMemName)>
  [309] setlocal 2 .............................. tMemNum = getmemnum(tMemName)
  [311] getlocal 2 .............................. <tMemNum>
  [313] pushzero ................................ <0>
  [314] eq ...................................... <tMemNum = 0>
  [315] getlocal 4 .............................. <j>
  [317] pushint8 1 .............................. <1>
  [319] eq ...................................... <j = 1>
  [320] and ..................................... <(tMemNum = 0) and (j = 1)>
  [321] jmpifz [424] ............................ if (tMemNum = 0) and (j = 1) then
  [324] pushzero ................................ <0>
  [325] setlocal 6 .............................. tFound = 0
  [327] getprop 28 .............................. <pDirection>
  [329] pusharglist 1 ........................... <pDirection>
  [331] extcall 92 .............................. <listp(pDirection)>
  [333] jmpifz [404] ............................ if listp(pDirection) then / else
  [336] pushint8 1 .............................. <1>
  [338] setlocal 10
  [340] getlocal 10
  [342] getlocal 0 .............................. <tTmpDirection>
  [344] getobjprop 33 ........................... <tTmpDirection.count>
  [346] lteq
  [347] jmpifz [382] ............................ repeat with tdir = 1 to tTmpDirection.count
  [350] getlocal 0 .............................. <tTmpDirection>
  [352] getlocal 10 ............................. <tdir>
  [354] getlocal 0 .............................. <tTmpDirection>
  [356] getlocal 10 ............................. <tdir>
  [358] pusharglist 2 ........................... <tTmpDirection, tdir>
  [360] objcall 34 .............................. <tTmpDirection[tdir]>
  [362] pushint8 1 .............................. <1>
  [364] add ..................................... <tTmpDirection[tdir] + 1>
  [365] pusharglist 1 ........................... <tTmpDirection[tdir] + 1>
  [367] extcall 102 ............................. <integer(tTmpDirection[tdir] + 1)>
  [369] pusharglistnoret 3 ...................... <tTmpDirection, tdir, integer(tTmpDirection[tdir] + 1)>
  [371] objcall 59 .............................. tTmpDirection[tdir] = integer(tTmpDirection[tdir] + 1)
  [373] pushint8 1
  [375] getlocal 10
  [377] add
  [378] setlocal 10
  [380] endrepeat [340]
  [382] getlocal 0 .............................. <tTmpDirection>
  [384] pushint8 1 .............................. <1>
  [386] pusharglist 2 ........................... <tTmpDirection, 1>
  [388] objcall 34 .............................. <tTmpDirection[1]>
  [390] pushint8 8 .............................. <8>
  [392] eq ...................................... <tTmpDirection[1] = 8>
  [393] jmpifz [401] ............................ if tTmpDirection[1] = 8 then
  [396] pushzero ................................ <0>
  [397] pusharglistnoret 1 ...................... <0>
  [399] extcall 31 .............................. return 0
  [401] jmp [421]
  [404] getparam 0 .............................. <me>
  [406] pushcons 11 ............................. <"No good object:">
  [408] getprop 14 .............................. <pClass>
  [410] joinpadstr .............................. <"No good object:" && pClass>
  [411] pushsymb 10 ............................. <#solveMembers>
  [413] pusharglist 3 ........................... <me, "No good object:" && pClass, #solveMembers>
  [415] extcall 72 .............................. <error(me, "No good object:" && pClass, #solveMembers)>
  [417] pusharglistnoret 1 ...................... <error(me, "No good object:" && pClass, #solveMembers)>
  [419] extcall 31 .............................. return error(me, "No good object:" && pClass, #solveMembers)
  [421] jmp [428] ............................... next repeat
  [424] pushint8 1 .............................. <1>
  [426] setlocal 6 .............................. tFound = 1
  [428] endrepeat [120]
  [431] getlocal 2 .............................. <tMemNum>
  [433] pushzero ................................ <0>
  [434] nteq .................................... <tMemNum <> 0>
  [435] jmpifz [851] ............................ if tMemNum <> 0 then
  [438] getprop 18 .............................. <pSprList>
  [440] pusharglist 1 ........................... <pSprList>
  [442] extcall 33 .............................. <count(pSprList)>
  [444] getlocal 4 .............................. <j>
  [446] gteq .................................... <count(pSprList) >= j>
  [447] jmpifz [463] ............................ if count(pSprList) >= j then / else
  [450] getprop 18 .............................. <pSprList>
  [452] getlocal 4 .............................. <j>
  [454] pusharglist 2 ........................... <pSprList, j>
  [456] objcall 34 .............................. <pSprList[j]>
  [458] setlocal 1 .............................. tSpr = pSprList[j]
  [460] jmp [529]
  [463] getparam 0 .............................. <me>
  [465] pusharglist 1 ........................... <me>
  [467] objcall 75 .............................. <me.getID()>
  [469] pusharglist 1 ........................... <me.getID()>
  [471] extcall 74 .............................. <reserveSprite(me.getID())>
  [473] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [475] extcall 73 .............................. <sprite(reserveSprite(me.getID()))>
  [477] setlocal 1 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [479] getprop 18 .............................. <pSprList>
  [481] getlocal 1 .............................. <tSpr>
  [483] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [485] objcall 88 .............................. pSprList.add(tSpr)
  [487] getlocal 1 .............................. <tSpr>
  [489] getobjprop 36 ........................... <tSpr.spriteNum>
  [491] getparam 0 .............................. <me>
  [493] pusharglist 1 ........................... <me>
  [495] objcall 75 .............................. <me.getID()>
  [497] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [499] extcall 76 .............................. setEventBroker(tSpr.spriteNum, me.getID())
  [501] pushsymb 52 ............................. <#room>
  [503] pusharglist 1 ........................... <#room>
  [505] extcall 51 .............................. <getThread(#room)>
  [507] pusharglist 1 ........................... <getThread(#room)>
  [509] objcall 53 .............................. <getThread(#room).getInterface()>
  [511] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [513] objcall 75 .............................. <getThread(#room).getInterface().getID()>
  [515] setlocal 11 ............................. tTargetID = getThread(#room).getInterface().getID()
  [517] getlocal 1 .............................. <tSpr>
  [519] pushsymb 225 ............................ <#eventProcPassiveObj>
  [521] getlocal 11 ............................. <tTargetID>
  [523] pushsymb 83 ............................. <#mouseDown>
  [525] pusharglistnoret 4 ...................... <tSpr, #eventProcPassiveObj, tTargetID, #mouseDown>
  [527] objcall 84 .............................. tSpr.registerProcedure(#eventProcPassiveObj, tTargetID, #mouseDown)
  [529] getprop 28 .............................. <pDirection>
  [531] pusharglist 1 ........................... <pDirection>
  [533] extcall 120 ............................. <voidp(pDirection)>
  [535] not ..................................... <not voidp(pDirection)>
  [536] jmpifz [611] ............................ if not voidp(pDirection) then / else
  [539] getprop 28 .............................. <pDirection>
  [541] pusharglist 1 ........................... <pDirection>
  [543] extcall 33 .............................. <count(pDirection)>
  [545] getlocal 4 .............................. <j>
  [547] gteq .................................... <count(pDirection) >= j>
  [548] jmpifz [583] ............................ if count(pDirection) >= j then / else
  [551] getprop 1050 ............................ <pLoczList>
  [554] getparam 0 .............................. <me>
  [556] getlocal 3 .............................. <i>
  [558] pusharglist 1 ........................... <i>
  [560] extcall 451 ............................. <numToChar(i)>
  [563] getprop 28 .............................. <pDirection>
  [565] getlocal 4 .............................. <j>
  [567] pusharglist 2 ........................... <pDirection, j>
  [569] objcall 34 .............................. <pDirection[j]>
  [571] pusharglist 3 ........................... <me, numToChar(i), pDirection[j]>
  [573] objcall 1448 ............................ <me.solveLocZ(numToChar(i), pDirection[j])>
  [576] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), pDirection[j])>
  [578] objcall 88 .............................. pLoczList.add(me.solveLocZ(numToChar(i), pDirection[j]))
  [580] jmp [608]
  [583] getprop 1050 ............................ <pLoczList>
  [586] getparam 0 .............................. <me>
  [588] getlocal 3 .............................. <i>
  [590] pusharglist 1 ........................... <i>
  [592] extcall 451 ............................. <numToChar(i)>
  [595] pusharglist 0 ........................... <>
  [597] extcall 30 .............................. <VOID>
  [599] pusharglist 3 ........................... <me, numToChar(i), VOID>
  [601] objcall 1448 ............................ <me.solveLocZ(numToChar(i), VOID)>
  [604] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), VOID)>
  [606] objcall 88 .............................. pLoczList.add(me.solveLocZ(numToChar(i), VOID))
  [608] jmp [636]
  [611] getprop 1050 ............................ <pLoczList>
  [614] getparam 0 .............................. <me>
  [616] getlocal 3 .............................. <i>
  [618] pusharglist 1 ........................... <i>
  [620] extcall 451 ............................. <numToChar(i)>
  [623] pusharglist 0 ........................... <>
  [625] extcall 30 .............................. <VOID>
  [627] pusharglist 3 ........................... <me, numToChar(i), VOID>
  [629] objcall 1448 ............................ <me.solveLocZ(numToChar(i), VOID)>
  [632] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), VOID)>
  [634] objcall 88 .............................. pLoczList.add(me.solveLocZ(numToChar(i), VOID))
  [636] getlocal 1 .............................. <tSpr>
  [638] pusharglist 1 ........................... <tSpr>
  [640] extcall 120 ............................. <voidp(tSpr)>
  [642] not ..................................... <not voidp(tSpr)>
  [643] getlocal 1 .............................. <tSpr>
  [645] pushzero ................................ <0>
  [646] pusharglist 1 ........................... <0>
  [648] extcall 73 .............................. <sprite(0)>
  [650] nteq .................................... <tSpr <> sprite(0)>
  [651] and ..................................... <not voidp(tSpr) and (tSpr <> sprite(0))>
  [652] jmpifz [837] ............................ if not voidp(tSpr) and (tSpr <> sprite(0)) then / else
  [655] getlocal 2 .............................. <tMemNum>
  [657] pushint8 1 .............................. <1>
  [659] lt ...................................... <tMemNum < 1>
  [660] jmpifz [687] ............................ if tMemNum < 1 then
  [663] getlocal 2 .............................. <tMemNum>
  [665] pusharglist 1 ........................... <tMemNum>
  [667] extcall 77 .............................. <abs(tMemNum)>
  [669] setlocal 2 .............................. tMemNum = abs(tMemNum)
  [671] getlocal 1 .............................. <tSpr>
  [673] pushint16 180 ........................... <180>
  [676] setobjprop 1060 ......................... tSpr.rotation = 180
  [679] getlocal 1 .............................. <tSpr>
  [681] pushint16 180 ........................... <180>
  [684] setobjprop 1061 ......................... tSpr.skew = 180
  [687] getlocal 1 .............................. <tSpr>
  [689] getlocal 2 .............................. <tMemNum>
  [691] setobjprop 79 ........................... tSpr.castNum = tMemNum
  [693] getlocal 1 .............................. <tSpr>
  [695] getlocal 2 .............................. <tMemNum>
  [697] pusharglist 1 ........................... <tMemNum>
  [699] extcall 64 .............................. <member(tMemNum)>
  [701] getobjprop 80 ........................... <member(tMemNum).width>
  [703] setobjprop 80 ........................... tSpr.width = member(tMemNum).width
  [705] getlocal 1 .............................. <tSpr>
  [707] getlocal 2 .............................. <tMemNum>
  [709] pusharglist 1 ........................... <tMemNum>
  [711] extcall 64 .............................. <member(tMemNum)>
  [713] getobjprop 81 ........................... <member(tMemNum).height>
  [715] setobjprop 81 ........................... tSpr.height = member(tMemNum).height
  [717] getlocal 1 .............................. <tSpr>
  [719] getparam 0 .............................. <me>
  [721] getlocal 3 .............................. <i>
  [723] pusharglist 1 ........................... <i>
  [725] extcall 451 ............................. <numToChar(i)>
  [728] pusharglist 2 ........................... <me, numToChar(i)>
  [730] objcall 1446 ............................ <me.solveInk(numToChar(i))>
  [733] setobjprop 93 ........................... tSpr.ink = me.solveInk(numToChar(i))
  [735] getlocal 1 .............................. <tSpr>
  [737] getparam 0 .............................. <me>
  [739] getlocal 3 .............................. <i>
  [741] pusharglist 1 ........................... <i>
  [743] extcall 451 ............................. <numToChar(i)>
  [746] pusharglist 2 ........................... <me, numToChar(i)>
  [748] objcall 1447 ............................ <me.solveBlend(numToChar(i))>
  [751] setobjprop 436 .......................... tSpr.blend = me.solveBlend(numToChar(i))
  [754] getlocal 4 .............................. <j>
  [756] getprop 1450 ............................ <pPartColors>
  [759] getobjprop 33 ........................... <pPartColors.count>
  [761] lteq .................................... <j <= pPartColors.count>
  [762] jmpifz [834] ............................ if j <= pPartColors.count then
  [765] getprop 1450 ............................ <pPartColors>
  [768] getlocal 4 .............................. <j>
  [770] pusharglist 2 ........................... <pPartColors, j>
  [772] objcall 34 .............................. <pPartColors[j]>
  [774] pusharglist 1 ........................... <pPartColors[j]>
  [776] extcall 519 ............................. <string(pPartColors[j])>
  [779] pushsymb 66 ............................. <#char>
  [781] pushint8 1 .............................. <1>
  [783] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [785] objcall 68 .............................. <string(pPartColors[j]).char[1]>
  [787] pushcons 12 ............................. <"#">
  [789] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [790] jmpifz [813] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [793] getlocal 1 .............................. <tSpr>
  [795] getprop 1450 ............................ <pPartColors>
  [798] getlocal 4 .............................. <j>
  [800] pusharglist 2 ........................... <pPartColors, j>
  [802] objcall 34 .............................. <pPartColors[j]>
  [804] pusharglist 1 ........................... <pPartColors[j]>
  [806] extcall 94 .............................. <rgb(pPartColors[j])>
  [808] setobjprop 95 ........................... tSpr.bgColor = rgb(pPartColors[j])
  [810] jmp [834]
  [813] getlocal 1 .............................. <tSpr>
  [815] getprop 1450 ............................ <pPartColors>
  [818] getlocal 4 .............................. <j>
  [820] pusharglist 2 ........................... <pPartColors, j>
  [822] objcall 34 .............................. <pPartColors[j]>
  [824] pusharglist 1 ........................... <pPartColors[j]>
  [826] extcall 102 ............................. <integer(pPartColors[j])>
  [828] pusharglist 1 ........................... <integer(pPartColors[j])>
  [830] extcall 96 .............................. <paletteIndex(integer(pPartColors[j]))>
  [832] setobjprop 95 ........................... tSpr.bgColor = paletteIndex(integer(pPartColors[j]))
  [834] jmp [851]
  [837] getparam 0 .............................. <me>
  [839] pushcons 13 ............................. <"Out of sprites!!!">
  [841] pushsymb 10 ............................. <#solveMembers>
  [843] pusharglist 3 ........................... <me, "Out of sprites!!!", #solveMembers>
  [845] extcall 72 .............................. <error(me, "Out of sprites!!!", #solveMembers)>
  [847] pusharglistnoret 1 ...................... <error(me, "Out of sprites!!!", #solveMembers)>
  [849] extcall 31 .............................. return error(me, "Out of sprites!!!", #solveMembers)
  [851] getlocal 3 .............................. <i>
  [853] pushint8 1 .............................. <1>
  [855] add ..................................... <i + 1>
  [856] setlocal 3 .............................. i = i + 1
  [858] getlocal 4 .............................. <j>
  [860] pushint8 1 .............................. <1>
  [862] add ..................................... <j + 1>
  [863] setlocal 4 .............................. j = j + 1
  [865] endrepeat [ 99]
  [868] getprop 14 .............................. <pClass>
  [870] pushcons 14 ............................. <"_sd">
  [872] joinstr ................................. <pClass & "_sd">
  [873] setlocal 12 ............................. tShadowName = pClass & "_sd"
  [875] getprop 28 .............................. <pDirection>
  [877] pusharglist 1 ........................... <pDirection>
  [879] extcall 92 .............................. <listp(pDirection)>
  [881] jmpifz [900] ............................ if listp(pDirection) then
  [884] getlocal 12 ............................. <tShadowName>
  [886] pushcons 8 .............................. <"_">
  [888] joinstr ................................. <tShadowName & "_">
  [889] getprop 28 .............................. <pDirection>
  [891] pushint8 1 .............................. <1>
  [893] pusharglist 2 ........................... <pDirection, 1>
  [895] objcall 34 .............................. <pDirection[1]>
  [897] joinstr ................................. <tShadowName & "_" & pDirection[1]>
  [898] setlocal 12 ............................. tShadowName = tShadowName & "_" & pDirection[1]
  [900] getlocal 12 ............................. <tShadowName>
  [902] pusharglist 1 ........................... <tShadowName>
  [904] extcall 65 .............................. <getmemnum(tShadowName)>
  [906] setlocal 13 ............................. tShadowNum = getmemnum(tShadowName)
  [908] getlocal 13 ............................. <tShadowNum>
  [910] not ..................................... <not tShadowNum>
  [911] getlocal 0 .............................. <tTmpDirection>
  [913] pusharglist 1 ........................... <tTmpDirection>
  [915] extcall 92 .............................. <listp(tTmpDirection)>
  [917] and ..................................... <not tShadowNum and listp(tTmpDirection)>
  [918] jmpifz [932] ............................ if not tShadowNum and listp(tTmpDirection) then
  [921] getprop 14 .............................. <pClass>
  [923] pushcons 14 ............................. <"_sd">
  [925] joinstr ................................. <pClass & "_sd">
  [926] pusharglist 1 ........................... <pClass & "_sd">
  [928] extcall 65 .............................. <getmemnum(pClass & "_sd")>
  [930] setlocal 13 ............................. tShadowNum = getmemnum(pClass & "_sd")
  [932] getlocal 13 ............................. <tShadowNum>
  [934] pushzero ................................ <0>
  [935] nteq .................................... <tShadowNum <> 0>
  [936] jmpifz [1091] ........................... if tShadowNum <> 0 then
  [939] getparam 0 .............................. <me>
  [941] pusharglist 1 ........................... <me>
  [943] objcall 75 .............................. <me.getID()>
  [945] pusharglist 1 ........................... <me.getID()>
  [947] extcall 74 .............................. <reserveSprite(me.getID())>
  [949] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [951] extcall 73 .............................. <sprite(reserveSprite(me.getID()))>
  [953] setlocal 1 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [955] getprop 18 .............................. <pSprList>
  [957] getlocal 1 .............................. <tSpr>
  [959] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [961] objcall 88 .............................. pSprList.add(tSpr)
  [963] getprop 1050 ............................ <pLoczList>
  [966] pushint16 4000 .......................... <4000>
  [969] inv ..................................... <-4000>
  [970] pusharglistnoret 2 ...................... <pLoczList, -4000>
  [972] objcall 88 .............................. pLoczList.add(-4000)
  [974] getlocal 13 ............................. <tShadowNum>
  [976] pushzero ................................ <0>
  [977] lt ...................................... <tShadowNum < 0>
  [978] jmpifz [1016] ........................... if tShadowNum < 0 then
  [981] getlocal 13 ............................. <tShadowNum>
  [983] pusharglist 1 ........................... <tShadowNum>
  [985] extcall 77 .............................. <abs(tShadowNum)>
  [987] setlocal 13 ............................. tShadowNum = abs(tShadowNum)
  [989] getlocal 1 .............................. <tSpr>
  [991] pushint16 180 ........................... <180>
  [994] setobjprop 1060 ......................... tSpr.rotation = 180
  [997] getlocal 1 .............................. <tSpr>
  [999] pushint16 180 ........................... <180>
  [1002] setobjprop 1061 ........................ tSpr.skew = 180
  [1005] getlocal 1 ............................. <tSpr>
  [1007] getlocal 1 ............................. <tSpr>
  [1009] getobjprop 112 ......................... <tSpr.locH>
  [1011] getprop 50 ............................. <pXFactor>
  [1013] add .................................... <tSpr.locH + pXFactor>
  [1014] setobjprop 112 ......................... tSpr.locH = tSpr.locH + pXFactor
  [1016] getlocal 1 ............................. <tSpr>
  [1018] getlocal 13 ............................ <tShadowNum>
  [1020] setobjprop 79 .......................... tSpr.castNum = tShadowNum
  [1022] getlocal 1 ............................. <tSpr>
  [1024] getlocal 13 ............................ <tShadowNum>
  [1026] pusharglist 1 .......................... <tShadowNum>
  [1028] extcall 64 ............................. <member(tShadowNum)>
  [1030] getobjprop 80 .......................... <member(tShadowNum).width>
  [1032] setobjprop 80 .......................... tSpr.width = member(tShadowNum).width
  [1034] getlocal 1 ............................. <tSpr>
  [1036] getlocal 13 ............................ <tShadowNum>
  [1038] pusharglist 1 .......................... <tShadowNum>
  [1040] extcall 64 ............................. <member(tShadowNum)>
  [1042] getobjprop 81 .......................... <member(tShadowNum).height>
  [1044] setobjprop 81 .......................... tSpr.height = member(tShadowNum).height
  [1046] getlocal 1 ............................. <tSpr>
  [1048] getparam 0 ............................. <me>
  [1050] pushcons 15 ............................ <"sd">
  [1052] pusharglist 2 .......................... <me, "sd">
  [1054] objcall 1446 ........................... <me.solveInk("sd")>
  [1057] setobjprop 93 .......................... tSpr.ink = me.solveInk("sd")
  [1059] getlocal 1 ............................. <tSpr>
  [1061] getparam 0 ............................. <me>
  [1063] pushcons 15 ............................ <"sd">
  [1065] pusharglist 2 .......................... <me, "sd">
  [1067] objcall 1447 ........................... <me.solveBlend("sd")>
  [1070] setobjprop 436 ......................... tSpr.blend = me.solveBlend("sd")
  [1073] getlocal 1 ............................. <tSpr>
  [1075] getobjprop 436 ......................... <tSpr.blend>
  [1078] pushint8 100 ........................... <100>
  [1080] eq ..................................... <tSpr.blend = 100>
  [1081] jmpifz [1091] .......................... if tSpr.blend = 100 then
  [1084] getlocal 1 ............................. <tSpr>
  [1086] pushint8 20 ............................ <20>
  [1088] setobjprop 436 ......................... tSpr.blend = 20
  [1091] getprop 18 ............................. <pSprList>
  [1093] getobjprop 33 .......................... <pSprList.count>
  [1095] pushzero ............................... <0>
  [1096] gt ..................................... <pSprList.count > 0>
  [1097] jmpifz [1109] .......................... if pSprList.count > 0 then / else
  [1100] pushint8 1 ............................. <1>
  [1102] pusharglistnoret 1 ..................... <1>
  [1104] extcall 31 ............................. return 1
  [1106] jmp [1126]
  [1109] getparam 0 ............................. <me>
  [1111] pushcons 16 ............................ <"Couldn't define members:">
  [1113] getprop 14 ............................. <pClass>
  [1115] joinpadstr ............................. <"Couldn't define members:" && pClass>
  [1116] pushsymb 10 ............................ <#solveMembers>
  [1118] pusharglist 3 .......................... <me, "Couldn't define members:" && pClass, #solveMembers>
  [1120] extcall 72 ............................. <error(me, "Couldn't define members:" && pClass, #solveMembers)>
  [1122] pusharglistnoret 1 ..................... <error(me, "Couldn't define members:" && pClass, #solveMembers)>
  [1124] extcall 31 ............................. return error(me, "Couldn't define members:" && pClass, #solveMembers)
  [1126] ret
end

on updateLocation me
  [  0] pushsymb 52 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 51 .............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 53 .............................. <getThread(#room).getInterface()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 12] objcall 54 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 14] getprop 19 .............................. <pLocX>
  [ 16] getprop 20 .............................. <pLocY>
  [ 18] getprop 21 .............................. <pLocH>
  [ 20] pusharglist 4 ........................... <getThread(#room).getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [ 22] objcall 111 ............................. <getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 24] setlocal 0 .............................. tScreenLocs = getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 26] pushzero ................................ <0>
  [ 27] setlocal 1 .............................. i = 0
  [ 29] getprop 18 .............................. <pSprList>
  [ 31] peek 0
  [ 33] pusharglist 1
  [ 35] extcall 33
  [ 37] pushint8 1
  [ 39] peek 0
  [ 41] peek 2
  [ 43] lteq
  [ 44] jmpifz [190] ............................ repeat with tSpr in pSprList
  [ 47] peek 2
  [ 49] peek 1
  [ 51] pusharglist 2
  [ 53] extcall 34
  [ 55] setlocal 2
  [ 57] getlocal 1 .............................. <i>
  [ 59] pushint8 1 .............................. <1>
  [ 61] add ..................................... <i + 1>
  [ 62] setlocal 1 .............................. i = i + 1
  [ 64] getlocal 2 .............................. <tSpr>
  [ 66] getlocal 0 .............................. <tScreenLocs>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 72] objcall 34 .............................. <tScreenLocs[1]>
  [ 74] setobjprop 112 .......................... tSpr.locH = tScreenLocs[1]
  [ 76] getlocal 2 .............................. <tSpr>
  [ 78] getlocal 0 .............................. <tScreenLocs>
  [ 80] pushint8 2 .............................. <2>
  [ 82] pusharglist 2 ........................... <tScreenLocs, 2>
  [ 84] objcall 34 .............................. <tScreenLocs[2]>
  [ 86] setobjprop 113 .......................... tSpr.locV = tScreenLocs[2]
  [ 88] getlocal 2 .............................. <tSpr>
  [ 90] getobjprop 1060 ......................... <tSpr.rotation>
  [ 93] pushint16 180 ........................... <180>
  [ 96] eq ...................................... <tSpr.rotation = 180>
  [ 97] jmpifz [111] ............................ if tSpr.rotation = 180 then
  [100] getlocal 2 .............................. <tSpr>
  [102] getlocal 2 .............................. <tSpr>
  [104] getobjprop 112 .......................... <tSpr.locH>
  [106] getprop 50 .............................. <pXFactor>
  [108] add ..................................... <tSpr.locH + pXFactor>
  [109] setobjprop 112 .......................... tSpr.locH = tSpr.locH + pXFactor
  [111] getlocal 1 .............................. <i>
  [113] getprop 1050 ............................ <pLoczList>
  [116] getobjprop 33 ........................... <pLoczList.count>
  [118] lteq .................................... <i <= pLoczList.count>
  [119] jmpifz [136] ............................ if i <= pLoczList.count then / else
  [122] getprop 1050 ............................ <pLoczList>
  [125] getlocal 1 .............................. <i>
  [127] pusharglist 2 ........................... <pLoczList, i>
  [129] objcall 34 .............................. <pLoczList[i]>
  [131] setlocal 3 .............................. tZ = pLoczList[i]
  [133] jmp [139]
  [136] pushzero ................................ <0>
  [137] setlocal 3 .............................. tZ = 0
  [139] getprop 1284 ............................ <pCorrectLocZ>
  [142] jmpifz [170] ............................ if pCorrectLocZ then
  [145] getlocal 2 .............................. <tSpr>
  [147] getlocal 0 .............................. <tScreenLocs>
  [149] pushint8 3 .............................. <3>
  [151] pusharglist 2 ........................... <tScreenLocs, 3>
  [153] objcall 34 .............................. <tScreenLocs[3]>
  [155] getprop 21 .............................. <pLocH>
  [157] pushint16 1000 .......................... <1000>
  [160] mul ..................................... <pLocH * 1000>
  [161] add ..................................... <tScreenLocs[3] + (pLocH * 1000)>
  [162] getlocal 3 .............................. <tZ>
  [164] add ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ>
  [165] setobjprop 129 .......................... tSpr.locZ = tScreenLocs[3] + (pLocH * 1000) + tZ
  [167] jmp [185] ............................... next repeat
  [170] getlocal 2 .............................. <tSpr>
  [172] getlocal 0 .............................. <tScreenLocs>
  [174] pushint8 3 .............................. <3>
  [176] pusharglist 2 ........................... <tScreenLocs, 3>
  [178] objcall 34 .............................. <tScreenLocs[3]>
  [180] getlocal 3 .............................. <tZ>
  [182] add ..................................... <tScreenLocs[3] + tZ>
  [183] setobjprop 129 .......................... tSpr.locZ = tScreenLocs[3] + tZ
  [185] pushint8 1
  [187] add
  [188] endrepeat [ 39]
  [190] pop 3
  [192] ret
end

on show me
  [  0] getprop 18 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 33
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 40] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 34
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] pushint8 1 .............................. <1>
  [ 32] setobjprop 341 .......................... tSpr.visible = 1
  [ 35] pushint8 1
  [ 37] add
  [ 38] endrepeat [ 10]
  [ 40] pop 3
  [ 42] ret
end

on hide me
  [  0] getprop 18 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 33
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 39] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 34
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] pushzero ................................ <0>
  [ 31] setobjprop 341 .......................... tSpr.visible = 0
  [ 34] pushint8 1
  [ 36] add
  [ 37] endrepeat [ 10]
  [ 39] pop 3
  [ 41] ret
end
