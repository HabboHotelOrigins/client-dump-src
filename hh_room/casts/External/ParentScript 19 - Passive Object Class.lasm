property pClass, pSprList, pDirection, pDimensions, pLoczList, pPartColors, pAnimFrame, pLocX, pLocY, pLocH, pAltitude, pXFactor, pCustom, pCorrectLocZ

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 1269 ............................ pClass = EMPTY
  [  5] pushcons 0 .............................. <EMPTY>
  [  7] setprop 1270 ............................ pCustom = EMPTY
  [ 10] pusharglist 0 ........................... <[]>
  [ 12] pushlist ................................ <[]>
  [ 13] setprop 15 .............................. pSprList = []
  [ 15] pusharglist 0 ........................... <[]>
  [ 17] pushlist ................................ <[]>
  [ 18] setprop 34 .............................. pDirection = []
  [ 20] pusharglist 0 ........................... <[]>
  [ 22] pushlist ................................ <[]>
  [ 23] setprop 402 ............................. pDimensions = []
  [ 26] pusharglist 0 ........................... <[]>
  [ 28] pushlist ................................ <[]>
  [ 29] setprop 1011 ............................ pLoczList = []
  [ 32] pusharglist 0 ........................... <[]>
  [ 34] pushlist ................................ <[]>
  [ 35] setprop 1428 ............................ pPartColors = []
  [ 38] pushzero ................................ <0>
  [ 39] setprop 6 ............................... pAnimFrame = 0
  [ 41] pushzero ................................ <0>
  [ 42] setprop 494 ............................. pLocX = 0
  [ 45] pushzero ................................ <0>
  [ 46] setprop 496 ............................. pLocY = 0
  [ 49] pushzero ................................ <0>
  [ 50] setprop 498 ............................. pLocH = 0
  [ 53] pushzero ................................ <0>
  [ 54] setprop 1429 ............................ pAltitude = 0
  [ 57] pushsymb 949 ............................ <#room>
  [ 60] pusharglist 1 ........................... <#room>
  [ 62] extcall 260 ............................. <getThread(#room)>
  [ 65] pusharglist 1 ........................... <getThread(#room)>
  [ 67] objcall 597 ............................. <getThread(#room).getInterface()>
  [ 70] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 72] objcall 69 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 74] getobjprop 977 .......................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [ 77] setprop 977 ............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [ 80] getprop 977 ............................. <pXFactor>
  [ 83] pushint8 32 ............................. <32>
  [ 85] eq ...................................... <pXFactor = 32>
  [ 86] jmpifz [ 96] ............................ if pXFactor = 32 then / else
  [ 89] pushzero ................................ <0>
  [ 90] setprop 1257 ............................ pCorrectLocZ = 0
  [ 93] jmp [101]
  [ 96] pushint8 1 .............................. <1>
  [ 98] setprop 1257 ............................ pCorrectLocZ = 1
  [101] pushint8 1 .............................. <1>
  [103] pusharglistnoret 1 ...................... <1>
  [105] extcall 21 .............................. return 1
  [107] ret
end

on deconstruct me
  [  0] getprop 15 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 14
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 42] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 9
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 18 ........................... <tSpr.spriteNum>
  [ 32] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 34] extcall 367 ............................. releaseSprite(tSpr.spriteNum)
  [ 37] pushint8 1
  [ 39] add
  [ 40] endrepeat [ 10]
  [ 42] pop 3
  [ 44] pusharglist 0 ........................... <[]>
  [ 46] pushlist ................................ <[]>
  [ 47] setprop 15 .............................. pSprList = []
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglistnoret 1 ...................... <1>
  [ 53] extcall 21 .............................. return 1
  [ 55] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 492 ............................ <#class>
  [  5] pusharglist 2 ........................... <tdata, #class>
  [  7] objcall 9 ............................... <tdata[#class]>
  [  9] setprop 1269 ............................ pClass = tdata[#class]
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 792 ............................ <#direction>
  [ 17] pusharglist 2 ........................... <tdata, #direction>
  [ 19] objcall 9 ............................... <tdata[#direction]>
  [ 21] setprop 34 .............................. pDirection = tdata[#direction]
  [ 23] getparam 1 .............................. <tdata>
  [ 25] pushsymb 818 ............................ <#dimensions>
  [ 28] pusharglist 2 ........................... <tdata, #dimensions>
  [ 30] objcall 9 ............................... <tdata[#dimensions]>
  [ 32] setprop 402 ............................. pDimensions = tdata[#dimensions]
  [ 35] getparam 1 .............................. <tdata>
  [ 37] pushsymb 493 ............................ <#x>
  [ 40] pusharglist 2 ........................... <tdata, #x>
  [ 42] objcall 9 ............................... <tdata[#x]>
  [ 44] setprop 494 ............................. pLocX = tdata[#x]
  [ 47] getparam 1 .............................. <tdata>
  [ 49] pushsymb 495 ............................ <#y>
  [ 52] pusharglist 2 ........................... <tdata, #y>
  [ 54] objcall 9 ............................... <tdata[#y]>
  [ 56] setprop 496 ............................. pLocY = tdata[#y]
  [ 59] getparam 1 .............................. <tdata>
  [ 61] pushsymb 497 ............................ <#h>
  [ 64] pusharglist 2 ........................... <tdata, #h>
  [ 66] objcall 9 ............................... <tdata[#h]>
  [ 68] setprop 498 ............................. pLocH = tdata[#h]
  [ 71] getparam 0 .............................. <me>
  [ 73] getparam 1 .............................. <tdata>
  [ 75] pushsymb 823 ............................ <#colors>
  [ 78] pusharglist 2 ........................... <tdata, #colors>
  [ 80] objcall 9 ............................... <tdata[#colors]>
  [ 82] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [ 84] objcall 1422 ............................ me.solveColors(tdata[#colors])
  [ 87] getparam 0 .............................. <me>
  [ 89] pusharglist 1 ........................... <me>
  [ 91] objcall 1427 ............................ <me.solveMembers()>
  [ 94] pushzero ................................ <0>
  [ 95] eq ...................................... <me.solveMembers() = 0>
  [ 96] jmpifz [104] ............................ if me.solveMembers() = 0 then
  [ 99] pushzero ................................ <0>
  [100] pusharglistnoret 1 ...................... <0>
  [102] extcall 21 .............................. return 0
  [104] getparam 0 .............................. <me>
  [106] getparam 1 .............................. <tdata>
  [108] pushsymb 824 ............................ <#props>
  [111] pusharglist 2 ........................... <tdata, #props>
  [113] objcall 9 ............................... <tdata[#props]>
  [115] pusharglist 2 ........................... <me, tdata[#props]>
  [117] objcall 0 ............................... <me.prepare(tdata[#props])>
  [119] pushzero ................................ <0>
  [120] eq ...................................... <me.prepare(tdata[#props]) = 0>
  [121] jmpifz [129] ............................ if me.prepare(tdata[#props]) = 0 then
  [124] pushzero ................................ <0>
  [125] pusharglistnoret 1 ...................... <0>
  [127] extcall 21 .............................. return 0
  [129] getparam 0 .............................. <me>
  [131] pusharglistnoret 1 ...................... <me>
  [133] objcall 1041 ............................ me.updateLocation()
  [136] pushint8 1 .............................. <1>
  [138] pusharglistnoret 1 ...................... <1>
  [140] extcall 21 .............................. return 1
  [142] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 21 .............................. return 1
  [  6] ret
end

on getInfo me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tInfo = [:]
  [  5] getlocal 0 .............................. <tInfo>
  [  7] pushsymb 31 ............................. <#name>
  [  9] getprop 1269 ............................ <pClass>
  [ 12] pusharglistnoret 3 ...................... <tInfo, #name, pClass>
  [ 14] objcall 173 ............................. tInfo[#name] = pClass
  [ 16] getlocal 0 .............................. <tInfo>
  [ 18] pushsymb 492 ............................ <#class>
  [ 21] getprop 1269 ............................ <pClass>
  [ 24] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 26] objcall 173 ............................. tInfo[#class] = pClass
  [ 28] getlocal 0 .............................. <tInfo>
  [ 30] pushsymb 289 ............................ <#custom>
  [ 33] getprop 1270 ............................ <pCustom>
  [ 36] pusharglistnoret 3 ...................... <tInfo, #custom, pCustom>
  [ 38] objcall 173 ............................. tInfo[#custom] = pCustom
  [ 40] getlocal 0 .............................. <tInfo>
  [ 42] pusharglistnoret 1 ...................... <tInfo>
  [ 44] extcall 21 .............................. return tInfo
  [ 46] ret
end

on getLocation me
  [  0] getprop 494 ............................. <pLocX>
  [  3] getprop 496 ............................. <pLocY>
  [  6] getprop 498 ............................. <pLocH>
  [  9] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 11] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 12] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 14] extcall 21 .............................. return [pLocX, pLocY, pLocH]
  [ 16] ret
end

on getDirection me
  [  0] getprop 34 .............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 21 .............................. return pDirection
  [  6] ret
end

on getSprites me
  [  0] getprop 15 .............................. <pSprList>
  [  2] pusharglistnoret 1 ...................... <pSprList>
  [  4] extcall 21 .............................. return pSprList
  [  6] ret
end

on select me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 21 .............................. return 0
  [  5] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 10 .............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 1 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 1428 ............................ pPartColors = []
  [ 19] getmovieprop 29 ......................... <the itemDelimiter>
  [ 21] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 23] pushcons 2 .............................. <",">
  [ 25] setmovieprop 29 ......................... the itemDelimiter = ","
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 1
  [ 31] getlocal 1
  [ 33] getparam 1 .............................. <tpartColors>
  [ 35] pushsymb 32 ............................. <#item>
  [ 37] pusharglist 2 ........................... <tpartColors, #item>
  [ 39] objcall 14 .............................. <tpartColors.item.count>
  [ 41] lteq
  [ 42] jmpifz [ 76] ............................ repeat with t = 1 to tpartColors.item.count
  [ 45] getprop 1428 ............................ <pPartColors>
  [ 48] getparam 1 .............................. <tpartColors>
  [ 50] pushsymb 32 ............................. <#item>
  [ 52] getlocal 1 .............................. <t>
  [ 54] pusharglist 3 ........................... <tpartColors, #item, t>
  [ 56] objcall 33 .............................. <tpartColors.item[t]>
  [ 58] pusharglist 1 ........................... <tpartColors.item[t]>
  [ 60] extcall 453 ............................. <string(tpartColors.item[t])>
  [ 63] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[t])>
  [ 65] objcall 186 ............................. pPartColors.add(string(tpartColors.item[t]))
  [ 67] pushint8 1
  [ 69] getlocal 1
  [ 71] add
  [ 72] setlocal 1
  [ 74] endrepeat [ 31]
  [ 76] getprop 1428 ............................ <pPartColors>
  [ 79] getobjprop 14 ........................... <pPartColors.count>
  [ 81] setlocal 2
  [ 83] getlocal 2
  [ 85] pushint8 4 .............................. <4>
  [ 87] lteq
  [ 88] jmpifz [109] ............................ repeat with j = pPartColors.count to 4
  [ 91] getprop 1428 ............................ <pPartColors>
  [ 94] pushcons 3 .............................. <"*ffffff">
  [ 96] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [ 98] objcall 186 ............................. pPartColors.add("*ffffff")
  [100] pushint8 1
  [102] getlocal 2
  [104] add
  [105] setlocal 2
  [107] endrepeat [ 83]
  [109] getlocal 0 .............................. <tDelim>
  [111] setmovieprop 29 ......................... the itemDelimiter = tDelim
  [113] ret
end

on solveInk me, tPart
  [  0] getprop 1269 ............................ <pClass>
  [  3] pushcons 4 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 35 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 20] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushint8 8 .............................. <8>
  [ 16] pusharglistnoret 1 ...................... <8>
  [ 18] extcall 21 .............................. return 8
  [ 20] getprop 1269 ............................ <pClass>
  [ 23] pushcons 4 .............................. <".props">
  [ 25] joinstr ................................. <pClass & ".props">
  [ 26] pusharglist 1 ........................... <pClass & ".props">
  [ 28] extcall 37 .............................. <getmemnum(pClass & ".props")>
  [ 30] pushzero ................................ <0>
  [ 31] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 32] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 34] extcall 411 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 37] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 39] getlocal 0 .............................. <tPropList>
  [ 41] pusharglist 1 ........................... <tPropList>
  [ 43] extcall 248 ............................. <ilk(tPropList)>
  [ 45] pushsymb 1449 ........................... <#propList>
  [ 48] nteq .................................... <ilk(tPropList) <> #propList>
  [ 49] jmpifz [ 76] ............................ if ilk(tPropList) <> #propList then / else
  [ 52] getparam 0 .............................. <me>
  [ 54] getprop 1269 ............................ <pClass>
  [ 57] pushcons 5 .............................. <".props is not valid!">
  [ 59] joinstr ................................. <pClass & ".props is not valid!">
  [ 60] pushsymb 1423 ........................... <#solveInk>
  [ 63] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveInk>
  [ 65] extcall 161 ............................. error(me, pClass & ".props is not valid!", #solveInk)
  [ 67] pushint8 8 .............................. <8>
  [ 69] pusharglistnoret 1 ...................... <8>
  [ 71] extcall 21 .............................. return 8
  [ 73] jmp [139]
  [ 76] getlocal 0 .............................. <tPropList>
  [ 78] getparam 1 .............................. <tPart>
  [ 80] pusharglist 2 ........................... <tPropList, tPart>
  [ 82] objcall 9 ............................... <tPropList[tPart]>
  [ 84] pusharglist 1 ........................... <tPropList[tPart]>
  [ 86] extcall 10 .............................. <voidp(tPropList[tPart])>
  [ 88] jmpifz [ 97] ............................ if voidp(tPropList[tPart]) then
  [ 91] pushint8 8 .............................. <8>
  [ 93] pusharglistnoret 1 ...................... <8>
  [ 95] extcall 21 .............................. return 8
  [ 97] getlocal 0 .............................. <tPropList>
  [ 99] getparam 1 .............................. <tPart>
  [101] pusharglist 2 ........................... <tPropList, tPart>
  [103] objcall 9 ............................... <tPropList[tPart]>
  [105] pushsymb 419 ............................ <#ink>
  [108] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [110] objcall 9 ............................... <tPropList[tPart][#ink]>
  [112] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [114] extcall 10 .............................. <voidp(tPropList[tPart][#ink])>
  [116] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [117] jmpifz [139] ............................ if not voidp(tPropList[tPart][#ink]) then
  [120] getlocal 0 .............................. <tPropList>
  [122] getparam 1 .............................. <tPart>
  [124] pusharglist 2 ........................... <tPropList, tPart>
  [126] objcall 9 ............................... <tPropList[tPart]>
  [128] pushsymb 419 ............................ <#ink>
  [131] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [133] objcall 9 ............................... <tPropList[tPart][#ink]>
  [135] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [137] extcall 21 .............................. return tPropList[tPart][#ink]
  [139] pushint8 8 .............................. <8>
  [141] pusharglistnoret 1 ...................... <8>
  [143] extcall 21 .............................. return 8
  [145] ret
end

on solveBlend me, tPart
  [  0] getprop 1269 ............................ <pClass>
  [  3] pushcons 4 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 35 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 20] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushint8 100 ............................ <100>
  [ 16] pusharglistnoret 1 ...................... <100>
  [ 18] extcall 21 .............................. return 100
  [ 20] getprop 1269 ............................ <pClass>
  [ 23] pushcons 4 .............................. <".props">
  [ 25] joinstr ................................. <pClass & ".props">
  [ 26] pusharglist 1 ........................... <pClass & ".props">
  [ 28] extcall 37 .............................. <getmemnum(pClass & ".props")>
  [ 30] pushzero ................................ <0>
  [ 31] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 32] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 34] extcall 411 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 37] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 39] getlocal 0 .............................. <tPropList>
  [ 41] pusharglist 1 ........................... <tPropList>
  [ 43] extcall 248 ............................. <ilk(tPropList)>
  [ 45] pushsymb 1449 ........................... <#propList>
  [ 48] nteq .................................... <ilk(tPropList) <> #propList>
  [ 49] jmpifz [ 76] ............................ if ilk(tPropList) <> #propList then / else
  [ 52] getparam 0 .............................. <me>
  [ 54] getprop 1269 ............................ <pClass>
  [ 57] pushcons 5 .............................. <".props is not valid!">
  [ 59] joinstr ................................. <pClass & ".props is not valid!">
  [ 60] pushsymb 1424 ........................... <#solveBlend>
  [ 63] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveBlend>
  [ 65] extcall 161 ............................. error(me, pClass & ".props is not valid!", #solveBlend)
  [ 67] pushint8 100 ............................ <100>
  [ 69] pusharglistnoret 1 ...................... <100>
  [ 71] extcall 21 .............................. return 100
  [ 73] jmp [139]
  [ 76] getlocal 0 .............................. <tPropList>
  [ 78] getparam 1 .............................. <tPart>
  [ 80] pusharglist 2 ........................... <tPropList, tPart>
  [ 82] objcall 9 ............................... <tPropList[tPart]>
  [ 84] pusharglist 1 ........................... <tPropList[tPart]>
  [ 86] extcall 10 .............................. <voidp(tPropList[tPart])>
  [ 88] jmpifz [ 97] ............................ if voidp(tPropList[tPart]) then
  [ 91] pushint8 100 ............................ <100>
  [ 93] pusharglistnoret 1 ...................... <100>
  [ 95] extcall 21 .............................. return 100
  [ 97] getlocal 0 .............................. <tPropList>
  [ 99] getparam 1 .............................. <tPart>
  [101] pusharglist 2 ........................... <tPropList, tPart>
  [103] objcall 9 ............................... <tPropList[tPart]>
  [105] pushsymb 362 ............................ <#blend>
  [108] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [110] objcall 9 ............................... <tPropList[tPart][#blend]>
  [112] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [114] extcall 10 .............................. <voidp(tPropList[tPart][#blend])>
  [116] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [117] jmpifz [139] ............................ if not voidp(tPropList[tPart][#blend]) then
  [120] getlocal 0 .............................. <tPropList>
  [122] getparam 1 .............................. <tPart>
  [124] pusharglist 2 ........................... <tPropList, tPart>
  [126] objcall 9 ............................... <tPropList[tPart]>
  [128] pushsymb 362 ............................ <#blend>
  [131] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [133] objcall 9 ............................... <tPropList[tPart][#blend]>
  [135] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [137] extcall 21 .............................. return tPropList[tPart][#blend]
  [139] pushint8 100 ............................ <100>
  [141] pusharglistnoret 1 ...................... <100>
  [143] extcall 21 .............................. return 100
  [145] ret
end

on solveLocZ me, tPart, tdir
  [  0] getprop 1269 ............................ <pClass>
  [  3] pushcons 4 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 35 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 19] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 21 .............................. return 0
  [ 19] getprop 1269 ............................ <pClass>
  [ 22] pushcons 4 .............................. <".props">
  [ 24] joinstr ................................. <pClass & ".props">
  [ 25] pusharglist 1 ........................... <pClass & ".props">
  [ 27] extcall 37 .............................. <getmemnum(pClass & ".props")>
  [ 29] pushzero ................................ <0>
  [ 30] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 31] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 33] extcall 411 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 36] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 38] getlocal 0 .............................. <tPropList>
  [ 40] pusharglist 1 ........................... <tPropList>
  [ 42] extcall 248 ............................. <ilk(tPropList)>
  [ 44] pushsymb 1449 ........................... <#propList>
  [ 47] nteq .................................... <ilk(tPropList) <> #propList>
  [ 48] jmpifz [ 74] ............................ if ilk(tPropList) <> #propList then / else
  [ 51] getparam 0 .............................. <me>
  [ 53] getprop 1269 ............................ <pClass>
  [ 56] pushcons 5 .............................. <".props is not valid!">
  [ 58] joinstr ................................. <pClass & ".props is not valid!">
  [ 59] pushsymb 1425 ........................... <#solveLocZ>
  [ 62] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveLocZ>
  [ 64] extcall 161 ............................. error(me, pClass & ".props is not valid!", #solveLocZ)
  [ 66] pushzero ................................ <0>
  [ 67] pusharglistnoret 1 ...................... <0>
  [ 69] extcall 21 .............................. return 0
  [ 71] jmp [147]
  [ 74] getlocal 0 .............................. <tPropList>
  [ 76] getparam 1 .............................. <tPart>
  [ 78] pusharglist 2 ........................... <tPropList, tPart>
  [ 80] objcall 9 ............................... <tPropList[tPart]>
  [ 82] pusharglist 1 ........................... <tPropList[tPart]>
  [ 84] extcall 10 .............................. <voidp(tPropList[tPart])>
  [ 86] jmpifz [ 94] ............................ if voidp(tPropList[tPart]) then
  [ 89] pushzero ................................ <0>
  [ 90] pusharglistnoret 1 ...................... <0>
  [ 92] extcall 21 .............................. return 0
  [ 94] getlocal 0 .............................. <tPropList>
  [ 96] getparam 1 .............................. <tPart>
  [ 98] pusharglist 2 ........................... <tPropList, tPart>
  [100] objcall 9 ............................... <tPropList[tPart]>
  [102] pushsymb 1451 ........................... <#zshift>
  [105] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [107] objcall 9 ............................... <tPropList[tPart][#zshift]>
  [109] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [111] extcall 10 .............................. <voidp(tPropList[tPart][#zshift])>
  [113] jmpifz [121] ............................ if voidp(tPropList[tPart][#zshift]) then
  [116] pushzero ................................ <0>
  [117] pusharglistnoret 1 ...................... <0>
  [119] extcall 21 .............................. return 0
  [121] getlocal 0 .............................. <tPropList>
  [123] getparam 1 .............................. <tPart>
  [125] pusharglist 2 ........................... <tPropList, tPart>
  [127] objcall 9 ............................... <tPropList[tPart]>
  [129] pushsymb 1451 ........................... <#zshift>
  [132] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [134] objcall 9 ............................... <tPropList[tPart][#zshift]>
  [136] getobjprop 14 ........................... <tPropList[tPart][#zshift].count>
  [138] getparam 2 .............................. <tdir>
  [140] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [141] jmpifz [147] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [144] pushzero ................................ <0>
  [145] setparam 2 .............................. tdir = 0
  [147] getlocal 0 .............................. <tPropList>
  [149] getparam 1 .............................. <tPart>
  [151] pusharglist 2 ........................... <tPropList, tPart>
  [153] objcall 9 ............................... <tPropList[tPart]>
  [155] pushsymb 1451 ........................... <#zshift>
  [158] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [160] objcall 9 ............................... <tPropList[tPart][#zshift]>
  [162] getparam 2 .............................. <tdir>
  [164] pushint8 1 .............................. <1>
  [166] add ..................................... <tdir + 1>
  [167] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [169] objcall 9 ............................... <tPropList[tPart][#zshift][tdir + 1]>
  [171] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [173] extcall 21 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [175] ret
end

on solveMembers me
  [  0] getprop 34 .............................. <pDirection>
  [  2] pusharglist 1 ........................... <pDirection>
  [  4] extcall 288 ............................. <listp(pDirection)>
  [  7] jmpifz [ 22] ............................ if listp(pDirection) then / else
  [ 10] getprop 34 .............................. <pDirection>
  [ 12] pusharglist 1 ........................... <pDirection>
  [ 14] objcall 582 ............................. <pDirection.duplicate()>
  [ 17] setlocal 0 .............................. tTmpDirection = pDirection.duplicate()
  [ 19] jmp [ 26]
  [ 22] getprop 34 .............................. <pDirection>
  [ 24] setlocal 0 .............................. tTmpDirection = pDirection
  [ 26] getprop 15 .............................. <pSprList>
  [ 28] getobjprop 14 ........................... <pSprList.count>
  [ 30] pushzero ................................ <0>
  [ 31] gt ...................................... <pSprList.count > 0>
  [ 32] jmpifz [ 84] ............................ if pSprList.count > 0 then
  [ 35] getprop 15 .............................. <pSprList>
  [ 37] peek 0
  [ 39] pusharglist 1
  [ 41] extcall 14
  [ 43] pushint8 1
  [ 45] peek 0
  [ 47] peek 2
  [ 49] lteq
  [ 50] jmpifz [ 77] ............................ repeat with tSpr in pSprList
  [ 53] peek 2
  [ 55] peek 1
  [ 57] pusharglist 2
  [ 59] extcall 9
  [ 61] setlocal 1
  [ 63] getlocal 1 .............................. <tSpr>
  [ 65] getobjprop 18 ........................... <tSpr.spriteNum>
  [ 67] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 69] extcall 367 ............................. releaseSprite(tSpr.spriteNum)
  [ 72] pushint8 1
  [ 74] add
  [ 75] endrepeat [ 45]
  [ 77] pop 3
  [ 79] pusharglist 0 ........................... <[]>
  [ 81] pushlist ................................ <[]>
  [ 82] setprop 15 .............................. pSprList = []
  [ 84] pushint8 1 .............................. <1>
  [ 86] setlocal 2 .............................. tMemNum = 1
  [ 88] pushcons 6 .............................. <"a">
  [ 90] pusharglist 1 ........................... <"a">
  [ 92] extcall 20 .............................. <charToNum("a")>
  [ 94] setlocal 3 .............................. i = charToNum("a")
  [ 96] pushint8 1 .............................. <1>
  [ 98] setlocal 4 .............................. j = 1
  [100] getlocal 2 .............................. <tMemNum>
  [102] pushzero ................................ <0>
  [103] gt ...................................... <tMemNum > 0>
  [104] jmpifz [882] ............................ repeat while tMemNum > 0
  [107] getprop 1269 ............................ <pClass>
  [110] pushcons 7 .............................. <"null">
  [112] eq ...................................... <pClass = "null">
  [113] jmpifz [119] ............................ if pClass = "null" then
  [116] pushzero ................................ <0>
  [117] setlocal 5 .............................. opopop = 0
  [119] pushzero ................................ <0>
  [120] setlocal 6 .............................. tFound = 0
  [122] getlocal 6 .............................. <tFound>
  [124] pushzero ................................ <0>
  [125] eq ...................................... <tFound = 0>
  [126] jmpifz [434] ............................ repeat while tFound = 0
  [129] getprop 1269 ............................ <pClass>
  [132] pushcons 8 .............................. <"_">
  [134] joinstr ................................. <pClass & "_">
  [135] getlocal 3 .............................. <i>
  [137] pusharglist 1 ........................... <i>
  [139] extcall 19 .............................. <numToChar(i)>
  [141] joinstr ................................. <pClass & "_" & numToChar(i)>
  [142] pushcons 8 .............................. <"_">
  [144] joinstr ................................. <pClass & "_" & numToChar(i) & "_">
  [145] pushcons 9 .............................. <"0">
  [147] joinstr ................................. <pClass & "_" & numToChar(i) & "_" & "0">
  [148] setlocal 7 .............................. tMemNameA = pClass & "_" & numToChar(i) & "_" & "0"
  [150] getprop 402 ............................. <pDimensions>
  [153] pusharglist 1 ........................... <pDimensions>
  [155] extcall 288 ............................. <listp(pDimensions)>
  [158] jmpifz [191] ............................ if listp(pDimensions) then
  [161] getlocal 7 .............................. <tMemNameA>
  [163] pushcons 8 .............................. <"_">
  [165] joinstr ................................. <tMemNameA & "_">
  [166] getprop 402 ............................. <pDimensions>
  [169] pushint8 1 .............................. <1>
  [171] pusharglist 2 ........................... <pDimensions, 1>
  [173] objcall 9 ............................... <pDimensions[1]>
  [175] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [176] pushcons 8 .............................. <"_">
  [178] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [179] getprop 402 ............................. <pDimensions>
  [182] pushint8 2 .............................. <2>
  [184] pusharglist 2 ........................... <pDimensions, 2>
  [186] objcall 9 ............................... <pDimensions[2]>
  [188] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [189] setlocal 7 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [191] getlocal 0 .............................. <tTmpDirection>
  [193] pusharglist 1 ........................... <tTmpDirection>
  [195] extcall 10 .............................. <voidp(tTmpDirection)>
  [197] not ..................................... <not voidp(tTmpDirection)>
  [198] jmpifz [263] ............................ if not voidp(tTmpDirection) then / else
  [201] getlocal 0 .............................. <tTmpDirection>
  [203] pusharglist 1 ........................... <tTmpDirection>
  [205] extcall 14 .............................. <count(tTmpDirection)>
  [207] getlocal 4 .............................. <j>
  [209] gteq .................................... <count(tTmpDirection) >= j>
  [210] jmpifz [238] ............................ if count(tTmpDirection) >= j then / else
  [213] getlocal 7 .............................. <tMemNameA>
  [215] pushcons 8 .............................. <"_">
  [217] joinstr ................................. <tMemNameA & "_">
  [218] getlocal 0 .............................. <tTmpDirection>
  [220] getlocal 4 .............................. <j>
  [222] pusharglist 2 ........................... <tTmpDirection, j>
  [224] objcall 9 ............................... <tTmpDirection[j]>
  [226] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j]>
  [227] pushcons 8 .............................. <"_">
  [229] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j] & "_">
  [230] getprop 6 ............................... <pAnimFrame>
  [232] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j] & "_" & pAnimFrame>
  [233] setlocal 8 .............................. tMemName = tMemNameA & "_" & tTmpDirection[j] & "_" & pAnimFrame
  [235] jmp [260]
  [238] getlocal 7 .............................. <tMemNameA>
  [240] pushcons 8 .............................. <"_">
  [242] joinstr ................................. <tMemNameA & "_">
  [243] getlocal 0 .............................. <tTmpDirection>
  [245] pushint8 1 .............................. <1>
  [247] pusharglist 2 ........................... <tTmpDirection, 1>
  [249] objcall 9 ............................... <tTmpDirection[1]>
  [251] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1]>
  [252] pushcons 8 .............................. <"_">
  [254] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1] & "_">
  [255] getprop 6 ............................... <pAnimFrame>
  [257] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1] & "_" & pAnimFrame>
  [258] setlocal 8 .............................. tMemName = tMemNameA & "_" & tTmpDirection[1] & "_" & pAnimFrame
  [260] jmp [273]
  [263] getlocal 7 .............................. <tMemNameA>
  [265] pushcons 8 .............................. <"_">
  [267] joinstr ................................. <tMemNameA & "_">
  [268] getprop 6 ............................... <pAnimFrame>
  [270] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [271] setlocal 8 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [273] getlocal 8 .............................. <tMemName>
  [275] pusharglist 1 ........................... <tMemName>
  [277] extcall 37 .............................. <getmemnum(tMemName)>
  [279] setlocal 2 .............................. tMemNum = getmemnum(tMemName)
  [281] getlocal 8 .............................. <tMemName>
  [283] setlocal 9 .............................. tOldMemName = tMemName
  [285] getlocal 2 .............................. <tMemNum>
  [287] pushzero ................................ <0>
  [288] eq ...................................... <tMemNum = 0>
  [289] jmpifz [310] ............................ if tMemNum = 0 then
  [292] getlocal 7 .............................. <tMemNameA>
  [294] pushcons 10 ............................. <"_0_">
  [296] joinstr ................................. <tMemNameA & "_0_">
  [297] getprop 6 ............................... <pAnimFrame>
  [299] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [300] setlocal 8 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [302] getlocal 8 .............................. <tMemName>
  [304] pusharglist 1 ........................... <tMemName>
  [306] extcall 37 .............................. <getmemnum(tMemName)>
  [308] setlocal 2 .............................. tMemNum = getmemnum(tMemName)
  [310] getlocal 2 .............................. <tMemNum>
  [312] pushzero ................................ <0>
  [313] eq ...................................... <tMemNum = 0>
  [314] getlocal 4 .............................. <j>
  [316] pushint8 1 .............................. <1>
  [318] eq ...................................... <j = 1>
  [319] and ..................................... <(tMemNum = 0) and (j = 1)>
  [320] jmpifz [427] ............................ if (tMemNum = 0) and (j = 1) then
  [323] pushzero ................................ <0>
  [324] setlocal 6 .............................. tFound = 0
  [326] getprop 34 .............................. <pDirection>
  [328] pusharglist 1 ........................... <pDirection>
  [330] extcall 288 ............................. <listp(pDirection)>
  [333] jmpifz [405] ............................ if listp(pDirection) then / else
  [336] pushint8 1 .............................. <1>
  [338] setlocal 10
  [340] getlocal 10
  [342] getlocal 0 .............................. <tTmpDirection>
  [344] getobjprop 14 ........................... <tTmpDirection.count>
  [346] lteq
  [347] jmpifz [383] ............................ repeat with tdir = 1 to tTmpDirection.count
  [350] getlocal 0 .............................. <tTmpDirection>
  [352] getlocal 10 ............................. <tdir>
  [354] getlocal 0 .............................. <tTmpDirection>
  [356] getlocal 10 ............................. <tdir>
  [358] pusharglist 2 ........................... <tTmpDirection, tdir>
  [360] objcall 9 ............................... <tTmpDirection[tdir]>
  [362] pushint8 1 .............................. <1>
  [364] add ..................................... <tTmpDirection[tdir] + 1>
  [365] pusharglist 1 ........................... <tTmpDirection[tdir] + 1>
  [367] extcall 451 ............................. <integer(tTmpDirection[tdir] + 1)>
  [370] pusharglistnoret 3 ...................... <tTmpDirection, tdir, integer(tTmpDirection[tdir] + 1)>
  [372] objcall 173 ............................. tTmpDirection[tdir] = integer(tTmpDirection[tdir] + 1)
  [374] pushint8 1
  [376] getlocal 10
  [378] add
  [379] setlocal 10
  [381] endrepeat [340]
  [383] getlocal 0 .............................. <tTmpDirection>
  [385] pushint8 1 .............................. <1>
  [387] pusharglist 2 ........................... <tTmpDirection, 1>
  [389] objcall 9 ............................... <tTmpDirection[1]>
  [391] pushint8 8 .............................. <8>
  [393] eq ...................................... <tTmpDirection[1] = 8>
  [394] jmpifz [402] ............................ if tTmpDirection[1] = 8 then
  [397] pushzero ................................ <0>
  [398] pusharglistnoret 1 ...................... <0>
  [400] extcall 21 .............................. return 0
  [402] jmp [424]
  [405] getparam 0 .............................. <me>
  [407] pushcons 11 ............................. <"No good object:">
  [409] getprop 1269 ............................ <pClass>
  [412] joinpadstr .............................. <"No good object:" && pClass>
  [413] pushsymb 1427 ........................... <#solveMembers>
  [416] pusharglist 3 ........................... <me, "No good object:" && pClass, #solveMembers>
  [418] extcall 161 ............................. <error(me, "No good object:" && pClass, #solveMembers)>
  [420] pusharglistnoret 1 ...................... <error(me, "No good object:" && pClass, #solveMembers)>
  [422] extcall 21 .............................. return error(me, "No good object:" && pClass, #solveMembers)
  [424] jmp [431] ............................... next repeat
  [427] pushint8 1 .............................. <1>
  [429] setlocal 6 .............................. tFound = 1
  [431] endrepeat [122]
  [434] getlocal 2 .............................. <tMemNum>
  [436] pushzero ................................ <0>
  [437] nteq .................................... <tMemNum <> 0>
  [438] jmpifz [865] ............................ if tMemNum <> 0 then
  [441] getprop 15 .............................. <pSprList>
  [443] pusharglist 1 ........................... <pSprList>
  [445] extcall 14 .............................. <count(pSprList)>
  [447] getlocal 4 .............................. <j>
  [449] gteq .................................... <count(pSprList) >= j>
  [450] jmpifz [466] ............................ if count(pSprList) >= j then / else
  [453] getprop 15 .............................. <pSprList>
  [455] getlocal 4 .............................. <j>
  [457] pusharglist 2 ........................... <pSprList, j>
  [459] objcall 9 ............................... <pSprList[j]>
  [461] setlocal 1 .............................. tSpr = pSprList[j]
  [463] jmp [537]
  [466] getparam 0 .............................. <me>
  [468] pusharglist 1 ........................... <me>
  [470] objcall 156 ............................. <me.getID()>
  [472] pusharglist 1 ........................... <me.getID()>
  [474] extcall 358 ............................. <reserveSprite(me.getID())>
  [477] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [479] extcall 182 ............................. <sprite(reserveSprite(me.getID()))>
  [481] setlocal 1 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [483] getprop 15 .............................. <pSprList>
  [485] getlocal 1 .............................. <tSpr>
  [487] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [489] objcall 186 ............................. pSprList.add(tSpr)
  [491] getlocal 1 .............................. <tSpr>
  [493] getobjprop 18 ........................... <tSpr.spriteNum>
  [495] getparam 0 .............................. <me>
  [497] pusharglist 1 ........................... <me>
  [499] objcall 156 ............................. <me.getID()>
  [501] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [503] extcall 363 ............................. setEventBroker(tSpr.spriteNum, me.getID())
  [506] pushsymb 949 ............................ <#room>
  [509] pusharglist 1 ........................... <#room>
  [511] extcall 260 ............................. <getThread(#room)>
  [514] pusharglist 1 ........................... <getThread(#room)>
  [516] objcall 597 ............................. <getThread(#room).getInterface()>
  [519] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [521] objcall 156 ............................. <getThread(#room).getInterface().getID()>
  [523] setlocal 11 ............................. tTargetID = getThread(#room).getInterface().getID()
  [525] getlocal 1 .............................. <tSpr>
  [527] pushsymb 113 ............................ <#eventProcPassiveObj>
  [529] getlocal 11 ............................. <tTargetID>
  [531] pushsymb 180 ............................ <#mouseDown>
  [533] pusharglistnoret 4 ...................... <tSpr, #eventProcPassiveObj, tTargetID, #mouseDown>
  [535] objcall 179 ............................. tSpr.registerProcedure(#eventProcPassiveObj, tTargetID, #mouseDown)
  [537] getprop 34 .............................. <pDirection>
  [539] pusharglist 1 ........................... <pDirection>
  [541] extcall 10 .............................. <voidp(pDirection)>
  [543] not ..................................... <not voidp(pDirection)>
  [544] jmpifz [617] ............................ if not voidp(pDirection) then / else
  [547] getprop 34 .............................. <pDirection>
  [549] pusharglist 1 ........................... <pDirection>
  [551] extcall 14 .............................. <count(pDirection)>
  [553] getlocal 4 .............................. <j>
  [555] gteq .................................... <count(pDirection) >= j>
  [556] jmpifz [590] ............................ if count(pDirection) >= j then / else
  [559] getprop 1011 ............................ <pLoczList>
  [562] getparam 0 .............................. <me>
  [564] getlocal 3 .............................. <i>
  [566] pusharglist 1 ........................... <i>
  [568] extcall 19 .............................. <numToChar(i)>
  [570] getprop 34 .............................. <pDirection>
  [572] getlocal 4 .............................. <j>
  [574] pusharglist 2 ........................... <pDirection, j>
  [576] objcall 9 ............................... <pDirection[j]>
  [578] pusharglist 3 ........................... <me, numToChar(i), pDirection[j]>
  [580] objcall 1425 ............................ <me.solveLocZ(numToChar(i), pDirection[j])>
  [583] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), pDirection[j])>
  [585] objcall 186 ............................. pLoczList.add(me.solveLocZ(numToChar(i), pDirection[j]))
  [587] jmp [614]
  [590] getprop 1011 ............................ <pLoczList>
  [593] getparam 0 .............................. <me>
  [595] getlocal 3 .............................. <i>
  [597] pusharglist 1 ........................... <i>
  [599] extcall 19 .............................. <numToChar(i)>
  [601] pusharglist 0 ........................... <>
  [603] extcall 159 ............................. <VOID>
  [605] pusharglist 3 ........................... <me, numToChar(i), VOID>
  [607] objcall 1425 ............................ <me.solveLocZ(numToChar(i), VOID)>
  [610] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), VOID)>
  [612] objcall 186 ............................. pLoczList.add(me.solveLocZ(numToChar(i), VOID))
  [614] jmp [641]
  [617] getprop 1011 ............................ <pLoczList>
  [620] getparam 0 .............................. <me>
  [622] getlocal 3 .............................. <i>
  [624] pusharglist 1 ........................... <i>
  [626] extcall 19 .............................. <numToChar(i)>
  [628] pusharglist 0 ........................... <>
  [630] extcall 159 ............................. <VOID>
  [632] pusharglist 3 ........................... <me, numToChar(i), VOID>
  [634] objcall 1425 ............................ <me.solveLocZ(numToChar(i), VOID)>
  [637] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), VOID)>
  [639] objcall 186 ............................. pLoczList.add(me.solveLocZ(numToChar(i), VOID))
  [641] getlocal 1 .............................. <tSpr>
  [643] pusharglist 1 ........................... <tSpr>
  [645] extcall 10 .............................. <voidp(tSpr)>
  [647] not ..................................... <not voidp(tSpr)>
  [648] getlocal 1 .............................. <tSpr>
  [650] pushzero ................................ <0>
  [651] pusharglist 1 ........................... <0>
  [653] extcall 182 ............................. <sprite(0)>
  [655] nteq .................................... <tSpr <> sprite(0)>
  [656] and ..................................... <not voidp(tSpr) and (tSpr <> sprite(0))>
  [657] jmpifz [850] ............................ if not voidp(tSpr) and (tSpr <> sprite(0)) then / else
  [660] getlocal 2 .............................. <tMemNum>
  [662] pushint8 1 .............................. <1>
  [664] lt ...................................... <tMemNum < 1>
  [665] jmpifz [692] ............................ if tMemNum < 1 then
  [668] getlocal 2 .............................. <tMemNum>
  [670] pusharglist 1 ........................... <tMemNum>
  [672] extcall 36 .............................. <abs(tMemNum)>
  [674] setlocal 2 .............................. tMemNum = abs(tMemNum)
  [676] getlocal 1 .............................. <tSpr>
  [678] pushint16 180 ........................... <180>
  [681] setobjprop 1021 ......................... tSpr.rotation = 180
  [684] getlocal 1 .............................. <tSpr>
  [686] pushint16 180 ........................... <180>
  [689] setobjprop 1022 ......................... tSpr.skew = 180
  [692] getlocal 1 .............................. <tSpr>
  [694] getlocal 2 .............................. <tMemNum>
  [696] setobjprop 1052 ......................... tSpr.castNum = tMemNum
  [699] getlocal 1 .............................. <tSpr>
  [701] getlocal 2 .............................. <tMemNum>
  [703] pusharglist 1 ........................... <tMemNum>
  [705] extcall 30 .............................. <member(tMemNum)>
  [707] getobjprop 252 .......................... <member(tMemNum).width>
  [709] setobjprop 252 .......................... tSpr.width = member(tMemNum).width
  [711] getlocal 1 .............................. <tSpr>
  [713] getlocal 2 .............................. <tMemNum>
  [715] pusharglist 1 ........................... <tMemNum>
  [717] extcall 30 .............................. <member(tMemNum)>
  [719] getobjprop 291 .......................... <member(tMemNum).height>
  [722] setobjprop 291 .......................... tSpr.height = member(tMemNum).height
  [725] getlocal 1 .............................. <tSpr>
  [727] getparam 0 .............................. <me>
  [729] getlocal 3 .............................. <i>
  [731] pusharglist 1 ........................... <i>
  [733] extcall 19 .............................. <numToChar(i)>
  [735] pusharglist 2 ........................... <me, numToChar(i)>
  [737] objcall 1423 ............................ <me.solveInk(numToChar(i))>
  [740] setobjprop 419 .......................... tSpr.ink = me.solveInk(numToChar(i))
  [743] getlocal 1 .............................. <tSpr>
  [745] getparam 0 .............................. <me>
  [747] getlocal 3 .............................. <i>
  [749] pusharglist 1 ........................... <i>
  [751] extcall 19 .............................. <numToChar(i)>
  [753] pusharglist 2 ........................... <me, numToChar(i)>
  [755] objcall 1424 ............................ <me.solveBlend(numToChar(i))>
  [758] setobjprop 362 .......................... tSpr.blend = me.solveBlend(numToChar(i))
  [761] getlocal 4 .............................. <j>
  [763] getprop 1428 ............................ <pPartColors>
  [766] getobjprop 14 ........................... <pPartColors.count>
  [768] lteq .................................... <j <= pPartColors.count>
  [769] jmpifz [847] ............................ if j <= pPartColors.count then
  [772] getprop 1428 ............................ <pPartColors>
  [775] getlocal 4 .............................. <j>
  [777] pusharglist 2 ........................... <pPartColors, j>
  [779] objcall 9 ............................... <pPartColors[j]>
  [781] pusharglist 1 ........................... <pPartColors[j]>
  [783] extcall 453 ............................. <string(pPartColors[j])>
  [786] pushsymb 450 ............................ <#char>
  [789] pushint8 1 .............................. <1>
  [791] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [793] objcall 33 .............................. <string(pPartColors[j]).char[1]>
  [795] pushcons 12 ............................. <"#">
  [797] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [798] jmpifz [823] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [801] getlocal 1 .............................. <tSpr>
  [803] getprop 1428 ............................ <pPartColors>
  [806] getlocal 4 .............................. <j>
  [808] pusharglist 2 ........................... <pPartColors, j>
  [810] objcall 9 ............................... <pPartColors[j]>
  [812] pusharglist 1 ........................... <pPartColors[j]>
  [814] extcall 312 ............................. <rgb(pPartColors[j])>
  [817] setobjprop 311 .......................... tSpr.bgColor = rgb(pPartColors[j])
  [820] jmp [847]
  [823] getlocal 1 .............................. <tSpr>
  [825] getprop 1428 ............................ <pPartColors>
  [828] getlocal 4 .............................. <j>
  [830] pusharglist 2 ........................... <pPartColors, j>
  [832] objcall 9 ............................... <pPartColors[j]>
  [834] pusharglist 1 ........................... <pPartColors[j]>
  [836] extcall 451 ............................. <integer(pPartColors[j])>
  [839] pusharglist 1 ........................... <integer(pPartColors[j])>
  [841] extcall 1067 ............................ <paletteIndex(integer(pPartColors[j]))>
  [844] setobjprop 311 .......................... tSpr.bgColor = paletteIndex(integer(pPartColors[j]))
  [847] jmp [865]
  [850] getparam 0 .............................. <me>
  [852] pushcons 13 ............................. <"Out of sprites!!!">
  [854] pushsymb 1427 ........................... <#solveMembers>
  [857] pusharglist 3 ........................... <me, "Out of sprites!!!", #solveMembers>
  [859] extcall 161 ............................. <error(me, "Out of sprites!!!", #solveMembers)>
  [861] pusharglistnoret 1 ...................... <error(me, "Out of sprites!!!", #solveMembers)>
  [863] extcall 21 .............................. return error(me, "Out of sprites!!!", #solveMembers)
  [865] getlocal 3 .............................. <i>
  [867] pushint8 1 .............................. <1>
  [869] add ..................................... <i + 1>
  [870] setlocal 3 .............................. i = i + 1
  [872] getlocal 4 .............................. <j>
  [874] pushint8 1 .............................. <1>
  [876] add ..................................... <j + 1>
  [877] setlocal 4 .............................. j = j + 1
  [879] endrepeat [100]
  [882] getprop 1269 ............................ <pClass>
  [885] pushcons 14 ............................. <"_sd">
  [887] joinstr ................................. <pClass & "_sd">
  [888] setlocal 12 ............................. tShadowName = pClass & "_sd"
  [890] getprop 34 .............................. <pDirection>
  [892] pusharglist 1 ........................... <pDirection>
  [894] extcall 288 ............................. <listp(pDirection)>
  [897] jmpifz [916] ............................ if listp(pDirection) then
  [900] getlocal 12 ............................. <tShadowName>
  [902] pushcons 8 .............................. <"_">
  [904] joinstr ................................. <tShadowName & "_">
  [905] getprop 34 .............................. <pDirection>
  [907] pushint8 1 .............................. <1>
  [909] pusharglist 2 ........................... <pDirection, 1>
  [911] objcall 9 ............................... <pDirection[1]>
  [913] joinstr ................................. <tShadowName & "_" & pDirection[1]>
  [914] setlocal 12 ............................. tShadowName = tShadowName & "_" & pDirection[1]
  [916] getlocal 12 ............................. <tShadowName>
  [918] pusharglist 1 ........................... <tShadowName>
  [920] extcall 37 .............................. <getmemnum(tShadowName)>
  [922] setlocal 13 ............................. tShadowNum = getmemnum(tShadowName)
  [924] getlocal 13 ............................. <tShadowNum>
  [926] not ..................................... <not tShadowNum>
  [927] getlocal 0 .............................. <tTmpDirection>
  [929] pusharglist 1 ........................... <tTmpDirection>
  [931] extcall 288 ............................. <listp(tTmpDirection)>
  [934] and ..................................... <not tShadowNum and listp(tTmpDirection)>
  [935] jmpifz [950] ............................ if not tShadowNum and listp(tTmpDirection) then
  [938] getprop 1269 ............................ <pClass>
  [941] pushcons 14 ............................. <"_sd">
  [943] joinstr ................................. <pClass & "_sd">
  [944] pusharglist 1 ........................... <pClass & "_sd">
  [946] extcall 37 .............................. <getmemnum(pClass & "_sd")>
  [948] setlocal 13 ............................. tShadowNum = getmemnum(pClass & "_sd")
  [950] getlocal 13 ............................. <tShadowNum>
  [952] pushzero ................................ <0>
  [953] nteq .................................... <tShadowNum <> 0>
  [954] jmpifz [1115] ........................... if tShadowNum <> 0 then
  [957] getparam 0 .............................. <me>
  [959] pusharglist 1 ........................... <me>
  [961] objcall 156 ............................. <me.getID()>
  [963] pusharglist 1 ........................... <me.getID()>
  [965] extcall 358 ............................. <reserveSprite(me.getID())>
  [968] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [970] extcall 182 ............................. <sprite(reserveSprite(me.getID()))>
  [972] setlocal 1 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [974] getprop 15 .............................. <pSprList>
  [976] getlocal 1 .............................. <tSpr>
  [978] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [980] objcall 186 ............................. pSprList.add(tSpr)
  [982] getprop 1011 ............................ <pLoczList>
  [985] pushint16 4000 .......................... <4000>
  [988] inv ..................................... <-4000>
  [989] pusharglistnoret 2 ...................... <pLoczList, -4000>
  [991] objcall 186 ............................. pLoczList.add(-4000)
  [993] getlocal 13 ............................. <tShadowNum>
  [995] pushzero ................................ <0>
  [996] lt ...................................... <tShadowNum < 0>
  [997] jmpifz [1036] ........................... if tShadowNum < 0 then
  [1000] getlocal 13 ............................ <tShadowNum>
  [1002] pusharglist 1 .......................... <tShadowNum>
  [1004] extcall 36 ............................. <abs(tShadowNum)>
  [1006] setlocal 13 ............................ tShadowNum = abs(tShadowNum)
  [1008] getlocal 1 ............................. <tSpr>
  [1010] pushint16 180 .......................... <180>
  [1013] setobjprop 1021 ........................ tSpr.rotation = 180
  [1016] getlocal 1 ............................. <tSpr>
  [1018] pushint16 180 .......................... <180>
  [1021] setobjprop 1022 ........................ tSpr.skew = 180
  [1024] getlocal 1 ............................. <tSpr>
  [1026] getlocal 1 ............................. <tSpr>
  [1028] getobjprop 255 ......................... <tSpr.locH>
  [1030] getprop 977 ............................ <pXFactor>
  [1033] add .................................... <tSpr.locH + pXFactor>
  [1034] setobjprop 255 ......................... tSpr.locH = tSpr.locH + pXFactor
  [1036] getlocal 1 ............................. <tSpr>
  [1038] getlocal 13 ............................ <tShadowNum>
  [1040] setobjprop 1052 ........................ tSpr.castNum = tShadowNum
  [1043] getlocal 1 ............................. <tSpr>
  [1045] getlocal 13 ............................ <tShadowNum>
  [1047] pusharglist 1 .......................... <tShadowNum>
  [1049] extcall 30 ............................. <member(tShadowNum)>
  [1051] getobjprop 252 ......................... <member(tShadowNum).width>
  [1053] setobjprop 252 ......................... tSpr.width = member(tShadowNum).width
  [1055] getlocal 1 ............................. <tSpr>
  [1057] getlocal 13 ............................ <tShadowNum>
  [1059] pusharglist 1 .......................... <tShadowNum>
  [1061] extcall 30 ............................. <member(tShadowNum)>
  [1063] getobjprop 291 ......................... <member(tShadowNum).height>
  [1066] setobjprop 291 ......................... tSpr.height = member(tShadowNum).height
  [1069] getlocal 1 ............................. <tSpr>
  [1071] getparam 0 ............................. <me>
  [1073] pushcons 15 ............................ <"sd">
  [1075] pusharglist 2 .......................... <me, "sd">
  [1077] objcall 1423 ........................... <me.solveInk("sd")>
  [1080] setobjprop 419 ......................... tSpr.ink = me.solveInk("sd")
  [1083] getlocal 1 ............................. <tSpr>
  [1085] getparam 0 ............................. <me>
  [1087] pushcons 15 ............................ <"sd">
  [1089] pusharglist 2 .......................... <me, "sd">
  [1091] objcall 1424 ........................... <me.solveBlend("sd")>
  [1094] setobjprop 362 ......................... tSpr.blend = me.solveBlend("sd")
  [1097] getlocal 1 ............................. <tSpr>
  [1099] getobjprop 362 ......................... <tSpr.blend>
  [1102] pushint8 100 ........................... <100>
  [1104] eq ..................................... <tSpr.blend = 100>
  [1105] jmpifz [1115] .......................... if tSpr.blend = 100 then
  [1108] getlocal 1 ............................. <tSpr>
  [1110] pushint8 20 ............................ <20>
  [1112] setobjprop 362 ......................... tSpr.blend = 20
  [1115] getprop 15 ............................. <pSprList>
  [1117] getobjprop 14 .......................... <pSprList.count>
  [1119] pushzero ............................... <0>
  [1120] gt ..................................... <pSprList.count > 0>
  [1121] jmpifz [1133] .......................... if pSprList.count > 0 then / else
  [1124] pushint8 1 ............................. <1>
  [1126] pusharglistnoret 1 ..................... <1>
  [1128] extcall 21 ............................. return 1
  [1130] jmp [1152]
  [1133] getparam 0 ............................. <me>
  [1135] pushcons 16 ............................ <"Couldn't define members:">
  [1137] getprop 1269 ........................... <pClass>
  [1140] joinpadstr ............................. <"Couldn't define members:" && pClass>
  [1141] pushsymb 1427 .......................... <#solveMembers>
  [1144] pusharglist 3 .......................... <me, "Couldn't define members:" && pClass, #solveMembers>
  [1146] extcall 161 ............................ <error(me, "Couldn't define members:" && pClass, #solveMembers)>
  [1148] pusharglistnoret 1 ..................... <error(me, "Couldn't define members:" && pClass, #solveMembers)>
  [1150] extcall 21 ............................. return error(me, "Couldn't define members:" && pClass, #solveMembers)
  [1152] ret
end

on updateLocation me
  [  0] pushsymb 949 ............................ <#room>
  [  3] pusharglist 1 ........................... <#room>
  [  5] extcall 260 ............................. <getThread(#room)>
  [  8] pusharglist 1 ........................... <getThread(#room)>
  [ 10] objcall 597 ............................. <getThread(#room).getInterface()>
  [ 13] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 15] objcall 69 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 17] getprop 494 ............................. <pLocX>
  [ 20] getprop 496 ............................. <pLocY>
  [ 23] getprop 498 ............................. <pLocH>
  [ 26] pusharglist 4 ........................... <getThread(#room).getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [ 28] objcall 967 ............................. <getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 31] setlocal 0 .............................. tScreenLocs = getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 33] pushzero ................................ <0>
  [ 34] setlocal 1 .............................. i = 0
  [ 36] getprop 15 .............................. <pSprList>
  [ 38] peek 0
  [ 40] pusharglist 1
  [ 42] extcall 14
  [ 44] pushint8 1
  [ 46] peek 0
  [ 48] peek 2
  [ 50] lteq
  [ 51] jmpifz [200] ............................ repeat with tSpr in pSprList
  [ 54] peek 2
  [ 56] peek 1
  [ 58] pusharglist 2
  [ 60] extcall 9
  [ 62] setlocal 2
  [ 64] getlocal 1 .............................. <i>
  [ 66] pushint8 1 .............................. <1>
  [ 68] add ..................................... <i + 1>
  [ 69] setlocal 1 .............................. i = i + 1
  [ 71] getlocal 2 .............................. <tSpr>
  [ 73] getlocal 0 .............................. <tScreenLocs>
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 79] objcall 9 ............................... <tScreenLocs[1]>
  [ 81] setobjprop 255 .......................... tSpr.locH = tScreenLocs[1]
  [ 83] getlocal 2 .............................. <tSpr>
  [ 85] getlocal 0 .............................. <tScreenLocs>
  [ 87] pushint8 2 .............................. <2>
  [ 89] pusharglist 2 ........................... <tScreenLocs, 2>
  [ 91] objcall 9 ............................... <tScreenLocs[2]>
  [ 93] setobjprop 500 .......................... tSpr.locV = tScreenLocs[2]
  [ 96] getlocal 2 .............................. <tSpr>
  [ 98] getobjprop 1021 ......................... <tSpr.rotation>
  [101] pushint16 180 ........................... <180>
  [104] eq ...................................... <tSpr.rotation = 180>
  [105] jmpifz [120] ............................ if tSpr.rotation = 180 then
  [108] getlocal 2 .............................. <tSpr>
  [110] getlocal 2 .............................. <tSpr>
  [112] getobjprop 255 .......................... <tSpr.locH>
  [114] getprop 977 ............................. <pXFactor>
  [117] add ..................................... <tSpr.locH + pXFactor>
  [118] setobjprop 255 .......................... tSpr.locH = tSpr.locH + pXFactor
  [120] getlocal 1 .............................. <i>
  [122] getprop 1011 ............................ <pLoczList>
  [125] getobjprop 14 ........................... <pLoczList.count>
  [127] lteq .................................... <i <= pLoczList.count>
  [128] jmpifz [145] ............................ if i <= pLoczList.count then / else
  [131] getprop 1011 ............................ <pLoczList>
  [134] getlocal 1 .............................. <i>
  [136] pusharglist 2 ........................... <pLoczList, i>
  [138] objcall 9 ............................... <pLoczList[i]>
  [140] setlocal 3 .............................. tZ = pLoczList[i]
  [142] jmp [148]
  [145] pushzero ................................ <0>
  [146] setlocal 3 .............................. tZ = 0
  [148] getprop 1257 ............................ <pCorrectLocZ>
  [151] jmpifz [180] ............................ if pCorrectLocZ then
  [154] getlocal 2 .............................. <tSpr>
  [156] getlocal 0 .............................. <tScreenLocs>
  [158] pushint8 3 .............................. <3>
  [160] pusharglist 2 ........................... <tScreenLocs, 3>
  [162] objcall 9 ............................... <tScreenLocs[3]>
  [164] getprop 498 ............................. <pLocH>
  [167] pushint16 1000 .......................... <1000>
  [170] mul ..................................... <pLocH * 1000>
  [171] add ..................................... <tScreenLocs[3] + (pLocH * 1000)>
  [172] getlocal 3 .............................. <tZ>
  [174] add ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ>
  [175] setobjprop 168 .......................... tSpr.locZ = tScreenLocs[3] + (pLocH * 1000) + tZ
  [177] jmp [195] ............................... next repeat
  [180] getlocal 2 .............................. <tSpr>
  [182] getlocal 0 .............................. <tScreenLocs>
  [184] pushint8 3 .............................. <3>
  [186] pusharglist 2 ........................... <tScreenLocs, 3>
  [188] objcall 9 ............................... <tScreenLocs[3]>
  [190] getlocal 3 .............................. <tZ>
  [192] add ..................................... <tScreenLocs[3] + tZ>
  [193] setobjprop 168 .......................... tSpr.locZ = tScreenLocs[3] + tZ
  [195] pushint8 1
  [197] add
  [198] endrepeat [ 46]
  [200] pop 3
  [202] ret
end

on show me
  [  0] getprop 15 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 14
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 39] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 9
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] pushint8 1 .............................. <1>
  [ 32] setobjprop 251 .......................... tSpr.visible = 1
  [ 34] pushint8 1
  [ 36] add
  [ 37] endrepeat [ 10]
  [ 39] pop 3
  [ 41] ret
end

on hide me
  [  0] getprop 15 .............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 14
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 38] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 9
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] pushzero ................................ <0>
  [ 31] setobjprop 251 .......................... tSpr.visible = 0
  [ 33] pushint8 1
  [ 35] add
  [ 36] endrepeat [ 10]
  [ 38] pop 3
  [ 40] ret
end
