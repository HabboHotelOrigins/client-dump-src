property pActive, pValue

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1045 ............................ pActive = 1
  [  5] getparam 1 .............................. <tdata>
  [  7] pushsymb 880 ............................ <#stuffdata>
  [ 10] pusharglist 2 ........................... <tdata, #stuffdata>
  [ 12] objcall 34 .............................. <tdata[#stuffdata]>
  [ 14] pusharglist 1 ........................... <tdata[#stuffdata]>
  [ 16] extcall 102 ............................. <integer(tdata[#stuffdata])>
  [ 18] setprop 1739 ............................ pValue = integer(tdata[#stuffdata])
  [ 21] getprop 1739 ............................ <pValue>
  [ 24] pusharglist 1 ........................... <pValue>
  [ 26] extcall 432 ............................. <integerp(pValue)>
  [ 29] not ..................................... <not integerp(pValue)>
  [ 30] jmpifz [ 38] ............................ if not integerp(pValue) then
  [ 33] pushint8 1 .............................. <1>
  [ 35] setprop 1739 ............................ pValue = 1
  [ 38] getprop 1739 ............................ <pValue>
  [ 41] pushint8 6 .............................. <6>
  [ 43] gt ...................................... <pValue > 6>
  [ 44] jmpifz [ 52] ............................ if pValue > 6 then
  [ 47] pushint8 6 .............................. <6>
  [ 49] setprop 1739 ............................ pValue = 6
  [ 52] getprop 1739 ............................ <pValue>
  [ 55] pushzero ................................ <0>
  [ 56] lt ...................................... <pValue < 0>
  [ 57] jmpifz [ 64] ............................ if pValue < 0 then
  [ 60] pushzero ................................ <0>
  [ 61] setprop 1739 ............................ pValue = 0
  [ 64] pushint8 1 .............................. <1>
  [ 66] pusharglistnoret 1 ...................... <1>
  [ 68] extcall 31 .............................. return 1
  [ 70] ret
end

on select me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 18 ............................. <#pSprList>
  [  4] pusharglist 2 ........................... <me, #pSprList>
  [  6] objcall 33 .............................. <me.pSprList.count>
  [  8] pushint8 2 .............................. <2>
  [ 10] lt ...................................... <me.pSprList.count < 2>
  [ 11] jmpifz [ 19] ............................ if me.pSprList.count < 2 then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 31 .............................. return 0
  [ 19] getparam 0 .............................. <me>
  [ 21] pushsymb 18 ............................. <#pSprList>
  [ 23] pushint8 2 .............................. <2>
  [ 25] pusharglist 3 ........................... <me, #pSprList, 2>
  [ 27] objcall 68 .............................. <me.pSprList[2]>
  [ 29] pusharglist 1 ........................... <me.pSprList[2]>
  [ 31] extcall 486 ............................. <rollover(me.pSprList[2])>
  [ 34] jmpifz [295] ............................ if rollover(me.pSprList[2]) then / else
  [ 37] pusharglist 0 ........................... <>
  [ 39] thebuiltin 1630 ......................... <the doubleClick>
  [ 42] jmpifz [292] ............................ if the doubleClick then
  [ 45] pushsymb 52 ............................. <#room>
  [ 47] pusharglist 1 ........................... <#room>
  [ 49] extcall 51 .............................. <getThread(#room)>
  [ 51] pusharglist 1 ........................... <getThread(#room)>
  [ 53] objcall 115 ............................. <getThread(#room).getComponent()>
  [ 55] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 57] objcall 328 ............................. <getThread(#room).getComponent().getOwnUser()>
  [ 60] setlocal 0 .............................. tUserObj = getThread(#room).getComponent().getOwnUser()
  [ 62] getlocal 0 .............................. <tUserObj>
  [ 64] not ..................................... <not tUserObj>
  [ 65] jmpifz [ 74] ............................ if not tUserObj then
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglistnoret 1 ...................... <1>
  [ 72] extcall 31 .............................. return 1
  [ 74] getlocal 0 .............................. <tUserObj>
  [ 76] getobjprop 19 ........................... <tUserObj.pLocX>
  [ 78] getparam 0 .............................. <me>
  [ 80] getobjprop 19 ........................... <me.pLocX>
  [ 82] sub ..................................... <tUserObj.pLocX - me.pLocX>
  [ 83] pusharglist 1 ........................... <tUserObj.pLocX - me.pLocX>
  [ 85] extcall 77 .............................. <abs(tUserObj.pLocX - me.pLocX)>
  [ 87] pushint8 1 .............................. <1>
  [ 89] gt ...................................... <abs(tUserObj.pLocX - me.pLocX) > 1>
  [ 90] getlocal 0 .............................. <tUserObj>
  [ 92] getobjprop 20 ........................... <tUserObj.pLocY>
  [ 94] getparam 0 .............................. <me>
  [ 96] getobjprop 20 ........................... <me.pLocY>
  [ 98] sub ..................................... <tUserObj.pLocY - me.pLocY>
  [ 99] pusharglist 1 ........................... <tUserObj.pLocY - me.pLocY>
  [101] extcall 77 .............................. <abs(tUserObj.pLocY - me.pLocY)>
  [103] pushint8 1 .............................. <1>
  [105] gt ...................................... <abs(tUserObj.pLocY - me.pLocY) > 1>
  [106] or ...................................... <(abs(tUserObj.pLocX - me.pLocX) > 1) or (abs(tUserObj.pLocY - me.pLocY) > 1)>
  [107] jmpifz [258] ............................ if (abs(tUserObj.pLocX - me.pLocX) > 1) or (abs(tUserObj.pLocY - me.pLocY) > 1) then / else
  [110] getparam 0 .............................. <me>
  [112] getobjprop 19 ........................... <me.pLocX>
  [114] pushint8 1 .............................. <1>
  [116] sub ..................................... <me.pLocX - 1>
  [117] setlocal 1
  [119] getlocal 1
  [121] getparam 0 .............................. <me>
  [123] getobjprop 19 ........................... <me.pLocX>
  [125] pushint8 1 .............................. <1>
  [127] add ..................................... <me.pLocX + 1>
  [128] lteq
  [129] jmpifz [255] ............................ repeat with tX = me.pLocX - 1 to me.pLocX + 1
  [132] getparam 0 .............................. <me>
  [134] getobjprop 20 ........................... <me.pLocY>
  [136] pushint8 1 .............................. <1>
  [138] sub ..................................... <me.pLocY - 1>
  [139] setlocal 2
  [141] getlocal 2
  [143] getparam 0 .............................. <me>
  [145] getobjprop 20 ........................... <me.pLocY>
  [147] pushint8 1 .............................. <1>
  [149] add ..................................... <me.pLocY + 1>
  [150] lteq
  [151] jmpifz [246] ............................ repeat with tY = me.pLocY - 1 to me.pLocY + 1
  [154] getlocal 2 .............................. <tY>
  [156] getparam 0 .............................. <me>
  [158] getobjprop 20 ........................... <me.pLocY>
  [160] eq ...................................... <tY = me.pLocY>
  [161] getlocal 1 .............................. <tX>
  [163] getparam 0 .............................. <me>
  [165] getobjprop 19 ........................... <me.pLocX>
  [167] eq ...................................... <tX = me.pLocX>
  [168] or ...................................... <(tY = me.pLocY) or (tX = me.pLocX)>
  [169] jmpifz [237] ............................ if (tY = me.pLocY) or (tX = me.pLocX) then
  [172] pushsymb 52 ............................. <#room>
  [174] pusharglist 1 ........................... <#room>
  [176] extcall 51 .............................. <getThread(#room)>
  [178] pusharglist 1 ........................... <getThread(#room)>
  [180] objcall 53 .............................. <getThread(#room).getInterface()>
  [182] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [184] objcall 54 .............................. <getThread(#room).getInterface().getGeometry()>
  [186] getlocal 1 .............................. <tX>
  [188] getlocal 2 .............................. <tY>
  [190] pusharglist 3 ........................... <getThread(#room).getInterface().getGeometry(), tX, tY>
  [192] objcall 1014 ............................ <getThread(#room).getInterface().getGeometry().emptyTile(tX, tY)>
  [195] jmpifz [237] ............................ if getThread(#room).getInterface().getGeometry().emptyTile(tX, tY) then
  [198] pushsymb 52 ............................. <#room>
  [200] pusharglist 1 ........................... <#room>
  [202] extcall 51 .............................. <getThread(#room)>
  [204] pusharglist 1 ........................... <getThread(#room)>
  [206] objcall 115 ............................. <getThread(#room).getComponent()>
  [208] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [210] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [212] pushcons 0 .............................. <"MOVE">
  [214] pushsymb 526 ............................ <#short>
  [217] getlocal 1 .............................. <tX>
  [219] pushsymb 526 ............................ <#short>
  [222] getlocal 2 .............................. <tY>
  [224] pusharglist 4 ........................... <[#short: tX, #short: tY]>
  [226] pushproplist ............................ <[#short: tX, #short: tY]>
  [227] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#short: tX, #short: tY]>
  [229] objcall 135 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#short: tX, #short: tY])
  [231] pushint8 1 .............................. <1>
  [233] pusharglistnoret 1 ...................... <1>
  [235] extcall 31 .............................. return 1
  [237] pushint8 1
  [239] getlocal 2
  [241] add
  [242] setlocal 2
  [244] endrepeat [141]
  [246] pushint8 1
  [248] getlocal 1
  [250] add
  [251] setlocal 1
  [253] endrepeat [119]
  [255] jmp [292]
  [258] getprop 1045 ............................ <pActive>
  [261] pushzero ................................ <0>
  [262] eq ...................................... <pActive = 0>
  [263] jmpifz [292] ............................ if pActive = 0 then
  [266] pushsymb 52 ............................. <#room>
  [268] pusharglist 1 ........................... <#room>
  [270] extcall 51 .............................. <getThread(#room)>
  [272] pusharglist 1 ........................... <getThread(#room)>
  [274] objcall 115 ............................. <getThread(#room).getComponent()>
  [276] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [278] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [280] pushcons 1 .............................. <"THROW_DICE">
  [282] getparam 0 .............................. <me>
  [284] pusharglist 1 ........................... <me>
  [286] objcall 75 .............................. <me.getID()>
  [288] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "THROW_DICE", me.getID()>
  [290] objcall 135 ............................. getThread(#room).getComponent().getRoomConnection().send("THROW_DICE", me.getID())
  [292] jmp [357]
  [295] getparam 0 .............................. <me>
  [297] pushsymb 18 ............................. <#pSprList>
  [299] pushint8 1 .............................. <1>
  [301] pusharglist 3 ........................... <me, #pSprList, 1>
  [303] objcall 68 .............................. <me.pSprList[1]>
  [305] pusharglist 1 ........................... <me.pSprList[1]>
  [307] extcall 486 ............................. <rollover(me.pSprList[1])>
  [310] pusharglist 0 ........................... <>
  [312] thebuiltin 1630 ......................... <the doubleClick>
  [315] and ..................................... <rollover(me.pSprList[1]) and the doubleClick>
  [316] getprop 1045 ............................ <pActive>
  [319] pushzero ................................ <0>
  [320] eq ...................................... <pActive = 0>
  [321] and ..................................... <rollover(me.pSprList[1]) and the doubleClick and (pActive = 0)>
  [322] jmpifz [357] ............................ if rollover(me.pSprList[1]) and the doubleClick and (pActive = 0) then
  [325] pushsymb 52 ............................. <#room>
  [327] pusharglist 1 ........................... <#room>
  [329] extcall 51 .............................. <getThread(#room)>
  [331] pusharglist 1 ........................... <getThread(#room)>
  [333] objcall 115 ............................. <getThread(#room).getComponent()>
  [335] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [337] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [339] pushcons 2 .............................. <"DICE_OFF">
  [341] getparam 0 .............................. <me>
  [343] pusharglist 1 ........................... <me>
  [345] objcall 75 .............................. <me.getID()>
  [347] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "DICE_OFF", me.getID()>
  [349] objcall 135 ............................. getThread(#room).getComponent().getRoomConnection().send("DICE_OFF", me.getID())
  [351] pushint8 1 .............................. <1>
  [353] pusharglistnoret 1 ...................... <1>
  [355] extcall 31 .............................. return 1
  [357] pushint8 1 .............................. <1>
  [359] pusharglistnoret 1 ...................... <1>
  [361] extcall 31 .............................. return 1
  [363] ret
end

on diceThrown me, tValue
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1045 ............................ pActive = 1
  [  5] getparam 1 .............................. <tValue>
  [  7] pushzero ................................ <0>
  [  8] gt ...................................... <tValue > 0>
  [  9] jmpifz [ 20] ............................ if tValue > 0 then / else
  [ 12] getparam 1 .............................. <tValue>
  [ 14] setprop 1739 ............................ pValue = tValue
  [ 17] jmp [ 25]
  [ 20] getparam 1 .............................. <tValue>
  [ 22] setprop 1739 ............................ pValue = tValue
  [ 25] ret
end

on update me
  [  0] getprop 1045 ............................ <pActive>
  [  3] jmpifz [188] ............................ if pActive then
  [  6] pushcons 3 .............................. <"_">
  [  8] setmovieprop 99 ......................... the itemDelimiter = "_"
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 18 ............................. <#pSprList>
  [ 14] pushint8 2 .............................. <2>
  [ 16] pusharglist 3 ........................... <me, #pSprList, 2>
  [ 18] objcall 101 ............................. <me.pSprList[2]>
  [ 20] getchainedprop 64 ....................... <me.pSprList[2].member>
  [ 22] getobjprop 58 ........................... <me.pSprList[2].member.name>
  [ 24] setlocal 0 .............................. tMemName = me.pSprList[2].member.name
  [ 26] getlocal 0 .............................. <tMemName>
  [ 28] pushsymb 103 ............................ <#item>
  [ 30] pushint8 1 .............................. <1>
  [ 32] getlocal 0 .............................. <tMemName>
  [ 34] pushsymb 103 ............................ <#item>
  [ 36] pusharglist 2 ........................... <tMemName, #item>
  [ 38] objcall 33 .............................. <tMemName.item.count>
  [ 40] pushint8 6 .............................. <6>
  [ 42] sub ..................................... <tMemName.item.count - 6>
  [ 43] pusharglist 4 ........................... <tMemName, #item, 1, tMemName.item.count - 6>
  [ 45] objcall 68 .............................. <tMemName.item[1..tMemName.item.count - 6]>
  [ 47] setlocal 1 .............................. tClass = tMemName.item[1..tMemName.item.count - 6]
  [ 49] getparam 0 .............................. <me>
  [ 51] pushsymb 18 ............................. <#pSprList>
  [ 53] pusharglist 2 ........................... <me, #pSprList>
  [ 55] objcall 33 .............................. <me.pSprList.count>
  [ 57] pushint8 2 .............................. <2>
  [ 59] lt ...................................... <me.pSprList.count < 2>
  [ 60] jmpifz [ 67] ............................ if me.pSprList.count < 2 then
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 31 .............................. return 
  [ 67] getparam 0 .............................. <me>
  [ 69] pushsymb 18 ............................. <#pSprList>
  [ 71] pushint8 2 .............................. <2>
  [ 73] pusharglist 3 ........................... <me, #pSprList, 2>
  [ 75] objcall 68 .............................. <me.pSprList[2]>
  [ 77] setlocal 2 .............................. tsprite = me.pSprList[2]
  [ 79] getprop 1739 ............................ <pValue>
  [ 82] pushzero ................................ <0>
  [ 83] lt ...................................... <pValue < 0>
  [ 84] jmpifz [140] ............................ if pValue < 0 then / else
  [ 87] getlocal 2 .............................. <tsprite>
  [ 89] getobjprop 79 ........................... <tsprite.castNum>
  [ 91] getlocal 1 .............................. <tClass>
  [ 93] pushcons 4 .............................. <"_b_0_1_1_0_7">
  [ 95] joinstr ................................. <tClass & "_b_0_1_1_0_7">
  [ 96] pusharglist 1 ........................... <tClass & "_b_0_1_1_0_7">
  [ 98] extcall 65 .............................. <getmemnum(tClass & "_b_0_1_1_0_7")>
  [100] eq ...................................... <tsprite.castNum = getmemnum(tClass & "_b_0_1_1_0_7")>
  [101] jmpifz [122] ............................ if tsprite.castNum = getmemnum(tClass & "_b_0_1_1_0_7") then / else
  [104] getlocal 1 .............................. <tClass>
  [106] pushcons 5 .............................. <"_b_0_1_1_0_0">
  [108] joinstr ................................. <tClass & "_b_0_1_1_0_0">
  [109] pusharglist 1 ........................... <tClass & "_b_0_1_1_0_0">
  [111] extcall 65 .............................. <getmemnum(tClass & "_b_0_1_1_0_0")>
  [113] pusharglist 1 ........................... <getmemnum(tClass & "_b_0_1_1_0_0")>
  [115] extcall 64 .............................. <member(getmemnum(tClass & "_b_0_1_1_0_0"))>
  [117] setlocal 3 .............................. tmember = member(getmemnum(tClass & "_b_0_1_1_0_0"))
  [119] jmp [137]
  [122] getlocal 1 .............................. <tClass>
  [124] pushcons 4 .............................. <"_b_0_1_1_0_7">
  [126] joinstr ................................. <tClass & "_b_0_1_1_0_7">
  [127] pusharglist 1 ........................... <tClass & "_b_0_1_1_0_7">
  [129] extcall 65 .............................. <getmemnum(tClass & "_b_0_1_1_0_7")>
  [131] pusharglist 1 ........................... <getmemnum(tClass & "_b_0_1_1_0_7")>
  [133] extcall 64 .............................. <member(getmemnum(tClass & "_b_0_1_1_0_7"))>
  [135] setlocal 3 .............................. tmember = member(getmemnum(tClass & "_b_0_1_1_0_7"))
  [137] jmp [163]
  [140] getlocal 1 .............................. <tClass>
  [142] pushcons 6 .............................. <"_b_0_1_1_0_">
  [144] joinstr ................................. <tClass & "_b_0_1_1_0_">
  [145] getprop 1739 ............................ <pValue>
  [148] joinstr ................................. <tClass & "_b_0_1_1_0_" & pValue>
  [149] pusharglist 1 ........................... <tClass & "_b_0_1_1_0_" & pValue>
  [151] extcall 65 .............................. <getmemnum(tClass & "_b_0_1_1_0_" & pValue)>
  [153] pusharglist 1 ........................... <getmemnum(tClass & "_b_0_1_1_0_" & pValue)>
  [155] extcall 64 .............................. <member(getmemnum(tClass & "_b_0_1_1_0_" & pValue))>
  [157] setlocal 3 .............................. tmember = member(getmemnum(tClass & "_b_0_1_1_0_" & pValue))
  [159] pushzero ................................ <0>
  [160] setprop 1045 ............................ pActive = 0
  [163] getlocal 2 .............................. <tsprite>
  [165] getlocal 3 .............................. <tmember>
  [167] getobjprop 1293 ......................... <tmember.number>
  [170] setobjprop 79 ........................... tsprite.castNum = tmember.number
  [172] getlocal 2 .............................. <tsprite>
  [174] getlocal 3 .............................. <tmember>
  [176] getobjprop 80 ........................... <tmember.width>
  [178] setobjprop 80 ........................... tsprite.width = tmember.width
  [180] getlocal 2 .............................. <tsprite>
  [182] getlocal 3 .............................. <tmember>
  [184] getobjprop 81 ........................... <tmember.height>
  [186] setobjprop 81 ........................... tsprite.height = tmember.height
  [188] ret
end
