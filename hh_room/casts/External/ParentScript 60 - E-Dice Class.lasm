property pActive, pValue

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1006 ............................ pActive = 1
  [  5] getparam 1 .............................. <tdata>
  [  7] pushsymb 826 ............................ <#stuffdata>
  [ 10] pusharglist 2 ........................... <tdata, #stuffdata>
  [ 12] objcall 9 ............................... <tdata[#stuffdata]>
  [ 14] pusharglist 1 ........................... <tdata[#stuffdata]>
  [ 16] extcall 451 ............................. <integer(tdata[#stuffdata])>
  [ 19] setprop 1742 ............................ pValue = integer(tdata[#stuffdata])
  [ 22] getprop 1742 ............................ <pValue>
  [ 25] pusharglist 1 ........................... <pValue>
  [ 27] extcall 356 ............................. <integerp(pValue)>
  [ 30] not ..................................... <not integerp(pValue)>
  [ 31] jmpifz [ 39] ............................ if not integerp(pValue) then
  [ 34] pushint8 1 .............................. <1>
  [ 36] setprop 1742 ............................ pValue = 1
  [ 39] getprop 1742 ............................ <pValue>
  [ 42] pushint8 6 .............................. <6>
  [ 44] gt ...................................... <pValue > 6>
  [ 45] jmpifz [ 53] ............................ if pValue > 6 then
  [ 48] pushint8 6 .............................. <6>
  [ 50] setprop 1742 ............................ pValue = 6
  [ 53] getprop 1742 ............................ <pValue>
  [ 56] pushzero ................................ <0>
  [ 57] lt ...................................... <pValue < 0>
  [ 58] jmpifz [ 65] ............................ if pValue < 0 then
  [ 61] pushzero ................................ <0>
  [ 62] setprop 1742 ............................ pValue = 0
  [ 65] pushint8 1 .............................. <1>
  [ 67] pusharglistnoret 1 ...................... <1>
  [ 69] extcall 21 .............................. return 1
  [ 71] ret
end

on select me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 15 ............................. <#pSprList>
  [  4] pusharglist 2 ........................... <me, #pSprList>
  [  6] objcall 14 .............................. <me.pSprList.count>
  [  8] pushint8 2 .............................. <2>
  [ 10] lt ...................................... <me.pSprList.count < 2>
  [ 11] jmpifz [ 19] ............................ if me.pSprList.count < 2 then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 21 .............................. return 0
  [ 19] getparam 0 .............................. <me>
  [ 21] pushsymb 15 ............................. <#pSprList>
  [ 23] pushint8 2 .............................. <2>
  [ 25] pusharglist 3 ........................... <me, #pSprList, 2>
  [ 27] objcall 33 .............................. <me.pSprList[2]>
  [ 29] pusharglist 1 ........................... <me.pSprList[2]>
  [ 31] extcall 417 ............................. <rollover(me.pSprList[2])>
  [ 34] jmpifz [317] ............................ if rollover(me.pSprList[2]) then / else
  [ 37] pusharglist 0 ........................... <>
  [ 39] thebuiltin 1634 ......................... <the doubleClick>
  [ 42] jmpifz [314] ............................ if the doubleClick then
  [ 45] pushsymb 949 ............................ <#room>
  [ 48] pusharglist 1 ........................... <#room>
  [ 50] extcall 260 ............................. <getThread(#room)>
  [ 53] pusharglist 1 ........................... <getThread(#room)>
  [ 55] objcall 207 ............................. <getThread(#room).getComponent()>
  [ 57] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 59] objcall 235 ............................. <getThread(#room).getComponent().getOwnUser()>
  [ 61] setlocal 0 .............................. tUserObj = getThread(#room).getComponent().getOwnUser()
  [ 63] getlocal 0 .............................. <tUserObj>
  [ 65] not ..................................... <not tUserObj>
  [ 66] jmpifz [ 75] ............................ if not tUserObj then
  [ 69] pushint8 1 .............................. <1>
  [ 71] pusharglistnoret 1 ...................... <1>
  [ 73] extcall 21 .............................. return 1
  [ 75] getlocal 0 .............................. <tUserObj>
  [ 77] getobjprop 494 .......................... <tUserObj.pLocX>
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 494 .......................... <me.pLocX>
  [ 85] sub ..................................... <tUserObj.pLocX - me.pLocX>
  [ 86] pusharglist 1 ........................... <tUserObj.pLocX - me.pLocX>
  [ 88] extcall 36 .............................. <abs(tUserObj.pLocX - me.pLocX)>
  [ 90] pushint8 1 .............................. <1>
  [ 92] gt ...................................... <abs(tUserObj.pLocX - me.pLocX) > 1>
  [ 93] getlocal 0 .............................. <tUserObj>
  [ 95] getobjprop 496 .......................... <tUserObj.pLocY>
  [ 98] getparam 0 .............................. <me>
  [100] getobjprop 496 .......................... <me.pLocY>
  [103] sub ..................................... <tUserObj.pLocY - me.pLocY>
  [104] pusharglist 1 ........................... <tUserObj.pLocY - me.pLocY>
  [106] extcall 36 .............................. <abs(tUserObj.pLocY - me.pLocY)>
  [108] pushint8 1 .............................. <1>
  [110] gt ...................................... <abs(tUserObj.pLocY - me.pLocY) > 1>
  [111] or ...................................... <(abs(tUserObj.pLocX - me.pLocX) > 1) or (abs(tUserObj.pLocY - me.pLocY) > 1)>
  [112] jmpifz [276] ............................ if (abs(tUserObj.pLocX - me.pLocX) > 1) or (abs(tUserObj.pLocY - me.pLocY) > 1) then / else
  [115] getparam 0 .............................. <me>
  [117] getobjprop 494 .......................... <me.pLocX>
  [120] pushint8 1 .............................. <1>
  [122] sub ..................................... <me.pLocX - 1>
  [123] setlocal 1
  [125] getlocal 1
  [127] getparam 0 .............................. <me>
  [129] getobjprop 494 .......................... <me.pLocX>
  [132] pushint8 1 .............................. <1>
  [134] add ..................................... <me.pLocX + 1>
  [135] lteq
  [136] jmpifz [273] ............................ repeat with tX = me.pLocX - 1 to me.pLocX + 1
  [139] getparam 0 .............................. <me>
  [141] getobjprop 496 .......................... <me.pLocY>
  [144] pushint8 1 .............................. <1>
  [146] sub ..................................... <me.pLocY - 1>
  [147] setlocal 2
  [149] getlocal 2
  [151] getparam 0 .............................. <me>
  [153] getobjprop 496 .......................... <me.pLocY>
  [156] pushint8 1 .............................. <1>
  [158] add ..................................... <me.pLocY + 1>
  [159] lteq
  [160] jmpifz [264] ............................ repeat with tY = me.pLocY - 1 to me.pLocY + 1
  [163] getlocal 2 .............................. <tY>
  [165] getparam 0 .............................. <me>
  [167] getobjprop 496 .......................... <me.pLocY>
  [170] eq ...................................... <tY = me.pLocY>
  [171] getlocal 1 .............................. <tX>
  [173] getparam 0 .............................. <me>
  [175] getobjprop 494 .......................... <me.pLocX>
  [178] eq ...................................... <tX = me.pLocX>
  [179] or ...................................... <(tY = me.pLocY) or (tX = me.pLocX)>
  [180] jmpifz [255] ............................ if (tY = me.pLocY) or (tX = me.pLocX) then
  [183] pushsymb 949 ............................ <#room>
  [186] pusharglist 1 ........................... <#room>
  [188] extcall 260 ............................. <getThread(#room)>
  [191] pusharglist 1 ........................... <getThread(#room)>
  [193] objcall 597 ............................. <getThread(#room).getInterface()>
  [196] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [198] objcall 69 .............................. <getThread(#room).getInterface().getGeometry()>
  [200] getlocal 1 .............................. <tX>
  [202] getlocal 2 .............................. <tY>
  [204] pusharglist 3 ........................... <getThread(#room).getInterface().getGeometry(), tX, tY>
  [206] objcall 973 ............................. <getThread(#room).getInterface().getGeometry().emptyTile(tX, tY)>
  [209] jmpifz [255] ............................ if getThread(#room).getInterface().getGeometry().emptyTile(tX, tY) then
  [212] pushsymb 949 ............................ <#room>
  [215] pusharglist 1 ........................... <#room>
  [217] extcall 260 ............................. <getThread(#room)>
  [220] pusharglist 1 ........................... <getThread(#room)>
  [222] objcall 207 ............................. <getThread(#room).getComponent()>
  [224] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [226] objcall 395 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [229] pushcons 0 .............................. <"MOVE">
  [231] pushsymb 462 ............................ <#short>
  [234] getlocal 1 .............................. <tX>
  [236] pushsymb 462 ............................ <#short>
  [239] getlocal 2 .............................. <tY>
  [241] pusharglist 4 ........................... <[#short: tX, #short: tY]>
  [243] pushproplist ............................ <[#short: tX, #short: tY]>
  [244] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#short: tX, #short: tY]>
  [246] objcall 396 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#short: tX, #short: tY])
  [249] pushint8 1 .............................. <1>
  [251] pusharglistnoret 1 ...................... <1>
  [253] extcall 21 .............................. return 1
  [255] pushint8 1
  [257] getlocal 2
  [259] add
  [260] setlocal 2
  [262] endrepeat [149]
  [264] pushint8 1
  [266] getlocal 1
  [268] add
  [269] setlocal 1
  [271] endrepeat [125]
  [273] jmp [314]
  [276] getprop 1006 ............................ <pActive>
  [279] pushzero ................................ <0>
  [280] eq ...................................... <pActive = 0>
  [281] jmpifz [314] ............................ if pActive = 0 then
  [284] pushsymb 949 ............................ <#room>
  [287] pusharglist 1 ........................... <#room>
  [289] extcall 260 ............................. <getThread(#room)>
  [292] pusharglist 1 ........................... <getThread(#room)>
  [294] objcall 207 ............................. <getThread(#room).getComponent()>
  [296] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [298] objcall 395 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [301] pushcons 1 .............................. <"THROW_DICE">
  [303] getparam 0 .............................. <me>
  [305] pusharglist 1 ........................... <me>
  [307] objcall 156 ............................. <me.getID()>
  [309] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "THROW_DICE", me.getID()>
  [311] objcall 396 ............................. getThread(#room).getComponent().getRoomConnection().send("THROW_DICE", me.getID())
  [314] jmp [383]
  [317] getparam 0 .............................. <me>
  [319] pushsymb 15 ............................. <#pSprList>
  [321] pushint8 1 .............................. <1>
  [323] pusharglist 3 ........................... <me, #pSprList, 1>
  [325] objcall 33 .............................. <me.pSprList[1]>
  [327] pusharglist 1 ........................... <me.pSprList[1]>
  [329] extcall 417 ............................. <rollover(me.pSprList[1])>
  [332] pusharglist 0 ........................... <>
  [334] thebuiltin 1634 ......................... <the doubleClick>
  [337] and ..................................... <rollover(me.pSprList[1]) and the doubleClick>
  [338] getprop 1006 ............................ <pActive>
  [341] pushzero ................................ <0>
  [342] eq ...................................... <pActive = 0>
  [343] and ..................................... <rollover(me.pSprList[1]) and the doubleClick and (pActive = 0)>
  [344] jmpifz [383] ............................ if rollover(me.pSprList[1]) and the doubleClick and (pActive = 0) then
  [347] pushsymb 949 ............................ <#room>
  [350] pusharglist 1 ........................... <#room>
  [352] extcall 260 ............................. <getThread(#room)>
  [355] pusharglist 1 ........................... <getThread(#room)>
  [357] objcall 207 ............................. <getThread(#room).getComponent()>
  [359] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [361] objcall 395 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [364] pushcons 2 .............................. <"DICE_OFF">
  [366] getparam 0 .............................. <me>
  [368] pusharglist 1 ........................... <me>
  [370] objcall 156 ............................. <me.getID()>
  [372] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "DICE_OFF", me.getID()>
  [374] objcall 396 ............................. getThread(#room).getComponent().getRoomConnection().send("DICE_OFF", me.getID())
  [377] pushint8 1 .............................. <1>
  [379] pusharglistnoret 1 ...................... <1>
  [381] extcall 21 .............................. return 1
  [383] pushint8 1 .............................. <1>
  [385] pusharglistnoret 1 ...................... <1>
  [387] extcall 21 .............................. return 1
  [389] ret
end

on diceThrown me, tValue
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1006 ............................ pActive = 1
  [  5] getparam 1 .............................. <tValue>
  [  7] pushzero ................................ <0>
  [  8] gt ...................................... <tValue > 0>
  [  9] jmpifz [ 20] ............................ if tValue > 0 then / else
  [ 12] getparam 1 .............................. <tValue>
  [ 14] setprop 1742 ............................ pValue = tValue
  [ 17] jmp [ 25]
  [ 20] getparam 1 .............................. <tValue>
  [ 22] setprop 1742 ............................ pValue = tValue
  [ 25] ret
end

on update me
  [  0] getprop 1006 ............................ <pActive>
  [  3] jmpifz [192] ............................ if pActive then
  [  6] pushcons 3 .............................. <"_">
  [  8] setmovieprop 29 ......................... the itemDelimiter = "_"
  [ 10] getparam 0 .............................. <me>
  [ 12] pushsymb 15 ............................. <#pSprList>
  [ 14] pushint8 2 .............................. <2>
  [ 16] pusharglist 3 ........................... <me, #pSprList, 2>
  [ 18] objcall 17 .............................. <me.pSprList[2]>
  [ 20] getchainedprop 30 ....................... <me.pSprList[2].member>
  [ 22] getobjprop 31 ........................... <me.pSprList[2].member.name>
  [ 24] setlocal 0 .............................. tMemName = me.pSprList[2].member.name
  [ 26] getlocal 0 .............................. <tMemName>
  [ 28] pushsymb 32 ............................. <#item>
  [ 30] pushint8 1 .............................. <1>
  [ 32] getlocal 0 .............................. <tMemName>
  [ 34] pushsymb 32 ............................. <#item>
  [ 36] pusharglist 2 ........................... <tMemName, #item>
  [ 38] objcall 14 .............................. <tMemName.item.count>
  [ 40] pushint8 6 .............................. <6>
  [ 42] sub ..................................... <tMemName.item.count - 6>
  [ 43] pusharglist 4 ........................... <tMemName, #item, 1, tMemName.item.count - 6>
  [ 45] objcall 33 .............................. <tMemName.item[1..tMemName.item.count - 6]>
  [ 47] setlocal 1 .............................. tClass = tMemName.item[1..tMemName.item.count - 6]
  [ 49] getparam 0 .............................. <me>
  [ 51] pushsymb 15 ............................. <#pSprList>
  [ 53] pusharglist 2 ........................... <me, #pSprList>
  [ 55] objcall 14 .............................. <me.pSprList.count>
  [ 57] pushint8 2 .............................. <2>
  [ 59] lt ...................................... <me.pSprList.count < 2>
  [ 60] jmpifz [ 67] ............................ if me.pSprList.count < 2 then
  [ 63] pusharglistnoret 0 ...................... <>
  [ 65] extcall 21 .............................. return 
  [ 67] getparam 0 .............................. <me>
  [ 69] pushsymb 15 ............................. <#pSprList>
  [ 71] pushint8 2 .............................. <2>
  [ 73] pusharglist 3 ........................... <me, #pSprList, 2>
  [ 75] objcall 33 .............................. <me.pSprList[2]>
  [ 77] setlocal 2 .............................. tsprite = me.pSprList[2]
  [ 79] getprop 1742 ............................ <pValue>
  [ 82] pushzero ................................ <0>
  [ 83] lt ...................................... <pValue < 0>
  [ 84] jmpifz [141] ............................ if pValue < 0 then / else
  [ 87] getlocal 2 .............................. <tsprite>
  [ 89] getobjprop 1052 ......................... <tsprite.castNum>
  [ 92] getlocal 1 .............................. <tClass>
  [ 94] pushcons 4 .............................. <"_b_0_1_1_0_7">
  [ 96] joinstr ................................. <tClass & "_b_0_1_1_0_7">
  [ 97] pusharglist 1 ........................... <tClass & "_b_0_1_1_0_7">
  [ 99] extcall 37 .............................. <getmemnum(tClass & "_b_0_1_1_0_7")>
  [101] eq ...................................... <tsprite.castNum = getmemnum(tClass & "_b_0_1_1_0_7")>
  [102] jmpifz [123] ............................ if tsprite.castNum = getmemnum(tClass & "_b_0_1_1_0_7") then / else
  [105] getlocal 1 .............................. <tClass>
  [107] pushcons 5 .............................. <"_b_0_1_1_0_0">
  [109] joinstr ................................. <tClass & "_b_0_1_1_0_0">
  [110] pusharglist 1 ........................... <tClass & "_b_0_1_1_0_0">
  [112] extcall 37 .............................. <getmemnum(tClass & "_b_0_1_1_0_0")>
  [114] pusharglist 1 ........................... <getmemnum(tClass & "_b_0_1_1_0_0")>
  [116] extcall 30 .............................. <member(getmemnum(tClass & "_b_0_1_1_0_0"))>
  [118] setlocal 3 .............................. tmember = member(getmemnum(tClass & "_b_0_1_1_0_0"))
  [120] jmp [138]
  [123] getlocal 1 .............................. <tClass>
  [125] pushcons 4 .............................. <"_b_0_1_1_0_7">
  [127] joinstr ................................. <tClass & "_b_0_1_1_0_7">
  [128] pusharglist 1 ........................... <tClass & "_b_0_1_1_0_7">
  [130] extcall 37 .............................. <getmemnum(tClass & "_b_0_1_1_0_7")>
  [132] pusharglist 1 ........................... <getmemnum(tClass & "_b_0_1_1_0_7")>
  [134] extcall 30 .............................. <member(getmemnum(tClass & "_b_0_1_1_0_7"))>
  [136] setlocal 3 .............................. tmember = member(getmemnum(tClass & "_b_0_1_1_0_7"))
  [138] jmp [164]
  [141] getlocal 1 .............................. <tClass>
  [143] pushcons 6 .............................. <"_b_0_1_1_0_">
  [145] joinstr ................................. <tClass & "_b_0_1_1_0_">
  [146] getprop 1742 ............................ <pValue>
  [149] joinstr ................................. <tClass & "_b_0_1_1_0_" & pValue>
  [150] pusharglist 1 ........................... <tClass & "_b_0_1_1_0_" & pValue>
  [152] extcall 37 .............................. <getmemnum(tClass & "_b_0_1_1_0_" & pValue)>
  [154] pusharglist 1 ........................... <getmemnum(tClass & "_b_0_1_1_0_" & pValue)>
  [156] extcall 30 .............................. <member(getmemnum(tClass & "_b_0_1_1_0_" & pValue))>
  [158] setlocal 3 .............................. tmember = member(getmemnum(tClass & "_b_0_1_1_0_" & pValue))
  [160] pushzero ................................ <0>
  [161] setprop 1006 ............................ pActive = 0
  [164] getlocal 2 .............................. <tsprite>
  [166] getlocal 3 .............................. <tmember>
  [168] getobjprop 1266 ......................... <tmember.number>
  [171] setobjprop 1052 ......................... tsprite.castNum = tmember.number
  [174] getlocal 2 .............................. <tsprite>
  [176] getlocal 3 .............................. <tmember>
  [178] getobjprop 252 .......................... <tmember.width>
  [180] setobjprop 252 .......................... tsprite.width = tmember.width
  [182] getlocal 2 .............................. <tsprite>
  [184] getlocal 3 .............................. <tmember>
  [186] getobjprop 291 .......................... <tmember.height>
  [189] setobjprop 291 .......................... tsprite.height = tmember.height
  [192] ret
end
