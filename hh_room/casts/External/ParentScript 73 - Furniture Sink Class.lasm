property pDoorTimer, pTokenList

on prepare me
  [  0] pushcons 0 .............................. <"obj_">
  [  2] getparam 0 .............................. <me>
  [  4] getobjprop 14 ........................... <me.pClass>
  [  6] joinstr ................................. <"obj_" & me.pClass>
  [  7] pusharglist 1 ........................... <"obj_" & me.pClass>
  [  9] extcall 232 ............................. <getVariable("obj_" & me.pClass)>
  [ 11] pusharglist 1 ........................... <getVariable("obj_" & me.pClass)>
  [ 13] extcall 480 ............................. <value(getVariable("obj_" & me.pClass))>
  [ 16] setprop 1767 ............................ pTokenList = value(getVariable("obj_" & me.pClass))
  [ 19] getprop 1767 ............................ <pTokenList>
  [ 22] pusharglist 1 ........................... <pTokenList>
  [ 24] extcall 92 .............................. <listp(pTokenList)>
  [ 26] not ..................................... <not listp(pTokenList)>
  [ 27] jmpifz [ 38] ............................ if not listp(pTokenList) then
  [ 30] pushint8 18 ............................. <18>
  [ 32] pusharglist 1 ........................... <[18]>
  [ 34] pushlist ................................ <[18]>
  [ 35] setprop 1767 ............................ pTokenList = [18]
  [ 38] pushint8 1 .............................. <1>
  [ 40] pusharglistnoret 1 ...................... <1>
  [ 42] extcall 31 .............................. return 1
  [ 44] ret
end

on updateStuffdata me, tValue
  [  0] getparam 1 .............................. <tValue>
  [  2] pushcons 1 .............................. <"TRUE">
  [  4] eq ...................................... <tValue = "TRUE">
  [  5] getparam 1 .............................. <tValue>
  [  7] pushcons 2 .............................. <"1">
  [  9] eq ...................................... <tValue = "1">
  [ 10] or ...................................... <(tValue = "TRUE") or (tValue = "1")>
  [ 11] jmpifz [ 32] ............................ if (tValue = "TRUE") or (tValue = "1") then / else
  [ 14] pushint8 80 ............................. <80>
  [ 16] setprop 1768 ............................ pDoorTimer = 80
  [ 19] getparam 0 .............................. <me>
  [ 21] pushsymb 521 ............................ <#open>
  [ 24] pusharglistnoret 2 ...................... <me, #open>
  [ 26] objcall 1766 ............................ me.openCloseDoor(#open)
  [ 29] jmp [ 46]
  [ 32] pushzero ................................ <0>
  [ 33] setprop 1768 ............................ pDoorTimer = 0
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 440 ............................ <#close>
  [ 41] pusharglistnoret 2 ...................... <me, #close>
  [ 43] objcall 1766 ............................ me.openCloseDoor(#close)
  [ 46] ret
end

on select me
  [  0] pushsymb 52 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 51 .............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 115 ............................. <getThread(#room).getComponent()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 12] objcall 328 ............................. <getThread(#room).getComponent().getOwnUser()>
  [ 15] setlocal 0 .............................. tUserObj = getThread(#room).getComponent().getOwnUser()
  [ 17] getlocal 0 .............................. <tUserObj>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <tUserObj = 0>
  [ 21] jmpifz [ 30] ............................ if tUserObj = 0 then
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 31 .............................. return 1
  [ 30] getparam 0 .............................. <me>
  [ 32] pushsymb 28 ............................. <#pDirection>
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglist 3 ........................... <me, #pDirection, 1>
  [ 38] objcall 68 .............................. <me.pDirection[1]>
  [ 40] peek 0 .................................. case me.pDirection[1] of
  [ 42] pushint8 4 .............................. <4>
  [ 44] eq
  [ 45] jmpifz [135] ............................ (case) 4:
  [ 48] getparam 0 .............................. <me>
  [ 50] getobjprop 19 ........................... <me.pLocX>
  [ 52] getlocal 0 .............................. <tUserObj>
  [ 54] getobjprop 19 ........................... <tUserObj.pLocX>
  [ 56] eq ...................................... <me.pLocX = tUserObj.pLocX>
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 20 ........................... <me.pLocY>
  [ 61] getlocal 0 .............................. <tUserObj>
  [ 63] getobjprop 20 ........................... <tUserObj.pLocY>
  [ 65] sub ..................................... <me.pLocY - tUserObj.pLocY>
  [ 66] pushint8 1 .............................. <1>
  [ 68] inv ..................................... <-1>
  [ 69] eq ...................................... <(me.pLocY - tUserObj.pLocY) = -1>
  [ 70] and ..................................... <(me.pLocX = tUserObj.pLocX) and ((me.pLocY - tUserObj.pLocY) = -1)>
  [ 71] jmpifz [ 92] ............................ if (me.pLocX = tUserObj.pLocX) and ((me.pLocY - tUserObj.pLocY) = -1) then / else
  [ 74] pusharglist 0 ........................... <>
  [ 76] thebuiltin 1630 ......................... <the doubleClick>
  [ 79] jmpifz [ 89] ............................ if the doubleClick then
  [ 82] getparam 0 .............................. <me>
  [ 84] pusharglistnoret 1 ...................... <me>
  [ 86] objcall 1764 ............................ me.giveDrink()
  [ 89] jmp [132]
  [ 92] pushsymb 52 ............................. <#room>
  [ 94] pusharglist 1 ........................... <#room>
  [ 96] extcall 51 .............................. <getThread(#room)>
  [ 98] pusharglist 1 ........................... <getThread(#room)>
  [100] objcall 115 ............................. <getThread(#room).getComponent()>
  [102] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [104] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [106] pushcons 3 .............................. <"MOVE">
  [108] pushsymb 526 ............................ <#short>
  [111] getparam 0 .............................. <me>
  [113] getobjprop 19 ........................... <me.pLocX>
  [115] pushsymb 526 ............................ <#short>
  [118] getparam 0 .............................. <me>
  [120] getobjprop 20 ........................... <me.pLocY>
  [122] pushint8 1 .............................. <1>
  [124] add ..................................... <me.pLocY + 1>
  [125] pusharglist 4 ........................... <[#short: me.pLocX, #short: me.pLocY + 1]>
  [127] pushproplist ............................ <[#short: me.pLocX, #short: me.pLocY + 1]>
  [128] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#short: me.pLocX, #short: me.pLocY + 1]>
  [130] objcall 135 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#short: me.pLocX, #short: me.pLocY + 1])
  [132] jmp [415]
  [135] peek 0
  [137] pushzero ................................ <0>
  [138] eq
  [139] jmpifz [229] ............................ (case) 0:
  [142] getparam 0 .............................. <me>
  [144] getobjprop 19 ........................... <me.pLocX>
  [146] getlocal 0 .............................. <tUserObj>
  [148] getobjprop 19 ........................... <tUserObj.pLocX>
  [150] eq ...................................... <me.pLocX = tUserObj.pLocX>
  [151] getparam 0 .............................. <me>
  [153] getobjprop 20 ........................... <me.pLocY>
  [155] getlocal 0 .............................. <tUserObj>
  [157] getobjprop 20 ........................... <tUserObj.pLocY>
  [159] sub ..................................... <me.pLocY - tUserObj.pLocY>
  [160] pushint8 1 .............................. <1>
  [162] eq ...................................... <(me.pLocY - tUserObj.pLocY) = 1>
  [163] and ..................................... <(me.pLocX = tUserObj.pLocX) and ((me.pLocY - tUserObj.pLocY) = 1)>
  [164] jmpifz [185] ............................ if (me.pLocX = tUserObj.pLocX) and ((me.pLocY - tUserObj.pLocY) = 1) then / else
  [167] pusharglist 0 ........................... <>
  [169] thebuiltin 1630 ......................... <the doubleClick>
  [172] jmpifz [182] ............................ if the doubleClick then
  [175] getparam 0 .............................. <me>
  [177] pusharglistnoret 1 ...................... <me>
  [179] objcall 1764 ............................ me.giveDrink()
  [182] jmp [226]
  [185] pushsymb 52 ............................. <#room>
  [187] pusharglist 1 ........................... <#room>
  [189] extcall 51 .............................. <getThread(#room)>
  [191] pusharglist 1 ........................... <getThread(#room)>
  [193] objcall 115 ............................. <getThread(#room).getComponent()>
  [195] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [197] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [199] pushcons 3 .............................. <"MOVE">
  [201] pushsymb 526 ............................ <#short>
  [204] getparam 0 .............................. <me>
  [206] getobjprop 272 .......................... <me.locX>
  [209] pushsymb 526 ............................ <#short>
  [212] getparam 0 .............................. <me>
  [214] getobjprop 20 ........................... <me.pLocY>
  [216] pushint8 1 .............................. <1>
  [218] sub ..................................... <me.pLocY - 1>
  [219] pusharglist 4 ........................... <[#short: me.locX, #short: me.pLocY - 1]>
  [221] pushproplist ............................ <[#short: me.locX, #short: me.pLocY - 1]>
  [222] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#short: me.locX, #short: me.pLocY - 1]>
  [224] objcall 135 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#short: me.locX, #short: me.pLocY - 1])
  [226] jmp [415]
  [229] peek 0
  [231] pushint8 2 .............................. <2>
  [233] eq
  [234] jmpifz [324] ............................ (case) 2:
  [237] getparam 0 .............................. <me>
  [239] getobjprop 20 ........................... <me.pLocY>
  [241] getlocal 0 .............................. <tUserObj>
  [243] getobjprop 20 ........................... <tUserObj.pLocY>
  [245] eq ...................................... <me.pLocY = tUserObj.pLocY>
  [246] getparam 0 .............................. <me>
  [248] getobjprop 19 ........................... <me.pLocX>
  [250] getlocal 0 .............................. <tUserObj>
  [252] getobjprop 19 ........................... <tUserObj.pLocX>
  [254] sub ..................................... <me.pLocX - tUserObj.pLocX>
  [255] pushint8 1 .............................. <1>
  [257] inv ..................................... <-1>
  [258] eq ...................................... <(me.pLocX - tUserObj.pLocX) = -1>
  [259] and ..................................... <(me.pLocY = tUserObj.pLocY) and ((me.pLocX - tUserObj.pLocX) = -1)>
  [260] jmpifz [281] ............................ if (me.pLocY = tUserObj.pLocY) and ((me.pLocX - tUserObj.pLocX) = -1) then / else
  [263] pusharglist 0 ........................... <>
  [265] thebuiltin 1630 ......................... <the doubleClick>
  [268] jmpifz [278] ............................ if the doubleClick then
  [271] getparam 0 .............................. <me>
  [273] pusharglistnoret 1 ...................... <me>
  [275] objcall 1764 ............................ me.giveDrink()
  [278] jmp [321]
  [281] pushsymb 52 ............................. <#room>
  [283] pusharglist 1 ........................... <#room>
  [285] extcall 51 .............................. <getThread(#room)>
  [287] pusharglist 1 ........................... <getThread(#room)>
  [289] objcall 115 ............................. <getThread(#room).getComponent()>
  [291] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [293] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [295] pushcons 3 .............................. <"MOVE">
  [297] pushsymb 526 ............................ <#short>
  [300] getparam 0 .............................. <me>
  [302] getobjprop 19 ........................... <me.pLocX>
  [304] pushint8 1 .............................. <1>
  [306] add ..................................... <me.pLocX + 1>
  [307] pushsymb 526 ............................ <#short>
  [310] getparam 0 .............................. <me>
  [312] getobjprop 20 ........................... <me.pLocY>
  [314] pusharglist 4 ........................... <[#short: me.pLocX + 1, #short: me.pLocY]>
  [316] pushproplist ............................ <[#short: me.pLocX + 1, #short: me.pLocY]>
  [317] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#short: me.pLocX + 1, #short: me.pLocY]>
  [319] objcall 135 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#short: me.pLocX + 1, #short: me.pLocY])
  [321] jmp [415]
  [324] peek 0
  [326] pushint8 6 .............................. <6>
  [328] eq
  [329] jmpifz [415] ............................ (case) 6:
  [332] getparam 0 .............................. <me>
  [334] getobjprop 20 ........................... <me.pLocY>
  [336] getlocal 0 .............................. <tUserObj>
  [338] getobjprop 20 ........................... <tUserObj.pLocY>
  [340] eq ...................................... <me.pLocY = tUserObj.pLocY>
  [341] getparam 0 .............................. <me>
  [343] getobjprop 19 ........................... <me.pLocX>
  [345] getlocal 0 .............................. <tUserObj>
  [347] getobjprop 19 ........................... <tUserObj.pLocX>
  [349] sub ..................................... <me.pLocX - tUserObj.pLocX>
  [350] pushint8 1 .............................. <1>
  [352] eq ...................................... <(me.pLocX - tUserObj.pLocX) = 1>
  [353] and ..................................... <(me.pLocY = tUserObj.pLocY) and ((me.pLocX - tUserObj.pLocX) = 1)>
  [354] jmpifz [375] ............................ if (me.pLocY = tUserObj.pLocY) and ((me.pLocX - tUserObj.pLocX) = 1) then / else
  [357] pusharglist 0 ........................... <>
  [359] thebuiltin 1630 ......................... <the doubleClick>
  [362] jmpifz [372] ............................ if the doubleClick then
  [365] getparam 0 .............................. <me>
  [367] pusharglistnoret 1 ...................... <me>
  [369] objcall 1764 ............................ me.giveDrink()
  [372] jmp [415]
  [375] pushsymb 52 ............................. <#room>
  [377] pusharglist 1 ........................... <#room>
  [379] extcall 51 .............................. <getThread(#room)>
  [381] pusharglist 1 ........................... <getThread(#room)>
  [383] objcall 115 ............................. <getThread(#room).getComponent()>
  [385] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [387] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [389] pushcons 3 .............................. <"MOVE">
  [391] pushsymb 526 ............................ <#short>
  [394] getparam 0 .............................. <me>
  [396] getobjprop 19 ........................... <me.pLocX>
  [398] pushint8 1 .............................. <1>
  [400] sub ..................................... <me.pLocX - 1>
  [401] pushsymb 526 ............................ <#short>
  [404] getparam 0 .............................. <me>
  [406] getobjprop 20 ........................... <me.pLocY>
  [408] pusharglist 4 ........................... <[#short: me.pLocX - 1, #short: me.pLocY]>
  [410] pushproplist ............................ <[#short: me.pLocX - 1, #short: me.pLocY]>
  [411] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#short: me.pLocX - 1, #short: me.pLocY]>
  [413] objcall 135 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#short: me.pLocX - 1, #short: me.pLocY])
  [415] pop 1 ................................... end case
  [417] pushint8 1 .............................. <1>
  [419] pusharglistnoret 1 ...................... <1>
  [421] extcall 31 .............................. return 1
  [423] ret
end

on giveDrink me
  [  0] pushsymb 52 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 51 .............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 115 ............................. <getThread(#room).getComponent()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 12] objcall 134 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [ 14] setlocal 0 .............................. tConnection = getThread(#room).getComponent().getRoomConnection()
  [ 16] getlocal 0 .............................. <tConnection>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <tConnection = 0>
  [ 20] jmpifz [ 28] ............................ if tConnection = 0 then
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 1 ...................... <0>
  [ 26] extcall 31 .............................. return 0
  [ 28] getlocal 0 .............................. <tConnection>
  [ 30] pushcons 4 .............................. <"SETSTUFFDATA">
  [ 32] pushsymb 519 ............................ <#string>
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglist 1 ........................... <me>
  [ 39] objcall 75 .............................. <me.getID()>
  [ 41] pusharglist 1 ........................... <me.getID()>
  [ 43] extcall 519 ............................. <string(me.getID())>
  [ 46] pushsymb 519 ............................ <#string>
  [ 49] pushcons 1 .............................. <"TRUE">
  [ 51] pusharglist 4 ........................... <[#string: string(me.getID()), #string: "TRUE"]>
  [ 53] pushproplist ............................ <[#string: string(me.getID()), #string: "TRUE"]>
  [ 54] pusharglistnoret 3 ...................... <tConnection, "SETSTUFFDATA", [#string: string(me.getID()), #string: "TRUE"]>
  [ 56] objcall 135 ............................. tConnection.send("SETSTUFFDATA", [#string: string(me.getID()), #string: "TRUE"])
  [ 58] getlocal 0 .............................. <tConnection>
  [ 60] pushcons 5 .............................. <"LOOKTO">
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 19 ........................... <me.pLocX>
  [ 66] getparam 0 .............................. <me>
  [ 68] getobjprop 20 ........................... <me.pLocY>
  [ 70] joinpadstr .............................. <me.pLocX && me.pLocY>
  [ 71] pusharglistnoret 3 ...................... <tConnection, "LOOKTO", me.pLocX && me.pLocY>
  [ 73] objcall 135 ............................. tConnection.send("LOOKTO", me.pLocX && me.pLocY)
  [ 75] getlocal 0 .............................. <tConnection>
  [ 77] pushcons 6 .............................. <"CARRYDRINK">
  [ 79] pushsymb 519 ............................ <#string>
  [ 82] getparam 0 .............................. <me>
  [ 84] pusharglist 1 ........................... <me>
  [ 86] objcall 1765 ............................ <me.getDrinkname()>
  [ 89] pusharglist 1 ........................... <me.getDrinkname()>
  [ 91] extcall 519 ............................. <string(me.getDrinkname())>
  [ 94] pusharglist 2 ........................... <[#string: string(me.getDrinkname())]>
  [ 96] pushproplist ............................ <[#string: string(me.getDrinkname())]>
  [ 97] pusharglistnoret 3 ...................... <tConnection, "CARRYDRINK", [#string: string(me.getDrinkname())]>
  [ 99] objcall 135 ............................. tConnection.send("CARRYDRINK", [#string: string(me.getDrinkname())])
  [101] ret
end

on getDrinkname me
  [  0] getprop 1767 ............................ <pTokenList>
  [  3] getprop 1767 ............................ <pTokenList>
  [  6] getobjprop 33 ........................... <pTokenList.count>
  [  8] pusharglist 1 ........................... <pTokenList.count>
  [ 10] extcall 285 ............................. <random(pTokenList.count)>
  [ 13] pusharglist 2 ........................... <pTokenList, random(pTokenList.count)>
  [ 15] objcall 34 .............................. <pTokenList[random(pTokenList.count)]>
  [ 17] pusharglistnoret 1 ...................... <pTokenList[random(pTokenList.count)]>
  [ 19] extcall 31 .............................. return pTokenList[random(pTokenList.count)]
  [ 21] ret
end

on openCloseDoor me, tOpen
  [  0] getparam 1 .............................. <tOpen>
  [  2] pushsymb 521 ............................ <#open>
  [  5] eq ...................................... <tOpen = #open>
  [  6] getparam 1 .............................. <tOpen>
  [  8] pushint8 1 .............................. <1>
  [ 10] eq ...................................... <tOpen = 1>
  [ 11] or ...................................... <(tOpen = #open) or (tOpen = 1)>
  [ 12] jmpifz [ 22] ............................ if (tOpen = #open) or (tOpen = 1) then / else
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 0 .............................. tFrame = 1
  [ 19] jmp [ 25]
  [ 22] pushzero ................................ <0>
  [ 23] setlocal 0 .............................. tFrame = 0
  [ 25] getparam 0 .............................. <me>
  [ 27] getobjprop 18 ........................... <me.pSprList>
  [ 29] peek 0
  [ 31] pusharglist 1
  [ 33] extcall 33
  [ 35] pushint8 1
  [ 37] peek 0
  [ 39] peek 2
  [ 41] lteq
  [ 42] jmpifz [135] ............................ repeat with tsprite in me.pSprList
  [ 45] peek 2
  [ 47] peek 1
  [ 49] pusharglist 2
  [ 51] extcall 34
  [ 53] setlocal 1
  [ 55] getlocal 1 .............................. <tsprite>
  [ 57] getchainedprop 64 ....................... <tsprite.member>
  [ 59] getobjprop 58 ........................... <tsprite.member.name>
  [ 61] setlocal 2 .............................. tCurName = tsprite.member.name
  [ 63] getlocal 2 .............................. <tCurName>
  [ 65] pushsymb 66 ............................. <#char>
  [ 67] pushint8 1 .............................. <1>
  [ 69] getlocal 2 .............................. <tCurName>
  [ 71] pusharglist 1 ........................... <tCurName>
  [ 73] extcall 67 .............................. <length(tCurName)>
  [ 75] pushint8 1 .............................. <1>
  [ 77] sub ..................................... <length(tCurName) - 1>
  [ 78] pusharglist 4 ........................... <tCurName, #char, 1, length(tCurName) - 1>
  [ 80] objcall 68 .............................. <tCurName.char[1..length(tCurName) - 1]>
  [ 82] getlocal 0 .............................. <tFrame>
  [ 84] joinstr ................................. <tCurName.char[1..length(tCurName) - 1] & tFrame>
  [ 85] setlocal 3 .............................. tNewName = tCurName.char[1..length(tCurName) - 1] & tFrame
  [ 87] getlocal 3 .............................. <tNewName>
  [ 89] pusharglist 1 ........................... <tNewName>
  [ 91] extcall 62 .............................. <memberExists(tNewName)>
  [ 93] jmpifz [130] ............................ if memberExists(tNewName) then
  [ 96] getlocal 3 .............................. <tNewName>
  [ 98] pusharglist 1 ........................... <tNewName>
  [100] extcall 65 .............................. <getmemnum(tNewName)>
  [102] pusharglist 1 ........................... <getmemnum(tNewName)>
  [104] extcall 64 .............................. <member(getmemnum(tNewName))>
  [106] setlocal 4 .............................. tMem = member(getmemnum(tNewName))
  [108] getlocal 1 .............................. <tsprite>
  [110] getlocal 4 .............................. <tMem>
  [112] setobjprop 64 ........................... tsprite.member = tMem
  [114] getlocal 1 .............................. <tsprite>
  [116] getlocal 4 .............................. <tMem>
  [118] getobjprop 80 ........................... <tMem.width>
  [120] setobjprop 80 ........................... tsprite.width = tMem.width
  [122] getlocal 1 .............................. <tsprite>
  [124] getlocal 4 .............................. <tMem>
  [126] getobjprop 81 ........................... <tMem.height>
  [128] setobjprop 81 ........................... tsprite.height = tMem.height
  [130] pushint8 1
  [132] add
  [133] endrepeat [ 37]
  [135] pop 3
  [137] ret
end

on update me
  [  0] getprop 1768 ............................ <pDoorTimer>
  [  3] pushzero ................................ <0>
  [  4] nteq .................................... <pDoorTimer <> 0>
  [  5] jmpifz [ 53] ............................ if pDoorTimer <> 0 then
  [  8] getparam 0 .............................. <me>
  [ 10] pushsymb 18 ............................. <#pSprList>
  [ 12] pusharglist 2 ........................... <me, #pSprList>
  [ 14] objcall 33 .............................. <me.pSprList.count>
  [ 16] pushint8 1 .............................. <1>
  [ 18] lt ...................................... <me.pSprList.count < 1>
  [ 19] jmpifz [ 26] ............................ if me.pSprList.count < 1 then
  [ 22] pusharglistnoret 0 ...................... <>
  [ 24] extcall 31 .............................. return 
  [ 26] getprop 1768 ............................ <pDoorTimer>
  [ 29] pushint8 1 .............................. <1>
  [ 31] sub ..................................... <pDoorTimer - 1>
  [ 32] setprop 1768 ............................ pDoorTimer = pDoorTimer - 1
  [ 35] getprop 1768 ............................ <pDoorTimer>
  [ 38] pushzero ................................ <0>
  [ 39] eq ...................................... <pDoorTimer = 0>
  [ 40] jmpifz [ 53] ............................ if pDoorTimer = 0 then
  [ 43] getparam 0 .............................. <me>
  [ 45] pushsymb 440 ............................ <#close>
  [ 48] pusharglistnoret 2 ...................... <me, #close>
  [ 50] objcall 1766 ............................ me.openCloseDoor(#close)
  [ 53] ret
end
