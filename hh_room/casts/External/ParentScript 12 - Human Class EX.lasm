property pName, pClass, pCustom, pSex, pModState, pCtrlType, pBadge, pBuffer, pSprite, pMatteSpr, pMember, pShadowSpr, pShadowFix, pDefShadowMem, pPartList, pPartIndex, pFlipList, pUpdateRect, pDirection, pLastDir, pHeadDir, pLocX, pLocY, pLocH, pLocFix, pXFactor, pYFactor, pHFactor, pScreenLoc, pStartLScreen, pDestLScreen, pRestingHeight, pAnimCounter, pMoveStart, pMoveTime, pEyesClosed, pSync, pChanges, pAlphaColor, pCanvasSize, pColors, pPeopleSize, pMainAction, pMoving, pTalking, pCarrying, pSleeping, pDancing, pWaving, pTrading, pAnimating, pSwim, pCurrentAnim, pGeometry, pExtraObjs, pInfoStruct, pCorrectLocZ, pPartClass, pQueuesWithObj, pPreviousLoc, pBaseLocZ

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 1206 ............................ pName = EMPTY
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setprop 1207 ............................ pPartList = []
  [ 11] pusharglist 0 ........................... <[:]>
  [ 13] pushproplist ............................ <[:]>
  [ 14] setprop 1208 ............................ pPartIndex = [:]
  [ 17] pushzero ................................ <0>
  [ 18] pushint8 1 .............................. <1>
  [ 20] pushint8 2 .............................. <2>
  [ 22] pushint8 3 .............................. <3>
  [ 24] pushint8 2 .............................. <2>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pushzero ................................ <0>
  [ 29] pushint8 7 .............................. <7>
  [ 31] pusharglist 8 ........................... <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 33] pushlist ................................ <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 34] setprop 1209 ............................ pFlipList = [0, 1, 2, 3, 2, 1, 0, 7]
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pusharglist 2 ........................... <0, 0>
  [ 41] extcall 264 ............................. <point(0, 0)>
  [ 44] setprop 1210 ............................ pLocFix = point(0, 0)
  [ 47] pushzero ................................ <0>
  [ 48] pushzero ................................ <0>
  [ 49] pushzero ................................ <0>
  [ 50] pushzero ................................ <0>
  [ 51] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 53] extcall 221 ............................. <rect(0, 0, 0, 0)>
  [ 55] setprop 1211 ............................ pUpdateRect = rect(0, 0, 0, 0)
  [ 58] pushzero ................................ <0>
  [ 59] pushzero ................................ <0>
  [ 60] pushzero ................................ <0>
  [ 61] pusharglist 3 ........................... <[0, 0, 0]>
  [ 63] pushlist ................................ <[0, 0, 0]>
  [ 64] setprop 1212 ............................ pScreenLoc = [0, 0, 0]
  [ 67] pushzero ................................ <0>
  [ 68] pushzero ................................ <0>
  [ 69] pushzero ................................ <0>
  [ 70] pusharglist 3 ........................... <[0, 0, 0]>
  [ 72] pushlist ................................ <[0, 0, 0]>
  [ 73] setprop 1213 ............................ pStartLScreen = [0, 0, 0]
  [ 76] pushzero ................................ <0>
  [ 77] pushzero ................................ <0>
  [ 78] pushzero ................................ <0>
  [ 79] pusharglist 3 ........................... <[0, 0, 0]>
  [ 81] pushlist ................................ <[0, 0, 0]>
  [ 82] setprop 1214 ............................ pDestLScreen = [0, 0, 0]
  [ 85] pushzero ................................ <0>
  [ 86] pushzero ................................ <0>
  [ 87] pushzero ................................ <0>
  [ 88] pusharglist 3 ........................... <[0, 0, 0]>
  [ 90] pushlist ................................ <[0, 0, 0]>
  [ 91] setprop 1215 ............................ pPreviousLoc = [0, 0, 0]
  [ 94] pushfloat32 0.0 ......................... <0.0>
  [ 99] setprop 1216 ............................ pRestingHeight = 0.0
  [102] pushzero ................................ <0>
  [103] setprop 1217 ............................ pAnimCounter = 0
  [106] pushzero ................................ <0>
  [107] setprop 1218 ............................ pMoveStart = 0
  [110] pushint16 500 ........................... <500>
  [113] setprop 1219 ............................ pMoveTime = 500
  [116] pushzero ................................ <0>
  [117] setprop 1220 ............................ pEyesClosed = 0
  [120] pushint8 1 .............................. <1>
  [122] setprop 1221 ............................ pSync = 1
  [125] pushint8 1 .............................. <1>
  [127] setprop 1222 ............................ pChanges = 1
  [130] pushcons 1 .............................. <"std">
  [132] setprop 1223 ............................ pMainAction = "std"
  [135] pushzero ................................ <0>
  [136] setprop 1224 ............................ pMoving = 0
  [139] pushzero ................................ <0>
  [140] setprop 1225 ............................ pTalking = 0
  [143] pushzero ................................ <0>
  [144] setprop 1226 ............................ pCarrying = 0
  [147] pushzero ................................ <0>
  [148] setprop 1227 ............................ pSleeping = 0
  [151] pushzero ................................ <0>
  [152] setprop 1228 ............................ pDancing = 0
  [155] pushzero ................................ <0>
  [156] setprop 1229 ............................ pWaving = 0
  [159] pushzero ................................ <0>
  [160] setprop 1230 ............................ pTrading = 0
  [163] pushzero ................................ <0>
  [164] setprop 1231 ............................ pCtrlType = 0
  [167] pushzero ................................ <0>
  [168] setprop 1232 ............................ pAnimating = 0
  [171] pushzero ................................ <0>
  [172] setprop 1233 ............................ pSwim = 0
  [175] pusharglist 0 ........................... <>
  [177] extcall 974 ............................. <SPACE>
  [180] setprop 874 ............................. pBadge = SPACE
  [183] pushcons 0 .............................. <EMPTY>
  [185] setprop 1234 ............................ pCurrentAnim = EMPTY
  [188] pushint16 255 ........................... <255>
  [191] pushint16 255 ........................... <255>
  [194] pushint16 255 ........................... <255>
  [197] pusharglist 3 ........................... <255, 255, 255>
  [199] extcall 283 ............................. <rgb(255, 255, 255)>
  [202] setprop 1235 ............................ pAlphaColor = rgb(255, 255, 255)
  [205] pushint8 1 .............................. <1>
  [207] setprop 1221 ............................ pSync = 1
  [210] pusharglist 0 ........................... <[:]>
  [212] pushproplist ............................ <[:]>
  [213] setprop 1236 ............................ pColors = [:]
  [216] pushzero ................................ <0>
  [217] setprop 1237 ............................ pModState = 0
  [220] pusharglist 0 ........................... <[:]>
  [222] pushproplist ............................ <[:]>
  [223] setprop 1238 ............................ pExtraObjs = [:]
  [226] pushzero ................................ <0>
  [227] pusharglist 1 ........................... <0>
  [229] extcall 263 ............................. <member(0)>
  [232] setprop 1239 ............................ pDefShadowMem = member(0)
  [235] pusharglist 0 ........................... <[:]>
  [237] pushproplist ............................ <[:]>
  [238] setprop 1240 ............................ pInfoStruct = [:]
  [241] pushzero ................................ <0>
  [242] setprop 1241 ............................ pQueuesWithObj = 0
  [245] pushsymb 931 ............................ <#room>
  [248] pusharglist 1 ........................... <#room>
  [250] extcall 227 ............................. <getThread(#room)>
  [252] pusharglist 1 ........................... <getThread(#room)>
  [254] objcall 570 ............................. <getThread(#room).getInterface()>
  [257] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [259] objcall 29 .............................. <getThread(#room).getInterface().getGeometry()>
  [261] setprop 976 ............................. pGeometry = getThread(#room).getInterface().getGeometry()
  [264] getprop 976 ............................. <pGeometry>
  [267] getobjprop 959 .......................... <pGeometry.pXFactor>
  [270] setprop 959 ............................. pXFactor = pGeometry.pXFactor
  [273] getprop 976 ............................. <pGeometry>
  [276] getobjprop 960 .......................... <pGeometry.pYFactor>
  [279] setprop 960 ............................. pYFactor = pGeometry.pYFactor
  [282] getprop 976 ............................. <pGeometry>
  [285] getobjprop 961 .......................... <pGeometry.pHFactor>
  [288] setprop 961 ............................. pHFactor = pGeometry.pHFactor
  [291] pushzero ................................ <0>
  [292] setprop 1242 ............................ pCorrectLocZ = 0
  [295] pushsymb 931 ............................ <#room>
  [298] pusharglist 1 ........................... <#room>
  [300] extcall 227 ............................. <getThread(#room)>
  [302] pusharglist 1 ........................... <getThread(#room)>
  [304] objcall 173 ............................. <getThread(#room).getComponent()>
  [306] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [308] objcall 492 ............................. <getThread(#room).getComponent().getClassContainer()>
  [311] pushcons 2 .............................. <"bodypart">
  [313] pusharglist 2 ........................... <getThread(#room).getComponent().getClassContainer(), "bodypart">
  [315] objcall 201 ............................. <getThread(#room).getComponent().getClassContainer().get("bodypart")>
  [317] pusharglist 1 ........................... <getThread(#room).getComponent().getClassContainer().get("bodypart")>
  [319] extcall 385 ............................. <value(getThread(#room).getComponent().getClassContainer().get("bodypart"))>
  [322] setprop 1243 ............................ pPartClass = value(getThread(#room).getComponent().getClassContainer().get("bodypart"))
  [325] pushzero ................................ <0>
  [326] setprop 1244 ............................ pBaseLocZ = 0
  [329] pushint8 1 .............................. <1>
  [331] pusharglistnoret 1 ...................... <1>
  [333] extcall 116 ............................. return 1
  [335] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 120 ............................. <VOID>
  [  4] setprop 976 ............................. pGeometry = VOID
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] setprop 1207 ............................ pPartList = []
  [ 13] pusharglist 0 ........................... <[:]>
  [ 15] pushproplist ............................ <[:]>
  [ 16] setprop 1240 ............................ pInfoStruct = [:]
  [ 19] getprop 297 ............................. <pSprite>
  [ 22] getobjprop 335 .......................... <pSprite.spriteNum>
  [ 25] pusharglistnoret 1 ...................... <pSprite.spriteNum>
  [ 27] extcall 339 ............................. releaseSprite(pSprite.spriteNum)
  [ 30] getprop 1245 ............................ <pMatteSpr>
  [ 33] getobjprop 335 .......................... <pMatteSpr.spriteNum>
  [ 36] pusharglistnoret 1 ...................... <pMatteSpr.spriteNum>
  [ 38] extcall 339 ............................. releaseSprite(pMatteSpr.spriteNum)
  [ 41] getprop 1246 ............................ <pShadowSpr>
  [ 44] getobjprop 335 .......................... <pShadowSpr.spriteNum>
  [ 47] pusharglistnoret 1 ...................... <pShadowSpr.spriteNum>
  [ 49] extcall 339 ............................. releaseSprite(pShadowSpr.spriteNum)
  [ 52] getparam 0 .............................. <me>
  [ 54] pusharglist 1 ........................... <me>
  [ 56] objcall 1185 ............................ <me.getCanvasName()>
  [ 59] pusharglist 1 ........................... <me.getCanvasName()>
  [ 61] extcall 122 ............................. <memberExists(me.getCanvasName())>
  [ 63] jmpifz [ 78] ............................ if memberExists(me.getCanvasName()) then
  [ 66] getparam 0 .............................. <me>
  [ 68] pusharglist 1 ........................... <me>
  [ 70] objcall 1185 ............................ <me.getCanvasName()>
  [ 73] pusharglistnoret 1 ...................... <me.getCanvasName()>
  [ 75] extcall 1100 ............................ removeMember(me.getCanvasName())
  [ 78] pushsymb 2 .............................. <#deconstruct>
  [ 80] getprop 1238 ............................ <pExtraObjs>
  [ 83] pusharglistnoret 2 ...................... <#deconstruct, pExtraObjs>
  [ 85] extcall 142 ............................. call(#deconstruct, pExtraObjs)
  [ 87] pusharglist 0 ........................... <>
  [ 89] extcall 120 ............................. <VOID>
  [ 91] setprop 1238 ............................ pExtraObjs = VOID
  [ 94] pusharglist 0 ........................... <>
  [ 96] extcall 120 ............................. <VOID>
  [ 98] setprop 1246 ............................ pShadowSpr = VOID
  [101] pusharglist 0 ........................... <>
  [103] extcall 120 ............................. <VOID>
  [105] setprop 1245 ............................ pMatteSpr = VOID
  [108] pusharglist 0 ........................... <>
  [110] extcall 120 ............................. <VOID>
  [112] setprop 297 ............................. pSprite = VOID
  [115] pushint8 1 .............................. <1>
  [117] pusharglistnoret 1 ...................... <1>
  [119] extcall 116 ............................. return 1
  [121] ret
end

on define me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pusharglistnoret 2 ...................... <me, tdata>
  [  6] objcall 1169 ............................ me.setup(tdata)
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 1185 ............................ <me.getCanvasName()>
  [ 16] pusharglist 1 ........................... <me.getCanvasName()>
  [ 18] extcall 122 ............................. <memberExists(me.getCanvasName())>
  [ 20] not ..................................... <not memberExists(me.getCanvasName())>
  [ 21] jmpifz [ 39] ............................ if not memberExists(me.getCanvasName()) then
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 1185 ............................ <me.getCanvasName()>
  [ 31] pushsymb 292 ............................ <#bitmap>
  [ 34] pusharglistnoret 2 ...................... <me.getCanvasName(), #bitmap>
  [ 36] extcall 329 ............................. createMember(me.getCanvasName(), #bitmap)
  [ 39] getprop 1247 ............................ <pCanvasSize>
  [ 42] pushsymb 1248 ........................... <#std>
  [ 45] pusharglist 2 ........................... <pCanvasSize, #std>
  [ 47] objcall 138 ............................. <pCanvasSize[#std]>
  [ 49] setlocal 0 .............................. tSize = pCanvasSize[#std]
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 1185 ............................ <me.getCanvasName()>
  [ 58] pusharglist 1 ........................... <me.getCanvasName()>
  [ 60] extcall 330 ............................. <getmemnum(me.getCanvasName())>
  [ 63] pusharglist 1 ........................... <getmemnum(me.getCanvasName())>
  [ 65] extcall 263 ............................. <member(getmemnum(me.getCanvasName()))>
  [ 68] setprop 1249 ............................ pMember = member(getmemnum(me.getCanvasName()))
  [ 71] getprop 1249 ............................ <pMember>
  [ 74] getlocal 0 .............................. <tSize>
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglist 2 ........................... <tSize, 1>
  [ 80] objcall 138 ............................. <tSize[1]>
  [ 82] getlocal 0 .............................. <tSize>
  [ 84] pushint8 2 .............................. <2>
  [ 86] pusharglist 2 ........................... <tSize, 2>
  [ 88] objcall 138 ............................. <tSize[2]>
  [ 90] getlocal 0 .............................. <tSize>
  [ 92] pushint8 3 .............................. <3>
  [ 94] pusharglist 2 ........................... <tSize, 3>
  [ 96] objcall 138 ............................. <tSize[3]>
  [ 98] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [100] extcall 260 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [103] setobjprop 260 .......................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [106] getprop 1249 ............................ <pMember>
  [109] pushzero ................................ <0>
  [110] getprop 1249 ............................ <pMember>
  [113] getchainedprop 260 ...................... <pMember.image>
  [116] getobjprop 261 .......................... <pMember.image.height>
  [119] getlocal 0 .............................. <tSize>
  [121] pushint8 4 .............................. <4>
  [123] pusharglist 2 ........................... <tSize, 4>
  [125] objcall 138 ............................. <tSize[4]>
  [127] add ..................................... <pMember.image.height + tSize[4]>
  [128] pusharglist 2 ........................... <0, pMember.image.height + tSize[4]>
  [130] extcall 264 ............................. <point(0, pMember.image.height + tSize[4])>
  [133] setobjprop 265 .......................... pMember.regPoint = point(0, pMember.image.height + tSize[4])
  [136] getprop 1249 ............................ <pMember>
  [139] getchainedprop 260 ...................... <pMember.image>
  [142] pusharglist 1 ........................... <pMember.image>
  [144] objcall 555 ............................. <pMember.image.duplicate()>
  [147] setprop 1250 ............................ pBuffer = pMember.image.duplicate()
  [150] getparam 0 .............................. <me>
  [152] pusharglist 1 ........................... <me>
  [154] objcall 115 ............................. <me.getID()>
  [156] pusharglist 1 ........................... <me.getID()>
  [158] extcall 328 ............................. <reserveSprite(me.getID())>
  [161] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [163] extcall 146 ............................. <sprite(reserveSprite(me.getID()))>
  [165] setprop 297 ............................. pSprite = sprite(reserveSprite(me.getID()))
  [168] getprop 297 ............................. <pSprite>
  [171] getprop 1249 ............................ <pMember>
  [174] getobjprop 1251 ......................... <pMember.number>
  [177] setobjprop 1036 ......................... pSprite.castNum = pMember.number
  [180] getprop 297 ............................. <pSprite>
  [183] getprop 1249 ............................ <pMember>
  [186] getobjprop 219 .......................... <pMember.width>
  [188] setobjprop 219 .......................... pSprite.width = pMember.width
  [190] getprop 297 ............................. <pSprite>
  [193] getprop 1249 ............................ <pMember>
  [196] getobjprop 261 .......................... <pMember.height>
  [199] setobjprop 261 .......................... pSprite.height = pMember.height
  [202] getprop 297 ............................. <pSprite>
  [205] pushint8 36 ............................. <36>
  [207] setobjprop 393 .......................... pSprite.ink = 36
  [210] getparam 0 .............................. <me>
  [212] pusharglist 1 ........................... <me>
  [214] objcall 115 ............................. <me.getID()>
  [216] pusharglist 1 ........................... <me.getID()>
  [218] extcall 328 ............................. <reserveSprite(me.getID())>
  [221] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [223] extcall 146 ............................. <sprite(reserveSprite(me.getID()))>
  [225] setprop 1245 ............................ pMatteSpr = sprite(reserveSprite(me.getID()))
  [228] getprop 1245 ............................ <pMatteSpr>
  [231] getprop 1249 ............................ <pMember>
  [234] getobjprop 1251 ......................... <pMember.number>
  [237] setobjprop 1036 ......................... pMatteSpr.castNum = pMember.number
  [240] getprop 1245 ............................ <pMatteSpr>
  [243] pushint8 8 .............................. <8>
  [245] setobjprop 393 .......................... pMatteSpr.ink = 8
  [248] getprop 1245 ............................ <pMatteSpr>
  [251] pushzero ................................ <0>
  [252] setobjprop 333 .......................... pMatteSpr.blend = 0
  [255] getparam 0 .............................. <me>
  [257] pusharglist 1 ........................... <me>
  [259] objcall 115 ............................. <me.getID()>
  [261] pusharglist 1 ........................... <me.getID()>
  [263] extcall 328 ............................. <reserveSprite(me.getID())>
  [266] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [268] extcall 146 ............................. <sprite(reserveSprite(me.getID()))>
  [270] setprop 1246 ............................ pShadowSpr = sprite(reserveSprite(me.getID()))
  [273] getprop 1246 ............................ <pShadowSpr>
  [276] pushint8 16 ............................. <16>
  [278] setobjprop 333 .......................... pShadowSpr.blend = 16
  [281] getprop 1246 ............................ <pShadowSpr>
  [284] pushint8 8 .............................. <8>
  [286] setobjprop 393 .......................... pShadowSpr.ink = 8
  [289] pushzero ................................ <0>
  [290] setprop 1252 ............................ pShadowFix = 0
  [293] getprop 1253 ............................ <pPeopleSize>
  [296] pushcons 3 .............................. <"_std_sd_001_0_0">
  [298] joinstr ................................. <pPeopleSize & "_std_sd_001_0_0">
  [299] pusharglist 1 ........................... <pPeopleSize & "_std_sd_001_0_0">
  [301] extcall 330 ............................. <getmemnum(pPeopleSize & "_std_sd_001_0_0")>
  [304] pusharglist 1 ........................... <getmemnum(pPeopleSize & "_std_sd_001_0_0")>
  [306] extcall 263 ............................. <member(getmemnum(pPeopleSize & "_std_sd_001_0_0"))>
  [309] setprop 1239 ............................ pDefShadowMem = member(getmemnum(pPeopleSize & "_std_sd_001_0_0"))
  [312] pushsymb 931 ............................ <#room>
  [315] pusharglist 1 ........................... <#room>
  [317] extcall 227 ............................. <getThread(#room)>
  [319] pusharglist 1 ........................... <getThread(#room)>
  [321] objcall 570 ............................. <getThread(#room).getInterface()>
  [324] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [326] objcall 115 ............................. <getThread(#room).getInterface().getID()>
  [328] setlocal 1 .............................. tTargetID = getThread(#room).getInterface().getID()
  [330] getprop 1245 ............................ <pMatteSpr>
  [333] getobjprop 335 .......................... <pMatteSpr.spriteNum>
  [336] getparam 0 .............................. <me>
  [338] pusharglist 1 ........................... <me>
  [340] objcall 115 ............................. <me.getID()>
  [342] pusharglistnoret 2 ...................... <pMatteSpr.spriteNum, me.getID()>
  [344] extcall 334 ............................. setEventBroker(pMatteSpr.spriteNum, me.getID())
  [347] getprop 1245 ............................ <pMatteSpr>
  [350] pushsymb 70 ............................. <#eventProcUserObj>
  [352] getlocal 1 .............................. <tTargetID>
  [354] pushsymb 144 ............................ <#mouseDown>
  [356] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [358] objcall 143 ............................. pMatteSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [360] getprop 1245 ............................ <pMatteSpr>
  [363] pushsymb 64 ............................. <#eventProcUserRollOver>
  [365] getlocal 1 .............................. <tTargetID>
  [367] pushsymb 178 ............................ <#mouseEnter>
  [369] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseEnter>
  [371] objcall 143 ............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseEnter)
  [373] getprop 1245 ............................ <pMatteSpr>
  [376] pushsymb 64 ............................. <#eventProcUserRollOver>
  [378] getlocal 1 .............................. <tTargetID>
  [380] pushsymb 179 ............................ <#mouseLeave>
  [382] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseLeave>
  [384] objcall 143 ............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseLeave)
  [386] getprop 1246 ............................ <pShadowSpr>
  [389] getobjprop 335 .......................... <pShadowSpr.spriteNum>
  [392] getparam 0 .............................. <me>
  [394] pusharglist 1 ........................... <me>
  [396] objcall 115 ............................. <me.getID()>
  [398] pusharglistnoret 2 ...................... <pShadowSpr.spriteNum, me.getID()>
  [400] extcall 334 ............................. setEventBroker(pShadowSpr.spriteNum, me.getID())
  [403] getprop 1246 ............................ <pShadowSpr>
  [406] pushsymb 70 ............................. <#eventProcUserObj>
  [408] getlocal 1 .............................. <tTargetID>
  [410] pushsymb 144 ............................ <#mouseDown>
  [412] pusharglistnoret 4 ...................... <pShadowSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [414] objcall 143 ............................. pShadowSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [416] getprop 1240 ............................ <pInfoStruct>
  [419] pushsymb 187 ............................ <#name>
  [421] getprop 1206 ............................ <pName>
  [424] pusharglistnoret 3 ...................... <pInfoStruct, #name, pName>
  [426] objcall 136 ............................. pInfoStruct[#name] = pName
  [428] getprop 1240 ............................ <pInfoStruct>
  [431] pushsymb 463 ............................ <#class>
  [434] getprop 1254 ............................ <pClass>
  [437] pusharglistnoret 3 ...................... <pInfoStruct, #class, pClass>
  [439] objcall 136 ............................. pInfoStruct[#class] = pClass
  [441] getprop 1240 ............................ <pInfoStruct>
  [444] pushsymb 259 ............................ <#custom>
  [447] getprop 1255 ............................ <pCustom>
  [450] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [452] objcall 136 ............................. pInfoStruct[#custom] = pCustom
  [454] getprop 1240 ............................ <pInfoStruct>
  [457] pushsymb 260 ............................ <#image>
  [460] getparam 0 .............................. <me>
  [462] pusharglist 1 ........................... <me>
  [464] objcall 866 ............................. <me.getPicture()>
  [467] pusharglistnoret 3 ...................... <pInfoStruct, #image, me.getPicture()>
  [469] objcall 136 ............................. pInfoStruct[#image] = me.getPicture()
  [471] getprop 1240 ............................ <pInfoStruct>
  [474] pushsymb 204 ............................ <#ctrl>
  [476] pushcons 4 .............................. <"furniture">
  [478] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, "furniture">
  [480] objcall 136 ............................. pInfoStruct[#ctrl] = "furniture"
  [482] getprop 1240 ............................ <pInfoStruct>
  [485] pushsymb 213 ............................ <#badge>
  [487] pushcons 5 .............................. <" ">
  [489] pusharglistnoret 3 ...................... <pInfoStruct, #badge, " ">
  [491] objcall 136 ............................. pInfoStruct[#badge] = " "
  [493] pushsymb 931 ............................ <#room>
  [496] pusharglist 1 ........................... <#room>
  [498] extcall 227 ............................. <getThread(#room)>
  [500] pusharglist 1 ........................... <getThread(#room)>
  [502] objcall 570 ............................. <getThread(#room).getInterface()>
  [505] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [507] objcall 28 .............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [509] setlocal 2 .............................. tViz = getThread(#room).getInterface().getRoomVisualizer()
  [511] getlocal 2 .............................. <tViz>
  [513] getparam 1 .............................. <tdata>
  [515] pushsymb 464 ............................ <#x>
  [518] pusharglist 2 ........................... <tdata, #x>
  [520] objcall 138 ............................. <tdata[#x]>
  [522] getparam 1 .............................. <tdata>
  [524] pushsymb 466 ............................ <#y>
  [527] pusharglist 2 ........................... <tdata, #y>
  [529] objcall 138 ............................. <tdata[#y]>
  [531] pushsymb 1256 ........................... <#wallleft>
  [534] pushsymb 1257 ........................... <#wallright>
  [537] pusharglist 2 ........................... <[#wallleft, #wallright]>
  [539] pushlist ................................ <[#wallleft, #wallright]>
  [540] pusharglist 4 ........................... <tViz, tdata[#x], tdata[#y], [#wallleft, #wallright]>
  [542] objcall 1258 ............................ <tViz.getPartAtLocation(tdata[#x], tdata[#y], [#wallleft, #wallright])>
  [545] setlocal 3 .............................. tPart = tViz.getPartAtLocation(tdata[#x], tdata[#y], [#wallleft, #wallright])
  [547] getlocal 3 .............................. <tPart>
  [549] pushzero ................................ <0>
  [550] eq ...................................... <tPart = 0>
  [551] not ..................................... <not (tPart = 0)>
  [552] jmpifz [570] ............................ if not (tPart = 0) then
  [555] getlocal 3 .............................. <tPart>
  [557] pushsymb 130 ............................ <#locZ>
  [559] pusharglist 2 ........................... <tPart, #locZ>
  [561] objcall 138 ............................. <tPart[#locZ]>
  [563] pushint16 1000 .......................... <1000>
  [566] sub ..................................... <tPart[#locZ] - 1000>
  [567] setprop 1244 ............................ pBaseLocZ = tPart[#locZ] - 1000
  [570] pushint8 1 .............................. <1>
  [572] pusharglistnoret 1 ...................... <1>
  [574] extcall 116 ............................. return 1
  [576] ret
end

on setup me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 187 ............................ <#name>
  [  4] pusharglist 2 ........................... <tdata, #name>
  [  6] objcall 138 ............................. <tdata[#name]>
  [  8] setprop 1206 ............................ pName = tdata[#name]
  [ 11] getparam 1 .............................. <tdata>
  [ 13] pushsymb 463 ............................ <#class>
  [ 16] pusharglist 2 ........................... <tdata, #class>
  [ 18] objcall 138 ............................. <tdata[#class]>
  [ 20] setprop 1254 ............................ pClass = tdata[#class]
  [ 23] getparam 1 .............................. <tdata>
  [ 25] pushsymb 259 ............................ <#custom>
  [ 28] pusharglist 2 ........................... <tdata, #custom>
  [ 30] objcall 138 ............................. <tdata[#custom]>
  [ 32] setprop 1255 ............................ pCustom = tdata[#custom]
  [ 35] getparam 1 .............................. <tdata>
  [ 37] pushsymb 771 ............................ <#sex>
  [ 40] pusharglist 2 ........................... <tdata, #sex>
  [ 42] objcall 138 ............................. <tdata[#sex]>
  [ 44] setprop 1262 ............................ pSex = tdata[#sex]
  [ 47] getparam 1 .............................. <tdata>
  [ 49] pushsymb 769 ............................ <#direction>
  [ 52] pusharglist 2 ........................... <tdata, #direction>
  [ 54] objcall 138 ............................. <tdata[#direction]>
  [ 56] pushint8 1 .............................. <1>
  [ 58] pusharglist 2 ........................... <tdata[#direction], 1>
  [ 60] objcall 138 ............................. <tdata[#direction][1]>
  [ 62] setprop 376 ............................. pDirection = tdata[#direction][1]
  [ 65] getprop 376 ............................. <pDirection>
  [ 68] setprop 1263 ............................ pHeadDir = pDirection
  [ 71] getprop 376 ............................. <pDirection>
  [ 74] setprop 1264 ............................ pLastDir = pDirection
  [ 77] getparam 1 .............................. <tdata>
  [ 79] pushsymb 464 ............................ <#x>
  [ 82] pusharglist 2 ........................... <tdata, #x>
  [ 84] objcall 138 ............................. <tdata[#x]>
  [ 86] setprop 465 ............................. pLocX = tdata[#x]
  [ 89] getparam 1 .............................. <tdata>
  [ 91] pushsymb 466 ............................ <#y>
  [ 94] pusharglist 2 ........................... <tdata, #y>
  [ 96] objcall 138 ............................. <tdata[#y]>
  [ 98] setprop 467 ............................. pLocY = tdata[#y]
  [101] getparam 1 .............................. <tdata>
  [103] pushsymb 468 ............................ <#h>
  [106] pusharglist 2 ........................... <tdata, #h>
  [108] objcall 138 ............................. <tdata[#h]>
  [110] setprop 469 ............................. pLocH = tdata[#h]
  [113] getparam 1 .............................. <tdata>
  [115] pushsymb 213 ............................ <#badge>
  [117] pusharglist 2 ........................... <tdata, #badge>
  [119] objcall 138 ............................. <tdata[#badge]>
  [121] setprop 874 ............................. pBadge = tdata[#badge]
  [124] pushcons 6 .............................. <"human.size.">
  [126] getprop 959 ............................. <pXFactor>
  [129] pusharglist 1 ........................... <pXFactor>
  [131] extcall 426 ............................. <integer(pXFactor)>
  [134] joinstr ................................. <"human.size." & integer(pXFactor)>
  [135] pusharglist 1 ........................... <"human.size." & integer(pXFactor)>
  [137] extcall 80 .............................. <getVariable("human.size." & integer(pXFactor))>
  [139] setprop 1253 ............................ pPeopleSize = getVariable("human.size." & integer(pXFactor))
  [142] getprop 1253 ............................ <pPeopleSize>
  [145] not ..................................... <not pPeopleSize>
  [146] jmpifz [165] ............................ if not pPeopleSize then
  [149] getparam 0 .............................. <me>
  [151] pushcons 7 .............................. <"People size not found, using default!">
  [153] pushsymb 1169 ........................... <#setup>
  [156] pusharglistnoret 3 ...................... <me, "People size not found, using default!", #setup>
  [158] extcall 123 ............................. error(me, "People size not found, using default!", #setup)
  [160] pushcons 8 .............................. <"h">
  [162] setprop 1253 ............................ pPeopleSize = "h"
  [165] getprop 1253 ............................ <pPeopleSize>
  [168] pushcons 8 .............................. <"h">
  [170] eq ...................................... <pPeopleSize = "h">
  [171] setprop 1242 ............................ pCorrectLocZ = pPeopleSize = "h"
  [174] pushcons 9 .............................. <"human.canvas.">
  [176] getprop 1253 ............................ <pPeopleSize>
  [179] joinstr ................................. <"human.canvas." & pPeopleSize>
  [180] pusharglist 1 ........................... <"human.canvas." & pPeopleSize>
  [182] extcall 80 .............................. <getVariable("human.canvas." & pPeopleSize)>
  [184] pusharglist 1 ........................... <getVariable("human.canvas." & pPeopleSize)>
  [186] extcall 385 ............................. <value(getVariable("human.canvas." & pPeopleSize))>
  [189] setprop 1247 ............................ pCanvasSize = value(getVariable("human.canvas." & pPeopleSize))
  [192] getprop 1247 ............................ <pCanvasSize>
  [195] not ..................................... <not pCanvasSize>
  [196] jmpifz [246] ............................ if not pCanvasSize then
  [199] getparam 0 .............................. <me>
  [201] pushcons 10 ............................. <"Canvas size not found, using default!">
  [203] pushsymb 1169 ........................... <#setup>
  [206] pusharglistnoret 3 ...................... <me, "Canvas size not found, using default!", #setup>
  [208] extcall 123 ............................. error(me, "Canvas size not found, using default!", #setup)
  [210] pushsymb 1248 ........................... <#std>
  [213] pushint8 64 ............................. <64>
  [215] pushint8 102 ............................ <102>
  [217] pushint8 32 ............................. <32>
  [219] pushint8 10 ............................. <10>
  [221] inv ..................................... <-10>
  [222] pusharglist 4 ........................... <[64, 102, 32, -10]>
  [224] pushlist ................................ <[64, 102, 32, -10]>
  [225] pushsymb 1265 ........................... <#lay>
  [228] pushint8 89 ............................. <89>
  [230] pushint8 102 ............................ <102>
  [232] pushint8 32 ............................. <32>
  [234] pushint8 8 .............................. <8>
  [236] inv ..................................... <-8>
  [237] pusharglist 4 ........................... <[89, 102, 32, -8]>
  [239] pushlist ................................ <[89, 102, 32, -8]>
  [240] pusharglist 4 ........................... <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [242] pushproplist ............................ <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [243] setprop 1247 ............................ pCanvasSize = [#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]
  [246] getparam 0 .............................. <me>
  [248] getparam 1 .............................. <tdata>
  [250] pushsymb 770 ............................ <#figure>
  [253] pusharglist 2 ........................... <tdata, #figure>
  [255] objcall 138 ............................. <tdata[#figure]>
  [257] pusharglist 2 ........................... <me, tdata[#figure]>
  [259] objcall 1182 ............................ <me.setPartLists(tdata[#figure])>
  [262] not ..................................... <not me.setPartLists(tdata[#figure])>
  [263] jmpifz [281] ............................ if not me.setPartLists(tdata[#figure]) then
  [266] getparam 0 .............................. <me>
  [268] pushcons 11 ............................. <"Couldn't create part lists!">
  [270] pushsymb 1169 ........................... <#setup>
  [273] pusharglist 3 ........................... <me, "Couldn't create part lists!", #setup>
  [275] extcall 123 ............................. <error(me, "Couldn't create part lists!", #setup)>
  [277] pusharglistnoret 1 ...................... <error(me, "Couldn't create part lists!", #setup)>
  [279] extcall 116 ............................. return error(me, "Couldn't create part lists!", #setup)
  [281] getparam 0 .............................. <me>
  [283] getprop 465 ............................. <pLocX>
  [286] getprop 467 ............................. <pLocY>
  [289] getprop 469 ............................. <pLocH>
  [292] getprop 1263 ............................ <pHeadDir>
  [295] getprop 376 ............................. <pDirection>
  [298] pusharglistnoret 6 ...................... <me, pLocX, pLocY, pLocH, pHeadDir, pDirection>
  [300] objcall 748 ............................. me.resetValues(pLocX, pLocY, pLocH, pHeadDir, pDirection)
  [303] getparam 0 .............................. <me>
  [305] getprop 465 ............................. <pLocX>
  [308] getprop 467 ............................. <pLocY>
  [311] getprop 469 ............................. <pLocH>
  [314] getprop 376 ............................. <pDirection>
  [317] pusharglistnoret 5 ...................... <me, pLocX, pLocY, pLocH, pDirection>
  [319] objcall 749 ............................. me.Refresh(pLocX, pLocY, pLocH, pDirection)
  [322] pushzero ................................ <0>
  [323] setprop 1221 ............................ pSync = 0
  [326] ret
end

on update me
  [  0] getprop 1241 ............................ <pQueuesWithObj>
  [  3] jmpifz [ 23] ............................ if pQueuesWithObj then / else
  [  6] getparam 0 .............................. <me>
  [  8] pusharglistnoret 1 ...................... <me>
  [ 10] objcall 478 ............................. me.prepare()
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 647 ............................. me.render()
  [ 20] jmp [ 53]
  [ 23] getprop 1221 ............................ <pSync>
  [ 26] not ..................................... <not pSync>
  [ 27] setprop 1221 ............................ pSync = not pSync
  [ 30] getprop 1221 ............................ <pSync>
  [ 33] jmpifz [ 46] ............................ if pSync then / else
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 478 ............................. me.prepare()
  [ 43] jmp [ 53]
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 1 ...................... <me>
  [ 50] objcall 647 ............................. me.render()
  [ 53] ret
end

on resetValues me, tX, tY, tH, tDirHead, tDirBody
  [  0] getprop 1241 ............................ <pQueuesWithObj>
  [  3] getprop 1215 ............................ <pPreviousLoc>
  [  6] getparam 1 .............................. <tX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getparam 3 .............................. <tH>
  [ 12] pusharglist 3 ........................... <[tX, tY, tH]>
  [ 14] pushlist ................................ <[tX, tY, tH]>
  [ 15] eq ...................................... <pPreviousLoc = [tX, tY, tH]>
  [ 16] and ..................................... <pQueuesWithObj and (pPreviousLoc = [tX, tY, tH])>
  [ 17] jmpifz [ 26] ............................ if pQueuesWithObj and (pPreviousLoc = [tX, tY, tH]) then
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 116 ............................. return 1
  [ 26] pushzero ................................ <0>
  [ 27] setprop 1224 ............................ pMoving = 0
  [ 30] pushzero ................................ <0>
  [ 31] setprop 1228 ............................ pDancing = 0
  [ 34] pushzero ................................ <0>
  [ 35] setprop 1225 ............................ pTalking = 0
  [ 38] pushzero ................................ <0>
  [ 39] setprop 1226 ............................ pCarrying = 0
  [ 42] pushzero ................................ <0>
  [ 43] setprop 1229 ............................ pWaving = 0
  [ 46] pushzero ................................ <0>
  [ 47] setprop 1230 ............................ pTrading = 0
  [ 50] pushzero ................................ <0>
  [ 51] setprop 1231 ............................ pCtrlType = 0
  [ 54] pushzero ................................ <0>
  [ 55] setprop 1232 ............................ pAnimating = 0
  [ 58] pushzero ................................ <0>
  [ 59] setprop 1237 ............................ pModState = 0
  [ 62] pushzero ................................ <0>
  [ 63] setprop 1227 ............................ pSleeping = 0
  [ 66] pushzero ................................ <0>
  [ 67] setprop 1241 ............................ pQueuesWithObj = 0
  [ 70] pushint8 1 .............................. <1>
  [ 72] inv ..................................... <-1>
  [ 73] pushint8 2 .............................. <2>
  [ 75] pusharglist 2 ........................... <-1, 2>
  [ 77] extcall 264 ............................. <point(-1, 2)>
  [ 80] setprop 1210 ............................ pLocFix = point(-1, 2)
  [ 83] pushsymb 571 ............................ <#reset>
  [ 86] getprop 1207 ............................ <pPartList>
  [ 89] pusharglistnoret 2 ...................... <#reset, pPartList>
  [ 91] extcall 142 ............................. call(#reset, pPartList)
  [ 93] getprop 976 ............................. <pGeometry>
  [ 96] getparam 1 .............................. <tX>
  [ 98] getparam 2 .............................. <tY>
  [100] getparam 3 .............................. <tH>
  [102] pusharglist 4 ........................... <pGeometry, tX, tY, tH>
  [104] objcall 949 ............................. <pGeometry.getScreenCoordinate(tX, tY, tH)>
  [107] setprop 1212 ............................ pScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tH)
  [110] pushcons 1 .............................. <"std">
  [112] setprop 1223 ............................ pMainAction = "std"
  [115] getparam 1 .............................. <tX>
  [117] setprop 465 ............................. pLocX = tX
  [120] getparam 2 .............................. <tY>
  [122] setprop 467 ............................. pLocY = tY
  [125] getparam 3 .............................. <tH>
  [127] setprop 469 ............................. pLocH = tH
  [130] pushfloat32 0.0 ......................... <0.0>
  [135] setprop 1216 ............................ pRestingHeight = 0.0
  [138] getparam 5 .............................. <tDirBody>
  [140] getprop 1209 ............................ <pFlipList>
  [143] getparam 5 .............................. <tDirBody>
  [145] pushint8 1 .............................. <1>
  [147] add ..................................... <tDirBody + 1>
  [148] pusharglist 2 ........................... <pFlipList, tDirBody + 1>
  [150] objcall 138 ............................. <pFlipList[tDirBody + 1]>
  [152] nteq .................................... <tDirBody <> pFlipList[tDirBody + 1]>
  [153] jmpifz [225] ............................ if tDirBody <> pFlipList[tDirBody + 1] then
  [156] getparam 5 .............................. <tDirBody>
  [158] getparam 4 .............................. <tDirHead>
  [160] nteq .................................... <tDirBody <> tDirHead>
  [161] jmpifz [225] ............................ if tDirBody <> tDirHead then
  [164] getparam 4 .............................. <tDirHead>
  [166] peek 0 .................................. case tDirHead of
  [168] pushint8 4 .............................. <4>
  [170] eq
  [171] jmpifz [181] ............................ (case) 4:
  [174] pushint8 2 .............................. <2>
  [176] setparam 4 .............................. tDirHead = 2
  [178] jmp [223]
  [181] peek 0
  [183] pushint8 5 .............................. <5>
  [185] eq
  [186] jmpifz [196] ............................ (case) 5:
  [189] pushint8 1 .............................. <1>
  [191] setparam 4 .............................. tDirHead = 1
  [193] jmp [223]
  [196] peek 0
  [198] pushint8 6 .............................. <6>
  [200] eq
  [201] jmpifz [211] ............................ (case) 6:
  [204] pushint8 4 .............................. <4>
  [206] setparam 4 .............................. tDirHead = 4
  [208] jmp [223]
  [211] peek 0
  [213] pushint8 7 .............................. <7>
  [215] eq
  [216] jmpifz [223] ............................ (case) 7:
  [219] pushint8 5 .............................. <5>
  [221] setparam 4 .............................. tDirHead = 5
  [223] pop 1 ................................... end case
  [225] getparam 5 .............................. <tDirBody>
  [227] setprop 376 ............................. pDirection = tDirBody
  [230] getparam 4 .............................. <tDirHead>
  [232] setprop 1263 ............................ pHeadDir = tDirHead
  [235] getprop 1238 ............................ <pExtraObjs>
  [238] getobjprop 149 .......................... <pExtraObjs.count>
  [240] pushzero ................................ <0>
  [241] gt ...................................... <pExtraObjs.count > 0>
  [242] jmpifz [255] ............................ if pExtraObjs.count > 0 then
  [245] pushsymb 749 ............................ <#Refresh>
  [248] getprop 1238 ............................ <pExtraObjs>
  [251] pusharglistnoret 2 ...................... <#Refresh, pExtraObjs>
  [253] extcall 142 ............................. call(#Refresh, pExtraObjs)
  [255] ret
end

on Refresh me, tX, tY, tH
  [  0] getprop 1241 ............................ <pQueuesWithObj>
  [  3] getprop 1215 ............................ <pPreviousLoc>
  [  6] getparam 1 .............................. <tX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getparam 3 .............................. <tH>
  [ 12] pusharglist 3 ........................... <[tX, tY, tH]>
  [ 14] pushlist ................................ <[tX, tY, tH]>
  [ 15] eq ...................................... <pPreviousLoc = [tX, tY, tH]>
  [ 16] and ..................................... <pQueuesWithObj and (pPreviousLoc = [tX, tY, tH])>
  [ 17] jmpifz [ 26] ............................ if pQueuesWithObj and (pPreviousLoc = [tX, tY, tH]) then
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 116 ............................. return 1
  [ 26] getprop 1228 ............................ <pDancing>
  [ 29] pushzero ................................ <0>
  [ 30] gt ...................................... <pDancing > 0>
  [ 31] getprop 1223 ............................ <pMainAction>
  [ 34] pushcons 12 ............................. <"lay">
  [ 36] eq ...................................... <pMainAction = "lay">
  [ 37] or ...................................... <(pDancing > 0) or (pMainAction = "lay")>
  [ 38] jmpifz [ 47] ............................ if (pDancing > 0) or (pMainAction = "lay") then
  [ 41] getprop 376 ............................. <pDirection>
  [ 44] setprop 1263 ............................ pHeadDir = pDirection
  [ 47] pushsymb 1269 ........................... <#defineDir>
  [ 50] getprop 1207 ............................ <pPartList>
  [ 53] getprop 376 ............................. <pDirection>
  [ 56] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [ 58] extcall 142 ............................. call(#defineDir, pPartList, pDirection)
  [ 60] pushsymb 1270 ........................... <#defineDirMultiple>
  [ 63] getprop 1207 ............................ <pPartList>
  [ 66] getprop 1263 ............................ <pHeadDir>
  [ 69] pushcons 13 ............................. <"hd">
  [ 71] pushcons 14 ............................. <"hr">
  [ 73] pushcons 15 ............................. <"ey">
  [ 75] pushcons 16 ............................. <"fc">
  [ 77] pusharglist 4 ........................... <["hd", "hr", "ey", "fc"]>
  [ 79] pushlist ................................ <["hd", "hr", "ey", "fc"]>
  [ 80] pusharglistnoret 4 ...................... <#defineDirMultiple, pPartList, pHeadDir, ["hd", "hr", "ey", "fc"]>
  [ 82] extcall 142 ............................. call(#defineDirMultiple, pPartList, pHeadDir, ["hd", "hr", "ey", "fc"])
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglistnoret 1 ...................... <me>
  [ 88] objcall 1183 ............................ me.arrangeParts()
  [ 91] pushint8 1 .............................. <1>
  [ 93] setprop 1222 ............................ pChanges = 1
  [ 96] ret
end

on select me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 116 ............................. return 1
  [  6] ret
end

on getName me
  [  0] getprop 1206 ............................ <pName>
  [  3] pusharglistnoret 1 ...................... <pName>
  [  5] extcall 116 ............................. return pName
  [  7] ret
end

on getClass me
  [  0] pushcons 17 ............................. <"user">
  [  2] pusharglistnoret 1 ...................... <"user">
  [  4] extcall 116 ............................. return "user"
  [  6] ret
end

on setPartModel me, tPart, tmodel
  [  0] getprop 1208 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 138 ............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 253 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 120 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 116 ............................. return VOID
  [ 24] getprop 1207 ............................ <pPartList>
  [ 27] getprop 1208 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 138 ............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 138 ............................. <pPartList[pPartIndex[tPart]]>
  [ 40] getparam 2 .............................. <tmodel>
  [ 42] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tmodel>
  [ 44] objcall 1271 ............................ pPartList[pPartIndex[tPart]].setModel(tmodel)
  [ 47] ret
end

on setPartColor me, tPart, tColor
  [  0] getprop 1208 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 138 ............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 253 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 120 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 116 ............................. return VOID
  [ 24] getprop 1207 ............................ <pPartList>
  [ 27] getprop 1208 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 138 ............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 138 ............................. <pPartList[pPartIndex[tPart]]>
  [ 40] getparam 2 .............................. <tColor>
  [ 42] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tColor>
  [ 44] objcall 1272 ............................ pPartList[pPartIndex[tPart]].setColor(tColor)
  [ 47] ret
end

on getCustom me
  [  0] getprop 1255 ............................ <pCustom>
  [  3] pusharglistnoret 1 ...................... <pCustom>
  [  5] extcall 116 ............................. return pCustom
  [  7] ret
end

on getLocation me
  [  0] getprop 465 ............................. <pLocX>
  [  3] getprop 467 ............................. <pLocY>
  [  6] getprop 469 ............................. <pLocH>
  [  9] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 11] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 12] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 14] extcall 116 ............................. return [pLocX, pLocY, pLocH]
  [ 16] ret
end

on getScrLocation me
  [  0] getprop 1212 ............................ <pScreenLoc>
  [  3] pusharglistnoret 1 ...................... <pScreenLoc>
  [  5] extcall 116 ............................. return pScreenLoc
  [  7] ret
end

on getTileCenter me
  [  0] getprop 1212 ............................ <pScreenLoc>
  [  3] pushint8 1 .............................. <1>
  [  5] pusharglist 2 ........................... <pScreenLoc, 1>
  [  7] objcall 138 ............................. <pScreenLoc[1]>
  [  9] getprop 959 ............................. <pXFactor>
  [ 12] pushint8 2 .............................. <2>
  [ 14] div ..................................... <pXFactor / 2>
  [ 15] add ..................................... <pScreenLoc[1] + (pXFactor / 2)>
  [ 16] getprop 1212 ............................ <pScreenLoc>
  [ 19] pushint8 2 .............................. <2>
  [ 21] pusharglist 2 ........................... <pScreenLoc, 2>
  [ 23] objcall 138 ............................. <pScreenLoc[2]>
  [ 25] pusharglist 2 ........................... <pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2]>
  [ 27] extcall 264 ............................. <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 30] pusharglistnoret 1 ...................... <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 32] extcall 116 ............................. return point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])
  [ 34] ret
end

on getPartLocation me, tPart
  [  0] getprop 1208 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 138 ............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 253 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 120 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 116 ............................. return VOID
  [ 24] getprop 1207 ............................ <pPartList>
  [ 27] getprop 1208 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 138 ............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 138 ............................. <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 450 ............................. <pPartList[pPartIndex[tPart]].getLocation()>
  [ 45] setlocal 0 .............................. tPartLoc = pPartList[pPartIndex[tPart]].getLocation()
  [ 47] getprop 1223 ............................ <pMainAction>
  [ 50] pushcons 12 ............................. <"lay">
  [ 52] nteq .................................... <pMainAction <> "lay">
  [ 53] jmpifz [ 70] ............................ if pMainAction <> "lay" then / else
  [ 56] getprop 297 ............................. <pSprite>
  [ 59] getobjprop 332 .......................... <pSprite.loc>
  [ 62] getlocal 0 .............................. <tPartLoc>
  [ 64] add ..................................... <pSprite.loc + tPartLoc>
  [ 65] setlocal 1 .............................. tloc = pSprite.loc + tPartLoc
  [ 67] jmp [118]
  [ 70] getprop 297 ............................. <pSprite>
  [ 73] pushsymb 221 ............................ <#rect>
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglist 3 ........................... <pSprite, #rect, 1>
  [ 79] objcall 134 ............................. <pSprite.rect[1]>
  [ 81] getprop 297 ............................. <pSprite>
  [ 84] getobjprop 219 .......................... <pSprite.width>
  [ 86] pushint8 2 .............................. <2>
  [ 88] div ..................................... <pSprite.width / 2>
  [ 89] add ..................................... <pSprite.rect[1] + (pSprite.width / 2)>
  [ 90] getprop 297 ............................. <pSprite>
  [ 93] pushsymb 221 ............................ <#rect>
  [ 95] pushint8 2 .............................. <2>
  [ 97] pusharglist 3 ........................... <pSprite, #rect, 2>
  [ 99] objcall 134 ............................. <pSprite.rect[2]>
  [101] getprop 297 ............................. <pSprite>
  [104] getobjprop 261 .......................... <pSprite.height>
  [107] pushint8 2 .............................. <2>
  [109] div ..................................... <pSprite.height / 2>
  [110] add ..................................... <pSprite.rect[2] + (pSprite.height / 2)>
  [111] pusharglist 2 ........................... <pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2)>
  [113] extcall 264 ............................. <point(pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2))>
  [116] setlocal 1 .............................. tloc = point(pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2))
  [118] getlocal 1 .............................. <tloc>
  [120] pusharglistnoret 1 ...................... <tloc>
  [122] extcall 116 ............................. return tloc
  [124] ret
end

on getDirection me
  [  0] getprop 376 ............................. <pDirection>
  [  3] pusharglistnoret 1 ...................... <pDirection>
  [  5] extcall 116 ............................. return pDirection
  [  7] ret
end

on getPartMember me, tPart
  [  0] getprop 1208 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 138 ............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 253 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 120 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 116 ............................. return VOID
  [ 24] getprop 1207 ............................ <pPartList>
  [ 27] getprop 1208 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 138 ............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 138 ............................. <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 1274 ............................ <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 45] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 47] extcall 116 ............................. return pPartList[pPartIndex[tPart]].getCurrentMember()
  [ 49] ret
end

on getPartColor me, tPart
  [  0] getprop 1208 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 138 ............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 253 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 120 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 116 ............................. return VOID
  [ 24] getprop 1207 ............................ <pPartList>
  [ 27] getprop 1208 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 138 ............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 138 ............................. <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 1275 ............................ <pPartList[pPartIndex[tPart]].getColor()>
  [ 45] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getColor()>
  [ 47] extcall 116 ............................. return pPartList[pPartIndex[tPart]].getColor()
  [ 49] ret
end

on getPicture me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] pusharglist 1 ........................... <tImg>
  [  4] extcall 253 ............................. <voidp(tImg)>
  [  6] jmpifz [ 25] ............................ if voidp(tImg) then / else
  [  9] pushint8 64 ............................. <64>
  [ 11] pushint8 102 ............................ <102>
  [ 13] pushint8 32 ............................. <32>
  [ 15] pusharglist 3 ........................... <64, 102, 32>
  [ 17] extcall 260 ............................. <image(64, 102, 32)>
  [ 20] setlocal 0 .............................. tCanvas = image(64, 102, 32)
  [ 22] jmp [ 29]
  [ 25] getparam 1 .............................. <tImg>
  [ 27] setlocal 0 .............................. tCanvas = tImg
  [ 29] pushcons 18 ............................. <"human.parts.">
  [ 31] getprop 1253 ............................ <pPeopleSize>
  [ 34] joinstr ................................. <"human.parts." & pPeopleSize>
  [ 35] pusharglist 1 ........................... <"human.parts." & pPeopleSize>
  [ 37] extcall 108 ............................. <getVariableValue("human.parts." & pPeopleSize)>
  [ 39] setlocal 1 .............................. tPartDefinition = getVariableValue("human.parts." & pPeopleSize)
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setlocal 2 .............................. tTempPartList = []
  [ 46] getlocal 1 .............................. <tPartDefinition>
  [ 48] peek 0
  [ 50] pusharglist 1
  [ 52] extcall 149
  [ 54] pushint8 1
  [ 56] peek 0
  [ 58] peek 2
  [ 60] lteq
  [ 61] jmpifz [119] ............................ repeat with tPartSymbol in tPartDefinition
  [ 64] peek 2
  [ 66] peek 1
  [ 68] pusharglist 2
  [ 70] extcall 138
  [ 72] setlocal 3
  [ 74] getprop 1208 ............................ <pPartIndex>
  [ 77] getlocal 3 .............................. <tPartSymbol>
  [ 79] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [ 81] objcall 138 ............................. <pPartIndex[tPartSymbol]>
  [ 83] pusharglist 1 ........................... <pPartIndex[tPartSymbol]>
  [ 85] extcall 253 ............................. <voidp(pPartIndex[tPartSymbol])>
  [ 87] not ..................................... <not voidp(pPartIndex[tPartSymbol])>
  [ 88] jmpifz [114] ............................ if not voidp(pPartIndex[tPartSymbol]) then
  [ 91] getlocal 2 .............................. <tTempPartList>
  [ 93] getprop 1207 ............................ <pPartList>
  [ 96] getprop 1208 ............................ <pPartIndex>
  [ 99] getlocal 3 .............................. <tPartSymbol>
  [101] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [103] objcall 138 ............................. <pPartIndex[tPartSymbol]>
  [105] pusharglist 2 ........................... <pPartList, pPartIndex[tPartSymbol]>
  [107] objcall 138 ............................. <pPartList[pPartIndex[tPartSymbol]]>
  [109] pusharglistnoret 2 ...................... <tTempPartList, pPartList[pPartIndex[tPartSymbol]]>
  [111] objcall 765 ............................. tTempPartList.append(pPartList[pPartIndex[tPartSymbol]])
  [114] pushint8 1
  [116] add
  [117] endrepeat [ 56]
  [119] pop 3
  [121] pushsymb 1276 ........................... <#copyPicture>
  [124] getlocal 2 .............................. <tTempPartList>
  [126] getlocal 0 .............................. <tCanvas>
  [128] pusharglistnoret 3 ...................... <#copyPicture, tTempPartList, tCanvas>
  [130] extcall 142 ............................. call(#copyPicture, tTempPartList, tCanvas)
  [132] getparam 0 .............................. <me>
  [134] getlocal 0 .............................. <tCanvas>
  [136] pusharglist 2 ........................... <me, tCanvas>
  [138] objcall 1184 ............................ <me.flipImage(tCanvas)>
  [141] pusharglistnoret 1 ...................... <me.flipImage(tCanvas)>
  [143] extcall 116 ............................. return me.flipImage(tCanvas)
  [145] ret
end

on getInfo me
  [  0] getprop 1231 ............................ <pCtrlType>
  [  3] pushcons 0 .............................. <EMPTY>
  [  5] eq ...................................... <pCtrlType = EMPTY>
  [  6] jmpifz [ 23] ............................ if pCtrlType = EMPTY then / else
  [  9] getprop 1240 ............................ <pInfoStruct>
  [ 12] pushsymb 204 ............................ <#ctrl>
  [ 14] pushcons 4 .............................. <"furniture">
  [ 16] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, "furniture">
  [ 18] objcall 136 ............................. pInfoStruct[#ctrl] = "furniture"
  [ 20] jmp [ 35]
  [ 23] getprop 1240 ............................ <pInfoStruct>
  [ 26] pushsymb 204 ............................ <#ctrl>
  [ 28] getprop 1231 ............................ <pCtrlType>
  [ 31] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, pCtrlType>
  [ 33] objcall 136 ............................. pInfoStruct[#ctrl] = pCtrlType
  [ 35] getprop 1240 ............................ <pInfoStruct>
  [ 38] pushsymb 213 ............................ <#badge>
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 874 .......................... <me.pBadge>
  [ 45] pusharglistnoret 3 ...................... <pInfoStruct, #badge, me.pBadge>
  [ 47] objcall 136 ............................. pInfoStruct[#badge] = me.pBadge
  [ 49] getprop 1230 ............................ <pTrading>
  [ 52] jmpifz [ 83] ............................ if pTrading then / else
  [ 55] getprop 1240 ............................ <pInfoStruct>
  [ 58] pushsymb 259 ............................ <#custom>
  [ 61] getprop 1255 ............................ <pCustom>
  [ 64] pushcons 19 ............................. <RETURN>
  [ 66] joinstr ................................. <pCustom & RETURN>
  [ 67] pushcons 20 ............................. <"human_trading">
  [ 69] pushcons 21 ............................. <"Trading">
  [ 71] pusharglist 2 ........................... <"human_trading", "Trading">
  [ 73] extcall 95 .............................. <getText("human_trading", "Trading")>
  [ 75] joinstr ................................. <pCustom & RETURN & getText("human_trading", "Trading")>
  [ 76] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom & RETURN & getText("human_trading", "Trading")>
  [ 78] objcall 136 ............................. pInfoStruct[#custom] = pCustom & RETURN & getText("human_trading", "Trading")
  [ 80] jmp [136]
  [ 83] getprop 1226 ............................ <pCarrying>
  [ 86] pushzero ................................ <0>
  [ 87] nteq .................................... <pCarrying <> 0>
  [ 88] jmpifz [123] ............................ if pCarrying <> 0 then / else
  [ 91] getprop 1240 ............................ <pInfoStruct>
  [ 94] pushsymb 259 ............................ <#custom>
  [ 97] getprop 1255 ............................ <pCustom>
  [100] pushcons 19 ............................. <RETURN>
  [102] joinstr ................................. <pCustom & RETURN>
  [103] pushcons 22 ............................. <"human_carrying">
  [105] pushcons 23 ............................. <"Carrying:">
  [107] pusharglist 2 ........................... <"human_carrying", "Carrying:">
  [109] extcall 95 .............................. <getText("human_carrying", "Carrying:")>
  [111] joinstr ................................. <pCustom & RETURN & getText("human_carrying", "Carrying:")>
  [112] getprop 1226 ............................ <pCarrying>
  [115] joinpadstr .............................. <pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying>
  [116] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying>
  [118] objcall 136 ............................. pInfoStruct[#custom] = pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying
  [120] jmp [136]
  [123] getprop 1240 ............................ <pInfoStruct>
  [126] pushsymb 259 ............................ <#custom>
  [129] getprop 1255 ............................ <pCustom>
  [132] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [134] objcall 136 ............................. pInfoStruct[#custom] = pCustom
  [136] getprop 1240 ............................ <pInfoStruct>
  [139] pusharglistnoret 1 ...................... <pInfoStruct>
  [141] extcall 116 ............................. return pInfoStruct
  [143] ret
end

on getSprites me
  [  0] getprop 297 ............................. <pSprite>
  [  3] getprop 1246 ............................ <pShadowSpr>
  [  6] getprop 1245 ............................ <pMatteSpr>
  [  9] pusharglist 3 ........................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 11] pushlist ................................ <[pSprite, pShadowSpr, pMatteSpr]>
  [ 12] pusharglistnoret 1 ...................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 14] extcall 116 ............................. return [pSprite, pShadowSpr, pMatteSpr]
  [ 16] ret
end

on getProperty me, tPropID
  [  0] getparam 1 .............................. <tPropID>
  [  2] peek 0 .................................. case tPropID of
  [  4] pushsymb 209 ............................ <#dancing>
  [  6] eq
  [  7] jmpifz [ 22] ............................ (case) #dancing:
  [ 10] pop 1
  [ 12] getprop 1228 ............................ <pDancing>
  [ 15] pusharglistnoret 1 ...................... <pDancing>
  [ 17] extcall 116 ............................. return pDancing
  [ 19] jmp [145]
  [ 22] peek 0
  [ 24] pushsymb 1282 ........................... <#carrying>
  [ 27] eq
  [ 28] jmpifz [ 43] ............................ (case) #carrying:
  [ 31] pop 1
  [ 33] getprop 1226 ............................ <pCarrying>
  [ 36] pusharglistnoret 1 ...................... <pCarrying>
  [ 38] extcall 116 ............................. return pCarrying
  [ 40] jmp [145]
  [ 43] peek 0
  [ 45] pushsymb 332 ............................ <#loc>
  [ 48] eq
  [ 49] jmpifz [ 73] ............................ (case) #loc:
  [ 52] pop 1
  [ 54] getprop 465 ............................. <pLocX>
  [ 57] getprop 467 ............................. <pLocY>
  [ 60] getprop 469 ............................. <pLocH>
  [ 63] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 65] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 66] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 68] extcall 116 ............................. return [pLocX, pLocY, pLocH]
  [ 70] jmp [145]
  [ 73] peek 0
  [ 75] pushsymb 210 ............................ <#mainAction>
  [ 77] eq
  [ 78] jmpifz [ 93] ............................ (case) #mainAction:
  [ 81] pop 1
  [ 83] getprop 1223 ............................ <pMainAction>
  [ 86] pusharglistnoret 1 ...................... <pMainAction>
  [ 88] extcall 116 ............................. return pMainAction
  [ 90] jmp [145]
  [ 93] peek 0
  [ 95] pushsymb 452 ............................ <#moving>
  [ 98] eq
  [ 99] jmpifz [116] ............................ (case) #moving:
  [102] pop 1
  [104] getparam 0 .............................. <me>
  [106] getobjprop 1224 ......................... <me.pMoving>
  [109] pusharglistnoret 1 ...................... <me.pMoving>
  [111] extcall 116 ............................. return me.pMoving
  [113] jmp [145]
  [116] peek 0
  [118] pushsymb 211 ............................ <#swimming>
  [120] eq
  [121] jmpifz [138] ............................ (case) #swimming:
  [124] pop 1
  [126] getparam 0 .............................. <me>
  [128] getobjprop 1233 ......................... <me.pSwim>
  [131] pusharglistnoret 1 ...................... <me.pSwim>
  [133] extcall 116 ............................. return me.pSwim
  [135] jmp [145] ............................... (case) otherwise:
  [138] pop 1
  [140] pushzero ................................ <0>
  [141] pusharglistnoret 1 ...................... <0>
  [143] extcall 116 ............................. return 0
  [145] pop 1 ................................... end case
  [147] ret
end

on setProperty me, tPropID, tValue
  [  0] getparam 1 .............................. <tPropID>
  [  2] jmp [ 12] ............................... case tPropID of / otherwise:
  [  5] pop 1
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 116 ............................. return 0
  [ 12] pop 1 ................................... end case
  [ 14] ret
end

on closeEyes me
  [  0] getprop 1223 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] jmpifz [ 29] ............................ if pMainAction = "lay" then / else
  [  9] pushsymb 1283 ........................... <#defineActMultiple>
  [ 12] getprop 1207 ............................ <pPartList>
  [ 15] pushcons 24 ............................. <"ley">
  [ 17] pushcons 15 ............................. <"ey">
  [ 19] pusharglist 1 ........................... <["ey"]>
  [ 21] pushlist ................................ <["ey"]>
  [ 22] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "ley", ["ey"]>
  [ 24] extcall 142 ............................. call(#defineActMultiple, pPartList, "ley", ["ey"])
  [ 26] jmp [ 46]
  [ 29] pushsymb 1283 ........................... <#defineActMultiple>
  [ 32] getprop 1207 ............................ <pPartList>
  [ 35] pushcons 25 ............................. <"eyb">
  [ 37] pushcons 15 ............................. <"ey">
  [ 39] pusharglist 1 ........................... <["ey"]>
  [ 41] pushlist ................................ <["ey"]>
  [ 42] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "eyb", ["ey"]>
  [ 44] extcall 142 ............................. call(#defineActMultiple, pPartList, "eyb", ["ey"])
  [ 46] pushint8 1 .............................. <1>
  [ 48] setprop 1220 ............................ pEyesClosed = 1
  [ 51] pushint8 1 .............................. <1>
  [ 53] setprop 1222 ............................ pChanges = 1
  [ 56] ret
end

on openEyes me
  [  0] getprop 1223 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] jmpifz [ 29] ............................ if pMainAction = "lay" then / else
  [  9] pushsymb 1283 ........................... <#defineActMultiple>
  [ 12] getprop 1207 ............................ <pPartList>
  [ 15] pushcons 12 ............................. <"lay">
  [ 17] pushcons 15 ............................. <"ey">
  [ 19] pusharglist 1 ........................... <["ey"]>
  [ 21] pushlist ................................ <["ey"]>
  [ 22] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "lay", ["ey"]>
  [ 24] extcall 142 ............................. call(#defineActMultiple, pPartList, "lay", ["ey"])
  [ 26] jmp [ 46]
  [ 29] pushsymb 1283 ........................... <#defineActMultiple>
  [ 32] getprop 1207 ............................ <pPartList>
  [ 35] pushcons 1 .............................. <"std">
  [ 37] pushcons 15 ............................. <"ey">
  [ 39] pusharglist 1 ........................... <["ey"]>
  [ 41] pushlist ................................ <["ey"]>
  [ 42] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "std", ["ey"]>
  [ 44] extcall 142 ............................. call(#defineActMultiple, pPartList, "std", ["ey"])
  [ 46] pushzero ................................ <0>
  [ 47] setprop 1220 ............................ pEyesClosed = 0
  [ 50] pushint8 1 .............................. <1>
  [ 52] setprop 1222 ............................ pChanges = 1
  [ 55] ret
end

on startAnimation me, tMemName
  [  0] getparam 1 .............................. <tMemName>
  [  2] getprop 1234 ............................ <pCurrentAnim>
  [  5] eq ...................................... <tMemName = pCurrentAnim>
  [  6] jmpifz [ 14] ............................ if tMemName = pCurrentAnim then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 116 ............................. return 0
  [ 14] getparam 1 .............................. <tMemName>
  [ 16] pusharglist 1 ........................... <tMemName>
  [ 18] extcall 122 ............................. <memberExists(tMemName)>
  [ 20] not ..................................... <not memberExists(tMemName)>
  [ 21] jmpifz [ 29] ............................ if not memberExists(tMemName) then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 116 ............................. return 0
  [ 29] getparam 1 .............................. <tMemName>
  [ 31] pusharglist 1 ........................... <tMemName>
  [ 33] extcall 330 ............................. <getmemnum(tMemName)>
  [ 36] pusharglist 1 ........................... <getmemnum(tMemName)>
  [ 38] extcall 263 ............................. <member(getmemnum(tMemName))>
  [ 41] setlocal 0 .............................. tmember = member(getmemnum(tMemName))
  [ 43] getlocal 0 .............................. <tmember>
  [ 45] getobjprop 851 .......................... <tmember.text>
  [ 48] setlocal 1 .............................. tList = tmember.text
  [ 50] getmovieprop 654 ........................ <the itemDelimiter>
  [ 53] setlocal 2 .............................. tTempDelim = the itemDelimiter
  [ 55] pushcons 26 ............................. <"/">
  [ 57] setmovieprop 654 ........................ the itemDelimiter = "/"
  [ 60] pushint8 1 .............................. <1>
  [ 62] setlocal 3
  [ 64] getlocal 3
  [ 66] getlocal 1 .............................. <tList>
  [ 68] pushsymb 794 ............................ <#line>
  [ 71] pusharglist 2 ........................... <tList, #line>
  [ 73] objcall 149 ............................. <tList.line.count>
  [ 75] lteq
  [ 76] jmpifz [148] ............................ repeat with i = 1 to tList.line.count
  [ 79] getlocal 1 .............................. <tList>
  [ 81] pushsymb 794 ............................ <#line>
  [ 84] getlocal 3 .............................. <i>
  [ 86] pusharglist 3 ........................... <tList, #line, i>
  [ 88] objcall 641 ............................. <tList.line[i]>
  [ 91] pushsymb 655 ............................ <#item>
  [ 94] pushint8 1 .............................. <1>
  [ 96] pusharglist 3 ........................... <tList.line[i], #item, 1>
  [ 98] objcall 134 ............................. <tList.line[i].item[1]>
  [100] setlocal 4 .............................. tPart = tList.line[i].item[1]
  [102] getlocal 1 .............................. <tList>
  [104] pushsymb 794 ............................ <#line>
  [107] getlocal 3 .............................. <i>
  [109] pusharglist 3 ........................... <tList, #line, i>
  [111] objcall 641 ............................. <tList.line[i]>
  [114] pushsymb 655 ............................ <#item>
  [117] pushint8 2 .............................. <2>
  [119] pusharglist 3 ........................... <tList.line[i], #item, 2>
  [121] objcall 134 ............................. <tList.line[i].item[2]>
  [123] setlocal 5 .............................. tAnim = tList.line[i].item[2]
  [125] pushsymb 875 ............................ <#setAnimation>
  [128] getprop 1207 ............................ <pPartList>
  [131] getlocal 4 .............................. <tPart>
  [133] getlocal 5 .............................. <tAnim>
  [135] pusharglistnoret 4 ...................... <#setAnimation, pPartList, tPart, tAnim>
  [137] extcall 142 ............................. call(#setAnimation, pPartList, tPart, tAnim)
  [139] pushint8 1
  [141] getlocal 3
  [143] add
  [144] setlocal 3
  [146] endrepeat [ 64]
  [148] getlocal 2 .............................. <tTempDelim>
  [150] setmovieprop 654 ........................ the itemDelimiter = tTempDelim
  [153] pushint8 1 .............................. <1>
  [155] setprop 1232 ............................ pAnimating = 1
  [158] getparam 1 .............................. <tMemName>
  [160] setprop 1234 ............................ pCurrentAnim = tMemName
  [163] ret
end

on stopAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1232 ............................ pAnimating = 0
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 1234 ............................ pCurrentAnim = EMPTY
  [  9] pushsymb 1286 ........................... <#remAnimation>
  [ 12] getprop 1207 ............................ <pPartList>
  [ 15] pusharglistnoret 2 ...................... <#remAnimation, pPartList>
  [ 17] extcall 142 ............................. call(#remAnimation, pPartList)
  [ 19] ret
end

on show me
  [  0] getprop 297 ............................. <pSprite>
  [  3] pushint8 1 .............................. <1>
  [  5] setobjprop 218 .......................... pSprite.visible = 1
  [  7] getprop 1245 ............................ <pMatteSpr>
  [ 10] pushint8 1 .............................. <1>
  [ 12] setobjprop 218 .......................... pMatteSpr.visible = 1
  [ 14] getprop 1246 ............................ <pShadowSpr>
  [ 17] pushint8 1 .............................. <1>
  [ 19] setobjprop 218 .......................... pShadowSpr.visible = 1
  [ 21] ret
end

on hide me
  [  0] getprop 297 ............................. <pSprite>
  [  3] pushzero ................................ <0>
  [  4] setobjprop 218 .......................... pSprite.visible = 0
  [  6] getprop 1245 ............................ <pMatteSpr>
  [  9] pushzero ................................ <0>
  [ 10] setobjprop 218 .......................... pMatteSpr.visible = 0
  [ 12] getprop 1246 ............................ <pShadowSpr>
  [ 15] pushzero ................................ <0>
  [ 16] setobjprop 218 .......................... pShadowSpr.visible = 0
  [ 18] ret
end

on draw me, tRGB
  [  0] getparam 1 .............................. <tRGB>
  [  2] pushsymb 327 ............................ <#color>
  [  5] pusharglist 2 ........................... <tRGB, #color>
  [  7] extcall 215 ............................. <ilk(tRGB, #color)>
  [  9] not ..................................... <not ilk(tRGB, #color)>
  [ 10] jmpifz [ 25] ............................ if not ilk(tRGB, #color) then
  [ 13] pushint16 255 ........................... <255>
  [ 16] pushzero ................................ <0>
  [ 17] pushzero ................................ <0>
  [ 18] pusharglist 3 ........................... <255, 0, 0>
  [ 20] extcall 283 ............................. <rgb(255, 0, 0)>
  [ 23] setparam 1 .............................. tRGB = rgb(255, 0, 0)
  [ 25] getprop 1249 ............................ <pMember>
  [ 28] getchainedprop 260 ...................... <pMember.image>
  [ 31] getprop 1249 ............................ <pMember>
  [ 34] getchainedprop 260 ...................... <pMember.image>
  [ 37] getobjprop 221 .......................... <pMember.image.rect>
  [ 39] pushsymb 1287 ........................... <#shapeType>
  [ 42] pushsymb 221 ............................ <#rect>
  [ 44] pushsymb 327 ............................ <#color>
  [ 47] getparam 1 .............................. <tRGB>
  [ 49] pusharglist 4 ........................... <[#shapeType: #rect, #color: tRGB]>
  [ 51] pushproplist ............................ <[#shapeType: #rect, #color: tRGB]>
  [ 52] pusharglistnoret 3 ...................... <pMember.image, pMember.image.rect, [#shapeType: #rect, #color: tRGB]>
  [ 54] objcall 1146 ............................ pMember.image.draw(pMember.image.rect, [#shapeType: #rect, #color: tRGB])
  [ 57] ret
end

on prepare me
  [  0] getprop 1217 ............................ <pAnimCounter>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <pAnimCounter + 1>
  [  6] pushint8 4 .............................. <4>
  [  8] mod ..................................... <(pAnimCounter + 1) mod 4>
  [  9] setprop 1217 ............................ pAnimCounter = (pAnimCounter + 1) mod 4
  [ 12] getprop 1220 ............................ <pEyesClosed>
  [ 15] getprop 1227 ............................ <pSleeping>
  [ 18] not ..................................... <not pSleeping>
  [ 19] and ..................................... <pEyesClosed and not pSleeping>
  [ 20] jmpifz [ 33] ............................ if pEyesClosed and not pSleeping then / else
  [ 23] getparam 0 .............................. <me>
  [ 25] pusharglistnoret 1 ...................... <me>
  [ 27] objcall 1178 ............................ me.openEyes()
  [ 30] jmp [ 52]
  [ 33] pushint8 30 ............................. <30>
  [ 35] pusharglist 1 ........................... <30>
  [ 37] extcall 150 ............................. <random(30)>
  [ 39] pushint8 3 .............................. <3>
  [ 41] eq ...................................... <random(30) = 3>
  [ 42] jmpifz [ 52] ............................ if random(30) = 3 then
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglistnoret 1 ...................... <me>
  [ 49] objcall 1177 ............................ me.closeEyes()
  [ 52] getprop 1225 ............................ <pTalking>
  [ 55] pushint8 3 .............................. <3>
  [ 57] pusharglist 1 ........................... <3>
  [ 59] extcall 150 ............................. <random(3)>
  [ 61] pushint8 1 .............................. <1>
  [ 63] gt ...................................... <random(3) > 1>
  [ 64] and ..................................... <pTalking and (random(3) > 1)>
  [ 65] jmpifz [127] ............................ if pTalking and (random(3) > 1) then
  [ 68] getprop 1223 ............................ <pMainAction>
  [ 71] pushcons 12 ............................. <"lay">
  [ 73] eq ...................................... <pMainAction = "lay">
  [ 74] jmpifz [101] ............................ if pMainAction = "lay" then / else
  [ 77] pushsymb 1283 ........................... <#defineActMultiple>
  [ 80] getprop 1207 ............................ <pPartList>
  [ 83] pushcons 27 ............................. <"lsp">
  [ 85] pushcons 13 ............................. <"hd">
  [ 87] pushcons 14 ............................. <"hr">
  [ 89] pushcons 16 ............................. <"fc">
  [ 91] pusharglist 3 ........................... <["hd", "hr", "fc"]>
  [ 93] pushlist ................................ <["hd", "hr", "fc"]>
  [ 94] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "lsp", ["hd", "hr", "fc"]>
  [ 96] extcall 142 ............................. call(#defineActMultiple, pPartList, "lsp", ["hd", "hr", "fc"])
  [ 98] jmp [122]
  [101] pushsymb 1283 ........................... <#defineActMultiple>
  [104] getprop 1207 ............................ <pPartList>
  [107] pushcons 28 ............................. <"spk">
  [109] pushcons 13 ............................. <"hd">
  [111] pushcons 14 ............................. <"hr">
  [113] pushcons 16 ............................. <"fc">
  [115] pusharglist 3 ........................... <["hd", "hr", "fc"]>
  [117] pushlist ................................ <["hd", "hr", "fc"]>
  [118] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "spk", ["hd", "hr", "fc"]>
  [120] extcall 142 ............................. call(#defineActMultiple, pPartList, "spk", ["hd", "hr", "fc"])
  [122] pushint8 1 .............................. <1>
  [124] setprop 1222 ............................ pChanges = 1
  [127] getprop 1224 ............................ <pMoving>
  [130] jmpifz [191] ............................ if pMoving then
  [133] getmovieprop 407 ........................ <the milliSeconds>
  [136] getprop 1218 ............................ <pMoveStart>
  [139] sub ..................................... <the milliSeconds - pMoveStart>
  [140] pusharglist 1 ........................... <the milliSeconds - pMoveStart>
  [142] extcall 589 ............................. <float(the milliSeconds - pMoveStart)>
  [145] getprop 1219 ............................ <pMoveTime>
  [148] div ..................................... <float(the milliSeconds - pMoveStart) / pMoveTime>
  [149] setlocal 0 .............................. tFactor = float(the milliSeconds - pMoveStart) / pMoveTime
  [151] getlocal 0 .............................. <tFactor>
  [153] pushfloat32 1.0 ......................... <1.0>
  [158] gt ...................................... <tFactor > 1.0>
  [159] jmpifz [169] ............................ if tFactor > 1.0 then
  [162] pushfloat32 1.0 ......................... <1.0>
  [167] setlocal 0 .............................. tFactor = 1.0
  [169] getprop 1214 ............................ <pDestLScreen>
  [172] getprop 1213 ............................ <pStartLScreen>
  [175] sub ..................................... <pDestLScreen - pStartLScreen>
  [176] getlocal 0 .............................. <tFactor>
  [178] mul ..................................... <(pDestLScreen - pStartLScreen) * tFactor>
  [179] getprop 1213 ............................ <pStartLScreen>
  [182] add ..................................... <((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen>
  [183] setprop 1212 ............................ pScreenLoc = ((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen
  [186] pushint8 1 .............................. <1>
  [188] setprop 1222 ............................ pChanges = 1
  [191] getprop 1229 ............................ <pWaving>
  [194] getprop 1223 ............................ <pMainAction>
  [197] pushcons 12 ............................. <"lay">
  [199] nteq .................................... <pMainAction <> "lay">
  [200] and ..................................... <pWaving and (pMainAction <> "lay")>
  [201] jmpifz [221] ............................ if pWaving and (pMainAction <> "lay") then
  [204] pushsymb 1289 ........................... <#doHandWorkLeft>
  [207] getprop 1207 ............................ <pPartList>
  [210] pushcons 29 ............................. <"wav">
  [212] pusharglistnoret 3 ...................... <#doHandWorkLeft, pPartList, "wav">
  [214] extcall 142 ............................. call(#doHandWorkLeft, pPartList, "wav")
  [216] pushint8 1 .............................. <1>
  [218] setprop 1222 ............................ pChanges = 1
  [221] getprop 1228 ............................ <pDancing>
  [224] jmpifz [237] ............................ if pDancing then
  [227] pushint8 1 .............................. <1>
  [229] setprop 1232 ............................ pAnimating = 1
  [232] pushint8 1 .............................. <1>
  [234] setprop 1222 ............................ pChanges = 1
  [237] ret
end

on render me
  [  0] getprop 1222 ............................ <pChanges>
  [  3] not ..................................... <not pChanges>
  [  4] jmpifz [ 11] ............................ if not pChanges then
  [  7] pusharglistnoret 0 ...................... <>
  [  9] extcall 116 ............................. return 
  [ 11] getprop 1253 ............................ <pPeopleSize>
  [ 14] pushcons 30 ............................. <"sh">
  [ 16] eq ...................................... <pPeopleSize = "sh">
  [ 17] jmpifz [ 27] ............................ if pPeopleSize = "sh" then / else
  [ 20] pushint8 4 .............................. <4>
  [ 22] setlocal 0 .............................. tSkipFreq = 4
  [ 24] jmp [ 31]
  [ 27] pushint8 5 .............................. <5>
  [ 29] setlocal 0 .............................. tSkipFreq = 5
  [ 31] getlocal 0 .............................. <tSkipFreq>
  [ 33] pusharglist 1 ........................... <tSkipFreq>
  [ 35] extcall 150 ............................. <random(tSkipFreq)>
  [ 37] pushint8 2 .............................. <2>
  [ 39] eq ...................................... <random(tSkipFreq) = 2>
  [ 40] getprop 1224 ............................ <pMoving>
  [ 43] not ..................................... <not pMoving>
  [ 44] and ..................................... <(random(tSkipFreq) = 2) and not pMoving>
  [ 45] jmpifz [ 64] ............................ if (random(tSkipFreq) = 2) and not pMoving then
  [ 48] pushsymb 1291 ........................... <#skipAnimationFrame>
  [ 51] getprop 1207 ............................ <pPartList>
  [ 54] pusharglistnoret 2 ...................... <#skipAnimationFrame, pPartList>
  [ 56] extcall 142 ............................. call(#skipAnimationFrame, pPartList)
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglistnoret 1 ...................... <1>
  [ 62] extcall 116 ............................. return 1
  [ 64] pushzero ................................ <0>
  [ 65] setprop 1222 ............................ pChanges = 0
  [ 68] getprop 1223 ............................ <pMainAction>
  [ 71] pushcons 31 ............................. <"sit">
  [ 73] eq ...................................... <pMainAction = "sit">
  [ 74] jmpifz [126] ............................ if pMainAction = "sit" then / else
  [ 77] getprop 1247 ............................ <pCanvasSize>
  [ 80] pushsymb 1248 ........................... <#std>
  [ 83] pusharglist 2 ........................... <pCanvasSize, #std>
  [ 85] objcall 138 ............................. <pCanvasSize[#std]>
  [ 87] setlocal 1 .............................. tSize = pCanvasSize[#std]
  [ 89] getprop 1246 ............................ <pShadowSpr>
  [ 92] getprop 1253 ............................ <pPeopleSize>
  [ 95] pushcons 32 ............................. <"_sit_sd_001_">
  [ 97] joinstr ................................. <pPeopleSize & "_sit_sd_001_">
  [ 98] getprop 1209 ............................ <pFlipList>
  [101] getprop 376 ............................. <pDirection>
  [104] pushint8 1 .............................. <1>
  [106] add ..................................... <pDirection + 1>
  [107] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [109] objcall 138 ............................. <pFlipList[pDirection + 1]>
  [111] joinstr ................................. <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1]>
  [112] pushcons 33 ............................. <"_0">
  [114] joinstr ................................. <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0">
  [115] pusharglist 1 ........................... <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0">
  [117] extcall 330 ............................. <getmemnum(pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0")>
  [120] setobjprop 1036 ......................... pShadowSpr.castNum = getmemnum(pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0")
  [123] jmp [195]
  [126] getprop 1223 ............................ <pMainAction>
  [129] pushcons 12 ............................. <"lay">
  [131] eq ...................................... <pMainAction = "lay">
  [132] jmpifz [161] ............................ if pMainAction = "lay" then / else
  [135] getprop 1247 ............................ <pCanvasSize>
  [138] pushsymb 1265 ........................... <#lay>
  [141] pusharglist 2 ........................... <pCanvasSize, #lay>
  [143] objcall 138 ............................. <pCanvasSize[#lay]>
  [145] setlocal 1 .............................. tSize = pCanvasSize[#lay]
  [147] getprop 1246 ............................ <pShadowSpr>
  [150] pushzero ................................ <0>
  [151] setobjprop 1036 ......................... pShadowSpr.castNum = 0
  [154] pushzero ................................ <0>
  [155] setprop 1252 ............................ pShadowFix = 0
  [158] jmp [195]
  [161] getprop 1247 ............................ <pCanvasSize>
  [164] pushsymb 1248 ........................... <#std>
  [167] pusharglist 2 ........................... <pCanvasSize, #std>
  [169] objcall 138 ............................. <pCanvasSize[#std]>
  [171] setlocal 1 .............................. tSize = pCanvasSize[#std]
  [173] getprop 1246 ............................ <pShadowSpr>
  [176] getobjprop 263 .......................... <pShadowSpr.member>
  [179] getprop 1239 ............................ <pDefShadowMem>
  [182] nteq .................................... <pShadowSpr.member <> pDefShadowMem>
  [183] jmpifz [195] ............................ if pShadowSpr.member <> pDefShadowMem then
  [186] getprop 1246 ............................ <pShadowSpr>
  [189] getprop 1239 ............................ <pDefShadowMem>
  [192] setobjprop 263 .......................... pShadowSpr.member = pDefShadowMem
  [195] getprop 1250 ............................ <pBuffer>
  [198] getobjprop 219 .......................... <pBuffer.width>
  [200] getlocal 1 .............................. <tSize>
  [202] pushint8 1 .............................. <1>
  [204] pusharglist 2 ........................... <tSize, 1>
  [206] objcall 138 ............................. <tSize[1]>
  [208] nteq .................................... <pBuffer.width <> tSize[1]>
  [209] getprop 1250 ............................ <pBuffer>
  [212] getobjprop 261 .......................... <pBuffer.height>
  [215] getlocal 1 .............................. <tSize>
  [217] pushint8 2 .............................. <2>
  [219] pusharglist 2 ........................... <tSize, 2>
  [221] objcall 138 ............................. <tSize[2]>
  [223] nteq .................................... <pBuffer.height <> tSize[2]>
  [224] or ...................................... <(pBuffer.width <> tSize[1]) or (pBuffer.height <> tSize[2])>
  [225] jmpifz [378] ............................ if (pBuffer.width <> tSize[1]) or (pBuffer.height <> tSize[2]) then
  [228] getprop 1249 ............................ <pMember>
  [231] getlocal 1 .............................. <tSize>
  [233] pushint8 1 .............................. <1>
  [235] pusharglist 2 ........................... <tSize, 1>
  [237] objcall 138 ............................. <tSize[1]>
  [239] getlocal 1 .............................. <tSize>
  [241] pushint8 2 .............................. <2>
  [243] pusharglist 2 ........................... <tSize, 2>
  [245] objcall 138 ............................. <tSize[2]>
  [247] getlocal 1 .............................. <tSize>
  [249] pushint8 3 .............................. <3>
  [251] pusharglist 2 ........................... <tSize, 3>
  [253] objcall 138 ............................. <tSize[3]>
  [255] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [257] extcall 260 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [260] setobjprop 260 .......................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [263] getprop 1249 ............................ <pMember>
  [266] pushzero ................................ <0>
  [267] getlocal 1 .............................. <tSize>
  [269] pushint8 2 .............................. <2>
  [271] pusharglist 2 ........................... <tSize, 2>
  [273] objcall 138 ............................. <tSize[2]>
  [275] getlocal 1 .............................. <tSize>
  [277] pushint8 4 .............................. <4>
  [279] pusharglist 2 ........................... <tSize, 4>
  [281] objcall 138 ............................. <tSize[4]>
  [283] add ..................................... <tSize[2] + tSize[4]>
  [284] pusharglist 2 ........................... <0, tSize[2] + tSize[4]>
  [286] extcall 264 ............................. <point(0, tSize[2] + tSize[4])>
  [289] setobjprop 265 .......................... pMember.regPoint = point(0, tSize[2] + tSize[4])
  [292] getprop 297 ............................. <pSprite>
  [295] getlocal 1 .............................. <tSize>
  [297] pushint8 1 .............................. <1>
  [299] pusharglist 2 ........................... <tSize, 1>
  [301] objcall 138 ............................. <tSize[1]>
  [303] setobjprop 219 .......................... pSprite.width = tSize[1]
  [305] getprop 297 ............................. <pSprite>
  [308] getlocal 1 .............................. <tSize>
  [310] pushint8 2 .............................. <2>
  [312] pusharglist 2 ........................... <tSize, 2>
  [314] objcall 138 ............................. <tSize[2]>
  [316] setobjprop 261 .......................... pSprite.height = tSize[2]
  [319] getprop 1245 ............................ <pMatteSpr>
  [322] getlocal 1 .............................. <tSize>
  [324] pushint8 1 .............................. <1>
  [326] pusharglist 2 ........................... <tSize, 1>
  [328] objcall 138 ............................. <tSize[1]>
  [330] setobjprop 219 .......................... pMatteSpr.width = tSize[1]
  [332] getprop 1245 ............................ <pMatteSpr>
  [335] getlocal 1 .............................. <tSize>
  [337] pushint8 2 .............................. <2>
  [339] pusharglist 2 ........................... <tSize, 2>
  [341] objcall 138 ............................. <tSize[2]>
  [343] setobjprop 261 .......................... pMatteSpr.height = tSize[2]
  [346] getlocal 1 .............................. <tSize>
  [348] pushint8 1 .............................. <1>
  [350] pusharglist 2 ........................... <tSize, 1>
  [352] objcall 138 ............................. <tSize[1]>
  [354] getlocal 1 .............................. <tSize>
  [356] pushint8 2 .............................. <2>
  [358] pusharglist 2 ........................... <tSize, 2>
  [360] objcall 138 ............................. <tSize[2]>
  [362] getlocal 1 .............................. <tSize>
  [364] pushint8 3 .............................. <3>
  [366] pusharglist 2 ........................... <tSize, 3>
  [368] objcall 138 ............................. <tSize[3]>
  [370] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [372] extcall 260 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [375] setprop 1250 ............................ pBuffer = image(tSize[1], tSize[2], tSize[3])
  [378] getprop 1209 ............................ <pFlipList>
  [381] getprop 376 ............................. <pDirection>
  [384] pushint8 1 .............................. <1>
  [386] add ..................................... <pDirection + 1>
  [387] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [389] objcall 138 ............................. <pFlipList[pDirection + 1]>
  [391] getprop 376 ............................. <pDirection>
  [394] nteq .................................... <pFlipList[pDirection + 1] <> pDirection>
  [395] getprop 376 ............................. <pDirection>
  [398] pushint8 3 .............................. <3>
  [400] eq ...................................... <pDirection = 3>
  [401] getprop 1263 ............................ <pHeadDir>
  [404] pushint8 4 .............................. <4>
  [406] eq ...................................... <pHeadDir = 4>
  [407] and ..................................... <(pDirection = 3) and (pHeadDir = 4)>
  [408] or ...................................... <(pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4))>
  [409] getprop 376 ............................. <pDirection>
  [412] pushint8 7 .............................. <7>
  [414] eq ...................................... <pDirection = 7>
  [415] getprop 1263 ............................ <pHeadDir>
  [418] pushint8 6 .............................. <6>
  [420] eq ...................................... <pHeadDir = 6>
  [421] and ..................................... <(pDirection = 7) and (pHeadDir = 6)>
  [422] or ...................................... <(pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4)) or ((pDirection = 7) and (pHeadDir = 6))>
  [423] jmpifz [500] ............................ if (pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4)) or ((pDirection = 7) and (pHeadDir = 6)) then / else
  [426] getprop 1249 ............................ <pMember>
  [429] getprop 1249 ............................ <pMember>
  [432] getchainedprop 260 ...................... <pMember.image>
  [435] getobjprop 219 .......................... <pMember.image.width>
  [437] getprop 1249 ............................ <pMember>
  [440] pushsymb 265 ............................ <#regPoint>
  [443] pushint8 2 .............................. <2>
  [445] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [447] objcall 134 ............................. <pMember.regPoint[2]>
  [449] pusharglist 2 ........................... <pMember.image.width, pMember.regPoint[2]>
  [451] extcall 264 ............................. <point(pMember.image.width, pMember.regPoint[2])>
  [454] setobjprop 265 .......................... pMember.regPoint = point(pMember.image.width, pMember.regPoint[2])
  [457] getprop 959 ............................. <pXFactor>
  [460] setprop 1252 ............................ pShadowFix = pXFactor
  [463] getprop 297 ............................. <pSprite>
  [466] getobjprop 1006 ......................... <pSprite.flipH>
  [469] not ..................................... <not pSprite.flipH>
  [470] jmpifz [497] ............................ if not pSprite.flipH then
  [473] getprop 297 ............................. <pSprite>
  [476] pushint8 1 .............................. <1>
  [478] setobjprop 1006 ......................... pSprite.flipH = 1
  [481] getprop 1245 ............................ <pMatteSpr>
  [484] pushint8 1 .............................. <1>
  [486] setobjprop 1006 ......................... pMatteSpr.flipH = 1
  [489] getprop 1246 ............................ <pShadowSpr>
  [492] pushint8 1 .............................. <1>
  [494] setobjprop 1006 ......................... pShadowSpr.flipH = 1
  [497] jmp [558]
  [500] getprop 1249 ............................ <pMember>
  [503] pushzero ................................ <0>
  [504] getprop 1249 ............................ <pMember>
  [507] pushsymb 265 ............................ <#regPoint>
  [510] pushint8 2 .............................. <2>
  [512] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [514] objcall 134 ............................. <pMember.regPoint[2]>
  [516] pusharglist 2 ........................... <0, pMember.regPoint[2]>
  [518] extcall 264 ............................. <point(0, pMember.regPoint[2])>
  [521] setobjprop 265 .......................... pMember.regPoint = point(0, pMember.regPoint[2])
  [524] pushzero ................................ <0>
  [525] setprop 1252 ............................ pShadowFix = 0
  [528] getprop 297 ............................. <pSprite>
  [531] getobjprop 1006 ......................... <pSprite.flipH>
  [534] jmpifz [558] ............................ if pSprite.flipH then
  [537] getprop 297 ............................. <pSprite>
  [540] pushzero ................................ <0>
  [541] setobjprop 1006 ......................... pSprite.flipH = 0
  [544] getprop 1245 ............................ <pMatteSpr>
  [547] pushzero ................................ <0>
  [548] setobjprop 1006 ......................... pMatteSpr.flipH = 0
  [551] getprop 1246 ............................ <pShadowSpr>
  [554] pushzero ................................ <0>
  [555] setobjprop 1006 ......................... pShadowSpr.flipH = 0
  [558] getprop 1242 ............................ <pCorrectLocZ>
  [561] jmpifz [583] ............................ if pCorrectLocZ then / else
  [564] getprop 469 ............................. <pLocH>
  [567] getprop 1216 ............................ <pRestingHeight>
  [570] add ..................................... <pLocH + pRestingHeight>
  [571] pushint16 1000 .......................... <1000>
  [574] mul ..................................... <(pLocH + pRestingHeight) * 1000>
  [575] pushint8 2 .............................. <2>
  [577] add ..................................... <((pLocH + pRestingHeight) * 1000) + 2>
  [578] setlocal 2 .............................. tOffZ = ((pLocH + pRestingHeight) * 1000) + 2
  [580] jmp [587]
  [583] pushint8 2 .............................. <2>
  [585] setlocal 2 .............................. tOffZ = 2
  [587] getprop 297 ............................. <pSprite>
  [590] getprop 1212 ............................ <pScreenLoc>
  [593] pushint8 1 .............................. <1>
  [595] pusharglist 2 ........................... <pScreenLoc, 1>
  [597] objcall 138 ............................. <pScreenLoc[1]>
  [599] setobjprop 222 .......................... pSprite.locH = pScreenLoc[1]
  [601] getprop 297 ............................. <pSprite>
  [604] getprop 1212 ............................ <pScreenLoc>
  [607] pushint8 2 .............................. <2>
  [609] pusharglist 2 ........................... <pScreenLoc, 2>
  [611] objcall 138 ............................. <pScreenLoc[2]>
  [613] setobjprop 471 .......................... pSprite.locV = pScreenLoc[2]
  [616] getprop 1245 ............................ <pMatteSpr>
  [619] getprop 297 ............................. <pSprite>
  [622] getobjprop 332 .......................... <pSprite.loc>
  [625] setobjprop 332 .......................... pMatteSpr.loc = pSprite.loc
  [628] getprop 1246 ............................ <pShadowSpr>
  [631] getprop 297 ............................. <pSprite>
  [634] getobjprop 332 .......................... <pSprite.loc>
  [637] getprop 1252 ............................ <pShadowFix>
  [640] pushzero ................................ <0>
  [641] pusharglist 2 ........................... <[pShadowFix, 0]>
  [643] pushlist ................................ <[pShadowFix, 0]>
  [644] add ..................................... <pSprite.loc + [pShadowFix, 0]>
  [645] setobjprop 332 .......................... pShadowSpr.loc = pSprite.loc + [pShadowFix, 0]
  [648] getprop 1244 ............................ <pBaseLocZ>
  [651] pushzero ................................ <0>
  [652] nteq .................................... <pBaseLocZ <> 0>
  [653] jmpifz [667] ............................ if pBaseLocZ <> 0 then / else
  [656] getprop 297 ............................. <pSprite>
  [659] getprop 1244 ............................ <pBaseLocZ>
  [662] setobjprop 130 .......................... pSprite.locZ = pBaseLocZ
  [664] jmp [688]
  [667] getprop 297 ............................. <pSprite>
  [670] getprop 1212 ............................ <pScreenLoc>
  [673] pushint8 3 .............................. <3>
  [675] pusharglist 2 ........................... <pScreenLoc, 3>
  [677] objcall 138 ............................. <pScreenLoc[3]>
  [679] getlocal 2 .............................. <tOffZ>
  [681] add ..................................... <pScreenLoc[3] + tOffZ>
  [682] getprop 1244 ............................ <pBaseLocZ>
  [685] add ..................................... <pScreenLoc[3] + tOffZ + pBaseLocZ>
  [686] setobjprop 130 .......................... pSprite.locZ = pScreenLoc[3] + tOffZ + pBaseLocZ
  [688] getprop 1245 ............................ <pMatteSpr>
  [691] getprop 297 ............................. <pSprite>
  [694] getobjprop 130 .......................... <pSprite.locZ>
  [696] pushint8 1 .............................. <1>
  [698] add ..................................... <pSprite.locZ + 1>
  [699] setobjprop 130 .......................... pMatteSpr.locZ = pSprite.locZ + 1
  [701] getprop 1246 ............................ <pShadowSpr>
  [704] getprop 297 ............................. <pSprite>
  [707] getobjprop 130 .......................... <pSprite.locZ>
  [709] pushint8 3 .............................. <3>
  [711] sub ..................................... <pSprite.locZ - 3>
  [712] setobjprop 130 .......................... pShadowSpr.locZ = pSprite.locZ - 3
  [714] pushzero ................................ <0>
  [715] pushzero ................................ <0>
  [716] pushzero ................................ <0>
  [717] pushzero ................................ <0>
  [718] pusharglist 4 ........................... <0, 0, 0, 0>
  [720] extcall 221 ............................. <rect(0, 0, 0, 0)>
  [722] setprop 1211 ............................ pUpdateRect = rect(0, 0, 0, 0)
  [725] getprop 1250 ............................ <pBuffer>
  [728] getprop 1250 ............................ <pBuffer>
  [731] getobjprop 221 .......................... <pBuffer.rect>
  [733] getprop 1235 ............................ <pAlphaColor>
  [736] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [738] objcall 1292 ............................ pBuffer.fill(pBuffer.rect, pAlphaColor)
  [741] pushsymb 553 ............................ <#update>
  [744] getprop 1207 ............................ <pPartList>
  [747] pusharglistnoret 2 ...................... <#update, pPartList>
  [749] extcall 142 ............................. call(#update, pPartList)
  [751] getprop 1249 ............................ <pMember>
  [754] getchainedprop 260 ...................... <pMember.image>
  [757] getprop 1250 ............................ <pBuffer>
  [760] getprop 1211 ............................ <pUpdateRect>
  [763] getprop 1211 ............................ <pUpdateRect>
  [766] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pUpdateRect, pUpdateRect>
  [768] objcall 293 ............................. pMember.image.copyPixels(pBuffer, pUpdateRect, pUpdateRect)
  [771] ret
end

on reDraw me
  [  0] getprop 1250 ............................ <pBuffer>
  [  3] getprop 1250 ............................ <pBuffer>
  [  6] getobjprop 221 .......................... <pBuffer.rect>
  [  8] getprop 1235 ............................ <pAlphaColor>
  [ 11] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [ 13] objcall 1292 ............................ pBuffer.fill(pBuffer.rect, pAlphaColor)
  [ 16] pushsymb 647 ............................ <#render>
  [ 19] getprop 1207 ............................ <pPartList>
  [ 22] pusharglistnoret 2 ...................... <#render, pPartList>
  [ 24] extcall 142 ............................. call(#render, pPartList)
  [ 26] getprop 1249 ............................ <pMember>
  [ 29] getchainedprop 260 ...................... <pMember.image>
  [ 32] getprop 1250 ............................ <pBuffer>
  [ 35] getprop 1250 ............................ <pBuffer>
  [ 38] getobjprop 221 .......................... <pBuffer.rect>
  [ 40] getprop 1250 ............................ <pBuffer>
  [ 43] getobjprop 221 .......................... <pBuffer.rect>
  [ 45] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pBuffer.rect, pBuffer.rect>
  [ 47] objcall 293 ............................. pMember.image.copyPixels(pBuffer, pBuffer.rect, pBuffer.rect)
  [ 50] ret
end

on setPartLists me, tmodels
  [  0] getprop 1223 ............................ <pMainAction>
  [  3] setlocal 0 .............................. tAction = pMainAction
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setprop 1207 ............................ pPartList = []
  [ 11] pushcons 18 ............................. <"human.parts.">
  [ 13] getprop 1253 ............................ <pPeopleSize>
  [ 16] joinstr ................................. <"human.parts." & pPeopleSize>
  [ 17] pusharglist 1 ........................... <"human.parts." & pPeopleSize>
  [ 19] extcall 108 ............................. <getVariableValue("human.parts." & pPeopleSize)>
  [ 21] setlocal 1 .............................. tPartDefinition = getVariableValue("human.parts." & pPeopleSize)
  [ 23] pushint8 1 .............................. <1>
  [ 25] setlocal 2
  [ 27] getlocal 2
  [ 29] getlocal 1 .............................. <tPartDefinition>
  [ 31] getobjprop 149 .......................... <tPartDefinition.count>
  [ 33] lteq
  [ 34] jmpifz [422] ............................ repeat with i = 1 to tPartDefinition.count
  [ 37] getlocal 1 .............................. <tPartDefinition>
  [ 39] getlocal 2 .............................. <i>
  [ 41] pusharglist 2 ........................... <tPartDefinition, i>
  [ 43] objcall 138 ............................. <tPartDefinition[i]>
  [ 45] setlocal 3 .............................. tPartSymbol = tPartDefinition[i]
  [ 47] getparam 1 .............................. <tmodels>
  [ 49] getlocal 3 .............................. <tPartSymbol>
  [ 51] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [ 53] objcall 138 ............................. <tmodels[tPartSymbol]>
  [ 55] pusharglist 1 ........................... <tmodels[tPartSymbol]>
  [ 57] extcall 253 ............................. <voidp(tmodels[tPartSymbol])>
  [ 59] jmpifz [ 73] ............................ if voidp(tmodels[tPartSymbol]) then
  [ 62] getparam 1 .............................. <tmodels>
  [ 64] getlocal 3 .............................. <tPartSymbol>
  [ 66] pusharglist 0 ........................... <[:]>
  [ 68] pushproplist ............................ <[:]>
  [ 69] pusharglistnoret 3 ...................... <tmodels, tPartSymbol, [:]>
  [ 71] objcall 136 ............................. tmodels[tPartSymbol] = [:]
  [ 73] getparam 1 .............................. <tmodels>
  [ 75] getlocal 3 .............................. <tPartSymbol>
  [ 77] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [ 79] objcall 138 ............................. <tmodels[tPartSymbol]>
  [ 81] pushcons 34 ............................. <"model">
  [ 83] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [ 85] objcall 138 ............................. <tmodels[tPartSymbol]["model"]>
  [ 87] pusharglist 1 ........................... <tmodels[tPartSymbol]["model"]>
  [ 89] extcall 253 ............................. <voidp(tmodels[tPartSymbol]["model"])>
  [ 91] jmpifz [110] ............................ if voidp(tmodels[tPartSymbol]["model"]) then
  [ 94] getparam 1 .............................. <tmodels>
  [ 96] getlocal 3 .............................. <tPartSymbol>
  [ 98] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [100] objcall 138 ............................. <tmodels[tPartSymbol]>
  [102] pushcons 34 ............................. <"model">
  [104] pushcons 35 ............................. <"001">
  [106] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "model", "001">
  [108] objcall 136 ............................. tmodels[tPartSymbol]["model"] = "001"
  [110] getparam 1 .............................. <tmodels>
  [112] getlocal 3 .............................. <tPartSymbol>
  [114] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [116] objcall 138 ............................. <tmodels[tPartSymbol]>
  [118] pushcons 36 ............................. <"color">
  [120] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [122] objcall 138 ............................. <tmodels[tPartSymbol]["color"]>
  [124] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [126] extcall 253 ............................. <voidp(tmodels[tPartSymbol]["color"])>
  [128] jmpifz [152] ............................ if voidp(tmodels[tPartSymbol]["color"]) then
  [131] getparam 1 .............................. <tmodels>
  [133] getlocal 3 .............................. <tPartSymbol>
  [135] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [137] objcall 138 ............................. <tmodels[tPartSymbol]>
  [139] pushcons 36 ............................. <"color">
  [141] pushcons 37 ............................. <"EEEEEE">
  [143] pusharglist 1 ........................... <"EEEEEE">
  [145] extcall 283 ............................. <rgb("EEEEEE")>
  [148] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "color", rgb("EEEEEE")>
  [150] objcall 136 ............................. tmodels[tPartSymbol]["color"] = rgb("EEEEEE")
  [152] getlocal 3 .............................. <tPartSymbol>
  [154] pushcons 16 ............................. <"fc">
  [156] eq ...................................... <tPartSymbol = "fc">
  [157] getparam 1 .............................. <tmodels>
  [159] getlocal 3 .............................. <tPartSymbol>
  [161] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [163] objcall 138 ............................. <tmodels[tPartSymbol]>
  [165] pushcons 34 ............................. <"model">
  [167] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [169] objcall 138 ............................. <tmodels[tPartSymbol]["model"]>
  [171] pushcons 35 ............................. <"001">
  [173] nteq .................................... <tmodels[tPartSymbol]["model"] <> "001">
  [174] and ..................................... <(tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001")>
  [175] getprop 959 ............................. <pXFactor>
  [178] pushint8 33 ............................. <33>
  [180] lt ...................................... <pXFactor < 33>
  [181] and ..................................... <(tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001") and (pXFactor < 33)>
  [182] jmpifz [201] ............................ if (tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001") and (pXFactor < 33) then
  [185] getparam 1 .............................. <tmodels>
  [187] getlocal 3 .............................. <tPartSymbol>
  [189] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [191] objcall 138 ............................. <tmodels[tPartSymbol]>
  [193] pushcons 34 ............................. <"model">
  [195] pushcons 35 ............................. <"001">
  [197] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "model", "001">
  [199] objcall 136 ............................. tmodels[tPartSymbol]["model"] = "001"
  [201] pushsymb 111 ............................ <#temp>
  [203] getprop 1243 ............................ <pPartClass>
  [206] pusharglist 2 ........................... <#temp, pPartClass>
  [208] extcall 109 ............................. <createObject(#temp, pPartClass)>
  [210] setlocal 4 .............................. tPartObj = createObject(#temp, pPartClass)
  [212] getparam 1 .............................. <tmodels>
  [214] getlocal 3 .............................. <tPartSymbol>
  [216] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [218] objcall 138 ............................. <tmodels[tPartSymbol]>
  [220] pushcons 36 ............................. <"color">
  [222] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [224] objcall 138 ............................. <tmodels[tPartSymbol]["color"]>
  [226] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [228] extcall 284 ............................. <stringp(tmodels[tPartSymbol]["color"])>
  [231] jmpifz [261] ............................ if stringp(tmodels[tPartSymbol]["color"]) then
  [234] pushcons 38 ............................. <"rgb(">
  [236] getparam 1 .............................. <tmodels>
  [238] getlocal 3 .............................. <tPartSymbol>
  [240] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [242] objcall 138 ............................. <tmodels[tPartSymbol]>
  [244] pushcons 36 ............................. <"color">
  [246] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [248] objcall 138 ............................. <tmodels[tPartSymbol]["color"]>
  [250] joinstr ................................. <"rgb(" & tmodels[tPartSymbol]["color"]>
  [251] pushcons 39 ............................. <")">
  [253] joinstr ................................. <"rgb(" & tmodels[tPartSymbol]["color"] & ")">
  [254] pusharglist 1 ........................... <"rgb(" & tmodels[tPartSymbol]["color"] & ")">
  [256] extcall 385 ............................. <value("rgb(" & tmodels[tPartSymbol]["color"] & ")")>
  [259] setlocal 5 .............................. tColor = value("rgb(" & tmodels[tPartSymbol]["color"] & ")")
  [261] getparam 1 .............................. <tmodels>
  [263] getlocal 3 .............................. <tPartSymbol>
  [265] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [267] objcall 138 ............................. <tmodels[tPartSymbol]>
  [269] pushcons 36 ............................. <"color">
  [271] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [273] objcall 138 ............................. <tmodels[tPartSymbol]["color"]>
  [275] getobjprop 215 .......................... <tmodels[tPartSymbol]["color"].ilk>
  [277] pushsymb 327 ............................ <#color>
  [280] nteq .................................... <tmodels[tPartSymbol]["color"].ilk <> #color>
  [281] jmpifz [308] ............................ if tmodels[tPartSymbol]["color"].ilk <> #color then / else
  [284] getparam 1 .............................. <tmodels>
  [286] getlocal 3 .............................. <tPartSymbol>
  [288] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [290] objcall 138 ............................. <tmodels[tPartSymbol]>
  [292] pushcons 36 ............................. <"color">
  [294] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [296] objcall 138 ............................. <tmodels[tPartSymbol]["color"]>
  [298] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [300] extcall 283 ............................. <rgb(tmodels[tPartSymbol]["color"])>
  [303] setlocal 5 .............................. tColor = rgb(tmodels[tPartSymbol]["color"])
  [305] jmp [324]
  [308] getparam 1 .............................. <tmodels>
  [310] getlocal 3 .............................. <tPartSymbol>
  [312] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [314] objcall 138 ............................. <tmodels[tPartSymbol]>
  [316] pushcons 36 ............................. <"color">
  [318] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [320] objcall 138 ............................. <tmodels[tPartSymbol]["color"]>
  [322] setlocal 5 .............................. tColor = tmodels[tPartSymbol]["color"]
  [324] getlocal 5 .............................. <tColor>
  [326] getobjprop 1295 ......................... <tColor.red>
  [329] getlocal 5 .............................. <tColor>
  [331] getobjprop 1296 ......................... <tColor.green>
  [334] add ..................................... <tColor.red + tColor.green>
  [335] getlocal 5 .............................. <tColor>
  [337] getobjprop 1297 ......................... <tColor.blue>
  [340] add ..................................... <tColor.red + tColor.green + tColor.blue>
  [341] pushint16 238 ........................... <238>
  [344] pushint8 3 .............................. <3>
  [346] mul ..................................... <238 * 3>
  [347] gt ...................................... <(tColor.red + tColor.green + tColor.blue) > (238 * 3)>
  [348] jmpifz [360] ............................ if (tColor.red + tColor.green + tColor.blue) > (238 * 3) then
  [351] pushcons 37 ............................. <"EEEEEE">
  [353] pusharglist 1 ........................... <"EEEEEE">
  [355] extcall 283 ............................. <rgb("EEEEEE")>
  [358] setlocal 5 .............................. tColor = rgb("EEEEEE")
  [360] getlocal 4 .............................. <tPartObj>
  [362] getlocal 3 .............................. <tPartSymbol>
  [364] getparam 1 .............................. <tmodels>
  [366] getlocal 3 .............................. <tPartSymbol>
  [368] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [370] objcall 138 ............................. <tmodels[tPartSymbol]>
  [372] pushcons 34 ............................. <"model">
  [374] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [376] objcall 138 ............................. <tmodels[tPartSymbol]["model"]>
  [378] getlocal 5 .............................. <tColor>
  [380] getprop 376 ............................. <pDirection>
  [383] getlocal 0 .............................. <tAction>
  [385] getparam 0 .............................. <me>
  [387] pusharglistnoret 7 ...................... <tPartObj, tPartSymbol, tmodels[tPartSymbol]["model"], tColor, pDirection, tAction, me>
  [389] objcall 140 ............................. tPartObj.define(tPartSymbol, tmodels[tPartSymbol]["model"], tColor, pDirection, tAction, me)
  [391] getprop 1207 ............................ <pPartList>
  [394] getlocal 4 .............................. <tPartObj>
  [396] pusharglistnoret 2 ...................... <pPartList, tPartObj>
  [398] objcall 151 ............................. pPartList.add(tPartObj)
  [400] getprop 1236 ............................ <pColors>
  [403] getlocal 3 .............................. <tPartSymbol>
  [405] getlocal 5 .............................. <tColor>
  [407] pusharglistnoret 3 ...................... <pColors, tPartSymbol, tColor>
  [409] objcall 639 ............................. pColors.setaProp(tPartSymbol, tColor)
  [412] pushint8 1
  [414] getlocal 2
  [416] add
  [417] setlocal 2
  [419] endrepeat [ 27]
  [422] pusharglist 0 ........................... <[:]>
  [424] pushproplist ............................ <[:]>
  [425] setprop 1208 ............................ pPartIndex = [:]
  [428] pushint8 1 .............................. <1>
  [430] setlocal 2
  [432] getlocal 2
  [434] getprop 1207 ............................ <pPartList>
  [437] getobjprop 149 .......................... <pPartList.count>
  [439] lteq
  [440] jmpifz [473] ............................ repeat with i = 1 to pPartList.count
  [443] getprop 1208 ............................ <pPartIndex>
  [446] getprop 1207 ............................ <pPartList>
  [449] getlocal 2 .............................. <i>
  [451] pusharglist 2 ........................... <pPartList, i>
  [453] objcall 138 ............................. <pPartList[i]>
  [455] getobjprop 1298 ......................... <pPartList[i].pPart>
  [458] getlocal 2 .............................. <i>
  [460] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [462] objcall 136 ............................. pPartIndex[pPartList[i].pPart] = i
  [464] pushint8 1
  [466] getlocal 2
  [468] add
  [469] setlocal 2
  [471] endrepeat [432]
  [473] pushint8 1 .............................. <1>
  [475] pusharglistnoret 1 ...................... <1>
  [477] extcall 116 ............................. return 1
  [479] ret
end

on arrangeParts me
  [  0] getprop 1208 ............................ <pPartIndex>
  [  3] pushcons 40 ............................. <"lg">
  [  5] pusharglist 2 ........................... <pPartIndex, "lg">
  [  7] objcall 138 ............................. <pPartIndex["lg"]>
  [  9] getprop 1208 ............................ <pPartIndex>
  [ 12] pushcons 30 ............................. <"sh">
  [ 14] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 16] objcall 138 ............................. <pPartIndex["sh"]>
  [ 18] lt ...................................... <pPartIndex["lg"] < pPartIndex["sh"]>
  [ 19] jmpifz [ 47] ............................ if pPartIndex["lg"] < pPartIndex["sh"] then / else
  [ 22] getprop 1208 ............................ <pPartIndex>
  [ 25] pushcons 40 ............................. <"lg">
  [ 27] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 29] objcall 138 ............................. <pPartIndex["lg"]>
  [ 31] setlocal 0 .............................. tIndex1 = pPartIndex["lg"]
  [ 33] getprop 1208 ............................ <pPartIndex>
  [ 36] pushcons 30 ............................. <"sh">
  [ 38] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 40] objcall 138 ............................. <pPartIndex["sh"]>
  [ 42] setlocal 1 .............................. tIndex2 = pPartIndex["sh"]
  [ 44] jmp [ 69]
  [ 47] getprop 1208 ............................ <pPartIndex>
  [ 50] pushcons 30 ............................. <"sh">
  [ 52] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 54] objcall 138 ............................. <pPartIndex["sh"]>
  [ 56] setlocal 0 .............................. tIndex1 = pPartIndex["sh"]
  [ 58] getprop 1208 ............................ <pPartIndex>
  [ 61] pushcons 40 ............................. <"lg">
  [ 63] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 65] objcall 138 ............................. <pPartIndex["lg"]>
  [ 67] setlocal 1 .............................. tIndex2 = pPartIndex["lg"]
  [ 69] getprop 1207 ............................ <pPartList>
  [ 72] getprop 1208 ............................ <pPartIndex>
  [ 75] pushcons 40 ............................. <"lg">
  [ 77] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 79] objcall 138 ............................. <pPartIndex["lg"]>
  [ 81] pusharglist 2 ........................... <pPartList, pPartIndex["lg"]>
  [ 83] objcall 138 ............................. <pPartList[pPartIndex["lg"]]>
  [ 85] setlocal 2 .............................. tLG = pPartList[pPartIndex["lg"]]
  [ 87] getprop 1207 ............................ <pPartList>
  [ 90] getprop 1208 ............................ <pPartIndex>
  [ 93] pushcons 30 ............................. <"sh">
  [ 95] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 97] objcall 138 ............................. <pPartIndex["sh"]>
  [ 99] pusharglist 2 ........................... <pPartList, pPartIndex["sh"]>
  [101] objcall 138 ............................. <pPartList[pPartIndex["sh"]]>
  [103] setlocal 3 .............................. tSH = pPartList[pPartIndex["sh"]]
  [105] getprop 1223 ............................ <pMainAction>
  [108] peek 0 .................................. case pMainAction of
  [110] pushcons 31 ............................. <"sit">
  [112] nteq
  [113] jmpifz [124] ............................ (case) "sit", ...
  [116] peek 0
  [118] pushcons 12 ............................. <"lay">
  [120] eq
  [121] jmpifz [192] ............................ (case) ..., "lay":
  [124] getprop 1209 ............................ <pFlipList>
  [127] getprop 376 ............................. <pDirection>
  [130] pushint8 1 .............................. <1>
  [132] add ..................................... <pDirection + 1>
  [133] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [135] objcall 138 ............................. <pFlipList[pDirection + 1]>
  [137] pushzero ................................ <0>
  [138] eq ...................................... <pFlipList[pDirection + 1] = 0>
  [139] jmpifz [167] ............................ if pFlipList[pDirection + 1] = 0 then / else
  [142] getprop 1207 ............................ <pPartList>
  [145] getlocal 0 .............................. <tIndex1>
  [147] getlocal 3 .............................. <tSH>
  [149] pusharglistnoret 3 ...................... <pPartList, tIndex1, tSH>
  [151] objcall 136 ............................. pPartList[tIndex1] = tSH
  [153] getprop 1207 ............................ <pPartList>
  [156] getlocal 1 .............................. <tIndex2>
  [158] getlocal 2 .............................. <tLG>
  [160] pusharglistnoret 3 ...................... <pPartList, tIndex2, tLG>
  [162] objcall 136 ............................. pPartList[tIndex2] = tLG
  [164] jmp [189]
  [167] getprop 1207 ............................ <pPartList>
  [170] getlocal 0 .............................. <tIndex1>
  [172] getlocal 2 .............................. <tLG>
  [174] pusharglistnoret 3 ...................... <pPartList, tIndex1, tLG>
  [176] objcall 136 ............................. pPartList[tIndex1] = tLG
  [178] getprop 1207 ............................ <pPartList>
  [181] getlocal 1 .............................. <tIndex2>
  [183] getlocal 3 .............................. <tSH>
  [185] pusharglistnoret 3 ...................... <pPartList, tIndex2, tSH>
  [187] objcall 136 ............................. pPartList[tIndex2] = tSH
  [189] jmp [214] ............................... (case) otherwise:
  [192] getprop 1207 ............................ <pPartList>
  [195] getlocal 0 .............................. <tIndex1>
  [197] getlocal 3 .............................. <tSH>
  [199] pusharglistnoret 3 ...................... <pPartList, tIndex1, tSH>
  [201] objcall 136 ............................. pPartList[tIndex1] = tSH
  [203] getprop 1207 ............................ <pPartList>
  [206] getlocal 1 .............................. <tIndex2>
  [208] getlocal 2 .............................. <tLG>
  [210] pusharglistnoret 3 ...................... <pPartList, tIndex2, tLG>
  [212] objcall 136 ............................. pPartList[tIndex2] = tLG
  [214] pop 1 ................................... end case
  [216] getprop 1207 ............................ <pPartList>
  [219] getprop 1208 ............................ <pPartIndex>
  [222] pushcons 41 ............................. <"rs">
  [224] pusharglist 2 ........................... <pPartIndex, "rs">
  [226] objcall 138 ............................. <pPartIndex["rs"]>
  [228] pusharglist 2 ........................... <pPartList, pPartIndex["rs"]>
  [230] objcall 138 ............................. <pPartList[pPartIndex["rs"]]>
  [232] setlocal 4 .............................. tRS = pPartList[pPartIndex["rs"]]
  [234] getprop 1207 ............................ <pPartList>
  [237] getprop 1208 ............................ <pPartIndex>
  [240] pushcons 42 ............................. <"rh">
  [242] pusharglist 2 ........................... <pPartIndex, "rh">
  [244] objcall 138 ............................. <pPartIndex["rh"]>
  [246] pusharglist 2 ........................... <pPartList, pPartIndex["rh"]>
  [248] objcall 138 ............................. <pPartList[pPartIndex["rh"]]>
  [250] setlocal 5 .............................. tRH = pPartList[pPartIndex["rh"]]
  [252] getprop 1207 ............................ <pPartList>
  [255] getprop 1208 ............................ <pPartIndex>
  [258] pushcons 43 ............................. <"ri">
  [260] pusharglist 2 ........................... <pPartIndex, "ri">
  [262] objcall 138 ............................. <pPartIndex["ri"]>
  [264] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [266] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [268] setlocal 6 .............................. tRI = pPartList[pPartIndex["ri"]]
  [270] getprop 1207 ............................ <pPartList>
  [273] getprop 1208 ............................ <pPartIndex>
  [276] pushcons 41 ............................. <"rs">
  [278] pusharglist 2 ........................... <pPartIndex, "rs">
  [280] objcall 138 ............................. <pPartIndex["rs"]>
  [282] pusharglistnoret 2 ...................... <pPartList, pPartIndex["rs"]>
  [284] objcall 764 ............................. pPartList.deleteAt(pPartIndex["rs"])
  [287] getprop 1207 ............................ <pPartList>
  [290] getprop 1208 ............................ <pPartIndex>
  [293] pushcons 42 ............................. <"rh">
  [295] pusharglist 2 ........................... <pPartIndex, "rh">
  [297] objcall 138 ............................. <pPartIndex["rh"]>
  [299] pusharglistnoret 2 ...................... <pPartList, pPartIndex["rh"]>
  [301] objcall 764 ............................. pPartList.deleteAt(pPartIndex["rh"])
  [304] getprop 1207 ............................ <pPartList>
  [307] getprop 1208 ............................ <pPartIndex>
  [310] pushcons 43 ............................. <"ri">
  [312] pusharglist 2 ........................... <pPartIndex, "ri">
  [314] objcall 138 ............................. <pPartIndex["ri"]>
  [316] pusharglistnoret 2 ...................... <pPartList, pPartIndex["ri"]>
  [318] objcall 764 ............................. pPartList.deleteAt(pPartIndex["ri"])
  [321] getlocal 5 .............................. <tRH>
  [323] getobjprop 1301 ......................... <tRH.pActionRh>
  [326] pushcons 44 ............................. <"drk">
  [328] eq ...................................... <tRH.pActionRh = "drk">
  [329] pushzero ................................ <0>
  [330] pushint8 6 .............................. <6>
  [332] pusharglist 2 ........................... <[0, 6]>
  [334] pushlist ................................ <[0, 6]>
  [335] getprop 376 ............................. <pDirection>
  [338] pusharglist 2 ........................... <[0, 6], pDirection>
  [340] objcall 207 ............................. <[0, 6].getPos(pDirection)>
  [342] pushzero ................................ <0>
  [343] nteq .................................... <[0, 6].getPos(pDirection) <> 0>
  [344] and ..................................... <(tRH.pActionRh = "drk") and ([0, 6].getPos(pDirection) <> 0)>
  [345] jmpifz [383] ............................ if (tRH.pActionRh = "drk") and ([0, 6].getPos(pDirection) <> 0) then / else
  [348] getprop 1207 ............................ <pPartList>
  [351] pushint8 1 .............................. <1>
  [353] getlocal 6 .............................. <tRI>
  [355] pusharglistnoret 3 ...................... <pPartList, 1, tRI>
  [357] objcall 1302 ............................ pPartList.addAt(1, tRI)
  [360] getprop 1207 ............................ <pPartList>
  [363] getlocal 5 .............................. <tRH>
  [365] pusharglistnoret 2 ...................... <pPartList, tRH>
  [367] objcall 765 ............................. pPartList.append(tRH)
  [370] getprop 1207 ............................ <pPartList>
  [373] getlocal 4 .............................. <tRS>
  [375] pusharglistnoret 2 ...................... <pPartList, tRS>
  [377] objcall 765 ............................. pPartList.append(tRS)
  [380] jmp [515]
  [383] getprop 376 ............................. <pDirection>
  [386] pushint8 7 .............................. <7>
  [388] eq ...................................... <pDirection = 7>
  [389] jmpifz [431] ............................ if pDirection = 7 then / else
  [392] getprop 1207 ............................ <pPartList>
  [395] pushint8 1 .............................. <1>
  [397] getlocal 6 .............................. <tRI>
  [399] pusharglistnoret 3 ...................... <pPartList, 1, tRI>
  [401] objcall 1302 ............................ pPartList.addAt(1, tRI)
  [404] getprop 1207 ............................ <pPartList>
  [407] pushint8 2 .............................. <2>
  [409] getlocal 5 .............................. <tRH>
  [411] pusharglistnoret 3 ...................... <pPartList, 2, tRH>
  [413] objcall 1302 ............................ pPartList.addAt(2, tRH)
  [416] getprop 1207 ............................ <pPartList>
  [419] pushint8 3 .............................. <3>
  [421] getlocal 4 .............................. <tRS>
  [423] pusharglistnoret 3 ...................... <pPartList, 3, tRS>
  [425] objcall 1302 ............................ pPartList.addAt(3, tRS)
  [428] jmp [515]
  [431] getprop 376 ............................. <pDirection>
  [434] pushint8 3 .............................. <3>
  [436] eq ...................................... <pDirection = 3>
  [437] getprop 1228 ............................ <pDancing>
  [440] pushzero ................................ <0>
  [441] gt ...................................... <pDancing > 0>
  [442] and ..................................... <(pDirection = 3) and (pDancing > 0)>
  [443] jmpifz [485] ............................ if (pDirection = 3) and (pDancing > 0) then / else
  [446] getprop 1207 ............................ <pPartList>
  [449] pushint8 7 .............................. <7>
  [451] getlocal 6 .............................. <tRI>
  [453] pusharglistnoret 3 ...................... <pPartList, 7, tRI>
  [455] objcall 1302 ............................ pPartList.addAt(7, tRI)
  [458] getprop 1207 ............................ <pPartList>
  [461] pushint8 8 .............................. <8>
  [463] getlocal 5 .............................. <tRH>
  [465] pusharglistnoret 3 ...................... <pPartList, 8, tRH>
  [467] objcall 1302 ............................ pPartList.addAt(8, tRH)
  [470] getprop 1207 ............................ <pPartList>
  [473] pushint8 9 .............................. <9>
  [475] getlocal 4 .............................. <tRS>
  [477] pusharglistnoret 3 ...................... <pPartList, 9, tRS>
  [479] objcall 1302 ............................ pPartList.addAt(9, tRS)
  [482] jmp [515]
  [485] getprop 1207 ............................ <pPartList>
  [488] getlocal 6 .............................. <tRI>
  [490] pusharglistnoret 2 ...................... <pPartList, tRI>
  [492] objcall 765 ............................. pPartList.append(tRI)
  [495] getprop 1207 ............................ <pPartList>
  [498] getlocal 5 .............................. <tRH>
  [500] pusharglistnoret 2 ...................... <pPartList, tRH>
  [502] objcall 765 ............................. pPartList.append(tRH)
  [505] getprop 1207 ............................ <pPartList>
  [508] getlocal 4 .............................. <tRS>
  [510] pusharglistnoret 2 ...................... <pPartList, tRS>
  [512] objcall 765 ............................. pPartList.append(tRS)
  [515] pushint8 1 .............................. <1>
  [517] setlocal 7
  [519] getlocal 7
  [521] getprop 1207 ............................ <pPartList>
  [524] getobjprop 149 .......................... <pPartList.count>
  [526] lteq
  [527] jmpifz [560] ............................ repeat with i = 1 to pPartList.count
  [530] getprop 1208 ............................ <pPartIndex>
  [533] getprop 1207 ............................ <pPartList>
  [536] getlocal 7 .............................. <i>
  [538] pusharglist 2 ........................... <pPartList, i>
  [540] objcall 138 ............................. <pPartList[i]>
  [542] getobjprop 1298 ......................... <pPartList[i].pPart>
  [545] getlocal 7 .............................. <i>
  [547] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [549] objcall 136 ............................. pPartIndex[pPartList[i].pPart] = i
  [551] pushint8 1
  [553] getlocal 7
  [555] add
  [556] setlocal 7
  [558] endrepeat [519]
  [560] getprop 1264 ............................ <pLastDir>
  [563] getprop 376 ............................. <pDirection>
  [566] eq ...................................... <pLastDir = pDirection>
  [567] jmpifz [574] ............................ if pLastDir = pDirection then
  [570] pusharglistnoret 0 ...................... <>
  [572] extcall 116 ............................. return 
  [574] getprop 376 ............................. <pDirection>
  [577] setprop 1264 ............................ pLastDir = pDirection
  [580] getprop 1207 ............................ <pPartList>
  [583] getprop 1208 ............................ <pPartIndex>
  [586] pushcons 45 ............................. <"ls">
  [588] pusharglist 2 ........................... <pPartIndex, "ls">
  [590] objcall 138 ............................. <pPartIndex["ls"]>
  [592] pusharglist 2 ........................... <pPartList, pPartIndex["ls"]>
  [594] objcall 138 ............................. <pPartList[pPartIndex["ls"]]>
  [596] setlocal 8 .............................. tLS = pPartList[pPartIndex["ls"]]
  [598] getprop 1207 ............................ <pPartList>
  [601] getprop 1208 ............................ <pPartIndex>
  [604] pushcons 46 ............................. <"lh">
  [606] pusharglist 2 ........................... <pPartIndex, "lh">
  [608] objcall 138 ............................. <pPartIndex["lh"]>
  [610] pusharglist 2 ........................... <pPartList, pPartIndex["lh"]>
  [612] objcall 138 ............................. <pPartList[pPartIndex["lh"]]>
  [614] setlocal 9 .............................. tLH = pPartList[pPartIndex["lh"]]
  [616] getprop 1207 ............................ <pPartList>
  [619] getprop 1208 ............................ <pPartIndex>
  [622] pushcons 47 ............................. <"li">
  [624] pusharglist 2 ........................... <pPartIndex, "li">
  [626] objcall 138 ............................. <pPartIndex["li"]>
  [628] pusharglist 2 ........................... <pPartList, pPartIndex["li"]>
  [630] objcall 138 ............................. <pPartList[pPartIndex["li"]]>
  [632] setlocal 10 ............................. tLI = pPartList[pPartIndex["li"]]
  [634] getprop 1207 ............................ <pPartList>
  [637] getprop 1208 ............................ <pPartIndex>
  [640] pushcons 45 ............................. <"ls">
  [642] pusharglist 2 ........................... <pPartIndex, "ls">
  [644] objcall 138 ............................. <pPartIndex["ls"]>
  [646] pusharglistnoret 2 ...................... <pPartList, pPartIndex["ls"]>
  [648] objcall 764 ............................. pPartList.deleteAt(pPartIndex["ls"])
  [651] getprop 1207 ............................ <pPartList>
  [654] getprop 1208 ............................ <pPartIndex>
  [657] pushcons 46 ............................. <"lh">
  [659] pusharglist 2 ........................... <pPartIndex, "lh">
  [661] objcall 138 ............................. <pPartIndex["lh"]>
  [663] pusharglistnoret 2 ...................... <pPartList, pPartIndex["lh"]>
  [665] objcall 764 ............................. pPartList.deleteAt(pPartIndex["lh"])
  [668] getprop 1207 ............................ <pPartList>
  [671] getprop 1208 ............................ <pPartIndex>
  [674] pushcons 47 ............................. <"li">
  [676] pusharglist 2 ........................... <pPartIndex, "li">
  [678] objcall 138 ............................. <pPartIndex["li"]>
  [680] pusharglistnoret 2 ...................... <pPartList, pPartIndex["li"]>
  [682] objcall 764 ............................. pPartList.deleteAt(pPartIndex["li"])
  [685] getprop 376 ............................. <pDirection>
  [688] peek 0 .................................. case pDirection of
  [690] pushint8 3 .............................. <3>
  [692] eq
  [693] jmpifz [735] ............................ (case) 3:
  [696] getprop 1207 ............................ <pPartList>
  [699] pushint8 8 .............................. <8>
  [701] getlocal 10 ............................. <tLI>
  [703] pusharglistnoret 3 ...................... <pPartList, 8, tLI>
  [705] objcall 1302 ............................ pPartList.addAt(8, tLI)
  [708] getprop 1207 ............................ <pPartList>
  [711] pushint8 9 .............................. <9>
  [713] getlocal 9 .............................. <tLH>
  [715] pusharglistnoret 3 ...................... <pPartList, 9, tLH>
  [717] objcall 1302 ............................ pPartList.addAt(9, tLH)
  [720] getprop 1207 ............................ <pPartList>
  [723] pushint8 10 ............................. <10>
  [725] getlocal 8 .............................. <tLS>
  [727] pusharglistnoret 3 ...................... <pPartList, 10, tLS>
  [729] objcall 1302 ............................ pPartList.addAt(10, tLS)
  [732] jmp [771] ............................... (case) otherwise:
  [735] getprop 1207 ............................ <pPartList>
  [738] pushint8 1 .............................. <1>
  [740] getlocal 10 ............................. <tLI>
  [742] pusharglistnoret 3 ...................... <pPartList, 1, tLI>
  [744] objcall 1302 ............................ pPartList.addAt(1, tLI)
  [747] getprop 1207 ............................ <pPartList>
  [750] pushint8 2 .............................. <2>
  [752] getlocal 9 .............................. <tLH>
  [754] pusharglistnoret 3 ...................... <pPartList, 2, tLH>
  [756] objcall 1302 ............................ pPartList.addAt(2, tLH)
  [759] getprop 1207 ............................ <pPartList>
  [762] pushint8 3 .............................. <3>
  [764] getlocal 8 .............................. <tLS>
  [766] pusharglistnoret 3 ...................... <pPartList, 3, tLS>
  [768] objcall 1302 ............................ pPartList.addAt(3, tLS)
  [771] pop 1 ................................... end case
  [773] pushint8 1 .............................. <1>
  [775] setlocal 7
  [777] getlocal 7
  [779] getprop 1207 ............................ <pPartList>
  [782] getobjprop 149 .......................... <pPartList.count>
  [784] lteq
  [785] jmpifz [818] ............................ repeat with i = 1 to pPartList.count
  [788] getprop 1208 ............................ <pPartIndex>
  [791] getprop 1207 ............................ <pPartList>
  [794] getlocal 7 .............................. <i>
  [796] pusharglist 2 ........................... <pPartList, i>
  [798] objcall 138 ............................. <pPartList[i]>
  [800] getobjprop 1298 ......................... <pPartList[i].pPart>
  [803] getlocal 7 .............................. <i>
  [805] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [807] objcall 136 ............................. pPartIndex[pPartList[i].pPart] = i
  [809] pushint8 1
  [811] getlocal 7
  [813] add
  [814] setlocal 7
  [816] endrepeat [777]
  [818] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 219 .......................... <tImg_a.width>
  [  4] getparam 1 .............................. <tImg_a>
  [  6] getobjprop 261 .......................... <tImg_a.height>
  [  9] getparam 1 .............................. <tImg_a>
  [ 11] getobjprop 1147 ......................... <tImg_a.depth>
  [ 14] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth>
  [ 16] extcall 260 ............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth)>
  [ 19] setlocal 0 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth)
  [ 21] getparam 1 .............................. <tImg_a>
  [ 23] getobjprop 219 .......................... <tImg_a.width>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 28] extcall 264 ............................. <point(tImg_a.width, 0)>
  [ 31] pushzero ................................ <0>
  [ 32] pushzero ................................ <0>
  [ 33] pusharglist 2 ........................... <0, 0>
  [ 35] extcall 264 ............................. <point(0, 0)>
  [ 38] pushzero ................................ <0>
  [ 39] getparam 1 .............................. <tImg_a>
  [ 41] getobjprop 261 .......................... <tImg_a.height>
  [ 44] pusharglist 2 ........................... <0, tImg_a.height>
  [ 46] extcall 264 ............................. <point(0, tImg_a.height)>
  [ 49] getparam 1 .............................. <tImg_a>
  [ 51] getobjprop 219 .......................... <tImg_a.width>
  [ 53] getparam 1 .............................. <tImg_a>
  [ 55] getobjprop 261 .......................... <tImg_a.height>
  [ 58] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 60] extcall 264 ............................. <point(tImg_a.width, tImg_a.height)>
  [ 63] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 65] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 66] setlocal 1 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [ 68] getlocal 0 .............................. <tImg_b>
  [ 70] getparam 1 .............................. <tImg_a>
  [ 72] getlocal 1 .............................. <tQuad>
  [ 74] getparam 1 .............................. <tImg_a>
  [ 76] getobjprop 221 .......................... <tImg_a.rect>
  [ 78] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [ 80] objcall 293 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [ 83] getlocal 0 .............................. <tImg_b>
  [ 85] pusharglistnoret 1 ...................... <tImg_b>
  [ 87] extcall 116 ............................. return tImg_b
  [ 89] ret
end

on getCanvasName me
  [  0] getprop 1254 ............................ <pClass>
  [  3] getprop 1206 ............................ <pName>
  [  6] joinpadstr .............................. <pClass && pName>
  [  7] getparam 0 .............................. <me>
  [  9] pusharglist 1 ........................... <me>
  [ 11] objcall 115 ............................. <me.getID()>
  [ 13] joinstr ................................. <pClass && pName & me.getID()>
  [ 14] pushcons 48 ............................. <"Canvas">
  [ 16] joinpadstr .............................. <pClass && pName & me.getID() && "Canvas">
  [ 17] pusharglistnoret 1 ...................... <pClass && pName & me.getID() && "Canvas">
  [ 19] extcall 116 ............................. return pClass && pName & me.getID() && "Canvas"
  [ 21] ret
end

on action_mv me, tProps
  [  0] pushcons 49 ............................. <"wlk">
  [  2] setprop 1223 ............................ pMainAction = "wlk"
  [  5] pushint8 1 .............................. <1>
  [  7] setprop 1224 ............................ pMoving = 1
  [ 10] pushzero ................................ <0>
  [ 11] setprop 1244 ............................ pBaseLocZ = 0
  [ 14] getmovieprop 654 ........................ <the itemDelimiter>
  [ 17] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 19] pushcons 50 ............................. <",">
  [ 21] setmovieprop 654 ........................ the itemDelimiter = ","
  [ 24] getparam 1 .............................. <tProps>
  [ 26] pushsymb 435 ............................ <#word>
  [ 29] pushint8 2 .............................. <2>
  [ 31] pusharglist 3 ........................... <tProps, #word, 2>
  [ 33] objcall 134 ............................. <tProps.word[2]>
  [ 35] setlocal 1 .............................. tloc = tProps.word[2]
  [ 37] getlocal 1 .............................. <tloc>
  [ 39] pushsymb 655 ............................ <#item>
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglist 3 ........................... <tloc, #item, 1>
  [ 46] objcall 134 ............................. <tloc.item[1]>
  [ 48] pusharglist 1 ........................... <tloc.item[1]>
  [ 50] extcall 426 ............................. <integer(tloc.item[1])>
  [ 53] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 55] getlocal 1 .............................. <tloc>
  [ 57] pushsymb 655 ............................ <#item>
  [ 60] pushint8 2 .............................. <2>
  [ 62] pusharglist 3 ........................... <tloc, #item, 2>
  [ 64] objcall 134 ............................. <tloc.item[2]>
  [ 66] pusharglist 1 ........................... <tloc.item[2]>
  [ 68] extcall 426 ............................. <integer(tloc.item[2])>
  [ 71] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 73] getlocal 1 .............................. <tloc>
  [ 75] pushsymb 655 ............................ <#item>
  [ 78] pushint8 3 .............................. <3>
  [ 80] pusharglist 3 ........................... <tloc, #item, 3>
  [ 82] objcall 134 ............................. <tloc.item[3]>
  [ 84] pusharglist 1 ........................... <tloc.item[3]>
  [ 86] extcall 743 ............................. <getLocalFloat(tloc.item[3])>
  [ 89] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 91] getlocal 0 .............................. <tDelim>
  [ 93] setmovieprop 654 ........................ the itemDelimiter = tDelim
  [ 96] getmovieprop 407 ........................ <the milliSeconds>
  [ 99] setprop 1218 ............................ pMoveStart = the milliSeconds
  [102] getprop 976 ............................. <pGeometry>
  [105] getprop 465 ............................. <pLocX>
  [108] getprop 467 ............................. <pLocY>
  [111] getprop 469 ............................. <pLocH>
  [114] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH>
  [116] objcall 949 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)>
  [119] setprop 1213 ............................ pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)
  [122] getprop 976 ............................. <pGeometry>
  [125] getlocal 2 .............................. <tLocX>
  [127] getlocal 3 .............................. <tLocY>
  [129] getlocal 4 .............................. <tLocH>
  [131] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [133] objcall 949 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [136] setprop 1214 ............................ pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [139] pushsymb 1283 ........................... <#defineActMultiple>
  [142] getprop 1207 ............................ <pPartList>
  [145] pushcons 49 ............................. <"wlk">
  [147] pushcons 51 ............................. <"bd">
  [149] pushcons 40 ............................. <"lg">
  [151] pushcons 46 ............................. <"lh">
  [153] pushcons 42 ............................. <"rh">
  [155] pushcons 45 ............................. <"ls">
  [157] pushcons 41 ............................. <"rs">
  [159] pushcons 30 ............................. <"sh">
  [161] pusharglist 7 ........................... <["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [163] pushlist ................................ <["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [164] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "wlk", ["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [166] extcall 142 ............................. call(#defineActMultiple, pPartList, "wlk", ["bd", "lg", "lh", "rh", "ls", "rs", "sh"])
  [168] ret
end

on action_sld me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1224 ............................ pMoving = 1
  [  5] pushzero ................................ <0>
  [  6] setprop 1244 ............................ pBaseLocZ = 0
  [  9] getmovieprop 654 ........................ <the itemDelimiter>
  [ 12] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 14] pushcons 50 ............................. <",">
  [ 16] setmovieprop 654 ........................ the itemDelimiter = ","
  [ 19] getparam 1 .............................. <tProps>
  [ 21] pushsymb 435 ............................ <#word>
  [ 24] pushint8 2 .............................. <2>
  [ 26] pusharglist 3 ........................... <tProps, #word, 2>
  [ 28] objcall 134 ............................. <tProps.word[2]>
  [ 30] setlocal 1 .............................. tloc = tProps.word[2]
  [ 32] getlocal 1 .............................. <tloc>
  [ 34] pushsymb 655 ............................ <#item>
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglist 3 ........................... <tloc, #item, 1>
  [ 41] objcall 134 ............................. <tloc.item[1]>
  [ 43] pusharglist 1 ........................... <tloc.item[1]>
  [ 45] extcall 426 ............................. <integer(tloc.item[1])>
  [ 48] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 50] getlocal 1 .............................. <tloc>
  [ 52] pushsymb 655 ............................ <#item>
  [ 55] pushint8 2 .............................. <2>
  [ 57] pusharglist 3 ........................... <tloc, #item, 2>
  [ 59] objcall 134 ............................. <tloc.item[2]>
  [ 61] pusharglist 1 ........................... <tloc.item[2]>
  [ 63] extcall 426 ............................. <integer(tloc.item[2])>
  [ 66] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 68] getlocal 1 .............................. <tloc>
  [ 70] pushsymb 655 ............................ <#item>
  [ 73] pushint8 3 .............................. <3>
  [ 75] pusharglist 3 ........................... <tloc, #item, 3>
  [ 77] objcall 134 ............................. <tloc.item[3]>
  [ 79] pusharglist 1 ........................... <tloc.item[3]>
  [ 81] extcall 743 ............................. <getLocalFloat(tloc.item[3])>
  [ 84] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 86] getlocal 0 .............................. <tDelim>
  [ 88] setmovieprop 654 ........................ the itemDelimiter = tDelim
  [ 91] getparam 1 .............................. <tProps>
  [ 93] pushsymb 435 ............................ <#word>
  [ 96] pushint8 3 .............................. <3>
  [ 98] pusharglist 3 ........................... <tProps, #word, 3>
  [100] objcall 134 ............................. <tProps.word[3]>
  [102] pusharglist 1 ........................... <tProps.word[3]>
  [104] extcall 426 ............................. <integer(tProps.word[3])>
  [107] setprop 1241 ............................ pQueuesWithObj = integer(tProps.word[3])
  [110] getprop 976 ............................. <pGeometry>
  [113] getprop 465 ............................. <pLocX>
  [116] getprop 467 ............................. <pLocY>
  [119] getprop 469 ............................. <pLocH>
  [122] getprop 1216 ............................ <pRestingHeight>
  [125] add ..................................... <pLocH + pRestingHeight>
  [126] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [128] objcall 949 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [131] setprop 1213 ............................ pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [134] getprop 976 ............................. <pGeometry>
  [137] getlocal 2 .............................. <tLocX>
  [139] getlocal 3 .............................. <tLocY>
  [141] getlocal 4 .............................. <tLocH>
  [143] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [145] objcall 949 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [148] setprop 1214 ............................ pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [151] getprop 465 ............................. <pLocX>
  [154] getprop 467 ............................. <pLocY>
  [157] getprop 469 ............................. <pLocH>
  [160] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [162] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [163] setprop 1215 ............................ pPreviousLoc = [pLocX, pLocY, pLocH]
  [166] getparam 1 .............................. <tProps>
  [168] pushsymb 435 ............................ <#word>
  [171] pushint8 4 .............................. <4>
  [173] pusharglist 3 ........................... <tProps, #word, 4>
  [175] objcall 134 ............................. <tProps.word[4]>
  [177] setlocal 5 .............................. tStartTime = tProps.word[4]
  [179] getlocal 5 .............................. <tStartTime>
  [181] pusharglist 1 ........................... <tStartTime>
  [183] extcall 253 ............................. <voidp(tStartTime)>
  [185] jmpifz [197] ............................ if voidp(tStartTime) then / else
  [188] getmovieprop 407 ........................ <the milliSeconds>
  [191] setprop 1218 ............................ pMoveStart = the milliSeconds
  [194] jmp [202]
  [197] getlocal 5 .............................. <tStartTime>
  [199] setprop 1218 ............................ pMoveStart = tStartTime
  [202] ret
end

on action_sit me, tProps
  [  0] pushsymb 1283 ........................... <#defineActMultiple>
  [  3] getprop 1207 ............................ <pPartList>
  [  6] pushcons 31 ............................. <"sit">
  [  8] pushcons 51 ............................. <"bd">
  [ 10] pushcons 40 ............................. <"lg">
  [ 12] pushcons 30 ............................. <"sh">
  [ 14] pusharglist 3 ........................... <["bd", "lg", "sh"]>
  [ 16] pushlist ................................ <["bd", "lg", "sh"]>
  [ 17] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "sit", ["bd", "lg", "sh"]>
  [ 19] extcall 142 ............................. call(#defineActMultiple, pPartList, "sit", ["bd", "lg", "sh"])
  [ 21] pushcons 31 ............................. <"sit">
  [ 23] setprop 1223 ............................ pMainAction = "sit"
  [ 26] getparam 1 .............................. <tProps>
  [ 28] pushsymb 435 ............................ <#word>
  [ 31] pushint8 2 .............................. <2>
  [ 33] pusharglist 3 ........................... <tProps, #word, 2>
  [ 35] objcall 134 ............................. <tProps.word[2]>
  [ 37] pusharglist 1 ........................... <tProps.word[2]>
  [ 39] extcall 743 ............................. <getLocalFloat(tProps.word[2])>
  [ 42] pushfloat32 1.0 ......................... <1.0>
  [ 47] sub ..................................... <getLocalFloat(tProps.word[2]) - 1.0>
  [ 48] setprop 1216 ............................ pRestingHeight = getLocalFloat(tProps.word[2]) - 1.0
  [ 51] getprop 976 ............................. <pGeometry>
  [ 54] getprop 465 ............................. <pLocX>
  [ 57] getprop 467 ............................. <pLocY>
  [ 60] getprop 469 ............................. <pLocH>
  [ 63] getprop 1216 ............................ <pRestingHeight>
  [ 66] add ..................................... <pLocH + pRestingHeight>
  [ 67] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 69] objcall 949 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 72] setprop 1212 ............................ pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 75] getparam 1 .............................. <tProps>
  [ 77] pushsymb 435 ............................ <#word>
  [ 80] pushint8 3 .............................. <3>
  [ 82] pusharglist 3 ........................... <tProps, #word, 3>
  [ 84] objcall 134 ............................. <tProps.word[3]>
  [ 86] pusharglist 1 ........................... <tProps.word[3]>
  [ 88] extcall 426 ............................. <integer(tProps.word[3])>
  [ 91] setlocal 0 .............................. tIsInQueue = integer(tProps.word[3])
  [ 93] getlocal 0 .............................. <tIsInQueue>
  [ 95] setprop 1241 ............................ pQueuesWithObj = tIsInQueue
  [ 98] ret
end

on action_lay me, tProps
  [  0] pushcons 12 ............................. <"lay">
  [  2] setprop 1223 ............................ pMainAction = "lay"
  [  5] pushzero ................................ <0>
  [  6] setprop 1226 ............................ pCarrying = 0
  [  9] getparam 1 .............................. <tProps>
  [ 11] pushsymb 435 ............................ <#word>
  [ 14] pushint8 2 .............................. <2>
  [ 16] pusharglist 3 ........................... <tProps, #word, 2>
  [ 18] objcall 134 ............................. <tProps.word[2]>
  [ 20] pusharglist 1 ........................... <tProps.word[2]>
  [ 22] extcall 743 ............................. <getLocalFloat(tProps.word[2])>
  [ 25] pushfloat32 1.0 ......................... <1.0>
  [ 30] sub ..................................... <getLocalFloat(tProps.word[2]) - 1.0>
  [ 31] setprop 1216 ............................ pRestingHeight = getLocalFloat(tProps.word[2]) - 1.0
  [ 34] getprop 976 ............................. <pGeometry>
  [ 37] getprop 465 ............................. <pLocX>
  [ 40] getprop 467 ............................. <pLocY>
  [ 43] getprop 469 ............................. <pLocH>
  [ 46] getprop 1216 ............................ <pRestingHeight>
  [ 49] add ..................................... <pLocH + pRestingHeight>
  [ 50] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 52] objcall 949 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 55] setprop 1212 ............................ pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 58] getprop 959 ............................. <pXFactor>
  [ 61] pushint8 33 ............................. <33>
  [ 63] lt ...................................... <pXFactor < 33>
  [ 64] jmpifz [139] ............................ if pXFactor < 33 then / else
  [ 67] getprop 1209 ............................ <pFlipList>
  [ 70] getprop 376 ............................. <pDirection>
  [ 73] pushint8 1 .............................. <1>
  [ 75] add ..................................... <pDirection + 1>
  [ 76] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [ 78] objcall 138 ............................. <pFlipList[pDirection + 1]>
  [ 80] peek 0 .................................. case pFlipList[pDirection + 1] of
  [ 82] pushint8 2 .............................. <2>
  [ 84] eq
  [ 85] jmpifz [109] ............................ (case) 2:
  [ 88] getprop 1212 ............................ <pScreenLoc>
  [ 91] pushint8 10 ............................. <10>
  [ 93] inv ..................................... <-10>
  [ 94] pushint8 18 ............................. <18>
  [ 96] pushint16 2000 .......................... <2000>
  [ 99] pusharglist 3 ........................... <[-10, 18, 2000]>
  [101] pushlist ................................ <[-10, 18, 2000]>
  [102] add ..................................... <pScreenLoc + [-10, 18, 2000]>
  [103] setprop 1212 ............................ pScreenLoc = pScreenLoc + [-10, 18, 2000]
  [106] jmp [134]
  [109] peek 0
  [111] pushzero ................................ <0>
  [112] eq
  [113] jmpifz [134] ............................ (case) 0:
  [116] getprop 1212 ............................ <pScreenLoc>
  [119] pushint8 17 ............................. <17>
  [121] inv ..................................... <-17>
  [122] pushint8 18 ............................. <18>
  [124] pushint16 2000 .......................... <2000>
  [127] pusharglist 3 ........................... <[-17, 18, 2000]>
  [129] pushlist ................................ <[-17, 18, 2000]>
  [130] add ..................................... <pScreenLoc + [-17, 18, 2000]>
  [131] setprop 1212 ............................ pScreenLoc = pScreenLoc + [-17, 18, 2000]
  [134] pop 1 ................................... end case
  [136] jmp [207]
  [139] getprop 1209 ............................ <pFlipList>
  [142] getprop 376 ............................. <pDirection>
  [145] pushint8 1 .............................. <1>
  [147] add ..................................... <pDirection + 1>
  [148] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [150] objcall 138 ............................. <pFlipList[pDirection + 1]>
  [152] peek 0 .................................. case pFlipList[pDirection + 1] of
  [154] pushint8 2 .............................. <2>
  [156] eq
  [157] jmpifz [180] ............................ (case) 2:
  [160] getprop 1212 ............................ <pScreenLoc>
  [163] pushint8 10 ............................. <10>
  [165] pushint8 30 ............................. <30>
  [167] pushint16 2000 .......................... <2000>
  [170] pusharglist 3 ........................... <[10, 30, 2000]>
  [172] pushlist ................................ <[10, 30, 2000]>
  [173] add ..................................... <pScreenLoc + [10, 30, 2000]>
  [174] setprop 1212 ............................ pScreenLoc = pScreenLoc + [10, 30, 2000]
  [177] jmp [205]
  [180] peek 0
  [182] pushzero ................................ <0>
  [183] eq
  [184] jmpifz [205] ............................ (case) 0:
  [187] getprop 1212 ............................ <pScreenLoc>
  [190] pushint8 47 ............................. <47>
  [192] inv ..................................... <-47>
  [193] pushint8 32 ............................. <32>
  [195] pushint16 2000 .......................... <2000>
  [198] pusharglist 3 ........................... <[-47, 32, 2000]>
  [200] pushlist ................................ <[-47, 32, 2000]>
  [201] add ..................................... <pScreenLoc + [-47, 32, 2000]>
  [202] setprop 1212 ............................ pScreenLoc = pScreenLoc + [-47, 32, 2000]
  [205] pop 1 ................................... end case
  [207] getprop 959 ............................. <pXFactor>
  [210] pushint8 32 ............................. <32>
  [212] gt ...................................... <pXFactor > 32>
  [213] jmpifz [232] ............................ if pXFactor > 32 then / else
  [216] pushint8 30 ............................. <30>
  [218] pushint8 10 ............................. <10>
  [220] inv ..................................... <-10>
  [221] pusharglist 2 ........................... <30, -10>
  [223] extcall 264 ............................. <point(30, -10)>
  [226] setprop 1210 ............................ pLocFix = point(30, -10)
  [229] jmp [245]
  [232] pushint8 35 ............................. <35>
  [234] pushint8 5 .............................. <5>
  [236] inv ..................................... <-5>
  [237] pusharglist 2 ........................... <35, -5>
  [239] extcall 264 ............................. <point(35, -5)>
  [242] setprop 1210 ............................ pLocFix = point(35, -5)
  [245] pushsymb 1318 ........................... <#layDown>
  [248] getprop 1207 ............................ <pPartList>
  [251] pusharglistnoret 2 ...................... <#layDown, pPartList>
  [253] extcall 142 ............................. call(#layDown, pPartList)
  [255] getprop 376 ............................. <pDirection>
  [258] pushzero ................................ <0>
  [259] eq ...................................... <pDirection = 0>
  [260] jmpifz [273] ............................ if pDirection = 0 then
  [263] pushint8 4 .............................. <4>
  [265] setprop 376 ............................. pDirection = 4
  [268] pushint8 4 .............................. <4>
  [270] setprop 1263 ............................ pHeadDir = 4
  [273] pushsymb 1269 ........................... <#defineDir>
  [276] getprop 1207 ............................ <pPartList>
  [279] getprop 376 ............................. <pDirection>
  [282] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [284] extcall 142 ............................. call(#defineDir, pPartList, pDirection)
  [286] ret
end

on action_carryd me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 385 ............................. <value(tItem)>
  [ 20] pushzero ................................ <0>
  [ 21] gt ...................................... <value(tItem) > 0>
  [ 22] jmpifz [129] ............................ if value(tItem) > 0 then / else
  [ 25] getlocal 0 .............................. <tItem>
  [ 27] setlocal 1 .............................. tCarrying = tItem
  [ 29] pushcons 52 ............................. <"handitem.right.">
  [ 31] getlocal 1 .............................. <tCarrying>
  [ 33] joinstr ................................. <"handitem.right." & tCarrying>
  [ 34] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 36] extcall 206 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 38] jmpifz [ 57] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 41] pushcons 52 ............................. <"handitem.right.">
  [ 43] getlocal 1 .............................. <tCarrying>
  [ 45] joinstr ................................. <"handitem.right." & tCarrying>
  [ 46] pushcons 35 ............................. <"001">
  [ 48] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 50] extcall 80 .............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 52] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 54] jmp [ 61]
  [ 57] pushcons 35 ............................. <"001">
  [ 59] setlocal 2 .............................. tCarryItm = "001"
  [ 61] pushsymb 1319 ........................... <#doHandWorkRight>
  [ 64] getprop 1207 ............................ <pPartList>
  [ 67] pushcons 53 ............................. <"crr">
  [ 69] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 71] extcall 142 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 73] getprop 1207 ............................ <pPartList>
  [ 76] getprop 1208 ............................ <pPartIndex>
  [ 79] pushcons 43 ............................. <"ri">
  [ 81] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 83] objcall 138 ............................. <pPartIndex["ri"]>
  [ 85] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 87] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [ 89] getlocal 2 .............................. <tCarryItm>
  [ 91] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 93] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [ 96] pushcons 54 ............................. <"handitem">
  [ 98] getlocal 1 .............................. <tCarrying>
  [100] joinstr ................................. <"handitem" & tCarrying>
  [101] pusharglist 1 ........................... <"handitem" & tCarrying>
  [103] extcall 1320 ............................ <textExists("handitem" & tCarrying)>
  [106] jmpifz [126] ............................ if textExists("handitem" & tCarrying) then
  [109] pushcons 54 ............................. <"handitem">
  [111] getlocal 1 .............................. <tCarrying>
  [113] joinstr ................................. <"handitem" & tCarrying>
  [114] pushcons 54 ............................. <"handitem">
  [116] getlocal 1 .............................. <tCarrying>
  [118] joinstr ................................. <"handitem" & tCarrying>
  [119] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [121] extcall 95 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [123] setprop 1226 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [126] jmp [208]
  [129] pushsymb 1321 ........................... <#room_component>
  [132] pusharglist 1 ........................... <#room_component>
  [134] extcall 112 ............................. <getObject(#room_component)>
  [136] pusharglist 1 ........................... <getObject(#room_component)>
  [138] objcall 233 ............................. <getObject(#room_component).getRoomID()>
  [140] pushcons 55 ............................. <"private">
  [142] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [143] jmpifz [208] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [146] getparam 1 .............................. <tProps>
  [148] pushsymb 435 ............................ <#word>
  [151] pushint8 2 .............................. <2>
  [153] getparam 1 .............................. <tProps>
  [155] pushsymb 435 ............................ <#word>
  [158] pusharglist 2 ........................... <tProps, #word>
  [160] objcall 149 ............................. <tProps.word.count>
  [162] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [164] objcall 134 ............................. <tProps.word[2..tProps.word.count]>
  [166] setprop 1226 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [169] pushcons 35 ............................. <"001">
  [171] setlocal 2 .............................. tCarryItm = "001"
  [173] pushsymb 1319 ........................... <#doHandWorkRight>
  [176] getprop 1207 ............................ <pPartList>
  [179] pushcons 53 ............................. <"crr">
  [181] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [183] extcall 142 ............................. call(#doHandWorkRight, pPartList, "crr")
  [185] getprop 1207 ............................ <pPartList>
  [188] getprop 1208 ............................ <pPartIndex>
  [191] pushcons 43 ............................. <"ri">
  [193] pusharglist 2 ........................... <pPartIndex, "ri">
  [195] objcall 138 ............................. <pPartIndex["ri"]>
  [197] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [199] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [201] getlocal 2 .............................. <tCarryItm>
  [203] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [205] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [208] ret
end

on action_cri me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 385 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 326 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [132] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 206 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 56 ............................. <"075">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "075">
  [ 53] extcall 80 .............................. <getVariable("handitem.right." & tCarrying, "075")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "075")
  [ 57] jmp [ 64]
  [ 60] pushcons 56 ............................. <"075">
  [ 62] setlocal 2 .............................. tCarryItm = "075"
  [ 64] pushsymb 1319 ........................... <#doHandWorkRight>
  [ 67] getprop 1207 ............................ <pPartList>
  [ 70] pushcons 53 ............................. <"crr">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 74] extcall 142 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 76] getprop 1207 ............................ <pPartList>
  [ 79] getprop 1208 ............................ <pPartIndex>
  [ 82] pushcons 43 ............................. <"ri">
  [ 84] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 86] objcall 138 ............................. <pPartIndex["ri"]>
  [ 88] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 90] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [ 92] getlocal 2 .............................. <tCarryItm>
  [ 94] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 96] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [ 99] pushcons 54 ............................. <"handitem">
  [101] getlocal 1 .............................. <tCarrying>
  [103] joinstr ................................. <"handitem" & tCarrying>
  [104] pusharglist 1 ........................... <"handitem" & tCarrying>
  [106] extcall 1320 ............................ <textExists("handitem" & tCarrying)>
  [109] jmpifz [129] ............................ if textExists("handitem" & tCarrying) then
  [112] pushcons 54 ............................. <"handitem">
  [114] getlocal 1 .............................. <tCarrying>
  [116] joinstr ................................. <"handitem" & tCarrying>
  [117] pushcons 54 ............................. <"handitem">
  [119] getlocal 1 .............................. <tCarrying>
  [121] joinstr ................................. <"handitem" & tCarrying>
  [122] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [124] extcall 95 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [126] setprop 1226 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [129] jmp [211]
  [132] pushsymb 1321 ........................... <#room_component>
  [135] pusharglist 1 ........................... <#room_component>
  [137] extcall 112 ............................. <getObject(#room_component)>
  [139] pusharglist 1 ........................... <getObject(#room_component)>
  [141] objcall 233 ............................. <getObject(#room_component).getRoomID()>
  [143] pushcons 55 ............................. <"private">
  [145] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [146] jmpifz [211] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [149] getparam 1 .............................. <tProps>
  [151] pushsymb 435 ............................ <#word>
  [154] pushint8 2 .............................. <2>
  [156] getparam 1 .............................. <tProps>
  [158] pushsymb 435 ............................ <#word>
  [161] pusharglist 2 ........................... <tProps, #word>
  [163] objcall 149 ............................. <tProps.word.count>
  [165] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [167] objcall 134 ............................. <tProps.word[2..tProps.word.count]>
  [169] setprop 1226 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [172] pushcons 35 ............................. <"001">
  [174] setlocal 2 .............................. tCarryItm = "001"
  [176] pushsymb 1319 ........................... <#doHandWorkRight>
  [179] getprop 1207 ............................ <pPartList>
  [182] pushcons 53 ............................. <"crr">
  [184] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [186] extcall 142 ............................. call(#doHandWorkRight, pPartList, "crr")
  [188] getprop 1207 ............................ <pPartList>
  [191] getprop 1208 ............................ <pPartIndex>
  [194] pushcons 43 ............................. <"ri">
  [196] pusharglist 2 ........................... <pPartIndex, "ri">
  [198] objcall 138 ............................. <pPartIndex["ri"]>
  [200] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [202] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [204] getlocal 2 .............................. <tCarryItm>
  [206] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [208] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [211] ret
end

on action_usei me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 385 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 326 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [132] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 206 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 80 .............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1320 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 95 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1226 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1319 ........................... <#doHandWorkRight>
  [ 97] getprop 1207 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 142 ............................. call(#doHandWorkRight, pPartList, "drk")
  [106] getprop 1207 ............................ <pPartList>
  [109] getprop 1208 ............................ <pPartIndex>
  [112] pushcons 43 ............................. <"ri">
  [114] pusharglist 2 ........................... <pPartIndex, "ri">
  [116] objcall 138 ............................. <pPartIndex["ri"]>
  [118] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [120] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [122] getlocal 2 .............................. <tCarryItm>
  [124] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [126] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [129] jmp [211]
  [132] pushsymb 1321 ........................... <#room_component>
  [135] pusharglist 1 ........................... <#room_component>
  [137] extcall 112 ............................. <getObject(#room_component)>
  [139] pusharglist 1 ........................... <getObject(#room_component)>
  [141] objcall 233 ............................. <getObject(#room_component).getRoomID()>
  [143] pushcons 55 ............................. <"private">
  [145] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [146] jmpifz [211] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [149] getparam 1 .............................. <tProps>
  [151] pushsymb 435 ............................ <#word>
  [154] pushint8 2 .............................. <2>
  [156] getparam 1 .............................. <tProps>
  [158] pushsymb 435 ............................ <#word>
  [161] pusharglist 2 ........................... <tProps, #word>
  [163] objcall 149 ............................. <tProps.word.count>
  [165] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [167] objcall 134 ............................. <tProps.word[2..tProps.word.count]>
  [169] setprop 1226 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [172] pushcons 35 ............................. <"001">
  [174] setlocal 2 .............................. tCarryItm = "001"
  [176] pushsymb 1319 ........................... <#doHandWorkRight>
  [179] getprop 1207 ............................ <pPartList>
  [182] pushcons 44 ............................. <"drk">
  [184] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [186] extcall 142 ............................. call(#doHandWorkRight, pPartList, "drk")
  [188] getprop 1207 ............................ <pPartList>
  [191] getprop 1208 ............................ <pPartIndex>
  [194] pushcons 43 ............................. <"ri">
  [196] pusharglist 2 ........................... <pPartIndex, "ri">
  [198] objcall 138 ............................. <pPartIndex["ri"]>
  [200] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [202] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [204] getlocal 2 .............................. <tCarryItm>
  [206] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [208] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [211] ret
end

on action_drink me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 385 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 326 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [132] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 206 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 80 .............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1320 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 95 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1226 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1319 ........................... <#doHandWorkRight>
  [ 97] getprop 1207 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 142 ............................. call(#doHandWorkRight, pPartList, "drk")
  [106] getprop 1207 ............................ <pPartList>
  [109] getprop 1208 ............................ <pPartIndex>
  [112] pushcons 43 ............................. <"ri">
  [114] pusharglist 2 ........................... <pPartIndex, "ri">
  [116] objcall 138 ............................. <pPartIndex["ri"]>
  [118] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [120] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [122] getlocal 2 .............................. <tCarryItm>
  [124] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [126] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [129] jmp [211]
  [132] pushsymb 1321 ........................... <#room_component>
  [135] pusharglist 1 ........................... <#room_component>
  [137] extcall 112 ............................. <getObject(#room_component)>
  [139] pusharglist 1 ........................... <getObject(#room_component)>
  [141] objcall 233 ............................. <getObject(#room_component).getRoomID()>
  [143] pushcons 55 ............................. <"private">
  [145] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [146] jmpifz [211] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [149] getparam 1 .............................. <tProps>
  [151] pushsymb 435 ............................ <#word>
  [154] pushint8 2 .............................. <2>
  [156] getparam 1 .............................. <tProps>
  [158] pushsymb 435 ............................ <#word>
  [161] pusharglist 2 ........................... <tProps, #word>
  [163] objcall 149 ............................. <tProps.word.count>
  [165] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [167] objcall 134 ............................. <tProps.word[2..tProps.word.count]>
  [169] setprop 1226 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [172] pushcons 35 ............................. <"001">
  [174] setlocal 2 .............................. tCarryItm = "001"
  [176] pushsymb 1319 ........................... <#doHandWorkRight>
  [179] getprop 1207 ............................ <pPartList>
  [182] pushcons 44 ............................. <"drk">
  [184] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [186] extcall 142 ............................. call(#doHandWorkRight, pPartList, "drk")
  [188] getprop 1207 ............................ <pPartList>
  [191] getprop 1208 ............................ <pPartIndex>
  [194] pushcons 43 ............................. <"ri">
  [196] pusharglist 2 ........................... <pPartIndex, "ri">
  [198] objcall 138 ............................. <pPartIndex["ri"]>
  [200] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [202] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [204] getlocal 2 .............................. <tCarryItm>
  [206] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [208] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [211] ret
end

on action_carryf me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 385 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 326 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [129] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 206 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 80 .............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushsymb 1319 ........................... <#doHandWorkRight>
  [ 67] getprop 1207 ............................ <pPartList>
  [ 70] pushcons 53 ............................. <"crr">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 74] extcall 142 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 76] getprop 1207 ............................ <pPartList>
  [ 79] getprop 1208 ............................ <pPartIndex>
  [ 82] pushcons 43 ............................. <"ri">
  [ 84] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 86] objcall 138 ............................. <pPartIndex["ri"]>
  [ 88] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 90] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [ 92] getlocal 2 .............................. <tCarryItm>
  [ 94] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 96] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [ 99] pushcons 54 ............................. <"handitem">
  [101] getlocal 1 .............................. <tCarrying>
  [103] joinstr ................................. <"handitem" & tCarrying>
  [104] pusharglist 1 ........................... <"handitem" & tCarrying>
  [106] extcall 1320 ............................ <textExists("handitem" & tCarrying)>
  [109] jmpifz [126] ............................ if textExists("handitem" & tCarrying) then
  [112] pushcons 54 ............................. <"handitem">
  [114] getlocal 1 .............................. <tCarrying>
  [116] joinstr ................................. <"handitem" & tCarrying>
  [117] getlocal 0 .............................. <tItem>
  [119] pusharglist 2 ........................... <"handitem" & tCarrying, tItem>
  [121] extcall 95 .............................. <getText("handitem" & tCarrying, tItem)>
  [123] setprop 1226 ............................ pCarrying = getText("handitem" & tCarrying, tItem)
  [126] jmp [208]
  [129] pushsymb 1321 ........................... <#room_component>
  [132] pusharglist 1 ........................... <#room_component>
  [134] extcall 112 ............................. <getObject(#room_component)>
  [136] pusharglist 1 ........................... <getObject(#room_component)>
  [138] objcall 233 ............................. <getObject(#room_component).getRoomID()>
  [140] pushcons 55 ............................. <"private">
  [142] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [143] jmpifz [208] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [146] getparam 1 .............................. <tProps>
  [148] pushsymb 435 ............................ <#word>
  [151] pushint8 2 .............................. <2>
  [153] getparam 1 .............................. <tProps>
  [155] pushsymb 435 ............................ <#word>
  [158] pusharglist 2 ........................... <tProps, #word>
  [160] objcall 149 ............................. <tProps.word.count>
  [162] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [164] objcall 134 ............................. <tProps.word[2..tProps.word.count]>
  [166] setprop 1226 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [169] pushcons 57 ............................. <"004">
  [171] setlocal 2 .............................. tCarryItm = "004"
  [173] pushsymb 1319 ........................... <#doHandWorkRight>
  [176] getprop 1207 ............................ <pPartList>
  [179] pushcons 53 ............................. <"crr">
  [181] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [183] extcall 142 ............................. call(#doHandWorkRight, pPartList, "crr")
  [185] getprop 1207 ............................ <pPartList>
  [188] getprop 1208 ............................ <pPartIndex>
  [191] pushcons 43 ............................. <"ri">
  [193] pusharglist 2 ........................... <pPartIndex, "ri">
  [195] objcall 138 ............................. <pPartIndex["ri"]>
  [197] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [199] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [201] getlocal 2 .............................. <tCarryItm>
  [203] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [205] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [208] ret
end

on action_eat me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 385 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 326 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [132] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 206 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 80 .............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1320 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 95 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1226 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1319 ........................... <#doHandWorkRight>
  [ 97] getprop 1207 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 142 ............................. call(#doHandWorkRight, pPartList, "drk")
  [106] getprop 1207 ............................ <pPartList>
  [109] getprop 1208 ............................ <pPartIndex>
  [112] pushcons 43 ............................. <"ri">
  [114] pusharglist 2 ........................... <pPartIndex, "ri">
  [116] objcall 138 ............................. <pPartIndex["ri"]>
  [118] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [120] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [122] getlocal 2 .............................. <tCarryItm>
  [124] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [126] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [129] jmp [211]
  [132] pushsymb 1321 ........................... <#room_component>
  [135] pusharglist 1 ........................... <#room_component>
  [137] extcall 112 ............................. <getObject(#room_component)>
  [139] pusharglist 1 ........................... <getObject(#room_component)>
  [141] objcall 233 ............................. <getObject(#room_component).getRoomID()>
  [143] pushcons 55 ............................. <"private">
  [145] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [146] jmpifz [211] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [149] getparam 1 .............................. <tProps>
  [151] pushsymb 435 ............................ <#word>
  [154] pushint8 2 .............................. <2>
  [156] getparam 1 .............................. <tProps>
  [158] pushsymb 435 ............................ <#word>
  [161] pusharglist 2 ........................... <tProps, #word>
  [163] objcall 149 ............................. <tProps.word.count>
  [165] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [167] objcall 134 ............................. <tProps.word[2..tProps.word.count]>
  [169] setprop 1226 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [172] pushcons 57 ............................. <"004">
  [174] setlocal 2 .............................. tCarryItm = "004"
  [176] pushsymb 1319 ........................... <#doHandWorkRight>
  [179] getprop 1207 ............................ <pPartList>
  [182] pushcons 44 ............................. <"drk">
  [184] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [186] extcall 142 ............................. call(#doHandWorkRight, pPartList, "drk")
  [188] getprop 1207 ............................ <pPartList>
  [191] getprop 1208 ............................ <pPartIndex>
  [194] pushcons 43 ............................. <"ri">
  [196] pusharglist 2 ........................... <pPartIndex, "ri">
  [198] objcall 138 ............................. <pPartIndex["ri"]>
  [200] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [202] objcall 138 ............................. <pPartList[pPartIndex["ri"]]>
  [204] getlocal 2 .............................. <tCarryItm>
  [206] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [208] objcall 1271 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [211] ret
end

on action_talk me, tProps
  [  0] getprop 1223 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] getprop 959 ............................. <pXFactor>
  [  9] pushint8 33 ............................. <33>
  [ 11] lt ...................................... <pXFactor < 33>
  [ 12] and ..................................... <(pMainAction = "lay") and (pXFactor < 33)>
  [ 13] jmpifz [ 21] ............................ if (pMainAction = "lay") and (pXFactor < 33) then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 116 ............................. return 0
  [ 21] pushint8 1 .............................. <1>
  [ 23] setprop 1225 ............................ pTalking = 1
  [ 26] ret
end

on action_gest me, tProps
  [  0] getprop 1253 ............................ <pPeopleSize>
  [  3] pushcons 30 ............................. <"sh">
  [  5] eq ...................................... <pPeopleSize = "sh">
  [  6] jmpifz [ 13] ............................ if pPeopleSize = "sh" then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 116 ............................. return 
  [ 13] pushcons 15 ............................. <"ey">
  [ 15] pushcons 16 ............................. <"fc">
  [ 17] pusharglist 2 ........................... <["ey", "fc"]>
  [ 19] pushlist ................................ <["ey", "fc"]>
  [ 20] setlocal 0 .............................. tList = ["ey", "fc"]
  [ 22] getparam 1 .............................. <tProps>
  [ 24] pushsymb 435 ............................ <#word>
  [ 27] pushint8 2 .............................. <2>
  [ 29] pusharglist 3 ........................... <tProps, #word, 2>
  [ 31] objcall 134 ............................. <tProps.word[2]>
  [ 33] setlocal 1 .............................. tGesture = tProps.word[2]
  [ 35] getlocal 1 .............................. <tGesture>
  [ 37] pushcons 58 ............................. <"spr">
  [ 39] eq ...................................... <tGesture = "spr">
  [ 40] jmpifz [ 47] ............................ if tGesture = "spr" then
  [ 43] pushcons 59 ............................. <"srp">
  [ 45] setlocal 1 .............................. tGesture = "srp"
  [ 47] getprop 1223 ............................ <pMainAction>
  [ 50] pushcons 12 ............................. <"lay">
  [ 52] eq ...................................... <pMainAction = "lay">
  [ 53] jmpifz [ 91] ............................ if pMainAction = "lay" then / else
  [ 56] pushcons 60 ............................. <"l">
  [ 58] getlocal 1 .............................. <tGesture>
  [ 60] pushsymb 425 ............................ <#char>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pushint8 2 .............................. <2>
  [ 67] pusharglist 4 ........................... <tGesture, #char, 1, 2>
  [ 69] objcall 134 ............................. <tGesture.char[1..2]>
  [ 71] joinstr ................................. <"l" & tGesture.char[1..2]>
  [ 72] setlocal 1 .............................. tGesture = "l" & tGesture.char[1..2]
  [ 74] pushsymb 1283 ........................... <#defineActMultiple>
  [ 77] getprop 1207 ............................ <pPartList>
  [ 80] getlocal 1 .............................. <tGesture>
  [ 82] getlocal 0 .............................. <tList>
  [ 84] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, tGesture, tList>
  [ 86] extcall 142 ............................. call(#defineActMultiple, pPartList, tGesture, tList)
  [ 88] jmp [159]
  [ 91] pushsymb 1283 ........................... <#defineActMultiple>
  [ 94] getprop 1207 ............................ <pPartList>
  [ 97] getlocal 1 .............................. <tGesture>
  [ 99] getlocal 0 .............................. <tList>
  [101] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, tGesture, tList>
  [103] extcall 142 ............................. call(#defineActMultiple, pPartList, tGesture, tList)
  [105] getlocal 1 .............................. <tGesture>
  [107] pushcons 61 ............................. <"ohd">
  [109] eq ...................................... <tGesture = "ohd">
  [110] jmpifz [159] ............................ if tGesture = "ohd" then
  [113] getprop 1207 ............................ <pPartList>
  [116] getprop 1208 ............................ <pPartIndex>
  [119] pushcons 13 ............................. <"hd">
  [121] pusharglist 2 ........................... <pPartIndex, "hd">
  [123] objcall 138 ............................. <pPartIndex["hd"]>
  [125] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [127] objcall 138 ............................. <pPartList[pPartIndex["hd"]]>
  [129] getlocal 1 .............................. <tGesture>
  [131] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], tGesture>
  [133] objcall 1324 ............................ pPartList[pPartIndex["hd"]].defineAct(tGesture)
  [136] getprop 1207 ............................ <pPartList>
  [139] getprop 1208 ............................ <pPartIndex>
  [142] pushcons 14 ............................. <"hr">
  [144] pusharglist 2 ........................... <pPartIndex, "hr">
  [146] objcall 138 ............................. <pPartIndex["hr"]>
  [148] pusharglist 2 ........................... <pPartList, pPartIndex["hr"]>
  [150] objcall 138 ............................. <pPartList[pPartIndex["hr"]]>
  [152] getlocal 1 .............................. <tGesture>
  [154] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hr"]], tGesture>
  [156] objcall 1324 ............................ pPartList[pPartIndex["hr"]].defineAct(tGesture)
  [159] ret
end

on action_wave me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1229 ............................ pWaving = 1
  [  5] ret
end

on action_dance me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tStyleNum = tProps.word[2]
  [ 13] getlocal 0 .............................. <tStyleNum>
  [ 15] pusharglist 1 ........................... <tStyleNum>
  [ 17] extcall 426 ............................. <integer(tStyleNum)>
  [ 20] setprop 1228 ............................ pDancing = integer(tStyleNum)
  [ 23] getprop 1228 ............................ <pDancing>
  [ 26] pusharglist 0 ........................... <>
  [ 28] extcall 120 ............................. <VOID>
  [ 30] eq ...................................... <pDancing = VOID>
  [ 31] jmpifz [ 39] ............................ if pDancing = VOID then
  [ 34] pushint8 1 .............................. <1>
  [ 36] setprop 1228 ............................ pDancing = 1
  [ 39] pushcons 62 ............................. <"dance.">
  [ 41] getprop 1228 ............................ <pDancing>
  [ 44] joinstr ................................. <"dance." & pDancing>
  [ 45] setlocal 1 .............................. tStyle = "dance." & pDancing
  [ 47] getparam 0 .............................. <me>
  [ 49] getlocal 1 .............................. <tStyle>
  [ 51] pusharglistnoret 2 ...................... <me, tStyle>
  [ 53] objcall 1179 ............................ me.startAnimation(tStyle)
  [ 56] ret
end

on action_ohd me
  [  0] pushsymb 1283 ........................... <#defineActMultiple>
  [  3] getprop 1207 ............................ <pPartList>
  [  6] pushcons 61 ............................. <"ohd">
  [  8] pushcons 13 ............................. <"hd">
  [ 10] pushcons 16 ............................. <"fc">
  [ 12] pushcons 15 ............................. <"ey">
  [ 14] pushcons 14 ............................. <"hr">
  [ 16] pusharglist 4 ........................... <["hd", "fc", "ey", "hr"]>
  [ 18] pushlist ................................ <["hd", "fc", "ey", "hr"]>
  [ 19] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "ohd", ["hd", "fc", "ey", "hr"]>
  [ 21] extcall 142 ............................. call(#defineActMultiple, pPartList, "ohd", ["hd", "fc", "ey", "hr"])
  [ 23] pushsymb 1319 ........................... <#doHandWorkRight>
  [ 26] getprop 1207 ............................ <pPartList>
  [ 29] pushcons 61 ............................. <"ohd">
  [ 31] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "ohd">
  [ 33] extcall 142 ............................. call(#doHandWorkRight, pPartList, "ohd")
  [ 35] ret
end

on action_trd me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1230 ............................ pTrading = 1
  [  5] ret
end

on action_sleep me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1227 ............................ pSleeping = 1
  [  5] ret
end

on action_flatctrl me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setprop 1231 ............................ pCtrlType = tProps.word[2]
  [ 14] ret
end

on action_mod me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 435 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 134 ............................. <tProps.word[2]>
  [ 11] setprop 1237 ............................ pModState = tProps.word[2]
  [ 14] ret
end

on action_sign me, props
  [  0] pushcons 63 ............................. <"sign">
  [  2] getparam 1 .............................. <props>
  [  4] pushsymb 435 ............................ <#word>
  [  7] pushint8 2 .............................. <2>
  [  9] pusharglist 3 ........................... <props, #word, 2>
  [ 11] objcall 134 ............................. <props.word[2]>
  [ 13] joinstr ................................. <"sign" & props.word[2]>
  [ 14] setlocal 0 .............................. tSignMem = "sign" & props.word[2]
  [ 16] getlocal 0 .............................. <tSignMem>
  [ 18] pusharglist 1 ........................... <tSignMem>
  [ 20] extcall 330 ............................. <getmemnum(tSignMem)>
  [ 23] pushzero ................................ <0>
  [ 24] eq ...................................... <getmemnum(tSignMem) = 0>
  [ 25] jmpifz [ 33] ............................ if getmemnum(tSignMem) = 0 then
  [ 28] pushzero ................................ <0>
  [ 29] pusharglistnoret 1 ...................... <0>
  [ 31] extcall 116 ............................. return 0
  [ 33] pushsymb 1289 ........................... <#doHandWorkLeft>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 1207 ......................... <me.pPartList>
  [ 41] pushcons 64 ............................. <"sig">
  [ 43] pusharglistnoret 3 ...................... <#doHandWorkLeft, me.pPartList, "sig">
  [ 45] extcall 142 ............................. call(#doHandWorkLeft, me.pPartList, "sig")
  [ 47] pushcons 65 ............................. <"SIGN_EXTRA">
  [ 49] setlocal 1 .............................. tSignObjID = "SIGN_EXTRA"
  [ 51] getprop 1238 ............................ <pExtraObjs>
  [ 54] getlocal 1 .............................. <tSignObjID>
  [ 56] pusharglist 2 ........................... <pExtraObjs, tSignObjID>
  [ 58] objcall 138 ............................. <pExtraObjs[tSignObjID]>
  [ 60] pusharglist 1 ........................... <pExtraObjs[tSignObjID]>
  [ 62] extcall 253 ............................. <voidp(pExtraObjs[tSignObjID])>
  [ 64] jmpifz [ 85] ............................ if voidp(pExtraObjs[tSignObjID]) then
  [ 67] getprop 1238 ............................ <pExtraObjs>
  [ 70] getlocal 1 .............................. <tSignObjID>
  [ 72] pushsymb 111 ............................ <#temp>
  [ 74] pushcons 66 ............................. <"HumanExtra Sign Class">
  [ 76] pusharglist 2 ........................... <#temp, "HumanExtra Sign Class">
  [ 78] extcall 109 ............................. <createObject(#temp, "HumanExtra Sign Class")>
  [ 80] pusharglistnoret 3 ...................... <pExtraObjs, tSignObjID, createObject(#temp, "HumanExtra Sign Class")>
  [ 82] objcall 667 ............................. pExtraObjs.addProp(tSignObjID, createObject(#temp, "HumanExtra Sign Class"))
  [ 85] pushsymb 1328 ........................... <#show_sign>
  [ 88] getprop 1238 ............................ <pExtraObjs>
  [ 91] pushcons 67 ............................. <"sprite">
  [ 93] getprop 297 ............................. <pSprite>
  [ 96] pushcons 68 ............................. <"direction">
  [ 98] getprop 376 ............................. <pDirection>
  [101] pushcons 69 ............................. <"signmember">
  [103] getlocal 0 .............................. <tSignMem>
  [105] pusharglist 6 ........................... <["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [107] pushproplist ............................ <["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [108] pusharglistnoret 3 ...................... <#show_sign, pExtraObjs, ["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [110] extcall 142 ............................. call(#show_sign, pExtraObjs, ["sprite": pSprite, "direction": pDirection, "signmember": tSignMem])
  [112] ret
end
