property pName, pClass, pCustom, pSex, pModState, pCtrlType, pBadge, pBuffer, pSprite, pMatteSpr, pMember, pShadowSpr, pShadowFix, pDefShadowMem, pPartList, pPartIndex, pFlipList, pUpdateRect, pDirection, pLastDir, pHeadDir, pLocX, pLocY, pLocH, pLocFix, pXFactor, pYFactor, pHFactor, pScreenLoc, pStartLScreen, pDestLScreen, pRestingHeight, pAnimCounter, pMoveStart, pMoveTime, pEyesClosed, pSync, pChanges, pAlphaColor, pCanvasSize, pColors, pPeopleSize, pMainAction, pMoving, pTalking, pCarrying, pSleeping, pDancing, pWaving, pTrading, pAnimating, pSwim, pCurrentAnim, pGeometry, pExtraObjs, pInfoStruct, pCorrectLocZ, pPartClass, pQueuesWithObj, pPreviousLoc, pBaseLocZ

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 15 .............................. pName = EMPTY
  [  4] pusharglist 0 ........................... <[]>
  [  6] pushlist ................................ <[]>
  [  7] setprop 1249 ............................ pPartList = []
  [ 10] pusharglist 0 ........................... <[:]>
  [ 12] pushproplist ............................ <[:]>
  [ 13] setprop 1250 ............................ pPartIndex = [:]
  [ 16] pushzero ................................ <0>
  [ 17] pushint8 1 .............................. <1>
  [ 19] pushint8 2 .............................. <2>
  [ 21] pushint8 3 .............................. <3>
  [ 23] pushint8 2 .............................. <2>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pushzero ................................ <0>
  [ 28] pushint8 7 .............................. <7>
  [ 30] pusharglist 8 ........................... <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 32] pushlist ................................ <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 33] setprop 1251 ............................ pFlipList = [0, 1, 2, 3, 2, 1, 0, 7]
  [ 36] pushzero ................................ <0>
  [ 37] pushzero ................................ <0>
  [ 38] pusharglist 2 ........................... <0, 0>
  [ 40] extcall 375 ............................. <point(0, 0)>
  [ 43] setprop 1252 ............................ pLocFix = point(0, 0)
  [ 46] pushzero ................................ <0>
  [ 47] pushzero ................................ <0>
  [ 48] pushzero ................................ <0>
  [ 49] pushzero ................................ <0>
  [ 50] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 52] extcall 137 ............................. <rect(0, 0, 0, 0)>
  [ 54] setprop 1253 ............................ pUpdateRect = rect(0, 0, 0, 0)
  [ 57] pushzero ................................ <0>
  [ 58] pushzero ................................ <0>
  [ 59] pushzero ................................ <0>
  [ 60] pusharglist 3 ........................... <[0, 0, 0]>
  [ 62] pushlist ................................ <[0, 0, 0]>
  [ 63] setprop 1254 ............................ pScreenLoc = [0, 0, 0]
  [ 66] pushzero ................................ <0>
  [ 67] pushzero ................................ <0>
  [ 68] pushzero ................................ <0>
  [ 69] pusharglist 3 ........................... <[0, 0, 0]>
  [ 71] pushlist ................................ <[0, 0, 0]>
  [ 72] setprop 1255 ............................ pStartLScreen = [0, 0, 0]
  [ 75] pushzero ................................ <0>
  [ 76] pushzero ................................ <0>
  [ 77] pushzero ................................ <0>
  [ 78] pusharglist 3 ........................... <[0, 0, 0]>
  [ 80] pushlist ................................ <[0, 0, 0]>
  [ 81] setprop 1256 ............................ pDestLScreen = [0, 0, 0]
  [ 84] pushzero ................................ <0>
  [ 85] pushzero ................................ <0>
  [ 86] pushzero ................................ <0>
  [ 87] pusharglist 3 ........................... <[0, 0, 0]>
  [ 89] pushlist ................................ <[0, 0, 0]>
  [ 90] setprop 1257 ............................ pPreviousLoc = [0, 0, 0]
  [ 93] pushfloat32 0.0 ......................... <0.0>
  [ 98] setprop 1258 ............................ pRestingHeight = 0.0
  [101] pushzero ................................ <0>
  [102] setprop 1259 ............................ pAnimCounter = 0
  [105] pushzero ................................ <0>
  [106] setprop 1260 ............................ pMoveStart = 0
  [109] pushint16 500 ........................... <500>
  [112] setprop 1261 ............................ pMoveTime = 500
  [115] pushzero ................................ <0>
  [116] setprop 1262 ............................ pEyesClosed = 0
  [119] pushint8 1 .............................. <1>
  [121] setprop 1263 ............................ pSync = 1
  [124] pushint8 1 .............................. <1>
  [126] setprop 1264 ............................ pChanges = 1
  [129] pushcons 1 .............................. <"std">
  [131] setprop 1265 ............................ pMainAction = "std"
  [134] pushzero ................................ <0>
  [135] setprop 1266 ............................ pMoving = 0
  [138] pushzero ................................ <0>
  [139] setprop 1267 ............................ pTalking = 0
  [142] pushzero ................................ <0>
  [143] setprop 1268 ............................ pCarrying = 0
  [146] pushzero ................................ <0>
  [147] setprop 1269 ............................ pSleeping = 0
  [150] pushzero ................................ <0>
  [151] setprop 1270 ............................ pDancing = 0
  [154] pushzero ................................ <0>
  [155] setprop 1271 ............................ pWaving = 0
  [158] pushzero ................................ <0>
  [159] setprop 1272 ............................ pTrading = 0
  [162] pushzero ................................ <0>
  [163] setprop 1273 ............................ pCtrlType = 0
  [166] pushzero ................................ <0>
  [167] setprop 1274 ............................ pAnimating = 0
  [170] pushzero ................................ <0>
  [171] setprop 1275 ............................ pSwim = 0
  [174] pusharglist 0 ........................... <>
  [176] extcall 1032 ............................ <SPACE>
  [179] setprop 936 ............................. pBadge = SPACE
  [182] pushcons 0 .............................. <EMPTY>
  [184] setprop 1276 ............................ pCurrentAnim = EMPTY
  [187] pushint16 255 ........................... <255>
  [190] pushint16 255 ........................... <255>
  [193] pushint16 255 ........................... <255>
  [196] pusharglist 3 ........................... <255, 255, 255>
  [198] extcall 94 .............................. <rgb(255, 255, 255)>
  [200] setprop 1277 ............................ pAlphaColor = rgb(255, 255, 255)
  [203] pushint8 1 .............................. <1>
  [205] setprop 1263 ............................ pSync = 1
  [208] pusharglist 0 ........................... <[:]>
  [210] pushproplist ............................ <[:]>
  [211] setprop 1278 ............................ pColors = [:]
  [214] pushzero ................................ <0>
  [215] setprop 1279 ............................ pModState = 0
  [218] pusharglist 0 ........................... <[:]>
  [220] pushproplist ............................ <[:]>
  [221] setprop 1280 ............................ pExtraObjs = [:]
  [224] pushzero ................................ <0>
  [225] pusharglist 1 ........................... <0>
  [227] extcall 64 .............................. <member(0)>
  [229] setprop 1281 ............................ pDefShadowMem = member(0)
  [232] pusharglist 0 ........................... <[:]>
  [234] pushproplist ............................ <[:]>
  [235] setprop 1282 ............................ pInfoStruct = [:]
  [238] pushzero ................................ <0>
  [239] setprop 1283 ............................ pQueuesWithObj = 0
  [242] pushsymb 52 ............................. <#room>
  [244] pusharglist 1 ........................... <#room>
  [246] extcall 51 .............................. <getThread(#room)>
  [248] pusharglist 1 ........................... <getThread(#room)>
  [250] objcall 53 .............................. <getThread(#room).getInterface()>
  [252] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [254] objcall 54 .............................. <getThread(#room).getInterface().getGeometry()>
  [256] setprop 1034 ............................ pGeometry = getThread(#room).getInterface().getGeometry()
  [259] getprop 1034 ............................ <pGeometry>
  [262] getobjprop 50 ........................... <pGeometry.pXFactor>
  [264] setprop 50 .............................. pXFactor = pGeometry.pXFactor
  [266] getprop 1034 ............................ <pGeometry>
  [269] getobjprop 1018 ......................... <pGeometry.pYFactor>
  [272] setprop 1018 ............................ pYFactor = pGeometry.pYFactor
  [275] getprop 1034 ............................ <pGeometry>
  [278] getobjprop 1019 ......................... <pGeometry.pHFactor>
  [281] setprop 1019 ............................ pHFactor = pGeometry.pHFactor
  [284] pushzero ................................ <0>
  [285] setprop 1284 ............................ pCorrectLocZ = 0
  [288] pushsymb 52 ............................. <#room>
  [290] pusharglist 1 ........................... <#room>
  [292] extcall 51 .............................. <getThread(#room)>
  [294] pusharglist 1 ........................... <getThread(#room)>
  [296] objcall 115 ............................. <getThread(#room).getComponent()>
  [298] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [300] objcall 573 ............................. <getThread(#room).getComponent().getClassContainer()>
  [303] pushcons 2 .............................. <"bodypart">
  [305] pusharglist 2 ........................... <getThread(#room).getComponent().getClassContainer(), "bodypart">
  [307] objcall 133 ............................. <getThread(#room).getComponent().getClassContainer().get("bodypart")>
  [309] pusharglist 1 ........................... <getThread(#room).getComponent().getClassContainer().get("bodypart")>
  [311] extcall 480 ............................. <value(getThread(#room).getComponent().getClassContainer().get("bodypart"))>
  [314] setprop 1285 ............................ pPartClass = value(getThread(#room).getComponent().getClassContainer().get("bodypart"))
  [317] pushzero ................................ <0>
  [318] setprop 1286 ............................ pBaseLocZ = 0
  [321] pushint8 1 .............................. <1>
  [323] pusharglistnoret 1 ...................... <1>
  [325] extcall 31 .............................. return 1
  [327] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 30 .............................. <VOID>
  [  4] setprop 1034 ............................ pGeometry = VOID
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] setprop 1249 ............................ pPartList = []
  [ 13] pusharglist 0 ........................... <[:]>
  [ 15] pushproplist ............................ <[:]>
  [ 16] setprop 1282 ............................ pInfoStruct = [:]
  [ 19] getprop 404 ............................. <pSprite>
  [ 22] getobjprop 36 ........................... <pSprite.spriteNum>
  [ 24] pusharglistnoret 1 ...................... <pSprite.spriteNum>
  [ 26] extcall 35 .............................. releaseSprite(pSprite.spriteNum)
  [ 28] getprop 1287 ............................ <pMatteSpr>
  [ 31] getobjprop 36 ........................... <pMatteSpr.spriteNum>
  [ 33] pusharglistnoret 1 ...................... <pMatteSpr.spriteNum>
  [ 35] extcall 35 .............................. releaseSprite(pMatteSpr.spriteNum)
  [ 37] getprop 1288 ............................ <pShadowSpr>
  [ 40] getobjprop 36 ........................... <pShadowSpr.spriteNum>
  [ 42] pusharglistnoret 1 ...................... <pShadowSpr.spriteNum>
  [ 44] extcall 35 .............................. releaseSprite(pShadowSpr.spriteNum)
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglist 1 ........................... <me>
  [ 50] objcall 1228 ............................ <me.getCanvasName()>
  [ 53] pusharglist 1 ........................... <me.getCanvasName()>
  [ 55] extcall 62 .............................. <memberExists(me.getCanvasName())>
  [ 57] jmpifz [ 72] ............................ if memberExists(me.getCanvasName()) then
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglist 1 ........................... <me>
  [ 64] objcall 1228 ............................ <me.getCanvasName()>
  [ 67] pusharglistnoret 1 ...................... <me.getCanvasName()>
  [ 69] extcall 1145 ............................ removeMember(me.getCanvasName())
  [ 72] pushsymb 1 .............................. <#deconstruct>
  [ 74] getprop 1280 ............................ <pExtraObjs>
  [ 77] pusharglistnoret 2 ...................... <#deconstruct, pExtraObjs>
  [ 79] extcall 281 ............................. call(#deconstruct, pExtraObjs)
  [ 82] pusharglist 0 ........................... <>
  [ 84] extcall 30 .............................. <VOID>
  [ 86] setprop 1280 ............................ pExtraObjs = VOID
  [ 89] pusharglist 0 ........................... <>
  [ 91] extcall 30 .............................. <VOID>
  [ 93] setprop 1288 ............................ pShadowSpr = VOID
  [ 96] pusharglist 0 ........................... <>
  [ 98] extcall 30 .............................. <VOID>
  [100] setprop 1287 ............................ pMatteSpr = VOID
  [103] pusharglist 0 ........................... <>
  [105] extcall 30 .............................. <VOID>
  [107] setprop 404 ............................. pSprite = VOID
  [110] pushint8 1 .............................. <1>
  [112] pusharglistnoret 1 ...................... <1>
  [114] extcall 31 .............................. return 1
  [116] ret
end

on define me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pusharglistnoret 2 ...................... <me, tdata>
  [  6] objcall 1212 ............................ me.setup(tdata)
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 1228 ............................ <me.getCanvasName()>
  [ 16] pusharglist 1 ........................... <me.getCanvasName()>
  [ 18] extcall 62 .............................. <memberExists(me.getCanvasName())>
  [ 20] not ..................................... <not memberExists(me.getCanvasName())>
  [ 21] jmpifz [ 39] ............................ if not memberExists(me.getCanvasName()) then
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 1228 ............................ <me.getCanvasName()>
  [ 31] pushsymb 399 ............................ <#bitmap>
  [ 34] pusharglistnoret 2 ...................... <me.getCanvasName(), #bitmap>
  [ 36] extcall 433 ............................. createMember(me.getCanvasName(), #bitmap)
  [ 39] getprop 1289 ............................ <pCanvasSize>
  [ 42] pushsymb 1290 ........................... <#std>
  [ 45] pusharglist 2 ........................... <pCanvasSize, #std>
  [ 47] objcall 34 .............................. <pCanvasSize[#std]>
  [ 49] setlocal 0 .............................. tSize = pCanvasSize[#std]
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 1228 ............................ <me.getCanvasName()>
  [ 58] pusharglist 1 ........................... <me.getCanvasName()>
  [ 60] extcall 65 .............................. <getmemnum(me.getCanvasName())>
  [ 62] pusharglist 1 ........................... <getmemnum(me.getCanvasName())>
  [ 64] extcall 64 .............................. <member(getmemnum(me.getCanvasName()))>
  [ 66] setprop 1291 ............................ pMember = member(getmemnum(me.getCanvasName()))
  [ 69] getprop 1291 ............................ <pMember>
  [ 72] getlocal 0 .............................. <tSize>
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglist 2 ........................... <tSize, 1>
  [ 78] objcall 34 .............................. <tSize[1]>
  [ 80] getlocal 0 .............................. <tSize>
  [ 82] pushint8 2 .............................. <2>
  [ 84] pusharglist 2 ........................... <tSize, 2>
  [ 86] objcall 34 .............................. <tSize[2]>
  [ 88] getlocal 0 .............................. <tSize>
  [ 90] pushint8 3 .............................. <3>
  [ 92] pusharglist 2 ........................... <tSize, 3>
  [ 94] objcall 34 .............................. <tSize[3]>
  [ 96] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [ 98] extcall 63 .............................. <image(tSize[1], tSize[2], tSize[3])>
  [100] setobjprop 63 ........................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [102] getprop 1291 ............................ <pMember>
  [105] pushzero ................................ <0>
  [106] getprop 1291 ............................ <pMember>
  [109] getchainedprop 63 ....................... <pMember.image>
  [111] getobjprop 81 ........................... <pMember.image.height>
  [113] getlocal 0 .............................. <tSize>
  [115] pushint8 4 .............................. <4>
  [117] pusharglist 2 ........................... <tSize, 4>
  [119] objcall 34 .............................. <tSize[4]>
  [121] add ..................................... <pMember.image.height + tSize[4]>
  [122] pusharglist 2 ........................... <0, pMember.image.height + tSize[4]>
  [124] extcall 375 ............................. <point(0, pMember.image.height + tSize[4])>
  [127] setobjprop 118 .......................... pMember.regPoint = point(0, pMember.image.height + tSize[4])
  [129] getprop 1291 ............................ <pMember>
  [132] getchainedprop 63 ....................... <pMember.image>
  [134] pusharglist 1 ........................... <pMember.image>
  [136] objcall 636 ............................. <pMember.image.duplicate()>
  [139] setprop 1292 ............................ pBuffer = pMember.image.duplicate()
  [142] getparam 0 .............................. <me>
  [144] pusharglist 1 ........................... <me>
  [146] objcall 75 .............................. <me.getID()>
  [148] pusharglist 1 ........................... <me.getID()>
  [150] extcall 74 .............................. <reserveSprite(me.getID())>
  [152] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [154] extcall 73 .............................. <sprite(reserveSprite(me.getID()))>
  [156] setprop 404 ............................. pSprite = sprite(reserveSprite(me.getID()))
  [159] getprop 404 ............................. <pSprite>
  [162] getprop 1291 ............................ <pMember>
  [165] getobjprop 1293 ......................... <pMember.number>
  [168] setobjprop 79 ........................... pSprite.castNum = pMember.number
  [170] getprop 404 ............................. <pSprite>
  [173] getprop 1291 ............................ <pMember>
  [176] getobjprop 80 ........................... <pMember.width>
  [178] setobjprop 80 ........................... pSprite.width = pMember.width
  [180] getprop 404 ............................. <pSprite>
  [183] getprop 1291 ............................ <pMember>
  [186] getobjprop 81 ........................... <pMember.height>
  [188] setobjprop 81 ........................... pSprite.height = pMember.height
  [190] getprop 404 ............................. <pSprite>
  [193] pushint8 36 ............................. <36>
  [195] setobjprop 93 ........................... pSprite.ink = 36
  [197] getparam 0 .............................. <me>
  [199] pusharglist 1 ........................... <me>
  [201] objcall 75 .............................. <me.getID()>
  [203] pusharglist 1 ........................... <me.getID()>
  [205] extcall 74 .............................. <reserveSprite(me.getID())>
  [207] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [209] extcall 73 .............................. <sprite(reserveSprite(me.getID()))>
  [211] setprop 1287 ............................ pMatteSpr = sprite(reserveSprite(me.getID()))
  [214] getprop 1287 ............................ <pMatteSpr>
  [217] getprop 1291 ............................ <pMember>
  [220] getobjprop 1293 ......................... <pMember.number>
  [223] setobjprop 79 ........................... pMatteSpr.castNum = pMember.number
  [225] getprop 1287 ............................ <pMatteSpr>
  [228] pushint8 8 .............................. <8>
  [230] setobjprop 93 ........................... pMatteSpr.ink = 8
  [232] getprop 1287 ............................ <pMatteSpr>
  [235] pushzero ................................ <0>
  [236] setobjprop 436 .......................... pMatteSpr.blend = 0
  [239] getparam 0 .............................. <me>
  [241] pusharglist 1 ........................... <me>
  [243] objcall 75 .............................. <me.getID()>
  [245] pusharglist 1 ........................... <me.getID()>
  [247] extcall 74 .............................. <reserveSprite(me.getID())>
  [249] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [251] extcall 73 .............................. <sprite(reserveSprite(me.getID()))>
  [253] setprop 1288 ............................ pShadowSpr = sprite(reserveSprite(me.getID()))
  [256] getprop 1288 ............................ <pShadowSpr>
  [259] pushint8 16 ............................. <16>
  [261] setobjprop 436 .......................... pShadowSpr.blend = 16
  [264] getprop 1288 ............................ <pShadowSpr>
  [267] pushint8 8 .............................. <8>
  [269] setobjprop 93 ........................... pShadowSpr.ink = 8
  [271] pushzero ................................ <0>
  [272] setprop 1294 ............................ pShadowFix = 0
  [275] getprop 1295 ............................ <pPeopleSize>
  [278] pushcons 3 .............................. <"_std_sd_001_0_0">
  [280] joinstr ................................. <pPeopleSize & "_std_sd_001_0_0">
  [281] pusharglist 1 ........................... <pPeopleSize & "_std_sd_001_0_0">
  [283] extcall 65 .............................. <getmemnum(pPeopleSize & "_std_sd_001_0_0")>
  [285] pusharglist 1 ........................... <getmemnum(pPeopleSize & "_std_sd_001_0_0")>
  [287] extcall 64 .............................. <member(getmemnum(pPeopleSize & "_std_sd_001_0_0"))>
  [289] setprop 1281 ............................ pDefShadowMem = member(getmemnum(pPeopleSize & "_std_sd_001_0_0"))
  [292] pushsymb 52 ............................. <#room>
  [294] pusharglist 1 ........................... <#room>
  [296] extcall 51 .............................. <getThread(#room)>
  [298] pusharglist 1 ........................... <getThread(#room)>
  [300] objcall 53 .............................. <getThread(#room).getInterface()>
  [302] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [304] objcall 75 .............................. <getThread(#room).getInterface().getID()>
  [306] setlocal 1 .............................. tTargetID = getThread(#room).getInterface().getID()
  [308] getprop 1287 ............................ <pMatteSpr>
  [311] getobjprop 36 ........................... <pMatteSpr.spriteNum>
  [313] getparam 0 .............................. <me>
  [315] pusharglist 1 ........................... <me>
  [317] objcall 75 .............................. <me.getID()>
  [319] pusharglistnoret 2 ...................... <pMatteSpr.spriteNum, me.getID()>
  [321] extcall 76 .............................. setEventBroker(pMatteSpr.spriteNum, me.getID())
  [323] getprop 1287 ............................ <pMatteSpr>
  [326] pushsymb 222 ............................ <#eventProcUserObj>
  [328] getlocal 1 .............................. <tTargetID>
  [330] pushsymb 83 ............................. <#mouseDown>
  [332] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [334] objcall 84 .............................. pMatteSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [336] getprop 1287 ............................ <pMatteSpr>
  [339] pushsymb 217 ............................ <#eventProcUserRollOver>
  [341] getlocal 1 .............................. <tTargetID>
  [343] pushsymb 86 ............................. <#mouseEnter>
  [345] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseEnter>
  [347] objcall 84 .............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseEnter)
  [349] getprop 1287 ............................ <pMatteSpr>
  [352] pushsymb 217 ............................ <#eventProcUserRollOver>
  [354] getlocal 1 .............................. <tTargetID>
  [356] pushsymb 87 ............................. <#mouseLeave>
  [358] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseLeave>
  [360] objcall 84 .............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseLeave)
  [362] getprop 1288 ............................ <pShadowSpr>
  [365] getobjprop 36 ........................... <pShadowSpr.spriteNum>
  [367] getparam 0 .............................. <me>
  [369] pusharglist 1 ........................... <me>
  [371] objcall 75 .............................. <me.getID()>
  [373] pusharglistnoret 2 ...................... <pShadowSpr.spriteNum, me.getID()>
  [375] extcall 76 .............................. setEventBroker(pShadowSpr.spriteNum, me.getID())
  [377] getprop 1288 ............................ <pShadowSpr>
  [380] pushsymb 222 ............................ <#eventProcUserObj>
  [382] getlocal 1 .............................. <tTargetID>
  [384] pushsymb 83 ............................. <#mouseDown>
  [386] pusharglistnoret 4 ...................... <pShadowSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [388] objcall 84 .............................. pShadowSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [390] getprop 1282 ............................ <pInfoStruct>
  [393] pushsymb 58 ............................. <#name>
  [395] getprop 15 .............................. <pName>
  [397] pusharglistnoret 3 ...................... <pInfoStruct, #name, pName>
  [399] objcall 59 .............................. pInfoStruct[#name] = pName
  [401] getprop 1282 ............................ <pInfoStruct>
  [404] pushsymb 38 ............................. <#class>
  [406] getprop 14 .............................. <pClass>
  [408] pusharglistnoret 3 ...................... <pInfoStruct, #class, pClass>
  [410] objcall 59 .............................. pInfoStruct[#class] = pClass
  [412] getprop 1282 ............................ <pInfoStruct>
  [415] pushsymb 60 ............................. <#custom>
  [417] getprop 16 .............................. <pCustom>
  [419] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [421] objcall 59 .............................. pInfoStruct[#custom] = pCustom
  [423] getprop 1282 ............................ <pInfoStruct>
  [426] pushsymb 63 ............................. <#image>
  [428] getparam 0 .............................. <me>
  [430] pusharglist 1 ........................... <me>
  [432] objcall 928 ............................. <me.getPicture()>
  [435] pusharglistnoret 3 ...................... <pInfoStruct, #image, me.getPicture()>
  [437] objcall 59 .............................. pInfoStruct[#image] = me.getPicture()
  [439] getprop 1282 ............................ <pInfoStruct>
  [442] pushsymb 329 ............................ <#ctrl>
  [445] pushcons 4 .............................. <"furniture">
  [447] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, "furniture">
  [449] objcall 59 .............................. pInfoStruct[#ctrl] = "furniture"
  [451] getprop 1282 ............................ <pInfoStruct>
  [454] pushsymb 338 ............................ <#badge>
  [457] pushcons 5 .............................. <" ">
  [459] pusharglistnoret 3 ...................... <pInfoStruct, #badge, " ">
  [461] objcall 59 .............................. pInfoStruct[#badge] = " "
  [463] pushsymb 52 ............................. <#room>
  [465] pusharglist 1 ........................... <#room>
  [467] extcall 51 .............................. <getThread(#room)>
  [469] pusharglist 1 ........................... <getThread(#room)>
  [471] objcall 53 .............................. <getThread(#room).getInterface()>
  [473] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [475] objcall 119 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [477] setlocal 2 .............................. tViz = getThread(#room).getInterface().getRoomVisualizer()
  [479] getlocal 2 .............................. <tViz>
  [481] getparam 1 .............................. <tdata>
  [483] pushsymb 39 ............................. <#x>
  [485] pusharglist 2 ........................... <tdata, #x>
  [487] objcall 34 .............................. <tdata[#x]>
  [489] getparam 1 .............................. <tdata>
  [491] pushsymb 40 ............................. <#y>
  [493] pusharglist 2 ........................... <tdata, #y>
  [495] objcall 34 .............................. <tdata[#y]>
  [497] pushsymb 121 ............................ <#wallleft>
  [499] pushsymb 122 ............................ <#wallright>
  [501] pusharglist 2 ........................... <[#wallleft, #wallright]>
  [503] pushlist ................................ <[#wallleft, #wallright]>
  [504] pusharglist 4 ........................... <tViz, tdata[#x], tdata[#y], [#wallleft, #wallright]>
  [506] objcall 126 ............................. <tViz.getPartAtLocation(tdata[#x], tdata[#y], [#wallleft, #wallright])>
  [508] setlocal 3 .............................. tPart = tViz.getPartAtLocation(tdata[#x], tdata[#y], [#wallleft, #wallright])
  [510] getlocal 3 .............................. <tPart>
  [512] pushzero ................................ <0>
  [513] eq ...................................... <tPart = 0>
  [514] not ..................................... <not (tPart = 0)>
  [515] jmpifz [533] ............................ if not (tPart = 0) then
  [518] getlocal 3 .............................. <tPart>
  [520] pushsymb 129 ............................ <#locZ>
  [522] pusharglist 2 ........................... <tPart, #locZ>
  [524] objcall 34 .............................. <tPart[#locZ]>
  [526] pushint16 1000 .......................... <1000>
  [529] sub ..................................... <tPart[#locZ] - 1000>
  [530] setprop 1286 ............................ pBaseLocZ = tPart[#locZ] - 1000
  [533] pushint8 1 .............................. <1>
  [535] pusharglistnoret 1 ...................... <1>
  [537] extcall 31 .............................. return 1
  [539] ret
end

on setup me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 58 ............................. <#name>
  [  4] pusharglist 2 ........................... <tdata, #name>
  [  6] objcall 34 .............................. <tdata[#name]>
  [  8] setprop 15 .............................. pName = tdata[#name]
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 38 ............................. <#class>
  [ 14] pusharglist 2 ........................... <tdata, #class>
  [ 16] objcall 34 .............................. <tdata[#class]>
  [ 18] setprop 14 .............................. pClass = tdata[#class]
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 60 ............................. <#custom>
  [ 24] pusharglist 2 ........................... <tdata, #custom>
  [ 26] objcall 34 .............................. <tdata[#custom]>
  [ 28] setprop 16 .............................. pCustom = tdata[#custom]
  [ 30] getparam 1 .............................. <tdata>
  [ 32] pushsymb 847 ............................ <#sex>
  [ 35] pusharglist 2 ........................... <tdata, #sex>
  [ 37] objcall 34 .............................. <tdata[#sex]>
  [ 39] setprop 1299 ............................ pSex = tdata[#sex]
  [ 42] getparam 1 .............................. <tdata>
  [ 44] pushsymb 48 ............................. <#direction>
  [ 46] pusharglist 2 ........................... <tdata, #direction>
  [ 48] objcall 34 .............................. <tdata[#direction]>
  [ 50] pushint8 1 .............................. <1>
  [ 52] pusharglist 2 ........................... <tdata[#direction], 1>
  [ 54] objcall 34 .............................. <tdata[#direction][1]>
  [ 56] setprop 28 .............................. pDirection = tdata[#direction][1]
  [ 58] getprop 28 .............................. <pDirection>
  [ 60] setprop 1300 ............................ pHeadDir = pDirection
  [ 63] getprop 28 .............................. <pDirection>
  [ 65] setprop 1301 ............................ pLastDir = pDirection
  [ 68] getparam 1 .............................. <tdata>
  [ 70] pushsymb 39 ............................. <#x>
  [ 72] pusharglist 2 ........................... <tdata, #x>
  [ 74] objcall 34 .............................. <tdata[#x]>
  [ 76] setprop 19 .............................. pLocX = tdata[#x]
  [ 78] getparam 1 .............................. <tdata>
  [ 80] pushsymb 40 ............................. <#y>
  [ 82] pusharglist 2 ........................... <tdata, #y>
  [ 84] objcall 34 .............................. <tdata[#y]>
  [ 86] setprop 20 .............................. pLocY = tdata[#y]
  [ 88] getparam 1 .............................. <tdata>
  [ 90] pushsymb 41 ............................. <#h>
  [ 92] pusharglist 2 ........................... <tdata, #h>
  [ 94] objcall 34 .............................. <tdata[#h]>
  [ 96] setprop 21 .............................. pLocH = tdata[#h]
  [ 98] getparam 1 .............................. <tdata>
  [100] pushsymb 338 ............................ <#badge>
  [103] pusharglist 2 ........................... <tdata, #badge>
  [105] objcall 34 .............................. <tdata[#badge]>
  [107] setprop 936 ............................. pBadge = tdata[#badge]
  [110] pushcons 6 .............................. <"human.size.">
  [112] getprop 50 .............................. <pXFactor>
  [114] pusharglist 1 ........................... <pXFactor>
  [116] extcall 102 ............................. <integer(pXFactor)>
  [118] joinstr ................................. <"human.size." & integer(pXFactor)>
  [119] pusharglist 1 ........................... <"human.size." & integer(pXFactor)>
  [121] extcall 232 ............................. <getVariable("human.size." & integer(pXFactor))>
  [123] setprop 1295 ............................ pPeopleSize = getVariable("human.size." & integer(pXFactor))
  [126] getprop 1295 ............................ <pPeopleSize>
  [129] not ..................................... <not pPeopleSize>
  [130] jmpifz [149] ............................ if not pPeopleSize then
  [133] getparam 0 .............................. <me>
  [135] pushcons 7 .............................. <"People size not found, using default!">
  [137] pushsymb 1212 ........................... <#setup>
  [140] pusharglistnoret 3 ...................... <me, "People size not found, using default!", #setup>
  [142] extcall 72 .............................. error(me, "People size not found, using default!", #setup)
  [144] pushcons 8 .............................. <"h">
  [146] setprop 1295 ............................ pPeopleSize = "h"
  [149] getprop 1295 ............................ <pPeopleSize>
  [152] pushcons 8 .............................. <"h">
  [154] eq ...................................... <pPeopleSize = "h">
  [155] setprop 1284 ............................ pCorrectLocZ = pPeopleSize = "h"
  [158] pushcons 9 .............................. <"human.canvas.">
  [160] getprop 1295 ............................ <pPeopleSize>
  [163] joinstr ................................. <"human.canvas." & pPeopleSize>
  [164] pusharglist 1 ........................... <"human.canvas." & pPeopleSize>
  [166] extcall 232 ............................. <getVariable("human.canvas." & pPeopleSize)>
  [168] pusharglist 1 ........................... <getVariable("human.canvas." & pPeopleSize)>
  [170] extcall 480 ............................. <value(getVariable("human.canvas." & pPeopleSize))>
  [173] setprop 1289 ............................ pCanvasSize = value(getVariable("human.canvas." & pPeopleSize))
  [176] getprop 1289 ............................ <pCanvasSize>
  [179] not ..................................... <not pCanvasSize>
  [180] jmpifz [230] ............................ if not pCanvasSize then
  [183] getparam 0 .............................. <me>
  [185] pushcons 10 ............................. <"Canvas size not found, using default!">
  [187] pushsymb 1212 ........................... <#setup>
  [190] pusharglistnoret 3 ...................... <me, "Canvas size not found, using default!", #setup>
  [192] extcall 72 .............................. error(me, "Canvas size not found, using default!", #setup)
  [194] pushsymb 1290 ........................... <#std>
  [197] pushint8 64 ............................. <64>
  [199] pushint8 102 ............................ <102>
  [201] pushint8 32 ............................. <32>
  [203] pushint8 10 ............................. <10>
  [205] inv ..................................... <-10>
  [206] pusharglist 4 ........................... <[64, 102, 32, -10]>
  [208] pushlist ................................ <[64, 102, 32, -10]>
  [209] pushsymb 1302 ........................... <#lay>
  [212] pushint8 89 ............................. <89>
  [214] pushint8 102 ............................ <102>
  [216] pushint8 32 ............................. <32>
  [218] pushint8 8 .............................. <8>
  [220] inv ..................................... <-8>
  [221] pusharglist 4 ........................... <[89, 102, 32, -8]>
  [223] pushlist ................................ <[89, 102, 32, -8]>
  [224] pusharglist 4 ........................... <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [226] pushproplist ............................ <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [227] setprop 1289 ............................ pCanvasSize = [#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]
  [230] getparam 0 .............................. <me>
  [232] getparam 1 .............................. <tdata>
  [234] pushsymb 846 ............................ <#figure>
  [237] pusharglist 2 ........................... <tdata, #figure>
  [239] objcall 34 .............................. <tdata[#figure]>
  [241] pusharglist 2 ........................... <me, tdata[#figure]>
  [243] objcall 1225 ............................ <me.setPartLists(tdata[#figure])>
  [246] not ..................................... <not me.setPartLists(tdata[#figure])>
  [247] jmpifz [265] ............................ if not me.setPartLists(tdata[#figure]) then
  [250] getparam 0 .............................. <me>
  [252] pushcons 11 ............................. <"Couldn't create part lists!">
  [254] pushsymb 1212 ........................... <#setup>
  [257] pusharglist 3 ........................... <me, "Couldn't create part lists!", #setup>
  [259] extcall 72 .............................. <error(me, "Couldn't create part lists!", #setup)>
  [261] pusharglistnoret 1 ...................... <error(me, "Couldn't create part lists!", #setup)>
  [263] extcall 31 .............................. return error(me, "Couldn't create part lists!", #setup)
  [265] getparam 0 .............................. <me>
  [267] getprop 19 .............................. <pLocX>
  [269] getprop 20 .............................. <pLocY>
  [271] getprop 21 .............................. <pLocH>
  [273] getprop 1300 ............................ <pHeadDir>
  [276] getprop 28 .............................. <pDirection>
  [278] pusharglistnoret 6 ...................... <me, pLocX, pLocY, pLocH, pHeadDir, pDirection>
  [280] objcall 825 ............................. me.resetValues(pLocX, pLocY, pLocH, pHeadDir, pDirection)
  [283] getparam 0 .............................. <me>
  [285] getprop 19 .............................. <pLocX>
  [287] getprop 20 .............................. <pLocY>
  [289] getprop 21 .............................. <pLocH>
  [291] getprop 28 .............................. <pDirection>
  [293] pusharglistnoret 5 ...................... <me, pLocX, pLocY, pLocH, pDirection>
  [295] objcall 826 ............................. me.Refresh(pLocX, pLocY, pLocH, pDirection)
  [298] pushzero ................................ <0>
  [299] setprop 1263 ............................ pSync = 0
  [302] ret
end

on update me
  [  0] getprop 1283 ............................ <pQueuesWithObj>
  [  3] jmpifz [ 23] ............................ if pQueuesWithObj then / else
  [  6] getparam 0 .............................. <me>
  [  8] pusharglistnoret 1 ...................... <me>
  [ 10] objcall 559 ............................. me.prepare()
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglistnoret 1 ...................... <me>
  [ 17] objcall 724 ............................. me.render()
  [ 20] jmp [ 53]
  [ 23] getprop 1263 ............................ <pSync>
  [ 26] not ..................................... <not pSync>
  [ 27] setprop 1263 ............................ pSync = not pSync
  [ 30] getprop 1263 ............................ <pSync>
  [ 33] jmpifz [ 46] ............................ if pSync then / else
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 559 ............................. me.prepare()
  [ 43] jmp [ 53]
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 1 ...................... <me>
  [ 50] objcall 724 ............................. me.render()
  [ 53] ret
end

on resetValues me, tX, tY, tH, tDirHead, tDirBody
  [  0] getprop 1283 ............................ <pQueuesWithObj>
  [  3] getprop 1257 ............................ <pPreviousLoc>
  [  6] getparam 1 .............................. <tX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getparam 3 .............................. <tH>
  [ 12] pusharglist 3 ........................... <[tX, tY, tH]>
  [ 14] pushlist ................................ <[tX, tY, tH]>
  [ 15] eq ...................................... <pPreviousLoc = [tX, tY, tH]>
  [ 16] and ..................................... <pQueuesWithObj and (pPreviousLoc = [tX, tY, tH])>
  [ 17] jmpifz [ 26] ............................ if pQueuesWithObj and (pPreviousLoc = [tX, tY, tH]) then
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 31 .............................. return 1
  [ 26] pushzero ................................ <0>
  [ 27] setprop 1266 ............................ pMoving = 0
  [ 30] pushzero ................................ <0>
  [ 31] setprop 1270 ............................ pDancing = 0
  [ 34] pushzero ................................ <0>
  [ 35] setprop 1267 ............................ pTalking = 0
  [ 38] pushzero ................................ <0>
  [ 39] setprop 1268 ............................ pCarrying = 0
  [ 42] pushzero ................................ <0>
  [ 43] setprop 1271 ............................ pWaving = 0
  [ 46] pushzero ................................ <0>
  [ 47] setprop 1272 ............................ pTrading = 0
  [ 50] pushzero ................................ <0>
  [ 51] setprop 1273 ............................ pCtrlType = 0
  [ 54] pushzero ................................ <0>
  [ 55] setprop 1274 ............................ pAnimating = 0
  [ 58] pushzero ................................ <0>
  [ 59] setprop 1279 ............................ pModState = 0
  [ 62] pushzero ................................ <0>
  [ 63] setprop 1269 ............................ pSleeping = 0
  [ 66] pushzero ................................ <0>
  [ 67] setprop 1283 ............................ pQueuesWithObj = 0
  [ 70] pushint8 1 .............................. <1>
  [ 72] inv ..................................... <-1>
  [ 73] pushint8 2 .............................. <2>
  [ 75] pusharglist 2 ........................... <-1, 2>
  [ 77] extcall 375 ............................. <point(-1, 2)>
  [ 80] setprop 1252 ............................ pLocFix = point(-1, 2)
  [ 83] pushsymb 651 ............................ <#reset>
  [ 86] getprop 1249 ............................ <pPartList>
  [ 89] pusharglistnoret 2 ...................... <#reset, pPartList>
  [ 91] extcall 281 ............................. call(#reset, pPartList)
  [ 94] getprop 1034 ............................ <pGeometry>
  [ 97] getparam 1 .............................. <tX>
  [ 99] getparam 2 .............................. <tY>
  [101] getparam 3 .............................. <tH>
  [103] pusharglist 4 ........................... <pGeometry, tX, tY, tH>
  [105] objcall 111 ............................. <pGeometry.getScreenCoordinate(tX, tY, tH)>
  [107] setprop 1254 ............................ pScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tH)
  [110] pushcons 1 .............................. <"std">
  [112] setprop 1265 ............................ pMainAction = "std"
  [115] getparam 1 .............................. <tX>
  [117] setprop 19 .............................. pLocX = tX
  [119] getparam 2 .............................. <tY>
  [121] setprop 20 .............................. pLocY = tY
  [123] getparam 3 .............................. <tH>
  [125] setprop 21 .............................. pLocH = tH
  [127] pushfloat32 0.0 ......................... <0.0>
  [132] setprop 1258 ............................ pRestingHeight = 0.0
  [135] getparam 5 .............................. <tDirBody>
  [137] getprop 1251 ............................ <pFlipList>
  [140] getparam 5 .............................. <tDirBody>
  [142] pushint8 1 .............................. <1>
  [144] add ..................................... <tDirBody + 1>
  [145] pusharglist 2 ........................... <pFlipList, tDirBody + 1>
  [147] objcall 34 .............................. <pFlipList[tDirBody + 1]>
  [149] nteq .................................... <tDirBody <> pFlipList[tDirBody + 1]>
  [150] jmpifz [222] ............................ if tDirBody <> pFlipList[tDirBody + 1] then
  [153] getparam 5 .............................. <tDirBody>
  [155] getparam 4 .............................. <tDirHead>
  [157] nteq .................................... <tDirBody <> tDirHead>
  [158] jmpifz [222] ............................ if tDirBody <> tDirHead then
  [161] getparam 4 .............................. <tDirHead>
  [163] peek 0 .................................. case tDirHead of
  [165] pushint8 4 .............................. <4>
  [167] eq
  [168] jmpifz [178] ............................ (case) 4:
  [171] pushint8 2 .............................. <2>
  [173] setparam 4 .............................. tDirHead = 2
  [175] jmp [220]
  [178] peek 0
  [180] pushint8 5 .............................. <5>
  [182] eq
  [183] jmpifz [193] ............................ (case) 5:
  [186] pushint8 1 .............................. <1>
  [188] setparam 4 .............................. tDirHead = 1
  [190] jmp [220]
  [193] peek 0
  [195] pushint8 6 .............................. <6>
  [197] eq
  [198] jmpifz [208] ............................ (case) 6:
  [201] pushint8 4 .............................. <4>
  [203] setparam 4 .............................. tDirHead = 4
  [205] jmp [220]
  [208] peek 0
  [210] pushint8 7 .............................. <7>
  [212] eq
  [213] jmpifz [220] ............................ (case) 7:
  [216] pushint8 5 .............................. <5>
  [218] setparam 4 .............................. tDirHead = 5
  [220] pop 1 ................................... end case
  [222] getparam 5 .............................. <tDirBody>
  [224] setprop 28 .............................. pDirection = tDirBody
  [226] getparam 4 .............................. <tDirHead>
  [228] setprop 1300 ............................ pHeadDir = tDirHead
  [231] getprop 1280 ............................ <pExtraObjs>
  [234] getobjprop 33 ........................... <pExtraObjs.count>
  [236] pushzero ................................ <0>
  [237] gt ...................................... <pExtraObjs.count > 0>
  [238] jmpifz [252] ............................ if pExtraObjs.count > 0 then
  [241] pushsymb 826 ............................ <#Refresh>
  [244] getprop 1280 ............................ <pExtraObjs>
  [247] pusharglistnoret 2 ...................... <#Refresh, pExtraObjs>
  [249] extcall 281 ............................. call(#Refresh, pExtraObjs)
  [252] ret
end

on Refresh me, tX, tY, tH
  [  0] getprop 1283 ............................ <pQueuesWithObj>
  [  3] getprop 1257 ............................ <pPreviousLoc>
  [  6] getparam 1 .............................. <tX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getparam 3 .............................. <tH>
  [ 12] pusharglist 3 ........................... <[tX, tY, tH]>
  [ 14] pushlist ................................ <[tX, tY, tH]>
  [ 15] eq ...................................... <pPreviousLoc = [tX, tY, tH]>
  [ 16] and ..................................... <pQueuesWithObj and (pPreviousLoc = [tX, tY, tH])>
  [ 17] jmpifz [ 26] ............................ if pQueuesWithObj and (pPreviousLoc = [tX, tY, tH]) then
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 31 .............................. return 1
  [ 26] getprop 1270 ............................ <pDancing>
  [ 29] pushzero ................................ <0>
  [ 30] gt ...................................... <pDancing > 0>
  [ 31] getprop 1265 ............................ <pMainAction>
  [ 34] pushcons 12 ............................. <"lay">
  [ 36] eq ...................................... <pMainAction = "lay">
  [ 37] or ...................................... <(pDancing > 0) or (pMainAction = "lay")>
  [ 38] jmpifz [ 46] ............................ if (pDancing > 0) or (pMainAction = "lay") then
  [ 41] getprop 28 .............................. <pDirection>
  [ 43] setprop 1300 ............................ pHeadDir = pDirection
  [ 46] pushsymb 1306 ........................... <#defineDir>
  [ 49] getprop 1249 ............................ <pPartList>
  [ 52] getprop 28 .............................. <pDirection>
  [ 54] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [ 56] extcall 281 ............................. call(#defineDir, pPartList, pDirection)
  [ 59] pushsymb 1307 ........................... <#defineDirMultiple>
  [ 62] getprop 1249 ............................ <pPartList>
  [ 65] getprop 1300 ............................ <pHeadDir>
  [ 68] pushcons 13 ............................. <"hd">
  [ 70] pushcons 14 ............................. <"hr">
  [ 72] pushcons 15 ............................. <"ey">
  [ 74] pushcons 16 ............................. <"fc">
  [ 76] pusharglist 4 ........................... <["hd", "hr", "ey", "fc"]>
  [ 78] pushlist ................................ <["hd", "hr", "ey", "fc"]>
  [ 79] pusharglistnoret 4 ...................... <#defineDirMultiple, pPartList, pHeadDir, ["hd", "hr", "ey", "fc"]>
  [ 81] extcall 281 ............................. call(#defineDirMultiple, pPartList, pHeadDir, ["hd", "hr", "ey", "fc"])
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglistnoret 1 ...................... <me>
  [ 88] objcall 1226 ............................ me.arrangeParts()
  [ 91] pushint8 1 .............................. <1>
  [ 93] setprop 1264 ............................ pChanges = 1
  [ 96] ret
end

on select me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 31 .............................. return 1
  [  6] ret
end

on getName me
  [  0] getprop 15 .............................. <pName>
  [  2] pusharglistnoret 1 ...................... <pName>
  [  4] extcall 31 .............................. return pName
  [  6] ret
end

on getClass me
  [  0] pushcons 17 ............................. <"user">
  [  2] pusharglistnoret 1 ...................... <"user">
  [  4] extcall 31 .............................. return "user"
  [  6] ret
end

on setPartModel me, tPart, tmodel
  [  0] getprop 1250 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 34 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 120 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 31 .............................. return VOID
  [ 24] getprop 1249 ............................ <pPartList>
  [ 27] getprop 1250 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 34 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 34 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] getparam 2 .............................. <tmodel>
  [ 42] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tmodel>
  [ 44] objcall 1308 ............................ pPartList[pPartIndex[tPart]].setModel(tmodel)
  [ 47] ret
end

on setPartColor me, tPart, tColor
  [  0] getprop 1250 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 34 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 120 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 31 .............................. return VOID
  [ 24] getprop 1249 ............................ <pPartList>
  [ 27] getprop 1250 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 34 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 34 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] getparam 2 .............................. <tColor>
  [ 42] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tColor>
  [ 44] objcall 1309 ............................ pPartList[pPartIndex[tPart]].setColor(tColor)
  [ 47] ret
end

on getCustom me
  [  0] getprop 16 .............................. <pCustom>
  [  2] pusharglistnoret 1 ...................... <pCustom>
  [  4] extcall 31 .............................. return pCustom
  [  6] ret
end

on getLocation me
  [  0] getprop 19 .............................. <pLocX>
  [  2] getprop 20 .............................. <pLocY>
  [  4] getprop 21 .............................. <pLocH>
  [  6] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [  8] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [  9] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 11] extcall 31 .............................. return [pLocX, pLocY, pLocH]
  [ 13] ret
end

on getScrLocation me
  [  0] getprop 1254 ............................ <pScreenLoc>
  [  3] pusharglistnoret 1 ...................... <pScreenLoc>
  [  5] extcall 31 .............................. return pScreenLoc
  [  7] ret
end

on getTileCenter me
  [  0] getprop 1254 ............................ <pScreenLoc>
  [  3] pushint8 1 .............................. <1>
  [  5] pusharglist 2 ........................... <pScreenLoc, 1>
  [  7] objcall 34 .............................. <pScreenLoc[1]>
  [  9] getprop 50 .............................. <pXFactor>
  [ 11] pushint8 2 .............................. <2>
  [ 13] div ..................................... <pXFactor / 2>
  [ 14] add ..................................... <pScreenLoc[1] + (pXFactor / 2)>
  [ 15] getprop 1254 ............................ <pScreenLoc>
  [ 18] pushint8 2 .............................. <2>
  [ 20] pusharglist 2 ........................... <pScreenLoc, 2>
  [ 22] objcall 34 .............................. <pScreenLoc[2]>
  [ 24] pusharglist 2 ........................... <pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2]>
  [ 26] extcall 375 ............................. <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 29] pusharglistnoret 1 ...................... <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 31] extcall 31 .............................. return point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])
  [ 33] ret
end

on getPartLocation me, tPart
  [  0] getprop 1250 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 34 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 120 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 31 .............................. return VOID
  [ 24] getprop 1249 ............................ <pPartList>
  [ 27] getprop 1250 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 34 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 34 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 6 ............................... <pPartList[pPartIndex[tPart]].getLocation()>
  [ 44] setlocal 0 .............................. tPartLoc = pPartList[pPartIndex[tPart]].getLocation()
  [ 46] getprop 1265 ............................ <pMainAction>
  [ 49] pushcons 12 ............................. <"lay">
  [ 51] nteq .................................... <pMainAction <> "lay">
  [ 52] jmpifz [ 69] ............................ if pMainAction <> "lay" then / else
  [ 55] getprop 404 ............................. <pSprite>
  [ 58] getobjprop 435 .......................... <pSprite.loc>
  [ 61] getlocal 0 .............................. <tPartLoc>
  [ 63] add ..................................... <pSprite.loc + tPartLoc>
  [ 64] setlocal 1 .............................. tloc = pSprite.loc + tPartLoc
  [ 66] jmp [116]
  [ 69] getprop 404 ............................. <pSprite>
  [ 72] pushsymb 137 ............................ <#rect>
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglist 3 ........................... <pSprite, #rect, 1>
  [ 78] objcall 68 .............................. <pSprite.rect[1]>
  [ 80] getprop 404 ............................. <pSprite>
  [ 83] getobjprop 80 ........................... <pSprite.width>
  [ 85] pushint8 2 .............................. <2>
  [ 87] div ..................................... <pSprite.width / 2>
  [ 88] add ..................................... <pSprite.rect[1] + (pSprite.width / 2)>
  [ 89] getprop 404 ............................. <pSprite>
  [ 92] pushsymb 137 ............................ <#rect>
  [ 94] pushint8 2 .............................. <2>
  [ 96] pusharglist 3 ........................... <pSprite, #rect, 2>
  [ 98] objcall 68 .............................. <pSprite.rect[2]>
  [100] getprop 404 ............................. <pSprite>
  [103] getobjprop 81 ........................... <pSprite.height>
  [105] pushint8 2 .............................. <2>
  [107] div ..................................... <pSprite.height / 2>
  [108] add ..................................... <pSprite.rect[2] + (pSprite.height / 2)>
  [109] pusharglist 2 ........................... <pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2)>
  [111] extcall 375 ............................. <point(pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2))>
  [114] setlocal 1 .............................. tloc = point(pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2))
  [116] getlocal 1 .............................. <tloc>
  [118] pusharglistnoret 1 ...................... <tloc>
  [120] extcall 31 .............................. return tloc
  [122] ret
end

on getDirection me
  [  0] getprop 28 .............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 31 .............................. return pDirection
  [  6] ret
end

on getPartMember me, tPart
  [  0] getprop 1250 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 34 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 120 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 31 .............................. return VOID
  [ 24] getprop 1249 ............................ <pPartList>
  [ 27] getprop 1250 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 34 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 34 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 1311 ............................ <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 45] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 47] extcall 31 .............................. return pPartList[pPartIndex[tPart]].getCurrentMember()
  [ 49] ret
end

on getPartColor me, tPart
  [  0] getprop 1250 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 34 .............................. <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 120 ............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 30 .............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 31 .............................. return VOID
  [ 24] getprop 1249 ............................ <pPartList>
  [ 27] getprop 1250 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 34 .............................. <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 34 .............................. <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 1312 ............................ <pPartList[pPartIndex[tPart]].getColor()>
  [ 45] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getColor()>
  [ 47] extcall 31 .............................. return pPartList[pPartIndex[tPart]].getColor()
  [ 49] ret
end

on getPicture me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] pusharglist 1 ........................... <tImg>
  [  4] extcall 120 ............................. <voidp(tImg)>
  [  6] jmpifz [ 24] ............................ if voidp(tImg) then / else
  [  9] pushint8 64 ............................. <64>
  [ 11] pushint8 102 ............................ <102>
  [ 13] pushint8 32 ............................. <32>
  [ 15] pusharglist 3 ........................... <64, 102, 32>
  [ 17] extcall 63 .............................. <image(64, 102, 32)>
  [ 19] setlocal 0 .............................. tCanvas = image(64, 102, 32)
  [ 21] jmp [ 28]
  [ 24] getparam 1 .............................. <tImg>
  [ 26] setlocal 0 .............................. tCanvas = tImg
  [ 28] pushcons 18 ............................. <"human.parts.">
  [ 30] getprop 1295 ............................ <pPeopleSize>
  [ 33] joinstr ................................. <"human.parts." & pPeopleSize>
  [ 34] pusharglist 1 ........................... <"human.parts." & pPeopleSize>
  [ 36] extcall 259 ............................. <getVariableValue("human.parts." & pPeopleSize)>
  [ 39] setlocal 1 .............................. tPartDefinition = getVariableValue("human.parts." & pPeopleSize)
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setlocal 2 .............................. tTempPartList = []
  [ 46] getlocal 1 .............................. <tPartDefinition>
  [ 48] peek 0
  [ 50] pusharglist 1
  [ 52] extcall 33
  [ 54] pushint8 1
  [ 56] peek 0
  [ 58] peek 2
  [ 60] lteq
  [ 61] jmpifz [119] ............................ repeat with tPartSymbol in tPartDefinition
  [ 64] peek 2
  [ 66] peek 1
  [ 68] pusharglist 2
  [ 70] extcall 34
  [ 72] setlocal 3
  [ 74] getprop 1250 ............................ <pPartIndex>
  [ 77] getlocal 3 .............................. <tPartSymbol>
  [ 79] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [ 81] objcall 34 .............................. <pPartIndex[tPartSymbol]>
  [ 83] pusharglist 1 ........................... <pPartIndex[tPartSymbol]>
  [ 85] extcall 120 ............................. <voidp(pPartIndex[tPartSymbol])>
  [ 87] not ..................................... <not voidp(pPartIndex[tPartSymbol])>
  [ 88] jmpifz [114] ............................ if not voidp(pPartIndex[tPartSymbol]) then
  [ 91] getlocal 2 .............................. <tTempPartList>
  [ 93] getprop 1249 ............................ <pPartList>
  [ 96] getprop 1250 ............................ <pPartIndex>
  [ 99] getlocal 3 .............................. <tPartSymbol>
  [101] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [103] objcall 34 .............................. <pPartIndex[tPartSymbol]>
  [105] pusharglist 2 ........................... <pPartList, pPartIndex[tPartSymbol]>
  [107] objcall 34 .............................. <pPartList[pPartIndex[tPartSymbol]]>
  [109] pusharglistnoret 2 ...................... <tTempPartList, pPartList[pPartIndex[tPartSymbol]]>
  [111] objcall 842 ............................. tTempPartList.append(pPartList[pPartIndex[tPartSymbol]])
  [114] pushint8 1
  [116] add
  [117] endrepeat [ 56]
  [119] pop 3
  [121] pushsymb 1313 ........................... <#copyPicture>
  [124] getlocal 2 .............................. <tTempPartList>
  [126] getlocal 0 .............................. <tCanvas>
  [128] pusharglistnoret 3 ...................... <#copyPicture, tTempPartList, tCanvas>
  [130] extcall 281 ............................. call(#copyPicture, tTempPartList, tCanvas)
  [133] getparam 0 .............................. <me>
  [135] getlocal 0 .............................. <tCanvas>
  [137] pusharglist 2 ........................... <me, tCanvas>
  [139] objcall 1227 ............................ <me.flipImage(tCanvas)>
  [142] pusharglistnoret 1 ...................... <me.flipImage(tCanvas)>
  [144] extcall 31 .............................. return me.flipImage(tCanvas)
  [146] ret
end

on getInfo me
  [  0] getprop 1273 ............................ <pCtrlType>
  [  3] pushcons 0 .............................. <EMPTY>
  [  5] eq ...................................... <pCtrlType = EMPTY>
  [  6] jmpifz [ 24] ............................ if pCtrlType = EMPTY then / else
  [  9] getprop 1282 ............................ <pInfoStruct>
  [ 12] pushsymb 329 ............................ <#ctrl>
  [ 15] pushcons 4 .............................. <"furniture">
  [ 17] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, "furniture">
  [ 19] objcall 59 .............................. pInfoStruct[#ctrl] = "furniture"
  [ 21] jmp [ 37]
  [ 24] getprop 1282 ............................ <pInfoStruct>
  [ 27] pushsymb 329 ............................ <#ctrl>
  [ 30] getprop 1273 ............................ <pCtrlType>
  [ 33] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, pCtrlType>
  [ 35] objcall 59 .............................. pInfoStruct[#ctrl] = pCtrlType
  [ 37] getprop 1282 ............................ <pInfoStruct>
  [ 40] pushsymb 338 ............................ <#badge>
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 936 .......................... <me.pBadge>
  [ 48] pusharglistnoret 3 ...................... <pInfoStruct, #badge, me.pBadge>
  [ 50] objcall 59 .............................. pInfoStruct[#badge] = me.pBadge
  [ 52] getprop 1272 ............................ <pTrading>
  [ 55] jmpifz [ 84] ............................ if pTrading then / else
  [ 58] getprop 1282 ............................ <pInfoStruct>
  [ 61] pushsymb 60 ............................. <#custom>
  [ 63] getprop 16 .............................. <pCustom>
  [ 65] pushcons 19 ............................. <RETURN>
  [ 67] joinstr ................................. <pCustom & RETURN>
  [ 68] pushcons 20 ............................. <"human_trading">
  [ 70] pushcons 21 ............................. <"Trading">
  [ 72] pusharglist 2 ........................... <"human_trading", "Trading">
  [ 74] extcall 55 .............................. <getText("human_trading", "Trading")>
  [ 76] joinstr ................................. <pCustom & RETURN & getText("human_trading", "Trading")>
  [ 77] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom & RETURN & getText("human_trading", "Trading")>
  [ 79] objcall 59 .............................. pInfoStruct[#custom] = pCustom & RETURN & getText("human_trading", "Trading")
  [ 81] jmp [133]
  [ 84] getprop 1268 ............................ <pCarrying>
  [ 87] pushzero ................................ <0>
  [ 88] nteq .................................... <pCarrying <> 0>
  [ 89] jmpifz [122] ............................ if pCarrying <> 0 then / else
  [ 92] getprop 1282 ............................ <pInfoStruct>
  [ 95] pushsymb 60 ............................. <#custom>
  [ 97] getprop 16 .............................. <pCustom>
  [ 99] pushcons 19 ............................. <RETURN>
  [101] joinstr ................................. <pCustom & RETURN>
  [102] pushcons 22 ............................. <"human_carrying">
  [104] pushcons 23 ............................. <"Carrying:">
  [106] pusharglist 2 ........................... <"human_carrying", "Carrying:">
  [108] extcall 55 .............................. <getText("human_carrying", "Carrying:")>
  [110] joinstr ................................. <pCustom & RETURN & getText("human_carrying", "Carrying:")>
  [111] getprop 1268 ............................ <pCarrying>
  [114] joinpadstr .............................. <pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying>
  [115] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying>
  [117] objcall 59 .............................. pInfoStruct[#custom] = pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying
  [119] jmp [133]
  [122] getprop 1282 ............................ <pInfoStruct>
  [125] pushsymb 60 ............................. <#custom>
  [127] getprop 16 .............................. <pCustom>
  [129] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [131] objcall 59 .............................. pInfoStruct[#custom] = pCustom
  [133] getprop 1282 ............................ <pInfoStruct>
  [136] pusharglistnoret 1 ...................... <pInfoStruct>
  [138] extcall 31 .............................. return pInfoStruct
  [140] ret
end

on getSprites me
  [  0] getprop 404 ............................. <pSprite>
  [  3] getprop 1288 ............................ <pShadowSpr>
  [  6] getprop 1287 ............................ <pMatteSpr>
  [  9] pusharglist 3 ........................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 11] pushlist ................................ <[pSprite, pShadowSpr, pMatteSpr]>
  [ 12] pusharglistnoret 1 ...................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 14] extcall 31 .............................. return [pSprite, pShadowSpr, pMatteSpr]
  [ 16] ret
end

on getProperty me, tPropID
  [  0] getparam 1 .............................. <tPropID>
  [  2] peek 0 .................................. case tPropID of
  [  4] pushsymb 334 ............................ <#dancing>
  [  7] eq
  [  8] jmpifz [ 23] ............................ (case) #dancing:
  [ 11] pop 1
  [ 13] getprop 1270 ............................ <pDancing>
  [ 16] pusharglistnoret 1 ...................... <pDancing>
  [ 18] extcall 31 .............................. return pDancing
  [ 20] jmp [145]
  [ 23] peek 0
  [ 25] pushsymb 1319 ........................... <#carrying>
  [ 28] eq
  [ 29] jmpifz [ 44] ............................ (case) #carrying:
  [ 32] pop 1
  [ 34] getprop 1268 ............................ <pCarrying>
  [ 37] pusharglistnoret 1 ...................... <pCarrying>
  [ 39] extcall 31 .............................. return pCarrying
  [ 41] jmp [145]
  [ 44] peek 0
  [ 46] pushsymb 435 ............................ <#loc>
  [ 49] eq
  [ 50] jmpifz [ 71] ............................ (case) #loc:
  [ 53] pop 1
  [ 55] getprop 19 .............................. <pLocX>
  [ 57] getprop 20 .............................. <pLocY>
  [ 59] getprop 21 .............................. <pLocH>
  [ 61] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 63] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 64] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 66] extcall 31 .............................. return [pLocX, pLocY, pLocH]
  [ 68] jmp [145]
  [ 71] peek 0
  [ 73] pushsymb 335 ............................ <#mainAction>
  [ 76] eq
  [ 77] jmpifz [ 92] ............................ (case) #mainAction:
  [ 80] pop 1
  [ 82] getprop 1265 ............................ <pMainAction>
  [ 85] pusharglistnoret 1 ...................... <pMainAction>
  [ 87] extcall 31 .............................. return pMainAction
  [ 89] jmp [145]
  [ 92] peek 0
  [ 94] pushsymb 540 ............................ <#moving>
  [ 97] eq
  [ 98] jmpifz [115] ............................ (case) #moving:
  [101] pop 1
  [103] getparam 0 .............................. <me>
  [105] getobjprop 1266 ......................... <me.pMoving>
  [108] pusharglistnoret 1 ...................... <me.pMoving>
  [110] extcall 31 .............................. return me.pMoving
  [112] jmp [145]
  [115] peek 0
  [117] pushsymb 336 ............................ <#swimming>
  [120] eq
  [121] jmpifz [138] ............................ (case) #swimming:
  [124] pop 1
  [126] getparam 0 .............................. <me>
  [128] getobjprop 1275 ......................... <me.pSwim>
  [131] pusharglistnoret 1 ...................... <me.pSwim>
  [133] extcall 31 .............................. return me.pSwim
  [135] jmp [145] ............................... (case) otherwise:
  [138] pop 1
  [140] pushzero ................................ <0>
  [141] pusharglistnoret 1 ...................... <0>
  [143] extcall 31 .............................. return 0
  [145] pop 1 ................................... end case
  [147] ret
end

on setProperty me, tPropID, tValue
  [  0] getparam 1 .............................. <tPropID>
  [  2] jmp [ 12] ............................... case tPropID of / otherwise:
  [  5] pop 1
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 31 .............................. return 0
  [ 12] pop 1 ................................... end case
  [ 14] ret
end

on closeEyes me
  [  0] getprop 1265 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] jmpifz [ 30] ............................ if pMainAction = "lay" then / else
  [  9] pushsymb 1320 ........................... <#defineActMultiple>
  [ 12] getprop 1249 ............................ <pPartList>
  [ 15] pushcons 24 ............................. <"ley">
  [ 17] pushcons 15 ............................. <"ey">
  [ 19] pusharglist 1 ........................... <["ey"]>
  [ 21] pushlist ................................ <["ey"]>
  [ 22] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "ley", ["ey"]>
  [ 24] extcall 281 ............................. call(#defineActMultiple, pPartList, "ley", ["ey"])
  [ 27] jmp [ 48]
  [ 30] pushsymb 1320 ........................... <#defineActMultiple>
  [ 33] getprop 1249 ............................ <pPartList>
  [ 36] pushcons 25 ............................. <"eyb">
  [ 38] pushcons 15 ............................. <"ey">
  [ 40] pusharglist 1 ........................... <["ey"]>
  [ 42] pushlist ................................ <["ey"]>
  [ 43] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "eyb", ["ey"]>
  [ 45] extcall 281 ............................. call(#defineActMultiple, pPartList, "eyb", ["ey"])
  [ 48] pushint8 1 .............................. <1>
  [ 50] setprop 1262 ............................ pEyesClosed = 1
  [ 53] pushint8 1 .............................. <1>
  [ 55] setprop 1264 ............................ pChanges = 1
  [ 58] ret
end

on openEyes me
  [  0] getprop 1265 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] jmpifz [ 30] ............................ if pMainAction = "lay" then / else
  [  9] pushsymb 1320 ........................... <#defineActMultiple>
  [ 12] getprop 1249 ............................ <pPartList>
  [ 15] pushcons 12 ............................. <"lay">
  [ 17] pushcons 15 ............................. <"ey">
  [ 19] pusharglist 1 ........................... <["ey"]>
  [ 21] pushlist ................................ <["ey"]>
  [ 22] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "lay", ["ey"]>
  [ 24] extcall 281 ............................. call(#defineActMultiple, pPartList, "lay", ["ey"])
  [ 27] jmp [ 48]
  [ 30] pushsymb 1320 ........................... <#defineActMultiple>
  [ 33] getprop 1249 ............................ <pPartList>
  [ 36] pushcons 1 .............................. <"std">
  [ 38] pushcons 15 ............................. <"ey">
  [ 40] pusharglist 1 ........................... <["ey"]>
  [ 42] pushlist ................................ <["ey"]>
  [ 43] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "std", ["ey"]>
  [ 45] extcall 281 ............................. call(#defineActMultiple, pPartList, "std", ["ey"])
  [ 48] pushzero ................................ <0>
  [ 49] setprop 1262 ............................ pEyesClosed = 0
  [ 52] pushint8 1 .............................. <1>
  [ 54] setprop 1264 ............................ pChanges = 1
  [ 57] ret
end

on startAnimation me, tMemName
  [  0] getparam 1 .............................. <tMemName>
  [  2] getprop 1276 ............................ <pCurrentAnim>
  [  5] eq ...................................... <tMemName = pCurrentAnim>
  [  6] jmpifz [ 14] ............................ if tMemName = pCurrentAnim then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 31 .............................. return 0
  [ 14] getparam 1 .............................. <tMemName>
  [ 16] pusharglist 1 ........................... <tMemName>
  [ 18] extcall 62 .............................. <memberExists(tMemName)>
  [ 20] not ..................................... <not memberExists(tMemName)>
  [ 21] jmpifz [ 29] ............................ if not memberExists(tMemName) then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 31 .............................. return 0
  [ 29] getparam 1 .............................. <tMemName>
  [ 31] pusharglist 1 ........................... <tMemName>
  [ 33] extcall 65 .............................. <getmemnum(tMemName)>
  [ 35] pusharglist 1 ........................... <getmemnum(tMemName)>
  [ 37] extcall 64 .............................. <member(getmemnum(tMemName))>
  [ 39] setlocal 0 .............................. tmember = member(getmemnum(tMemName))
  [ 41] getlocal 0 .............................. <tmember>
  [ 43] getobjprop 914 .......................... <tmember.text>
  [ 46] setlocal 1 .............................. tList = tmember.text
  [ 48] getmovieprop 99 ......................... <the itemDelimiter>
  [ 50] setlocal 2 .............................. tTempDelim = the itemDelimiter
  [ 52] pushcons 26 ............................. <"/">
  [ 54] setmovieprop 99 ......................... the itemDelimiter = "/"
  [ 56] pushint8 1 .............................. <1>
  [ 58] setlocal 3
  [ 60] getlocal 3
  [ 62] getlocal 1 .............................. <tList>
  [ 64] pushsymb 870 ............................ <#line>
  [ 67] pusharglist 2 ........................... <tList, #line>
  [ 69] objcall 33 .............................. <tList.line.count>
  [ 71] lteq
  [ 72] jmpifz [141] ............................ repeat with i = 1 to tList.line.count
  [ 75] getlocal 1 .............................. <tList>
  [ 77] pushsymb 870 ............................ <#line>
  [ 80] getlocal 3 .............................. <i>
  [ 82] pusharglist 3 ........................... <tList, #line, i>
  [ 84] objcall 101 ............................. <tList.line[i]>
  [ 86] pushsymb 103 ............................ <#item>
  [ 88] pushint8 1 .............................. <1>
  [ 90] pusharglist 3 ........................... <tList.line[i], #item, 1>
  [ 92] objcall 68 .............................. <tList.line[i].item[1]>
  [ 94] setlocal 4 .............................. tPart = tList.line[i].item[1]
  [ 96] getlocal 1 .............................. <tList>
  [ 98] pushsymb 870 ............................ <#line>
  [101] getlocal 3 .............................. <i>
  [103] pusharglist 3 ........................... <tList, #line, i>
  [105] objcall 101 ............................. <tList.line[i]>
  [107] pushsymb 103 ............................ <#item>
  [109] pushint8 2 .............................. <2>
  [111] pusharglist 3 ........................... <tList.line[i], #item, 2>
  [113] objcall 68 .............................. <tList.line[i].item[2]>
  [115] setlocal 5 .............................. tAnim = tList.line[i].item[2]
  [117] pushsymb 937 ............................ <#setAnimation>
  [120] getprop 1249 ............................ <pPartList>
  [123] getlocal 4 .............................. <tPart>
  [125] getlocal 5 .............................. <tAnim>
  [127] pusharglistnoret 4 ...................... <#setAnimation, pPartList, tPart, tAnim>
  [129] extcall 281 ............................. call(#setAnimation, pPartList, tPart, tAnim)
  [132] pushint8 1
  [134] getlocal 3
  [136] add
  [137] setlocal 3
  [139] endrepeat [ 60]
  [141] getlocal 2 .............................. <tTempDelim>
  [143] setmovieprop 99 ......................... the itemDelimiter = tTempDelim
  [145] pushint8 1 .............................. <1>
  [147] setprop 1274 ............................ pAnimating = 1
  [150] getparam 1 .............................. <tMemName>
  [152] setprop 1276 ............................ pCurrentAnim = tMemName
  [155] ret
end

on stopAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1274 ............................ pAnimating = 0
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 1276 ............................ pCurrentAnim = EMPTY
  [  9] pushsymb 1322 ........................... <#remAnimation>
  [ 12] getprop 1249 ............................ <pPartList>
  [ 15] pusharglistnoret 2 ...................... <#remAnimation, pPartList>
  [ 17] extcall 281 ............................. call(#remAnimation, pPartList)
  [ 20] ret
end

on show me
  [  0] getprop 404 ............................. <pSprite>
  [  3] pushint8 1 .............................. <1>
  [  5] setobjprop 341 .......................... pSprite.visible = 1
  [  8] getprop 1287 ............................ <pMatteSpr>
  [ 11] pushint8 1 .............................. <1>
  [ 13] setobjprop 341 .......................... pMatteSpr.visible = 1
  [ 16] getprop 1288 ............................ <pShadowSpr>
  [ 19] pushint8 1 .............................. <1>
  [ 21] setobjprop 341 .......................... pShadowSpr.visible = 1
  [ 24] ret
end

on hide me
  [  0] getprop 404 ............................. <pSprite>
  [  3] pushzero ................................ <0>
  [  4] setobjprop 341 .......................... pSprite.visible = 0
  [  7] getprop 1287 ............................ <pMatteSpr>
  [ 10] pushzero ................................ <0>
  [ 11] setobjprop 341 .......................... pMatteSpr.visible = 0
  [ 14] getprop 1288 ............................ <pShadowSpr>
  [ 17] pushzero ................................ <0>
  [ 18] setobjprop 341 .......................... pShadowSpr.visible = 0
  [ 21] ret
end

on draw me, tRGB
  [  0] getparam 1 .............................. <tRGB>
  [  2] pushsymb 97 ............................. <#color>
  [  4] pusharglist 2 ........................... <tRGB, #color>
  [  6] extcall 127 ............................. <ilk(tRGB, #color)>
  [  8] not ..................................... <not ilk(tRGB, #color)>
  [  9] jmpifz [ 23] ............................ if not ilk(tRGB, #color) then
  [ 12] pushint16 255 ........................... <255>
  [ 15] pushzero ................................ <0>
  [ 16] pushzero ................................ <0>
  [ 17] pusharglist 3 ........................... <255, 0, 0>
  [ 19] extcall 94 .............................. <rgb(255, 0, 0)>
  [ 21] setparam 1 .............................. tRGB = rgb(255, 0, 0)
  [ 23] getprop 1291 ............................ <pMember>
  [ 26] getchainedprop 63 ....................... <pMember.image>
  [ 28] getprop 1291 ............................ <pMember>
  [ 31] getchainedprop 63 ....................... <pMember.image>
  [ 33] getobjprop 137 .......................... <pMember.image.rect>
  [ 35] pushsymb 1323 ........................... <#shapeType>
  [ 38] pushsymb 137 ............................ <#rect>
  [ 40] pushsymb 97 ............................. <#color>
  [ 42] getparam 1 .............................. <tRGB>
  [ 44] pusharglist 4 ........................... <[#shapeType: #rect, #color: tRGB]>
  [ 46] pushproplist ............................ <[#shapeType: #rect, #color: tRGB]>
  [ 47] pusharglistnoret 3 ...................... <pMember.image, pMember.image.rect, [#shapeType: #rect, #color: tRGB]>
  [ 49] objcall 1190 ............................ pMember.image.draw(pMember.image.rect, [#shapeType: #rect, #color: tRGB])
  [ 52] ret
end

on prepare me
  [  0] getprop 1259 ............................ <pAnimCounter>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <pAnimCounter + 1>
  [  6] pushint8 4 .............................. <4>
  [  8] mod ..................................... <(pAnimCounter + 1) mod 4>
  [  9] setprop 1259 ............................ pAnimCounter = (pAnimCounter + 1) mod 4
  [ 12] getprop 1262 ............................ <pEyesClosed>
  [ 15] getprop 1269 ............................ <pSleeping>
  [ 18] not ..................................... <not pSleeping>
  [ 19] and ..................................... <pEyesClosed and not pSleeping>
  [ 20] jmpifz [ 33] ............................ if pEyesClosed and not pSleeping then / else
  [ 23] getparam 0 .............................. <me>
  [ 25] pusharglistnoret 1 ...................... <me>
  [ 27] objcall 1221 ............................ me.openEyes()
  [ 30] jmp [ 53]
  [ 33] pushint8 30 ............................. <30>
  [ 35] pusharglist 1 ........................... <30>
  [ 37] extcall 285 ............................. <random(30)>
  [ 40] pushint8 3 .............................. <3>
  [ 42] eq ...................................... <random(30) = 3>
  [ 43] jmpifz [ 53] ............................ if random(30) = 3 then
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 1 ...................... <me>
  [ 50] objcall 1220 ............................ me.closeEyes()
  [ 53] getprop 1267 ............................ <pTalking>
  [ 56] pushint8 3 .............................. <3>
  [ 58] pusharglist 1 ........................... <3>
  [ 60] extcall 285 ............................. <random(3)>
  [ 63] pushint8 1 .............................. <1>
  [ 65] gt ...................................... <random(3) > 1>
  [ 66] and ..................................... <pTalking and (random(3) > 1)>
  [ 67] jmpifz [131] ............................ if pTalking and (random(3) > 1) then
  [ 70] getprop 1265 ............................ <pMainAction>
  [ 73] pushcons 12 ............................. <"lay">
  [ 75] eq ...................................... <pMainAction = "lay">
  [ 76] jmpifz [104] ............................ if pMainAction = "lay" then / else
  [ 79] pushsymb 1320 ........................... <#defineActMultiple>
  [ 82] getprop 1249 ............................ <pPartList>
  [ 85] pushcons 27 ............................. <"lsp">
  [ 87] pushcons 13 ............................. <"hd">
  [ 89] pushcons 14 ............................. <"hr">
  [ 91] pushcons 16 ............................. <"fc">
  [ 93] pusharglist 3 ........................... <["hd", "hr", "fc"]>
  [ 95] pushlist ................................ <["hd", "hr", "fc"]>
  [ 96] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "lsp", ["hd", "hr", "fc"]>
  [ 98] extcall 281 ............................. call(#defineActMultiple, pPartList, "lsp", ["hd", "hr", "fc"])
  [101] jmp [126]
  [104] pushsymb 1320 ........................... <#defineActMultiple>
  [107] getprop 1249 ............................ <pPartList>
  [110] pushcons 28 ............................. <"spk">
  [112] pushcons 13 ............................. <"hd">
  [114] pushcons 14 ............................. <"hr">
  [116] pushcons 16 ............................. <"fc">
  [118] pusharglist 3 ........................... <["hd", "hr", "fc"]>
  [120] pushlist ................................ <["hd", "hr", "fc"]>
  [121] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "spk", ["hd", "hr", "fc"]>
  [123] extcall 281 ............................. call(#defineActMultiple, pPartList, "spk", ["hd", "hr", "fc"])
  [126] pushint8 1 .............................. <1>
  [128] setprop 1264 ............................ pChanges = 1
  [131] getprop 1266 ............................ <pMoving>
  [134] jmpifz [195] ............................ if pMoving then
  [137] getmovieprop 500 ........................ <the milliSeconds>
  [140] getprop 1260 ............................ <pMoveStart>
  [143] sub ..................................... <the milliSeconds - pMoveStart>
  [144] pusharglist 1 ........................... <the milliSeconds - pMoveStart>
  [146] extcall 669 ............................. <float(the milliSeconds - pMoveStart)>
  [149] getprop 1261 ............................ <pMoveTime>
  [152] div ..................................... <float(the milliSeconds - pMoveStart) / pMoveTime>
  [153] setlocal 0 .............................. tFactor = float(the milliSeconds - pMoveStart) / pMoveTime
  [155] getlocal 0 .............................. <tFactor>
  [157] pushfloat32 1.0 ......................... <1.0>
  [162] gt ...................................... <tFactor > 1.0>
  [163] jmpifz [173] ............................ if tFactor > 1.0 then
  [166] pushfloat32 1.0 ......................... <1.0>
  [171] setlocal 0 .............................. tFactor = 1.0
  [173] getprop 1256 ............................ <pDestLScreen>
  [176] getprop 1255 ............................ <pStartLScreen>
  [179] sub ..................................... <pDestLScreen - pStartLScreen>
  [180] getlocal 0 .............................. <tFactor>
  [182] mul ..................................... <(pDestLScreen - pStartLScreen) * tFactor>
  [183] getprop 1255 ............................ <pStartLScreen>
  [186] add ..................................... <((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen>
  [187] setprop 1254 ............................ pScreenLoc = ((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen
  [190] pushint8 1 .............................. <1>
  [192] setprop 1264 ............................ pChanges = 1
  [195] getprop 1271 ............................ <pWaving>
  [198] getprop 1265 ............................ <pMainAction>
  [201] pushcons 12 ............................. <"lay">
  [203] nteq .................................... <pMainAction <> "lay">
  [204] and ..................................... <pWaving and (pMainAction <> "lay")>
  [205] jmpifz [226] ............................ if pWaving and (pMainAction <> "lay") then
  [208] pushsymb 1325 ........................... <#doHandWorkLeft>
  [211] getprop 1249 ............................ <pPartList>
  [214] pushcons 29 ............................. <"wav">
  [216] pusharglistnoret 3 ...................... <#doHandWorkLeft, pPartList, "wav">
  [218] extcall 281 ............................. call(#doHandWorkLeft, pPartList, "wav")
  [221] pushint8 1 .............................. <1>
  [223] setprop 1264 ............................ pChanges = 1
  [226] getprop 1270 ............................ <pDancing>
  [229] jmpifz [242] ............................ if pDancing then
  [232] pushint8 1 .............................. <1>
  [234] setprop 1274 ............................ pAnimating = 1
  [237] pushint8 1 .............................. <1>
  [239] setprop 1264 ............................ pChanges = 1
  [242] ret
end

on render me
  [  0] getprop 1264 ............................ <pChanges>
  [  3] not ..................................... <not pChanges>
  [  4] jmpifz [ 11] ............................ if not pChanges then
  [  7] pusharglistnoret 0 ...................... <>
  [  9] extcall 31 .............................. return 
  [ 11] getprop 1295 ............................ <pPeopleSize>
  [ 14] pushcons 30 ............................. <"sh">
  [ 16] eq ...................................... <pPeopleSize = "sh">
  [ 17] jmpifz [ 27] ............................ if pPeopleSize = "sh" then / else
  [ 20] pushint8 4 .............................. <4>
  [ 22] setlocal 0 .............................. tSkipFreq = 4
  [ 24] jmp [ 31]
  [ 27] pushint8 5 .............................. <5>
  [ 29] setlocal 0 .............................. tSkipFreq = 5
  [ 31] getlocal 0 .............................. <tSkipFreq>
  [ 33] pusharglist 1 ........................... <tSkipFreq>
  [ 35] extcall 285 ............................. <random(tSkipFreq)>
  [ 38] pushint8 2 .............................. <2>
  [ 40] eq ...................................... <random(tSkipFreq) = 2>
  [ 41] getprop 1266 ............................ <pMoving>
  [ 44] not ..................................... <not pMoving>
  [ 45] and ..................................... <(random(tSkipFreq) = 2) and not pMoving>
  [ 46] jmpifz [ 66] ............................ if (random(tSkipFreq) = 2) and not pMoving then
  [ 49] pushsymb 1327 ........................... <#skipAnimationFrame>
  [ 52] getprop 1249 ............................ <pPartList>
  [ 55] pusharglistnoret 2 ...................... <#skipAnimationFrame, pPartList>
  [ 57] extcall 281 ............................. call(#skipAnimationFrame, pPartList)
  [ 60] pushint8 1 .............................. <1>
  [ 62] pusharglistnoret 1 ...................... <1>
  [ 64] extcall 31 .............................. return 1
  [ 66] pushzero ................................ <0>
  [ 67] setprop 1264 ............................ pChanges = 0
  [ 70] getprop 1265 ............................ <pMainAction>
  [ 73] pushcons 31 ............................. <"sit">
  [ 75] eq ...................................... <pMainAction = "sit">
  [ 76] jmpifz [125] ............................ if pMainAction = "sit" then / else
  [ 79] getprop 1289 ............................ <pCanvasSize>
  [ 82] pushsymb 1290 ........................... <#std>
  [ 85] pusharglist 2 ........................... <pCanvasSize, #std>
  [ 87] objcall 34 .............................. <pCanvasSize[#std]>
  [ 89] setlocal 1 .............................. tSize = pCanvasSize[#std]
  [ 91] getprop 1288 ............................ <pShadowSpr>
  [ 94] getprop 1295 ............................ <pPeopleSize>
  [ 97] pushcons 32 ............................. <"_sit_sd_001_">
  [ 99] joinstr ................................. <pPeopleSize & "_sit_sd_001_">
  [100] getprop 1251 ............................ <pFlipList>
  [103] getprop 28 .............................. <pDirection>
  [105] pushint8 1 .............................. <1>
  [107] add ..................................... <pDirection + 1>
  [108] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [110] objcall 34 .............................. <pFlipList[pDirection + 1]>
  [112] joinstr ................................. <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1]>
  [113] pushcons 33 ............................. <"_0">
  [115] joinstr ................................. <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0">
  [116] pusharglist 1 ........................... <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0">
  [118] extcall 65 .............................. <getmemnum(pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0")>
  [120] setobjprop 79 ........................... pShadowSpr.castNum = getmemnum(pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0")
  [122] jmp [191]
  [125] getprop 1265 ............................ <pMainAction>
  [128] pushcons 12 ............................. <"lay">
  [130] eq ...................................... <pMainAction = "lay">
  [131] jmpifz [159] ............................ if pMainAction = "lay" then / else
  [134] getprop 1289 ............................ <pCanvasSize>
  [137] pushsymb 1302 ........................... <#lay>
  [140] pusharglist 2 ........................... <pCanvasSize, #lay>
  [142] objcall 34 .............................. <pCanvasSize[#lay]>
  [144] setlocal 1 .............................. tSize = pCanvasSize[#lay]
  [146] getprop 1288 ............................ <pShadowSpr>
  [149] pushzero ................................ <0>
  [150] setobjprop 79 ........................... pShadowSpr.castNum = 0
  [152] pushzero ................................ <0>
  [153] setprop 1294 ............................ pShadowFix = 0
  [156] jmp [191]
  [159] getprop 1289 ............................ <pCanvasSize>
  [162] pushsymb 1290 ........................... <#std>
  [165] pusharglist 2 ........................... <pCanvasSize, #std>
  [167] objcall 34 .............................. <pCanvasSize[#std]>
  [169] setlocal 1 .............................. tSize = pCanvasSize[#std]
  [171] getprop 1288 ............................ <pShadowSpr>
  [174] getobjprop 64 ........................... <pShadowSpr.member>
  [176] getprop 1281 ............................ <pDefShadowMem>
  [179] nteq .................................... <pShadowSpr.member <> pDefShadowMem>
  [180] jmpifz [191] ............................ if pShadowSpr.member <> pDefShadowMem then
  [183] getprop 1288 ............................ <pShadowSpr>
  [186] getprop 1281 ............................ <pDefShadowMem>
  [189] setobjprop 64 ........................... pShadowSpr.member = pDefShadowMem
  [191] getprop 1292 ............................ <pBuffer>
  [194] getobjprop 80 ........................... <pBuffer.width>
  [196] getlocal 1 .............................. <tSize>
  [198] pushint8 1 .............................. <1>
  [200] pusharglist 2 ........................... <tSize, 1>
  [202] objcall 34 .............................. <tSize[1]>
  [204] nteq .................................... <pBuffer.width <> tSize[1]>
  [205] getprop 1292 ............................ <pBuffer>
  [208] getobjprop 81 ........................... <pBuffer.height>
  [210] getlocal 1 .............................. <tSize>
  [212] pushint8 2 .............................. <2>
  [214] pusharglist 2 ........................... <tSize, 2>
  [216] objcall 34 .............................. <tSize[2]>
  [218] nteq .................................... <pBuffer.height <> tSize[2]>
  [219] or ...................................... <(pBuffer.width <> tSize[1]) or (pBuffer.height <> tSize[2])>
  [220] jmpifz [367] ............................ if (pBuffer.width <> tSize[1]) or (pBuffer.height <> tSize[2]) then
  [223] getprop 1291 ............................ <pMember>
  [226] getlocal 1 .............................. <tSize>
  [228] pushint8 1 .............................. <1>
  [230] pusharglist 2 ........................... <tSize, 1>
  [232] objcall 34 .............................. <tSize[1]>
  [234] getlocal 1 .............................. <tSize>
  [236] pushint8 2 .............................. <2>
  [238] pusharglist 2 ........................... <tSize, 2>
  [240] objcall 34 .............................. <tSize[2]>
  [242] getlocal 1 .............................. <tSize>
  [244] pushint8 3 .............................. <3>
  [246] pusharglist 2 ........................... <tSize, 3>
  [248] objcall 34 .............................. <tSize[3]>
  [250] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [252] extcall 63 .............................. <image(tSize[1], tSize[2], tSize[3])>
  [254] setobjprop 63 ........................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [256] getprop 1291 ............................ <pMember>
  [259] pushzero ................................ <0>
  [260] getlocal 1 .............................. <tSize>
  [262] pushint8 2 .............................. <2>
  [264] pusharglist 2 ........................... <tSize, 2>
  [266] objcall 34 .............................. <tSize[2]>
  [268] getlocal 1 .............................. <tSize>
  [270] pushint8 4 .............................. <4>
  [272] pusharglist 2 ........................... <tSize, 4>
  [274] objcall 34 .............................. <tSize[4]>
  [276] add ..................................... <tSize[2] + tSize[4]>
  [277] pusharglist 2 ........................... <0, tSize[2] + tSize[4]>
  [279] extcall 375 ............................. <point(0, tSize[2] + tSize[4])>
  [282] setobjprop 118 .......................... pMember.regPoint = point(0, tSize[2] + tSize[4])
  [284] getprop 404 ............................. <pSprite>
  [287] getlocal 1 .............................. <tSize>
  [289] pushint8 1 .............................. <1>
  [291] pusharglist 2 ........................... <tSize, 1>
  [293] objcall 34 .............................. <tSize[1]>
  [295] setobjprop 80 ........................... pSprite.width = tSize[1]
  [297] getprop 404 ............................. <pSprite>
  [300] getlocal 1 .............................. <tSize>
  [302] pushint8 2 .............................. <2>
  [304] pusharglist 2 ........................... <tSize, 2>
  [306] objcall 34 .............................. <tSize[2]>
  [308] setobjprop 81 ........................... pSprite.height = tSize[2]
  [310] getprop 1287 ............................ <pMatteSpr>
  [313] getlocal 1 .............................. <tSize>
  [315] pushint8 1 .............................. <1>
  [317] pusharglist 2 ........................... <tSize, 1>
  [319] objcall 34 .............................. <tSize[1]>
  [321] setobjprop 80 ........................... pMatteSpr.width = tSize[1]
  [323] getprop 1287 ............................ <pMatteSpr>
  [326] getlocal 1 .............................. <tSize>
  [328] pushint8 2 .............................. <2>
  [330] pusharglist 2 ........................... <tSize, 2>
  [332] objcall 34 .............................. <tSize[2]>
  [334] setobjprop 81 ........................... pMatteSpr.height = tSize[2]
  [336] getlocal 1 .............................. <tSize>
  [338] pushint8 1 .............................. <1>
  [340] pusharglist 2 ........................... <tSize, 1>
  [342] objcall 34 .............................. <tSize[1]>
  [344] getlocal 1 .............................. <tSize>
  [346] pushint8 2 .............................. <2>
  [348] pusharglist 2 ........................... <tSize, 2>
  [350] objcall 34 .............................. <tSize[2]>
  [352] getlocal 1 .............................. <tSize>
  [354] pushint8 3 .............................. <3>
  [356] pusharglist 2 ........................... <tSize, 3>
  [358] objcall 34 .............................. <tSize[3]>
  [360] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [362] extcall 63 .............................. <image(tSize[1], tSize[2], tSize[3])>
  [364] setprop 1292 ............................ pBuffer = image(tSize[1], tSize[2], tSize[3])
  [367] getprop 1251 ............................ <pFlipList>
  [370] getprop 28 .............................. <pDirection>
  [372] pushint8 1 .............................. <1>
  [374] add ..................................... <pDirection + 1>
  [375] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [377] objcall 34 .............................. <pFlipList[pDirection + 1]>
  [379] getprop 28 .............................. <pDirection>
  [381] nteq .................................... <pFlipList[pDirection + 1] <> pDirection>
  [382] getprop 28 .............................. <pDirection>
  [384] pushint8 3 .............................. <3>
  [386] eq ...................................... <pDirection = 3>
  [387] getprop 1300 ............................ <pHeadDir>
  [390] pushint8 4 .............................. <4>
  [392] eq ...................................... <pHeadDir = 4>
  [393] and ..................................... <(pDirection = 3) and (pHeadDir = 4)>
  [394] or ...................................... <(pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4))>
  [395] getprop 28 .............................. <pDirection>
  [397] pushint8 7 .............................. <7>
  [399] eq ...................................... <pDirection = 7>
  [400] getprop 1300 ............................ <pHeadDir>
  [403] pushint8 6 .............................. <6>
  [405] eq ...................................... <pHeadDir = 6>
  [406] and ..................................... <(pDirection = 7) and (pHeadDir = 6)>
  [407] or ...................................... <(pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4)) or ((pDirection = 7) and (pHeadDir = 6))>
  [408] jmpifz [477] ............................ if (pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4)) or ((pDirection = 7) and (pHeadDir = 6)) then / else
  [411] getprop 1291 ............................ <pMember>
  [414] getprop 1291 ............................ <pMember>
  [417] getchainedprop 63 ....................... <pMember.image>
  [419] getobjprop 80 ........................... <pMember.image.width>
  [421] getprop 1291 ............................ <pMember>
  [424] pushsymb 118 ............................ <#regPoint>
  [426] pushint8 2 .............................. <2>
  [428] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [430] objcall 68 .............................. <pMember.regPoint[2]>
  [432] pusharglist 2 ........................... <pMember.image.width, pMember.regPoint[2]>
  [434] extcall 375 ............................. <point(pMember.image.width, pMember.regPoint[2])>
  [437] setobjprop 118 .......................... pMember.regPoint = point(pMember.image.width, pMember.regPoint[2])
  [439] getprop 50 .............................. <pXFactor>
  [441] setprop 1294 ............................ pShadowFix = pXFactor
  [444] getprop 404 ............................. <pSprite>
  [447] getobjprop 78 ........................... <pSprite.flipH>
  [449] not ..................................... <not pSprite.flipH>
  [450] jmpifz [474] ............................ if not pSprite.flipH then
  [453] getprop 404 ............................. <pSprite>
  [456] pushint8 1 .............................. <1>
  [458] setobjprop 78 ........................... pSprite.flipH = 1
  [460] getprop 1287 ............................ <pMatteSpr>
  [463] pushint8 1 .............................. <1>
  [465] setobjprop 78 ........................... pMatteSpr.flipH = 1
  [467] getprop 1288 ............................ <pShadowSpr>
  [470] pushint8 1 .............................. <1>
  [472] setobjprop 78 ........................... pShadowSpr.flipH = 1
  [474] jmp [529]
  [477] getprop 1291 ............................ <pMember>
  [480] pushzero ................................ <0>
  [481] getprop 1291 ............................ <pMember>
  [484] pushsymb 118 ............................ <#regPoint>
  [486] pushint8 2 .............................. <2>
  [488] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [490] objcall 68 .............................. <pMember.regPoint[2]>
  [492] pusharglist 2 ........................... <0, pMember.regPoint[2]>
  [494] extcall 375 ............................. <point(0, pMember.regPoint[2])>
  [497] setobjprop 118 .......................... pMember.regPoint = point(0, pMember.regPoint[2])
  [499] pushzero ................................ <0>
  [500] setprop 1294 ............................ pShadowFix = 0
  [503] getprop 404 ............................. <pSprite>
  [506] getobjprop 78 ........................... <pSprite.flipH>
  [508] jmpifz [529] ............................ if pSprite.flipH then
  [511] getprop 404 ............................. <pSprite>
  [514] pushzero ................................ <0>
  [515] setobjprop 78 ........................... pSprite.flipH = 0
  [517] getprop 1287 ............................ <pMatteSpr>
  [520] pushzero ................................ <0>
  [521] setobjprop 78 ........................... pMatteSpr.flipH = 0
  [523] getprop 1288 ............................ <pShadowSpr>
  [526] pushzero ................................ <0>
  [527] setobjprop 78 ........................... pShadowSpr.flipH = 0
  [529] getprop 1284 ............................ <pCorrectLocZ>
  [532] jmpifz [553] ............................ if pCorrectLocZ then / else
  [535] getprop 21 .............................. <pLocH>
  [537] getprop 1258 ............................ <pRestingHeight>
  [540] add ..................................... <pLocH + pRestingHeight>
  [541] pushint16 1000 .......................... <1000>
  [544] mul ..................................... <(pLocH + pRestingHeight) * 1000>
  [545] pushint8 2 .............................. <2>
  [547] add ..................................... <((pLocH + pRestingHeight) * 1000) + 2>
  [548] setlocal 2 .............................. tOffZ = ((pLocH + pRestingHeight) * 1000) + 2
  [550] jmp [557]
  [553] pushint8 2 .............................. <2>
  [555] setlocal 2 .............................. tOffZ = 2
  [557] getprop 404 ............................. <pSprite>
  [560] getprop 1254 ............................ <pScreenLoc>
  [563] pushint8 1 .............................. <1>
  [565] pusharglist 2 ........................... <pScreenLoc, 1>
  [567] objcall 34 .............................. <pScreenLoc[1]>
  [569] setobjprop 112 .......................... pSprite.locH = pScreenLoc[1]
  [571] getprop 404 ............................. <pSprite>
  [574] getprop 1254 ............................ <pScreenLoc>
  [577] pushint8 2 .............................. <2>
  [579] pusharglist 2 ........................... <pScreenLoc, 2>
  [581] objcall 34 .............................. <pScreenLoc[2]>
  [583] setobjprop 113 .......................... pSprite.locV = pScreenLoc[2]
  [585] getprop 1287 ............................ <pMatteSpr>
  [588] getprop 404 ............................. <pSprite>
  [591] getobjprop 435 .......................... <pSprite.loc>
  [594] setobjprop 435 .......................... pMatteSpr.loc = pSprite.loc
  [597] getprop 1288 ............................ <pShadowSpr>
  [600] getprop 404 ............................. <pSprite>
  [603] getobjprop 435 .......................... <pSprite.loc>
  [606] getprop 1294 ............................ <pShadowFix>
  [609] pushzero ................................ <0>
  [610] pusharglist 2 ........................... <[pShadowFix, 0]>
  [612] pushlist ................................ <[pShadowFix, 0]>
  [613] add ..................................... <pSprite.loc + [pShadowFix, 0]>
  [614] setobjprop 435 .......................... pShadowSpr.loc = pSprite.loc + [pShadowFix, 0]
  [617] getprop 1286 ............................ <pBaseLocZ>
  [620] pushzero ................................ <0>
  [621] nteq .................................... <pBaseLocZ <> 0>
  [622] jmpifz [636] ............................ if pBaseLocZ <> 0 then / else
  [625] getprop 404 ............................. <pSprite>
  [628] getprop 1286 ............................ <pBaseLocZ>
  [631] setobjprop 129 .......................... pSprite.locZ = pBaseLocZ
  [633] jmp [657]
  [636] getprop 404 ............................. <pSprite>
  [639] getprop 1254 ............................ <pScreenLoc>
  [642] pushint8 3 .............................. <3>
  [644] pusharglist 2 ........................... <pScreenLoc, 3>
  [646] objcall 34 .............................. <pScreenLoc[3]>
  [648] getlocal 2 .............................. <tOffZ>
  [650] add ..................................... <pScreenLoc[3] + tOffZ>
  [651] getprop 1286 ............................ <pBaseLocZ>
  [654] add ..................................... <pScreenLoc[3] + tOffZ + pBaseLocZ>
  [655] setobjprop 129 .......................... pSprite.locZ = pScreenLoc[3] + tOffZ + pBaseLocZ
  [657] getprop 1287 ............................ <pMatteSpr>
  [660] getprop 404 ............................. <pSprite>
  [663] getobjprop 129 .......................... <pSprite.locZ>
  [665] pushint8 1 .............................. <1>
  [667] add ..................................... <pSprite.locZ + 1>
  [668] setobjprop 129 .......................... pMatteSpr.locZ = pSprite.locZ + 1
  [670] getprop 1288 ............................ <pShadowSpr>
  [673] getprop 404 ............................. <pSprite>
  [676] getobjprop 129 .......................... <pSprite.locZ>
  [678] pushint8 3 .............................. <3>
  [680] sub ..................................... <pSprite.locZ - 3>
  [681] setobjprop 129 .......................... pShadowSpr.locZ = pSprite.locZ - 3
  [683] pushzero ................................ <0>
  [684] pushzero ................................ <0>
  [685] pushzero ................................ <0>
  [686] pushzero ................................ <0>
  [687] pusharglist 4 ........................... <0, 0, 0, 0>
  [689] extcall 137 ............................. <rect(0, 0, 0, 0)>
  [691] setprop 1253 ............................ pUpdateRect = rect(0, 0, 0, 0)
  [694] getprop 1292 ............................ <pBuffer>
  [697] getprop 1292 ............................ <pBuffer>
  [700] getobjprop 137 .......................... <pBuffer.rect>
  [702] getprop 1277 ............................ <pAlphaColor>
  [705] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [707] objcall 1328 ............................ pBuffer.fill(pBuffer.rect, pAlphaColor)
  [710] pushsymb 634 ............................ <#update>
  [713] getprop 1249 ............................ <pPartList>
  [716] pusharglistnoret 2 ...................... <#update, pPartList>
  [718] extcall 281 ............................. call(#update, pPartList)
  [721] getprop 1291 ............................ <pMember>
  [724] getchainedprop 63 ....................... <pMember.image>
  [726] getprop 1292 ............................ <pBuffer>
  [729] getprop 1253 ............................ <pUpdateRect>
  [732] getprop 1253 ............................ <pUpdateRect>
  [735] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pUpdateRect, pUpdateRect>
  [737] objcall 400 ............................. pMember.image.copyPixels(pBuffer, pUpdateRect, pUpdateRect)
  [740] ret
end

on reDraw me
  [  0] getprop 1292 ............................ <pBuffer>
  [  3] getprop 1292 ............................ <pBuffer>
  [  6] getobjprop 137 .......................... <pBuffer.rect>
  [  8] getprop 1277 ............................ <pAlphaColor>
  [ 11] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [ 13] objcall 1328 ............................ pBuffer.fill(pBuffer.rect, pAlphaColor)
  [ 16] pushsymb 724 ............................ <#render>
  [ 19] getprop 1249 ............................ <pPartList>
  [ 22] pusharglistnoret 2 ...................... <#render, pPartList>
  [ 24] extcall 281 ............................. call(#render, pPartList)
  [ 27] getprop 1291 ............................ <pMember>
  [ 30] getchainedprop 63 ....................... <pMember.image>
  [ 32] getprop 1292 ............................ <pBuffer>
  [ 35] getprop 1292 ............................ <pBuffer>
  [ 38] getobjprop 137 .......................... <pBuffer.rect>
  [ 40] getprop 1292 ............................ <pBuffer>
  [ 43] getobjprop 137 .......................... <pBuffer.rect>
  [ 45] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pBuffer.rect, pBuffer.rect>
  [ 47] objcall 400 ............................. pMember.image.copyPixels(pBuffer, pBuffer.rect, pBuffer.rect)
  [ 50] ret
end

on setPartLists me, tmodels
  [  0] getprop 1265 ............................ <pMainAction>
  [  3] setlocal 0 .............................. tAction = pMainAction
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setprop 1249 ............................ pPartList = []
  [ 11] pushcons 18 ............................. <"human.parts.">
  [ 13] getprop 1295 ............................ <pPeopleSize>
  [ 16] joinstr ................................. <"human.parts." & pPeopleSize>
  [ 17] pusharglist 1 ........................... <"human.parts." & pPeopleSize>
  [ 19] extcall 259 ............................. <getVariableValue("human.parts." & pPeopleSize)>
  [ 22] setlocal 1 .............................. tPartDefinition = getVariableValue("human.parts." & pPeopleSize)
  [ 24] pushint8 1 .............................. <1>
  [ 26] setlocal 2
  [ 28] getlocal 2
  [ 30] getlocal 1 .............................. <tPartDefinition>
  [ 32] getobjprop 33 ........................... <tPartDefinition.count>
  [ 34] lteq
  [ 35] jmpifz [419] ............................ repeat with i = 1 to tPartDefinition.count
  [ 38] getlocal 1 .............................. <tPartDefinition>
  [ 40] getlocal 2 .............................. <i>
  [ 42] pusharglist 2 ........................... <tPartDefinition, i>
  [ 44] objcall 34 .............................. <tPartDefinition[i]>
  [ 46] setlocal 3 .............................. tPartSymbol = tPartDefinition[i]
  [ 48] getparam 1 .............................. <tmodels>
  [ 50] getlocal 3 .............................. <tPartSymbol>
  [ 52] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [ 54] objcall 34 .............................. <tmodels[tPartSymbol]>
  [ 56] pusharglist 1 ........................... <tmodels[tPartSymbol]>
  [ 58] extcall 120 ............................. <voidp(tmodels[tPartSymbol])>
  [ 60] jmpifz [ 74] ............................ if voidp(tmodels[tPartSymbol]) then
  [ 63] getparam 1 .............................. <tmodels>
  [ 65] getlocal 3 .............................. <tPartSymbol>
  [ 67] pusharglist 0 ........................... <[:]>
  [ 69] pushproplist ............................ <[:]>
  [ 70] pusharglistnoret 3 ...................... <tmodels, tPartSymbol, [:]>
  [ 72] objcall 59 .............................. tmodels[tPartSymbol] = [:]
  [ 74] getparam 1 .............................. <tmodels>
  [ 76] getlocal 3 .............................. <tPartSymbol>
  [ 78] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [ 80] objcall 34 .............................. <tmodels[tPartSymbol]>
  [ 82] pushcons 34 ............................. <"model">
  [ 84] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [ 86] objcall 34 .............................. <tmodels[tPartSymbol]["model"]>
  [ 88] pusharglist 1 ........................... <tmodels[tPartSymbol]["model"]>
  [ 90] extcall 120 ............................. <voidp(tmodels[tPartSymbol]["model"])>
  [ 92] jmpifz [111] ............................ if voidp(tmodels[tPartSymbol]["model"]) then
  [ 95] getparam 1 .............................. <tmodels>
  [ 97] getlocal 3 .............................. <tPartSymbol>
  [ 99] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [101] objcall 34 .............................. <tmodels[tPartSymbol]>
  [103] pushcons 34 ............................. <"model">
  [105] pushcons 35 ............................. <"001">
  [107] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "model", "001">
  [109] objcall 59 .............................. tmodels[tPartSymbol]["model"] = "001"
  [111] getparam 1 .............................. <tmodels>
  [113] getlocal 3 .............................. <tPartSymbol>
  [115] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [117] objcall 34 .............................. <tmodels[tPartSymbol]>
  [119] pushcons 36 ............................. <"color">
  [121] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [123] objcall 34 .............................. <tmodels[tPartSymbol]["color"]>
  [125] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [127] extcall 120 ............................. <voidp(tmodels[tPartSymbol]["color"])>
  [129] jmpifz [152] ............................ if voidp(tmodels[tPartSymbol]["color"]) then
  [132] getparam 1 .............................. <tmodels>
  [134] getlocal 3 .............................. <tPartSymbol>
  [136] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [138] objcall 34 .............................. <tmodels[tPartSymbol]>
  [140] pushcons 36 ............................. <"color">
  [142] pushcons 37 ............................. <"EEEEEE">
  [144] pusharglist 1 ........................... <"EEEEEE">
  [146] extcall 94 .............................. <rgb("EEEEEE")>
  [148] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "color", rgb("EEEEEE")>
  [150] objcall 59 .............................. tmodels[tPartSymbol]["color"] = rgb("EEEEEE")
  [152] getlocal 3 .............................. <tPartSymbol>
  [154] pushcons 16 ............................. <"fc">
  [156] eq ...................................... <tPartSymbol = "fc">
  [157] getparam 1 .............................. <tmodels>
  [159] getlocal 3 .............................. <tPartSymbol>
  [161] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [163] objcall 34 .............................. <tmodels[tPartSymbol]>
  [165] pushcons 34 ............................. <"model">
  [167] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [169] objcall 34 .............................. <tmodels[tPartSymbol]["model"]>
  [171] pushcons 35 ............................. <"001">
  [173] nteq .................................... <tmodels[tPartSymbol]["model"] <> "001">
  [174] and ..................................... <(tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001")>
  [175] getprop 50 .............................. <pXFactor>
  [177] pushint8 33 ............................. <33>
  [179] lt ...................................... <pXFactor < 33>
  [180] and ..................................... <(tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001") and (pXFactor < 33)>
  [181] jmpifz [200] ............................ if (tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001") and (pXFactor < 33) then
  [184] getparam 1 .............................. <tmodels>
  [186] getlocal 3 .............................. <tPartSymbol>
  [188] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [190] objcall 34 .............................. <tmodels[tPartSymbol]>
  [192] pushcons 34 ............................. <"model">
  [194] pushcons 35 ............................. <"001">
  [196] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "model", "001">
  [198] objcall 59 .............................. tmodels[tPartSymbol]["model"] = "001"
  [200] pushsymb 262 ............................ <#temp>
  [203] getprop 1285 ............................ <pPartClass>
  [206] pusharglist 2 ........................... <#temp, pPartClass>
  [208] extcall 260 ............................. <createObject(#temp, pPartClass)>
  [211] setlocal 4 .............................. tPartObj = createObject(#temp, pPartClass)
  [213] getparam 1 .............................. <tmodels>
  [215] getlocal 3 .............................. <tPartSymbol>
  [217] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [219] objcall 34 .............................. <tmodels[tPartSymbol]>
  [221] pushcons 36 ............................. <"color">
  [223] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [225] objcall 34 .............................. <tmodels[tPartSymbol]["color"]>
  [227] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [229] extcall 391 ............................. <stringp(tmodels[tPartSymbol]["color"])>
  [232] jmpifz [262] ............................ if stringp(tmodels[tPartSymbol]["color"]) then
  [235] pushcons 38 ............................. <"rgb(">
  [237] getparam 1 .............................. <tmodels>
  [239] getlocal 3 .............................. <tPartSymbol>
  [241] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [243] objcall 34 .............................. <tmodels[tPartSymbol]>
  [245] pushcons 36 ............................. <"color">
  [247] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [249] objcall 34 .............................. <tmodels[tPartSymbol]["color"]>
  [251] joinstr ................................. <"rgb(" & tmodels[tPartSymbol]["color"]>
  [252] pushcons 39 ............................. <")">
  [254] joinstr ................................. <"rgb(" & tmodels[tPartSymbol]["color"] & ")">
  [255] pusharglist 1 ........................... <"rgb(" & tmodels[tPartSymbol]["color"] & ")">
  [257] extcall 480 ............................. <value("rgb(" & tmodels[tPartSymbol]["color"] & ")")>
  [260] setlocal 5 .............................. tColor = value("rgb(" & tmodels[tPartSymbol]["color"] & ")")
  [262] getparam 1 .............................. <tmodels>
  [264] getlocal 3 .............................. <tPartSymbol>
  [266] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [268] objcall 34 .............................. <tmodels[tPartSymbol]>
  [270] pushcons 36 ............................. <"color">
  [272] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [274] objcall 34 .............................. <tmodels[tPartSymbol]["color"]>
  [276] getobjprop 127 .......................... <tmodels[tPartSymbol]["color"].ilk>
  [278] pushsymb 97 ............................. <#color>
  [280] nteq .................................... <tmodels[tPartSymbol]["color"].ilk <> #color>
  [281] jmpifz [307] ............................ if tmodels[tPartSymbol]["color"].ilk <> #color then / else
  [284] getparam 1 .............................. <tmodels>
  [286] getlocal 3 .............................. <tPartSymbol>
  [288] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [290] objcall 34 .............................. <tmodels[tPartSymbol]>
  [292] pushcons 36 ............................. <"color">
  [294] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [296] objcall 34 .............................. <tmodels[tPartSymbol]["color"]>
  [298] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [300] extcall 94 .............................. <rgb(tmodels[tPartSymbol]["color"])>
  [302] setlocal 5 .............................. tColor = rgb(tmodels[tPartSymbol]["color"])
  [304] jmp [323]
  [307] getparam 1 .............................. <tmodels>
  [309] getlocal 3 .............................. <tPartSymbol>
  [311] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [313] objcall 34 .............................. <tmodels[tPartSymbol]>
  [315] pushcons 36 ............................. <"color">
  [317] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [319] objcall 34 .............................. <tmodels[tPartSymbol]["color"]>
  [321] setlocal 5 .............................. tColor = tmodels[tPartSymbol]["color"]
  [323] getlocal 5 .............................. <tColor>
  [325] getobjprop 1331 ......................... <tColor.red>
  [328] getlocal 5 .............................. <tColor>
  [330] getobjprop 1332 ......................... <tColor.green>
  [333] add ..................................... <tColor.red + tColor.green>
  [334] getlocal 5 .............................. <tColor>
  [336] getobjprop 1333 ......................... <tColor.blue>
  [339] add ..................................... <tColor.red + tColor.green + tColor.blue>
  [340] pushint16 238 ........................... <238>
  [343] pushint8 3 .............................. <3>
  [345] mul ..................................... <238 * 3>
  [346] gt ...................................... <(tColor.red + tColor.green + tColor.blue) > (238 * 3)>
  [347] jmpifz [358] ............................ if (tColor.red + tColor.green + tColor.blue) > (238 * 3) then
  [350] pushcons 37 ............................. <"EEEEEE">
  [352] pusharglist 1 ........................... <"EEEEEE">
  [354] extcall 94 .............................. <rgb("EEEEEE")>
  [356] setlocal 5 .............................. tColor = rgb("EEEEEE")
  [358] getlocal 4 .............................. <tPartObj>
  [360] getlocal 3 .............................. <tPartSymbol>
  [362] getparam 1 .............................. <tmodels>
  [364] getlocal 3 .............................. <tPartSymbol>
  [366] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [368] objcall 34 .............................. <tmodels[tPartSymbol]>
  [370] pushcons 34 ............................. <"model">
  [372] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [374] objcall 34 .............................. <tmodels[tPartSymbol]["model"]>
  [376] getlocal 5 .............................. <tColor>
  [378] getprop 28 .............................. <pDirection>
  [380] getlocal 0 .............................. <tAction>
  [382] getparam 0 .............................. <me>
  [384] pusharglistnoret 7 ...................... <tPartObj, tPartSymbol, tmodels[tPartSymbol]["model"], tColor, pDirection, tAction, me>
  [386] objcall 2 ............................... tPartObj.define(tPartSymbol, tmodels[tPartSymbol]["model"], tColor, pDirection, tAction, me)
  [388] getprop 1249 ............................ <pPartList>
  [391] getlocal 4 .............................. <tPartObj>
  [393] pusharglistnoret 2 ...................... <pPartList, tPartObj>
  [395] objcall 88 .............................. pPartList.add(tPartObj)
  [397] getprop 1278 ............................ <pColors>
  [400] getlocal 3 .............................. <tPartSymbol>
  [402] getlocal 5 .............................. <tColor>
  [404] pusharglistnoret 3 ...................... <pColors, tPartSymbol, tColor>
  [406] objcall 717 ............................. pColors.setaProp(tPartSymbol, tColor)
  [409] pushint8 1
  [411] getlocal 2
  [413] add
  [414] setlocal 2
  [416] endrepeat [ 28]
  [419] pusharglist 0 ........................... <[:]>
  [421] pushproplist ............................ <[:]>
  [422] setprop 1250 ............................ pPartIndex = [:]
  [425] pushint8 1 .............................. <1>
  [427] setlocal 2
  [429] getlocal 2
  [431] getprop 1249 ............................ <pPartList>
  [434] getobjprop 33 ........................... <pPartList.count>
  [436] lteq
  [437] jmpifz [470] ............................ repeat with i = 1 to pPartList.count
  [440] getprop 1250 ............................ <pPartIndex>
  [443] getprop 1249 ............................ <pPartList>
  [446] getlocal 2 .............................. <i>
  [448] pusharglist 2 ........................... <pPartList, i>
  [450] objcall 34 .............................. <pPartList[i]>
  [452] getobjprop 1334 ......................... <pPartList[i].pPart>
  [455] getlocal 2 .............................. <i>
  [457] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [459] objcall 59 .............................. pPartIndex[pPartList[i].pPart] = i
  [461] pushint8 1
  [463] getlocal 2
  [465] add
  [466] setlocal 2
  [468] endrepeat [429]
  [470] pushint8 1 .............................. <1>
  [472] pusharglistnoret 1 ...................... <1>
  [474] extcall 31 .............................. return 1
  [476] ret
end

on arrangeParts me
  [  0] getprop 1250 ............................ <pPartIndex>
  [  3] pushcons 40 ............................. <"lg">
  [  5] pusharglist 2 ........................... <pPartIndex, "lg">
  [  7] objcall 34 .............................. <pPartIndex["lg"]>
  [  9] getprop 1250 ............................ <pPartIndex>
  [ 12] pushcons 30 ............................. <"sh">
  [ 14] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 16] objcall 34 .............................. <pPartIndex["sh"]>
  [ 18] lt ...................................... <pPartIndex["lg"] < pPartIndex["sh"]>
  [ 19] jmpifz [ 47] ............................ if pPartIndex["lg"] < pPartIndex["sh"] then / else
  [ 22] getprop 1250 ............................ <pPartIndex>
  [ 25] pushcons 40 ............................. <"lg">
  [ 27] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 29] objcall 34 .............................. <pPartIndex["lg"]>
  [ 31] setlocal 0 .............................. tIndex1 = pPartIndex["lg"]
  [ 33] getprop 1250 ............................ <pPartIndex>
  [ 36] pushcons 30 ............................. <"sh">
  [ 38] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 40] objcall 34 .............................. <pPartIndex["sh"]>
  [ 42] setlocal 1 .............................. tIndex2 = pPartIndex["sh"]
  [ 44] jmp [ 69]
  [ 47] getprop 1250 ............................ <pPartIndex>
  [ 50] pushcons 30 ............................. <"sh">
  [ 52] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 54] objcall 34 .............................. <pPartIndex["sh"]>
  [ 56] setlocal 0 .............................. tIndex1 = pPartIndex["sh"]
  [ 58] getprop 1250 ............................ <pPartIndex>
  [ 61] pushcons 40 ............................. <"lg">
  [ 63] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 65] objcall 34 .............................. <pPartIndex["lg"]>
  [ 67] setlocal 1 .............................. tIndex2 = pPartIndex["lg"]
  [ 69] getprop 1249 ............................ <pPartList>
  [ 72] getprop 1250 ............................ <pPartIndex>
  [ 75] pushcons 40 ............................. <"lg">
  [ 77] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 79] objcall 34 .............................. <pPartIndex["lg"]>
  [ 81] pusharglist 2 ........................... <pPartList, pPartIndex["lg"]>
  [ 83] objcall 34 .............................. <pPartList[pPartIndex["lg"]]>
  [ 85] setlocal 2 .............................. tLG = pPartList[pPartIndex["lg"]]
  [ 87] getprop 1249 ............................ <pPartList>
  [ 90] getprop 1250 ............................ <pPartIndex>
  [ 93] pushcons 30 ............................. <"sh">
  [ 95] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 97] objcall 34 .............................. <pPartIndex["sh"]>
  [ 99] pusharglist 2 ........................... <pPartList, pPartIndex["sh"]>
  [101] objcall 34 .............................. <pPartList[pPartIndex["sh"]]>
  [103] setlocal 3 .............................. tSH = pPartList[pPartIndex["sh"]]
  [105] getprop 1265 ............................ <pMainAction>
  [108] peek 0 .................................. case pMainAction of
  [110] pushcons 31 ............................. <"sit">
  [112] nteq
  [113] jmpifz [124] ............................ (case) "sit", ...
  [116] peek 0
  [118] pushcons 12 ............................. <"lay">
  [120] eq
  [121] jmpifz [191] ............................ (case) ..., "lay":
  [124] getprop 1251 ............................ <pFlipList>
  [127] getprop 28 .............................. <pDirection>
  [129] pushint8 1 .............................. <1>
  [131] add ..................................... <pDirection + 1>
  [132] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [134] objcall 34 .............................. <pFlipList[pDirection + 1]>
  [136] pushzero ................................ <0>
  [137] eq ...................................... <pFlipList[pDirection + 1] = 0>
  [138] jmpifz [166] ............................ if pFlipList[pDirection + 1] = 0 then / else
  [141] getprop 1249 ............................ <pPartList>
  [144] getlocal 0 .............................. <tIndex1>
  [146] getlocal 3 .............................. <tSH>
  [148] pusharglistnoret 3 ...................... <pPartList, tIndex1, tSH>
  [150] objcall 59 .............................. pPartList[tIndex1] = tSH
  [152] getprop 1249 ............................ <pPartList>
  [155] getlocal 1 .............................. <tIndex2>
  [157] getlocal 2 .............................. <tLG>
  [159] pusharglistnoret 3 ...................... <pPartList, tIndex2, tLG>
  [161] objcall 59 .............................. pPartList[tIndex2] = tLG
  [163] jmp [188]
  [166] getprop 1249 ............................ <pPartList>
  [169] getlocal 0 .............................. <tIndex1>
  [171] getlocal 2 .............................. <tLG>
  [173] pusharglistnoret 3 ...................... <pPartList, tIndex1, tLG>
  [175] objcall 59 .............................. pPartList[tIndex1] = tLG
  [177] getprop 1249 ............................ <pPartList>
  [180] getlocal 1 .............................. <tIndex2>
  [182] getlocal 3 .............................. <tSH>
  [184] pusharglistnoret 3 ...................... <pPartList, tIndex2, tSH>
  [186] objcall 59 .............................. pPartList[tIndex2] = tSH
  [188] jmp [213] ............................... (case) otherwise:
  [191] getprop 1249 ............................ <pPartList>
  [194] getlocal 0 .............................. <tIndex1>
  [196] getlocal 3 .............................. <tSH>
  [198] pusharglistnoret 3 ...................... <pPartList, tIndex1, tSH>
  [200] objcall 59 .............................. pPartList[tIndex1] = tSH
  [202] getprop 1249 ............................ <pPartList>
  [205] getlocal 1 .............................. <tIndex2>
  [207] getlocal 2 .............................. <tLG>
  [209] pusharglistnoret 3 ...................... <pPartList, tIndex2, tLG>
  [211] objcall 59 .............................. pPartList[tIndex2] = tLG
  [213] pop 1 ................................... end case
  [215] getprop 1249 ............................ <pPartList>
  [218] getprop 1250 ............................ <pPartIndex>
  [221] pushcons 41 ............................. <"rs">
  [223] pusharglist 2 ........................... <pPartIndex, "rs">
  [225] objcall 34 .............................. <pPartIndex["rs"]>
  [227] pusharglist 2 ........................... <pPartList, pPartIndex["rs"]>
  [229] objcall 34 .............................. <pPartList[pPartIndex["rs"]]>
  [231] setlocal 4 .............................. tRS = pPartList[pPartIndex["rs"]]
  [233] getprop 1249 ............................ <pPartList>
  [236] getprop 1250 ............................ <pPartIndex>
  [239] pushcons 42 ............................. <"rh">
  [241] pusharglist 2 ........................... <pPartIndex, "rh">
  [243] objcall 34 .............................. <pPartIndex["rh"]>
  [245] pusharglist 2 ........................... <pPartList, pPartIndex["rh"]>
  [247] objcall 34 .............................. <pPartList[pPartIndex["rh"]]>
  [249] setlocal 5 .............................. tRH = pPartList[pPartIndex["rh"]]
  [251] getprop 1249 ............................ <pPartList>
  [254] getprop 1250 ............................ <pPartIndex>
  [257] pushcons 43 ............................. <"ri">
  [259] pusharglist 2 ........................... <pPartIndex, "ri">
  [261] objcall 34 .............................. <pPartIndex["ri"]>
  [263] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [265] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [267] setlocal 6 .............................. tRI = pPartList[pPartIndex["ri"]]
  [269] getprop 1249 ............................ <pPartList>
  [272] getprop 1250 ............................ <pPartIndex>
  [275] pushcons 41 ............................. <"rs">
  [277] pusharglist 2 ........................... <pPartIndex, "rs">
  [279] objcall 34 .............................. <pPartIndex["rs"]>
  [281] pusharglistnoret 2 ...................... <pPartList, pPartIndex["rs"]>
  [283] objcall 841 ............................. pPartList.deleteAt(pPartIndex["rs"])
  [286] getprop 1249 ............................ <pPartList>
  [289] getprop 1250 ............................ <pPartIndex>
  [292] pushcons 42 ............................. <"rh">
  [294] pusharglist 2 ........................... <pPartIndex, "rh">
  [296] objcall 34 .............................. <pPartIndex["rh"]>
  [298] pusharglistnoret 2 ...................... <pPartList, pPartIndex["rh"]>
  [300] objcall 841 ............................. pPartList.deleteAt(pPartIndex["rh"])
  [303] getprop 1249 ............................ <pPartList>
  [306] getprop 1250 ............................ <pPartIndex>
  [309] pushcons 43 ............................. <"ri">
  [311] pusharglist 2 ........................... <pPartIndex, "ri">
  [313] objcall 34 .............................. <pPartIndex["ri"]>
  [315] pusharglistnoret 2 ...................... <pPartList, pPartIndex["ri"]>
  [317] objcall 841 ............................. pPartList.deleteAt(pPartIndex["ri"])
  [320] getlocal 5 .............................. <tRH>
  [322] getobjprop 1337 ......................... <tRH.pActionRh>
  [325] pushcons 44 ............................. <"drk">
  [327] eq ...................................... <tRH.pActionRh = "drk">
  [328] pushzero ................................ <0>
  [329] pushint8 6 .............................. <6>
  [331] pusharglist 2 ........................... <[0, 6]>
  [333] pushlist ................................ <[0, 6]>
  [334] getprop 28 .............................. <pDirection>
  [336] pusharglist 2 ........................... <[0, 6], pDirection>
  [338] objcall 332 ............................. <[0, 6].getPos(pDirection)>
  [341] pushzero ................................ <0>
  [342] nteq .................................... <[0, 6].getPos(pDirection) <> 0>
  [343] and ..................................... <(tRH.pActionRh = "drk") and ([0, 6].getPos(pDirection) <> 0)>
  [344] jmpifz [382] ............................ if (tRH.pActionRh = "drk") and ([0, 6].getPos(pDirection) <> 0) then / else
  [347] getprop 1249 ............................ <pPartList>
  [350] pushint8 1 .............................. <1>
  [352] getlocal 6 .............................. <tRI>
  [354] pusharglistnoret 3 ...................... <pPartList, 1, tRI>
  [356] objcall 1338 ............................ pPartList.addAt(1, tRI)
  [359] getprop 1249 ............................ <pPartList>
  [362] getlocal 5 .............................. <tRH>
  [364] pusharglistnoret 2 ...................... <pPartList, tRH>
  [366] objcall 842 ............................. pPartList.append(tRH)
  [369] getprop 1249 ............................ <pPartList>
  [372] getlocal 4 .............................. <tRS>
  [374] pusharglistnoret 2 ...................... <pPartList, tRS>
  [376] objcall 842 ............................. pPartList.append(tRS)
  [379] jmp [512]
  [382] getprop 28 .............................. <pDirection>
  [384] pushint8 7 .............................. <7>
  [386] eq ...................................... <pDirection = 7>
  [387] jmpifz [429] ............................ if pDirection = 7 then / else
  [390] getprop 1249 ............................ <pPartList>
  [393] pushint8 1 .............................. <1>
  [395] getlocal 6 .............................. <tRI>
  [397] pusharglistnoret 3 ...................... <pPartList, 1, tRI>
  [399] objcall 1338 ............................ pPartList.addAt(1, tRI)
  [402] getprop 1249 ............................ <pPartList>
  [405] pushint8 2 .............................. <2>
  [407] getlocal 5 .............................. <tRH>
  [409] pusharglistnoret 3 ...................... <pPartList, 2, tRH>
  [411] objcall 1338 ............................ pPartList.addAt(2, tRH)
  [414] getprop 1249 ............................ <pPartList>
  [417] pushint8 3 .............................. <3>
  [419] getlocal 4 .............................. <tRS>
  [421] pusharglistnoret 3 ...................... <pPartList, 3, tRS>
  [423] objcall 1338 ............................ pPartList.addAt(3, tRS)
  [426] jmp [512]
  [429] getprop 28 .............................. <pDirection>
  [431] pushint8 3 .............................. <3>
  [433] eq ...................................... <pDirection = 3>
  [434] getprop 1270 ............................ <pDancing>
  [437] pushzero ................................ <0>
  [438] gt ...................................... <pDancing > 0>
  [439] and ..................................... <(pDirection = 3) and (pDancing > 0)>
  [440] jmpifz [482] ............................ if (pDirection = 3) and (pDancing > 0) then / else
  [443] getprop 1249 ............................ <pPartList>
  [446] pushint8 7 .............................. <7>
  [448] getlocal 6 .............................. <tRI>
  [450] pusharglistnoret 3 ...................... <pPartList, 7, tRI>
  [452] objcall 1338 ............................ pPartList.addAt(7, tRI)
  [455] getprop 1249 ............................ <pPartList>
  [458] pushint8 8 .............................. <8>
  [460] getlocal 5 .............................. <tRH>
  [462] pusharglistnoret 3 ...................... <pPartList, 8, tRH>
  [464] objcall 1338 ............................ pPartList.addAt(8, tRH)
  [467] getprop 1249 ............................ <pPartList>
  [470] pushint8 9 .............................. <9>
  [472] getlocal 4 .............................. <tRS>
  [474] pusharglistnoret 3 ...................... <pPartList, 9, tRS>
  [476] objcall 1338 ............................ pPartList.addAt(9, tRS)
  [479] jmp [512]
  [482] getprop 1249 ............................ <pPartList>
  [485] getlocal 6 .............................. <tRI>
  [487] pusharglistnoret 2 ...................... <pPartList, tRI>
  [489] objcall 842 ............................. pPartList.append(tRI)
  [492] getprop 1249 ............................ <pPartList>
  [495] getlocal 5 .............................. <tRH>
  [497] pusharglistnoret 2 ...................... <pPartList, tRH>
  [499] objcall 842 ............................. pPartList.append(tRH)
  [502] getprop 1249 ............................ <pPartList>
  [505] getlocal 4 .............................. <tRS>
  [507] pusharglistnoret 2 ...................... <pPartList, tRS>
  [509] objcall 842 ............................. pPartList.append(tRS)
  [512] pushint8 1 .............................. <1>
  [514] setlocal 7
  [516] getlocal 7
  [518] getprop 1249 ............................ <pPartList>
  [521] getobjprop 33 ........................... <pPartList.count>
  [523] lteq
  [524] jmpifz [557] ............................ repeat with i = 1 to pPartList.count
  [527] getprop 1250 ............................ <pPartIndex>
  [530] getprop 1249 ............................ <pPartList>
  [533] getlocal 7 .............................. <i>
  [535] pusharglist 2 ........................... <pPartList, i>
  [537] objcall 34 .............................. <pPartList[i]>
  [539] getobjprop 1334 ......................... <pPartList[i].pPart>
  [542] getlocal 7 .............................. <i>
  [544] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [546] objcall 59 .............................. pPartIndex[pPartList[i].pPart] = i
  [548] pushint8 1
  [550] getlocal 7
  [552] add
  [553] setlocal 7
  [555] endrepeat [516]
  [557] getprop 1301 ............................ <pLastDir>
  [560] getprop 28 .............................. <pDirection>
  [562] eq ...................................... <pLastDir = pDirection>
  [563] jmpifz [570] ............................ if pLastDir = pDirection then
  [566] pusharglistnoret 0 ...................... <>
  [568] extcall 31 .............................. return 
  [570] getprop 28 .............................. <pDirection>
  [572] setprop 1301 ............................ pLastDir = pDirection
  [575] getprop 1249 ............................ <pPartList>
  [578] getprop 1250 ............................ <pPartIndex>
  [581] pushcons 45 ............................. <"ls">
  [583] pusharglist 2 ........................... <pPartIndex, "ls">
  [585] objcall 34 .............................. <pPartIndex["ls"]>
  [587] pusharglist 2 ........................... <pPartList, pPartIndex["ls"]>
  [589] objcall 34 .............................. <pPartList[pPartIndex["ls"]]>
  [591] setlocal 8 .............................. tLS = pPartList[pPartIndex["ls"]]
  [593] getprop 1249 ............................ <pPartList>
  [596] getprop 1250 ............................ <pPartIndex>
  [599] pushcons 46 ............................. <"lh">
  [601] pusharglist 2 ........................... <pPartIndex, "lh">
  [603] objcall 34 .............................. <pPartIndex["lh"]>
  [605] pusharglist 2 ........................... <pPartList, pPartIndex["lh"]>
  [607] objcall 34 .............................. <pPartList[pPartIndex["lh"]]>
  [609] setlocal 9 .............................. tLH = pPartList[pPartIndex["lh"]]
  [611] getprop 1249 ............................ <pPartList>
  [614] getprop 1250 ............................ <pPartIndex>
  [617] pushcons 47 ............................. <"li">
  [619] pusharglist 2 ........................... <pPartIndex, "li">
  [621] objcall 34 .............................. <pPartIndex["li"]>
  [623] pusharglist 2 ........................... <pPartList, pPartIndex["li"]>
  [625] objcall 34 .............................. <pPartList[pPartIndex["li"]]>
  [627] setlocal 10 ............................. tLI = pPartList[pPartIndex["li"]]
  [629] getprop 1249 ............................ <pPartList>
  [632] getprop 1250 ............................ <pPartIndex>
  [635] pushcons 45 ............................. <"ls">
  [637] pusharglist 2 ........................... <pPartIndex, "ls">
  [639] objcall 34 .............................. <pPartIndex["ls"]>
  [641] pusharglistnoret 2 ...................... <pPartList, pPartIndex["ls"]>
  [643] objcall 841 ............................. pPartList.deleteAt(pPartIndex["ls"])
  [646] getprop 1249 ............................ <pPartList>
  [649] getprop 1250 ............................ <pPartIndex>
  [652] pushcons 46 ............................. <"lh">
  [654] pusharglist 2 ........................... <pPartIndex, "lh">
  [656] objcall 34 .............................. <pPartIndex["lh"]>
  [658] pusharglistnoret 2 ...................... <pPartList, pPartIndex["lh"]>
  [660] objcall 841 ............................. pPartList.deleteAt(pPartIndex["lh"])
  [663] getprop 1249 ............................ <pPartList>
  [666] getprop 1250 ............................ <pPartIndex>
  [669] pushcons 47 ............................. <"li">
  [671] pusharglist 2 ........................... <pPartIndex, "li">
  [673] objcall 34 .............................. <pPartIndex["li"]>
  [675] pusharglistnoret 2 ...................... <pPartList, pPartIndex["li"]>
  [677] objcall 841 ............................. pPartList.deleteAt(pPartIndex["li"])
  [680] getprop 28 .............................. <pDirection>
  [682] peek 0 .................................. case pDirection of
  [684] pushint8 3 .............................. <3>
  [686] eq
  [687] jmpifz [729] ............................ (case) 3:
  [690] getprop 1249 ............................ <pPartList>
  [693] pushint8 8 .............................. <8>
  [695] getlocal 10 ............................. <tLI>
  [697] pusharglistnoret 3 ...................... <pPartList, 8, tLI>
  [699] objcall 1338 ............................ pPartList.addAt(8, tLI)
  [702] getprop 1249 ............................ <pPartList>
  [705] pushint8 9 .............................. <9>
  [707] getlocal 9 .............................. <tLH>
  [709] pusharglistnoret 3 ...................... <pPartList, 9, tLH>
  [711] objcall 1338 ............................ pPartList.addAt(9, tLH)
  [714] getprop 1249 ............................ <pPartList>
  [717] pushint8 10 ............................. <10>
  [719] getlocal 8 .............................. <tLS>
  [721] pusharglistnoret 3 ...................... <pPartList, 10, tLS>
  [723] objcall 1338 ............................ pPartList.addAt(10, tLS)
  [726] jmp [765] ............................... (case) otherwise:
  [729] getprop 1249 ............................ <pPartList>
  [732] pushint8 1 .............................. <1>
  [734] getlocal 10 ............................. <tLI>
  [736] pusharglistnoret 3 ...................... <pPartList, 1, tLI>
  [738] objcall 1338 ............................ pPartList.addAt(1, tLI)
  [741] getprop 1249 ............................ <pPartList>
  [744] pushint8 2 .............................. <2>
  [746] getlocal 9 .............................. <tLH>
  [748] pusharglistnoret 3 ...................... <pPartList, 2, tLH>
  [750] objcall 1338 ............................ pPartList.addAt(2, tLH)
  [753] getprop 1249 ............................ <pPartList>
  [756] pushint8 3 .............................. <3>
  [758] getlocal 8 .............................. <tLS>
  [760] pusharglistnoret 3 ...................... <pPartList, 3, tLS>
  [762] objcall 1338 ............................ pPartList.addAt(3, tLS)
  [765] pop 1 ................................... end case
  [767] pushint8 1 .............................. <1>
  [769] setlocal 7
  [771] getlocal 7
  [773] getprop 1249 ............................ <pPartList>
  [776] getobjprop 33 ........................... <pPartList.count>
  [778] lteq
  [779] jmpifz [812] ............................ repeat with i = 1 to pPartList.count
  [782] getprop 1250 ............................ <pPartIndex>
  [785] getprop 1249 ............................ <pPartList>
  [788] getlocal 7 .............................. <i>
  [790] pusharglist 2 ........................... <pPartList, i>
  [792] objcall 34 .............................. <pPartList[i]>
  [794] getobjprop 1334 ......................... <pPartList[i].pPart>
  [797] getlocal 7 .............................. <i>
  [799] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [801] objcall 59 .............................. pPartIndex[pPartList[i].pPart] = i
  [803] pushint8 1
  [805] getlocal 7
  [807] add
  [808] setlocal 7
  [810] endrepeat [771]
  [812] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 80 ........................... <tImg_a.width>
  [  4] getparam 1 .............................. <tImg_a>
  [  6] getobjprop 81 ........................... <tImg_a.height>
  [  8] getparam 1 .............................. <tImg_a>
  [ 10] getobjprop 1191 ......................... <tImg_a.depth>
  [ 13] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth>
  [ 15] extcall 63 .............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth)>
  [ 17] setlocal 0 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth)
  [ 19] getparam 1 .............................. <tImg_a>
  [ 21] getobjprop 80 ........................... <tImg_a.width>
  [ 23] pushzero ................................ <0>
  [ 24] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 26] extcall 375 ............................. <point(tImg_a.width, 0)>
  [ 29] pushzero ................................ <0>
  [ 30] pushzero ................................ <0>
  [ 31] pusharglist 2 ........................... <0, 0>
  [ 33] extcall 375 ............................. <point(0, 0)>
  [ 36] pushzero ................................ <0>
  [ 37] getparam 1 .............................. <tImg_a>
  [ 39] getobjprop 81 ........................... <tImg_a.height>
  [ 41] pusharglist 2 ........................... <0, tImg_a.height>
  [ 43] extcall 375 ............................. <point(0, tImg_a.height)>
  [ 46] getparam 1 .............................. <tImg_a>
  [ 48] getobjprop 80 ........................... <tImg_a.width>
  [ 50] getparam 1 .............................. <tImg_a>
  [ 52] getobjprop 81 ........................... <tImg_a.height>
  [ 54] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 56] extcall 375 ............................. <point(tImg_a.width, tImg_a.height)>
  [ 59] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 61] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 62] setlocal 1 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [ 64] getlocal 0 .............................. <tImg_b>
  [ 66] getparam 1 .............................. <tImg_a>
  [ 68] getlocal 1 .............................. <tQuad>
  [ 70] getparam 1 .............................. <tImg_a>
  [ 72] getobjprop 137 .......................... <tImg_a.rect>
  [ 74] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [ 76] objcall 400 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [ 79] getlocal 0 .............................. <tImg_b>
  [ 81] pusharglistnoret 1 ...................... <tImg_b>
  [ 83] extcall 31 .............................. return tImg_b
  [ 85] ret
end

on getCanvasName me
  [  0] getprop 14 .............................. <pClass>
  [  2] getprop 15 .............................. <pName>
  [  4] joinpadstr .............................. <pClass && pName>
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 75 .............................. <me.getID()>
  [ 11] joinstr ................................. <pClass && pName & me.getID()>
  [ 12] pushcons 48 ............................. <"Canvas">
  [ 14] joinpadstr .............................. <pClass && pName & me.getID() && "Canvas">
  [ 15] pusharglistnoret 1 ...................... <pClass && pName & me.getID() && "Canvas">
  [ 17] extcall 31 .............................. return pClass && pName & me.getID() && "Canvas"
  [ 19] ret
end

on action_mv me, tProps
  [  0] pushcons 49 ............................. <"wlk">
  [  2] setprop 1265 ............................ pMainAction = "wlk"
  [  5] pushint8 1 .............................. <1>
  [  7] setprop 1266 ............................ pMoving = 1
  [ 10] pushzero ................................ <0>
  [ 11] setprop 1286 ............................ pBaseLocZ = 0
  [ 14] getmovieprop 99 ......................... <the itemDelimiter>
  [ 16] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 18] pushcons 50 ............................. <",">
  [ 20] setmovieprop 99 ......................... the itemDelimiter = ","
  [ 22] getparam 1 .............................. <tProps>
  [ 24] pushsymb 100 ............................ <#word>
  [ 26] pushint8 2 .............................. <2>
  [ 28] pusharglist 3 ........................... <tProps, #word, 2>
  [ 30] objcall 68 .............................. <tProps.word[2]>
  [ 32] setlocal 1 .............................. tloc = tProps.word[2]
  [ 34] getlocal 1 .............................. <tloc>
  [ 36] pushsymb 103 ............................ <#item>
  [ 38] pushint8 1 .............................. <1>
  [ 40] pusharglist 3 ........................... <tloc, #item, 1>
  [ 42] objcall 68 .............................. <tloc.item[1]>
  [ 44] pusharglist 1 ........................... <tloc.item[1]>
  [ 46] extcall 102 ............................. <integer(tloc.item[1])>
  [ 48] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 50] getlocal 1 .............................. <tloc>
  [ 52] pushsymb 103 ............................ <#item>
  [ 54] pushint8 2 .............................. <2>
  [ 56] pusharglist 3 ........................... <tloc, #item, 2>
  [ 58] objcall 68 .............................. <tloc.item[2]>
  [ 60] pusharglist 1 ........................... <tloc.item[2]>
  [ 62] extcall 102 ............................. <integer(tloc.item[2])>
  [ 64] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 66] getlocal 1 .............................. <tloc>
  [ 68] pushsymb 103 ............................ <#item>
  [ 70] pushint8 3 .............................. <3>
  [ 72] pusharglist 3 ........................... <tloc, #item, 3>
  [ 74] objcall 68 .............................. <tloc.item[3]>
  [ 76] pusharglist 1 ........................... <tloc.item[3]>
  [ 78] extcall 820 ............................. <getLocalFloat(tloc.item[3])>
  [ 81] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 83] getlocal 0 .............................. <tDelim>
  [ 85] setmovieprop 99 ......................... the itemDelimiter = tDelim
  [ 87] getmovieprop 500 ........................ <the milliSeconds>
  [ 90] setprop 1260 ............................ pMoveStart = the milliSeconds
  [ 93] getprop 1034 ............................ <pGeometry>
  [ 96] getprop 19 .............................. <pLocX>
  [ 98] getprop 20 .............................. <pLocY>
  [100] getprop 21 .............................. <pLocH>
  [102] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH>
  [104] objcall 111 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)>
  [106] setprop 1255 ............................ pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)
  [109] getprop 1034 ............................ <pGeometry>
  [112] getlocal 2 .............................. <tLocX>
  [114] getlocal 3 .............................. <tLocY>
  [116] getlocal 4 .............................. <tLocH>
  [118] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [120] objcall 111 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [122] setprop 1256 ............................ pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [125] pushsymb 1320 ........................... <#defineActMultiple>
  [128] getprop 1249 ............................ <pPartList>
  [131] pushcons 49 ............................. <"wlk">
  [133] pushcons 51 ............................. <"bd">
  [135] pushcons 40 ............................. <"lg">
  [137] pushcons 46 ............................. <"lh">
  [139] pushcons 42 ............................. <"rh">
  [141] pushcons 45 ............................. <"ls">
  [143] pushcons 41 ............................. <"rs">
  [145] pushcons 30 ............................. <"sh">
  [147] pusharglist 7 ........................... <["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [149] pushlist ................................ <["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [150] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "wlk", ["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [152] extcall 281 ............................. call(#defineActMultiple, pPartList, "wlk", ["bd", "lg", "lh", "rh", "ls", "rs", "sh"])
  [155] ret
end

on action_sld me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1266 ............................ pMoving = 1
  [  5] pushzero ................................ <0>
  [  6] setprop 1286 ............................ pBaseLocZ = 0
  [  9] getmovieprop 99 ......................... <the itemDelimiter>
  [ 11] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 13] pushcons 50 ............................. <",">
  [ 15] setmovieprop 99 ......................... the itemDelimiter = ","
  [ 17] getparam 1 .............................. <tProps>
  [ 19] pushsymb 100 ............................ <#word>
  [ 21] pushint8 2 .............................. <2>
  [ 23] pusharglist 3 ........................... <tProps, #word, 2>
  [ 25] objcall 68 .............................. <tProps.word[2]>
  [ 27] setlocal 1 .............................. tloc = tProps.word[2]
  [ 29] getlocal 1 .............................. <tloc>
  [ 31] pushsymb 103 ............................ <#item>
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglist 3 ........................... <tloc, #item, 1>
  [ 37] objcall 68 .............................. <tloc.item[1]>
  [ 39] pusharglist 1 ........................... <tloc.item[1]>
  [ 41] extcall 102 ............................. <integer(tloc.item[1])>
  [ 43] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 45] getlocal 1 .............................. <tloc>
  [ 47] pushsymb 103 ............................ <#item>
  [ 49] pushint8 2 .............................. <2>
  [ 51] pusharglist 3 ........................... <tloc, #item, 2>
  [ 53] objcall 68 .............................. <tloc.item[2]>
  [ 55] pusharglist 1 ........................... <tloc.item[2]>
  [ 57] extcall 102 ............................. <integer(tloc.item[2])>
  [ 59] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 61] getlocal 1 .............................. <tloc>
  [ 63] pushsymb 103 ............................ <#item>
  [ 65] pushint8 3 .............................. <3>
  [ 67] pusharglist 3 ........................... <tloc, #item, 3>
  [ 69] objcall 68 .............................. <tloc.item[3]>
  [ 71] pusharglist 1 ........................... <tloc.item[3]>
  [ 73] extcall 820 ............................. <getLocalFloat(tloc.item[3])>
  [ 76] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 78] getlocal 0 .............................. <tDelim>
  [ 80] setmovieprop 99 ......................... the itemDelimiter = tDelim
  [ 82] getparam 1 .............................. <tProps>
  [ 84] pushsymb 100 ............................ <#word>
  [ 86] pushint8 3 .............................. <3>
  [ 88] pusharglist 3 ........................... <tProps, #word, 3>
  [ 90] objcall 68 .............................. <tProps.word[3]>
  [ 92] pusharglist 1 ........................... <tProps.word[3]>
  [ 94] extcall 102 ............................. <integer(tProps.word[3])>
  [ 96] setprop 1283 ............................ pQueuesWithObj = integer(tProps.word[3])
  [ 99] getprop 1034 ............................ <pGeometry>
  [102] getprop 19 .............................. <pLocX>
  [104] getprop 20 .............................. <pLocY>
  [106] getprop 21 .............................. <pLocH>
  [108] getprop 1258 ............................ <pRestingHeight>
  [111] add ..................................... <pLocH + pRestingHeight>
  [112] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [114] objcall 111 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [116] setprop 1255 ............................ pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [119] getprop 1034 ............................ <pGeometry>
  [122] getlocal 2 .............................. <tLocX>
  [124] getlocal 3 .............................. <tLocY>
  [126] getlocal 4 .............................. <tLocH>
  [128] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [130] objcall 111 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [132] setprop 1256 ............................ pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [135] getprop 19 .............................. <pLocX>
  [137] getprop 20 .............................. <pLocY>
  [139] getprop 21 .............................. <pLocH>
  [141] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [143] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [144] setprop 1257 ............................ pPreviousLoc = [pLocX, pLocY, pLocH]
  [147] getparam 1 .............................. <tProps>
  [149] pushsymb 100 ............................ <#word>
  [151] pushint8 4 .............................. <4>
  [153] pusharglist 3 ........................... <tProps, #word, 4>
  [155] objcall 68 .............................. <tProps.word[4]>
  [157] setlocal 5 .............................. tStartTime = tProps.word[4]
  [159] getlocal 5 .............................. <tStartTime>
  [161] pusharglist 1 ........................... <tStartTime>
  [163] extcall 120 ............................. <voidp(tStartTime)>
  [165] jmpifz [177] ............................ if voidp(tStartTime) then / else
  [168] getmovieprop 500 ........................ <the milliSeconds>
  [171] setprop 1260 ............................ pMoveStart = the milliSeconds
  [174] jmp [182]
  [177] getlocal 5 .............................. <tStartTime>
  [179] setprop 1260 ............................ pMoveStart = tStartTime
  [182] ret
end

on action_sit me, tProps
  [  0] pushsymb 1320 ........................... <#defineActMultiple>
  [  3] getprop 1249 ............................ <pPartList>
  [  6] pushcons 31 ............................. <"sit">
  [  8] pushcons 51 ............................. <"bd">
  [ 10] pushcons 40 ............................. <"lg">
  [ 12] pushcons 30 ............................. <"sh">
  [ 14] pusharglist 3 ........................... <["bd", "lg", "sh"]>
  [ 16] pushlist ................................ <["bd", "lg", "sh"]>
  [ 17] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "sit", ["bd", "lg", "sh"]>
  [ 19] extcall 281 ............................. call(#defineActMultiple, pPartList, "sit", ["bd", "lg", "sh"])
  [ 22] pushcons 31 ............................. <"sit">
  [ 24] setprop 1265 ............................ pMainAction = "sit"
  [ 27] getparam 1 .............................. <tProps>
  [ 29] pushsymb 100 ............................ <#word>
  [ 31] pushint8 2 .............................. <2>
  [ 33] pusharglist 3 ........................... <tProps, #word, 2>
  [ 35] objcall 68 .............................. <tProps.word[2]>
  [ 37] pusharglist 1 ........................... <tProps.word[2]>
  [ 39] extcall 820 ............................. <getLocalFloat(tProps.word[2])>
  [ 42] pushfloat32 1.0 ......................... <1.0>
  [ 47] sub ..................................... <getLocalFloat(tProps.word[2]) - 1.0>
  [ 48] setprop 1258 ............................ pRestingHeight = getLocalFloat(tProps.word[2]) - 1.0
  [ 51] getprop 1034 ............................ <pGeometry>
  [ 54] getprop 19 .............................. <pLocX>
  [ 56] getprop 20 .............................. <pLocY>
  [ 58] getprop 21 .............................. <pLocH>
  [ 60] getprop 1258 ............................ <pRestingHeight>
  [ 63] add ..................................... <pLocH + pRestingHeight>
  [ 64] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 66] objcall 111 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 68] setprop 1254 ............................ pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 71] getparam 1 .............................. <tProps>
  [ 73] pushsymb 100 ............................ <#word>
  [ 75] pushint8 3 .............................. <3>
  [ 77] pusharglist 3 ........................... <tProps, #word, 3>
  [ 79] objcall 68 .............................. <tProps.word[3]>
  [ 81] pusharglist 1 ........................... <tProps.word[3]>
  [ 83] extcall 102 ............................. <integer(tProps.word[3])>
  [ 85] setlocal 0 .............................. tIsInQueue = integer(tProps.word[3])
  [ 87] getlocal 0 .............................. <tIsInQueue>
  [ 89] setprop 1283 ............................ pQueuesWithObj = tIsInQueue
  [ 92] ret
end

on action_lay me, tProps
  [  0] pushcons 12 ............................. <"lay">
  [  2] setprop 1265 ............................ pMainAction = "lay"
  [  5] pushzero ................................ <0>
  [  6] setprop 1268 ............................ pCarrying = 0
  [  9] getparam 1 .............................. <tProps>
  [ 11] pushsymb 100 ............................ <#word>
  [ 13] pushint8 2 .............................. <2>
  [ 15] pusharglist 3 ........................... <tProps, #word, 2>
  [ 17] objcall 68 .............................. <tProps.word[2]>
  [ 19] pusharglist 1 ........................... <tProps.word[2]>
  [ 21] extcall 820 ............................. <getLocalFloat(tProps.word[2])>
  [ 24] pushfloat32 1.0 ......................... <1.0>
  [ 29] sub ..................................... <getLocalFloat(tProps.word[2]) - 1.0>
  [ 30] setprop 1258 ............................ pRestingHeight = getLocalFloat(tProps.word[2]) - 1.0
  [ 33] getprop 1034 ............................ <pGeometry>
  [ 36] getprop 19 .............................. <pLocX>
  [ 38] getprop 20 .............................. <pLocY>
  [ 40] getprop 21 .............................. <pLocH>
  [ 42] getprop 1258 ............................ <pRestingHeight>
  [ 45] add ..................................... <pLocH + pRestingHeight>
  [ 46] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 48] objcall 111 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 50] setprop 1254 ............................ pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 53] getprop 50 .............................. <pXFactor>
  [ 55] pushint8 33 ............................. <33>
  [ 57] lt ...................................... <pXFactor < 33>
  [ 58] jmpifz [132] ............................ if pXFactor < 33 then / else
  [ 61] getprop 1251 ............................ <pFlipList>
  [ 64] getprop 28 .............................. <pDirection>
  [ 66] pushint8 1 .............................. <1>
  [ 68] add ..................................... <pDirection + 1>
  [ 69] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [ 71] objcall 34 .............................. <pFlipList[pDirection + 1]>
  [ 73] peek 0 .................................. case pFlipList[pDirection + 1] of
  [ 75] pushint8 2 .............................. <2>
  [ 77] eq
  [ 78] jmpifz [102] ............................ (case) 2:
  [ 81] getprop 1254 ............................ <pScreenLoc>
  [ 84] pushint8 10 ............................. <10>
  [ 86] inv ..................................... <-10>
  [ 87] pushint8 18 ............................. <18>
  [ 89] pushint16 2000 .......................... <2000>
  [ 92] pusharglist 3 ........................... <[-10, 18, 2000]>
  [ 94] pushlist ................................ <[-10, 18, 2000]>
  [ 95] add ..................................... <pScreenLoc + [-10, 18, 2000]>
  [ 96] setprop 1254 ............................ pScreenLoc = pScreenLoc + [-10, 18, 2000]
  [ 99] jmp [127]
  [102] peek 0
  [104] pushzero ................................ <0>
  [105] eq
  [106] jmpifz [127] ............................ (case) 0:
  [109] getprop 1254 ............................ <pScreenLoc>
  [112] pushint8 17 ............................. <17>
  [114] inv ..................................... <-17>
  [115] pushint8 18 ............................. <18>
  [117] pushint16 2000 .......................... <2000>
  [120] pusharglist 3 ........................... <[-17, 18, 2000]>
  [122] pushlist ................................ <[-17, 18, 2000]>
  [123] add ..................................... <pScreenLoc + [-17, 18, 2000]>
  [124] setprop 1254 ............................ pScreenLoc = pScreenLoc + [-17, 18, 2000]
  [127] pop 1 ................................... end case
  [129] jmp [199]
  [132] getprop 1251 ............................ <pFlipList>
  [135] getprop 28 .............................. <pDirection>
  [137] pushint8 1 .............................. <1>
  [139] add ..................................... <pDirection + 1>
  [140] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [142] objcall 34 .............................. <pFlipList[pDirection + 1]>
  [144] peek 0 .................................. case pFlipList[pDirection + 1] of
  [146] pushint8 2 .............................. <2>
  [148] eq
  [149] jmpifz [172] ............................ (case) 2:
  [152] getprop 1254 ............................ <pScreenLoc>
  [155] pushint8 10 ............................. <10>
  [157] pushint8 30 ............................. <30>
  [159] pushint16 2000 .......................... <2000>
  [162] pusharglist 3 ........................... <[10, 30, 2000]>
  [164] pushlist ................................ <[10, 30, 2000]>
  [165] add ..................................... <pScreenLoc + [10, 30, 2000]>
  [166] setprop 1254 ............................ pScreenLoc = pScreenLoc + [10, 30, 2000]
  [169] jmp [197]
  [172] peek 0
  [174] pushzero ................................ <0>
  [175] eq
  [176] jmpifz [197] ............................ (case) 0:
  [179] getprop 1254 ............................ <pScreenLoc>
  [182] pushint8 47 ............................. <47>
  [184] inv ..................................... <-47>
  [185] pushint8 32 ............................. <32>
  [187] pushint16 2000 .......................... <2000>
  [190] pusharglist 3 ........................... <[-47, 32, 2000]>
  [192] pushlist ................................ <[-47, 32, 2000]>
  [193] add ..................................... <pScreenLoc + [-47, 32, 2000]>
  [194] setprop 1254 ............................ pScreenLoc = pScreenLoc + [-47, 32, 2000]
  [197] pop 1 ................................... end case
  [199] getprop 50 .............................. <pXFactor>
  [201] pushint8 32 ............................. <32>
  [203] gt ...................................... <pXFactor > 32>
  [204] jmpifz [223] ............................ if pXFactor > 32 then / else
  [207] pushint8 30 ............................. <30>
  [209] pushint8 10 ............................. <10>
  [211] inv ..................................... <-10>
  [212] pusharglist 2 ........................... <30, -10>
  [214] extcall 375 ............................. <point(30, -10)>
  [217] setprop 1252 ............................ pLocFix = point(30, -10)
  [220] jmp [236]
  [223] pushint8 35 ............................. <35>
  [225] pushint8 5 .............................. <5>
  [227] inv ..................................... <-5>
  [228] pusharglist 2 ........................... <35, -5>
  [230] extcall 375 ............................. <point(35, -5)>
  [233] setprop 1252 ............................ pLocFix = point(35, -5)
  [236] pushsymb 1354 ........................... <#layDown>
  [239] getprop 1249 ............................ <pPartList>
  [242] pusharglistnoret 2 ...................... <#layDown, pPartList>
  [244] extcall 281 ............................. call(#layDown, pPartList)
  [247] getprop 28 .............................. <pDirection>
  [249] pushzero ................................ <0>
  [250] eq ...................................... <pDirection = 0>
  [251] jmpifz [263] ............................ if pDirection = 0 then
  [254] pushint8 4 .............................. <4>
  [256] setprop 28 .............................. pDirection = 4
  [258] pushint8 4 .............................. <4>
  [260] setprop 1300 ............................ pHeadDir = 4
  [263] pushsymb 1306 ........................... <#defineDir>
  [266] getprop 1249 ............................ <pPartList>
  [269] getprop 28 .............................. <pDirection>
  [271] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [273] extcall 281 ............................. call(#defineDir, pPartList, pDirection)
  [276] ret
end

on action_carryd me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setlocal 0 .............................. tItem = tProps.word[2]
  [ 12] getlocal 0 .............................. <tItem>
  [ 14] pusharglist 1 ........................... <tItem>
  [ 16] extcall 480 ............................. <value(tItem)>
  [ 19] pushzero ................................ <0>
  [ 20] gt ...................................... <value(tItem) > 0>
  [ 21] jmpifz [130] ............................ if value(tItem) > 0 then / else
  [ 24] getlocal 0 .............................. <tItem>
  [ 26] setlocal 1 .............................. tCarrying = tItem
  [ 28] pushcons 52 ............................. <"handitem.right.">
  [ 30] getlocal 1 .............................. <tCarrying>
  [ 32] joinstr ................................. <"handitem.right." & tCarrying>
  [ 33] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 35] extcall 331 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 38] jmpifz [ 57] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 41] pushcons 52 ............................. <"handitem.right.">
  [ 43] getlocal 1 .............................. <tCarrying>
  [ 45] joinstr ................................. <"handitem.right." & tCarrying>
  [ 46] pushcons 35 ............................. <"001">
  [ 48] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 50] extcall 232 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 52] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 54] jmp [ 61]
  [ 57] pushcons 35 ............................. <"001">
  [ 59] setlocal 2 .............................. tCarryItm = "001"
  [ 61] pushsymb 1355 ........................... <#doHandWorkRight>
  [ 64] getprop 1249 ............................ <pPartList>
  [ 67] pushcons 53 ............................. <"crr">
  [ 69] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 71] extcall 281 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 74] getprop 1249 ............................ <pPartList>
  [ 77] getprop 1250 ............................ <pPartIndex>
  [ 80] pushcons 43 ............................. <"ri">
  [ 82] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 84] objcall 34 .............................. <pPartIndex["ri"]>
  [ 86] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 88] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [ 90] getlocal 2 .............................. <tCarryItm>
  [ 92] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 94] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [ 97] pushcons 54 ............................. <"handitem">
  [ 99] getlocal 1 .............................. <tCarrying>
  [101] joinstr ................................. <"handitem" & tCarrying>
  [102] pusharglist 1 ........................... <"handitem" & tCarrying>
  [104] extcall 1356 ............................ <textExists("handitem" & tCarrying)>
  [107] jmpifz [127] ............................ if textExists("handitem" & tCarrying) then
  [110] pushcons 54 ............................. <"handitem">
  [112] getlocal 1 .............................. <tCarrying>
  [114] joinstr ................................. <"handitem" & tCarrying>
  [115] pushcons 54 ............................. <"handitem">
  [117] getlocal 1 .............................. <tCarrying>
  [119] joinstr ................................. <"handitem" & tCarrying>
  [120] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [122] extcall 55 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [124] setprop 1268 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [127] jmp [209]
  [130] pushsymb 1357 ........................... <#room_component>
  [133] pusharglist 1 ........................... <#room_component>
  [135] extcall 130 ............................. <getObject(#room_component)>
  [137] pusharglist 1 ........................... <getObject(#room_component)>
  [139] objcall 353 ............................. <getObject(#room_component).getRoomID()>
  [142] pushcons 55 ............................. <"private">
  [144] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [145] jmpifz [209] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [148] getparam 1 .............................. <tProps>
  [150] pushsymb 100 ............................ <#word>
  [152] pushint8 2 .............................. <2>
  [154] getparam 1 .............................. <tProps>
  [156] pushsymb 100 ............................ <#word>
  [158] pusharglist 2 ........................... <tProps, #word>
  [160] objcall 33 .............................. <tProps.word.count>
  [162] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [164] objcall 68 .............................. <tProps.word[2..tProps.word.count]>
  [166] setprop 1268 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [169] pushcons 35 ............................. <"001">
  [171] setlocal 2 .............................. tCarryItm = "001"
  [173] pushsymb 1355 ........................... <#doHandWorkRight>
  [176] getprop 1249 ............................ <pPartList>
  [179] pushcons 53 ............................. <"crr">
  [181] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [183] extcall 281 ............................. call(#doHandWorkRight, pPartList, "crr")
  [186] getprop 1249 ............................ <pPartList>
  [189] getprop 1250 ............................ <pPartIndex>
  [192] pushcons 43 ............................. <"ri">
  [194] pusharglist 2 ........................... <pPartIndex, "ri">
  [196] objcall 34 .............................. <pPartIndex["ri"]>
  [198] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [200] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [202] getlocal 2 .............................. <tCarryItm>
  [204] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [206] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [209] ret
end

on action_cri me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setlocal 0 .............................. tItem = tProps.word[2]
  [ 12] getlocal 0 .............................. <tItem>
  [ 14] pusharglist 1 ........................... <tItem>
  [ 16] extcall 480 ............................. <value(tItem)>
  [ 19] pusharglist 1 ........................... <value(tItem)>
  [ 21] extcall 432 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [133] ............................ if integerp(value(tItem)) then / else
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 52 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 331 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 56 ............................. <"075">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "075">
  [ 53] extcall 232 ............................. <getVariable("handitem.right." & tCarrying, "075")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "075")
  [ 57] jmp [ 64]
  [ 60] pushcons 56 ............................. <"075">
  [ 62] setlocal 2 .............................. tCarryItm = "075"
  [ 64] pushsymb 1355 ........................... <#doHandWorkRight>
  [ 67] getprop 1249 ............................ <pPartList>
  [ 70] pushcons 53 ............................. <"crr">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 74] extcall 281 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 77] getprop 1249 ............................ <pPartList>
  [ 80] getprop 1250 ............................ <pPartIndex>
  [ 83] pushcons 43 ............................. <"ri">
  [ 85] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 87] objcall 34 .............................. <pPartIndex["ri"]>
  [ 89] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 91] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [ 93] getlocal 2 .............................. <tCarryItm>
  [ 95] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 97] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [100] pushcons 54 ............................. <"handitem">
  [102] getlocal 1 .............................. <tCarrying>
  [104] joinstr ................................. <"handitem" & tCarrying>
  [105] pusharglist 1 ........................... <"handitem" & tCarrying>
  [107] extcall 1356 ............................ <textExists("handitem" & tCarrying)>
  [110] jmpifz [130] ............................ if textExists("handitem" & tCarrying) then
  [113] pushcons 54 ............................. <"handitem">
  [115] getlocal 1 .............................. <tCarrying>
  [117] joinstr ................................. <"handitem" & tCarrying>
  [118] pushcons 54 ............................. <"handitem">
  [120] getlocal 1 .............................. <tCarrying>
  [122] joinstr ................................. <"handitem" & tCarrying>
  [123] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [125] extcall 55 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [127] setprop 1268 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [130] jmp [212]
  [133] pushsymb 1357 ........................... <#room_component>
  [136] pusharglist 1 ........................... <#room_component>
  [138] extcall 130 ............................. <getObject(#room_component)>
  [140] pusharglist 1 ........................... <getObject(#room_component)>
  [142] objcall 353 ............................. <getObject(#room_component).getRoomID()>
  [145] pushcons 55 ............................. <"private">
  [147] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [148] jmpifz [212] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [151] getparam 1 .............................. <tProps>
  [153] pushsymb 100 ............................ <#word>
  [155] pushint8 2 .............................. <2>
  [157] getparam 1 .............................. <tProps>
  [159] pushsymb 100 ............................ <#word>
  [161] pusharglist 2 ........................... <tProps, #word>
  [163] objcall 33 .............................. <tProps.word.count>
  [165] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [167] objcall 68 .............................. <tProps.word[2..tProps.word.count]>
  [169] setprop 1268 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [172] pushcons 35 ............................. <"001">
  [174] setlocal 2 .............................. tCarryItm = "001"
  [176] pushsymb 1355 ........................... <#doHandWorkRight>
  [179] getprop 1249 ............................ <pPartList>
  [182] pushcons 53 ............................. <"crr">
  [184] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [186] extcall 281 ............................. call(#doHandWorkRight, pPartList, "crr")
  [189] getprop 1249 ............................ <pPartList>
  [192] getprop 1250 ............................ <pPartIndex>
  [195] pushcons 43 ............................. <"ri">
  [197] pusharglist 2 ........................... <pPartIndex, "ri">
  [199] objcall 34 .............................. <pPartIndex["ri"]>
  [201] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [203] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [205] getlocal 2 .............................. <tCarryItm>
  [207] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [209] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [212] ret
end

on action_usei me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setlocal 0 .............................. tItem = tProps.word[2]
  [ 12] getlocal 0 .............................. <tItem>
  [ 14] pusharglist 1 ........................... <tItem>
  [ 16] extcall 480 ............................. <value(tItem)>
  [ 19] pusharglist 1 ........................... <value(tItem)>
  [ 21] extcall 432 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [133] ............................ if integerp(value(tItem)) then / else
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 52 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 331 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 232 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1356 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 55 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1268 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1355 ........................... <#doHandWorkRight>
  [ 97] getprop 1249 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 281 ............................. call(#doHandWorkRight, pPartList, "drk")
  [107] getprop 1249 ............................ <pPartList>
  [110] getprop 1250 ............................ <pPartIndex>
  [113] pushcons 43 ............................. <"ri">
  [115] pusharglist 2 ........................... <pPartIndex, "ri">
  [117] objcall 34 .............................. <pPartIndex["ri"]>
  [119] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [121] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [123] getlocal 2 .............................. <tCarryItm>
  [125] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [127] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [130] jmp [212]
  [133] pushsymb 1357 ........................... <#room_component>
  [136] pusharglist 1 ........................... <#room_component>
  [138] extcall 130 ............................. <getObject(#room_component)>
  [140] pusharglist 1 ........................... <getObject(#room_component)>
  [142] objcall 353 ............................. <getObject(#room_component).getRoomID()>
  [145] pushcons 55 ............................. <"private">
  [147] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [148] jmpifz [212] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [151] getparam 1 .............................. <tProps>
  [153] pushsymb 100 ............................ <#word>
  [155] pushint8 2 .............................. <2>
  [157] getparam 1 .............................. <tProps>
  [159] pushsymb 100 ............................ <#word>
  [161] pusharglist 2 ........................... <tProps, #word>
  [163] objcall 33 .............................. <tProps.word.count>
  [165] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [167] objcall 68 .............................. <tProps.word[2..tProps.word.count]>
  [169] setprop 1268 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [172] pushcons 35 ............................. <"001">
  [174] setlocal 2 .............................. tCarryItm = "001"
  [176] pushsymb 1355 ........................... <#doHandWorkRight>
  [179] getprop 1249 ............................ <pPartList>
  [182] pushcons 44 ............................. <"drk">
  [184] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [186] extcall 281 ............................. call(#doHandWorkRight, pPartList, "drk")
  [189] getprop 1249 ............................ <pPartList>
  [192] getprop 1250 ............................ <pPartIndex>
  [195] pushcons 43 ............................. <"ri">
  [197] pusharglist 2 ........................... <pPartIndex, "ri">
  [199] objcall 34 .............................. <pPartIndex["ri"]>
  [201] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [203] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [205] getlocal 2 .............................. <tCarryItm>
  [207] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [209] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [212] ret
end

on action_drink me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setlocal 0 .............................. tItem = tProps.word[2]
  [ 12] getlocal 0 .............................. <tItem>
  [ 14] pusharglist 1 ........................... <tItem>
  [ 16] extcall 480 ............................. <value(tItem)>
  [ 19] pusharglist 1 ........................... <value(tItem)>
  [ 21] extcall 432 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [133] ............................ if integerp(value(tItem)) then / else
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 52 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 331 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 232 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1356 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 55 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1268 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1355 ........................... <#doHandWorkRight>
  [ 97] getprop 1249 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 281 ............................. call(#doHandWorkRight, pPartList, "drk")
  [107] getprop 1249 ............................ <pPartList>
  [110] getprop 1250 ............................ <pPartIndex>
  [113] pushcons 43 ............................. <"ri">
  [115] pusharglist 2 ........................... <pPartIndex, "ri">
  [117] objcall 34 .............................. <pPartIndex["ri"]>
  [119] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [121] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [123] getlocal 2 .............................. <tCarryItm>
  [125] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [127] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [130] jmp [212]
  [133] pushsymb 1357 ........................... <#room_component>
  [136] pusharglist 1 ........................... <#room_component>
  [138] extcall 130 ............................. <getObject(#room_component)>
  [140] pusharglist 1 ........................... <getObject(#room_component)>
  [142] objcall 353 ............................. <getObject(#room_component).getRoomID()>
  [145] pushcons 55 ............................. <"private">
  [147] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [148] jmpifz [212] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [151] getparam 1 .............................. <tProps>
  [153] pushsymb 100 ............................ <#word>
  [155] pushint8 2 .............................. <2>
  [157] getparam 1 .............................. <tProps>
  [159] pushsymb 100 ............................ <#word>
  [161] pusharglist 2 ........................... <tProps, #word>
  [163] objcall 33 .............................. <tProps.word.count>
  [165] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [167] objcall 68 .............................. <tProps.word[2..tProps.word.count]>
  [169] setprop 1268 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [172] pushcons 35 ............................. <"001">
  [174] setlocal 2 .............................. tCarryItm = "001"
  [176] pushsymb 1355 ........................... <#doHandWorkRight>
  [179] getprop 1249 ............................ <pPartList>
  [182] pushcons 44 ............................. <"drk">
  [184] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [186] extcall 281 ............................. call(#doHandWorkRight, pPartList, "drk")
  [189] getprop 1249 ............................ <pPartList>
  [192] getprop 1250 ............................ <pPartIndex>
  [195] pushcons 43 ............................. <"ri">
  [197] pusharglist 2 ........................... <pPartIndex, "ri">
  [199] objcall 34 .............................. <pPartIndex["ri"]>
  [201] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [203] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [205] getlocal 2 .............................. <tCarryItm>
  [207] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [209] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [212] ret
end

on action_carryf me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setlocal 0 .............................. tItem = tProps.word[2]
  [ 12] getlocal 0 .............................. <tItem>
  [ 14] pusharglist 1 ........................... <tItem>
  [ 16] extcall 480 ............................. <value(tItem)>
  [ 19] pusharglist 1 ........................... <value(tItem)>
  [ 21] extcall 432 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [130] ............................ if integerp(value(tItem)) then / else
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 52 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 331 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 232 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushsymb 1355 ........................... <#doHandWorkRight>
  [ 67] getprop 1249 ............................ <pPartList>
  [ 70] pushcons 53 ............................. <"crr">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 74] extcall 281 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 77] getprop 1249 ............................ <pPartList>
  [ 80] getprop 1250 ............................ <pPartIndex>
  [ 83] pushcons 43 ............................. <"ri">
  [ 85] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 87] objcall 34 .............................. <pPartIndex["ri"]>
  [ 89] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 91] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [ 93] getlocal 2 .............................. <tCarryItm>
  [ 95] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 97] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [100] pushcons 54 ............................. <"handitem">
  [102] getlocal 1 .............................. <tCarrying>
  [104] joinstr ................................. <"handitem" & tCarrying>
  [105] pusharglist 1 ........................... <"handitem" & tCarrying>
  [107] extcall 1356 ............................ <textExists("handitem" & tCarrying)>
  [110] jmpifz [127] ............................ if textExists("handitem" & tCarrying) then
  [113] pushcons 54 ............................. <"handitem">
  [115] getlocal 1 .............................. <tCarrying>
  [117] joinstr ................................. <"handitem" & tCarrying>
  [118] getlocal 0 .............................. <tItem>
  [120] pusharglist 2 ........................... <"handitem" & tCarrying, tItem>
  [122] extcall 55 .............................. <getText("handitem" & tCarrying, tItem)>
  [124] setprop 1268 ............................ pCarrying = getText("handitem" & tCarrying, tItem)
  [127] jmp [209]
  [130] pushsymb 1357 ........................... <#room_component>
  [133] pusharglist 1 ........................... <#room_component>
  [135] extcall 130 ............................. <getObject(#room_component)>
  [137] pusharglist 1 ........................... <getObject(#room_component)>
  [139] objcall 353 ............................. <getObject(#room_component).getRoomID()>
  [142] pushcons 55 ............................. <"private">
  [144] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [145] jmpifz [209] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [148] getparam 1 .............................. <tProps>
  [150] pushsymb 100 ............................ <#word>
  [152] pushint8 2 .............................. <2>
  [154] getparam 1 .............................. <tProps>
  [156] pushsymb 100 ............................ <#word>
  [158] pusharglist 2 ........................... <tProps, #word>
  [160] objcall 33 .............................. <tProps.word.count>
  [162] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [164] objcall 68 .............................. <tProps.word[2..tProps.word.count]>
  [166] setprop 1268 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [169] pushcons 57 ............................. <"004">
  [171] setlocal 2 .............................. tCarryItm = "004"
  [173] pushsymb 1355 ........................... <#doHandWorkRight>
  [176] getprop 1249 ............................ <pPartList>
  [179] pushcons 53 ............................. <"crr">
  [181] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [183] extcall 281 ............................. call(#doHandWorkRight, pPartList, "crr")
  [186] getprop 1249 ............................ <pPartList>
  [189] getprop 1250 ............................ <pPartIndex>
  [192] pushcons 43 ............................. <"ri">
  [194] pusharglist 2 ........................... <pPartIndex, "ri">
  [196] objcall 34 .............................. <pPartIndex["ri"]>
  [198] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [200] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [202] getlocal 2 .............................. <tCarryItm>
  [204] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [206] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [209] ret
end

on action_eat me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setlocal 0 .............................. tItem = tProps.word[2]
  [ 12] getlocal 0 .............................. <tItem>
  [ 14] pusharglist 1 ........................... <tItem>
  [ 16] extcall 480 ............................. <value(tItem)>
  [ 19] pusharglist 1 ........................... <value(tItem)>
  [ 21] extcall 432 ............................. <integerp(value(tItem))>
  [ 24] jmpifz [133] ............................ if integerp(value(tItem)) then / else
  [ 27] getlocal 0 .............................. <tItem>
  [ 29] setlocal 1 .............................. tCarrying = tItem
  [ 31] pushcons 52 ............................. <"handitem.right.">
  [ 33] getlocal 1 .............................. <tCarrying>
  [ 35] joinstr ................................. <"handitem.right." & tCarrying>
  [ 36] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 38] extcall 331 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 232 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1356 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 55 .............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1268 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1355 ........................... <#doHandWorkRight>
  [ 97] getprop 1249 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 281 ............................. call(#doHandWorkRight, pPartList, "drk")
  [107] getprop 1249 ............................ <pPartList>
  [110] getprop 1250 ............................ <pPartIndex>
  [113] pushcons 43 ............................. <"ri">
  [115] pusharglist 2 ........................... <pPartIndex, "ri">
  [117] objcall 34 .............................. <pPartIndex["ri"]>
  [119] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [121] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [123] getlocal 2 .............................. <tCarryItm>
  [125] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [127] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [130] jmp [212]
  [133] pushsymb 1357 ........................... <#room_component>
  [136] pusharglist 1 ........................... <#room_component>
  [138] extcall 130 ............................. <getObject(#room_component)>
  [140] pusharglist 1 ........................... <getObject(#room_component)>
  [142] objcall 353 ............................. <getObject(#room_component).getRoomID()>
  [145] pushcons 55 ............................. <"private">
  [147] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [148] jmpifz [212] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [151] getparam 1 .............................. <tProps>
  [153] pushsymb 100 ............................ <#word>
  [155] pushint8 2 .............................. <2>
  [157] getparam 1 .............................. <tProps>
  [159] pushsymb 100 ............................ <#word>
  [161] pusharglist 2 ........................... <tProps, #word>
  [163] objcall 33 .............................. <tProps.word.count>
  [165] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [167] objcall 68 .............................. <tProps.word[2..tProps.word.count]>
  [169] setprop 1268 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [172] pushcons 57 ............................. <"004">
  [174] setlocal 2 .............................. tCarryItm = "004"
  [176] pushsymb 1355 ........................... <#doHandWorkRight>
  [179] getprop 1249 ............................ <pPartList>
  [182] pushcons 44 ............................. <"drk">
  [184] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [186] extcall 281 ............................. call(#doHandWorkRight, pPartList, "drk")
  [189] getprop 1249 ............................ <pPartList>
  [192] getprop 1250 ............................ <pPartIndex>
  [195] pushcons 43 ............................. <"ri">
  [197] pusharglist 2 ........................... <pPartIndex, "ri">
  [199] objcall 34 .............................. <pPartIndex["ri"]>
  [201] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [203] objcall 34 .............................. <pPartList[pPartIndex["ri"]]>
  [205] getlocal 2 .............................. <tCarryItm>
  [207] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [209] objcall 1308 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [212] ret
end

on action_talk me, tProps
  [  0] getprop 1265 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] getprop 50 .............................. <pXFactor>
  [  8] pushint8 33 ............................. <33>
  [ 10] lt ...................................... <pXFactor < 33>
  [ 11] and ..................................... <(pMainAction = "lay") and (pXFactor < 33)>
  [ 12] jmpifz [ 20] ............................ if (pMainAction = "lay") and (pXFactor < 33) then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 31 .............................. return 0
  [ 20] pushint8 1 .............................. <1>
  [ 22] setprop 1267 ............................ pTalking = 1
  [ 25] ret
end

on action_gest me, tProps
  [  0] getprop 1295 ............................ <pPeopleSize>
  [  3] pushcons 30 ............................. <"sh">
  [  5] eq ...................................... <pPeopleSize = "sh">
  [  6] jmpifz [ 13] ............................ if pPeopleSize = "sh" then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 31 .............................. return 
  [ 13] pushcons 15 ............................. <"ey">
  [ 15] pushcons 16 ............................. <"fc">
  [ 17] pusharglist 2 ........................... <["ey", "fc"]>
  [ 19] pushlist ................................ <["ey", "fc"]>
  [ 20] setlocal 0 .............................. tList = ["ey", "fc"]
  [ 22] getparam 1 .............................. <tProps>
  [ 24] pushsymb 100 ............................ <#word>
  [ 26] pushint8 2 .............................. <2>
  [ 28] pusharglist 3 ........................... <tProps, #word, 2>
  [ 30] objcall 68 .............................. <tProps.word[2]>
  [ 32] setlocal 1 .............................. tGesture = tProps.word[2]
  [ 34] getlocal 1 .............................. <tGesture>
  [ 36] pushcons 58 ............................. <"spr">
  [ 38] eq ...................................... <tGesture = "spr">
  [ 39] jmpifz [ 46] ............................ if tGesture = "spr" then
  [ 42] pushcons 59 ............................. <"srp">
  [ 44] setlocal 1 .............................. tGesture = "srp"
  [ 46] getprop 1265 ............................ <pMainAction>
  [ 49] pushcons 12 ............................. <"lay">
  [ 51] eq ...................................... <pMainAction = "lay">
  [ 52] jmpifz [ 90] ............................ if pMainAction = "lay" then / else
  [ 55] pushcons 60 ............................. <"l">
  [ 57] getlocal 1 .............................. <tGesture>
  [ 59] pushsymb 66 ............................. <#char>
  [ 61] pushint8 1 .............................. <1>
  [ 63] pushint8 2 .............................. <2>
  [ 65] pusharglist 4 ........................... <tGesture, #char, 1, 2>
  [ 67] objcall 68 .............................. <tGesture.char[1..2]>
  [ 69] joinstr ................................. <"l" & tGesture.char[1..2]>
  [ 70] setlocal 1 .............................. tGesture = "l" & tGesture.char[1..2]
  [ 72] pushsymb 1320 ........................... <#defineActMultiple>
  [ 75] getprop 1249 ............................ <pPartList>
  [ 78] getlocal 1 .............................. <tGesture>
  [ 80] getlocal 0 .............................. <tList>
  [ 82] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, tGesture, tList>
  [ 84] extcall 281 ............................. call(#defineActMultiple, pPartList, tGesture, tList)
  [ 87] jmp [159]
  [ 90] pushsymb 1320 ........................... <#defineActMultiple>
  [ 93] getprop 1249 ............................ <pPartList>
  [ 96] getlocal 1 .............................. <tGesture>
  [ 98] getlocal 0 .............................. <tList>
  [100] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, tGesture, tList>
  [102] extcall 281 ............................. call(#defineActMultiple, pPartList, tGesture, tList)
  [105] getlocal 1 .............................. <tGesture>
  [107] pushcons 61 ............................. <"ohd">
  [109] eq ...................................... <tGesture = "ohd">
  [110] jmpifz [159] ............................ if tGesture = "ohd" then
  [113] getprop 1249 ............................ <pPartList>
  [116] getprop 1250 ............................ <pPartIndex>
  [119] pushcons 13 ............................. <"hd">
  [121] pusharglist 2 ........................... <pPartIndex, "hd">
  [123] objcall 34 .............................. <pPartIndex["hd"]>
  [125] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [127] objcall 34 .............................. <pPartList[pPartIndex["hd"]]>
  [129] getlocal 1 .............................. <tGesture>
  [131] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], tGesture>
  [133] objcall 1360 ............................ pPartList[pPartIndex["hd"]].defineAct(tGesture)
  [136] getprop 1249 ............................ <pPartList>
  [139] getprop 1250 ............................ <pPartIndex>
  [142] pushcons 14 ............................. <"hr">
  [144] pusharglist 2 ........................... <pPartIndex, "hr">
  [146] objcall 34 .............................. <pPartIndex["hr"]>
  [148] pusharglist 2 ........................... <pPartList, pPartIndex["hr"]>
  [150] objcall 34 .............................. <pPartList[pPartIndex["hr"]]>
  [152] getlocal 1 .............................. <tGesture>
  [154] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hr"]], tGesture>
  [156] objcall 1360 ............................ pPartList[pPartIndex["hr"]].defineAct(tGesture)
  [159] ret
end

on action_wave me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1271 ............................ pWaving = 1
  [  5] ret
end

on action_dance me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setlocal 0 .............................. tStyleNum = tProps.word[2]
  [ 12] getlocal 0 .............................. <tStyleNum>
  [ 14] pusharglist 1 ........................... <tStyleNum>
  [ 16] extcall 102 ............................. <integer(tStyleNum)>
  [ 18] setprop 1270 ............................ pDancing = integer(tStyleNum)
  [ 21] getprop 1270 ............................ <pDancing>
  [ 24] pusharglist 0 ........................... <>
  [ 26] extcall 30 .............................. <VOID>
  [ 28] eq ...................................... <pDancing = VOID>
  [ 29] jmpifz [ 37] ............................ if pDancing = VOID then
  [ 32] pushint8 1 .............................. <1>
  [ 34] setprop 1270 ............................ pDancing = 1
  [ 37] pushcons 62 ............................. <"dance.">
  [ 39] getprop 1270 ............................ <pDancing>
  [ 42] joinstr ................................. <"dance." & pDancing>
  [ 43] setlocal 1 .............................. tStyle = "dance." & pDancing
  [ 45] getparam 0 .............................. <me>
  [ 47] getlocal 1 .............................. <tStyle>
  [ 49] pusharglistnoret 2 ...................... <me, tStyle>
  [ 51] objcall 1222 ............................ me.startAnimation(tStyle)
  [ 54] ret
end

on action_ohd me
  [  0] pushsymb 1320 ........................... <#defineActMultiple>
  [  3] getprop 1249 ............................ <pPartList>
  [  6] pushcons 61 ............................. <"ohd">
  [  8] pushcons 13 ............................. <"hd">
  [ 10] pushcons 16 ............................. <"fc">
  [ 12] pushcons 15 ............................. <"ey">
  [ 14] pushcons 14 ............................. <"hr">
  [ 16] pusharglist 4 ........................... <["hd", "fc", "ey", "hr"]>
  [ 18] pushlist ................................ <["hd", "fc", "ey", "hr"]>
  [ 19] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "ohd", ["hd", "fc", "ey", "hr"]>
  [ 21] extcall 281 ............................. call(#defineActMultiple, pPartList, "ohd", ["hd", "fc", "ey", "hr"])
  [ 24] pushsymb 1355 ........................... <#doHandWorkRight>
  [ 27] getprop 1249 ............................ <pPartList>
  [ 30] pushcons 61 ............................. <"ohd">
  [ 32] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "ohd">
  [ 34] extcall 281 ............................. call(#doHandWorkRight, pPartList, "ohd")
  [ 37] ret
end

on action_trd me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1272 ............................ pTrading = 1
  [  5] ret
end

on action_sleep me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1269 ............................ pSleeping = 1
  [  5] ret
end

on action_flatctrl me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setprop 1273 ............................ pCtrlType = tProps.word[2]
  [ 13] ret
end

on action_mod me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 100 ............................ <#word>
  [  4] pushint8 2 .............................. <2>
  [  6] pusharglist 3 ........................... <tProps, #word, 2>
  [  8] objcall 68 .............................. <tProps.word[2]>
  [ 10] setprop 1279 ............................ pModState = tProps.word[2]
  [ 13] ret
end

on action_sign me, props
  [  0] pushcons 63 ............................. <"sign">
  [  2] getparam 1 .............................. <props>
  [  4] pushsymb 100 ............................ <#word>
  [  6] pushint8 2 .............................. <2>
  [  8] pusharglist 3 ........................... <props, #word, 2>
  [ 10] objcall 68 .............................. <props.word[2]>
  [ 12] joinstr ................................. <"sign" & props.word[2]>
  [ 13] setlocal 0 .............................. tSignMem = "sign" & props.word[2]
  [ 15] getlocal 0 .............................. <tSignMem>
  [ 17] pusharglist 1 ........................... <tSignMem>
  [ 19] extcall 65 .............................. <getmemnum(tSignMem)>
  [ 21] pushzero ................................ <0>
  [ 22] eq ...................................... <getmemnum(tSignMem) = 0>
  [ 23] jmpifz [ 31] ............................ if getmemnum(tSignMem) = 0 then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 31 .............................. return 0
  [ 31] pushsymb 1325 ........................... <#doHandWorkLeft>
  [ 34] getparam 0 .............................. <me>
  [ 36] getobjprop 1249 ......................... <me.pPartList>
  [ 39] pushcons 64 ............................. <"sig">
  [ 41] pusharglistnoret 3 ...................... <#doHandWorkLeft, me.pPartList, "sig">
  [ 43] extcall 281 ............................. call(#doHandWorkLeft, me.pPartList, "sig")
  [ 46] pushcons 65 ............................. <"SIGN_EXTRA">
  [ 48] setlocal 1 .............................. tSignObjID = "SIGN_EXTRA"
  [ 50] getprop 1280 ............................ <pExtraObjs>
  [ 53] getlocal 1 .............................. <tSignObjID>
  [ 55] pusharglist 2 ........................... <pExtraObjs, tSignObjID>
  [ 57] objcall 34 .............................. <pExtraObjs[tSignObjID]>
  [ 59] pusharglist 1 ........................... <pExtraObjs[tSignObjID]>
  [ 61] extcall 120 ............................. <voidp(pExtraObjs[tSignObjID])>
  [ 63] jmpifz [ 86] ............................ if voidp(pExtraObjs[tSignObjID]) then
  [ 66] getprop 1280 ............................ <pExtraObjs>
  [ 69] getlocal 1 .............................. <tSignObjID>
  [ 71] pushsymb 262 ............................ <#temp>
  [ 74] pushcons 66 ............................. <"HumanExtra Sign Class">
  [ 76] pusharglist 2 ........................... <#temp, "HumanExtra Sign Class">
  [ 78] extcall 260 ............................. <createObject(#temp, "HumanExtra Sign Class")>
  [ 81] pusharglistnoret 3 ...................... <pExtraObjs, tSignObjID, createObject(#temp, "HumanExtra Sign Class")>
  [ 83] objcall 744 ............................. pExtraObjs.addProp(tSignObjID, createObject(#temp, "HumanExtra Sign Class"))
  [ 86] pushsymb 1364 ........................... <#show_sign>
  [ 89] getprop 1280 ............................ <pExtraObjs>
  [ 92] pushcons 67 ............................. <"sprite">
  [ 94] getprop 404 ............................. <pSprite>
  [ 97] pushcons 68 ............................. <"direction">
  [ 99] getprop 28 .............................. <pDirection>
  [101] pushcons 69 ............................. <"signmember">
  [103] getlocal 0 .............................. <tSignMem>
  [105] pusharglist 6 ........................... <["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [107] pushproplist ............................ <["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [108] pusharglistnoret 3 ...................... <#show_sign, pExtraObjs, ["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [110] extcall 281 ............................. call(#show_sign, pExtraObjs, ["sprite": pSprite, "direction": pDirection, "signmember": tSignMem])
  [113] ret
end
