property pName, pClass, pCustom, pSex, pModState, pCtrlType, pBadge, pBuffer, pSprite, pMatteSpr, pMember, pShadowSpr, pShadowFix, pDefShadowMem, pPartList, pPartIndex, pFlipList, pUpdateRect, pDirection, pLastDir, pHeadDir, pLocX, pLocY, pLocH, pLocFix, pXFactor, pYFactor, pHFactor, pScreenLoc, pStartLScreen, pDestLScreen, pRestingHeight, pAnimCounter, pMoveStart, pMoveTime, pEyesClosed, pSync, pChanges, pAlphaColor, pCanvasSize, pColors, pPeopleSize, pMainAction, pMoving, pTalking, pCarrying, pSleeping, pDancing, pWaving, pTrading, pAnimating, pSwim, pCurrentAnim, pGeometry, pExtraObjs, pInfoStruct, pCorrectLocZ, pPartClass, pQueuesWithObj, pPreviousLoc, pBaseLocZ

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 1221 ............................ pName = EMPTY
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setprop 1222 ............................ pPartList = []
  [ 11] pusharglist 0 ........................... <[:]>
  [ 13] pushproplist ............................ <[:]>
  [ 14] setprop 1223 ............................ pPartIndex = [:]
  [ 17] pushzero ................................ <0>
  [ 18] pushint8 1 .............................. <1>
  [ 20] pushint8 2 .............................. <2>
  [ 22] pushint8 3 .............................. <3>
  [ 24] pushint8 2 .............................. <2>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pushzero ................................ <0>
  [ 29] pushint8 7 .............................. <7>
  [ 31] pusharglist 8 ........................... <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 33] pushlist ................................ <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 34] setprop 1224 ............................ pFlipList = [0, 1, 2, 3, 2, 1, 0, 7]
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pusharglist 2 ........................... <0, 0>
  [ 41] extcall 293 ............................. <point(0, 0)>
  [ 44] setprop 1225 ............................ pLocFix = point(0, 0)
  [ 47] pushzero ................................ <0>
  [ 48] pushzero ................................ <0>
  [ 49] pushzero ................................ <0>
  [ 50] pushzero ................................ <0>
  [ 51] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 53] extcall 322 ............................. <rect(0, 0, 0, 0)>
  [ 56] setprop 1226 ............................ pUpdateRect = rect(0, 0, 0, 0)
  [ 59] pushzero ................................ <0>
  [ 60] pushzero ................................ <0>
  [ 61] pushzero ................................ <0>
  [ 62] pusharglist 3 ........................... <[0, 0, 0]>
  [ 64] pushlist ................................ <[0, 0, 0]>
  [ 65] setprop 1227 ............................ pScreenLoc = [0, 0, 0]
  [ 68] pushzero ................................ <0>
  [ 69] pushzero ................................ <0>
  [ 70] pushzero ................................ <0>
  [ 71] pusharglist 3 ........................... <[0, 0, 0]>
  [ 73] pushlist ................................ <[0, 0, 0]>
  [ 74] setprop 1228 ............................ pStartLScreen = [0, 0, 0]
  [ 77] pushzero ................................ <0>
  [ 78] pushzero ................................ <0>
  [ 79] pushzero ................................ <0>
  [ 80] pusharglist 3 ........................... <[0, 0, 0]>
  [ 82] pushlist ................................ <[0, 0, 0]>
  [ 83] setprop 1229 ............................ pDestLScreen = [0, 0, 0]
  [ 86] pushzero ................................ <0>
  [ 87] pushzero ................................ <0>
  [ 88] pushzero ................................ <0>
  [ 89] pusharglist 3 ........................... <[0, 0, 0]>
  [ 91] pushlist ................................ <[0, 0, 0]>
  [ 92] setprop 1230 ............................ pPreviousLoc = [0, 0, 0]
  [ 95] pushfloat32 0.0 ......................... <0.0>
  [100] setprop 1231 ............................ pRestingHeight = 0.0
  [103] pushzero ................................ <0>
  [104] setprop 1232 ............................ pAnimCounter = 0
  [107] pushzero ................................ <0>
  [108] setprop 1233 ............................ pMoveStart = 0
  [111] pushint16 500 ........................... <500>
  [114] setprop 1234 ............................ pMoveTime = 500
  [117] pushzero ................................ <0>
  [118] setprop 1235 ............................ pEyesClosed = 0
  [121] pushint8 1 .............................. <1>
  [123] setprop 1236 ............................ pSync = 1
  [126] pushint8 1 .............................. <1>
  [128] setprop 1237 ............................ pChanges = 1
  [131] pushcons 1 .............................. <"std">
  [133] setprop 1238 ............................ pMainAction = "std"
  [136] pushzero ................................ <0>
  [137] setprop 1239 ............................ pMoving = 0
  [140] pushzero ................................ <0>
  [141] setprop 1240 ............................ pTalking = 0
  [144] pushzero ................................ <0>
  [145] setprop 1241 ............................ pCarrying = 0
  [148] pushzero ................................ <0>
  [149] setprop 1242 ............................ pSleeping = 0
  [152] pushzero ................................ <0>
  [153] setprop 1243 ............................ pDancing = 0
  [156] pushzero ................................ <0>
  [157] setprop 1244 ............................ pWaving = 0
  [160] pushzero ................................ <0>
  [161] setprop 1245 ............................ pTrading = 0
  [164] pushzero ................................ <0>
  [165] setprop 1246 ............................ pCtrlType = 0
  [168] pushzero ................................ <0>
  [169] setprop 1247 ............................ pAnimating = 0
  [172] pushzero ................................ <0>
  [173] setprop 1248 ............................ pSwim = 0
  [176] pusharglist 0 ........................... <>
  [178] extcall 992 ............................. <SPACE>
  [181] setprop 894 ............................. pBadge = SPACE
  [184] pushcons 0 .............................. <EMPTY>
  [186] setprop 1249 ............................ pCurrentAnim = EMPTY
  [189] pushint16 255 ........................... <255>
  [192] pushint16 255 ........................... <255>
  [195] pushint16 255 ........................... <255>
  [198] pusharglist 3 ........................... <255, 255, 255>
  [200] extcall 312 ............................. <rgb(255, 255, 255)>
  [203] setprop 1250 ............................ pAlphaColor = rgb(255, 255, 255)
  [206] pushint8 1 .............................. <1>
  [208] setprop 1236 ............................ pSync = 1
  [211] pusharglist 0 ........................... <[:]>
  [213] pushproplist ............................ <[:]>
  [214] setprop 1251 ............................ pColors = [:]
  [217] pushzero ................................ <0>
  [218] setprop 1252 ............................ pModState = 0
  [221] pusharglist 0 ........................... <[:]>
  [223] pushproplist ............................ <[:]>
  [224] setprop 1253 ............................ pExtraObjs = [:]
  [227] pushzero ................................ <0>
  [228] pusharglist 1 ........................... <0>
  [230] extcall 30 .............................. <member(0)>
  [232] setprop 1254 ............................ pDefShadowMem = member(0)
  [235] pusharglist 0 ........................... <[:]>
  [237] pushproplist ............................ <[:]>
  [238] setprop 1255 ............................ pInfoStruct = [:]
  [241] pushzero ................................ <0>
  [242] setprop 1256 ............................ pQueuesWithObj = 0
  [245] pushsymb 949 ............................ <#room>
  [248] pusharglist 1 ........................... <#room>
  [250] extcall 260 ............................. <getThread(#room)>
  [253] pusharglist 1 ........................... <getThread(#room)>
  [255] objcall 597 ............................. <getThread(#room).getInterface()>
  [258] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [260] objcall 69 .............................. <getThread(#room).getInterface().getGeometry()>
  [262] setprop 994 ............................. pGeometry = getThread(#room).getInterface().getGeometry()
  [265] getprop 994 ............................. <pGeometry>
  [268] getobjprop 977 .......................... <pGeometry.pXFactor>
  [271] setprop 977 ............................. pXFactor = pGeometry.pXFactor
  [274] getprop 994 ............................. <pGeometry>
  [277] getobjprop 978 .......................... <pGeometry.pYFactor>
  [280] setprop 978 ............................. pYFactor = pGeometry.pYFactor
  [283] getprop 994 ............................. <pGeometry>
  [286] getobjprop 979 .......................... <pGeometry.pHFactor>
  [289] setprop 979 ............................. pHFactor = pGeometry.pHFactor
  [292] pushzero ................................ <0>
  [293] setprop 1257 ............................ pCorrectLocZ = 0
  [296] pushsymb 949 ............................ <#room>
  [299] pusharglist 1 ........................... <#room>
  [301] extcall 260 ............................. <getThread(#room)>
  [304] pusharglist 1 ........................... <getThread(#room)>
  [306] objcall 207 ............................. <getThread(#room).getComponent()>
  [308] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [310] objcall 520 ............................. <getThread(#room).getComponent().getClassContainer()>
  [313] pushcons 2 .............................. <"bodypart">
  [315] pusharglist 2 ........................... <getThread(#room).getComponent().getClassContainer(), "bodypart">
  [317] objcall 234 ............................. <getThread(#room).getComponent().getClassContainer().get("bodypart")>
  [319] pusharglist 1 ........................... <getThread(#room).getComponent().getClassContainer().get("bodypart")>
  [321] extcall 411 ............................. <value(getThread(#room).getComponent().getClassContainer().get("bodypart"))>
  [324] setprop 1258 ............................ pPartClass = value(getThread(#room).getComponent().getClassContainer().get("bodypart"))
  [327] pushzero ................................ <0>
  [328] setprop 1259 ............................ pBaseLocZ = 0
  [331] pushint8 1 .............................. <1>
  [333] pusharglistnoret 1 ...................... <1>
  [335] extcall 21 .............................. return 1
  [337] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 159 ............................. <VOID>
  [  4] setprop 994 ............................. pGeometry = VOID
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] setprop 1222 ............................ pPartList = []
  [ 13] pusharglist 0 ........................... <[:]>
  [ 15] pushproplist ............................ <[:]>
  [ 16] setprop 1255 ............................ pInfoStruct = [:]
  [ 19] getprop 327 ............................. <pSprite>
  [ 22] getobjprop 18 ........................... <pSprite.spriteNum>
  [ 24] pusharglistnoret 1 ...................... <pSprite.spriteNum>
  [ 26] extcall 367 ............................. releaseSprite(pSprite.spriteNum)
  [ 29] getprop 1260 ............................ <pMatteSpr>
  [ 32] getobjprop 18 ........................... <pMatteSpr.spriteNum>
  [ 34] pusharglistnoret 1 ...................... <pMatteSpr.spriteNum>
  [ 36] extcall 367 ............................. releaseSprite(pMatteSpr.spriteNum)
  [ 39] getprop 1261 ............................ <pShadowSpr>
  [ 42] getobjprop 18 ........................... <pShadowSpr.spriteNum>
  [ 44] pusharglistnoret 1 ...................... <pShadowSpr.spriteNum>
  [ 46] extcall 367 ............................. releaseSprite(pShadowSpr.spriteNum)
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglist 1 ........................... <me>
  [ 53] objcall 1200 ............................ <me.getCanvasName()>
  [ 56] pusharglist 1 ........................... <me.getCanvasName()>
  [ 58] extcall 35 .............................. <memberExists(me.getCanvasName())>
  [ 60] jmpifz [ 75] ............................ if memberExists(me.getCanvasName()) then
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglist 1 ........................... <me>
  [ 67] objcall 1200 ............................ <me.getCanvasName()>
  [ 70] pusharglistnoret 1 ...................... <me.getCanvasName()>
  [ 72] extcall 1116 ............................ removeMember(me.getCanvasName())
  [ 75] pushsymb 43 ............................. <#deconstruct>
  [ 77] getprop 1253 ............................ <pExtraObjs>
  [ 80] pusharglistnoret 2 ...................... <#deconstruct, pExtraObjs>
  [ 82] extcall 178 ............................. call(#deconstruct, pExtraObjs)
  [ 84] pusharglist 0 ........................... <>
  [ 86] extcall 159 ............................. <VOID>
  [ 88] setprop 1253 ............................ pExtraObjs = VOID
  [ 91] pusharglist 0 ........................... <>
  [ 93] extcall 159 ............................. <VOID>
  [ 95] setprop 1261 ............................ pShadowSpr = VOID
  [ 98] pusharglist 0 ........................... <>
  [100] extcall 159 ............................. <VOID>
  [102] setprop 1260 ............................ pMatteSpr = VOID
  [105] pusharglist 0 ........................... <>
  [107] extcall 159 ............................. <VOID>
  [109] setprop 327 ............................. pSprite = VOID
  [112] pushint8 1 .............................. <1>
  [114] pusharglistnoret 1 ...................... <1>
  [116] extcall 21 .............................. return 1
  [118] ret
end

on define me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pusharglistnoret 2 ...................... <me, tdata>
  [  6] objcall 1184 ............................ me.setup(tdata)
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 1200 ............................ <me.getCanvasName()>
  [ 16] pusharglist 1 ........................... <me.getCanvasName()>
  [ 18] extcall 35 .............................. <memberExists(me.getCanvasName())>
  [ 20] not ..................................... <not memberExists(me.getCanvasName())>
  [ 21] jmpifz [ 39] ............................ if not memberExists(me.getCanvasName()) then
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 1200 ............................ <me.getCanvasName()>
  [ 31] pushsymb 321 ............................ <#bitmap>
  [ 34] pusharglistnoret 2 ...................... <me.getCanvasName(), #bitmap>
  [ 36] extcall 359 ............................. createMember(me.getCanvasName(), #bitmap)
  [ 39] getprop 1262 ............................ <pCanvasSize>
  [ 42] pushsymb 1263 ........................... <#std>
  [ 45] pusharglist 2 ........................... <pCanvasSize, #std>
  [ 47] objcall 9 ............................... <pCanvasSize[#std]>
  [ 49] setlocal 0 .............................. tSize = pCanvasSize[#std]
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 1200 ............................ <me.getCanvasName()>
  [ 58] pusharglist 1 ........................... <me.getCanvasName()>
  [ 60] extcall 37 .............................. <getmemnum(me.getCanvasName())>
  [ 62] pusharglist 1 ........................... <getmemnum(me.getCanvasName())>
  [ 64] extcall 30 .............................. <member(getmemnum(me.getCanvasName()))>
  [ 66] setprop 1264 ............................ pMember = member(getmemnum(me.getCanvasName()))
  [ 69] getprop 1264 ............................ <pMember>
  [ 72] getlocal 0 .............................. <tSize>
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglist 2 ........................... <tSize, 1>
  [ 78] objcall 9 ............................... <tSize[1]>
  [ 80] getlocal 0 .............................. <tSize>
  [ 82] pushint8 2 .............................. <2>
  [ 84] pusharglist 2 ........................... <tSize, 2>
  [ 86] objcall 9 ............................... <tSize[2]>
  [ 88] getlocal 0 .............................. <tSize>
  [ 90] pushint8 3 .............................. <3>
  [ 92] pusharglist 2 ........................... <tSize, 3>
  [ 94] objcall 9 ............................... <tSize[3]>
  [ 96] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [ 98] extcall 290 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [101] setobjprop 290 .......................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [104] getprop 1264 ............................ <pMember>
  [107] pushzero ................................ <0>
  [108] getprop 1264 ............................ <pMember>
  [111] getchainedprop 290 ...................... <pMember.image>
  [114] getobjprop 291 .......................... <pMember.image.height>
  [117] getlocal 0 .............................. <tSize>
  [119] pushint8 4 .............................. <4>
  [121] pusharglist 2 ........................... <tSize, 4>
  [123] objcall 9 ............................... <tSize[4]>
  [125] add ..................................... <pMember.image.height + tSize[4]>
  [126] pusharglist 2 ........................... <0, pMember.image.height + tSize[4]>
  [128] extcall 293 ............................. <point(0, pMember.image.height + tSize[4])>
  [131] setobjprop 294 .......................... pMember.regPoint = point(0, pMember.image.height + tSize[4])
  [134] getprop 1264 ............................ <pMember>
  [137] getchainedprop 290 ...................... <pMember.image>
  [140] pusharglist 1 ........................... <pMember.image>
  [142] objcall 582 ............................. <pMember.image.duplicate()>
  [145] setprop 1265 ............................ pBuffer = pMember.image.duplicate()
  [148] getparam 0 .............................. <me>
  [150] pusharglist 1 ........................... <me>
  [152] objcall 156 ............................. <me.getID()>
  [154] pusharglist 1 ........................... <me.getID()>
  [156] extcall 358 ............................. <reserveSprite(me.getID())>
  [159] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [161] extcall 182 ............................. <sprite(reserveSprite(me.getID()))>
  [163] setprop 327 ............................. pSprite = sprite(reserveSprite(me.getID()))
  [166] getprop 327 ............................. <pSprite>
  [169] getprop 1264 ............................ <pMember>
  [172] getobjprop 1266 ......................... <pMember.number>
  [175] setobjprop 1052 ......................... pSprite.castNum = pMember.number
  [178] getprop 327 ............................. <pSprite>
  [181] getprop 1264 ............................ <pMember>
  [184] getobjprop 252 .......................... <pMember.width>
  [186] setobjprop 252 .......................... pSprite.width = pMember.width
  [188] getprop 327 ............................. <pSprite>
  [191] getprop 1264 ............................ <pMember>
  [194] getobjprop 291 .......................... <pMember.height>
  [197] setobjprop 291 .......................... pSprite.height = pMember.height
  [200] getprop 327 ............................. <pSprite>
  [203] pushint8 36 ............................. <36>
  [205] setobjprop 419 .......................... pSprite.ink = 36
  [208] getparam 0 .............................. <me>
  [210] pusharglist 1 ........................... <me>
  [212] objcall 156 ............................. <me.getID()>
  [214] pusharglist 1 ........................... <me.getID()>
  [216] extcall 358 ............................. <reserveSprite(me.getID())>
  [219] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [221] extcall 182 ............................. <sprite(reserveSprite(me.getID()))>
  [223] setprop 1260 ............................ pMatteSpr = sprite(reserveSprite(me.getID()))
  [226] getprop 1260 ............................ <pMatteSpr>
  [229] getprop 1264 ............................ <pMember>
  [232] getobjprop 1266 ......................... <pMember.number>
  [235] setobjprop 1052 ......................... pMatteSpr.castNum = pMember.number
  [238] getprop 1260 ............................ <pMatteSpr>
  [241] pushint8 8 .............................. <8>
  [243] setobjprop 419 .......................... pMatteSpr.ink = 8
  [246] getprop 1260 ............................ <pMatteSpr>
  [249] pushzero ................................ <0>
  [250] setobjprop 362 .......................... pMatteSpr.blend = 0
  [253] getparam 0 .............................. <me>
  [255] pusharglist 1 ........................... <me>
  [257] objcall 156 ............................. <me.getID()>
  [259] pusharglist 1 ........................... <me.getID()>
  [261] extcall 358 ............................. <reserveSprite(me.getID())>
  [264] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [266] extcall 182 ............................. <sprite(reserveSprite(me.getID()))>
  [268] setprop 1261 ............................ pShadowSpr = sprite(reserveSprite(me.getID()))
  [271] getprop 1261 ............................ <pShadowSpr>
  [274] pushint8 16 ............................. <16>
  [276] setobjprop 362 .......................... pShadowSpr.blend = 16
  [279] getprop 1261 ............................ <pShadowSpr>
  [282] pushint8 8 .............................. <8>
  [284] setobjprop 419 .......................... pShadowSpr.ink = 8
  [287] pushzero ................................ <0>
  [288] setprop 1267 ............................ pShadowFix = 0
  [291] getprop 1268 ............................ <pPeopleSize>
  [294] pushcons 3 .............................. <"_std_sd_001_0_0">
  [296] joinstr ................................. <pPeopleSize & "_std_sd_001_0_0">
  [297] pusharglist 1 ........................... <pPeopleSize & "_std_sd_001_0_0">
  [299] extcall 37 .............................. <getmemnum(pPeopleSize & "_std_sd_001_0_0")>
  [301] pusharglist 1 ........................... <getmemnum(pPeopleSize & "_std_sd_001_0_0")>
  [303] extcall 30 .............................. <member(getmemnum(pPeopleSize & "_std_sd_001_0_0"))>
  [305] setprop 1254 ............................ pDefShadowMem = member(getmemnum(pPeopleSize & "_std_sd_001_0_0"))
  [308] pushsymb 949 ............................ <#room>
  [311] pusharglist 1 ........................... <#room>
  [313] extcall 260 ............................. <getThread(#room)>
  [316] pusharglist 1 ........................... <getThread(#room)>
  [318] objcall 597 ............................. <getThread(#room).getInterface()>
  [321] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [323] objcall 156 ............................. <getThread(#room).getInterface().getID()>
  [325] setlocal 1 .............................. tTargetID = getThread(#room).getInterface().getID()
  [327] getprop 1260 ............................ <pMatteSpr>
  [330] getobjprop 18 ........................... <pMatteSpr.spriteNum>
  [332] getparam 0 .............................. <me>
  [334] pusharglist 1 ........................... <me>
  [336] objcall 156 ............................. <me.getID()>
  [338] pusharglistnoret 2 ...................... <pMatteSpr.spriteNum, me.getID()>
  [340] extcall 363 ............................. setEventBroker(pMatteSpr.spriteNum, me.getID())
  [343] getprop 1260 ............................ <pMatteSpr>
  [346] pushsymb 110 ............................ <#eventProcUserObj>
  [348] getlocal 1 .............................. <tTargetID>
  [350] pushsymb 180 ............................ <#mouseDown>
  [352] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [354] objcall 179 ............................. pMatteSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [356] getprop 1260 ............................ <pMatteSpr>
  [359] pushsymb 104 ............................ <#eventProcUserRollOver>
  [361] getlocal 1 .............................. <tTargetID>
  [363] pushsymb 212 ............................ <#mouseEnter>
  [365] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseEnter>
  [367] objcall 179 ............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseEnter)
  [369] getprop 1260 ............................ <pMatteSpr>
  [372] pushsymb 104 ............................ <#eventProcUserRollOver>
  [374] getlocal 1 .............................. <tTargetID>
  [376] pushsymb 213 ............................ <#mouseLeave>
  [378] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseLeave>
  [380] objcall 179 ............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseLeave)
  [382] getprop 1261 ............................ <pShadowSpr>
  [385] getobjprop 18 ........................... <pShadowSpr.spriteNum>
  [387] getparam 0 .............................. <me>
  [389] pusharglist 1 ........................... <me>
  [391] objcall 156 ............................. <me.getID()>
  [393] pusharglistnoret 2 ...................... <pShadowSpr.spriteNum, me.getID()>
  [395] extcall 363 ............................. setEventBroker(pShadowSpr.spriteNum, me.getID())
  [398] getprop 1261 ............................ <pShadowSpr>
  [401] pushsymb 110 ............................ <#eventProcUserObj>
  [403] getlocal 1 .............................. <tTargetID>
  [405] pushsymb 180 ............................ <#mouseDown>
  [407] pusharglistnoret 4 ...................... <pShadowSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [409] objcall 179 ............................. pShadowSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [411] getprop 1255 ............................ <pInfoStruct>
  [414] pushsymb 31 ............................. <#name>
  [416] getprop 1221 ............................ <pName>
  [419] pusharglistnoret 3 ...................... <pInfoStruct, #name, pName>
  [421] objcall 173 ............................. pInfoStruct[#name] = pName
  [423] getprop 1255 ............................ <pInfoStruct>
  [426] pushsymb 492 ............................ <#class>
  [429] getprop 1269 ............................ <pClass>
  [432] pusharglistnoret 3 ...................... <pInfoStruct, #class, pClass>
  [434] objcall 173 ............................. pInfoStruct[#class] = pClass
  [436] getprop 1255 ............................ <pInfoStruct>
  [439] pushsymb 289 ............................ <#custom>
  [442] getprop 1270 ............................ <pCustom>
  [445] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [447] objcall 173 ............................. pInfoStruct[#custom] = pCustom
  [449] getprop 1255 ............................ <pInfoStruct>
  [452] pushsymb 290 ............................ <#image>
  [455] getparam 0 .............................. <me>
  [457] pusharglist 1 ........................... <me>
  [459] objcall 886 ............................. <me.getPicture()>
  [462] pusharglistnoret 3 ...................... <pInfoStruct, #image, me.getPicture()>
  [464] objcall 173 ............................. pInfoStruct[#image] = me.getPicture()
  [466] getprop 1255 ............................ <pInfoStruct>
  [469] pushsymb 237 ............................ <#ctrl>
  [471] pushcons 4 .............................. <"furniture">
  [473] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, "furniture">
  [475] objcall 173 ............................. pInfoStruct[#ctrl] = "furniture"
  [477] getprop 1255 ............................ <pInfoStruct>
  [480] pushsymb 246 ............................ <#badge>
  [482] pushcons 5 .............................. <" ">
  [484] pusharglistnoret 3 ...................... <pInfoStruct, #badge, " ">
  [486] objcall 173 ............................. pInfoStruct[#badge] = " "
  [488] pushsymb 949 ............................ <#room>
  [491] pusharglist 1 ........................... <#room>
  [493] extcall 260 ............................. <getThread(#room)>
  [496] pusharglist 1 ........................... <getThread(#room)>
  [498] objcall 597 ............................. <getThread(#room).getInterface()>
  [501] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [503] objcall 68 .............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [505] setlocal 2 .............................. tViz = getThread(#room).getInterface().getRoomVisualizer()
  [507] getlocal 2 .............................. <tViz>
  [509] getparam 1 .............................. <tdata>
  [511] pushsymb 493 ............................ <#x>
  [514] pusharglist 2 ........................... <tdata, #x>
  [516] objcall 9 ............................... <tdata[#x]>
  [518] getparam 1 .............................. <tdata>
  [520] pushsymb 495 ............................ <#y>
  [523] pusharglist 2 ........................... <tdata, #y>
  [525] objcall 9 ............................... <tdata[#y]>
  [527] pushsymb 1271 ........................... <#wallleft>
  [530] pushsymb 1272 ........................... <#wallright>
  [533] pusharglist 2 ........................... <[#wallleft, #wallright]>
  [535] pushlist ................................ <[#wallleft, #wallright]>
  [536] pusharglist 4 ........................... <tViz, tdata[#x], tdata[#y], [#wallleft, #wallright]>
  [538] objcall 1273 ............................ <tViz.getPartAtLocation(tdata[#x], tdata[#y], [#wallleft, #wallright])>
  [541] setlocal 3 .............................. tPart = tViz.getPartAtLocation(tdata[#x], tdata[#y], [#wallleft, #wallright])
  [543] getlocal 3 .............................. <tPart>
  [545] pushzero ................................ <0>
  [546] eq ...................................... <tPart = 0>
  [547] not ..................................... <not (tPart = 0)>
  [548] jmpifz [566] ............................ if not (tPart = 0) then
  [551] getlocal 3 .............................. <tPart>
  [553] pushsymb 168 ............................ <#locZ>
  [555] pusharglist 2 ........................... <tPart, #locZ>
  [557] objcall 9 ............................... <tPart[#locZ]>
  [559] pushint16 1000 .......................... <1000>
  [562] sub ..................................... <tPart[#locZ] - 1000>
  [563] setprop 1259 ............................ pBaseLocZ = tPart[#locZ] - 1000
  [566] pushint8 1 .............................. <1>
  [568] pusharglistnoret 1 ...................... <1>
  [570] extcall 21 .............................. return 1
  [572] ret
end

on setup me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 31 ............................. <#name>
  [  4] pusharglist 2 ........................... <tdata, #name>
  [  6] objcall 9 ............................... <tdata[#name]>
  [  8] setprop 1221 ............................ pName = tdata[#name]
  [ 11] getparam 1 .............................. <tdata>
  [ 13] pushsymb 492 ............................ <#class>
  [ 16] pusharglist 2 ........................... <tdata, #class>
  [ 18] objcall 9 ............................... <tdata[#class]>
  [ 20] setprop 1269 ............................ pClass = tdata[#class]
  [ 23] getparam 1 .............................. <tdata>
  [ 25] pushsymb 289 ............................ <#custom>
  [ 28] pusharglist 2 ........................... <tdata, #custom>
  [ 30] objcall 9 ............................... <tdata[#custom]>
  [ 32] setprop 1270 ............................ pCustom = tdata[#custom]
  [ 35] getparam 1 .............................. <tdata>
  [ 37] pushsymb 794 ............................ <#sex>
  [ 40] pusharglist 2 ........................... <tdata, #sex>
  [ 42] objcall 9 ............................... <tdata[#sex]>
  [ 44] setprop 1277 ............................ pSex = tdata[#sex]
  [ 47] getparam 1 .............................. <tdata>
  [ 49] pushsymb 792 ............................ <#direction>
  [ 52] pusharglist 2 ........................... <tdata, #direction>
  [ 54] objcall 9 ............................... <tdata[#direction]>
  [ 56] pushint8 1 .............................. <1>
  [ 58] pusharglist 2 ........................... <tdata[#direction], 1>
  [ 60] objcall 9 ............................... <tdata[#direction][1]>
  [ 62] setprop 34 .............................. pDirection = tdata[#direction][1]
  [ 64] getprop 34 .............................. <pDirection>
  [ 66] setprop 1278 ............................ pHeadDir = pDirection
  [ 69] getprop 34 .............................. <pDirection>
  [ 71] setprop 1279 ............................ pLastDir = pDirection
  [ 74] getparam 1 .............................. <tdata>
  [ 76] pushsymb 493 ............................ <#x>
  [ 79] pusharglist 2 ........................... <tdata, #x>
  [ 81] objcall 9 ............................... <tdata[#x]>
  [ 83] setprop 494 ............................. pLocX = tdata[#x]
  [ 86] getparam 1 .............................. <tdata>
  [ 88] pushsymb 495 ............................ <#y>
  [ 91] pusharglist 2 ........................... <tdata, #y>
  [ 93] objcall 9 ............................... <tdata[#y]>
  [ 95] setprop 496 ............................. pLocY = tdata[#y]
  [ 98] getparam 1 .............................. <tdata>
  [100] pushsymb 497 ............................ <#h>
  [103] pusharglist 2 ........................... <tdata, #h>
  [105] objcall 9 ............................... <tdata[#h]>
  [107] setprop 498 ............................. pLocH = tdata[#h]
  [110] getparam 1 .............................. <tdata>
  [112] pushsymb 246 ............................ <#badge>
  [114] pusharglist 2 ........................... <tdata, #badge>
  [116] objcall 9 ............................... <tdata[#badge]>
  [118] setprop 894 ............................. pBadge = tdata[#badge]
  [121] pushcons 6 .............................. <"human.size.">
  [123] getprop 977 ............................. <pXFactor>
  [126] pusharglist 1 ........................... <pXFactor>
  [128] extcall 451 ............................. <integer(pXFactor)>
  [131] joinstr ................................. <"human.size." & integer(pXFactor)>
  [132] pusharglist 1 ........................... <"human.size." & integer(pXFactor)>
  [134] extcall 121 ............................. <getVariable("human.size." & integer(pXFactor))>
  [136] setprop 1268 ............................ pPeopleSize = getVariable("human.size." & integer(pXFactor))
  [139] getprop 1268 ............................ <pPeopleSize>
  [142] not ..................................... <not pPeopleSize>
  [143] jmpifz [162] ............................ if not pPeopleSize then
  [146] getparam 0 .............................. <me>
  [148] pushcons 7 .............................. <"People size not found, using default!">
  [150] pushsymb 1184 ........................... <#setup>
  [153] pusharglistnoret 3 ...................... <me, "People size not found, using default!", #setup>
  [155] extcall 161 ............................. error(me, "People size not found, using default!", #setup)
  [157] pushcons 8 .............................. <"h">
  [159] setprop 1268 ............................ pPeopleSize = "h"
  [162] getprop 1268 ............................ <pPeopleSize>
  [165] pushcons 8 .............................. <"h">
  [167] eq ...................................... <pPeopleSize = "h">
  [168] setprop 1257 ............................ pCorrectLocZ = pPeopleSize = "h"
  [171] pushcons 9 .............................. <"human.canvas.">
  [173] getprop 1268 ............................ <pPeopleSize>
  [176] joinstr ................................. <"human.canvas." & pPeopleSize>
  [177] pusharglist 1 ........................... <"human.canvas." & pPeopleSize>
  [179] extcall 121 ............................. <getVariable("human.canvas." & pPeopleSize)>
  [181] pusharglist 1 ........................... <getVariable("human.canvas." & pPeopleSize)>
  [183] extcall 411 ............................. <value(getVariable("human.canvas." & pPeopleSize))>
  [186] setprop 1262 ............................ pCanvasSize = value(getVariable("human.canvas." & pPeopleSize))
  [189] getprop 1262 ............................ <pCanvasSize>
  [192] not ..................................... <not pCanvasSize>
  [193] jmpifz [243] ............................ if not pCanvasSize then
  [196] getparam 0 .............................. <me>
  [198] pushcons 10 ............................. <"Canvas size not found, using default!">
  [200] pushsymb 1184 ........................... <#setup>
  [203] pusharglistnoret 3 ...................... <me, "Canvas size not found, using default!", #setup>
  [205] extcall 161 ............................. error(me, "Canvas size not found, using default!", #setup)
  [207] pushsymb 1263 ........................... <#std>
  [210] pushint8 64 ............................. <64>
  [212] pushint8 102 ............................ <102>
  [214] pushint8 32 ............................. <32>
  [216] pushint8 10 ............................. <10>
  [218] inv ..................................... <-10>
  [219] pusharglist 4 ........................... <[64, 102, 32, -10]>
  [221] pushlist ................................ <[64, 102, 32, -10]>
  [222] pushsymb 1280 ........................... <#lay>
  [225] pushint8 89 ............................. <89>
  [227] pushint8 102 ............................ <102>
  [229] pushint8 32 ............................. <32>
  [231] pushint8 8 .............................. <8>
  [233] inv ..................................... <-8>
  [234] pusharglist 4 ........................... <[89, 102, 32, -8]>
  [236] pushlist ................................ <[89, 102, 32, -8]>
  [237] pusharglist 4 ........................... <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [239] pushproplist ............................ <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [240] setprop 1262 ............................ pCanvasSize = [#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]
  [243] getparam 0 .............................. <me>
  [245] getparam 1 .............................. <tdata>
  [247] pushsymb 793 ............................ <#figure>
  [250] pusharglist 2 ........................... <tdata, #figure>
  [252] objcall 9 ............................... <tdata[#figure]>
  [254] pusharglist 2 ........................... <me, tdata[#figure]>
  [256] objcall 1197 ............................ <me.setPartLists(tdata[#figure])>
  [259] not ..................................... <not me.setPartLists(tdata[#figure])>
  [260] jmpifz [278] ............................ if not me.setPartLists(tdata[#figure]) then
  [263] getparam 0 .............................. <me>
  [265] pushcons 11 ............................. <"Couldn't create part lists!">
  [267] pushsymb 1184 ........................... <#setup>
  [270] pusharglist 3 ........................... <me, "Couldn't create part lists!", #setup>
  [272] extcall 161 ............................. <error(me, "Couldn't create part lists!", #setup)>
  [274] pusharglistnoret 1 ...................... <error(me, "Couldn't create part lists!", #setup)>
  [276] extcall 21 .............................. return error(me, "Couldn't create part lists!", #setup)
  [278] getparam 0 .............................. <me>
  [280] getprop 494 ............................. <pLocX>
  [283] getprop 496 ............................. <pLocY>
  [286] getprop 498 ............................. <pLocH>
  [289] getprop 1278 ............................ <pHeadDir>
  [292] getprop 34 .............................. <pDirection>
  [294] pusharglistnoret 6 ...................... <me, pLocX, pLocY, pLocH, pHeadDir, pDirection>
  [296] objcall 771 ............................. me.resetValues(pLocX, pLocY, pLocH, pHeadDir, pDirection)
  [299] getparam 0 .............................. <me>
  [301] getprop 494 ............................. <pLocX>
  [304] getprop 496 ............................. <pLocY>
  [307] getprop 498 ............................. <pLocH>
  [310] getprop 34 .............................. <pDirection>
  [312] pusharglistnoret 5 ...................... <me, pLocX, pLocY, pLocH, pDirection>
  [314] objcall 772 ............................. me.Refresh(pLocX, pLocY, pLocH, pDirection)
  [317] pushzero ................................ <0>
  [318] setprop 1236 ............................ pSync = 0
  [321] ret
end

on update me
  [  0] getprop 1256 ............................ <pQueuesWithObj>
  [  3] jmpifz [ 22] ............................ if pQueuesWithObj then / else
  [  6] getparam 0 .............................. <me>
  [  8] pusharglistnoret 1 ...................... <me>
  [ 10] objcall 0 ............................... me.prepare()
  [ 12] getparam 0 .............................. <me>
  [ 14] pusharglistnoret 1 ...................... <me>
  [ 16] objcall 670 ............................. me.render()
  [ 19] jmp [ 51]
  [ 22] getprop 1236 ............................ <pSync>
  [ 25] not ..................................... <not pSync>
  [ 26] setprop 1236 ............................ pSync = not pSync
  [ 29] getprop 1236 ............................ <pSync>
  [ 32] jmpifz [ 44] ............................ if pSync then / else
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 1 ...................... <me>
  [ 39] objcall 0 ............................... me.prepare()
  [ 41] jmp [ 51]
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglistnoret 1 ...................... <me>
  [ 48] objcall 670 ............................. me.render()
  [ 51] ret
end

on resetValues me, tX, tY, tH, tDirHead, tDirBody
  [  0] getprop 1256 ............................ <pQueuesWithObj>
  [  3] getprop 1230 ............................ <pPreviousLoc>
  [  6] getparam 1 .............................. <tX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getparam 3 .............................. <tH>
  [ 12] pusharglist 3 ........................... <[tX, tY, tH]>
  [ 14] pushlist ................................ <[tX, tY, tH]>
  [ 15] eq ...................................... <pPreviousLoc = [tX, tY, tH]>
  [ 16] and ..................................... <pQueuesWithObj and (pPreviousLoc = [tX, tY, tH])>
  [ 17] jmpifz [ 26] ............................ if pQueuesWithObj and (pPreviousLoc = [tX, tY, tH]) then
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 21 .............................. return 1
  [ 26] pushzero ................................ <0>
  [ 27] setprop 1239 ............................ pMoving = 0
  [ 30] pushzero ................................ <0>
  [ 31] setprop 1243 ............................ pDancing = 0
  [ 34] pushzero ................................ <0>
  [ 35] setprop 1240 ............................ pTalking = 0
  [ 38] pushzero ................................ <0>
  [ 39] setprop 1241 ............................ pCarrying = 0
  [ 42] pushzero ................................ <0>
  [ 43] setprop 1244 ............................ pWaving = 0
  [ 46] pushzero ................................ <0>
  [ 47] setprop 1245 ............................ pTrading = 0
  [ 50] pushzero ................................ <0>
  [ 51] setprop 1246 ............................ pCtrlType = 0
  [ 54] pushzero ................................ <0>
  [ 55] setprop 1247 ............................ pAnimating = 0
  [ 58] pushzero ................................ <0>
  [ 59] setprop 1252 ............................ pModState = 0
  [ 62] pushzero ................................ <0>
  [ 63] setprop 1242 ............................ pSleeping = 0
  [ 66] pushzero ................................ <0>
  [ 67] setprop 1256 ............................ pQueuesWithObj = 0
  [ 70] pushint8 1 .............................. <1>
  [ 72] inv ..................................... <-1>
  [ 73] pushint8 2 .............................. <2>
  [ 75] pusharglist 2 ........................... <-1, 2>
  [ 77] extcall 293 ............................. <point(-1, 2)>
  [ 80] setprop 1225 ............................ pLocFix = point(-1, 2)
  [ 83] pushsymb 598 ............................ <#reset>
  [ 86] getprop 1222 ............................ <pPartList>
  [ 89] pusharglistnoret 2 ...................... <#reset, pPartList>
  [ 91] extcall 178 ............................. call(#reset, pPartList)
  [ 93] getprop 994 ............................. <pGeometry>
  [ 96] getparam 1 .............................. <tX>
  [ 98] getparam 2 .............................. <tY>
  [100] getparam 3 .............................. <tH>
  [102] pusharglist 4 ........................... <pGeometry, tX, tY, tH>
  [104] objcall 967 ............................. <pGeometry.getScreenCoordinate(tX, tY, tH)>
  [107] setprop 1227 ............................ pScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tH)
  [110] pushcons 1 .............................. <"std">
  [112] setprop 1238 ............................ pMainAction = "std"
  [115] getparam 1 .............................. <tX>
  [117] setprop 494 ............................. pLocX = tX
  [120] getparam 2 .............................. <tY>
  [122] setprop 496 ............................. pLocY = tY
  [125] getparam 3 .............................. <tH>
  [127] setprop 498 ............................. pLocH = tH
  [130] pushfloat32 0.0 ......................... <0.0>
  [135] setprop 1231 ............................ pRestingHeight = 0.0
  [138] getparam 5 .............................. <tDirBody>
  [140] getprop 1224 ............................ <pFlipList>
  [143] getparam 5 .............................. <tDirBody>
  [145] pushint8 1 .............................. <1>
  [147] add ..................................... <tDirBody + 1>
  [148] pusharglist 2 ........................... <pFlipList, tDirBody + 1>
  [150] objcall 9 ............................... <pFlipList[tDirBody + 1]>
  [152] nteq .................................... <tDirBody <> pFlipList[tDirBody + 1]>
  [153] jmpifz [225] ............................ if tDirBody <> pFlipList[tDirBody + 1] then
  [156] getparam 5 .............................. <tDirBody>
  [158] getparam 4 .............................. <tDirHead>
  [160] nteq .................................... <tDirBody <> tDirHead>
  [161] jmpifz [225] ............................ if tDirBody <> tDirHead then
  [164] getparam 4 .............................. <tDirHead>
  [166] peek 0 .................................. case tDirHead of
  [168] pushint8 4 .............................. <4>
  [170] eq
  [171] jmpifz [181] ............................ (case) 4:
  [174] pushint8 2 .............................. <2>
  [176] setparam 4 .............................. tDirHead = 2
  [178] jmp [223]
  [181] peek 0
  [183] pushint8 5 .............................. <5>
  [185] eq
  [186] jmpifz [196] ............................ (case) 5:
  [189] pushint8 1 .............................. <1>
  [191] setparam 4 .............................. tDirHead = 1
  [193] jmp [223]
  [196] peek 0
  [198] pushint8 6 .............................. <6>
  [200] eq
  [201] jmpifz [211] ............................ (case) 6:
  [204] pushint8 4 .............................. <4>
  [206] setparam 4 .............................. tDirHead = 4
  [208] jmp [223]
  [211] peek 0
  [213] pushint8 7 .............................. <7>
  [215] eq
  [216] jmpifz [223] ............................ (case) 7:
  [219] pushint8 5 .............................. <5>
  [221] setparam 4 .............................. tDirHead = 5
  [223] pop 1 ................................... end case
  [225] getparam 5 .............................. <tDirBody>
  [227] setprop 34 .............................. pDirection = tDirBody
  [229] getparam 4 .............................. <tDirHead>
  [231] setprop 1278 ............................ pHeadDir = tDirHead
  [234] getprop 1253 ............................ <pExtraObjs>
  [237] getobjprop 14 ........................... <pExtraObjs.count>
  [239] pushzero ................................ <0>
  [240] gt ...................................... <pExtraObjs.count > 0>
  [241] jmpifz [254] ............................ if pExtraObjs.count > 0 then
  [244] pushsymb 772 ............................ <#Refresh>
  [247] getprop 1253 ............................ <pExtraObjs>
  [250] pusharglistnoret 2 ...................... <#Refresh, pExtraObjs>
  [252] extcall 178 ............................. call(#Refresh, pExtraObjs)
  [254] ret
end

on Refresh me, tX, tY, tH
  [  0] getprop 1256 ............................ <pQueuesWithObj>
  [  3] getprop 1230 ............................ <pPreviousLoc>
  [  6] getparam 1 .............................. <tX>
  [  8] getparam 2 .............................. <tY>
  [ 10] getparam 3 .............................. <tH>
  [ 12] pusharglist 3 ........................... <[tX, tY, tH]>
  [ 14] pushlist ................................ <[tX, tY, tH]>
  [ 15] eq ...................................... <pPreviousLoc = [tX, tY, tH]>
  [ 16] and ..................................... <pQueuesWithObj and (pPreviousLoc = [tX, tY, tH])>
  [ 17] jmpifz [ 26] ............................ if pQueuesWithObj and (pPreviousLoc = [tX, tY, tH]) then
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 21 .............................. return 1
  [ 26] getprop 1243 ............................ <pDancing>
  [ 29] pushzero ................................ <0>
  [ 30] gt ...................................... <pDancing > 0>
  [ 31] getprop 1238 ............................ <pMainAction>
  [ 34] pushcons 12 ............................. <"lay">
  [ 36] eq ...................................... <pMainAction = "lay">
  [ 37] or ...................................... <(pDancing > 0) or (pMainAction = "lay")>
  [ 38] jmpifz [ 46] ............................ if (pDancing > 0) or (pMainAction = "lay") then
  [ 41] getprop 34 .............................. <pDirection>
  [ 43] setprop 1278 ............................ pHeadDir = pDirection
  [ 46] pushsymb 1284 ........................... <#defineDir>
  [ 49] getprop 1222 ............................ <pPartList>
  [ 52] getprop 34 .............................. <pDirection>
  [ 54] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [ 56] extcall 178 ............................. call(#defineDir, pPartList, pDirection)
  [ 58] pushsymb 1285 ........................... <#defineDirMultiple>
  [ 61] getprop 1222 ............................ <pPartList>
  [ 64] getprop 1278 ............................ <pHeadDir>
  [ 67] pushcons 13 ............................. <"hd">
  [ 69] pushcons 14 ............................. <"hr">
  [ 71] pushcons 15 ............................. <"ey">
  [ 73] pushcons 16 ............................. <"fc">
  [ 75] pusharglist 4 ........................... <["hd", "hr", "ey", "fc"]>
  [ 77] pushlist ................................ <["hd", "hr", "ey", "fc"]>
  [ 78] pusharglistnoret 4 ...................... <#defineDirMultiple, pPartList, pHeadDir, ["hd", "hr", "ey", "fc"]>
  [ 80] extcall 178 ............................. call(#defineDirMultiple, pPartList, pHeadDir, ["hd", "hr", "ey", "fc"])
  [ 82] getparam 0 .............................. <me>
  [ 84] pusharglistnoret 1 ...................... <me>
  [ 86] objcall 1198 ............................ me.arrangeParts()
  [ 89] pushint8 1 .............................. <1>
  [ 91] setprop 1237 ............................ pChanges = 1
  [ 94] ret
end

on select me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 21 .............................. return 1
  [  6] ret
end

on getName me
  [  0] getprop 1221 ............................ <pName>
  [  3] pusharglistnoret 1 ...................... <pName>
  [  5] extcall 21 .............................. return pName
  [  7] ret
end

on getClass me
  [  0] pushcons 17 ............................. <"user">
  [  2] pusharglistnoret 1 ...................... <"user">
  [  4] extcall 21 .............................. return "user"
  [  6] ret
end

on setPartModel me, tPart, tmodel
  [  0] getprop 1223 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 9 ............................... <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 10 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 159 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 21 .............................. return VOID
  [ 24] getprop 1222 ............................ <pPartList>
  [ 27] getprop 1223 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 9 ............................... <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 9 ............................... <pPartList[pPartIndex[tPart]]>
  [ 40] getparam 2 .............................. <tmodel>
  [ 42] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tmodel>
  [ 44] objcall 1286 ............................ pPartList[pPartIndex[tPart]].setModel(tmodel)
  [ 47] ret
end

on setPartColor me, tPart, tColor
  [  0] getprop 1223 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 9 ............................... <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 10 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 159 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 21 .............................. return VOID
  [ 24] getprop 1222 ............................ <pPartList>
  [ 27] getprop 1223 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 9 ............................... <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 9 ............................... <pPartList[pPartIndex[tPart]]>
  [ 40] getparam 2 .............................. <tColor>
  [ 42] pusharglistnoret 2 ...................... <pPartList[pPartIndex[tPart]], tColor>
  [ 44] objcall 1287 ............................ pPartList[pPartIndex[tPart]].setColor(tColor)
  [ 47] ret
end

on getCustom me
  [  0] getprop 1270 ............................ <pCustom>
  [  3] pusharglistnoret 1 ...................... <pCustom>
  [  5] extcall 21 .............................. return pCustom
  [  7] ret
end

on getLocation me
  [  0] getprop 494 ............................. <pLocX>
  [  3] getprop 496 ............................. <pLocY>
  [  6] getprop 498 ............................. <pLocH>
  [  9] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 11] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 12] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 14] extcall 21 .............................. return [pLocX, pLocY, pLocH]
  [ 16] ret
end

on getScrLocation me
  [  0] getprop 1227 ............................ <pScreenLoc>
  [  3] pusharglistnoret 1 ...................... <pScreenLoc>
  [  5] extcall 21 .............................. return pScreenLoc
  [  7] ret
end

on getTileCenter me
  [  0] getprop 1227 ............................ <pScreenLoc>
  [  3] pushint8 1 .............................. <1>
  [  5] pusharglist 2 ........................... <pScreenLoc, 1>
  [  7] objcall 9 ............................... <pScreenLoc[1]>
  [  9] getprop 977 ............................. <pXFactor>
  [ 12] pushint8 2 .............................. <2>
  [ 14] div ..................................... <pXFactor / 2>
  [ 15] add ..................................... <pScreenLoc[1] + (pXFactor / 2)>
  [ 16] getprop 1227 ............................ <pScreenLoc>
  [ 19] pushint8 2 .............................. <2>
  [ 21] pusharglist 2 ........................... <pScreenLoc, 2>
  [ 23] objcall 9 ............................... <pScreenLoc[2]>
  [ 25] pusharglist 2 ........................... <pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2]>
  [ 27] extcall 293 ............................. <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 30] pusharglistnoret 1 ...................... <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 32] extcall 21 .............................. return point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])
  [ 34] ret
end

on getPartLocation me, tPart
  [  0] getprop 1223 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 9 ............................... <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 10 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 159 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 21 .............................. return VOID
  [ 24] getprop 1222 ............................ <pPartList>
  [ 27] getprop 1223 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 9 ............................... <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 9 ............................... <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 476 ............................. <pPartList[pPartIndex[tPart]].getLocation()>
  [ 45] setlocal 0 .............................. tPartLoc = pPartList[pPartIndex[tPart]].getLocation()
  [ 47] getprop 1238 ............................ <pMainAction>
  [ 50] pushcons 12 ............................. <"lay">
  [ 52] nteq .................................... <pMainAction <> "lay">
  [ 53] jmpifz [ 70] ............................ if pMainAction <> "lay" then / else
  [ 56] getprop 327 ............................. <pSprite>
  [ 59] getobjprop 361 .......................... <pSprite.loc>
  [ 62] getlocal 0 .............................. <tPartLoc>
  [ 64] add ..................................... <pSprite.loc + tPartLoc>
  [ 65] setlocal 1 .............................. tloc = pSprite.loc + tPartLoc
  [ 67] jmp [120]
  [ 70] getprop 327 ............................. <pSprite>
  [ 73] pushsymb 322 ............................ <#rect>
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglist 3 ........................... <pSprite, #rect, 1>
  [ 80] objcall 33 .............................. <pSprite.rect[1]>
  [ 82] getprop 327 ............................. <pSprite>
  [ 85] getobjprop 252 .......................... <pSprite.width>
  [ 87] pushint8 2 .............................. <2>
  [ 89] div ..................................... <pSprite.width / 2>
  [ 90] add ..................................... <pSprite.rect[1] + (pSprite.width / 2)>
  [ 91] getprop 327 ............................. <pSprite>
  [ 94] pushsymb 322 ............................ <#rect>
  [ 97] pushint8 2 .............................. <2>
  [ 99] pusharglist 3 ........................... <pSprite, #rect, 2>
  [101] objcall 33 .............................. <pSprite.rect[2]>
  [103] getprop 327 ............................. <pSprite>
  [106] getobjprop 291 .......................... <pSprite.height>
  [109] pushint8 2 .............................. <2>
  [111] div ..................................... <pSprite.height / 2>
  [112] add ..................................... <pSprite.rect[2] + (pSprite.height / 2)>
  [113] pusharglist 2 ........................... <pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2)>
  [115] extcall 293 ............................. <point(pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2))>
  [118] setlocal 1 .............................. tloc = point(pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2))
  [120] getlocal 1 .............................. <tloc>
  [122] pusharglistnoret 1 ...................... <tloc>
  [124] extcall 21 .............................. return tloc
  [126] ret
end

on getDirection me
  [  0] getprop 34 .............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 21 .............................. return pDirection
  [  6] ret
end

on getPartMember me, tPart
  [  0] getprop 1223 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 9 ............................... <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 10 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 159 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 21 .............................. return VOID
  [ 24] getprop 1222 ............................ <pPartList>
  [ 27] getprop 1223 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 9 ............................... <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 9 ............................... <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 1289 ............................ <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 45] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getCurrentMember()>
  [ 47] extcall 21 .............................. return pPartList[pPartIndex[tPart]].getCurrentMember()
  [ 49] ret
end

on getPartColor me, tPart
  [  0] getprop 1223 ............................ <pPartIndex>
  [  3] getparam 1 .............................. <tPart>
  [  5] pusharglist 2 ........................... <pPartIndex, tPart>
  [  7] objcall 9 ............................... <pPartIndex[tPart]>
  [  9] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 11] extcall 10 .............................. <voidp(pPartIndex[tPart])>
  [ 13] jmpifz [ 24] ............................ if voidp(pPartIndex[tPart]) then
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 159 ............................. <VOID>
  [ 20] pusharglistnoret 1 ...................... <VOID>
  [ 22] extcall 21 .............................. return VOID
  [ 24] getprop 1222 ............................ <pPartList>
  [ 27] getprop 1223 ............................ <pPartIndex>
  [ 30] getparam 1 .............................. <tPart>
  [ 32] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 34] objcall 9 ............................... <pPartIndex[tPart]>
  [ 36] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 38] objcall 9 ............................... <pPartList[pPartIndex[tPart]]>
  [ 40] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 42] objcall 1290 ............................ <pPartList[pPartIndex[tPart]].getColor()>
  [ 45] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getColor()>
  [ 47] extcall 21 .............................. return pPartList[pPartIndex[tPart]].getColor()
  [ 49] ret
end

on getPicture me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] pusharglist 1 ........................... <tImg>
  [  4] extcall 10 .............................. <voidp(tImg)>
  [  6] jmpifz [ 25] ............................ if voidp(tImg) then / else
  [  9] pushint8 64 ............................. <64>
  [ 11] pushint8 102 ............................ <102>
  [ 13] pushint8 32 ............................. <32>
  [ 15] pusharglist 3 ........................... <64, 102, 32>
  [ 17] extcall 290 ............................. <image(64, 102, 32)>
  [ 20] setlocal 0 .............................. tCanvas = image(64, 102, 32)
  [ 22] jmp [ 29]
  [ 25] getparam 1 .............................. <tImg>
  [ 27] setlocal 0 .............................. tCanvas = tImg
  [ 29] pushcons 18 ............................. <"human.parts.">
  [ 31] getprop 1268 ............................ <pPeopleSize>
  [ 34] joinstr ................................. <"human.parts." & pPeopleSize>
  [ 35] pusharglist 1 ........................... <"human.parts." & pPeopleSize>
  [ 37] extcall 149 ............................. <getVariableValue("human.parts." & pPeopleSize)>
  [ 39] setlocal 1 .............................. tPartDefinition = getVariableValue("human.parts." & pPeopleSize)
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] setlocal 2 .............................. tTempPartList = []
  [ 46] getlocal 1 .............................. <tPartDefinition>
  [ 48] peek 0
  [ 50] pusharglist 1
  [ 52] extcall 14
  [ 54] pushint8 1
  [ 56] peek 0
  [ 58] peek 2
  [ 60] lteq
  [ 61] jmpifz [119] ............................ repeat with tPartSymbol in tPartDefinition
  [ 64] peek 2
  [ 66] peek 1
  [ 68] pusharglist 2
  [ 70] extcall 9
  [ 72] setlocal 3
  [ 74] getprop 1223 ............................ <pPartIndex>
  [ 77] getlocal 3 .............................. <tPartSymbol>
  [ 79] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [ 81] objcall 9 ............................... <pPartIndex[tPartSymbol]>
  [ 83] pusharglist 1 ........................... <pPartIndex[tPartSymbol]>
  [ 85] extcall 10 .............................. <voidp(pPartIndex[tPartSymbol])>
  [ 87] not ..................................... <not voidp(pPartIndex[tPartSymbol])>
  [ 88] jmpifz [114] ............................ if not voidp(pPartIndex[tPartSymbol]) then
  [ 91] getlocal 2 .............................. <tTempPartList>
  [ 93] getprop 1222 ............................ <pPartList>
  [ 96] getprop 1223 ............................ <pPartIndex>
  [ 99] getlocal 3 .............................. <tPartSymbol>
  [101] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [103] objcall 9 ............................... <pPartIndex[tPartSymbol]>
  [105] pusharglist 2 ........................... <pPartList, pPartIndex[tPartSymbol]>
  [107] objcall 9 ............................... <pPartList[pPartIndex[tPartSymbol]]>
  [109] pusharglistnoret 2 ...................... <tTempPartList, pPartList[pPartIndex[tPartSymbol]]>
  [111] objcall 788 ............................. tTempPartList.append(pPartList[pPartIndex[tPartSymbol]])
  [114] pushint8 1
  [116] add
  [117] endrepeat [ 56]
  [119] pop 3
  [121] pushsymb 1291 ........................... <#copyPicture>
  [124] getlocal 2 .............................. <tTempPartList>
  [126] getlocal 0 .............................. <tCanvas>
  [128] pusharglistnoret 3 ...................... <#copyPicture, tTempPartList, tCanvas>
  [130] extcall 178 ............................. call(#copyPicture, tTempPartList, tCanvas)
  [132] getparam 0 .............................. <me>
  [134] getlocal 0 .............................. <tCanvas>
  [136] pusharglist 2 ........................... <me, tCanvas>
  [138] objcall 1199 ............................ <me.flipImage(tCanvas)>
  [141] pusharglistnoret 1 ...................... <me.flipImage(tCanvas)>
  [143] extcall 21 .............................. return me.flipImage(tCanvas)
  [145] ret
end

on getInfo me
  [  0] getprop 1246 ............................ <pCtrlType>
  [  3] pushcons 0 .............................. <EMPTY>
  [  5] eq ...................................... <pCtrlType = EMPTY>
  [  6] jmpifz [ 23] ............................ if pCtrlType = EMPTY then / else
  [  9] getprop 1255 ............................ <pInfoStruct>
  [ 12] pushsymb 237 ............................ <#ctrl>
  [ 14] pushcons 4 .............................. <"furniture">
  [ 16] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, "furniture">
  [ 18] objcall 173 ............................. pInfoStruct[#ctrl] = "furniture"
  [ 20] jmp [ 35]
  [ 23] getprop 1255 ............................ <pInfoStruct>
  [ 26] pushsymb 237 ............................ <#ctrl>
  [ 28] getprop 1246 ............................ <pCtrlType>
  [ 31] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, pCtrlType>
  [ 33] objcall 173 ............................. pInfoStruct[#ctrl] = pCtrlType
  [ 35] getprop 1255 ............................ <pInfoStruct>
  [ 38] pushsymb 246 ............................ <#badge>
  [ 40] getparam 0 .............................. <me>
  [ 42] getobjprop 894 .......................... <me.pBadge>
  [ 45] pusharglistnoret 3 ...................... <pInfoStruct, #badge, me.pBadge>
  [ 47] objcall 173 ............................. pInfoStruct[#badge] = me.pBadge
  [ 49] getprop 1245 ............................ <pTrading>
  [ 52] jmpifz [ 83] ............................ if pTrading then / else
  [ 55] getprop 1255 ............................ <pInfoStruct>
  [ 58] pushsymb 289 ............................ <#custom>
  [ 61] getprop 1270 ............................ <pCustom>
  [ 64] pushcons 19 ............................. <RETURN>
  [ 66] joinstr ................................. <pCustom & RETURN>
  [ 67] pushcons 20 ............................. <"human_trading">
  [ 69] pushcons 21 ............................. <"Trading">
  [ 71] pusharglist 2 ........................... <"human_trading", "Trading">
  [ 73] extcall 136 ............................. <getText("human_trading", "Trading")>
  [ 75] joinstr ................................. <pCustom & RETURN & getText("human_trading", "Trading")>
  [ 76] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom & RETURN & getText("human_trading", "Trading")>
  [ 78] objcall 173 ............................. pInfoStruct[#custom] = pCustom & RETURN & getText("human_trading", "Trading")
  [ 80] jmp [136]
  [ 83] getprop 1241 ............................ <pCarrying>
  [ 86] pushzero ................................ <0>
  [ 87] nteq .................................... <pCarrying <> 0>
  [ 88] jmpifz [123] ............................ if pCarrying <> 0 then / else
  [ 91] getprop 1255 ............................ <pInfoStruct>
  [ 94] pushsymb 289 ............................ <#custom>
  [ 97] getprop 1270 ............................ <pCustom>
  [100] pushcons 19 ............................. <RETURN>
  [102] joinstr ................................. <pCustom & RETURN>
  [103] pushcons 22 ............................. <"human_carrying">
  [105] pushcons 23 ............................. <"Carrying:">
  [107] pusharglist 2 ........................... <"human_carrying", "Carrying:">
  [109] extcall 136 ............................. <getText("human_carrying", "Carrying:")>
  [111] joinstr ................................. <pCustom & RETURN & getText("human_carrying", "Carrying:")>
  [112] getprop 1241 ............................ <pCarrying>
  [115] joinpadstr .............................. <pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying>
  [116] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying>
  [118] objcall 173 ............................. pInfoStruct[#custom] = pCustom & RETURN & getText("human_carrying", "Carrying:") && pCarrying
  [120] jmp [136]
  [123] getprop 1255 ............................ <pInfoStruct>
  [126] pushsymb 289 ............................ <#custom>
  [129] getprop 1270 ............................ <pCustom>
  [132] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [134] objcall 173 ............................. pInfoStruct[#custom] = pCustom
  [136] getprop 1255 ............................ <pInfoStruct>
  [139] pusharglistnoret 1 ...................... <pInfoStruct>
  [141] extcall 21 .............................. return pInfoStruct
  [143] ret
end

on getSprites me
  [  0] getprop 327 ............................. <pSprite>
  [  3] getprop 1261 ............................ <pShadowSpr>
  [  6] getprop 1260 ............................ <pMatteSpr>
  [  9] pusharglist 3 ........................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 11] pushlist ................................ <[pSprite, pShadowSpr, pMatteSpr]>
  [ 12] pusharglistnoret 1 ...................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 14] extcall 21 .............................. return [pSprite, pShadowSpr, pMatteSpr]
  [ 16] ret
end

on getProperty me, tPropID
  [  0] getparam 1 .............................. <tPropID>
  [  2] peek 0 .................................. case tPropID of
  [  4] pushsymb 242 ............................ <#dancing>
  [  6] eq
  [  7] jmpifz [ 22] ............................ (case) #dancing:
  [ 10] pop 1
  [ 12] getprop 1243 ............................ <pDancing>
  [ 15] pusharglistnoret 1 ...................... <pDancing>
  [ 17] extcall 21 .............................. return pDancing
  [ 19] jmp [145]
  [ 22] peek 0
  [ 24] pushsymb 1297 ........................... <#carrying>
  [ 27] eq
  [ 28] jmpifz [ 43] ............................ (case) #carrying:
  [ 31] pop 1
  [ 33] getprop 1241 ............................ <pCarrying>
  [ 36] pusharglistnoret 1 ...................... <pCarrying>
  [ 38] extcall 21 .............................. return pCarrying
  [ 40] jmp [145]
  [ 43] peek 0
  [ 45] pushsymb 361 ............................ <#loc>
  [ 48] eq
  [ 49] jmpifz [ 73] ............................ (case) #loc:
  [ 52] pop 1
  [ 54] getprop 494 ............................. <pLocX>
  [ 57] getprop 496 ............................. <pLocY>
  [ 60] getprop 498 ............................. <pLocH>
  [ 63] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 65] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 66] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 68] extcall 21 .............................. return [pLocX, pLocY, pLocH]
  [ 70] jmp [145]
  [ 73] peek 0
  [ 75] pushsymb 243 ............................ <#mainAction>
  [ 77] eq
  [ 78] jmpifz [ 93] ............................ (case) #mainAction:
  [ 81] pop 1
  [ 83] getprop 1238 ............................ <pMainAction>
  [ 86] pusharglistnoret 1 ...................... <pMainAction>
  [ 88] extcall 21 .............................. return pMainAction
  [ 90] jmp [145]
  [ 93] peek 0
  [ 95] pushsymb 478 ............................ <#moving>
  [ 98] eq
  [ 99] jmpifz [116] ............................ (case) #moving:
  [102] pop 1
  [104] getparam 0 .............................. <me>
  [106] getobjprop 1239 ......................... <me.pMoving>
  [109] pusharglistnoret 1 ...................... <me.pMoving>
  [111] extcall 21 .............................. return me.pMoving
  [113] jmp [145]
  [116] peek 0
  [118] pushsymb 244 ............................ <#swimming>
  [120] eq
  [121] jmpifz [138] ............................ (case) #swimming:
  [124] pop 1
  [126] getparam 0 .............................. <me>
  [128] getobjprop 1248 ......................... <me.pSwim>
  [131] pusharglistnoret 1 ...................... <me.pSwim>
  [133] extcall 21 .............................. return me.pSwim
  [135] jmp [145] ............................... (case) otherwise:
  [138] pop 1
  [140] pushzero ................................ <0>
  [141] pusharglistnoret 1 ...................... <0>
  [143] extcall 21 .............................. return 0
  [145] pop 1 ................................... end case
  [147] ret
end

on setProperty me, tPropID, tValue
  [  0] getparam 1 .............................. <tPropID>
  [  2] jmp [ 12] ............................... case tPropID of / otherwise:
  [  5] pop 1
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 21 .............................. return 0
  [ 12] pop 1 ................................... end case
  [ 14] ret
end

on closeEyes me
  [  0] getprop 1238 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] jmpifz [ 29] ............................ if pMainAction = "lay" then / else
  [  9] pushsymb 1298 ........................... <#defineActMultiple>
  [ 12] getprop 1222 ............................ <pPartList>
  [ 15] pushcons 24 ............................. <"ley">
  [ 17] pushcons 15 ............................. <"ey">
  [ 19] pusharglist 1 ........................... <["ey"]>
  [ 21] pushlist ................................ <["ey"]>
  [ 22] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "ley", ["ey"]>
  [ 24] extcall 178 ............................. call(#defineActMultiple, pPartList, "ley", ["ey"])
  [ 26] jmp [ 46]
  [ 29] pushsymb 1298 ........................... <#defineActMultiple>
  [ 32] getprop 1222 ............................ <pPartList>
  [ 35] pushcons 25 ............................. <"eyb">
  [ 37] pushcons 15 ............................. <"ey">
  [ 39] pusharglist 1 ........................... <["ey"]>
  [ 41] pushlist ................................ <["ey"]>
  [ 42] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "eyb", ["ey"]>
  [ 44] extcall 178 ............................. call(#defineActMultiple, pPartList, "eyb", ["ey"])
  [ 46] pushint8 1 .............................. <1>
  [ 48] setprop 1235 ............................ pEyesClosed = 1
  [ 51] pushint8 1 .............................. <1>
  [ 53] setprop 1237 ............................ pChanges = 1
  [ 56] ret
end

on openEyes me
  [  0] getprop 1238 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] jmpifz [ 29] ............................ if pMainAction = "lay" then / else
  [  9] pushsymb 1298 ........................... <#defineActMultiple>
  [ 12] getprop 1222 ............................ <pPartList>
  [ 15] pushcons 12 ............................. <"lay">
  [ 17] pushcons 15 ............................. <"ey">
  [ 19] pusharglist 1 ........................... <["ey"]>
  [ 21] pushlist ................................ <["ey"]>
  [ 22] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "lay", ["ey"]>
  [ 24] extcall 178 ............................. call(#defineActMultiple, pPartList, "lay", ["ey"])
  [ 26] jmp [ 46]
  [ 29] pushsymb 1298 ........................... <#defineActMultiple>
  [ 32] getprop 1222 ............................ <pPartList>
  [ 35] pushcons 1 .............................. <"std">
  [ 37] pushcons 15 ............................. <"ey">
  [ 39] pusharglist 1 ........................... <["ey"]>
  [ 41] pushlist ................................ <["ey"]>
  [ 42] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "std", ["ey"]>
  [ 44] extcall 178 ............................. call(#defineActMultiple, pPartList, "std", ["ey"])
  [ 46] pushzero ................................ <0>
  [ 47] setprop 1235 ............................ pEyesClosed = 0
  [ 50] pushint8 1 .............................. <1>
  [ 52] setprop 1237 ............................ pChanges = 1
  [ 55] ret
end

on startAnimation me, tMemName
  [  0] getparam 1 .............................. <tMemName>
  [  2] getprop 1249 ............................ <pCurrentAnim>
  [  5] eq ...................................... <tMemName = pCurrentAnim>
  [  6] jmpifz [ 14] ............................ if tMemName = pCurrentAnim then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 21 .............................. return 0
  [ 14] getparam 1 .............................. <tMemName>
  [ 16] pusharglist 1 ........................... <tMemName>
  [ 18] extcall 35 .............................. <memberExists(tMemName)>
  [ 20] not ..................................... <not memberExists(tMemName)>
  [ 21] jmpifz [ 29] ............................ if not memberExists(tMemName) then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 21 .............................. return 0
  [ 29] getparam 1 .............................. <tMemName>
  [ 31] pusharglist 1 ........................... <tMemName>
  [ 33] extcall 37 .............................. <getmemnum(tMemName)>
  [ 35] pusharglist 1 ........................... <getmemnum(tMemName)>
  [ 37] extcall 30 .............................. <member(getmemnum(tMemName))>
  [ 39] setlocal 0 .............................. tmember = member(getmemnum(tMemName))
  [ 41] getlocal 0 .............................. <tmember>
  [ 43] getobjprop 872 .......................... <tmember.text>
  [ 46] setlocal 1 .............................. tList = tmember.text
  [ 48] getmovieprop 29 ......................... <the itemDelimiter>
  [ 50] setlocal 2 .............................. tTempDelim = the itemDelimiter
  [ 52] pushcons 26 ............................. <"/">
  [ 54] setmovieprop 29 ......................... the itemDelimiter = "/"
  [ 56] pushint8 1 .............................. <1>
  [ 58] setlocal 3
  [ 60] getlocal 3
  [ 62] getlocal 1 .............................. <tList>
  [ 64] pushsymb 817 ............................ <#line>
  [ 67] pusharglist 2 ........................... <tList, #line>
  [ 69] objcall 14 .............................. <tList.line.count>
  [ 71] lteq
  [ 72] jmpifz [139] ............................ repeat with i = 1 to tList.line.count
  [ 75] getlocal 1 .............................. <tList>
  [ 77] pushsymb 817 ............................ <#line>
  [ 80] getlocal 3 .............................. <i>
  [ 82] pusharglist 3 ........................... <tList, #line, i>
  [ 84] objcall 17 .............................. <tList.line[i]>
  [ 86] pushsymb 32 ............................. <#item>
  [ 88] pushint8 1 .............................. <1>
  [ 90] pusharglist 3 ........................... <tList.line[i], #item, 1>
  [ 92] objcall 33 .............................. <tList.line[i].item[1]>
  [ 94] setlocal 4 .............................. tPart = tList.line[i].item[1]
  [ 96] getlocal 1 .............................. <tList>
  [ 98] pushsymb 817 ............................ <#line>
  [101] getlocal 3 .............................. <i>
  [103] pusharglist 3 ........................... <tList, #line, i>
  [105] objcall 17 .............................. <tList.line[i]>
  [107] pushsymb 32 ............................. <#item>
  [109] pushint8 2 .............................. <2>
  [111] pusharglist 3 ........................... <tList.line[i], #item, 2>
  [113] objcall 33 .............................. <tList.line[i].item[2]>
  [115] setlocal 5 .............................. tAnim = tList.line[i].item[2]
  [117] pushsymb 2 .............................. <#setAnimation>
  [119] getprop 1222 ............................ <pPartList>
  [122] getlocal 4 .............................. <tPart>
  [124] getlocal 5 .............................. <tAnim>
  [126] pusharglistnoret 4 ...................... <#setAnimation, pPartList, tPart, tAnim>
  [128] extcall 178 ............................. call(#setAnimation, pPartList, tPart, tAnim)
  [130] pushint8 1
  [132] getlocal 3
  [134] add
  [135] setlocal 3
  [137] endrepeat [ 60]
  [139] getlocal 2 .............................. <tTempDelim>
  [141] setmovieprop 29 ......................... the itemDelimiter = tTempDelim
  [143] pushint8 1 .............................. <1>
  [145] setprop 1247 ............................ pAnimating = 1
  [148] getparam 1 .............................. <tMemName>
  [150] setprop 1249 ............................ pCurrentAnim = tMemName
  [153] ret
end

on stopAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1247 ............................ pAnimating = 0
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 1249 ............................ pCurrentAnim = EMPTY
  [  9] pushsymb 1300 ........................... <#remAnimation>
  [ 12] getprop 1222 ............................ <pPartList>
  [ 15] pusharglistnoret 2 ...................... <#remAnimation, pPartList>
  [ 17] extcall 178 ............................. call(#remAnimation, pPartList)
  [ 19] ret
end

on show me
  [  0] getprop 327 ............................. <pSprite>
  [  3] pushint8 1 .............................. <1>
  [  5] setobjprop 251 .......................... pSprite.visible = 1
  [  7] getprop 1260 ............................ <pMatteSpr>
  [ 10] pushint8 1 .............................. <1>
  [ 12] setobjprop 251 .......................... pMatteSpr.visible = 1
  [ 14] getprop 1261 ............................ <pShadowSpr>
  [ 17] pushint8 1 .............................. <1>
  [ 19] setobjprop 251 .......................... pShadowSpr.visible = 1
  [ 21] ret
end

on hide me
  [  0] getprop 327 ............................. <pSprite>
  [  3] pushzero ................................ <0>
  [  4] setobjprop 251 .......................... pSprite.visible = 0
  [  6] getprop 1260 ............................ <pMatteSpr>
  [  9] pushzero ................................ <0>
  [ 10] setobjprop 251 .......................... pMatteSpr.visible = 0
  [ 12] getprop 1261 ............................ <pShadowSpr>
  [ 15] pushzero ................................ <0>
  [ 16] setobjprop 251 .......................... pShadowSpr.visible = 0
  [ 18] ret
end

on draw me, tRGB
  [  0] getparam 1 .............................. <tRGB>
  [  2] pushsymb 357 ............................ <#color>
  [  5] pusharglist 2 ........................... <tRGB, #color>
  [  7] extcall 248 ............................. <ilk(tRGB, #color)>
  [  9] not ..................................... <not ilk(tRGB, #color)>
  [ 10] jmpifz [ 25] ............................ if not ilk(tRGB, #color) then
  [ 13] pushint16 255 ........................... <255>
  [ 16] pushzero ................................ <0>
  [ 17] pushzero ................................ <0>
  [ 18] pusharglist 3 ........................... <255, 0, 0>
  [ 20] extcall 312 ............................. <rgb(255, 0, 0)>
  [ 23] setparam 1 .............................. tRGB = rgb(255, 0, 0)
  [ 25] getprop 1264 ............................ <pMember>
  [ 28] getchainedprop 290 ...................... <pMember.image>
  [ 31] getprop 1264 ............................ <pMember>
  [ 34] getchainedprop 290 ...................... <pMember.image>
  [ 37] getobjprop 322 .......................... <pMember.image.rect>
  [ 40] pushsymb 1301 ........................... <#shapeType>
  [ 43] pushsymb 322 ............................ <#rect>
  [ 46] pushsymb 357 ............................ <#color>
  [ 49] getparam 1 .............................. <tRGB>
  [ 51] pusharglist 4 ........................... <[#shapeType: #rect, #color: tRGB]>
  [ 53] pushproplist ............................ <[#shapeType: #rect, #color: tRGB]>
  [ 54] pusharglistnoret 3 ...................... <pMember.image, pMember.image.rect, [#shapeType: #rect, #color: tRGB]>
  [ 56] objcall 1161 ............................ pMember.image.draw(pMember.image.rect, [#shapeType: #rect, #color: tRGB])
  [ 59] ret
end

on prepare me
  [  0] getprop 1232 ............................ <pAnimCounter>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <pAnimCounter + 1>
  [  6] pushint8 4 .............................. <4>
  [  8] mod ..................................... <(pAnimCounter + 1) mod 4>
  [  9] setprop 1232 ............................ pAnimCounter = (pAnimCounter + 1) mod 4
  [ 12] getprop 1235 ............................ <pEyesClosed>
  [ 15] getprop 1242 ............................ <pSleeping>
  [ 18] not ..................................... <not pSleeping>
  [ 19] and ..................................... <pEyesClosed and not pSleeping>
  [ 20] jmpifz [ 33] ............................ if pEyesClosed and not pSleeping then / else
  [ 23] getparam 0 .............................. <me>
  [ 25] pusharglistnoret 1 ...................... <me>
  [ 27] objcall 1193 ............................ me.openEyes()
  [ 30] jmp [ 52]
  [ 33] pushint8 30 ............................. <30>
  [ 35] pusharglist 1 ........................... <30>
  [ 37] extcall 185 ............................. <random(30)>
  [ 39] pushint8 3 .............................. <3>
  [ 41] eq ...................................... <random(30) = 3>
  [ 42] jmpifz [ 52] ............................ if random(30) = 3 then
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglistnoret 1 ...................... <me>
  [ 49] objcall 1192 ............................ me.closeEyes()
  [ 52] getprop 1240 ............................ <pTalking>
  [ 55] pushint8 3 .............................. <3>
  [ 57] pusharglist 1 ........................... <3>
  [ 59] extcall 185 ............................. <random(3)>
  [ 61] pushint8 1 .............................. <1>
  [ 63] gt ...................................... <random(3) > 1>
  [ 64] and ..................................... <pTalking and (random(3) > 1)>
  [ 65] jmpifz [127] ............................ if pTalking and (random(3) > 1) then
  [ 68] getprop 1238 ............................ <pMainAction>
  [ 71] pushcons 12 ............................. <"lay">
  [ 73] eq ...................................... <pMainAction = "lay">
  [ 74] jmpifz [101] ............................ if pMainAction = "lay" then / else
  [ 77] pushsymb 1298 ........................... <#defineActMultiple>
  [ 80] getprop 1222 ............................ <pPartList>
  [ 83] pushcons 27 ............................. <"lsp">
  [ 85] pushcons 13 ............................. <"hd">
  [ 87] pushcons 14 ............................. <"hr">
  [ 89] pushcons 16 ............................. <"fc">
  [ 91] pusharglist 3 ........................... <["hd", "hr", "fc"]>
  [ 93] pushlist ................................ <["hd", "hr", "fc"]>
  [ 94] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "lsp", ["hd", "hr", "fc"]>
  [ 96] extcall 178 ............................. call(#defineActMultiple, pPartList, "lsp", ["hd", "hr", "fc"])
  [ 98] jmp [122]
  [101] pushsymb 1298 ........................... <#defineActMultiple>
  [104] getprop 1222 ............................ <pPartList>
  [107] pushcons 28 ............................. <"spk">
  [109] pushcons 13 ............................. <"hd">
  [111] pushcons 14 ............................. <"hr">
  [113] pushcons 16 ............................. <"fc">
  [115] pusharglist 3 ........................... <["hd", "hr", "fc"]>
  [117] pushlist ................................ <["hd", "hr", "fc"]>
  [118] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "spk", ["hd", "hr", "fc"]>
  [120] extcall 178 ............................. call(#defineActMultiple, pPartList, "spk", ["hd", "hr", "fc"])
  [122] pushint8 1 .............................. <1>
  [124] setprop 1237 ............................ pChanges = 1
  [127] getprop 1239 ............................ <pMoving>
  [130] jmpifz [190] ............................ if pMoving then
  [133] getmovieprop 13 ......................... <the milliSeconds>
  [135] getprop 1233 ............................ <pMoveStart>
  [138] sub ..................................... <the milliSeconds - pMoveStart>
  [139] pusharglist 1 ........................... <the milliSeconds - pMoveStart>
  [141] extcall 616 ............................. <float(the milliSeconds - pMoveStart)>
  [144] getprop 1234 ............................ <pMoveTime>
  [147] div ..................................... <float(the milliSeconds - pMoveStart) / pMoveTime>
  [148] setlocal 0 .............................. tFactor = float(the milliSeconds - pMoveStart) / pMoveTime
  [150] getlocal 0 .............................. <tFactor>
  [152] pushfloat32 1.0 ......................... <1.0>
  [157] gt ...................................... <tFactor > 1.0>
  [158] jmpifz [168] ............................ if tFactor > 1.0 then
  [161] pushfloat32 1.0 ......................... <1.0>
  [166] setlocal 0 .............................. tFactor = 1.0
  [168] getprop 1229 ............................ <pDestLScreen>
  [171] getprop 1228 ............................ <pStartLScreen>
  [174] sub ..................................... <pDestLScreen - pStartLScreen>
  [175] getlocal 0 .............................. <tFactor>
  [177] mul ..................................... <(pDestLScreen - pStartLScreen) * tFactor>
  [178] getprop 1228 ............................ <pStartLScreen>
  [181] add ..................................... <((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen>
  [182] setprop 1227 ............................ pScreenLoc = ((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen
  [185] pushint8 1 .............................. <1>
  [187] setprop 1237 ............................ pChanges = 1
  [190] getprop 1244 ............................ <pWaving>
  [193] getprop 1238 ............................ <pMainAction>
  [196] pushcons 12 ............................. <"lay">
  [198] nteq .................................... <pMainAction <> "lay">
  [199] and ..................................... <pWaving and (pMainAction <> "lay")>
  [200] jmpifz [220] ............................ if pWaving and (pMainAction <> "lay") then
  [203] pushsymb 1303 ........................... <#doHandWorkLeft>
  [206] getprop 1222 ............................ <pPartList>
  [209] pushcons 29 ............................. <"wav">
  [211] pusharglistnoret 3 ...................... <#doHandWorkLeft, pPartList, "wav">
  [213] extcall 178 ............................. call(#doHandWorkLeft, pPartList, "wav")
  [215] pushint8 1 .............................. <1>
  [217] setprop 1237 ............................ pChanges = 1
  [220] getprop 1243 ............................ <pDancing>
  [223] jmpifz [236] ............................ if pDancing then
  [226] pushint8 1 .............................. <1>
  [228] setprop 1247 ............................ pAnimating = 1
  [231] pushint8 1 .............................. <1>
  [233] setprop 1237 ............................ pChanges = 1
  [236] ret
end

on render me
  [  0] getprop 1237 ............................ <pChanges>
  [  3] not ..................................... <not pChanges>
  [  4] jmpifz [ 11] ............................ if not pChanges then
  [  7] pusharglistnoret 0 ...................... <>
  [  9] extcall 21 .............................. return 
  [ 11] getprop 1268 ............................ <pPeopleSize>
  [ 14] pushcons 30 ............................. <"sh">
  [ 16] eq ...................................... <pPeopleSize = "sh">
  [ 17] jmpifz [ 27] ............................ if pPeopleSize = "sh" then / else
  [ 20] pushint8 4 .............................. <4>
  [ 22] setlocal 0 .............................. tSkipFreq = 4
  [ 24] jmp [ 31]
  [ 27] pushint8 5 .............................. <5>
  [ 29] setlocal 0 .............................. tSkipFreq = 5
  [ 31] getlocal 0 .............................. <tSkipFreq>
  [ 33] pusharglist 1 ........................... <tSkipFreq>
  [ 35] extcall 185 ............................. <random(tSkipFreq)>
  [ 37] pushint8 2 .............................. <2>
  [ 39] eq ...................................... <random(tSkipFreq) = 2>
  [ 40] getprop 1239 ............................ <pMoving>
  [ 43] not ..................................... <not pMoving>
  [ 44] and ..................................... <(random(tSkipFreq) = 2) and not pMoving>
  [ 45] jmpifz [ 64] ............................ if (random(tSkipFreq) = 2) and not pMoving then
  [ 48] pushsymb 1305 ........................... <#skipAnimationFrame>
  [ 51] getprop 1222 ............................ <pPartList>
  [ 54] pusharglistnoret 2 ...................... <#skipAnimationFrame, pPartList>
  [ 56] extcall 178 ............................. call(#skipAnimationFrame, pPartList)
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglistnoret 1 ...................... <1>
  [ 62] extcall 21 .............................. return 1
  [ 64] pushzero ................................ <0>
  [ 65] setprop 1237 ............................ pChanges = 0
  [ 68] getprop 1238 ............................ <pMainAction>
  [ 71] pushcons 31 ............................. <"sit">
  [ 73] eq ...................................... <pMainAction = "sit">
  [ 74] jmpifz [124] ............................ if pMainAction = "sit" then / else
  [ 77] getprop 1262 ............................ <pCanvasSize>
  [ 80] pushsymb 1263 ........................... <#std>
  [ 83] pusharglist 2 ........................... <pCanvasSize, #std>
  [ 85] objcall 9 ............................... <pCanvasSize[#std]>
  [ 87] setlocal 1 .............................. tSize = pCanvasSize[#std]
  [ 89] getprop 1261 ............................ <pShadowSpr>
  [ 92] getprop 1268 ............................ <pPeopleSize>
  [ 95] pushcons 32 ............................. <"_sit_sd_001_">
  [ 97] joinstr ................................. <pPeopleSize & "_sit_sd_001_">
  [ 98] getprop 1224 ............................ <pFlipList>
  [101] getprop 34 .............................. <pDirection>
  [103] pushint8 1 .............................. <1>
  [105] add ..................................... <pDirection + 1>
  [106] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [108] objcall 9 ............................... <pFlipList[pDirection + 1]>
  [110] joinstr ................................. <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1]>
  [111] pushcons 33 ............................. <"_0">
  [113] joinstr ................................. <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0">
  [114] pusharglist 1 ........................... <pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0">
  [116] extcall 37 .............................. <getmemnum(pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0")>
  [118] setobjprop 1052 ......................... pShadowSpr.castNum = getmemnum(pPeopleSize & "_sit_sd_001_" & pFlipList[pDirection + 1] & "_0")
  [121] jmp [191]
  [124] getprop 1238 ............................ <pMainAction>
  [127] pushcons 12 ............................. <"lay">
  [129] eq ...................................... <pMainAction = "lay">
  [130] jmpifz [159] ............................ if pMainAction = "lay" then / else
  [133] getprop 1262 ............................ <pCanvasSize>
  [136] pushsymb 1280 ........................... <#lay>
  [139] pusharglist 2 ........................... <pCanvasSize, #lay>
  [141] objcall 9 ............................... <pCanvasSize[#lay]>
  [143] setlocal 1 .............................. tSize = pCanvasSize[#lay]
  [145] getprop 1261 ............................ <pShadowSpr>
  [148] pushzero ................................ <0>
  [149] setobjprop 1052 ......................... pShadowSpr.castNum = 0
  [152] pushzero ................................ <0>
  [153] setprop 1267 ............................ pShadowFix = 0
  [156] jmp [191]
  [159] getprop 1262 ............................ <pCanvasSize>
  [162] pushsymb 1263 ........................... <#std>
  [165] pusharglist 2 ........................... <pCanvasSize, #std>
  [167] objcall 9 ............................... <pCanvasSize[#std]>
  [169] setlocal 1 .............................. tSize = pCanvasSize[#std]
  [171] getprop 1261 ............................ <pShadowSpr>
  [174] getobjprop 30 ........................... <pShadowSpr.member>
  [176] getprop 1254 ............................ <pDefShadowMem>
  [179] nteq .................................... <pShadowSpr.member <> pDefShadowMem>
  [180] jmpifz [191] ............................ if pShadowSpr.member <> pDefShadowMem then
  [183] getprop 1261 ............................ <pShadowSpr>
  [186] getprop 1254 ............................ <pDefShadowMem>
  [189] setobjprop 30 ........................... pShadowSpr.member = pDefShadowMem
  [191] getprop 1265 ............................ <pBuffer>
  [194] getobjprop 252 .......................... <pBuffer.width>
  [196] getlocal 1 .............................. <tSize>
  [198] pushint8 1 .............................. <1>
  [200] pusharglist 2 ........................... <tSize, 1>
  [202] objcall 9 ............................... <tSize[1]>
  [204] nteq .................................... <pBuffer.width <> tSize[1]>
  [205] getprop 1265 ............................ <pBuffer>
  [208] getobjprop 291 .......................... <pBuffer.height>
  [211] getlocal 1 .............................. <tSize>
  [213] pushint8 2 .............................. <2>
  [215] pusharglist 2 ........................... <tSize, 2>
  [217] objcall 9 ............................... <tSize[2]>
  [219] nteq .................................... <pBuffer.height <> tSize[2]>
  [220] or ...................................... <(pBuffer.width <> tSize[1]) or (pBuffer.height <> tSize[2])>
  [221] jmpifz [374] ............................ if (pBuffer.width <> tSize[1]) or (pBuffer.height <> tSize[2]) then
  [224] getprop 1264 ............................ <pMember>
  [227] getlocal 1 .............................. <tSize>
  [229] pushint8 1 .............................. <1>
  [231] pusharglist 2 ........................... <tSize, 1>
  [233] objcall 9 ............................... <tSize[1]>
  [235] getlocal 1 .............................. <tSize>
  [237] pushint8 2 .............................. <2>
  [239] pusharglist 2 ........................... <tSize, 2>
  [241] objcall 9 ............................... <tSize[2]>
  [243] getlocal 1 .............................. <tSize>
  [245] pushint8 3 .............................. <3>
  [247] pusharglist 2 ........................... <tSize, 3>
  [249] objcall 9 ............................... <tSize[3]>
  [251] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [253] extcall 290 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [256] setobjprop 290 .......................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [259] getprop 1264 ............................ <pMember>
  [262] pushzero ................................ <0>
  [263] getlocal 1 .............................. <tSize>
  [265] pushint8 2 .............................. <2>
  [267] pusharglist 2 ........................... <tSize, 2>
  [269] objcall 9 ............................... <tSize[2]>
  [271] getlocal 1 .............................. <tSize>
  [273] pushint8 4 .............................. <4>
  [275] pusharglist 2 ........................... <tSize, 4>
  [277] objcall 9 ............................... <tSize[4]>
  [279] add ..................................... <tSize[2] + tSize[4]>
  [280] pusharglist 2 ........................... <0, tSize[2] + tSize[4]>
  [282] extcall 293 ............................. <point(0, tSize[2] + tSize[4])>
  [285] setobjprop 294 .......................... pMember.regPoint = point(0, tSize[2] + tSize[4])
  [288] getprop 327 ............................. <pSprite>
  [291] getlocal 1 .............................. <tSize>
  [293] pushint8 1 .............................. <1>
  [295] pusharglist 2 ........................... <tSize, 1>
  [297] objcall 9 ............................... <tSize[1]>
  [299] setobjprop 252 .......................... pSprite.width = tSize[1]
  [301] getprop 327 ............................. <pSprite>
  [304] getlocal 1 .............................. <tSize>
  [306] pushint8 2 .............................. <2>
  [308] pusharglist 2 ........................... <tSize, 2>
  [310] objcall 9 ............................... <tSize[2]>
  [312] setobjprop 291 .......................... pSprite.height = tSize[2]
  [315] getprop 1260 ............................ <pMatteSpr>
  [318] getlocal 1 .............................. <tSize>
  [320] pushint8 1 .............................. <1>
  [322] pusharglist 2 ........................... <tSize, 1>
  [324] objcall 9 ............................... <tSize[1]>
  [326] setobjprop 252 .......................... pMatteSpr.width = tSize[1]
  [328] getprop 1260 ............................ <pMatteSpr>
  [331] getlocal 1 .............................. <tSize>
  [333] pushint8 2 .............................. <2>
  [335] pusharglist 2 ........................... <tSize, 2>
  [337] objcall 9 ............................... <tSize[2]>
  [339] setobjprop 291 .......................... pMatteSpr.height = tSize[2]
  [342] getlocal 1 .............................. <tSize>
  [344] pushint8 1 .............................. <1>
  [346] pusharglist 2 ........................... <tSize, 1>
  [348] objcall 9 ............................... <tSize[1]>
  [350] getlocal 1 .............................. <tSize>
  [352] pushint8 2 .............................. <2>
  [354] pusharglist 2 ........................... <tSize, 2>
  [356] objcall 9 ............................... <tSize[2]>
  [358] getlocal 1 .............................. <tSize>
  [360] pushint8 3 .............................. <3>
  [362] pusharglist 2 ........................... <tSize, 3>
  [364] objcall 9 ............................... <tSize[3]>
  [366] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [368] extcall 290 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [371] setprop 1265 ............................ pBuffer = image(tSize[1], tSize[2], tSize[3])
  [374] getprop 1224 ............................ <pFlipList>
  [377] getprop 34 .............................. <pDirection>
  [379] pushint8 1 .............................. <1>
  [381] add ..................................... <pDirection + 1>
  [382] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [384] objcall 9 ............................... <pFlipList[pDirection + 1]>
  [386] getprop 34 .............................. <pDirection>
  [388] nteq .................................... <pFlipList[pDirection + 1] <> pDirection>
  [389] getprop 34 .............................. <pDirection>
  [391] pushint8 3 .............................. <3>
  [393] eq ...................................... <pDirection = 3>
  [394] getprop 1278 ............................ <pHeadDir>
  [397] pushint8 4 .............................. <4>
  [399] eq ...................................... <pHeadDir = 4>
  [400] and ..................................... <(pDirection = 3) and (pHeadDir = 4)>
  [401] or ...................................... <(pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4))>
  [402] getprop 34 .............................. <pDirection>
  [404] pushint8 7 .............................. <7>
  [406] eq ...................................... <pDirection = 7>
  [407] getprop 1278 ............................ <pHeadDir>
  [410] pushint8 6 .............................. <6>
  [412] eq ...................................... <pHeadDir = 6>
  [413] and ..................................... <(pDirection = 7) and (pHeadDir = 6)>
  [414] or ...................................... <(pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4)) or ((pDirection = 7) and (pHeadDir = 6))>
  [415] jmpifz [492] ............................ if (pFlipList[pDirection + 1] <> pDirection) or ((pDirection = 3) and (pHeadDir = 4)) or ((pDirection = 7) and (pHeadDir = 6)) then / else
  [418] getprop 1264 ............................ <pMember>
  [421] getprop 1264 ............................ <pMember>
  [424] getchainedprop 290 ...................... <pMember.image>
  [427] getobjprop 252 .......................... <pMember.image.width>
  [429] getprop 1264 ............................ <pMember>
  [432] pushsymb 294 ............................ <#regPoint>
  [435] pushint8 2 .............................. <2>
  [437] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [439] objcall 33 .............................. <pMember.regPoint[2]>
  [441] pusharglist 2 ........................... <pMember.image.width, pMember.regPoint[2]>
  [443] extcall 293 ............................. <point(pMember.image.width, pMember.regPoint[2])>
  [446] setobjprop 294 .......................... pMember.regPoint = point(pMember.image.width, pMember.regPoint[2])
  [449] getprop 977 ............................. <pXFactor>
  [452] setprop 1267 ............................ pShadowFix = pXFactor
  [455] getprop 327 ............................. <pSprite>
  [458] getobjprop 1023 ......................... <pSprite.flipH>
  [461] not ..................................... <not pSprite.flipH>
  [462] jmpifz [489] ............................ if not pSprite.flipH then
  [465] getprop 327 ............................. <pSprite>
  [468] pushint8 1 .............................. <1>
  [470] setobjprop 1023 ......................... pSprite.flipH = 1
  [473] getprop 1260 ............................ <pMatteSpr>
  [476] pushint8 1 .............................. <1>
  [478] setobjprop 1023 ......................... pMatteSpr.flipH = 1
  [481] getprop 1261 ............................ <pShadowSpr>
  [484] pushint8 1 .............................. <1>
  [486] setobjprop 1023 ......................... pShadowSpr.flipH = 1
  [489] jmp [550]
  [492] getprop 1264 ............................ <pMember>
  [495] pushzero ................................ <0>
  [496] getprop 1264 ............................ <pMember>
  [499] pushsymb 294 ............................ <#regPoint>
  [502] pushint8 2 .............................. <2>
  [504] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [506] objcall 33 .............................. <pMember.regPoint[2]>
  [508] pusharglist 2 ........................... <0, pMember.regPoint[2]>
  [510] extcall 293 ............................. <point(0, pMember.regPoint[2])>
  [513] setobjprop 294 .......................... pMember.regPoint = point(0, pMember.regPoint[2])
  [516] pushzero ................................ <0>
  [517] setprop 1267 ............................ pShadowFix = 0
  [520] getprop 327 ............................. <pSprite>
  [523] getobjprop 1023 ......................... <pSprite.flipH>
  [526] jmpifz [550] ............................ if pSprite.flipH then
  [529] getprop 327 ............................. <pSprite>
  [532] pushzero ................................ <0>
  [533] setobjprop 1023 ......................... pSprite.flipH = 0
  [536] getprop 1260 ............................ <pMatteSpr>
  [539] pushzero ................................ <0>
  [540] setobjprop 1023 ......................... pMatteSpr.flipH = 0
  [543] getprop 1261 ............................ <pShadowSpr>
  [546] pushzero ................................ <0>
  [547] setobjprop 1023 ......................... pShadowSpr.flipH = 0
  [550] getprop 1257 ............................ <pCorrectLocZ>
  [553] jmpifz [575] ............................ if pCorrectLocZ then / else
  [556] getprop 498 ............................. <pLocH>
  [559] getprop 1231 ............................ <pRestingHeight>
  [562] add ..................................... <pLocH + pRestingHeight>
  [563] pushint16 1000 .......................... <1000>
  [566] mul ..................................... <(pLocH + pRestingHeight) * 1000>
  [567] pushint8 2 .............................. <2>
  [569] add ..................................... <((pLocH + pRestingHeight) * 1000) + 2>
  [570] setlocal 2 .............................. tOffZ = ((pLocH + pRestingHeight) * 1000) + 2
  [572] jmp [579]
  [575] pushint8 2 .............................. <2>
  [577] setlocal 2 .............................. tOffZ = 2
  [579] getprop 327 ............................. <pSprite>
  [582] getprop 1227 ............................ <pScreenLoc>
  [585] pushint8 1 .............................. <1>
  [587] pusharglist 2 ........................... <pScreenLoc, 1>
  [589] objcall 9 ............................... <pScreenLoc[1]>
  [591] setobjprop 255 .......................... pSprite.locH = pScreenLoc[1]
  [593] getprop 327 ............................. <pSprite>
  [596] getprop 1227 ............................ <pScreenLoc>
  [599] pushint8 2 .............................. <2>
  [601] pusharglist 2 ........................... <pScreenLoc, 2>
  [603] objcall 9 ............................... <pScreenLoc[2]>
  [605] setobjprop 500 .......................... pSprite.locV = pScreenLoc[2]
  [608] getprop 1260 ............................ <pMatteSpr>
  [611] getprop 327 ............................. <pSprite>
  [614] getobjprop 361 .......................... <pSprite.loc>
  [617] setobjprop 361 .......................... pMatteSpr.loc = pSprite.loc
  [620] getprop 1261 ............................ <pShadowSpr>
  [623] getprop 327 ............................. <pSprite>
  [626] getobjprop 361 .......................... <pSprite.loc>
  [629] getprop 1267 ............................ <pShadowFix>
  [632] pushzero ................................ <0>
  [633] pusharglist 2 ........................... <[pShadowFix, 0]>
  [635] pushlist ................................ <[pShadowFix, 0]>
  [636] add ..................................... <pSprite.loc + [pShadowFix, 0]>
  [637] setobjprop 361 .......................... pShadowSpr.loc = pSprite.loc + [pShadowFix, 0]
  [640] getprop 1259 ............................ <pBaseLocZ>
  [643] pushzero ................................ <0>
  [644] nteq .................................... <pBaseLocZ <> 0>
  [645] jmpifz [659] ............................ if pBaseLocZ <> 0 then / else
  [648] getprop 327 ............................. <pSprite>
  [651] getprop 1259 ............................ <pBaseLocZ>
  [654] setobjprop 168 .......................... pSprite.locZ = pBaseLocZ
  [656] jmp [680]
  [659] getprop 327 ............................. <pSprite>
  [662] getprop 1227 ............................ <pScreenLoc>
  [665] pushint8 3 .............................. <3>
  [667] pusharglist 2 ........................... <pScreenLoc, 3>
  [669] objcall 9 ............................... <pScreenLoc[3]>
  [671] getlocal 2 .............................. <tOffZ>
  [673] add ..................................... <pScreenLoc[3] + tOffZ>
  [674] getprop 1259 ............................ <pBaseLocZ>
  [677] add ..................................... <pScreenLoc[3] + tOffZ + pBaseLocZ>
  [678] setobjprop 168 .......................... pSprite.locZ = pScreenLoc[3] + tOffZ + pBaseLocZ
  [680] getprop 1260 ............................ <pMatteSpr>
  [683] getprop 327 ............................. <pSprite>
  [686] getobjprop 168 .......................... <pSprite.locZ>
  [688] pushint8 1 .............................. <1>
  [690] add ..................................... <pSprite.locZ + 1>
  [691] setobjprop 168 .......................... pMatteSpr.locZ = pSprite.locZ + 1
  [693] getprop 1261 ............................ <pShadowSpr>
  [696] getprop 327 ............................. <pSprite>
  [699] getobjprop 168 .......................... <pSprite.locZ>
  [701] pushint8 3 .............................. <3>
  [703] sub ..................................... <pSprite.locZ - 3>
  [704] setobjprop 168 .......................... pShadowSpr.locZ = pSprite.locZ - 3
  [706] pushzero ................................ <0>
  [707] pushzero ................................ <0>
  [708] pushzero ................................ <0>
  [709] pushzero ................................ <0>
  [710] pusharglist 4 ........................... <0, 0, 0, 0>
  [712] extcall 322 ............................. <rect(0, 0, 0, 0)>
  [715] setprop 1226 ............................ pUpdateRect = rect(0, 0, 0, 0)
  [718] getprop 1265 ............................ <pBuffer>
  [721] getprop 1265 ............................ <pBuffer>
  [724] getobjprop 322 .......................... <pBuffer.rect>
  [727] getprop 1250 ............................ <pAlphaColor>
  [730] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [732] objcall 1306 ............................ pBuffer.fill(pBuffer.rect, pAlphaColor)
  [735] pushsymb 3 .............................. <#update>
  [737] getprop 1222 ............................ <pPartList>
  [740] pusharglistnoret 2 ...................... <#update, pPartList>
  [742] extcall 178 ............................. call(#update, pPartList)
  [744] getprop 1264 ............................ <pMember>
  [747] getchainedprop 290 ...................... <pMember.image>
  [750] getprop 1265 ............................ <pBuffer>
  [753] getprop 1226 ............................ <pUpdateRect>
  [756] getprop 1226 ............................ <pUpdateRect>
  [759] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pUpdateRect, pUpdateRect>
  [761] objcall 323 ............................. pMember.image.copyPixels(pBuffer, pUpdateRect, pUpdateRect)
  [764] ret
end

on reDraw me
  [  0] getprop 1265 ............................ <pBuffer>
  [  3] getprop 1265 ............................ <pBuffer>
  [  6] getobjprop 322 .......................... <pBuffer.rect>
  [  9] getprop 1250 ............................ <pAlphaColor>
  [ 12] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [ 14] objcall 1306 ............................ pBuffer.fill(pBuffer.rect, pAlphaColor)
  [ 17] pushsymb 670 ............................ <#render>
  [ 20] getprop 1222 ............................ <pPartList>
  [ 23] pusharglistnoret 2 ...................... <#render, pPartList>
  [ 25] extcall 178 ............................. call(#render, pPartList)
  [ 27] getprop 1264 ............................ <pMember>
  [ 30] getchainedprop 290 ...................... <pMember.image>
  [ 33] getprop 1265 ............................ <pBuffer>
  [ 36] getprop 1265 ............................ <pBuffer>
  [ 39] getobjprop 322 .......................... <pBuffer.rect>
  [ 42] getprop 1265 ............................ <pBuffer>
  [ 45] getobjprop 322 .......................... <pBuffer.rect>
  [ 48] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pBuffer.rect, pBuffer.rect>
  [ 50] objcall 323 ............................. pMember.image.copyPixels(pBuffer, pBuffer.rect, pBuffer.rect)
  [ 53] ret
end

on setPartLists me, tmodels
  [  0] getprop 1238 ............................ <pMainAction>
  [  3] setlocal 0 .............................. tAction = pMainAction
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setprop 1222 ............................ pPartList = []
  [ 11] pushcons 18 ............................. <"human.parts.">
  [ 13] getprop 1268 ............................ <pPeopleSize>
  [ 16] joinstr ................................. <"human.parts." & pPeopleSize>
  [ 17] pusharglist 1 ........................... <"human.parts." & pPeopleSize>
  [ 19] extcall 149 ............................. <getVariableValue("human.parts." & pPeopleSize)>
  [ 21] setlocal 1 .............................. tPartDefinition = getVariableValue("human.parts." & pPeopleSize)
  [ 23] pushint8 1 .............................. <1>
  [ 25] setlocal 2
  [ 27] getlocal 2
  [ 29] getlocal 1 .............................. <tPartDefinition>
  [ 31] getobjprop 14 ........................... <tPartDefinition.count>
  [ 33] lteq
  [ 34] jmpifz [421] ............................ repeat with i = 1 to tPartDefinition.count
  [ 37] getlocal 1 .............................. <tPartDefinition>
  [ 39] getlocal 2 .............................. <i>
  [ 41] pusharglist 2 ........................... <tPartDefinition, i>
  [ 43] objcall 9 ............................... <tPartDefinition[i]>
  [ 45] setlocal 3 .............................. tPartSymbol = tPartDefinition[i]
  [ 47] getparam 1 .............................. <tmodels>
  [ 49] getlocal 3 .............................. <tPartSymbol>
  [ 51] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [ 53] objcall 9 ............................... <tmodels[tPartSymbol]>
  [ 55] pusharglist 1 ........................... <tmodels[tPartSymbol]>
  [ 57] extcall 10 .............................. <voidp(tmodels[tPartSymbol])>
  [ 59] jmpifz [ 73] ............................ if voidp(tmodels[tPartSymbol]) then
  [ 62] getparam 1 .............................. <tmodels>
  [ 64] getlocal 3 .............................. <tPartSymbol>
  [ 66] pusharglist 0 ........................... <[:]>
  [ 68] pushproplist ............................ <[:]>
  [ 69] pusharglistnoret 3 ...................... <tmodels, tPartSymbol, [:]>
  [ 71] objcall 173 ............................. tmodels[tPartSymbol] = [:]
  [ 73] getparam 1 .............................. <tmodels>
  [ 75] getlocal 3 .............................. <tPartSymbol>
  [ 77] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [ 79] objcall 9 ............................... <tmodels[tPartSymbol]>
  [ 81] pushcons 34 ............................. <"model">
  [ 83] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [ 85] objcall 9 ............................... <tmodels[tPartSymbol]["model"]>
  [ 87] pusharglist 1 ........................... <tmodels[tPartSymbol]["model"]>
  [ 89] extcall 10 .............................. <voidp(tmodels[tPartSymbol]["model"])>
  [ 91] jmpifz [110] ............................ if voidp(tmodels[tPartSymbol]["model"]) then
  [ 94] getparam 1 .............................. <tmodels>
  [ 96] getlocal 3 .............................. <tPartSymbol>
  [ 98] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [100] objcall 9 ............................... <tmodels[tPartSymbol]>
  [102] pushcons 34 ............................. <"model">
  [104] pushcons 35 ............................. <"001">
  [106] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "model", "001">
  [108] objcall 173 ............................. tmodels[tPartSymbol]["model"] = "001"
  [110] getparam 1 .............................. <tmodels>
  [112] getlocal 3 .............................. <tPartSymbol>
  [114] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [116] objcall 9 ............................... <tmodels[tPartSymbol]>
  [118] pushcons 36 ............................. <"color">
  [120] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [122] objcall 9 ............................... <tmodels[tPartSymbol]["color"]>
  [124] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [126] extcall 10 .............................. <voidp(tmodels[tPartSymbol]["color"])>
  [128] jmpifz [152] ............................ if voidp(tmodels[tPartSymbol]["color"]) then
  [131] getparam 1 .............................. <tmodels>
  [133] getlocal 3 .............................. <tPartSymbol>
  [135] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [137] objcall 9 ............................... <tmodels[tPartSymbol]>
  [139] pushcons 36 ............................. <"color">
  [141] pushcons 37 ............................. <"EEEEEE">
  [143] pusharglist 1 ........................... <"EEEEEE">
  [145] extcall 312 ............................. <rgb("EEEEEE")>
  [148] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "color", rgb("EEEEEE")>
  [150] objcall 173 ............................. tmodels[tPartSymbol]["color"] = rgb("EEEEEE")
  [152] getlocal 3 .............................. <tPartSymbol>
  [154] pushcons 16 ............................. <"fc">
  [156] eq ...................................... <tPartSymbol = "fc">
  [157] getparam 1 .............................. <tmodels>
  [159] getlocal 3 .............................. <tPartSymbol>
  [161] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [163] objcall 9 ............................... <tmodels[tPartSymbol]>
  [165] pushcons 34 ............................. <"model">
  [167] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [169] objcall 9 ............................... <tmodels[tPartSymbol]["model"]>
  [171] pushcons 35 ............................. <"001">
  [173] nteq .................................... <tmodels[tPartSymbol]["model"] <> "001">
  [174] and ..................................... <(tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001")>
  [175] getprop 977 ............................. <pXFactor>
  [178] pushint8 33 ............................. <33>
  [180] lt ...................................... <pXFactor < 33>
  [181] and ..................................... <(tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001") and (pXFactor < 33)>
  [182] jmpifz [201] ............................ if (tPartSymbol = "fc") and (tmodels[tPartSymbol]["model"] <> "001") and (pXFactor < 33) then
  [185] getparam 1 .............................. <tmodels>
  [187] getlocal 3 .............................. <tPartSymbol>
  [189] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [191] objcall 9 ............................... <tmodels[tPartSymbol]>
  [193] pushcons 34 ............................. <"model">
  [195] pushcons 35 ............................. <"001">
  [197] pusharglistnoret 3 ...................... <tmodels[tPartSymbol], "model", "001">
  [199] objcall 173 ............................. tmodels[tPartSymbol]["model"] = "001"
  [201] pushsymb 152 ............................ <#temp>
  [203] getprop 1258 ............................ <pPartClass>
  [206] pusharglist 2 ........................... <#temp, pPartClass>
  [208] extcall 150 ............................. <createObject(#temp, pPartClass)>
  [210] setlocal 4 .............................. tPartObj = createObject(#temp, pPartClass)
  [212] getparam 1 .............................. <tmodels>
  [214] getlocal 3 .............................. <tPartSymbol>
  [216] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [218] objcall 9 ............................... <tmodels[tPartSymbol]>
  [220] pushcons 36 ............................. <"color">
  [222] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [224] objcall 9 ............................... <tmodels[tPartSymbol]["color"]>
  [226] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [228] extcall 313 ............................. <stringp(tmodels[tPartSymbol]["color"])>
  [231] jmpifz [261] ............................ if stringp(tmodels[tPartSymbol]["color"]) then
  [234] pushcons 38 ............................. <"rgb(">
  [236] getparam 1 .............................. <tmodels>
  [238] getlocal 3 .............................. <tPartSymbol>
  [240] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [242] objcall 9 ............................... <tmodels[tPartSymbol]>
  [244] pushcons 36 ............................. <"color">
  [246] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [248] objcall 9 ............................... <tmodels[tPartSymbol]["color"]>
  [250] joinstr ................................. <"rgb(" & tmodels[tPartSymbol]["color"]>
  [251] pushcons 39 ............................. <")">
  [253] joinstr ................................. <"rgb(" & tmodels[tPartSymbol]["color"] & ")">
  [254] pusharglist 1 ........................... <"rgb(" & tmodels[tPartSymbol]["color"] & ")">
  [256] extcall 411 ............................. <value("rgb(" & tmodels[tPartSymbol]["color"] & ")")>
  [259] setlocal 5 .............................. tColor = value("rgb(" & tmodels[tPartSymbol]["color"] & ")")
  [261] getparam 1 .............................. <tmodels>
  [263] getlocal 3 .............................. <tPartSymbol>
  [265] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [267] objcall 9 ............................... <tmodels[tPartSymbol]>
  [269] pushcons 36 ............................. <"color">
  [271] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [273] objcall 9 ............................... <tmodels[tPartSymbol]["color"]>
  [275] getobjprop 248 .......................... <tmodels[tPartSymbol]["color"].ilk>
  [277] pushsymb 357 ............................ <#color>
  [280] nteq .................................... <tmodels[tPartSymbol]["color"].ilk <> #color>
  [281] jmpifz [308] ............................ if tmodels[tPartSymbol]["color"].ilk <> #color then / else
  [284] getparam 1 .............................. <tmodels>
  [286] getlocal 3 .............................. <tPartSymbol>
  [288] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [290] objcall 9 ............................... <tmodels[tPartSymbol]>
  [292] pushcons 36 ............................. <"color">
  [294] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [296] objcall 9 ............................... <tmodels[tPartSymbol]["color"]>
  [298] pusharglist 1 ........................... <tmodels[tPartSymbol]["color"]>
  [300] extcall 312 ............................. <rgb(tmodels[tPartSymbol]["color"])>
  [303] setlocal 5 .............................. tColor = rgb(tmodels[tPartSymbol]["color"])
  [305] jmp [324]
  [308] getparam 1 .............................. <tmodels>
  [310] getlocal 3 .............................. <tPartSymbol>
  [312] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [314] objcall 9 ............................... <tmodels[tPartSymbol]>
  [316] pushcons 36 ............................. <"color">
  [318] pusharglist 2 ........................... <tmodels[tPartSymbol], "color">
  [320] objcall 9 ............................... <tmodels[tPartSymbol]["color"]>
  [322] setlocal 5 .............................. tColor = tmodels[tPartSymbol]["color"]
  [324] getlocal 5 .............................. <tColor>
  [326] getobjprop 1309 ......................... <tColor.red>
  [329] getlocal 5 .............................. <tColor>
  [331] getobjprop 1310 ......................... <tColor.green>
  [334] add ..................................... <tColor.red + tColor.green>
  [335] getlocal 5 .............................. <tColor>
  [337] getobjprop 1311 ......................... <tColor.blue>
  [340] add ..................................... <tColor.red + tColor.green + tColor.blue>
  [341] pushint16 238 ........................... <238>
  [344] pushint8 3 .............................. <3>
  [346] mul ..................................... <238 * 3>
  [347] gt ...................................... <(tColor.red + tColor.green + tColor.blue) > (238 * 3)>
  [348] jmpifz [360] ............................ if (tColor.red + tColor.green + tColor.blue) > (238 * 3) then
  [351] pushcons 37 ............................. <"EEEEEE">
  [353] pusharglist 1 ........................... <"EEEEEE">
  [355] extcall 312 ............................. <rgb("EEEEEE")>
  [358] setlocal 5 .............................. tColor = rgb("EEEEEE")
  [360] getlocal 4 .............................. <tPartObj>
  [362] getlocal 3 .............................. <tPartSymbol>
  [364] getparam 1 .............................. <tmodels>
  [366] getlocal 3 .............................. <tPartSymbol>
  [368] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [370] objcall 9 ............................... <tmodels[tPartSymbol]>
  [372] pushcons 34 ............................. <"model">
  [374] pusharglist 2 ........................... <tmodels[tPartSymbol], "model">
  [376] objcall 9 ............................... <tmodels[tPartSymbol]["model"]>
  [378] getlocal 5 .............................. <tColor>
  [380] getprop 34 .............................. <pDirection>
  [382] getlocal 0 .............................. <tAction>
  [384] getparam 0 .............................. <me>
  [386] pusharglistnoret 7 ...................... <tPartObj, tPartSymbol, tmodels[tPartSymbol]["model"], tColor, pDirection, tAction, me>
  [388] objcall 176 ............................. tPartObj.define(tPartSymbol, tmodels[tPartSymbol]["model"], tColor, pDirection, tAction, me)
  [390] getprop 1222 ............................ <pPartList>
  [393] getlocal 4 .............................. <tPartObj>
  [395] pusharglistnoret 2 ...................... <pPartList, tPartObj>
  [397] objcall 186 ............................. pPartList.add(tPartObj)
  [399] getprop 1251 ............................ <pColors>
  [402] getlocal 3 .............................. <tPartSymbol>
  [404] getlocal 5 .............................. <tColor>
  [406] pusharglistnoret 3 ...................... <pColors, tPartSymbol, tColor>
  [408] objcall 664 ............................. pColors.setaProp(tPartSymbol, tColor)
  [411] pushint8 1
  [413] getlocal 2
  [415] add
  [416] setlocal 2
  [418] endrepeat [ 27]
  [421] pusharglist 0 ........................... <[:]>
  [423] pushproplist ............................ <[:]>
  [424] setprop 1223 ............................ pPartIndex = [:]
  [427] pushint8 1 .............................. <1>
  [429] setlocal 2
  [431] getlocal 2
  [433] getprop 1222 ............................ <pPartList>
  [436] getobjprop 14 ........................... <pPartList.count>
  [438] lteq
  [439] jmpifz [472] ............................ repeat with i = 1 to pPartList.count
  [442] getprop 1223 ............................ <pPartIndex>
  [445] getprop 1222 ............................ <pPartList>
  [448] getlocal 2 .............................. <i>
  [450] pusharglist 2 ........................... <pPartList, i>
  [452] objcall 9 ............................... <pPartList[i]>
  [454] getobjprop 1312 ......................... <pPartList[i].pPart>
  [457] getlocal 2 .............................. <i>
  [459] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [461] objcall 173 ............................. pPartIndex[pPartList[i].pPart] = i
  [463] pushint8 1
  [465] getlocal 2
  [467] add
  [468] setlocal 2
  [470] endrepeat [431]
  [472] pushint8 1 .............................. <1>
  [474] pusharglistnoret 1 ...................... <1>
  [476] extcall 21 .............................. return 1
  [478] ret
end

on arrangeParts me
  [  0] getprop 1223 ............................ <pPartIndex>
  [  3] pushcons 40 ............................. <"lg">
  [  5] pusharglist 2 ........................... <pPartIndex, "lg">
  [  7] objcall 9 ............................... <pPartIndex["lg"]>
  [  9] getprop 1223 ............................ <pPartIndex>
  [ 12] pushcons 30 ............................. <"sh">
  [ 14] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 16] objcall 9 ............................... <pPartIndex["sh"]>
  [ 18] lt ...................................... <pPartIndex["lg"] < pPartIndex["sh"]>
  [ 19] jmpifz [ 47] ............................ if pPartIndex["lg"] < pPartIndex["sh"] then / else
  [ 22] getprop 1223 ............................ <pPartIndex>
  [ 25] pushcons 40 ............................. <"lg">
  [ 27] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 29] objcall 9 ............................... <pPartIndex["lg"]>
  [ 31] setlocal 0 .............................. tIndex1 = pPartIndex["lg"]
  [ 33] getprop 1223 ............................ <pPartIndex>
  [ 36] pushcons 30 ............................. <"sh">
  [ 38] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 40] objcall 9 ............................... <pPartIndex["sh"]>
  [ 42] setlocal 1 .............................. tIndex2 = pPartIndex["sh"]
  [ 44] jmp [ 69]
  [ 47] getprop 1223 ............................ <pPartIndex>
  [ 50] pushcons 30 ............................. <"sh">
  [ 52] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 54] objcall 9 ............................... <pPartIndex["sh"]>
  [ 56] setlocal 0 .............................. tIndex1 = pPartIndex["sh"]
  [ 58] getprop 1223 ............................ <pPartIndex>
  [ 61] pushcons 40 ............................. <"lg">
  [ 63] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 65] objcall 9 ............................... <pPartIndex["lg"]>
  [ 67] setlocal 1 .............................. tIndex2 = pPartIndex["lg"]
  [ 69] getprop 1222 ............................ <pPartList>
  [ 72] getprop 1223 ............................ <pPartIndex>
  [ 75] pushcons 40 ............................. <"lg">
  [ 77] pusharglist 2 ........................... <pPartIndex, "lg">
  [ 79] objcall 9 ............................... <pPartIndex["lg"]>
  [ 81] pusharglist 2 ........................... <pPartList, pPartIndex["lg"]>
  [ 83] objcall 9 ............................... <pPartList[pPartIndex["lg"]]>
  [ 85] setlocal 2 .............................. tLG = pPartList[pPartIndex["lg"]]
  [ 87] getprop 1222 ............................ <pPartList>
  [ 90] getprop 1223 ............................ <pPartIndex>
  [ 93] pushcons 30 ............................. <"sh">
  [ 95] pusharglist 2 ........................... <pPartIndex, "sh">
  [ 97] objcall 9 ............................... <pPartIndex["sh"]>
  [ 99] pusharglist 2 ........................... <pPartList, pPartIndex["sh"]>
  [101] objcall 9 ............................... <pPartList[pPartIndex["sh"]]>
  [103] setlocal 3 .............................. tSH = pPartList[pPartIndex["sh"]]
  [105] getprop 1238 ............................ <pMainAction>
  [108] peek 0 .................................. case pMainAction of
  [110] pushcons 31 ............................. <"sit">
  [112] nteq
  [113] jmpifz [124] ............................ (case) "sit", ...
  [116] peek 0
  [118] pushcons 12 ............................. <"lay">
  [120] eq
  [121] jmpifz [191] ............................ (case) ..., "lay":
  [124] getprop 1224 ............................ <pFlipList>
  [127] getprop 34 .............................. <pDirection>
  [129] pushint8 1 .............................. <1>
  [131] add ..................................... <pDirection + 1>
  [132] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [134] objcall 9 ............................... <pFlipList[pDirection + 1]>
  [136] pushzero ................................ <0>
  [137] eq ...................................... <pFlipList[pDirection + 1] = 0>
  [138] jmpifz [166] ............................ if pFlipList[pDirection + 1] = 0 then / else
  [141] getprop 1222 ............................ <pPartList>
  [144] getlocal 0 .............................. <tIndex1>
  [146] getlocal 3 .............................. <tSH>
  [148] pusharglistnoret 3 ...................... <pPartList, tIndex1, tSH>
  [150] objcall 173 ............................. pPartList[tIndex1] = tSH
  [152] getprop 1222 ............................ <pPartList>
  [155] getlocal 1 .............................. <tIndex2>
  [157] getlocal 2 .............................. <tLG>
  [159] pusharglistnoret 3 ...................... <pPartList, tIndex2, tLG>
  [161] objcall 173 ............................. pPartList[tIndex2] = tLG
  [163] jmp [188]
  [166] getprop 1222 ............................ <pPartList>
  [169] getlocal 0 .............................. <tIndex1>
  [171] getlocal 2 .............................. <tLG>
  [173] pusharglistnoret 3 ...................... <pPartList, tIndex1, tLG>
  [175] objcall 173 ............................. pPartList[tIndex1] = tLG
  [177] getprop 1222 ............................ <pPartList>
  [180] getlocal 1 .............................. <tIndex2>
  [182] getlocal 3 .............................. <tSH>
  [184] pusharglistnoret 3 ...................... <pPartList, tIndex2, tSH>
  [186] objcall 173 ............................. pPartList[tIndex2] = tSH
  [188] jmp [213] ............................... (case) otherwise:
  [191] getprop 1222 ............................ <pPartList>
  [194] getlocal 0 .............................. <tIndex1>
  [196] getlocal 3 .............................. <tSH>
  [198] pusharglistnoret 3 ...................... <pPartList, tIndex1, tSH>
  [200] objcall 173 ............................. pPartList[tIndex1] = tSH
  [202] getprop 1222 ............................ <pPartList>
  [205] getlocal 1 .............................. <tIndex2>
  [207] getlocal 2 .............................. <tLG>
  [209] pusharglistnoret 3 ...................... <pPartList, tIndex2, tLG>
  [211] objcall 173 ............................. pPartList[tIndex2] = tLG
  [213] pop 1 ................................... end case
  [215] getprop 1222 ............................ <pPartList>
  [218] getprop 1223 ............................ <pPartIndex>
  [221] pushcons 41 ............................. <"rs">
  [223] pusharglist 2 ........................... <pPartIndex, "rs">
  [225] objcall 9 ............................... <pPartIndex["rs"]>
  [227] pusharglist 2 ........................... <pPartList, pPartIndex["rs"]>
  [229] objcall 9 ............................... <pPartList[pPartIndex["rs"]]>
  [231] setlocal 4 .............................. tRS = pPartList[pPartIndex["rs"]]
  [233] getprop 1222 ............................ <pPartList>
  [236] getprop 1223 ............................ <pPartIndex>
  [239] pushcons 42 ............................. <"rh">
  [241] pusharglist 2 ........................... <pPartIndex, "rh">
  [243] objcall 9 ............................... <pPartIndex["rh"]>
  [245] pusharglist 2 ........................... <pPartList, pPartIndex["rh"]>
  [247] objcall 9 ............................... <pPartList[pPartIndex["rh"]]>
  [249] setlocal 5 .............................. tRH = pPartList[pPartIndex["rh"]]
  [251] getprop 1222 ............................ <pPartList>
  [254] getprop 1223 ............................ <pPartIndex>
  [257] pushcons 43 ............................. <"ri">
  [259] pusharglist 2 ........................... <pPartIndex, "ri">
  [261] objcall 9 ............................... <pPartIndex["ri"]>
  [263] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [265] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [267] setlocal 6 .............................. tRI = pPartList[pPartIndex["ri"]]
  [269] getprop 1222 ............................ <pPartList>
  [272] getprop 1223 ............................ <pPartIndex>
  [275] pushcons 41 ............................. <"rs">
  [277] pusharglist 2 ........................... <pPartIndex, "rs">
  [279] objcall 9 ............................... <pPartIndex["rs"]>
  [281] pusharglistnoret 2 ...................... <pPartList, pPartIndex["rs"]>
  [283] objcall 787 ............................. pPartList.deleteAt(pPartIndex["rs"])
  [286] getprop 1222 ............................ <pPartList>
  [289] getprop 1223 ............................ <pPartIndex>
  [292] pushcons 42 ............................. <"rh">
  [294] pusharglist 2 ........................... <pPartIndex, "rh">
  [296] objcall 9 ............................... <pPartIndex["rh"]>
  [298] pusharglistnoret 2 ...................... <pPartList, pPartIndex["rh"]>
  [300] objcall 787 ............................. pPartList.deleteAt(pPartIndex["rh"])
  [303] getprop 1222 ............................ <pPartList>
  [306] getprop 1223 ............................ <pPartIndex>
  [309] pushcons 43 ............................. <"ri">
  [311] pusharglist 2 ........................... <pPartIndex, "ri">
  [313] objcall 9 ............................... <pPartIndex["ri"]>
  [315] pusharglistnoret 2 ...................... <pPartList, pPartIndex["ri"]>
  [317] objcall 787 ............................. pPartList.deleteAt(pPartIndex["ri"])
  [320] getlocal 5 .............................. <tRH>
  [322] getobjprop 1315 ......................... <tRH.pActionRh>
  [325] pushcons 44 ............................. <"drk">
  [327] eq ...................................... <tRH.pActionRh = "drk">
  [328] pushzero ................................ <0>
  [329] pushint8 6 .............................. <6>
  [331] pusharglist 2 ........................... <[0, 6]>
  [333] pushlist ................................ <[0, 6]>
  [334] getprop 34 .............................. <pDirection>
  [336] pusharglist 2 ........................... <[0, 6], pDirection>
  [338] objcall 240 ............................. <[0, 6].getPos(pDirection)>
  [340] pushzero ................................ <0>
  [341] nteq .................................... <[0, 6].getPos(pDirection) <> 0>
  [342] and ..................................... <(tRH.pActionRh = "drk") and ([0, 6].getPos(pDirection) <> 0)>
  [343] jmpifz [381] ............................ if (tRH.pActionRh = "drk") and ([0, 6].getPos(pDirection) <> 0) then / else
  [346] getprop 1222 ............................ <pPartList>
  [349] pushint8 1 .............................. <1>
  [351] getlocal 6 .............................. <tRI>
  [353] pusharglistnoret 3 ...................... <pPartList, 1, tRI>
  [355] objcall 1316 ............................ pPartList.addAt(1, tRI)
  [358] getprop 1222 ............................ <pPartList>
  [361] getlocal 5 .............................. <tRH>
  [363] pusharglistnoret 2 ...................... <pPartList, tRH>
  [365] objcall 788 ............................. pPartList.append(tRH)
  [368] getprop 1222 ............................ <pPartList>
  [371] getlocal 4 .............................. <tRS>
  [373] pusharglistnoret 2 ...................... <pPartList, tRS>
  [375] objcall 788 ............................. pPartList.append(tRS)
  [378] jmp [511]
  [381] getprop 34 .............................. <pDirection>
  [383] pushint8 7 .............................. <7>
  [385] eq ...................................... <pDirection = 7>
  [386] jmpifz [428] ............................ if pDirection = 7 then / else
  [389] getprop 1222 ............................ <pPartList>
  [392] pushint8 1 .............................. <1>
  [394] getlocal 6 .............................. <tRI>
  [396] pusharglistnoret 3 ...................... <pPartList, 1, tRI>
  [398] objcall 1316 ............................ pPartList.addAt(1, tRI)
  [401] getprop 1222 ............................ <pPartList>
  [404] pushint8 2 .............................. <2>
  [406] getlocal 5 .............................. <tRH>
  [408] pusharglistnoret 3 ...................... <pPartList, 2, tRH>
  [410] objcall 1316 ............................ pPartList.addAt(2, tRH)
  [413] getprop 1222 ............................ <pPartList>
  [416] pushint8 3 .............................. <3>
  [418] getlocal 4 .............................. <tRS>
  [420] pusharglistnoret 3 ...................... <pPartList, 3, tRS>
  [422] objcall 1316 ............................ pPartList.addAt(3, tRS)
  [425] jmp [511]
  [428] getprop 34 .............................. <pDirection>
  [430] pushint8 3 .............................. <3>
  [432] eq ...................................... <pDirection = 3>
  [433] getprop 1243 ............................ <pDancing>
  [436] pushzero ................................ <0>
  [437] gt ...................................... <pDancing > 0>
  [438] and ..................................... <(pDirection = 3) and (pDancing > 0)>
  [439] jmpifz [481] ............................ if (pDirection = 3) and (pDancing > 0) then / else
  [442] getprop 1222 ............................ <pPartList>
  [445] pushint8 7 .............................. <7>
  [447] getlocal 6 .............................. <tRI>
  [449] pusharglistnoret 3 ...................... <pPartList, 7, tRI>
  [451] objcall 1316 ............................ pPartList.addAt(7, tRI)
  [454] getprop 1222 ............................ <pPartList>
  [457] pushint8 8 .............................. <8>
  [459] getlocal 5 .............................. <tRH>
  [461] pusharglistnoret 3 ...................... <pPartList, 8, tRH>
  [463] objcall 1316 ............................ pPartList.addAt(8, tRH)
  [466] getprop 1222 ............................ <pPartList>
  [469] pushint8 9 .............................. <9>
  [471] getlocal 4 .............................. <tRS>
  [473] pusharglistnoret 3 ...................... <pPartList, 9, tRS>
  [475] objcall 1316 ............................ pPartList.addAt(9, tRS)
  [478] jmp [511]
  [481] getprop 1222 ............................ <pPartList>
  [484] getlocal 6 .............................. <tRI>
  [486] pusharglistnoret 2 ...................... <pPartList, tRI>
  [488] objcall 788 ............................. pPartList.append(tRI)
  [491] getprop 1222 ............................ <pPartList>
  [494] getlocal 5 .............................. <tRH>
  [496] pusharglistnoret 2 ...................... <pPartList, tRH>
  [498] objcall 788 ............................. pPartList.append(tRH)
  [501] getprop 1222 ............................ <pPartList>
  [504] getlocal 4 .............................. <tRS>
  [506] pusharglistnoret 2 ...................... <pPartList, tRS>
  [508] objcall 788 ............................. pPartList.append(tRS)
  [511] pushint8 1 .............................. <1>
  [513] setlocal 7
  [515] getlocal 7
  [517] getprop 1222 ............................ <pPartList>
  [520] getobjprop 14 ........................... <pPartList.count>
  [522] lteq
  [523] jmpifz [556] ............................ repeat with i = 1 to pPartList.count
  [526] getprop 1223 ............................ <pPartIndex>
  [529] getprop 1222 ............................ <pPartList>
  [532] getlocal 7 .............................. <i>
  [534] pusharglist 2 ........................... <pPartList, i>
  [536] objcall 9 ............................... <pPartList[i]>
  [538] getobjprop 1312 ......................... <pPartList[i].pPart>
  [541] getlocal 7 .............................. <i>
  [543] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [545] objcall 173 ............................. pPartIndex[pPartList[i].pPart] = i
  [547] pushint8 1
  [549] getlocal 7
  [551] add
  [552] setlocal 7
  [554] endrepeat [515]
  [556] getprop 1279 ............................ <pLastDir>
  [559] getprop 34 .............................. <pDirection>
  [561] eq ...................................... <pLastDir = pDirection>
  [562] jmpifz [569] ............................ if pLastDir = pDirection then
  [565] pusharglistnoret 0 ...................... <>
  [567] extcall 21 .............................. return 
  [569] getprop 34 .............................. <pDirection>
  [571] setprop 1279 ............................ pLastDir = pDirection
  [574] getprop 1222 ............................ <pPartList>
  [577] getprop 1223 ............................ <pPartIndex>
  [580] pushcons 45 ............................. <"ls">
  [582] pusharglist 2 ........................... <pPartIndex, "ls">
  [584] objcall 9 ............................... <pPartIndex["ls"]>
  [586] pusharglist 2 ........................... <pPartList, pPartIndex["ls"]>
  [588] objcall 9 ............................... <pPartList[pPartIndex["ls"]]>
  [590] setlocal 8 .............................. tLS = pPartList[pPartIndex["ls"]]
  [592] getprop 1222 ............................ <pPartList>
  [595] getprop 1223 ............................ <pPartIndex>
  [598] pushcons 46 ............................. <"lh">
  [600] pusharglist 2 ........................... <pPartIndex, "lh">
  [602] objcall 9 ............................... <pPartIndex["lh"]>
  [604] pusharglist 2 ........................... <pPartList, pPartIndex["lh"]>
  [606] objcall 9 ............................... <pPartList[pPartIndex["lh"]]>
  [608] setlocal 9 .............................. tLH = pPartList[pPartIndex["lh"]]
  [610] getprop 1222 ............................ <pPartList>
  [613] getprop 1223 ............................ <pPartIndex>
  [616] pushcons 47 ............................. <"li">
  [618] pusharglist 2 ........................... <pPartIndex, "li">
  [620] objcall 9 ............................... <pPartIndex["li"]>
  [622] pusharglist 2 ........................... <pPartList, pPartIndex["li"]>
  [624] objcall 9 ............................... <pPartList[pPartIndex["li"]]>
  [626] setlocal 10 ............................. tLI = pPartList[pPartIndex["li"]]
  [628] getprop 1222 ............................ <pPartList>
  [631] getprop 1223 ............................ <pPartIndex>
  [634] pushcons 45 ............................. <"ls">
  [636] pusharglist 2 ........................... <pPartIndex, "ls">
  [638] objcall 9 ............................... <pPartIndex["ls"]>
  [640] pusharglistnoret 2 ...................... <pPartList, pPartIndex["ls"]>
  [642] objcall 787 ............................. pPartList.deleteAt(pPartIndex["ls"])
  [645] getprop 1222 ............................ <pPartList>
  [648] getprop 1223 ............................ <pPartIndex>
  [651] pushcons 46 ............................. <"lh">
  [653] pusharglist 2 ........................... <pPartIndex, "lh">
  [655] objcall 9 ............................... <pPartIndex["lh"]>
  [657] pusharglistnoret 2 ...................... <pPartList, pPartIndex["lh"]>
  [659] objcall 787 ............................. pPartList.deleteAt(pPartIndex["lh"])
  [662] getprop 1222 ............................ <pPartList>
  [665] getprop 1223 ............................ <pPartIndex>
  [668] pushcons 47 ............................. <"li">
  [670] pusharglist 2 ........................... <pPartIndex, "li">
  [672] objcall 9 ............................... <pPartIndex["li"]>
  [674] pusharglistnoret 2 ...................... <pPartList, pPartIndex["li"]>
  [676] objcall 787 ............................. pPartList.deleteAt(pPartIndex["li"])
  [679] getprop 34 .............................. <pDirection>
  [681] peek 0 .................................. case pDirection of
  [683] pushint8 3 .............................. <3>
  [685] eq
  [686] jmpifz [728] ............................ (case) 3:
  [689] getprop 1222 ............................ <pPartList>
  [692] pushint8 8 .............................. <8>
  [694] getlocal 10 ............................. <tLI>
  [696] pusharglistnoret 3 ...................... <pPartList, 8, tLI>
  [698] objcall 1316 ............................ pPartList.addAt(8, tLI)
  [701] getprop 1222 ............................ <pPartList>
  [704] pushint8 9 .............................. <9>
  [706] getlocal 9 .............................. <tLH>
  [708] pusharglistnoret 3 ...................... <pPartList, 9, tLH>
  [710] objcall 1316 ............................ pPartList.addAt(9, tLH)
  [713] getprop 1222 ............................ <pPartList>
  [716] pushint8 10 ............................. <10>
  [718] getlocal 8 .............................. <tLS>
  [720] pusharglistnoret 3 ...................... <pPartList, 10, tLS>
  [722] objcall 1316 ............................ pPartList.addAt(10, tLS)
  [725] jmp [764] ............................... (case) otherwise:
  [728] getprop 1222 ............................ <pPartList>
  [731] pushint8 1 .............................. <1>
  [733] getlocal 10 ............................. <tLI>
  [735] pusharglistnoret 3 ...................... <pPartList, 1, tLI>
  [737] objcall 1316 ............................ pPartList.addAt(1, tLI)
  [740] getprop 1222 ............................ <pPartList>
  [743] pushint8 2 .............................. <2>
  [745] getlocal 9 .............................. <tLH>
  [747] pusharglistnoret 3 ...................... <pPartList, 2, tLH>
  [749] objcall 1316 ............................ pPartList.addAt(2, tLH)
  [752] getprop 1222 ............................ <pPartList>
  [755] pushint8 3 .............................. <3>
  [757] getlocal 8 .............................. <tLS>
  [759] pusharglistnoret 3 ...................... <pPartList, 3, tLS>
  [761] objcall 1316 ............................ pPartList.addAt(3, tLS)
  [764] pop 1 ................................... end case
  [766] pushint8 1 .............................. <1>
  [768] setlocal 7
  [770] getlocal 7
  [772] getprop 1222 ............................ <pPartList>
  [775] getobjprop 14 ........................... <pPartList.count>
  [777] lteq
  [778] jmpifz [811] ............................ repeat with i = 1 to pPartList.count
  [781] getprop 1223 ............................ <pPartIndex>
  [784] getprop 1222 ............................ <pPartList>
  [787] getlocal 7 .............................. <i>
  [789] pusharglist 2 ........................... <pPartList, i>
  [791] objcall 9 ............................... <pPartList[i]>
  [793] getobjprop 1312 ......................... <pPartList[i].pPart>
  [796] getlocal 7 .............................. <i>
  [798] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [800] objcall 173 ............................. pPartIndex[pPartList[i].pPart] = i
  [802] pushint8 1
  [804] getlocal 7
  [806] add
  [807] setlocal 7
  [809] endrepeat [770]
  [811] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 252 .......................... <tImg_a.width>
  [  4] getparam 1 .............................. <tImg_a>
  [  6] getobjprop 291 .......................... <tImg_a.height>
  [  9] getparam 1 .............................. <tImg_a>
  [ 11] getobjprop 1162 ......................... <tImg_a.depth>
  [ 14] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth>
  [ 16] extcall 290 ............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth)>
  [ 19] setlocal 0 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth)
  [ 21] getparam 1 .............................. <tImg_a>
  [ 23] getobjprop 252 .......................... <tImg_a.width>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 28] extcall 293 ............................. <point(tImg_a.width, 0)>
  [ 31] pushzero ................................ <0>
  [ 32] pushzero ................................ <0>
  [ 33] pusharglist 2 ........................... <0, 0>
  [ 35] extcall 293 ............................. <point(0, 0)>
  [ 38] pushzero ................................ <0>
  [ 39] getparam 1 .............................. <tImg_a>
  [ 41] getobjprop 291 .......................... <tImg_a.height>
  [ 44] pusharglist 2 ........................... <0, tImg_a.height>
  [ 46] extcall 293 ............................. <point(0, tImg_a.height)>
  [ 49] getparam 1 .............................. <tImg_a>
  [ 51] getobjprop 252 .......................... <tImg_a.width>
  [ 53] getparam 1 .............................. <tImg_a>
  [ 55] getobjprop 291 .......................... <tImg_a.height>
  [ 58] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 60] extcall 293 ............................. <point(tImg_a.width, tImg_a.height)>
  [ 63] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 65] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 66] setlocal 1 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [ 68] getlocal 0 .............................. <tImg_b>
  [ 70] getparam 1 .............................. <tImg_a>
  [ 72] getlocal 1 .............................. <tQuad>
  [ 74] getparam 1 .............................. <tImg_a>
  [ 76] getobjprop 322 .......................... <tImg_a.rect>
  [ 79] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [ 81] objcall 323 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [ 84] getlocal 0 .............................. <tImg_b>
  [ 86] pusharglistnoret 1 ...................... <tImg_b>
  [ 88] extcall 21 .............................. return tImg_b
  [ 90] ret
end

on getCanvasName me
  [  0] getprop 1269 ............................ <pClass>
  [  3] getprop 1221 ............................ <pName>
  [  6] joinpadstr .............................. <pClass && pName>
  [  7] getparam 0 .............................. <me>
  [  9] pusharglist 1 ........................... <me>
  [ 11] objcall 156 ............................. <me.getID()>
  [ 13] joinstr ................................. <pClass && pName & me.getID()>
  [ 14] pushcons 48 ............................. <"Canvas">
  [ 16] joinpadstr .............................. <pClass && pName & me.getID() && "Canvas">
  [ 17] pusharglistnoret 1 ...................... <pClass && pName & me.getID() && "Canvas">
  [ 19] extcall 21 .............................. return pClass && pName & me.getID() && "Canvas"
  [ 21] ret
end

on action_mv me, tProps
  [  0] pushcons 49 ............................. <"wlk">
  [  2] setprop 1238 ............................ pMainAction = "wlk"
  [  5] pushint8 1 .............................. <1>
  [  7] setprop 1239 ............................ pMoving = 1
  [ 10] pushzero ................................ <0>
  [ 11] setprop 1259 ............................ pBaseLocZ = 0
  [ 14] getmovieprop 29 ......................... <the itemDelimiter>
  [ 16] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 18] pushcons 50 ............................. <",">
  [ 20] setmovieprop 29 ......................... the itemDelimiter = ","
  [ 22] getparam 1 .............................. <tProps>
  [ 24] pushsymb 461 ............................ <#word>
  [ 27] pushint8 2 .............................. <2>
  [ 29] pusharglist 3 ........................... <tProps, #word, 2>
  [ 31] objcall 33 .............................. <tProps.word[2]>
  [ 33] setlocal 1 .............................. tloc = tProps.word[2]
  [ 35] getlocal 1 .............................. <tloc>
  [ 37] pushsymb 32 ............................. <#item>
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglist 3 ........................... <tloc, #item, 1>
  [ 43] objcall 33 .............................. <tloc.item[1]>
  [ 45] pusharglist 1 ........................... <tloc.item[1]>
  [ 47] extcall 451 ............................. <integer(tloc.item[1])>
  [ 50] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 52] getlocal 1 .............................. <tloc>
  [ 54] pushsymb 32 ............................. <#item>
  [ 56] pushint8 2 .............................. <2>
  [ 58] pusharglist 3 ........................... <tloc, #item, 2>
  [ 60] objcall 33 .............................. <tloc.item[2]>
  [ 62] pusharglist 1 ........................... <tloc.item[2]>
  [ 64] extcall 451 ............................. <integer(tloc.item[2])>
  [ 67] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 69] getlocal 1 .............................. <tloc>
  [ 71] pushsymb 32 ............................. <#item>
  [ 73] pushint8 3 .............................. <3>
  [ 75] pusharglist 3 ........................... <tloc, #item, 3>
  [ 77] objcall 33 .............................. <tloc.item[3]>
  [ 79] pusharglist 1 ........................... <tloc.item[3]>
  [ 81] extcall 766 ............................. <getLocalFloat(tloc.item[3])>
  [ 84] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 86] getlocal 0 .............................. <tDelim>
  [ 88] setmovieprop 29 ......................... the itemDelimiter = tDelim
  [ 90] getmovieprop 13 ......................... <the milliSeconds>
  [ 92] setprop 1233 ............................ pMoveStart = the milliSeconds
  [ 95] getprop 994 ............................. <pGeometry>
  [ 98] getprop 494 ............................. <pLocX>
  [101] getprop 496 ............................. <pLocY>
  [104] getprop 498 ............................. <pLocH>
  [107] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH>
  [109] objcall 967 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)>
  [112] setprop 1228 ............................ pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)
  [115] getprop 994 ............................. <pGeometry>
  [118] getlocal 2 .............................. <tLocX>
  [120] getlocal 3 .............................. <tLocY>
  [122] getlocal 4 .............................. <tLocH>
  [124] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [126] objcall 967 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [129] setprop 1229 ............................ pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [132] pushsymb 1298 ........................... <#defineActMultiple>
  [135] getprop 1222 ............................ <pPartList>
  [138] pushcons 49 ............................. <"wlk">
  [140] pushcons 51 ............................. <"bd">
  [142] pushcons 40 ............................. <"lg">
  [144] pushcons 46 ............................. <"lh">
  [146] pushcons 42 ............................. <"rh">
  [148] pushcons 45 ............................. <"ls">
  [150] pushcons 41 ............................. <"rs">
  [152] pushcons 30 ............................. <"sh">
  [154] pusharglist 7 ........................... <["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [156] pushlist ................................ <["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [157] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "wlk", ["bd", "lg", "lh", "rh", "ls", "rs", "sh"]>
  [159] extcall 178 ............................. call(#defineActMultiple, pPartList, "wlk", ["bd", "lg", "lh", "rh", "ls", "rs", "sh"])
  [161] ret
end

on action_sld me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1239 ............................ pMoving = 1
  [  5] pushzero ................................ <0>
  [  6] setprop 1259 ............................ pBaseLocZ = 0
  [  9] getmovieprop 29 ......................... <the itemDelimiter>
  [ 11] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 13] pushcons 50 ............................. <",">
  [ 15] setmovieprop 29 ......................... the itemDelimiter = ","
  [ 17] getparam 1 .............................. <tProps>
  [ 19] pushsymb 461 ............................ <#word>
  [ 22] pushint8 2 .............................. <2>
  [ 24] pusharglist 3 ........................... <tProps, #word, 2>
  [ 26] objcall 33 .............................. <tProps.word[2]>
  [ 28] setlocal 1 .............................. tloc = tProps.word[2]
  [ 30] getlocal 1 .............................. <tloc>
  [ 32] pushsymb 32 ............................. <#item>
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglist 3 ........................... <tloc, #item, 1>
  [ 38] objcall 33 .............................. <tloc.item[1]>
  [ 40] pusharglist 1 ........................... <tloc.item[1]>
  [ 42] extcall 451 ............................. <integer(tloc.item[1])>
  [ 45] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 47] getlocal 1 .............................. <tloc>
  [ 49] pushsymb 32 ............................. <#item>
  [ 51] pushint8 2 .............................. <2>
  [ 53] pusharglist 3 ........................... <tloc, #item, 2>
  [ 55] objcall 33 .............................. <tloc.item[2]>
  [ 57] pusharglist 1 ........................... <tloc.item[2]>
  [ 59] extcall 451 ............................. <integer(tloc.item[2])>
  [ 62] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 64] getlocal 1 .............................. <tloc>
  [ 66] pushsymb 32 ............................. <#item>
  [ 68] pushint8 3 .............................. <3>
  [ 70] pusharglist 3 ........................... <tloc, #item, 3>
  [ 72] objcall 33 .............................. <tloc.item[3]>
  [ 74] pusharglist 1 ........................... <tloc.item[3]>
  [ 76] extcall 766 ............................. <getLocalFloat(tloc.item[3])>
  [ 79] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 81] getlocal 0 .............................. <tDelim>
  [ 83] setmovieprop 29 ......................... the itemDelimiter = tDelim
  [ 85] getparam 1 .............................. <tProps>
  [ 87] pushsymb 461 ............................ <#word>
  [ 90] pushint8 3 .............................. <3>
  [ 92] pusharglist 3 ........................... <tProps, #word, 3>
  [ 94] objcall 33 .............................. <tProps.word[3]>
  [ 96] pusharglist 1 ........................... <tProps.word[3]>
  [ 98] extcall 451 ............................. <integer(tProps.word[3])>
  [101] setprop 1256 ............................ pQueuesWithObj = integer(tProps.word[3])
  [104] getprop 994 ............................. <pGeometry>
  [107] getprop 494 ............................. <pLocX>
  [110] getprop 496 ............................. <pLocY>
  [113] getprop 498 ............................. <pLocH>
  [116] getprop 1231 ............................ <pRestingHeight>
  [119] add ..................................... <pLocH + pRestingHeight>
  [120] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [122] objcall 967 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [125] setprop 1228 ............................ pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [128] getprop 994 ............................. <pGeometry>
  [131] getlocal 2 .............................. <tLocX>
  [133] getlocal 3 .............................. <tLocY>
  [135] getlocal 4 .............................. <tLocH>
  [137] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [139] objcall 967 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [142] setprop 1229 ............................ pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [145] getprop 494 ............................. <pLocX>
  [148] getprop 496 ............................. <pLocY>
  [151] getprop 498 ............................. <pLocH>
  [154] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [156] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [157] setprop 1230 ............................ pPreviousLoc = [pLocX, pLocY, pLocH]
  [160] getparam 1 .............................. <tProps>
  [162] pushsymb 461 ............................ <#word>
  [165] pushint8 4 .............................. <4>
  [167] pusharglist 3 ........................... <tProps, #word, 4>
  [169] objcall 33 .............................. <tProps.word[4]>
  [171] setlocal 5 .............................. tStartTime = tProps.word[4]
  [173] getlocal 5 .............................. <tStartTime>
  [175] pusharglist 1 ........................... <tStartTime>
  [177] extcall 10 .............................. <voidp(tStartTime)>
  [179] jmpifz [190] ............................ if voidp(tStartTime) then / else
  [182] getmovieprop 13 ......................... <the milliSeconds>
  [184] setprop 1233 ............................ pMoveStart = the milliSeconds
  [187] jmp [195]
  [190] getlocal 5 .............................. <tStartTime>
  [192] setprop 1233 ............................ pMoveStart = tStartTime
  [195] ret
end

on action_sit me, tProps
  [  0] pushsymb 1298 ........................... <#defineActMultiple>
  [  3] getprop 1222 ............................ <pPartList>
  [  6] pushcons 31 ............................. <"sit">
  [  8] pushcons 51 ............................. <"bd">
  [ 10] pushcons 40 ............................. <"lg">
  [ 12] pushcons 30 ............................. <"sh">
  [ 14] pusharglist 3 ........................... <["bd", "lg", "sh"]>
  [ 16] pushlist ................................ <["bd", "lg", "sh"]>
  [ 17] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "sit", ["bd", "lg", "sh"]>
  [ 19] extcall 178 ............................. call(#defineActMultiple, pPartList, "sit", ["bd", "lg", "sh"])
  [ 21] pushcons 31 ............................. <"sit">
  [ 23] setprop 1238 ............................ pMainAction = "sit"
  [ 26] getparam 1 .............................. <tProps>
  [ 28] pushsymb 461 ............................ <#word>
  [ 31] pushint8 2 .............................. <2>
  [ 33] pusharglist 3 ........................... <tProps, #word, 2>
  [ 35] objcall 33 .............................. <tProps.word[2]>
  [ 37] pusharglist 1 ........................... <tProps.word[2]>
  [ 39] extcall 766 ............................. <getLocalFloat(tProps.word[2])>
  [ 42] pushfloat32 1.0 ......................... <1.0>
  [ 47] sub ..................................... <getLocalFloat(tProps.word[2]) - 1.0>
  [ 48] setprop 1231 ............................ pRestingHeight = getLocalFloat(tProps.word[2]) - 1.0
  [ 51] getprop 994 ............................. <pGeometry>
  [ 54] getprop 494 ............................. <pLocX>
  [ 57] getprop 496 ............................. <pLocY>
  [ 60] getprop 498 ............................. <pLocH>
  [ 63] getprop 1231 ............................ <pRestingHeight>
  [ 66] add ..................................... <pLocH + pRestingHeight>
  [ 67] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 69] objcall 967 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 72] setprop 1227 ............................ pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 75] getparam 1 .............................. <tProps>
  [ 77] pushsymb 461 ............................ <#word>
  [ 80] pushint8 3 .............................. <3>
  [ 82] pusharglist 3 ........................... <tProps, #word, 3>
  [ 84] objcall 33 .............................. <tProps.word[3]>
  [ 86] pusharglist 1 ........................... <tProps.word[3]>
  [ 88] extcall 451 ............................. <integer(tProps.word[3])>
  [ 91] setlocal 0 .............................. tIsInQueue = integer(tProps.word[3])
  [ 93] getlocal 0 .............................. <tIsInQueue>
  [ 95] setprop 1256 ............................ pQueuesWithObj = tIsInQueue
  [ 98] ret
end

on action_lay me, tProps
  [  0] pushcons 12 ............................. <"lay">
  [  2] setprop 1238 ............................ pMainAction = "lay"
  [  5] pushzero ................................ <0>
  [  6] setprop 1241 ............................ pCarrying = 0
  [  9] getparam 1 .............................. <tProps>
  [ 11] pushsymb 461 ............................ <#word>
  [ 14] pushint8 2 .............................. <2>
  [ 16] pusharglist 3 ........................... <tProps, #word, 2>
  [ 18] objcall 33 .............................. <tProps.word[2]>
  [ 20] pusharglist 1 ........................... <tProps.word[2]>
  [ 22] extcall 766 ............................. <getLocalFloat(tProps.word[2])>
  [ 25] pushfloat32 1.0 ......................... <1.0>
  [ 30] sub ..................................... <getLocalFloat(tProps.word[2]) - 1.0>
  [ 31] setprop 1231 ............................ pRestingHeight = getLocalFloat(tProps.word[2]) - 1.0
  [ 34] getprop 994 ............................. <pGeometry>
  [ 37] getprop 494 ............................. <pLocX>
  [ 40] getprop 496 ............................. <pLocY>
  [ 43] getprop 498 ............................. <pLocH>
  [ 46] getprop 1231 ............................ <pRestingHeight>
  [ 49] add ..................................... <pLocH + pRestingHeight>
  [ 50] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 52] objcall 967 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 55] setprop 1227 ............................ pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 58] getprop 977 ............................. <pXFactor>
  [ 61] pushint8 33 ............................. <33>
  [ 63] lt ...................................... <pXFactor < 33>
  [ 64] jmpifz [138] ............................ if pXFactor < 33 then / else
  [ 67] getprop 1224 ............................ <pFlipList>
  [ 70] getprop 34 .............................. <pDirection>
  [ 72] pushint8 1 .............................. <1>
  [ 74] add ..................................... <pDirection + 1>
  [ 75] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [ 77] objcall 9 ............................... <pFlipList[pDirection + 1]>
  [ 79] peek 0 .................................. case pFlipList[pDirection + 1] of
  [ 81] pushint8 2 .............................. <2>
  [ 83] eq
  [ 84] jmpifz [108] ............................ (case) 2:
  [ 87] getprop 1227 ............................ <pScreenLoc>
  [ 90] pushint8 10 ............................. <10>
  [ 92] inv ..................................... <-10>
  [ 93] pushint8 18 ............................. <18>
  [ 95] pushint16 2000 .......................... <2000>
  [ 98] pusharglist 3 ........................... <[-10, 18, 2000]>
  [100] pushlist ................................ <[-10, 18, 2000]>
  [101] add ..................................... <pScreenLoc + [-10, 18, 2000]>
  [102] setprop 1227 ............................ pScreenLoc = pScreenLoc + [-10, 18, 2000]
  [105] jmp [133]
  [108] peek 0
  [110] pushzero ................................ <0>
  [111] eq
  [112] jmpifz [133] ............................ (case) 0:
  [115] getprop 1227 ............................ <pScreenLoc>
  [118] pushint8 17 ............................. <17>
  [120] inv ..................................... <-17>
  [121] pushint8 18 ............................. <18>
  [123] pushint16 2000 .......................... <2000>
  [126] pusharglist 3 ........................... <[-17, 18, 2000]>
  [128] pushlist ................................ <[-17, 18, 2000]>
  [129] add ..................................... <pScreenLoc + [-17, 18, 2000]>
  [130] setprop 1227 ............................ pScreenLoc = pScreenLoc + [-17, 18, 2000]
  [133] pop 1 ................................... end case
  [135] jmp [205]
  [138] getprop 1224 ............................ <pFlipList>
  [141] getprop 34 .............................. <pDirection>
  [143] pushint8 1 .............................. <1>
  [145] add ..................................... <pDirection + 1>
  [146] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [148] objcall 9 ............................... <pFlipList[pDirection + 1]>
  [150] peek 0 .................................. case pFlipList[pDirection + 1] of
  [152] pushint8 2 .............................. <2>
  [154] eq
  [155] jmpifz [178] ............................ (case) 2:
  [158] getprop 1227 ............................ <pScreenLoc>
  [161] pushint8 10 ............................. <10>
  [163] pushint8 30 ............................. <30>
  [165] pushint16 2000 .......................... <2000>
  [168] pusharglist 3 ........................... <[10, 30, 2000]>
  [170] pushlist ................................ <[10, 30, 2000]>
  [171] add ..................................... <pScreenLoc + [10, 30, 2000]>
  [172] setprop 1227 ............................ pScreenLoc = pScreenLoc + [10, 30, 2000]
  [175] jmp [203]
  [178] peek 0
  [180] pushzero ................................ <0>
  [181] eq
  [182] jmpifz [203] ............................ (case) 0:
  [185] getprop 1227 ............................ <pScreenLoc>
  [188] pushint8 47 ............................. <47>
  [190] inv ..................................... <-47>
  [191] pushint8 32 ............................. <32>
  [193] pushint16 2000 .......................... <2000>
  [196] pusharglist 3 ........................... <[-47, 32, 2000]>
  [198] pushlist ................................ <[-47, 32, 2000]>
  [199] add ..................................... <pScreenLoc + [-47, 32, 2000]>
  [200] setprop 1227 ............................ pScreenLoc = pScreenLoc + [-47, 32, 2000]
  [203] pop 1 ................................... end case
  [205] getprop 977 ............................. <pXFactor>
  [208] pushint8 32 ............................. <32>
  [210] gt ...................................... <pXFactor > 32>
  [211] jmpifz [230] ............................ if pXFactor > 32 then / else
  [214] pushint8 30 ............................. <30>
  [216] pushint8 10 ............................. <10>
  [218] inv ..................................... <-10>
  [219] pusharglist 2 ........................... <30, -10>
  [221] extcall 293 ............................. <point(30, -10)>
  [224] setprop 1225 ............................ pLocFix = point(30, -10)
  [227] jmp [243]
  [230] pushint8 35 ............................. <35>
  [232] pushint8 5 .............................. <5>
  [234] inv ..................................... <-5>
  [235] pusharglist 2 ........................... <35, -5>
  [237] extcall 293 ............................. <point(35, -5)>
  [240] setprop 1225 ............................ pLocFix = point(35, -5)
  [243] pushsymb 1332 ........................... <#layDown>
  [246] getprop 1222 ............................ <pPartList>
  [249] pusharglistnoret 2 ...................... <#layDown, pPartList>
  [251] extcall 178 ............................. call(#layDown, pPartList)
  [253] getprop 34 .............................. <pDirection>
  [255] pushzero ................................ <0>
  [256] eq ...................................... <pDirection = 0>
  [257] jmpifz [269] ............................ if pDirection = 0 then
  [260] pushint8 4 .............................. <4>
  [262] setprop 34 .............................. pDirection = 4
  [264] pushint8 4 .............................. <4>
  [266] setprop 1278 ............................ pHeadDir = 4
  [269] pushsymb 1284 ........................... <#defineDir>
  [272] getprop 1222 ............................ <pPartList>
  [275] getprop 34 .............................. <pDirection>
  [277] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [279] extcall 178 ............................. call(#defineDir, pPartList, pDirection)
  [281] ret
end

on action_carryd me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 411 ............................. <value(tItem)>
  [ 20] pushzero ................................ <0>
  [ 21] gt ...................................... <value(tItem) > 0>
  [ 22] jmpifz [129] ............................ if value(tItem) > 0 then / else
  [ 25] getlocal 0 .............................. <tItem>
  [ 27] setlocal 1 .............................. tCarrying = tItem
  [ 29] pushcons 52 ............................. <"handitem.right.">
  [ 31] getlocal 1 .............................. <tCarrying>
  [ 33] joinstr ................................. <"handitem.right." & tCarrying>
  [ 34] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 36] extcall 239 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 38] jmpifz [ 57] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 41] pushcons 52 ............................. <"handitem.right.">
  [ 43] getlocal 1 .............................. <tCarrying>
  [ 45] joinstr ................................. <"handitem.right." & tCarrying>
  [ 46] pushcons 35 ............................. <"001">
  [ 48] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 50] extcall 121 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 52] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 54] jmp [ 61]
  [ 57] pushcons 35 ............................. <"001">
  [ 59] setlocal 2 .............................. tCarryItm = "001"
  [ 61] pushsymb 1333 ........................... <#doHandWorkRight>
  [ 64] getprop 1222 ............................ <pPartList>
  [ 67] pushcons 53 ............................. <"crr">
  [ 69] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 71] extcall 178 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 73] getprop 1222 ............................ <pPartList>
  [ 76] getprop 1223 ............................ <pPartIndex>
  [ 79] pushcons 43 ............................. <"ri">
  [ 81] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 83] objcall 9 ............................... <pPartIndex["ri"]>
  [ 85] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 87] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [ 89] getlocal 2 .............................. <tCarryItm>
  [ 91] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 93] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [ 96] pushcons 54 ............................. <"handitem">
  [ 98] getlocal 1 .............................. <tCarrying>
  [100] joinstr ................................. <"handitem" & tCarrying>
  [101] pusharglist 1 ........................... <"handitem" & tCarrying>
  [103] extcall 1334 ............................ <textExists("handitem" & tCarrying)>
  [106] jmpifz [126] ............................ if textExists("handitem" & tCarrying) then
  [109] pushcons 54 ............................. <"handitem">
  [111] getlocal 1 .............................. <tCarrying>
  [113] joinstr ................................. <"handitem" & tCarrying>
  [114] pushcons 54 ............................. <"handitem">
  [116] getlocal 1 .............................. <tCarrying>
  [118] joinstr ................................. <"handitem" & tCarrying>
  [119] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [121] extcall 136 ............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [123] setprop 1241 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [126] jmp [209]
  [129] pushsymb 1335 ........................... <#room_component>
  [132] pusharglist 1 ........................... <#room_component>
  [134] extcall 153 ............................. <getObject(#room_component)>
  [136] pusharglist 1 ........................... <getObject(#room_component)>
  [138] objcall 266 ............................. <getObject(#room_component).getRoomID()>
  [141] pushcons 55 ............................. <"private">
  [143] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [144] jmpifz [209] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [147] getparam 1 .............................. <tProps>
  [149] pushsymb 461 ............................ <#word>
  [152] pushint8 2 .............................. <2>
  [154] getparam 1 .............................. <tProps>
  [156] pushsymb 461 ............................ <#word>
  [159] pusharglist 2 ........................... <tProps, #word>
  [161] objcall 14 .............................. <tProps.word.count>
  [163] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [165] objcall 33 .............................. <tProps.word[2..tProps.word.count]>
  [167] setprop 1241 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [170] pushcons 35 ............................. <"001">
  [172] setlocal 2 .............................. tCarryItm = "001"
  [174] pushsymb 1333 ........................... <#doHandWorkRight>
  [177] getprop 1222 ............................ <pPartList>
  [180] pushcons 53 ............................. <"crr">
  [182] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [184] extcall 178 ............................. call(#doHandWorkRight, pPartList, "crr")
  [186] getprop 1222 ............................ <pPartList>
  [189] getprop 1223 ............................ <pPartIndex>
  [192] pushcons 43 ............................. <"ri">
  [194] pusharglist 2 ........................... <pPartIndex, "ri">
  [196] objcall 9 ............................... <pPartIndex["ri"]>
  [198] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [200] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [202] getlocal 2 .............................. <tCarryItm>
  [204] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [206] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [209] ret
end

on action_cri me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 411 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 356 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [132] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 239 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 56 ............................. <"075">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "075">
  [ 53] extcall 121 ............................. <getVariable("handitem.right." & tCarrying, "075")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "075")
  [ 57] jmp [ 64]
  [ 60] pushcons 56 ............................. <"075">
  [ 62] setlocal 2 .............................. tCarryItm = "075"
  [ 64] pushsymb 1333 ........................... <#doHandWorkRight>
  [ 67] getprop 1222 ............................ <pPartList>
  [ 70] pushcons 53 ............................. <"crr">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 74] extcall 178 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 76] getprop 1222 ............................ <pPartList>
  [ 79] getprop 1223 ............................ <pPartIndex>
  [ 82] pushcons 43 ............................. <"ri">
  [ 84] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 86] objcall 9 ............................... <pPartIndex["ri"]>
  [ 88] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 90] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [ 92] getlocal 2 .............................. <tCarryItm>
  [ 94] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 96] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [ 99] pushcons 54 ............................. <"handitem">
  [101] getlocal 1 .............................. <tCarrying>
  [103] joinstr ................................. <"handitem" & tCarrying>
  [104] pusharglist 1 ........................... <"handitem" & tCarrying>
  [106] extcall 1334 ............................ <textExists("handitem" & tCarrying)>
  [109] jmpifz [129] ............................ if textExists("handitem" & tCarrying) then
  [112] pushcons 54 ............................. <"handitem">
  [114] getlocal 1 .............................. <tCarrying>
  [116] joinstr ................................. <"handitem" & tCarrying>
  [117] pushcons 54 ............................. <"handitem">
  [119] getlocal 1 .............................. <tCarrying>
  [121] joinstr ................................. <"handitem" & tCarrying>
  [122] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [124] extcall 136 ............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [126] setprop 1241 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [129] jmp [212]
  [132] pushsymb 1335 ........................... <#room_component>
  [135] pusharglist 1 ........................... <#room_component>
  [137] extcall 153 ............................. <getObject(#room_component)>
  [139] pusharglist 1 ........................... <getObject(#room_component)>
  [141] objcall 266 ............................. <getObject(#room_component).getRoomID()>
  [144] pushcons 55 ............................. <"private">
  [146] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [147] jmpifz [212] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [150] getparam 1 .............................. <tProps>
  [152] pushsymb 461 ............................ <#word>
  [155] pushint8 2 .............................. <2>
  [157] getparam 1 .............................. <tProps>
  [159] pushsymb 461 ............................ <#word>
  [162] pusharglist 2 ........................... <tProps, #word>
  [164] objcall 14 .............................. <tProps.word.count>
  [166] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [168] objcall 33 .............................. <tProps.word[2..tProps.word.count]>
  [170] setprop 1241 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [173] pushcons 35 ............................. <"001">
  [175] setlocal 2 .............................. tCarryItm = "001"
  [177] pushsymb 1333 ........................... <#doHandWorkRight>
  [180] getprop 1222 ............................ <pPartList>
  [183] pushcons 53 ............................. <"crr">
  [185] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [187] extcall 178 ............................. call(#doHandWorkRight, pPartList, "crr")
  [189] getprop 1222 ............................ <pPartList>
  [192] getprop 1223 ............................ <pPartIndex>
  [195] pushcons 43 ............................. <"ri">
  [197] pusharglist 2 ........................... <pPartIndex, "ri">
  [199] objcall 9 ............................... <pPartIndex["ri"]>
  [201] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [203] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [205] getlocal 2 .............................. <tCarryItm>
  [207] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [209] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [212] ret
end

on action_usei me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 411 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 356 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [132] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 239 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 121 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1334 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 136 ............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1241 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1333 ........................... <#doHandWorkRight>
  [ 97] getprop 1222 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 178 ............................. call(#doHandWorkRight, pPartList, "drk")
  [106] getprop 1222 ............................ <pPartList>
  [109] getprop 1223 ............................ <pPartIndex>
  [112] pushcons 43 ............................. <"ri">
  [114] pusharglist 2 ........................... <pPartIndex, "ri">
  [116] objcall 9 ............................... <pPartIndex["ri"]>
  [118] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [120] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [122] getlocal 2 .............................. <tCarryItm>
  [124] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [126] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [129] jmp [212]
  [132] pushsymb 1335 ........................... <#room_component>
  [135] pusharglist 1 ........................... <#room_component>
  [137] extcall 153 ............................. <getObject(#room_component)>
  [139] pusharglist 1 ........................... <getObject(#room_component)>
  [141] objcall 266 ............................. <getObject(#room_component).getRoomID()>
  [144] pushcons 55 ............................. <"private">
  [146] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [147] jmpifz [212] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [150] getparam 1 .............................. <tProps>
  [152] pushsymb 461 ............................ <#word>
  [155] pushint8 2 .............................. <2>
  [157] getparam 1 .............................. <tProps>
  [159] pushsymb 461 ............................ <#word>
  [162] pusharglist 2 ........................... <tProps, #word>
  [164] objcall 14 .............................. <tProps.word.count>
  [166] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [168] objcall 33 .............................. <tProps.word[2..tProps.word.count]>
  [170] setprop 1241 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [173] pushcons 35 ............................. <"001">
  [175] setlocal 2 .............................. tCarryItm = "001"
  [177] pushsymb 1333 ........................... <#doHandWorkRight>
  [180] getprop 1222 ............................ <pPartList>
  [183] pushcons 44 ............................. <"drk">
  [185] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [187] extcall 178 ............................. call(#doHandWorkRight, pPartList, "drk")
  [189] getprop 1222 ............................ <pPartList>
  [192] getprop 1223 ............................ <pPartIndex>
  [195] pushcons 43 ............................. <"ri">
  [197] pusharglist 2 ........................... <pPartIndex, "ri">
  [199] objcall 9 ............................... <pPartIndex["ri"]>
  [201] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [203] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [205] getlocal 2 .............................. <tCarryItm>
  [207] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [209] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [212] ret
end

on action_drink me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 411 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 356 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [132] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 239 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 121 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1334 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 136 ............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1241 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1333 ........................... <#doHandWorkRight>
  [ 97] getprop 1222 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 178 ............................. call(#doHandWorkRight, pPartList, "drk")
  [106] getprop 1222 ............................ <pPartList>
  [109] getprop 1223 ............................ <pPartIndex>
  [112] pushcons 43 ............................. <"ri">
  [114] pusharglist 2 ........................... <pPartIndex, "ri">
  [116] objcall 9 ............................... <pPartIndex["ri"]>
  [118] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [120] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [122] getlocal 2 .............................. <tCarryItm>
  [124] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [126] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [129] jmp [212]
  [132] pushsymb 1335 ........................... <#room_component>
  [135] pusharglist 1 ........................... <#room_component>
  [137] extcall 153 ............................. <getObject(#room_component)>
  [139] pusharglist 1 ........................... <getObject(#room_component)>
  [141] objcall 266 ............................. <getObject(#room_component).getRoomID()>
  [144] pushcons 55 ............................. <"private">
  [146] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [147] jmpifz [212] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [150] getparam 1 .............................. <tProps>
  [152] pushsymb 461 ............................ <#word>
  [155] pushint8 2 .............................. <2>
  [157] getparam 1 .............................. <tProps>
  [159] pushsymb 461 ............................ <#word>
  [162] pusharglist 2 ........................... <tProps, #word>
  [164] objcall 14 .............................. <tProps.word.count>
  [166] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [168] objcall 33 .............................. <tProps.word[2..tProps.word.count]>
  [170] setprop 1241 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [173] pushcons 35 ............................. <"001">
  [175] setlocal 2 .............................. tCarryItm = "001"
  [177] pushsymb 1333 ........................... <#doHandWorkRight>
  [180] getprop 1222 ............................ <pPartList>
  [183] pushcons 44 ............................. <"drk">
  [185] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [187] extcall 178 ............................. call(#doHandWorkRight, pPartList, "drk")
  [189] getprop 1222 ............................ <pPartList>
  [192] getprop 1223 ............................ <pPartIndex>
  [195] pushcons 43 ............................. <"ri">
  [197] pusharglist 2 ........................... <pPartIndex, "ri">
  [199] objcall 9 ............................... <pPartIndex["ri"]>
  [201] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [203] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [205] getlocal 2 .............................. <tCarryItm>
  [207] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [209] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [212] ret
end

on action_carryf me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 411 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 356 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [129] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 239 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 121 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushsymb 1333 ........................... <#doHandWorkRight>
  [ 67] getprop 1222 ............................ <pPartList>
  [ 70] pushcons 53 ............................. <"crr">
  [ 72] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [ 74] extcall 178 ............................. call(#doHandWorkRight, pPartList, "crr")
  [ 76] getprop 1222 ............................ <pPartList>
  [ 79] getprop 1223 ............................ <pPartIndex>
  [ 82] pushcons 43 ............................. <"ri">
  [ 84] pusharglist 2 ........................... <pPartIndex, "ri">
  [ 86] objcall 9 ............................... <pPartIndex["ri"]>
  [ 88] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [ 90] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [ 92] getlocal 2 .............................. <tCarryItm>
  [ 94] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [ 96] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [ 99] pushcons 54 ............................. <"handitem">
  [101] getlocal 1 .............................. <tCarrying>
  [103] joinstr ................................. <"handitem" & tCarrying>
  [104] pusharglist 1 ........................... <"handitem" & tCarrying>
  [106] extcall 1334 ............................ <textExists("handitem" & tCarrying)>
  [109] jmpifz [126] ............................ if textExists("handitem" & tCarrying) then
  [112] pushcons 54 ............................. <"handitem">
  [114] getlocal 1 .............................. <tCarrying>
  [116] joinstr ................................. <"handitem" & tCarrying>
  [117] getlocal 0 .............................. <tItem>
  [119] pusharglist 2 ........................... <"handitem" & tCarrying, tItem>
  [121] extcall 136 ............................. <getText("handitem" & tCarrying, tItem)>
  [123] setprop 1241 ............................ pCarrying = getText("handitem" & tCarrying, tItem)
  [126] jmp [209]
  [129] pushsymb 1335 ........................... <#room_component>
  [132] pusharglist 1 ........................... <#room_component>
  [134] extcall 153 ............................. <getObject(#room_component)>
  [136] pusharglist 1 ........................... <getObject(#room_component)>
  [138] objcall 266 ............................. <getObject(#room_component).getRoomID()>
  [141] pushcons 55 ............................. <"private">
  [143] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [144] jmpifz [209] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [147] getparam 1 .............................. <tProps>
  [149] pushsymb 461 ............................ <#word>
  [152] pushint8 2 .............................. <2>
  [154] getparam 1 .............................. <tProps>
  [156] pushsymb 461 ............................ <#word>
  [159] pusharglist 2 ........................... <tProps, #word>
  [161] objcall 14 .............................. <tProps.word.count>
  [163] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [165] objcall 33 .............................. <tProps.word[2..tProps.word.count]>
  [167] setprop 1241 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [170] pushcons 57 ............................. <"004">
  [172] setlocal 2 .............................. tCarryItm = "004"
  [174] pushsymb 1333 ........................... <#doHandWorkRight>
  [177] getprop 1222 ............................ <pPartList>
  [180] pushcons 53 ............................. <"crr">
  [182] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "crr">
  [184] extcall 178 ............................. call(#doHandWorkRight, pPartList, "crr")
  [186] getprop 1222 ............................ <pPartList>
  [189] getprop 1223 ............................ <pPartIndex>
  [192] pushcons 43 ............................. <"ri">
  [194] pusharglist 2 ........................... <pPartIndex, "ri">
  [196] objcall 9 ............................... <pPartIndex["ri"]>
  [198] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [200] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [202] getlocal 2 .............................. <tCarryItm>
  [204] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [206] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [209] ret
end

on action_eat me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tItem = tProps.word[2]
  [ 13] getlocal 0 .............................. <tItem>
  [ 15] pusharglist 1 ........................... <tItem>
  [ 17] extcall 411 ............................. <value(tItem)>
  [ 20] pusharglist 1 ........................... <value(tItem)>
  [ 22] extcall 356 ............................. <integerp(value(tItem))>
  [ 25] jmpifz [132] ............................ if integerp(value(tItem)) then / else
  [ 28] getlocal 0 .............................. <tItem>
  [ 30] setlocal 1 .............................. tCarrying = tItem
  [ 32] pushcons 52 ............................. <"handitem.right.">
  [ 34] getlocal 1 .............................. <tCarrying>
  [ 36] joinstr ................................. <"handitem.right." & tCarrying>
  [ 37] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 39] extcall 239 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 41] jmpifz [ 60] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 44] pushcons 52 ............................. <"handitem.right.">
  [ 46] getlocal 1 .............................. <tCarrying>
  [ 48] joinstr ................................. <"handitem.right." & tCarrying>
  [ 49] pushcons 35 ............................. <"001">
  [ 51] pusharglist 2 ........................... <"handitem.right." & tCarrying, "001">
  [ 53] extcall 121 ............................. <getVariable("handitem.right." & tCarrying, "001")>
  [ 55] setlocal 2 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, "001")
  [ 57] jmp [ 64]
  [ 60] pushcons 35 ............................. <"001">
  [ 62] setlocal 2 .............................. tCarryItm = "001"
  [ 64] pushcons 54 ............................. <"handitem">
  [ 66] getlocal 1 .............................. <tCarrying>
  [ 68] joinstr ................................. <"handitem" & tCarrying>
  [ 69] pusharglist 1 ........................... <"handitem" & tCarrying>
  [ 71] extcall 1334 ............................ <textExists("handitem" & tCarrying)>
  [ 74] jmpifz [ 94] ............................ if textExists("handitem" & tCarrying) then
  [ 77] pushcons 54 ............................. <"handitem">
  [ 79] getlocal 1 .............................. <tCarrying>
  [ 81] joinstr ................................. <"handitem" & tCarrying>
  [ 82] pushcons 54 ............................. <"handitem">
  [ 84] getlocal 1 .............................. <tCarrying>
  [ 86] joinstr ................................. <"handitem" & tCarrying>
  [ 87] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [ 89] extcall 136 ............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [ 91] setprop 1241 ............................ pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [ 94] pushsymb 1333 ........................... <#doHandWorkRight>
  [ 97] getprop 1222 ............................ <pPartList>
  [100] pushcons 44 ............................. <"drk">
  [102] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [104] extcall 178 ............................. call(#doHandWorkRight, pPartList, "drk")
  [106] getprop 1222 ............................ <pPartList>
  [109] getprop 1223 ............................ <pPartIndex>
  [112] pushcons 43 ............................. <"ri">
  [114] pusharglist 2 ........................... <pPartIndex, "ri">
  [116] objcall 9 ............................... <pPartIndex["ri"]>
  [118] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [120] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [122] getlocal 2 .............................. <tCarryItm>
  [124] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [126] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [129] jmp [212]
  [132] pushsymb 1335 ........................... <#room_component>
  [135] pusharglist 1 ........................... <#room_component>
  [137] extcall 153 ............................. <getObject(#room_component)>
  [139] pusharglist 1 ........................... <getObject(#room_component)>
  [141] objcall 266 ............................. <getObject(#room_component).getRoomID()>
  [144] pushcons 55 ............................. <"private">
  [146] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [147] jmpifz [212] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [150] getparam 1 .............................. <tProps>
  [152] pushsymb 461 ............................ <#word>
  [155] pushint8 2 .............................. <2>
  [157] getparam 1 .............................. <tProps>
  [159] pushsymb 461 ............................ <#word>
  [162] pusharglist 2 ........................... <tProps, #word>
  [164] objcall 14 .............................. <tProps.word.count>
  [166] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [168] objcall 33 .............................. <tProps.word[2..tProps.word.count]>
  [170] setprop 1241 ............................ pCarrying = tProps.word[2..tProps.word.count]
  [173] pushcons 57 ............................. <"004">
  [175] setlocal 2 .............................. tCarryItm = "004"
  [177] pushsymb 1333 ........................... <#doHandWorkRight>
  [180] getprop 1222 ............................ <pPartList>
  [183] pushcons 44 ............................. <"drk">
  [185] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "drk">
  [187] extcall 178 ............................. call(#doHandWorkRight, pPartList, "drk")
  [189] getprop 1222 ............................ <pPartList>
  [192] getprop 1223 ............................ <pPartIndex>
  [195] pushcons 43 ............................. <"ri">
  [197] pusharglist 2 ........................... <pPartIndex, "ri">
  [199] objcall 9 ............................... <pPartIndex["ri"]>
  [201] pusharglist 2 ........................... <pPartList, pPartIndex["ri"]>
  [203] objcall 9 ............................... <pPartList[pPartIndex["ri"]]>
  [205] getlocal 2 .............................. <tCarryItm>
  [207] pusharglistnoret 2 ...................... <pPartList[pPartIndex["ri"]], tCarryItm>
  [209] objcall 1286 ............................ pPartList[pPartIndex["ri"]].setModel(tCarryItm)
  [212] ret
end

on action_talk me, tProps
  [  0] getprop 1238 ............................ <pMainAction>
  [  3] pushcons 12 ............................. <"lay">
  [  5] eq ...................................... <pMainAction = "lay">
  [  6] getprop 977 ............................. <pXFactor>
  [  9] pushint8 33 ............................. <33>
  [ 11] lt ...................................... <pXFactor < 33>
  [ 12] and ..................................... <(pMainAction = "lay") and (pXFactor < 33)>
  [ 13] jmpifz [ 21] ............................ if (pMainAction = "lay") and (pXFactor < 33) then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 21 .............................. return 0
  [ 21] pushint8 1 .............................. <1>
  [ 23] setprop 1240 ............................ pTalking = 1
  [ 26] ret
end

on action_gest me, tProps
  [  0] getprop 1268 ............................ <pPeopleSize>
  [  3] pushcons 30 ............................. <"sh">
  [  5] eq ...................................... <pPeopleSize = "sh">
  [  6] jmpifz [ 13] ............................ if pPeopleSize = "sh" then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 21 .............................. return 
  [ 13] pushcons 15 ............................. <"ey">
  [ 15] pushcons 16 ............................. <"fc">
  [ 17] pusharglist 2 ........................... <["ey", "fc"]>
  [ 19] pushlist ................................ <["ey", "fc"]>
  [ 20] setlocal 0 .............................. tList = ["ey", "fc"]
  [ 22] getparam 1 .............................. <tProps>
  [ 24] pushsymb 461 ............................ <#word>
  [ 27] pushint8 2 .............................. <2>
  [ 29] pusharglist 3 ........................... <tProps, #word, 2>
  [ 31] objcall 33 .............................. <tProps.word[2]>
  [ 33] setlocal 1 .............................. tGesture = tProps.word[2]
  [ 35] getlocal 1 .............................. <tGesture>
  [ 37] pushcons 58 ............................. <"spr">
  [ 39] eq ...................................... <tGesture = "spr">
  [ 40] jmpifz [ 47] ............................ if tGesture = "spr" then
  [ 43] pushcons 59 ............................. <"srp">
  [ 45] setlocal 1 .............................. tGesture = "srp"
  [ 47] getprop 1238 ............................ <pMainAction>
  [ 50] pushcons 12 ............................. <"lay">
  [ 52] eq ...................................... <pMainAction = "lay">
  [ 53] jmpifz [ 91] ............................ if pMainAction = "lay" then / else
  [ 56] pushcons 60 ............................. <"l">
  [ 58] getlocal 1 .............................. <tGesture>
  [ 60] pushsymb 450 ............................ <#char>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pushint8 2 .............................. <2>
  [ 67] pusharglist 4 ........................... <tGesture, #char, 1, 2>
  [ 69] objcall 33 .............................. <tGesture.char[1..2]>
  [ 71] joinstr ................................. <"l" & tGesture.char[1..2]>
  [ 72] setlocal 1 .............................. tGesture = "l" & tGesture.char[1..2]
  [ 74] pushsymb 1298 ........................... <#defineActMultiple>
  [ 77] getprop 1222 ............................ <pPartList>
  [ 80] getlocal 1 .............................. <tGesture>
  [ 82] getlocal 0 .............................. <tList>
  [ 84] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, tGesture, tList>
  [ 86] extcall 178 ............................. call(#defineActMultiple, pPartList, tGesture, tList)
  [ 88] jmp [159]
  [ 91] pushsymb 1298 ........................... <#defineActMultiple>
  [ 94] getprop 1222 ............................ <pPartList>
  [ 97] getlocal 1 .............................. <tGesture>
  [ 99] getlocal 0 .............................. <tList>
  [101] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, tGesture, tList>
  [103] extcall 178 ............................. call(#defineActMultiple, pPartList, tGesture, tList)
  [105] getlocal 1 .............................. <tGesture>
  [107] pushcons 61 ............................. <"ohd">
  [109] eq ...................................... <tGesture = "ohd">
  [110] jmpifz [159] ............................ if tGesture = "ohd" then
  [113] getprop 1222 ............................ <pPartList>
  [116] getprop 1223 ............................ <pPartIndex>
  [119] pushcons 13 ............................. <"hd">
  [121] pusharglist 2 ........................... <pPartIndex, "hd">
  [123] objcall 9 ............................... <pPartIndex["hd"]>
  [125] pusharglist 2 ........................... <pPartList, pPartIndex["hd"]>
  [127] objcall 9 ............................... <pPartList[pPartIndex["hd"]]>
  [129] getlocal 1 .............................. <tGesture>
  [131] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hd"]], tGesture>
  [133] objcall 1338 ............................ pPartList[pPartIndex["hd"]].defineAct(tGesture)
  [136] getprop 1222 ............................ <pPartList>
  [139] getprop 1223 ............................ <pPartIndex>
  [142] pushcons 14 ............................. <"hr">
  [144] pusharglist 2 ........................... <pPartIndex, "hr">
  [146] objcall 9 ............................... <pPartIndex["hr"]>
  [148] pusharglist 2 ........................... <pPartList, pPartIndex["hr"]>
  [150] objcall 9 ............................... <pPartList[pPartIndex["hr"]]>
  [152] getlocal 1 .............................. <tGesture>
  [154] pusharglistnoret 2 ...................... <pPartList[pPartIndex["hr"]], tGesture>
  [156] objcall 1338 ............................ pPartList[pPartIndex["hr"]].defineAct(tGesture)
  [159] ret
end

on action_wave me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1244 ............................ pWaving = 1
  [  5] ret
end

on action_dance me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setlocal 0 .............................. tStyleNum = tProps.word[2]
  [ 13] getlocal 0 .............................. <tStyleNum>
  [ 15] pusharglist 1 ........................... <tStyleNum>
  [ 17] extcall 451 ............................. <integer(tStyleNum)>
  [ 20] setprop 1243 ............................ pDancing = integer(tStyleNum)
  [ 23] getprop 1243 ............................ <pDancing>
  [ 26] pusharglist 0 ........................... <>
  [ 28] extcall 159 ............................. <VOID>
  [ 30] eq ...................................... <pDancing = VOID>
  [ 31] jmpifz [ 39] ............................ if pDancing = VOID then
  [ 34] pushint8 1 .............................. <1>
  [ 36] setprop 1243 ............................ pDancing = 1
  [ 39] pushcons 62 ............................. <"dance.">
  [ 41] getprop 1243 ............................ <pDancing>
  [ 44] joinstr ................................. <"dance." & pDancing>
  [ 45] setlocal 1 .............................. tStyle = "dance." & pDancing
  [ 47] getparam 0 .............................. <me>
  [ 49] getlocal 1 .............................. <tStyle>
  [ 51] pusharglistnoret 2 ...................... <me, tStyle>
  [ 53] objcall 1194 ............................ me.startAnimation(tStyle)
  [ 56] ret
end

on action_ohd me
  [  0] pushsymb 1298 ........................... <#defineActMultiple>
  [  3] getprop 1222 ............................ <pPartList>
  [  6] pushcons 61 ............................. <"ohd">
  [  8] pushcons 13 ............................. <"hd">
  [ 10] pushcons 16 ............................. <"fc">
  [ 12] pushcons 15 ............................. <"ey">
  [ 14] pushcons 14 ............................. <"hr">
  [ 16] pusharglist 4 ........................... <["hd", "fc", "ey", "hr"]>
  [ 18] pushlist ................................ <["hd", "fc", "ey", "hr"]>
  [ 19] pusharglistnoret 4 ...................... <#defineActMultiple, pPartList, "ohd", ["hd", "fc", "ey", "hr"]>
  [ 21] extcall 178 ............................. call(#defineActMultiple, pPartList, "ohd", ["hd", "fc", "ey", "hr"])
  [ 23] pushsymb 1333 ........................... <#doHandWorkRight>
  [ 26] getprop 1222 ............................ <pPartList>
  [ 29] pushcons 61 ............................. <"ohd">
  [ 31] pusharglistnoret 3 ...................... <#doHandWorkRight, pPartList, "ohd">
  [ 33] extcall 178 ............................. call(#doHandWorkRight, pPartList, "ohd")
  [ 35] ret
end

on action_trd me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1245 ............................ pTrading = 1
  [  5] ret
end

on action_sleep me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 1242 ............................ pSleeping = 1
  [  5] ret
end

on action_flatctrl me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setprop 1246 ............................ pCtrlType = tProps.word[2]
  [ 14] ret
end

on action_mod me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 461 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 33 .............................. <tProps.word[2]>
  [ 11] setprop 1252 ............................ pModState = tProps.word[2]
  [ 14] ret
end

on action_sign me, props
  [  0] pushcons 63 ............................. <"sign">
  [  2] getparam 1 .............................. <props>
  [  4] pushsymb 461 ............................ <#word>
  [  7] pushint8 2 .............................. <2>
  [  9] pusharglist 3 ........................... <props, #word, 2>
  [ 11] objcall 33 .............................. <props.word[2]>
  [ 13] joinstr ................................. <"sign" & props.word[2]>
  [ 14] setlocal 0 .............................. tSignMem = "sign" & props.word[2]
  [ 16] getlocal 0 .............................. <tSignMem>
  [ 18] pusharglist 1 ........................... <tSignMem>
  [ 20] extcall 37 .............................. <getmemnum(tSignMem)>
  [ 22] pushzero ................................ <0>
  [ 23] eq ...................................... <getmemnum(tSignMem) = 0>
  [ 24] jmpifz [ 32] ............................ if getmemnum(tSignMem) = 0 then
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 21 .............................. return 0
  [ 32] pushsymb 1303 ........................... <#doHandWorkLeft>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 1222 ......................... <me.pPartList>
  [ 40] pushcons 64 ............................. <"sig">
  [ 42] pusharglistnoret 3 ...................... <#doHandWorkLeft, me.pPartList, "sig">
  [ 44] extcall 178 ............................. call(#doHandWorkLeft, me.pPartList, "sig")
  [ 46] pushcons 65 ............................. <"SIGN_EXTRA">
  [ 48] setlocal 1 .............................. tSignObjID = "SIGN_EXTRA"
  [ 50] getprop 1253 ............................ <pExtraObjs>
  [ 53] getlocal 1 .............................. <tSignObjID>
  [ 55] pusharglist 2 ........................... <pExtraObjs, tSignObjID>
  [ 57] objcall 9 ............................... <pExtraObjs[tSignObjID]>
  [ 59] pusharglist 1 ........................... <pExtraObjs[tSignObjID]>
  [ 61] extcall 10 .............................. <voidp(pExtraObjs[tSignObjID])>
  [ 63] jmpifz [ 84] ............................ if voidp(pExtraObjs[tSignObjID]) then
  [ 66] getprop 1253 ............................ <pExtraObjs>
  [ 69] getlocal 1 .............................. <tSignObjID>
  [ 71] pushsymb 152 ............................ <#temp>
  [ 73] pushcons 66 ............................. <"HumanExtra Sign Class">
  [ 75] pusharglist 2 ........................... <#temp, "HumanExtra Sign Class">
  [ 77] extcall 150 ............................. <createObject(#temp, "HumanExtra Sign Class")>
  [ 79] pusharglistnoret 3 ...................... <pExtraObjs, tSignObjID, createObject(#temp, "HumanExtra Sign Class")>
  [ 81] objcall 690 ............................. pExtraObjs.addProp(tSignObjID, createObject(#temp, "HumanExtra Sign Class"))
  [ 84] pushsymb 1342 ........................... <#show_sign>
  [ 87] getprop 1253 ............................ <pExtraObjs>
  [ 90] pushcons 67 ............................. <"sprite">
  [ 92] getprop 327 ............................. <pSprite>
  [ 95] pushcons 68 ............................. <"direction">
  [ 97] getprop 34 .............................. <pDirection>
  [ 99] pushcons 69 ............................. <"signmember">
  [101] getlocal 0 .............................. <tSignMem>
  [103] pusharglist 6 ........................... <["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [105] pushproplist ............................ <["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [106] pusharglistnoret 3 ...................... <#show_sign, pExtraObjs, ["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [108] extcall 178 ............................. call(#show_sign, pExtraObjs, ["sprite": pSprite, "direction": pDirection, "signmember": tSignMem])
  [110] ret
end
