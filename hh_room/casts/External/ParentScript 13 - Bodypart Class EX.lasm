property ancestor, pPart, pmodel, pDirection, pDrawProps, pAction, pActionLh, pActionRh, pMemString, pXFix, pYFix, pLastLocFix, pCacheImage, pCacheRectA, pCacheRectB, pFlipH, pAnimation, pAnimFrame, pTotalFrame

on deconsturct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 120 ............................. <VOID>
  [  4] setprop 1337 ............................ ancestor = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 116 ............................. return 1
  [ 13] ret
end

on define me, tPart, tmodel, tColor, tDirection, tAction, tAncestor
  [  0] getparam 6 .............................. <tAncestor>
  [  2] setprop 1337 ............................ ancestor = tAncestor
  [  5] getparam 1 .............................. <tPart>
  [  7] setprop 1298 ............................ pPart = tPart
  [ 10] getparam 2 .............................. <tmodel>
  [ 12] setprop 1338 ............................ pmodel = tmodel
  [ 15] pushsymb 1156 ........................... <#maskImage>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 393 ............................ <#ink>
  [ 22] pushzero ................................ <0>
  [ 23] pushsymb 282 ............................ <#bgColor>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglist 6 ........................... <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 29] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 30] setprop 1339 ............................ pDrawProps = [#maskImage: 0, #ink: 0, #bgColor: 0]
  [ 33] pushzero ................................ <0>
  [ 34] setprop 1340 ............................ pCacheImage = 0
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pushzero ................................ <0>
  [ 40] pushzero ................................ <0>
  [ 41] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 43] extcall 221 ............................. <rect(0, 0, 0, 0)>
  [ 45] setprop 1341 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 48] pushzero ................................ <0>
  [ 49] pushzero ................................ <0>
  [ 50] pushzero ................................ <0>
  [ 51] pushzero ................................ <0>
  [ 52] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 54] extcall 221 ............................. <rect(0, 0, 0, 0)>
  [ 56] setprop 1342 ............................ pCacheRectB = rect(0, 0, 0, 0)
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglistnoret 1 ...................... <me>
  [ 63] objcall 1333 ............................ me.defineInk()
  [ 66] getparam 0 .............................. <me>
  [ 68] getparam 3 .............................. <tColor>
  [ 70] pusharglistnoret 2 ...................... <me, tColor>
  [ 72] objcall 1272 ............................ me.setColor(tColor)
  [ 75] getparam 4 .............................. <tDirection>
  [ 77] setprop 376 ............................. pDirection = tDirection
  [ 80] getparam 5 .............................. <tAction>
  [ 82] setprop 1343 ............................ pAction = tAction
  [ 85] getparam 5 .............................. <tAction>
  [ 87] setprop 1344 ............................ pActionLh = tAction
  [ 90] getparam 5 .............................. <tAction>
  [ 92] setprop 1301 ............................ pActionRh = tAction
  [ 95] pushcons 0 .............................. <EMPTY>
  [ 97] setprop 1345 ............................ pMemString = EMPTY
  [100] pushzero ................................ <0>
  [101] setprop 1346 ............................ pXFix = 0
  [104] pushzero ................................ <0>
  [105] setprop 1347 ............................ pYFix = 0
  [108] pushzero ................................ <0>
  [109] setprop 1348 ............................ pFlipH = 0
  [112] pushint16 1000 .......................... <1000>
  [115] pushint16 1000 .......................... <1000>
  [118] pusharglist 2 ........................... <1000, 1000>
  [120] extcall 264 ............................. <point(1000, 1000)>
  [123] setprop 1349 ............................ pLastLocFix = point(1000, 1000)
  [126] pushzero ................................ <0>
  [127] setprop 1350 ............................ pAnimation = 0
  [130] pushint8 1 .............................. <1>
  [132] setprop 1351 ............................ pAnimFrame = 1
  [135] pushint8 1 .............................. <1>
  [137] setprop 1352 ............................ pTotalFrame = 1
  [140] pushint8 1 .............................. <1>
  [142] pusharglistnoret 1 ...................... <1>
  [144] extcall 116 ............................. return 1
  [146] ret
end

on update me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tAnimCntr = 0
  [  3] getprop 1343 ............................ <pAction>
  [  6] setlocal 1 .............................. tAction = pAction
  [  8] getprop 1298 ............................ <pPart>
  [ 11] setlocal 2 .............................. tPart = pPart
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 1209 ........................... <#pFlipList>
  [ 18] getprop 376 ............................. <pDirection>
  [ 21] pushint8 1 .............................. <1>
  [ 23] add ..................................... <pDirection + 1>
  [ 24] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 26] objcall 134 ............................. <me.pFlipList[pDirection + 1]>
  [ 28] setlocal 3 .............................. tdir = me.pFlipList[pDirection + 1]
  [ 30] pushzero ................................ <0>
  [ 31] setprop 1346 ............................ pXFix = 0
  [ 34] pushzero ................................ <0>
  [ 35] setprop 1347 ............................ pYFix = 0
  [ 38] getparam 0 .............................. <me>
  [ 40] getobjprop 1232 ......................... <me.pAnimating>
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglist 1 ........................... <me>
  [ 47] objcall 1334 ............................ <me.checkPartNotCarrying()>
  [ 50] and ..................................... <me.pAnimating and me.checkPartNotCarrying()>
  [ 51] jmpifz [311] ............................ if me.pAnimating and me.checkPartNotCarrying() then / else
  [ 54] getparam 0 .............................. <me>
  [ 56] pusharglist 1 ........................... <me>
  [ 58] objcall 856 ............................. <me.animate()>
  [ 61] setlocal 4 .............................. tMemString = me.animate()
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 376 .......................... <me.pDirection>
  [ 68] peek 0 .................................. case me.pDirection of
  [ 70] pushzero ................................ <0>
  [ 71] eq
  [ 72] jmpifz [100] ............................ (case) 0:
  [ 75] getprop 1347 ............................ <pYFix>
  [ 78] getprop 1346 ............................ <pXFix>
  [ 81] pushint8 2 .............................. <2>
  [ 83] div ..................................... <pXFix / 2>
  [ 84] add ..................................... <pYFix + (pXFix / 2)>
  [ 85] setprop 1347 ............................ pYFix = pYFix + (pXFix / 2)
  [ 88] getprop 1346 ............................ <pXFix>
  [ 91] pushint8 2 .............................. <2>
  [ 93] div ..................................... <pXFix / 2>
  [ 94] setprop 1346 ............................ pXFix = pXFix / 2
  [ 97] jmp [266]
  [100] peek 0
  [102] pushint8 1 .............................. <1>
  [104] eq
  [105] jmpifz [125] ............................ (case) 1:
  [108] getprop 1347 ............................ <pYFix>
  [111] getprop 1346 ............................ <pXFix>
  [114] add ..................................... <pYFix + pXFix>
  [115] setprop 1347 ............................ pYFix = pYFix + pXFix
  [118] pushzero ................................ <0>
  [119] setprop 1346 ............................ pXFix = 0
  [122] jmp [266]
  [125] peek 0
  [127] pushint8 2 .............................. <2>
  [129] eq
  [130] jmpifz [158] ............................ (case) 2:
  [133] getprop 1347 ............................ <pYFix>
  [136] getprop 1346 ............................ <pXFix>
  [139] pushint8 2 .............................. <2>
  [141] div ..................................... <pXFix / 2>
  [142] sub ..................................... <pYFix - (pXFix / 2)>
  [143] setprop 1347 ............................ pYFix = pYFix - (pXFix / 2)
  [146] getprop 1346 ............................ <pXFix>
  [149] pushint8 2 .............................. <2>
  [151] div ..................................... <pXFix / 2>
  [152] setprop 1346 ............................ pXFix = pXFix / 2
  [155] jmp [266]
  [158] peek 0
  [160] pushint8 4 .............................. <4>
  [162] eq
  [163] jmpifz [192] ............................ (case) 4:
  [166] getprop 1347 ............................ <pYFix>
  [169] getprop 1346 ............................ <pXFix>
  [172] pushint8 2 .............................. <2>
  [174] div ..................................... <pXFix / 2>
  [175] add ..................................... <pYFix + (pXFix / 2)>
  [176] setprop 1347 ............................ pYFix = pYFix + (pXFix / 2)
  [179] getprop 1346 ............................ <pXFix>
  [182] inv ..................................... <-pXFix>
  [183] pushint8 2 .............................. <2>
  [185] div ..................................... <-pXFix / 2>
  [186] setprop 1346 ............................ pXFix = -pXFix / 2
  [189] jmp [266]
  [192] peek 0
  [194] pushint8 5 .............................. <5>
  [196] eq
  [197] jmpifz [217] ............................ (case) 5:
  [200] getprop 1347 ............................ <pYFix>
  [203] getprop 1346 ............................ <pXFix>
  [206] sub ..................................... <pYFix - pXFix>
  [207] setprop 1347 ............................ pYFix = pYFix - pXFix
  [210] pushzero ................................ <0>
  [211] setprop 1346 ............................ pXFix = 0
  [214] jmp [266]
  [217] peek 0
  [219] pushint8 6 .............................. <6>
  [221] eq
  [222] jmpifz [251] ............................ (case) 6:
  [225] getprop 1347 ............................ <pYFix>
  [228] getprop 1346 ............................ <pXFix>
  [231] pushint8 2 .............................. <2>
  [233] div ..................................... <pXFix / 2>
  [234] sub ..................................... <pYFix - (pXFix / 2)>
  [235] setprop 1347 ............................ pYFix = pYFix - (pXFix / 2)
  [238] getprop 1346 ............................ <pXFix>
  [241] inv ..................................... <-pXFix>
  [242] pushint8 2 .............................. <2>
  [244] div ..................................... <-pXFix / 2>
  [245] setprop 1346 ............................ pXFix = -pXFix / 2
  [248] jmp [266]
  [251] peek 0
  [253] pushint8 7 .............................. <7>
  [255] eq
  [256] jmpifz [266] ............................ (case) 7:
  [259] getprop 1346 ............................ <pXFix>
  [262] inv ..................................... <-pXFix>
  [263] setprop 1346 ............................ pXFix = -pXFix
  [266] pop 1 ................................... end case
  [268] getparam 0 .............................. <me>
  [270] getobjprop 1253 ......................... <me.pPeopleSize>
  [273] pushcons 1 .............................. <"sh">
  [275] eq ...................................... <me.pPeopleSize = "sh">
  [276] jmpifz [286] ............................ if me.pPeopleSize = "sh" then / else
  [279] pushcons 2 .............................. <0.69999999999999996>
  [281] setlocal 5 .............................. tSizeMultiplier = 0.69999999999999996
  [283] jmp [290]
  [286] pushint8 1 .............................. <1>
  [288] setlocal 5 .............................. tSizeMultiplier = 1
  [290] getprop 1346 ............................ <pXFix>
  [293] getlocal 5 .............................. <tSizeMultiplier>
  [295] mul ..................................... <pXFix * tSizeMultiplier>
  [296] setprop 1346 ............................ pXFix = pXFix * tSizeMultiplier
  [299] getprop 1347 ............................ <pYFix>
  [302] getlocal 5 .............................. <tSizeMultiplier>
  [304] mul ..................................... <pYFix * tSizeMultiplier>
  [305] setprop 1347 ............................ pYFix = pYFix * tSizeMultiplier
  [308] jmp [965]
  [311] getprop 1298 ............................ <pPart>
  [314] peek 0 .................................. case pPart of
  [316] pushcons 3 .............................. <"bd">
  [318] nteq
  [319] jmpifz [338] ............................ (case) "bd", ...
  [322] peek 0
  [324] pushcons 4 .............................. <"lg">
  [326] nteq
  [327] jmpifz [338] ............................ (case) ..., "lg", ...
  [330] peek 0
  [332] pushcons 1 .............................. <"sh">
  [334] eq
  [335] jmpifz [357] ............................ (case) ..., "sh":
  [338] getprop 1343 ............................ <pAction>
  [341] pushcons 5 .............................. <"wlk">
  [343] eq ...................................... <pAction = "wlk">
  [344] jmpifz [354] ............................ if pAction = "wlk" then
  [347] getparam 0 .............................. <me>
  [349] getobjprop 1217 ......................... <me.pAnimCounter>
  [352] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [354] jmp [921]
  [357] peek 0
  [359] pushcons 6 .............................. <"lh">
  [361] nteq
  [362] jmpifz [373] ............................ (case) "lh", ...
  [365] peek 0
  [367] pushcons 7 .............................. <"ls">
  [369] eq
  [370] jmpifz [516] ............................ (case) ..., "ls":
  [373] getprop 376 ............................. <pDirection>
  [376] getlocal 3 .............................. <tdir>
  [378] eq ...................................... <pDirection = tdir>
  [379] jmpifz [401] ............................ if pDirection = tdir then / else
  [382] getprop 1344 ............................ <pActionLh>
  [385] pusharglist 1 ........................... <pActionLh>
  [387] extcall 253 ............................. <voidp(pActionLh)>
  [389] not ..................................... <not voidp(pActionLh)>
  [390] jmpifz [398] ............................ if not voidp(pActionLh) then
  [393] getprop 1344 ............................ <pActionLh>
  [396] setlocal 1 .............................. tAction = pActionLh
  [398] jmp [417]
  [401] getprop 1301 ............................ <pActionRh>
  [404] pusharglist 1 ........................... <pActionRh>
  [406] extcall 253 ............................. <voidp(pActionRh)>
  [408] not ..................................... <not voidp(pActionRh)>
  [409] jmpifz [417] ............................ if not voidp(pActionRh) then
  [412] getprop 1301 ............................ <pActionRh>
  [415] setlocal 1 .............................. tAction = pActionRh
  [417] getlocal 1 .............................. <tAction>
  [419] pushcons 5 .............................. <"wlk">
  [421] eq ...................................... <tAction = "wlk">
  [422] jmpifz [435] ............................ if tAction = "wlk" then / else
  [425] getparam 0 .............................. <me>
  [427] getobjprop 1217 ......................... <me.pAnimCounter>
  [430] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [432] jmp [513]
  [435] getlocal 1 .............................. <tAction>
  [437] pushcons 8 .............................. <"wav">
  [439] eq ...................................... <tAction = "wav">
  [440] jmpifz [456] ............................ if tAction = "wav" then / else
  [443] getparam 0 .............................. <me>
  [445] getobjprop 1217 ......................... <me.pAnimCounter>
  [448] pushint8 2 .............................. <2>
  [450] mod ..................................... <me.pAnimCounter mod 2>
  [451] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [453] jmp [513]
  [456] pushcons 9 .............................. <"crr">
  [458] pushcons 10 ............................. <"drk">
  [460] pushcons 11 ............................. <"ohd">
  [462] pusharglist 3 ........................... <["crr", "drk", "ohd"]>
  [464] pushlist ................................ <["crr", "drk", "ohd"]>
  [465] getlocal 1 .............................. <tAction>
  [467] pusharglist 2 ........................... <["crr", "drk", "ohd"], tAction>
  [469] objcall 207 ............................. <["crr", "drk", "ohd"].getPos(tAction)>
  [471] pushzero ................................ <0>
  [472] nteq .................................... <["crr", "drk", "ohd"].getPos(tAction) <> 0>
  [473] jmpifz [513] ............................ if ["crr", "drk", "ohd"].getPos(tAction) <> 0 then
  [476] getprop 376 ............................. <pDirection>
  [479] pushint8 4 .............................. <4>
  [481] gteq .................................... <pDirection >= 4>
  [482] jmpifz [508] ............................ if pDirection >= 4 then
  [485] pushint8 40 ............................. <40>
  [487] inv ..................................... <-40>
  [488] setprop 1346 ............................ pXFix = -40
  [491] pushcons 12 ............................. <"r">
  [493] getprop 1298 ............................ <pPart>
  [496] pushsymb 425 ............................ <#char>
  [499] pushint8 2 .............................. <2>
  [501] pusharglist 3 ........................... <pPart, #char, 2>
  [503] objcall 134 ............................. <pPart.char[2]>
  [505] joinstr ................................. <"r" & pPart.char[2]>
  [506] setlocal 2 .............................. tPart = "r" & pPart.char[2]
  [508] getprop 376 ............................. <pDirection>
  [511] setlocal 3 .............................. tdir = pDirection
  [513] jmp [921]
  [516] peek 0
  [518] pushcons 13 ............................. <"rh">
  [520] nteq
  [521] jmpifz [532] ............................ (case) "rh", ...
  [524] peek 0
  [526] pushcons 14 ............................. <"rs">
  [528] eq
  [529] jmpifz [677] ............................ (case) ..., "rs":
  [532] getprop 376 ............................. <pDirection>
  [535] getlocal 3 .............................. <tdir>
  [537] eq ...................................... <pDirection = tdir>
  [538] jmpifz [560] ............................ if pDirection = tdir then / else
  [541] getprop 1301 ............................ <pActionRh>
  [544] pusharglist 1 ........................... <pActionRh>
  [546] extcall 253 ............................. <voidp(pActionRh)>
  [548] not ..................................... <not voidp(pActionRh)>
  [549] jmpifz [557] ............................ if not voidp(pActionRh) then
  [552] getprop 1301 ............................ <pActionRh>
  [555] setlocal 1 .............................. tAction = pActionRh
  [557] jmp [576]
  [560] getprop 1344 ............................ <pActionLh>
  [563] pusharglist 1 ........................... <pActionLh>
  [565] extcall 253 ............................. <voidp(pActionLh)>
  [567] not ..................................... <not voidp(pActionLh)>
  [568] jmpifz [576] ............................ if not voidp(pActionLh) then
  [571] getprop 1344 ............................ <pActionLh>
  [574] setlocal 1 .............................. tAction = pActionLh
  [576] getlocal 1 .............................. <tAction>
  [578] pushcons 5 .............................. <"wlk">
  [580] eq ...................................... <tAction = "wlk">
  [581] jmpifz [594] ............................ if tAction = "wlk" then / else
  [584] getparam 0 .............................. <me>
  [586] getobjprop 1217 ......................... <me.pAnimCounter>
  [589] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [591] jmp [674]
  [594] getlocal 1 .............................. <tAction>
  [596] pushcons 8 .............................. <"wav">
  [598] eq ...................................... <tAction = "wav">
  [599] jmpifz [637] ............................ if tAction = "wav" then / else
  [602] getparam 0 .............................. <me>
  [604] getobjprop 1217 ......................... <me.pAnimCounter>
  [607] pushint8 2 .............................. <2>
  [609] mod ..................................... <me.pAnimCounter mod 2>
  [610] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [612] pushcons 15 ............................. <"l">
  [614] getprop 1298 ............................ <pPart>
  [617] pushsymb 425 ............................ <#char>
  [620] pushint8 2 .............................. <2>
  [622] pusharglist 3 ........................... <pPart, #char, 2>
  [624] objcall 134 ............................. <pPart.char[2]>
  [626] joinstr ................................. <"l" & pPart.char[2]>
  [627] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [629] getprop 376 ............................. <pDirection>
  [632] setlocal 3 .............................. tdir = pDirection
  [634] jmp [674]
  [637] getlocal 1 .............................. <tAction>
  [639] pushcons 16 ............................. <"sig">
  [641] eq ...................................... <tAction = "sig">
  [642] jmpifz [674] ............................ if tAction = "sig" then
  [645] pushzero ................................ <0>
  [646] setlocal 0 .............................. tAnimCntr = 0
  [648] pushcons 15 ............................. <"l">
  [650] getprop 1298 ............................ <pPart>
  [653] pushsymb 425 ............................ <#char>
  [656] pushint8 2 .............................. <2>
  [658] pusharglist 3 ........................... <pPart, #char, 2>
  [660] objcall 134 ............................. <pPart.char[2]>
  [662] joinstr ................................. <"l" & pPart.char[2]>
  [663] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [665] getprop 376 ............................. <pDirection>
  [668] setlocal 3 .............................. tdir = pDirection
  [670] pushcons 8 .............................. <"wav">
  [672] setlocal 1 .............................. tAction = "wav"
  [674] jmp [921]
  [677] peek 0
  [679] pushcons 17 ............................. <"hd">
  [681] nteq
  [682] jmpifz [693] ............................ (case) "hd", ...
  [685] peek 0
  [687] pushcons 18 ............................. <"fc">
  [689] eq
  [690] jmpifz [734] ............................ (case) ..., "fc":
  [693] getparam 0 .............................. <me>
  [695] getobjprop 1225 ......................... <me.pTalking>
  [698] jmpifz [731] ............................ if me.pTalking then
  [701] getprop 1343 ............................ <pAction>
  [704] pushcons 19 ............................. <"lay">
  [706] eq ...................................... <pAction = "lay">
  [707] jmpifz [717] ............................ if pAction = "lay" then / else
  [710] pushcons 20 ............................. <"lsp">
  [712] setlocal 1 .............................. tAction = "lsp"
  [714] jmp [721]
  [717] pushcons 21 ............................. <"spk">
  [719] setlocal 1 .............................. tAction = "spk"
  [721] getparam 0 .............................. <me>
  [723] getobjprop 1217 ......................... <me.pAnimCounter>
  [726] pushint8 2 .............................. <2>
  [728] mod ..................................... <me.pAnimCounter mod 2>
  [729] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [731] jmp [921]
  [734] peek 0
  [736] pushcons 22 ............................. <"ey">
  [738] eq
  [739] jmpifz [777] ............................ (case) "ey":
  [742] getparam 0 .............................. <me>
  [744] getobjprop 1225 ......................... <me.pTalking>
  [747] getprop 1343 ............................ <pAction>
  [750] pushcons 19 ............................. <"lay">
  [752] nteq .................................... <pAction <> "lay">
  [753] and ..................................... <me.pTalking and (pAction <> "lay")>
  [754] getparam 0 .............................. <me>
  [756] getobjprop 1217 ......................... <me.pAnimCounter>
  [759] pushint8 2 .............................. <2>
  [761] mod ..................................... <me.pAnimCounter mod 2>
  [762] pushzero ................................ <0>
  [763] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [764] and ..................................... <me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0)>
  [765] jmpifz [774] ............................ if me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0) then
  [768] pushint8 1 .............................. <1>
  [770] inv ..................................... <-1>
  [771] setprop 1347 ............................ pYFix = -1
  [774] jmp [921]
  [777] peek 0
  [779] pushcons 23 ............................. <"hr">
  [781] eq
  [782] jmpifz [820] ............................ (case) "hr":
  [785] getparam 0 .............................. <me>
  [787] getobjprop 1225 ......................... <me.pTalking>
  [790] getparam 0 .............................. <me>
  [792] getobjprop 1217 ......................... <me.pAnimCounter>
  [795] pushint8 2 .............................. <2>
  [797] mod ..................................... <me.pAnimCounter mod 2>
  [798] pushzero ................................ <0>
  [799] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [800] and ..................................... <me.pTalking and ((me.pAnimCounter mod 2) = 0)>
  [801] jmpifz [817] ............................ if me.pTalking and ((me.pAnimCounter mod 2) = 0) then
  [804] getprop 1343 ............................ <pAction>
  [807] pushcons 19 ............................. <"lay">
  [809] nteq .................................... <pAction <> "lay">
  [810] jmpifz [817] ............................ if pAction <> "lay" then
  [813] pushcons 21 ............................. <"spk">
  [815] setlocal 1 .............................. tAction = "spk"
  [817] jmp [921]
  [820] peek 0
  [822] pushcons 24 ............................. <"ri">
  [824] eq
  [825] jmpifz [903] ............................ (case) "ri":
  [828] getparam 0 .............................. <me>
  [830] getobjprop 1226 ......................... <me.pCarrying>
  [833] not ..................................... <not me.pCarrying>
  [834] jmpifz [890] ............................ if not me.pCarrying then / else
  [837] pushcons 0 .............................. <EMPTY>
  [839] setprop 1345 ............................ pMemString = EMPTY
  [842] getprop 1341 ............................ <pCacheRectA>
  [845] getobjprop 219 .......................... <pCacheRectA.width>
  [847] pushzero ................................ <0>
  [848] gt ...................................... <pCacheRectA.width > 0>
  [849] jmpifz [881] ............................ if pCacheRectA.width > 0 then
  [852] getparam 0 .............................. <me>
  [854] getparam 0 .............................. <me>
  [856] getobjprop 1211 ......................... <me.pUpdateRect>
  [859] getprop 1341 ............................ <pCacheRectA>
  [862] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [864] extcall 1354 ............................ <union(me.pUpdateRect, pCacheRectA)>
  [867] setobjprop 1211 ......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [870] pushzero ................................ <0>
  [871] pushzero ................................ <0>
  [872] pushzero ................................ <0>
  [873] pushzero ................................ <0>
  [874] pusharglist 4 ........................... <0, 0, 0, 0>
  [876] extcall 221 ............................. <rect(0, 0, 0, 0)>
  [878] setprop 1341 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [881] pop 1
  [883] pusharglistnoret 0 ...................... <>
  [885] extcall 116 ............................. return 
  [887] jmp [900]
  [890] getprop 1301 ............................ <pActionRh>
  [893] setlocal 1 .............................. tAction = pActionRh
  [895] getprop 376 ............................. <pDirection>
  [898] setlocal 3 .............................. tdir = pDirection
  [900] jmp [921]
  [903] peek 0
  [905] pushcons 25 ............................. <"li">
  [907] eq
  [908] jmpifz [921] ............................ (case) "li":
  [911] getprop 1344 ............................ <pActionLh>
  [914] setlocal 1 .............................. tAction = pActionLh
  [916] getprop 376 ............................. <pDirection>
  [919] setlocal 3 .............................. tdir = pDirection
  [921] pop 1 ................................... end case
  [923] getparam 0 .............................. <me>
  [925] getobjprop 1253 ......................... <me.pPeopleSize>
  [928] pushcons 26 ............................. <"_">
  [930] joinstr ................................. <me.pPeopleSize & "_">
  [931] getlocal 1 .............................. <tAction>
  [933] joinstr ................................. <me.pPeopleSize & "_" & tAction>
  [934] pushcons 26 ............................. <"_">
  [936] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_">
  [937] getlocal 2 .............................. <tPart>
  [939] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart>
  [940] pushcons 26 ............................. <"_">
  [942] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_">
  [943] getprop 1338 ............................ <pmodel>
  [946] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel>
  [947] pushcons 26 ............................. <"_">
  [949] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_">
  [950] getlocal 3 .............................. <tdir>
  [952] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir>
  [953] pushcons 26 ............................. <"_">
  [955] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_">
  [956] getlocal 0 .............................. <tAnimCntr>
  [958] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCntr>
  [959] setlocal 4 .............................. tMemString = me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCntr
  [961] pushzero ................................ <0>
  [962] setprop 1348 ............................ pFlipH = 0
  [965] getprop 1349 ............................ <pLastLocFix>
  [968] getprop 1346 ............................ <pXFix>
  [971] getprop 1347 ............................ <pYFix>
  [974] pusharglist 2 ........................... <pXFix, pYFix>
  [976] extcall 264 ............................. <point(pXFix, pYFix)>
  [979] nteq .................................... <pLastLocFix <> point(pXFix, pYFix)>
  [980] setlocal 6 .............................. tLocFixChanged = pLastLocFix <> point(pXFix, pYFix)
  [982] getprop 1346 ............................ <pXFix>
  [985] getprop 1347 ............................ <pYFix>
  [988] pusharglist 2 ........................... <pXFix, pYFix>
  [990] extcall 264 ............................. <point(pXFix, pYFix)>
  [993] setprop 1349 ............................ pLastLocFix = point(pXFix, pYFix)
  [996] getprop 1345 ............................ <pMemString>
  [999] getlocal 4 .............................. <tMemString>
  [1001] nteq ................................... <pMemString <> tMemString>
  [1002] getlocal 6 ............................. <tLocFixChanged>
  [1004] or ..................................... <(pMemString <> tMemString) or tLocFixChanged>
  [1005] jmpifz [1331] .......................... if (pMemString <> tMemString) or tLocFixChanged then
  [1008] getlocal 4 ............................. <tMemString>
  [1010] setprop 1345 ........................... pMemString = tMemString
  [1013] getlocal 4 ............................. <tMemString>
  [1015] pusharglist 1 .......................... <tMemString>
  [1017] extcall 330 ............................ <getmemnum(tMemString)>
  [1020] setlocal 7 ............................. tMemNum = getmemnum(tMemString)
  [1022] getlocal 7 ............................. <tMemNum>
  [1024] pushzero ............................... <0>
  [1025] gt ..................................... <tMemNum > 0>
  [1026] jmpifz [1298] .......................... if tMemNum > 0 then / else
  [1029] getlocal 7 ............................. <tMemNum>
  [1031] pusharglist 1 .......................... <tMemNum>
  [1033] extcall 263 ............................ <member(tMemNum)>
  [1036] setlocal 8 ............................. tmember = member(tMemNum)
  [1038] getlocal 8 ............................. <tmember>
  [1040] getobjprop 265 ......................... <tmember.regPoint>
  [1043] setlocal 9 ............................. tRegPnt = tmember.regPoint
  [1045] getlocal 9 ............................. <tRegPnt>
  [1047] pushint8 1 ............................. <1>
  [1049] pusharglist 2 .......................... <tRegPnt, 1>
  [1051] objcall 138 ............................ <tRegPnt[1]>
  [1053] inv .................................... <-tRegPnt[1]>
  [1054] setlocal 10 ............................ tX = -tRegPnt[1]
  [1056] getparam 0 ............................. <me>
  [1058] getchainedprop 1250 .................... <me.pBuffer>
  [1061] getchainedprop 221 ..................... <me.pBuffer.rect>
  [1063] getobjprop 261 ......................... <me.pBuffer.rect.height>
  [1066] getlocal 9 ............................. <tRegPnt>
  [1068] pushint8 2 ............................. <2>
  [1070] pusharglist 2 .......................... <tRegPnt, 2>
  [1072] objcall 138 ............................ <tRegPnt[2]>
  [1074] sub .................................... <me.pBuffer.rect.height - tRegPnt[2]>
  [1075] pushint8 10 ............................ <10>
  [1077] sub .................................... <me.pBuffer.rect.height - tRegPnt[2] - 10>
  [1078] setlocal 11 ............................ tY = me.pBuffer.rect.height - tRegPnt[2] - 10
  [1080] getparam 0 ............................. <me>
  [1082] getparam 0 ............................. <me>
  [1084] getobjprop 1211 ........................ <me.pUpdateRect>
  [1087] getprop 1341 ........................... <pCacheRectA>
  [1090] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1092] extcall 1354 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1095] setobjprop 1211 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1098] getlocal 8 ............................. <tmember>
  [1100] getobjprop 260 ......................... <tmember.image>
  [1103] setprop 1340 ........................... pCacheImage = tmember.image
  [1106] getparam 0 ............................. <me>
  [1108] getobjprop 1210 ........................ <me.pLocFix>
  [1111] setlocal 12 ............................ tLocFix = me.pLocFix
  [1113] getprop 1348 ........................... <pFlipH>
  [1116] jmpifz [1198] .......................... if pFlipH then
  [1119] getparam 0 ............................. <me>
  [1121] getprop 1340 ........................... <pCacheImage>
  [1124] pusharglist 2 .......................... <me, pCacheImage>
  [1126] objcall 1336 ........................... <me.flipHorizontal(pCacheImage)>
  [1129] setprop 1340 ........................... pCacheImage = me.flipHorizontal(pCacheImage)
  [1132] getlocal 10 ............................ <tX>
  [1134] inv .................................... <-tX>
  [1135] getlocal 8 ............................. <tmember>
  [1137] getobjprop 219 ......................... <tmember.width>
  [1139] sub .................................... <-tX - tmember.width>
  [1140] getparam 0 ............................. <me>
  [1142] getchainedprop 1250 .................... <me.pBuffer>
  [1145] getobjprop 219 ......................... <me.pBuffer.width>
  [1147] add .................................... <-tX - tmember.width + me.pBuffer.width>
  [1148] setlocal 10 ............................ tX = -tX - tmember.width + me.pBuffer.width
  [1150] getparam 0 ............................. <me>
  [1152] pushsymb 1210 .......................... <#pLocFix>
  [1155] pushint8 1 ............................. <1>
  [1157] pusharglist 3 .......................... <me, #pLocFix, 1>
  [1159] objcall 134 ............................ <me.pLocFix[1]>
  [1161] inv .................................... <-me.pLocFix[1]>
  [1162] getparam 0 ............................. <me>
  [1164] pushsymb 1210 .......................... <#pLocFix>
  [1167] pushint8 2 ............................. <2>
  [1169] pusharglist 3 .......................... <me, #pLocFix, 2>
  [1171] objcall 134 ............................ <me.pLocFix[2]>
  [1173] pusharglist 2 .......................... <-me.pLocFix[1], me.pLocFix[2]>
  [1175] extcall 264 ............................ <point(-me.pLocFix[1], me.pLocFix[2])>
  [1178] setlocal 12 ............................ tLocFix = point(-me.pLocFix[1], me.pLocFix[2])
  [1180] getparam 0 ............................. <me>
  [1182] getobjprop 1253 ........................ <me.pPeopleSize>
  [1185] pushcons 1 ............................. <"sh">
  [1187] eq ..................................... <me.pPeopleSize = "sh">
  [1188] jmpifz [1198] .......................... if me.pPeopleSize = "sh" then
  [1191] getlocal 10 ............................ <tX>
  [1193] pushint8 2 ............................. <2>
  [1195] sub .................................... <tX - 2>
  [1196] setlocal 10 ............................ tX = tX - 2
  [1198] getlocal 10 ............................ <tX>
  [1200] getlocal 11 ............................ <tY>
  [1202] getlocal 10 ............................ <tX>
  [1204] getprop 1340 ........................... <pCacheImage>
  [1207] getobjprop 219 ......................... <pCacheImage.width>
  [1209] add .................................... <tX + pCacheImage.width>
  [1210] getlocal 11 ............................ <tY>
  [1212] getprop 1340 ........................... <pCacheImage>
  [1215] getobjprop 261 ......................... <pCacheImage.height>
  [1218] add .................................... <tY + pCacheImage.height>
  [1219] pusharglist 4 .......................... <tX, tY, tX + pCacheImage.width, tY + pCacheImage.height>
  [1221] extcall 221 ............................ <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)>
  [1223] getprop 1346 ........................... <pXFix>
  [1226] getprop 1347 ........................... <pYFix>
  [1229] getprop 1346 ........................... <pXFix>
  [1232] getprop 1347 ........................... <pYFix>
  [1235] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1237] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1238] add .................................... <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix]>
  [1239] getlocal 12 ............................ <tLocFix>
  [1241] getlocal 12 ............................ <tLocFix>
  [1243] pusharglist 2 .......................... <tLocFix, tLocFix>
  [1245] extcall 221 ............................ <rect(tLocFix, tLocFix)>
  [1247] add .................................... <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix] + rect(tLocFix, tLocFix)>
  [1248] setprop 1341 ........................... pCacheRectA = rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix] + rect(tLocFix, tLocFix)
  [1251] getprop 1340 ........................... <pCacheImage>
  [1254] getobjprop 221 ......................... <pCacheImage.rect>
  [1256] setprop 1342 ........................... pCacheRectB = pCacheImage.rect
  [1259] getprop 1339 ........................... <pDrawProps>
  [1262] pushsymb 1156 .......................... <#maskImage>
  [1265] getprop 1340 ........................... <pCacheImage>
  [1268] pusharglist 1 .......................... <pCacheImage>
  [1270] objcall 1157 ........................... <pCacheImage.createMatte()>
  [1273] pusharglistnoret 3 ..................... <pDrawProps, #maskImage, pCacheImage.createMatte()>
  [1275] objcall 136 ............................ pDrawProps[#maskImage] = pCacheImage.createMatte()
  [1277] getparam 0 ............................. <me>
  [1279] getparam 0 ............................. <me>
  [1281] getobjprop 1211 ........................ <me.pUpdateRect>
  [1284] getprop 1341 ........................... <pCacheRectA>
  [1287] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1289] extcall 1354 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1292] setobjprop 1211 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1295] jmp [1331]
  [1298] getparam 0 ............................. <me>
  [1300] getparam 0 ............................. <me>
  [1302] getobjprop 1211 ........................ <me.pUpdateRect>
  [1305] getprop 1341 ........................... <pCacheRectA>
  [1308] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1310] extcall 1354 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1313] setobjprop 1211 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1316] pushzero ............................... <0>
  [1317] pushzero ............................... <0>
  [1318] pushzero ............................... <0>
  [1319] pushzero ............................... <0>
  [1320] pusharglist 4 .......................... <0, 0, 0, 0>
  [1322] extcall 221 ............................ <rect(0, 0, 0, 0)>
  [1324] setprop 1341 ........................... pCacheRectA = rect(0, 0, 0, 0)
  [1327] pusharglistnoret 0 ..................... <>
  [1329] extcall 116 ............................ return 
  [1331] getparam 0 ............................. <me>
  [1333] getchainedprop 1250 .................... <me.pBuffer>
  [1336] getprop 1340 ........................... <pCacheImage>
  [1339] getprop 1341 ........................... <pCacheRectA>
  [1342] getprop 1342 ........................... <pCacheRectB>
  [1345] getprop 1339 ........................... <pDrawProps>
  [1348] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA, pCacheRectB, pDrawProps>
  [1350] objcall 293 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA, pCacheRectB, pDrawProps)
  [1353] ret
end

on render me
  [  0] getprop 1345 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 122 ............................. <memberExists(pMemString)>
  [  7] jmpifz [ 32] ............................ if memberExists(pMemString) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 1250 ..................... <me.pBuffer>
  [ 15] getprop 1342 ............................ <pCacheRectB>
  [ 18] getprop 1341 ............................ <pCacheRectA>
  [ 21] getprop 1342 ............................ <pCacheRectB>
  [ 24] getprop 1339 ............................ <pDrawProps>
  [ 27] pusharglistnoret 5 ...................... <me.pBuffer, pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps>
  [ 29] objcall 293 ............................. me.pBuffer.copyPixels(pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps)
  [ 32] ret
end

on setItemObj me, tmodel
  [  0] getprop 1298 ............................ <pPart>
  [  3] pushcons 24 ............................. <"ri">
  [  5] eq ...................................... <pPart = "ri">
  [  6] getprop 1298 ............................ <pPart>
  [  9] pushcons 25 ............................. <"li">
  [ 11] eq ...................................... <pPart = "li">
  [ 12] or ...................................... <(pPart = "ri") or (pPart = "li")>
  [ 13] jmpifz [ 21] ............................ if (pPart = "ri") or (pPart = "li") then
  [ 16] getparam 1 .............................. <tmodel>
  [ 18] setprop 1338 ............................ pmodel = tmodel
  [ 21] ret
end

on defineDir me, tdir, tPart
  [  0] getparam 2 .............................. <tPart>
  [  2] pusharglist 1 ........................... <tPart>
  [  4] extcall 253 ............................. <voidp(tPart)>
  [  6] getparam 2 .............................. <tPart>
  [  8] getprop 1298 ............................ <pPart>
  [ 11] eq ...................................... <tPart = pPart>
  [ 12] or ...................................... <voidp(tPart) or (tPart = pPart)>
  [ 13] jmpifz [ 21] ............................ if voidp(tPart) or (tPart = pPart) then
  [ 16] getparam 1 .............................. <tdir>
  [ 18] setprop 376 ............................. pDirection = tdir
  [ 21] ret
end

on defineDirMultiple me, tdir, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1298 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 205 ............................. <tTargetPartList.getOne(pPart)>
  [  9] jmpifz [ 17] ............................ if tTargetPartList.getOne(pPart) then
  [ 12] getparam 1 .............................. <tdir>
  [ 14] setprop 376 ............................. pDirection = tdir
  [ 17] ret
end

on defineAct me, tAct, tTargetPartList
  [  0] getprop 1343 ............................ <pAction>
  [  3] pushcons 27 ............................. <"std">
  [  5] eq ...................................... <pAction = "std">
  [  6] jmpifz [ 14] ............................ if pAction = "std" then
  [  9] getparam 1 .............................. <tAct>
  [ 11] setprop 1343 ............................ pAction = tAct
  [ 14] ret
end

on defineActMultiple me, tAct, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1298 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 205 ............................. <tTargetPartList.getOne(pPart)>
  [  9] jmpifz [ 46] ............................ if tTargetPartList.getOne(pPart) then
  [ 12] getprop 1343 ............................ <pAction>
  [ 15] pushcons 27 ............................. <"std">
  [ 17] eq ...................................... <pAction = "std">
  [ 18] jmpifz [ 26] ............................ if pAction = "std" then
  [ 21] getparam 1 .............................. <tAct>
  [ 23] setprop 1343 ............................ pAction = tAct
  [ 26] getprop 1298 ............................ <pPart>
  [ 29] pushcons 22 ............................. <"ey">
  [ 31] eq ...................................... <pPart = "ey">
  [ 32] getparam 1 .............................. <tAct>
  [ 34] pushcons 27 ............................. <"std">
  [ 36] eq ...................................... <tAct = "std">
  [ 37] and ..................................... <(pPart = "ey") and (tAct = "std")>
  [ 38] jmpifz [ 46] ............................ if (pPart = "ey") and (tAct = "std") then
  [ 41] pushcons 27 ............................. <"std">
  [ 43] setprop 1343 ............................ pAction = "std"
  [ 46] ret
end

on defineInk me, tInk
  [  0] getparam 1 .............................. <tInk>
  [  2] pusharglist 1 ........................... <tInk>
  [  4] extcall 253 ............................. <voidp(tInk)>
  [  6] jmpifz [ 78] ............................ if voidp(tInk) then
  [  9] getprop 1298 ............................ <pPart>
  [ 12] peek 0 .................................. case pPart of
  [ 14] pushcons 22 ............................. <"ey">
  [ 16] eq
  [ 17] jmpifz [ 27] ............................ (case) "ey":
  [ 20] pushint8 36 ............................. <36>
  [ 22] setparam 1 .............................. tInk = 36
  [ 24] jmp [ 76]
  [ 27] peek 0
  [ 29] pushcons 28 ............................. <"sd">
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) "sd":
  [ 35] pushint8 32 ............................. <32>
  [ 37] setparam 1 .............................. tInk = 32
  [ 39] jmp [ 76]
  [ 42] peek 0
  [ 44] pushcons 24 ............................. <"ri">
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) "ri":
  [ 50] pushint8 8 .............................. <8>
  [ 52] setparam 1 .............................. tInk = 8
  [ 54] jmp [ 76]
  [ 57] peek 0
  [ 59] pushcons 25 ............................. <"li">
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) "li":
  [ 65] pushint8 8 .............................. <8>
  [ 67] setparam 1 .............................. tInk = 8
  [ 69] jmp [ 76] ............................... (case) otherwise:
  [ 72] pushint8 41 ............................. <41>
  [ 74] setparam 1 .............................. tInk = 41
  [ 76] pop 1 ................................... end case
  [ 78] getprop 1339 ............................ <pDrawProps>
  [ 81] pushsymb 393 ............................ <#ink>
  [ 84] getparam 1 .............................. <tInk>
  [ 86] pusharglistnoret 3 ...................... <pDrawProps, #ink, tInk>
  [ 88] objcall 136 ............................. pDrawProps[#ink] = tInk
  [ 90] pushint8 1 .............................. <1>
  [ 92] pusharglistnoret 1 ...................... <1>
  [ 94] extcall 116 ............................. return 1
  [ 96] ret
end

on setModel me, tmodel
  [  0] getparam 1 .............................. <tmodel>
  [  2] setprop 1338 ............................ pmodel = tmodel
  [  5] ret
end

on setColor me, tColor
  [  0] getparam 1 .............................. <tColor>
  [  2] pusharglist 1 ........................... <tColor>
  [  4] extcall 253 ............................. <voidp(tColor)>
  [  6] jmpifz [ 14] ............................ if voidp(tColor) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 116 ............................. return 0
  [ 14] getparam 1 .............................. <tColor>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] eq ...................................... <tColor = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tColor = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 116 ............................. return 0
  [ 27] getparam 1 .............................. <tColor>
  [ 29] getobjprop 215 .......................... <tColor.ilk>
  [ 31] pushsymb 327 ............................ <#color>
  [ 34] eq ...................................... <tColor.ilk = #color>
  [ 35] getprop 1339 ............................ <pDrawProps>
  [ 38] pushsymb 393 ............................ <#ink>
  [ 41] pusharglist 2 ........................... <pDrawProps, #ink>
  [ 43] objcall 138 ............................. <pDrawProps[#ink]>
  [ 45] pushint8 36 ............................. <36>
  [ 47] nteq .................................... <pDrawProps[#ink] <> 36>
  [ 48] and ..................................... <(tColor.ilk = #color) and (pDrawProps[#ink] <> 36)>
  [ 49] jmpifz [ 67] ............................ if (tColor.ilk = #color) and (pDrawProps[#ink] <> 36) then / else
  [ 52] getprop 1339 ............................ <pDrawProps>
  [ 55] pushsymb 282 ............................ <#bgColor>
  [ 58] getparam 1 .............................. <tColor>
  [ 60] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, tColor>
  [ 62] objcall 136 ............................. pDrawProps[#bgColor] = tColor
  [ 64] jmp [ 91]
  [ 67] getprop 1339 ............................ <pDrawProps>
  [ 70] pushsymb 282 ............................ <#bgColor>
  [ 73] pushint16 255 ........................... <255>
  [ 76] pushint16 255 ........................... <255>
  [ 79] pushint16 255 ........................... <255>
  [ 82] pusharglist 3 ........................... <255, 255, 255>
  [ 84] extcall 283 ............................. <rgb(255, 255, 255)>
  [ 87] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, rgb(255, 255, 255)>
  [ 89] objcall 136 ............................. pDrawProps[#bgColor] = rgb(255, 255, 255)
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglistnoret 1 ...................... <1>
  [ 95] extcall 116 ............................. return 1
  [ 97] ret
end

on checkPartNotCarrying me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1282 ........................... <#carrying>
  [  5] pusharglist 2 ........................... <me, #carrying>
  [  7] objcall 37 .............................. <me.getProperty(#carrying)>
  [  9] not ..................................... <not me.getProperty(#carrying)>
  [ 10] jmpifz [ 19] ............................ if not me.getProperty(#carrying) then
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 1 ...................... <1>
  [ 17] extcall 116 ............................. return 1
  [ 19] getprop 376 ............................. <pDirection>
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 1209 ........................... <#pFlipList>
  [ 27] getprop 376 ............................. <pDirection>
  [ 30] pushint8 1 .............................. <1>
  [ 32] add ..................................... <pDirection + 1>
  [ 33] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 35] objcall 134 ............................. <me.pFlipList[pDirection + 1]>
  [ 37] eq ...................................... <pDirection = me.pFlipList[pDirection + 1]>
  [ 38] jmpifz [ 55] ............................ if pDirection = me.pFlipList[pDirection + 1] then / else
  [ 41] pushcons 13 ............................. <"rh">
  [ 43] pushcons 14 ............................. <"rs">
  [ 45] pushcons 24 ............................. <"ri">
  [ 47] pusharglist 3 ........................... <["rh", "rs", "ri"]>
  [ 49] pushlist ................................ <["rh", "rs", "ri"]>
  [ 50] setlocal 0 .............................. tHandParts = ["rh", "rs", "ri"]
  [ 52] jmp [ 68]
  [ 55] pushcons 6 .............................. <"lh">
  [ 57] pushcons 7 .............................. <"ls">
  [ 59] pushcons 25 ............................. <"li">
  [ 61] pushcons 24 ............................. <"ri">
  [ 63] pusharglist 4 ........................... <["lh", "ls", "li", "ri"]>
  [ 65] pushlist ................................ <["lh", "ls", "li", "ri"]>
  [ 66] setlocal 0 .............................. tHandParts = ["lh", "ls", "li", "ri"]
  [ 68] getlocal 0 .............................. <tHandParts>
  [ 70] getprop 1298 ............................ <pPart>
  [ 73] pusharglist 2 ........................... <tHandParts, pPart>
  [ 75] objcall 207 ............................. <tHandParts.getPos(pPart)>
  [ 77] jmpifz [ 88] ............................ if tHandParts.getPos(pPart) then / else
  [ 80] pushzero ................................ <0>
  [ 81] pusharglistnoret 1 ...................... <0>
  [ 83] extcall 116 ............................. return 0
  [ 85] jmp [ 94]
  [ 88] pushint8 1 .............................. <1>
  [ 90] pusharglistnoret 1 ...................... <1>
  [ 92] extcall 116 ............................. return 1
  [ 94] ret
end

on doHandWork me, tAct
  [  0] pushcons 6 .............................. <"lh">
  [  2] pushcons 7 .............................. <"ls">
  [  4] pushcons 25 ............................. <"li">
  [  6] pushcons 13 ............................. <"rh">
  [  8] pushcons 14 ............................. <"rs">
  [ 10] pushcons 24 ............................. <"ri">
  [ 12] pusharglist 6 ........................... <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 14] pushlist ................................ <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 15] getprop 1298 ............................ <pPart>
  [ 18] pusharglist 2 ........................... <["lh", "ls", "li", "rh", "rs", "ri"], pPart>
  [ 20] objcall 205 ............................. <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart)>
  [ 22] pushzero ................................ <0>
  [ 23] nteq .................................... <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0>
  [ 24] jmpifz [ 32] ............................ if ["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0 then
  [ 27] getparam 1 .............................. <tAct>
  [ 29] setprop 1343 ............................ pAction = tAct
  [ 32] ret
end

on doHandWorkLeft me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1344 ............................ pActionLh = tAct
  [  5] ret
end

on doHandWorkRight me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1301 ............................ pActionRh = tAct
  [  5] ret
end

on layDown me
  [  0] pushcons 19 ............................. <"lay">
  [  2] setprop 1343 ............................ pAction = "lay"
  [  5] ret
end

on getCurrentMember me
  [  0] getprop 1345 ............................ <pMemString>
  [  3] pusharglistnoret 1 ...................... <pMemString>
  [  5] extcall 116 ............................. return pMemString
  [  7] ret
end

on getColor me
  [  0] getprop 1339 ............................ <pDrawProps>
  [  3] pushsymb 282 ............................ <#bgColor>
  [  6] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [  8] objcall 138 ............................. <pDrawProps[#bgColor]>
  [ 10] pusharglistnoret 1 ...................... <pDrawProps[#bgColor]>
  [ 12] extcall 116 ............................. return pDrawProps[#bgColor]
  [ 14] ret
end

on getDirection me
  [  0] getprop 376 ............................. <pDirection>
  [  3] pusharglistnoret 1 ...................... <pDirection>
  [  5] extcall 116 ............................. return pDirection
  [  7] ret
end

on getLocation me
  [  0] getprop 1345 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 253 ............................. <voidp(pMemString)>
  [  7] jmpifz [ 15] ............................ if voidp(pMemString) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 116 ............................. return 0
  [ 15] getprop 1345 ............................ <pMemString>
  [ 18] pusharglist 1 ........................... <pMemString>
  [ 20] extcall 122 ............................. <memberExists(pMemString)>
  [ 22] not ..................................... <not memberExists(pMemString)>
  [ 23] jmpifz [ 31] ............................ if not memberExists(pMemString) then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 116 ............................. return 0
  [ 31] getprop 1345 ............................ <pMemString>
  [ 34] pusharglist 1 ........................... <pMemString>
  [ 36] extcall 330 ............................. <getmemnum(pMemString)>
  [ 39] pusharglist 1 ........................... <getmemnum(pMemString)>
  [ 41] extcall 263 ............................. <member(getmemnum(pMemString))>
  [ 44] setlocal 0 .............................. tmember = member(getmemnum(pMemString))
  [ 46] getlocal 0 .............................. <tmember>
  [ 48] getobjprop 221 .......................... <tmember.rect>
  [ 50] setlocal 1 .............................. tImgRect = tmember.rect
  [ 52] getlocal 1 .............................. <tImgRect>
  [ 54] getobjprop 219 .......................... <tImgRect.width>
  [ 56] pushint8 2 .............................. <2>
  [ 58] div ..................................... <tImgRect.width / 2>
  [ 59] getlocal 1 .............................. <tImgRect>
  [ 61] getobjprop 261 .......................... <tImgRect.height>
  [ 64] pushint8 2 .............................. <2>
  [ 66] div ..................................... <tImgRect.height / 2>
  [ 67] pusharglist 2 ........................... <tImgRect.width / 2, tImgRect.height / 2>
  [ 69] extcall 264 ............................. <point(tImgRect.width / 2, tImgRect.height / 2)>
  [ 72] setlocal 2 .............................. tCntrPoint = point(tImgRect.width / 2, tImgRect.height / 2)
  [ 74] getlocal 0 .............................. <tmember>
  [ 76] getobjprop 265 .......................... <tmember.regPoint>
  [ 79] setlocal 3 .............................. tRegPoint = tmember.regPoint
  [ 81] getlocal 3 .............................. <tRegPoint>
  [ 83] inv ..................................... <-tRegPoint>
  [ 84] getlocal 2 .............................. <tCntrPoint>
  [ 86] add ..................................... <-tRegPoint + tCntrPoint>
  [ 87] pusharglistnoret 1 ...................... <-tRegPoint + tCntrPoint>
  [ 89] extcall 116 ............................. return -tRegPoint + tCntrPoint
  [ 91] ret
end

on copyPicture me, tImg, tdir, tHumanSize, tAction, tAnimFrame
  [  0] getparam 2 .............................. <tdir>
  [  2] pusharglist 1 ........................... <tdir>
  [  4] extcall 253 ............................. <voidp(tdir)>
  [  6] jmpifz [ 13] ............................ if voidp(tdir) then
  [  9] pushcons 29 ............................. <"2">
  [ 11] setparam 2 .............................. tdir = "2"
  [ 13] getparam 3 .............................. <tHumanSize>
  [ 15] pusharglist 1 ........................... <tHumanSize>
  [ 17] extcall 253 ............................. <voidp(tHumanSize)>
  [ 19] jmpifz [ 26] ............................ if voidp(tHumanSize) then
  [ 22] pushcons 30 ............................. <"h">
  [ 24] setparam 3 .............................. tHumanSize = "h"
  [ 26] getparam 4 .............................. <tAction>
  [ 28] pusharglist 1 ........................... <tAction>
  [ 30] extcall 253 ............................. <voidp(tAction)>
  [ 32] jmpifz [ 39] ............................ if voidp(tAction) then
  [ 35] pushcons 27 ............................. <"std">
  [ 37] setparam 4 .............................. tAction = "std"
  [ 39] getparam 5 .............................. <tAnimFrame>
  [ 41] pusharglist 1 ........................... <tAnimFrame>
  [ 43] extcall 253 ............................. <voidp(tAnimFrame)>
  [ 45] jmpifz [ 52] ............................ if voidp(tAnimFrame) then
  [ 48] pushcons 31 ............................. <"0">
  [ 50] setparam 5 .............................. tAnimFrame = "0"
  [ 52] getparam 3 .............................. <tHumanSize>
  [ 54] pushcons 26 ............................. <"_">
  [ 56] joinstr ................................. <tHumanSize & "_">
  [ 57] getparam 4 .............................. <tAction>
  [ 59] joinstr ................................. <tHumanSize & "_" & tAction>
  [ 60] pushcons 26 ............................. <"_">
  [ 62] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [ 63] getprop 1298 ............................ <pPart>
  [ 66] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [ 67] pushcons 26 ............................. <"_">
  [ 69] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [ 70] getprop 1338 ............................ <pmodel>
  [ 73] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel>
  [ 74] pushcons 26 ............................. <"_">
  [ 76] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_">
  [ 77] getparam 2 .............................. <tdir>
  [ 79] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir>
  [ 80] pushcons 26 ............................. <"_">
  [ 82] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [ 83] getparam 5 .............................. <tAnimFrame>
  [ 85] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame>
  [ 86] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame
  [ 88] getlocal 0 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 122 ............................. <memberExists(tMemName)>
  [ 94] jmpifz [246] ............................ if memberExists(tMemName) then
  [ 97] getlocal 0 .............................. <tMemName>
  [ 99] pusharglist 1 ........................... <tMemName>
  [101] extcall 330 ............................. <getmemnum(tMemName)>
  [104] pusharglist 1 ........................... <getmemnum(tMemName)>
  [106] extcall 263 ............................. <member(getmemnum(tMemName))>
  [109] setlocal 1 .............................. tmember = member(getmemnum(tMemName))
  [111] getlocal 1 .............................. <tmember>
  [113] getobjprop 260 .......................... <tmember.image>
  [116] setlocal 2 .............................. tImage = tmember.image
  [118] getlocal 1 .............................. <tmember>
  [120] getobjprop 265 .......................... <tmember.regPoint>
  [123] setlocal 3 .............................. tRegPnt = tmember.regPoint
  [125] getlocal 3 .............................. <tRegPnt>
  [127] pushint8 1 .............................. <1>
  [129] pusharglist 2 ........................... <tRegPnt, 1>
  [131] objcall 138 ............................. <tRegPnt[1]>
  [133] inv ..................................... <-tRegPnt[1]>
  [134] setlocal 4 .............................. tX = -tRegPnt[1]
  [136] getparam 1 .............................. <tImg>
  [138] getchainedprop 221 ...................... <tImg.rect>
  [140] getobjprop 261 .......................... <tImg.rect.height>
  [143] getlocal 3 .............................. <tRegPnt>
  [145] pushint8 2 .............................. <2>
  [147] pusharglist 2 ........................... <tRegPnt, 2>
  [149] objcall 138 ............................. <tRegPnt[2]>
  [151] sub ..................................... <tImg.rect.height - tRegPnt[2]>
  [152] pushint8 10 ............................. <10>
  [154] sub ..................................... <tImg.rect.height - tRegPnt[2] - 10>
  [155] setlocal 5 .............................. tY = tImg.rect.height - tRegPnt[2] - 10
  [157] getlocal 4 .............................. <tX>
  [159] getlocal 5 .............................. <tY>
  [161] getlocal 4 .............................. <tX>
  [163] getlocal 2 .............................. <tImage>
  [165] getobjprop 219 .......................... <tImage.width>
  [167] add ..................................... <tX + tImage.width>
  [168] getlocal 5 .............................. <tY>
  [170] getlocal 2 .............................. <tImage>
  [172] getobjprop 261 .......................... <tImage.height>
  [175] add ..................................... <tY + tImage.height>
  [176] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [178] extcall 221 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [180] setlocal 6 .............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [182] getlocal 2 .............................. <tImage>
  [184] pusharglist 1 ........................... <tImage>
  [186] objcall 1157 ............................ <tImage.createMatte()>
  [189] setlocal 7 .............................. tMatte = tImage.createMatte()
  [191] getparam 1 .............................. <tImg>
  [193] getlocal 2 .............................. <tImage>
  [195] getlocal 6 .............................. <tRect>
  [197] getlocal 2 .............................. <tImage>
  [199] getobjprop 221 .......................... <tImage.rect>
  [201] pushsymb 1156 ........................... <#maskImage>
  [204] getlocal 7 .............................. <tMatte>
  [206] pushsymb 393 ............................ <#ink>
  [209] getprop 1339 ............................ <pDrawProps>
  [212] pushsymb 393 ............................ <#ink>
  [215] pusharglist 2 ........................... <pDrawProps, #ink>
  [217] objcall 138 ............................. <pDrawProps[#ink]>
  [219] pushsymb 282 ............................ <#bgColor>
  [222] getprop 1339 ............................ <pDrawProps>
  [225] pushsymb 282 ............................ <#bgColor>
  [228] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [230] objcall 138 ............................. <pDrawProps[#bgColor]>
  [232] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [234] pushproplist ............................ <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [235] pusharglistnoret 5 ...................... <tImg, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [237] objcall 293 ............................. tImg.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]])
  [240] pushint8 1 .............................. <1>
  [242] pusharglistnoret 1 ...................... <1>
  [244] extcall 116 ............................. return 1
  [246] pushzero ................................ <0>
  [247] pusharglistnoret 1 ...................... <0>
  [249] extcall 116 ............................. return 0
  [251] ret
end

on reset me
  [  0] pushcons 27 ............................. <"std">
  [  2] setprop 1343 ............................ pAction = "std"
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 120 ............................. <VOID>
  [  9] setprop 1344 ............................ pActionLh = VOID
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 120 ............................. <VOID>
  [ 16] setprop 1301 ............................ pActionRh = VOID
  [ 19] ret
end

on skipAnimationFrame me
  [  0] getprop 1351 ............................ <pAnimFrame>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <pAnimFrame + 1>
  [  6] setprop 1351 ............................ pAnimFrame = pAnimFrame + 1
  [  9] getprop 1351 ............................ <pAnimFrame>
  [ 12] getprop 1352 ............................ <pTotalFrame>
  [ 15] gt ...................................... <pAnimFrame > pTotalFrame>
  [ 16] jmpifz [ 24] ............................ if pAnimFrame > pTotalFrame then
  [ 19] pushint8 1 .............................. <1>
  [ 21] setprop 1351 ............................ pAnimFrame = 1
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 116 ............................. return 1
  [ 30] ret
end

on setAnimation me, tPart, tAnim
  [  0] getparam 1 .............................. <tPart>
  [  2] getprop 1298 ............................ <pPart>
  [  5] nteq .................................... <tPart <> pPart>
  [  6] jmpifz [ 13] ............................ if tPart <> pPart then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 116 ............................. return 
  [ 13] getparam 2 .............................. <tAnim>
  [ 15] pusharglist 1 ........................... <tAnim>
  [ 17] extcall 385 ............................. <value(tAnim)>
  [ 20] setprop 1350 ............................ pAnimation = value(tAnim)
  [ 23] getprop 1350 ............................ <pAnimation>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pAnimation, 1>
  [ 30] objcall 138 ............................. <pAnimation[1]>
  [ 32] getobjprop 149 .......................... <pAnimation[1].count>
  [ 34] setprop 1352 ............................ pTotalFrame = pAnimation[1].count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setprop 1351 ............................ pAnimFrame = 1
  [ 42] ret
end

on remAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1350 ............................ pAnimation = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 1351 ............................ pAnimFrame = 1
  [  9] pushint8 1 .............................. <1>
  [ 11] setprop 1352 ............................ pTotalFrame = 1
  [ 14] ret
end

on animate me
  [  0] getprop 1298 ............................ <pPart>
  [  3] pushcons 24 ............................. <"ri">
  [  5] eq ...................................... <pPart = "ri">
  [  6] jmpifz [ 54] ............................ if pPart = "ri" then
  [  9] getprop 1341 ............................ <pCacheRectA>
  [ 12] getobjprop 219 .......................... <pCacheRectA.width>
  [ 14] pushzero ................................ <0>
  [ 15] gt ...................................... <pCacheRectA.width > 0>
  [ 16] jmpifz [ 48] ............................ if pCacheRectA.width > 0 then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 1211 ......................... <me.pUpdateRect>
  [ 26] getprop 1341 ............................ <pCacheRectA>
  [ 29] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [ 31] extcall 1354 ............................ <union(me.pUpdateRect, pCacheRectA)>
  [ 34] setobjprop 1211 ......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pushzero ................................ <0>
  [ 40] pushzero ................................ <0>
  [ 41] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 43] extcall 221 ............................. <rect(0, 0, 0, 0)>
  [ 45] setprop 1341 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 48] pushcons 0 .............................. <EMPTY>
  [ 50] pusharglistnoret 1 ...................... <EMPTY>
  [ 52] extcall 116 ............................. return EMPTY
  [ 54] getprop 1350 ............................ <pAnimation>
  [ 57] not ..................................... <not pAnimation>
  [ 58] jmpifz [ 67] ............................ if not pAnimation then
  [ 61] pushcons 0 .............................. <EMPTY>
  [ 63] pusharglistnoret 1 ...................... <EMPTY>
  [ 65] extcall 116 ............................. return EMPTY
  [ 67] getprop 376 ............................. <pDirection>
  [ 70] getprop 1350 ............................ <pAnimation>
  [ 73] pushsymb 1371 ........................... <#OffD>
  [ 76] pusharglist 2 ........................... <pAnimation, #OffD>
  [ 78] objcall 138 ............................. <pAnimation[#OffD]>
  [ 80] getprop 1351 ............................ <pAnimFrame>
  [ 83] pusharglist 2 ........................... <pAnimation[#OffD], pAnimFrame>
  [ 85] objcall 138 ............................. <pAnimation[#OffD][pAnimFrame]>
  [ 87] add ..................................... <pDirection + pAnimation[#OffD][pAnimFrame]>
  [ 88] setlocal 0 .............................. tdir = pDirection + pAnimation[#OffD][pAnimFrame]
  [ 90] getlocal 0 .............................. <tdir>
  [ 92] pushint8 7 .............................. <7>
  [ 94] gt ...................................... <tdir > 7>
  [ 95] jmpifz [115] ............................ if tdir > 7 then / else
  [ 98] getlocal 0 .............................. <tdir>
  [100] pushint8 8 .............................. <8>
  [102] sub ..................................... <tdir - 8>
  [103] pushint8 7 .............................. <7>
  [105] pusharglist 2 ........................... <tdir - 8, 7>
  [107] extcall 1372 ............................ <min(tdir - 8, 7)>
  [110] setlocal 0 .............................. tdir = min(tdir - 8, 7)
  [112] jmp [138]
  [115] getlocal 0 .............................. <tdir>
  [117] pushzero ................................ <0>
  [118] lt ...................................... <tdir < 0>
  [119] jmpifz [138] ............................ if tdir < 0 then
  [122] pushint8 7 .............................. <7>
  [124] getlocal 0 .............................. <tdir>
  [126] add ..................................... <7 + tdir>
  [127] pushint8 1 .............................. <1>
  [129] add ..................................... <7 + tdir + 1>
  [130] pushzero ................................ <0>
  [131] pusharglist 2 ........................... <7 + tdir + 1, 0>
  [133] extcall 1373 ............................ <max(7 + tdir + 1, 0)>
  [136] setlocal 0 .............................. tdir = max(7 + tdir + 1, 0)
  [138] pushcons 17 ............................. <"hd">
  [140] pushcons 18 ............................. <"fc">
  [142] pushcons 22 ............................. <"ey">
  [144] pushcons 23 ............................. <"hr">
  [146] pusharglist 4 ........................... <["hd", "fc", "ey", "hr"]>
  [148] pushlist ................................ <["hd", "fc", "ey", "hr"]>
  [149] getprop 1298 ............................ <pPart>
  [152] pusharglist 2 ........................... <["hd", "fc", "ey", "hr"], pPart>
  [154] objcall 205 ............................. <["hd", "fc", "ey", "hr"].getOne(pPart)>
  [156] pushzero ................................ <0>
  [157] nteq .................................... <["hd", "fc", "ey", "hr"].getOne(pPart) <> 0>
  [158] jmpifz [203] ............................ if ["hd", "fc", "ey", "hr"].getOne(pPart) <> 0 then / else
  [161] getlocal 0 .............................. <tdir>
  [163] pushint8 4 .............................. <4>
  [165] eq ...................................... <tdir = 4>
  [166] getprop 376 ............................. <pDirection>
  [169] pushint8 3 .............................. <3>
  [171] eq ...................................... <pDirection = 3>
  [172] and ..................................... <(tdir = 4) and (pDirection = 3)>
  [173] getlocal 0 .............................. <tdir>
  [175] pushzero ................................ <0>
  [176] eq ...................................... <tdir = 0>
  [177] getprop 376 ............................. <pDirection>
  [180] pushint8 7 .............................. <7>
  [182] eq ...................................... <pDirection = 7>
  [183] and ..................................... <(tdir = 0) and (pDirection = 7)>
  [184] or ...................................... <((tdir = 4) and (pDirection = 3)) or ((tdir = 0) and (pDirection = 7))>
  [185] jmpifz [196] ............................ if ((tdir = 4) and (pDirection = 3)) or ((tdir = 0) and (pDirection = 7)) then / else
  [188] pushint8 1 .............................. <1>
  [190] setprop 1348 ............................ pFlipH = 1
  [193] jmp [200]
  [196] pushzero ................................ <0>
  [197] setprop 1348 ............................ pFlipH = 0
  [200] jmp [207]
  [203] pushzero ................................ <0>
  [204] setprop 1348 ............................ pFlipH = 0
  [207] getparam 0 .............................. <me>
  [209] pushsymb 1209 ........................... <#pFlipList>
  [212] getlocal 0 .............................. <tdir>
  [214] pushint8 1 .............................. <1>
  [216] add ..................................... <tdir + 1>
  [217] pusharglist 3 ........................... <me, #pFlipList, tdir + 1>
  [219] objcall 134 ............................. <me.pFlipList[tdir + 1]>
  [221] setlocal 0 .............................. tdir = me.pFlipList[tdir + 1]
  [223] getprop 1350 ............................ <pAnimation>
  [226] pushsymb 1374 ........................... <#OffX>
  [229] pusharglist 2 ........................... <pAnimation, #OffX>
  [231] objcall 138 ............................. <pAnimation[#OffX]>
  [233] getprop 1351 ............................ <pAnimFrame>
  [236] pusharglist 2 ........................... <pAnimation[#OffX], pAnimFrame>
  [238] objcall 138 ............................. <pAnimation[#OffX][pAnimFrame]>
  [240] setprop 1346 ............................ pXFix = pAnimation[#OffX][pAnimFrame]
  [243] getprop 1350 ............................ <pAnimation>
  [246] pushsymb 1375 ........................... <#OffY>
  [249] pusharglist 2 ........................... <pAnimation, #OffY>
  [251] objcall 138 ............................. <pAnimation[#OffY]>
  [253] getprop 1351 ............................ <pAnimFrame>
  [256] pusharglist 2 ........................... <pAnimation[#OffY], pAnimFrame>
  [258] objcall 138 ............................. <pAnimation[#OffY][pAnimFrame]>
  [260] setprop 1347 ............................ pYFix = pAnimation[#OffY][pAnimFrame]
  [263] getparam 0 .............................. <me>
  [265] getobjprop 1253 ......................... <me.pPeopleSize>
  [268] pushcons 26 ............................. <"_">
  [270] joinstr ................................. <me.pPeopleSize & "_">
  [271] getprop 1350 ............................ <pAnimation>
  [274] pushsymb 1376 ........................... <#act>
  [277] pusharglist 2 ........................... <pAnimation, #act>
  [279] objcall 138 ............................. <pAnimation[#act]>
  [281] getprop 1351 ............................ <pAnimFrame>
  [284] pusharglist 2 ........................... <pAnimation[#act], pAnimFrame>
  [286] objcall 138 ............................. <pAnimation[#act][pAnimFrame]>
  [288] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame]>
  [289] pushcons 26 ............................. <"_">
  [291] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_">
  [292] getprop 1298 ............................ <pPart>
  [295] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart>
  [296] pushcons 26 ............................. <"_">
  [298] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_">
  [299] getprop 1338 ............................ <pmodel>
  [302] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel>
  [303] pushcons 26 ............................. <"_">
  [305] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_">
  [306] getlocal 0 .............................. <tdir>
  [308] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir>
  [309] pushcons 26 ............................. <"_">
  [311] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [312] getprop 1350 ............................ <pAnimation>
  [315] pushsymb 1377 ........................... <#frm>
  [318] pusharglist 2 ........................... <pAnimation, #frm>
  [320] objcall 138 ............................. <pAnimation[#frm]>
  [322] getprop 1351 ............................ <pAnimFrame>
  [325] pusharglist 2 ........................... <pAnimation[#frm], pAnimFrame>
  [327] objcall 138 ............................. <pAnimation[#frm][pAnimFrame]>
  [329] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]>
  [330] setlocal 1 .............................. tMemName = me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]
  [332] getprop 1351 ............................ <pAnimFrame>
  [335] pushint8 1 .............................. <1>
  [337] add ..................................... <pAnimFrame + 1>
  [338] setprop 1351 ............................ pAnimFrame = pAnimFrame + 1
  [341] getprop 1351 ............................ <pAnimFrame>
  [344] getprop 1352 ............................ <pTotalFrame>
  [347] gt ...................................... <pAnimFrame > pTotalFrame>
  [348] jmpifz [356] ............................ if pAnimFrame > pTotalFrame then
  [351] pushint8 1 .............................. <1>
  [353] setprop 1351 ............................ pAnimFrame = 1
  [356] getlocal 1 .............................. <tMemName>
  [358] pusharglistnoret 1 ...................... <tMemName>
  [360] extcall 116 ............................. return tMemName
  [362] ret
end

on flipHorizontal me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] getobjprop 219 .......................... <tImg.width>
  [  4] getparam 1 .............................. <tImg>
  [  6] getobjprop 261 .......................... <tImg.height>
  [  9] getparam 1 .............................. <tImg>
  [ 11] getobjprop 1147 ......................... <tImg.depth>
  [ 14] pusharglist 3 ........................... <tImg.width, tImg.height, tImg.depth>
  [ 16] extcall 260 ............................. <image(tImg.width, tImg.height, tImg.depth)>
  [ 19] setlocal 0 .............................. tImage = image(tImg.width, tImg.height, tImg.depth)
  [ 21] getparam 1 .............................. <tImg>
  [ 23] getobjprop 219 .......................... <tImg.width>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglist 2 ........................... <tImg.width, 0>
  [ 28] extcall 264 ............................. <point(tImg.width, 0)>
  [ 31] pushzero ................................ <0>
  [ 32] pushzero ................................ <0>
  [ 33] pusharglist 2 ........................... <0, 0>
  [ 35] extcall 264 ............................. <point(0, 0)>
  [ 38] pushzero ................................ <0>
  [ 39] getparam 1 .............................. <tImg>
  [ 41] getobjprop 261 .......................... <tImg.height>
  [ 44] pusharglist 2 ........................... <0, tImg.height>
  [ 46] extcall 264 ............................. <point(0, tImg.height)>
  [ 49] getparam 1 .............................. <tImg>
  [ 51] getobjprop 219 .......................... <tImg.width>
  [ 53] getparam 1 .............................. <tImg>
  [ 55] getobjprop 261 .......................... <tImg.height>
  [ 58] pusharglist 2 ........................... <tImg.width, tImg.height>
  [ 60] extcall 264 ............................. <point(tImg.width, tImg.height)>
  [ 63] pusharglist 4 ........................... <[point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]>
  [ 65] pushlist ................................ <[point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]>
  [ 66] setlocal 1 .............................. tQuad = [point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]
  [ 68] getlocal 0 .............................. <tImage>
  [ 70] getparam 1 .............................. <tImg>
  [ 72] getlocal 1 .............................. <tQuad>
  [ 74] getparam 1 .............................. <tImg>
  [ 76] getobjprop 221 .......................... <tImg.rect>
  [ 78] pusharglistnoret 4 ...................... <tImage, tImg, tQuad, tImg.rect>
  [ 80] objcall 293 ............................. tImage.copyPixels(tImg, tQuad, tImg.rect)
  [ 83] getlocal 0 .............................. <tImage>
  [ 85] pusharglistnoret 1 ...................... <tImage>
  [ 87] extcall 116 ............................. return tImage
  [ 89] ret
end
