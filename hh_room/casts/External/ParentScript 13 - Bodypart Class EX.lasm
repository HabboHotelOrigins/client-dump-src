property ancestor, pPart, pmodel, pDirection, pDrawProps, pAction, pActionLh, pActionRh, pMemString, pXFix, pYFix, pLastLocFix, pCacheImage, pCacheRectA, pCacheRectB, pFlipH, pAnimation, pAnimFrame, pTotalFrame

on deconsturct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 159 ............................. <VOID>
  [  4] setprop 1351 ............................ ancestor = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 21 .............................. return 1
  [ 13] ret
end

on define me, tPart, tmodel, tColor, tDirection, tAction, tAncestor
  [  0] getparam 6 .............................. <tAncestor>
  [  2] setprop 1351 ............................ ancestor = tAncestor
  [  5] getparam 1 .............................. <tPart>
  [  7] setprop 1312 ............................ pPart = tPart
  [ 10] getparam 2 .............................. <tmodel>
  [ 12] setprop 1352 ............................ pmodel = tmodel
  [ 15] pushsymb 1171 ........................... <#maskImage>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 419 ............................ <#ink>
  [ 22] pushzero ................................ <0>
  [ 23] pushsymb 311 ............................ <#bgColor>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglist 6 ........................... <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 29] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 30] setprop 1353 ............................ pDrawProps = [#maskImage: 0, #ink: 0, #bgColor: 0]
  [ 33] pushzero ................................ <0>
  [ 34] setprop 1354 ............................ pCacheImage = 0
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pushzero ................................ <0>
  [ 40] pushzero ................................ <0>
  [ 41] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 43] extcall 322 ............................. <rect(0, 0, 0, 0)>
  [ 46] setprop 1355 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 49] pushzero ................................ <0>
  [ 50] pushzero ................................ <0>
  [ 51] pushzero ................................ <0>
  [ 52] pushzero ................................ <0>
  [ 53] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 55] extcall 322 ............................. <rect(0, 0, 0, 0)>
  [ 58] setprop 1356 ............................ pCacheRectB = rect(0, 0, 0, 0)
  [ 61] getparam 0 .............................. <me>
  [ 63] pusharglistnoret 1 ...................... <me>
  [ 65] objcall 1347 ............................ me.defineInk()
  [ 68] getparam 0 .............................. <me>
  [ 70] getparam 3 .............................. <tColor>
  [ 72] pusharglistnoret 2 ...................... <me, tColor>
  [ 74] objcall 1287 ............................ me.setColor(tColor)
  [ 77] getparam 4 .............................. <tDirection>
  [ 79] setprop 34 .............................. pDirection = tDirection
  [ 81] getparam 5 .............................. <tAction>
  [ 83] setprop 1357 ............................ pAction = tAction
  [ 86] getparam 5 .............................. <tAction>
  [ 88] setprop 1358 ............................ pActionLh = tAction
  [ 91] getparam 5 .............................. <tAction>
  [ 93] setprop 1315 ............................ pActionRh = tAction
  [ 96] pushcons 0 .............................. <EMPTY>
  [ 98] setprop 1359 ............................ pMemString = EMPTY
  [101] pushzero ................................ <0>
  [102] setprop 1360 ............................ pXFix = 0
  [105] pushzero ................................ <0>
  [106] setprop 1361 ............................ pYFix = 0
  [109] pushzero ................................ <0>
  [110] setprop 1362 ............................ pFlipH = 0
  [113] pushint16 1000 .......................... <1000>
  [116] pushint16 1000 .......................... <1000>
  [119] pusharglist 2 ........................... <1000, 1000>
  [121] extcall 293 ............................. <point(1000, 1000)>
  [124] setprop 1363 ............................ pLastLocFix = point(1000, 1000)
  [127] pushzero ................................ <0>
  [128] setprop 1364 ............................ pAnimation = 0
  [131] pushint8 1 .............................. <1>
  [133] setprop 6 ............................... pAnimFrame = 1
  [135] pushint8 1 .............................. <1>
  [137] setprop 1365 ............................ pTotalFrame = 1
  [140] pushint8 1 .............................. <1>
  [142] pusharglistnoret 1 ...................... <1>
  [144] extcall 21 .............................. return 1
  [146] ret
end

on update me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tAnimCntr = 0
  [  3] getprop 1357 ............................ <pAction>
  [  6] setlocal 1 .............................. tAction = pAction
  [  8] getprop 1312 ............................ <pPart>
  [ 11] setlocal 2 .............................. tPart = pPart
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 1224 ........................... <#pFlipList>
  [ 18] getprop 34 .............................. <pDirection>
  [ 20] pushint8 1 .............................. <1>
  [ 22] add ..................................... <pDirection + 1>
  [ 23] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 25] objcall 33 .............................. <me.pFlipList[pDirection + 1]>
  [ 27] setlocal 3 .............................. tdir = me.pFlipList[pDirection + 1]
  [ 29] pushzero ................................ <0>
  [ 30] setprop 1360 ............................ pXFix = 0
  [ 33] pushzero ................................ <0>
  [ 34] setprop 1361 ............................ pYFix = 0
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 1247 ......................... <me.pAnimating>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 1348 ............................ <me.checkPartNotCarrying()>
  [ 49] and ..................................... <me.pAnimating and me.checkPartNotCarrying()>
  [ 50] jmpifz [309] ............................ if me.pAnimating and me.checkPartNotCarrying() then / else
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglist 1 ........................... <me>
  [ 57] objcall 876 ............................. <me.animate()>
  [ 60] setlocal 4 .............................. tMemString = me.animate()
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 34 ........................... <me.pDirection>
  [ 66] peek 0 .................................. case me.pDirection of
  [ 68] pushzero ................................ <0>
  [ 69] eq
  [ 70] jmpifz [ 98] ............................ (case) 0:
  [ 73] getprop 1361 ............................ <pYFix>
  [ 76] getprop 1360 ............................ <pXFix>
  [ 79] pushint8 2 .............................. <2>
  [ 81] div ..................................... <pXFix / 2>
  [ 82] add ..................................... <pYFix + (pXFix / 2)>
  [ 83] setprop 1361 ............................ pYFix = pYFix + (pXFix / 2)
  [ 86] getprop 1360 ............................ <pXFix>
  [ 89] pushint8 2 .............................. <2>
  [ 91] div ..................................... <pXFix / 2>
  [ 92] setprop 1360 ............................ pXFix = pXFix / 2
  [ 95] jmp [264]
  [ 98] peek 0
  [100] pushint8 1 .............................. <1>
  [102] eq
  [103] jmpifz [123] ............................ (case) 1:
  [106] getprop 1361 ............................ <pYFix>
  [109] getprop 1360 ............................ <pXFix>
  [112] add ..................................... <pYFix + pXFix>
  [113] setprop 1361 ............................ pYFix = pYFix + pXFix
  [116] pushzero ................................ <0>
  [117] setprop 1360 ............................ pXFix = 0
  [120] jmp [264]
  [123] peek 0
  [125] pushint8 2 .............................. <2>
  [127] eq
  [128] jmpifz [156] ............................ (case) 2:
  [131] getprop 1361 ............................ <pYFix>
  [134] getprop 1360 ............................ <pXFix>
  [137] pushint8 2 .............................. <2>
  [139] div ..................................... <pXFix / 2>
  [140] sub ..................................... <pYFix - (pXFix / 2)>
  [141] setprop 1361 ............................ pYFix = pYFix - (pXFix / 2)
  [144] getprop 1360 ............................ <pXFix>
  [147] pushint8 2 .............................. <2>
  [149] div ..................................... <pXFix / 2>
  [150] setprop 1360 ............................ pXFix = pXFix / 2
  [153] jmp [264]
  [156] peek 0
  [158] pushint8 4 .............................. <4>
  [160] eq
  [161] jmpifz [190] ............................ (case) 4:
  [164] getprop 1361 ............................ <pYFix>
  [167] getprop 1360 ............................ <pXFix>
  [170] pushint8 2 .............................. <2>
  [172] div ..................................... <pXFix / 2>
  [173] add ..................................... <pYFix + (pXFix / 2)>
  [174] setprop 1361 ............................ pYFix = pYFix + (pXFix / 2)
  [177] getprop 1360 ............................ <pXFix>
  [180] inv ..................................... <-pXFix>
  [181] pushint8 2 .............................. <2>
  [183] div ..................................... <-pXFix / 2>
  [184] setprop 1360 ............................ pXFix = -pXFix / 2
  [187] jmp [264]
  [190] peek 0
  [192] pushint8 5 .............................. <5>
  [194] eq
  [195] jmpifz [215] ............................ (case) 5:
  [198] getprop 1361 ............................ <pYFix>
  [201] getprop 1360 ............................ <pXFix>
  [204] sub ..................................... <pYFix - pXFix>
  [205] setprop 1361 ............................ pYFix = pYFix - pXFix
  [208] pushzero ................................ <0>
  [209] setprop 1360 ............................ pXFix = 0
  [212] jmp [264]
  [215] peek 0
  [217] pushint8 6 .............................. <6>
  [219] eq
  [220] jmpifz [249] ............................ (case) 6:
  [223] getprop 1361 ............................ <pYFix>
  [226] getprop 1360 ............................ <pXFix>
  [229] pushint8 2 .............................. <2>
  [231] div ..................................... <pXFix / 2>
  [232] sub ..................................... <pYFix - (pXFix / 2)>
  [233] setprop 1361 ............................ pYFix = pYFix - (pXFix / 2)
  [236] getprop 1360 ............................ <pXFix>
  [239] inv ..................................... <-pXFix>
  [240] pushint8 2 .............................. <2>
  [242] div ..................................... <-pXFix / 2>
  [243] setprop 1360 ............................ pXFix = -pXFix / 2
  [246] jmp [264]
  [249] peek 0
  [251] pushint8 7 .............................. <7>
  [253] eq
  [254] jmpifz [264] ............................ (case) 7:
  [257] getprop 1360 ............................ <pXFix>
  [260] inv ..................................... <-pXFix>
  [261] setprop 1360 ............................ pXFix = -pXFix
  [264] pop 1 ................................... end case
  [266] getparam 0 .............................. <me>
  [268] getobjprop 1268 ......................... <me.pPeopleSize>
  [271] pushcons 1 .............................. <"sh">
  [273] eq ...................................... <me.pPeopleSize = "sh">
  [274] jmpifz [284] ............................ if me.pPeopleSize = "sh" then / else
  [277] pushcons 2 .............................. <0.69999999999999996>
  [279] setlocal 5 .............................. tSizeMultiplier = 0.69999999999999996
  [281] jmp [288]
  [284] pushint8 1 .............................. <1>
  [286] setlocal 5 .............................. tSizeMultiplier = 1
  [288] getprop 1360 ............................ <pXFix>
  [291] getlocal 5 .............................. <tSizeMultiplier>
  [293] mul ..................................... <pXFix * tSizeMultiplier>
  [294] setprop 1360 ............................ pXFix = pXFix * tSizeMultiplier
  [297] getprop 1361 ............................ <pYFix>
  [300] getlocal 5 .............................. <tSizeMultiplier>
  [302] mul ..................................... <pYFix * tSizeMultiplier>
  [303] setprop 1361 ............................ pYFix = pYFix * tSizeMultiplier
  [306] jmp [956]
  [309] getprop 1312 ............................ <pPart>
  [312] peek 0 .................................. case pPart of
  [314] pushcons 3 .............................. <"bd">
  [316] nteq
  [317] jmpifz [336] ............................ (case) "bd", ...
  [320] peek 0
  [322] pushcons 4 .............................. <"lg">
  [324] nteq
  [325] jmpifz [336] ............................ (case) ..., "lg", ...
  [328] peek 0
  [330] pushcons 1 .............................. <"sh">
  [332] eq
  [333] jmpifz [355] ............................ (case) ..., "sh":
  [336] getprop 1357 ............................ <pAction>
  [339] pushcons 5 .............................. <"wlk">
  [341] eq ...................................... <pAction = "wlk">
  [342] jmpifz [352] ............................ if pAction = "wlk" then
  [345] getparam 0 .............................. <me>
  [347] getobjprop 1232 ......................... <me.pAnimCounter>
  [350] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [352] jmp [912]
  [355] peek 0
  [357] pushcons 6 .............................. <"lh">
  [359] nteq
  [360] jmpifz [371] ............................ (case) "lh", ...
  [363] peek 0
  [365] pushcons 7 .............................. <"ls">
  [367] eq
  [368] jmpifz [511] ............................ (case) ..., "ls":
  [371] getprop 34 .............................. <pDirection>
  [373] getlocal 3 .............................. <tdir>
  [375] eq ...................................... <pDirection = tdir>
  [376] jmpifz [398] ............................ if pDirection = tdir then / else
  [379] getprop 1358 ............................ <pActionLh>
  [382] pusharglist 1 ........................... <pActionLh>
  [384] extcall 10 .............................. <voidp(pActionLh)>
  [386] not ..................................... <not voidp(pActionLh)>
  [387] jmpifz [395] ............................ if not voidp(pActionLh) then
  [390] getprop 1358 ............................ <pActionLh>
  [393] setlocal 1 .............................. tAction = pActionLh
  [395] jmp [414]
  [398] getprop 1315 ............................ <pActionRh>
  [401] pusharglist 1 ........................... <pActionRh>
  [403] extcall 10 .............................. <voidp(pActionRh)>
  [405] not ..................................... <not voidp(pActionRh)>
  [406] jmpifz [414] ............................ if not voidp(pActionRh) then
  [409] getprop 1315 ............................ <pActionRh>
  [412] setlocal 1 .............................. tAction = pActionRh
  [414] getlocal 1 .............................. <tAction>
  [416] pushcons 5 .............................. <"wlk">
  [418] eq ...................................... <tAction = "wlk">
  [419] jmpifz [432] ............................ if tAction = "wlk" then / else
  [422] getparam 0 .............................. <me>
  [424] getobjprop 1232 ......................... <me.pAnimCounter>
  [427] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [429] jmp [508]
  [432] getlocal 1 .............................. <tAction>
  [434] pushcons 8 .............................. <"wav">
  [436] eq ...................................... <tAction = "wav">
  [437] jmpifz [453] ............................ if tAction = "wav" then / else
  [440] getparam 0 .............................. <me>
  [442] getobjprop 1232 ......................... <me.pAnimCounter>
  [445] pushint8 2 .............................. <2>
  [447] mod ..................................... <me.pAnimCounter mod 2>
  [448] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [450] jmp [508]
  [453] pushcons 9 .............................. <"crr">
  [455] pushcons 10 ............................. <"drk">
  [457] pushcons 11 ............................. <"ohd">
  [459] pusharglist 3 ........................... <["crr", "drk", "ohd"]>
  [461] pushlist ................................ <["crr", "drk", "ohd"]>
  [462] getlocal 1 .............................. <tAction>
  [464] pusharglist 2 ........................... <["crr", "drk", "ohd"], tAction>
  [466] objcall 240 ............................. <["crr", "drk", "ohd"].getPos(tAction)>
  [468] pushzero ................................ <0>
  [469] nteq .................................... <["crr", "drk", "ohd"].getPos(tAction) <> 0>
  [470] jmpifz [508] ............................ if ["crr", "drk", "ohd"].getPos(tAction) <> 0 then
  [473] getprop 34 .............................. <pDirection>
  [475] pushint8 4 .............................. <4>
  [477] gteq .................................... <pDirection >= 4>
  [478] jmpifz [504] ............................ if pDirection >= 4 then
  [481] pushint8 40 ............................. <40>
  [483] inv ..................................... <-40>
  [484] setprop 1360 ............................ pXFix = -40
  [487] pushcons 12 ............................. <"r">
  [489] getprop 1312 ............................ <pPart>
  [492] pushsymb 450 ............................ <#char>
  [495] pushint8 2 .............................. <2>
  [497] pusharglist 3 ........................... <pPart, #char, 2>
  [499] objcall 33 .............................. <pPart.char[2]>
  [501] joinstr ................................. <"r" & pPart.char[2]>
  [502] setlocal 2 .............................. tPart = "r" & pPart.char[2]
  [504] getprop 34 .............................. <pDirection>
  [506] setlocal 3 .............................. tdir = pDirection
  [508] jmp [912]
  [511] peek 0
  [513] pushcons 13 ............................. <"rh">
  [515] nteq
  [516] jmpifz [527] ............................ (case) "rh", ...
  [519] peek 0
  [521] pushcons 14 ............................. <"rs">
  [523] eq
  [524] jmpifz [669] ............................ (case) ..., "rs":
  [527] getprop 34 .............................. <pDirection>
  [529] getlocal 3 .............................. <tdir>
  [531] eq ...................................... <pDirection = tdir>
  [532] jmpifz [554] ............................ if pDirection = tdir then / else
  [535] getprop 1315 ............................ <pActionRh>
  [538] pusharglist 1 ........................... <pActionRh>
  [540] extcall 10 .............................. <voidp(pActionRh)>
  [542] not ..................................... <not voidp(pActionRh)>
  [543] jmpifz [551] ............................ if not voidp(pActionRh) then
  [546] getprop 1315 ............................ <pActionRh>
  [549] setlocal 1 .............................. tAction = pActionRh
  [551] jmp [570]
  [554] getprop 1358 ............................ <pActionLh>
  [557] pusharglist 1 ........................... <pActionLh>
  [559] extcall 10 .............................. <voidp(pActionLh)>
  [561] not ..................................... <not voidp(pActionLh)>
  [562] jmpifz [570] ............................ if not voidp(pActionLh) then
  [565] getprop 1358 ............................ <pActionLh>
  [568] setlocal 1 .............................. tAction = pActionLh
  [570] getlocal 1 .............................. <tAction>
  [572] pushcons 5 .............................. <"wlk">
  [574] eq ...................................... <tAction = "wlk">
  [575] jmpifz [588] ............................ if tAction = "wlk" then / else
  [578] getparam 0 .............................. <me>
  [580] getobjprop 1232 ......................... <me.pAnimCounter>
  [583] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [585] jmp [666]
  [588] getlocal 1 .............................. <tAction>
  [590] pushcons 8 .............................. <"wav">
  [592] eq ...................................... <tAction = "wav">
  [593] jmpifz [630] ............................ if tAction = "wav" then / else
  [596] getparam 0 .............................. <me>
  [598] getobjprop 1232 ......................... <me.pAnimCounter>
  [601] pushint8 2 .............................. <2>
  [603] mod ..................................... <me.pAnimCounter mod 2>
  [604] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [606] pushcons 15 ............................. <"l">
  [608] getprop 1312 ............................ <pPart>
  [611] pushsymb 450 ............................ <#char>
  [614] pushint8 2 .............................. <2>
  [616] pusharglist 3 ........................... <pPart, #char, 2>
  [618] objcall 33 .............................. <pPart.char[2]>
  [620] joinstr ................................. <"l" & pPart.char[2]>
  [621] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [623] getprop 34 .............................. <pDirection>
  [625] setlocal 3 .............................. tdir = pDirection
  [627] jmp [666]
  [630] getlocal 1 .............................. <tAction>
  [632] pushcons 16 ............................. <"sig">
  [634] eq ...................................... <tAction = "sig">
  [635] jmpifz [666] ............................ if tAction = "sig" then
  [638] pushzero ................................ <0>
  [639] setlocal 0 .............................. tAnimCntr = 0
  [641] pushcons 15 ............................. <"l">
  [643] getprop 1312 ............................ <pPart>
  [646] pushsymb 450 ............................ <#char>
  [649] pushint8 2 .............................. <2>
  [651] pusharglist 3 ........................... <pPart, #char, 2>
  [653] objcall 33 .............................. <pPart.char[2]>
  [655] joinstr ................................. <"l" & pPart.char[2]>
  [656] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [658] getprop 34 .............................. <pDirection>
  [660] setlocal 3 .............................. tdir = pDirection
  [662] pushcons 8 .............................. <"wav">
  [664] setlocal 1 .............................. tAction = "wav"
  [666] jmp [912]
  [669] peek 0
  [671] pushcons 17 ............................. <"hd">
  [673] nteq
  [674] jmpifz [685] ............................ (case) "hd", ...
  [677] peek 0
  [679] pushcons 18 ............................. <"fc">
  [681] eq
  [682] jmpifz [726] ............................ (case) ..., "fc":
  [685] getparam 0 .............................. <me>
  [687] getobjprop 1240 ......................... <me.pTalking>
  [690] jmpifz [723] ............................ if me.pTalking then
  [693] getprop 1357 ............................ <pAction>
  [696] pushcons 19 ............................. <"lay">
  [698] eq ...................................... <pAction = "lay">
  [699] jmpifz [709] ............................ if pAction = "lay" then / else
  [702] pushcons 20 ............................. <"lsp">
  [704] setlocal 1 .............................. tAction = "lsp"
  [706] jmp [713]
  [709] pushcons 21 ............................. <"spk">
  [711] setlocal 1 .............................. tAction = "spk"
  [713] getparam 0 .............................. <me>
  [715] getobjprop 1232 ......................... <me.pAnimCounter>
  [718] pushint8 2 .............................. <2>
  [720] mod ..................................... <me.pAnimCounter mod 2>
  [721] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [723] jmp [912]
  [726] peek 0
  [728] pushcons 22 ............................. <"ey">
  [730] eq
  [731] jmpifz [769] ............................ (case) "ey":
  [734] getparam 0 .............................. <me>
  [736] getobjprop 1240 ......................... <me.pTalking>
  [739] getprop 1357 ............................ <pAction>
  [742] pushcons 19 ............................. <"lay">
  [744] nteq .................................... <pAction <> "lay">
  [745] and ..................................... <me.pTalking and (pAction <> "lay")>
  [746] getparam 0 .............................. <me>
  [748] getobjprop 1232 ......................... <me.pAnimCounter>
  [751] pushint8 2 .............................. <2>
  [753] mod ..................................... <me.pAnimCounter mod 2>
  [754] pushzero ................................ <0>
  [755] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [756] and ..................................... <me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0)>
  [757] jmpifz [766] ............................ if me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0) then
  [760] pushint8 1 .............................. <1>
  [762] inv ..................................... <-1>
  [763] setprop 1361 ............................ pYFix = -1
  [766] jmp [912]
  [769] peek 0
  [771] pushcons 23 ............................. <"hr">
  [773] eq
  [774] jmpifz [812] ............................ (case) "hr":
  [777] getparam 0 .............................. <me>
  [779] getobjprop 1240 ......................... <me.pTalking>
  [782] getparam 0 .............................. <me>
  [784] getobjprop 1232 ......................... <me.pAnimCounter>
  [787] pushint8 2 .............................. <2>
  [789] mod ..................................... <me.pAnimCounter mod 2>
  [790] pushzero ................................ <0>
  [791] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [792] and ..................................... <me.pTalking and ((me.pAnimCounter mod 2) = 0)>
  [793] jmpifz [809] ............................ if me.pTalking and ((me.pAnimCounter mod 2) = 0) then
  [796] getprop 1357 ............................ <pAction>
  [799] pushcons 19 ............................. <"lay">
  [801] nteq .................................... <pAction <> "lay">
  [802] jmpifz [809] ............................ if pAction <> "lay" then
  [805] pushcons 21 ............................. <"spk">
  [807] setlocal 1 .............................. tAction = "spk"
  [809] jmp [912]
  [812] peek 0
  [814] pushcons 24 ............................. <"ri">
  [816] eq
  [817] jmpifz [895] ............................ (case) "ri":
  [820] getparam 0 .............................. <me>
  [822] getobjprop 1241 ......................... <me.pCarrying>
  [825] not ..................................... <not me.pCarrying>
  [826] jmpifz [883] ............................ if not me.pCarrying then / else
  [829] pushcons 0 .............................. <EMPTY>
  [831] setprop 1359 ............................ pMemString = EMPTY
  [834] getprop 1355 ............................ <pCacheRectA>
  [837] getobjprop 252 .......................... <pCacheRectA.width>
  [839] pushzero ................................ <0>
  [840] gt ...................................... <pCacheRectA.width > 0>
  [841] jmpifz [874] ............................ if pCacheRectA.width > 0 then
  [844] getparam 0 .............................. <me>
  [846] getparam 0 .............................. <me>
  [848] getobjprop 1226 ......................... <me.pUpdateRect>
  [851] getprop 1355 ............................ <pCacheRectA>
  [854] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [856] extcall 1367 ............................ <union(me.pUpdateRect, pCacheRectA)>
  [859] setobjprop 1226 ......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [862] pushzero ................................ <0>
  [863] pushzero ................................ <0>
  [864] pushzero ................................ <0>
  [865] pushzero ................................ <0>
  [866] pusharglist 4 ........................... <0, 0, 0, 0>
  [868] extcall 322 ............................. <rect(0, 0, 0, 0)>
  [871] setprop 1355 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [874] pop 1
  [876] pusharglistnoret 0 ...................... <>
  [878] extcall 21 .............................. return 
  [880] jmp [892]
  [883] getprop 1315 ............................ <pActionRh>
  [886] setlocal 1 .............................. tAction = pActionRh
  [888] getprop 34 .............................. <pDirection>
  [890] setlocal 3 .............................. tdir = pDirection
  [892] jmp [912]
  [895] peek 0
  [897] pushcons 25 ............................. <"li">
  [899] eq
  [900] jmpifz [912] ............................ (case) "li":
  [903] getprop 1358 ............................ <pActionLh>
  [906] setlocal 1 .............................. tAction = pActionLh
  [908] getprop 34 .............................. <pDirection>
  [910] setlocal 3 .............................. tdir = pDirection
  [912] pop 1 ................................... end case
  [914] getparam 0 .............................. <me>
  [916] getobjprop 1268 ......................... <me.pPeopleSize>
  [919] pushcons 26 ............................. <"_">
  [921] joinstr ................................. <me.pPeopleSize & "_">
  [922] getlocal 1 .............................. <tAction>
  [924] joinstr ................................. <me.pPeopleSize & "_" & tAction>
  [925] pushcons 26 ............................. <"_">
  [927] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_">
  [928] getlocal 2 .............................. <tPart>
  [930] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart>
  [931] pushcons 26 ............................. <"_">
  [933] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_">
  [934] getprop 1352 ............................ <pmodel>
  [937] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel>
  [938] pushcons 26 ............................. <"_">
  [940] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_">
  [941] getlocal 3 .............................. <tdir>
  [943] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir>
  [944] pushcons 26 ............................. <"_">
  [946] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_">
  [947] getlocal 0 .............................. <tAnimCntr>
  [949] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCntr>
  [950] setlocal 4 .............................. tMemString = me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCntr
  [952] pushzero ................................ <0>
  [953] setprop 1362 ............................ pFlipH = 0
  [956] getprop 1363 ............................ <pLastLocFix>
  [959] getprop 1360 ............................ <pXFix>
  [962] getprop 1361 ............................ <pYFix>
  [965] pusharglist 2 ........................... <pXFix, pYFix>
  [967] extcall 293 ............................. <point(pXFix, pYFix)>
  [970] nteq .................................... <pLastLocFix <> point(pXFix, pYFix)>
  [971] setlocal 6 .............................. tLocFixChanged = pLastLocFix <> point(pXFix, pYFix)
  [973] getprop 1360 ............................ <pXFix>
  [976] getprop 1361 ............................ <pYFix>
  [979] pusharglist 2 ........................... <pXFix, pYFix>
  [981] extcall 293 ............................. <point(pXFix, pYFix)>
  [984] setprop 1363 ............................ pLastLocFix = point(pXFix, pYFix)
  [987] getprop 1359 ............................ <pMemString>
  [990] getlocal 4 .............................. <tMemString>
  [992] nteq .................................... <pMemString <> tMemString>
  [993] getlocal 6 .............................. <tLocFixChanged>
  [995] or ...................................... <(pMemString <> tMemString) or tLocFixChanged>
  [996] jmpifz [1325] ........................... if (pMemString <> tMemString) or tLocFixChanged then
  [999] getlocal 4 .............................. <tMemString>
  [1001] setprop 1359 ........................... pMemString = tMemString
  [1004] getlocal 4 ............................. <tMemString>
  [1006] pusharglist 1 .......................... <tMemString>
  [1008] extcall 37 ............................. <getmemnum(tMemString)>
  [1010] setlocal 7 ............................. tMemNum = getmemnum(tMemString)
  [1012] getlocal 7 ............................. <tMemNum>
  [1014] pushzero ............................... <0>
  [1015] gt ..................................... <tMemNum > 0>
  [1016] jmpifz [1291] .......................... if tMemNum > 0 then / else
  [1019] getlocal 7 ............................. <tMemNum>
  [1021] pusharglist 1 .......................... <tMemNum>
  [1023] extcall 30 ............................. <member(tMemNum)>
  [1025] setlocal 8 ............................. tmember = member(tMemNum)
  [1027] getlocal 8 ............................. <tmember>
  [1029] getobjprop 294 ......................... <tmember.regPoint>
  [1032] setlocal 9 ............................. tRegPnt = tmember.regPoint
  [1034] getlocal 9 ............................. <tRegPnt>
  [1036] pushint8 1 ............................. <1>
  [1038] pusharglist 2 .......................... <tRegPnt, 1>
  [1040] objcall 9 .............................. <tRegPnt[1]>
  [1042] inv .................................... <-tRegPnt[1]>
  [1043] setlocal 10 ............................ tX = -tRegPnt[1]
  [1045] getparam 0 ............................. <me>
  [1047] getchainedprop 1265 .................... <me.pBuffer>
  [1050] getchainedprop 322 ..................... <me.pBuffer.rect>
  [1053] getobjprop 291 ......................... <me.pBuffer.rect.height>
  [1056] getlocal 9 ............................. <tRegPnt>
  [1058] pushint8 2 ............................. <2>
  [1060] pusharglist 2 .......................... <tRegPnt, 2>
  [1062] objcall 9 .............................. <tRegPnt[2]>
  [1064] sub .................................... <me.pBuffer.rect.height - tRegPnt[2]>
  [1065] pushint8 10 ............................ <10>
  [1067] sub .................................... <me.pBuffer.rect.height - tRegPnt[2] - 10>
  [1068] setlocal 11 ............................ tY = me.pBuffer.rect.height - tRegPnt[2] - 10
  [1070] getparam 0 ............................. <me>
  [1072] getparam 0 ............................. <me>
  [1074] getobjprop 1226 ........................ <me.pUpdateRect>
  [1077] getprop 1355 ........................... <pCacheRectA>
  [1080] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1082] extcall 1367 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1085] setobjprop 1226 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1088] getlocal 8 ............................. <tmember>
  [1090] getobjprop 290 ......................... <tmember.image>
  [1093] setprop 1354 ........................... pCacheImage = tmember.image
  [1096] getparam 0 ............................. <me>
  [1098] getobjprop 1225 ........................ <me.pLocFix>
  [1101] setlocal 12 ............................ tLocFix = me.pLocFix
  [1103] getprop 1362 ........................... <pFlipH>
  [1106] jmpifz [1188] .......................... if pFlipH then
  [1109] getparam 0 ............................. <me>
  [1111] getprop 1354 ........................... <pCacheImage>
  [1114] pusharglist 2 .......................... <me, pCacheImage>
  [1116] objcall 1350 ........................... <me.flipHorizontal(pCacheImage)>
  [1119] setprop 1354 ........................... pCacheImage = me.flipHorizontal(pCacheImage)
  [1122] getlocal 10 ............................ <tX>
  [1124] inv .................................... <-tX>
  [1125] getlocal 8 ............................. <tmember>
  [1127] getobjprop 252 ......................... <tmember.width>
  [1129] sub .................................... <-tX - tmember.width>
  [1130] getparam 0 ............................. <me>
  [1132] getchainedprop 1265 .................... <me.pBuffer>
  [1135] getobjprop 252 ......................... <me.pBuffer.width>
  [1137] add .................................... <-tX - tmember.width + me.pBuffer.width>
  [1138] setlocal 10 ............................ tX = -tX - tmember.width + me.pBuffer.width
  [1140] getparam 0 ............................. <me>
  [1142] pushsymb 1225 .......................... <#pLocFix>
  [1145] pushint8 1 ............................. <1>
  [1147] pusharglist 3 .......................... <me, #pLocFix, 1>
  [1149] objcall 33 ............................. <me.pLocFix[1]>
  [1151] inv .................................... <-me.pLocFix[1]>
  [1152] getparam 0 ............................. <me>
  [1154] pushsymb 1225 .......................... <#pLocFix>
  [1157] pushint8 2 ............................. <2>
  [1159] pusharglist 3 .......................... <me, #pLocFix, 2>
  [1161] objcall 33 ............................. <me.pLocFix[2]>
  [1163] pusharglist 2 .......................... <-me.pLocFix[1], me.pLocFix[2]>
  [1165] extcall 293 ............................ <point(-me.pLocFix[1], me.pLocFix[2])>
  [1168] setlocal 12 ............................ tLocFix = point(-me.pLocFix[1], me.pLocFix[2])
  [1170] getparam 0 ............................. <me>
  [1172] getobjprop 1268 ........................ <me.pPeopleSize>
  [1175] pushcons 1 ............................. <"sh">
  [1177] eq ..................................... <me.pPeopleSize = "sh">
  [1178] jmpifz [1188] .......................... if me.pPeopleSize = "sh" then
  [1181] getlocal 10 ............................ <tX>
  [1183] pushint8 2 ............................. <2>
  [1185] sub .................................... <tX - 2>
  [1186] setlocal 10 ............................ tX = tX - 2
  [1188] getlocal 10 ............................ <tX>
  [1190] getlocal 11 ............................ <tY>
  [1192] getlocal 10 ............................ <tX>
  [1194] getprop 1354 ........................... <pCacheImage>
  [1197] getobjprop 252 ......................... <pCacheImage.width>
  [1199] add .................................... <tX + pCacheImage.width>
  [1200] getlocal 11 ............................ <tY>
  [1202] getprop 1354 ........................... <pCacheImage>
  [1205] getobjprop 291 ......................... <pCacheImage.height>
  [1208] add .................................... <tY + pCacheImage.height>
  [1209] pusharglist 4 .......................... <tX, tY, tX + pCacheImage.width, tY + pCacheImage.height>
  [1211] extcall 322 ............................ <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)>
  [1214] getprop 1360 ........................... <pXFix>
  [1217] getprop 1361 ........................... <pYFix>
  [1220] getprop 1360 ........................... <pXFix>
  [1223] getprop 1361 ........................... <pYFix>
  [1226] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1228] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1229] add .................................... <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix]>
  [1230] getlocal 12 ............................ <tLocFix>
  [1232] getlocal 12 ............................ <tLocFix>
  [1234] pusharglist 2 .......................... <tLocFix, tLocFix>
  [1236] extcall 322 ............................ <rect(tLocFix, tLocFix)>
  [1239] add .................................... <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix] + rect(tLocFix, tLocFix)>
  [1240] setprop 1355 ........................... pCacheRectA = rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix] + rect(tLocFix, tLocFix)
  [1243] getprop 1354 ........................... <pCacheImage>
  [1246] getobjprop 322 ......................... <pCacheImage.rect>
  [1249] setprop 1356 ........................... pCacheRectB = pCacheImage.rect
  [1252] getprop 1353 ........................... <pDrawProps>
  [1255] pushsymb 1171 .......................... <#maskImage>
  [1258] getprop 1354 ........................... <pCacheImage>
  [1261] pusharglist 1 .......................... <pCacheImage>
  [1263] objcall 1172 ........................... <pCacheImage.createMatte()>
  [1266] pusharglistnoret 3 ..................... <pDrawProps, #maskImage, pCacheImage.createMatte()>
  [1268] objcall 173 ............................ pDrawProps[#maskImage] = pCacheImage.createMatte()
  [1270] getparam 0 ............................. <me>
  [1272] getparam 0 ............................. <me>
  [1274] getobjprop 1226 ........................ <me.pUpdateRect>
  [1277] getprop 1355 ........................... <pCacheRectA>
  [1280] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1282] extcall 1367 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1285] setobjprop 1226 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1288] jmp [1325]
  [1291] getparam 0 ............................. <me>
  [1293] getparam 0 ............................. <me>
  [1295] getobjprop 1226 ........................ <me.pUpdateRect>
  [1298] getprop 1355 ........................... <pCacheRectA>
  [1301] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1303] extcall 1367 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1306] setobjprop 1226 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1309] pushzero ............................... <0>
  [1310] pushzero ............................... <0>
  [1311] pushzero ............................... <0>
  [1312] pushzero ............................... <0>
  [1313] pusharglist 4 .......................... <0, 0, 0, 0>
  [1315] extcall 322 ............................ <rect(0, 0, 0, 0)>
  [1318] setprop 1355 ........................... pCacheRectA = rect(0, 0, 0, 0)
  [1321] pusharglistnoret 0 ..................... <>
  [1323] extcall 21 ............................. return 
  [1325] getparam 0 ............................. <me>
  [1327] getchainedprop 1265 .................... <me.pBuffer>
  [1330] getprop 1354 ........................... <pCacheImage>
  [1333] getprop 1355 ........................... <pCacheRectA>
  [1336] getprop 1356 ........................... <pCacheRectB>
  [1339] getprop 1353 ........................... <pDrawProps>
  [1342] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA, pCacheRectB, pDrawProps>
  [1344] objcall 323 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA, pCacheRectB, pDrawProps)
  [1347] ret
end

on render me
  [  0] getprop 1359 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 35 .............................. <memberExists(pMemString)>
  [  7] jmpifz [ 32] ............................ if memberExists(pMemString) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 1265 ..................... <me.pBuffer>
  [ 15] getprop 1356 ............................ <pCacheRectB>
  [ 18] getprop 1355 ............................ <pCacheRectA>
  [ 21] getprop 1356 ............................ <pCacheRectB>
  [ 24] getprop 1353 ............................ <pDrawProps>
  [ 27] pusharglistnoret 5 ...................... <me.pBuffer, pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps>
  [ 29] objcall 323 ............................. me.pBuffer.copyPixels(pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps)
  [ 32] ret
end

on setItemObj me, tmodel
  [  0] getprop 1312 ............................ <pPart>
  [  3] pushcons 24 ............................. <"ri">
  [  5] eq ...................................... <pPart = "ri">
  [  6] getprop 1312 ............................ <pPart>
  [  9] pushcons 25 ............................. <"li">
  [ 11] eq ...................................... <pPart = "li">
  [ 12] or ...................................... <(pPart = "ri") or (pPart = "li")>
  [ 13] jmpifz [ 21] ............................ if (pPart = "ri") or (pPart = "li") then
  [ 16] getparam 1 .............................. <tmodel>
  [ 18] setprop 1352 ............................ pmodel = tmodel
  [ 21] ret
end

on defineDir me, tdir, tPart
  [  0] getparam 2 .............................. <tPart>
  [  2] pusharglist 1 ........................... <tPart>
  [  4] extcall 10 .............................. <voidp(tPart)>
  [  6] getparam 2 .............................. <tPart>
  [  8] getprop 1312 ............................ <pPart>
  [ 11] eq ...................................... <tPart = pPart>
  [ 12] or ...................................... <voidp(tPart) or (tPart = pPart)>
  [ 13] jmpifz [ 20] ............................ if voidp(tPart) or (tPart = pPart) then
  [ 16] getparam 1 .............................. <tdir>
  [ 18] setprop 34 .............................. pDirection = tdir
  [ 20] ret
end

on defineDirMultiple me, tdir, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1312 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 238 ............................. <tTargetPartList.getOne(pPart)>
  [  9] jmpifz [ 16] ............................ if tTargetPartList.getOne(pPart) then
  [ 12] getparam 1 .............................. <tdir>
  [ 14] setprop 34 .............................. pDirection = tdir
  [ 16] ret
end

on defineAct me, tAct, tTargetPartList
  [  0] getprop 1357 ............................ <pAction>
  [  3] pushcons 27 ............................. <"std">
  [  5] eq ...................................... <pAction = "std">
  [  6] jmpifz [ 14] ............................ if pAction = "std" then
  [  9] getparam 1 .............................. <tAct>
  [ 11] setprop 1357 ............................ pAction = tAct
  [ 14] ret
end

on defineActMultiple me, tAct, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1312 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 238 ............................. <tTargetPartList.getOne(pPart)>
  [  9] jmpifz [ 46] ............................ if tTargetPartList.getOne(pPart) then
  [ 12] getprop 1357 ............................ <pAction>
  [ 15] pushcons 27 ............................. <"std">
  [ 17] eq ...................................... <pAction = "std">
  [ 18] jmpifz [ 26] ............................ if pAction = "std" then
  [ 21] getparam 1 .............................. <tAct>
  [ 23] setprop 1357 ............................ pAction = tAct
  [ 26] getprop 1312 ............................ <pPart>
  [ 29] pushcons 22 ............................. <"ey">
  [ 31] eq ...................................... <pPart = "ey">
  [ 32] getparam 1 .............................. <tAct>
  [ 34] pushcons 27 ............................. <"std">
  [ 36] eq ...................................... <tAct = "std">
  [ 37] and ..................................... <(pPart = "ey") and (tAct = "std")>
  [ 38] jmpifz [ 46] ............................ if (pPart = "ey") and (tAct = "std") then
  [ 41] pushcons 27 ............................. <"std">
  [ 43] setprop 1357 ............................ pAction = "std"
  [ 46] ret
end

on defineInk me, tInk
  [  0] getparam 1 .............................. <tInk>
  [  2] pusharglist 1 ........................... <tInk>
  [  4] extcall 10 .............................. <voidp(tInk)>
  [  6] jmpifz [ 78] ............................ if voidp(tInk) then
  [  9] getprop 1312 ............................ <pPart>
  [ 12] peek 0 .................................. case pPart of
  [ 14] pushcons 22 ............................. <"ey">
  [ 16] eq
  [ 17] jmpifz [ 27] ............................ (case) "ey":
  [ 20] pushint8 36 ............................. <36>
  [ 22] setparam 1 .............................. tInk = 36
  [ 24] jmp [ 76]
  [ 27] peek 0
  [ 29] pushcons 28 ............................. <"sd">
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) "sd":
  [ 35] pushint8 32 ............................. <32>
  [ 37] setparam 1 .............................. tInk = 32
  [ 39] jmp [ 76]
  [ 42] peek 0
  [ 44] pushcons 24 ............................. <"ri">
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) "ri":
  [ 50] pushint8 8 .............................. <8>
  [ 52] setparam 1 .............................. tInk = 8
  [ 54] jmp [ 76]
  [ 57] peek 0
  [ 59] pushcons 25 ............................. <"li">
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) "li":
  [ 65] pushint8 8 .............................. <8>
  [ 67] setparam 1 .............................. tInk = 8
  [ 69] jmp [ 76] ............................... (case) otherwise:
  [ 72] pushint8 41 ............................. <41>
  [ 74] setparam 1 .............................. tInk = 41
  [ 76] pop 1 ................................... end case
  [ 78] getprop 1353 ............................ <pDrawProps>
  [ 81] pushsymb 419 ............................ <#ink>
  [ 84] getparam 1 .............................. <tInk>
  [ 86] pusharglistnoret 3 ...................... <pDrawProps, #ink, tInk>
  [ 88] objcall 173 ............................. pDrawProps[#ink] = tInk
  [ 90] pushint8 1 .............................. <1>
  [ 92] pusharglistnoret 1 ...................... <1>
  [ 94] extcall 21 .............................. return 1
  [ 96] ret
end

on setModel me, tmodel
  [  0] getparam 1 .............................. <tmodel>
  [  2] setprop 1352 ............................ pmodel = tmodel
  [  5] ret
end

on setColor me, tColor
  [  0] getparam 1 .............................. <tColor>
  [  2] pusharglist 1 ........................... <tColor>
  [  4] extcall 10 .............................. <voidp(tColor)>
  [  6] jmpifz [ 14] ............................ if voidp(tColor) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 21 .............................. return 0
  [ 14] getparam 1 .............................. <tColor>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] eq ...................................... <tColor = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tColor = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 21 .............................. return 0
  [ 27] getparam 1 .............................. <tColor>
  [ 29] getobjprop 248 .......................... <tColor.ilk>
  [ 31] pushsymb 357 ............................ <#color>
  [ 34] eq ...................................... <tColor.ilk = #color>
  [ 35] getprop 1353 ............................ <pDrawProps>
  [ 38] pushsymb 419 ............................ <#ink>
  [ 41] pusharglist 2 ........................... <pDrawProps, #ink>
  [ 43] objcall 9 ............................... <pDrawProps[#ink]>
  [ 45] pushint8 36 ............................. <36>
  [ 47] nteq .................................... <pDrawProps[#ink] <> 36>
  [ 48] and ..................................... <(tColor.ilk = #color) and (pDrawProps[#ink] <> 36)>
  [ 49] jmpifz [ 67] ............................ if (tColor.ilk = #color) and (pDrawProps[#ink] <> 36) then / else
  [ 52] getprop 1353 ............................ <pDrawProps>
  [ 55] pushsymb 311 ............................ <#bgColor>
  [ 58] getparam 1 .............................. <tColor>
  [ 60] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, tColor>
  [ 62] objcall 173 ............................. pDrawProps[#bgColor] = tColor
  [ 64] jmp [ 91]
  [ 67] getprop 1353 ............................ <pDrawProps>
  [ 70] pushsymb 311 ............................ <#bgColor>
  [ 73] pushint16 255 ........................... <255>
  [ 76] pushint16 255 ........................... <255>
  [ 79] pushint16 255 ........................... <255>
  [ 82] pusharglist 3 ........................... <255, 255, 255>
  [ 84] extcall 312 ............................. <rgb(255, 255, 255)>
  [ 87] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, rgb(255, 255, 255)>
  [ 89] objcall 173 ............................. pDrawProps[#bgColor] = rgb(255, 255, 255)
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglistnoret 1 ...................... <1>
  [ 95] extcall 21 .............................. return 1
  [ 97] ret
end

on checkPartNotCarrying me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1297 ........................... <#carrying>
  [  5] pusharglist 2 ........................... <me, #carrying>
  [  7] objcall 77 .............................. <me.getProperty(#carrying)>
  [  9] not ..................................... <not me.getProperty(#carrying)>
  [ 10] jmpifz [ 19] ............................ if not me.getProperty(#carrying) then
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 1 ...................... <1>
  [ 17] extcall 21 .............................. return 1
  [ 19] getprop 34 .............................. <pDirection>
  [ 21] getparam 0 .............................. <me>
  [ 23] pushsymb 1224 ........................... <#pFlipList>
  [ 26] getprop 34 .............................. <pDirection>
  [ 28] pushint8 1 .............................. <1>
  [ 30] add ..................................... <pDirection + 1>
  [ 31] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 33] objcall 33 .............................. <me.pFlipList[pDirection + 1]>
  [ 35] eq ...................................... <pDirection = me.pFlipList[pDirection + 1]>
  [ 36] jmpifz [ 53] ............................ if pDirection = me.pFlipList[pDirection + 1] then / else
  [ 39] pushcons 13 ............................. <"rh">
  [ 41] pushcons 14 ............................. <"rs">
  [ 43] pushcons 24 ............................. <"ri">
  [ 45] pusharglist 3 ........................... <["rh", "rs", "ri"]>
  [ 47] pushlist ................................ <["rh", "rs", "ri"]>
  [ 48] setlocal 0 .............................. tHandParts = ["rh", "rs", "ri"]
  [ 50] jmp [ 66]
  [ 53] pushcons 6 .............................. <"lh">
  [ 55] pushcons 7 .............................. <"ls">
  [ 57] pushcons 25 ............................. <"li">
  [ 59] pushcons 24 ............................. <"ri">
  [ 61] pusharglist 4 ........................... <["lh", "ls", "li", "ri"]>
  [ 63] pushlist ................................ <["lh", "ls", "li", "ri"]>
  [ 64] setlocal 0 .............................. tHandParts = ["lh", "ls", "li", "ri"]
  [ 66] getlocal 0 .............................. <tHandParts>
  [ 68] getprop 1312 ............................ <pPart>
  [ 71] pusharglist 2 ........................... <tHandParts, pPart>
  [ 73] objcall 240 ............................. <tHandParts.getPos(pPart)>
  [ 75] jmpifz [ 86] ............................ if tHandParts.getPos(pPart) then / else
  [ 78] pushzero ................................ <0>
  [ 79] pusharglistnoret 1 ...................... <0>
  [ 81] extcall 21 .............................. return 0
  [ 83] jmp [ 92]
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglistnoret 1 ...................... <1>
  [ 90] extcall 21 .............................. return 1
  [ 92] ret
end

on doHandWork me, tAct
  [  0] pushcons 6 .............................. <"lh">
  [  2] pushcons 7 .............................. <"ls">
  [  4] pushcons 25 ............................. <"li">
  [  6] pushcons 13 ............................. <"rh">
  [  8] pushcons 14 ............................. <"rs">
  [ 10] pushcons 24 ............................. <"ri">
  [ 12] pusharglist 6 ........................... <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 14] pushlist ................................ <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 15] getprop 1312 ............................ <pPart>
  [ 18] pusharglist 2 ........................... <["lh", "ls", "li", "rh", "rs", "ri"], pPart>
  [ 20] objcall 238 ............................. <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart)>
  [ 22] pushzero ................................ <0>
  [ 23] nteq .................................... <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0>
  [ 24] jmpifz [ 32] ............................ if ["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0 then
  [ 27] getparam 1 .............................. <tAct>
  [ 29] setprop 1357 ............................ pAction = tAct
  [ 32] ret
end

on doHandWorkLeft me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1358 ............................ pActionLh = tAct
  [  5] ret
end

on doHandWorkRight me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1315 ............................ pActionRh = tAct
  [  5] ret
end

on layDown me
  [  0] pushcons 19 ............................. <"lay">
  [  2] setprop 1357 ............................ pAction = "lay"
  [  5] ret
end

on getCurrentMember me
  [  0] getprop 1359 ............................ <pMemString>
  [  3] pusharglistnoret 1 ...................... <pMemString>
  [  5] extcall 21 .............................. return pMemString
  [  7] ret
end

on getColor me
  [  0] getprop 1353 ............................ <pDrawProps>
  [  3] pushsymb 311 ............................ <#bgColor>
  [  6] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [  8] objcall 9 ............................... <pDrawProps[#bgColor]>
  [ 10] pusharglistnoret 1 ...................... <pDrawProps[#bgColor]>
  [ 12] extcall 21 .............................. return pDrawProps[#bgColor]
  [ 14] ret
end

on getDirection me
  [  0] getprop 34 .............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 21 .............................. return pDirection
  [  6] ret
end

on getLocation me
  [  0] getprop 1359 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 10 .............................. <voidp(pMemString)>
  [  7] jmpifz [ 15] ............................ if voidp(pMemString) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 21 .............................. return 0
  [ 15] getprop 1359 ............................ <pMemString>
  [ 18] pusharglist 1 ........................... <pMemString>
  [ 20] extcall 35 .............................. <memberExists(pMemString)>
  [ 22] not ..................................... <not memberExists(pMemString)>
  [ 23] jmpifz [ 31] ............................ if not memberExists(pMemString) then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 21 .............................. return 0
  [ 31] getprop 1359 ............................ <pMemString>
  [ 34] pusharglist 1 ........................... <pMemString>
  [ 36] extcall 37 .............................. <getmemnum(pMemString)>
  [ 38] pusharglist 1 ........................... <getmemnum(pMemString)>
  [ 40] extcall 30 .............................. <member(getmemnum(pMemString))>
  [ 42] setlocal 0 .............................. tmember = member(getmemnum(pMemString))
  [ 44] getlocal 0 .............................. <tmember>
  [ 46] getobjprop 322 .......................... <tmember.rect>
  [ 49] setlocal 1 .............................. tImgRect = tmember.rect
  [ 51] getlocal 1 .............................. <tImgRect>
  [ 53] getobjprop 252 .......................... <tImgRect.width>
  [ 55] pushint8 2 .............................. <2>
  [ 57] div ..................................... <tImgRect.width / 2>
  [ 58] getlocal 1 .............................. <tImgRect>
  [ 60] getobjprop 291 .......................... <tImgRect.height>
  [ 63] pushint8 2 .............................. <2>
  [ 65] div ..................................... <tImgRect.height / 2>
  [ 66] pusharglist 2 ........................... <tImgRect.width / 2, tImgRect.height / 2>
  [ 68] extcall 293 ............................. <point(tImgRect.width / 2, tImgRect.height / 2)>
  [ 71] setlocal 2 .............................. tCntrPoint = point(tImgRect.width / 2, tImgRect.height / 2)
  [ 73] getlocal 0 .............................. <tmember>
  [ 75] getobjprop 294 .......................... <tmember.regPoint>
  [ 78] setlocal 3 .............................. tRegPoint = tmember.regPoint
  [ 80] getlocal 3 .............................. <tRegPoint>
  [ 82] inv ..................................... <-tRegPoint>
  [ 83] getlocal 2 .............................. <tCntrPoint>
  [ 85] add ..................................... <-tRegPoint + tCntrPoint>
  [ 86] pusharglistnoret 1 ...................... <-tRegPoint + tCntrPoint>
  [ 88] extcall 21 .............................. return -tRegPoint + tCntrPoint
  [ 90] ret
end

on copyPicture me, tImg, tdir, tHumanSize, tAction, tAnimFrame
  [  0] getparam 2 .............................. <tdir>
  [  2] pusharglist 1 ........................... <tdir>
  [  4] extcall 10 .............................. <voidp(tdir)>
  [  6] jmpifz [ 13] ............................ if voidp(tdir) then
  [  9] pushcons 29 ............................. <"2">
  [ 11] setparam 2 .............................. tdir = "2"
  [ 13] getparam 3 .............................. <tHumanSize>
  [ 15] pusharglist 1 ........................... <tHumanSize>
  [ 17] extcall 10 .............................. <voidp(tHumanSize)>
  [ 19] jmpifz [ 26] ............................ if voidp(tHumanSize) then
  [ 22] pushcons 30 ............................. <"h">
  [ 24] setparam 3 .............................. tHumanSize = "h"
  [ 26] getparam 4 .............................. <tAction>
  [ 28] pusharglist 1 ........................... <tAction>
  [ 30] extcall 10 .............................. <voidp(tAction)>
  [ 32] jmpifz [ 39] ............................ if voidp(tAction) then
  [ 35] pushcons 27 ............................. <"std">
  [ 37] setparam 4 .............................. tAction = "std"
  [ 39] getparam 5 .............................. <tAnimFrame>
  [ 41] pusharglist 1 ........................... <tAnimFrame>
  [ 43] extcall 10 .............................. <voidp(tAnimFrame)>
  [ 45] jmpifz [ 52] ............................ if voidp(tAnimFrame) then
  [ 48] pushcons 31 ............................. <"0">
  [ 50] setparam 5 .............................. tAnimFrame = "0"
  [ 52] getparam 3 .............................. <tHumanSize>
  [ 54] pushcons 26 ............................. <"_">
  [ 56] joinstr ................................. <tHumanSize & "_">
  [ 57] getparam 4 .............................. <tAction>
  [ 59] joinstr ................................. <tHumanSize & "_" & tAction>
  [ 60] pushcons 26 ............................. <"_">
  [ 62] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [ 63] getprop 1312 ............................ <pPart>
  [ 66] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [ 67] pushcons 26 ............................. <"_">
  [ 69] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [ 70] getprop 1352 ............................ <pmodel>
  [ 73] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel>
  [ 74] pushcons 26 ............................. <"_">
  [ 76] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_">
  [ 77] getparam 2 .............................. <tdir>
  [ 79] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir>
  [ 80] pushcons 26 ............................. <"_">
  [ 82] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [ 83] getparam 5 .............................. <tAnimFrame>
  [ 85] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame>
  [ 86] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame
  [ 88] getlocal 0 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 35 .............................. <memberExists(tMemName)>
  [ 94] jmpifz [247] ............................ if memberExists(tMemName) then
  [ 97] getlocal 0 .............................. <tMemName>
  [ 99] pusharglist 1 ........................... <tMemName>
  [101] extcall 37 .............................. <getmemnum(tMemName)>
  [103] pusharglist 1 ........................... <getmemnum(tMemName)>
  [105] extcall 30 .............................. <member(getmemnum(tMemName))>
  [107] setlocal 1 .............................. tmember = member(getmemnum(tMemName))
  [109] getlocal 1 .............................. <tmember>
  [111] getobjprop 290 .......................... <tmember.image>
  [114] setlocal 2 .............................. tImage = tmember.image
  [116] getlocal 1 .............................. <tmember>
  [118] getobjprop 294 .......................... <tmember.regPoint>
  [121] setlocal 3 .............................. tRegPnt = tmember.regPoint
  [123] getlocal 3 .............................. <tRegPnt>
  [125] pushint8 1 .............................. <1>
  [127] pusharglist 2 ........................... <tRegPnt, 1>
  [129] objcall 9 ............................... <tRegPnt[1]>
  [131] inv ..................................... <-tRegPnt[1]>
  [132] setlocal 4 .............................. tX = -tRegPnt[1]
  [134] getparam 1 .............................. <tImg>
  [136] getchainedprop 322 ...................... <tImg.rect>
  [139] getobjprop 291 .......................... <tImg.rect.height>
  [142] getlocal 3 .............................. <tRegPnt>
  [144] pushint8 2 .............................. <2>
  [146] pusharglist 2 ........................... <tRegPnt, 2>
  [148] objcall 9 ............................... <tRegPnt[2]>
  [150] sub ..................................... <tImg.rect.height - tRegPnt[2]>
  [151] pushint8 10 ............................. <10>
  [153] sub ..................................... <tImg.rect.height - tRegPnt[2] - 10>
  [154] setlocal 5 .............................. tY = tImg.rect.height - tRegPnt[2] - 10
  [156] getlocal 4 .............................. <tX>
  [158] getlocal 5 .............................. <tY>
  [160] getlocal 4 .............................. <tX>
  [162] getlocal 2 .............................. <tImage>
  [164] getobjprop 252 .......................... <tImage.width>
  [166] add ..................................... <tX + tImage.width>
  [167] getlocal 5 .............................. <tY>
  [169] getlocal 2 .............................. <tImage>
  [171] getobjprop 291 .......................... <tImage.height>
  [174] add ..................................... <tY + tImage.height>
  [175] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [177] extcall 322 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [180] setlocal 6 .............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [182] getlocal 2 .............................. <tImage>
  [184] pusharglist 1 ........................... <tImage>
  [186] objcall 1172 ............................ <tImage.createMatte()>
  [189] setlocal 7 .............................. tMatte = tImage.createMatte()
  [191] getparam 1 .............................. <tImg>
  [193] getlocal 2 .............................. <tImage>
  [195] getlocal 6 .............................. <tRect>
  [197] getlocal 2 .............................. <tImage>
  [199] getobjprop 322 .......................... <tImage.rect>
  [202] pushsymb 1171 ........................... <#maskImage>
  [205] getlocal 7 .............................. <tMatte>
  [207] pushsymb 419 ............................ <#ink>
  [210] getprop 1353 ............................ <pDrawProps>
  [213] pushsymb 419 ............................ <#ink>
  [216] pusharglist 2 ........................... <pDrawProps, #ink>
  [218] objcall 9 ............................... <pDrawProps[#ink]>
  [220] pushsymb 311 ............................ <#bgColor>
  [223] getprop 1353 ............................ <pDrawProps>
  [226] pushsymb 311 ............................ <#bgColor>
  [229] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [231] objcall 9 ............................... <pDrawProps[#bgColor]>
  [233] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [235] pushproplist ............................ <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [236] pusharglistnoret 5 ...................... <tImg, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [238] objcall 323 ............................. tImg.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]])
  [241] pushint8 1 .............................. <1>
  [243] pusharglistnoret 1 ...................... <1>
  [245] extcall 21 .............................. return 1
  [247] pushzero ................................ <0>
  [248] pusharglistnoret 1 ...................... <0>
  [250] extcall 21 .............................. return 0
  [252] ret
end

on reset me
  [  0] pushcons 27 ............................. <"std">
  [  2] setprop 1357 ............................ pAction = "std"
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 159 ............................. <VOID>
  [  9] setprop 1358 ............................ pActionLh = VOID
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 159 ............................. <VOID>
  [ 16] setprop 1315 ............................ pActionRh = VOID
  [ 19] ret
end

on skipAnimationFrame me
  [  0] getprop 6 ............................... <pAnimFrame>
  [  2] pushint8 1 .............................. <1>
  [  4] add ..................................... <pAnimFrame + 1>
  [  5] setprop 6 ............................... pAnimFrame = pAnimFrame + 1
  [  7] getprop 6 ............................... <pAnimFrame>
  [  9] getprop 1365 ............................ <pTotalFrame>
  [ 12] gt ...................................... <pAnimFrame > pTotalFrame>
  [ 13] jmpifz [ 20] ............................ if pAnimFrame > pTotalFrame then
  [ 16] pushint8 1 .............................. <1>
  [ 18] setprop 6 ............................... pAnimFrame = 1
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 21 .............................. return 1
  [ 26] ret
end

on setAnimation me, tPart, tAnim
  [  0] getparam 1 .............................. <tPart>
  [  2] getprop 1312 ............................ <pPart>
  [  5] nteq .................................... <tPart <> pPart>
  [  6] jmpifz [ 13] ............................ if tPart <> pPart then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 21 .............................. return 
  [ 13] getparam 2 .............................. <tAnim>
  [ 15] pusharglist 1 ........................... <tAnim>
  [ 17] extcall 411 ............................. <value(tAnim)>
  [ 20] setprop 1364 ............................ pAnimation = value(tAnim)
  [ 23] getprop 1364 ............................ <pAnimation>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pAnimation, 1>
  [ 30] objcall 9 ............................... <pAnimation[1]>
  [ 32] getobjprop 14 ........................... <pAnimation[1].count>
  [ 34] setprop 1365 ............................ pTotalFrame = pAnimation[1].count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setprop 6 ............................... pAnimFrame = 1
  [ 41] ret
end

on remAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1364 ............................ pAnimation = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 6 ............................... pAnimFrame = 1
  [  8] pushint8 1 .............................. <1>
  [ 10] setprop 1365 ............................ pTotalFrame = 1
  [ 13] ret
end

on animate me
  [  0] getprop 1312 ............................ <pPart>
  [  3] pushcons 24 ............................. <"ri">
  [  5] eq ...................................... <pPart = "ri">
  [  6] jmpifz [ 55] ............................ if pPart = "ri" then
  [  9] getprop 1355 ............................ <pCacheRectA>
  [ 12] getobjprop 252 .......................... <pCacheRectA.width>
  [ 14] pushzero ................................ <0>
  [ 15] gt ...................................... <pCacheRectA.width > 0>
  [ 16] jmpifz [ 49] ............................ if pCacheRectA.width > 0 then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 1226 ......................... <me.pUpdateRect>
  [ 26] getprop 1355 ............................ <pCacheRectA>
  [ 29] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [ 31] extcall 1367 ............................ <union(me.pUpdateRect, pCacheRectA)>
  [ 34] setobjprop 1226 ......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pushzero ................................ <0>
  [ 40] pushzero ................................ <0>
  [ 41] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 43] extcall 322 ............................. <rect(0, 0, 0, 0)>
  [ 46] setprop 1355 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 49] pushcons 0 .............................. <EMPTY>
  [ 51] pusharglistnoret 1 ...................... <EMPTY>
  [ 53] extcall 21 .............................. return EMPTY
  [ 55] getprop 1364 ............................ <pAnimation>
  [ 58] not ..................................... <not pAnimation>
  [ 59] jmpifz [ 68] ............................ if not pAnimation then
  [ 62] pushcons 0 .............................. <EMPTY>
  [ 64] pusharglistnoret 1 ...................... <EMPTY>
  [ 66] extcall 21 .............................. return EMPTY
  [ 68] getprop 34 .............................. <pDirection>
  [ 70] getprop 1364 ............................ <pAnimation>
  [ 73] pushsymb 1384 ........................... <#OffD>
  [ 76] pusharglist 2 ........................... <pAnimation, #OffD>
  [ 78] objcall 9 ............................... <pAnimation[#OffD]>
  [ 80] getprop 6 ............................... <pAnimFrame>
  [ 82] pusharglist 2 ........................... <pAnimation[#OffD], pAnimFrame>
  [ 84] objcall 9 ............................... <pAnimation[#OffD][pAnimFrame]>
  [ 86] add ..................................... <pDirection + pAnimation[#OffD][pAnimFrame]>
  [ 87] setlocal 0 .............................. tdir = pDirection + pAnimation[#OffD][pAnimFrame]
  [ 89] getlocal 0 .............................. <tdir>
  [ 91] pushint8 7 .............................. <7>
  [ 93] gt ...................................... <tdir > 7>
  [ 94] jmpifz [114] ............................ if tdir > 7 then / else
  [ 97] getlocal 0 .............................. <tdir>
  [ 99] pushint8 8 .............................. <8>
  [101] sub ..................................... <tdir - 8>
  [102] pushint8 7 .............................. <7>
  [104] pusharglist 2 ........................... <tdir - 8, 7>
  [106] extcall 1385 ............................ <min(tdir - 8, 7)>
  [109] setlocal 0 .............................. tdir = min(tdir - 8, 7)
  [111] jmp [137]
  [114] getlocal 0 .............................. <tdir>
  [116] pushzero ................................ <0>
  [117] lt ...................................... <tdir < 0>
  [118] jmpifz [137] ............................ if tdir < 0 then
  [121] pushint8 7 .............................. <7>
  [123] getlocal 0 .............................. <tdir>
  [125] add ..................................... <7 + tdir>
  [126] pushint8 1 .............................. <1>
  [128] add ..................................... <7 + tdir + 1>
  [129] pushzero ................................ <0>
  [130] pusharglist 2 ........................... <7 + tdir + 1, 0>
  [132] extcall 1386 ............................ <max(7 + tdir + 1, 0)>
  [135] setlocal 0 .............................. tdir = max(7 + tdir + 1, 0)
  [137] pushcons 17 ............................. <"hd">
  [139] pushcons 18 ............................. <"fc">
  [141] pushcons 22 ............................. <"ey">
  [143] pushcons 23 ............................. <"hr">
  [145] pusharglist 4 ........................... <["hd", "fc", "ey", "hr"]>
  [147] pushlist ................................ <["hd", "fc", "ey", "hr"]>
  [148] getprop 1312 ............................ <pPart>
  [151] pusharglist 2 ........................... <["hd", "fc", "ey", "hr"], pPart>
  [153] objcall 238 ............................. <["hd", "fc", "ey", "hr"].getOne(pPart)>
  [155] pushzero ................................ <0>
  [156] nteq .................................... <["hd", "fc", "ey", "hr"].getOne(pPart) <> 0>
  [157] jmpifz [200] ............................ if ["hd", "fc", "ey", "hr"].getOne(pPart) <> 0 then / else
  [160] getlocal 0 .............................. <tdir>
  [162] pushint8 4 .............................. <4>
  [164] eq ...................................... <tdir = 4>
  [165] getprop 34 .............................. <pDirection>
  [167] pushint8 3 .............................. <3>
  [169] eq ...................................... <pDirection = 3>
  [170] and ..................................... <(tdir = 4) and (pDirection = 3)>
  [171] getlocal 0 .............................. <tdir>
  [173] pushzero ................................ <0>
  [174] eq ...................................... <tdir = 0>
  [175] getprop 34 .............................. <pDirection>
  [177] pushint8 7 .............................. <7>
  [179] eq ...................................... <pDirection = 7>
  [180] and ..................................... <(tdir = 0) and (pDirection = 7)>
  [181] or ...................................... <((tdir = 4) and (pDirection = 3)) or ((tdir = 0) and (pDirection = 7))>
  [182] jmpifz [193] ............................ if ((tdir = 4) and (pDirection = 3)) or ((tdir = 0) and (pDirection = 7)) then / else
  [185] pushint8 1 .............................. <1>
  [187] setprop 1362 ............................ pFlipH = 1
  [190] jmp [197]
  [193] pushzero ................................ <0>
  [194] setprop 1362 ............................ pFlipH = 0
  [197] jmp [204]
  [200] pushzero ................................ <0>
  [201] setprop 1362 ............................ pFlipH = 0
  [204] getparam 0 .............................. <me>
  [206] pushsymb 1224 ........................... <#pFlipList>
  [209] getlocal 0 .............................. <tdir>
  [211] pushint8 1 .............................. <1>
  [213] add ..................................... <tdir + 1>
  [214] pusharglist 3 ........................... <me, #pFlipList, tdir + 1>
  [216] objcall 33 .............................. <me.pFlipList[tdir + 1]>
  [218] setlocal 0 .............................. tdir = me.pFlipList[tdir + 1]
  [220] getprop 1364 ............................ <pAnimation>
  [223] pushsymb 1387 ........................... <#OffX>
  [226] pusharglist 2 ........................... <pAnimation, #OffX>
  [228] objcall 9 ............................... <pAnimation[#OffX]>
  [230] getprop 6 ............................... <pAnimFrame>
  [232] pusharglist 2 ........................... <pAnimation[#OffX], pAnimFrame>
  [234] objcall 9 ............................... <pAnimation[#OffX][pAnimFrame]>
  [236] setprop 1360 ............................ pXFix = pAnimation[#OffX][pAnimFrame]
  [239] getprop 1364 ............................ <pAnimation>
  [242] pushsymb 1388 ........................... <#OffY>
  [245] pusharglist 2 ........................... <pAnimation, #OffY>
  [247] objcall 9 ............................... <pAnimation[#OffY]>
  [249] getprop 6 ............................... <pAnimFrame>
  [251] pusharglist 2 ........................... <pAnimation[#OffY], pAnimFrame>
  [253] objcall 9 ............................... <pAnimation[#OffY][pAnimFrame]>
  [255] setprop 1361 ............................ pYFix = pAnimation[#OffY][pAnimFrame]
  [258] getparam 0 .............................. <me>
  [260] getobjprop 1268 ......................... <me.pPeopleSize>
  [263] pushcons 26 ............................. <"_">
  [265] joinstr ................................. <me.pPeopleSize & "_">
  [266] getprop 1364 ............................ <pAnimation>
  [269] pushsymb 1389 ........................... <#act>
  [272] pusharglist 2 ........................... <pAnimation, #act>
  [274] objcall 9 ............................... <pAnimation[#act]>
  [276] getprop 6 ............................... <pAnimFrame>
  [278] pusharglist 2 ........................... <pAnimation[#act], pAnimFrame>
  [280] objcall 9 ............................... <pAnimation[#act][pAnimFrame]>
  [282] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame]>
  [283] pushcons 26 ............................. <"_">
  [285] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_">
  [286] getprop 1312 ............................ <pPart>
  [289] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart>
  [290] pushcons 26 ............................. <"_">
  [292] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_">
  [293] getprop 1352 ............................ <pmodel>
  [296] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel>
  [297] pushcons 26 ............................. <"_">
  [299] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_">
  [300] getlocal 0 .............................. <tdir>
  [302] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir>
  [303] pushcons 26 ............................. <"_">
  [305] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [306] getprop 1364 ............................ <pAnimation>
  [309] pushsymb 1390 ........................... <#frm>
  [312] pusharglist 2 ........................... <pAnimation, #frm>
  [314] objcall 9 ............................... <pAnimation[#frm]>
  [316] getprop 6 ............................... <pAnimFrame>
  [318] pusharglist 2 ........................... <pAnimation[#frm], pAnimFrame>
  [320] objcall 9 ............................... <pAnimation[#frm][pAnimFrame]>
  [322] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]>
  [323] setlocal 1 .............................. tMemName = me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]
  [325] getprop 6 ............................... <pAnimFrame>
  [327] pushint8 1 .............................. <1>
  [329] add ..................................... <pAnimFrame + 1>
  [330] setprop 6 ............................... pAnimFrame = pAnimFrame + 1
  [332] getprop 6 ............................... <pAnimFrame>
  [334] getprop 1365 ............................ <pTotalFrame>
  [337] gt ...................................... <pAnimFrame > pTotalFrame>
  [338] jmpifz [345] ............................ if pAnimFrame > pTotalFrame then
  [341] pushint8 1 .............................. <1>
  [343] setprop 6 ............................... pAnimFrame = 1
  [345] getlocal 1 .............................. <tMemName>
  [347] pusharglistnoret 1 ...................... <tMemName>
  [349] extcall 21 .............................. return tMemName
  [351] ret
end

on flipHorizontal me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] getobjprop 252 .......................... <tImg.width>
  [  4] getparam 1 .............................. <tImg>
  [  6] getobjprop 291 .......................... <tImg.height>
  [  9] getparam 1 .............................. <tImg>
  [ 11] getobjprop 1162 ......................... <tImg.depth>
  [ 14] pusharglist 3 ........................... <tImg.width, tImg.height, tImg.depth>
  [ 16] extcall 290 ............................. <image(tImg.width, tImg.height, tImg.depth)>
  [ 19] setlocal 0 .............................. tImage = image(tImg.width, tImg.height, tImg.depth)
  [ 21] getparam 1 .............................. <tImg>
  [ 23] getobjprop 252 .......................... <tImg.width>
  [ 25] pushzero ................................ <0>
  [ 26] pusharglist 2 ........................... <tImg.width, 0>
  [ 28] extcall 293 ............................. <point(tImg.width, 0)>
  [ 31] pushzero ................................ <0>
  [ 32] pushzero ................................ <0>
  [ 33] pusharglist 2 ........................... <0, 0>
  [ 35] extcall 293 ............................. <point(0, 0)>
  [ 38] pushzero ................................ <0>
  [ 39] getparam 1 .............................. <tImg>
  [ 41] getobjprop 291 .......................... <tImg.height>
  [ 44] pusharglist 2 ........................... <0, tImg.height>
  [ 46] extcall 293 ............................. <point(0, tImg.height)>
  [ 49] getparam 1 .............................. <tImg>
  [ 51] getobjprop 252 .......................... <tImg.width>
  [ 53] getparam 1 .............................. <tImg>
  [ 55] getobjprop 291 .......................... <tImg.height>
  [ 58] pusharglist 2 ........................... <tImg.width, tImg.height>
  [ 60] extcall 293 ............................. <point(tImg.width, tImg.height)>
  [ 63] pusharglist 4 ........................... <[point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]>
  [ 65] pushlist ................................ <[point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]>
  [ 66] setlocal 1 .............................. tQuad = [point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]
  [ 68] getlocal 0 .............................. <tImage>
  [ 70] getparam 1 .............................. <tImg>
  [ 72] getlocal 1 .............................. <tQuad>
  [ 74] getparam 1 .............................. <tImg>
  [ 76] getobjprop 322 .......................... <tImg.rect>
  [ 79] pusharglistnoret 4 ...................... <tImage, tImg, tQuad, tImg.rect>
  [ 81] objcall 323 ............................. tImage.copyPixels(tImg, tQuad, tImg.rect)
  [ 84] getlocal 0 .............................. <tImage>
  [ 86] pusharglistnoret 1 ...................... <tImage>
  [ 88] extcall 21 .............................. return tImage
  [ 90] ret
end
