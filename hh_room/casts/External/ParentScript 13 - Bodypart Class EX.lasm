property ancestor, pPart, pmodel, pDirection, pDrawProps, pAction, pActionLh, pActionRh, pMemString, pXFix, pYFix, pLastLocFix, pCacheImage, pCacheRectA, pCacheRectB, pFlipH, pAnimation, pAnimFrame, pTotalFrame

on deconsturct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 30 .............................. <VOID>
  [  4] setprop 1373 ............................ ancestor = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 31 .............................. return 1
  [ 13] ret
end

on define me, tPart, tmodel, tColor, tDirection, tAction, tAncestor
  [  0] getparam 6 .............................. <tAncestor>
  [  2] setprop 1373 ............................ ancestor = tAncestor
  [  5] getparam 1 .............................. <tPart>
  [  7] setprop 1334 ............................ pPart = tPart
  [ 10] getparam 2 .............................. <tmodel>
  [ 12] setprop 1374 ............................ pmodel = tmodel
  [ 15] pushsymb 1200 ........................... <#maskImage>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 93 ............................. <#ink>
  [ 21] pushzero ................................ <0>
  [ 22] pushsymb 95 ............................. <#bgColor>
  [ 24] pushzero ................................ <0>
  [ 25] pusharglist 6 ........................... <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 27] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 28] setprop 1375 ............................ pDrawProps = [#maskImage: 0, #ink: 0, #bgColor: 0]
  [ 31] pushzero ................................ <0>
  [ 32] setprop 1376 ............................ pCacheImage = 0
  [ 35] pushzero ................................ <0>
  [ 36] pushzero ................................ <0>
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 41] extcall 137 ............................. <rect(0, 0, 0, 0)>
  [ 43] setprop 1377 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 46] pushzero ................................ <0>
  [ 47] pushzero ................................ <0>
  [ 48] pushzero ................................ <0>
  [ 49] pushzero ................................ <0>
  [ 50] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 52] extcall 137 ............................. <rect(0, 0, 0, 0)>
  [ 54] setprop 1378 ............................ pCacheRectB = rect(0, 0, 0, 0)
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglistnoret 1 ...................... <me>
  [ 61] objcall 1369 ............................ me.defineInk()
  [ 64] getparam 0 .............................. <me>
  [ 66] getparam 3 .............................. <tColor>
  [ 68] pusharglistnoret 2 ...................... <me, tColor>
  [ 70] objcall 1309 ............................ me.setColor(tColor)
  [ 73] getparam 4 .............................. <tDirection>
  [ 75] setprop 28 .............................. pDirection = tDirection
  [ 77] getparam 5 .............................. <tAction>
  [ 79] setprop 1379 ............................ pAction = tAction
  [ 82] getparam 5 .............................. <tAction>
  [ 84] setprop 1380 ............................ pActionLh = tAction
  [ 87] getparam 5 .............................. <tAction>
  [ 89] setprop 1337 ............................ pActionRh = tAction
  [ 92] pushcons 0 .............................. <EMPTY>
  [ 94] setprop 1381 ............................ pMemString = EMPTY
  [ 97] pushzero ................................ <0>
  [ 98] setprop 1382 ............................ pXFix = 0
  [101] pushzero ................................ <0>
  [102] setprop 1383 ............................ pYFix = 0
  [105] pushzero ................................ <0>
  [106] setprop 1384 ............................ pFlipH = 0
  [109] pushint16 1000 .......................... <1000>
  [112] pushint16 1000 .......................... <1000>
  [115] pusharglist 2 ........................... <1000, 1000>
  [117] extcall 375 ............................. <point(1000, 1000)>
  [120] setprop 1385 ............................ pLastLocFix = point(1000, 1000)
  [123] pushzero ................................ <0>
  [124] setprop 1386 ............................ pAnimation = 0
  [127] pushint8 1 .............................. <1>
  [129] setprop 1387 ............................ pAnimFrame = 1
  [132] pushint8 1 .............................. <1>
  [134] setprop 1388 ............................ pTotalFrame = 1
  [137] pushint8 1 .............................. <1>
  [139] pusharglistnoret 1 ...................... <1>
  [141] extcall 31 .............................. return 1
  [143] ret
end

on update me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tAnimCntr = 0
  [  3] getprop 1379 ............................ <pAction>
  [  6] setlocal 1 .............................. tAction = pAction
  [  8] getprop 1334 ............................ <pPart>
  [ 11] setlocal 2 .............................. tPart = pPart
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 1251 ........................... <#pFlipList>
  [ 18] getprop 28 .............................. <pDirection>
  [ 20] pushint8 1 .............................. <1>
  [ 22] add ..................................... <pDirection + 1>
  [ 23] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 25] objcall 68 .............................. <me.pFlipList[pDirection + 1]>
  [ 27] setlocal 3 .............................. tdir = me.pFlipList[pDirection + 1]
  [ 29] pushzero ................................ <0>
  [ 30] setprop 1382 ............................ pXFix = 0
  [ 33] pushzero ................................ <0>
  [ 34] setprop 1383 ............................ pYFix = 0
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 1274 ......................... <me.pAnimating>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 1370 ............................ <me.checkPartNotCarrying()>
  [ 49] and ..................................... <me.pAnimating and me.checkPartNotCarrying()>
  [ 50] jmpifz [309] ............................ if me.pAnimating and me.checkPartNotCarrying() then / else
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglist 1 ........................... <me>
  [ 57] objcall 918 ............................. <me.animate()>
  [ 60] setlocal 4 .............................. tMemString = me.animate()
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 28 ........................... <me.pDirection>
  [ 66] peek 0 .................................. case me.pDirection of
  [ 68] pushzero ................................ <0>
  [ 69] eq
  [ 70] jmpifz [ 98] ............................ (case) 0:
  [ 73] getprop 1383 ............................ <pYFix>
  [ 76] getprop 1382 ............................ <pXFix>
  [ 79] pushint8 2 .............................. <2>
  [ 81] div ..................................... <pXFix / 2>
  [ 82] add ..................................... <pYFix + (pXFix / 2)>
  [ 83] setprop 1383 ............................ pYFix = pYFix + (pXFix / 2)
  [ 86] getprop 1382 ............................ <pXFix>
  [ 89] pushint8 2 .............................. <2>
  [ 91] div ..................................... <pXFix / 2>
  [ 92] setprop 1382 ............................ pXFix = pXFix / 2
  [ 95] jmp [264]
  [ 98] peek 0
  [100] pushint8 1 .............................. <1>
  [102] eq
  [103] jmpifz [123] ............................ (case) 1:
  [106] getprop 1383 ............................ <pYFix>
  [109] getprop 1382 ............................ <pXFix>
  [112] add ..................................... <pYFix + pXFix>
  [113] setprop 1383 ............................ pYFix = pYFix + pXFix
  [116] pushzero ................................ <0>
  [117] setprop 1382 ............................ pXFix = 0
  [120] jmp [264]
  [123] peek 0
  [125] pushint8 2 .............................. <2>
  [127] eq
  [128] jmpifz [156] ............................ (case) 2:
  [131] getprop 1383 ............................ <pYFix>
  [134] getprop 1382 ............................ <pXFix>
  [137] pushint8 2 .............................. <2>
  [139] div ..................................... <pXFix / 2>
  [140] sub ..................................... <pYFix - (pXFix / 2)>
  [141] setprop 1383 ............................ pYFix = pYFix - (pXFix / 2)
  [144] getprop 1382 ............................ <pXFix>
  [147] pushint8 2 .............................. <2>
  [149] div ..................................... <pXFix / 2>
  [150] setprop 1382 ............................ pXFix = pXFix / 2
  [153] jmp [264]
  [156] peek 0
  [158] pushint8 4 .............................. <4>
  [160] eq
  [161] jmpifz [190] ............................ (case) 4:
  [164] getprop 1383 ............................ <pYFix>
  [167] getprop 1382 ............................ <pXFix>
  [170] pushint8 2 .............................. <2>
  [172] div ..................................... <pXFix / 2>
  [173] add ..................................... <pYFix + (pXFix / 2)>
  [174] setprop 1383 ............................ pYFix = pYFix + (pXFix / 2)
  [177] getprop 1382 ............................ <pXFix>
  [180] inv ..................................... <-pXFix>
  [181] pushint8 2 .............................. <2>
  [183] div ..................................... <-pXFix / 2>
  [184] setprop 1382 ............................ pXFix = -pXFix / 2
  [187] jmp [264]
  [190] peek 0
  [192] pushint8 5 .............................. <5>
  [194] eq
  [195] jmpifz [215] ............................ (case) 5:
  [198] getprop 1383 ............................ <pYFix>
  [201] getprop 1382 ............................ <pXFix>
  [204] sub ..................................... <pYFix - pXFix>
  [205] setprop 1383 ............................ pYFix = pYFix - pXFix
  [208] pushzero ................................ <0>
  [209] setprop 1382 ............................ pXFix = 0
  [212] jmp [264]
  [215] peek 0
  [217] pushint8 6 .............................. <6>
  [219] eq
  [220] jmpifz [249] ............................ (case) 6:
  [223] getprop 1383 ............................ <pYFix>
  [226] getprop 1382 ............................ <pXFix>
  [229] pushint8 2 .............................. <2>
  [231] div ..................................... <pXFix / 2>
  [232] sub ..................................... <pYFix - (pXFix / 2)>
  [233] setprop 1383 ............................ pYFix = pYFix - (pXFix / 2)
  [236] getprop 1382 ............................ <pXFix>
  [239] inv ..................................... <-pXFix>
  [240] pushint8 2 .............................. <2>
  [242] div ..................................... <-pXFix / 2>
  [243] setprop 1382 ............................ pXFix = -pXFix / 2
  [246] jmp [264]
  [249] peek 0
  [251] pushint8 7 .............................. <7>
  [253] eq
  [254] jmpifz [264] ............................ (case) 7:
  [257] getprop 1382 ............................ <pXFix>
  [260] inv ..................................... <-pXFix>
  [261] setprop 1382 ............................ pXFix = -pXFix
  [264] pop 1 ................................... end case
  [266] getparam 0 .............................. <me>
  [268] getobjprop 1295 ......................... <me.pPeopleSize>
  [271] pushcons 1 .............................. <"sh">
  [273] eq ...................................... <me.pPeopleSize = "sh">
  [274] jmpifz [284] ............................ if me.pPeopleSize = "sh" then / else
  [277] pushcons 2 .............................. <0.69999999999999996>
  [279] setlocal 5 .............................. tSizeMultiplier = 0.69999999999999996
  [281] jmp [288]
  [284] pushint8 1 .............................. <1>
  [286] setlocal 5 .............................. tSizeMultiplier = 1
  [288] getprop 1382 ............................ <pXFix>
  [291] getlocal 5 .............................. <tSizeMultiplier>
  [293] mul ..................................... <pXFix * tSizeMultiplier>
  [294] setprop 1382 ............................ pXFix = pXFix * tSizeMultiplier
  [297] getprop 1383 ............................ <pYFix>
  [300] getlocal 5 .............................. <tSizeMultiplier>
  [302] mul ..................................... <pYFix * tSizeMultiplier>
  [303] setprop 1383 ............................ pYFix = pYFix * tSizeMultiplier
  [306] jmp [953]
  [309] getprop 1334 ............................ <pPart>
  [312] peek 0 .................................. case pPart of
  [314] pushcons 3 .............................. <"bd">
  [316] nteq
  [317] jmpifz [336] ............................ (case) "bd", ...
  [320] peek 0
  [322] pushcons 4 .............................. <"lg">
  [324] nteq
  [325] jmpifz [336] ............................ (case) ..., "lg", ...
  [328] peek 0
  [330] pushcons 1 .............................. <"sh">
  [332] eq
  [333] jmpifz [355] ............................ (case) ..., "sh":
  [336] getprop 1379 ............................ <pAction>
  [339] pushcons 5 .............................. <"wlk">
  [341] eq ...................................... <pAction = "wlk">
  [342] jmpifz [352] ............................ if pAction = "wlk" then
  [345] getparam 0 .............................. <me>
  [347] getobjprop 1259 ......................... <me.pAnimCounter>
  [350] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [352] jmp [909]
  [355] peek 0
  [357] pushcons 6 .............................. <"lh">
  [359] nteq
  [360] jmpifz [371] ............................ (case) "lh", ...
  [363] peek 0
  [365] pushcons 7 .............................. <"ls">
  [367] eq
  [368] jmpifz [511] ............................ (case) ..., "ls":
  [371] getprop 28 .............................. <pDirection>
  [373] getlocal 3 .............................. <tdir>
  [375] eq ...................................... <pDirection = tdir>
  [376] jmpifz [398] ............................ if pDirection = tdir then / else
  [379] getprop 1380 ............................ <pActionLh>
  [382] pusharglist 1 ........................... <pActionLh>
  [384] extcall 120 ............................. <voidp(pActionLh)>
  [386] not ..................................... <not voidp(pActionLh)>
  [387] jmpifz [395] ............................ if not voidp(pActionLh) then
  [390] getprop 1380 ............................ <pActionLh>
  [393] setlocal 1 .............................. tAction = pActionLh
  [395] jmp [414]
  [398] getprop 1337 ............................ <pActionRh>
  [401] pusharglist 1 ........................... <pActionRh>
  [403] extcall 120 ............................. <voidp(pActionRh)>
  [405] not ..................................... <not voidp(pActionRh)>
  [406] jmpifz [414] ............................ if not voidp(pActionRh) then
  [409] getprop 1337 ............................ <pActionRh>
  [412] setlocal 1 .............................. tAction = pActionRh
  [414] getlocal 1 .............................. <tAction>
  [416] pushcons 5 .............................. <"wlk">
  [418] eq ...................................... <tAction = "wlk">
  [419] jmpifz [432] ............................ if tAction = "wlk" then / else
  [422] getparam 0 .............................. <me>
  [424] getobjprop 1259 ......................... <me.pAnimCounter>
  [427] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [429] jmp [508]
  [432] getlocal 1 .............................. <tAction>
  [434] pushcons 8 .............................. <"wav">
  [436] eq ...................................... <tAction = "wav">
  [437] jmpifz [453] ............................ if tAction = "wav" then / else
  [440] getparam 0 .............................. <me>
  [442] getobjprop 1259 ......................... <me.pAnimCounter>
  [445] pushint8 2 .............................. <2>
  [447] mod ..................................... <me.pAnimCounter mod 2>
  [448] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [450] jmp [508]
  [453] pushcons 9 .............................. <"crr">
  [455] pushcons 10 ............................. <"drk">
  [457] pushcons 11 ............................. <"ohd">
  [459] pusharglist 3 ........................... <["crr", "drk", "ohd"]>
  [461] pushlist ................................ <["crr", "drk", "ohd"]>
  [462] getlocal 1 .............................. <tAction>
  [464] pusharglist 2 ........................... <["crr", "drk", "ohd"], tAction>
  [466] objcall 332 ............................. <["crr", "drk", "ohd"].getPos(tAction)>
  [469] pushzero ................................ <0>
  [470] nteq .................................... <["crr", "drk", "ohd"].getPos(tAction) <> 0>
  [471] jmpifz [508] ............................ if ["crr", "drk", "ohd"].getPos(tAction) <> 0 then
  [474] getprop 28 .............................. <pDirection>
  [476] pushint8 4 .............................. <4>
  [478] gteq .................................... <pDirection >= 4>
  [479] jmpifz [504] ............................ if pDirection >= 4 then
  [482] pushint8 40 ............................. <40>
  [484] inv ..................................... <-40>
  [485] setprop 1382 ............................ pXFix = -40
  [488] pushcons 12 ............................. <"r">
  [490] getprop 1334 ............................ <pPart>
  [493] pushsymb 66 ............................. <#char>
  [495] pushint8 2 .............................. <2>
  [497] pusharglist 3 ........................... <pPart, #char, 2>
  [499] objcall 68 .............................. <pPart.char[2]>
  [501] joinstr ................................. <"r" & pPart.char[2]>
  [502] setlocal 2 .............................. tPart = "r" & pPart.char[2]
  [504] getprop 28 .............................. <pDirection>
  [506] setlocal 3 .............................. tdir = pDirection
  [508] jmp [909]
  [511] peek 0
  [513] pushcons 13 ............................. <"rh">
  [515] nteq
  [516] jmpifz [527] ............................ (case) "rh", ...
  [519] peek 0
  [521] pushcons 14 ............................. <"rs">
  [523] eq
  [524] jmpifz [667] ............................ (case) ..., "rs":
  [527] getprop 28 .............................. <pDirection>
  [529] getlocal 3 .............................. <tdir>
  [531] eq ...................................... <pDirection = tdir>
  [532] jmpifz [554] ............................ if pDirection = tdir then / else
  [535] getprop 1337 ............................ <pActionRh>
  [538] pusharglist 1 ........................... <pActionRh>
  [540] extcall 120 ............................. <voidp(pActionRh)>
  [542] not ..................................... <not voidp(pActionRh)>
  [543] jmpifz [551] ............................ if not voidp(pActionRh) then
  [546] getprop 1337 ............................ <pActionRh>
  [549] setlocal 1 .............................. tAction = pActionRh
  [551] jmp [570]
  [554] getprop 1380 ............................ <pActionLh>
  [557] pusharglist 1 ........................... <pActionLh>
  [559] extcall 120 ............................. <voidp(pActionLh)>
  [561] not ..................................... <not voidp(pActionLh)>
  [562] jmpifz [570] ............................ if not voidp(pActionLh) then
  [565] getprop 1380 ............................ <pActionLh>
  [568] setlocal 1 .............................. tAction = pActionLh
  [570] getlocal 1 .............................. <tAction>
  [572] pushcons 5 .............................. <"wlk">
  [574] eq ...................................... <tAction = "wlk">
  [575] jmpifz [588] ............................ if tAction = "wlk" then / else
  [578] getparam 0 .............................. <me>
  [580] getobjprop 1259 ......................... <me.pAnimCounter>
  [583] setlocal 0 .............................. tAnimCntr = me.pAnimCounter
  [585] jmp [664]
  [588] getlocal 1 .............................. <tAction>
  [590] pushcons 8 .............................. <"wav">
  [592] eq ...................................... <tAction = "wav">
  [593] jmpifz [629] ............................ if tAction = "wav" then / else
  [596] getparam 0 .............................. <me>
  [598] getobjprop 1259 ......................... <me.pAnimCounter>
  [601] pushint8 2 .............................. <2>
  [603] mod ..................................... <me.pAnimCounter mod 2>
  [604] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [606] pushcons 15 ............................. <"l">
  [608] getprop 1334 ............................ <pPart>
  [611] pushsymb 66 ............................. <#char>
  [613] pushint8 2 .............................. <2>
  [615] pusharglist 3 ........................... <pPart, #char, 2>
  [617] objcall 68 .............................. <pPart.char[2]>
  [619] joinstr ................................. <"l" & pPart.char[2]>
  [620] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [622] getprop 28 .............................. <pDirection>
  [624] setlocal 3 .............................. tdir = pDirection
  [626] jmp [664]
  [629] getlocal 1 .............................. <tAction>
  [631] pushcons 16 ............................. <"sig">
  [633] eq ...................................... <tAction = "sig">
  [634] jmpifz [664] ............................ if tAction = "sig" then
  [637] pushzero ................................ <0>
  [638] setlocal 0 .............................. tAnimCntr = 0
  [640] pushcons 15 ............................. <"l">
  [642] getprop 1334 ............................ <pPart>
  [645] pushsymb 66 ............................. <#char>
  [647] pushint8 2 .............................. <2>
  [649] pusharglist 3 ........................... <pPart, #char, 2>
  [651] objcall 68 .............................. <pPart.char[2]>
  [653] joinstr ................................. <"l" & pPart.char[2]>
  [654] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [656] getprop 28 .............................. <pDirection>
  [658] setlocal 3 .............................. tdir = pDirection
  [660] pushcons 8 .............................. <"wav">
  [662] setlocal 1 .............................. tAction = "wav"
  [664] jmp [909]
  [667] peek 0
  [669] pushcons 17 ............................. <"hd">
  [671] nteq
  [672] jmpifz [683] ............................ (case) "hd", ...
  [675] peek 0
  [677] pushcons 18 ............................. <"fc">
  [679] eq
  [680] jmpifz [724] ............................ (case) ..., "fc":
  [683] getparam 0 .............................. <me>
  [685] getobjprop 1267 ......................... <me.pTalking>
  [688] jmpifz [721] ............................ if me.pTalking then
  [691] getprop 1379 ............................ <pAction>
  [694] pushcons 19 ............................. <"lay">
  [696] eq ...................................... <pAction = "lay">
  [697] jmpifz [707] ............................ if pAction = "lay" then / else
  [700] pushcons 20 ............................. <"lsp">
  [702] setlocal 1 .............................. tAction = "lsp"
  [704] jmp [711]
  [707] pushcons 21 ............................. <"spk">
  [709] setlocal 1 .............................. tAction = "spk"
  [711] getparam 0 .............................. <me>
  [713] getobjprop 1259 ......................... <me.pAnimCounter>
  [716] pushint8 2 .............................. <2>
  [718] mod ..................................... <me.pAnimCounter mod 2>
  [719] setlocal 0 .............................. tAnimCntr = me.pAnimCounter mod 2
  [721] jmp [909]
  [724] peek 0
  [726] pushcons 22 ............................. <"ey">
  [728] eq
  [729] jmpifz [767] ............................ (case) "ey":
  [732] getparam 0 .............................. <me>
  [734] getobjprop 1267 ......................... <me.pTalking>
  [737] getprop 1379 ............................ <pAction>
  [740] pushcons 19 ............................. <"lay">
  [742] nteq .................................... <pAction <> "lay">
  [743] and ..................................... <me.pTalking and (pAction <> "lay")>
  [744] getparam 0 .............................. <me>
  [746] getobjprop 1259 ......................... <me.pAnimCounter>
  [749] pushint8 2 .............................. <2>
  [751] mod ..................................... <me.pAnimCounter mod 2>
  [752] pushzero ................................ <0>
  [753] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [754] and ..................................... <me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0)>
  [755] jmpifz [764] ............................ if me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0) then
  [758] pushint8 1 .............................. <1>
  [760] inv ..................................... <-1>
  [761] setprop 1383 ............................ pYFix = -1
  [764] jmp [909]
  [767] peek 0
  [769] pushcons 23 ............................. <"hr">
  [771] eq
  [772] jmpifz [810] ............................ (case) "hr":
  [775] getparam 0 .............................. <me>
  [777] getobjprop 1267 ......................... <me.pTalking>
  [780] getparam 0 .............................. <me>
  [782] getobjprop 1259 ......................... <me.pAnimCounter>
  [785] pushint8 2 .............................. <2>
  [787] mod ..................................... <me.pAnimCounter mod 2>
  [788] pushzero ................................ <0>
  [789] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [790] and ..................................... <me.pTalking and ((me.pAnimCounter mod 2) = 0)>
  [791] jmpifz [807] ............................ if me.pTalking and ((me.pAnimCounter mod 2) = 0) then
  [794] getprop 1379 ............................ <pAction>
  [797] pushcons 19 ............................. <"lay">
  [799] nteq .................................... <pAction <> "lay">
  [800] jmpifz [807] ............................ if pAction <> "lay" then
  [803] pushcons 21 ............................. <"spk">
  [805] setlocal 1 .............................. tAction = "spk"
  [807] jmp [909]
  [810] peek 0
  [812] pushcons 24 ............................. <"ri">
  [814] eq
  [815] jmpifz [892] ............................ (case) "ri":
  [818] getparam 0 .............................. <me>
  [820] getobjprop 1268 ......................... <me.pCarrying>
  [823] not ..................................... <not me.pCarrying>
  [824] jmpifz [880] ............................ if not me.pCarrying then / else
  [827] pushcons 0 .............................. <EMPTY>
  [829] setprop 1381 ............................ pMemString = EMPTY
  [832] getprop 1377 ............................ <pCacheRectA>
  [835] getobjprop 80 ........................... <pCacheRectA.width>
  [837] pushzero ................................ <0>
  [838] gt ...................................... <pCacheRectA.width > 0>
  [839] jmpifz [871] ............................ if pCacheRectA.width > 0 then
  [842] getparam 0 .............................. <me>
  [844] getparam 0 .............................. <me>
  [846] getobjprop 1253 ......................... <me.pUpdateRect>
  [849] getprop 1377 ............................ <pCacheRectA>
  [852] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [854] extcall 1390 ............................ <union(me.pUpdateRect, pCacheRectA)>
  [857] setobjprop 1253 ......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [860] pushzero ................................ <0>
  [861] pushzero ................................ <0>
  [862] pushzero ................................ <0>
  [863] pushzero ................................ <0>
  [864] pusharglist 4 ........................... <0, 0, 0, 0>
  [866] extcall 137 ............................. <rect(0, 0, 0, 0)>
  [868] setprop 1377 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [871] pop 1
  [873] pusharglistnoret 0 ...................... <>
  [875] extcall 31 .............................. return 
  [877] jmp [889]
  [880] getprop 1337 ............................ <pActionRh>
  [883] setlocal 1 .............................. tAction = pActionRh
  [885] getprop 28 .............................. <pDirection>
  [887] setlocal 3 .............................. tdir = pDirection
  [889] jmp [909]
  [892] peek 0
  [894] pushcons 25 ............................. <"li">
  [896] eq
  [897] jmpifz [909] ............................ (case) "li":
  [900] getprop 1380 ............................ <pActionLh>
  [903] setlocal 1 .............................. tAction = pActionLh
  [905] getprop 28 .............................. <pDirection>
  [907] setlocal 3 .............................. tdir = pDirection
  [909] pop 1 ................................... end case
  [911] getparam 0 .............................. <me>
  [913] getobjprop 1295 ......................... <me.pPeopleSize>
  [916] pushcons 26 ............................. <"_">
  [918] joinstr ................................. <me.pPeopleSize & "_">
  [919] getlocal 1 .............................. <tAction>
  [921] joinstr ................................. <me.pPeopleSize & "_" & tAction>
  [922] pushcons 26 ............................. <"_">
  [924] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_">
  [925] getlocal 2 .............................. <tPart>
  [927] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart>
  [928] pushcons 26 ............................. <"_">
  [930] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_">
  [931] getprop 1374 ............................ <pmodel>
  [934] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel>
  [935] pushcons 26 ............................. <"_">
  [937] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_">
  [938] getlocal 3 .............................. <tdir>
  [940] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir>
  [941] pushcons 26 ............................. <"_">
  [943] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_">
  [944] getlocal 0 .............................. <tAnimCntr>
  [946] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCntr>
  [947] setlocal 4 .............................. tMemString = me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCntr
  [949] pushzero ................................ <0>
  [950] setprop 1384 ............................ pFlipH = 0
  [953] getprop 1385 ............................ <pLastLocFix>
  [956] getprop 1382 ............................ <pXFix>
  [959] getprop 1383 ............................ <pYFix>
  [962] pusharglist 2 ........................... <pXFix, pYFix>
  [964] extcall 375 ............................. <point(pXFix, pYFix)>
  [967] nteq .................................... <pLastLocFix <> point(pXFix, pYFix)>
  [968] setlocal 6 .............................. tLocFixChanged = pLastLocFix <> point(pXFix, pYFix)
  [970] getprop 1382 ............................ <pXFix>
  [973] getprop 1383 ............................ <pYFix>
  [976] pusharglist 2 ........................... <pXFix, pYFix>
  [978] extcall 375 ............................. <point(pXFix, pYFix)>
  [981] setprop 1385 ............................ pLastLocFix = point(pXFix, pYFix)
  [984] getprop 1381 ............................ <pMemString>
  [987] getlocal 4 .............................. <tMemString>
  [989] nteq .................................... <pMemString <> tMemString>
  [990] getlocal 6 .............................. <tLocFixChanged>
  [992] or ...................................... <(pMemString <> tMemString) or tLocFixChanged>
  [993] jmpifz [1313] ........................... if (pMemString <> tMemString) or tLocFixChanged then
  [996] getlocal 4 .............................. <tMemString>
  [998] setprop 1381 ............................ pMemString = tMemString
  [1001] getlocal 4 ............................. <tMemString>
  [1003] pusharglist 1 .......................... <tMemString>
  [1005] extcall 65 ............................. <getmemnum(tMemString)>
  [1007] setlocal 7 ............................. tMemNum = getmemnum(tMemString)
  [1009] getlocal 7 ............................. <tMemNum>
  [1011] pushzero ............................... <0>
  [1012] gt ..................................... <tMemNum > 0>
  [1013] jmpifz [1280] .......................... if tMemNum > 0 then / else
  [1016] getlocal 7 ............................. <tMemNum>
  [1018] pusharglist 1 .......................... <tMemNum>
  [1020] extcall 64 ............................. <member(tMemNum)>
  [1022] setlocal 8 ............................. tmember = member(tMemNum)
  [1024] getlocal 8 ............................. <tmember>
  [1026] getobjprop 118 ......................... <tmember.regPoint>
  [1028] setlocal 9 ............................. tRegPnt = tmember.regPoint
  [1030] getlocal 9 ............................. <tRegPnt>
  [1032] pushint8 1 ............................. <1>
  [1034] pusharglist 2 .......................... <tRegPnt, 1>
  [1036] objcall 34 ............................. <tRegPnt[1]>
  [1038] inv .................................... <-tRegPnt[1]>
  [1039] setlocal 10 ............................ tX = -tRegPnt[1]
  [1041] getparam 0 ............................. <me>
  [1043] getchainedprop 1292 .................... <me.pBuffer>
  [1046] getchainedprop 137 ..................... <me.pBuffer.rect>
  [1048] getobjprop 81 .......................... <me.pBuffer.rect.height>
  [1050] getlocal 9 ............................. <tRegPnt>
  [1052] pushint8 2 ............................. <2>
  [1054] pusharglist 2 .......................... <tRegPnt, 2>
  [1056] objcall 34 ............................. <tRegPnt[2]>
  [1058] sub .................................... <me.pBuffer.rect.height - tRegPnt[2]>
  [1059] pushint8 10 ............................ <10>
  [1061] sub .................................... <me.pBuffer.rect.height - tRegPnt[2] - 10>
  [1062] setlocal 11 ............................ tY = me.pBuffer.rect.height - tRegPnt[2] - 10
  [1064] getparam 0 ............................. <me>
  [1066] getparam 0 ............................. <me>
  [1068] getobjprop 1253 ........................ <me.pUpdateRect>
  [1071] getprop 1377 ........................... <pCacheRectA>
  [1074] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1076] extcall 1390 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1079] setobjprop 1253 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1082] getlocal 8 ............................. <tmember>
  [1084] getobjprop 63 .......................... <tmember.image>
  [1086] setprop 1376 ........................... pCacheImage = tmember.image
  [1089] getparam 0 ............................. <me>
  [1091] getobjprop 1252 ........................ <me.pLocFix>
  [1094] setlocal 12 ............................ tLocFix = me.pLocFix
  [1096] getprop 1384 ........................... <pFlipH>
  [1099] jmpifz [1181] .......................... if pFlipH then
  [1102] getparam 0 ............................. <me>
  [1104] getprop 1376 ........................... <pCacheImage>
  [1107] pusharglist 2 .......................... <me, pCacheImage>
  [1109] objcall 1372 ........................... <me.flipHorizontal(pCacheImage)>
  [1112] setprop 1376 ........................... pCacheImage = me.flipHorizontal(pCacheImage)
  [1115] getlocal 10 ............................ <tX>
  [1117] inv .................................... <-tX>
  [1118] getlocal 8 ............................. <tmember>
  [1120] getobjprop 80 .......................... <tmember.width>
  [1122] sub .................................... <-tX - tmember.width>
  [1123] getparam 0 ............................. <me>
  [1125] getchainedprop 1292 .................... <me.pBuffer>
  [1128] getobjprop 80 .......................... <me.pBuffer.width>
  [1130] add .................................... <-tX - tmember.width + me.pBuffer.width>
  [1131] setlocal 10 ............................ tX = -tX - tmember.width + me.pBuffer.width
  [1133] getparam 0 ............................. <me>
  [1135] pushsymb 1252 .......................... <#pLocFix>
  [1138] pushint8 1 ............................. <1>
  [1140] pusharglist 3 .......................... <me, #pLocFix, 1>
  [1142] objcall 68 ............................. <me.pLocFix[1]>
  [1144] inv .................................... <-me.pLocFix[1]>
  [1145] getparam 0 ............................. <me>
  [1147] pushsymb 1252 .......................... <#pLocFix>
  [1150] pushint8 2 ............................. <2>
  [1152] pusharglist 3 .......................... <me, #pLocFix, 2>
  [1154] objcall 68 ............................. <me.pLocFix[2]>
  [1156] pusharglist 2 .......................... <-me.pLocFix[1], me.pLocFix[2]>
  [1158] extcall 375 ............................ <point(-me.pLocFix[1], me.pLocFix[2])>
  [1161] setlocal 12 ............................ tLocFix = point(-me.pLocFix[1], me.pLocFix[2])
  [1163] getparam 0 ............................. <me>
  [1165] getobjprop 1295 ........................ <me.pPeopleSize>
  [1168] pushcons 1 ............................. <"sh">
  [1170] eq ..................................... <me.pPeopleSize = "sh">
  [1171] jmpifz [1181] .......................... if me.pPeopleSize = "sh" then
  [1174] getlocal 10 ............................ <tX>
  [1176] pushint8 2 ............................. <2>
  [1178] sub .................................... <tX - 2>
  [1179] setlocal 10 ............................ tX = tX - 2
  [1181] getlocal 10 ............................ <tX>
  [1183] getlocal 11 ............................ <tY>
  [1185] getlocal 10 ............................ <tX>
  [1187] getprop 1376 ........................... <pCacheImage>
  [1190] getobjprop 80 .......................... <pCacheImage.width>
  [1192] add .................................... <tX + pCacheImage.width>
  [1193] getlocal 11 ............................ <tY>
  [1195] getprop 1376 ........................... <pCacheImage>
  [1198] getobjprop 81 .......................... <pCacheImage.height>
  [1200] add .................................... <tY + pCacheImage.height>
  [1201] pusharglist 4 .......................... <tX, tY, tX + pCacheImage.width, tY + pCacheImage.height>
  [1203] extcall 137 ............................ <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)>
  [1205] getprop 1382 ........................... <pXFix>
  [1208] getprop 1383 ........................... <pYFix>
  [1211] getprop 1382 ........................... <pXFix>
  [1214] getprop 1383 ........................... <pYFix>
  [1217] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1219] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1220] add .................................... <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix]>
  [1221] getlocal 12 ............................ <tLocFix>
  [1223] getlocal 12 ............................ <tLocFix>
  [1225] pusharglist 2 .......................... <tLocFix, tLocFix>
  [1227] extcall 137 ............................ <rect(tLocFix, tLocFix)>
  [1229] add .................................... <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix] + rect(tLocFix, tLocFix)>
  [1230] setprop 1377 ........................... pCacheRectA = rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height) + [pXFix, pYFix, pXFix, pYFix] + rect(tLocFix, tLocFix)
  [1233] getprop 1376 ........................... <pCacheImage>
  [1236] getobjprop 137 ......................... <pCacheImage.rect>
  [1238] setprop 1378 ........................... pCacheRectB = pCacheImage.rect
  [1241] getprop 1375 ........................... <pDrawProps>
  [1244] pushsymb 1200 .......................... <#maskImage>
  [1247] getprop 1376 ........................... <pCacheImage>
  [1250] pusharglist 1 .......................... <pCacheImage>
  [1252] objcall 1201 ........................... <pCacheImage.createMatte()>
  [1255] pusharglistnoret 3 ..................... <pDrawProps, #maskImage, pCacheImage.createMatte()>
  [1257] objcall 59 ............................. pDrawProps[#maskImage] = pCacheImage.createMatte()
  [1259] getparam 0 ............................. <me>
  [1261] getparam 0 ............................. <me>
  [1263] getobjprop 1253 ........................ <me.pUpdateRect>
  [1266] getprop 1377 ........................... <pCacheRectA>
  [1269] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1271] extcall 1390 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1274] setobjprop 1253 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1277] jmp [1313]
  [1280] getparam 0 ............................. <me>
  [1282] getparam 0 ............................. <me>
  [1284] getobjprop 1253 ........................ <me.pUpdateRect>
  [1287] getprop 1377 ........................... <pCacheRectA>
  [1290] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1292] extcall 1390 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1295] setobjprop 1253 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1298] pushzero ............................... <0>
  [1299] pushzero ............................... <0>
  [1300] pushzero ............................... <0>
  [1301] pushzero ............................... <0>
  [1302] pusharglist 4 .......................... <0, 0, 0, 0>
  [1304] extcall 137 ............................ <rect(0, 0, 0, 0)>
  [1306] setprop 1377 ........................... pCacheRectA = rect(0, 0, 0, 0)
  [1309] pusharglistnoret 0 ..................... <>
  [1311] extcall 31 ............................. return 
  [1313] getparam 0 ............................. <me>
  [1315] getchainedprop 1292 .................... <me.pBuffer>
  [1318] getprop 1376 ........................... <pCacheImage>
  [1321] getprop 1377 ........................... <pCacheRectA>
  [1324] getprop 1378 ........................... <pCacheRectB>
  [1327] getprop 1375 ........................... <pDrawProps>
  [1330] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA, pCacheRectB, pDrawProps>
  [1332] objcall 400 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA, pCacheRectB, pDrawProps)
  [1335] ret
end

on render me
  [  0] getprop 1381 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 62 .............................. <memberExists(pMemString)>
  [  7] jmpifz [ 32] ............................ if memberExists(pMemString) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 1292 ..................... <me.pBuffer>
  [ 15] getprop 1378 ............................ <pCacheRectB>
  [ 18] getprop 1377 ............................ <pCacheRectA>
  [ 21] getprop 1378 ............................ <pCacheRectB>
  [ 24] getprop 1375 ............................ <pDrawProps>
  [ 27] pusharglistnoret 5 ...................... <me.pBuffer, pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps>
  [ 29] objcall 400 ............................. me.pBuffer.copyPixels(pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps)
  [ 32] ret
end

on setItemObj me, tmodel
  [  0] getprop 1334 ............................ <pPart>
  [  3] pushcons 24 ............................. <"ri">
  [  5] eq ...................................... <pPart = "ri">
  [  6] getprop 1334 ............................ <pPart>
  [  9] pushcons 25 ............................. <"li">
  [ 11] eq ...................................... <pPart = "li">
  [ 12] or ...................................... <(pPart = "ri") or (pPart = "li")>
  [ 13] jmpifz [ 21] ............................ if (pPart = "ri") or (pPart = "li") then
  [ 16] getparam 1 .............................. <tmodel>
  [ 18] setprop 1374 ............................ pmodel = tmodel
  [ 21] ret
end

on defineDir me, tdir, tPart
  [  0] getparam 2 .............................. <tPart>
  [  2] pusharglist 1 ........................... <tPart>
  [  4] extcall 120 ............................. <voidp(tPart)>
  [  6] getparam 2 .............................. <tPart>
  [  8] getprop 1334 ............................ <pPart>
  [ 11] eq ...................................... <tPart = pPart>
  [ 12] or ...................................... <voidp(tPart) or (tPart = pPart)>
  [ 13] jmpifz [ 20] ............................ if voidp(tPart) or (tPart = pPart) then
  [ 16] getparam 1 .............................. <tdir>
  [ 18] setprop 28 .............................. pDirection = tdir
  [ 20] ret
end

on defineDirMultiple me, tdir, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1334 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 330 ............................. <tTargetPartList.getOne(pPart)>
  [ 10] jmpifz [ 17] ............................ if tTargetPartList.getOne(pPart) then
  [ 13] getparam 1 .............................. <tdir>
  [ 15] setprop 28 .............................. pDirection = tdir
  [ 17] ret
end

on defineAct me, tAct, tTargetPartList
  [  0] getprop 1379 ............................ <pAction>
  [  3] pushcons 27 ............................. <"std">
  [  5] eq ...................................... <pAction = "std">
  [  6] jmpifz [ 14] ............................ if pAction = "std" then
  [  9] getparam 1 .............................. <tAct>
  [ 11] setprop 1379 ............................ pAction = tAct
  [ 14] ret
end

on defineActMultiple me, tAct, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1334 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 330 ............................. <tTargetPartList.getOne(pPart)>
  [ 10] jmpifz [ 47] ............................ if tTargetPartList.getOne(pPart) then
  [ 13] getprop 1379 ............................ <pAction>
  [ 16] pushcons 27 ............................. <"std">
  [ 18] eq ...................................... <pAction = "std">
  [ 19] jmpifz [ 27] ............................ if pAction = "std" then
  [ 22] getparam 1 .............................. <tAct>
  [ 24] setprop 1379 ............................ pAction = tAct
  [ 27] getprop 1334 ............................ <pPart>
  [ 30] pushcons 22 ............................. <"ey">
  [ 32] eq ...................................... <pPart = "ey">
  [ 33] getparam 1 .............................. <tAct>
  [ 35] pushcons 27 ............................. <"std">
  [ 37] eq ...................................... <tAct = "std">
  [ 38] and ..................................... <(pPart = "ey") and (tAct = "std")>
  [ 39] jmpifz [ 47] ............................ if (pPart = "ey") and (tAct = "std") then
  [ 42] pushcons 27 ............................. <"std">
  [ 44] setprop 1379 ............................ pAction = "std"
  [ 47] ret
end

on defineInk me, tInk
  [  0] getparam 1 .............................. <tInk>
  [  2] pusharglist 1 ........................... <tInk>
  [  4] extcall 120 ............................. <voidp(tInk)>
  [  6] jmpifz [ 78] ............................ if voidp(tInk) then
  [  9] getprop 1334 ............................ <pPart>
  [ 12] peek 0 .................................. case pPart of
  [ 14] pushcons 22 ............................. <"ey">
  [ 16] eq
  [ 17] jmpifz [ 27] ............................ (case) "ey":
  [ 20] pushint8 36 ............................. <36>
  [ 22] setparam 1 .............................. tInk = 36
  [ 24] jmp [ 76]
  [ 27] peek 0
  [ 29] pushcons 28 ............................. <"sd">
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) "sd":
  [ 35] pushint8 32 ............................. <32>
  [ 37] setparam 1 .............................. tInk = 32
  [ 39] jmp [ 76]
  [ 42] peek 0
  [ 44] pushcons 24 ............................. <"ri">
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) "ri":
  [ 50] pushint8 8 .............................. <8>
  [ 52] setparam 1 .............................. tInk = 8
  [ 54] jmp [ 76]
  [ 57] peek 0
  [ 59] pushcons 25 ............................. <"li">
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) "li":
  [ 65] pushint8 8 .............................. <8>
  [ 67] setparam 1 .............................. tInk = 8
  [ 69] jmp [ 76] ............................... (case) otherwise:
  [ 72] pushint8 41 ............................. <41>
  [ 74] setparam 1 .............................. tInk = 41
  [ 76] pop 1 ................................... end case
  [ 78] getprop 1375 ............................ <pDrawProps>
  [ 81] pushsymb 93 ............................. <#ink>
  [ 83] getparam 1 .............................. <tInk>
  [ 85] pusharglistnoret 3 ...................... <pDrawProps, #ink, tInk>
  [ 87] objcall 59 .............................. pDrawProps[#ink] = tInk
  [ 89] pushint8 1 .............................. <1>
  [ 91] pusharglistnoret 1 ...................... <1>
  [ 93] extcall 31 .............................. return 1
  [ 95] ret
end

on setModel me, tmodel
  [  0] getparam 1 .............................. <tmodel>
  [  2] setprop 1374 ............................ pmodel = tmodel
  [  5] ret
end

on setColor me, tColor
  [  0] getparam 1 .............................. <tColor>
  [  2] pusharglist 1 ........................... <tColor>
  [  4] extcall 120 ............................. <voidp(tColor)>
  [  6] jmpifz [ 14] ............................ if voidp(tColor) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 31 .............................. return 0
  [ 14] getparam 1 .............................. <tColor>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] eq ...................................... <tColor = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tColor = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 31 .............................. return 0
  [ 27] getparam 1 .............................. <tColor>
  [ 29] getobjprop 127 .......................... <tColor.ilk>
  [ 31] pushsymb 97 ............................. <#color>
  [ 33] eq ...................................... <tColor.ilk = #color>
  [ 34] getprop 1375 ............................ <pDrawProps>
  [ 37] pushsymb 93 ............................. <#ink>
  [ 39] pusharglist 2 ........................... <pDrawProps, #ink>
  [ 41] objcall 34 .............................. <pDrawProps[#ink]>
  [ 43] pushint8 36 ............................. <36>
  [ 45] nteq .................................... <pDrawProps[#ink] <> 36>
  [ 46] and ..................................... <(tColor.ilk = #color) and (pDrawProps[#ink] <> 36)>
  [ 47] jmpifz [ 64] ............................ if (tColor.ilk = #color) and (pDrawProps[#ink] <> 36) then / else
  [ 50] getprop 1375 ............................ <pDrawProps>
  [ 53] pushsymb 95 ............................. <#bgColor>
  [ 55] getparam 1 .............................. <tColor>
  [ 57] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, tColor>
  [ 59] objcall 59 .............................. pDrawProps[#bgColor] = tColor
  [ 61] jmp [ 86]
  [ 64] getprop 1375 ............................ <pDrawProps>
  [ 67] pushsymb 95 ............................. <#bgColor>
  [ 69] pushint16 255 ........................... <255>
  [ 72] pushint16 255 ........................... <255>
  [ 75] pushint16 255 ........................... <255>
  [ 78] pusharglist 3 ........................... <255, 255, 255>
  [ 80] extcall 94 .............................. <rgb(255, 255, 255)>
  [ 82] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, rgb(255, 255, 255)>
  [ 84] objcall 59 .............................. pDrawProps[#bgColor] = rgb(255, 255, 255)
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglistnoret 1 ...................... <1>
  [ 90] extcall 31 .............................. return 1
  [ 92] ret
end

on checkPartNotCarrying me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 1319 ........................... <#carrying>
  [  5] pusharglist 2 ........................... <me, #carrying>
  [  7] objcall 124 ............................. <me.getProperty(#carrying)>
  [  9] not ..................................... <not me.getProperty(#carrying)>
  [ 10] jmpifz [ 19] ............................ if not me.getProperty(#carrying) then
  [ 13] pushint8 1 .............................. <1>
  [ 15] pusharglistnoret 1 ...................... <1>
  [ 17] extcall 31 .............................. return 1
  [ 19] getprop 28 .............................. <pDirection>
  [ 21] getparam 0 .............................. <me>
  [ 23] pushsymb 1251 ........................... <#pFlipList>
  [ 26] getprop 28 .............................. <pDirection>
  [ 28] pushint8 1 .............................. <1>
  [ 30] add ..................................... <pDirection + 1>
  [ 31] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 33] objcall 68 .............................. <me.pFlipList[pDirection + 1]>
  [ 35] eq ...................................... <pDirection = me.pFlipList[pDirection + 1]>
  [ 36] jmpifz [ 53] ............................ if pDirection = me.pFlipList[pDirection + 1] then / else
  [ 39] pushcons 13 ............................. <"rh">
  [ 41] pushcons 14 ............................. <"rs">
  [ 43] pushcons 24 ............................. <"ri">
  [ 45] pusharglist 3 ........................... <["rh", "rs", "ri"]>
  [ 47] pushlist ................................ <["rh", "rs", "ri"]>
  [ 48] setlocal 0 .............................. tHandParts = ["rh", "rs", "ri"]
  [ 50] jmp [ 66]
  [ 53] pushcons 6 .............................. <"lh">
  [ 55] pushcons 7 .............................. <"ls">
  [ 57] pushcons 25 ............................. <"li">
  [ 59] pushcons 24 ............................. <"ri">
  [ 61] pusharglist 4 ........................... <["lh", "ls", "li", "ri"]>
  [ 63] pushlist ................................ <["lh", "ls", "li", "ri"]>
  [ 64] setlocal 0 .............................. tHandParts = ["lh", "ls", "li", "ri"]
  [ 66] getlocal 0 .............................. <tHandParts>
  [ 68] getprop 1334 ............................ <pPart>
  [ 71] pusharglist 2 ........................... <tHandParts, pPart>
  [ 73] objcall 332 ............................. <tHandParts.getPos(pPart)>
  [ 76] jmpifz [ 87] ............................ if tHandParts.getPos(pPart) then / else
  [ 79] pushzero ................................ <0>
  [ 80] pusharglistnoret 1 ...................... <0>
  [ 82] extcall 31 .............................. return 0
  [ 84] jmp [ 93]
  [ 87] pushint8 1 .............................. <1>
  [ 89] pusharglistnoret 1 ...................... <1>
  [ 91] extcall 31 .............................. return 1
  [ 93] ret
end

on doHandWork me, tAct
  [  0] pushcons 6 .............................. <"lh">
  [  2] pushcons 7 .............................. <"ls">
  [  4] pushcons 25 ............................. <"li">
  [  6] pushcons 13 ............................. <"rh">
  [  8] pushcons 14 ............................. <"rs">
  [ 10] pushcons 24 ............................. <"ri">
  [ 12] pusharglist 6 ........................... <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 14] pushlist ................................ <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 15] getprop 1334 ............................ <pPart>
  [ 18] pusharglist 2 ........................... <["lh", "ls", "li", "rh", "rs", "ri"], pPart>
  [ 20] objcall 330 ............................. <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart)>
  [ 23] pushzero ................................ <0>
  [ 24] nteq .................................... <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0>
  [ 25] jmpifz [ 33] ............................ if ["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0 then
  [ 28] getparam 1 .............................. <tAct>
  [ 30] setprop 1379 ............................ pAction = tAct
  [ 33] ret
end

on doHandWorkLeft me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1380 ............................ pActionLh = tAct
  [  5] ret
end

on doHandWorkRight me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1337 ............................ pActionRh = tAct
  [  5] ret
end

on layDown me
  [  0] pushcons 19 ............................. <"lay">
  [  2] setprop 1379 ............................ pAction = "lay"
  [  5] ret
end

on getCurrentMember me
  [  0] getprop 1381 ............................ <pMemString>
  [  3] pusharglistnoret 1 ...................... <pMemString>
  [  5] extcall 31 .............................. return pMemString
  [  7] ret
end

on getColor me
  [  0] getprop 1375 ............................ <pDrawProps>
  [  3] pushsymb 95 ............................. <#bgColor>
  [  5] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [  7] objcall 34 .............................. <pDrawProps[#bgColor]>
  [  9] pusharglistnoret 1 ...................... <pDrawProps[#bgColor]>
  [ 11] extcall 31 .............................. return pDrawProps[#bgColor]
  [ 13] ret
end

on getDirection me
  [  0] getprop 28 .............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 31 .............................. return pDirection
  [  6] ret
end

on getLocation me
  [  0] getprop 1381 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 120 ............................. <voidp(pMemString)>
  [  7] jmpifz [ 15] ............................ if voidp(pMemString) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 31 .............................. return 0
  [ 15] getprop 1381 ............................ <pMemString>
  [ 18] pusharglist 1 ........................... <pMemString>
  [ 20] extcall 62 .............................. <memberExists(pMemString)>
  [ 22] not ..................................... <not memberExists(pMemString)>
  [ 23] jmpifz [ 31] ............................ if not memberExists(pMemString) then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 31 .............................. return 0
  [ 31] getprop 1381 ............................ <pMemString>
  [ 34] pusharglist 1 ........................... <pMemString>
  [ 36] extcall 65 .............................. <getmemnum(pMemString)>
  [ 38] pusharglist 1 ........................... <getmemnum(pMemString)>
  [ 40] extcall 64 .............................. <member(getmemnum(pMemString))>
  [ 42] setlocal 0 .............................. tmember = member(getmemnum(pMemString))
  [ 44] getlocal 0 .............................. <tmember>
  [ 46] getobjprop 137 .......................... <tmember.rect>
  [ 48] setlocal 1 .............................. tImgRect = tmember.rect
  [ 50] getlocal 1 .............................. <tImgRect>
  [ 52] getobjprop 80 ........................... <tImgRect.width>
  [ 54] pushint8 2 .............................. <2>
  [ 56] div ..................................... <tImgRect.width / 2>
  [ 57] getlocal 1 .............................. <tImgRect>
  [ 59] getobjprop 81 ........................... <tImgRect.height>
  [ 61] pushint8 2 .............................. <2>
  [ 63] div ..................................... <tImgRect.height / 2>
  [ 64] pusharglist 2 ........................... <tImgRect.width / 2, tImgRect.height / 2>
  [ 66] extcall 375 ............................. <point(tImgRect.width / 2, tImgRect.height / 2)>
  [ 69] setlocal 2 .............................. tCntrPoint = point(tImgRect.width / 2, tImgRect.height / 2)
  [ 71] getlocal 0 .............................. <tmember>
  [ 73] getobjprop 118 .......................... <tmember.regPoint>
  [ 75] setlocal 3 .............................. tRegPoint = tmember.regPoint
  [ 77] getlocal 3 .............................. <tRegPoint>
  [ 79] inv ..................................... <-tRegPoint>
  [ 80] getlocal 2 .............................. <tCntrPoint>
  [ 82] add ..................................... <-tRegPoint + tCntrPoint>
  [ 83] pusharglistnoret 1 ...................... <-tRegPoint + tCntrPoint>
  [ 85] extcall 31 .............................. return -tRegPoint + tCntrPoint
  [ 87] ret
end

on copyPicture me, tImg, tdir, tHumanSize, tAction, tAnimFrame
  [  0] getparam 2 .............................. <tdir>
  [  2] pusharglist 1 ........................... <tdir>
  [  4] extcall 120 ............................. <voidp(tdir)>
  [  6] jmpifz [ 13] ............................ if voidp(tdir) then
  [  9] pushcons 29 ............................. <"2">
  [ 11] setparam 2 .............................. tdir = "2"
  [ 13] getparam 3 .............................. <tHumanSize>
  [ 15] pusharglist 1 ........................... <tHumanSize>
  [ 17] extcall 120 ............................. <voidp(tHumanSize)>
  [ 19] jmpifz [ 26] ............................ if voidp(tHumanSize) then
  [ 22] pushcons 30 ............................. <"h">
  [ 24] setparam 3 .............................. tHumanSize = "h"
  [ 26] getparam 4 .............................. <tAction>
  [ 28] pusharglist 1 ........................... <tAction>
  [ 30] extcall 120 ............................. <voidp(tAction)>
  [ 32] jmpifz [ 39] ............................ if voidp(tAction) then
  [ 35] pushcons 27 ............................. <"std">
  [ 37] setparam 4 .............................. tAction = "std"
  [ 39] getparam 5 .............................. <tAnimFrame>
  [ 41] pusharglist 1 ........................... <tAnimFrame>
  [ 43] extcall 120 ............................. <voidp(tAnimFrame)>
  [ 45] jmpifz [ 52] ............................ if voidp(tAnimFrame) then
  [ 48] pushcons 31 ............................. <"0">
  [ 50] setparam 5 .............................. tAnimFrame = "0"
  [ 52] getparam 3 .............................. <tHumanSize>
  [ 54] pushcons 26 ............................. <"_">
  [ 56] joinstr ................................. <tHumanSize & "_">
  [ 57] getparam 4 .............................. <tAction>
  [ 59] joinstr ................................. <tHumanSize & "_" & tAction>
  [ 60] pushcons 26 ............................. <"_">
  [ 62] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [ 63] getprop 1334 ............................ <pPart>
  [ 66] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [ 67] pushcons 26 ............................. <"_">
  [ 69] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [ 70] getprop 1374 ............................ <pmodel>
  [ 73] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel>
  [ 74] pushcons 26 ............................. <"_">
  [ 76] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_">
  [ 77] getparam 2 .............................. <tdir>
  [ 79] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir>
  [ 80] pushcons 26 ............................. <"_">
  [ 82] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [ 83] getparam 5 .............................. <tAnimFrame>
  [ 85] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame>
  [ 86] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame
  [ 88] getlocal 0 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 62 .............................. <memberExists(tMemName)>
  [ 94] jmpifz [236] ............................ if memberExists(tMemName) then
  [ 97] getlocal 0 .............................. <tMemName>
  [ 99] pusharglist 1 ........................... <tMemName>
  [101] extcall 65 .............................. <getmemnum(tMemName)>
  [103] pusharglist 1 ........................... <getmemnum(tMemName)>
  [105] extcall 64 .............................. <member(getmemnum(tMemName))>
  [107] setlocal 1 .............................. tmember = member(getmemnum(tMemName))
  [109] getlocal 1 .............................. <tmember>
  [111] getobjprop 63 ........................... <tmember.image>
  [113] setlocal 2 .............................. tImage = tmember.image
  [115] getlocal 1 .............................. <tmember>
  [117] getobjprop 118 .......................... <tmember.regPoint>
  [119] setlocal 3 .............................. tRegPnt = tmember.regPoint
  [121] getlocal 3 .............................. <tRegPnt>
  [123] pushint8 1 .............................. <1>
  [125] pusharglist 2 ........................... <tRegPnt, 1>
  [127] objcall 34 .............................. <tRegPnt[1]>
  [129] inv ..................................... <-tRegPnt[1]>
  [130] setlocal 4 .............................. tX = -tRegPnt[1]
  [132] getparam 1 .............................. <tImg>
  [134] getchainedprop 137 ...................... <tImg.rect>
  [136] getobjprop 81 ........................... <tImg.rect.height>
  [138] getlocal 3 .............................. <tRegPnt>
  [140] pushint8 2 .............................. <2>
  [142] pusharglist 2 ........................... <tRegPnt, 2>
  [144] objcall 34 .............................. <tRegPnt[2]>
  [146] sub ..................................... <tImg.rect.height - tRegPnt[2]>
  [147] pushint8 10 ............................. <10>
  [149] sub ..................................... <tImg.rect.height - tRegPnt[2] - 10>
  [150] setlocal 5 .............................. tY = tImg.rect.height - tRegPnt[2] - 10
  [152] getlocal 4 .............................. <tX>
  [154] getlocal 5 .............................. <tY>
  [156] getlocal 4 .............................. <tX>
  [158] getlocal 2 .............................. <tImage>
  [160] getobjprop 80 ........................... <tImage.width>
  [162] add ..................................... <tX + tImage.width>
  [163] getlocal 5 .............................. <tY>
  [165] getlocal 2 .............................. <tImage>
  [167] getobjprop 81 ........................... <tImage.height>
  [169] add ..................................... <tY + tImage.height>
  [170] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [172] extcall 137 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [174] setlocal 6 .............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [176] getlocal 2 .............................. <tImage>
  [178] pusharglist 1 ........................... <tImage>
  [180] objcall 1201 ............................ <tImage.createMatte()>
  [183] setlocal 7 .............................. tMatte = tImage.createMatte()
  [185] getparam 1 .............................. <tImg>
  [187] getlocal 2 .............................. <tImage>
  [189] getlocal 6 .............................. <tRect>
  [191] getlocal 2 .............................. <tImage>
  [193] getobjprop 137 .......................... <tImage.rect>
  [195] pushsymb 1200 ........................... <#maskImage>
  [198] getlocal 7 .............................. <tMatte>
  [200] pushsymb 93 ............................. <#ink>
  [202] getprop 1375 ............................ <pDrawProps>
  [205] pushsymb 93 ............................. <#ink>
  [207] pusharglist 2 ........................... <pDrawProps, #ink>
  [209] objcall 34 .............................. <pDrawProps[#ink]>
  [211] pushsymb 95 ............................. <#bgColor>
  [213] getprop 1375 ............................ <pDrawProps>
  [216] pushsymb 95 ............................. <#bgColor>
  [218] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [220] objcall 34 .............................. <pDrawProps[#bgColor]>
  [222] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [224] pushproplist ............................ <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [225] pusharglistnoret 5 ...................... <tImg, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [227] objcall 400 ............................. tImg.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]])
  [230] pushint8 1 .............................. <1>
  [232] pusharglistnoret 1 ...................... <1>
  [234] extcall 31 .............................. return 1
  [236] pushzero ................................ <0>
  [237] pusharglistnoret 1 ...................... <0>
  [239] extcall 31 .............................. return 0
  [241] ret
end

on reset me
  [  0] pushcons 27 ............................. <"std">
  [  2] setprop 1379 ............................ pAction = "std"
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 30 .............................. <VOID>
  [  9] setprop 1380 ............................ pActionLh = VOID
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 30 .............................. <VOID>
  [ 16] setprop 1337 ............................ pActionRh = VOID
  [ 19] ret
end

on skipAnimationFrame me
  [  0] getprop 1387 ............................ <pAnimFrame>
  [  3] pushint8 1 .............................. <1>
  [  5] add ..................................... <pAnimFrame + 1>
  [  6] setprop 1387 ............................ pAnimFrame = pAnimFrame + 1
  [  9] getprop 1387 ............................ <pAnimFrame>
  [ 12] getprop 1388 ............................ <pTotalFrame>
  [ 15] gt ...................................... <pAnimFrame > pTotalFrame>
  [ 16] jmpifz [ 24] ............................ if pAnimFrame > pTotalFrame then
  [ 19] pushint8 1 .............................. <1>
  [ 21] setprop 1387 ............................ pAnimFrame = 1
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 31 .............................. return 1
  [ 30] ret
end

on setAnimation me, tPart, tAnim
  [  0] getparam 1 .............................. <tPart>
  [  2] getprop 1334 ............................ <pPart>
  [  5] nteq .................................... <tPart <> pPart>
  [  6] jmpifz [ 13] ............................ if tPart <> pPart then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 31 .............................. return 
  [ 13] getparam 2 .............................. <tAnim>
  [ 15] pusharglist 1 ........................... <tAnim>
  [ 17] extcall 480 ............................. <value(tAnim)>
  [ 20] setprop 1386 ............................ pAnimation = value(tAnim)
  [ 23] getprop 1386 ............................ <pAnimation>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pAnimation, 1>
  [ 30] objcall 34 .............................. <pAnimation[1]>
  [ 32] getobjprop 33 ........................... <pAnimation[1].count>
  [ 34] setprop 1388 ............................ pTotalFrame = pAnimation[1].count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setprop 1387 ............................ pAnimFrame = 1
  [ 42] ret
end

on remAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1386 ............................ pAnimation = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 1387 ............................ pAnimFrame = 1
  [  9] pushint8 1 .............................. <1>
  [ 11] setprop 1388 ............................ pTotalFrame = 1
  [ 14] ret
end

on animate me
  [  0] getprop 1334 ............................ <pPart>
  [  3] pushcons 24 ............................. <"ri">
  [  5] eq ...................................... <pPart = "ri">
  [  6] jmpifz [ 54] ............................ if pPart = "ri" then
  [  9] getprop 1377 ............................ <pCacheRectA>
  [ 12] getobjprop 80 ........................... <pCacheRectA.width>
  [ 14] pushzero ................................ <0>
  [ 15] gt ...................................... <pCacheRectA.width > 0>
  [ 16] jmpifz [ 48] ............................ if pCacheRectA.width > 0 then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 0 .............................. <me>
  [ 23] getobjprop 1253 ......................... <me.pUpdateRect>
  [ 26] getprop 1377 ............................ <pCacheRectA>
  [ 29] pusharglist 2 ........................... <me.pUpdateRect, pCacheRectA>
  [ 31] extcall 1390 ............................ <union(me.pUpdateRect, pCacheRectA)>
  [ 34] setobjprop 1253 ......................... me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [ 37] pushzero ................................ <0>
  [ 38] pushzero ................................ <0>
  [ 39] pushzero ................................ <0>
  [ 40] pushzero ................................ <0>
  [ 41] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 43] extcall 137 ............................. <rect(0, 0, 0, 0)>
  [ 45] setprop 1377 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 48] pushcons 0 .............................. <EMPTY>
  [ 50] pusharglistnoret 1 ...................... <EMPTY>
  [ 52] extcall 31 .............................. return EMPTY
  [ 54] getprop 1386 ............................ <pAnimation>
  [ 57] not ..................................... <not pAnimation>
  [ 58] jmpifz [ 67] ............................ if not pAnimation then
  [ 61] pushcons 0 .............................. <EMPTY>
  [ 63] pusharglistnoret 1 ...................... <EMPTY>
  [ 65] extcall 31 .............................. return EMPTY
  [ 67] getprop 28 .............................. <pDirection>
  [ 69] getprop 1386 ............................ <pAnimation>
  [ 72] pushsymb 1407 ........................... <#OffD>
  [ 75] pusharglist 2 ........................... <pAnimation, #OffD>
  [ 77] objcall 34 .............................. <pAnimation[#OffD]>
  [ 79] getprop 1387 ............................ <pAnimFrame>
  [ 82] pusharglist 2 ........................... <pAnimation[#OffD], pAnimFrame>
  [ 84] objcall 34 .............................. <pAnimation[#OffD][pAnimFrame]>
  [ 86] add ..................................... <pDirection + pAnimation[#OffD][pAnimFrame]>
  [ 87] setlocal 0 .............................. tdir = pDirection + pAnimation[#OffD][pAnimFrame]
  [ 89] getlocal 0 .............................. <tdir>
  [ 91] pushint8 7 .............................. <7>
  [ 93] gt ...................................... <tdir > 7>
  [ 94] jmpifz [114] ............................ if tdir > 7 then / else
  [ 97] getlocal 0 .............................. <tdir>
  [ 99] pushint8 8 .............................. <8>
  [101] sub ..................................... <tdir - 8>
  [102] pushint8 7 .............................. <7>
  [104] pusharglist 2 ........................... <tdir - 8, 7>
  [106] extcall 1408 ............................ <min(tdir - 8, 7)>
  [109] setlocal 0 .............................. tdir = min(tdir - 8, 7)
  [111] jmp [137]
  [114] getlocal 0 .............................. <tdir>
  [116] pushzero ................................ <0>
  [117] lt ...................................... <tdir < 0>
  [118] jmpifz [137] ............................ if tdir < 0 then
  [121] pushint8 7 .............................. <7>
  [123] getlocal 0 .............................. <tdir>
  [125] add ..................................... <7 + tdir>
  [126] pushint8 1 .............................. <1>
  [128] add ..................................... <7 + tdir + 1>
  [129] pushzero ................................ <0>
  [130] pusharglist 2 ........................... <7 + tdir + 1, 0>
  [132] extcall 1409 ............................ <max(7 + tdir + 1, 0)>
  [135] setlocal 0 .............................. tdir = max(7 + tdir + 1, 0)
  [137] pushcons 17 ............................. <"hd">
  [139] pushcons 18 ............................. <"fc">
  [141] pushcons 22 ............................. <"ey">
  [143] pushcons 23 ............................. <"hr">
  [145] pusharglist 4 ........................... <["hd", "fc", "ey", "hr"]>
  [147] pushlist ................................ <["hd", "fc", "ey", "hr"]>
  [148] getprop 1334 ............................ <pPart>
  [151] pusharglist 2 ........................... <["hd", "fc", "ey", "hr"], pPart>
  [153] objcall 330 ............................. <["hd", "fc", "ey", "hr"].getOne(pPart)>
  [156] pushzero ................................ <0>
  [157] nteq .................................... <["hd", "fc", "ey", "hr"].getOne(pPart) <> 0>
  [158] jmpifz [201] ............................ if ["hd", "fc", "ey", "hr"].getOne(pPart) <> 0 then / else
  [161] getlocal 0 .............................. <tdir>
  [163] pushint8 4 .............................. <4>
  [165] eq ...................................... <tdir = 4>
  [166] getprop 28 .............................. <pDirection>
  [168] pushint8 3 .............................. <3>
  [170] eq ...................................... <pDirection = 3>
  [171] and ..................................... <(tdir = 4) and (pDirection = 3)>
  [172] getlocal 0 .............................. <tdir>
  [174] pushzero ................................ <0>
  [175] eq ...................................... <tdir = 0>
  [176] getprop 28 .............................. <pDirection>
  [178] pushint8 7 .............................. <7>
  [180] eq ...................................... <pDirection = 7>
  [181] and ..................................... <(tdir = 0) and (pDirection = 7)>
  [182] or ...................................... <((tdir = 4) and (pDirection = 3)) or ((tdir = 0) and (pDirection = 7))>
  [183] jmpifz [194] ............................ if ((tdir = 4) and (pDirection = 3)) or ((tdir = 0) and (pDirection = 7)) then / else
  [186] pushint8 1 .............................. <1>
  [188] setprop 1384 ............................ pFlipH = 1
  [191] jmp [198]
  [194] pushzero ................................ <0>
  [195] setprop 1384 ............................ pFlipH = 0
  [198] jmp [205]
  [201] pushzero ................................ <0>
  [202] setprop 1384 ............................ pFlipH = 0
  [205] getparam 0 .............................. <me>
  [207] pushsymb 1251 ........................... <#pFlipList>
  [210] getlocal 0 .............................. <tdir>
  [212] pushint8 1 .............................. <1>
  [214] add ..................................... <tdir + 1>
  [215] pusharglist 3 ........................... <me, #pFlipList, tdir + 1>
  [217] objcall 68 .............................. <me.pFlipList[tdir + 1]>
  [219] setlocal 0 .............................. tdir = me.pFlipList[tdir + 1]
  [221] getprop 1386 ............................ <pAnimation>
  [224] pushsymb 1410 ........................... <#OffX>
  [227] pusharglist 2 ........................... <pAnimation, #OffX>
  [229] objcall 34 .............................. <pAnimation[#OffX]>
  [231] getprop 1387 ............................ <pAnimFrame>
  [234] pusharglist 2 ........................... <pAnimation[#OffX], pAnimFrame>
  [236] objcall 34 .............................. <pAnimation[#OffX][pAnimFrame]>
  [238] setprop 1382 ............................ pXFix = pAnimation[#OffX][pAnimFrame]
  [241] getprop 1386 ............................ <pAnimation>
  [244] pushsymb 1411 ........................... <#OffY>
  [247] pusharglist 2 ........................... <pAnimation, #OffY>
  [249] objcall 34 .............................. <pAnimation[#OffY]>
  [251] getprop 1387 ............................ <pAnimFrame>
  [254] pusharglist 2 ........................... <pAnimation[#OffY], pAnimFrame>
  [256] objcall 34 .............................. <pAnimation[#OffY][pAnimFrame]>
  [258] setprop 1383 ............................ pYFix = pAnimation[#OffY][pAnimFrame]
  [261] getparam 0 .............................. <me>
  [263] getobjprop 1295 ......................... <me.pPeopleSize>
  [266] pushcons 26 ............................. <"_">
  [268] joinstr ................................. <me.pPeopleSize & "_">
  [269] getprop 1386 ............................ <pAnimation>
  [272] pushsymb 1412 ........................... <#act>
  [275] pusharglist 2 ........................... <pAnimation, #act>
  [277] objcall 34 .............................. <pAnimation[#act]>
  [279] getprop 1387 ............................ <pAnimFrame>
  [282] pusharglist 2 ........................... <pAnimation[#act], pAnimFrame>
  [284] objcall 34 .............................. <pAnimation[#act][pAnimFrame]>
  [286] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame]>
  [287] pushcons 26 ............................. <"_">
  [289] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_">
  [290] getprop 1334 ............................ <pPart>
  [293] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart>
  [294] pushcons 26 ............................. <"_">
  [296] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_">
  [297] getprop 1374 ............................ <pmodel>
  [300] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel>
  [301] pushcons 26 ............................. <"_">
  [303] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_">
  [304] getlocal 0 .............................. <tdir>
  [306] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir>
  [307] pushcons 26 ............................. <"_">
  [309] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [310] getprop 1386 ............................ <pAnimation>
  [313] pushsymb 1413 ........................... <#frm>
  [316] pusharglist 2 ........................... <pAnimation, #frm>
  [318] objcall 34 .............................. <pAnimation[#frm]>
  [320] getprop 1387 ............................ <pAnimFrame>
  [323] pusharglist 2 ........................... <pAnimation[#frm], pAnimFrame>
  [325] objcall 34 .............................. <pAnimation[#frm][pAnimFrame]>
  [327] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]>
  [328] setlocal 1 .............................. tMemName = me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]
  [330] getprop 1387 ............................ <pAnimFrame>
  [333] pushint8 1 .............................. <1>
  [335] add ..................................... <pAnimFrame + 1>
  [336] setprop 1387 ............................ pAnimFrame = pAnimFrame + 1
  [339] getprop 1387 ............................ <pAnimFrame>
  [342] getprop 1388 ............................ <pTotalFrame>
  [345] gt ...................................... <pAnimFrame > pTotalFrame>
  [346] jmpifz [354] ............................ if pAnimFrame > pTotalFrame then
  [349] pushint8 1 .............................. <1>
  [351] setprop 1387 ............................ pAnimFrame = 1
  [354] getlocal 1 .............................. <tMemName>
  [356] pusharglistnoret 1 ...................... <tMemName>
  [358] extcall 31 .............................. return tMemName
  [360] ret
end

on flipHorizontal me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] getobjprop 80 ........................... <tImg.width>
  [  4] getparam 1 .............................. <tImg>
  [  6] getobjprop 81 ........................... <tImg.height>
  [  8] getparam 1 .............................. <tImg>
  [ 10] getobjprop 1191 ......................... <tImg.depth>
  [ 13] pusharglist 3 ........................... <tImg.width, tImg.height, tImg.depth>
  [ 15] extcall 63 .............................. <image(tImg.width, tImg.height, tImg.depth)>
  [ 17] setlocal 0 .............................. tImage = image(tImg.width, tImg.height, tImg.depth)
  [ 19] getparam 1 .............................. <tImg>
  [ 21] getobjprop 80 ........................... <tImg.width>
  [ 23] pushzero ................................ <0>
  [ 24] pusharglist 2 ........................... <tImg.width, 0>
  [ 26] extcall 375 ............................. <point(tImg.width, 0)>
  [ 29] pushzero ................................ <0>
  [ 30] pushzero ................................ <0>
  [ 31] pusharglist 2 ........................... <0, 0>
  [ 33] extcall 375 ............................. <point(0, 0)>
  [ 36] pushzero ................................ <0>
  [ 37] getparam 1 .............................. <tImg>
  [ 39] getobjprop 81 ........................... <tImg.height>
  [ 41] pusharglist 2 ........................... <0, tImg.height>
  [ 43] extcall 375 ............................. <point(0, tImg.height)>
  [ 46] getparam 1 .............................. <tImg>
  [ 48] getobjprop 80 ........................... <tImg.width>
  [ 50] getparam 1 .............................. <tImg>
  [ 52] getobjprop 81 ........................... <tImg.height>
  [ 54] pusharglist 2 ........................... <tImg.width, tImg.height>
  [ 56] extcall 375 ............................. <point(tImg.width, tImg.height)>
  [ 59] pusharglist 4 ........................... <[point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]>
  [ 61] pushlist ................................ <[point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]>
  [ 62] setlocal 1 .............................. tQuad = [point(tImg.width, 0), point(0, 0), point(0, tImg.height), point(tImg.width, tImg.height)]
  [ 64] getlocal 0 .............................. <tImage>
  [ 66] getparam 1 .............................. <tImg>
  [ 68] getlocal 1 .............................. <tQuad>
  [ 70] getparam 1 .............................. <tImg>
  [ 72] getobjprop 137 .......................... <tImg.rect>
  [ 74] pusharglistnoret 4 ...................... <tImage, tImg, tQuad, tImg.rect>
  [ 76] objcall 400 ............................. tImage.copyPixels(tImg, tQuad, tImg.rect)
  [ 79] getlocal 0 .............................. <tImage>
  [ 81] pusharglistnoret 1 ...................... <tImage>
  [ 83] extcall 31 .............................. return tImage
  [ 85] ret
end
