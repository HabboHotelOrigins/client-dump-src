property pInfoConnID, pRoomConnID, pRoomId, pReportRoomId, pActiveFlag, pProcessList, pChatProps, pDefaultChatMode, pSaveData, pCacheKey, pCacheFlag, pUserObjList, pActiveObjList, pPassiveObjList, pItemObjList, pBalloonId, pClassContId, pRoomPrgID, pRoomPollerID, pTrgDoorID, pAdSystemID, pFurniChooserID, pInterstitialSystemID, pSpectatorSystemID, pHeightMapData, pCurrentSlidingObjects, pPickedCryName, pCastLoaded, pEnterRoomAlert, pShadowManagerID, pPrvRoomsReady

on construct me
  [  0] pushcons 0 .............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 80 .............................. <getVariable("connection.info.id")>
  [  6] setprop 79 .............................. pInfoConnID = getVariable("connection.info.id")
  [  8] pushcons 1 .............................. <"connection.room.id">
  [ 10] pusharglist 1 ........................... <"connection.room.id">
  [ 12] extcall 80 .............................. <getVariable("connection.room.id")>
  [ 14] setprop 81 .............................. pRoomConnID = getVariable("connection.room.id")
  [ 16] pushcons 2 .............................. <EMPTY>
  [ 18] setprop 524 ............................. pRoomId = EMPTY
  [ 21] pushzero ................................ <0>
  [ 22] setprop 525 ............................. pActiveFlag = 0
  [ 25] pusharglist 0 ........................... <[:]>
  [ 27] pushproplist ............................ <[:]>
  [ 28] setprop 526 ............................. pProcessList = [:]
  [ 31] pusharglist 0 ........................... <>
  [ 33] extcall 120 ............................. <VOID>
  [ 35] setprop 186 ............................. pSaveData = VOID
  [ 37] pushcons 2 .............................. <EMPTY>
  [ 39] setprop 527 ............................. pCacheKey = EMPTY
  [ 42] pushcons 3 .............................. <"room.map.cache">
  [ 44] pushzero ................................ <0>
  [ 45] pusharglist 2 ........................... <"room.map.cache", 0>
  [ 47] extcall 108 ............................. <getVariableValue("room.map.cache", 0)>
  [ 49] setprop 528 ............................. pCacheFlag = getVariableValue("room.map.cache", 0)
  [ 52] pusharglist 0 ........................... <>
  [ 54] extcall 120 ............................. <VOID>
  [ 56] setprop 529 ............................. pTrgDoorID = VOID
  [ 59] pushcons 2 .............................. <EMPTY>
  [ 61] setprop 530 ............................. pPickedCryName = EMPTY
  [ 64] pusharglist 0 ........................... <[:]>
  [ 66] pushproplist ............................ <[:]>
  [ 67] setprop 531 ............................. pUserObjList = [:]
  [ 70] pusharglist 0 ........................... <[:]>
  [ 72] pushproplist ............................ <[:]>
  [ 73] setprop 532 ............................. pActiveObjList = [:]
  [ 76] pusharglist 0 ........................... <[:]>
  [ 78] pushproplist ............................ <[:]>
  [ 79] setprop 533 ............................. pPassiveObjList = [:]
  [ 82] pusharglist 0 ........................... <[:]>
  [ 84] pushproplist ............................ <[:]>
  [ 85] setprop 534 ............................. pItemObjList = [:]
  [ 88] pushcons 4 .............................. <"Room Balloon">
  [ 90] setprop 535 ............................. pBalloonId = "Room Balloon"
  [ 93] pushcons 5 .............................. <"Room Classes">
  [ 95] setprop 536 ............................. pClassContId = "Room Classes"
  [ 98] pushcons 6 .............................. <"Room Program">
  [100] setprop 537 ............................. pRoomPrgID = "Room Program"
  [103] pushcons 7 .............................. <"Room Poller">
  [105] setprop 538 ............................. pRoomPollerID = "Room Poller"
  [108] pushcons 8 .............................. <"Room ad">
  [110] setprop 539 ............................. pAdSystemID = "Room ad"
  [113] pushcons 9 .............................. <"Interstitial system">
  [115] setprop 540 ............................. pInterstitialSystemID = "Interstitial system"
  [118] pushcons 10 ............................. <"Room Mode Manager">
  [120] setprop 541 ............................. pSpectatorSystemID = "Room Mode Manager"
  [123] pushcons 11 ............................. <"Furniture Chooser">
  [125] setprop 542 ............................. pFurniChooserID = "Furniture Chooser"
  [128] pushcons 12 ............................. <"Room Shadow Manager">
  [130] setprop 543 ............................. pShadowManagerID = "Room Shadow Manager"
  [133] pusharglist 0 ........................... <[:]>
  [135] pushproplist ............................ <[:]>
  [136] setprop 544 ............................. pChatProps = [:]
  [139] getprop 544 ............................. <pChatProps>
  [142] pushcons 13 ............................. <"returnCount">
  [144] pushzero ................................ <0>
  [145] pusharglistnoret 3 ...................... <pChatProps, "returnCount", 0>
  [147] objcall 136 ............................. pChatProps["returnCount"] = 0
  [149] getprop 544 ............................. <pChatProps>
  [152] pushcons 14 ............................. <"timerStart">
  [154] pushzero ................................ <0>
  [155] pusharglistnoret 3 ...................... <pChatProps, "timerStart", 0>
  [157] objcall 136 ............................. pChatProps["timerStart"] = 0
  [159] getprop 544 ............................. <pChatProps>
  [162] pushcons 15 ............................. <"timerDelay">
  [164] pushzero ................................ <0>
  [165] pusharglistnoret 3 ...................... <pChatProps, "timerDelay", 0>
  [167] objcall 136 ............................. pChatProps["timerDelay"] = 0
  [169] getprop 544 ............................. <pChatProps>
  [172] pushcons 16 ............................. <"mode">
  [174] pushcons 17 ............................. <"CHAT">
  [176] pusharglistnoret 3 ...................... <pChatProps, "mode", "CHAT">
  [178] objcall 136 ............................. pChatProps["mode"] = "CHAT"
  [180] getprop 544 ............................. <pChatProps>
  [183] pushcons 18 ............................. <"hobbaCmds">
  [185] pushcons 19 ............................. <"moderator.cmds">
  [187] pusharglist 1 ........................... <"moderator.cmds">
  [189] extcall 108 ............................. <getVariableValue("moderator.cmds")>
  [191] pusharglistnoret 3 ...................... <pChatProps, "hobbaCmds", getVariableValue("moderator.cmds")>
  [193] objcall 136 ............................. pChatProps["hobbaCmds"] = getVariableValue("moderator.cmds")
  [195] getprop 536 ............................. <pClassContId>
  [198] pushcons 20 ............................. <"variable.manager.class">
  [200] pusharglist 1 ........................... <"variable.manager.class">
  [202] extcall 545 ............................. <getClassVariable("variable.manager.class")>
  [205] pusharglistnoret 2 ...................... <pClassContId, getClassVariable("variable.manager.class")>
  [207] extcall 109 ............................. createObject(pClassContId, getClassVariable("variable.manager.class"))
  [209] getprop 536 ............................. <pClassContId>
  [212] pusharglist 1 ........................... <pClassContId>
  [214] extcall 112 ............................. <getObject(pClassContId)>
  [216] pushcons 21 ............................. <"fuse.object.classes">
  [218] pushcons 22 ............................. <RETURN>
  [220] pusharglistnoret 3 ...................... <getObject(pClassContId), "fuse.object.classes", RETURN>
  [222] objcall 546 ............................. getObject(pClassContId).dump("fuse.object.classes", RETURN)
  [225] getprop 535 ............................. <pBalloonId>
  [228] pushcons 23 ............................. <"Balloon Manager">
  [230] pusharglistnoret 2 ...................... <pBalloonId, "Balloon Manager">
  [232] extcall 109 ............................. createObject(pBalloonId, "Balloon Manager")
  [234] getprop 539 ............................. <pAdSystemID>
  [237] pushcons 24 ............................. <"Ad Manager">
  [239] pusharglistnoret 2 ...................... <pAdSystemID, "Ad Manager">
  [241] extcall 109 ............................. createObject(pAdSystemID, "Ad Manager")
  [243] pushzero ................................ <0>
  [244] setprop 547 ............................. pCastLoaded = 0
  [247] pushzero ................................ <0>
  [248] setprop 548 ............................. pPrvRoomsReady = 0
  [251] getprop 540 ............................. <pInterstitialSystemID>
  [254] pushcons 25 ............................. <"Interstitial Manager">
  [256] pusharglistnoret 2 ...................... <pInterstitialSystemID, "Interstitial Manager">
  [258] extcall 109 ............................. createObject(pInterstitialSystemID, "Interstitial Manager")
  [260] getprop 541 ............................. <pSpectatorSystemID>
  [263] pushcons 26 ............................. <"Spectator System Class">
  [265] pusharglistnoret 2 ...................... <pSpectatorSystemID, "Spectator System Class">
  [267] extcall 109 ............................. createObject(pSpectatorSystemID, "Spectator System Class")
  [269] pusharglist 0 ........................... <[:]>
  [271] pushproplist ............................ <[:]>
  [272] setprop 549 ............................. pCurrentSlidingObjects = [:]
  [275] getprop 543 ............................. <pShadowManagerID>
  [278] pushcons 27 ............................. <"Shadow Manager">
  [280] pusharglistnoret 2 ...................... <pShadowManagerID, "Shadow Manager">
  [282] extcall 109 ............................. createObject(pShadowManagerID, "Shadow Manager")
  [284] pushsymb 499 ............................ <#pickAndGoCFH>
  [287] getparam 0 .............................. <me>
  [289] pusharglist 1 ........................... <me>
  [291] objcall 115 ............................. <me.getID()>
  [293] pushsymb 499 ............................ <#pickAndGoCFH>
  [296] pusharglistnoret 3 ...................... <#pickAndGoCFH, me.getID(), #pickAndGoCFH>
  [298] extcall 114 ............................. registerMessage(#pickAndGoCFH, me.getID(), #pickAndGoCFH)
  [300] pushsymb 479 ............................ <#enterRoom>
  [303] getparam 0 .............................. <me>
  [305] pusharglist 1 ........................... <me>
  [307] objcall 115 ............................. <me.getID()>
  [309] pushsymb 479 ............................ <#enterRoom>
  [312] pusharglistnoret 3 ...................... <#enterRoom, me.getID(), #enterRoom>
  [314] extcall 114 ............................. registerMessage(#enterRoom, me.getID(), #enterRoom)
  [316] pushsymb 462 ............................ <#leaveRoom>
  [319] getparam 0 .............................. <me>
  [321] pusharglist 1 ........................... <me>
  [323] objcall 115 ............................. <me.getID()>
  [325] pushsymb 462 ............................ <#leaveRoom>
  [328] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #leaveRoom>
  [330] extcall 114 ............................. registerMessage(#leaveRoom, me.getID(), #leaveRoom)
  [332] pushsymb 550 ............................ <#changeRoom>
  [335] getparam 0 .............................. <me>
  [337] pusharglist 1 ........................... <me>
  [339] objcall 115 ............................. <me.getID()>
  [341] pushsymb 462 ............................ <#leaveRoom>
  [344] pusharglistnoret 3 ...................... <#changeRoom, me.getID(), #leaveRoom>
  [346] extcall 114 ............................. registerMessage(#changeRoom, me.getID(), #leaveRoom)
  [348] pushsymb 481 ............................ <#enterRoomDirect>
  [351] getparam 0 .............................. <me>
  [353] pusharglist 1 ........................... <me>
  [355] objcall 115 ............................. <me.getID()>
  [357] pushsymb 481 ............................ <#enterRoomDirect>
  [360] pusharglistnoret 3 ...................... <#enterRoomDirect, me.getID(), #enterRoomDirect>
  [362] extcall 114 ............................. registerMessage(#enterRoomDirect, me.getID(), #enterRoomDirect)
  [364] pushsymb 520 ............................ <#setEnterRoomAlert>
  [367] getparam 0 .............................. <me>
  [369] pusharglist 1 ........................... <me>
  [371] objcall 115 ............................. <me.getID()>
  [373] pushsymb 520 ............................ <#setEnterRoomAlert>
  [376] pusharglistnoret 3 ...................... <#setEnterRoomAlert, me.getID(), #setEnterRoomAlert>
  [378] extcall 114 ............................. registerMessage(#setEnterRoomAlert, me.getID(), #setEnterRoomAlert)
  [380] pushsymb 461 ............................ <#removeEnterRoomAlert>
  [383] getparam 0 .............................. <me>
  [385] pusharglist 1 ........................... <me>
  [387] objcall 115 ............................. <me.getID()>
  [389] pushsymb 461 ............................ <#removeEnterRoomAlert>
  [392] pusharglistnoret 3 ...................... <#removeEnterRoomAlert, me.getID(), #removeEnterRoomAlert>
  [394] extcall 114 ............................. registerMessage(#removeEnterRoomAlert, me.getID(), #removeEnterRoomAlert)
  [396] pushint8 1 .............................. <1>
  [398] pusharglistnoret 1 ...................... <1>
  [400] extcall 116 ............................. return 1
  [402] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 115 ............................. <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 165 ............................. removeUpdate(me.getID())
  [ 10] pushsymb 479 ............................ <#enterRoom>
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglist 1 ........................... <me>
  [ 17] objcall 115 ............................. <me.getID()>
  [ 19] pusharglistnoret 2 ...................... <#enterRoom, me.getID()>
  [ 21] extcall 119 ............................. unregisterMessage(#enterRoom, me.getID())
  [ 23] pushsymb 462 ............................ <#leaveRoom>
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 115 ............................. <me.getID()>
  [ 32] pusharglistnoret 2 ...................... <#leaveRoom, me.getID()>
  [ 34] extcall 119 ............................. unregisterMessage(#leaveRoom, me.getID())
  [ 36] pushsymb 550 ............................ <#changeRoom>
  [ 39] getparam 0 .............................. <me>
  [ 41] pusharglist 1 ........................... <me>
  [ 43] objcall 115 ............................. <me.getID()>
  [ 45] pusharglistnoret 2 ...................... <#changeRoom, me.getID()>
  [ 47] extcall 119 ............................. unregisterMessage(#changeRoom, me.getID())
  [ 49] pushsymb 481 ............................ <#enterRoomDirect>
  [ 52] getparam 0 .............................. <me>
  [ 54] pusharglist 1 ........................... <me>
  [ 56] objcall 115 ............................. <me.getID()>
  [ 58] pusharglistnoret 2 ...................... <#enterRoomDirect, me.getID()>
  [ 60] extcall 119 ............................. unregisterMessage(#enterRoomDirect, me.getID())
  [ 62] getprop 81 .............................. <pRoomConnID>
  [ 64] pusharglistnoret 1 ...................... <pRoomConnID>
  [ 66] extcall 551 ............................. removeConnection(pRoomConnID)
  [ 69] getprop 531 ............................. <pUserObjList>
  [ 72] pusharglist 1 ........................... <pUserObjList>
  [ 74] extcall 258 ............................. <listp(pUserObjList)>
  [ 77] jmpifz [ 89] ............................ if listp(pUserObjList) then
  [ 80] pushsymb 2 .............................. <#deconstruct>
  [ 82] getprop 531 ............................. <pUserObjList>
  [ 85] pusharglistnoret 2 ...................... <#deconstruct, pUserObjList>
  [ 87] extcall 142 ............................. call(#deconstruct, pUserObjList)
  [ 89] getprop 532 ............................. <pActiveObjList>
  [ 92] pusharglist 1 ........................... <pActiveObjList>
  [ 94] extcall 258 ............................. <listp(pActiveObjList)>
  [ 97] jmpifz [109] ............................ if listp(pActiveObjList) then
  [100] pushsymb 2 .............................. <#deconstruct>
  [102] getprop 532 ............................. <pActiveObjList>
  [105] pusharglistnoret 2 ...................... <#deconstruct, pActiveObjList>
  [107] extcall 142 ............................. call(#deconstruct, pActiveObjList)
  [109] getprop 533 ............................. <pPassiveObjList>
  [112] pusharglist 1 ........................... <pPassiveObjList>
  [114] extcall 258 ............................. <listp(pPassiveObjList)>
  [117] jmpifz [129] ............................ if listp(pPassiveObjList) then
  [120] pushsymb 2 .............................. <#deconstruct>
  [122] getprop 533 ............................. <pPassiveObjList>
  [125] pusharglistnoret 2 ...................... <#deconstruct, pPassiveObjList>
  [127] extcall 142 ............................. call(#deconstruct, pPassiveObjList)
  [129] getprop 534 ............................. <pItemObjList>
  [132] pusharglist 1 ........................... <pItemObjList>
  [134] extcall 258 ............................. <listp(pItemObjList)>
  [137] jmpifz [149] ............................ if listp(pItemObjList) then
  [140] pushsymb 2 .............................. <#deconstruct>
  [142] getprop 534 ............................. <pItemObjList>
  [145] pusharglistnoret 2 ...................... <#deconstruct, pItemObjList>
  [147] extcall 142 ............................. call(#deconstruct, pItemObjList)
  [149] getprop 535 ............................. <pBalloonId>
  [152] pusharglist 1 ........................... <pBalloonId>
  [154] extcall 268 ............................. <objectExists(pBalloonId)>
  [157] jmpifz [167] ............................ if objectExists(pBalloonId) then
  [160] getprop 535 ............................. <pBalloonId>
  [163] pusharglistnoret 1 ...................... <pBalloonId>
  [165] extcall 121 ............................. removeObject(pBalloonId)
  [167] getprop 536 ............................. <pClassContId>
  [170] pusharglist 1 ........................... <pClassContId>
  [172] extcall 268 ............................. <objectExists(pClassContId)>
  [175] jmpifz [185] ............................ if objectExists(pClassContId) then
  [178] getprop 536 ............................. <pClassContId>
  [181] pusharglistnoret 1 ...................... <pClassContId>
  [183] extcall 121 ............................. removeObject(pClassContId)
  [185] getprop 537 ............................. <pRoomPrgID>
  [188] pusharglist 1 ........................... <pRoomPrgID>
  [190] extcall 268 ............................. <objectExists(pRoomPrgID)>
  [193] jmpifz [203] ............................ if objectExists(pRoomPrgID) then
  [196] getprop 537 ............................. <pRoomPrgID>
  [199] pusharglistnoret 1 ...................... <pRoomPrgID>
  [201] extcall 121 ............................. removeObject(pRoomPrgID)
  [203] getprop 539 ............................. <pAdSystemID>
  [206] pusharglist 1 ........................... <pAdSystemID>
  [208] extcall 268 ............................. <objectExists(pAdSystemID)>
  [211] jmpifz [221] ............................ if objectExists(pAdSystemID) then
  [214] getprop 539 ............................. <pAdSystemID>
  [217] pusharglistnoret 1 ...................... <pAdSystemID>
  [219] extcall 121 ............................. removeObject(pAdSystemID)
  [221] getprop 540 ............................. <pInterstitialSystemID>
  [224] pusharglist 1 ........................... <pInterstitialSystemID>
  [226] extcall 268 ............................. <objectExists(pInterstitialSystemID)>
  [229] jmpifz [239] ............................ if objectExists(pInterstitialSystemID) then
  [232] getprop 540 ............................. <pInterstitialSystemID>
  [235] pusharglistnoret 1 ...................... <pInterstitialSystemID>
  [237] extcall 121 ............................. removeObject(pInterstitialSystemID)
  [239] getprop 541 ............................. <pSpectatorSystemID>
  [242] pusharglist 1 ........................... <pSpectatorSystemID>
  [244] extcall 268 ............................. <objectExists(pSpectatorSystemID)>
  [247] jmpifz [257] ............................ if objectExists(pSpectatorSystemID) then
  [250] getprop 541 ............................. <pSpectatorSystemID>
  [253] pusharglistnoret 1 ...................... <pSpectatorSystemID>
  [255] extcall 121 ............................. removeObject(pSpectatorSystemID)
  [257] getprop 543 ............................. <pShadowManagerID>
  [260] pusharglist 1 ........................... <pShadowManagerID>
  [262] extcall 268 ............................. <objectExists(pShadowManagerID)>
  [265] jmpifz [275] ............................ if objectExists(pShadowManagerID) then
  [268] getprop 543 ............................. <pShadowManagerID>
  [271] pusharglistnoret 1 ...................... <pShadowManagerID>
  [273] extcall 121 ............................. removeObject(pShadowManagerID)
  [275] pushcons 2 .............................. <EMPTY>
  [277] setprop 524 ............................. pRoomId = EMPTY
  [280] pusharglist 0 ........................... <[:]>
  [282] pushproplist ............................ <[:]>
  [283] setprop 531 ............................. pUserObjList = [:]
  [286] pusharglist 0 ........................... <[:]>
  [288] pushproplist ............................ <[:]>
  [289] setprop 532 ............................. pActiveObjList = [:]
  [292] pusharglist 0 ........................... <[:]>
  [294] pushproplist ............................ <[:]>
  [295] setprop 533 ............................. pPassiveObjList = [:]
  [298] pusharglist 0 ........................... <[:]>
  [300] pushproplist ............................ <[:]>
  [301] setprop 534 ............................. pItemObjList = [:]
  [304] pusharglist 0 ........................... <[:]>
  [306] pushproplist ............................ <[:]>
  [307] setprop 549 ............................. pCurrentSlidingObjects = [:]
  [310] pushcons 2 .............................. <EMPTY>
  [312] setprop 552 ............................. pEnterRoomAlert = EMPTY
  [315] pushint8 1 .............................. <1>
  [317] pusharglistnoret 1 ...................... <1>
  [319] extcall 116 ............................. return 1
  [321] ret
end

on prepare me
  [  0] getprop 525 ............................. <pActiveFlag>
  [  3] jmpifz [ 36] ............................ if pActiveFlag then
  [  6] pushsymb 553 ............................ <#update>
  [  9] getprop 531 ............................. <pUserObjList>
  [ 12] pusharglistnoret 2 ...................... <#update, pUserObjList>
  [ 14] extcall 142 ............................. call(#update, pUserObjList)
  [ 16] getparam 0 .............................. <me>
  [ 18] getmovieprop 407 ........................ <the milliSeconds>
  [ 21] pusharglistnoret 2 ...................... <me, the milliSeconds>
  [ 23] objcall 519 ............................. me.updateSlideObjects(the milliSeconds)
  [ 26] pushsymb 553 ............................ <#update>
  [ 29] getprop 532 ............................. <pActiveObjList>
  [ 32] pusharglistnoret 2 ...................... <#update, pActiveObjList>
  [ 34] extcall 142 ............................. call(#update, pActiveObjList)
  [ 36] ret
end

on enterRoom me, tRoomDataStruct
  [  0] getparam 1 .............................. <tRoomDataStruct>
  [  2] pusharglist 1 ........................... <tRoomDataStruct>
  [  4] extcall 258 ............................. <listp(tRoomDataStruct)>
  [  7] not ..................................... <not listp(tRoomDataStruct)>
  [  8] jmpifz [ 33] ............................ if not listp(tRoomDataStruct) then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 28 ............................. <"Invalid room data struct!">
  [ 15] pushsymb 479 ............................ <#enterRoom>
  [ 18] pusharglistnoret 3 ...................... <me, "Invalid room data struct!", #enterRoom>
  [ 20] extcall 123 ............................. error(me, "Invalid room data struct!", #enterRoom)
  [ 22] pushsymb 462 ............................ <#leaveRoom>
  [ 25] pusharglist 1 ........................... <#leaveRoom>
  [ 27] extcall 180 ............................. <executeMessage(#leaveRoom)>
  [ 29] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [ 31] extcall 116 ............................. return executeMessage(#leaveRoom)
  [ 33] pusharglist 0 ........................... <>
  [ 35] localcall 29 ............................ <getInterstitial()>
  [ 37] pusharglistnoret 1 ...................... <getInterstitial()>
  [ 39] objcall 554 ............................. getInterstitial().adRequested()
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 368 ............................. <me.getRoomConnection()>
  [ 49] pushcons 29 ............................. <"GETINTERST">
  [ 51] pushcons 30 ............................. <"general">
  [ 53] pusharglistnoret 3 ...................... <me.getRoomConnection(), "GETINTERST", "general">
  [ 55] objcall 369 ............................. me.getRoomConnection().send("GETINTERST", "general")
  [ 58] getparam 1 .............................. <tRoomDataStruct>
  [ 60] pusharglist 1 ........................... <tRoomDataStruct>
  [ 62] objcall 555 ............................. <tRoomDataStruct.duplicate()>
  [ 65] setlocal 0 .............................. tdata = tRoomDataStruct.duplicate()
  [ 67] getlocal 0 .............................. <tdata>
  [ 69] pushsymb 359 ............................ <#id>
  [ 72] pusharglist 2 ........................... <tdata, #id>
  [ 74] objcall 138 ............................. <tdata[#id]>
  [ 76] pusharglist 1 ........................... <tdata[#id]>
  [ 78] extcall 253 ............................. <voidp(tdata[#id])>
  [ 80] jmpifz [105] ............................ if voidp(tdata[#id]) then
  [ 83] getparam 0 .............................. <me>
  [ 85] pushcons 31 ............................. <"Missing ID in room data struct!">
  [ 87] pushsymb 479 ............................ <#enterRoom>
  [ 90] pusharglistnoret 3 ...................... <me, "Missing ID in room data struct!", #enterRoom>
  [ 92] extcall 123 ............................. error(me, "Missing ID in room data struct!", #enterRoom)
  [ 94] pushsymb 462 ............................ <#leaveRoom>
  [ 97] pusharglist 1 ........................... <#leaveRoom>
  [ 99] extcall 180 ............................. <executeMessage(#leaveRoom)>
  [101] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [103] extcall 116 ............................. return executeMessage(#leaveRoom)
  [105] getprop 524 ............................. <pRoomId>
  [108] pushcons 2 .............................. <EMPTY>
  [110] nteq .................................... <pRoomId <> EMPTY>
  [111] jmpifz [121] ............................ if pRoomId <> EMPTY then
  [114] pushsymb 550 ............................ <#changeRoom>
  [117] pusharglistnoret 1 ...................... <#changeRoom>
  [119] extcall 180 ............................. executeMessage(#changeRoom)
  [121] pushsymb 200 ............................ <#session>
  [123] pusharglist 1 ........................... <#session>
  [125] extcall 112 ............................. <getObject(#session)>
  [127] setlocal 1 .............................. tSession = getObject(#session)
  [129] getlocal 1 .............................. <tSession>
  [131] pushcons 32 ............................. <"room_owner">
  [133] pushzero ................................ <0>
  [134] pusharglistnoret 3 ...................... <tSession, "room_owner", 0>
  [136] objcall 556 ............................. tSession.set("room_owner", 0)
  [139] getlocal 1 .............................. <tSession>
  [141] pushcons 33 ............................. <"room_controller">
  [143] pushzero ................................ <0>
  [144] pusharglistnoret 3 ...................... <tSession, "room_controller", 0>
  [146] objcall 556 ............................. tSession.set("room_controller", 0)
  [149] getlocal 0 .............................. <tdata>
  [151] pushsymb 184 ............................ <#type>
  [153] pusharglist 2 ........................... <tdata, #type>
  [155] objcall 138 ............................. <tdata[#type]>
  [157] pushsymb 185 ............................ <#private>
  [159] eq ...................................... <tdata[#type] = #private>
  [160] jmpifz [183] ............................ if tdata[#type] = #private then / else
  [163] pushcons 34 ............................. <"private">
  [165] setprop 524 ............................. pRoomId = "private"
  [168] getlocal 0 .............................. <tdata>
  [170] pushsymb 359 ............................ <#id>
  [173] pusharglist 2 ........................... <tdata, #id>
  [175] objcall 138 ............................. <tdata[#id]>
  [177] setprop 557 ............................. pReportRoomId = tdata[#id]
  [180] jmp [207]
  [183] getlocal 0 .............................. <tdata>
  [185] pushsymb 359 ............................ <#id>
  [188] pusharglist 2 ........................... <tdata, #id>
  [190] objcall 138 ............................. <tdata[#id]>
  [192] setprop 524 ............................. pRoomId = tdata[#id]
  [195] getlocal 0 .............................. <tdata>
  [197] pushsymb 558 ............................ <#port>
  [200] pusharglist 2 ........................... <tdata, #port>
  [202] objcall 138 ............................. <tdata[#port]>
  [204] setprop 557 ............................. pReportRoomId = tdata[#port]
  [207] pusharglist 0 ........................... <>
  [209] extcall 120 ............................. <VOID>
  [211] setprop 529 ............................. pTrgDoorID = VOID
  [214] getlocal 0 .............................. <tdata>
  [216] setprop 186 ............................. pSaveData = tdata
  [218] pushzero ................................ <0>
  [219] setprop 547 ............................. pCastLoaded = 0
  [222] getparam 0 .............................. <me>
  [224] pusharglistnoret 1 ...................... <me>
  [226] objcall 501 ............................. me.loadRoomCasts()
  [229] pushint8 1 .............................. <1>
  [231] pusharglistnoret 1 ...................... <1>
  [233] extcall 116 ............................. return 1
  [235] ret
end

on enterDoor me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pusharglist 1 ........................... <tdata>
  [  4] extcall 258 ............................. <listp(tdata)>
  [  7] not ..................................... <not listp(tdata)>
  [  8] jmpifz [ 26] ............................ if not listp(tdata) then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 35 ............................. <"Room data struct expected!">
  [ 15] pushsymb 480 ............................ <#enterDoor>
  [ 18] pusharglist 3 ........................... <me, "Room data struct expected!", #enterDoor>
  [ 20] extcall 123 ............................. <error(me, "Room data struct expected!", #enterDoor)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Room data struct expected!", #enterDoor)>
  [ 24] extcall 116 ............................. return error(me, "Room data struct expected!", #enterDoor)
  [ 26] getparam 1 .............................. <tdata>
  [ 28] pushsymb 359 ............................ <#id>
  [ 31] pusharglist 2 ........................... <tdata, #id>
  [ 33] objcall 138 ............................. <tdata[#id]>
  [ 35] getprop 186 ............................. <pSaveData>
  [ 37] pushsymb 359 ............................ <#id>
  [ 40] pusharglist 2 ........................... <pSaveData, #id>
  [ 42] objcall 138 ............................. <pSaveData[#id]>
  [ 44] nteq .................................... <tdata[#id] <> pSaveData[#id]>
  [ 45] jmpifz [ 64] ............................ if tdata[#id] <> pSaveData[#id] then / else
  [ 48] getparam 0 .............................. <me>
  [ 50] pushint8 1 .............................. <1>
  [ 52] pusharglistnoret 2 ...................... <me, 1>
  [ 54] objcall 462 ............................. me.leaveRoom(1)
  [ 57] pushint8 1 .............................. <1>
  [ 59] setlocal 0 .............................. tReConnect = 1
  [ 61] jmp [ 81]
  [ 64] pushsymb 200 ............................ <#session>
  [ 66] pusharglist 1 ........................... <#session>
  [ 68] extcall 112 ............................. <getObject(#session)>
  [ 70] pushcons 36 ............................. <"target_door_ID">
  [ 72] pushzero ................................ <0>
  [ 73] pusharglistnoret 3 ...................... <getObject(#session), "target_door_ID", 0>
  [ 75] objcall 556 ............................. getObject(#session).set("target_door_ID", 0)
  [ 78] pushzero ................................ <0>
  [ 79] setlocal 0 .............................. tReConnect = 0
  [ 81] getparam 0 .............................. <me>
  [ 83] getprop 186 ............................. <pSaveData>
  [ 85] pushsymb 560 ............................ <#marker>
  [ 88] pusharglist 2 ........................... <pSaveData, #marker>
  [ 90] objcall 138 ............................. <pSaveData[#marker]>
  [ 92] pusharglist 2 ........................... <me, pSaveData[#marker]>
  [ 94] objcall 522 ............................. <me.getRoomScale(pSaveData[#marker])>
  [ 97] setlocal 1 .............................. tCurrentScale = me.getRoomScale(pSaveData[#marker])
  [ 99] getprop 186 ............................. <pSaveData>
  [101] pushsymb 561 ............................ <#casts>
  [104] pusharglist 2 ........................... <pSaveData, #casts>
  [106] objcall 138 ............................. <pSaveData[#casts]>
  [108] setlocal 2 .............................. tCurrentRoomCasts = pSaveData[#casts]
  [110] pushcons 34 ............................. <"private">
  [112] setprop 524 ............................. pRoomId = "private"
  [115] getparam 1 .............................. <tdata>
  [117] pushsymb 359 ............................ <#id>
  [120] pusharglist 2 ........................... <tdata, #id>
  [122] objcall 138 ............................. <tdata[#id]>
  [124] setprop 557 ............................. pReportRoomId = tdata[#id]
  [127] getparam 1 .............................. <tdata>
  [129] pushsymb 359 ............................ <#id>
  [132] pusharglist 2 ........................... <tdata, #id>
  [134] objcall 138 ............................. <tdata[#id]>
  [136] setprop 529 ............................. pTrgDoorID = tdata[#id]
  [139] getparam 1 .............................. <tdata>
  [141] pusharglist 1 ........................... <tdata>
  [143] objcall 555 ............................. <tdata.duplicate()>
  [146] setprop 186 ............................. pSaveData = tdata.duplicate()
  [148] getprop 186 ............................. <pSaveData>
  [150] pushsymb 184 ............................ <#type>
  [152] pushsymb 185 ............................ <#private>
  [154] pusharglistnoret 3 ...................... <pSaveData, #type, #private>
  [156] objcall 136 ............................. pSaveData[#type] = #private
  [158] pushsymb 200 ............................ <#session>
  [160] pusharglist 1 ........................... <#session>
  [162] extcall 112 ............................. <getObject(#session)>
  [164] pushcons 37 ............................. <"lastroom">
  [166] getprop 186 ............................. <pSaveData>
  [168] pusharglist 1 ........................... <pSaveData>
  [170] objcall 555 ............................. <pSaveData.duplicate()>
  [173] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", pSaveData.duplicate()>
  [175] objcall 556 ............................. getObject(#session).set("lastroom", pSaveData.duplicate())
  [178] getparam 0 .............................. <me>
  [180] getprop 186 ............................. <pSaveData>
  [182] pushsymb 560 ............................ <#marker>
  [185] pusharglist 2 ........................... <pSaveData, #marker>
  [187] objcall 138 ............................. <pSaveData[#marker]>
  [189] pusharglist 2 ........................... <me, pSaveData[#marker]>
  [191] objcall 522 ............................. <me.getRoomScale(pSaveData[#marker])>
  [194] pushsymb 562 ............................ <#small>
  [197] eq ...................................... <me.getRoomScale(pSaveData[#marker]) = #small>
  [198] getlocal 1 .............................. <tCurrentScale>
  [200] pushsymb 563 ............................ <#large>
  [203] eq ...................................... <tCurrentScale = #large>
  [204] and ..................................... <(me.getRoomScale(pSaveData[#marker]) = #small) and (tCurrentScale = #large)>
  [205] getprop 548 ............................. <pPrvRoomsReady>
  [208] not ..................................... <not pPrvRoomsReady>
  [209] and ..................................... <(me.getRoomScale(pSaveData[#marker]) = #small) and (tCurrentScale = #large) and not pPrvRoomsReady>
  [210] jmpifz [241] ............................ if (me.getRoomScale(pSaveData[#marker]) = #small) and (tCurrentScale = #large) and not pPrvRoomsReady then
  [213] getprop 186 ............................. <pSaveData>
  [215] pushsymb 561 ............................ <#casts>
  [218] getlocal 2 .............................. <tCurrentRoomCasts>
  [220] pusharglistnoret 3 ...................... <pSaveData, #casts, tCurrentRoomCasts>
  [222] objcall 136 ............................. pSaveData[#casts] = tCurrentRoomCasts
  [224] getparam 0 .............................. <me>
  [226] pusharglistnoret 1 ...................... <me>
  [228] objcall 501 ............................. me.loadRoomCasts()
  [231] pushint8 1 .............................. <1>
  [233] setprop 548 ............................. pPrvRoomsReady = 1
  [236] pushzero ................................ <0>
  [237] pusharglistnoret 1 ...................... <0>
  [239] extcall 116 ............................. return 0
  [241] getlocal 0 .............................. <tReConnect>
  [243] jmpifz [260] ............................ if tReConnect then / else
  [246] getparam 0 .............................. <me>
  [248] pusharglist 1 ........................... <me>
  [250] objcall 502 ............................. <me.roomCastLoaded()>
  [253] pusharglistnoret 1 ...................... <me.roomCastLoaded()>
  [255] extcall 116 ............................. return me.roomCastLoaded()
  [257] jmp [294]
  [260] getparam 0 .............................. <me>
  [262] pusharglist 1 ........................... <me>
  [264] objcall 368 ............................. <me.getRoomConnection()>
  [267] pushcons 38 ............................. <"GOVIADOOR">
  [269] getprop 529 ............................. <pTrgDoorID>
  [272] pushcons 39 ............................. <"/">
  [274] joinstr ................................. <pTrgDoorID & "/">
  [275] getprop 186 ............................. <pSaveData>
  [277] pushsymb 564 ............................ <#teleport>
  [280] pusharglist 2 ........................... <pSaveData, #teleport>
  [282] objcall 138 ............................. <pSaveData[#teleport]>
  [284] joinstr ................................. <pTrgDoorID & "/" & pSaveData[#teleport]>
  [285] pusharglist 3 ........................... <me.getRoomConnection(), "GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport]>
  [287] objcall 369 ............................. <me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])>
  [290] pusharglistnoret 1 ...................... <me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])>
  [292] extcall 116 ............................. return me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])
  [294] ret
end

on leaveRoom me, tJumpingToSubUnit
  [  0] getprop 524 ............................. <pRoomId>
  [  3] pushcons 2 .............................. <EMPTY>
  [  5] eq ...................................... <pRoomId = EMPTY>
  [  6] jmpifz [ 14] ............................ if pRoomId = EMPTY then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 116 ............................. return 0
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 115 ............................. <me.getID()>
  [ 20] pusharglistnoret 1 ...................... <me.getID()>
  [ 22] extcall 568 ............................. removePrepare(me.getID())
  [ 25] getprop 537 ............................. <pRoomPrgID>
  [ 28] pusharglist 1 ........................... <pRoomPrgID>
  [ 30] extcall 268 ............................. <objectExists(pRoomPrgID)>
  [ 33] jmpifz [ 43] ............................ if objectExists(pRoomPrgID) then
  [ 36] getprop 537 ............................. <pRoomPrgID>
  [ 39] pusharglistnoret 1 ...................... <pRoomPrgID>
  [ 41] extcall 121 ............................. removeObject(pRoomPrgID)
  [ 43] getprop 528 ............................. <pCacheFlag>
  [ 46] not ..................................... <not pCacheFlag>
  [ 47] jmpifz [ 64] ............................ if not pCacheFlag then
  [ 50] pushsymb 569 ............................ <#cache>
  [ 53] pusharglist 1 ........................... <#cache>
  [ 55] extcall 112 ............................. <getObject(#cache)>
  [ 57] getprop 527 ............................. <pCacheKey>
  [ 60] pusharglistnoret 2 ...................... <getObject(#cache), pCacheKey>
  [ 62] objcall 254 ............................. getObject(#cache).Remove(pCacheKey)
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 1 ........................... <me>
  [ 68] objcall 570 ............................. <me.getInterface()>
  [ 71] getobjprop 110 .......................... <me.getInterface().pIgnoreListObj>
  [ 73] pusharglist 1 ........................... <me.getInterface().pIgnoreListObj>
  [ 75] extcall 363 ............................. <objectp(me.getInterface().pIgnoreListObj)>
  [ 78] jmpifz [ 95] ............................ if objectp(me.getInterface().pIgnoreListObj) then
  [ 81] getparam 0 .............................. <me>
  [ 83] pusharglist 1 ........................... <me>
  [ 85] objcall 570 ............................. <me.getInterface()>
  [ 88] getchainedprop 110 ...................... <me.getInterface().pIgnoreListObj>
  [ 90] pusharglistnoret 1 ...................... <me.getInterface().pIgnoreListObj>
  [ 92] objcall 571 ............................. me.getInterface().pIgnoreListObj.reset()
  [ 95] pushsymb 572 ............................ <#furniChooser>
  [ 98] pusharglist 1 ........................... <#furniChooser>
  [100] extcall 268 ............................. <objectExists(#furniChooser)>
  [103] jmpifz [118] ............................ if objectExists(#furniChooser) then
  [106] pushsymb 572 ............................ <#furniChooser>
  [109] pusharglist 1 ........................... <#furniChooser>
  [111] extcall 112 ............................. <getObject(#furniChooser)>
  [113] pusharglistnoret 1 ...................... <getObject(#furniChooser)>
  [115] objcall 340 ............................. getObject(#furniChooser).close()
  [118] pushzero ................................ <0>
  [119] setprop 525 ............................. pActiveFlag = 0
  [122] getparam 1 .............................. <tJumpingToSubUnit>
  [124] not ..................................... <not tJumpingToSubUnit>
  [125] jmpifz [138] ............................ if not tJumpingToSubUnit then
  [128] pushcons 2 .............................. <EMPTY>
  [130] setprop 524 ............................. pRoomId = EMPTY
  [133] pushcons 2 .............................. <EMPTY>
  [135] setprop 557 ............................. pReportRoomId = EMPTY
  [138] getparam 0 .............................. <me>
  [140] pusharglist 1 ........................... <me>
  [142] objcall 493 ............................. <me.getShadowManager()>
  [145] pushint8 1 .............................. <1>
  [147] pusharglistnoret 2 ...................... <me.getShadowManager(), 1>
  [149] objcall 573 ............................. me.getShadowManager().disableRender(1)
  [152] getprop 531 ............................. <pUserObjList>
  [155] pusharglist 1 ........................... <pUserObjList>
  [157] extcall 258 ............................. <listp(pUserObjList)>
  [160] jmpifz [172] ............................ if listp(pUserObjList) then
  [163] pushsymb 2 .............................. <#deconstruct>
  [165] getprop 531 ............................. <pUserObjList>
  [168] pusharglistnoret 2 ...................... <#deconstruct, pUserObjList>
  [170] extcall 142 ............................. call(#deconstruct, pUserObjList)
  [172] getprop 532 ............................. <pActiveObjList>
  [175] pusharglist 1 ........................... <pActiveObjList>
  [177] extcall 258 ............................. <listp(pActiveObjList)>
  [180] jmpifz [192] ............................ if listp(pActiveObjList) then
  [183] pushsymb 2 .............................. <#deconstruct>
  [185] getprop 532 ............................. <pActiveObjList>
  [188] pusharglistnoret 2 ...................... <#deconstruct, pActiveObjList>
  [190] extcall 142 ............................. call(#deconstruct, pActiveObjList)
  [192] getprop 533 ............................. <pPassiveObjList>
  [195] pusharglist 1 ........................... <pPassiveObjList>
  [197] extcall 258 ............................. <listp(pPassiveObjList)>
  [200] jmpifz [212] ............................ if listp(pPassiveObjList) then
  [203] pushsymb 2 .............................. <#deconstruct>
  [205] getprop 533 ............................. <pPassiveObjList>
  [208] pusharglistnoret 2 ...................... <#deconstruct, pPassiveObjList>
  [210] extcall 142 ............................. call(#deconstruct, pPassiveObjList)
  [212] getprop 534 ............................. <pItemObjList>
  [215] pusharglist 1 ........................... <pItemObjList>
  [217] extcall 258 ............................. <listp(pItemObjList)>
  [220] jmpifz [232] ............................ if listp(pItemObjList) then
  [223] pushsymb 2 .............................. <#deconstruct>
  [225] getprop 534 ............................. <pItemObjList>
  [228] pusharglistnoret 2 ...................... <#deconstruct, pItemObjList>
  [230] extcall 142 ............................. call(#deconstruct, pItemObjList)
  [232] getparam 0 .............................. <me>
  [234] pusharglist 1 ........................... <me>
  [236] objcall 493 ............................. <me.getShadowManager()>
  [239] pushzero ................................ <0>
  [240] pusharglistnoret 2 ...................... <me.getShadowManager(), 0>
  [242] objcall 573 ............................. me.getShadowManager().disableRender(0)
  [245] pusharglist 0 ........................... <[:]>
  [247] pushproplist ............................ <[:]>
  [248] setprop 531 ............................. pUserObjList = [:]
  [251] pusharglist 0 ........................... <[:]>
  [253] pushproplist ............................ <[:]>
  [254] setprop 532 ............................. pActiveObjList = [:]
  [257] pusharglist 0 ........................... <[:]>
  [259] pushproplist ............................ <[:]>
  [260] setprop 533 ............................. pPassiveObjList = [:]
  [263] pusharglist 0 ........................... <[:]>
  [265] pushproplist ............................ <[:]>
  [266] setprop 534 ............................. pItemObjList = [:]
  [269] getprop 535 ............................. <pBalloonId>
  [272] pusharglist 1 ........................... <pBalloonId>
  [274] extcall 268 ............................. <objectExists(pBalloonId)>
  [277] jmpifz [292] ............................ if objectExists(pBalloonId) then
  [280] getprop 535 ............................. <pBalloonId>
  [283] pusharglist 1 ........................... <pBalloonId>
  [285] extcall 112 ............................. <getObject(pBalloonId)>
  [287] pusharglistnoret 1 ...................... <getObject(pBalloonId)>
  [289] objcall 574 ............................. getObject(pBalloonId).removeBalloons()
  [292] getparam 0 .............................. <me>
  [294] pusharglist 1 ........................... <me>
  [296] objcall 570 ............................. <me.getInterface()>
  [299] pusharglistnoret 1 ...................... <me.getInterface()>
  [301] objcall 27 .............................. me.getInterface().hideAll()
  [303] pushsymb 200 ............................ <#session>
  [305] pusharglist 1 ........................... <#session>
  [307] extcall 112 ............................. <getObject(#session)>
  [309] pushcons 32 ............................. <"room_owner">
  [311] pushzero ................................ <0>
  [312] pusharglistnoret 3 ...................... <getObject(#session), "room_owner", 0>
  [314] objcall 556 ............................. getObject(#session).set("room_owner", 0)
  [317] pushsymb 200 ............................ <#session>
  [319] pusharglist 1 ........................... <#session>
  [321] extcall 112 ............................. <getObject(#session)>
  [323] pushcons 33 ............................. <"room_controller">
  [325] pushzero ................................ <0>
  [326] pusharglistnoret 3 ...................... <getObject(#session), "room_controller", 0>
  [328] objcall 556 ............................. getObject(#session).set("room_controller", 0)
  [331] pushint8 1 .............................. <1>
  [333] pusharglistnoret 1 ...................... <1>
  [335] extcall 116 ............................. return 1
  [337] ret
end

on enterRoomDirect me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 184 ............................ <#type>
  [  4] pusharglist 2 ........................... <tdata, #type>
  [  6] objcall 138 ............................. <tdata[#type]>
  [  8] pushsymb 185 ............................ <#private>
  [ 10] eq ...................................... <tdata[#type] = #private>
  [ 11] jmpifz [ 34] ............................ if tdata[#type] = #private then / else
  [ 14] pushcons 34 ............................. <"private">
  [ 16] setprop 524 ............................. pRoomId = "private"
  [ 19] getparam 1 .............................. <tdata>
  [ 21] pushsymb 359 ............................ <#id>
  [ 24] pusharglist 2 ........................... <tdata, #id>
  [ 26] objcall 138 ............................. <tdata[#id]>
  [ 28] setprop 557 ............................. pReportRoomId = tdata[#id]
  [ 31] jmp [ 58]
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushsymb 359 ............................ <#id>
  [ 39] pusharglist 2 ........................... <tdata, #id>
  [ 41] objcall 138 ............................. <tdata[#id]>
  [ 43] setprop 524 ............................. pRoomId = tdata[#id]
  [ 46] getparam 1 .............................. <tdata>
  [ 48] pushsymb 558 ............................ <#port>
  [ 51] pusharglist 2 ........................... <tdata, #port>
  [ 53] objcall 138 ............................. <tdata[#port]>
  [ 55] setprop 557 ............................. pReportRoomId = tdata[#port]
  [ 58] pusharglist 0 ........................... <>
  [ 60] extcall 120 ............................. <VOID>
  [ 62] setprop 529 ............................. pTrgDoorID = VOID
  [ 65] getparam 1 .............................. <tdata>
  [ 67] setprop 186 ............................. pSaveData = tdata
  [ 69] pushsymb 200 ............................ <#session>
  [ 71] pusharglist 1 ........................... <#session>
  [ 73] extcall 112 ............................. <getObject(#session)>
  [ 75] pushcons 37 ............................. <"lastroom">
  [ 77] getprop 186 ............................. <pSaveData>
  [ 79] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", pSaveData>
  [ 81] objcall 556 ............................. getObject(#session).set("lastroom", pSaveData)
  [ 84] getprop 186 ............................. <pSaveData>
  [ 86] pushsymb 184 ............................ <#type>
  [ 88] pusharglist 2 ........................... <pSaveData, #type>
  [ 90] objcall 138 ............................. <pSaveData[#type]>
  [ 92] pushsymb 185 ............................ <#private>
  [ 94] eq ...................................... <pSaveData[#type] = #private>
  [ 95] jmpifz [123] ............................ if pSaveData[#type] = #private then / else
  [ 98] getprop 186 ............................. <pSaveData>
  [100] pushsymb 359 ............................ <#id>
  [103] pusharglist 2 ........................... <pSaveData, #id>
  [105] objcall 138 ............................. <pSaveData[#id]>
  [107] pusharglist 1 ........................... <pSaveData[#id]>
  [109] extcall 426 ............................. <integer(pSaveData[#id])>
  [112] setlocal 0 .............................. tRoomID = integer(pSaveData[#id])
  [114] pushzero ................................ <0>
  [115] setlocal 1 .............................. tDoorID = 0
  [117] pushzero ................................ <0>
  [118] setlocal 2 .............................. tTypeID = 0
  [120] jmp [159]
  [123] getprop 186 ............................. <pSaveData>
  [125] pushsymb 558 ............................ <#port>
  [128] pusharglist 2 ........................... <pSaveData, #port>
  [130] objcall 138 ............................. <pSaveData[#port]>
  [132] pusharglist 1 ........................... <pSaveData[#port]>
  [134] extcall 426 ............................. <integer(pSaveData[#port])>
  [137] setlocal 0 .............................. tRoomID = integer(pSaveData[#port])
  [139] getprop 186 ............................. <pSaveData>
  [141] pushsymb 576 ............................ <#door>
  [144] pusharglist 2 ........................... <pSaveData, #door>
  [146] objcall 138 ............................. <pSaveData[#door]>
  [148] pusharglist 1 ........................... <pSaveData[#door]>
  [150] extcall 426 ............................. <integer(pSaveData[#door])>
  [153] setlocal 1 .............................. tDoorID = integer(pSaveData[#door])
  [155] pushint8 1 .............................. <1>
  [157] setlocal 2 .............................. tTypeID = 1
  [159] getlocal 1 .............................. <tDoorID>
  [161] getobjprop 215 .......................... <tDoorID.ilk>
  [163] pushsymb 120 ............................ <#void>
  [165] eq ...................................... <tDoorID.ilk = #void>
  [166] jmpifz [172] ............................ if tDoorID.ilk = #void then
  [169] pushzero ................................ <0>
  [170] setlocal 1 .............................. tDoorID = 0
  [172] getprop 81 .............................. <pRoomConnID>
  [174] pusharglist 1 ........................... <pRoomConnID>
  [176] extcall 459 ............................. <getConnection(pRoomConnID)>
  [179] pushsymb 577 ............................ <#room_directory>
  [182] pushsymb 578 ............................ <#boolean>
  [185] getlocal 2 .............................. <tTypeID>
  [187] pushsymb 426 ............................ <#integer>
  [190] getlocal 0 .............................. <tRoomID>
  [192] pushsymb 426 ............................ <#integer>
  [195] getlocal 1 .............................. <tDoorID>
  [197] pusharglist 6 ........................... <[#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [199] pushproplist ............................ <[#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [200] pusharglist 3 ........................... <getConnection(pRoomConnID), #room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [202] objcall 369 ............................. <getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])>
  [205] pusharglistnoret 1 ...................... <getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])>
  [207] extcall 116 ............................. return getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])
  [209] ret
end

on createUserObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pushsymb 359 ............................ <#id>
  [  7] pusharglist 2 ........................... <tdata, #id>
  [  9] objcall 138 ............................. <tdata[#id]>
  [ 11] pusharglist 2 ........................... <me, tdata[#id]>
  [ 13] objcall 223 ............................. <me.userObjectExists(tdata[#id])>
  [ 15] jmpifz [ 34] ............................ if me.userObjectExists(tdata[#id]) then
  [ 18] getparam 0 .............................. <me>
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 359 ............................ <#id>
  [ 25] pusharglist 2 ........................... <tdata, #id>
  [ 27] objcall 138 ............................. <tdata[#id]>
  [ 29] pusharglistnoret 2 ...................... <me, tdata[#id]>
  [ 31] objcall 483 ............................. me.removeUserObject(tdata[#id])
  [ 34] getparam 0 .............................. <me>
  [ 36] getparam 1 .............................. <tdata>
  [ 38] getprop 531 ............................. <pUserObjList>
  [ 41] pushcons 40 ............................. <"user">
  [ 43] pusharglist 4 ........................... <me, tdata, pUserObjList, "user">
  [ 45] objcall 513 ............................. <me.createRoomObject(tdata, pUserObjList, "user")>
  [ 48] jmpifz [ 82] ............................ if me.createRoomObject(tdata, pUserObjList, "user") then / else
  [ 51] pushsymb 581 ............................ <#create_user>
  [ 54] getparam 1 .............................. <tdata>
  [ 56] pushsymb 187 ............................ <#name>
  [ 58] pusharglist 2 ........................... <tdata, #name>
  [ 60] objcall 138 ............................. <tdata[#name]>
  [ 62] getparam 1 .............................. <tdata>
  [ 64] pushsymb 359 ............................ <#id>
  [ 67] pusharglist 2 ........................... <tdata, #id>
  [ 69] objcall 138 ............................. <tdata[#id]>
  [ 71] pusharglist 3 ........................... <#create_user, tdata[#name], tdata[#id]>
  [ 73] extcall 180 ............................. <executeMessage(#create_user, tdata[#name], tdata[#id])>
  [ 75] pusharglistnoret 1 ...................... <executeMessage(#create_user, tdata[#name], tdata[#id])>
  [ 77] extcall 116 ............................. return executeMessage(#create_user, tdata[#name], tdata[#id])
  [ 79] jmp [ 87]
  [ 82] pushzero ................................ <0>
  [ 83] pusharglistnoret 1 ...................... <0>
  [ 85] extcall 116 ............................. return 0
  [ 87] ret
end

on removeUserObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 531 ............................. <pUserObjList>
  [  7] pusharglist 3 ........................... <me, tid, pUserObjList>
  [  9] objcall 514 ............................. <me.removeRoomObject(tid, pUserObjList)>
  [ 12] jmpifz [ 31] ............................ if me.removeRoomObject(tid, pUserObjList) then / else
  [ 15] pushsymb 582 ............................ <#remove_user>
  [ 18] getparam 1 .............................. <tid>
  [ 20] pusharglist 2 ........................... <#remove_user, tid>
  [ 22] extcall 180 ............................. <executeMessage(#remove_user, tid)>
  [ 24] pusharglistnoret 1 ...................... <executeMessage(#remove_user, tid)>
  [ 26] extcall 116 ............................. return executeMessage(#remove_user, tid)
  [ 28] jmp [ 36]
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 116 ............................. return 0
  [ 36] ret
end

on getUserObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 531 ............................. <pUserObjList>
  [  7] pusharglist 3 ........................... <me, tid, pUserObjList>
  [  9] objcall 515 ............................. <me.getRoomObject(tid, pUserObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.getRoomObject(tid, pUserObjList)>
  [ 14] extcall 116 ............................. return me.getRoomObject(tid, pUserObjList)
  [ 16] ret
end

on userObjectExists me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 531 ............................. <pUserObjList>
  [  7] pusharglist 3 ........................... <me, tid, pUserObjList>
  [  9] objcall 516 ............................. <me.roomObjectExists(tid, pUserObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.roomObjectExists(tid, pUserObjList)>
  [ 14] extcall 116 ............................. return me.roomObjectExists(tid, pUserObjList)
  [ 16] ret
end

on createActiveObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pushsymb 359 ............................ <#id>
  [  7] pusharglist 2 ........................... <tdata, #id>
  [  9] objcall 138 ............................. <tdata[#id]>
  [ 11] pusharglist 2 ........................... <me, tdata[#id]>
  [ 13] objcall 423 ............................. <me.activeObjectExists(tdata[#id])>
  [ 16] jmpifz [ 35] ............................ if me.activeObjectExists(tdata[#id]) then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 359 ............................ <#id>
  [ 26] pusharglist 2 ........................... <tdata, #id>
  [ 28] objcall 138 ............................. <tdata[#id]>
  [ 30] pusharglistnoret 2 ...................... <me, tdata[#id]>
  [ 32] objcall 377 ............................. me.removeActiveObject(tdata[#id])
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <tdata>
  [ 39] getprop 532 ............................. <pActiveObjList>
  [ 42] pushcons 41 ............................. <"active">
  [ 44] pusharglist 4 ........................... <me, tdata, pActiveObjList, "active">
  [ 46] objcall 513 ............................. <me.createRoomObject(tdata, pActiveObjList, "active")>
  [ 49] pusharglistnoret 1 ...................... <me.createRoomObject(tdata, pActiveObjList, "active")>
  [ 51] extcall 116 ............................. return me.createRoomObject(tdata, pActiveObjList, "active")
  [ 53] ret
end

on removeActiveObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 532 ............................. <pActiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pActiveObjList>
  [  9] objcall 514 ............................. <me.removeRoomObject(tid, pActiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.removeRoomObject(tid, pActiveObjList)>
  [ 14] extcall 116 ............................. return me.removeRoomObject(tid, pActiveObjList)
  [ 16] ret
end

on getActiveObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 532 ............................. <pActiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pActiveObjList>
  [  9] objcall 515 ............................. <me.getRoomObject(tid, pActiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.getRoomObject(tid, pActiveObjList)>
  [ 14] extcall 116 ............................. return me.getRoomObject(tid, pActiveObjList)
  [ 16] ret
end

on activeObjectExists me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 532 ............................. <pActiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pActiveObjList>
  [  9] objcall 516 ............................. <me.roomObjectExists(tid, pActiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.roomObjectExists(tid, pActiveObjList)>
  [ 14] extcall 116 ............................. return me.roomObjectExists(tid, pActiveObjList)
  [ 16] ret
end

on createPassiveObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pushsymb 359 ............................ <#id>
  [  7] pusharglist 2 ........................... <tdata, #id>
  [  9] objcall 138 ............................. <tdata[#id]>
  [ 11] pusharglist 2 ........................... <me, tdata[#id]>
  [ 13] objcall 487 ............................. <me.passiveObjectExists(tdata[#id])>
  [ 16] jmpifz [ 35] ............................ if me.passiveObjectExists(tdata[#id]) then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 359 ............................ <#id>
  [ 26] pusharglist 2 ........................... <tdata, #id>
  [ 28] objcall 138 ............................. <tdata[#id]>
  [ 30] pusharglistnoret 2 ...................... <me, tdata[#id]>
  [ 32] objcall 486 ............................. me.removePassiveObject(tdata[#id])
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <tdata>
  [ 39] getprop 533 ............................. <pPassiveObjList>
  [ 42] pushcons 42 ............................. <"passive">
  [ 44] pusharglist 4 ........................... <me, tdata, pPassiveObjList, "passive">
  [ 46] objcall 513 ............................. <me.createRoomObject(tdata, pPassiveObjList, "passive")>
  [ 49] pusharglistnoret 1 ...................... <me.createRoomObject(tdata, pPassiveObjList, "passive")>
  [ 51] extcall 116 ............................. return me.createRoomObject(tdata, pPassiveObjList, "passive")
  [ 53] ret
end

on removePassiveObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 533 ............................. <pPassiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pPassiveObjList>
  [  9] objcall 514 ............................. <me.removeRoomObject(tid, pPassiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.removeRoomObject(tid, pPassiveObjList)>
  [ 14] extcall 116 ............................. return me.removeRoomObject(tid, pPassiveObjList)
  [ 16] ret
end

on getPassiveObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 533 ............................. <pPassiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pPassiveObjList>
  [  9] objcall 515 ............................. <me.getRoomObject(tid, pPassiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.getRoomObject(tid, pPassiveObjList)>
  [ 14] extcall 116 ............................. return me.getRoomObject(tid, pPassiveObjList)
  [ 16] ret
end

on passiveObjectExists me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 533 ............................. <pPassiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pPassiveObjList>
  [  9] objcall 516 ............................. <me.roomObjectExists(tid, pPassiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.roomObjectExists(tid, pPassiveObjList)>
  [ 14] extcall 116 ............................. return me.roomObjectExists(tid, pPassiveObjList)
  [ 16] ret
end

on createItemObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pushsymb 359 ............................ <#id>
  [  7] pusharglist 2 ........................... <tdata, #id>
  [  9] objcall 138 ............................. <tdata[#id]>
  [ 11] pusharglist 2 ........................... <me, tdata[#id]>
  [ 13] objcall 424 ............................. <me.itemObjectExists(tdata[#id])>
  [ 16] jmpifz [ 35] ............................ if me.itemObjectExists(tdata[#id]) then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 359 ............................ <#id>
  [ 26] pusharglist 2 ........................... <tdata, #id>
  [ 28] objcall 138 ............................. <tdata[#id]>
  [ 30] pusharglistnoret 2 ...................... <me, tdata[#id]>
  [ 32] objcall 379 ............................. me.removeItemObject(tdata[#id])
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <tdata>
  [ 39] getprop 534 ............................. <pItemObjList>
  [ 42] pushcons 43 ............................. <"item">
  [ 44] pusharglist 4 ........................... <me, tdata, pItemObjList, "item">
  [ 46] objcall 513 ............................. <me.createRoomObject(tdata, pItemObjList, "item")>
  [ 49] pusharglistnoret 1 ...................... <me.createRoomObject(tdata, pItemObjList, "item")>
  [ 51] extcall 116 ............................. return me.createRoomObject(tdata, pItemObjList, "item")
  [ 53] ret
end

on removeItemObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 534 ............................. <pItemObjList>
  [  7] pusharglist 3 ........................... <me, tid, pItemObjList>
  [  9] objcall 514 ............................. <me.removeRoomObject(tid, pItemObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.removeRoomObject(tid, pItemObjList)>
  [ 14] extcall 116 ............................. return me.removeRoomObject(tid, pItemObjList)
  [ 16] ret
end

on getItemObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 534 ............................. <pItemObjList>
  [  7] pusharglist 3 ........................... <me, tid, pItemObjList>
  [  9] objcall 515 ............................. <me.getRoomObject(tid, pItemObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.getRoomObject(tid, pItemObjList)>
  [ 14] extcall 116 ............................. return me.getRoomObject(tid, pItemObjList)
  [ 16] ret
end

on itemObjectExists me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 534 ............................. <pItemObjList>
  [  7] pusharglist 3 ........................... <me, tid, pItemObjList>
  [  9] objcall 516 ............................. <me.roomObjectExists(tid, pItemObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.roomObjectExists(tid, pItemObjList)>
  [ 14] extcall 116 ............................. return me.roomObjectExists(tid, pItemObjList)
  [ 16] ret
end

on getRoomPrg me
  [  0] getprop 537 ............................. <pRoomPrgID>
  [  3] pusharglist 1 ........................... <pRoomPrgID>
  [  5] extcall 112 ............................. <getObject(pRoomPrgID)>
  [  7] pusharglistnoret 1 ...................... <getObject(pRoomPrgID)>
  [  9] extcall 116 ............................. return getObject(pRoomPrgID)
  [ 11] ret
end

on getRoomID me
  [  0] getprop 524 ............................. <pRoomId>
  [  3] pusharglistnoret 1 ...................... <pRoomId>
  [  5] extcall 116 ............................. return pRoomId
  [  7] ret
end

on getRoomData me
  [  0] getprop 186 ............................. <pSaveData>
  [  2] pusharglist 1 ........................... <pSaveData>
  [  4] extcall 253 ............................. <voidp(pSaveData)>
  [  6] jmpifz [ 17] ............................ if voidp(pSaveData) then / else
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 116 ............................. return 0
  [ 14] jmp [ 23]
  [ 17] getprop 186 ............................. <pSaveData>
  [ 19] pusharglistnoret 1 ...................... <pSaveData>
  [ 21] extcall 116 ............................. return pSaveData
  [ 23] ret
end

on getRoomConnection me
  [  0] getprop 81 .............................. <pRoomConnID>
  [  2] pusharglist 1 ........................... <pRoomConnID>
  [  4] extcall 459 ............................. <getConnection(pRoomConnID)>
  [  7] pusharglistnoret 1 ...................... <getConnection(pRoomConnID)>
  [  9] extcall 116 ............................. return getConnection(pRoomConnID)
  [ 11] ret
end

on getBalloon me
  [  0] getprop 535 ............................. <pBalloonId>
  [  3] pusharglist 1 ........................... <pBalloonId>
  [  5] extcall 112 ............................. <getObject(pBalloonId)>
  [  7] pusharglistnoret 1 ...................... <getObject(pBalloonId)>
  [  9] extcall 116 ............................. return getObject(pBalloonId)
  [ 11] ret
end

on getAd me
  [  0] getprop 539 ............................. <pAdSystemID>
  [  3] pusharglist 1 ........................... <pAdSystemID>
  [  5] extcall 112 ............................. <getObject(pAdSystemID)>
  [  7] pusharglistnoret 1 ...................... <getObject(pAdSystemID)>
  [  9] extcall 116 ............................. return getObject(pAdSystemID)
  [ 11] ret
end

on getInterstitial me
  [  0] getprop 540 ............................. <pInterstitialSystemID>
  [  3] pusharglist 1 ........................... <pInterstitialSystemID>
  [  5] extcall 268 ............................. <objectExists(pInterstitialSystemID)>
  [  8] jmpifz [ 25] ............................ if objectExists(pInterstitialSystemID) then / else
  [ 11] getprop 540 ............................. <pInterstitialSystemID>
  [ 14] pusharglist 1 ........................... <pInterstitialSystemID>
  [ 16] extcall 112 ............................. <getObject(pInterstitialSystemID)>
  [ 18] pusharglistnoret 1 ...................... <getObject(pInterstitialSystemID)>
  [ 20] extcall 116 ............................. return getObject(pInterstitialSystemID)
  [ 22] jmp [ 40]
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 44 ............................. <"Interstitial manager not found">
  [ 29] pushsymb 288 ............................ <#getInterstitial>
  [ 32] pusharglist 3 ........................... <me, "Interstitial manager not found", #getInterstitial>
  [ 34] extcall 123 ............................. <error(me, "Interstitial manager not found", #getInterstitial)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Interstitial manager not found", #getInterstitial)>
  [ 38] extcall 116 ............................. return error(me, "Interstitial manager not found", #getInterstitial)
  [ 40] ret
end

on getClassContainer me
  [  0] getprop 536 ............................. <pClassContId>
  [  3] pusharglist 1 ........................... <pClassContId>
  [  5] extcall 112 ............................. <getObject(pClassContId)>
  [  7] pusharglistnoret 1 ...................... <getObject(pClassContId)>
  [  9] extcall 116 ............................. return getObject(pClassContId)
  [ 11] ret
end

on getOwnUser me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 200 ............................ <#session>
  [  4] pusharglist 1 ........................... <#session>
  [  6] extcall 112 ............................. <getObject(#session)>
  [  8] pushcons 45 ............................. <"user_index">
  [ 10] pusharglist 2 ........................... <getObject(#session), "user_index">
  [ 12] objcall 201 ............................. <getObject(#session).get("user_index")>
  [ 14] pusharglist 2 ........................... <me, getObject(#session).get("user_index")>
  [ 16] objcall 212 ............................. <me.getUserObject(getObject(#session).get("user_index"))>
  [ 18] pusharglistnoret 1 ...................... <me.getUserObject(getObject(#session).get("user_index"))>
  [ 20] extcall 116 ............................. return me.getUserObject(getObject(#session).get("user_index"))
  [ 22] ret
end

on getShadowManager me
  [  0] getprop 543 ............................. <pShadowManagerID>
  [  3] pusharglist 1 ........................... <pShadowManagerID>
  [  5] extcall 268 ............................. <objectExists(pShadowManagerID)>
  [  8] jmpifz [ 25] ............................ if objectExists(pShadowManagerID) then / else
  [ 11] getprop 543 ............................. <pShadowManagerID>
  [ 14] pusharglist 1 ........................... <pShadowManagerID>
  [ 16] extcall 112 ............................. <getObject(pShadowManagerID)>
  [ 18] pusharglistnoret 1 ...................... <getObject(pShadowManagerID)>
  [ 20] extcall 116 ............................. return getObject(pShadowManagerID)
  [ 22] jmp [ 40]
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 46 ............................. <"Shadow manager not found">
  [ 29] pushsymb 493 ............................ <#getShadowManager>
  [ 32] pusharglist 3 ........................... <me, "Shadow manager not found", #getShadowManager>
  [ 34] extcall 123 ............................. <error(me, "Shadow manager not found", #getShadowManager)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Shadow manager not found", #getShadowManager)>
  [ 38] extcall 116 ............................. return error(me, "Shadow manager not found", #getShadowManager)
  [ 40] ret
end

on roomExists me, tRoomID
  [  0] getparam 1 .............................. <tRoomID>
  [  2] pusharglist 1 ........................... <tRoomID>
  [  4] extcall 253 ............................. <voidp(tRoomID)>
  [  6] jmpifz [ 19] ............................ if voidp(tRoomID) then / else
  [  9] getprop 525 ............................. <pActiveFlag>
  [ 12] pusharglistnoret 1 ...................... <pActiveFlag>
  [ 14] extcall 116 ............................. return pActiveFlag
  [ 16] jmp [ 29]
  [ 19] getprop 524 ............................. <pRoomId>
  [ 22] getparam 1 .............................. <tRoomID>
  [ 24] eq ...................................... <pRoomId = tRoomID>
  [ 25] pusharglistnoret 1 ...................... <pRoomId = tRoomID>
  [ 27] extcall 116 ............................. return pRoomId = tRoomID
  [ 29] ret
end

on sendChat me, tChat
  [  0] getparam 1 .............................. <tChat>
  [  2] pusharglist 1 ........................... <tChat>
  [  4] extcall 253 ............................. <voidp(tChat)>
  [  6] jmpifz [ 14] ............................ if voidp(tChat) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 116 ............................. return 0
  [ 14] getparam 1 .............................. <tChat>
  [ 16] pushcons 2 .............................. <EMPTY>
  [ 18] eq ...................................... <tChat = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tChat = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 116 ............................. return 0
  [ 27] getparam 1 .............................. <tChat>
  [ 29] pushint8 1 .............................. <1>
  [ 31] pusharglist 2 ........................... <tChat, 1>
  [ 33] extcall 583 ............................. <convertSpecialChars(tChat, 1)>
  [ 36] setparam 1 .............................. tChat = convertSpecialChars(tChat, 1)
  [ 38] getparam 1 .............................. <tChat>
  [ 40] pushsymb 425 ............................ <#char>
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglist 3 ........................... <tChat, #char, 1>
  [ 47] objcall 134 ............................. <tChat.char[1]>
  [ 49] pushcons 47 ............................. <":">
  [ 51] eq ...................................... <tChat.char[1] = ":">
  [ 52] jmpifz [423] ............................ if tChat.char[1] = ":" then
  [ 55] getparam 1 .............................. <tChat>
  [ 57] pushsymb 435 ............................ <#word>
  [ 60] pushint8 1 .............................. <1>
  [ 62] pusharglist 3 ........................... <tChat, #word, 1>
  [ 64] objcall 134 ............................. <tChat.word[1]>
  [ 66] peek 0 .................................. case tChat.word[1] of
  [ 68] pushcons 48 ............................. <":chooser">
  [ 70] eq
  [ 71] jmpifz [113] ............................ (case) ":chooser":
  [ 74] pushsymb 200 ............................ <#session>
  [ 76] pusharglist 1 ........................... <#session>
  [ 78] extcall 112 ............................. <getObject(#session)>
  [ 80] pushcons 49 ............................. <"user_rights">
  [ 82] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [ 84] objcall 201 ............................. <getObject(#session).get("user_rights")>
  [ 86] pushcons 50 ............................. <"fuse_habbo_chooser">
  [ 88] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_habbo_chooser">
  [ 90] objcall 205 ............................. <getObject(#session).get("user_rights").getOne("fuse_habbo_chooser")>
  [ 92] jmpifz [110] ............................ if getObject(#session).get("user_rights").getOne("fuse_habbo_chooser") then
  [ 95] pop 1
  [ 97] pushsymb 584 ............................ <#chooser>
  [100] pushcons 51 ............................. <"User Chooser Class">
  [102] pusharglist 2 ........................... <#chooser, "User Chooser Class">
  [104] extcall 109 ............................. <createObject(#chooser, "User Chooser Class")>
  [106] pusharglistnoret 1 ...................... <createObject(#chooser, "User Chooser Class")>
  [108] extcall 116 ............................. return createObject(#chooser, "User Chooser Class")
  [110] jmp [421]
  [113] peek 0
  [115] pushcons 52 ............................. <":furni">
  [117] eq
  [118] jmpifz [225] ............................ (case) ":furni":
  [121] getprop 186 ............................. <pSaveData>
  [123] pushsymb 184 ............................ <#type>
  [125] pusharglist 2 ........................... <pSaveData, #type>
  [127] objcall 138 ............................. <pSaveData[#type]>
  [129] pushsymb 185 ............................ <#private>
  [131] nteq .................................... <pSaveData[#type] <> #private>
  [132] jmpifz [143] ............................ if pSaveData[#type] <> #private then
  [135] pop 1
  [137] pushint8 1 .............................. <1>
  [139] pusharglistnoret 1 ...................... <1>
  [141] extcall 116 ............................. return 1
  [143] pushsymb 200 ............................ <#session>
  [145] pusharglist 1 ........................... <#session>
  [147] extcall 112 ............................. <getObject(#session)>
  [149] pushcons 49 ............................. <"user_rights">
  [151] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [153] objcall 201 ............................. <getObject(#session).get("user_rights")>
  [155] pushcons 53 ............................. <"fuse_furni_chooser">
  [157] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_furni_chooser">
  [159] objcall 205 ............................. <getObject(#session).get("user_rights").getOne("fuse_furni_chooser")>
  [161] jmpifz [222] ............................ if getObject(#session).get("user_rights").getOne("fuse_furni_chooser") then
  [164] getprop 542 ............................. <pFurniChooserID>
  [167] pusharglist 1 ........................... <pFurniChooserID>
  [169] extcall 268 ............................. <objectExists(pFurniChooserID)>
  [172] not ..................................... <not objectExists(pFurniChooserID)>
  [173] jmpifz [185] ............................ if not objectExists(pFurniChooserID) then
  [176] getprop 542 ............................. <pFurniChooserID>
  [179] pushcons 54 ............................. <"Furni Chooser Class">
  [181] pusharglistnoret 2 ...................... <pFurniChooserID, "Furni Chooser Class">
  [183] extcall 109 ............................. createObject(pFurniChooserID, "Furni Chooser Class")
  [185] getprop 542 ............................. <pFurniChooserID>
  [188] pusharglist 1 ........................... <pFurniChooserID>
  [190] extcall 112 ............................. <getObject(pFurniChooserID)>
  [192] pushzero ................................ <0>
  [193] eq ...................................... <getObject(pFurniChooserID) = 0>
  [194] jmpifz [204] ............................ if getObject(pFurniChooserID) = 0 then
  [197] pop 1
  [199] pushzero ................................ <0>
  [200] pusharglistnoret 1 ...................... <0>
  [202] extcall 116 ............................. return 0
  [204] pop 1
  [206] getprop 542 ............................. <pFurniChooserID>
  [209] pusharglist 1 ........................... <pFurniChooserID>
  [211] extcall 112 ............................. <getObject(pFurniChooserID)>
  [213] pusharglist 1 ........................... <getObject(pFurniChooserID)>
  [215] objcall 585 ............................. <getObject(pFurniChooserID).showList()>
  [218] pusharglistnoret 1 ...................... <getObject(pFurniChooserID).showList()>
  [220] extcall 116 ............................. return getObject(pFurniChooserID).showList()
  [222] jmp [421]
  [225] peek 0
  [227] pushcons 55 ............................. <":performance">
  [229] eq
  [230] jmpifz [268] ............................ (case) ":performance":
  [233] pushsymb 200 ............................ <#session>
  [235] pusharglist 1 ........................... <#session>
  [237] extcall 112 ............................. <getObject(#session)>
  [239] pushcons 49 ............................. <"user_rights">
  [241] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [243] objcall 201 ............................. <getObject(#session).get("user_rights")>
  [245] pushcons 56 ............................. <"fuse_performance_panel">
  [247] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_performance_panel">
  [249] objcall 205 ............................. <getObject(#session).get("user_rights").getOne("fuse_performance_panel")>
  [251] jmpifz [265] ............................ if getObject(#session).get("user_rights").getOne("fuse_performance_panel") then
  [254] pop 1
  [256] pusharglist 0 ........................... <>
  [258] extcall 586 ............................. <performance()>
  [261] pusharglistnoret 1 ...................... <performance()>
  [263] extcall 116 ............................. return performance()
  [265] jmp [421]
  [268] peek 0
  [270] pushcons 57 ............................. <":debug">
  [272] nteq
  [273] jmpifz [292] ............................ (case) ":debug", ...
  [276] peek 0
  [278] pushcons 58 ............................. <":log">
  [280] nteq
  [281] jmpifz [292] ............................ (case) ..., ":log", ...
  [284] peek 0
  [286] pushcons 59 ............................. <":usestaffrights">
  [288] eq
  [289] jmpifz [335] ............................ (case) ..., ":usestaffrights":
  [292] pushsymb 200 ............................ <#session>
  [294] pusharglist 1 ........................... <#session>
  [296] extcall 112 ............................. <getObject(#session)>
  [298] pushcons 49 ............................. <"user_rights">
  [300] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [302] objcall 201 ............................. <getObject(#session).get("user_rights")>
  [304] pushcons 60 ............................. <"fuse_debug_window">
  [306] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_debug_window">
  [308] objcall 205 ............................. <getObject(#session).get("user_rights").getOne("fuse_debug_window")>
  [310] jmpifz [332] ............................ if getObject(#session).get("user_rights").getOne("fuse_debug_window") then
  [313] getmovieprop 587 ........................ <the runMode>
  [316] pushcons 61 ............................. <"Author">
  [318] containsstr ............................. <the runMode contains "Author">
  [319] not ..................................... <not (the runMode contains "Author")>
  [320] jmpifz [332] ............................ if not (the runMode contains "Author") then
  [323] getparam 0 .............................. <me>
  [325] pushcons 58 ............................. <":log">
  [327] pusharglistnoret 2 ...................... <me, ":log">
  [329] objcall 410 ............................. me.sendChat(":log")
  [332] jmp [421]
  [335] peek 0
  [337] pushcons 62 ............................. <":editcatalogue">
  [339] eq
  [340] jmpifz [379] ............................ (case) ":editcatalogue":
  [343] pushsymb 200 ............................ <#session>
  [345] pusharglist 1 ........................... <#session>
  [347] extcall 112 ............................. <getObject(#session)>
  [349] pushcons 49 ............................. <"user_rights">
  [351] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [353] objcall 201 ............................. <getObject(#session).get("user_rights")>
  [355] pushcons 63 ............................. <"fuse_catalog_editor">
  [357] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_catalog_editor">
  [359] objcall 205 ............................. <getObject(#session).get("user_rights").getOne("fuse_catalog_editor")>
  [361] jmpifz [376] ............................ if getObject(#session).get("user_rights").getOne("fuse_catalog_editor") then
  [364] pop 1
  [366] pushcons 64 ............................. <"edit_catalogue">
  [368] pusharglist 1 ........................... <"edit_catalogue">
  [370] extcall 180 ............................. <executeMessage("edit_catalogue")>
  [372] pusharglistnoret 1 ...................... <executeMessage("edit_catalogue")>
  [374] extcall 116 ............................. return executeMessage("edit_catalogue")
  [376] jmp [421]
  [379] peek 0
  [381] pushcons 65 ............................. <":copypaste">
  [383] eq
  [384] jmpifz [421] ............................ (case) ":copypaste":
  [387] pushsymb 200 ............................ <#session>
  [389] pusharglist 1 ........................... <#session>
  [391] extcall 112 ............................. <getObject(#session)>
  [393] pushcons 49 ............................. <"user_rights">
  [395] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [397] objcall 201 ............................. <getObject(#session).get("user_rights")>
  [399] pushcons 60 ............................. <"fuse_debug_window">
  [401] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_debug_window">
  [403] objcall 205 ............................. <getObject(#session).get("user_rights").getOne("fuse_debug_window")>
  [405] jmpifz [421] ............................ if getObject(#session).get("user_rights").getOne("fuse_debug_window") then
  [408] pushint8 1 .............................. <1>
  [410] setmovieprop 588 ........................ the editShortcutsEnabled = 1
  [413] pop 1
  [415] pushint8 1 .............................. <1>
  [417] pusharglistnoret 1 ...................... <1>
  [419] extcall 116 ............................. return 1
  [421] pop 1 ................................... end case
  [423] pushsymb 200 ............................ <#session>
  [425] pusharglist 1 ........................... <#session>
  [427] extcall 112 ............................. <getObject(#session)>
  [429] pushcons 49 ............................. <"user_rights">
  [431] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [433] objcall 201 ............................. <getObject(#session).get("user_rights")>
  [435] pushcons 60 ............................. <"fuse_debug_window">
  [437] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_debug_window">
  [439] objcall 205 ............................. <getObject(#session).get("user_rights").getOne("fuse_debug_window")>
  [441] jmpifz [733] ............................ if getObject(#session).get("user_rights").getOne("fuse_debug_window") then
  [444] getparam 0 .............................. <me>
  [446] pusharglist 1 ........................... <me>
  [448] objcall 570 ............................. <me.getInterface()>
  [451] pusharglist 1 ........................... <me.getInterface()>
  [453] objcall 43 .............................. <me.getInterface().getKeywords()>
  [455] setlocal 0 .............................. tKeywords = me.getInterface().getKeywords()
  [457] getparam 1 .............................. <tChat>
  [459] pushsymb 435 ............................ <#word>
  [462] pushint8 1 .............................. <1>
  [464] pusharglist 3 ........................... <tChat, #word, 1>
  [466] objcall 134 ............................. <tChat.word[1]>
  [468] peek 0 .................................. case tChat.word[1] of
  [470] getlocal 0 .............................. <tKeywords>
  [472] pushint8 1 .............................. <1>
  [474] pusharglist 2 ........................... <tKeywords, 1>
  [476] objcall 138 ............................. <tKeywords[1]>
  [478] nteq
  [479] jmpifz [496] ............................ (case) tKeywords[1], ...
  [482] peek 0
  [484] getlocal 0 .............................. <tKeywords>
  [486] pushint8 2 .............................. <2>
  [488] pusharglist 2 ........................... <tKeywords, 2>
  [490] objcall 138 ............................. <tKeywords[2]>
  [492] eq
  [493] jmpifz [639] ............................ (case) ..., tKeywords[2]:
  [496] getmovieprop 590 ........................ <the productVersion>
  [499] pushsymb 425 ............................ <#char>
  [502] pushint8 1 .............................. <1>
  [504] pushint8 3 .............................. <3>
  [506] pusharglist 4 ........................... <the productVersion, #char, 1, 3>
  [508] objcall 134 ............................. <(the productVersion).char[1..3]>
  [510] pusharglist 1 ........................... <(the productVersion).char[1..3]>
  [512] extcall 589 ............................. <float((the productVersion).char[1..3])>
  [515] pushfloat32 8.5 ......................... <8.5>
  [520] gteq .................................... <float((the productVersion).char[1..3]) >= 8.5>
  [521] jmpifz [529] ............................ if float((the productVersion).char[1..3]) >= 8.5 then
  [524] pushint8 1 .............................. <1>
  [526] setmovieprop 591 ........................ the debugPlaybackEnabled = 1
  [529] pushcons 0 .............................. <"connection.info.id">
  [531] pusharglist 1 ........................... <"connection.info.id">
  [533] extcall 80 .............................. <getVariable("connection.info.id")>
  [535] setlocal 1 .............................. tInfoID = getVariable("connection.info.id")
  [537] getparam 1 .............................. <tChat>
  [539] pushsymb 435 ............................ <#word>
  [542] pushint8 1 .............................. <1>
  [544] pusharglist 3 ........................... <tChat, #word, 1>
  [546] objcall 134 ............................. <tChat.word[1]>
  [548] peek 0 .................................. case tChat.word[1] of
  [550] getlocal 0 .............................. <tKeywords>
  [552] pushint8 1 .............................. <1>
  [554] pusharglist 2 ........................... <tKeywords, 1>
  [556] objcall 138 ............................. <tKeywords[1]>
  [558] eq
  [559] jmpifz [589] ............................ (case) tKeywords[1]:
  [562] getlocal 1 .............................. <tInfoID>
  [564] pusharglist 1 ........................... <tInfoID>
  [566] extcall 457 ............................. <connectionExists(tInfoID)>
  [569] jmpifz [586] ............................ if connectionExists(tInfoID) then
  [572] getlocal 1 .............................. <tInfoID>
  [574] pusharglist 1 ........................... <tInfoID>
  [576] extcall 459 ............................. <getConnection(tInfoID)>
  [579] pushint8 1 .............................. <1>
  [581] pusharglistnoret 2 ...................... <getConnection(tInfoID), 1>
  [583] objcall 592 ............................. getConnection(tInfoID).setLogMode(1)
  [586] jmp [626]
  [589] peek 0
  [591] getlocal 0 .............................. <tKeywords>
  [593] pushint8 2 .............................. <2>
  [595] pusharglist 2 ........................... <tKeywords, 2>
  [597] objcall 138 ............................. <tKeywords[2]>
  [599] eq
  [600] jmpifz [626] ............................ (case) tKeywords[2]:
  [603] getlocal 1 .............................. <tInfoID>
  [605] pusharglist 1 ........................... <tInfoID>
  [607] extcall 457 ............................. <connectionExists(tInfoID)>
  [610] jmpifz [626] ............................ if connectionExists(tInfoID) then
  [613] getlocal 1 .............................. <tInfoID>
  [615] pusharglist 1 ........................... <tInfoID>
  [617] extcall 459 ............................. <getConnection(tInfoID)>
  [620] pushzero ................................ <0>
  [621] pusharglistnoret 2 ...................... <getConnection(tInfoID), 0>
  [623] objcall 592 ............................. getConnection(tInfoID).setLogMode(0)
  [626] pop 1 ................................... end case
  [628] pop 1
  [630] pushint8 1 .............................. <1>
  [632] pusharglistnoret 1 ...................... <1>
  [634] extcall 116 ............................. return 1
  [636] jmp [725]
  [639] peek 0
  [641] getlocal 0 .............................. <tKeywords>
  [643] pushint8 3 .............................. <3>
  [645] pusharglist 2 ........................... <tKeywords, 3>
  [647] objcall 138 ............................. <tKeywords[3]>
  [649] eq
  [650] jmpifz [725] ............................ (case) tKeywords[3]:
  [653] pushcons 66 ............................. <"System Debug Class">
  [655] pusharglist 1 ........................... <"System Debug Class">
  [657] extcall 122 ............................. <memberExists("System Debug Class")>
  [659] not ..................................... <not memberExists("System Debug Class")>
  [660] jmpifz [670] ............................ if not memberExists("System Debug Class") then
  [663] pop 1
  [665] pushzero ................................ <0>
  [666] pusharglistnoret 1 ...................... <0>
  [668] extcall 116 ............................. return 0
  [670] pushcons 67 ............................. <"loggertool">
  [672] pusharglist 1 ........................... <"loggertool">
  [674] extcall 268 ............................. <objectExists("loggertool")>
  [677] not ..................................... <not objectExists("loggertool")>
  [678] jmpifz [689] ............................ if not objectExists("loggertool") then
  [681] pushcons 67 ............................. <"loggertool">
  [683] pushcons 68 ............................. <"Debug System Class">
  [685] pusharglistnoret 2 ...................... <"loggertool", "Debug System Class">
  [687] extcall 109 ............................. createObject("loggertool", "Debug System Class")
  [689] pushcons 67 ............................. <"loggertool">
  [691] pusharglist 1 ........................... <"loggertool">
  [693] extcall 112 ............................. <getObject("loggertool")>
  [695] pushzero ................................ <0>
  [696] eq ...................................... <getObject("loggertool") = 0>
  [697] jmpifz [708] ............................ if getObject("loggertool") = 0 then
  [700] pop 1
  [702] pushint8 1 .............................. <1>
  [704] pusharglistnoret 1 ...................... <1>
  [706] extcall 116 ............................. return 1
  [708] pop 1
  [710] pushcons 67 ............................. <"loggertool">
  [712] pusharglist 1 ........................... <"loggertool">
  [714] extcall 112 ............................. <getObject("loggertool")>
  [716] pusharglist 1 ........................... <getObject("loggertool")>
  [718] objcall 593 ............................. <getObject("loggertool").initDebug()>
  [721] pusharglistnoret 1 ...................... <getObject("loggertool").initDebug()>
  [723] extcall 116 ............................. return getObject("loggertool").initDebug()
  [725] pop 1 ................................... end case
  [727] pusharglist 0 ........................... <>
  [729] extcall 120 ............................. <VOID>
  [731] setlocal 0 .............................. tKeywords = VOID
  [733] pusharglist 0 ........................... <>
  [735] thebuiltin 445 .......................... <the shiftDown>
  [738] jmpifz [748] ............................ if the shiftDown then / else
  [741] pushcons 69 ............................. <"SHOUT">
  [743] setlocal 2 .............................. tMode = "SHOUT"
  [745] jmp [759]
  [748] getprop 544 ............................. <pChatProps>
  [751] pushcons 16 ............................. <"mode">
  [753] pusharglist 2 ........................... <pChatProps, "mode">
  [755] objcall 138 ............................. <pChatProps["mode"]>
  [757] setlocal 2 .............................. tMode = pChatProps["mode"]
  [759] getparam 0 .............................. <me>
  [761] pusharglist 1 ........................... <me>
  [763] objcall 570 ............................. <me.getInterface()>
  [766] pusharglist 1 ........................... <me.getInterface()>
  [768] objcall 36 .............................. <me.getInterface().getSelectedObject()>
  [770] setlocal 3 .............................. tSelected = me.getInterface().getSelectedObject()
  [772] getparam 0 .............................. <me>
  [774] getlocal 3 .............................. <tSelected>
  [776] pusharglist 2 ........................... <me, tSelected>
  [778] objcall 223 ............................. <me.userObjectExists(tSelected)>
  [780] jmpifz [800] ............................ if me.userObjectExists(tSelected) then / else
  [783] getparam 0 .............................. <me>
  [785] getlocal 3 .............................. <tSelected>
  [787] pusharglist 2 ........................... <me, tSelected>
  [789] objcall 212 ............................. <me.getUserObject(tSelected)>
  [791] pusharglist 1 ........................... <me.getUserObject(tSelected)>
  [793] objcall 226 ............................. <me.getUserObject(tSelected).getName()>
  [795] setlocal 3 .............................. tSelected = me.getUserObject(tSelected).getName()
  [797] jmp [804]
  [800] pushcons 2 .............................. <EMPTY>
  [802] setlocal 3 .............................. tSelected = EMPTY
  [804] getprop 544 ............................. <pChatProps>
  [807] pushcons 18 ............................. <"hobbaCmds">
  [809] pusharglist 2 ........................... <pChatProps, "hobbaCmds">
  [811] objcall 138 ............................. <pChatProps["hobbaCmds"]>
  [813] getparam 1 .............................. <tChat>
  [815] pushsymb 435 ............................ <#word>
  [818] pushint8 1 .............................. <1>
  [820] pushint8 2 .............................. <2>
  [822] pusharglist 4 ........................... <tChat, #word, 1, 2>
  [824] objcall 134 ............................. <tChat.word[1..2]>
  [826] pusharglist 2 ........................... <pChatProps["hobbaCmds"], tChat.word[1..2]>
  [828] objcall 205 ............................. <pChatProps["hobbaCmds"].getOne(tChat.word[1..2])>
  [830] jmpifz [923] ............................ if pChatProps["hobbaCmds"].getOne(tChat.word[1..2]) then / else
  [833] pushcons 17 ............................. <"CHAT">
  [835] setlocal 2 .............................. tMode = "CHAT"
  [837] getparam 1 .............................. <tChat>
  [839] pushsymb 435 ............................ <#word>
  [842] pushint8 2 .............................. <2>
  [844] pusharglist 3 ........................... <tChat, #word, 2>
  [846] objcall 134 ............................. <tChat.word[2]>
  [848] pushcons 70 ............................. <"x">
  [850] eq ...................................... <tChat.word[2] = "x">
  [851] jmpifz [920] ............................ if tChat.word[2] = "x" then
  [854] getlocal 3 .............................. <tSelected>
  [856] pushcons 2 .............................. <EMPTY>
  [858] eq ...................................... <tSelected = EMPTY>
  [859] jmpifz [868] ............................ if tSelected = EMPTY then
  [862] pushint8 1 .............................. <1>
  [864] pusharglistnoret 1 ...................... <1>
  [866] extcall 116 ............................. return 1
  [868] pushcons 70 ............................. <"x">
  [870] getparam 1 .............................. <tChat>
  [872] pusharglist 2 ........................... <"x", tChat>
  [874] extcall 594 ............................. <offset("x", tChat)>
  [877] setlocal 4 .............................. tOffsetX = offset("x", tChat)
  [879] getparam 1 .............................. <tChat>
  [881] pushsymb 425 ............................ <#char>
  [884] pushint8 1 .............................. <1>
  [886] getlocal 4 .............................. <tOffsetX>
  [888] pushint8 1 .............................. <1>
  [890] sub ..................................... <tOffsetX - 1>
  [891] pusharglist 4 ........................... <tChat, #char, 1, tOffsetX - 1>
  [893] objcall 134 ............................. <tChat.char[1..tOffsetX - 1]>
  [895] getlocal 3 .............................. <tSelected>
  [897] joinstr ................................. <tChat.char[1..tOffsetX - 1] & tSelected>
  [898] getparam 1 .............................. <tChat>
  [900] pushsymb 425 ............................ <#char>
  [903] getlocal 4 .............................. <tOffsetX>
  [905] pushint8 1 .............................. <1>
  [907] add ..................................... <tOffsetX + 1>
  [908] getparam 1 .............................. <tChat>
  [910] getobjprop 595 .......................... <tChat.length>
  [913] pusharglist 4 ........................... <tChat, #char, tOffsetX + 1, tChat.length>
  [915] objcall 134 ............................. <tChat.char[tOffsetX + 1..tChat.length]>
  [917] joinstr ................................. <tChat.char[1..tOffsetX - 1] & tSelected & tChat.char[tOffsetX + 1..tChat.length]>
  [918] setparam 1 .............................. tChat = tChat.char[1..tOffsetX - 1] & tSelected & tChat.char[tOffsetX + 1..tChat.length]
  [920] jmp [938]
  [923] getlocal 2 .............................. <tMode>
  [925] pushcons 71 ............................. <"WHISPER">
  [927] eq ...................................... <tMode = "WHISPER">
  [928] jmpifz [938] ............................ if tMode = "WHISPER" then
  [931] getlocal 3 .............................. <tSelected>
  [933] getparam 1 .............................. <tChat>
  [935] joinpadstr .............................. <tSelected && tChat>
  [936] setparam 1 .............................. tChat = tSelected && tChat
  [938] getparam 0 .............................. <me>
  [940] pusharglist 1 ........................... <me>
  [942] objcall 368 ............................. <me.getRoomConnection()>
  [945] getlocal 2 .............................. <tMode>
  [947] pushsymb 596 ............................ <#string>
  [950] getparam 1 .............................. <tChat>
  [952] pusharglist 2 ........................... <[#string: tChat]>
  [954] pushproplist ............................ <[#string: tChat]>
  [955] pusharglist 3 ........................... <me.getRoomConnection(), tMode, [#string: tChat]>
  [957] objcall 369 ............................. <me.getRoomConnection().send(tMode, [#string: tChat])>
  [960] pusharglistnoret 1 ...................... <me.getRoomConnection().send(tMode, [#string: tChat])>
  [962] extcall 116 ............................. return me.getRoomConnection().send(tMode, [#string: tChat])
  [964] ret
end

on setChatMode me, tMode, tUpdate
  [  0] getparam 1 .............................. <tMode>
  [  2] peek 0 .................................. case tMode of
  [  4] pushcons 72 ............................. <"whisper">
  [  6] eq
  [  7] jmpifz [ 24] ............................ (case) "whisper":
  [ 10] getprop 544 ............................. <pChatProps>
  [ 13] pushcons 16 ............................. <"mode">
  [ 15] pushcons 71 ............................. <"WHISPER">
  [ 17] pusharglistnoret 3 ...................... <pChatProps, "mode", "WHISPER">
  [ 19] objcall 136 ............................. pChatProps["mode"] = "WHISPER"
  [ 21] jmp [ 57]
  [ 24] peek 0
  [ 26] pushcons 73 ............................. <"shout">
  [ 28] eq
  [ 29] jmpifz [ 46] ............................ (case) "shout":
  [ 32] getprop 544 ............................. <pChatProps>
  [ 35] pushcons 16 ............................. <"mode">
  [ 37] pushcons 69 ............................. <"SHOUT">
  [ 39] pusharglistnoret 3 ...................... <pChatProps, "mode", "SHOUT">
  [ 41] objcall 136 ............................. pChatProps["mode"] = "SHOUT"
  [ 43] jmp [ 57] ............................... (case) otherwise:
  [ 46] getprop 544 ............................. <pChatProps>
  [ 49] pushcons 16 ............................. <"mode">
  [ 51] pushcons 17 ............................. <"CHAT">
  [ 53] pusharglistnoret 3 ...................... <pChatProps, "mode", "CHAT">
  [ 55] objcall 136 ............................. pChatProps["mode"] = "CHAT"
  [ 57] pop 1 ................................... end case
  [ 59] getparam 2 .............................. <tUpdate>
  [ 61] jmpifz [ 77] ............................ if tUpdate then
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 1 ........................... <me>
  [ 68] objcall 570 ............................. <me.getInterface()>
  [ 71] getparam 1 .............................. <tMode>
  [ 73] pusharglistnoret 2 ...................... <me.getInterface(), tMode>
  [ 75] objcall 41 .............................. me.getInterface().setSpeechDropdown(tMode)
  [ 77] pushint8 1 .............................. <1>
  [ 79] pusharglistnoret 1 ...................... <1>
  [ 81] extcall 116 ............................. return 1
  [ 83] ret
end

on print me
  [  0] pushcons 22 ............................. <RETURN>
  [  2] pushcons 74 ............................. <"User objects:">
  [  4] joinstr ................................. <RETURN & "User objects:">
  [  5] pushcons 22 ............................. <RETURN>
  [  7] joinstr ................................. <RETURN & "User objects:" & RETURN>
  [  8] pusharglistnoret 1 ...................... <RETURN & "User objects:" & RETURN>
  [ 10] extcall 474 ............................. put RETURN & "User objects:" & RETURN
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 0
  [ 17] getlocal 0
  [ 19] getprop 531 ............................. <pUserObjList>
  [ 22] getobjprop 149 .......................... <pUserObjList.count>
  [ 24] lteq
  [ 25] jmpifz [ 65] ............................ repeat with i = 1 to pUserObjList.count
  [ 28] getprop 531 ............................. <pUserObjList>
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 2 ........................... <pUserObjList, i>
  [ 35] objcall 317 ............................. <pUserObjList.getPropAt(i)>
  [ 38] pushcons 47 ............................. <":">
  [ 40] joinstr ................................. <pUserObjList.getPropAt(i) & ":">
  [ 41] getprop 531 ............................. <pUserObjList>
  [ 44] getlocal 0 .............................. <i>
  [ 46] pusharglist 2 ........................... <pUserObjList, i>
  [ 48] objcall 138 ............................. <pUserObjList[i]>
  [ 50] joinpadstr .............................. <pUserObjList.getPropAt(i) & ":" && pUserObjList[i]>
  [ 51] pusharglistnoret 1 ...................... <pUserObjList.getPropAt(i) & ":" && pUserObjList[i]>
  [ 53] extcall 474 ............................. put pUserObjList.getPropAt(i) & ":" && pUserObjList[i]
  [ 56] pushint8 1
  [ 58] getlocal 0
  [ 60] add
  [ 61] setlocal 0
  [ 63] endrepeat [ 17]
  [ 65] pushcons 22 ............................. <RETURN>
  [ 67] pushcons 75 ............................. <"Active objects:">
  [ 69] joinstr ................................. <RETURN & "Active objects:">
  [ 70] pushcons 22 ............................. <RETURN>
  [ 72] joinstr ................................. <RETURN & "Active objects:" & RETURN>
  [ 73] pusharglistnoret 1 ...................... <RETURN & "Active objects:" & RETURN>
  [ 75] extcall 474 ............................. put RETURN & "Active objects:" & RETURN
  [ 78] pushint8 1 .............................. <1>
  [ 80] setlocal 0
  [ 82] getlocal 0
  [ 84] getprop 532 ............................. <pActiveObjList>
  [ 87] getobjprop 149 .......................... <pActiveObjList.count>
  [ 89] lteq
  [ 90] jmpifz [130] ............................ repeat with i = 1 to pActiveObjList.count
  [ 93] getprop 532 ............................. <pActiveObjList>
  [ 96] getlocal 0 .............................. <i>
  [ 98] pusharglist 2 ........................... <pActiveObjList, i>
  [100] objcall 317 ............................. <pActiveObjList.getPropAt(i)>
  [103] pushcons 47 ............................. <":">
  [105] joinstr ................................. <pActiveObjList.getPropAt(i) & ":">
  [106] getprop 532 ............................. <pActiveObjList>
  [109] getlocal 0 .............................. <i>
  [111] pusharglist 2 ........................... <pActiveObjList, i>
  [113] objcall 138 ............................. <pActiveObjList[i]>
  [115] joinpadstr .............................. <pActiveObjList.getPropAt(i) & ":" && pActiveObjList[i]>
  [116] pusharglistnoret 1 ...................... <pActiveObjList.getPropAt(i) & ":" && pActiveObjList[i]>
  [118] extcall 474 ............................. put pActiveObjList.getPropAt(i) & ":" && pActiveObjList[i]
  [121] pushint8 1
  [123] getlocal 0
  [125] add
  [126] setlocal 0
  [128] endrepeat [ 82]
  [130] pushcons 22 ............................. <RETURN>
  [132] pushcons 76 ............................. <"Passive objects:">
  [134] joinstr ................................. <RETURN & "Passive objects:">
  [135] pushcons 22 ............................. <RETURN>
  [137] joinstr ................................. <RETURN & "Passive objects:" & RETURN>
  [138] pusharglistnoret 1 ...................... <RETURN & "Passive objects:" & RETURN>
  [140] extcall 474 ............................. put RETURN & "Passive objects:" & RETURN
  [143] pushint8 1 .............................. <1>
  [145] setlocal 0
  [147] getlocal 0
  [149] getprop 533 ............................. <pPassiveObjList>
  [152] getobjprop 149 .......................... <pPassiveObjList.count>
  [154] lteq
  [155] jmpifz [195] ............................ repeat with i = 1 to pPassiveObjList.count
  [158] getprop 533 ............................. <pPassiveObjList>
  [161] getlocal 0 .............................. <i>
  [163] pusharglist 2 ........................... <pPassiveObjList, i>
  [165] objcall 317 ............................. <pPassiveObjList.getPropAt(i)>
  [168] pushcons 47 ............................. <":">
  [170] joinstr ................................. <pPassiveObjList.getPropAt(i) & ":">
  [171] getprop 533 ............................. <pPassiveObjList>
  [174] getlocal 0 .............................. <i>
  [176] pusharglist 2 ........................... <pPassiveObjList, i>
  [178] objcall 138 ............................. <pPassiveObjList[i]>
  [180] joinpadstr .............................. <pPassiveObjList.getPropAt(i) & ":" && pPassiveObjList[i]>
  [181] pusharglistnoret 1 ...................... <pPassiveObjList.getPropAt(i) & ":" && pPassiveObjList[i]>
  [183] extcall 474 ............................. put pPassiveObjList.getPropAt(i) & ":" && pPassiveObjList[i]
  [186] pushint8 1
  [188] getlocal 0
  [190] add
  [191] setlocal 0
  [193] endrepeat [147]
  [195] ret
end

on addSlideObject me, tid, tFromLoc, tToLoc, tTimeNow, tHasCharacter
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 603 .......................... <the paramCount>
  [  5] pushint8 4 .............................. <4>
  [  7] lt ...................................... <the paramCount < 4>
  [  8] jmpifz [ 26] ............................ if the paramCount < 4 then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 77 ............................. <"Wrong parameter count">
  [ 15] pushsymb 496 ............................ <#addSlideObject>
  [ 18] pusharglist 3 ........................... <me, "Wrong parameter count", #addSlideObject>
  [ 20] extcall 123 ............................. <error(me, "Wrong parameter count", #addSlideObject)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Wrong parameter count", #addSlideObject)>
  [ 24] extcall 116 ............................. return error(me, "Wrong parameter count", #addSlideObject)
  [ 26] getparam 1 .............................. <tid>
  [ 28] getobjprop 596 .......................... <tid.string>
  [ 31] setparam 1 .............................. tid = tid.string
  [ 33] getparam 4 .............................. <tTimeNow>
  [ 35] pusharglist 1 ........................... <tTimeNow>
  [ 37] extcall 253 ............................. <voidp(tTimeNow)>
  [ 39] jmpifz [ 47] ............................ if voidp(tTimeNow) then
  [ 42] getmovieprop 407 ........................ <the milliSeconds>
  [ 45] setparam 4 .............................. tTimeNow = the milliSeconds
  [ 47] getparam 5 .............................. <tHasCharacter>
  [ 49] pusharglist 1 ........................... <tHasCharacter>
  [ 51] extcall 253 ............................. <voidp(tHasCharacter)>
  [ 53] jmpifz [ 59] ............................ if voidp(tHasCharacter) then
  [ 56] pushzero ................................ <0>
  [ 57] setparam 5 .............................. tHasCharacter = 0
  [ 59] getprop 532 ............................. <pActiveObjList>
  [ 62] getparam 1 .............................. <tid>
  [ 64] pusharglist 2 ........................... <pActiveObjList, tid>
  [ 66] objcall 138 ............................. <pActiveObjList[tid]>
  [ 68] pusharglist 1 ........................... <pActiveObjList[tid]>
  [ 70] extcall 253 ............................. <voidp(pActiveObjList[tid])>
  [ 72] not ..................................... <not voidp(pActiveObjList[tid])>
  [ 73] jmpifz [113] ............................ if not voidp(pActiveObjList[tid]) then
  [ 76] getprop 532 ............................. <pActiveObjList>
  [ 79] getparam 1 .............................. <tid>
  [ 81] pusharglist 2 ........................... <pActiveObjList, tid>
  [ 83] objcall 138 ............................. <pActiveObjList[tid]>
  [ 85] setlocal 0 .............................. tObj = pActiveObjList[tid]
  [ 87] getlocal 0 .............................. <tObj>
  [ 89] getparam 2 .............................. <tFromLoc>
  [ 91] getparam 3 .............................. <tToLoc>
  [ 93] getparam 4 .............................. <tTimeNow>
  [ 95] getparam 5 .............................. <tHasCharacter>
  [ 97] pusharglistnoret 5 ...................... <tObj, tFromLoc, tToLoc, tTimeNow, tHasCharacter>
  [ 99] objcall 604 ............................. tObj.setSlideTo(tFromLoc, tToLoc, tTimeNow, tHasCharacter)
  [102] getprop 549 ............................. <pCurrentSlidingObjects>
  [105] getparam 1 .............................. <tid>
  [107] getlocal 0 .............................. <tObj>
  [109] pusharglistnoret 3 ...................... <pCurrentSlidingObjects, tid, tObj>
  [111] objcall 136 ............................. pCurrentSlidingObjects[tid] = tObj
  [113] ret
end

on removeSlideObject me, tid
  [  0] getparam 1 .............................. <tid>
  [  2] getobjprop 596 .......................... <tid.string>
  [  5] setparam 1 .............................. tid = tid.string
  [  7] getprop 549 ............................. <pCurrentSlidingObjects>
  [ 10] getparam 1 .............................. <tid>
  [ 12] pusharglist 2 ........................... <pCurrentSlidingObjects, tid>
  [ 14] objcall 138 ............................. <pCurrentSlidingObjects[tid]>
  [ 16] pusharglist 1 ........................... <pCurrentSlidingObjects[tid]>
  [ 18] extcall 253 ............................. <voidp(pCurrentSlidingObjects[tid])>
  [ 20] not ..................................... <not voidp(pCurrentSlidingObjects[tid])>
  [ 21] jmpifz [ 34] ............................ if not voidp(pCurrentSlidingObjects[tid]) then
  [ 24] getprop 549 ............................. <pCurrentSlidingObjects>
  [ 27] getparam 1 .............................. <tid>
  [ 29] pusharglistnoret 2 ...................... <pCurrentSlidingObjects, tid>
  [ 31] objcall 609 ............................. pCurrentSlidingObjects.deleteProp(tid)
  [ 34] ret
end

on roomPrePartFinished me
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 29 ............................ <getInterstitial()>
  [  4] pusharglist 1 ........................... <getInterstitial()>
  [  6] objcall 610 ............................. <getInterstitial().isAdFinished()>
  [  9] setlocal 0 .............................. tInterstFinished = getInterstitial().isAdFinished()
  [ 11] getprop 547 ............................. <pCastLoaded>
  [ 14] pushzero ................................ <0>
  [ 15] eq ...................................... <pCastLoaded = 0>
  [ 16] getlocal 0 .............................. <tInterstFinished>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <tInterstFinished = 0>
  [ 20] or ...................................... <(pCastLoaded = 0) or (tInterstFinished = 0)>
  [ 21] jmpifz [ 29] ............................ if (pCastLoaded = 0) or (tInterstFinished = 0) then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 116 ............................. return 0
  [ 29] getprop 186 ............................. <pSaveData>
  [ 31] pushsymb 184 ............................ <#type>
  [ 33] pusharglist 2 ........................... <pSaveData, #type>
  [ 35] objcall 138 ............................. <pSaveData[#type]>
  [ 37] pushsymb 185 ............................ <#private>
  [ 39] eq ...................................... <pSaveData[#type] = #private>
  [ 40] jmpifz [ 68] ............................ if pSaveData[#type] = #private then / else
  [ 43] getprop 186 ............................. <pSaveData>
  [ 45] pushsymb 359 ............................ <#id>
  [ 48] pusharglist 2 ........................... <pSaveData, #id>
  [ 50] objcall 138 ............................. <pSaveData[#id]>
  [ 52] pusharglist 1 ........................... <pSaveData[#id]>
  [ 54] extcall 426 ............................. <integer(pSaveData[#id])>
  [ 57] setlocal 1 .............................. tRoomID = integer(pSaveData[#id])
  [ 59] pushzero ................................ <0>
  [ 60] setlocal 2 .............................. tDoorID = 0
  [ 62] pushzero ................................ <0>
  [ 63] setlocal 3 .............................. tTypeID = 0
  [ 65] jmp [104]
  [ 68] getprop 186 ............................. <pSaveData>
  [ 70] pushsymb 558 ............................ <#port>
  [ 73] pusharglist 2 ........................... <pSaveData, #port>
  [ 75] objcall 138 ............................. <pSaveData[#port]>
  [ 77] pusharglist 1 ........................... <pSaveData[#port]>
  [ 79] extcall 426 ............................. <integer(pSaveData[#port])>
  [ 82] setlocal 1 .............................. tRoomID = integer(pSaveData[#port])
  [ 84] getprop 186 ............................. <pSaveData>
  [ 86] pushsymb 576 ............................ <#door>
  [ 89] pusharglist 2 ........................... <pSaveData, #door>
  [ 91] objcall 138 ............................. <pSaveData[#door]>
  [ 93] pusharglist 1 ........................... <pSaveData[#door]>
  [ 95] extcall 426 ............................. <integer(pSaveData[#door])>
  [ 98] setlocal 2 .............................. tDoorID = integer(pSaveData[#door])
  [100] pushint8 1 .............................. <1>
  [102] setlocal 3 .............................. tTypeID = 1
  [104] getlocal 2 .............................. <tDoorID>
  [106] getobjprop 215 .......................... <tDoorID.ilk>
  [108] pushsymb 120 ............................ <#void>
  [110] eq ...................................... <tDoorID.ilk = #void>
  [111] jmpifz [117] ............................ if tDoorID.ilk = #void then
  [114] pushzero ................................ <0>
  [115] setlocal 2 .............................. tDoorID = 0
  [117] getprop 81 .............................. <pRoomConnID>
  [119] pusharglist 1 ........................... <pRoomConnID>
  [121] extcall 459 ............................. <getConnection(pRoomConnID)>
  [124] pushsymb 577 ............................ <#room_directory>
  [127] pushsymb 578 ............................ <#boolean>
  [130] getlocal 3 .............................. <tTypeID>
  [132] pushsymb 426 ............................ <#integer>
  [135] getlocal 1 .............................. <tRoomID>
  [137] pushsymb 426 ............................ <#integer>
  [140] getlocal 2 .............................. <tDoorID>
  [142] pusharglist 6 ........................... <[#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [144] pushproplist ............................ <[#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [145] pusharglist 3 ........................... <getConnection(pRoomConnID), #room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [147] objcall 369 ............................. <getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])>
  [150] pusharglistnoret 1 ...................... <getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])>
  [152] extcall 116 ............................. return getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])
  [154] pushint8 1 .............................. <1>
  [156] pusharglistnoret 1 ...................... <1>
  [158] extcall 116 ............................. return 1
  [160] ret
end

on getSpectatorMode me
  [  0] getprop 541 ............................. <pSpectatorSystemID>
  [  3] pusharglist 1 ........................... <pSpectatorSystemID>
  [  5] extcall 112 ............................. <getObject(pSpectatorSystemID)>
  [  7] setlocal 0 .............................. tModeMgrObj = getObject(pSpectatorSystemID)
  [  9] getlocal 0 .............................. <tModeMgrObj>
  [ 11] pushzero ................................ <0>
  [ 12] eq ...................................... <tModeMgrObj = 0>
  [ 13] jmpifz [ 30] ............................ if tModeMgrObj = 0 then
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 78 ............................. <"Spectator System missing!">
  [ 20] pushsymb 174 ............................ <#getSpectatorMode>
  [ 22] pusharglist 3 ........................... <me, "Spectator System missing!", #getSpectatorMode>
  [ 24] extcall 123 ............................. <error(me, "Spectator System missing!", #getSpectatorMode)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "Spectator System missing!", #getSpectatorMode)>
  [ 28] extcall 116 ............................. return error(me, "Spectator System missing!", #getSpectatorMode)
  [ 30] getlocal 0 .............................. <tModeMgrObj>
  [ 32] pusharglist 1 ........................... <tModeMgrObj>
  [ 34] objcall 174 ............................. <tModeMgrObj.getSpectatorMode()>
  [ 36] pusharglistnoret 1 ...................... <tModeMgrObj.getSpectatorMode()>
  [ 38] extcall 116 ............................. return tModeMgrObj.getSpectatorMode()
  [ 40] ret
end

on setSpectatorMode me, tstate
  [  0] getprop 541 ............................. <pSpectatorSystemID>
  [  3] pusharglist 1 ........................... <pSpectatorSystemID>
  [  5] extcall 112 ............................. <getObject(pSpectatorSystemID)>
  [  7] setlocal 0 .............................. tModeMgrObj = getObject(pSpectatorSystemID)
  [  9] getlocal 0 .............................. <tModeMgrObj>
  [ 11] pushzero ................................ <0>
  [ 12] eq ...................................... <tModeMgrObj = 0>
  [ 13] jmpifz [ 31] ............................ if tModeMgrObj = 0 then
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 78 ............................. <"Spectator System missing!">
  [ 20] pushsymb 419 ............................ <#setSpectatorMode>
  [ 23] pusharglist 3 ........................... <me, "Spectator System missing!", #setSpectatorMode>
  [ 25] extcall 123 ............................. <error(me, "Spectator System missing!", #setSpectatorMode)>
  [ 27] pusharglistnoret 1 ...................... <error(me, "Spectator System missing!", #setSpectatorMode)>
  [ 29] extcall 116 ............................. return error(me, "Spectator System missing!", #setSpectatorMode)
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 183 ............................. <me.getRoomData()>
  [ 37] setlocal 1 .............................. tRoomData = me.getRoomData()
  [ 39] getlocal 1 .............................. <tRoomData>
  [ 41] pushzero ................................ <0>
  [ 42] eq ...................................... <tRoomData = 0>
  [ 43] jmpifz [ 54] ............................ if tRoomData = 0 then / else
  [ 46] pushsymb 613 ............................ <#public>
  [ 49] setlocal 2 .............................. tRoomType = #public
  [ 51] jmp [ 64]
  [ 54] getlocal 1 .............................. <tRoomData>
  [ 56] pushsymb 184 ............................ <#type>
  [ 58] pusharglist 2 ........................... <tRoomData, #type>
  [ 60] objcall 138 ............................. <tRoomData[#type]>
  [ 62] setlocal 2 .............................. tRoomType = tRoomData[#type]
  [ 64] getlocal 0 .............................. <tModeMgrObj>
  [ 66] getparam 1 .............................. <tstate>
  [ 68] getlocal 2 .............................. <tRoomType>
  [ 70] pusharglist 3 ........................... <tModeMgrObj, tstate, tRoomType>
  [ 72] objcall 419 ............................. <tModeMgrObj.setSpectatorMode(tstate, tRoomType)>
  [ 75] pusharglistnoret 1 ...................... <tModeMgrObj.setSpectatorMode(tstate, tRoomType)>
  [ 77] extcall 116 ............................. return tModeMgrObj.setSpectatorMode(tstate, tRoomType)
  [ 79] ret
end

on pickAndGoCFH me, tSender
  [  0] getparam 1 .............................. <tSender>
  [  2] pusharglist 1 ........................... <tSender>
  [  4] extcall 284 ............................. <stringp(tSender)>
  [  7] not ..................................... <not stringp(tSender)>
  [  8] jmpifz [ 16] ............................ if not stringp(tSender) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 116 ............................. return 0
  [ 16] getparam 1 .............................. <tSender>
  [ 18] setprop 530 ............................. pPickedCryName = tSender
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 116 ............................. return 1
  [ 27] ret
end

on getPickedCryName me
  [  0] getprop 530 ............................. <pPickedCryName>
  [  3] pusharglistnoret 1 ...................... <pPickedCryName>
  [  5] extcall 116 ............................. return pPickedCryName
  [  7] ret
end

on showCfhSenderDelayed me, tid
  [  0] pushcons 2 .............................. <EMPTY>
  [  2] setprop 530 ............................. pPickedCryName = EMPTY
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 570 ............................. <me.getInterface()>
  [ 12] getparam 1 .............................. <tid>
  [ 14] pusharglist 2 ........................... <me.getInterface(), tid>
  [ 16] objcall 57 .............................. <me.getInterface().showCfhSenderDelayed(tid)>
  [ 18] pusharglistnoret 1 ...................... <me.getInterface().showCfhSenderDelayed(tid)>
  [ 20] extcall 116 ............................. return me.getInterface().showCfhSenderDelayed(tid)
  [ 22] ret
end

on loadRoomCasts me
  [  0] getprop 524 ............................. <pRoomId>
  [  3] pushcons 2 .............................. <EMPTY>
  [  5] eq ...................................... <pRoomId = EMPTY>
  [  6] jmpifz [ 14] ............................ if pRoomId = EMPTY then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 116 ............................. return 0
  [ 14] pushcons 79 ............................. <"room.cast.">
  [ 16] setlocal 0 .............................. tCastVarPrefix = "room.cast."
  [ 18] getparam 0 .............................. <me>
  [ 20] getlocal 0 .............................. <tCastVarPrefix>
  [ 22] getlocal 1 .............................. <tCastList>
  [ 24] pusharglist 3 ........................... <me, tCastVarPrefix, tCastList>
  [ 26] objcall 523 ............................. <me.addToCastDownloadList(tCastVarPrefix, tCastList)>
  [ 29] setlocal 1 .............................. tCastList = me.addToCastDownloadList(tCastVarPrefix, tCastList)
  [ 31] getprop 186 ............................. <pSaveData>
  [ 33] pushsymb 184 ............................ <#type>
  [ 35] pusharglist 2 ........................... <pSaveData, #type>
  [ 37] objcall 138 ............................. <pSaveData[#type]>
  [ 39] pushsymb 613 ............................ <#public>
  [ 42] eq ...................................... <pSaveData[#type] = #public>
  [ 43] jmpifz [ 50] ............................ if pSaveData[#type] = #public then
  [ 46] pushzero ................................ <0>
  [ 47] setprop 548 ............................. pPrvRoomsReady = 0
  [ 50] getprop 186 ............................. <pSaveData>
  [ 52] pushsymb 184 ............................ <#type>
  [ 54] pusharglist 2 ........................... <pSaveData, #type>
  [ 56] objcall 138 ............................. <pSaveData[#type]>
  [ 58] pushsymb 185 ............................ <#private>
  [ 60] eq ...................................... <pSaveData[#type] = #private>
  [ 61] jmpifz [109] ............................ if pSaveData[#type] = #private then
  [ 64] getparam 0 .............................. <me>
  [ 66] getprop 186 ............................. <pSaveData>
  [ 68] pushsymb 560 ............................ <#marker>
  [ 71] pusharglist 2 ........................... <pSaveData, #marker>
  [ 73] objcall 138 ............................. <pSaveData[#marker]>
  [ 75] pusharglist 2 ........................... <me, pSaveData[#marker]>
  [ 77] objcall 522 ............................. <me.getRoomScale(pSaveData[#marker])>
  [ 80] pushsymb 562 ............................ <#small>
  [ 83] eq ...................................... <me.getRoomScale(pSaveData[#marker]) = #small>
  [ 84] jmpifz [109] ............................ if me.getRoomScale(pSaveData[#marker]) = #small then
  [ 87] pushcons 80 ............................. <"room.cast.small.">
  [ 89] setlocal 0 .............................. tCastVarPrefix = "room.cast.small."
  [ 91] getparam 0 .............................. <me>
  [ 93] getlocal 0 .............................. <tCastVarPrefix>
  [ 95] getlocal 1 .............................. <tCastList>
  [ 97] pusharglist 3 ........................... <me, tCastVarPrefix, tCastList>
  [ 99] objcall 523 ............................. <me.addToCastDownloadList(tCastVarPrefix, tCastList)>
  [102] setlocal 1 .............................. tCastList = me.addToCastDownloadList(tCastVarPrefix, tCastList)
  [104] pushint8 1 .............................. <1>
  [106] setprop 548 ............................. pPrvRoomsReady = 1
  [109] getlocal 1 .............................. <tCastList>
  [111] getobjprop 149 .......................... <tCastList.count>
  [113] pushzero ................................ <0>
  [114] gt ...................................... <tCastList.count > 0>
  [115] jmpifz [178] ............................ if tCastList.count > 0 then
  [118] getlocal 1 .............................. <tCastList>
  [120] pushint8 1 .............................. <1>
  [122] pusharglist 2 ........................... <tCastList, 1>
  [124] extcall 617 ............................. <startCastLoad(tCastList, 1)>
  [127] setlocal 2 .............................. tCastLoadId = startCastLoad(tCastList, 1)
  [129] getlocal 2 .............................. <tCastLoadId>
  [131] pushsymb 501 ............................ <#loadRoomCasts>
  [134] getparam 0 .............................. <me>
  [136] pusharglist 1 ........................... <me>
  [138] objcall 115 ............................. <me.getID()>
  [140] pusharglistnoret 3 ...................... <tCastLoadId, #loadRoomCasts, me.getID()>
  [142] extcall 618 ............................. registerCastloadCallback(tCastLoadId, #loadRoomCasts, me.getID())
  [145] getparam 0 .............................. <me>
  [147] pusharglist 1 ........................... <me>
  [149] objcall 570 ............................. <me.getInterface()>
  [152] getlocal 2 .............................. <tCastLoadId>
  [154] pushcons 81 ............................. <"room_hold">
  [156] pushcons 82 ............................. <"room_loading">
  [158] pushcons 83 ............................. <"Hold on...">
  [160] pusharglist 2 ........................... <"room_loading", "Hold on...">
  [162] extcall 95 .............................. <getText("room_loading", "Hold on...")>
  [164] pusharglist 2 ........................... <"room_hold", getText("room_loading", "Hold on...")>
  [166] extcall 95 .............................. <getText("room_hold", getText("room_loading", "Hold on..."))>
  [168] pusharglistnoret 3 ...................... <me.getInterface(), tCastLoadId, getText("room_hold", getText("room_loading", "Hold on..."))>
  [170] objcall 21 .............................. me.getInterface().showLoaderBar(tCastLoadId, getText("room_hold", getText("room_loading", "Hold on...")))
  [172] pushint8 1 .............................. <1>
  [174] pusharglistnoret 1 ...................... <1>
  [176] extcall 116 ............................. return 1
  [178] getprop 186 ............................. <pSaveData>
  [180] pushsymb 561 ............................ <#casts>
  [183] pusharglist 2 ........................... <pSaveData, #casts>
  [185] objcall 138 ............................. <pSaveData[#casts]>
  [187] pusharglist 1 ........................... <pSaveData[#casts]>
  [189] extcall 253 ............................. <voidp(pSaveData[#casts])>
  [191] jmpifz [206] ............................ if voidp(pSaveData[#casts]) then
  [194] getprop 186 ............................. <pSaveData>
  [196] pushsymb 561 ............................ <#casts>
  [199] pusharglist 0 ........................... <[]>
  [201] pushlist ................................ <[]>
  [202] pusharglistnoret 3 ...................... <pSaveData, #casts, []>
  [204] objcall 136 ............................. pSaveData[#casts] = []
  [206] getprop 186 ............................. <pSaveData>
  [208] pushsymb 561 ............................ <#casts>
  [211] pusharglist 2 ........................... <pSaveData, #casts>
  [213] objcall 138 ............................. <pSaveData[#casts]>
  [215] getobjprop 149 .......................... <pSaveData[#casts].count>
  [217] pushint8 1 .............................. <1>
  [219] lt ...................................... <pSaveData[#casts].count < 1>
  [220] jmpifz [256] ............................ if pSaveData[#casts].count < 1 then
  [223] getparam 0 .............................. <me>
  [225] pushcons 84 ............................. <"Cast for room not defined:">
  [227] getprop 524 ............................. <pRoomId>
  [230] joinpadstr .............................. <"Cast for room not defined:" && pRoomId>
  [231] pushsymb 501 ............................ <#loadRoomCasts>
  [234] pusharglistnoret 3 ...................... <me, "Cast for room not defined:" && pRoomId, #loadRoomCasts>
  [236] extcall 123 ............................. error(me, "Cast for room not defined:" && pRoomId, #loadRoomCasts)
  [238] getparam 0 .............................. <me>
  [240] pusharglist 1 ........................... <me>
  [242] objcall 570 ............................. <me.getInterface()>
  [245] pusharglistnoret 1 ...................... <me.getInterface()>
  [247] objcall 22 .............................. me.getInterface().hideLoaderBar()
  [249] pushsymb 462 ............................ <#leaveRoom>
  [252] pusharglistnoret 1 ...................... <#leaveRoom>
  [254] extcall 180 ............................. executeMessage(#leaveRoom)
  [256] getprop 186 ............................. <pSaveData>
  [258] pushsymb 561 ............................ <#casts>
  [261] pusharglist 2 ........................... <pSaveData, #casts>
  [263] objcall 138 ............................. <pSaveData[#casts]>
  [265] pushzero ................................ <0>
  [266] pusharglist 2 ........................... <pSaveData[#casts], 0>
  [268] extcall 617 ............................. <startCastLoad(pSaveData[#casts], 0)>
  [271] setlocal 2 .............................. tCastLoadId = startCastLoad(pSaveData[#casts], 0)
  [273] getlocal 2 .............................. <tCastLoadId>
  [275] pushsymb 502 ............................ <#roomCastLoaded>
  [278] getparam 0 .............................. <me>
  [280] pusharglist 1 ........................... <me>
  [282] objcall 115 ............................. <me.getID()>
  [284] pusharglistnoret 3 ...................... <tCastLoadId, #roomCastLoaded, me.getID()>
  [286] extcall 618 ............................. registerCastloadCallback(tCastLoadId, #roomCastLoaded, me.getID())
  [289] getparam 0 .............................. <me>
  [291] pusharglist 1 ........................... <me>
  [293] objcall 570 ............................. <me.getInterface()>
  [296] getlocal 2 .............................. <tCastLoadId>
  [298] pushcons 82 ............................. <"room_loading">
  [300] pushcons 85 ............................. <"Loading room">
  [302] pusharglist 2 ........................... <"room_loading", "Loading room">
  [304] extcall 95 .............................. <getText("room_loading", "Loading room")>
  [306] pushcons 22 ............................. <RETURN>
  [308] joinstr ................................. <getText("room_loading", "Loading room") & RETURN>
  [309] pushcons 86 ............................. <QUOTE>
  [311] joinstr ................................. <getText("room_loading", "Loading room") & RETURN & QUOTE>
  [312] getprop 186 ............................. <pSaveData>
  [314] pushsymb 187 ............................ <#name>
  [316] pusharglist 2 ........................... <pSaveData, #name>
  [318] objcall 138 ............................. <pSaveData[#name]>
  [320] joinstr ................................. <getText("room_loading", "Loading room") & RETURN & QUOTE & pSaveData[#name]>
  [321] pushcons 86 ............................. <QUOTE>
  [323] joinstr ................................. <getText("room_loading", "Loading room") & RETURN & QUOTE & pSaveData[#name] & QUOTE>
  [324] pusharglistnoret 3 ...................... <me.getInterface(), tCastLoadId, getText("room_loading", "Loading room") & RETURN & QUOTE & pSaveData[#name] & QUOTE>
  [326] objcall 21 .............................. me.getInterface().showLoaderBar(tCastLoadId, getText("room_loading", "Loading room") & RETURN & QUOTE & pSaveData[#name] & QUOTE)
  [328] pushint8 1 .............................. <1>
  [330] pusharglistnoret 1 ...................... <1>
  [332] extcall 116 ............................. return 1
  [334] ret
end

on roomCastLoaded me
  [  0] getprop 524 ............................. <pRoomId>
  [  3] pushcons 2 .............................. <EMPTY>
  [  5] eq ...................................... <pRoomId = EMPTY>
  [  6] jmpifz [ 36] ............................ if pRoomId = EMPTY then
  [  9] pushcons 87 ............................. <"null">
  [ 11] setprop 524 ............................. pRoomId = "null"
  [ 14] pushsymb 462 ............................ <#leaveRoom>
  [ 17] pusharglistnoret 1 ...................... <#leaveRoom>
  [ 19] extcall 180 ............................. executeMessage(#leaveRoom)
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 88 ............................. <"Room building process is aborted!">
  [ 25] pushsymb 502 ............................ <#roomCastLoaded>
  [ 28] pusharglist 3 ........................... <me, "Room building process is aborted!", #roomCastLoaded>
  [ 30] extcall 123 ............................. <error(me, "Room building process is aborted!", #roomCastLoaded)>
  [ 32] pusharglistnoret 1 ...................... <error(me, "Room building process is aborted!", #roomCastLoaded)>
  [ 34] extcall 116 ............................. return error(me, "Room building process is aborted!", #roomCastLoaded)
  [ 36] getprop 529 ............................. <pTrgDoorID>
  [ 39] pusharglist 1 ........................... <pTrgDoorID>
  [ 41] extcall 253 ............................. <voidp(pTrgDoorID)>
  [ 43] jmpifz [236] ............................ if voidp(pTrgDoorID) then
  [ 46] pushcons 89 ............................. <"room_preparing">
  [ 48] pushcons 90 ............................. <"...preparing room.">
  [ 50] pusharglist 2 ........................... <"room_preparing", "...preparing room.">
  [ 52] extcall 95 .............................. <getText("room_preparing", "...preparing room.")>
  [ 54] setlocal 0 .............................. tTxt = getText("room_preparing", "...preparing room.")
  [ 56] getprop 186 ............................. <pSaveData>
  [ 58] pushsymb 184 ............................ <#type>
  [ 60] pusharglist 2 ........................... <pSaveData, #type>
  [ 62] objcall 138 ............................. <pSaveData[#type]>
  [ 64] pushsymb 185 ............................ <#private>
  [ 66] eq ...................................... <pSaveData[#type] = #private>
  [ 67] jmpifz [119] ............................ if pSaveData[#type] = #private then
  [ 70] getprop 186 ............................. <pSaveData>
  [ 72] pushsymb 576 ............................ <#door>
  [ 75] pusharglist 2 ........................... <pSaveData, #door>
  [ 77] objcall 138 ............................. <pSaveData[#door]>
  [ 79] pushcons 91 ............................. <"closed">
  [ 81] eq ...................................... <pSaveData[#door] = "closed">
  [ 82] jmpifz [119] ............................ if pSaveData[#door] = "closed" then
  [ 85] getprop 186 ............................. <pSaveData>
  [ 87] pushsymb 188 ............................ <#owner>
  [ 89] pusharglist 2 ........................... <pSaveData, #owner>
  [ 91] objcall 138 ............................. <pSaveData[#owner]>
  [ 93] pushsymb 200 ............................ <#session>
  [ 95] pusharglist 1 ........................... <#session>
  [ 97] extcall 112 ............................. <getObject(#session)>
  [ 99] pushcons 92 ............................. <"user_name">
  [101] pusharglist 2 ........................... <getObject(#session), "user_name">
  [103] objcall 201 ............................. <getObject(#session).get("user_name")>
  [105] nteq .................................... <pSaveData[#owner] <> getObject(#session).get("user_name")>
  [106] jmpifz [119] ............................ if pSaveData[#owner] <> getObject(#session).get("user_name") then
  [109] pushcons 93 ............................. <"room_waiting">
  [111] pushcons 94 ............................. <"...waiting.">
  [113] pusharglist 2 ........................... <"room_waiting", "...waiting.">
  [115] extcall 95 .............................. <getText("room_waiting", "...waiting.")>
  [117] setlocal 0 .............................. tTxt = getText("room_waiting", "...waiting.")
  [119] getparam 0 .............................. <me>
  [121] pusharglist 1 ........................... <me>
  [123] objcall 570 ............................. <me.getInterface()>
  [126] pusharglist 0 ........................... <>
  [128] extcall 120 ............................. <VOID>
  [130] pushcons 86 ............................. <QUOTE>
  [132] getprop 186 ............................. <pSaveData>
  [134] pushsymb 187 ............................ <#name>
  [136] pusharglist 2 ........................... <pSaveData, #name>
  [138] objcall 138 ............................. <pSaveData[#name]>
  [140] joinstr ................................. <QUOTE & pSaveData[#name]>
  [141] pushcons 86 ............................. <QUOTE>
  [143] joinstr ................................. <QUOTE & pSaveData[#name] & QUOTE>
  [144] pushcons 22 ............................. <RETURN>
  [146] joinstr ................................. <QUOTE & pSaveData[#name] & QUOTE & RETURN>
  [147] getlocal 0 .............................. <tTxt>
  [149] joinstr ................................. <QUOTE & pSaveData[#name] & QUOTE & RETURN & tTxt>
  [150] pusharglistnoret 3 ...................... <me.getInterface(), VOID, QUOTE & pSaveData[#name] & QUOTE & RETURN & tTxt>
  [152] objcall 21 .............................. me.getInterface().showLoaderBar(VOID, QUOTE & pSaveData[#name] & QUOTE & RETURN & tTxt)
  [154] getprop 186 ............................. <pSaveData>
  [156] pushsymb 561 ............................ <#casts>
  [159] pusharglist 2 ........................... <pSaveData, #casts>
  [161] objcall 138 ............................. <pSaveData[#casts]>
  [163] setlocal 1 .............................. tRoomCasts = pSaveData[#casts]
  [165] getlocal 1 .............................. <tRoomCasts>
  [167] peek 0
  [169] pusharglist 1
  [171] extcall 149
  [173] pushint8 1
  [175] peek 0
  [177] peek 2
  [179] lteq
  [180] jmpifz [234] ............................ repeat with tCast in tRoomCasts
  [183] peek 2
  [185] peek 1
  [187] pusharglist 2
  [189] extcall 138
  [191] setlocal 2
  [193] getlocal 2 .............................. <tCast>
  [195] pusharglist 1 ........................... <tCast>
  [197] extcall 621 ............................. <castExists(tCast)>
  [200] not ..................................... <not castExists(tCast)>
  [201] jmpifz [229] ............................ if not castExists(tCast) then
  [204] getparam 0 .............................. <me>
  [206] pushcons 95 ............................. <"Cast required by room not found:">
  [208] getlocal 2 .............................. <tCast>
  [210] joinpadstr .............................. <"Cast required by room not found:" && tCast>
  [211] pushsymb 502 ............................ <#roomCastLoaded>
  [214] pusharglistnoret 3 ...................... <me, "Cast required by room not found:" && tCast, #roomCastLoaded>
  [216] extcall 123 ............................. error(me, "Cast required by room not found:" && tCast, #roomCastLoaded)
  [218] pushsymb 462 ............................ <#leaveRoom>
  [221] pusharglist 1 ........................... <#leaveRoom>
  [223] extcall 180 ............................. <executeMessage(#leaveRoom)>
  [225] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [227] extcall 116 ............................. return executeMessage(#leaveRoom)
  [229] pushint8 1
  [231] add
  [232] endrepeat [175]
  [234] pop 3
  [236] pushint8 1 .............................. <1>
  [238] setprop 547 ............................. pCastLoaded = 1
  [241] getparam 0 .............................. <me>
  [243] pusharglistnoret 1 ...................... <me>
  [245] objcall 498 ............................. me.roomPrePartFinished()
  [248] ret
end

on roomConnected me, tMarker, tstate
  [  0] getprop 524 ............................. <pRoomId>
  [  3] pushcons 2 .............................. <EMPTY>
  [  5] eq ...................................... <pRoomId = EMPTY>
  [  6] jmpifz [ 36] ............................ if pRoomId = EMPTY then
  [  9] pushcons 87 ............................. <"null">
  [ 11] setprop 524 ............................. pRoomId = "null"
  [ 14] pushsymb 462 ............................ <#leaveRoom>
  [ 17] pusharglistnoret 1 ...................... <#leaveRoom>
  [ 19] extcall 180 ............................. executeMessage(#leaveRoom)
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 88 ............................. <"Room building process is aborted!">
  [ 25] pushsymb 502 ............................ <#roomCastLoaded>
  [ 28] pusharglist 3 ........................... <me, "Room building process is aborted!", #roomCastLoaded>
  [ 30] extcall 123 ............................. <error(me, "Room building process is aborted!", #roomCastLoaded)>
  [ 32] pusharglistnoret 1 ...................... <error(me, "Room building process is aborted!", #roomCastLoaded)>
  [ 34] extcall 116 ............................. return error(me, "Room building process is aborted!", #roomCastLoaded)
  [ 36] getprop 529 ............................. <pTrgDoorID>
  [ 39] pusharglist 1 ........................... <pTrgDoorID>
  [ 41] extcall 253 ............................. <voidp(pTrgDoorID)>
  [ 43] not ..................................... <not voidp(pTrgDoorID)>
  [ 44] jmpifz [100] ............................ if not voidp(pTrgDoorID) then
  [ 47] getparam 2 .............................. <tstate>
  [ 49] pushcons 96 ............................. <"OPC_OK">
  [ 51] eq ...................................... <tstate = "OPC_OK">
  [ 52] jmpifz [100] ............................ if tstate = "OPC_OK" then
  [ 55] getparam 0 .............................. <me>
  [ 57] pusharglist 1 ........................... <me>
  [ 59] objcall 368 ............................. <me.getRoomConnection()>
  [ 62] pushcons 38 ............................. <"GOVIADOOR">
  [ 64] getprop 529 ............................. <pTrgDoorID>
  [ 67] pushcons 39 ............................. <"/">
  [ 69] joinstr ................................. <pTrgDoorID & "/">
  [ 70] getprop 186 ............................. <pSaveData>
  [ 72] pushsymb 564 ............................ <#teleport>
  [ 75] pusharglist 2 ........................... <pSaveData, #teleport>
  [ 77] objcall 138 ............................. <pSaveData[#teleport]>
  [ 79] joinstr ................................. <pTrgDoorID & "/" & pSaveData[#teleport]>
  [ 80] pusharglist 3 ........................... <me.getRoomConnection(), "GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport]>
  [ 82] objcall 369 ............................. <me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])>
  [ 85] setlocal 0 .............................. tValue = me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])
  [ 87] pusharglist 0 ........................... <>
  [ 89] extcall 120 ............................. <VOID>
  [ 91] setprop 529 ............................. pTrgDoorID = VOID
  [ 94] getlocal 0 .............................. <tValue>
  [ 96] pusharglistnoret 1 ...................... <tValue>
  [ 98] extcall 116 ............................. return tValue
  [100] getprop 186 ............................. <pSaveData>
  [102] pushsymb 184 ............................ <#type>
  [104] pusharglist 2 ........................... <pSaveData, #type>
  [106] objcall 138 ............................. <pSaveData[#type]>
  [108] pushsymb 185 ............................ <#private>
  [110] eq ...................................... <pSaveData[#type] = #private>
  [111] jmpifz [245] ............................ if pSaveData[#type] = #private then
  [114] getparam 2 .............................. <tstate>
  [116] pushcons 96 ............................. <"OPC_OK">
  [118] eq ...................................... <tstate = "OPC_OK">
  [119] jmpifz [210] ............................ if tstate = "OPC_OK" then / else
  [122] getprop 186 ............................. <pSaveData>
  [124] pushsymb 359 ............................ <#id>
  [127] pusharglist 2 ........................... <pSaveData, #id>
  [129] objcall 138 ............................. <pSaveData[#id]>
  [131] setlocal 1 .............................. tStr = pSaveData[#id]
  [133] pushsymb 625 ............................ <#navigator>
  [136] pusharglist 1 ........................... <#navigator>
  [138] extcall 224 ............................. <threadExists(#navigator)>
  [140] jmpifz [187] ............................ if threadExists(#navigator) then
  [143] pushsymb 625 ............................ <#navigator>
  [146] pusharglist 1 ........................... <#navigator>
  [148] extcall 227 ............................. <getThread(#navigator)>
  [150] pusharglist 1 ........................... <getThread(#navigator)>
  [152] objcall 173 ............................. <getThread(#navigator).getComponent()>
  [154] getprop 186 ............................. <pSaveData>
  [156] pushsymb 359 ............................ <#id>
  [159] pusharglist 2 ........................... <pSaveData, #id>
  [161] objcall 138 ............................. <pSaveData[#id]>
  [163] pusharglist 2 ........................... <getThread(#navigator).getComponent(), pSaveData[#id]>
  [165] objcall 626 ............................. <getThread(#navigator).getComponent().getFlatPassword(pSaveData[#id])>
  [168] setlocal 2 .............................. tPassword = getThread(#navigator).getComponent().getFlatPassword(pSaveData[#id])
  [170] getlocal 2 .............................. <tPassword>
  [172] pushzero ................................ <0>
  [173] nteq .................................... <tPassword <> 0>
  [174] jmpifz [187] ............................ if tPassword <> 0 then
  [177] getlocal 1 .............................. <tStr>
  [179] pushcons 39 ............................. <"/">
  [181] joinstr ................................. <tStr & "/">
  [182] getlocal 2 .............................. <tPassword>
  [184] joinstr ................................. <tStr & "/" & tPassword>
  [185] setlocal 1 .............................. tStr = tStr & "/" & tPassword
  [187] getparam 0 .............................. <me>
  [189] pusharglist 1 ........................... <me>
  [191] objcall 368 ............................. <me.getRoomConnection()>
  [194] pushcons 97 ............................. <"TRYFLAT">
  [196] getlocal 1 .............................. <tStr>
  [198] pusharglist 3 ........................... <me.getRoomConnection(), "TRYFLAT", tStr>
  [200] objcall 369 ............................. <me.getRoomConnection().send("TRYFLAT", tStr)>
  [203] pusharglistnoret 1 ...................... <me.getRoomConnection().send("TRYFLAT", tStr)>
  [205] extcall 116 ............................. return me.getRoomConnection().send("TRYFLAT", tStr)
  [207] jmp [245]
  [210] getparam 2 .............................. <tstate>
  [212] pushcons 98 ............................. <"FLAT_LETIN">
  [214] eq ...................................... <tstate = "FLAT_LETIN">
  [215] jmpifz [245] ............................ if tstate = "FLAT_LETIN" then
  [218] getparam 0 .............................. <me>
  [220] pusharglist 1 ........................... <me>
  [222] objcall 368 ............................. <me.getRoomConnection()>
  [225] pushcons 99 ............................. <"GOTOFLAT">
  [227] getprop 186 ............................. <pSaveData>
  [229] pushsymb 359 ............................ <#id>
  [232] pusharglist 2 ........................... <pSaveData, #id>
  [234] objcall 138 ............................. <pSaveData[#id]>
  [236] pusharglist 3 ........................... <me.getRoomConnection(), "GOTOFLAT", pSaveData[#id]>
  [238] objcall 369 ............................. <me.getRoomConnection().send("GOTOFLAT", pSaveData[#id])>
  [241] pusharglistnoret 1 ...................... <me.getRoomConnection().send("GOTOFLAT", pSaveData[#id])>
  [243] extcall 116 ............................. return me.getRoomConnection().send("GOTOFLAT", pSaveData[#id])
  [245] getparam 1 .............................. <tMarker>
  [247] pusharglist 1 ........................... <tMarker>
  [249] extcall 253 ............................. <voidp(tMarker)>
  [251] jmpifz [265] ............................ if voidp(tMarker) then
  [254] getparam 0 .............................. <me>
  [256] pushcons 100 ............................ <"Missing room marker!!!">
  [258] pushsymb 503 ............................ <#roomConnected>
  [261] pusharglistnoret 3 ...................... <me, "Missing room marker!!!", #roomConnected>
  [263] extcall 123 ............................. error(me, "Missing room marker!!!", #roomConnected)
  [265] getprop 186 ............................. <pSaveData>
  [267] pushsymb 560 ............................ <#marker>
  [270] getparam 1 .............................. <tMarker>
  [272] pusharglistnoret 3 ...................... <pSaveData, #marker, tMarker>
  [274] objcall 136 ............................. pSaveData[#marker] = tMarker
  [276] getparam 0 .............................. <me>
  [278] pushint8 1 .............................. <1>
  [280] pusharglistnoret 2 ...................... <me, 1>
  [282] objcall 462 ............................. me.leaveRoom(1)
  [285] getparam 0 .............................. <me>
  [287] pusharglist 1 ........................... <me>
  [289] objcall 570 ............................. <me.getInterface()>
  [292] getparam 1 .............................. <tMarker>
  [294] pusharglist 2 ........................... <me.getInterface(), tMarker>
  [296] objcall 3 ............................... <me.getInterface().showRoom(tMarker)>
  [298] not ..................................... <not me.getInterface().showRoom(tMarker)>
  [299] jmpifz [313] ............................ if not me.getInterface().showRoom(tMarker) then
  [302] pushsymb 462 ............................ <#leaveRoom>
  [305] pusharglist 1 ........................... <#leaveRoom>
  [307] extcall 180 ............................. <executeMessage(#leaveRoom)>
  [309] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [311] extcall 116 ............................. return executeMessage(#leaveRoom)
  [313] getprop 81 .............................. <pRoomConnID>
  [315] pusharglist 1 ........................... <pRoomConnID>
  [317] extcall 457 ............................. <connectionExists(pRoomConnID)>
  [320] jmpifz [337] ............................ if connectionExists(pRoomConnID) then
  [323] getprop 81 .............................. <pRoomConnID>
  [325] pusharglist 1 ........................... <pRoomConnID>
  [327] extcall 459 ............................. <getConnection(pRoomConnID)>
  [330] pushcons 101 ............................ <"GETROOMAD">
  [332] pusharglistnoret 2 ...................... <getConnection(pRoomConnID), "GETROOMAD">
  [334] objcall 369 ............................. getConnection(pRoomConnID).send("GETROOMAD")
  [337] getprop 186 ............................. <pSaveData>
  [339] pushsymb 560 ............................ <#marker>
  [342] pusharglist 2 ........................... <pSaveData, #marker>
  [344] objcall 138 ............................. <pSaveData[#marker]>
  [346] pushcons 102 ............................ <"Class">
  [348] joinpadstr .............................. <pSaveData[#marker] && "Class">
  [349] pusharglist 1 ........................... <pSaveData[#marker] && "Class">
  [351] extcall 122 ............................. <memberExists(pSaveData[#marker] && "Class")>
  [353] jmpifz [375] ............................ if memberExists(pSaveData[#marker] && "Class") then
  [356] getprop 537 ............................. <pRoomPrgID>
  [359] getprop 186 ............................. <pSaveData>
  [361] pushsymb 560 ............................ <#marker>
  [364] pusharglist 2 ........................... <pSaveData, #marker>
  [366] objcall 138 ............................. <pSaveData[#marker]>
  [368] pushcons 102 ............................ <"Class">
  [370] joinpadstr .............................. <pSaveData[#marker] && "Class">
  [371] pusharglistnoret 2 ...................... <pRoomPrgID, pSaveData[#marker] && "Class">
  [373] extcall 109 ............................. createObject(pRoomPrgID, pSaveData[#marker] && "Class")
  [375] getprop 186 ............................. <pSaveData>
  [377] pushsymb 184 ............................ <#type>
  [379] pusharglist 2 ........................... <pSaveData, #type>
  [381] objcall 138 ............................. <pSaveData[#type]>
  [383] pushsymb 185 ............................ <#private>
  [385] eq ...................................... <pSaveData[#type] = #private>
  [386] jmpifz [418] ............................ if pSaveData[#type] = #private then / else
  [389] pushsymb 627 ............................ <#passive>
  [392] pushzero ................................ <0>
  [393] pushsymb 628 ............................ <#Active>
  [396] pushzero ................................ <0>
  [397] pushsymb 629 ............................ <#users>
  [400] pushzero ................................ <0>
  [401] pushsymb 630 ............................ <#items>
  [404] pushzero ................................ <0>
  [405] pushsymb 631 ............................ <#heightmap>
  [408] pushzero ................................ <0>
  [409] pusharglist 10 .......................... <[#passive: 0, #Active: 0, #users: 0, #items: 0, #heightmap: 0]>
  [411] pushproplist ............................ <[#passive: 0, #Active: 0, #users: 0, #items: 0, #heightmap: 0]>
  [412] setprop 526 ............................. pProcessList = [#passive: 0, #Active: 0, #users: 0, #items: 0, #heightmap: 0]
  [415] jmp [508]
  [418] getprop 186 ............................. <pSaveData>
  [420] pushsymb 184 ............................ <#type>
  [422] pusharglist 2 ........................... <pSaveData, #type>
  [424] objcall 138 ............................. <pSaveData[#type]>
  [426] pushsymb 613 ............................ <#public>
  [429] eq ...................................... <pSaveData[#type] = #public>
  [430] jmpifz [463] ............................ if pSaveData[#type] = #public then / else
  [433] pushsymb 627 ............................ <#passive>
  [436] pushzero ................................ <0>
  [437] pushsymb 628 ............................ <#Active>
  [440] pushzero ................................ <0>
  [441] pushsymb 629 ............................ <#users>
  [444] pushzero ................................ <0>
  [445] pushsymb 630 ............................ <#items>
  [448] pushint8 1 .............................. <1>
  [450] pushsymb 631 ............................ <#heightmap>
  [453] pushzero ................................ <0>
  [454] pusharglist 10 .......................... <[#passive: 0, #Active: 0, #users: 0, #items: 1, #heightmap: 0]>
  [456] pushproplist ............................ <[#passive: 0, #Active: 0, #users: 0, #items: 1, #heightmap: 0]>
  [457] setprop 526 ............................. pProcessList = [#passive: 0, #Active: 0, #users: 0, #items: 1, #heightmap: 0]
  [460] jmp [508]
  [463] getprop 186 ............................. <pSaveData>
  [465] pushsymb 184 ............................ <#type>
  [467] pusharglist 2 ........................... <pSaveData, #type>
  [469] objcall 138 ............................. <pSaveData[#type]>
  [471] pushsymb 632 ............................ <#game>
  [474] eq ...................................... <pSaveData[#type] = #game>
  [475] jmpifz [508] ............................ if pSaveData[#type] = #game then
  [478] pushsymb 627 ............................ <#passive>
  [481] pushint8 1 .............................. <1>
  [483] pushsymb 628 ............................ <#Active>
  [486] pushint8 1 .............................. <1>
  [488] pushsymb 629 ............................ <#users>
  [491] pushint8 1 .............................. <1>
  [493] pushsymb 630 ............................ <#items>
  [496] pushint8 1 .............................. <1>
  [498] pushsymb 631 ............................ <#heightmap>
  [501] pushzero ................................ <0>
  [502] pusharglist 10 .......................... <[#passive: 1, #Active: 1, #users: 1, #items: 1, #heightmap: 0]>
  [504] pushproplist ............................ <[#passive: 1, #Active: 1, #users: 1, #items: 1, #heightmap: 0]>
  [505] setprop 526 ............................. pProcessList = [#passive: 1, #Active: 1, #users: 1, #items: 1, #heightmap: 0]
  [508] pushcons 103 ............................ <"room_data_">
  [510] getprop 524 ............................. <pRoomId>
  [513] joinstr ................................. <"room_data_" & pRoomId>
  [514] pushcons 104 ............................ <"_">
  [516] joinstr ................................. <"room_data_" & pRoomId & "_">
  [517] getprop 186 ............................. <pSaveData>
  [519] pushsymb 560 ............................ <#marker>
  [522] pusharglist 2 ........................... <pSaveData, #marker>
  [524] objcall 138 ............................. <pSaveData[#marker]>
  [526] joinstr ................................. <"room_data_" & pRoomId & "_" & pSaveData[#marker]>
  [527] setprop 527 ............................. pCacheKey = "room_data_" & pRoomId & "_" & pSaveData[#marker]
  [530] pushsymb 569 ............................ <#cache>
  [533] pusharglist 1 ........................... <#cache>
  [535] extcall 112 ............................. <getObject(#cache)>
  [537] getprop 527 ............................. <pCacheKey>
  [540] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [542] objcall 458 ............................. <getObject(#cache).exists(pCacheKey)>
  [545] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [546] jmpifz [567] ............................ if not getObject(#cache).exists(pCacheKey) then
  [549] pushsymb 569 ............................ <#cache>
  [552] pusharglist 1 ........................... <#cache>
  [554] extcall 112 ............................. <getObject(#cache)>
  [556] getprop 527 ............................. <pCacheKey>
  [559] pusharglist 0 ........................... <[:]>
  [561] pushproplist ............................ <[:]>
  [562] pusharglistnoret 3 ...................... <getObject(#cache), pCacheKey, [:]>
  [564] objcall 556 ............................. getObject(#cache).set(pCacheKey, [:])
  [567] pushsymb 569 ............................ <#cache>
  [570] pusharglist 1 ........................... <#cache>
  [572] extcall 112 ............................. <getObject(#cache)>
  [574] getprop 527 ............................. <pCacheKey>
  [577] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [579] objcall 201 ............................. <getObject(#cache).get(pCacheKey)>
  [581] setlocal 3 .............................. tCache = getObject(#cache).get(pCacheKey)
  [583] getlocal 3 .............................. <tCache>
  [585] pushsymb 631 ............................ <#heightmap>
  [588] pusharglist 2 ........................... <tCache, #heightmap>
  [590] objcall 138 ............................. <tCache[#heightmap]>
  [592] pusharglist 1 ........................... <tCache[#heightmap]>
  [594] extcall 253 ............................. <voidp(tCache[#heightmap])>
  [596] getprop 526 ............................. <pProcessList>
  [599] pushsymb 631 ............................ <#heightmap>
  [602] pusharglist 2 ........................... <pProcessList, #heightmap>
  [604] objcall 138 ............................. <pProcessList[#heightmap]>
  [606] not ..................................... <not pProcessList[#heightmap]>
  [607] and ..................................... <voidp(tCache[#heightmap]) and not pProcessList[#heightmap]>
  [608] jmpifz [639] ............................ if voidp(tCache[#heightmap]) and not pProcessList[#heightmap] then / else
  [611] getlocal 3 .............................. <tCache>
  [613] pushsymb 631 ............................ <#heightmap>
  [616] pushcons 2 .............................. <EMPTY>
  [618] pusharglistnoret 3 ...................... <tCache, #heightmap, EMPTY>
  [620] objcall 136 ............................. tCache[#heightmap] = EMPTY
  [622] getparam 0 .............................. <me>
  [624] pusharglist 1 ........................... <me>
  [626] objcall 368 ............................. <me.getRoomConnection()>
  [629] pushcons 105 ............................ <"G_HMAP">
  [631] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_HMAP">
  [633] objcall 369 ............................. me.getRoomConnection().send("G_HMAP")
  [636] jmp [655]
  [639] getparam 0 .............................. <me>
  [641] getlocal 3 .............................. <tCache>
  [643] pushsymb 631 ............................ <#heightmap>
  [646] pusharglist 2 ........................... <tCache, #heightmap>
  [648] objcall 138 ............................. <tCache[#heightmap]>
  [650] pusharglistnoret 2 ...................... <me, tCache[#heightmap]>
  [652] objcall 505 ............................. me.validateHeightMap(tCache[#heightmap])
  [655] getparam 0 .............................. <me>
  [657] pusharglist 1 ........................... <me>
  [659] objcall 493 ............................. <me.getShadowManager()>
  [662] setlocal 4 .............................. tShadowManager = me.getShadowManager()
  [664] getlocal 4 .............................. <tShadowManager>
  [666] pushcons 106 ............................ <"roomShadow">
  [668] pusharglistnoret 2 ...................... <tShadowManager, "roomShadow">
  [670] objcall 140 ............................. tShadowManager.define("roomShadow")
  [672] getlocal 3 .............................. <tCache>
  [674] pushsymb 629 ............................ <#users>
  [677] pusharglist 0 ........................... <[]>
  [679] pushlist ................................ <[]>
  [680] pusharglistnoret 3 ...................... <tCache, #users, []>
  [682] objcall 136 ............................. tCache[#users] = []
  [684] getprop 526 ............................. <pProcessList>
  [687] pushsymb 629 ............................ <#users>
  [690] pusharglist 2 ........................... <pProcessList, #users>
  [692] objcall 138 ............................. <pProcessList[#users]>
  [694] not ..................................... <not pProcessList[#users]>
  [695] jmpifz [712] ............................ if not pProcessList[#users] then
  [698] getparam 0 .............................. <me>
  [700] pusharglist 1 ........................... <me>
  [702] objcall 368 ............................. <me.getRoomConnection()>
  [705] pushcons 107 ............................ <"G_USRS">
  [707] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_USRS">
  [709] objcall 369 ............................. me.getRoomConnection().send("G_USRS")
  [712] getlocal 3 .............................. <tCache>
  [714] pushsymb 627 ............................ <#passive>
  [717] pusharglist 2 ........................... <tCache, #passive>
  [719] objcall 138 ............................. <tCache[#passive]>
  [721] pusharglist 1 ........................... <tCache[#passive]>
  [723] extcall 253 ............................. <voidp(tCache[#passive])>
  [725] getprop 526 ............................. <pProcessList>
  [728] pushsymb 627 ............................ <#passive>
  [731] pusharglist 2 ........................... <pProcessList, #passive>
  [733] objcall 138 ............................. <pProcessList[#passive]>
  [735] not ..................................... <not pProcessList[#passive]>
  [736] and ..................................... <voidp(tCache[#passive]) and not pProcessList[#passive]>
  [737] jmpifz [769] ............................ if voidp(tCache[#passive]) and not pProcessList[#passive] then / else
  [740] getlocal 3 .............................. <tCache>
  [742] pushsymb 627 ............................ <#passive>
  [745] pusharglist 0 ........................... <[]>
  [747] pushlist ................................ <[]>
  [748] pusharglistnoret 3 ...................... <tCache, #passive, []>
  [750] objcall 136 ............................. tCache[#passive] = []
  [752] getparam 0 .............................. <me>
  [754] pusharglist 1 ........................... <me>
  [756] objcall 368 ............................. <me.getRoomConnection()>
  [759] pushcons 108 ............................ <"G_OBJS">
  [761] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_OBJS">
  [763] objcall 369 ............................. me.getRoomConnection().send("G_OBJS")
  [766] jmp [805]
  [769] getlocal 3 .............................. <tCache>
  [771] pushsymb 627 ............................ <#passive>
  [774] pusharglist 2 ........................... <tCache, #passive>
  [776] objcall 138 ............................. <tCache[#passive]>
  [778] pusharglist 1 ........................... <tCache[#passive]>
  [780] extcall 253 ............................. <voidp(tCache[#passive])>
  [782] jmpifz [797] ............................ if voidp(tCache[#passive]) then
  [785] getlocal 3 .............................. <tCache>
  [787] pushsymb 627 ............................ <#passive>
  [790] pusharglist 0 ........................... <[]>
  [792] pushlist ................................ <[]>
  [793] pusharglistnoret 3 ...................... <tCache, #passive, []>
  [795] objcall 136 ............................. tCache[#passive] = []
  [797] getparam 0 .............................. <me>
  [799] pushzero ................................ <0>
  [800] pusharglistnoret 2 ...................... <me, 0>
  [802] objcall 509 ............................. me.validatePassiveObjects(0)
  [805] getlocal 3 .............................. <tCache>
  [807] pushsymb 628 ............................ <#Active>
  [810] pusharglist 2 ........................... <tCache, #Active>
  [812] objcall 138 ............................. <tCache[#Active]>
  [814] pusharglist 1 ........................... <tCache[#Active]>
  [816] extcall 253 ............................. <voidp(tCache[#Active])>
  [818] getprop 526 ............................. <pProcessList>
  [821] pushsymb 628 ............................ <#Active>
  [824] pusharglist 2 ........................... <pProcessList, #Active>
  [826] objcall 138 ............................. <pProcessList[#Active]>
  [828] not ..................................... <not pProcessList[#Active]>
  [829] and ..................................... <voidp(tCache[#Active]) and not pProcessList[#Active]>
  [830] jmpifz [848] ............................ if voidp(tCache[#Active]) and not pProcessList[#Active] then / else
  [833] getlocal 3 .............................. <tCache>
  [835] pushsymb 628 ............................ <#Active>
  [838] pusharglist 0 ........................... <[]>
  [840] pushlist ................................ <[]>
  [841] pusharglistnoret 3 ...................... <tCache, #Active, []>
  [843] objcall 136 ............................. tCache[#Active] = []
  [845] jmp [884]
  [848] getlocal 3 .............................. <tCache>
  [850] pushsymb 628 ............................ <#Active>
  [853] pusharglist 2 ........................... <tCache, #Active>
  [855] objcall 138 ............................. <tCache[#Active]>
  [857] pusharglist 1 ........................... <tCache[#Active]>
  [859] extcall 253 ............................. <voidp(tCache[#Active])>
  [861] jmpifz [876] ............................ if voidp(tCache[#Active]) then
  [864] getlocal 3 .............................. <tCache>
  [866] pushsymb 628 ............................ <#Active>
  [869] pusharglist 0 ........................... <[]>
  [871] pushlist ................................ <[]>
  [872] pusharglistnoret 3 ...................... <tCache, #Active, []>
  [874] objcall 136 ............................. tCache[#Active] = []
  [876] getparam 0 .............................. <me>
  [878] pushzero ................................ <0>
  [879] pusharglistnoret 2 ...................... <me, 0>
  [881] objcall 508 ............................. me.validateActiveObjects(0)
  [884] getlocal 3 .............................. <tCache>
  [886] pushsymb 630 ............................ <#items>
  [889] pusharglist 2 ........................... <tCache, #items>
  [891] objcall 138 ............................. <tCache[#items]>
  [893] pusharglist 1 ........................... <tCache[#items]>
  [895] extcall 253 ............................. <voidp(tCache[#items])>
  [897] getprop 526 ............................. <pProcessList>
  [900] pushsymb 630 ............................ <#items>
  [903] pusharglist 2 ........................... <pProcessList, #items>
  [905] objcall 138 ............................. <pProcessList[#items]>
  [907] not ..................................... <not pProcessList[#items]>
  [908] and ..................................... <voidp(tCache[#items]) and not pProcessList[#items]>
  [909] jmpifz [941] ............................ if voidp(tCache[#items]) and not pProcessList[#items] then / else
  [912] getlocal 3 .............................. <tCache>
  [914] pushsymb 630 ............................ <#items>
  [917] pusharglist 0 ........................... <[]>
  [919] pushlist ................................ <[]>
  [920] pusharglistnoret 3 ...................... <tCache, #items, []>
  [922] objcall 136 ............................. tCache[#items] = []
  [924] getparam 0 .............................. <me>
  [926] pusharglist 1 ........................... <me>
  [928] objcall 368 ............................. <me.getRoomConnection()>
  [931] pushcons 109 ............................ <"G_ITEMS">
  [933] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_ITEMS">
  [935] objcall 369 ............................. me.getRoomConnection().send("G_ITEMS")
  [938] jmp [977]
  [941] getlocal 3 .............................. <tCache>
  [943] pushsymb 630 ............................ <#items>
  [946] pusharglist 2 ........................... <tCache, #items>
  [948] objcall 138 ............................. <tCache[#items]>
  [950] pusharglist 1 ........................... <tCache[#items]>
  [952] extcall 253 ............................. <voidp(tCache[#items])>
  [954] jmpifz [969] ............................ if voidp(tCache[#items]) then
  [957] getlocal 3 .............................. <tCache>
  [959] pushsymb 630 ............................ <#items>
  [962] pusharglist 0 ........................... <[]>
  [964] pushlist ................................ <[]>
  [965] pusharglistnoret 3 ...................... <tCache, #items, []>
  [967] objcall 136 ............................. tCache[#items] = []
  [969] getparam 0 .............................. <me>
  [971] pushzero ................................ <0>
  [972] pusharglistnoret 2 ...................... <me, 0>
  [974] objcall 510 ............................. me.validateItemObjects(0)
  [977] getprop 538 ............................. <pRoomPollerID>
  [980] pushint16 1000 .......................... <1000>
  [983] pushsymb 511 ............................ <#pollRoomMessages>
  [986] getparam 0 .............................. <me>
  [988] pusharglist 1 ........................... <me>
  [990] objcall 115 ............................. <me.getID()>
  [992] pusharglist 0 ........................... <>
  [994] extcall 120 ............................. <VOID>
  [996] pushzero ................................ <0>
  [997] pusharglistnoret 6 ...................... <pRoomPollerID, 1000, #pollRoomMessages, me.getID(), VOID, 0>
  [999] extcall 382 ............................. createTimeout(pRoomPollerID, 1000, #pollRoomMessages, me.getID(), VOID, 0)
  [1002] getparam 0 ............................. <me>
  [1004] pusharglistnoret 1 ..................... <me>
  [1006] objcall 521 ............................ me.executeEnterRoomAlert()
  [1009] pushint8 1 ............................. <1>
  [1011] pusharglistnoret 1 ..................... <1>
  [1013] extcall 116 ............................ return 1
  [1015] ret
end

on roomDisconnected me
  [  0] pushzero ................................ <0>
  [  1] setprop 548 ............................. pPrvRoomsReady = 0
  [  4] getparam 0 .............................. <me>
  [  6] pusharglistnoret 1 ...................... <me>
  [  8] objcall 462 ............................. me.leaveRoom()
  [ 11] pushsymb 462 ............................ <#leaveRoom>
  [ 14] pusharglist 1 ........................... <#leaveRoom>
  [ 16] extcall 180 ............................. <executeMessage(#leaveRoom)>
  [ 18] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [ 20] extcall 116 ............................. return executeMessage(#leaveRoom)
  [ 22] ret
end

on validateHeightMap me, tdata
  [  0] pushsymb 569 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 112 ............................. <getObject(#cache)>
  [  7] getprop 527 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 458 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 505 ............................ <#validateHeightMap>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validateHeightMap>
  [ 28] extcall 123 ............................. <error(me, "Data not expected yet!", #validateHeightMap)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validateHeightMap)>
  [ 32] extcall 116 ............................. return error(me, "Data not expected yet!", #validateHeightMap)
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglist 1 ........................... <me>
  [ 38] objcall 570 ............................. <me.getInterface()>
  [ 41] pusharglist 1 ........................... <me.getInterface()>
  [ 43] objcall 29 .............................. <me.getInterface().getGeometry()>
  [ 45] getparam 1 .............................. <tdata>
  [ 47] pusharglistnoret 2 ...................... <me.getInterface().getGeometry(), tdata>
  [ 49] objcall 637 ............................. me.getInterface().getGeometry().loadHeightMap(tdata)
  [ 52] getparam 0 .............................. <me>
  [ 54] getparam 1 .............................. <tdata>
  [ 56] setobjprop 638 .......................... me.pHeightMapData = tdata
  [ 59] getprop 525 ............................. <pActiveFlag>
  [ 62] not ..................................... <not pActiveFlag>
  [ 63] jmpifz [102] ............................ if not pActiveFlag then
  [ 66] pushsymb 569 ............................ <#cache>
  [ 69] pusharglist 1 ........................... <#cache>
  [ 71] extcall 112 ............................. <getObject(#cache)>
  [ 73] getprop 527 ............................. <pCacheKey>
  [ 76] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 78] objcall 201 ............................. <getObject(#cache).get(pCacheKey)>
  [ 80] pushsymb 631 ............................ <#heightmap>
  [ 83] getparam 1 .............................. <tdata>
  [ 85] pusharglistnoret 3 ...................... <getObject(#cache).get(pCacheKey), #heightmap, tdata>
  [ 87] objcall 639 ............................. getObject(#cache).get(pCacheKey).setaProp(#heightmap, tdata)
  [ 90] getparam 0 .............................. <me>
  [ 92] pushsymb 631 ............................ <#heightmap>
  [ 95] pushint8 1 .............................. <1>
  [ 97] pusharglistnoret 3 ...................... <me, #heightmap, 1>
  [ 99] objcall 512 ............................. me.updateProcess(#heightmap, 1)
  [102] pushzero ................................ <0>
  [103] pusharglistnoret 1 ...................... <0>
  [105] extcall 116 ............................. return 0
  [107] ret
end

on updateHeightMap me, tdata
  [  0] getprop 638 ............................. <pHeightMapData>
  [  3] setlocal 0 .............................. tHeightMapData = pHeightMapData
  [  5] getlocal 0 .............................. <tHeightMapData>
  [  7] pusharglist 1 ........................... <tHeightMapData>
  [  9] extcall 253 ............................. <voidp(tHeightMapData)>
  [ 11] jmpifz [ 29] ............................ if voidp(tHeightMapData) then / else
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 111 ............................ <"Height map update data sent but heightmap data not cached!">
  [ 18] pusharglist 2 ........................... <me, "Height map update data sent but heightmap data not cached!">
  [ 20] extcall 123 ............................. <error(me, "Height map update data sent but heightmap data not cached!")>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Height map update data sent but heightmap data not cached!")>
  [ 24] extcall 116 ............................. return error(me, "Height map update data sent but heightmap data not cached!")
  [ 26] jmp [154]
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 1 .............................. a = 1
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 2
  [ 37] getlocal 2
  [ 39] getparam 1 .............................. <tdata>
  [ 41] getobjprop 595 .......................... <tdata.length>
  [ 44] lteq
  [ 45] jmpifz [142] ............................ repeat with i = 1 to tdata.length
  [ 48] getparam 1 .............................. <tdata>
  [ 50] pushsymb 425 ............................ <#char>
  [ 53] getlocal 2 .............................. <i>
  [ 55] pusharglist 3 ........................... <tdata, #char, i>
  [ 57] objcall 134 ............................. <tdata.char[i]>
  [ 59] pushcons 112 ............................ <"!">
  [ 61] eq ...................................... <tdata.char[i] = "!">
  [ 62] jmpifz [ 96] ............................ if tdata.char[i] = "!" then
  [ 65] getlocal 2 .............................. <i>
  [ 67] pushint8 1 .............................. <1>
  [ 69] add ..................................... <i + 1>
  [ 70] setlocal 2 .............................. i = i + 1
  [ 72] getlocal 1 .............................. <a>
  [ 74] getparam 1 .............................. <tdata>
  [ 76] pushsymb 425 ............................ <#char>
  [ 79] getlocal 2 .............................. <i>
  [ 81] pusharglist 3 ........................... <tdata, #char, i>
  [ 83] objcall 134 ............................. <tdata.char[i]>
  [ 85] pusharglist 1 ........................... <tdata.char[i]>
  [ 87] extcall 640 ............................. <charToNum(tdata.char[i])>
  [ 90] add ..................................... <a + charToNum(tdata.char[i])>
  [ 91] setlocal 1 .............................. a = a + charToNum(tdata.char[i])
  [ 93] jmp [133] ............................... next repeat
  [ 96] getparam 1 .............................. <tdata>
  [ 98] pushsymb 425 ............................ <#char>
  [101] getlocal 2 .............................. <i>
  [103] pusharglist 3 ........................... <tdata, #char, i>
  [105] objcall 134 ............................. <tdata.char[i]>
  [107] pushzero ................................ <0>
  [108] pushchunkvarref 5 ....................... <tHeightMapData>
  [110] pushsymb 425 ............................ <#char>
  [113] getlocal 1 .............................. <a>
  [115] pusharglist 3 ........................... <tHeightMapData, #char, a>
  [117] objcall 641 ............................. <tHeightMapData.char[a]>
  [120] swap
  [121] pusharglistnoret 2 ...................... <tHeightMapData.char[a], tdata.char[i]>
  [123] objcall 642 ............................. put tdata.char[i] into tHeightMapData.char[a]
  [126] getlocal 1 .............................. <a>
  [128] pushint8 1 .............................. <1>
  [130] add ..................................... <a + 1>
  [131] setlocal 1 .............................. a = a + 1
  [133] pushint8 1
  [135] getlocal 2
  [137] add
  [138] setlocal 2
  [140] endrepeat [ 37]
  [142] getparam 0 .............................. <me>
  [144] getlocal 0 .............................. <tHeightMapData>
  [146] pusharglist 2 ........................... <me, tHeightMapData>
  [148] localcall 49 ............................ <validateHeightMap(me, tHeightMapData)>
  [150] pusharglistnoret 1 ...................... <validateHeightMap(me, tHeightMapData)>
  [152] extcall 116 ............................. return validateHeightMap(me, tHeightMapData)
  [154] ret
end

on validateUserObjects me, tdata
  [  0] pushsymb 569 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 112 ............................. <getObject(#cache)>
  [  7] getprop 527 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 458 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 507 ............................ <#validateUserObjects>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validateUserObjects>
  [ 28] extcall 123 ............................. <error(me, "Data not expected yet!", #validateUserObjects)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validateUserObjects)>
  [ 32] extcall 116 ............................. return error(me, "Data not expected yet!", #validateUserObjects)
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <tdata <> 0>
  [ 38] jmpifz [ 68] ............................ if tdata <> 0 then
  [ 41] pushsymb 569 ............................ <#cache>
  [ 44] pusharglist 1 ........................... <#cache>
  [ 46] extcall 112 ............................. <getObject(#cache)>
  [ 48] getprop 527 ............................. <pCacheKey>
  [ 51] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 53] objcall 201 ............................. <getObject(#cache).get(pCacheKey)>
  [ 55] pushsymb 629 ............................ <#users>
  [ 58] pusharglist 2 ........................... <getObject(#cache).get(pCacheKey), #users>
  [ 60] objcall 214 ............................. <getObject(#cache).get(pCacheKey).getaProp(#users)>
  [ 62] getparam 1 .............................. <tdata>
  [ 64] pusharglistnoret 2 ...................... <getObject(#cache).get(pCacheKey).getaProp(#users), tdata>
  [ 66] objcall 151 ............................. getObject(#cache).get(pCacheKey).getaProp(#users).add(tdata)
  [ 68] getprop 525 ............................. <pActiveFlag>
  [ 71] getparam 1 .............................. <tdata>
  [ 73] pushzero ................................ <0>
  [ 74] nteq .................................... <tdata <> 0>
  [ 75] and ..................................... <pActiveFlag and (tdata <> 0)>
  [ 76] jmpifz [ 91] ............................ if pActiveFlag and (tdata <> 0) then / else
  [ 79] getparam 0 .............................. <me>
  [ 81] getparam 1 .............................. <tdata>
  [ 83] pusharglistnoret 2 ...................... <me, tdata>
  [ 85] objcall 482 ............................. me.createUserObject(tdata)
  [ 88] jmp [103]
  [ 91] getparam 0 .............................. <me>
  [ 93] pushsymb 629 ............................ <#users>
  [ 96] pushint8 1 .............................. <1>
  [ 98] pusharglistnoret 3 ...................... <me, #users, 1>
  [100] objcall 512 ............................. me.updateProcess(#users, 1)
  [103] pushint8 1 .............................. <1>
  [105] pusharglistnoret 1 ...................... <1>
  [107] extcall 116 ............................. return 1
  [109] ret
end

on validateActiveObjects me, tdata
  [  0] pushsymb 569 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 112 ............................. <getObject(#cache)>
  [  7] getprop 527 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 458 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 508 ............................ <#validateActiveObjects>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validateActiveObjects>
  [ 28] extcall 123 ............................. <error(me, "Data not expected yet!", #validateActiveObjects)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validateActiveObjects)>
  [ 32] extcall 116 ............................. return error(me, "Data not expected yet!", #validateActiveObjects)
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <tdata <> 0>
  [ 38] jmpifz [ 68] ............................ if tdata <> 0 then
  [ 41] pushsymb 569 ............................ <#cache>
  [ 44] pusharglist 1 ........................... <#cache>
  [ 46] extcall 112 ............................. <getObject(#cache)>
  [ 48] getprop 527 ............................. <pCacheKey>
  [ 51] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 53] objcall 201 ............................. <getObject(#cache).get(pCacheKey)>
  [ 55] pushsymb 628 ............................ <#Active>
  [ 58] pusharglist 2 ........................... <getObject(#cache).get(pCacheKey), #Active>
  [ 60] objcall 214 ............................. <getObject(#cache).get(pCacheKey).getaProp(#Active)>
  [ 62] getparam 1 .............................. <tdata>
  [ 64] pusharglistnoret 2 ...................... <getObject(#cache).get(pCacheKey).getaProp(#Active), tdata>
  [ 66] objcall 151 ............................. getObject(#cache).get(pCacheKey).getaProp(#Active).add(tdata)
  [ 68] getprop 525 ............................. <pActiveFlag>
  [ 71] getparam 1 .............................. <tdata>
  [ 73] pushzero ................................ <0>
  [ 74] nteq .................................... <tdata <> 0>
  [ 75] and ..................................... <pActiveFlag and (tdata <> 0)>
  [ 76] jmpifz [ 91] ............................ if pActiveFlag and (tdata <> 0) then / else
  [ 79] getparam 0 .............................. <me>
  [ 81] getparam 1 .............................. <tdata>
  [ 83] pusharglistnoret 2 ...................... <me, tdata>
  [ 85] objcall 484 ............................. me.createActiveObject(tdata)
  [ 88] jmp [103]
  [ 91] getparam 0 .............................. <me>
  [ 93] pushsymb 628 ............................ <#Active>
  [ 96] pushint8 1 .............................. <1>
  [ 98] pusharglistnoret 3 ...................... <me, #Active, 1>
  [100] objcall 512 ............................. me.updateProcess(#Active, 1)
  [103] pushint8 1 .............................. <1>
  [105] pusharglistnoret 1 ...................... <1>
  [107] extcall 116 ............................. return 1
  [109] ret
end

on validatePassiveObjects me, tdata
  [  0] pushsymb 569 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 112 ............................. <getObject(#cache)>
  [  7] getprop 527 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 458 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 509 ............................ <#validatePassiveObjects>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validatePassiveObjects>
  [ 28] extcall 123 ............................. <error(me, "Data not expected yet!", #validatePassiveObjects)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validatePassiveObjects)>
  [ 32] extcall 116 ............................. return error(me, "Data not expected yet!", #validatePassiveObjects)
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <tdata <> 0>
  [ 38] jmpifz [ 68] ............................ if tdata <> 0 then
  [ 41] pushsymb 569 ............................ <#cache>
  [ 44] pusharglist 1 ........................... <#cache>
  [ 46] extcall 112 ............................. <getObject(#cache)>
  [ 48] getprop 527 ............................. <pCacheKey>
  [ 51] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 53] objcall 201 ............................. <getObject(#cache).get(pCacheKey)>
  [ 55] pushsymb 627 ............................ <#passive>
  [ 58] pusharglist 2 ........................... <getObject(#cache).get(pCacheKey), #passive>
  [ 60] objcall 214 ............................. <getObject(#cache).get(pCacheKey).getaProp(#passive)>
  [ 62] getparam 1 .............................. <tdata>
  [ 64] pusharglistnoret 2 ...................... <getObject(#cache).get(pCacheKey).getaProp(#passive), tdata>
  [ 66] objcall 151 ............................. getObject(#cache).get(pCacheKey).getaProp(#passive).add(tdata)
  [ 68] getprop 525 ............................. <pActiveFlag>
  [ 71] getparam 1 .............................. <tdata>
  [ 73] pushzero ................................ <0>
  [ 74] nteq .................................... <tdata <> 0>
  [ 75] and ..................................... <pActiveFlag and (tdata <> 0)>
  [ 76] jmpifz [ 91] ............................ if pActiveFlag and (tdata <> 0) then / else
  [ 79] getparam 0 .............................. <me>
  [ 81] getparam 1 .............................. <tdata>
  [ 83] pusharglistnoret 2 ...................... <me, tdata>
  [ 85] objcall 485 ............................. me.createPassiveObject(tdata)
  [ 88] jmp [103]
  [ 91] getparam 0 .............................. <me>
  [ 93] pushsymb 627 ............................ <#passive>
  [ 96] pushint8 1 .............................. <1>
  [ 98] pusharglistnoret 3 ...................... <me, #passive, 1>
  [100] objcall 512 ............................. me.updateProcess(#passive, 1)
  [103] pushint8 1 .............................. <1>
  [105] pusharglistnoret 1 ...................... <1>
  [107] extcall 116 ............................. return 1
  [109] ret
end

on validateItemObjects me, tdata
  [  0] pushsymb 569 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 112 ............................. <getObject(#cache)>
  [  7] getprop 527 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 458 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 510 ............................ <#validateItemObjects>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validateItemObjects>
  [ 28] extcall 123 ............................. <error(me, "Data not expected yet!", #validateItemObjects)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validateItemObjects)>
  [ 32] extcall 116 ............................. return error(me, "Data not expected yet!", #validateItemObjects)
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <tdata <> 0>
  [ 38] jmpifz [ 68] ............................ if tdata <> 0 then
  [ 41] pushsymb 569 ............................ <#cache>
  [ 44] pusharglist 1 ........................... <#cache>
  [ 46] extcall 112 ............................. <getObject(#cache)>
  [ 48] getprop 527 ............................. <pCacheKey>
  [ 51] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 53] objcall 201 ............................. <getObject(#cache).get(pCacheKey)>
  [ 55] pushsymb 630 ............................ <#items>
  [ 58] pusharglist 2 ........................... <getObject(#cache).get(pCacheKey), #items>
  [ 60] objcall 214 ............................. <getObject(#cache).get(pCacheKey).getaProp(#items)>
  [ 62] getparam 1 .............................. <tdata>
  [ 64] pusharglistnoret 2 ...................... <getObject(#cache).get(pCacheKey).getaProp(#items), tdata>
  [ 66] objcall 151 ............................. getObject(#cache).get(pCacheKey).getaProp(#items).add(tdata)
  [ 68] getprop 525 ............................. <pActiveFlag>
  [ 71] getparam 1 .............................. <tdata>
  [ 73] pushzero ................................ <0>
  [ 74] nteq .................................... <tdata <> 0>
  [ 75] and ..................................... <pActiveFlag and (tdata <> 0)>
  [ 76] jmpifz [ 91] ............................ if pActiveFlag and (tdata <> 0) then / else
  [ 79] getparam 0 .............................. <me>
  [ 81] getparam 1 .............................. <tdata>
  [ 83] pusharglistnoret 2 ...................... <me, tdata>
  [ 85] objcall 488 ............................. me.createItemObject(tdata)
  [ 88] jmp [103]
  [ 91] getparam 0 .............................. <me>
  [ 93] pushsymb 630 ............................ <#items>
  [ 96] pushint8 1 .............................. <1>
  [ 98] pusharglistnoret 3 ...................... <me, #items, 1>
  [100] objcall 512 ............................. me.updateProcess(#items, 1)
  [103] pushint8 1 .............................. <1>
  [105] pusharglistnoret 1 ...................... <1>
  [107] extcall 116 ............................. return 1
  [109] ret
end

on pollRoomMessages me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 368 ............................. <me.getRoomConnection()>
  [  7] not ..................................... <not me.getRoomConnection()>
  [  8] getprop 538 ............................. <pRoomPollerID>
  [ 11] pusharglist 1 ........................... <pRoomPollerID>
  [ 13] extcall 196 ............................. <timeoutExists(pRoomPollerID)>
  [ 15] and ..................................... <not me.getRoomConnection() and timeoutExists(pRoomPollerID)>
  [ 16] jmpifz [ 30] ............................ if not me.getRoomConnection() and timeoutExists(pRoomPollerID) then
  [ 19] getprop 538 ............................. <pRoomPollerID>
  [ 22] pusharglist 1 ........................... <pRoomPollerID>
  [ 24] extcall 198 ............................. <removeTimeout(pRoomPollerID)>
  [ 26] pusharglistnoret 1 ...................... <removeTimeout(pRoomPollerID)>
  [ 28] extcall 116 ............................. return removeTimeout(pRoomPollerID)
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglist 1 ........................... <me>
  [ 34] objcall 368 ............................. <me.getRoomConnection()>
  [ 37] pusharglist 1 ........................... <me.getRoomConnection()>
  [ 39] objcall 645 ............................. <me.getRoomConnection().getWaitingMessagesCount()>
  [ 42] pushzero ................................ <0>
  [ 43] gt ...................................... <me.getRoomConnection().getWaitingMessagesCount() > 0>
  [ 44] jmpifz [ 59] ............................ if me.getRoomConnection().getWaitingMessagesCount() > 0 then
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglist 1 ........................... <me>
  [ 51] objcall 368 ............................. <me.getRoomConnection()>
  [ 54] pusharglistnoret 1 ...................... <me.getRoomConnection()>
  [ 56] objcall 646 ............................. me.getRoomConnection().processWaitingMessages()
  [ 59] ret
end

on updateProcess me, tKey, tValue
  [  0] getprop 525 ............................. <pActiveFlag>
  [  3] jmpifz [ 21] ............................ if pActiveFlag then
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 113 ............................ <"Attempted to remake room!">
  [ 10] pushsymb 512 ............................ <#updateProcess>
  [ 13] pusharglist 3 ........................... <me, "Attempted to remake room!", #updateProcess>
  [ 15] extcall 123 ............................. <error(me, "Attempted to remake room!", #updateProcess)>
  [ 17] pusharglistnoret 1 ...................... <error(me, "Attempted to remake room!", #updateProcess)>
  [ 19] extcall 116 ............................. return error(me, "Attempted to remake room!", #updateProcess)
  [ 21] getprop 526 ............................. <pProcessList>
  [ 24] getparam 1 .............................. <tKey>
  [ 26] pusharglist 2 ........................... <pProcessList, tKey>
  [ 28] objcall 138 ............................. <pProcessList[tKey]>
  [ 30] pushzero ................................ <0>
  [ 31] eq ...................................... <pProcessList[tKey] = 0>
  [ 32] jmpifz [ 46] ............................ if pProcessList[tKey] = 0 then
  [ 35] getprop 526 ............................. <pProcessList>
  [ 38] getparam 1 .............................. <tKey>
  [ 40] getparam 2 .............................. <tValue>
  [ 42] pusharglistnoret 3 ...................... <pProcessList, tKey, tValue>
  [ 44] objcall 136 ............................. pProcessList[tKey] = tValue
  [ 46] getprop 526 ............................. <pProcessList>
  [ 49] peek 0
  [ 51] pusharglist 1
  [ 53] extcall 149
  [ 55] pushint8 1
  [ 57] peek 0
  [ 59] peek 2
  [ 61] lteq
  [ 62] jmpifz [ 89] ............................ repeat with tProcess in pProcessList
  [ 65] peek 2
  [ 67] peek 1
  [ 69] pusharglist 2
  [ 71] extcall 138
  [ 73] setlocal 0
  [ 75] getlocal 0 .............................. <tProcess>
  [ 77] not ..................................... <not tProcess>
  [ 78] jmpifz [ 84] ............................ if not tProcess then
  [ 81] jmp [ 89] ............................... exit repeat
  [ 84] pushint8 1
  [ 86] add
  [ 87] endrepeat [ 57]
  [ 89] pop 3
  [ 91] getlocal 0 .............................. <tProcess>
  [ 93] pushint8 1 .............................. <1>
  [ 95] eq ...................................... <tProcess = 1>
  [ 96] jmpifz [532] ............................ if tProcess = 1 then
  [ 99] getprop 538 ............................. <pRoomPollerID>
  [102] pusharglist 1 ........................... <pRoomPollerID>
  [104] extcall 196 ............................. <timeoutExists(pRoomPollerID)>
  [106] jmpifz [116] ............................ if timeoutExists(pRoomPollerID) then
  [109] getprop 538 ............................. <pRoomPollerID>
  [112] pusharglistnoret 1 ...................... <pRoomPollerID>
  [114] extcall 198 ............................. removeTimeout(pRoomPollerID)
  [116] pushsymb 569 ............................ <#cache>
  [119] pusharglist 1 ........................... <#cache>
  [121] extcall 112 ............................. <getObject(#cache)>
  [123] getprop 527 ............................. <pCacheKey>
  [126] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [128] objcall 201 ............................. <getObject(#cache).get(pCacheKey)>
  [130] setlocal 1 .............................. tCache = getObject(#cache).get(pCacheKey)
  [132] getlocal 1 .............................. <tCache>
  [134] pushsymb 627 ............................ <#passive>
  [137] pusharglist 2 ........................... <tCache, #passive>
  [139] objcall 138 ............................. <tCache[#passive]>
  [141] peek 0
  [143] pusharglist 1
  [145] extcall 149
  [147] pushint8 1
  [149] peek 0
  [151] peek 2
  [153] lteq
  [154] jmpifz [181] ............................ repeat with tdata in tCache[#passive]
  [157] peek 2
  [159] peek 1
  [161] pusharglist 2
  [163] extcall 138
  [165] setlocal 2
  [167] getparam 0 .............................. <me>
  [169] getlocal 2 .............................. <tdata>
  [171] pusharglistnoret 2 ...................... <me, tdata>
  [173] objcall 485 ............................. me.createPassiveObject(tdata)
  [176] pushint8 1
  [178] add
  [179] endrepeat [149]
  [181] pop 3
  [183] getparam 0 .............................. <me>
  [185] pusharglist 1 ........................... <me>
  [187] objcall 493 ............................. <me.getShadowManager()>
  [190] pushint8 1 .............................. <1>
  [192] pusharglistnoret 2 ...................... <me.getShadowManager(), 1>
  [194] objcall 573 ............................. me.getShadowManager().disableRender(1)
  [197] getlocal 1 .............................. <tCache>
  [199] pushsymb 628 ............................ <#Active>
  [202] pusharglist 2 ........................... <tCache, #Active>
  [204] objcall 138 ............................. <tCache[#Active]>
  [206] peek 0
  [208] pusharglist 1
  [210] extcall 149
  [212] pushint8 1
  [214] peek 0
  [216] peek 2
  [218] lteq
  [219] jmpifz [246] ............................ repeat with tdata in tCache[#Active]
  [222] peek 2
  [224] peek 1
  [226] pusharglist 2
  [228] extcall 138
  [230] setlocal 2
  [232] getparam 0 .............................. <me>
  [234] getlocal 2 .............................. <tdata>
  [236] pusharglistnoret 2 ...................... <me, tdata>
  [238] objcall 484 ............................. me.createActiveObject(tdata)
  [241] pushint8 1
  [243] add
  [244] endrepeat [214]
  [246] pop 3
  [248] getparam 0 .............................. <me>
  [250] pusharglist 1 ........................... <me>
  [252] objcall 493 ............................. <me.getShadowManager()>
  [255] pushzero ................................ <0>
  [256] pusharglistnoret 2 ...................... <me.getShadowManager(), 0>
  [258] objcall 573 ............................. me.getShadowManager().disableRender(0)
  [261] getparam 0 .............................. <me>
  [263] pusharglist 1 ........................... <me>
  [265] objcall 493 ............................. <me.getShadowManager()>
  [268] pusharglistnoret 1 ...................... <me.getShadowManager()>
  [270] objcall 647 ............................. me.getShadowManager().render()
  [273] getlocal 1 .............................. <tCache>
  [275] pushsymb 630 ............................ <#items>
  [278] pusharglist 2 ........................... <tCache, #items>
  [280] objcall 138 ............................. <tCache[#items]>
  [282] peek 0
  [284] pusharglist 1
  [286] extcall 149
  [288] pushint8 1
  [290] peek 0
  [292] peek 2
  [294] lteq
  [295] jmpifz [322] ............................ repeat with tdata in tCache[#items]
  [298] peek 2
  [300] peek 1
  [302] pusharglist 2
  [304] extcall 138
  [306] setlocal 2
  [308] getparam 0 .............................. <me>
  [310] getlocal 2 .............................. <tdata>
  [312] pusharglistnoret 2 ...................... <me, tdata>
  [314] objcall 488 ............................. me.createItemObject(tdata)
  [317] pushint8 1
  [319] add
  [320] endrepeat [290]
  [322] pop 3
  [324] getlocal 1 .............................. <tCache>
  [326] pushsymb 629 ............................ <#users>
  [329] pusharglist 2 ........................... <tCache, #users>
  [331] objcall 138 ............................. <tCache[#users]>
  [333] peek 0
  [335] pusharglist 1
  [337] extcall 149
  [339] pushint8 1
  [341] peek 0
  [343] peek 2
  [345] lteq
  [346] jmpifz [373] ............................ repeat with tdata in tCache[#users]
  [349] peek 2
  [351] peek 1
  [353] pusharglist 2
  [355] extcall 138
  [357] setlocal 2
  [359] getparam 0 .............................. <me>
  [361] getlocal 2 .............................. <tdata>
  [363] pusharglistnoret 2 ...................... <me, tdata>
  [365] objcall 482 ............................. me.createUserObject(tdata)
  [368] pushint8 1
  [370] add
  [371] endrepeat [341]
  [373] pop 3
  [375] getlocal 1 .............................. <tCache>
  [377] pushsymb 629 ............................ <#users>
  [380] pusharglist 0 ........................... <[]>
  [382] pushlist ................................ <[]>
  [383] pusharglistnoret 3 ...................... <tCache, #users, []>
  [385] objcall 136 ............................. tCache[#users] = []
  [387] getlocal 1 .............................. <tCache>
  [389] pushsymb 628 ............................ <#Active>
  [392] pusharglist 0 ........................... <[]>
  [394] pushlist ................................ <[]>
  [395] pusharglistnoret 3 ...................... <tCache, #Active, []>
  [397] objcall 136 ............................. tCache[#Active] = []
  [399] getlocal 1 .............................. <tCache>
  [401] pushsymb 630 ............................ <#items>
  [404] pusharglist 0 ........................... <[]>
  [406] pushlist ................................ <[]>
  [407] pusharglistnoret 3 ...................... <tCache, #items, []>
  [409] objcall 136 ............................. tCache[#items] = []
  [411] getparam 0 .............................. <me>
  [413] pusharglist 1 ........................... <me>
  [415] objcall 570 ............................. <me.getInterface()>
  [418] pusharglistnoret 1 ...................... <me.getInterface()>
  [420] objcall 7 ............................... me.getInterface().showInfostand()
  [422] getparam 0 .............................. <me>
  [424] pusharglist 1 ........................... <me>
  [426] objcall 570 ............................. <me.getInterface()>
  [429] pusharglistnoret 1 ...................... <me.getInterface()>
  [431] objcall 5 ............................... me.getInterface().showRoomBar()
  [433] getparam 0 .............................. <me>
  [435] pusharglist 1 ........................... <me>
  [437] objcall 570 ............................. <me.getInterface()>
  [440] pusharglistnoret 1 ...................... <me.getInterface()>
  [442] objcall 22 .............................. me.getInterface().hideLoaderBar()
  [444] getparam 0 .............................. <me>
  [446] pusharglist 1 ........................... <me>
  [448] objcall 570 ............................. <me.getInterface()>
  [451] pusharglistnoret 1 ...................... <me.getInterface()>
  [453] objcall 26 .............................. me.getInterface().hideTrashCover()
  [455] pushint8 1 .............................. <1>
  [457] setprop 525 ............................. pActiveFlag = 1
  [460] getprop 544 ............................. <pChatProps>
  [463] pushcons 16 ............................. <"mode">
  [465] pushcons 17 ............................. <"CHAT">
  [467] pusharglistnoret 3 ...................... <pChatProps, "mode", "CHAT">
  [469] objcall 136 ............................. pChatProps["mode"] = "CHAT"
  [471] pushsymb 649 ............................ <#arrow>
  [474] pusharglistnoret 1 ...................... <#arrow>
  [476] extcall 648 ............................. setcursor(#arrow)
  [479] pushsymb 478 ............................ <#prepare>
  [482] getparam 0 .............................. <me>
  [484] pusharglist 1 ........................... <me>
  [486] objcall 489 ............................. <me.getRoomPrg()>
  [489] pusharglist 1 ........................... <[me.getRoomPrg()]>
  [491] pushlist ................................ <[me.getRoomPrg()]>
  [492] pusharglistnoret 2 ...................... <#prepare, [me.getRoomPrg()]>
  [494] extcall 142 ............................. call(#prepare, [me.getRoomPrg()])
  [496] pushsymb 650 ............................ <#roomReady>
  [499] pusharglistnoret 1 ...................... <#roomReady>
  [501] extcall 180 ............................. executeMessage(#roomReady)
  [503] getparam 0 .............................. <me>
  [505] pusharglist 1 ........................... <me>
  [507] objcall 368 ............................. <me.getRoomConnection()>
  [510] pushcons 114 ............................ <"G_STAT">
  [512] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_STAT">
  [514] objcall 369 ............................. me.getRoomConnection().send("G_STAT")
  [517] getparam 0 .............................. <me>
  [519] pusharglist 1 ........................... <me>
  [521] objcall 115 ............................. <me.getID()>
  [523] pusharglist 1 ........................... <me.getID()>
  [525] extcall 651 ............................. <receivePrepare(me.getID())>
  [528] pusharglistnoret 1 ...................... <receivePrepare(me.getID())>
  [530] extcall 116 ............................. return receivePrepare(me.getID())
  [532] pushzero ................................ <0>
  [533] pusharglistnoret 1 ...................... <0>
  [535] extcall 116 ............................. return 0
  [537] ret
end

on createRoomObject me, tdata, tList, tClass
  [  0] getparam 1 .............................. <tdata>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <tdata = 0>
  [  4] jmpifz [ 12] ............................ if tdata = 0 then
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 116 ............................. return 0
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 359 ............................ <#id>
  [ 17] pusharglist 2 ........................... <tdata, #id>
  [ 19] objcall 138 ............................. <tdata[#id]>
  [ 21] pusharglist 1 ........................... <tdata[#id]>
  [ 23] extcall 253 ............................. <voidp(tdata[#id])>
  [ 25] getparam 2 .............................. <tList>
  [ 27] pusharglist 1 ........................... <tList>
  [ 29] extcall 258 ............................. <listp(tList)>
  [ 32] not ..................................... <not listp(tList)>
  [ 33] or ...................................... <voidp(tdata[#id]) or not listp(tList)>
  [ 34] jmpifz [ 52] ............................ if voidp(tdata[#id]) or not listp(tList) then
  [ 37] getparam 0 .............................. <me>
  [ 39] pushcons 115 ............................ <"Invalid arguments in object creation!">
  [ 41] pushsymb 513 ............................ <#createRoomObject>
  [ 44] pusharglist 3 ........................... <me, "Invalid arguments in object creation!", #createRoomObject>
  [ 46] extcall 123 ............................. <error(me, "Invalid arguments in object creation!", #createRoomObject)>
  [ 48] pusharglistnoret 1 ...................... <error(me, "Invalid arguments in object creation!", #createRoomObject)>
  [ 50] extcall 116 ............................. return error(me, "Invalid arguments in object creation!", #createRoomObject)
  [ 52] getparam 2 .............................. <tList>
  [ 54] getparam 1 .............................. <tdata>
  [ 56] pushsymb 359 ............................ <#id>
  [ 59] pusharglist 2 ........................... <tdata, #id>
  [ 61] objcall 138 ............................. <tdata[#id]>
  [ 63] pusharglist 2 ........................... <tList, tdata[#id]>
  [ 65] objcall 138 ............................. <tList[tdata[#id]]>
  [ 67] pusharglist 1 ........................... <tList[tdata[#id]]>
  [ 69] extcall 253 ............................. <voidp(tList[tdata[#id]])>
  [ 71] not ..................................... <not voidp(tList[tdata[#id]])>
  [ 72] jmpifz [100] ............................ if not voidp(tList[tdata[#id]]) then
  [ 75] getparam 0 .............................. <me>
  [ 77] pushcons 116 ............................ <"Object already exists:">
  [ 79] getparam 1 .............................. <tdata>
  [ 81] pushsymb 359 ............................ <#id>
  [ 84] pusharglist 2 ........................... <tdata, #id>
  [ 86] objcall 138 ............................. <tdata[#id]>
  [ 88] joinpadstr .............................. <"Object already exists:" && tdata[#id]>
  [ 89] pushsymb 513 ............................ <#createRoomObject>
  [ 92] pusharglist 3 ........................... <me, "Object already exists:" && tdata[#id], #createRoomObject>
  [ 94] extcall 123 ............................. <error(me, "Object already exists:" && tdata[#id], #createRoomObject)>
  [ 96] pusharglistnoret 1 ...................... <error(me, "Object already exists:" && tdata[#id], #createRoomObject)>
  [ 98] extcall 116 ............................. return error(me, "Object already exists:" && tdata[#id], #createRoomObject)
  [100] getparam 3 .............................. <tClass>
  [102] pusharglist 1 ........................... <tClass>
  [104] extcall 253 ............................. <voidp(tClass)>
  [106] jmpifz [113] ............................ if voidp(tClass) then
  [109] pushcons 42 ............................. <"passive">
  [111] setparam 3 .............................. tClass = "passive"
  [113] getparam 1 .............................. <tdata>
  [115] pushsymb 463 ............................ <#class>
  [118] pusharglist 2 ........................... <tdata, #class>
  [120] objcall 138 ............................. <tdata[#class]>
  [122] setlocal 0 .............................. tCustomCls = tdata[#class]
  [124] getlocal 0 .............................. <tCustomCls>
  [126] pushcons 117 ............................ <"*">
  [128] containsstr ............................. <tCustomCls contains "*">
  [129] jmpifz [160] ............................ if tCustomCls contains "*" then
  [132] getmovieprop 654 ........................ <the itemDelimiter>
  [135] setlocal 1 .............................. tDelim = the itemDelimiter
  [137] pushcons 117 ............................ <"*">
  [139] setmovieprop 654 ........................ the itemDelimiter = "*"
  [142] getlocal 0 .............................. <tCustomCls>
  [144] pushsymb 655 ............................ <#item>
  [147] pushint8 1 .............................. <1>
  [149] pusharglist 3 ........................... <tCustomCls, #item, 1>
  [151] objcall 134 ............................. <tCustomCls.item[1]>
  [153] setlocal 0 .............................. tCustomCls = tCustomCls.item[1]
  [155] getlocal 1 .............................. <tDelim>
  [157] setmovieprop 654 ........................ the itemDelimiter = tDelim
  [160] getprop 536 ............................. <pClassContId>
  [163] pusharglist 1 ........................... <pClassContId>
  [165] extcall 112 ............................. <getObject(pClassContId)>
  [167] getlocal 0 .............................. <tCustomCls>
  [169] pusharglist 2 ........................... <getObject(pClassContId), tCustomCls>
  [171] objcall 458 ............................. <getObject(pClassContId).exists(tCustomCls)>
  [174] jmpifz [200] ............................ if getObject(pClassContId).exists(tCustomCls) then / else
  [177] getprop 536 ............................. <pClassContId>
  [180] pusharglist 1 ........................... <pClassContId>
  [182] extcall 112 ............................. <getObject(pClassContId)>
  [184] getlocal 0 .............................. <tCustomCls>
  [186] pusharglist 2 ........................... <getObject(pClassContId), tCustomCls>
  [188] objcall 201 ............................. <getObject(pClassContId).get(tCustomCls)>
  [190] pusharglist 1 ........................... <getObject(pClassContId).get(tCustomCls)>
  [192] extcall 385 ............................. <value(getObject(pClassContId).get(tCustomCls))>
  [195] setlocal 2 .............................. tClasses = value(getObject(pClassContId).get(tCustomCls))
  [197] jmp [220]
  [200] getprop 536 ............................. <pClassContId>
  [203] pusharglist 1 ........................... <pClassContId>
  [205] extcall 112 ............................. <getObject(pClassContId)>
  [207] getparam 3 .............................. <tClass>
  [209] pusharglist 2 ........................... <getObject(pClassContId), tClass>
  [211] objcall 201 ............................. <getObject(pClassContId).get(tClass)>
  [213] pusharglist 1 ........................... <getObject(pClassContId).get(tClass)>
  [215] extcall 385 ............................. <value(getObject(pClassContId).get(tClass))>
  [218] setlocal 2 .............................. tClasses = value(getObject(pClassContId).get(tClass))
  [220] pushsymb 111 ............................ <#temp>
  [222] getlocal 2 .............................. <tClasses>
  [224] pusharglist 2 ........................... <#temp, tClasses>
  [226] extcall 109 ............................. <createObject(#temp, tClasses)>
  [228] setlocal 3 .............................. tObject = createObject(#temp, tClasses)
  [230] getlocal 3 .............................. <tObject>
  [232] pusharglist 1 ........................... <tObject>
  [234] extcall 363 ............................. <objectp(tObject)>
  [237] not ..................................... <not objectp(tObject)>
  [238] jmpifz [259] ............................ if not objectp(tObject) then
  [241] getparam 0 .............................. <me>
  [243] pushcons 118 ............................ <"Failed to create room object:">
  [245] getparam 1 .............................. <tdata>
  [247] joinpadstr .............................. <"Failed to create room object:" && tdata>
  [248] pushsymb 513 ............................ <#createRoomObject>
  [251] pusharglist 3 ........................... <me, "Failed to create room object:" && tdata, #createRoomObject>
  [253] extcall 123 ............................. <error(me, "Failed to create room object:" && tdata, #createRoomObject)>
  [255] pusharglistnoret 1 ...................... <error(me, "Failed to create room object:" && tdata, #createRoomObject)>
  [257] extcall 116 ............................. return error(me, "Failed to create room object:" && tdata, #createRoomObject)
  [259] getlocal 3 .............................. <tObject>
  [261] getparam 1 .............................. <tdata>
  [263] pushsymb 359 ............................ <#id>
  [266] pusharglist 2 ........................... <tdata, #id>
  [268] objcall 138 ............................. <tdata[#id]>
  [270] pusharglistnoret 2 ...................... <tObject, tdata[#id]>
  [272] objcall 656 ............................. tObject.setID(tdata[#id])
  [275] getlocal 3 .............................. <tObject>
  [277] getparam 1 .............................. <tdata>
  [279] pusharglist 1 ........................... <tdata>
  [281] objcall 555 ............................. <tdata.duplicate()>
  [284] pusharglistnoret 2 ...................... <tObject, tdata.duplicate()>
  [286] objcall 140 ............................. tObject.define(tdata.duplicate())
  [288] pusharglist 0 ........................... <>
  [290] thebuiltin 657 .......................... <the result>
  [293] pushzero ................................ <0>
  [294] eq ...................................... <the result = 0>
  [295] jmpifz [304] ............................ if the result = 0 then
  [298] pushint8 1 .............................. <1>
  [300] pusharglistnoret 1 ...................... <1>
  [302] extcall 116 ............................. return 1
  [304] getparam 2 .............................. <tList>
  [306] getlocal 3 .............................. <tObject>
  [308] pusharglist 1 ........................... <tObject>
  [310] objcall 115 ............................. <tObject.getID()>
  [312] getlocal 3 .............................. <tObject>
  [314] pusharglistnoret 3 ...................... <tList, tObject.getID(), tObject>
  [316] objcall 136 ............................. tList[tObject.getID()] = tObject
  [318] pushint8 1 .............................. <1>
  [320] pusharglistnoret 1 ...................... <1>
  [322] extcall 116 ............................. return 1
  [324] ret
end

on removeRoomObject me, tid, tList
  [  0] getparam 2 .............................. <tList>
  [  2] getparam 1 .............................. <tid>
  [  4] pusharglist 2 ........................... <tList, tid>
  [  6] objcall 138 ............................. <tList[tid]>
  [  8] pusharglist 1 ........................... <tList[tid]>
  [ 10] extcall 253 ............................. <voidp(tList[tid])>
  [ 12] jmpifz [ 33] ............................ if voidp(tList[tid]) then
  [ 15] getparam 0 .............................. <me>
  [ 17] pushcons 119 ............................ <"Object not found:">
  [ 19] getparam 1 .............................. <tid>
  [ 21] joinpadstr .............................. <"Object not found:" && tid>
  [ 22] pushsymb 514 ............................ <#removeRoomObject>
  [ 25] pusharglist 3 ........................... <me, "Object not found:" && tid, #removeRoomObject>
  [ 27] extcall 123 ............................. <error(me, "Object not found:" && tid, #removeRoomObject)>
  [ 29] pusharglistnoret 1 ...................... <error(me, "Object not found:" && tid, #removeRoomObject)>
  [ 31] extcall 116 ............................. return error(me, "Object not found:" && tid, #removeRoomObject)
  [ 33] getparam 2 .............................. <tList>
  [ 35] getparam 1 .............................. <tid>
  [ 37] pusharglist 2 ........................... <tList, tid>
  [ 39] objcall 138 ............................. <tList[tid]>
  [ 41] pusharglistnoret 1 ...................... <tList[tid]>
  [ 43] objcall 2 ............................... tList[tid].deconstruct()
  [ 45] getparam 2 .............................. <tList>
  [ 47] getparam 1 .............................. <tid>
  [ 49] pusharglistnoret 2 ...................... <tList, tid>
  [ 51] objcall 609 ............................. tList.deleteProp(tid)
  [ 54] pushint8 1 .............................. <1>
  [ 56] pusharglistnoret 1 ...................... <1>
  [ 58] extcall 116 ............................. return 1
  [ 60] ret
end

on getRoomObject me, tid, tList
  [  0] getparam 1 .............................. <tid>
  [  2] pushsymb 216 ............................ <#list>
  [  4] eq ...................................... <tid = #list>
  [  5] jmpifz [ 14] ............................ if tid = #list then
  [  8] getparam 2 .............................. <tList>
  [ 10] pusharglistnoret 1 ...................... <tList>
  [ 12] extcall 116 ............................. return tList
  [ 14] getparam 2 .............................. <tList>
  [ 16] getparam 1 .............................. <tid>
  [ 18] pusharglist 2 ........................... <tList, tid>
  [ 20] objcall 214 ............................. <tList.getaProp(tid)>
  [ 22] pusharglist 1 ........................... <tList.getaProp(tid)>
  [ 24] extcall 253 ............................. <voidp(tList.getaProp(tid))>
  [ 26] jmpifz [ 37] ............................ if voidp(tList.getaProp(tid)) then / else
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 116 ............................. return 0
  [ 34] jmp [ 49]
  [ 37] getparam 2 .............................. <tList>
  [ 39] getparam 1 .............................. <tid>
  [ 41] pusharglist 2 ........................... <tList, tid>
  [ 43] objcall 214 ............................. <tList.getaProp(tid)>
  [ 45] pusharglistnoret 1 ...................... <tList.getaProp(tid)>
  [ 47] extcall 116 ............................. return tList.getaProp(tid)
  [ 49] ret
end

on roomObjectExists me, tid, tList
  [  0] getparam 2 .............................. <tList>
  [  2] getparam 1 .............................. <tid>
  [  4] pusharglist 2 ........................... <tList, tid>
  [  6] objcall 138 ............................. <tList[tid]>
  [  8] pusharglist 1 ........................... <tList[tid]>
  [ 10] extcall 253 ............................. <voidp(tList[tid])>
  [ 12] not ..................................... <not voidp(tList[tid])>
  [ 13] pusharglistnoret 1 ...................... <not voidp(tList[tid])>
  [ 15] extcall 116 ............................. return not voidp(tList[tid])
  [ 17] ret
end

on startTeleport me, tTeleId, tFlatID
  [  0] pushsymb 200 ............................ <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 112 ............................. <getObject(#session)>
  [  6] pushcons 36 ............................. <"target_door_ID">
  [  8] getparam 1 .............................. <tTeleId>
  [ 10] pusharglistnoret 3 ...................... <getObject(#session), "target_door_ID", tTeleId>
  [ 12] objcall 556 ............................. getObject(#session).set("target_door_ID", tTeleId)
  [ 15] pushsymb 200 ............................ <#session>
  [ 17] pusharglist 1 ........................... <#session>
  [ 19] extcall 112 ............................. <getObject(#session)>
  [ 21] pushcons 120 ............................ <"target_flat_ID">
  [ 23] getparam 2 .............................. <tFlatID>
  [ 25] pusharglistnoret 3 ...................... <getObject(#session), "target_flat_ID", tFlatID>
  [ 27] objcall 556 ............................. getObject(#session).set("target_flat_ID", tFlatID)
  [ 30] pushcons 121 ............................ <"receivedFlatStructf_">
  [ 32] getparam 2 .............................. <tFlatID>
  [ 34] joinstr ................................. <"receivedFlatStructf_" & tFlatID>
  [ 35] pusharglist 1 ........................... <"receivedFlatStructf_" & tFlatID>
  [ 37] extcall 662 ............................. <symbol("receivedFlatStructf_" & tFlatID)>
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglist 1 ........................... <me>
  [ 44] objcall 115 ............................. <me.getID()>
  [ 46] pushsymb 518 ............................ <#processTeleportStruct>
  [ 49] pusharglistnoret 3 ...................... <symbol("receivedFlatStructf_" & tFlatID), me.getID(), #processTeleportStruct>
  [ 51] extcall 114 ............................. registerMessage(symbol("receivedFlatStructf_" & tFlatID), me.getID(), #processTeleportStruct)
  [ 53] pushsymb 663 ............................ <#requestFlatStruct>
  [ 56] getparam 2 .............................. <tFlatID>
  [ 58] pusharglistnoret 2 ...................... <#requestFlatStruct, tFlatID>
  [ 60] extcall 180 ............................. executeMessage(#requestFlatStruct, tFlatID)
  [ 62] ret
end

on processTeleportStruct me, tFlatStruct
  [  0] pushcons 121 ............................ <"receivedFlatStructf_">
  [  2] pushsymb 200 ............................ <#session>
  [  4] pusharglist 1 ........................... <#session>
  [  6] extcall 112 ............................. <getObject(#session)>
  [  8] pushcons 120 ............................ <"target_flat_ID">
  [ 10] pusharglist 2 ........................... <getObject(#session), "target_flat_ID">
  [ 12] objcall 201 ............................. <getObject(#session).get("target_flat_ID")>
  [ 14] joinstr ................................. <"receivedFlatStructf_" & getObject(#session).get("target_flat_ID")>
  [ 15] pusharglist 1 ........................... <"receivedFlatStructf_" & getObject(#session).get("target_flat_ID")>
  [ 17] extcall 662 ............................. <symbol("receivedFlatStructf_" & getObject(#session).get("target_flat_ID"))>
  [ 20] pusharglistnoret 1 ...................... <symbol("receivedFlatStructf_" & getObject(#session).get("target_flat_ID"))>
  [ 22] extcall 119 ............................. unregisterMessage(symbol("receivedFlatStructf_" & getObject(#session).get("target_flat_ID")))
  [ 24] getparam 1 .............................. <tFlatStruct>
  [ 26] pushsymb 359 ............................ <#id>
  [ 29] getparam 1 .............................. <tFlatStruct>
  [ 31] pushsymb 666 ............................ <#flatId>
  [ 34] pusharglist 2 ........................... <tFlatStruct, #flatId>
  [ 36] objcall 138 ............................. <tFlatStruct[#flatId]>
  [ 38] pusharglistnoret 3 ...................... <tFlatStruct, #id, tFlatStruct[#flatId]>
  [ 40] objcall 136 ............................. tFlatStruct[#id] = tFlatStruct[#flatId]
  [ 42] getparam 1 .............................. <tFlatStruct>
  [ 44] pushsymb 564 ............................ <#teleport>
  [ 47] pushsymb 200 ............................ <#session>
  [ 49] pusharglist 1 ........................... <#session>
  [ 51] extcall 112 ............................. <getObject(#session)>
  [ 53] pushcons 36 ............................. <"target_door_ID">
  [ 55] pusharglist 2 ........................... <getObject(#session), "target_door_ID">
  [ 57] objcall 201 ............................. <getObject(#session).get("target_door_ID")>
  [ 59] pusharglistnoret 3 ...................... <tFlatStruct, #teleport, getObject(#session).get("target_door_ID")>
  [ 61] objcall 667 ............................. tFlatStruct.addProp(#teleport, getObject(#session).get("target_door_ID"))
  [ 64] pushsymb 200 ............................ <#session>
  [ 66] pusharglist 1 ........................... <#session>
  [ 68] extcall 112 ............................. <getObject(#session)>
  [ 70] pushcons 122 ............................ <"target_flat_id">
  [ 72] pusharglistnoret 2 ...................... <getObject(#session), "target_flat_id">
  [ 74] objcall 254 ............................. getObject(#session).Remove("target_flat_id")
  [ 76] pushsymb 200 ............................ <#session>
  [ 78] pusharglist 1 ........................... <#session>
  [ 80] extcall 112 ............................. <getObject(#session)>
  [ 82] pushcons 123 ............................ <"current_door_ID">
  [ 84] pusharglist 2 ........................... <getObject(#session), "current_door_ID">
  [ 86] objcall 458 ............................. <getObject(#session).exists("current_door_ID")>
  [ 89] jmpifz [137] ............................ if getObject(#session).exists("current_door_ID") then
  [ 92] pushsymb 200 ............................ <#session>
  [ 94] pusharglist 1 ........................... <#session>
  [ 96] extcall 112 ............................. <getObject(#session)>
  [ 98] pushcons 123 ............................ <"current_door_ID">
  [100] pusharglist 2 ........................... <getObject(#session), "current_door_ID">
  [102] objcall 201 ............................. <getObject(#session).get("current_door_ID")>
  [104] setlocal 0 .............................. tDoorID = getObject(#session).get("current_door_ID")
  [106] getparam 0 .............................. <me>
  [108] pusharglist 1 ........................... <me>
  [110] objcall 173 ............................. <me.getComponent()>
  [112] getlocal 0 .............................. <tDoorID>
  [114] pusharglist 2 ........................... <me.getComponent(), tDoorID>
  [116] objcall 256 ............................. <me.getComponent().getActiveObject(tDoorID)>
  [119] setlocal 1 .............................. tDoorObj = me.getComponent().getActiveObject(tDoorID)
  [121] getlocal 1 .............................. <tDoorObj>
  [123] pushzero ................................ <0>
  [124] nteq .................................... <tDoorObj <> 0>
  [125] jmpifz [137] ............................ if tDoorObj <> 0 then
  [128] getlocal 1 .............................. <tDoorObj>
  [130] getparam 1 .............................. <tFlatStruct>
  [132] pusharglistnoret 2 ...................... <tDoorObj, tFlatStruct>
  [134] objcall 517 ............................. tDoorObj.startTeleport(tFlatStruct)
  [137] ret
end

on updateSlideObjects me, tTimeNow
  [  0] getparam 1 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 253 ............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 14] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 407 ........................ <the milliSeconds>
  [ 12] setparam 1 .............................. tTimeNow = the milliSeconds
  [ 14] getprop 549 ............................. <pCurrentSlidingObjects>
  [ 17] pusharglist 1 ........................... <pCurrentSlidingObjects>
  [ 19] objcall 555 ............................. <pCurrentSlidingObjects.duplicate()>
  [ 22] setlocal 0 .............................. tList = pCurrentSlidingObjects.duplicate()
  [ 24] pushsymb 670 ............................ <#animateSlide>
  [ 27] getlocal 0 .............................. <tList>
  [ 29] getparam 1 .............................. <tTimeNow>
  [ 31] pusharglistnoret 3 ...................... <#animateSlide, tList, tTimeNow>
  [ 33] extcall 142 ............................. call(#animateSlide, tList, tTimeNow)
  [ 35] ret
end

on setEnterRoomAlert me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] setprop 552 ............................. pEnterRoomAlert = tMsg
  [  5] ret
end

on executeEnterRoomAlert me
  [  0] getprop 552 ............................. <pEnterRoomAlert>
  [  3] getobjprop 595 .......................... <pEnterRoomAlert.length>
  [  6] pushzero ................................ <0>
  [  7] gt ...................................... <pEnterRoomAlert.length > 0>
  [  8] jmpifz [ 32] ............................ if pEnterRoomAlert.length > 0 then
  [ 11] pushsymb 357 ............................ <#alert>
  [ 14] pushsymb 358 ............................ <#msg>
  [ 17] getprop 552 ............................. <pEnterRoomAlert>
  [ 20] pusharglist 2 ........................... <[#msg: pEnterRoomAlert]>
  [ 22] pushproplist ............................ <[#msg: pEnterRoomAlert]>
  [ 23] pusharglistnoret 2 ...................... <#alert, [#msg: pEnterRoomAlert]>
  [ 25] extcall 180 ............................. executeMessage(#alert, [#msg: pEnterRoomAlert])
  [ 27] pushcons 2 .............................. <EMPTY>
  [ 29] setprop 552 ............................. pEnterRoomAlert = EMPTY
  [ 32] ret
end

on removeEnterRoomAlert me
  [  0] pushcons 2 .............................. <EMPTY>
  [  2] setprop 552 ............................. pEnterRoomAlert = EMPTY
  [  5] ret
end

on getRoomScale me, tRoomMarker
  [  0] getparam 1 .............................. <tRoomMarker>
  [  2] pusharglist 1 ........................... <tRoomMarker>
  [  4] extcall 253 ............................. <voidp(tRoomMarker)>
  [  6] jmpifz [ 14] ............................ if voidp(tRoomMarker) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 116 ............................. return 0
  [ 14] pushcons 124 ............................ <"private.room.properties">
  [ 16] pusharglist 1 ........................... <"private.room.properties">
  [ 18] extcall 108 ............................. <getVariableValue("private.room.properties")>
  [ 20] setlocal 0 .............................. tRoomProps = getVariableValue("private.room.properties")
  [ 22] getlocal 0 .............................. <tRoomProps>
  [ 24] pusharglist 1 ........................... <tRoomProps>
  [ 26] extcall 253 ............................. <voidp(tRoomProps)>
  [ 28] jmpifz [ 36] ............................ if voidp(tRoomProps) then
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 116 ............................. return 0
  [ 36] getparam 1 .............................. <tRoomMarker>
  [ 38] getparam 1 .............................. <tRoomMarker>
  [ 40] getobjprop 595 .......................... <tRoomMarker.length>
  [ 43] getparam 1 .............................. <tRoomMarker>
  [ 45] getobjprop 595 .......................... <tRoomMarker.length>
  [ 48] pusharglist 3 ........................... <tRoomMarker, tRoomMarker.length, tRoomMarker.length>
  [ 50] extcall 672 ............................. <chars(tRoomMarker, tRoomMarker.length, tRoomMarker.length)>
  [ 53] setlocal 1 .............................. tRoomKey = chars(tRoomMarker, tRoomMarker.length, tRoomMarker.length)
  [ 55] getlocal 0 .............................. <tRoomProps>
  [ 57] peek 0
  [ 59] pusharglist 1
  [ 61] extcall 149
  [ 63] pushint8 1
  [ 65] peek 0
  [ 67] peek 2
  [ 69] lteq
  [ 70] jmpifz [116] ............................ repeat with tRoom in tRoomProps
  [ 73] peek 2
  [ 75] peek 1
  [ 77] pusharglist 2
  [ 79] extcall 138
  [ 81] setlocal 2
  [ 83] getlocal 2 .............................. <tRoom>
  [ 85] pushsymb 673 ............................ <#model>
  [ 88] pusharglist 2 ........................... <tRoom, #model>
  [ 90] objcall 138 ............................. <tRoom[#model]>
  [ 92] getlocal 1 .............................. <tRoomKey>
  [ 94] eq ...................................... <tRoom[#model] = tRoomKey>
  [ 95] jmpifz [111] ............................ if tRoom[#model] = tRoomKey then
  [ 98] getlocal 2 .............................. <tRoom>
  [100] pushsymb 674 ............................ <#charScale>
  [103] pusharglist 2 ........................... <tRoom, #charScale>
  [105] objcall 138 ............................. <tRoom[#charScale]>
  [107] pusharglistnoret 1 ...................... <tRoom[#charScale]>
  [109] extcall 116 ............................. return tRoom[#charScale]
  [111] pushint8 1
  [113] add
  [114] endrepeat [ 65]
  [116] pop 3
  [118] pushzero ................................ <0>
  [119] pusharglistnoret 1 ...................... <0>
  [121] extcall 116 ............................. return 0
  [123] ret
end

on addToCastDownloadList me, tCastVarPrefix, tCastList
  [  0] getparam 2 .............................. <tCastList>
  [  2] pusharglist 1 ........................... <tCastList>
  [  4] extcall 253 ............................. <voidp(tCastList)>
  [  6] getparam 2 .............................. <tCastList>
  [  8] pusharglist 1 ........................... <tCastList>
  [ 10] extcall 258 ............................. <listp(tCastList)>
  [ 13] not ..................................... <not listp(tCastList)>
  [ 14] or ...................................... <voidp(tCastList) or not listp(tCastList)>
  [ 15] jmpifz [ 23] ............................ if voidp(tCastList) or not listp(tCastList) then
  [ 18] pusharglist 0 ........................... <[]>
  [ 20] pushlist ................................ <[]>
  [ 21] setparam 2 .............................. tCastList = []
  [ 23] pushint8 1 .............................. <1>
  [ 25] setlocal 0 .............................. i = 1
  [ 27] pushint8 1 .............................. <1>
  [ 29] jmpifz [ 89] ............................ repeat while 1
  [ 32] getparam 1 .............................. <tCastVarPrefix>
  [ 34] getlocal 0 .............................. <i>
  [ 36] joinstr ................................. <tCastVarPrefix & i>
  [ 37] pusharglist 1 ........................... <tCastVarPrefix & i>
  [ 39] extcall 206 ............................. <variableExists(tCastVarPrefix & i)>
  [ 41] jmpifz [ 77] ............................ if variableExists(tCastVarPrefix & i) then / else
  [ 44] getparam 1 .............................. <tCastVarPrefix>
  [ 46] getlocal 0 .............................. <i>
  [ 48] joinstr ................................. <tCastVarPrefix & i>
  [ 49] pusharglist 1 ........................... <tCastVarPrefix & i>
  [ 51] extcall 80 .............................. <getVariable(tCastVarPrefix & i)>
  [ 53] setlocal 1 .............................. tCast = getVariable(tCastVarPrefix & i)
  [ 55] getlocal 1 .............................. <tCast>
  [ 57] pusharglist 1 ........................... <tCast>
  [ 59] extcall 621 ............................. <castExists(tCast)>
  [ 62] not ..................................... <not castExists(tCast)>
  [ 63] jmpifz [ 74] ............................ if not castExists(tCast) then
  [ 66] getparam 2 .............................. <tCastList>
  [ 68] getlocal 1 .............................. <tCast>
  [ 70] pusharglistnoret 2 ...................... <tCastList, tCast>
  [ 72] objcall 151 ............................. tCastList.add(tCast)
  [ 74] jmp [ 80]
  [ 77] jmp [ 89] ............................... exit repeat
  [ 80] getlocal 0 .............................. <i>
  [ 82] pushint8 1 .............................. <1>
  [ 84] add ..................................... <i + 1>
  [ 85] setlocal 0 .............................. i = i + 1
  [ 87] endrepeat [ 27]
  [ 89] getparam 2 .............................. <tCastList>
  [ 91] pusharglistnoret 1 ...................... <tCastList>
  [ 93] extcall 116 ............................. return tCastList
  [ 95] ret
end
