property pInfoConnID, pRoomConnID, pRoomId, pReportRoomId, pActiveFlag, pProcessList, pChatProps, pDefaultChatMode, pSaveData, pCacheKey, pCacheFlag, pUserObjList, pActiveObjList, pPassiveObjList, pItemObjList, pBalloonId, pClassContId, pRoomPrgID, pRoomPollerID, pTrgDoorID, pAdSystemID, pFurniChooserID, pInterstitialSystemID, pSpectatorSystemID, pHeightMapData, pCurrentSlidingObjects, pPickedCryName, pCastLoaded, pEnterRoomAlert, pShadowManagerID, pPrvRoomsReady

on construct me
  [  0] pushcons 0 .............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 232 ............................. <getVariable("connection.info.id")>
  [  6] setprop 231 ............................. pInfoConnID = getVariable("connection.info.id")
  [  8] pushcons 1 .............................. <"connection.room.id">
  [ 10] pusharglist 1 ........................... <"connection.room.id">
  [ 12] extcall 232 ............................. <getVariable("connection.room.id")>
  [ 14] setprop 233 ............................. pRoomConnID = getVariable("connection.room.id")
  [ 16] pushcons 2 .............................. <EMPTY>
  [ 18] setprop 605 ............................. pRoomId = EMPTY
  [ 21] pushzero ................................ <0>
  [ 22] setprop 606 ............................. pActiveFlag = 0
  [ 25] pusharglist 0 ........................... <[:]>
  [ 27] pushproplist ............................ <[:]>
  [ 28] setprop 607 ............................. pProcessList = [:]
  [ 31] pusharglist 0 ........................... <>
  [ 33] extcall 30 .............................. <VOID>
  [ 35] setprop 315 ............................. pSaveData = VOID
  [ 38] pushcons 2 .............................. <EMPTY>
  [ 40] setprop 608 ............................. pCacheKey = EMPTY
  [ 43] pushcons 3 .............................. <"room.map.cache">
  [ 45] pushzero ................................ <0>
  [ 46] pusharglist 2 ........................... <"room.map.cache", 0>
  [ 48] extcall 259 ............................. <getVariableValue("room.map.cache", 0)>
  [ 51] setprop 609 ............................. pCacheFlag = getVariableValue("room.map.cache", 0)
  [ 54] pusharglist 0 ........................... <>
  [ 56] extcall 30 .............................. <VOID>
  [ 58] setprop 610 ............................. pTrgDoorID = VOID
  [ 61] pushcons 2 .............................. <EMPTY>
  [ 63] setprop 611 ............................. pPickedCryName = EMPTY
  [ 66] pusharglist 0 ........................... <[:]>
  [ 68] pushproplist ............................ <[:]>
  [ 69] setprop 612 ............................. pUserObjList = [:]
  [ 72] pusharglist 0 ........................... <[:]>
  [ 74] pushproplist ............................ <[:]>
  [ 75] setprop 613 ............................. pActiveObjList = [:]
  [ 78] pusharglist 0 ........................... <[:]>
  [ 80] pushproplist ............................ <[:]>
  [ 81] setprop 614 ............................. pPassiveObjList = [:]
  [ 84] pusharglist 0 ........................... <[:]>
  [ 86] pushproplist ............................ <[:]>
  [ 87] setprop 615 ............................. pItemObjList = [:]
  [ 90] pushcons 4 .............................. <"Room Balloon">
  [ 92] setprop 616 ............................. pBalloonId = "Room Balloon"
  [ 95] pushcons 5 .............................. <"Room Classes">
  [ 97] setprop 617 ............................. pClassContId = "Room Classes"
  [100] pushcons 6 .............................. <"Room Program">
  [102] setprop 618 ............................. pRoomPrgID = "Room Program"
  [105] pushcons 7 .............................. <"Room Poller">
  [107] setprop 619 ............................. pRoomPollerID = "Room Poller"
  [110] pushcons 8 .............................. <"Room ad">
  [112] setprop 620 ............................. pAdSystemID = "Room ad"
  [115] pushcons 9 .............................. <"Interstitial system">
  [117] setprop 621 ............................. pInterstitialSystemID = "Interstitial system"
  [120] pushcons 10 ............................. <"Room Mode Manager">
  [122] setprop 622 ............................. pSpectatorSystemID = "Room Mode Manager"
  [125] pushcons 11 ............................. <"Furniture Chooser">
  [127] setprop 623 ............................. pFurniChooserID = "Furniture Chooser"
  [130] pushcons 12 ............................. <"Room Shadow Manager">
  [132] setprop 624 ............................. pShadowManagerID = "Room Shadow Manager"
  [135] pusharglist 0 ........................... <[:]>
  [137] pushproplist ............................ <[:]>
  [138] setprop 625 ............................. pChatProps = [:]
  [141] getprop 625 ............................. <pChatProps>
  [144] pushcons 13 ............................. <"returnCount">
  [146] pushzero ................................ <0>
  [147] pusharglistnoret 3 ...................... <pChatProps, "returnCount", 0>
  [149] objcall 59 .............................. pChatProps["returnCount"] = 0
  [151] getprop 625 ............................. <pChatProps>
  [154] pushcons 14 ............................. <"timerStart">
  [156] pushzero ................................ <0>
  [157] pusharglistnoret 3 ...................... <pChatProps, "timerStart", 0>
  [159] objcall 59 .............................. pChatProps["timerStart"] = 0
  [161] getprop 625 ............................. <pChatProps>
  [164] pushcons 15 ............................. <"timerDelay">
  [166] pushzero ................................ <0>
  [167] pusharglistnoret 3 ...................... <pChatProps, "timerDelay", 0>
  [169] objcall 59 .............................. pChatProps["timerDelay"] = 0
  [171] getprop 625 ............................. <pChatProps>
  [174] pushcons 16 ............................. <"mode">
  [176] pushcons 17 ............................. <"CHAT">
  [178] pusharglistnoret 3 ...................... <pChatProps, "mode", "CHAT">
  [180] objcall 59 .............................. pChatProps["mode"] = "CHAT"
  [182] getprop 625 ............................. <pChatProps>
  [185] pushcons 18 ............................. <"hobbaCmds">
  [187] pushcons 19 ............................. <"moderator.cmds">
  [189] pusharglist 1 ........................... <"moderator.cmds">
  [191] extcall 259 ............................. <getVariableValue("moderator.cmds")>
  [194] pusharglistnoret 3 ...................... <pChatProps, "hobbaCmds", getVariableValue("moderator.cmds")>
  [196] objcall 59 .............................. pChatProps["hobbaCmds"] = getVariableValue("moderator.cmds")
  [198] getprop 617 ............................. <pClassContId>
  [201] pushcons 20 ............................. <"variable.manager.class">
  [203] pusharglist 1 ........................... <"variable.manager.class">
  [205] extcall 626 ............................. <getClassVariable("variable.manager.class")>
  [208] pusharglistnoret 2 ...................... <pClassContId, getClassVariable("variable.manager.class")>
  [210] extcall 260 ............................. createObject(pClassContId, getClassVariable("variable.manager.class"))
  [213] getprop 617 ............................. <pClassContId>
  [216] pusharglist 1 ........................... <pClassContId>
  [218] extcall 130 ............................. <getObject(pClassContId)>
  [220] pushcons 21 ............................. <"fuse.object.classes">
  [222] pushcons 22 ............................. <RETURN>
  [224] pusharglistnoret 3 ...................... <getObject(pClassContId), "fuse.object.classes", RETURN>
  [226] objcall 627 ............................. getObject(pClassContId).dump("fuse.object.classes", RETURN)
  [229] getprop 616 ............................. <pBalloonId>
  [232] pushcons 23 ............................. <"Balloon Manager">
  [234] pusharglistnoret 2 ...................... <pBalloonId, "Balloon Manager">
  [236] extcall 260 ............................. createObject(pBalloonId, "Balloon Manager")
  [239] getprop 620 ............................. <pAdSystemID>
  [242] pushcons 24 ............................. <"Ad Manager">
  [244] pusharglistnoret 2 ...................... <pAdSystemID, "Ad Manager">
  [246] extcall 260 ............................. createObject(pAdSystemID, "Ad Manager")
  [249] pushzero ................................ <0>
  [250] setprop 628 ............................. pCastLoaded = 0
  [253] pushzero ................................ <0>
  [254] setprop 629 ............................. pPrvRoomsReady = 0
  [257] getprop 621 ............................. <pInterstitialSystemID>
  [260] pushcons 25 ............................. <"Interstitial Manager">
  [262] pusharglistnoret 2 ...................... <pInterstitialSystemID, "Interstitial Manager">
  [264] extcall 260 ............................. createObject(pInterstitialSystemID, "Interstitial Manager")
  [267] getprop 622 ............................. <pSpectatorSystemID>
  [270] pushcons 26 ............................. <"Spectator System Class">
  [272] pusharglistnoret 2 ...................... <pSpectatorSystemID, "Spectator System Class">
  [274] extcall 260 ............................. createObject(pSpectatorSystemID, "Spectator System Class")
  [277] pusharglist 0 ........................... <[:]>
  [279] pushproplist ............................ <[:]>
  [280] setprop 630 ............................. pCurrentSlidingObjects = [:]
  [283] getprop 624 ............................. <pShadowManagerID>
  [286] pushcons 27 ............................. <"Shadow Manager">
  [288] pusharglistnoret 2 ...................... <pShadowManagerID, "Shadow Manager">
  [290] extcall 260 ............................. createObject(pShadowManagerID, "Shadow Manager")
  [293] pushsymb 580 ............................ <#pickAndGoCFH>
  [296] getparam 0 .............................. <me>
  [298] pusharglist 1 ........................... <me>
  [300] objcall 75 .............................. <me.getID()>
  [302] pushsymb 580 ............................ <#pickAndGoCFH>
  [305] pusharglistnoret 3 ...................... <#pickAndGoCFH, me.getID(), #pickAndGoCFH>
  [307] extcall 264 ............................. registerMessage(#pickAndGoCFH, me.getID(), #pickAndGoCFH)
  [310] pushsymb 560 ............................ <#enterRoom>
  [313] getparam 0 .............................. <me>
  [315] pusharglist 1 ........................... <me>
  [317] objcall 75 .............................. <me.getID()>
  [319] pushsymb 560 ............................ <#enterRoom>
  [322] pusharglistnoret 3 ...................... <#enterRoom, me.getID(), #enterRoom>
  [324] extcall 264 ............................. registerMessage(#enterRoom, me.getID(), #enterRoom)
  [327] pushsymb 552 ............................ <#leaveRoom>
  [330] getparam 0 .............................. <me>
  [332] pusharglist 1 ........................... <me>
  [334] objcall 75 .............................. <me.getID()>
  [336] pushsymb 552 ............................ <#leaveRoom>
  [339] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #leaveRoom>
  [341] extcall 264 ............................. registerMessage(#leaveRoom, me.getID(), #leaveRoom)
  [344] pushsymb 631 ............................ <#changeRoom>
  [347] getparam 0 .............................. <me>
  [349] pusharglist 1 ........................... <me>
  [351] objcall 75 .............................. <me.getID()>
  [353] pushsymb 552 ............................ <#leaveRoom>
  [356] pusharglistnoret 3 ...................... <#changeRoom, me.getID(), #leaveRoom>
  [358] extcall 264 ............................. registerMessage(#changeRoom, me.getID(), #leaveRoom)
  [361] pushsymb 562 ............................ <#enterRoomDirect>
  [364] getparam 0 .............................. <me>
  [366] pusharglist 1 ........................... <me>
  [368] objcall 75 .............................. <me.getID()>
  [370] pushsymb 562 ............................ <#enterRoomDirect>
  [373] pusharglistnoret 3 ...................... <#enterRoomDirect, me.getID(), #enterRoomDirect>
  [375] extcall 264 ............................. registerMessage(#enterRoomDirect, me.getID(), #enterRoomDirect)
  [378] pushsymb 601 ............................ <#setEnterRoomAlert>
  [381] getparam 0 .............................. <me>
  [383] pusharglist 1 ........................... <me>
  [385] objcall 75 .............................. <me.getID()>
  [387] pushsymb 601 ............................ <#setEnterRoomAlert>
  [390] pusharglistnoret 3 ...................... <#setEnterRoomAlert, me.getID(), #setEnterRoomAlert>
  [392] extcall 264 ............................. registerMessage(#setEnterRoomAlert, me.getID(), #setEnterRoomAlert)
  [395] pushsymb 551 ............................ <#removeEnterRoomAlert>
  [398] getparam 0 .............................. <me>
  [400] pusharglist 1 ........................... <me>
  [402] objcall 75 .............................. <me.getID()>
  [404] pushsymb 551 ............................ <#removeEnterRoomAlert>
  [407] pusharglistnoret 3 ...................... <#removeEnterRoomAlert, me.getID(), #removeEnterRoomAlert>
  [409] extcall 264 ............................. registerMessage(#removeEnterRoomAlert, me.getID(), #removeEnterRoomAlert)
  [412] pushint8 1 .............................. <1>
  [414] pusharglistnoret 1 ...................... <1>
  [416] extcall 31 .............................. return 1
  [418] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 75 .............................. <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 298 ............................. removeUpdate(me.getID())
  [ 11] pushsymb 560 ............................ <#enterRoom>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 75 .............................. <me.getID()>
  [ 20] pusharglistnoret 2 ...................... <#enterRoom, me.getID()>
  [ 22] extcall 266 ............................. unregisterMessage(#enterRoom, me.getID())
  [ 25] pushsymb 552 ............................ <#leaveRoom>
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglist 1 ........................... <me>
  [ 32] objcall 75 .............................. <me.getID()>
  [ 34] pusharglistnoret 2 ...................... <#leaveRoom, me.getID()>
  [ 36] extcall 266 ............................. unregisterMessage(#leaveRoom, me.getID())
  [ 39] pushsymb 631 ............................ <#changeRoom>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 75 .............................. <me.getID()>
  [ 48] pusharglistnoret 2 ...................... <#changeRoom, me.getID()>
  [ 50] extcall 266 ............................. unregisterMessage(#changeRoom, me.getID())
  [ 53] pushsymb 562 ............................ <#enterRoomDirect>
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglist 1 ........................... <me>
  [ 60] objcall 75 .............................. <me.getID()>
  [ 62] pusharglistnoret 2 ...................... <#enterRoomDirect, me.getID()>
  [ 64] extcall 266 ............................. unregisterMessage(#enterRoomDirect, me.getID())
  [ 67] getprop 233 ............................. <pRoomConnID>
  [ 69] pusharglistnoret 1 ...................... <pRoomConnID>
  [ 71] extcall 632 ............................. removeConnection(pRoomConnID)
  [ 74] getprop 612 ............................. <pUserObjList>
  [ 77] pusharglist 1 ........................... <pUserObjList>
  [ 79] extcall 92 .............................. <listp(pUserObjList)>
  [ 81] jmpifz [ 94] ............................ if listp(pUserObjList) then
  [ 84] pushsymb 1 .............................. <#deconstruct>
  [ 86] getprop 612 ............................. <pUserObjList>
  [ 89] pusharglistnoret 2 ...................... <#deconstruct, pUserObjList>
  [ 91] extcall 281 ............................. call(#deconstruct, pUserObjList)
  [ 94] getprop 613 ............................. <pActiveObjList>
  [ 97] pusharglist 1 ........................... <pActiveObjList>
  [ 99] extcall 92 .............................. <listp(pActiveObjList)>
  [101] jmpifz [114] ............................ if listp(pActiveObjList) then
  [104] pushsymb 1 .............................. <#deconstruct>
  [106] getprop 613 ............................. <pActiveObjList>
  [109] pusharglistnoret 2 ...................... <#deconstruct, pActiveObjList>
  [111] extcall 281 ............................. call(#deconstruct, pActiveObjList)
  [114] getprop 614 ............................. <pPassiveObjList>
  [117] pusharglist 1 ........................... <pPassiveObjList>
  [119] extcall 92 .............................. <listp(pPassiveObjList)>
  [121] jmpifz [134] ............................ if listp(pPassiveObjList) then
  [124] pushsymb 1 .............................. <#deconstruct>
  [126] getprop 614 ............................. <pPassiveObjList>
  [129] pusharglistnoret 2 ...................... <#deconstruct, pPassiveObjList>
  [131] extcall 281 ............................. call(#deconstruct, pPassiveObjList)
  [134] getprop 615 ............................. <pItemObjList>
  [137] pusharglist 1 ........................... <pItemObjList>
  [139] extcall 92 .............................. <listp(pItemObjList)>
  [141] jmpifz [154] ............................ if listp(pItemObjList) then
  [144] pushsymb 1 .............................. <#deconstruct>
  [146] getprop 615 ............................. <pItemObjList>
  [149] pusharglistnoret 2 ...................... <#deconstruct, pItemObjList>
  [151] extcall 281 ............................. call(#deconstruct, pItemObjList)
  [154] getprop 616 ............................. <pBalloonId>
  [157] pusharglist 1 ........................... <pBalloonId>
  [159] extcall 377 ............................. <objectExists(pBalloonId)>
  [162] jmpifz [173] ............................ if objectExists(pBalloonId) then
  [165] getprop 616 ............................. <pBalloonId>
  [168] pusharglistnoret 1 ...................... <pBalloonId>
  [170] extcall 267 ............................. removeObject(pBalloonId)
  [173] getprop 617 ............................. <pClassContId>
  [176] pusharglist 1 ........................... <pClassContId>
  [178] extcall 377 ............................. <objectExists(pClassContId)>
  [181] jmpifz [192] ............................ if objectExists(pClassContId) then
  [184] getprop 617 ............................. <pClassContId>
  [187] pusharglistnoret 1 ...................... <pClassContId>
  [189] extcall 267 ............................. removeObject(pClassContId)
  [192] getprop 618 ............................. <pRoomPrgID>
  [195] pusharglist 1 ........................... <pRoomPrgID>
  [197] extcall 377 ............................. <objectExists(pRoomPrgID)>
  [200] jmpifz [211] ............................ if objectExists(pRoomPrgID) then
  [203] getprop 618 ............................. <pRoomPrgID>
  [206] pusharglistnoret 1 ...................... <pRoomPrgID>
  [208] extcall 267 ............................. removeObject(pRoomPrgID)
  [211] getprop 620 ............................. <pAdSystemID>
  [214] pusharglist 1 ........................... <pAdSystemID>
  [216] extcall 377 ............................. <objectExists(pAdSystemID)>
  [219] jmpifz [230] ............................ if objectExists(pAdSystemID) then
  [222] getprop 620 ............................. <pAdSystemID>
  [225] pusharglistnoret 1 ...................... <pAdSystemID>
  [227] extcall 267 ............................. removeObject(pAdSystemID)
  [230] getprop 621 ............................. <pInterstitialSystemID>
  [233] pusharglist 1 ........................... <pInterstitialSystemID>
  [235] extcall 377 ............................. <objectExists(pInterstitialSystemID)>
  [238] jmpifz [249] ............................ if objectExists(pInterstitialSystemID) then
  [241] getprop 621 ............................. <pInterstitialSystemID>
  [244] pusharglistnoret 1 ...................... <pInterstitialSystemID>
  [246] extcall 267 ............................. removeObject(pInterstitialSystemID)
  [249] getprop 622 ............................. <pSpectatorSystemID>
  [252] pusharglist 1 ........................... <pSpectatorSystemID>
  [254] extcall 377 ............................. <objectExists(pSpectatorSystemID)>
  [257] jmpifz [268] ............................ if objectExists(pSpectatorSystemID) then
  [260] getprop 622 ............................. <pSpectatorSystemID>
  [263] pusharglistnoret 1 ...................... <pSpectatorSystemID>
  [265] extcall 267 ............................. removeObject(pSpectatorSystemID)
  [268] getprop 624 ............................. <pShadowManagerID>
  [271] pusharglist 1 ........................... <pShadowManagerID>
  [273] extcall 377 ............................. <objectExists(pShadowManagerID)>
  [276] jmpifz [287] ............................ if objectExists(pShadowManagerID) then
  [279] getprop 624 ............................. <pShadowManagerID>
  [282] pusharglistnoret 1 ...................... <pShadowManagerID>
  [284] extcall 267 ............................. removeObject(pShadowManagerID)
  [287] pushcons 2 .............................. <EMPTY>
  [289] setprop 605 ............................. pRoomId = EMPTY
  [292] pusharglist 0 ........................... <[:]>
  [294] pushproplist ............................ <[:]>
  [295] setprop 612 ............................. pUserObjList = [:]
  [298] pusharglist 0 ........................... <[:]>
  [300] pushproplist ............................ <[:]>
  [301] setprop 613 ............................. pActiveObjList = [:]
  [304] pusharglist 0 ........................... <[:]>
  [306] pushproplist ............................ <[:]>
  [307] setprop 614 ............................. pPassiveObjList = [:]
  [310] pusharglist 0 ........................... <[:]>
  [312] pushproplist ............................ <[:]>
  [313] setprop 615 ............................. pItemObjList = [:]
  [316] pusharglist 0 ........................... <[:]>
  [318] pushproplist ............................ <[:]>
  [319] setprop 630 ............................. pCurrentSlidingObjects = [:]
  [322] pushcons 2 .............................. <EMPTY>
  [324] setprop 633 ............................. pEnterRoomAlert = EMPTY
  [327] pushint8 1 .............................. <1>
  [329] pusharglistnoret 1 ...................... <1>
  [331] extcall 31 .............................. return 1
  [333] ret
end

on prepare me
  [  0] getprop 606 ............................. <pActiveFlag>
  [  3] jmpifz [ 38] ............................ if pActiveFlag then
  [  6] pushsymb 634 ............................ <#update>
  [  9] getprop 612 ............................. <pUserObjList>
  [ 12] pusharglistnoret 2 ...................... <#update, pUserObjList>
  [ 14] extcall 281 ............................. call(#update, pUserObjList)
  [ 17] getparam 0 .............................. <me>
  [ 19] getmovieprop 500 ........................ <the milliSeconds>
  [ 22] pusharglistnoret 2 ...................... <me, the milliSeconds>
  [ 24] objcall 600 ............................. me.updateSlideObjects(the milliSeconds)
  [ 27] pushsymb 634 ............................ <#update>
  [ 30] getprop 613 ............................. <pActiveObjList>
  [ 33] pusharglistnoret 2 ...................... <#update, pActiveObjList>
  [ 35] extcall 281 ............................. call(#update, pActiveObjList)
  [ 38] ret
end

on enterRoom me, tRoomDataStruct
  [  0] getparam 1 .............................. <tRoomDataStruct>
  [  2] pusharglist 1 ........................... <tRoomDataStruct>
  [  4] extcall 92 .............................. <listp(tRoomDataStruct)>
  [  6] not ..................................... <not listp(tRoomDataStruct)>
  [  7] jmpifz [ 33] ............................ if not listp(tRoomDataStruct) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 28 ............................. <"Invalid room data struct!">
  [ 14] pushsymb 560 ............................ <#enterRoom>
  [ 17] pusharglistnoret 3 ...................... <me, "Invalid room data struct!", #enterRoom>
  [ 19] extcall 72 .............................. error(me, "Invalid room data struct!", #enterRoom)
  [ 21] pushsymb 552 ............................ <#leaveRoom>
  [ 24] pusharglist 1 ........................... <#leaveRoom>
  [ 26] extcall 310 ............................. <executeMessage(#leaveRoom)>
  [ 29] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [ 31] extcall 31 .............................. return executeMessage(#leaveRoom)
  [ 33] pusharglist 0 ........................... <>
  [ 35] localcall 29 ............................ <getInterstitial()>
  [ 37] pusharglistnoret 1 ...................... <getInterstitial()>
  [ 39] objcall 635 ............................. getInterstitial().adRequested()
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 134 ............................. <me.getRoomConnection()>
  [ 48] pushcons 29 ............................. <"GETINTERST">
  [ 50] pushcons 30 ............................. <"general">
  [ 52] pusharglistnoret 3 ...................... <me.getRoomConnection(), "GETINTERST", "general">
  [ 54] objcall 135 ............................. me.getRoomConnection().send("GETINTERST", "general")
  [ 56] getparam 1 .............................. <tRoomDataStruct>
  [ 58] pusharglist 1 ........................... <tRoomDataStruct>
  [ 60] objcall 636 ............................. <tRoomDataStruct.duplicate()>
  [ 63] setlocal 0 .............................. tdata = tRoomDataStruct.duplicate()
  [ 65] getlocal 0 .............................. <tdata>
  [ 67] pushsymb 459 ............................ <#id>
  [ 70] pusharglist 2 ........................... <tdata, #id>
  [ 72] objcall 34 .............................. <tdata[#id]>
  [ 74] pusharglist 1 ........................... <tdata[#id]>
  [ 76] extcall 120 ............................. <voidp(tdata[#id])>
  [ 78] jmpifz [104] ............................ if voidp(tdata[#id]) then
  [ 81] getparam 0 .............................. <me>
  [ 83] pushcons 31 ............................. <"Missing ID in room data struct!">
  [ 85] pushsymb 560 ............................ <#enterRoom>
  [ 88] pusharglistnoret 3 ...................... <me, "Missing ID in room data struct!", #enterRoom>
  [ 90] extcall 72 .............................. error(me, "Missing ID in room data struct!", #enterRoom)
  [ 92] pushsymb 552 ............................ <#leaveRoom>
  [ 95] pusharglist 1 ........................... <#leaveRoom>
  [ 97] extcall 310 ............................. <executeMessage(#leaveRoom)>
  [100] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [102] extcall 31 .............................. return executeMessage(#leaveRoom)
  [104] getprop 605 ............................. <pRoomId>
  [107] pushcons 2 .............................. <EMPTY>
  [109] nteq .................................... <pRoomId <> EMPTY>
  [110] jmpifz [121] ............................ if pRoomId <> EMPTY then
  [113] pushsymb 631 ............................ <#changeRoom>
  [116] pusharglistnoret 1 ...................... <#changeRoom>
  [118] extcall 310 ............................. executeMessage(#changeRoom)
  [121] pushsymb 131 ............................ <#session>
  [123] pusharglist 1 ........................... <#session>
  [125] extcall 130 ............................. <getObject(#session)>
  [127] setlocal 1 .............................. tSession = getObject(#session)
  [129] getlocal 1 .............................. <tSession>
  [131] pushcons 32 ............................. <"room_owner">
  [133] pushzero ................................ <0>
  [134] pusharglistnoret 3 ...................... <tSession, "room_owner", 0>
  [136] objcall 637 ............................. tSession.set("room_owner", 0)
  [139] getlocal 1 .............................. <tSession>
  [141] pushcons 33 ............................. <"room_controller">
  [143] pushzero ................................ <0>
  [144] pusharglistnoret 3 ...................... <tSession, "room_controller", 0>
  [146] objcall 637 ............................. tSession.set("room_controller", 0)
  [149] getlocal 0 .............................. <tdata>
  [151] pushsymb 49 ............................. <#type>
  [153] pusharglist 2 ........................... <tdata, #type>
  [155] objcall 34 .............................. <tdata[#type]>
  [157] pushsymb 314 ............................ <#private>
  [160] eq ...................................... <tdata[#type] = #private>
  [161] jmpifz [184] ............................ if tdata[#type] = #private then / else
  [164] pushcons 34 ............................. <"private">
  [166] setprop 605 ............................. pRoomId = "private"
  [169] getlocal 0 .............................. <tdata>
  [171] pushsymb 459 ............................ <#id>
  [174] pusharglist 2 ........................... <tdata, #id>
  [176] objcall 34 .............................. <tdata[#id]>
  [178] setprop 638 ............................. pReportRoomId = tdata[#id]
  [181] jmp [208]
  [184] getlocal 0 .............................. <tdata>
  [186] pushsymb 459 ............................ <#id>
  [189] pusharglist 2 ........................... <tdata, #id>
  [191] objcall 34 .............................. <tdata[#id]>
  [193] setprop 605 ............................. pRoomId = tdata[#id]
  [196] getlocal 0 .............................. <tdata>
  [198] pushsymb 639 ............................ <#port>
  [201] pusharglist 2 ........................... <tdata, #port>
  [203] objcall 34 .............................. <tdata[#port]>
  [205] setprop 638 ............................. pReportRoomId = tdata[#port]
  [208] pusharglist 0 ........................... <>
  [210] extcall 30 .............................. <VOID>
  [212] setprop 610 ............................. pTrgDoorID = VOID
  [215] getlocal 0 .............................. <tdata>
  [217] setprop 315 ............................. pSaveData = tdata
  [220] pushzero ................................ <0>
  [221] setprop 628 ............................. pCastLoaded = 0
  [224] getparam 0 .............................. <me>
  [226] pusharglistnoret 1 ...................... <me>
  [228] objcall 582 ............................. me.loadRoomCasts()
  [231] pushint8 1 .............................. <1>
  [233] pusharglistnoret 1 ...................... <1>
  [235] extcall 31 .............................. return 1
  [237] ret
end

on enterDoor me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pusharglist 1 ........................... <tdata>
  [  4] extcall 92 .............................. <listp(tdata)>
  [  6] not ..................................... <not listp(tdata)>
  [  7] jmpifz [ 25] ............................ if not listp(tdata) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 35 ............................. <"Room data struct expected!">
  [ 14] pushsymb 561 ............................ <#enterDoor>
  [ 17] pusharglist 3 ........................... <me, "Room data struct expected!", #enterDoor>
  [ 19] extcall 72 .............................. <error(me, "Room data struct expected!", #enterDoor)>
  [ 21] pusharglistnoret 1 ...................... <error(me, "Room data struct expected!", #enterDoor)>
  [ 23] extcall 31 .............................. return error(me, "Room data struct expected!", #enterDoor)
  [ 25] getparam 1 .............................. <tdata>
  [ 27] pushsymb 459 ............................ <#id>
  [ 30] pusharglist 2 ........................... <tdata, #id>
  [ 32] objcall 34 .............................. <tdata[#id]>
  [ 34] getprop 315 ............................. <pSaveData>
  [ 37] pushsymb 459 ............................ <#id>
  [ 40] pusharglist 2 ........................... <pSaveData, #id>
  [ 42] objcall 34 .............................. <pSaveData[#id]>
  [ 44] nteq .................................... <tdata[#id] <> pSaveData[#id]>
  [ 45] jmpifz [ 64] ............................ if tdata[#id] <> pSaveData[#id] then / else
  [ 48] getparam 0 .............................. <me>
  [ 50] pushint8 1 .............................. <1>
  [ 52] pusharglistnoret 2 ...................... <me, 1>
  [ 54] objcall 552 ............................. me.leaveRoom(1)
  [ 57] pushint8 1 .............................. <1>
  [ 59] setlocal 0 .............................. tReConnect = 1
  [ 61] jmp [ 81]
  [ 64] pushsymb 131 ............................ <#session>
  [ 66] pusharglist 1 ........................... <#session>
  [ 68] extcall 130 ............................. <getObject(#session)>
  [ 70] pushcons 36 ............................. <"target_door_ID">
  [ 72] pushzero ................................ <0>
  [ 73] pusharglistnoret 3 ...................... <getObject(#session), "target_door_ID", 0>
  [ 75] objcall 637 ............................. getObject(#session).set("target_door_ID", 0)
  [ 78] pushzero ................................ <0>
  [ 79] setlocal 0 .............................. tReConnect = 0
  [ 81] getparam 0 .............................. <me>
  [ 83] getprop 315 ............................. <pSaveData>
  [ 86] pushsymb 641 ............................ <#marker>
  [ 89] pusharglist 2 ........................... <pSaveData, #marker>
  [ 91] objcall 34 .............................. <pSaveData[#marker]>
  [ 93] pusharglist 2 ........................... <me, pSaveData[#marker]>
  [ 95] objcall 603 ............................. <me.getRoomScale(pSaveData[#marker])>
  [ 98] setlocal 1 .............................. tCurrentScale = me.getRoomScale(pSaveData[#marker])
  [100] getprop 315 ............................. <pSaveData>
  [103] pushsymb 642 ............................ <#casts>
  [106] pusharglist 2 ........................... <pSaveData, #casts>
  [108] objcall 34 .............................. <pSaveData[#casts]>
  [110] setlocal 2 .............................. tCurrentRoomCasts = pSaveData[#casts]
  [112] pushcons 34 ............................. <"private">
  [114] setprop 605 ............................. pRoomId = "private"
  [117] getparam 1 .............................. <tdata>
  [119] pushsymb 459 ............................ <#id>
  [122] pusharglist 2 ........................... <tdata, #id>
  [124] objcall 34 .............................. <tdata[#id]>
  [126] setprop 638 ............................. pReportRoomId = tdata[#id]
  [129] getparam 1 .............................. <tdata>
  [131] pushsymb 459 ............................ <#id>
  [134] pusharglist 2 ........................... <tdata, #id>
  [136] objcall 34 .............................. <tdata[#id]>
  [138] setprop 610 ............................. pTrgDoorID = tdata[#id]
  [141] getparam 1 .............................. <tdata>
  [143] pusharglist 1 ........................... <tdata>
  [145] objcall 636 ............................. <tdata.duplicate()>
  [148] setprop 315 ............................. pSaveData = tdata.duplicate()
  [151] getprop 315 ............................. <pSaveData>
  [154] pushsymb 49 ............................. <#type>
  [156] pushsymb 314 ............................ <#private>
  [159] pusharglistnoret 3 ...................... <pSaveData, #type, #private>
  [161] objcall 59 .............................. pSaveData[#type] = #private
  [163] pushsymb 131 ............................ <#session>
  [165] pusharglist 1 ........................... <#session>
  [167] extcall 130 ............................. <getObject(#session)>
  [169] pushcons 37 ............................. <"lastroom">
  [171] getprop 315 ............................. <pSaveData>
  [174] pusharglist 1 ........................... <pSaveData>
  [176] objcall 636 ............................. <pSaveData.duplicate()>
  [179] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", pSaveData.duplicate()>
  [181] objcall 637 ............................. getObject(#session).set("lastroom", pSaveData.duplicate())
  [184] getparam 0 .............................. <me>
  [186] getprop 315 ............................. <pSaveData>
  [189] pushsymb 641 ............................ <#marker>
  [192] pusharglist 2 ........................... <pSaveData, #marker>
  [194] objcall 34 .............................. <pSaveData[#marker]>
  [196] pusharglist 2 ........................... <me, pSaveData[#marker]>
  [198] objcall 603 ............................. <me.getRoomScale(pSaveData[#marker])>
  [201] pushsymb 643 ............................ <#small>
  [204] eq ...................................... <me.getRoomScale(pSaveData[#marker]) = #small>
  [205] getlocal 1 .............................. <tCurrentScale>
  [207] pushsymb 644 ............................ <#large>
  [210] eq ...................................... <tCurrentScale = #large>
  [211] and ..................................... <(me.getRoomScale(pSaveData[#marker]) = #small) and (tCurrentScale = #large)>
  [212] getprop 629 ............................. <pPrvRoomsReady>
  [215] not ..................................... <not pPrvRoomsReady>
  [216] and ..................................... <(me.getRoomScale(pSaveData[#marker]) = #small) and (tCurrentScale = #large) and not pPrvRoomsReady>
  [217] jmpifz [249] ............................ if (me.getRoomScale(pSaveData[#marker]) = #small) and (tCurrentScale = #large) and not pPrvRoomsReady then
  [220] getprop 315 ............................. <pSaveData>
  [223] pushsymb 642 ............................ <#casts>
  [226] getlocal 2 .............................. <tCurrentRoomCasts>
  [228] pusharglistnoret 3 ...................... <pSaveData, #casts, tCurrentRoomCasts>
  [230] objcall 59 .............................. pSaveData[#casts] = tCurrentRoomCasts
  [232] getparam 0 .............................. <me>
  [234] pusharglistnoret 1 ...................... <me>
  [236] objcall 582 ............................. me.loadRoomCasts()
  [239] pushint8 1 .............................. <1>
  [241] setprop 629 ............................. pPrvRoomsReady = 1
  [244] pushzero ................................ <0>
  [245] pusharglistnoret 1 ...................... <0>
  [247] extcall 31 .............................. return 0
  [249] getlocal 0 .............................. <tReConnect>
  [251] jmpifz [268] ............................ if tReConnect then / else
  [254] getparam 0 .............................. <me>
  [256] pusharglist 1 ........................... <me>
  [258] objcall 583 ............................. <me.roomCastLoaded()>
  [261] pusharglistnoret 1 ...................... <me.roomCastLoaded()>
  [263] extcall 31 .............................. return me.roomCastLoaded()
  [265] jmp [301]
  [268] getparam 0 .............................. <me>
  [270] pusharglist 1 ........................... <me>
  [272] objcall 134 ............................. <me.getRoomConnection()>
  [274] pushcons 38 ............................. <"GOVIADOOR">
  [276] getprop 610 ............................. <pTrgDoorID>
  [279] pushcons 39 ............................. <"/">
  [281] joinstr ................................. <pTrgDoorID & "/">
  [282] getprop 315 ............................. <pSaveData>
  [285] pushsymb 645 ............................ <#teleport>
  [288] pusharglist 2 ........................... <pSaveData, #teleport>
  [290] objcall 34 .............................. <pSaveData[#teleport]>
  [292] joinstr ................................. <pTrgDoorID & "/" & pSaveData[#teleport]>
  [293] pusharglist 3 ........................... <me.getRoomConnection(), "GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport]>
  [295] objcall 135 ............................. <me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])>
  [297] pusharglistnoret 1 ...................... <me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])>
  [299] extcall 31 .............................. return me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])
  [301] ret
end

on leaveRoom me, tJumpingToSubUnit
  [  0] getprop 605 ............................. <pRoomId>
  [  3] pushcons 2 .............................. <EMPTY>
  [  5] eq ...................................... <pRoomId = EMPTY>
  [  6] jmpifz [ 14] ............................ if pRoomId = EMPTY then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 31 .............................. return 0
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 75 .............................. <me.getID()>
  [ 20] pusharglistnoret 1 ...................... <me.getID()>
  [ 22] extcall 649 ............................. removePrepare(me.getID())
  [ 25] getprop 618 ............................. <pRoomPrgID>
  [ 28] pusharglist 1 ........................... <pRoomPrgID>
  [ 30] extcall 377 ............................. <objectExists(pRoomPrgID)>
  [ 33] jmpifz [ 44] ............................ if objectExists(pRoomPrgID) then
  [ 36] getprop 618 ............................. <pRoomPrgID>
  [ 39] pusharglistnoret 1 ...................... <pRoomPrgID>
  [ 41] extcall 267 ............................. removeObject(pRoomPrgID)
  [ 44] getprop 609 ............................. <pCacheFlag>
  [ 47] not ..................................... <not pCacheFlag>
  [ 48] jmpifz [ 66] ............................ if not pCacheFlag then
  [ 51] pushsymb 650 ............................ <#cache>
  [ 54] pusharglist 1 ........................... <#cache>
  [ 56] extcall 130 ............................. <getObject(#cache)>
  [ 58] getprop 608 ............................. <pCacheKey>
  [ 61] pusharglistnoret 2 ...................... <getObject(#cache), pCacheKey>
  [ 63] objcall 442 ............................. getObject(#cache).Remove(pCacheKey)
  [ 66] getparam 0 .............................. <me>
  [ 68] pusharglist 1 ........................... <me>
  [ 70] objcall 53 .............................. <me.getInterface()>
  [ 72] getobjprop 261 .......................... <me.getInterface().pIgnoreListObj>
  [ 75] pusharglist 1 ........................... <me.getInterface().pIgnoreListObj>
  [ 77] extcall 139 ............................. <objectp(me.getInterface().pIgnoreListObj)>
  [ 79] jmpifz [ 96] ............................ if objectp(me.getInterface().pIgnoreListObj) then
  [ 82] getparam 0 .............................. <me>
  [ 84] pusharglist 1 ........................... <me>
  [ 86] objcall 53 .............................. <me.getInterface()>
  [ 88] getchainedprop 261 ...................... <me.getInterface().pIgnoreListObj>
  [ 91] pusharglistnoret 1 ...................... <me.getInterface().pIgnoreListObj>
  [ 93] objcall 651 ............................. me.getInterface().pIgnoreListObj.reset()
  [ 96] pushsymb 652 ............................ <#furniChooser>
  [ 99] pusharglist 1 ........................... <#furniChooser>
  [101] extcall 377 ............................. <objectExists(#furniChooser)>
  [104] jmpifz [119] ............................ if objectExists(#furniChooser) then
  [107] pushsymb 652 ............................ <#furniChooser>
  [110] pusharglist 1 ........................... <#furniChooser>
  [112] extcall 130 ............................. <getObject(#furniChooser)>
  [114] pusharglistnoret 1 ...................... <getObject(#furniChooser)>
  [116] objcall 440 ............................. getObject(#furniChooser).close()
  [119] pushzero ................................ <0>
  [120] setprop 606 ............................. pActiveFlag = 0
  [123] getparam 1 .............................. <tJumpingToSubUnit>
  [125] not ..................................... <not tJumpingToSubUnit>
  [126] jmpifz [139] ............................ if not tJumpingToSubUnit then
  [129] pushcons 2 .............................. <EMPTY>
  [131] setprop 605 ............................. pRoomId = EMPTY
  [134] pushcons 2 .............................. <EMPTY>
  [136] setprop 638 ............................. pReportRoomId = EMPTY
  [139] getparam 0 .............................. <me>
  [141] pusharglist 1 ........................... <me>
  [143] objcall 574 ............................. <me.getShadowManager()>
  [146] pushint8 1 .............................. <1>
  [148] pusharglistnoret 2 ...................... <me.getShadowManager(), 1>
  [150] objcall 653 ............................. me.getShadowManager().disableRender(1)
  [153] getprop 612 ............................. <pUserObjList>
  [156] pusharglist 1 ........................... <pUserObjList>
  [158] extcall 92 .............................. <listp(pUserObjList)>
  [160] jmpifz [173] ............................ if listp(pUserObjList) then
  [163] pushsymb 1 .............................. <#deconstruct>
  [165] getprop 612 ............................. <pUserObjList>
  [168] pusharglistnoret 2 ...................... <#deconstruct, pUserObjList>
  [170] extcall 281 ............................. call(#deconstruct, pUserObjList)
  [173] getprop 613 ............................. <pActiveObjList>
  [176] pusharglist 1 ........................... <pActiveObjList>
  [178] extcall 92 .............................. <listp(pActiveObjList)>
  [180] jmpifz [193] ............................ if listp(pActiveObjList) then
  [183] pushsymb 1 .............................. <#deconstruct>
  [185] getprop 613 ............................. <pActiveObjList>
  [188] pusharglistnoret 2 ...................... <#deconstruct, pActiveObjList>
  [190] extcall 281 ............................. call(#deconstruct, pActiveObjList)
  [193] getprop 614 ............................. <pPassiveObjList>
  [196] pusharglist 1 ........................... <pPassiveObjList>
  [198] extcall 92 .............................. <listp(pPassiveObjList)>
  [200] jmpifz [213] ............................ if listp(pPassiveObjList) then
  [203] pushsymb 1 .............................. <#deconstruct>
  [205] getprop 614 ............................. <pPassiveObjList>
  [208] pusharglistnoret 2 ...................... <#deconstruct, pPassiveObjList>
  [210] extcall 281 ............................. call(#deconstruct, pPassiveObjList)
  [213] getprop 615 ............................. <pItemObjList>
  [216] pusharglist 1 ........................... <pItemObjList>
  [218] extcall 92 .............................. <listp(pItemObjList)>
  [220] jmpifz [233] ............................ if listp(pItemObjList) then
  [223] pushsymb 1 .............................. <#deconstruct>
  [225] getprop 615 ............................. <pItemObjList>
  [228] pusharglistnoret 2 ...................... <#deconstruct, pItemObjList>
  [230] extcall 281 ............................. call(#deconstruct, pItemObjList)
  [233] getparam 0 .............................. <me>
  [235] pusharglist 1 ........................... <me>
  [237] objcall 574 ............................. <me.getShadowManager()>
  [240] pushzero ................................ <0>
  [241] pusharglistnoret 2 ...................... <me.getShadowManager(), 0>
  [243] objcall 653 ............................. me.getShadowManager().disableRender(0)
  [246] pusharglist 0 ........................... <[:]>
  [248] pushproplist ............................ <[:]>
  [249] setprop 612 ............................. pUserObjList = [:]
  [252] pusharglist 0 ........................... <[:]>
  [254] pushproplist ............................ <[:]>
  [255] setprop 613 ............................. pActiveObjList = [:]
  [258] pusharglist 0 ........................... <[:]>
  [260] pushproplist ............................ <[:]>
  [261] setprop 614 ............................. pPassiveObjList = [:]
  [264] pusharglist 0 ........................... <[:]>
  [266] pushproplist ............................ <[:]>
  [267] setprop 615 ............................. pItemObjList = [:]
  [270] getprop 616 ............................. <pBalloonId>
  [273] pusharglist 1 ........................... <pBalloonId>
  [275] extcall 377 ............................. <objectExists(pBalloonId)>
  [278] jmpifz [293] ............................ if objectExists(pBalloonId) then
  [281] getprop 616 ............................. <pBalloonId>
  [284] pusharglist 1 ........................... <pBalloonId>
  [286] extcall 130 ............................. <getObject(pBalloonId)>
  [288] pusharglistnoret 1 ...................... <getObject(pBalloonId)>
  [290] objcall 654 ............................. getObject(pBalloonId).removeBalloons()
  [293] getparam 0 .............................. <me>
  [295] pusharglist 1 ........................... <me>
  [297] objcall 53 .............................. <me.getInterface()>
  [299] pusharglistnoret 1 ...................... <me.getInterface()>
  [301] objcall 184 ............................. me.getInterface().hideAll()
  [303] pushsymb 131 ............................ <#session>
  [305] pusharglist 1 ........................... <#session>
  [307] extcall 130 ............................. <getObject(#session)>
  [309] pushcons 32 ............................. <"room_owner">
  [311] pushzero ................................ <0>
  [312] pusharglistnoret 3 ...................... <getObject(#session), "room_owner", 0>
  [314] objcall 637 ............................. getObject(#session).set("room_owner", 0)
  [317] pushsymb 131 ............................ <#session>
  [319] pusharglist 1 ........................... <#session>
  [321] extcall 130 ............................. <getObject(#session)>
  [323] pushcons 33 ............................. <"room_controller">
  [325] pushzero ................................ <0>
  [326] pusharglistnoret 3 ...................... <getObject(#session), "room_controller", 0>
  [328] objcall 637 ............................. getObject(#session).set("room_controller", 0)
  [331] pushint8 1 .............................. <1>
  [333] pusharglistnoret 1 ...................... <1>
  [335] extcall 31 .............................. return 1
  [337] ret
end

on enterRoomDirect me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 49 ............................. <#type>
  [  4] pusharglist 2 ........................... <tdata, #type>
  [  6] objcall 34 .............................. <tdata[#type]>
  [  8] pushsymb 314 ............................ <#private>
  [ 11] eq ...................................... <tdata[#type] = #private>
  [ 12] jmpifz [ 35] ............................ if tdata[#type] = #private then / else
  [ 15] pushcons 34 ............................. <"private">
  [ 17] setprop 605 ............................. pRoomId = "private"
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 459 ............................ <#id>
  [ 25] pusharglist 2 ........................... <tdata, #id>
  [ 27] objcall 34 .............................. <tdata[#id]>
  [ 29] setprop 638 ............................. pReportRoomId = tdata[#id]
  [ 32] jmp [ 59]
  [ 35] getparam 1 .............................. <tdata>
  [ 37] pushsymb 459 ............................ <#id>
  [ 40] pusharglist 2 ........................... <tdata, #id>
  [ 42] objcall 34 .............................. <tdata[#id]>
  [ 44] setprop 605 ............................. pRoomId = tdata[#id]
  [ 47] getparam 1 .............................. <tdata>
  [ 49] pushsymb 639 ............................ <#port>
  [ 52] pusharglist 2 ........................... <tdata, #port>
  [ 54] objcall 34 .............................. <tdata[#port]>
  [ 56] setprop 638 ............................. pReportRoomId = tdata[#port]
  [ 59] pusharglist 0 ........................... <>
  [ 61] extcall 30 .............................. <VOID>
  [ 63] setprop 610 ............................. pTrgDoorID = VOID
  [ 66] getparam 1 .............................. <tdata>
  [ 68] setprop 315 ............................. pSaveData = tdata
  [ 71] pushsymb 131 ............................ <#session>
  [ 73] pusharglist 1 ........................... <#session>
  [ 75] extcall 130 ............................. <getObject(#session)>
  [ 77] pushcons 37 ............................. <"lastroom">
  [ 79] getprop 315 ............................. <pSaveData>
  [ 82] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", pSaveData>
  [ 84] objcall 637 ............................. getObject(#session).set("lastroom", pSaveData)
  [ 87] getprop 315 ............................. <pSaveData>
  [ 90] pushsymb 49 ............................. <#type>
  [ 92] pusharglist 2 ........................... <pSaveData, #type>
  [ 94] objcall 34 .............................. <pSaveData[#type]>
  [ 96] pushsymb 314 ............................ <#private>
  [ 99] eq ...................................... <pSaveData[#type] = #private>
  [100] jmpifz [128] ............................ if pSaveData[#type] = #private then / else
  [103] getprop 315 ............................. <pSaveData>
  [106] pushsymb 459 ............................ <#id>
  [109] pusharglist 2 ........................... <pSaveData, #id>
  [111] objcall 34 .............................. <pSaveData[#id]>
  [113] pusharglist 1 ........................... <pSaveData[#id]>
  [115] extcall 102 ............................. <integer(pSaveData[#id])>
  [117] setlocal 0 .............................. tRoomID = integer(pSaveData[#id])
  [119] pushzero ................................ <0>
  [120] setlocal 1 .............................. tDoorID = 0
  [122] pushzero ................................ <0>
  [123] setlocal 2 .............................. tTypeID = 0
  [125] jmp [164]
  [128] getprop 315 ............................. <pSaveData>
  [131] pushsymb 639 ............................ <#port>
  [134] pusharglist 2 ........................... <pSaveData, #port>
  [136] objcall 34 .............................. <pSaveData[#port]>
  [138] pusharglist 1 ........................... <pSaveData[#port]>
  [140] extcall 102 ............................. <integer(pSaveData[#port])>
  [142] setlocal 0 .............................. tRoomID = integer(pSaveData[#port])
  [144] getprop 315 ............................. <pSaveData>
  [147] pushsymb 656 ............................ <#door>
  [150] pusharglist 2 ........................... <pSaveData, #door>
  [152] objcall 34 .............................. <pSaveData[#door]>
  [154] pusharglist 1 ........................... <pSaveData[#door]>
  [156] extcall 102 ............................. <integer(pSaveData[#door])>
  [158] setlocal 1 .............................. tDoorID = integer(pSaveData[#door])
  [160] pushint8 1 .............................. <1>
  [162] setlocal 2 .............................. tTypeID = 1
  [164] getlocal 1 .............................. <tDoorID>
  [166] getobjprop 127 .......................... <tDoorID.ilk>
  [168] pushsymb 30 ............................. <#void>
  [170] eq ...................................... <tDoorID.ilk = #void>
  [171] jmpifz [177] ............................ if tDoorID.ilk = #void then
  [174] pushzero ................................ <0>
  [175] setlocal 1 .............................. tDoorID = 0
  [177] getprop 233 ............................. <pRoomConnID>
  [179] pusharglist 1 ........................... <pRoomConnID>
  [181] extcall 549 ............................. <getConnection(pRoomConnID)>
  [184] pushsymb 657 ............................ <#room_directory>
  [187] pushsymb 658 ............................ <#boolean>
  [190] getlocal 2 .............................. <tTypeID>
  [192] pushsymb 102 ............................ <#integer>
  [194] getlocal 0 .............................. <tRoomID>
  [196] pushsymb 102 ............................ <#integer>
  [198] getlocal 1 .............................. <tDoorID>
  [200] pusharglist 6 ........................... <[#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [202] pushproplist ............................ <[#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [203] pusharglist 3 ........................... <getConnection(pRoomConnID), #room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [205] objcall 135 ............................. <getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])>
  [207] pusharglistnoret 1 ...................... <getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])>
  [209] extcall 31 .............................. return getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])
  [211] ret
end

on createUserObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pushsymb 459 ............................ <#id>
  [  7] pusharglist 2 ........................... <tdata, #id>
  [  9] objcall 34 .............................. <tdata[#id]>
  [ 11] pusharglist 2 ........................... <me, tdata[#id]>
  [ 13] objcall 344 ............................. <me.userObjectExists(tdata[#id])>
  [ 16] jmpifz [ 35] ............................ if me.userObjectExists(tdata[#id]) then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 459 ............................ <#id>
  [ 26] pusharglist 2 ........................... <tdata, #id>
  [ 28] objcall 34 .............................. <tdata[#id]>
  [ 30] pusharglistnoret 2 ...................... <me, tdata[#id]>
  [ 32] objcall 564 ............................. me.removeUserObject(tdata[#id])
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <tdata>
  [ 39] getprop 612 ............................. <pUserObjList>
  [ 42] pushcons 40 ............................. <"user">
  [ 44] pusharglist 4 ........................... <me, tdata, pUserObjList, "user">
  [ 46] objcall 594 ............................. <me.createRoomObject(tdata, pUserObjList, "user")>
  [ 49] jmpifz [ 84] ............................ if me.createRoomObject(tdata, pUserObjList, "user") then / else
  [ 52] pushsymb 661 ............................ <#create_user>
  [ 55] getparam 1 .............................. <tdata>
  [ 57] pushsymb 58 ............................. <#name>
  [ 59] pusharglist 2 ........................... <tdata, #name>
  [ 61] objcall 34 .............................. <tdata[#name]>
  [ 63] getparam 1 .............................. <tdata>
  [ 65] pushsymb 459 ............................ <#id>
  [ 68] pusharglist 2 ........................... <tdata, #id>
  [ 70] objcall 34 .............................. <tdata[#id]>
  [ 72] pusharglist 3 ........................... <#create_user, tdata[#name], tdata[#id]>
  [ 74] extcall 310 ............................. <executeMessage(#create_user, tdata[#name], tdata[#id])>
  [ 77] pusharglistnoret 1 ...................... <executeMessage(#create_user, tdata[#name], tdata[#id])>
  [ 79] extcall 31 .............................. return executeMessage(#create_user, tdata[#name], tdata[#id])
  [ 81] jmp [ 89]
  [ 84] pushzero ................................ <0>
  [ 85] pusharglistnoret 1 ...................... <0>
  [ 87] extcall 31 .............................. return 0
  [ 89] ret
end

on removeUserObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 612 ............................. <pUserObjList>
  [  7] pusharglist 3 ........................... <me, tid, pUserObjList>
  [  9] objcall 595 ............................. <me.removeRoomObject(tid, pUserObjList)>
  [ 12] jmpifz [ 32] ............................ if me.removeRoomObject(tid, pUserObjList) then / else
  [ 15] pushsymb 662 ............................ <#remove_user>
  [ 18] getparam 1 .............................. <tid>
  [ 20] pusharglist 2 ........................... <#remove_user, tid>
  [ 22] extcall 310 ............................. <executeMessage(#remove_user, tid)>
  [ 25] pusharglistnoret 1 ...................... <executeMessage(#remove_user, tid)>
  [ 27] extcall 31 .............................. return executeMessage(#remove_user, tid)
  [ 29] jmp [ 37]
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 31 .............................. return 0
  [ 37] ret
end

on getUserObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 612 ............................. <pUserObjList>
  [  7] pusharglist 3 ........................... <me, tid, pUserObjList>
  [  9] objcall 596 ............................. <me.getRoomObject(tid, pUserObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.getRoomObject(tid, pUserObjList)>
  [ 14] extcall 31 .............................. return me.getRoomObject(tid, pUserObjList)
  [ 16] ret
end

on userObjectExists me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 612 ............................. <pUserObjList>
  [  7] pusharglist 3 ........................... <me, tid, pUserObjList>
  [  9] objcall 597 ............................. <me.roomObjectExists(tid, pUserObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.roomObjectExists(tid, pUserObjList)>
  [ 14] extcall 31 .............................. return me.roomObjectExists(tid, pUserObjList)
  [ 16] ret
end

on createActiveObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pushsymb 459 ............................ <#id>
  [  7] pusharglist 2 ........................... <tdata, #id>
  [  9] objcall 34 .............................. <tdata[#id]>
  [ 11] pusharglist 2 ........................... <me, tdata[#id]>
  [ 13] objcall 516 ............................. <me.activeObjectExists(tdata[#id])>
  [ 16] jmpifz [ 35] ............................ if me.activeObjectExists(tdata[#id]) then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 459 ............................ <#id>
  [ 26] pusharglist 2 ........................... <tdata, #id>
  [ 28] objcall 34 .............................. <tdata[#id]>
  [ 30] pusharglistnoret 2 ...................... <me, tdata[#id]>
  [ 32] objcall 472 ............................. me.removeActiveObject(tdata[#id])
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <tdata>
  [ 39] getprop 613 ............................. <pActiveObjList>
  [ 42] pushcons 41 ............................. <"active">
  [ 44] pusharglist 4 ........................... <me, tdata, pActiveObjList, "active">
  [ 46] objcall 594 ............................. <me.createRoomObject(tdata, pActiveObjList, "active")>
  [ 49] pusharglistnoret 1 ...................... <me.createRoomObject(tdata, pActiveObjList, "active")>
  [ 51] extcall 31 .............................. return me.createRoomObject(tdata, pActiveObjList, "active")
  [ 53] ret
end

on removeActiveObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 613 ............................. <pActiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pActiveObjList>
  [  9] objcall 595 ............................. <me.removeRoomObject(tid, pActiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.removeRoomObject(tid, pActiveObjList)>
  [ 14] extcall 31 .............................. return me.removeRoomObject(tid, pActiveObjList)
  [ 16] ret
end

on getActiveObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 613 ............................. <pActiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pActiveObjList>
  [  9] objcall 596 ............................. <me.getRoomObject(tid, pActiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.getRoomObject(tid, pActiveObjList)>
  [ 14] extcall 31 .............................. return me.getRoomObject(tid, pActiveObjList)
  [ 16] ret
end

on activeObjectExists me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 613 ............................. <pActiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pActiveObjList>
  [  9] objcall 597 ............................. <me.roomObjectExists(tid, pActiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.roomObjectExists(tid, pActiveObjList)>
  [ 14] extcall 31 .............................. return me.roomObjectExists(tid, pActiveObjList)
  [ 16] ret
end

on createPassiveObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pushsymb 459 ............................ <#id>
  [  7] pusharglist 2 ........................... <tdata, #id>
  [  9] objcall 34 .............................. <tdata[#id]>
  [ 11] pusharglist 2 ........................... <me, tdata[#id]>
  [ 13] objcall 568 ............................. <me.passiveObjectExists(tdata[#id])>
  [ 16] jmpifz [ 35] ............................ if me.passiveObjectExists(tdata[#id]) then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 459 ............................ <#id>
  [ 26] pusharglist 2 ........................... <tdata, #id>
  [ 28] objcall 34 .............................. <tdata[#id]>
  [ 30] pusharglistnoret 2 ...................... <me, tdata[#id]>
  [ 32] objcall 567 ............................. me.removePassiveObject(tdata[#id])
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <tdata>
  [ 39] getprop 614 ............................. <pPassiveObjList>
  [ 42] pushcons 42 ............................. <"passive">
  [ 44] pusharglist 4 ........................... <me, tdata, pPassiveObjList, "passive">
  [ 46] objcall 594 ............................. <me.createRoomObject(tdata, pPassiveObjList, "passive")>
  [ 49] pusharglistnoret 1 ...................... <me.createRoomObject(tdata, pPassiveObjList, "passive")>
  [ 51] extcall 31 .............................. return me.createRoomObject(tdata, pPassiveObjList, "passive")
  [ 53] ret
end

on removePassiveObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 614 ............................. <pPassiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pPassiveObjList>
  [  9] objcall 595 ............................. <me.removeRoomObject(tid, pPassiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.removeRoomObject(tid, pPassiveObjList)>
  [ 14] extcall 31 .............................. return me.removeRoomObject(tid, pPassiveObjList)
  [ 16] ret
end

on getPassiveObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 614 ............................. <pPassiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pPassiveObjList>
  [  9] objcall 596 ............................. <me.getRoomObject(tid, pPassiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.getRoomObject(tid, pPassiveObjList)>
  [ 14] extcall 31 .............................. return me.getRoomObject(tid, pPassiveObjList)
  [ 16] ret
end

on passiveObjectExists me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 614 ............................. <pPassiveObjList>
  [  7] pusharglist 3 ........................... <me, tid, pPassiveObjList>
  [  9] objcall 597 ............................. <me.roomObjectExists(tid, pPassiveObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.roomObjectExists(tid, pPassiveObjList)>
  [ 14] extcall 31 .............................. return me.roomObjectExists(tid, pPassiveObjList)
  [ 16] ret
end

on createItemObject me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pushsymb 459 ............................ <#id>
  [  7] pusharglist 2 ........................... <tdata, #id>
  [  9] objcall 34 .............................. <tdata[#id]>
  [ 11] pusharglist 2 ........................... <me, tdata[#id]>
  [ 13] objcall 517 ............................. <me.itemObjectExists(tdata[#id])>
  [ 16] jmpifz [ 35] ............................ if me.itemObjectExists(tdata[#id]) then
  [ 19] getparam 0 .............................. <me>
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 459 ............................ <#id>
  [ 26] pusharglist 2 ........................... <tdata, #id>
  [ 28] objcall 34 .............................. <tdata[#id]>
  [ 30] pusharglistnoret 2 ...................... <me, tdata[#id]>
  [ 32] objcall 474 ............................. me.removeItemObject(tdata[#id])
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <tdata>
  [ 39] getprop 615 ............................. <pItemObjList>
  [ 42] pushcons 43 ............................. <"item">
  [ 44] pusharglist 4 ........................... <me, tdata, pItemObjList, "item">
  [ 46] objcall 594 ............................. <me.createRoomObject(tdata, pItemObjList, "item")>
  [ 49] pusharglistnoret 1 ...................... <me.createRoomObject(tdata, pItemObjList, "item")>
  [ 51] extcall 31 .............................. return me.createRoomObject(tdata, pItemObjList, "item")
  [ 53] ret
end

on removeItemObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 615 ............................. <pItemObjList>
  [  7] pusharglist 3 ........................... <me, tid, pItemObjList>
  [  9] objcall 595 ............................. <me.removeRoomObject(tid, pItemObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.removeRoomObject(tid, pItemObjList)>
  [ 14] extcall 31 .............................. return me.removeRoomObject(tid, pItemObjList)
  [ 16] ret
end

on getItemObject me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 615 ............................. <pItemObjList>
  [  7] pusharglist 3 ........................... <me, tid, pItemObjList>
  [  9] objcall 596 ............................. <me.getRoomObject(tid, pItemObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.getRoomObject(tid, pItemObjList)>
  [ 14] extcall 31 .............................. return me.getRoomObject(tid, pItemObjList)
  [ 16] ret
end

on itemObjectExists me, tid
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tid>
  [  4] getprop 615 ............................. <pItemObjList>
  [  7] pusharglist 3 ........................... <me, tid, pItemObjList>
  [  9] objcall 597 ............................. <me.roomObjectExists(tid, pItemObjList)>
  [ 12] pusharglistnoret 1 ...................... <me.roomObjectExists(tid, pItemObjList)>
  [ 14] extcall 31 .............................. return me.roomObjectExists(tid, pItemObjList)
  [ 16] ret
end

on getRoomPrg me
  [  0] getprop 618 ............................. <pRoomPrgID>
  [  3] pusharglist 1 ........................... <pRoomPrgID>
  [  5] extcall 130 ............................. <getObject(pRoomPrgID)>
  [  7] pusharglistnoret 1 ...................... <getObject(pRoomPrgID)>
  [  9] extcall 31 .............................. return getObject(pRoomPrgID)
  [ 11] ret
end

on getRoomID me
  [  0] getprop 605 ............................. <pRoomId>
  [  3] pusharglistnoret 1 ...................... <pRoomId>
  [  5] extcall 31 .............................. return pRoomId
  [  7] ret
end

on getRoomData me
  [  0] getprop 315 ............................. <pSaveData>
  [  3] pusharglist 1 ........................... <pSaveData>
  [  5] extcall 120 ............................. <voidp(pSaveData)>
  [  7] jmpifz [ 18] ............................ if voidp(pSaveData) then / else
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 31 .............................. return 0
  [ 15] jmp [ 25]
  [ 18] getprop 315 ............................. <pSaveData>
  [ 21] pusharglistnoret 1 ...................... <pSaveData>
  [ 23] extcall 31 .............................. return pSaveData
  [ 25] ret
end

on getRoomConnection me
  [  0] getprop 233 ............................. <pRoomConnID>
  [  2] pusharglist 1 ........................... <pRoomConnID>
  [  4] extcall 549 ............................. <getConnection(pRoomConnID)>
  [  7] pusharglistnoret 1 ...................... <getConnection(pRoomConnID)>
  [  9] extcall 31 .............................. return getConnection(pRoomConnID)
  [ 11] ret
end

on getBalloon me
  [  0] getprop 616 ............................. <pBalloonId>
  [  3] pusharglist 1 ........................... <pBalloonId>
  [  5] extcall 130 ............................. <getObject(pBalloonId)>
  [  7] pusharglistnoret 1 ...................... <getObject(pBalloonId)>
  [  9] extcall 31 .............................. return getObject(pBalloonId)
  [ 11] ret
end

on getAd me
  [  0] getprop 620 ............................. <pAdSystemID>
  [  3] pusharglist 1 ........................... <pAdSystemID>
  [  5] extcall 130 ............................. <getObject(pAdSystemID)>
  [  7] pusharglistnoret 1 ...................... <getObject(pAdSystemID)>
  [  9] extcall 31 .............................. return getObject(pAdSystemID)
  [ 11] ret
end

on getInterstitial me
  [  0] getprop 621 ............................. <pInterstitialSystemID>
  [  3] pusharglist 1 ........................... <pInterstitialSystemID>
  [  5] extcall 377 ............................. <objectExists(pInterstitialSystemID)>
  [  8] jmpifz [ 25] ............................ if objectExists(pInterstitialSystemID) then / else
  [ 11] getprop 621 ............................. <pInterstitialSystemID>
  [ 14] pusharglist 1 ........................... <pInterstitialSystemID>
  [ 16] extcall 130 ............................. <getObject(pInterstitialSystemID)>
  [ 18] pusharglistnoret 1 ...................... <getObject(pInterstitialSystemID)>
  [ 20] extcall 31 .............................. return getObject(pInterstitialSystemID)
  [ 22] jmp [ 40]
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 44 ............................. <"Interstitial manager not found">
  [ 29] pushsymb 395 ............................ <#getInterstitial>
  [ 32] pusharglist 3 ........................... <me, "Interstitial manager not found", #getInterstitial>
  [ 34] extcall 72 .............................. <error(me, "Interstitial manager not found", #getInterstitial)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Interstitial manager not found", #getInterstitial)>
  [ 38] extcall 31 .............................. return error(me, "Interstitial manager not found", #getInterstitial)
  [ 40] ret
end

on getClassContainer me
  [  0] getprop 617 ............................. <pClassContId>
  [  3] pusharglist 1 ........................... <pClassContId>
  [  5] extcall 130 ............................. <getObject(pClassContId)>
  [  7] pusharglistnoret 1 ...................... <getObject(pClassContId)>
  [  9] extcall 31 .............................. return getObject(pClassContId)
  [ 11] ret
end

on getOwnUser me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 131 ............................ <#session>
  [  4] pusharglist 1 ........................... <#session>
  [  6] extcall 130 ............................. <getObject(#session)>
  [  8] pushcons 45 ............................. <"user_index">
  [ 10] pusharglist 2 ........................... <getObject(#session), "user_index">
  [ 12] objcall 133 ............................. <getObject(#session).get("user_index")>
  [ 14] pusharglist 2 ........................... <me, getObject(#session).get("user_index")>
  [ 16] objcall 337 ............................. <me.getUserObject(getObject(#session).get("user_index"))>
  [ 19] pusharglistnoret 1 ...................... <me.getUserObject(getObject(#session).get("user_index"))>
  [ 21] extcall 31 .............................. return me.getUserObject(getObject(#session).get("user_index"))
  [ 23] ret
end

on getShadowManager me
  [  0] getprop 624 ............................. <pShadowManagerID>
  [  3] pusharglist 1 ........................... <pShadowManagerID>
  [  5] extcall 377 ............................. <objectExists(pShadowManagerID)>
  [  8] jmpifz [ 25] ............................ if objectExists(pShadowManagerID) then / else
  [ 11] getprop 624 ............................. <pShadowManagerID>
  [ 14] pusharglist 1 ........................... <pShadowManagerID>
  [ 16] extcall 130 ............................. <getObject(pShadowManagerID)>
  [ 18] pusharglistnoret 1 ...................... <getObject(pShadowManagerID)>
  [ 20] extcall 31 .............................. return getObject(pShadowManagerID)
  [ 22] jmp [ 40]
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 46 ............................. <"Shadow manager not found">
  [ 29] pushsymb 574 ............................ <#getShadowManager>
  [ 32] pusharglist 3 ........................... <me, "Shadow manager not found", #getShadowManager>
  [ 34] extcall 72 .............................. <error(me, "Shadow manager not found", #getShadowManager)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Shadow manager not found", #getShadowManager)>
  [ 38] extcall 31 .............................. return error(me, "Shadow manager not found", #getShadowManager)
  [ 40] ret
end

on roomExists me, tRoomID
  [  0] getparam 1 .............................. <tRoomID>
  [  2] pusharglist 1 ........................... <tRoomID>
  [  4] extcall 120 ............................. <voidp(tRoomID)>
  [  6] jmpifz [ 19] ............................ if voidp(tRoomID) then / else
  [  9] getprop 606 ............................. <pActiveFlag>
  [ 12] pusharglistnoret 1 ...................... <pActiveFlag>
  [ 14] extcall 31 .............................. return pActiveFlag
  [ 16] jmp [ 29]
  [ 19] getprop 605 ............................. <pRoomId>
  [ 22] getparam 1 .............................. <tRoomID>
  [ 24] eq ...................................... <pRoomId = tRoomID>
  [ 25] pusharglistnoret 1 ...................... <pRoomId = tRoomID>
  [ 27] extcall 31 .............................. return pRoomId = tRoomID
  [ 29] ret
end

on sendChat me, tChat
  [  0] getparam 1 .............................. <tChat>
  [  2] pusharglist 1 ........................... <tChat>
  [  4] extcall 120 ............................. <voidp(tChat)>
  [  6] jmpifz [ 14] ............................ if voidp(tChat) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 31 .............................. return 0
  [ 14] getparam 1 .............................. <tChat>
  [ 16] pushcons 2 .............................. <EMPTY>
  [ 18] eq ...................................... <tChat = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tChat = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 31 .............................. return 0
  [ 27] getparam 1 .............................. <tChat>
  [ 29] pushint8 1 .............................. <1>
  [ 31] pusharglist 2 ........................... <tChat, 1>
  [ 33] extcall 663 ............................. <convertSpecialChars(tChat, 1)>
  [ 36] setparam 1 .............................. tChat = convertSpecialChars(tChat, 1)
  [ 38] getparam 1 .............................. <tChat>
  [ 40] pushsymb 66 ............................. <#char>
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglist 3 ........................... <tChat, #char, 1>
  [ 46] objcall 68 .............................. <tChat.char[1]>
  [ 48] pushcons 47 ............................. <":">
  [ 50] eq ...................................... <tChat.char[1] = ":">
  [ 51] jmpifz [432] ............................ if tChat.char[1] = ":" then
  [ 54] getparam 1 .............................. <tChat>
  [ 56] pushsymb 100 ............................ <#word>
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglist 3 ........................... <tChat, #word, 1>
  [ 62] objcall 68 .............................. <tChat.word[1]>
  [ 64] peek 0 .................................. case tChat.word[1] of
  [ 66] pushcons 48 ............................. <":chooser">
  [ 68] eq
  [ 69] jmpifz [113] ............................ (case) ":chooser":
  [ 72] pushsymb 131 ............................ <#session>
  [ 74] pusharglist 1 ........................... <#session>
  [ 76] extcall 130 ............................. <getObject(#session)>
  [ 78] pushcons 49 ............................. <"user_rights">
  [ 80] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [ 82] objcall 133 ............................. <getObject(#session).get("user_rights")>
  [ 84] pushcons 50 ............................. <"fuse_habbo_chooser">
  [ 86] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_habbo_chooser">
  [ 88] objcall 330 ............................. <getObject(#session).get("user_rights").getOne("fuse_habbo_chooser")>
  [ 91] jmpifz [110] ............................ if getObject(#session).get("user_rights").getOne("fuse_habbo_chooser") then
  [ 94] pop 1
  [ 96] pushsymb 664 ............................ <#chooser>
  [ 99] pushcons 51 ............................. <"User Chooser Class">
  [101] pusharglist 2 ........................... <#chooser, "User Chooser Class">
  [103] extcall 260 ............................. <createObject(#chooser, "User Chooser Class")>
  [106] pusharglistnoret 1 ...................... <createObject(#chooser, "User Chooser Class")>
  [108] extcall 31 .............................. return createObject(#chooser, "User Chooser Class")
  [110] jmp [430]
  [113] peek 0
  [115] pushcons 52 ............................. <":furni">
  [117] eq
  [118] jmpifz [229] ............................ (case) ":furni":
  [121] getprop 315 ............................. <pSaveData>
  [124] pushsymb 49 ............................. <#type>
  [126] pusharglist 2 ........................... <pSaveData, #type>
  [128] objcall 34 .............................. <pSaveData[#type]>
  [130] pushsymb 314 ............................ <#private>
  [133] nteq .................................... <pSaveData[#type] <> #private>
  [134] jmpifz [145] ............................ if pSaveData[#type] <> #private then
  [137] pop 1
  [139] pushint8 1 .............................. <1>
  [141] pusharglistnoret 1 ...................... <1>
  [143] extcall 31 .............................. return 1
  [145] pushsymb 131 ............................ <#session>
  [147] pusharglist 1 ........................... <#session>
  [149] extcall 130 ............................. <getObject(#session)>
  [151] pushcons 49 ............................. <"user_rights">
  [153] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [155] objcall 133 ............................. <getObject(#session).get("user_rights")>
  [157] pushcons 53 ............................. <"fuse_furni_chooser">
  [159] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_furni_chooser">
  [161] objcall 330 ............................. <getObject(#session).get("user_rights").getOne("fuse_furni_chooser")>
  [164] jmpifz [226] ............................ if getObject(#session).get("user_rights").getOne("fuse_furni_chooser") then
  [167] getprop 623 ............................. <pFurniChooserID>
  [170] pusharglist 1 ........................... <pFurniChooserID>
  [172] extcall 377 ............................. <objectExists(pFurniChooserID)>
  [175] not ..................................... <not objectExists(pFurniChooserID)>
  [176] jmpifz [189] ............................ if not objectExists(pFurniChooserID) then
  [179] getprop 623 ............................. <pFurniChooserID>
  [182] pushcons 54 ............................. <"Furni Chooser Class">
  [184] pusharglistnoret 2 ...................... <pFurniChooserID, "Furni Chooser Class">
  [186] extcall 260 ............................. createObject(pFurniChooserID, "Furni Chooser Class")
  [189] getprop 623 ............................. <pFurniChooserID>
  [192] pusharglist 1 ........................... <pFurniChooserID>
  [194] extcall 130 ............................. <getObject(pFurniChooserID)>
  [196] pushzero ................................ <0>
  [197] eq ...................................... <getObject(pFurniChooserID) = 0>
  [198] jmpifz [208] ............................ if getObject(pFurniChooserID) = 0 then
  [201] pop 1
  [203] pushzero ................................ <0>
  [204] pusharglistnoret 1 ...................... <0>
  [206] extcall 31 .............................. return 0
  [208] pop 1
  [210] getprop 623 ............................. <pFurniChooserID>
  [213] pusharglist 1 ........................... <pFurniChooserID>
  [215] extcall 130 ............................. <getObject(pFurniChooserID)>
  [217] pusharglist 1 ........................... <getObject(pFurniChooserID)>
  [219] objcall 665 ............................. <getObject(pFurniChooserID).showList()>
  [222] pusharglistnoret 1 ...................... <getObject(pFurniChooserID).showList()>
  [224] extcall 31 .............................. return getObject(pFurniChooserID).showList()
  [226] jmp [430]
  [229] peek 0
  [231] pushcons 55 ............................. <":performance">
  [233] eq
  [234] jmpifz [273] ............................ (case) ":performance":
  [237] pushsymb 131 ............................ <#session>
  [239] pusharglist 1 ........................... <#session>
  [241] extcall 130 ............................. <getObject(#session)>
  [243] pushcons 49 ............................. <"user_rights">
  [245] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [247] objcall 133 ............................. <getObject(#session).get("user_rights")>
  [249] pushcons 56 ............................. <"fuse_performance_panel">
  [251] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_performance_panel">
  [253] objcall 330 ............................. <getObject(#session).get("user_rights").getOne("fuse_performance_panel")>
  [256] jmpifz [270] ............................ if getObject(#session).get("user_rights").getOne("fuse_performance_panel") then
  [259] pop 1
  [261] pusharglist 0 ........................... <>
  [263] extcall 666 ............................. <performance()>
  [266] pusharglistnoret 1 ...................... <performance()>
  [268] extcall 31 .............................. return performance()
  [270] jmp [430]
  [273] peek 0
  [275] pushcons 57 ............................. <":debug">
  [277] nteq
  [278] jmpifz [297] ............................ (case) ":debug", ...
  [281] peek 0
  [283] pushcons 58 ............................. <":log">
  [285] nteq
  [286] jmpifz [297] ............................ (case) ..., ":log", ...
  [289] peek 0
  [291] pushcons 59 ............................. <":usestaffrights">
  [293] eq
  [294] jmpifz [341] ............................ (case) ..., ":usestaffrights":
  [297] pushsymb 131 ............................ <#session>
  [299] pusharglist 1 ........................... <#session>
  [301] extcall 130 ............................. <getObject(#session)>
  [303] pushcons 49 ............................. <"user_rights">
  [305] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [307] objcall 133 ............................. <getObject(#session).get("user_rights")>
  [309] pushcons 60 ............................. <"fuse_debug_window">
  [311] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_debug_window">
  [313] objcall 330 ............................. <getObject(#session).get("user_rights").getOne("fuse_debug_window")>
  [316] jmpifz [338] ............................ if getObject(#session).get("user_rights").getOne("fuse_debug_window") then
  [319] getmovieprop 667 ........................ <the runMode>
  [322] pushcons 61 ............................. <"Author">
  [324] containsstr ............................. <the runMode contains "Author">
  [325] not ..................................... <not (the runMode contains "Author")>
  [326] jmpifz [338] ............................ if not (the runMode contains "Author") then
  [329] getparam 0 .............................. <me>
  [331] pushcons 58 ............................. <":log">
  [333] pusharglistnoret 2 ...................... <me, ":log">
  [335] objcall 503 ............................. me.sendChat(":log")
  [338] jmp [430]
  [341] peek 0
  [343] pushcons 62 ............................. <":editcatalogue">
  [345] eq
  [346] jmpifz [387] ............................ (case) ":editcatalogue":
  [349] pushsymb 131 ............................ <#session>
  [351] pusharglist 1 ........................... <#session>
  [353] extcall 130 ............................. <getObject(#session)>
  [355] pushcons 49 ............................. <"user_rights">
  [357] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [359] objcall 133 ............................. <getObject(#session).get("user_rights")>
  [361] pushcons 63 ............................. <"fuse_catalog_editor">
  [363] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_catalog_editor">
  [365] objcall 330 ............................. <getObject(#session).get("user_rights").getOne("fuse_catalog_editor")>
  [368] jmpifz [384] ............................ if getObject(#session).get("user_rights").getOne("fuse_catalog_editor") then
  [371] pop 1
  [373] pushcons 64 ............................. <"edit_catalogue">
  [375] pusharglist 1 ........................... <"edit_catalogue">
  [377] extcall 310 ............................. <executeMessage("edit_catalogue")>
  [380] pusharglistnoret 1 ...................... <executeMessage("edit_catalogue")>
  [382] extcall 31 .............................. return executeMessage("edit_catalogue")
  [384] jmp [430]
  [387] peek 0
  [389] pushcons 65 ............................. <":copypaste">
  [391] eq
  [392] jmpifz [430] ............................ (case) ":copypaste":
  [395] pushsymb 131 ............................ <#session>
  [397] pusharglist 1 ........................... <#session>
  [399] extcall 130 ............................. <getObject(#session)>
  [401] pushcons 49 ............................. <"user_rights">
  [403] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [405] objcall 133 ............................. <getObject(#session).get("user_rights")>
  [407] pushcons 60 ............................. <"fuse_debug_window">
  [409] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_debug_window">
  [411] objcall 330 ............................. <getObject(#session).get("user_rights").getOne("fuse_debug_window")>
  [414] jmpifz [430] ............................ if getObject(#session).get("user_rights").getOne("fuse_debug_window") then
  [417] pushint8 1 .............................. <1>
  [419] setmovieprop 668 ........................ the editShortcutsEnabled = 1
  [422] pop 1
  [424] pushint8 1 .............................. <1>
  [426] pusharglistnoret 1 ...................... <1>
  [428] extcall 31 .............................. return 1
  [430] pop 1 ................................... end case
  [432] pushsymb 131 ............................ <#session>
  [434] pusharglist 1 ........................... <#session>
  [436] extcall 130 ............................. <getObject(#session)>
  [438] pushcons 49 ............................. <"user_rights">
  [440] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [442] objcall 133 ............................. <getObject(#session).get("user_rights")>
  [444] pushcons 60 ............................. <"fuse_debug_window">
  [446] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_debug_window">
  [448] objcall 330 ............................. <getObject(#session).get("user_rights").getOne("fuse_debug_window")>
  [451] jmpifz [740] ............................ if getObject(#session).get("user_rights").getOne("fuse_debug_window") then
  [454] getparam 0 .............................. <me>
  [456] pusharglist 1 ........................... <me>
  [458] objcall 53 .............................. <me.getInterface()>
  [460] pusharglist 1 ........................... <me.getInterface()>
  [462] objcall 196 ............................. <me.getInterface().getKeywords()>
  [464] setlocal 0 .............................. tKeywords = me.getInterface().getKeywords()
  [466] getparam 1 .............................. <tChat>
  [468] pushsymb 100 ............................ <#word>
  [470] pushint8 1 .............................. <1>
  [472] pusharglist 3 ........................... <tChat, #word, 1>
  [474] objcall 68 .............................. <tChat.word[1]>
  [476] peek 0 .................................. case tChat.word[1] of
  [478] getlocal 0 .............................. <tKeywords>
  [480] pushint8 1 .............................. <1>
  [482] pusharglist 2 ........................... <tKeywords, 1>
  [484] objcall 34 .............................. <tKeywords[1]>
  [486] nteq
  [487] jmpifz [504] ............................ (case) tKeywords[1], ...
  [490] peek 0
  [492] getlocal 0 .............................. <tKeywords>
  [494] pushint8 2 .............................. <2>
  [496] pusharglist 2 ........................... <tKeywords, 2>
  [498] objcall 34 .............................. <tKeywords[2]>
  [500] eq
  [501] jmpifz [645] ............................ (case) ..., tKeywords[2]:
  [504] getmovieprop 670 ........................ <the productVersion>
  [507] pushsymb 66 ............................. <#char>
  [509] pushint8 1 .............................. <1>
  [511] pushint8 3 .............................. <3>
  [513] pusharglist 4 ........................... <the productVersion, #char, 1, 3>
  [515] objcall 68 .............................. <(the productVersion).char[1..3]>
  [517] pusharglist 1 ........................... <(the productVersion).char[1..3]>
  [519] extcall 669 ............................. <float((the productVersion).char[1..3])>
  [522] pushfloat32 8.5 ......................... <8.5>
  [527] gteq .................................... <float((the productVersion).char[1..3]) >= 8.5>
  [528] jmpifz [536] ............................ if float((the productVersion).char[1..3]) >= 8.5 then
  [531] pushint8 1 .............................. <1>
  [533] setmovieprop 671 ........................ the debugPlaybackEnabled = 1
  [536] pushcons 0 .............................. <"connection.info.id">
  [538] pusharglist 1 ........................... <"connection.info.id">
  [540] extcall 232 ............................. <getVariable("connection.info.id")>
  [542] setlocal 1 .............................. tInfoID = getVariable("connection.info.id")
  [544] getparam 1 .............................. <tChat>
  [546] pushsymb 100 ............................ <#word>
  [548] pushint8 1 .............................. <1>
  [550] pusharglist 3 ........................... <tChat, #word, 1>
  [552] objcall 68 .............................. <tChat.word[1]>
  [554] peek 0 .................................. case tChat.word[1] of
  [556] getlocal 0 .............................. <tKeywords>
  [558] pushint8 1 .............................. <1>
  [560] pusharglist 2 ........................... <tKeywords, 1>
  [562] objcall 34 .............................. <tKeywords[1]>
  [564] eq
  [565] jmpifz [595] ............................ (case) tKeywords[1]:
  [568] getlocal 1 .............................. <tInfoID>
  [570] pusharglist 1 ........................... <tInfoID>
  [572] extcall 547 ............................. <connectionExists(tInfoID)>
  [575] jmpifz [592] ............................ if connectionExists(tInfoID) then
  [578] getlocal 1 .............................. <tInfoID>
  [580] pusharglist 1 ........................... <tInfoID>
  [582] extcall 549 ............................. <getConnection(tInfoID)>
  [585] pushint8 1 .............................. <1>
  [587] pusharglistnoret 2 ...................... <getConnection(tInfoID), 1>
  [589] objcall 672 ............................. getConnection(tInfoID).setLogMode(1)
  [592] jmp [632]
  [595] peek 0
  [597] getlocal 0 .............................. <tKeywords>
  [599] pushint8 2 .............................. <2>
  [601] pusharglist 2 ........................... <tKeywords, 2>
  [603] objcall 34 .............................. <tKeywords[2]>
  [605] eq
  [606] jmpifz [632] ............................ (case) tKeywords[2]:
  [609] getlocal 1 .............................. <tInfoID>
  [611] pusharglist 1 ........................... <tInfoID>
  [613] extcall 547 ............................. <connectionExists(tInfoID)>
  [616] jmpifz [632] ............................ if connectionExists(tInfoID) then
  [619] getlocal 1 .............................. <tInfoID>
  [621] pusharglist 1 ........................... <tInfoID>
  [623] extcall 549 ............................. <getConnection(tInfoID)>
  [626] pushzero ................................ <0>
  [627] pusharglistnoret 2 ...................... <getConnection(tInfoID), 0>
  [629] objcall 672 ............................. getConnection(tInfoID).setLogMode(0)
  [632] pop 1 ................................... end case
  [634] pop 1
  [636] pushint8 1 .............................. <1>
  [638] pusharglistnoret 1 ...................... <1>
  [640] extcall 31 .............................. return 1
  [642] jmp [732]
  [645] peek 0
  [647] getlocal 0 .............................. <tKeywords>
  [649] pushint8 3 .............................. <3>
  [651] pusharglist 2 ........................... <tKeywords, 3>
  [653] objcall 34 .............................. <tKeywords[3]>
  [655] eq
  [656] jmpifz [732] ............................ (case) tKeywords[3]:
  [659] pushcons 66 ............................. <"System Debug Class">
  [661] pusharglist 1 ........................... <"System Debug Class">
  [663] extcall 62 .............................. <memberExists("System Debug Class")>
  [665] not ..................................... <not memberExists("System Debug Class")>
  [666] jmpifz [676] ............................ if not memberExists("System Debug Class") then
  [669] pop 1
  [671] pushzero ................................ <0>
  [672] pusharglistnoret 1 ...................... <0>
  [674] extcall 31 .............................. return 0
  [676] pushcons 67 ............................. <"loggertool">
  [678] pusharglist 1 ........................... <"loggertool">
  [680] extcall 377 ............................. <objectExists("loggertool")>
  [683] not ..................................... <not objectExists("loggertool")>
  [684] jmpifz [696] ............................ if not objectExists("loggertool") then
  [687] pushcons 67 ............................. <"loggertool">
  [689] pushcons 68 ............................. <"Debug System Class">
  [691] pusharglistnoret 2 ...................... <"loggertool", "Debug System Class">
  [693] extcall 260 ............................. createObject("loggertool", "Debug System Class")
  [696] pushcons 67 ............................. <"loggertool">
  [698] pusharglist 1 ........................... <"loggertool">
  [700] extcall 130 ............................. <getObject("loggertool")>
  [702] pushzero ................................ <0>
  [703] eq ...................................... <getObject("loggertool") = 0>
  [704] jmpifz [715] ............................ if getObject("loggertool") = 0 then
  [707] pop 1
  [709] pushint8 1 .............................. <1>
  [711] pusharglistnoret 1 ...................... <1>
  [713] extcall 31 .............................. return 1
  [715] pop 1
  [717] pushcons 67 ............................. <"loggertool">
  [719] pusharglist 1 ........................... <"loggertool">
  [721] extcall 130 ............................. <getObject("loggertool")>
  [723] pusharglist 1 ........................... <getObject("loggertool")>
  [725] objcall 673 ............................. <getObject("loggertool").initDebug()>
  [728] pusharglistnoret 1 ...................... <getObject("loggertool").initDebug()>
  [730] extcall 31 .............................. return getObject("loggertool").initDebug()
  [732] pop 1 ................................... end case
  [734] pusharglist 0 ........................... <>
  [736] extcall 30 .............................. <VOID>
  [738] setlocal 0 .............................. tKeywords = VOID
  [740] pusharglist 0 ........................... <>
  [742] thebuiltin 536 .......................... <the shiftDown>
  [745] jmpifz [755] ............................ if the shiftDown then / else
  [748] pushcons 69 ............................. <"SHOUT">
  [750] setlocal 2 .............................. tMode = "SHOUT"
  [752] jmp [766]
  [755] getprop 625 ............................. <pChatProps>
  [758] pushcons 16 ............................. <"mode">
  [760] pusharglist 2 ........................... <pChatProps, "mode">
  [762] objcall 34 .............................. <pChatProps["mode"]>
  [764] setlocal 2 .............................. tMode = pChatProps["mode"]
  [766] getparam 0 .............................. <me>
  [768] pusharglist 1 ........................... <me>
  [770] objcall 53 .............................. <me.getInterface()>
  [772] pusharglist 1 ........................... <me.getInterface()>
  [774] objcall 190 ............................. <me.getInterface().getSelectedObject()>
  [776] setlocal 3 .............................. tSelected = me.getInterface().getSelectedObject()
  [778] getparam 0 .............................. <me>
  [780] getlocal 3 .............................. <tSelected>
  [782] pusharglist 2 ........................... <me, tSelected>
  [784] objcall 344 ............................. <me.userObjectExists(tSelected)>
  [787] jmpifz [809] ............................ if me.userObjectExists(tSelected) then / else
  [790] getparam 0 .............................. <me>
  [792] getlocal 3 .............................. <tSelected>
  [794] pusharglist 2 ........................... <me, tSelected>
  [796] objcall 337 ............................. <me.getUserObject(tSelected)>
  [799] pusharglist 1 ........................... <me.getUserObject(tSelected)>
  [801] objcall 347 ............................. <me.getUserObject(tSelected).getName()>
  [804] setlocal 3 .............................. tSelected = me.getUserObject(tSelected).getName()
  [806] jmp [813]
  [809] pushcons 2 .............................. <EMPTY>
  [811] setlocal 3 .............................. tSelected = EMPTY
  [813] getprop 625 ............................. <pChatProps>
  [816] pushcons 18 ............................. <"hobbaCmds">
  [818] pusharglist 2 ........................... <pChatProps, "hobbaCmds">
  [820] objcall 34 .............................. <pChatProps["hobbaCmds"]>
  [822] getparam 1 .............................. <tChat>
  [824] pushsymb 100 ............................ <#word>
  [826] pushint8 1 .............................. <1>
  [828] pushint8 2 .............................. <2>
  [830] pusharglist 4 ........................... <tChat, #word, 1, 2>
  [832] objcall 68 .............................. <tChat.word[1..2]>
  [834] pusharglist 2 ........................... <pChatProps["hobbaCmds"], tChat.word[1..2]>
  [836] objcall 330 ............................. <pChatProps["hobbaCmds"].getOne(tChat.word[1..2])>
  [839] jmpifz [928] ............................ if pChatProps["hobbaCmds"].getOne(tChat.word[1..2]) then / else
  [842] pushcons 17 ............................. <"CHAT">
  [844] setlocal 2 .............................. tMode = "CHAT"
  [846] getparam 1 .............................. <tChat>
  [848] pushsymb 100 ............................ <#word>
  [850] pushint8 2 .............................. <2>
  [852] pusharglist 3 ........................... <tChat, #word, 2>
  [854] objcall 68 .............................. <tChat.word[2]>
  [856] pushcons 70 ............................. <"x">
  [858] eq ...................................... <tChat.word[2] = "x">
  [859] jmpifz [925] ............................ if tChat.word[2] = "x" then
  [862] getlocal 3 .............................. <tSelected>
  [864] pushcons 2 .............................. <EMPTY>
  [866] eq ...................................... <tSelected = EMPTY>
  [867] jmpifz [876] ............................ if tSelected = EMPTY then
  [870] pushint8 1 .............................. <1>
  [872] pusharglistnoret 1 ...................... <1>
  [874] extcall 31 .............................. return 1
  [876] pushcons 70 ............................. <"x">
  [878] getparam 1 .............................. <tChat>
  [880] pusharglist 2 ........................... <"x", tChat>
  [882] extcall 674 ............................. <offset("x", tChat)>
  [885] setlocal 4 .............................. tOffsetX = offset("x", tChat)
  [887] getparam 1 .............................. <tChat>
  [889] pushsymb 66 ............................. <#char>
  [891] pushint8 1 .............................. <1>
  [893] getlocal 4 .............................. <tOffsetX>
  [895] pushint8 1 .............................. <1>
  [897] sub ..................................... <tOffsetX - 1>
  [898] pusharglist 4 ........................... <tChat, #char, 1, tOffsetX - 1>
  [900] objcall 68 .............................. <tChat.char[1..tOffsetX - 1]>
  [902] getlocal 3 .............................. <tSelected>
  [904] joinstr ................................. <tChat.char[1..tOffsetX - 1] & tSelected>
  [905] getparam 1 .............................. <tChat>
  [907] pushsymb 66 ............................. <#char>
  [909] getlocal 4 .............................. <tOffsetX>
  [911] pushint8 1 .............................. <1>
  [913] add ..................................... <tOffsetX + 1>
  [914] getparam 1 .............................. <tChat>
  [916] getobjprop 67 ........................... <tChat.length>
  [918] pusharglist 4 ........................... <tChat, #char, tOffsetX + 1, tChat.length>
  [920] objcall 68 .............................. <tChat.char[tOffsetX + 1..tChat.length]>
  [922] joinstr ................................. <tChat.char[1..tOffsetX - 1] & tSelected & tChat.char[tOffsetX + 1..tChat.length]>
  [923] setparam 1 .............................. tChat = tChat.char[1..tOffsetX - 1] & tSelected & tChat.char[tOffsetX + 1..tChat.length]
  [925] jmp [943]
  [928] getlocal 2 .............................. <tMode>
  [930] pushcons 71 ............................. <"WHISPER">
  [932] eq ...................................... <tMode = "WHISPER">
  [933] jmpifz [943] ............................ if tMode = "WHISPER" then
  [936] getlocal 3 .............................. <tSelected>
  [938] getparam 1 .............................. <tChat>
  [940] joinpadstr .............................. <tSelected && tChat>
  [941] setparam 1 .............................. tChat = tSelected && tChat
  [943] getparam 0 .............................. <me>
  [945] pusharglist 1 ........................... <me>
  [947] objcall 134 ............................. <me.getRoomConnection()>
  [949] getlocal 2 .............................. <tMode>
  [951] pushsymb 519 ............................ <#string>
  [954] getparam 1 .............................. <tChat>
  [956] pusharglist 2 ........................... <[#string: tChat]>
  [958] pushproplist ............................ <[#string: tChat]>
  [959] pusharglist 3 ........................... <me.getRoomConnection(), tMode, [#string: tChat]>
  [961] objcall 135 ............................. <me.getRoomConnection().send(tMode, [#string: tChat])>
  [963] pusharglistnoret 1 ...................... <me.getRoomConnection().send(tMode, [#string: tChat])>
  [965] extcall 31 .............................. return me.getRoomConnection().send(tMode, [#string: tChat])
  [967] ret
end

on setChatMode me, tMode, tUpdate
  [  0] getparam 1 .............................. <tMode>
  [  2] peek 0 .................................. case tMode of
  [  4] pushcons 72 ............................. <"whisper">
  [  6] eq
  [  7] jmpifz [ 24] ............................ (case) "whisper":
  [ 10] getprop 625 ............................. <pChatProps>
  [ 13] pushcons 16 ............................. <"mode">
  [ 15] pushcons 71 ............................. <"WHISPER">
  [ 17] pusharglistnoret 3 ...................... <pChatProps, "mode", "WHISPER">
  [ 19] objcall 59 .............................. pChatProps["mode"] = "WHISPER"
  [ 21] jmp [ 57]
  [ 24] peek 0
  [ 26] pushcons 73 ............................. <"shout">
  [ 28] eq
  [ 29] jmpifz [ 46] ............................ (case) "shout":
  [ 32] getprop 625 ............................. <pChatProps>
  [ 35] pushcons 16 ............................. <"mode">
  [ 37] pushcons 69 ............................. <"SHOUT">
  [ 39] pusharglistnoret 3 ...................... <pChatProps, "mode", "SHOUT">
  [ 41] objcall 59 .............................. pChatProps["mode"] = "SHOUT"
  [ 43] jmp [ 57] ............................... (case) otherwise:
  [ 46] getprop 625 ............................. <pChatProps>
  [ 49] pushcons 16 ............................. <"mode">
  [ 51] pushcons 17 ............................. <"CHAT">
  [ 53] pusharglistnoret 3 ...................... <pChatProps, "mode", "CHAT">
  [ 55] objcall 59 .............................. pChatProps["mode"] = "CHAT"
  [ 57] pop 1 ................................... end case
  [ 59] getparam 2 .............................. <tUpdate>
  [ 61] jmpifz [ 76] ............................ if tUpdate then
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 1 ........................... <me>
  [ 68] objcall 53 .............................. <me.getInterface()>
  [ 70] getparam 1 .............................. <tMode>
  [ 72] pusharglistnoret 2 ...................... <me.getInterface(), tMode>
  [ 74] objcall 194 ............................. me.getInterface().setSpeechDropdown(tMode)
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 1 ...................... <1>
  [ 80] extcall 31 .............................. return 1
  [ 82] ret
end

on print me
  [  0] pushcons 22 ............................. <RETURN>
  [  2] pushcons 74 ............................. <"User objects:">
  [  4] joinstr ................................. <RETURN & "User objects:">
  [  5] pushcons 22 ............................. <RETURN>
  [  7] joinstr ................................. <RETURN & "User objects:" & RETURN>
  [  8] pusharglistnoret 1 ...................... <RETURN & "User objects:" & RETURN>
  [ 10] extcall 555 ............................. put RETURN & "User objects:" & RETURN
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 0
  [ 17] getlocal 0
  [ 19] getprop 612 ............................. <pUserObjList>
  [ 22] getobjprop 33 ........................... <pUserObjList.count>
  [ 24] lteq
  [ 25] jmpifz [ 65] ............................ repeat with i = 1 to pUserObjList.count
  [ 28] getprop 612 ............................. <pUserObjList>
  [ 31] getlocal 0 .............................. <i>
  [ 33] pusharglist 2 ........................... <pUserObjList, i>
  [ 35] objcall 423 ............................. <pUserObjList.getPropAt(i)>
  [ 38] pushcons 47 ............................. <":">
  [ 40] joinstr ................................. <pUserObjList.getPropAt(i) & ":">
  [ 41] getprop 612 ............................. <pUserObjList>
  [ 44] getlocal 0 .............................. <i>
  [ 46] pusharglist 2 ........................... <pUserObjList, i>
  [ 48] objcall 34 .............................. <pUserObjList[i]>
  [ 50] joinpadstr .............................. <pUserObjList.getPropAt(i) & ":" && pUserObjList[i]>
  [ 51] pusharglistnoret 1 ...................... <pUserObjList.getPropAt(i) & ":" && pUserObjList[i]>
  [ 53] extcall 555 ............................. put pUserObjList.getPropAt(i) & ":" && pUserObjList[i]
  [ 56] pushint8 1
  [ 58] getlocal 0
  [ 60] add
  [ 61] setlocal 0
  [ 63] endrepeat [ 17]
  [ 65] pushcons 22 ............................. <RETURN>
  [ 67] pushcons 75 ............................. <"Active objects:">
  [ 69] joinstr ................................. <RETURN & "Active objects:">
  [ 70] pushcons 22 ............................. <RETURN>
  [ 72] joinstr ................................. <RETURN & "Active objects:" & RETURN>
  [ 73] pusharglistnoret 1 ...................... <RETURN & "Active objects:" & RETURN>
  [ 75] extcall 555 ............................. put RETURN & "Active objects:" & RETURN
  [ 78] pushint8 1 .............................. <1>
  [ 80] setlocal 0
  [ 82] getlocal 0
  [ 84] getprop 613 ............................. <pActiveObjList>
  [ 87] getobjprop 33 ........................... <pActiveObjList.count>
  [ 89] lteq
  [ 90] jmpifz [130] ............................ repeat with i = 1 to pActiveObjList.count
  [ 93] getprop 613 ............................. <pActiveObjList>
  [ 96] getlocal 0 .............................. <i>
  [ 98] pusharglist 2 ........................... <pActiveObjList, i>
  [100] objcall 423 ............................. <pActiveObjList.getPropAt(i)>
  [103] pushcons 47 ............................. <":">
  [105] joinstr ................................. <pActiveObjList.getPropAt(i) & ":">
  [106] getprop 613 ............................. <pActiveObjList>
  [109] getlocal 0 .............................. <i>
  [111] pusharglist 2 ........................... <pActiveObjList, i>
  [113] objcall 34 .............................. <pActiveObjList[i]>
  [115] joinpadstr .............................. <pActiveObjList.getPropAt(i) & ":" && pActiveObjList[i]>
  [116] pusharglistnoret 1 ...................... <pActiveObjList.getPropAt(i) & ":" && pActiveObjList[i]>
  [118] extcall 555 ............................. put pActiveObjList.getPropAt(i) & ":" && pActiveObjList[i]
  [121] pushint8 1
  [123] getlocal 0
  [125] add
  [126] setlocal 0
  [128] endrepeat [ 82]
  [130] pushcons 22 ............................. <RETURN>
  [132] pushcons 76 ............................. <"Passive objects:">
  [134] joinstr ................................. <RETURN & "Passive objects:">
  [135] pushcons 22 ............................. <RETURN>
  [137] joinstr ................................. <RETURN & "Passive objects:" & RETURN>
  [138] pusharglistnoret 1 ...................... <RETURN & "Passive objects:" & RETURN>
  [140] extcall 555 ............................. put RETURN & "Passive objects:" & RETURN
  [143] pushint8 1 .............................. <1>
  [145] setlocal 0
  [147] getlocal 0
  [149] getprop 614 ............................. <pPassiveObjList>
  [152] getobjprop 33 ........................... <pPassiveObjList.count>
  [154] lteq
  [155] jmpifz [195] ............................ repeat with i = 1 to pPassiveObjList.count
  [158] getprop 614 ............................. <pPassiveObjList>
  [161] getlocal 0 .............................. <i>
  [163] pusharglist 2 ........................... <pPassiveObjList, i>
  [165] objcall 423 ............................. <pPassiveObjList.getPropAt(i)>
  [168] pushcons 47 ............................. <":">
  [170] joinstr ................................. <pPassiveObjList.getPropAt(i) & ":">
  [171] getprop 614 ............................. <pPassiveObjList>
  [174] getlocal 0 .............................. <i>
  [176] pusharglist 2 ........................... <pPassiveObjList, i>
  [178] objcall 34 .............................. <pPassiveObjList[i]>
  [180] joinpadstr .............................. <pPassiveObjList.getPropAt(i) & ":" && pPassiveObjList[i]>
  [181] pusharglistnoret 1 ...................... <pPassiveObjList.getPropAt(i) & ":" && pPassiveObjList[i]>
  [183] extcall 555 ............................. put pPassiveObjList.getPropAt(i) & ":" && pPassiveObjList[i]
  [186] pushint8 1
  [188] getlocal 0
  [190] add
  [191] setlocal 0
  [193] endrepeat [147]
  [195] ret
end

on addSlideObject me, tid, tFromLoc, tToLoc, tTimeNow, tHasCharacter
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 681 .......................... <the paramCount>
  [  5] pushint8 4 .............................. <4>
  [  7] lt ...................................... <the paramCount < 4>
  [  8] jmpifz [ 26] ............................ if the paramCount < 4 then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 77 ............................. <"Wrong parameter count">
  [ 15] pushsymb 577 ............................ <#addSlideObject>
  [ 18] pusharglist 3 ........................... <me, "Wrong parameter count", #addSlideObject>
  [ 20] extcall 72 .............................. <error(me, "Wrong parameter count", #addSlideObject)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Wrong parameter count", #addSlideObject)>
  [ 24] extcall 31 .............................. return error(me, "Wrong parameter count", #addSlideObject)
  [ 26] getparam 1 .............................. <tid>
  [ 28] getobjprop 519 .......................... <tid.string>
  [ 31] setparam 1 .............................. tid = tid.string
  [ 33] getparam 4 .............................. <tTimeNow>
  [ 35] pusharglist 1 ........................... <tTimeNow>
  [ 37] extcall 120 ............................. <voidp(tTimeNow)>
  [ 39] jmpifz [ 47] ............................ if voidp(tTimeNow) then
  [ 42] getmovieprop 500 ........................ <the milliSeconds>
  [ 45] setparam 4 .............................. tTimeNow = the milliSeconds
  [ 47] getparam 5 .............................. <tHasCharacter>
  [ 49] pusharglist 1 ........................... <tHasCharacter>
  [ 51] extcall 120 ............................. <voidp(tHasCharacter)>
  [ 53] jmpifz [ 59] ............................ if voidp(tHasCharacter) then
  [ 56] pushzero ................................ <0>
  [ 57] setparam 5 .............................. tHasCharacter = 0
  [ 59] getprop 613 ............................. <pActiveObjList>
  [ 62] getparam 1 .............................. <tid>
  [ 64] pusharglist 2 ........................... <pActiveObjList, tid>
  [ 66] objcall 34 .............................. <pActiveObjList[tid]>
  [ 68] pusharglist 1 ........................... <pActiveObjList[tid]>
  [ 70] extcall 120 ............................. <voidp(pActiveObjList[tid])>
  [ 72] not ..................................... <not voidp(pActiveObjList[tid])>
  [ 73] jmpifz [113] ............................ if not voidp(pActiveObjList[tid]) then
  [ 76] getprop 613 ............................. <pActiveObjList>
  [ 79] getparam 1 .............................. <tid>
  [ 81] pusharglist 2 ........................... <pActiveObjList, tid>
  [ 83] objcall 34 .............................. <pActiveObjList[tid]>
  [ 85] setlocal 0 .............................. tObj = pActiveObjList[tid]
  [ 87] getlocal 0 .............................. <tObj>
  [ 89] getparam 2 .............................. <tFromLoc>
  [ 91] getparam 3 .............................. <tToLoc>
  [ 93] getparam 4 .............................. <tTimeNow>
  [ 95] getparam 5 .............................. <tHasCharacter>
  [ 97] pusharglistnoret 5 ...................... <tObj, tFromLoc, tToLoc, tTimeNow, tHasCharacter>
  [ 99] objcall 682 ............................. tObj.setSlideTo(tFromLoc, tToLoc, tTimeNow, tHasCharacter)
  [102] getprop 630 ............................. <pCurrentSlidingObjects>
  [105] getparam 1 .............................. <tid>
  [107] getlocal 0 .............................. <tObj>
  [109] pusharglistnoret 3 ...................... <pCurrentSlidingObjects, tid, tObj>
  [111] objcall 59 .............................. pCurrentSlidingObjects[tid] = tObj
  [113] ret
end

on removeSlideObject me, tid
  [  0] getparam 1 .............................. <tid>
  [  2] getobjprop 519 .......................... <tid.string>
  [  5] setparam 1 .............................. tid = tid.string
  [  7] getprop 630 ............................. <pCurrentSlidingObjects>
  [ 10] getparam 1 .............................. <tid>
  [ 12] pusharglist 2 ........................... <pCurrentSlidingObjects, tid>
  [ 14] objcall 34 .............................. <pCurrentSlidingObjects[tid]>
  [ 16] pusharglist 1 ........................... <pCurrentSlidingObjects[tid]>
  [ 18] extcall 120 ............................. <voidp(pCurrentSlidingObjects[tid])>
  [ 20] not ..................................... <not voidp(pCurrentSlidingObjects[tid])>
  [ 21] jmpifz [ 34] ............................ if not voidp(pCurrentSlidingObjects[tid]) then
  [ 24] getprop 630 ............................. <pCurrentSlidingObjects>
  [ 27] getparam 1 .............................. <tid>
  [ 29] pusharglistnoret 2 ...................... <pCurrentSlidingObjects, tid>
  [ 31] objcall 687 ............................. pCurrentSlidingObjects.deleteProp(tid)
  [ 34] ret
end

on roomPrePartFinished me
  [  0] pusharglist 0 ........................... <>
  [  2] localcall 29 ............................ <getInterstitial()>
  [  4] pusharglist 1 ........................... <getInterstitial()>
  [  6] objcall 688 ............................. <getInterstitial().isAdFinished()>
  [  9] setlocal 0 .............................. tInterstFinished = getInterstitial().isAdFinished()
  [ 11] getprop 628 ............................. <pCastLoaded>
  [ 14] pushzero ................................ <0>
  [ 15] eq ...................................... <pCastLoaded = 0>
  [ 16] getlocal 0 .............................. <tInterstFinished>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <tInterstFinished = 0>
  [ 20] or ...................................... <(pCastLoaded = 0) or (tInterstFinished = 0)>
  [ 21] jmpifz [ 29] ............................ if (pCastLoaded = 0) or (tInterstFinished = 0) then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 31 .............................. return 0
  [ 29] getprop 315 ............................. <pSaveData>
  [ 32] pushsymb 49 ............................. <#type>
  [ 34] pusharglist 2 ........................... <pSaveData, #type>
  [ 36] objcall 34 .............................. <pSaveData[#type]>
  [ 38] pushsymb 314 ............................ <#private>
  [ 41] eq ...................................... <pSaveData[#type] = #private>
  [ 42] jmpifz [ 70] ............................ if pSaveData[#type] = #private then / else
  [ 45] getprop 315 ............................. <pSaveData>
  [ 48] pushsymb 459 ............................ <#id>
  [ 51] pusharglist 2 ........................... <pSaveData, #id>
  [ 53] objcall 34 .............................. <pSaveData[#id]>
  [ 55] pusharglist 1 ........................... <pSaveData[#id]>
  [ 57] extcall 102 ............................. <integer(pSaveData[#id])>
  [ 59] setlocal 1 .............................. tRoomID = integer(pSaveData[#id])
  [ 61] pushzero ................................ <0>
  [ 62] setlocal 2 .............................. tDoorID = 0
  [ 64] pushzero ................................ <0>
  [ 65] setlocal 3 .............................. tTypeID = 0
  [ 67] jmp [106]
  [ 70] getprop 315 ............................. <pSaveData>
  [ 73] pushsymb 639 ............................ <#port>
  [ 76] pusharglist 2 ........................... <pSaveData, #port>
  [ 78] objcall 34 .............................. <pSaveData[#port]>
  [ 80] pusharglist 1 ........................... <pSaveData[#port]>
  [ 82] extcall 102 ............................. <integer(pSaveData[#port])>
  [ 84] setlocal 1 .............................. tRoomID = integer(pSaveData[#port])
  [ 86] getprop 315 ............................. <pSaveData>
  [ 89] pushsymb 656 ............................ <#door>
  [ 92] pusharglist 2 ........................... <pSaveData, #door>
  [ 94] objcall 34 .............................. <pSaveData[#door]>
  [ 96] pusharglist 1 ........................... <pSaveData[#door]>
  [ 98] extcall 102 ............................. <integer(pSaveData[#door])>
  [100] setlocal 2 .............................. tDoorID = integer(pSaveData[#door])
  [102] pushint8 1 .............................. <1>
  [104] setlocal 3 .............................. tTypeID = 1
  [106] getlocal 2 .............................. <tDoorID>
  [108] getobjprop 127 .......................... <tDoorID.ilk>
  [110] pushsymb 30 ............................. <#void>
  [112] eq ...................................... <tDoorID.ilk = #void>
  [113] jmpifz [119] ............................ if tDoorID.ilk = #void then
  [116] pushzero ................................ <0>
  [117] setlocal 2 .............................. tDoorID = 0
  [119] getprop 233 ............................. <pRoomConnID>
  [121] pusharglist 1 ........................... <pRoomConnID>
  [123] extcall 549 ............................. <getConnection(pRoomConnID)>
  [126] pushsymb 657 ............................ <#room_directory>
  [129] pushsymb 658 ............................ <#boolean>
  [132] getlocal 3 .............................. <tTypeID>
  [134] pushsymb 102 ............................ <#integer>
  [136] getlocal 1 .............................. <tRoomID>
  [138] pushsymb 102 ............................ <#integer>
  [140] getlocal 2 .............................. <tDoorID>
  [142] pusharglist 6 ........................... <[#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [144] pushproplist ............................ <[#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [145] pusharglist 3 ........................... <getConnection(pRoomConnID), #room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID]>
  [147] objcall 135 ............................. <getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])>
  [149] pusharglistnoret 1 ...................... <getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])>
  [151] extcall 31 .............................. return getConnection(pRoomConnID).send(#room_directory, [#boolean: tTypeID, #integer: tRoomID, #integer: tDoorID])
  [153] pushint8 1 .............................. <1>
  [155] pusharglistnoret 1 ...................... <1>
  [157] extcall 31 .............................. return 1
  [159] ret
end

on getSpectatorMode me
  [  0] getprop 622 ............................. <pSpectatorSystemID>
  [  3] pusharglist 1 ........................... <pSpectatorSystemID>
  [  5] extcall 130 ............................. <getObject(pSpectatorSystemID)>
  [  7] setlocal 0 .............................. tModeMgrObj = getObject(pSpectatorSystemID)
  [  9] getlocal 0 .............................. <tModeMgrObj>
  [ 11] pushzero ................................ <0>
  [ 12] eq ...................................... <tModeMgrObj = 0>
  [ 13] jmpifz [ 31] ............................ if tModeMgrObj = 0 then
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 78 ............................. <"Spectator System missing!">
  [ 20] pushsymb 306 ............................ <#getSpectatorMode>
  [ 23] pusharglist 3 ........................... <me, "Spectator System missing!", #getSpectatorMode>
  [ 25] extcall 72 .............................. <error(me, "Spectator System missing!", #getSpectatorMode)>
  [ 27] pusharglistnoret 1 ...................... <error(me, "Spectator System missing!", #getSpectatorMode)>
  [ 29] extcall 31 .............................. return error(me, "Spectator System missing!", #getSpectatorMode)
  [ 31] getlocal 0 .............................. <tModeMgrObj>
  [ 33] pusharglist 1 ........................... <tModeMgrObj>
  [ 35] objcall 306 ............................. <tModeMgrObj.getSpectatorMode()>
  [ 38] pusharglistnoret 1 ...................... <tModeMgrObj.getSpectatorMode()>
  [ 40] extcall 31 .............................. return tModeMgrObj.getSpectatorMode()
  [ 42] ret
end

on setSpectatorMode me, tstate
  [  0] getprop 622 ............................. <pSpectatorSystemID>
  [  3] pusharglist 1 ........................... <pSpectatorSystemID>
  [  5] extcall 130 ............................. <getObject(pSpectatorSystemID)>
  [  7] setlocal 0 .............................. tModeMgrObj = getObject(pSpectatorSystemID)
  [  9] getlocal 0 .............................. <tModeMgrObj>
  [ 11] pushzero ................................ <0>
  [ 12] eq ...................................... <tModeMgrObj = 0>
  [ 13] jmpifz [ 31] ............................ if tModeMgrObj = 0 then
  [ 16] getparam 0 .............................. <me>
  [ 18] pushcons 78 ............................. <"Spectator System missing!">
  [ 20] pushsymb 512 ............................ <#setSpectatorMode>
  [ 23] pusharglist 3 ........................... <me, "Spectator System missing!", #setSpectatorMode>
  [ 25] extcall 72 .............................. <error(me, "Spectator System missing!", #setSpectatorMode)>
  [ 27] pusharglistnoret 1 ...................... <error(me, "Spectator System missing!", #setSpectatorMode)>
  [ 29] extcall 31 .............................. return error(me, "Spectator System missing!", #setSpectatorMode)
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 313 ............................. <me.getRoomData()>
  [ 38] setlocal 1 .............................. tRoomData = me.getRoomData()
  [ 40] getlocal 1 .............................. <tRoomData>
  [ 42] pushzero ................................ <0>
  [ 43] eq ...................................... <tRoomData = 0>
  [ 44] jmpifz [ 55] ............................ if tRoomData = 0 then / else
  [ 47] pushsymb 691 ............................ <#public>
  [ 50] setlocal 2 .............................. tRoomType = #public
  [ 52] jmp [ 65]
  [ 55] getlocal 1 .............................. <tRoomData>
  [ 57] pushsymb 49 ............................. <#type>
  [ 59] pusharglist 2 ........................... <tRoomData, #type>
  [ 61] objcall 34 .............................. <tRoomData[#type]>
  [ 63] setlocal 2 .............................. tRoomType = tRoomData[#type]
  [ 65] getlocal 0 .............................. <tModeMgrObj>
  [ 67] getparam 1 .............................. <tstate>
  [ 69] getlocal 2 .............................. <tRoomType>
  [ 71] pusharglist 3 ........................... <tModeMgrObj, tstate, tRoomType>
  [ 73] objcall 512 ............................. <tModeMgrObj.setSpectatorMode(tstate, tRoomType)>
  [ 76] pusharglistnoret 1 ...................... <tModeMgrObj.setSpectatorMode(tstate, tRoomType)>
  [ 78] extcall 31 .............................. return tModeMgrObj.setSpectatorMode(tstate, tRoomType)
  [ 80] ret
end

on pickAndGoCFH me, tSender
  [  0] getparam 1 .............................. <tSender>
  [  2] pusharglist 1 ........................... <tSender>
  [  4] extcall 391 ............................. <stringp(tSender)>
  [  7] not ..................................... <not stringp(tSender)>
  [  8] jmpifz [ 16] ............................ if not stringp(tSender) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 31 .............................. return 0
  [ 16] getparam 1 .............................. <tSender>
  [ 18] setprop 611 ............................. pPickedCryName = tSender
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 31 .............................. return 1
  [ 27] ret
end

on getPickedCryName me
  [  0] getprop 611 ............................. <pPickedCryName>
  [  3] pusharglistnoret 1 ...................... <pPickedCryName>
  [  5] extcall 31 .............................. return pPickedCryName
  [  7] ret
end

on showCfhSenderDelayed me, tid
  [  0] pushcons 2 .............................. <EMPTY>
  [  2] setprop 611 ............................. pPickedCryName = EMPTY
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 53 .............................. <me.getInterface()>
  [ 11] getparam 1 .............................. <tid>
  [ 13] pusharglist 2 ........................... <me.getInterface(), tid>
  [ 15] objcall 210 ............................. <me.getInterface().showCfhSenderDelayed(tid)>
  [ 17] pusharglistnoret 1 ...................... <me.getInterface().showCfhSenderDelayed(tid)>
  [ 19] extcall 31 .............................. return me.getInterface().showCfhSenderDelayed(tid)
  [ 21] ret
end

on loadRoomCasts me
  [  0] getprop 605 ............................. <pRoomId>
  [  3] pushcons 2 .............................. <EMPTY>
  [  5] eq ...................................... <pRoomId = EMPTY>
  [  6] jmpifz [ 14] ............................ if pRoomId = EMPTY then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 31 .............................. return 0
  [ 14] pushcons 79 ............................. <"room.cast.">
  [ 16] setlocal 0 .............................. tCastVarPrefix = "room.cast."
  [ 18] getparam 0 .............................. <me>
  [ 20] getlocal 0 .............................. <tCastVarPrefix>
  [ 22] getlocal 1 .............................. <tCastList>
  [ 24] pusharglist 3 ........................... <me, tCastVarPrefix, tCastList>
  [ 26] objcall 604 ............................. <me.addToCastDownloadList(tCastVarPrefix, tCastList)>
  [ 29] setlocal 1 .............................. tCastList = me.addToCastDownloadList(tCastVarPrefix, tCastList)
  [ 31] getprop 315 ............................. <pSaveData>
  [ 34] pushsymb 49 ............................. <#type>
  [ 36] pusharglist 2 ........................... <pSaveData, #type>
  [ 38] objcall 34 .............................. <pSaveData[#type]>
  [ 40] pushsymb 691 ............................ <#public>
  [ 43] eq ...................................... <pSaveData[#type] = #public>
  [ 44] jmpifz [ 51] ............................ if pSaveData[#type] = #public then
  [ 47] pushzero ................................ <0>
  [ 48] setprop 629 ............................. pPrvRoomsReady = 0
  [ 51] getprop 315 ............................. <pSaveData>
  [ 54] pushsymb 49 ............................. <#type>
  [ 56] pusharglist 2 ........................... <pSaveData, #type>
  [ 58] objcall 34 .............................. <pSaveData[#type]>
  [ 60] pushsymb 314 ............................ <#private>
  [ 63] eq ...................................... <pSaveData[#type] = #private>
  [ 64] jmpifz [113] ............................ if pSaveData[#type] = #private then
  [ 67] getparam 0 .............................. <me>
  [ 69] getprop 315 ............................. <pSaveData>
  [ 72] pushsymb 641 ............................ <#marker>
  [ 75] pusharglist 2 ........................... <pSaveData, #marker>
  [ 77] objcall 34 .............................. <pSaveData[#marker]>
  [ 79] pusharglist 2 ........................... <me, pSaveData[#marker]>
  [ 81] objcall 603 ............................. <me.getRoomScale(pSaveData[#marker])>
  [ 84] pushsymb 643 ............................ <#small>
  [ 87] eq ...................................... <me.getRoomScale(pSaveData[#marker]) = #small>
  [ 88] jmpifz [113] ............................ if me.getRoomScale(pSaveData[#marker]) = #small then
  [ 91] pushcons 80 ............................. <"room.cast.small.">
  [ 93] setlocal 0 .............................. tCastVarPrefix = "room.cast.small."
  [ 95] getparam 0 .............................. <me>
  [ 97] getlocal 0 .............................. <tCastVarPrefix>
  [ 99] getlocal 1 .............................. <tCastList>
  [101] pusharglist 3 ........................... <me, tCastVarPrefix, tCastList>
  [103] objcall 604 ............................. <me.addToCastDownloadList(tCastVarPrefix, tCastList)>
  [106] setlocal 1 .............................. tCastList = me.addToCastDownloadList(tCastVarPrefix, tCastList)
  [108] pushint8 1 .............................. <1>
  [110] setprop 629 ............................. pPrvRoomsReady = 1
  [113] getlocal 1 .............................. <tCastList>
  [115] getobjprop 33 ........................... <tCastList.count>
  [117] pushzero ................................ <0>
  [118] gt ...................................... <tCastList.count > 0>
  [119] jmpifz [181] ............................ if tCastList.count > 0 then
  [122] getlocal 1 .............................. <tCastList>
  [124] pushint8 1 .............................. <1>
  [126] pusharglist 2 ........................... <tCastList, 1>
  [128] extcall 695 ............................. <startCastLoad(tCastList, 1)>
  [131] setlocal 2 .............................. tCastLoadId = startCastLoad(tCastList, 1)
  [133] getlocal 2 .............................. <tCastLoadId>
  [135] pushsymb 582 ............................ <#loadRoomCasts>
  [138] getparam 0 .............................. <me>
  [140] pusharglist 1 ........................... <me>
  [142] objcall 75 .............................. <me.getID()>
  [144] pusharglistnoret 3 ...................... <tCastLoadId, #loadRoomCasts, me.getID()>
  [146] extcall 696 ............................. registerCastloadCallback(tCastLoadId, #loadRoomCasts, me.getID())
  [149] getparam 0 .............................. <me>
  [151] pusharglist 1 ........................... <me>
  [153] objcall 53 .............................. <me.getInterface()>
  [155] getlocal 2 .............................. <tCastLoadId>
  [157] pushcons 81 ............................. <"room_hold">
  [159] pushcons 82 ............................. <"room_loading">
  [161] pushcons 83 ............................. <"Hold on...">
  [163] pusharglist 2 ........................... <"room_loading", "Hold on...">
  [165] extcall 55 .............................. <getText("room_loading", "Hold on...")>
  [167] pusharglist 2 ........................... <"room_hold", getText("room_loading", "Hold on...")>
  [169] extcall 55 .............................. <getText("room_hold", getText("room_loading", "Hold on..."))>
  [171] pusharglistnoret 3 ...................... <me.getInterface(), tCastLoadId, getText("room_hold", getText("room_loading", "Hold on..."))>
  [173] objcall 178 ............................. me.getInterface().showLoaderBar(tCastLoadId, getText("room_hold", getText("room_loading", "Hold on...")))
  [175] pushint8 1 .............................. <1>
  [177] pusharglistnoret 1 ...................... <1>
  [179] extcall 31 .............................. return 1
  [181] getprop 315 ............................. <pSaveData>
  [184] pushsymb 642 ............................ <#casts>
  [187] pusharglist 2 ........................... <pSaveData, #casts>
  [189] objcall 34 .............................. <pSaveData[#casts]>
  [191] pusharglist 1 ........................... <pSaveData[#casts]>
  [193] extcall 120 ............................. <voidp(pSaveData[#casts])>
  [195] jmpifz [211] ............................ if voidp(pSaveData[#casts]) then
  [198] getprop 315 ............................. <pSaveData>
  [201] pushsymb 642 ............................ <#casts>
  [204] pusharglist 0 ........................... <[]>
  [206] pushlist ................................ <[]>
  [207] pusharglistnoret 3 ...................... <pSaveData, #casts, []>
  [209] objcall 59 .............................. pSaveData[#casts] = []
  [211] getprop 315 ............................. <pSaveData>
  [214] pushsymb 642 ............................ <#casts>
  [217] pusharglist 2 ........................... <pSaveData, #casts>
  [219] objcall 34 .............................. <pSaveData[#casts]>
  [221] getobjprop 33 ........................... <pSaveData[#casts].count>
  [223] pushint8 1 .............................. <1>
  [225] lt ...................................... <pSaveData[#casts].count < 1>
  [226] jmpifz [262] ............................ if pSaveData[#casts].count < 1 then
  [229] getparam 0 .............................. <me>
  [231] pushcons 84 ............................. <"Cast for room not defined:">
  [233] getprop 605 ............................. <pRoomId>
  [236] joinpadstr .............................. <"Cast for room not defined:" && pRoomId>
  [237] pushsymb 582 ............................ <#loadRoomCasts>
  [240] pusharglistnoret 3 ...................... <me, "Cast for room not defined:" && pRoomId, #loadRoomCasts>
  [242] extcall 72 .............................. error(me, "Cast for room not defined:" && pRoomId, #loadRoomCasts)
  [244] getparam 0 .............................. <me>
  [246] pusharglist 1 ........................... <me>
  [248] objcall 53 .............................. <me.getInterface()>
  [250] pusharglistnoret 1 ...................... <me.getInterface()>
  [252] objcall 179 ............................. me.getInterface().hideLoaderBar()
  [254] pushsymb 552 ............................ <#leaveRoom>
  [257] pusharglistnoret 1 ...................... <#leaveRoom>
  [259] extcall 310 ............................. executeMessage(#leaveRoom)
  [262] getprop 315 ............................. <pSaveData>
  [265] pushsymb 642 ............................ <#casts>
  [268] pusharglist 2 ........................... <pSaveData, #casts>
  [270] objcall 34 .............................. <pSaveData[#casts]>
  [272] pushzero ................................ <0>
  [273] pusharglist 2 ........................... <pSaveData[#casts], 0>
  [275] extcall 695 ............................. <startCastLoad(pSaveData[#casts], 0)>
  [278] setlocal 2 .............................. tCastLoadId = startCastLoad(pSaveData[#casts], 0)
  [280] getlocal 2 .............................. <tCastLoadId>
  [282] pushsymb 583 ............................ <#roomCastLoaded>
  [285] getparam 0 .............................. <me>
  [287] pusharglist 1 ........................... <me>
  [289] objcall 75 .............................. <me.getID()>
  [291] pusharglistnoret 3 ...................... <tCastLoadId, #roomCastLoaded, me.getID()>
  [293] extcall 696 ............................. registerCastloadCallback(tCastLoadId, #roomCastLoaded, me.getID())
  [296] getparam 0 .............................. <me>
  [298] pusharglist 1 ........................... <me>
  [300] objcall 53 .............................. <me.getInterface()>
  [302] getlocal 2 .............................. <tCastLoadId>
  [304] pushcons 82 ............................. <"room_loading">
  [306] pushcons 85 ............................. <"Loading room">
  [308] pusharglist 2 ........................... <"room_loading", "Loading room">
  [310] extcall 55 .............................. <getText("room_loading", "Loading room")>
  [312] pushcons 22 ............................. <RETURN>
  [314] joinstr ................................. <getText("room_loading", "Loading room") & RETURN>
  [315] pushcons 86 ............................. <QUOTE>
  [317] joinstr ................................. <getText("room_loading", "Loading room") & RETURN & QUOTE>
  [318] getprop 315 ............................. <pSaveData>
  [321] pushsymb 58 ............................. <#name>
  [323] pusharglist 2 ........................... <pSaveData, #name>
  [325] objcall 34 .............................. <pSaveData[#name]>
  [327] joinstr ................................. <getText("room_loading", "Loading room") & RETURN & QUOTE & pSaveData[#name]>
  [328] pushcons 86 ............................. <QUOTE>
  [330] joinstr ................................. <getText("room_loading", "Loading room") & RETURN & QUOTE & pSaveData[#name] & QUOTE>
  [331] pusharglistnoret 3 ...................... <me.getInterface(), tCastLoadId, getText("room_loading", "Loading room") & RETURN & QUOTE & pSaveData[#name] & QUOTE>
  [333] objcall 178 ............................. me.getInterface().showLoaderBar(tCastLoadId, getText("room_loading", "Loading room") & RETURN & QUOTE & pSaveData[#name] & QUOTE)
  [335] pushint8 1 .............................. <1>
  [337] pusharglistnoret 1 ...................... <1>
  [339] extcall 31 .............................. return 1
  [341] ret
end

on roomCastLoaded me
  [  0] getprop 605 ............................. <pRoomId>
  [  3] pushcons 2 .............................. <EMPTY>
  [  5] eq ...................................... <pRoomId = EMPTY>
  [  6] jmpifz [ 37] ............................ if pRoomId = EMPTY then
  [  9] pushcons 87 ............................. <"null">
  [ 11] setprop 605 ............................. pRoomId = "null"
  [ 14] pushsymb 552 ............................ <#leaveRoom>
  [ 17] pusharglistnoret 1 ...................... <#leaveRoom>
  [ 19] extcall 310 ............................. executeMessage(#leaveRoom)
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 88 ............................. <"Room building process is aborted!">
  [ 26] pushsymb 583 ............................ <#roomCastLoaded>
  [ 29] pusharglist 3 ........................... <me, "Room building process is aborted!", #roomCastLoaded>
  [ 31] extcall 72 .............................. <error(me, "Room building process is aborted!", #roomCastLoaded)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "Room building process is aborted!", #roomCastLoaded)>
  [ 35] extcall 31 .............................. return error(me, "Room building process is aborted!", #roomCastLoaded)
  [ 37] getprop 610 ............................. <pTrgDoorID>
  [ 40] pusharglist 1 ........................... <pTrgDoorID>
  [ 42] extcall 120 ............................. <voidp(pTrgDoorID)>
  [ 44] jmpifz [244] ............................ if voidp(pTrgDoorID) then
  [ 47] pushcons 89 ............................. <"room_preparing">
  [ 49] pushcons 90 ............................. <"...preparing room.">
  [ 51] pusharglist 2 ........................... <"room_preparing", "...preparing room.">
  [ 53] extcall 55 .............................. <getText("room_preparing", "...preparing room.")>
  [ 55] setlocal 0 .............................. tTxt = getText("room_preparing", "...preparing room.")
  [ 57] getprop 315 ............................. <pSaveData>
  [ 60] pushsymb 49 ............................. <#type>
  [ 62] pusharglist 2 ........................... <pSaveData, #type>
  [ 64] objcall 34 .............................. <pSaveData[#type]>
  [ 66] pushsymb 314 ............................ <#private>
  [ 69] eq ...................................... <pSaveData[#type] = #private>
  [ 70] jmpifz [125] ............................ if pSaveData[#type] = #private then
  [ 73] getprop 315 ............................. <pSaveData>
  [ 76] pushsymb 656 ............................ <#door>
  [ 79] pusharglist 2 ........................... <pSaveData, #door>
  [ 81] objcall 34 .............................. <pSaveData[#door]>
  [ 83] pushcons 91 ............................. <"closed">
  [ 85] eq ...................................... <pSaveData[#door] = "closed">
  [ 86] jmpifz [125] ............................ if pSaveData[#door] = "closed" then
  [ 89] getprop 315 ............................. <pSaveData>
  [ 92] pushsymb 316 ............................ <#owner>
  [ 95] pusharglist 2 ........................... <pSaveData, #owner>
  [ 97] objcall 34 .............................. <pSaveData[#owner]>
  [ 99] pushsymb 131 ............................ <#session>
  [101] pusharglist 1 ........................... <#session>
  [103] extcall 130 ............................. <getObject(#session)>
  [105] pushcons 92 ............................. <"user_name">
  [107] pusharglist 2 ........................... <getObject(#session), "user_name">
  [109] objcall 133 ............................. <getObject(#session).get("user_name")>
  [111] nteq .................................... <pSaveData[#owner] <> getObject(#session).get("user_name")>
  [112] jmpifz [125] ............................ if pSaveData[#owner] <> getObject(#session).get("user_name") then
  [115] pushcons 93 ............................. <"room_waiting">
  [117] pushcons 94 ............................. <"...waiting.">
  [119] pusharglist 2 ........................... <"room_waiting", "...waiting.">
  [121] extcall 55 .............................. <getText("room_waiting", "...waiting.")>
  [123] setlocal 0 .............................. tTxt = getText("room_waiting", "...waiting.")
  [125] getparam 0 .............................. <me>
  [127] pusharglist 1 ........................... <me>
  [129] objcall 53 .............................. <me.getInterface()>
  [131] pusharglist 0 ........................... <>
  [133] extcall 30 .............................. <VOID>
  [135] pushcons 86 ............................. <QUOTE>
  [137] getprop 315 ............................. <pSaveData>
  [140] pushsymb 58 ............................. <#name>
  [142] pusharglist 2 ........................... <pSaveData, #name>
  [144] objcall 34 .............................. <pSaveData[#name]>
  [146] joinstr ................................. <QUOTE & pSaveData[#name]>
  [147] pushcons 86 ............................. <QUOTE>
  [149] joinstr ................................. <QUOTE & pSaveData[#name] & QUOTE>
  [150] pushcons 22 ............................. <RETURN>
  [152] joinstr ................................. <QUOTE & pSaveData[#name] & QUOTE & RETURN>
  [153] getlocal 0 .............................. <tTxt>
  [155] joinstr ................................. <QUOTE & pSaveData[#name] & QUOTE & RETURN & tTxt>
  [156] pusharglistnoret 3 ...................... <me.getInterface(), VOID, QUOTE & pSaveData[#name] & QUOTE & RETURN & tTxt>
  [158] objcall 178 ............................. me.getInterface().showLoaderBar(VOID, QUOTE & pSaveData[#name] & QUOTE & RETURN & tTxt)
  [160] getprop 315 ............................. <pSaveData>
  [163] pushsymb 642 ............................ <#casts>
  [166] pusharglist 2 ........................... <pSaveData, #casts>
  [168] objcall 34 .............................. <pSaveData[#casts]>
  [170] setlocal 1 .............................. tRoomCasts = pSaveData[#casts]
  [172] getlocal 1 .............................. <tRoomCasts>
  [174] peek 0
  [176] pusharglist 1
  [178] extcall 33
  [180] pushint8 1
  [182] peek 0
  [184] peek 2
  [186] lteq
  [187] jmpifz [242] ............................ repeat with tCast in tRoomCasts
  [190] peek 2
  [192] peek 1
  [194] pusharglist 2
  [196] extcall 34
  [198] setlocal 2
  [200] getlocal 2 .............................. <tCast>
  [202] pusharglist 1 ........................... <tCast>
  [204] extcall 699 ............................. <castExists(tCast)>
  [207] not ..................................... <not castExists(tCast)>
  [208] jmpifz [237] ............................ if not castExists(tCast) then
  [211] getparam 0 .............................. <me>
  [213] pushcons 95 ............................. <"Cast required by room not found:">
  [215] getlocal 2 .............................. <tCast>
  [217] joinpadstr .............................. <"Cast required by room not found:" && tCast>
  [218] pushsymb 583 ............................ <#roomCastLoaded>
  [221] pusharglistnoret 3 ...................... <me, "Cast required by room not found:" && tCast, #roomCastLoaded>
  [223] extcall 72 .............................. error(me, "Cast required by room not found:" && tCast, #roomCastLoaded)
  [225] pushsymb 552 ............................ <#leaveRoom>
  [228] pusharglist 1 ........................... <#leaveRoom>
  [230] extcall 310 ............................. <executeMessage(#leaveRoom)>
  [233] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [235] extcall 31 .............................. return executeMessage(#leaveRoom)
  [237] pushint8 1
  [239] add
  [240] endrepeat [182]
  [242] pop 3
  [244] pushint8 1 .............................. <1>
  [246] setprop 628 ............................. pCastLoaded = 1
  [249] getparam 0 .............................. <me>
  [251] pusharglistnoret 1 ...................... <me>
  [253] objcall 579 ............................. me.roomPrePartFinished()
  [256] ret
end

on roomConnected me, tMarker, tstate
  [  0] getprop 605 ............................. <pRoomId>
  [  3] pushcons 2 .............................. <EMPTY>
  [  5] eq ...................................... <pRoomId = EMPTY>
  [  6] jmpifz [ 37] ............................ if pRoomId = EMPTY then
  [  9] pushcons 87 ............................. <"null">
  [ 11] setprop 605 ............................. pRoomId = "null"
  [ 14] pushsymb 552 ............................ <#leaveRoom>
  [ 17] pusharglistnoret 1 ...................... <#leaveRoom>
  [ 19] extcall 310 ............................. executeMessage(#leaveRoom)
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 88 ............................. <"Room building process is aborted!">
  [ 26] pushsymb 583 ............................ <#roomCastLoaded>
  [ 29] pusharglist 3 ........................... <me, "Room building process is aborted!", #roomCastLoaded>
  [ 31] extcall 72 .............................. <error(me, "Room building process is aborted!", #roomCastLoaded)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "Room building process is aborted!", #roomCastLoaded)>
  [ 35] extcall 31 .............................. return error(me, "Room building process is aborted!", #roomCastLoaded)
  [ 37] getprop 610 ............................. <pTrgDoorID>
  [ 40] pusharglist 1 ........................... <pTrgDoorID>
  [ 42] extcall 120 ............................. <voidp(pTrgDoorID)>
  [ 44] not ..................................... <not voidp(pTrgDoorID)>
  [ 45] jmpifz [100] ............................ if not voidp(pTrgDoorID) then
  [ 48] getparam 2 .............................. <tstate>
  [ 50] pushcons 96 ............................. <"OPC_OK">
  [ 52] eq ...................................... <tstate = "OPC_OK">
  [ 53] jmpifz [100] ............................ if tstate = "OPC_OK" then
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglist 1 ........................... <me>
  [ 60] objcall 134 ............................. <me.getRoomConnection()>
  [ 62] pushcons 38 ............................. <"GOVIADOOR">
  [ 64] getprop 610 ............................. <pTrgDoorID>
  [ 67] pushcons 39 ............................. <"/">
  [ 69] joinstr ................................. <pTrgDoorID & "/">
  [ 70] getprop 315 ............................. <pSaveData>
  [ 73] pushsymb 645 ............................ <#teleport>
  [ 76] pusharglist 2 ........................... <pSaveData, #teleport>
  [ 78] objcall 34 .............................. <pSaveData[#teleport]>
  [ 80] joinstr ................................. <pTrgDoorID & "/" & pSaveData[#teleport]>
  [ 81] pusharglist 3 ........................... <me.getRoomConnection(), "GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport]>
  [ 83] objcall 135 ............................. <me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])>
  [ 85] setlocal 0 .............................. tValue = me.getRoomConnection().send("GOVIADOOR", pTrgDoorID & "/" & pSaveData[#teleport])
  [ 87] pusharglist 0 ........................... <>
  [ 89] extcall 30 .............................. <VOID>
  [ 91] setprop 610 ............................. pTrgDoorID = VOID
  [ 94] getlocal 0 .............................. <tValue>
  [ 96] pusharglistnoret 1 ...................... <tValue>
  [ 98] extcall 31 .............................. return tValue
  [100] getprop 315 ............................. <pSaveData>
  [103] pushsymb 49 ............................. <#type>
  [105] pusharglist 2 ........................... <pSaveData, #type>
  [107] objcall 34 .............................. <pSaveData[#type]>
  [109] pushsymb 314 ............................ <#private>
  [112] eq ...................................... <pSaveData[#type] = #private>
  [113] jmpifz [247] ............................ if pSaveData[#type] = #private then
  [116] getparam 2 .............................. <tstate>
  [118] pushcons 96 ............................. <"OPC_OK">
  [120] eq ...................................... <tstate = "OPC_OK">
  [121] jmpifz [213] ............................ if tstate = "OPC_OK" then / else
  [124] getprop 315 ............................. <pSaveData>
  [127] pushsymb 459 ............................ <#id>
  [130] pusharglist 2 ........................... <pSaveData, #id>
  [132] objcall 34 .............................. <pSaveData[#id]>
  [134] setlocal 1 .............................. tStr = pSaveData[#id]
  [136] pushsymb 703 ............................ <#navigator>
  [139] pusharglist 1 ........................... <#navigator>
  [141] extcall 345 ............................. <threadExists(#navigator)>
  [144] jmpifz [192] ............................ if threadExists(#navigator) then
  [147] pushsymb 703 ............................ <#navigator>
  [150] pusharglist 1 ........................... <#navigator>
  [152] extcall 51 .............................. <getThread(#navigator)>
  [154] pusharglist 1 ........................... <getThread(#navigator)>
  [156] objcall 115 ............................. <getThread(#navigator).getComponent()>
  [158] getprop 315 ............................. <pSaveData>
  [161] pushsymb 459 ............................ <#id>
  [164] pusharglist 2 ........................... <pSaveData, #id>
  [166] objcall 34 .............................. <pSaveData[#id]>
  [168] pusharglist 2 ........................... <getThread(#navigator).getComponent(), pSaveData[#id]>
  [170] objcall 704 ............................. <getThread(#navigator).getComponent().getFlatPassword(pSaveData[#id])>
  [173] setlocal 2 .............................. tPassword = getThread(#navigator).getComponent().getFlatPassword(pSaveData[#id])
  [175] getlocal 2 .............................. <tPassword>
  [177] pushzero ................................ <0>
  [178] nteq .................................... <tPassword <> 0>
  [179] jmpifz [192] ............................ if tPassword <> 0 then
  [182] getlocal 1 .............................. <tStr>
  [184] pushcons 39 ............................. <"/">
  [186] joinstr ................................. <tStr & "/">
  [187] getlocal 2 .............................. <tPassword>
  [189] joinstr ................................. <tStr & "/" & tPassword>
  [190] setlocal 1 .............................. tStr = tStr & "/" & tPassword
  [192] getparam 0 .............................. <me>
  [194] pusharglist 1 ........................... <me>
  [196] objcall 134 ............................. <me.getRoomConnection()>
  [198] pushcons 97 ............................. <"TRYFLAT">
  [200] getlocal 1 .............................. <tStr>
  [202] pusharglist 3 ........................... <me.getRoomConnection(), "TRYFLAT", tStr>
  [204] objcall 135 ............................. <me.getRoomConnection().send("TRYFLAT", tStr)>
  [206] pusharglistnoret 1 ...................... <me.getRoomConnection().send("TRYFLAT", tStr)>
  [208] extcall 31 .............................. return me.getRoomConnection().send("TRYFLAT", tStr)
  [210] jmp [247]
  [213] getparam 2 .............................. <tstate>
  [215] pushcons 98 ............................. <"FLAT_LETIN">
  [217] eq ...................................... <tstate = "FLAT_LETIN">
  [218] jmpifz [247] ............................ if tstate = "FLAT_LETIN" then
  [221] getparam 0 .............................. <me>
  [223] pusharglist 1 ........................... <me>
  [225] objcall 134 ............................. <me.getRoomConnection()>
  [227] pushcons 99 ............................. <"GOTOFLAT">
  [229] getprop 315 ............................. <pSaveData>
  [232] pushsymb 459 ............................ <#id>
  [235] pusharglist 2 ........................... <pSaveData, #id>
  [237] objcall 34 .............................. <pSaveData[#id]>
  [239] pusharglist 3 ........................... <me.getRoomConnection(), "GOTOFLAT", pSaveData[#id]>
  [241] objcall 135 ............................. <me.getRoomConnection().send("GOTOFLAT", pSaveData[#id])>
  [243] pusharglistnoret 1 ...................... <me.getRoomConnection().send("GOTOFLAT", pSaveData[#id])>
  [245] extcall 31 .............................. return me.getRoomConnection().send("GOTOFLAT", pSaveData[#id])
  [247] getparam 1 .............................. <tMarker>
  [249] pusharglist 1 ........................... <tMarker>
  [251] extcall 120 ............................. <voidp(tMarker)>
  [253] jmpifz [267] ............................ if voidp(tMarker) then
  [256] getparam 0 .............................. <me>
  [258] pushcons 100 ............................ <"Missing room marker!!!">
  [260] pushsymb 584 ............................ <#roomConnected>
  [263] pusharglistnoret 3 ...................... <me, "Missing room marker!!!", #roomConnected>
  [265] extcall 72 .............................. error(me, "Missing room marker!!!", #roomConnected)
  [267] getprop 315 ............................. <pSaveData>
  [270] pushsymb 641 ............................ <#marker>
  [273] getparam 1 .............................. <tMarker>
  [275] pusharglistnoret 3 ...................... <pSaveData, #marker, tMarker>
  [277] objcall 59 .............................. pSaveData[#marker] = tMarker
  [279] getparam 0 .............................. <me>
  [281] pushint8 1 .............................. <1>
  [283] pusharglistnoret 2 ...................... <me, 1>
  [285] objcall 552 ............................. me.leaveRoom(1)
  [288] getparam 0 .............................. <me>
  [290] pusharglist 1 ........................... <me>
  [292] objcall 53 .............................. <me.getInterface()>
  [294] getparam 1 .............................. <tMarker>
  [296] pusharglist 2 ........................... <me.getInterface(), tMarker>
  [298] objcall 161 ............................. <me.getInterface().showRoom(tMarker)>
  [300] not ..................................... <not me.getInterface().showRoom(tMarker)>
  [301] jmpifz [316] ............................ if not me.getInterface().showRoom(tMarker) then
  [304] pushsymb 552 ............................ <#leaveRoom>
  [307] pusharglist 1 ........................... <#leaveRoom>
  [309] extcall 310 ............................. <executeMessage(#leaveRoom)>
  [312] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [314] extcall 31 .............................. return executeMessage(#leaveRoom)
  [316] getprop 233 ............................. <pRoomConnID>
  [318] pusharglist 1 ........................... <pRoomConnID>
  [320] extcall 547 ............................. <connectionExists(pRoomConnID)>
  [323] jmpifz [339] ............................ if connectionExists(pRoomConnID) then
  [326] getprop 233 ............................. <pRoomConnID>
  [328] pusharglist 1 ........................... <pRoomConnID>
  [330] extcall 549 ............................. <getConnection(pRoomConnID)>
  [333] pushcons 101 ............................ <"GETROOMAD">
  [335] pusharglistnoret 2 ...................... <getConnection(pRoomConnID), "GETROOMAD">
  [337] objcall 135 ............................. getConnection(pRoomConnID).send("GETROOMAD")
  [339] getprop 315 ............................. <pSaveData>
  [342] pushsymb 641 ............................ <#marker>
  [345] pusharglist 2 ........................... <pSaveData, #marker>
  [347] objcall 34 .............................. <pSaveData[#marker]>
  [349] pushcons 102 ............................ <"Class">
  [351] joinpadstr .............................. <pSaveData[#marker] && "Class">
  [352] pusharglist 1 ........................... <pSaveData[#marker] && "Class">
  [354] extcall 62 .............................. <memberExists(pSaveData[#marker] && "Class")>
  [356] jmpifz [380] ............................ if memberExists(pSaveData[#marker] && "Class") then
  [359] getprop 618 ............................. <pRoomPrgID>
  [362] getprop 315 ............................. <pSaveData>
  [365] pushsymb 641 ............................ <#marker>
  [368] pusharglist 2 ........................... <pSaveData, #marker>
  [370] objcall 34 .............................. <pSaveData[#marker]>
  [372] pushcons 102 ............................ <"Class">
  [374] joinpadstr .............................. <pSaveData[#marker] && "Class">
  [375] pusharglistnoret 2 ...................... <pRoomPrgID, pSaveData[#marker] && "Class">
  [377] extcall 260 ............................. createObject(pRoomPrgID, pSaveData[#marker] && "Class")
  [380] getprop 315 ............................. <pSaveData>
  [383] pushsymb 49 ............................. <#type>
  [385] pusharglist 2 ........................... <pSaveData, #type>
  [387] objcall 34 .............................. <pSaveData[#type]>
  [389] pushsymb 314 ............................ <#private>
  [392] eq ...................................... <pSaveData[#type] = #private>
  [393] jmpifz [425] ............................ if pSaveData[#type] = #private then / else
  [396] pushsymb 705 ............................ <#passive>
  [399] pushzero ................................ <0>
  [400] pushsymb 706 ............................ <#Active>
  [403] pushzero ................................ <0>
  [404] pushsymb 707 ............................ <#users>
  [407] pushzero ................................ <0>
  [408] pushsymb 708 ............................ <#items>
  [411] pushzero ................................ <0>
  [412] pushsymb 709 ............................ <#heightmap>
  [415] pushzero ................................ <0>
  [416] pusharglist 10 .......................... <[#passive: 0, #Active: 0, #users: 0, #items: 0, #heightmap: 0]>
  [418] pushproplist ............................ <[#passive: 0, #Active: 0, #users: 0, #items: 0, #heightmap: 0]>
  [419] setprop 607 ............................. pProcessList = [#passive: 0, #Active: 0, #users: 0, #items: 0, #heightmap: 0]
  [422] jmp [517]
  [425] getprop 315 ............................. <pSaveData>
  [428] pushsymb 49 ............................. <#type>
  [430] pusharglist 2 ........................... <pSaveData, #type>
  [432] objcall 34 .............................. <pSaveData[#type]>
  [434] pushsymb 691 ............................ <#public>
  [437] eq ...................................... <pSaveData[#type] = #public>
  [438] jmpifz [471] ............................ if pSaveData[#type] = #public then / else
  [441] pushsymb 705 ............................ <#passive>
  [444] pushzero ................................ <0>
  [445] pushsymb 706 ............................ <#Active>
  [448] pushzero ................................ <0>
  [449] pushsymb 707 ............................ <#users>
  [452] pushzero ................................ <0>
  [453] pushsymb 708 ............................ <#items>
  [456] pushint8 1 .............................. <1>
  [458] pushsymb 709 ............................ <#heightmap>
  [461] pushzero ................................ <0>
  [462] pusharglist 10 .......................... <[#passive: 0, #Active: 0, #users: 0, #items: 1, #heightmap: 0]>
  [464] pushproplist ............................ <[#passive: 0, #Active: 0, #users: 0, #items: 1, #heightmap: 0]>
  [465] setprop 607 ............................. pProcessList = [#passive: 0, #Active: 0, #users: 0, #items: 1, #heightmap: 0]
  [468] jmp [517]
  [471] getprop 315 ............................. <pSaveData>
  [474] pushsymb 49 ............................. <#type>
  [476] pusharglist 2 ........................... <pSaveData, #type>
  [478] objcall 34 .............................. <pSaveData[#type]>
  [480] pushsymb 710 ............................ <#game>
  [483] eq ...................................... <pSaveData[#type] = #game>
  [484] jmpifz [517] ............................ if pSaveData[#type] = #game then
  [487] pushsymb 705 ............................ <#passive>
  [490] pushint8 1 .............................. <1>
  [492] pushsymb 706 ............................ <#Active>
  [495] pushint8 1 .............................. <1>
  [497] pushsymb 707 ............................ <#users>
  [500] pushint8 1 .............................. <1>
  [502] pushsymb 708 ............................ <#items>
  [505] pushint8 1 .............................. <1>
  [507] pushsymb 709 ............................ <#heightmap>
  [510] pushzero ................................ <0>
  [511] pusharglist 10 .......................... <[#passive: 1, #Active: 1, #users: 1, #items: 1, #heightmap: 0]>
  [513] pushproplist ............................ <[#passive: 1, #Active: 1, #users: 1, #items: 1, #heightmap: 0]>
  [514] setprop 607 ............................. pProcessList = [#passive: 1, #Active: 1, #users: 1, #items: 1, #heightmap: 0]
  [517] pushcons 103 ............................ <"room_data_">
  [519] getprop 605 ............................. <pRoomId>
  [522] joinstr ................................. <"room_data_" & pRoomId>
  [523] pushcons 104 ............................ <"_">
  [525] joinstr ................................. <"room_data_" & pRoomId & "_">
  [526] getprop 315 ............................. <pSaveData>
  [529] pushsymb 641 ............................ <#marker>
  [532] pusharglist 2 ........................... <pSaveData, #marker>
  [534] objcall 34 .............................. <pSaveData[#marker]>
  [536] joinstr ................................. <"room_data_" & pRoomId & "_" & pSaveData[#marker]>
  [537] setprop 608 ............................. pCacheKey = "room_data_" & pRoomId & "_" & pSaveData[#marker]
  [540] pushsymb 650 ............................ <#cache>
  [543] pusharglist 1 ........................... <#cache>
  [545] extcall 130 ............................. <getObject(#cache)>
  [547] getprop 608 ............................. <pCacheKey>
  [550] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [552] objcall 548 ............................. <getObject(#cache).exists(pCacheKey)>
  [555] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [556] jmpifz [577] ............................ if not getObject(#cache).exists(pCacheKey) then
  [559] pushsymb 650 ............................ <#cache>
  [562] pusharglist 1 ........................... <#cache>
  [564] extcall 130 ............................. <getObject(#cache)>
  [566] getprop 608 ............................. <pCacheKey>
  [569] pusharglist 0 ........................... <[:]>
  [571] pushproplist ............................ <[:]>
  [572] pusharglistnoret 3 ...................... <getObject(#cache), pCacheKey, [:]>
  [574] objcall 637 ............................. getObject(#cache).set(pCacheKey, [:])
  [577] pushsymb 650 ............................ <#cache>
  [580] pusharglist 1 ........................... <#cache>
  [582] extcall 130 ............................. <getObject(#cache)>
  [584] getprop 608 ............................. <pCacheKey>
  [587] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [589] objcall 133 ............................. <getObject(#cache).get(pCacheKey)>
  [591] setlocal 3 .............................. tCache = getObject(#cache).get(pCacheKey)
  [593] getlocal 3 .............................. <tCache>
  [595] pushsymb 709 ............................ <#heightmap>
  [598] pusharglist 2 ........................... <tCache, #heightmap>
  [600] objcall 34 .............................. <tCache[#heightmap]>
  [602] pusharglist 1 ........................... <tCache[#heightmap]>
  [604] extcall 120 ............................. <voidp(tCache[#heightmap])>
  [606] getprop 607 ............................. <pProcessList>
  [609] pushsymb 709 ............................ <#heightmap>
  [612] pusharglist 2 ........................... <pProcessList, #heightmap>
  [614] objcall 34 .............................. <pProcessList[#heightmap]>
  [616] not ..................................... <not pProcessList[#heightmap]>
  [617] and ..................................... <voidp(tCache[#heightmap]) and not pProcessList[#heightmap]>
  [618] jmpifz [647] ............................ if voidp(tCache[#heightmap]) and not pProcessList[#heightmap] then / else
  [621] getlocal 3 .............................. <tCache>
  [623] pushsymb 709 ............................ <#heightmap>
  [626] pushcons 2 .............................. <EMPTY>
  [628] pusharglistnoret 3 ...................... <tCache, #heightmap, EMPTY>
  [630] objcall 59 .............................. tCache[#heightmap] = EMPTY
  [632] getparam 0 .............................. <me>
  [634] pusharglist 1 ........................... <me>
  [636] objcall 134 ............................. <me.getRoomConnection()>
  [638] pushcons 105 ............................ <"G_HMAP">
  [640] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_HMAP">
  [642] objcall 135 ............................. me.getRoomConnection().send("G_HMAP")
  [644] jmp [663]
  [647] getparam 0 .............................. <me>
  [649] getlocal 3 .............................. <tCache>
  [651] pushsymb 709 ............................ <#heightmap>
  [654] pusharglist 2 ........................... <tCache, #heightmap>
  [656] objcall 34 .............................. <tCache[#heightmap]>
  [658] pusharglistnoret 2 ...................... <me, tCache[#heightmap]>
  [660] objcall 586 ............................. me.validateHeightMap(tCache[#heightmap])
  [663] getparam 0 .............................. <me>
  [665] pusharglist 1 ........................... <me>
  [667] objcall 574 ............................. <me.getShadowManager()>
  [670] setlocal 4 .............................. tShadowManager = me.getShadowManager()
  [672] getlocal 4 .............................. <tShadowManager>
  [674] pushcons 106 ............................ <"roomShadow">
  [676] pusharglistnoret 2 ...................... <tShadowManager, "roomShadow">
  [678] objcall 2 ............................... tShadowManager.define("roomShadow")
  [680] getlocal 3 .............................. <tCache>
  [682] pushsymb 707 ............................ <#users>
  [685] pusharglist 0 ........................... <[]>
  [687] pushlist ................................ <[]>
  [688] pusharglistnoret 3 ...................... <tCache, #users, []>
  [690] objcall 59 .............................. tCache[#users] = []
  [692] getprop 607 ............................. <pProcessList>
  [695] pushsymb 707 ............................ <#users>
  [698] pusharglist 2 ........................... <pProcessList, #users>
  [700] objcall 34 .............................. <pProcessList[#users]>
  [702] not ..................................... <not pProcessList[#users]>
  [703] jmpifz [718] ............................ if not pProcessList[#users] then
  [706] getparam 0 .............................. <me>
  [708] pusharglist 1 ........................... <me>
  [710] objcall 134 ............................. <me.getRoomConnection()>
  [712] pushcons 107 ............................ <"G_USRS">
  [714] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_USRS">
  [716] objcall 135 ............................. me.getRoomConnection().send("G_USRS")
  [718] getlocal 3 .............................. <tCache>
  [720] pushsymb 705 ............................ <#passive>
  [723] pusharglist 2 ........................... <tCache, #passive>
  [725] objcall 34 .............................. <tCache[#passive]>
  [727] pusharglist 1 ........................... <tCache[#passive]>
  [729] extcall 120 ............................. <voidp(tCache[#passive])>
  [731] getprop 607 ............................. <pProcessList>
  [734] pushsymb 705 ............................ <#passive>
  [737] pusharglist 2 ........................... <pProcessList, #passive>
  [739] objcall 34 .............................. <pProcessList[#passive]>
  [741] not ..................................... <not pProcessList[#passive]>
  [742] and ..................................... <voidp(tCache[#passive]) and not pProcessList[#passive]>
  [743] jmpifz [773] ............................ if voidp(tCache[#passive]) and not pProcessList[#passive] then / else
  [746] getlocal 3 .............................. <tCache>
  [748] pushsymb 705 ............................ <#passive>
  [751] pusharglist 0 ........................... <[]>
  [753] pushlist ................................ <[]>
  [754] pusharglistnoret 3 ...................... <tCache, #passive, []>
  [756] objcall 59 .............................. tCache[#passive] = []
  [758] getparam 0 .............................. <me>
  [760] pusharglist 1 ........................... <me>
  [762] objcall 134 ............................. <me.getRoomConnection()>
  [764] pushcons 108 ............................ <"G_OBJS">
  [766] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_OBJS">
  [768] objcall 135 ............................. me.getRoomConnection().send("G_OBJS")
  [770] jmp [809]
  [773] getlocal 3 .............................. <tCache>
  [775] pushsymb 705 ............................ <#passive>
  [778] pusharglist 2 ........................... <tCache, #passive>
  [780] objcall 34 .............................. <tCache[#passive]>
  [782] pusharglist 1 ........................... <tCache[#passive]>
  [784] extcall 120 ............................. <voidp(tCache[#passive])>
  [786] jmpifz [801] ............................ if voidp(tCache[#passive]) then
  [789] getlocal 3 .............................. <tCache>
  [791] pushsymb 705 ............................ <#passive>
  [794] pusharglist 0 ........................... <[]>
  [796] pushlist ................................ <[]>
  [797] pusharglistnoret 3 ...................... <tCache, #passive, []>
  [799] objcall 59 .............................. tCache[#passive] = []
  [801] getparam 0 .............................. <me>
  [803] pushzero ................................ <0>
  [804] pusharglistnoret 2 ...................... <me, 0>
  [806] objcall 590 ............................. me.validatePassiveObjects(0)
  [809] getlocal 3 .............................. <tCache>
  [811] pushsymb 706 ............................ <#Active>
  [814] pusharglist 2 ........................... <tCache, #Active>
  [816] objcall 34 .............................. <tCache[#Active]>
  [818] pusharglist 1 ........................... <tCache[#Active]>
  [820] extcall 120 ............................. <voidp(tCache[#Active])>
  [822] getprop 607 ............................. <pProcessList>
  [825] pushsymb 706 ............................ <#Active>
  [828] pusharglist 2 ........................... <pProcessList, #Active>
  [830] objcall 34 .............................. <pProcessList[#Active]>
  [832] not ..................................... <not pProcessList[#Active]>
  [833] and ..................................... <voidp(tCache[#Active]) and not pProcessList[#Active]>
  [834] jmpifz [852] ............................ if voidp(tCache[#Active]) and not pProcessList[#Active] then / else
  [837] getlocal 3 .............................. <tCache>
  [839] pushsymb 706 ............................ <#Active>
  [842] pusharglist 0 ........................... <[]>
  [844] pushlist ................................ <[]>
  [845] pusharglistnoret 3 ...................... <tCache, #Active, []>
  [847] objcall 59 .............................. tCache[#Active] = []
  [849] jmp [888]
  [852] getlocal 3 .............................. <tCache>
  [854] pushsymb 706 ............................ <#Active>
  [857] pusharglist 2 ........................... <tCache, #Active>
  [859] objcall 34 .............................. <tCache[#Active]>
  [861] pusharglist 1 ........................... <tCache[#Active]>
  [863] extcall 120 ............................. <voidp(tCache[#Active])>
  [865] jmpifz [880] ............................ if voidp(tCache[#Active]) then
  [868] getlocal 3 .............................. <tCache>
  [870] pushsymb 706 ............................ <#Active>
  [873] pusharglist 0 ........................... <[]>
  [875] pushlist ................................ <[]>
  [876] pusharglistnoret 3 ...................... <tCache, #Active, []>
  [878] objcall 59 .............................. tCache[#Active] = []
  [880] getparam 0 .............................. <me>
  [882] pushzero ................................ <0>
  [883] pusharglistnoret 2 ...................... <me, 0>
  [885] objcall 589 ............................. me.validateActiveObjects(0)
  [888] getlocal 3 .............................. <tCache>
  [890] pushsymb 708 ............................ <#items>
  [893] pusharglist 2 ........................... <tCache, #items>
  [895] objcall 34 .............................. <tCache[#items]>
  [897] pusharglist 1 ........................... <tCache[#items]>
  [899] extcall 120 ............................. <voidp(tCache[#items])>
  [901] getprop 607 ............................. <pProcessList>
  [904] pushsymb 708 ............................ <#items>
  [907] pusharglist 2 ........................... <pProcessList, #items>
  [909] objcall 34 .............................. <pProcessList[#items]>
  [911] not ..................................... <not pProcessList[#items]>
  [912] and ..................................... <voidp(tCache[#items]) and not pProcessList[#items]>
  [913] jmpifz [943] ............................ if voidp(tCache[#items]) and not pProcessList[#items] then / else
  [916] getlocal 3 .............................. <tCache>
  [918] pushsymb 708 ............................ <#items>
  [921] pusharglist 0 ........................... <[]>
  [923] pushlist ................................ <[]>
  [924] pusharglistnoret 3 ...................... <tCache, #items, []>
  [926] objcall 59 .............................. tCache[#items] = []
  [928] getparam 0 .............................. <me>
  [930] pusharglist 1 ........................... <me>
  [932] objcall 134 ............................. <me.getRoomConnection()>
  [934] pushcons 109 ............................ <"G_ITEMS">
  [936] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_ITEMS">
  [938] objcall 135 ............................. me.getRoomConnection().send("G_ITEMS")
  [940] jmp [979]
  [943] getlocal 3 .............................. <tCache>
  [945] pushsymb 708 ............................ <#items>
  [948] pusharglist 2 ........................... <tCache, #items>
  [950] objcall 34 .............................. <tCache[#items]>
  [952] pusharglist 1 ........................... <tCache[#items]>
  [954] extcall 120 ............................. <voidp(tCache[#items])>
  [956] jmpifz [971] ............................ if voidp(tCache[#items]) then
  [959] getlocal 3 .............................. <tCache>
  [961] pushsymb 708 ............................ <#items>
  [964] pusharglist 0 ........................... <[]>
  [966] pushlist ................................ <[]>
  [967] pusharglistnoret 3 ...................... <tCache, #items, []>
  [969] objcall 59 .............................. tCache[#items] = []
  [971] getparam 0 .............................. <me>
  [973] pushzero ................................ <0>
  [974] pusharglistnoret 2 ...................... <me, 0>
  [976] objcall 591 ............................. me.validateItemObjects(0)
  [979] getprop 619 ............................. <pRoomPollerID>
  [982] pushint16 1000 .......................... <1000>
  [985] pushsymb 592 ............................ <#pollRoomMessages>
  [988] getparam 0 .............................. <me>
  [990] pusharglist 1 ........................... <me>
  [992] objcall 75 .............................. <me.getID()>
  [994] pusharglist 0 ........................... <>
  [996] extcall 30 .............................. <VOID>
  [998] pushzero ................................ <0>
  [999] pusharglistnoret 6 ...................... <pRoomPollerID, 1000, #pollRoomMessages, me.getID(), VOID, 0>
  [1001] extcall 477 ............................ createTimeout(pRoomPollerID, 1000, #pollRoomMessages, me.getID(), VOID, 0)
  [1004] getparam 0 ............................. <me>
  [1006] pusharglistnoret 1 ..................... <me>
  [1008] objcall 602 ............................ me.executeEnterRoomAlert()
  [1011] pushint8 1 ............................. <1>
  [1013] pusharglistnoret 1 ..................... <1>
  [1015] extcall 31 ............................. return 1
  [1017] ret
end

on roomDisconnected me
  [  0] pushzero ................................ <0>
  [  1] setprop 629 ............................. pPrvRoomsReady = 0
  [  4] getparam 0 .............................. <me>
  [  6] pusharglistnoret 1 ...................... <me>
  [  8] objcall 552 ............................. me.leaveRoom()
  [ 11] pushsymb 552 ............................ <#leaveRoom>
  [ 14] pusharglist 1 ........................... <#leaveRoom>
  [ 16] extcall 310 ............................. <executeMessage(#leaveRoom)>
  [ 19] pusharglistnoret 1 ...................... <executeMessage(#leaveRoom)>
  [ 21] extcall 31 .............................. return executeMessage(#leaveRoom)
  [ 23] ret
end

on validateHeightMap me, tdata
  [  0] pushsymb 650 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 130 ............................. <getObject(#cache)>
  [  7] getprop 608 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 548 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 586 ............................ <#validateHeightMap>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validateHeightMap>
  [ 28] extcall 72 .............................. <error(me, "Data not expected yet!", #validateHeightMap)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validateHeightMap)>
  [ 32] extcall 31 .............................. return error(me, "Data not expected yet!", #validateHeightMap)
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglist 1 ........................... <me>
  [ 38] objcall 53 .............................. <me.getInterface()>
  [ 40] pusharglist 1 ........................... <me.getInterface()>
  [ 42] objcall 54 .............................. <me.getInterface().getGeometry()>
  [ 44] getparam 1 .............................. <tdata>
  [ 46] pusharglistnoret 2 ...................... <me.getInterface().getGeometry(), tdata>
  [ 48] objcall 715 ............................. me.getInterface().getGeometry().loadHeightMap(tdata)
  [ 51] getparam 0 .............................. <me>
  [ 53] getparam 1 .............................. <tdata>
  [ 55] setobjprop 716 .......................... me.pHeightMapData = tdata
  [ 58] getprop 606 ............................. <pActiveFlag>
  [ 61] not ..................................... <not pActiveFlag>
  [ 62] jmpifz [101] ............................ if not pActiveFlag then
  [ 65] pushsymb 650 ............................ <#cache>
  [ 68] pusharglist 1 ........................... <#cache>
  [ 70] extcall 130 ............................. <getObject(#cache)>
  [ 72] getprop 608 ............................. <pCacheKey>
  [ 75] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 77] objcall 133 ............................. <getObject(#cache).get(pCacheKey)>
  [ 79] pushsymb 709 ............................ <#heightmap>
  [ 82] getparam 1 .............................. <tdata>
  [ 84] pusharglistnoret 3 ...................... <getObject(#cache).get(pCacheKey), #heightmap, tdata>
  [ 86] objcall 717 ............................. getObject(#cache).get(pCacheKey).setaProp(#heightmap, tdata)
  [ 89] getparam 0 .............................. <me>
  [ 91] pushsymb 709 ............................ <#heightmap>
  [ 94] pushint8 1 .............................. <1>
  [ 96] pusharglistnoret 3 ...................... <me, #heightmap, 1>
  [ 98] objcall 593 ............................. me.updateProcess(#heightmap, 1)
  [101] pushzero ................................ <0>
  [102] pusharglistnoret 1 ...................... <0>
  [104] extcall 31 .............................. return 0
  [106] ret
end

on updateHeightMap me, tdata
  [  0] getprop 716 ............................. <pHeightMapData>
  [  3] setlocal 0 .............................. tHeightMapData = pHeightMapData
  [  5] getlocal 0 .............................. <tHeightMapData>
  [  7] pusharglist 1 ........................... <tHeightMapData>
  [  9] extcall 120 ............................. <voidp(tHeightMapData)>
  [ 11] jmpifz [ 29] ............................ if voidp(tHeightMapData) then / else
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 111 ............................ <"Height map update data sent but heightmap data not cached!">
  [ 18] pusharglist 2 ........................... <me, "Height map update data sent but heightmap data not cached!">
  [ 20] extcall 72 .............................. <error(me, "Height map update data sent but heightmap data not cached!")>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Height map update data sent but heightmap data not cached!")>
  [ 24] extcall 31 .............................. return error(me, "Height map update data sent but heightmap data not cached!")
  [ 26] jmp [148]
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 1 .............................. a = 1
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 2
  [ 37] getlocal 2
  [ 39] getparam 1 .............................. <tdata>
  [ 41] getobjprop 67 ........................... <tdata.length>
  [ 43] lteq
  [ 44] jmpifz [136] ............................ repeat with i = 1 to tdata.length
  [ 47] getparam 1 .............................. <tdata>
  [ 49] pushsymb 66 ............................. <#char>
  [ 51] getlocal 2 .............................. <i>
  [ 53] pusharglist 3 ........................... <tdata, #char, i>
  [ 55] objcall 68 .............................. <tdata.char[i]>
  [ 57] pushcons 112 ............................ <"!">
  [ 59] eq ...................................... <tdata.char[i] = "!">
  [ 60] jmpifz [ 93] ............................ if tdata.char[i] = "!" then
  [ 63] getlocal 2 .............................. <i>
  [ 65] pushint8 1 .............................. <1>
  [ 67] add ..................................... <i + 1>
  [ 68] setlocal 2 .............................. i = i + 1
  [ 70] getlocal 1 .............................. <a>
  [ 72] getparam 1 .............................. <tdata>
  [ 74] pushsymb 66 ............................. <#char>
  [ 76] getlocal 2 .............................. <i>
  [ 78] pusharglist 3 ........................... <tdata, #char, i>
  [ 80] objcall 68 .............................. <tdata.char[i]>
  [ 82] pusharglist 1 ........................... <tdata.char[i]>
  [ 84] extcall 718 ............................. <charToNum(tdata.char[i])>
  [ 87] add ..................................... <a + charToNum(tdata.char[i])>
  [ 88] setlocal 1 .............................. a = a + charToNum(tdata.char[i])
  [ 90] jmp [127] ............................... next repeat
  [ 93] getparam 1 .............................. <tdata>
  [ 95] pushsymb 66 ............................. <#char>
  [ 97] getlocal 2 .............................. <i>
  [ 99] pusharglist 3 ........................... <tdata, #char, i>
  [101] objcall 68 .............................. <tdata.char[i]>
  [103] pushzero ................................ <0>
  [104] pushchunkvarref 5 ....................... <tHeightMapData>
  [106] pushsymb 66 ............................. <#char>
  [108] getlocal 1 .............................. <a>
  [110] pusharglist 3 ........................... <tHeightMapData, #char, a>
  [112] objcall 101 ............................. <tHeightMapData.char[a]>
  [114] swap
  [115] pusharglistnoret 2 ...................... <tHeightMapData.char[a], tdata.char[i]>
  [117] objcall 719 ............................. put tdata.char[i] into tHeightMapData.char[a]
  [120] getlocal 1 .............................. <a>
  [122] pushint8 1 .............................. <1>
  [124] add ..................................... <a + 1>
  [125] setlocal 1 .............................. a = a + 1
  [127] pushint8 1
  [129] getlocal 2
  [131] add
  [132] setlocal 2
  [134] endrepeat [ 37]
  [136] getparam 0 .............................. <me>
  [138] getlocal 0 .............................. <tHeightMapData>
  [140] pusharglist 2 ........................... <me, tHeightMapData>
  [142] localcall 49 ............................ <validateHeightMap(me, tHeightMapData)>
  [144] pusharglistnoret 1 ...................... <validateHeightMap(me, tHeightMapData)>
  [146] extcall 31 .............................. return validateHeightMap(me, tHeightMapData)
  [148] ret
end

on validateUserObjects me, tdata
  [  0] pushsymb 650 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 130 ............................. <getObject(#cache)>
  [  7] getprop 608 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 548 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 588 ............................ <#validateUserObjects>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validateUserObjects>
  [ 28] extcall 72 .............................. <error(me, "Data not expected yet!", #validateUserObjects)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validateUserObjects)>
  [ 32] extcall 31 .............................. return error(me, "Data not expected yet!", #validateUserObjects)
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <tdata <> 0>
  [ 38] jmpifz [ 69] ............................ if tdata <> 0 then
  [ 41] pushsymb 650 ............................ <#cache>
  [ 44] pusharglist 1 ........................... <#cache>
  [ 46] extcall 130 ............................. <getObject(#cache)>
  [ 48] getprop 608 ............................. <pCacheKey>
  [ 51] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 53] objcall 133 ............................. <getObject(#cache).get(pCacheKey)>
  [ 55] pushsymb 707 ............................ <#users>
  [ 58] pusharglist 2 ........................... <getObject(#cache).get(pCacheKey), #users>
  [ 60] objcall 339 ............................. <getObject(#cache).get(pCacheKey).getaProp(#users)>
  [ 63] getparam 1 .............................. <tdata>
  [ 65] pusharglistnoret 2 ...................... <getObject(#cache).get(pCacheKey).getaProp(#users), tdata>
  [ 67] objcall 88 .............................. getObject(#cache).get(pCacheKey).getaProp(#users).add(tdata)
  [ 69] getprop 606 ............................. <pActiveFlag>
  [ 72] getparam 1 .............................. <tdata>
  [ 74] pushzero ................................ <0>
  [ 75] nteq .................................... <tdata <> 0>
  [ 76] and ..................................... <pActiveFlag and (tdata <> 0)>
  [ 77] jmpifz [ 92] ............................ if pActiveFlag and (tdata <> 0) then / else
  [ 80] getparam 0 .............................. <me>
  [ 82] getparam 1 .............................. <tdata>
  [ 84] pusharglistnoret 2 ...................... <me, tdata>
  [ 86] objcall 563 ............................. me.createUserObject(tdata)
  [ 89] jmp [104]
  [ 92] getparam 0 .............................. <me>
  [ 94] pushsymb 707 ............................ <#users>
  [ 97] pushint8 1 .............................. <1>
  [ 99] pusharglistnoret 3 ...................... <me, #users, 1>
  [101] objcall 593 ............................. me.updateProcess(#users, 1)
  [104] pushint8 1 .............................. <1>
  [106] pusharglistnoret 1 ...................... <1>
  [108] extcall 31 .............................. return 1
  [110] ret
end

on validateActiveObjects me, tdata
  [  0] pushsymb 650 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 130 ............................. <getObject(#cache)>
  [  7] getprop 608 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 548 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 589 ............................ <#validateActiveObjects>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validateActiveObjects>
  [ 28] extcall 72 .............................. <error(me, "Data not expected yet!", #validateActiveObjects)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validateActiveObjects)>
  [ 32] extcall 31 .............................. return error(me, "Data not expected yet!", #validateActiveObjects)
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <tdata <> 0>
  [ 38] jmpifz [ 69] ............................ if tdata <> 0 then
  [ 41] pushsymb 650 ............................ <#cache>
  [ 44] pusharglist 1 ........................... <#cache>
  [ 46] extcall 130 ............................. <getObject(#cache)>
  [ 48] getprop 608 ............................. <pCacheKey>
  [ 51] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 53] objcall 133 ............................. <getObject(#cache).get(pCacheKey)>
  [ 55] pushsymb 706 ............................ <#Active>
  [ 58] pusharglist 2 ........................... <getObject(#cache).get(pCacheKey), #Active>
  [ 60] objcall 339 ............................. <getObject(#cache).get(pCacheKey).getaProp(#Active)>
  [ 63] getparam 1 .............................. <tdata>
  [ 65] pusharglistnoret 2 ...................... <getObject(#cache).get(pCacheKey).getaProp(#Active), tdata>
  [ 67] objcall 88 .............................. getObject(#cache).get(pCacheKey).getaProp(#Active).add(tdata)
  [ 69] getprop 606 ............................. <pActiveFlag>
  [ 72] getparam 1 .............................. <tdata>
  [ 74] pushzero ................................ <0>
  [ 75] nteq .................................... <tdata <> 0>
  [ 76] and ..................................... <pActiveFlag and (tdata <> 0)>
  [ 77] jmpifz [ 92] ............................ if pActiveFlag and (tdata <> 0) then / else
  [ 80] getparam 0 .............................. <me>
  [ 82] getparam 1 .............................. <tdata>
  [ 84] pusharglistnoret 2 ...................... <me, tdata>
  [ 86] objcall 565 ............................. me.createActiveObject(tdata)
  [ 89] jmp [104]
  [ 92] getparam 0 .............................. <me>
  [ 94] pushsymb 706 ............................ <#Active>
  [ 97] pushint8 1 .............................. <1>
  [ 99] pusharglistnoret 3 ...................... <me, #Active, 1>
  [101] objcall 593 ............................. me.updateProcess(#Active, 1)
  [104] pushint8 1 .............................. <1>
  [106] pusharglistnoret 1 ...................... <1>
  [108] extcall 31 .............................. return 1
  [110] ret
end

on validatePassiveObjects me, tdata
  [  0] pushsymb 650 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 130 ............................. <getObject(#cache)>
  [  7] getprop 608 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 548 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 590 ............................ <#validatePassiveObjects>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validatePassiveObjects>
  [ 28] extcall 72 .............................. <error(me, "Data not expected yet!", #validatePassiveObjects)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validatePassiveObjects)>
  [ 32] extcall 31 .............................. return error(me, "Data not expected yet!", #validatePassiveObjects)
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <tdata <> 0>
  [ 38] jmpifz [ 69] ............................ if tdata <> 0 then
  [ 41] pushsymb 650 ............................ <#cache>
  [ 44] pusharglist 1 ........................... <#cache>
  [ 46] extcall 130 ............................. <getObject(#cache)>
  [ 48] getprop 608 ............................. <pCacheKey>
  [ 51] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 53] objcall 133 ............................. <getObject(#cache).get(pCacheKey)>
  [ 55] pushsymb 705 ............................ <#passive>
  [ 58] pusharglist 2 ........................... <getObject(#cache).get(pCacheKey), #passive>
  [ 60] objcall 339 ............................. <getObject(#cache).get(pCacheKey).getaProp(#passive)>
  [ 63] getparam 1 .............................. <tdata>
  [ 65] pusharglistnoret 2 ...................... <getObject(#cache).get(pCacheKey).getaProp(#passive), tdata>
  [ 67] objcall 88 .............................. getObject(#cache).get(pCacheKey).getaProp(#passive).add(tdata)
  [ 69] getprop 606 ............................. <pActiveFlag>
  [ 72] getparam 1 .............................. <tdata>
  [ 74] pushzero ................................ <0>
  [ 75] nteq .................................... <tdata <> 0>
  [ 76] and ..................................... <pActiveFlag and (tdata <> 0)>
  [ 77] jmpifz [ 92] ............................ if pActiveFlag and (tdata <> 0) then / else
  [ 80] getparam 0 .............................. <me>
  [ 82] getparam 1 .............................. <tdata>
  [ 84] pusharglistnoret 2 ...................... <me, tdata>
  [ 86] objcall 566 ............................. me.createPassiveObject(tdata)
  [ 89] jmp [104]
  [ 92] getparam 0 .............................. <me>
  [ 94] pushsymb 705 ............................ <#passive>
  [ 97] pushint8 1 .............................. <1>
  [ 99] pusharglistnoret 3 ...................... <me, #passive, 1>
  [101] objcall 593 ............................. me.updateProcess(#passive, 1)
  [104] pushint8 1 .............................. <1>
  [106] pusharglistnoret 1 ...................... <1>
  [108] extcall 31 .............................. return 1
  [110] ret
end

on validateItemObjects me, tdata
  [  0] pushsymb 650 ............................ <#cache>
  [  3] pusharglist 1 ........................... <#cache>
  [  5] extcall 130 ............................. <getObject(#cache)>
  [  7] getprop 608 ............................. <pCacheKey>
  [ 10] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 12] objcall 548 ............................. <getObject(#cache).exists(pCacheKey)>
  [ 15] not ..................................... <not getObject(#cache).exists(pCacheKey)>
  [ 16] jmpifz [ 34] ............................ if not getObject(#cache).exists(pCacheKey) then
  [ 19] getparam 0 .............................. <me>
  [ 21] pushcons 110 ............................ <"Data not expected yet!">
  [ 23] pushsymb 591 ............................ <#validateItemObjects>
  [ 26] pusharglist 3 ........................... <me, "Data not expected yet!", #validateItemObjects>
  [ 28] extcall 72 .............................. <error(me, "Data not expected yet!", #validateItemObjects)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Data not expected yet!", #validateItemObjects)>
  [ 32] extcall 31 .............................. return error(me, "Data not expected yet!", #validateItemObjects)
  [ 34] getparam 1 .............................. <tdata>
  [ 36] pushzero ................................ <0>
  [ 37] nteq .................................... <tdata <> 0>
  [ 38] jmpifz [ 69] ............................ if tdata <> 0 then
  [ 41] pushsymb 650 ............................ <#cache>
  [ 44] pusharglist 1 ........................... <#cache>
  [ 46] extcall 130 ............................. <getObject(#cache)>
  [ 48] getprop 608 ............................. <pCacheKey>
  [ 51] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [ 53] objcall 133 ............................. <getObject(#cache).get(pCacheKey)>
  [ 55] pushsymb 708 ............................ <#items>
  [ 58] pusharglist 2 ........................... <getObject(#cache).get(pCacheKey), #items>
  [ 60] objcall 339 ............................. <getObject(#cache).get(pCacheKey).getaProp(#items)>
  [ 63] getparam 1 .............................. <tdata>
  [ 65] pusharglistnoret 2 ...................... <getObject(#cache).get(pCacheKey).getaProp(#items), tdata>
  [ 67] objcall 88 .............................. getObject(#cache).get(pCacheKey).getaProp(#items).add(tdata)
  [ 69] getprop 606 ............................. <pActiveFlag>
  [ 72] getparam 1 .............................. <tdata>
  [ 74] pushzero ................................ <0>
  [ 75] nteq .................................... <tdata <> 0>
  [ 76] and ..................................... <pActiveFlag and (tdata <> 0)>
  [ 77] jmpifz [ 92] ............................ if pActiveFlag and (tdata <> 0) then / else
  [ 80] getparam 0 .............................. <me>
  [ 82] getparam 1 .............................. <tdata>
  [ 84] pusharglistnoret 2 ...................... <me, tdata>
  [ 86] objcall 569 ............................. me.createItemObject(tdata)
  [ 89] jmp [104]
  [ 92] getparam 0 .............................. <me>
  [ 94] pushsymb 708 ............................ <#items>
  [ 97] pushint8 1 .............................. <1>
  [ 99] pusharglistnoret 3 ...................... <me, #items, 1>
  [101] objcall 593 ............................. me.updateProcess(#items, 1)
  [104] pushint8 1 .............................. <1>
  [106] pusharglistnoret 1 ...................... <1>
  [108] extcall 31 .............................. return 1
  [110] ret
end

on pollRoomMessages me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 134 ............................. <me.getRoomConnection()>
  [  6] not ..................................... <not me.getRoomConnection()>
  [  7] getprop 619 ............................. <pRoomPollerID>
  [ 10] pusharglist 1 ........................... <pRoomPollerID>
  [ 12] extcall 324 ............................. <timeoutExists(pRoomPollerID)>
  [ 15] and ..................................... <not me.getRoomConnection() and timeoutExists(pRoomPollerID)>
  [ 16] jmpifz [ 31] ............................ if not me.getRoomConnection() and timeoutExists(pRoomPollerID) then
  [ 19] getprop 619 ............................. <pRoomPollerID>
  [ 22] pusharglist 1 ........................... <pRoomPollerID>
  [ 24] extcall 326 ............................. <removeTimeout(pRoomPollerID)>
  [ 27] pusharglistnoret 1 ...................... <removeTimeout(pRoomPollerID)>
  [ 29] extcall 31 .............................. return removeTimeout(pRoomPollerID)
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 134 ............................. <me.getRoomConnection()>
  [ 37] pusharglist 1 ........................... <me.getRoomConnection()>
  [ 39] objcall 722 ............................. <me.getRoomConnection().getWaitingMessagesCount()>
  [ 42] pushzero ................................ <0>
  [ 43] gt ...................................... <me.getRoomConnection().getWaitingMessagesCount() > 0>
  [ 44] jmpifz [ 58] ............................ if me.getRoomConnection().getWaitingMessagesCount() > 0 then
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglist 1 ........................... <me>
  [ 51] objcall 134 ............................. <me.getRoomConnection()>
  [ 53] pusharglistnoret 1 ...................... <me.getRoomConnection()>
  [ 55] objcall 723 ............................. me.getRoomConnection().processWaitingMessages()
  [ 58] ret
end

on updateProcess me, tKey, tValue
  [  0] getprop 606 ............................. <pActiveFlag>
  [  3] jmpifz [ 21] ............................ if pActiveFlag then
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 113 ............................ <"Attempted to remake room!">
  [ 10] pushsymb 593 ............................ <#updateProcess>
  [ 13] pusharglist 3 ........................... <me, "Attempted to remake room!", #updateProcess>
  [ 15] extcall 72 .............................. <error(me, "Attempted to remake room!", #updateProcess)>
  [ 17] pusharglistnoret 1 ...................... <error(me, "Attempted to remake room!", #updateProcess)>
  [ 19] extcall 31 .............................. return error(me, "Attempted to remake room!", #updateProcess)
  [ 21] getprop 607 ............................. <pProcessList>
  [ 24] getparam 1 .............................. <tKey>
  [ 26] pusharglist 2 ........................... <pProcessList, tKey>
  [ 28] objcall 34 .............................. <pProcessList[tKey]>
  [ 30] pushzero ................................ <0>
  [ 31] eq ...................................... <pProcessList[tKey] = 0>
  [ 32] jmpifz [ 46] ............................ if pProcessList[tKey] = 0 then
  [ 35] getprop 607 ............................. <pProcessList>
  [ 38] getparam 1 .............................. <tKey>
  [ 40] getparam 2 .............................. <tValue>
  [ 42] pusharglistnoret 3 ...................... <pProcessList, tKey, tValue>
  [ 44] objcall 59 .............................. pProcessList[tKey] = tValue
  [ 46] getprop 607 ............................. <pProcessList>
  [ 49] peek 0
  [ 51] pusharglist 1
  [ 53] extcall 33
  [ 55] pushint8 1
  [ 57] peek 0
  [ 59] peek 2
  [ 61] lteq
  [ 62] jmpifz [ 89] ............................ repeat with tProcess in pProcessList
  [ 65] peek 2
  [ 67] peek 1
  [ 69] pusharglist 2
  [ 71] extcall 34
  [ 73] setlocal 0
  [ 75] getlocal 0 .............................. <tProcess>
  [ 77] not ..................................... <not tProcess>
  [ 78] jmpifz [ 84] ............................ if not tProcess then
  [ 81] jmp [ 89] ............................... exit repeat
  [ 84] pushint8 1
  [ 86] add
  [ 87] endrepeat [ 57]
  [ 89] pop 3
  [ 91] getlocal 0 .............................. <tProcess>
  [ 93] pushint8 1 .............................. <1>
  [ 95] eq ...................................... <tProcess = 1>
  [ 96] jmpifz [530] ............................ if tProcess = 1 then
  [ 99] getprop 619 ............................. <pRoomPollerID>
  [102] pusharglist 1 ........................... <pRoomPollerID>
  [104] extcall 324 ............................. <timeoutExists(pRoomPollerID)>
  [107] jmpifz [118] ............................ if timeoutExists(pRoomPollerID) then
  [110] getprop 619 ............................. <pRoomPollerID>
  [113] pusharglistnoret 1 ...................... <pRoomPollerID>
  [115] extcall 326 ............................. removeTimeout(pRoomPollerID)
  [118] pushsymb 650 ............................ <#cache>
  [121] pusharglist 1 ........................... <#cache>
  [123] extcall 130 ............................. <getObject(#cache)>
  [125] getprop 608 ............................. <pCacheKey>
  [128] pusharglist 2 ........................... <getObject(#cache), pCacheKey>
  [130] objcall 133 ............................. <getObject(#cache).get(pCacheKey)>
  [132] setlocal 1 .............................. tCache = getObject(#cache).get(pCacheKey)
  [134] getlocal 1 .............................. <tCache>
  [136] pushsymb 705 ............................ <#passive>
  [139] pusharglist 2 ........................... <tCache, #passive>
  [141] objcall 34 .............................. <tCache[#passive]>
  [143] peek 0
  [145] pusharglist 1
  [147] extcall 33
  [149] pushint8 1
  [151] peek 0
  [153] peek 2
  [155] lteq
  [156] jmpifz [183] ............................ repeat with tdata in tCache[#passive]
  [159] peek 2
  [161] peek 1
  [163] pusharglist 2
  [165] extcall 34
  [167] setlocal 2
  [169] getparam 0 .............................. <me>
  [171] getlocal 2 .............................. <tdata>
  [173] pusharglistnoret 2 ...................... <me, tdata>
  [175] objcall 566 ............................. me.createPassiveObject(tdata)
  [178] pushint8 1
  [180] add
  [181] endrepeat [151]
  [183] pop 3
  [185] getparam 0 .............................. <me>
  [187] pusharglist 1 ........................... <me>
  [189] objcall 574 ............................. <me.getShadowManager()>
  [192] pushint8 1 .............................. <1>
  [194] pusharglistnoret 2 ...................... <me.getShadowManager(), 1>
  [196] objcall 653 ............................. me.getShadowManager().disableRender(1)
  [199] getlocal 1 .............................. <tCache>
  [201] pushsymb 706 ............................ <#Active>
  [204] pusharglist 2 ........................... <tCache, #Active>
  [206] objcall 34 .............................. <tCache[#Active]>
  [208] peek 0
  [210] pusharglist 1
  [212] extcall 33
  [214] pushint8 1
  [216] peek 0
  [218] peek 2
  [220] lteq
  [221] jmpifz [248] ............................ repeat with tdata in tCache[#Active]
  [224] peek 2
  [226] peek 1
  [228] pusharglist 2
  [230] extcall 34
  [232] setlocal 2
  [234] getparam 0 .............................. <me>
  [236] getlocal 2 .............................. <tdata>
  [238] pusharglistnoret 2 ...................... <me, tdata>
  [240] objcall 565 ............................. me.createActiveObject(tdata)
  [243] pushint8 1
  [245] add
  [246] endrepeat [216]
  [248] pop 3
  [250] getparam 0 .............................. <me>
  [252] pusharglist 1 ........................... <me>
  [254] objcall 574 ............................. <me.getShadowManager()>
  [257] pushzero ................................ <0>
  [258] pusharglistnoret 2 ...................... <me.getShadowManager(), 0>
  [260] objcall 653 ............................. me.getShadowManager().disableRender(0)
  [263] getparam 0 .............................. <me>
  [265] pusharglist 1 ........................... <me>
  [267] objcall 574 ............................. <me.getShadowManager()>
  [270] pusharglistnoret 1 ...................... <me.getShadowManager()>
  [272] objcall 724 ............................. me.getShadowManager().render()
  [275] getlocal 1 .............................. <tCache>
  [277] pushsymb 708 ............................ <#items>
  [280] pusharglist 2 ........................... <tCache, #items>
  [282] objcall 34 .............................. <tCache[#items]>
  [284] peek 0
  [286] pusharglist 1
  [288] extcall 33
  [290] pushint8 1
  [292] peek 0
  [294] peek 2
  [296] lteq
  [297] jmpifz [324] ............................ repeat with tdata in tCache[#items]
  [300] peek 2
  [302] peek 1
  [304] pusharglist 2
  [306] extcall 34
  [308] setlocal 2
  [310] getparam 0 .............................. <me>
  [312] getlocal 2 .............................. <tdata>
  [314] pusharglistnoret 2 ...................... <me, tdata>
  [316] objcall 569 ............................. me.createItemObject(tdata)
  [319] pushint8 1
  [321] add
  [322] endrepeat [292]
  [324] pop 3
  [326] getlocal 1 .............................. <tCache>
  [328] pushsymb 707 ............................ <#users>
  [331] pusharglist 2 ........................... <tCache, #users>
  [333] objcall 34 .............................. <tCache[#users]>
  [335] peek 0
  [337] pusharglist 1
  [339] extcall 33
  [341] pushint8 1
  [343] peek 0
  [345] peek 2
  [347] lteq
  [348] jmpifz [375] ............................ repeat with tdata in tCache[#users]
  [351] peek 2
  [353] peek 1
  [355] pusharglist 2
  [357] extcall 34
  [359] setlocal 2
  [361] getparam 0 .............................. <me>
  [363] getlocal 2 .............................. <tdata>
  [365] pusharglistnoret 2 ...................... <me, tdata>
  [367] objcall 563 ............................. me.createUserObject(tdata)
  [370] pushint8 1
  [372] add
  [373] endrepeat [343]
  [375] pop 3
  [377] getlocal 1 .............................. <tCache>
  [379] pushsymb 707 ............................ <#users>
  [382] pusharglist 0 ........................... <[]>
  [384] pushlist ................................ <[]>
  [385] pusharglistnoret 3 ...................... <tCache, #users, []>
  [387] objcall 59 .............................. tCache[#users] = []
  [389] getlocal 1 .............................. <tCache>
  [391] pushsymb 706 ............................ <#Active>
  [394] pusharglist 0 ........................... <[]>
  [396] pushlist ................................ <[]>
  [397] pusharglistnoret 3 ...................... <tCache, #Active, []>
  [399] objcall 59 .............................. tCache[#Active] = []
  [401] getlocal 1 .............................. <tCache>
  [403] pushsymb 708 ............................ <#items>
  [406] pusharglist 0 ........................... <[]>
  [408] pushlist ................................ <[]>
  [409] pusharglistnoret 3 ...................... <tCache, #items, []>
  [411] objcall 59 .............................. tCache[#items] = []
  [413] getparam 0 .............................. <me>
  [415] pusharglist 1 ........................... <me>
  [417] objcall 53 .............................. <me.getInterface()>
  [419] pusharglistnoret 1 ...................... <me.getInterface()>
  [421] objcall 165 ............................. me.getInterface().showInfostand()
  [423] getparam 0 .............................. <me>
  [425] pusharglist 1 ........................... <me>
  [427] objcall 53 .............................. <me.getInterface()>
  [429] pusharglistnoret 1 ...................... <me.getInterface()>
  [431] objcall 163 ............................. me.getInterface().showRoomBar()
  [433] getparam 0 .............................. <me>
  [435] pusharglist 1 ........................... <me>
  [437] objcall 53 .............................. <me.getInterface()>
  [439] pusharglistnoret 1 ...................... <me.getInterface()>
  [441] objcall 179 ............................. me.getInterface().hideLoaderBar()
  [443] getparam 0 .............................. <me>
  [445] pusharglist 1 ........................... <me>
  [447] objcall 53 .............................. <me.getInterface()>
  [449] pusharglistnoret 1 ...................... <me.getInterface()>
  [451] objcall 183 ............................. me.getInterface().hideTrashCover()
  [453] pushint8 1 .............................. <1>
  [455] setprop 606 ............................. pActiveFlag = 1
  [458] getprop 625 ............................. <pChatProps>
  [461] pushcons 16 ............................. <"mode">
  [463] pushcons 17 ............................. <"CHAT">
  [465] pusharglistnoret 3 ...................... <pChatProps, "mode", "CHAT">
  [467] objcall 59 .............................. pChatProps["mode"] = "CHAT"
  [469] pushsymb 726 ............................ <#arrow>
  [472] pusharglistnoret 1 ...................... <#arrow>
  [474] extcall 725 ............................. setcursor(#arrow)
  [477] pushsymb 559 ............................ <#prepare>
  [480] getparam 0 .............................. <me>
  [482] pusharglist 1 ........................... <me>
  [484] objcall 570 ............................. <me.getRoomPrg()>
  [487] pusharglist 1 ........................... <[me.getRoomPrg()]>
  [489] pushlist ................................ <[me.getRoomPrg()]>
  [490] pusharglistnoret 2 ...................... <#prepare, [me.getRoomPrg()]>
  [492] extcall 281 ............................. call(#prepare, [me.getRoomPrg()])
  [495] pushsymb 727 ............................ <#roomReady>
  [498] pusharglistnoret 1 ...................... <#roomReady>
  [500] extcall 310 ............................. executeMessage(#roomReady)
  [503] getparam 0 .............................. <me>
  [505] pusharglist 1 ........................... <me>
  [507] objcall 134 ............................. <me.getRoomConnection()>
  [509] pushcons 114 ............................ <"G_STAT">
  [511] pusharglistnoret 2 ...................... <me.getRoomConnection(), "G_STAT">
  [513] objcall 135 ............................. me.getRoomConnection().send("G_STAT")
  [515] getparam 0 .............................. <me>
  [517] pusharglist 1 ........................... <me>
  [519] objcall 75 .............................. <me.getID()>
  [521] pusharglist 1 ........................... <me.getID()>
  [523] extcall 728 ............................. <receivePrepare(me.getID())>
  [526] pusharglistnoret 1 ...................... <receivePrepare(me.getID())>
  [528] extcall 31 .............................. return receivePrepare(me.getID())
  [530] pushzero ................................ <0>
  [531] pusharglistnoret 1 ...................... <0>
  [533] extcall 31 .............................. return 0
  [535] ret
end

on createRoomObject me, tdata, tList, tClass
  [  0] getparam 1 .............................. <tdata>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <tdata = 0>
  [  4] jmpifz [ 12] ............................ if tdata = 0 then
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 31 .............................. return 0
  [ 12] getparam 1 .............................. <tdata>
  [ 14] pushsymb 459 ............................ <#id>
  [ 17] pusharglist 2 ........................... <tdata, #id>
  [ 19] objcall 34 .............................. <tdata[#id]>
  [ 21] pusharglist 1 ........................... <tdata[#id]>
  [ 23] extcall 120 ............................. <voidp(tdata[#id])>
  [ 25] getparam 2 .............................. <tList>
  [ 27] pusharglist 1 ........................... <tList>
  [ 29] extcall 92 .............................. <listp(tList)>
  [ 31] not ..................................... <not listp(tList)>
  [ 32] or ...................................... <voidp(tdata[#id]) or not listp(tList)>
  [ 33] jmpifz [ 51] ............................ if voidp(tdata[#id]) or not listp(tList) then
  [ 36] getparam 0 .............................. <me>
  [ 38] pushcons 115 ............................ <"Invalid arguments in object creation!">
  [ 40] pushsymb 594 ............................ <#createRoomObject>
  [ 43] pusharglist 3 ........................... <me, "Invalid arguments in object creation!", #createRoomObject>
  [ 45] extcall 72 .............................. <error(me, "Invalid arguments in object creation!", #createRoomObject)>
  [ 47] pusharglistnoret 1 ...................... <error(me, "Invalid arguments in object creation!", #createRoomObject)>
  [ 49] extcall 31 .............................. return error(me, "Invalid arguments in object creation!", #createRoomObject)
  [ 51] getparam 2 .............................. <tList>
  [ 53] getparam 1 .............................. <tdata>
  [ 55] pushsymb 459 ............................ <#id>
  [ 58] pusharglist 2 ........................... <tdata, #id>
  [ 60] objcall 34 .............................. <tdata[#id]>
  [ 62] pusharglist 2 ........................... <tList, tdata[#id]>
  [ 64] objcall 34 .............................. <tList[tdata[#id]]>
  [ 66] pusharglist 1 ........................... <tList[tdata[#id]]>
  [ 68] extcall 120 ............................. <voidp(tList[tdata[#id]])>
  [ 70] not ..................................... <not voidp(tList[tdata[#id]])>
  [ 71] jmpifz [ 99] ............................ if not voidp(tList[tdata[#id]]) then
  [ 74] getparam 0 .............................. <me>
  [ 76] pushcons 116 ............................ <"Object already exists:">
  [ 78] getparam 1 .............................. <tdata>
  [ 80] pushsymb 459 ............................ <#id>
  [ 83] pusharglist 2 ........................... <tdata, #id>
  [ 85] objcall 34 .............................. <tdata[#id]>
  [ 87] joinpadstr .............................. <"Object already exists:" && tdata[#id]>
  [ 88] pushsymb 594 ............................ <#createRoomObject>
  [ 91] pusharglist 3 ........................... <me, "Object already exists:" && tdata[#id], #createRoomObject>
  [ 93] extcall 72 .............................. <error(me, "Object already exists:" && tdata[#id], #createRoomObject)>
  [ 95] pusharglistnoret 1 ...................... <error(me, "Object already exists:" && tdata[#id], #createRoomObject)>
  [ 97] extcall 31 .............................. return error(me, "Object already exists:" && tdata[#id], #createRoomObject)
  [ 99] getparam 3 .............................. <tClass>
  [101] pusharglist 1 ........................... <tClass>
  [103] extcall 120 ............................. <voidp(tClass)>
  [105] jmpifz [112] ............................ if voidp(tClass) then
  [108] pushcons 42 ............................. <"passive">
  [110] setparam 3 .............................. tClass = "passive"
  [112] getparam 1 .............................. <tdata>
  [114] pushsymb 38 ............................. <#class>
  [116] pusharglist 2 ........................... <tdata, #class>
  [118] objcall 34 .............................. <tdata[#class]>
  [120] setlocal 0 .............................. tCustomCls = tdata[#class]
  [122] getlocal 0 .............................. <tCustomCls>
  [124] pushcons 117 ............................ <"*">
  [126] containsstr ............................. <tCustomCls contains "*">
  [127] jmpifz [154] ............................ if tCustomCls contains "*" then
  [130] getmovieprop 99 ......................... <the itemDelimiter>
  [132] setlocal 1 .............................. tDelim = the itemDelimiter
  [134] pushcons 117 ............................ <"*">
  [136] setmovieprop 99 ......................... the itemDelimiter = "*"
  [138] getlocal 0 .............................. <tCustomCls>
  [140] pushsymb 103 ............................ <#item>
  [142] pushint8 1 .............................. <1>
  [144] pusharglist 3 ........................... <tCustomCls, #item, 1>
  [146] objcall 68 .............................. <tCustomCls.item[1]>
  [148] setlocal 0 .............................. tCustomCls = tCustomCls.item[1]
  [150] getlocal 1 .............................. <tDelim>
  [152] setmovieprop 99 ......................... the itemDelimiter = tDelim
  [154] getprop 617 ............................. <pClassContId>
  [157] pusharglist 1 ........................... <pClassContId>
  [159] extcall 130 ............................. <getObject(pClassContId)>
  [161] getlocal 0 .............................. <tCustomCls>
  [163] pusharglist 2 ........................... <getObject(pClassContId), tCustomCls>
  [165] objcall 548 ............................. <getObject(pClassContId).exists(tCustomCls)>
  [168] jmpifz [194] ............................ if getObject(pClassContId).exists(tCustomCls) then / else
  [171] getprop 617 ............................. <pClassContId>
  [174] pusharglist 1 ........................... <pClassContId>
  [176] extcall 130 ............................. <getObject(pClassContId)>
  [178] getlocal 0 .............................. <tCustomCls>
  [180] pusharglist 2 ........................... <getObject(pClassContId), tCustomCls>
  [182] objcall 133 ............................. <getObject(pClassContId).get(tCustomCls)>
  [184] pusharglist 1 ........................... <getObject(pClassContId).get(tCustomCls)>
  [186] extcall 480 ............................. <value(getObject(pClassContId).get(tCustomCls))>
  [189] setlocal 2 .............................. tClasses = value(getObject(pClassContId).get(tCustomCls))
  [191] jmp [214]
  [194] getprop 617 ............................. <pClassContId>
  [197] pusharglist 1 ........................... <pClassContId>
  [199] extcall 130 ............................. <getObject(pClassContId)>
  [201] getparam 3 .............................. <tClass>
  [203] pusharglist 2 ........................... <getObject(pClassContId), tClass>
  [205] objcall 133 ............................. <getObject(pClassContId).get(tClass)>
  [207] pusharglist 1 ........................... <getObject(pClassContId).get(tClass)>
  [209] extcall 480 ............................. <value(getObject(pClassContId).get(tClass))>
  [212] setlocal 2 .............................. tClasses = value(getObject(pClassContId).get(tClass))
  [214] pushsymb 262 ............................ <#temp>
  [217] getlocal 2 .............................. <tClasses>
  [219] pusharglist 2 ........................... <#temp, tClasses>
  [221] extcall 260 ............................. <createObject(#temp, tClasses)>
  [224] setlocal 3 .............................. tObject = createObject(#temp, tClasses)
  [226] getlocal 3 .............................. <tObject>
  [228] pusharglist 1 ........................... <tObject>
  [230] extcall 139 ............................. <objectp(tObject)>
  [232] not ..................................... <not objectp(tObject)>
  [233] jmpifz [254] ............................ if not objectp(tObject) then
  [236] getparam 0 .............................. <me>
  [238] pushcons 118 ............................ <"Failed to create room object:">
  [240] getparam 1 .............................. <tdata>
  [242] joinpadstr .............................. <"Failed to create room object:" && tdata>
  [243] pushsymb 594 ............................ <#createRoomObject>
  [246] pusharglist 3 ........................... <me, "Failed to create room object:" && tdata, #createRoomObject>
  [248] extcall 72 .............................. <error(me, "Failed to create room object:" && tdata, #createRoomObject)>
  [250] pusharglistnoret 1 ...................... <error(me, "Failed to create room object:" && tdata, #createRoomObject)>
  [252] extcall 31 .............................. return error(me, "Failed to create room object:" && tdata, #createRoomObject)
  [254] getlocal 3 .............................. <tObject>
  [256] getparam 1 .............................. <tdata>
  [258] pushsymb 459 ............................ <#id>
  [261] pusharglist 2 ........................... <tdata, #id>
  [263] objcall 34 .............................. <tdata[#id]>
  [265] pusharglistnoret 2 ...................... <tObject, tdata[#id]>
  [267] objcall 731 ............................. tObject.setID(tdata[#id])
  [270] getlocal 3 .............................. <tObject>
  [272] getparam 1 .............................. <tdata>
  [274] pusharglist 1 ........................... <tdata>
  [276] objcall 636 ............................. <tdata.duplicate()>
  [279] pusharglistnoret 2 ...................... <tObject, tdata.duplicate()>
  [281] objcall 2 ............................... tObject.define(tdata.duplicate())
  [283] pusharglist 0 ........................... <>
  [285] thebuiltin 732 .......................... <the result>
  [288] pushzero ................................ <0>
  [289] eq ...................................... <the result = 0>
  [290] jmpifz [299] ............................ if the result = 0 then
  [293] pushint8 1 .............................. <1>
  [295] pusharglistnoret 1 ...................... <1>
  [297] extcall 31 .............................. return 1
  [299] getparam 2 .............................. <tList>
  [301] getlocal 3 .............................. <tObject>
  [303] pusharglist 1 ........................... <tObject>
  [305] objcall 75 .............................. <tObject.getID()>
  [307] getlocal 3 .............................. <tObject>
  [309] pusharglistnoret 3 ...................... <tList, tObject.getID(), tObject>
  [311] objcall 59 .............................. tList[tObject.getID()] = tObject
  [313] pushint8 1 .............................. <1>
  [315] pusharglistnoret 1 ...................... <1>
  [317] extcall 31 .............................. return 1
  [319] ret
end

on removeRoomObject me, tid, tList
  [  0] getparam 1 .............................. <tid>
  [  2] setlocal 0 .............................. tItemID = tid
  [  4] getparam 2 .............................. <tList>
  [  6] getparam 1 .............................. <tid>
  [  8] pusharglist 2 ........................... <tList, tid>
  [ 10] objcall 339 ............................. <tList.getaProp(tid)>
  [ 13] pusharglist 1 ........................... <tList.getaProp(tid)>
  [ 15] extcall 120 ............................. <voidp(tList.getaProp(tid))>
  [ 17] not ..................................... <not voidp(tList.getaProp(tid))>
  [ 18] jmpifz [ 38] ............................ if not voidp(tList.getaProp(tid)) then
  [ 21] getparam 1 .............................. <tid>
  [ 23] pusharglist 1 ........................... <tid>
  [ 25] extcall 102 ............................. <integer(tid)>
  [ 27] setlocal 0 .............................. tItemID = integer(tid)
  [ 29] getlocal 0 .............................. <tItemID>
  [ 31] pusharglist 1 ........................... <tItemID>
  [ 33] extcall 519 ............................. <string(tItemID)>
  [ 36] setlocal 0 .............................. tItemID = string(tItemID)
  [ 38] getparam 2 .............................. <tList>
  [ 40] getlocal 0 .............................. <tItemID>
  [ 42] pusharglist 2 ........................... <tList, tItemID>
  [ 44] objcall 34 .............................. <tList[tItemID]>
  [ 46] pusharglist 1 ........................... <tList[tItemID]>
  [ 48] extcall 120 ............................. <voidp(tList[tItemID])>
  [ 50] jmpifz [ 71] ............................ if voidp(tList[tItemID]) then
  [ 53] getparam 0 .............................. <me>
  [ 55] pushcons 119 ............................ <"Object not found:">
  [ 57] getparam 1 .............................. <tid>
  [ 59] joinpadstr .............................. <"Object not found:" && tid>
  [ 60] pushsymb 595 ............................ <#removeRoomObject>
  [ 63] pusharglist 3 ........................... <me, "Object not found:" && tid, #removeRoomObject>
  [ 65] extcall 72 .............................. <error(me, "Object not found:" && tid, #removeRoomObject)>
  [ 67] pusharglistnoret 1 ...................... <error(me, "Object not found:" && tid, #removeRoomObject)>
  [ 69] extcall 31 .............................. return error(me, "Object not found:" && tid, #removeRoomObject)
  [ 71] getparam 2 .............................. <tList>
  [ 73] getlocal 0 .............................. <tItemID>
  [ 75] pusharglist 2 ........................... <tList, tItemID>
  [ 77] objcall 34 .............................. <tList[tItemID]>
  [ 79] pusharglistnoret 1 ...................... <tList[tItemID]>
  [ 81] objcall 1 ............................... tList[tItemID].deconstruct()
  [ 83] getparam 2 .............................. <tList>
  [ 85] getlocal 0 .............................. <tItemID>
  [ 87] pusharglistnoret 2 ...................... <tList, tItemID>
  [ 89] objcall 687 ............................. tList.deleteProp(tItemID)
  [ 92] pushint8 1 .............................. <1>
  [ 94] pusharglistnoret 1 ...................... <1>
  [ 96] extcall 31 .............................. return 1
  [ 98] ret
end

on getRoomObject me, tid, tList
  [  0] getparam 1 .............................. <tid>
  [  2] pushsymb 116 ............................ <#list>
  [  4] eq ...................................... <tid = #list>
  [  5] jmpifz [ 14] ............................ if tid = #list then
  [  8] getparam 2 .............................. <tList>
  [ 10] pusharglistnoret 1 ...................... <tList>
  [ 12] extcall 31 .............................. return tList
  [ 14] getparam 2 .............................. <tList>
  [ 16] getparam 1 .............................. <tid>
  [ 18] pusharglist 2 ........................... <tList, tid>
  [ 20] objcall 339 ............................. <tList.getaProp(tid)>
  [ 23] pusharglist 1 ........................... <tList.getaProp(tid)>
  [ 25] extcall 120 ............................. <voidp(tList.getaProp(tid))>
  [ 27] not ..................................... <not voidp(tList.getaProp(tid))>
  [ 28] jmpifz [ 44] ............................ if not voidp(tList.getaProp(tid)) then
  [ 31] getparam 2 .............................. <tList>
  [ 33] getparam 1 .............................. <tid>
  [ 35] pusharglist 2 ........................... <tList, tid>
  [ 37] objcall 339 ............................. <tList.getaProp(tid)>
  [ 40] pusharglistnoret 1 ...................... <tList.getaProp(tid)>
  [ 42] extcall 31 .............................. return tList.getaProp(tid)
  [ 44] getparam 1 .............................. <tid>
  [ 46] pusharglist 1 ........................... <tid>
  [ 48] extcall 102 ............................. <integer(tid)>
  [ 50] setlocal 0 .............................. tItemIdInt = integer(tid)
  [ 52] getlocal 0 .............................. <tItemIdInt>
  [ 54] pusharglist 1 ........................... <tItemIdInt>
  [ 56] extcall 519 ............................. <string(tItemIdInt)>
  [ 59] setlocal 1 .............................. tItemIdStr = string(tItemIdInt)
  [ 61] getparam 2 .............................. <tList>
  [ 63] getlocal 1 .............................. <tItemIdStr>
  [ 65] pusharglist 2 ........................... <tList, tItemIdStr>
  [ 67] objcall 339 ............................. <tList.getaProp(tItemIdStr)>
  [ 70] pusharglist 1 ........................... <tList.getaProp(tItemIdStr)>
  [ 72] extcall 120 ............................. <voidp(tList.getaProp(tItemIdStr))>
  [ 74] not ..................................... <not voidp(tList.getaProp(tItemIdStr))>
  [ 75] jmpifz [ 91] ............................ if not voidp(tList.getaProp(tItemIdStr)) then
  [ 78] getparam 2 .............................. <tList>
  [ 80] getlocal 1 .............................. <tItemIdStr>
  [ 82] pusharglist 2 ........................... <tList, tItemIdStr>
  [ 84] objcall 339 ............................. <tList.getaProp(tItemIdStr)>
  [ 87] pusharglistnoret 1 ...................... <tList.getaProp(tItemIdStr)>
  [ 89] extcall 31 .............................. return tList.getaProp(tItemIdStr)
  [ 91] pushzero ................................ <0>
  [ 92] pusharglistnoret 1 ...................... <0>
  [ 94] extcall 31 .............................. return 0
  [ 96] ret
end

on roomObjectExists me, tid, tList
  [  0] getparam 1 .............................. <tid>
  [  2] setlocal 0 .............................. tItemID = tid
  [  4] getparam 2 .............................. <tList>
  [  6] getparam 1 .............................. <tid>
  [  8] pusharglist 2 ........................... <tList, tid>
  [ 10] objcall 339 ............................. <tList.getaProp(tid)>
  [ 13] pusharglist 1 ........................... <tList.getaProp(tid)>
  [ 15] extcall 120 ............................. <voidp(tList.getaProp(tid))>
  [ 17] not ..................................... <not voidp(tList.getaProp(tid))>
  [ 18] jmpifz [ 38] ............................ if not voidp(tList.getaProp(tid)) then
  [ 21] getparam 1 .............................. <tid>
  [ 23] pusharglist 1 ........................... <tid>
  [ 25] extcall 102 ............................. <integer(tid)>
  [ 27] setlocal 0 .............................. tItemID = integer(tid)
  [ 29] getlocal 0 .............................. <tItemID>
  [ 31] pusharglist 1 ........................... <tItemID>
  [ 33] extcall 519 ............................. <string(tItemID)>
  [ 36] setlocal 0 .............................. tItemID = string(tItemID)
  [ 38] getparam 2 .............................. <tList>
  [ 40] getlocal 0 .............................. <tItemID>
  [ 42] pusharglist 2 ........................... <tList, tItemID>
  [ 44] objcall 34 .............................. <tList[tItemID]>
  [ 46] pusharglist 1 ........................... <tList[tItemID]>
  [ 48] extcall 120 ............................. <voidp(tList[tItemID])>
  [ 50] not ..................................... <not voidp(tList[tItemID])>
  [ 51] pusharglistnoret 1 ...................... <not voidp(tList[tItemID])>
  [ 53] extcall 31 .............................. return not voidp(tList[tItemID])
  [ 55] ret
end

on startTeleport me, tTeleId, tFlatID
  [  0] pushsymb 131 ............................ <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 130 ............................. <getObject(#session)>
  [  6] pushcons 36 ............................. <"target_door_ID">
  [  8] getparam 1 .............................. <tTeleId>
  [ 10] pusharglistnoret 3 ...................... <getObject(#session), "target_door_ID", tTeleId>
  [ 12] objcall 637 ............................. getObject(#session).set("target_door_ID", tTeleId)
  [ 15] pushsymb 131 ............................ <#session>
  [ 17] pusharglist 1 ........................... <#session>
  [ 19] extcall 130 ............................. <getObject(#session)>
  [ 21] pushcons 120 ............................ <"target_flat_ID">
  [ 23] getparam 2 .............................. <tFlatID>
  [ 25] pusharglistnoret 3 ...................... <getObject(#session), "target_flat_ID", tFlatID>
  [ 27] objcall 637 ............................. getObject(#session).set("target_flat_ID", tFlatID)
  [ 30] pushcons 121 ............................ <"receivedFlatStructf_">
  [ 32] getparam 2 .............................. <tFlatID>
  [ 34] joinstr ................................. <"receivedFlatStructf_" & tFlatID>
  [ 35] pusharglist 1 ........................... <"receivedFlatStructf_" & tFlatID>
  [ 37] extcall 739 ............................. <symbol("receivedFlatStructf_" & tFlatID)>
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglist 1 ........................... <me>
  [ 44] objcall 75 .............................. <me.getID()>
  [ 46] pushsymb 599 ............................ <#processTeleportStruct>
  [ 49] pusharglistnoret 3 ...................... <symbol("receivedFlatStructf_" & tFlatID), me.getID(), #processTeleportStruct>
  [ 51] extcall 264 ............................. registerMessage(symbol("receivedFlatStructf_" & tFlatID), me.getID(), #processTeleportStruct)
  [ 54] pushsymb 740 ............................ <#requestFlatStruct>
  [ 57] getparam 2 .............................. <tFlatID>
  [ 59] pusharglistnoret 2 ...................... <#requestFlatStruct, tFlatID>
  [ 61] extcall 310 ............................. executeMessage(#requestFlatStruct, tFlatID)
  [ 64] ret
end

on processTeleportStruct me, tFlatStruct
  [  0] pushcons 121 ............................ <"receivedFlatStructf_">
  [  2] pushsymb 131 ............................ <#session>
  [  4] pusharglist 1 ........................... <#session>
  [  6] extcall 130 ............................. <getObject(#session)>
  [  8] pushcons 120 ............................ <"target_flat_ID">
  [ 10] pusharglist 2 ........................... <getObject(#session), "target_flat_ID">
  [ 12] objcall 133 ............................. <getObject(#session).get("target_flat_ID")>
  [ 14] joinstr ................................. <"receivedFlatStructf_" & getObject(#session).get("target_flat_ID")>
  [ 15] pusharglist 1 ........................... <"receivedFlatStructf_" & getObject(#session).get("target_flat_ID")>
  [ 17] extcall 739 ............................. <symbol("receivedFlatStructf_" & getObject(#session).get("target_flat_ID"))>
  [ 20] pusharglistnoret 1 ...................... <symbol("receivedFlatStructf_" & getObject(#session).get("target_flat_ID"))>
  [ 22] extcall 266 ............................. unregisterMessage(symbol("receivedFlatStructf_" & getObject(#session).get("target_flat_ID")))
  [ 25] getparam 1 .............................. <tFlatStruct>
  [ 27] pushsymb 459 ............................ <#id>
  [ 30] getparam 1 .............................. <tFlatStruct>
  [ 32] pushsymb 743 ............................ <#flatId>
  [ 35] pusharglist 2 ........................... <tFlatStruct, #flatId>
  [ 37] objcall 34 .............................. <tFlatStruct[#flatId]>
  [ 39] pusharglistnoret 3 ...................... <tFlatStruct, #id, tFlatStruct[#flatId]>
  [ 41] objcall 59 .............................. tFlatStruct[#id] = tFlatStruct[#flatId]
  [ 43] getparam 1 .............................. <tFlatStruct>
  [ 45] pushsymb 645 ............................ <#teleport>
  [ 48] pushsymb 131 ............................ <#session>
  [ 50] pusharglist 1 ........................... <#session>
  [ 52] extcall 130 ............................. <getObject(#session)>
  [ 54] pushcons 36 ............................. <"target_door_ID">
  [ 56] pusharglist 2 ........................... <getObject(#session), "target_door_ID">
  [ 58] objcall 133 ............................. <getObject(#session).get("target_door_ID")>
  [ 60] pusharglistnoret 3 ...................... <tFlatStruct, #teleport, getObject(#session).get("target_door_ID")>
  [ 62] objcall 744 ............................. tFlatStruct.addProp(#teleport, getObject(#session).get("target_door_ID"))
  [ 65] pushsymb 131 ............................ <#session>
  [ 67] pusharglist 1 ........................... <#session>
  [ 69] extcall 130 ............................. <getObject(#session)>
  [ 71] pushcons 122 ............................ <"target_flat_id">
  [ 73] pusharglistnoret 2 ...................... <getObject(#session), "target_flat_id">
  [ 75] objcall 442 ............................. getObject(#session).Remove("target_flat_id")
  [ 78] pushsymb 131 ............................ <#session>
  [ 80] pusharglist 1 ........................... <#session>
  [ 82] extcall 130 ............................. <getObject(#session)>
  [ 84] pushcons 123 ............................ <"current_door_ID">
  [ 86] pusharglist 2 ........................... <getObject(#session), "current_door_ID">
  [ 88] objcall 548 ............................. <getObject(#session).exists("current_door_ID")>
  [ 91] jmpifz [139] ............................ if getObject(#session).exists("current_door_ID") then
  [ 94] pushsymb 131 ............................ <#session>
  [ 96] pusharglist 1 ........................... <#session>
  [ 98] extcall 130 ............................. <getObject(#session)>
  [100] pushcons 123 ............................ <"current_door_ID">
  [102] pusharglist 2 ........................... <getObject(#session), "current_door_ID">
  [104] objcall 133 ............................. <getObject(#session).get("current_door_ID")>
  [106] setlocal 0 .............................. tDoorID = getObject(#session).get("current_door_ID")
  [108] getparam 0 .............................. <me>
  [110] pusharglist 1 ........................... <me>
  [112] objcall 115 ............................. <me.getComponent()>
  [114] getlocal 0 .............................. <tDoorID>
  [116] pusharglist 2 ........................... <me.getComponent(), tDoorID>
  [118] objcall 372 ............................. <me.getComponent().getActiveObject(tDoorID)>
  [121] setlocal 1 .............................. tDoorObj = me.getComponent().getActiveObject(tDoorID)
  [123] getlocal 1 .............................. <tDoorObj>
  [125] pushzero ................................ <0>
  [126] nteq .................................... <tDoorObj <> 0>
  [127] jmpifz [139] ............................ if tDoorObj <> 0 then
  [130] getlocal 1 .............................. <tDoorObj>
  [132] getparam 1 .............................. <tFlatStruct>
  [134] pusharglistnoret 2 ...................... <tDoorObj, tFlatStruct>
  [136] objcall 598 ............................. tDoorObj.startTeleport(tFlatStruct)
  [139] ret
end

on updateSlideObjects me, tTimeNow
  [  0] getparam 1 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 120 ............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 14] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 500 ........................ <the milliSeconds>
  [ 12] setparam 1 .............................. tTimeNow = the milliSeconds
  [ 14] getprop 630 ............................. <pCurrentSlidingObjects>
  [ 17] pusharglist 1 ........................... <pCurrentSlidingObjects>
  [ 19] objcall 636 ............................. <pCurrentSlidingObjects.duplicate()>
  [ 22] setlocal 0 .............................. tList = pCurrentSlidingObjects.duplicate()
  [ 24] pushsymb 747 ............................ <#animateSlide>
  [ 27] getlocal 0 .............................. <tList>
  [ 29] getparam 1 .............................. <tTimeNow>
  [ 31] pusharglistnoret 3 ...................... <#animateSlide, tList, tTimeNow>
  [ 33] extcall 281 ............................. call(#animateSlide, tList, tTimeNow)
  [ 36] ret
end

on setEnterRoomAlert me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] setprop 633 ............................. pEnterRoomAlert = tMsg
  [  5] ret
end

on executeEnterRoomAlert me
  [  0] getprop 633 ............................. <pEnterRoomAlert>
  [  3] getobjprop 67 ........................... <pEnterRoomAlert.length>
  [  5] pushzero ................................ <0>
  [  6] gt ...................................... <pEnterRoomAlert.length > 0>
  [  7] jmpifz [ 32] ............................ if pEnterRoomAlert.length > 0 then
  [ 10] pushsymb 457 ............................ <#alert>
  [ 13] pushsymb 458 ............................ <#Msg>
  [ 16] getprop 633 ............................. <pEnterRoomAlert>
  [ 19] pusharglist 2 ........................... <[#Msg: pEnterRoomAlert]>
  [ 21] pushproplist ............................ <[#Msg: pEnterRoomAlert]>
  [ 22] pusharglistnoret 2 ...................... <#alert, [#Msg: pEnterRoomAlert]>
  [ 24] extcall 310 ............................. executeMessage(#alert, [#Msg: pEnterRoomAlert])
  [ 27] pushcons 2 .............................. <EMPTY>
  [ 29] setprop 633 ............................. pEnterRoomAlert = EMPTY
  [ 32] ret
end

on removeEnterRoomAlert me
  [  0] pushcons 2 .............................. <EMPTY>
  [  2] setprop 633 ............................. pEnterRoomAlert = EMPTY
  [  5] ret
end

on getRoomScale me, tRoomMarker
  [  0] getparam 1 .............................. <tRoomMarker>
  [  2] pusharglist 1 ........................... <tRoomMarker>
  [  4] extcall 120 ............................. <voidp(tRoomMarker)>
  [  6] jmpifz [ 14] ............................ if voidp(tRoomMarker) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 31 .............................. return 0
  [ 14] pushcons 124 ............................ <"private.room.properties">
  [ 16] pusharglist 1 ........................... <"private.room.properties">
  [ 18] extcall 259 ............................. <getVariableValue("private.room.properties")>
  [ 21] setlocal 0 .............................. tRoomProps = getVariableValue("private.room.properties")
  [ 23] getlocal 0 .............................. <tRoomProps>
  [ 25] pusharglist 1 ........................... <tRoomProps>
  [ 27] extcall 120 ............................. <voidp(tRoomProps)>
  [ 29] jmpifz [ 37] ............................ if voidp(tRoomProps) then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 31 .............................. return 0
  [ 37] getparam 1 .............................. <tRoomMarker>
  [ 39] getparam 1 .............................. <tRoomMarker>
  [ 41] getobjprop 67 ........................... <tRoomMarker.length>
  [ 43] getparam 1 .............................. <tRoomMarker>
  [ 45] getobjprop 67 ........................... <tRoomMarker.length>
  [ 47] pusharglist 3 ........................... <tRoomMarker, tRoomMarker.length, tRoomMarker.length>
  [ 49] extcall 749 ............................. <chars(tRoomMarker, tRoomMarker.length, tRoomMarker.length)>
  [ 52] setlocal 1 .............................. tRoomKey = chars(tRoomMarker, tRoomMarker.length, tRoomMarker.length)
  [ 54] getlocal 0 .............................. <tRoomProps>
  [ 56] peek 0
  [ 58] pusharglist 1
  [ 60] extcall 33
  [ 62] pushint8 1
  [ 64] peek 0
  [ 66] peek 2
  [ 68] lteq
  [ 69] jmpifz [115] ............................ repeat with tRoom in tRoomProps
  [ 72] peek 2
  [ 74] peek 1
  [ 76] pusharglist 2
  [ 78] extcall 34
  [ 80] setlocal 2
  [ 82] getlocal 2 .............................. <tRoom>
  [ 84] pushsymb 750 ............................ <#model>
  [ 87] pusharglist 2 ........................... <tRoom, #model>
  [ 89] objcall 34 .............................. <tRoom[#model]>
  [ 91] getlocal 1 .............................. <tRoomKey>
  [ 93] eq ...................................... <tRoom[#model] = tRoomKey>
  [ 94] jmpifz [110] ............................ if tRoom[#model] = tRoomKey then
  [ 97] getlocal 2 .............................. <tRoom>
  [ 99] pushsymb 751 ............................ <#charScale>
  [102] pusharglist 2 ........................... <tRoom, #charScale>
  [104] objcall 34 .............................. <tRoom[#charScale]>
  [106] pusharglistnoret 1 ...................... <tRoom[#charScale]>
  [108] extcall 31 .............................. return tRoom[#charScale]
  [110] pushint8 1
  [112] add
  [113] endrepeat [ 64]
  [115] pop 3
  [117] pushzero ................................ <0>
  [118] pusharglistnoret 1 ...................... <0>
  [120] extcall 31 .............................. return 0
  [122] ret
end

on addToCastDownloadList me, tCastVarPrefix, tCastList
  [  0] getparam 2 .............................. <tCastList>
  [  2] pusharglist 1 ........................... <tCastList>
  [  4] extcall 120 ............................. <voidp(tCastList)>
  [  6] getparam 2 .............................. <tCastList>
  [  8] pusharglist 1 ........................... <tCastList>
  [ 10] extcall 92 .............................. <listp(tCastList)>
  [ 12] not ..................................... <not listp(tCastList)>
  [ 13] or ...................................... <voidp(tCastList) or not listp(tCastList)>
  [ 14] jmpifz [ 22] ............................ if voidp(tCastList) or not listp(tCastList) then
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setparam 2 .............................. tCastList = []
  [ 22] pushint8 1 .............................. <1>
  [ 24] setlocal 0 .............................. i = 1
  [ 26] pushint8 1 .............................. <1>
  [ 28] jmpifz [ 89] ............................ repeat while 1
  [ 31] getparam 1 .............................. <tCastVarPrefix>
  [ 33] getlocal 0 .............................. <i>
  [ 35] joinstr ................................. <tCastVarPrefix & i>
  [ 36] pusharglist 1 ........................... <tCastVarPrefix & i>
  [ 38] extcall 331 ............................. <variableExists(tCastVarPrefix & i)>
  [ 41] jmpifz [ 77] ............................ if variableExists(tCastVarPrefix & i) then / else
  [ 44] getparam 1 .............................. <tCastVarPrefix>
  [ 46] getlocal 0 .............................. <i>
  [ 48] joinstr ................................. <tCastVarPrefix & i>
  [ 49] pusharglist 1 ........................... <tCastVarPrefix & i>
  [ 51] extcall 232 ............................. <getVariable(tCastVarPrefix & i)>
  [ 53] setlocal 1 .............................. tCast = getVariable(tCastVarPrefix & i)
  [ 55] getlocal 1 .............................. <tCast>
  [ 57] pusharglist 1 ........................... <tCast>
  [ 59] extcall 699 ............................. <castExists(tCast)>
  [ 62] not ..................................... <not castExists(tCast)>
  [ 63] jmpifz [ 74] ............................ if not castExists(tCast) then
  [ 66] getparam 2 .............................. <tCastList>
  [ 68] getlocal 1 .............................. <tCast>
  [ 70] pusharglistnoret 2 ...................... <tCastList, tCast>
  [ 72] objcall 88 .............................. tCastList.add(tCast)
  [ 74] jmp [ 80]
  [ 77] jmp [ 89] ............................... exit repeat
  [ 80] getlocal 0 .............................. <i>
  [ 82] pushint8 1 .............................. <1>
  [ 84] add ..................................... <i + 1>
  [ 85] setlocal 0 .............................. i = i + 1
  [ 87] endrepeat [ 26]
  [ 89] getparam 2 .............................. <tCastList>
  [ 91] pusharglistnoret 1 ...................... <tCastList>
  [ 93] extcall 31 .............................. return tCastList
  [ 95] ret
end
