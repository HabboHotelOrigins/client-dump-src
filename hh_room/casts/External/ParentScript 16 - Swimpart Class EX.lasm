property ancestor, pPart, pmodel, pDirection, pDrawProps, pSwimProps, pAction, pActionLh, pActionRh, pMemString, pXFix, pYFix, pLastLocFix, pCacheImage, pCacheRectA, pCacheRectB, pAnimation, pAnimFrame, pTotalFrame

on deconsturct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 30 .............................. <VOID>
  [  4] setprop 1373 ............................ ancestor = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 31 .............................. return 1
  [ 13] ret
end

on define me, tPart, tmodel, tColor, tDirection, tAction, tAncestor
  [  0] getparam 6 .............................. <tAncestor>
  [  2] setprop 1373 ............................ ancestor = tAncestor
  [  5] getparam 1 .............................. <tPart>
  [  7] setprop 1334 ............................ pPart = tPart
  [ 10] getparam 2 .............................. <tmodel>
  [ 12] setprop 1374 ............................ pmodel = tmodel
  [ 15] pushsymb 1200 ........................... <#maskImage>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 93 ............................. <#ink>
  [ 21] pushzero ................................ <0>
  [ 22] pushsymb 95 ............................. <#bgColor>
  [ 24] pushzero ................................ <0>
  [ 25] pusharglist 6 ........................... <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 27] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 28] setprop 1375 ............................ pDrawProps = [#maskImage: 0, #ink: 0, #bgColor: 0]
  [ 31] pushsymb 1200 ........................... <#maskImage>
  [ 34] pushzero ................................ <0>
  [ 35] pushsymb 93 ............................. <#ink>
  [ 37] pushzero ................................ <0>
  [ 38] pushsymb 95 ............................. <#bgColor>
  [ 40] pushzero ................................ <0>
  [ 41] pushint16 156 ........................... <156>
  [ 44] pushint16 156 ........................... <156>
  [ 47] pusharglist 3 ........................... <0, 156, 156>
  [ 49] extcall 94 .............................. <rgb(0, 156, 156)>
  [ 51] pushsymb 97 ............................. <#color>
  [ 53] pushzero ................................ <0>
  [ 54] pushint16 156 ........................... <156>
  [ 57] pushint16 156 ........................... <156>
  [ 60] pusharglist 3 ........................... <0, 156, 156>
  [ 62] extcall 94 .............................. <rgb(0, 156, 156)>
  [ 64] pushsymb 436 ............................ <#blend>
  [ 67] pushint8 60 ............................. <60>
  [ 69] pusharglist 10 .......................... <[#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]>
  [ 71] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]>
  [ 72] setprop 1434 ............................ pSwimProps = [#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]
  [ 75] pushzero ................................ <0>
  [ 76] setprop 1376 ............................ pCacheImage = 0
  [ 79] pushzero ................................ <0>
  [ 80] pushzero ................................ <0>
  [ 81] pushzero ................................ <0>
  [ 82] pushzero ................................ <0>
  [ 83] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 85] extcall 137 ............................. <rect(0, 0, 0, 0)>
  [ 87] setprop 1377 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 90] pushzero ................................ <0>
  [ 91] pushzero ................................ <0>
  [ 92] pushzero ................................ <0>
  [ 93] pushzero ................................ <0>
  [ 94] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 96] extcall 137 ............................. <rect(0, 0, 0, 0)>
  [ 98] setprop 1378 ............................ pCacheRectB = rect(0, 0, 0, 0)
  [101] getparam 0 .............................. <me>
  [103] pusharglistnoret 1 ...................... <me>
  [105] objcall 1369 ............................ me.defineInk()
  [108] getparam 0 .............................. <me>
  [110] getparam 3 .............................. <tColor>
  [112] pusharglistnoret 2 ...................... <me, tColor>
  [114] objcall 1309 ............................ me.setColor(tColor)
  [117] getparam 4 .............................. <tDirection>
  [119] setprop 28 .............................. pDirection = tDirection
  [121] getparam 5 .............................. <tAction>
  [123] setprop 1379 ............................ pAction = tAction
  [126] getparam 5 .............................. <tAction>
  [128] setprop 1380 ............................ pActionLh = tAction
  [131] getparam 5 .............................. <tAction>
  [133] setprop 1337 ............................ pActionRh = tAction
  [136] pushcons 0 .............................. <EMPTY>
  [138] setprop 1381 ............................ pMemString = EMPTY
  [141] pushzero ................................ <0>
  [142] setprop 1382 ............................ pXFix = 0
  [145] pushzero ................................ <0>
  [146] setprop 1383 ............................ pYFix = 0
  [149] pushint16 1000 .......................... <1000>
  [152] pushint16 1000 .......................... <1000>
  [155] pusharglist 2 ........................... <1000, 1000>
  [157] extcall 375 ............................. <point(1000, 1000)>
  [160] setprop 1385 ............................ pLastLocFix = point(1000, 1000)
  [163] pushzero ................................ <0>
  [164] setprop 1386 ............................ pAnimation = 0
  [167] pushint8 1 .............................. <1>
  [169] setprop 1387 ............................ pAnimFrame = 1
  [172] pushint8 1 .............................. <1>
  [174] setprop 1388 ............................ pTotalFrame = 1
  [177] pushint8 1 .............................. <1>
  [179] pusharglistnoret 1 ...................... <1>
  [181] extcall 31 .............................. return 1
  [183] ret
end

on update me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tAnimCounter = 0
  [  3] getprop 1379 ............................ <pAction>
  [  6] setlocal 1 .............................. tAction = pAction
  [  8] getprop 1334 ............................ <pPart>
  [ 11] setlocal 2 .............................. tPart = pPart
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 1251 ........................... <#pFlipList>
  [ 18] getprop 28 .............................. <pDirection>
  [ 20] pushint8 1 .............................. <1>
  [ 22] add ..................................... <pDirection + 1>
  [ 23] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 25] objcall 68 .............................. <me.pFlipList[pDirection + 1]>
  [ 27] setlocal 3 .............................. tdir = me.pFlipList[pDirection + 1]
  [ 29] pushzero ................................ <0>
  [ 30] setprop 1382 ............................ pXFix = 0
  [ 33] pushzero ................................ <0>
  [ 34] setprop 1383 ............................ pYFix = 0
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 1274 ......................... <me.pAnimating>
  [ 42] jmpifz [305] ............................ if me.pAnimating then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 918 ............................. <me.animate()>
  [ 52] setlocal 4 .............................. tMemString = me.animate()
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 28 ........................... <me.pDirection>
  [ 58] setlocal 5 .............................. tAncestorDir = me.pDirection
  [ 60] getparam 0 .............................. <me>
  [ 62] getobjprop 1295 ......................... <me.pPeopleSize>
  [ 65] pushcons 1 .............................. <"sh">
  [ 67] eq ...................................... <me.pPeopleSize = "sh">
  [ 68] jmpifz [ 78] ............................ if me.pPeopleSize = "sh" then / else
  [ 71] pushcons 2 .............................. <0.69999999999999996>
  [ 73] setlocal 6 .............................. tSizeMultiplier = 0.69999999999999996
  [ 75] jmp [ 82]
  [ 78] pushint8 1 .............................. <1>
  [ 80] setlocal 6 .............................. tSizeMultiplier = 1
  [ 82] getlocal 5 .............................. <tAncestorDir>
  [ 84] peek 0 .................................. case tAncestorDir of
  [ 86] pushzero ................................ <0>
  [ 87] eq
  [ 88] jmpifz [116] ............................ (case) 0:
  [ 91] getprop 1383 ............................ <pYFix>
  [ 94] getprop 1382 ............................ <pXFix>
  [ 97] pushint8 2 .............................. <2>
  [ 99] div ..................................... <pXFix / 2>
  [100] add ..................................... <pYFix + (pXFix / 2)>
  [101] setprop 1383 ............................ pYFix = pYFix + (pXFix / 2)
  [104] getprop 1382 ............................ <pXFix>
  [107] pushint8 2 .............................. <2>
  [109] div ..................................... <pXFix / 2>
  [110] setprop 1382 ............................ pXFix = pXFix / 2
  [113] jmp [282]
  [116] peek 0
  [118] pushint8 1 .............................. <1>
  [120] eq
  [121] jmpifz [141] ............................ (case) 1:
  [124] getprop 1383 ............................ <pYFix>
  [127] getprop 1382 ............................ <pXFix>
  [130] add ..................................... <pYFix + pXFix>
  [131] setprop 1383 ............................ pYFix = pYFix + pXFix
  [134] pushzero ................................ <0>
  [135] setprop 1382 ............................ pXFix = 0
  [138] jmp [282]
  [141] peek 0
  [143] pushint8 2 .............................. <2>
  [145] eq
  [146] jmpifz [174] ............................ (case) 2:
  [149] getprop 1383 ............................ <pYFix>
  [152] getprop 1382 ............................ <pXFix>
  [155] pushint8 2 .............................. <2>
  [157] div ..................................... <pXFix / 2>
  [158] sub ..................................... <pYFix - (pXFix / 2)>
  [159] setprop 1383 ............................ pYFix = pYFix - (pXFix / 2)
  [162] getprop 1382 ............................ <pXFix>
  [165] pushint8 2 .............................. <2>
  [167] div ..................................... <pXFix / 2>
  [168] setprop 1382 ............................ pXFix = pXFix / 2
  [171] jmp [282]
  [174] peek 0
  [176] pushint8 4 .............................. <4>
  [178] eq
  [179] jmpifz [208] ............................ (case) 4:
  [182] getprop 1383 ............................ <pYFix>
  [185] getprop 1382 ............................ <pXFix>
  [188] pushint8 2 .............................. <2>
  [190] div ..................................... <pXFix / 2>
  [191] add ..................................... <pYFix + (pXFix / 2)>
  [192] setprop 1383 ............................ pYFix = pYFix + (pXFix / 2)
  [195] getprop 1382 ............................ <pXFix>
  [198] inv ..................................... <-pXFix>
  [199] pushint8 2 .............................. <2>
  [201] div ..................................... <-pXFix / 2>
  [202] setprop 1382 ............................ pXFix = -pXFix / 2
  [205] jmp [282]
  [208] peek 0
  [210] pushint8 5 .............................. <5>
  [212] eq
  [213] jmpifz [233] ............................ (case) 5:
  [216] getprop 1383 ............................ <pYFix>
  [219] getprop 1382 ............................ <pXFix>
  [222] sub ..................................... <pYFix - pXFix>
  [223] setprop 1383 ............................ pYFix = pYFix - pXFix
  [226] pushzero ................................ <0>
  [227] setprop 1382 ............................ pXFix = 0
  [230] jmp [282]
  [233] peek 0
  [235] pushint8 6 .............................. <6>
  [237] eq
  [238] jmpifz [267] ............................ (case) 6:
  [241] getprop 1383 ............................ <pYFix>
  [244] getprop 1382 ............................ <pXFix>
  [247] pushint8 2 .............................. <2>
  [249] div ..................................... <pXFix / 2>
  [250] sub ..................................... <pYFix - (pXFix / 2)>
  [251] setprop 1383 ............................ pYFix = pYFix - (pXFix / 2)
  [254] getprop 1382 ............................ <pXFix>
  [257] inv ..................................... <-pXFix>
  [258] pushint8 2 .............................. <2>
  [260] div ..................................... <-pXFix / 2>
  [261] setprop 1382 ............................ pXFix = -pXFix / 2
  [264] jmp [282]
  [267] peek 0
  [269] pushint8 7 .............................. <7>
  [271] eq
  [272] jmpifz [282] ............................ (case) 7:
  [275] getprop 1382 ............................ <pXFix>
  [278] inv ..................................... <-pXFix>
  [279] setprop 1382 ............................ pXFix = -pXFix
  [282] pop 1 ................................... end case
  [284] getprop 1382 ............................ <pXFix>
  [287] getlocal 6 .............................. <tSizeMultiplier>
  [289] mul ..................................... <pXFix * tSizeMultiplier>
  [290] setprop 1382 ............................ pXFix = pXFix * tSizeMultiplier
  [293] getprop 1383 ............................ <pYFix>
  [296] getlocal 6 .............................. <tSizeMultiplier>
  [298] mul ..................................... <pYFix * tSizeMultiplier>
  [299] setprop 1383 ............................ pYFix = pYFix * tSizeMultiplier
  [302] jmp [928]
  [305] getprop 1334 ............................ <pPart>
  [308] peek 0 .................................. case pPart of
  [310] pushcons 3 .............................. <"bd">
  [312] nteq
  [313] jmpifz [332] ............................ (case) "bd", ...
  [316] peek 0
  [318] pushcons 4 .............................. <"lg">
  [320] nteq
  [321] jmpifz [332] ............................ (case) ..., "lg", ...
  [324] peek 0
  [326] pushcons 1 .............................. <"sh">
  [328] eq
  [329] jmpifz [369] ............................ (case) ..., "sh":
  [332] pushint8 1 .............................. <1>
  [334] setlocal 7 .............................. tUnderWater = 1
  [336] getprop 1379 ............................ <pAction>
  [339] pushcons 5 .............................. <"wlk">
  [341] eq ...................................... <pAction = "wlk">
  [342] getprop 1379 ............................ <pAction>
  [345] pushcons 6 .............................. <"swm">
  [347] eq ...................................... <pAction = "swm">
  [348] or ...................................... <(pAction = "wlk") or (pAction = "swm")>
  [349] getprop 1379 ............................ <pAction>
  [352] pushcons 7 .............................. <"sws">
  [354] eq ...................................... <pAction = "sws">
  [355] or ...................................... <(pAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [356] jmpifz [366] ............................ if (pAction = "wlk") or (pAction = "swm") or (pAction = "sws") then
  [359] getparam 0 .............................. <me>
  [361] getobjprop 1259 ......................... <me.pAnimCounter>
  [364] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [366] jmp [888]
  [369] peek 0
  [371] pushcons 8 .............................. <"lh">
  [373] nteq
  [374] jmpifz [385] ............................ (case) "lh", ...
  [377] peek 0
  [379] pushcons 9 .............................. <"ls">
  [381] eq
  [382] jmpifz [538] ............................ (case) ..., "ls":
  [385] pushint8 1 .............................. <1>
  [387] setlocal 7 .............................. tUnderWater = 1
  [389] getprop 28 .............................. <pDirection>
  [391] getlocal 3 .............................. <tdir>
  [393] eq ...................................... <pDirection = tdir>
  [394] jmpifz [416] ............................ if pDirection = tdir then / else
  [397] getprop 1380 ............................ <pActionLh>
  [400] pusharglist 1 ........................... <pActionLh>
  [402] extcall 120 ............................. <voidp(pActionLh)>
  [404] not ..................................... <not voidp(pActionLh)>
  [405] jmpifz [413] ............................ if not voidp(pActionLh) then
  [408] getprop 1380 ............................ <pActionLh>
  [411] setlocal 1 .............................. tAction = pActionLh
  [413] jmp [432]
  [416] getprop 1337 ............................ <pActionRh>
  [419] pusharglist 1 ........................... <pActionRh>
  [421] extcall 120 ............................. <voidp(pActionRh)>
  [423] not ..................................... <not voidp(pActionRh)>
  [424] jmpifz [432] ............................ if not voidp(pActionRh) then
  [427] getprop 1337 ............................ <pActionRh>
  [430] setlocal 1 .............................. tAction = pActionRh
  [432] getlocal 1 .............................. <tAction>
  [434] pushcons 5 .............................. <"wlk">
  [436] eq ...................................... <tAction = "wlk">
  [437] getprop 1379 ............................ <pAction>
  [440] pushcons 6 .............................. <"swm">
  [442] eq ...................................... <pAction = "swm">
  [443] or ...................................... <(tAction = "wlk") or (pAction = "swm")>
  [444] getprop 1379 ............................ <pAction>
  [447] pushcons 7 .............................. <"sws">
  [449] eq ...................................... <pAction = "sws">
  [450] or ...................................... <(tAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [451] jmpifz [464] ............................ if (tAction = "wlk") or (pAction = "swm") or (pAction = "sws") then / else
  [454] getparam 0 .............................. <me>
  [456] getobjprop 1259 ......................... <me.pAnimCounter>
  [459] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [461] jmp [535]
  [464] getlocal 1 .............................. <tAction>
  [466] pushcons 10 ............................. <"wav">
  [468] eq ...................................... <tAction = "wav">
  [469] jmpifz [488] ............................ if tAction = "wav" then / else
  [472] pushzero ................................ <0>
  [473] setlocal 7 .............................. tUnderWater = 0
  [475] getparam 0 .............................. <me>
  [477] getobjprop 1259 ......................... <me.pAnimCounter>
  [480] pushint8 2 .............................. <2>
  [482] mod ..................................... <me.pAnimCounter mod 2>
  [483] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [485] jmp [535]
  [488] pushcons 11 ............................. <"crr">
  [490] pushcons 12 ............................. <"drk">
  [492] pushcons 13 ............................. <"ohd">
  [494] pusharglist 3 ........................... <["crr", "drk", "ohd"]>
  [496] pushlist ................................ <["crr", "drk", "ohd"]>
  [497] getlocal 1 .............................. <tAction>
  [499] pusharglist 2 ........................... <["crr", "drk", "ohd"], tAction>
  [501] objcall 332 ............................. <["crr", "drk", "ohd"].getPos(tAction)>
  [504] pushzero ................................ <0>
  [505] nteq .................................... <["crr", "drk", "ohd"].getPos(tAction) <> 0>
  [506] jmpifz [535] ............................ if ["crr", "drk", "ohd"].getPos(tAction) <> 0 then
  [509] pushint8 40 ............................. <40>
  [511] inv ..................................... <-40>
  [512] setprop 1382 ............................ pXFix = -40
  [515] pushcons 14 ............................. <"r">
  [517] getprop 1334 ............................ <pPart>
  [520] pushsymb 66 ............................. <#char>
  [522] pushint8 2 .............................. <2>
  [524] pusharglist 3 ........................... <pPart, #char, 2>
  [526] objcall 68 .............................. <pPart.char[2]>
  [528] joinstr ................................. <"r" & pPart.char[2]>
  [529] setlocal 2 .............................. tPart = "r" & pPart.char[2]
  [531] getprop 28 .............................. <pDirection>
  [533] setlocal 3 .............................. tdir = pDirection
  [535] jmp [888]
  [538] peek 0
  [540] pushcons 15 ............................. <"rh">
  [542] nteq
  [543] jmpifz [554] ............................ (case) "rh", ...
  [546] peek 0
  [548] pushcons 16 ............................. <"rs">
  [550] eq
  [551] jmpifz [677] ............................ (case) ..., "rs":
  [554] pushint8 1 .............................. <1>
  [556] setlocal 7 .............................. tUnderWater = 1
  [558] getprop 28 .............................. <pDirection>
  [560] getlocal 3 .............................. <tdir>
  [562] eq ...................................... <pDirection = tdir>
  [563] jmpifz [585] ............................ if pDirection = tdir then / else
  [566] getprop 1337 ............................ <pActionRh>
  [569] pusharglist 1 ........................... <pActionRh>
  [571] extcall 120 ............................. <voidp(pActionRh)>
  [573] not ..................................... <not voidp(pActionRh)>
  [574] jmpifz [582] ............................ if not voidp(pActionRh) then
  [577] getprop 1337 ............................ <pActionRh>
  [580] setlocal 1 .............................. tAction = pActionRh
  [582] jmp [601]
  [585] getprop 1380 ............................ <pActionLh>
  [588] pusharglist 1 ........................... <pActionLh>
  [590] extcall 120 ............................. <voidp(pActionLh)>
  [592] not ..................................... <not voidp(pActionLh)>
  [593] jmpifz [601] ............................ if not voidp(pActionLh) then
  [596] getprop 1380 ............................ <pActionLh>
  [599] setlocal 1 .............................. tAction = pActionLh
  [601] getlocal 1 .............................. <tAction>
  [603] pushcons 5 .............................. <"wlk">
  [605] eq ...................................... <tAction = "wlk">
  [606] getprop 1379 ............................ <pAction>
  [609] pushcons 6 .............................. <"swm">
  [611] eq ...................................... <pAction = "swm">
  [612] or ...................................... <(tAction = "wlk") or (pAction = "swm")>
  [613] getprop 1379 ............................ <pAction>
  [616] pushcons 7 .............................. <"sws">
  [618] eq ...................................... <pAction = "sws">
  [619] or ...................................... <(tAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [620] jmpifz [633] ............................ if (tAction = "wlk") or (pAction = "swm") or (pAction = "sws") then / else
  [623] getparam 0 .............................. <me>
  [625] getobjprop 1259 ......................... <me.pAnimCounter>
  [628] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [630] jmp [674]
  [633] getlocal 1 .............................. <tAction>
  [635] pushcons 10 ............................. <"wav">
  [637] eq ...................................... <tAction = "wav">
  [638] jmpifz [674] ............................ if tAction = "wav" then
  [641] pushzero ................................ <0>
  [642] setlocal 7 .............................. tUnderWater = 0
  [644] getparam 0 .............................. <me>
  [646] getobjprop 1259 ......................... <me.pAnimCounter>
  [649] pushint8 2 .............................. <2>
  [651] mod ..................................... <me.pAnimCounter mod 2>
  [652] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [654] pushcons 17 ............................. <"l">
  [656] getprop 1334 ............................ <pPart>
  [659] pushsymb 66 ............................. <#char>
  [661] pushint8 2 .............................. <2>
  [663] pusharglist 3 ........................... <pPart, #char, 2>
  [665] objcall 68 .............................. <pPart.char[2]>
  [667] joinstr ................................. <"l" & pPart.char[2]>
  [668] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [670] getprop 28 .............................. <pDirection>
  [672] setlocal 3 .............................. tdir = pDirection
  [674] jmp [888]
  [677] peek 0
  [679] pushcons 18 ............................. <"hd">
  [681] nteq
  [682] jmpifz [693] ............................ (case) "hd", ...
  [685] peek 0
  [687] pushcons 19 ............................. <"fc">
  [689] eq
  [690] jmpifz [737] ............................ (case) ..., "fc":
  [693] pushzero ................................ <0>
  [694] setlocal 7 .............................. tUnderWater = 0
  [696] getparam 0 .............................. <me>
  [698] getobjprop 1267 ......................... <me.pTalking>
  [701] jmpifz [734] ............................ if me.pTalking then
  [704] getprop 1379 ............................ <pAction>
  [707] pushcons 20 ............................. <"lay">
  [709] eq ...................................... <pAction = "lay">
  [710] jmpifz [720] ............................ if pAction = "lay" then / else
  [713] pushcons 21 ............................. <"lsp">
  [715] setlocal 1 .............................. tAction = "lsp"
  [717] jmp [724]
  [720] pushcons 22 ............................. <"spk">
  [722] setlocal 1 .............................. tAction = "spk"
  [724] getparam 0 .............................. <me>
  [726] getobjprop 1259 ......................... <me.pAnimCounter>
  [729] pushint8 2 .............................. <2>
  [731] mod ..................................... <me.pAnimCounter mod 2>
  [732] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [734] jmp [888]
  [737] peek 0
  [739] pushcons 23 ............................. <"ey">
  [741] eq
  [742] jmpifz [783] ............................ (case) "ey":
  [745] pushzero ................................ <0>
  [746] setlocal 7 .............................. tUnderWater = 0
  [748] getparam 0 .............................. <me>
  [750] getobjprop 1267 ......................... <me.pTalking>
  [753] getprop 1379 ............................ <pAction>
  [756] pushcons 20 ............................. <"lay">
  [758] nteq .................................... <pAction <> "lay">
  [759] and ..................................... <me.pTalking and (pAction <> "lay")>
  [760] getparam 0 .............................. <me>
  [762] getobjprop 1259 ......................... <me.pAnimCounter>
  [765] pushint8 2 .............................. <2>
  [767] mod ..................................... <me.pAnimCounter mod 2>
  [768] pushzero ................................ <0>
  [769] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [770] and ..................................... <me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0)>
  [771] jmpifz [780] ............................ if me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0) then
  [774] pushint8 1 .............................. <1>
  [776] inv ..................................... <-1>
  [777] setprop 1383 ............................ pYFix = -1
  [780] jmp [888]
  [783] peek 0
  [785] pushcons 24 ............................. <"hr">
  [787] eq
  [788] jmpifz [829] ............................ (case) "hr":
  [791] pushzero ................................ <0>
  [792] setlocal 7 .............................. tUnderWater = 0
  [794] getparam 0 .............................. <me>
  [796] getobjprop 1267 ......................... <me.pTalking>
  [799] getparam 0 .............................. <me>
  [801] getobjprop 1259 ......................... <me.pAnimCounter>
  [804] pushint8 2 .............................. <2>
  [806] mod ..................................... <me.pAnimCounter mod 2>
  [807] pushzero ................................ <0>
  [808] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [809] and ..................................... <me.pTalking and ((me.pAnimCounter mod 2) = 0)>
  [810] jmpifz [826] ............................ if me.pTalking and ((me.pAnimCounter mod 2) = 0) then
  [813] getprop 1379 ............................ <pAction>
  [816] pushcons 20 ............................. <"lay">
  [818] nteq .................................... <pAction <> "lay">
  [819] jmpifz [826] ............................ if pAction <> "lay" then
  [822] pushcons 22 ............................. <"spk">
  [824] setlocal 1 .............................. tAction = "spk"
  [826] jmp [888]
  [829] peek 0
  [831] pushcons 25 ............................. <"ri">
  [833] eq
  [834] jmpifz [864] ............................ (case) "ri":
  [837] getparam 0 .............................. <me>
  [839] getobjprop 1268 ......................... <me.pCarrying>
  [842] not ..................................... <not me.pCarrying>
  [843] jmpifz [852] ............................ if not me.pCarrying then
  [846] pop 1
  [848] pusharglistnoret 0 ...................... <>
  [850] extcall 31 .............................. return 
  [852] getprop 1337 ............................ <pActionRh>
  [855] setlocal 1 .............................. tAction = pActionRh
  [857] getprop 28 .............................. <pDirection>
  [859] setlocal 3 .............................. tdir = pDirection
  [861] jmp [888]
  [864] peek 0
  [866] pushcons 26 ............................. <"li">
  [868] eq
  [869] jmpifz [884] ............................ (case) "li":
  [872] getprop 1380 ............................ <pActionLh>
  [875] setlocal 1 .............................. tAction = pActionLh
  [877] getprop 28 .............................. <pDirection>
  [879] setlocal 3 .............................. tdir = pDirection
  [881] jmp [888] ............................... (case) otherwise:
  [884] pushint8 1 .............................. <1>
  [886] setlocal 7 .............................. tUnderWater = 1
  [888] pop 1 ................................... end case
  [890] getparam 0 .............................. <me>
  [892] getobjprop 1295 ......................... <me.pPeopleSize>
  [895] pushcons 27 ............................. <"_">
  [897] joinstr ................................. <me.pPeopleSize & "_">
  [898] getlocal 1 .............................. <tAction>
  [900] joinstr ................................. <me.pPeopleSize & "_" & tAction>
  [901] pushcons 27 ............................. <"_">
  [903] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_">
  [904] getlocal 2 .............................. <tPart>
  [906] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart>
  [907] pushcons 27 ............................. <"_">
  [909] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_">
  [910] getprop 1374 ............................ <pmodel>
  [913] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel>
  [914] pushcons 27 ............................. <"_">
  [916] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_">
  [917] getlocal 3 .............................. <tdir>
  [919] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir>
  [920] pushcons 27 ............................. <"_">
  [922] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_">
  [923] getlocal 0 .............................. <tAnimCounter>
  [925] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCounter>
  [926] setlocal 4 .............................. tMemString = me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCounter
  [928] getprop 1385 ............................ <pLastLocFix>
  [931] getprop 1382 ............................ <pXFix>
  [934] getprop 1383 ............................ <pYFix>
  [937] pusharglist 2 ........................... <pXFix, pYFix>
  [939] extcall 375 ............................. <point(pXFix, pYFix)>
  [942] nteq .................................... <pLastLocFix <> point(pXFix, pYFix)>
  [943] setlocal 8 .............................. tLocFixChanged = pLastLocFix <> point(pXFix, pYFix)
  [945] getprop 1382 ............................ <pXFix>
  [948] getprop 1383 ............................ <pYFix>
  [951] pusharglist 2 ........................... <pXFix, pYFix>
  [953] extcall 375 ............................. <point(pXFix, pYFix)>
  [956] setprop 1385 ............................ pLastLocFix = point(pXFix, pYFix)
  [959] getprop 1381 ............................ <pMemString>
  [962] getlocal 4 .............................. <tMemString>
  [964] nteq .................................... <pMemString <> tMemString>
  [965] getlocal 8 .............................. <tLocFixChanged>
  [967] or ...................................... <(pMemString <> tMemString) or tLocFixChanged>
  [968] jmpifz [1142] ........................... if (pMemString <> tMemString) or tLocFixChanged then
  [971] getlocal 4 .............................. <tMemString>
  [973] pusharglist 1 ........................... <tMemString>
  [975] extcall 65 .............................. <getmemnum(tMemString)>
  [977] setlocal 9 .............................. tMemNum = getmemnum(tMemString)
  [979] getlocal 9 .............................. <tMemNum>
  [981] pushzero ................................ <0>
  [982] gt ...................................... <tMemNum > 0>
  [983] jmpifz [1138] ........................... if tMemNum > 0 then / else
  [986] getlocal 4 .............................. <tMemString>
  [988] setprop 1381 ............................ pMemString = tMemString
  [991] getlocal 9 .............................. <tMemNum>
  [993] pusharglist 1 ........................... <tMemNum>
  [995] extcall 64 .............................. <member(tMemNum)>
  [997] setlocal 10 ............................. tmember = member(tMemNum)
  [999] getlocal 10 ............................. <tmember>
  [1001] getobjprop 118 ......................... <tmember.regPoint>
  [1003] setlocal 11 ............................ tRegPnt = tmember.regPoint
  [1005] getlocal 11 ............................ <tRegPnt>
  [1007] pushint8 1 ............................. <1>
  [1009] pusharglist 2 .......................... <tRegPnt, 1>
  [1011] objcall 34 ............................. <tRegPnt[1]>
  [1013] inv .................................... <-tRegPnt[1]>
  [1014] setlocal 12 ............................ tX = -tRegPnt[1]
  [1016] getparam 0 ............................. <me>
  [1018] getchainedprop 1292 .................... <me.pBuffer>
  [1021] getchainedprop 137 ..................... <me.pBuffer.rect>
  [1023] getobjprop 81 .......................... <me.pBuffer.rect.height>
  [1025] getlocal 11 ............................ <tRegPnt>
  [1027] pushint8 2 ............................. <2>
  [1029] pusharglist 2 .......................... <tRegPnt, 2>
  [1031] objcall 34 ............................. <tRegPnt[2]>
  [1033] sub .................................... <me.pBuffer.rect.height - tRegPnt[2]>
  [1034] pushint8 10 ............................ <10>
  [1036] sub .................................... <me.pBuffer.rect.height - tRegPnt[2] - 10>
  [1037] setlocal 13 ............................ tY = me.pBuffer.rect.height - tRegPnt[2] - 10
  [1039] getparam 0 ............................. <me>
  [1041] getparam 0 ............................. <me>
  [1043] getobjprop 1253 ........................ <me.pUpdateRect>
  [1046] getprop 1377 ........................... <pCacheRectA>
  [1049] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1051] extcall 1390 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1054] setobjprop 1253 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1057] getlocal 10 ............................ <tmember>
  [1059] getobjprop 63 .......................... <tmember.image>
  [1061] setprop 1376 ........................... pCacheImage = tmember.image
  [1064] getlocal 12 ............................ <tX>
  [1066] getlocal 13 ............................ <tY>
  [1068] getlocal 12 ............................ <tX>
  [1070] getprop 1376 ........................... <pCacheImage>
  [1073] getobjprop 80 .......................... <pCacheImage.width>
  [1075] add .................................... <tX + pCacheImage.width>
  [1076] getlocal 13 ............................ <tY>
  [1078] getprop 1376 ........................... <pCacheImage>
  [1081] getobjprop 81 .......................... <pCacheImage.height>
  [1083] add .................................... <tY + pCacheImage.height>
  [1084] pusharglist 4 .......................... <tX, tY, tX + pCacheImage.width, tY + pCacheImage.height>
  [1086] extcall 137 ............................ <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)>
  [1088] setprop 1377 ........................... pCacheRectA = rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)
  [1091] getprop 1376 ........................... <pCacheImage>
  [1094] getobjprop 137 ......................... <pCacheImage.rect>
  [1096] setprop 1378 ........................... pCacheRectB = pCacheImage.rect
  [1099] getprop 1375 ........................... <pDrawProps>
  [1102] pushsymb 1200 .......................... <#maskImage>
  [1105] getprop 1376 ........................... <pCacheImage>
  [1108] pusharglist 1 .......................... <pCacheImage>
  [1110] objcall 1201 ........................... <pCacheImage.createMatte()>
  [1113] pusharglistnoret 3 ..................... <pDrawProps, #maskImage, pCacheImage.createMatte()>
  [1115] objcall 59 ............................. pDrawProps[#maskImage] = pCacheImage.createMatte()
  [1117] getparam 0 ............................. <me>
  [1119] getparam 0 ............................. <me>
  [1121] getobjprop 1253 ........................ <me.pUpdateRect>
  [1124] getprop 1377 ........................... <pCacheRectA>
  [1127] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1129] extcall 1390 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1132] setobjprop 1253 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1135] jmp [1142]
  [1138] pusharglistnoret 0 ..................... <>
  [1140] extcall 31 ............................. return 
  [1142] getparam 0 ............................. <me>
  [1144] getobjprop 1265 ........................ <me.pMainAction>
  [1147] pushcons 6 ............................. <"swm">
  [1149] eq ..................................... <me.pMainAction = "swm">
  [1150] jmpifz [1199] .......................... if me.pMainAction = "swm" then / else
  [1153] pushint8 14 ............................ <14>
  [1155] pushzero ............................... <0>
  [1156] pushint8 14 ............................ <14>
  [1158] pushzero ............................... <0>
  [1159] pusharglist 4 .......................... <14, 0, 14, 0>
  [1161] extcall 137 ............................ <rect(14, 0, 14, 0)>
  [1163] getparam 0 ............................. <me>
  [1165] getobjprop 1252 ........................ <me.pLocFix>
  [1168] getparam 0 ............................. <me>
  [1170] getobjprop 1252 ........................ <me.pLocFix>
  [1173] pusharglist 2 .......................... <me.pLocFix, me.pLocFix>
  [1175] extcall 137 ............................ <rect(me.pLocFix, me.pLocFix)>
  [1177] add .................................... <rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix)>
  [1178] getprop 1382 ........................... <pXFix>
  [1181] getprop 1383 ........................... <pYFix>
  [1184] getprop 1382 ........................... <pXFix>
  [1187] getprop 1383 ........................... <pYFix>
  [1190] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1192] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1193] add .................................... <rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]>
  [1194] setlocal 14 ............................ tRectMod = rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]
  [1196] jmp [1231]
  [1199] getparam 0 ............................. <me>
  [1201] getobjprop 1252 ........................ <me.pLocFix>
  [1204] getparam 0 ............................. <me>
  [1206] getobjprop 1252 ........................ <me.pLocFix>
  [1209] pusharglist 2 .......................... <me.pLocFix, me.pLocFix>
  [1211] extcall 137 ............................ <rect(me.pLocFix, me.pLocFix)>
  [1213] getprop 1382 ........................... <pXFix>
  [1216] getprop 1383 ........................... <pYFix>
  [1219] getprop 1382 ........................... <pXFix>
  [1222] getprop 1383 ........................... <pYFix>
  [1225] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1227] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1228] add .................................... <rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]>
  [1229] setlocal 14 ............................ tRectMod = rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]
  [1231] getparam 0 ............................. <me>
  [1233] getchainedprop 1292 .................... <me.pBuffer>
  [1236] getprop 1376 ........................... <pCacheImage>
  [1239] getprop 1377 ........................... <pCacheRectA>
  [1242] getlocal 14 ............................ <tRectMod>
  [1244] add .................................... <pCacheRectA + tRectMod>
  [1245] getprop 1378 ........................... <pCacheRectB>
  [1248] getprop 1375 ........................... <pDrawProps>
  [1251] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pDrawProps>
  [1253] objcall 400 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pDrawProps)
  [1256] getlocal 7 ............................. <tUnderWater>
  [1258] getparam 0 ............................. <me>
  [1260] getobjprop 1275 ........................ <me.pSwim>
  [1263] and .................................... <tUnderWater and me.pSwim>
  [1264] jmpifz [1312] .......................... if tUnderWater and me.pSwim then
  [1267] getprop 1434 ........................... <pSwimProps>
  [1270] pushsymb 1200 .......................... <#maskImage>
  [1273] getprop 1375 ........................... <pDrawProps>
  [1276] pushsymb 1200 .......................... <#maskImage>
  [1279] pusharglist 2 .......................... <pDrawProps, #maskImage>
  [1281] objcall 34 ............................. <pDrawProps[#maskImage]>
  [1283] pusharglistnoret 3 ..................... <pSwimProps, #maskImage, pDrawProps[#maskImage]>
  [1285] objcall 59 ............................. pSwimProps[#maskImage] = pDrawProps[#maskImage]
  [1287] getparam 0 ............................. <me>
  [1289] getchainedprop 1292 .................... <me.pBuffer>
  [1292] getprop 1376 ........................... <pCacheImage>
  [1295] getprop 1377 ........................... <pCacheRectA>
  [1298] getlocal 14 ............................ <tRectMod>
  [1300] add .................................... <pCacheRectA + tRectMod>
  [1301] getprop 1378 ........................... <pCacheRectB>
  [1304] getprop 1434 ........................... <pSwimProps>
  [1307] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pSwimProps>
  [1309] objcall 400 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pSwimProps)
  [1312] ret
end

on render me
  [  0] getprop 1381 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 62 .............................. <memberExists(pMemString)>
  [  7] jmpifz [113] ............................ if memberExists(pMemString) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 1292 ..................... <me.pBuffer>
  [ 15] getprop 1378 ............................ <pCacheRectB>
  [ 18] getprop 1377 ............................ <pCacheRectA>
  [ 21] getprop 1378 ............................ <pCacheRectB>
  [ 24] getprop 1375 ............................ <pDrawProps>
  [ 27] pusharglistnoret 5 ...................... <me.pBuffer, pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps>
  [ 29] objcall 400 ............................. me.pBuffer.copyPixels(pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps)
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 1275 ......................... <me.pSwim>
  [ 37] jmpifz [113] ............................ if me.pSwim then
  [ 40] getprop 1434 ............................ <pSwimProps>
  [ 43] pushsymb 1200 ........................... <#maskImage>
  [ 46] getprop 1375 ............................ <pDrawProps>
  [ 49] pushsymb 1200 ........................... <#maskImage>
  [ 52] pusharglist 2 ........................... <pDrawProps, #maskImage>
  [ 54] objcall 34 .............................. <pDrawProps[#maskImage]>
  [ 56] pusharglistnoret 3 ...................... <pSwimProps, #maskImage, pDrawProps[#maskImage]>
  [ 58] objcall 59 .............................. pSwimProps[#maskImage] = pDrawProps[#maskImage]
  [ 60] getparam 0 .............................. <me>
  [ 62] getchainedprop 1292 ..................... <me.pBuffer>
  [ 65] getprop 1376 ............................ <pCacheImage>
  [ 68] getprop 1377 ............................ <pCacheRectA>
  [ 71] getprop 1382 ............................ <pXFix>
  [ 74] getprop 1383 ............................ <pYFix>
  [ 77] getprop 1382 ............................ <pXFix>
  [ 80] getprop 1383 ............................ <pYFix>
  [ 83] pusharglist 4 ........................... <[pXFix, pYFix, pXFix, pYFix]>
  [ 85] pushlist ................................ <[pXFix, pYFix, pXFix, pYFix]>
  [ 86] add ..................................... <pCacheRectA + [pXFix, pYFix, pXFix, pYFix]>
  [ 87] getparam 0 .............................. <me>
  [ 89] getobjprop 1252 ......................... <me.pLocFix>
  [ 92] getparam 0 .............................. <me>
  [ 94] getobjprop 1252 ......................... <me.pLocFix>
  [ 97] pusharglist 2 ........................... <me.pLocFix, me.pLocFix>
  [ 99] extcall 137 ............................. <rect(me.pLocFix, me.pLocFix)>
  [101] add ..................................... <pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix)>
  [102] getprop 1378 ............................ <pCacheRectB>
  [105] getprop 1434 ............................ <pSwimProps>
  [108] pusharglistnoret 5 ...................... <me.pBuffer, pCacheImage, pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix), pCacheRectB, pSwimProps>
  [110] objcall 400 ............................. me.pBuffer.copyPixels(pCacheImage, pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix), pCacheRectB, pSwimProps)
  [113] ret
end

on setItemObj me, tmodel
  [  0] getprop 1334 ............................ <pPart>
  [  3] pushcons 25 ............................. <"ri">
  [  5] nteq .................................... <pPart <> "ri">
  [  6] getprop 1334 ............................ <pPart>
  [  9] pushcons 26 ............................. <"li">
  [ 11] nteq .................................... <pPart <> "li">
  [ 12] and ..................................... <(pPart <> "ri") and (pPart <> "li")>
  [ 13] jmpifz [ 20] ............................ if (pPart <> "ri") and (pPart <> "li") then
  [ 16] pusharglistnoret 0 ...................... <>
  [ 18] extcall 31 .............................. return 
  [ 20] getparam 1 .............................. <tmodel>
  [ 22] setprop 1374 ............................ pmodel = tmodel
  [ 25] ret
end

on defineDir me, tdir, tPart
  [  0] getparam 2 .............................. <tPart>
  [  2] pusharglist 1 ........................... <tPart>
  [  4] extcall 120 ............................. <voidp(tPart)>
  [  6] getparam 2 .............................. <tPart>
  [  8] getprop 1334 ............................ <pPart>
  [ 11] eq ...................................... <tPart = pPart>
  [ 12] or ...................................... <voidp(tPart) or (tPart = pPart)>
  [ 13] jmpifz [ 20] ............................ if voidp(tPart) or (tPart = pPart) then
  [ 16] getparam 1 .............................. <tdir>
  [ 18] setprop 28 .............................. pDirection = tdir
  [ 20] ret
end

on defineDirMultiple me, tdir, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1334 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 332 ............................. <tTargetPartList.getPos(pPart)>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tTargetPartList.getPos(pPart) = 0>
  [ 12] jmpifz [ 19] ............................ if tTargetPartList.getPos(pPart) = 0 then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 31 .............................. return 
  [ 19] getparam 1 .............................. <tdir>
  [ 21] setprop 28 .............................. pDirection = tdir
  [ 23] ret
end

on defineAct me, tAct, tTargetPartList
  [  0] getprop 1379 ............................ <pAction>
  [  3] pushcons 28 ............................. <"std">
  [  5] eq ...................................... <pAction = "std">
  [  6] jmpifz [ 14] ............................ if pAction = "std" then
  [  9] getparam 1 .............................. <tAct>
  [ 11] setprop 1379 ............................ pAction = tAct
  [ 14] ret
end

on defineActMultiple me, tAct, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1334 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 332 ............................. <tTargetPartList.getPos(pPart)>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tTargetPartList.getPos(pPart) = 0>
  [ 12] jmpifz [ 19] ............................ if tTargetPartList.getPos(pPart) = 0 then
  [ 15] pusharglistnoret 0 ...................... <>
  [ 17] extcall 31 .............................. return 
  [ 19] getprop 1379 ............................ <pAction>
  [ 22] pushcons 28 ............................. <"std">
  [ 24] eq ...................................... <pAction = "std">
  [ 25] jmpifz [ 33] ............................ if pAction = "std" then
  [ 28] getparam 1 .............................. <tAct>
  [ 30] setprop 1379 ............................ pAction = tAct
  [ 33] getprop 1334 ............................ <pPart>
  [ 36] pushcons 23 ............................. <"ey">
  [ 38] eq ...................................... <pPart = "ey">
  [ 39] getparam 1 .............................. <tAct>
  [ 41] pushcons 28 ............................. <"std">
  [ 43] eq ...................................... <tAct = "std">
  [ 44] and ..................................... <(pPart = "ey") and (tAct = "std")>
  [ 45] jmpifz [ 53] ............................ if (pPart = "ey") and (tAct = "std") then
  [ 48] pushcons 28 ............................. <"std">
  [ 50] setprop 1379 ............................ pAction = "std"
  [ 53] ret
end

on defineInk me, tInk
  [  0] getparam 1 .............................. <tInk>
  [  2] pusharglist 1 ........................... <tInk>
  [  4] extcall 120 ............................. <voidp(tInk)>
  [  6] jmpifz [ 78] ............................ if voidp(tInk) then
  [  9] getprop 1334 ............................ <pPart>
  [ 12] peek 0 .................................. case pPart of
  [ 14] pushcons 23 ............................. <"ey">
  [ 16] eq
  [ 17] jmpifz [ 27] ............................ (case) "ey":
  [ 20] pushint8 36 ............................. <36>
  [ 22] setparam 1 .............................. tInk = 36
  [ 24] jmp [ 76]
  [ 27] peek 0
  [ 29] pushcons 29 ............................. <"sd">
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) "sd":
  [ 35] pushint8 32 ............................. <32>
  [ 37] setparam 1 .............................. tInk = 32
  [ 39] jmp [ 76]
  [ 42] peek 0
  [ 44] pushcons 25 ............................. <"ri">
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) "ri":
  [ 50] pushint8 8 .............................. <8>
  [ 52] setparam 1 .............................. tInk = 8
  [ 54] jmp [ 76]
  [ 57] peek 0
  [ 59] pushcons 26 ............................. <"li">
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) "li":
  [ 65] pushint8 8 .............................. <8>
  [ 67] setparam 1 .............................. tInk = 8
  [ 69] jmp [ 76] ............................... (case) otherwise:
  [ 72] pushint8 41 ............................. <41>
  [ 74] setparam 1 .............................. tInk = 41
  [ 76] pop 1 ................................... end case
  [ 78] getprop 1375 ............................ <pDrawProps>
  [ 81] pushsymb 93 ............................. <#ink>
  [ 83] getparam 1 .............................. <tInk>
  [ 85] pusharglistnoret 3 ...................... <pDrawProps, #ink, tInk>
  [ 87] objcall 59 .............................. pDrawProps[#ink] = tInk
  [ 89] getprop 1434 ............................ <pSwimProps>
  [ 92] pushsymb 93 ............................. <#ink>
  [ 94] getparam 1 .............................. <tInk>
  [ 96] pusharglistnoret 3 ...................... <pSwimProps, #ink, tInk>
  [ 98] objcall 59 .............................. pSwimProps[#ink] = tInk
  [100] pushint8 1 .............................. <1>
  [102] pusharglistnoret 1 ...................... <1>
  [104] extcall 31 .............................. return 1
  [106] ret
end

on setModel me, tmodel
  [  0] getparam 1 .............................. <tmodel>
  [  2] setprop 1374 ............................ pmodel = tmodel
  [  5] ret
end

on setColor me, tColor
  [  0] getparam 1 .............................. <tColor>
  [  2] pusharglist 1 ........................... <tColor>
  [  4] extcall 120 ............................. <voidp(tColor)>
  [  6] jmpifz [ 14] ............................ if voidp(tColor) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 31 .............................. return 0
  [ 14] getparam 1 .............................. <tColor>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] eq ...................................... <tColor = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tColor = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 31 .............................. return 0
  [ 27] getparam 1 .............................. <tColor>
  [ 29] getobjprop 127 .......................... <tColor.ilk>
  [ 31] pushsymb 97 ............................. <#color>
  [ 33] eq ...................................... <tColor.ilk = #color>
  [ 34] getprop 1375 ............................ <pDrawProps>
  [ 37] pushsymb 93 ............................. <#ink>
  [ 39] pusharglist 2 ........................... <pDrawProps, #ink>
  [ 41] objcall 34 .............................. <pDrawProps[#ink]>
  [ 43] pushint8 36 ............................. <36>
  [ 45] nteq .................................... <pDrawProps[#ink] <> 36>
  [ 46] and ..................................... <(tColor.ilk = #color) and (pDrawProps[#ink] <> 36)>
  [ 47] jmpifz [ 64] ............................ if (tColor.ilk = #color) and (pDrawProps[#ink] <> 36) then / else
  [ 50] getprop 1375 ............................ <pDrawProps>
  [ 53] pushsymb 95 ............................. <#bgColor>
  [ 55] getparam 1 .............................. <tColor>
  [ 57] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, tColor>
  [ 59] objcall 59 .............................. pDrawProps[#bgColor] = tColor
  [ 61] jmp [ 86]
  [ 64] getprop 1375 ............................ <pDrawProps>
  [ 67] pushsymb 95 ............................. <#bgColor>
  [ 69] pushint16 255 ........................... <255>
  [ 72] pushint16 255 ........................... <255>
  [ 75] pushint16 255 ........................... <255>
  [ 78] pusharglist 3 ........................... <255, 255, 255>
  [ 80] extcall 94 .............................. <rgb(255, 255, 255)>
  [ 82] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, rgb(255, 255, 255)>
  [ 84] objcall 59 .............................. pDrawProps[#bgColor] = rgb(255, 255, 255)
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglistnoret 1 ...................... <1>
  [ 90] extcall 31 .............................. return 1
  [ 92] ret
end

on doHandWork me, tAct
  [  0] pushcons 8 .............................. <"lh">
  [  2] pushcons 9 .............................. <"ls">
  [  4] pushcons 26 ............................. <"li">
  [  6] pushcons 15 ............................. <"rh">
  [  8] pushcons 16 ............................. <"rs">
  [ 10] pushcons 25 ............................. <"ri">
  [ 12] pusharglist 6 ........................... <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 14] pushlist ................................ <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 15] getprop 1334 ............................ <pPart>
  [ 18] pusharglist 2 ........................... <["lh", "ls", "li", "rh", "rs", "ri"], pPart>
  [ 20] objcall 330 ............................. <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart)>
  [ 23] pushzero ................................ <0>
  [ 24] nteq .................................... <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0>
  [ 25] jmpifz [ 33] ............................ if ["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0 then
  [ 28] getparam 1 .............................. <tAct>
  [ 30] setprop 1379 ............................ pAction = tAct
  [ 33] ret
end

on doHandWorkLeft me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1380 ............................ pActionLh = tAct
  [  5] ret
end

on doHandWorkRight me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1337 ............................ pActionRh = tAct
  [  5] ret
end

on layDown me
  [  0] pushcons 20 ............................. <"lay">
  [  2] setprop 1379 ............................ pAction = "lay"
  [  5] ret
end

on getCurrentMember me
  [  0] getprop 1381 ............................ <pMemString>
  [  3] pusharglistnoret 1 ...................... <pMemString>
  [  5] extcall 31 .............................. return pMemString
  [  7] ret
end

on getColor me
  [  0] getprop 1375 ............................ <pDrawProps>
  [  3] pushsymb 95 ............................. <#bgColor>
  [  5] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [  7] objcall 34 .............................. <pDrawProps[#bgColor]>
  [  9] pusharglistnoret 1 ...................... <pDrawProps[#bgColor]>
  [ 11] extcall 31 .............................. return pDrawProps[#bgColor]
  [ 13] ret
end

on getDirection me
  [  0] getprop 28 .............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 31 .............................. return pDirection
  [  6] ret
end

on getLocation me
  [  0] getprop 1381 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 120 ............................. <voidp(pMemString)>
  [  7] jmpifz [ 15] ............................ if voidp(pMemString) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 31 .............................. return 0
  [ 15] getprop 1381 ............................ <pMemString>
  [ 18] pusharglist 1 ........................... <pMemString>
  [ 20] extcall 65 .............................. <getmemnum(pMemString)>
  [ 22] setlocal 0 .............................. tMemNum = getmemnum(pMemString)
  [ 24] getlocal 0 .............................. <tMemNum>
  [ 26] pushzero ................................ <0>
  [ 27] eq ...................................... <tMemNum = 0>
  [ 28] jmpifz [ 36] ............................ if tMemNum = 0 then
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 31 .............................. return 0
  [ 36] getlocal 0 .............................. <tMemNum>
  [ 38] pusharglist 1 ........................... <tMemNum>
  [ 40] extcall 64 .............................. <member(tMemNum)>
  [ 42] getobjprop 137 .......................... <member(tMemNum).rect>
  [ 44] setlocal 1 .............................. tImgRect = member(tMemNum).rect
  [ 46] getlocal 1 .............................. <tImgRect>
  [ 48] getobjprop 80 ........................... <tImgRect.width>
  [ 50] pushint8 2 .............................. <2>
  [ 52] div ..................................... <tImgRect.width / 2>
  [ 53] getlocal 1 .............................. <tImgRect>
  [ 55] getobjprop 81 ........................... <tImgRect.height>
  [ 57] pushint8 2 .............................. <2>
  [ 59] div ..................................... <tImgRect.height / 2>
  [ 60] pusharglist 2 ........................... <tImgRect.width / 2, tImgRect.height / 2>
  [ 62] extcall 375 ............................. <point(tImgRect.width / 2, tImgRect.height / 2)>
  [ 65] setlocal 2 .............................. tCenterPoint = point(tImgRect.width / 2, tImgRect.height / 2)
  [ 67] getlocal 0 .............................. <tMemNum>
  [ 69] pusharglist 1 ........................... <tMemNum>
  [ 71] extcall 64 .............................. <member(tMemNum)>
  [ 73] getobjprop 118 .......................... <member(tMemNum).regPoint>
  [ 75] setlocal 3 .............................. tRegPoint = member(tMemNum).regPoint
  [ 77] getlocal 3 .............................. <tRegPoint>
  [ 79] pushint8 1 .............................. <1>
  [ 81] inv ..................................... <-1>
  [ 82] mul ..................................... <tRegPoint * -1>
  [ 83] getlocal 2 .............................. <tCenterPoint>
  [ 85] add ..................................... <(tRegPoint * -1) + tCenterPoint>
  [ 86] pusharglistnoret 1 ...................... <(tRegPoint * -1) + tCenterPoint>
  [ 88] extcall 31 .............................. return (tRegPoint * -1) + tCenterPoint
  [ 90] ret
end

on copyPicture me, tImg, tdir, tHumanSize, tAction, tAnimFrame
  [  0] getparam 2 .............................. <tdir>
  [  2] pusharglist 1 ........................... <tdir>
  [  4] extcall 120 ............................. <voidp(tdir)>
  [  6] jmpifz [ 13] ............................ if voidp(tdir) then
  [  9] pushcons 30 ............................. <"2">
  [ 11] setparam 2 .............................. tdir = "2"
  [ 13] getparam 3 .............................. <tHumanSize>
  [ 15] pusharglist 1 ........................... <tHumanSize>
  [ 17] extcall 120 ............................. <voidp(tHumanSize)>
  [ 19] jmpifz [ 26] ............................ if voidp(tHumanSize) then
  [ 22] pushcons 31 ............................. <"h">
  [ 24] setparam 3 .............................. tHumanSize = "h"
  [ 26] getparam 4 .............................. <tAction>
  [ 28] pusharglist 1 ........................... <tAction>
  [ 30] extcall 120 ............................. <voidp(tAction)>
  [ 32] jmpifz [ 39] ............................ if voidp(tAction) then
  [ 35] pushcons 28 ............................. <"std">
  [ 37] setparam 4 .............................. tAction = "std"
  [ 39] getparam 5 .............................. <tAnimFrame>
  [ 41] pusharglist 1 ........................... <tAnimFrame>
  [ 43] extcall 120 ............................. <voidp(tAnimFrame)>
  [ 45] jmpifz [ 52] ............................ if voidp(tAnimFrame) then
  [ 48] pushcons 32 ............................. <"0">
  [ 50] setparam 5 .............................. tAnimFrame = "0"
  [ 52] getparam 3 .............................. <tHumanSize>
  [ 54] pushcons 27 ............................. <"_">
  [ 56] joinstr ................................. <tHumanSize & "_">
  [ 57] getparam 4 .............................. <tAction>
  [ 59] joinstr ................................. <tHumanSize & "_" & tAction>
  [ 60] pushcons 27 ............................. <"_">
  [ 62] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [ 63] getprop 1334 ............................ <pPart>
  [ 66] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [ 67] pushcons 27 ............................. <"_">
  [ 69] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [ 70] getprop 1374 ............................ <pmodel>
  [ 73] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel>
  [ 74] pushcons 27 ............................. <"_">
  [ 76] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_">
  [ 77] getparam 2 .............................. <tdir>
  [ 79] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir>
  [ 80] pushcons 27 ............................. <"_">
  [ 82] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [ 83] getparam 5 .............................. <tAnimFrame>
  [ 85] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame>
  [ 86] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame
  [ 88] getlocal 0 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 65 .............................. <getmemnum(tMemName)>
  [ 94] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [ 96] getlocal 1 .............................. <tMemNum>
  [ 98] pushzero ................................ <0>
  [ 99] eq ...................................... <tMemNum = 0>
  [100] jmpifz [176] ............................ if tMemNum = 0 then
  [103] pushcons 32 ............................. <"0">
  [105] getprop 1374 ............................ <pmodel>
  [108] pushsymb 66 ............................. <#char>
  [110] pushint8 2 .............................. <2>
  [112] pushint8 3 .............................. <3>
  [114] pusharglist 4 ........................... <pmodel, #char, 2, 3>
  [116] objcall 68 .............................. <pmodel.char[2..3]>
  [118] joinstr ................................. <"0" & pmodel.char[2..3]>
  [119] setlocal 2 .............................. tmodel = "0" & pmodel.char[2..3]
  [121] getparam 3 .............................. <tHumanSize>
  [123] pushcons 27 ............................. <"_">
  [125] joinstr ................................. <tHumanSize & "_">
  [126] getparam 4 .............................. <tAction>
  [128] joinstr ................................. <tHumanSize & "_" & tAction>
  [129] pushcons 27 ............................. <"_">
  [131] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [132] getprop 1334 ............................ <pPart>
  [135] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [136] pushcons 27 ............................. <"_">
  [138] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [139] getlocal 2 .............................. <tmodel>
  [141] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel>
  [142] pushcons 27 ............................. <"_">
  [144] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_">
  [145] getparam 2 .............................. <tdir>
  [147] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir>
  [148] pushcons 27 ............................. <"_">
  [150] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_">
  [151] getparam 5 .............................. <tAnimFrame>
  [153] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_" & tAnimFrame>
  [154] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_" & tAnimFrame
  [156] getlocal 0 .............................. <tMemName>
  [158] pusharglist 1 ........................... <tMemName>
  [160] extcall 65 .............................. <getmemnum(tMemName)>
  [162] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [164] getlocal 1 .............................. <tMemNum>
  [166] pushzero ................................ <0>
  [167] eq ...................................... <tMemNum = 0>
  [168] jmpifz [176] ............................ if tMemNum = 0 then
  [171] pushzero ................................ <0>
  [172] pusharglistnoret 1 ...................... <0>
  [174] extcall 31 .............................. return 0
  [176] getlocal 1 .............................. <tMemNum>
  [178] pusharglist 1 ........................... <tMemNum>
  [180] extcall 64 .............................. <member(tMemNum)>
  [182] setlocal 3 .............................. tmember = member(tMemNum)
  [184] getlocal 3 .............................. <tmember>
  [186] getobjprop 63 ........................... <tmember.image>
  [188] setlocal 4 .............................. tImage = tmember.image
  [190] getlocal 3 .............................. <tmember>
  [192] getobjprop 118 .......................... <tmember.regPoint>
  [194] setlocal 5 .............................. tRegPnt = tmember.regPoint
  [196] getlocal 5 .............................. <tRegPnt>
  [198] pushint8 1 .............................. <1>
  [200] pusharglist 2 ........................... <tRegPnt, 1>
  [202] objcall 34 .............................. <tRegPnt[1]>
  [204] inv ..................................... <-tRegPnt[1]>
  [205] setlocal 6 .............................. tX = -tRegPnt[1]
  [207] getparam 1 .............................. <tImg>
  [209] getchainedprop 137 ...................... <tImg.rect>
  [211] getobjprop 81 ........................... <tImg.rect.height>
  [213] getlocal 5 .............................. <tRegPnt>
  [215] pushint8 2 .............................. <2>
  [217] pusharglist 2 ........................... <tRegPnt, 2>
  [219] objcall 34 .............................. <tRegPnt[2]>
  [221] sub ..................................... <tImg.rect.height - tRegPnt[2]>
  [222] pushint8 10 ............................. <10>
  [224] sub ..................................... <tImg.rect.height - tRegPnt[2] - 10>
  [225] setlocal 7 .............................. tY = tImg.rect.height - tRegPnt[2] - 10
  [227] getlocal 6 .............................. <tX>
  [229] getlocal 7 .............................. <tY>
  [231] getlocal 6 .............................. <tX>
  [233] getlocal 4 .............................. <tImage>
  [235] getobjprop 80 ........................... <tImage.width>
  [237] add ..................................... <tX + tImage.width>
  [238] getlocal 7 .............................. <tY>
  [240] getlocal 4 .............................. <tImage>
  [242] getobjprop 81 ........................... <tImage.height>
  [244] add ..................................... <tY + tImage.height>
  [245] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [247] extcall 137 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [249] setlocal 8 .............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [251] getlocal 4 .............................. <tImage>
  [253] pusharglist 1 ........................... <tImage>
  [255] objcall 1201 ............................ <tImage.createMatte()>
  [258] setlocal 9 .............................. tMatte = tImage.createMatte()
  [260] getparam 1 .............................. <tImg>
  [262] getlocal 4 .............................. <tImage>
  [264] getlocal 8 .............................. <tRect>
  [266] getlocal 4 .............................. <tImage>
  [268] getobjprop 137 .......................... <tImage.rect>
  [270] pushsymb 1200 ........................... <#maskImage>
  [273] getlocal 9 .............................. <tMatte>
  [275] pushsymb 93 ............................. <#ink>
  [277] getprop 1375 ............................ <pDrawProps>
  [280] pushsymb 93 ............................. <#ink>
  [282] pusharglist 2 ........................... <pDrawProps, #ink>
  [284] objcall 34 .............................. <pDrawProps[#ink]>
  [286] pushsymb 95 ............................. <#bgColor>
  [288] getprop 1375 ............................ <pDrawProps>
  [291] pushsymb 95 ............................. <#bgColor>
  [293] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [295] objcall 34 .............................. <pDrawProps[#bgColor]>
  [297] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [299] pushproplist ............................ <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [300] pusharglistnoret 5 ...................... <tImg, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [302] objcall 400 ............................. tImg.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]])
  [305] pushint8 1 .............................. <1>
  [307] pusharglistnoret 1 ...................... <1>
  [309] extcall 31 .............................. return 1
  [311] ret
end

on reset me, tSwimFlag
  [  0] pushcons 28 ............................. <"std">
  [  2] setprop 1379 ............................ pAction = "std"
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 30 .............................. <VOID>
  [  9] setprop 1380 ............................ pActionLh = VOID
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 30 .............................. <VOID>
  [ 16] setprop 1337 ............................ pActionRh = VOID
  [ 19] ret
end

on setAnimation me, tPart, tAnim
  [  0] getparam 1 .............................. <tPart>
  [  2] getprop 1334 ............................ <pPart>
  [  5] nteq .................................... <tPart <> pPart>
  [  6] jmpifz [ 13] ............................ if tPart <> pPart then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 31 .............................. return 
  [ 13] getparam 2 .............................. <tAnim>
  [ 15] pusharglist 1 ........................... <tAnim>
  [ 17] extcall 480 ............................. <value(tAnim)>
  [ 20] setprop 1386 ............................ pAnimation = value(tAnim)
  [ 23] getprop 1386 ............................ <pAnimation>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pAnimation, 1>
  [ 30] objcall 34 .............................. <pAnimation[1]>
  [ 32] getobjprop 33 ........................... <pAnimation[1].count>
  [ 34] setprop 1388 ............................ pTotalFrame = pAnimation[1].count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setprop 1387 ............................ pAnimFrame = 1
  [ 42] ret
end

on remAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1386 ............................ pAnimation = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 1387 ............................ pAnimFrame = 1
  [  9] pushint8 1 .............................. <1>
  [ 11] setprop 1388 ............................ pTotalFrame = 1
  [ 14] ret
end

on animate me
  [  0] getprop 1386 ............................ <pAnimation>
  [  3] not ..................................... <not pAnimation>
  [  4] jmpifz [ 13] ............................ if not pAnimation then
  [  7] pushcons 0 .............................. <EMPTY>
  [  9] pusharglistnoret 1 ...................... <EMPTY>
  [ 11] extcall 31 .............................. return EMPTY
  [ 13] getprop 28 .............................. <pDirection>
  [ 15] getprop 1386 ............................ <pAnimation>
  [ 18] pushsymb 1407 ........................... <#OffD>
  [ 21] pusharglist 2 ........................... <pAnimation, #OffD>
  [ 23] objcall 34 .............................. <pAnimation[#OffD]>
  [ 25] getprop 1387 ............................ <pAnimFrame>
  [ 28] pusharglist 2 ........................... <pAnimation[#OffD], pAnimFrame>
  [ 30] objcall 34 .............................. <pAnimation[#OffD][pAnimFrame]>
  [ 32] add ..................................... <pDirection + pAnimation[#OffD][pAnimFrame]>
  [ 33] setlocal 0 .............................. tdir = pDirection + pAnimation[#OffD][pAnimFrame]
  [ 35] getlocal 0 .............................. <tdir>
  [ 37] pushint8 7 .............................. <7>
  [ 39] gt ...................................... <tdir > 7>
  [ 40] jmpifz [ 56] ............................ if tdir > 7 then / else
  [ 43] getlocal 0 .............................. <tdir>
  [ 45] getlocal 0 .............................. <tdir>
  [ 47] pushint8 7 .............................. <7>
  [ 49] mod ..................................... <tdir mod 7>
  [ 50] sub ..................................... <tdir - (tdir mod 7)>
  [ 51] setlocal 0 .............................. tdir = tdir - (tdir mod 7)
  [ 53] jmp [ 73]
  [ 56] getlocal 0 .............................. <tdir>
  [ 58] pushzero ................................ <0>
  [ 59] lt ...................................... <tdir < 0>
  [ 60] jmpifz [ 73] ............................ if tdir < 0 then
  [ 63] pushint8 7 .............................. <7>
  [ 65] getlocal 0 .............................. <tdir>
  [ 67] add ..................................... <7 + tdir>
  [ 68] pushint8 1 .............................. <1>
  [ 70] add ..................................... <7 + tdir + 1>
  [ 71] setlocal 0 .............................. tdir = 7 + tdir + 1
  [ 73] getparam 0 .............................. <me>
  [ 75] pushsymb 1251 ........................... <#pFlipList>
  [ 78] getlocal 0 .............................. <tdir>
  [ 80] pushint8 1 .............................. <1>
  [ 82] add ..................................... <tdir + 1>
  [ 83] pusharglist 3 ........................... <me, #pFlipList, tdir + 1>
  [ 85] objcall 68 .............................. <me.pFlipList[tdir + 1]>
  [ 87] setlocal 0 .............................. tdir = me.pFlipList[tdir + 1]
  [ 89] getprop 1386 ............................ <pAnimation>
  [ 92] pushsymb 1410 ........................... <#OffX>
  [ 95] pusharglist 2 ........................... <pAnimation, #OffX>
  [ 97] objcall 34 .............................. <pAnimation[#OffX]>
  [ 99] getprop 1387 ............................ <pAnimFrame>
  [102] pusharglist 2 ........................... <pAnimation[#OffX], pAnimFrame>
  [104] objcall 34 .............................. <pAnimation[#OffX][pAnimFrame]>
  [106] setprop 1382 ............................ pXFix = pAnimation[#OffX][pAnimFrame]
  [109] getprop 1386 ............................ <pAnimation>
  [112] pushsymb 1411 ........................... <#OffY>
  [115] pusharglist 2 ........................... <pAnimation, #OffY>
  [117] objcall 34 .............................. <pAnimation[#OffY]>
  [119] getprop 1387 ............................ <pAnimFrame>
  [122] pusharglist 2 ........................... <pAnimation[#OffY], pAnimFrame>
  [124] objcall 34 .............................. <pAnimation[#OffY][pAnimFrame]>
  [126] setprop 1383 ............................ pYFix = pAnimation[#OffY][pAnimFrame]
  [129] getparam 0 .............................. <me>
  [131] getobjprop 1295 ......................... <me.pPeopleSize>
  [134] pushcons 27 ............................. <"_">
  [136] joinstr ................................. <me.pPeopleSize & "_">
  [137] getprop 1386 ............................ <pAnimation>
  [140] pushsymb 1412 ........................... <#act>
  [143] pusharglist 2 ........................... <pAnimation, #act>
  [145] objcall 34 .............................. <pAnimation[#act]>
  [147] getprop 1387 ............................ <pAnimFrame>
  [150] pusharglist 2 ........................... <pAnimation[#act], pAnimFrame>
  [152] objcall 34 .............................. <pAnimation[#act][pAnimFrame]>
  [154] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame]>
  [155] pushcons 27 ............................. <"_">
  [157] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_">
  [158] getprop 1334 ............................ <pPart>
  [161] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart>
  [162] pushcons 27 ............................. <"_">
  [164] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_">
  [165] getprop 1374 ............................ <pmodel>
  [168] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel>
  [169] pushcons 27 ............................. <"_">
  [171] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_">
  [172] getlocal 0 .............................. <tdir>
  [174] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir>
  [175] pushcons 27 ............................. <"_">
  [177] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [178] getprop 1386 ............................ <pAnimation>
  [181] pushsymb 1413 ........................... <#frm>
  [184] pusharglist 2 ........................... <pAnimation, #frm>
  [186] objcall 34 .............................. <pAnimation[#frm]>
  [188] getprop 1387 ............................ <pAnimFrame>
  [191] pusharglist 2 ........................... <pAnimation[#frm], pAnimFrame>
  [193] objcall 34 .............................. <pAnimation[#frm][pAnimFrame]>
  [195] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]>
  [196] setlocal 1 .............................. tMemName = me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]
  [198] getprop 1387 ............................ <pAnimFrame>
  [201] pushint8 1 .............................. <1>
  [203] add ..................................... <pAnimFrame + 1>
  [204] setprop 1387 ............................ pAnimFrame = pAnimFrame + 1
  [207] getprop 1387 ............................ <pAnimFrame>
  [210] getprop 1388 ............................ <pTotalFrame>
  [213] gt ...................................... <pAnimFrame > pTotalFrame>
  [214] jmpifz [222] ............................ if pAnimFrame > pTotalFrame then
  [217] pushint8 1 .............................. <1>
  [219] setprop 1387 ............................ pAnimFrame = 1
  [222] getlocal 1 .............................. <tMemName>
  [224] pusharglistnoret 1 ...................... <tMemName>
  [226] extcall 31 .............................. return tMemName
  [228] ret
end
