property ancestor, pPart, pmodel, pDirection, pDrawProps, pSwimProps, pAction, pActionLh, pActionRh, pMemString, pXFix, pYFix, pLastLocFix, pCacheImage, pCacheRectA, pCacheRectB, pAnimation, pAnimFrame, pTotalFrame

on deconsturct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 159 ............................. <VOID>
  [  4] setprop 1351 ............................ ancestor = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 21 .............................. return 1
  [ 13] ret
end

on define me, tPart, tmodel, tColor, tDirection, tAction, tAncestor
  [  0] getparam 6 .............................. <tAncestor>
  [  2] setprop 1351 ............................ ancestor = tAncestor
  [  5] getparam 1 .............................. <tPart>
  [  7] setprop 1312 ............................ pPart = tPart
  [ 10] getparam 2 .............................. <tmodel>
  [ 12] setprop 1352 ............................ pmodel = tmodel
  [ 15] pushsymb 1171 ........................... <#maskImage>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 419 ............................ <#ink>
  [ 22] pushzero ................................ <0>
  [ 23] pushsymb 311 ............................ <#bgColor>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglist 6 ........................... <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 29] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 30] setprop 1353 ............................ pDrawProps = [#maskImage: 0, #ink: 0, #bgColor: 0]
  [ 33] pushsymb 1171 ........................... <#maskImage>
  [ 36] pushzero ................................ <0>
  [ 37] pushsymb 419 ............................ <#ink>
  [ 40] pushzero ................................ <0>
  [ 41] pushsymb 311 ............................ <#bgColor>
  [ 44] pushzero ................................ <0>
  [ 45] pushint16 156 ........................... <156>
  [ 48] pushint16 156 ........................... <156>
  [ 51] pusharglist 3 ........................... <0, 156, 156>
  [ 53] extcall 312 ............................. <rgb(0, 156, 156)>
  [ 56] pushsymb 357 ............................ <#color>
  [ 59] pushzero ................................ <0>
  [ 60] pushint16 156 ........................... <156>
  [ 63] pushint16 156 ........................... <156>
  [ 66] pusharglist 3 ........................... <0, 156, 156>
  [ 68] extcall 312 ............................. <rgb(0, 156, 156)>
  [ 71] pushsymb 362 ............................ <#blend>
  [ 74] pushint8 60 ............................. <60>
  [ 76] pusharglist 10 .......................... <[#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]>
  [ 78] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]>
  [ 79] setprop 1411 ............................ pSwimProps = [#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]
  [ 82] pushzero ................................ <0>
  [ 83] setprop 1354 ............................ pCacheImage = 0
  [ 86] pushzero ................................ <0>
  [ 87] pushzero ................................ <0>
  [ 88] pushzero ................................ <0>
  [ 89] pushzero ................................ <0>
  [ 90] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 92] extcall 322 ............................. <rect(0, 0, 0, 0)>
  [ 95] setprop 1355 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 98] pushzero ................................ <0>
  [ 99] pushzero ................................ <0>
  [100] pushzero ................................ <0>
  [101] pushzero ................................ <0>
  [102] pusharglist 4 ........................... <0, 0, 0, 0>
  [104] extcall 322 ............................. <rect(0, 0, 0, 0)>
  [107] setprop 1356 ............................ pCacheRectB = rect(0, 0, 0, 0)
  [110] getparam 0 .............................. <me>
  [112] pusharglistnoret 1 ...................... <me>
  [114] objcall 1347 ............................ me.defineInk()
  [117] getparam 0 .............................. <me>
  [119] getparam 3 .............................. <tColor>
  [121] pusharglistnoret 2 ...................... <me, tColor>
  [123] objcall 1287 ............................ me.setColor(tColor)
  [126] getparam 4 .............................. <tDirection>
  [128] setprop 34 .............................. pDirection = tDirection
  [130] getparam 5 .............................. <tAction>
  [132] setprop 1357 ............................ pAction = tAction
  [135] getparam 5 .............................. <tAction>
  [137] setprop 1358 ............................ pActionLh = tAction
  [140] getparam 5 .............................. <tAction>
  [142] setprop 1315 ............................ pActionRh = tAction
  [145] pushcons 0 .............................. <EMPTY>
  [147] setprop 1359 ............................ pMemString = EMPTY
  [150] pushzero ................................ <0>
  [151] setprop 1360 ............................ pXFix = 0
  [154] pushzero ................................ <0>
  [155] setprop 1361 ............................ pYFix = 0
  [158] pushint16 1000 .......................... <1000>
  [161] pushint16 1000 .......................... <1000>
  [164] pusharglist 2 ........................... <1000, 1000>
  [166] extcall 293 ............................. <point(1000, 1000)>
  [169] setprop 1363 ............................ pLastLocFix = point(1000, 1000)
  [172] pushzero ................................ <0>
  [173] setprop 1364 ............................ pAnimation = 0
  [176] pushint8 1 .............................. <1>
  [178] setprop 6 ............................... pAnimFrame = 1
  [180] pushint8 1 .............................. <1>
  [182] setprop 1365 ............................ pTotalFrame = 1
  [185] pushint8 1 .............................. <1>
  [187] pusharglistnoret 1 ...................... <1>
  [189] extcall 21 .............................. return 1
  [191] ret
end

on update me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tAnimCounter = 0
  [  3] getprop 1357 ............................ <pAction>
  [  6] setlocal 1 .............................. tAction = pAction
  [  8] getprop 1312 ............................ <pPart>
  [ 11] setlocal 2 .............................. tPart = pPart
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 1224 ........................... <#pFlipList>
  [ 18] getprop 34 .............................. <pDirection>
  [ 20] pushint8 1 .............................. <1>
  [ 22] add ..................................... <pDirection + 1>
  [ 23] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 25] objcall 33 .............................. <me.pFlipList[pDirection + 1]>
  [ 27] setlocal 3 .............................. tdir = me.pFlipList[pDirection + 1]
  [ 29] pushzero ................................ <0>
  [ 30] setprop 1360 ............................ pXFix = 0
  [ 33] pushzero ................................ <0>
  [ 34] setprop 1361 ............................ pYFix = 0
  [ 37] getparam 0 .............................. <me>
  [ 39] getobjprop 1247 ......................... <me.pAnimating>
  [ 42] jmpifz [305] ............................ if me.pAnimating then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 876 ............................. <me.animate()>
  [ 52] setlocal 4 .............................. tMemString = me.animate()
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 34 ........................... <me.pDirection>
  [ 58] setlocal 5 .............................. tAncestorDir = me.pDirection
  [ 60] getparam 0 .............................. <me>
  [ 62] getobjprop 1268 ......................... <me.pPeopleSize>
  [ 65] pushcons 1 .............................. <"sh">
  [ 67] eq ...................................... <me.pPeopleSize = "sh">
  [ 68] jmpifz [ 78] ............................ if me.pPeopleSize = "sh" then / else
  [ 71] pushcons 2 .............................. <0.69999999999999996>
  [ 73] setlocal 6 .............................. tSizeMultiplier = 0.69999999999999996
  [ 75] jmp [ 82]
  [ 78] pushint8 1 .............................. <1>
  [ 80] setlocal 6 .............................. tSizeMultiplier = 1
  [ 82] getlocal 5 .............................. <tAncestorDir>
  [ 84] peek 0 .................................. case tAncestorDir of
  [ 86] pushzero ................................ <0>
  [ 87] eq
  [ 88] jmpifz [116] ............................ (case) 0:
  [ 91] getprop 1361 ............................ <pYFix>
  [ 94] getprop 1360 ............................ <pXFix>
  [ 97] pushint8 2 .............................. <2>
  [ 99] div ..................................... <pXFix / 2>
  [100] add ..................................... <pYFix + (pXFix / 2)>
  [101] setprop 1361 ............................ pYFix = pYFix + (pXFix / 2)
  [104] getprop 1360 ............................ <pXFix>
  [107] pushint8 2 .............................. <2>
  [109] div ..................................... <pXFix / 2>
  [110] setprop 1360 ............................ pXFix = pXFix / 2
  [113] jmp [282]
  [116] peek 0
  [118] pushint8 1 .............................. <1>
  [120] eq
  [121] jmpifz [141] ............................ (case) 1:
  [124] getprop 1361 ............................ <pYFix>
  [127] getprop 1360 ............................ <pXFix>
  [130] add ..................................... <pYFix + pXFix>
  [131] setprop 1361 ............................ pYFix = pYFix + pXFix
  [134] pushzero ................................ <0>
  [135] setprop 1360 ............................ pXFix = 0
  [138] jmp [282]
  [141] peek 0
  [143] pushint8 2 .............................. <2>
  [145] eq
  [146] jmpifz [174] ............................ (case) 2:
  [149] getprop 1361 ............................ <pYFix>
  [152] getprop 1360 ............................ <pXFix>
  [155] pushint8 2 .............................. <2>
  [157] div ..................................... <pXFix / 2>
  [158] sub ..................................... <pYFix - (pXFix / 2)>
  [159] setprop 1361 ............................ pYFix = pYFix - (pXFix / 2)
  [162] getprop 1360 ............................ <pXFix>
  [165] pushint8 2 .............................. <2>
  [167] div ..................................... <pXFix / 2>
  [168] setprop 1360 ............................ pXFix = pXFix / 2
  [171] jmp [282]
  [174] peek 0
  [176] pushint8 4 .............................. <4>
  [178] eq
  [179] jmpifz [208] ............................ (case) 4:
  [182] getprop 1361 ............................ <pYFix>
  [185] getprop 1360 ............................ <pXFix>
  [188] pushint8 2 .............................. <2>
  [190] div ..................................... <pXFix / 2>
  [191] add ..................................... <pYFix + (pXFix / 2)>
  [192] setprop 1361 ............................ pYFix = pYFix + (pXFix / 2)
  [195] getprop 1360 ............................ <pXFix>
  [198] inv ..................................... <-pXFix>
  [199] pushint8 2 .............................. <2>
  [201] div ..................................... <-pXFix / 2>
  [202] setprop 1360 ............................ pXFix = -pXFix / 2
  [205] jmp [282]
  [208] peek 0
  [210] pushint8 5 .............................. <5>
  [212] eq
  [213] jmpifz [233] ............................ (case) 5:
  [216] getprop 1361 ............................ <pYFix>
  [219] getprop 1360 ............................ <pXFix>
  [222] sub ..................................... <pYFix - pXFix>
  [223] setprop 1361 ............................ pYFix = pYFix - pXFix
  [226] pushzero ................................ <0>
  [227] setprop 1360 ............................ pXFix = 0
  [230] jmp [282]
  [233] peek 0
  [235] pushint8 6 .............................. <6>
  [237] eq
  [238] jmpifz [267] ............................ (case) 6:
  [241] getprop 1361 ............................ <pYFix>
  [244] getprop 1360 ............................ <pXFix>
  [247] pushint8 2 .............................. <2>
  [249] div ..................................... <pXFix / 2>
  [250] sub ..................................... <pYFix - (pXFix / 2)>
  [251] setprop 1361 ............................ pYFix = pYFix - (pXFix / 2)
  [254] getprop 1360 ............................ <pXFix>
  [257] inv ..................................... <-pXFix>
  [258] pushint8 2 .............................. <2>
  [260] div ..................................... <-pXFix / 2>
  [261] setprop 1360 ............................ pXFix = -pXFix / 2
  [264] jmp [282]
  [267] peek 0
  [269] pushint8 7 .............................. <7>
  [271] eq
  [272] jmpifz [282] ............................ (case) 7:
  [275] getprop 1360 ............................ <pXFix>
  [278] inv ..................................... <-pXFix>
  [279] setprop 1360 ............................ pXFix = -pXFix
  [282] pop 1 ................................... end case
  [284] getprop 1360 ............................ <pXFix>
  [287] getlocal 6 .............................. <tSizeMultiplier>
  [289] mul ..................................... <pXFix * tSizeMultiplier>
  [290] setprop 1360 ............................ pXFix = pXFix * tSizeMultiplier
  [293] getprop 1361 ............................ <pYFix>
  [296] getlocal 6 .............................. <tSizeMultiplier>
  [298] mul ..................................... <pYFix * tSizeMultiplier>
  [299] setprop 1361 ............................ pYFix = pYFix * tSizeMultiplier
  [302] jmp [929]
  [305] getprop 1312 ............................ <pPart>
  [308] peek 0 .................................. case pPart of
  [310] pushcons 3 .............................. <"bd">
  [312] nteq
  [313] jmpifz [332] ............................ (case) "bd", ...
  [316] peek 0
  [318] pushcons 4 .............................. <"lg">
  [320] nteq
  [321] jmpifz [332] ............................ (case) ..., "lg", ...
  [324] peek 0
  [326] pushcons 1 .............................. <"sh">
  [328] eq
  [329] jmpifz [369] ............................ (case) ..., "sh":
  [332] pushint8 1 .............................. <1>
  [334] setlocal 7 .............................. tUnderWater = 1
  [336] getprop 1357 ............................ <pAction>
  [339] pushcons 5 .............................. <"wlk">
  [341] eq ...................................... <pAction = "wlk">
  [342] getprop 1357 ............................ <pAction>
  [345] pushcons 6 .............................. <"swm">
  [347] eq ...................................... <pAction = "swm">
  [348] or ...................................... <(pAction = "wlk") or (pAction = "swm")>
  [349] getprop 1357 ............................ <pAction>
  [352] pushcons 7 .............................. <"sws">
  [354] eq ...................................... <pAction = "sws">
  [355] or ...................................... <(pAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [356] jmpifz [366] ............................ if (pAction = "wlk") or (pAction = "swm") or (pAction = "sws") then
  [359] getparam 0 .............................. <me>
  [361] getobjprop 1232 ......................... <me.pAnimCounter>
  [364] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [366] jmp [889]
  [369] peek 0
  [371] pushcons 8 .............................. <"lh">
  [373] nteq
  [374] jmpifz [385] ............................ (case) "lh", ...
  [377] peek 0
  [379] pushcons 9 .............................. <"ls">
  [381] eq
  [382] jmpifz [538] ............................ (case) ..., "ls":
  [385] pushint8 1 .............................. <1>
  [387] setlocal 7 .............................. tUnderWater = 1
  [389] getprop 34 .............................. <pDirection>
  [391] getlocal 3 .............................. <tdir>
  [393] eq ...................................... <pDirection = tdir>
  [394] jmpifz [416] ............................ if pDirection = tdir then / else
  [397] getprop 1358 ............................ <pActionLh>
  [400] pusharglist 1 ........................... <pActionLh>
  [402] extcall 10 .............................. <voidp(pActionLh)>
  [404] not ..................................... <not voidp(pActionLh)>
  [405] jmpifz [413] ............................ if not voidp(pActionLh) then
  [408] getprop 1358 ............................ <pActionLh>
  [411] setlocal 1 .............................. tAction = pActionLh
  [413] jmp [432]
  [416] getprop 1315 ............................ <pActionRh>
  [419] pusharglist 1 ........................... <pActionRh>
  [421] extcall 10 .............................. <voidp(pActionRh)>
  [423] not ..................................... <not voidp(pActionRh)>
  [424] jmpifz [432] ............................ if not voidp(pActionRh) then
  [427] getprop 1315 ............................ <pActionRh>
  [430] setlocal 1 .............................. tAction = pActionRh
  [432] getlocal 1 .............................. <tAction>
  [434] pushcons 5 .............................. <"wlk">
  [436] eq ...................................... <tAction = "wlk">
  [437] getprop 1357 ............................ <pAction>
  [440] pushcons 6 .............................. <"swm">
  [442] eq ...................................... <pAction = "swm">
  [443] or ...................................... <(tAction = "wlk") or (pAction = "swm")>
  [444] getprop 1357 ............................ <pAction>
  [447] pushcons 7 .............................. <"sws">
  [449] eq ...................................... <pAction = "sws">
  [450] or ...................................... <(tAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [451] jmpifz [464] ............................ if (tAction = "wlk") or (pAction = "swm") or (pAction = "sws") then / else
  [454] getparam 0 .............................. <me>
  [456] getobjprop 1232 ......................... <me.pAnimCounter>
  [459] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [461] jmp [535]
  [464] getlocal 1 .............................. <tAction>
  [466] pushcons 10 ............................. <"wav">
  [468] eq ...................................... <tAction = "wav">
  [469] jmpifz [488] ............................ if tAction = "wav" then / else
  [472] pushzero ................................ <0>
  [473] setlocal 7 .............................. tUnderWater = 0
  [475] getparam 0 .............................. <me>
  [477] getobjprop 1232 ......................... <me.pAnimCounter>
  [480] pushint8 2 .............................. <2>
  [482] mod ..................................... <me.pAnimCounter mod 2>
  [483] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [485] jmp [535]
  [488] pushcons 11 ............................. <"crr">
  [490] pushcons 12 ............................. <"drk">
  [492] pushcons 13 ............................. <"ohd">
  [494] pusharglist 3 ........................... <["crr", "drk", "ohd"]>
  [496] pushlist ................................ <["crr", "drk", "ohd"]>
  [497] getlocal 1 .............................. <tAction>
  [499] pusharglist 2 ........................... <["crr", "drk", "ohd"], tAction>
  [501] objcall 240 ............................. <["crr", "drk", "ohd"].getPos(tAction)>
  [503] pushzero ................................ <0>
  [504] nteq .................................... <["crr", "drk", "ohd"].getPos(tAction) <> 0>
  [505] jmpifz [535] ............................ if ["crr", "drk", "ohd"].getPos(tAction) <> 0 then
  [508] pushint8 40 ............................. <40>
  [510] inv ..................................... <-40>
  [511] setprop 1360 ............................ pXFix = -40
  [514] pushcons 14 ............................. <"r">
  [516] getprop 1312 ............................ <pPart>
  [519] pushsymb 450 ............................ <#char>
  [522] pushint8 2 .............................. <2>
  [524] pusharglist 3 ........................... <pPart, #char, 2>
  [526] objcall 33 .............................. <pPart.char[2]>
  [528] joinstr ................................. <"r" & pPart.char[2]>
  [529] setlocal 2 .............................. tPart = "r" & pPart.char[2]
  [531] getprop 34 .............................. <pDirection>
  [533] setlocal 3 .............................. tdir = pDirection
  [535] jmp [889]
  [538] peek 0
  [540] pushcons 15 ............................. <"rh">
  [542] nteq
  [543] jmpifz [554] ............................ (case) "rh", ...
  [546] peek 0
  [548] pushcons 16 ............................. <"rs">
  [550] eq
  [551] jmpifz [678] ............................ (case) ..., "rs":
  [554] pushint8 1 .............................. <1>
  [556] setlocal 7 .............................. tUnderWater = 1
  [558] getprop 34 .............................. <pDirection>
  [560] getlocal 3 .............................. <tdir>
  [562] eq ...................................... <pDirection = tdir>
  [563] jmpifz [585] ............................ if pDirection = tdir then / else
  [566] getprop 1315 ............................ <pActionRh>
  [569] pusharglist 1 ........................... <pActionRh>
  [571] extcall 10 .............................. <voidp(pActionRh)>
  [573] not ..................................... <not voidp(pActionRh)>
  [574] jmpifz [582] ............................ if not voidp(pActionRh) then
  [577] getprop 1315 ............................ <pActionRh>
  [580] setlocal 1 .............................. tAction = pActionRh
  [582] jmp [601]
  [585] getprop 1358 ............................ <pActionLh>
  [588] pusharglist 1 ........................... <pActionLh>
  [590] extcall 10 .............................. <voidp(pActionLh)>
  [592] not ..................................... <not voidp(pActionLh)>
  [593] jmpifz [601] ............................ if not voidp(pActionLh) then
  [596] getprop 1358 ............................ <pActionLh>
  [599] setlocal 1 .............................. tAction = pActionLh
  [601] getlocal 1 .............................. <tAction>
  [603] pushcons 5 .............................. <"wlk">
  [605] eq ...................................... <tAction = "wlk">
  [606] getprop 1357 ............................ <pAction>
  [609] pushcons 6 .............................. <"swm">
  [611] eq ...................................... <pAction = "swm">
  [612] or ...................................... <(tAction = "wlk") or (pAction = "swm")>
  [613] getprop 1357 ............................ <pAction>
  [616] pushcons 7 .............................. <"sws">
  [618] eq ...................................... <pAction = "sws">
  [619] or ...................................... <(tAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [620] jmpifz [633] ............................ if (tAction = "wlk") or (pAction = "swm") or (pAction = "sws") then / else
  [623] getparam 0 .............................. <me>
  [625] getobjprop 1232 ......................... <me.pAnimCounter>
  [628] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [630] jmp [675]
  [633] getlocal 1 .............................. <tAction>
  [635] pushcons 10 ............................. <"wav">
  [637] eq ...................................... <tAction = "wav">
  [638] jmpifz [675] ............................ if tAction = "wav" then
  [641] pushzero ................................ <0>
  [642] setlocal 7 .............................. tUnderWater = 0
  [644] getparam 0 .............................. <me>
  [646] getobjprop 1232 ......................... <me.pAnimCounter>
  [649] pushint8 2 .............................. <2>
  [651] mod ..................................... <me.pAnimCounter mod 2>
  [652] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [654] pushcons 17 ............................. <"l">
  [656] getprop 1312 ............................ <pPart>
  [659] pushsymb 450 ............................ <#char>
  [662] pushint8 2 .............................. <2>
  [664] pusharglist 3 ........................... <pPart, #char, 2>
  [666] objcall 33 .............................. <pPart.char[2]>
  [668] joinstr ................................. <"l" & pPart.char[2]>
  [669] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [671] getprop 34 .............................. <pDirection>
  [673] setlocal 3 .............................. tdir = pDirection
  [675] jmp [889]
  [678] peek 0
  [680] pushcons 18 ............................. <"hd">
  [682] nteq
  [683] jmpifz [694] ............................ (case) "hd", ...
  [686] peek 0
  [688] pushcons 19 ............................. <"fc">
  [690] eq
  [691] jmpifz [738] ............................ (case) ..., "fc":
  [694] pushzero ................................ <0>
  [695] setlocal 7 .............................. tUnderWater = 0
  [697] getparam 0 .............................. <me>
  [699] getobjprop 1240 ......................... <me.pTalking>
  [702] jmpifz [735] ............................ if me.pTalking then
  [705] getprop 1357 ............................ <pAction>
  [708] pushcons 20 ............................. <"lay">
  [710] eq ...................................... <pAction = "lay">
  [711] jmpifz [721] ............................ if pAction = "lay" then / else
  [714] pushcons 21 ............................. <"lsp">
  [716] setlocal 1 .............................. tAction = "lsp"
  [718] jmp [725]
  [721] pushcons 22 ............................. <"spk">
  [723] setlocal 1 .............................. tAction = "spk"
  [725] getparam 0 .............................. <me>
  [727] getobjprop 1232 ......................... <me.pAnimCounter>
  [730] pushint8 2 .............................. <2>
  [732] mod ..................................... <me.pAnimCounter mod 2>
  [733] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [735] jmp [889]
  [738] peek 0
  [740] pushcons 23 ............................. <"ey">
  [742] eq
  [743] jmpifz [784] ............................ (case) "ey":
  [746] pushzero ................................ <0>
  [747] setlocal 7 .............................. tUnderWater = 0
  [749] getparam 0 .............................. <me>
  [751] getobjprop 1240 ......................... <me.pTalking>
  [754] getprop 1357 ............................ <pAction>
  [757] pushcons 20 ............................. <"lay">
  [759] nteq .................................... <pAction <> "lay">
  [760] and ..................................... <me.pTalking and (pAction <> "lay")>
  [761] getparam 0 .............................. <me>
  [763] getobjprop 1232 ......................... <me.pAnimCounter>
  [766] pushint8 2 .............................. <2>
  [768] mod ..................................... <me.pAnimCounter mod 2>
  [769] pushzero ................................ <0>
  [770] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [771] and ..................................... <me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0)>
  [772] jmpifz [781] ............................ if me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0) then
  [775] pushint8 1 .............................. <1>
  [777] inv ..................................... <-1>
  [778] setprop 1361 ............................ pYFix = -1
  [781] jmp [889]
  [784] peek 0
  [786] pushcons 24 ............................. <"hr">
  [788] eq
  [789] jmpifz [830] ............................ (case) "hr":
  [792] pushzero ................................ <0>
  [793] setlocal 7 .............................. tUnderWater = 0
  [795] getparam 0 .............................. <me>
  [797] getobjprop 1240 ......................... <me.pTalking>
  [800] getparam 0 .............................. <me>
  [802] getobjprop 1232 ......................... <me.pAnimCounter>
  [805] pushint8 2 .............................. <2>
  [807] mod ..................................... <me.pAnimCounter mod 2>
  [808] pushzero ................................ <0>
  [809] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [810] and ..................................... <me.pTalking and ((me.pAnimCounter mod 2) = 0)>
  [811] jmpifz [827] ............................ if me.pTalking and ((me.pAnimCounter mod 2) = 0) then
  [814] getprop 1357 ............................ <pAction>
  [817] pushcons 20 ............................. <"lay">
  [819] nteq .................................... <pAction <> "lay">
  [820] jmpifz [827] ............................ if pAction <> "lay" then
  [823] pushcons 22 ............................. <"spk">
  [825] setlocal 1 .............................. tAction = "spk"
  [827] jmp [889]
  [830] peek 0
  [832] pushcons 25 ............................. <"ri">
  [834] eq
  [835] jmpifz [865] ............................ (case) "ri":
  [838] getparam 0 .............................. <me>
  [840] getobjprop 1241 ......................... <me.pCarrying>
  [843] not ..................................... <not me.pCarrying>
  [844] jmpifz [853] ............................ if not me.pCarrying then
  [847] pop 1
  [849] pusharglistnoret 0 ...................... <>
  [851] extcall 21 .............................. return 
  [853] getprop 1315 ............................ <pActionRh>
  [856] setlocal 1 .............................. tAction = pActionRh
  [858] getprop 34 .............................. <pDirection>
  [860] setlocal 3 .............................. tdir = pDirection
  [862] jmp [889]
  [865] peek 0
  [867] pushcons 26 ............................. <"li">
  [869] eq
  [870] jmpifz [885] ............................ (case) "li":
  [873] getprop 1358 ............................ <pActionLh>
  [876] setlocal 1 .............................. tAction = pActionLh
  [878] getprop 34 .............................. <pDirection>
  [880] setlocal 3 .............................. tdir = pDirection
  [882] jmp [889] ............................... (case) otherwise:
  [885] pushint8 1 .............................. <1>
  [887] setlocal 7 .............................. tUnderWater = 1
  [889] pop 1 ................................... end case
  [891] getparam 0 .............................. <me>
  [893] getobjprop 1268 ......................... <me.pPeopleSize>
  [896] pushcons 27 ............................. <"_">
  [898] joinstr ................................. <me.pPeopleSize & "_">
  [899] getlocal 1 .............................. <tAction>
  [901] joinstr ................................. <me.pPeopleSize & "_" & tAction>
  [902] pushcons 27 ............................. <"_">
  [904] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_">
  [905] getlocal 2 .............................. <tPart>
  [907] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart>
  [908] pushcons 27 ............................. <"_">
  [910] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_">
  [911] getprop 1352 ............................ <pmodel>
  [914] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel>
  [915] pushcons 27 ............................. <"_">
  [917] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_">
  [918] getlocal 3 .............................. <tdir>
  [920] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir>
  [921] pushcons 27 ............................. <"_">
  [923] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_">
  [924] getlocal 0 .............................. <tAnimCounter>
  [926] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCounter>
  [927] setlocal 4 .............................. tMemString = me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCounter
  [929] getprop 1363 ............................ <pLastLocFix>
  [932] getprop 1360 ............................ <pXFix>
  [935] getprop 1361 ............................ <pYFix>
  [938] pusharglist 2 ........................... <pXFix, pYFix>
  [940] extcall 293 ............................. <point(pXFix, pYFix)>
  [943] nteq .................................... <pLastLocFix <> point(pXFix, pYFix)>
  [944] setlocal 8 .............................. tLocFixChanged = pLastLocFix <> point(pXFix, pYFix)
  [946] getprop 1360 ............................ <pXFix>
  [949] getprop 1361 ............................ <pYFix>
  [952] pusharglist 2 ........................... <pXFix, pYFix>
  [954] extcall 293 ............................. <point(pXFix, pYFix)>
  [957] setprop 1363 ............................ pLastLocFix = point(pXFix, pYFix)
  [960] getprop 1359 ............................ <pMemString>
  [963] getlocal 4 .............................. <tMemString>
  [965] nteq .................................... <pMemString <> tMemString>
  [966] getlocal 8 .............................. <tLocFixChanged>
  [968] or ...................................... <(pMemString <> tMemString) or tLocFixChanged>
  [969] jmpifz [1150] ........................... if (pMemString <> tMemString) or tLocFixChanged then
  [972] getlocal 4 .............................. <tMemString>
  [974] pusharglist 1 ........................... <tMemString>
  [976] extcall 37 .............................. <getmemnum(tMemString)>
  [978] setlocal 9 .............................. tMemNum = getmemnum(tMemString)
  [980] getlocal 9 .............................. <tMemNum>
  [982] pushzero ................................ <0>
  [983] gt ...................................... <tMemNum > 0>
  [984] jmpifz [1146] ........................... if tMemNum > 0 then / else
  [987] getlocal 4 .............................. <tMemString>
  [989] setprop 1359 ............................ pMemString = tMemString
  [992] getlocal 9 .............................. <tMemNum>
  [994] pusharglist 1 ........................... <tMemNum>
  [996] extcall 30 .............................. <member(tMemNum)>
  [998] setlocal 10 ............................. tmember = member(tMemNum)
  [1000] getlocal 10 ............................ <tmember>
  [1002] getobjprop 294 ......................... <tmember.regPoint>
  [1005] setlocal 11 ............................ tRegPnt = tmember.regPoint
  [1007] getlocal 11 ............................ <tRegPnt>
  [1009] pushint8 1 ............................. <1>
  [1011] pusharglist 2 .......................... <tRegPnt, 1>
  [1013] objcall 9 .............................. <tRegPnt[1]>
  [1015] inv .................................... <-tRegPnt[1]>
  [1016] setlocal 12 ............................ tX = -tRegPnt[1]
  [1018] getparam 0 ............................. <me>
  [1020] getchainedprop 1265 .................... <me.pBuffer>
  [1023] getchainedprop 322 ..................... <me.pBuffer.rect>
  [1026] getobjprop 291 ......................... <me.pBuffer.rect.height>
  [1029] getlocal 11 ............................ <tRegPnt>
  [1031] pushint8 2 ............................. <2>
  [1033] pusharglist 2 .......................... <tRegPnt, 2>
  [1035] objcall 9 .............................. <tRegPnt[2]>
  [1037] sub .................................... <me.pBuffer.rect.height - tRegPnt[2]>
  [1038] pushint8 10 ............................ <10>
  [1040] sub .................................... <me.pBuffer.rect.height - tRegPnt[2] - 10>
  [1041] setlocal 13 ............................ tY = me.pBuffer.rect.height - tRegPnt[2] - 10
  [1043] getparam 0 ............................. <me>
  [1045] getparam 0 ............................. <me>
  [1047] getobjprop 1226 ........................ <me.pUpdateRect>
  [1050] getprop 1355 ........................... <pCacheRectA>
  [1053] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1055] extcall 1367 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1058] setobjprop 1226 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1061] getlocal 10 ............................ <tmember>
  [1063] getobjprop 290 ......................... <tmember.image>
  [1066] setprop 1354 ........................... pCacheImage = tmember.image
  [1069] getlocal 12 ............................ <tX>
  [1071] getlocal 13 ............................ <tY>
  [1073] getlocal 12 ............................ <tX>
  [1075] getprop 1354 ........................... <pCacheImage>
  [1078] getobjprop 252 ......................... <pCacheImage.width>
  [1080] add .................................... <tX + pCacheImage.width>
  [1081] getlocal 13 ............................ <tY>
  [1083] getprop 1354 ........................... <pCacheImage>
  [1086] getobjprop 291 ......................... <pCacheImage.height>
  [1089] add .................................... <tY + pCacheImage.height>
  [1090] pusharglist 4 .......................... <tX, tY, tX + pCacheImage.width, tY + pCacheImage.height>
  [1092] extcall 322 ............................ <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)>
  [1095] setprop 1355 ........................... pCacheRectA = rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)
  [1098] getprop 1354 ........................... <pCacheImage>
  [1101] getobjprop 322 ......................... <pCacheImage.rect>
  [1104] setprop 1356 ........................... pCacheRectB = pCacheImage.rect
  [1107] getprop 1353 ........................... <pDrawProps>
  [1110] pushsymb 1171 .......................... <#maskImage>
  [1113] getprop 1354 ........................... <pCacheImage>
  [1116] pusharglist 1 .......................... <pCacheImage>
  [1118] objcall 1172 ........................... <pCacheImage.createMatte()>
  [1121] pusharglistnoret 3 ..................... <pDrawProps, #maskImage, pCacheImage.createMatte()>
  [1123] objcall 173 ............................ pDrawProps[#maskImage] = pCacheImage.createMatte()
  [1125] getparam 0 ............................. <me>
  [1127] getparam 0 ............................. <me>
  [1129] getobjprop 1226 ........................ <me.pUpdateRect>
  [1132] getprop 1355 ........................... <pCacheRectA>
  [1135] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1137] extcall 1367 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1140] setobjprop 1226 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1143] jmp [1150]
  [1146] pusharglistnoret 0 ..................... <>
  [1148] extcall 21 ............................. return 
  [1150] getparam 0 ............................. <me>
  [1152] getobjprop 1238 ........................ <me.pMainAction>
  [1155] pushcons 6 ............................. <"swm">
  [1157] eq ..................................... <me.pMainAction = "swm">
  [1158] jmpifz [1209] .......................... if me.pMainAction = "swm" then / else
  [1161] pushint8 14 ............................ <14>
  [1163] pushzero ............................... <0>
  [1164] pushint8 14 ............................ <14>
  [1166] pushzero ............................... <0>
  [1167] pusharglist 4 .......................... <14, 0, 14, 0>
  [1169] extcall 322 ............................ <rect(14, 0, 14, 0)>
  [1172] getparam 0 ............................. <me>
  [1174] getobjprop 1225 ........................ <me.pLocFix>
  [1177] getparam 0 ............................. <me>
  [1179] getobjprop 1225 ........................ <me.pLocFix>
  [1182] pusharglist 2 .......................... <me.pLocFix, me.pLocFix>
  [1184] extcall 322 ............................ <rect(me.pLocFix, me.pLocFix)>
  [1187] add .................................... <rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix)>
  [1188] getprop 1360 ........................... <pXFix>
  [1191] getprop 1361 ........................... <pYFix>
  [1194] getprop 1360 ........................... <pXFix>
  [1197] getprop 1361 ........................... <pYFix>
  [1200] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1202] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1203] add .................................... <rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]>
  [1204] setlocal 14 ............................ tRectMod = rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]
  [1206] jmp [1242]
  [1209] getparam 0 ............................. <me>
  [1211] getobjprop 1225 ........................ <me.pLocFix>
  [1214] getparam 0 ............................. <me>
  [1216] getobjprop 1225 ........................ <me.pLocFix>
  [1219] pusharglist 2 .......................... <me.pLocFix, me.pLocFix>
  [1221] extcall 322 ............................ <rect(me.pLocFix, me.pLocFix)>
  [1224] getprop 1360 ........................... <pXFix>
  [1227] getprop 1361 ........................... <pYFix>
  [1230] getprop 1360 ........................... <pXFix>
  [1233] getprop 1361 ........................... <pYFix>
  [1236] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1238] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1239] add .................................... <rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]>
  [1240] setlocal 14 ............................ tRectMod = rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]
  [1242] getparam 0 ............................. <me>
  [1244] getchainedprop 1265 .................... <me.pBuffer>
  [1247] getprop 1354 ........................... <pCacheImage>
  [1250] getprop 1355 ........................... <pCacheRectA>
  [1253] getlocal 14 ............................ <tRectMod>
  [1255] add .................................... <pCacheRectA + tRectMod>
  [1256] getprop 1356 ........................... <pCacheRectB>
  [1259] getprop 1353 ........................... <pDrawProps>
  [1262] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pDrawProps>
  [1264] objcall 323 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pDrawProps)
  [1267] getlocal 7 ............................. <tUnderWater>
  [1269] getparam 0 ............................. <me>
  [1271] getobjprop 1248 ........................ <me.pSwim>
  [1274] and .................................... <tUnderWater and me.pSwim>
  [1275] jmpifz [1323] .......................... if tUnderWater and me.pSwim then
  [1278] getprop 1411 ........................... <pSwimProps>
  [1281] pushsymb 1171 .......................... <#maskImage>
  [1284] getprop 1353 ........................... <pDrawProps>
  [1287] pushsymb 1171 .......................... <#maskImage>
  [1290] pusharglist 2 .......................... <pDrawProps, #maskImage>
  [1292] objcall 9 .............................. <pDrawProps[#maskImage]>
  [1294] pusharglistnoret 3 ..................... <pSwimProps, #maskImage, pDrawProps[#maskImage]>
  [1296] objcall 173 ............................ pSwimProps[#maskImage] = pDrawProps[#maskImage]
  [1298] getparam 0 ............................. <me>
  [1300] getchainedprop 1265 .................... <me.pBuffer>
  [1303] getprop 1354 ........................... <pCacheImage>
  [1306] getprop 1355 ........................... <pCacheRectA>
  [1309] getlocal 14 ............................ <tRectMod>
  [1311] add .................................... <pCacheRectA + tRectMod>
  [1312] getprop 1356 ........................... <pCacheRectB>
  [1315] getprop 1411 ........................... <pSwimProps>
  [1318] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pSwimProps>
  [1320] objcall 323 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pSwimProps)
  [1323] ret
end

on render me
  [  0] getprop 1359 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 35 .............................. <memberExists(pMemString)>
  [  7] jmpifz [114] ............................ if memberExists(pMemString) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 1265 ..................... <me.pBuffer>
  [ 15] getprop 1356 ............................ <pCacheRectB>
  [ 18] getprop 1355 ............................ <pCacheRectA>
  [ 21] getprop 1356 ............................ <pCacheRectB>
  [ 24] getprop 1353 ............................ <pDrawProps>
  [ 27] pusharglistnoret 5 ...................... <me.pBuffer, pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps>
  [ 29] objcall 323 ............................. me.pBuffer.copyPixels(pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps)
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 1248 ......................... <me.pSwim>
  [ 37] jmpifz [114] ............................ if me.pSwim then
  [ 40] getprop 1411 ............................ <pSwimProps>
  [ 43] pushsymb 1171 ........................... <#maskImage>
  [ 46] getprop 1353 ............................ <pDrawProps>
  [ 49] pushsymb 1171 ........................... <#maskImage>
  [ 52] pusharglist 2 ........................... <pDrawProps, #maskImage>
  [ 54] objcall 9 ............................... <pDrawProps[#maskImage]>
  [ 56] pusharglistnoret 3 ...................... <pSwimProps, #maskImage, pDrawProps[#maskImage]>
  [ 58] objcall 173 ............................. pSwimProps[#maskImage] = pDrawProps[#maskImage]
  [ 60] getparam 0 .............................. <me>
  [ 62] getchainedprop 1265 ..................... <me.pBuffer>
  [ 65] getprop 1354 ............................ <pCacheImage>
  [ 68] getprop 1355 ............................ <pCacheRectA>
  [ 71] getprop 1360 ............................ <pXFix>
  [ 74] getprop 1361 ............................ <pYFix>
  [ 77] getprop 1360 ............................ <pXFix>
  [ 80] getprop 1361 ............................ <pYFix>
  [ 83] pusharglist 4 ........................... <[pXFix, pYFix, pXFix, pYFix]>
  [ 85] pushlist ................................ <[pXFix, pYFix, pXFix, pYFix]>
  [ 86] add ..................................... <pCacheRectA + [pXFix, pYFix, pXFix, pYFix]>
  [ 87] getparam 0 .............................. <me>
  [ 89] getobjprop 1225 ......................... <me.pLocFix>
  [ 92] getparam 0 .............................. <me>
  [ 94] getobjprop 1225 ......................... <me.pLocFix>
  [ 97] pusharglist 2 ........................... <me.pLocFix, me.pLocFix>
  [ 99] extcall 322 ............................. <rect(me.pLocFix, me.pLocFix)>
  [102] add ..................................... <pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix)>
  [103] getprop 1356 ............................ <pCacheRectB>
  [106] getprop 1411 ............................ <pSwimProps>
  [109] pusharglistnoret 5 ...................... <me.pBuffer, pCacheImage, pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix), pCacheRectB, pSwimProps>
  [111] objcall 323 ............................. me.pBuffer.copyPixels(pCacheImage, pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix), pCacheRectB, pSwimProps)
  [114] ret
end

on setItemObj me, tmodel
  [  0] getprop 1312 ............................ <pPart>
  [  3] pushcons 25 ............................. <"ri">
  [  5] nteq .................................... <pPart <> "ri">
  [  6] getprop 1312 ............................ <pPart>
  [  9] pushcons 26 ............................. <"li">
  [ 11] nteq .................................... <pPart <> "li">
  [ 12] and ..................................... <(pPart <> "ri") and (pPart <> "li")>
  [ 13] jmpifz [ 20] ............................ if (pPart <> "ri") and (pPart <> "li") then
  [ 16] pusharglistnoret 0 ...................... <>
  [ 18] extcall 21 .............................. return 
  [ 20] getparam 1 .............................. <tmodel>
  [ 22] setprop 1352 ............................ pmodel = tmodel
  [ 25] ret
end

on defineDir me, tdir, tPart
  [  0] getparam 2 .............................. <tPart>
  [  2] pusharglist 1 ........................... <tPart>
  [  4] extcall 10 .............................. <voidp(tPart)>
  [  6] getparam 2 .............................. <tPart>
  [  8] getprop 1312 ............................ <pPart>
  [ 11] eq ...................................... <tPart = pPart>
  [ 12] or ...................................... <voidp(tPart) or (tPart = pPart)>
  [ 13] jmpifz [ 20] ............................ if voidp(tPart) or (tPart = pPart) then
  [ 16] getparam 1 .............................. <tdir>
  [ 18] setprop 34 .............................. pDirection = tdir
  [ 20] ret
end

on defineDirMultiple me, tdir, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1312 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 240 ............................. <tTargetPartList.getPos(pPart)>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <tTargetPartList.getPos(pPart) = 0>
  [ 11] jmpifz [ 18] ............................ if tTargetPartList.getPos(pPart) = 0 then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 21 .............................. return 
  [ 18] getparam 1 .............................. <tdir>
  [ 20] setprop 34 .............................. pDirection = tdir
  [ 22] ret
end

on defineAct me, tAct, tTargetPartList
  [  0] getprop 1357 ............................ <pAction>
  [  3] pushcons 28 ............................. <"std">
  [  5] eq ...................................... <pAction = "std">
  [  6] jmpifz [ 14] ............................ if pAction = "std" then
  [  9] getparam 1 .............................. <tAct>
  [ 11] setprop 1357 ............................ pAction = tAct
  [ 14] ret
end

on defineActMultiple me, tAct, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1312 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 240 ............................. <tTargetPartList.getPos(pPart)>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <tTargetPartList.getPos(pPart) = 0>
  [ 11] jmpifz [ 18] ............................ if tTargetPartList.getPos(pPart) = 0 then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 21 .............................. return 
  [ 18] getprop 1357 ............................ <pAction>
  [ 21] pushcons 28 ............................. <"std">
  [ 23] eq ...................................... <pAction = "std">
  [ 24] jmpifz [ 32] ............................ if pAction = "std" then
  [ 27] getparam 1 .............................. <tAct>
  [ 29] setprop 1357 ............................ pAction = tAct
  [ 32] getprop 1312 ............................ <pPart>
  [ 35] pushcons 23 ............................. <"ey">
  [ 37] eq ...................................... <pPart = "ey">
  [ 38] getparam 1 .............................. <tAct>
  [ 40] pushcons 28 ............................. <"std">
  [ 42] eq ...................................... <tAct = "std">
  [ 43] and ..................................... <(pPart = "ey") and (tAct = "std")>
  [ 44] jmpifz [ 52] ............................ if (pPart = "ey") and (tAct = "std") then
  [ 47] pushcons 28 ............................. <"std">
  [ 49] setprop 1357 ............................ pAction = "std"
  [ 52] ret
end

on defineInk me, tInk
  [  0] getparam 1 .............................. <tInk>
  [  2] pusharglist 1 ........................... <tInk>
  [  4] extcall 10 .............................. <voidp(tInk)>
  [  6] jmpifz [ 78] ............................ if voidp(tInk) then
  [  9] getprop 1312 ............................ <pPart>
  [ 12] peek 0 .................................. case pPart of
  [ 14] pushcons 23 ............................. <"ey">
  [ 16] eq
  [ 17] jmpifz [ 27] ............................ (case) "ey":
  [ 20] pushint8 36 ............................. <36>
  [ 22] setparam 1 .............................. tInk = 36
  [ 24] jmp [ 76]
  [ 27] peek 0
  [ 29] pushcons 29 ............................. <"sd">
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) "sd":
  [ 35] pushint8 32 ............................. <32>
  [ 37] setparam 1 .............................. tInk = 32
  [ 39] jmp [ 76]
  [ 42] peek 0
  [ 44] pushcons 25 ............................. <"ri">
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) "ri":
  [ 50] pushint8 8 .............................. <8>
  [ 52] setparam 1 .............................. tInk = 8
  [ 54] jmp [ 76]
  [ 57] peek 0
  [ 59] pushcons 26 ............................. <"li">
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) "li":
  [ 65] pushint8 8 .............................. <8>
  [ 67] setparam 1 .............................. tInk = 8
  [ 69] jmp [ 76] ............................... (case) otherwise:
  [ 72] pushint8 41 ............................. <41>
  [ 74] setparam 1 .............................. tInk = 41
  [ 76] pop 1 ................................... end case
  [ 78] getprop 1353 ............................ <pDrawProps>
  [ 81] pushsymb 419 ............................ <#ink>
  [ 84] getparam 1 .............................. <tInk>
  [ 86] pusharglistnoret 3 ...................... <pDrawProps, #ink, tInk>
  [ 88] objcall 173 ............................. pDrawProps[#ink] = tInk
  [ 90] getprop 1411 ............................ <pSwimProps>
  [ 93] pushsymb 419 ............................ <#ink>
  [ 96] getparam 1 .............................. <tInk>
  [ 98] pusharglistnoret 3 ...................... <pSwimProps, #ink, tInk>
  [100] objcall 173 ............................. pSwimProps[#ink] = tInk
  [102] pushint8 1 .............................. <1>
  [104] pusharglistnoret 1 ...................... <1>
  [106] extcall 21 .............................. return 1
  [108] ret
end

on setModel me, tmodel
  [  0] getparam 1 .............................. <tmodel>
  [  2] setprop 1352 ............................ pmodel = tmodel
  [  5] ret
end

on setColor me, tColor
  [  0] getparam 1 .............................. <tColor>
  [  2] pusharglist 1 ........................... <tColor>
  [  4] extcall 10 .............................. <voidp(tColor)>
  [  6] jmpifz [ 14] ............................ if voidp(tColor) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 21 .............................. return 0
  [ 14] getparam 1 .............................. <tColor>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] eq ...................................... <tColor = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tColor = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 21 .............................. return 0
  [ 27] getparam 1 .............................. <tColor>
  [ 29] getobjprop 248 .......................... <tColor.ilk>
  [ 31] pushsymb 357 ............................ <#color>
  [ 34] eq ...................................... <tColor.ilk = #color>
  [ 35] getprop 1353 ............................ <pDrawProps>
  [ 38] pushsymb 419 ............................ <#ink>
  [ 41] pusharglist 2 ........................... <pDrawProps, #ink>
  [ 43] objcall 9 ............................... <pDrawProps[#ink]>
  [ 45] pushint8 36 ............................. <36>
  [ 47] nteq .................................... <pDrawProps[#ink] <> 36>
  [ 48] and ..................................... <(tColor.ilk = #color) and (pDrawProps[#ink] <> 36)>
  [ 49] jmpifz [ 67] ............................ if (tColor.ilk = #color) and (pDrawProps[#ink] <> 36) then / else
  [ 52] getprop 1353 ............................ <pDrawProps>
  [ 55] pushsymb 311 ............................ <#bgColor>
  [ 58] getparam 1 .............................. <tColor>
  [ 60] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, tColor>
  [ 62] objcall 173 ............................. pDrawProps[#bgColor] = tColor
  [ 64] jmp [ 91]
  [ 67] getprop 1353 ............................ <pDrawProps>
  [ 70] pushsymb 311 ............................ <#bgColor>
  [ 73] pushint16 255 ........................... <255>
  [ 76] pushint16 255 ........................... <255>
  [ 79] pushint16 255 ........................... <255>
  [ 82] pusharglist 3 ........................... <255, 255, 255>
  [ 84] extcall 312 ............................. <rgb(255, 255, 255)>
  [ 87] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, rgb(255, 255, 255)>
  [ 89] objcall 173 ............................. pDrawProps[#bgColor] = rgb(255, 255, 255)
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglistnoret 1 ...................... <1>
  [ 95] extcall 21 .............................. return 1
  [ 97] ret
end

on doHandWork me, tAct
  [  0] pushcons 8 .............................. <"lh">
  [  2] pushcons 9 .............................. <"ls">
  [  4] pushcons 26 ............................. <"li">
  [  6] pushcons 15 ............................. <"rh">
  [  8] pushcons 16 ............................. <"rs">
  [ 10] pushcons 25 ............................. <"ri">
  [ 12] pusharglist 6 ........................... <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 14] pushlist ................................ <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 15] getprop 1312 ............................ <pPart>
  [ 18] pusharglist 2 ........................... <["lh", "ls", "li", "rh", "rs", "ri"], pPart>
  [ 20] objcall 238 ............................. <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart)>
  [ 22] pushzero ................................ <0>
  [ 23] nteq .................................... <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0>
  [ 24] jmpifz [ 32] ............................ if ["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0 then
  [ 27] getparam 1 .............................. <tAct>
  [ 29] setprop 1357 ............................ pAction = tAct
  [ 32] ret
end

on doHandWorkLeft me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1358 ............................ pActionLh = tAct
  [  5] ret
end

on doHandWorkRight me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1315 ............................ pActionRh = tAct
  [  5] ret
end

on layDown me
  [  0] pushcons 20 ............................. <"lay">
  [  2] setprop 1357 ............................ pAction = "lay"
  [  5] ret
end

on getCurrentMember me
  [  0] getprop 1359 ............................ <pMemString>
  [  3] pusharglistnoret 1 ...................... <pMemString>
  [  5] extcall 21 .............................. return pMemString
  [  7] ret
end

on getColor me
  [  0] getprop 1353 ............................ <pDrawProps>
  [  3] pushsymb 311 ............................ <#bgColor>
  [  6] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [  8] objcall 9 ............................... <pDrawProps[#bgColor]>
  [ 10] pusharglistnoret 1 ...................... <pDrawProps[#bgColor]>
  [ 12] extcall 21 .............................. return pDrawProps[#bgColor]
  [ 14] ret
end

on getDirection me
  [  0] getprop 34 .............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 21 .............................. return pDirection
  [  6] ret
end

on getLocation me
  [  0] getprop 1359 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 10 .............................. <voidp(pMemString)>
  [  7] jmpifz [ 15] ............................ if voidp(pMemString) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 21 .............................. return 0
  [ 15] getprop 1359 ............................ <pMemString>
  [ 18] pusharglist 1 ........................... <pMemString>
  [ 20] extcall 37 .............................. <getmemnum(pMemString)>
  [ 22] setlocal 0 .............................. tMemNum = getmemnum(pMemString)
  [ 24] getlocal 0 .............................. <tMemNum>
  [ 26] pushzero ................................ <0>
  [ 27] eq ...................................... <tMemNum = 0>
  [ 28] jmpifz [ 36] ............................ if tMemNum = 0 then
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 21 .............................. return 0
  [ 36] getlocal 0 .............................. <tMemNum>
  [ 38] pusharglist 1 ........................... <tMemNum>
  [ 40] extcall 30 .............................. <member(tMemNum)>
  [ 42] getobjprop 322 .......................... <member(tMemNum).rect>
  [ 45] setlocal 1 .............................. tImgRect = member(tMemNum).rect
  [ 47] getlocal 1 .............................. <tImgRect>
  [ 49] getobjprop 252 .......................... <tImgRect.width>
  [ 51] pushint8 2 .............................. <2>
  [ 53] div ..................................... <tImgRect.width / 2>
  [ 54] getlocal 1 .............................. <tImgRect>
  [ 56] getobjprop 291 .......................... <tImgRect.height>
  [ 59] pushint8 2 .............................. <2>
  [ 61] div ..................................... <tImgRect.height / 2>
  [ 62] pusharglist 2 ........................... <tImgRect.width / 2, tImgRect.height / 2>
  [ 64] extcall 293 ............................. <point(tImgRect.width / 2, tImgRect.height / 2)>
  [ 67] setlocal 2 .............................. tCenterPoint = point(tImgRect.width / 2, tImgRect.height / 2)
  [ 69] getlocal 0 .............................. <tMemNum>
  [ 71] pusharglist 1 ........................... <tMemNum>
  [ 73] extcall 30 .............................. <member(tMemNum)>
  [ 75] getobjprop 294 .......................... <member(tMemNum).regPoint>
  [ 78] setlocal 3 .............................. tRegPoint = member(tMemNum).regPoint
  [ 80] getlocal 3 .............................. <tRegPoint>
  [ 82] pushint8 1 .............................. <1>
  [ 84] inv ..................................... <-1>
  [ 85] mul ..................................... <tRegPoint * -1>
  [ 86] getlocal 2 .............................. <tCenterPoint>
  [ 88] add ..................................... <(tRegPoint * -1) + tCenterPoint>
  [ 89] pusharglistnoret 1 ...................... <(tRegPoint * -1) + tCenterPoint>
  [ 91] extcall 21 .............................. return (tRegPoint * -1) + tCenterPoint
  [ 93] ret
end

on copyPicture me, tImg, tdir, tHumanSize, tAction, tAnimFrame
  [  0] getparam 2 .............................. <tdir>
  [  2] pusharglist 1 ........................... <tdir>
  [  4] extcall 10 .............................. <voidp(tdir)>
  [  6] jmpifz [ 13] ............................ if voidp(tdir) then
  [  9] pushcons 30 ............................. <"2">
  [ 11] setparam 2 .............................. tdir = "2"
  [ 13] getparam 3 .............................. <tHumanSize>
  [ 15] pusharglist 1 ........................... <tHumanSize>
  [ 17] extcall 10 .............................. <voidp(tHumanSize)>
  [ 19] jmpifz [ 26] ............................ if voidp(tHumanSize) then
  [ 22] pushcons 31 ............................. <"h">
  [ 24] setparam 3 .............................. tHumanSize = "h"
  [ 26] getparam 4 .............................. <tAction>
  [ 28] pusharglist 1 ........................... <tAction>
  [ 30] extcall 10 .............................. <voidp(tAction)>
  [ 32] jmpifz [ 39] ............................ if voidp(tAction) then
  [ 35] pushcons 28 ............................. <"std">
  [ 37] setparam 4 .............................. tAction = "std"
  [ 39] getparam 5 .............................. <tAnimFrame>
  [ 41] pusharglist 1 ........................... <tAnimFrame>
  [ 43] extcall 10 .............................. <voidp(tAnimFrame)>
  [ 45] jmpifz [ 52] ............................ if voidp(tAnimFrame) then
  [ 48] pushcons 32 ............................. <"0">
  [ 50] setparam 5 .............................. tAnimFrame = "0"
  [ 52] getparam 3 .............................. <tHumanSize>
  [ 54] pushcons 27 ............................. <"_">
  [ 56] joinstr ................................. <tHumanSize & "_">
  [ 57] getparam 4 .............................. <tAction>
  [ 59] joinstr ................................. <tHumanSize & "_" & tAction>
  [ 60] pushcons 27 ............................. <"_">
  [ 62] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [ 63] getprop 1312 ............................ <pPart>
  [ 66] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [ 67] pushcons 27 ............................. <"_">
  [ 69] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [ 70] getprop 1352 ............................ <pmodel>
  [ 73] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel>
  [ 74] pushcons 27 ............................. <"_">
  [ 76] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_">
  [ 77] getparam 2 .............................. <tdir>
  [ 79] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir>
  [ 80] pushcons 27 ............................. <"_">
  [ 82] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [ 83] getparam 5 .............................. <tAnimFrame>
  [ 85] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame>
  [ 86] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame
  [ 88] getlocal 0 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 37 .............................. <getmemnum(tMemName)>
  [ 94] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [ 96] getlocal 1 .............................. <tMemNum>
  [ 98] pushzero ................................ <0>
  [ 99] eq ...................................... <tMemNum = 0>
  [100] jmpifz [177] ............................ if tMemNum = 0 then
  [103] pushcons 32 ............................. <"0">
  [105] getprop 1352 ............................ <pmodel>
  [108] pushsymb 450 ............................ <#char>
  [111] pushint8 2 .............................. <2>
  [113] pushint8 3 .............................. <3>
  [115] pusharglist 4 ........................... <pmodel, #char, 2, 3>
  [117] objcall 33 .............................. <pmodel.char[2..3]>
  [119] joinstr ................................. <"0" & pmodel.char[2..3]>
  [120] setlocal 2 .............................. tmodel = "0" & pmodel.char[2..3]
  [122] getparam 3 .............................. <tHumanSize>
  [124] pushcons 27 ............................. <"_">
  [126] joinstr ................................. <tHumanSize & "_">
  [127] getparam 4 .............................. <tAction>
  [129] joinstr ................................. <tHumanSize & "_" & tAction>
  [130] pushcons 27 ............................. <"_">
  [132] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [133] getprop 1312 ............................ <pPart>
  [136] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [137] pushcons 27 ............................. <"_">
  [139] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [140] getlocal 2 .............................. <tmodel>
  [142] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel>
  [143] pushcons 27 ............................. <"_">
  [145] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_">
  [146] getparam 2 .............................. <tdir>
  [148] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir>
  [149] pushcons 27 ............................. <"_">
  [151] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_">
  [152] getparam 5 .............................. <tAnimFrame>
  [154] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_" & tAnimFrame>
  [155] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_" & tAnimFrame
  [157] getlocal 0 .............................. <tMemName>
  [159] pusharglist 1 ........................... <tMemName>
  [161] extcall 37 .............................. <getmemnum(tMemName)>
  [163] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [165] getlocal 1 .............................. <tMemNum>
  [167] pushzero ................................ <0>
  [168] eq ...................................... <tMemNum = 0>
  [169] jmpifz [177] ............................ if tMemNum = 0 then
  [172] pushzero ................................ <0>
  [173] pusharglistnoret 1 ...................... <0>
  [175] extcall 21 .............................. return 0
  [177] getlocal 1 .............................. <tMemNum>
  [179] pusharglist 1 ........................... <tMemNum>
  [181] extcall 30 .............................. <member(tMemNum)>
  [183] setlocal 3 .............................. tmember = member(tMemNum)
  [185] getlocal 3 .............................. <tmember>
  [187] getobjprop 290 .......................... <tmember.image>
  [190] setlocal 4 .............................. tImage = tmember.image
  [192] getlocal 3 .............................. <tmember>
  [194] getobjprop 294 .......................... <tmember.regPoint>
  [197] setlocal 5 .............................. tRegPnt = tmember.regPoint
  [199] getlocal 5 .............................. <tRegPnt>
  [201] pushint8 1 .............................. <1>
  [203] pusharglist 2 ........................... <tRegPnt, 1>
  [205] objcall 9 ............................... <tRegPnt[1]>
  [207] inv ..................................... <-tRegPnt[1]>
  [208] setlocal 6 .............................. tX = -tRegPnt[1]
  [210] getparam 1 .............................. <tImg>
  [212] getchainedprop 322 ...................... <tImg.rect>
  [215] getobjprop 291 .......................... <tImg.rect.height>
  [218] getlocal 5 .............................. <tRegPnt>
  [220] pushint8 2 .............................. <2>
  [222] pusharglist 2 ........................... <tRegPnt, 2>
  [224] objcall 9 ............................... <tRegPnt[2]>
  [226] sub ..................................... <tImg.rect.height - tRegPnt[2]>
  [227] pushint8 10 ............................. <10>
  [229] sub ..................................... <tImg.rect.height - tRegPnt[2] - 10>
  [230] setlocal 7 .............................. tY = tImg.rect.height - tRegPnt[2] - 10
  [232] getlocal 6 .............................. <tX>
  [234] getlocal 7 .............................. <tY>
  [236] getlocal 6 .............................. <tX>
  [238] getlocal 4 .............................. <tImage>
  [240] getobjprop 252 .......................... <tImage.width>
  [242] add ..................................... <tX + tImage.width>
  [243] getlocal 7 .............................. <tY>
  [245] getlocal 4 .............................. <tImage>
  [247] getobjprop 291 .......................... <tImage.height>
  [250] add ..................................... <tY + tImage.height>
  [251] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [253] extcall 322 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [256] setlocal 8 .............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [258] getlocal 4 .............................. <tImage>
  [260] pusharglist 1 ........................... <tImage>
  [262] objcall 1172 ............................ <tImage.createMatte()>
  [265] setlocal 9 .............................. tMatte = tImage.createMatte()
  [267] getparam 1 .............................. <tImg>
  [269] getlocal 4 .............................. <tImage>
  [271] getlocal 8 .............................. <tRect>
  [273] getlocal 4 .............................. <tImage>
  [275] getobjprop 322 .......................... <tImage.rect>
  [278] pushsymb 1171 ........................... <#maskImage>
  [281] getlocal 9 .............................. <tMatte>
  [283] pushsymb 419 ............................ <#ink>
  [286] getprop 1353 ............................ <pDrawProps>
  [289] pushsymb 419 ............................ <#ink>
  [292] pusharglist 2 ........................... <pDrawProps, #ink>
  [294] objcall 9 ............................... <pDrawProps[#ink]>
  [296] pushsymb 311 ............................ <#bgColor>
  [299] getprop 1353 ............................ <pDrawProps>
  [302] pushsymb 311 ............................ <#bgColor>
  [305] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [307] objcall 9 ............................... <pDrawProps[#bgColor]>
  [309] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [311] pushproplist ............................ <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [312] pusharglistnoret 5 ...................... <tImg, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [314] objcall 323 ............................. tImg.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]])
  [317] pushint8 1 .............................. <1>
  [319] pusharglistnoret 1 ...................... <1>
  [321] extcall 21 .............................. return 1
  [323] ret
end

on reset me, tSwimFlag
  [  0] pushcons 28 ............................. <"std">
  [  2] setprop 1357 ............................ pAction = "std"
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 159 ............................. <VOID>
  [  9] setprop 1358 ............................ pActionLh = VOID
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 159 ............................. <VOID>
  [ 16] setprop 1315 ............................ pActionRh = VOID
  [ 19] ret
end

on setAnimation me, tPart, tAnim
  [  0] getparam 1 .............................. <tPart>
  [  2] getprop 1312 ............................ <pPart>
  [  5] nteq .................................... <tPart <> pPart>
  [  6] jmpifz [ 13] ............................ if tPart <> pPart then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 21 .............................. return 
  [ 13] getparam 2 .............................. <tAnim>
  [ 15] pusharglist 1 ........................... <tAnim>
  [ 17] extcall 411 ............................. <value(tAnim)>
  [ 20] setprop 1364 ............................ pAnimation = value(tAnim)
  [ 23] getprop 1364 ............................ <pAnimation>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pAnimation, 1>
  [ 30] objcall 9 ............................... <pAnimation[1]>
  [ 32] getobjprop 14 ........................... <pAnimation[1].count>
  [ 34] setprop 1365 ............................ pTotalFrame = pAnimation[1].count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setprop 6 ............................... pAnimFrame = 1
  [ 41] ret
end

on remAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1364 ............................ pAnimation = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 6 ............................... pAnimFrame = 1
  [  8] pushint8 1 .............................. <1>
  [ 10] setprop 1365 ............................ pTotalFrame = 1
  [ 13] ret
end

on animate me
  [  0] getprop 1364 ............................ <pAnimation>
  [  3] not ..................................... <not pAnimation>
  [  4] jmpifz [ 13] ............................ if not pAnimation then
  [  7] pushcons 0 .............................. <EMPTY>
  [  9] pusharglistnoret 1 ...................... <EMPTY>
  [ 11] extcall 21 .............................. return EMPTY
  [ 13] getprop 34 .............................. <pDirection>
  [ 15] getprop 1364 ............................ <pAnimation>
  [ 18] pushsymb 1384 ........................... <#OffD>
  [ 21] pusharglist 2 ........................... <pAnimation, #OffD>
  [ 23] objcall 9 ............................... <pAnimation[#OffD]>
  [ 25] getprop 6 ............................... <pAnimFrame>
  [ 27] pusharglist 2 ........................... <pAnimation[#OffD], pAnimFrame>
  [ 29] objcall 9 ............................... <pAnimation[#OffD][pAnimFrame]>
  [ 31] add ..................................... <pDirection + pAnimation[#OffD][pAnimFrame]>
  [ 32] setlocal 0 .............................. tdir = pDirection + pAnimation[#OffD][pAnimFrame]
  [ 34] getlocal 0 .............................. <tdir>
  [ 36] pushint8 7 .............................. <7>
  [ 38] gt ...................................... <tdir > 7>
  [ 39] jmpifz [ 55] ............................ if tdir > 7 then / else
  [ 42] getlocal 0 .............................. <tdir>
  [ 44] getlocal 0 .............................. <tdir>
  [ 46] pushint8 7 .............................. <7>
  [ 48] mod ..................................... <tdir mod 7>
  [ 49] sub ..................................... <tdir - (tdir mod 7)>
  [ 50] setlocal 0 .............................. tdir = tdir - (tdir mod 7)
  [ 52] jmp [ 72]
  [ 55] getlocal 0 .............................. <tdir>
  [ 57] pushzero ................................ <0>
  [ 58] lt ...................................... <tdir < 0>
  [ 59] jmpifz [ 72] ............................ if tdir < 0 then
  [ 62] pushint8 7 .............................. <7>
  [ 64] getlocal 0 .............................. <tdir>
  [ 66] add ..................................... <7 + tdir>
  [ 67] pushint8 1 .............................. <1>
  [ 69] add ..................................... <7 + tdir + 1>
  [ 70] setlocal 0 .............................. tdir = 7 + tdir + 1
  [ 72] getparam 0 .............................. <me>
  [ 74] pushsymb 1224 ........................... <#pFlipList>
  [ 77] getlocal 0 .............................. <tdir>
  [ 79] pushint8 1 .............................. <1>
  [ 81] add ..................................... <tdir + 1>
  [ 82] pusharglist 3 ........................... <me, #pFlipList, tdir + 1>
  [ 84] objcall 33 .............................. <me.pFlipList[tdir + 1]>
  [ 86] setlocal 0 .............................. tdir = me.pFlipList[tdir + 1]
  [ 88] getprop 1364 ............................ <pAnimation>
  [ 91] pushsymb 1387 ........................... <#OffX>
  [ 94] pusharglist 2 ........................... <pAnimation, #OffX>
  [ 96] objcall 9 ............................... <pAnimation[#OffX]>
  [ 98] getprop 6 ............................... <pAnimFrame>
  [100] pusharglist 2 ........................... <pAnimation[#OffX], pAnimFrame>
  [102] objcall 9 ............................... <pAnimation[#OffX][pAnimFrame]>
  [104] setprop 1360 ............................ pXFix = pAnimation[#OffX][pAnimFrame]
  [107] getprop 1364 ............................ <pAnimation>
  [110] pushsymb 1388 ........................... <#OffY>
  [113] pusharglist 2 ........................... <pAnimation, #OffY>
  [115] objcall 9 ............................... <pAnimation[#OffY]>
  [117] getprop 6 ............................... <pAnimFrame>
  [119] pusharglist 2 ........................... <pAnimation[#OffY], pAnimFrame>
  [121] objcall 9 ............................... <pAnimation[#OffY][pAnimFrame]>
  [123] setprop 1361 ............................ pYFix = pAnimation[#OffY][pAnimFrame]
  [126] getparam 0 .............................. <me>
  [128] getobjprop 1268 ......................... <me.pPeopleSize>
  [131] pushcons 27 ............................. <"_">
  [133] joinstr ................................. <me.pPeopleSize & "_">
  [134] getprop 1364 ............................ <pAnimation>
  [137] pushsymb 1389 ........................... <#act>
  [140] pusharglist 2 ........................... <pAnimation, #act>
  [142] objcall 9 ............................... <pAnimation[#act]>
  [144] getprop 6 ............................... <pAnimFrame>
  [146] pusharglist 2 ........................... <pAnimation[#act], pAnimFrame>
  [148] objcall 9 ............................... <pAnimation[#act][pAnimFrame]>
  [150] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame]>
  [151] pushcons 27 ............................. <"_">
  [153] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_">
  [154] getprop 1312 ............................ <pPart>
  [157] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart>
  [158] pushcons 27 ............................. <"_">
  [160] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_">
  [161] getprop 1352 ............................ <pmodel>
  [164] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel>
  [165] pushcons 27 ............................. <"_">
  [167] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_">
  [168] getlocal 0 .............................. <tdir>
  [170] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir>
  [171] pushcons 27 ............................. <"_">
  [173] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [174] getprop 1364 ............................ <pAnimation>
  [177] pushsymb 1390 ........................... <#frm>
  [180] pusharglist 2 ........................... <pAnimation, #frm>
  [182] objcall 9 ............................... <pAnimation[#frm]>
  [184] getprop 6 ............................... <pAnimFrame>
  [186] pusharglist 2 ........................... <pAnimation[#frm], pAnimFrame>
  [188] objcall 9 ............................... <pAnimation[#frm][pAnimFrame]>
  [190] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]>
  [191] setlocal 1 .............................. tMemName = me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]
  [193] getprop 6 ............................... <pAnimFrame>
  [195] pushint8 1 .............................. <1>
  [197] add ..................................... <pAnimFrame + 1>
  [198] setprop 6 ............................... pAnimFrame = pAnimFrame + 1
  [200] getprop 6 ............................... <pAnimFrame>
  [202] getprop 1365 ............................ <pTotalFrame>
  [205] gt ...................................... <pAnimFrame > pTotalFrame>
  [206] jmpifz [213] ............................ if pAnimFrame > pTotalFrame then
  [209] pushint8 1 .............................. <1>
  [211] setprop 6 ............................... pAnimFrame = 1
  [213] getlocal 1 .............................. <tMemName>
  [215] pusharglistnoret 1 ...................... <tMemName>
  [217] extcall 21 .............................. return tMemName
  [219] ret
end
