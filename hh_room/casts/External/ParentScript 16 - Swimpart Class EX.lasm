property ancestor, pPart, pmodel, pDirection, pDrawProps, pSwimProps, pAction, pActionLh, pActionRh, pMemString, pXFix, pYFix, pLastLocFix, pCacheImage, pCacheRectA, pCacheRectB, pAnimation, pAnimFrame, pTotalFrame

on deconsturct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 120 ............................. <VOID>
  [  4] setprop 1337 ............................ ancestor = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 116 ............................. return 1
  [ 13] ret
end

on define me, tPart, tmodel, tColor, tDirection, tAction, tAncestor
  [  0] getparam 6 .............................. <tAncestor>
  [  2] setprop 1337 ............................ ancestor = tAncestor
  [  5] getparam 1 .............................. <tPart>
  [  7] setprop 1298 ............................ pPart = tPart
  [ 10] getparam 2 .............................. <tmodel>
  [ 12] setprop 1338 ............................ pmodel = tmodel
  [ 15] pushsymb 1156 ........................... <#maskImage>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 393 ............................ <#ink>
  [ 22] pushzero ................................ <0>
  [ 23] pushsymb 282 ............................ <#bgColor>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglist 6 ........................... <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 29] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: 0]>
  [ 30] setprop 1339 ............................ pDrawProps = [#maskImage: 0, #ink: 0, #bgColor: 0]
  [ 33] pushsymb 1156 ........................... <#maskImage>
  [ 36] pushzero ................................ <0>
  [ 37] pushsymb 393 ............................ <#ink>
  [ 40] pushzero ................................ <0>
  [ 41] pushsymb 282 ............................ <#bgColor>
  [ 44] pushzero ................................ <0>
  [ 45] pushint16 156 ........................... <156>
  [ 48] pushint16 156 ........................... <156>
  [ 51] pusharglist 3 ........................... <0, 156, 156>
  [ 53] extcall 283 ............................. <rgb(0, 156, 156)>
  [ 56] pushsymb 327 ............................ <#color>
  [ 59] pushzero ................................ <0>
  [ 60] pushint16 156 ........................... <156>
  [ 63] pushint16 156 ........................... <156>
  [ 66] pusharglist 3 ........................... <0, 156, 156>
  [ 68] extcall 283 ............................. <rgb(0, 156, 156)>
  [ 71] pushsymb 333 ............................ <#blend>
  [ 74] pushint8 60 ............................. <60>
  [ 76] pusharglist 10 .......................... <[#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]>
  [ 78] pushproplist ............................ <[#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]>
  [ 79] setprop 1398 ............................ pSwimProps = [#maskImage: 0, #ink: 0, #bgColor: rgb(0, 156, 156), #color: rgb(0, 156, 156), #blend: 60]
  [ 82] pushzero ................................ <0>
  [ 83] setprop 1340 ............................ pCacheImage = 0
  [ 86] pushzero ................................ <0>
  [ 87] pushzero ................................ <0>
  [ 88] pushzero ................................ <0>
  [ 89] pushzero ................................ <0>
  [ 90] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 92] extcall 221 ............................. <rect(0, 0, 0, 0)>
  [ 94] setprop 1341 ............................ pCacheRectA = rect(0, 0, 0, 0)
  [ 97] pushzero ................................ <0>
  [ 98] pushzero ................................ <0>
  [ 99] pushzero ................................ <0>
  [100] pushzero ................................ <0>
  [101] pusharglist 4 ........................... <0, 0, 0, 0>
  [103] extcall 221 ............................. <rect(0, 0, 0, 0)>
  [105] setprop 1342 ............................ pCacheRectB = rect(0, 0, 0, 0)
  [108] getparam 0 .............................. <me>
  [110] pusharglistnoret 1 ...................... <me>
  [112] objcall 1333 ............................ me.defineInk()
  [115] getparam 0 .............................. <me>
  [117] getparam 3 .............................. <tColor>
  [119] pusharglistnoret 2 ...................... <me, tColor>
  [121] objcall 1272 ............................ me.setColor(tColor)
  [124] getparam 4 .............................. <tDirection>
  [126] setprop 376 ............................. pDirection = tDirection
  [129] getparam 5 .............................. <tAction>
  [131] setprop 1343 ............................ pAction = tAction
  [134] getparam 5 .............................. <tAction>
  [136] setprop 1344 ............................ pActionLh = tAction
  [139] getparam 5 .............................. <tAction>
  [141] setprop 1301 ............................ pActionRh = tAction
  [144] pushcons 0 .............................. <EMPTY>
  [146] setprop 1345 ............................ pMemString = EMPTY
  [149] pushzero ................................ <0>
  [150] setprop 1346 ............................ pXFix = 0
  [153] pushzero ................................ <0>
  [154] setprop 1347 ............................ pYFix = 0
  [157] pushint16 1000 .......................... <1000>
  [160] pushint16 1000 .......................... <1000>
  [163] pusharglist 2 ........................... <1000, 1000>
  [165] extcall 264 ............................. <point(1000, 1000)>
  [168] setprop 1349 ............................ pLastLocFix = point(1000, 1000)
  [171] pushzero ................................ <0>
  [172] setprop 1350 ............................ pAnimation = 0
  [175] pushint8 1 .............................. <1>
  [177] setprop 1351 ............................ pAnimFrame = 1
  [180] pushint8 1 .............................. <1>
  [182] setprop 1352 ............................ pTotalFrame = 1
  [185] pushint8 1 .............................. <1>
  [187] pusharglistnoret 1 ...................... <1>
  [189] extcall 116 ............................. return 1
  [191] ret
end

on update me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tAnimCounter = 0
  [  3] getprop 1343 ............................ <pAction>
  [  6] setlocal 1 .............................. tAction = pAction
  [  8] getprop 1298 ............................ <pPart>
  [ 11] setlocal 2 .............................. tPart = pPart
  [ 13] getparam 0 .............................. <me>
  [ 15] pushsymb 1209 ........................... <#pFlipList>
  [ 18] getprop 376 ............................. <pDirection>
  [ 21] pushint8 1 .............................. <1>
  [ 23] add ..................................... <pDirection + 1>
  [ 24] pusharglist 3 ........................... <me, #pFlipList, pDirection + 1>
  [ 26] objcall 134 ............................. <me.pFlipList[pDirection + 1]>
  [ 28] setlocal 3 .............................. tdir = me.pFlipList[pDirection + 1]
  [ 30] pushzero ................................ <0>
  [ 31] setprop 1346 ............................ pXFix = 0
  [ 34] pushzero ................................ <0>
  [ 35] setprop 1347 ............................ pYFix = 0
  [ 38] getparam 0 .............................. <me>
  [ 40] getobjprop 1232 ......................... <me.pAnimating>
  [ 43] jmpifz [307] ............................ if me.pAnimating then / else
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglist 1 ........................... <me>
  [ 50] objcall 856 ............................. <me.animate()>
  [ 53] setlocal 4 .............................. tMemString = me.animate()
  [ 55] getparam 0 .............................. <me>
  [ 57] getobjprop 376 .......................... <me.pDirection>
  [ 60] setlocal 5 .............................. tAncestorDir = me.pDirection
  [ 62] getparam 0 .............................. <me>
  [ 64] getobjprop 1253 ......................... <me.pPeopleSize>
  [ 67] pushcons 1 .............................. <"sh">
  [ 69] eq ...................................... <me.pPeopleSize = "sh">
  [ 70] jmpifz [ 80] ............................ if me.pPeopleSize = "sh" then / else
  [ 73] pushcons 2 .............................. <0.69999999999999996>
  [ 75] setlocal 6 .............................. tSizeMultiplier = 0.69999999999999996
  [ 77] jmp [ 84]
  [ 80] pushint8 1 .............................. <1>
  [ 82] setlocal 6 .............................. tSizeMultiplier = 1
  [ 84] getlocal 5 .............................. <tAncestorDir>
  [ 86] peek 0 .................................. case tAncestorDir of
  [ 88] pushzero ................................ <0>
  [ 89] eq
  [ 90] jmpifz [118] ............................ (case) 0:
  [ 93] getprop 1347 ............................ <pYFix>
  [ 96] getprop 1346 ............................ <pXFix>
  [ 99] pushint8 2 .............................. <2>
  [101] div ..................................... <pXFix / 2>
  [102] add ..................................... <pYFix + (pXFix / 2)>
  [103] setprop 1347 ............................ pYFix = pYFix + (pXFix / 2)
  [106] getprop 1346 ............................ <pXFix>
  [109] pushint8 2 .............................. <2>
  [111] div ..................................... <pXFix / 2>
  [112] setprop 1346 ............................ pXFix = pXFix / 2
  [115] jmp [284]
  [118] peek 0
  [120] pushint8 1 .............................. <1>
  [122] eq
  [123] jmpifz [143] ............................ (case) 1:
  [126] getprop 1347 ............................ <pYFix>
  [129] getprop 1346 ............................ <pXFix>
  [132] add ..................................... <pYFix + pXFix>
  [133] setprop 1347 ............................ pYFix = pYFix + pXFix
  [136] pushzero ................................ <0>
  [137] setprop 1346 ............................ pXFix = 0
  [140] jmp [284]
  [143] peek 0
  [145] pushint8 2 .............................. <2>
  [147] eq
  [148] jmpifz [176] ............................ (case) 2:
  [151] getprop 1347 ............................ <pYFix>
  [154] getprop 1346 ............................ <pXFix>
  [157] pushint8 2 .............................. <2>
  [159] div ..................................... <pXFix / 2>
  [160] sub ..................................... <pYFix - (pXFix / 2)>
  [161] setprop 1347 ............................ pYFix = pYFix - (pXFix / 2)
  [164] getprop 1346 ............................ <pXFix>
  [167] pushint8 2 .............................. <2>
  [169] div ..................................... <pXFix / 2>
  [170] setprop 1346 ............................ pXFix = pXFix / 2
  [173] jmp [284]
  [176] peek 0
  [178] pushint8 4 .............................. <4>
  [180] eq
  [181] jmpifz [210] ............................ (case) 4:
  [184] getprop 1347 ............................ <pYFix>
  [187] getprop 1346 ............................ <pXFix>
  [190] pushint8 2 .............................. <2>
  [192] div ..................................... <pXFix / 2>
  [193] add ..................................... <pYFix + (pXFix / 2)>
  [194] setprop 1347 ............................ pYFix = pYFix + (pXFix / 2)
  [197] getprop 1346 ............................ <pXFix>
  [200] inv ..................................... <-pXFix>
  [201] pushint8 2 .............................. <2>
  [203] div ..................................... <-pXFix / 2>
  [204] setprop 1346 ............................ pXFix = -pXFix / 2
  [207] jmp [284]
  [210] peek 0
  [212] pushint8 5 .............................. <5>
  [214] eq
  [215] jmpifz [235] ............................ (case) 5:
  [218] getprop 1347 ............................ <pYFix>
  [221] getprop 1346 ............................ <pXFix>
  [224] sub ..................................... <pYFix - pXFix>
  [225] setprop 1347 ............................ pYFix = pYFix - pXFix
  [228] pushzero ................................ <0>
  [229] setprop 1346 ............................ pXFix = 0
  [232] jmp [284]
  [235] peek 0
  [237] pushint8 6 .............................. <6>
  [239] eq
  [240] jmpifz [269] ............................ (case) 6:
  [243] getprop 1347 ............................ <pYFix>
  [246] getprop 1346 ............................ <pXFix>
  [249] pushint8 2 .............................. <2>
  [251] div ..................................... <pXFix / 2>
  [252] sub ..................................... <pYFix - (pXFix / 2)>
  [253] setprop 1347 ............................ pYFix = pYFix - (pXFix / 2)
  [256] getprop 1346 ............................ <pXFix>
  [259] inv ..................................... <-pXFix>
  [260] pushint8 2 .............................. <2>
  [262] div ..................................... <-pXFix / 2>
  [263] setprop 1346 ............................ pXFix = -pXFix / 2
  [266] jmp [284]
  [269] peek 0
  [271] pushint8 7 .............................. <7>
  [273] eq
  [274] jmpifz [284] ............................ (case) 7:
  [277] getprop 1346 ............................ <pXFix>
  [280] inv ..................................... <-pXFix>
  [281] setprop 1346 ............................ pXFix = -pXFix
  [284] pop 1 ................................... end case
  [286] getprop 1346 ............................ <pXFix>
  [289] getlocal 6 .............................. <tSizeMultiplier>
  [291] mul ..................................... <pXFix * tSizeMultiplier>
  [292] setprop 1346 ............................ pXFix = pXFix * tSizeMultiplier
  [295] getprop 1347 ............................ <pYFix>
  [298] getlocal 6 .............................. <tSizeMultiplier>
  [300] mul ..................................... <pYFix * tSizeMultiplier>
  [301] setprop 1347 ............................ pYFix = pYFix * tSizeMultiplier
  [304] jmp [937]
  [307] getprop 1298 ............................ <pPart>
  [310] peek 0 .................................. case pPart of
  [312] pushcons 3 .............................. <"bd">
  [314] nteq
  [315] jmpifz [334] ............................ (case) "bd", ...
  [318] peek 0
  [320] pushcons 4 .............................. <"lg">
  [322] nteq
  [323] jmpifz [334] ............................ (case) ..., "lg", ...
  [326] peek 0
  [328] pushcons 1 .............................. <"sh">
  [330] eq
  [331] jmpifz [371] ............................ (case) ..., "sh":
  [334] pushint8 1 .............................. <1>
  [336] setlocal 7 .............................. tUnderWater = 1
  [338] getprop 1343 ............................ <pAction>
  [341] pushcons 5 .............................. <"wlk">
  [343] eq ...................................... <pAction = "wlk">
  [344] getprop 1343 ............................ <pAction>
  [347] pushcons 6 .............................. <"swm">
  [349] eq ...................................... <pAction = "swm">
  [350] or ...................................... <(pAction = "wlk") or (pAction = "swm")>
  [351] getprop 1343 ............................ <pAction>
  [354] pushcons 7 .............................. <"sws">
  [356] eq ...................................... <pAction = "sws">
  [357] or ...................................... <(pAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [358] jmpifz [368] ............................ if (pAction = "wlk") or (pAction = "swm") or (pAction = "sws") then
  [361] getparam 0 .............................. <me>
  [363] getobjprop 1217 ......................... <me.pAnimCounter>
  [366] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [368] jmp [897]
  [371] peek 0
  [373] pushcons 8 .............................. <"lh">
  [375] nteq
  [376] jmpifz [387] ............................ (case) "lh", ...
  [379] peek 0
  [381] pushcons 9 .............................. <"ls">
  [383] eq
  [384] jmpifz [542] ............................ (case) ..., "ls":
  [387] pushint8 1 .............................. <1>
  [389] setlocal 7 .............................. tUnderWater = 1
  [391] getprop 376 ............................. <pDirection>
  [394] getlocal 3 .............................. <tdir>
  [396] eq ...................................... <pDirection = tdir>
  [397] jmpifz [419] ............................ if pDirection = tdir then / else
  [400] getprop 1344 ............................ <pActionLh>
  [403] pusharglist 1 ........................... <pActionLh>
  [405] extcall 253 ............................. <voidp(pActionLh)>
  [407] not ..................................... <not voidp(pActionLh)>
  [408] jmpifz [416] ............................ if not voidp(pActionLh) then
  [411] getprop 1344 ............................ <pActionLh>
  [414] setlocal 1 .............................. tAction = pActionLh
  [416] jmp [435]
  [419] getprop 1301 ............................ <pActionRh>
  [422] pusharglist 1 ........................... <pActionRh>
  [424] extcall 253 ............................. <voidp(pActionRh)>
  [426] not ..................................... <not voidp(pActionRh)>
  [427] jmpifz [435] ............................ if not voidp(pActionRh) then
  [430] getprop 1301 ............................ <pActionRh>
  [433] setlocal 1 .............................. tAction = pActionRh
  [435] getlocal 1 .............................. <tAction>
  [437] pushcons 5 .............................. <"wlk">
  [439] eq ...................................... <tAction = "wlk">
  [440] getprop 1343 ............................ <pAction>
  [443] pushcons 6 .............................. <"swm">
  [445] eq ...................................... <pAction = "swm">
  [446] or ...................................... <(tAction = "wlk") or (pAction = "swm")>
  [447] getprop 1343 ............................ <pAction>
  [450] pushcons 7 .............................. <"sws">
  [452] eq ...................................... <pAction = "sws">
  [453] or ...................................... <(tAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [454] jmpifz [467] ............................ if (tAction = "wlk") or (pAction = "swm") or (pAction = "sws") then / else
  [457] getparam 0 .............................. <me>
  [459] getobjprop 1217 ......................... <me.pAnimCounter>
  [462] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [464] jmp [539]
  [467] getlocal 1 .............................. <tAction>
  [469] pushcons 10 ............................. <"wav">
  [471] eq ...................................... <tAction = "wav">
  [472] jmpifz [491] ............................ if tAction = "wav" then / else
  [475] pushzero ................................ <0>
  [476] setlocal 7 .............................. tUnderWater = 0
  [478] getparam 0 .............................. <me>
  [480] getobjprop 1217 ......................... <me.pAnimCounter>
  [483] pushint8 2 .............................. <2>
  [485] mod ..................................... <me.pAnimCounter mod 2>
  [486] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [488] jmp [539]
  [491] pushcons 11 ............................. <"crr">
  [493] pushcons 12 ............................. <"drk">
  [495] pushcons 13 ............................. <"ohd">
  [497] pusharglist 3 ........................... <["crr", "drk", "ohd"]>
  [499] pushlist ................................ <["crr", "drk", "ohd"]>
  [500] getlocal 1 .............................. <tAction>
  [502] pusharglist 2 ........................... <["crr", "drk", "ohd"], tAction>
  [504] objcall 207 ............................. <["crr", "drk", "ohd"].getPos(tAction)>
  [506] pushzero ................................ <0>
  [507] nteq .................................... <["crr", "drk", "ohd"].getPos(tAction) <> 0>
  [508] jmpifz [539] ............................ if ["crr", "drk", "ohd"].getPos(tAction) <> 0 then
  [511] pushint8 40 ............................. <40>
  [513] inv ..................................... <-40>
  [514] setprop 1346 ............................ pXFix = -40
  [517] pushcons 14 ............................. <"r">
  [519] getprop 1298 ............................ <pPart>
  [522] pushsymb 425 ............................ <#char>
  [525] pushint8 2 .............................. <2>
  [527] pusharglist 3 ........................... <pPart, #char, 2>
  [529] objcall 134 ............................. <pPart.char[2]>
  [531] joinstr ................................. <"r" & pPart.char[2]>
  [532] setlocal 2 .............................. tPart = "r" & pPart.char[2]
  [534] getprop 376 ............................. <pDirection>
  [537] setlocal 3 .............................. tdir = pDirection
  [539] jmp [897]
  [542] peek 0
  [544] pushcons 15 ............................. <"rh">
  [546] nteq
  [547] jmpifz [558] ............................ (case) "rh", ...
  [550] peek 0
  [552] pushcons 16 ............................. <"rs">
  [554] eq
  [555] jmpifz [684] ............................ (case) ..., "rs":
  [558] pushint8 1 .............................. <1>
  [560] setlocal 7 .............................. tUnderWater = 1
  [562] getprop 376 ............................. <pDirection>
  [565] getlocal 3 .............................. <tdir>
  [567] eq ...................................... <pDirection = tdir>
  [568] jmpifz [590] ............................ if pDirection = tdir then / else
  [571] getprop 1301 ............................ <pActionRh>
  [574] pusharglist 1 ........................... <pActionRh>
  [576] extcall 253 ............................. <voidp(pActionRh)>
  [578] not ..................................... <not voidp(pActionRh)>
  [579] jmpifz [587] ............................ if not voidp(pActionRh) then
  [582] getprop 1301 ............................ <pActionRh>
  [585] setlocal 1 .............................. tAction = pActionRh
  [587] jmp [606]
  [590] getprop 1344 ............................ <pActionLh>
  [593] pusharglist 1 ........................... <pActionLh>
  [595] extcall 253 ............................. <voidp(pActionLh)>
  [597] not ..................................... <not voidp(pActionLh)>
  [598] jmpifz [606] ............................ if not voidp(pActionLh) then
  [601] getprop 1344 ............................ <pActionLh>
  [604] setlocal 1 .............................. tAction = pActionLh
  [606] getlocal 1 .............................. <tAction>
  [608] pushcons 5 .............................. <"wlk">
  [610] eq ...................................... <tAction = "wlk">
  [611] getprop 1343 ............................ <pAction>
  [614] pushcons 6 .............................. <"swm">
  [616] eq ...................................... <pAction = "swm">
  [617] or ...................................... <(tAction = "wlk") or (pAction = "swm")>
  [618] getprop 1343 ............................ <pAction>
  [621] pushcons 7 .............................. <"sws">
  [623] eq ...................................... <pAction = "sws">
  [624] or ...................................... <(tAction = "wlk") or (pAction = "swm") or (pAction = "sws")>
  [625] jmpifz [638] ............................ if (tAction = "wlk") or (pAction = "swm") or (pAction = "sws") then / else
  [628] getparam 0 .............................. <me>
  [630] getobjprop 1217 ......................... <me.pAnimCounter>
  [633] setlocal 0 .............................. tAnimCounter = me.pAnimCounter
  [635] jmp [681]
  [638] getlocal 1 .............................. <tAction>
  [640] pushcons 10 ............................. <"wav">
  [642] eq ...................................... <tAction = "wav">
  [643] jmpifz [681] ............................ if tAction = "wav" then
  [646] pushzero ................................ <0>
  [647] setlocal 7 .............................. tUnderWater = 0
  [649] getparam 0 .............................. <me>
  [651] getobjprop 1217 ......................... <me.pAnimCounter>
  [654] pushint8 2 .............................. <2>
  [656] mod ..................................... <me.pAnimCounter mod 2>
  [657] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [659] pushcons 17 ............................. <"l">
  [661] getprop 1298 ............................ <pPart>
  [664] pushsymb 425 ............................ <#char>
  [667] pushint8 2 .............................. <2>
  [669] pusharglist 3 ........................... <pPart, #char, 2>
  [671] objcall 134 ............................. <pPart.char[2]>
  [673] joinstr ................................. <"l" & pPart.char[2]>
  [674] setlocal 2 .............................. tPart = "l" & pPart.char[2]
  [676] getprop 376 ............................. <pDirection>
  [679] setlocal 3 .............................. tdir = pDirection
  [681] jmp [897]
  [684] peek 0
  [686] pushcons 18 ............................. <"hd">
  [688] nteq
  [689] jmpifz [700] ............................ (case) "hd", ...
  [692] peek 0
  [694] pushcons 19 ............................. <"fc">
  [696] eq
  [697] jmpifz [744] ............................ (case) ..., "fc":
  [700] pushzero ................................ <0>
  [701] setlocal 7 .............................. tUnderWater = 0
  [703] getparam 0 .............................. <me>
  [705] getobjprop 1225 ......................... <me.pTalking>
  [708] jmpifz [741] ............................ if me.pTalking then
  [711] getprop 1343 ............................ <pAction>
  [714] pushcons 20 ............................. <"lay">
  [716] eq ...................................... <pAction = "lay">
  [717] jmpifz [727] ............................ if pAction = "lay" then / else
  [720] pushcons 21 ............................. <"lsp">
  [722] setlocal 1 .............................. tAction = "lsp"
  [724] jmp [731]
  [727] pushcons 22 ............................. <"spk">
  [729] setlocal 1 .............................. tAction = "spk"
  [731] getparam 0 .............................. <me>
  [733] getobjprop 1217 ......................... <me.pAnimCounter>
  [736] pushint8 2 .............................. <2>
  [738] mod ..................................... <me.pAnimCounter mod 2>
  [739] setlocal 0 .............................. tAnimCounter = me.pAnimCounter mod 2
  [741] jmp [897]
  [744] peek 0
  [746] pushcons 23 ............................. <"ey">
  [748] eq
  [749] jmpifz [790] ............................ (case) "ey":
  [752] pushzero ................................ <0>
  [753] setlocal 7 .............................. tUnderWater = 0
  [755] getparam 0 .............................. <me>
  [757] getobjprop 1225 ......................... <me.pTalking>
  [760] getprop 1343 ............................ <pAction>
  [763] pushcons 20 ............................. <"lay">
  [765] nteq .................................... <pAction <> "lay">
  [766] and ..................................... <me.pTalking and (pAction <> "lay")>
  [767] getparam 0 .............................. <me>
  [769] getobjprop 1217 ......................... <me.pAnimCounter>
  [772] pushint8 2 .............................. <2>
  [774] mod ..................................... <me.pAnimCounter mod 2>
  [775] pushzero ................................ <0>
  [776] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [777] and ..................................... <me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0)>
  [778] jmpifz [787] ............................ if me.pTalking and (pAction <> "lay") and ((me.pAnimCounter mod 2) = 0) then
  [781] pushint8 1 .............................. <1>
  [783] inv ..................................... <-1>
  [784] setprop 1347 ............................ pYFix = -1
  [787] jmp [897]
  [790] peek 0
  [792] pushcons 24 ............................. <"hr">
  [794] eq
  [795] jmpifz [836] ............................ (case) "hr":
  [798] pushzero ................................ <0>
  [799] setlocal 7 .............................. tUnderWater = 0
  [801] getparam 0 .............................. <me>
  [803] getobjprop 1225 ......................... <me.pTalking>
  [806] getparam 0 .............................. <me>
  [808] getobjprop 1217 ......................... <me.pAnimCounter>
  [811] pushint8 2 .............................. <2>
  [813] mod ..................................... <me.pAnimCounter mod 2>
  [814] pushzero ................................ <0>
  [815] eq ...................................... <(me.pAnimCounter mod 2) = 0>
  [816] and ..................................... <me.pTalking and ((me.pAnimCounter mod 2) = 0)>
  [817] jmpifz [833] ............................ if me.pTalking and ((me.pAnimCounter mod 2) = 0) then
  [820] getprop 1343 ............................ <pAction>
  [823] pushcons 20 ............................. <"lay">
  [825] nteq .................................... <pAction <> "lay">
  [826] jmpifz [833] ............................ if pAction <> "lay" then
  [829] pushcons 22 ............................. <"spk">
  [831] setlocal 1 .............................. tAction = "spk"
  [833] jmp [897]
  [836] peek 0
  [838] pushcons 25 ............................. <"ri">
  [840] eq
  [841] jmpifz [872] ............................ (case) "ri":
  [844] getparam 0 .............................. <me>
  [846] getobjprop 1226 ......................... <me.pCarrying>
  [849] not ..................................... <not me.pCarrying>
  [850] jmpifz [859] ............................ if not me.pCarrying then
  [853] pop 1
  [855] pusharglistnoret 0 ...................... <>
  [857] extcall 116 ............................. return 
  [859] getprop 1301 ............................ <pActionRh>
  [862] setlocal 1 .............................. tAction = pActionRh
  [864] getprop 376 ............................. <pDirection>
  [867] setlocal 3 .............................. tdir = pDirection
  [869] jmp [897]
  [872] peek 0
  [874] pushcons 26 ............................. <"li">
  [876] eq
  [877] jmpifz [893] ............................ (case) "li":
  [880] getprop 1344 ............................ <pActionLh>
  [883] setlocal 1 .............................. tAction = pActionLh
  [885] getprop 376 ............................. <pDirection>
  [888] setlocal 3 .............................. tdir = pDirection
  [890] jmp [897] ............................... (case) otherwise:
  [893] pushint8 1 .............................. <1>
  [895] setlocal 7 .............................. tUnderWater = 1
  [897] pop 1 ................................... end case
  [899] getparam 0 .............................. <me>
  [901] getobjprop 1253 ......................... <me.pPeopleSize>
  [904] pushcons 27 ............................. <"_">
  [906] joinstr ................................. <me.pPeopleSize & "_">
  [907] getlocal 1 .............................. <tAction>
  [909] joinstr ................................. <me.pPeopleSize & "_" & tAction>
  [910] pushcons 27 ............................. <"_">
  [912] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_">
  [913] getlocal 2 .............................. <tPart>
  [915] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart>
  [916] pushcons 27 ............................. <"_">
  [918] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_">
  [919] getprop 1338 ............................ <pmodel>
  [922] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel>
  [923] pushcons 27 ............................. <"_">
  [925] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_">
  [926] getlocal 3 .............................. <tdir>
  [928] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir>
  [929] pushcons 27 ............................. <"_">
  [931] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_">
  [932] getlocal 0 .............................. <tAnimCounter>
  [934] joinstr ................................. <me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCounter>
  [935] setlocal 4 .............................. tMemString = me.pPeopleSize & "_" & tAction & "_" & tPart & "_" & pmodel & "_" & tdir & "_" & tAnimCounter
  [937] getprop 1349 ............................ <pLastLocFix>
  [940] getprop 1346 ............................ <pXFix>
  [943] getprop 1347 ............................ <pYFix>
  [946] pusharglist 2 ........................... <pXFix, pYFix>
  [948] extcall 264 ............................. <point(pXFix, pYFix)>
  [951] nteq .................................... <pLastLocFix <> point(pXFix, pYFix)>
  [952] setlocal 8 .............................. tLocFixChanged = pLastLocFix <> point(pXFix, pYFix)
  [954] getprop 1346 ............................ <pXFix>
  [957] getprop 1347 ............................ <pYFix>
  [960] pusharglist 2 ........................... <pXFix, pYFix>
  [962] extcall 264 ............................. <point(pXFix, pYFix)>
  [965] setprop 1349 ............................ pLastLocFix = point(pXFix, pYFix)
  [968] getprop 1345 ............................ <pMemString>
  [971] getlocal 4 .............................. <tMemString>
  [973] nteq .................................... <pMemString <> tMemString>
  [974] getlocal 8 .............................. <tLocFixChanged>
  [976] or ...................................... <(pMemString <> tMemString) or tLocFixChanged>
  [977] jmpifz [1157] ........................... if (pMemString <> tMemString) or tLocFixChanged then
  [980] getlocal 4 .............................. <tMemString>
  [982] pusharglist 1 ........................... <tMemString>
  [984] extcall 330 ............................. <getmemnum(tMemString)>
  [987] setlocal 9 .............................. tMemNum = getmemnum(tMemString)
  [989] getlocal 9 .............................. <tMemNum>
  [991] pushzero ................................ <0>
  [992] gt ...................................... <tMemNum > 0>
  [993] jmpifz [1153] ........................... if tMemNum > 0 then / else
  [996] getlocal 4 .............................. <tMemString>
  [998] setprop 1345 ............................ pMemString = tMemString
  [1001] getlocal 9 ............................. <tMemNum>
  [1003] pusharglist 1 .......................... <tMemNum>
  [1005] extcall 263 ............................ <member(tMemNum)>
  [1008] setlocal 10 ............................ tmember = member(tMemNum)
  [1010] getlocal 10 ............................ <tmember>
  [1012] getobjprop 265 ......................... <tmember.regPoint>
  [1015] setlocal 11 ............................ tRegPnt = tmember.regPoint
  [1017] getlocal 11 ............................ <tRegPnt>
  [1019] pushint8 1 ............................. <1>
  [1021] pusharglist 2 .......................... <tRegPnt, 1>
  [1023] objcall 138 ............................ <tRegPnt[1]>
  [1025] inv .................................... <-tRegPnt[1]>
  [1026] setlocal 12 ............................ tX = -tRegPnt[1]
  [1028] getparam 0 ............................. <me>
  [1030] getchainedprop 1250 .................... <me.pBuffer>
  [1033] getchainedprop 221 ..................... <me.pBuffer.rect>
  [1035] getobjprop 261 ......................... <me.pBuffer.rect.height>
  [1038] getlocal 11 ............................ <tRegPnt>
  [1040] pushint8 2 ............................. <2>
  [1042] pusharglist 2 .......................... <tRegPnt, 2>
  [1044] objcall 138 ............................ <tRegPnt[2]>
  [1046] sub .................................... <me.pBuffer.rect.height - tRegPnt[2]>
  [1047] pushint8 10 ............................ <10>
  [1049] sub .................................... <me.pBuffer.rect.height - tRegPnt[2] - 10>
  [1050] setlocal 13 ............................ tY = me.pBuffer.rect.height - tRegPnt[2] - 10
  [1052] getparam 0 ............................. <me>
  [1054] getparam 0 ............................. <me>
  [1056] getobjprop 1211 ........................ <me.pUpdateRect>
  [1059] getprop 1341 ........................... <pCacheRectA>
  [1062] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1064] extcall 1354 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1067] setobjprop 1211 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1070] getlocal 10 ............................ <tmember>
  [1072] getobjprop 260 ......................... <tmember.image>
  [1075] setprop 1340 ........................... pCacheImage = tmember.image
  [1078] getlocal 12 ............................ <tX>
  [1080] getlocal 13 ............................ <tY>
  [1082] getlocal 12 ............................ <tX>
  [1084] getprop 1340 ........................... <pCacheImage>
  [1087] getobjprop 219 ......................... <pCacheImage.width>
  [1089] add .................................... <tX + pCacheImage.width>
  [1090] getlocal 13 ............................ <tY>
  [1092] getprop 1340 ........................... <pCacheImage>
  [1095] getobjprop 261 ......................... <pCacheImage.height>
  [1098] add .................................... <tY + pCacheImage.height>
  [1099] pusharglist 4 .......................... <tX, tY, tX + pCacheImage.width, tY + pCacheImage.height>
  [1101] extcall 221 ............................ <rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)>
  [1103] setprop 1341 ........................... pCacheRectA = rect(tX, tY, tX + pCacheImage.width, tY + pCacheImage.height)
  [1106] getprop 1340 ........................... <pCacheImage>
  [1109] getobjprop 221 ......................... <pCacheImage.rect>
  [1111] setprop 1342 ........................... pCacheRectB = pCacheImage.rect
  [1114] getprop 1339 ........................... <pDrawProps>
  [1117] pushsymb 1156 .......................... <#maskImage>
  [1120] getprop 1340 ........................... <pCacheImage>
  [1123] pusharglist 1 .......................... <pCacheImage>
  [1125] objcall 1157 ........................... <pCacheImage.createMatte()>
  [1128] pusharglistnoret 3 ..................... <pDrawProps, #maskImage, pCacheImage.createMatte()>
  [1130] objcall 136 ............................ pDrawProps[#maskImage] = pCacheImage.createMatte()
  [1132] getparam 0 ............................. <me>
  [1134] getparam 0 ............................. <me>
  [1136] getobjprop 1211 ........................ <me.pUpdateRect>
  [1139] getprop 1341 ........................... <pCacheRectA>
  [1142] pusharglist 2 .......................... <me.pUpdateRect, pCacheRectA>
  [1144] extcall 1354 ........................... <union(me.pUpdateRect, pCacheRectA)>
  [1147] setobjprop 1211 ........................ me.pUpdateRect = union(me.pUpdateRect, pCacheRectA)
  [1150] jmp [1157]
  [1153] pusharglistnoret 0 ..................... <>
  [1155] extcall 116 ............................ return 
  [1157] getparam 0 ............................. <me>
  [1159] getobjprop 1223 ........................ <me.pMainAction>
  [1162] pushcons 6 ............................. <"swm">
  [1164] eq ..................................... <me.pMainAction = "swm">
  [1165] jmpifz [1214] .......................... if me.pMainAction = "swm" then / else
  [1168] pushint8 14 ............................ <14>
  [1170] pushzero ............................... <0>
  [1171] pushint8 14 ............................ <14>
  [1173] pushzero ............................... <0>
  [1174] pusharglist 4 .......................... <14, 0, 14, 0>
  [1176] extcall 221 ............................ <rect(14, 0, 14, 0)>
  [1178] getparam 0 ............................. <me>
  [1180] getobjprop 1210 ........................ <me.pLocFix>
  [1183] getparam 0 ............................. <me>
  [1185] getobjprop 1210 ........................ <me.pLocFix>
  [1188] pusharglist 2 .......................... <me.pLocFix, me.pLocFix>
  [1190] extcall 221 ............................ <rect(me.pLocFix, me.pLocFix)>
  [1192] add .................................... <rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix)>
  [1193] getprop 1346 ........................... <pXFix>
  [1196] getprop 1347 ........................... <pYFix>
  [1199] getprop 1346 ........................... <pXFix>
  [1202] getprop 1347 ........................... <pYFix>
  [1205] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1207] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1208] add .................................... <rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]>
  [1209] setlocal 14 ............................ tRectMod = rect(14, 0, 14, 0) + rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]
  [1211] jmp [1246]
  [1214] getparam 0 ............................. <me>
  [1216] getobjprop 1210 ........................ <me.pLocFix>
  [1219] getparam 0 ............................. <me>
  [1221] getobjprop 1210 ........................ <me.pLocFix>
  [1224] pusharglist 2 .......................... <me.pLocFix, me.pLocFix>
  [1226] extcall 221 ............................ <rect(me.pLocFix, me.pLocFix)>
  [1228] getprop 1346 ........................... <pXFix>
  [1231] getprop 1347 ........................... <pYFix>
  [1234] getprop 1346 ........................... <pXFix>
  [1237] getprop 1347 ........................... <pYFix>
  [1240] pusharglist 4 .......................... <[pXFix, pYFix, pXFix, pYFix]>
  [1242] pushlist ............................... <[pXFix, pYFix, pXFix, pYFix]>
  [1243] add .................................... <rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]>
  [1244] setlocal 14 ............................ tRectMod = rect(me.pLocFix, me.pLocFix) + [pXFix, pYFix, pXFix, pYFix]
  [1246] getparam 0 ............................. <me>
  [1248] getchainedprop 1250 .................... <me.pBuffer>
  [1251] getprop 1340 ........................... <pCacheImage>
  [1254] getprop 1341 ........................... <pCacheRectA>
  [1257] getlocal 14 ............................ <tRectMod>
  [1259] add .................................... <pCacheRectA + tRectMod>
  [1260] getprop 1342 ........................... <pCacheRectB>
  [1263] getprop 1339 ........................... <pDrawProps>
  [1266] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pDrawProps>
  [1268] objcall 293 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pDrawProps)
  [1271] getlocal 7 ............................. <tUnderWater>
  [1273] getparam 0 ............................. <me>
  [1275] getobjprop 1233 ........................ <me.pSwim>
  [1278] and .................................... <tUnderWater and me.pSwim>
  [1279] jmpifz [1327] .......................... if tUnderWater and me.pSwim then
  [1282] getprop 1398 ........................... <pSwimProps>
  [1285] pushsymb 1156 .......................... <#maskImage>
  [1288] getprop 1339 ........................... <pDrawProps>
  [1291] pushsymb 1156 .......................... <#maskImage>
  [1294] pusharglist 2 .......................... <pDrawProps, #maskImage>
  [1296] objcall 138 ............................ <pDrawProps[#maskImage]>
  [1298] pusharglistnoret 3 ..................... <pSwimProps, #maskImage, pDrawProps[#maskImage]>
  [1300] objcall 136 ............................ pSwimProps[#maskImage] = pDrawProps[#maskImage]
  [1302] getparam 0 ............................. <me>
  [1304] getchainedprop 1250 .................... <me.pBuffer>
  [1307] getprop 1340 ........................... <pCacheImage>
  [1310] getprop 1341 ........................... <pCacheRectA>
  [1313] getlocal 14 ............................ <tRectMod>
  [1315] add .................................... <pCacheRectA + tRectMod>
  [1316] getprop 1342 ........................... <pCacheRectB>
  [1319] getprop 1398 ........................... <pSwimProps>
  [1322] pusharglistnoret 5 ..................... <me.pBuffer, pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pSwimProps>
  [1324] objcall 293 ............................ me.pBuffer.copyPixels(pCacheImage, pCacheRectA + tRectMod, pCacheRectB, pSwimProps)
  [1327] ret
end

on render me
  [  0] getprop 1345 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 122 ............................. <memberExists(pMemString)>
  [  7] jmpifz [113] ............................ if memberExists(pMemString) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getchainedprop 1250 ..................... <me.pBuffer>
  [ 15] getprop 1342 ............................ <pCacheRectB>
  [ 18] getprop 1341 ............................ <pCacheRectA>
  [ 21] getprop 1342 ............................ <pCacheRectB>
  [ 24] getprop 1339 ............................ <pDrawProps>
  [ 27] pusharglistnoret 5 ...................... <me.pBuffer, pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps>
  [ 29] objcall 293 ............................. me.pBuffer.copyPixels(pCacheRectB, pCacheRectA, pCacheRectB, pDrawProps)
  [ 32] getparam 0 .............................. <me>
  [ 34] getobjprop 1233 ......................... <me.pSwim>
  [ 37] jmpifz [113] ............................ if me.pSwim then
  [ 40] getprop 1398 ............................ <pSwimProps>
  [ 43] pushsymb 1156 ........................... <#maskImage>
  [ 46] getprop 1339 ............................ <pDrawProps>
  [ 49] pushsymb 1156 ........................... <#maskImage>
  [ 52] pusharglist 2 ........................... <pDrawProps, #maskImage>
  [ 54] objcall 138 ............................. <pDrawProps[#maskImage]>
  [ 56] pusharglistnoret 3 ...................... <pSwimProps, #maskImage, pDrawProps[#maskImage]>
  [ 58] objcall 136 ............................. pSwimProps[#maskImage] = pDrawProps[#maskImage]
  [ 60] getparam 0 .............................. <me>
  [ 62] getchainedprop 1250 ..................... <me.pBuffer>
  [ 65] getprop 1340 ............................ <pCacheImage>
  [ 68] getprop 1341 ............................ <pCacheRectA>
  [ 71] getprop 1346 ............................ <pXFix>
  [ 74] getprop 1347 ............................ <pYFix>
  [ 77] getprop 1346 ............................ <pXFix>
  [ 80] getprop 1347 ............................ <pYFix>
  [ 83] pusharglist 4 ........................... <[pXFix, pYFix, pXFix, pYFix]>
  [ 85] pushlist ................................ <[pXFix, pYFix, pXFix, pYFix]>
  [ 86] add ..................................... <pCacheRectA + [pXFix, pYFix, pXFix, pYFix]>
  [ 87] getparam 0 .............................. <me>
  [ 89] getobjprop 1210 ......................... <me.pLocFix>
  [ 92] getparam 0 .............................. <me>
  [ 94] getobjprop 1210 ......................... <me.pLocFix>
  [ 97] pusharglist 2 ........................... <me.pLocFix, me.pLocFix>
  [ 99] extcall 221 ............................. <rect(me.pLocFix, me.pLocFix)>
  [101] add ..................................... <pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix)>
  [102] getprop 1342 ............................ <pCacheRectB>
  [105] getprop 1398 ............................ <pSwimProps>
  [108] pusharglistnoret 5 ...................... <me.pBuffer, pCacheImage, pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix), pCacheRectB, pSwimProps>
  [110] objcall 293 ............................. me.pBuffer.copyPixels(pCacheImage, pCacheRectA + [pXFix, pYFix, pXFix, pYFix] + rect(me.pLocFix, me.pLocFix), pCacheRectB, pSwimProps)
  [113] ret
end

on setItemObj me, tmodel
  [  0] getprop 1298 ............................ <pPart>
  [  3] pushcons 25 ............................. <"ri">
  [  5] nteq .................................... <pPart <> "ri">
  [  6] getprop 1298 ............................ <pPart>
  [  9] pushcons 26 ............................. <"li">
  [ 11] nteq .................................... <pPart <> "li">
  [ 12] and ..................................... <(pPart <> "ri") and (pPart <> "li")>
  [ 13] jmpifz [ 20] ............................ if (pPart <> "ri") and (pPart <> "li") then
  [ 16] pusharglistnoret 0 ...................... <>
  [ 18] extcall 116 ............................. return 
  [ 20] getparam 1 .............................. <tmodel>
  [ 22] setprop 1338 ............................ pmodel = tmodel
  [ 25] ret
end

on defineDir me, tdir, tPart
  [  0] getparam 2 .............................. <tPart>
  [  2] pusharglist 1 ........................... <tPart>
  [  4] extcall 253 ............................. <voidp(tPart)>
  [  6] getparam 2 .............................. <tPart>
  [  8] getprop 1298 ............................ <pPart>
  [ 11] eq ...................................... <tPart = pPart>
  [ 12] or ...................................... <voidp(tPart) or (tPart = pPart)>
  [ 13] jmpifz [ 21] ............................ if voidp(tPart) or (tPart = pPart) then
  [ 16] getparam 1 .............................. <tdir>
  [ 18] setprop 376 ............................. pDirection = tdir
  [ 21] ret
end

on defineDirMultiple me, tdir, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1298 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 207 ............................. <tTargetPartList.getPos(pPart)>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <tTargetPartList.getPos(pPart) = 0>
  [ 11] jmpifz [ 18] ............................ if tTargetPartList.getPos(pPart) = 0 then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 116 ............................. return 
  [ 18] getparam 1 .............................. <tdir>
  [ 20] setprop 376 ............................. pDirection = tdir
  [ 23] ret
end

on defineAct me, tAct, tTargetPartList
  [  0] getprop 1343 ............................ <pAction>
  [  3] pushcons 28 ............................. <"std">
  [  5] eq ...................................... <pAction = "std">
  [  6] jmpifz [ 14] ............................ if pAction = "std" then
  [  9] getparam 1 .............................. <tAct>
  [ 11] setprop 1343 ............................ pAction = tAct
  [ 14] ret
end

on defineActMultiple me, tAct, tTargetPartList
  [  0] getparam 2 .............................. <tTargetPartList>
  [  2] getprop 1298 ............................ <pPart>
  [  5] pusharglist 2 ........................... <tTargetPartList, pPart>
  [  7] objcall 207 ............................. <tTargetPartList.getPos(pPart)>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <tTargetPartList.getPos(pPart) = 0>
  [ 11] jmpifz [ 18] ............................ if tTargetPartList.getPos(pPart) = 0 then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 116 ............................. return 
  [ 18] getprop 1343 ............................ <pAction>
  [ 21] pushcons 28 ............................. <"std">
  [ 23] eq ...................................... <pAction = "std">
  [ 24] jmpifz [ 32] ............................ if pAction = "std" then
  [ 27] getparam 1 .............................. <tAct>
  [ 29] setprop 1343 ............................ pAction = tAct
  [ 32] getprop 1298 ............................ <pPart>
  [ 35] pushcons 23 ............................. <"ey">
  [ 37] eq ...................................... <pPart = "ey">
  [ 38] getparam 1 .............................. <tAct>
  [ 40] pushcons 28 ............................. <"std">
  [ 42] eq ...................................... <tAct = "std">
  [ 43] and ..................................... <(pPart = "ey") and (tAct = "std")>
  [ 44] jmpifz [ 52] ............................ if (pPart = "ey") and (tAct = "std") then
  [ 47] pushcons 28 ............................. <"std">
  [ 49] setprop 1343 ............................ pAction = "std"
  [ 52] ret
end

on defineInk me, tInk
  [  0] getparam 1 .............................. <tInk>
  [  2] pusharglist 1 ........................... <tInk>
  [  4] extcall 253 ............................. <voidp(tInk)>
  [  6] jmpifz [ 78] ............................ if voidp(tInk) then
  [  9] getprop 1298 ............................ <pPart>
  [ 12] peek 0 .................................. case pPart of
  [ 14] pushcons 23 ............................. <"ey">
  [ 16] eq
  [ 17] jmpifz [ 27] ............................ (case) "ey":
  [ 20] pushint8 36 ............................. <36>
  [ 22] setparam 1 .............................. tInk = 36
  [ 24] jmp [ 76]
  [ 27] peek 0
  [ 29] pushcons 29 ............................. <"sd">
  [ 31] eq
  [ 32] jmpifz [ 42] ............................ (case) "sd":
  [ 35] pushint8 32 ............................. <32>
  [ 37] setparam 1 .............................. tInk = 32
  [ 39] jmp [ 76]
  [ 42] peek 0
  [ 44] pushcons 25 ............................. <"ri">
  [ 46] eq
  [ 47] jmpifz [ 57] ............................ (case) "ri":
  [ 50] pushint8 8 .............................. <8>
  [ 52] setparam 1 .............................. tInk = 8
  [ 54] jmp [ 76]
  [ 57] peek 0
  [ 59] pushcons 26 ............................. <"li">
  [ 61] eq
  [ 62] jmpifz [ 72] ............................ (case) "li":
  [ 65] pushint8 8 .............................. <8>
  [ 67] setparam 1 .............................. tInk = 8
  [ 69] jmp [ 76] ............................... (case) otherwise:
  [ 72] pushint8 41 ............................. <41>
  [ 74] setparam 1 .............................. tInk = 41
  [ 76] pop 1 ................................... end case
  [ 78] getprop 1339 ............................ <pDrawProps>
  [ 81] pushsymb 393 ............................ <#ink>
  [ 84] getparam 1 .............................. <tInk>
  [ 86] pusharglistnoret 3 ...................... <pDrawProps, #ink, tInk>
  [ 88] objcall 136 ............................. pDrawProps[#ink] = tInk
  [ 90] getprop 1398 ............................ <pSwimProps>
  [ 93] pushsymb 393 ............................ <#ink>
  [ 96] getparam 1 .............................. <tInk>
  [ 98] pusharglistnoret 3 ...................... <pSwimProps, #ink, tInk>
  [100] objcall 136 ............................. pSwimProps[#ink] = tInk
  [102] pushint8 1 .............................. <1>
  [104] pusharglistnoret 1 ...................... <1>
  [106] extcall 116 ............................. return 1
  [108] ret
end

on setModel me, tmodel
  [  0] getparam 1 .............................. <tmodel>
  [  2] setprop 1338 ............................ pmodel = tmodel
  [  5] ret
end

on setColor me, tColor
  [  0] getparam 1 .............................. <tColor>
  [  2] pusharglist 1 ........................... <tColor>
  [  4] extcall 253 ............................. <voidp(tColor)>
  [  6] jmpifz [ 14] ............................ if voidp(tColor) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 116 ............................. return 0
  [ 14] getparam 1 .............................. <tColor>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] eq ...................................... <tColor = EMPTY>
  [ 19] jmpifz [ 27] ............................ if tColor = EMPTY then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 116 ............................. return 0
  [ 27] getparam 1 .............................. <tColor>
  [ 29] getobjprop 215 .......................... <tColor.ilk>
  [ 31] pushsymb 327 ............................ <#color>
  [ 34] eq ...................................... <tColor.ilk = #color>
  [ 35] getprop 1339 ............................ <pDrawProps>
  [ 38] pushsymb 393 ............................ <#ink>
  [ 41] pusharglist 2 ........................... <pDrawProps, #ink>
  [ 43] objcall 138 ............................. <pDrawProps[#ink]>
  [ 45] pushint8 36 ............................. <36>
  [ 47] nteq .................................... <pDrawProps[#ink] <> 36>
  [ 48] and ..................................... <(tColor.ilk = #color) and (pDrawProps[#ink] <> 36)>
  [ 49] jmpifz [ 67] ............................ if (tColor.ilk = #color) and (pDrawProps[#ink] <> 36) then / else
  [ 52] getprop 1339 ............................ <pDrawProps>
  [ 55] pushsymb 282 ............................ <#bgColor>
  [ 58] getparam 1 .............................. <tColor>
  [ 60] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, tColor>
  [ 62] objcall 136 ............................. pDrawProps[#bgColor] = tColor
  [ 64] jmp [ 91]
  [ 67] getprop 1339 ............................ <pDrawProps>
  [ 70] pushsymb 282 ............................ <#bgColor>
  [ 73] pushint16 255 ........................... <255>
  [ 76] pushint16 255 ........................... <255>
  [ 79] pushint16 255 ........................... <255>
  [ 82] pusharglist 3 ........................... <255, 255, 255>
  [ 84] extcall 283 ............................. <rgb(255, 255, 255)>
  [ 87] pusharglistnoret 3 ...................... <pDrawProps, #bgColor, rgb(255, 255, 255)>
  [ 89] objcall 136 ............................. pDrawProps[#bgColor] = rgb(255, 255, 255)
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglistnoret 1 ...................... <1>
  [ 95] extcall 116 ............................. return 1
  [ 97] ret
end

on doHandWork me, tAct
  [  0] pushcons 8 .............................. <"lh">
  [  2] pushcons 9 .............................. <"ls">
  [  4] pushcons 26 ............................. <"li">
  [  6] pushcons 15 ............................. <"rh">
  [  8] pushcons 16 ............................. <"rs">
  [ 10] pushcons 25 ............................. <"ri">
  [ 12] pusharglist 6 ........................... <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 14] pushlist ................................ <["lh", "ls", "li", "rh", "rs", "ri"]>
  [ 15] getprop 1298 ............................ <pPart>
  [ 18] pusharglist 2 ........................... <["lh", "ls", "li", "rh", "rs", "ri"], pPart>
  [ 20] objcall 205 ............................. <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart)>
  [ 22] pushzero ................................ <0>
  [ 23] nteq .................................... <["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0>
  [ 24] jmpifz [ 32] ............................ if ["lh", "ls", "li", "rh", "rs", "ri"].getOne(pPart) <> 0 then
  [ 27] getparam 1 .............................. <tAct>
  [ 29] setprop 1343 ............................ pAction = tAct
  [ 32] ret
end

on doHandWorkLeft me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1344 ............................ pActionLh = tAct
  [  5] ret
end

on doHandWorkRight me, tAct
  [  0] getparam 1 .............................. <tAct>
  [  2] setprop 1301 ............................ pActionRh = tAct
  [  5] ret
end

on layDown me
  [  0] pushcons 20 ............................. <"lay">
  [  2] setprop 1343 ............................ pAction = "lay"
  [  5] ret
end

on getCurrentMember me
  [  0] getprop 1345 ............................ <pMemString>
  [  3] pusharglistnoret 1 ...................... <pMemString>
  [  5] extcall 116 ............................. return pMemString
  [  7] ret
end

on getColor me
  [  0] getprop 1339 ............................ <pDrawProps>
  [  3] pushsymb 282 ............................ <#bgColor>
  [  6] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [  8] objcall 138 ............................. <pDrawProps[#bgColor]>
  [ 10] pusharglistnoret 1 ...................... <pDrawProps[#bgColor]>
  [ 12] extcall 116 ............................. return pDrawProps[#bgColor]
  [ 14] ret
end

on getDirection me
  [  0] getprop 376 ............................. <pDirection>
  [  3] pusharglistnoret 1 ...................... <pDirection>
  [  5] extcall 116 ............................. return pDirection
  [  7] ret
end

on getLocation me
  [  0] getprop 1345 ............................ <pMemString>
  [  3] pusharglist 1 ........................... <pMemString>
  [  5] extcall 253 ............................. <voidp(pMemString)>
  [  7] jmpifz [ 15] ............................ if voidp(pMemString) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 116 ............................. return 0
  [ 15] getprop 1345 ............................ <pMemString>
  [ 18] pusharglist 1 ........................... <pMemString>
  [ 20] extcall 330 ............................. <getmemnum(pMemString)>
  [ 23] setlocal 0 .............................. tMemNum = getmemnum(pMemString)
  [ 25] getlocal 0 .............................. <tMemNum>
  [ 27] pushzero ................................ <0>
  [ 28] eq ...................................... <tMemNum = 0>
  [ 29] jmpifz [ 37] ............................ if tMemNum = 0 then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 116 ............................. return 0
  [ 37] getlocal 0 .............................. <tMemNum>
  [ 39] pusharglist 1 ........................... <tMemNum>
  [ 41] extcall 263 ............................. <member(tMemNum)>
  [ 44] getobjprop 221 .......................... <member(tMemNum).rect>
  [ 46] setlocal 1 .............................. tImgRect = member(tMemNum).rect
  [ 48] getlocal 1 .............................. <tImgRect>
  [ 50] getobjprop 219 .......................... <tImgRect.width>
  [ 52] pushint8 2 .............................. <2>
  [ 54] div ..................................... <tImgRect.width / 2>
  [ 55] getlocal 1 .............................. <tImgRect>
  [ 57] getobjprop 261 .......................... <tImgRect.height>
  [ 60] pushint8 2 .............................. <2>
  [ 62] div ..................................... <tImgRect.height / 2>
  [ 63] pusharglist 2 ........................... <tImgRect.width / 2, tImgRect.height / 2>
  [ 65] extcall 264 ............................. <point(tImgRect.width / 2, tImgRect.height / 2)>
  [ 68] setlocal 2 .............................. tCenterPoint = point(tImgRect.width / 2, tImgRect.height / 2)
  [ 70] getlocal 0 .............................. <tMemNum>
  [ 72] pusharglist 1 ........................... <tMemNum>
  [ 74] extcall 263 ............................. <member(tMemNum)>
  [ 77] getobjprop 265 .......................... <member(tMemNum).regPoint>
  [ 80] setlocal 3 .............................. tRegPoint = member(tMemNum).regPoint
  [ 82] getlocal 3 .............................. <tRegPoint>
  [ 84] pushint8 1 .............................. <1>
  [ 86] inv ..................................... <-1>
  [ 87] mul ..................................... <tRegPoint * -1>
  [ 88] getlocal 2 .............................. <tCenterPoint>
  [ 90] add ..................................... <(tRegPoint * -1) + tCenterPoint>
  [ 91] pusharglistnoret 1 ...................... <(tRegPoint * -1) + tCenterPoint>
  [ 93] extcall 116 ............................. return (tRegPoint * -1) + tCenterPoint
  [ 95] ret
end

on copyPicture me, tImg, tdir, tHumanSize, tAction, tAnimFrame
  [  0] getparam 2 .............................. <tdir>
  [  2] pusharglist 1 ........................... <tdir>
  [  4] extcall 253 ............................. <voidp(tdir)>
  [  6] jmpifz [ 13] ............................ if voidp(tdir) then
  [  9] pushcons 30 ............................. <"2">
  [ 11] setparam 2 .............................. tdir = "2"
  [ 13] getparam 3 .............................. <tHumanSize>
  [ 15] pusharglist 1 ........................... <tHumanSize>
  [ 17] extcall 253 ............................. <voidp(tHumanSize)>
  [ 19] jmpifz [ 26] ............................ if voidp(tHumanSize) then
  [ 22] pushcons 31 ............................. <"h">
  [ 24] setparam 3 .............................. tHumanSize = "h"
  [ 26] getparam 4 .............................. <tAction>
  [ 28] pusharglist 1 ........................... <tAction>
  [ 30] extcall 253 ............................. <voidp(tAction)>
  [ 32] jmpifz [ 39] ............................ if voidp(tAction) then
  [ 35] pushcons 28 ............................. <"std">
  [ 37] setparam 4 .............................. tAction = "std"
  [ 39] getparam 5 .............................. <tAnimFrame>
  [ 41] pusharglist 1 ........................... <tAnimFrame>
  [ 43] extcall 253 ............................. <voidp(tAnimFrame)>
  [ 45] jmpifz [ 52] ............................ if voidp(tAnimFrame) then
  [ 48] pushcons 32 ............................. <"0">
  [ 50] setparam 5 .............................. tAnimFrame = "0"
  [ 52] getparam 3 .............................. <tHumanSize>
  [ 54] pushcons 27 ............................. <"_">
  [ 56] joinstr ................................. <tHumanSize & "_">
  [ 57] getparam 4 .............................. <tAction>
  [ 59] joinstr ................................. <tHumanSize & "_" & tAction>
  [ 60] pushcons 27 ............................. <"_">
  [ 62] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [ 63] getprop 1298 ............................ <pPart>
  [ 66] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [ 67] pushcons 27 ............................. <"_">
  [ 69] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [ 70] getprop 1338 ............................ <pmodel>
  [ 73] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel>
  [ 74] pushcons 27 ............................. <"_">
  [ 76] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_">
  [ 77] getparam 2 .............................. <tdir>
  [ 79] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir>
  [ 80] pushcons 27 ............................. <"_">
  [ 82] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [ 83] getparam 5 .............................. <tAnimFrame>
  [ 85] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame>
  [ 86] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & tAnimFrame
  [ 88] getlocal 0 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 330 ............................. <getmemnum(tMemName)>
  [ 95] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [ 97] getlocal 1 .............................. <tMemNum>
  [ 99] pushzero ................................ <0>
  [100] eq ...................................... <tMemNum = 0>
  [101] jmpifz [179] ............................ if tMemNum = 0 then
  [104] pushcons 32 ............................. <"0">
  [106] getprop 1338 ............................ <pmodel>
  [109] pushsymb 425 ............................ <#char>
  [112] pushint8 2 .............................. <2>
  [114] pushint8 3 .............................. <3>
  [116] pusharglist 4 ........................... <pmodel, #char, 2, 3>
  [118] objcall 134 ............................. <pmodel.char[2..3]>
  [120] joinstr ................................. <"0" & pmodel.char[2..3]>
  [121] setlocal 2 .............................. tmodel = "0" & pmodel.char[2..3]
  [123] getparam 3 .............................. <tHumanSize>
  [125] pushcons 27 ............................. <"_">
  [127] joinstr ................................. <tHumanSize & "_">
  [128] getparam 4 .............................. <tAction>
  [130] joinstr ................................. <tHumanSize & "_" & tAction>
  [131] pushcons 27 ............................. <"_">
  [133] joinstr ................................. <tHumanSize & "_" & tAction & "_">
  [134] getprop 1298 ............................ <pPart>
  [137] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart>
  [138] pushcons 27 ............................. <"_">
  [140] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_">
  [141] getlocal 2 .............................. <tmodel>
  [143] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel>
  [144] pushcons 27 ............................. <"_">
  [146] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_">
  [147] getparam 2 .............................. <tdir>
  [149] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir>
  [150] pushcons 27 ............................. <"_">
  [152] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_">
  [153] getparam 5 .............................. <tAnimFrame>
  [155] joinstr ................................. <tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_" & tAnimFrame>
  [156] setlocal 0 .............................. tMemName = tHumanSize & "_" & tAction & "_" & pPart & "_" & tmodel & "_" & tdir & "_" & tAnimFrame
  [158] getlocal 0 .............................. <tMemName>
  [160] pusharglist 1 ........................... <tMemName>
  [162] extcall 330 ............................. <getmemnum(tMemName)>
  [165] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [167] getlocal 1 .............................. <tMemNum>
  [169] pushzero ................................ <0>
  [170] eq ...................................... <tMemNum = 0>
  [171] jmpifz [179] ............................ if tMemNum = 0 then
  [174] pushzero ................................ <0>
  [175] pusharglistnoret 1 ...................... <0>
  [177] extcall 116 ............................. return 0
  [179] getlocal 1 .............................. <tMemNum>
  [181] pusharglist 1 ........................... <tMemNum>
  [183] extcall 263 ............................. <member(tMemNum)>
  [186] setlocal 3 .............................. tmember = member(tMemNum)
  [188] getlocal 3 .............................. <tmember>
  [190] getobjprop 260 .......................... <tmember.image>
  [193] setlocal 4 .............................. tImage = tmember.image
  [195] getlocal 3 .............................. <tmember>
  [197] getobjprop 265 .......................... <tmember.regPoint>
  [200] setlocal 5 .............................. tRegPnt = tmember.regPoint
  [202] getlocal 5 .............................. <tRegPnt>
  [204] pushint8 1 .............................. <1>
  [206] pusharglist 2 ........................... <tRegPnt, 1>
  [208] objcall 138 ............................. <tRegPnt[1]>
  [210] inv ..................................... <-tRegPnt[1]>
  [211] setlocal 6 .............................. tX = -tRegPnt[1]
  [213] getparam 1 .............................. <tImg>
  [215] getchainedprop 221 ...................... <tImg.rect>
  [217] getobjprop 261 .......................... <tImg.rect.height>
  [220] getlocal 5 .............................. <tRegPnt>
  [222] pushint8 2 .............................. <2>
  [224] pusharglist 2 ........................... <tRegPnt, 2>
  [226] objcall 138 ............................. <tRegPnt[2]>
  [228] sub ..................................... <tImg.rect.height - tRegPnt[2]>
  [229] pushint8 10 ............................. <10>
  [231] sub ..................................... <tImg.rect.height - tRegPnt[2] - 10>
  [232] setlocal 7 .............................. tY = tImg.rect.height - tRegPnt[2] - 10
  [234] getlocal 6 .............................. <tX>
  [236] getlocal 7 .............................. <tY>
  [238] getlocal 6 .............................. <tX>
  [240] getlocal 4 .............................. <tImage>
  [242] getobjprop 219 .......................... <tImage.width>
  [244] add ..................................... <tX + tImage.width>
  [245] getlocal 7 .............................. <tY>
  [247] getlocal 4 .............................. <tImage>
  [249] getobjprop 261 .......................... <tImage.height>
  [252] add ..................................... <tY + tImage.height>
  [253] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [255] extcall 221 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [257] setlocal 8 .............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [259] getlocal 4 .............................. <tImage>
  [261] pusharglist 1 ........................... <tImage>
  [263] objcall 1157 ............................ <tImage.createMatte()>
  [266] setlocal 9 .............................. tMatte = tImage.createMatte()
  [268] getparam 1 .............................. <tImg>
  [270] getlocal 4 .............................. <tImage>
  [272] getlocal 8 .............................. <tRect>
  [274] getlocal 4 .............................. <tImage>
  [276] getobjprop 221 .......................... <tImage.rect>
  [278] pushsymb 1156 ........................... <#maskImage>
  [281] getlocal 9 .............................. <tMatte>
  [283] pushsymb 393 ............................ <#ink>
  [286] getprop 1339 ............................ <pDrawProps>
  [289] pushsymb 393 ............................ <#ink>
  [292] pusharglist 2 ........................... <pDrawProps, #ink>
  [294] objcall 138 ............................. <pDrawProps[#ink]>
  [296] pushsymb 282 ............................ <#bgColor>
  [299] getprop 1339 ............................ <pDrawProps>
  [302] pushsymb 282 ............................ <#bgColor>
  [305] pusharglist 2 ........................... <pDrawProps, #bgColor>
  [307] objcall 138 ............................. <pDrawProps[#bgColor]>
  [309] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [311] pushproplist ............................ <[#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [312] pusharglistnoret 5 ...................... <tImg, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]]>
  [314] objcall 293 ............................. tImg.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: pDrawProps[#ink], #bgColor: pDrawProps[#bgColor]])
  [317] pushint8 1 .............................. <1>
  [319] pusharglistnoret 1 ...................... <1>
  [321] extcall 116 ............................. return 1
  [323] ret
end

on reset me, tSwimFlag
  [  0] pushcons 28 ............................. <"std">
  [  2] setprop 1343 ............................ pAction = "std"
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 120 ............................. <VOID>
  [  9] setprop 1344 ............................ pActionLh = VOID
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 120 ............................. <VOID>
  [ 16] setprop 1301 ............................ pActionRh = VOID
  [ 19] ret
end

on setAnimation me, tPart, tAnim
  [  0] getparam 1 .............................. <tPart>
  [  2] getprop 1298 ............................ <pPart>
  [  5] nteq .................................... <tPart <> pPart>
  [  6] jmpifz [ 13] ............................ if tPart <> pPart then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 116 ............................. return 
  [ 13] getparam 2 .............................. <tAnim>
  [ 15] pusharglist 1 ........................... <tAnim>
  [ 17] extcall 385 ............................. <value(tAnim)>
  [ 20] setprop 1350 ............................ pAnimation = value(tAnim)
  [ 23] getprop 1350 ............................ <pAnimation>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <pAnimation, 1>
  [ 30] objcall 138 ............................. <pAnimation[1]>
  [ 32] getobjprop 149 .......................... <pAnimation[1].count>
  [ 34] setprop 1352 ............................ pTotalFrame = pAnimation[1].count
  [ 37] pushint8 1 .............................. <1>
  [ 39] setprop 1351 ............................ pAnimFrame = 1
  [ 42] ret
end

on remAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 1350 ............................ pAnimation = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 1351 ............................ pAnimFrame = 1
  [  9] pushint8 1 .............................. <1>
  [ 11] setprop 1352 ............................ pTotalFrame = 1
  [ 14] ret
end

on animate me
  [  0] getprop 1350 ............................ <pAnimation>
  [  3] not ..................................... <not pAnimation>
  [  4] jmpifz [ 13] ............................ if not pAnimation then
  [  7] pushcons 0 .............................. <EMPTY>
  [  9] pusharglistnoret 1 ...................... <EMPTY>
  [ 11] extcall 116 ............................. return EMPTY
  [ 13] getprop 376 ............................. <pDirection>
  [ 16] getprop 1350 ............................ <pAnimation>
  [ 19] pushsymb 1371 ........................... <#OffD>
  [ 22] pusharglist 2 ........................... <pAnimation, #OffD>
  [ 24] objcall 138 ............................. <pAnimation[#OffD]>
  [ 26] getprop 1351 ............................ <pAnimFrame>
  [ 29] pusharglist 2 ........................... <pAnimation[#OffD], pAnimFrame>
  [ 31] objcall 138 ............................. <pAnimation[#OffD][pAnimFrame]>
  [ 33] add ..................................... <pDirection + pAnimation[#OffD][pAnimFrame]>
  [ 34] setlocal 0 .............................. tdir = pDirection + pAnimation[#OffD][pAnimFrame]
  [ 36] getlocal 0 .............................. <tdir>
  [ 38] pushint8 7 .............................. <7>
  [ 40] gt ...................................... <tdir > 7>
  [ 41] jmpifz [ 57] ............................ if tdir > 7 then / else
  [ 44] getlocal 0 .............................. <tdir>
  [ 46] getlocal 0 .............................. <tdir>
  [ 48] pushint8 7 .............................. <7>
  [ 50] mod ..................................... <tdir mod 7>
  [ 51] sub ..................................... <tdir - (tdir mod 7)>
  [ 52] setlocal 0 .............................. tdir = tdir - (tdir mod 7)
  [ 54] jmp [ 74]
  [ 57] getlocal 0 .............................. <tdir>
  [ 59] pushzero ................................ <0>
  [ 60] lt ...................................... <tdir < 0>
  [ 61] jmpifz [ 74] ............................ if tdir < 0 then
  [ 64] pushint8 7 .............................. <7>
  [ 66] getlocal 0 .............................. <tdir>
  [ 68] add ..................................... <7 + tdir>
  [ 69] pushint8 1 .............................. <1>
  [ 71] add ..................................... <7 + tdir + 1>
  [ 72] setlocal 0 .............................. tdir = 7 + tdir + 1
  [ 74] getparam 0 .............................. <me>
  [ 76] pushsymb 1209 ........................... <#pFlipList>
  [ 79] getlocal 0 .............................. <tdir>
  [ 81] pushint8 1 .............................. <1>
  [ 83] add ..................................... <tdir + 1>
  [ 84] pusharglist 3 ........................... <me, #pFlipList, tdir + 1>
  [ 86] objcall 134 ............................. <me.pFlipList[tdir + 1]>
  [ 88] setlocal 0 .............................. tdir = me.pFlipList[tdir + 1]
  [ 90] getprop 1350 ............................ <pAnimation>
  [ 93] pushsymb 1374 ........................... <#OffX>
  [ 96] pusharglist 2 ........................... <pAnimation, #OffX>
  [ 98] objcall 138 ............................. <pAnimation[#OffX]>
  [100] getprop 1351 ............................ <pAnimFrame>
  [103] pusharglist 2 ........................... <pAnimation[#OffX], pAnimFrame>
  [105] objcall 138 ............................. <pAnimation[#OffX][pAnimFrame]>
  [107] setprop 1346 ............................ pXFix = pAnimation[#OffX][pAnimFrame]
  [110] getprop 1350 ............................ <pAnimation>
  [113] pushsymb 1375 ........................... <#OffY>
  [116] pusharglist 2 ........................... <pAnimation, #OffY>
  [118] objcall 138 ............................. <pAnimation[#OffY]>
  [120] getprop 1351 ............................ <pAnimFrame>
  [123] pusharglist 2 ........................... <pAnimation[#OffY], pAnimFrame>
  [125] objcall 138 ............................. <pAnimation[#OffY][pAnimFrame]>
  [127] setprop 1347 ............................ pYFix = pAnimation[#OffY][pAnimFrame]
  [130] getparam 0 .............................. <me>
  [132] getobjprop 1253 ......................... <me.pPeopleSize>
  [135] pushcons 27 ............................. <"_">
  [137] joinstr ................................. <me.pPeopleSize & "_">
  [138] getprop 1350 ............................ <pAnimation>
  [141] pushsymb 1376 ........................... <#act>
  [144] pusharglist 2 ........................... <pAnimation, #act>
  [146] objcall 138 ............................. <pAnimation[#act]>
  [148] getprop 1351 ............................ <pAnimFrame>
  [151] pusharglist 2 ........................... <pAnimation[#act], pAnimFrame>
  [153] objcall 138 ............................. <pAnimation[#act][pAnimFrame]>
  [155] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame]>
  [156] pushcons 27 ............................. <"_">
  [158] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_">
  [159] getprop 1298 ............................ <pPart>
  [162] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart>
  [163] pushcons 27 ............................. <"_">
  [165] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_">
  [166] getprop 1338 ............................ <pmodel>
  [169] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel>
  [170] pushcons 27 ............................. <"_">
  [172] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_">
  [173] getlocal 0 .............................. <tdir>
  [175] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir>
  [176] pushcons 27 ............................. <"_">
  [178] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_">
  [179] getprop 1350 ............................ <pAnimation>
  [182] pushsymb 1377 ........................... <#frm>
  [185] pusharglist 2 ........................... <pAnimation, #frm>
  [187] objcall 138 ............................. <pAnimation[#frm]>
  [189] getprop 1351 ............................ <pAnimFrame>
  [192] pusharglist 2 ........................... <pAnimation[#frm], pAnimFrame>
  [194] objcall 138 ............................. <pAnimation[#frm][pAnimFrame]>
  [196] joinstr ................................. <me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]>
  [197] setlocal 1 .............................. tMemName = me.pPeopleSize & "_" & pAnimation[#act][pAnimFrame] & "_" & pPart & "_" & pmodel & "_" & tdir & "_" & pAnimation[#frm][pAnimFrame]
  [199] getprop 1351 ............................ <pAnimFrame>
  [202] pushint8 1 .............................. <1>
  [204] add ..................................... <pAnimFrame + 1>
  [205] setprop 1351 ............................ pAnimFrame = pAnimFrame + 1
  [208] getprop 1351 ............................ <pAnimFrame>
  [211] getprop 1352 ............................ <pTotalFrame>
  [214] gt ...................................... <pAnimFrame > pTotalFrame>
  [215] jmpifz [223] ............................ if pAnimFrame > pTotalFrame then
  [218] pushint8 1 .............................. <1>
  [220] setprop 1351 ............................ pAnimFrame = 1
  [223] getlocal 1 .............................. <tMemName>
  [225] pusharglistnoret 1 ...................... <tMemName>
  [227] extcall 116 ............................. return tMemName
  [229] ret
end
