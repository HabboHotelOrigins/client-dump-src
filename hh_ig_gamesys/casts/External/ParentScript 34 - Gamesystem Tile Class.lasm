property pLocX, pLocY, x, y, z, pTileWidth, pType, pContent, pGameSystem

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 616 ............................. pContent = [:]
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 53 .............................. return 1
  [ 12] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 61 .............................. <VOID>
  [  4] setprop 616 ............................. pContent = VOID
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 53 .............................. return 1
  [ 13] ret
end

on define me, tLocX, tLocY, tWorldX, tWorldY, tWidth, ttype, tFramework
  [  0] getparam 1 .............................. <tLocX>
  [  2] setprop 617 ............................. pLocX = tLocX
  [  5] getparam 2 .............................. <tLocY>
  [  7] setprop 618 ............................. pLocY = tLocY
  [ 10] getparam 3 .............................. <tWorldX>
  [ 12] setprop 395 ............................. x = tWorldX
  [ 15] getparam 4 .............................. <tWorldY>
  [ 17] setprop 396 ............................. y = tWorldY
  [ 20] pushzero ................................ <0>
  [ 21] setprop 476 ............................. z = 0
  [ 24] getparam 5 .............................. <tWidth>
  [ 26] setprop 422 ............................. pTileWidth = tWidth
  [ 29] getparam 6 .............................. <ttype>
  [ 31] setprop 619 ............................. pType = ttype
  [ 34] pusharglist 0 ........................... <[:]>
  [ 36] pushproplist ............................ <[:]>
  [ 37] setprop 616 ............................. pContent = [:]
  [ 40] getparam 7 .............................. <tFramework>
  [ 42] setprop 525 ............................. pGameSystem = tFramework
  [ 45] pushint8 1 .............................. <1>
  [ 47] pusharglistnoret 1 ...................... <1>
  [ 49] extcall 53 .............................. return 1
  [ 51] ret
end

on addContent me, tItemID, tItemProps
  [  0] getprop 616 ............................. <pContent>
  [  3] getparam 1 .............................. <tItemID>
  [  5] getparam 2 .............................. <tItemProps>
  [  7] pusharglistnoret 3 ...................... <pContent, tItemID, tItemProps>
  [  9] objcall 240 ............................. pContent.addProp(tItemID, tItemProps)
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 53 .............................. return 1
  [ 17] ret
end

on removeContent me, tItemID
  [  0] getprop 616 ............................. <pContent>
  [  3] getparam 1 .............................. <tItemID>
  [  5] pusharglistnoret 2 ...................... <pContent, tItemID>
  [  7] objcall 237 ............................. pContent.deleteProp(tItemID)
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 53 .............................. return 1
  [ 15] ret
end

on getTileNeighborInDirection me, tdir
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 372 ............................. <me.getGameSystem()>
  [  7] setlocal 0 .............................. tGameSystem = me.getGameSystem()
  [  9] getlocal 0 .............................. <tGameSystem>
  [ 11] pushzero ................................ <0>
  [ 12] eq ...................................... <tGameSystem = 0>
  [ 13] jmpifz [ 21] ............................ if tGameSystem = 0 then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 53 .............................. return 0
  [ 21] getparam 1 .............................. <tdir>
  [ 23] peek 0 .................................. case tdir of
  [ 25] pushzero ................................ <0>
  [ 26] eq
  [ 27] jmpifz [ 55] ............................ (case) 0:
  [ 30] pop 1
  [ 32] getlocal 0 .............................. <tGameSystem>
  [ 34] getprop 617 ............................. <pLocX>
  [ 37] getprop 618 ............................. <pLocY>
  [ 40] pushint8 1 .............................. <1>
  [ 42] sub ..................................... <pLocY - 1>
  [ 43] pusharglist 3 ........................... <tGameSystem, pLocX, pLocY - 1>
  [ 45] objcall 412 ............................. <tGameSystem.getTile(pLocX, pLocY - 1)>
  [ 48] pusharglistnoret 1 ...................... <tGameSystem.getTile(pLocX, pLocY - 1)>
  [ 50] extcall 53 .............................. return tGameSystem.getTile(pLocX, pLocY - 1)
  [ 52] jmp [318]
  [ 55] peek 0
  [ 57] pushint8 1 .............................. <1>
  [ 59] eq
  [ 60] jmpifz [ 91] ............................ (case) 1:
  [ 63] pop 1
  [ 65] getlocal 0 .............................. <tGameSystem>
  [ 67] getprop 617 ............................. <pLocX>
  [ 70] pushint8 1 .............................. <1>
  [ 72] add ..................................... <pLocX + 1>
  [ 73] getprop 618 ............................. <pLocY>
  [ 76] pushint8 1 .............................. <1>
  [ 78] sub ..................................... <pLocY - 1>
  [ 79] pusharglist 3 ........................... <tGameSystem, pLocX + 1, pLocY - 1>
  [ 81] objcall 412 ............................. <tGameSystem.getTile(pLocX + 1, pLocY - 1)>
  [ 84] pusharglistnoret 1 ...................... <tGameSystem.getTile(pLocX + 1, pLocY - 1)>
  [ 86] extcall 53 .............................. return tGameSystem.getTile(pLocX + 1, pLocY - 1)
  [ 88] jmp [318]
  [ 91] peek 0
  [ 93] pushint8 2 .............................. <2>
  [ 95] eq
  [ 96] jmpifz [124] ............................ (case) 2:
  [ 99] pop 1
  [101] getlocal 0 .............................. <tGameSystem>
  [103] getprop 617 ............................. <pLocX>
  [106] pushint8 1 .............................. <1>
  [108] add ..................................... <pLocX + 1>
  [109] getprop 618 ............................. <pLocY>
  [112] pusharglist 3 ........................... <tGameSystem, pLocX + 1, pLocY>
  [114] objcall 412 ............................. <tGameSystem.getTile(pLocX + 1, pLocY)>
  [117] pusharglistnoret 1 ...................... <tGameSystem.getTile(pLocX + 1, pLocY)>
  [119] extcall 53 .............................. return tGameSystem.getTile(pLocX + 1, pLocY)
  [121] jmp [318]
  [124] peek 0
  [126] pushint8 3 .............................. <3>
  [128] eq
  [129] jmpifz [160] ............................ (case) 3:
  [132] pop 1
  [134] getlocal 0 .............................. <tGameSystem>
  [136] getprop 617 ............................. <pLocX>
  [139] pushint8 1 .............................. <1>
  [141] add ..................................... <pLocX + 1>
  [142] getprop 618 ............................. <pLocY>
  [145] pushint8 1 .............................. <1>
  [147] add ..................................... <pLocY + 1>
  [148] pusharglist 3 ........................... <tGameSystem, pLocX + 1, pLocY + 1>
  [150] objcall 412 ............................. <tGameSystem.getTile(pLocX + 1, pLocY + 1)>
  [153] pusharglistnoret 1 ...................... <tGameSystem.getTile(pLocX + 1, pLocY + 1)>
  [155] extcall 53 .............................. return tGameSystem.getTile(pLocX + 1, pLocY + 1)
  [157] jmp [318]
  [160] peek 0
  [162] pushint8 4 .............................. <4>
  [164] eq
  [165] jmpifz [193] ............................ (case) 4:
  [168] pop 1
  [170] getlocal 0 .............................. <tGameSystem>
  [172] getprop 617 ............................. <pLocX>
  [175] getprop 618 ............................. <pLocY>
  [178] pushint8 1 .............................. <1>
  [180] add ..................................... <pLocY + 1>
  [181] pusharglist 3 ........................... <tGameSystem, pLocX, pLocY + 1>
  [183] objcall 412 ............................. <tGameSystem.getTile(pLocX, pLocY + 1)>
  [186] pusharglistnoret 1 ...................... <tGameSystem.getTile(pLocX, pLocY + 1)>
  [188] extcall 53 .............................. return tGameSystem.getTile(pLocX, pLocY + 1)
  [190] jmp [318]
  [193] peek 0
  [195] pushint8 5 .............................. <5>
  [197] eq
  [198] jmpifz [229] ............................ (case) 5:
  [201] pop 1
  [203] getlocal 0 .............................. <tGameSystem>
  [205] getprop 617 ............................. <pLocX>
  [208] pushint8 1 .............................. <1>
  [210] sub ..................................... <pLocX - 1>
  [211] getprop 618 ............................. <pLocY>
  [214] pushint8 1 .............................. <1>
  [216] add ..................................... <pLocY + 1>
  [217] pusharglist 3 ........................... <tGameSystem, pLocX - 1, pLocY + 1>
  [219] objcall 412 ............................. <tGameSystem.getTile(pLocX - 1, pLocY + 1)>
  [222] pusharglistnoret 1 ...................... <tGameSystem.getTile(pLocX - 1, pLocY + 1)>
  [224] extcall 53 .............................. return tGameSystem.getTile(pLocX - 1, pLocY + 1)
  [226] jmp [318]
  [229] peek 0
  [231] pushint8 6 .............................. <6>
  [233] eq
  [234] jmpifz [262] ............................ (case) 6:
  [237] pop 1
  [239] getlocal 0 .............................. <tGameSystem>
  [241] getprop 617 ............................. <pLocX>
  [244] pushint8 1 .............................. <1>
  [246] sub ..................................... <pLocX - 1>
  [247] getprop 618 ............................. <pLocY>
  [250] pusharglist 3 ........................... <tGameSystem, pLocX - 1, pLocY>
  [252] objcall 412 ............................. <tGameSystem.getTile(pLocX - 1, pLocY)>
  [255] pusharglistnoret 1 ...................... <tGameSystem.getTile(pLocX - 1, pLocY)>
  [257] extcall 53 .............................. return tGameSystem.getTile(pLocX - 1, pLocY)
  [259] jmp [318]
  [262] peek 0
  [264] pushint8 7 .............................. <7>
  [266] eq
  [267] jmpifz [298] ............................ (case) 7:
  [270] pop 1
  [272] getlocal 0 .............................. <tGameSystem>
  [274] getprop 617 ............................. <pLocX>
  [277] pushint8 1 .............................. <1>
  [279] sub ..................................... <pLocX - 1>
  [280] getprop 618 ............................. <pLocY>
  [283] pushint8 1 .............................. <1>
  [285] sub ..................................... <pLocY - 1>
  [286] pusharglist 3 ........................... <tGameSystem, pLocX - 1, pLocY - 1>
  [288] objcall 412 ............................. <tGameSystem.getTile(pLocX - 1, pLocY - 1)>
  [291] pusharglistnoret 1 ...................... <tGameSystem.getTile(pLocX - 1, pLocY - 1)>
  [293] extcall 53 .............................. return tGameSystem.getTile(pLocX - 1, pLocY - 1)
  [295] jmp [318] ............................... (case) otherwise:
  [298] pop 1
  [300] getparam 0 .............................. <me>
  [302] pushcons 0 .............................. <"Invalid direction for tile:">
  [304] getparam 1 .............................. <tdir>
  [306] joinpadstr .............................. <"Invalid direction for tile:" && tdir>
  [307] pushsymb 413 ............................ <#getTileNeighborInDirection>
  [310] pusharglist 3 ........................... <me, "Invalid direction for tile:" && tdir, #getTileNeighborInDirection>
  [312] extcall 62 .............................. <error(me, "Invalid direction for tile:" && tdir, #getTileNeighborInDirection)>
  [314] pusharglistnoret 1 ...................... <error(me, "Invalid direction for tile:" && tdir, #getTileNeighborInDirection)>
  [316] extcall 53 .............................. return error(me, "Invalid direction for tile:" && tdir, #getTileNeighborInDirection)
  [318] pop 1 ................................... end case
  [320] ret
end

on getX me
  [  0] getprop 617 ............................. <pLocX>
  [  3] pusharglistnoret 1 ...................... <pLocX>
  [  5] extcall 53 .............................. return pLocX
  [  7] ret
end

on getY me
  [  0] getprop 618 ............................. <pLocY>
  [  3] pusharglistnoret 1 ...................... <pLocY>
  [  5] extcall 53 .............................. return pLocY
  [  7] ret
end

on getType me
  [  0] getprop 619 ............................. <pType>
  [  3] pusharglistnoret 1 ...................... <pType>
  [  5] extcall 53 .............................. return pType
  [  7] ret
end

on getWorldX me
  [  0] getprop 395 ............................. <x>
  [  3] pusharglistnoret 1 ...................... <x>
  [  5] extcall 53 .............................. return x
  [  7] ret
end

on getWorldY me
  [  0] getprop 396 ............................. <y>
  [  3] pusharglistnoret 1 ...................... <y>
  [  5] extcall 53 .............................. return y
  [  7] ret
end

on getWorldZ me
  [  0] getprop 476 ............................. <z>
  [  3] pusharglistnoret 1 ...................... <z>
  [  5] extcall 53 .............................. return z
  [  7] ret
end

on getWorldCoordinate me
  [  0] pushsymb 395 ............................ <#x>
  [  3] getprop 395 ............................. <x>
  [  6] pushsymb 396 ............................ <#y>
  [  9] getprop 396 ............................. <y>
  [ 12] pushsymb 476 ............................ <#z>
  [ 15] getprop 476 ............................. <z>
  [ 18] pusharglist 6 ........................... <[#x: x, #y: y, #z: z]>
  [ 20] pushproplist ............................ <[#x: x, #y: y, #z: z]>
  [ 21] pusharglistnoret 1 ...................... <[#x: x, #y: y, #z: z]>
  [ 23] extcall 53 .............................. return [#x: x, #y: y, #z: z]
  [ 25] ret
end

on getLocation me
  [  0] pushsymb 395 ............................ <#x>
  [  3] getprop 617 ............................. <pLocX>
  [  6] pushsymb 396 ............................ <#y>
  [  9] getprop 618 ............................. <pLocY>
  [ 12] pusharglist 4 ........................... <[#x: pLocX, #y: pLocY]>
  [ 14] pushproplist ............................ <[#x: pLocX, #y: pLocY]>
  [ 15] pusharglistnoret 1 ...................... <[#x: pLocX, #y: pLocY]>
  [ 17] extcall 53 .............................. return [#x: pLocX, #y: pLocY]
  [ 19] ret
end

on getDiameter me
  [  0] getprop 422 ............................. <pTileWidth>
  [  3] pushint8 100 ............................ <100>
  [  5] mul ..................................... <pTileWidth * 100>
  [  6] pusharglistnoret 1 ...................... <pTileWidth * 100>
  [  8] extcall 53 .............................. return pTileWidth * 100
  [ 10] ret
end

on locationIsInTileRange me, tLocX, tLocY
  [  0] getprop 617 ............................. <pLocX>
  [  3] getparam 1 .............................. <tLocX>
  [  5] sub ..................................... <pLocX - tLocX>
  [  6] pusharglist 1 ........................... <pLocX - tLocX>
  [  8] extcall 268 ............................. <abs(pLocX - tLocX)>
  [ 11] pushint8 1 .............................. <1>
  [ 13] lteq .................................... <abs(pLocX - tLocX) <= 1>
  [ 14] getprop 618 ............................. <pLocY>
  [ 17] getparam 2 .............................. <tLocY>
  [ 19] sub ..................................... <pLocY - tLocY>
  [ 20] pusharglist 1 ........................... <pLocY - tLocY>
  [ 22] extcall 268 ............................. <abs(pLocY - tLocY)>
  [ 25] pushint8 1 .............................. <1>
  [ 27] lteq .................................... <abs(pLocY - tLocY) <= 1>
  [ 28] and ..................................... <(abs(pLocX - tLocX) <= 1) and (abs(pLocY - tLocY) <= 1)>
  [ 29] pusharglistnoret 1 ...................... <(abs(pLocX - tLocX) <= 1) and (abs(pLocY - tLocY) <= 1)>
  [ 31] extcall 53 .............................. return (abs(pLocX - tLocX) <= 1) and (abs(pLocY - tLocY) <= 1)
  [ 33] ret
end

on worldLocationIsInTileRange me, tLocX, tLocY
  [  0] getprop 395 ............................. <x>
  [  3] getparam 1 .............................. <tLocX>
  [  5] sub ..................................... <x - tLocX>
  [  6] pusharglist 1 ........................... <x - tLocX>
  [  8] extcall 268 ............................. <abs(x - tLocX)>
  [ 11] getprop 422 ............................. <pTileWidth>
  [ 14] pushint8 100 ............................ <100>
  [ 16] mul ..................................... <pTileWidth * 100>
  [ 17] lt ...................................... <abs(x - tLocX) < (pTileWidth * 100)>
  [ 18] getprop 396 ............................. <y>
  [ 21] getparam 2 .............................. <tLocY>
  [ 23] sub ..................................... <y - tLocY>
  [ 24] pusharglist 1 ........................... <y - tLocY>
  [ 26] extcall 268 ............................. <abs(y - tLocY)>
  [ 29] getprop 422 ............................. <pTileWidth>
  [ 32] pushint8 100 ............................ <100>
  [ 34] mul ..................................... <pTileWidth * 100>
  [ 35] lt ...................................... <abs(y - tLocY) < (pTileWidth * 100)>
  [ 36] and ..................................... <(abs(x - tLocX) < (pTileWidth * 100)) and (abs(y - tLocY) < (pTileWidth * 100))>
  [ 37] pusharglistnoret 1 ...................... <(abs(x - tLocX) < (pTileWidth * 100)) and (abs(y - tLocY) < (pTileWidth * 100))>
  [ 39] extcall 53 .............................. return (abs(x - tLocX) < (pTileWidth * 100)) and (abs(y - tLocY) < (pTileWidth * 100))
  [ 41] ret
end

on isInDistance me, tLocX, tLocY, tDistance
  [  0] getparam 1 .............................. <tLocX>
  [  2] getprop 395 ............................. <x>
  [  5] sub ..................................... <tLocX - x>
  [  6] pusharglist 1 ........................... <tLocX - x>
  [  8] extcall 268 ............................. <abs(tLocX - x)>
  [ 11] setlocal 0 .............................. tDistanceX = abs(tLocX - x)
  [ 13] getparam 2 .............................. <tLocY>
  [ 15] getprop 396 ............................. <y>
  [ 18] sub ..................................... <tLocY - y>
  [ 19] pusharglist 1 ........................... <tLocY - y>
  [ 21] extcall 268 ............................. <abs(tLocY - y)>
  [ 24] setlocal 1 .............................. tDistanceY = abs(tLocY - y)
  [ 26] getlocal 1 .............................. <tDistanceY>
  [ 28] getparam 3 .............................. <tDistance>
  [ 30] gt ...................................... <tDistanceY > tDistance>
  [ 31] getlocal 0 .............................. <tDistanceX>
  [ 33] getparam 3 .............................. <tDistance>
  [ 35] gt ...................................... <tDistanceX > tDistance>
  [ 36] or ...................................... <(tDistanceY > tDistance) or (tDistanceX > tDistance)>
  [ 37] jmpifz [ 45] ............................ if (tDistanceY > tDistance) or (tDistanceX > tDistance) then
  [ 40] pushzero ................................ <0>
  [ 41] pusharglistnoret 1 ...................... <0>
  [ 43] extcall 53 .............................. return 0
  [ 45] getlocal 0 .............................. <tDistanceX>
  [ 47] getlocal 0 .............................. <tDistanceX>
  [ 49] mul ..................................... <tDistanceX * tDistanceX>
  [ 50] getlocal 1 .............................. <tDistanceY>
  [ 52] getlocal 1 .............................. <tDistanceY>
  [ 54] mul ..................................... <tDistanceY * tDistanceY>
  [ 55] add ..................................... <(tDistanceX * tDistanceX) + (tDistanceY * tDistanceY)>
  [ 56] getparam 3 .............................. <tDistance>
  [ 58] getparam 3 .............................. <tDistance>
  [ 60] mul ..................................... <tDistance * tDistance>
  [ 61] lt ...................................... <((tDistanceX * tDistanceX) + (tDistanceY * tDistanceY)) < (tDistance * tDistance)>
  [ 62] jmpifz [ 71] ............................ if ((tDistanceX * tDistanceX) + (tDistanceY * tDistanceY)) < (tDistance * tDistance) then
  [ 65] pushint8 1 .............................. <1>
  [ 67] pusharglistnoret 1 ...................... <1>
  [ 69] extcall 53 .............................. return 1
  [ 71] pushzero ................................ <0>
  [ 72] pusharglistnoret 1 ...................... <0>
  [ 74] extcall 53 .............................. return 0
  [ 76] ret
end

on isBlockingLineOfSight me
  [  0] pushcons 1 .............................. <"* DEFAULT isBlockingLineOfSight, override!">
  [  2] pusharglistnoret 1 ...................... <"* DEFAULT isBlockingLineOfSight, override!">
  [  4] extcall 470 ............................. put "* DEFAULT isBlockingLineOfSight, override!"
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 53 .............................. return 0
  [ 12] ret
end

on isAvailable me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 613 ............................. <me.isOccupied()>
  [  7] not ..................................... <not me.isOccupied()>
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 615 ............................. <me.isFloorTile()>
  [ 15] and ..................................... <not me.isOccupied() and me.isFloorTile()>
  [ 16] pusharglistnoret 1 ...................... <not me.isOccupied() and me.isFloorTile()>
  [ 18] extcall 53 .............................. return not me.isOccupied() and me.isFloorTile()
  [ 20] ret
end

on isOccupied me
  [  0] getprop 616 ............................. <pContent>
  [  3] getobjprop 143 .......................... <pContent.count>
  [  5] pushzero ................................ <0>
  [  6] gt ...................................... <pContent.count > 0>
  [  7] pusharglistnoret 1 ...................... <pContent.count > 0>
  [  9] extcall 53 .............................. return pContent.count > 0
  [ 11] ret
end

on getOccupiedHeight me
  [  0] getprop 616 ............................. <pContent>
  [  3] getobjprop 143 .......................... <pContent.count>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <pContent.count = 0>
  [  7] jmpifz [ 15] ............................ if pContent.count = 0 then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 53 .............................. return 0
  [ 15] pushzero ................................ <0>
  [ 16] setlocal 0 .............................. tMaxHeight = 0
  [ 18] getprop 616 ............................. <pContent>
  [ 21] peek 0
  [ 23] pusharglist 1
  [ 25] extcall 143
  [ 27] pushint8 1
  [ 29] peek 0
  [ 31] peek 2
  [ 33] lteq
  [ 34] jmpifz [ 80] ............................ repeat with tItem in pContent
  [ 37] peek 2
  [ 39] peek 1
  [ 41] pusharglist 2
  [ 43] extcall 99
  [ 45] setlocal 1
  [ 47] getlocal 1 .............................. <tItem>
  [ 49] pushsymb 401 ............................ <#height>
  [ 52] pusharglist 2 ........................... <tItem, #height>
  [ 54] objcall 472 ............................. <tItem.getaProp(#height)>
  [ 57] getlocal 0 .............................. <tMaxHeight>
  [ 59] gt ...................................... <tItem.getaProp(#height) > tMaxHeight>
  [ 60] jmpifz [ 75] ............................ if tItem.getaProp(#height) > tMaxHeight then
  [ 63] getlocal 1 .............................. <tItem>
  [ 65] pushsymb 401 ............................ <#height>
  [ 68] pusharglist 2 ........................... <tItem, #height>
  [ 70] objcall 472 ............................. <tItem.getaProp(#height)>
  [ 73] setlocal 0 .............................. tMaxHeight = tItem.getaProp(#height)
  [ 75] pushint8 1
  [ 77] add
  [ 78] endrepeat [ 29]
  [ 80] pop 3
  [ 82] getlocal 0 .............................. <tMaxHeight>
  [ 84] pusharglistnoret 1 ...................... <tMaxHeight>
  [ 86] extcall 53 .............................. return tMaxHeight
  [ 88] ret
end

on isFloorTile me
  [  0] getprop 619 ............................. <pType>
  [  3] pusharglist 1 ........................... <pType>
  [  5] extcall 277 ............................. <integer(pType)>
  [  8] pusharglist 1 ........................... <integer(pType)>
  [ 10] extcall 283 ............................. <integerp(integer(pType))>
  [ 13] pusharglistnoret 1 ...................... <integerp(integer(pType))>
  [ 15] extcall 53 .............................. return integerp(integer(pType))
  [ 17] ret
end

on dump me
  [  0] pushcons 2 .............................. <"Tile:">
  [  2] getprop 617 ............................. <pLocX>
  [  5] joinpadstr .............................. <"Tile:" && pLocX>
  [  6] pushcons 3 .............................. <",">
  [  8] joinstr ................................. <"Tile:" && pLocX & ",">
  [  9] getprop 618 ............................. <pLocY>
  [ 12] joinstr ................................. <"Tile:" && pLocX & "," & pLocY>
  [ 13] pushcons 4 .............................. <":">
  [ 15] joinstr ................................. <"Tile:" && pLocX & "," & pLocY & ":">
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglist 1 ........................... <me>
  [ 20] objcall 442 ............................. <me.isAvailable()>
  [ 23] joinpadstr .............................. <"Tile:" && pLocX & "," & pLocY & ":" && me.isAvailable()>
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 614 ............................. <me.getOccupiedHeight()>
  [ 31] joinpadstr .............................. <"Tile:" && pLocX & "," & pLocY & ":" && me.isAvailable() && me.getOccupiedHeight()>
  [ 32] pusharglistnoret 1 ...................... <"Tile:" && pLocX & "," & pLocY & ":" && me.isAvailable() && me.getOccupiedHeight()>
  [ 34] extcall 53 .............................. return "Tile:" && pLocX & "," & pLocY & ":" && me.isAvailable() && me.getOccupiedHeight()
  [ 36] ret
end

on getGameSystem me
  [  0] getprop 525 ............................. <pGameSystem>
  [  3] pusharglistnoret 1 ...................... <pGameSystem>
  [  5] extcall 53 .............................. return pGameSystem
  [  7] ret
end
