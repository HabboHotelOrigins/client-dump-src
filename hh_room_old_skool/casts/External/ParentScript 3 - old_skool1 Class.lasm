property pAnimThisUpdate, pSin, pSpriteList, pOrigLocs, pWallLightSprites, pWallLightValues, pWallLightCount, pTileSprites

on construct me
  [  0] pushfloat32 0.0 ......................... <0.0>
  [  5] setprop 11 .............................. pSin = 0.0
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] setprop 13 .............................. pSpriteList = []
  [ 12] pusharglist 0 ........................... <[]>
  [ 14] pushlist ................................ <[]>
  [ 15] setprop 14 .............................. pOrigLocs = []
  [ 17] pushzero ................................ <0>
  [ 18] setprop 18 .............................. pAnimThisUpdate = 0
  [ 20] pushint8 60 ............................. <60>
  [ 22] setprop 107 ............................. pWallLightCount = 60
  [ 24] pusharglist 0 ........................... <[]>
  [ 26] pushlist ................................ <[]>
  [ 27] setprop 22 .............................. pWallLightSprites = []
  [ 29] pusharglist 0 ........................... <[]>
  [ 31] pushlist ................................ <[]>
  [ 32] setprop 19 .............................. pWallLightValues = []
  [ 34] pusharglist 0 ........................... <[]>
  [ 36] pushlist ................................ <[]>
  [ 37] setprop 117 ............................. pTileSprites = []
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 1 ...................... <1>
  [ 43] extcall 20 .............................. return 1
  [ 45] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 108 ............................. me.removeWallLights()
  [  6] getparam 0 .............................. <me>
  [  8] pusharglist 1 ........................... <me>
  [ 10] objcall 24 .............................. <me.getID()>
  [ 12] pusharglist 1 ........................... <me.getID()>
  [ 14] extcall 23 .............................. <removeUpdate(me.getID())>
  [ 16] pusharglistnoret 1 ...................... <removeUpdate(me.getID())>
  [ 18] extcall 20 .............................. return removeUpdate(me.getID())
  [ 20] ret
end

on prepare me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 24 .............................. <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 25 .............................. <receiveUpdate(me.getID())>
  [ 10] pusharglistnoret 1 ...................... <receiveUpdate(me.getID())>
  [ 12] extcall 20 .............................. return receiveUpdate(me.getID())
  [ 14] ret
end

on update me
  [  0] getprop 18 .............................. <pAnimThisUpdate>
  [  2] not ..................................... <not pAnimThisUpdate>
  [  3] setprop 18 .............................. pAnimThisUpdate = not pAnimThisUpdate
  [  5] getprop 18 .............................. <pAnimThisUpdate>
  [  7] not ..................................... <not pAnimThisUpdate>
  [  8] jmpifz [ 17] ............................ if not pAnimThisUpdate then
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 20 .............................. return 1
  [ 17] getprop 11 .............................. <pSin>
  [ 19] pushcons 0 .............................. <0.07000000000000001>
  [ 21] add ..................................... <pSin + 0.07000000000000001>
  [ 22] setprop 11 .............................. pSin = pSin + 0.07000000000000001
  [ 24] getprop 13 .............................. <pSpriteList>
  [ 26] pusharglist 0 ........................... <[]>
  [ 28] pushlist ................................ <[]>
  [ 29] eq ...................................... <pSpriteList = []>
  [ 30] jmpifz [ 43] ............................ if pSpriteList = [] then
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglist 1 ........................... <me>
  [ 37] objcall 8 ............................... <me.getSpriteList()>
  [ 39] pusharglistnoret 1 ...................... <me.getSpriteList()>
  [ 41] extcall 20 .............................. return me.getSpriteList()
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglistnoret 1 ...................... <me>
  [ 47] objcall 10 .............................. me.rotateWallLights()
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglistnoret 1 ...................... <me>
  [ 53] objcall 119 ............................. me.blinkFloorLights()
  [ 55] getparam 0 .............................. <me>
  [ 57] pushint8 15 ............................. <15>
  [ 59] pushint8 15 ............................. <15>
  [ 61] pushint8 15 ............................. <15>
  [ 63] pushint8 15 ............................. <15>
  [ 65] pushint8 10 ............................. <10>
  [ 67] inv ..................................... <-10>
  [ 68] pushint8 10 ............................. <10>
  [ 70] inv ..................................... <-10>
  [ 71] pusharglist 2 ........................... <-10, -10>
  [ 73] extcall 33 .............................. <point(-10, -10)>
  [ 75] pushint8 10 ............................. <10>
  [ 77] inv ..................................... <-10>
  [ 78] pushint8 10 ............................. <10>
  [ 80] inv ..................................... <-10>
  [ 81] pusharglist 2 ........................... <-10, -10>
  [ 83] extcall 33 .............................. <point(-10, -10)>
  [ 85] pusharglistnoret 7 ...................... <me, 15, 15, 15, 15, point(-10, -10), point(-10, -10)>
  [ 87] objcall 6 ............................... me.fullRotation(15, 15, 15, 15, point(-10, -10), point(-10, -10))
  [ 89] pushint8 1 .............................. <1>
  [ 91] pusharglistnoret 1 ...................... <1>
  [ 93] extcall 20 .............................. return 1
  [ 95] ret
end

on fullRotation me, tX1, tY1, tX2, tY2, tOffset1, tOffset2
  [  0] getparam 5 .............................. <tOffset1>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 31 .............................. <VOID>
  [  6] eq ...................................... <tOffset1 = VOID>
  [  7] jmpifz [ 18] ............................ if tOffset1 = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pushzero ................................ <0>
  [ 12] pusharglist 2 ........................... <0, 0>
  [ 14] extcall 33 .............................. <point(0, 0)>
  [ 16] setparam 5 .............................. tOffset1 = point(0, 0)
  [ 18] getparam 6 .............................. <tOffset2>
  [ 20] pusharglist 0 ........................... <>
  [ 22] extcall 31 .............................. <VOID>
  [ 24] eq ...................................... <tOffset2 = VOID>
  [ 25] jmpifz [ 36] ............................ if tOffset2 = VOID then
  [ 28] pushzero ................................ <0>
  [ 29] pushzero ................................ <0>
  [ 30] pusharglist 2 ........................... <0, 0>
  [ 32] extcall 33 .............................. <point(0, 0)>
  [ 34] setparam 6 .............................. tOffset2 = point(0, 0)
  [ 36] getprop 13 .............................. <pSpriteList>
  [ 38] pushint8 3 .............................. <3>
  [ 40] pusharglist 2 ........................... <pSpriteList, 3>
  [ 42] objcall 28 .............................. <pSpriteList[3]>
  [ 44] getprop 14 .............................. <pOrigLocs>
  [ 46] pushint8 1 .............................. <1>
  [ 48] pusharglist 2 ........................... <pOrigLocs, 1>
  [ 50] objcall 28 .............................. <pOrigLocs[1]>
  [ 52] getparam 5 .............................. <tOffset1>
  [ 54] add ..................................... <pOrigLocs[1] + tOffset1>
  [ 55] getprop 11 .............................. <pSin>
  [ 57] pusharglist 1 ........................... <pSin>
  [ 59] extcall 37 .............................. <sin(pSin)>
  [ 61] getparam 1 .............................. <tX1>
  [ 63] mul ..................................... <sin(pSin) * tX1>
  [ 64] getprop 11 .............................. <pSin>
  [ 66] pusharglist 1 ........................... <pSin>
  [ 68] extcall 38 .............................. <cos(pSin)>
  [ 70] getparam 2 .............................. <tY1>
  [ 72] mul ..................................... <cos(pSin) * tY1>
  [ 73] pusharglist 2 ........................... <sin(pSin) * tX1, cos(pSin) * tY1>
  [ 75] extcall 33 .............................. <point(sin(pSin) * tX1, cos(pSin) * tY1)>
  [ 77] add ..................................... <pOrigLocs[1] + tOffset1 + point(sin(pSin) * tX1, cos(pSin) * tY1)>
  [ 78] setobjprop 39 ........................... pSpriteList[3].loc = pOrigLocs[1] + tOffset1 + point(sin(pSin) * tX1, cos(pSin) * tY1)
  [ 80] getprop 13 .............................. <pSpriteList>
  [ 82] pushint8 6 .............................. <6>
  [ 84] pusharglist 2 ........................... <pSpriteList, 6>
  [ 86] objcall 28 .............................. <pSpriteList[6]>
  [ 88] getprop 14 .............................. <pOrigLocs>
  [ 90] pushint8 2 .............................. <2>
  [ 92] pusharglist 2 ........................... <pOrigLocs, 2>
  [ 94] objcall 28 .............................. <pOrigLocs[2]>
  [ 96] getparam 6 .............................. <tOffset2>
  [ 98] add ..................................... <pOrigLocs[2] + tOffset2>
  [ 99] getprop 11 .............................. <pSin>
  [101] pusharglist 1 ........................... <pSin>
  [103] extcall 38 .............................. <cos(pSin)>
  [105] getparam 3 .............................. <tX2>
  [107] mul ..................................... <cos(pSin) * tX2>
  [108] getprop 11 .............................. <pSin>
  [110] pusharglist 1 ........................... <pSin>
  [112] extcall 37 .............................. <sin(pSin)>
  [114] getparam 4 .............................. <tY2>
  [116] mul ..................................... <sin(pSin) * tY2>
  [117] pusharglist 2 ........................... <cos(pSin) * tX2, sin(pSin) * tY2>
  [119] extcall 33 .............................. <point(cos(pSin) * tX2, sin(pSin) * tY2)>
  [121] add ..................................... <pOrigLocs[2] + tOffset2 + point(cos(pSin) * tX2, sin(pSin) * tY2)>
  [122] setobjprop 39 ........................... pSpriteList[6].loc = pOrigLocs[2] + tOffset2 + point(cos(pSin) * tX2, sin(pSin) * tY2)
  [124] getprop 13 .............................. <pSpriteList>
  [126] pushint8 3 .............................. <3>
  [128] pusharglist 2 ........................... <pSpriteList, 3>
  [130] objcall 28 .............................. <pSpriteList[3]>
  [132] getobjprop 39 ........................... <pSpriteList[3].loc>
  [134] getprop 13 .............................. <pSpriteList>
  [136] pushint8 3 .............................. <3>
  [138] pusharglist 2 ........................... <pSpriteList, 3>
  [140] objcall 28 .............................. <pSpriteList[3]>
  [142] getobjprop 40 ........................... <pSpriteList[3].width>
  [144] pushfloat32 2.0 ......................... <2.0>
  [149] div ..................................... <pSpriteList[3].width / 2.0>
  [150] pushint8 15 ............................. <15>
  [152] sub ..................................... <(pSpriteList[3].width / 2.0) - 15>
  [153] pushzero ................................ <0>
  [154] pusharglist 2 ........................... <(pSpriteList[3].width / 2.0) - 15, 0>
  [156] extcall 33 .............................. <point((pSpriteList[3].width / 2.0) - 15, 0)>
  [158] add ..................................... <pSpriteList[3].loc + point((pSpriteList[3].width / 2.0) - 15, 0)>
  [159] getprop 13 .............................. <pSpriteList>
  [161] pushint8 6 .............................. <6>
  [163] pusharglist 2 ........................... <pSpriteList, 6>
  [165] objcall 28 .............................. <pSpriteList[6]>
  [167] getobjprop 39 ........................... <pSpriteList[6].loc>
  [169] getprop 13 .............................. <pSpriteList>
  [171] pushint8 6 .............................. <6>
  [173] pusharglist 2 ........................... <pSpriteList, 6>
  [175] objcall 28 .............................. <pSpriteList[6]>
  [177] getobjprop 40 ........................... <pSpriteList[6].width>
  [179] pushfloat32 2.0 ......................... <2.0>
  [184] div ..................................... <pSpriteList[6].width / 2.0>
  [185] pushint8 10 ............................. <10>
  [187] sub ..................................... <(pSpriteList[6].width / 2.0) - 10>
  [188] pushzero ................................ <0>
  [189] pusharglist 2 ........................... <(pSpriteList[6].width / 2.0) - 10, 0>
  [191] extcall 33 .............................. <point((pSpriteList[6].width / 2.0) - 10, 0)>
  [193] sub ..................................... <pSpriteList[6].loc - point((pSpriteList[6].width / 2.0) - 10, 0)>
  [194] pusharglist 2 ........................... <[pSpriteList[3].loc + point((pSpriteList[3].width / 2.0) - 15, 0), pSpriteList[6].loc - point((pSpriteList[6].width / 2.0) - 10, 0)]>
  [196] pushlist ................................ <[pSpriteList[3].loc + point((pSpriteList[3].width / 2.0) - 15, 0), pSpriteList[6].loc - point((pSpriteList[6].width / 2.0) - 10, 0)]>
  [197] setlocal 0 .............................. tLocs = [pSpriteList[3].loc + point((pSpriteList[3].width / 2.0) - 15, 0), pSpriteList[6].loc - point((pSpriteList[6].width / 2.0) - 10, 0)]
  [199] getprop 13 .............................. <pSpriteList>
  [201] pushint8 2 .............................. <2>
  [203] pusharglist 2 ........................... <pSpriteList, 2>
  [205] objcall 28 .............................. <pSpriteList[2]>
  [207] getprop 13 .............................. <pSpriteList>
  [209] pushint8 2 .............................. <2>
  [211] pusharglist 2 ........................... <pSpriteList, 2>
  [213] objcall 28 .............................. <pSpriteList[2]>
  [215] pushsymb 41 ............................. <#rect>
  [217] pushint8 1 .............................. <1>
  [219] pusharglist 3 ........................... <pSpriteList[2], #rect, 1>
  [221] objcall 42 .............................. <pSpriteList[2].rect[1]>
  [223] getprop 13 .............................. <pSpriteList>
  [225] pushint8 2 .............................. <2>
  [227] pusharglist 2 ........................... <pSpriteList, 2>
  [229] objcall 28 .............................. <pSpriteList[2]>
  [231] pushsymb 41 ............................. <#rect>
  [233] pushint8 2 .............................. <2>
  [235] pusharglist 3 ........................... <pSpriteList[2], #rect, 2>
  [237] objcall 42 .............................. <pSpriteList[2].rect[2]>
  [239] getlocal 0 .............................. <tLocs>
  [241] pushint8 1 .............................. <1>
  [243] pusharglist 2 ........................... <tLocs, 1>
  [245] objcall 28 .............................. <tLocs[1]>
  [247] pushint8 1 .............................. <1>
  [249] pusharglist 2 ........................... <tLocs[1], 1>
  [251] objcall 28 .............................. <tLocs[1][1]>
  [253] getlocal 0 .............................. <tLocs>
  [255] pushint8 1 .............................. <1>
  [257] pusharglist 2 ........................... <tLocs, 1>
  [259] objcall 28 .............................. <tLocs[1]>
  [261] pushint8 2 .............................. <2>
  [263] pusharglist 2 ........................... <tLocs[1], 2>
  [265] objcall 28 .............................. <tLocs[1][2]>
  [267] pusharglist 4 ........................... <pSpriteList[2].rect[1], pSpriteList[2].rect[2], tLocs[1][1], tLocs[1][2]>
  [269] extcall 41 .............................. <rect(pSpriteList[2].rect[1], pSpriteList[2].rect[2], tLocs[1][1], tLocs[1][2])>
  [271] setobjprop 41 ........................... pSpriteList[2].rect = rect(pSpriteList[2].rect[1], pSpriteList[2].rect[2], tLocs[1][1], tLocs[1][2])
  [273] getprop 13 .............................. <pSpriteList>
  [275] pushint8 5 .............................. <5>
  [277] pusharglist 2 ........................... <pSpriteList, 5>
  [279] objcall 28 .............................. <pSpriteList[5]>
  [281] getlocal 0 .............................. <tLocs>
  [283] pushint8 2 .............................. <2>
  [285] pusharglist 2 ........................... <tLocs, 2>
  [287] objcall 28 .............................. <tLocs[2]>
  [289] pushint8 1 .............................. <1>
  [291] pusharglist 2 ........................... <tLocs[2], 1>
  [293] objcall 28 .............................. <tLocs[2][1]>
  [295] getprop 13 .............................. <pSpriteList>
  [297] pushint8 5 .............................. <5>
  [299] pusharglist 2 ........................... <pSpriteList, 5>
  [301] objcall 28 .............................. <pSpriteList[5]>
  [303] pushsymb 41 ............................. <#rect>
  [305] pushint8 2 .............................. <2>
  [307] pusharglist 3 ........................... <pSpriteList[5], #rect, 2>
  [309] objcall 42 .............................. <pSpriteList[5].rect[2]>
  [311] getprop 13 .............................. <pSpriteList>
  [313] pushint8 5 .............................. <5>
  [315] pusharglist 2 ........................... <pSpriteList, 5>
  [317] objcall 28 .............................. <pSpriteList[5]>
  [319] pushsymb 41 ............................. <#rect>
  [321] pushint8 3 .............................. <3>
  [323] pusharglist 3 ........................... <pSpriteList[5], #rect, 3>
  [325] objcall 42 .............................. <pSpriteList[5].rect[3]>
  [327] getlocal 0 .............................. <tLocs>
  [329] pushint8 2 .............................. <2>
  [331] pusharglist 2 ........................... <tLocs, 2>
  [333] objcall 28 .............................. <tLocs[2]>
  [335] pushint8 2 .............................. <2>
  [337] pusharglist 2 ........................... <tLocs[2], 2>
  [339] objcall 28 .............................. <tLocs[2][2]>
  [341] pusharglist 4 ........................... <tLocs[2][1], pSpriteList[5].rect[2], pSpriteList[5].rect[3], tLocs[2][2]>
  [343] extcall 41 .............................. <rect(tLocs[2][1], pSpriteList[5].rect[2], pSpriteList[5].rect[3], tLocs[2][2])>
  [345] setobjprop 41 ........................... pSpriteList[5].rect = rect(tLocs[2][1], pSpriteList[5].rect[2], pSpriteList[5].rect[3], tLocs[2][2])
  [347] pushint8 1 .............................. <1>
  [349] pusharglistnoret 1 ...................... <1>
  [351] extcall 20 .............................. return 1
  [353] ret
end

on getSpriteList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 13 .............................. pSpriteList = []
  [  5] pushsymb 63 ............................. <#room>
  [  7] pusharglist 1 ........................... <#room>
  [  9] extcall 62 .............................. <getThread(#room)>
  [ 11] pusharglist 1 ........................... <getThread(#room)>
  [ 13] objcall 64 .............................. <getThread(#room).getInterface()>
  [ 15] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 17] objcall 65 .............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 19] setlocal 0 .............................. tObj = getThread(#room).getInterface().getRoomVisualizer()
  [ 21] getlocal 0 .............................. <tObj>
  [ 23] pushzero ................................ <0>
  [ 24] eq ...................................... <tObj = 0>
  [ 25] jmpifz [ 33] ............................ if tObj = 0 then
  [ 28] pushzero ................................ <0>
  [ 29] pusharglistnoret 1 ...................... <0>
  [ 31] extcall 20 .............................. return 0
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 1
  [ 37] getlocal 1
  [ 39] pushint8 2 .............................. <2>
  [ 41] lteq
  [ 42] jmpifz [142] ............................ repeat with i = 1 to 2
  [ 45] getlocal 0 .............................. <tObj>
  [ 47] pushcons 1 .............................. <"disco_bulb_">
  [ 49] getlocal 1 .............................. <i>
  [ 51] joinstr ................................. <"disco_bulb_" & i>
  [ 52] pusharglist 2 ........................... <tObj, "disco_bulb_" & i>
  [ 54] objcall 66 .............................. <tObj.getSprById("disco_bulb_" & i)>
  [ 56] setlocal 2 .............................. tSp1 = tObj.getSprById("disco_bulb_" & i)
  [ 58] getlocal 0 .............................. <tObj>
  [ 60] pushcons 2 .............................. <"disco_light_">
  [ 62] getlocal 1 .............................. <i>
  [ 64] joinstr ................................. <"disco_light_" & i>
  [ 65] pusharglist 2 ........................... <tObj, "disco_light_" & i>
  [ 67] objcall 66 .............................. <tObj.getSprById("disco_light_" & i)>
  [ 69] setlocal 3 .............................. tSp2 = tObj.getSprById("disco_light_" & i)
  [ 71] getlocal 0 .............................. <tObj>
  [ 73] pushcons 3 .............................. <"disco_spot_">
  [ 75] getlocal 1 .............................. <i>
  [ 77] joinstr ................................. <"disco_spot_" & i>
  [ 78] pusharglist 2 ........................... <tObj, "disco_spot_" & i>
  [ 80] objcall 66 .............................. <tObj.getSprById("disco_spot_" & i)>
  [ 82] setlocal 4 .............................. tSp3 = tObj.getSprById("disco_spot_" & i)
  [ 84] getlocal 2 .............................. <tSp1>
  [ 86] pushint8 1 .............................. <1>
  [ 88] lt ...................................... <tSp1 < 1>
  [ 89] getlocal 3 .............................. <tSp2>
  [ 91] pushint8 1 .............................. <1>
  [ 93] lt ...................................... <tSp2 < 1>
  [ 94] or ...................................... <(tSp1 < 1) or (tSp2 < 1)>
  [ 95] getlocal 4 .............................. <tSp3>
  [ 97] pushint8 1 .............................. <1>
  [ 99] lt ...................................... <tSp3 < 1>
  [100] or ...................................... <(tSp1 < 1) or (tSp2 < 1) or (tSp3 < 1)>
  [101] jmpifz [109] ............................ if (tSp1 < 1) or (tSp2 < 1) or (tSp3 < 1) then
  [104] pushzero ................................ <0>
  [105] pusharglistnoret 1 ...................... <0>
  [107] extcall 20 .............................. return 0
  [109] getprop 13 .............................. <pSpriteList>
  [111] getlocal 2 .............................. <tSp1>
  [113] pusharglistnoret 2 ...................... <pSpriteList, tSp1>
  [115] objcall 67 .............................. pSpriteList.add(tSp1)
  [117] getprop 13 .............................. <pSpriteList>
  [119] getlocal 3 .............................. <tSp2>
  [121] pusharglistnoret 2 ...................... <pSpriteList, tSp2>
  [123] objcall 67 .............................. pSpriteList.add(tSp2)
  [125] getprop 13 .............................. <pSpriteList>
  [127] getlocal 4 .............................. <tSp3>
  [129] pusharglistnoret 2 ...................... <pSpriteList, tSp3>
  [131] objcall 67 .............................. pSpriteList.add(tSp3)
  [133] pushint8 1
  [135] getlocal 1
  [137] add
  [138] setlocal 1
  [140] endrepeat [ 37]
  [142] getprop 13 .............................. <pSpriteList>
  [144] pushint8 3 .............................. <3>
  [146] pusharglist 2 ........................... <pSpriteList, 3>
  [148] objcall 28 .............................. <pSpriteList[3]>
  [150] getobjprop 39 ........................... <pSpriteList[3].loc>
  [152] getprop 13 .............................. <pSpriteList>
  [154] pushint8 6 .............................. <6>
  [156] pusharglist 2 ........................... <pSpriteList, 6>
  [158] objcall 28 .............................. <pSpriteList[6]>
  [160] getobjprop 39 ........................... <pSpriteList[6].loc>
  [162] pusharglist 2 ........................... <[pSpriteList[3].loc, pSpriteList[6].loc]>
  [164] pushlist ................................ <[pSpriteList[3].loc, pSpriteList[6].loc]>
  [165] setprop 14 .............................. pOrigLocs = [pSpriteList[3].loc, pSpriteList[6].loc]
  [167] pushint8 1 .............................. <1>
  [169] setlocal 1
  [171] getlocal 1
  [173] getprop 13 .............................. <pSpriteList>
  [175] getobjprop 54 ........................... <pSpriteList.count>
  [177] lteq
  [178] jmpifz [204] ............................ repeat with i = 1 to pSpriteList.count
  [181] getprop 13 .............................. <pSpriteList>
  [183] getlocal 1 .............................. <i>
  [185] pusharglist 2 ........................... <pSpriteList, i>
  [187] objcall 28 .............................. <pSpriteList[i]>
  [189] getobjprop 69 ........................... <pSpriteList[i].spriteNum>
  [191] pusharglistnoret 1 ...................... <pSpriteList[i].spriteNum>
  [193] extcall 68 .............................. removeEventBroker(pSpriteList[i].spriteNum)
  [195] pushint8 1
  [197] getlocal 1
  [199] add
  [200] setlocal 1
  [202] endrepeat [171]
  [204] pushint8 30 ............................. <30>
  [206] pushint8 30 ............................. <30>
  [208] pushint8 115 ............................ <115>
  [210] pusharglist 3 ........................... <30, 30, 115>
  [212] extcall 120 ............................. <rgb(30, 30, 115)>
  [214] pushint8 20 ............................. <20>
  [216] pushint8 20 ............................. <20>
  [218] pushint8 105 ............................ <105>
  [220] pusharglist 3 ........................... <20, 20, 105>
  [222] extcall 120 ............................. <rgb(20, 20, 105)>
  [224] pushint8 30 ............................. <30>
  [226] pushint8 13 ............................. <13>
  [228] pushint8 110 ............................ <110>
  [230] pusharglist 3 ........................... <30, 13, 110>
  [232] extcall 120 ............................. <rgb(30, 13, 110)>
  [234] pushint8 30 ............................. <30>
  [236] pushint8 30 ............................. <30>
  [238] pushint8 120 ............................ <120>
  [240] pusharglist 3 ........................... <30, 30, 120>
  [242] extcall 120 ............................. <rgb(30, 30, 120)>
  [244] pusharglist 4 ........................... <[rgb(30, 30, 115), rgb(20, 20, 105), rgb(30, 13, 110), rgb(30, 30, 120)]>
  [246] pushlist ................................ <[rgb(30, 30, 115), rgb(20, 20, 105), rgb(30, 13, 110), rgb(30, 30, 120)]>
  [247] setlocal 5 .............................. tColors = [rgb(30, 30, 115), rgb(20, 20, 105), rgb(30, 13, 110), rgb(30, 30, 120)]
  [249] pushint8 1 .............................. <1>
  [251] setlocal 1
  [253] getlocal 1
  [255] pushint8 20 ............................. <20>
  [257] lteq
  [258] jmpifz [344] ............................ repeat with i = 1 to 20
  [261] getlocal 0 .............................. <tObj>
  [263] pushcons 4 .............................. <"valo">
  [265] getlocal 1 .............................. <i>
  [267] joinstr ................................. <"valo" & i>
  [268] pusharglist 2 ........................... <tObj, "valo" & i>
  [270] objcall 66 .............................. <tObj.getSprById("valo" & i)>
  [272] setlocal 6 .............................. tSp = tObj.getSprById("valo" & i)
  [274] getlocal 6 .............................. <tSp>
  [276] pushint8 1 .............................. <1>
  [278] lt ...................................... <tSp < 1>
  [279] jmpifz [292] ............................ if tSp < 1 then
  [282] pusharglist 0 ........................... <[]>
  [284] pushlist ................................ <[]>
  [285] setprop 13 .............................. pSpriteList = []
  [287] pushzero ................................ <0>
  [288] pusharglistnoret 1 ...................... <0>
  [290] extcall 20 .............................. return 0
  [292] getprop 117 ............................. <pTileSprites>
  [294] getlocal 6 .............................. <tSp>
  [296] pusharglistnoret 2 ...................... <pTileSprites, tSp>
  [298] objcall 67 .............................. pTileSprites.add(tSp)
  [300] getprop 117 ............................. <pTileSprites>
  [302] getlocal 1 .............................. <i>
  [304] pusharglist 2 ........................... <pTileSprites, i>
  [306] objcall 28 .............................. <pTileSprites[i]>
  [308] getlocal 5 .............................. <tColors>
  [310] getlocal 5 .............................. <tColors>
  [312] getobjprop 54 ........................... <tColors.count>
  [314] pusharglist 1 ........................... <tColors.count>
  [316] extcall 74 .............................. <random(tColors.count)>
  [318] pusharglist 2 ........................... <tColors, random(tColors.count)>
  [320] objcall 28 .............................. <tColors[random(tColors.count)]>
  [322] setobjprop 97 ........................... pTileSprites[i].color = tColors[random(tColors.count)]
  [324] getprop 117 ............................. <pTileSprites>
  [326] getlocal 1 .............................. <i>
  [328] pusharglist 2 ........................... <pTileSprites, i>
  [330] objcall 28 .............................. <pTileSprites[i]>
  [332] pushzero ................................ <0>
  [333] setobjprop 99 ........................... pTileSprites[i].blend = 0
  [335] pushint8 1
  [337] getlocal 1
  [339] add
  [340] setlocal 1
  [342] endrepeat [253]
  [344] getparam 0 .............................. <me>
  [346] pusharglistnoret 1 ...................... <me>
  [348] objcall 9 ............................... me.createWallLights()
  [350] pushint8 1 .............................. <1>
  [352] pusharglistnoret 1 ...................... <1>
  [354] extcall 20 .............................. return 1
  [356] ret
end

on createWallLights me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 107 ............................. <pWallLightCount>
  [  8] lteq
  [  9] jmpifz [185] ............................ repeat with i = 1 to pWallLightCount
  [ 12] getprop 19 .............................. <pWallLightValues>
  [ 14] getlocal 0 .............................. <i>
  [ 16] pusharglist 0 ........................... <[]>
  [ 18] pushlist ................................ <[]>
  [ 19] pusharglistnoret 3 ...................... <pWallLightValues, i, []>
  [ 21] objcall 75 .............................. pWallLightValues[i] = []
  [ 23] getprop 19 .............................. <pWallLightValues>
  [ 25] getlocal 0 .............................. <i>
  [ 27] pusharglist 2 ........................... <pWallLightValues, i>
  [ 29] objcall 28 .............................. <pWallLightValues[i]>
  [ 31] pushint8 1 .............................. <1>
  [ 33] pushint16 155 ........................... <155>
  [ 36] pusharglist 1 ........................... <155>
  [ 38] extcall 74 .............................. <random(155)>
  [ 40] pusharglistnoret 3 ...................... <pWallLightValues[i], 1, random(155)>
  [ 42] objcall 75 .............................. pWallLightValues[i][1] = random(155)
  [ 44] getprop 19 .............................. <pWallLightValues>
  [ 46] getlocal 0 .............................. <i>
  [ 48] pusharglist 2 ........................... <pWallLightValues, i>
  [ 50] objcall 28 .............................. <pWallLightValues[i]>
  [ 52] pushint8 2 .............................. <2>
  [ 54] pushint8 100 ............................ <100>
  [ 56] pusharglist 1 ........................... <100>
  [ 58] extcall 74 .............................. <random(100)>
  [ 60] pusharglistnoret 3 ...................... <pWallLightValues[i], 2, random(100)>
  [ 62] objcall 75 .............................. pWallLightValues[i][2] = random(100)
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 1 ........................... <me>
  [ 68] objcall 24 .............................. <me.getID()>
  [ 70] pusharglist 1 ........................... <me.getID()>
  [ 72] extcall 76 .............................. <reserveSprite(me.getID())>
  [ 74] setlocal 1 .............................. tSpriteChannel = reserveSprite(me.getID())
  [ 76] getlocal 1 .............................. <tSpriteChannel>
  [ 78] pushzero ................................ <0>
  [ 79] eq ...................................... <tSpriteChannel = 0>
  [ 80] jmpifz [ 95] ............................ if tSpriteChannel = 0 then
  [ 83] getparam 0 .............................. <me>
  [ 85] pusharglistnoret 1 ...................... <me>
  [ 87] objcall 108 ............................. me.removeWallLights()
  [ 89] pushint8 1 .............................. <1>
  [ 91] pusharglistnoret 1 ...................... <1>
  [ 93] extcall 20 .............................. return 1
  [ 95] getprop 22 .............................. <pWallLightSprites>
  [ 97] getlocal 0 .............................. <i>
  [ 99] getlocal 1 .............................. <tSpriteChannel>
  [101] pusharglist 1 ........................... <tSpriteChannel>
  [103] extcall 90 .............................. <sprite(tSpriteChannel)>
  [105] pusharglistnoret 3 ...................... <pWallLightSprites, i, sprite(tSpriteChannel)>
  [107] objcall 75 .............................. pWallLightSprites[i] = sprite(tSpriteChannel)
  [109] getprop 22 .............................. <pWallLightSprites>
  [111] getlocal 0 .............................. <i>
  [113] pusharglist 2 ........................... <pWallLightSprites, i>
  [115] objcall 28 .............................. <pWallLightSprites[i]>
  [117] pushint8 32 ............................. <32>
  [119] setobjprop 82 ........................... pWallLightSprites[i].ink = 32
  [121] getprop 22 .............................. <pWallLightSprites>
  [123] getlocal 0 .............................. <i>
  [125] pusharglist 2 ........................... <pWallLightSprites, i>
  [127] objcall 28 .............................. <pWallLightSprites[i]>
  [129] pushint8 70 ............................. <70>
  [131] pusharglist 1 ........................... <70>
  [133] extcall 74 .............................. <random(70)>
  [135] setobjprop 99 ........................... pWallLightSprites[i].blend = random(70)
  [137] getprop 22 .............................. <pWallLightSprites>
  [139] getlocal 0 .............................. <i>
  [141] pusharglist 2 ........................... <pWallLightSprites, i>
  [143] objcall 28 .............................. <pWallLightSprites[i]>
  [145] pushint8 64 ............................. <64>
  [147] pushint16 608 ........................... <608>
  [150] pushint8 65 ............................. <65>
  [152] sub ..................................... <608 - 65>
  [153] pusharglist 1 ........................... <608 - 65>
  [155] extcall 74 .............................. <random(608 - 65)>
  [157] add ..................................... <64 + random(608 - 65)>
  [158] setobjprop 77 ........................... pWallLightSprites[i].locH = 64 + random(608 - 65)
  [160] getprop 22 .............................. <pWallLightSprites>
  [162] getlocal 0 .............................. <i>
  [164] pusharglist 2 ........................... <pWallLightSprites, i>
  [166] objcall 28 .............................. <pWallLightSprites[i]>
  [168] pushcons 5 .............................. <"lightspot_1">
  [170] pusharglist 1 ........................... <"lightspot_1">
  [172] extcall 79 .............................. <getMember("lightspot_1")>
  [174] setobjprop 78 ........................... pWallLightSprites[i].member = getMember("lightspot_1")
  [176] pushint8 1
  [178] getlocal 0
  [180] add
  [181] setlocal 0
  [183] endrepeat [  4]
  [185] pushint8 1 .............................. <1>
  [187] pusharglistnoret 1 ...................... <1>
  [189] extcall 20 .............................. return 1
  [191] ret
end

on rotateWallLights me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 22 .............................. <pWallLightSprites>
  [  8] getobjprop 54 ........................... <pWallLightSprites.count>
  [ 10] lteq
  [ 11] jmpifz [269] ............................ repeat with i = 1 to pWallLightSprites.count
  [ 14] getprop 19 .............................. <pWallLightValues>
  [ 16] getlocal 0 .............................. <i>
  [ 18] pusharglist 2 ........................... <pWallLightValues, i>
  [ 20] objcall 28 .............................. <pWallLightValues[i]>
  [ 22] pushint8 2 .............................. <2>
  [ 24] pusharglist 2 ........................... <pWallLightValues[i], 2>
  [ 26] objcall 28 .............................. <pWallLightValues[i][2]>
  [ 28] setlocal 1 .............................. tDimValue = pWallLightValues[i][2]
  [ 30] getlocal 1 .............................. <tDimValue>
  [ 32] pushcons 6 .............................. <0.19>
  [ 34] add ..................................... <tDimValue + 0.19>
  [ 35] setlocal 1 .............................. tDimValue = tDimValue + 0.19
  [ 37] getlocal 1 .............................. <tDimValue>
  [ 39] pushint8 100 ............................ <100>
  [ 41] gt ...................................... <tDimValue > 100>
  [ 42] jmpifz [ 49] ............................ if tDimValue > 100 then
  [ 45] pushint8 1 .............................. <1>
  [ 47] setlocal 1 .............................. tDimValue = 1
  [ 49] getprop 19 .............................. <pWallLightValues>
  [ 51] getlocal 0 .............................. <i>
  [ 53] pusharglist 2 ........................... <pWallLightValues, i>
  [ 55] objcall 28 .............................. <pWallLightValues[i]>
  [ 57] pushint8 2 .............................. <2>
  [ 59] getlocal 1 .............................. <tDimValue>
  [ 61] pusharglistnoret 3 ...................... <pWallLightValues[i], 2, tDimValue>
  [ 63] objcall 75 .............................. pWallLightValues[i][2] = tDimValue
  [ 65] getprop 22 .............................. <pWallLightSprites>
  [ 67] getlocal 0 .............................. <i>
  [ 69] pusharglist 2 ........................... <pWallLightSprites, i>
  [ 71] objcall 28 .............................. <pWallLightSprites[i]>
  [ 73] getobjprop 77 ........................... <pWallLightSprites[i].locH>
  [ 75] setlocal 2 .............................. tLocH = pWallLightSprites[i].locH
  [ 77] getlocal 2 .............................. <tLocH>
  [ 79] pushint8 2 .............................. <2>
  [ 81] add ..................................... <tLocH + 2>
  [ 82] setlocal 2 .............................. tLocH = tLocH + 2
  [ 84] getlocal 2 .............................. <tLocH>
  [ 86] pushint16 608 ........................... <608>
  [ 89] gt ...................................... <tLocH > 608>
  [ 90] jmpifz [129] ............................ if tLocH > 608 then
  [ 93] pushint8 65 ............................. <65>
  [ 95] setlocal 2 .............................. tLocH = 65
  [ 97] getprop 22 .............................. <pWallLightSprites>
  [ 99] getlocal 0 .............................. <i>
  [101] pusharglist 2 ........................... <pWallLightSprites, i>
  [103] objcall 28 .............................. <pWallLightSprites[i]>
  [105] pushzero ................................ <0>
  [106] setobjprop 83 ........................... pWallLightSprites[i].flipH = 0
  [108] getprop 19 .............................. <pWallLightValues>
  [110] getlocal 0 .............................. <i>
  [112] pusharglist 2 ........................... <pWallLightValues, i>
  [114] objcall 28 .............................. <pWallLightValues[i]>
  [116] pushint8 1 .............................. <1>
  [118] pushint16 155 ........................... <155>
  [121] pusharglist 1 ........................... <155>
  [123] extcall 74 .............................. <random(155)>
  [125] pusharglistnoret 3 ...................... <pWallLightValues[i], 1, random(155)>
  [127] objcall 75 .............................. pWallLightValues[i][1] = random(155)
  [129] getlocal 2 .............................. <tLocH>
  [131] pushint16 353 ........................... <353>
  [134] gt ...................................... <tLocH > 353>
  [135] jmpifz [185] ............................ if tLocH > 353 then / else
  [138] getprop 22 .............................. <pWallLightSprites>
  [140] getlocal 0 .............................. <i>
  [142] pusharglist 2 ........................... <pWallLightSprites, i>
  [144] objcall 28 .............................. <pWallLightSprites[i]>
  [146] pushint8 1 .............................. <1>
  [148] setobjprop 83 ........................... pWallLightSprites[i].flipH = 1
  [150] pushint8 38 ............................. <38>
  [152] getlocal 2 .............................. <tLocH>
  [154] pushint16 353 ........................... <353>
  [157] sub ..................................... <tLocH - 353>
  [158] pushfloat32 0.5 ......................... <0.5>
  [163] mul ..................................... <(tLocH - 353) * 0.5>
  [164] add ..................................... <38 + ((tLocH - 353) * 0.5)>
  [165] getprop 19 .............................. <pWallLightValues>
  [167] getlocal 0 .............................. <i>
  [169] pusharglist 2 ........................... <pWallLightValues, i>
  [171] objcall 28 .............................. <pWallLightValues[i]>
  [173] pushint8 1 .............................. <1>
  [175] pusharglist 2 ........................... <pWallLightValues[i], 1>
  [177] objcall 28 .............................. <pWallLightValues[i][1]>
  [179] add ..................................... <38 + ((tLocH - 353) * 0.5) + pWallLightValues[i][1]>
  [180] setlocal 3 .............................. tLocV = 38 + ((tLocH - 353) * 0.5) + pWallLightValues[i][1]
  [182] jmp [217]
  [185] pushint8 38 ............................. <38>
  [187] pushint16 353 ........................... <353>
  [190] getlocal 2 .............................. <tLocH>
  [192] sub ..................................... <353 - tLocH>
  [193] pushfloat32 0.5 ......................... <0.5>
  [198] mul ..................................... <(353 - tLocH) * 0.5>
  [199] add ..................................... <38 + ((353 - tLocH) * 0.5)>
  [200] getprop 19 .............................. <pWallLightValues>
  [202] getlocal 0 .............................. <i>
  [204] pusharglist 2 ........................... <pWallLightValues, i>
  [206] objcall 28 .............................. <pWallLightValues[i]>
  [208] pushint8 1 .............................. <1>
  [210] pusharglist 2 ........................... <pWallLightValues[i], 1>
  [212] objcall 28 .............................. <pWallLightValues[i][1]>
  [214] add ..................................... <38 + ((353 - tLocH) * 0.5) + pWallLightValues[i][1]>
  [215] setlocal 3 .............................. tLocV = 38 + ((353 - tLocH) * 0.5) + pWallLightValues[i][1]
  [217] getprop 22 .............................. <pWallLightSprites>
  [219] getlocal 0 .............................. <i>
  [221] pusharglist 2 ........................... <pWallLightSprites, i>
  [223] objcall 28 .............................. <pWallLightSprites[i]>
  [225] getlocal 2 .............................. <tLocH>
  [227] getlocal 3 .............................. <tLocV>
  [229] pusharglist 2 ........................... <tLocH, tLocV>
  [231] extcall 33 .............................. <point(tLocH, tLocV)>
  [233] setobjprop 39 ........................... pWallLightSprites[i].loc = point(tLocH, tLocV)
  [235] getprop 22 .............................. <pWallLightSprites>
  [237] getlocal 0 .............................. <i>
  [239] pusharglist 2 ........................... <pWallLightSprites, i>
  [241] objcall 28 .............................. <pWallLightSprites[i]>
  [243] pushzero ................................ <0>
  [244] getlocal 1 .............................. <tDimValue>
  [246] pusharglist 1 ........................... <tDimValue>
  [248] extcall 37 .............................. <sin(tDimValue)>
  [250] pushint8 60 ............................. <60>
  [252] mul ..................................... <sin(tDimValue) * 60>
  [253] pusharglist 2 ........................... <0, sin(tDimValue) * 60>
  [255] extcall 106 ............................. <max(0, sin(tDimValue) * 60)>
  [257] setobjprop 99 ........................... pWallLightSprites[i].blend = max(0, sin(tDimValue) * 60)
  [259] pushint8 1
  [261] getlocal 0
  [263] add
  [264] setlocal 0
  [266] endrepeat [  4]
  [269] pushint8 1 .............................. <1>
  [271] pusharglistnoret 1 ...................... <1>
  [273] extcall 20 .............................. return 1
  [275] ret
end

on removeWallLights me
  [  0] getprop 22 .............................. <pWallLightSprites>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 54
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 56] ............................ repeat with tWallSprite in pWallLightSprites
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 28
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tWallSprite>
  [ 30] getobjprop 85 ........................... <tWallSprite.ilk>
  [ 32] pushsymb 90 ............................. <#sprite>
  [ 34] eq ...................................... <tWallSprite.ilk = #sprite>
  [ 35] jmpifz [ 46] ............................ if tWallSprite.ilk = #sprite then
  [ 38] getlocal 0 .............................. <tWallSprite>
  [ 40] getobjprop 69 ........................... <tWallSprite.spriteNum>
  [ 42] pusharglistnoret 1 ...................... <tWallSprite.spriteNum>
  [ 44] extcall 109 ............................. releaseSprite(tWallSprite.spriteNum)
  [ 46] pusharglist 0 ........................... <[]>
  [ 48] pushlist ................................ <[]>
  [ 49] setprop 22 .............................. pWallLightSprites = []
  [ 51] pushint8 1
  [ 53] add
  [ 54] endrepeat [ 10]
  [ 56] pop 3
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglistnoret 1 ...................... <1>
  [ 62] extcall 20 .............................. return 1
  [ 64] ret
end

on blinkFloorLights me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] pushint8 20 ............................. <20>
  [  8] lteq
  [  9] jmpifz [ 60] ............................ repeat with i = 1 to 20
  [ 12] getprop 11 .............................. <pSin>
  [ 14] pushfloat32 1.5 ......................... <1.5>
  [ 19] mul ..................................... <pSin * 1.5>
  [ 20] getlocal 0 .............................. <i>
  [ 22] pushcons 7 .............................. <0.29999999999999999>
  [ 24] mul ..................................... <i * 0.29999999999999999>
  [ 25] add ..................................... <(pSin * 1.5) + (i * 0.29999999999999999)>
  [ 26] pusharglist 1 ........................... <(pSin * 1.5) + (i * 0.29999999999999999)>
  [ 28] extcall 37 .............................. <sin((pSin * 1.5) + (i * 0.29999999999999999))>
  [ 30] setlocal 1 .............................. tMultiplier = sin((pSin * 1.5) + (i * 0.29999999999999999))
  [ 32] getprop 117 ............................. <pTileSprites>
  [ 34] getlocal 0 .............................. <i>
  [ 36] pusharglist 2 ........................... <pTileSprites, i>
  [ 38] objcall 28 .............................. <pTileSprites[i]>
  [ 40] getlocal 1 .............................. <tMultiplier>
  [ 42] pushint8 100 ............................ <100>
  [ 44] mul ..................................... <tMultiplier * 100>
  [ 45] pusharglist 1 ........................... <tMultiplier * 100>
  [ 47] extcall 124 ............................. <abs(tMultiplier * 100)>
  [ 49] setobjprop 99 ........................... pTileSprites[i].blend = abs(tMultiplier * 100)
  [ 51] pushint8 1
  [ 53] getlocal 0
  [ 55] add
  [ 56] setlocal 0
  [ 58] endrepeat [  4]
  [ 60] pushint8 1 .............................. <1>
  [ 62] pusharglistnoret 1 ...................... <1>
  [ 64] extcall 20 .............................. return 1
  [ 66] ret
end
