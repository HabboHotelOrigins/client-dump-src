property pUserList, pUserListFilter, pExcludeList, pTicketsLeft

on construct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 47 .............................. <VOID>
  [  4] setprop 1240 ............................ pUserList = VOID
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] setprop 1241 ............................ pExcludeList = []
  [ 13] pushint8 1 .............................. <1>
  [ 15] setprop 1242 ............................ pUserListFilter = 1
  [ 18] pushzero ................................ <0>
  [ 19] setprop 1243 ............................ pTicketsLeft = 0
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglistnoret 1 ...................... <1>
  [ 26] extcall 38 .............................. return 1
  [ 28] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 470 ...................... <me.ancestor>
  [  5] pusharglist 1 ........................... <me.ancestor>
  [  7] objcall 1 ............................... <me.ancestor.deconstruct()>
  [  9] pusharglistnoret 1 ...................... <me.ancestor.deconstruct()>
  [ 11] extcall 38 .............................. return me.ancestor.deconstruct()
  [ 13] ret
end

on getUserList me
  [  0] getprop 1240 ............................ <pUserList>
  [  3] pusharglist 0 ........................... <>
  [  5] extcall 47 .............................. <VOID>
  [  7] eq ...................................... <pUserList = VOID>
  [  8] jmpifz [ 28] ............................ if pUserList = VOID then
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglist 1 ........................... <me>
  [ 15] objcall 100 ............................. <me.getHandler()>
  [ 17] getprop 1242 ............................ <pUserListFilter>
  [ 20] pusharglist 2 ........................... <me.getHandler(), pUserListFilter>
  [ 22] objcall 129 ............................. <me.getHandler().send_LIST_POSSIBLE_INVITEES(pUserListFilter)>
  [ 24] pusharglistnoret 1 ...................... <me.getHandler().send_LIST_POSSIBLE_INVITEES(pUserListFilter)>
  [ 26] extcall 38 .............................. return me.getHandler().send_LIST_POSSIBLE_INVITEES(pUserListFilter)
  [ 28] getprop 1240 ............................ <pUserList>
  [ 31] pusharglistnoret 1 ...................... <pUserList>
  [ 33] extcall 38 .............................. return pUserList
  [ 35] ret
end

on changeUserListFilter me, tFilter
  [  0] getparam 1 .............................. <tFilter>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 47 .............................. <VOID>
  [  6] eq ...................................... <tFilter = VOID>
  [  7] jmpifz [ 15] ............................ if tFilter = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 38 .............................. return 0
  [ 15] getparam 1 .............................. <tFilter>
  [ 17] getprop 1242 ............................ <pUserListFilter>
  [ 20] eq ...................................... <tFilter = pUserListFilter>
  [ 21] jmpifz [ 30] ............................ if tFilter = pUserListFilter then
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 38 .............................. return 1
  [ 30] getparam 1 .............................. <tFilter>
  [ 32] setprop 1242 ............................ pUserListFilter = tFilter
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglist 1 ........................... <me>
  [ 39] objcall 100 ............................. <me.getHandler()>
  [ 41] getprop 1242 ............................ <pUserListFilter>
  [ 44] pusharglist 2 ........................... <me.getHandler(), pUserListFilter>
  [ 46] objcall 129 ............................. <me.getHandler().send_LIST_POSSIBLE_INVITEES(pUserListFilter)>
  [ 48] pusharglistnoret 1 ...................... <me.getHandler().send_LIST_POSSIBLE_INVITEES(pUserListFilter)>
  [ 50] extcall 38 .............................. return me.getHandler().send_LIST_POSSIBLE_INVITEES(pUserListFilter)
  [ 52] ret
end

on getUserListFilter me
  [  0] getprop 1242 ............................ <pUserListFilter>
  [  3] pusharglistnoret 1 ...................... <pUserListFilter>
  [  5] extcall 38 .............................. return pUserListFilter
  [  7] ret
end

on sendInviteToListIndex me, tIndex, tMessage
  [  0] pushcons 0 .............................. <"* sendInviteToListIndex">
  [  2] getparam 1 .............................. <tIndex>
  [  4] joinpadstr .............................. <"* sendInviteToListIndex" && tIndex>
  [  5] getparam 2 .............................. <tMessage>
  [  7] joinpadstr .............................. <"* sendInviteToListIndex" && tIndex && tMessage>
  [  8] pusharglistnoret 1 ...................... <"* sendInviteToListIndex" && tIndex && tMessage>
  [ 10] extcall 174 ............................. put "* sendInviteToListIndex" && tIndex && tMessage
  [ 12] getparam 1 .............................. <tIndex>
  [ 14] pusharglist 0 ........................... <>
  [ 16] extcall 47 .............................. <VOID>
  [ 18] eq ...................................... <tIndex = VOID>
  [ 19] jmpifz [ 27] ............................ if tIndex = VOID then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 38 .............................. return 0
  [ 27] getprop 1240 ............................ <pUserList>
  [ 30] pusharglist 0 ........................... <>
  [ 32] extcall 47 .............................. <VOID>
  [ 34] eq ...................................... <pUserList = VOID>
  [ 35] jmpifz [ 43] ............................ if pUserList = VOID then
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 1 ...................... <0>
  [ 41] extcall 38 .............................. return 0
  [ 43] getprop 1240 ............................ <pUserList>
  [ 46] getobjprop 180 .......................... <pUserList.count>
  [ 48] getparam 1 .............................. <tIndex>
  [ 50] lt ...................................... <pUserList.count < tIndex>
  [ 51] jmpifz [ 59] ............................ if pUserList.count < tIndex then
  [ 54] pushzero ................................ <0>
  [ 55] pusharglistnoret 1 ...................... <0>
  [ 57] extcall 38 .............................. return 0
  [ 59] getprop 1240 ............................ <pUserList>
  [ 62] getparam 1 .............................. <tIndex>
  [ 64] pusharglist 2 ........................... <pUserList, tIndex>
  [ 66] objcall 181 ............................. <pUserList[tIndex]>
  [ 68] setlocal 0 .............................. tUserName = pUserList[tIndex]
  [ 70] getparam 0 .............................. <me>
  [ 72] pusharglist 1 ........................... <me>
  [ 74] objcall 100 ............................. <me.getHandler()>
  [ 76] getlocal 0 .............................. <tUserName>
  [ 78] getparam 2 .............................. <tMessage>
  [ 80] pusharglistnoret 3 ...................... <me.getHandler(), tUserName, tMessage>
  [ 82] objcall 130 ............................. me.getHandler().send_INVITE_USER(tUserName, tMessage)
  [ 84] getparam 0 .............................. <me>
  [ 86] getchainedprop 1241 ..................... <me.pExcludeList>
  [ 89] getlocal 0 .............................. <tUserName>
  [ 91] pusharglistnoret 2 ...................... <me.pExcludeList, tUserName>
  [ 93] objcall 224 ............................. me.pExcludeList.append(tUserName)
  [ 95] pushcons 1 .............................. <"* TODO: how to exclude people..">
  [ 97] pusharglistnoret 1 ...................... <"* TODO: how to exclude people..">
  [ 99] extcall 174 ............................. put "* TODO: how to exclude people.."
  [101] pushint8 1 .............................. <1>
  [103] pusharglistnoret 1 ...................... <1>
  [105] extcall 38 .............................. return 1
  [107] ret
end

on sendInviteToName me, tUserName, tMessage
  [  0] pushcons 2 .............................. <"* sendInviteToName">
  [  2] getparam 1 .............................. <tUserName>
  [  4] joinpadstr .............................. <"* sendInviteToName" && tUserName>
  [  5] getparam 2 .............................. <tMessage>
  [  7] joinpadstr .............................. <"* sendInviteToName" && tUserName && tMessage>
  [  8] pusharglistnoret 1 ...................... <"* sendInviteToName" && tUserName && tMessage>
  [ 10] extcall 174 ............................. put "* sendInviteToName" && tUserName && tMessage
  [ 12] getparam 1 .............................. <tUserName>
  [ 14] pushcons 3 .............................. <EMPTY>
  [ 16] eq ...................................... <tUserName = EMPTY>
  [ 17] jmpifz [ 25] ............................ if tUserName = EMPTY then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 38 .............................. return 0
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglist 1 ........................... <me>
  [ 29] objcall 100 ............................. <me.getHandler()>
  [ 31] getparam 1 .............................. <tUserName>
  [ 33] getparam 2 .............................. <tMessage>
  [ 35] pusharglistnoret 3 ...................... <me.getHandler(), tUserName, tMessage>
  [ 37] objcall 130 ............................. me.getHandler().send_INVITE_USER(tUserName, tMessage)
  [ 39] getparam 0 .............................. <me>
  [ 41] getchainedprop 1241 ..................... <me.pExcludeList>
  [ 44] getparam 1 .............................. <tUserName>
  [ 46] pusharglistnoret 2 ...................... <me.pExcludeList, tUserName>
  [ 48] objcall 224 ............................. me.pExcludeList.append(tUserName)
  [ 50] pushcons 1 .............................. <"* TODO: how to exclude people..">
  [ 52] pusharglistnoret 1 ...................... <"* TODO: how to exclude people..">
  [ 54] extcall 174 ............................. put "* TODO: how to exclude people.."
  [ 56] pushint8 1 .............................. <1>
  [ 58] pusharglistnoret 1 ...................... <1>
  [ 60] extcall 38 .............................. return 1
  [ 62] ret
end

on excludeListIndex me, tIndex
  [  0] pushcons 4 .............................. <"* TODO: excludeListIndex">
  [  2] getparam 1 .............................. <tIndex>
  [  4] joinpadstr .............................. <"* TODO: excludeListIndex" && tIndex>
  [  5] pusharglistnoret 1 ...................... <"* TODO: excludeListIndex" && tIndex>
  [  7] extcall 174 ............................. put "* TODO: excludeListIndex" && tIndex
  [  9] getparam 1 .............................. <tIndex>
  [ 11] pusharglist 0 ........................... <>
  [ 13] extcall 47 .............................. <VOID>
  [ 15] eq ...................................... <tIndex = VOID>
  [ 16] jmpifz [ 24] ............................ if tIndex = VOID then
  [ 19] pushzero ................................ <0>
  [ 20] pusharglistnoret 1 ...................... <0>
  [ 22] extcall 38 .............................. return 0
  [ 24] getprop 1240 ............................ <pUserList>
  [ 27] pusharglist 0 ........................... <>
  [ 29] extcall 47 .............................. <VOID>
  [ 31] eq ...................................... <pUserList = VOID>
  [ 32] jmpifz [ 40] ............................ if pUserList = VOID then
  [ 35] pushzero ................................ <0>
  [ 36] pusharglistnoret 1 ...................... <0>
  [ 38] extcall 38 .............................. return 0
  [ 40] getprop 1240 ............................ <pUserList>
  [ 43] getobjprop 180 .......................... <pUserList.count>
  [ 45] getparam 1 .............................. <tIndex>
  [ 47] lt ...................................... <pUserList.count < tIndex>
  [ 48] jmpifz [ 56] ............................ if pUserList.count < tIndex then
  [ 51] pushzero ................................ <0>
  [ 52] pusharglistnoret 1 ...................... <0>
  [ 54] extcall 38 .............................. return 0
  [ 56] getprop 1240 ............................ <pUserList>
  [ 59] getparam 1 .............................. <tIndex>
  [ 61] pusharglist 2 ........................... <pUserList, tIndex>
  [ 63] objcall 181 ............................. <pUserList[tIndex]>
  [ 65] setlocal 0 .............................. tUserName = pUserList[tIndex]
  [ 67] getparam 0 .............................. <me>
  [ 69] getchainedprop 1241 ..................... <me.pExcludeList>
  [ 72] getlocal 0 .............................. <tUserName>
  [ 74] pusharglistnoret 2 ...................... <me.pExcludeList, tUserName>
  [ 76] objcall 224 ............................. me.pExcludeList.append(tUserName)
  [ 78] pushcons 1 .............................. <"* TODO: how to exclude people..">
  [ 80] getlocal 0 .............................. <tUserName>
  [ 82] joinpadstr .............................. <"* TODO: how to exclude people.." && tUserName>
  [ 83] pusharglistnoret 1 ...................... <"* TODO: how to exclude people.." && tUserName>
  [ 85] extcall 174 ............................. put "* TODO: how to exclude people.." && tUserName
  [ 87] pushint8 1 .............................. <1>
  [ 89] pusharglistnoret 1 ...................... <1>
  [ 91] extcall 38 .............................. return 1
  [ 93] ret
end

on saveInviteTicketCount me, tNum
  [  0] getparam 1 .............................. <tNum>
  [  2] setprop 1243 ............................ pTicketsLeft = tNum
  [  5] pushint8 1 .............................. <1>
  [  7] pusharglistnoret 1 ...................... <1>
  [  9] extcall 38 .............................. return 1
  [ 11] ret
end

on getInviteTicketCount me
  [  0] getprop 1243 ............................ <pTicketsLeft>
  [  3] pusharglistnoret 1 ...................... <pTicketsLeft>
  [  5] extcall 38 .............................. return pTicketsLeft
  [  7] ret
end

on showInviteResponse me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 31 .............................. <me.getID()>
  [  6] pushcons 5 .............................. <"* showInviteResponse">
  [  8] joinpadstr .............................. <me.getID() && "* showInviteResponse">
  [  9] getparam 1 .............................. <tdata>
  [ 11] joinpadstr .............................. <me.getID() && "* showInviteResponse" && tdata>
  [ 12] pusharglistnoret 1 ...................... <me.getID() && "* showInviteResponse" && tdata>
  [ 14] extcall 174 ............................. put me.getID() && "* showInviteResponse" && tdata
  [ 16] pushint8 1 .............................. <1>
  [ 18] pusharglistnoret 1 ...................... <1>
  [ 20] extcall 38 .............................. return 1
  [ 22] ret
end

on saveInviteData me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 1245 ........................... <#list_type>
  [  5] pusharglist 2 ........................... <tdata, #list_type>
  [  7] objcall 256 ............................. <tdata.getaProp(#list_type)>
  [ 10] setprop 1242 ............................ pUserListFilter = tdata.getaProp(#list_type)
  [ 13] getparam 1 .............................. <tdata>
  [ 15] pushsymb 1246 ........................... <#invitee_list>
  [ 18] pusharglist 2 ........................... <tdata, #invitee_list>
  [ 20] objcall 256 ............................. <tdata.getaProp(#invitee_list)>
  [ 23] setprop 1240 ............................ pUserList = tdata.getaProp(#invitee_list)
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglistnoret 1 ...................... <1>
  [ 30] extcall 38 .............................. return 1
  [ 32] ret
end

on update me
  [  0] ret
end

on render me
  [  0] ret
end
