property pID, pMainThreadId, pWindowSetId, pWindowIdPrefix, pWindowID, pFlagManagerId, pWriterIdPlain, pWriterIdBold, pModalSpr

on construct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 544 ............................. <getUniqueID()>
  [  5] setprop 543 ............................. pWriterIdPlain = getUniqueID()
  [  8] pusharglist 0 ........................... <>
  [ 10] extcall 544 ............................. <getUniqueID()>
  [ 13] setprop 545 ............................. pWriterIdBold = getUniqueID()
  [ 16] pushcons 0 .............................. <"ig">
  [ 18] setprop 546 ............................. pWindowIdPrefix = "ig"
  [ 21] pushcons 1 .............................. <EMPTY>
  [ 23] setprop 399 ............................. pWindowID = EMPTY
  [ 26] getparam 0 .............................. <me>
  [ 28] getchainedprop 470 ...................... <me.ancestor>
  [ 31] pusharglist 1 ........................... <me.ancestor>
  [ 33] objcall 0 ............................... <me.ancestor.construct()>
  [ 35] pusharglistnoret 1 ...................... <me.ancestor.construct()>
  [ 37] extcall 38 .............................. return me.ancestor.construct()
  [ 39] ret
end

on deconstruct me
  [  0] getprop 547 ............................. <pID>
  [  3] pushsymb 509 ............................ <#modal>
  [  6] eq ...................................... <pID = #modal>
  [  7] jmpifz [ 21] ............................ if pID = #modal then
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 496 ............................. <me.removeModalWindow()>
  [ 17] pusharglistnoret 1 ...................... <me.removeModalWindow()>
  [ 19] extcall 38 .............................. return me.removeModalWindow()
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 1 ........................... <me>
  [ 25] objcall 485 ............................. <me.getWindowWrapper()>
  [ 28] setlocal 0 .............................. tWrapObjRef = me.getWindowWrapper()
  [ 30] getlocal 0 .............................. <tWrapObjRef>
  [ 32] pushzero ................................ <0>
  [ 33] eq ...................................... <tWrapObjRef = 0>
  [ 34] jmpifz [ 42] ............................ if tWrapObjRef = 0 then
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 38 .............................. return 0
  [ 42] getlocal 0 .............................. <tWrapObjRef>
  [ 44] getprop 501 ............................. <pWindowSetId>
  [ 47] pusharglistnoret 2 ...................... <tWrapObjRef, pWindowSetId>
  [ 49] objcall 542 ............................. tWrapObjRef.removeMatchingSets(pWindowSetId)
  [ 52] getprop 543 ............................. <pWriterIdPlain>
  [ 55] pusharglist 1 ........................... <pWriterIdPlain>
  [ 57] extcall 548 ............................. <writerExists(pWriterIdPlain)>
  [ 60] jmpifz [ 71] ............................ if writerExists(pWriterIdPlain) then
  [ 63] getprop 543 ............................. <pWriterIdPlain>
  [ 66] pusharglistnoret 1 ...................... <pWriterIdPlain>
  [ 68] extcall 549 ............................. removeWriter(pWriterIdPlain)
  [ 71] getprop 545 ............................. <pWriterIdBold>
  [ 74] pusharglist 1 ........................... <pWriterIdBold>
  [ 76] extcall 548 ............................. <writerExists(pWriterIdBold)>
  [ 79] jmpifz [ 90] ............................ if writerExists(pWriterIdBold) then
  [ 82] getprop 545 ............................. <pWriterIdBold>
  [ 85] pusharglistnoret 1 ...................... <pWriterIdBold>
  [ 87] extcall 549 ............................. removeWriter(pWriterIdBold)
  [ 90] getparam 0 .............................. <me>
  [ 92] getchainedprop 470 ...................... <me.ancestor>
  [ 95] pusharglist 1 ........................... <me.ancestor>
  [ 97] objcall 1 ............................... <me.ancestor.deconstruct()>
  [ 99] pusharglistnoret 1 ...................... <me.ancestor.deconstruct()>
  [101] extcall 38 .............................. return me.ancestor.deconstruct()
  [103] ret
end

on setID me, tID
  [  0] getparam 1 .............................. <tID>
  [  2] setprop 547 ............................. pID = tID
  [  5] ret
end

on addWindows me
  [  0] getprop 547 ............................. <pID>
  [  3] pushsymb 509 ............................ <#modal>
  [  6] eq ...................................... <pID = #modal>
  [  7] jmpifz [ 21] ............................ if pID = #modal then
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 495 ............................. <me.createModalWindow()>
  [ 17] pusharglistnoret 1 ...................... <me.createModalWindow()>
  [ 19] extcall 38 .............................. return me.createModalWindow()
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 38 .............................. return 1
  [ 27] ret
end

on render me
  [  0] ret
end

on update me
  [  0] ret
end

on getOwnPlayerName me
  [  0] pushsymb 267 ............................ <#session>
  [  3] pusharglist 1 ........................... <#session>
  [  5] extcall 85 .............................. <getObject(#session)>
  [  7] setlocal 0 .............................. tSession = getObject(#session)
  [  9] getlocal 0 .............................. <tSession>
  [ 11] pushzero ................................ <0>
  [ 12] eq ...................................... <tSession = 0>
  [ 13] jmpifz [ 21] ............................ if tSession = 0 then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 38 .............................. return 0
  [ 21] getlocal 0 .............................. <tSession>
  [ 23] pushsymb 356 ............................ <#user_name>
  [ 26] pusharglist 2 ........................... <tSession, #user_name>
  [ 28] objcall 62 .............................. <tSession.exists(#user_name)>
  [ 30] not ..................................... <not tSession.exists(#user_name)>
  [ 31] jmpifz [ 39] ............................ if not tSession.exists(#user_name) then
  [ 34] pushzero ................................ <0>
  [ 35] pusharglistnoret 1 ...................... <0>
  [ 37] extcall 38 .............................. return 0
  [ 39] getlocal 0 .............................. <tSession>
  [ 41] pushsymb 356 ............................ <#user_name>
  [ 44] pusharglist 2 ........................... <tSession, #user_name>
  [ 46] objcall 357 ............................. <tSession.GET(#user_name)>
  [ 49] pusharglistnoret 1 ...................... <tSession.GET(#user_name)>
  [ 51] extcall 38 .............................. return tSession.GET(#user_name)
  [ 53] ret
end

on getOwnPlayerGameIndex me
  [  0] pushsymb 267 ............................ <#session>
  [  3] pusharglist 1 ........................... <#session>
  [  5] extcall 85 .............................. <getObject(#session)>
  [  7] setlocal 0 .............................. tSession = getObject(#session)
  [  9] getlocal 0 .............................. <tSession>
  [ 11] pushzero ................................ <0>
  [ 12] eq ...................................... <tSession = 0>
  [ 13] jmpifz [ 21] ............................ if tSession = 0 then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 38 .............................. return 0
  [ 21] getlocal 0 .............................. <tSession>
  [ 23] pushcons 2 .............................. <"user_game_index">
  [ 25] pusharglist 2 ........................... <tSession, "user_game_index">
  [ 27] objcall 62 .............................. <tSession.exists("user_game_index")>
  [ 29] not ..................................... <not tSession.exists("user_game_index")>
  [ 30] jmpifz [ 40] ............................ if not tSession.exists("user_game_index") then
  [ 33] pushint8 1 .............................. <1>
  [ 35] inv ..................................... <-1>
  [ 36] pusharglistnoret 1 ...................... <-1>
  [ 38] extcall 38 .............................. return -1
  [ 40] getlocal 0 .............................. <tSession>
  [ 42] pushcons 2 .............................. <"user_game_index">
  [ 44] pusharglist 2 ........................... <tSession, "user_game_index">
  [ 46] objcall 357 ............................. <tSession.GET("user_game_index")>
  [ 49] setlocal 1 .............................. tIndex = tSession.GET("user_game_index")
  [ 51] getlocal 1 .............................. <tIndex>
  [ 53] pusharglistnoret 1 ...................... <tIndex>
  [ 55] extcall 38 .............................. return tIndex
  [ 57] ret
end

on getPlainWriter me
  [  0] getprop 543 ............................. <pWriterIdPlain>
  [  3] pusharglist 1 ........................... <pWriterIdPlain>
  [  5] extcall 548 ............................. <writerExists(pWriterIdPlain)>
  [  8] jmpifz [ 23] ............................ if writerExists(pWriterIdPlain) then
  [ 11] getprop 543 ............................. <pWriterIdPlain>
  [ 14] pusharglist 1 ........................... <pWriterIdPlain>
  [ 16] extcall 550 ............................. <getWriter(pWriterIdPlain)>
  [ 19] pusharglistnoret 1 ...................... <getWriter(pWriterIdPlain)>
  [ 21] extcall 38 .............................. return getWriter(pWriterIdPlain)
  [ 23] pushcons 3 .............................. <"struct.font.plain">
  [ 25] pusharglist 1 ........................... <"struct.font.plain">
  [ 27] extcall 551 ............................. <getStructVariable("struct.font.plain")>
  [ 30] setlocal 0 .............................. tPlainStruct = getStructVariable("struct.font.plain")
  [ 32] getprop 543 ............................. <pWriterIdPlain>
  [ 35] getlocal 0 .............................. <tPlainStruct>
  [ 37] pusharglistnoret 2 ...................... <pWriterIdPlain, tPlainStruct>
  [ 39] extcall 552 ............................. createWriter(pWriterIdPlain, tPlainStruct)
  [ 42] getprop 543 ............................. <pWriterIdPlain>
  [ 45] pusharglist 1 ........................... <pWriterIdPlain>
  [ 47] extcall 550 ............................. <getWriter(pWriterIdPlain)>
  [ 50] pusharglistnoret 1 ...................... <getWriter(pWriterIdPlain)>
  [ 52] extcall 38 .............................. return getWriter(pWriterIdPlain)
  [ 54] ret
end

on getBoldWriter me
  [  0] getprop 545 ............................. <pWriterIdBold>
  [  3] pusharglist 1 ........................... <pWriterIdBold>
  [  5] extcall 548 ............................. <writerExists(pWriterIdBold)>
  [  8] jmpifz [ 23] ............................ if writerExists(pWriterIdBold) then
  [ 11] getprop 545 ............................. <pWriterIdBold>
  [ 14] pusharglist 1 ........................... <pWriterIdBold>
  [ 16] extcall 550 ............................. <getWriter(pWriterIdBold)>
  [ 19] pusharglistnoret 1 ...................... <getWriter(pWriterIdBold)>
  [ 21] extcall 38 .............................. return getWriter(pWriterIdBold)
  [ 23] pushcons 4 .............................. <"struct.font.bold">
  [ 25] pusharglist 1 ........................... <"struct.font.bold">
  [ 27] extcall 551 ............................. <getStructVariable("struct.font.bold")>
  [ 30] setlocal 0 .............................. tBoldStruct = getStructVariable("struct.font.bold")
  [ 32] getlocal 0 .............................. <tBoldStruct>
  [ 34] pushsymb 554 ............................ <#fontStyle>
  [ 37] pushsymb 555 ............................ <#underline>
  [ 40] pusharglist 1 ........................... <[#underline]>
  [ 42] pushlist ................................ <[#underline]>
  [ 43] pusharglistnoret 3 ...................... <tBoldStruct, #fontStyle, [#underline]>
  [ 45] objcall 220 ............................. tBoldStruct.setaProp(#fontStyle, [#underline])
  [ 47] getprop 545 ............................. <pWriterIdBold>
  [ 50] getlocal 0 .............................. <tBoldStruct>
  [ 52] pusharglistnoret 2 ...................... <pWriterIdBold, tBoldStruct>
  [ 54] extcall 552 ............................. createWriter(pWriterIdBold, tBoldStruct)
  [ 57] getprop 545 ............................. <pWriterIdBold>
  [ 60] pusharglist 1 ........................... <pWriterIdBold>
  [ 62] extcall 550 ............................. <getWriter(pWriterIdBold)>
  [ 65] pusharglistnoret 1 ...................... <getWriter(pWriterIdBold)>
  [ 67] extcall 38 .............................. return getWriter(pWriterIdBold)
  [ 69] ret
end

on alignIconImage me, tImage, tWidth, tHeight
  [  0] getparam 1 .............................. <tImage>
  [  2] getobjprop 182 .......................... <tImage.ilk>
  [  4] pushsymb 557 ............................ <#image>
  [  7] nteq .................................... <tImage.ilk <> #image>
  [  8] jmpifz [ 16] ............................ if tImage.ilk <> #image then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 38 .............................. return 0
  [ 16] getparam 2 .............................. <tWidth>
  [ 18] getparam 3 .............................. <tHeight>
  [ 20] getparam 1 .............................. <tImage>
  [ 22] getobjprop 558 .......................... <tImage.depth>
  [ 25] pusharglist 3 ........................... <tWidth, tHeight, tImage.depth>
  [ 27] extcall 557 ............................. <image(tWidth, tHeight, tImage.depth)>
  [ 30] setlocal 0 .............................. tNewImage = image(tWidth, tHeight, tImage.depth)
  [ 32] getparam 2 .............................. <tWidth>
  [ 34] getparam 1 .............................. <tImage>
  [ 36] getobjprop 404 .......................... <tImage.width>
  [ 39] sub ..................................... <tWidth - tImage.width>
  [ 40] pushint8 2 .............................. <2>
  [ 42] div ..................................... <(tWidth - tImage.width) / 2>
  [ 43] setlocal 1 .............................. tOffsetX = (tWidth - tImage.width) / 2
  [ 45] getparam 3 .............................. <tHeight>
  [ 47] getparam 1 .............................. <tImage>
  [ 49] getobjprop 416 .......................... <tImage.height>
  [ 52] sub ..................................... <tHeight - tImage.height>
  [ 53] setlocal 2 .............................. tOffsetY = tHeight - tImage.height
  [ 55] getlocal 0 .............................. <tNewImage>
  [ 57] getparam 1 .............................. <tImage>
  [ 59] getparam 1 .............................. <tImage>
  [ 61] getobjprop 528 .......................... <tImage.rect>
  [ 64] getlocal 1 .............................. <tOffsetX>
  [ 66] getlocal 2 .............................. <tOffsetY>
  [ 68] getlocal 1 .............................. <tOffsetX>
  [ 70] getlocal 2 .............................. <tOffsetY>
  [ 72] pusharglist 4 ........................... <tOffsetX, tOffsetY, tOffsetX, tOffsetY>
  [ 74] extcall 528 ............................. <rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)>
  [ 77] add ..................................... <tImage.rect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY)>
  [ 78] getparam 1 .............................. <tImage>
  [ 80] getobjprop 528 .......................... <tImage.rect>
  [ 83] pusharglistnoret 4 ...................... <tNewImage, tImage, tImage.rect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY), tImage.rect>
  [ 85] objcall 559 ............................. tNewImage.copyPixels(tImage, tImage.rect + rect(tOffsetX, tOffsetY, tOffsetX, tOffsetY), tImage.rect)
  [ 88] getlocal 0 .............................. <tNewImage>
  [ 90] pusharglistnoret 1 ...................... <tNewImage>
  [ 92] extcall 38 .............................. return tNewImage
  [ 94] ret
end

on getHeadImage me, tFigure, tsex, tWidth, tHeight
  [  0] pushcons 5 .............................. <"Figure_Preview">
  [  2] pusharglist 1 ........................... <"Figure_Preview">
  [  4] extcall 85 .............................. <getObject("Figure_Preview")>
  [  6] setlocal 0 .............................. tFigureObj = getObject("Figure_Preview")
  [  8] getlocal 0 .............................. <tFigureObj>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tFigureObj = 0>
  [ 12] jmpifz [ 20] ............................ if tFigureObj = 0 then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 38 .............................. return 0
  [ 20] getparam 1 .............................. <tFigure>
  [ 22] getobjprop 182 .......................... <tFigure.ilk>
  [ 24] pushsymb 566 ............................ <#propList>
  [ 27] nteq .................................... <tFigure.ilk <> #propList>
  [ 28] jmpifz [ 64] ............................ if tFigure.ilk <> #propList then
  [ 31] pushcons 6 .............................. <"Figure_System">
  [ 33] pusharglist 1 ........................... <"Figure_System">
  [ 35] extcall 85 .............................. <getObject("Figure_System")>
  [ 37] setlocal 1 .............................. tParserObj = getObject("Figure_System")
  [ 39] getlocal 1 .............................. <tParserObj>
  [ 41] pushzero ................................ <0>
  [ 42] eq ...................................... <tParserObj = 0>
  [ 43] jmpifz [ 51] ............................ if tParserObj = 0 then
  [ 46] pushzero ................................ <0>
  [ 47] pusharglistnoret 1 ...................... <0>
  [ 49] extcall 38 .............................. return 0
  [ 51] getlocal 1 .............................. <tParserObj>
  [ 53] getparam 1 .............................. <tFigure>
  [ 55] getparam 2 .............................. <tsex>
  [ 57] pusharglist 3 ........................... <tParserObj, tFigure, tsex>
  [ 59] objcall 567 ............................. <tParserObj.parseFigure(tFigure, tsex)>
  [ 62] setparam 1 .............................. tFigure = tParserObj.parseFigure(tFigure, tsex)
  [ 64] getlocal 0 .............................. <tFigureObj>
  [ 66] pushsymb 568 ............................ <#head>
  [ 69] getparam 1 .............................. <tFigure>
  [ 71] pushint8 2 .............................. <2>
  [ 73] pushcons 7 .............................. <"sh">
  [ 75] pusharglist 5 ........................... <tFigureObj, #head, tFigure, 2, "sh">
  [ 77] objcall 569 ............................. <tFigureObj.getHumanPartImg(#head, tFigure, 2, "sh")>
  [ 80] setlocal 2 .............................. tImage = tFigureObj.getHumanPartImg(#head, tFigure, 2, "sh")
  [ 82] getparam 4 .............................. <tHeight>
  [ 84] pusharglist 1 ........................... <tHeight>
  [ 86] extcall 103 ............................. <voidp(tHeight)>
  [ 88] jmpifz [100] ............................ if voidp(tHeight) then / else
  [ 91] getlocal 2 .............................. <tImage>
  [ 93] pusharglistnoret 1 ...................... <tImage>
  [ 95] extcall 38 .............................. return tImage
  [ 97] jmp [117]
  [100] getparam 0 .............................. <me>
  [102] getlocal 2 .............................. <tImage>
  [104] getparam 3 .............................. <tWidth>
  [106] getparam 4 .............................. <tHeight>
  [108] pusharglist 4 ........................... <me, tImage, tWidth, tHeight>
  [110] objcall 539 ............................. <me.alignIconImage(tImage, tWidth, tHeight)>
  [113] pusharglistnoret 1 ...................... <me.alignIconImage(tImage, tWidth, tHeight)>
  [115] extcall 38 .............................. return me.alignIconImage(tImage, tWidth, tHeight)
  [117] ret
end

on getWindowWrapper me
  [  0] pushsymb 506 ............................ <#ig_window_wrapper>
  [  3] pusharglist 1 ........................... <#ig_window_wrapper>
  [  5] extcall 85 .............................. <getObject(#ig_window_wrapper)>
  [  7] pusharglistnoret 1 ...................... <getObject(#ig_window_wrapper)>
  [  9] extcall 38 .............................. return getObject(#ig_window_wrapper)
  [ 11] ret
end

on getMainThread me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 391 .......................... <me.pMainThreadId>
  [  5] pusharglist 1 ........................... <me.pMainThreadId>
  [  7] extcall 85 .............................. <getObject(me.pMainThreadId)>
  [  9] pusharglistnoret 1 ...................... <getObject(me.pMainThreadId)>
  [ 11] extcall 38 .............................. return getObject(me.pMainThreadId)
  [ 13] ret
end

on getIGComponent me, tID
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 419 ............................. <me.getMainThread()>
  [  7] setlocal 0 .............................. tMainThreadRef = me.getMainThread()
  [  9] getlocal 0 .............................. <tMainThreadRef>
  [ 11] pusharglist 1 ........................... <tMainThreadRef>
  [ 13] extcall 97 .............................. <objectp(tMainThreadRef)>
  [ 15] not ..................................... <not objectp(tMainThreadRef)>
  [ 16] jmpifz [ 24] ............................ if not objectp(tMainThreadRef) then
  [ 19] pushzero ................................ <0>
  [ 20] pusharglistnoret 1 ...................... <0>
  [ 22] extcall 38 .............................. return 0
  [ 24] getlocal 0 .............................. <tMainThreadRef>
  [ 26] getparam 1 .............................. <tID>
  [ 28] pusharglist 2 ........................... <tMainThreadRef, tID>
  [ 30] objcall 52 .............................. <tMainThreadRef.getIGComponent(tID)>
  [ 32] pusharglistnoret 1 ...................... <tMainThreadRef.getIGComponent(tID)>
  [ 34] extcall 38 .............................. return tMainThreadRef.getIGComponent(tID)
  [ 36] ret
end

on getWindowId me, tParam
  [  0] getparam 1 .............................. <tParam>
  [  2] pusharglist 1 ........................... <tParam>
  [  4] extcall 103 ............................. <voidp(tParam)>
  [  6] jmpifz [ 26] ............................ if voidp(tParam) then / else
  [  9] getprop 546 ............................. <pWindowIdPrefix>
  [ 12] pushcons 8 .............................. <"_">
  [ 14] joinstr ................................. <pWindowIdPrefix & "_">
  [ 15] getprop 399 ............................. <pWindowID>
  [ 18] joinstr ................................. <pWindowIdPrefix & "_" & pWindowID>
  [ 19] pusharglistnoret 1 ...................... <pWindowIdPrefix & "_" & pWindowID>
  [ 21] extcall 38 .............................. return pWindowIdPrefix & "_" & pWindowID
  [ 23] jmp [ 46]
  [ 26] getprop 546 ............................. <pWindowIdPrefix>
  [ 29] pushcons 8 .............................. <"_">
  [ 31] joinstr ................................. <pWindowIdPrefix & "_">
  [ 32] getprop 399 ............................. <pWindowID>
  [ 35] joinstr ................................. <pWindowIdPrefix & "_" & pWindowID>
  [ 36] pushcons 8 .............................. <"_">
  [ 38] joinstr ................................. <pWindowIdPrefix & "_" & pWindowID & "_">
  [ 39] getparam 1 .............................. <tParam>
  [ 41] joinstr ................................. <pWindowIdPrefix & "_" & pWindowID & "_" & tParam>
  [ 42] pusharglistnoret 1 ...................... <pWindowIdPrefix & "_" & pWindowID & "_" & tParam>
  [ 44] extcall 38 .............................. return pWindowIdPrefix & "_" & pWindowID & "_" & tParam
  [ 46] ret
end

on createModalWindow me
  [  0] getprop 523 ............................. <pModalSpr>
  [  3] pushzero ................................ <0>
  [  4] gt ...................................... <pModalSpr > 0>
  [  5] jmpifz [ 14] ............................ if pModalSpr > 0 then
  [  8] pushint8 1 .............................. <1>
  [ 10] pusharglistnoret 1 ...................... <1>
  [ 12] extcall 38 .............................. return 1
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 31 .............................. <me.getID()>
  [ 20] pusharglist 1 ........................... <me.getID()>
  [ 22] extcall 524 ............................. <reserveSprite(me.getID())>
  [ 25] setprop 523 ............................. pModalSpr = reserveSprite(me.getID())
  [ 28] getprop 523 ............................. <pModalSpr>
  [ 31] pusharglist 1 ........................... <pModalSpr>
  [ 33] extcall 402 ............................. <sprite(pModalSpr)>
  [ 36] setlocal 0 .............................. tsprite = sprite(pModalSpr)
  [ 38] getlocal 0 .............................. <tsprite>
  [ 40] pushcons 9 .............................. <"null">
  [ 42] pusharglist 1 ........................... <"null">
  [ 44] extcall 526 ............................. <getmemnum("null")>
  [ 47] pusharglist 1 ........................... <getmemnum("null")>
  [ 49] extcall 525 ............................. <member(getmemnum("null"))>
  [ 52] setobjprop 525 .......................... tsprite.member = member(getmemnum("null"))
  [ 55] getlocal 0 .............................. <tsprite>
  [ 57] pushint8 70 ............................. <70>
  [ 59] setobjprop 527 .......................... tsprite.blend = 70
  [ 62] getlocal 0 .............................. <tsprite>
  [ 64] pushzero ................................ <0>
  [ 65] pushzero ................................ <0>
  [ 66] getmovieprop 529 ........................ <the stage>
  [ 69] getchainedprop 528 ...................... <(the stage).rect>
  [ 72] getobjprop 404 .......................... <(the stage).rect.width>
  [ 75] getmovieprop 529 ........................ <the stage>
  [ 78] getchainedprop 528 ...................... <(the stage).rect>
  [ 81] getobjprop 416 .......................... <(the stage).rect.height>
  [ 84] pusharglist 4 ........................... <0, 0, (the stage).rect.width, (the stage).rect.height>
  [ 86] extcall 528 ............................. <rect(0, 0, (the stage).rect.width, (the stage).rect.height)>
  [ 89] setobjprop 528 .......................... tsprite.rect = rect(0, 0, (the stage).rect.width, (the stage).rect.height)
  [ 92] pushcons 10 ............................. <"Room_visualizer">
  [ 94] pusharglist 1 ........................... <"Room_visualizer">
  [ 96] extcall 530 ............................. <getVisualizer("Room_visualizer")>
  [ 99] setlocal 1 .............................. tVisualizer = getVisualizer("Room_visualizer")
  [101] getlocal 1 .............................. <tVisualizer>
  [103] pushzero ................................ <0>
  [104] nteq .................................... <tVisualizer <> 0>
  [105] jmpifz [131] ............................ if tVisualizer <> 0 then / else
  [108] getlocal 0 .............................. <tsprite>
  [110] getlocal 1 .............................. <tVisualizer>
  [112] pushsymb 531 ............................ <#locZ>
  [115] pusharglist 2 ........................... <tVisualizer, #locZ>
  [117] objcall 63 .............................. <tVisualizer.getProperty(#locZ)>
  [119] pushint32 10000000 ...................... <10000000>
  [124] add ..................................... <tVisualizer.getProperty(#locZ) + 10000000>
  [125] setobjprop 531 .......................... tsprite.locZ = tVisualizer.getProperty(#locZ) + 10000000
  [128] jmp [142]
  [131] getlocal 0 .............................. <tsprite>
  [133] pushint32 10000000 ...................... <10000000>
  [138] inv ..................................... <-10000000>
  [139] setobjprop 531 .......................... tsprite.locZ = -10000000
  [142] getlocal 0 .............................. <tsprite>
  [144] getobjprop 533 .......................... <tsprite.spriteNum>
  [147] getparam 0 .............................. <me>
  [149] pusharglist 1 ........................... <me>
  [151] objcall 31 .............................. <me.getID()>
  [153] pushcons 11 ............................. <"_spr">
  [155] joinstr ................................. <me.getID() & "_spr">
  [156] pusharglistnoret 2 ...................... <tsprite.spriteNum, me.getID() & "_spr">
  [158] extcall 532 ............................. setEventBroker(tsprite.spriteNum, me.getID() & "_spr")
  [161] pushint8 1 .............................. <1>
  [163] pusharglistnoret 1 ...................... <1>
  [165] extcall 38 .............................. return 1
  [167] ret
end

on removeModalWindow me
  [  0] getprop 523 ............................. <pModalSpr>
  [  3] pushzero ................................ <0>
  [  4] gt ...................................... <pModalSpr > 0>
  [  5] jmpifz [ 23] ............................ if pModalSpr > 0 then
  [  8] getprop 523 ............................. <pModalSpr>
  [ 11] pusharglistnoret 1 ...................... <pModalSpr>
  [ 13] extcall 535 ............................. releaseSprite(pModalSpr)
  [ 16] pusharglist 0 ........................... <>
  [ 18] extcall 47 .............................. <VOID>
  [ 20] setprop 523 ............................. pModalSpr = VOID
  [ 23] pushint8 1 .............................. <1>
  [ 25] pusharglistnoret 1 ...................... <1>
  [ 27] extcall 38 .............................. return 1
  [ 29] ret
end

on removeMatchingSets me, tWindowSetId, tRender
  [  0] getparam 1 .............................. <tWindowSetId>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 47 .............................. <VOID>
  [  6] eq ...................................... <tWindowSetId = VOID>
  [  7] jmpifz [ 15] ............................ if tWindowSetId = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 38 .............................. return 0
  [ 15] getparam 1 .............................. <tWindowSetId>
  [ 17] getobjprop 118 .......................... <tWindowSetId.length>
  [ 19] setlocal 0 .............................. tIdLength = tWindowSetId.length
  [ 21] pushint8 1 .............................. <1>
  [ 23] setlocal 1 .............................. i = 1
  [ 25] getlocal 1 .............................. <i>
  [ 27] getparam 0 .............................. <me>
  [ 29] pushsymb 574 ............................ <#pSetIndex>
  [ 32] pusharglist 2 ........................... <me, #pSetIndex>
  [ 34] objcall 180 ............................. <me.pSetIndex.count>
  [ 36] lteq .................................... <i <= me.pSetIndex.count>
  [ 37] jmpifz [ 94] ............................ repeat while i <= me.pSetIndex.count
  [ 40] getparam 0 .............................. <me>
  [ 42] pushsymb 574 ............................ <#pSetIndex>
  [ 45] getlocal 1 .............................. <i>
  [ 47] pusharglist 3 ........................... <me, #pSetIndex, i>
  [ 49] objcall 116 ............................. <me.pSetIndex[i]>
  [ 51] setlocal 2 .............................. tTestString = me.pSetIndex[i]
  [ 53] getlocal 2 .............................. <tTestString>
  [ 55] pushsymb 115 ............................ <#char>
  [ 57] pushint8 1 .............................. <1>
  [ 59] getlocal 0 .............................. <tIdLength>
  [ 61] pusharglist 4 ........................... <tTestString, #char, 1, tIdLength>
  [ 63] objcall 116 ............................. <tTestString.char[1..tIdLength]>
  [ 65] getparam 1 .............................. <tWindowSetId>
  [ 67] eq ...................................... <tTestString.char[1..tIdLength] = tWindowSetId>
  [ 68] jmpifz [ 85] ............................ if tTestString.char[1..tIdLength] = tWindowSetId then
  [ 71] getparam 0 .............................. <me>
  [ 73] getlocal 2 .............................. <tTestString>
  [ 75] getparam 2 .............................. <tRender>
  [ 77] pusharglistnoret 3 ...................... <me, tTestString, tRender>
  [ 79] objcall 575 ............................. me.removeSet(tTestString, tRender)
  [ 82] jmp [ 92] ............................... next repeat
  [ 85] getlocal 1 .............................. <i>
  [ 87] pushint8 1 .............................. <1>
  [ 89] add ..................................... <i + 1>
  [ 90] setlocal 1 .............................. i = i + 1
  [ 92] endrepeat [ 25]
  [ 94] pushint8 1 .............................. <1>
  [ 96] pusharglistnoret 1 ...................... <1>
  [ 98] extcall 38 .............................. return 1
  [100] ret
end

on eventProcMouseDown me, tEvent, tSprID, tParam, tWndID
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 38 .............................. return 1
  [  6] ret
end
