property pGameTypeObjectList

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 716 ............................. pGameTypeObjectList = [:]
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 38 .............................. return 1
  [ 12] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 716 ............................. pGameTypeObjectList = [:]
  [  6] getparam 0 .............................. <me>
  [  8] getchainedprop 470 ...................... <me.ancestor>
  [ 11] pusharglist 1 ........................... <me.ancestor>
  [ 13] objcall 1 ............................... <me.ancestor.deconstruct()>
  [ 15] pusharglistnoret 1 ...................... <me.ancestor.deconstruct()>
  [ 17] extcall 38 .............................. return me.ancestor.deconstruct()
  [ 19] ret
end

on getGameTypeCount me
  [  0] pushint8 3 .............................. <3>
  [  2] pusharglistnoret 1 ...................... <3>
  [  4] extcall 38 .............................. return 3
  [  6] ret
end

on convertGamePropsForCreate me, tGameType, tParams
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tGameType>
  [  4] pushsymb 717 ............................ <#get_create_defaults>
  [  7] pusharglist 3 ........................... <me, tGameType, #get_create_defaults>
  [  9] objcall 1268 ............................ <me.getAction(tGameType, #get_create_defaults)>
  [ 12] setlocal 0 .............................. tFormat = me.getAction(tGameType, #get_create_defaults)
  [ 14] getlocal 0 .............................. <tFormat>
  [ 16] pusharglist 1 ........................... <tFormat>
  [ 18] extcall 377 ............................. <listp(tFormat)>
  [ 21] not ..................................... <not listp(tFormat)>
  [ 22] jmpifz [ 30] ............................ if not listp(tFormat) then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 38 .............................. return 0
  [ 30] getparam 2 .............................. <tParams>
  [ 32] pusharglist 1 ........................... <tParams>
  [ 34] extcall 377 ............................. <listp(tParams)>
  [ 37] not ..................................... <not listp(tParams)>
  [ 38] jmpifz [ 46] ............................ if not listp(tParams) then
  [ 41] pushzero ................................ <0>
  [ 42] pusharglistnoret 1 ...................... <0>
  [ 44] extcall 38 .............................. return 0
  [ 46] pusharglist 0 ........................... <[]>
  [ 48] pushlist ................................ <[]>
  [ 49] setlocal 1 .............................. tOutputList = []
  [ 51] pushint8 1 .............................. <1>
  [ 53] setlocal 2
  [ 55] getlocal 2
  [ 57] getlocal 0 .............................. <tFormat>
  [ 59] getobjprop 180 .......................... <tFormat.count>
  [ 61] lteq
  [ 62] jmpifz [409] ............................ repeat with i = 1 to tFormat.count
  [ 65] getlocal 0 .............................. <tFormat>
  [ 67] getlocal 2 .............................. <i>
  [ 69] pusharglist 2 ........................... <tFormat, i>
  [ 71] objcall 181 ............................. <tFormat[i]>
  [ 73] setlocal 3 .............................. tFormatItem = tFormat[i]
  [ 75] getlocal 0 .............................. <tFormat>
  [ 77] getlocal 2 .............................. <i>
  [ 79] pusharglist 2 ........................... <tFormat, i>
  [ 81] objcall 380 ............................. <tFormat.getPropAt(i)>
  [ 84] setlocal 4 .............................. tFormatKey = tFormat.getPropAt(i)
  [ 86] getlocal 3 .............................. <tFormatItem>
  [ 88] pushsymb 182 ............................ <#ilk>
  [ 90] pusharglist 2 ........................... <tFormatItem, #ilk>
  [ 92] objcall 256 ............................. <tFormatItem.getaProp(#ilk)>
  [ 95] setlocal 5 .............................. tFormatIlk = tFormatItem.getaProp(#ilk)
  [ 97] getparam 2 .............................. <tParams>
  [ 99] getlocal 4 .............................. <tFormatKey>
  [101] pusharglist 2 ........................... <tParams, tFormatKey>
  [103] objcall 255 ............................. <tParams.findPos(tFormatKey)>
  [105] pushzero ................................ <0>
  [106] eq ...................................... <tParams.findPos(tFormatKey) = 0>
  [107] jmpifz [131] ............................ if tParams.findPos(tFormatKey) = 0 then / else
  [110] getparam 0 .............................. <me>
  [112] getlocal 4 .............................. <tFormatKey>
  [114] pushcons 0 .............................. <"not defined!">
  [116] joinpadstr .............................. <tFormatKey && "not defined!">
  [117] pushsymb 713 ............................ <#convertGamePropsForCreate>
  [120] pusharglist 3 ........................... <me, tFormatKey && "not defined!", #convertGamePropsForCreate>
  [122] extcall 210 ............................. <error(me, tFormatKey && "not defined!", #convertGamePropsForCreate)>
  [124] pusharglistnoret 1 ...................... <error(me, tFormatKey && "not defined!", #convertGamePropsForCreate)>
  [126] extcall 38 .............................. return error(me, tFormatKey && "not defined!", #convertGamePropsForCreate)
  [128] jmp [142]
  [131] getparam 2 .............................. <tParams>
  [133] getlocal 4 .............................. <tFormatKey>
  [135] pusharglist 2 ........................... <tParams, tFormatKey>
  [137] objcall 256 ............................. <tParams.getaProp(tFormatKey)>
  [140] setlocal 6 .............................. tParamValue = tParams.getaProp(tFormatKey)
  [142] getlocal 6 .............................. <tParamValue>
  [144] pusharglist 1 ........................... <tParamValue>
  [146] extcall 182 ............................. <ilk(tParamValue)>
  [148] getlocal 5 .............................. <tFormatIlk>
  [150] nteq .................................... <ilk(tParamValue) <> tFormatIlk>
  [151] jmpifz [182] ............................ if ilk(tParamValue) <> tFormatIlk then
  [154] getparam 0 .............................. <me>
  [156] getlocal 4 .............................. <tFormatKey>
  [158] pushcons 1 .............................. <"type mismatch.">
  [160] joinpadstr .............................. <tFormatKey && "type mismatch.">
  [161] getlocal 6 .............................. <tParamValue>
  [163] pusharglist 1 ........................... <tParamValue>
  [165] extcall 182 ............................. <ilk(tParamValue)>
  [167] joinpadstr .............................. <tFormatKey && "type mismatch." && ilk(tParamValue)>
  [168] getlocal 5 .............................. <tFormatIlk>
  [170] joinpadstr .............................. <tFormatKey && "type mismatch." && ilk(tParamValue) && tFormatIlk>
  [171] pushsymb 713 ............................ <#convertGamePropsForCreate>
  [174] pusharglist 3 ........................... <me, tFormatKey && "type mismatch." && ilk(tParamValue) && tFormatIlk, #convertGamePropsForCreate>
  [176] extcall 210 ............................. <error(me, tFormatKey && "type mismatch." && ilk(tParamValue) && tFormatIlk, #convertGamePropsForCreate)>
  [178] pusharglistnoret 1 ...................... <error(me, tFormatKey && "type mismatch." && ilk(tParamValue) && tFormatIlk, #convertGamePropsForCreate)>
  [180] extcall 38 .............................. return error(me, tFormatKey && "type mismatch." && ilk(tParamValue) && tFormatIlk, #convertGamePropsForCreate)
  [182] getlocal 5 .............................. <tFormatIlk>
  [184] peek 0 .................................. case tFormatIlk of
  [186] pushsymb 114 ............................ <#integer>
  [188] eq
  [189] jmpifz [273] ............................ (case) #integer:
  [192] getlocal 3 .............................. <tFormatItem>
  [194] pushsymb 718 ............................ <#max>
  [197] pusharglist 2 ........................... <tFormatItem, #max>
  [199] objcall 256 ............................. <tFormatItem.getaProp(#max)>
  [202] setlocal 7 .............................. tMax = tFormatItem.getaProp(#max)
  [204] getlocal 7 .............................. <tMax>
  [206] pusharglist 1 ........................... <tMax>
  [208] extcall 103 ............................. <voidp(tMax)>
  [210] not ..................................... <not voidp(tMax)>
  [211] getlocal 6 .............................. <tParamValue>
  [213] getlocal 7 .............................. <tMax>
  [215] gt ...................................... <tParamValue > tMax>
  [216] and ..................................... <not voidp(tMax) and (tParamValue > tMax)>
  [217] jmpifz [227] ............................ if not voidp(tMax) and (tParamValue > tMax) then
  [220] pop 1
  [222] pushzero ................................ <0>
  [223] pusharglistnoret 1 ...................... <0>
  [225] extcall 38 .............................. return 0
  [227] getlocal 3 .............................. <tFormatItem>
  [229] pushsymb 719 ............................ <#min>
  [232] pusharglist 2 ........................... <tFormatItem, #min>
  [234] objcall 256 ............................. <tFormatItem.getaProp(#min)>
  [237] setlocal 8 .............................. tMin = tFormatItem.getaProp(#min)
  [239] getlocal 8 .............................. <tMin>
  [241] pusharglist 1 ........................... <tMin>
  [243] extcall 103 ............................. <voidp(tMin)>
  [245] not ..................................... <not voidp(tMin)>
  [246] getlocal 6 .............................. <tParamValue>
  [248] getlocal 8 .............................. <tMin>
  [250] lt ...................................... <tParamValue < tMin>
  [251] and ..................................... <not voidp(tMin) and (tParamValue < tMin)>
  [252] jmpifz [262] ............................ if not voidp(tMin) and (tParamValue < tMin) then
  [255] pop 1
  [257] pushzero ................................ <0>
  [258] pusharglistnoret 1 ...................... <0>
  [260] extcall 38 .............................. return 0
  [262] getlocal 1 .............................. <tOutputList>
  [264] getlocal 6 .............................. <tParamValue>
  [266] pusharglistnoret 2 ...................... <tOutputList, tParamValue>
  [268] objcall 224 ............................. tOutputList.append(tParamValue)
  [270] jmp [397]
  [273] peek 0
  [275] pushsymb 179 ............................ <#string>
  [277] eq
  [278] jmpifz [307] ............................ (case) #string:
  [281] getlocal 6 .............................. <tParamValue>
  [283] pushcons 2 .............................. <EMPTY>
  [285] eq ...................................... <tParamValue = EMPTY>
  [286] jmpifz [296] ............................ if tParamValue = EMPTY then
  [289] pop 1
  [291] pushzero ................................ <0>
  [292] pusharglistnoret 1 ...................... <0>
  [294] extcall 38 .............................. return 0
  [296] getlocal 1 .............................. <tOutputList>
  [298] getlocal 6 .............................. <tParamValue>
  [300] pusharglistnoret 2 ...................... <tOutputList, tParamValue>
  [302] objcall 224 ............................. tOutputList.append(tParamValue)
  [304] jmp [397]
  [307] peek 0
  [309] pushsymb 326 ............................ <#list>
  [312] eq
  [313] jmpifz [383] ............................ (case) #list:
  [316] getlocal 6 .............................. <tParamValue>
  [318] pushcons 2 .............................. <EMPTY>
  [320] eq ...................................... <tParamValue = EMPTY>
  [321] jmpifz [331] ............................ if tParamValue = EMPTY then
  [324] pop 1
  [326] pushzero ................................ <0>
  [327] pusharglistnoret 1 ...................... <0>
  [329] extcall 38 .............................. return 0
  [331] getlocal 6 .............................. <tParamValue>
  [333] getobjprop 180 .......................... <tParamValue.count>
  [335] setlocal 9 .............................. tCount = tParamValue.count
  [337] getlocal 1 .............................. <tOutputList>
  [339] getlocal 9 .............................. <tCount>
  [341] pusharglistnoret 2 ...................... <tOutputList, tCount>
  [343] objcall 224 ............................. tOutputList.append(tCount)
  [345] pushint8 1 .............................. <1>
  [347] setlocal 10
  [349] getlocal 10
  [351] getlocal 9 .............................. <tCount>
  [353] lteq
  [354] jmpifz [380] ............................ repeat with j = 1 to tCount
  [357] getlocal 1 .............................. <tOutputList>
  [359] getlocal 6 .............................. <tParamValue>
  [361] getlocal 10 ............................. <j>
  [363] pusharglist 2 ........................... <tParamValue, j>
  [365] objcall 181 ............................. <tParamValue[j]>
  [367] pusharglistnoret 2 ...................... <tOutputList, tParamValue[j]>
  [369] objcall 224 ............................. tOutputList.append(tParamValue[j])
  [371] pushint8 1
  [373] getlocal 10
  [375] add
  [376] setlocal 10
  [378] endrepeat [349]
  [380] jmp [397]
  [383] peek 0
  [385] pushsymb 720 ............................ <#not_for_server>
  [388] eq
  [389] jmpifz [397] ............................ (case) #not_for_server:
  [392] pusharglistnoret 0 ...................... <>
  [394] extcall 381 ............................. nothing()
  [397] pop 1 ................................... end case
  [399] pushint8 1
  [401] getlocal 2
  [403] add
  [404] setlocal 2
  [406] endrepeat [ 55]
  [409] getlocal 1 .............................. <tOutputList>
  [411] pusharglistnoret 1 ...................... <tOutputList>
  [413] extcall 38 .............................. return tOutputList
  [415] ret
end

on getAction me, tGameType, tKey, tParam1, tParam2
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tGameType>
  [  4] pusharglist 2 ........................... <me, tGameType>
  [  6] objcall 715 ............................. <me.getGameTypeInformation(tGameType)>
  [  9] setlocal 0 .............................. tTypeObject = me.getGameTypeInformation(tGameType)
  [ 11] getlocal 0 .............................. <tTypeObject>
  [ 13] pushzero ................................ <0>
  [ 14] eq ...................................... <tTypeObject = 0>
  [ 15] jmpifz [ 23] ............................ if tTypeObject = 0 then
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 1 ...................... <0>
  [ 21] extcall 38 .............................. return 0
  [ 23] getlocal 0 .............................. <tTypeObject>
  [ 25] getparam 2 .............................. <tKey>
  [ 27] getparam 3 .............................. <tParam1>
  [ 29] getparam 4 .............................. <tParam2>
  [ 31] pusharglist 4 ........................... <tTypeObject, tKey, tParam1, tParam2>
  [ 33] objcall 1268 ............................ <tTypeObject.getAction(tKey, tParam1, tParam2)>
  [ 36] pusharglistnoret 1 ...................... <tTypeObject.getAction(tKey, tParam1, tParam2)>
  [ 38] extcall 38 .............................. return tTypeObject.getAction(tKey, tParam1, tParam2)
  [ 40] ret
end

on getGameTypeString me, tGameType
  [  0] getparam 1 .............................. <tGameType>
  [  2] peek 0 .................................. case tGameType of
  [  4] pushzero ................................ <0>
  [  5] eq
  [  6] jmpifz [ 20] ............................ (case) 0:
  [  9] pop 1
  [ 11] pushcons 3 .............................. <"Snowwar">
  [ 13] pusharglistnoret 1 ...................... <"Snowwar">
  [ 15] extcall 38 .............................. return "Snowwar"
  [ 17] jmp [ 55]
  [ 20] peek 0
  [ 22] pushint8 1 .............................. <1>
  [ 24] eq
  [ 25] jmpifz [ 39] ............................ (case) 1:
  [ 28] pop 1
  [ 30] pushcons 4 .............................. <"BB">
  [ 32] pusharglistnoret 1 ...................... <"BB">
  [ 34] extcall 38 .............................. return "BB"
  [ 36] jmp [ 55]
  [ 39] peek 0
  [ 41] pushint8 2 .............................. <2>
  [ 43] eq
  [ 44] jmpifz [ 55] ............................ (case) 2:
  [ 47] pop 1
  [ 49] pushcons 5 .............................. <"GemHunt">
  [ 51] pusharglistnoret 1 ...................... <"GemHunt">
  [ 53] extcall 38 .............................. return "GemHunt"
  [ 55] pop 1 ................................... end case
  [ 57] pushzero ................................ <0>
  [ 58] pusharglistnoret 1 ...................... <0>
  [ 60] extcall 38 .............................. return 0
  [ 62] ret
end

on getGameTypeInformation me, tGameType
  [  0] getparam 1 .............................. <tGameType>
  [  2] pusharglist 1 ........................... <tGameType>
  [  4] extcall 103 ............................. <voidp(tGameType)>
  [  6] jmpifz [ 14] ............................ if voidp(tGameType) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 38 .............................. return 0
  [ 14] getprop 716 ............................. <pGameTypeObjectList>
  [ 17] getparam 1 .............................. <tGameType>
  [ 19] pusharglist 2 ........................... <pGameTypeObjectList, tGameType>
  [ 21] objcall 256 ............................. <pGameTypeObjectList.getaProp(tGameType)>
  [ 24] setlocal 0 .............................. tTypeObject = pGameTypeObjectList.getaProp(tGameType)
  [ 26] getlocal 0 .............................. <tTypeObject>
  [ 28] pusharglist 1 ........................... <tTypeObject>
  [ 30] extcall 97 .............................. <objectp(tTypeObject)>
  [ 32] jmpifz [ 41] ............................ if objectp(tTypeObject) then
  [ 35] getlocal 0 .............................. <tTypeObject>
  [ 37] pusharglistnoret 1 ...................... <tTypeObject>
  [ 39] extcall 38 .............................. return tTypeObject
  [ 41] pushcons 6 .............................. <"IG">
  [ 43] getparam 0 .............................. <me>
  [ 45] getparam 1 .............................. <tGameType>
  [ 47] pusharglist 2 ........................... <me, tGameType>
  [ 49] objcall 714 ............................. <me.getGameTypeString(tGameType)>
  [ 52] joinpadstr .............................. <"IG" && me.getGameTypeString(tGameType)>
  [ 53] pushcons 7 .............................. <"GameType Class">
  [ 55] joinpadstr .............................. <"IG" && me.getGameTypeString(tGameType) && "GameType Class">
  [ 56] setlocal 1 .............................. tClass = "IG" && me.getGameTypeString(tGameType) && "GameType Class"
  [ 58] pushsymb 99 ............................. <#temp>
  [ 60] getlocal 1 .............................. <tClass>
  [ 62] pusharglist 2 ........................... <#temp, tClass>
  [ 64] extcall 89 .............................. <createObject(#temp, tClass)>
  [ 66] setlocal 0 .............................. tTypeObject = createObject(#temp, tClass)
  [ 68] getlocal 0 .............................. <tTypeObject>
  [ 70] pusharglist 1 ........................... <tTypeObject>
  [ 72] extcall 97 .............................. <objectp(tTypeObject)>
  [ 74] not ..................................... <not objectp(tTypeObject)>
  [ 75] jmpifz [ 96] ............................ if not objectp(tTypeObject) then
  [ 78] getparam 0 .............................. <me>
  [ 80] pushcons 8 .............................. <"Game type information class unavailable for game type:">
  [ 82] getparam 1 .............................. <tGameType>
  [ 84] joinpadstr .............................. <"Game type information class unavailable for game type:" && tGameType>
  [ 85] pushsymb 715 ............................ <#getGameTypeInformation>
  [ 88] pusharglist 3 ........................... <me, "Game type information class unavailable for game type:" && tGameType, #getGameTypeInformation>
  [ 90] extcall 210 ............................. <error(me, "Game type information class unavailable for game type:" && tGameType, #getGameTypeInformation)>
  [ 92] pusharglistnoret 1 ...................... <error(me, "Game type information class unavailable for game type:" && tGameType, #getGameTypeInformation)>
  [ 94] extcall 38 .............................. return error(me, "Game type information class unavailable for game type:" && tGameType, #getGameTypeInformation)
  [ 96] getprop 716 ............................. <pGameTypeObjectList>
  [ 99] getparam 1 .............................. <tGameType>
  [101] getlocal 0 .............................. <tTypeObject>
  [103] pusharglistnoret 3 ...................... <pGameTypeObjectList, tGameType, tTypeObject>
  [105] objcall 220 ............................. pGameTypeObjectList.setaProp(tGameType, tTypeObject)
  [107] getlocal 0 .............................. <tTypeObject>
  [109] pusharglistnoret 1 ...................... <tTypeObject>
  [111] extcall 38 .............................. return tTypeObject
  [113] ret
end
