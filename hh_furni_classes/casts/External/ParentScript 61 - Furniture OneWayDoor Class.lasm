on select me
  [  0] pushsymb 119 ............................ <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 118 ............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 12] objcall 528 ............................. <getThread(#room).getComponent().getOwnUser()>
  [ 15] setlocal 0 .............................. tUserObj = getThread(#room).getComponent().getOwnUser()
  [ 17] getlocal 0 .............................. <tUserObj>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <tUserObj = 0>
  [ 21] jmpifz [ 29] ............................ if tUserObj = 0 then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 14 .............................. return 0
  [ 29] getlocal 0 .............................. <tUserObj>
  [ 31] getobjprop 112 .......................... <tUserObj.pLocX>
  [ 33] getlocal 0 .............................. <tUserObj>
  [ 35] getobjprop 113 .......................... <tUserObj.pLocY>
  [ 37] pusharglist 2 ........................... <[tUserObj.pLocX, tUserObj.pLocY]>
  [ 39] pushlist ................................ <[tUserObj.pLocX, tUserObj.pLocY]>
  [ 40] setlocal 1 .............................. tLocUser = [tUserObj.pLocX, tUserObj.pLocY]
  [ 42] getparam 0 .............................. <me>
  [ 44] getobjprop 112 .......................... <me.pLocX>
  [ 46] getparam 0 .............................. <me>
  [ 48] getobjprop 113 .......................... <me.pLocY>
  [ 50] pusharglist 2 ........................... <[me.pLocX, me.pLocY]>
  [ 52] pushlist ................................ <[me.pLocX, me.pLocY]>
  [ 53] setlocal 2 .............................. tLocDoor = [me.pLocX, me.pLocY]
  [ 55] getparam 0 .............................. <me>
  [ 57] pushsymb 106 ............................ <#pDirection>
  [ 59] pushint8 1 .............................. <1>
  [ 61] pusharglist 3 ........................... <me, #pDirection, 1>
  [ 63] objcall 25 .............................. <me.pDirection[1]>
  [ 65] peek 0 .................................. case me.pDirection[1] of
  [ 67] pushzero ................................ <0>
  [ 68] eq
  [ 69] jmpifz [ 87] ............................ (case) 0:
  [ 72] getlocal 2 .............................. <tLocDoor>
  [ 74] pushzero ................................ <0>
  [ 75] pushint8 1 .............................. <1>
  [ 77] inv ..................................... <-1>
  [ 78] pusharglist 2 ........................... <[0, -1]>
  [ 80] pushlist ................................ <[0, -1]>
  [ 81] add ..................................... <tLocDoor + [0, -1]>
  [ 82] setlocal 3 .............................. tLocWanted = tLocDoor + [0, -1]
  [ 84] jmp [161]
  [ 87] peek 0
  [ 89] pushint8 2 .............................. <2>
  [ 91] eq
  [ 92] jmpifz [109] ............................ (case) 2:
  [ 95] getlocal 2 .............................. <tLocDoor>
  [ 97] pushint8 1 .............................. <1>
  [ 99] pushzero ................................ <0>
  [100] pusharglist 2 ........................... <[1, 0]>
  [102] pushlist ................................ <[1, 0]>
  [103] add ..................................... <tLocDoor + [1, 0]>
  [104] setlocal 3 .............................. tLocWanted = tLocDoor + [1, 0]
  [106] jmp [161]
  [109] peek 0
  [111] pushint8 4 .............................. <4>
  [113] eq
  [114] jmpifz [131] ............................ (case) 4:
  [117] getlocal 2 .............................. <tLocDoor>
  [119] pushzero ................................ <0>
  [120] pushint8 1 .............................. <1>
  [122] pusharglist 2 ........................... <[0, 1]>
  [124] pushlist ................................ <[0, 1]>
  [125] add ..................................... <tLocDoor + [0, 1]>
  [126] setlocal 3 .............................. tLocWanted = tLocDoor + [0, 1]
  [128] jmp [161]
  [131] peek 0
  [133] pushint8 6 .............................. <6>
  [135] eq
  [136] jmpifz [154] ............................ (case) 6:
  [139] getlocal 2 .............................. <tLocDoor>
  [141] pushint8 1 .............................. <1>
  [143] inv ..................................... <-1>
  [144] pushzero ................................ <0>
  [145] pusharglist 2 ........................... <[-1, 0]>
  [147] pushlist ................................ <[-1, 0]>
  [148] add ..................................... <tLocDoor + [-1, 0]>
  [149] setlocal 3 .............................. tLocWanted = tLocDoor + [-1, 0]
  [151] jmp [161] ............................... (case) otherwise:
  [154] pop 1
  [156] pushzero ................................ <0>
  [157] pusharglistnoret 1 ...................... <0>
  [159] extcall 14 .............................. return 0
  [161] pop 1 ................................... end case
  [163] pushcons 0 .............................. <"connection.info.id">
  [165] pushsymb 740 ............................ <#Info>
  [168] pusharglist 2 ........................... <"connection.info.id", #Info>
  [170] extcall 739 ............................. <getVariable("connection.info.id", #Info)>
  [173] pusharglist 1 ........................... <getVariable("connection.info.id", #Info)>
  [175] extcall 738 ............................. <getConnection(getVariable("connection.info.id", #Info))>
  [178] setlocal 4 .............................. tConnection = getConnection(getVariable("connection.info.id", #Info))
  [180] getlocal 4 .............................. <tConnection>
  [182] pusharglist 1 ........................... <tConnection>
  [184] extcall 31 .............................. <voidp(tConnection)>
  [186] jmpifz [212] ............................ if voidp(tConnection) then
  [189] getparam 0 .............................. <me>
  [191] pushcons 1 .............................. <"No connection available.">
  [193] getparam 0 .............................. <me>
  [195] pusharglist 1 ........................... <me>
  [197] objcall 140 ............................. <me.getID()>
  [199] pushsymb 83 ............................. <#select>
  [201] pushsymb 221 ............................ <#major>
  [203] pusharglistnoret 5 ...................... <me, "No connection available.", me.getID(), #select, #major>
  [205] extcall 61 .............................. error(me, "No connection available.", me.getID(), #select, #major)
  [207] pushzero ................................ <0>
  [208] pusharglistnoret 1 ...................... <0>
  [210] extcall 14 .............................. return 0
  [212] getlocal 1 .............................. <tLocUser>
  [214] getlocal 3 .............................. <tLocWanted>
  [216] eq ...................................... <tLocUser = tLocWanted>
  [217] jmpifz [254] ............................ if tLocUser = tLocWanted then / else
  [220] pusharglist 0 ........................... <>
  [222] thebuiltin 376 .......................... <the doubleClick>
  [225] jmpifz [251] ............................ if the doubleClick then
  [228] getlocal 4 .............................. <tConnection>
  [230] pushcons 2 .............................. <"ENTER_ONEWAY_DOOR">
  [232] pushsymb 177 ............................ <#integer>
  [234] getparam 0 .............................. <me>
  [236] pusharglist 1 ........................... <me>
  [238] objcall 140 ............................. <me.getID()>
  [240] pusharglist 1 ........................... <me.getID()>
  [242] extcall 177 ............................. <integer(me.getID())>
  [244] pusharglist 2 ........................... <[#integer: integer(me.getID())]>
  [246] pushproplist ............................ <[#integer: integer(me.getID())]>
  [247] pusharglistnoret 3 ...................... <tConnection, "ENTER_ONEWAY_DOOR", [#integer: integer(me.getID())]>
  [249] objcall 178 ............................. tConnection.send("ENTER_ONEWAY_DOOR", [#integer: integer(me.getID())])
  [251] jmp [285]
  [254] getlocal 4 .............................. <tConnection>
  [256] pushcons 3 .............................. <"MOVE">
  [258] pushsymb 177 ............................ <#integer>
  [260] getlocal 3 .............................. <tLocWanted>
  [262] pushint8 1 .............................. <1>
  [264] pusharglist 2 ........................... <tLocWanted, 1>
  [266] objcall 50 .............................. <tLocWanted[1]>
  [268] pushsymb 177 ............................ <#integer>
  [270] getlocal 3 .............................. <tLocWanted>
  [272] pushint8 2 .............................. <2>
  [274] pusharglist 2 ........................... <tLocWanted, 2>
  [276] objcall 50 .............................. <tLocWanted[2]>
  [278] pusharglist 4 ........................... <[#integer: tLocWanted[1], #integer: tLocWanted[2]]>
  [280] pushproplist ............................ <[#integer: tLocWanted[1], #integer: tLocWanted[2]]>
  [281] pusharglistnoret 3 ...................... <tConnection, "MOVE", [#integer: tLocWanted[1], #integer: tLocWanted[2]]>
  [283] objcall 178 ............................. tConnection.send("MOVE", [#integer: tLocWanted[1], #integer: tLocWanted[2]])
  [285] pushint8 1 .............................. <1>
  [287] pusharglistnoret 1 ...................... <1>
  [289] extcall 14 .............................. return 1
  [291] ret
end

on setDoor me, tStatus
  [  0] getparam 1 .............................. <tStatus>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tStatus = 1>
  [  5] getparam 1 .............................. <tStatus>
  [  7] pushzero ................................ <0>
  [  8] eq ...................................... <tStatus = 0>
  [  9] or ...................................... <(tStatus = 1) or (tStatus = 0)>
  [ 10] not ..................................... <not ((tStatus = 1) or (tStatus = 0))>
  [ 11] jmpifz [ 35] ............................ if not ((tStatus = 1) or (tStatus = 0)) then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 4 .............................. <"Invalid door status:">
  [ 18] getparam 1 .............................. <tStatus>
  [ 20] joinpadstr .............................. <"Invalid door status:" && tStatus>
  [ 21] pushsymb 737 ............................ <#setDoor>
  [ 24] pushsymb 62 ............................. <#minor>
  [ 26] pusharglistnoret 4 ...................... <me, "Invalid door status:" && tStatus, #setDoor, #minor>
  [ 28] extcall 61 .............................. error(me, "Invalid door status:" && tStatus, #setDoor, #minor)
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 14 .............................. return 0
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 105 .......................... <me.pSprList>
  [ 39] peek 0
  [ 41] pusharglist 1
  [ 43] extcall 34
  [ 45] pushint8 1
  [ 47] peek 0
  [ 49] peek 2
  [ 51] lteq
  [ 52] jmpifz [146] ............................ repeat with tsprite in me.pSprList
  [ 55] peek 2
  [ 57] peek 1
  [ 59] pusharglist 2
  [ 61] extcall 50
  [ 63] setlocal 0
  [ 65] getlocal 0 .............................. <tsprite>
  [ 67] getchainedprop 19 ....................... <tsprite.member>
  [ 69] getobjprop 160 .......................... <tsprite.member.name>
  [ 71] setlocal 1 .............................. tCurName = tsprite.member.name
  [ 73] getlocal 1 .............................. <tCurName>
  [ 75] pushsymb 23 ............................. <#char>
  [ 77] pushint8 1 .............................. <1>
  [ 79] getlocal 1 .............................. <tCurName>
  [ 81] pusharglist 1 ........................... <tCurName>
  [ 83] extcall 287 ............................. <length(tCurName)>
  [ 86] pushint8 1 .............................. <1>
  [ 88] sub ..................................... <length(tCurName) - 1>
  [ 89] pusharglist 4 ........................... <tCurName, #char, 1, length(tCurName) - 1>
  [ 91] objcall 25 .............................. <tCurName.char[1..length(tCurName) - 1]>
  [ 93] getparam 1 .............................. <tStatus>
  [ 95] joinstr ................................. <tCurName.char[1..length(tCurName) - 1] & tStatus>
  [ 96] setlocal 2 .............................. tNewName = tCurName.char[1..length(tCurName) - 1] & tStatus
  [ 98] getlocal 2 .............................. <tNewName>
  [100] pusharglist 1 ........................... <tNewName>
  [102] extcall 26 .............................. <memberExists(tNewName)>
  [104] jmpifz [141] ............................ if memberExists(tNewName) then
  [107] getlocal 2 .............................. <tNewName>
  [109] pusharglist 1 ........................... <tNewName>
  [111] extcall 18 .............................. <getmemnum(tNewName)>
  [113] pusharglist 1 ........................... <getmemnum(tNewName)>
  [115] extcall 19 .............................. <member(getmemnum(tNewName))>
  [117] setlocal 3 .............................. tMem = member(getmemnum(tNewName))
  [119] getlocal 0 .............................. <tsprite>
  [121] getlocal 3 .............................. <tMem>
  [123] setobjprop 19 ........................... tsprite.member = tMem
  [125] getlocal 0 .............................. <tsprite>
  [127] getlocal 3 .............................. <tMem>
  [129] getobjprop 47 ........................... <tMem.width>
  [131] setobjprop 47 ........................... tsprite.width = tMem.width
  [133] getlocal 0 .............................. <tsprite>
  [135] getlocal 3 .............................. <tMem>
  [137] getobjprop 48 ........................... <tMem.height>
  [139] setobjprop 48 ........................... tsprite.height = tMem.height
  [141] pushint8 1
  [143] add
  [144] endrepeat [ 47]
  [146] pop 3
  [148] ret
end
