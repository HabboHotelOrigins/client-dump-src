property pRunning, pStateCount, pTargetState, pExtraStateCount, pRollStartMillis, pFlippedLayerDataList, pOriginalLayerDataList

on define me, tProps
  [  0] pushzero ................................ <0>
  [  1] setprop 426 ............................. pRunning = 0
  [  4] pushzero ................................ <0>
  [  5] setprop 427 ............................. pTargetState = 0
  [  8] pushint8 3 .............................. <3>
  [ 10] setprop 773 ............................. pExtraStateCount = 3
  [ 13] pushzero ................................ <0>
  [ 14] setprop 774 ............................. pRollStartMillis = 0
  [ 17] pushsymb 78 ............................. <#define>
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 1 ........................... <[me]>
  [ 23] pushlist ................................ <[me]>
  [ 24] getparam 1 .............................. <tProps>
  [ 26] pusharglist 3 ........................... <#define, [me], tProps>
  [ 28] extcall 351 ............................. <callAncestor(#define, [me], tProps)>
  [ 31] setlocal 0 .............................. tRetVal = callAncestor(#define, [me], tProps)
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 336 ............................ <#pStateSequenceList>
  [ 38] pusharglist 2 ........................... <me, #pStateSequenceList>
  [ 40] objcall 34 .............................. <me.pStateSequenceList.count>
  [ 42] getprop 773 ............................. <pExtraStateCount>
  [ 45] sub ..................................... <me.pStateSequenceList.count - pExtraStateCount>
  [ 46] pushint8 2 .............................. <2>
  [ 48] div ..................................... <(me.pStateSequenceList.count - pExtraStateCount) / 2>
  [ 49] setprop 428 ............................. pStateCount = (me.pStateSequenceList.count - pExtraStateCount) / 2
  [ 52] getparam 0 .............................. <me>
  [ 54] getchainedprop 339 ...................... <me.pLayerDataList>
  [ 57] pusharglist 1 ........................... <me.pLayerDataList>
  [ 59] objcall 263 ............................. <me.pLayerDataList.duplicate()>
  [ 62] setprop 775 ............................. pFlippedLayerDataList = me.pLayerDataList.duplicate()
  [ 65] getparam 0 .............................. <me>
  [ 67] getchainedprop 339 ...................... <me.pLayerDataList>
  [ 70] pusharglist 1 ........................... <me.pLayerDataList>
  [ 72] objcall 263 ............................. <me.pLayerDataList.duplicate()>
  [ 75] setprop 776 ............................. pOriginalLayerDataList = me.pLayerDataList.duplicate()
  [ 78] getprop 775 ............................. <pFlippedLayerDataList>
  [ 81] getobjprop 34 ........................... <pFlippedLayerDataList.count>
  [ 83] setlocal 1 .............................. tLayerCount = pFlippedLayerDataList.count
  [ 85] pushint8 1 .............................. <1>
  [ 87] setlocal 2
  [ 89] getlocal 2
  [ 91] pushint8 2 .............................. <2>
  [ 93] lteq
  [ 94] jmpifz [239] ............................ repeat with j = 1 to 2
  [ 97] pushint8 1 .............................. <1>
  [ 99] setlocal 3
  [101] getlocal 3
  [103] getprop 428 ............................. <pStateCount>
  [106] pushint8 2 .............................. <2>
  [108] div ..................................... <pStateCount / 2>
  [109] lteq
  [110] jmpifz [230] ............................ repeat with i = 1 to pStateCount / 2
  [113] getprop 775 ............................. <pFlippedLayerDataList>
  [116] getlocal 1 .............................. <tLayerCount>
  [118] getprop 428 ............................. <pStateCount>
  [121] getlocal 2 .............................. <j>
  [123] mul ..................................... <pStateCount * j>
  [124] sub ..................................... <tLayerCount - (pStateCount * j)>
  [125] getlocal 3 .............................. <i>
  [127] add ..................................... <tLayerCount - (pStateCount * j) + i>
  [128] pusharglist 2 ........................... <pFlippedLayerDataList, tLayerCount - (pStateCount * j) + i>
  [130] objcall 50 .............................. <pFlippedLayerDataList[tLayerCount - (pStateCount * j) + i]>
  [132] pusharglist 1 ........................... <pFlippedLayerDataList[tLayerCount - (pStateCount * j) + i]>
  [134] objcall 263 ............................. <pFlippedLayerDataList[tLayerCount - (pStateCount * j) + i].duplicate()>
  [137] setlocal 4 .............................. tTmp = pFlippedLayerDataList[tLayerCount - (pStateCount * j) + i].duplicate()
  [139] getprop 775 ............................. <pFlippedLayerDataList>
  [142] getlocal 1 .............................. <tLayerCount>
  [144] getprop 428 ............................. <pStateCount>
  [147] getlocal 2 .............................. <j>
  [149] mul ..................................... <pStateCount * j>
  [150] sub ..................................... <tLayerCount - (pStateCount * j)>
  [151] getprop 428 ............................. <pStateCount>
  [154] add ..................................... <tLayerCount - (pStateCount * j) + pStateCount>
  [155] pushint8 1 .............................. <1>
  [157] add ..................................... <tLayerCount - (pStateCount * j) + pStateCount + 1>
  [158] getlocal 3 .............................. <i>
  [160] sub ..................................... <tLayerCount - (pStateCount * j) + pStateCount + 1 - i>
  [161] pusharglist 2 ........................... <pFlippedLayerDataList, tLayerCount - (pStateCount * j) + pStateCount + 1 - i>
  [163] objcall 50 .............................. <pFlippedLayerDataList[tLayerCount - (pStateCount * j) + pStateCount + 1 - i]>
  [165] pusharglist 1 ........................... <pFlippedLayerDataList[tLayerCount - (pStateCount * j) + pStateCount + 1 - i]>
  [167] objcall 263 ............................. <pFlippedLayerDataList[tLayerCount - (pStateCount * j) + pStateCount + 1 - i].duplicate()>
  [170] setlocal 5 .............................. tTmp2 = pFlippedLayerDataList[tLayerCount - (pStateCount * j) + pStateCount + 1 - i].duplicate()
  [172] getprop 775 ............................. <pFlippedLayerDataList>
  [175] getlocal 1 .............................. <tLayerCount>
  [177] getprop 428 ............................. <pStateCount>
  [180] getlocal 2 .............................. <j>
  [182] mul ..................................... <pStateCount * j>
  [183] sub ..................................... <tLayerCount - (pStateCount * j)>
  [184] getlocal 3 .............................. <i>
  [186] add ..................................... <tLayerCount - (pStateCount * j) + i>
  [187] getlocal 5 .............................. <tTmp2>
  [189] pusharglistnoret 3 ...................... <pFlippedLayerDataList, tLayerCount - (pStateCount * j) + i, tTmp2>
  [191] objcall 158 ............................. pFlippedLayerDataList[tLayerCount - (pStateCount * j) + i] = tTmp2
  [193] getprop 775 ............................. <pFlippedLayerDataList>
  [196] getlocal 1 .............................. <tLayerCount>
  [198] getprop 428 ............................. <pStateCount>
  [201] getlocal 2 .............................. <j>
  [203] mul ..................................... <pStateCount * j>
  [204] sub ..................................... <tLayerCount - (pStateCount * j)>
  [205] getprop 428 ............................. <pStateCount>
  [208] add ..................................... <tLayerCount - (pStateCount * j) + pStateCount>
  [209] pushint8 1 .............................. <1>
  [211] add ..................................... <tLayerCount - (pStateCount * j) + pStateCount + 1>
  [212] getlocal 3 .............................. <i>
  [214] sub ..................................... <tLayerCount - (pStateCount * j) + pStateCount + 1 - i>
  [215] getlocal 4 .............................. <tTmp>
  [217] pusharglistnoret 3 ...................... <pFlippedLayerDataList, tLayerCount - (pStateCount * j) + pStateCount + 1 - i, tTmp>
  [219] objcall 158 ............................. pFlippedLayerDataList[tLayerCount - (pStateCount * j) + pStateCount + 1 - i] = tTmp
  [221] pushint8 1
  [223] getlocal 3
  [225] add
  [226] setlocal 3
  [228] endrepeat [101]
  [230] pushint8 1
  [232] getlocal 2
  [234] add
  [235] setlocal 2
  [237] endrepeat [ 89]
  [239] getlocal 0 .............................. <tRetVal>
  [241] pusharglistnoret 1 ...................... <tRetVal>
  [243] extcall 14 .............................. return tRetVal
  [245] ret
end

on select me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 376 .......................... <the doubleClick>
  [  5] jmpifz [ 86] ............................ if the doubleClick then / else
  [  8] getparam 0 .............................. <me>
  [ 10] getobjprop 338 .......................... <me.pState>
  [ 13] pushint8 1 .............................. <1>
  [ 15] eq ...................................... <me.pState = 1>
  [ 16] getparam 0 .............................. <me>
  [ 18] getobjprop 338 .......................... <me.pState>
  [ 21] getprop 773 ............................. <pExtraStateCount>
  [ 24] eq ...................................... <me.pState = pExtraStateCount>
  [ 25] getmovieprop 184 ........................ <the milliSeconds>
  [ 27] getprop 774 ............................. <pRollStartMillis>
  [ 30] sub ..................................... <the milliSeconds - pRollStartMillis>
  [ 31] pushint8 15 ............................. <15>
  [ 33] pushint16 1000 .......................... <1000>
  [ 36] mul ..................................... <15 * 1000>
  [ 37] gt ...................................... <(the milliSeconds - pRollStartMillis) > (15 * 1000)>
  [ 38] and ..................................... <(me.pState = pExtraStateCount) and ((the milliSeconds - pRollStartMillis) > (15 * 1000))>
  [ 39] or ...................................... <(me.pState = 1) or ((me.pState = pExtraStateCount) and ((the milliSeconds - pRollStartMillis) > (15 * 1000)))>
  [ 40] jmpifz [ 83] ............................ if (me.pState = 1) or ((me.pState = pExtraStateCount) and ((the milliSeconds - pRollStartMillis) > (15 * 1000))) then
  [ 43] pushsymb 119 ............................ <#room>
  [ 45] pusharglist 1 ........................... <#room>
  [ 47] extcall 118 ............................. <getThread(#room)>
  [ 49] pusharglist 1 ........................... <getThread(#room)>
  [ 51] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 53] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 55] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [ 57] pushcons 0 .............................. <"SET_RANDOM_STATE">
  [ 59] pushsymb 177 ............................ <#integer>
  [ 61] getparam 0 .............................. <me>
  [ 63] pusharglist 1 ........................... <me>
  [ 65] objcall 140 ............................. <me.getID()>
  [ 67] pusharglist 1 ........................... <me.getID()>
  [ 69] extcall 177 ............................. <integer(me.getID())>
  [ 71] pusharglist 2 ........................... <[#integer: integer(me.getID())]>
  [ 73] pushproplist ............................ <[#integer: integer(me.getID())]>
  [ 74] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "SET_RANDOM_STATE", [#integer: integer(me.getID())]>
  [ 76] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("SET_RANDOM_STATE", [#integer: integer(me.getID())])
  [ 78] pushint8 1 .............................. <1>
  [ 80] setprop 426 ............................. pRunning = 1
  [ 83] jmp [ 91]
  [ 86] pushzero ................................ <0>
  [ 87] pusharglistnoret 1 ...................... <0>
  [ 89] extcall 14 .............................. return 0
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglistnoret 1 ...................... <1>
  [ 95] extcall 14 .............................. return 1
  [ 97] ret
end

on update me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 106 ............................ <#pDirection>
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglist 3 ........................... <me, #pDirection, 1>
  [  8] objcall 25 .............................. <me.pDirection[1]>
  [ 10] pushint8 4 .............................. <4>
  [ 12] eq ...................................... <me.pDirection[1] = 4>
  [ 13] jmpifz [ 27] ............................ if me.pDirection[1] = 4 then / else
  [ 16] getparam 0 .............................. <me>
  [ 18] getprop 776 ............................. <pOriginalLayerDataList>
  [ 21] setobjprop 339 .......................... me.pLayerDataList = pOriginalLayerDataList
  [ 24] jmp [ 35]
  [ 27] getparam 0 .............................. <me>
  [ 29] getprop 775 ............................. <pFlippedLayerDataList>
  [ 32] setobjprop 339 .......................... me.pLayerDataList = pFlippedLayerDataList
  [ 35] getparam 0 .............................. <me>
  [ 37] getchainedprop 349 ...................... <me.pIsAnimatingList>
  [ 40] pushint8 1 .............................. <1>
  [ 42] pusharglist 2 ........................... <me.pIsAnimatingList, 1>
  [ 44] objcall 374 ............................. <me.pIsAnimatingList.findPos(1)>
  [ 47] pushzero ................................ <0>
  [ 48] eq ...................................... <me.pIsAnimatingList.findPos(1) = 0>
  [ 49] jmpifz [194] ............................ if me.pIsAnimatingList.findPos(1) = 0 then
  [ 52] getparam 0 .............................. <me>
  [ 54] getobjprop 338 .......................... <me.pState>
  [ 57] getprop 773 ............................. <pExtraStateCount>
  [ 60] pushint8 1 .............................. <1>
  [ 62] sub ..................................... <pExtraStateCount - 1>
  [ 63] eq ...................................... <me.pState = (pExtraStateCount - 1)>
  [ 64] jmpifz [ 80] ............................ if me.pState = (pExtraStateCount - 1) then / else
  [ 67] getparam 0 .............................. <me>
  [ 69] getprop 773 ............................. <pExtraStateCount>
  [ 72] pusharglistnoret 2 ...................... <me, pExtraStateCount>
  [ 74] objcall 772 ............................. me.setStateInternal(pExtraStateCount)
  [ 77] jmp [194]
  [ 80] getparam 0 .............................. <me>
  [ 82] getobjprop 338 .......................... <me.pState>
  [ 85] getprop 773 ............................. <pExtraStateCount>
  [ 88] eq ...................................... <me.pState = pExtraStateCount>
  [ 89] jmpifz [128] ............................ if me.pState = pExtraStateCount then / else
  [ 92] getprop 427 ............................. <pTargetState>
  [ 95] jmpifz [115] ............................ if pTargetState then / else
  [ 98] getparam 0 .............................. <me>
  [100] getprop 773 ............................. <pExtraStateCount>
  [103] getprop 427 ............................. <pTargetState>
  [106] add ..................................... <pExtraStateCount + pTargetState>
  [107] pusharglistnoret 2 ...................... <me, pExtraStateCount + pTargetState>
  [109] objcall 772 ............................. me.setStateInternal(pExtraStateCount + pTargetState)
  [112] jmp [125]
  [115] getparam 0 .............................. <me>
  [117] getprop 773 ............................. <pExtraStateCount>
  [120] pusharglistnoret 2 ...................... <me, pExtraStateCount>
  [122] objcall 772 ............................. me.setStateInternal(pExtraStateCount)
  [125] jmp [194]
  [128] getparam 0 .............................. <me>
  [130] getobjprop 338 .......................... <me.pState>
  [133] getprop 773 ............................. <pExtraStateCount>
  [136] getprop 427 ............................. <pTargetState>
  [139] add ..................................... <pExtraStateCount + pTargetState>
  [140] eq ...................................... <me.pState = (pExtraStateCount + pTargetState)>
  [141] jmpifz [169] ............................ if me.pState = (pExtraStateCount + pTargetState) then / else
  [144] getparam 0 .............................. <me>
  [146] getprop 773 ............................. <pExtraStateCount>
  [149] getprop 428 ............................. <pStateCount>
  [152] add ..................................... <pExtraStateCount + pStateCount>
  [153] getprop 427 ............................. <pTargetState>
  [156] add ..................................... <pExtraStateCount + pStateCount + pTargetState>
  [157] pusharglistnoret 2 ...................... <me, pExtraStateCount + pStateCount + pTargetState>
  [159] objcall 772 ............................. me.setStateInternal(pExtraStateCount + pStateCount + pTargetState)
  [162] pushzero ................................ <0>
  [163] setprop 427 ............................. pTargetState = 0
  [166] jmp [194]
  [169] getparam 0 .............................. <me>
  [171] getobjprop 338 .......................... <me.pState>
  [174] getprop 773 ............................. <pExtraStateCount>
  [177] getprop 428 ............................. <pStateCount>
  [180] add ..................................... <pExtraStateCount + pStateCount>
  [181] gt ...................................... <me.pState > (pExtraStateCount + pStateCount)>
  [182] jmpifz [194] ............................ if me.pState > (pExtraStateCount + pStateCount) then
  [185] getparam 0 .............................. <me>
  [187] pushint8 1 .............................. <1>
  [189] pusharglistnoret 2 ...................... <me, 1>
  [191] objcall 772 ............................. me.setStateInternal(1)
  [194] pushsymb 326 ............................ <#update>
  [197] getparam 0 .............................. <me>
  [199] pusharglist 1 ........................... <[me]>
  [201] pushlist ................................ <[me]>
  [202] pusharglist 2 ........................... <#update, [me]>
  [204] extcall 351 ............................. <callAncestor(#update, [me])>
  [207] pusharglistnoret 1 ...................... <callAncestor(#update, [me])>
  [209] extcall 14 .............................. return callAncestor(#update, [me])
  [211] ret
end

on setState me, tNewState
  [  0] getparam 1 .............................. <tNewState>
  [  2] pusharglist 1 ........................... <tNewState>
  [  4] extcall 177 ............................. <integer(tNewState)>
  [  6] setparam 1 .............................. tNewState = integer(tNewState)
  [  8] getparam 1 .............................. <tNewState>
  [ 10] pushint16 1000 .......................... <1000>
  [ 13] gt ...................................... <tNewState > 1000>
  [ 14] jmpifz [ 25] ............................ if tNewState > 1000 then
  [ 17] pushzero ................................ <0>
  [ 18] setparam 1 .............................. tNewState = 0
  [ 20] pushint8 1 .............................. <1>
  [ 22] setprop 426 ............................. pRunning = 1
  [ 25] getprop 426 ............................. <pRunning>
  [ 28] jmpifz [ 36] ............................ if pRunning then
  [ 31] getparam 1 .............................. <tNewState>
  [ 33] inv ..................................... <-tNewState>
  [ 34] setparam 1 .............................. tNewState = -tNewState
  [ 36] getparam 0 .............................. <me>
  [ 38] getparam 1 .............................. <tNewState>
  [ 40] pusharglistnoret 2 ...................... <me, tNewState>
  [ 42] objcall 772 ............................. me.setStateInternal(tNewState)
  [ 45] ret
end

on setStateInternal me, tNewState
  [  0] getparam 1 .............................. <tNewState>
  [  2] pusharglist 1 ........................... <tNewState>
  [  4] extcall 177 ............................. <integer(tNewState)>
  [  6] setparam 1 .............................. tNewState = integer(tNewState)
  [  8] getprop 426 ............................. <pRunning>
  [ 11] not ..................................... <not pRunning>
  [ 12] jmpifz [ 26] ............................ if not pRunning then
  [ 15] getparam 1 .............................. <tNewState>
  [ 17] pushzero ................................ <0>
  [ 18] gt ...................................... <tNewState > 0>
  [ 19] jmpifz [ 26] ............................ if tNewState > 0 then
  [ 22] pushint8 1 .............................. <1>
  [ 24] setparam 1 .............................. tNewState = 1
  [ 26] getparam 1 .............................. <tNewState>
  [ 28] pushzero ................................ <0>
  [ 29] lteq .................................... <tNewState <= 0>
  [ 30] jmpifz [126] ............................ if tNewState <= 0 then / else
  [ 33] getparam 1 .............................. <tNewState>
  [ 35] inv ..................................... <-tNewState>
  [ 36] setparam 1 .............................. tNewState = -tNewState
  [ 38] getparam 1 .............................. <tNewState>
  [ 40] pushzero ................................ <0>
  [ 41] eq ...................................... <tNewState = 0>
  [ 42] jmpifz [103] ............................ if tNewState = 0 then / else
  [ 45] getmovieprop 184 ........................ <the milliSeconds>
  [ 47] setprop 774 ............................. pRollStartMillis = the milliSeconds
  [ 50] getprop 426 ............................. <pRunning>
  [ 53] jmpifz [ 81] ............................ if pRunning then / else
  [ 56] pushsymb 271 ............................ <#setState>
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglist 1 ........................... <[me]>
  [ 63] pushlist ................................ <[me]>
  [ 64] getprop 773 ............................. <pExtraStateCount>
  [ 67] pushint8 1 .............................. <1>
  [ 69] sub ..................................... <pExtraStateCount - 1>
  [ 70] pushint8 1 .............................. <1>
  [ 72] sub ..................................... <pExtraStateCount - 1 - 1>
  [ 73] pusharglistnoret 3 ...................... <#setState, [me], pExtraStateCount - 1 - 1>
  [ 75] extcall 351 ............................. callAncestor(#setState, [me], pExtraStateCount - 1 - 1)
  [ 78] jmp [100]
  [ 81] pushsymb 271 ............................ <#setState>
  [ 84] getparam 0 .............................. <me>
  [ 86] pusharglist 1 ........................... <[me]>
  [ 88] pushlist ................................ <[me]>
  [ 89] getprop 773 ............................. <pExtraStateCount>
  [ 92] pushint8 1 .............................. <1>
  [ 94] sub ..................................... <pExtraStateCount - 1>
  [ 95] pusharglistnoret 3 ...................... <#setState, [me], pExtraStateCount - 1>
  [ 97] extcall 351 ............................. callAncestor(#setState, [me], pExtraStateCount - 1)
  [100] jmp [123]
  [103] getparam 1 .............................. <tNewState>
  [105] pushint8 1 .............................. <1>
  [107] gteq .................................... <tNewState >= 1>
  [108] getparam 1 .............................. <tNewState>
  [110] getprop 428 ............................. <pStateCount>
  [113] lteq .................................... <tNewState <= pStateCount>
  [114] and ..................................... <(tNewState >= 1) and (tNewState <= pStateCount)>
  [115] jmpifz [123] ............................ if (tNewState >= 1) and (tNewState <= pStateCount) then
  [118] getparam 1 .............................. <tNewState>
  [120] setprop 427 ............................. pTargetState = tNewState
  [123] jmp [146]
  [126] pushsymb 271 ............................ <#setState>
  [129] getparam 0 .............................. <me>
  [131] pusharglist 1 ........................... <[me]>
  [133] pushlist ................................ <[me]>
  [134] getparam 1 .............................. <tNewState>
  [136] pushint8 1 .............................. <1>
  [138] sub ..................................... <tNewState - 1>
  [139] pusharglist 3 ........................... <#setState, [me], tNewState - 1>
  [141] extcall 351 ............................. <callAncestor(#setState, [me], tNewState - 1)>
  [144] setlocal 0 .............................. tRetVal = callAncestor(#setState, [me], tNewState - 1)
  [146] getlocal 0 .............................. <tRetVal>
  [148] pusharglistnoret 1 ...................... <tRetVal>
  [150] extcall 14 .............................. return tRetVal
  [152] ret
end
