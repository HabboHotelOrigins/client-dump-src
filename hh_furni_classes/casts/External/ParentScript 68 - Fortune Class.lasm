property pShowSymbol, pTargetBlend

on define me, tProps
  [  0] pushzero ................................ <0>
  [  1] setprop 780 ............................. pShowSymbol = 0
  [  4] pushint8 100 ............................ <100>
  [  6] setlocal 0 .............................. pBlend = 100
  [  8] pushsymb 78 ............................. <#define>
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <[me]>
  [ 14] pushlist ................................ <[me]>
  [ 15] getparam 1 .............................. <tProps>
  [ 17] pusharglist 3 ........................... <#define, [me], tProps>
  [ 19] extcall 351 ............................. <callAncestor(#define, [me], tProps)>
  [ 22] setlocal 1 .............................. tReturnValue = callAncestor(#define, [me], tProps)
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 346 ............................ <#pBlendList>
  [ 29] pushint8 6 .............................. <6>
  [ 31] pusharglist 3 ........................... <me, #pBlendList, 6>
  [ 33] objcall 25 .............................. <me.pBlendList[6]>
  [ 35] setprop 781 ............................. pTargetBlend = me.pBlendList[6]
  [ 38] getlocal 1 .............................. <tReturnValue>
  [ 40] pusharglistnoret 1 ...................... <tReturnValue>
  [ 42] extcall 14 .............................. return tReturnValue
  [ 44] ret
end

on select me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 376 .......................... <the doubleClick>
  [  5] not ..................................... <not (the doubleClick)>
  [  6] jmpifz [ 14] ............................ if not (the doubleClick) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 14 .............................. return 0
  [ 14] pushsymb 119 ............................ <#room>
  [ 16] pusharglist 1 ........................... <#room>
  [ 18] extcall 118 ............................. <getThread(#room)>
  [ 20] pusharglist 1 ........................... <getThread(#room)>
  [ 22] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 24] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 26] objcall 528 ............................. <getThread(#room).getComponent().getOwnUser()>
  [ 29] setlocal 0 .............................. tUserObj = getThread(#room).getComponent().getOwnUser()
  [ 31] getlocal 0 .............................. <tUserObj>
  [ 33] not ..................................... <not tUserObj>
  [ 34] jmpifz [ 43] ............................ if not tUserObj then
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglistnoret 1 ...................... <1>
  [ 41] extcall 14 .............................. return 1
  [ 43] getlocal 0 .............................. <tUserObj>
  [ 45] getobjprop 112 .......................... <tUserObj.pLocX>
  [ 47] getparam 0 .............................. <me>
  [ 49] getobjprop 112 .......................... <me.pLocX>
  [ 51] sub ..................................... <tUserObj.pLocX - me.pLocX>
  [ 52] pusharglist 1 ........................... <tUserObj.pLocX - me.pLocX>
  [ 54] extcall 187 ............................. <abs(tUserObj.pLocX - me.pLocX)>
  [ 56] pushint8 1 .............................. <1>
  [ 58] gt ...................................... <abs(tUserObj.pLocX - me.pLocX) > 1>
  [ 59] getlocal 0 .............................. <tUserObj>
  [ 61] getobjprop 113 .......................... <tUserObj.pLocY>
  [ 63] getparam 0 .............................. <me>
  [ 65] getobjprop 113 .......................... <me.pLocY>
  [ 67] sub ..................................... <tUserObj.pLocY - me.pLocY>
  [ 68] pusharglist 1 ........................... <tUserObj.pLocY - me.pLocY>
  [ 70] extcall 187 ............................. <abs(tUserObj.pLocY - me.pLocY)>
  [ 72] pushint8 1 .............................. <1>
  [ 74] gt ...................................... <abs(tUserObj.pLocY - me.pLocY) > 1>
  [ 75] or ...................................... <(abs(tUserObj.pLocX - me.pLocX) > 1) or (abs(tUserObj.pLocY - me.pLocY) > 1)>
  [ 76] jmpifz [207] ............................ if (abs(tUserObj.pLocX - me.pLocX) > 1) or (abs(tUserObj.pLocY - me.pLocY) > 1) then / else
  [ 79] getparam 0 .............................. <me>
  [ 81] getobjprop 112 .......................... <me.pLocX>
  [ 83] pushint8 1 .............................. <1>
  [ 85] sub ..................................... <me.pLocX - 1>
  [ 86] setlocal 1
  [ 88] getlocal 1
  [ 90] getparam 0 .............................. <me>
  [ 92] getobjprop 112 .......................... <me.pLocX>
  [ 94] pushint8 1 .............................. <1>
  [ 96] add ..................................... <me.pLocX + 1>
  [ 97] lteq
  [ 98] jmpifz [204] ............................ repeat with tX = me.pLocX - 1 to me.pLocX + 1
  [101] getparam 0 .............................. <me>
  [103] getobjprop 113 .......................... <me.pLocY>
  [105] pushint8 1 .............................. <1>
  [107] sub ..................................... <me.pLocY - 1>
  [108] setlocal 2
  [110] getlocal 2
  [112] getparam 0 .............................. <me>
  [114] getobjprop 113 .......................... <me.pLocY>
  [116] pushint8 1 .............................. <1>
  [118] add ..................................... <me.pLocY + 1>
  [119] lteq
  [120] jmpifz [195] ............................ repeat with tY = me.pLocY - 1 to me.pLocY + 1
  [123] pushsymb 119 ............................ <#room>
  [125] pusharglist 1 ........................... <#room>
  [127] extcall 118 ............................. <getThread(#room)>
  [129] pusharglist 1 ........................... <getThread(#room)>
  [131] objcall 120 ............................. <getThread(#room).getInterface()>
  [133] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [135] objcall 121 ............................. <getThread(#room).getInterface().getGeometry()>
  [137] getlocal 1 .............................. <tX>
  [139] getlocal 2 .............................. <tY>
  [141] pusharglist 3 ........................... <getThread(#room).getInterface().getGeometry(), tX, tY>
  [143] objcall 557 ............................. <getThread(#room).getInterface().getGeometry().emptyTile(tX, tY)>
  [146] jmpifz [186] ............................ if getThread(#room).getInterface().getGeometry().emptyTile(tX, tY) then
  [149] pushsymb 119 ............................ <#room>
  [151] pusharglist 1 ........................... <#room>
  [153] extcall 118 ............................. <getThread(#room)>
  [155] pusharglist 1 ........................... <getThread(#room)>
  [157] objcall 138 ............................. <getThread(#room).getComponent()>
  [159] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [161] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [163] pushcons 0 .............................. <"MOVE">
  [165] pushsymb 177 ............................ <#integer>
  [167] getlocal 1 .............................. <tX>
  [169] pushsymb 177 ............................ <#integer>
  [171] getlocal 2 .............................. <tY>
  [173] pusharglist 4 ........................... <[#integer: tX, #integer: tY]>
  [175] pushproplist ............................ <[#integer: tX, #integer: tY]>
  [176] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#integer: tX, #integer: tY]>
  [178] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#integer: tX, #integer: tY])
  [180] pushint8 1 .............................. <1>
  [182] pusharglistnoret 1 ...................... <1>
  [184] extcall 14 .............................. return 1
  [186] pushint8 1
  [188] getlocal 2
  [190] add
  [191] setlocal 2
  [193] endrepeat [110]
  [195] pushint8 1
  [197] getlocal 1
  [199] add
  [200] setlocal 1
  [202] endrepeat [ 88]
  [204] jmp [246]
  [207] pushsymb 119 ............................ <#room>
  [209] pusharglist 1 ........................... <#room>
  [211] extcall 118 ............................. <getThread(#room)>
  [213] pusharglist 1 ........................... <getThread(#room)>
  [215] objcall 138 ............................. <getThread(#room).getComponent()>
  [217] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [219] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [221] setlocal 3 .............................. tConn = getThread(#room).getComponent().getRoomConnection()
  [223] getlocal 3 .............................. <tConn>
  [225] pushcons 1 .............................. <"SET_RANDOM_STATE">
  [227] pushsymb 177 ............................ <#integer>
  [229] getparam 0 .............................. <me>
  [231] pusharglist 1 ........................... <me>
  [233] objcall 140 ............................. <me.getID()>
  [235] pusharglist 1 ........................... <me.getID()>
  [237] extcall 177 ............................. <integer(me.getID())>
  [239] pusharglist 2 ........................... <[#integer: integer(me.getID())]>
  [241] pushproplist ............................ <[#integer: integer(me.getID())]>
  [242] pusharglistnoret 3 ...................... <tConn, "SET_RANDOM_STATE", [#integer: integer(me.getID())]>
  [244] objcall 178 ............................. tConn.send("SET_RANDOM_STATE", [#integer: integer(me.getID())])
  [246] pushint8 1 .............................. <1>
  [248] pusharglistnoret 1 ...................... <1>
  [250] extcall 14 .............................. return 1
  [252] ret
end

on update me
  [  0] getprop 780 ............................. <pShowSymbol>
  [  3] jmpifz [ 60] ............................ if pShowSymbol then
  [  6] getparam 0 .............................. <me>
  [  8] pushsymb 105 ............................ <#pSprList>
  [ 10] pushint8 6 .............................. <6>
  [ 12] pusharglist 3 ........................... <me, #pSprList, 6>
  [ 14] objcall 25 .............................. <me.pSprList[6]>
  [ 16] setlocal 0 .............................. tsprite = me.pSprList[6]
  [ 18] getlocal 0 .............................. <tsprite>
  [ 20] getobjprop 205 .......................... <tsprite.blend>
  [ 22] setlocal 1 .............................. tBlend = tsprite.blend
  [ 24] getlocal 1 .............................. <tBlend>
  [ 26] getprop 781 ............................. <pTargetBlend>
  [ 29] lt ...................................... <tBlend < pTargetBlend>
  [ 30] jmpifz [ 60] ............................ if tBlend < pTargetBlend then
  [ 33] getlocal 1 .............................. <tBlend>
  [ 35] pushint8 1 .............................. <1>
  [ 37] add ..................................... <tBlend + 1>
  [ 38] setlocal 1 .............................. tBlend = tBlend + 1
  [ 40] getlocal 1 .............................. <tBlend>
  [ 42] getprop 781 ............................. <pTargetBlend>
  [ 45] gt ...................................... <tBlend > pTargetBlend>
  [ 46] jmpifz [ 54] ............................ if tBlend > pTargetBlend then
  [ 49] getprop 781 ............................. <pTargetBlend>
  [ 52] setlocal 1 .............................. tBlend = pTargetBlend
  [ 54] getlocal 0 .............................. <tsprite>
  [ 56] getlocal 1 .............................. <tBlend>
  [ 58] setobjprop 205 .......................... tsprite.blend = tBlend
  [ 60] pushsymb 326 ............................ <#update>
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglist 1 ........................... <[me]>
  [ 67] pushlist ................................ <[me]>
  [ 68] pusharglist 2 ........................... <#update, [me]>
  [ 70] extcall 351 ............................. <callAncestor(#update, [me])>
  [ 73] pusharglistnoret 1 ...................... <callAncestor(#update, [me])>
  [ 75] extcall 14 .............................. return callAncestor(#update, [me])
  [ 77] ret
end

on setState me, tNewState
  [  0] getparam 1 .............................. <tNewState>
  [  2] pusharglist 1 ........................... <tNewState>
  [  4] extcall 177 ............................. <integer(tNewState)>
  [  6] pusharglist 1 ........................... <integer(tNewState)>
  [  8] extcall 406 ............................. <integerp(integer(tNewState))>
  [ 11] jmpifz [ 25] ............................ if integerp(integer(tNewState)) then / else
  [ 14] getparam 1 .............................. <tNewState>
  [ 16] pusharglist 1 ........................... <tNewState>
  [ 18] extcall 177 ............................. <integer(tNewState)>
  [ 20] setparam 1 .............................. tNewState = integer(tNewState)
  [ 22] jmp [ 33]
  [ 25] getparam 1 .............................. <tNewState>
  [ 27] pusharglist 1 ........................... <tNewState>
  [ 29] extcall 35 .............................. <string(tNewState)>
  [ 31] setparam 1 .............................. tNewState = string(tNewState)
  [ 33] getparam 1 .............................. <tNewState>
  [ 35] getobjprop 42 ........................... <tNewState.ilk>
  [ 37] pushsymb 177 ............................ <#integer>
  [ 39] nteq .................................... <tNewState.ilk <> #integer>
  [ 40] jmpifz [ 54] ............................ if tNewState.ilk <> #integer then / else
  [ 43] pushint8 2 .............................. <2>
  [ 45] setparam 1 .............................. tNewState = 2
  [ 47] pushzero ................................ <0>
  [ 48] setprop 780 ............................. pShowSymbol = 0
  [ 51] jmp [ 97]
  [ 54] getparam 1 .............................. <tNewState>
  [ 56] pushint8 2 .............................. <2>
  [ 58] add ..................................... <tNewState + 2>
  [ 59] setparam 1 .............................. tNewState = tNewState + 2
  [ 61] getparam 0 .............................. <me>
  [ 63] pushsymb 105 ............................ <#pSprList>
  [ 65] pusharglist 2 ........................... <me, #pSprList>
  [ 67] objcall 34 .............................. <me.pSprList.count>
  [ 69] pushint8 6 .............................. <6>
  [ 71] gteq .................................... <me.pSprList.count >= 6>
  [ 72] jmpifz [ 92] ............................ if me.pSprList.count >= 6 then
  [ 75] getparam 0 .............................. <me>
  [ 77] pushsymb 105 ............................ <#pSprList>
  [ 79] pushint8 6 .............................. <6>
  [ 81] pusharglist 3 ........................... <me, #pSprList, 6>
  [ 83] objcall 25 .............................. <me.pSprList[6]>
  [ 85] setlocal 0 .............................. tsprite = me.pSprList[6]
  [ 87] getlocal 0 .............................. <tsprite>
  [ 89] pushzero ................................ <0>
  [ 90] setobjprop 205 .......................... tsprite.blend = 0
  [ 92] pushint8 1 .............................. <1>
  [ 94] setprop 780 ............................. pShowSymbol = 1
  [ 97] pushsymb 271 ............................ <#setState>
  [100] getparam 0 .............................. <me>
  [102] pusharglist 1 ........................... <[me]>
  [104] pushlist ................................ <[me]>
  [105] getparam 1 .............................. <tNewState>
  [107] pusharglistnoret 3 ...................... <#setState, [me], tNewState>
  [109] extcall 351 ............................. callAncestor(#setState, [me], tNewState)
  [112] ret
end
