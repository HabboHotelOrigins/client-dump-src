property pClass, pName, pCustom, pType, pSprList, pLocX, pLocY, pLocH, pLocZ, pXFactor, pWallX, pWallY, pLocalX, pLocalY, pFormatVer, pDirection, pParentWallLocZ, pPersistentFurniData, pExpireTimeStamp

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 102 ............................. pClass = EMPTY
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 103 ............................. pName = EMPTY
  [  8] pushcons 0 .............................. <EMPTY>
  [ 10] setprop 104 ............................. pCustom = EMPTY
  [ 12] pushcons 0 .............................. <EMPTY>
  [ 14] setprop 273 ............................. pType = EMPTY
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setprop 105 ............................. pSprList = []
  [ 22] pushzero ................................ <0>
  [ 23] setprop 112 ............................. pLocX = 0
  [ 25] pushzero ................................ <0>
  [ 26] setprop 113 ............................. pLocY = 0
  [ 28] pushzero ................................ <0>
  [ 29] setprop 114 ............................. pLocH = 0
  [ 31] pushzero ................................ <0>
  [ 32] setprop 274 ............................. pLocZ = 0
  [ 35] pushzero ................................ <0>
  [ 36] setprop 275 ............................. pWallX = 0
  [ 39] pushzero ................................ <0>
  [ 40] setprop 276 ............................. pWallY = 0
  [ 43] pushzero ................................ <0>
  [ 44] setprop 277 ............................. pLocalX = 0
  [ 47] pushzero ................................ <0>
  [ 48] setprop 278 ............................. pLocalY = 0
  [ 51] pushzero ................................ <0>
  [ 52] setprop 279 ............................. pFormatVer = 0
  [ 55] pushzero ................................ <0>
  [ 56] setprop 106 ............................. pDirection = 0
  [ 58] pusharglist 0 ........................... <>
  [ 60] extcall 17 .............................. <VOID>
  [ 62] setprop 280 ............................. pParentWallLocZ = VOID
  [ 65] pusharglist 0 ........................... <>
  [ 67] extcall 17 .............................. <VOID>
  [ 69] setprop 116 ............................. pPersistentFurniData = VOID
  [ 71] pushint8 1 .............................. <1>
  [ 73] inv ..................................... <-1>
  [ 74] setprop 131 ............................. pExpireTimeStamp = -1
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 1 ...................... <1>
  [ 80] extcall 14 .............................. return 1
  [ 82] ret
end

on deconstruct me
  [  0] getprop 105 ............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 34
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 41] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 50
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 136 .......................... <tSpr.spriteNum>
  [ 32] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 34] extcall 135 ............................. releaseSprite(tSpr.spriteNum)
  [ 36] pushint8 1
  [ 38] add
  [ 39] endrepeat [ 10]
  [ 41] pop 3
  [ 43] pusharglist 0 ........................... <>
  [ 45] extcall 17 .............................. <VOID>
  [ 47] setprop 280 ............................. pParentWallLocZ = VOID
  [ 50] pusharglist 0 ........................... <[]>
  [ 52] pushlist ................................ <[]>
  [ 53] setprop 105 ............................. pSprList = []
  [ 55] pushint8 1 .............................. <1>
  [ 57] pusharglistnoret 1 ...................... <1>
  [ 59] extcall 14 .............................. return 1
  [ 61] ret
end

on define me, tProps
  [  0] getprop 116 ............................. <pPersistentFurniData>
  [  2] pusharglist 1 ........................... <pPersistentFurniData>
  [  4] extcall 31 .............................. <voidp(pPersistentFurniData)>
  [  6] jmpifz [ 25] ............................ if voidp(pPersistentFurniData) then
  [  9] pushcons 1 .............................. <"dynamicdownloader">
  [ 11] pusharglist 1 ........................... <"dynamicdownloader">
  [ 13] extcall 118 ............................. <getThread("dynamicdownloader")>
  [ 15] pusharglist 1 ........................... <getThread("dynamicdownloader")>
  [ 17] objcall 138 ............................. <getThread("dynamicdownloader").getComponent()>
  [ 19] pusharglist 1 ........................... <getThread("dynamicdownloader").getComponent()>
  [ 21] objcall 157 ............................. <getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()>
  [ 23] setprop 116 ............................. pPersistentFurniData = getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()
  [ 25] getparam 1 .............................. <tProps>
  [ 27] pushsymb 147 ............................ <#class>
  [ 29] pusharglist 2 ........................... <tProps, #class>
  [ 31] objcall 50 .............................. <tProps[#class]>
  [ 33] setprop 102 ............................. pClass = tProps[#class]
  [ 35] getparam 1 .............................. <tProps>
  [ 37] pushsymb 151 ............................ <#x>
  [ 39] pusharglist 2 ........................... <tProps, #x>
  [ 41] objcall 50 .............................. <tProps[#x]>
  [ 43] setprop 112 ............................. pLocX = tProps[#x]
  [ 45] getparam 1 .............................. <tProps>
  [ 47] pushsymb 152 ............................ <#y>
  [ 49] pusharglist 2 ........................... <tProps, #y>
  [ 51] objcall 50 .............................. <tProps[#y]>
  [ 53] setprop 113 ............................. pLocY = tProps[#y]
  [ 55] getparam 1 .............................. <tProps>
  [ 57] pushsymb 261 ............................ <#h>
  [ 60] pusharglist 2 ........................... <tProps, #h>
  [ 62] objcall 50 .............................. <tProps[#h]>
  [ 64] setprop 114 ............................. pLocH = tProps[#h]
  [ 66] getparam 1 .............................. <tProps>
  [ 68] pushsymb 281 ............................ <#z>
  [ 71] pusharglist 2 ........................... <tProps, #z>
  [ 73] objcall 50 .............................. <tProps[#z]>
  [ 75] setprop 274 ............................. pLocZ = tProps[#z]
  [ 78] getparam 1 .............................. <tProps>
  [ 80] pushsymb 282 ............................ <#local_x>
  [ 83] pusharglist 2 ........................... <tProps, #local_x>
  [ 85] objcall 50 .............................. <tProps[#local_x]>
  [ 87] setprop 277 ............................. pLocalX = tProps[#local_x]
  [ 90] getparam 1 .............................. <tProps>
  [ 92] pushsymb 283 ............................ <#local_y>
  [ 95] pusharglist 2 ........................... <tProps, #local_y>
  [ 97] objcall 50 .............................. <tProps[#local_y]>
  [ 99] setprop 278 ............................. pLocalY = tProps[#local_y]
  [102] getparam 1 .............................. <tProps>
  [104] pushsymb 284 ............................ <#wall_x>
  [107] pusharglist 2 ........................... <tProps, #wall_x>
  [109] objcall 50 .............................. <tProps[#wall_x]>
  [111] setprop 275 ............................. pWallX = tProps[#wall_x]
  [114] getparam 1 .............................. <tProps>
  [116] pushsymb 285 ............................ <#wall_y>
  [119] pusharglist 2 ........................... <tProps, #wall_y>
  [121] objcall 50 .............................. <tProps[#wall_y]>
  [123] setprop 276 ............................. pWallY = tProps[#wall_y]
  [126] getparam 1 .............................. <tProps>
  [128] pushsymb 286 ............................ <#formatVersion>
  [131] pusharglist 2 ........................... <tProps, #formatVersion>
  [133] objcall 50 .............................. <tProps[#formatVersion]>
  [135] setprop 279 ............................. pFormatVer = tProps[#formatVersion]
  [138] getparam 1 .............................. <tProps>
  [140] pushsymb 148 ............................ <#direction>
  [142] pusharglist 2 ........................... <tProps, #direction>
  [144] objcall 50 .............................. <tProps[#direction]>
  [146] setprop 106 ............................. pDirection = tProps[#direction]
  [148] getparam 1 .............................. <tProps>
  [150] pushsymb 127 ............................ <#type>
  [152] pusharglist 2 ........................... <tProps, #type>
  [154] objcall 50 .............................. <tProps[#type]>
  [156] setprop 273 ............................. pType = tProps[#type]
  [159] pushsymb 119 ............................ <#room>
  [161] pusharglist 1 ........................... <#room>
  [163] extcall 118 ............................. <getThread(#room)>
  [165] pusharglist 1 ........................... <getThread(#room)>
  [167] objcall 120 ............................. <getThread(#room).getInterface()>
  [169] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [171] objcall 121 ............................. <getThread(#room).getInterface().getGeometry()>
  [173] getobjprop 117 .......................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [175] setprop 117 ............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [177] getparam 1 .............................. <tProps>
  [179] pushsymb 153 ............................ <#expire>
  [181] pusharglist 2 ........................... <tProps, #expire>
  [183] objcall 50 .............................. <tProps[#expire]>
  [185] setprop 131 ............................. pExpireTimeStamp = tProps[#expire]
  [187] getprop 102 ............................. <pClass>
  [189] peek 0 .................................. case pClass of
  [191] pushcons 2 .............................. <"poster">
  [193] eq
  [194] jmpifz [248] ............................ (case) "poster":
  [197] pushcons 3 .............................. <"poster_">
  [199] getprop 273 ............................. <pType>
  [202] joinstr ................................. <"poster_" & pType>
  [203] pushcons 4 .............................. <"_name">
  [205] joinstr ................................. <"poster_" & pType & "_name">
  [206] pushcons 3 .............................. <"poster_">
  [208] getprop 273 ............................. <pType>
  [211] joinstr ................................. <"poster_" & pType>
  [212] pushcons 4 .............................. <"_name">
  [214] joinstr ................................. <"poster_" & pType & "_name">
  [215] pusharglist 2 ........................... <"poster_" & pType & "_name", "poster_" & pType & "_name">
  [217] extcall 164 ............................. <getText("poster_" & pType & "_name", "poster_" & pType & "_name")>
  [219] setprop 103 ............................. pName = getText("poster_" & pType & "_name", "poster_" & pType & "_name")
  [221] pushcons 3 .............................. <"poster_">
  [223] getprop 273 ............................. <pType>
  [226] joinstr ................................. <"poster_" & pType>
  [227] pushcons 5 .............................. <"_desc">
  [229] joinstr ................................. <"poster_" & pType & "_desc">
  [230] pushcons 3 .............................. <"poster_">
  [232] getprop 273 ............................. <pType>
  [235] joinstr ................................. <"poster_" & pType>
  [236] pushcons 5 .............................. <"_desc">
  [238] joinstr ................................. <"poster_" & pType & "_desc">
  [239] pusharglist 2 ........................... <"poster_" & pType & "_desc", "poster_" & pType & "_desc">
  [241] extcall 164 ............................. <getText("poster_" & pType & "_desc", "poster_" & pType & "_desc")>
  [243] setprop 104 ............................. pCustom = getText("poster_" & pType & "_desc", "poster_" & pType & "_desc")
  [245] jmp [405]
  [248] peek 0
  [250] pushcons 6 .............................. <"post.it.vd">
  [252] nteq
  [253] jmpifz [264] ............................ (case) "post.it.vd", ...
  [256] peek 0
  [258] pushcons 7 .............................. <"post.it">
  [260] eq
  [261] jmpifz [320] ............................ (case) ..., "post.it":
  [264] getprop 116 ............................. <pPersistentFurniData>
  [266] pushcons 8 .............................. <"i">
  [268] getprop 102 ............................. <pClass>
  [270] pusharglist 3 ........................... <pPersistentFurniData, "i", pClass>
  [272] objcall 159 ............................. <pPersistentFurniData.getPropsByClass("i", pClass)>
  [274] setlocal 0 .............................. tFurniData = pPersistentFurniData.getPropsByClass("i", pClass)
  [276] getlocal 0 .............................. <tFurniData>
  [278] pusharglist 1 ........................... <tFurniData>
  [280] extcall 31 .............................. <voidp(tFurniData)>
  [282] not ..................................... <not voidp(tFurniData)>
  [283] jmpifz [309] ............................ if not voidp(tFurniData) then / else
  [286] getlocal 0 .............................. <tFurniData>
  [288] pushsymb 161 ............................ <#localizedName>
  [290] pusharglist 2 ........................... <tFurniData, #localizedName>
  [292] objcall 50 .............................. <tFurniData[#localizedName]>
  [294] setprop 103 ............................. pName = tFurniData[#localizedName]
  [296] getlocal 0 .............................. <tFurniData>
  [298] pushsymb 163 ............................ <#localizedDesc>
  [300] pusharglist 2 ........................... <tFurniData, #localizedDesc>
  [302] objcall 50 .............................. <tFurniData[#localizedDesc]>
  [304] setprop 104 ............................. pCustom = tFurniData[#localizedDesc]
  [306] jmp [317]
  [309] pushcons 0 .............................. <EMPTY>
  [311] setprop 103 ............................. pName = EMPTY
  [313] pushcons 0 .............................. <EMPTY>
  [315] setprop 104 ............................. pCustom = EMPTY
  [317] jmp [405]
  [320] peek 0
  [322] pushcons 9 .............................. <"photo">
  [324] eq
  [325] jmpifz [405] ............................ (case) "photo":
  [328] getprop 116 ............................. <pPersistentFurniData>
  [330] pushcons 8 .............................. <"i">
  [332] getprop 102 ............................. <pClass>
  [334] pusharglist 3 ........................... <pPersistentFurniData, "i", pClass>
  [336] objcall 159 ............................. <pPersistentFurniData.getPropsByClass("i", pClass)>
  [338] setlocal 0 .............................. tFurniData = pPersistentFurniData.getPropsByClass("i", pClass)
  [340] getlocal 0 .............................. <tFurniData>
  [342] pusharglist 1 ........................... <tFurniData>
  [344] extcall 31 .............................. <voidp(tFurniData)>
  [346] not ..................................... <not voidp(tFurniData)>
  [347] jmpifz [389] ............................ if not voidp(tFurniData) then / else
  [350] getprop 116 ............................. <pPersistentFurniData>
  [352] pushcons 8 .............................. <"i">
  [354] getprop 102 ............................. <pClass>
  [356] pusharglist 3 ........................... <pPersistentFurniData, "i", pClass>
  [358] objcall 159 ............................. <pPersistentFurniData.getPropsByClass("i", pClass)>
  [360] pushsymb 161 ............................ <#localizedName>
  [362] pusharglist 2 ........................... <pPersistentFurniData.getPropsByClass("i", pClass), #localizedName>
  [364] objcall 50 .............................. <pPersistentFurniData.getPropsByClass("i", pClass)[#localizedName]>
  [366] setprop 103 ............................. pName = pPersistentFurniData.getPropsByClass("i", pClass)[#localizedName]
  [368] getprop 116 ............................. <pPersistentFurniData>
  [370] pushcons 8 .............................. <"i">
  [372] getprop 102 ............................. <pClass>
  [374] pusharglist 3 ........................... <pPersistentFurniData, "i", pClass>
  [376] objcall 159 ............................. <pPersistentFurniData.getPropsByClass("i", pClass)>
  [378] pushsymb 163 ............................ <#localizedDesc>
  [380] pusharglist 2 ........................... <pPersistentFurniData.getPropsByClass("i", pClass), #localizedDesc>
  [382] objcall 50 .............................. <pPersistentFurniData.getPropsByClass("i", pClass)[#localizedDesc]>
  [384] setprop 104 ............................. pCustom = pPersistentFurniData.getPropsByClass("i", pClass)[#localizedDesc]
  [386] jmp [405]
  [389] pushcons 10 ............................. <"wallitem_photo_name">
  [391] pusharglist 1 ........................... <"wallitem_photo_name">
  [393] extcall 164 ............................. <getText("wallitem_photo_name")>
  [395] setprop 103 ............................. pName = getText("wallitem_photo_name")
  [397] pushcons 11 ............................. <"wallitem_photo_desc">
  [399] pusharglist 1 ........................... <"wallitem_photo_desc">
  [401] extcall 164 ............................. <getText("wallitem_photo_desc")>
  [403] setprop 104 ............................. pCustom = getText("wallitem_photo_desc")
  [405] pop 1 ................................... end case
  [407] getparam 0 .............................. <me>
  [409] pusharglist 1 ........................... <me>
  [411] objcall 100 ............................. <me.solveMembers()>
  [413] pushzero ................................ <0>
  [414] eq ...................................... <me.solveMembers() = 0>
  [415] jmpifz [423] ............................ if me.solveMembers() = 0 then
  [418] pushzero ................................ <0>
  [419] pusharglistnoret 1 ...................... <0>
  [421] extcall 14 .............................. return 0
  [423] getparam 0 .............................. <me>
  [425] getparam 1 .............................. <tProps>
  [427] pusharglist 2 ........................... <me, tProps>
  [429] objcall 92 .............................. <me.prepare(tProps)>
  [431] pushzero ................................ <0>
  [432] eq ...................................... <me.prepare(tProps) = 0>
  [433] jmpifz [441] ............................ if me.prepare(tProps) = 0 then
  [436] pushzero ................................ <0>
  [437] pusharglistnoret 1 ...................... <0>
  [439] extcall 14 .............................. return 0
  [441] getparam 0 .............................. <me>
  [443] pusharglistnoret 1 ...................... <me>
  [445] objcall 101 ............................. me.updateLocation()
  [447] pushint8 1 .............................. <1>
  [449] pusharglistnoret 1 ...................... <1>
  [451] extcall 14 .............................. return 1
  [453] ret
end

on getClass me
  [  0] getprop 102 ............................. <pClass>
  [  2] pusharglistnoret 1 ...................... <pClass>
  [  4] extcall 14 .............................. return pClass
  [  6] ret
end

on setDirection me, tDirection
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tDirection>
  [  4] setobjprop 106 .......................... me.pDirection = tDirection
  [  6] ret
end

on getInfo me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tInfo = [:]
  [  5] getlocal 0 .............................. <tInfo>
  [  7] pushsymb 160 ............................ <#name>
  [  9] getprop 103 ............................. <pName>
  [ 11] pusharglistnoret 3 ...................... <tInfo, #name, pName>
  [ 13] objcall 158 ............................. tInfo[#name] = pName
  [ 15] getlocal 0 .............................. <tInfo>
  [ 17] pushsymb 147 ............................ <#class>
  [ 19] getprop 102 ............................. <pClass>
  [ 21] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 23] objcall 158 ............................. tInfo[#class] = pClass
  [ 25] getlocal 0 .............................. <tInfo>
  [ 27] pushsymb 162 ............................ <#custom>
  [ 29] getprop 104 ............................. <pCustom>
  [ 31] pusharglistnoret 3 ...................... <tInfo, #custom, pCustom>
  [ 33] objcall 158 ............................. tInfo[#custom] = pCustom
  [ 35] getlocal 0 .............................. <tInfo>
  [ 37] pushsymb 165 ............................ <#smallmember>
  [ 39] getprop 102 ............................. <pClass>
  [ 41] pushcons 12 ............................. <"_small">
  [ 43] joinstr ................................. <pClass & "_small">
  [ 44] pusharglistnoret 3 ...................... <tInfo, #smallmember, pClass & "_small">
  [ 46] objcall 158 ............................. tInfo[#smallmember] = pClass & "_small"
  [ 48] getlocal 0 .............................. <tInfo>
  [ 50] pushsymb 153 ............................ <#expire>
  [ 52] getprop 131 ............................. <pExpireTimeStamp>
  [ 54] pusharglistnoret 3 ...................... <tInfo, #expire, pExpireTimeStamp>
  [ 56] objcall 158 ............................. tInfo[#expire] = pExpireTimeStamp
  [ 58] getprop 102 ............................. <pClass>
  [ 60] getprop 273 ............................. <pType>
  [ 63] joinpadstr .............................. <pClass && pType>
  [ 64] pushcons 12 ............................. <"_small">
  [ 66] joinstr ................................. <pClass && pType & "_small">
  [ 67] setlocal 1 .............................. tMemName = pClass && pType & "_small"
  [ 69] getprop 102 ............................. <pClass>
  [ 71] pushcons 2 .............................. <"poster">
  [ 73] eq ...................................... <pClass = "poster">
  [ 74] getlocal 1 .............................. <tMemName>
  [ 76] pusharglist 1 ........................... <tMemName>
  [ 78] extcall 26 .............................. <memberExists(tMemName)>
  [ 80] and ..................................... <(pClass = "poster") and memberExists(tMemName)>
  [ 81] jmpifz [110] ............................ if (pClass = "poster") and memberExists(tMemName) then
  [ 84] getlocal 0 .............................. <tInfo>
  [ 86] pushsymb 20 ............................. <#image>
  [ 88] getlocal 1 .............................. <tMemName>
  [ 90] pusharglist 1 ........................... <tMemName>
  [ 92] extcall 18 .............................. <getmemnum(tMemName)>
  [ 94] pusharglist 1 ........................... <getmemnum(tMemName)>
  [ 96] extcall 19 .............................. <member(getmemnum(tMemName))>
  [ 98] getobjprop 20 ........................... <member(getmemnum(tMemName)).image>
  [100] pusharglistnoret 3 ...................... <tInfo, #image, member(getmemnum(tMemName)).image>
  [102] objcall 158 ............................. tInfo[#image] = member(getmemnum(tMemName)).image
  [104] getlocal 0 .............................. <tInfo>
  [106] pusharglistnoret 1 ...................... <tInfo>
  [108] extcall 14 .............................. return tInfo
  [110] getprop 102 ............................. <pClass>
  [112] pushcons 12 ............................. <"_small">
  [114] joinstr ................................. <pClass & "_small">
  [115] pusharglist 1 ........................... <pClass & "_small">
  [117] extcall 26 .............................. <memberExists(pClass & "_small")>
  [119] jmpifz [148] ............................ if memberExists(pClass & "_small") then / else
  [122] getlocal 0 .............................. <tInfo>
  [124] pushsymb 20 ............................. <#image>
  [126] getprop 102 ............................. <pClass>
  [128] pushcons 12 ............................. <"_small">
  [130] joinstr ................................. <pClass & "_small">
  [131] pusharglist 1 ........................... <pClass & "_small">
  [133] extcall 18 .............................. <getmemnum(pClass & "_small")>
  [135] pusharglist 1 ........................... <getmemnum(pClass & "_small")>
  [137] extcall 19 .............................. <member(getmemnum(pClass & "_small"))>
  [139] getobjprop 20 ........................... <member(getmemnum(pClass & "_small")).image>
  [141] pusharglistnoret 3 ...................... <tInfo, #image, member(getmemnum(pClass & "_small")).image>
  [143] objcall 158 ............................. tInfo[#image] = member(getmemnum(pClass & "_small")).image
  [145] jmp [271]
  [148] getprop 105 ............................. <pSprList>
  [150] getobjprop 34 ........................... <pSprList.count>
  [152] pushzero ................................ <0>
  [153] gt ...................................... <pSprList.count > 0>
  [154] jmpifz [254] ............................ if pSprList.count > 0 then / else
  [157] getprop 105 ............................. <pSprList>
  [159] pushint8 1 .............................. <1>
  [161] pusharglist 2 ........................... <pSprList, 1>
  [163] objcall 50 .............................. <pSprList[1]>
  [165] getchainedprop 19 ....................... <pSprList[1].member>
  [167] getchainedprop 160 ...................... <pSprList[1].member.name>
  [169] pushsymb 23 ............................. <#char>
  [171] pushint8 1 .............................. <1>
  [173] getprop 105 ............................. <pSprList>
  [175] pushint8 1 .............................. <1>
  [177] pusharglist 2 ........................... <pSprList, 1>
  [179] objcall 50 .............................. <pSprList[1]>
  [181] getchainedprop 19 ....................... <pSprList[1].member>
  [183] getobjprop 160 .......................... <pSprList[1].member.name>
  [185] pusharglist 1 ........................... <pSprList[1].member.name>
  [187] extcall 287 ............................. <length(pSprList[1].member.name)>
  [190] pushint8 11 ............................. <11>
  [192] sub ..................................... <length(pSprList[1].member.name) - 11>
  [193] pusharglist 4 ........................... <pSprList[1].member.name, #char, 1, length(pSprList[1].member.name) - 11>
  [195] objcall 25 .............................. <pSprList[1].member.name.char[1..length(pSprList[1].member.name) - 11]>
  [197] pushcons 13 ............................. <"small">
  [199] joinstr ................................. <pSprList[1].member.name.char[1..length(pSprList[1].member.name) - 11] & "small">
  [200] setlocal 2 .............................. tTestMem2 = pSprList[1].member.name.char[1..length(pSprList[1].member.name) - 11] & "small"
  [202] getlocal 2 .............................. <tTestMem2>
  [204] pusharglist 1 ........................... <tTestMem2>
  [206] extcall 26 .............................. <memberExists(tTestMem2)>
  [208] jmpifz [231] ............................ if memberExists(tTestMem2) then / else
  [211] getlocal 0 .............................. <tInfo>
  [213] pushsymb 20 ............................. <#image>
  [215] getlocal 2 .............................. <tTestMem2>
  [217] pusharglist 1 ........................... <tTestMem2>
  [219] extcall 288 ............................. <getMember(tTestMem2)>
  [222] getobjprop 20 ........................... <getMember(tTestMem2).image>
  [224] pusharglistnoret 3 ...................... <tInfo, #image, getMember(tTestMem2).image>
  [226] objcall 158 ............................. tInfo[#image] = getMember(tTestMem2).image
  [228] jmp [251]
  [231] getlocal 0 .............................. <tInfo>
  [233] pushsymb 20 ............................. <#image>
  [235] getprop 105 ............................. <pSprList>
  [237] pushint8 1 .............................. <1>
  [239] pusharglist 2 ........................... <pSprList, 1>
  [241] objcall 50 .............................. <pSprList[1]>
  [243] getchainedprop 19 ....................... <pSprList[1].member>
  [245] getobjprop 20 ........................... <pSprList[1].member.image>
  [247] pusharglistnoret 3 ...................... <tInfo, #image, pSprList[1].member.image>
  [249] objcall 158 ............................. tInfo[#image] = pSprList[1].member.image
  [251] jmp [271]
  [254] getlocal 0 .............................. <tInfo>
  [256] pushsymb 20 ............................. <#image>
  [258] pushcons 14 ............................. <"no_icon_small">
  [260] pusharglist 1 ........................... <"no_icon_small">
  [262] extcall 288 ............................. <getMember("no_icon_small")>
  [265] getobjprop 20 ........................... <getMember("no_icon_small").image>
  [267] pusharglistnoret 3 ...................... <tInfo, #image, getMember("no_icon_small").image>
  [269] objcall 158 ............................. tInfo[#image] = getMember("no_icon_small").image
  [271] getlocal 0 .............................. <tInfo>
  [273] pusharglistnoret 1 ...................... <tInfo>
  [275] extcall 14 .............................. return tInfo
  [277] ret
end

on getLocation me
  [  0] getprop 275 ............................. <pWallX>
  [  3] getprop 276 ............................. <pWallY>
  [  6] pusharglist 2 ........................... <[pWallX, pWallY]>
  [  8] pushlist ................................ <[pWallX, pWallY]>
  [  9] pusharglistnoret 1 ...................... <[pWallX, pWallY]>
  [ 11] extcall 14 .............................. return [pWallX, pWallY]
  [ 13] ret
end

on getCustom me
  [  0] getprop 104 ............................. <pCustom>
  [  2] pusharglistnoret 1 ...................... <pCustom>
  [  4] extcall 14 .............................. return pCustom
  [  6] ret
end

on getSprites me
  [  0] getprop 105 ............................. <pSprList>
  [  2] pusharglistnoret 1 ...................... <pSprList>
  [  4] extcall 14 .............................. return pSprList
  [  6] ret
end

on select me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 14 .............................. return 1
  [  6] ret
end

on hasURL me
  [  0] pushcons 15 ............................. <"item_ad_url_">
  [  2] getprop 273 ............................. <pType>
  [  5] joinstr ................................. <"item_ad_url_" & pType>
  [  6] pusharglist 1 ........................... <"item_ad_url_" & pType>
  [  8] extcall 290 ............................. <textExists("item_ad_url_" & pType)>
  [ 11] pusharglistnoret 1 ...................... <textExists("item_ad_url_" & pType)>
  [ 13] extcall 14 .............................. return textExists("item_ad_url_" & pType)
  [ 15] ret
end

on GetUrl me
  [  0] pushcons 15 ............................. <"item_ad_url_">
  [  2] getprop 273 ............................. <pType>
  [  5] joinstr ................................. <"item_ad_url_" & pType>
  [  6] pusharglist 1 ........................... <"item_ad_url_" & pType>
  [  8] extcall 164 ............................. <getText("item_ad_url_" & pType)>
  [ 10] pusharglistnoret 1 ...................... <getText("item_ad_url_" & pType)>
  [ 12] extcall 14 .............................. return getText("item_ad_url_" & pType)
  [ 14] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 14 .............................. return 1
  [  6] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 31 .............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 16 ............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setlocal 0 .............................. pPartColors = []
  [ 18] getmovieprop 32 ......................... <the itemDelimiter>
  [ 20] setlocal 1 .............................. tDelim = the itemDelimiter
  [ 22] pushcons 17 ............................. <",">
  [ 24] setmovieprop 32 ......................... the itemDelimiter = ","
  [ 26] pushint8 1 .............................. <1>
  [ 28] setlocal 2
  [ 30] getlocal 2
  [ 32] getparam 1 .............................. <tpartColors>
  [ 34] pushsymb 33 ............................. <#item>
  [ 36] pusharglist 2 ........................... <tpartColors, #item>
  [ 38] objcall 34 .............................. <tpartColors.item.count>
  [ 40] lteq
  [ 41] jmpifz [ 73] ............................ repeat with i = 1 to tpartColors.item.count
  [ 44] getlocal 0 .............................. <pPartColors>
  [ 46] getparam 1 .............................. <tpartColors>
  [ 48] pushsymb 33 ............................. <#item>
  [ 50] getlocal 2 .............................. <i>
  [ 52] pusharglist 3 ........................... <tpartColors, #item, i>
  [ 54] objcall 25 .............................. <tpartColors.item[i]>
  [ 56] pusharglist 1 ........................... <tpartColors.item[i]>
  [ 58] extcall 35 .............................. <string(tpartColors.item[i])>
  [ 60] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[i])>
  [ 62] objcall 36 .............................. pPartColors.add(string(tpartColors.item[i]))
  [ 64] pushint8 1
  [ 66] getlocal 2
  [ 68] add
  [ 69] setlocal 2
  [ 71] endrepeat [ 30]
  [ 73] getlocal 0 .............................. <pPartColors>
  [ 75] getobjprop 34 ........................... <pPartColors.count>
  [ 77] setlocal 3
  [ 79] getlocal 3
  [ 81] pushint8 4 .............................. <4>
  [ 83] lteq
  [ 84] jmpifz [104] ............................ repeat with j = pPartColors.count to 4
  [ 87] getlocal 0 .............................. <pPartColors>
  [ 89] pushcons 18 ............................. <"*ffffff">
  [ 91] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [ 93] objcall 36 .............................. pPartColors.add("*ffffff")
  [ 95] pushint8 1
  [ 97] getlocal 3
  [ 99] add
  [100] setlocal 3
  [102] endrepeat [ 79]
  [104] getlocal 1 .............................. <tDelim>
  [106] setmovieprop 32 ......................... the itemDelimiter = tDelim
  [108] ret
end

on solveInk me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 2 .............................. tClass = pClass
  [ 13] getparam 2 .............................. <tClass>
  [ 15] pushcons 19 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushint8 8 .............................. <8>
  [ 28] pusharglistnoret 1 ...................... <8>
  [ 30] extcall 14 .............................. return 8
  [ 32] getparam 2 .............................. <tClass>
  [ 34] pushcons 19 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 47] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 49] getlocal 0 .............................. <tPropList>
  [ 51] pusharglist 1 ........................... <tPropList>
  [ 53] extcall 42 .............................. <ilk(tPropList)>
  [ 55] pushsymb 209 ............................ <#propList>
  [ 57] nteq .................................... <ilk(tPropList) <> #propList>
  [ 58] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 2 .............................. <tClass>
  [ 65] pushcons 20 ............................. <".props is not valid!">
  [ 67] joinstr ................................. <tClass & ".props is not valid!">
  [ 68] pushsymb 95 ............................. <#solveInk>
  [ 70] pushsymb 62 ............................. <#minor>
  [ 72] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #solveInk, #minor>
  [ 74] extcall 61 .............................. error(me, tClass & ".props is not valid!", #solveInk, #minor)
  [ 76] pushint8 8 .............................. <8>
  [ 78] pusharglistnoret 1 ...................... <8>
  [ 80] extcall 14 .............................. return 8
  [ 82] jmp [146]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 50 .............................. <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [100] pushint8 8 .............................. <8>
  [102] pusharglistnoret 1 ...................... <8>
  [104] extcall 14 .............................. return 8
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 50 .............................. <tPropList[tPart]>
  [114] pushsymb 66 ............................. <#ink>
  [116] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [118] objcall 50 .............................. <tPropList[tPart][#ink]>
  [120] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [122] extcall 31 .............................. <voidp(tPropList[tPart][#ink])>
  [124] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [125] jmpifz [146] ............................ if not voidp(tPropList[tPart][#ink]) then
  [128] getlocal 0 .............................. <tPropList>
  [130] getparam 1 .............................. <tPart>
  [132] pusharglist 2 ........................... <tPropList, tPart>
  [134] objcall 50 .............................. <tPropList[tPart]>
  [136] pushsymb 66 ............................. <#ink>
  [138] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [140] objcall 50 .............................. <tPropList[tPart][#ink]>
  [142] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [144] extcall 14 .............................. return tPropList[tPart][#ink]
  [146] pushint8 8 .............................. <8>
  [148] pusharglistnoret 1 ...................... <8>
  [150] extcall 14 .............................. return 8
  [152] ret
end

on solveBlend me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 2 .............................. tClass = pClass
  [ 13] getparam 2 .............................. <tClass>
  [ 15] pushcons 19 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushint8 100 ............................ <100>
  [ 28] pusharglistnoret 1 ...................... <100>
  [ 30] extcall 14 .............................. return 100
  [ 32] getparam 2 .............................. <tClass>
  [ 34] pushcons 19 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 47] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 49] getlocal 0 .............................. <tPropList>
  [ 51] pusharglist 1 ........................... <tPropList>
  [ 53] extcall 42 .............................. <ilk(tPropList)>
  [ 55] pushsymb 209 ............................ <#propList>
  [ 57] nteq .................................... <ilk(tPropList) <> #propList>
  [ 58] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 2 .............................. <tClass>
  [ 65] pushcons 20 ............................. <".props is not valid!">
  [ 67] joinstr ................................. <tClass & ".props is not valid!">
  [ 68] pushsymb 96 ............................. <#solveBlend>
  [ 70] pushsymb 62 ............................. <#minor>
  [ 72] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #solveBlend, #minor>
  [ 74] extcall 61 .............................. error(me, tClass & ".props is not valid!", #solveBlend, #minor)
  [ 76] pushint8 100 ............................ <100>
  [ 78] pusharglistnoret 1 ...................... <100>
  [ 80] extcall 14 .............................. return 100
  [ 82] jmp [146]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 50 .............................. <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [100] pushint8 100 ............................ <100>
  [102] pusharglistnoret 1 ...................... <100>
  [104] extcall 14 .............................. return 100
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 50 .............................. <tPropList[tPart]>
  [114] pushsymb 205 ............................ <#blend>
  [116] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [118] objcall 50 .............................. <tPropList[tPart][#blend]>
  [120] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [122] extcall 31 .............................. <voidp(tPropList[tPart][#blend])>
  [124] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [125] jmpifz [146] ............................ if not voidp(tPropList[tPart][#blend]) then
  [128] getlocal 0 .............................. <tPropList>
  [130] getparam 1 .............................. <tPart>
  [132] pusharglist 2 ........................... <tPropList, tPart>
  [134] objcall 50 .............................. <tPropList[tPart]>
  [136] pushsymb 205 ............................ <#blend>
  [138] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [140] objcall 50 .............................. <tPropList[tPart][#blend]>
  [142] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [144] extcall 14 .............................. return tPropList[tPart][#blend]
  [146] pushint8 100 ............................ <100>
  [148] pusharglistnoret 1 ...................... <100>
  [150] extcall 14 .............................. return 100
  [152] ret
end

on solveLocZ me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 3 .............................. tClass = pClass
  [ 13] getparam 3 .............................. <tClass>
  [ 15] pushcons 19 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 31] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 14 .............................. return 0
  [ 31] getparam 3 .............................. <tClass>
  [ 33] pushcons 19 ............................. <".props">
  [ 35] joinstr ................................. <tClass & ".props">
  [ 36] pusharglist 1 ........................... <tClass & ".props">
  [ 38] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 40] pushzero ................................ <0>
  [ 41] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 42] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 44] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 46] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 48] getlocal 0 .............................. <tPropList>
  [ 50] pusharglist 1 ........................... <tPropList>
  [ 52] extcall 42 .............................. <ilk(tPropList)>
  [ 54] pushsymb 209 ............................ <#propList>
  [ 56] nteq .................................... <ilk(tPropList) <> #propList>
  [ 57] jmpifz [ 83] ............................ if ilk(tPropList) <> #propList then / else
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 3 .............................. <tClass>
  [ 64] pushcons 20 ............................. <".props is not valid!">
  [ 66] joinstr ................................. <tClass & ".props is not valid!">
  [ 67] pushsymb 98 ............................. <#solveLocZ>
  [ 69] pushsymb 62 ............................. <#minor>
  [ 71] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #solveLocZ, #minor>
  [ 73] extcall 61 .............................. error(me, tClass & ".props is not valid!", #solveLocZ, #minor)
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 1 ...................... <0>
  [ 78] extcall 14 .............................. return 0
  [ 80] jmp [154]
  [ 83] getlocal 0 .............................. <tPropList>
  [ 85] getparam 1 .............................. <tPart>
  [ 87] pusharglist 2 ........................... <tPropList, tPart>
  [ 89] objcall 50 .............................. <tPropList[tPart]>
  [ 91] pusharglist 1 ........................... <tPropList[tPart]>
  [ 93] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 95] jmpifz [103] ............................ if voidp(tPropList[tPart]) then
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 1 ...................... <0>
  [101] extcall 14 .............................. return 0
  [103] getlocal 0 .............................. <tPropList>
  [105] getparam 1 .............................. <tPart>
  [107] pusharglist 2 ........................... <tPropList, tPart>
  [109] objcall 50 .............................. <tPropList[tPart]>
  [111] pushsymb 213 ............................ <#zshift>
  [113] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [115] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [117] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [119] extcall 31 .............................. <voidp(tPropList[tPart][#zshift])>
  [121] jmpifz [129] ............................ if voidp(tPropList[tPart][#zshift]) then
  [124] pushzero ................................ <0>
  [125] pusharglistnoret 1 ...................... <0>
  [127] extcall 14 .............................. return 0
  [129] getlocal 0 .............................. <tPropList>
  [131] getparam 1 .............................. <tPart>
  [133] pusharglist 2 ........................... <tPropList, tPart>
  [135] objcall 50 .............................. <tPropList[tPart]>
  [137] pushsymb 213 ............................ <#zshift>
  [139] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [141] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [143] getobjprop 34 ........................... <tPropList[tPart][#zshift].count>
  [145] getparam 2 .............................. <tdir>
  [147] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [148] jmpifz [154] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [151] pushzero ................................ <0>
  [152] setparam 2 .............................. tdir = 0
  [154] getlocal 0 .............................. <tPropList>
  [156] getparam 1 .............................. <tPart>
  [158] pusharglist 2 ........................... <tPropList, tPart>
  [160] objcall 50 .............................. <tPropList[tPart]>
  [162] pushsymb 213 ............................ <#zshift>
  [164] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [166] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [168] getparam 2 .............................. <tdir>
  [170] pushint8 1 .............................. <1>
  [172] add ..................................... <tdir + 1>
  [173] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [175] objcall 50 .............................. <tPropList[tPart][#zshift][tdir + 1]>
  [177] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [179] extcall 14 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [181] ret
end

on solveLocShift me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 3 .............................. tClass = pClass
  [ 13] getparam 3 .............................. <tClass>
  [ 15] pushcons 19 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 31] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 14 .............................. return 0
  [ 31] getparam 3 .............................. <tClass>
  [ 33] pushcons 19 ............................. <".props">
  [ 35] joinstr ................................. <tClass & ".props">
  [ 36] pusharglist 1 ........................... <tClass & ".props">
  [ 38] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 40] pushzero ................................ <0>
  [ 41] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 42] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 44] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 46] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 48] getlocal 0 .............................. <tPropList>
  [ 50] pusharglist 1 ........................... <tPropList>
  [ 52] extcall 42 .............................. <ilk(tPropList)>
  [ 54] pushsymb 209 ............................ <#propList>
  [ 56] nteq .................................... <ilk(tPropList) <> #propList>
  [ 57] jmpifz [ 83] ............................ if ilk(tPropList) <> #propList then / else
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 3 .............................. <tClass>
  [ 64] pushcons 20 ............................. <".props is not valid!">
  [ 66] joinstr ................................. <tClass & ".props is not valid!">
  [ 67] pushsymb 99 ............................. <#solveLocShift>
  [ 69] pushsymb 62 ............................. <#minor>
  [ 71] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #solveLocShift, #minor>
  [ 73] extcall 61 .............................. error(me, tClass & ".props is not valid!", #solveLocShift, #minor)
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 1 ...................... <0>
  [ 78] extcall 14 .............................. return 0
  [ 80] jmp [203]
  [ 83] getlocal 0 .............................. <tPropList>
  [ 85] getparam 1 .............................. <tPart>
  [ 87] pusharglist 2 ........................... <tPropList, tPart>
  [ 89] objcall 50 .............................. <tPropList[tPart]>
  [ 91] pusharglist 1 ........................... <tPropList[tPart]>
  [ 93] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 95] jmpifz [103] ............................ if voidp(tPropList[tPart]) then
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 1 ...................... <0>
  [101] extcall 14 .............................. return 0
  [103] getlocal 0 .............................. <tPropList>
  [105] getparam 1 .............................. <tPart>
  [107] pusharglist 2 ........................... <tPropList, tPart>
  [109] objcall 50 .............................. <tPropList[tPart]>
  [111] pushsymb 215 ............................ <#locshift>
  [113] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [115] objcall 50 .............................. <tPropList[tPart][#locshift]>
  [117] pusharglist 1 ........................... <tPropList[tPart][#locshift]>
  [119] extcall 31 .............................. <voidp(tPropList[tPart][#locshift])>
  [121] jmpifz [129] ............................ if voidp(tPropList[tPart][#locshift]) then
  [124] pushzero ................................ <0>
  [125] pusharglistnoret 1 ...................... <0>
  [127] extcall 14 .............................. return 0
  [129] getlocal 0 .............................. <tPropList>
  [131] getparam 1 .............................. <tPart>
  [133] pusharglist 2 ........................... <tPropList, tPart>
  [135] objcall 50 .............................. <tPropList[tPart]>
  [137] pushsymb 215 ............................ <#locshift>
  [139] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [141] objcall 50 .............................. <tPropList[tPart][#locshift]>
  [143] getobjprop 34 ........................... <tPropList[tPart][#locshift].count>
  [145] getparam 2 .............................. <tdir>
  [147] lteq .................................... <tPropList[tPart][#locshift].count <= tdir>
  [148] jmpifz [156] ............................ if tPropList[tPart][#locshift].count <= tdir then
  [151] pushzero ................................ <0>
  [152] pusharglistnoret 1 ...................... <0>
  [154] extcall 14 .............................. return 0
  [156] getlocal 0 .............................. <tPropList>
  [158] getparam 1 .............................. <tPart>
  [160] pusharglist 2 ........................... <tPropList, tPart>
  [162] objcall 50 .............................. <tPropList[tPart]>
  [164] pushsymb 215 ............................ <#locshift>
  [166] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [168] objcall 50 .............................. <tPropList[tPart][#locshift]>
  [170] getparam 2 .............................. <tdir>
  [172] pushint8 1 .............................. <1>
  [174] add ..................................... <tdir + 1>
  [175] pusharglist 2 ........................... <tPropList[tPart][#locshift], tdir + 1>
  [177] objcall 50 .............................. <tPropList[tPart][#locshift][tdir + 1]>
  [179] pusharglist 1 ........................... <tPropList[tPart][#locshift][tdir + 1]>
  [181] extcall 208 ............................. <value(tPropList[tPart][#locshift][tdir + 1])>
  [183] setlocal 1 .............................. tShift = value(tPropList[tPart][#locshift][tdir + 1])
  [185] getlocal 1 .............................. <tShift>
  [187] pusharglist 1 ........................... <tShift>
  [189] extcall 42 .............................. <ilk(tShift)>
  [191] pushsymb 43 ............................. <#point>
  [193] eq ...................................... <ilk(tShift) = #point>
  [194] jmpifz [203] ............................ if ilk(tShift) = #point then
  [197] getlocal 1 .............................. <tShift>
  [199] pusharglistnoret 1 ...................... <tShift>
  [201] extcall 14 .............................. return tShift
  [203] pushzero ................................ <0>
  [204] pusharglistnoret 1 ...................... <0>
  [206] extcall 14 .............................. return 0
  [208] ret
end

on solveMembers me
  [  0] getprop 102 ............................. <pClass>
  [  2] peek 0 .................................. case pClass of
  [  4] pushcons 7 .............................. <"post.it">
  [  6] nteq
  [  7] jmpifz [ 18] ............................ (case) "post.it", ...
  [ 10] peek 0
  [ 12] pushcons 6 .............................. <"post.it.vd">
  [ 14] eq
  [ 15] jmpifz [ 28] ............................ (case) ..., "post.it.vd":
  [ 18] getprop 106 ............................. <pDirection>
  [ 20] getprop 102 ............................. <pClass>
  [ 22] joinpadstr .............................. <pDirection && pClass>
  [ 23] setlocal 0 .............................. tMemName = pDirection && pClass
  [ 25] jmp [ 89]
  [ 28] peek 0
  [ 30] pushcons 2 .............................. <"poster">
  [ 32] eq
  [ 33] jmpifz [ 50] ............................ (case) "poster":
  [ 36] getprop 106 ............................. <pDirection>
  [ 38] getprop 102 ............................. <pClass>
  [ 40] joinpadstr .............................. <pDirection && pClass>
  [ 41] getprop 273 ............................. <pType>
  [ 44] joinpadstr .............................. <pDirection && pClass && pType>
  [ 45] setlocal 0 .............................. tMemName = pDirection && pClass && pType
  [ 47] jmp [ 89]
  [ 50] peek 0
  [ 52] pushcons 9 .............................. <"photo">
  [ 54] eq
  [ 55] jmpifz [ 68] ............................ (case) "photo":
  [ 58] getprop 106 ............................. <pDirection>
  [ 60] getprop 102 ............................. <pClass>
  [ 62] joinpadstr .............................. <pDirection && pClass>
  [ 63] setlocal 0 .............................. tMemName = pDirection && pClass
  [ 65] jmp [ 89] ............................... (case) otherwise:
  [ 68] pop 1
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 21 ............................. <"Unknown item class:">
  [ 74] getprop 102 ............................. <pClass>
  [ 76] joinpadstr .............................. <"Unknown item class:" && pClass>
  [ 77] pushsymb 100 ............................ <#solveMembers>
  [ 79] pushsymb 62 ............................. <#minor>
  [ 81] pusharglist 4 ........................... <me, "Unknown item class:" && pClass, #solveMembers, #minor>
  [ 83] extcall 61 .............................. <error(me, "Unknown item class:" && pClass, #solveMembers, #minor)>
  [ 85] pusharglistnoret 1 ...................... <error(me, "Unknown item class:" && pClass, #solveMembers, #minor)>
  [ 87] extcall 14 .............................. return error(me, "Unknown item class:" && pClass, #solveMembers, #minor)
  [ 89] pop 1 ................................... end case
  [ 91] getprop 117 ............................. <pXFactor>
  [ 93] pushint8 32 ............................. <32>
  [ 95] eq ...................................... <pXFactor = 32>
  [ 96] jmpifz [106] ............................ if pXFactor = 32 then
  [ 99] pushcons 22 ............................. <"s_">
  [101] getlocal 0 .............................. <tMemName>
  [103] joinstr ................................. <"s_" & tMemName>
  [104] setlocal 0 .............................. tMemName = "s_" & tMemName
  [106] getlocal 0 .............................. <tMemName>
  [108] pusharglist 1 ........................... <tMemName>
  [110] extcall 18 .............................. <getmemnum(tMemName)>
  [112] setlocal 1 .............................. tMemNum = getmemnum(tMemName)
  [114] getlocal 1 .............................. <tMemNum>
  [116] pushzero ................................ <0>
  [117] nteq .................................... <tMemNum <> 0>
  [118] jmpifz [305] ............................ if tMemNum <> 0 then
  [121] getprop 105 ............................. <pSprList>
  [123] getobjprop 34 ........................... <pSprList.count>
  [125] pushzero ................................ <0>
  [126] eq ...................................... <pSprList.count = 0>
  [127] jmpifz [279] ............................ if pSprList.count = 0 then / else
  [130] getparam 0 .............................. <me>
  [132] pusharglist 1 ........................... <me>
  [134] objcall 140 ............................. <me.getID()>
  [136] pusharglist 1 ........................... <me.getID()>
  [138] extcall 219 ............................. <reserveSprite(me.getID())>
  [140] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [142] extcall 173 ............................. <sprite(reserveSprite(me.getID()))>
  [144] setlocal 2 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [146] pushsymb 119 ............................ <#room>
  [148] pusharglist 1 ........................... <#room>
  [150] extcall 118 ............................. <getThread(#room)>
  [152] pusharglist 1 ........................... <getThread(#room)>
  [154] objcall 120 ............................. <getThread(#room).getInterface()>
  [156] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [158] objcall 140 ............................. <getThread(#room).getInterface().getID()>
  [160] setlocal 3 .............................. tTargetID = getThread(#room).getInterface().getID()
  [162] getlocal 2 .............................. <tSpr>
  [164] getobjprop 136 .......................... <tSpr.spriteNum>
  [166] getparam 0 .............................. <me>
  [168] pusharglist 1 ........................... <me>
  [170] objcall 140 ............................. <me.getID()>
  [172] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [174] extcall 222 ............................. setEventBroker(tSpr.spriteNum, me.getID())
  [176] getlocal 1 .............................. <tMemNum>
  [178] pushint8 1 .............................. <1>
  [180] lt ...................................... <tMemNum < 1>
  [181] jmpifz [199] ............................ if tMemNum < 1 then
  [184] getlocal 1 .............................. <tMemNum>
  [186] pusharglist 1 ........................... <tMemNum>
  [188] extcall 187 ............................. <abs(tMemNum)>
  [190] setlocal 1 .............................. tMemNum = abs(tMemNum)
  [192] getlocal 2 .............................. <tSpr>
  [194] pushint8 1 .............................. <1>
  [196] setobjprop 291 .......................... tSpr.flipH = 1
  [199] getlocal 2 .............................. <tSpr>
  [201] getlocal 1 .............................. <tMemNum>
  [203] setobjprop 233 .......................... tSpr.castNum = tMemNum
  [205] getlocal 2 .............................. <tSpr>
  [207] getlocal 1 .............................. <tMemNum>
  [209] pusharglist 1 ........................... <tMemNum>
  [211] extcall 19 .............................. <member(tMemNum)>
  [213] getobjprop 47 ........................... <member(tMemNum).width>
  [215] setobjprop 47 ........................... tSpr.width = member(tMemNum).width
  [217] getlocal 2 .............................. <tSpr>
  [219] getlocal 1 .............................. <tMemNum>
  [221] pusharglist 1 ........................... <tMemNum>
  [223] extcall 19 .............................. <member(tMemNum)>
  [225] getobjprop 48 ........................... <member(tMemNum).height>
  [227] setobjprop 48 ........................... tSpr.height = member(tMemNum).height
  [229] getlocal 2 .............................. <tSpr>
  [231] pushsymb 292 ............................ <#eventProcItemObj>
  [234] getlocal 3 .............................. <tTargetID>
  [236] pushsymb 224 ............................ <#mouseDown>
  [238] pusharglistnoret 4 ...................... <tSpr, #eventProcItemObj, tTargetID, #mouseDown>
  [240] objcall 225 ............................. tSpr.registerProcedure(#eventProcItemObj, tTargetID, #mouseDown)
  [242] getlocal 2 .............................. <tSpr>
  [244] pushsymb 293 ............................ <#eventProcItemRollOver>
  [247] getlocal 3 .............................. <tTargetID>
  [249] pushsymb 227 ............................ <#mouseEnter>
  [251] pusharglistnoret 4 ...................... <tSpr, #eventProcItemRollOver, tTargetID, #mouseEnter>
  [253] objcall 225 ............................. tSpr.registerProcedure(#eventProcItemRollOver, tTargetID, #mouseEnter)
  [255] getlocal 2 .............................. <tSpr>
  [257] pushsymb 293 ............................ <#eventProcItemRollOver>
  [260] getlocal 3 .............................. <tTargetID>
  [262] pushsymb 228 ............................ <#mouseLeave>
  [264] pusharglistnoret 4 ...................... <tSpr, #eventProcItemRollOver, tTargetID, #mouseLeave>
  [266] objcall 225 ............................. tSpr.registerProcedure(#eventProcItemRollOver, tTargetID, #mouseLeave)
  [268] getprop 105 ............................. <pSprList>
  [270] getlocal 2 .............................. <tSpr>
  [272] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [274] objcall 36 .............................. pSprList.add(tSpr)
  [276] jmp [289]
  [279] getprop 105 ............................. <pSprList>
  [281] pushint8 1 .............................. <1>
  [283] pusharglist 2 ........................... <pSprList, 1>
  [285] objcall 50 .............................. <pSprList[1]>
  [287] setlocal 2 .............................. tSpr = pSprList[1]
  [289] getparam 0 .............................. <me>
  [291] getprop 273 ............................. <pType>
  [294] pusharglistnoret 2 ...................... <me, pType>
  [296] objcall 272 ............................. me.updateColor(pType)
  [299] pushint8 1 .............................. <1>
  [301] pusharglistnoret 1 ...................... <1>
  [303] extcall 14 .............................. return 1
  [305] pushzero ................................ <0>
  [306] pusharglistnoret 1 ...................... <0>
  [308] extcall 14 .............................. return 0
  [310] ret
end

on setState me, tValue
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tValue>
  [  4] pusharglistnoret 2 ...................... <me, tValue>
  [  6] objcall 272 ............................. me.updateColor(tValue)
  [  9] ret
end

on updateColor me, tHexstr
  [  0] getprop 105 ............................. <pSprList>
  [  2] pusharglist 1 ........................... <pSprList>
  [  4] extcall 125 ............................. <listp(pSprList)>
  [  6] not ..................................... <not listp(pSprList)>
  [  7] jmpifz [ 15] ............................ if not listp(pSprList) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 14 .............................. return 0
  [ 15] getprop 105 ............................. <pSprList>
  [ 17] getobjprop 34 ........................... <pSprList.count>
  [ 19] pushint8 1 .............................. <1>
  [ 21] lt ...................................... <pSprList.count < 1>
  [ 22] jmpifz [ 30] ............................ if pSprList.count < 1 then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 14 .............................. return 0
  [ 30] getprop 105 ............................. <pSprList>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pusharglist 2 ........................... <pSprList, 1>
  [ 36] objcall 50 .............................. <pSprList[1]>
  [ 38] setlocal 0 .............................. tSpr = pSprList[1]
  [ 40] getlocal 0 .............................. <tSpr>
  [ 42] pushint8 8 .............................. <8>
  [ 44] setobjprop 66 ........................... tSpr.ink = 8
  [ 46] getprop 102 ............................. <pClass>
  [ 48] pushcons 7 .............................. <"post.it">
  [ 50] eq ...................................... <pClass = "post.it">
  [ 51] jmpifz [ 91] ............................ if pClass = "post.it" then / else
  [ 54] getparam 1 .............................. <tHexstr>
  [ 56] pushcons 0 .............................. <EMPTY>
  [ 58] eq ...................................... <tHexstr = EMPTY>
  [ 59] jmpifz [ 66] ............................ if tHexstr = EMPTY then
  [ 62] pushcons 23 ............................. <"#FFFF33">
  [ 64] setparam 1 .............................. tHexstr = "#FFFF33"
  [ 66] getlocal 0 .............................. <tSpr>
  [ 68] getparam 1 .............................. <tHexstr>
  [ 70] pusharglist 1 ........................... <tHexstr>
  [ 72] extcall 65 .............................. <rgb(tHexstr)>
  [ 74] setobjprop 67 ........................... tSpr.bgColor = rgb(tHexstr)
  [ 76] getlocal 0 .............................. <tSpr>
  [ 78] pushint16 255 ........................... <255>
  [ 81] pusharglist 1 ........................... <255>
  [ 83] extcall 234 ............................. <paletteIndex(255)>
  [ 85] setobjprop 295 .......................... tSpr.color = paletteIndex(255)
  [ 88] jmp [125]
  [ 91] getprop 102 ............................. <pClass>
  [ 93] pushcons 6 .............................. <"post.it.vd">
  [ 95] eq ...................................... <pClass = "post.it.vd">
  [ 96] jmpifz [125] ............................ if pClass = "post.it.vd" then
  [ 99] pushcons 24 ............................. <"FFFFFF">
  [101] setparam 1 .............................. tHexstr = "FFFFFF"
  [103] getlocal 0 .............................. <tSpr>
  [105] getparam 1 .............................. <tHexstr>
  [107] pusharglist 1 ........................... <tHexstr>
  [109] extcall 65 .............................. <rgb(tHexstr)>
  [111] setobjprop 67 ........................... tSpr.bgColor = rgb(tHexstr)
  [113] getlocal 0 .............................. <tSpr>
  [115] pushzero ................................ <0>
  [116] pushzero ................................ <0>
  [117] pushzero ................................ <0>
  [118] pusharglist 3 ........................... <0, 0, 0>
  [120] extcall 65 .............................. <rgb(0, 0, 0)>
  [122] setobjprop 295 .......................... tSpr.color = rgb(0, 0, 0)
  [125] ret
end

on updateLocation me
  [  0] getprop 279 ............................. <pFormatVer>
  [  3] peek 0 .................................. case pFormatVer of
  [  5] pushsymb 297 ............................ <#old>
  [  8] eq
  [  9] jmpifz [116] ............................ (case) #old:
  [ 12] pushsymb 119 ............................ <#room>
  [ 14] pusharglist 1 ........................... <#room>
  [ 16] extcall 118 ............................. <getThread(#room)>
  [ 18] pusharglist 1 ........................... <getThread(#room)>
  [ 20] objcall 120 ............................. <getThread(#room).getInterface()>
  [ 22] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 24] objcall 121 ............................. <getThread(#room).getInterface().getGeometry()>
  [ 26] setlocal 0 .............................. tGeometry = getThread(#room).getInterface().getGeometry()
  [ 28] getlocal 0 .............................. <tGeometry>
  [ 30] getprop 112 ............................. <pLocX>
  [ 32] getprop 113 ............................. <pLocY>
  [ 34] getprop 114 ............................. <pLocH>
  [ 36] pushfloat32 18.0 ........................ <18.0>
  [ 41] mul ..................................... <pLocH * 18.0>
  [ 42] pushfloat32 32.0 ........................ <32.0>
  [ 47] div ..................................... <pLocH * 18.0 / 32.0>
  [ 48] pusharglist 4 ........................... <tGeometry, pLocX, pLocY, pLocH * 18.0 / 32.0>
  [ 50] objcall 235 ............................. <tGeometry.getScreenCoordinate(pLocX, pLocY, pLocH * 18.0 / 32.0)>
  [ 52] setlocal 1 .............................. tScreenLocs = tGeometry.getScreenCoordinate(pLocX, pLocY, pLocH * 18.0 / 32.0)
  [ 54] getprop 105 ............................. <pSprList>
  [ 56] peek 0
  [ 58] pusharglist 1
  [ 60] extcall 34
  [ 62] pushint8 1
  [ 64] peek 0
  [ 66] peek 2
  [ 68] lteq
  [ 69] jmpifz [111] ............................ repeat with tSpr in pSprList
  [ 72] peek 2
  [ 74] peek 1
  [ 76] pusharglist 2
  [ 78] extcall 50
  [ 80] setlocal 2
  [ 82] getlocal 2 .............................. <tSpr>
  [ 84] getlocal 1 .............................. <tScreenLocs>
  [ 86] pushint8 1 .............................. <1>
  [ 88] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 90] objcall 50 .............................. <tScreenLocs[1]>
  [ 92] setobjprop 45 ........................... tSpr.locH = tScreenLocs[1]
  [ 94] getlocal 2 .............................. <tSpr>
  [ 96] getlocal 1 .............................. <tScreenLocs>
  [ 98] pushint8 2 .............................. <2>
  [100] pusharglist 2 ........................... <tScreenLocs, 2>
  [102] objcall 50 .............................. <tScreenLocs[2]>
  [104] setobjprop 46 ........................... tSpr.locV = tScreenLocs[2]
  [106] pushint8 1
  [108] add
  [109] endrepeat [ 64]
  [111] pop 3
  [113] jmp [880]
  [116] peek 0
  [118] pushsymb 298 ............................ <#new>
  [121] eq
  [122] jmpifz [880] ............................ (case) #new:
  [125] pushsymb 119 ............................ <#room>
  [127] pusharglist 1 ........................... <#room>
  [129] extcall 118 ............................. <getThread(#room)>
  [131] pusharglist 1 ........................... <getThread(#room)>
  [133] objcall 138 ............................. <getThread(#room).getComponent()>
  [135] pushsymb 59 ............................. <#list>
  [137] pusharglist 2 ........................... <getThread(#room).getComponent(), #list>
  [139] objcall 299 ............................. <getThread(#room).getComponent().getPassiveObject(#list)>
  [142] setlocal 3 .............................. tWallObjs = getThread(#room).getComponent().getPassiveObject(#list)
  [144] pushzero ................................ <0>
  [145] setlocal 4 .............................. tWallObjFound = 0
  [147] getlocal 3 .............................. <tWallObjs>
  [149] getobjprop 34 ........................... <tWallObjs.count>
  [151] pushzero ................................ <0>
  [152] gt ...................................... <tWallObjs.count > 0>
  [153] jmpifz [351] ............................ if tWallObjs.count > 0 then
  [156] getlocal 3 .............................. <tWallObjs>
  [158] peek 0
  [160] pusharglist 1
  [162] extcall 34
  [164] pushint8 1
  [166] peek 0
  [168] peek 2
  [170] lteq
  [171] jmpifz [349] ............................ repeat with tWallObj in tWallObjs
  [174] peek 2
  [176] peek 1
  [178] pusharglist 2
  [180] extcall 50
  [182] setlocal 5
  [184] getlocal 5 .............................. <tWallObj>
  [186] pusharglist 1 ........................... <tWallObj>
  [188] objcall 80 .............................. <tWallObj.getLocation()>
  [190] pushint8 1 .............................. <1>
  [192] pusharglist 2 ........................... <tWallObj.getLocation(), 1>
  [194] objcall 50 .............................. <tWallObj.getLocation()[1]>
  [196] getprop 275 ............................. <pWallX>
  [199] eq ...................................... <tWallObj.getLocation()[1] = pWallX>
  [200] getlocal 5 .............................. <tWallObj>
  [202] pusharglist 1 ........................... <tWallObj>
  [204] objcall 80 .............................. <tWallObj.getLocation()>
  [206] pushint8 2 .............................. <2>
  [208] pusharglist 2 ........................... <tWallObj.getLocation(), 2>
  [210] objcall 50 .............................. <tWallObj.getLocation()[2]>
  [212] getprop 276 ............................. <pWallY>
  [215] eq ...................................... <tWallObj.getLocation()[2] = pWallY>
  [216] and ..................................... <(tWallObj.getLocation()[1] = pWallX) and (tWallObj.getLocation()[2] = pWallY)>
  [217] jmpifz [344] ............................ if (tWallObj.getLocation()[1] = pWallX) and (tWallObj.getLocation()[2] = pWallY) then
  [220] getlocal 5 .............................. <tWallObj>
  [222] pusharglist 1 ........................... <tWallObj>
  [224] objcall 82 .............................. <tWallObj.getSprites()>
  [226] setlocal 6 .............................. tWallSprites = tWallObj.getSprites()
  [228] getprop 105 ............................. <pSprList>
  [230] peek 0
  [232] pusharglist 1
  [234] extcall 34
  [236] pushint8 1
  [238] peek 0
  [240] peek 2
  [242] lteq
  [243] jmpifz [335] ............................ repeat with tSpr in pSprList
  [246] peek 2
  [248] peek 1
  [250] pusharglist 2
  [252] extcall 50
  [254] setlocal 2
  [256] getlocal 2 .............................. <tSpr>
  [258] getlocal 6 .............................. <tWallSprites>
  [260] pushint8 1 .............................. <1>
  [262] pusharglist 2 ........................... <tWallSprites, 1>
  [264] objcall 50 .............................. <tWallSprites[1]>
  [266] getobjprop 45 ........................... <tWallSprites[1].locH>
  [268] getlocal 6 .............................. <tWallSprites>
  [270] pushint8 1 .............................. <1>
  [272] pusharglist 2 ........................... <tWallSprites, 1>
  [274] objcall 50 .............................. <tWallSprites[1]>
  [276] getchainedprop 19 ....................... <tWallSprites[1].member>
  [278] pushsymb 63 ............................. <#regPoint>
  [280] pushint8 1 .............................. <1>
  [282] pusharglist 3 ........................... <tWallSprites[1].member, #regPoint, 1>
  [284] objcall 25 .............................. <tWallSprites[1].member.regPoint[1]>
  [286] sub ..................................... <tWallSprites[1].locH - tWallSprites[1].member.regPoint[1]>
  [287] getprop 277 ............................. <pLocalX>
  [290] add ..................................... <tWallSprites[1].locH - tWallSprites[1].member.regPoint[1] + pLocalX>
  [291] setobjprop 45 ........................... tSpr.locH = tWallSprites[1].locH - tWallSprites[1].member.regPoint[1] + pLocalX
  [293] getlocal 2 .............................. <tSpr>
  [295] getlocal 6 .............................. <tWallSprites>
  [297] pushint8 1 .............................. <1>
  [299] pusharglist 2 ........................... <tWallSprites, 1>
  [301] objcall 50 .............................. <tWallSprites[1]>
  [303] getobjprop 46 ........................... <tWallSprites[1].locV>
  [305] getlocal 6 .............................. <tWallSprites>
  [307] pushint8 1 .............................. <1>
  [309] pusharglist 2 ........................... <tWallSprites, 1>
  [311] objcall 50 .............................. <tWallSprites[1]>
  [313] getchainedprop 19 ....................... <tWallSprites[1].member>
  [315] pushsymb 63 ............................. <#regPoint>
  [317] pushint8 2 .............................. <2>
  [319] pusharglist 3 ........................... <tWallSprites[1].member, #regPoint, 2>
  [321] objcall 25 .............................. <tWallSprites[1].member.regPoint[2]>
  [323] sub ..................................... <tWallSprites[1].locV - tWallSprites[1].member.regPoint[2]>
  [324] getprop 278 ............................. <pLocalY>
  [327] add ..................................... <tWallSprites[1].locV - tWallSprites[1].member.regPoint[2] + pLocalY>
  [328] setobjprop 46 ........................... tSpr.locV = tWallSprites[1].locV - tWallSprites[1].member.regPoint[2] + pLocalY
  [330] pushint8 1
  [332] add
  [333] endrepeat [238]
  [335] pop 3
  [337] pushint8 1 .............................. <1>
  [339] setlocal 4 .............................. tWallObjFound = 1
  [341] jmp [349] ............................... exit repeat
  [344] pushint8 1
  [346] add
  [347] endrepeat [166]
  [349] pop 3
  [351] getlocal 4 .............................. <tWallObjFound>
  [353] not ..................................... <not tWallObjFound>
  [354] jmpifz [800] ............................ if not tWallObjFound then
  [357] pushsymb 119 ............................ <#room>
  [359] pusharglist 1 ........................... <#room>
  [361] extcall 118 ............................. <getThread(#room)>
  [363] pusharglist 1 ........................... <getThread(#room)>
  [365] objcall 120 ............................. <getThread(#room).getInterface()>
  [367] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [369] objcall 300 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [372] setlocal 7 .............................. tVisualizer = getThread(#room).getInterface().getRoomVisualizer()
  [374] getlocal 7 .............................. <tVisualizer>
  [376] pusharglist 1 ........................... <tVisualizer>
  [378] extcall 31 .............................. <voidp(tVisualizer)>
  [380] not ..................................... <not voidp(tVisualizer)>
  [381] jmpifz [800] ............................ if not voidp(tVisualizer) then
  [384] getprop 106 ............................. <pDirection>
  [386] peek 0 .................................. case pDirection of
  [388] pushcons 25 ............................. <"leftwall">
  [390] eq
  [391] jmpifz [405] ............................ (case) "leftwall":
  [394] pushsymb 301 ............................ <#wallleft>
  [397] pusharglist 1 ........................... <[#wallleft]>
  [399] pushlist ................................ <[#wallleft]>
  [400] setlocal 8 .............................. tPartTypes = [#wallleft]
  [402] jmp [421]
  [405] peek 0
  [407] pushcons 26 ............................. <"rightwall">
  [409] eq
  [410] jmpifz [421] ............................ (case) "rightwall":
  [413] pushsymb 302 ............................ <#wallright>
  [416] pusharglist 1 ........................... <[#wallright]>
  [418] pushlist ................................ <[#wallright]>
  [419] setlocal 8 .............................. tPartTypes = [#wallright]
  [421] pop 1 ................................... end case
  [423] getlocal 7 .............................. <tVisualizer>
  [425] pushsymb 303 ............................ <#layout>
  [428] pusharglist 2 ........................... <tVisualizer, #layout>
  [430] objcall 304 ............................. <tVisualizer.getProperty(#layout)>
  [433] setlocal 9 .............................. tLounge = tVisualizer.getProperty(#layout)
  [435] getlocal 9 .............................. <tLounge>
  [437] pushcons 27 ............................. <"model_a.room">
  [439] eq ...................................... <tLounge = "model_a.room">
  [440] getprop 276 ............................. <pWallY>
  [443] pushint8 1 .............................. <1>
  [445] eq ...................................... <pWallY = 1>
  [446] and ..................................... <(tLounge = "model_a.room") and (pWallY = 1)>
  [447] getprop 102 ............................. <pClass>
  [449] pushcons 7 .............................. <"post.it">
  [451] containsstr ............................. <pClass contains "post.it">
  [452] and ..................................... <(tLounge = "model_a.room") and (pWallY = 1) and (pClass contains "post.it")>
  [453] getprop 275 ............................. <pWallX>
  [456] pushzero ................................ <0>
  [457] gt ...................................... <pWallX > 0>
  [458] and ..................................... <(tLounge = "model_a.room") and (pWallY = 1) and (pClass contains "post.it") and (pWallX > 0)>
  [459] getprop 106 ............................. <pDirection>
  [461] pushcons 26 ............................. <"rightwall">
  [463] eq ...................................... <pDirection = "rightwall">
  [464] and ..................................... <(tLounge = "model_a.room") and (pWallY = 1) and (pClass contains "post.it") and (pWallX > 0) and (pDirection = "rightwall")>
  [465] jmpifz [472] ............................ if (tLounge = "model_a.room") and (pWallY = 1) and (pClass contains "post.it") and (pWallX > 0) and (pDirection = "rightwall") then
  [468] pushzero ................................ <0>
  [469] setprop 276 ............................. pWallY = 0
  [472] getlocal 7 .............................. <tVisualizer>
  [474] getprop 275 ............................. <pWallX>
  [477] getprop 276 ............................. <pWallY>
  [480] getlocal 8 .............................. <tPartTypes>
  [482] pusharglist 4 ........................... <tVisualizer, pWallX, pWallY, tPartTypes>
  [484] objcall 305 ............................. <tVisualizer.getPartAtLocation(pWallX, pWallY, tPartTypes)>
  [487] setlocal 10 ............................. tPartProps = tVisualizer.getPartAtLocation(pWallX, pWallY, tPartTypes)
  [489] getlocal 10 ............................. <tPartProps>
  [491] pusharglist 1 ........................... <tPartProps>
  [493] extcall 42 .............................. <ilk(tPartProps)>
  [495] pushsymb 209 ............................ <#propList>
  [497] eq ...................................... <ilk(tPartProps) = #propList>
  [498] jmpifz [800] ............................ if ilk(tPartProps) = #propList then
  [501] pushint8 1 .............................. <1>
  [503] setlocal 4 .............................. tWallObjFound = 1
  [505] getprop 105 ............................. <pSprList>
  [507] peek 0
  [509] pusharglist 1
  [511] extcall 34
  [513] pushint8 1
  [515] peek 0
  [517] peek 2
  [519] lteq
  [520] jmpifz [787] ............................ repeat with tSpr in pSprList
  [523] peek 2
  [525] peek 1
  [527] pusharglist 2
  [529] extcall 50
  [531] setlocal 2
  [533] getlocal 10 ............................. <tPartProps>
  [535] getobjprop 19 ........................... <tPartProps.member>
  [537] pusharglist 1 ........................... <tPartProps.member>
  [539] extcall 18 .............................. <getmemnum(tPartProps.member)>
  [541] pusharglist 1 ........................... <getmemnum(tPartProps.member)>
  [543] extcall 19 .............................. <member(getmemnum(tPartProps.member))>
  [545] setlocal 11 ............................. tMem = member(getmemnum(tPartProps.member))
  [547] pushzero ................................ <0>
  [548] setlocal 12 ............................. tFixNegativeLoc = 0
  [550] getlocal 9 .............................. <tLounge>
  [552] pushcons 28 ............................. <"model_b.room">
  [554] eq ...................................... <tLounge = "model_b.room">
  [555] jmpifz [587] ............................ if tLounge = "model_b.room" then / else
  [558] getprop 275 ............................. <pWallX>
  [561] pushint8 4 .............................. <4>
  [563] eq ...................................... <pWallX = 4>
  [564] getprop 276 ............................. <pWallY>
  [567] pushint8 4 .............................. <4>
  [569] eq ...................................... <pWallY = 4>
  [570] and ..................................... <(pWallX = 4) and (pWallY = 4)>
  [571] getprop 277 ............................. <pLocalX>
  [574] pushzero ................................ <0>
  [575] lt ...................................... <pLocalX < 0>
  [576] and ..................................... <(pWallX = 4) and (pWallY = 4) and (pLocalX < 0)>
  [577] jmpifz [584] ............................ if (pWallX = 4) and (pWallY = 4) and (pLocalX < 0) then
  [580] pushint8 1 .............................. <1>
  [582] setlocal 12 ............................. tFixNegativeLoc = 1
  [584] jmp [721]
  [587] getlocal 9 .............................. <tLounge>
  [589] pushcons 29 ............................. <"model_f.room">
  [591] eq ...................................... <tLounge = "model_f.room">
  [592] jmpifz [650] ............................ if tLounge = "model_f.room" then / else
  [595] getprop 275 ............................. <pWallX>
  [598] pushint8 2 .............................. <2>
  [600] eq ...................................... <pWallX = 2>
  [601] getprop 276 ............................. <pWallY>
  [604] pushint8 6 .............................. <6>
  [606] eq ...................................... <pWallY = 6>
  [607] and ..................................... <(pWallX = 2) and (pWallY = 6)>
  [608] getprop 277 ............................. <pLocalX>
  [611] pushzero ................................ <0>
  [612] lt ...................................... <pLocalX < 0>
  [613] and ..................................... <(pWallX = 2) and (pWallY = 6) and (pLocalX < 0)>
  [614] jmpifz [621] ............................ if (pWallX = 2) and (pWallY = 6) and (pLocalX < 0) then
  [617] pushint8 1 .............................. <1>
  [619] setlocal 12 ............................. tFixNegativeLoc = 1
  [621] getprop 275 ............................. <pWallX>
  [624] pushint8 6 .............................. <6>
  [626] eq ...................................... <pWallX = 6>
  [627] getprop 276 ............................. <pWallY>
  [630] pushint8 2 .............................. <2>
  [632] eq ...................................... <pWallY = 2>
  [633] and ..................................... <(pWallX = 6) and (pWallY = 2)>
  [634] getprop 277 ............................. <pLocalX>
  [637] pushzero ................................ <0>
  [638] lt ...................................... <pLocalX < 0>
  [639] and ..................................... <(pWallX = 6) and (pWallY = 2) and (pLocalX < 0)>
  [640] jmpifz [647] ............................ if (pWallX = 6) and (pWallY = 2) and (pLocalX < 0) then
  [643] pushint8 1 .............................. <1>
  [645] setlocal 12 ............................. tFixNegativeLoc = 1
  [647] jmp [721]
  [650] getlocal 9 .............................. <tLounge>
  [652] pushcons 30 ............................. <"model_g.room">
  [654] eq ...................................... <tLounge = "model_g.room">
  [655] jmpifz [687] ............................ if tLounge = "model_g.room" then / else
  [658] getprop 275 ............................. <pWallX>
  [661] pushint8 6 .............................. <6>
  [663] eq ...................................... <pWallX = 6>
  [664] getprop 276 ............................. <pWallY>
  [667] pushint8 4 .............................. <4>
  [669] eq ...................................... <pWallY = 4>
  [670] and ..................................... <(pWallX = 6) and (pWallY = 4)>
  [671] getprop 277 ............................. <pLocalX>
  [674] pushzero ................................ <0>
  [675] lt ...................................... <pLocalX < 0>
  [676] and ..................................... <(pWallX = 6) and (pWallY = 4) and (pLocalX < 0)>
  [677] jmpifz [684] ............................ if (pWallX = 6) and (pWallY = 4) and (pLocalX < 0) then
  [680] pushint8 1 .............................. <1>
  [682] setlocal 12 ............................. tFixNegativeLoc = 1
  [684] jmp [721]
  [687] getlocal 9 .............................. <tLounge>
  [689] pushcons 31 ............................. <"model_h.room">
  [691] eq ...................................... <tLounge = "model_h.room">
  [692] jmpifz [721] ............................ if tLounge = "model_h.room" then
  [695] getprop 275 ............................. <pWallX>
  [698] pushint8 4 .............................. <4>
  [700] eq ...................................... <pWallX = 4>
  [701] getprop 276 ............................. <pWallY>
  [704] pushint8 8 .............................. <8>
  [706] eq ...................................... <pWallY = 8>
  [707] and ..................................... <(pWallX = 4) and (pWallY = 8)>
  [708] getprop 277 ............................. <pLocalX>
  [711] pushzero ................................ <0>
  [712] lt ...................................... <pLocalX < 0>
  [713] and ..................................... <(pWallX = 4) and (pWallY = 8) and (pLocalX < 0)>
  [714] jmpifz [721] ............................ if (pWallX = 4) and (pWallY = 8) and (pLocalX < 0) then
  [717] pushint8 1 .............................. <1>
  [719] setlocal 12 ............................. tFixNegativeLoc = 1
  [721] getlocal 12 ............................. <tFixNegativeLoc>
  [723] jmpifz [735] ............................ if tFixNegativeLoc then
  [726] pushint8 32 ............................. <32>
  [728] getprop 277 ............................. <pLocalX>
  [731] add ..................................... <32 + pLocalX>
  [732] setprop 277 ............................. pLocalX = 32 + pLocalX
  [735] getlocal 2 .............................. <tSpr>
  [737] getlocal 10 ............................. <tPartProps>
  [739] getobjprop 45 ........................... <tPartProps.locH>
  [741] getlocal 11 ............................. <tMem>
  [743] pushsymb 63 ............................. <#regPoint>
  [745] pushint8 1 .............................. <1>
  [747] pusharglist 3 ........................... <tMem, #regPoint, 1>
  [749] objcall 25 .............................. <tMem.regPoint[1]>
  [751] sub ..................................... <tPartProps.locH - tMem.regPoint[1]>
  [752] getprop 277 ............................. <pLocalX>
  [755] add ..................................... <tPartProps.locH - tMem.regPoint[1] + pLocalX>
  [756] setobjprop 45 ........................... tSpr.locH = tPartProps.locH - tMem.regPoint[1] + pLocalX
  [758] getlocal 2 .............................. <tSpr>
  [760] getlocal 10 ............................. <tPartProps>
  [762] getobjprop 46 ........................... <tPartProps.locV>
  [764] getlocal 11 ............................. <tMem>
  [766] pushsymb 63 ............................. <#regPoint>
  [768] pushint8 2 .............................. <2>
  [770] pusharglist 3 ........................... <tMem, #regPoint, 2>
  [772] objcall 25 .............................. <tMem.regPoint[2]>
  [774] sub ..................................... <tPartProps.locV - tMem.regPoint[2]>
  [775] getprop 278 ............................. <pLocalY>
  [778] add ..................................... <tPartProps.locV - tMem.regPoint[2] + pLocalY>
  [779] setobjprop 46 ........................... tSpr.locV = tPartProps.locV - tMem.regPoint[2] + pLocalY
  [781] pushint8 1
  [783] add
  [784] endrepeat [515]
  [787] pop 3
  [789] getlocal 10 ............................. <tPartProps>
  [791] pushsymb 254 ............................ <#locZ>
  [793] pusharglist 2 ........................... <tPartProps, #locZ>
  [795] objcall 50 .............................. <tPartProps[#locZ]>
  [797] setprop 280 ............................. pParentWallLocZ = tPartProps[#locZ]
  [800] getprop 102 ............................. <pClass>
  [802] pushcons 7 .............................. <"post.it">
  [804] containsstr ............................. <pClass contains "post.it">
  [805] not ..................................... <not (pClass contains "post.it")>
  [806] jmpifz [880] ............................ if not (pClass contains "post.it") then
  [809] getlocal 4 .............................. <tWallObjFound>
  [811] not ..................................... <not tWallObjFound>
  [812] pushsymb 123 ............................ <#session>
  [814] pusharglist 1 ........................... <#session>
  [816] extcall 122 ............................. <getObject(#session)>
  [818] pushsymb 306 ............................ <#room_owner>
  [821] pusharglist 2 ........................... <getObject(#session), #room_owner>
  [823] objcall 124 ............................. <getObject(#session).GET(#room_owner)>
  [825] and ..................................... <not tWallObjFound and getObject(#session).GET(#room_owner)>
  [826] jmpifz [880] ............................ if not tWallObjFound and getObject(#session).GET(#room_owner) then
  [829] pushsymb 119 ............................ <#room>
  [831] pusharglist 1 ........................... <#room>
  [833] extcall 118 ............................. <getThread(#room)>
  [835] pusharglist 1 ........................... <getThread(#room)>
  [837] objcall 138 ............................. <getThread(#room).getComponent()>
  [839] setlocal 13 ............................. tComponent = getThread(#room).getComponent()
  [841] getlocal 13 ............................. <tComponent>
  [843] pushzero ................................ <0>
  [844] eq ...................................... <tComponent = 0>
  [845] not ..................................... <not (tComponent = 0)>
  [846] jmpifz [880] ............................ if not (tComponent = 0) then
  [849] getlocal 13 ............................. <tComponent>
  [851] pusharglist 1 ........................... <tComponent>
  [853] objcall 176 ............................. <tComponent.getRoomConnection()>
  [855] pushcons 32 ............................. <"ADDSTRIPITEM">
  [857] pushsymb 177 ............................ <#integer>
  [859] pushint8 1 .............................. <1>
  [861] pushsymb 177 ............................ <#integer>
  [863] getparam 0 .............................. <me>
  [865] pusharglist 1 ........................... <me>
  [867] objcall 140 ............................. <me.getID()>
  [869] pusharglist 1 ........................... <me.getID()>
  [871] extcall 177 ............................. <integer(me.getID())>
  [873] pusharglist 4 ........................... <[#integer: 1, #integer: integer(me.getID())]>
  [875] pushproplist ............................ <[#integer: 1, #integer: integer(me.getID())]>
  [876] pusharglistnoret 3 ...................... <tComponent.getRoomConnection(), "ADDSTRIPITEM", [#integer: 1, #integer: integer(me.getID())]>
  [878] objcall 178 ............................. tComponent.getRoomConnection().send("ADDSTRIPITEM", [#integer: 1, #integer: integer(me.getID())])
  [880] pop 1 ................................... end case
  [882] pushsymb 119 ............................ <#room>
  [884] pusharglist 1 ........................... <#room>
  [886] extcall 118 ............................. <getThread(#room)>
  [888] pusharglist 1 ........................... <getThread(#room)>
  [890] objcall 120 ............................. <getThread(#room).getInterface()>
  [892] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [894] objcall 307 ............................. <getThread(#room).getInterface().getObjectMover()>
  [897] setlocal 14 ............................. tObjMover = getThread(#room).getInterface().getObjectMover()
  [899] getprop 280 ............................. <pParentWallLocZ>
  [902] pusharglist 1 ........................... <pParentWallLocZ>
  [904] extcall 31 .............................. <voidp(pParentWallLocZ)>
  [906] not ..................................... <not voidp(pParentWallLocZ)>
  [907] jmpifz [956] ............................ if not voidp(pParentWallLocZ) then / else
  [910] pushint8 1 .............................. <1>
  [912] setlocal 15
  [914] getlocal 15
  [916] getprop 105 ............................. <pSprList>
  [918] getobjprop 34 ........................... <pSprList.count>
  [920] lteq
  [921] jmpifz [953] ............................ repeat with i = 1 to pSprList.count
  [924] getprop 105 ............................. <pSprList>
  [926] getlocal 15 ............................. <i>
  [928] pusharglist 2 ........................... <pSprList, i>
  [930] objcall 50 .............................. <pSprList[i]>
  [932] getprop 280 ............................. <pParentWallLocZ>
  [935] pushint16 20000 ......................... <20000>
  [938] add ..................................... <pParentWallLocZ + 20000>
  [939] getlocal 15 ............................. <i>
  [941] add ..................................... <pParentWallLocZ + 20000 + i>
  [942] setobjprop 254 .......................... pSprList[i].locZ = pParentWallLocZ + 20000 + i
  [944] pushint8 1
  [946] getlocal 15
  [948] add
  [949] setlocal 15
  [951] endrepeat [914]
  [953] jmp [1237]
  [956] getprop 105 ............................. <pSprList>
  [958] peek 0
  [960] pusharglist 1
  [962] extcall 34
  [964] pushint8 1
  [966] peek 0
  [968] peek 2
  [970] lteq
  [971] jmpifz [1235] ........................... repeat with tSpr in pSprList
  [974] peek 2
  [976] peek 1
  [978] pusharglist 2
  [980] extcall 50
  [982] setlocal 2
  [984] getlocal 2 .............................. <tSpr>
  [986] getobjprop 19 ........................... <tSpr.member>
  [988] pushzero ................................ <0>
  [989] pushzero ................................ <0>
  [990] pusharglist 2 ........................... <0, 0>
  [992] extcall 19 .............................. <member(0, 0)>
  [994] eq ...................................... <tSpr.member = member(0, 0)>
  [995] jmpifz [1014] ........................... if tSpr.member = member(0, 0) then
  [998] getparam 0 .............................. <me>
  [1000] pushcons 33 ............................ <"Spritelist contains empty sprite!">
  [1002] pushsymb 101 ........................... <#updateLocation>
  [1004] pushsymb 62 ............................ <#minor>
  [1006] pusharglist 4 .......................... <me, "Spritelist contains empty sprite!", #updateLocation, #minor>
  [1008] extcall 61 ............................. <error(me, "Spritelist contains empty sprite!", #updateLocation, #minor)>
  [1010] pusharglistnoret 1 ..................... <error(me, "Spritelist contains empty sprite!", #updateLocation, #minor)>
  [1012] extcall 14 ............................. return error(me, "Spritelist contains empty sprite!", #updateLocation, #minor)
  [1014] getlocal 2 ............................. <tSpr>
  [1016] getchainedprop 19 ...................... <tSpr.member>
  [1018] getobjprop 63 .......................... <tSpr.member.regPoint>
  [1020] setlocal 16 ............................ tItemRp = tSpr.member.regPoint
  [1022] getlocal 2 ............................. <tSpr>
  [1024] getobjprop 45 .......................... <tSpr.locH>
  [1026] getlocal 2 ............................. <tSpr>
  [1028] getobjprop 46 .......................... <tSpr.locV>
  [1030] getlocal 2 ............................. <tSpr>
  [1032] getobjprop 45 .......................... <tSpr.locH>
  [1034] getlocal 2 ............................. <tSpr>
  [1036] getobjprop 46 .......................... <tSpr.locV>
  [1038] pusharglist 4 .......................... <tSpr.locH, tSpr.locV, tSpr.locH, tSpr.locV>
  [1040] extcall 44 ............................. <rect(tSpr.locH, tSpr.locV, tSpr.locH, tSpr.locV)>
  [1042] getlocal 16 ............................ <tItemRp>
  [1044] pushint8 1 ............................. <1>
  [1046] pusharglist 2 .......................... <tItemRp, 1>
  [1048] objcall 50 ............................. <tItemRp[1]>
  [1050] inv .................................... <-tItemRp[1]>
  [1051] getlocal 16 ............................ <tItemRp>
  [1053] pushint8 2 ............................. <2>
  [1055] pusharglist 2 .......................... <tItemRp, 2>
  [1057] objcall 50 ............................. <tItemRp[2]>
  [1059] inv .................................... <-tItemRp[2]>
  [1060] getlocal 2 ............................. <tSpr>
  [1062] getchainedprop 19 ...................... <tSpr.member>
  [1064] getobjprop 47 .......................... <tSpr.member.width>
  [1066] getlocal 16 ............................ <tItemRp>
  [1068] pushint8 1 ............................. <1>
  [1070] pusharglist 2 .......................... <tItemRp, 1>
  [1072] objcall 50 ............................. <tItemRp[1]>
  [1074] sub .................................... <tSpr.member.width - tItemRp[1]>
  [1075] getlocal 2 ............................. <tSpr>
  [1077] getchainedprop 19 ...................... <tSpr.member>
  [1079] getobjprop 48 .......................... <tSpr.member.height>
  [1081] getlocal 16 ............................ <tItemRp>
  [1083] pushint8 2 ............................. <2>
  [1085] pusharglist 2 .......................... <tItemRp, 2>
  [1087] objcall 50 ............................. <tItemRp[2]>
  [1089] sub .................................... <tSpr.member.height - tItemRp[2]>
  [1090] pusharglist 4 .......................... <-tItemRp[1], -tItemRp[2], tSpr.member.width - tItemRp[1], tSpr.member.height - tItemRp[2]>
  [1092] extcall 44 ............................. <rect(-tItemRp[1], -tItemRp[2], tSpr.member.width - tItemRp[1], tSpr.member.height - tItemRp[2])>
  [1094] add .................................... <rect(tSpr.locH, tSpr.locV, tSpr.locH, tSpr.locV) + rect(-tItemRp[1], -tItemRp[2], tSpr.member.width - tItemRp[1], tSpr.member.height - tItemRp[2])>
  [1095] setlocal 17 ............................ tItemR = rect(tSpr.locH, tSpr.locV, tSpr.locH, tSpr.locV) + rect(-tItemRp[1], -tItemRp[2], tSpr.member.width - tItemRp[1], tSpr.member.height - tItemRp[2])
  [1097] getlocal 14 ............................ <tObjMover>
  [1099] getlocal 17 ............................ <tItemR>
  [1101] pusharglist 2 .......................... <tObjMover, tItemR>
  [1103] objcall 308 ............................ <tObjMover.getPassiveObjectIntersectingRect(tItemR)>
  [1106] pushint8 1 ............................. <1>
  [1108] pusharglist 2 .......................... <tObjMover.getPassiveObjectIntersectingRect(tItemR), 1>
  [1110] objcall 50 ............................. <tObjMover.getPassiveObjectIntersectingRect(tItemR)[1]>
  [1112] setlocal 18 ............................ tPieceUnderSpr = tObjMover.getPassiveObjectIntersectingRect(tItemR)[1]
  [1114] getlocal 18 ............................ <tPieceUnderSpr>
  [1116] pusharglist 1 .......................... <tPieceUnderSpr>
  [1118] extcall 309 ............................ <objectp(tPieceUnderSpr)>
  [1121] jmpifz [1214] .......................... if objectp(tPieceUnderSpr) then
  [1124] getlocal 18 ............................ <tPieceUnderSpr>
  [1126] pusharglist 1 .......................... <tPieceUnderSpr>
  [1128] objcall 82 ............................. <tPieceUnderSpr.getSprites()>
  [1130] pushint8 1 ............................. <1>
  [1132] pusharglist 2 .......................... <tPieceUnderSpr.getSprites(), 1>
  [1134] objcall 50 ............................. <tPieceUnderSpr.getSprites()[1]>
  [1136] getobjprop 254 ......................... <tPieceUnderSpr.getSprites()[1].locZ>
  [1138] setlocal 19 ............................ tlocz = tPieceUnderSpr.getSprites()[1].locZ
  [1140] getlocal 18 ............................ <tPieceUnderSpr>
  [1142] pusharglist 1 .......................... <tPieceUnderSpr>
  [1144] objcall 82 ............................. <tPieceUnderSpr.getSprites()>
  [1146] getobjprop 34 .......................... <tPieceUnderSpr.getSprites().count>
  [1148] pushint8 1 ............................. <1>
  [1150] gt ..................................... <tPieceUnderSpr.getSprites().count > 1>
  [1151] jmpifz [1202] .......................... if tPieceUnderSpr.getSprites().count > 1 then
  [1154] getlocal 18 ............................ <tPieceUnderSpr>
  [1156] pusharglist 1 .......................... <tPieceUnderSpr>
  [1158] objcall 82 ............................. <tPieceUnderSpr.getSprites()>
  [1160] pushint8 2 ............................. <2>
  [1162] pusharglist 2 .......................... <tPieceUnderSpr.getSprites(), 2>
  [1164] objcall 50 ............................. <tPieceUnderSpr.getSprites()[2]>
  [1166] getobjprop 254 ......................... <tPieceUnderSpr.getSprites()[2].locZ>
  [1168] getlocal 18 ............................ <tPieceUnderSpr>
  [1170] pusharglist 1 .......................... <tPieceUnderSpr>
  [1172] objcall 82 ............................. <tPieceUnderSpr.getSprites()>
  [1174] pushint8 1 ............................. <1>
  [1176] pusharglist 2 .......................... <tPieceUnderSpr.getSprites(), 1>
  [1178] objcall 50 ............................. <tPieceUnderSpr.getSprites()[1]>
  [1180] getobjprop 254 ......................... <tPieceUnderSpr.getSprites()[1].locZ>
  [1182] gt ..................................... <tPieceUnderSpr.getSprites()[2].locZ > tPieceUnderSpr.getSprites()[1].locZ>
  [1183] jmpifz [1202] .......................... if tPieceUnderSpr.getSprites()[2].locZ > tPieceUnderSpr.getSprites()[1].locZ then
  [1186] getlocal 18 ............................ <tPieceUnderSpr>
  [1188] pusharglist 1 .......................... <tPieceUnderSpr>
  [1190] objcall 82 ............................. <tPieceUnderSpr.getSprites()>
  [1192] pushint8 2 ............................. <2>
  [1194] pusharglist 2 .......................... <tPieceUnderSpr.getSprites(), 2>
  [1196] objcall 50 ............................. <tPieceUnderSpr.getSprites()[2]>
  [1198] getobjprop 254 ......................... <tPieceUnderSpr.getSprites()[2].locZ>
  [1200] setlocal 19 ............................ tlocz = tPieceUnderSpr.getSprites()[2].locZ
  [1202] getlocal 2 ............................. <tSpr>
  [1204] getlocal 19 ............................ <tlocz>
  [1206] pushint8 2 ............................. <2>
  [1208] add .................................... <tlocz + 2>
  [1209] setobjprop 254 ......................... tSpr.locZ = tlocz + 2
  [1211] jmp [1229] ............................. next repeat
  [1214] getlocal 2 ............................. <tSpr>
  [1216] pushcons 34 ............................ <"window.default.locz">
  [1218] pusharglist 1 .......................... <"window.default.locz">
  [1220] extcall 310 ............................ <getIntVariable("window.default.locz")>
  [1223] pushint16 10000 ........................ <10000>
  [1226] sub .................................... <getIntVariable("window.default.locz") - 10000>
  [1227] setobjprop 254 ......................... tSpr.locZ = getIntVariable("window.default.locz") - 10000
  [1229] pushint8 1
  [1231] add
  [1232] endrepeat [966]
  [1235] pop 3
  [1237] ret
end
