property pRunning, pStateCount, pTargetState

on define me, tProps
  [  0] pushzero ................................ <0>
  [  1] setprop 426 ............................. pRunning = 0
  [  4] pushzero ................................ <0>
  [  5] setprop 427 ............................. pTargetState = 0
  [  8] pushsymb 78 ............................. <#define>
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <[me]>
  [ 14] pushlist ................................ <[me]>
  [ 15] getparam 1 .............................. <tProps>
  [ 17] pusharglist 3 ........................... <#define, [me], tProps>
  [ 19] extcall 351 ............................. <callAncestor(#define, [me], tProps)>
  [ 22] setlocal 0 .............................. tRetVal = callAncestor(#define, [me], tProps)
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 336 ............................ <#pStateSequenceList>
  [ 29] pusharglist 2 ........................... <me, #pStateSequenceList>
  [ 31] objcall 34 .............................. <me.pStateSequenceList.count>
  [ 33] pushint8 2 .............................. <2>
  [ 35] sub ..................................... <me.pStateSequenceList.count - 2>
  [ 36] pushint8 3 .............................. <3>
  [ 38] div ..................................... <(me.pStateSequenceList.count - 2) / 3>
  [ 39] setprop 428 ............................. pStateCount = (me.pStateSequenceList.count - 2) / 3
  [ 42] pushint8 1 .............................. <1>
  [ 44] setprop 426 ............................. pRunning = 1
  [ 47] getlocal 0 .............................. <tRetVal>
  [ 49] pusharglistnoret 1 ...................... <tRetVal>
  [ 51] extcall 14 .............................. return tRetVal
  [ 53] ret
end

on select me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 376 .......................... <the doubleClick>
  [  5] jmpifz [ 43] ............................ if the doubleClick then
  [  8] pushsymb 119 ............................ <#room>
  [ 10] pusharglist 1 ........................... <#room>
  [ 12] extcall 118 ............................. <getThread(#room)>
  [ 14] pusharglist 1 ........................... <getThread(#room)>
  [ 16] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 18] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 20] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [ 22] pushcons 0 .............................. <"SPIN_WHEEL_OF_FORTUNE">
  [ 24] pushsymb 177 ............................ <#integer>
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 140 ............................. <me.getID()>
  [ 32] pusharglist 1 ........................... <me.getID()>
  [ 34] extcall 177 ............................. <integer(me.getID())>
  [ 36] pusharglist 2 ........................... <[#integer: integer(me.getID())]>
  [ 38] pushproplist ............................ <[#integer: integer(me.getID())]>
  [ 39] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "SPIN_WHEEL_OF_FORTUNE", [#integer: integer(me.getID())]>
  [ 41] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("SPIN_WHEEL_OF_FORTUNE", [#integer: integer(me.getID())])
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 14 .............................. return 1
  [ 49] ret
end

on update me
  [  0] getparam 0 .............................. <me>
  [  2] getchainedprop 349 ...................... <me.pIsAnimatingList>
  [  5] pushint8 1 .............................. <1>
  [  7] pusharglist 2 ........................... <me.pIsAnimatingList, 1>
  [  9] objcall 374 ............................. <me.pIsAnimatingList.findPos(1)>
  [ 12] pushzero ................................ <0>
  [ 13] eq ...................................... <me.pIsAnimatingList.findPos(1) = 0>
  [ 14] jmpifz [157] ............................ if me.pIsAnimatingList.findPos(1) = 0 then
  [ 17] getparam 0 .............................. <me>
  [ 19] getobjprop 338 .......................... <me.pState>
  [ 22] getprop 428 ............................. <pStateCount>
  [ 25] pushint8 3 .............................. <3>
  [ 27] mul ..................................... <pStateCount * 3>
  [ 28] pushint8 1 .............................. <1>
  [ 30] add ..................................... <(pStateCount * 3) + 1>
  [ 31] eq ...................................... <me.pState = ((pStateCount * 3) + 1)>
  [ 32] jmpifz [ 54] ............................ if me.pState = ((pStateCount * 3) + 1) then / else
  [ 35] getparam 0 .............................. <me>
  [ 37] getprop 428 ............................. <pStateCount>
  [ 40] pushint8 3 .............................. <3>
  [ 42] mul ..................................... <pStateCount * 3>
  [ 43] pushint8 2 .............................. <2>
  [ 45] add ..................................... <(pStateCount * 3) + 2>
  [ 46] pusharglistnoret 2 ...................... <me, (pStateCount * 3) + 2>
  [ 48] objcall 271 ............................. me.setState((pStateCount * 3) + 2)
  [ 51] jmp [157]
  [ 54] getparam 0 .............................. <me>
  [ 56] getobjprop 338 .......................... <me.pState>
  [ 59] getprop 428 ............................. <pStateCount>
  [ 62] pushint8 3 .............................. <3>
  [ 64] mul ..................................... <pStateCount * 3>
  [ 65] pushint8 2 .............................. <2>
  [ 67] add ..................................... <(pStateCount * 3) + 2>
  [ 68] eq ...................................... <me.pState = ((pStateCount * 3) + 2)>
  [ 69] jmpifz [114] ............................ if me.pState = ((pStateCount * 3) + 2) then / else
  [ 72] getprop 427 ............................. <pTargetState>
  [ 75] jmpifz [ 95] ............................ if pTargetState then / else
  [ 78] getparam 0 .............................. <me>
  [ 80] getprop 428 ............................. <pStateCount>
  [ 83] getprop 427 ............................. <pTargetState>
  [ 86] add ..................................... <pStateCount + pTargetState>
  [ 87] pusharglistnoret 2 ...................... <me, pStateCount + pTargetState>
  [ 89] objcall 271 ............................. me.setState(pStateCount + pTargetState)
  [ 92] jmp [111]
  [ 95] getparam 0 .............................. <me>
  [ 97] getprop 428 ............................. <pStateCount>
  [100] pushint8 3 .............................. <3>
  [102] mul ..................................... <pStateCount * 3>
  [103] pushint8 2 .............................. <2>
  [105] add ..................................... <(pStateCount * 3) + 2>
  [106] pusharglistnoret 2 ...................... <me, (pStateCount * 3) + 2>
  [108] objcall 271 ............................. me.setState((pStateCount * 3) + 2)
  [111] jmp [157]
  [114] getparam 0 .............................. <me>
  [116] getobjprop 338 .......................... <me.pState>
  [119] getprop 428 ............................. <pStateCount>
  [122] getprop 427 ............................. <pTargetState>
  [125] add ..................................... <pStateCount + pTargetState>
  [126] eq ...................................... <me.pState = (pStateCount + pTargetState)>
  [127] getprop 427 ............................. <pTargetState>
  [130] pushzero ................................ <0>
  [131] nteq .................................... <pTargetState <> 0>
  [132] and ..................................... <(me.pState = (pStateCount + pTargetState)) and (pTargetState <> 0)>
  [133] jmpifz [157] ............................ if (me.pState = (pStateCount + pTargetState)) and (pTargetState <> 0) then
  [136] getparam 0 .............................. <me>
  [138] getprop 428 ............................. <pStateCount>
  [141] pushint8 2 .............................. <2>
  [143] mul ..................................... <pStateCount * 2>
  [144] getprop 427 ............................. <pTargetState>
  [147] add ..................................... <(pStateCount * 2) + pTargetState>
  [148] pusharglistnoret 2 ...................... <me, (pStateCount * 2) + pTargetState>
  [150] objcall 271 ............................. me.setState((pStateCount * 2) + pTargetState)
  [153] pushzero ................................ <0>
  [154] setprop 427 ............................. pTargetState = 0
  [157] pushsymb 326 ............................ <#update>
  [160] getparam 0 .............................. <me>
  [162] pusharglist 1 ........................... <[me]>
  [164] pushlist ................................ <[me]>
  [165] pusharglist 2 ........................... <#update, [me]>
  [167] extcall 351 ............................. <callAncestor(#update, [me])>
  [170] pusharglistnoret 1 ...................... <callAncestor(#update, [me])>
  [172] extcall 14 .............................. return callAncestor(#update, [me])
  [174] ret
end

on setState me, tNewState
  [  0] getparam 1 .............................. <tNewState>
  [  2] pusharglist 1 ........................... <tNewState>
  [  4] extcall 177 ............................. <integer(tNewState)>
  [  6] setparam 1 .............................. tNewState = integer(tNewState)
  [  8] getparam 1 .............................. <tNewState>
  [ 10] pushint8 1 .............................. <1>
  [ 12] inv ..................................... <-1>
  [ 13] eq ...................................... <tNewState = -1>
  [ 14] jmpifz [ 48] ............................ if tNewState = -1 then
  [ 17] getprop 426 ............................. <pRunning>
  [ 20] jmpifz [ 37] ............................ if pRunning then / else
  [ 23] getprop 428 ............................. <pStateCount>
  [ 26] pushint8 3 .............................. <3>
  [ 28] mul ..................................... <pStateCount * 3>
  [ 29] pushint8 1 .............................. <1>
  [ 31] add ..................................... <(pStateCount * 3) + 1>
  [ 32] setparam 1 .............................. tNewState = (pStateCount * 3) + 1
  [ 34] jmp [ 48]
  [ 37] getprop 428 ............................. <pStateCount>
  [ 40] pushint8 3 .............................. <3>
  [ 42] mul ..................................... <pStateCount * 3>
  [ 43] pushint8 2 .............................. <2>
  [ 45] add ..................................... <(pStateCount * 3) + 2>
  [ 46] setparam 1 .............................. tNewState = (pStateCount * 3) + 2
  [ 48] getparam 1 .............................. <tNewState>
  [ 50] pushint8 1 .............................. <1>
  [ 52] gteq .................................... <tNewState >= 1>
  [ 53] getparam 1 .............................. <tNewState>
  [ 55] getprop 428 ............................. <pStateCount>
  [ 58] lteq .................................... <tNewState <= pStateCount>
  [ 59] and ..................................... <(tNewState >= 1) and (tNewState <= pStateCount)>
  [ 60] jmpifz [140] ............................ if (tNewState >= 1) and (tNewState <= pStateCount) then / else
  [ 63] getprop 426 ............................. <pRunning>
  [ 66] jmpifz [117] ............................ if pRunning then / else
  [ 69] getprop 427 ............................. <pTargetState>
  [ 72] pushzero ................................ <0>
  [ 73] eq ...................................... <pTargetState = 0>
  [ 74] getparam 0 .............................. <me>
  [ 76] getobjprop 338 .......................... <me.pState>
  [ 79] getprop 428 ............................. <pStateCount>
  [ 82] pushint8 3 .............................. <3>
  [ 84] mul ..................................... <pStateCount * 3>
  [ 85] pushint8 1 .............................. <1>
  [ 87] add ..................................... <(pStateCount * 3) + 1>
  [ 88] eq ...................................... <me.pState = ((pStateCount * 3) + 1)>
  [ 89] getparam 0 .............................. <me>
  [ 91] getobjprop 338 .......................... <me.pState>
  [ 94] getprop 428 ............................. <pStateCount>
  [ 97] pushint8 3 .............................. <3>
  [ 99] mul ..................................... <pStateCount * 3>
  [100] pushint8 2 .............................. <2>
  [102] add ..................................... <(pStateCount * 3) + 2>
  [103] eq ...................................... <me.pState = ((pStateCount * 3) + 2)>
  [104] or ...................................... <(me.pState = ((pStateCount * 3) + 1)) or (me.pState = ((pStateCount * 3) + 2))>
  [105] and ..................................... <(pTargetState = 0) and ((me.pState = ((pStateCount * 3) + 1)) or (me.pState = ((pStateCount * 3) + 2)))>
  [106] jmpifz [114] ............................ if (pTargetState = 0) and ((me.pState = ((pStateCount * 3) + 1)) or (me.pState = ((pStateCount * 3) + 2))) then
  [109] getparam 1 .............................. <tNewState>
  [111] setprop 427 ............................. pTargetState = tNewState
  [114] jmp [137]
  [117] pushsymb 271 ............................ <#setState>
  [120] getparam 0 .............................. <me>
  [122] pusharglist 1 ........................... <[me]>
  [124] pushlist ................................ <[me]>
  [125] getparam 1 .............................. <tNewState>
  [127] pushint8 1 .............................. <1>
  [129] sub ..................................... <tNewState - 1>
  [130] pusharglist 3 ........................... <#setState, [me], tNewState - 1>
  [132] extcall 351 ............................. <callAncestor(#setState, [me], tNewState - 1)>
  [135] setlocal 0 .............................. tRetVal = callAncestor(#setState, [me], tNewState - 1)
  [137] jmp [160]
  [140] pushsymb 271 ............................ <#setState>
  [143] getparam 0 .............................. <me>
  [145] pusharglist 1 ........................... <[me]>
  [147] pushlist ................................ <[me]>
  [148] getparam 1 .............................. <tNewState>
  [150] pushint8 1 .............................. <1>
  [152] sub ..................................... <tNewState - 1>
  [153] pusharglist 3 ........................... <#setState, [me], tNewState - 1>
  [155] extcall 351 ............................. <callAncestor(#setState, [me], tNewState - 1)>
  [158] setlocal 0 .............................. tRetVal = callAncestor(#setState, [me], tNewState - 1)
  [160] getlocal 0 .............................. <tRetVal>
  [162] pusharglistnoret 1 ...................... <tRetVal>
  [164] extcall 14 .............................. return tRetVal
  [166] ret
end
