property pStateSequenceList, pStateIndex, pState, pStateStringList, pPendingState, pLayerDataList, pFrameSequenceNumberList, pFrameNumberList, pFrameNumberList2, pLoopCountList, pFrameRepeatList, pPaletteFramesLayers, pBlendList, pInkList, pIsAnimatingList, pNameBase, pInitialized, pPseudoStates, pStateChangeActive

on deconstruct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 336 ............................. pStateSequenceList = []
  [  6] pushint8 1 .............................. <1>
  [  8] setprop 337 ............................. pStateIndex = 1
  [ 11] pushint8 1 .............................. <1>
  [ 13] setprop 338 ............................. pState = 1
  [ 16] pushint8 1 .............................. <1>
  [ 18] setprop 416 ............................. pPendingState = 1
  [ 21] pusharglist 0 ........................... <[:]>
  [ 23] pushproplist ............................ <[:]>
  [ 24] setprop 339 ............................. pLayerDataList = [:]
  [ 27] pusharglist 0 ........................... <[]>
  [ 29] pushlist ................................ <[]>
  [ 30] setprop 340 ............................. pStateStringList = []
  [ 33] pusharglist 0 ........................... <[]>
  [ 35] pushlist ................................ <[]>
  [ 36] setprop 341 ............................. pFrameSequenceNumberList = []
  [ 39] pusharglist 0 ........................... <[]>
  [ 41] pushlist ................................ <[]>
  [ 42] setprop 342 ............................. pFrameNumberList = []
  [ 45] pusharglist 0 ........................... <[]>
  [ 47] pushlist ................................ <[]>
  [ 48] setprop 343 ............................. pFrameNumberList2 = []
  [ 51] pusharglist 0 ........................... <[]>
  [ 53] pushlist ................................ <[]>
  [ 54] setprop 344 ............................. pLoopCountList = []
  [ 57] pusharglist 0 ........................... <[]>
  [ 59] pushlist ................................ <[]>
  [ 60] setprop 345 ............................. pPaletteFramesLayers = []
  [ 63] pusharglist 0 ........................... <[]>
  [ 65] pushlist ................................ <[]>
  [ 66] setprop 346 ............................. pBlendList = []
  [ 69] pusharglist 0 ........................... <[]>
  [ 71] pushlist ................................ <[]>
  [ 72] setprop 347 ............................. pInkList = []
  [ 75] pusharglist 0 ........................... <[]>
  [ 77] pushlist ................................ <[]>
  [ 78] setlocal 0 .............................. pLoczList = []
  [ 80] pusharglist 0 ........................... <[]>
  [ 82] pushlist ................................ <[]>
  [ 83] setlocal 1 .............................. pLocShiftList = []
  [ 85] pusharglist 0 ........................... <[]>
  [ 87] pushlist ................................ <[]>
  [ 88] setprop 348 ............................. pFrameRepeatList = []
  [ 91] pusharglist 0 ........................... <[]>
  [ 93] pushlist ................................ <[]>
  [ 94] setprop 349 ............................. pIsAnimatingList = []
  [ 97] pushzero ................................ <0>
  [ 98] setprop 350 ............................. pInitialized = 0
  [101] pusharglist 0 ........................... <[:]>
  [103] pushproplist ............................ <[:]>
  [104] setprop 417 ............................. pPseudoStates = [:]
  [107] pushzero ................................ <0>
  [108] setprop 418 ............................. pStateChangeActive = 0
  [111] pushsymb 1 .............................. <#deconstruct>
  [113] getparam 0 .............................. <me>
  [115] pusharglist 1 ........................... <[me]>
  [117] pushlist ................................ <[me]>
  [118] pusharglistnoret 2 ...................... <#deconstruct, [me]>
  [120] extcall 351 ............................. callAncestor(#deconstruct, [me])
  [123] ret
end

on define me, tProps
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 336 ............................. pStateSequenceList = []
  [  6] pushint8 1 .............................. <1>
  [  8] setprop 337 ............................. pStateIndex = 1
  [ 11] pushint8 1 .............................. <1>
  [ 13] setprop 338 ............................. pState = 1
  [ 16] pusharglist 0 ........................... <[:]>
  [ 18] pushproplist ............................ <[:]>
  [ 19] setprop 339 ............................. pLayerDataList = [:]
  [ 22] pusharglist 0 ........................... <[]>
  [ 24] pushlist ................................ <[]>
  [ 25] setprop 340 ............................. pStateStringList = []
  [ 28] pusharglist 0 ........................... <[]>
  [ 30] pushlist ................................ <[]>
  [ 31] setprop 341 ............................. pFrameSequenceNumberList = []
  [ 34] pusharglist 0 ........................... <[]>
  [ 36] pushlist ................................ <[]>
  [ 37] setprop 342 ............................. pFrameNumberList = []
  [ 40] pusharglist 0 ........................... <[]>
  [ 42] pushlist ................................ <[]>
  [ 43] setprop 343 ............................. pFrameNumberList2 = []
  [ 46] pusharglist 0 ........................... <[]>
  [ 48] pushlist ................................ <[]>
  [ 49] setprop 344 ............................. pLoopCountList = []
  [ 52] pusharglist 0 ........................... <[]>
  [ 54] pushlist ................................ <[]>
  [ 55] setprop 345 ............................. pPaletteFramesLayers = []
  [ 58] pusharglist 0 ........................... <[]>
  [ 60] pushlist ................................ <[]>
  [ 61] setprop 346 ............................. pBlendList = []
  [ 64] pusharglist 0 ........................... <[]>
  [ 66] pushlist ................................ <[]>
  [ 67] setprop 347 ............................. pInkList = []
  [ 70] pusharglist 0 ........................... <[]>
  [ 72] pushlist ................................ <[]>
  [ 73] setlocal 0 .............................. pLoczList = []
  [ 75] pusharglist 0 ........................... <[]>
  [ 77] pushlist ................................ <[]>
  [ 78] setlocal 1 .............................. pLocShiftList = []
  [ 80] pusharglist 0 ........................... <[]>
  [ 82] pushlist ................................ <[]>
  [ 83] setprop 348 ............................. pFrameRepeatList = []
  [ 86] pusharglist 0 ........................... <[]>
  [ 88] pushlist ................................ <[]>
  [ 89] setprop 349 ............................. pIsAnimatingList = []
  [ 92] pusharglist 0 ........................... <[:]>
  [ 94] pushproplist ............................ <[:]>
  [ 95] setprop 417 ............................. pPseudoStates = [:]
  [ 98] pushzero ................................ <0>
  [ 99] setprop 418 ............................. pStateChangeActive = 0
  [102] getparam 1 .............................. <tProps>
  [104] pushsymb 147 ............................ <#class>
  [106] pusharglist 2 ........................... <tProps, #class>
  [108] objcall 50 .............................. <tProps[#class]>
  [110] setlocal 2 .............................. tClass = tProps[#class]
  [112] pushcons 0 .............................. <"*">
  [114] getlocal 2 .............................. <tClass>
  [116] pusharglist 2 ........................... <"*", tClass>
  [118] extcall 24 .............................. <offset("*", tClass)>
  [120] setlocal 3 .............................. tOffset = offset("*", tClass)
  [122] getlocal 3 .............................. <tOffset>
  [124] pushzero ................................ <0>
  [125] gt ...................................... <tOffset > 0>
  [126] jmpifz [146] ............................ if tOffset > 0 then
  [129] getlocal 2 .............................. <tClass>
  [131] pushsymb 23 ............................. <#char>
  [133] pushint8 1 .............................. <1>
  [135] getlocal 3 .............................. <tOffset>
  [137] pushint8 1 .............................. <1>
  [139] sub ..................................... <tOffset - 1>
  [140] pusharglist 4 ........................... <tClass, #char, 1, tOffset - 1>
  [142] objcall 25 .............................. <tClass.char[1..tOffset - 1]>
  [144] setlocal 2 .............................. tClass = tClass.char[1..tOffset - 1]
  [146] getlocal 2 .............................. <tClass>
  [148] setprop 352 ............................. pNameBase = tClass
  [151] pushsymb 119 ............................ <#room>
  [153] pusharglist 1 ........................... <#room>
  [155] extcall 118 ............................. <getThread(#room)>
  [157] pusharglist 1 ........................... <getThread(#room)>
  [159] objcall 120 ............................. <getThread(#room).getInterface()>
  [161] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [163] objcall 121 ............................. <getThread(#room).getInterface().getGeometry()>
  [165] getobjprop 117 .......................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [167] pushint8 32 ............................. <32>
  [169] eq ...................................... <getThread(#room).getInterface().getGeometry().pXFactor = 32>
  [170] jmpifz [182] ............................ if getThread(#room).getInterface().getGeometry().pXFactor = 32 then
  [173] pushcons 1 .............................. <"s_">
  [175] getprop 352 ............................. <pNameBase>
  [178] joinstr ................................. <"s_" & pNameBase>
  [179] setprop 352 ............................. pNameBase = "s_" & pNameBase
  [182] getprop 352 ............................. <pNameBase>
  [185] pushcons 2 .............................. <".data">
  [187] joinstr ................................. <pNameBase & ".data">
  [188] setlocal 4 .............................. tDataName = pNameBase & ".data"
  [190] getlocal 4 .............................. <tDataName>
  [192] pusharglist 1 ........................... <tDataName>
  [194] extcall 26 .............................. <memberExists(tDataName)>
  [196] jmpifz [833] ............................ if memberExists(tDataName) then
  [199] getlocal 4 .............................. <tDataName>
  [201] pusharglist 1 ........................... <tDataName>
  [203] extcall 18 .............................. <getmemnum(tDataName)>
  [205] pusharglist 1 ........................... <getmemnum(tDataName)>
  [207] extcall 19 .............................. <member(getmemnum(tDataName))>
  [209] getobjprop 353 .......................... <member(getmemnum(tDataName)).text>
  [212] setlocal 5 .............................. tText = member(getmemnum(tDataName)).text
  [214] getlocal 5 .............................. <tText>
  [216] pushcons 3 .............................. <RETURN>
  [218] pushcons 4 .............................. <EMPTY>
  [220] pusharglist 3 ........................... <tText, RETURN, EMPTY>
  [222] extcall 354 ............................. <replaceChunks(tText, RETURN, EMPTY)>
  [225] setlocal 5 .............................. tText = replaceChunks(tText, RETURN, EMPTY)
  [227] getlocal 5 .............................. <tText>
  [229] pusharglist 1 ........................... <tText>
  [231] extcall 208 ............................. <value(tText)>
  [233] setlocal 6 .............................. tdata = value(tText)
  [235] getlocal 6 .............................. <tdata>
  [237] pusharglist 1 ........................... <tdata>
  [239] extcall 31 .............................. <voidp(tdata)>
  [241] not ..................................... <not voidp(tdata)>
  [242] jmpifz [826] ............................ if not voidp(tdata) then / else
  [245] getlocal 6 .............................. <tdata>
  [247] getobjprop 42 ........................... <tdata.ilk>
  [249] pushsymb 209 ............................ <#propList>
  [251] eq ...................................... <tdata.ilk = #propList>
  [252] jmpifz [823] ............................ if tdata.ilk = #propList then
  [255] getlocal 6 .............................. <tdata>
  [257] pushsymb 355 ............................ <#states>
  [260] pusharglist 2 ........................... <tdata, #states>
  [262] objcall 50 .............................. <tdata[#states]>
  [264] setprop 336 ............................. pStateSequenceList = tdata[#states]
  [267] getlocal 6 .............................. <tdata>
  [269] pushsymb 356 ............................ <#layers>
  [272] pusharglist 2 ........................... <tdata, #layers>
  [274] objcall 50 .............................. <tdata[#layers]>
  [276] setprop 339 ............................. pLayerDataList = tdata[#layers]
  [279] getprop 339 ............................. <pLayerDataList>
  [282] pusharglist 1 ........................... <pLayerDataList>
  [284] extcall 31 .............................. <voidp(pLayerDataList)>
  [286] jmpifz [295] ............................ if voidp(pLayerDataList) then
  [289] pusharglist 0 ........................... <[:]>
  [291] pushproplist ............................ <[:]>
  [292] setprop 339 ............................. pLayerDataList = [:]
  [295] getprop 339 ............................. <pLayerDataList>
  [298] getobjprop 34 ........................... <pLayerDataList.count>
  [300] setlocal 7
  [302] getlocal 7
  [304] pushint8 1 .............................. <1>
  [306] gteq
  [307] jmpifz [421] ............................ repeat with i = pLayerDataList.count down to 1
  [310] getprop 339 ............................. <pLayerDataList>
  [313] getlocal 7 .............................. <i>
  [315] pusharglist 2 ........................... <pLayerDataList, i>
  [317] objcall 357 ............................. <pLayerDataList.getPropAt(i)>
  [320] pusharglist 1 ........................... <pLayerDataList.getPropAt(i)>
  [322] extcall 35 .............................. <string(pLayerDataList.getPropAt(i))>
  [324] setlocal 8 .............................. tFullId = string(pLayerDataList.getPropAt(i))
  [326] getlocal 8 .............................. <tFullId>
  [328] getobjprop 287 .......................... <tFullId.length>
  [331] setlocal 9 .............................. tCount = tFullId.length
  [333] getlocal 9 .............................. <tCount>
  [335] pushint8 1 .............................. <1>
  [337] gt ...................................... <tCount > 1>
  [338] jmpifz [412] ............................ if tCount > 1 then
  [341] getprop 339 ............................. <pLayerDataList>
  [344] getlocal 7 .............................. <i>
  [346] pusharglist 2 ........................... <pLayerDataList, i>
  [348] objcall 50 .............................. <pLayerDataList[i]>
  [350] setlocal 10 ............................. tValue = pLayerDataList[i]
  [352] getprop 339 ............................. <pLayerDataList>
  [355] getlocal 7 .............................. <i>
  [357] pusharglistnoret 2 ...................... <pLayerDataList, i>
  [359] objcall 358 ............................. pLayerDataList.deleteAt(i)
  [362] pushint8 1 .............................. <1>
  [364] setlocal 11
  [366] getlocal 11
  [368] getlocal 9 .............................. <tCount>
  [370] lteq
  [371] jmpifz [412] ............................ repeat with j = 1 to tCount
  [374] getlocal 8 .............................. <tFullId>
  [376] pushsymb 23 ............................. <#char>
  [378] getlocal 11 ............................. <j>
  [380] pusharglist 3 ........................... <tFullId, #char, j>
  [382] objcall 25 .............................. <tFullId.char[j]>
  [384] pusharglist 1 ........................... <tFullId.char[j]>
  [386] extcall 359 ............................. <symbol(tFullId.char[j])>
  [389] setlocal 12 ............................. tID = symbol(tFullId.char[j])
  [391] getprop 339 ............................. <pLayerDataList>
  [394] getlocal 12 ............................. <tID>
  [396] getlocal 10 ............................. <tValue>
  [398] pusharglistnoret 3 ...................... <pLayerDataList, tID, tValue>
  [400] objcall 360 ............................. pLayerDataList.setaProp(tID, tValue)
  [403] pushint8 1
  [405] getlocal 11
  [407] add
  [408] setlocal 11
  [410] endrepeat [366]
  [412] pushint8 -1
  [414] getlocal 7
  [416] add
  [417] setlocal 7
  [419] endrepeat [302]
  [421] getprop 339 ............................. <pLayerDataList>
  [424] pusharglistnoret 1 ...................... <pLayerDataList>
  [426] objcall 361 ............................. pLayerDataList.sort()
  [429] pusharglist 0 ........................... <[:]>
  [431] pushproplist ............................ <[:]>
  [432] setlocal 13 ............................. tLayerDataList = [:]
  [434] pushint8 1 .............................. <1>
  [436] setlocal 7
  [438] getlocal 7
  [440] getprop 339 ............................. <pLayerDataList>
  [443] getobjprop 34 ........................... <pLayerDataList.count>
  [445] lteq
  [446] jmpifz [538] ............................ repeat with i = 1 to pLayerDataList.count
  [449] getprop 339 ............................. <pLayerDataList>
  [452] getlocal 7 .............................. <i>
  [454] pusharglist 2 ........................... <pLayerDataList, i>
  [456] objcall 357 ............................. <pLayerDataList.getPropAt(i)>
  [459] pusharglist 1 ........................... <pLayerDataList.getPropAt(i)>
  [461] extcall 35 .............................. <string(pLayerDataList.getPropAt(i))>
  [463] setlocal 14 ............................. tProp = string(pLayerDataList.getPropAt(i))
  [465] getlocal 14 ............................. <tProp>
  [467] pusharglist 1 ........................... <tProp>
  [469] extcall 217 ............................. <charToNum(tProp)>
  [471] pushcons 5 .............................. <"a">
  [473] pusharglist 1 ........................... <"a">
  [475] extcall 217 ............................. <charToNum("a")>
  [477] lt ...................................... <charToNum(tProp) < charToNum("a")>
  [478] jmpifz [507] ............................ if charToNum(tProp) < charToNum("a") then
  [481] pushcons 5 .............................. <"a">
  [483] pusharglist 1 ........................... <"a">
  [485] extcall 217 ............................. <charToNum("a")>
  [487] getlocal 14 ............................. <tProp>
  [489] pusharglist 1 ........................... <tProp>
  [491] extcall 217 ............................. <charToNum(tProp)>
  [493] pushcons 6 .............................. <"A">
  [495] pusharglist 1 ........................... <"A">
  [497] extcall 217 ............................. <charToNum("A")>
  [499] sub ..................................... <charToNum(tProp) - charToNum("A")>
  [500] add ..................................... <charToNum("a") + (charToNum(tProp) - charToNum("A"))>
  [501] pusharglist 1 ........................... <charToNum("a") + (charToNum(tProp) - charToNum("A"))>
  [503] extcall 218 ............................. <numToChar(charToNum("a") + (charToNum(tProp) - charToNum("A")))>
  [505] setlocal 14 ............................. tProp = numToChar(charToNum("a") + (charToNum(tProp) - charToNum("A")))
  [507] getprop 339 ............................. <pLayerDataList>
  [510] getlocal 7 .............................. <i>
  [512] pusharglist 2 ........................... <pLayerDataList, i>
  [514] objcall 50 .............................. <pLayerDataList[i]>
  [516] setlocal 15 ............................. tLayerData = pLayerDataList[i]
  [518] getlocal 13 ............................. <tLayerDataList>
  [520] getlocal 14 ............................. <tProp>
  [522] getlocal 15 ............................. <tLayerData>
  [524] pusharglistnoret 3 ...................... <tLayerDataList, tProp, tLayerData>
  [526] objcall 362 ............................. tLayerDataList.addProp(tProp, tLayerData)
  [529] pushint8 1
  [531] getlocal 7
  [533] add
  [534] setlocal 7
  [536] endrepeat [438]
  [538] getlocal 13 ............................. <tLayerDataList>
  [540] setprop 339 ............................. pLayerDataList = tLayerDataList
  [543] getprop 336 ............................. <pStateSequenceList>
  [546] pusharglist 1 ........................... <pStateSequenceList>
  [548] extcall 31 .............................. <voidp(pStateSequenceList)>
  [550] jmpifz [559] ............................ if voidp(pStateSequenceList) then
  [553] pusharglist 0 ........................... <[]>
  [555] pushlist ................................ <[]>
  [556] setprop 336 ............................. pStateSequenceList = []
  [559] getprop 340 ............................. <pStateStringList>
  [562] pusharglist 1 ........................... <pStateStringList>
  [564] extcall 31 .............................. <voidp(pStateStringList)>
  [566] jmpifz [575] ............................ if voidp(pStateStringList) then
  [569] pusharglist 0 ........................... <[]>
  [571] pushlist ................................ <[]>
  [572] setprop 340 ............................. pStateStringList = []
  [575] getparam 0 .............................. <me>
  [577] pusharglist 1 ........................... <me>
  [579] objcall 333 ............................. <me.validateStateSequenceList()>
  [582] not ..................................... <not me.validateStateSequenceList()>
  [583] jmpifz [592] ............................ if not me.validateStateSequenceList() then
  [586] pusharglist 0 ........................... <[]>
  [588] pushlist ................................ <[]>
  [589] setprop 336 ............................. pStateSequenceList = []
  [592] getlocal 6 .............................. <tdata>
  [594] pushsymb 419 ............................ <#transitions>
  [597] pusharglist 2 ........................... <tdata, #transitions>
  [599] objcall 50 .............................. <tdata[#transitions]>
  [601] pusharglist 1 ........................... <tdata[#transitions]>
  [603] extcall 31 .............................. <voidp(tdata[#transitions])>
  [605] not ..................................... <not voidp(tdata[#transitions])>
  [606] getlocal 6 .............................. <tdata>
  [608] pushsymb 420 ............................ <#transitionlayers>
  [611] pusharglist 2 ........................... <tdata, #transitionlayers>
  [613] objcall 50 .............................. <tdata[#transitionlayers]>
  [615] pusharglist 1 ........................... <tdata[#transitionlayers]>
  [617] extcall 31 .............................. <voidp(tdata[#transitionlayers])>
  [619] not ..................................... <not voidp(tdata[#transitionlayers])>
  [620] and ..................................... <not voidp(tdata[#transitions]) and not voidp(tdata[#transitionlayers])>
  [621] jmpifz [823] ............................ if not voidp(tdata[#transitions]) and not voidp(tdata[#transitionlayers]) then
  [624] getlocal 6 .............................. <tdata>
  [626] pushsymb 419 ............................ <#transitions>
  [629] pusharglist 2 ........................... <tdata, #transitions>
  [631] objcall 50 .............................. <tdata[#transitions]>
  [633] setlocal 16 ............................. tTransitionList = tdata[#transitions]
  [635] getlocal 6 .............................. <tdata>
  [637] pushsymb 420 ............................ <#transitionlayers>
  [640] pusharglist 2 ........................... <tdata, #transitionlayers>
  [642] objcall 50 .............................. <tdata[#transitionlayers]>
  [644] setlocal 17 ............................. tTransitionLayers = tdata[#transitionlayers]
  [646] pushint8 1 .............................. <1>
  [648] setlocal 7
  [650] getlocal 7
  [652] getlocal 16 ............................. <tTransitionList>
  [654] getobjprop 34 ........................... <tTransitionList.count>
  [656] lteq
  [657] jmpifz [687] ............................ repeat with i = 1 to tTransitionList.count
  [660] getprop 417 ............................. <pPseudoStates>
  [663] getlocal 7 .............................. <i>
  [665] getlocal 16 ............................. <tTransitionList>
  [667] getlocal 7 .............................. <i>
  [669] pusharglist 2 ........................... <tTransitionList, i>
  [671] objcall 50 .............................. <tTransitionList[i]>
  [673] pusharglistnoret 3 ...................... <pPseudoStates, i, tTransitionList[i]>
  [675] objcall 362 ............................. pPseudoStates.addProp(i, tTransitionList[i])
  [678] pushint8 1
  [680] getlocal 7
  [682] add
  [683] setlocal 7
  [685] endrepeat [650]
  [687] pushint8 1 .............................. <1>
  [689] setlocal 7
  [691] getlocal 7
  [693] getlocal 17 ............................. <tTransitionLayers>
  [695] getobjprop 34 ........................... <tTransitionLayers.count>
  [697] lteq
  [698] jmpifz [823] ............................ repeat with i = 1 to tTransitionLayers.count
  [701] getlocal 17 ............................. <tTransitionLayers>
  [703] getlocal 7 .............................. <i>
  [705] pusharglist 2 ........................... <tTransitionLayers, i>
  [707] objcall 357 ............................. <tTransitionLayers.getPropAt(i)>
  [710] pusharglist 1 ........................... <tTransitionLayers.getPropAt(i)>
  [712] extcall 35 .............................. <string(tTransitionLayers.getPropAt(i))>
  [714] setlocal 14 ............................. tProp = string(tTransitionLayers.getPropAt(i))
  [716] getlocal 14 ............................. <tProp>
  [718] pusharglist 1 ........................... <tProp>
  [720] extcall 217 ............................. <charToNum(tProp)>
  [722] pushcons 5 .............................. <"a">
  [724] pusharglist 1 ........................... <"a">
  [726] extcall 217 ............................. <charToNum("a")>
  [728] lt ...................................... <charToNum(tProp) < charToNum("a")>
  [729] jmpifz [758] ............................ if charToNum(tProp) < charToNum("a") then
  [732] pushcons 5 .............................. <"a">
  [734] pusharglist 1 ........................... <"a">
  [736] extcall 217 ............................. <charToNum("a")>
  [738] getlocal 14 ............................. <tProp>
  [740] pusharglist 1 ........................... <tProp>
  [742] extcall 217 ............................. <charToNum(tProp)>
  [744] pushcons 6 .............................. <"A">
  [746] pusharglist 1 ........................... <"A">
  [748] extcall 217 ............................. <charToNum("A")>
  [750] sub ..................................... <charToNum(tProp) - charToNum("A")>
  [751] add ..................................... <charToNum("a") + (charToNum(tProp) - charToNum("A"))>
  [752] pusharglist 1 ........................... <charToNum("a") + (charToNum(tProp) - charToNum("A"))>
  [754] extcall 218 ............................. <numToChar(charToNum("a") + (charToNum(tProp) - charToNum("A")))>
  [756] setlocal 14 ............................. tProp = numToChar(charToNum("a") + (charToNum(tProp) - charToNum("A")))
  [758] pushint8 1 .............................. <1>
  [760] setlocal 11
  [762] getlocal 11
  [764] getlocal 17 ............................. <tTransitionLayers>
  [766] getlocal 7 .............................. <i>
  [768] pusharglist 2 ........................... <tTransitionLayers, i>
  [770] objcall 50 .............................. <tTransitionLayers[i]>
  [772] getobjprop 34 ........................... <tTransitionLayers[i].count>
  [774] lteq
  [775] jmpifz [814] ............................ repeat with j = 1 to tTransitionLayers[i].count
  [778] getprop 339 ............................. <pLayerDataList>
  [781] getlocal 14 ............................. <tProp>
  [783] pusharglist 2 ........................... <pLayerDataList, tProp>
  [785] objcall 50 .............................. <pLayerDataList[tProp]>
  [787] getlocal 17 ............................. <tTransitionLayers>
  [789] getlocal 7 .............................. <i>
  [791] pusharglist 2 ........................... <tTransitionLayers, i>
  [793] objcall 50 .............................. <tTransitionLayers[i]>
  [795] getlocal 11 ............................. <j>
  [797] pusharglist 2 ........................... <tTransitionLayers[i], j>
  [799] objcall 50 .............................. <tTransitionLayers[i][j]>
  [801] pusharglistnoret 2 ...................... <pLayerDataList[tProp], tTransitionLayers[i][j]>
  [803] objcall 36 .............................. pLayerDataList[tProp].add(tTransitionLayers[i][j])
  [805] pushint8 1
  [807] getlocal 11
  [809] add
  [810] setlocal 11
  [812] endrepeat [762]
  [814] pushint8 1
  [816] getlocal 7
  [818] add
  [819] setlocal 7
  [821] endrepeat [691]
  [823] jmp [833]
  [826] getlocal 5 .............................. <tText>
  [828] pusharglistnoret 1 ...................... <tText>
  [830] extcall 363 ............................. outputList(tText)
  [833] getparam 0 .............................. <me>
  [835] pusharglistnoret 1 ...................... <me>
  [837] objcall 334 ............................. me.resetFrameNumbers()
  [840] pushint8 1 .............................. <1>
  [842] setlocal 9 .............................. tCount = 1
  [844] getprop 339 ............................. <pLayerDataList>
  [847] getobjprop 34 ........................... <pLayerDataList.count>
  [849] pushzero ................................ <0>
  [850] gt ...................................... <pLayerDataList.count > 0>
  [851] jmpifz [861] ............................ if pLayerDataList.count > 0 then
  [854] getprop 339 ............................. <pLayerDataList>
  [857] getobjprop 34 ........................... <pLayerDataList.count>
  [859] setlocal 9 .............................. tCount = pLayerDataList.count
  [861] pushint8 1 .............................. <1>
  [863] setlocal 18
  [865] getlocal 18
  [867] getlocal 9 .............................. <tCount>
  [869] lteq
  [870] jmpifz [949] ............................ repeat with tLayer = 1 to tCount
  [873] pushcons 4 .............................. <EMPTY>
  [875] setlocal 19 ............................. tLayerName = EMPTY
  [877] getprop 339 ............................. <pLayerDataList>
  [880] getobjprop 34 ........................... <pLayerDataList.count>
  [882] getlocal 18 ............................. <tLayer>
  [884] gteq .................................... <pLayerDataList.count >= tLayer>
  [885] jmpifz [900] ............................ if pLayerDataList.count >= tLayer then
  [888] getprop 339 ............................. <pLayerDataList>
  [891] getlocal 18 ............................. <tLayer>
  [893] pusharglist 2 ........................... <pLayerDataList, tLayer>
  [895] objcall 357 ............................. <pLayerDataList.getPropAt(tLayer)>
  [898] setlocal 19 ............................. tLayerName = pLayerDataList.getPropAt(tLayer)
  [900] getprop 347 ............................. <pInkList>
  [903] getlocal 18 ............................. <tLayer>
  [905] getparam 0 .............................. <me>
  [907] getlocal 19 ............................. <tLayerName>
  [909] getprop 352 ............................. <pNameBase>
  [912] pusharglist 3 ........................... <me, tLayerName, pNameBase>
  [914] objcall 95 .............................. <me.solveInk(tLayerName, pNameBase)>
  [916] pusharglistnoret 3 ...................... <pInkList, tLayer, me.solveInk(tLayerName, pNameBase)>
  [918] objcall 158 ............................. pInkList[tLayer] = me.solveInk(tLayerName, pNameBase)
  [920] getprop 346 ............................. <pBlendList>
  [923] getlocal 18 ............................. <tLayer>
  [925] getparam 0 .............................. <me>
  [927] getlocal 19 ............................. <tLayerName>
  [929] getprop 352 ............................. <pNameBase>
  [932] pusharglist 3 ........................... <me, tLayerName, pNameBase>
  [934] objcall 96 .............................. <me.solveBlend(tLayerName, pNameBase)>
  [936] pusharglistnoret 3 ...................... <pBlendList, tLayer, me.solveBlend(tLayerName, pNameBase)>
  [938] objcall 158 ............................. pBlendList[tLayer] = me.solveBlend(tLayerName, pNameBase)
  [940] pushint8 1
  [942] getlocal 18
  [944] add
  [945] setlocal 18
  [947] endrepeat [865]
  [949] pushzero ................................ <0>
  [950] setprop 350 ............................. pInitialized = 0
  [953] pushsymb 78 ............................. <#define>
  [955] getparam 0 .............................. <me>
  [957] pusharglist 1 ........................... <[me]>
  [959] pushlist ................................ <[me]>
  [960] getparam 1 .............................. <tProps>
  [962] pusharglist 3 ........................... <#define, [me], tProps>
  [964] extcall 351 ............................. <callAncestor(#define, [me], tProps)>
  [967] pusharglistnoret 1 ...................... <callAncestor(#define, [me], tProps)>
  [969] extcall 14 .............................. return callAncestor(#define, [me], tProps)
  [971] ret
end

on prepare me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 373 ............................ <#stuffdata>
  [  5] pusharglist 2 ........................... <tdata, #stuffdata>
  [  7] objcall 50 .............................. <tdata[#stuffdata]>
  [  9] setlocal 0 .............................. tstate = tdata[#stuffdata]
  [ 11] getprop 340 ............................. <pStateStringList>
  [ 14] getlocal 0 .............................. <tstate>
  [ 16] pusharglist 2 ........................... <pStateStringList, tstate>
  [ 18] objcall 374 ............................. <pStateStringList.findPos(tstate)>
  [ 21] pushzero ................................ <0>
  [ 22] gt ...................................... <pStateStringList.findPos(tstate) > 0>
  [ 23] jmpifz [ 38] ............................ if pStateStringList.findPos(tstate) > 0 then
  [ 26] getprop 340 ............................. <pStateStringList>
  [ 29] getlocal 0 .............................. <tstate>
  [ 31] pusharglist 2 ........................... <pStateStringList, tstate>
  [ 33] objcall 374 ............................. <pStateStringList.findPos(tstate)>
  [ 36] setlocal 0 .............................. tstate = pStateStringList.findPos(tstate)
  [ 38] getparam 0 .............................. <me>
  [ 40] getlocal 0 .............................. <tstate>
  [ 42] pusharglistnoret 2 ...................... <me, tstate>
  [ 44] objcall 271 ............................. me.setState(tstate)
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglistnoret 1 ...................... <me>
  [ 51] objcall 334 ............................. me.resetFrameNumbers()
  [ 54] pushsymb 92 ............................. <#prepare>
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglist 1 ........................... <[me]>
  [ 60] pushlist ................................ <[me]>
  [ 61] getparam 1 .............................. <tdata>
  [ 63] pusharglistnoret 3 ...................... <#prepare, [me], tdata>
  [ 65] extcall 351 ............................. callAncestor(#prepare, [me], tdata)
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglistnoret 1 ...................... <1>
  [ 72] extcall 14 .............................. return 1
  [ 74] ret
end

on select me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 376 .......................... <the doubleClick>
  [  5] jmpifz [ 18] ............................ if the doubleClick then / else
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglistnoret 1 ...................... <me>
  [ 12] objcall 332 ............................. me.getNextState()
  [ 15] jmp [ 23]
  [ 18] pushzero ................................ <0>
  [ 19] pusharglistnoret 1 ...................... <0>
  [ 21] extcall 14 .............................. return 0
  [ 23] pushsymb 83 ............................. <#select>
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglist 1 ........................... <[me]>
  [ 29] pushlist ................................ <[me]>
  [ 30] pusharglistnoret 2 ...................... <#select, [me]>
  [ 32] extcall 351 ............................. callAncestor(#select, [me])
  [ 35] pushint8 1 .............................. <1>
  [ 37] pusharglistnoret 1 ...................... <1>
  [ 39] extcall 14 .............................. return 1
  [ 41] ret
end

on update me
  [  0] getprop 349 ............................. <pIsAnimatingList>
  [  3] pushint8 1 .............................. <1>
  [  5] pusharglist 2 ........................... <pIsAnimatingList, 1>
  [  7] objcall 374 ............................. <pIsAnimatingList.findPos(1)>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <pIsAnimatingList.findPos(1) = 0>
  [ 12] jmpifz [ 21] ............................ if pIsAnimatingList.findPos(1) = 0 then
  [ 15] pushint8 1 .............................. <1>
  [ 17] pusharglistnoret 1 ...................... <1>
  [ 19] extcall 14 .............................. return 1
  [ 21] pusharglist 0 ........................... <[]>
  [ 23] pushlist ................................ <[]>
  [ 24] setlocal 0 .............................. tIsAnimatingList = []
  [ 26] pushint8 1 .............................. <1>
  [ 28] setlocal 1
  [ 30] getlocal 1
  [ 32] getprop 339 ............................. <pLayerDataList>
  [ 35] getobjprop 34 ........................... <pLayerDataList.count>
  [ 37] lteq
  [ 38] jmpifz [694] ............................ repeat with tLayer = 1 to pLayerDataList.count
  [ 41] getparam 0 .............................. <me>
  [ 43] getprop 339 ............................. <pLayerDataList>
  [ 46] getlocal 1 .............................. <tLayer>
  [ 48] pusharglist 2 ........................... <pLayerDataList, tLayer>
  [ 50] objcall 357 ............................. <pLayerDataList.getPropAt(tLayer)>
  [ 53] pusharglist 2 ........................... <me, pLayerDataList.getPropAt(tLayer)>
  [ 55] objcall 330 ............................. <me.getFrameList(pLayerDataList.getPropAt(tLayer))>
  [ 58] setlocal 2 .............................. tFrameList = me.getFrameList(pLayerDataList.getPropAt(tLayer))
  [ 60] getlocal 0 .............................. <tIsAnimatingList>
  [ 62] getlocal 1 .............................. <tLayer>
  [ 64] getprop 349 ............................. <pIsAnimatingList>
  [ 67] getlocal 1 .............................. <tLayer>
  [ 69] pusharglist 2 ........................... <pIsAnimatingList, tLayer>
  [ 71] objcall 50 .............................. <pIsAnimatingList[tLayer]>
  [ 73] pusharglistnoret 3 ...................... <tIsAnimatingList, tLayer, pIsAnimatingList[tLayer]>
  [ 75] objcall 158 ............................. tIsAnimatingList[tLayer] = pIsAnimatingList[tLayer]
  [ 77] getlocal 2 .............................. <tFrameList>
  [ 79] pusharglist 1 ........................... <tFrameList>
  [ 81] extcall 31 .............................. <voidp(tFrameList)>
  [ 83] not ..................................... <not voidp(tFrameList)>
  [ 84] getlocal 0 .............................. <tIsAnimatingList>
  [ 86] getlocal 1 .............................. <tLayer>
  [ 88] pusharglist 2 ........................... <tIsAnimatingList, tLayer>
  [ 90] objcall 50 .............................. <tIsAnimatingList[tLayer]>
  [ 92] and ..................................... <not voidp(tFrameList) and tIsAnimatingList[tLayer]>
  [ 93] jmpifz [684] ............................ if not voidp(tFrameList) and tIsAnimatingList[tLayer] then
  [ 96] getlocal 2 .............................. <tFrameList>
  [ 98] pushsymb 377 ............................ <#frames>
  [101] pusharglist 2 ........................... <tFrameList, #frames>
  [103] objcall 50 .............................. <tFrameList[#frames]>
  [105] pusharglist 1 ........................... <tFrameList[#frames]>
  [107] extcall 31 .............................. <voidp(tFrameList[#frames])>
  [109] not ..................................... <not voidp(tFrameList[#frames])>
  [110] getlocal 2 .............................. <tFrameList>
  [112] pushsymb 378 ............................ <#sequences>
  [115] pusharglist 2 ........................... <tFrameList, #sequences>
  [117] objcall 50 .............................. <tFrameList[#sequences]>
  [119] pusharglist 1 ........................... <tFrameList[#sequences]>
  [121] extcall 31 .............................. <voidp(tFrameList[#sequences])>
  [123] not ..................................... <not voidp(tFrameList[#sequences])>
  [124] or ...................................... <not voidp(tFrameList[#frames]) or not voidp(tFrameList[#sequences])>
  [125] jmpifz [684] ............................ if not voidp(tFrameList[#frames]) or not voidp(tFrameList[#sequences]) then
  [128] getlocal 2 .............................. <tFrameList>
  [130] pushsymb 379 ............................ <#delay>
  [133] pusharglist 2 ........................... <tFrameList, #delay>
  [135] objcall 50 .............................. <tFrameList[#delay]>
  [137] setlocal 3 .............................. tDelay = tFrameList[#delay]
  [139] getlocal 3 .............................. <tDelay>
  [141] pusharglist 1 ........................... <tDelay>
  [143] extcall 31 .............................. <voidp(tDelay)>
  [145] getlocal 3 .............................. <tDelay>
  [147] pusharglist 1 ........................... <tDelay>
  [149] extcall 177 ............................. <integer(tDelay)>
  [151] pusharglist 1 ........................... <integer(tDelay)>
  [153] extcall 31 .............................. <voidp(integer(tDelay))>
  [155] or ...................................... <voidp(tDelay) or voidp(integer(tDelay))>
  [156] getlocal 3 .............................. <tDelay>
  [158] pushint8 1 .............................. <1>
  [160] lt ...................................... <tDelay < 1>
  [161] or ...................................... <voidp(tDelay) or voidp(integer(tDelay)) or (tDelay < 1)>
  [162] jmpifz [169] ............................ if voidp(tDelay) or voidp(integer(tDelay)) or (tDelay < 1) then
  [165] pushint8 1 .............................. <1>
  [167] setlocal 3 .............................. tDelay = 1
  [169] getprop 348 ............................. <pFrameRepeatList>
  [172] getlocal 1 .............................. <tLayer>
  [174] pusharglist 2 ........................... <pFrameRepeatList, tLayer>
  [176] objcall 50 .............................. <pFrameRepeatList[tLayer]>
  [178] getlocal 3 .............................. <tDelay>
  [180] gteq .................................... <pFrameRepeatList[tLayer] >= tDelay>
  [181] jmpifz [663] ............................ if pFrameRepeatList[tLayer] >= tDelay then
  [184] pushint8 1 .............................. <1>
  [186] setlocal 4 .............................. tLoop = 1
  [188] pushzero ................................ <0>
  [189] setlocal 5 .............................. tFrameCount = 0
  [191] pushzero ................................ <0>
  [192] setlocal 6 .............................. tSequenceCount = 0
  [194] getlocal 2 .............................. <tFrameList>
  [196] pushsymb 377 ............................ <#frames>
  [199] pusharglist 2 ........................... <tFrameList, #frames>
  [201] objcall 374 ............................. <tFrameList.findPos(#frames)>
  [204] pushzero ................................ <0>
  [205] gt ...................................... <tFrameList.findPos(#frames) > 0>
  [206] jmpifz [225] ............................ if tFrameList.findPos(#frames) > 0 then / else
  [209] getlocal 2 .............................. <tFrameList>
  [211] pushsymb 377 ............................ <#frames>
  [214] pusharglist 2 ........................... <tFrameList, #frames>
  [216] objcall 50 .............................. <tFrameList[#frames]>
  [218] getobjprop 34 ........................... <tFrameList[#frames].count>
  [220] setlocal 5 .............................. tFrameCount = tFrameList[#frames].count
  [222] jmp [287]
  [225] getlocal 2 .............................. <tFrameList>
  [227] pushsymb 378 ............................ <#sequences>
  [230] pusharglist 2 ........................... <tFrameList, #sequences>
  [232] objcall 128 ............................. <tFrameList.getaProp(#sequences)>
  [234] setlocal 7 .............................. tSequences = tFrameList.getaProp(#sequences)
  [236] getlocal 7 .............................. <tSequences>
  [238] pusharglist 1 ........................... <tSequences>
  [240] extcall 125 ............................. <listp(tSequences)>
  [242] jmpifz [287] ............................ if listp(tSequences) then
  [245] getlocal 7 .............................. <tSequences>
  [247] getobjprop 34 ........................... <tSequences.count>
  [249] getprop 341 ............................. <pFrameSequenceNumberList>
  [252] getlocal 1 .............................. <tLayer>
  [254] pusharglist 2 ........................... <pFrameSequenceNumberList, tLayer>
  [256] objcall 50 .............................. <pFrameSequenceNumberList[tLayer]>
  [258] gteq .................................... <tSequences.count >= pFrameSequenceNumberList[tLayer]>
  [259] jmpifz [287] ............................ if tSequences.count >= pFrameSequenceNumberList[tLayer] then
  [262] getlocal 7 .............................. <tSequences>
  [264] getprop 341 ............................. <pFrameSequenceNumberList>
  [267] getlocal 1 .............................. <tLayer>
  [269] pusharglist 2 ........................... <pFrameSequenceNumberList, tLayer>
  [271] objcall 50 .............................. <pFrameSequenceNumberList[tLayer]>
  [273] pusharglist 2 ........................... <tSequences, pFrameSequenceNumberList[tLayer]>
  [275] objcall 50 .............................. <tSequences[pFrameSequenceNumberList[tLayer]]>
  [277] getobjprop 34 ........................... <tSequences[pFrameSequenceNumberList[tLayer]].count>
  [279] setlocal 5 .............................. tFrameCount = tSequences[pFrameSequenceNumberList[tLayer]].count
  [281] getlocal 7 .............................. <tSequences>
  [283] getobjprop 34 ........................... <tSequences.count>
  [285] setlocal 6 .............................. tSequenceCount = tSequences.count
  [287] getlocal 5 .............................. <tFrameCount>
  [289] pushzero ................................ <0>
  [290] gt ...................................... <tFrameCount > 0>
  [291] jmpifz [649] ............................ if tFrameCount > 0 then
  [294] getprop 342 ............................. <pFrameNumberList>
  [297] getlocal 1 .............................. <tLayer>
  [299] pusharglist 2 ........................... <pFrameNumberList, tLayer>
  [301] objcall 50 .............................. <pFrameNumberList[tLayer]>
  [303] getlocal 5 .............................. <tFrameCount>
  [305] eq ...................................... <pFrameNumberList[tLayer] = tFrameCount>
  [306] jmpifz [378] ............................ if pFrameNumberList[tLayer] = tFrameCount then
  [309] getprop 344 ............................. <pLoopCountList>
  [312] getlocal 1 .............................. <tLayer>
  [314] pusharglist 2 ........................... <pLoopCountList, tLayer>
  [316] objcall 50 .............................. <pLoopCountList[tLayer]>
  [318] pushzero ................................ <0>
  [319] gt ...................................... <pLoopCountList[tLayer] > 0>
  [320] jmpifz [344] ............................ if pLoopCountList[tLayer] > 0 then
  [323] getprop 344 ............................. <pLoopCountList>
  [326] getlocal 1 .............................. <tLayer>
  [328] getprop 344 ............................. <pLoopCountList>
  [331] getlocal 1 .............................. <tLayer>
  [333] pusharglist 2 ........................... <pLoopCountList, tLayer>
  [335] objcall 50 .............................. <pLoopCountList[tLayer]>
  [337] pushint8 1 .............................. <1>
  [339] sub ..................................... <pLoopCountList[tLayer] - 1>
  [340] pusharglistnoret 3 ...................... <pLoopCountList, tLayer, pLoopCountList[tLayer] - 1>
  [342] objcall 158 ............................. pLoopCountList[tLayer] = pLoopCountList[tLayer] - 1
  [344] getprop 344 ............................. <pLoopCountList>
  [347] getlocal 1 .............................. <tLayer>
  [349] pusharglist 2 ........................... <pLoopCountList, tLayer>
  [351] objcall 50 .............................. <pLoopCountList[tLayer]>
  [353] setlocal 4 .............................. tLoop = pLoopCountList[tLayer]
  [355] getprop 344 ............................. <pLoopCountList>
  [358] getlocal 1 .............................. <tLayer>
  [360] pusharglist 2 ........................... <pLoopCountList, tLayer>
  [362] objcall 50 .............................. <pLoopCountList[tLayer]>
  [364] pushzero ................................ <0>
  [365] eq ...................................... <pLoopCountList[tLayer] = 0>
  [366] jmpifz [378] ............................ if pLoopCountList[tLayer] = 0 then
  [369] getlocal 0 .............................. <tIsAnimatingList>
  [371] getlocal 1 .............................. <tLayer>
  [373] pushzero ................................ <0>
  [374] pusharglistnoret 3 ...................... <tIsAnimatingList, tLayer, 0>
  [376] objcall 158 ............................. tIsAnimatingList[tLayer] = 0
  [378] getprop 342 ............................. <pFrameNumberList>
  [381] getlocal 1 .............................. <tLayer>
  [383] pusharglist 2 ........................... <pFrameNumberList, tLayer>
  [385] objcall 50 .............................. <pFrameNumberList[tLayer]>
  [387] getlocal 5 .............................. <tFrameCount>
  [389] lt ...................................... <pFrameNumberList[tLayer] < tFrameCount>
  [390] getlocal 4 .............................. <tLoop>
  [392] or ...................................... <(pFrameNumberList[tLayer] < tFrameCount) or tLoop>
  [393] jmpifz [649] ............................ if (pFrameNumberList[tLayer] < tFrameCount) or tLoop then
  [396] getlocal 6 .............................. <tSequenceCount>
  [398] pushzero ................................ <0>
  [399] gt ...................................... <tSequenceCount > 0>
  [400] getprop 342 ............................. <pFrameNumberList>
  [403] getlocal 1 .............................. <tLayer>
  [405] pusharglist 2 ........................... <pFrameNumberList, tLayer>
  [407] objcall 50 .............................. <pFrameNumberList[tLayer]>
  [409] getlocal 5 .............................. <tFrameCount>
  [411] eq ...................................... <pFrameNumberList[tLayer] = tFrameCount>
  [412] and ..................................... <(tSequenceCount > 0) and (pFrameNumberList[tLayer] = tFrameCount)>
  [413] jmpifz [446] ............................ if (tSequenceCount > 0) and (pFrameNumberList[tLayer] = tFrameCount) then / else
  [416] getprop 341 ............................. <pFrameSequenceNumberList>
  [419] getlocal 1 .............................. <tLayer>
  [421] getlocal 6 .............................. <tSequenceCount>
  [423] pusharglist 1 ........................... <tSequenceCount>
  [425] extcall 380 ............................. <random(tSequenceCount)>
  [428] pusharglistnoret 3 ...................... <pFrameSequenceNumberList, tLayer, random(tSequenceCount)>
  [430] objcall 158 ............................. pFrameSequenceNumberList[tLayer] = random(tSequenceCount)
  [432] getprop 342 ............................. <pFrameNumberList>
  [435] getlocal 1 .............................. <tLayer>
  [437] pushint8 1 .............................. <1>
  [439] pusharglistnoret 3 ...................... <pFrameNumberList, tLayer, 1>
  [441] objcall 158 ............................. pFrameNumberList[tLayer] = 1
  [443] jmp [470]
  [446] getprop 342 ............................. <pFrameNumberList>
  [449] getlocal 1 .............................. <tLayer>
  [451] getprop 342 ............................. <pFrameNumberList>
  [454] getlocal 1 .............................. <tLayer>
  [456] pusharglist 2 ........................... <pFrameNumberList, tLayer>
  [458] objcall 50 .............................. <pFrameNumberList[tLayer]>
  [460] getlocal 5 .............................. <tFrameCount>
  [462] mod ..................................... <pFrameNumberList[tLayer] mod tFrameCount>
  [463] pushint8 1 .............................. <1>
  [465] add ..................................... <(pFrameNumberList[tLayer] mod tFrameCount) + 1>
  [466] pusharglistnoret 3 ...................... <pFrameNumberList, tLayer, (pFrameNumberList[tLayer] mod tFrameCount) + 1>
  [468] objcall 158 ............................. pFrameNumberList[tLayer] = (pFrameNumberList[tLayer] mod tFrameCount) + 1
  [470] pushzero ................................ <0>
  [471] setlocal 8 .............................. tRandom = 0
  [473] getlocal 2 .............................. <tFrameList>
  [475] pushsymb 380 ............................ <#random>
  [478] pusharglist 2 ........................... <tFrameList, #random>
  [480] objcall 50 .............................. <tFrameList[#random]>
  [482] pusharglist 1 ........................... <tFrameList[#random]>
  [484] extcall 31 .............................. <voidp(tFrameList[#random])>
  [486] not ..................................... <not voidp(tFrameList[#random])>
  [487] jmpifz [494] ............................ if not voidp(tFrameList[#random]) then
  [490] pushint8 1 .............................. <1>
  [492] setlocal 8 .............................. tRandom = 1
  [494] getlocal 8 .............................. <tRandom>
  [496] getlocal 5 .............................. <tFrameCount>
  [498] pushint8 1 .............................. <1>
  [500] gt ...................................... <tFrameCount > 1>
  [501] and ..................................... <tRandom and (tFrameCount > 1)>
  [502] jmpifz [560] ............................ if tRandom and (tFrameCount > 1) then / else
  [505] getlocal 5 .............................. <tFrameCount>
  [507] pusharglist 1 ........................... <tFrameCount>
  [509] extcall 380 ............................. <random(tFrameCount)>
  [512] setlocal 9 .............................. tValue = random(tFrameCount)
  [514] getlocal 9 .............................. <tValue>
  [516] getprop 343 ............................. <pFrameNumberList2>
  [519] getlocal 1 .............................. <tLayer>
  [521] pusharglist 2 ........................... <pFrameNumberList2, tLayer>
  [523] objcall 50 .............................. <pFrameNumberList2[tLayer]>
  [525] eq ...................................... <tValue = pFrameNumberList2[tLayer]>
  [526] jmpifz [546] ............................ if tValue = pFrameNumberList2[tLayer] then
  [529] getprop 343 ............................. <pFrameNumberList2>
  [532] getlocal 1 .............................. <tLayer>
  [534] pusharglist 2 ........................... <pFrameNumberList2, tLayer>
  [536] objcall 50 .............................. <pFrameNumberList2[tLayer]>
  [538] getlocal 5 .............................. <tFrameCount>
  [540] mod ..................................... <pFrameNumberList2[tLayer] mod tFrameCount>
  [541] pushint8 1 .............................. <1>
  [543] add ..................................... <(pFrameNumberList2[tLayer] mod tFrameCount) + 1>
  [544] setlocal 9 .............................. tValue = (pFrameNumberList2[tLayer] mod tFrameCount) + 1
  [546] getprop 343 ............................. <pFrameNumberList2>
  [549] getlocal 1 .............................. <tLayer>
  [551] getlocal 9 .............................. <tValue>
  [553] pusharglistnoret 3 ...................... <pFrameNumberList2, tLayer, tValue>
  [555] objcall 158 ............................. pFrameNumberList2[tLayer] = tValue
  [557] jmp [578]
  [560] getprop 343 ............................. <pFrameNumberList2>
  [563] getlocal 1 .............................. <tLayer>
  [565] getprop 342 ............................. <pFrameNumberList>
  [568] getlocal 1 .............................. <tLayer>
  [570] pusharglist 2 ........................... <pFrameNumberList, tLayer>
  [572] objcall 50 .............................. <pFrameNumberList[tLayer]>
  [574] pusharglistnoret 3 ...................... <pFrameNumberList2, tLayer, pFrameNumberList[tLayer]>
  [576] objcall 158 ............................. pFrameNumberList2[tLayer] = pFrameNumberList[tLayer]
  [578] getlocal 2 .............................. <tFrameList>
  [580] pushsymb 205 ............................ <#blend>
  [582] pusharglist 2 ........................... <tFrameList, #blend>
  [584] objcall 50 .............................. <tFrameList[#blend]>
  [586] pusharglist 1 ........................... <tFrameList[#blend]>
  [588] extcall 31 .............................. <voidp(tFrameList[#blend])>
  [590] not ..................................... <not voidp(tFrameList[#blend])>
  [591] jmpifz [649] ............................ if not voidp(tFrameList[#blend]) then
  [594] getlocal 2 .............................. <tFrameList>
  [596] pushsymb 205 ............................ <#blend>
  [598] pusharglist 2 ........................... <tFrameList, #blend>
  [600] objcall 50 .............................. <tFrameList[#blend]>
  [602] setlocal 10 ............................. tBlendList = tFrameList[#blend]
  [604] getlocal 10 ............................. <tBlendList>
  [606] getobjprop 34 ........................... <tBlendList.count>
  [608] getprop 343 ............................. <pFrameNumberList2>
  [611] getlocal 1 .............................. <tLayer>
  [613] pusharglist 2 ........................... <pFrameNumberList2, tLayer>
  [615] objcall 50 .............................. <pFrameNumberList2[tLayer]>
  [617] gteq .................................... <tBlendList.count >= pFrameNumberList2[tLayer]>
  [618] jmpifz [649] ............................ if tBlendList.count >= pFrameNumberList2[tLayer] then
  [621] getparam 0 .............................. <me>
  [623] pushsymb 105 ............................ <#pSprList>
  [625] getlocal 1 .............................. <tLayer>
  [627] pusharglist 3 ........................... <me, #pSprList, tLayer>
  [629] objcall 381 ............................. <me.pSprList[tLayer]>
  [632] getlocal 10 ............................. <tBlendList>
  [634] getprop 343 ............................. <pFrameNumberList2>
  [637] getlocal 1 .............................. <tLayer>
  [639] pusharglist 2 ........................... <pFrameNumberList2, tLayer>
  [641] objcall 50 .............................. <pFrameNumberList2[tLayer]>
  [643] pusharglist 2 ........................... <tBlendList, pFrameNumberList2[tLayer]>
  [645] objcall 50 .............................. <tBlendList[pFrameNumberList2[tLayer]]>
  [647] setobjprop 205 .......................... me.pSprList[tLayer].blend = tBlendList[pFrameNumberList2[tLayer]]
  [649] getprop 348 ............................. <pFrameRepeatList>
  [652] getlocal 1 .............................. <tLayer>
  [654] pushint8 1 .............................. <1>
  [656] pusharglistnoret 3 ...................... <pFrameRepeatList, tLayer, 1>
  [658] objcall 158 ............................. pFrameRepeatList[tLayer] = 1
  [660] jmp [684] ............................... next repeat
  [663] getprop 348 ............................. <pFrameRepeatList>
  [666] getlocal 1 .............................. <tLayer>
  [668] getprop 348 ............................. <pFrameRepeatList>
  [671] getlocal 1 .............................. <tLayer>
  [673] pusharglist 2 ........................... <pFrameRepeatList, tLayer>
  [675] objcall 50 .............................. <pFrameRepeatList[tLayer]>
  [677] pushint8 1 .............................. <1>
  [679] add ..................................... <pFrameRepeatList[tLayer] + 1>
  [680] pusharglistnoret 3 ...................... <pFrameRepeatList, tLayer, pFrameRepeatList[tLayer] + 1>
  [682] objcall 158 ............................. pFrameRepeatList[tLayer] = pFrameRepeatList[tLayer] + 1
  [684] pushint8 1
  [686] getlocal 1
  [688] add
  [689] setlocal 1
  [691] endrepeat [ 30]
  [694] getparam 0 .............................. <me>
  [696] pusharglistnoret 1 ...................... <me>
  [698] objcall 100 ............................. me.solveMembers()
  [700] pushint8 1 .............................. <1>
  [702] setlocal 1
  [704] getlocal 1
  [706] getprop 339 ............................. <pLayerDataList>
  [709] getobjprop 34 ........................... <pLayerDataList.count>
  [711] lteq
  [712] jmpifz [741] ............................ repeat with tLayer = 1 to pLayerDataList.count
  [715] getprop 349 ............................. <pIsAnimatingList>
  [718] getlocal 1 .............................. <tLayer>
  [720] getlocal 0 .............................. <tIsAnimatingList>
  [722] getlocal 1 .............................. <tLayer>
  [724] pusharglist 2 ........................... <tIsAnimatingList, tLayer>
  [726] objcall 50 .............................. <tIsAnimatingList[tLayer]>
  [728] pusharglistnoret 3 ...................... <pIsAnimatingList, tLayer, tIsAnimatingList[tLayer]>
  [730] objcall 158 ............................. pIsAnimatingList[tLayer] = tIsAnimatingList[tLayer]
  [732] pushint8 1
  [734] getlocal 1
  [736] add
  [737] setlocal 1
  [739] endrepeat [704]
  [741] pushint8 1 .............................. <1>
  [743] setlocal 11 ............................. tLoopsFinished = 1
  [745] pushint8 1 .............................. <1>
  [747] setlocal 12
  [749] getlocal 12
  [751] getprop 349 ............................. <pIsAnimatingList>
  [754] getobjprop 34 ........................... <pIsAnimatingList.count>
  [756] lteq
  [757] jmpifz [786] ............................ repeat with i = 1 to pIsAnimatingList.count
  [760] getprop 349 ............................. <pIsAnimatingList>
  [763] getlocal 12 ............................. <i>
  [765] pusharglist 2 ........................... <pIsAnimatingList, i>
  [767] objcall 50 .............................. <pIsAnimatingList[i]>
  [769] pushzero ................................ <0>
  [770] gt ...................................... <pIsAnimatingList[i] > 0>
  [771] jmpifz [777] ............................ if pIsAnimatingList[i] > 0 then
  [774] pushzero ................................ <0>
  [775] setlocal 11 ............................. tLoopsFinished = 0
  [777] pushint8 1
  [779] getlocal 12
  [781] add
  [782] setlocal 12
  [784] endrepeat [749]
  [786] getprop 418 ............................. <pStateChangeActive>
  [789] getlocal 11 ............................. <tLoopsFinished>
  [791] and ..................................... <pStateChangeActive and tLoopsFinished>
  [792] jmpifz [812] ............................ if pStateChangeActive and tLoopsFinished then
  [795] pushzero ................................ <0>
  [796] setprop 418 ............................. pStateChangeActive = 0
  [799] getparam 0 .............................. <me>
  [801] getprop 416 ............................. <pPendingState>
  [804] pushint8 1 .............................. <1>
  [806] sub ..................................... <pPendingState - 1>
  [807] pusharglistnoret 2 ...................... <me, pPendingState - 1>
  [809] objcall 271 ............................. me.setState(pPendingState - 1)
  [812] pushint8 1 .............................. <1>
  [814] pusharglistnoret 1 ...................... <1>
  [816] extcall 14 .............................. return 1
  [818] ret
end

on solveMembers me
  [  0] getprop 350 ............................. <pInitialized>
  [  3] not ..................................... <not pInitialized>
  [  4] jmpifz [ 19] ............................ if not pInitialized then
  [  7] pushsymb 100 ............................ <#solveMembers>
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <[me]>
  [ 13] pushlist ................................ <[me]>
  [ 14] pusharglistnoret 2 ...................... <#solveMembers, [me]>
  [ 16] extcall 351 ............................. callAncestor(#solveMembers, [me])
  [ 19] pushzero ................................ <0>
  [ 20] setlocal 0 .............................. tMembersFound = 0
  [ 22] getparam 0 .............................. <me>
  [ 24] pushsymb 109 ............................ <#pLocShiftList>
  [ 26] pusharglist 2 ........................... <me, #pLocShiftList>
  [ 28] objcall 34 .............................. <me.pLocShiftList.count>
  [ 30] setlocal 1 .............................. tCount = me.pLocShiftList.count
  [ 32] getprop 339 ............................. <pLayerDataList>
  [ 35] getobjprop 34 ........................... <pLayerDataList.count>
  [ 37] pushzero ................................ <0>
  [ 38] gt ...................................... <pLayerDataList.count > 0>
  [ 39] jmpifz [ 49] ............................ if pLayerDataList.count > 0 then
  [ 42] getprop 339 ............................. <pLayerDataList>
  [ 45] getobjprop 34 ........................... <pLayerDataList.count>
  [ 47] setlocal 1 .............................. tCount = pLayerDataList.count
  [ 49] pushint8 1 .............................. <1>
  [ 51] setlocal 2
  [ 53] getlocal 2
  [ 55] getlocal 1 .............................. <tCount>
  [ 57] lteq
  [ 58] jmpifz [641] ............................ repeat with tLayer = 1 to tCount
  [ 61] pushint8 1 .............................. <1>
  [ 63] setlocal 3 .............................. tAnimating = 1
  [ 65] getprop 349 ............................. <pIsAnimatingList>
  [ 68] getobjprop 34 ........................... <pIsAnimatingList.count>
  [ 70] getlocal 2 .............................. <tLayer>
  [ 72] gteq .................................... <pIsAnimatingList.count >= tLayer>
  [ 73] jmpifz [ 87] ............................ if pIsAnimatingList.count >= tLayer then
  [ 76] getprop 349 ............................. <pIsAnimatingList>
  [ 79] getlocal 2 .............................. <tLayer>
  [ 81] pusharglist 2 ........................... <pIsAnimatingList, tLayer>
  [ 83] objcall 50 .............................. <pIsAnimatingList[tLayer]>
  [ 85] setlocal 3 .............................. tAnimating = pIsAnimatingList[tLayer]
  [ 87] getlocal 3 .............................. <tAnimating>
  [ 89] jmpifz [589] ............................ if tAnimating then
  [ 92] pushcons 5 .............................. <"a">
  [ 94] pusharglist 1 ........................... <"a">
  [ 96] extcall 217 ............................. <charToNum("a")>
  [ 98] getlocal 2 .............................. <tLayer>
  [100] add ..................................... <charToNum("a") + tLayer>
  [101] pushint8 1 .............................. <1>
  [103] sub ..................................... <charToNum("a") + tLayer - 1>
  [104] pusharglist 1 ........................... <charToNum("a") + tLayer - 1>
  [106] extcall 218 ............................. <numToChar(charToNum("a") + tLayer - 1)>
  [108] setlocal 4 .............................. tLayerName = numToChar(charToNum("a") + tLayer - 1)
  [110] getprop 339 ............................. <pLayerDataList>
  [113] getobjprop 34 ........................... <pLayerDataList.count>
  [115] getlocal 2 .............................. <tLayer>
  [117] gteq .................................... <pLayerDataList.count >= tLayer>
  [118] jmpifz [133] ............................ if pLayerDataList.count >= tLayer then
  [121] getprop 339 ............................. <pLayerDataList>
  [124] getlocal 2 .............................. <tLayer>
  [126] pusharglist 2 ........................... <pLayerDataList, tLayer>
  [128] objcall 357 ............................. <pLayerDataList.getPropAt(tLayer)>
  [131] setlocal 4 .............................. tLayerName = pLayerDataList.getPropAt(tLayer)
  [133] getparam 0 .............................. <me>
  [135] getlocal 4 .............................. <tLayerName>
  [137] pusharglist 2 ........................... <me, tLayerName>
  [139] objcall 329 ............................. <me.getMemberName(tLayerName)>
  [142] setlocal 5 .............................. tMemName = me.getMemberName(tLayerName)
  [144] getparam 0 .............................. <me>
  [146] pushsymb 105 ............................ <#pSprList>
  [148] pusharglist 2 ........................... <me, #pSprList>
  [150] objcall 34 .............................. <me.pSprList.count>
  [152] getlocal 2 .............................. <tLayer>
  [154] lt ...................................... <me.pSprList.count < tLayer>
  [155] jmpifz [282] ............................ if me.pSprList.count < tLayer then / else
  [158] getparam 0 .............................. <me>
  [160] pusharglist 1 ........................... <me>
  [162] objcall 140 ............................. <me.getID()>
  [164] pusharglist 1 ........................... <me.getID()>
  [166] extcall 219 ............................. <reserveSprite(me.getID())>
  [168] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [170] extcall 173 ............................. <sprite(reserveSprite(me.getID()))>
  [172] setlocal 6 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [174] pushsymb 119 ............................ <#room>
  [176] pusharglist 1 ........................... <#room>
  [178] extcall 118 ............................. <getThread(#room)>
  [180] pusharglist 1 ........................... <getThread(#room)>
  [182] objcall 120 ............................. <getThread(#room).getInterface()>
  [184] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [186] objcall 140 ............................. <getThread(#room).getInterface().getID()>
  [188] setlocal 7 .............................. tTargetID = getThread(#room).getInterface().getID()
  [190] getprop 339 ............................. <pLayerDataList>
  [193] getlocal 2 .............................. <tLayer>
  [195] pusharglist 2 ........................... <pLayerDataList, tLayer>
  [197] objcall 357 ............................. <pLayerDataList.getPropAt(tLayer)>
  [200] setlocal 4 .............................. tLayerName = pLayerDataList.getPropAt(tLayer)
  [202] getparam 0 .............................. <me>
  [204] getlocal 4 .............................. <tLayerName>
  [206] pusharglist 2 ........................... <me, tLayerName>
  [208] objcall 335 ............................. <me.solveTransparency(tLayerName)>
  [211] pushzero ................................ <0>
  [212] eq ...................................... <me.solveTransparency(tLayerName) = 0>
  [213] jmpifz [269] ............................ if me.solveTransparency(tLayerName) = 0 then
  [216] getlocal 6 .............................. <tSpr>
  [218] getobjprop 136 .......................... <tSpr.spriteNum>
  [220] getparam 0 .............................. <me>
  [222] pusharglist 1 ........................... <me>
  [224] objcall 140 ............................. <me.getID()>
  [226] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [228] extcall 222 ............................. setEventBroker(tSpr.spriteNum, me.getID())
  [230] getlocal 6 .............................. <tSpr>
  [232] pushsymb 292 ............................ <#eventProcItemObj>
  [235] getlocal 7 .............................. <tTargetID>
  [237] pushsymb 224 ............................ <#mouseDown>
  [239] pusharglistnoret 4 ...................... <tSpr, #eventProcItemObj, tTargetID, #mouseDown>
  [241] objcall 225 ............................. tSpr.registerProcedure(#eventProcItemObj, tTargetID, #mouseDown)
  [243] getlocal 6 .............................. <tSpr>
  [245] pushsymb 293 ............................ <#eventProcItemRollOver>
  [248] getlocal 7 .............................. <tTargetID>
  [250] pushsymb 227 ............................ <#mouseEnter>
  [252] pusharglistnoret 4 ...................... <tSpr, #eventProcItemRollOver, tTargetID, #mouseEnter>
  [254] objcall 225 ............................. tSpr.registerProcedure(#eventProcItemRollOver, tTargetID, #mouseEnter)
  [256] getlocal 6 .............................. <tSpr>
  [258] pushsymb 293 ............................ <#eventProcItemRollOver>
  [261] getlocal 7 .............................. <tTargetID>
  [263] pushsymb 228 ............................ <#mouseLeave>
  [265] pusharglistnoret 4 ...................... <tSpr, #eventProcItemRollOver, tTargetID, #mouseLeave>
  [267] objcall 225 ............................. tSpr.registerProcedure(#eventProcItemRollOver, tTargetID, #mouseLeave)
  [269] getparam 0 .............................. <me>
  [271] getchainedprop 105 ...................... <me.pSprList>
  [273] getlocal 6 .............................. <tSpr>
  [275] pusharglistnoret 2 ...................... <me.pSprList, tSpr>
  [277] objcall 36 .............................. me.pSprList.add(tSpr)
  [279] jmp [321]
  [282] getparam 0 .............................. <me>
  [284] getchainedprop 105 ...................... <me.pSprList>
  [286] getlocal 2 .............................. <tLayer>
  [288] pusharglist 2 ........................... <me.pSprList, tLayer>
  [290] objcall 50 .............................. <me.pSprList[tLayer]>
  [292] setlocal 6 .............................. tSpr = me.pSprList[tLayer]
  [294] getprop 350 ............................. <pInitialized>
  [297] not ..................................... <not pInitialized>
  [298] jmpifz [321] ............................ if not pInitialized then
  [301] getparam 0 .............................. <me>
  [303] getlocal 4 .............................. <tLayerName>
  [305] pusharglist 2 ........................... <me, tLayerName>
  [307] objcall 335 ............................. <me.solveTransparency(tLayerName)>
  [310] jmpifz [321] ............................ if me.solveTransparency(tLayerName) then
  [313] getlocal 6 .............................. <tSpr>
  [315] getobjprop 136 .......................... <tSpr.spriteNum>
  [317] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [319] extcall 229 ............................. removeEventBroker(tSpr.spriteNum)
  [321] getlocal 5 .............................. <tMemName>
  [323] pusharglist 1 ........................... <tMemName>
  [325] extcall 18 .............................. <getmemnum(tMemName)>
  [327] setlocal 8 .............................. tMemNum = getmemnum(tMemName)
  [329] getlocal 8 .............................. <tMemNum>
  [331] pushzero ................................ <0>
  [332] nteq .................................... <tMemNum <> 0>
  [333] jmpifz [439] ............................ if tMemNum <> 0 then / else
  [336] getlocal 0 .............................. <tMembersFound>
  [338] pushint8 1 .............................. <1>
  [340] add ..................................... <tMembersFound + 1>
  [341] setlocal 0 .............................. tMembersFound = tMembersFound + 1
  [343] getlocal 6 .............................. <tSpr>
  [345] getobjprop 44 ........................... <tSpr.rect>
  [347] setlocal 9 .............................. tOldRect = tSpr.rect
  [349] getlocal 8 .............................. <tMemNum>
  [351] pushint8 1 .............................. <1>
  [353] lt ...................................... <tMemNum < 1>
  [354] jmpifz [382] ............................ if tMemNum < 1 then / else
  [357] getlocal 8 .............................. <tMemNum>
  [359] pusharglist 1 ........................... <tMemNum>
  [361] extcall 187 ............................. <abs(tMemNum)>
  [363] setlocal 8 .............................. tMemNum = abs(tMemNum)
  [365] getlocal 6 .............................. <tSpr>
  [367] pushint16 180 ........................... <180>
  [370] setobjprop 231 .......................... tSpr.rotation = 180
  [372] getlocal 6 .............................. <tSpr>
  [374] pushint16 180 ........................... <180>
  [377] setobjprop 232 .......................... tSpr.skew = 180
  [379] jmp [392]
  [382] getlocal 6 .............................. <tSpr>
  [384] pushzero ................................ <0>
  [385] setobjprop 231 .......................... tSpr.rotation = 0
  [387] getlocal 6 .............................. <tSpr>
  [389] pushzero ................................ <0>
  [390] setobjprop 232 .......................... tSpr.skew = 0
  [392] getlocal 9 .............................. <tOldRect>
  [394] getlocal 6 .............................. <tSpr>
  [396] getobjprop 44 ........................... <tSpr.rect>
  [398] nteq .................................... <tOldRect <> tSpr.rect>
  [399] jmpifz [406] ............................ if tOldRect <> tSpr.rect then
  [402] pushint8 1 .............................. <1>
  [404] setlocal 10 ............................. tUpdateLocation = 1
  [406] getlocal 6 .............................. <tSpr>
  [408] getlocal 8 .............................. <tMemNum>
  [410] setobjprop 233 .......................... tSpr.castNum = tMemNum
  [412] getlocal 6 .............................. <tSpr>
  [414] getlocal 8 .............................. <tMemNum>
  [416] pusharglist 1 ........................... <tMemNum>
  [418] extcall 19 .............................. <member(tMemNum)>
  [420] getobjprop 47 ........................... <member(tMemNum).width>
  [422] setobjprop 47 ........................... tSpr.width = member(tMemNum).width
  [424] getlocal 6 .............................. <tSpr>
  [426] getlocal 8 .............................. <tMemNum>
  [428] pusharglist 1 ........................... <tMemNum>
  [430] extcall 19 .............................. <member(tMemNum)>
  [432] getobjprop 48 ........................... <member(tMemNum).height>
  [434] setobjprop 48 ........................... tSpr.height = member(tMemNum).height
  [436] jmp [454]
  [439] getlocal 6 .............................. <tSpr>
  [441] pushzero ................................ <0>
  [442] setobjprop 47 ........................... tSpr.width = 0
  [444] getlocal 6 .............................. <tSpr>
  [446] pushzero ................................ <0>
  [447] setobjprop 48 ........................... tSpr.height = 0
  [449] getlocal 6 .............................. <tSpr>
  [451] pushzero ................................ <0>
  [452] setobjprop 233 .......................... tSpr.castNum = 0
  [454] getprop 350 ............................. <pInitialized>
  [457] not ..................................... <not pInitialized>
  [458] jmpifz [549] ............................ if not pInitialized then
  [461] getprop 347 ............................. <pInkList>
  [464] getobjprop 34 ........................... <pInkList.count>
  [466] getlocal 2 .............................. <tLayer>
  [468] lt ...................................... <pInkList.count < tLayer>
  [469] jmpifz [492] ............................ if pInkList.count < tLayer then
  [472] getprop 347 ............................. <pInkList>
  [475] getlocal 2 .............................. <tLayer>
  [477] getparam 0 .............................. <me>
  [479] getlocal 4 .............................. <tLayerName>
  [481] getprop 352 ............................. <pNameBase>
  [484] pusharglist 3 ........................... <me, tLayerName, pNameBase>
  [486] objcall 95 .............................. <me.solveInk(tLayerName, pNameBase)>
  [488] pusharglistnoret 3 ...................... <pInkList, tLayer, me.solveInk(tLayerName, pNameBase)>
  [490] objcall 158 ............................. pInkList[tLayer] = me.solveInk(tLayerName, pNameBase)
  [492] getprop 346 ............................. <pBlendList>
  [495] getobjprop 34 ........................... <pBlendList.count>
  [497] getlocal 2 .............................. <tLayer>
  [499] lt ...................................... <pBlendList.count < tLayer>
  [500] jmpifz [523] ............................ if pBlendList.count < tLayer then
  [503] getprop 346 ............................. <pBlendList>
  [506] getlocal 2 .............................. <tLayer>
  [508] getparam 0 .............................. <me>
  [510] getlocal 4 .............................. <tLayerName>
  [512] getprop 352 ............................. <pNameBase>
  [515] pusharglist 3 ........................... <me, tLayerName, pNameBase>
  [517] objcall 96 .............................. <me.solveBlend(tLayerName, pNameBase)>
  [519] pusharglistnoret 3 ...................... <pBlendList, tLayer, me.solveBlend(tLayerName, pNameBase)>
  [521] objcall 158 ............................. pBlendList[tLayer] = me.solveBlend(tLayerName, pNameBase)
  [523] getlocal 6 .............................. <tSpr>
  [525] getprop 347 ............................. <pInkList>
  [528] getlocal 2 .............................. <tLayer>
  [530] pusharglist 2 ........................... <pInkList, tLayer>
  [532] objcall 50 .............................. <pInkList[tLayer]>
  [534] setobjprop 66 ........................... tSpr.ink = pInkList[tLayer]
  [536] getlocal 6 .............................. <tSpr>
  [538] getprop 346 ............................. <pBlendList>
  [541] getlocal 2 .............................. <tLayer>
  [543] pusharglist 2 ........................... <pBlendList, tLayer>
  [545] objcall 50 .............................. <pBlendList[tLayer]>
  [547] setobjprop 205 .......................... tSpr.blend = pBlendList[tLayer]
  [549] getparam 0 .............................. <me>
  [551] getlocal 2 .............................. <tLayer>
  [553] pusharglistnoret 2 ...................... <me, tLayer>
  [555] objcall 327 ............................. me.postProcessLayer(tLayer)
  [558] getprop 350 ............................. <pInitialized>
  [561] jmpifz [575] ............................ if pInitialized then
  [564] getparam 0 .............................. <me>
  [566] getlocal 2 .............................. <tLayer>
  [568] getlocal 6 .............................. <tSpr>
  [570] pusharglistnoret 3 ...................... <me, tLayer, tSpr>
  [572] objcall 328 ............................. me.animatePaletteForLayer(tLayer, tSpr)
  [575] getlocal 10 ............................. <tUpdateLocation>
  [577] jmpifz [586] ............................ if tUpdateLocation then
  [580] getparam 0 .............................. <me>
  [582] pusharglistnoret 1 ...................... <me>
  [584] objcall 101 ............................. me.updateLocation()
  [586] jmp [631] ............................... next repeat
  [589] getparam 0 .............................. <me>
  [591] pushsymb 105 ............................ <#pSprList>
  [593] pusharglist 2 ........................... <me, #pSprList>
  [595] objcall 34 .............................. <me.pSprList.count>
  [597] getlocal 2 .............................. <tLayer>
  [599] gteq .................................... <me.pSprList.count >= tLayer>
  [600] jmpifz [631] ............................ if me.pSprList.count >= tLayer then
  [603] getparam 0 .............................. <me>
  [605] getchainedprop 105 ...................... <me.pSprList>
  [607] getlocal 2 .............................. <tLayer>
  [609] pusharglist 2 ........................... <me.pSprList, tLayer>
  [611] objcall 50 .............................. <me.pSprList[tLayer]>
  [613] setlocal 6 .............................. tSpr = me.pSprList[tLayer]
  [615] getlocal 6 .............................. <tSpr>
  [617] getobjprop 233 .......................... <tSpr.castNum>
  [619] pushzero ................................ <0>
  [620] nteq .................................... <tSpr.castNum <> 0>
  [621] jmpifz [631] ............................ if tSpr.castNum <> 0 then
  [624] getlocal 0 .............................. <tMembersFound>
  [626] pushint8 1 .............................. <1>
  [628] add ..................................... <tMembersFound + 1>
  [629] setlocal 0 .............................. tMembersFound = tMembersFound + 1
  [631] pushint8 1
  [633] getlocal 2
  [635] add
  [636] setlocal 2
  [638] endrepeat [ 53]
  [641] pushint8 1 .............................. <1>
  [643] setprop 350 ............................. pInitialized = 1
  [646] getlocal 0 .............................. <tMembersFound>
  [648] pushzero ................................ <0>
  [649] eq ...................................... <tMembersFound = 0>
  [650] jmpifz [661] ............................ if tMembersFound = 0 then / else
  [653] pushzero ................................ <0>
  [654] pusharglistnoret 1 ...................... <0>
  [656] extcall 14 .............................. return 0
  [658] jmp [667]
  [661] pushint8 1 .............................. <1>
  [663] pusharglistnoret 1 ...................... <1>
  [665] extcall 14 .............................. return 1
  [667] ret
end

on postProcessLayer me, tLayer
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 14 .............................. return 1
  [  6] ret
end

on animatePaletteForLayer me, tLayerIndex, tSpr
  [  0] getprop 339 ............................. <pLayerDataList>
  [  3] getobjprop 34 ........................... <pLayerDataList.count>
  [  5] pushzero ................................ <0>
  [  6] eq ...................................... <pLayerDataList.count = 0>
  [  7] jmpifz [ 16] ............................ if pLayerDataList.count = 0 then
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 1 ...................... <1>
  [ 14] extcall 14 .............................. return 1
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 1 .............................. <tLayerIndex>
  [ 20] pusharglist 2 ........................... <me, tLayerIndex>
  [ 22] objcall 330 ............................. <me.getFrameList(tLayerIndex)>
  [ 25] setlocal 0 .............................. tFrameList = me.getFrameList(tLayerIndex)
  [ 27] getlocal 0 .............................. <tFrameList>
  [ 29] pushsymb 395 ............................ <#paletteFrames>
  [ 32] pusharglist 2 ........................... <tFrameList, #paletteFrames>
  [ 34] objcall 374 ............................. <tFrameList.findPos(#paletteFrames)>
  [ 37] pushzero ................................ <0>
  [ 38] gt ...................................... <tFrameList.findPos(#paletteFrames) > 0>
  [ 39] not ..................................... <not (tFrameList.findPos(#paletteFrames) > 0)>
  [ 40] jmpifz [ 49] ............................ if not (tFrameList.findPos(#paletteFrames) > 0) then
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 14 .............................. return 1
  [ 49] getlocal 0 .............................. <tFrameList>
  [ 51] pushsymb 395 ............................ <#paletteFrames>
  [ 54] pusharglist 2 ........................... <tFrameList, #paletteFrames>
  [ 56] objcall 128 ............................. <tFrameList.getaProp(#paletteFrames)>
  [ 58] setlocal 1 .............................. tFrames = tFrameList.getaProp(#paletteFrames)
  [ 60] getlocal 0 .............................. <tFrameList>
  [ 62] pushsymb 234 ............................ <#paletteIndex>
  [ 64] pusharglist 2 ........................... <tFrameList, #paletteIndex>
  [ 66] objcall 128 ............................. <tFrameList.getaProp(#paletteIndex)>
  [ 68] setlocal 2 .............................. tPalettes = tFrameList.getaProp(#paletteIndex)
  [ 70] pushzero ................................ <0>
  [ 71] setlocal 3 .............................. tFrame = 0
  [ 73] getlocal 0 .............................. <tFrameList>
  [ 75] pusharglist 1 ........................... <tFrameList>
  [ 77] extcall 31 .............................. <voidp(tFrameList)>
  [ 79] not ..................................... <not voidp(tFrameList)>
  [ 80] getparam 1 .............................. <tLayerIndex>
  [ 82] pusharglist 1 ........................... <tLayerIndex>
  [ 84] extcall 31 .............................. <voidp(tLayerIndex)>
  [ 86] not ..................................... <not voidp(tLayerIndex)>
  [ 87] and ..................................... <not voidp(tFrameList) and not voidp(tLayerIndex)>
  [ 88] jmpifz [225] ............................ if not voidp(tFrameList) and not voidp(tLayerIndex) then
  [ 91] getlocal 0 .............................. <tFrameList>
  [ 93] pushsymb 377 ............................ <#frames>
  [ 96] pusharglist 2 ........................... <tFrameList, #frames>
  [ 98] objcall 374 ............................. <tFrameList.findPos(#frames)>
  [101] pushzero ................................ <0>
  [102] gt ...................................... <tFrameList.findPos(#frames) > 0>
  [103] jmpifz [120] ............................ if tFrameList.findPos(#frames) > 0 then / else
  [106] getlocal 0 .............................. <tFrameList>
  [108] pushsymb 377 ............................ <#frames>
  [111] pusharglist 2 ........................... <tFrameList, #frames>
  [113] objcall 50 .............................. <tFrameList[#frames]>
  [115] setlocal 4 .............................. tFrameSequence = tFrameList[#frames]
  [117] jmp [174]
  [120] getlocal 0 .............................. <tFrameList>
  [122] pushsymb 378 ............................ <#sequences>
  [125] pusharglist 2 ........................... <tFrameList, #sequences>
  [127] objcall 128 ............................. <tFrameList.getaProp(#sequences)>
  [129] setlocal 5 .............................. tSequences = tFrameList.getaProp(#sequences)
  [131] getlocal 5 .............................. <tSequences>
  [133] pusharglist 1 ........................... <tSequences>
  [135] extcall 125 ............................. <listp(tSequences)>
  [137] jmpifz [174] ............................ if listp(tSequences) then
  [140] getlocal 5 .............................. <tSequences>
  [142] getobjprop 34 ........................... <tSequences.count>
  [144] getprop 341 ............................. <pFrameSequenceNumberList>
  [147] getparam 1 .............................. <tLayerIndex>
  [149] pusharglist 2 ........................... <pFrameSequenceNumberList, tLayerIndex>
  [151] objcall 50 .............................. <pFrameSequenceNumberList[tLayerIndex]>
  [153] gteq .................................... <tSequences.count >= pFrameSequenceNumberList[tLayerIndex]>
  [154] jmpifz [174] ............................ if tSequences.count >= pFrameSequenceNumberList[tLayerIndex] then
  [157] getlocal 5 .............................. <tSequences>
  [159] getprop 341 ............................. <pFrameSequenceNumberList>
  [162] getparam 1 .............................. <tLayerIndex>
  [164] pusharglist 2 ........................... <pFrameSequenceNumberList, tLayerIndex>
  [166] objcall 50 .............................. <pFrameSequenceNumberList[tLayerIndex]>
  [168] pusharglist 2 ........................... <tSequences, pFrameSequenceNumberList[tLayerIndex]>
  [170] objcall 50 .............................. <tSequences[pFrameSequenceNumberList[tLayerIndex]]>
  [172] setlocal 4 .............................. tFrameSequence = tSequences[pFrameSequenceNumberList[tLayerIndex]]
  [174] getlocal 4 .............................. <tFrameSequence>
  [176] pusharglist 1 ........................... <tFrameSequence>
  [178] extcall 31 .............................. <voidp(tFrameSequence)>
  [180] not ..................................... <not voidp(tFrameSequence)>
  [181] jmpifz [225] ............................ if not voidp(tFrameSequence) then
  [184] getprop 343 ............................. <pFrameNumberList2>
  [187] getparam 1 .............................. <tLayerIndex>
  [189] pusharglist 2 ........................... <pFrameNumberList2, tLayerIndex>
  [191] objcall 50 .............................. <pFrameNumberList2[tLayerIndex]>
  [193] setlocal 6 .............................. tFrameNumber = pFrameNumberList2[tLayerIndex]
  [195] getlocal 4 .............................. <tFrameSequence>
  [197] getlocal 6 .............................. <tFrameNumber>
  [199] pusharglist 2 ........................... <tFrameSequence, tFrameNumber>
  [201] objcall 50 .............................. <tFrameSequence[tFrameNumber]>
  [203] setlocal 3 .............................. tFrame = tFrameSequence[tFrameNumber]
  [205] getlocal 3 .............................. <tFrame>
  [207] pushzero ................................ <0>
  [208] lt ...................................... <tFrame < 0>
  [209] jmpifz [225] ............................ if tFrame < 0 then
  [212] getlocal 3 .............................. <tFrame>
  [214] pusharglist 1 ........................... <tFrame>
  [216] extcall 187 ............................. <abs(tFrame)>
  [218] pusharglist 1 ........................... <abs(tFrame)>
  [220] extcall 380 ............................. <random(abs(tFrame))>
  [223] setlocal 3 .............................. tFrame = random(abs(tFrame))
  [225] getlocal 6 .............................. <tFrameNumber>
  [227] getlocal 2 .............................. <tPalettes>
  [229] getobjprop 34 ........................... <tPalettes.count>
  [231] gt ...................................... <tFrameNumber > tPalettes.count>
  [232] jmpifz [240] ............................ if tFrameNumber > tPalettes.count then
  [235] pushzero ................................ <0>
  [236] pusharglistnoret 1 ...................... <0>
  [238] extcall 14 .............................. return 0
  [240] getlocal 6 .............................. <tFrameNumber>
  [242] pushint8 1 .............................. <1>
  [244] lt ...................................... <tFrameNumber < 1>
  [245] jmpifz [253] ............................ if tFrameNumber < 1 then
  [248] pushzero ................................ <0>
  [249] pusharglistnoret 1 ...................... <0>
  [251] extcall 14 .............................. return 0
  [253] getlocal 2 .............................. <tPalettes>
  [255] getlocal 6 .............................. <tFrameNumber>
  [257] pusharglist 2 ........................... <tPalettes, tFrameNumber>
  [259] objcall 50 .............................. <tPalettes[tFrameNumber]>
  [261] setlocal 7 .............................. tPalette = tPalettes[tFrameNumber]
  [263] getlocal 7 .............................. <tPalette>
  [265] pusharglist 1 ........................... <tPalette>
  [267] extcall 18 .............................. <getmemnum(tPalette)>
  [269] setlocal 8 .............................. tMemNum = getmemnum(tPalette)
  [271] getlocal 8 .............................. <tMemNum>
  [273] pushzero ................................ <0>
  [274] eq ...................................... <tMemNum = 0>
  [275] jmpifz [283] ............................ if tMemNum = 0 then
  [278] pushzero ................................ <0>
  [279] pusharglistnoret 1 ...................... <0>
  [281] extcall 14 .............................. return 0
  [283] getparam 2 .............................. <tSpr>
  [285] getchainedprop 19 ....................... <tSpr.member>
  [287] getlocal 8 .............................. <tMemNum>
  [289] pusharglist 1 ........................... <tMemNum>
  [291] extcall 19 .............................. <member(tMemNum)>
  [293] setobjprop 396 .......................... tSpr.member.paletteRef = member(tMemNum)
  [296] pushint8 1 .............................. <1>
  [298] pusharglistnoret 1 ...................... <1>
  [300] extcall 14 .............................. return 1
  [302] ret
end

on getMemberName me, tLayer
  [  0] getprop 352 ............................. <pNameBase>
  [  3] setlocal 0 .............................. tName = pNameBase
  [  5] getprop 339 ............................. <pLayerDataList>
  [  8] getparam 1 .............................. <tLayer>
  [ 10] pusharglist 2 ........................... <pLayerDataList, tLayer>
  [ 12] objcall 374 ............................. <pLayerDataList.findPos(tLayer)>
  [ 15] setlocal 1 .............................. tLayerIndex = pLayerDataList.findPos(tLayer)
  [ 17] getparam 0 .............................. <me>
  [ 19] getparam 1 .............................. <tLayer>
  [ 21] pusharglist 2 ........................... <me, tLayer>
  [ 23] objcall 330 ............................. <me.getFrameList(tLayer)>
  [ 26] setlocal 2 .............................. tFrameList = me.getFrameList(tLayer)
  [ 28] pushzero ................................ <0>
  [ 29] setlocal 3 .............................. tDirection = 0
  [ 31] getparam 0 .............................. <me>
  [ 33] getobjprop 106 .......................... <me.pDirection>
  [ 35] pusharglist 1 ........................... <me.pDirection>
  [ 37] extcall 31 .............................. <voidp(me.pDirection)>
  [ 39] not ..................................... <not voidp(me.pDirection)>
  [ 40] jmpifz [ 69] ............................ if not voidp(me.pDirection) then
  [ 43] getparam 0 .............................. <me>
  [ 45] pushsymb 106 ............................ <#pDirection>
  [ 47] pusharglist 2 ........................... <me, #pDirection>
  [ 49] objcall 34 .............................. <me.pDirection.count>
  [ 51] pushint8 1 .............................. <1>
  [ 53] gteq .................................... <me.pDirection.count >= 1>
  [ 54] jmpifz [ 69] ............................ if me.pDirection.count >= 1 then
  [ 57] getparam 0 .............................. <me>
  [ 59] pushsymb 106 ............................ <#pDirection>
  [ 61] pushint8 1 .............................. <1>
  [ 63] pusharglist 3 ........................... <me, #pDirection, 1>
  [ 65] objcall 25 .............................. <me.pDirection[1]>
  [ 67] setlocal 3 .............................. tDirection = me.pDirection[1]
  [ 69] pushzero ................................ <0>
  [ 70] setlocal 4 .............................. tFrame = 0
  [ 72] getlocal 2 .............................. <tFrameList>
  [ 74] pusharglist 1 ........................... <tFrameList>
  [ 76] extcall 31 .............................. <voidp(tFrameList)>
  [ 78] not ..................................... <not voidp(tFrameList)>
  [ 79] getlocal 1 .............................. <tLayerIndex>
  [ 81] pusharglist 1 ........................... <tLayerIndex>
  [ 83] extcall 31 .............................. <voidp(tLayerIndex)>
  [ 85] not ..................................... <not voidp(tLayerIndex)>
  [ 86] and ..................................... <not voidp(tFrameList) and not voidp(tLayerIndex)>
  [ 87] jmpifz [224] ............................ if not voidp(tFrameList) and not voidp(tLayerIndex) then
  [ 90] getlocal 2 .............................. <tFrameList>
  [ 92] pushsymb 377 ............................ <#frames>
  [ 95] pusharglist 2 ........................... <tFrameList, #frames>
  [ 97] objcall 374 ............................. <tFrameList.findPos(#frames)>
  [100] pushzero ................................ <0>
  [101] gt ...................................... <tFrameList.findPos(#frames) > 0>
  [102] jmpifz [119] ............................ if tFrameList.findPos(#frames) > 0 then / else
  [105] getlocal 2 .............................. <tFrameList>
  [107] pushsymb 377 ............................ <#frames>
  [110] pusharglist 2 ........................... <tFrameList, #frames>
  [112] objcall 50 .............................. <tFrameList[#frames]>
  [114] setlocal 5 .............................. tFrameSequence = tFrameList[#frames]
  [116] jmp [173]
  [119] getlocal 2 .............................. <tFrameList>
  [121] pushsymb 378 ............................ <#sequences>
  [124] pusharglist 2 ........................... <tFrameList, #sequences>
  [126] objcall 128 ............................. <tFrameList.getaProp(#sequences)>
  [128] setlocal 6 .............................. tSequences = tFrameList.getaProp(#sequences)
  [130] getlocal 6 .............................. <tSequences>
  [132] pusharglist 1 ........................... <tSequences>
  [134] extcall 125 ............................. <listp(tSequences)>
  [136] jmpifz [173] ............................ if listp(tSequences) then
  [139] getlocal 6 .............................. <tSequences>
  [141] getobjprop 34 ........................... <tSequences.count>
  [143] getprop 341 ............................. <pFrameSequenceNumberList>
  [146] getlocal 1 .............................. <tLayerIndex>
  [148] pusharglist 2 ........................... <pFrameSequenceNumberList, tLayerIndex>
  [150] objcall 50 .............................. <pFrameSequenceNumberList[tLayerIndex]>
  [152] gteq .................................... <tSequences.count >= pFrameSequenceNumberList[tLayerIndex]>
  [153] jmpifz [173] ............................ if tSequences.count >= pFrameSequenceNumberList[tLayerIndex] then
  [156] getlocal 6 .............................. <tSequences>
  [158] getprop 341 ............................. <pFrameSequenceNumberList>
  [161] getlocal 1 .............................. <tLayerIndex>
  [163] pusharglist 2 ........................... <pFrameSequenceNumberList, tLayerIndex>
  [165] objcall 50 .............................. <pFrameSequenceNumberList[tLayerIndex]>
  [167] pusharglist 2 ........................... <tSequences, pFrameSequenceNumberList[tLayerIndex]>
  [169] objcall 50 .............................. <tSequences[pFrameSequenceNumberList[tLayerIndex]]>
  [171] setlocal 5 .............................. tFrameSequence = tSequences[pFrameSequenceNumberList[tLayerIndex]]
  [173] getlocal 5 .............................. <tFrameSequence>
  [175] pusharglist 1 ........................... <tFrameSequence>
  [177] extcall 31 .............................. <voidp(tFrameSequence)>
  [179] not ..................................... <not voidp(tFrameSequence)>
  [180] jmpifz [224] ............................ if not voidp(tFrameSequence) then
  [183] getprop 343 ............................. <pFrameNumberList2>
  [186] getlocal 1 .............................. <tLayerIndex>
  [188] pusharglist 2 ........................... <pFrameNumberList2, tLayerIndex>
  [190] objcall 50 .............................. <pFrameNumberList2[tLayerIndex]>
  [192] setlocal 7 .............................. tFrameNumber = pFrameNumberList2[tLayerIndex]
  [194] getlocal 5 .............................. <tFrameSequence>
  [196] getlocal 7 .............................. <tFrameNumber>
  [198] pusharglist 2 ........................... <tFrameSequence, tFrameNumber>
  [200] objcall 50 .............................. <tFrameSequence[tFrameNumber]>
  [202] setlocal 4 .............................. tFrame = tFrameSequence[tFrameNumber]
  [204] getlocal 4 .............................. <tFrame>
  [206] pushzero ................................ <0>
  [207] lt ...................................... <tFrame < 0>
  [208] jmpifz [224] ............................ if tFrame < 0 then
  [211] getlocal 4 .............................. <tFrame>
  [213] pusharglist 1 ........................... <tFrame>
  [215] extcall 187 ............................. <abs(tFrame)>
  [217] pusharglist 1 ........................... <abs(tFrame)>
  [219] extcall 380 ............................. <random(abs(tFrame))>
  [222] setlocal 4 .............................. tFrame = random(abs(tFrame))
  [224] getlocal 0 .............................. <tName>
  [226] pushcons 7 .............................. <"_">
  [228] joinstr ................................. <tName & "_">
  [229] getparam 1 .............................. <tLayer>
  [231] joinstr ................................. <tName & "_" & tLayer>
  [232] pushcons 8 .............................. <"_0_">
  [234] joinstr ................................. <tName & "_" & tLayer & "_0_">
  [235] getparam 0 .............................. <me>
  [237] pushsymb 107 ............................ <#pDimensions>
  [239] pushint8 1 .............................. <1>
  [241] pusharglist 3 ........................... <me, #pDimensions, 1>
  [243] objcall 25 .............................. <me.pDimensions[1]>
  [245] joinstr ................................. <tName & "_" & tLayer & "_0_" & me.pDimensions[1]>
  [246] pushcons 7 .............................. <"_">
  [248] joinstr ................................. <tName & "_" & tLayer & "_0_" & me.pDimensions[1] & "_">
  [249] getparam 0 .............................. <me>
  [251] pushsymb 107 ............................ <#pDimensions>
  [253] pushint8 2 .............................. <2>
  [255] pusharglist 3 ........................... <me, #pDimensions, 2>
  [257] objcall 25 .............................. <me.pDimensions[2]>
  [259] joinstr ................................. <tName & "_" & tLayer & "_0_" & me.pDimensions[1] & "_" & me.pDimensions[2]>
  [260] pushcons 7 .............................. <"_">
  [262] joinstr ................................. <tName & "_" & tLayer & "_0_" & me.pDimensions[1] & "_" & me.pDimensions[2] & "_">
  [263] getlocal 3 .............................. <tDirection>
  [265] joinstr ................................. <tName & "_" & tLayer & "_0_" & me.pDimensions[1] & "_" & me.pDimensions[2] & "_" & tDirection>
  [266] pushcons 7 .............................. <"_">
  [268] joinstr ................................. <tName & "_" & tLayer & "_0_" & me.pDimensions[1] & "_" & me.pDimensions[2] & "_" & tDirection & "_">
  [269] getlocal 4 .............................. <tFrame>
  [271] joinstr ................................. <tName & "_" & tLayer & "_0_" & me.pDimensions[1] & "_" & me.pDimensions[2] & "_" & tDirection & "_" & tFrame>
  [272] setlocal 0 .............................. tName = tName & "_" & tLayer & "_0_" & me.pDimensions[1] & "_" & me.pDimensions[2] & "_" & tDirection & "_" & tFrame
  [274] getlocal 0 .............................. <tName>
  [276] pusharglistnoret 1 ...................... <tName>
  [278] extcall 14 .............................. return tName
  [280] ret
end

on getFrameList me, tLayer
  [  0] getparam 1 .............................. <tLayer>
  [  2] pusharglist 1 ........................... <tLayer>
  [  4] extcall 31 .............................. <voidp(tLayer)>
  [  6] not ..................................... <not voidp(tLayer)>
  [  7] jmpifz [ 89] ............................ if not voidp(tLayer) then
  [ 10] getprop 339 ............................. <pLayerDataList>
  [ 13] getparam 1 .............................. <tLayer>
  [ 15] pusharglist 2 ........................... <pLayerDataList, tLayer>
  [ 17] objcall 50 .............................. <pLayerDataList[tLayer]>
  [ 19] pusharglist 1 ........................... <pLayerDataList[tLayer]>
  [ 21] extcall 31 .............................. <voidp(pLayerDataList[tLayer])>
  [ 23] not ..................................... <not voidp(pLayerDataList[tLayer])>
  [ 24] jmpifz [ 89] ............................ if not voidp(pLayerDataList[tLayer]) then
  [ 27] getprop 339 ............................. <pLayerDataList>
  [ 30] getparam 1 .............................. <tLayer>
  [ 32] pusharglist 2 ........................... <pLayerDataList, tLayer>
  [ 34] objcall 50 .............................. <pLayerDataList[tLayer]>
  [ 36] setlocal 0 .............................. tLayerData = pLayerDataList[tLayer]
  [ 38] getprop 338 ............................. <pState>
  [ 41] setlocal 1 .............................. tAction = pState
  [ 43] getlocal 1 .............................. <tAction>
  [ 45] getlocal 0 .............................. <tLayerData>
  [ 47] getobjprop 34 ........................... <tLayerData.count>
  [ 49] gt ...................................... <tAction > tLayerData.count>
  [ 50] jmpifz [ 57] ............................ if tAction > tLayerData.count then
  [ 53] pushint8 1 .............................. <1>
  [ 55] setlocal 1 .............................. tAction = 1
  [ 57] getlocal 1 .............................. <tAction>
  [ 59] pushint8 1 .............................. <1>
  [ 61] gteq .................................... <tAction >= 1>
  [ 62] getlocal 1 .............................. <tAction>
  [ 64] getlocal 0 .............................. <tLayerData>
  [ 66] getobjprop 34 ........................... <tLayerData.count>
  [ 68] lteq .................................... <tAction <= tLayerData.count>
  [ 69] and ..................................... <(tAction >= 1) and (tAction <= tLayerData.count)>
  [ 70] jmpifz [ 89] ............................ if (tAction >= 1) and (tAction <= tLayerData.count) then
  [ 73] getlocal 0 .............................. <tLayerData>
  [ 75] getlocal 1 .............................. <tAction>
  [ 77] pusharglist 2 ........................... <tLayerData, tAction>
  [ 79] objcall 50 .............................. <tLayerData[tAction]>
  [ 81] setlocal 2 .............................. tActionData = tLayerData[tAction]
  [ 83] getlocal 2 .............................. <tActionData>
  [ 85] pusharglistnoret 1 ...................... <tActionData>
  [ 87] extcall 14 .............................. return tActionData
  [ 89] pusharglist 0 ........................... <>
  [ 91] extcall 17 .............................. <VOID>
  [ 93] pusharglistnoret 1 ...................... <VOID>
  [ 95] extcall 14 .............................. return VOID
  [ 97] ret
end

on updateStuffdata me, tValue
  [  0] getparam 1 .............................. <tValue>
  [  2] pusharglist 1 ........................... <tValue>
  [  4] extcall 42 .............................. <ilk(tValue)>
  [  6] pushsymb 35 ............................. <#string>
  [  8] eq ...................................... <ilk(tValue) = #string>
  [  9] jmpifz [ 39] ............................ if ilk(tValue) = #string then
  [ 12] getprop 340 ............................. <pStateStringList>
  [ 15] getparam 1 .............................. <tValue>
  [ 17] pusharglist 2 ........................... <pStateStringList, tValue>
  [ 19] objcall 374 ............................. <pStateStringList.findPos(tValue)>
  [ 22] pushzero ................................ <0>
  [ 23] gt ...................................... <pStateStringList.findPos(tValue) > 0>
  [ 24] jmpifz [ 39] ............................ if pStateStringList.findPos(tValue) > 0 then
  [ 27] getprop 340 ............................. <pStateStringList>
  [ 30] getparam 1 .............................. <tValue>
  [ 32] pusharglist 2 ........................... <pStateStringList, tValue>
  [ 34] objcall 374 ............................. <pStateStringList.findPos(tValue)>
  [ 37] setparam 1 .............................. tValue = pStateStringList.findPos(tValue)
  [ 39] getparam 1 .............................. <tValue>
  [ 41] pusharglist 1 ........................... <tValue>
  [ 43] extcall 177 ............................. <integer(tValue)>
  [ 45] setlocal 0 .............................. tstate = integer(tValue)
  [ 47] getlocal 0 .............................. <tstate>
  [ 49] pusharglist 1 ........................... <tstate>
  [ 51] extcall 406 ............................. <integerp(tstate)>
  [ 54] not ..................................... <not integerp(tstate)>
  [ 55] jmpifz [ 62] ............................ if not integerp(tstate) then
  [ 58] getparam 1 .............................. <tValue>
  [ 60] setlocal 0 .............................. tstate = tValue
  [ 62] getparam 0 .............................. <me>
  [ 64] getparam 1 .............................. <tValue>
  [ 66] pusharglistnoret 2 ...................... <me, tValue>
  [ 68] objcall 271 ............................. me.setState(tValue)
  [ 71] ret
end

on findTransition me, tOldState, tNewState
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 417 ............................. <pPseudoStates>
  [  9] getobjprop 34 ........................... <pPseudoStates.count>
  [ 11] lteq
  [ 12] jmpifz [ 78] ............................ repeat with i = 1 to pPseudoStates.count
  [ 15] getprop 417 ............................. <pPseudoStates>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pPseudoStates, i>
  [ 22] objcall 50 .............................. <pPseudoStates[i]>
  [ 24] pushcons 9 .............................. <"from">
  [ 26] pusharglist 2 ........................... <pPseudoStates[i], "from">
  [ 28] objcall 50 .............................. <pPseudoStates[i]["from"]>
  [ 30] getparam 1 .............................. <tOldState>
  [ 32] eq ...................................... <pPseudoStates[i]["from"] = tOldState>
  [ 33] getprop 417 ............................. <pPseudoStates>
  [ 36] getlocal 0 .............................. <i>
  [ 38] pusharglist 2 ........................... <pPseudoStates, i>
  [ 40] objcall 50 .............................. <pPseudoStates[i]>
  [ 42] pushcons 10 ............................. <"to">
  [ 44] pusharglist 2 ........................... <pPseudoStates[i], "to">
  [ 46] objcall 50 .............................. <pPseudoStates[i]["to"]>
  [ 48] getparam 2 .............................. <tNewState>
  [ 50] eq ...................................... <pPseudoStates[i]["to"] = tNewState>
  [ 51] and ..................................... <(pPseudoStates[i]["from"] = tOldState) and (pPseudoStates[i]["to"] = tNewState)>
  [ 52] jmpifz [ 69] ............................ if (pPseudoStates[i]["from"] = tOldState) and (pPseudoStates[i]["to"] = tNewState) then
  [ 55] getprop 417 ............................. <pPseudoStates>
  [ 58] getlocal 0 .............................. <i>
  [ 60] pusharglist 2 ........................... <pPseudoStates, i>
  [ 62] objcall 357 ............................. <pPseudoStates.getPropAt(i)>
  [ 65] pusharglistnoret 1 ...................... <pPseudoStates.getPropAt(i)>
  [ 67] extcall 14 .............................. return pPseudoStates.getPropAt(i)
  [ 69] pushint8 1
  [ 71] getlocal 0
  [ 73] add
  [ 74] setlocal 0
  [ 76] endrepeat [  4]
  [ 78] pushzero ................................ <0>
  [ 79] pusharglistnoret 1 ...................... <0>
  [ 81] extcall 14 .............................. return 0
  [ 83] ret
end

on setState me, tNewState
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 339 ............................. <pLayerDataList>
  [  9] getobjprop 34 ........................... <pLayerDataList.count>
  [ 11] lteq
  [ 12] jmpifz [ 34] ............................ repeat with tLayer = 1 to pLayerDataList.count
  [ 15] getprop 344 ............................. <pLoopCountList>
  [ 18] getlocal 0 .............................. <tLayer>
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 3 ...................... <pLoopCountList, tLayer, 0>
  [ 23] objcall 158 ............................. pLoopCountList[tLayer] = 0
  [ 25] pushint8 1
  [ 27] getlocal 0
  [ 29] add
  [ 30] setlocal 0
  [ 32] endrepeat [  4]
  [ 34] getparam 1 .............................. <tNewState>
  [ 36] pushcons 4 .............................. <EMPTY>
  [ 38] eq ...................................... <tNewState = EMPTY>
  [ 39] jmpifz [ 46] ............................ if tNewState = EMPTY then
  [ 42] pushint8 1 .............................. <1>
  [ 44] setparam 1 .............................. tNewState = 1
  [ 46] getparam 1 .............................. <tNewState>
  [ 48] pusharglist 1 ........................... <tNewState>
  [ 50] extcall 177 ............................. <integer(tNewState)>
  [ 52] pusharglist 1 ........................... <integer(tNewState)>
  [ 54] extcall 42 .............................. <ilk(integer(tNewState))>
  [ 56] pushsymb 177 ............................ <#integer>
  [ 58] nteq .................................... <ilk(integer(tNewState)) <> #integer>
  [ 59] jmpifz [ 67] ............................ if ilk(integer(tNewState)) <> #integer then
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 14 .............................. return 0
  [ 67] getparam 1 .............................. <tNewState>
  [ 69] pusharglist 1 ........................... <tNewState>
  [ 71] extcall 177 ............................. <integer(tNewState)>
  [ 73] setparam 1 .............................. tNewState = integer(tNewState)
  [ 75] getparam 1 .............................. <tNewState>
  [ 77] pushint8 1 .............................. <1>
  [ 79] add ..................................... <tNewState + 1>
  [ 80] setparam 1 .............................. tNewState = tNewState + 1
  [ 82] pushzero ................................ <0>
  [ 83] setlocal 1 .............................. tNewIndex = 0
  [ 85] pushint8 1 .............................. <1>
  [ 87] setlocal 2
  [ 89] getlocal 2
  [ 91] getprop 336 ............................. <pStateSequenceList>
  [ 94] getobjprop 34 ........................... <pStateSequenceList.count>
  [ 96] lteq
  [ 97] jmpifz [201] ............................ repeat with tIndex = 1 to pStateSequenceList.count
  [100] getprop 336 ............................. <pStateSequenceList>
  [103] getlocal 2 .............................. <tIndex>
  [105] pusharglist 2 ........................... <pStateSequenceList, tIndex>
  [107] objcall 50 .............................. <pStateSequenceList[tIndex]>
  [109] setlocal 3 .............................. tstate = pStateSequenceList[tIndex]
  [111] getlocal 3 .............................. <tstate>
  [113] pusharglist 1 ........................... <tstate>
  [115] extcall 42 .............................. <ilk(tstate)>
  [117] pushsymb 59 ............................. <#list>
  [119] eq ...................................... <ilk(tstate) = #list>
  [120] jmpifz [170] ............................ if ilk(tstate) = #list then / else
  [123] pushint8 1 .............................. <1>
  [125] setlocal 4
  [127] getlocal 4
  [129] getlocal 3 .............................. <tstate>
  [131] getobjprop 34 ........................... <tstate.count>
  [133] lteq
  [134] jmpifz [167] ............................ repeat with tIndex2 = 1 to tstate.count
  [137] getlocal 3 .............................. <tstate>
  [139] getlocal 4 .............................. <tIndex2>
  [141] pusharglist 2 ........................... <tstate, tIndex2>
  [143] objcall 50 .............................. <tstate[tIndex2]>
  [145] getparam 1 .............................. <tNewState>
  [147] eq ...................................... <tstate[tIndex2] = tNewState>
  [148] jmpifz [158] ............................ if tstate[tIndex2] = tNewState then
  [151] getlocal 2 .............................. <tIndex>
  [153] setlocal 1 .............................. tNewIndex = tIndex
  [155] jmp [167] ............................... exit repeat
  [158] pushint8 1
  [160] getlocal 4
  [162] add
  [163] setlocal 4
  [165] endrepeat [127]
  [167] jmp [182]
  [170] getlocal 3 .............................. <tstate>
  [172] getparam 1 .............................. <tNewState>
  [174] eq ...................................... <tstate = tNewState>
  [175] jmpifz [182] ............................ if tstate = tNewState then
  [178] getlocal 2 .............................. <tIndex>
  [180] setlocal 1 .............................. tNewIndex = tIndex
  [182] getlocal 1 .............................. <tNewIndex>
  [184] pushzero ................................ <0>
  [185] nteq .................................... <tNewIndex <> 0>
  [186] jmpifz [192] ............................ if tNewIndex <> 0 then
  [189] jmp [201] ............................... exit repeat
  [192] pushint8 1
  [194] getlocal 2
  [196] add
  [197] setlocal 2
  [199] endrepeat [ 89]
  [201] getlocal 1 .............................. <tNewIndex>
  [203] pushzero ................................ <0>
  [204] eq ...................................... <tNewIndex = 0>
  [205] jmpifz [275] ............................ if tNewIndex = 0 then
  [208] getprop 336 ............................. <pStateSequenceList>
  [211] getobjprop 34 ........................... <pStateSequenceList.count>
  [213] pushzero ................................ <0>
  [214] gt ...................................... <pStateSequenceList.count > 0>
  [215] jmpifz [275] ............................ if pStateSequenceList.count > 0 then
  [218] getprop 336 ............................. <pStateSequenceList>
  [221] pushint8 1 .............................. <1>
  [223] pusharglist 2 ........................... <pStateSequenceList, 1>
  [225] objcall 50 .............................. <pStateSequenceList[1]>
  [227] setlocal 3 .............................. tstate = pStateSequenceList[1]
  [229] getlocal 3 .............................. <tstate>
  [231] pusharglist 1 ........................... <tstate>
  [233] extcall 42 .............................. <ilk(tstate)>
  [235] pushsymb 59 ............................. <#list>
  [237] eq ...................................... <ilk(tstate) = #list>
  [238] jmpifz [267] ............................ if ilk(tstate) = #list then / else
  [241] getlocal 3 .............................. <tstate>
  [243] getobjprop 34 ........................... <tstate.count>
  [245] pushzero ................................ <0>
  [246] gt ...................................... <tstate.count > 0>
  [247] jmpifz [264] ............................ if tstate.count > 0 then
  [250] getlocal 3 .............................. <tstate>
  [252] pushint8 1 .............................. <1>
  [254] pusharglist 2 ........................... <tstate, 1>
  [256] objcall 50 .............................. <tstate[1]>
  [258] setparam 1 .............................. tNewState = tstate[1]
  [260] pushint8 1 .............................. <1>
  [262] setlocal 1 .............................. tNewIndex = 1
  [264] jmp [275]
  [267] getlocal 3 .............................. <tstate>
  [269] setparam 1 .............................. tNewState = tstate
  [271] pushint8 1 .............................. <1>
  [273] setlocal 1 .............................. tNewIndex = 1
  [275] getparam 1 .............................. <tNewState>
  [277] getprop 338 ............................. <pState>
  [280] nteq .................................... <tNewState <> pState>
  [281] jmpifz [333] ............................ if tNewState <> pState then
  [284] getparam 0 .............................. <me>
  [286] getprop 338 ............................. <pState>
  [289] getparam 1 .............................. <tNewState>
  [291] pusharglist 3 ........................... <me, pState, tNewState>
  [293] objcall 415 ............................. <me.findTransition(pState, tNewState)>
  [296] setlocal 5 .............................. tTransitionState = me.findTransition(pState, tNewState)
  [298] getlocal 5 .............................. <tTransitionState>
  [300] jmpifz [333] ............................ if tTransitionState then
  [303] getparam 1 .............................. <tNewState>
  [305] setprop 416 ............................. pPendingState = tNewState
  [308] getlocal 5 .............................. <tTransitionState>
  [310] setprop 418 ............................. pStateChangeActive = tTransitionState
  [313] getprop 336 ............................. <pStateSequenceList>
  [316] getobjprop 34 ........................... <pStateSequenceList.count>
  [318] getlocal 5 .............................. <tTransitionState>
  [320] add ..................................... <pStateSequenceList.count + tTransitionState>
  [321] setparam 1 .............................. tNewState = pStateSequenceList.count + tTransitionState
  [323] getprop 336 ............................. <pStateSequenceList>
  [326] getobjprop 34 ........................... <pStateSequenceList.count>
  [328] getlocal 5 .............................. <tTransitionState>
  [330] add ..................................... <pStateSequenceList.count + tTransitionState>
  [331] setlocal 1 .............................. tNewIndex = pStateSequenceList.count + tTransitionState
  [333] getlocal 1 .............................. <tNewIndex>
  [335] pushzero ................................ <0>
  [336] nteq .................................... <tNewIndex <> 0>
  [337] jmpifz [474] ............................ if tNewIndex <> 0 then
  [340] getlocal 1 .............................. <tNewIndex>
  [342] setprop 337 ............................. pStateIndex = tNewIndex
  [345] getparam 1 .............................. <tNewState>
  [347] setprop 338 ............................. pState = tNewState
  [350] getparam 0 .............................. <me>
  [352] pusharglistnoret 1 ...................... <me>
  [354] objcall 334 ............................. me.resetFrameNumbers()
  [357] pushint8 1 .............................. <1>
  [359] setlocal 0
  [361] getlocal 0
  [363] getprop 339 ............................. <pLayerDataList>
  [366] getobjprop 34 ........................... <pLayerDataList.count>
  [368] lteq
  [369] jmpifz [456] ............................ repeat with tLayer = 1 to pLayerDataList.count
  [372] getparam 0 .............................. <me>
  [374] getprop 339 ............................. <pLayerDataList>
  [377] getlocal 0 .............................. <tLayer>
  [379] pusharglist 2 ........................... <pLayerDataList, tLayer>
  [381] objcall 357 ............................. <pLayerDataList.getPropAt(tLayer)>
  [384] pusharglist 2 ........................... <me, pLayerDataList.getPropAt(tLayer)>
  [386] objcall 330 ............................. <me.getFrameList(pLayerDataList.getPropAt(tLayer))>
  [389] setlocal 6 .............................. tFrameList = me.getFrameList(pLayerDataList.getPropAt(tLayer))
  [391] getlocal 6 .............................. <tFrameList>
  [393] pusharglist 1 ........................... <tFrameList>
  [395] extcall 31 .............................. <voidp(tFrameList)>
  [397] not ..................................... <not voidp(tFrameList)>
  [398] jmpifz [447] ............................ if not voidp(tFrameList) then
  [401] pushint8 1 .............................. <1>
  [403] setlocal 7 .............................. tLoop = 1
  [405] getlocal 6 .............................. <tFrameList>
  [407] pushsymb 407 ............................ <#loop>
  [410] pusharglist 2 ........................... <tFrameList, #loop>
  [412] objcall 50 .............................. <tFrameList[#loop]>
  [414] pusharglist 1 ........................... <tFrameList[#loop]>
  [416] extcall 31 .............................. <voidp(tFrameList[#loop])>
  [418] not ..................................... <not voidp(tFrameList[#loop])>
  [419] jmpifz [436] ............................ if not voidp(tFrameList[#loop]) then
  [422] getlocal 6 .............................. <tFrameList>
  [424] pushsymb 407 ............................ <#loop>
  [427] pusharglist 2 ........................... <tFrameList, #loop>
  [429] objcall 50 .............................. <tFrameList[#loop]>
  [431] pushint8 1 .............................. <1>
  [433] sub ..................................... <tFrameList[#loop] - 1>
  [434] setlocal 7 .............................. tLoop = tFrameList[#loop] - 1
  [436] getprop 344 ............................. <pLoopCountList>
  [439] getlocal 0 .............................. <tLayer>
  [441] getlocal 7 .............................. <tLoop>
  [443] pusharglistnoret 3 ...................... <pLoopCountList, tLayer, tLoop>
  [445] objcall 158 ............................. pLoopCountList[tLayer] = tLoop
  [447] pushint8 1
  [449] getlocal 0
  [451] add
  [452] setlocal 0
  [454] endrepeat [361]
  [456] getparam 0 .............................. <me>
  [458] pusharglistnoret 1 ...................... <me>
  [460] objcall 100 ............................. me.solveMembers()
  [462] getparam 0 .............................. <me>
  [464] pusharglistnoret 1 ...................... <me>
  [466] objcall 101 ............................. me.updateLocation()
  [468] pushint8 1 .............................. <1>
  [470] pusharglistnoret 1 ...................... <1>
  [472] extcall 14 .............................. return 1
  [474] pushzero ................................ <0>
  [475] pusharglistnoret 1 ...................... <0>
  [477] extcall 14 .............................. return 0
  [479] ret
end

on getNextState me
  [  0] pushsymb 119 ............................ <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 118 ............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 12] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [ 14] pushcons 11 ............................. <"USEFURNITURE">
  [ 16] pushsymb 177 ............................ <#integer>
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 140 ............................. <me.getID()>
  [ 24] pusharglist 1 ........................... <me.getID()>
  [ 26] extcall 177 ............................. <integer(me.getID())>
  [ 28] pushsymb 177 ............................ <#integer>
  [ 30] pushzero ................................ <0>
  [ 31] pusharglist 4 ........................... <[#integer: integer(me.getID()), #integer: 0]>
  [ 33] pushproplist ............................ <[#integer: integer(me.getID()), #integer: 0]>
  [ 34] pusharglist 3 ........................... <getThread(#room).getComponent().getRoomConnection(), "USEFURNITURE", [#integer: integer(me.getID()), #integer: 0]>
  [ 36] objcall 178 ............................. <getThread(#room).getComponent().getRoomConnection().send("USEFURNITURE", [#integer: integer(me.getID()), #integer: 0])>
  [ 38] pusharglistnoret 1 ...................... <getThread(#room).getComponent().getRoomConnection().send("USEFURNITURE", [#integer: integer(me.getID()), #integer: 0])>
  [ 40] extcall 14 .............................. return getThread(#room).getComponent().getRoomConnection().send("USEFURNITURE", [#integer: integer(me.getID()), #integer: 0])
  [ 42] ret
end

on validateStateSequenceList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tstatelist = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] getprop 336 ............................. <pStateSequenceList>
  [ 14] getobjprop 34 ........................... <pStateSequenceList.count>
  [ 16] lteq
  [ 17] jmpifz [315] ............................ repeat with tIndex = 1 to pStateSequenceList.count
  [ 20] getprop 336 ............................. <pStateSequenceList>
  [ 23] getlocal 1 .............................. <tIndex>
  [ 25] pusharglist 2 ........................... <pStateSequenceList, tIndex>
  [ 27] objcall 50 .............................. <pStateSequenceList[tIndex]>
  [ 29] setlocal 2 .............................. tstate = pStateSequenceList[tIndex]
  [ 31] getlocal 2 .............................. <tstate>
  [ 33] pusharglist 1 ........................... <tstate>
  [ 35] extcall 42 .............................. <ilk(tstate)>
  [ 37] pushsymb 59 ............................. <#list>
  [ 39] eq ...................................... <ilk(tstate) = #list>
  [ 40] jmpifz [202] ............................ if ilk(tstate) = #list then
  [ 43] getlocal 2 .............................. <tstate>
  [ 45] getobjprop 34 ........................... <tstate.count>
  [ 47] pushint8 1 .............................. <1>
  [ 49] lt ...................................... <tstate.count < 1>
  [ 50] jmpifz [ 76] ............................ if tstate.count < 1 then
  [ 53] getparam 0 .............................. <me>
  [ 55] pushcons 12 ............................. <"Invalid state sequence list for item">
  [ 57] getparam 0 .............................. <me>
  [ 59] getobjprop 352 .......................... <me.pNameBase>
  [ 62] joinpadstr .............................. <"Invalid state sequence list for item" && me.pNameBase>
  [ 63] pushsymb 333 ............................ <#validateStateSequenceList>
  [ 66] pushsymb 221 ............................ <#major>
  [ 68] pusharglist 4 ........................... <me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major>
  [ 70] extcall 61 .............................. <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [ 72] pusharglistnoret 1 ...................... <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [ 74] extcall 14 .............................. return error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)
  [ 76] pushint8 1 .............................. <1>
  [ 78] setlocal 3
  [ 80] getlocal 3
  [ 82] getlocal 2 .............................. <tstate>
  [ 84] getobjprop 34 ........................... <tstate.count>
  [ 86] lteq
  [ 87] jmpifz [199] ............................ repeat with tIndex2 = 1 to tstate.count
  [ 90] getlocal 2 .............................. <tstate>
  [ 92] getlocal 3 .............................. <tIndex2>
  [ 94] pusharglist 2 ........................... <tstate, tIndex2>
  [ 96] objcall 50 .............................. <tstate[tIndex2]>
  [ 98] setlocal 4 .............................. tState2 = tstate[tIndex2]
  [100] getlocal 4 .............................. <tState2>
  [102] pushint8 1 .............................. <1>
  [104] lt ...................................... <tState2 < 1>
  [105] jmpifz [131] ............................ if tState2 < 1 then
  [108] getparam 0 .............................. <me>
  [110] pushcons 12 ............................. <"Invalid state sequence list for item">
  [112] getparam 0 .............................. <me>
  [114] getobjprop 352 .......................... <me.pNameBase>
  [117] joinpadstr .............................. <"Invalid state sequence list for item" && me.pNameBase>
  [118] pushsymb 333 ............................ <#validateStateSequenceList>
  [121] pushsymb 221 ............................ <#major>
  [123] pusharglist 4 ........................... <me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major>
  [125] extcall 61 .............................. <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [127] pusharglistnoret 1 ...................... <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [129] extcall 14 .............................. return error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)
  [131] getlocal 0 .............................. <tstatelist>
  [133] getobjprop 34 ........................... <tstatelist.count>
  [135] getlocal 4 .............................. <tState2>
  [137] lt ...................................... <tstatelist.count < tState2>
  [138] jmpifz [154] ............................ if tstatelist.count < tState2 then
  [141] getlocal 0 .............................. <tstatelist>
  [143] getlocal 4 .............................. <tState2>
  [145] pushint8 1 .............................. <1>
  [147] pusharglistnoret 3 ...................... <tstatelist, tState2, 1>
  [149] objcall 158 ............................. tstatelist[tState2] = 1
  [151] jmp [190] ............................... next repeat
  [154] getlocal 0 .............................. <tstatelist>
  [156] getlocal 4 .............................. <tState2>
  [158] pusharglist 2 ........................... <tstatelist, tState2>
  [160] objcall 50 .............................. <tstatelist[tState2]>
  [162] pushzero ................................ <0>
  [163] gt ...................................... <tstatelist[tState2] > 0>
  [164] jmpifz [190] ............................ if tstatelist[tState2] > 0 then
  [167] getparam 0 .............................. <me>
  [169] pushcons 12 ............................. <"Invalid state sequence list for item">
  [171] getparam 0 .............................. <me>
  [173] getobjprop 352 .......................... <me.pNameBase>
  [176] joinpadstr .............................. <"Invalid state sequence list for item" && me.pNameBase>
  [177] pushsymb 333 ............................ <#validateStateSequenceList>
  [180] pushsymb 221 ............................ <#major>
  [182] pusharglist 4 ........................... <me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major>
  [184] extcall 61 .............................. <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [186] pusharglistnoret 1 ...................... <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [188] extcall 14 .............................. return error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)
  [190] pushint8 1
  [192] getlocal 3
  [194] add
  [195] setlocal 3
  [197] endrepeat [ 80]
  [199] jmp [305] ............................... next repeat
  [202] getlocal 2 .............................. <tstate>
  [204] pushint8 1 .............................. <1>
  [206] lt ...................................... <tstate < 1>
  [207] jmpifz [233] ............................ if tstate < 1 then
  [210] getparam 0 .............................. <me>
  [212] pushcons 12 ............................. <"Invalid state sequence list for item">
  [214] getparam 0 .............................. <me>
  [216] getobjprop 352 .......................... <me.pNameBase>
  [219] joinpadstr .............................. <"Invalid state sequence list for item" && me.pNameBase>
  [220] pushsymb 333 ............................ <#validateStateSequenceList>
  [223] pushsymb 221 ............................ <#major>
  [225] pusharglist 4 ........................... <me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major>
  [227] extcall 61 .............................. <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [229] pusharglistnoret 1 ...................... <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [231] extcall 14 .............................. return error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)
  [233] getlocal 0 .............................. <tstatelist>
  [235] getobjprop 34 ........................... <tstatelist.count>
  [237] getlocal 2 .............................. <tstate>
  [239] lt ...................................... <tstatelist.count < tstate>
  [240] jmpifz [256] ............................ if tstatelist.count < tstate then
  [243] getlocal 0 .............................. <tstatelist>
  [245] getlocal 2 .............................. <tstate>
  [247] pushint8 1 .............................. <1>
  [249] pusharglistnoret 3 ...................... <tstatelist, tstate, 1>
  [251] objcall 158 ............................. tstatelist[tstate] = 1
  [253] jmp [305] ............................... next repeat
  [256] getlocal 0 .............................. <tstatelist>
  [258] getlocal 2 .............................. <tstate>
  [260] pusharglist 2 ........................... <tstatelist, tstate>
  [262] objcall 50 .............................. <tstatelist[tstate]>
  [264] pushzero ................................ <0>
  [265] gt ...................................... <tstatelist[tstate] > 0>
  [266] jmpifz [295] ............................ if tstatelist[tstate] > 0 then
  [269] getparam 0 .............................. <me>
  [271] pushcons 12 ............................. <"Invalid state sequence list for item">
  [273] getparam 0 .............................. <me>
  [275] getobjprop 352 .......................... <me.pNameBase>
  [278] joinpadstr .............................. <"Invalid state sequence list for item" && me.pNameBase>
  [279] pushsymb 333 ............................ <#validateStateSequenceList>
  [282] pushsymb 221 ............................ <#major>
  [284] pusharglist 4 ........................... <me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major>
  [286] extcall 61 .............................. <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [288] pusharglistnoret 1 ...................... <error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)>
  [290] extcall 14 .............................. return error(me, "Invalid state sequence list for item" && me.pNameBase, #validateStateSequenceList, #major)
  [292] jmp [305] ............................... next repeat
  [295] getlocal 0 .............................. <tstatelist>
  [297] getlocal 2 .............................. <tstate>
  [299] pushint8 1 .............................. <1>
  [301] pusharglistnoret 3 ...................... <tstatelist, tstate, 1>
  [303] objcall 158 ............................. tstatelist[tstate] = 1
  [305] pushint8 1
  [307] getlocal 1
  [309] add
  [310] setlocal 1
  [312] endrepeat [  9]
  [315] pushint8 1 .............................. <1>
  [317] pusharglistnoret 1 ...................... <1>
  [319] extcall 14 .............................. return 1
  [321] ret
end

on resetFrameNumbers me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 348 ............................. pFrameRepeatList = []
  [  6] pusharglist 0 ........................... <[]>
  [  8] pushlist ................................ <[]>
  [  9] setprop 349 ............................. pIsAnimatingList = []
  [ 12] pusharglist 0 ........................... <[]>
  [ 14] pushlist ................................ <[]>
  [ 15] setprop 342 ............................. pFrameNumberList = []
  [ 18] pusharglist 0 ........................... <[]>
  [ 20] pushlist ................................ <[]>
  [ 21] setprop 343 ............................. pFrameNumberList2 = []
  [ 24] pusharglist 0 ........................... <[]>
  [ 26] pushlist ................................ <[]>
  [ 27] setprop 341 ............................. pFrameSequenceNumberList = []
  [ 30] pushint8 1 .............................. <1>
  [ 32] setlocal 0
  [ 34] getlocal 0
  [ 36] getparam 0 .............................. <me>
  [ 38] pushsymb 109 ............................ <#pLocShiftList>
  [ 40] pusharglist 2 ........................... <me, #pLocShiftList>
  [ 42] objcall 34 .............................. <me.pLocShiftList.count>
  [ 44] getprop 339 ............................. <pLayerDataList>
  [ 47] getobjprop 34 ........................... <pLayerDataList.count>
  [ 49] pusharglist 2 ........................... <me.pLocShiftList.count, pLayerDataList.count>
  [ 51] extcall 188 ............................. <max(me.pLocShiftList.count, pLayerDataList.count)>
  [ 53] lteq
  [ 54] jmpifz [121] ............................ repeat with i = 1 to max(me.pLocShiftList.count, pLayerDataList.count)
  [ 57] getprop 341 ............................. <pFrameSequenceNumberList>
  [ 60] getlocal 0 .............................. <i>
  [ 62] pushint8 1 .............................. <1>
  [ 64] pusharglistnoret 3 ...................... <pFrameSequenceNumberList, i, 1>
  [ 66] objcall 158 ............................. pFrameSequenceNumberList[i] = 1
  [ 68] getprop 342 ............................. <pFrameNumberList>
  [ 71] getlocal 0 .............................. <i>
  [ 73] pushint8 1 .............................. <1>
  [ 75] pusharglistnoret 3 ...................... <pFrameNumberList, i, 1>
  [ 77] objcall 158 ............................. pFrameNumberList[i] = 1
  [ 79] getprop 343 ............................. <pFrameNumberList2>
  [ 82] getlocal 0 .............................. <i>
  [ 84] pushint8 1 .............................. <1>
  [ 86] pusharglistnoret 3 ...................... <pFrameNumberList2, i, 1>
  [ 88] objcall 158 ............................. pFrameNumberList2[i] = 1
  [ 90] getprop 348 ............................. <pFrameRepeatList>
  [ 93] getlocal 0 .............................. <i>
  [ 95] pushint8 1 .............................. <1>
  [ 97] pusharglistnoret 3 ...................... <pFrameRepeatList, i, 1>
  [ 99] objcall 158 ............................. pFrameRepeatList[i] = 1
  [101] getprop 349 ............................. <pIsAnimatingList>
  [104] getlocal 0 .............................. <i>
  [106] pushint8 1 .............................. <1>
  [108] pusharglistnoret 3 ...................... <pIsAnimatingList, i, 1>
  [110] objcall 158 ............................. pIsAnimatingList[i] = 1
  [112] pushint8 1
  [114] getlocal 0
  [116] add
  [117] setlocal 0
  [119] endrepeat [ 34]
  [121] ret
end

on solveTransparency me, tPart
  [  0] getprop 352 ............................. <pNameBase>
  [  3] setlocal 0 .............................. tName = pNameBase
  [  5] getlocal 0 .............................. <tName>
  [  7] pushcons 13 ............................. <".props">
  [  9] joinstr ................................. <tName & ".props">
  [ 10] pusharglist 1 ........................... <tName & ".props">
  [ 12] extcall 26 .............................. <memberExists(tName & ".props")>
  [ 14] jmpifz [127] ............................ if memberExists(tName & ".props") then
  [ 17] getlocal 0 .............................. <tName>
  [ 19] pushcons 13 ............................. <".props">
  [ 21] joinstr ................................. <tName & ".props">
  [ 22] pusharglist 1 ........................... <tName & ".props">
  [ 24] extcall 18 .............................. <getmemnum(tName & ".props")>
  [ 26] pusharglist 1 ........................... <getmemnum(tName & ".props")>
  [ 28] extcall 19 .............................. <member(getmemnum(tName & ".props"))>
  [ 30] getobjprop 353 .......................... <member(getmemnum(tName & ".props")).text>
  [ 33] pusharglist 1 ........................... <member(getmemnum(tName & ".props")).text>
  [ 35] extcall 208 ............................. <value(member(getmemnum(tName & ".props")).text)>
  [ 37] setlocal 1 .............................. tPropList = value(member(getmemnum(tName & ".props")).text)
  [ 39] getlocal 1 .............................. <tPropList>
  [ 41] pusharglist 1 ........................... <tPropList>
  [ 43] extcall 42 .............................. <ilk(tPropList)>
  [ 45] pushsymb 209 ............................ <#propList>
  [ 47] nteq .................................... <ilk(tPropList) <> #propList>
  [ 48] jmpifz [ 69] ............................ if ilk(tPropList) <> #propList then / else
  [ 51] getparam 0 .............................. <me>
  [ 53] getlocal 0 .............................. <tName>
  [ 55] pushcons 14 ............................. <".props is not valid!">
  [ 57] joinstr ................................. <tName & ".props is not valid!">
  [ 58] pushsymb 95 ............................. <#solveInk>
  [ 60] pushsymb 62 ............................. <#minor>
  [ 62] pusharglistnoret 4 ...................... <me, tName & ".props is not valid!", #solveInk, #minor>
  [ 64] extcall 61 .............................. error(me, tName & ".props is not valid!", #solveInk, #minor)
  [ 66] jmp [127]
  [ 69] getlocal 1 .............................. <tPropList>
  [ 71] getparam 1 .............................. <tPart>
  [ 73] pusharglist 2 ........................... <tPropList, tPart>
  [ 75] objcall 50 .............................. <tPropList[tPart]>
  [ 77] pusharglist 0 ........................... <>
  [ 79] extcall 17 .............................. <VOID>
  [ 81] nteq .................................... <tPropList[tPart] <> VOID>
  [ 82] jmpifz [127] ............................ if tPropList[tPart] <> VOID then
  [ 85] getlocal 1 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 50 .............................. <tPropList[tPart]>
  [ 93] pushsymb 414 ............................ <#transparent>
  [ 96] pusharglist 2 ........................... <tPropList[tPart], #transparent>
  [ 98] objcall 50 .............................. <tPropList[tPart][#transparent]>
  [100] pusharglist 0 ........................... <>
  [102] extcall 17 .............................. <VOID>
  [104] nteq .................................... <tPropList[tPart][#transparent] <> VOID>
  [105] jmpifz [127] ............................ if tPropList[tPart][#transparent] <> VOID then
  [108] getlocal 1 .............................. <tPropList>
  [110] getparam 1 .............................. <tPart>
  [112] pusharglist 2 ........................... <tPropList, tPart>
  [114] objcall 50 .............................. <tPropList[tPart]>
  [116] pushsymb 414 ............................ <#transparent>
  [119] pusharglist 2 ........................... <tPropList[tPart], #transparent>
  [121] objcall 50 .............................. <tPropList[tPart][#transparent]>
  [123] pusharglistnoret 1 ...................... <tPropList[tPart][#transparent]>
  [125] extcall 14 .............................. return tPropList[tPart][#transparent]
  [127] pushzero ................................ <0>
  [128] pusharglistnoret 1 ...................... <0>
  [130] extcall 14 .............................. return 0
  [132] ret
end
