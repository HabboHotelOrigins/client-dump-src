property pClass, pName, pCustom, pSprList, pDirection, pDimensions, pLoczList, pLocShiftList, pPartColors, pAnimFrame, pLocX, pLocY, pLocH, pAltitude, pXFactor, pCorrectLocZ, pSmallMember, pGeometry, pStartloc, pDestLoc, pSlideStartTime, pSlideEndTime, pSlideTimePerTile, pPersistentFurniData, pExpireTimeStamp

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 102 ............................. pClass = EMPTY
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 103 ............................. pName = EMPTY
  [  8] pushcons 0 .............................. <EMPTY>
  [ 10] setprop 104 ............................. pCustom = EMPTY
  [ 12] pusharglist 0 ........................... <[]>
  [ 14] pushlist ................................ <[]>
  [ 15] setprop 105 ............................. pSprList = []
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setprop 106 ............................. pDirection = []
  [ 22] pusharglist 0 ........................... <[]>
  [ 24] pushlist ................................ <[]>
  [ 25] setprop 107 ............................. pDimensions = []
  [ 27] pusharglist 0 ........................... <[]>
  [ 29] pushlist ................................ <[]>
  [ 30] setprop 108 ............................. pLoczList = []
  [ 32] pusharglist 0 ........................... <[]>
  [ 34] pushlist ................................ <[]>
  [ 35] setprop 109 ............................. pLocShiftList = []
  [ 37] pusharglist 0 ........................... <[]>
  [ 39] pushlist ................................ <[]>
  [ 40] setprop 110 ............................. pPartColors = []
  [ 42] pushzero ................................ <0>
  [ 43] setprop 111 ............................. pAnimFrame = 0
  [ 45] pushzero ................................ <0>
  [ 46] setprop 112 ............................. pLocX = 0
  [ 48] pushzero ................................ <0>
  [ 49] setprop 113 ............................. pLocY = 0
  [ 51] pushzero ................................ <0>
  [ 52] setprop 114 ............................. pLocH = 0
  [ 54] pushfloat32 0.0 ......................... <0.0>
  [ 59] setprop 115 ............................. pAltitude = 0.0
  [ 61] pusharglist 0 ........................... <>
  [ 63] extcall 17 .............................. <VOID>
  [ 65] setprop 116 ............................. pPersistentFurniData = VOID
  [ 67] pushsymb 119 ............................ <#room>
  [ 69] pusharglist 1 ........................... <#room>
  [ 71] extcall 118 ............................. <getThread(#room)>
  [ 73] pusharglist 1 ........................... <getThread(#room)>
  [ 75] objcall 120 ............................. <getThread(#room).getInterface()>
  [ 77] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 79] objcall 121 ............................. <getThread(#room).getInterface().getGeometry()>
  [ 81] getobjprop 117 .......................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [ 83] setprop 117 ............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [ 85] pushsymb 123 ............................ <#session>
  [ 87] pusharglist 1 ........................... <#session>
  [ 89] extcall 122 ............................. <getObject(#session)>
  [ 91] pushcons 1 .............................. <"lastroom">
  [ 93] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [ 95] objcall 124 ............................. <getObject(#session).GET("lastroom")>
  [ 97] setlocal 0 .............................. tRoomStruct = getObject(#session).GET("lastroom")
  [ 99] getlocal 0 .............................. <tRoomStruct>
  [101] pusharglist 1 ........................... <tRoomStruct>
  [103] extcall 125 ............................. <listp(tRoomStruct)>
  [105] not ..................................... <not listp(tRoomStruct)>
  [106] jmpifz [126] ............................ if not listp(tRoomStruct) then / else
  [109] getparam 0 .............................. <me>
  [111] pushcons 2 .............................. <"Room struct not saved in #session!">
  [113] pushsymb 0 .............................. <#construct>
  [115] pusharglistnoret 3 ...................... <me, "Room struct not saved in #session!", #construct>
  [117] extcall 61 .............................. error(me, "Room struct not saved in #session!", #construct)
  [119] pushsymb 126 ............................ <#public>
  [121] setlocal 1 .............................. ttype = #public
  [123] jmp [136]
  [126] getlocal 0 .............................. <tRoomStruct>
  [128] pushsymb 127 ............................ <#type>
  [130] pusharglist 2 ........................... <tRoomStruct, #type>
  [132] objcall 128 ............................. <tRoomStruct.getaProp(#type)>
  [134] setlocal 1 .............................. ttype = tRoomStruct.getaProp(#type)
  [136] getlocal 1 .............................. <ttype>
  [138] pushsymb 129 ............................ <#private>
  [140] eq ...................................... <ttype = #private>
  [141] jmpifz [151] ............................ if ttype = #private then / else
  [144] pushint8 1 .............................. <1>
  [146] setprop 130 ............................. pCorrectLocZ = 1
  [148] jmp [154]
  [151] pushzero ................................ <0>
  [152] setprop 130 ............................. pCorrectLocZ = 0
  [154] pushint8 1 .............................. <1>
  [156] inv ..................................... <-1>
  [157] setprop 131 ............................. pExpireTimeStamp = -1
  [159] pushint16 500 ........................... <500>
  [162] setprop 132 ............................. pSlideTimePerTile = 500
  [164] pushint8 1 .............................. <1>
  [166] pusharglistnoret 1 ...................... <1>
  [168] extcall 14 .............................. return 1
  [170] ret
end

on deconstruct me
  [  0] getprop 105 ............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 34
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 41] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 50
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 136 .......................... <tSpr.spriteNum>
  [ 32] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 34] extcall 135 ............................. releaseSprite(tSpr.spriteNum)
  [ 36] pushint8 1
  [ 38] add
  [ 39] endrepeat [ 10]
  [ 41] pop 3
  [ 43] pushsymb 119 ............................ <#room>
  [ 45] pusharglist 1 ........................... <#room>
  [ 47] extcall 137 ............................. <threadExists(#room)>
  [ 49] jmpifz [100] ............................ if threadExists(#room) then
  [ 52] pushsymb 119 ............................ <#room>
  [ 54] pusharglist 1 ........................... <#room>
  [ 56] extcall 118 ............................. <getThread(#room)>
  [ 58] setlocal 1 .............................. tRoomThread = getThread(#room)
  [ 60] getlocal 1 .............................. <tRoomThread>
  [ 62] pusharglist 1 ........................... <tRoomThread>
  [ 64] objcall 138 ............................. <tRoomThread.getComponent()>
  [ 66] setlocal 2 .............................. tComponent = tRoomThread.getComponent()
  [ 68] getlocal 2 .............................. <tComponent>
  [ 70] pusharglist 1 ........................... <tComponent>
  [ 72] objcall 139 ............................. <tComponent.getShadowManager()>
  [ 74] setlocal 3 .............................. tShadowManager = tComponent.getShadowManager()
  [ 76] getlocal 3 .............................. <tShadowManager>
  [ 78] getparam 0 .............................. <me>
  [ 80] pusharglist 1 ........................... <me>
  [ 82] objcall 140 ............................. <me.getID()>
  [ 84] pusharglistnoret 2 ...................... <tShadowManager, me.getID()>
  [ 86] objcall 141 ............................. tShadowManager.removeShadow(me.getID())
  [ 88] getlocal 2 .............................. <tComponent>
  [ 90] getparam 0 .............................. <me>
  [ 92] pusharglist 1 ........................... <me>
  [ 94] objcall 140 ............................. <me.getID()>
  [ 96] pusharglistnoret 2 ...................... <tComponent, me.getID()>
  [ 98] objcall 142 ............................. tComponent.removeSlideObject(me.getID())
  [100] pusharglist 0 ........................... <[]>
  [102] pushlist ................................ <[]>
  [103] setprop 105 ............................. pSprList = []
  [105] pushint8 1 .............................. <1>
  [107] pusharglistnoret 1 ...................... <1>
  [109] extcall 14 .............................. return 1
  [111] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 147 ............................ <#class>
  [  4] pusharglist 2 ........................... <tdata, #class>
  [  6] objcall 50 .............................. <tdata[#class]>
  [  8] setprop 102 ............................. pClass = tdata[#class]
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 148 ............................ <#direction>
  [ 14] pusharglist 2 ........................... <tdata, #direction>
  [ 16] objcall 50 .............................. <tdata[#direction]>
  [ 18] setprop 106 ............................. pDirection = tdata[#direction]
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 149 ............................ <#dimensions>
  [ 24] pusharglist 2 ........................... <tdata, #dimensions>
  [ 26] objcall 50 .............................. <tdata[#dimensions]>
  [ 28] setprop 107 ............................. pDimensions = tdata[#dimensions]
  [ 30] getparam 1 .............................. <tdata>
  [ 32] pushsymb 150 ............................ <#altitude>
  [ 34] pusharglist 2 ........................... <tdata, #altitude>
  [ 36] objcall 50 .............................. <tdata[#altitude]>
  [ 38] setprop 115 ............................. pAltitude = tdata[#altitude]
  [ 40] getparam 1 .............................. <tdata>
  [ 42] pushsymb 151 ............................ <#x>
  [ 44] pusharglist 2 ........................... <tdata, #x>
  [ 46] objcall 50 .............................. <tdata[#x]>
  [ 48] setprop 112 ............................. pLocX = tdata[#x]
  [ 50] getparam 1 .............................. <tdata>
  [ 52] pushsymb 152 ............................ <#y>
  [ 54] pusharglist 2 ........................... <tdata, #y>
  [ 56] objcall 50 .............................. <tdata[#y]>
  [ 58] setprop 113 ............................. pLocY = tdata[#y]
  [ 60] getprop 115 ............................. <pAltitude>
  [ 62] setprop 114 ............................. pLocH = pAltitude
  [ 64] getparam 1 .............................. <tdata>
  [ 66] pushsymb 153 ............................ <#expire>
  [ 68] pusharglist 2 ........................... <tdata, #expire>
  [ 70] objcall 50 .............................. <tdata[#expire]>
  [ 72] setprop 131 ............................. pExpireTimeStamp = tdata[#expire]
  [ 74] getparam 0 .............................. <me>
  [ 76] getparam 1 .............................. <tdata>
  [ 78] pushsymb 154 ............................ <#colors>
  [ 80] pusharglist 2 ........................... <tdata, #colors>
  [ 82] objcall 50 .............................. <tdata[#colors]>
  [ 84] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [ 86] objcall 94 .............................. me.solveColors(tdata[#colors])
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglist 1 ........................... <me>
  [ 92] objcall 100 ............................. <me.solveMembers()>
  [ 94] pushzero ................................ <0>
  [ 95] eq ...................................... <me.solveMembers() = 0>
  [ 96] jmpifz [104] ............................ if me.solveMembers() = 0 then
  [ 99] pushzero ................................ <0>
  [100] pusharglistnoret 1 ...................... <0>
  [102] extcall 14 .............................. return 0
  [104] getparam 0 .............................. <me>
  [106] getparam 1 .............................. <tdata>
  [108] pushsymb 155 ............................ <#props>
  [110] pusharglist 2 ........................... <tdata, #props>
  [112] objcall 50 .............................. <tdata[#props]>
  [114] pusharglist 2 ........................... <me, tdata[#props]>
  [116] objcall 92 .............................. <me.prepare(tdata[#props])>
  [118] pushzero ................................ <0>
  [119] eq ...................................... <me.prepare(tdata[#props]) = 0>
  [120] jmpifz [128] ............................ if me.prepare(tdata[#props]) = 0 then
  [123] pushzero ................................ <0>
  [124] pusharglistnoret 1 ...................... <0>
  [126] extcall 14 .............................. return 0
  [128] getparam 0 .............................. <me>
  [130] pusharglistnoret 1 ...................... <me>
  [132] objcall 101 ............................. me.updateLocation()
  [134] pushint8 1 .............................. <1>
  [136] pusharglistnoret 1 ...................... <1>
  [138] extcall 14 .............................. return 1
  [140] ret
end

on getInfo me
  [  0] getprop 116 ............................. <pPersistentFurniData>
  [  2] pusharglist 1 ........................... <pPersistentFurniData>
  [  4] extcall 31 .............................. <voidp(pPersistentFurniData)>
  [  6] jmpifz [ 25] ............................ if voidp(pPersistentFurniData) then
  [  9] pushcons 3 .............................. <"dynamicdownloader">
  [ 11] pusharglist 1 ........................... <"dynamicdownloader">
  [ 13] extcall 118 ............................. <getThread("dynamicdownloader")>
  [ 15] pusharglist 1 ........................... <getThread("dynamicdownloader")>
  [ 17] objcall 138 ............................. <getThread("dynamicdownloader").getComponent()>
  [ 19] pusharglist 1 ........................... <getThread("dynamicdownloader").getComponent()>
  [ 21] objcall 157 ............................. <getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()>
  [ 23] setprop 116 ............................. pPersistentFurniData = getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()
  [ 25] pusharglist 0 ........................... <[:]>
  [ 27] pushproplist ............................ <[:]>
  [ 28] setlocal 0 .............................. tInfo = [:]
  [ 30] getlocal 0 .............................. <tInfo>
  [ 32] pushsymb 147 ............................ <#class>
  [ 34] getprop 102 ............................. <pClass>
  [ 36] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 38] objcall 158 ............................. tInfo[#class] = pClass
  [ 40] getprop 116 ............................. <pPersistentFurniData>
  [ 42] pushcons 4 .............................. <"s">
  [ 44] getprop 102 ............................. <pClass>
  [ 46] pusharglist 3 ........................... <pPersistentFurniData, "s", pClass>
  [ 48] objcall 159 ............................. <pPersistentFurniData.getPropsByClass("s", pClass)>
  [ 50] setlocal 1 .............................. tFurniData = pPersistentFurniData.getPropsByClass("s", pClass)
  [ 52] getlocal 1 .............................. <tFurniData>
  [ 54] pusharglist 1 ........................... <tFurniData>
  [ 56] extcall 31 .............................. <voidp(tFurniData)>
  [ 58] not ..................................... <not voidp(tFurniData)>
  [ 59] jmpifz [113] ............................ if not voidp(tFurniData) then / else
  [ 62] getlocal 0 .............................. <tInfo>
  [ 64] pushsymb 160 ............................ <#name>
  [ 66] getprop 116 ............................. <pPersistentFurniData>
  [ 68] pushcons 4 .............................. <"s">
  [ 70] getprop 102 ............................. <pClass>
  [ 72] pusharglist 3 ........................... <pPersistentFurniData, "s", pClass>
  [ 74] objcall 159 ............................. <pPersistentFurniData.getPropsByClass("s", pClass)>
  [ 76] pushsymb 161 ............................ <#localizedName>
  [ 78] pusharglist 2 ........................... <pPersistentFurniData.getPropsByClass("s", pClass), #localizedName>
  [ 80] objcall 50 .............................. <pPersistentFurniData.getPropsByClass("s", pClass)[#localizedName]>
  [ 82] pusharglistnoret 3 ...................... <tInfo, #name, pPersistentFurniData.getPropsByClass("s", pClass)[#localizedName]>
  [ 84] objcall 158 ............................. tInfo[#name] = pPersistentFurniData.getPropsByClass("s", pClass)[#localizedName]
  [ 86] getlocal 0 .............................. <tInfo>
  [ 88] pushsymb 162 ............................ <#custom>
  [ 90] getprop 116 ............................. <pPersistentFurniData>
  [ 92] pushcons 4 .............................. <"s">
  [ 94] getprop 102 ............................. <pClass>
  [ 96] pusharglist 3 ........................... <pPersistentFurniData, "s", pClass>
  [ 98] objcall 159 ............................. <pPersistentFurniData.getPropsByClass("s", pClass)>
  [100] pushsymb 163 ............................ <#localizedDesc>
  [102] pusharglist 2 ........................... <pPersistentFurniData.getPropsByClass("s", pClass), #localizedDesc>
  [104] objcall 50 .............................. <pPersistentFurniData.getPropsByClass("s", pClass)[#localizedDesc]>
  [106] pusharglistnoret 3 ...................... <tInfo, #custom, pPersistentFurniData.getPropsByClass("s", pClass)[#localizedDesc]>
  [108] objcall 158 ............................. tInfo[#custom] = pPersistentFurniData.getPropsByClass("s", pClass)[#localizedDesc]
  [110] jmp [172]
  [113] getprop 102 ............................. <pClass>
  [115] pushcons 5 .............................. <"placeholder">
  [117] containsstr ............................. <pClass contains "placeholder">
  [118] jmpifz [152] ............................ if pClass contains "placeholder" then / else
  [121] getlocal 0 .............................. <tInfo>
  [123] pushsymb 160 ............................ <#name>
  [125] pushcons 6 .............................. <"furni_active_placeholder_name">
  [127] pusharglist 1 ........................... <"furni_active_placeholder_name">
  [129] extcall 164 ............................. <getText("furni_active_placeholder_name")>
  [131] pusharglistnoret 3 ...................... <tInfo, #name, getText("furni_active_placeholder_name")>
  [133] objcall 158 ............................. tInfo[#name] = getText("furni_active_placeholder_name")
  [135] getlocal 0 .............................. <tInfo>
  [137] pushsymb 162 ............................ <#custom>
  [139] pushcons 7 .............................. <"furni_active_placeholder_desc">
  [141] pusharglist 1 ........................... <"furni_active_placeholder_desc">
  [143] extcall 164 ............................. <getText("furni_active_placeholder_desc")>
  [145] pusharglistnoret 3 ...................... <tInfo, #custom, getText("furni_active_placeholder_desc")>
  [147] objcall 158 ............................. tInfo[#custom] = getText("furni_active_placeholder_desc")
  [149] jmp [172]
  [152] getlocal 0 .............................. <tInfo>
  [154] pushsymb 160 ............................ <#name>
  [156] pushcons 0 .............................. <EMPTY>
  [158] pusharglistnoret 3 ...................... <tInfo, #name, EMPTY>
  [160] objcall 158 ............................. tInfo[#name] = EMPTY
  [162] getlocal 0 .............................. <tInfo>
  [164] pushsymb 162 ............................ <#custom>
  [166] pushcons 0 .............................. <EMPTY>
  [168] pusharglistnoret 3 ...................... <tInfo, #custom, EMPTY>
  [170] objcall 158 ............................. tInfo[#custom] = EMPTY
  [172] getlocal 0 .............................. <tInfo>
  [174] pushsymb 153 ............................ <#expire>
  [176] getprop 131 ............................. <pExpireTimeStamp>
  [178] pusharglistnoret 3 ...................... <tInfo, #expire, pExpireTimeStamp>
  [180] objcall 158 ............................. tInfo[#expire] = pExpireTimeStamp
  [182] getlocal 0 .............................. <tInfo>
  [184] pushsymb 165 ............................ <#smallmember>
  [186] getprop 166 ............................. <pSmallMember>
  [188] pusharglistnoret 3 ...................... <tInfo, #smallmember, pSmallMember>
  [190] objcall 158 ............................. tInfo[#smallmember] = pSmallMember
  [192] getlocal 0 .............................. <tInfo>
  [194] pushsymb 20 ............................. <#image>
  [196] pushcons 8 .............................. <"Preview_renderer">
  [198] pusharglist 1 ........................... <"Preview_renderer">
  [200] extcall 122 ............................. <getObject("Preview_renderer")>
  [202] pusharglist 0 ........................... <>
  [204] extcall 17 .............................. <VOID>
  [206] getprop 110 ............................. <pPartColors>
  [208] pusharglist 0 ........................... <>
  [210] extcall 17 .............................. <VOID>
  [212] getprop 102 ............................. <pClass>
  [214] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, pPartColors, VOID, pClass>
  [216] objcall 5 ............................... <getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)>
  [218] pusharglistnoret 3 ...................... <tInfo, #image, getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)>
  [220] objcall 158 ............................. tInfo[#image] = getObject("Preview_renderer").renderPreviewImage(VOID, pPartColors, VOID, pClass)
  [222] getlocal 0 .............................. <tInfo>
  [224] pusharglistnoret 1 ...................... <tInfo>
  [226] extcall 14 .............................. return tInfo
  [228] ret
end

on getLocation me
  [  0] getprop 112 ............................. <pLocX>
  [  2] getprop 113 ............................. <pLocY>
  [  4] getprop 114 ............................. <pLocH>
  [  6] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [  8] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [  9] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 11] extcall 14 .............................. return [pLocX, pLocY, pLocH]
  [ 13] ret
end

on getCustom me
  [  0] getprop 116 ............................. <pPersistentFurniData>
  [  2] pusharglist 1 ........................... <pPersistentFurniData>
  [  4] extcall 31 .............................. <voidp(pPersistentFurniData)>
  [  6] jmpifz [ 25] ............................ if voidp(pPersistentFurniData) then
  [  9] pushcons 3 .............................. <"dynamicdownloader">
  [ 11] pusharglist 1 ........................... <"dynamicdownloader">
  [ 13] extcall 118 ............................. <getThread("dynamicdownloader")>
  [ 15] pusharglist 1 ........................... <getThread("dynamicdownloader")>
  [ 17] objcall 138 ............................. <getThread("dynamicdownloader").getComponent()>
  [ 19] pusharglist 1 ........................... <getThread("dynamicdownloader").getComponent()>
  [ 21] objcall 157 ............................. <getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()>
  [ 23] setprop 116 ............................. pPersistentFurniData = getThread("dynamicdownloader").getComponent().getPersistentFurniDataObject()
  [ 25] getprop 116 ............................. <pPersistentFurniData>
  [ 27] pushcons 4 .............................. <"s">
  [ 29] getprop 102 ............................. <pClass>
  [ 31] pusharglist 3 ........................... <pPersistentFurniData, "s", pClass>
  [ 33] objcall 159 ............................. <pPersistentFurniData.getPropsByClass("s", pClass)>
  [ 35] setlocal 0 .............................. tFurniData = pPersistentFurniData.getPropsByClass("s", pClass)
  [ 37] getlocal 0 .............................. <tFurniData>
  [ 39] pusharglist 1 ........................... <tFurniData>
  [ 41] extcall 31 .............................. <voidp(tFurniData)>
  [ 43] jmpifz [ 53] ............................ if voidp(tFurniData) then / else
  [ 46] pushcons 0 .............................. <EMPTY>
  [ 48] setlocal 1 .............................. tCustom = EMPTY
  [ 50] jmp [ 63]
  [ 53] getlocal 0 .............................. <tFurniData>
  [ 55] pushsymb 163 ............................ <#localizedDesc>
  [ 57] pusharglist 2 ........................... <tFurniData, #localizedDesc>
  [ 59] objcall 50 .............................. <tFurniData[#localizedDesc]>
  [ 61] setlocal 1 .............................. tCustom = tFurniData[#localizedDesc]
  [ 63] getlocal 1 .............................. <tCustom>
  [ 65] pusharglistnoret 1 ...................... <tCustom>
  [ 67] extcall 14 .............................. return tCustom
  [ 69] ret
end

on getSprites me
  [  0] getprop 105 ............................. <pSprList>
  [  2] pusharglistnoret 1 ...................... <pSprList>
  [  4] extcall 14 .............................. return pSprList
  [  6] ret
end

on select me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 14 .............................. return 0
  [  5] ret
end

on moveTo me, tX, tY, tH
  [  0] getparam 1 .............................. <tX>
  [  2] setprop 112 ............................. pLocX = tX
  [  4] getparam 2 .............................. <tY>
  [  6] setprop 113 ............................. pLocY = tY
  [  8] getparam 3 .............................. <tH>
  [ 10] getprop 115 ............................. <pAltitude>
  [ 12] add ..................................... <tH + pAltitude>
  [ 13] setprop 114 ............................. pLocH = tH + pAltitude
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglistnoret 1 ...................... <me>
  [ 19] objcall 101 ............................. me.updateLocation()
  [ 21] ret
end

on moveBy me, tX, tY, tH
  [  0] getprop 112 ............................. <pLocX>
  [  2] getparam 1 .............................. <tX>
  [  4] add ..................................... <pLocX + tX>
  [  5] setprop 112 ............................. pLocX = pLocX + tX
  [  7] getprop 113 ............................. <pLocY>
  [  9] getparam 2 .............................. <tY>
  [ 11] add ..................................... <pLocY + tY>
  [ 12] setprop 113 ............................. pLocY = pLocY + tY
  [ 14] getprop 114 ............................. <pLocH>
  [ 16] getparam 3 .............................. <tH>
  [ 18] add ..................................... <pLocH + tH>
  [ 19] setprop 114 ............................. pLocH = pLocH + tH
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglistnoret 1 ...................... <me>
  [ 25] objcall 101 ............................. me.updateLocation()
  [ 27] ret
end

on rotate me, tChange
  [  0] getprop 105 ............................. <pSprList>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglist 2 ........................... <pSprList, 1>
  [  6] objcall 50 .............................. <pSprList[1]>
  [  8] pusharglist 1 ........................... <pSprList[1]>
  [ 10] extcall 173 ............................. <sprite(pSprList[1])>
  [ 12] getchainedprop 19 ....................... <sprite(pSprList[1]).member>
  [ 14] getobjprop 160 .......................... <sprite(pSprList[1]).member.name>
  [ 16] setlocal 0 .............................. tName = sprite(pSprList[1]).member.name
  [ 18] getprop 106 ............................. <pDirection>
  [ 20] setlocal 1 .............................. tDirection = pDirection
  [ 22] getparam 1 .............................. <tChange>
  [ 24] pusharglist 1 ........................... <tChange>
  [ 26] extcall 31 .............................. <voidp(tChange)>
  [ 28] jmpifz [ 35] ............................ if voidp(tChange) then
  [ 31] pushint8 2 .............................. <2>
  [ 33] setparam 1 .............................. tChange = 2
  [ 35] pushzero ................................ <0>
  [ 36] setlocal 2
  [ 38] getlocal 2
  [ 40] pushint8 3 .............................. <3>
  [ 42] lteq
  [ 43] jmpifz [275] ............................ repeat with j = 0 to 3
  [ 46] getlocal 1 .............................. <tDirection>
  [ 48] getparam 1 .............................. <tChange>
  [ 50] add ..................................... <tDirection + tChange>
  [ 51] getlocal 2 .............................. <j>
  [ 53] add ..................................... <tDirection + tChange + j>
  [ 54] pushint8 8 .............................. <8>
  [ 56] mod ..................................... <(tDirection + tChange + j) mod 8>
  [ 57] setlocal 1 .............................. tDirection = (tDirection + tChange + j) mod 8
  [ 59] getlocal 1 .............................. <tDirection>
  [ 61] pushint8 1 .............................. <1>
  [ 63] pusharglist 2 ........................... <tDirection, 1>
  [ 65] objcall 50 .............................. <tDirection[1]>
  [ 67] pushzero ................................ <0>
  [ 68] lt ...................................... <tDirection[1] < 0>
  [ 69] jmpifz [ 79] ............................ if tDirection[1] < 0 then
  [ 72] pushint8 8 .............................. <8>
  [ 74] getlocal 1 .............................. <tDirection>
  [ 76] add ..................................... <8 + tDirection>
  [ 77] setlocal 1 .............................. tDirection = 8 + tDirection
  [ 79] getlocal 0 .............................. <tName>
  [ 81] pushcons 9 .............................. <"_">
  [ 83] pusharglist 2 ........................... <tName, "_">
  [ 85] extcall 174 ............................. <explode(tName, "_")>
  [ 87] setlocal 3 .............................. tNameExploded = explode(tName, "_")
  [ 89] getlocal 3 .............................. <tNameExploded>
  [ 91] getobjprop 34 ........................... <tNameExploded.count>
  [ 93] pushint8 2 .............................. <2>
  [ 95] lt ...................................... <tNameExploded.count < 2>
  [ 96] jmpifz [106] ............................ if tNameExploded.count < 2 then
  [ 99] pushcons 0 .............................. <EMPTY>
  [101] setlocal 4 .............................. tTryName = EMPTY
  [103] jmp [275] ............................... exit repeat
  [106] getlocal 3 .............................. <tNameExploded>
  [108] getlocal 3 .............................. <tNameExploded>
  [110] getobjprop 34 ........................... <tNameExploded.count>
  [112] pushint8 1 .............................. <1>
  [114] sub ..................................... <tNameExploded.count - 1>
  [115] getlocal 1 .............................. <tDirection>
  [117] pushint8 1 .............................. <1>
  [119] pusharglist 2 ........................... <tDirection, 1>
  [121] objcall 50 .............................. <tDirection[1]>
  [123] pusharglist 1 ........................... <tDirection[1]>
  [125] extcall 35 .............................. <string(tDirection[1])>
  [127] pusharglistnoret 3 ...................... <tNameExploded, tNameExploded.count - 1, string(tDirection[1])>
  [129] objcall 158 ............................. tNameExploded[tNameExploded.count - 1] = string(tDirection[1])
  [131] getlocal 3 .............................. <tNameExploded>
  [133] pushcons 9 .............................. <"_">
  [135] pusharglist 2 ........................... <tNameExploded, "_">
  [137] extcall 175 ............................. <implode(tNameExploded, "_")>
  [139] setlocal 4 .............................. tTryName = implode(tNameExploded, "_")
  [141] getlocal 4 .............................. <tTryName>
  [143] pusharglist 1 ........................... <tTryName>
  [145] extcall 26 .............................. <memberExists(tTryName)>
  [147] jmpifz [156] ............................ if memberExists(tTryName) then
  [150] jmp [275] ............................... exit repeat
  [153] jmp [266] ............................... next repeat
  [156] getlocal 4 .............................. <tTryName>
  [158] getprop 102 ............................. <pClass>
  [160] containsstr ............................. <tTryName contains pClass>
  [161] not ..................................... <not (tTryName contains pClass)>
  [162] jmpifz [266] ............................ if not (tTryName contains pClass) then
  [165] getmovieprop 32 ......................... <the itemDelimiter>
  [167] setlocal 5 .............................. tDelim = the itemDelimiter
  [169] pushcons 9 .............................. <"_">
  [171] setmovieprop 32 ......................... the itemDelimiter = "_"
  [173] getprop 102 ............................. <pClass>
  [175] setlocal 6 .............................. tTryName2 = pClass
  [177] getprop 117 ............................. <pXFactor>
  [179] pushint8 32 ............................. <32>
  [181] eq ...................................... <pXFactor = 32>
  [182] jmpifz [192] ............................ if pXFactor = 32 then
  [185] pushcons 10 ............................. <"s_">
  [187] getlocal 6 .............................. <tTryName2>
  [189] joinstr ................................. <"s_" & tTryName2>
  [190] setlocal 6 .............................. tTryName2 = "s_" & tTryName2
  [192] getlocal 4 .............................. <tTryName>
  [194] pushsymb 33 ............................. <#item>
  [196] pusharglist 2 ........................... <tTryName, #item>
  [198] objcall 34 .............................. <tTryName.item.count>
  [200] pushint8 5 .............................. <5>
  [202] sub ..................................... <tTryName.item.count - 5>
  [203] setlocal 7
  [205] getlocal 7
  [207] getlocal 4 .............................. <tTryName>
  [209] pushsymb 33 ............................. <#item>
  [211] pusharglist 2 ........................... <tTryName, #item>
  [213] objcall 34 .............................. <tTryName.item.count>
  [215] lteq
  [216] jmpifz [246] ............................ repeat with i = tTryName.item.count - 5 to tTryName.item.count
  [219] getlocal 6 .............................. <tTryName2>
  [221] pushcons 9 .............................. <"_">
  [223] joinstr ................................. <tTryName2 & "_">
  [224] getlocal 4 .............................. <tTryName>
  [226] pushsymb 33 ............................. <#item>
  [228] getlocal 7 .............................. <i>
  [230] pusharglist 3 ........................... <tTryName, #item, i>
  [232] objcall 25 .............................. <tTryName.item[i]>
  [234] joinstr ................................. <tTryName2 & "_" & tTryName.item[i]>
  [235] setlocal 6 .............................. tTryName2 = tTryName2 & "_" & tTryName.item[i]
  [237] pushint8 1
  [239] getlocal 7
  [241] add
  [242] setlocal 7
  [244] endrepeat [205]
  [246] getlocal 5 .............................. <tDelim>
  [248] setmovieprop 32 ......................... the itemDelimiter = tDelim
  [250] getlocal 6 .............................. <tTryName2>
  [252] pusharglist 1 ........................... <tTryName2>
  [254] extcall 26 .............................. <memberExists(tTryName2)>
  [256] jmpifz [266] ............................ if memberExists(tTryName2) then
  [259] getlocal 6 .............................. <tTryName2>
  [261] setlocal 4 .............................. tTryName = tTryName2
  [263] jmp [275] ............................... exit repeat
  [266] pushint8 1
  [268] getlocal 2
  [270] add
  [271] setlocal 2
  [273] endrepeat [ 38]
  [275] getlocal 4 .............................. <tTryName>
  [277] pusharglist 1 ........................... <tTryName>
  [279] extcall 26 .............................. <memberExists(tTryName)>
  [281] not ..................................... <not memberExists(tTryName)>
  [282] jmpifz [313] ............................ if not memberExists(tTryName) then
  [285] getparam 0 .............................. <me>
  [287] pushcons 11 ............................. <"Direction for object not found:">
  [289] getprop 102 ............................. <pClass>
  [291] joinpadstr .............................. <"Direction for object not found:" && pClass>
  [292] getlocal 1 .............................. <tDirection>
  [294] pushint8 1 .............................. <1>
  [296] pusharglist 2 ........................... <tDirection, 1>
  [298] objcall 50 .............................. <tDirection[1]>
  [300] joinpadstr .............................. <"Direction for object not found:" && pClass && tDirection[1]>
  [301] pushsymb 86 ............................. <#rotate>
  [303] pushsymb 62 ............................. <#minor>
  [305] pusharglist 4 ........................... <me, "Direction for object not found:" && pClass && tDirection[1], #rotate, #minor>
  [307] extcall 61 .............................. <error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate, #minor)>
  [309] pusharglistnoret 1 ...................... <error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate, #minor)>
  [311] extcall 14 .............................. return error(me, "Direction for object not found:" && pClass && tDirection[1], #rotate, #minor)
  [313] pushsymb 119 ............................ <#room>
  [315] pusharglist 1 ........................... <#room>
  [317] extcall 118 ............................. <getThread(#room)>
  [319] pusharglist 1 ........................... <getThread(#room)>
  [321] objcall 138 ............................. <getThread(#room).getComponent()>
  [323] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [325] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [327] pushcons 12 ............................. <"MOVESTUFF">
  [329] pushsymb 177 ............................ <#integer>
  [331] getparam 0 .............................. <me>
  [333] pusharglist 1 ........................... <me>
  [335] objcall 140 ............................. <me.getID()>
  [337] pusharglist 1 ........................... <me.getID()>
  [339] extcall 177 ............................. <integer(me.getID())>
  [341] pushsymb 177 ............................ <#integer>
  [343] getparam 0 .............................. <me>
  [345] getobjprop 112 .......................... <me.pLocX>
  [347] pushsymb 177 ............................ <#integer>
  [349] getparam 0 .............................. <me>
  [351] getobjprop 113 .......................... <me.pLocY>
  [353] pushsymb 177 ............................ <#integer>
  [355] getlocal 1 .............................. <tDirection>
  [357] pushint8 1 .............................. <1>
  [359] pusharglist 2 ........................... <tDirection, 1>
  [361] objcall 50 .............................. <tDirection[1]>
  [363] pusharglist 8 ........................... <[#integer: integer(me.getID()), #integer: me.pLocX, #integer: me.pLocY, #integer: tDirection[1]]>
  [365] pushproplist ............................ <[#integer: integer(me.getID()), #integer: me.pLocX, #integer: me.pLocY, #integer: tDirection[1]]>
  [366] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVESTUFF", [#integer: integer(me.getID()), #integer: me.pLocX, #integer: me.pLocY, #integer: tDirection[1]]>
  [368] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVESTUFF", [#integer: integer(me.getID()), #integer: me.pLocX, #integer: me.pLocY, #integer: tDirection[1]])
  [370] ret
end

on setSlideTo me, tFromLoc, tToLoc, tTimeNow, tHasCharacter
  [  0] getparam 3 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 31 .............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 13] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 184 ........................ <the milliSeconds>
  [ 11] setparam 3 .............................. tTimeNow = the milliSeconds
  [ 13] getparam 3 .............................. <tTimeNow>
  [ 15] setprop 185 ............................. pSlideStartTime = tTimeNow
  [ 17] getprop 185 ............................. <pSlideStartTime>
  [ 19] setlocal 0 .............................. pLastSlideUpdateTime = pSlideStartTime
  [ 21] getparam 1 .............................. <tFromLoc>
  [ 23] pushint8 1 .............................. <1>
  [ 25] pusharglist 2 ........................... <tFromLoc, 1>
  [ 27] objcall 50 .............................. <tFromLoc[1]>
  [ 29] pusharglist 1 ........................... <tFromLoc[1]>
  [ 31] extcall 186 ............................. <getLocalFloat(tFromLoc[1])>
  [ 33] setprop 112 ............................. pLocX = getLocalFloat(tFromLoc[1])
  [ 35] getparam 1 .............................. <tFromLoc>
  [ 37] pushint8 2 .............................. <2>
  [ 39] pusharglist 2 ........................... <tFromLoc, 2>
  [ 41] objcall 50 .............................. <tFromLoc[2]>
  [ 43] pusharglist 1 ........................... <tFromLoc[2]>
  [ 45] extcall 186 ............................. <getLocalFloat(tFromLoc[2])>
  [ 47] setprop 113 ............................. pLocY = getLocalFloat(tFromLoc[2])
  [ 49] getparam 1 .............................. <tFromLoc>
  [ 51] pushint8 3 .............................. <3>
  [ 53] pusharglist 2 ........................... <tFromLoc, 3>
  [ 55] objcall 50 .............................. <tFromLoc[3]>
  [ 57] pusharglist 1 ........................... <tFromLoc[3]>
  [ 59] extcall 186 ............................. <getLocalFloat(tFromLoc[3])>
  [ 61] setprop 114 ............................. pLocH = getLocalFloat(tFromLoc[3])
  [ 63] pusharglist 0 ........................... <[]>
  [ 65] pushlist ................................ <[]>
  [ 66] setlocal 1 .............................. tDistances = []
  [ 68] getlocal 1 .............................. <tDistances>
  [ 70] pushint8 1 .............................. <1>
  [ 72] getparam 1 .............................. <tFromLoc>
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglist 2 ........................... <tFromLoc, 1>
  [ 78] objcall 50 .............................. <tFromLoc[1]>
  [ 80] getparam 2 .............................. <tToLoc>
  [ 82] pushint8 1 .............................. <1>
  [ 84] pusharglist 2 ........................... <tToLoc, 1>
  [ 86] objcall 50 .............................. <tToLoc[1]>
  [ 88] sub ..................................... <tFromLoc[1] - tToLoc[1]>
  [ 89] pusharglist 1 ........................... <tFromLoc[1] - tToLoc[1]>
  [ 91] extcall 187 ............................. <abs(tFromLoc[1] - tToLoc[1])>
  [ 93] pusharglistnoret 3 ...................... <tDistances, 1, abs(tFromLoc[1] - tToLoc[1])>
  [ 95] objcall 158 ............................. tDistances[1] = abs(tFromLoc[1] - tToLoc[1])
  [ 97] getlocal 1 .............................. <tDistances>
  [ 99] pushint8 2 .............................. <2>
  [101] getparam 1 .............................. <tFromLoc>
  [103] pushint8 2 .............................. <2>
  [105] pusharglist 2 ........................... <tFromLoc, 2>
  [107] objcall 50 .............................. <tFromLoc[2]>
  [109] getparam 2 .............................. <tToLoc>
  [111] pushint8 2 .............................. <2>
  [113] pusharglist 2 ........................... <tToLoc, 2>
  [115] objcall 50 .............................. <tToLoc[2]>
  [117] sub ..................................... <tFromLoc[2] - tToLoc[2]>
  [118] pusharglist 1 ........................... <tFromLoc[2] - tToLoc[2]>
  [120] extcall 187 ............................. <abs(tFromLoc[2] - tToLoc[2])>
  [122] pusharglistnoret 3 ...................... <tDistances, 2, abs(tFromLoc[2] - tToLoc[2])>
  [124] objcall 158 ............................. tDistances[2] = abs(tFromLoc[2] - tToLoc[2])
  [126] getlocal 1 .............................. <tDistances>
  [128] pushint8 3 .............................. <3>
  [130] getparam 1 .............................. <tFromLoc>
  [132] pushint8 3 .............................. <3>
  [134] pusharglist 2 ........................... <tFromLoc, 3>
  [136] objcall 50 .............................. <tFromLoc[3]>
  [138] getparam 2 .............................. <tToLoc>
  [140] pushint8 3 .............................. <3>
  [142] pusharglist 2 ........................... <tToLoc, 3>
  [144] objcall 50 .............................. <tToLoc[3]>
  [146] sub ..................................... <tFromLoc[3] - tToLoc[3]>
  [147] pusharglist 1 ........................... <tFromLoc[3] - tToLoc[3]>
  [149] extcall 187 ............................. <abs(tFromLoc[3] - tToLoc[3])>
  [151] pusharglistnoret 3 ...................... <tDistances, 3, abs(tFromLoc[3] - tToLoc[3])>
  [153] objcall 158 ............................. tDistances[3] = abs(tFromLoc[3] - tToLoc[3])
  [155] getlocal 1 .............................. <tDistances>
  [157] pusharglist 1 ........................... <tDistances>
  [159] extcall 188 ............................. <max(tDistances)>
  [161] getprop 132 ............................. <pSlideTimePerTile>
  [163] mul ..................................... <max(tDistances) * pSlideTimePerTile>
  [164] setlocal 2 .............................. tMoveTime = max(tDistances) * pSlideTimePerTile
  [166] getprop 185 ............................. <pSlideStartTime>
  [168] getlocal 2 .............................. <tMoveTime>
  [170] add ..................................... <pSlideStartTime + tMoveTime>
  [171] setprop 189 ............................. pSlideEndTime = pSlideStartTime + tMoveTime
  [173] getprop 112 ............................. <pLocX>
  [175] getprop 113 ............................. <pLocY>
  [177] getprop 114 ............................. <pLocH>
  [179] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [181] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [182] setprop 190 ............................. pStartloc = [pLocX, pLocY, pLocH]
  [184] getparam 2 .............................. <tToLoc>
  [186] setprop 191 ............................. pDestLoc = tToLoc
  [188] getparam 0 .............................. <me>
  [190] pusharglistnoret 1 ...................... <me>
  [192] objcall 101 ............................. me.updateLocation()
  [194] ret
end

on animateSlide me, tTimeNow
  [  0] getparam 1 .............................. <tTimeNow>
  [  2] pusharglist 1 ........................... <tTimeNow>
  [  4] extcall 31 .............................. <voidp(tTimeNow)>
  [  6] jmpifz [ 13] ............................ if voidp(tTimeNow) then
  [  9] getmovieprop 184 ........................ <the milliSeconds>
  [ 11] setparam 1 .............................. tTimeNow = the milliSeconds
  [ 13] getprop 189 ............................. <pSlideEndTime>
  [ 15] getparam 1 .............................. <tTimeNow>
  [ 17] lt ...................................... <pSlideEndTime < tTimeNow>
  [ 18] jmpifz [ 87] ............................ if pSlideEndTime < tTimeNow then
  [ 21] getprop 191 ............................. <pDestLoc>
  [ 23] pushint8 1 .............................. <1>
  [ 25] pusharglist 2 ........................... <pDestLoc, 1>
  [ 27] objcall 50 .............................. <pDestLoc[1]>
  [ 29] getobjprop 177 .......................... <pDestLoc[1].integer>
  [ 31] setprop 112 ............................. pLocX = pDestLoc[1].integer
  [ 33] getprop 191 ............................. <pDestLoc>
  [ 35] pushint8 2 .............................. <2>
  [ 37] pusharglist 2 ........................... <pDestLoc, 2>
  [ 39] objcall 50 .............................. <pDestLoc[2]>
  [ 41] getobjprop 177 .......................... <pDestLoc[2].integer>
  [ 43] setprop 113 ............................. pLocY = pDestLoc[2].integer
  [ 45] getprop 191 ............................. <pDestLoc>
  [ 47] pushint8 3 .............................. <3>
  [ 49] pusharglist 2 ........................... <pDestLoc, 3>
  [ 51] objcall 50 .............................. <pDestLoc[3]>
  [ 53] setprop 114 ............................. pLocH = pDestLoc[3]
  [ 55] pushcons 13 ............................. <"room">
  [ 57] pusharglist 1 ........................... <"room">
  [ 59] extcall 118 ............................. <getThread("room")>
  [ 61] pusharglist 1 ........................... <getThread("room")>
  [ 63] objcall 138 ............................. <getThread("room").getComponent()>
  [ 65] getparam 0 .............................. <me>
  [ 67] getchainedprop 199 ...................... <me.ancestor>
  [ 69] getobjprop 200 .......................... <me.ancestor.id>
  [ 71] pusharglistnoret 2 ...................... <getThread("room").getComponent(), me.ancestor.id>
  [ 73] objcall 142 ............................. getThread("room").getComponent().removeSlideObject(me.ancestor.id)
  [ 75] getparam 0 .............................. <me>
  [ 77] pusharglistnoret 1 ...................... <me>
  [ 79] objcall 101 ............................. me.updateLocation()
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglistnoret 1 ...................... <1>
  [ 85] extcall 14 .............................. return 1
  [ 87] getparam 1 .............................. <tTimeNow>
  [ 89] getprop 185 ............................. <pSlideStartTime>
  [ 91] sub ..................................... <tTimeNow - pSlideStartTime>
  [ 92] pusharglist 1 ........................... <tTimeNow - pSlideStartTime>
  [ 94] extcall 201 ............................. <float(tTimeNow - pSlideStartTime)>
  [ 96] setlocal 0 .............................. tTimeUsed = float(tTimeNow - pSlideStartTime)
  [ 98] getlocal 0 .............................. <tTimeUsed>
  [100] getprop 189 ............................. <pSlideEndTime>
  [102] getprop 185 ............................. <pSlideStartTime>
  [104] sub ..................................... <pSlideEndTime - pSlideStartTime>
  [105] pusharglist 1 ........................... <pSlideEndTime - pSlideStartTime>
  [107] extcall 201 ............................. <float(pSlideEndTime - pSlideStartTime)>
  [109] div ..................................... <tTimeUsed / float(pSlideEndTime - pSlideStartTime)>
  [110] setlocal 1 .............................. tPercentSlided = tTimeUsed / float(pSlideEndTime - pSlideStartTime)
  [112] getprop 191 ............................. <pDestLoc>
  [114] pushint8 1 .............................. <1>
  [116] pusharglist 2 ........................... <pDestLoc, 1>
  [118] objcall 50 .............................. <pDestLoc[1]>
  [120] getprop 190 ............................. <pStartloc>
  [122] pushint8 1 .............................. <1>
  [124] pusharglist 2 ........................... <pStartloc, 1>
  [126] objcall 50 .............................. <pStartloc[1]>
  [128] sub ..................................... <pDestLoc[1] - pStartloc[1]>
  [129] pusharglist 1 ........................... <pDestLoc[1] - pStartloc[1]>
  [131] extcall 201 ............................. <float(pDestLoc[1] - pStartloc[1])>
  [133] getlocal 1 .............................. <tPercentSlided>
  [135] mul ..................................... <float(pDestLoc[1] - pStartloc[1]) * tPercentSlided>
  [136] getprop 190 ............................. <pStartloc>
  [138] pushint8 1 .............................. <1>
  [140] pusharglist 2 ........................... <pStartloc, 1>
  [142] objcall 50 .............................. <pStartloc[1]>
  [144] add ..................................... <(float(pDestLoc[1] - pStartloc[1]) * tPercentSlided) + pStartloc[1]>
  [145] setprop 112 ............................. pLocX = (float(pDestLoc[1] - pStartloc[1]) * tPercentSlided) + pStartloc[1]
  [147] getprop 191 ............................. <pDestLoc>
  [149] pushint8 2 .............................. <2>
  [151] pusharglist 2 ........................... <pDestLoc, 2>
  [153] objcall 50 .............................. <pDestLoc[2]>
  [155] getprop 190 ............................. <pStartloc>
  [157] pushint8 2 .............................. <2>
  [159] pusharglist 2 ........................... <pStartloc, 2>
  [161] objcall 50 .............................. <pStartloc[2]>
  [163] sub ..................................... <pDestLoc[2] - pStartloc[2]>
  [164] pusharglist 1 ........................... <pDestLoc[2] - pStartloc[2]>
  [166] extcall 201 ............................. <float(pDestLoc[2] - pStartloc[2])>
  [168] getlocal 1 .............................. <tPercentSlided>
  [170] mul ..................................... <float(pDestLoc[2] - pStartloc[2]) * tPercentSlided>
  [171] getprop 190 ............................. <pStartloc>
  [173] pushint8 2 .............................. <2>
  [175] pusharglist 2 ........................... <pStartloc, 2>
  [177] objcall 50 .............................. <pStartloc[2]>
  [179] add ..................................... <(float(pDestLoc[2] - pStartloc[2]) * tPercentSlided) + pStartloc[2]>
  [180] setprop 113 ............................. pLocY = (float(pDestLoc[2] - pStartloc[2]) * tPercentSlided) + pStartloc[2]
  [182] getprop 191 ............................. <pDestLoc>
  [184] pushint8 3 .............................. <3>
  [186] pusharglist 2 ........................... <pDestLoc, 3>
  [188] objcall 50 .............................. <pDestLoc[3]>
  [190] getprop 190 ............................. <pStartloc>
  [192] pushint8 3 .............................. <3>
  [194] pusharglist 2 ........................... <pStartloc, 3>
  [196] objcall 50 .............................. <pStartloc[3]>
  [198] sub ..................................... <pDestLoc[3] - pStartloc[3]>
  [199] pusharglist 1 ........................... <pDestLoc[3] - pStartloc[3]>
  [201] extcall 201 ............................. <float(pDestLoc[3] - pStartloc[3])>
  [203] getlocal 1 .............................. <tPercentSlided>
  [205] mul ..................................... <float(pDestLoc[3] - pStartloc[3]) * tPercentSlided>
  [206] getprop 190 ............................. <pStartloc>
  [208] pushint8 3 .............................. <3>
  [210] pusharglist 2 ........................... <pStartloc, 3>
  [212] objcall 50 .............................. <pStartloc[3]>
  [214] add ..................................... <(float(pDestLoc[3] - pStartloc[3]) * tPercentSlided) + pStartloc[3]>
  [215] setprop 114 ............................. pLocH = (float(pDestLoc[3] - pStartloc[3]) * tPercentSlided) + pStartloc[3]
  [217] getparam 0 .............................. <me>
  [219] pusharglistnoret 1 ...................... <me>
  [221] objcall 101 ............................. me.updateLocation()
  [223] pushint8 1 .............................. <1>
  [225] pusharglistnoret 1 ...................... <1>
  [227] extcall 14 .............................. return 1
  [229] ret
end

on ghostObject me
  [  0] getprop 105 ............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 34
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 57] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 50
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 66 ........................... <tSpr.ink>
  [ 32] pushint8 33 ............................. <33>
  [ 34] eq ...................................... <tSpr.ink = 33>
  [ 35] jmpifz [ 46] ............................ if tSpr.ink = 33 then
  [ 38] getlocal 0 .............................. <tSpr>
  [ 40] pushzero ................................ <0>
  [ 41] setobjprop 204 .......................... tSpr.visible = 0
  [ 43] jmp [ 52] ............................... next repeat
  [ 46] getlocal 0 .............................. <tSpr>
  [ 48] pushint8 35 ............................. <35>
  [ 50] setobjprop 205 .......................... tSpr.blend = 35
  [ 52] pushint8 1
  [ 54] add
  [ 55] endrepeat [ 10]
  [ 57] pop 3
  [ 59] ret
end

on removeGhostEffect me
  [  0] getprop 105 ............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 34
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 45] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 50
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] pushint8 1 .............................. <1>
  [ 32] setobjprop 204 .......................... tSpr.visible = 1
  [ 34] getlocal 0 .............................. <tSpr>
  [ 36] pushint8 100 ............................ <100>
  [ 38] setobjprop 205 .......................... tSpr.blend = 100
  [ 40] pushint8 1
  [ 42] add
  [ 43] endrepeat [ 10]
  [ 45] pop 3
  [ 47] ret
end

on getScreenLocation me
  [  0] getprop 105 ............................. <pSprList>
  [  2] getobjprop 34 ........................... <pSprList.count>
  [  4] pushint8 1 .............................. <1>
  [  6] lt ...................................... <pSprList.count < 1>
  [  7] jmpifz [ 20] ............................ if pSprList.count < 1 then
  [ 10] pushzero ................................ <0>
  [ 11] pushzero ................................ <0>
  [ 12] pusharglist 2 ........................... <0, 0>
  [ 14] extcall 43 .............................. <point(0, 0)>
  [ 16] pusharglistnoret 1 ...................... <point(0, 0)>
  [ 18] extcall 14 .............................. return point(0, 0)
  [ 20] getprop 105 ............................. <pSprList>
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglist 2 ........................... <pSprList, 1>
  [ 26] objcall 50 .............................. <pSprList[1]>
  [ 28] setlocal 0 .............................. tSpr = pSprList[1]
  [ 30] getlocal 0 .............................. <tSpr>
  [ 32] pushsymb 44 ............................. <#rect>
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglist 3 ........................... <tSpr, #rect, 1>
  [ 38] objcall 25 .............................. <tSpr.rect[1]>
  [ 40] getlocal 0 .............................. <tSpr>
  [ 42] getobjprop 47 ........................... <tSpr.width>
  [ 44] pushint8 2 .............................. <2>
  [ 46] div ..................................... <tSpr.width / 2>
  [ 47] add ..................................... <tSpr.rect[1] + (tSpr.width / 2)>
  [ 48] getlocal 0 .............................. <tSpr>
  [ 50] pushsymb 44 ............................. <#rect>
  [ 52] pushint8 2 .............................. <2>
  [ 54] pusharglist 3 ........................... <tSpr, #rect, 2>
  [ 56] objcall 25 .............................. <tSpr.rect[2]>
  [ 58] getlocal 0 .............................. <tSpr>
  [ 60] getobjprop 48 ........................... <tSpr.height>
  [ 62] pushint8 2 .............................. <2>
  [ 64] div ..................................... <tSpr.height / 2>
  [ 65] add ..................................... <tSpr.rect[2] + (tSpr.height / 2)>
  [ 66] pusharglist 2 ........................... <tSpr.rect[1] + (tSpr.width / 2), tSpr.rect[2] + (tSpr.height / 2)>
  [ 68] extcall 43 .............................. <point(tSpr.rect[1] + (tSpr.width / 2), tSpr.rect[2] + (tSpr.height / 2))>
  [ 70] setlocal 1 .............................. tloc = point(tSpr.rect[1] + (tSpr.width / 2), tSpr.rect[2] + (tSpr.height / 2))
  [ 72] getlocal 1 .............................. <tloc>
  [ 74] pusharglistnoret 1 ...................... <tloc>
  [ 76] extcall 14 .............................. return tloc
  [ 78] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 14 .............................. return 1
  [  6] ret
end

on relocate me, tSpriteList
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 14 .............................. return 1
  [  6] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 31 .............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 14 ............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 110 ............................. pPartColors = []
  [ 18] getmovieprop 32 ......................... <the itemDelimiter>
  [ 20] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 22] pushcons 15 ............................. <",">
  [ 24] setmovieprop 32 ......................... the itemDelimiter = ","
  [ 26] pushint8 1 .............................. <1>
  [ 28] setlocal 1
  [ 30] getlocal 1
  [ 32] getparam 1 .............................. <tpartColors>
  [ 34] pushsymb 33 ............................. <#item>
  [ 36] pusharglist 2 ........................... <tpartColors, #item>
  [ 38] objcall 34 .............................. <tpartColors.item.count>
  [ 40] lteq
  [ 41] jmpifz [ 73] ............................ repeat with i = 1 to tpartColors.item.count
  [ 44] getprop 110 ............................. <pPartColors>
  [ 46] getparam 1 .............................. <tpartColors>
  [ 48] pushsymb 33 ............................. <#item>
  [ 50] getlocal 1 .............................. <i>
  [ 52] pusharglist 3 ........................... <tpartColors, #item, i>
  [ 54] objcall 25 .............................. <tpartColors.item[i]>
  [ 56] pusharglist 1 ........................... <tpartColors.item[i]>
  [ 58] extcall 35 .............................. <string(tpartColors.item[i])>
  [ 60] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[i])>
  [ 62] objcall 36 .............................. pPartColors.add(string(tpartColors.item[i]))
  [ 64] pushint8 1
  [ 66] getlocal 1
  [ 68] add
  [ 69] setlocal 1
  [ 71] endrepeat [ 30]
  [ 73] getprop 110 ............................. <pPartColors>
  [ 75] getobjprop 34 ........................... <pPartColors.count>
  [ 77] setlocal 2
  [ 79] getlocal 2
  [ 81] pushint8 4 .............................. <4>
  [ 83] lteq
  [ 84] jmpifz [104] ............................ repeat with j = pPartColors.count to 4
  [ 87] getprop 110 ............................. <pPartColors>
  [ 89] pushcons 16 ............................. <"*ffffff">
  [ 91] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [ 93] objcall 36 .............................. pPartColors.add("*ffffff")
  [ 95] pushint8 1
  [ 97] getlocal 2
  [ 99] add
  [100] setlocal 2
  [102] endrepeat [ 79]
  [104] getlocal 0 .............................. <tDelim>
  [106] setmovieprop 32 ......................... the itemDelimiter = tDelim
  [108] ret
end

on solveInk me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 2 .............................. tClass = pClass
  [ 13] getparam 2 .............................. <tClass>
  [ 15] pushcons 17 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushint8 8 .............................. <8>
  [ 28] pusharglistnoret 1 ...................... <8>
  [ 30] extcall 14 .............................. return 8
  [ 32] getparam 2 .............................. <tClass>
  [ 34] pushcons 17 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 47] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 49] getlocal 0 .............................. <tPropList>
  [ 51] pusharglist 1 ........................... <tPropList>
  [ 53] extcall 42 .............................. <ilk(tPropList)>
  [ 55] pushsymb 209 ............................ <#propList>
  [ 57] nteq .................................... <ilk(tPropList) <> #propList>
  [ 58] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 2 .............................. <tClass>
  [ 65] pushcons 18 ............................. <".props is not valid!">
  [ 67] joinstr ................................. <tClass & ".props is not valid!">
  [ 68] pushsymb 95 ............................. <#solveInk>
  [ 70] pushsymb 62 ............................. <#minor>
  [ 72] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #solveInk, #minor>
  [ 74] extcall 61 .............................. error(me, tClass & ".props is not valid!", #solveInk, #minor)
  [ 76] pushint8 8 .............................. <8>
  [ 78] pusharglistnoret 1 ...................... <8>
  [ 80] extcall 14 .............................. return 8
  [ 82] jmp [146]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 50 .............................. <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [100] pushint8 8 .............................. <8>
  [102] pusharglistnoret 1 ...................... <8>
  [104] extcall 14 .............................. return 8
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 50 .............................. <tPropList[tPart]>
  [114] pushsymb 66 ............................. <#ink>
  [116] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [118] objcall 50 .............................. <tPropList[tPart][#ink]>
  [120] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [122] extcall 31 .............................. <voidp(tPropList[tPart][#ink])>
  [124] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [125] jmpifz [146] ............................ if not voidp(tPropList[tPart][#ink]) then
  [128] getlocal 0 .............................. <tPropList>
  [130] getparam 1 .............................. <tPart>
  [132] pusharglist 2 ........................... <tPropList, tPart>
  [134] objcall 50 .............................. <tPropList[tPart]>
  [136] pushsymb 66 ............................. <#ink>
  [138] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [140] objcall 50 .............................. <tPropList[tPart][#ink]>
  [142] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [144] extcall 14 .............................. return tPropList[tPart][#ink]
  [146] pushint8 8 .............................. <8>
  [148] pusharglistnoret 1 ...................... <8>
  [150] extcall 14 .............................. return 8
  [152] ret
end

on solveBlend me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 2 .............................. tClass = pClass
  [ 13] getparam 2 .............................. <tClass>
  [ 15] pushcons 17 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushint8 100 ............................ <100>
  [ 28] pusharglistnoret 1 ...................... <100>
  [ 30] extcall 14 .............................. return 100
  [ 32] getparam 2 .............................. <tClass>
  [ 34] pushcons 17 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 47] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 49] getlocal 0 .............................. <tPropList>
  [ 51] pusharglist 1 ........................... <tPropList>
  [ 53] extcall 42 .............................. <ilk(tPropList)>
  [ 55] pushsymb 209 ............................ <#propList>
  [ 57] nteq .................................... <ilk(tPropList) <> #propList>
  [ 58] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 2 .............................. <tClass>
  [ 65] pushcons 18 ............................. <".props is not valid!">
  [ 67] joinstr ................................. <tClass & ".props is not valid!">
  [ 68] pushsymb 96 ............................. <#solveBlend>
  [ 70] pushsymb 62 ............................. <#minor>
  [ 72] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #solveBlend, #minor>
  [ 74] extcall 61 .............................. error(me, tClass & ".props is not valid!", #solveBlend, #minor)
  [ 76] pushint8 100 ............................ <100>
  [ 78] pusharglistnoret 1 ...................... <100>
  [ 80] extcall 14 .............................. return 100
  [ 82] jmp [146]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 50 .............................. <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [100] pushint8 100 ............................ <100>
  [102] pusharglistnoret 1 ...................... <100>
  [104] extcall 14 .............................. return 100
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 50 .............................. <tPropList[tPart]>
  [114] pushsymb 205 ............................ <#blend>
  [116] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [118] objcall 50 .............................. <tPropList[tPart][#blend]>
  [120] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [122] extcall 31 .............................. <voidp(tPropList[tPart][#blend])>
  [124] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [125] jmpifz [146] ............................ if not voidp(tPropList[tPart][#blend]) then
  [128] getlocal 0 .............................. <tPropList>
  [130] getparam 1 .............................. <tPart>
  [132] pusharglist 2 ........................... <tPropList, tPart>
  [134] objcall 50 .............................. <tPropList[tPart]>
  [136] pushsymb 205 ............................ <#blend>
  [138] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [140] objcall 50 .............................. <tPropList[tPart][#blend]>
  [142] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [144] extcall 14 .............................. return tPropList[tPart][#blend]
  [146] pushint8 100 ............................ <100>
  [148] pusharglistnoret 1 ...................... <100>
  [150] extcall 14 .............................. return 100
  [152] ret
end

on capturesEvents me, tPart, tClass
  [  0] getparam 2 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 2 .............................. tClass = pClass
  [ 13] getparam 2 .............................. <tClass>
  [ 15] pushcons 17 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 32] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglistnoret 1 ...................... <1>
  [ 30] extcall 14 .............................. return 1
  [ 32] getparam 2 .............................. <tClass>
  [ 34] pushcons 17 ............................. <".props">
  [ 36] joinstr ................................. <tClass & ".props">
  [ 37] pusharglist 1 ........................... <tClass & ".props">
  [ 39] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 41] pushzero ................................ <0>
  [ 42] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 43] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 45] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 47] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 49] getlocal 0 .............................. <tPropList>
  [ 51] pusharglist 1 ........................... <tPropList>
  [ 53] extcall 42 .............................. <ilk(tPropList)>
  [ 55] pushsymb 209 ............................ <#propList>
  [ 57] nteq .................................... <ilk(tPropList) <> #propList>
  [ 58] jmpifz [ 85] ............................ if ilk(tPropList) <> #propList then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 2 .............................. <tClass>
  [ 65] pushcons 18 ............................. <".props is not valid!">
  [ 67] joinstr ................................. <tClass & ".props is not valid!">
  [ 68] pushsymb 97 ............................. <#capturesEvents>
  [ 70] pushsymb 62 ............................. <#minor>
  [ 72] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #capturesEvents, #minor>
  [ 74] extcall 61 .............................. error(me, tClass & ".props is not valid!", #capturesEvents, #minor)
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 1 ...................... <1>
  [ 80] extcall 14 .............................. return 1
  [ 82] jmp [146]
  [ 85] getlocal 0 .............................. <tPropList>
  [ 87] getparam 1 .............................. <tPart>
  [ 89] pusharglist 2 ........................... <tPropList, tPart>
  [ 91] objcall 50 .............................. <tPropList[tPart]>
  [ 93] pusharglist 1 ........................... <tPropList[tPart]>
  [ 95] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 97] jmpifz [106] ............................ if voidp(tPropList[tPart]) then
  [100] pushint8 1 .............................. <1>
  [102] pusharglistnoret 1 ...................... <1>
  [104] extcall 14 .............................. return 1
  [106] getlocal 0 .............................. <tPropList>
  [108] getparam 1 .............................. <tPart>
  [110] pusharglist 2 ........................... <tPropList, tPart>
  [112] objcall 50 .............................. <tPropList[tPart]>
  [114] pushsymb 212 ............................ <#events>
  [116] pusharglist 2 ........................... <tPropList[tPart], #events>
  [118] objcall 50 .............................. <tPropList[tPart][#events]>
  [120] pusharglist 1 ........................... <tPropList[tPart][#events]>
  [122] extcall 31 .............................. <voidp(tPropList[tPart][#events])>
  [124] not ..................................... <not voidp(tPropList[tPart][#events])>
  [125] jmpifz [146] ............................ if not voidp(tPropList[tPart][#events]) then
  [128] getlocal 0 .............................. <tPropList>
  [130] getparam 1 .............................. <tPart>
  [132] pusharglist 2 ........................... <tPropList, tPart>
  [134] objcall 50 .............................. <tPropList[tPart]>
  [136] pushsymb 212 ............................ <#events>
  [138] pusharglist 2 ........................... <tPropList[tPart], #events>
  [140] objcall 50 .............................. <tPropList[tPart][#events]>
  [142] pusharglistnoret 1 ...................... <tPropList[tPart][#events]>
  [144] extcall 14 .............................. return tPropList[tPart][#events]
  [146] pushint8 1 .............................. <1>
  [148] pusharglistnoret 1 ...................... <1>
  [150] extcall 14 .............................. return 1
  [152] ret
end

on solveLocZ me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 3 .............................. tClass = pClass
  [ 13] getparam 3 .............................. <tClass>
  [ 15] pushcons 17 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 31] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 14 .............................. return 0
  [ 31] getparam 3 .............................. <tClass>
  [ 33] pushcons 17 ............................. <".props">
  [ 35] joinstr ................................. <tClass & ".props">
  [ 36] pusharglist 1 ........................... <tClass & ".props">
  [ 38] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 40] pushzero ................................ <0>
  [ 41] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 42] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 44] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 46] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 48] getlocal 0 .............................. <tPropList>
  [ 50] pusharglist 1 ........................... <tPropList>
  [ 52] extcall 42 .............................. <ilk(tPropList)>
  [ 54] pushsymb 209 ............................ <#propList>
  [ 56] nteq .................................... <ilk(tPropList) <> #propList>
  [ 57] jmpifz [ 83] ............................ if ilk(tPropList) <> #propList then / else
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 3 .............................. <tClass>
  [ 64] pushcons 18 ............................. <".props is not valid!">
  [ 66] joinstr ................................. <tClass & ".props is not valid!">
  [ 67] pushsymb 98 ............................. <#solveLocZ>
  [ 69] pushsymb 62 ............................. <#minor>
  [ 71] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #solveLocZ, #minor>
  [ 73] extcall 61 .............................. error(me, tClass & ".props is not valid!", #solveLocZ, #minor)
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 1 ...................... <0>
  [ 78] extcall 14 .............................. return 0
  [ 80] jmp [154]
  [ 83] getlocal 0 .............................. <tPropList>
  [ 85] getparam 1 .............................. <tPart>
  [ 87] pusharglist 2 ........................... <tPropList, tPart>
  [ 89] objcall 50 .............................. <tPropList[tPart]>
  [ 91] pusharglist 1 ........................... <tPropList[tPart]>
  [ 93] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 95] jmpifz [103] ............................ if voidp(tPropList[tPart]) then
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 1 ...................... <0>
  [101] extcall 14 .............................. return 0
  [103] getlocal 0 .............................. <tPropList>
  [105] getparam 1 .............................. <tPart>
  [107] pusharglist 2 ........................... <tPropList, tPart>
  [109] objcall 50 .............................. <tPropList[tPart]>
  [111] pushsymb 213 ............................ <#zshift>
  [113] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [115] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [117] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [119] extcall 31 .............................. <voidp(tPropList[tPart][#zshift])>
  [121] jmpifz [129] ............................ if voidp(tPropList[tPart][#zshift]) then
  [124] pushzero ................................ <0>
  [125] pusharglistnoret 1 ...................... <0>
  [127] extcall 14 .............................. return 0
  [129] getlocal 0 .............................. <tPropList>
  [131] getparam 1 .............................. <tPart>
  [133] pusharglist 2 ........................... <tPropList, tPart>
  [135] objcall 50 .............................. <tPropList[tPart]>
  [137] pushsymb 213 ............................ <#zshift>
  [139] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [141] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [143] getobjprop 34 ........................... <tPropList[tPart][#zshift].count>
  [145] getparam 2 .............................. <tdir>
  [147] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [148] jmpifz [154] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [151] pushzero ................................ <0>
  [152] setparam 2 .............................. tdir = 0
  [154] getlocal 0 .............................. <tPropList>
  [156] getparam 1 .............................. <tPart>
  [158] pusharglist 2 ........................... <tPropList, tPart>
  [160] objcall 50 .............................. <tPropList[tPart]>
  [162] pushsymb 213 ............................ <#zshift>
  [164] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [166] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [168] getparam 2 .............................. <tdir>
  [170] pushint8 1 .............................. <1>
  [172] add ..................................... <tdir + 1>
  [173] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [175] objcall 50 .............................. <tPropList[tPart][#zshift][tdir + 1]>
  [177] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [179] extcall 14 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [181] ret
end

on solveLocShift me, tPart, tdir, tClass
  [  0] getparam 3 .............................. <tClass>
  [  2] pusharglist 1 ........................... <tClass>
  [  4] extcall 31 .............................. <voidp(tClass)>
  [  6] jmpifz [ 13] ............................ if voidp(tClass) then
  [  9] getprop 102 ............................. <pClass>
  [ 11] setparam 3 .............................. tClass = pClass
  [ 13] getparam 3 .............................. <tClass>
  [ 15] pushcons 17 ............................. <".props">
  [ 17] joinstr ................................. <tClass & ".props">
  [ 18] pusharglist 1 ........................... <tClass & ".props">
  [ 20] extcall 26 .............................. <memberExists(tClass & ".props")>
  [ 22] not ..................................... <not memberExists(tClass & ".props")>
  [ 23] jmpifz [ 31] ............................ if not memberExists(tClass & ".props") then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 14 .............................. return 0
  [ 31] getparam 3 .............................. <tClass>
  [ 33] pushcons 17 ............................. <".props">
  [ 35] joinstr ................................. <tClass & ".props">
  [ 36] pusharglist 1 ........................... <tClass & ".props">
  [ 38] extcall 18 .............................. <getmemnum(tClass & ".props")>
  [ 40] pushzero ................................ <0>
  [ 41] getfield ................................ <field(getmemnum(tClass & ".props"))>
  [ 42] pusharglist 1 ........................... <field(getmemnum(tClass & ".props"))>
  [ 44] extcall 208 ............................. <value(field(getmemnum(tClass & ".props")))>
  [ 46] setlocal 0 .............................. tPropList = value(field(getmemnum(tClass & ".props")))
  [ 48] getlocal 0 .............................. <tPropList>
  [ 50] pusharglist 1 ........................... <tPropList>
  [ 52] extcall 42 .............................. <ilk(tPropList)>
  [ 54] pushsymb 209 ............................ <#propList>
  [ 56] nteq .................................... <ilk(tPropList) <> #propList>
  [ 57] jmpifz [ 83] ............................ if ilk(tPropList) <> #propList then / else
  [ 60] getparam 0 .............................. <me>
  [ 62] getparam 3 .............................. <tClass>
  [ 64] pushcons 18 ............................. <".props is not valid!">
  [ 66] joinstr ................................. <tClass & ".props is not valid!">
  [ 67] pushsymb 99 ............................. <#solveLocShift>
  [ 69] pushsymb 62 ............................. <#minor>
  [ 71] pusharglistnoret 4 ...................... <me, tClass & ".props is not valid!", #solveLocShift, #minor>
  [ 73] extcall 61 .............................. error(me, tClass & ".props is not valid!", #solveLocShift, #minor)
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 1 ...................... <0>
  [ 78] extcall 14 .............................. return 0
  [ 80] jmp [203]
  [ 83] getlocal 0 .............................. <tPropList>
  [ 85] getparam 1 .............................. <tPart>
  [ 87] pusharglist 2 ........................... <tPropList, tPart>
  [ 89] objcall 50 .............................. <tPropList[tPart]>
  [ 91] pusharglist 1 ........................... <tPropList[tPart]>
  [ 93] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 95] jmpifz [103] ............................ if voidp(tPropList[tPart]) then
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 1 ...................... <0>
  [101] extcall 14 .............................. return 0
  [103] getlocal 0 .............................. <tPropList>
  [105] getparam 1 .............................. <tPart>
  [107] pusharglist 2 ........................... <tPropList, tPart>
  [109] objcall 50 .............................. <tPropList[tPart]>
  [111] pushsymb 215 ............................ <#locshift>
  [113] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [115] objcall 50 .............................. <tPropList[tPart][#locshift]>
  [117] pusharglist 1 ........................... <tPropList[tPart][#locshift]>
  [119] extcall 31 .............................. <voidp(tPropList[tPart][#locshift])>
  [121] jmpifz [129] ............................ if voidp(tPropList[tPart][#locshift]) then
  [124] pushzero ................................ <0>
  [125] pusharglistnoret 1 ...................... <0>
  [127] extcall 14 .............................. return 0
  [129] getlocal 0 .............................. <tPropList>
  [131] getparam 1 .............................. <tPart>
  [133] pusharglist 2 ........................... <tPropList, tPart>
  [135] objcall 50 .............................. <tPropList[tPart]>
  [137] pushsymb 215 ............................ <#locshift>
  [139] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [141] objcall 50 .............................. <tPropList[tPart][#locshift]>
  [143] getobjprop 34 ........................... <tPropList[tPart][#locshift].count>
  [145] getparam 2 .............................. <tdir>
  [147] lteq .................................... <tPropList[tPart][#locshift].count <= tdir>
  [148] jmpifz [156] ............................ if tPropList[tPart][#locshift].count <= tdir then
  [151] pushzero ................................ <0>
  [152] pusharglistnoret 1 ...................... <0>
  [154] extcall 14 .............................. return 0
  [156] getlocal 0 .............................. <tPropList>
  [158] getparam 1 .............................. <tPart>
  [160] pusharglist 2 ........................... <tPropList, tPart>
  [162] objcall 50 .............................. <tPropList[tPart]>
  [164] pushsymb 215 ............................ <#locshift>
  [166] pusharglist 2 ........................... <tPropList[tPart], #locshift>
  [168] objcall 50 .............................. <tPropList[tPart][#locshift]>
  [170] getparam 2 .............................. <tdir>
  [172] pushint8 1 .............................. <1>
  [174] add ..................................... <tdir + 1>
  [175] pusharglist 2 ........................... <tPropList[tPart][#locshift], tdir + 1>
  [177] objcall 50 .............................. <tPropList[tPart][#locshift][tdir + 1]>
  [179] pusharglist 1 ........................... <tPropList[tPart][#locshift][tdir + 1]>
  [181] extcall 208 ............................. <value(tPropList[tPart][#locshift][tdir + 1])>
  [183] setlocal 1 .............................. tShift = value(tPropList[tPart][#locshift][tdir + 1])
  [185] getlocal 1 .............................. <tShift>
  [187] pusharglist 1 ........................... <tShift>
  [189] extcall 42 .............................. <ilk(tShift)>
  [191] pushsymb 43 ............................. <#point>
  [193] eq ...................................... <ilk(tShift) = #point>
  [194] jmpifz [203] ............................ if ilk(tShift) = #point then
  [197] getlocal 1 .............................. <tShift>
  [199] pusharglistnoret 1 ...................... <tShift>
  [201] extcall 14 .............................. return tShift
  [203] pushzero ................................ <0>
  [204] pusharglistnoret 1 ...................... <0>
  [206] extcall 14 .............................. return 0
  [208] ret
end

on solveMembers me
  [  0] getprop 102 ............................. <pClass>
  [  2] setlocal 0 .............................. tClass = pClass
  [  4] getlocal 0 .............................. <tClass>
  [  6] pushcons 19 ............................. <"*">
  [  8] containsstr ............................. <tClass contains "*">
  [  9] jmpifz [ 62] ............................ if tClass contains "*" then / else
  [ 12] getlocal 0 .............................. <tClass>
  [ 14] pushcons 20 ............................. <"_small">
  [ 16] joinstr ................................. <tClass & "_small">
  [ 17] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 19] getlocal 0 .............................. <tClass>
  [ 21] pushsymb 23 ............................. <#char>
  [ 23] pushint8 1 .............................. <1>
  [ 25] pushcons 19 ............................. <"*">
  [ 27] getlocal 0 .............................. <tClass>
  [ 29] pusharglist 2 ........................... <"*", tClass>
  [ 31] extcall 24 .............................. <offset("*", tClass)>
  [ 33] pushint8 1 .............................. <1>
  [ 35] sub ..................................... <offset("*", tClass) - 1>
  [ 36] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [ 38] objcall 25 .............................. <tClass.char[1..offset("*", tClass) - 1]>
  [ 40] setlocal 0 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [ 42] getlocal 1 .............................. <tSmallMem>
  [ 44] pusharglist 1 ........................... <tSmallMem>
  [ 46] extcall 26 .............................. <memberExists(tSmallMem)>
  [ 48] not ..................................... <not memberExists(tSmallMem)>
  [ 49] jmpifz [ 59] ............................ if not memberExists(tSmallMem) then
  [ 52] getlocal 0 .............................. <tClass>
  [ 54] pushcons 20 ............................. <"_small">
  [ 56] joinstr ................................. <tClass & "_small">
  [ 57] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 59] jmp [ 69]
  [ 62] getlocal 0 .............................. <tClass>
  [ 64] pushcons 20 ............................. <"_small">
  [ 66] joinstr ................................. <tClass & "_small">
  [ 67] setlocal 1 .............................. tSmallMem = tClass & "_small"
  [ 69] getlocal 1 .............................. <tSmallMem>
  [ 71] setprop 166 ............................. pSmallMember = tSmallMem
  [ 73] getprop 117 ............................. <pXFactor>
  [ 75] pushint8 32 ............................. <32>
  [ 77] eq ...................................... <pXFactor = 32>
  [ 78] jmpifz [ 88] ............................ if pXFactor = 32 then
  [ 81] pushcons 10 ............................. <"s_">
  [ 83] getlocal 0 .............................. <tClass>
  [ 85] joinstr ................................. <"s_" & tClass>
  [ 86] setlocal 0 .............................. tClass = "s_" & tClass
  [ 88] getprop 105 ............................. <pSprList>
  [ 90] getobjprop 34 ........................... <pSprList.count>
  [ 92] pushzero ................................ <0>
  [ 93] gt ...................................... <pSprList.count > 0>
  [ 94] jmpifz [145] ............................ if pSprList.count > 0 then
  [ 97] getprop 105 ............................. <pSprList>
  [ 99] peek 0
  [101] pusharglist 1
  [103] extcall 34
  [105] pushint8 1
  [107] peek 0
  [109] peek 2
  [111] lteq
  [112] jmpifz [138] ............................ repeat with tSpr in pSprList
  [115] peek 2
  [117] peek 1
  [119] pusharglist 2
  [121] extcall 50
  [123] setlocal 2
  [125] getlocal 2 .............................. <tSpr>
  [127] getobjprop 136 .......................... <tSpr.spriteNum>
  [129] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [131] extcall 135 ............................. releaseSprite(tSpr.spriteNum)
  [133] pushint8 1
  [135] add
  [136] endrepeat [107]
  [138] pop 3
  [140] pusharglist 0 ........................... <[]>
  [142] pushlist ................................ <[]>
  [143] setprop 105 ............................. pSprList = []
  [145] pushint8 1 .............................. <1>
  [147] setlocal 3 .............................. tMemNum = 1
  [149] pushcons 21 ............................. <"a">
  [151] pusharglist 1 ........................... <"a">
  [153] extcall 217 ............................. <charToNum("a")>
  [155] setlocal 4 .............................. i = charToNum("a")
  [157] pushint8 1 .............................. <1>
  [159] setlocal 5 .............................. j = 1
  [161] pushint8 5 .............................. <5>
  [163] inv ..................................... <-5>
  [164] setlocal 6 .............................. tLoczAdjust = -5
  [166] getlocal 3 .............................. <tMemNum>
  [168] pushzero ................................ <0>
  [169] gt ...................................... <tMemNum > 0>
  [170] jmpifz [1072] ........................... repeat while tMemNum > 0
  [173] pushzero ................................ <0>
  [174] setlocal 7 .............................. tFound = 0
  [176] getlocal 7 .............................. <tFound>
  [178] pushzero ................................ <0>
  [179] eq ...................................... <tFound = 0>
  [180] jmpifz [506] ............................ repeat while tFound = 0
  [183] getlocal 0 .............................. <tClass>
  [185] pushcons 9 .............................. <"_">
  [187] joinstr ................................. <tClass & "_">
  [188] getlocal 4 .............................. <i>
  [190] pusharglist 1 ........................... <i>
  [192] extcall 218 ............................. <numToChar(i)>
  [194] joinstr ................................. <tClass & "_" & numToChar(i)>
  [195] pushcons 9 .............................. <"_">
  [197] joinstr ................................. <tClass & "_" & numToChar(i) & "_">
  [198] pushcons 22 ............................. <"0">
  [200] joinstr ................................. <tClass & "_" & numToChar(i) & "_" & "0">
  [201] setlocal 8 .............................. tMemNameA = tClass & "_" & numToChar(i) & "_" & "0"
  [203] getprop 107 ............................. <pDimensions>
  [205] pusharglist 1 ........................... <pDimensions>
  [207] extcall 125 ............................. <listp(pDimensions)>
  [209] jmpifz [240] ............................ if listp(pDimensions) then
  [212] getlocal 8 .............................. <tMemNameA>
  [214] pushcons 9 .............................. <"_">
  [216] joinstr ................................. <tMemNameA & "_">
  [217] getprop 107 ............................. <pDimensions>
  [219] pushint8 1 .............................. <1>
  [221] pusharglist 2 ........................... <pDimensions, 1>
  [223] objcall 50 .............................. <pDimensions[1]>
  [225] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [226] pushcons 9 .............................. <"_">
  [228] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [229] getprop 107 ............................. <pDimensions>
  [231] pushint8 2 .............................. <2>
  [233] pusharglist 2 ........................... <pDimensions, 2>
  [235] objcall 50 .............................. <pDimensions[2]>
  [237] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [238] setlocal 8 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [240] getprop 106 ............................. <pDirection>
  [242] pusharglist 1 ........................... <pDirection>
  [244] extcall 31 .............................. <voidp(pDirection)>
  [246] not ..................................... <not voidp(pDirection)>
  [247] jmpifz [312] ............................ if not voidp(pDirection) then / else
  [250] getprop 106 ............................. <pDirection>
  [252] pusharglist 1 ........................... <pDirection>
  [254] extcall 34 .............................. <count(pDirection)>
  [256] getlocal 5 .............................. <j>
  [258] gteq .................................... <count(pDirection) >= j>
  [259] jmpifz [287] ............................ if count(pDirection) >= j then / else
  [262] getlocal 8 .............................. <tMemNameA>
  [264] pushcons 9 .............................. <"_">
  [266] joinstr ................................. <tMemNameA & "_">
  [267] getprop 106 ............................. <pDirection>
  [269] getlocal 5 .............................. <j>
  [271] pusharglist 2 ........................... <pDirection, j>
  [273] objcall 50 .............................. <pDirection[j]>
  [275] joinstr ................................. <tMemNameA & "_" & pDirection[j]>
  [276] pushcons 9 .............................. <"_">
  [278] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_">
  [279] getprop 111 ............................. <pAnimFrame>
  [281] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame>
  [282] setlocal 9 .............................. tMemName = tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame
  [284] jmp [309]
  [287] getlocal 8 .............................. <tMemNameA>
  [289] pushcons 9 .............................. <"_">
  [291] joinstr ................................. <tMemNameA & "_">
  [292] getprop 106 ............................. <pDirection>
  [294] pushint8 1 .............................. <1>
  [296] pusharglist 2 ........................... <pDirection, 1>
  [298] objcall 50 .............................. <pDirection[1]>
  [300] joinstr ................................. <tMemNameA & "_" & pDirection[1]>
  [301] pushcons 9 .............................. <"_">
  [303] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_">
  [304] getprop 111 ............................. <pAnimFrame>
  [306] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame>
  [307] setlocal 9 .............................. tMemName = tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame
  [309] jmp [322]
  [312] getlocal 8 .............................. <tMemNameA>
  [314] pushcons 9 .............................. <"_">
  [316] joinstr ................................. <tMemNameA & "_">
  [317] getprop 111 ............................. <pAnimFrame>
  [319] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [320] setlocal 9 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [322] getlocal 9 .............................. <tMemName>
  [324] pusharglist 1 ........................... <tMemName>
  [326] extcall 18 .............................. <getmemnum(tMemName)>
  [328] setlocal 3 .............................. tMemNum = getmemnum(tMemName)
  [330] getlocal 9 .............................. <tMemName>
  [332] setlocal 10 ............................. tOldMemName = tMemName
  [334] getlocal 3 .............................. <tMemNum>
  [336] not ..................................... <not tMemNum>
  [337] jmpifz [358] ............................ if not tMemNum then
  [340] getlocal 8 .............................. <tMemNameA>
  [342] pushcons 23 ............................. <"_0_">
  [344] joinstr ................................. <tMemNameA & "_0_">
  [345] getprop 111 ............................. <pAnimFrame>
  [347] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [348] setlocal 9 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [350] getlocal 9 .............................. <tMemName>
  [352] pusharglist 1 ........................... <tMemName>
  [354] extcall 18 .............................. <getmemnum(tMemName)>
  [356] setlocal 3 .............................. tMemNum = getmemnum(tMemName)
  [358] getlocal 3 .............................. <tMemNum>
  [360] not ..................................... <not tMemNum>
  [361] getlocal 5 .............................. <j>
  [363] pushint8 1 .............................. <1>
  [365] eq ...................................... <j = 1>
  [366] and ..................................... <not tMemNum and (j = 1)>
  [367] jmpifz [499] ............................ if not tMemNum and (j = 1) then
  [370] pushzero ................................ <0>
  [371] setlocal 7 .............................. tFound = 0
  [373] getprop 106 ............................. <pDirection>
  [375] pusharglist 1 ........................... <pDirection>
  [377] extcall 125 ............................. <listp(pDirection)>
  [379] jmpifz [496] ............................ if listp(pDirection) then
  [382] pushint8 1 .............................. <1>
  [384] setlocal 11
  [386] getlocal 11
  [388] getprop 106 ............................. <pDirection>
  [390] getobjprop 34 ........................... <pDirection.count>
  [392] lteq
  [393] jmpifz [428] ............................ repeat with tdir = 1 to pDirection.count
  [396] getprop 106 ............................. <pDirection>
  [398] getlocal 11 ............................. <tdir>
  [400] getprop 106 ............................. <pDirection>
  [402] getlocal 11 ............................. <tdir>
  [404] pusharglist 2 ........................... <pDirection, tdir>
  [406] objcall 50 .............................. <pDirection[tdir]>
  [408] pushint8 1 .............................. <1>
  [410] add ..................................... <pDirection[tdir] + 1>
  [411] pusharglist 1 ........................... <pDirection[tdir] + 1>
  [413] extcall 177 ............................. <integer(pDirection[tdir] + 1)>
  [415] pusharglistnoret 3 ...................... <pDirection, tdir, integer(pDirection[tdir] + 1)>
  [417] objcall 158 ............................. pDirection[tdir] = integer(pDirection[tdir] + 1)
  [419] pushint8 1
  [421] getlocal 11
  [423] add
  [424] setlocal 11
  [426] endrepeat [386]
  [428] getprop 106 ............................. <pDirection>
  [430] pushint8 1 .............................. <1>
  [432] pusharglist 2 ........................... <pDirection, 1>
  [434] objcall 50 .............................. <pDirection[1]>
  [436] pushint8 8 .............................. <8>
  [438] eq ...................................... <pDirection[1] = 8>
  [439] jmpifz [496] ............................ if pDirection[1] = 8 then
  [442] getparam 0 .............................. <me>
  [444] pushcons 24 ............................. <"Couldn't define members:">
  [446] getlocal 0 .............................. <tClass>
  [448] joinpadstr .............................. <"Couldn't define members:" && tClass>
  [449] pushsymb 100 ............................ <#solveMembers>
  [451] pushsymb 62 ............................. <#minor>
  [453] pusharglistnoret 4 ...................... <me, "Couldn't define members:" && tClass, #solveMembers, #minor>
  [455] extcall 61 .............................. error(me, "Couldn't define members:" && tClass, #solveMembers, #minor)
  [457] getprop 117 ............................. <pXFactor>
  [459] pushint8 32 ............................. <32>
  [461] eq ...................................... <pXFactor = 32>
  [462] jmpifz [476] ............................ if pXFactor = 32 then / else
  [465] pushcons 25 ............................. <"s_room_object_placeholder">
  [467] pusharglist 1 ........................... <"s_room_object_placeholder">
  [469] extcall 18 .............................. <getmemnum("s_room_object_placeholder")>
  [471] setlocal 3 .............................. tMemNum = getmemnum("s_room_object_placeholder")
  [473] jmp [484]
  [476] pushcons 26 ............................. <"room_object_placeholder">
  [478] pusharglist 1 ........................... <"room_object_placeholder">
  [480] extcall 18 .............................. <getmemnum("room_object_placeholder")>
  [482] setlocal 3 .............................. tMemNum = getmemnum("room_object_placeholder")
  [484] pushzero ................................ <0>
  [485] pushzero ................................ <0>
  [486] pushzero ................................ <0>
  [487] pusharglist 3 ........................... <[0, 0, 0]>
  [489] pushlist ................................ <[0, 0, 0]>
  [490] setprop 106 ............................. pDirection = [0, 0, 0]
  [492] pushint8 1 .............................. <1>
  [494] setlocal 7 .............................. tFound = 1
  [496] jmp [503] ............................... next repeat
  [499] pushint8 1 .............................. <1>
  [501] setlocal 7 .............................. tFound = 1
  [503] endrepeat [176]
  [506] getlocal 3 .............................. <tMemNum>
  [508] pushzero ................................ <0>
  [509] nteq .................................... <tMemNum <> 0>
  [510] jmpifz [1055] ........................... if tMemNum <> 0 then
  [513] getprop 105 ............................. <pSprList>
  [515] pusharglist 1 ........................... <pSprList>
  [517] extcall 34 .............................. <count(pSprList)>
  [519] getlocal 5 .............................. <j>
  [521] gteq .................................... <count(pSprList) >= j>
  [522] jmpifz [538] ............................ if count(pSprList) >= j then / else
  [525] getprop 105 ............................. <pSprList>
  [527] getlocal 5 .............................. <j>
  [529] pusharglist 2 ........................... <pSprList, j>
  [531] objcall 50 .............................. <pSprList[j]>
  [533] setlocal 2 .............................. tSpr = pSprList[j]
  [535] jmp [718]
  [538] pushsymb 119 ............................ <#room>
  [540] pusharglist 1 ........................... <#room>
  [542] extcall 118 ............................. <getThread(#room)>
  [544] pusharglist 1 ........................... <getThread(#room)>
  [546] objcall 120 ............................. <getThread(#room).getInterface()>
  [548] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [550] objcall 140 ............................. <getThread(#room).getInterface().getID()>
  [552] setlocal 12 ............................. tTargetID = getThread(#room).getInterface().getID()
  [554] getparam 0 .............................. <me>
  [556] pusharglist 1 ........................... <me>
  [558] objcall 140 ............................. <me.getID()>
  [560] pusharglist 1 ........................... <me.getID()>
  [562] extcall 219 ............................. <reserveSprite(me.getID())>
  [564] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [566] extcall 173 ............................. <sprite(reserveSprite(me.getID()))>
  [568] setlocal 2 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [570] getlocal 2 .............................. <tSpr>
  [572] pushzero ................................ <0>
  [573] pusharglist 1 ........................... <0>
  [575] extcall 173 ............................. <sprite(0)>
  [577] eq ...................................... <tSpr = sprite(0)>
  [578] jmpifz [628] ............................ if tSpr = sprite(0) then
  [581] pushsymb 119 ............................ <#room>
  [583] pusharglist 1 ........................... <#room>
  [585] extcall 118 ............................. <getThread(#room)>
  [587] setlocal 13 ............................. tRoomThread = getThread(#room)
  [589] getlocal 13 ............................. <tRoomThread>
  [591] pusharglist 1 ........................... <tRoomThread>
  [593] extcall 31 .............................. <voidp(tRoomThread)>
  [595] not ..................................... <not voidp(tRoomThread)>
  [596] jmpifz [609] ............................ if not voidp(tRoomThread) then
  [599] getlocal 13 ............................. <tRoomThread>
  [601] pusharglist 1 ........................... <tRoomThread>
  [603] objcall 138 ............................. <tRoomThread.getComponent()>
  [605] pusharglistnoret 1 ...................... <tRoomThread.getComponent()>
  [607] objcall 220 ............................. tRoomThread.getComponent().releaseSpritesFromActiveObjects()
  [609] getparam 0 .............................. <me>
  [611] pushcons 27 ............................. <"Could not reserve sprite for: ">
  [613] getlocal 0 .............................. <tClass>
  [615] joinpadstr .............................. <"Could not reserve sprite for: " && tClass>
  [616] pushsymb 100 ............................ <#solveMembers>
  [618] pushsymb 221 ............................ <#major>
  [620] pusharglist 4 ........................... <me, "Could not reserve sprite for: " && tClass, #solveMembers, #major>
  [622] extcall 61 .............................. <error(me, "Could not reserve sprite for: " && tClass, #solveMembers, #major)>
  [624] pusharglistnoret 1 ...................... <error(me, "Could not reserve sprite for: " && tClass, #solveMembers, #major)>
  [626] extcall 14 .............................. return error(me, "Could not reserve sprite for: " && tClass, #solveMembers, #major)
  [628] getprop 105 ............................. <pSprList>
  [630] getlocal 2 .............................. <tSpr>
  [632] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [634] objcall 36 .............................. pSprList.add(tSpr)
  [636] getparam 0 .............................. <me>
  [638] getlocal 4 .............................. <i>
  [640] pusharglist 1 ........................... <i>
  [642] extcall 218 ............................. <numToChar(i)>
  [644] getlocal 0 .............................. <tClass>
  [646] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [648] objcall 97 .............................. <me.capturesEvents(numToChar(i), tClass)>
  [650] setlocal 14 ............................. tCapturesEvents = me.capturesEvents(numToChar(i), tClass)
  [652] getlocal 14 ............................. <tCapturesEvents>
  [654] jmpifz [710] ............................ if tCapturesEvents then / else
  [657] getlocal 2 .............................. <tSpr>
  [659] getobjprop 136 .......................... <tSpr.spriteNum>
  [661] getparam 0 .............................. <me>
  [663] pusharglist 1 ........................... <me>
  [665] objcall 140 ............................. <me.getID()>
  [667] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [669] extcall 222 ............................. setEventBroker(tSpr.spriteNum, me.getID())
  [671] getlocal 2 .............................. <tSpr>
  [673] pushsymb 223 ............................ <#eventProcActiveObj>
  [675] getlocal 12 ............................. <tTargetID>
  [677] pushsymb 224 ............................ <#mouseDown>
  [679] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveObj, tTargetID, #mouseDown>
  [681] objcall 225 ............................. tSpr.registerProcedure(#eventProcActiveObj, tTargetID, #mouseDown)
  [683] getlocal 2 .............................. <tSpr>
  [685] pushsymb 226 ............................ <#eventProcActiveRollOver>
  [687] getlocal 12 ............................. <tTargetID>
  [689] pushsymb 227 ............................ <#mouseEnter>
  [691] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveRollOver, tTargetID, #mouseEnter>
  [693] objcall 225 ............................. tSpr.registerProcedure(#eventProcActiveRollOver, tTargetID, #mouseEnter)
  [695] getlocal 2 .............................. <tSpr>
  [697] pushsymb 226 ............................ <#eventProcActiveRollOver>
  [699] getlocal 12 ............................. <tTargetID>
  [701] pushsymb 228 ............................ <#mouseLeave>
  [703] pusharglistnoret 4 ...................... <tSpr, #eventProcActiveRollOver, tTargetID, #mouseLeave>
  [705] objcall 225 ............................. tSpr.registerProcedure(#eventProcActiveRollOver, tTargetID, #mouseLeave)
  [707] jmp [718]
  [710] getlocal 2 .............................. <tSpr>
  [712] getobjprop 136 .......................... <tSpr.spriteNum>
  [714] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [716] extcall 229 ............................. removeEventBroker(tSpr.spriteNum)
  [718] getprop 108 ............................. <pLoczList>
  [720] getobjprop 34 ........................... <pLoczList.count>
  [722] getprop 105 ............................. <pSprList>
  [724] getobjprop 34 ........................... <pSprList.count>
  [726] lt ...................................... <pLoczList.count < pSprList.count>
  [727] jmpifz [739] ............................ if pLoczList.count < pSprList.count then
  [730] getprop 108 ............................. <pLoczList>
  [732] pusharglist 0 ........................... <[]>
  [734] pushlist ................................ <[]>
  [735] pusharglistnoret 2 ...................... <pLoczList, []>
  [737] objcall 36 .............................. pLoczList.add([])
  [739] getprop 109 ............................. <pLocShiftList>
  [741] getobjprop 34 ........................... <pLocShiftList.count>
  [743] getprop 105 ............................. <pSprList>
  [745] getobjprop 34 ........................... <pSprList.count>
  [747] lt ...................................... <pLocShiftList.count < pSprList.count>
  [748] jmpifz [760] ............................ if pLocShiftList.count < pSprList.count then
  [751] getprop 109 ............................. <pLocShiftList>
  [753] pusharglist 0 ........................... <[]>
  [755] pushlist ................................ <[]>
  [756] pusharglistnoret 2 ...................... <pLocShiftList, []>
  [758] objcall 36 .............................. pLocShiftList.add([])
  [760] pushzero ................................ <0>
  [761] setlocal 11
  [763] getlocal 11
  [765] pushint8 7 .............................. <7>
  [767] lteq
  [768] jmpifz [839] ............................ repeat with tdir = 0 to 7
  [771] getprop 108 ............................. <pLoczList>
  [773] pusharglist 1 ........................... <pLoczList>
  [775] objcall 230 ............................. <pLoczList.getLast()>
  [777] getparam 0 .............................. <me>
  [779] getlocal 4 .............................. <i>
  [781] pusharglist 1 ........................... <i>
  [783] extcall 218 ............................. <numToChar(i)>
  [785] getlocal 11 ............................. <tdir>
  [787] getlocal 0 .............................. <tClass>
  [789] pusharglist 4 ........................... <me, numToChar(i), tdir, tClass>
  [791] objcall 98 .............................. <me.solveLocZ(numToChar(i), tdir, tClass)>
  [793] pusharglist 1 ........................... <me.solveLocZ(numToChar(i), tdir, tClass)>
  [795] extcall 177 ............................. <integer(me.solveLocZ(numToChar(i), tdir, tClass))>
  [797] getlocal 6 .............................. <tLoczAdjust>
  [799] add ..................................... <integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust>
  [800] pusharglistnoret 2 ...................... <pLoczList.getLast(), integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust>
  [802] objcall 36 .............................. pLoczList.getLast().add(integer(me.solveLocZ(numToChar(i), tdir, tClass)) + tLoczAdjust)
  [804] getprop 109 ............................. <pLocShiftList>
  [806] pusharglist 1 ........................... <pLocShiftList>
  [808] objcall 230 ............................. <pLocShiftList.getLast()>
  [810] getparam 0 .............................. <me>
  [812] getlocal 4 .............................. <i>
  [814] pusharglist 1 ........................... <i>
  [816] extcall 218 ............................. <numToChar(i)>
  [818] getlocal 11 ............................. <tdir>
  [820] getlocal 0 .............................. <tClass>
  [822] pusharglist 4 ........................... <me, numToChar(i), tdir, tClass>
  [824] objcall 99 .............................. <me.solveLocShift(numToChar(i), tdir, tClass)>
  [826] pusharglistnoret 2 ...................... <pLocShiftList.getLast(), me.solveLocShift(numToChar(i), tdir, tClass)>
  [828] objcall 36 .............................. pLocShiftList.getLast().add(me.solveLocShift(numToChar(i), tdir, tClass))
  [830] pushint8 1
  [832] getlocal 11
  [834] add
  [835] setlocal 11
  [837] endrepeat [763]
  [839] getlocal 6 .............................. <tLoczAdjust>
  [841] pushint8 1 .............................. <1>
  [843] add ..................................... <tLoczAdjust + 1>
  [844] setlocal 6 .............................. tLoczAdjust = tLoczAdjust + 1
  [846] getlocal 2 .............................. <tSpr>
  [848] pusharglist 1 ........................... <tSpr>
  [850] extcall 31 .............................. <voidp(tSpr)>
  [852] not ..................................... <not voidp(tSpr)>
  [853] getlocal 2 .............................. <tSpr>
  [855] pushzero ................................ <0>
  [856] pusharglist 1 ........................... <0>
  [858] extcall 173 ............................. <sprite(0)>
  [860] nteq .................................... <tSpr <> sprite(0)>
  [861] and ..................................... <not voidp(tSpr) and (tSpr <> sprite(0))>
  [862] jmpifz [1039] ........................... if not voidp(tSpr) and (tSpr <> sprite(0)) then / else
  [865] getlocal 3 .............................. <tMemNum>
  [867] pushint8 1 .............................. <1>
  [869] lt ...................................... <tMemNum < 1>
  [870] jmpifz [895] ............................ if tMemNum < 1 then
  [873] getlocal 3 .............................. <tMemNum>
  [875] pusharglist 1 ........................... <tMemNum>
  [877] extcall 187 ............................. <abs(tMemNum)>
  [879] setlocal 3 .............................. tMemNum = abs(tMemNum)
  [881] getlocal 2 .............................. <tSpr>
  [883] pushint16 180 ........................... <180>
  [886] setobjprop 231 .......................... tSpr.rotation = 180
  [888] getlocal 2 .............................. <tSpr>
  [890] pushint16 180 ........................... <180>
  [893] setobjprop 232 .......................... tSpr.skew = 180
  [895] getlocal 2 .............................. <tSpr>
  [897] getlocal 3 .............................. <tMemNum>
  [899] setobjprop 233 .......................... tSpr.castNum = tMemNum
  [901] getlocal 2 .............................. <tSpr>
  [903] getlocal 3 .............................. <tMemNum>
  [905] pusharglist 1 ........................... <tMemNum>
  [907] extcall 19 .............................. <member(tMemNum)>
  [909] getobjprop 47 ........................... <member(tMemNum).width>
  [911] setobjprop 47 ........................... tSpr.width = member(tMemNum).width
  [913] getlocal 2 .............................. <tSpr>
  [915] getlocal 3 .............................. <tMemNum>
  [917] pusharglist 1 ........................... <tMemNum>
  [919] extcall 19 .............................. <member(tMemNum)>
  [921] getobjprop 48 ........................... <member(tMemNum).height>
  [923] setobjprop 48 ........................... tSpr.height = member(tMemNum).height
  [925] getlocal 2 .............................. <tSpr>
  [927] getparam 0 .............................. <me>
  [929] getlocal 4 .............................. <i>
  [931] pusharglist 1 ........................... <i>
  [933] extcall 218 ............................. <numToChar(i)>
  [935] getlocal 0 .............................. <tClass>
  [937] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [939] objcall 95 .............................. <me.solveInk(numToChar(i), tClass)>
  [941] setobjprop 66 ........................... tSpr.ink = me.solveInk(numToChar(i), tClass)
  [943] getlocal 2 .............................. <tSpr>
  [945] getparam 0 .............................. <me>
  [947] getlocal 4 .............................. <i>
  [949] pusharglist 1 ........................... <i>
  [951] extcall 218 ............................. <numToChar(i)>
  [953] getlocal 0 .............................. <tClass>
  [955] pusharglist 3 ........................... <me, numToChar(i), tClass>
  [957] objcall 96 .............................. <me.solveBlend(numToChar(i), tClass)>
  [959] setobjprop 205 .......................... tSpr.blend = me.solveBlend(numToChar(i), tClass)
  [961] getlocal 5 .............................. <j>
  [963] getprop 110 ............................. <pPartColors>
  [965] getobjprop 34 ........................... <pPartColors.count>
  [967] lteq .................................... <j <= pPartColors.count>
  [968] jmpifz [1036] ........................... if j <= pPartColors.count then
  [971] getprop 110 ............................. <pPartColors>
  [973] getlocal 5 .............................. <j>
  [975] pusharglist 2 ........................... <pPartColors, j>
  [977] objcall 50 .............................. <pPartColors[j]>
  [979] pusharglist 1 ........................... <pPartColors[j]>
  [981] extcall 35 .............................. <string(pPartColors[j])>
  [983] pushsymb 23 ............................. <#char>
  [985] pushint8 1 .............................. <1>
  [987] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [989] objcall 25 .............................. <string(pPartColors[j]).char[1]>
  [991] pushcons 28 ............................. <"#">
  [993] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [994] jmpifz [1016] ........................... if string(pPartColors[j]).char[1] = "#" then / else
  [997] getlocal 2 .............................. <tSpr>
  [999] getprop 110 ............................. <pPartColors>
  [1001] getlocal 5 ............................. <j>
  [1003] pusharglist 2 .......................... <pPartColors, j>
  [1005] objcall 50 ............................. <pPartColors[j]>
  [1007] pusharglist 1 .......................... <pPartColors[j]>
  [1009] extcall 65 ............................. <rgb(pPartColors[j])>
  [1011] setobjprop 67 .......................... tSpr.bgColor = rgb(pPartColors[j])
  [1013] jmp [1036]
  [1016] getlocal 2 ............................. <tSpr>
  [1018] getprop 110 ............................ <pPartColors>
  [1020] getlocal 5 ............................. <j>
  [1022] pusharglist 2 .......................... <pPartColors, j>
  [1024] objcall 50 ............................. <pPartColors[j]>
  [1026] pusharglist 1 .......................... <pPartColors[j]>
  [1028] extcall 177 ............................ <integer(pPartColors[j])>
  [1030] pusharglist 1 .......................... <integer(pPartColors[j])>
  [1032] extcall 234 ............................ <paletteIndex(integer(pPartColors[j]))>
  [1034] setobjprop 67 .......................... tSpr.bgColor = paletteIndex(integer(pPartColors[j]))
  [1036] jmp [1055]
  [1039] getparam 0 ............................. <me>
  [1041] pushcons 29 ............................ <"Out of sprites!!!">
  [1043] pushsymb 100 ........................... <#solveMembers>
  [1045] pushsymb 221 ........................... <#major>
  [1047] pusharglist 4 .......................... <me, "Out of sprites!!!", #solveMembers, #major>
  [1049] extcall 61 ............................. <error(me, "Out of sprites!!!", #solveMembers, #major)>
  [1051] pusharglistnoret 1 ..................... <error(me, "Out of sprites!!!", #solveMembers, #major)>
  [1053] extcall 14 ............................. return error(me, "Out of sprites!!!", #solveMembers, #major)
  [1055] getlocal 4 ............................. <i>
  [1057] pushint8 1 ............................. <1>
  [1059] add .................................... <i + 1>
  [1060] setlocal 4 ............................. i = i + 1
  [1062] getlocal 5 ............................. <j>
  [1064] pushint8 1 ............................. <1>
  [1066] add .................................... <j + 1>
  [1067] setlocal 5 ............................. j = j + 1
  [1069] endrepeat [166]
  [1072] getlocal 0 ............................. <tClass>
  [1074] pushcons 30 ............................ <"_sd">
  [1076] joinstr ................................ <tClass & "_sd">
  [1077] setlocal 15 ............................ tShadowName = tClass & "_sd"
  [1079] getprop 106 ............................ <pDirection>
  [1081] pusharglist 1 .......................... <pDirection>
  [1083] extcall 125 ............................ <listp(pDirection)>
  [1085] jmpifz [1104] .......................... if listp(pDirection) then
  [1088] getlocal 15 ............................ <tShadowName>
  [1090] pushcons 9 ............................. <"_">
  [1092] joinstr ................................ <tShadowName & "_">
  [1093] getprop 106 ............................ <pDirection>
  [1095] pushint8 1 ............................. <1>
  [1097] pusharglist 2 .......................... <pDirection, 1>
  [1099] objcall 50 ............................. <pDirection[1]>
  [1101] joinstr ................................ <tShadowName & "_" & pDirection[1]>
  [1102] setlocal 15 ............................ tShadowName = tShadowName & "_" & pDirection[1]
  [1104] getlocal 15 ............................ <tShadowName>
  [1106] pusharglist 1 .......................... <tShadowName>
  [1108] extcall 18 ............................. <getmemnum(tShadowName)>
  [1110] setlocal 16 ............................ tShadowNum = getmemnum(tShadowName)
  [1112] getlocal 16 ............................ <tShadowNum>
  [1114] not .................................... <not tShadowNum>
  [1115] getprop 106 ............................ <pDirection>
  [1117] pusharglist 1 .......................... <pDirection>
  [1119] extcall 125 ............................ <listp(pDirection)>
  [1121] and .................................... <not tShadowNum and listp(pDirection)>
  [1122] jmpifz [1136] .......................... if not tShadowNum and listp(pDirection) then
  [1125] getlocal 0 ............................. <tClass>
  [1127] pushcons 30 ............................ <"_sd">
  [1129] joinstr ................................ <tClass & "_sd">
  [1130] pusharglist 1 .......................... <tClass & "_sd">
  [1132] extcall 18 ............................. <getmemnum(tClass & "_sd")>
  [1134] setlocal 16 ............................ tShadowNum = getmemnum(tClass & "_sd")
  [1136] pushsymb 119 ........................... <#room>
  [1138] pusharglist 1 .......................... <#room>
  [1140] extcall 137 ............................ <threadExists(#room)>
  [1142] jmpifz [1172] .......................... if threadExists(#room) then / else
  [1145] pushsymb 119 ........................... <#room>
  [1147] pusharglist 1 .......................... <#room>
  [1149] extcall 118 ............................ <getThread(#room)>
  [1151] setlocal 13 ............................ tRoomThread = getThread(#room)
  [1153] getlocal 13 ............................ <tRoomThread>
  [1155] pusharglist 1 .......................... <tRoomThread>
  [1157] objcall 138 ............................ <tRoomThread.getComponent()>
  [1159] setlocal 17 ............................ tComponent = tRoomThread.getComponent()
  [1161] getlocal 17 ............................ <tComponent>
  [1163] pusharglist 1 .......................... <tComponent>
  [1165] objcall 139 ............................ <tComponent.getShadowManager()>
  [1167] setlocal 18 ............................ tShadowManager = tComponent.getShadowManager()
  [1169] jmp [1177]
  [1172] pushzero ............................... <0>
  [1173] pusharglistnoret 1 ..................... <0>
  [1175] extcall 14 ............................. return 0
  [1177] getparam 0 ............................. <me>
  [1179] pusharglist 1 .......................... <me>
  [1181] objcall 140 ............................ <me.getID()>
  [1183] setlocal 19 ............................ tID = me.getID()
  [1185] pushsymb 123 ........................... <#session>
  [1187] pusharglist 1 .......................... <#session>
  [1189] extcall 122 ............................ <getObject(#session)>
  [1191] pushcons 1 ............................. <"lastroom">
  [1193] pusharglist 2 .......................... <getObject(#session), "lastroom">
  [1195] objcall 124 ............................ <getObject(#session).GET("lastroom")>
  [1197] pushsymb 127 ........................... <#type>
  [1199] pusharglist 2 .......................... <getObject(#session).GET("lastroom"), #type>
  [1201] objcall 50 ............................. <getObject(#session).GET("lastroom")[#type]>
  [1203] setlocal 20 ............................ tRoomType = getObject(#session).GET("lastroom")[#type]
  [1205] getlocal 20 ............................ <tRoomType>
  [1207] pushsymb 129 ........................... <#private>
  [1209] nteq ................................... <tRoomType <> #private>
  [1210] jmpifz [1407] .......................... if tRoomType <> #private then / else
  [1213] getlocal 16 ............................ <tShadowNum>
  [1215] pushzero ............................... <0>
  [1216] nteq ................................... <tShadowNum <> 0>
  [1217] jmpifz [1404] .......................... if tShadowNum <> 0 then
  [1220] getlocal 19 ............................ <tID>
  [1222] pusharglist 1 .......................... <tID>
  [1224] extcall 219 ............................ <reserveSprite(tID)>
  [1226] pusharglist 1 .......................... <reserveSprite(tID)>
  [1228] extcall 173 ............................ <sprite(reserveSprite(tID))>
  [1230] setlocal 2 ............................. tSpr = sprite(reserveSprite(tID))
  [1232] getprop 105 ............................ <pSprList>
  [1234] getlocal 2 ............................. <tSpr>
  [1236] pusharglistnoret 2 ..................... <pSprList, tSpr>
  [1238] objcall 36 ............................. pSprList.add(tSpr)
  [1240] getprop 108 ............................ <pLoczList>
  [1242] pushint16 4000 ......................... <4000>
  [1245] inv .................................... <-4000>
  [1246] pushint16 4000 ......................... <4000>
  [1249] inv .................................... <-4000>
  [1250] pushint16 4000 ......................... <4000>
  [1253] inv .................................... <-4000>
  [1254] pushint16 4000 ......................... <4000>
  [1257] inv .................................... <-4000>
  [1258] pushint16 4000 ......................... <4000>
  [1261] inv .................................... <-4000>
  [1262] pushint16 4000 ......................... <4000>
  [1265] inv .................................... <-4000>
  [1266] pushint16 4000 ......................... <4000>
  [1269] inv .................................... <-4000>
  [1270] pusharglist 7 .......................... <[-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1272] pushlist ............................... <[-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1273] pusharglistnoret 2 ..................... <pLoczList, [-4000, -4000, -4000, -4000, -4000, -4000, -4000]>
  [1275] objcall 36 ............................. pLoczList.add([-4000, -4000, -4000, -4000, -4000, -4000, -4000])
  [1277] getprop 109 ............................ <pLocShiftList>
  [1279] pushzero ............................... <0>
  [1280] pushzero ............................... <0>
  [1281] pushzero ............................... <0>
  [1282] pushzero ............................... <0>
  [1283] pushzero ............................... <0>
  [1284] pushzero ............................... <0>
  [1285] pushzero ............................... <0>
  [1286] pushzero ............................... <0>
  [1287] pusharglist 8 .......................... <[0, 0, 0, 0, 0, 0, 0, 0]>
  [1289] pushlist ............................... <[0, 0, 0, 0, 0, 0, 0, 0]>
  [1290] pusharglistnoret 2 ..................... <pLocShiftList, [0, 0, 0, 0, 0, 0, 0, 0]>
  [1292] objcall 36 ............................. pLocShiftList.add([0, 0, 0, 0, 0, 0, 0, 0])
  [1294] getlocal 16 ............................ <tShadowNum>
  [1296] pushzero ............................... <0>
  [1297] lt ..................................... <tShadowNum < 0>
  [1298] jmpifz [1334] .......................... if tShadowNum < 0 then
  [1301] getlocal 16 ............................ <tShadowNum>
  [1303] pusharglist 1 .......................... <tShadowNum>
  [1305] extcall 187 ............................ <abs(tShadowNum)>
  [1307] setlocal 16 ............................ tShadowNum = abs(tShadowNum)
  [1309] getlocal 2 ............................. <tSpr>
  [1311] pushint16 180 .......................... <180>
  [1314] setobjprop 231 ......................... tSpr.rotation = 180
  [1316] getlocal 2 ............................. <tSpr>
  [1318] pushint16 180 .......................... <180>
  [1321] setobjprop 232 ......................... tSpr.skew = 180
  [1323] getlocal 2 ............................. <tSpr>
  [1325] getlocal 2 ............................. <tSpr>
  [1327] getobjprop 45 .......................... <tSpr.locH>
  [1329] getprop 117 ............................ <pXFactor>
  [1331] add .................................... <tSpr.locH + pXFactor>
  [1332] setobjprop 45 .......................... tSpr.locH = tSpr.locH + pXFactor
  [1334] getlocal 2 ............................. <tSpr>
  [1336] getlocal 16 ............................ <tShadowNum>
  [1338] setobjprop 233 ......................... tSpr.castNum = tShadowNum
  [1340] getlocal 2 ............................. <tSpr>
  [1342] getlocal 16 ............................ <tShadowNum>
  [1344] pusharglist 1 .......................... <tShadowNum>
  [1346] extcall 19 ............................. <member(tShadowNum)>
  [1348] getobjprop 47 .......................... <member(tShadowNum).width>
  [1350] setobjprop 47 .......................... tSpr.width = member(tShadowNum).width
  [1352] getlocal 2 ............................. <tSpr>
  [1354] getlocal 16 ............................ <tShadowNum>
  [1356] pusharglist 1 .......................... <tShadowNum>
  [1358] extcall 19 ............................. <member(tShadowNum)>
  [1360] getobjprop 48 .......................... <member(tShadowNum).height>
  [1362] setobjprop 48 .......................... tSpr.height = member(tShadowNum).height
  [1364] getlocal 2 ............................. <tSpr>
  [1366] getparam 0 ............................. <me>
  [1368] pushcons 31 ............................ <"sd">
  [1370] pusharglist 2 .......................... <me, "sd">
  [1372] objcall 95 ............................. <me.solveInk("sd")>
  [1374] setobjprop 66 .......................... tSpr.ink = me.solveInk("sd")
  [1376] getlocal 2 ............................. <tSpr>
  [1378] getparam 0 ............................. <me>
  [1380] pushcons 31 ............................ <"sd">
  [1382] pusharglist 2 .......................... <me, "sd">
  [1384] objcall 96 ............................. <me.solveBlend("sd")>
  [1386] setobjprop 205 ......................... tSpr.blend = me.solveBlend("sd")
  [1388] getlocal 2 ............................. <tSpr>
  [1390] getobjprop 205 ......................... <tSpr.blend>
  [1392] pushint8 100 ........................... <100>
  [1394] eq ..................................... <tSpr.blend = 100>
  [1395] jmpifz [1404] .......................... if tSpr.blend = 100 then
  [1398] getlocal 2 ............................. <tSpr>
  [1400] pushint8 20 ............................ <20>
  [1402] setobjprop 205 ......................... tSpr.blend = 20
  [1404] jmp [1620]
  [1407] getlocal 18 ............................ <tShadowManager>
  [1409] pusharglist 1 .......................... <tShadowManager>
  [1411] extcall 31 ............................. <voidp(tShadowManager)>
  [1413] jmpifz [1421] .......................... if voidp(tShadowManager) then
  [1416] pushzero ............................... <0>
  [1417] pusharglistnoret 1 ..................... <0>
  [1419] extcall 14 ............................. return 0
  [1421] getlocal 18 ............................ <tShadowManager>
  [1423] getlocal 19 ............................ <tID>
  [1425] pusharglistnoret 2 ..................... <tShadowManager, tID>
  [1427] objcall 141 ............................ tShadowManager.removeShadow(tID)
  [1429] getlocal 16 ............................ <tShadowNum>
  [1431] pushzero ............................... <0>
  [1432] nteq ................................... <tShadowNum <> 0>
  [1433] getprop 114 ............................ <pLocH>
  [1435] getprop 114 ............................ <pLocH>
  [1437] pusharglist 1 .......................... <pLocH>
  [1439] extcall 177 ............................ <integer(pLocH)>
  [1441] eq ..................................... <pLocH = integer(pLocH)>
  [1442] and .................................... <(tShadowNum <> 0) and (pLocH = integer(pLocH))>
  [1443] jmpifz [1620] .......................... if (tShadowNum <> 0) and (pLocH = integer(pLocH)) then
  [1446] pusharglist 0 .......................... <[:]>
  [1448] pushproplist ........................... <[:]>
  [1449] setlocal 21 ............................ tProps = [:]
  [1451] getlocal 13 ............................ <tRoomThread>
  [1453] pusharglist 1 .......................... <tRoomThread>
  [1455] objcall 120 ............................ <tRoomThread.getInterface()>
  [1457] pusharglist 1 .......................... <tRoomThread.getInterface()>
  [1459] objcall 121 ............................ <tRoomThread.getInterface().getGeometry()>
  [1461] getprop 112 ............................ <pLocX>
  [1463] getprop 113 ............................ <pLocY>
  [1465] getprop 114 ............................ <pLocH>
  [1467] pusharglist 4 .......................... <tRoomThread.getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [1469] objcall 235 ............................ <tRoomThread.getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [1471] setlocal 22 ............................ tScreenLocs = tRoomThread.getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [1473] getlocal 16 ............................ <tShadowNum>
  [1475] pusharglist 1 .......................... <tShadowNum>
  [1477] extcall 19 ............................. <member(tShadowNum)>
  [1479] setlocal 23 ............................ tmember = member(tShadowNum)
  [1481] getlocal 16 ............................ <tShadowNum>
  [1483] pushzero ............................... <0>
  [1484] lt ..................................... <tShadowNum < 0>
  [1485] jmpifz [1524] .......................... if tShadowNum < 0 then
  [1488] getlocal 16 ............................ <tShadowNum>
  [1490] pusharglist 1 .......................... <tShadowNum>
  [1492] extcall 187 ............................ <abs(tShadowNum)>
  [1494] setlocal 16 ............................ tShadowNum = abs(tShadowNum)
  [1496] getlocal 16 ............................ <tShadowNum>
  [1498] pusharglist 1 .......................... <tShadowNum>
  [1500] extcall 19 ............................. <member(tShadowNum)>
  [1502] setlocal 23 ............................ tmember = member(tShadowNum)
  [1504] getlocal 21 ............................ <tProps>
  [1506] pushsymb 236 ........................... <#multiflip>
  [1508] pushint8 1 ............................. <1>
  [1510] pusharglistnoret 3 ..................... <tProps, #multiflip, 1>
  [1512] objcall 158 ............................ tProps[#multiflip] = 1
  [1514] getlocal 21 ............................ <tProps>
  [1516] pushsymb 237 ........................... <#offsetx>
  [1518] getprop 117 ............................ <pXFactor>
  [1520] pusharglistnoret 3 ..................... <tProps, #offsetx, pXFactor>
  [1522] objcall 158 ............................ tProps[#offsetx] = pXFactor
  [1524] getlocal 21 ............................ <tProps>
  [1526] pushsymb 19 ............................ <#member>
  [1528] getlocal 16 ............................ <tShadowNum>
  [1530] pusharglist 1 .......................... <tShadowNum>
  [1532] extcall 19 ............................. <member(tShadowNum)>
  [1534] getobjprop 160 ......................... <member(tShadowNum).name>
  [1536] pusharglistnoret 3 ..................... <tProps, #member, member(tShadowNum).name>
  [1538] objcall 158 ............................ tProps[#member] = member(tShadowNum).name
  [1540] getlocal 21 ............................ <tProps>
  [1542] pushsymb 45 ............................ <#locH>
  [1544] getlocal 22 ............................ <tScreenLocs>
  [1546] pushint8 1 ............................. <1>
  [1548] pusharglist 2 .......................... <tScreenLocs, 1>
  [1550] objcall 50 ............................. <tScreenLocs[1]>
  [1552] pusharglistnoret 3 ..................... <tProps, #locH, tScreenLocs[1]>
  [1554] objcall 158 ............................ tProps[#locH] = tScreenLocs[1]
  [1556] getlocal 21 ............................ <tProps>
  [1558] pushsymb 46 ............................ <#locV>
  [1560] getlocal 22 ............................ <tScreenLocs>
  [1562] pushint8 2 ............................. <2>
  [1564] pusharglist 2 .......................... <tScreenLocs, 2>
  [1566] objcall 50 ............................. <tScreenLocs[2]>
  [1568] pusharglistnoret 3 ..................... <tProps, #locV, tScreenLocs[2]>
  [1570] objcall 158 ............................ tProps[#locV] = tScreenLocs[2]
  [1572] getlocal 21 ............................ <tProps>
  [1574] pushsymb 47 ............................ <#width>
  [1576] getlocal 23 ............................ <tmember>
  [1578] getobjprop 47 .......................... <tmember.width>
  [1580] pusharglistnoret 3 ..................... <tProps, #width, tmember.width>
  [1582] objcall 158 ............................ tProps[#width] = tmember.width
  [1584] getlocal 21 ............................ <tProps>
  [1586] pushsymb 48 ............................ <#height>
  [1588] getlocal 23 ............................ <tmember>
  [1590] getobjprop 48 .......................... <tmember.height>
  [1592] pusharglistnoret 3 ..................... <tProps, #height, tmember.height>
  [1594] objcall 158 ............................ tProps[#height] = tmember.height
  [1596] getlocal 21 ............................ <tProps>
  [1598] pushsymb 200 ........................... <#id>
  [1600] getlocal 19 ............................ <tID>
  [1602] pusharglistnoret 3 ..................... <tProps, #id, tID>
  [1604] objcall 158 ............................ tProps[#id] = tID
  [1606] getlocal 18 ............................ <tShadowManager>
  [1608] getlocal 21 ............................ <tProps>
  [1610] pusharglistnoret 2 ..................... <tShadowManager, tProps>
  [1612] objcall 238 ............................ tShadowManager.addShadow(tProps)
  [1614] getlocal 18 ............................ <tShadowManager>
  [1616] pusharglistnoret 1 ..................... <tShadowManager>
  [1618] objcall 239 ............................ tShadowManager.render()
  [1620] getprop 105 ............................ <pSprList>
  [1622] getobjprop 34 .......................... <pSprList.count>
  [1624] pushzero ............................... <0>
  [1625] gt ..................................... <pSprList.count > 0>
  [1626] jmpifz [1638] .......................... if pSprList.count > 0 then / else
  [1629] pushint8 1 ............................. <1>
  [1631] pusharglistnoret 1 ..................... <1>
  [1633] extcall 14 ............................. return 1
  [1635] jmp [1657]
  [1638] getparam 0 ............................. <me>
  [1640] pushcons 24 ............................ <"Couldn't define members:">
  [1642] getlocal 0 ............................. <tClass>
  [1644] joinpadstr ............................. <"Couldn't define members:" && tClass>
  [1645] pushsymb 100 ........................... <#solveMembers>
  [1647] pushsymb 221 ........................... <#major>
  [1649] pusharglist 4 .......................... <me, "Couldn't define members:" && tClass, #solveMembers, #major>
  [1651] extcall 61 ............................. <error(me, "Couldn't define members:" && tClass, #solveMembers, #major)>
  [1653] pusharglistnoret 1 ..................... <error(me, "Couldn't define members:" && tClass, #solveMembers, #major)>
  [1655] extcall 14 ............................. return error(me, "Couldn't define members:" && tClass, #solveMembers, #major)
  [1657] ret
end

on updateLocation me
  [  0] pushsymb 119 ............................ <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 118 ............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 120 ............................. <getThread(#room).getInterface()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 12] objcall 121 ............................. <getThread(#room).getInterface().getGeometry()>
  [ 14] getprop 112 ............................. <pLocX>
  [ 16] getprop 113 ............................. <pLocY>
  [ 18] getprop 114 ............................. <pLocH>
  [ 20] pusharglist 4 ........................... <getThread(#room).getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [ 22] objcall 235 ............................. <getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 24] setlocal 0 .............................. tScreenLocs = getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 26] pushzero ................................ <0>
  [ 27] setlocal 1 .............................. i = 0
  [ 29] getprop 105 ............................. <pSprList>
  [ 31] peek 0
  [ 33] pusharglist 1
  [ 35] extcall 34
  [ 37] pushint8 1
  [ 39] peek 0
  [ 41] peek 2
  [ 43] lteq
  [ 44] jmpifz [283] ............................ repeat with tSpr in pSprList
  [ 47] peek 2
  [ 49] peek 1
  [ 51] pusharglist 2
  [ 53] extcall 50
  [ 55] setlocal 2
  [ 57] getlocal 1 .............................. <i>
  [ 59] pushint8 1 .............................. <1>
  [ 61] add ..................................... <i + 1>
  [ 62] setlocal 1 .............................. i = i + 1
  [ 64] getlocal 2 .............................. <tSpr>
  [ 66] getlocal 0 .............................. <tScreenLocs>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 72] objcall 50 .............................. <tScreenLocs[1]>
  [ 74] setobjprop 45 ........................... tSpr.locH = tScreenLocs[1]
  [ 76] getlocal 2 .............................. <tSpr>
  [ 78] getlocal 0 .............................. <tScreenLocs>
  [ 80] pushint8 2 .............................. <2>
  [ 82] pusharglist 2 ........................... <tScreenLocs, 2>
  [ 84] objcall 50 .............................. <tScreenLocs[2]>
  [ 86] setobjprop 46 ........................... tSpr.locV = tScreenLocs[2]
  [ 88] getlocal 2 .............................. <tSpr>
  [ 90] getobjprop 231 .......................... <tSpr.rotation>
  [ 92] pushint16 180 ........................... <180>
  [ 95] eq ...................................... <tSpr.rotation = 180>
  [ 96] jmpifz [110] ............................ if tSpr.rotation = 180 then
  [ 99] getlocal 2 .............................. <tSpr>
  [101] getlocal 2 .............................. <tSpr>
  [103] getobjprop 45 ........................... <tSpr.locH>
  [105] getprop 117 ............................. <pXFactor>
  [107] add ..................................... <tSpr.locH + pXFactor>
  [108] setobjprop 45 ........................... tSpr.locH = tSpr.locH + pXFactor
  [110] getprop 106 ............................. <pDirection>
  [112] pushint8 1 .............................. <1>
  [114] pusharglist 2 ........................... <pDirection, 1>
  [116] objcall 50 .............................. <pDirection[1]>
  [118] pushzero ................................ <0>
  [119] lt ...................................... <pDirection[1] < 0>
  [120] jmpifz [132] ............................ if pDirection[1] < 0 then
  [123] getprop 106 ............................. <pDirection>
  [125] pushint8 1 .............................. <1>
  [127] pushzero ................................ <0>
  [128] pusharglistnoret 3 ...................... <pDirection, 1, 0>
  [130] objcall 158 ............................. pDirection[1] = 0
  [132] getprop 106 ............................. <pDirection>
  [134] pushint8 1 .............................. <1>
  [136] pusharglist 2 ........................... <pDirection, 1>
  [138] objcall 50 .............................. <pDirection[1]>
  [140] pushint8 1 .............................. <1>
  [142] add ..................................... <pDirection[1] + 1>
  [143] getprop 109 ............................. <pLocShiftList>
  [145] getlocal 1 .............................. <i>
  [147] pusharglist 2 ........................... <pLocShiftList, i>
  [149] objcall 50 .............................. <pLocShiftList[i]>
  [151] getobjprop 34 ........................... <pLocShiftList[i].count>
  [153] gt ...................................... <(pDirection[1] + 1) > pLocShiftList[i].count>
  [154] jmpifz [166] ............................ if (pDirection[1] + 1) > pLocShiftList[i].count then
  [157] getprop 106 ............................. <pDirection>
  [159] pushint8 1 .............................. <1>
  [161] pushzero ................................ <0>
  [162] pusharglistnoret 3 ...................... <pDirection, 1, 0>
  [164] objcall 158 ............................. pDirection[1] = 0
  [166] getprop 109 ............................. <pLocShiftList>
  [168] getlocal 1 .............................. <i>
  [170] pusharglist 2 ........................... <pLocShiftList, i>
  [172] objcall 50 .............................. <pLocShiftList[i]>
  [174] getprop 106 ............................. <pDirection>
  [176] pushint8 1 .............................. <1>
  [178] pusharglist 2 ........................... <pDirection, 1>
  [180] objcall 50 .............................. <pDirection[1]>
  [182] pushint8 1 .............................. <1>
  [184] add ..................................... <pDirection[1] + 1>
  [185] pusharglist 2 ........................... <pLocShiftList[i], pDirection[1] + 1>
  [187] objcall 50 .............................. <pLocShiftList[i][pDirection[1] + 1]>
  [189] setlocal 3 .............................. tLocShift = pLocShiftList[i][pDirection[1] + 1]
  [191] getlocal 2 .............................. <tSpr>
  [193] getlocal 2 .............................. <tSpr>
  [195] getobjprop 253 .......................... <tSpr.loc>
  [197] getlocal 3 .............................. <tLocShift>
  [199] add ..................................... <tSpr.loc + tLocShift>
  [200] setobjprop 253 .......................... tSpr.loc = tSpr.loc + tLocShift
  [202] getprop 108 ............................. <pLoczList>
  [204] getlocal 1 .............................. <i>
  [206] pusharglist 2 ........................... <pLoczList, i>
  [208] objcall 50 .............................. <pLoczList[i]>
  [210] getprop 106 ............................. <pDirection>
  [212] pushint8 1 .............................. <1>
  [214] pusharglist 2 ........................... <pDirection, 1>
  [216] objcall 50 .............................. <pDirection[1]>
  [218] pushint8 1 .............................. <1>
  [220] add ..................................... <pDirection[1] + 1>
  [221] pusharglist 2 ........................... <pLoczList[i], pDirection[1] + 1>
  [223] objcall 50 .............................. <pLoczList[i][pDirection[1] + 1]>
  [225] setlocal 4 .............................. tZ = pLoczList[i][pDirection[1] + 1]
  [227] getprop 130 ............................. <pCorrectLocZ>
  [229] jmpifz [260] ............................ if pCorrectLocZ then
  [232] getlocal 2 .............................. <tSpr>
  [234] getlocal 0 .............................. <tScreenLocs>
  [236] pushint8 3 .............................. <3>
  [238] pusharglist 2 ........................... <tScreenLocs, 3>
  [240] objcall 50 .............................. <tScreenLocs[3]>
  [242] getprop 114 ............................. <pLocH>
  [244] pushint16 1000 .......................... <1000>
  [247] mul ..................................... <pLocH * 1000>
  [248] add ..................................... <tScreenLocs[3] + (pLocH * 1000)>
  [249] getlocal 4 .............................. <tZ>
  [251] add ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ>
  [252] pushint8 1 .............................. <1>
  [254] sub ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ - 1>
  [255] setobjprop 254 .......................... tSpr.locZ = tScreenLocs[3] + (pLocH * 1000) + tZ - 1
  [257] jmp [278] ............................... next repeat
  [260] getlocal 2 .............................. <tSpr>
  [262] getlocal 0 .............................. <tScreenLocs>
  [264] pushint8 3 .............................. <3>
  [266] pusharglist 2 ........................... <tScreenLocs, 3>
  [268] objcall 50 .............................. <tScreenLocs[3]>
  [270] getlocal 4 .............................. <tZ>
  [272] add ..................................... <tScreenLocs[3] + tZ>
  [273] pushint8 1 .............................. <1>
  [275] sub ..................................... <tScreenLocs[3] + tZ - 1>
  [276] setobjprop 254 .......................... tSpr.locZ = tScreenLocs[3] + tZ - 1
  [278] pushint8 1
  [280] add
  [281] endrepeat [ 39]
  [283] pop 3
  [285] getparam 0 .............................. <me>
  [287] getprop 105 ............................. <pSprList>
  [289] pusharglistnoret 2 ...................... <me, pSprList>
  [291] objcall 93 .............................. me.relocate(pSprList)
  [293] ret
end
