property pClass, pSprList, pDirection, pDimensions, pLoczList, pPartColors, pAnimFrame, pLocX, pLocY, pLocH, pAltitude, pXFactor, pCustom, pCorrectLocZ

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 102 ............................. pClass = EMPTY
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 104 ............................. pCustom = EMPTY
  [  8] pusharglist 0 ........................... <[]>
  [ 10] pushlist ................................ <[]>
  [ 11] setprop 105 ............................. pSprList = []
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 106 ............................. pDirection = []
  [ 18] pusharglist 0 ........................... <[]>
  [ 20] pushlist ................................ <[]>
  [ 21] setprop 107 ............................. pDimensions = []
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] setprop 108 ............................. pLoczList = []
  [ 28] pusharglist 0 ........................... <[]>
  [ 30] pushlist ................................ <[]>
  [ 31] setprop 110 ............................. pPartColors = []
  [ 33] pushzero ................................ <0>
  [ 34] setprop 111 ............................. pAnimFrame = 0
  [ 36] pushzero ................................ <0>
  [ 37] setprop 112 ............................. pLocX = 0
  [ 39] pushzero ................................ <0>
  [ 40] setprop 113 ............................. pLocY = 0
  [ 42] pushzero ................................ <0>
  [ 43] setprop 114 ............................. pLocH = 0
  [ 45] pushzero ................................ <0>
  [ 46] setprop 115 ............................. pAltitude = 0
  [ 48] pushsymb 119 ............................ <#room>
  [ 50] pusharglist 1 ........................... <#room>
  [ 52] extcall 118 ............................. <getThread(#room)>
  [ 54] pusharglist 1 ........................... <getThread(#room)>
  [ 56] objcall 120 ............................. <getThread(#room).getInterface()>
  [ 58] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 60] objcall 121 ............................. <getThread(#room).getInterface().getGeometry()>
  [ 62] getobjprop 117 .......................... <getThread(#room).getInterface().getGeometry().pXFactor>
  [ 64] setprop 117 ............................. pXFactor = getThread(#room).getInterface().getGeometry().pXFactor
  [ 66] pushsymb 123 ............................ <#session>
  [ 68] pusharglist 1 ........................... <#session>
  [ 70] extcall 122 ............................. <getObject(#session)>
  [ 72] pushcons 1 .............................. <"lastroom">
  [ 74] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [ 76] objcall 124 ............................. <getObject(#session).GET("lastroom")>
  [ 78] setlocal 0 .............................. tRoomStruct = getObject(#session).GET("lastroom")
  [ 80] getlocal 0 .............................. <tRoomStruct>
  [ 82] pusharglist 1 ........................... <tRoomStruct>
  [ 84] extcall 125 ............................. <listp(tRoomStruct)>
  [ 86] not ..................................... <not listp(tRoomStruct)>
  [ 87] jmpifz [107] ............................ if not listp(tRoomStruct) then / else
  [ 90] getparam 0 .............................. <me>
  [ 92] pushcons 2 .............................. <"Room struct not saved in #session!">
  [ 94] pushsymb 0 .............................. <#construct>
  [ 96] pusharglistnoret 3 ...................... <me, "Room struct not saved in #session!", #construct>
  [ 98] extcall 61 .............................. error(me, "Room struct not saved in #session!", #construct)
  [100] pushsymb 126 ............................ <#public>
  [102] setlocal 1 .............................. ttype = #public
  [104] jmp [117]
  [107] getlocal 0 .............................. <tRoomStruct>
  [109] pushsymb 127 ............................ <#type>
  [111] pusharglist 2 ........................... <tRoomStruct, #type>
  [113] objcall 128 ............................. <tRoomStruct.getaProp(#type)>
  [115] setlocal 1 .............................. ttype = tRoomStruct.getaProp(#type)
  [117] getlocal 1 .............................. <ttype>
  [119] pushsymb 129 ............................ <#private>
  [121] eq ...................................... <ttype = #private>
  [122] jmpifz [132] ............................ if ttype = #private then / else
  [125] pushint8 1 .............................. <1>
  [127] setprop 130 ............................. pCorrectLocZ = 1
  [129] jmp [135]
  [132] pushzero ................................ <0>
  [133] setprop 130 ............................. pCorrectLocZ = 0
  [135] pushint8 1 .............................. <1>
  [137] pusharglistnoret 1 ...................... <1>
  [139] extcall 14 .............................. return 1
  [141] ret
end

on deconstruct me
  [  0] getprop 105 ............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 34
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 41] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 50
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] getobjprop 136 .......................... <tSpr.spriteNum>
  [ 32] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 34] extcall 135 ............................. releaseSprite(tSpr.spriteNum)
  [ 36] pushint8 1
  [ 38] add
  [ 39] endrepeat [ 10]
  [ 41] pop 3
  [ 43] pusharglist 0 ........................... <[]>
  [ 45] pushlist ................................ <[]>
  [ 46] setprop 105 ............................. pSprList = []
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 14 .............................. return 1
  [ 54] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 147 ............................ <#class>
  [  4] pusharglist 2 ........................... <tdata, #class>
  [  6] objcall 50 .............................. <tdata[#class]>
  [  8] setprop 102 ............................. pClass = tdata[#class]
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 148 ............................ <#direction>
  [ 14] pusharglist 2 ........................... <tdata, #direction>
  [ 16] objcall 50 .............................. <tdata[#direction]>
  [ 18] setprop 106 ............................. pDirection = tdata[#direction]
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 149 ............................ <#dimensions>
  [ 24] pusharglist 2 ........................... <tdata, #dimensions>
  [ 26] objcall 50 .............................. <tdata[#dimensions]>
  [ 28] setprop 107 ............................. pDimensions = tdata[#dimensions]
  [ 30] getparam 1 .............................. <tdata>
  [ 32] pushsymb 151 ............................ <#x>
  [ 34] pusharglist 2 ........................... <tdata, #x>
  [ 36] objcall 50 .............................. <tdata[#x]>
  [ 38] setprop 112 ............................. pLocX = tdata[#x]
  [ 40] getparam 1 .............................. <tdata>
  [ 42] pushsymb 152 ............................ <#y>
  [ 44] pusharglist 2 ........................... <tdata, #y>
  [ 46] objcall 50 .............................. <tdata[#y]>
  [ 48] setprop 113 ............................. pLocY = tdata[#y]
  [ 50] getparam 1 .............................. <tdata>
  [ 52] pushsymb 261 ............................ <#h>
  [ 55] pusharglist 2 ........................... <tdata, #h>
  [ 57] objcall 50 .............................. <tdata[#h]>
  [ 59] setprop 114 ............................. pLocH = tdata[#h]
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 1 .............................. <tdata>
  [ 65] pushsymb 154 ............................ <#colors>
  [ 67] pusharglist 2 ........................... <tdata, #colors>
  [ 69] objcall 50 .............................. <tdata[#colors]>
  [ 71] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [ 73] objcall 94 .............................. me.solveColors(tdata[#colors])
  [ 75] getparam 0 .............................. <me>
  [ 77] pusharglist 1 ........................... <me>
  [ 79] objcall 100 ............................. <me.solveMembers()>
  [ 81] pushzero ................................ <0>
  [ 82] eq ...................................... <me.solveMembers() = 0>
  [ 83] jmpifz [ 91] ............................ if me.solveMembers() = 0 then
  [ 86] pushzero ................................ <0>
  [ 87] pusharglistnoret 1 ...................... <0>
  [ 89] extcall 14 .............................. return 0
  [ 91] getparam 0 .............................. <me>
  [ 93] getparam 1 .............................. <tdata>
  [ 95] pushsymb 155 ............................ <#props>
  [ 97] pusharglist 2 ........................... <tdata, #props>
  [ 99] objcall 50 .............................. <tdata[#props]>
  [101] pusharglist 2 ........................... <me, tdata[#props]>
  [103] objcall 92 .............................. <me.prepare(tdata[#props])>
  [105] pushzero ................................ <0>
  [106] eq ...................................... <me.prepare(tdata[#props]) = 0>
  [107] jmpifz [115] ............................ if me.prepare(tdata[#props]) = 0 then
  [110] pushzero ................................ <0>
  [111] pusharglistnoret 1 ...................... <0>
  [113] extcall 14 .............................. return 0
  [115] getparam 0 .............................. <me>
  [117] pusharglistnoret 1 ...................... <me>
  [119] objcall 101 ............................. me.updateLocation()
  [121] pushint8 1 .............................. <1>
  [123] pusharglistnoret 1 ...................... <1>
  [125] extcall 14 .............................. return 1
  [127] ret
end

on prepare me, tdata
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 14 .............................. return 1
  [  6] ret
end

on getInfo me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tInfo = [:]
  [  5] getlocal 0 .............................. <tInfo>
  [  7] pushsymb 160 ............................ <#name>
  [  9] getprop 102 ............................. <pClass>
  [ 11] pusharglistnoret 3 ...................... <tInfo, #name, pClass>
  [ 13] objcall 158 ............................. tInfo[#name] = pClass
  [ 15] getlocal 0 .............................. <tInfo>
  [ 17] pushsymb 147 ............................ <#class>
  [ 19] getprop 102 ............................. <pClass>
  [ 21] pusharglistnoret 3 ...................... <tInfo, #class, pClass>
  [ 23] objcall 158 ............................. tInfo[#class] = pClass
  [ 25] getlocal 0 .............................. <tInfo>
  [ 27] pushsymb 162 ............................ <#custom>
  [ 29] getprop 104 ............................. <pCustom>
  [ 31] pusharglistnoret 3 ...................... <tInfo, #custom, pCustom>
  [ 33] objcall 158 ............................. tInfo[#custom] = pCustom
  [ 35] getlocal 0 .............................. <tInfo>
  [ 37] pushsymb 153 ............................ <#expire>
  [ 39] pushint8 1 .............................. <1>
  [ 41] inv ..................................... <-1>
  [ 42] pusharglistnoret 3 ...................... <tInfo, #expire, -1>
  [ 44] objcall 158 ............................. tInfo[#expire] = -1
  [ 46] getlocal 0 .............................. <tInfo>
  [ 48] pusharglistnoret 1 ...................... <tInfo>
  [ 50] extcall 14 .............................. return tInfo
  [ 52] ret
end

on getLocation me
  [  0] getprop 112 ............................. <pLocX>
  [  2] getprop 113 ............................. <pLocY>
  [  4] getprop 114 ............................. <pLocH>
  [  6] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [  8] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [  9] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 11] extcall 14 .............................. return [pLocX, pLocY, pLocH]
  [ 13] ret
end

on getDirection me
  [  0] getprop 106 ............................. <pDirection>
  [  2] pusharglistnoret 1 ...................... <pDirection>
  [  4] extcall 14 .............................. return pDirection
  [  6] ret
end

on getSprites me
  [  0] getprop 105 ............................. <pSprList>
  [  2] pusharglistnoret 1 ...................... <pSprList>
  [  4] extcall 14 .............................. return pSprList
  [  6] ret
end

on select me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 14 .............................. return 0
  [  5] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 31 .............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 3 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 110 ............................. pPartColors = []
  [ 18] getmovieprop 32 ......................... <the itemDelimiter>
  [ 20] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 22] pushcons 4 .............................. <",">
  [ 24] setmovieprop 32 ......................... the itemDelimiter = ","
  [ 26] pushint8 1 .............................. <1>
  [ 28] setlocal 1
  [ 30] getlocal 1
  [ 32] getparam 1 .............................. <tpartColors>
  [ 34] pushsymb 33 ............................. <#item>
  [ 36] pusharglist 2 ........................... <tpartColors, #item>
  [ 38] objcall 34 .............................. <tpartColors.item.count>
  [ 40] lteq
  [ 41] jmpifz [ 73] ............................ repeat with t = 1 to tpartColors.item.count
  [ 44] getprop 110 ............................. <pPartColors>
  [ 46] getparam 1 .............................. <tpartColors>
  [ 48] pushsymb 33 ............................. <#item>
  [ 50] getlocal 1 .............................. <t>
  [ 52] pusharglist 3 ........................... <tpartColors, #item, t>
  [ 54] objcall 25 .............................. <tpartColors.item[t]>
  [ 56] pusharglist 1 ........................... <tpartColors.item[t]>
  [ 58] extcall 35 .............................. <string(tpartColors.item[t])>
  [ 60] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[t])>
  [ 62] objcall 36 .............................. pPartColors.add(string(tpartColors.item[t]))
  [ 64] pushint8 1
  [ 66] getlocal 1
  [ 68] add
  [ 69] setlocal 1
  [ 71] endrepeat [ 30]
  [ 73] getprop 110 ............................. <pPartColors>
  [ 75] getobjprop 34 ........................... <pPartColors.count>
  [ 77] setlocal 2
  [ 79] getlocal 2
  [ 81] pushint8 4 .............................. <4>
  [ 83] lteq
  [ 84] jmpifz [104] ............................ repeat with j = pPartColors.count to 4
  [ 87] getprop 110 ............................. <pPartColors>
  [ 89] pushcons 5 .............................. <"*ffffff">
  [ 91] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [ 93] objcall 36 .............................. pPartColors.add("*ffffff")
  [ 95] pushint8 1
  [ 97] getlocal 2
  [ 99] add
  [100] setlocal 2
  [102] endrepeat [ 79]
  [104] getlocal 0 .............................. <tDelim>
  [106] setmovieprop 32 ......................... the itemDelimiter = tDelim
  [108] ret
end

on solveInk me, tPart
  [  0] getprop 102 ............................. <pClass>
  [  2] pushcons 6 .............................. <".props">
  [  4] joinstr ................................. <pClass & ".props">
  [  5] pusharglist 1 ........................... <pClass & ".props">
  [  7] extcall 26 .............................. <memberExists(pClass & ".props")>
  [  9] not ..................................... <not memberExists(pClass & ".props")>
  [ 10] jmpifz [ 19] ............................ if not memberExists(pClass & ".props") then
  [ 13] pushint8 8 .............................. <8>
  [ 15] pusharglistnoret 1 ...................... <8>
  [ 17] extcall 14 .............................. return 8
  [ 19] getprop 102 ............................. <pClass>
  [ 21] pushcons 6 .............................. <".props">
  [ 23] joinstr ................................. <pClass & ".props">
  [ 24] pusharglist 1 ........................... <pClass & ".props">
  [ 26] extcall 18 .............................. <getmemnum(pClass & ".props")>
  [ 28] pushzero ................................ <0>
  [ 29] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 30] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 32] extcall 208 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 34] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 36] getlocal 0 .............................. <tPropList>
  [ 38] pusharglist 1 ........................... <tPropList>
  [ 40] extcall 42 .............................. <ilk(tPropList)>
  [ 42] pushsymb 209 ............................ <#propList>
  [ 44] nteq .................................... <ilk(tPropList) <> #propList>
  [ 45] jmpifz [ 72] ............................ if ilk(tPropList) <> #propList then / else
  [ 48] getparam 0 .............................. <me>
  [ 50] getprop 102 ............................. <pClass>
  [ 52] pushcons 7 .............................. <".props is not valid!">
  [ 54] joinstr ................................. <pClass & ".props is not valid!">
  [ 55] pushsymb 95 ............................. <#solveInk>
  [ 57] pushsymb 62 ............................. <#minor>
  [ 59] pusharglistnoret 4 ...................... <me, pClass & ".props is not valid!", #solveInk, #minor>
  [ 61] extcall 61 .............................. error(me, pClass & ".props is not valid!", #solveInk, #minor)
  [ 63] pushint8 8 .............................. <8>
  [ 65] pusharglistnoret 1 ...................... <8>
  [ 67] extcall 14 .............................. return 8
  [ 69] jmp [133]
  [ 72] getlocal 0 .............................. <tPropList>
  [ 74] getparam 1 .............................. <tPart>
  [ 76] pusharglist 2 ........................... <tPropList, tPart>
  [ 78] objcall 50 .............................. <tPropList[tPart]>
  [ 80] pusharglist 1 ........................... <tPropList[tPart]>
  [ 82] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 84] jmpifz [ 93] ............................ if voidp(tPropList[tPart]) then
  [ 87] pushint8 8 .............................. <8>
  [ 89] pusharglistnoret 1 ...................... <8>
  [ 91] extcall 14 .............................. return 8
  [ 93] getlocal 0 .............................. <tPropList>
  [ 95] getparam 1 .............................. <tPart>
  [ 97] pusharglist 2 ........................... <tPropList, tPart>
  [ 99] objcall 50 .............................. <tPropList[tPart]>
  [101] pushsymb 66 ............................. <#ink>
  [103] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [105] objcall 50 .............................. <tPropList[tPart][#ink]>
  [107] pusharglist 1 ........................... <tPropList[tPart][#ink]>
  [109] extcall 31 .............................. <voidp(tPropList[tPart][#ink])>
  [111] not ..................................... <not voidp(tPropList[tPart][#ink])>
  [112] jmpifz [133] ............................ if not voidp(tPropList[tPart][#ink]) then
  [115] getlocal 0 .............................. <tPropList>
  [117] getparam 1 .............................. <tPart>
  [119] pusharglist 2 ........................... <tPropList, tPart>
  [121] objcall 50 .............................. <tPropList[tPart]>
  [123] pushsymb 66 ............................. <#ink>
  [125] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [127] objcall 50 .............................. <tPropList[tPart][#ink]>
  [129] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [131] extcall 14 .............................. return tPropList[tPart][#ink]
  [133] pushint8 8 .............................. <8>
  [135] pusharglistnoret 1 ...................... <8>
  [137] extcall 14 .............................. return 8
  [139] ret
end

on solveBlend me, tPart
  [  0] getprop 102 ............................. <pClass>
  [  2] pushcons 6 .............................. <".props">
  [  4] joinstr ................................. <pClass & ".props">
  [  5] pusharglist 1 ........................... <pClass & ".props">
  [  7] extcall 26 .............................. <memberExists(pClass & ".props")>
  [  9] not ..................................... <not memberExists(pClass & ".props")>
  [ 10] jmpifz [ 19] ............................ if not memberExists(pClass & ".props") then
  [ 13] pushint8 100 ............................ <100>
  [ 15] pusharglistnoret 1 ...................... <100>
  [ 17] extcall 14 .............................. return 100
  [ 19] getprop 102 ............................. <pClass>
  [ 21] pushcons 6 .............................. <".props">
  [ 23] joinstr ................................. <pClass & ".props">
  [ 24] pusharglist 1 ........................... <pClass & ".props">
  [ 26] extcall 18 .............................. <getmemnum(pClass & ".props")>
  [ 28] pushzero ................................ <0>
  [ 29] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 30] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 32] extcall 208 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 34] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 36] getlocal 0 .............................. <tPropList>
  [ 38] pusharglist 1 ........................... <tPropList>
  [ 40] extcall 42 .............................. <ilk(tPropList)>
  [ 42] pushsymb 209 ............................ <#propList>
  [ 44] nteq .................................... <ilk(tPropList) <> #propList>
  [ 45] jmpifz [ 72] ............................ if ilk(tPropList) <> #propList then / else
  [ 48] getparam 0 .............................. <me>
  [ 50] getprop 102 ............................. <pClass>
  [ 52] pushcons 7 .............................. <".props is not valid!">
  [ 54] joinstr ................................. <pClass & ".props is not valid!">
  [ 55] pushsymb 96 ............................. <#solveBlend>
  [ 57] pushsymb 62 ............................. <#minor>
  [ 59] pusharglistnoret 4 ...................... <me, pClass & ".props is not valid!", #solveBlend, #minor>
  [ 61] extcall 61 .............................. error(me, pClass & ".props is not valid!", #solveBlend, #minor)
  [ 63] pushint8 100 ............................ <100>
  [ 65] pusharglistnoret 1 ...................... <100>
  [ 67] extcall 14 .............................. return 100
  [ 69] jmp [133]
  [ 72] getlocal 0 .............................. <tPropList>
  [ 74] getparam 1 .............................. <tPart>
  [ 76] pusharglist 2 ........................... <tPropList, tPart>
  [ 78] objcall 50 .............................. <tPropList[tPart]>
  [ 80] pusharglist 1 ........................... <tPropList[tPart]>
  [ 82] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 84] jmpifz [ 93] ............................ if voidp(tPropList[tPart]) then
  [ 87] pushint8 100 ............................ <100>
  [ 89] pusharglistnoret 1 ...................... <100>
  [ 91] extcall 14 .............................. return 100
  [ 93] getlocal 0 .............................. <tPropList>
  [ 95] getparam 1 .............................. <tPart>
  [ 97] pusharglist 2 ........................... <tPropList, tPart>
  [ 99] objcall 50 .............................. <tPropList[tPart]>
  [101] pushsymb 205 ............................ <#blend>
  [103] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [105] objcall 50 .............................. <tPropList[tPart][#blend]>
  [107] pusharglist 1 ........................... <tPropList[tPart][#blend]>
  [109] extcall 31 .............................. <voidp(tPropList[tPart][#blend])>
  [111] not ..................................... <not voidp(tPropList[tPart][#blend])>
  [112] jmpifz [133] ............................ if not voidp(tPropList[tPart][#blend]) then
  [115] getlocal 0 .............................. <tPropList>
  [117] getparam 1 .............................. <tPart>
  [119] pusharglist 2 ........................... <tPropList, tPart>
  [121] objcall 50 .............................. <tPropList[tPart]>
  [123] pushsymb 205 ............................ <#blend>
  [125] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [127] objcall 50 .............................. <tPropList[tPart][#blend]>
  [129] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [131] extcall 14 .............................. return tPropList[tPart][#blend]
  [133] pushint8 100 ............................ <100>
  [135] pusharglistnoret 1 ...................... <100>
  [137] extcall 14 .............................. return 100
  [139] ret
end

on solveLocZ me, tPart, tdir
  [  0] getprop 102 ............................. <pClass>
  [  2] pushcons 6 .............................. <".props">
  [  4] joinstr ................................. <pClass & ".props">
  [  5] pusharglist 1 ........................... <pClass & ".props">
  [  7] extcall 26 .............................. <memberExists(pClass & ".props")>
  [  9] not ..................................... <not memberExists(pClass & ".props")>
  [ 10] jmpifz [ 18] ............................ if not memberExists(pClass & ".props") then
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 14 .............................. return 0
  [ 18] getprop 102 ............................. <pClass>
  [ 20] pushcons 6 .............................. <".props">
  [ 22] joinstr ................................. <pClass & ".props">
  [ 23] pusharglist 1 ........................... <pClass & ".props">
  [ 25] extcall 18 .............................. <getmemnum(pClass & ".props")>
  [ 27] pushzero ................................ <0>
  [ 28] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 29] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 31] extcall 208 ............................. <value(field(getmemnum(pClass & ".props")))>
  [ 33] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 35] getlocal 0 .............................. <tPropList>
  [ 37] pusharglist 1 ........................... <tPropList>
  [ 39] extcall 42 .............................. <ilk(tPropList)>
  [ 41] pushsymb 209 ............................ <#propList>
  [ 43] nteq .................................... <ilk(tPropList) <> #propList>
  [ 44] jmpifz [ 70] ............................ if ilk(tPropList) <> #propList then / else
  [ 47] getparam 0 .............................. <me>
  [ 49] getprop 102 ............................. <pClass>
  [ 51] pushcons 7 .............................. <".props is not valid!">
  [ 53] joinstr ................................. <pClass & ".props is not valid!">
  [ 54] pushsymb 98 ............................. <#solveLocZ>
  [ 56] pushsymb 62 ............................. <#minor>
  [ 58] pusharglistnoret 4 ...................... <me, pClass & ".props is not valid!", #solveLocZ, #minor>
  [ 60] extcall 61 .............................. error(me, pClass & ".props is not valid!", #solveLocZ, #minor)
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 14 .............................. return 0
  [ 67] jmp [141]
  [ 70] getlocal 0 .............................. <tPropList>
  [ 72] getparam 1 .............................. <tPart>
  [ 74] pusharglist 2 ........................... <tPropList, tPart>
  [ 76] objcall 50 .............................. <tPropList[tPart]>
  [ 78] pusharglist 1 ........................... <tPropList[tPart]>
  [ 80] extcall 31 .............................. <voidp(tPropList[tPart])>
  [ 82] jmpifz [ 90] ............................ if voidp(tPropList[tPart]) then
  [ 85] pushzero ................................ <0>
  [ 86] pusharglistnoret 1 ...................... <0>
  [ 88] extcall 14 .............................. return 0
  [ 90] getlocal 0 .............................. <tPropList>
  [ 92] getparam 1 .............................. <tPart>
  [ 94] pusharglist 2 ........................... <tPropList, tPart>
  [ 96] objcall 50 .............................. <tPropList[tPart]>
  [ 98] pushsymb 213 ............................ <#zshift>
  [100] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [102] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [104] pusharglist 1 ........................... <tPropList[tPart][#zshift]>
  [106] extcall 31 .............................. <voidp(tPropList[tPart][#zshift])>
  [108] jmpifz [116] ............................ if voidp(tPropList[tPart][#zshift]) then
  [111] pushzero ................................ <0>
  [112] pusharglistnoret 1 ...................... <0>
  [114] extcall 14 .............................. return 0
  [116] getlocal 0 .............................. <tPropList>
  [118] getparam 1 .............................. <tPart>
  [120] pusharglist 2 ........................... <tPropList, tPart>
  [122] objcall 50 .............................. <tPropList[tPart]>
  [124] pushsymb 213 ............................ <#zshift>
  [126] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [128] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [130] getobjprop 34 ........................... <tPropList[tPart][#zshift].count>
  [132] getparam 2 .............................. <tdir>
  [134] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [135] jmpifz [141] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [138] pushzero ................................ <0>
  [139] setparam 2 .............................. tdir = 0
  [141] getlocal 0 .............................. <tPropList>
  [143] getparam 1 .............................. <tPart>
  [145] pusharglist 2 ........................... <tPropList, tPart>
  [147] objcall 50 .............................. <tPropList[tPart]>
  [149] pushsymb 213 ............................ <#zshift>
  [151] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [153] objcall 50 .............................. <tPropList[tPart][#zshift]>
  [155] getparam 2 .............................. <tdir>
  [157] pushint8 1 .............................. <1>
  [159] add ..................................... <tdir + 1>
  [160] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [162] objcall 50 .............................. <tPropList[tPart][#zshift][tdir + 1]>
  [164] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [166] extcall 14 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [168] ret
end

on solveMembers me
  [  0] getprop 106 ............................. <pDirection>
  [  2] pusharglist 1 ........................... <pDirection>
  [  4] extcall 125 ............................. <listp(pDirection)>
  [  6] jmpifz [ 21] ............................ if listp(pDirection) then / else
  [  9] getprop 106 ............................. <pDirection>
  [ 11] pusharglist 1 ........................... <pDirection>
  [ 13] objcall 263 ............................. <pDirection.duplicate()>
  [ 16] setlocal 0 .............................. tTmpDirection = pDirection.duplicate()
  [ 18] jmp [ 25]
  [ 21] getprop 106 ............................. <pDirection>
  [ 23] setlocal 0 .............................. tTmpDirection = pDirection
  [ 25] getprop 105 ............................. <pSprList>
  [ 27] getobjprop 34 ........................... <pSprList.count>
  [ 29] pushzero ................................ <0>
  [ 30] gt ...................................... <pSprList.count > 0>
  [ 31] jmpifz [ 82] ............................ if pSprList.count > 0 then
  [ 34] getprop 105 ............................. <pSprList>
  [ 36] peek 0
  [ 38] pusharglist 1
  [ 40] extcall 34
  [ 42] pushint8 1
  [ 44] peek 0
  [ 46] peek 2
  [ 48] lteq
  [ 49] jmpifz [ 75] ............................ repeat with tSpr in pSprList
  [ 52] peek 2
  [ 54] peek 1
  [ 56] pusharglist 2
  [ 58] extcall 50
  [ 60] setlocal 1
  [ 62] getlocal 1 .............................. <tSpr>
  [ 64] getobjprop 136 .......................... <tSpr.spriteNum>
  [ 66] pusharglistnoret 1 ...................... <tSpr.spriteNum>
  [ 68] extcall 135 ............................. releaseSprite(tSpr.spriteNum)
  [ 70] pushint8 1
  [ 72] add
  [ 73] endrepeat [ 44]
  [ 75] pop 3
  [ 77] pusharglist 0 ........................... <[]>
  [ 79] pushlist ................................ <[]>
  [ 80] setprop 105 ............................. pSprList = []
  [ 82] pushint8 1 .............................. <1>
  [ 84] setlocal 2 .............................. tMemNum = 1
  [ 86] pushcons 8 .............................. <"a">
  [ 88] pusharglist 1 ........................... <"a">
  [ 90] extcall 217 ............................. <charToNum("a")>
  [ 92] setlocal 3 .............................. i = charToNum("a")
  [ 94] pushint8 1 .............................. <1>
  [ 96] setlocal 4 .............................. j = 1
  [ 98] getlocal 2 .............................. <tMemNum>
  [100] pushzero ................................ <0>
  [101] gt ...................................... <tMemNum > 0>
  [102] jmpifz [843] ............................ repeat while tMemNum > 0
  [105] getprop 102 ............................. <pClass>
  [107] pushcons 9 .............................. <"null">
  [109] eq ...................................... <pClass = "null">
  [110] jmpifz [116] ............................ if pClass = "null" then
  [113] pushzero ................................ <0>
  [114] setlocal 5 .............................. opopop = 0
  [116] pushzero ................................ <0>
  [117] setlocal 6 .............................. tFound = 0
  [119] getlocal 6 .............................. <tFound>
  [121] pushzero ................................ <0>
  [122] eq ...................................... <tFound = 0>
  [123] jmpifz [424] ............................ repeat while tFound = 0
  [126] getprop 102 ............................. <pClass>
  [128] pushcons 10 ............................. <"_">
  [130] joinstr ................................. <pClass & "_">
  [131] getlocal 3 .............................. <i>
  [133] pusharglist 1 ........................... <i>
  [135] extcall 218 ............................. <numToChar(i)>
  [137] joinstr ................................. <pClass & "_" & numToChar(i)>
  [138] pushcons 10 ............................. <"_">
  [140] joinstr ................................. <pClass & "_" & numToChar(i) & "_">
  [141] pushcons 11 ............................. <"0">
  [143] joinstr ................................. <pClass & "_" & numToChar(i) & "_" & "0">
  [144] setlocal 7 .............................. tMemNameA = pClass & "_" & numToChar(i) & "_" & "0"
  [146] getprop 107 ............................. <pDimensions>
  [148] pusharglist 1 ........................... <pDimensions>
  [150] extcall 125 ............................. <listp(pDimensions)>
  [152] jmpifz [183] ............................ if listp(pDimensions) then
  [155] getlocal 7 .............................. <tMemNameA>
  [157] pushcons 10 ............................. <"_">
  [159] joinstr ................................. <tMemNameA & "_">
  [160] getprop 107 ............................. <pDimensions>
  [162] pushint8 1 .............................. <1>
  [164] pusharglist 2 ........................... <pDimensions, 1>
  [166] objcall 50 .............................. <pDimensions[1]>
  [168] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [169] pushcons 10 ............................. <"_">
  [171] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [172] getprop 107 ............................. <pDimensions>
  [174] pushint8 2 .............................. <2>
  [176] pusharglist 2 ........................... <pDimensions, 2>
  [178] objcall 50 .............................. <pDimensions[2]>
  [180] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [181] setlocal 7 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [183] getlocal 0 .............................. <tTmpDirection>
  [185] pusharglist 1 ........................... <tTmpDirection>
  [187] extcall 31 .............................. <voidp(tTmpDirection)>
  [189] not ..................................... <not voidp(tTmpDirection)>
  [190] jmpifz [255] ............................ if not voidp(tTmpDirection) then / else
  [193] getlocal 0 .............................. <tTmpDirection>
  [195] pusharglist 1 ........................... <tTmpDirection>
  [197] extcall 34 .............................. <count(tTmpDirection)>
  [199] getlocal 4 .............................. <j>
  [201] gteq .................................... <count(tTmpDirection) >= j>
  [202] jmpifz [230] ............................ if count(tTmpDirection) >= j then / else
  [205] getlocal 7 .............................. <tMemNameA>
  [207] pushcons 10 ............................. <"_">
  [209] joinstr ................................. <tMemNameA & "_">
  [210] getlocal 0 .............................. <tTmpDirection>
  [212] getlocal 4 .............................. <j>
  [214] pusharglist 2 ........................... <tTmpDirection, j>
  [216] objcall 50 .............................. <tTmpDirection[j]>
  [218] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j]>
  [219] pushcons 10 ............................. <"_">
  [221] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j] & "_">
  [222] getprop 111 ............................. <pAnimFrame>
  [224] joinstr ................................. <tMemNameA & "_" & tTmpDirection[j] & "_" & pAnimFrame>
  [225] setlocal 8 .............................. tMemName = tMemNameA & "_" & tTmpDirection[j] & "_" & pAnimFrame
  [227] jmp [252]
  [230] getlocal 7 .............................. <tMemNameA>
  [232] pushcons 10 ............................. <"_">
  [234] joinstr ................................. <tMemNameA & "_">
  [235] getlocal 0 .............................. <tTmpDirection>
  [237] pushint8 1 .............................. <1>
  [239] pusharglist 2 ........................... <tTmpDirection, 1>
  [241] objcall 50 .............................. <tTmpDirection[1]>
  [243] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1]>
  [244] pushcons 10 ............................. <"_">
  [246] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1] & "_">
  [247] getprop 111 ............................. <pAnimFrame>
  [249] joinstr ................................. <tMemNameA & "_" & tTmpDirection[1] & "_" & pAnimFrame>
  [250] setlocal 8 .............................. tMemName = tMemNameA & "_" & tTmpDirection[1] & "_" & pAnimFrame
  [252] jmp [265]
  [255] getlocal 7 .............................. <tMemNameA>
  [257] pushcons 10 ............................. <"_">
  [259] joinstr ................................. <tMemNameA & "_">
  [260] getprop 111 ............................. <pAnimFrame>
  [262] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [263] setlocal 8 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [265] getlocal 8 .............................. <tMemName>
  [267] pusharglist 1 ........................... <tMemName>
  [269] extcall 18 .............................. <getmemnum(tMemName)>
  [271] setlocal 2 .............................. tMemNum = getmemnum(tMemName)
  [273] getlocal 8 .............................. <tMemName>
  [275] setlocal 9 .............................. tOldMemName = tMemName
  [277] getlocal 2 .............................. <tMemNum>
  [279] pushzero ................................ <0>
  [280] eq ...................................... <tMemNum = 0>
  [281] jmpifz [302] ............................ if tMemNum = 0 then
  [284] getlocal 7 .............................. <tMemNameA>
  [286] pushcons 12 ............................. <"_0_">
  [288] joinstr ................................. <tMemNameA & "_0_">
  [289] getprop 111 ............................. <pAnimFrame>
  [291] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [292] setlocal 8 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [294] getlocal 8 .............................. <tMemName>
  [296] pusharglist 1 ........................... <tMemName>
  [298] extcall 18 .............................. <getmemnum(tMemName)>
  [300] setlocal 2 .............................. tMemNum = getmemnum(tMemName)
  [302] getlocal 2 .............................. <tMemNum>
  [304] pushzero ................................ <0>
  [305] eq ...................................... <tMemNum = 0>
  [306] getlocal 4 .............................. <j>
  [308] pushint8 1 .............................. <1>
  [310] eq ...................................... <j = 1>
  [311] and ..................................... <(tMemNum = 0) and (j = 1)>
  [312] jmpifz [417] ............................ if (tMemNum = 0) and (j = 1) then
  [315] pushzero ................................ <0>
  [316] setlocal 6 .............................. tFound = 0
  [318] getprop 106 ............................. <pDirection>
  [320] pusharglist 1 ........................... <pDirection>
  [322] extcall 125 ............................. <listp(pDirection)>
  [324] jmpifz [395] ............................ if listp(pDirection) then / else
  [327] pushint8 1 .............................. <1>
  [329] setlocal 10
  [331] getlocal 10
  [333] getlocal 0 .............................. <tTmpDirection>
  [335] getobjprop 34 ........................... <tTmpDirection.count>
  [337] lteq
  [338] jmpifz [373] ............................ repeat with tdir = 1 to tTmpDirection.count
  [341] getlocal 0 .............................. <tTmpDirection>
  [343] getlocal 10 ............................. <tdir>
  [345] getlocal 0 .............................. <tTmpDirection>
  [347] getlocal 10 ............................. <tdir>
  [349] pusharglist 2 ........................... <tTmpDirection, tdir>
  [351] objcall 50 .............................. <tTmpDirection[tdir]>
  [353] pushint8 1 .............................. <1>
  [355] add ..................................... <tTmpDirection[tdir] + 1>
  [356] pusharglist 1 ........................... <tTmpDirection[tdir] + 1>
  [358] extcall 177 ............................. <integer(tTmpDirection[tdir] + 1)>
  [360] pusharglistnoret 3 ...................... <tTmpDirection, tdir, integer(tTmpDirection[tdir] + 1)>
  [362] objcall 158 ............................. tTmpDirection[tdir] = integer(tTmpDirection[tdir] + 1)
  [364] pushint8 1
  [366] getlocal 10
  [368] add
  [369] setlocal 10
  [371] endrepeat [331]
  [373] getlocal 0 .............................. <tTmpDirection>
  [375] pushint8 1 .............................. <1>
  [377] pusharglist 2 ........................... <tTmpDirection, 1>
  [379] objcall 50 .............................. <tTmpDirection[1]>
  [381] pushint8 8 .............................. <8>
  [383] eq ...................................... <tTmpDirection[1] = 8>
  [384] jmpifz [392] ............................ if tTmpDirection[1] = 8 then
  [387] pushzero ................................ <0>
  [388] pusharglistnoret 1 ...................... <0>
  [390] extcall 14 .............................. return 0
  [392] jmp [414]
  [395] getparam 0 .............................. <me>
  [397] pushcons 13 ............................. <"No good object:">
  [399] getprop 102 ............................. <pClass>
  [401] joinpadstr .............................. <"No good object:" && pClass>
  [402] pushsymb 100 ............................ <#solveMembers>
  [404] pushsymb 221 ............................ <#major>
  [406] pusharglist 4 ........................... <me, "No good object:" && pClass, #solveMembers, #major>
  [408] extcall 61 .............................. <error(me, "No good object:" && pClass, #solveMembers, #major)>
  [410] pusharglistnoret 1 ...................... <error(me, "No good object:" && pClass, #solveMembers, #major)>
  [412] extcall 14 .............................. return error(me, "No good object:" && pClass, #solveMembers, #major)
  [414] jmp [421] ............................... next repeat
  [417] pushint8 1 .............................. <1>
  [419] setlocal 6 .............................. tFound = 1
  [421] endrepeat [119]
  [424] getlocal 2 .............................. <tMemNum>
  [426] pushzero ................................ <0>
  [427] nteq .................................... <tMemNum <> 0>
  [428] jmpifz [826] ............................ if tMemNum <> 0 then
  [431] getprop 105 ............................. <pSprList>
  [433] pusharglist 1 ........................... <pSprList>
  [435] extcall 34 .............................. <count(pSprList)>
  [437] getlocal 4 .............................. <j>
  [439] gteq .................................... <count(pSprList) >= j>
  [440] jmpifz [456] ............................ if count(pSprList) >= j then / else
  [443] getprop 105 ............................. <pSprList>
  [445] getlocal 4 .............................. <j>
  [447] pusharglist 2 ........................... <pSprList, j>
  [449] objcall 50 .............................. <pSprList[j]>
  [451] setlocal 1 .............................. tSpr = pSprList[j]
  [453] jmp [523]
  [456] getparam 0 .............................. <me>
  [458] pusharglist 1 ........................... <me>
  [460] objcall 140 ............................. <me.getID()>
  [462] pusharglist 1 ........................... <me.getID()>
  [464] extcall 219 ............................. <reserveSprite(me.getID())>
  [466] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [468] extcall 173 ............................. <sprite(reserveSprite(me.getID()))>
  [470] setlocal 1 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [472] getprop 105 ............................. <pSprList>
  [474] getlocal 1 .............................. <tSpr>
  [476] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [478] objcall 36 .............................. pSprList.add(tSpr)
  [480] getlocal 1 .............................. <tSpr>
  [482] getobjprop 136 .......................... <tSpr.spriteNum>
  [484] getparam 0 .............................. <me>
  [486] pusharglist 1 ........................... <me>
  [488] objcall 140 ............................. <me.getID()>
  [490] pusharglistnoret 2 ...................... <tSpr.spriteNum, me.getID()>
  [492] extcall 222 ............................. setEventBroker(tSpr.spriteNum, me.getID())
  [494] pushsymb 119 ............................ <#room>
  [496] pusharglist 1 ........................... <#room>
  [498] extcall 118 ............................. <getThread(#room)>
  [500] pusharglist 1 ........................... <getThread(#room)>
  [502] objcall 120 ............................. <getThread(#room).getInterface()>
  [504] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [506] objcall 140 ............................. <getThread(#room).getInterface().getID()>
  [508] setlocal 11 ............................. tTargetID = getThread(#room).getInterface().getID()
  [510] getlocal 1 .............................. <tSpr>
  [512] pushsymb 264 ............................ <#eventProcPassiveObj>
  [515] getlocal 11 ............................. <tTargetID>
  [517] pushsymb 224 ............................ <#mouseDown>
  [519] pusharglistnoret 4 ...................... <tSpr, #eventProcPassiveObj, tTargetID, #mouseDown>
  [521] objcall 225 ............................. tSpr.registerProcedure(#eventProcPassiveObj, tTargetID, #mouseDown)
  [523] getprop 106 ............................. <pDirection>
  [525] pusharglist 1 ........................... <pDirection>
  [527] extcall 31 .............................. <voidp(pDirection)>
  [529] not ..................................... <not voidp(pDirection)>
  [530] jmpifz [599] ............................ if not voidp(pDirection) then / else
  [533] getprop 106 ............................. <pDirection>
  [535] pusharglist 1 ........................... <pDirection>
  [537] extcall 34 .............................. <count(pDirection)>
  [539] getlocal 4 .............................. <j>
  [541] gteq .................................... <count(pDirection) >= j>
  [542] jmpifz [574] ............................ if count(pDirection) >= j then / else
  [545] getprop 108 ............................. <pLoczList>
  [547] getparam 0 .............................. <me>
  [549] getlocal 3 .............................. <i>
  [551] pusharglist 1 ........................... <i>
  [553] extcall 218 ............................. <numToChar(i)>
  [555] getprop 106 ............................. <pDirection>
  [557] getlocal 4 .............................. <j>
  [559] pusharglist 2 ........................... <pDirection, j>
  [561] objcall 50 .............................. <pDirection[j]>
  [563] pusharglist 3 ........................... <me, numToChar(i), pDirection[j]>
  [565] objcall 98 .............................. <me.solveLocZ(numToChar(i), pDirection[j])>
  [567] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), pDirection[j])>
  [569] objcall 36 .............................. pLoczList.add(me.solveLocZ(numToChar(i), pDirection[j]))
  [571] jmp [596]
  [574] getprop 108 ............................. <pLoczList>
  [576] getparam 0 .............................. <me>
  [578] getlocal 3 .............................. <i>
  [580] pusharglist 1 ........................... <i>
  [582] extcall 218 ............................. <numToChar(i)>
  [584] pusharglist 0 ........................... <>
  [586] extcall 17 .............................. <VOID>
  [588] pusharglist 3 ........................... <me, numToChar(i), VOID>
  [590] objcall 98 .............................. <me.solveLocZ(numToChar(i), VOID)>
  [592] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), VOID)>
  [594] objcall 36 .............................. pLoczList.add(me.solveLocZ(numToChar(i), VOID))
  [596] jmp [621]
  [599] getprop 108 ............................. <pLoczList>
  [601] getparam 0 .............................. <me>
  [603] getlocal 3 .............................. <i>
  [605] pusharglist 1 ........................... <i>
  [607] extcall 218 ............................. <numToChar(i)>
  [609] pusharglist 0 ........................... <>
  [611] extcall 17 .............................. <VOID>
  [613] pusharglist 3 ........................... <me, numToChar(i), VOID>
  [615] objcall 98 .............................. <me.solveLocZ(numToChar(i), VOID)>
  [617] pusharglistnoret 2 ...................... <pLoczList, me.solveLocZ(numToChar(i), VOID)>
  [619] objcall 36 .............................. pLoczList.add(me.solveLocZ(numToChar(i), VOID))
  [621] getlocal 1 .............................. <tSpr>
  [623] pusharglist 1 ........................... <tSpr>
  [625] extcall 31 .............................. <voidp(tSpr)>
  [627] not ..................................... <not voidp(tSpr)>
  [628] getlocal 1 .............................. <tSpr>
  [630] pushzero ................................ <0>
  [631] pusharglist 1 ........................... <0>
  [633] extcall 173 ............................. <sprite(0)>
  [635] nteq .................................... <tSpr <> sprite(0)>
  [636] and ..................................... <not voidp(tSpr) and (tSpr <> sprite(0))>
  [637] jmpifz [810] ............................ if not voidp(tSpr) and (tSpr <> sprite(0)) then / else
  [640] getlocal 2 .............................. <tMemNum>
  [642] pushint8 1 .............................. <1>
  [644] lt ...................................... <tMemNum < 1>
  [645] jmpifz [670] ............................ if tMemNum < 1 then
  [648] getlocal 2 .............................. <tMemNum>
  [650] pusharglist 1 ........................... <tMemNum>
  [652] extcall 187 ............................. <abs(tMemNum)>
  [654] setlocal 2 .............................. tMemNum = abs(tMemNum)
  [656] getlocal 1 .............................. <tSpr>
  [658] pushint16 180 ........................... <180>
  [661] setobjprop 231 .......................... tSpr.rotation = 180
  [663] getlocal 1 .............................. <tSpr>
  [665] pushint16 180 ........................... <180>
  [668] setobjprop 232 .......................... tSpr.skew = 180
  [670] getlocal 1 .............................. <tSpr>
  [672] getlocal 2 .............................. <tMemNum>
  [674] setobjprop 233 .......................... tSpr.castNum = tMemNum
  [676] getlocal 1 .............................. <tSpr>
  [678] getlocal 2 .............................. <tMemNum>
  [680] pusharglist 1 ........................... <tMemNum>
  [682] extcall 19 .............................. <member(tMemNum)>
  [684] getobjprop 47 ........................... <member(tMemNum).width>
  [686] setobjprop 47 ........................... tSpr.width = member(tMemNum).width
  [688] getlocal 1 .............................. <tSpr>
  [690] getlocal 2 .............................. <tMemNum>
  [692] pusharglist 1 ........................... <tMemNum>
  [694] extcall 19 .............................. <member(tMemNum)>
  [696] getobjprop 48 ........................... <member(tMemNum).height>
  [698] setobjprop 48 ........................... tSpr.height = member(tMemNum).height
  [700] getlocal 1 .............................. <tSpr>
  [702] getparam 0 .............................. <me>
  [704] getlocal 3 .............................. <i>
  [706] pusharglist 1 ........................... <i>
  [708] extcall 218 ............................. <numToChar(i)>
  [710] pusharglist 2 ........................... <me, numToChar(i)>
  [712] objcall 95 .............................. <me.solveInk(numToChar(i))>
  [714] setobjprop 66 ........................... tSpr.ink = me.solveInk(numToChar(i))
  [716] getlocal 1 .............................. <tSpr>
  [718] getparam 0 .............................. <me>
  [720] getlocal 3 .............................. <i>
  [722] pusharglist 1 ........................... <i>
  [724] extcall 218 ............................. <numToChar(i)>
  [726] pusharglist 2 ........................... <me, numToChar(i)>
  [728] objcall 96 .............................. <me.solveBlend(numToChar(i))>
  [730] setobjprop 205 .......................... tSpr.blend = me.solveBlend(numToChar(i))
  [732] getlocal 4 .............................. <j>
  [734] getprop 110 ............................. <pPartColors>
  [736] getobjprop 34 ........................... <pPartColors.count>
  [738] lteq .................................... <j <= pPartColors.count>
  [739] jmpifz [807] ............................ if j <= pPartColors.count then
  [742] getprop 110 ............................. <pPartColors>
  [744] getlocal 4 .............................. <j>
  [746] pusharglist 2 ........................... <pPartColors, j>
  [748] objcall 50 .............................. <pPartColors[j]>
  [750] pusharglist 1 ........................... <pPartColors[j]>
  [752] extcall 35 .............................. <string(pPartColors[j])>
  [754] pushsymb 23 ............................. <#char>
  [756] pushint8 1 .............................. <1>
  [758] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [760] objcall 25 .............................. <string(pPartColors[j]).char[1]>
  [762] pushcons 14 ............................. <"#">
  [764] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [765] jmpifz [787] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [768] getlocal 1 .............................. <tSpr>
  [770] getprop 110 ............................. <pPartColors>
  [772] getlocal 4 .............................. <j>
  [774] pusharglist 2 ........................... <pPartColors, j>
  [776] objcall 50 .............................. <pPartColors[j]>
  [778] pusharglist 1 ........................... <pPartColors[j]>
  [780] extcall 65 .............................. <rgb(pPartColors[j])>
  [782] setobjprop 67 ........................... tSpr.bgColor = rgb(pPartColors[j])
  [784] jmp [807]
  [787] getlocal 1 .............................. <tSpr>
  [789] getprop 110 ............................. <pPartColors>
  [791] getlocal 4 .............................. <j>
  [793] pusharglist 2 ........................... <pPartColors, j>
  [795] objcall 50 .............................. <pPartColors[j]>
  [797] pusharglist 1 ........................... <pPartColors[j]>
  [799] extcall 177 ............................. <integer(pPartColors[j])>
  [801] pusharglist 1 ........................... <integer(pPartColors[j])>
  [803] extcall 234 ............................. <paletteIndex(integer(pPartColors[j]))>
  [805] setobjprop 67 ........................... tSpr.bgColor = paletteIndex(integer(pPartColors[j]))
  [807] jmp [826]
  [810] getparam 0 .............................. <me>
  [812] pushcons 15 ............................. <"Out of sprites!!!">
  [814] pushsymb 100 ............................ <#solveMembers>
  [816] pushsymb 221 ............................ <#major>
  [818] pusharglist 4 ........................... <me, "Out of sprites!!!", #solveMembers, #major>
  [820] extcall 61 .............................. <error(me, "Out of sprites!!!", #solveMembers, #major)>
  [822] pusharglistnoret 1 ...................... <error(me, "Out of sprites!!!", #solveMembers, #major)>
  [824] extcall 14 .............................. return error(me, "Out of sprites!!!", #solveMembers, #major)
  [826] getlocal 3 .............................. <i>
  [828] pushint8 1 .............................. <1>
  [830] add ..................................... <i + 1>
  [831] setlocal 3 .............................. i = i + 1
  [833] getlocal 4 .............................. <j>
  [835] pushint8 1 .............................. <1>
  [837] add ..................................... <j + 1>
  [838] setlocal 4 .............................. j = j + 1
  [840] endrepeat [ 98]
  [843] getprop 102 ............................. <pClass>
  [845] pushcons 16 ............................. <"_sd">
  [847] joinstr ................................. <pClass & "_sd">
  [848] setlocal 12 ............................. tShadowName = pClass & "_sd"
  [850] getprop 106 ............................. <pDirection>
  [852] pusharglist 1 ........................... <pDirection>
  [854] extcall 125 ............................. <listp(pDirection)>
  [856] jmpifz [875] ............................ if listp(pDirection) then
  [859] getlocal 12 ............................. <tShadowName>
  [861] pushcons 10 ............................. <"_">
  [863] joinstr ................................. <tShadowName & "_">
  [864] getprop 106 ............................. <pDirection>
  [866] pushint8 1 .............................. <1>
  [868] pusharglist 2 ........................... <pDirection, 1>
  [870] objcall 50 .............................. <pDirection[1]>
  [872] joinstr ................................. <tShadowName & "_" & pDirection[1]>
  [873] setlocal 12 ............................. tShadowName = tShadowName & "_" & pDirection[1]
  [875] getlocal 12 ............................. <tShadowName>
  [877] pusharglist 1 ........................... <tShadowName>
  [879] extcall 18 .............................. <getmemnum(tShadowName)>
  [881] setlocal 13 ............................. tShadowNum = getmemnum(tShadowName)
  [883] getlocal 13 ............................. <tShadowNum>
  [885] not ..................................... <not tShadowNum>
  [886] getlocal 0 .............................. <tTmpDirection>
  [888] pusharglist 1 ........................... <tTmpDirection>
  [890] extcall 125 ............................. <listp(tTmpDirection)>
  [892] and ..................................... <not tShadowNum and listp(tTmpDirection)>
  [893] jmpifz [907] ............................ if not tShadowNum and listp(tTmpDirection) then
  [896] getprop 102 ............................. <pClass>
  [898] pushcons 16 ............................. <"_sd">
  [900] joinstr ................................. <pClass & "_sd">
  [901] pusharglist 1 ........................... <pClass & "_sd">
  [903] extcall 18 .............................. <getmemnum(pClass & "_sd")>
  [905] setlocal 13 ............................. tShadowNum = getmemnum(pClass & "_sd")
  [907] getlocal 13 ............................. <tShadowNum>
  [909] pushzero ................................ <0>
  [910] nteq .................................... <tShadowNum <> 0>
  [911] jmpifz [1058] ........................... if tShadowNum <> 0 then
  [914] getparam 0 .............................. <me>
  [916] pusharglist 1 ........................... <me>
  [918] objcall 140 ............................. <me.getID()>
  [920] pusharglist 1 ........................... <me.getID()>
  [922] extcall 219 ............................. <reserveSprite(me.getID())>
  [924] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [926] extcall 173 ............................. <sprite(reserveSprite(me.getID()))>
  [928] setlocal 1 .............................. tSpr = sprite(reserveSprite(me.getID()))
  [930] getprop 105 ............................. <pSprList>
  [932] getlocal 1 .............................. <tSpr>
  [934] pusharglistnoret 2 ...................... <pSprList, tSpr>
  [936] objcall 36 .............................. pSprList.add(tSpr)
  [938] getprop 108 ............................. <pLoczList>
  [940] pushint16 4000 .......................... <4000>
  [943] inv ..................................... <-4000>
  [944] pusharglistnoret 2 ...................... <pLoczList, -4000>
  [946] objcall 36 .............................. pLoczList.add(-4000)
  [948] getlocal 13 ............................. <tShadowNum>
  [950] pushzero ................................ <0>
  [951] lt ...................................... <tShadowNum < 0>
  [952] jmpifz [988] ............................ if tShadowNum < 0 then
  [955] getlocal 13 ............................. <tShadowNum>
  [957] pusharglist 1 ........................... <tShadowNum>
  [959] extcall 187 ............................. <abs(tShadowNum)>
  [961] setlocal 13 ............................. tShadowNum = abs(tShadowNum)
  [963] getlocal 1 .............................. <tSpr>
  [965] pushint16 180 ........................... <180>
  [968] setobjprop 231 .......................... tSpr.rotation = 180
  [970] getlocal 1 .............................. <tSpr>
  [972] pushint16 180 ........................... <180>
  [975] setobjprop 232 .......................... tSpr.skew = 180
  [977] getlocal 1 .............................. <tSpr>
  [979] getlocal 1 .............................. <tSpr>
  [981] getobjprop 45 ........................... <tSpr.locH>
  [983] getprop 117 ............................. <pXFactor>
  [985] add ..................................... <tSpr.locH + pXFactor>
  [986] setobjprop 45 ........................... tSpr.locH = tSpr.locH + pXFactor
  [988] getlocal 1 .............................. <tSpr>
  [990] getlocal 13 ............................. <tShadowNum>
  [992] setobjprop 233 .......................... tSpr.castNum = tShadowNum
  [994] getlocal 1 .............................. <tSpr>
  [996] getlocal 13 ............................. <tShadowNum>
  [998] pusharglist 1 ........................... <tShadowNum>
  [1000] extcall 19 ............................. <member(tShadowNum)>
  [1002] getobjprop 47 .......................... <member(tShadowNum).width>
  [1004] setobjprop 47 .......................... tSpr.width = member(tShadowNum).width
  [1006] getlocal 1 ............................. <tSpr>
  [1008] getlocal 13 ............................ <tShadowNum>
  [1010] pusharglist 1 .......................... <tShadowNum>
  [1012] extcall 19 ............................. <member(tShadowNum)>
  [1014] getobjprop 48 .......................... <member(tShadowNum).height>
  [1016] setobjprop 48 .......................... tSpr.height = member(tShadowNum).height
  [1018] getlocal 1 ............................. <tSpr>
  [1020] getparam 0 ............................. <me>
  [1022] pushcons 17 ............................ <"sd">
  [1024] pusharglist 2 .......................... <me, "sd">
  [1026] objcall 95 ............................. <me.solveInk("sd")>
  [1028] setobjprop 66 .......................... tSpr.ink = me.solveInk("sd")
  [1030] getlocal 1 ............................. <tSpr>
  [1032] getparam 0 ............................. <me>
  [1034] pushcons 17 ............................ <"sd">
  [1036] pusharglist 2 .......................... <me, "sd">
  [1038] objcall 96 ............................. <me.solveBlend("sd")>
  [1040] setobjprop 205 ......................... tSpr.blend = me.solveBlend("sd")
  [1042] getlocal 1 ............................. <tSpr>
  [1044] getobjprop 205 ......................... <tSpr.blend>
  [1046] pushint8 100 ........................... <100>
  [1048] eq ..................................... <tSpr.blend = 100>
  [1049] jmpifz [1058] .......................... if tSpr.blend = 100 then
  [1052] getlocal 1 ............................. <tSpr>
  [1054] pushint8 20 ............................ <20>
  [1056] setobjprop 205 ......................... tSpr.blend = 20
  [1058] getprop 105 ............................ <pSprList>
  [1060] getobjprop 34 .......................... <pSprList.count>
  [1062] pushzero ............................... <0>
  [1063] gt ..................................... <pSprList.count > 0>
  [1064] jmpifz [1076] .......................... if pSprList.count > 0 then / else
  [1067] pushint8 1 ............................. <1>
  [1069] pusharglistnoret 1 ..................... <1>
  [1071] extcall 14 ............................. return 1
  [1073] jmp [1095]
  [1076] getparam 0 ............................. <me>
  [1078] pushcons 18 ............................ <"Couldn't define members:">
  [1080] getprop 102 ............................ <pClass>
  [1082] joinpadstr ............................. <"Couldn't define members:" && pClass>
  [1083] pushsymb 100 ........................... <#solveMembers>
  [1085] pushsymb 221 ........................... <#major>
  [1087] pusharglist 4 .......................... <me, "Couldn't define members:" && pClass, #solveMembers, #major>
  [1089] extcall 61 ............................. <error(me, "Couldn't define members:" && pClass, #solveMembers, #major)>
  [1091] pusharglistnoret 1 ..................... <error(me, "Couldn't define members:" && pClass, #solveMembers, #major)>
  [1093] extcall 14 ............................. return error(me, "Couldn't define members:" && pClass, #solveMembers, #major)
  [1095] ret
end

on updateLocation me
  [  0] pushsymb 119 ............................ <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 118 ............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 120 ............................. <getThread(#room).getInterface()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 12] objcall 121 ............................. <getThread(#room).getInterface().getGeometry()>
  [ 14] getprop 112 ............................. <pLocX>
  [ 16] getprop 113 ............................. <pLocY>
  [ 18] getprop 114 ............................. <pLocH>
  [ 20] pusharglist 4 ........................... <getThread(#room).getInterface().getGeometry(), pLocX, pLocY, pLocH>
  [ 22] objcall 235 ............................. <getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)>
  [ 24] setlocal 0 .............................. tScreenLocs = getThread(#room).getInterface().getGeometry().getScreenCoordinate(pLocX, pLocY, pLocH)
  [ 26] pushzero ................................ <0>
  [ 27] setlocal 1 .............................. i = 0
  [ 29] getprop 105 ............................. <pSprList>
  [ 31] peek 0
  [ 33] pusharglist 1
  [ 35] extcall 34
  [ 37] pushint8 1
  [ 39] peek 0
  [ 41] peek 2
  [ 43] lteq
  [ 44] jmpifz [186] ............................ repeat with tSpr in pSprList
  [ 47] peek 2
  [ 49] peek 1
  [ 51] pusharglist 2
  [ 53] extcall 50
  [ 55] setlocal 2
  [ 57] getlocal 1 .............................. <i>
  [ 59] pushint8 1 .............................. <1>
  [ 61] add ..................................... <i + 1>
  [ 62] setlocal 1 .............................. i = i + 1
  [ 64] getlocal 2 .............................. <tSpr>
  [ 66] getlocal 0 .............................. <tScreenLocs>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglist 2 ........................... <tScreenLocs, 1>
  [ 72] objcall 50 .............................. <tScreenLocs[1]>
  [ 74] setobjprop 45 ........................... tSpr.locH = tScreenLocs[1]
  [ 76] getlocal 2 .............................. <tSpr>
  [ 78] getlocal 0 .............................. <tScreenLocs>
  [ 80] pushint8 2 .............................. <2>
  [ 82] pusharglist 2 ........................... <tScreenLocs, 2>
  [ 84] objcall 50 .............................. <tScreenLocs[2]>
  [ 86] setobjprop 46 ........................... tSpr.locV = tScreenLocs[2]
  [ 88] getlocal 2 .............................. <tSpr>
  [ 90] getobjprop 231 .......................... <tSpr.rotation>
  [ 92] pushint16 180 ........................... <180>
  [ 95] eq ...................................... <tSpr.rotation = 180>
  [ 96] jmpifz [110] ............................ if tSpr.rotation = 180 then
  [ 99] getlocal 2 .............................. <tSpr>
  [101] getlocal 2 .............................. <tSpr>
  [103] getobjprop 45 ........................... <tSpr.locH>
  [105] getprop 117 ............................. <pXFactor>
  [107] add ..................................... <tSpr.locH + pXFactor>
  [108] setobjprop 45 ........................... tSpr.locH = tSpr.locH + pXFactor
  [110] getlocal 1 .............................. <i>
  [112] getprop 108 ............................. <pLoczList>
  [114] getobjprop 34 ........................... <pLoczList.count>
  [116] lteq .................................... <i <= pLoczList.count>
  [117] jmpifz [133] ............................ if i <= pLoczList.count then / else
  [120] getprop 108 ............................. <pLoczList>
  [122] getlocal 1 .............................. <i>
  [124] pusharglist 2 ........................... <pLoczList, i>
  [126] objcall 50 .............................. <pLoczList[i]>
  [128] setlocal 3 .............................. tZ = pLoczList[i]
  [130] jmp [136]
  [133] pushzero ................................ <0>
  [134] setlocal 3 .............................. tZ = 0
  [136] getprop 130 ............................. <pCorrectLocZ>
  [138] jmpifz [166] ............................ if pCorrectLocZ then
  [141] getlocal 2 .............................. <tSpr>
  [143] getlocal 0 .............................. <tScreenLocs>
  [145] pushint8 3 .............................. <3>
  [147] pusharglist 2 ........................... <tScreenLocs, 3>
  [149] objcall 50 .............................. <tScreenLocs[3]>
  [151] getprop 114 ............................. <pLocH>
  [153] pushint16 1000 .......................... <1000>
  [156] mul ..................................... <pLocH * 1000>
  [157] add ..................................... <tScreenLocs[3] + (pLocH * 1000)>
  [158] getlocal 3 .............................. <tZ>
  [160] add ..................................... <tScreenLocs[3] + (pLocH * 1000) + tZ>
  [161] setobjprop 254 .......................... tSpr.locZ = tScreenLocs[3] + (pLocH * 1000) + tZ
  [163] jmp [181] ............................... next repeat
  [166] getlocal 2 .............................. <tSpr>
  [168] getlocal 0 .............................. <tScreenLocs>
  [170] pushint8 3 .............................. <3>
  [172] pusharglist 2 ........................... <tScreenLocs, 3>
  [174] objcall 50 .............................. <tScreenLocs[3]>
  [176] getlocal 3 .............................. <tZ>
  [178] add ..................................... <tScreenLocs[3] + tZ>
  [179] setobjprop 254 .......................... tSpr.locZ = tScreenLocs[3] + tZ
  [181] pushint8 1
  [183] add
  [184] endrepeat [ 39]
  [186] pop 3
  [188] ret
end

on show me
  [  0] getprop 105 ............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 34
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 39] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 50
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] pushint8 1 .............................. <1>
  [ 32] setobjprop 204 .......................... tSpr.visible = 1
  [ 34] pushint8 1
  [ 36] add
  [ 37] endrepeat [ 10]
  [ 39] pop 3
  [ 41] ret
end

on hide me
  [  0] getprop 105 ............................. <pSprList>
  [  2] peek 0
  [  4] pusharglist 1
  [  6] extcall 34
  [  8] pushint8 1
  [ 10] peek 0
  [ 12] peek 2
  [ 14] lteq
  [ 15] jmpifz [ 38] ............................ repeat with tSpr in pSprList
  [ 18] peek 2
  [ 20] peek 1
  [ 22] pusharglist 2
  [ 24] extcall 50
  [ 26] setlocal 0
  [ 28] getlocal 0 .............................. <tSpr>
  [ 30] pushzero ................................ <0>
  [ 31] setobjprop 204 .......................... tSpr.visible = 0
  [ 33] pushint8 1
  [ 35] add
  [ 36] endrepeat [ 10]
  [ 38] pop 3
  [ 40] ret
end
