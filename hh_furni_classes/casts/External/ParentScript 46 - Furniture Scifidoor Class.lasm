property pChanges, pActive, pLastActive, pScifiDoorSpeed, pScifiDoorLocs, pScifiDoorTimer, pScifiDoorTimeOut, pDoubleClick, pSizeMultiplier, pStopped

on construct me
  [  0] pushint8 1 .............................. <1>
  [  2] inv ..................................... <-1>
  [  3] setprop 644 ............................. pLastActive = -1
  [  6] pushint8 7 .............................. <7>
  [  8] setprop 645 ............................. pScifiDoorSpeed = 7
  [ 11] pushcons 0 .............................. <0.40000000000000002>
  [ 13] pushint8 60 ............................. <60>
  [ 15] mul ..................................... <0.40000000000000002 * 60>
  [ 16] setprop 646 ............................. pScifiDoorTimeOut = 0.40000000000000002 * 60
  [ 19] pushzero ................................ <0>
  [ 20] pushzero ................................ <0>
  [ 21] pushzero ................................ <0>
  [ 22] pusharglist 3 ........................... <[0, 0, 0]>
  [ 24] pushlist ................................ <[0, 0, 0]>
  [ 25] setprop 647 ............................. pScifiDoorLocs = [0, 0, 0]
  [ 28] pushzero ................................ <0>
  [ 29] setprop 648 ............................. pScifiDoorTimer = 0
  [ 32] pushzero ................................ <0>
  [ 33] setprop 649 ............................. pDoubleClick = 0
  [ 36] pushint8 1 .............................. <1>
  [ 38] setprop 650 ............................. pStopped = 1
  [ 41] getparam 0 .............................. <me>
  [ 43] getobjprop 117 .......................... <me.pXFactor>
  [ 45] pushint8 32 ............................. <32>
  [ 47] eq ...................................... <me.pXFactor = 32>
  [ 48] jmpifz [ 62] ............................ if me.pXFactor = 32 then / else
  [ 51] pushfloat32 0.5 ......................... <0.5>
  [ 56] setprop 632 ............................. pSizeMultiplier = 0.5
  [ 59] jmp [ 70]
  [ 62] pushfloat32 1.0 ......................... <1.0>
  [ 67] setprop 632 ............................. pSizeMultiplier = 1.0
  [ 70] ret
end

on prepareForMove me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 535 ............................. pChanges = 1
  [  5] getparam 0 .............................. <me>
  [  7] pusharglistnoret 1 ...................... <me>
  [  9] objcall 326 ............................. me.update()
  [ 12] ret
end

on prepare me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 373 ............................ <#stuffdata>
  [  5] pusharglist 2 ........................... <tdata, #stuffdata>
  [  7] objcall 50 .............................. <tdata[#stuffdata]>
  [  9] pusharglist 1 ........................... <tdata[#stuffdata]>
  [ 11] extcall 177 ............................. <integer(tdata[#stuffdata])>
  [ 13] setlocal 0 .............................. tValue = integer(tdata[#stuffdata])
  [ 15] getlocal 0 .............................. <tValue>
  [ 17] pushzero ................................ <0>
  [ 18] eq ...................................... <tValue = 0>
  [ 19] jmpifz [ 32] ............................ if tValue = 0 then / else
  [ 22] getparam 0 .............................. <me>
  [ 24] pusharglistnoret 1 ...................... <me>
  [ 26] objcall 514 ............................. me.setOff()
  [ 29] jmp [ 39]
  [ 32] getparam 0 .............................. <me>
  [ 34] pusharglistnoret 1 ...................... <me>
  [ 36] objcall 513 ............................. me.setOn()
  [ 39] pushint8 34 ............................. <34>
  [ 41] get 7 ................................... <the timer>
  [ 43] setprop 648 ............................. pScifiDoorTimer = the timer
  [ 46] pushint8 1 .............................. <1>
  [ 48] setprop 535 ............................. pChanges = 1
  [ 51] pushint8 1 .............................. <1>
  [ 53] pusharglistnoret 1 ...................... <1>
  [ 55] extcall 14 .............................. return 1
  [ 57] ret
end

on updateStuffdata me, tValue
  [  0] getparam 1 .............................. <tValue>
  [  2] pusharglist 1 ........................... <tValue>
  [  4] extcall 177 ............................. <integer(tValue)>
  [  6] setparam 1 .............................. tValue = integer(tValue)
  [  8] getparam 1 .............................. <tValue>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tValue = 0>
  [ 12] jmpifz [ 25] ............................ if tValue = 0 then / else
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglistnoret 1 ...................... <me>
  [ 19] objcall 514 ............................. me.setOff()
  [ 22] jmp [ 32]
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglistnoret 1 ...................... <me>
  [ 29] objcall 513 ............................. me.setOn()
  [ 32] pushint8 34 ............................. <34>
  [ 34] get 7 ................................... <the timer>
  [ 36] setprop 648 ............................. pScifiDoorTimer = the timer
  [ 39] pushzero ................................ <0>
  [ 40] setprop 650 ............................. pStopped = 0
  [ 43] pushint8 1 .............................. <1>
  [ 45] setprop 535 ............................. pChanges = 1
  [ 48] pushzero ................................ <0>
  [ 49] setprop 649 ............................. pDoubleClick = 0
  [ 52] ret
end

on update me
  [  0] getprop 535 ............................. <pChanges>
  [  3] not ..................................... <not pChanges>
  [  4] jmpifz [ 12] ............................ if not pChanges then
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 14 .............................. return 0
  [ 12] getparam 0 .............................. <me>
  [ 14] pushsymb 105 ............................ <#pSprList>
  [ 16] pusharglist 2 ........................... <me, #pSprList>
  [ 18] objcall 34 .............................. <me.pSprList.count>
  [ 20] pushint8 4 .............................. <4>
  [ 22] lt ...................................... <me.pSprList.count < 4>
  [ 23] jmpifz [ 31] ............................ if me.pSprList.count < 4 then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 14 .............................. return 0
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 641 ............................. <me.updateScifiDoor()>
  [ 38] pusharglistnoret 1 ...................... <me.updateScifiDoor()>
  [ 40] extcall 14 .............................. return me.updateScifiDoor()
  [ 42] ret
end

on updateScifiDoor me
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 105 ............................ <#pSprList>
  [  4] pusharglist 2 ........................... <me, #pSprList>
  [  6] objcall 34 .............................. <me.pSprList.count>
  [  8] pushint8 4 .............................. <4>
  [ 10] lt ...................................... <me.pSprList.count < 4>
  [ 11] jmpifz [ 19] ............................ if me.pSprList.count < 4 then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 14 .............................. return 0
  [ 19] getparam 0 .............................. <me>
  [ 21] pushsymb 105 ............................ <#pSprList>
  [ 23] pushint8 4 .............................. <4>
  [ 25] pusharglist 3 ........................... <me, #pSprList, 4>
  [ 27] objcall 25 .............................. <me.pSprList[4]>
  [ 29] setlocal 0 .............................. tTopSp = me.pSprList[4]
  [ 31] getparam 0 .............................. <me>
  [ 33] pushsymb 105 ............................ <#pSprList>
  [ 35] pushint8 2 .............................. <2>
  [ 37] pusharglist 3 ........................... <me, #pSprList, 2>
  [ 39] objcall 25 .............................. <me.pSprList[2]>
  [ 41] setlocal 1 .............................. tMidSp1 = me.pSprList[2]
  [ 43] getparam 0 .............................. <me>
  [ 45] pushsymb 105 ............................ <#pSprList>
  [ 47] pushint8 3 .............................. <3>
  [ 49] pusharglist 3 ........................... <me, #pSprList, 3>
  [ 51] objcall 25 .............................. <me.pSprList[3]>
  [ 53] setlocal 2 .............................. tMidSp2 = me.pSprList[3]
  [ 55] getprop 644 ............................. <pLastActive>
  [ 58] pushzero ................................ <0>
  [ 59] eq ...................................... <pLastActive = 0>
  [ 60] getprop 487 ............................. <pActive>
  [ 63] pushzero ................................ <0>
  [ 64] eq ...................................... <pActive = 0>
  [ 65] and ..................................... <(pLastActive = 0) and (pActive = 0)>
  [ 66] jmpifz [ 87] ............................ if (pLastActive = 0) and (pActive = 0) then
  [ 69] getlocal 0 .............................. <tTopSp>
  [ 71] getobjprop 46 ........................... <tTopSp.locV>
  [ 73] getlocal 1 .............................. <tMidSp1>
  [ 75] getobjprop 46 ........................... <tMidSp1.locV>
  [ 77] getlocal 2 .............................. <tMidSp2>
  [ 79] getobjprop 46 ........................... <tMidSp2.locV>
  [ 81] pusharglist 3 ........................... <[tTopSp.locV, tMidSp1.locV, tMidSp2.locV]>
  [ 83] pushlist ................................ <[tTopSp.locV, tMidSp1.locV, tMidSp2.locV]>
  [ 84] setprop 647 ............................. pScifiDoorLocs = [tTopSp.locV, tMidSp1.locV, tMidSp2.locV]
  [ 87] getprop 650 ............................. <pStopped>
  [ 90] getprop 487 ............................. <pActive>
  [ 93] pushzero ................................ <0>
  [ 94] eq ...................................... <pActive = 0>
  [ 95] and ..................................... <pStopped and (pActive = 0)>
  [ 96] getprop 644 ............................. <pLastActive>
  [ 99] pushint8 1 .............................. <1>
  [101] inv ..................................... <-1>
  [102] eq ...................................... <pLastActive = -1>
  [103] and ..................................... <pStopped and (pActive = 0) and (pLastActive = -1)>
  [104] jmpifz [139] ............................ if pStopped and (pActive = 0) and (pLastActive = -1) then
  [107] getlocal 0 .............................. <tTopSp>
  [109] getobjprop 46 ........................... <tTopSp.locV>
  [111] getlocal 1 .............................. <tMidSp1>
  [113] getobjprop 46 ........................... <tMidSp1.locV>
  [115] getlocal 2 .............................. <tMidSp2>
  [117] getobjprop 46 ........................... <tMidSp2.locV>
  [119] pusharglist 3 ........................... <[tTopSp.locV, tMidSp1.locV, tMidSp2.locV]>
  [121] pushlist ................................ <[tTopSp.locV, tMidSp1.locV, tMidSp2.locV]>
  [122] setprop 647 ............................. pScifiDoorLocs = [tTopSp.locV, tMidSp1.locV, tMidSp2.locV]
  [125] pushzero ................................ <0>
  [126] setprop 644 ............................. pLastActive = 0
  [129] pushzero ................................ <0>
  [130] setprop 535 ............................. pChanges = 0
  [133] pushint8 1 .............................. <1>
  [135] pusharglistnoret 1 ...................... <1>
  [137] extcall 14 .............................. return 1
  [139] getprop 650 ............................. <pStopped>
  [142] getprop 644 ............................. <pLastActive>
  [145] pushint8 1 .............................. <1>
  [147] eq ...................................... <pLastActive = 1>
  [148] getprop 487 ............................. <pActive>
  [151] pushint8 1 .............................. <1>
  [153] eq ...................................... <pActive = 1>
  [154] and ..................................... <(pLastActive = 1) and (pActive = 1)>
  [155] getprop 644 ............................. <pLastActive>
  [158] pushint8 1 .............................. <1>
  [160] inv ..................................... <-1>
  [161] eq ...................................... <pLastActive = -1>
  [162] or ...................................... <((pLastActive = 1) and (pActive = 1)) or (pLastActive = -1)>
  [163] and ..................................... <pStopped and (((pLastActive = 1) and (pActive = 1)) or (pLastActive = -1))>
  [164] jmpifz [198] ............................ if pStopped and (((pLastActive = 1) and (pActive = 1)) or (pLastActive = -1)) then
  [167] getlocal 0 .............................. <tTopSp>
  [169] getobjprop 46 ........................... <tTopSp.locV>
  [171] getlocal 1 .............................. <tMidSp1>
  [173] getobjprop 46 ........................... <tMidSp1.locV>
  [175] getlocal 2 .............................. <tMidSp2>
  [177] getobjprop 46 ........................... <tMidSp2.locV>
  [179] pusharglist 3 ........................... <[tTopSp.locV, tMidSp1.locV, tMidSp2.locV]>
  [181] pushlist ................................ <[tTopSp.locV, tMidSp1.locV, tMidSp2.locV]>
  [182] setprop 647 ............................. pScifiDoorLocs = [tTopSp.locV, tMidSp1.locV, tMidSp2.locV]
  [185] getparam 0 .............................. <me>
  [187] pushcons 1 .............................. <"down">
  [189] pusharglist 2 ........................... <me, "down">
  [191] objcall 642 ............................. <me.SetScifiDoor("down")>
  [194] pusharglistnoret 1 ...................... <me.SetScifiDoor("down")>
  [196] extcall 14 .............................. return me.SetScifiDoor("down")
  [198] pushint8 34 ............................. <34>
  [200] get 7 ................................... <the timer>
  [202] getparam 0 .............................. <me>
  [204] getobjprop 648 .......................... <me.pScifiDoorTimer>
  [207] sub ..................................... <the timer - me.pScifiDoorTimer>
  [208] setlocal 3 .............................. tDoorTimer = the timer - me.pScifiDoorTimer
  [210] getprop 487 ............................. <pActive>
  [213] jmpifz [287] ............................ if pActive then / else
  [216] getlocal 0 .............................. <tTopSp>
  [218] getlocal 0 .............................. <tTopSp>
  [220] getobjprop 46 ........................... <tTopSp.locV>
  [222] getprop 645 ............................. <pScifiDoorSpeed>
  [225] add ..................................... <tTopSp.locV + pScifiDoorSpeed>
  [226] setobjprop 46 ........................... tTopSp.locV = tTopSp.locV + pScifiDoorSpeed
  [228] getparam 0 .............................. <me>
  [230] getlocal 1 .............................. <tMidSp1>
  [232] getprop 645 ............................. <pScifiDoorSpeed>
  [235] inv ..................................... <-pScifiDoorSpeed>
  [236] pusharglistnoret 3 ...................... <me, tMidSp1, -pScifiDoorSpeed>
  [238] objcall 643 ............................. me.moveTopLine(tMidSp1, -pScifiDoorSpeed)
  [241] getparam 0 .............................. <me>
  [243] getlocal 2 .............................. <tMidSp2>
  [245] getprop 645 ............................. <pScifiDoorSpeed>
  [248] inv ..................................... <-pScifiDoorSpeed>
  [249] pusharglistnoret 3 ...................... <me, tMidSp2, -pScifiDoorSpeed>
  [251] objcall 643 ............................. me.moveTopLine(tMidSp2, -pScifiDoorSpeed)
  [254] getlocal 1 .............................. <tMidSp1>
  [256] getobjprop 48 ........................... <tMidSp1.height>
  [258] pushint8 11 ............................. <11>
  [260] getprop 632 ............................. <pSizeMultiplier>
  [263] mul ..................................... <11 * pSizeMultiplier>
  [264] lteq .................................... <tMidSp1.height <= (11 * pSizeMultiplier)>
  [265] getlocal 3 .............................. <tDoorTimer>
  [267] getprop 646 ............................. <pScifiDoorTimeOut>
  [270] gt ...................................... <tDoorTimer > pScifiDoorTimeOut>
  [271] or ...................................... <(tMidSp1.height <= (11 * pSizeMultiplier)) or (tDoorTimer > pScifiDoorTimeOut)>
  [272] jmpifz [284] ............................ if (tMidSp1.height <= (11 * pSizeMultiplier)) or (tDoorTimer > pScifiDoorTimeOut) then
  [275] getparam 0 .............................. <me>
  [277] pushcons 1 .............................. <"down">
  [279] pusharglistnoret 2 ...................... <me, "down">
  [281] objcall 642 ............................. me.SetScifiDoor("down")
  [284] jmp [395]
  [287] getlocal 3 .............................. <tDoorTimer>
  [289] getprop 646 ............................. <pScifiDoorTimeOut>
  [292] gt ...................................... <tDoorTimer > pScifiDoorTimeOut>
  [293] jmpifz [309] ............................ if tDoorTimer > pScifiDoorTimeOut then
  [296] getparam 0 .............................. <me>
  [298] pushcons 2 .............................. <"up">
  [300] pusharglist 2 ........................... <me, "up">
  [302] objcall 642 ............................. <me.SetScifiDoor("up")>
  [305] pusharglistnoret 1 ...................... <me.SetScifiDoor("up")>
  [307] extcall 14 .............................. return me.SetScifiDoor("up")
  [309] getprop 632 ............................. <pSizeMultiplier>
  [312] pushfloat32 1.0 ......................... <1.0>
  [317] eq ...................................... <pSizeMultiplier = 1.0>
  [318] jmpifz [336] ............................ if pSizeMultiplier = 1.0 then / else
  [321] getlocal 0 .............................. <tTopSp>
  [323] getlocal 0 .............................. <tTopSp>
  [325] getobjprop 46 ........................... <tTopSp.locV>
  [327] getprop 645 ............................. <pScifiDoorSpeed>
  [330] sub ..................................... <tTopSp.locV - pScifiDoorSpeed>
  [331] setobjprop 46 ........................... tTopSp.locV = tTopSp.locV - pScifiDoorSpeed
  [333] jmp [348]
  [336] getlocal 0 .............................. <tTopSp>
  [338] getlocal 0 .............................. <tTopSp>
  [340] getobjprop 46 ........................... <tTopSp.locV>
  [342] getprop 645 ............................. <pScifiDoorSpeed>
  [345] sub ..................................... <tTopSp.locV - pScifiDoorSpeed>
  [346] setobjprop 46 ........................... tTopSp.locV = tTopSp.locV - pScifiDoorSpeed
  [348] getparam 0 .............................. <me>
  [350] getlocal 1 .............................. <tMidSp1>
  [352] getprop 645 ............................. <pScifiDoorSpeed>
  [355] pusharglistnoret 3 ...................... <me, tMidSp1, pScifiDoorSpeed>
  [357] objcall 643 ............................. me.moveTopLine(tMidSp1, pScifiDoorSpeed)
  [360] getparam 0 .............................. <me>
  [362] getlocal 2 .............................. <tMidSp2>
  [364] getprop 645 ............................. <pScifiDoorSpeed>
  [367] pusharglistnoret 3 ...................... <me, tMidSp2, pScifiDoorSpeed>
  [369] objcall 643 ............................. me.moveTopLine(tMidSp2, pScifiDoorSpeed)
  [372] getlocal 1 .............................. <tMidSp1>
  [374] getobjprop 48 ........................... <tMidSp1.height>
  [376] pushint8 65 ............................. <65>
  [378] getprop 632 ............................. <pSizeMultiplier>
  [381] mul ..................................... <65 * pSizeMultiplier>
  [382] gt ...................................... <tMidSp1.height > (65 * pSizeMultiplier)>
  [383] jmpifz [395] ............................ if tMidSp1.height > (65 * pSizeMultiplier) then
  [386] getparam 0 .............................. <me>
  [388] pushcons 2 .............................. <"up">
  [390] pusharglistnoret 2 ...................... <me, "up">
  [392] objcall 642 ............................. me.SetScifiDoor("up")
  [395] pushint8 1 .............................. <1>
  [397] pusharglistnoret 1 ...................... <1>
  [399] extcall 14 .............................. return 1
  [401] ret
end

on SetScifiDoor me, tdir
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 105 ............................ <#pSprList>
  [  4] pusharglist 2 ........................... <me, #pSprList>
  [  6] objcall 34 .............................. <me.pSprList.count>
  [  8] pushint8 4 .............................. <4>
  [ 10] lt ...................................... <me.pSprList.count < 4>
  [ 11] jmpifz [ 19] ............................ if me.pSprList.count < 4 then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 14 .............................. return 0
  [ 19] getparam 0 .............................. <me>
  [ 21] pushsymb 105 ............................ <#pSprList>
  [ 23] pushint8 4 .............................. <4>
  [ 25] pusharglist 3 ........................... <me, #pSprList, 4>
  [ 27] objcall 25 .............................. <me.pSprList[4]>
  [ 29] setlocal 0 .............................. tTopSp = me.pSprList[4]
  [ 31] getparam 0 .............................. <me>
  [ 33] pushsymb 105 ............................ <#pSprList>
  [ 35] pushint8 2 .............................. <2>
  [ 37] pusharglist 3 ........................... <me, #pSprList, 2>
  [ 39] objcall 25 .............................. <me.pSprList[2]>
  [ 41] setlocal 1 .............................. tMidSp1 = me.pSprList[2]
  [ 43] getparam 0 .............................. <me>
  [ 45] pushsymb 105 ............................ <#pSprList>
  [ 47] pushint8 3 .............................. <3>
  [ 49] pusharglist 3 ........................... <me, #pSprList, 3>
  [ 51] objcall 25 .............................. <me.pSprList[3]>
  [ 53] setlocal 2 .............................. tMidSp2 = me.pSprList[3]
  [ 55] getparam 1 .............................. <tdir>
  [ 57] pushcons 2 .............................. <"up">
  [ 59] eq ...................................... <tdir = "up">
  [ 60] jmpifz [125] ............................ if tdir = "up" then / else
  [ 63] getlocal 0 .............................. <tTopSp>
  [ 65] getprop 647 ............................. <pScifiDoorLocs>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglist 2 ........................... <pScifiDoorLocs, 1>
  [ 72] objcall 50 .............................. <pScifiDoorLocs[1]>
  [ 74] setobjprop 46 ........................... tTopSp.locV = pScifiDoorLocs[1]
  [ 76] getlocal 1 .............................. <tMidSp1>
  [ 78] pushint8 65 ............................. <65>
  [ 80] getprop 632 ............................. <pSizeMultiplier>
  [ 83] mul ..................................... <65 * pSizeMultiplier>
  [ 84] setobjprop 48 ........................... tMidSp1.height = 65 * pSizeMultiplier
  [ 86] getlocal 2 .............................. <tMidSp2>
  [ 88] pushint8 64 ............................. <64>
  [ 90] getprop 632 ............................. <pSizeMultiplier>
  [ 93] mul ..................................... <64 * pSizeMultiplier>
  [ 94] setobjprop 48 ........................... tMidSp2.height = 64 * pSizeMultiplier
  [ 96] getlocal 1 .............................. <tMidSp1>
  [ 98] getprop 647 ............................. <pScifiDoorLocs>
  [101] pushint8 2 .............................. <2>
  [103] pusharglist 2 ........................... <pScifiDoorLocs, 2>
  [105] objcall 50 .............................. <pScifiDoorLocs[2]>
  [107] setobjprop 46 ........................... tMidSp1.locV = pScifiDoorLocs[2]
  [109] getlocal 2 .............................. <tMidSp2>
  [111] getprop 647 ............................. <pScifiDoorLocs>
  [114] pushint8 3 .............................. <3>
  [116] pusharglist 2 ........................... <pScifiDoorLocs, 3>
  [118] objcall 50 .............................. <pScifiDoorLocs[3]>
  [120] setobjprop 46 ........................... tMidSp2.locV = pScifiDoorLocs[3]
  [122] jmp [256]
  [125] getprop 632 ............................. <pSizeMultiplier>
  [128] pushfloat32 1.0 ......................... <1.0>
  [133] eq ...................................... <pSizeMultiplier = 1.0>
  [134] jmpifz [168] ............................ if pSizeMultiplier = 1.0 then / else
  [137] getlocal 0 .............................. <tTopSp>
  [139] getprop 647 ............................. <pScifiDoorLocs>
  [142] pushint8 1 .............................. <1>
  [144] pusharglist 2 ........................... <pScifiDoorLocs, 1>
  [146] objcall 50 .............................. <pScifiDoorLocs[1]>
  [148] pushint8 57 ............................. <57>
  [150] add ..................................... <pScifiDoorLocs[1] + 57>
  [151] setobjprop 46 ........................... tTopSp.locV = pScifiDoorLocs[1] + 57
  [153] getlocal 1 .............................. <tMidSp1>
  [155] pushint8 8 .............................. <8>
  [157] setobjprop 48 ........................... tMidSp1.height = 8
  [159] getlocal 2 .............................. <tMidSp2>
  [161] pushint8 7 .............................. <7>
  [163] setobjprop 48 ........................... tMidSp2.height = 7
  [165] jmp [196]
  [168] getlocal 0 .............................. <tTopSp>
  [170] getprop 647 ............................. <pScifiDoorLocs>
  [173] pushint8 1 .............................. <1>
  [175] pusharglist 2 ........................... <pScifiDoorLocs, 1>
  [177] objcall 50 .............................. <pScifiDoorLocs[1]>
  [179] pushint8 27 ............................. <27>
  [181] add ..................................... <pScifiDoorLocs[1] + 27>
  [182] setobjprop 46 ........................... tTopSp.locV = pScifiDoorLocs[1] + 27
  [184] getlocal 1 .............................. <tMidSp1>
  [186] pushint8 2 .............................. <2>
  [188] setobjprop 48 ........................... tMidSp1.height = 2
  [190] getlocal 2 .............................. <tMidSp2>
  [192] pushint8 2 .............................. <2>
  [194] setobjprop 48 ........................... tMidSp2.height = 2
  [196] getlocal 1 .............................. <tMidSp1>
  [198] pushint8 8 .............................. <8>
  [200] getprop 632 ............................. <pSizeMultiplier>
  [203] mul ..................................... <8 * pSizeMultiplier>
  [204] setobjprop 48 ........................... tMidSp1.height = 8 * pSizeMultiplier
  [206] getlocal 2 .............................. <tMidSp2>
  [208] pushint8 7 .............................. <7>
  [210] getprop 632 ............................. <pSizeMultiplier>
  [213] mul ..................................... <7 * pSizeMultiplier>
  [214] setobjprop 48 ........................... tMidSp2.height = 7 * pSizeMultiplier
  [216] getlocal 1 .............................. <tMidSp1>
  [218] getprop 647 ............................. <pScifiDoorLocs>
  [221] pushint8 2 .............................. <2>
  [223] pusharglist 2 ........................... <pScifiDoorLocs, 2>
  [225] objcall 50 .............................. <pScifiDoorLocs[2]>
  [227] pushint8 2 .............................. <2>
  [229] getprop 632 ............................. <pSizeMultiplier>
  [232] mul ..................................... <2 * pSizeMultiplier>
  [233] sub ..................................... <pScifiDoorLocs[2] - (2 * pSizeMultiplier)>
  [234] setobjprop 46 ........................... tMidSp1.locV = pScifiDoorLocs[2] - (2 * pSizeMultiplier)
  [236] getlocal 2 .............................. <tMidSp2>
  [238] getprop 647 ............................. <pScifiDoorLocs>
  [241] pushint8 3 .............................. <3>
  [243] pusharglist 2 ........................... <pScifiDoorLocs, 3>
  [245] objcall 50 .............................. <pScifiDoorLocs[3]>
  [247] pushint8 5 .............................. <5>
  [249] getprop 632 ............................. <pSizeMultiplier>
  [252] mul ..................................... <5 * pSizeMultiplier>
  [253] add ..................................... <pScifiDoorLocs[3] + (5 * pSizeMultiplier)>
  [254] setobjprop 46 ........................... tMidSp2.locV = pScifiDoorLocs[3] + (5 * pSizeMultiplier)
  [256] pushzero ................................ <0>
  [257] setprop 535 ............................. pChanges = 0
  [260] getprop 487 ............................. <pActive>
  [263] setprop 644 ............................. pLastActive = pActive
  [266] pushint8 1 .............................. <1>
  [268] setprop 650 ............................. pStopped = 1
  [271] pushint8 1 .............................. <1>
  [273] pusharglistnoret 1 ...................... <1>
  [275] extcall 14 .............................. return 1
  [277] ret
end

on moveTopLine me, tSpr, tAmount
  [  0] getparam 1 .............................. <tSpr>
  [  2] getobjprop 655 .......................... <tSpr.bottom>
  [  5] setlocal 0 .............................. tBot = tSpr.bottom
  [  7] getparam 1 .............................. <tSpr>
  [  9] getparam 1 .............................. <tSpr>
  [ 11] getobjprop 48 ........................... <tSpr.height>
  [ 13] getparam 2 .............................. <tAmount>
  [ 15] add ..................................... <tSpr.height + tAmount>
  [ 16] setobjprop 48 ........................... tSpr.height = tSpr.height + tAmount
  [ 18] getlocal 0 .............................. <tBot>
  [ 20] getparam 1 .............................. <tSpr>
  [ 22] getobjprop 655 .......................... <tSpr.bottom>
  [ 25] gt ...................................... <tBot > tSpr.bottom>
  [ 26] jmpifz [ 40] ............................ if tBot > tSpr.bottom then
  [ 29] getparam 1 .............................. <tSpr>
  [ 31] getparam 1 .............................. <tSpr>
  [ 33] getobjprop 46 ........................... <tSpr.locV>
  [ 35] pushint8 1 .............................. <1>
  [ 37] add ..................................... <tSpr.locV + 1>
  [ 38] setobjprop 46 ........................... tSpr.locV = tSpr.locV + 1
  [ 40] getlocal 0 .............................. <tBot>
  [ 42] getparam 1 .............................. <tSpr>
  [ 44] getobjprop 655 .......................... <tSpr.bottom>
  [ 47] lt ...................................... <tBot < tSpr.bottom>
  [ 48] jmpifz [ 62] ............................ if tBot < tSpr.bottom then
  [ 51] getparam 1 .............................. <tSpr>
  [ 53] getparam 1 .............................. <tSpr>
  [ 55] getobjprop 46 ........................... <tSpr.locV>
  [ 57] pushint8 1 .............................. <1>
  [ 59] sub ..................................... <tSpr.locV - 1>
  [ 60] setobjprop 46 ........................... tSpr.locV = tSpr.locV - 1
  [ 62] pushint8 1 .............................. <1>
  [ 64] pusharglistnoret 1 ...................... <1>
  [ 66] extcall 14 .............................. return 1
  [ 68] ret
end

on setOn me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 487 ............................. pActive = 1
  [  5] ret
end

on setOff me
  [  0] pushzero ................................ <0>
  [  1] setprop 487 ............................. pActive = 0
  [  4] ret
end

on select me
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 376 .......................... <the doubleClick>
  [  5] jmpifz [ 65] ............................ if the doubleClick then / else
  [  8] getprop 535 ............................. <pChanges>
  [ 11] jmpifz [ 19] ............................ if pChanges then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 14 .............................. return 0
  [ 19] pushint8 1 .............................. <1>
  [ 21] setprop 649 ............................. pDoubleClick = 1
  [ 24] pushsymb 119 ............................ <#room>
  [ 26] pusharglist 1 ........................... <#room>
  [ 28] extcall 118 ............................. <getThread(#room)>
  [ 30] pusharglist 1 ........................... <getThread(#room)>
  [ 32] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 34] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 36] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [ 38] pushcons 3 .............................. <"USEFURNITURE">
  [ 40] pushsymb 177 ............................ <#integer>
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 140 ............................. <me.getID()>
  [ 48] pusharglist 1 ........................... <me.getID()>
  [ 50] extcall 177 ............................. <integer(me.getID())>
  [ 52] pushsymb 177 ............................ <#integer>
  [ 54] pushzero ................................ <0>
  [ 55] pusharglist 4 ........................... <[#integer: integer(me.getID()), #integer: 0]>
  [ 57] pushproplist ............................ <[#integer: integer(me.getID()), #integer: 0]>
  [ 58] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "USEFURNITURE", [#integer: integer(me.getID()), #integer: 0]>
  [ 60] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("USEFURNITURE", [#integer: integer(me.getID()), #integer: 0])
  [ 62] jmp [112]
  [ 65] getprop 649 ............................. <pDoubleClick>
  [ 68] not ..................................... <not pDoubleClick>
  [ 69] getprop 535 ............................. <pChanges>
  [ 72] not ..................................... <not pChanges>
  [ 73] and ..................................... <not pDoubleClick and not pChanges>
  [ 74] jmpifz [112] ............................ if not pDoubleClick and not pChanges then
  [ 77] pushsymb 119 ............................ <#room>
  [ 79] pusharglist 1 ........................... <#room>
  [ 81] extcall 118 ............................. <getThread(#room)>
  [ 83] pusharglist 1 ........................... <getThread(#room)>
  [ 85] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 87] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 89] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [ 91] pushcons 4 .............................. <"MOVE">
  [ 93] pushsymb 177 ............................ <#integer>
  [ 95] getparam 0 .............................. <me>
  [ 97] getobjprop 112 .......................... <me.pLocX>
  [ 99] pushsymb 177 ............................ <#integer>
  [101] getparam 0 .............................. <me>
  [103] getobjprop 113 .......................... <me.pLocY>
  [105] pusharglist 4 ........................... <[#integer: me.pLocX, #integer: me.pLocY]>
  [107] pushproplist ............................ <[#integer: me.pLocX, #integer: me.pLocY]>
  [108] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#integer: me.pLocX, #integer: me.pLocY]>
  [110] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#integer: me.pLocX, #integer: me.pLocY])
  [112] pushint8 1 .............................. <1>
  [114] pusharglistnoret 1 ...................... <1>
  [116] extcall 14 .............................. return 1
  [118] ret
end
