property pDate, pPackageID, pCardWndID, pNoIconPlaceholderName, pIconType, pIconCode, pIconColor

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 582 ............................. pDate = EMPTY
  [  5] pushcons 0 .............................. <EMPTY>
  [  7] setprop 709 ............................. pPackageID = EMPTY
  [ 10] pushcons 1 .............................. <"Card">
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 711 ............................. <getUniqueID()>
  [ 17] joinpadstr .............................. <"Card" && getUniqueID()>
  [ 18] setprop 710 ............................. pCardWndID = "Card" && getUniqueID()
  [ 21] pushcons 2 .............................. <"icon_placeholder">
  [ 23] setprop 712 ............................. pNoIconPlaceholderName = "icon_placeholder"
  [ 26] pushsymb 444 ............................ <#leaveRoom>
  [ 29] getparam 0 .............................. <me>
  [ 31] pusharglist 1 ........................... <me>
  [ 33] objcall 140 ............................. <me.getID()>
  [ 35] pushsymb 703 ............................ <#hideCard>
  [ 38] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #hideCard>
  [ 40] extcall 443 ............................. registerMessage(#leaveRoom, me.getID(), #hideCard)
  [ 43] pushsymb 445 ............................ <#changeRoom>
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglist 1 ........................... <me>
  [ 50] objcall 140 ............................. <me.getID()>
  [ 52] pushsymb 703 ............................ <#hideCard>
  [ 55] pusharglistnoret 3 ...................... <#changeRoom, me.getID(), #hideCard>
  [ 57] extcall 443 ............................. registerMessage(#changeRoom, me.getID(), #hideCard)
  [ 60] pusharglist 0 ........................... <>
  [ 62] extcall 17 .............................. <VOID>
  [ 64] setprop 713 ............................. pIconType = VOID
  [ 67] pusharglist 0 ........................... <>
  [ 69] extcall 17 .............................. <VOID>
  [ 71] setprop 714 ............................. pIconCode = VOID
  [ 74] pusharglist 0 ........................... <>
  [ 76] extcall 17 .............................. <VOID>
  [ 78] setprop 715 ............................. pIconColor = VOID
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglistnoret 1 ...................... <1>
  [ 85] extcall 14 .............................. return 1
  [ 87] ret
end

on deconstruct me
  [  0] getprop 710 ............................. <pCardWndID>
  [  3] pusharglist 1 ........................... <pCardWndID>
  [  5] extcall 448 ............................. <windowExists(pCardWndID)>
  [  8] jmpifz [ 19] ............................ if windowExists(pCardWndID) then
  [ 11] getprop 710 ............................. <pCardWndID>
  [ 14] pusharglistnoret 1 ...................... <pCardWndID>
  [ 16] extcall 449 ............................. removeWindow(pCardWndID)
  [ 19] pushsymb 444 ............................ <#leaveRoom>
  [ 22] getparam 0 .............................. <me>
  [ 24] pusharglist 1 ........................... <me>
  [ 26] objcall 140 ............................. <me.getID()>
  [ 28] pusharglistnoret 2 ...................... <#leaveRoom, me.getID()>
  [ 30] extcall 446 ............................. unregisterMessage(#leaveRoom, me.getID())
  [ 33] pushsymb 445 ............................ <#changeRoom>
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglist 1 ........................... <me>
  [ 40] objcall 140 ............................. <me.getID()>
  [ 42] pusharglistnoret 2 ...................... <#changeRoom, me.getID()>
  [ 44] extcall 446 ............................. unregisterMessage(#changeRoom, me.getID())
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 1 ...................... <1>
  [ 51] extcall 14 .............................. return 1
  [ 53] ret
end

on define me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 200 ............................ <#id>
  [  4] pusharglist 2 ........................... <tProps, #id>
  [  6] objcall 50 .............................. <tProps[#id]>
  [  8] setprop 709 ............................. pPackageID = tProps[#id]
  [ 11] getparam 1 .............................. <tProps>
  [ 13] pushsymb 880 ............................ <#date>
  [ 16] pusharglist 2 ........................... <tProps, #date>
  [ 18] objcall 50 .............................. <tProps[#date]>
  [ 20] setprop 582 ............................. pDate = tProps[#date]
  [ 23] getparam 0 .............................. <me>
  [ 25] getparam 1 .............................. <tProps>
  [ 27] pushsymb 253 ............................ <#loc>
  [ 29] pusharglist 2 ........................... <tProps, #loc>
  [ 31] objcall 50 .............................. <tProps[#loc]>
  [ 33] pushzero ................................ <0>
  [ 34] pushint16 220 ........................... <220>
  [ 37] inv ..................................... <-220>
  [ 38] pusharglist 2 ........................... <[0, -220]>
  [ 40] pushlist ................................ <[0, -220]>
  [ 41] add ..................................... <tProps[#loc] + [0, -220]>
  [ 42] pusharglistnoret 2 ...................... <me, tProps[#loc] + [0, -220]>
  [ 44] objcall 699 ............................. me.showCard(tProps[#loc] + [0, -220])
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 1 ...................... <1>
  [ 51] extcall 14 .............................. return 1
  [ 53] ret
end

on showCard me, tloc
  [  0] getprop 710 ............................. <pCardWndID>
  [  3] pusharglist 1 ........................... <pCardWndID>
  [  5] extcall 448 ............................. <windowExists(pCardWndID)>
  [  8] jmpifz [ 19] ............................ if windowExists(pCardWndID) then
  [ 11] getprop 710 ............................. <pCardWndID>
  [ 14] pusharglistnoret 1 ...................... <pCardWndID>
  [ 16] extcall 449 ............................. removeWindow(pCardWndID)
  [ 19] getparam 1 .............................. <tloc>
  [ 21] pusharglist 1 ........................... <tloc>
  [ 23] extcall 31 .............................. <voidp(tloc)>
  [ 25] jmpifz [ 37] ............................ if voidp(tloc) then
  [ 28] pushint8 100 ............................ <100>
  [ 30] pushint8 100 ............................ <100>
  [ 32] pusharglist 2 ........................... <[100, 100]>
  [ 34] pushlist ................................ <[100, 100]>
  [ 35] setparam 1 .............................. tloc = [100, 100]
  [ 37] getparam 1 .............................. <tloc>
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglist 2 ........................... <tloc, 1>
  [ 43] objcall 50 .............................. <tloc[1]>
  [ 45] getmovieprop 468 ........................ <the stage>
  [ 48] getchainedprop 44 ....................... <(the stage).rect>
  [ 50] getobjprop 47 ........................... <(the stage).rect.width>
  [ 52] pushint16 260 ........................... <260>
  [ 55] sub ..................................... <(the stage).rect.width - 260>
  [ 56] gt ...................................... <tloc[1] > ((the stage).rect.width - 260)>
  [ 57] jmpifz [ 79] ............................ if tloc[1] > ((the stage).rect.width - 260) then
  [ 60] getparam 1 .............................. <tloc>
  [ 62] pushint8 1 .............................. <1>
  [ 64] getmovieprop 468 ........................ <the stage>
  [ 67] getchainedprop 44 ....................... <(the stage).rect>
  [ 69] getobjprop 47 ........................... <(the stage).rect.width>
  [ 71] pushint16 260 ........................... <260>
  [ 74] sub ..................................... <(the stage).rect.width - 260>
  [ 75] pusharglistnoret 3 ...................... <tloc, 1, (the stage).rect.width - 260>
  [ 77] objcall 158 ............................. tloc[1] = (the stage).rect.width - 260
  [ 79] getparam 1 .............................. <tloc>
  [ 81] pushint8 2 .............................. <2>
  [ 83] pusharglist 2 ........................... <tloc, 2>
  [ 85] objcall 50 .............................. <tloc[2]>
  [ 87] pushint8 2 .............................. <2>
  [ 89] lt ...................................... <tloc[2] < 2>
  [ 90] jmpifz [103] ............................ if tloc[2] < 2 then
  [ 93] getparam 1 .............................. <tloc>
  [ 95] pushint8 2 .............................. <2>
  [ 97] pushint8 2 .............................. <2>
  [ 99] pusharglistnoret 3 ...................... <tloc, 2, 2>
  [101] objcall 158 ............................. tloc[2] = 2
  [103] getprop 710 ............................. <pCardWndID>
  [106] pushcons 3 .............................. <"ecotron_box_card.window">
  [108] getparam 1 .............................. <tloc>
  [110] pushint8 1 .............................. <1>
  [112] pusharglist 2 ........................... <tloc, 1>
  [114] objcall 50 .............................. <tloc[1]>
  [116] getparam 1 .............................. <tloc>
  [118] pushint8 2 .............................. <2>
  [120] pusharglist 2 ........................... <tloc, 2>
  [122] objcall 50 .............................. <tloc[2]>
  [124] pusharglist 4 ........................... <pCardWndID, "ecotron_box_card.window", tloc[1], tloc[2]>
  [126] extcall 467 ............................. <createWindow(pCardWndID, "ecotron_box_card.window", tloc[1], tloc[2])>
  [129] not ..................................... <not createWindow(pCardWndID, "ecotron_box_card.window", tloc[1], tloc[2])>
  [130] jmpifz [138] ............................ if not createWindow(pCardWndID, "ecotron_box_card.window", tloc[1], tloc[2]) then
  [133] pushzero ................................ <0>
  [134] pusharglistnoret 1 ...................... <0>
  [136] extcall 14 .............................. return 0
  [138] getprop 710 ............................. <pCardWndID>
  [141] pusharglist 1 ........................... <pCardWndID>
  [143] extcall 457 ............................. <getWindow(pCardWndID)>
  [146] setlocal 0 .............................. tWndObj = getWindow(pCardWndID)
  [148] getlocal 0 .............................. <tWndObj>
  [150] pushzero ................................ <0>
  [151] eq ...................................... <tWndObj = 0>
  [152] jmpifz [160] ............................ if tWndObj = 0 then
  [155] pushzero ................................ <0>
  [156] pusharglistnoret 1 ...................... <0>
  [158] extcall 14 .............................. return 0
  [160] pushsymb 123 ............................ <#session>
  [162] pusharglist 1 ........................... <#session>
  [164] extcall 122 ............................. <getObject(#session)>
  [166] pushcons 4 .............................. <"user_rights">
  [168] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [170] objcall 124 ............................. <getObject(#session).GET("user_rights")>
  [172] setlocal 1 .............................. tUserRights = getObject(#session).GET("user_rights")
  [174] pushsymb 123 ............................ <#session>
  [176] pusharglist 1 ........................... <#session>
  [178] extcall 122 ............................. <getObject(#session)>
  [180] pushcons 5 .............................. <"room_owner">
  [182] pusharglist 2 ........................... <getObject(#session), "room_owner">
  [184] objcall 124 ............................. <getObject(#session).GET("room_owner")>
  [186] getlocal 1 .............................. <tUserRights>
  [188] pushcons 6 .............................. <"fuse_pick_up_any_furni">
  [190] pusharglist 2 ........................... <tUserRights, "fuse_pick_up_any_furni">
  [192] objcall 374 ............................. <tUserRights.findPos("fuse_pick_up_any_furni")>
  [195] or ...................................... <getObject(#session).GET("room_owner") or tUserRights.findPos("fuse_pick_up_any_furni")>
  [196] setlocal 2 .............................. tUserCanOpen = getObject(#session).GET("room_owner") or tUserRights.findPos("fuse_pick_up_any_furni")
  [198] getlocal 2 .............................. <tUserCanOpen>
  [200] not ..................................... <not tUserCanOpen>
  [201] getlocal 0 .............................. <tWndObj>
  [203] pushcons 7 .............................. <"eco_box_open">
  [205] pusharglist 2 ........................... <tWndObj, "eco_box_open">
  [207] objcall 458 ............................. <tWndObj.getElement("eco_box_open")>
  [210] pushzero ................................ <0>
  [211] nteq .................................... <tWndObj.getElement("eco_box_open") <> 0>
  [212] and ..................................... <not tUserCanOpen and (tWndObj.getElement("eco_box_open") <> 0)>
  [213] jmpifz [230] ............................ if not tUserCanOpen and (tWndObj.getElement("eco_box_open") <> 0) then
  [216] getlocal 0 .............................. <tWndObj>
  [218] pushcons 7 .............................. <"eco_box_open">
  [220] pusharglist 2 ........................... <tWndObj, "eco_box_open">
  [222] objcall 458 ............................. <tWndObj.getElement("eco_box_open")>
  [225] pusharglistnoret 1 ...................... <tWndObj.getElement("eco_box_open")>
  [227] objcall 260 ............................. tWndObj.getElement("eco_box_open").hide()
  [230] getlocal 0 .............................. <tWndObj>
  [232] getparam 0 .............................. <me>
  [234] pusharglist 1 ........................... <me>
  [236] objcall 140 ............................. <me.getID()>
  [238] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [240] objcall 504 ............................. tWndObj.registerClient(me.getID())
  [243] getlocal 0 .............................. <tWndObj>
  [245] pushsymb 708 ............................ <#eventProcCard>
  [248] getparam 0 .............................. <me>
  [250] pusharglist 1 ........................... <me>
  [252] objcall 140 ............................. <me.getID()>
  [254] pushsymb 470 ............................ <#mouseUp>
  [257] pusharglistnoret 4 ...................... <tWndObj, #eventProcCard, me.getID(), #mouseUp>
  [259] objcall 225 ............................. tWndObj.registerProcedure(#eventProcCard, me.getID(), #mouseUp)
  [261] getparam 0 .............................. <me>
  [263] pushcons 8 .............................. <"eco_box_card">
  [265] pusharglist 1 ........................... <"eco_box_card">
  [267] extcall 164 ............................. <getText("eco_box_card")>
  [269] pushcons 9 .............................. <"eco_box_text">
  [271] pusharglistnoret 3 ...................... <me, getText("eco_box_card"), "eco_box_text">
  [273] objcall 469 ............................. me.setText(getText("eco_box_card"), "eco_box_text")
  [276] getparam 0 .............................. <me>
  [278] getprop 582 ............................. <pDate>
  [281] pushcons 10 ............................. <"eco_box_date">
  [283] pusharglistnoret 3 ...................... <me, pDate, "eco_box_date">
  [285] objcall 469 ............................. me.setText(pDate, "eco_box_date")
  [288] pushint8 1 .............................. <1>
  [290] pusharglistnoret 1 ...................... <1>
  [292] extcall 14 .............................. return 1
  [294] ret
end

on setText me, tText, tElem
  [  0] getprop 710 ............................. <pCardWndID>
  [  3] pusharglist 1 ........................... <pCardWndID>
  [  5] extcall 457 ............................. <getWindow(pCardWndID)>
  [  8] setlocal 0 .............................. tWndObj = getWindow(pCardWndID)
  [ 10] getlocal 0 .............................. <tWndObj>
  [ 12] not ..................................... <not tWndObj>
  [ 13] jmpifz [ 21] ............................ if not tWndObj then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 14 .............................. return 0
  [ 21] getlocal 0 .............................. <tWndObj>
  [ 23] getparam 2 .............................. <tElem>
  [ 25] pusharglist 2 ........................... <tWndObj, tElem>
  [ 27] objcall 503 ............................. <tWndObj.elementExists(tElem)>
  [ 30] jmpifz [ 49] ............................ if tWndObj.elementExists(tElem) then
  [ 33] getlocal 0 .............................. <tWndObj>
  [ 35] getparam 2 .............................. <tElem>
  [ 37] pusharglist 2 ........................... <tWndObj, tElem>
  [ 39] objcall 458 ............................. <tWndObj.getElement(tElem)>
  [ 42] getparam 1 .............................. <tText>
  [ 44] pusharglistnoret 2 ...................... <tWndObj.getElement(tElem), tText>
  [ 46] objcall 469 ............................. tWndObj.getElement(tElem).setText(tText)
  [ 49] ret
end

on hideCard me
  [  0] getprop 710 ............................. <pCardWndID>
  [  3] pusharglist 1 ........................... <pCardWndID>
  [  5] extcall 448 ............................. <windowExists(pCardWndID)>
  [  8] jmpifz [ 19] ............................ if windowExists(pCardWndID) then
  [ 11] getprop 710 ............................. <pCardWndID>
  [ 14] pusharglistnoret 1 ...................... <pCardWndID>
  [ 16] extcall 449 ............................. removeWindow(pCardWndID)
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglistnoret 1 ...................... <1>
  [ 23] extcall 14 .............................. return 1
  [ 25] ret
end

on openPresent me
  [  0] pushsymb 119 ............................ <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 118 ............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 12] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [ 14] pushcons 11 ............................. <"PRESENTOPEN">
  [ 16] pushsymb 177 ............................ <#integer>
  [ 18] getprop 709 ............................. <pPackageID>
  [ 21] pusharglist 1 ........................... <pPackageID>
  [ 23] extcall 177 ............................. <integer(pPackageID)>
  [ 25] pusharglist 2 ........................... <[#integer: integer(pPackageID)]>
  [ 27] pushproplist ............................ <[#integer: integer(pPackageID)]>
  [ 28] pusharglist 3 ........................... <getThread(#room).getComponent().getRoomConnection(), "PRESENTOPEN", [#integer: integer(pPackageID)]>
  [ 30] objcall 178 ............................. <getThread(#room).getComponent().getRoomConnection().send("PRESENTOPEN", [#integer: integer(pPackageID)])>
  [ 32] pusharglistnoret 1 ...................... <getThread(#room).getComponent().getRoomConnection().send("PRESENTOPEN", [#integer: integer(pPackageID)])>
  [ 34] extcall 14 .............................. return getThread(#room).getComponent().getRoomConnection().send("PRESENTOPEN", [#integer: integer(pPackageID)])
  [ 36] ret
end

on showContent me, tdata
  [  0] getprop 710 ............................. <pCardWndID>
  [  3] pusharglist 1 ........................... <pCardWndID>
  [  5] extcall 448 ............................. <windowExists(pCardWndID)>
  [  8] not ..................................... <not windowExists(pCardWndID)>
  [  9] jmpifz [ 17] ............................ if not windowExists(pCardWndID) then
  [ 12] pushzero ................................ <0>
  [ 13] pusharglistnoret 1 ...................... <0>
  [ 15] extcall 14 .............................. return 0
  [ 17] getparam 1 .............................. <tdata>
  [ 19] pushsymb 127 ............................ <#type>
  [ 21] pusharglist 2 ........................... <tdata, #type>
  [ 23] objcall 50 .............................. <tdata[#type]>
  [ 25] setprop 713 ............................. pIconType = tdata[#type]
  [ 28] getparam 1 .............................. <tdata>
  [ 30] pushsymb 718 ............................ <#code>
  [ 33] pusharglist 2 ........................... <tdata, #code>
  [ 35] objcall 50 .............................. <tdata[#code]>
  [ 37] setprop 714 ............................. pIconCode = tdata[#code]
  [ 40] getparam 1 .............................. <tdata>
  [ 42] pushsymb 295 ............................ <#color>
  [ 45] pusharglist 2 ........................... <tdata, #color>
  [ 47] objcall 50 .............................. <tdata[#color]>
  [ 49] setprop 715 ............................. pIconColor = tdata[#color]
  [ 52] pusharglist 0 ........................... <>
  [ 54] extcall 17 .............................. <VOID>
  [ 56] setlocal 0 .............................. tMemNum = VOID
  [ 58] getprop 715 ............................. <pIconColor>
  [ 61] pushcons 0 .............................. <EMPTY>
  [ 63] eq ...................................... <pIconColor = EMPTY>
  [ 64] jmpifz [ 74] ............................ if pIconColor = EMPTY then
  [ 67] pusharglist 0 ........................... <>
  [ 69] extcall 17 .............................. <VOID>
  [ 71] setprop 715 ............................. pIconColor = VOID
  [ 74] getprop 713 ............................. <pIconType>
  [ 77] peek 0 .................................. case pIconType of
  [ 79] pushcons 12 ............................. <"ticket">
  [ 81] eq
  [ 82] jmpifz [ 96] ............................ (case) "ticket":
  [ 85] pushcons 13 ............................. <"ticket_icon">
  [ 87] pusharglist 1 ........................... <"ticket_icon">
  [ 89] extcall 18 .............................. <getmemnum("ticket_icon")>
  [ 91] setlocal 0 .............................. tMemNum = getmemnum("ticket_icon")
  [ 93] jmp [112]
  [ 96] peek 0
  [ 98] pushcons 14 ............................. <"film">
  [100] eq
  [101] jmpifz [112] ............................ (case) "film":
  [104] pushcons 15 ............................. <"film_icon">
  [106] pusharglist 1 ........................... <"film_icon">
  [108] extcall 18 .............................. <getmemnum("film_icon")>
  [110] setlocal 0 .............................. tMemNum = getmemnum("film_icon")
  [112] pop 1 ................................... end case
  [114] getprop 713 ............................. <pIconType>
  [117] pushcons 16 ............................. <"*">
  [119] containsstr ............................. <pIconType contains "*">
  [120] jmpifz [149] ............................ if pIconType contains "*" then
  [123] getmovieprop 32 ......................... <the itemDelimiter>
  [125] setlocal 1 .............................. tDelim = the itemDelimiter
  [127] pushcons 16 ............................. <"*">
  [129] setmovieprop 32 ......................... the itemDelimiter = "*"
  [131] getprop 713 ............................. <pIconType>
  [134] pushsymb 33 ............................. <#item>
  [136] pushint8 1 .............................. <1>
  [138] pusharglist 3 ........................... <pIconType, #item, 1>
  [140] objcall 25 .............................. <pIconType.item[1]>
  [142] setprop 713 ............................. pIconType = pIconType.item[1]
  [145] getlocal 1 .............................. <tDelim>
  [147] setmovieprop 32 ......................... the itemDelimiter = tDelim
  [149] getprop 714 ............................. <pIconCode>
  [152] pushcons 17 ............................. <"_small">
  [154] joinstr ................................. <pIconCode & "_small">
  [155] pusharglist 1 ........................... <pIconCode & "_small">
  [157] extcall 26 .............................. <memberExists(pIconCode & "_small")>
  [159] jmpifz [177] ............................ if memberExists(pIconCode & "_small") then / else
  [162] getprop 714 ............................. <pIconCode>
  [165] pushcons 17 ............................. <"_small">
  [167] joinstr ................................. <pIconCode & "_small">
  [168] pusharglist 1 ........................... <pIconCode & "_small">
  [170] extcall 18 .............................. <getmemnum(pIconCode & "_small")>
  [172] setlocal 0 .............................. tMemNum = getmemnum(pIconCode & "_small")
  [174] jmp [202]
  [177] pushcons 18 ............................. <"ctlg_pic_small_">
  [179] getprop 714 ............................. <pIconCode>
  [182] joinstr ................................. <"ctlg_pic_small_" & pIconCode>
  [183] pusharglist 1 ........................... <"ctlg_pic_small_" & pIconCode>
  [185] extcall 26 .............................. <memberExists("ctlg_pic_small_" & pIconCode)>
  [187] jmpifz [202] ............................ if memberExists("ctlg_pic_small_" & pIconCode) then
  [190] pushcons 18 ............................. <"ctlg_pic_small_">
  [192] getprop 714 ............................. <pIconCode>
  [195] joinstr ................................. <"ctlg_pic_small_" & pIconCode>
  [196] pusharglist 1 ........................... <"ctlg_pic_small_" & pIconCode>
  [198] extcall 18 .............................. <getmemnum("ctlg_pic_small_" & pIconCode)>
  [200] setlocal 0 .............................. tMemNum = getmemnum("ctlg_pic_small_" & pIconCode)
  [202] getlocal 0 .............................. <tMemNum>
  [204] pushzero ................................ <0>
  [205] eq ...................................... <tMemNum = 0>
  [206] jmpifz [405] ............................ if tMemNum = 0 then / else
  [209] pushsymb 719 ............................ <#dynamicdownloader>
  [212] pusharglist 1 ........................... <#dynamicdownloader>
  [214] extcall 118 ............................. <getThread(#dynamicdownloader)>
  [216] setlocal 2 .............................. tDynThread = getThread(#dynamicdownloader)
  [218] getlocal 2 .............................. <tDynThread>
  [220] pushzero ................................ <0>
  [221] eq ...................................... <tDynThread = 0>
  [222] jmpifz [254] ............................ if tDynThread = 0 then / else
  [225] pushcons 19 ............................. <"Preview_renderer">
  [227] pusharglist 1 ........................... <"Preview_renderer">
  [229] extcall 122 ............................. <getObject("Preview_renderer")>
  [231] pusharglist 0 ........................... <>
  [233] extcall 17 .............................. <VOID>
  [235] pusharglist 0 ........................... <>
  [237] extcall 17 .............................. <VOID>
  [239] getprop 715 ............................. <pIconColor>
  [242] getprop 713 ............................. <pIconType>
  [245] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, VOID, pIconColor, pIconType>
  [247] objcall 5 ............................... <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, pIconColor, pIconType)>
  [249] setlocal 3 .............................. tImg = getObject("Preview_renderer").renderPreviewImage(VOID, VOID, pIconColor, pIconType)
  [251] jmp [402]
  [254] pushcons 0 .............................. <EMPTY>
  [256] setlocal 4 .............................. tDownloadIdName = EMPTY
  [258] getprop 713 ............................. <pIconType>
  [261] pushcons 20 ............................. <"poster">
  [263] containsstr ............................. <pIconType contains "poster">
  [264] jmpifz [275] ............................ if pIconType contains "poster" then / else
  [267] getprop 714 ............................. <pIconCode>
  [270] setlocal 4 .............................. tDownloadIdName = pIconCode
  [272] jmp [280]
  [275] getprop 713 ............................. <pIconType>
  [278] setlocal 4 .............................. tDownloadIdName = pIconType
  [280] getlocal 2 .............................. <tDynThread>
  [282] pusharglist 1 ........................... <tDynThread>
  [284] objcall 138 ............................. <tDynThread.getComponent()>
  [286] setlocal 5 .............................. tDynComponent = tDynThread.getComponent()
  [288] pushcons 0 .............................. <EMPTY>
  [290] setlocal 6 .............................. tRoomSizePrefix = EMPTY
  [292] pushsymb 119 ............................ <#room>
  [294] pusharglist 1 ........................... <#room>
  [296] extcall 118 ............................. <getThread(#room)>
  [298] setlocal 7 .............................. tRoomThread = getThread(#room)
  [300] getlocal 7 .............................. <tRoomThread>
  [302] pushzero ................................ <0>
  [303] nteq .................................... <tRoomThread <> 0>
  [304] jmpifz [336] ............................ if tRoomThread <> 0 then
  [307] getlocal 7 .............................. <tRoomThread>
  [309] pusharglist 1 ........................... <tRoomThread>
  [311] objcall 120 ............................. <tRoomThread.getInterface()>
  [313] pusharglist 1 ........................... <tRoomThread.getInterface()>
  [315] objcall 121 ............................. <tRoomThread.getInterface().getGeometry()>
  [317] pusharglist 1 ........................... <tRoomThread.getInterface().getGeometry()>
  [319] objcall 720 ............................. <tRoomThread.getInterface().getGeometry().getTileWidth()>
  [322] setlocal 8 .............................. tTileSize = tRoomThread.getInterface().getGeometry().getTileWidth()
  [324] getlocal 8 .............................. <tTileSize>
  [326] pushint8 32 ............................. <32>
  [328] eq ...................................... <tTileSize = 32>
  [329] jmpifz [336] ............................ if tTileSize = 32 then
  [332] pushcons 21 ............................. <"s_">
  [334] setlocal 6 .............................. tRoomSizePrefix = "s_"
  [336] getlocal 6 .............................. <tRoomSizePrefix>
  [338] getlocal 4 .............................. <tDownloadIdName>
  [340] joinstr ................................. <tRoomSizePrefix & tDownloadIdName>
  [341] setlocal 4 .............................. tDownloadIdName = tRoomSizePrefix & tDownloadIdName
  [343] getlocal 5 .............................. <tDynComponent>
  [345] getlocal 4 .............................. <tDownloadIdName>
  [347] pusharglist 2 ........................... <tDynComponent, tDownloadIdName>
  [349] objcall 721 ............................. <tDynComponent.isAssetDownloaded(tDownloadIdName)>
  [352] not ..................................... <not tDynComponent.isAssetDownloaded(tDownloadIdName)>
  [353] jmpifz [393] ............................ if not tDynComponent.isAssetDownloaded(tDownloadIdName) then / else
  [356] getlocal 5 .............................. <tDynComponent>
  [358] getlocal 4 .............................. <tDownloadIdName>
  [360] pushsymb 722 ............................ <#unknown>
  [363] getparam 0 .............................. <me>
  [365] pusharglist 1 ........................... <me>
  [367] objcall 140 ............................. <me.getID()>
  [369] pushsymb 706 ............................ <#packetIconDownloadCallback>
  [372] pushint8 1 .............................. <1>
  [374] pusharglistnoret 6 ...................... <tDynComponent, tDownloadIdName, #unknown, me.getID(), #packetIconDownloadCallback, 1>
  [376] objcall 723 ............................. tDynComponent.downloadCastDynamically(tDownloadIdName, #unknown, me.getID(), #packetIconDownloadCallback, 1)
  [379] getprop 712 ............................. <pNoIconPlaceholderName>
  [382] pusharglist 1 ........................... <pNoIconPlaceholderName>
  [384] extcall 19 .............................. <member(pNoIconPlaceholderName)>
  [386] getobjprop 20 ........................... <member(pNoIconPlaceholderName).image>
  [388] setlocal 3 .............................. tImg = member(pNoIconPlaceholderName).image
  [390] jmp [402]
  [393] getparam 0 .............................. <me>
  [395] getlocal 4 .............................. <tDownloadIdName>
  [397] pusharglistnoret 2 ...................... <me, tDownloadIdName>
  [399] objcall 706 ............................. me.packetIconDownloadCallback(tDownloadIdName)
  [402] jmp [420]
  [405] getlocal 0 .............................. <tMemNum>
  [407] pusharglist 1 ........................... <tMemNum>
  [409] extcall 19 .............................. <member(tMemNum)>
  [411] getchainedprop 20 ....................... <member(tMemNum).image>
  [413] pusharglist 1 ........................... <member(tMemNum).image>
  [415] objcall 263 ............................. <member(tMemNum).image.duplicate()>
  [418] setlocal 3 .............................. tImg = member(tMemNum).image.duplicate()
  [420] getparam 0 .............................. <me>
  [422] getlocal 3 .............................. <tImg>
  [424] pusharglistnoret 2 ...................... <me, tImg>
  [426] objcall 707 ............................. me.feedIconToCard(tImg)
  [429] getparam 0 .............................. <me>
  [431] getparam 1 .............................. <tdata>
  [433] pushsymb 160 ............................ <#name>
  [435] pusharglist 2 ........................... <tdata, #name>
  [437] objcall 50 .............................. <tdata[#name]>
  [439] pushcons 9 .............................. <"eco_box_text">
  [441] pusharglistnoret 3 ...................... <me, tdata[#name], "eco_box_text">
  [443] objcall 469 ............................. me.setText(tdata[#name], "eco_box_text")
  [446] ret
end

on packetIconDownloadCallback me, tDownloadedClass
  [  0] getparam 1 .............................. <tDownloadedClass>
  [  2] pushcons 20 ............................. <"poster">
  [  4] containsstr ............................. <tDownloadedClass contains "poster">
  [  5] jmpifz [ 37] ............................ if tDownloadedClass contains "poster" then / else
  [  8] pushcons 19 ............................. <"Preview_renderer">
  [ 10] pusharglist 1 ........................... <"Preview_renderer">
  [ 12] extcall 122 ............................. <getObject("Preview_renderer")>
  [ 14] pusharglist 0 ........................... <>
  [ 16] extcall 17 .............................. <VOID>
  [ 18] pusharglist 0 ........................... <>
  [ 20] extcall 17 .............................. <VOID>
  [ 22] getprop 715 ............................. <pIconColor>
  [ 25] getprop 714 ............................. <pIconCode>
  [ 28] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, VOID, pIconColor, pIconCode>
  [ 30] objcall 5 ............................... <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, pIconColor, pIconCode)>
  [ 32] setlocal 0 .............................. tImg = getObject("Preview_renderer").renderPreviewImage(VOID, VOID, pIconColor, pIconCode)
  [ 34] jmp [ 63]
  [ 37] pushcons 19 ............................. <"Preview_renderer">
  [ 39] pusharglist 1 ........................... <"Preview_renderer">
  [ 41] extcall 122 ............................. <getObject("Preview_renderer")>
  [ 43] pusharglist 0 ........................... <>
  [ 45] extcall 17 .............................. <VOID>
  [ 47] pusharglist 0 ........................... <>
  [ 49] extcall 17 .............................. <VOID>
  [ 51] getprop 715 ............................. <pIconColor>
  [ 54] getprop 713 ............................. <pIconType>
  [ 57] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, VOID, pIconColor, pIconType>
  [ 59] objcall 5 ............................... <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, pIconColor, pIconType)>
  [ 61] setlocal 0 .............................. tImg = getObject("Preview_renderer").renderPreviewImage(VOID, VOID, pIconColor, pIconType)
  [ 63] getparam 0 .............................. <me>
  [ 65] getlocal 0 .............................. <tImg>
  [ 67] pusharglistnoret 2 ...................... <me, tImg>
  [ 69] objcall 707 ............................. me.feedIconToCard(tImg)
  [ 72] ret
end

on feedIconToCard me, tImg
  [  0] getparam 1 .............................. <tImg>
  [  2] pusharglist 1 ........................... <tImg>
  [  4] extcall 42 .............................. <ilk(tImg)>
  [  6] pushsymb 20 ............................. <#image>
  [  8] nteq .................................... <ilk(tImg) <> #image>
  [  9] jmpifz [ 29] ............................ if ilk(tImg) <> #image then
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 22 ............................. <"tImg is not an #image">
  [ 16] pushsymb 707 ............................ <#feedIconToCard>
  [ 19] pushsymb 62 ............................. <#minor>
  [ 21] pusharglist 4 ........................... <me, "tImg is not an #image", #feedIconToCard, #minor>
  [ 23] extcall 61 .............................. <error(me, "tImg is not an #image", #feedIconToCard, #minor)>
  [ 25] pusharglistnoret 1 ...................... <error(me, "tImg is not an #image", #feedIconToCard, #minor)>
  [ 27] extcall 14 .............................. return error(me, "tImg is not an #image", #feedIconToCard, #minor)
  [ 29] getprop 710 ............................. <pCardWndID>
  [ 32] pusharglist 1 ........................... <pCardWndID>
  [ 34] extcall 457 ............................. <getWindow(pCardWndID)>
  [ 37] setlocal 0 .............................. tWndObj = getWindow(pCardWndID)
  [ 39] getlocal 0 .............................. <tWndObj>
  [ 41] pushzero ................................ <0>
  [ 42] eq ...................................... <tWndObj = 0>
  [ 43] jmpifz [ 75] ............................ if tWndObj = 0 then
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglistnoret 1 ...................... <me>
  [ 50] objcall 699 ............................. me.showCard()
  [ 53] getprop 710 ............................. <pCardWndID>
  [ 56] pusharglist 1 ........................... <pCardWndID>
  [ 58] extcall 457 ............................. <getWindow(pCardWndID)>
  [ 61] setlocal 0 .............................. tWndObj = getWindow(pCardWndID)
  [ 63] getlocal 0 .............................. <tWndObj>
  [ 65] pushzero ................................ <0>
  [ 66] eq ...................................... <tWndObj = 0>
  [ 67] jmpifz [ 75] ............................ if tWndObj = 0 then
  [ 70] pushzero ................................ <0>
  [ 71] pusharglistnoret 1 ...................... <0>
  [ 73] extcall 14 .............................. return 0
  [ 75] getlocal 0 .............................. <tWndObj>
  [ 77] pushcons 23 ............................. <"eco_box_preview">
  [ 79] pusharglist 2 ........................... <tWndObj, "eco_box_preview">
  [ 81] objcall 458 ............................. <tWndObj.getElement("eco_box_preview")>
  [ 84] setlocal 1 .............................. tElem = tWndObj.getElement("eco_box_preview")
  [ 86] getlocal 1 .............................. <tElem>
  [ 88] pushzero ................................ <0>
  [ 89] eq ...................................... <tElem = 0>
  [ 90] jmpifz [ 98] ............................ if tElem = 0 then
  [ 93] pushzero ................................ <0>
  [ 94] pusharglistnoret 1 ...................... <0>
  [ 96] extcall 14 .............................. return 0
  [ 98] getlocal 1 .............................. <tElem>
  [100] pushsymb 47 ............................. <#width>
  [102] pusharglist 2 ........................... <tElem, #width>
  [104] objcall 304 ............................. <tElem.getProperty(#width)>
  [107] setlocal 2 .............................. tWid = tElem.getProperty(#width)
  [109] getlocal 1 .............................. <tElem>
  [111] pushsymb 48 ............................. <#height>
  [113] pusharglist 2 ........................... <tElem, #height>
  [115] objcall 304 ............................. <tElem.getProperty(#height)>
  [118] setlocal 3 .............................. tHei = tElem.getProperty(#height)
  [120] getlocal 2 .............................. <tWid>
  [122] getlocal 3 .............................. <tHei>
  [124] pushint8 32 ............................. <32>
  [126] pusharglist 3 ........................... <tWid, tHei, 32>
  [128] extcall 20 .............................. <image(tWid, tHei, 32)>
  [130] setlocal 4 .............................. tCenteredImage = image(tWid, tHei, 32)
  [132] getparam 1 .............................. <tImg>
  [134] pusharglist 1 ........................... <tImg>
  [136] objcall 64 .............................. <tImg.createMatte()>
  [138] setlocal 5 .............................. tMatte = tImg.createMatte()
  [140] getlocal 4 .............................. <tCenteredImage>
  [142] getobjprop 47 ........................... <tCenteredImage.width>
  [144] getparam 1 .............................. <tImg>
  [146] getobjprop 47 ........................... <tImg.width>
  [148] sub ..................................... <tCenteredImage.width - tImg.width>
  [149] pushint8 2 .............................. <2>
  [151] div ..................................... <(tCenteredImage.width - tImg.width) / 2>
  [152] setlocal 6 .............................. tXchange = (tCenteredImage.width - tImg.width) / 2
  [154] getlocal 4 .............................. <tCenteredImage>
  [156] getobjprop 48 ........................... <tCenteredImage.height>
  [158] getparam 1 .............................. <tImg>
  [160] getobjprop 48 ........................... <tImg.height>
  [162] sub ..................................... <tCenteredImage.height - tImg.height>
  [163] pushint8 2 .............................. <2>
  [165] div ..................................... <(tCenteredImage.height - tImg.height) / 2>
  [166] setlocal 7 .............................. tYchange = (tCenteredImage.height - tImg.height) / 2
  [168] getparam 1 .............................. <tImg>
  [170] getobjprop 44 ........................... <tImg.rect>
  [172] getlocal 6 .............................. <tXchange>
  [174] getlocal 7 .............................. <tYchange>
  [176] getlocal 6 .............................. <tXchange>
  [178] getlocal 7 .............................. <tYchange>
  [180] pusharglist 4 ........................... <tXchange, tYchange, tXchange, tYchange>
  [182] extcall 44 .............................. <rect(tXchange, tYchange, tXchange, tYchange)>
  [184] add ..................................... <tImg.rect + rect(tXchange, tYchange, tXchange, tYchange)>
  [185] setlocal 8 .............................. tRect1 = tImg.rect + rect(tXchange, tYchange, tXchange, tYchange)
  [187] getlocal 4 .............................. <tCenteredImage>
  [189] getparam 1 .............................. <tImg>
  [191] getlocal 8 .............................. <tRect1>
  [193] getparam 1 .............................. <tImg>
  [195] getobjprop 44 ........................... <tImg.rect>
  [197] pushsymb 68 ............................. <#maskImage>
  [199] getlocal 5 .............................. <tMatte>
  [201] pushsymb 66 ............................. <#ink>
  [203] pushint8 41 ............................. <41>
  [205] pusharglist 4 ........................... <[#maskImage: tMatte, #ink: 41]>
  [207] pushproplist ............................ <[#maskImage: tMatte, #ink: 41]>
  [208] pusharglistnoret 5 ...................... <tCenteredImage, tImg, tRect1, tImg.rect, [#maskImage: tMatte, #ink: 41]>
  [210] objcall 49 .............................. tCenteredImage.copyPixels(tImg, tRect1, tImg.rect, [#maskImage: tMatte, #ink: 41])
  [212] getlocal 1 .............................. <tElem>
  [214] getlocal 4 .............................. <tCenteredImage>
  [216] pusharglistnoret 2 ...................... <tElem, tCenteredImage>
  [218] objcall 730 ............................. tElem.feedImage(tCenteredImage)
  [221] getlocal 0 .............................. <tWndObj>
  [223] pushcons 7 .............................. <"eco_box_open">
  [225] pusharglist 2 ........................... <tWndObj, "eco_box_open">
  [227] objcall 458 ............................. <tWndObj.getElement("eco_box_open")>
  [230] pusharglistnoret 1 ...................... <tWndObj.getElement("eco_box_open")>
  [232] objcall 260 ............................. tWndObj.getElement("eco_box_open").hide()
  [235] ret
end

on eventProcCard me, tEvent, tElemID, tParam
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 470 ............................ <#mouseUp>
  [  5] nteq .................................... <tEvent <> #mouseUp>
  [  6] jmpifz [ 14] ............................ if tEvent <> #mouseUp then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 14 .............................. return 0
  [ 14] getparam 2 .............................. <tElemID>
  [ 16] peek 0 .................................. case tElemID of
  [ 18] pushcons 24 ............................. <"eco_box_close">
  [ 20] eq
  [ 21] jmpifz [ 40] ............................ (case) "eco_box_close":
  [ 24] pop 1
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 703 ............................. <me.hideCard()>
  [ 33] pusharglistnoret 1 ...................... <me.hideCard()>
  [ 35] extcall 14 .............................. return me.hideCard()
  [ 37] jmp [ 61]
  [ 40] peek 0
  [ 42] pushcons 7 .............................. <"eco_box_open">
  [ 44] eq
  [ 45] jmpifz [ 61] ............................ (case) "eco_box_open":
  [ 48] pop 1
  [ 50] getparam 0 .............................. <me>
  [ 52] pusharglist 1 ........................... <me>
  [ 54] objcall 704 ............................. <me.openPresent()>
  [ 57] pusharglistnoret 1 ...................... <me.openPresent()>
  [ 59] extcall 14 .............................. return me.openPresent()
  [ 61] pop 1 ................................... end case
  [ 63] ret
end
