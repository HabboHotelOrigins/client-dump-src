property pActive, pSync, pAnimFrame, pLastDir, pUserClicked

on prepare me, tdata
  [  0] pushzero ................................ <0>
  [  1] setprop 611 ............................. pUserClicked = 0
  [  4] pushint8 1 .............................. <1>
  [  6] inv ..................................... <-1>
  [  7] setprop 612 ............................. pLastDir = -1
  [ 10] pushzero ................................ <0>
  [ 11] setprop 613 ............................. pSync = 0
  [ 14] pushint8 1 .............................. <1>
  [ 16] pusharglistnoret 1 ...................... <1>
  [ 18] extcall 14 .............................. return 1
  [ 20] ret
end

on updateStuffdata me, tValue
  [  0] getparam 1 .............................. <tValue>
  [  2] pusharglist 1 ........................... <tValue>
  [  4] extcall 177 ............................. <integer(tValue)>
  [  6] setparam 1 .............................. tValue = integer(tValue)
  [  8] getparam 1 .............................. <tValue>
  [ 10] pushzero ................................ <0>
  [ 11] nteq .................................... <tValue <> 0>
  [ 12] jmpifz [ 27] ............................ if tValue <> 0 then / else
  [ 15] pushint8 1 .............................. <1>
  [ 17] setprop 111 ............................. pAnimFrame = 1
  [ 19] pushint8 1 .............................. <1>
  [ 21] setprop 487 ............................. pActive = 1
  [ 24] jmp [ 45]
  [ 27] getparam 0 .............................. <me>
  [ 29] pushcons 0 .............................. <"d">
  [ 31] pushcons 1 .............................. <"0">
  [ 33] pusharglistnoret 3 ...................... <me, "d", "0">
  [ 35] objcall 609 ............................. me.switchMember("d", "0")
  [ 38] pushzero ................................ <0>
  [ 39] setprop 111 ............................. pAnimFrame = 0
  [ 41] pushzero ................................ <0>
  [ 42] setprop 487 ............................. pActive = 0
  [ 45] ret
end

on update me
  [  0] getprop 487 ............................. <pActive>
  [  3] jmpifz [255] ............................ if pActive then
  [  6] getprop 613 ............................. <pSync>
  [  9] pushint8 1 .............................. <1>
  [ 11] add ..................................... <pSync + 1>
  [ 12] setprop 613 ............................. pSync = pSync + 1
  [ 15] getprop 613 ............................. <pSync>
  [ 18] pushint8 3 .............................. <3>
  [ 20] lt ...................................... <pSync < 3>
  [ 21] jmpifz [ 30] ............................ if pSync < 3 then
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 14 .............................. return 1
  [ 30] pushzero ................................ <0>
  [ 31] setprop 613 ............................. pSync = 0
  [ 34] getparam 0 .............................. <me>
  [ 36] pushsymb 105 ............................ <#pSprList>
  [ 38] pusharglist 2 ........................... <me, #pSprList>
  [ 40] objcall 34 .............................. <me.pSprList.count>
  [ 42] pushint8 5 .............................. <5>
  [ 44] lt ...................................... <me.pSprList.count < 5>
  [ 45] jmpifz [ 53] ............................ if me.pSprList.count < 5 then
  [ 48] pushzero ................................ <0>
  [ 49] pusharglistnoret 1 ...................... <0>
  [ 51] extcall 14 .............................. return 0
  [ 53] getprop 111 ............................. <pAnimFrame>
  [ 55] pushzero ................................ <0>
  [ 56] gt ...................................... <pAnimFrame > 0>
  [ 57] jmpifz [255] ............................ if pAnimFrame > 0 then
  [ 60] getprop 111 ............................. <pAnimFrame>
  [ 62] peek 0 .................................. case pAnimFrame of
  [ 64] pushint8 1 .............................. <1>
  [ 66] eq
  [ 67] jmpifz [ 84] ............................ (case) 1:
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 2 .............................. <"a">
  [ 74] pushcons 3 .............................. <"1">
  [ 76] pusharglistnoret 3 ...................... <me, "a", "1">
  [ 78] objcall 609 ............................. me.switchMember("a", "1")
  [ 81] jmp [246]
  [ 84] peek 0
  [ 86] pushint8 2 .............................. <2>
  [ 88] eq
  [ 89] jmpifz [106] ............................ (case) 2:
  [ 92] getparam 0 .............................. <me>
  [ 94] pushcons 0 .............................. <"d">
  [ 96] pushcons 3 .............................. <"1">
  [ 98] pusharglistnoret 3 ...................... <me, "d", "1">
  [100] objcall 609 ............................. me.switchMember("d", "1")
  [103] jmp [246]
  [106] peek 0
  [108] pushint8 3 .............................. <3>
  [110] eq
  [111] jmpifz [128] ............................ (case) 3:
  [114] getparam 0 .............................. <me>
  [116] pushcons 0 .............................. <"d">
  [118] pushcons 4 .............................. <"2">
  [120] pusharglistnoret 3 ...................... <me, "d", "2">
  [122] objcall 609 ............................. me.switchMember("d", "2")
  [125] jmp [246]
  [128] peek 0
  [130] pushint8 4 .............................. <4>
  [132] eq
  [133] jmpifz [150] ............................ (case) 4:
  [136] getparam 0 .............................. <me>
  [138] pushcons 0 .............................. <"d">
  [140] pushcons 5 .............................. <"3">
  [142] pusharglistnoret 3 ...................... <me, "d", "3">
  [144] objcall 609 ............................. me.switchMember("d", "3")
  [147] jmp [246]
  [150] peek 0
  [152] pushint8 5 .............................. <5>
  [154] eq
  [155] jmpifz [172] ............................ (case) 5:
  [158] getparam 0 .............................. <me>
  [160] pushcons 0 .............................. <"d">
  [162] pushcons 6 .............................. <"4">
  [164] pusharglistnoret 3 ...................... <me, "d", "4">
  [166] objcall 609 ............................. me.switchMember("d", "4")
  [169] jmp [246]
  [172] peek 0
  [174] pushint8 6 .............................. <6>
  [176] eq
  [177] jmpifz [194] ............................ (case) 6:
  [180] getparam 0 .............................. <me>
  [182] pushcons 0 .............................. <"d">
  [184] pushcons 7 .............................. <"5">
  [186] pusharglistnoret 3 ...................... <me, "d", "5">
  [188] objcall 609 ............................. me.switchMember("d", "5")
  [191] jmp [246]
  [194] peek 0
  [196] pushint8 7 .............................. <7>
  [198] eq
  [199] jmpifz [216] ............................ (case) 7:
  [202] getparam 0 .............................. <me>
  [204] pushcons 2 .............................. <"a">
  [206] pushcons 1 .............................. <"0">
  [208] pusharglistnoret 3 ...................... <me, "a", "0">
  [210] objcall 609 ............................. me.switchMember("a", "0")
  [213] jmp [246]
  [216] peek 0
  [218] pushint8 8 .............................. <8>
  [220] eq
  [221] jmpifz [227] ............................ (case) 8:
  [224] jmp [246]
  [227] peek 0
  [229] pushint8 9 .............................. <9>
  [231] eq
  [232] jmpifz [246] ............................ (case) 9:
  [235] getparam 0 .............................. <me>
  [237] pushcons 0 .............................. <"d">
  [239] pushcons 8 .............................. <"6">
  [241] pusharglistnoret 3 ...................... <me, "d", "6">
  [243] objcall 609 ............................. me.switchMember("d", "6")
  [246] pop 1 ................................... end case
  [248] getprop 111 ............................. <pAnimFrame>
  [250] pushint8 1 .............................. <1>
  [252] add ..................................... <pAnimFrame + 1>
  [253] setprop 111 ............................. pAnimFrame = pAnimFrame + 1
  [255] ret
end

on switchMember me, tPart, tNewMem
  [  0] pushcons 2 .............................. <"a">
  [  2] pushcons 9 .............................. <"b">
  [  4] pushcons 10 ............................. <"c">
  [  6] pushcons 0 .............................. <"d">
  [  8] pushcons 11 ............................. <"e">
  [ 10] pushcons 12 ............................. <"f">
  [ 12] pusharglist 6 ........................... <["a", "b", "c", "d", "e", "f"]>
  [ 14] pushlist ................................ <["a", "b", "c", "d", "e", "f"]>
  [ 15] getparam 1 .............................. <tPart>
  [ 17] pusharglist 2 ........................... <["a", "b", "c", "d", "e", "f"], tPart>
  [ 19] objcall 614 ............................. <["a", "b", "c", "d", "e", "f"].getPos(tPart)>
  [ 22] setlocal 0 .............................. tSprNum = ["a", "b", "c", "d", "e", "f"].getPos(tPart)
  [ 24] getparam 0 .............................. <me>
  [ 26] pushsymb 105 ............................ <#pSprList>
  [ 28] pusharglist 2 ........................... <me, #pSprList>
  [ 30] objcall 34 .............................. <me.pSprList.count>
  [ 32] getlocal 0 .............................. <tSprNum>
  [ 34] lt ...................................... <me.pSprList.count < tSprNum>
  [ 35] getlocal 0 .............................. <tSprNum>
  [ 37] pushzero ................................ <0>
  [ 38] eq ...................................... <tSprNum = 0>
  [ 39] or ...................................... <(me.pSprList.count < tSprNum) or (tSprNum = 0)>
  [ 40] jmpifz [ 48] ............................ if (me.pSprList.count < tSprNum) or (tSprNum = 0) then
  [ 43] pushzero ................................ <0>
  [ 44] pusharglistnoret 1 ...................... <0>
  [ 46] extcall 14 .............................. return 0
  [ 48] getparam 0 .............................. <me>
  [ 50] pushsymb 105 ............................ <#pSprList>
  [ 52] getlocal 0 .............................. <tSprNum>
  [ 54] pusharglist 3 ........................... <me, #pSprList, tSprNum>
  [ 56] objcall 381 ............................. <me.pSprList[tSprNum]>
  [ 59] getchainedprop 19 ....................... <me.pSprList[tSprNum].member>
  [ 61] getobjprop 160 .......................... <me.pSprList[tSprNum].member.name>
  [ 63] setlocal 1 .............................. tName = me.pSprList[tSprNum].member.name
  [ 65] getlocal 1 .............................. <tName>
  [ 67] pushsymb 23 ............................. <#char>
  [ 69] pushint8 1 .............................. <1>
  [ 71] getlocal 1 .............................. <tName>
  [ 73] getobjprop 287 .......................... <tName.length>
  [ 76] pushint8 1 .............................. <1>
  [ 78] sub ..................................... <tName.length - 1>
  [ 79] pusharglist 4 ........................... <tName, #char, 1, tName.length - 1>
  [ 81] objcall 25 .............................. <tName.char[1..tName.length - 1]>
  [ 83] getparam 2 .............................. <tNewMem>
  [ 85] joinstr ................................. <tName.char[1..tName.length - 1] & tNewMem>
  [ 86] setlocal 1 .............................. tName = tName.char[1..tName.length - 1] & tNewMem
  [ 88] getlocal 1 .............................. <tName>
  [ 90] pusharglist 1 ........................... <tName>
  [ 92] extcall 26 .............................. <memberExists(tName)>
  [ 94] jmpifz [161] ............................ if memberExists(tName) then
  [ 97] getlocal 1 .............................. <tName>
  [ 99] pusharglist 1 ........................... <tName>
  [101] extcall 18 .............................. <getmemnum(tName)>
  [103] pusharglist 1 ........................... <getmemnum(tName)>
  [105] extcall 19 .............................. <member(getmemnum(tName))>
  [107] setlocal 2 .............................. tmember = member(getmemnum(tName))
  [109] getparam 0 .............................. <me>
  [111] pushsymb 105 ............................ <#pSprList>
  [113] getlocal 0 .............................. <tSprNum>
  [115] pusharglist 3 ........................... <me, #pSprList, tSprNum>
  [117] objcall 381 ............................. <me.pSprList[tSprNum]>
  [120] getlocal 2 .............................. <tmember>
  [122] getobjprop 490 .......................... <tmember.number>
  [125] setobjprop 233 .......................... me.pSprList[tSprNum].castNum = tmember.number
  [127] getparam 0 .............................. <me>
  [129] pushsymb 105 ............................ <#pSprList>
  [131] getlocal 0 .............................. <tSprNum>
  [133] pusharglist 3 ........................... <me, #pSprList, tSprNum>
  [135] objcall 381 ............................. <me.pSprList[tSprNum]>
  [138] getlocal 2 .............................. <tmember>
  [140] getobjprop 47 ........................... <tmember.width>
  [142] setobjprop 47 ........................... me.pSprList[tSprNum].width = tmember.width
  [144] getparam 0 .............................. <me>
  [146] pushsymb 105 ............................ <#pSprList>
  [148] getlocal 0 .............................. <tSprNum>
  [150] pusharglist 3 ........................... <me, #pSprList, tSprNum>
  [152] objcall 381 ............................. <me.pSprList[tSprNum]>
  [155] getlocal 2 .............................. <tmember>
  [157] getobjprop 48 ........................... <tmember.height>
  [159] setobjprop 48 ........................... me.pSprList[tSprNum].height = tmember.height
  [161] ret
end

on select me
  [  0] pushsymb 119 ............................ <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 118 ............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 12] objcall 528 ............................. <getThread(#room).getComponent().getOwnUser()>
  [ 15] setlocal 0 .............................. tUserObj = getThread(#room).getComponent().getOwnUser()
  [ 17] getlocal 0 .............................. <tUserObj>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <tUserObj = 0>
  [ 21] jmpifz [ 30] ............................ if tUserObj = 0 then
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 14 .............................. return 1
  [ 30] getlocal 0 .............................. <tUserObj>
  [ 32] pushsymb 616 ............................ <#carrying>
  [ 35] pusharglist 2 ........................... <tUserObj, #carrying>
  [ 37] objcall 304 ............................. <tUserObj.getProperty(#carrying)>
  [ 40] setlocal 1 .............................. tCarrying = tUserObj.getProperty(#carrying)
  [ 42] getlocal 0 .............................. <tUserObj>
  [ 44] pushsymb 253 ............................ <#loc>
  [ 46] pusharglist 2 ........................... <tUserObj, #loc>
  [ 48] objcall 304 ............................. <tUserObj.getProperty(#loc)>
  [ 51] setlocal 2 .............................. tloc = tUserObj.getProperty(#loc)
  [ 53] getlocal 2 .............................. <tloc>
  [ 55] pushint8 1 .............................. <1>
  [ 57] pusharglist 2 ........................... <tloc, 1>
  [ 59] objcall 50 .............................. <tloc[1]>
  [ 61] setlocal 3 .............................. tLocX = tloc[1]
  [ 63] getlocal 2 .............................. <tloc>
  [ 65] pushint8 2 .............................. <2>
  [ 67] pusharglist 2 ........................... <tloc, 2>
  [ 69] objcall 50 .............................. <tloc[2]>
  [ 71] setlocal 4 .............................. tLocY = tloc[2]
  [ 73] getparam 0 .............................. <me>
  [ 75] pushsymb 106 ............................ <#pDirection>
  [ 77] pushint8 1 .............................. <1>
  [ 79] pusharglist 3 ........................... <me, #pDirection, 1>
  [ 81] objcall 25 .............................. <me.pDirection[1]>
  [ 83] peek 0 .................................. case me.pDirection[1] of
  [ 85] pushint8 4 .............................. <4>
  [ 87] eq
  [ 88] jmpifz [176] ............................ (case) 4:
  [ 91] getparam 0 .............................. <me>
  [ 93] getobjprop 112 .......................... <me.pLocX>
  [ 95] getlocal 3 .............................. <tLocX>
  [ 97] eq ...................................... <me.pLocX = tLocX>
  [ 98] getparam 0 .............................. <me>
  [100] getobjprop 113 .......................... <me.pLocY>
  [102] getlocal 4 .............................. <tLocY>
  [104] sub ..................................... <me.pLocY - tLocY>
  [105] pushint8 1 .............................. <1>
  [107] inv ..................................... <-1>
  [108] eq ...................................... <(me.pLocY - tLocY) = -1>
  [109] and ..................................... <(me.pLocX = tLocX) and ((me.pLocY - tLocY) = -1)>
  [110] jmpifz [135] ............................ if (me.pLocX = tLocX) and ((me.pLocY - tLocY) = -1) then / else
  [113] pusharglist 0 ........................... <>
  [115] thebuiltin 376 .......................... <the doubleClick>
  [118] getlocal 1 .............................. <tCarrying>
  [120] not ..................................... <not tCarrying>
  [121] and ..................................... <the doubleClick and not tCarrying>
  [122] jmpifz [132] ............................ if the doubleClick and not tCarrying then
  [125] getparam 0 .............................. <me>
  [127] pusharglistnoret 1 ...................... <me>
  [129] objcall 610 ............................. me.setAnimation()
  [132] jmp [173]
  [135] pushsymb 119 ............................ <#room>
  [137] pusharglist 1 ........................... <#room>
  [139] extcall 118 ............................. <getThread(#room)>
  [141] pusharglist 1 ........................... <getThread(#room)>
  [143] objcall 138 ............................. <getThread(#room).getComponent()>
  [145] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [147] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [149] pushcons 13 ............................. <"MOVE">
  [151] pushsymb 177 ............................ <#integer>
  [153] getparam 0 .............................. <me>
  [155] getobjprop 112 .......................... <me.pLocX>
  [157] pushsymb 177 ............................ <#integer>
  [159] getparam 0 .............................. <me>
  [161] getobjprop 113 .......................... <me.pLocY>
  [163] pushint8 1 .............................. <1>
  [165] add ..................................... <me.pLocY + 1>
  [166] pusharglist 4 ........................... <[#integer: me.pLocX, #integer: me.pLocY + 1]>
  [168] pushproplist ............................ <[#integer: me.pLocX, #integer: me.pLocY + 1]>
  [169] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#integer: me.pLocX, #integer: me.pLocY + 1]>
  [171] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#integer: me.pLocX, #integer: me.pLocY + 1])
  [173] jmp [449]
  [176] peek 0
  [178] pushzero ................................ <0>
  [179] eq
  [180] jmpifz [267] ............................ (case) 0:
  [183] getparam 0 .............................. <me>
  [185] getobjprop 112 .......................... <me.pLocX>
  [187] getlocal 3 .............................. <tLocX>
  [189] eq ...................................... <me.pLocX = tLocX>
  [190] getparam 0 .............................. <me>
  [192] getobjprop 113 .......................... <me.pLocY>
  [194] getlocal 4 .............................. <tLocY>
  [196] sub ..................................... <me.pLocY - tLocY>
  [197] pushint8 1 .............................. <1>
  [199] eq ...................................... <(me.pLocY - tLocY) = 1>
  [200] and ..................................... <(me.pLocX = tLocX) and ((me.pLocY - tLocY) = 1)>
  [201] jmpifz [226] ............................ if (me.pLocX = tLocX) and ((me.pLocY - tLocY) = 1) then / else
  [204] pusharglist 0 ........................... <>
  [206] thebuiltin 376 .......................... <the doubleClick>
  [209] getlocal 1 .............................. <tCarrying>
  [211] not ..................................... <not tCarrying>
  [212] and ..................................... <the doubleClick and not tCarrying>
  [213] jmpifz [223] ............................ if the doubleClick and not tCarrying then
  [216] getparam 0 .............................. <me>
  [218] pusharglistnoret 1 ...................... <me>
  [220] objcall 610 ............................. me.setAnimation()
  [223] jmp [264]
  [226] pushsymb 119 ............................ <#room>
  [228] pusharglist 1 ........................... <#room>
  [230] extcall 118 ............................. <getThread(#room)>
  [232] pusharglist 1 ........................... <getThread(#room)>
  [234] objcall 138 ............................. <getThread(#room).getComponent()>
  [236] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [238] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [240] pushcons 13 ............................. <"MOVE">
  [242] pushsymb 177 ............................ <#integer>
  [244] getparam 0 .............................. <me>
  [246] getobjprop 112 .......................... <me.pLocX>
  [248] pushsymb 177 ............................ <#integer>
  [250] getparam 0 .............................. <me>
  [252] getobjprop 113 .......................... <me.pLocY>
  [254] pushint8 1 .............................. <1>
  [256] sub ..................................... <me.pLocY - 1>
  [257] pusharglist 4 ........................... <[#integer: me.pLocX, #integer: me.pLocY - 1]>
  [259] pushproplist ............................ <[#integer: me.pLocX, #integer: me.pLocY - 1]>
  [260] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#integer: me.pLocX, #integer: me.pLocY - 1]>
  [262] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#integer: me.pLocX, #integer: me.pLocY - 1])
  [264] jmp [449]
  [267] peek 0
  [269] pushint8 2 .............................. <2>
  [271] eq
  [272] jmpifz [360] ............................ (case) 2:
  [275] getparam 0 .............................. <me>
  [277] getobjprop 113 .......................... <me.pLocY>
  [279] getlocal 4 .............................. <tLocY>
  [281] eq ...................................... <me.pLocY = tLocY>
  [282] getparam 0 .............................. <me>
  [284] getobjprop 112 .......................... <me.pLocX>
  [286] getlocal 3 .............................. <tLocX>
  [288] sub ..................................... <me.pLocX - tLocX>
  [289] pushint8 1 .............................. <1>
  [291] inv ..................................... <-1>
  [292] eq ...................................... <(me.pLocX - tLocX) = -1>
  [293] and ..................................... <(me.pLocY = tLocY) and ((me.pLocX - tLocX) = -1)>
  [294] jmpifz [319] ............................ if (me.pLocY = tLocY) and ((me.pLocX - tLocX) = -1) then / else
  [297] pusharglist 0 ........................... <>
  [299] thebuiltin 376 .......................... <the doubleClick>
  [302] getlocal 1 .............................. <tCarrying>
  [304] not ..................................... <not tCarrying>
  [305] and ..................................... <the doubleClick and not tCarrying>
  [306] jmpifz [316] ............................ if the doubleClick and not tCarrying then
  [309] getparam 0 .............................. <me>
  [311] pusharglistnoret 1 ...................... <me>
  [313] objcall 610 ............................. me.setAnimation()
  [316] jmp [357]
  [319] pushsymb 119 ............................ <#room>
  [321] pusharglist 1 ........................... <#room>
  [323] extcall 118 ............................. <getThread(#room)>
  [325] pusharglist 1 ........................... <getThread(#room)>
  [327] objcall 138 ............................. <getThread(#room).getComponent()>
  [329] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [331] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [333] pushcons 13 ............................. <"MOVE">
  [335] pushsymb 177 ............................ <#integer>
  [337] getparam 0 .............................. <me>
  [339] getobjprop 112 .......................... <me.pLocX>
  [341] pushint8 1 .............................. <1>
  [343] add ..................................... <me.pLocX + 1>
  [344] pushsymb 177 ............................ <#integer>
  [346] getparam 0 .............................. <me>
  [348] getobjprop 113 .......................... <me.pLocY>
  [350] pusharglist 4 ........................... <[#integer: me.pLocX + 1, #integer: me.pLocY]>
  [352] pushproplist ............................ <[#integer: me.pLocX + 1, #integer: me.pLocY]>
  [353] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#integer: me.pLocX + 1, #integer: me.pLocY]>
  [355] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#integer: me.pLocX + 1, #integer: me.pLocY])
  [357] jmp [449]
  [360] peek 0
  [362] pushint8 6 .............................. <6>
  [364] eq
  [365] jmpifz [449] ............................ (case) 6:
  [368] getparam 0 .............................. <me>
  [370] getobjprop 113 .......................... <me.pLocY>
  [372] getlocal 4 .............................. <tLocY>
  [374] eq ...................................... <me.pLocY = tLocY>
  [375] getparam 0 .............................. <me>
  [377] getobjprop 112 .......................... <me.pLocX>
  [379] getlocal 3 .............................. <tLocX>
  [381] sub ..................................... <me.pLocX - tLocX>
  [382] pushint8 1 .............................. <1>
  [384] eq ...................................... <(me.pLocX - tLocX) = 1>
  [385] and ..................................... <(me.pLocY = tLocY) and ((me.pLocX - tLocX) = 1)>
  [386] jmpifz [411] ............................ if (me.pLocY = tLocY) and ((me.pLocX - tLocX) = 1) then / else
  [389] pusharglist 0 ........................... <>
  [391] thebuiltin 376 .......................... <the doubleClick>
  [394] getlocal 1 .............................. <tCarrying>
  [396] not ..................................... <not tCarrying>
  [397] and ..................................... <the doubleClick and not tCarrying>
  [398] jmpifz [408] ............................ if the doubleClick and not tCarrying then
  [401] getparam 0 .............................. <me>
  [403] pusharglistnoret 1 ...................... <me>
  [405] objcall 610 ............................. me.setAnimation()
  [408] jmp [449]
  [411] pushsymb 119 ............................ <#room>
  [413] pusharglist 1 ........................... <#room>
  [415] extcall 118 ............................. <getThread(#room)>
  [417] pusharglist 1 ........................... <getThread(#room)>
  [419] objcall 138 ............................. <getThread(#room).getComponent()>
  [421] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [423] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [425] pushcons 13 ............................. <"MOVE">
  [427] pushsymb 177 ............................ <#integer>
  [429] getparam 0 .............................. <me>
  [431] getobjprop 112 .......................... <me.pLocX>
  [433] pushint8 1 .............................. <1>
  [435] sub ..................................... <me.pLocX - 1>
  [436] pushsymb 177 ............................ <#integer>
  [438] getparam 0 .............................. <me>
  [440] getobjprop 113 .......................... <me.pLocY>
  [442] pusharglist 4 ........................... <[#integer: me.pLocX - 1, #integer: me.pLocY]>
  [444] pushproplist ............................ <[#integer: me.pLocX - 1, #integer: me.pLocY]>
  [445] pusharglistnoret 3 ...................... <getThread(#room).getComponent().getRoomConnection(), "MOVE", [#integer: me.pLocX - 1, #integer: me.pLocY]>
  [447] objcall 178 ............................. getThread(#room).getComponent().getRoomConnection().send("MOVE", [#integer: me.pLocX - 1, #integer: me.pLocY])
  [449] pop 1 ................................... end case
  [451] pushint8 1 .............................. <1>
  [453] pusharglistnoret 1 ...................... <1>
  [455] extcall 14 .............................. return 1
  [457] ret
end

on setAnimation me
  [  0] getprop 487 ............................. <pActive>
  [  3] pushint8 1 .............................. <1>
  [  5] eq ...................................... <pActive = 1>
  [  6] jmpifz [ 15] ............................ if pActive = 1 then
  [  9] pushint8 1 .............................. <1>
  [ 11] pusharglistnoret 1 ...................... <1>
  [ 13] extcall 14 .............................. return 1
  [ 15] pushint8 1 .............................. <1>
  [ 17] setprop 611 ............................. pUserClicked = 1
  [ 20] pushsymb 119 ............................ <#room>
  [ 22] pusharglist 1 ........................... <#room>
  [ 24] extcall 118 ............................. <getThread(#room)>
  [ 26] pusharglist 1 ........................... <getThread(#room)>
  [ 28] objcall 138 ............................. <getThread(#room).getComponent()>
  [ 30] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [ 32] objcall 176 ............................. <getThread(#room).getComponent().getRoomConnection()>
  [ 34] setlocal 0 .............................. tConnection = getThread(#room).getComponent().getRoomConnection()
  [ 36] getlocal 0 .............................. <tConnection>
  [ 38] pushzero ................................ <0>
  [ 39] eq ...................................... <tConnection = 0>
  [ 40] jmpifz [ 48] ............................ if tConnection = 0 then
  [ 43] pushzero ................................ <0>
  [ 44] pusharglistnoret 1 ...................... <0>
  [ 46] extcall 14 .............................. return 0
  [ 48] getlocal 0 .............................. <tConnection>
  [ 50] pushcons 14 ............................. <"USEFURNITURE">
  [ 52] pushsymb 177 ............................ <#integer>
  [ 54] getparam 0 .............................. <me>
  [ 56] pusharglist 1 ........................... <me>
  [ 58] objcall 140 ............................. <me.getID()>
  [ 60] pusharglist 1 ........................... <me.getID()>
  [ 62] extcall 177 ............................. <integer(me.getID())>
  [ 64] pushsymb 177 ............................ <#integer>
  [ 66] pushzero ................................ <0>
  [ 67] pusharglist 4 ........................... <[#integer: integer(me.getID()), #integer: 0]>
  [ 69] pushproplist ............................ <[#integer: integer(me.getID()), #integer: 0]>
  [ 70] pusharglistnoret 3 ...................... <tConnection, "USEFURNITURE", [#integer: integer(me.getID()), #integer: 0]>
  [ 72] objcall 178 ............................. tConnection.send("USEFURNITURE", [#integer: integer(me.getID()), #integer: 0])
  [ 74] ret
end
