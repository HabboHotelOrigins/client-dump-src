property pSprite, pScrImg, pwidth, pheight, pVX, pVY, pTargetObj, pTargetSpr, pXFactor, pZoom, pSpeed, pFlexible, pTransitBuffer, pTransitState, pTargetPoint, pLastCropPoint, pFadeSpeed, pTransition, pTextImgBuffer, pTextShowState, pTextShowTime, pTextBlend, StateOfAd, adShowTime, adMember, adLink, adIdNum, AdWaitScore, pTextBgBoxImg, pPaaluPlayers, pWriterID

on construct me
  [  0] pushint8 108 ............................ <108>
  [  2] setprop 82 .............................. pheight = 108
  [  4] pushint8 102 ............................ <102>
  [  6] setprop 83 .............................. pwidth = 102
  [  8] pushfloat32 0.0 ......................... <0.0>
  [ 13] setprop 84 .............................. pVX = 0.0
  [ 15] pushfloat32 0.0 ......................... <0.0>
  [ 20] setprop 85 .............................. pVY = 0.0
  [ 22] pushint8 32 ............................. <32>
  [ 24] setprop 86 .............................. pXFactor = 32
  [ 26] pushint8 4 .............................. <4>
  [ 28] setprop 87 .............................. pZoom = 4
  [ 30] pushfloat32 10.0 ........................ <10.0>
  [ 35] setprop 88 .............................. pSpeed = 10.0
  [ 37] pushfloat32 50.0 ........................ <50.0>
  [ 42] setprop 89 .............................. pFlexible = 50.0
  [ 44] pushzero ................................ <0>
  [ 45] setprop 90 .............................. pTransitState = 0
  [ 47] pusharglist 0 ........................... <>
  [ 49] extcall 92 .............................. <VOID>
  [ 51] setprop 91 .............................. pTargetObj = VOID
  [ 53] pusharglist 0 ........................... <>
  [ 55] extcall 92 .............................. <VOID>
  [ 57] setprop 93 .............................. pTargetSpr = VOID
  [ 59] pushzero ................................ <0>
  [ 60] pushzero ................................ <0>
  [ 61] pusharglist 2 ........................... <0, 0>
  [ 63] extcall 95 .............................. <point(0, 0)>
  [ 65] setprop 94 .............................. pLastCropPoint = point(0, 0)
  [ 67] pushsymb 23 ............................. <#room>
  [ 69] pusharglist 1 ........................... <#room>
  [ 71] extcall 22 .............................. <getThread(#room)>
  [ 73] pusharglist 1 ........................... <getThread(#room)>
  [ 75] objcall 24 .............................. <getThread(#room).getInterface()>
  [ 77] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 79] objcall 25 .............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 81] pushcons 0 .............................. <"cam1">
  [ 83] pusharglist 2 ........................... <getThread(#room).getInterface().getRoomVisualizer(), "cam1">
  [ 85] objcall 26 .............................. <getThread(#room).getInterface().getRoomVisualizer().getSprById("cam1")>
  [ 87] setprop 96 .............................. pSprite = getThread(#room).getInterface().getRoomVisualizer().getSprById("cam1")
  [ 89] pushcons 1 .............................. <"fuse_screen">
  [ 91] pusharglist 1 ........................... <"fuse_screen">
  [ 93] extcall 56 .............................. <getmemnum("fuse_screen")>
  [ 95] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [ 97] extcall 55 .............................. <member(getmemnum("fuse_screen"))>
  [ 99] getobjprop 98 ........................... <member(getmemnum("fuse_screen")).image>
  [101] setprop 97 .............................. pScrImg = member(getmemnum("fuse_screen")).image
  [103] pushint8 1 .............................. <1>
  [105] pushint8 1 .............................. <1>
  [107] pushint8 24 ............................. <24>
  [109] pusharglist 3 ........................... <1, 1, 24>
  [111] extcall 98 .............................. <image(1, 1, 24)>
  [113] setprop 99 .............................. pTextBgBoxImg = image(1, 1, 24)
  [115] getprop 96 .............................. <pSprite>
  [117] setprop 93 .............................. pTargetSpr = pSprite
  [119] getprop 99 .............................. <pTextBgBoxImg>
  [121] getprop 99 .............................. <pTextBgBoxImg>
  [123] getobjprop 100 .......................... <pTextBgBoxImg.rect>
  [125] pushzero ................................ <0>
  [126] pushzero ................................ <0>
  [127] pushzero ................................ <0>
  [128] pusharglist 3 ........................... <0, 0, 0>
  [130] extcall 101 ............................. <rgb(0, 0, 0)>
  [132] pusharglistnoret 3 ...................... <pTextBgBoxImg, pTextBgBoxImg.rect, rgb(0, 0, 0)>
  [134] objcall 102 ............................. pTextBgBoxImg.fill(pTextBgBoxImg.rect, rgb(0, 0, 0))
  [136] pushcons 2 .............................. <"fuse_screen_logo">
  [138] pusharglist 1 ........................... <"fuse_screen_logo">
  [140] extcall 390 ............................. <memberExists("fuse_screen_logo")>
  [143] jmpifz [172] ............................ if memberExists("fuse_screen_logo") then
  [146] getprop 97 .............................. <pScrImg>
  [148] pushcons 2 .............................. <"fuse_screen_logo">
  [150] pusharglist 1 ........................... <"fuse_screen_logo">
  [152] extcall 56 .............................. <getmemnum("fuse_screen_logo")>
  [154] pusharglist 1 ........................... <getmemnum("fuse_screen_logo")>
  [156] extcall 55 .............................. <member(getmemnum("fuse_screen_logo"))>
  [158] getobjprop 98 ........................... <member(getmemnum("fuse_screen_logo")).image>
  [160] getprop 97 .............................. <pScrImg>
  [162] getobjprop 100 .......................... <pScrImg.rect>
  [164] getprop 97 .............................. <pScrImg>
  [166] getobjprop 100 .......................... <pScrImg.rect>
  [168] pusharglistnoret 4 ...................... <pScrImg, member(getmemnum("fuse_screen_logo")).image, pScrImg.rect, pScrImg.rect>
  [170] objcall 163 ............................. pScrImg.copyPixels(member(getmemnum("fuse_screen_logo")).image, pScrImg.rect, pScrImg.rect)
  [172] pushzero ................................ <0>
  [173] setprop 103 ............................. pTransition = 0
  [175] pushzero ................................ <0>
  [176] setprop 104 ............................. pTextShowState = 0
  [178] pushzero ................................ <0>
  [179] setprop 105 ............................. StateOfAd = 0
  [181] pushzero ................................ <0>
  [182] setprop 106 ............................. AdWaitScore = 0
  [184] pusharglist 0 ........................... <>
  [186] extcall 92 .............................. <VOID>
  [188] setprop 107 ............................. adIdNum = VOID
  [190] pusharglist 0 ........................... <[:]>
  [192] pushproplist ............................ <[:]>
  [193] setprop 108 ............................. pPaaluPlayers = [:]
  [195] pusharglist 0 ........................... <>
  [197] extcall 394 ............................. <getUniqueID()>
  [200] setprop 393 ............................. pWriterID = getUniqueID()
  [203] pushcons 3 .............................. <"struct.font.bold">
  [205] pusharglist 1 ........................... <"struct.font.bold">
  [207] extcall 395 ............................. <getStructVariable("struct.font.bold")>
  [210] setlocal 0 .............................. tMetrics = getStructVariable("struct.font.bold")
  [212] getlocal 0 .............................. <tMetrics>
  [214] pushsymb 217 ............................ <#color>
  [216] pushcons 4 .............................. <"#FFFF99">
  [218] pusharglist 1 ........................... <"#FFFF99">
  [220] extcall 101 ............................. <rgb("#FFFF99")>
  [222] pusharglistnoret 3 ...................... <tMetrics, #color, rgb("#FFFF99")>
  [224] objcall 384 ............................. tMetrics.setaProp(#color, rgb("#FFFF99"))
  [227] getlocal 0 .............................. <tMetrics>
  [229] pushsymb 315 ............................ <#bgColor>
  [232] pushzero ................................ <0>
  [233] pushzero ................................ <0>
  [234] pushzero ................................ <0>
  [235] pusharglist 3 ........................... <0, 0, 0>
  [237] extcall 101 ............................. <rgb(0, 0, 0)>
  [239] pusharglistnoret 3 ...................... <tMetrics, #bgColor, rgb(0, 0, 0)>
  [241] objcall 384 ............................. tMetrics.setaProp(#bgColor, rgb(0, 0, 0))
  [244] getprop 393 ............................. <pWriterID>
  [247] getlocal 0 .............................. <tMetrics>
  [249] pusharglist 2 ........................... <pWriterID, tMetrics>
  [251] extcall 396 ............................. <createWriter(pWriterID, tMetrics)>
  [254] not ..................................... <not createWriter(pWriterID, tMetrics)>
  [255] jmpifz [275] ............................ if not createWriter(pWriterID, tMetrics) then / else
  [258] getparam 0 .............................. <me>
  [260] pushcons 5 .............................. <"Couldn't create writer for screen!">
  [262] pushsymb 1 .............................. <#construct>
  [264] pusharglist 3 ........................... <me, "Couldn't create writer for screen!", #construct>
  [266] extcall 119 ............................. <error(me, "Couldn't create writer for screen!", #construct)>
  [268] pusharglistnoret 1 ...................... <error(me, "Couldn't create writer for screen!", #construct)>
  [270] extcall 8 ............................... return error(me, "Couldn't create writer for screen!", #construct)
  [272] jmp [332]
  [275] getprop 393 ............................. <pWriterID>
  [278] pusharglist 1 ........................... <pWriterID>
  [280] extcall 397 ............................. <getWriter(pWriterID)>
  [283] pushsymb 398 ............................ <#alignment>
  [286] pushsymb 280 ............................ <#center>
  [289] pushsymb 100 ............................ <#rect>
  [291] pushzero ................................ <0>
  [292] pushzero ................................ <0>
  [293] pushint8 108 ............................ <108>
  [295] pushint8 10 ............................. <10>
  [297] pusharglist 4 ........................... <0, 0, 108, 10>
  [299] extcall 100 ............................. <rect(0, 0, 108, 10)>
  [301] pusharglist 4 ........................... <[#alignment: #center, #rect: rect(0, 0, 108, 10)]>
  [303] pushproplist ............................ <[#alignment: #center, #rect: rect(0, 0, 108, 10)]>
  [304] pusharglistnoret 2 ...................... <getWriter(pWriterID), [#alignment: #center, #rect: rect(0, 0, 108, 10)]>
  [306] objcall 204 ............................. getWriter(pWriterID).define([#alignment: #center, #rect: rect(0, 0, 108, 10)])
  [308] getparam 0 .............................. <me>
  [310] pushcons 6 .............................. <"fade">
  [312] pusharglistnoret 2 ...................... <me, "fade">
  [314] objcall 71 .............................. me.fuseShow_transition("fade")
  [316] getparam 0 .............................. <me>
  [318] pusharglist 1 ........................... <me>
  [320] objcall 14 .............................. <me.getID()>
  [322] pusharglistnoret 1 ...................... <me.getID()>
  [324] extcall 13 .............................. receivePrepare(me.getID())
  [326] pushint8 1 .............................. <1>
  [328] pusharglistnoret 1 ...................... <1>
  [330] extcall 8 ............................... return 1
  [332] ret
end

on deconstruct me
  [  0] getprop 393 ............................. <pWriterID>
  [  3] pusharglistnoret 1 ...................... <pWriterID>
  [  5] extcall 400 ............................. removeWriter(pWriterID)
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 14 .............................. <me.getID()>
  [ 14] pusharglistnoret 1 ...................... <me.getID()>
  [ 16] extcall 15 .............................. removePrepare(me.getID())
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 1 ...................... <1>
  [ 22] extcall 8 ............................... return 1
  [ 24] ret
end

on activatePaaluPlayer me, tName, tObj
  [  0] getprop 108 ............................. <pPaaluPlayers>
  [  2] getparam 1 .............................. <tName>
  [  4] getparam 2 .............................. <tObj>
  [  6] pusharglistnoret 3 ...................... <pPaaluPlayers, tName, tObj>
  [  8] objcall 28 .............................. pPaaluPlayers[tName] = tObj
  [ 10] ret
end

on deActivatePaaluPlayer me, tName
  [  0] getprop 108 ............................. <pPaaluPlayers>
  [  2] getparam 1 .............................. <tName>
  [  4] pusharglist 2 ........................... <pPaaluPlayers, tName>
  [  6] objcall 37 .............................. <pPaaluPlayers[tName]>
  [  8] pusharglist 1 ........................... <pPaaluPlayers[tName]>
  [ 10] extcall 45 .............................. <voidp(pPaaluPlayers[tName])>
  [ 12] not ..................................... <not voidp(pPaaluPlayers[tName])>
  [ 13] jmpifz [ 24] ............................ if not voidp(pPaaluPlayers[tName]) then
  [ 16] getprop 108 ............................. <pPaaluPlayers>
  [ 18] getparam 1 .............................. <tName>
  [ 20] pusharglistnoret 2 ...................... <pPaaluPlayers, tName>
  [ 22] objcall 115 ............................. pPaaluPlayers.deleteProp(tName)
  [ 24] ret
end

on fuseShow_setcamera me, tNumber
  [  0] getprop 103 ............................. <pTransition>
  [  2] pushcons 6 .............................. <"fade">
  [  4] nteq .................................... <pTransition <> "fade">
  [  5] jmpifz [ 11] ............................ if pTransition <> "fade" then
  [  8] pushzero ................................ <0>
  [  9] setprop 103 ............................. pTransition = 0
  [ 11] getparam 1 .............................. <tNumber>
  [ 13] pushint8 1 .............................. <1>
  [ 15] eq ...................................... <tNumber = 1>
  [ 16] jmpifz [ 23] ............................ if tNumber = 1 then
  [ 19] pushint8 2 .............................. <2>
  [ 21] setprop 87 .............................. pZoom = 2
  [ 23] getparam 1 .............................. <tNumber>
  [ 25] pushint8 2 .............................. <2>
  [ 27] eq ...................................... <tNumber = 2>
  [ 28] jmpifz [ 35] ............................ if tNumber = 2 then
  [ 31] pushint8 4 .............................. <4>
  [ 33] setprop 87 .............................. pZoom = 4
  [ 35] ret
end

on fuseShow_targetcamera me, tTargetObj
  [  0] pushsymb 23 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 22 .............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 117 ............................. <getThread(#room).getComponent()>
  [ 10] getparam 1 .............................. <tTargetObj>
  [ 12] pusharglist 2 ........................... <getThread(#room).getComponent(), tTargetObj>
  [ 14] objcall 120 ............................. <getThread(#room).getComponent().getUserObject(tTargetObj)>
  [ 16] setlocal 0 .............................. tUserObj = getThread(#room).getComponent().getUserObject(tTargetObj)
  [ 18] getlocal 0 .............................. <tUserObj>
  [ 20] not ..................................... <not tUserObj>
  [ 21] jmpifz [ 51] ............................ if not tUserObj then
  [ 24] pusharglist 0 ........................... <>
  [ 26] extcall 92 .............................. <VOID>
  [ 28] setprop 91 .............................. pTargetObj = VOID
  [ 30] getprop 96 .............................. <pSprite>
  [ 32] setprop 93 .............................. pTargetSpr = pSprite
  [ 34] getparam 0 .............................. <me>
  [ 36] pushcons 7 .............................. <"User object not found:">
  [ 38] getparam 1 .............................. <tTargetObj>
  [ 40] joinpadstr .............................. <"User object not found:" && tTargetObj>
  [ 41] pushsymb 70 ............................. <#fuseShow_targetcamera>
  [ 43] pusharglist 3 ........................... <me, "User object not found:" && tTargetObj, #fuseShow_targetcamera>
  [ 45] extcall 119 ............................. <error(me, "User object not found:" && tTargetObj, #fuseShow_targetcamera)>
  [ 47] pusharglistnoret 1 ...................... <error(me, "User object not found:" && tTargetObj, #fuseShow_targetcamera)>
  [ 49] extcall 8 ............................... return error(me, "User object not found:" && tTargetObj, #fuseShow_targetcamera)
  [ 51] getlocal 0 .............................. <tUserObj>
  [ 53] pusharglist 1 ........................... <tUserObj>
  [ 55] objcall 121 ............................. <tUserObj.getSprites()>
  [ 57] pushint8 1 .............................. <1>
  [ 59] pusharglist 2 ........................... <tUserObj.getSprites(), 1>
  [ 61] objcall 37 .............................. <tUserObj.getSprites()[1]>
  [ 63] setprop 93 .............................. pTargetSpr = tUserObj.getSprites()[1]
  [ 65] getparam 1 .............................. <tTargetObj>
  [ 67] setprop 91 .............................. pTargetObj = tTargetObj
  [ 69] pushfloat32 50.0 ........................ <50.0>
  [ 74] pushint8 10 ............................. <10>
  [ 76] pusharglist 1 ........................... <10>
  [ 78] extcall 63 .............................. <random(10)>
  [ 80] add ..................................... <50.0 + random(10)>
  [ 81] setprop 88 .............................. pSpeed = 50.0 + random(10)
  [ 83] pushfloat32 10.0 ........................ <10.0>
  [ 88] pushint8 20 ............................. <20>
  [ 90] pusharglist 1 ........................... <20>
  [ 92] extcall 63 .............................. <random(20)>
  [ 94] add ..................................... <10.0 + random(20)>
  [ 95] setprop 89 .............................. pFlexible = 10.0 + random(20)
  [ 97] ret
end

on fuseShow_transition me, tTran
  [  0] getprop 105 ............................. <StateOfAd>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <StateOfAd = 0>
  [  4] jmpifz [104] ............................ if StateOfAd = 0 then
  [  7] getparam 1 .............................. <tTran>
  [  9] peek 0 .................................. case tTran of
  [ 11] pushcons 8 .............................. <"cameraPan">
  [ 13] eq
  [ 14] jmpifz [ 58] ............................ (case) "cameraPan":
  [ 17] pushcons 8 .............................. <"cameraPan">
  [ 19] setprop 103 ............................. pTransition = "cameraPan"
  [ 21] pusharglist 0 ........................... <>
  [ 23] extcall 92 .............................. <VOID>
  [ 25] setprop 91 .............................. pTargetObj = VOID
  [ 27] pushfloat32 5.0 ......................... <5.0>
  [ 32] pushint8 25 ............................. <25>
  [ 34] pusharglist 1 ........................... <25>
  [ 36] extcall 63 .............................. <random(25)>
  [ 38] add ..................................... <5.0 + random(25)>
  [ 39] setprop 88 .............................. pSpeed = 5.0 + random(25)
  [ 41] pushfloat32 30.0 ........................ <30.0>
  [ 46] pushint8 20 ............................. <20>
  [ 48] pusharglist 1 ........................... <20>
  [ 50] extcall 63 .............................. <random(20)>
  [ 52] add ..................................... <30.0 + random(20)>
  [ 53] setprop 89 .............................. pFlexible = 30.0 + random(20)
  [ 55] jmp [102]
  [ 58] peek 0
  [ 60] pushcons 6 .............................. <"fade">
  [ 62] eq
  [ 63] jmpifz [102] ............................ (case) "fade":
  [ 66] pushcons 6 .............................. <"fade">
  [ 68] setprop 103 ............................. pTransition = "fade"
  [ 70] pusharglist 0 ........................... <>
  [ 72] extcall 92 .............................. <VOID>
  [ 74] setprop 91 .............................. pTargetObj = VOID
  [ 76] getprop 82 .............................. <pheight>
  [ 78] getprop 83 .............................. <pwidth>
  [ 80] pushint8 16 ............................. <16>
  [ 82] pusharglist 3 ........................... <pheight, pwidth, 16>
  [ 84] extcall 98 .............................. <image(pheight, pwidth, 16)>
  [ 86] setprop 123 ............................. pTransitBuffer = image(pheight, pwidth, 16)
  [ 88] pushzero ................................ <0>
  [ 89] setprop 90 .............................. pTransitState = 0
  [ 91] pushint8 2 .............................. <2>
  [ 93] pusharglist 1 ........................... <2>
  [ 95] extcall 63 .............................. <random(2)>
  [ 97] pushint8 10 ............................. <10>
  [ 99] mul ..................................... <random(2) * 10>
  [100] setprop 124 ............................. pFadeSpeed = random(2) * 10
  [102] pop 1 ................................... end case
  [104] ret
end

on fuseShow_showtext me, tText
  [  0] getprop 105 ............................. <StateOfAd>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <StateOfAd = 0>
  [  4] jmpifz [149] ............................ if StateOfAd = 0 then
  [  7] getmovieprop 126 ........................ <the itemDelimiter>
  [  9] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 11] pushcons 9 .............................. <"/">
  [ 13] setmovieprop 126 ........................ the itemDelimiter = "/"
  [ 15] getparam 1 .............................. <tText>
  [ 17] pushsymb 127 ............................ <#item>
  [ 19] pusharglist 2 ........................... <tText, #item>
  [ 21] objcall 64 .............................. <tText.item.count>
  [ 23] pushint8 1 .............................. <1>
  [ 25] gt ...................................... <tText.item.count > 1>
  [ 26] jmpifz [101] ............................ if tText.item.count > 1 then
  [ 29] pushcons 10 ............................. <EMPTY>
  [ 31] setlocal 1 .............................. tTemp = EMPTY
  [ 33] pushint8 1 .............................. <1>
  [ 35] setlocal 2
  [ 37] getlocal 2
  [ 39] getparam 1 .............................. <tText>
  [ 41] pushsymb 127 ............................ <#item>
  [ 43] pusharglist 2 ........................... <tText, #item>
  [ 45] objcall 64 .............................. <tText.item.count>
  [ 47] lteq
  [ 48] jmpifz [ 78] ............................ repeat with f = 1 to tText.item.count
  [ 51] getlocal 1 .............................. <tTemp>
  [ 53] getparam 1 .............................. <tText>
  [ 55] pushsymb 127 ............................ <#item>
  [ 57] getlocal 2 .............................. <f>
  [ 59] pusharglist 3 ........................... <tText, #item, f>
  [ 61] objcall 128 ............................. <tText.item[f]>
  [ 63] joinstr ................................. <tTemp & tText.item[f]>
  [ 64] pushcons 11 ............................. <RETURN>
  [ 66] joinstr ................................. <tTemp & tText.item[f] & RETURN>
  [ 67] setlocal 1 .............................. tTemp = tTemp & tText.item[f] & RETURN
  [ 69] pushint8 1
  [ 71] getlocal 2
  [ 73] add
  [ 74] setlocal 2
  [ 76] endrepeat [ 37]
  [ 78] getlocal 1 .............................. <tTemp>
  [ 80] pushsymb 129 ............................ <#line>
  [ 82] pushint8 1 .............................. <1>
  [ 84] getlocal 1 .............................. <tTemp>
  [ 86] pushsymb 129 ............................ <#line>
  [ 88] pusharglist 2 ........................... <tTemp, #line>
  [ 90] objcall 64 .............................. <tTemp.line.count>
  [ 92] pushint8 1 .............................. <1>
  [ 94] sub ..................................... <tTemp.line.count - 1>
  [ 95] pusharglist 4 ........................... <tTemp, #line, 1, tTemp.line.count - 1>
  [ 97] objcall 128 ............................. <tTemp.line[1..tTemp.line.count - 1]>
  [ 99] setparam 1 .............................. tText = tTemp.line[1..tTemp.line.count - 1]
  [101] getlocal 0 .............................. <tDelim>
  [103] setmovieprop 126 ........................ the itemDelimiter = tDelim
  [105] getprop 393 ............................. <pWriterID>
  [108] pusharglist 1 ........................... <pWriterID>
  [110] extcall 397 ............................. <getWriter(pWriterID)>
  [113] setlocal 3 .............................. tWriObj = getWriter(pWriterID)
  [115] getlocal 3 .............................. <tWriObj>
  [117] pushzero ................................ <0>
  [118] nteq .................................... <tWriObj <> 0>
  [119] jmpifz [149] ............................ if tWriObj <> 0 then
  [122] pushint8 1 .............................. <1>
  [124] setprop 104 ............................. pTextShowState = 1
  [126] getlocal 3 .............................. <tWriObj>
  [128] getparam 1 .............................. <tText>
  [130] pusharglist 2 ........................... <tWriObj, tText>
  [132] objcall 302 ............................. <tWriObj.render(tText)>
  [135] setprop 131 ............................. pTextImgBuffer = tWriObj.render(tText)
  [137] pushint16 5000 .......................... <5000>
  [140] getmovieprop 134 ........................ <the milliSeconds>
  [142] add ..................................... <5000 + the milliSeconds>
  [143] setprop 133 ............................. pTextShowTime = 5000 + the milliSeconds
  [145] pushint8 100 ............................ <100>
  [147] setprop 135 ............................. pTextBlend = 100
  [149] ret
end

on fuseShow_ad me, tFuse_s
  [  0] getparam 1 .............................. <tFuse_s>
  [  2] pushsymb 139 ............................ <#word>
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglist 3 ........................... <tFuse_s, #word, 1>
  [  8] objcall 128 ............................. <tFuse_s.word[1]>
  [ 10] setprop 107 ............................. adIdNum = tFuse_s.word[1]
  [ 12] getparam 1 .............................. <tFuse_s>
  [ 14] pushsymb 139 ............................ <#word>
  [ 16] pushint8 2 .............................. <2>
  [ 18] pusharglist 3 ........................... <tFuse_s, #word, 2>
  [ 20] objcall 128 ............................. <tFuse_s.word[2]>
  [ 22] setprop 140 ............................. adMember = tFuse_s.word[2]
  [ 24] getparam 1 .............................. <tFuse_s>
  [ 26] pushsymb 139 ............................ <#word>
  [ 28] pushint8 3 .............................. <3>
  [ 30] pusharglist 3 ........................... <tFuse_s, #word, 3>
  [ 32] objcall 128 ............................. <tFuse_s.word[3]>
  [ 34] setprop 141 ............................. adLink = tFuse_s.word[3]
  [ 36] pushzero ................................ <0>
  [ 37] setprop 104 ............................. pTextShowState = 0
  [ 39] ret
end

on fuseShow_Activate_ad me
  [  0] getprop 140 ............................. <adMember>
  [  2] pusharglist 1 ........................... <adMember>
  [  4] extcall 45 .............................. <voidp(adMember)>
  [  6] not ..................................... <not voidp(adMember)>
  [  7] jmpifz [114] ............................ if not voidp(adMember) then
  [ 10] pushint8 1 .............................. <1>
  [ 12] setprop 105 ............................. StateOfAd = 1
  [ 14] pushzero ................................ <0>
  [ 15] setprop 106 ............................. AdWaitScore = 0
  [ 17] pushcons 6 .............................. <"fade">
  [ 19] setprop 103 ............................. pTransition = "fade"
  [ 21] pusharglist 0 ........................... <>
  [ 23] extcall 92 .............................. <VOID>
  [ 25] setprop 91 .............................. pTargetObj = VOID
  [ 27] pushzero ................................ <0>
  [ 28] setprop 90 .............................. pTransitState = 0
  [ 30] pushint8 10 ............................. <10>
  [ 32] setprop 124 ............................. pFadeSpeed = 10
  [ 34] pushint16 12000 ......................... <12000>
  [ 37] getmovieprop 134 ........................ <the milliSeconds>
  [ 39] add ..................................... <12000 + the milliSeconds>
  [ 40] setprop 143 ............................. adShowTime = 12000 + the milliSeconds
  [ 42] getprop 82 .............................. <pheight>
  [ 44] getprop 83 .............................. <pwidth>
  [ 46] pushint8 16 ............................. <16>
  [ 48] pusharglist 3 ........................... <pheight, pwidth, 16>
  [ 50] extcall 98 .............................. <image(pheight, pwidth, 16)>
  [ 52] setprop 123 ............................. pTransitBuffer = image(pheight, pwidth, 16)
  [ 54] getprop 123 ............................. <pTransitBuffer>
  [ 56] pushzero ................................ <0>
  [ 57] pushzero ................................ <0>
  [ 58] getprop 82 .............................. <pheight>
  [ 60] getprop 83 .............................. <pwidth>
  [ 62] pusharglist 4 ........................... <0, 0, pheight, pwidth>
  [ 64] extcall 100 ............................. <rect(0, 0, pheight, pwidth)>
  [ 66] pushzero ................................ <0>
  [ 67] pushzero ................................ <0>
  [ 68] pushzero ................................ <0>
  [ 69] pusharglist 3 ........................... <0, 0, 0>
  [ 71] extcall 101 ............................. <rgb(0, 0, 0)>
  [ 73] pusharglistnoret 3 ...................... <pTransitBuffer, rect(0, 0, pheight, pwidth), rgb(0, 0, 0)>
  [ 75] objcall 102 ............................. pTransitBuffer.fill(rect(0, 0, pheight, pwidth), rgb(0, 0, 0))
  [ 77] getprop 96 .............................. <pSprite>
  [ 79] pusharglist 1 ........................... <pSprite>
  [ 81] extcall 45 .............................. <voidp(pSprite)>
  [ 83] not ..................................... <not voidp(pSprite)>
  [ 84] jmpifz [114] ............................ if not voidp(pSprite) then
  [ 87] getprop 96 .............................. <pSprite>
  [ 89] pushcons 12 ............................. <"cursor.finger">
  [ 91] pusharglist 1 ........................... <"cursor.finger">
  [ 93] extcall 56 .............................. <getmemnum("cursor.finger")>
  [ 95] pusharglist 1 ........................... <getmemnum("cursor.finger")>
  [ 97] extcall 55 .............................. <member(getmemnum("cursor.finger"))>
  [ 99] pushcons 13 ............................. <"cursor.finger.mask">
  [101] pusharglist 1 ........................... <"cursor.finger.mask">
  [103] extcall 56 .............................. <getmemnum("cursor.finger.mask")>
  [105] pusharglist 1 ........................... <getmemnum("cursor.finger.mask")>
  [107] extcall 55 .............................. <member(getmemnum("cursor.finger.mask"))>
  [109] pusharglist 2 ........................... <[member(getmemnum("cursor.finger")), member(getmemnum("cursor.finger.mask"))]>
  [111] pushlist ................................ <[member(getmemnum("cursor.finger")), member(getmemnum("cursor.finger.mask"))]>
  [112] setobjprop 145 .......................... pSprite.cursor = [member(getmemnum("cursor.finger")), member(getmemnum("cursor.finger.mask"))]
  [114] ret
end

on mouseDown me
  [  0] getprop 141 ............................. <adLink>
  [  2] pusharglist 1 ........................... <adLink>
  [  4] extcall 45 .............................. <voidp(adLink)>
  [  6] jmpifz [ 18] ............................ if voidp(adLink) then
  [  9] pusharglistnoret 0 ...................... <>
  [ 11] extcall 146 ............................. dontPassEvent()
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 8 ............................... return 0
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 147 .......................... <me.spriteNum>
  [ 22] pushint8 6 .............................. <6>
  [ 24] get 6 ................................... <the cursor of sprite me.spriteNum>
  [ 26] pushzero ................................ <0>
  [ 27] nteq .................................... <the cursor of sprite me.spriteNum <> 0>
  [ 28] jmpifz [ 64] ............................ if the cursor of sprite me.spriteNum <> 0 then
  [ 31] getprop 141 ............................. <adLink>
  [ 33] pushcons 14 ............................. <"http:">
  [ 35] containsstr ............................. <adLink contains "http:">
  [ 36] jmpifz [ 45] ............................ if adLink contains "http:" then
  [ 39] getprop 141 ............................. <adLink>
  [ 41] pusharglistnoret 1 ...................... <adLink>
  [ 43] extcall 148 ............................. openNetPage(adLink)
  [ 45] pushcons 15 ............................. <"connection.info.id">
  [ 47] pusharglist 1 ........................... <"connection.info.id">
  [ 49] extcall 286 ............................. <getVariable("connection.info.id")>
  [ 52] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 54] extcall 149 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 56] pushcons 16 ............................. <"ADCLICK">
  [ 58] getprop 107 ............................. <adIdNum>
  [ 60] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "ADCLICK", adIdNum>
  [ 62] objcall 151 ............................. getConnection(getVariable("connection.info.id")).send("ADCLICK", adIdNum)
  [ 64] ret
end

on prepare me
  [  0] getprop 108 ............................. <pPaaluPlayers>
  [  2] getobjprop 64 ........................... <pPaaluPlayers.count>
  [  4] pushzero ................................ <0>
  [  5] gt ...................................... <pPaaluPlayers.count > 0>
  [  6] jmpifz [134] ............................ if pPaaluPlayers.count > 0 then / else
  [  9] getprop 108 ............................. <pPaaluPlayers>
  [ 11] getobjprop 64 ........................... <pPaaluPlayers.count>
  [ 13] pushint8 2 .............................. <2>
  [ 15] eq ...................................... <pPaaluPlayers.count = 2>
  [ 16] jmpifz [ 89] ............................ if pPaaluPlayers.count = 2 then / else
  [ 19] getprop 108 ............................. <pPaaluPlayers>
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglist 2 ........................... <pPaaluPlayers, 1>
  [ 25] objcall 37 .............................. <pPaaluPlayers[1]>
  [ 27] pusharglist 1 ........................... <pPaaluPlayers[1]>
  [ 29] objcall 154 ............................. <pPaaluPlayers[1].getBalance()>
  [ 31] pusharglist 1 ........................... <pPaaluPlayers[1].getBalance()>
  [ 33] extcall 153 ............................. <abs(pPaaluPlayers[1].getBalance())>
  [ 35] getprop 108 ............................. <pPaaluPlayers>
  [ 37] pushint8 2 .............................. <2>
  [ 39] pusharglist 2 ........................... <pPaaluPlayers, 2>
  [ 41] objcall 37 .............................. <pPaaluPlayers[2]>
  [ 43] pusharglist 1 ........................... <pPaaluPlayers[2]>
  [ 45] objcall 154 ............................. <pPaaluPlayers[2].getBalance()>
  [ 47] pusharglist 1 ........................... <pPaaluPlayers[2].getBalance()>
  [ 49] extcall 153 ............................. <abs(pPaaluPlayers[2].getBalance())>
  [ 51] lt ...................................... <abs(pPaaluPlayers[1].getBalance()) < abs(pPaaluPlayers[2].getBalance())>
  [ 52] jmpifz [ 72] ............................ if abs(pPaaluPlayers[1].getBalance()) < abs(pPaaluPlayers[2].getBalance()) then / else
  [ 55] getprop 108 ............................. <pPaaluPlayers>
  [ 57] pushint8 1 .............................. <1>
  [ 59] pusharglist 2 ........................... <pPaaluPlayers, 1>
  [ 61] objcall 37 .............................. <pPaaluPlayers[1]>
  [ 63] getchainedprop 96 ....................... <pPaaluPlayers[1].pSprite>
  [ 65] getobjprop 155 .......................... <pPaaluPlayers[1].pSprite.loc>
  [ 67] setlocal 0 .............................. tloc = pPaaluPlayers[1].pSprite.loc
  [ 69] jmp [ 86]
  [ 72] getprop 108 ............................. <pPaaluPlayers>
  [ 74] pushint8 2 .............................. <2>
  [ 76] pusharglist 2 ........................... <pPaaluPlayers, 2>
  [ 78] objcall 37 .............................. <pPaaluPlayers[2]>
  [ 80] getchainedprop 96 ....................... <pPaaluPlayers[2].pSprite>
  [ 82] getobjprop 155 .......................... <pPaaluPlayers[2].pSprite.loc>
  [ 84] setlocal 0 .............................. tloc = pPaaluPlayers[2].pSprite.loc
  [ 86] jmp [103]
  [ 89] getprop 108 ............................. <pPaaluPlayers>
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglist 2 ........................... <pPaaluPlayers, 1>
  [ 95] objcall 37 .............................. <pPaaluPlayers[1]>
  [ 97] getchainedprop 96 ....................... <pPaaluPlayers[1].pSprite>
  [ 99] getobjprop 155 .......................... <pPaaluPlayers[1].pSprite.loc>
  [101] setlocal 0 .............................. tloc = pPaaluPlayers[1].pSprite.loc
  [103] pusharglist 0 ........................... <>
  [105] extcall 92 .............................. <VOID>
  [107] setlocal 1 .............................. bufferImage = VOID
  [109] pushint8 4 .............................. <4>
  [111] setprop 87 .............................. pZoom = 4
  [113] pushzero ................................ <0>
  [114] setprop 90 .............................. pTransitState = 0
  [116] getparam 0 .............................. <me>
  [118] getlocal 0 .............................. <tloc>
  [120] pusharglistnoret 2 ...................... <me, tloc>
  [122] objcall 81 .............................. me.cameraCrop(tloc)
  [124] pushint8 1 .............................. <1>
  [126] setprop 106 ............................. AdWaitScore = 1
  [128] pushzero ................................ <0>
  [129] setprop 105 ............................. StateOfAd = 0
  [131] jmp [309]
  [134] getprop 104 ............................. <pTextShowState>
  [136] pushzero ................................ <0>
  [137] eq ...................................... <pTextShowState = 0>
  [138] getprop 105 ............................. <StateOfAd>
  [140] pushzero ................................ <0>
  [141] eq ...................................... <StateOfAd = 0>
  [142] and ..................................... <(pTextShowState = 0) and (StateOfAd = 0)>
  [143] jmpifz [291] ............................ if (pTextShowState = 0) and (StateOfAd = 0) then / else
  [146] getprop 103 ............................. <pTransition>
  [148] pushzero ................................ <0>
  [149] eq ...................................... <pTransition = 0>
  [150] jmpifz [176] ............................ if pTransition = 0 then / else
  [153] getprop 91 .............................. <pTargetObj>
  [155] pusharglist 1 ........................... <pTargetObj>
  [157] extcall 45 .............................. <voidp(pTargetObj)>
  [159] not ..................................... <not voidp(pTargetObj)>
  [160] jmpifz [173] ............................ if not voidp(pTargetObj) then
  [163] getparam 0 .............................. <me>
  [165] getprop 93 .............................. <pTargetSpr>
  [167] getobjprop 155 .......................... <pTargetSpr.loc>
  [169] pusharglistnoret 2 ...................... <me, pTargetSpr.loc>
  [171] objcall 78 .............................. me.cameraPan(pTargetSpr.loc)
  [173] jmp [288]
  [176] getprop 103 ............................. <pTransition>
  [178] peek 0 .................................. case pTransition of
  [180] pushcons 8 .............................. <"cameraPan">
  [182] eq
  [183] jmpifz [209] ............................ (case) "cameraPan":
  [186] getprop 91 .............................. <pTargetObj>
  [188] pusharglist 1 ........................... <pTargetObj>
  [190] extcall 45 .............................. <voidp(pTargetObj)>
  [192] not ..................................... <not voidp(pTargetObj)>
  [193] jmpifz [206] ............................ if not voidp(pTargetObj) then
  [196] getparam 0 .............................. <me>
  [198] getprop 93 .............................. <pTargetSpr>
  [200] getobjprop 155 .......................... <pTargetSpr.loc>
  [202] pusharglistnoret 2 ...................... <me, pTargetSpr.loc>
  [204] objcall 78 .............................. me.cameraPan(pTargetSpr.loc)
  [206] jmp [286]
  [209] peek 0
  [211] pushcons 6 .............................. <"fade">
  [213] eq
  [214] jmpifz [286] ............................ (case) "fade":
  [217] getprop 91 .............................. <pTargetObj>
  [219] pusharglist 1 ........................... <pTargetObj>
  [221] extcall 45 .............................. <voidp(pTargetObj)>
  [223] not ..................................... <not voidp(pTargetObj)>
  [224] jmpifz [286] ............................ if not voidp(pTargetObj) then
  [227] getprop 96 .............................. <pSprite>
  [229] getobjprop 55 ........................... <pSprite.member>
  [231] pushcons 1 .............................. <"fuse_screen">
  [233] pusharglist 1 ........................... <"fuse_screen">
  [235] extcall 56 .............................. <getmemnum("fuse_screen")>
  [237] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [239] extcall 55 .............................. <member(getmemnum("fuse_screen"))>
  [241] nteq .................................... <pSprite.member <> member(getmemnum("fuse_screen"))>
  [242] jmpifz [276] ............................ if pSprite.member <> member(getmemnum("fuse_screen")) then
  [245] getprop 96 .............................. <pSprite>
  [247] pushcons 1 .............................. <"fuse_screen">
  [249] pusharglist 1 ........................... <"fuse_screen">
  [251] extcall 56 .............................. <getmemnum("fuse_screen")>
  [253] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [255] extcall 55 .............................. <member(getmemnum("fuse_screen"))>
  [257] setobjprop 55 ........................... pSprite.member = member(getmemnum("fuse_screen"))
  [259] getprop 96 .............................. <pSprite>
  [261] pushzero ................................ <0>
  [262] setobjprop 145 .......................... pSprite.cursor = 0
  [264] pusharglist 0 ........................... <>
  [266] extcall 92 .............................. <VOID>
  [268] setprop 107 ............................. adIdNum = VOID
  [270] pusharglist 0 ........................... <>
  [272] extcall 92 .............................. <VOID>
  [274] setprop 141 ............................. adLink = VOID
  [276] getparam 0 .............................. <me>
  [278] getprop 93 .............................. <pTargetSpr>
  [280] getobjprop 155 .......................... <pTargetSpr.loc>
  [282] pusharglistnoret 2 ...................... <me, pTargetSpr.loc>
  [284] objcall 79 .............................. me.cameraFade(pTargetSpr.loc)
  [286] pop 1 ................................... end case
  [288] jmp [309]
  [291] getprop 105 ............................. <StateOfAd>
  [293] pushzero ................................ <0>
  [294] nteq .................................... <StateOfAd <> 0>
  [295] getprop 106 ............................. <AdWaitScore>
  [297] pushzero ................................ <0>
  [298] eq ...................................... <AdWaitScore = 0>
  [299] and ..................................... <(StateOfAd <> 0) and (AdWaitScore = 0)>
  [300] jmpifz [309] ............................ if (StateOfAd <> 0) and (AdWaitScore = 0) then
  [303] getparam 0 .............................. <me>
  [305] pusharglistnoret 1 ...................... <me>
  [307] objcall 80 .............................. me.ad_system()
  [309] getprop 104 ............................. <pTextShowState>
  [311] pushzero ................................ <0>
  [312] nteq .................................... <pTextShowState <> 0>
  [313] jmpifz [330] ............................ if pTextShowState <> 0 then
  [316] getparam 0 .............................. <me>
  [318] getprop 94 .............................. <pLastCropPoint>
  [320] pusharglistnoret 2 ...................... <me, pLastCropPoint>
  [322] objcall 81 .............................. me.cameraCrop(pLastCropPoint)
  [324] getparam 0 .............................. <me>
  [326] pusharglistnoret 1 ...................... <me>
  [328] objcall 77 .............................. me.showText()
  [330] ret
end

on showText me
  [  0] getprop 104 ............................. <pTextShowState>
  [  2] getprop 131 ............................. <pTextImgBuffer>
  [  4] getobjprop 166 .......................... <pTextImgBuffer.height>
  [  6] lt ...................................... <pTextShowState < pTextImgBuffer.height>
  [  7] jmpifz [ 53] ............................ if pTextShowState < pTextImgBuffer.height then / else
  [ 10] getprop 97 .............................. <pScrImg>
  [ 12] getprop 99 .............................. <pTextBgBoxImg>
  [ 14] pushzero ................................ <0>
  [ 15] getprop 83 .............................. <pwidth>
  [ 17] getprop 104 ............................. <pTextShowState>
  [ 19] sub ..................................... <pwidth - pTextShowState>
  [ 20] getprop 82 .............................. <pheight>
  [ 22] getprop 83 .............................. <pwidth>
  [ 24] pusharglist 4 ........................... <0, pwidth - pTextShowState, pheight, pwidth>
  [ 26] extcall 100 ............................. <rect(0, pwidth - pTextShowState, pheight, pwidth)>
  [ 28] getprop 99 .............................. <pTextBgBoxImg>
  [ 30] getobjprop 100 .......................... <pTextBgBoxImg.rect>
  [ 32] pushsymb 167 ............................ <#blend>
  [ 34] pushint8 40 ............................. <40>
  [ 36] pusharglist 2 ........................... <[#blend: 40]>
  [ 38] pushproplist ............................ <[#blend: 40]>
  [ 39] pusharglistnoret 5 ...................... <pScrImg, pTextBgBoxImg, rect(0, pwidth - pTextShowState, pheight, pwidth), pTextBgBoxImg.rect, [#blend: 40]>
  [ 41] objcall 163 ............................. pScrImg.copyPixels(pTextBgBoxImg, rect(0, pwidth - pTextShowState, pheight, pwidth), pTextBgBoxImg.rect, [#blend: 40])
  [ 43] getprop 104 ............................. <pTextShowState>
  [ 45] pushint8 2 .............................. <2>
  [ 47] add ..................................... <pTextShowState + 2>
  [ 48] setprop 104 ............................. pTextShowState = pTextShowState + 2
  [ 50] jmp [376]
  [ 53] getprop 104 ............................. <pTextShowState>
  [ 55] pushint8 20 ............................. <20>
  [ 57] add ..................................... <pTextShowState + 20>
  [ 58] setprop 104 ............................. pTextShowState = pTextShowState + 20
  [ 60] getprop 131 ............................. <pTextImgBuffer>
  [ 62] getobjprop 168 .......................... <pTextImgBuffer.width>
  [ 64] getprop 104 ............................. <pTextShowState>
  [ 66] getprop 131 ............................. <pTextImgBuffer>
  [ 68] getobjprop 166 .......................... <pTextImgBuffer.height>
  [ 70] sub ..................................... <pTextShowState - pTextImgBuffer.height>
  [ 71] sub ..................................... <pTextImgBuffer.width - (pTextShowState - pTextImgBuffer.height)>
  [ 72] setlocal 0 .............................. textLocH = pTextImgBuffer.width - (pTextShowState - pTextImgBuffer.height)
  [ 74] getlocal 0 .............................. <textLocH>
  [ 76] pushzero ................................ <0>
  [ 77] gt ...................................... <textLocH > 0>
  [ 78] jmpifz [170] ............................ if textLocH > 0 then / else
  [ 81] getprop 97 .............................. <pScrImg>
  [ 83] getprop 99 .............................. <pTextBgBoxImg>
  [ 85] pushzero ................................ <0>
  [ 86] getprop 83 .............................. <pwidth>
  [ 88] getprop 131 ............................. <pTextImgBuffer>
  [ 90] getobjprop 166 .......................... <pTextImgBuffer.height>
  [ 92] sub ..................................... <pwidth - pTextImgBuffer.height>
  [ 93] pushint8 2 .............................. <2>
  [ 95] sub ..................................... <pwidth - pTextImgBuffer.height - 2>
  [ 96] getprop 82 .............................. <pheight>
  [ 98] getprop 83 .............................. <pwidth>
  [100] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth>
  [102] extcall 100 ............................. <rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth)>
  [104] getprop 99 .............................. <pTextBgBoxImg>
  [106] getobjprop 100 .......................... <pTextBgBoxImg.rect>
  [108] pushsymb 167 ............................ <#blend>
  [110] pushint8 40 ............................. <40>
  [112] pusharglist 2 ........................... <[#blend: 40]>
  [114] pushproplist ............................ <[#blend: 40]>
  [115] pusharglistnoret 5 ...................... <pScrImg, pTextBgBoxImg, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), pTextBgBoxImg.rect, [#blend: 40]>
  [117] objcall 163 ............................. pScrImg.copyPixels(pTextBgBoxImg, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), pTextBgBoxImg.rect, [#blend: 40])
  [119] getprop 97 .............................. <pScrImg>
  [121] getprop 131 ............................. <pTextImgBuffer>
  [123] getlocal 0 .............................. <textLocH>
  [125] getprop 83 .............................. <pwidth>
  [127] getprop 131 ............................. <pTextImgBuffer>
  [129] getobjprop 166 .......................... <pTextImgBuffer.height>
  [131] sub ..................................... <pwidth - pTextImgBuffer.height>
  [132] getprop 82 .............................. <pheight>
  [134] getlocal 0 .............................. <textLocH>
  [136] add ..................................... <pheight + textLocH>
  [137] getprop 83 .............................. <pwidth>
  [139] pusharglist 4 ........................... <textLocH, pwidth - pTextImgBuffer.height, pheight + textLocH, pwidth>
  [141] extcall 100 ............................. <rect(textLocH, pwidth - pTextImgBuffer.height, pheight + textLocH, pwidth)>
  [143] getprop 131 ............................. <pTextImgBuffer>
  [145] getobjprop 100 .......................... <pTextImgBuffer.rect>
  [147] pushsymb 167 ............................ <#blend>
  [149] pushint8 100 ............................ <100>
  [151] getlocal 0 .............................. <textLocH>
  [153] pushint8 8 .............................. <8>
  [155] sub ..................................... <textLocH - 8>
  [156] sub ..................................... <100 - (textLocH - 8)>
  [157] pushint8 20 ............................. <20>
  [159] sub ..................................... <100 - (textLocH - 8) - 20>
  [160] pusharglist 2 ........................... <[#blend: 100 - (textLocH - 8) - 20]>
  [162] pushproplist ............................ <[#blend: 100 - (textLocH - 8) - 20]>
  [163] pusharglistnoret 5 ...................... <pScrImg, pTextImgBuffer, rect(textLocH, pwidth - pTextImgBuffer.height, pheight + textLocH, pwidth), pTextImgBuffer.rect, [#blend: 100 - (textLocH - 8) - 20]>
  [165] objcall 163 ............................. pScrImg.copyPixels(pTextImgBuffer, rect(textLocH, pwidth - pTextImgBuffer.height, pheight + textLocH, pwidth), pTextImgBuffer.rect, [#blend: 100 - (textLocH - 8) - 20])
  [167] jmp [376]
  [170] getmovieprop 134 ........................ <the milliSeconds>
  [172] getprop 133 ............................. <pTextShowTime>
  [174] lt ...................................... <the milliSeconds < pTextShowTime>
  [175] jmpifz [269] ............................ if the milliSeconds < pTextShowTime then / else
  [178] getprop 135 ............................. <pTextBlend>
  [180] pushint8 80 ............................. <80>
  [182] gt ...................................... <pTextBlend > 80>
  [183] jmpifz [193] ............................ if pTextBlend > 80 then
  [186] getprop 135 ............................. <pTextBlend>
  [188] pushint8 10 ............................. <10>
  [190] sub ..................................... <pTextBlend - 10>
  [191] setprop 135 ............................. pTextBlend = pTextBlend - 10
  [193] getprop 97 .............................. <pScrImg>
  [195] getprop 99 .............................. <pTextBgBoxImg>
  [197] pushzero ................................ <0>
  [198] getprop 83 .............................. <pwidth>
  [200] getprop 131 ............................. <pTextImgBuffer>
  [202] getobjprop 166 .......................... <pTextImgBuffer.height>
  [204] sub ..................................... <pwidth - pTextImgBuffer.height>
  [205] pushint8 2 .............................. <2>
  [207] sub ..................................... <pwidth - pTextImgBuffer.height - 2>
  [208] getprop 82 .............................. <pheight>
  [210] getprop 83 .............................. <pwidth>
  [212] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth>
  [214] extcall 100 ............................. <rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth)>
  [216] getprop 99 .............................. <pTextBgBoxImg>
  [218] getobjprop 100 .......................... <pTextBgBoxImg.rect>
  [220] pushsymb 167 ............................ <#blend>
  [222] pushint8 40 ............................. <40>
  [224] pusharglist 2 ........................... <[#blend: 40]>
  [226] pushproplist ............................ <[#blend: 40]>
  [227] pusharglistnoret 5 ...................... <pScrImg, pTextBgBoxImg, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), pTextBgBoxImg.rect, [#blend: 40]>
  [229] objcall 163 ............................. pScrImg.copyPixels(pTextBgBoxImg, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), pTextBgBoxImg.rect, [#blend: 40])
  [231] getprop 97 .............................. <pScrImg>
  [233] getprop 131 ............................. <pTextImgBuffer>
  [235] pushzero ................................ <0>
  [236] getprop 83 .............................. <pwidth>
  [238] getprop 131 ............................. <pTextImgBuffer>
  [240] getobjprop 166 .......................... <pTextImgBuffer.height>
  [242] sub ..................................... <pwidth - pTextImgBuffer.height>
  [243] getprop 82 .............................. <pheight>
  [245] getprop 83 .............................. <pwidth>
  [247] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height, pheight, pwidth>
  [249] extcall 100 ............................. <rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth)>
  [251] getprop 131 ............................. <pTextImgBuffer>
  [253] getobjprop 100 .......................... <pTextImgBuffer.rect>
  [255] pushsymb 167 ............................ <#blend>
  [257] getprop 135 ............................. <pTextBlend>
  [259] pusharglist 2 ........................... <[#blend: pTextBlend]>
  [261] pushproplist ............................ <[#blend: pTextBlend]>
  [262] pusharglistnoret 5 ...................... <pScrImg, pTextImgBuffer, rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth), pTextImgBuffer.rect, [#blend: pTextBlend]>
  [264] objcall 163 ............................. pScrImg.copyPixels(pTextImgBuffer, rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth), pTextImgBuffer.rect, [#blend: pTextBlend])
  [266] jmp [376]
  [269] getprop 135 ............................. <pTextBlend>
  [271] pushzero ................................ <0>
  [272] gt ...................................... <pTextBlend > 0>
  [273] jmpifz [283] ............................ if pTextBlend > 0 then
  [276] getprop 135 ............................. <pTextBlend>
  [278] pushint8 8 .............................. <8>
  [280] sub ..................................... <pTextBlend - 8>
  [281] setprop 135 ............................. pTextBlend = pTextBlend - 8
  [283] getprop 135 ............................. <pTextBlend>
  [285] pushzero ................................ <0>
  [286] lteq .................................... <pTextBlend <= 0>
  [287] jmpifz [296] ............................ if pTextBlend <= 0 then
  [290] pushzero ................................ <0>
  [291] setprop 135 ............................. pTextBlend = 0
  [293] pushzero ................................ <0>
  [294] setprop 104 ............................. pTextShowState = 0
  [296] getprop 97 .............................. <pScrImg>
  [298] getprop 99 .............................. <pTextBgBoxImg>
  [300] pushzero ................................ <0>
  [301] getprop 83 .............................. <pwidth>
  [303] getprop 131 ............................. <pTextImgBuffer>
  [305] getobjprop 166 .......................... <pTextImgBuffer.height>
  [307] sub ..................................... <pwidth - pTextImgBuffer.height>
  [308] pushint8 2 .............................. <2>
  [310] sub ..................................... <pwidth - pTextImgBuffer.height - 2>
  [311] getprop 82 .............................. <pheight>
  [313] getprop 83 .............................. <pwidth>
  [315] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth>
  [317] extcall 100 ............................. <rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth)>
  [319] getprop 99 .............................. <pTextBgBoxImg>
  [321] getobjprop 100 .......................... <pTextBgBoxImg.rect>
  [323] pushsymb 167 ............................ <#blend>
  [325] getprop 135 ............................. <pTextBlend>
  [327] pushint8 2 .............................. <2>
  [329] div ..................................... <pTextBlend / 2>
  [330] pusharglist 1 ........................... <pTextBlend / 2>
  [332] extcall 169 ............................. <integer(pTextBlend / 2)>
  [334] pusharglist 2 ........................... <[#blend: integer(pTextBlend / 2)]>
  [336] pushproplist ............................ <[#blend: integer(pTextBlend / 2)]>
  [337] pusharglistnoret 5 ...................... <pScrImg, pTextBgBoxImg, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), pTextBgBoxImg.rect, [#blend: integer(pTextBlend / 2)]>
  [339] objcall 163 ............................. pScrImg.copyPixels(pTextBgBoxImg, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), pTextBgBoxImg.rect, [#blend: integer(pTextBlend / 2)])
  [341] getprop 97 .............................. <pScrImg>
  [343] getprop 131 ............................. <pTextImgBuffer>
  [345] pushzero ................................ <0>
  [346] getprop 83 .............................. <pwidth>
  [348] getprop 131 ............................. <pTextImgBuffer>
  [350] getobjprop 166 .......................... <pTextImgBuffer.height>
  [352] sub ..................................... <pwidth - pTextImgBuffer.height>
  [353] getprop 82 .............................. <pheight>
  [355] getprop 83 .............................. <pwidth>
  [357] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height, pheight, pwidth>
  [359] extcall 100 ............................. <rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth)>
  [361] getprop 131 ............................. <pTextImgBuffer>
  [363] getobjprop 100 .......................... <pTextImgBuffer.rect>
  [365] pushsymb 167 ............................ <#blend>
  [367] getprop 135 ............................. <pTextBlend>
  [369] pusharglist 2 ........................... <[#blend: pTextBlend]>
  [371] pushproplist ............................ <[#blend: pTextBlend]>
  [372] pusharglistnoret 5 ...................... <pScrImg, pTextImgBuffer, rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth), pTextImgBuffer.rect, [#blend: pTextBlend]>
  [374] objcall 163 ............................. pScrImg.copyPixels(pTextImgBuffer, rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth), pTextImgBuffer.rect, [#blend: pTextBlend])
  [376] ret
end

on cameraPan me, tTransitionTargetPoint
  [  0] getprop 94 .............................. <pLastCropPoint>
  [  2] getobjprop 171 .......................... <pLastCropPoint.locH>
  [  4] setlocal 0 .............................. tX = pLastCropPoint.locH
  [  6] getprop 94 .............................. <pLastCropPoint>
  [  8] getobjprop 172 .......................... <pLastCropPoint.locV>
  [ 10] setlocal 1 .............................. tY = pLastCropPoint.locV
  [ 12] getparam 1 .............................. <tTransitionTargetPoint>
  [ 14] getobjprop 171 .......................... <tTransitionTargetPoint.locH>
  [ 16] getlocal 0 .............................. <tX>
  [ 18] sub ..................................... <tTransitionTargetPoint.locH - tX>
  [ 19] getprop 88 .............................. <pSpeed>
  [ 21] pushint8 100 ............................ <100>
  [ 23] div ..................................... <pSpeed / 100>
  [ 24] mul ..................................... <(tTransitionTargetPoint.locH - tX) * (pSpeed / 100)>
  [ 25] setlocal 2 .............................. tAX = (tTransitionTargetPoint.locH - tX) * (pSpeed / 100)
  [ 27] getparam 1 .............................. <tTransitionTargetPoint>
  [ 29] getobjprop 172 .......................... <tTransitionTargetPoint.locV>
  [ 31] getlocal 1 .............................. <tY>
  [ 33] sub ..................................... <tTransitionTargetPoint.locV - tY>
  [ 34] getprop 88 .............................. <pSpeed>
  [ 36] pushint8 100 ............................ <100>
  [ 38] div ..................................... <pSpeed / 100>
  [ 39] mul ..................................... <(tTransitionTargetPoint.locV - tY) * (pSpeed / 100)>
  [ 40] setlocal 3 .............................. tAY = (tTransitionTargetPoint.locV - tY) * (pSpeed / 100)
  [ 42] getprop 84 .............................. <pVX>
  [ 44] getlocal 2 .............................. <tAX>
  [ 46] add ..................................... <pVX + tAX>
  [ 47] getprop 89 .............................. <pFlexible>
  [ 49] pushint8 100 ............................ <100>
  [ 51] div ..................................... <pFlexible / 100>
  [ 52] mul ..................................... <(pVX + tAX) * (pFlexible / 100)>
  [ 53] setprop 84 .............................. pVX = (pVX + tAX) * (pFlexible / 100)
  [ 55] getprop 85 .............................. <pVY>
  [ 57] getlocal 3 .............................. <tAY>
  [ 59] add ..................................... <pVY + tAY>
  [ 60] getprop 89 .............................. <pFlexible>
  [ 62] pushint8 100 ............................ <100>
  [ 64] div ..................................... <pFlexible / 100>
  [ 65] mul ..................................... <(pVY + tAY) * (pFlexible / 100)>
  [ 66] setprop 85 .............................. pVY = (pVY + tAY) * (pFlexible / 100)
  [ 68] getlocal 0 .............................. <tX>
  [ 70] getprop 84 .............................. <pVX>
  [ 72] add ..................................... <tX + pVX>
  [ 73] setlocal 0 .............................. tX = tX + pVX
  [ 75] getlocal 1 .............................. <tY>
  [ 77] getprop 85 .............................. <pVY>
  [ 79] add ..................................... <tY + pVY>
  [ 80] setlocal 1 .............................. tY = tY + pVY
  [ 82] getparam 0 .............................. <me>
  [ 84] getlocal 0 .............................. <tX>
  [ 86] getlocal 1 .............................. <tY>
  [ 88] pusharglist 2 ........................... <tX, tY>
  [ 90] extcall 95 .............................. <point(tX, tY)>
  [ 92] pusharglistnoret 2 ...................... <me, point(tX, tY)>
  [ 94] objcall 81 .............................. me.cameraCrop(point(tX, tY))
  [ 96] ret
end

on cameraFade me, tTransitionTargetPoint
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tTransitionTargetPoint>
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, tTransitionTargetPoint, 1>
  [  8] objcall 81 .............................. me.cameraCrop(tTransitionTargetPoint, 1)
  [ 10] getprop 90 .............................. <pTransitState>
  [ 12] getprop 124 ............................. <pFadeSpeed>
  [ 14] add ..................................... <pTransitState + pFadeSpeed>
  [ 15] setprop 90 .............................. pTransitState = pTransitState + pFadeSpeed
  [ 17] getprop 97 .............................. <pScrImg>
  [ 19] getprop 123 ............................. <pTransitBuffer>
  [ 21] getprop 123 ............................. <pTransitBuffer>
  [ 23] getobjprop 100 .......................... <pTransitBuffer.rect>
  [ 25] pushcons 1 .............................. <"fuse_screen">
  [ 27] pusharglist 1 ........................... <"fuse_screen">
  [ 29] extcall 56 .............................. <getmemnum("fuse_screen")>
  [ 31] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [ 33] extcall 55 .............................. <member(getmemnum("fuse_screen"))>
  [ 35] getobjprop 100 .......................... <member(getmemnum("fuse_screen")).rect>
  [ 37] pushsymb 167 ............................ <#blend>
  [ 39] getprop 90 .............................. <pTransitState>
  [ 41] pusharglist 2 ........................... <[#blend: pTransitState]>
  [ 43] pushproplist ............................ <[#blend: pTransitState]>
  [ 44] pusharglistnoret 5 ...................... <pScrImg, pTransitBuffer, pTransitBuffer.rect, member(getmemnum("fuse_screen")).rect, [#blend: pTransitState]>
  [ 46] objcall 163 ............................. pScrImg.copyPixels(pTransitBuffer, pTransitBuffer.rect, member(getmemnum("fuse_screen")).rect, [#blend: pTransitState])
  [ 48] getprop 90 .............................. <pTransitState>
  [ 50] pushint8 99 ............................. <99>
  [ 52] gt ...................................... <pTransitState > 99>
  [ 53] jmpifz [ 59] ............................ if pTransitState > 99 then
  [ 56] pushzero ................................ <0>
  [ 57] setprop 103 ............................. pTransition = 0
  [ 59] ret
end

on ad_system me
  [  0] getprop 103 ............................. <pTransition>
  [  2] pushzero ................................ <0>
  [  3] nteq .................................... <pTransition <> 0>
  [  4] jmpifz [ 66] ............................ if pTransition <> 0 then / else
  [  7] getprop 104 ............................. <pTextShowState>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <pTextShowState = 0>
  [ 11] jmpifz [ 63] ............................ if pTextShowState = 0 then
  [ 14] getprop 90 .............................. <pTransitState>
  [ 16] getprop 124 ............................. <pFadeSpeed>
  [ 18] add ..................................... <pTransitState + pFadeSpeed>
  [ 19] setprop 90 .............................. pTransitState = pTransitState + pFadeSpeed
  [ 21] getprop 97 .............................. <pScrImg>
  [ 23] getprop 123 ............................. <pTransitBuffer>
  [ 25] getprop 123 ............................. <pTransitBuffer>
  [ 27] getobjprop 100 .......................... <pTransitBuffer.rect>
  [ 29] pushcons 1 .............................. <"fuse_screen">
  [ 31] pusharglist 1 ........................... <"fuse_screen">
  [ 33] extcall 56 .............................. <getmemnum("fuse_screen")>
  [ 35] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [ 37] extcall 55 .............................. <member(getmemnum("fuse_screen"))>
  [ 39] getobjprop 100 .......................... <member(getmemnum("fuse_screen")).rect>
  [ 41] pushsymb 167 ............................ <#blend>
  [ 43] getprop 90 .............................. <pTransitState>
  [ 45] pusharglist 2 ........................... <[#blend: pTransitState]>
  [ 47] pushproplist ............................ <[#blend: pTransitState]>
  [ 48] pusharglistnoret 5 ...................... <pScrImg, pTransitBuffer, pTransitBuffer.rect, member(getmemnum("fuse_screen")).rect, [#blend: pTransitState]>
  [ 50] objcall 163 ............................. pScrImg.copyPixels(pTransitBuffer, pTransitBuffer.rect, member(getmemnum("fuse_screen")).rect, [#blend: pTransitState])
  [ 52] getprop 90 .............................. <pTransitState>
  [ 54] pushint8 99 ............................. <99>
  [ 56] gt ...................................... <pTransitState > 99>
  [ 57] jmpifz [ 63] ............................ if pTransitState > 99 then
  [ 60] pushzero ................................ <0>
  [ 61] setprop 103 ............................. pTransition = 0
  [ 63] jmp [165]
  [ 66] getprop 96 .............................. <pSprite>
  [ 68] getchainedprop 55 ....................... <pSprite.member>
  [ 70] getobjprop 178 .......................... <pSprite.member.name>
  [ 72] getprop 140 ............................. <adMember>
  [ 74] nteq .................................... <pSprite.member.name <> adMember>
  [ 75] jmpifz [ 92] ............................ if pSprite.member.name <> adMember then
  [ 78] getprop 96 .............................. <pSprite>
  [ 80] getprop 140 ............................. <adMember>
  [ 82] pusharglist 1 ........................... <adMember>
  [ 84] extcall 56 .............................. <getmemnum(adMember)>
  [ 86] pusharglist 1 ........................... <getmemnum(adMember)>
  [ 88] extcall 55 .............................. <member(getmemnum(adMember))>
  [ 90] setobjprop 55 ........................... pSprite.member = member(getmemnum(adMember))
  [ 92] getmovieprop 134 ........................ <the milliSeconds>
  [ 94] getprop 143 ............................. <adShowTime>
  [ 96] gt ...................................... <the milliSeconds > adShowTime>
  [ 97] jmpifz [165] ............................ if the milliSeconds > adShowTime then
  [100] pushzero ................................ <0>
  [101] setprop 105 ............................. StateOfAd = 0
  [103] pushcons 6 .............................. <"fade">
  [105] setprop 103 ............................. pTransition = "fade"
  [107] pusharglist 0 ........................... <>
  [109] extcall 92 .............................. <VOID>
  [111] setprop 91 .............................. pTargetObj = VOID
  [113] getprop 82 .............................. <pheight>
  [115] getprop 83 .............................. <pwidth>
  [117] pushint8 16 ............................. <16>
  [119] pusharglist 3 ........................... <pheight, pwidth, 16>
  [121] extcall 98 .............................. <image(pheight, pwidth, 16)>
  [123] setprop 123 ............................. pTransitBuffer = image(pheight, pwidth, 16)
  [125] getprop 123 ............................. <pTransitBuffer>
  [127] pushzero ................................ <0>
  [128] pushzero ................................ <0>
  [129] getprop 82 .............................. <pheight>
  [131] getprop 83 .............................. <pwidth>
  [133] pusharglist 4 ........................... <0, 0, pheight, pwidth>
  [135] extcall 100 ............................. <rect(0, 0, pheight, pwidth)>
  [137] pushzero ................................ <0>
  [138] pushzero ................................ <0>
  [139] pushzero ................................ <0>
  [140] pusharglist 3 ........................... <0, 0, 0>
  [142] extcall 101 ............................. <rgb(0, 0, 0)>
  [144] pusharglistnoret 3 ...................... <pTransitBuffer, rect(0, 0, pheight, pwidth), rgb(0, 0, 0)>
  [146] objcall 102 ............................. pTransitBuffer.fill(rect(0, 0, pheight, pwidth), rgb(0, 0, 0))
  [148] pushzero ................................ <0>
  [149] setprop 90 .............................. pTransitState = 0
  [151] pushint8 20 ............................. <20>
  [153] setprop 124 ............................. pFadeSpeed = 20
  [155] getparam 0 .............................. <me>
  [157] getprop 94 .............................. <pLastCropPoint>
  [159] pushint8 1 .............................. <1>
  [161] pusharglistnoret 3 ...................... <me, pLastCropPoint, 1>
  [163] objcall 81 .............................. me.cameraCrop(pLastCropPoint, 1)
  [165] ret
end

on cameraCrop me, tpoint, tBufferImage
  [  0] getparam 1 .............................. <tpoint>
  [  2] setprop 94 .............................. pLastCropPoint = tpoint
  [  4] getprop 93 .............................. <pTargetSpr>
  [  6] pusharglist 1 ........................... <pTargetSpr>
  [  8] extcall 45 .............................. <voidp(pTargetSpr)>
  [ 10] jmpifz [ 27] ............................ if voidp(pTargetSpr) then
  [ 13] getparam 0 .............................. <me>
  [ 15] pushcons 17 ............................. <"Target sprite not defined!">
  [ 17] pushsymb 81 ............................. <#cameraCrop>
  [ 19] pusharglist 3 ........................... <me, "Target sprite not defined!", #cameraCrop>
  [ 21] extcall 119 ............................. <error(me, "Target sprite not defined!", #cameraCrop)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Target sprite not defined!", #cameraCrop)>
  [ 25] extcall 8 ............................... return error(me, "Target sprite not defined!", #cameraCrop)
  [ 27] getparam 1 .............................. <tpoint>
  [ 29] pushzero ................................ <0>
  [ 30] pushint8 18 ............................. <18>
  [ 32] inv ..................................... <-18>
  [ 33] pusharglist 2 ........................... <0, -18>
  [ 35] extcall 95 .............................. <point(0, -18)>
  [ 37] add ..................................... <tpoint + point(0, -18)>
  [ 38] setparam 1 .............................. tpoint = tpoint + point(0, -18)
  [ 40] getprop 87 .............................. <pZoom>
  [ 42] pushint8 8 .............................. <8>
  [ 44] eq ...................................... <pZoom = 8>
  [ 45] jmpifz [ 61] ............................ if pZoom = 8 then
  [ 48] getparam 1 .............................. <tpoint>
  [ 50] pushzero ................................ <0>
  [ 51] pushint8 6 .............................. <6>
  [ 53] inv ..................................... <-6>
  [ 54] pusharglist 2 ........................... <0, -6>
  [ 56] extcall 95 .............................. <point(0, -6)>
  [ 58] add ..................................... <tpoint + point(0, -6)>
  [ 59] setparam 1 .............................. tpoint = tpoint + point(0, -6)
  [ 61] getprop 93 .............................. <pTargetSpr>
  [ 63] getobjprop 179 .......................... <pTargetSpr.flipH>
  [ 65] pushzero ................................ <0>
  [ 66] eq ...................................... <pTargetSpr.flipH = 0>
  [ 67] jmpifz [ 82] ............................ if pTargetSpr.flipH = 0 then
  [ 70] getparam 1 .............................. <tpoint>
  [ 72] getprop 86 .............................. <pXFactor>
  [ 74] pushzero ................................ <0>
  [ 75] pusharglist 2 ........................... <pXFactor, 0>
  [ 77] extcall 95 .............................. <point(pXFactor, 0)>
  [ 79] add ..................................... <tpoint + point(pXFactor, 0)>
  [ 80] setparam 1 .............................. tpoint = tpoint + point(pXFactor, 0)
  [ 82] getparam 1 .............................. <tpoint>
  [ 84] getobjprop 171 .......................... <tpoint.locH>
  [ 86] getprop 82 .............................. <pheight>
  [ 88] getprop 87 .............................. <pZoom>
  [ 90] div ..................................... <pheight / pZoom>
  [ 91] sub ..................................... <tpoint.locH - (pheight / pZoom)>
  [ 92] pushzero ................................ <0>
  [ 93] lt ...................................... <(tpoint.locH - (pheight / pZoom)) < 0>
  [ 94] jmpifz [106] ............................ if (tpoint.locH - (pheight / pZoom)) < 0 then
  [ 97] getparam 1 .............................. <tpoint>
  [ 99] getprop 82 .............................. <pheight>
  [101] getprop 87 .............................. <pZoom>
  [103] div ..................................... <pheight / pZoom>
  [104] setobjprop 171 .......................... tpoint.locH = pheight / pZoom
  [106] getparam 1 .............................. <tpoint>
  [108] getobjprop 171 .......................... <tpoint.locH>
  [110] getprop 82 .............................. <pheight>
  [112] getprop 87 .............................. <pZoom>
  [114] div ..................................... <pheight / pZoom>
  [115] add ..................................... <tpoint.locH + (pheight / pZoom)>
  [116] pusharglist 0 ........................... <>
  [118] thebuiltin 180 .......................... <the stageRight>
  [120] pusharglist 0 ........................... <>
  [122] thebuiltin 181 .......................... <the stageLeft>
  [124] sub ..................................... <the stageRight - the stageLeft>
  [125] gt ...................................... <(tpoint.locH + (pheight / pZoom)) > (the stageRight - the stageLeft)>
  [126] jmpifz [148] ............................ if (tpoint.locH + (pheight / pZoom)) > (the stageRight - the stageLeft) then
  [129] getparam 1 .............................. <tpoint>
  [131] pusharglist 0 ........................... <>
  [133] thebuiltin 180 .......................... <the stageRight>
  [135] pusharglist 0 ........................... <>
  [137] thebuiltin 181 .......................... <the stageLeft>
  [139] sub ..................................... <the stageRight - the stageLeft>
  [140] getprop 82 .............................. <pheight>
  [142] getprop 87 .............................. <pZoom>
  [144] div ..................................... <pheight / pZoom>
  [145] sub ..................................... <the stageRight - the stageLeft - (pheight / pZoom)>
  [146] setobjprop 171 .......................... tpoint.locH = the stageRight - the stageLeft - (pheight / pZoom)
  [148] getparam 1 .............................. <tpoint>
  [150] getobjprop 172 .......................... <tpoint.locV>
  [152] getprop 83 .............................. <pwidth>
  [154] getprop 87 .............................. <pZoom>
  [156] div ..................................... <pwidth / pZoom>
  [157] sub ..................................... <tpoint.locV - (pwidth / pZoom)>
  [158] pushzero ................................ <0>
  [159] lt ...................................... <(tpoint.locV - (pwidth / pZoom)) < 0>
  [160] jmpifz [172] ............................ if (tpoint.locV - (pwidth / pZoom)) < 0 then
  [163] getparam 1 .............................. <tpoint>
  [165] getprop 83 .............................. <pwidth>
  [167] getprop 87 .............................. <pZoom>
  [169] div ..................................... <pwidth / pZoom>
  [170] setobjprop 172 .......................... tpoint.locV = pwidth / pZoom
  [172] getparam 1 .............................. <tpoint>
  [174] getobjprop 172 .......................... <tpoint.locV>
  [176] getprop 83 .............................. <pwidth>
  [178] getprop 87 .............................. <pZoom>
  [180] div ..................................... <pwidth / pZoom>
  [181] add ..................................... <tpoint.locV + (pwidth / pZoom)>
  [182] pushint16 480 ........................... <480>
  [185] gt ...................................... <(tpoint.locV + (pwidth / pZoom)) > 480>
  [186] jmpifz [202] ............................ if (tpoint.locV + (pwidth / pZoom)) > 480 then
  [189] getparam 1 .............................. <tpoint>
  [191] pushint16 480 ........................... <480>
  [194] getprop 83 .............................. <pwidth>
  [196] getprop 87 .............................. <pZoom>
  [198] div ..................................... <pwidth / pZoom>
  [199] sub ..................................... <480 - (pwidth / pZoom)>
  [200] setobjprop 172 .......................... tpoint.locV = 480 - (pwidth / pZoom)
  [202] getparam 1 .............................. <tpoint>
  [204] getobjprop 171 .......................... <tpoint.locH>
  [206] getprop 82 .............................. <pheight>
  [208] getprop 87 .............................. <pZoom>
  [210] div ..................................... <pheight / pZoom>
  [211] sub ..................................... <tpoint.locH - (pheight / pZoom)>
  [212] getparam 1 .............................. <tpoint>
  [214] getobjprop 172 .......................... <tpoint.locV>
  [216] getprop 83 .............................. <pwidth>
  [218] getprop 87 .............................. <pZoom>
  [220] div ..................................... <pwidth / pZoom>
  [221] sub ..................................... <tpoint.locV - (pwidth / pZoom)>
  [222] getparam 1 .............................. <tpoint>
  [224] getobjprop 171 .......................... <tpoint.locH>
  [226] getprop 82 .............................. <pheight>
  [228] getprop 87 .............................. <pZoom>
  [230] div ..................................... <pheight / pZoom>
  [231] add ..................................... <tpoint.locH + (pheight / pZoom)>
  [232] getparam 1 .............................. <tpoint>
  [234] getobjprop 172 .......................... <tpoint.locV>
  [236] getprop 83 .............................. <pwidth>
  [238] getprop 87 .............................. <pZoom>
  [240] div ..................................... <pwidth / pZoom>
  [241] add ..................................... <tpoint.locV + (pwidth / pZoom)>
  [242] pusharglist 4 ........................... <tpoint.locH - (pheight / pZoom), tpoint.locV - (pwidth / pZoom), tpoint.locH + (pheight / pZoom), tpoint.locV + (pwidth / pZoom)>
  [244] extcall 100 ............................. <rect(tpoint.locH - (pheight / pZoom), tpoint.locV - (pwidth / pZoom), tpoint.locH + (pheight / pZoom), tpoint.locV + (pwidth / pZoom))>
  [246] setlocal 0 .............................. tCropRect = rect(tpoint.locH - (pheight / pZoom), tpoint.locV - (pwidth / pZoom), tpoint.locH + (pheight / pZoom), tpoint.locV + (pwidth / pZoom))
  [248] getmovieprop 182 ........................ <the stage>
  [250] getchainedprop 98 ....................... <(the stage).image>
  [252] getlocal 0 .............................. <tCropRect>
  [254] pusharglist 2 ........................... <(the stage).image, tCropRect>
  [256] objcall 183 ............................. <(the stage).image.crop(tCropRect)>
  [258] setlocal 1 .............................. tCropScrImg = (the stage).image.crop(tCropRect)
  [260] getparam 2 .............................. <tBufferImage>
  [262] pusharglist 1 ........................... <tBufferImage>
  [264] extcall 45 .............................. <voidp(tBufferImage)>
  [266] jmpifz [294] ............................ if voidp(tBufferImage) then / else
  [269] getprop 97 .............................. <pScrImg>
  [271] getlocal 1 .............................. <tCropScrImg>
  [273] pushzero ................................ <0>
  [274] pushzero ................................ <0>
  [275] getprop 82 .............................. <pheight>
  [277] getprop 83 .............................. <pwidth>
  [279] pusharglist 4 ........................... <0, 0, pheight, pwidth>
  [281] extcall 100 ............................. <rect(0, 0, pheight, pwidth)>
  [283] getlocal 1 .............................. <tCropScrImg>
  [285] getobjprop 100 .......................... <tCropScrImg.rect>
  [287] pusharglistnoret 4 ...................... <pScrImg, tCropScrImg, rect(0, 0, pheight, pwidth), tCropScrImg.rect>
  [289] objcall 163 ............................. pScrImg.copyPixels(tCropScrImg, rect(0, 0, pheight, pwidth), tCropScrImg.rect)
  [291] jmp [316]
  [294] getprop 123 ............................. <pTransitBuffer>
  [296] getlocal 1 .............................. <tCropScrImg>
  [298] pushzero ................................ <0>
  [299] pushzero ................................ <0>
  [300] getprop 82 .............................. <pheight>
  [302] getprop 83 .............................. <pwidth>
  [304] pusharglist 4 ........................... <0, 0, pheight, pwidth>
  [306] extcall 100 ............................. <rect(0, 0, pheight, pwidth)>
  [308] getlocal 1 .............................. <tCropScrImg>
  [310] getobjprop 100 .......................... <tCropScrImg.rect>
  [312] pusharglistnoret 4 ...................... <pTransitBuffer, tCropScrImg, rect(0, 0, pheight, pwidth), tCropScrImg.rect>
  [314] objcall 163 ............................. pTransitBuffer.copyPixels(tCropScrImg, rect(0, 0, pheight, pwidth), tCropScrImg.rect)
  [316] ret
end
