property pCryptoParams, pClientSecret

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 26 .............................. pCryptoParams = [:]
  [  5] pusharglist 0 ........................... <[]>
  [  7] pushlist ................................ <[]>
  [  8] setlocal 0 .............................. pMD5ChecksumArr = []
  [ 10] pushsymb 24 ............................. <#hideLogin>
  [ 12] getparam 0 .............................. <me>
  [ 14] pusharglist 1 ........................... <me>
  [ 16] objcall 28 .............................. <me.getID()>
  [ 18] pushsymb 24 ............................. <#hideLogin>
  [ 20] pusharglistnoret 3 ...................... <#hideLogin, me.getID(), #hideLogin>
  [ 22] extcall 27 .............................. registerMessage(#hideLogin, me.getID(), #hideLogin)
  [ 24] getparam 0 .............................. <me>
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglist 2 ........................... <me, 1>
  [ 30] objcall 25 .............................. <me.regMsgList(1)>
  [ 32] pusharglistnoret 1 ...................... <me.regMsgList(1)>
  [ 34] extcall 29 .............................. return me.regMsgList(1)
  [ 36] ret
end

on deconstruct me
  [  0] pushsymb 33 ............................. <#performLogin>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 28 .............................. <me.getID()>
  [  8] pusharglistnoret 2 ...................... <#performLogin, me.getID()>
  [ 10] extcall 32 .............................. unregisterMessage(#performLogin, me.getID())
  [ 12] pushsymb 24 ............................. <#hideLogin>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 28 .............................. <me.getID()>
  [ 20] pusharglistnoret 2 ...................... <#hideLogin, me.getID()>
  [ 22] extcall 32 .............................. unregisterMessage(#hideLogin, me.getID())
  [ 24] getparam 0 .............................. <me>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglist 2 ........................... <me, 0>
  [ 29] objcall 25 .............................. <me.regMsgList(0)>
  [ 31] pusharglistnoret 1 ...................... <me.regMsgList(0)>
  [ 33] extcall 29 .............................. return me.regMsgList(0)
  [ 35] ret
end

on handleDisconnect me, tMsg
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 0 .............................. <"Connection was disconnected:">
  [  4] getparam 1 .............................. <tMsg>
  [  6] getchainedprop 35 ....................... <tMsg.connection>
  [  8] pusharglist 1 ........................... <tMsg.connection>
  [ 10] objcall 28 .............................. <tMsg.connection.getID()>
  [ 12] joinpadstr .............................. <"Connection was disconnected:" && tMsg.connection.getID()>
  [ 13] pushsymb 2 .............................. <#handleDisconnect>
  [ 15] pushsymb 36 ............................. <#dummy>
  [ 17] pusharglistnoret 4 ...................... <me, "Connection was disconnected:" && tMsg.connection.getID(), #handleDisconnect, #dummy>
  [ 19] extcall 34 .............................. error(me, "Connection was disconnected:" && tMsg.connection.getID(), #handleDisconnect, #dummy)
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 1 ........................... <me>
  [ 25] objcall 37 .............................. <me.getInterface()>
  [ 27] pusharglist 1 ........................... <me.getInterface()>
  [ 29] objcall 38 .............................. <me.getInterface().showDisconnect()>
  [ 31] pusharglistnoret 1 ...................... <me.getInterface().showDisconnect()>
  [ 33] extcall 29 .............................. return me.getInterface().showDisconnect()
  [ 35] ret
end

on handleHello me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] getchainedprop 35 ....................... <tMsg.connection>
  [  4] pushcons 1 .............................. <"INIT_CRYPTO">
  [  6] pusharglist 2 ........................... <tMsg.connection, "INIT_CRYPTO">
  [  8] objcall 40 .............................. <tMsg.connection.send("INIT_CRYPTO")>
  [ 10] pusharglistnoret 1 ...................... <tMsg.connection.send("INIT_CRYPTO")>
  [ 12] extcall 29 .............................. return tMsg.connection.send("INIT_CRYPTO")
  [ 14] ret
end

on handleSessionParameters me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] getchainedprop 35 ....................... <tMsg.connection>
  [  4] pusharglist 1 ........................... <tMsg.connection>
  [  6] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [  8] setlocal 0 .............................. tPairsCount = tMsg.connection.GetIntFrom()
  [ 10] getlocal 0 .............................. <tPairsCount>
  [ 12] pusharglist 1 ........................... <tPairsCount>
  [ 14] extcall 42 .............................. <integerp(tPairsCount)>
  [ 16] jmpifz [438] ............................ if integerp(tPairsCount) then
  [ 19] getlocal 0 .............................. <tPairsCount>
  [ 21] pushzero ................................ <0>
  [ 22] gt ...................................... <tPairsCount > 0>
  [ 23] jmpifz [438] ............................ if tPairsCount > 0 then
  [ 26] pushint8 1 .............................. <1>
  [ 28] setlocal 1
  [ 30] getlocal 1
  [ 32] getlocal 0 .............................. <tPairsCount>
  [ 34] lteq
  [ 35] jmpifz [438] ............................ repeat with i = 1 to tPairsCount
  [ 38] getparam 1 .............................. <tMsg>
  [ 40] getchainedprop 35 ....................... <tMsg.connection>
  [ 42] pusharglist 1 ........................... <tMsg.connection>
  [ 44] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [ 46] setlocal 2 .............................. tid = tMsg.connection.GetIntFrom()
  [ 48] pushsymb 44 ............................. <#session>
  [ 50] pusharglist 1 ........................... <#session>
  [ 52] extcall 43 .............................. <getObject(#session)>
  [ 54] setlocal 3 .............................. tSession = getObject(#session)
  [ 56] getlocal 2 .............................. <tid>
  [ 58] peek 0 .................................. case tid of
  [ 60] pushzero ................................ <0>
  [ 61] eq
  [ 62] jmpifz [103] ............................ (case) 0:
  [ 65] getparam 1 .............................. <tMsg>
  [ 67] getchainedprop 35 ....................... <tMsg.connection>
  [ 69] pusharglist 1 ........................... <tMsg.connection>
  [ 71] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [ 73] setlocal 4 .............................. tValue = tMsg.connection.GetIntFrom()
  [ 75] getlocal 3 .............................. <tSession>
  [ 77] pushcons 2 .............................. <"conf_coppa">
  [ 79] getlocal 4 .............................. <tValue>
  [ 81] pushzero ................................ <0>
  [ 82] gt ...................................... <tValue > 0>
  [ 83] pusharglistnoret 3 ...................... <tSession, "conf_coppa", tValue > 0>
  [ 85] objcall 45 .............................. tSession.set("conf_coppa", tValue > 0)
  [ 87] getlocal 3 .............................. <tSession>
  [ 89] pushcons 3 .............................. <"conf_strong_coppa_required">
  [ 91] getlocal 4 .............................. <tValue>
  [ 93] pushint8 1 .............................. <1>
  [ 95] gt ...................................... <tValue > 1>
  [ 96] pusharglistnoret 3 ...................... <tSession, "conf_strong_coppa_required", tValue > 1>
  [ 98] objcall 45 .............................. tSession.set("conf_strong_coppa_required", tValue > 1)
  [100] jmp [426]
  [103] peek 0
  [105] pushint8 1 .............................. <1>
  [107] eq
  [108] jmpifz [136] ............................ (case) 1:
  [111] getparam 1 .............................. <tMsg>
  [113] getchainedprop 35 ....................... <tMsg.connection>
  [115] pusharglist 1 ........................... <tMsg.connection>
  [117] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [119] setlocal 4 .............................. tValue = tMsg.connection.GetIntFrom()
  [121] getlocal 3 .............................. <tSession>
  [123] pushcons 4 .............................. <"conf_voucher">
  [125] getlocal 4 .............................. <tValue>
  [127] pushzero ................................ <0>
  [128] gt ...................................... <tValue > 0>
  [129] pusharglistnoret 3 ...................... <tSession, "conf_voucher", tValue > 0>
  [131] objcall 45 .............................. tSession.set("conf_voucher", tValue > 0)
  [133] jmp [426]
  [136] peek 0
  [138] pushint8 2 .............................. <2>
  [140] eq
  [141] jmpifz [169] ............................ (case) 2:
  [144] getparam 1 .............................. <tMsg>
  [146] getchainedprop 35 ....................... <tMsg.connection>
  [148] pusharglist 1 ........................... <tMsg.connection>
  [150] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [152] setlocal 4 .............................. tValue = tMsg.connection.GetIntFrom()
  [154] getlocal 3 .............................. <tSession>
  [156] pushcons 5 .............................. <"conf_parent_email_request">
  [158] getlocal 4 .............................. <tValue>
  [160] pushzero ................................ <0>
  [161] gt ...................................... <tValue > 0>
  [162] pusharglistnoret 3 ...................... <tSession, "conf_parent_email_request", tValue > 0>
  [164] objcall 45 .............................. tSession.set("conf_parent_email_request", tValue > 0)
  [166] jmp [426]
  [169] peek 0
  [171] pushint8 3 .............................. <3>
  [173] eq
  [174] jmpifz [202] ............................ (case) 3:
  [177] getparam 1 .............................. <tMsg>
  [179] getchainedprop 35 ....................... <tMsg.connection>
  [181] pusharglist 1 ........................... <tMsg.connection>
  [183] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [185] setlocal 4 .............................. tValue = tMsg.connection.GetIntFrom()
  [187] getlocal 3 .............................. <tSession>
  [189] pushcons 6 .............................. <"conf_parent_email_request_reregistration">
  [191] getlocal 4 .............................. <tValue>
  [193] pushzero ................................ <0>
  [194] gt ...................................... <tValue > 0>
  [195] pusharglistnoret 3 ...................... <tSession, "conf_parent_email_request_reregistration", tValue > 0>
  [197] objcall 45 .............................. tSession.set("conf_parent_email_request_reregistration", tValue > 0)
  [199] jmp [426]
  [202] peek 0
  [204] pushint8 4 .............................. <4>
  [206] eq
  [207] jmpifz [235] ............................ (case) 4:
  [210] getparam 1 .............................. <tMsg>
  [212] getchainedprop 35 ....................... <tMsg.connection>
  [214] pusharglist 1 ........................... <tMsg.connection>
  [216] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [218] setlocal 4 .............................. tValue = tMsg.connection.GetIntFrom()
  [220] getlocal 3 .............................. <tSession>
  [222] pushcons 7 .............................. <"conf_allow_direct_mail">
  [224] getlocal 4 .............................. <tValue>
  [226] pushzero ................................ <0>
  [227] gt ...................................... <tValue > 0>
  [228] pusharglistnoret 3 ...................... <tSession, "conf_allow_direct_mail", tValue > 0>
  [230] objcall 45 .............................. tSession.set("conf_allow_direct_mail", tValue > 0)
  [232] jmp [426]
  [235] peek 0
  [237] pushint8 5 .............................. <5>
  [239] eq
  [240] jmpifz [301] ............................ (case) 5:
  [243] getparam 1 .............................. <tMsg>
  [245] getchainedprop 35 ....................... <tMsg.connection>
  [247] pusharglist 1 ........................... <tMsg.connection>
  [249] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [251] setlocal 4 .............................. tValue = tMsg.connection.GetStrFrom()
  [253] pushsymb 48 ............................. <#dateFormatter>
  [255] pusharglist 1 ........................... <#dateFormatter>
  [257] extcall 47 .............................. <objectExists(#dateFormatter)>
  [259] not ..................................... <not objectExists(#dateFormatter)>
  [260] jmpifz [274] ............................ if not objectExists(#dateFormatter) then
  [263] pushsymb 48 ............................. <#dateFormatter>
  [265] pushcons 8 .............................. <"Date Class">
  [267] pusharglist 1 ........................... <["Date Class"]>
  [269] pushlist ................................ <["Date Class"]>
  [270] pusharglistnoret 2 ...................... <#dateFormatter, ["Date Class"]>
  [272] extcall 49 .............................. createObject(#dateFormatter, ["Date Class"])
  [274] pushsymb 48 ............................. <#dateFormatter>
  [276] pusharglist 1 ........................... <#dateFormatter>
  [278] extcall 43 .............................. <getObject(#dateFormatter)>
  [280] setlocal 5 .............................. tDateForm = getObject(#dateFormatter)
  [282] getlocal 5 .............................. <tDateForm>
  [284] pushzero ................................ <0>
  [285] eq ...................................... <tDateForm = 0>
  [286] not ..................................... <not (tDateForm = 0)>
  [287] jmpifz [298] ............................ if not (tDateForm = 0) then
  [290] getlocal 5 .............................. <tDateForm>
  [292] getlocal 4 .............................. <tValue>
  [294] pusharglistnoret 2 ...................... <tDateForm, tValue>
  [296] objcall 50 .............................. tDateForm.define(tValue)
  [298] jmp [426]
  [301] peek 0
  [303] pushint8 6 .............................. <6>
  [305] eq
  [306] jmpifz [334] ............................ (case) 6:
  [309] getparam 1 .............................. <tMsg>
  [311] getchainedprop 35 ....................... <tMsg.connection>
  [313] pusharglist 1 ........................... <tMsg.connection>
  [315] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [317] setlocal 4 .............................. tValue = tMsg.connection.GetIntFrom()
  [319] getlocal 3 .............................. <tSession>
  [321] pushcons 9 .............................. <"conf_partner_integration">
  [323] getlocal 4 .............................. <tValue>
  [325] pushzero ................................ <0>
  [326] gt ...................................... <tValue > 0>
  [327] pusharglistnoret 3 ...................... <tSession, "conf_partner_integration", tValue > 0>
  [329] objcall 45 .............................. tSession.set("conf_partner_integration", tValue > 0)
  [331] jmp [426]
  [334] peek 0
  [336] pushint8 7 .............................. <7>
  [338] eq
  [339] jmpifz [367] ............................ (case) 7:
  [342] getparam 1 .............................. <tMsg>
  [344] getchainedprop 35 ....................... <tMsg.connection>
  [346] pusharglist 1 ........................... <tMsg.connection>
  [348] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [350] setlocal 4 .............................. tValue = tMsg.connection.GetIntFrom()
  [352] getlocal 3 .............................. <tSession>
  [354] pushcons 10 ............................. <"allow_profile_editing">
  [356] getlocal 4 .............................. <tValue>
  [358] pushzero ................................ <0>
  [359] gt ...................................... <tValue > 0>
  [360] pusharglistnoret 3 ...................... <tSession, "allow_profile_editing", tValue > 0>
  [362] objcall 45 .............................. tSession.set("allow_profile_editing", tValue > 0)
  [364] jmp [426]
  [367] peek 0
  [369] pushint8 8 .............................. <8>
  [371] eq
  [372] jmpifz [398] ............................ (case) 8:
  [375] getparam 1 .............................. <tMsg>
  [377] getchainedprop 35 ....................... <tMsg.connection>
  [379] pusharglist 1 ........................... <tMsg.connection>
  [381] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [383] setlocal 4 .............................. tValue = tMsg.connection.GetStrFrom()
  [385] getlocal 3 .............................. <tSession>
  [387] pushcons 11 ............................. <"tracking_header">
  [389] getlocal 4 .............................. <tValue>
  [391] pusharglistnoret 3 ...................... <tSession, "tracking_header", tValue>
  [393] objcall 45 .............................. tSession.set("tracking_header", tValue)
  [395] jmp [426]
  [398] peek 0
  [400] pushint8 9 .............................. <9>
  [402] eq
  [403] jmpifz [426] ............................ (case) 9:
  [406] getparam 1 .............................. <tMsg>
  [408] getchainedprop 35 ....................... <tMsg.connection>
  [410] pusharglist 1 ........................... <tMsg.connection>
  [412] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [414] setlocal 4 .............................. tValue = tMsg.connection.GetIntFrom()
  [416] getlocal 3 .............................. <tSession>
  [418] pushcons 12 ............................. <"tutorial_enabled">
  [420] getlocal 4 .............................. <tValue>
  [422] pusharglistnoret 3 ...................... <tSession, "tutorial_enabled", tValue>
  [424] objcall 45 .............................. tSession.set("tutorial_enabled", tValue)
  [426] pop 1 ................................... end case
  [428] pushint8 1
  [430] getlocal 1
  [432] add
  [433] setlocal 1
  [435] endrepeat [ 30]
  [438] getparam 0 .............................. <me>
  [440] getparam 1 .............................. <tMsg>
  [442] getobjprop 35 ........................... <tMsg.connection>
  [444] pusharglist 2 ........................... <me, tMsg.connection>
  [446] objcall 52 .............................. <me.sendLogin(tMsg.connection)>
  [448] pusharglistnoret 1 ...................... <me.sendLogin(tMsg.connection)>
  [450] extcall 29 .............................. return me.sendLogin(tMsg.connection)
  [452] ret
end

on handlePing me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] getchainedprop 35 ....................... <tMsg.connection>
  [  4] pushcons 13 ............................. <"PONG">
  [  6] pusharglistnoret 2 ...................... <tMsg.connection, "PONG">
  [  8] objcall 40 .............................. tMsg.connection.send("PONG")
  [ 10] ret
end

on handleRegistrationOK me, tMsg
  [  0] pushsymb 44 ............................. <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 43 .............................. <getObject(#session)>
  [  6] pushsymb 380 ............................ <#email>
  [  9] pusharglist 2 ........................... <getObject(#session), #email>
  [ 11] objcall 73 .............................. <getObject(#session).get(#email)>
  [ 13] setlocal 0 .............................. tEmailAddress = getObject(#session).get(#email)
  [ 15] pushsymb 44 ............................. <#session>
  [ 17] pusharglist 1 ........................... <#session>
  [ 19] extcall 43 .............................. <getObject(#session)>
  [ 21] pushsymb 74 ............................. <#password>
  [ 23] pusharglist 2 ........................... <getObject(#session), #password>
  [ 25] objcall 73 .............................. <getObject(#session).get(#password)>
  [ 27] setlocal 1 .............................. tPassword = getObject(#session).get(#password)
  [ 29] getparam 1 .............................. <tMsg>
  [ 31] getchainedprop 35 ....................... <tMsg.connection>
  [ 33] pusharglist 1 ........................... <tMsg.connection>
  [ 35] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [ 37] setlocal 2 .............................. tTotpCode = tMsg.connection.GetStrFrom()
  [ 39] getlocal 0 .............................. <tEmailAddress>
  [ 41] pusharglist 1 ........................... <tEmailAddress>
  [ 43] extcall 447 ............................. <stringp(tEmailAddress)>
  [ 46] not ..................................... <not stringp(tEmailAddress)>
  [ 47] getlocal 1 .............................. <tPassword>
  [ 49] pusharglist 1 ........................... <tPassword>
  [ 51] extcall 447 ............................. <stringp(tPassword)>
  [ 54] not ..................................... <not stringp(tPassword)>
  [ 55] or ...................................... <not stringp(tEmailAddress) or not stringp(tPassword)>
  [ 56] jmpifz [ 75] ............................ if not stringp(tEmailAddress) or not stringp(tPassword) then
  [ 59] getparam 1 .............................. <tMsg>
  [ 61] getchainedprop 35 ....................... <tMsg.connection>
  [ 63] pusharglist 1 ........................... <tMsg.connection>
  [ 65] objcall 28 .............................. <tMsg.connection.getID()>
  [ 67] pusharglist 1 ........................... <tMsg.connection.getID()>
  [ 69] extcall 94 .............................. <removeConnection(tMsg.connection.getID())>
  [ 71] pusharglistnoret 1 ...................... <removeConnection(tMsg.connection.getID())>
  [ 73] extcall 29 .............................. return removeConnection(tMsg.connection.getID())
  [ 75] getlocal 0 .............................. <tEmailAddress>
  [ 77] pushcons 14 ............................. <EMPTY>
  [ 79] eq ...................................... <tEmailAddress = EMPTY>
  [ 80] getlocal 1 .............................. <tPassword>
  [ 82] pushcons 14 ............................. <EMPTY>
  [ 84] eq ...................................... <tPassword = EMPTY>
  [ 85] or ...................................... <(tEmailAddress = EMPTY) or (tPassword = EMPTY)>
  [ 86] jmpifz [105] ............................ if (tEmailAddress = EMPTY) or (tPassword = EMPTY) then
  [ 89] getparam 1 .............................. <tMsg>
  [ 91] getchainedprop 35 ....................... <tMsg.connection>
  [ 93] pusharglist 1 ........................... <tMsg.connection>
  [ 95] objcall 28 .............................. <tMsg.connection.getID()>
  [ 97] pusharglist 1 ........................... <tMsg.connection.getID()>
  [ 99] extcall 94 .............................. <removeConnection(tMsg.connection.getID())>
  [101] pusharglistnoret 1 ...................... <removeConnection(tMsg.connection.getID())>
  [103] extcall 29 .............................. return removeConnection(tMsg.connection.getID())
  [105] getparam 1 .............................. <tMsg>
  [107] getchainedprop 35 ....................... <tMsg.connection>
  [109] pushcons 15 ............................. <"TRY_LOGIN">
  [111] pushsymb 80 ............................. <#string>
  [113] getlocal 0 .............................. <tEmailAddress>
  [115] pushsymb 80 ............................. <#string>
  [117] getlocal 1 .............................. <tPassword>
  [119] pushsymb 80 ............................. <#string>
  [121] getlocal 2 .............................. <tTotpCode>
  [123] pusharglist 6 ........................... <[#string: tEmailAddress, #string: tPassword, #string: tTotpCode]>
  [125] pushproplist ............................ <[#string: tEmailAddress, #string: tPassword, #string: tTotpCode]>
  [126] pusharglist 3 ........................... <tMsg.connection, "TRY_LOGIN", [#string: tEmailAddress, #string: tPassword, #string: tTotpCode]>
  [128] objcall 40 .............................. <tMsg.connection.send("TRY_LOGIN", [#string: tEmailAddress, #string: tPassword, #string: tTotpCode])>
  [130] pusharglistnoret 1 ...................... <tMsg.connection.send("TRY_LOGIN", [#string: tEmailAddress, #string: tPassword, #string: tTotpCode])>
  [132] extcall 29 .............................. return tMsg.connection.send("TRY_LOGIN", [#string: tEmailAddress, #string: tPassword, #string: tTotpCode])
  [134] ret
end

on handleOneTimePassword me, tMsg
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 37 .............................. <me.getInterface()>
  [  6] pusharglist 1 ........................... <me.getInterface()>
  [  8] objcall 363 ............................. <me.getInterface().showOneTimePassword()>
  [ 11] pusharglistnoret 1 ...................... <me.getInterface().showOneTimePassword()>
  [ 13] extcall 29 .............................. return me.getInterface().showOneTimePassword()
  [ 15] ret
end

on handleLoginOK me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] getchainedprop 35 ....................... <tMsg.connection>
  [  4] pushcons 16 ............................. <"GET_INFO">
  [  6] pusharglistnoret 2 ...................... <tMsg.connection, "GET_INFO">
  [  8] objcall 40 .............................. tMsg.connection.send("GET_INFO")
  [ 10] getparam 1 .............................. <tMsg>
  [ 12] getchainedprop 35 ....................... <tMsg.connection>
  [ 14] pushcons 17 ............................. <"GET_CREDITS">
  [ 16] pusharglistnoret 2 ...................... <tMsg.connection, "GET_CREDITS">
  [ 18] objcall 40 .............................. tMsg.connection.send("GET_CREDITS")
  [ 20] getparam 1 .............................. <tMsg>
  [ 22] getchainedprop 35 ....................... <tMsg.connection>
  [ 24] pushcons 18 ............................. <"GETAVAILABLEBADGES">
  [ 26] pusharglistnoret 2 ...................... <tMsg.connection, "GETAVAILABLEBADGES">
  [ 28] objcall 40 .............................. tMsg.connection.send("GETAVAILABLEBADGES")
  [ 30] getparam 1 .............................. <tMsg>
  [ 32] getchainedprop 35 ....................... <tMsg.connection>
  [ 34] pushcons 19 ............................. <"GET_CFH_CATEGORIES">
  [ 36] pusharglistnoret 2 ...................... <tMsg.connection, "GET_CFH_CATEGORIES">
  [ 38] objcall 40 .............................. tMsg.connection.send("GET_CFH_CATEGORIES")
  [ 40] pushsymb 44 ............................. <#session>
  [ 42] pusharglist 1 ........................... <#session>
  [ 44] extcall 47 .............................. <objectExists(#session)>
  [ 46] jmpifz [ 78] ............................ if objectExists(#session) then
  [ 49] pushsymb 44 ............................. <#session>
  [ 51] pusharglist 1 ........................... <#session>
  [ 53] extcall 43 .............................. <getObject(#session)>
  [ 55] pushcons 20 ............................. <"userLoggedIn">
  [ 57] pushint8 1 .............................. <1>
  [ 59] pusharglistnoret 3 ...................... <getObject(#session), "userLoggedIn", 1>
  [ 61] objcall 45 .............................. getObject(#session).set("userLoggedIn", 1)
  [ 63] pushsymb 44 ............................. <#session>
  [ 65] pusharglist 1 ........................... <#session>
  [ 67] extcall 43 .............................. <getObject(#session)>
  [ 69] pushcons 21 ............................. <"reportable_users">
  [ 71] pusharglist 0 ........................... <[]>
  [ 73] pushlist ................................ <[]>
  [ 74] pusharglistnoret 3 ...................... <getObject(#session), "reportable_users", []>
  [ 76] objcall 45 .............................. getObject(#session).set("reportable_users", [])
  [ 78] pushsymb 60 ............................. <#userLoggedIn>
  [ 80] pusharglistnoret 1 ...................... <#userLoggedIn>
  [ 82] extcall 59 .............................. executeMessage(#userLoggedIn)
  [ 84] pushcons 22 ............................. <"loggertool">
  [ 86] pusharglist 1 ........................... <"loggertool">
  [ 88] extcall 47 .............................. <objectExists("loggertool")>
  [ 90] not ..................................... <not objectExists("loggertool")>
  [ 91] jmpifz [147] ............................ if not objectExists("loggertool") then
  [ 94] pushcons 23 ............................. <"Debug System Class">
  [ 96] pusharglist 1 ........................... <"Debug System Class">
  [ 98] extcall 61 .............................. <memberExists("Debug System Class")>
  [100] jmpifz [147] ............................ if memberExists("Debug System Class") then
  [103] pushcons 22 ............................. <"loggertool">
  [105] pushcons 23 ............................. <"Debug System Class">
  [107] pusharglistnoret 2 ...................... <"loggertool", "Debug System Class">
  [109] extcall 49 .............................. createObject("loggertool", "Debug System Class")
  [111] pushcons 24 ............................. <"client.debug.window">
  [113] pushzero ................................ <0>
  [114] pusharglist 2 ........................... <"client.debug.window", 0>
  [116] extcall 62 .............................. <getIntVariable("client.debug.window", 0)>
  [118] pushint8 3 .............................. <3>
  [120] eq ...................................... <getIntVariable("client.debug.window", 0) = 3>
  [121] jmpifz [137] ............................ if getIntVariable("client.debug.window", 0) = 3 then / else
  [124] pushcons 22 ............................. <"loggertool">
  [126] pusharglist 1 ........................... <"loggertool">
  [128] extcall 43 .............................. <getObject("loggertool")>
  [130] pusharglistnoret 1 ...................... <getObject("loggertool")>
  [132] objcall 63 .............................. getObject("loggertool").initDebug()
  [134] jmp [147]
  [137] pushcons 22 ............................. <"loggertool">
  [139] pusharglist 1 ........................... <"loggertool">
  [141] extcall 43 .............................. <getObject("loggertool")>
  [143] pusharglistnoret 1 ...................... <getObject("loggertool")>
  [145] objcall 64 .............................. getObject("loggertool").tryAutoStart()
  [147] ret
end

on handleUserObj me, tMsg
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tuser = [:]
  [  5] getmovieprop 67 ......................... <the itemDelimiter>
  [  7] setlocal 1 .............................. tDelim = the itemDelimiter
  [  9] pushcons 25 ............................. <"=">
  [ 11] setmovieprop 67 ......................... the itemDelimiter = "="
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 2
  [ 17] getlocal 2
  [ 19] getparam 1 .............................. <tMsg>
  [ 21] getchainedprop 87 ....................... <tMsg.content>
  [ 23] pushsymb 96 ............................. <#line>
  [ 25] pusharglist 2 ........................... <tMsg.content, #line>
  [ 27] objcall 70 .............................. <tMsg.content.line.count>
  [ 29] lteq
  [ 30] jmpifz [ 90] ............................ repeat with i = 1 to tMsg.content.line.count
  [ 33] getparam 1 .............................. <tMsg>
  [ 35] getchainedprop 87 ....................... <tMsg.content>
  [ 37] pushsymb 96 ............................. <#line>
  [ 39] getlocal 2 .............................. <i>
  [ 41] pusharglist 3 ........................... <tMsg.content, #line, i>
  [ 43] objcall 99 .............................. <tMsg.content.line[i]>
  [ 45] setlocal 3 .............................. tLine = tMsg.content.line[i]
  [ 47] getlocal 0 .............................. <tuser>
  [ 49] getlocal 3 .............................. <tLine>
  [ 51] pushsymb 98 ............................. <#item>
  [ 53] pushint8 1 .............................. <1>
  [ 55] pusharglist 3 ........................... <tLine, #item, 1>
  [ 57] objcall 99 .............................. <tLine.item[1]>
  [ 59] getlocal 3 .............................. <tLine>
  [ 61] pushsymb 98 ............................. <#item>
  [ 63] pushint8 2 .............................. <2>
  [ 65] getlocal 3 .............................. <tLine>
  [ 67] pushsymb 98 ............................. <#item>
  [ 69] pusharglist 2 ........................... <tLine, #item>
  [ 71] objcall 70 .............................. <tLine.item.count>
  [ 73] pusharglist 4 ........................... <tLine, #item, 2, tLine.item.count>
  [ 75] objcall 99 .............................. <tLine.item[2..tLine.item.count]>
  [ 77] pusharglistnoret 3 ...................... <tuser, tLine.item[1], tLine.item[2..tLine.item.count]>
  [ 79] objcall 65 .............................. tuser[tLine.item[1]] = tLine.item[2..tLine.item.count]
  [ 81] pushint8 1
  [ 83] getlocal 2
  [ 85] add
  [ 86] setlocal 2
  [ 88] endrepeat [ 17]
  [ 90] getlocal 0 .............................. <tuser>
  [ 92] pushcons 26 ............................. <"sex">
  [ 94] pusharglist 2 ........................... <tuser, "sex">
  [ 96] objcall 66 .............................. <tuser["sex"]>
  [ 98] pusharglist 1 ........................... <tuser["sex"]>
  [100] extcall 68 .............................. <voidp(tuser["sex"])>
  [102] not ..................................... <not voidp(tuser["sex"])>
  [103] jmpifz [155] ............................ if not voidp(tuser["sex"]) then
  [106] getlocal 0 .............................. <tuser>
  [108] pushcons 26 ............................. <"sex">
  [110] pusharglist 2 ........................... <tuser, "sex">
  [112] objcall 66 .............................. <tuser["sex"]>
  [114] pushcons 27 ............................. <"F">
  [116] containsstr ............................. <tuser["sex"] contains "F">
  [117] getlocal 0 .............................. <tuser>
  [119] pushcons 26 ............................. <"sex">
  [121] pusharglist 2 ........................... <tuser, "sex">
  [123] objcall 66 .............................. <tuser["sex"]>
  [125] pushcons 28 ............................. <"f">
  [127] containsstr ............................. <tuser["sex"] contains "f">
  [128] or ...................................... <(tuser["sex"] contains "F") or (tuser["sex"] contains "f")>
  [129] jmpifz [145] ............................ if (tuser["sex"] contains "F") or (tuser["sex"] contains "f") then / else
  [132] getlocal 0 .............................. <tuser>
  [134] pushcons 26 ............................. <"sex">
  [136] pushcons 27 ............................. <"F">
  [138] pusharglistnoret 3 ...................... <tuser, "sex", "F">
  [140] objcall 65 .............................. tuser["sex"] = "F"
  [142] jmp [155]
  [145] getlocal 0 .............................. <tuser>
  [147] pushcons 26 ............................. <"sex">
  [149] pushcons 29 ............................. <"M">
  [151] pusharglistnoret 3 ...................... <tuser, "sex", "M">
  [153] objcall 65 .............................. tuser["sex"] = "M"
  [155] pushcons 30 ............................. <"Figure_System">
  [157] pusharglist 1 ........................... <"Figure_System">
  [159] extcall 47 .............................. <objectExists("Figure_System")>
  [161] jmpifz [202] ............................ if objectExists("Figure_System") then
  [164] getlocal 0 .............................. <tuser>
  [166] pushcons 31 ............................. <"figure">
  [168] pushcons 30 ............................. <"Figure_System">
  [170] pusharglist 1 ........................... <"Figure_System">
  [172] extcall 43 .............................. <getObject("Figure_System")>
  [174] getlocal 0 .............................. <tuser>
  [176] pushcons 31 ............................. <"figure">
  [178] pusharglist 2 ........................... <tuser, "figure">
  [180] objcall 66 .............................. <tuser["figure"]>
  [182] getlocal 0 .............................. <tuser>
  [184] pushcons 26 ............................. <"sex">
  [186] pusharglist 2 ........................... <tuser, "sex">
  [188] objcall 66 .............................. <tuser["sex"]>
  [190] pushcons 32 ............................. <"user">
  [192] pushcons 33 ............................. <"USEROBJECT">
  [194] pusharglist 5 ........................... <getObject("Figure_System"), tuser["figure"], tuser["sex"], "user", "USEROBJECT">
  [196] objcall 69 .............................. <getObject("Figure_System").parseFigure(tuser["figure"], tuser["sex"], "user", "USEROBJECT")>
  [198] pusharglistnoret 3 ...................... <tuser, "figure", getObject("Figure_System").parseFigure(tuser["figure"], tuser["sex"], "user", "USEROBJECT")>
  [200] objcall 65 .............................. tuser["figure"] = getObject("Figure_System").parseFigure(tuser["figure"], tuser["sex"], "user", "USEROBJECT")
  [202] getlocal 1 .............................. <tDelim>
  [204] setmovieprop 67 ......................... the itemDelimiter = tDelim
  [206] pushsymb 44 ............................. <#session>
  [208] pusharglist 1 ........................... <#session>
  [210] extcall 43 .............................. <getObject(#session)>
  [212] setlocal 4 .............................. tSession = getObject(#session)
  [214] pushint8 1 .............................. <1>
  [216] setlocal 2
  [218] getlocal 2
  [220] getlocal 0 .............................. <tuser>
  [222] getobjprop 70 ........................... <tuser.count>
  [224] lteq
  [225] jmpifz [262] ............................ repeat with i = 1 to tuser.count
  [228] getlocal 4 .............................. <tSession>
  [230] pushcons 34 ............................. <"user_">
  [232] getlocal 0 .............................. <tuser>
  [234] getlocal 2 .............................. <i>
  [236] pusharglist 2 ........................... <tuser, i>
  [238] objcall 71 .............................. <tuser.getPropAt(i)>
  [240] joinstr ................................. <"user_" & tuser.getPropAt(i)>
  [241] getlocal 0 .............................. <tuser>
  [243] getlocal 2 .............................. <i>
  [245] pusharglist 2 ........................... <tuser, i>
  [247] objcall 66 .............................. <tuser[i]>
  [249] pusharglistnoret 3 ...................... <tSession, "user_" & tuser.getPropAt(i), tuser[i]>
  [251] objcall 45 .............................. tSession.set("user_" & tuser.getPropAt(i), tuser[i])
  [253] pushint8 1
  [255] getlocal 2
  [257] add
  [258] setlocal 2
  [260] endrepeat [218]
  [262] getlocal 4 .............................. <tSession>
  [264] pushsymb 72 ............................. <#userName>
  [266] getlocal 4 .............................. <tSession>
  [268] pushcons 35 ............................. <"user_name">
  [270] pusharglist 2 ........................... <tSession, "user_name">
  [272] objcall 73 .............................. <tSession.get("user_name")>
  [274] pusharglistnoret 3 ...................... <tSession, #userName, tSession.get("user_name")>
  [276] objcall 45 .............................. tSession.set(#userName, tSession.get("user_name"))
  [278] getlocal 4 .............................. <tSession>
  [280] pushcons 36 ............................. <"user_password">
  [282] getlocal 4 .............................. <tSession>
  [284] pushsymb 74 ............................. <#password>
  [286] pusharglist 2 ........................... <tSession, #password>
  [288] objcall 73 .............................. <tSession.get(#password)>
  [290] pusharglistnoret 3 ...................... <tSession, "user_password", tSession.get(#password)>
  [292] objcall 45 .............................. tSession.set("user_password", tSession.get(#password))
  [294] pushsymb 75 ............................. <#updateFigureData>
  [296] pusharglistnoret 1 ...................... <#updateFigureData>
  [298] extcall 59 .............................. executeMessage(#updateFigureData)
  [300] pushsymb 44 ............................. <#session>
  [302] pusharglist 1 ........................... <#session>
  [304] extcall 43 .............................. <getObject(#session)>
  [306] pushcons 37 ............................. <"user_logged">
  [308] pusharglist 2 ........................... <getObject(#session), "user_logged">
  [310] objcall 76 .............................. <getObject(#session).exists("user_logged")>
  [312] jmpifz [322] ............................ if getObject(#session).exists("user_logged") then / else
  [315] pusharglistnoret 0 ...................... <>
  [317] extcall 29 .............................. return 
  [319] jmp [336]
  [322] pushsymb 44 ............................. <#session>
  [324] pusharglist 1 ........................... <#session>
  [326] extcall 43 .............................. <getObject(#session)>
  [328] pushcons 37 ............................. <"user_logged">
  [330] pushint8 1 .............................. <1>
  [332] pusharglistnoret 3 ...................... <getObject(#session), "user_logged", 1>
  [334] objcall 45 .............................. getObject(#session).set("user_logged", 1)
  [336] pushcons 38 ............................. <"quickLogin">
  [338] pushzero ................................ <0>
  [339] pusharglist 2 ........................... <"quickLogin", 0>
  [341] extcall 62 .............................. <getIntVariable("quickLogin", 0)>
  [343] getmovieprop 77 ......................... <the runMode>
  [345] pushcons 39 ............................. <"Author">
  [347] containsstr ............................. <the runMode contains "Author">
  [348] and ..................................... <getIntVariable("quickLogin", 0) and (the runMode contains "Author")>
  [349] jmpifz [408] ............................ if getIntVariable("quickLogin", 0) and (the runMode contains "Author") then / else
  [352] pushcons 40 ............................. <"fuse.project.id">
  [354] pushcons 41 ............................. <"fusepref">
  [356] pusharglist 2 ........................... <"fuse.project.id", "fusepref">
  [358] extcall 79 .............................. <getVariable("fuse.project.id", "fusepref")>
  [360] pushsymb 44 ............................. <#session>
  [362] pusharglist 1 ........................... <#session>
  [364] extcall 43 .............................. <getObject(#session)>
  [366] pushsymb 72 ............................. <#userName>
  [368] pusharglist 2 ........................... <getObject(#session), #userName>
  [370] objcall 73 .............................. <getObject(#session).get(#userName)>
  [372] pushsymb 44 ............................. <#session>
  [374] pusharglist 1 ........................... <#session>
  [376] extcall 43 .............................. <getObject(#session)>
  [378] pushsymb 74 ............................. <#password>
  [380] pusharglist 2 ........................... <getObject(#session), #password>
  [382] objcall 73 .............................. <getObject(#session).get(#password)>
  [384] pusharglist 2 ........................... <[getObject(#session).get(#userName), getObject(#session).get(#password)]>
  [386] pushlist ................................ <[getObject(#session).get(#userName), getObject(#session).get(#password)]>
  [387] pusharglist 1 ........................... <[getObject(#session).get(#userName), getObject(#session).get(#password)]>
  [389] extcall 80 .............................. <string([getObject(#session).get(#userName), getObject(#session).get(#password)])>
  [391] pusharglistnoret 2 ...................... <getVariable("fuse.project.id", "fusepref"), string([getObject(#session).get(#userName), getObject(#session).get(#password)])>
  [393] extcall 78 .............................. setPref(getVariable("fuse.project.id", "fusepref"), string([getObject(#session).get(#userName), getObject(#session).get(#password)]))
  [395] getparam 0 .............................. <me>
  [397] pusharglist 1 ........................... <me>
  [399] objcall 37 .............................. <me.getInterface()>
  [401] pusharglistnoret 1 ...................... <me.getInterface()>
  [403] objcall 24 .............................. me.getInterface().hideLogin()
  [405] jmp [418]
  [408] getparam 0 .............................. <me>
  [410] pusharglist 1 ........................... <me>
  [412] objcall 37 .............................. <me.getInterface()>
  [414] pusharglistnoret 1 ...................... <me.getInterface()>
  [416] objcall 81 .............................. me.getInterface().showUserFound()
  [418] pushsymb 82 ............................. <#userlogin>
  [420] pushcons 42 ............................. <"userLogin">
  [422] pusharglistnoret 2 ...................... <#userlogin, "userLogin">
  [424] extcall 59 .............................. executeMessage(#userlogin, "userLogin")
  [426] ret
end

on handleUserBanned me, tMsg
  [  0] pushcons 43 ............................. <"Alert_YouAreBanned">
  [  2] pusharglist 1 ........................... <"Alert_YouAreBanned">
  [  4] extcall 86 .............................. <getText("Alert_YouAreBanned")>
  [  6] pushcons 44 ............................. <RETURN>
  [  8] joinstr ................................. <getText("Alert_YouAreBanned") & RETURN>
  [  9] getparam 1 .............................. <tMsg>
  [ 11] getobjprop 87 ........................... <tMsg.content>
  [ 13] joinstr ................................. <getText("Alert_YouAreBanned") & RETURN & tMsg.content>
  [ 14] setlocal 0 .............................. tBanMsg = getText("Alert_YouAreBanned") & RETURN & tMsg.content
  [ 16] pushsymb 88 ............................. <#openGeneralDialog>
  [ 18] pushsymb 89 ............................. <#ban>
  [ 20] pushsymb 90 ............................. <#id>
  [ 22] pushcons 45 ............................. <"BannWarning">
  [ 24] pushsymb 91 ............................. <#title>
  [ 26] pushcons 46 ............................. <"Alert_YouAreBanned_T">
  [ 28] pushsymb 92 ............................. <#msg>
  [ 30] getlocal 0 .............................. <tBanMsg>
  [ 32] pushsymb 93 ............................. <#modal>
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglist 8 ........................... <[#id: "BannWarning", #title: "Alert_YouAreBanned_T", #msg: tBanMsg, #modal: 1]>
  [ 38] pushproplist ............................ <[#id: "BannWarning", #title: "Alert_YouAreBanned_T", #msg: tBanMsg, #modal: 1]>
  [ 39] pusharglistnoret 3 ...................... <#openGeneralDialog, #ban, [#id: "BannWarning", #title: "Alert_YouAreBanned_T", #msg: tBanMsg, #modal: 1]>
  [ 41] extcall 59 .............................. executeMessage(#openGeneralDialog, #ban, [#id: "BannWarning", #title: "Alert_YouAreBanned_T", #msg: tBanMsg, #modal: 1])
  [ 43] getparam 1 .............................. <tMsg>
  [ 45] getchainedprop 35 ....................... <tMsg.connection>
  [ 47] pusharglist 1 ........................... <tMsg.connection>
  [ 49] objcall 28 .............................. <tMsg.connection.getID()>
  [ 51] pusharglistnoret 1 ...................... <tMsg.connection.getID()>
  [ 53] extcall 94 .............................. removeConnection(tMsg.connection.getID())
  [ 55] ret
end

on handleEPSnotify me, tMsg
  [  0] pushcons 14 ............................. <EMPTY>
  [  2] setlocal 0 .............................. ttype = EMPTY
  [  4] pushcons 14 ............................. <EMPTY>
  [  6] setlocal 1 .............................. tdata = EMPTY
  [  8] getmovieprop 67 ......................... <the itemDelimiter>
  [ 10] setlocal 2 .............................. tDelim = the itemDelimiter
  [ 12] pushcons 25 ............................. <"=">
  [ 14] setmovieprop 67 ......................... the itemDelimiter = "="
  [ 16] pushint8 1 .............................. <1>
  [ 18] setlocal 3
  [ 20] getlocal 3
  [ 22] getparam 1 .............................. <tMsg>
  [ 24] getchainedprop 87 ....................... <tMsg.content>
  [ 26] pushsymb 96 ............................. <#line>
  [ 28] pusharglist 2 ........................... <tMsg.content, #line>
  [ 30] objcall 70 .............................. <tMsg.content.line.count>
  [ 32] lteq
  [ 33] jmpifz [124] ............................ repeat with f = 1 to tMsg.content.line.count
  [ 36] getparam 1 .............................. <tMsg>
  [ 38] getchainedprop 87 ....................... <tMsg.content>
  [ 40] pushsymb 96 ............................. <#line>
  [ 42] getlocal 3 .............................. <f>
  [ 44] pusharglist 3 ........................... <tMsg.content, #line, f>
  [ 46] objcall 97 .............................. <tMsg.content.line[f]>
  [ 48] pushsymb 98 ............................. <#item>
  [ 50] pushint8 1 .............................. <1>
  [ 52] pusharglist 3 ........................... <tMsg.content.line[f], #item, 1>
  [ 54] objcall 99 .............................. <tMsg.content.line[f].item[1]>
  [ 56] setlocal 4 .............................. tProp = tMsg.content.line[f].item[1]
  [ 58] getparam 1 .............................. <tMsg>
  [ 60] getchainedprop 87 ....................... <tMsg.content>
  [ 62] pushsymb 96 ............................. <#line>
  [ 64] getlocal 3 .............................. <f>
  [ 66] pusharglist 3 ........................... <tMsg.content, #line, f>
  [ 68] objcall 97 .............................. <tMsg.content.line[f]>
  [ 70] pushsymb 98 ............................. <#item>
  [ 72] pushint8 2 .............................. <2>
  [ 74] pusharglist 3 ........................... <tMsg.content.line[f], #item, 2>
  [ 76] objcall 99 .............................. <tMsg.content.line[f].item[2]>
  [ 78] setlocal 5 .............................. tDesc = tMsg.content.line[f].item[2]
  [ 80] getlocal 4 .............................. <tProp>
  [ 82] peek 0 .................................. case tProp of
  [ 84] pushcons 47 ............................. <"t">
  [ 86] eq
  [ 87] jmpifz [101] ............................ (case) "t":
  [ 90] getlocal 5 .............................. <tDesc>
  [ 92] pusharglist 1 ........................... <tDesc>
  [ 94] extcall 100 ............................. <integer(tDesc)>
  [ 96] setlocal 0 .............................. ttype = integer(tDesc)
  [ 98] jmp [113]
  [101] peek 0
  [103] pushcons 48 ............................. <"p">
  [105] eq
  [106] jmpifz [113] ............................ (case) "p":
  [109] getlocal 5 .............................. <tDesc>
  [111] setlocal 1 .............................. tdata = tDesc
  [113] pop 1 ................................... end case
  [115] pushint8 1
  [117] getlocal 3
  [119] add
  [120] setlocal 3
  [122] endrepeat [ 20]
  [124] getlocal 2 .............................. <tDelim>
  [126] setmovieprop 67 ......................... the itemDelimiter = tDelim
  [128] getlocal 0 .............................. <ttype>
  [130] peek 0 .................................. case ttype of
  [132] pushint16 580 ........................... <580>
  [135] eq
  [136] jmpifz [190] ............................ (case) 580:
  [139] pushcons 49 ............................. <"lang_test">
  [141] pushcons 50 ............................. <"CLangTest">
  [143] pusharglist 2 ........................... <"lang_test", "CLangTest">
  [145] extcall 49 .............................. <createObject("lang_test", "CLangTest")>
  [147] not ..................................... <not createObject("lang_test", "CLangTest")>
  [148] jmpifz [172] ............................ if not createObject("lang_test", "CLangTest") then / else
  [151] pop 1
  [153] getparam 0 .............................. <me>
  [155] pushcons 51 ............................. <"Failed to init lang tester!">
  [157] pushsymb 9 .............................. <#handleEPSnotify>
  [159] pushsymb 101 ............................ <#minor>
  [161] pusharglist 4 ........................... <me, "Failed to init lang tester!", #handleEPSnotify, #minor>
  [163] extcall 34 .............................. <error(me, "Failed to init lang tester!", #handleEPSnotify, #minor)>
  [165] pusharglistnoret 1 ...................... <error(me, "Failed to init lang tester!", #handleEPSnotify, #minor)>
  [167] extcall 29 .............................. return error(me, "Failed to init lang tester!", #handleEPSnotify, #minor)
  [169] jmp [190]
  [172] pop 1
  [174] pushcons 49 ............................. <"lang_test">
  [176] pusharglist 1 ........................... <"lang_test">
  [178] extcall 43 .............................. <getObject("lang_test")>
  [180] getlocal 1 .............................. <tdata>
  [182] pusharglist 2 ........................... <getObject("lang_test"), tdata>
  [184] objcall 102 ............................. <getObject("lang_test").setWord(tdata)>
  [186] pusharglistnoret 1 ...................... <getObject("lang_test").setWord(tdata)>
  [188] extcall 29 .............................. return getObject("lang_test").setWord(tdata)
  [190] pop 1
  [192] pushsymb 103 ............................ <#notify>
  [194] getlocal 0 .............................. <ttype>
  [196] getlocal 1 .............................. <tdata>
  [198] getparam 1 .............................. <tMsg>
  [200] getchainedprop 35 ....................... <tMsg.connection>
  [202] pusharglist 1 ........................... <tMsg.connection>
  [204] objcall 28 .............................. <tMsg.connection.getID()>
  [206] pusharglistnoret 4 ...................... <#notify, ttype, tdata, tMsg.connection.getID()>
  [208] extcall 59 .............................. executeMessage(#notify, ttype, tdata, tMsg.connection.getID())
  [210] ret
end

on handleSystemBroadcast me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pushsymb 87 ............................. <#content>
  [  4] pusharglist 2 ........................... <tMsg, #content>
  [  6] objcall 66 .............................. <tMsg[#content]>
  [  8] setparam 1 .............................. tMsg = tMsg[#content]
  [ 10] getparam 1 .............................. <tMsg>
  [ 12] pushcons 52 ............................. <"\\r">
  [ 14] pushcons 44 ............................. <RETURN>
  [ 16] pusharglist 3 ........................... <tMsg, "\\r", RETURN>
  [ 18] extcall 109 ............................. <replaceChunks(tMsg, "\\r", RETURN)>
  [ 20] setparam 1 .............................. tMsg = replaceChunks(tMsg, "\\r", RETURN)
  [ 22] getparam 1 .............................. <tMsg>
  [ 24] pushcons 53 ............................. <"<br>">
  [ 26] pushcons 44 ............................. <RETURN>
  [ 28] pusharglist 3 ........................... <tMsg, "<br>", RETURN>
  [ 30] extcall 109 ............................. <replaceChunks(tMsg, "<br>", RETURN)>
  [ 32] setparam 1 .............................. tMsg = replaceChunks(tMsg, "<br>", RETURN)
  [ 34] pushsymb 110 ............................ <#alert>
  [ 36] pushsymb 92 ............................. <#msg>
  [ 38] getparam 1 .............................. <tMsg>
  [ 40] pusharglist 2 ........................... <[#msg: tMsg]>
  [ 42] pushproplist ............................ <[#msg: tMsg]>
  [ 43] pusharglistnoret 2 ...................... <#alert, [#msg: tMsg]>
  [ 45] extcall 59 .............................. executeMessage(#alert, [#msg: tMsg])
  [ 47] pushzero ................................ <0>
  [ 48] setmovieprop 111 ........................ the keyboardFocusSprite = 0
  [ 50] ret
end

on handleCheckSum me, tMsg
  [  0] pushsymb 44 ............................. <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 43 .............................. <getObject(#session)>
  [  6] pushcons 54 ............................. <"user_checksum">
  [  8] getparam 1 .............................. <tMsg>
  [ 10] getobjprop 87 ........................... <tMsg.content>
  [ 12] pusharglistnoret 3 ...................... <getObject(#session), "user_checksum", tMsg.content>
  [ 14] objcall 45 .............................. getObject(#session).set("user_checksum", tMsg.content)
  [ 16] ret
end

on handleAvailableBadges me, tMsg
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tBadgeList = []
  [  5] getparam 1 .............................. <tMsg>
  [  7] getchainedprop 35 ....................... <tMsg.connection>
  [  9] pusharglist 1 ........................... <tMsg.connection>
  [ 11] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [ 13] setlocal 1 .............................. tNumber = tMsg.connection.GetIntFrom()
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 2
  [ 19] getlocal 2
  [ 21] getlocal 1 .............................. <tNumber>
  [ 23] lteq
  [ 24] jmpifz [ 54] ............................ repeat with i = 1 to tNumber
  [ 27] getparam 1 .............................. <tMsg>
  [ 29] getchainedprop 35 ....................... <tMsg.connection>
  [ 31] pusharglist 1 ........................... <tMsg.connection>
  [ 33] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [ 35] setlocal 3 .............................. tBadgeID = tMsg.connection.GetStrFrom()
  [ 37] getlocal 0 .............................. <tBadgeList>
  [ 39] getlocal 3 .............................. <tBadgeID>
  [ 41] pusharglistnoret 2 ...................... <tBadgeList, tBadgeID>
  [ 43] objcall 112 ............................. tBadgeList.add(tBadgeID)
  [ 45] pushint8 1
  [ 47] getlocal 2
  [ 49] add
  [ 50] setlocal 2
  [ 52] endrepeat [ 19]
  [ 54] getparam 1 .............................. <tMsg>
  [ 56] getchainedprop 35 ....................... <tMsg.connection>
  [ 58] pusharglist 1 ........................... <tMsg.connection>
  [ 60] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [ 62] setlocal 4 .............................. tChosenBadge = tMsg.connection.GetIntFrom()
  [ 64] getparam 1 .............................. <tMsg>
  [ 66] getchainedprop 35 ....................... <tMsg.connection>
  [ 68] pusharglist 1 ........................... <tMsg.connection>
  [ 70] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [ 72] setlocal 5 .............................. tVisible = tMsg.connection.GetIntFrom()
  [ 74] getlocal 4 .............................. <tChosenBadge>
  [ 76] pushint8 1 .............................. <1>
  [ 78] add ..................................... <tChosenBadge + 1>
  [ 79] setlocal 4 .............................. tChosenBadge = tChosenBadge + 1
  [ 81] getlocal 4 .............................. <tChosenBadge>
  [ 83] pushint8 1 .............................. <1>
  [ 85] lt ...................................... <tChosenBadge < 1>
  [ 86] jmpifz [ 93] ............................ if tChosenBadge < 1 then
  [ 89] pushint8 1 .............................. <1>
  [ 91] setlocal 4 .............................. tChosenBadge = 1
  [ 93] pushcons 55 ............................. <"session">
  [ 95] pusharglist 1 ........................... <"session">
  [ 97] extcall 43 .............................. <getObject("session")>
  [ 99] pushcons 56 ............................. <"available_badges">
  [101] getlocal 0 .............................. <tBadgeList>
  [103] pusharglistnoret 3 ...................... <getObject("session"), "available_badges", tBadgeList>
  [105] objcall 45 .............................. getObject("session").set("available_badges", tBadgeList)
  [107] pushcons 55 ............................. <"session">
  [109] pusharglist 1 ........................... <"session">
  [111] extcall 43 .............................. <getObject("session")>
  [113] pushcons 57 ............................. <"chosen_badge_index">
  [115] getlocal 4 .............................. <tChosenBadge>
  [117] pusharglistnoret 3 ...................... <getObject("session"), "chosen_badge_index", tChosenBadge>
  [119] objcall 45 .............................. getObject("session").set("chosen_badge_index", tChosenBadge)
  [121] pushcons 55 ............................. <"session">
  [123] pusharglist 1 ........................... <"session">
  [125] extcall 43 .............................. <getObject("session")>
  [127] pushcons 58 ............................. <"badge_visible">
  [129] getlocal 5 .............................. <tVisible>
  [131] pusharglistnoret 3 ...................... <getObject("session"), "badge_visible", tVisible>
  [133] objcall 45 .............................. getObject("session").set("badge_visible", tVisible)
  [135] ret
end

on handleRights me, tMsg
  [  0] pushsymb 44 ............................. <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 43 .............................. <getObject(#session)>
  [  6] setlocal 0 .............................. tSession = getObject(#session)
  [  8] getlocal 0 .............................. <tSession>
  [ 10] pushcons 59 ............................. <"user_rights">
  [ 12] pusharglist 0 ........................... <[]>
  [ 14] pushlist ................................ <[]>
  [ 15] pusharglistnoret 3 ...................... <tSession, "user_rights", []>
  [ 17] objcall 45 .............................. tSession.set("user_rights", [])
  [ 19] getlocal 0 .............................. <tSession>
  [ 21] pushcons 59 ............................. <"user_rights">
  [ 23] pusharglist 2 ........................... <tSession, "user_rights">
  [ 25] objcall 73 .............................. <tSession.get("user_rights")>
  [ 27] setlocal 1 .............................. tRights = tSession.get("user_rights")
  [ 29] pushint8 1 .............................. <1>
  [ 31] setlocal 2 .............................. tPrivilegeFound = 1
  [ 33] getlocal 2 .............................. <tPrivilegeFound>
  [ 35] pushint8 1 .............................. <1>
  [ 37] eq ...................................... <tPrivilegeFound = 1>
  [ 38] jmpifz [ 83] ............................ repeat while tPrivilegeFound = 1
  [ 41] getparam 1 .............................. <tMsg>
  [ 43] getchainedprop 35 ....................... <tMsg.connection>
  [ 45] pusharglist 1 ........................... <tMsg.connection>
  [ 47] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [ 49] setlocal 3 .............................. tPrivilege = tMsg.connection.GetStrFrom()
  [ 51] getlocal 3 .............................. <tPrivilege>
  [ 53] pusharglist 0 ........................... <>
  [ 55] extcall 118 ............................. <VOID>
  [ 57] eq ...................................... <tPrivilege = VOID>
  [ 58] getlocal 3 .............................. <tPrivilege>
  [ 60] pushcons 14 ............................. <EMPTY>
  [ 62] eq ...................................... <tPrivilege = EMPTY>
  [ 63] or ...................................... <(tPrivilege = VOID) or (tPrivilege = EMPTY)>
  [ 64] jmpifz [ 73] ............................ if (tPrivilege = VOID) or (tPrivilege = EMPTY) then
  [ 67] pushzero ................................ <0>
  [ 68] setlocal 2 .............................. tPrivilegeFound = 0
  [ 70] jmp [ 81] ............................... next repeat
  [ 73] getlocal 1 .............................. <tRights>
  [ 75] getlocal 3 .............................. <tPrivilege>
  [ 77] pusharglistnoret 2 ...................... <tRights, tPrivilege>
  [ 79] objcall 112 ............................. tRights.add(tPrivilege)
  [ 81] endrepeat [ 33]
  [ 83] pushint8 1 .............................. <1>
  [ 85] pusharglistnoret 1 ...................... <1>
  [ 87] extcall 29 .............................. return 1
  [ 89] ret
end

on handleErr me, tMsg
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 60 ............................. <"Error from server:">
  [  4] getparam 1 .............................. <tMsg>
  [  6] getobjprop 87 ........................... <tMsg.content>
  [  8] joinpadstr .............................. <"Error from server:" && tMsg.content>
  [  9] pushsymb 14 ............................. <#handleErr>
  [ 11] pushsymb 36 ............................. <#dummy>
  [ 13] pusharglistnoret 4 ...................... <me, "Error from server:" && tMsg.content, #handleErr, #dummy>
  [ 15] extcall 34 .............................. error(me, "Error from server:" && tMsg.content, #handleErr, #dummy)
  [ 17] pushint8 1 .............................. <1>
  [ 19] peek 0 .................................. case 1 of
  [ 21] getparam 1 .............................. <tMsg>
  [ 23] getobjprop 87 ........................... <tMsg.content>
  [ 25] pushcons 61 ............................. <"login incorrect">
  [ 27] containsstr ............................. <tMsg.content contains "login incorrect">
  [ 28] eq
  [ 29] jmpifz [142] ............................ (case) (tMsg.content contains "login incorrect"):
  [ 32] getparam 1 .............................. <tMsg>
  [ 34] getchainedprop 35 ....................... <tMsg.connection>
  [ 36] pusharglist 1 ........................... <tMsg.connection>
  [ 38] objcall 28 .............................. <tMsg.connection.getID()>
  [ 40] pusharglistnoret 1 ...................... <tMsg.connection.getID()>
  [ 42] extcall 94 .............................. removeConnection(tMsg.connection.getID())
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglist 1 ........................... <me>
  [ 48] objcall 51 .............................. <me.getComponent()>
  [ 50] pushsymb 122 ............................ <#pOkToLogin>
  [ 52] pushzero ................................ <0>
  [ 53] pusharglistnoret 3 ...................... <me.getComponent(), #pOkToLogin, 0>
  [ 55] objcall 123 ............................. me.getComponent().setaProp(#pOkToLogin, 0)
  [ 57] pushsymb 44 ............................. <#session>
  [ 59] pusharglist 1 ........................... <#session>
  [ 61] extcall 43 .............................. <getObject(#session)>
  [ 63] pushcons 62 ............................. <"failed_password">
  [ 65] pusharglist 2 ........................... <getObject(#session), "failed_password">
  [ 67] objcall 76 .............................. <getObject(#session).exists("failed_password")>
  [ 69] jmpifz [102] ............................ if getObject(#session).exists("failed_password") then / else
  [ 72] pushcons 63 ............................. <"login_forgottenPassword_url">
  [ 74] pusharglist 1 ........................... <"login_forgottenPassword_url">
  [ 76] extcall 86 .............................. <getText("login_forgottenPassword_url")>
  [ 78] pusharglistnoret 1 ...................... <getText("login_forgottenPassword_url")>
  [ 80] extcall 124 ............................. openNetPage(getText("login_forgottenPassword_url"))
  [ 82] getparam 0 .............................. <me>
  [ 84] pusharglist 1 ........................... <me>
  [ 86] objcall 37 .............................. <me.getInterface()>
  [ 88] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 90] objcall 125 ............................. me.getInterface().showLogin()
  [ 92] pop 1
  [ 94] pushzero ................................ <0>
  [ 95] pusharglistnoret 1 ...................... <0>
  [ 97] extcall 29 .............................. return 0
  [ 99] jmp [139]
  [102] pushsymb 44 ............................. <#session>
  [104] pusharglist 1 ........................... <#session>
  [106] extcall 43 .............................. <getObject(#session)>
  [108] pushcons 62 ............................. <"failed_password">
  [110] pushint8 1 .............................. <1>
  [112] pusharglistnoret 3 ...................... <getObject(#session), "failed_password", 1>
  [114] objcall 45 .............................. getObject(#session).set("failed_password", 1)
  [116] getparam 0 .............................. <me>
  [118] pusharglist 1 ........................... <me>
  [120] objcall 37 .............................. <me.getInterface()>
  [122] pusharglistnoret 1 ...................... <me.getInterface()>
  [124] objcall 125 ............................. me.getInterface().showLogin()
  [126] pushsymb 110 ............................ <#alert>
  [128] pushsymb 92 ............................. <#msg>
  [130] pushcons 64 ............................. <"Alert_WrongNameOrPassword">
  [132] pusharglist 2 ........................... <[#msg: "Alert_WrongNameOrPassword"]>
  [134] pushproplist ............................ <[#msg: "Alert_WrongNameOrPassword"]>
  [135] pusharglistnoret 2 ...................... <#alert, [#msg: "Alert_WrongNameOrPassword"]>
  [137] extcall 59 .............................. executeMessage(#alert, [#msg: "Alert_WrongNameOrPassword"])
  [139] jmp [305]
  [142] peek 0
  [144] getparam 1 .............................. <tMsg>
  [146] getobjprop 87 ........................... <tMsg.content>
  [148] pushcons 65 ............................. <"mod_warn">
  [150] containsstr ............................. <tMsg.content contains "mod_warn">
  [151] eq
  [152] jmpifz [215] ............................ (case) (tMsg.content contains "mod_warn"):
  [155] getmovieprop 67 ......................... <the itemDelimiter>
  [157] setlocal 0 .............................. tDelim = the itemDelimiter
  [159] pushcons 66 ............................. <"/">
  [161] setmovieprop 67 ......................... the itemDelimiter = "/"
  [163] getparam 1 .............................. <tMsg>
  [165] getchainedprop 87 ....................... <tMsg.content>
  [167] pushsymb 98 ............................. <#item>
  [169] pushint8 2 .............................. <2>
  [171] getparam 1 .............................. <tMsg>
  [173] getchainedprop 87 ....................... <tMsg.content>
  [175] pushsymb 98 ............................. <#item>
  [177] pusharglist 2 ........................... <tMsg.content, #item>
  [179] objcall 70 .............................. <tMsg.content.item.count>
  [181] pusharglist 4 ........................... <tMsg.content, #item, 2, tMsg.content.item.count>
  [183] objcall 99 .............................. <tMsg.content.item[2..tMsg.content.item.count]>
  [185] setlocal 1 .............................. tTextStr = tMsg.content.item[2..tMsg.content.item.count]
  [187] getlocal 0 .............................. <tDelim>
  [189] setmovieprop 67 ......................... the itemDelimiter = tDelim
  [191] pushsymb 110 ............................ <#alert>
  [193] pushsymb 91 ............................. <#title>
  [195] pushcons 67 ............................. <"alert_warning">
  [197] pushsymb 92 ............................. <#msg>
  [199] getlocal 1 .............................. <tTextStr>
  [201] pushsymb 93 ............................. <#modal>
  [203] pushint8 1 .............................. <1>
  [205] pusharglist 6 ........................... <[#title: "alert_warning", #msg: tTextStr, #modal: 1]>
  [207] pushproplist ............................ <[#title: "alert_warning", #msg: tTextStr, #modal: 1]>
  [208] pusharglistnoret 2 ...................... <#alert, [#title: "alert_warning", #msg: tTextStr, #modal: 1]>
  [210] extcall 59 .............................. executeMessage(#alert, [#title: "alert_warning", #msg: tTextStr, #modal: 1])
  [212] jmp [305]
  [215] peek 0
  [217] getparam 1 .............................. <tMsg>
  [219] getobjprop 87 ........................... <tMsg.content>
  [221] pushcons 68 ............................. <"Version not correct">
  [223] containsstr ............................. <tMsg.content contains "Version not correct">
  [224] eq
  [225] jmpifz [244] ............................ (case) (tMsg.content contains "Version not correct"):
  [228] pushsymb 110 ............................ <#alert>
  [230] pushsymb 92 ............................. <#msg>
  [232] pushcons 69 ............................. <"alert_old_client">
  [234] pusharglist 2 ........................... <[#msg: "alert_old_client"]>
  [236] pushproplist ............................ <[#msg: "alert_old_client"]>
  [237] pusharglistnoret 2 ...................... <#alert, [#msg: "alert_old_client"]>
  [239] extcall 59 .............................. executeMessage(#alert, [#msg: "alert_old_client"])
  [241] jmp [305]
  [244] peek 0
  [246] getparam 1 .............................. <tMsg>
  [248] getobjprop 87 ........................... <tMsg.content>
  [250] pushcons 70 ............................. <"Duplicate session">
  [252] containsstr ............................. <tMsg.content contains "Duplicate session">
  [253] eq
  [254] jmpifz [305] ............................ (case) (tMsg.content contains "Duplicate session"):
  [257] getparam 1 .............................. <tMsg>
  [259] getchainedprop 35 ....................... <tMsg.connection>
  [261] pusharglist 1 ........................... <tMsg.connection>
  [263] objcall 28 .............................. <tMsg.connection.getID()>
  [265] pusharglistnoret 1 ...................... <tMsg.connection.getID()>
  [267] extcall 94 .............................. removeConnection(tMsg.connection.getID())
  [269] getparam 0 .............................. <me>
  [271] pusharglist 1 ........................... <me>
  [273] objcall 51 .............................. <me.getComponent()>
  [275] pushsymb 122 ............................ <#pOkToLogin>
  [277] pushzero ................................ <0>
  [278] pusharglistnoret 3 ...................... <me.getComponent(), #pOkToLogin, 0>
  [280] objcall 123 ............................. me.getComponent().setaProp(#pOkToLogin, 0)
  [282] getparam 0 .............................. <me>
  [284] pusharglist 1 ........................... <me>
  [286] objcall 37 .............................. <me.getInterface()>
  [288] pusharglistnoret 1 ...................... <me.getInterface()>
  [290] objcall 125 ............................. me.getInterface().showLogin()
  [292] pushsymb 110 ............................ <#alert>
  [294] pushsymb 92 ............................. <#msg>
  [296] pushcons 71 ............................. <"alert_duplicatesession">
  [298] pusharglist 2 ........................... <[#msg: "alert_duplicatesession"]>
  [300] pushproplist ............................ <[#msg: "alert_duplicatesession"]>
  [301] pusharglistnoret 2 ...................... <#alert, [#msg: "alert_duplicatesession"]>
  [303] extcall 59 .............................. executeMessage(#alert, [#msg: "alert_duplicatesession"])
  [305] pop 1 ................................... end case
  [307] pushint8 1 .............................. <1>
  [309] pusharglistnoret 1 ...................... <1>
  [311] extcall 29 .............................. return 1
  [313] ret
end

on handleModAlert me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pushsymb 87 ............................. <#content>
  [  4] pusharglist 2 ........................... <tMsg, #content>
  [  6] objcall 127 ............................. <tMsg.getaProp(#content)>
  [  8] setlocal 0 .............................. tTest = tMsg.getaProp(#content)
  [ 10] getparam 1 .............................. <tMsg>
  [ 12] getobjprop 35 ........................... <tMsg.connection>
  [ 14] setlocal 1 .............................. tConn = tMsg.connection
  [ 16] getlocal 1 .............................. <tConn>
  [ 18] not ..................................... <not tConn>
  [ 19] jmpifz [ 39] ............................ if not tConn then
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 72 ............................. <"Error in moderation alert.">
  [ 26] pushsymb 128 ............................ <#handleModerationAlert>
  [ 28] pushsymb 101 ............................ <#minor>
  [ 30] pusharglistnoret 4 ...................... <me, "Error in moderation alert.", #handleModerationAlert, #minor>
  [ 32] extcall 34 .............................. error(me, "Error in moderation alert.", #handleModerationAlert, #minor)
  [ 34] pushzero ................................ <0>
  [ 35] pusharglistnoret 1 ...................... <0>
  [ 37] extcall 29 .............................. return 0
  [ 39] getlocal 1 .............................. <tConn>
  [ 41] pusharglist 1 ........................... <tConn>
  [ 43] objcall 46 .............................. <tConn.GetStrFrom()>
  [ 45] setlocal 2 .............................. tMessageText = tConn.GetStrFrom()
  [ 47] getlocal 1 .............................. <tConn>
  [ 49] pusharglist 1 ........................... <tConn>
  [ 51] objcall 46 .............................. <tConn.GetStrFrom()>
  [ 53] setlocal 3 .............................. tURL = tConn.GetStrFrom()
  [ 55] getlocal 3 .............................. <tURL>
  [ 57] pushcons 14 ............................. <EMPTY>
  [ 59] eq ...................................... <tURL = EMPTY>
  [ 60] jmpifz [ 69] ............................ if tURL = EMPTY then
  [ 63] pusharglist 0 ........................... <>
  [ 65] extcall 118 ............................. <VOID>
  [ 67] setlocal 3 .............................. tURL = VOID
  [ 69] pushsymb 110 ............................ <#alert>
  [ 71] pushsymb 91 ............................. <#title>
  [ 73] pushcons 67 ............................. <"alert_warning">
  [ 75] pushsymb 92 ............................. <#msg>
  [ 77] getlocal 2 .............................. <tMessageText>
  [ 79] pushsymb 93 ............................. <#modal>
  [ 81] pushint8 1 .............................. <1>
  [ 83] pushsymb 129 ............................ <#url>
  [ 85] getlocal 3 .............................. <tURL>
  [ 87] pusharglist 8 ........................... <[#title: "alert_warning", #msg: tMessageText, #modal: 1, #url: tURL]>
  [ 89] pushproplist ............................ <[#title: "alert_warning", #msg: tMessageText, #modal: 1, #url: tURL]>
  [ 90] pusharglistnoret 2 ...................... <#alert, [#title: "alert_warning", #msg: tMessageText, #modal: 1, #url: tURL]>
  [ 92] extcall 59 .............................. executeMessage(#alert, [#title: "alert_warning", #msg: tMessageText, #modal: 1, #url: tURL])
  [ 94] ret
end

on handleCryptoParameters me, tMsg
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0 .............................. tClientToServer = 1
  [  4] pushint8 1 .............................. <1>
  [  6] setlocal 1 .............................. tServerToClient = 1
  [  8] pushsymb 133 ............................ <#ClientToServer>
  [ 10] getlocal 0 .............................. <tClientToServer>
  [ 12] pushsymb 134 ............................ <#ServerToClient>
  [ 14] getlocal 1 .............................. <tServerToClient>
  [ 16] pusharglist 4 ........................... <[#ClientToServer: tClientToServer, #ServerToClient: tServerToClient]>
  [ 18] pushproplist ............................ <[#ClientToServer: tClientToServer, #ServerToClient: tServerToClient]>
  [ 19] setprop 26 .............................. pCryptoParams = [#ClientToServer: tClientToServer, #ServerToClient: tServerToClient]
  [ 21] getlocal 0 .............................. <tClientToServer>
  [ 23] jmpifz [ 35] ............................ if tClientToServer then / else
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglistnoret 1 ...................... <me>
  [ 30] objcall 17 .............................. me.responseWithPublicKey()
  [ 32] jmp [ 72]
  [ 35] getlocal 1 .............................. <tServerToClient>
  [ 37] jmpifz [ 66] ............................ if tServerToClient then
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 73 ............................. <"Server to client encryption only is not supported.">
  [ 44] pushsymb 16 ............................. <#handleCryptoParameters>
  [ 46] pushsymb 101 ............................ <#minor>
  [ 48] pusharglistnoret 4 ...................... <me, "Server to client encryption only is not supported.", #handleCryptoParameters, #minor>
  [ 50] extcall 34 .............................. error(me, "Server to client encryption only is not supported.", #handleCryptoParameters, #minor)
  [ 52] getparam 1 .............................. <tMsg>
  [ 54] getchainedprop 35 ....................... <tMsg.connection>
  [ 56] pushint8 1 .............................. <1>
  [ 58] pusharglist 2 ........................... <tMsg.connection, 1>
  [ 60] objcall 135 ............................. <tMsg.connection.disconnect(1)>
  [ 62] pusharglistnoret 1 ...................... <tMsg.connection.disconnect(1)>
  [ 64] extcall 29 .............................. return tMsg.connection.disconnect(1)
  [ 66] getparam 0 .............................. <me>
  [ 68] pusharglistnoret 1 ...................... <me>
  [ 70] objcall 23 .............................. me.startSession()
  [ 72] pushint8 1 .............................. <1>
  [ 74] pusharglistnoret 1 ...................... <1>
  [ 76] extcall 29 .............................. return 1
  [ 78] ret
end

on responseWithPublicKey me, tConnection
  [  0] pushcons 74 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 79 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 138 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 10] setparam 1 .............................. tConnection = getConnection(getVariable("connection.info.id"))
  [ 12] pushcons 14 ............................. <EMPTY>
  [ 14] setlocal 0 .............................. tHex = EMPTY
  [ 16] pushint8 24 ............................. <24>
  [ 18] setlocal 1 .............................. tLength = 24
  [ 20] pushcons 75 ............................. <"012345679">
  [ 22] setlocal 2 .............................. tHexChars = "012345679"
  [ 24] pushint8 1 .............................. <1>
  [ 26] setlocal 3
  [ 28] getlocal 3
  [ 30] getlocal 1 .............................. <tLength>
  [ 32] pushint8 2 .............................. <2>
  [ 34] mul ..................................... <tLength * 2>
  [ 35] lteq
  [ 36] jmpifz [103] ............................ repeat with tNo = 1 to tLength * 2
  [ 39] getlocal 2 .............................. <tHexChars>
  [ 41] getobjprop 140 .......................... <tHexChars.length>
  [ 43] pusharglist 1 ........................... <tHexChars.length>
  [ 45] extcall 139 ............................. <random(tHexChars.length)>
  [ 47] setlocal 4 .............................. tRandPos = random(tHexChars.length)
  [ 49] getlocal 4 .............................. <tRandPos>
  [ 51] pushint8 1 .............................. <1>
  [ 53] eq ...................................... <tRandPos = 1>
  [ 54] getlocal 3 .............................. <tNo>
  [ 56] pushint8 1 .............................. <1>
  [ 58] eq ...................................... <tNo = 1>
  [ 59] and ..................................... <(tRandPos = 1) and (tNo = 1)>
  [ 60] jmpifz [ 79] ............................ if (tRandPos = 1) and (tNo = 1) then
  [ 63] pushint8 1 .............................. <1>
  [ 65] getlocal 2 .............................. <tHexChars>
  [ 67] getobjprop 140 .......................... <tHexChars.length>
  [ 69] pushint8 1 .............................. <1>
  [ 71] sub ..................................... <tHexChars.length - 1>
  [ 72] pusharglist 1 ........................... <tHexChars.length - 1>
  [ 74] extcall 139 ............................. <random(tHexChars.length - 1)>
  [ 76] add ..................................... <1 + random(tHexChars.length - 1)>
  [ 77] setlocal 4 .............................. tRandPos = 1 + random(tHexChars.length - 1)
  [ 79] getlocal 0 .............................. <tHex>
  [ 81] getlocal 2 .............................. <tHexChars>
  [ 83] getlocal 4 .............................. <tRandPos>
  [ 85] getlocal 4 .............................. <tRandPos>
  [ 87] pusharglist 3 ........................... <tHexChars, tRandPos, tRandPos>
  [ 89] extcall 141 ............................. <chars(tHexChars, tRandPos, tRandPos)>
  [ 91] joinstr ................................. <tHex & chars(tHexChars, tRandPos, tRandPos)>
  [ 92] setlocal 0 .............................. tHex = tHex & chars(tHexChars, tRandPos, tRandPos)
  [ 94] pushint8 1
  [ 96] getlocal 3
  [ 98] add
  [ 99] setlocal 3
  [101] endrepeat [ 28]
  [103] pushcons 76 ............................. <"HugeInt15">
  [105] pusharglist 1 ........................... <"HugeInt15">
  [107] newobj 142 .............................. <new script("HugeInt15")>
  [109] setlocal 5 .............................. clientG = new script("HugeInt15")
  [111] pushcons 76 ............................. <"HugeInt15">
  [113] pusharglist 1 ........................... <"HugeInt15">
  [115] newobj 142 .............................. <new script("HugeInt15")>
  [117] setlocal 6 .............................. clientP = new script("HugeInt15")
  [119] getlocal 5 .............................. <clientG>
  [121] pushcons 77 ............................. <"23786635532332886537261431906453031264918297">
  [123] pusharglist 0 ........................... <>
  [125] extcall 118 ............................. <VOID>
  [127] pushint8 1 .............................. <1>
  [129] pusharglistnoret 4 ...................... <clientG, "23786635532332886537261431906453031264918297", VOID, 1>
  [131] objcall 143 ............................. clientG.assign("23786635532332886537261431906453031264918297", VOID, 1)
  [133] getlocal 6 .............................. <clientP>
  [135] pushcons 78 ............................. <"632158881801130885249042417232212770524741295422564233061391190031954228421232913648184592218883487397503624904102572293826728806813079">
  [137] pusharglist 0 ........................... <>
  [139] extcall 118 ............................. <VOID>
  [141] pushint8 1 .............................. <1>
  [143] pusharglistnoret 4 ...................... <clientP, "632158881801130885249042417232212770524741295422564233061391190031954228421232913648184592218883487397503624904102572293826728806813079", VOID, 1>
  [145] objcall 143 ............................. clientP.assign("632158881801130885249042417232212770524741295422564233061391190031954228421232913648184592218883487397503624904102572293826728806813079", VOID, 1)
  [147] pushcons 76 ............................. <"HugeInt15">
  [149] pusharglist 1 ........................... <"HugeInt15">
  [151] newobj 142 .............................. <new script("HugeInt15")>
  [153] setprop 144 ............................. pClientSecret = new script("HugeInt15")
  [155] getprop 144 ............................. <pClientSecret>
  [157] getlocal 0 .............................. <tHex>
  [159] pusharglistnoret 2 ...................... <pClientSecret, tHex>
  [161] objcall 143 ............................. pClientSecret.assign(tHex)
  [163] getlocal 5 .............................. <clientG>
  [165] getprop 144 ............................. <pClientSecret>
  [167] getlocal 6 .............................. <clientP>
  [169] pusharglist 3 ........................... <clientG, pClientSecret, clientP>
  [171] objcall 145 ............................. <clientG.powMod(pClientSecret, clientP)>
  [173] pusharglist 1 ........................... <clientG.powMod(pClientSecret, clientP)>
  [175] objcall 146 ............................. <clientG.powMod(pClientSecret, clientP).getString()>
  [177] setlocal 7 .............................. tPublicKeyStr = clientG.powMod(pClientSecret, clientP).getString()
  [179] getparam 1 .............................. <tConnection>
  [181] pushcons 79 ............................. <"GENERATEKEY">
  [183] pushsymb 80 ............................. <#string>
  [185] getlocal 7 .............................. <tPublicKeyStr>
  [187] pusharglist 2 ........................... <[#string: tPublicKeyStr]>
  [189] pushproplist ............................ <[#string: tPublicKeyStr]>
  [190] pusharglistnoret 3 ...................... <tConnection, "GENERATEKEY", [#string: tPublicKeyStr]>
  [192] objcall 40 .............................. tConnection.send("GENERATEKEY", [#string: tPublicKeyStr])
  [194] ret
end

on handleSecretKey me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] getobjprop 35 ........................... <tMsg.connection>
  [  4] setlocal 0 .............................. tConnection = tMsg.connection
  [  6] pushcons 76 ............................. <"HugeInt15">
  [  8] pusharglist 1 ........................... <"HugeInt15">
  [ 10] newobj 142 .............................. <new script("HugeInt15")>
  [ 12] setlocal 1 .............................. clientP = new script("HugeInt15")
  [ 14] getlocal 1 .............................. <clientP>
  [ 16] pushcons 78 ............................. <"632158881801130885249042417232212770524741295422564233061391190031954228421232913648184592218883487397503624904102572293826728806813079">
  [ 18] pusharglist 0 ........................... <>
  [ 20] extcall 118 ............................. <VOID>
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglistnoret 4 ...................... <clientP, "632158881801130885249042417232212770524741295422564233061391190031954228421232913648184592218883487397503624904102572293826728806813079", VOID, 1>
  [ 26] objcall 143 ............................. clientP.assign("632158881801130885249042417232212770524741295422564233061391190031954228421232913648184592218883487397503624904102572293826728806813079", VOID, 1)
  [ 28] getparam 1 .............................. <tMsg>
  [ 30] getchainedprop 35 ....................... <tMsg.connection>
  [ 32] pusharglist 1 ........................... <tMsg.connection>
  [ 34] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [ 36] setlocal 2 .............................. t_sServerPublicKey = tMsg.connection.GetStrFrom()
  [ 38] pushcons 76 ............................. <"HugeInt15">
  [ 40] pusharglist 1 ........................... <"HugeInt15">
  [ 42] newobj 142 .............................. <new script("HugeInt15")>
  [ 44] setlocal 3 .............................. tClientBig = new script("HugeInt15")
  [ 46] getlocal 3 .............................. <tClientBig>
  [ 48] getlocal 2 .............................. <t_sServerPublicKey>
  [ 50] pusharglistnoret 2 ...................... <tClientBig, t_sServerPublicKey>
  [ 52] objcall 143 ............................. tClientBig.assign(t_sServerPublicKey)
  [ 54] getlocal 3 .............................. <tClientBig>
  [ 56] getprop 144 ............................. <pClientSecret>
  [ 58] getlocal 1 .............................. <clientP>
  [ 60] pusharglist 3 ........................... <tClientBig, pClientSecret, clientP>
  [ 62] objcall 145 ............................. <tClientBig.powMod(pClientSecret, clientP)>
  [ 64] setlocal 4 .............................. tSharedKey = tClientBig.powMod(pClientSecret, clientP)
  [ 66] getlocal 4 .............................. <tSharedKey>
  [ 68] pusharglist 1 ........................... <tSharedKey>
  [ 70] objcall 159 ............................. <tSharedKey.getByteArray()>
  [ 72] setlocal 5 .............................. tByteArray = tSharedKey.getByteArray()
  [ 74] pushsymb 161 ............................ <#temp>
  [ 76] pushcons 80 ............................. <"connection.decoder.class">
  [ 78] pusharglist 1 ........................... <"connection.decoder.class">
  [ 80] extcall 162 ............................. <getClassVariable("connection.decoder.class")>
  [ 82] pusharglist 2 ........................... <#temp, getClassVariable("connection.decoder.class")>
  [ 84] extcall 49 .............................. <createObject(#temp, getClassVariable("connection.decoder.class"))>
  [ 86] setlocal 6 .............................. t_rDecoder = createObject(#temp, getClassVariable("connection.decoder.class"))
  [ 88] getlocal 6 .............................. <t_rDecoder>
  [ 90] getlocal 4 .............................. <tSharedKey>
  [ 92] pusharglist 1 ........................... <tSharedKey>
  [ 94] objcall 159 ............................. <tSharedKey.getByteArray()>
  [ 96] pushsymb 163 ............................ <#initByteArray>
  [ 98] pusharglistnoret 3 ...................... <t_rDecoder, tSharedKey.getByteArray(), #initByteArray>
  [100] objcall 164 ............................. t_rDecoder.setKey(tSharedKey.getByteArray(), #initByteArray)
  [102] pushsymb 161 ............................ <#temp>
  [104] pushcons 80 ............................. <"connection.decoder.class">
  [106] pusharglist 1 ........................... <"connection.decoder.class">
  [108] extcall 162 ............................. <getClassVariable("connection.decoder.class")>
  [110] pusharglist 2 ........................... <#temp, getClassVariable("connection.decoder.class")>
  [112] extcall 49 .............................. <createObject(#temp, getClassVariable("connection.decoder.class"))>
  [114] setlocal 7 .............................. t_rEncoder = createObject(#temp, getClassVariable("connection.decoder.class"))
  [116] getlocal 7 .............................. <t_rEncoder>
  [118] getlocal 4 .............................. <tSharedKey>
  [120] pusharglist 1 ........................... <tSharedKey>
  [122] objcall 159 ............................. <tSharedKey.getByteArray()>
  [124] pushsymb 163 ............................ <#initByteArray>
  [126] pusharglistnoret 3 ...................... <t_rEncoder, tSharedKey.getByteArray(), #initByteArray>
  [128] objcall 164 ............................. t_rEncoder.setKey(tSharedKey.getByteArray(), #initByteArray)
  [130] pushsymb 161 ............................ <#temp>
  [132] pushcons 80 ............................. <"connection.decoder.class">
  [134] pusharglist 1 ........................... <"connection.decoder.class">
  [136] extcall 162 ............................. <getClassVariable("connection.decoder.class")>
  [138] pusharglist 2 ........................... <#temp, getClassVariable("connection.decoder.class")>
  [140] extcall 49 .............................. <createObject(#temp, getClassVariable("connection.decoder.class"))>
  [142] setlocal 8 .............................. t_rHeaderDecoder = createObject(#temp, getClassVariable("connection.decoder.class"))
  [144] getlocal 8 .............................. <t_rHeaderDecoder>
  [146] getlocal 4 .............................. <tSharedKey>
  [148] pusharglist 1 ........................... <tSharedKey>
  [150] objcall 159 ............................. <tSharedKey.getByteArray()>
  [152] pushsymb 163 ............................ <#initByteArray>
  [154] pusharglistnoret 3 ...................... <t_rHeaderDecoder, tSharedKey.getByteArray(), #initByteArray>
  [156] objcall 164 ............................. t_rHeaderDecoder.setKey(tSharedKey.getByteArray(), #initByteArray)
  [158] pushsymb 161 ............................ <#temp>
  [160] pushcons 80 ............................. <"connection.decoder.class">
  [162] pusharglist 1 ........................... <"connection.decoder.class">
  [164] extcall 162 ............................. <getClassVariable("connection.decoder.class")>
  [166] pusharglist 2 ........................... <#temp, getClassVariable("connection.decoder.class")>
  [168] extcall 49 .............................. <createObject(#temp, getClassVariable("connection.decoder.class"))>
  [170] setlocal 9 .............................. t_rHeaderEncoder = createObject(#temp, getClassVariable("connection.decoder.class"))
  [172] getlocal 9 .............................. <t_rHeaderEncoder>
  [174] getlocal 4 .............................. <tSharedKey>
  [176] pusharglist 1 ........................... <tSharedKey>
  [178] objcall 159 ............................. <tSharedKey.getByteArray()>
  [180] pushsymb 163 ............................ <#initByteArray>
  [182] pusharglistnoret 3 ...................... <t_rHeaderEncoder, tSharedKey.getByteArray(), #initByteArray>
  [184] objcall 164 ............................. t_rHeaderEncoder.setKey(tSharedKey.getByteArray(), #initByteArray)
  [186] getlocal 0 .............................. <tConnection>
  [188] getlocal 6 .............................. <t_rDecoder>
  [190] pusharglistnoret 2 ...................... <tConnection, t_rDecoder>
  [192] objcall 165 ............................. tConnection.setDecoder(t_rDecoder)
  [194] getlocal 0 .............................. <tConnection>
  [196] getlocal 7 .............................. <t_rEncoder>
  [198] pusharglistnoret 2 ...................... <tConnection, t_rEncoder>
  [200] objcall 166 ............................. tConnection.setEncoder(t_rEncoder)
  [202] getlocal 0 .............................. <tConnection>
  [204] getlocal 8 .............................. <t_rHeaderDecoder>
  [206] pusharglistnoret 2 ...................... <tConnection, t_rHeaderDecoder>
  [208] objcall 167 ............................. tConnection.setHeaderDecoder(t_rHeaderDecoder)
  [210] getlocal 0 .............................. <tConnection>
  [212] getlocal 9 .............................. <t_rHeaderEncoder>
  [214] pusharglistnoret 2 ...................... <tConnection, t_rHeaderEncoder>
  [216] objcall 168 ............................. tConnection.setHeaderEncoder(t_rHeaderEncoder)
  [218] getlocal 0 .............................. <tConnection>
  [220] pushint8 1 .............................. <1>
  [222] pusharglistnoret 2 ...................... <tConnection, 1>
  [224] objcall 169 ............................. tConnection.setEncryption(1)
  [226] getparam 0 .............................. <me>
  [228] pusharglistnoret 1 ...................... <me>
  [230] objcall 23 .............................. me.startSession()
  [232] pushint8 1 .............................. <1>
  [234] pusharglistnoret 1 ...................... <1>
  [236] extcall 29 .............................. return 1
  [238] ret
end

on handleEndCrypto me, tMsg
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 23 .............................. me.startSession()
  [  6] ret
end

on handleHotelLogout me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] getchainedprop 35 ....................... <tMsg.connection>
  [  4] pusharglist 1 ........................... <tMsg.connection>
  [  6] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [  8] setlocal 0 .............................. tLogoutMsgId = tMsg.connection.GetIntFrom()
  [ 10] getlocal 0 .............................. <tLogoutMsgId>
  [ 12] peek 0 .................................. case tLogoutMsgId of
  [ 14] pushint8 1 .............................. <1>
  [ 16] inv ..................................... <-1>
  [ 17] eq
  [ 18] jmpifz [ 44] ............................ (case) (-1):
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 1 ........................... <me>
  [ 25] objcall 51 .............................. <me.getComponent()>
  [ 27] pusharglistnoret 1 ...................... <me.getComponent()>
  [ 29] objcall 135 ............................. me.getComponent().disconnect()
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 37 .............................. <me.getInterface()>
  [ 37] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 39] objcall 38 .............................. me.getInterface().showDisconnect()
  [ 41] jmp [110]
  [ 44] peek 0
  [ 46] pushint8 1 .............................. <1>
  [ 48] eq
  [ 49] jmpifz [ 67] ............................ (case) 1:
  [ 52] pushcons 81 ............................. <"url_logged_out">
  [ 54] pusharglist 1 ........................... <"url_logged_out">
  [ 56] extcall 86 .............................. <getText("url_logged_out")>
  [ 58] pushcons 82 ............................. <"self">
  [ 60] pusharglistnoret 2 ...................... <getText("url_logged_out"), "self">
  [ 62] extcall 124 ............................. openNetPage(getText("url_logged_out"), "self")
  [ 64] jmp [110]
  [ 67] peek 0
  [ 69] pushint8 2 .............................. <2>
  [ 71] eq
  [ 72] jmpifz [ 90] ............................ (case) 2:
  [ 75] pushcons 83 ............................. <"url_logout_concurrent">
  [ 77] pusharglist 1 ........................... <"url_logout_concurrent">
  [ 79] extcall 86 .............................. <getText("url_logout_concurrent")>
  [ 81] pushcons 82 ............................. <"self">
  [ 83] pusharglistnoret 2 ...................... <getText("url_logout_concurrent"), "self">
  [ 85] extcall 124 ............................. openNetPage(getText("url_logout_concurrent"), "self")
  [ 87] jmp [110]
  [ 90] peek 0
  [ 92] pushint8 3 .............................. <3>
  [ 94] eq
  [ 95] jmpifz [110] ............................ (case) 3:
  [ 98] pushcons 84 ............................. <"url_logout_timeout">
  [100] pusharglist 1 ........................... <"url_logout_timeout">
  [102] extcall 86 .............................. <getText("url_logout_timeout")>
  [104] pushcons 82 ............................. <"self">
  [106] pusharglistnoret 2 ...................... <getText("url_logout_timeout"), "self">
  [108] extcall 124 ............................. openNetPage(getText("url_logout_timeout"), "self")
  [110] pop 1 ................................... end case
  [112] ret
end

on handleSoundSetting me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] getchainedprop 35 ....................... <tMsg.connection>
  [  4] pusharglist 1 ........................... <tMsg.connection>
  [  6] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [  8] setlocal 0 .............................. tstate = tMsg.connection.GetIntFrom()
  [ 10] getlocal 0 .............................. <tstate>
  [ 12] pusharglistnoret 1 ...................... <tstate>
  [ 14] extcall 179 ............................. setSoundState(tstate)
  [ 16] pushsymb 180 ............................ <#soundSettingChanged>
  [ 18] getlocal 0 .............................. <tstate>
  [ 20] pusharglistnoret 2 ...................... <#soundSettingChanged, tstate>
  [ 22] extcall 59 .............................. executeMessage(#soundSettingChanged, tstate)
  [ 24] ret
end

on startSession me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 192 ............................. <getMoviePath()>
  [  4] pushcons 85 ............................. <"habbo.dcr">
  [  6] joinstr ................................. <getMoviePath() & "habbo.dcr">
  [  7] setlocal 0 .............................. tClientURL = getMoviePath() & "habbo.dcr"
  [  9] pusharglist 0 ........................... <>
  [ 11] extcall 193 ............................. <getExtVarPath()>
  [ 13] setlocal 1 .............................. tExtVarsURL = getExtVarPath()
  [ 15] pushcons 74 ............................. <"connection.info.id">
  [ 17] pusharglist 1 ........................... <"connection.info.id">
  [ 19] extcall 79 .............................. <getVariable("connection.info.id")>
  [ 21] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 23] extcall 138 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] setlocal 2 .............................. tConnection = getConnection(getVariable("connection.info.id"))
  [ 27] getlocal 2 .............................. <tConnection>
  [ 29] pushsymb 194 ............................ <#host>
  [ 31] pusharglist 2 ........................... <tConnection, #host>
  [ 33] objcall 195 ............................. <tConnection.getProperty(#host)>
  [ 35] setlocal 3 .............................. tHost = tConnection.getProperty(#host)
  [ 37] getlocal 3 .............................. <tHost>
  [ 39] pushcons 86 ............................. <",y,?mf,BmylPl^nGoH">
  [ 41] pusharglist 1 ........................... <",y,?mf,BmylPl^nGoH">
  [ 43] extcall 196 ............................. <deobfuscate(",y,?mf,BmylPl^nGoH")>
  [ 45] containsstr ............................. <tHost contains deobfuscate(",y,?mf,BmylPl^nGoH")>
  [ 46] jmpifz [ 53] ............................ if tHost contains deobfuscate(",y,?mf,BmylPl^nGoH") then
  [ 49] pushcons 14 ............................. <EMPTY>
  [ 51] setlocal 0 .............................. tClientURL = EMPTY
  [ 53] getlocal 3 .............................. <tHost>
  [ 55] pushcons 87 ............................. <"FbgeGnd=&Ae]F@E}">
  [ 57] pusharglist 1 ........................... <"FbgeGnd=&Ae]F@E}">
  [ 59] extcall 196 ............................. <deobfuscate("FbgeGnd=&Ae]F@E}")>
  [ 61] containsstr ............................. <tHost contains deobfuscate("FbgeGnd=&Ae]F@E}")>
  [ 62] jmpifz [ 69] ............................ if tHost contains deobfuscate("FbgeGnd=&Ae]F@E}") then
  [ 65] pushcons 14 ............................. <EMPTY>
  [ 67] setlocal 0 .............................. tClientURL = EMPTY
  [ 69] getlocal 3 .............................. <tHost>
  [ 71] pushcons 88 ............................. <"&bF2fee|&CFmGqd}">
  [ 73] pusharglist 1 ........................... <"&bF2fee|&CFmGqd}">
  [ 75] extcall 196 ............................. <deobfuscate("&bF2fee|&CFmGqd}")>
  [ 77] containsstr ............................. <tHost contains deobfuscate("&bF2fee|&CFmGqd}")>
  [ 78] jmpifz [ 85] ............................ if tHost contains deobfuscate("&bF2fee|&CFmGqd}") then
  [ 81] pushcons 14 ............................. <EMPTY>
  [ 83] setlocal 0 .............................. tClientURL = EMPTY
  [ 85] getlocal 3 .............................. <tHost>
  [ 87] pushcons 89 ............................. <"G#f@d\\fae<fa$]">
  [ 89] pusharglist 1 ........................... <"G#f@d\\fae<fa$]">
  [ 91] extcall 196 ............................. <deobfuscate("G#f@d\\fae<fa$]")>
  [ 93] containsstr ............................. <tHost contains deobfuscate("G#f@d\\fae<fa$]")>
  [ 94] jmpifz [101] ............................ if tHost contains deobfuscate("G#f@d\\fae<fa$]") then
  [ 97] pushcons 14 ............................. <EMPTY>
  [ 99] setlocal 0 .............................. tClientURL = EMPTY
  [101] getmovieprop 77 ......................... <the runMode>
  [103] pushcons 90 ............................. <"Plugin">
  [105] containsstr ............................. <the runMode contains "Plugin">
  [106] not ..................................... <not (the runMode contains "Plugin")>
  [107] jmpifz [121] ............................ if not (the runMode contains "Plugin") then / else
  [110] pushcons 14 ............................. <EMPTY>
  [112] setlocal 0 .............................. tClientURL = EMPTY
  [114] pushcons 14 ............................. <EMPTY>
  [116] setlocal 1 .............................. tExtVarsURL = EMPTY
  [118] jmp [151]
  [121] getlocal 0 .............................. <tClientURL>
  [123] pushcons 91 ............................. <"src">
  [125] pusharglist 1 ........................... <"src">
  [127] extcall 197 ............................. <externalParamValue("src")>
  [129] nteq .................................... <tClientURL <> externalParamValue("src")>
  [130] jmpifz [137] ............................ if tClientURL <> externalParamValue("src") then
  [133] pushcons 92 ............................. <"2">
  [135] setlocal 0 .............................. tClientURL = "2"
  [137] pusharglist 0 ........................... <>
  [139] extcall 192 ............................. <getMoviePath()>
  [141] getmovieprop 198 ........................ <the moviePath>
  [143] nteq .................................... <getMoviePath() <> the moviePath>
  [144] jmpifz [151] ............................ if getMoviePath() <> the moviePath then
  [147] pushcons 93 ............................. <"3">
  [149] setlocal 0 .............................. tClientURL = "3"
  [151] getlocal 2 .............................. <tConnection>
  [153] pushcons 94 ............................. <"VERSIONCHECK">
  [155] pushsymb 100 ............................ <#integer>
  [157] pushcons 95 ............................. <"client.version.id">
  [159] pusharglist 1 ........................... <"client.version.id">
  [161] extcall 62 .............................. <getIntVariable("client.version.id")>
  [163] pushsymb 80 ............................. <#string>
  [165] getlocal 0 .............................. <tClientURL>
  [167] pushsymb 80 ............................. <#string>
  [169] getlocal 1 .............................. <tExtVarsURL>
  [171] pusharglist 6 ........................... <[#integer: getIntVariable("client.version.id"), #string: tClientURL, #string: tExtVarsURL]>
  [173] pushproplist ............................ <[#integer: getIntVariable("client.version.id"), #string: tClientURL, #string: tExtVarsURL]>
  [174] pusharglistnoret 3 ...................... <tConnection, "VERSIONCHECK", [#integer: getIntVariable("client.version.id"), #string: tClientURL, #string: tExtVarsURL]>
  [176] objcall 40 .............................. tConnection.send("VERSIONCHECK", [#integer: getIntVariable("client.version.id"), #string: tClientURL, #string: tExtVarsURL])
  [178] getlocal 2 .............................. <tConnection>
  [180] pushcons 96 ............................. <"UNIQUEID">
  [182] pushsymb 80 ............................. <#string>
  [184] pusharglist 0 ........................... <>
  [186] extcall 199 ............................. <getMachineID()>
  [188] pusharglist 2 ........................... <[#string: getMachineID()]>
  [190] pushproplist ............................ <[#string: getMachineID()]>
  [191] pusharglistnoret 3 ...................... <tConnection, "UNIQUEID", [#string: getMachineID()]>
  [193] objcall 40 .............................. tConnection.send("UNIQUEID", [#string: getMachineID()])
  [195] getlocal 2 .............................. <tConnection>
  [197] pushcons 97 ............................. <"GET_SESSION_PARAMETERS">
  [199] pusharglistnoret 2 ...................... <tConnection, "GET_SESSION_PARAMETERS">
  [201] objcall 40 .............................. tConnection.send("GET_SESSION_PARAMETERS")
  [203] ret
end

on sendLogin me, tConnection
  [  0] pushcons 98 ............................. <"nav_problem_obj">
  [  2] pusharglist 1 ........................... <"nav_problem_obj">
  [  4] extcall 47 .............................. <objectExists("nav_problem_obj")>
  [  6] jmpifz [ 16] ............................ if objectExists("nav_problem_obj") then
  [  9] pushcons 98 ............................. <"nav_problem_obj">
  [ 11] pusharglistnoret 1 ...................... <"nav_problem_obj">
  [ 13] extcall 428 ............................. removeObject("nav_problem_obj")
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglist 1 ........................... <me>
  [ 20] objcall 51 .............................. <me.getComponent()>
  [ 22] pusharglist 1 ........................... <me.getComponent()>
  [ 24] objcall 423 ............................. <me.getComponent().isOkToLogin()>
  [ 27] jmpifz [162] ............................ if me.getComponent().isOkToLogin() then
  [ 30] pushsymb 44 ............................. <#session>
  [ 32] pusharglist 1 ........................... <#session>
  [ 34] extcall 43 .............................. <getObject(#session)>
  [ 36] pushsymb 72 ............................. <#userName>
  [ 38] pusharglist 2 ........................... <getObject(#session), #userName>
  [ 40] objcall 73 .............................. <getObject(#session).get(#userName)>
  [ 42] setlocal 0 .............................. tUserName = getObject(#session).get(#userName)
  [ 44] pushsymb 44 ............................. <#session>
  [ 46] pusharglist 1 ........................... <#session>
  [ 48] extcall 43 .............................. <getObject(#session)>
  [ 50] pushsymb 74 ............................. <#password>
  [ 52] pusharglist 2 ........................... <getObject(#session), #password>
  [ 54] objcall 73 .............................. <getObject(#session).get(#password)>
  [ 56] setlocal 1 .............................. tPassword = getObject(#session).get(#password)
  [ 58] pushsymb 44 ............................. <#session>
  [ 60] pusharglist 1 ........................... <#session>
  [ 62] extcall 43 .............................. <getObject(#session)>
  [ 64] pushsymb 381 ............................ <#totp>
  [ 67] pusharglist 2 ........................... <getObject(#session), #totp>
  [ 69] objcall 73 .............................. <getObject(#session).get(#totp)>
  [ 71] setlocal 2 .............................. tOneTimePassword = getObject(#session).get(#totp)
  [ 73] getlocal 0 .............................. <tUserName>
  [ 75] pusharglist 1 ........................... <tUserName>
  [ 77] extcall 447 ............................. <stringp(tUserName)>
  [ 80] not ..................................... <not stringp(tUserName)>
  [ 81] getlocal 1 .............................. <tPassword>
  [ 83] pusharglist 1 ........................... <tPassword>
  [ 85] extcall 447 ............................. <stringp(tPassword)>
  [ 88] not ..................................... <not stringp(tPassword)>
  [ 89] or ...................................... <not stringp(tUserName) or not stringp(tPassword)>
  [ 90] jmpifz [107] ............................ if not stringp(tUserName) or not stringp(tPassword) then
  [ 93] getparam 1 .............................. <tConnection>
  [ 95] pusharglist 1 ........................... <tConnection>
  [ 97] objcall 28 .............................. <tConnection.getID()>
  [ 99] pusharglist 1 ........................... <tConnection.getID()>
  [101] extcall 94 .............................. <removeConnection(tConnection.getID())>
  [103] pusharglistnoret 1 ...................... <removeConnection(tConnection.getID())>
  [105] extcall 29 .............................. return removeConnection(tConnection.getID())
  [107] getlocal 0 .............................. <tUserName>
  [109] pushcons 14 ............................. <EMPTY>
  [111] eq ...................................... <tUserName = EMPTY>
  [112] getlocal 1 .............................. <tPassword>
  [114] pushcons 14 ............................. <EMPTY>
  [116] eq ...................................... <tPassword = EMPTY>
  [117] or ...................................... <(tUserName = EMPTY) or (tPassword = EMPTY)>
  [118] jmpifz [135] ............................ if (tUserName = EMPTY) or (tPassword = EMPTY) then
  [121] getparam 1 .............................. <tConnection>
  [123] pusharglist 1 ........................... <tConnection>
  [125] objcall 28 .............................. <tConnection.getID()>
  [127] pusharglist 1 ........................... <tConnection.getID()>
  [129] extcall 94 .............................. <removeConnection(tConnection.getID())>
  [131] pusharglistnoret 1 ...................... <removeConnection(tConnection.getID())>
  [133] extcall 29 .............................. return removeConnection(tConnection.getID())
  [135] getparam 1 .............................. <tConnection>
  [137] pushcons 15 ............................. <"TRY_LOGIN">
  [139] pushsymb 80 ............................. <#string>
  [141] getlocal 0 .............................. <tUserName>
  [143] pushsymb 80 ............................. <#string>
  [145] getlocal 1 .............................. <tPassword>
  [147] pushsymb 80 ............................. <#string>
  [149] getlocal 2 .............................. <tOneTimePassword>
  [151] pusharglist 6 ........................... <[#string: tUserName, #string: tPassword, #string: tOneTimePassword]>
  [153] pushproplist ............................ <[#string: tUserName, #string: tPassword, #string: tOneTimePassword]>
  [154] pusharglist 3 ........................... <tConnection, "TRY_LOGIN", [#string: tUserName, #string: tPassword, #string: tOneTimePassword]>
  [156] objcall 40 .............................. <tConnection.send("TRY_LOGIN", [#string: tUserName, #string: tPassword, #string: tOneTimePassword])>
  [158] pusharglistnoret 1 ...................... <tConnection.send("TRY_LOGIN", [#string: tUserName, #string: tPassword, #string: tOneTimePassword])>
  [160] extcall 29 .............................. return tConnection.send("TRY_LOGIN", [#string: tUserName, #string: tPassword, #string: tOneTimePassword])
  [162] pushint8 1 .............................. <1>
  [164] pusharglistnoret 1 ...................... <1>
  [166] extcall 29 .............................. return 1
  [168] ret
end

on handleCallForHelpCategories me, tMsg
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCategories = []
  [  5] getparam 1 .............................. <tMsg>
  [  7] getchainedprop 35 ....................... <tMsg.connection>
  [  9] pusharglist 1 ........................... <tMsg.connection>
  [ 11] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [ 13] setlocal 1 .............................. tTotalCategories = tMsg.connection.GetIntFrom()
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 2
  [ 19] getlocal 2
  [ 21] getlocal 1 .............................. <tTotalCategories>
  [ 23] lteq
  [ 24] jmpifz [159] ............................ repeat with i = 1 to tTotalCategories
  [ 27] getparam 1 .............................. <tMsg>
  [ 29] getchainedprop 35 ....................... <tMsg.connection>
  [ 31] pusharglist 1 ........................... <tMsg.connection>
  [ 33] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [ 35] setlocal 3 .............................. tCategoryName = tMsg.connection.GetStrFrom()
  [ 37] getparam 1 .............................. <tMsg>
  [ 39] getchainedprop 35 ....................... <tMsg.connection>
  [ 41] pusharglist 1 ........................... <tMsg.connection>
  [ 43] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [ 45] setlocal 4 .............................. tTotalTopics = tMsg.connection.GetIntFrom()
  [ 47] pusharglist 0 ........................... <[]>
  [ 49] pushlist ................................ <[]>
  [ 50] setlocal 5 .............................. tTopics = []
  [ 52] pushint8 1 .............................. <1>
  [ 54] setlocal 6
  [ 56] getlocal 6
  [ 58] getlocal 4 .............................. <tTotalTopics>
  [ 60] lteq
  [ 61] jmpifz [129] ............................ repeat with j = 1 to tTotalTopics
  [ 64] getparam 1 .............................. <tMsg>
  [ 66] getchainedprop 35 ....................... <tMsg.connection>
  [ 68] pusharglist 1 ........................... <tMsg.connection>
  [ 70] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [ 72] setlocal 7 .............................. tReasonIdentifier = tMsg.connection.GetStrFrom()
  [ 74] getparam 1 .............................. <tMsg>
  [ 76] getchainedprop 35 ....................... <tMsg.connection>
  [ 78] pusharglist 1 ........................... <tMsg.connection>
  [ 80] objcall 41 .............................. <tMsg.connection.GetIntFrom()>
  [ 82] setlocal 8 .............................. tTopicID = tMsg.connection.GetIntFrom()
  [ 84] getparam 1 .............................. <tMsg>
  [ 86] getchainedprop 35 ....................... <tMsg.connection>
  [ 88] pusharglist 1 ........................... <tMsg.connection>
  [ 90] objcall 46 .............................. <tMsg.connection.GetStrFrom()>
  [ 92] setlocal 9 .............................. tConsequence = tMsg.connection.GetStrFrom()
  [ 94] getlocal 5 .............................. <tTopics>
  [ 96] getlocal 6 .............................. <j>
  [ 98] pushsymb 457 ............................ <#reason>
  [101] getlocal 7 .............................. <tReasonIdentifier>
  [103] pushsymb 458 ............................ <#topicId>
  [106] getlocal 8 .............................. <tTopicID>
  [108] pushsymb 459 ............................ <#consequence>
  [111] getlocal 9 .............................. <tConsequence>
  [113] pusharglist 6 ........................... <[#reason: tReasonIdentifier, #topicId: tTopicID, #consequence: tConsequence]>
  [115] pushproplist ............................ <[#reason: tReasonIdentifier, #topicId: tTopicID, #consequence: tConsequence]>
  [116] pusharglistnoret 3 ...................... <tTopics, j, [#reason: tReasonIdentifier, #topicId: tTopicID, #consequence: tConsequence]>
  [118] objcall 65 .............................. tTopics[j] = [#reason: tReasonIdentifier, #topicId: tTopicID, #consequence: tConsequence]
  [120] pushint8 1
  [122] getlocal 6
  [124] add
  [125] setlocal 6
  [127] endrepeat [ 56]
  [129] getlocal 0 .............................. <tCategories>
  [131] getlocal 2 .............................. <i>
  [133] pushsymb 443 ............................ <#name>
  [136] getlocal 3 .............................. <tCategoryName>
  [138] pushsymb 460 ............................ <#topics>
  [141] getlocal 5 .............................. <tTopics>
  [143] pusharglist 4 ........................... <[#name: tCategoryName, #topics: tTopics]>
  [145] pushproplist ............................ <[#name: tCategoryName, #topics: tTopics]>
  [146] pusharglistnoret 3 ...................... <tCategories, i, [#name: tCategoryName, #topics: tTopics]>
  [148] objcall 65 .............................. tCategories[i] = [#name: tCategoryName, #topics: tTopics]
  [150] pushint8 1
  [152] getlocal 2
  [154] add
  [155] setlocal 2
  [157] endrepeat [ 19]
  [159] pushsymb 44 ............................. <#session>
  [161] pusharglist 1 ........................... <#session>
  [163] extcall 43 .............................. <getObject(#session)>
  [165] pushcons 99 ............................. <"cfh_categories">
  [167] getlocal 0 .............................. <tCategories>
  [169] pusharglistnoret 3 ...................... <getObject(#session), "cfh_categories", tCategories>
  [171] objcall 45 .............................. getObject(#session).set("cfh_categories", tCategories)
  [173] ret
end

on hideLogin me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 37 .............................. <me.getInterface()>
  [  6] pusharglistnoret 1 ...................... <me.getInterface()>
  [  8] objcall 24 .............................. me.getInterface().hideLogin()
  [ 10] ret
end

on regMsgList me, tBool
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tMsgs = [:]
  [  5] getlocal 0 .............................. <tMsgs>
  [  7] pushint8 1 .............................. <1>
  [  9] inv ..................................... <-1>
  [ 10] pushsymb 2 .............................. <#handleDisconnect>
  [ 12] pusharglistnoret 3 ...................... <tMsgs, -1, #handleDisconnect>
  [ 14] objcall 123 ............................. tMsgs.setaProp(-1, #handleDisconnect)
  [ 16] getlocal 0 .............................. <tMsgs>
  [ 18] pushzero ................................ <0>
  [ 19] pushsymb 3 .............................. <#handleHello>
  [ 21] pusharglistnoret 3 ...................... <tMsgs, 0, #handleHello>
  [ 23] objcall 123 ............................. tMsgs.setaProp(0, #handleHello)
  [ 25] getlocal 0 .............................. <tMsgs>
  [ 27] pushint8 1 .............................. <1>
  [ 29] pushsymb 18 ............................. <#handleSecretKey>
  [ 31] pusharglistnoret 3 ...................... <tMsgs, 1, #handleSecretKey>
  [ 33] objcall 123 ............................. tMsgs.setaProp(1, #handleSecretKey)
  [ 35] getlocal 0 .............................. <tMsgs>
  [ 37] pushint8 2 .............................. <2>
  [ 39] pushsymb 13 ............................. <#handleRights>
  [ 41] pusharglistnoret 3 ...................... <tMsgs, 2, #handleRights>
  [ 43] objcall 123 ............................. tMsgs.setaProp(2, #handleRights)
  [ 45] getlocal 0 .............................. <tMsgs>
  [ 47] pushint8 3 .............................. <3>
  [ 49] pushsymb 6 .............................. <#handleLoginOK>
  [ 51] pusharglistnoret 3 ...................... <tMsgs, 3, #handleLoginOK>
  [ 53] objcall 123 ............................. tMsgs.setaProp(3, #handleLoginOK)
  [ 55] getlocal 0 .............................. <tMsgs>
  [ 57] pushint8 5 .............................. <5>
  [ 59] pushsymb 7 .............................. <#handleUserObj>
  [ 61] pusharglistnoret 3 ...................... <tMsgs, 5, #handleUserObj>
  [ 63] objcall 123 ............................. tMsgs.setaProp(5, #handleUserObj)
  [ 65] getlocal 0 .............................. <tMsgs>
  [ 67] pushint8 20 ............................. <20>
  [ 69] pushsymb 450 ............................ <#handleOneTimePassword>
  [ 72] pusharglistnoret 3 ...................... <tMsgs, 20, #handleOneTimePassword>
  [ 74] objcall 123 ............................. tMsgs.setaProp(20, #handleOneTimePassword)
  [ 76] getlocal 0 .............................. <tMsgs>
  [ 78] pushint8 33 ............................. <33>
  [ 80] pushsymb 14 ............................. <#handleErr>
  [ 82] pusharglistnoret 3 ...................... <tMsgs, 33, #handleErr>
  [ 84] objcall 123 ............................. tMsgs.setaProp(33, #handleErr)
  [ 86] getlocal 0 .............................. <tMsgs>
  [ 88] pushint8 35 ............................. <35>
  [ 90] pushsymb 8 .............................. <#handleUserBanned>
  [ 92] pusharglistnoret 3 ...................... <tMsgs, 35, #handleUserBanned>
  [ 94] objcall 123 ............................. tMsgs.setaProp(35, #handleUserBanned)
  [ 96] getlocal 0 .............................. <tMsgs>
  [ 98] pushint8 50 ............................. <50>
  [100] pushsymb 5 .............................. <#handlePing>
  [102] pusharglistnoret 3 ...................... <tMsgs, 50, #handlePing>
  [104] objcall 123 ............................. tMsgs.setaProp(50, #handlePing)
  [106] getlocal 0 .............................. <tMsgs>
  [108] pushint8 51 ............................. <51>
  [110] pushsymb 449 ............................ <#handleRegistrationOK>
  [113] pusharglistnoret 3 ...................... <tMsgs, 51, #handleRegistrationOK>
  [115] objcall 123 ............................. tMsgs.setaProp(51, #handleRegistrationOK)
  [117] getlocal 0 .............................. <tMsgs>
  [119] pushint8 52 ............................. <52>
  [121] pushsymb 9 .............................. <#handleEPSnotify>
  [123] pusharglistnoret 3 ...................... <tMsgs, 52, #handleEPSnotify>
  [125] objcall 123 ............................. tMsgs.setaProp(52, #handleEPSnotify)
  [127] getlocal 0 .............................. <tMsgs>
  [129] pushint16 139 ........................... <139>
  [132] pushsymb 10 ............................. <#handleSystemBroadcast>
  [134] pusharglistnoret 3 ...................... <tMsgs, 139, #handleSystemBroadcast>
  [136] objcall 123 ............................. tMsgs.setaProp(139, #handleSystemBroadcast)
  [138] getlocal 0 .............................. <tMsgs>
  [140] pushint16 141 ........................... <141>
  [143] pushsymb 11 ............................. <#handleCheckSum>
  [145] pusharglistnoret 3 ...................... <tMsgs, 141, #handleCheckSum>
  [147] objcall 123 ............................. tMsgs.setaProp(141, #handleCheckSum)
  [149] getlocal 0 .............................. <tMsgs>
  [151] pushint16 161 ........................... <161>
  [154] pushsymb 15 ............................. <#handleModAlert>
  [156] pusharglistnoret 3 ...................... <tMsgs, 161, #handleModAlert>
  [158] objcall 123 ............................. tMsgs.setaProp(161, #handleModAlert)
  [160] getlocal 0 .............................. <tMsgs>
  [162] pushint16 229 ........................... <229>
  [165] pushsymb 12 ............................. <#handleAvailableBadges>
  [167] pusharglistnoret 3 ...................... <tMsgs, 229, #handleAvailableBadges>
  [169] objcall 123 ............................. tMsgs.setaProp(229, #handleAvailableBadges)
  [171] getlocal 0 .............................. <tMsgs>
  [173] pushint16 257 ........................... <257>
  [176] pushsymb 4 .............................. <#handleSessionParameters>
  [178] pusharglistnoret 3 ...................... <tMsgs, 257, #handleSessionParameters>
  [180] objcall 123 ............................. tMsgs.setaProp(257, #handleSessionParameters)
  [182] getlocal 0 .............................. <tMsgs>
  [184] pushint16 277 ........................... <277>
  [187] pushsymb 16 ............................. <#handleCryptoParameters>
  [189] pusharglistnoret 3 ...................... <tMsgs, 277, #handleCryptoParameters>
  [191] objcall 123 ............................. tMsgs.setaProp(277, #handleCryptoParameters)
  [193] getlocal 0 .............................. <tMsgs>
  [195] pushint16 278 ........................... <278>
  [198] pushsymb 19 ............................. <#handleEndCrypto>
  [200] pusharglistnoret 3 ...................... <tMsgs, 278, #handleEndCrypto>
  [202] objcall 123 ............................. tMsgs.setaProp(278, #handleEndCrypto)
  [204] getlocal 0 .............................. <tMsgs>
  [206] pushint16 287 ........................... <287>
  [209] pushsymb 20 ............................. <#handleHotelLogout>
  [211] pusharglistnoret 3 ...................... <tMsgs, 287, #handleHotelLogout>
  [213] objcall 123 ............................. tMsgs.setaProp(287, #handleHotelLogout)
  [215] getlocal 0 .............................. <tMsgs>
  [217] pushint16 308 ........................... <308>
  [220] pushsymb 21 ............................. <#handleSoundSetting>
  [222] pusharglistnoret 3 ...................... <tMsgs, 308, #handleSoundSetting>
  [224] objcall 123 ............................. tMsgs.setaProp(308, #handleSoundSetting)
  [226] getlocal 0 .............................. <tMsgs>
  [228] pushint16 550 ........................... <550>
  [231] pushsymb 451 ............................ <#handleCallForHelpCategories>
  [234] pusharglistnoret 3 ...................... <tMsgs, 550, #handleCallForHelpCategories>
  [236] objcall 123 ............................. tMsgs.setaProp(550, #handleCallForHelpCategories)
  [238] pusharglist 0 ........................... <[:]>
  [240] pushproplist ............................ <[:]>
  [241] setlocal 1 .............................. tCmds = [:]
  [243] getlocal 1 .............................. <tCmds>
  [245] pushcons 15 ............................. <"TRY_LOGIN">
  [247] pushint8 4 .............................. <4>
  [249] pusharglistnoret 3 ...................... <tCmds, "TRY_LOGIN", 4>
  [251] objcall 123 ............................. tCmds.setaProp("TRY_LOGIN", 4)
  [253] getlocal 1 .............................. <tCmds>
  [255] pushcons 94 ............................. <"VERSIONCHECK">
  [257] pushint8 5 .............................. <5>
  [259] pusharglistnoret 3 ...................... <tCmds, "VERSIONCHECK", 5>
  [261] objcall 123 ............................. tCmds.setaProp("VERSIONCHECK", 5)
  [263] getlocal 1 .............................. <tCmds>
  [265] pushcons 96 ............................. <"UNIQUEID">
  [267] pushint8 6 .............................. <6>
  [269] pusharglistnoret 3 ...................... <tCmds, "UNIQUEID", 6>
  [271] objcall 123 ............................. tCmds.setaProp("UNIQUEID", 6)
  [273] getlocal 1 .............................. <tCmds>
  [275] pushcons 16 ............................. <"GET_INFO">
  [277] pushint8 7 .............................. <7>
  [279] pusharglistnoret 3 ...................... <tCmds, "GET_INFO", 7>
  [281] objcall 123 ............................. tCmds.setaProp("GET_INFO", 7)
  [283] getlocal 1 .............................. <tCmds>
  [285] pushcons 17 ............................. <"GET_CREDITS">
  [287] pushint8 8 .............................. <8>
  [289] pusharglistnoret 3 ...................... <tCmds, "GET_CREDITS", 8>
  [291] objcall 123 ............................. tCmds.setaProp("GET_CREDITS", 8)
  [293] getlocal 1 .............................. <tCmds>
  [295] pushcons 100 ............................ <"GET_PASSWORD">
  [297] pushint8 47 ............................. <47>
  [299] pusharglistnoret 3 ...................... <tCmds, "GET_PASSWORD", 47>
  [301] objcall 123 ............................. tCmds.setaProp("GET_PASSWORD", 47)
  [303] getlocal 1 .............................. <tCmds>
  [305] pushcons 101 ............................ <"LANGCHECK">
  [307] pushint8 58 ............................. <58>
  [309] pusharglistnoret 3 ...................... <tCmds, "LANGCHECK", 58>
  [311] objcall 123 ............................. tCmds.setaProp("LANGCHECK", 58)
  [313] getlocal 1 .............................. <tCmds>
  [315] pushcons 102 ............................ <"BTCKS">
  [317] pushint8 105 ............................ <105>
  [319] pusharglistnoret 3 ...................... <tCmds, "BTCKS", 105>
  [321] objcall 123 ............................. tCmds.setaProp("BTCKS", 105)
  [323] getlocal 1 .............................. <tCmds>
  [325] pushcons 18 ............................. <"GETAVAILABLEBADGES">
  [327] pushint16 157 ........................... <157>
  [330] pusharglistnoret 3 ...................... <tCmds, "GETAVAILABLEBADGES", 157>
  [332] objcall 123 ............................. tCmds.setaProp("GETAVAILABLEBADGES", 157)
  [334] getlocal 1 .............................. <tCmds>
  [336] pushcons 97 ............................. <"GET_SESSION_PARAMETERS">
  [338] pushint16 181 ........................... <181>
  [341] pusharglistnoret 3 ...................... <tCmds, "GET_SESSION_PARAMETERS", 181>
  [343] objcall 123 ............................. tCmds.setaProp("GET_SESSION_PARAMETERS", 181)
  [345] getlocal 1 .............................. <tCmds>
  [347] pushcons 13 ............................. <"PONG">
  [349] pushint16 196 ........................... <196>
  [352] pusharglistnoret 3 ...................... <tCmds, "PONG", 196>
  [354] objcall 123 ............................. tCmds.setaProp("PONG", 196)
  [356] getlocal 1 .............................. <tCmds>
  [358] pushcons 79 ............................. <"GENERATEKEY">
  [360] pushint16 202 ........................... <202>
  [363] pusharglistnoret 3 ...................... <tCmds, "GENERATEKEY", 202>
  [365] objcall 123 ............................. tCmds.setaProp("GENERATEKEY", 202)
  [367] getlocal 1 .............................. <tCmds>
  [369] pushcons 1 .............................. <"INIT_CRYPTO">
  [371] pushint16 206 ........................... <206>
  [374] pusharglistnoret 3 ...................... <tCmds, "INIT_CRYPTO", 206>
  [376] objcall 123 ............................. tCmds.setaProp("INIT_CRYPTO", 206)
  [378] getlocal 1 .............................. <tCmds>
  [380] pushcons 103 ............................ <"SECRETKEY">
  [382] pushint16 207 ........................... <207>
  [385] pusharglistnoret 3 ...................... <tCmds, "SECRETKEY", 207>
  [387] objcall 123 ............................. tCmds.setaProp("SECRETKEY", 207)
  [389] getlocal 1 .............................. <tCmds>
  [391] pushcons 104 ............................ <"GET_SOUND_SETTING">
  [393] pushint16 228 ........................... <228>
  [396] pusharglistnoret 3 ...................... <tCmds, "GET_SOUND_SETTING", 228>
  [398] objcall 123 ............................. tCmds.setaProp("GET_SOUND_SETTING", 228)
  [400] getlocal 1 .............................. <tCmds>
  [402] pushcons 105 ............................ <"SET_SOUND_SETTING">
  [404] pushint16 229 ........................... <229>
  [407] pusharglistnoret 3 ...................... <tCmds, "SET_SOUND_SETTING", 229>
  [409] objcall 123 ............................. tCmds.setaProp("SET_SOUND_SETTING", 229)
  [411] getlocal 1 .............................. <tCmds>
  [413] pushcons 19 ............................. <"GET_CFH_CATEGORIES">
  [415] pushint16 550 ........................... <550>
  [418] pusharglistnoret 3 ...................... <tCmds, "GET_CFH_CATEGORIES", 550>
  [420] objcall 123 ............................. tCmds.setaProp("GET_CFH_CATEGORIES", 550)
  [422] pushcons 74 ............................. <"connection.info.id">
  [424] pushsymb 203 ............................ <#info>
  [426] pusharglist 2 ........................... <"connection.info.id", #info>
  [428] extcall 79 .............................. <getVariable("connection.info.id", #info)>
  [430] setlocal 2 .............................. tConn = getVariable("connection.info.id", #info)
  [432] getparam 1 .............................. <tBool>
  [434] jmpifz [468] ............................ if tBool then / else
  [437] getlocal 2 .............................. <tConn>
  [439] getparam 0 .............................. <me>
  [441] pusharglist 1 ........................... <me>
  [443] objcall 28 .............................. <me.getID()>
  [445] getlocal 0 .............................. <tMsgs>
  [447] pusharglistnoret 3 ...................... <tConn, me.getID(), tMsgs>
  [449] extcall 204 ............................. registerListener(tConn, me.getID(), tMsgs)
  [451] getlocal 2 .............................. <tConn>
  [453] getparam 0 .............................. <me>
  [455] pusharglist 1 ........................... <me>
  [457] objcall 28 .............................. <me.getID()>
  [459] getlocal 1 .............................. <tCmds>
  [461] pusharglistnoret 3 ...................... <tConn, me.getID(), tCmds>
  [463] extcall 205 ............................. registerCommands(tConn, me.getID(), tCmds)
  [465] jmp [496]
  [468] getlocal 2 .............................. <tConn>
  [470] getparam 0 .............................. <me>
  [472] pusharglist 1 ........................... <me>
  [474] objcall 28 .............................. <me.getID()>
  [476] getlocal 0 .............................. <tMsgs>
  [478] pusharglistnoret 3 ...................... <tConn, me.getID(), tMsgs>
  [480] extcall 206 ............................. unregisterListener(tConn, me.getID(), tMsgs)
  [482] getlocal 2 .............................. <tConn>
  [484] getparam 0 .............................. <me>
  [486] pusharglist 1 ........................... <me>
  [488] objcall 28 .............................. <me.getID()>
  [490] getlocal 1 .............................. <tCmds>
  [492] pusharglistnoret 3 ...................... <tConn, me.getID(), tCmds>
  [494] extcall 207 ............................. unregisterCommands(tConn, me.getID(), tCmds)
  [496] pushint8 1 .............................. <1>
  [498] pusharglistnoret 1 ...................... <1>
  [500] extcall 29 .............................. return 1
  [502] ret
end
