property pRoomBarID, pRoomInfoID, pObjectDispID, pBadgeObjID, pFxInvObjID

on construct me
  [  0] pushcons 0 .............................. <"RoomBarProgram">
  [  2] setprop 11 .............................. pRoomBarID = "RoomBarProgram"
  [  4] pushcons 1 .............................. <"RoomInfoProgram">
  [  6] setprop 12 .............................. pRoomInfoID = "RoomInfoProgram"
  [  8] pushcons 2 .............................. <"ObjectDisplayerProgram">
  [ 10] setprop 13 .............................. pObjectDispID = "ObjectDisplayerProgram"
  [ 12] pushcons 3 .............................. <"room.obj.disp.badge.mngr">
  [ 14] setprop 14 .............................. pBadgeObjID = "room.obj.disp.badge.mngr"
  [ 16] pushcons 4 .............................. <"room.obj.fx.inventory">
  [ 18] setprop 15 .............................. pFxInvObjID = "room.obj.fx.inventory"
  [ 20] getprop 12 .............................. <pRoomInfoID>
  [ 22] pushcons 5 .............................. <"Room Info Class">
  [ 24] pusharglistnoret 2 ...................... <pRoomInfoID, "Room Info Class">
  [ 26] extcall 16 .............................. createObject(pRoomInfoID, "Room Info Class")
  [ 28] getprop 11 .............................. <pRoomBarID>
  [ 30] pushcons 6 .............................. <"Room Bar Class">
  [ 32] pusharglistnoret 2 ...................... <pRoomBarID, "Room Bar Class">
  [ 34] extcall 16 .............................. createObject(pRoomBarID, "Room Bar Class")
  [ 36] getprop 13 .............................. <pObjectDispID>
  [ 38] pushcons 7 .............................. <"Room Object Displayer Class">
  [ 40] pusharglistnoret 2 ...................... <pObjectDispID, "Room Object Displayer Class">
  [ 42] extcall 16 .............................. createObject(pObjectDispID, "Room Object Displayer Class")
  [ 44] getprop 14 .............................. <pBadgeObjID>
  [ 46] pushcons 8 .............................. <"Badge Manager Class">
  [ 48] pusharglistnoret 2 ...................... <pBadgeObjID, "Badge Manager Class">
  [ 50] extcall 16 .............................. createObject(pBadgeObjID, "Badge Manager Class")
  [ 52] getprop 15 .............................. <pFxInvObjID>
  [ 54] pushcons 9 .............................. <"Effect Inventory Class">
  [ 56] pusharglistnoret 2 ...................... <pFxInvObjID, "Effect Inventory Class">
  [ 58] extcall 16 .............................. createObject(pFxInvObjID, "Effect Inventory Class")
  [ 60] pushsymb 18 ............................. <#takingPhoto>
  [ 62] getparam 0 .............................. <me>
  [ 64] pusharglist 1 ........................... <me>
  [ 66] objcall 19 .............................. <me.getID()>
  [ 68] pushsymb 8 .............................. <#hideInfoStand>
  [ 70] pusharglistnoret 3 ...................... <#takingPhoto, me.getID(), #hideInfoStand>
  [ 72] extcall 17 .............................. registerMessage(#takingPhoto, me.getID(), #hideInfoStand)
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglistnoret 1 ...................... <1>
  [ 78] extcall 20 .............................. return 1
  [ 80] ret
end

on deconstruct me
  [  0] pushsymb 18 ............................. <#takingPhoto>
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 19 .............................. <me.getID()>
  [  8] pusharglistnoret 2 ...................... <#takingPhoto, me.getID()>
  [ 10] extcall 22 .............................. unregisterMessage(#takingPhoto, me.getID())
  [ 12] getprop 12 .............................. <pRoomInfoID>
  [ 14] pusharglistnoret 1 ...................... <pRoomInfoID>
  [ 16] extcall 23 .............................. removeObject(pRoomInfoID)
  [ 18] getprop 11 .............................. <pRoomBarID>
  [ 20] pusharglistnoret 1 ...................... <pRoomBarID>
  [ 22] extcall 23 .............................. removeObject(pRoomBarID)
  [ 24] getprop 13 .............................. <pObjectDispID>
  [ 26] pusharglistnoret 1 ...................... <pObjectDispID>
  [ 28] extcall 23 .............................. removeObject(pObjectDispID)
  [ 30] getprop 14 .............................. <pBadgeObjID>
  [ 32] pusharglistnoret 1 ...................... <pBadgeObjID>
  [ 34] extcall 23 .............................. removeObject(pBadgeObjID)
  [ 36] getprop 15 .............................. <pFxInvObjID>
  [ 38] pusharglistnoret 1 ...................... <pFxInvObjID>
  [ 40] extcall 23 .............................. removeObject(pFxInvObjID)
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglistnoret 1 ...................... <1>
  [ 46] extcall 20 .............................. return 1
  [ 48] ret
end

on getBadgeObject me
  [  0] getprop 14 .............................. <pBadgeObjID>
  [  2] pusharglist 1 ........................... <pBadgeObjID>
  [  4] extcall 24 .............................. <getObject(pBadgeObjID)>
  [  6] pusharglistnoret 1 ...................... <getObject(pBadgeObjID)>
  [  8] extcall 20 .............................. return getObject(pBadgeObjID)
  [ 10] ret
end

on getFxInventory me
  [  0] getprop 15 .............................. <pFxInvObjID>
  [  2] pusharglist 1 ........................... <pFxInvObjID>
  [  4] extcall 24 .............................. <getObject(pFxInvObjID)>
  [  6] pusharglistnoret 1 ...................... <getObject(pFxInvObjID)>
  [  8] extcall 20 .............................. return getObject(pFxInvObjID)
  [ 10] ret
end

on showRoomBar me, tLayout
  [  0] getprop 12 .............................. <pRoomInfoID>
  [  2] pusharglist 1 ........................... <pRoomInfoID>
  [  4] extcall 24 .............................. <getObject(pRoomInfoID)>
  [  6] setlocal 0 .............................. tRoomInfoObj = getObject(pRoomInfoID)
  [  8] getlocal 0 .............................. <tRoomInfoObj>
  [ 10] pusharglist 1 ........................... <tRoomInfoObj>
  [ 12] extcall 25 .............................. <voidp(tRoomInfoObj)>
  [ 14] not ..................................... <not voidp(tRoomInfoObj)>
  [ 15] getlocal 0 .............................. <tRoomInfoObj>
  [ 17] not ..................................... <not tRoomInfoObj>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <not tRoomInfoObj = 0>
  [ 20] and ..................................... <not voidp(tRoomInfoObj) and (not tRoomInfoObj = 0)>
  [ 21] jmpifz [ 30] ............................ if not voidp(tRoomInfoObj) and (not tRoomInfoObj = 0) then
  [ 24] getlocal 0 .............................. <tRoomInfoObj>
  [ 26] pusharglistnoret 1 ...................... <tRoomInfoObj>
  [ 28] objcall 26 .............................. tRoomInfoObj.showRoomInfo()
  [ 30] getprop 11 .............................. <pRoomBarID>
  [ 32] pusharglist 1 ........................... <pRoomBarID>
  [ 34] extcall 24 .............................. <getObject(pRoomBarID)>
  [ 36] setlocal 1 .............................. tRoomBarObj = getObject(pRoomBarID)
  [ 38] getlocal 1 .............................. <tRoomBarObj>
  [ 40] pusharglist 1 ........................... <tRoomBarObj>
  [ 42] extcall 25 .............................. <voidp(tRoomBarObj)>
  [ 44] not ..................................... <not voidp(tRoomBarObj)>
  [ 45] getlocal 1 .............................. <tRoomBarObj>
  [ 47] not ..................................... <not tRoomBarObj>
  [ 48] pushzero ................................ <0>
  [ 49] eq ...................................... <not tRoomBarObj = 0>
  [ 50] and ..................................... <not voidp(tRoomBarObj) and (not tRoomBarObj = 0)>
  [ 51] jmpifz [ 62] ............................ if not voidp(tRoomBarObj) and (not tRoomBarObj = 0) then
  [ 54] getlocal 1 .............................. <tRoomBarObj>
  [ 56] getparam 1 .............................. <tLayout>
  [ 58] pusharglistnoret 2 ...................... <tRoomBarObj, tLayout>
  [ 60] objcall 4 ............................... tRoomBarObj.showRoomBar(tLayout)
  [ 62] pushcons 10 ............................. <"new_user_help">
  [ 64] pusharglist 1 ........................... <"new_user_help">
  [ 66] extcall 27 .............................. <threadExists("new_user_help")>
  [ 68] jmpifz [ 98] ............................ if threadExists("new_user_help") then
  [ 71] pushcons 10 ............................. <"new_user_help">
  [ 73] pusharglist 1 ........................... <"new_user_help">
  [ 75] extcall 28 .............................. <getThread("new_user_help")>
  [ 77] pusharglist 1 ........................... <getThread("new_user_help")>
  [ 79] objcall 29 .............................. <getThread("new_user_help").getComponent()>
  [ 81] setlocal 2 .............................. tComponent = getThread("new_user_help").getComponent()
  [ 83] getlocal 2 .............................. <tComponent>
  [ 85] pusharglist 1 ........................... <tComponent>
  [ 87] objcall 30 .............................. <tComponent.isChatHelpOn()>
  [ 89] jmpifz [ 98] ............................ if tComponent.isChatHelpOn() then
  [ 92] getlocal 1 .............................. <tRoomBarObj>
  [ 94] pusharglistnoret 1 ...................... <tRoomBarObj>
  [ 96] objcall 31 .............................. tRoomBarObj.applyChatHelpText()
  [ 98] ret
end

on hideRoomBar me
  [  0] getprop 12 .............................. <pRoomInfoID>
  [  2] pusharglist 1 ........................... <pRoomInfoID>
  [  4] extcall 24 .............................. <getObject(pRoomInfoID)>
  [  6] setlocal 0 .............................. tRoomInfoObj = getObject(pRoomInfoID)
  [  8] getlocal 0 .............................. <tRoomInfoObj>
  [ 10] pusharglist 1 ........................... <tRoomInfoObj>
  [ 12] extcall 25 .............................. <voidp(tRoomInfoObj)>
  [ 14] not ..................................... <not voidp(tRoomInfoObj)>
  [ 15] getlocal 0 .............................. <tRoomInfoObj>
  [ 17] not ..................................... <not tRoomInfoObj>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <not tRoomInfoObj = 0>
  [ 20] and ..................................... <not voidp(tRoomInfoObj) and (not tRoomInfoObj = 0)>
  [ 21] jmpifz [ 30] ............................ if not voidp(tRoomInfoObj) and (not tRoomInfoObj = 0) then
  [ 24] getlocal 0 .............................. <tRoomInfoObj>
  [ 26] pusharglistnoret 1 ...................... <tRoomInfoObj>
  [ 28] objcall 36 .............................. tRoomInfoObj.hideRoomInfo()
  [ 30] getprop 11 .............................. <pRoomBarID>
  [ 32] pusharglist 1 ........................... <pRoomBarID>
  [ 34] extcall 24 .............................. <getObject(pRoomBarID)>
  [ 36] setlocal 1 .............................. tRoomBarObj = getObject(pRoomBarID)
  [ 38] getlocal 1 .............................. <tRoomBarObj>
  [ 40] pusharglist 1 ........................... <tRoomBarObj>
  [ 42] extcall 25 .............................. <voidp(tRoomBarObj)>
  [ 44] not ..................................... <not voidp(tRoomBarObj)>
  [ 45] getlocal 1 .............................. <tRoomBarObj>
  [ 47] not ..................................... <not tRoomBarObj>
  [ 48] pushzero ................................ <0>
  [ 49] eq ...................................... <not tRoomBarObj = 0>
  [ 50] and ..................................... <not voidp(tRoomBarObj) and (not tRoomBarObj = 0)>
  [ 51] jmpifz [ 60] ............................ if not voidp(tRoomBarObj) and (not tRoomBarObj = 0) then
  [ 54] getlocal 1 .............................. <tRoomBarObj>
  [ 56] pusharglistnoret 1 ...................... <tRoomBarObj>
  [ 58] objcall 5 ............................... tRoomBarObj.hideRoomBar()
  [ 60] ret
end

on setRollOverInfo me, tInfoText
  [  0] getprop 11 .............................. <pRoomBarID>
  [  2] pusharglist 1 ........................... <pRoomBarID>
  [  4] extcall 24 .............................. <getObject(pRoomBarID)>
  [  6] setlocal 0 .............................. tRoomBarObj = getObject(pRoomBarID)
  [  8] getlocal 0 .............................. <tRoomBarObj>
  [ 10] pusharglist 1 ........................... <tRoomBarObj>
  [ 12] extcall 25 .............................. <voidp(tRoomBarObj)>
  [ 14] not ..................................... <not voidp(tRoomBarObj)>
  [ 15] getlocal 0 .............................. <tRoomBarObj>
  [ 17] not ..................................... <not tRoomBarObj>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <not tRoomBarObj = 0>
  [ 20] and ..................................... <not voidp(tRoomBarObj) and (not tRoomBarObj = 0)>
  [ 21] jmpifz [ 32] ............................ if not voidp(tRoomBarObj) and (not tRoomBarObj = 0) then
  [ 24] getlocal 0 .............................. <tRoomBarObj>
  [ 26] getparam 1 .............................. <tInfoText>
  [ 28] pusharglistnoret 2 ...................... <tRoomBarObj, tInfoText>
  [ 30] objcall 6 ............................... tRoomBarObj.setRollOverInfo(tInfoText)
  [ 32] ret
end

on showInfostand me
  [  0] pusharglistnoret 0 ...................... <>
  [  2] extcall 38 .............................. nothing()
  [  4] ret
end

on hideInfoStand me
  [  0] getprop 13 .............................. <pObjectDispID>
  [  2] pusharglist 1 ........................... <pObjectDispID>
  [  4] extcall 24 .............................. <getObject(pObjectDispID)>
  [  6] setlocal 0 .............................. tObjDisp = getObject(pObjectDispID)
  [  8] getlocal 0 .............................. <tObjDisp>
  [ 10] pusharglistnoret 1 ...................... <tObjDisp>
  [ 12] objcall 39 .............................. tObjDisp.clearWindowDisplayList()
  [ 14] ret
end

on showObjectInfo me, tObjType
  [  0] getprop 13 .............................. <pObjectDispID>
  [  2] pusharglist 1 ........................... <pObjectDispID>
  [  4] extcall 24 .............................. <getObject(pObjectDispID)>
  [  6] setlocal 0 .............................. tObjDisp = getObject(pObjectDispID)
  [  8] getlocal 0 .............................. <tObjDisp>
  [ 10] getparam 1 .............................. <tObjType>
  [ 12] pusharglistnoret 2 ...................... <tObjDisp, tObjType>
  [ 14] objcall 9 ............................... tObjDisp.showObjectInfo(tObjType)
  [ 16] ret
end

on showVote me
  [  0] getprop 11 .............................. <pRoomBarID>
  [  2] pusharglist 1 ........................... <pRoomBarID>
  [  4] extcall 24 .............................. <getObject(pRoomBarID)>
  [  6] setlocal 0 .............................. tRoomBarObj = getObject(pRoomBarID)
  [  8] getlocal 0 .............................. <tRoomBarObj>
  [ 10] pusharglist 1 ........................... <tRoomBarObj>
  [ 12] extcall 25 .............................. <voidp(tRoomBarObj)>
  [ 14] not ..................................... <not voidp(tRoomBarObj)>
  [ 15] getlocal 0 .............................. <tRoomBarObj>
  [ 17] not ..................................... <not tRoomBarObj>
  [ 18] pushzero ................................ <0>
  [ 19] eq ...................................... <not tRoomBarObj = 0>
  [ 20] and ..................................... <not voidp(tRoomBarObj) and (not tRoomBarObj = 0)>
  [ 21] jmpifz [ 30] ............................ if not voidp(tRoomBarObj) and (not tRoomBarObj = 0) then
  [ 24] getlocal 0 .............................. <tRoomBarObj>
  [ 26] pusharglistnoret 1 ...................... <tRoomBarObj>
  [ 28] objcall 10 .............................. tRoomBarObj.showVote()
  [ 30] ret
end
