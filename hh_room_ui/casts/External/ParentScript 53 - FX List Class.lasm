property pBadges, pRects, pColumns, pMinRows, pGridSize, pWriterIdPlain, pWriterIdBold, pBg, pBgNew, pBgHilite

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 930 ............................. pBadges = []
  [  6] pusharglist 0 ........................... <[:]>
  [  8] pushproplist ............................ <[:]>
  [  9] setprop 931 ............................. pRects = [:]
  [ 12] pushint8 3 .............................. <3>
  [ 14] setprop 932 ............................. pColumns = 3
  [ 17] pushint8 4 .............................. <4>
  [ 19] setprop 933 ............................. pMinRows = 4
  [ 22] pushint8 47 ............................. <47>
  [ 24] setprop 934 ............................. pGridSize = 47
  [ 27] pusharglist 0 ........................... <>
  [ 29] extcall 622 ............................. <getUniqueID()>
  [ 32] setprop 935 ............................. pWriterIdPlain = getUniqueID()
  [ 35] pusharglist 0 ........................... <>
  [ 37] extcall 622 ............................. <getUniqueID()>
  [ 40] setprop 936 ............................. pWriterIdBold = getUniqueID()
  [ 43] pushcons 0 .............................. <"badge_grid_bg">
  [ 45] pusharglist 1 ........................... <"badge_grid_bg">
  [ 47] extcall 675 ............................. <memberExists("badge_grid_bg")>
  [ 50] jmpifz [ 71] ............................ if memberExists("badge_grid_bg") then / else
  [ 53] pushcons 0 .............................. <"badge_grid_bg">
  [ 55] pusharglist 1 ........................... <"badge_grid_bg">
  [ 57] extcall 128 ............................. <getmemnum("badge_grid_bg")>
  [ 59] pusharglist 1 ........................... <getmemnum("badge_grid_bg")>
  [ 61] extcall 88 .............................. <member(getmemnum("badge_grid_bg"))>
  [ 63] getobjprop 129 .......................... <member(getmemnum("badge_grid_bg")).image>
  [ 65] setprop 937 ............................. pBg = member(getmemnum("badge_grid_bg")).image
  [ 68] jmp [ 84]
  [ 71] pushint8 1 .............................. <1>
  [ 73] pushint8 1 .............................. <1>
  [ 75] pushint8 8 .............................. <8>
  [ 77] pusharglist 3 ........................... <1, 1, 8>
  [ 79] extcall 129 ............................. <image(1, 1, 8)>
  [ 81] setprop 937 ............................. pBg = image(1, 1, 8)
  [ 84] pushcons 1 .............................. <"badge_grid_bg_new">
  [ 86] pusharglist 1 ........................... <"badge_grid_bg_new">
  [ 88] extcall 675 ............................. <memberExists("badge_grid_bg_new")>
  [ 91] jmpifz [112] ............................ if memberExists("badge_grid_bg_new") then / else
  [ 94] pushcons 1 .............................. <"badge_grid_bg_new">
  [ 96] pusharglist 1 ........................... <"badge_grid_bg_new">
  [ 98] extcall 128 ............................. <getmemnum("badge_grid_bg_new")>
  [100] pusharglist 1 ........................... <getmemnum("badge_grid_bg_new")>
  [102] extcall 88 .............................. <member(getmemnum("badge_grid_bg_new"))>
  [104] getobjprop 129 .......................... <member(getmemnum("badge_grid_bg_new")).image>
  [106] setprop 938 ............................. pBgNew = member(getmemnum("badge_grid_bg_new")).image
  [109] jmp [125]
  [112] pushint8 1 .............................. <1>
  [114] pushint8 1 .............................. <1>
  [116] pushint8 8 .............................. <8>
  [118] pusharglist 3 ........................... <1, 1, 8>
  [120] extcall 129 ............................. <image(1, 1, 8)>
  [122] setprop 938 ............................. pBgNew = image(1, 1, 8)
  [125] pushcons 2 .............................. <"badge_grid_bg_hilite">
  [127] pusharglist 1 ........................... <"badge_grid_bg_hilite">
  [129] extcall 675 ............................. <memberExists("badge_grid_bg_hilite")>
  [132] jmpifz [153] ............................ if memberExists("badge_grid_bg_hilite") then / else
  [135] pushcons 2 .............................. <"badge_grid_bg_hilite">
  [137] pusharglist 1 ........................... <"badge_grid_bg_hilite">
  [139] extcall 128 ............................. <getmemnum("badge_grid_bg_hilite")>
  [141] pusharglist 1 ........................... <getmemnum("badge_grid_bg_hilite")>
  [143] extcall 88 .............................. <member(getmemnum("badge_grid_bg_hilite"))>
  [145] getobjprop 129 .......................... <member(getmemnum("badge_grid_bg_hilite")).image>
  [147] setprop 939 ............................. pBgHilite = member(getmemnum("badge_grid_bg_hilite")).image
  [150] jmp [166]
  [153] pushint8 1 .............................. <1>
  [155] pushint8 1 .............................. <1>
  [157] pushint8 8 .............................. <8>
  [159] pusharglist 3 ........................... <1, 1, 8>
  [161] extcall 129 ............................. <image(1, 1, 8)>
  [163] setprop 939 ............................. pBgHilite = image(1, 1, 8)
  [166] pushint8 1 .............................. <1>
  [168] pusharglistnoret 1 ...................... <1>
  [170] extcall 20 .............................. return 1
  [172] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 929 ............................. me.removeWriters()
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 20 .............................. return 1
  [ 13] ret
end

on render me, tBadges, tSelectedBadges, tNewBadges, tActiveBadge
  [  0] getparam 2 .............................. <tSelectedBadges>
  [  2] pusharglist 1 ........................... <tSelectedBadges>
  [  4] extcall 25 .............................. <voidp(tSelectedBadges)>
  [  6] jmpifz [ 14] ............................ if voidp(tSelectedBadges) then
  [  9] pusharglist 0 ........................... <[]>
  [ 11] pushlist ................................ <[]>
  [ 12] setparam 2 .............................. tSelectedBadges = []
  [ 14] getparam 1 .............................. <tBadges>
  [ 16] setprop 930 ............................. pBadges = tBadges
  [ 19] getparam 1 .............................. <tBadges>
  [ 21] getobjprop 162 .......................... <tBadges.count>
  [ 23] getprop 932 ............................. <pColumns>
  [ 26] div ..................................... <tBadges.count / pColumns>
  [ 27] setlocal 0 .............................. tRows = tBadges.count / pColumns
  [ 29] getparam 1 .............................. <tBadges>
  [ 31] getobjprop 162 .......................... <tBadges.count>
  [ 33] getprop 932 ............................. <pColumns>
  [ 36] mod ..................................... <tBadges.count mod pColumns>
  [ 37] pushzero ................................ <0>
  [ 38] gt ...................................... <(tBadges.count mod pColumns) > 0>
  [ 39] jmpifz [ 49] ............................ if (tBadges.count mod pColumns) > 0 then
  [ 42] getlocal 0 .............................. <tRows>
  [ 44] pushint8 1 .............................. <1>
  [ 46] add ..................................... <tRows + 1>
  [ 47] setlocal 0 .............................. tRows = tRows + 1
  [ 49] getlocal 0 .............................. <tRows>
  [ 51] getprop 933 ............................. <pMinRows>
  [ 54] pusharglist 2 ........................... <tRows, pMinRows>
  [ 56] extcall 521 ............................. <max(tRows, pMinRows)>
  [ 59] setlocal 0 .............................. tRows = max(tRows, pMinRows)
  [ 61] getprop 932 ............................. <pColumns>
  [ 64] getprop 934 ............................. <pGridSize>
  [ 67] mul ..................................... <pColumns * pGridSize>
  [ 68] getlocal 0 .............................. <tRows>
  [ 70] getprop 934 ............................. <pGridSize>
  [ 73] mul ..................................... <tRows * pGridSize>
  [ 74] pushint8 32 ............................. <32>
  [ 76] pusharglist 3 ........................... <pColumns * pGridSize, tRows * pGridSize, 32>
  [ 78] extcall 129 ............................. <image(pColumns * pGridSize, tRows * pGridSize, 32)>
  [ 80] setlocal 1 .............................. tListImage = image(pColumns * pGridSize, tRows * pGridSize, 32)
  [ 82] pushzero ................................ <0>
  [ 83] setlocal 2 .............................. tRow = 0
  [ 85] pushzero ................................ <0>
  [ 86] setlocal 3 .............................. tCol = 0
  [ 88] getlocal 0 .............................. <tRows>
  [ 90] getprop 932 ............................. <pColumns>
  [ 93] mul ..................................... <tRows * pColumns>
  [ 94] setlocal 4 .............................. tLastIndex = tRows * pColumns
  [ 96] pushint8 1 .............................. <1>
  [ 98] setlocal 5
  [100] getlocal 5
  [102] getlocal 4 .............................. <tLastIndex>
  [104] lteq
  [105] jmpifz [339] ............................ repeat with tIndex = 1 to tLastIndex
  [108] getlocal 3 .............................. <tCol>
  [110] getprop 934 ............................. <pGridSize>
  [113] mul ..................................... <tCol * pGridSize>
  [114] getlocal 2 .............................. <tRow>
  [116] getprop 934 ............................. <pGridSize>
  [119] mul ..................................... <tRow * pGridSize>
  [120] getlocal 3 .............................. <tCol>
  [122] pushint8 1 .............................. <1>
  [124] add ..................................... <tCol + 1>
  [125] getprop 934 ............................. <pGridSize>
  [128] mul ..................................... <(tCol + 1) * pGridSize>
  [129] getlocal 2 .............................. <tRow>
  [131] pushint8 1 .............................. <1>
  [133] add ..................................... <tRow + 1>
  [134] getprop 934 ............................. <pGridSize>
  [137] mul ..................................... <(tRow + 1) * pGridSize>
  [138] pusharglist 4 ........................... <tCol * pGridSize, tRow * pGridSize, (tCol + 1) * pGridSize, (tRow + 1) * pGridSize>
  [140] extcall 218 ............................. <rect(tCol * pGridSize, tRow * pGridSize, (tCol + 1) * pGridSize, (tRow + 1) * pGridSize)>
  [142] setlocal 6 .............................. tTargetRect = rect(tCol * pGridSize, tRow * pGridSize, (tCol + 1) * pGridSize, (tRow + 1) * pGridSize)
  [144] getlocal 1 .............................. <tListImage>
  [146] getprop 937 ............................. <pBg>
  [149] getlocal 6 .............................. <tTargetRect>
  [151] getprop 937 ............................. <pBg>
  [154] getobjprop 218 .......................... <pBg.rect>
  [156] pusharglistnoret 4 ...................... <tListImage, pBg, tTargetRect, pBg.rect>
  [158] objcall 219 ............................. tListImage.copyPixels(pBg, tTargetRect, pBg.rect)
  [160] getlocal 5 .............................. <tIndex>
  [162] getparam 1 .............................. <tBadges>
  [164] getobjprop 162 .......................... <tBadges.count>
  [166] lteq .................................... <tIndex <= tBadges.count>
  [167] jmpifz [304] ............................ if tIndex <= tBadges.count then
  [170] getparam 1 .............................. <tBadges>
  [172] getlocal 5 .............................. <tIndex>
  [174] pusharglist 2 ........................... <tBadges, tIndex>
  [176] objcall 164 ............................. <tBadges[tIndex]>
  [178] setlocal 7 .............................. tBadgeID = tBadges[tIndex]
  [180] getlocal 7 .............................. <tBadgeID>
  [182] getparam 4 .............................. <tActiveBadge>
  [184] eq ...................................... <tBadgeID = tActiveBadge>
  [185] jmpifz [204] ............................ if tBadgeID = tActiveBadge then
  [188] getlocal 1 .............................. <tListImage>
  [190] getprop 939 ............................. <pBgHilite>
  [193] getlocal 6 .............................. <tTargetRect>
  [195] getprop 939 ............................. <pBgHilite>
  [198] getobjprop 218 .......................... <pBgHilite.rect>
  [200] pusharglistnoret 4 ...................... <tListImage, pBgHilite, tTargetRect, pBgHilite.rect>
  [202] objcall 219 ............................. tListImage.copyPixels(pBgHilite, tTargetRect, pBgHilite.rect)
  [204] pushcons 3 .............................. <"ctlg_pic_small_fx_">
  [206] getlocal 7 .............................. <tBadgeID>
  [208] joinstr ................................. <"ctlg_pic_small_fx_" & tBadgeID>
  [209] pusharglist 1 ........................... <"ctlg_pic_small_fx_" & tBadgeID>
  [211] extcall 128 ............................. <getmemnum("ctlg_pic_small_fx_" & tBadgeID)>
  [213] pusharglist 1 ........................... <getmemnum("ctlg_pic_small_fx_" & tBadgeID)>
  [215] extcall 88 .............................. <member(getmemnum("ctlg_pic_small_fx_" & tBadgeID))>
  [217] getobjprop 129 .......................... <member(getmemnum("ctlg_pic_small_fx_" & tBadgeID)).image>
  [219] setlocal 8 .............................. tBadgeImage = member(getmemnum("ctlg_pic_small_fx_" & tBadgeID)).image
  [221] getlocal 8 .............................. <tBadgeImage>
  [223] getobjprop 335 .......................... <tBadgeImage.ilk>
  [226] pushsymb 129 ............................ <#image>
  [228] eq ...................................... <tBadgeImage.ilk = #image>
  [229] jmpifz [304] ............................ if tBadgeImage.ilk = #image then
  [232] getlocal 8 .............................. <tBadgeImage>
  [234] getobjprop 218 .......................... <tBadgeImage.rect>
  [236] pushzero ................................ <0>
  [237] pushzero ................................ <0>
  [238] pushint8 1 .............................. <1>
  [240] pushint8 1 .............................. <1>
  [242] pusharglist 4 ........................... <0, 0, 1, 1>
  [244] extcall 218 ............................. <rect(0, 0, 1, 1)>
  [246] eq ...................................... <tBadgeImage.rect = rect(0, 0, 1, 1)>
  [247] jmpifz [264] ............................ if tBadgeImage.rect = rect(0, 0, 1, 1) then
  [250] pushcons 4 .............................. <"loading_icon">
  [252] pusharglist 1 ........................... <"loading_icon">
  [254] extcall 128 ............................. <getmemnum("loading_icon")>
  [256] pusharglist 1 ........................... <getmemnum("loading_icon")>
  [258] extcall 88 .............................. <member(getmemnum("loading_icon"))>
  [260] getobjprop 129 .......................... <member(getmemnum("loading_icon")).image>
  [262] setlocal 8 .............................. tBadgeImage = member(getmemnum("loading_icon")).image
  [264] getparam 0 .............................. <me>
  [266] getlocal 8 .............................. <tBadgeImage>
  [268] getlocal 6 .............................. <tTargetRect>
  [270] pusharglist 3 ........................... <me, tBadgeImage, tTargetRect>
  [272] objcall 880 ............................. <me.centerImage(tBadgeImage, tTargetRect)>
  [275] setlocal 9 .............................. tCenteredImage = me.centerImage(tBadgeImage, tTargetRect)
  [277] getlocal 1 .............................. <tListImage>
  [279] getlocal 9 .............................. <tCenteredImage>
  [281] getlocal 6 .............................. <tTargetRect>
  [283] getlocal 9 .............................. <tCenteredImage>
  [285] getobjprop 218 .......................... <tCenteredImage.rect>
  [287] pushsymb 940 ............................ <#maskImage>
  [290] getlocal 9 .............................. <tCenteredImage>
  [292] pusharglist 1 ........................... <tCenteredImage>
  [294] objcall 941 ............................. <tCenteredImage.createMatte()>
  [297] pusharglist 2 ........................... <[#maskImage: tCenteredImage.createMatte()]>
  [299] pushproplist ............................ <[#maskImage: tCenteredImage.createMatte()]>
  [300] pusharglistnoret 5 ...................... <tListImage, tCenteredImage, tTargetRect, tCenteredImage.rect, [#maskImage: tCenteredImage.createMatte()]>
  [302] objcall 219 ............................. tListImage.copyPixels(tCenteredImage, tTargetRect, tCenteredImage.rect, [#maskImage: tCenteredImage.createMatte()])
  [304] getlocal 3 .............................. <tCol>
  [306] pushint8 1 .............................. <1>
  [308] add ..................................... <tCol + 1>
  [309] setlocal 3 .............................. tCol = tCol + 1
  [311] getlocal 3 .............................. <tCol>
  [313] getprop 932 ............................. <pColumns>
  [316] gteq .................................... <tCol >= pColumns>
  [317] jmpifz [330] ............................ if tCol >= pColumns then
  [320] pushzero ................................ <0>
  [321] setlocal 3 .............................. tCol = 0
  [323] getlocal 2 .............................. <tRow>
  [325] pushint8 1 .............................. <1>
  [327] add ..................................... <tRow + 1>
  [328] setlocal 2 .............................. tRow = tRow + 1
  [330] pushint8 1
  [332] getlocal 5
  [334] add
  [335] setlocal 5
  [337] endrepeat [100]
  [339] getlocal 1 .............................. <tListImage>
  [341] pusharglistnoret 1 ...................... <tListImage>
  [343] extcall 20 .............................. return tListImage
  [345] ret
end

on getBadgeAt me, tpoint
  [  0] getparam 1 .............................. <tpoint>
  [  2] getobjprop 335 .......................... <tpoint.ilk>
  [  5] pushsymb 210 ............................ <#point>
  [  7] nteq .................................... <tpoint.ilk <> #point>
  [  8] jmpifz [ 30] ............................ if tpoint.ilk <> #point then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 5 .............................. <"Point expected.">
  [ 15] pushsymb 924 ............................ <#getBadgeAt>
  [ 18] pushsymb 544 ............................ <#major>
  [ 21] pusharglist 4 ........................... <me, "Point expected.", #getBadgeAt, #major>
  [ 23] extcall 339 ............................. <error(me, "Point expected.", #getBadgeAt, #major)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "Point expected.", #getBadgeAt, #major)>
  [ 28] extcall 20 .............................. return error(me, "Point expected.", #getBadgeAt, #major)
  [ 30] getparam 1 .............................. <tpoint>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pusharglist 2 ........................... <tpoint, 1>
  [ 36] objcall 164 ............................. <tpoint[1]>
  [ 38] getprop 934 ............................. <pGridSize>
  [ 41] div ..................................... <tpoint[1] / pGridSize>
  [ 42] pushint8 1 .............................. <1>
  [ 44] add ..................................... <(tpoint[1] / pGridSize) + 1>
  [ 45] setlocal 0 .............................. tCol = (tpoint[1] / pGridSize) + 1
  [ 47] getlocal 0 .............................. <tCol>
  [ 49] getprop 932 ............................. <pColumns>
  [ 52] gt ...................................... <tCol > pColumns>
  [ 53] jmpifz [ 61] ............................ if tCol > pColumns then
  [ 56] pushzero ................................ <0>
  [ 57] pusharglistnoret 1 ...................... <0>
  [ 59] extcall 20 .............................. return 0
  [ 61] getparam 1 .............................. <tpoint>
  [ 63] pushint8 2 .............................. <2>
  [ 65] pusharglist 2 ........................... <tpoint, 2>
  [ 67] objcall 164 ............................. <tpoint[2]>
  [ 69] getprop 934 ............................. <pGridSize>
  [ 72] div ..................................... <tpoint[2] / pGridSize>
  [ 73] pushint8 1 .............................. <1>
  [ 75] add ..................................... <(tpoint[2] / pGridSize) + 1>
  [ 76] setlocal 1 .............................. tRow = (tpoint[2] / pGridSize) + 1
  [ 78] getlocal 1 .............................. <tRow>
  [ 80] pushint8 1 .............................. <1>
  [ 82] sub ..................................... <tRow - 1>
  [ 83] getprop 932 ............................. <pColumns>
  [ 86] mul ..................................... <(tRow - 1) * pColumns>
  [ 87] getlocal 0 .............................. <tCol>
  [ 89] add ..................................... <((tRow - 1) * pColumns) + tCol>
  [ 90] setlocal 2 .............................. tIndex = ((tRow - 1) * pColumns) + tCol
  [ 92] getlocal 2 .............................. <tIndex>
  [ 94] pushzero ................................ <0>
  [ 95] gt ...................................... <tIndex > 0>
  [ 96] getlocal 2 .............................. <tIndex>
  [ 98] getprop 930 ............................. <pBadges>
  [101] getobjprop 162 .......................... <pBadges.count>
  [103] lteq .................................... <tIndex <= pBadges.count>
  [104] and ..................................... <(tIndex > 0) and (tIndex <= pBadges.count)>
  [105] jmpifz [121] ............................ if (tIndex > 0) and (tIndex <= pBadges.count) then
  [108] getprop 930 ............................. <pBadges>
  [111] getlocal 2 .............................. <tIndex>
  [113] pusharglist 2 ........................... <pBadges, tIndex>
  [115] objcall 164 ............................. <pBadges[tIndex]>
  [117] pusharglistnoret 1 ...................... <pBadges[tIndex]>
  [119] extcall 20 .............................. return pBadges[tIndex]
  [121] pushzero ................................ <0>
  [122] pusharglistnoret 1 ...................... <0>
  [124] extcall 20 .............................. return 0
  [126] ret
end

on centerImage me, tImage, tRect
  [  0] getparam 2 .............................. <tRect>
  [  2] getobjprop 138 .......................... <tRect.width>
  [  4] getparam 2 .............................. <tRect>
  [  6] getobjprop 146 .......................... <tRect.height>
  [  8] getparam 1 .............................. <tImage>
  [ 10] getobjprop 950 .......................... <tImage.depth>
  [ 13] pusharglist 3 ........................... <tRect.width, tRect.height, tImage.depth>
  [ 15] extcall 129 ............................. <image(tRect.width, tRect.height, tImage.depth)>
  [ 17] setlocal 0 .............................. tCentered = image(tRect.width, tRect.height, tImage.depth)
  [ 19] getparam 2 .............................. <tRect>
  [ 21] getobjprop 138 .......................... <tRect.width>
  [ 23] getparam 1 .............................. <tImage>
  [ 25] getobjprop 138 .......................... <tImage.width>
  [ 27] sub ..................................... <tRect.width - tImage.width>
  [ 28] pushint8 2 .............................. <2>
  [ 30] div ..................................... <(tRect.width - tImage.width) / 2>
  [ 31] setlocal 1 .............................. tOffH = (tRect.width - tImage.width) / 2
  [ 33] getparam 2 .............................. <tRect>
  [ 35] getobjprop 146 .......................... <tRect.height>
  [ 37] getparam 1 .............................. <tImage>
  [ 39] getobjprop 146 .......................... <tImage.height>
  [ 41] sub ..................................... <tRect.height - tImage.height>
  [ 42] pushint8 2 .............................. <2>
  [ 44] div ..................................... <(tRect.height - tImage.height) / 2>
  [ 45] setlocal 2 .............................. tOffV = (tRect.height - tImage.height) / 2
  [ 47] getparam 1 .............................. <tImage>
  [ 49] getobjprop 218 .......................... <tImage.rect>
  [ 51] getlocal 1 .............................. <tOffH>
  [ 53] getlocal 2 .............................. <tOffV>
  [ 55] getlocal 1 .............................. <tOffH>
  [ 57] getlocal 2 .............................. <tOffV>
  [ 59] pusharglist 4 ........................... <tOffH, tOffV, tOffH, tOffV>
  [ 61] extcall 218 ............................. <rect(tOffH, tOffV, tOffH, tOffV)>
  [ 63] add ..................................... <tImage.rect + rect(tOffH, tOffV, tOffH, tOffV)>
  [ 64] setlocal 3 .............................. tTargetRect = tImage.rect + rect(tOffH, tOffV, tOffH, tOffV)
  [ 66] getlocal 0 .............................. <tCentered>
  [ 68] getparam 1 .............................. <tImage>
  [ 70] getlocal 3 .............................. <tTargetRect>
  [ 72] getparam 1 .............................. <tImage>
  [ 74] getobjprop 218 .......................... <tImage.rect>
  [ 76] pusharglistnoret 4 ...................... <tCentered, tImage, tTargetRect, tImage.rect>
  [ 78] objcall 219 ............................. tCentered.copyPixels(tImage, tTargetRect, tImage.rect)
  [ 80] getlocal 0 .............................. <tCentered>
  [ 82] pusharglistnoret 1 ...................... <tCentered>
  [ 84] extcall 20 .............................. return tCentered
  [ 86] ret
end

on getPlainWriter me
  [  0] getprop 935 ............................. <pWriterIdPlain>
  [  3] pusharglist 1 ........................... <pWriterIdPlain>
  [  5] extcall 954 ............................. <writerExists(pWriterIdPlain)>
  [  8] jmpifz [ 23] ............................ if writerExists(pWriterIdPlain) then
  [ 11] getprop 935 ............................. <pWriterIdPlain>
  [ 14] pusharglist 1 ........................... <pWriterIdPlain>
  [ 16] extcall 509 ............................. <getWriter(pWriterIdPlain)>
  [ 19] pusharglistnoret 1 ...................... <getWriter(pWriterIdPlain)>
  [ 21] extcall 20 .............................. return getWriter(pWriterIdPlain)
  [ 23] pushcons 6 .............................. <"struct.font.plain">
  [ 25] pusharglist 1 ........................... <"struct.font.plain">
  [ 27] extcall 505 ............................. <getStructVariable("struct.font.plain")>
  [ 30] setlocal 0 .............................. tPlainStruct = getStructVariable("struct.font.plain")
  [ 32] getprop 935 ............................. <pWriterIdPlain>
  [ 35] getlocal 0 .............................. <tPlainStruct>
  [ 37] pusharglistnoret 2 ...................... <pWriterIdPlain, tPlainStruct>
  [ 39] extcall 507 ............................. createWriter(pWriterIdPlain, tPlainStruct)
  [ 42] getprop 935 ............................. <pWriterIdPlain>
  [ 45] pusharglist 1 ........................... <pWriterIdPlain>
  [ 47] extcall 509 ............................. <getWriter(pWriterIdPlain)>
  [ 50] setlocal 1 .............................. tWriter = getWriter(pWriterIdPlain)
  [ 52] getlocal 1 .............................. <tWriter>
  [ 54] pushsymb 535 ............................ <#wordWrap>
  [ 57] pushint8 1 .............................. <1>
  [ 59] pusharglistnoret 3 ...................... <tWriter, #wordWrap, 1>
  [ 61] objcall 90 .............................. tWriter.setProperty(#wordWrap, 1)
  [ 63] getprop 935 ............................. <pWriterIdPlain>
  [ 66] pusharglist 1 ........................... <pWriterIdPlain>
  [ 68] extcall 509 ............................. <getWriter(pWriterIdPlain)>
  [ 71] pusharglistnoret 1 ...................... <getWriter(pWriterIdPlain)>
  [ 73] extcall 20 .............................. return getWriter(pWriterIdPlain)
  [ 75] ret
end

on getBoldWriter me
  [  0] getprop 936 ............................. <pWriterIdBold>
  [  3] pusharglist 1 ........................... <pWriterIdBold>
  [  5] extcall 954 ............................. <writerExists(pWriterIdBold)>
  [  8] jmpifz [ 23] ............................ if writerExists(pWriterIdBold) then
  [ 11] getprop 936 ............................. <pWriterIdBold>
  [ 14] pusharglist 1 ........................... <pWriterIdBold>
  [ 16] extcall 509 ............................. <getWriter(pWriterIdBold)>
  [ 19] pusharglistnoret 1 ...................... <getWriter(pWriterIdBold)>
  [ 21] extcall 20 .............................. return getWriter(pWriterIdBold)
  [ 23] pushcons 7 .............................. <"struct.font.bold">
  [ 25] pusharglist 1 ........................... <"struct.font.bold">
  [ 27] extcall 505 ............................. <getStructVariable("struct.font.bold")>
  [ 30] setlocal 0 .............................. tBoldStruct = getStructVariable("struct.font.bold")
  [ 32] getprop 936 ............................. <pWriterIdBold>
  [ 35] getlocal 0 .............................. <tBoldStruct>
  [ 37] pusharglistnoret 2 ...................... <pWriterIdBold, tBoldStruct>
  [ 39] extcall 507 ............................. createWriter(pWriterIdBold, tBoldStruct)
  [ 42] getprop 936 ............................. <pWriterIdBold>
  [ 45] pusharglist 1 ........................... <pWriterIdBold>
  [ 47] extcall 509 ............................. <getWriter(pWriterIdBold)>
  [ 50] pusharglistnoret 1 ...................... <getWriter(pWriterIdBold)>
  [ 52] extcall 20 .............................. return getWriter(pWriterIdBold)
  [ 54] ret
end

on removeWriters me
  [  0] getprop 935 ............................. <pWriterIdPlain>
  [  3] pusharglist 1 ........................... <pWriterIdPlain>
  [  5] extcall 954 ............................. <writerExists(pWriterIdPlain)>
  [  8] jmpifz [ 19] ............................ if writerExists(pWriterIdPlain) then
  [ 11] getprop 935 ............................. <pWriterIdPlain>
  [ 14] pusharglistnoret 1 ...................... <pWriterIdPlain>
  [ 16] extcall 958 ............................. removeWriter(pWriterIdPlain)
  [ 19] getprop 936 ............................. <pWriterIdBold>
  [ 22] pusharglist 1 ........................... <pWriterIdBold>
  [ 24] extcall 954 ............................. <writerExists(pWriterIdBold)>
  [ 27] jmpifz [ 38] ............................ if writerExists(pWriterIdBold) then
  [ 30] getprop 936 ............................. <pWriterIdBold>
  [ 33] pusharglistnoret 1 ...................... <pWriterIdBold>
  [ 35] extcall 958 ............................. removeWriter(pWriterIdBold)
  [ 38] ret
end
