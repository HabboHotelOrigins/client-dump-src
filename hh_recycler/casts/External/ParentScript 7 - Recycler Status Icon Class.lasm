property pRecyclerButtonSpr, pButtonLoc, pNormalMem, pHighlightMem, pSkippedFrames, pFLashOn, pStatusWindowID

on construct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 23 .............................. <VOID>
  [  4] setprop 265 ............................. pRecyclerButtonSpr = VOID
  [  7] pushint8 40 ............................. <40>
  [  9] pushint8 5 .............................. <5>
  [ 11] pusharglist 2 ........................... <40, 5>
  [ 13] extcall 267 ............................. <point(40, 5)>
  [ 16] setprop 266 ............................. pButtonLoc = point(40, 5)
  [ 19] pushcons 0 .............................. <"recycler.status.icon.normal">
  [ 21] pusharglist 1 ........................... <"recycler.status.icon.normal">
  [ 23] extcall 270 ............................. <getStringVariable("recycler.status.icon.normal")>
  [ 26] pusharglist 1 ........................... <getStringVariable("recycler.status.icon.normal")>
  [ 28] extcall 269 ............................. <getmemnum(getStringVariable("recycler.status.icon.normal"))>
  [ 31] pusharglist 1 ........................... <getmemnum(getStringVariable("recycler.status.icon.normal"))>
  [ 33] extcall 131 ............................. <member(getmemnum(getStringVariable("recycler.status.icon.normal")))>
  [ 35] setprop 268 ............................. pNormalMem = member(getmemnum(getStringVariable("recycler.status.icon.normal")))
  [ 38] pushcons 1 .............................. <"recycler.status.icon.highlight">
  [ 40] pusharglist 1 ........................... <"recycler.status.icon.highlight">
  [ 42] extcall 270 ............................. <getStringVariable("recycler.status.icon.highlight")>
  [ 45] pusharglist 1 ........................... <getStringVariable("recycler.status.icon.highlight")>
  [ 47] extcall 269 ............................. <getmemnum(getStringVariable("recycler.status.icon.highlight"))>
  [ 50] pusharglist 1 ........................... <getmemnum(getStringVariable("recycler.status.icon.highlight"))>
  [ 52] extcall 131 ............................. <member(getmemnum(getStringVariable("recycler.status.icon.highlight")))>
  [ 54] setprop 271 ............................. pHighlightMem = member(getmemnum(getStringVariable("recycler.status.icon.highlight")))
  [ 57] pushcons 2 .............................. <"recycler_status_window_title">
  [ 59] pusharglist 1 ........................... <"recycler_status_window_title">
  [ 61] extcall 68 .............................. <getText("recycler_status_window_title")>
  [ 63] setprop 272 ............................. pStatusWindowID = getText("recycler_status_window_title")
  [ 66] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 35 .............................. <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 248 ............................. removePrepare(me.getID())
  [ 10] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 13] pusharglist 1 ........................... <pRecyclerButtonSpr>
  [ 15] extcall 273 ............................. <ilk(pRecyclerButtonSpr)>
  [ 18] pushsymb 274 ............................ <#sprite>
  [ 21] eq ...................................... <ilk(pRecyclerButtonSpr) = #sprite>
  [ 22] jmpifz [ 32] ............................ if ilk(pRecyclerButtonSpr) = #sprite then
  [ 25] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 28] pushzero ................................ <0>
  [ 29] setobjprop 275 .......................... pRecyclerButtonSpr.visible = 0
  [ 32] pusharglist 0 ........................... <>
  [ 34] extcall 23 .............................. <VOID>
  [ 36] setprop 265 ............................. pRecyclerButtonSpr = VOID
  [ 39] ret
end

on showRecyclerButton me, tstate
  [  0] getparam 1 .............................. <tstate>
  [  2] pusharglist 1 ........................... <tstate>
  [  4] extcall 63 .............................. <voidp(tstate)>
  [  6] jmpifz [ 13] ............................ if voidp(tstate) then
  [  9] pushcons 3 .............................. <"normal">
  [ 11] setparam 1 .............................. tstate = "normal"
  [ 13] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 16] getobjprop 273 .......................... <pRecyclerButtonSpr.ilk>
  [ 19] pushsymb 274 ............................ <#sprite>
  [ 22] nteq .................................... <pRecyclerButtonSpr.ilk <> #sprite>
  [ 23] jmpifz [ 63] ............................ if pRecyclerButtonSpr.ilk <> #sprite then
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 35 .............................. <me.getID()>
  [ 32] pusharglist 1 ........................... <me.getID()>
  [ 34] extcall 276 ............................. <reserveSprite(me.getID())>
  [ 37] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [ 39] extcall 274 ............................. <sprite(reserveSprite(me.getID()))>
  [ 42] setprop 265 ............................. pRecyclerButtonSpr = sprite(reserveSprite(me.getID()))
  [ 45] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 48] pushzero ................................ <0>
  [ 49] pusharglist 1 ........................... <0>
  [ 51] extcall 274 ............................. <sprite(0)>
  [ 54] eq ...................................... <pRecyclerButtonSpr = sprite(0)>
  [ 55] jmpifz [ 63] ............................ if pRecyclerButtonSpr = sprite(0) then
  [ 58] pushzero ................................ <0>
  [ 59] pusharglistnoret 1 ...................... <0>
  [ 61] extcall 36 .............................. return 0
  [ 63] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 66] getprop 268 ............................. <pNormalMem>
  [ 69] setobjprop 131 .......................... pRecyclerButtonSpr.member = pNormalMem
  [ 71] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 74] pushint8 8 .............................. <8>
  [ 76] setobjprop 277 .......................... pRecyclerButtonSpr.ink = 8
  [ 79] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 82] getprop 266 ............................. <pButtonLoc>
  [ 85] setobjprop 278 .......................... pRecyclerButtonSpr.loc = pButtonLoc
  [ 88] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 91] pushint32 200000000 ..................... <200000000>
  [ 96] setobjprop 279 .......................... pRecyclerButtonSpr.locZ = 200000000
  [ 99] getprop 265 ............................. <pRecyclerButtonSpr>
  [102] pushint8 1 .............................. <1>
  [104] setobjprop 275 .......................... pRecyclerButtonSpr.visible = 1
  [107] getprop 265 ............................. <pRecyclerButtonSpr>
  [110] getobjprop 281 .......................... <pRecyclerButtonSpr.spriteNum>
  [113] getparam 0 .............................. <me>
  [115] pusharglist 1 ........................... <me>
  [117] objcall 35 .............................. <me.getID()>
  [119] pushcons 4 .............................. <"_spr">
  [121] joinstr ................................. <me.getID() & "_spr">
  [122] pusharglistnoret 2 ...................... <pRecyclerButtonSpr.spriteNum, me.getID() & "_spr">
  [124] extcall 280 ............................. setEventBroker(pRecyclerButtonSpr.spriteNum, me.getID() & "_spr")
  [127] getprop 265 ............................. <pRecyclerButtonSpr>
  [130] pushsymb 262 ............................ <#eventProcRecyclerButton>
  [133] getparam 0 .............................. <me>
  [135] pusharglist 1 ........................... <me>
  [137] objcall 35 .............................. <me.getID()>
  [139] pushsymb 141 ............................ <#mouseUp>
  [141] pusharglistnoret 4 ...................... <pRecyclerButtonSpr, #eventProcRecyclerButton, me.getID(), #mouseUp>
  [143] objcall 282 ............................. pRecyclerButtonSpr.registerProcedure(#eventProcRecyclerButton, me.getID(), #mouseUp)
  [146] getprop 265 ............................. <pRecyclerButtonSpr>
  [149] pushcons 5 .............................. <"cursor.finger">
  [151] pusharglistnoret 2 ...................... <pRecyclerButtonSpr, "cursor.finger">
  [153] objcall 283 ............................. pRecyclerButtonSpr.setcursor("cursor.finger")
  [156] getparam 1 .............................. <tstate>
  [158] pushcons 6 .............................. <"highlight">
  [160] eq ...................................... <tstate = "highlight">
  [161] jmpifz [176] ............................ if tstate = "highlight" then / else
  [164] getparam 0 .............................. <me>
  [166] pushint8 1 .............................. <1>
  [168] pusharglistnoret 2 ...................... <me, 1>
  [170] objcall 260 ............................. me.setFlashing(1)
  [173] jmp [184]
  [176] getparam 0 .............................. <me>
  [178] pushzero ................................ <0>
  [179] pusharglistnoret 2 ...................... <me, 0>
  [181] objcall 260 ............................. me.setFlashing(0)
  [184] pushint8 1 .............................. <1>
  [186] pusharglistnoret 1 ...................... <1>
  [188] extcall 36 .............................. return 1
  [190] ret
end

on hideRecyclerButton me
  [  0] getprop 265 ............................. <pRecyclerButtonSpr>
  [  3] getobjprop 273 .......................... <pRecyclerButtonSpr.ilk>
  [  6] pushsymb 274 ............................ <#sprite>
  [  9] nteq .................................... <pRecyclerButtonSpr.ilk <> #sprite>
  [ 10] jmpifz [ 18] ............................ if pRecyclerButtonSpr.ilk <> #sprite then
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 36 .............................. return 0
  [ 18] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 21] pushzero ................................ <0>
  [ 22] setobjprop 275 .......................... pRecyclerButtonSpr.visible = 0
  [ 25] ret
end

on setFlashing me, tFlashingOn
  [  0] getparam 1 .............................. <tFlashingOn>
  [  2] pusharglist 1 ........................... <tFlashingOn>
  [  4] extcall 63 .............................. <voidp(tFlashingOn)>
  [  6] jmpifz [ 12] ............................ if voidp(tFlashingOn) then
  [  9] pushzero ................................ <0>
  [ 10] setparam 1 .............................. tFlashingOn = 0
  [ 12] getparam 1 .............................. <tFlashingOn>
  [ 14] jmpifz [ 30] ............................ if tFlashingOn then / else
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 35 .............................. <me.getID()>
  [ 23] pusharglistnoret 1 ...................... <me.getID()>
  [ 25] extcall 246 ............................. receivePrepare(me.getID())
  [ 27] jmp [ 61]
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglist 1 ........................... <me>
  [ 34] objcall 35 .............................. <me.getID()>
  [ 36] pusharglistnoret 1 ...................... <me.getID()>
  [ 38] extcall 248 ............................. removePrepare(me.getID())
  [ 40] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 43] getobjprop 273 .......................... <pRecyclerButtonSpr.ilk>
  [ 46] pushsymb 274 ............................ <#sprite>
  [ 49] eq ...................................... <pRecyclerButtonSpr.ilk = #sprite>
  [ 50] jmpifz [ 61] ............................ if pRecyclerButtonSpr.ilk = #sprite then
  [ 53] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 56] getprop 268 ............................. <pNormalMem>
  [ 59] setobjprop 131 .......................... pRecyclerButtonSpr.member = pNormalMem
  [ 61] ret
end

on openCloseStatusWindow me
  [  0] getprop 272 ............................. <pStatusWindowID>
  [  3] pusharglist 1 ........................... <pStatusWindowID>
  [  5] extcall 285 ............................. <windowExists(pStatusWindowID)>
  [  8] jmpifz [ 21] ............................ if windowExists(pStatusWindowID) then / else
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglistnoret 1 ...................... <me>
  [ 15] objcall 264 ............................. me.closeStatusWindow()
  [ 18] jmp [ 28]
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglistnoret 1 ...................... <me>
  [ 25] objcall 263 ............................. me.createStatusWindow()
  [ 28] ret
end

on eventProcRecyclerButton me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 141 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [ 35] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] peek 0 .................................. case tSprID of
  [ 12] pushcons 7 .............................. <"recycler_note_ok">
  [ 14] nteq
  [ 15] jmpifz [ 26] ............................ (case) "recycler_note_ok", ...
  [ 18] peek 0
  [ 20] pushcons 8 .............................. <"rec_status_icon_spr">
  [ 22] eq
  [ 23] jmpifz [ 33] ............................ (case) ..., "rec_status_icon_spr":
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglistnoret 1 ...................... <me>
  [ 30] objcall 261 ............................. me.openCloseStatusWindow()
  [ 33] pop 1
  [ 35] ret
end

on createStatusWindow me
  [  0] getprop 272 ............................. <pStatusWindowID>
  [  3] pushcons 9 .............................. <"habbo_full.window">
  [  5] pusharglist 2 ........................... <pStatusWindowID, "habbo_full.window">
  [  7] extcall 286 ............................. <createWindow(pStatusWindowID, "habbo_full.window")>
  [ 10] not ..................................... <not createWindow(pStatusWindowID, "habbo_full.window")>
  [ 11] jmpifz [ 32] ............................ if not createWindow(pStatusWindowID, "habbo_full.window") then
  [ 14] getparam 0 .............................. <me>
  [ 16] pushcons 10 ............................. <"Failed to create status window">
  [ 18] pushsymb 263 ............................ <#createStatusWindow>
  [ 21] pushsymb 287 ............................ <#major>
  [ 24] pusharglist 4 ........................... <me, "Failed to create status window", #createStatusWindow, #major>
  [ 26] extcall 206 ............................. <error(me, "Failed to create status window", #createStatusWindow, #major)>
  [ 28] pusharglistnoret 1 ...................... <error(me, "Failed to create status window", #createStatusWindow, #major)>
  [ 30] extcall 36 .............................. return error(me, "Failed to create status window", #createStatusWindow, #major)
  [ 32] getprop 272 ............................. <pStatusWindowID>
  [ 35] pusharglist 1 ........................... <pStatusWindowID>
  [ 37] extcall 288 ............................. <getWindow(pStatusWindowID)>
  [ 40] setlocal 0 .............................. tWindowObj = getWindow(pStatusWindowID)
  [ 42] getlocal 0 .............................. <tWindowObj>
  [ 44] pushcons 11 ............................. <"recycler_notification.window">
  [ 46] pusharglistnoret 2 ...................... <tWindowObj, "recycler_notification.window">
  [ 48] objcall 127 ............................. tWindowObj.merge("recycler_notification.window")
  [ 50] getlocal 0 .............................. <tWindowObj>
  [ 52] pushsymb 262 ............................ <#eventProcRecyclerButton>
  [ 55] getparam 0 .............................. <me>
  [ 57] pusharglist 1 ........................... <me>
  [ 59] objcall 35 .............................. <me.getID()>
  [ 61] pushsymb 141 ............................ <#mouseUp>
  [ 63] pusharglistnoret 4 ...................... <tWindowObj, #eventProcRecyclerButton, me.getID(), #mouseUp>
  [ 65] objcall 282 ............................. tWindowObj.registerProcedure(#eventProcRecyclerButton, me.getID(), #mouseUp)
  [ 68] ret
end

on closeStatusWindow me
  [  0] getprop 272 ............................. <pStatusWindowID>
  [  3] pusharglistnoret 1 ...................... <pStatusWindowID>
  [  5] extcall 289 ............................. removeWindow(pStatusWindowID)
  [  8] ret
end

on prepare me
  [  0] getprop 290 ............................. <pSkippedFrames>
  [  3] pushint8 1 .............................. <1>
  [  5] sub ..................................... <pSkippedFrames - 1>
  [  6] setprop 290 ............................. pSkippedFrames = pSkippedFrames - 1
  [  9] getprop 290 ............................. <pSkippedFrames>
  [ 12] pushzero ................................ <0>
  [ 13] lt ...................................... <pSkippedFrames < 0>
  [ 14] jmpifz [ 25] ............................ if pSkippedFrames < 0 then / else
  [ 17] pushint8 15 ............................. <15>
  [ 19] setprop 290 ............................. pSkippedFrames = 15
  [ 22] jmp [ 30]
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 36 .............................. return 0
  [ 30] getprop 291 ............................. <pFLashOn>
  [ 33] jmpifz [ 51] ............................ if pFLashOn then / else
  [ 36] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 39] getprop 268 ............................. <pNormalMem>
  [ 42] setobjprop 131 .......................... pRecyclerButtonSpr.member = pNormalMem
  [ 44] pushzero ................................ <0>
  [ 45] setprop 291 ............................. pFLashOn = 0
  [ 48] jmp [ 64]
  [ 51] getprop 265 ............................. <pRecyclerButtonSpr>
  [ 54] getprop 271 ............................. <pHighlightMem>
  [ 57] setobjprop 131 .......................... pRecyclerButtonSpr.member = pHighlightMem
  [ 59] pushint8 1 .............................. <1>
  [ 61] setprop 291 ............................. pFLashOn = 1
  [ 64] ret
end
