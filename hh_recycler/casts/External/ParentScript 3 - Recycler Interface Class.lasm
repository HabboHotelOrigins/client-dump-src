property pWindowObj, pFurnisPerPage, pAcceptBtnActive, pProgressAnimation, pStatusIcon, pTimeLeftTimeoutID, pHeaderMemberName

on construct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 23 .............................. <VOID>
  [  4] setprop 114 ............................. pWindowObj = VOID
  [  6] pushint8 5 .............................. <5>
  [  8] setprop 115 ............................. pFurnisPerPage = 5
  [ 10] pushzero ................................ <0>
  [ 11] setprop 116 ............................. pAcceptBtnActive = 0
  [ 13] pushcons 0 .............................. <"timeLeftTimeout">
  [ 15] setprop 117 ............................. pTimeLeftTimeoutID = "timeLeftTimeout"
  [ 17] pushint8 1 .............................. <1>
  [ 19] pusharglistnoret 1 ...................... <1>
  [ 21] extcall 36 .............................. return 1
  [ 23] ret
end

on deconstruct me
  [  0] getprop 119 ............................. <pProgressAnimation>
  [  2] pusharglistnoret 1 ...................... <pProgressAnimation>
  [  4] extcall 118 ............................. removeObject(pProgressAnimation)
  [  6] getprop 120 ............................. <pStatusIcon>
  [  8] pusharglistnoret 1 ...................... <pStatusIcon>
  [ 10] extcall 118 ............................. removeObject(pStatusIcon)
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 36 .............................. return 1
  [ 18] ret
end

on setHostWindowObject me, tHostWindowObj
  [  0] getparam 1 .............................. <tHostWindowObj>
  [  2] setprop 114 ............................. pWindowObj = tHostWindowObj
  [  4] ret
end

on setHeaderMemberName me, tMemberName
  [  0] getparam 1 .............................. <tMemberName>
  [  2] setprop 294 ............................. pHeaderMemberName = tMemberName
  [  5] ret
end

on updateView me
  [  0] getprop 114 ............................. <pWindowObj>
  [  2] pusharglist 1 ........................... <pWindowObj>
  [  4] extcall 63 .............................. <voidp(pWindowObj)>
  [  6] jmpifz [ 14] ............................ if voidp(pWindowObj) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 36 .............................. return 0
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 124 ............................. <me.getComponent()>
  [ 20] pusharglist 1 ........................... <me.getComponent()>
  [ 22] objcall 14 .............................. <me.getComponent().getState()>
  [ 24] setlocal 0 .............................. tstate = me.getComponent().getState()
  [ 26] getlocal 0 .............................. <tstate>
  [ 28] peek 0 .................................. case tstate of
  [ 30] pushsymb 125 ............................ <#waiting>
  [ 32] eq
  [ 33] jmpifz [ 57] ............................ (case) #waiting:
  [ 36] getprop 114 ............................. <pWindowObj>
  [ 38] pusharglistnoret 1 ...................... <pWindowObj>
  [ 40] objcall 126 ............................. pWindowObj.unmerge()
  [ 42] getprop 114 ............................. <pWindowObj>
  [ 44] pushcons 1 .............................. <"ctlg_recycler_simple.window">
  [ 46] pusharglistnoret 2 ...................... <pWindowObj, "ctlg_recycler_simple.window">
  [ 48] objcall 127 ............................. pWindowObj.merge("ctlg_recycler_simple.window")
  [ 50] pushcons 2 .............................. <EMPTY>
  [ 52] setlocal 1 .............................. tHeaderText = EMPTY
  [ 54] jmp [216]
  [ 57] peek 0
  [ 59] pushsymb 64 ............................. <#open>
  [ 61] eq
  [ 62] jmpifz [123] ............................ (case) #open:
  [ 65] getprop 114 ............................. <pWindowObj>
  [ 67] pusharglistnoret 1 ...................... <pWindowObj>
  [ 69] objcall 126 ............................. pWindowObj.unmerge()
  [ 71] getprop 114 ............................. <pWindowObj>
  [ 73] pushcons 1 .............................. <"ctlg_recycler_simple.window">
  [ 75] pusharglistnoret 2 ...................... <pWindowObj, "ctlg_recycler_simple.window">
  [ 77] objcall 127 ............................. pWindowObj.merge("ctlg_recycler_simple.window")
  [ 79] getprop 117 ............................. <pTimeLeftTimeoutID>
  [ 81] pusharglist 1 ........................... <pTimeLeftTimeoutID>
  [ 83] extcall 128 ............................. <timeoutExists(pTimeLeftTimeoutID)>
  [ 85] jmpifz [ 94] ............................ if timeoutExists(pTimeLeftTimeoutID) then
  [ 88] getprop 117 ............................. <pTimeLeftTimeoutID>
  [ 90] pusharglistnoret 1 ...................... <pTimeLeftTimeoutID>
  [ 92] extcall 40 .............................. removeTimeout(pTimeLeftTimeoutID)
  [ 94] pushsymb 56 ............................. <#room>
  [ 96] pusharglist 1 ........................... <#room>
  [ 98] extcall 51 .............................. <getThread(#room)>
  [100] pusharglist 1 ........................... <getThread(#room)>
  [102] objcall 52 .............................. <getThread(#room).getInterface()>
  [104] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [106] objcall 57 .............................. <getThread(#room).getInterface().getContainer()>
  [108] pusharglistnoret 1 ...................... <getThread(#room).getInterface().getContainer()>
  [110] objcall 64 .............................. getThread(#room).getInterface().getContainer().open()
  [112] pushcons 3 .............................. <"recycler_info_open">
  [114] pusharglist 1 ........................... <"recycler_info_open">
  [116] extcall 68 .............................. <getText("recycler_info_open")>
  [118] setlocal 1 .............................. tHeaderText = getText("recycler_info_open")
  [120] jmp [216]
  [123] peek 0
  [125] pushsymb 99 ............................. <#closed>
  [127] eq
  [128] jmpifz [156] ............................ (case) #closed:
  [131] getprop 114 ............................. <pWindowObj>
  [133] pusharglistnoret 1 ...................... <pWindowObj>
  [135] objcall 126 ............................. pWindowObj.unmerge()
  [137] getprop 114 ............................. <pWindowObj>
  [139] pushcons 1 .............................. <"ctlg_recycler_simple.window">
  [141] pusharglistnoret 2 ...................... <pWindowObj, "ctlg_recycler_simple.window">
  [143] objcall 127 ............................. pWindowObj.merge("ctlg_recycler_simple.window")
  [145] pushcons 4 .............................. <"recycler_info_closed">
  [147] pusharglist 1 ........................... <"recycler_info_closed">
  [149] extcall 68 .............................. <getText("recycler_info_closed")>
  [151] setlocal 1 .............................. tHeaderText = getText("recycler_info_closed")
  [153] jmp [216]
  [156] peek 0
  [158] pushsymb 100 ............................ <#timeout>
  [160] eq
  [161] jmpifz [209] ............................ (case) #timeout:
  [164] getprop 114 ............................. <pWindowObj>
  [166] pusharglistnoret 1 ...................... <pWindowObj>
  [168] objcall 126 ............................. pWindowObj.unmerge()
  [170] getprop 114 ............................. <pWindowObj>
  [172] pushcons 1 .............................. <"ctlg_recycler_simple.window">
  [174] pusharglistnoret 2 ...................... <pWindowObj, "ctlg_recycler_simple.window">
  [176] objcall 127 ............................. pWindowObj.merge("ctlg_recycler_simple.window")
  [178] pushcons 5 .............................. <"recycler_info_timeout">
  [180] pusharglist 1 ........................... <"recycler_info_timeout">
  [182] extcall 68 .............................. <getText("recycler_info_timeout")>
  [184] setlocal 1 .............................. tHeaderText = getText("recycler_info_timeout")
  [186] getparam 0 .............................. <me>
  [188] getlocal 1 .............................. <tHeaderText>
  [190] getparam 0 .............................. <me>
  [192] pusharglist 1 ........................... <me>
  [194] objcall 124 ............................. <me.getComponent()>
  [196] pusharglist 1 ........................... <me.getComponent()>
  [198] objcall 15 .............................. <me.getComponent().getTimeout()>
  [200] pusharglist 3 ........................... <me, tHeaderText, me.getComponent().getTimeout()>
  [202] objcall 110 ............................. <me.replaceTimeKeys(tHeaderText, me.getComponent().getTimeout())>
  [204] setlocal 1 .............................. tHeaderText = me.replaceTimeKeys(tHeaderText, me.getComponent().getTimeout())
  [206] jmp [216] ............................... (case) otherwise:
  [209] pop 1
  [211] pushzero ................................ <0>
  [212] pusharglistnoret 1 ...................... <0>
  [214] extcall 36 .............................. return 0
  [216] pop 1 ................................... end case
  [218] getparam 0 .............................. <me>
  [220] pusharglistnoret 1 ...................... <me>
  [222] objcall 106 ............................. me.updateBg()
  [224] getparam 0 .............................. <me>
  [226] pusharglistnoret 1 ...................... <me>
  [228] objcall 87 .............................. me.updateRecycleButton()
  [230] getparam 0 .............................. <me>
  [232] pusharglistnoret 1 ...................... <me>
  [234] objcall 109 ............................. me.updateDynamicContent()
  [236] getprop 114 ............................. <pWindowObj>
  [238] pushcons 6 .............................. <"ctlg_header_img">
  [240] pusharglist 2 ........................... <pWindowObj, "ctlg_header_img">
  [242] objcall 129 ............................. <pWindowObj.getElement("ctlg_header_img")>
  [244] setlocal 2 .............................. tHeaderImgElement = pWindowObj.getElement("ctlg_header_img")
  [246] getlocal 2 .............................. <tHeaderImgElement>
  [248] pusharglist 1 ........................... <tHeaderImgElement>
  [250] extcall 63 .............................. <voidp(tHeaderImgElement)>
  [252] not ..................................... <not voidp(tHeaderImgElement)>
  [253] jmpifz [289] ............................ if not voidp(tHeaderImgElement) then
  [256] getprop 294 ............................. <pHeaderMemberName>
  [259] pusharglist 1 ........................... <pHeaderMemberName>
  [261] extcall 269 ............................. <getmemnum(pHeaderMemberName)>
  [264] setlocal 3 .............................. tMemNum = getmemnum(pHeaderMemberName)
  [266] getlocal 3 .............................. <tMemNum>
  [268] pushzero ................................ <0>
  [269] nteq .................................... <tMemNum <> 0>
  [270] jmpifz [289] ............................ if tMemNum <> 0 then
  [273] getlocal 2 .............................. <tHeaderImgElement>
  [275] pushsymb 130 ............................ <#image>
  [277] getlocal 3 .............................. <tMemNum>
  [279] pusharglist 1 ........................... <tMemNum>
  [281] extcall 131 ............................. <member(tMemNum)>
  [283] getobjprop 130 .......................... <member(tMemNum).image>
  [285] pusharglistnoret 3 ...................... <tHeaderImgElement, #image, member(tMemNum).image>
  [287] objcall 83 .............................. tHeaderImgElement.setProperty(#image, member(tMemNum).image)
  [289] getprop 114 ............................. <pWindowObj>
  [291] pushcons 7 .............................. <"ctlg_header_text">
  [293] pusharglist 2 ........................... <pWindowObj, "ctlg_header_text">
  [295] objcall 129 ............................. <pWindowObj.getElement("ctlg_header_text")>
  [297] setlocal 4 .............................. tHeaderTextElement = pWindowObj.getElement("ctlg_header_text")
  [299] getlocal 4 .............................. <tHeaderTextElement>
  [301] pushzero ................................ <0>
  [302] nteq .................................... <tHeaderTextElement <> 0>
  [303] jmpifz [314] ............................ if tHeaderTextElement <> 0 then
  [306] getlocal 4 .............................. <tHeaderTextElement>
  [308] getlocal 1 .............................. <tHeaderText>
  [310] pusharglistnoret 2 ...................... <tHeaderTextElement, tHeaderText>
  [312] objcall 132 ............................. tHeaderTextElement.setText(tHeaderText)
  [314] ret
end

on updateBg me
  [  0] getprop 114 ............................. <pWindowObj>
  [  2] pusharglist 1 ........................... <pWindowObj>
  [  4] extcall 63 .............................. <voidp(pWindowObj)>
  [  6] jmpifz [ 14] ............................ if voidp(pWindowObj) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 36 .............................. return 0
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 124 ............................. <me.getComponent()>
  [ 20] pusharglist 1 ........................... <me.getComponent()>
  [ 22] objcall 14 .............................. <me.getComponent().getState()>
  [ 24] setlocal 0 .............................. tstate = me.getComponent().getState()
  [ 26] getlocal 0 .............................. <tstate>
  [ 28] peek 0 .................................. case tstate of
  [ 30] pushsymb 64 ............................. <#open>
  [ 32] eq
  [ 33] jmpifz [ 43] ............................ (case) #open:
  [ 36] pushint8 100 ............................ <100>
  [ 38] setlocal 1 .............................. tBlend = 100
  [ 40] jmp [ 71]
  [ 43] peek 0
  [ 45] pushsymb 99 ............................. <#closed>
  [ 47] nteq
  [ 48] jmpifz [ 67] ............................ (case) #closed, ...
  [ 51] peek 0
  [ 53] pushsymb 100 ............................ <#timeout>
  [ 55] nteq
  [ 56] jmpifz [ 67] ............................ (case) ..., #timeout, ...
  [ 59] peek 0
  [ 61] pushsymb 125 ............................ <#waiting>
  [ 63] eq
  [ 64] jmpifz [ 71] ............................ (case) ..., #waiting:
  [ 67] pushint8 30 ............................. <30>
  [ 69] setlocal 1 .............................. tBlend = 30
  [ 71] pop 1 ................................... end case
  [ 73] getprop 114 ............................. <pWindowObj>
  [ 75] pushcons 8 .............................. <"bg">
  [ 77] pusharglist 2 ........................... <pWindowObj, "bg">
  [ 79] objcall 129 ............................. <pWindowObj.getElement("bg")>
  [ 81] setlocal 2 .............................. tBg = pWindowObj.getElement("bg")
  [ 83] getlocal 2 .............................. <tBg>
  [ 85] pushzero ................................ <0>
  [ 86] nteq .................................... <tBg <> 0>
  [ 87] jmpifz [100] ............................ if tBg <> 0 then
  [ 90] getlocal 2 .............................. <tBg>
  [ 92] pushsymb 136 ............................ <#blend>
  [ 94] getlocal 1 .............................. <tBlend>
  [ 96] pusharglistnoret 3 ...................... <tBg, #blend, tBlend>
  [ 98] objcall 83 .............................. tBg.setProperty(#blend, tBlend)
  [100] getprop 114 ............................. <pWindowObj>
  [102] pushcons 9 .............................. <"slot_bg">
  [104] pusharglist 2 ........................... <pWindowObj, "slot_bg">
  [106] objcall 129 ............................. <pWindowObj.getElement("slot_bg")>
  [108] setlocal 3 .............................. tSlotBg = pWindowObj.getElement("slot_bg")
  [110] getlocal 3 .............................. <tSlotBg>
  [112] pushzero ................................ <0>
  [113] nteq .................................... <tSlotBg <> 0>
  [114] jmpifz [127] ............................ if tSlotBg <> 0 then
  [117] getlocal 3 .............................. <tSlotBg>
  [119] pushsymb 136 ............................ <#blend>
  [121] getlocal 1 .............................. <tBlend>
  [123] pusharglistnoret 3 ...................... <tSlotBg, #blend, tBlend>
  [125] objcall 83 .............................. tSlotBg.setProperty(#blend, tBlend)
  [127] ret
end

on eventProc me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 140 ............................ <#mouseEnter>
  [  4] eq ...................................... <tEvent = #mouseEnter>
  [  5] jmpifz [ 43] ............................ if tEvent = #mouseEnter then
  [  8] pushsymb 56 ............................. <#room>
  [ 10] pusharglist 1 ........................... <#room>
  [ 12] extcall 51 .............................. <getThread(#room)>
  [ 14] pusharglist 1 ........................... <getThread(#room)>
  [ 16] objcall 52 .............................. <getThread(#room).getInterface()>
  [ 18] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 20] objcall 80 .............................. <getThread(#room).getInterface().getObjectMover()>
  [ 22] setlocal 0 .............................. tObjMover = getThread(#room).getInterface().getObjectMover()
  [ 24] getlocal 0 .............................. <tObjMover>
  [ 26] pushzero ................................ <0>
  [ 27] nteq .................................... <tObjMover <> 0>
  [ 28] jmpifz [ 37] ............................ if tObjMover <> 0 then
  [ 31] getlocal 0 .............................. <tObjMover>
  [ 33] pusharglistnoret 1 ...................... <tObjMover>
  [ 35] objcall 98 .............................. tObjMover.moveTrade()
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglistnoret 1 ...................... <1>
  [ 41] extcall 36 .............................. return 1
  [ 43] getparam 1 .............................. <tEvent>
  [ 45] pushsymb 141 ............................ <#mouseUp>
  [ 47] nteq .................................... <tEvent <> #mouseUp>
  [ 48] jmpifz [ 57] ............................ if tEvent <> #mouseUp then
  [ 51] pushint8 1 .............................. <1>
  [ 53] pusharglistnoret 1 ...................... <1>
  [ 55] extcall 36 .............................. return 1
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglist 1 ........................... <me>
  [ 61] objcall 124 ............................. <me.getComponent()>
  [ 63] pusharglist 1 ........................... <me.getComponent()>
  [ 65] objcall 14 .............................. <me.getComponent().getState()>
  [ 67] setlocal 1 .............................. tstate = me.getComponent().getState()
  [ 69] getlocal 1 .............................. <tstate>
  [ 71] pushsymb 64 ............................. <#open>
  [ 73] nteq .................................... <tstate <> #open>
  [ 74] jmpifz [ 83] ............................ if tstate <> #open then
  [ 77] pushint8 1 .............................. <1>
  [ 79] pusharglistnoret 1 ...................... <1>
  [ 81] extcall 36 .............................. return 1
  [ 83] getparam 2 .............................. <tSprID>
  [ 85] pushcons 10 ............................. <"rec_drop_slot_">
  [ 87] containsstr ............................. <tSprID contains "rec_drop_slot_">
  [ 88] jmpifz [103] ............................ if tSprID contains "rec_drop_slot_" then
  [ 91] getparam 0 .............................. <me>
  [ 93] getparam 1 .............................. <tEvent>
  [ 95] getparam 2 .............................. <tSprID>
  [ 97] getparam 3 .............................. <tProp>
  [ 99] pusharglistnoret 4 ...................... <me, tEvent, tSprID, tProp>
  [101] objcall 108 ............................. me.eventProcSlot(tEvent, tSprID, tProp)
  [103] getparam 2 .............................. <tSprID>
  [105] peek 0 .................................. case tSprID of
  [107] pushcons 11 ............................. <"recycler_recycle_button">
  [109] eq
  [110] jmpifz [126] ............................ (case) "recycler_recycle_button":
  [113] getparam 0 .............................. <me>
  [115] pusharglist 1 ........................... <me>
  [117] objcall 124 ............................. <me.getComponent()>
  [119] pusharglistnoret 1 ...................... <me.getComponent()>
  [121] objcall 10 .............................. me.getComponent().startRecycling()
  [123] jmp [130] ............................... (case) otherwise:
  [126] pusharglistnoret 0 ...................... <>
  [128] extcall 142 ............................. nothing()
  [130] pop 1 ................................... end case
  [132] pushzero ................................ <0>
  [133] pusharglistnoret 1 ...................... <0>
  [135] extcall 36 .............................. return 0
  [137] ret
end

on eventProcSlot me, tEvent, tSprID, tProp
  [  0] pushsymb 56 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 51 .............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 52 .............................. <getThread(#room).getInterface()>
  [ 10] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 12] objcall 80 .............................. <getThread(#room).getInterface().getObjectMover()>
  [ 14] setlocal 0 .............................. tObjMover = getThread(#room).getInterface().getObjectMover()
  [ 16] pushsymb 56 ............................. <#room>
  [ 18] pusharglist 1 ........................... <#room>
  [ 20] extcall 51 .............................. <getThread(#room)>
  [ 22] pusharglist 1 ........................... <getThread(#room)>
  [ 24] objcall 52 .............................. <getThread(#room).getInterface()>
  [ 26] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 28] objcall 57 .............................. <getThread(#room).getInterface().getContainer()>
  [ 30] setlocal 1 .............................. tContainer = getThread(#room).getInterface().getContainer()
  [ 32] getlocal 0 .............................. <tObjMover>
  [ 34] pusharglist 1 ........................... <tObjMover>
  [ 36] extcall 146 ............................. <objectp(tObjMover)>
  [ 38] jmpifz [266] ............................ if objectp(tObjMover) then
  [ 41] getlocal 0 .............................. <tObjMover>
  [ 43] pushsymb 147 ............................ <#clientObj>
  [ 45] pusharglist 2 ........................... <tObjMover, #clientObj>
  [ 47] objcall 148 ............................. <tObjMover.getProperty(#clientObj)>
  [ 49] setlocal 2 .............................. tClientObj = tObjMover.getProperty(#clientObj)
  [ 51] getlocal 2 .............................. <tClientObj>
  [ 53] pusharglist 1 ........................... <tClientObj>
  [ 55] extcall 146 ............................. <objectp(tClientObj)>
  [ 57] jmpifz [228] ............................ if objectp(tClientObj) then / else
  [ 60] getlocal 0 .............................. <tObjMover>
  [ 62] pushsymb 74 ............................. <#stripId>
  [ 64] pusharglist 2 ........................... <tObjMover, #stripId>
  [ 66] objcall 148 ............................. <tObjMover.getProperty(#stripId)>
  [ 68] pushcons 2 .............................. <EMPTY>
  [ 70] eq ...................................... <tObjMover.getProperty(#stripId) = EMPTY>
  [ 71] jmpifz [ 79] ............................ if tObjMover.getProperty(#stripId) = EMPTY then
  [ 74] pushzero ................................ <0>
  [ 75] pusharglistnoret 1 ...................... <0>
  [ 77] extcall 36 .............................. return 0
  [ 79] getparam 0 .............................. <me>
  [ 81] pusharglist 1 ........................... <me>
  [ 83] objcall 124 ............................. <me.getComponent()>
  [ 85] pusharglist 1 ........................... <me.getComponent()>
  [ 87] objcall 18 .............................. <me.getComponent().isPoolFull()>
  [ 89] jmpifz [ 97] ............................ if me.getComponent().isPoolFull() then
  [ 92] pushzero ................................ <0>
  [ 93] pusharglistnoret 1 ...................... <0>
  [ 95] extcall 36 .............................. return 0
  [ 97] getlocal 0 .............................. <tObjMover>
  [ 99] pushsymb 149 ............................ <#clientProps>
  [101] pusharglist 2 ........................... <tObjMover, #clientProps>
  [103] objcall 148 ............................. <tObjMover.getProperty(#clientProps)>
  [105] setlocal 3 .............................. tClientProps = tObjMover.getProperty(#clientProps)
  [107] getlocal 3 .............................. <tClientProps>
  [109] pushsymb 89 ............................. <#class>
  [111] pusharglist 2 ........................... <tClientProps, #class>
  [113] objcall 72 .............................. <tClientProps[#class]>
  [115] setlocal 4 .............................. tClass = tClientProps[#class]
  [117] getlocal 0 .............................. <tObjMover>
  [119] pushsymb 150 ............................ <#clientID>
  [121] pusharglist 2 ........................... <tObjMover, #clientID>
  [123] objcall 148 ............................. <tObjMover.getProperty(#clientID)>
  [125] setlocal 5 .............................. tClientID = tObjMover.getProperty(#clientID)
  [127] getlocal 3 .............................. <tClientProps>
  [129] pushsymb 151 ............................ <#type>
  [131] getlocal 0 .............................. <tObjMover>
  [133] getobjprop 152 .......................... <tObjMover.pObjType>
  [135] pusharglistnoret 3 ...................... <tClientProps, #type, tObjMover.pObjType>
  [137] objcall 153 ............................. tClientProps[#type] = tObjMover.pObjType
  [139] getlocal 3 .............................. <tClientProps>
  [141] pushsymb 154 ............................ <#isRecyclable>
  [143] pusharglist 2 ........................... <tClientProps, #isRecyclable>
  [145] objcall 72 .............................. <tClientProps[#isRecyclable]>
  [147] pusharglist 1 ........................... <tClientProps[#isRecyclable]>
  [149] extcall 70 .............................. <integer(tClientProps[#isRecyclable])>
  [151] not ..................................... <not integer(tClientProps[#isRecyclable])>
  [152] jmpifz [187] ............................ if not integer(tClientProps[#isRecyclable]) then
  [155] pushsymb 66 ............................. <#alert>
  [157] pushsymb 67 ............................. <#Msg>
  [159] pushcons 12 ............................. <"recycler_furni_not_recyclable">
  [161] pusharglist 1 ........................... <"recycler_furni_not_recyclable">
  [163] extcall 68 .............................. <getText("recycler_furni_not_recyclable")>
  [165] pusharglist 2 ........................... <[#Msg: getText("recycler_furni_not_recyclable")]>
  [167] pushproplist ............................ <[#Msg: getText("recycler_furni_not_recyclable")]>
  [168] pusharglistnoret 2 ...................... <#alert, [#Msg: getText("recycler_furni_not_recyclable")]>
  [170] extcall 65 .............................. executeMessage(#alert, [#Msg: getText("recycler_furni_not_recyclable")])
  [172] getparam 0 .............................. <me>
  [174] pusharglist 1 ........................... <me>
  [176] objcall 124 ............................. <me.getComponent()>
  [178] pusharglistnoret 1 ...................... <me.getComponent()>
  [180] objcall 11 .............................. me.getComponent().clearObjectMover()
  [182] pushzero ................................ <0>
  [183] pusharglistnoret 1 ...................... <0>
  [185] extcall 36 .............................. return 0
  [187] getparam 0 .............................. <me>
  [189] pusharglist 1 ........................... <me>
  [191] objcall 124 ............................. <me.getComponent()>
  [193] getlocal 4 .............................. <tClass>
  [195] getlocal 5 .............................. <tClientID>
  [197] getlocal 3 .............................. <tClientProps>
  [199] pusharglistnoret 4 ...................... <me.getComponent(), tClass, tClientID, tClientProps>
  [201] objcall 17 .............................. me.getComponent().addFurnitureToGivePool(tClass, tClientID, tClientProps)
  [203] getparam 0 .............................. <me>
  [205] pusharglist 1 ........................... <me>
  [207] objcall 124 ............................. <me.getComponent()>
  [209] pusharglistnoret 1 ...................... <me.getComponent()>
  [211] objcall 11 .............................. me.getComponent().clearObjectMover()
  [213] getparam 0 .............................. <me>
  [215] pusharglistnoret 1 ...................... <me>
  [217] objcall 109 ............................. me.updateDynamicContent()
  [219] pushint8 1 .............................. <1>
  [221] pusharglistnoret 1 ...................... <1>
  [223] extcall 36 .............................. return 1
  [225] jmp [260]
  [228] getmovieprop 155 ........................ <the itemDelimiter>
  [230] setlocal 6 .............................. tDelim = the itemDelimiter
  [232] pushcons 13 ............................. <"_">
  [234] setmovieprop 155 ........................ the itemDelimiter = "_"
  [236] getparam 2 .............................. <tSprID>
  [238] pushsymb 156 ............................ <#item>
  [240] pushint8 4 .............................. <4>
  [242] pusharglist 3 ........................... <tSprID, #item, 4>
  [244] objcall 157 ............................. <tSprID.item[4]>
  [246] setlocal 7 .............................. tSlotNo = tSprID.item[4]
  [248] getlocal 6 .............................. <tDelim>
  [250] setmovieprop 155 ........................ the itemDelimiter = tDelim
  [252] getparam 0 .............................. <me>
  [254] getlocal 7 .............................. <tSlotNo>
  [256] pusharglistnoret 2 ...................... <me, tSlotNo>
  [258] objcall 111 ............................. me.removeItemFromSlot(tSlotNo)
  [260] getlocal 1 .............................. <tContainer>
  [262] pusharglistnoret 1 ...................... <tContainer>
  [264] objcall 59 .............................. tContainer.Refresh()
  [266] ret
end

on updateDynamicContent me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 124 ............................. <me.getComponent()>
  [  6] pusharglist 1 ........................... <me.getComponent()>
  [  8] objcall 14 .............................. <me.getComponent().getState()>
  [ 10] setlocal 0 .............................. tstate = me.getComponent().getState()
  [ 12] getlocal 0 .............................. <tstate>
  [ 14] peek 0 .................................. case tstate of
  [ 16] pushcons 14 ............................. <"open">
  [ 18] eq
  [ 19] jmpifz [ 37] ............................ (case) "open":
  [ 22] getparam 0 .............................. <me>
  [ 24] pusharglistnoret 1 ...................... <me>
  [ 26] objcall 112 ............................. me.updateFurniSlots()
  [ 28] getparam 0 .............................. <me>
  [ 30] pusharglistnoret 1 ...................... <me>
  [ 32] objcall 163 ............................. me.updateAcceptButtonOpenState()
  [ 34] jmp [108]
  [ 37] peek 0
  [ 39] pushcons 15 ............................. <"progress">
  [ 41] eq
  [ 42] jmpifz [ 54] ............................ (case) "progress":
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglistnoret 1 ...................... <me>
  [ 49] objcall 164 ............................. me.updateCancelButton()
  [ 51] jmp [108]
  [ 54] peek 0
  [ 56] pushcons 16 ............................. <"ready">
  [ 58] eq
  [ 59] jmpifz [ 77] ............................ (case) "ready":
  [ 62] getparam 0 .............................. <me>
  [ 64] pusharglistnoret 1 ...................... <me>
  [ 66] objcall 165 ............................. me.updateAcceptButton()
  [ 68] getparam 0 .............................. <me>
  [ 70] pusharglistnoret 1 ...................... <me>
  [ 72] objcall 164 ............................. me.updateCancelButton()
  [ 74] jmp [108]
  [ 77] peek 0
  [ 79] pushcons 17 ............................. <"timeout">
  [ 81] eq
  [ 82] jmpifz [ 94] ............................ (case) "timeout":
  [ 85] getparam 0 .............................. <me>
  [ 87] pusharglistnoret 1 ...................... <me>
  [ 89] objcall 164 ............................. me.updateCancelButton()
  [ 91] jmp [108]
  [ 94] peek 0
  [ 96] pushcons 18 ............................. <"disabled">
  [ 98] eq
  [ 99] jmpifz [108] ............................ (case) "disabled":
  [102] getparam 0 .............................. <me>
  [104] pusharglistnoret 1 ...................... <me>
  [106] objcall 166 ............................. me.hideCancelButton()
  [108] pop 1 ................................... end case
  [110] ret
end

on replaceTimeKeys me, tText, tTotalSeconds, tKeyPrefix
  [  0] getparam 2 .............................. <tTotalSeconds>
  [  2] pusharglist 1 ........................... <tTotalSeconds>
  [  4] extcall 70 .............................. <integer(tTotalSeconds)>
  [  6] setparam 2 .............................. tTotalSeconds = integer(tTotalSeconds)
  [  8] getparam 2 .............................. <tTotalSeconds>
  [ 10] pusharglist 1 ........................... <tTotalSeconds>
  [ 12] extcall 63 .............................. <voidp(tTotalSeconds)>
  [ 14] jmpifz [ 23] ............................ if voidp(tTotalSeconds) then
  [ 17] getparam 1 .............................. <tText>
  [ 19] pusharglistnoret 1 ...................... <tText>
  [ 21] extcall 36 .............................. return tText
  [ 23] getparam 2 .............................. <tTotalSeconds>
  [ 25] pushint8 60 ............................. <60>
  [ 27] div ..................................... <tTotalSeconds / 60>
  [ 28] setlocal 0 .............................. tTotalMinutes = tTotalSeconds / 60
  [ 30] getlocal 0 .............................. <tTotalMinutes>
  [ 32] pushint8 60 ............................. <60>
  [ 34] div ..................................... <tTotalMinutes / 60>
  [ 35] setlocal 1 .............................. tHours = tTotalMinutes / 60
  [ 37] getlocal 0 .............................. <tTotalMinutes>
  [ 39] pushint8 60 ............................. <60>
  [ 41] mod ..................................... <tTotalMinutes mod 60>
  [ 42] setlocal 2 .............................. tMinutes = tTotalMinutes mod 60
  [ 44] getparam 2 .............................. <tTotalSeconds>
  [ 46] pushint8 60 ............................. <60>
  [ 48] mod ..................................... <tTotalSeconds mod 60>
  [ 49] setlocal 3 .............................. tSeconds = tTotalSeconds mod 60
  [ 51] getparam 1 .............................. <tText>
  [ 53] pushcons 19 ............................. <"%">
  [ 55] getparam 3 .............................. <tKeyPrefix>
  [ 57] joinstr ................................. <"%" & tKeyPrefix>
  [ 58] pushcons 20 ............................. <"hours%">
  [ 60] joinstr ................................. <"%" & tKeyPrefix & "hours%">
  [ 61] getlocal 1 .............................. <tHours>
  [ 63] pusharglist 3 ........................... <tText, "%" & tKeyPrefix & "hours%", tHours>
  [ 65] extcall 167 ............................. <replaceChunks(tText, "%" & tKeyPrefix & "hours%", tHours)>
  [ 67] setparam 1 .............................. tText = replaceChunks(tText, "%" & tKeyPrefix & "hours%", tHours)
  [ 69] getparam 1 .............................. <tText>
  [ 71] pushcons 19 ............................. <"%">
  [ 73] getparam 3 .............................. <tKeyPrefix>
  [ 75] joinstr ................................. <"%" & tKeyPrefix>
  [ 76] pushcons 21 ............................. <"minutes%">
  [ 78] joinstr ................................. <"%" & tKeyPrefix & "minutes%">
  [ 79] getlocal 2 .............................. <tMinutes>
  [ 81] pusharglist 3 ........................... <tText, "%" & tKeyPrefix & "minutes%", tMinutes>
  [ 83] extcall 167 ............................. <replaceChunks(tText, "%" & tKeyPrefix & "minutes%", tMinutes)>
  [ 85] setparam 1 .............................. tText = replaceChunks(tText, "%" & tKeyPrefix & "minutes%", tMinutes)
  [ 87] getparam 1 .............................. <tText>
  [ 89] pushcons 19 ............................. <"%">
  [ 91] getparam 3 .............................. <tKeyPrefix>
  [ 93] joinstr ................................. <"%" & tKeyPrefix>
  [ 94] pushcons 22 ............................. <"seconds%">
  [ 96] joinstr ................................. <"%" & tKeyPrefix & "seconds%">
  [ 97] getlocal 3 .............................. <tSeconds>
  [ 99] pusharglist 3 ........................... <tText, "%" & tKeyPrefix & "seconds%", tSeconds>
  [101] extcall 167 ............................. <replaceChunks(tText, "%" & tKeyPrefix & "seconds%", tSeconds)>
  [103] setparam 1 .............................. tText = replaceChunks(tText, "%" & tKeyPrefix & "seconds%", tSeconds)
  [105] getparam 1 .............................. <tText>
  [107] pusharglistnoret 1 ...................... <tText>
  [109] extcall 36 .............................. return tText
  [111] ret
end

on removeItemFromSlot me, tSlotNo
  [  0] getparam 1 .............................. <tSlotNo>
  [  2] pusharglist 1 ........................... <tSlotNo>
  [  4] extcall 70 .............................. <integer(tSlotNo)>
  [  6] setparam 1 .............................. tSlotNo = integer(tSlotNo)
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 124 ............................. <me.getComponent()>
  [ 14] getparam 1 .............................. <tSlotNo>
  [ 16] pusharglistnoret 2 ...................... <me.getComponent(), tSlotNo>
  [ 18] objcall 16 .............................. me.getComponent().removeFurniFromGivePool(tSlotNo)
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglistnoret 1 ...................... <me>
  [ 24] objcall 109 ............................. me.updateDynamicContent()
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglistnoret 1 ...................... <me>
  [ 30] objcall 92 .............................. me.updateSlots()
  [ 32] ret
end

on updateSlots me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 112 ............................. me.updateFurniSlots()
  [  6] getparam 0 .............................. <me>
  [  8] pusharglistnoret 1 ...................... <me>
  [ 10] objcall 87 .............................. me.updateRecycleButton()
  [ 12] ret
end

on updateFurniSlots me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 124 ............................. <me.getComponent()>
  [  6] pusharglist 1 ........................... <me.getComponent()>
  [  8] objcall 13 .............................. <me.getComponent().getGiveFurniPool()>
  [ 10] setlocal 0 .............................. tGiveFurniPool = me.getComponent().getGiveFurniPool()
  [ 12] getlocal 0 .............................. <tGiveFurniPool>
  [ 14] getobjprop 85 ........................... <tGiveFurniPool.count>
  [ 16] setlocal 1 .............................. tFurniAmount = tGiveFurniPool.count
  [ 18] getprop 114 ............................. <pWindowObj>
  [ 20] pushcons 23 ............................. <"rec_drop_slot_1">
  [ 22] pusharglist 2 ........................... <pWindowObj, "rec_drop_slot_1">
  [ 24] objcall 129 ............................. <pWindowObj.getElement("rec_drop_slot_1")>
  [ 26] pushsymb 175 ............................ <#width>
  [ 28] pusharglist 2 ........................... <pWindowObj.getElement("rec_drop_slot_1"), #width>
  [ 30] objcall 148 ............................. <pWindowObj.getElement("rec_drop_slot_1").getProperty(#width)>
  [ 32] setlocal 2 .............................. tSlotWidth = pWindowObj.getElement("rec_drop_slot_1").getProperty(#width)
  [ 34] getprop 114 ............................. <pWindowObj>
  [ 36] pushcons 23 ............................. <"rec_drop_slot_1">
  [ 38] pusharglist 2 ........................... <pWindowObj, "rec_drop_slot_1">
  [ 40] objcall 129 ............................. <pWindowObj.getElement("rec_drop_slot_1")>
  [ 42] pushsymb 176 ............................ <#height>
  [ 44] pusharglist 2 ........................... <pWindowObj.getElement("rec_drop_slot_1"), #height>
  [ 46] objcall 148 ............................. <pWindowObj.getElement("rec_drop_slot_1").getProperty(#height)>
  [ 48] setlocal 3 .............................. tSlotHeight = pWindowObj.getElement("rec_drop_slot_1").getProperty(#height)
  [ 50] getlocal 2 .............................. <tSlotWidth>
  [ 52] getlocal 3 .............................. <tSlotHeight>
  [ 54] pushint8 8 .............................. <8>
  [ 56] pusharglist 3 ........................... <tSlotWidth, tSlotHeight, 8>
  [ 58] extcall 130 ............................. <image(tSlotWidth, tSlotHeight, 8)>
  [ 60] setlocal 4 .............................. tEmptyImage = image(tSlotWidth, tSlotHeight, 8)
  [ 62] pushint8 1 .............................. <1>
  [ 64] setlocal 5
  [ 66] getlocal 5
  [ 68] getprop 115 ............................. <pFurnisPerPage>
  [ 70] lteq
  [ 71] jmpifz [104] ............................ repeat with tTemp = 1 to pFurnisPerPage
  [ 74] getprop 114 ............................. <pWindowObj>
  [ 76] pushcons 10 ............................. <"rec_drop_slot_">
  [ 78] getlocal 5 .............................. <tTemp>
  [ 80] joinstr ................................. <"rec_drop_slot_" & tTemp>
  [ 81] pusharglist 2 ........................... <pWindowObj, "rec_drop_slot_" & tTemp>
  [ 83] objcall 129 ............................. <pWindowObj.getElement("rec_drop_slot_" & tTemp)>
  [ 85] setlocal 6 .............................. tElement = pWindowObj.getElement("rec_drop_slot_" & tTemp)
  [ 87] getlocal 6 .............................. <tElement>
  [ 89] getlocal 4 .............................. <tEmptyImage>
  [ 91] pusharglistnoret 2 ...................... <tElement, tEmptyImage>
  [ 93] objcall 177 ............................. tElement.feedImage(tEmptyImage)
  [ 95] pushint8 1
  [ 97] getlocal 5
  [ 99] add
  [100] setlocal 5
  [102] endrepeat [ 66]
  [104] pushint8 1 .............................. <1>
  [106] setlocal 7 .............................. tSlotNo = 1
  [108] pushint8 1 .............................. <1>
  [110] setlocal 8
  [112] getlocal 8
  [114] getlocal 0 .............................. <tGiveFurniPool>
  [116] getobjprop 85 ........................... <tGiveFurniPool.count>
  [118] lteq
  [119] jmpifz [344] ............................ repeat with tFurniIndex = 1 to tGiveFurniPool.count
  [122] getlocal 0 .............................. <tGiveFurniPool>
  [124] getlocal 8 .............................. <tFurniIndex>
  [126] pusharglist 2 ........................... <tGiveFurniPool, tFurniIndex>
  [128] objcall 72 .............................. <tGiveFurniPool[tFurniIndex]>
  [130] setlocal 9 .............................. tFurniItem = tGiveFurniPool[tFurniIndex]
  [132] getlocal 2 .............................. <tSlotWidth>
  [134] getlocal 3 .............................. <tSlotHeight>
  [136] pushint8 32 ............................. <32>
  [138] pusharglist 3 ........................... <tSlotWidth, tSlotHeight, 32>
  [140] extcall 130 ............................. <image(tSlotWidth, tSlotHeight, 32)>
  [142] setlocal 10 ............................. tIconImage = image(tSlotWidth, tSlotHeight, 32)
  [144] getlocal 10 ............................. <tIconImage>
  [146] pushzero ................................ <0>
  [147] pushzero ................................ <0>
  [148] getlocal 2 .............................. <tSlotWidth>
  [150] getlocal 3 .............................. <tSlotHeight>
  [152] pushsymb 178 ............................ <#color>
  [154] pushint16 255 ........................... <255>
  [157] pushint16 255 ........................... <255>
  [160] pushint16 255 ........................... <255>
  [163] pusharglist 3 ........................... <255, 255, 255>
  [165] extcall 178 ............................. <color(255, 255, 255)>
  [167] pusharglist 2 ........................... <[#color: color(255, 255, 255)]>
  [169] pushproplist ............................ <[#color: color(255, 255, 255)]>
  [170] pusharglistnoret 6 ...................... <tIconImage, 0, 0, tSlotWidth, tSlotHeight, [#color: color(255, 255, 255)]>
  [172] objcall 179 ............................. tIconImage.fill(0, 0, tSlotWidth, tSlotHeight, [#color: color(255, 255, 255)])
  [174] getprop 114 ............................. <pWindowObj>
  [176] pushcons 10 ............................. <"rec_drop_slot_">
  [178] getlocal 7 .............................. <tSlotNo>
  [180] joinstr ................................. <"rec_drop_slot_" & tSlotNo>
  [181] pusharglist 2 ........................... <pWindowObj, "rec_drop_slot_" & tSlotNo>
  [183] objcall 129 ............................. <pWindowObj.getElement("rec_drop_slot_" & tSlotNo)>
  [185] setlocal 11 ............................. tSlotElement = pWindowObj.getElement("rec_drop_slot_" & tSlotNo)
  [187] getlocal 9 .............................. <tFurniItem>
  [189] pushsymb 73 ............................. <#props>
  [191] pusharglist 2 ........................... <tFurniItem, #props>
  [193] objcall 72 .............................. <tFurniItem[#props]>
  [195] setlocal 12 ............................. tProps = tFurniItem[#props]
  [197] getlocal 9 .............................. <tFurniItem>
  [199] pushsymb 89 ............................. <#class>
  [201] pusharglist 2 ........................... <tFurniItem, #class>
  [203] objcall 72 .............................. <tFurniItem[#class]>
  [205] setlocal 13 ............................. tClass = tFurniItem[#class]
  [207] getparam 0 .............................. <me>
  [209] getlocal 13 ............................. <tClass>
  [211] getlocal 12 ............................. <tProps>
  [213] pusharglist 3 ........................... <me, tClass, tProps>
  [215] objcall 113 ............................. <me.detectMemberName(tClass, tProps)>
  [217] setlocal 14 ............................. tMemStr = me.detectMemberName(tClass, tProps)
  [219] pushcons 24 ............................. <"Preview_renderer">
  [221] pusharglist 1 ........................... <"Preview_renderer">
  [223] extcall 180 ............................. <getObject("Preview_renderer")>
  [225] getlocal 14 ............................. <tMemStr>
  [227] pusharglist 0 ........................... <>
  [229] extcall 23 .............................. <VOID>
  [231] getlocal 12 ............................. <tProps>
  [233] pushsymb 181 ............................ <#colors>
  [235] pusharglist 2 ........................... <tProps, #colors>
  [237] objcall 72 .............................. <tProps[#colors]>
  [239] getlocal 12 ............................. <tProps>
  [241] pushsymb 89 ............................. <#class>
  [243] pusharglist 2 ........................... <tProps, #class>
  [245] objcall 72 .............................. <tProps[#class]>
  [247] pusharglist 5 ........................... <getObject("Preview_renderer"), tMemStr, VOID, tProps[#colors], tProps[#class]>
  [249] objcall 182 ............................. <getObject("Preview_renderer").renderPreviewImage(tMemStr, VOID, tProps[#colors], tProps[#class])>
  [251] setlocal 15 ............................. tFurniImage = getObject("Preview_renderer").renderPreviewImage(tMemStr, VOID, tProps[#colors], tProps[#class])
  [253] getlocal 2 .............................. <tSlotWidth>
  [255] getlocal 15 ............................. <tFurniImage>
  [257] getobjprop 175 .......................... <tFurniImage.width>
  [259] sub ..................................... <tSlotWidth - tFurniImage.width>
  [260] pushint8 2 .............................. <2>
  [262] div ..................................... <(tSlotWidth - tFurniImage.width) / 2>
  [263] setlocal 16 ............................. tWidthMargin = (tSlotWidth - tFurniImage.width) / 2
  [265] getlocal 3 .............................. <tSlotHeight>
  [267] getlocal 15 ............................. <tFurniImage>
  [269] getobjprop 176 .......................... <tFurniImage.height>
  [271] sub ..................................... <tSlotHeight - tFurniImage.height>
  [272] pushint8 2 .............................. <2>
  [274] div ..................................... <(tSlotHeight - tFurniImage.height) / 2>
  [275] setlocal 17 ............................. tHeightMargin = (tSlotHeight - tFurniImage.height) / 2
  [277] getlocal 15 ............................. <tFurniImage>
  [279] getobjprop 183 .......................... <tFurniImage.rect>
  [281] getlocal 16 ............................. <tWidthMargin>
  [283] getlocal 17 ............................. <tHeightMargin>
  [285] getlocal 16 ............................. <tWidthMargin>
  [287] getlocal 17 ............................. <tHeightMargin>
  [289] pusharglist 4 ........................... <tWidthMargin, tHeightMargin, tWidthMargin, tHeightMargin>
  [291] extcall 183 ............................. <rect(tWidthMargin, tHeightMargin, tWidthMargin, tHeightMargin)>
  [293] add ..................................... <tFurniImage.rect + rect(tWidthMargin, tHeightMargin, tWidthMargin, tHeightMargin)>
  [294] setlocal 18 ............................. tTargetRect = tFurniImage.rect + rect(tWidthMargin, tHeightMargin, tWidthMargin, tHeightMargin)
  [296] getlocal 10 ............................. <tIconImage>
  [298] getlocal 15 ............................. <tFurniImage>
  [300] getlocal 18 ............................. <tTargetRect>
  [302] getlocal 15 ............................. <tFurniImage>
  [304] getobjprop 183 .......................... <tFurniImage.rect>
  [306] pusharglistnoret 4 ...................... <tIconImage, tFurniImage, tTargetRect, tFurniImage.rect>
  [308] objcall 184 ............................. tIconImage.copyPixels(tFurniImage, tTargetRect, tFurniImage.rect)
  [310] getlocal 11 ............................. <tSlotElement>
  [312] getlocal 10 ............................. <tIconImage>
  [314] pusharglistnoret 2 ...................... <tSlotElement, tIconImage>
  [316] objcall 177 ............................. tSlotElement.feedImage(tIconImage)
  [318] getlocal 11 ............................. <tSlotElement>
  [320] pushsymb 136 ............................ <#blend>
  [322] pushint8 100 ............................ <100>
  [324] pusharglistnoret 3 ...................... <tSlotElement, #blend, 100>
  [326] objcall 83 .............................. tSlotElement.setProperty(#blend, 100)
  [328] getlocal 7 .............................. <tSlotNo>
  [330] pushint8 1 .............................. <1>
  [332] add ..................................... <tSlotNo + 1>
  [333] setlocal 7 .............................. tSlotNo = tSlotNo + 1
  [335] pushint8 1
  [337] getlocal 8
  [339] add
  [340] setlocal 8
  [342] endrepeat [112]
  [344] ret
end

on updateRecycleButton me
  [  0] getprop 114 ............................. <pWindowObj>
  [  2] pusharglist 1 ........................... <pWindowObj>
  [  4] extcall 146 ............................. <objectp(pWindowObj)>
  [  6] not ..................................... <not objectp(pWindowObj)>
  [  7] jmpifz [ 15] ............................ if not objectp(pWindowObj) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 36 .............................. return 0
  [ 15] getprop 114 ............................. <pWindowObj>
  [ 17] pushcons 11 ............................. <"recycler_recycle_button">
  [ 19] pusharglist 2 ........................... <pWindowObj, "recycler_recycle_button">
  [ 21] objcall 129 ............................. <pWindowObj.getElement("recycler_recycle_button")>
  [ 23] setlocal 0 .............................. tButton = pWindowObj.getElement("recycler_recycle_button")
  [ 25] getlocal 0 .............................. <tButton>
  [ 27] not ..................................... <not tButton>
  [ 28] jmpifz [ 36] ............................ if not tButton then
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 36 .............................. return 0
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglist 1 ........................... <me>
  [ 40] objcall 124 ............................. <me.getComponent()>
  [ 42] pusharglist 1 ........................... <me.getComponent()>
  [ 44] objcall 14 .............................. <me.getComponent().getState()>
  [ 46] setlocal 1 .............................. tstate = me.getComponent().getState()
  [ 48] getparam 0 .............................. <me>
  [ 50] pusharglist 1 ........................... <me>
  [ 52] objcall 124 ............................. <me.getComponent()>
  [ 54] pusharglist 1 ........................... <me.getComponent()>
  [ 56] objcall 18 .............................. <me.getComponent().isPoolFull()>
  [ 58] getlocal 1 .............................. <tstate>
  [ 60] pushsymb 64 ............................. <#open>
  [ 62] eq ...................................... <tstate = #open>
  [ 63] and ..................................... <me.getComponent().isPoolFull() and (tstate = #open)>
  [ 64] jmpifz [ 76] ............................ if me.getComponent().isPoolFull() and (tstate = #open) then / else
  [ 67] getlocal 0 .............................. <tButton>
  [ 69] pusharglistnoret 1 ...................... <tButton>
  [ 71] objcall 201 ............................. tButton.Activate()
  [ 73] jmp [ 82]
  [ 76] getlocal 0 .............................. <tButton>
  [ 78] pusharglistnoret 1 ...................... <tButton>
  [ 80] objcall 202 ............................. tButton.deactivate()
  [ 82] ret
end

on detectMemberName me, tClass, tProps
  [  0] pushcons 25 ............................. <"no_icon_small">
  [  2] setlocal 0 .............................. tMemStr = "no_icon_small"
  [  4] getmovieprop 155 ........................ <the itemDelimiter>
  [  6] setlocal 1 .............................. tDelim = the itemDelimiter
  [  8] pushcons 26 ............................. <"*">
  [ 10] setmovieprop 155 ........................ the itemDelimiter = "*"
  [ 12] getparam 1 .............................. <tClass>
  [ 14] pushsymb 156 ............................ <#item>
  [ 16] pushint8 1 .............................. <1>
  [ 18] pusharglist 3 ........................... <tClass, #item, 1>
  [ 20] objcall 157 ............................. <tClass.item[1]>
  [ 22] setparam 1 .............................. tClass = tClass.item[1]
  [ 24] getlocal 1 .............................. <tDelim>
  [ 26] setmovieprop 155 ........................ the itemDelimiter = tDelim
  [ 28] getparam 1 .............................. <tClass>
  [ 30] pushcons 27 ............................. <"post.it">
  [ 32] containsstr ............................. <tClass contains "post.it">
  [ 33] jmpifz [151] ............................ if tClass contains "post.it" then / else
  [ 36] getparam 2 .............................. <tProps>
  [ 38] pushsymb 73 ............................. <#props>
  [ 40] pusharglist 2 ........................... <tProps, #props>
  [ 42] objcall 72 .............................. <tProps[#props]>
  [ 44] pusharglist 1 ........................... <tProps[#props]>
  [ 46] extcall 204 ............................. <value(tProps[#props])>
  [ 48] pushfloat32 20.0 ........................ <20.0>
  [ 53] pushfloat32 6.0 ......................... <6.0>
  [ 58] div ..................................... <20.0 / 6.0>
  [ 59] div ..................................... <value(tProps[#props]) / (20.0 / 6.0)>
  [ 60] pusharglist 1 ........................... <value(tProps[#props]) / (20.0 / 6.0)>
  [ 62] extcall 70 .............................. <integer(value(tProps[#props]) / (20.0 / 6.0))>
  [ 64] setlocal 2 .............................. tCount = integer(value(tProps[#props]) / (20.0 / 6.0))
  [ 66] getlocal 2 .............................. <tCount>
  [ 68] pushint8 6 .............................. <6>
  [ 70] gt ...................................... <tCount > 6>
  [ 71] jmpifz [ 78] ............................ if tCount > 6 then
  [ 74] pushint8 6 .............................. <6>
  [ 76] setlocal 2 .............................. tCount = 6
  [ 78] getlocal 2 .............................. <tCount>
  [ 80] pushint8 1 .............................. <1>
  [ 82] lt ...................................... <tCount < 1>
  [ 83] jmpifz [ 90] ............................ if tCount < 1 then
  [ 86] pushint8 1 .............................. <1>
  [ 88] setlocal 2 .............................. tCount = 1
  [ 90] getparam 1 .............................. <tClass>
  [ 92] pushcons 13 ............................. <"_">
  [ 94] joinstr ................................. <tClass & "_">
  [ 95] getlocal 2 .............................. <tCount>
  [ 97] joinstr ................................. <tClass & "_" & tCount>
  [ 98] pushcons 13 ............................. <"_">
  [100] joinstr ................................. <tClass & "_" & tCount & "_">
  [101] pushcons 28 ............................. <"small">
  [103] joinstr ................................. <tClass & "_" & tCount & "_" & "small">
  [104] pusharglist 1 ........................... <tClass & "_" & tCount & "_" & "small">
  [106] extcall 205 ............................. <memberExists(tClass & "_" & tCount & "_" & "small")>
  [108] jmpifz [130] ............................ if memberExists(tClass & "_" & tCount & "_" & "small") then / else
  [111] getparam 1 .............................. <tClass>
  [113] pushcons 13 ............................. <"_">
  [115] joinstr ................................. <tClass & "_">
  [116] getlocal 2 .............................. <tCount>
  [118] joinstr ................................. <tClass & "_" & tCount>
  [119] pushcons 13 ............................. <"_">
  [121] joinstr ................................. <tClass & "_" & tCount & "_">
  [122] pushcons 28 ............................. <"small">
  [124] joinstr ................................. <tClass & "_" & tCount & "_" & "small">
  [125] setlocal 0 .............................. tMemStr = tClass & "_" & tCount & "_" & "small"
  [127] jmp [148]
  [130] getparam 0 .............................. <me>
  [132] pushcons 29 ............................. <"Couldn't define member for recycler item!">
  [134] pushcons 30 ............................. <RETURN>
  [136] joinstr ................................. <"Couldn't define member for recycler item!" & RETURN>
  [137] getparam 2 .............................. <tProps>
  [139] joinstr ................................. <"Couldn't define member for recycler item!" & RETURN & tProps>
  [140] pushsymb 207 ............................ <#detectMemberNameString>
  [142] pushsymb 208 ............................ <#minor>
  [144] pusharglistnoret 4 ...................... <me, "Couldn't define member for recycler item!" & RETURN & tProps, #detectMemberNameString, #minor>
  [146] extcall 206 ............................. error(me, "Couldn't define member for recycler item!" & RETURN & tProps, #detectMemberNameString, #minor)
  [148] jmp [342]
  [151] getparam 2 .............................. <tProps>
  [153] pushsymb 89 ............................. <#class>
  [155] pusharglist 2 ........................... <tProps, #class>
  [157] objcall 72 .............................. <tProps[#class]>
  [159] pushcons 13 ............................. <"_">
  [161] joinstr ................................. <tProps[#class] & "_">
  [162] getparam 2 .............................. <tProps>
  [164] pushsymb 73 ............................. <#props>
  [166] pusharglist 2 ........................... <tProps, #props>
  [168] objcall 72 .............................. <tProps[#props]>
  [170] joinstr ................................. <tProps[#class] & "_" & tProps[#props]>
  [171] pushcons 31 ............................. <"_small">
  [173] joinstr ................................. <tProps[#class] & "_" & tProps[#props] & "_small">
  [174] pusharglist 1 ........................... <tProps[#class] & "_" & tProps[#props] & "_small">
  [176] extcall 205 ............................. <memberExists(tProps[#class] & "_" & tProps[#props] & "_small")>
  [178] jmpifz [209] ............................ if memberExists(tProps[#class] & "_" & tProps[#props] & "_small") then / else
  [181] getparam 2 .............................. <tProps>
  [183] pushsymb 89 ............................. <#class>
  [185] pusharglist 2 ........................... <tProps, #class>
  [187] objcall 72 .............................. <tProps[#class]>
  [189] pushcons 13 ............................. <"_">
  [191] joinstr ................................. <tProps[#class] & "_">
  [192] getparam 2 .............................. <tProps>
  [194] pushsymb 73 ............................. <#props>
  [196] pusharglist 2 ........................... <tProps, #props>
  [198] objcall 72 .............................. <tProps[#props]>
  [200] joinstr ................................. <tProps[#class] & "_" & tProps[#props]>
  [201] pushcons 31 ............................. <"_small">
  [203] joinstr ................................. <tProps[#class] & "_" & tProps[#props] & "_small">
  [204] setlocal 0 .............................. tMemStr = tProps[#class] & "_" & tProps[#props] & "_small"
  [206] jmp [342]
  [209] getparam 2 .............................. <tProps>
  [211] pushsymb 89 ............................. <#class>
  [213] pusharglist 2 ........................... <tProps, #class>
  [215] objcall 72 .............................. <tProps[#class]>
  [217] pushcons 31 ............................. <"_small">
  [219] joinstr ................................. <tProps[#class] & "_small">
  [220] pusharglist 1 ........................... <tProps[#class] & "_small">
  [222] extcall 205 ............................. <memberExists(tProps[#class] & "_small")>
  [224] jmpifz [243] ............................ if memberExists(tProps[#class] & "_small") then / else
  [227] getparam 2 .............................. <tProps>
  [229] pushsymb 89 ............................. <#class>
  [231] pusharglist 2 ........................... <tProps, #class>
  [233] objcall 72 .............................. <tProps[#class]>
  [235] pushcons 31 ............................. <"_small">
  [237] joinstr ................................. <tProps[#class] & "_small">
  [238] setlocal 0 .............................. tMemStr = tProps[#class] & "_small"
  [240] jmp [342]
  [243] getparam 1 .............................. <tClass>
  [245] getparam 2 .............................. <tProps>
  [247] pushsymb 73 ............................. <#props>
  [249] pusharglist 2 ........................... <tProps, #props>
  [251] objcall 72 .............................. <tProps[#props]>
  [253] joinpadstr .............................. <tClass && tProps[#props]>
  [254] pushcons 31 ............................. <"_small">
  [256] joinstr ................................. <tClass && tProps[#props] & "_small">
  [257] pusharglist 1 ........................... <tClass && tProps[#props] & "_small">
  [259] extcall 205 ............................. <memberExists(tClass && tProps[#props] & "_small")>
  [261] jmpifz [283] ............................ if memberExists(tClass && tProps[#props] & "_small") then / else
  [264] getparam 1 .............................. <tClass>
  [266] getparam 2 .............................. <tProps>
  [268] pushsymb 73 ............................. <#props>
  [270] pusharglist 2 ........................... <tProps, #props>
  [272] objcall 72 .............................. <tProps[#props]>
  [274] joinpadstr .............................. <tClass && tProps[#props]>
  [275] pushcons 31 ............................. <"_small">
  [277] joinstr ................................. <tClass && tProps[#props] & "_small">
  [278] setlocal 0 .............................. tMemStr = tClass && tProps[#props] & "_small"
  [280] jmp [342]
  [283] getparam 1 .............................. <tClass>
  [285] pushcons 31 ............................. <"_small">
  [287] joinstr ................................. <tClass & "_small">
  [288] pusharglist 1 ........................... <tClass & "_small">
  [290] extcall 205 ............................. <memberExists(tClass & "_small")>
  [292] jmpifz [305] ............................ if memberExists(tClass & "_small") then / else
  [295] getparam 1 .............................. <tClass>
  [297] pushcons 31 ............................. <"_small">
  [299] joinstr ................................. <tClass & "_small">
  [300] setlocal 0 .............................. tMemStr = tClass & "_small"
  [302] jmp [342]
  [305] pushcons 32 ............................. <"rightwall">
  [307] getparam 1 .............................. <tClass>
  [309] joinpadstr .............................. <"rightwall" && tClass>
  [310] getparam 2 .............................. <tProps>
  [312] pushsymb 73 ............................. <#props>
  [314] pusharglist 2 ........................... <tProps, #props>
  [316] objcall 72 .............................. <tProps[#props]>
  [318] joinpadstr .............................. <"rightwall" && tClass && tProps[#props]>
  [319] pusharglist 1 ........................... <"rightwall" && tClass && tProps[#props]>
  [321] extcall 205 ............................. <memberExists("rightwall" && tClass && tProps[#props])>
  [323] jmpifz [342] ............................ if memberExists("rightwall" && tClass && tProps[#props]) then
  [326] pushcons 32 ............................. <"rightwall">
  [328] getparam 1 .............................. <tClass>
  [330] joinpadstr .............................. <"rightwall" && tClass>
  [331] getparam 2 .............................. <tProps>
  [333] pushsymb 73 ............................. <#props>
  [335] pusharglist 2 ........................... <tProps, #props>
  [337] objcall 72 .............................. <tProps[#props]>
  [339] joinpadstr .............................. <"rightwall" && tClass && tProps[#props]>
  [340] setlocal 0 .............................. tMemStr = "rightwall" && tClass && tProps[#props]
  [342] getlocal 0 .............................. <tMemStr>
  [344] pusharglistnoret 1 ...................... <tMemStr>
  [346] extcall 36 .............................. return tMemStr
  [348] ret
end
