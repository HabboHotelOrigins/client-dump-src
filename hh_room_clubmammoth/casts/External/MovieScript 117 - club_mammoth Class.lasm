property pAnimThisUpdate, pSin, pDiscoCounter, pSpriteList, pDiscoStyleList, pDiscoStyle, pLightTimer, pTextImageList, pDbFrameCount, pDbAnimFrame, pDbStarSpr, pDbDestRect, pActiveColors

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 221 ............................. pSpriteList = []
  [  5] pushint8 1 .............................. <1>
  [  7] setprop 222 ............................. pDiscoStyle = 1
  [  9] pushzero ................................ <0>
  [ 10] setprop 225 ............................. pLightTimer = 0
  [ 12] pushzero ................................ <0>
  [ 13] setprop 226 ............................. pAnimThisUpdate = 0
  [ 15] pushcons 0 .............................. <22.39999999999999858>
  [ 17] setprop 227 ............................. pSin = 22.39999999999999858
  [ 19] pushint8 100 ............................ <100>
  [ 21] setprop 228 ............................. pDiscoCounter = 100
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] pusharglist 0 ........................... <[]>
  [ 28] pushlist ................................ <[]>
  [ 29] pusharglist 0 ........................... <[]>
  [ 31] pushlist ................................ <[]>
  [ 32] pusharglist 0 ........................... <[]>
  [ 34] pushlist ................................ <[]>
  [ 35] pusharglist 0 ........................... <[]>
  [ 37] pushlist ................................ <[]>
  [ 38] pusharglist 0 ........................... <[]>
  [ 40] pushlist ................................ <[]>
  [ 41] pusharglist 0 ........................... <[]>
  [ 43] pushlist ................................ <[]>
  [ 44] pusharglist 7 ........................... <[[], [], [], [], [], [], []]>
  [ 46] pushlist ................................ <[[], [], [], [], [], [], []]>
  [ 47] setprop 229 ............................. pTextImageList = [[], [], [], [], [], [], []]
  [ 49] pusharglist 0 ........................... <[]>
  [ 51] pushlist ................................ <[]>
  [ 52] setprop 311 ............................. pActiveColors = []
  [ 55] pushzero ................................ <0>
  [ 56] setprop 230 ............................. pDbFrameCount = 0
  [ 58] pushint8 9 .............................. <9>
  [ 60] setprop 231 ............................. pDbAnimFrame = 9
  [ 62] pusharglist 0 ........................... <>
  [ 64] extcall 72 .............................. <VOID>
  [ 66] setprop 232 ............................. pDbStarSpr = VOID
  [ 68] pushzero ................................ <0>
  [ 69] pushzero ................................ <0>
  [ 70] pushzero ................................ <0>
  [ 71] pushzero ................................ <0>
  [ 72] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 74] extcall 234 ............................. <rect(0, 0, 0, 0)>
  [ 76] setprop 233 ............................. pDbDestRect = rect(0, 0, 0, 0)
  [ 78] getprop 232 ............................. <pDbStarSpr>
  [ 80] getobjprop 235 .......................... <pDbStarSpr.ilk>
  [ 82] pushsymb 23 ............................. <#sprite>
  [ 84] nteq .................................... <pDbStarSpr.ilk <> #sprite>
  [ 85] jmpifz [110] ............................ if pDbStarSpr.ilk <> #sprite then
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglist 1 ........................... <me>
  [ 92] objcall 237 ............................. <me.getID()>
  [ 94] pusharglist 1 ........................... <me.getID()>
  [ 96] extcall 236 ............................. <reserveSprite(me.getID())>
  [ 98] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [100] extcall 23 .............................. <sprite(reserveSprite(me.getID()))>
  [102] setprop 232 ............................. pDbStarSpr = sprite(reserveSprite(me.getID()))
  [104] getprop 232 ............................. <pDbStarSpr>
  [106] pushint8 36 ............................. <36>
  [108] setobjprop 116 .......................... pDbStarSpr.ink = 36
  [110] pusharglist 0 ........................... <[]>
  [112] pushlist ................................ <[]>
  [113] setprop 312 ............................. pDiscoStyleList = []
  [116] pushint8 1 .............................. <1>
  [118] setlocal 0
  [120] getlocal 0
  [122] pushcons 1 .............................. <"discofloor">
  [124] pusharglist 1 ........................... <"discofloor">
  [126] extcall 2 ............................... <getmemnum("discofloor")>
  [128] pusharglist 1 ........................... <getmemnum("discofloor")>
  [130] extcall 1 ............................... <member(getmemnum("discofloor"))>
  [132] pushsymb 224 ............................ <#line>
  [134] pusharglist 2 ........................... <member(getmemnum("discofloor")), #line>
  [136] objcall 83 .............................. <member(getmemnum("discofloor")).line.count>
  [138] lteq
  [139] jmpifz [178] ............................ repeat with i = 1 to member(getmemnum("discofloor")).line.count
  [142] getprop 312 ............................. <pDiscoStyleList>
  [145] pushcons 1 .............................. <"discofloor">
  [147] pusharglist 1 ........................... <"discofloor">
  [149] extcall 2 ............................... <getmemnum("discofloor")>
  [151] pusharglist 1 ........................... <getmemnum("discofloor")>
  [153] extcall 1 ............................... <member(getmemnum("discofloor"))>
  [155] getchainedprop 3 ........................ <member(getmemnum("discofloor")).text>
  [157] pushsymb 224 ............................ <#line>
  [159] getlocal 0 .............................. <i>
  [161] pusharglist 3 ........................... <member(getmemnum("discofloor")).text, #line, i>
  [163] objcall 55 .............................. <member(getmemnum("discofloor")).text.line[i]>
  [165] pusharglistnoret 2 ...................... <pDiscoStyleList, member(getmemnum("discofloor")).text.line[i]>
  [167] objcall 157 ............................. pDiscoStyleList.add(member(getmemnum("discofloor")).text.line[i])
  [169] pushint8 1
  [171] getlocal 0
  [173] add
  [174] setlocal 0
  [176] endrepeat [120]
  [178] pushint8 1 .............................. <1>
  [180] pusharglistnoret 1 ...................... <1>
  [182] extcall 13 .............................. return 1
  [184] ret
end

on deconstruct me
  [  0] getprop 232 ............................. <pDbStarSpr>
  [  2] getobjprop 235 .......................... <pDbStarSpr.ilk>
  [  4] pushsymb 23 ............................. <#sprite>
  [  6] eq ...................................... <pDbStarSpr.ilk = #sprite>
  [  7] jmpifz [ 18] ............................ if pDbStarSpr.ilk = #sprite then
  [ 10] getprop 232 ............................. <pDbStarSpr>
  [ 12] getobjprop 24 ........................... <pDbStarSpr.spriteNum>
  [ 14] pusharglistnoret 1 ...................... <pDbStarSpr.spriteNum>
  [ 16] extcall 238 ............................. releaseSprite(pDbStarSpr.spriteNum)
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglist 1 ........................... <me>
  [ 22] objcall 237 ............................. <me.getID()>
  [ 24] pusharglist 1 ........................... <me.getID()>
  [ 26] extcall 239 ............................. <removeUpdate(me.getID())>
  [ 28] pusharglistnoret 1 ...................... <removeUpdate(me.getID())>
  [ 30] extcall 13 .............................. return removeUpdate(me.getID())
  [ 32] ret
end

on prepare me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 237 ............................. <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 240 ............................. <receiveUpdate(me.getID())>
  [ 10] pusharglistnoret 1 ...................... <receiveUpdate(me.getID())>
  [ 12] extcall 13 .............................. return receiveUpdate(me.getID())
  [ 14] ret
end

on showprogram me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pusharglist 1 ........................... <tMsg>
  [  4] extcall 52 .............................. <voidp(tMsg)>
  [  6] jmpifz [ 14] ............................ if voidp(tMsg) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 13 .............................. return 0
  [ 14] getparam 1 .............................. <tMsg>
  [ 16] pushsymb 315 ............................ <#show_command>
  [ 19] pusharglist 2 ........................... <tMsg, #show_command>
  [ 21] objcall 73 .............................. <tMsg[#show_command]>
  [ 23] setlocal 0 .............................. tNum = tMsg[#show_command]
  [ 25] getparam 0 .............................. <me>
  [ 27] getlocal 0 .............................. <tNum>
  [ 29] pusharglist 2 ........................... <me, tNum>
  [ 31] objcall 205 ............................. <me.changeDiscoStyle(tNum)>
  [ 33] pusharglistnoret 1 ...................... <me.changeDiscoStyle(tNum)>
  [ 35] extcall 13 .............................. return me.changeDiscoStyle(tNum)
  [ 37] ret
end

on changeDiscoStyle me, tNr
  [  0] getparam 1 .............................. <tNr>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 72 .............................. <VOID>
  [  6] eq ...................................... <tNr = VOID>
  [  7] jmpifz [ 20] ............................ if tNr = VOID then / else
  [ 10] getprop 222 ............................. <pDiscoStyle>
  [ 12] pushint8 1 .............................. <1>
  [ 14] add ..................................... <pDiscoStyle + 1>
  [ 15] setprop 222 ............................. pDiscoStyle = pDiscoStyle + 1
  [ 17] jmp [ 24]
  [ 20] getparam 1 .............................. <tNr>
  [ 22] setprop 222 ............................. pDiscoStyle = tNr
  [ 24] getprop 222 ............................. <pDiscoStyle>
  [ 26] pushint8 1 .............................. <1>
  [ 28] lt ...................................... <pDiscoStyle < 1>
  [ 29] getprop 222 ............................. <pDiscoStyle>
  [ 31] getprop 312 ............................. <pDiscoStyleList>
  [ 34] getobjprop 83 ........................... <pDiscoStyleList.count>
  [ 36] gt ...................................... <pDiscoStyle > pDiscoStyleList.count>
  [ 37] or ...................................... <(pDiscoStyle < 1) or (pDiscoStyle > pDiscoStyleList.count)>
  [ 38] jmpifz [ 45] ............................ if (pDiscoStyle < 1) or (pDiscoStyle > pDiscoStyleList.count) then
  [ 41] pushint8 1 .............................. <1>
  [ 43] setprop 222 ............................. pDiscoStyle = 1
  [ 45] pushcons 0 .............................. <22.39999999999999858>
  [ 47] setprop 227 ............................. pSin = 22.39999999999999858
  [ 49] pushint8 100 ............................ <100>
  [ 51] setprop 228 ............................. pDiscoCounter = 100
  [ 53] pusharglist 0 ........................... <[]>
  [ 55] pushlist ................................ <[]>
  [ 56] setprop 311 ............................. pActiveColors = []
  [ 59] pusharglist 0 ........................... <[]>
  [ 61] pushlist ................................ <[]>
  [ 62] pusharglist 0 ........................... <[]>
  [ 64] pushlist ................................ <[]>
  [ 65] pusharglist 0 ........................... <[]>
  [ 67] pushlist ................................ <[]>
  [ 68] pusharglist 0 ........................... <[]>
  [ 70] pushlist ................................ <[]>
  [ 71] pusharglist 0 ........................... <[]>
  [ 73] pushlist ................................ <[]>
  [ 74] pusharglist 0 ........................... <[]>
  [ 76] pushlist ................................ <[]>
  [ 77] pusharglist 0 ........................... <[]>
  [ 79] pushlist ................................ <[]>
  [ 80] pusharglist 7 ........................... <[[], [], [], [], [], [], []]>
  [ 82] pushlist ................................ <[[], [], [], [], [], [], []]>
  [ 83] setprop 229 ............................. pTextImageList = [[], [], [], [], [], [], []]
  [ 85] pushint8 1 .............................. <1>
  [ 87] pusharglistnoret 1 ...................... <1>
  [ 89] extcall 13 .............................. return 1
  [ 91] ret
end

on update me
  [  0] getprop 226 ............................. <pAnimThisUpdate>
  [  2] not ..................................... <not pAnimThisUpdate>
  [  3] setprop 226 ............................. pAnimThisUpdate = not pAnimThisUpdate
  [  5] getprop 226 ............................. <pAnimThisUpdate>
  [  7] not ..................................... <not pAnimThisUpdate>
  [  8] jmpifz [ 17] ............................ if not pAnimThisUpdate then
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 13 .............................. return 1
  [ 17] getprop 227 ............................. <pSin>
  [ 19] pushcons 2 .............................. <0.01>
  [ 21] add ..................................... <pSin + 0.01>
  [ 22] setprop 227 ............................. pSin = pSin + 0.01
  [ 24] getprop 221 ............................. <pSpriteList>
  [ 26] pusharglist 0 ........................... <[]>
  [ 28] pushlist ................................ <[]>
  [ 29] eq ...................................... <pSpriteList = []>
  [ 30] jmpifz [ 39] ............................ if pSpriteList = [] then
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 219 ............................. me.getSpriteList()
  [ 39] getparam 0 .............................. <me>
  [ 41] pusharglistnoret 1 ...................... <me>
  [ 43] objcall 218 ............................. me.animDiscoBall()
  [ 45] getprop 312 ............................. <pDiscoStyleList>
  [ 48] getprop 222 ............................. <pDiscoStyle>
  [ 50] pusharglist 1 ........................... <pDiscoStyle>
  [ 52] extcall 27 .............................. <integer(pDiscoStyle)>
  [ 54] pusharglist 2 ........................... <pDiscoStyleList, integer(pDiscoStyle)>
  [ 56] objcall 73 .............................. <pDiscoStyleList[integer(pDiscoStyle)]>
  [ 58] setlocal 0 .............................. tProps = pDiscoStyleList[integer(pDiscoStyle)]
  [ 60] getlocal 0 .............................. <tProps>
  [ 62] pushsymb 98 ............................. <#word>
  [ 64] pusharglist 2 ........................... <tProps, #word>
  [ 66] objcall 83 .............................. <tProps.word.count>
  [ 68] pushint8 7 .............................. <7>
  [ 70] lt ...................................... <tProps.word.count < 7>
  [ 71] jmpifz [ 79] ............................ if tProps.word.count < 7 then
  [ 74] pushzero ................................ <0>
  [ 75] pusharglistnoret 1 ...................... <0>
  [ 77] extcall 13 .............................. return 0
  [ 79] getlocal 0 .............................. <tProps>
  [ 81] pushsymb 98 ............................. <#word>
  [ 83] pushint8 1 .............................. <1>
  [ 85] pusharglist 3 ........................... <tProps, #word, 1>
  [ 87] objcall 55 .............................. <tProps.word[1]>
  [ 89] setlocal 1 .............................. tStyle = tProps.word[1]
  [ 91] getlocal 0 .............................. <tProps>
  [ 93] pushsymb 98 ............................. <#word>
  [ 95] pushint8 2 .............................. <2>
  [ 97] pusharglist 3 ........................... <tProps, #word, 2>
  [ 99] objcall 55 .............................. <tProps.word[2]>
  [101] pusharglist 1 ........................... <tProps.word[2]>
  [103] extcall 242 ............................. <value(tProps.word[2])>
  [105] setlocal 2 .............................. tOrCols = value(tProps.word[2])
  [107] getlocal 0 .............................. <tProps>
  [109] pushsymb 98 ............................. <#word>
  [111] pushint8 3 .............................. <3>
  [113] pusharglist 3 ........................... <tProps, #word, 3>
  [115] objcall 55 .............................. <tProps.word[3]>
  [117] pusharglist 1 ........................... <tProps.word[3]>
  [119] extcall 27 .............................. <integer(tProps.word[3])>
  [121] setlocal 3 .............................. tMultip = integer(tProps.word[3])
  [123] getlocal 0 .............................. <tProps>
  [125] pushsymb 98 ............................. <#word>
  [127] pushint8 4 .............................. <4>
  [129] pusharglist 3 ........................... <tProps, #word, 4>
  [131] objcall 55 .............................. <tProps.word[4]>
  [133] pusharglist 1 ........................... <tProps.word[4]>
  [135] extcall 27 .............................. <integer(tProps.word[4])>
  [137] setlocal 4 .............................. tSpeed = integer(tProps.word[4])
  [139] getlocal 0 .............................. <tProps>
  [141] pushsymb 98 ............................. <#word>
  [143] pushint8 5 .............................. <5>
  [145] pusharglist 3 ........................... <tProps, #word, 5>
  [147] objcall 55 .............................. <tProps.word[5]>
  [149] pusharglist 1 ........................... <tProps.word[5]>
  [151] extcall 242 ............................. <value(tProps.word[5])>
  [153] setlocal 5 .............................. tRange = value(tProps.word[5])
  [155] getlocal 0 .............................. <tProps>
  [157] pushsymb 98 ............................. <#word>
  [159] pushint8 6 .............................. <6>
  [161] pusharglist 3 ........................... <tProps, #word, 6>
  [163] objcall 55 .............................. <tProps.word[6]>
  [165] pusharglist 1 ........................... <tProps.word[6]>
  [167] extcall 27 .............................. <integer(tProps.word[6])>
  [169] setlocal 6 .............................. tTime = integer(tProps.word[6])
  [171] getlocal 0 .............................. <tProps>
  [173] pushsymb 98 ............................. <#word>
  [175] pushint8 7 .............................. <7>
  [177] pusharglist 3 ........................... <tProps, #word, 7>
  [179] objcall 55 .............................. <tProps.word[7]>
  [181] pusharglist 1 ........................... <tProps.word[7]>
  [183] extcall 27 .............................. <integer(tProps.word[7])>
  [185] setlocal 7 .............................. tHorz = integer(tProps.word[7])
  [187] getmovieprop 243 ........................ <the milliSeconds>
  [189] getlocal 6 .............................. <tTime>
  [191] getprop 225 ............................. <pLightTimer>
  [193] add ..................................... <tTime + pLightTimer>
  [194] lt ...................................... <the milliSeconds < (tTime + pLightTimer)>
  [195] jmpifz [204] ............................ if the milliSeconds < (tTime + pLightTimer) then
  [198] pushint8 1 .............................. <1>
  [200] pusharglistnoret 1 ...................... <1>
  [202] extcall 13 .............................. return 1
  [204] getprop 228 ............................. <pDiscoCounter>
  [206] pushint8 1 .............................. <1>
  [208] add ..................................... <pDiscoCounter + 1>
  [209] setprop 228 ............................. pDiscoCounter = pDiscoCounter + 1
  [211] getmovieprop 243 ........................ <the milliSeconds>
  [213] setprop 225 ............................. pLightTimer = the milliSeconds
  [215] getparam 0 .............................. <me>
  [217] getlocal 1 .............................. <tStyle>
  [219] getlocal 2 .............................. <tOrCols>
  [221] getlocal 3 .............................. <tMultip>
  [223] getlocal 4 .............................. <tSpeed>
  [225] getlocal 5 .............................. <tRange>
  [227] getlocal 7 .............................. <tHorz>
  [229] pusharglistnoret 7 ...................... <me, tStyle, tOrCols, tMultip, tSpeed, tRange, tHorz>
  [231] objcall 207 ............................. me.ColorTiles(tStyle, tOrCols, tMultip, tSpeed, tRange, tHorz)
  [233] ret
end

on ColorTiles me, tStyle, tOrCols, tMultiplier, tSpeed, tRange, tHorz
  [  0] getparam 5 .............................. <tRange>
  [  2] setprop 311 ............................. pActiveColors = tRange
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 0
  [  9] getlocal 0
  [ 11] getprop 221 ............................. <pSpriteList>
  [ 13] getobjprop 83 ........................... <pSpriteList.count>
  [ 15] lteq
  [ 16] jmpifz [533] ............................ repeat with i = 1 to pSpriteList.count
  [ 19] getlocal 0 .............................. <i>
  [ 21] pushint8 7 .............................. <7>
  [ 23] mod ..................................... <i mod 7>
  [ 24] setlocal 1 .............................. tX = i mod 7
  [ 26] getlocal 1 .............................. <tX>
  [ 28] pushzero ................................ <0>
  [ 29] eq ...................................... <tX = 0>
  [ 30] jmpifz [ 37] ............................ if tX = 0 then
  [ 33] pushint8 7 .............................. <7>
  [ 35] setlocal 1 .............................. tX = 7
  [ 37] getlocal 0 .............................. <i>
  [ 39] pushint8 1 .............................. <1>
  [ 41] sub ..................................... <i - 1>
  [ 42] pushint8 7 .............................. <7>
  [ 44] div ..................................... <(i - 1) / 7>
  [ 45] pushint8 1 .............................. <1>
  [ 47] add ..................................... <((i - 1) / 7) + 1>
  [ 48] setlocal 2 .............................. tY = ((i - 1) / 7) + 1
  [ 50] getparam 1 .............................. <tStyle>
  [ 52] peek 0 .................................. case tStyle of
  [ 54] pushcons 3 .............................. <"#vertRotateSin">
  [ 56] eq
  [ 57] jmpifz [ 84] ............................ (case) "#vertRotateSin":
  [ 60] getparam 0 .............................. <me>
  [ 62] getlocal 1 .............................. <tX>
  [ 64] getlocal 2 .............................. <tY>
  [ 66] getparam 2 .............................. <tOrCols>
  [ 68] getparam 3 .............................. <tMultiplier>
  [ 70] getparam 4 .............................. <tSpeed>
  [ 72] getprop 311 ............................. <pActiveColors>
  [ 75] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [ 77] objcall 212 ............................. <me.vertRotateSin(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [ 79] setlocal 3 .............................. tCols = me.vertRotateSin(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [ 81] jmp [424]
  [ 84] peek 0
  [ 86] pushcons 4 .............................. <"#vertRotate">
  [ 88] eq
  [ 89] jmpifz [116] ............................ (case) "#vertRotate":
  [ 92] getparam 0 .............................. <me>
  [ 94] getlocal 1 .............................. <tX>
  [ 96] getlocal 2 .............................. <tY>
  [ 98] getparam 2 .............................. <tOrCols>
  [100] getparam 3 .............................. <tMultiplier>
  [102] getparam 4 .............................. <tSpeed>
  [104] getprop 311 ............................. <pActiveColors>
  [107] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [109] objcall 213 ............................. <me.vertRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [111] setlocal 3 .............................. tCols = me.vertRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [113] jmp [424]
  [116] peek 0
  [118] pushcons 5 .............................. <"#centerRotateMovX">
  [120] eq
  [121] jmpifz [148] ............................ (case) "#centerRotateMovX":
  [124] getparam 0 .............................. <me>
  [126] getlocal 1 .............................. <tX>
  [128] getlocal 2 .............................. <tY>
  [130] getparam 2 .............................. <tOrCols>
  [132] getparam 3 .............................. <tMultiplier>
  [134] getparam 4 .............................. <tSpeed>
  [136] getprop 311 ............................. <pActiveColors>
  [139] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [141] objcall 214 ............................. <me.centerRotateMovX(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [143] setlocal 3 .............................. tCols = me.centerRotateMovX(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [145] jmp [424]
  [148] peek 0
  [150] pushcons 6 .............................. <"#centerRotateMovXY">
  [152] eq
  [153] jmpifz [180] ............................ (case) "#centerRotateMovXY":
  [156] getparam 0 .............................. <me>
  [158] getlocal 1 .............................. <tX>
  [160] getlocal 2 .............................. <tY>
  [162] getparam 2 .............................. <tOrCols>
  [164] getparam 3 .............................. <tMultiplier>
  [166] getparam 4 .............................. <tSpeed>
  [168] getprop 311 ............................. <pActiveColors>
  [171] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [173] objcall 215 ............................. <me.centerRotateMovXY(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [175] setlocal 3 .............................. tCols = me.centerRotateMovXY(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [177] jmp [424]
  [180] peek 0
  [182] pushcons 7 .............................. <"#centerRotate">
  [184] eq
  [185] jmpifz [212] ............................ (case) "#centerRotate":
  [188] getparam 0 .............................. <me>
  [190] getlocal 1 .............................. <tX>
  [192] getlocal 2 .............................. <tY>
  [194] getparam 2 .............................. <tOrCols>
  [196] getparam 3 .............................. <tMultiplier>
  [198] getparam 4 .............................. <tSpeed>
  [200] getprop 311 ............................. <pActiveColors>
  [203] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [205] objcall 217 ............................. <me.centerRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [207] setlocal 3 .............................. tCols = me.centerRotate(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [209] jmp [424]
  [212] peek 0
  [214] pushcons 8 .............................. <"#randomColor">
  [216] eq
  [217] jmpifz [244] ............................ (case) "#randomColor":
  [220] getparam 0 .............................. <me>
  [222] getlocal 1 .............................. <tX>
  [224] getlocal 2 .............................. <tY>
  [226] getparam 2 .............................. <tOrCols>
  [228] getparam 3 .............................. <tMultiplier>
  [230] getparam 4 .............................. <tSpeed>
  [232] getprop 311 ............................. <pActiveColors>
  [235] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [237] objcall 210 ............................. <me.randomColor(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [239] setlocal 3 .............................. tCols = me.randomColor(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [241] jmp [424]
  [244] peek 0
  [246] pushcons 9 .............................. <"#chessBoard">
  [248] eq
  [249] jmpifz [276] ............................ (case) "#chessBoard":
  [252] getparam 0 .............................. <me>
  [254] getlocal 1 .............................. <tX>
  [256] getlocal 2 .............................. <tY>
  [258] getparam 2 .............................. <tOrCols>
  [260] getparam 3 .............................. <tMultiplier>
  [262] getparam 4 .............................. <tSpeed>
  [264] getprop 311 ............................. <pActiveColors>
  [267] pusharglist 7 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors>
  [269] objcall 211 ............................. <me.chessBoard(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)>
  [271] setlocal 3 .............................. tCols = me.chessBoard(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors)
  [273] jmp [424]
  [276] peek 0
  [278] pushcons 10 ............................. <"#arrow">
  [280] eq
  [281] jmpifz [310] ............................ (case) "#arrow":
  [284] getparam 0 .............................. <me>
  [286] getlocal 1 .............................. <tX>
  [288] getlocal 2 .............................. <tY>
  [290] getparam 2 .............................. <tOrCols>
  [292] getparam 3 .............................. <tMultiplier>
  [294] getparam 4 .............................. <tSpeed>
  [296] getprop 311 ............................. <pActiveColors>
  [299] getparam 6 .............................. <tHorz>
  [301] pusharglist 8 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz>
  [303] objcall 216 ............................. <me.arrow(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz)>
  [305] setlocal 3 .............................. tCols = me.arrow(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz)
  [307] jmp [424]
  [310] peek 0
  [312] pushcons 11 ............................. <"#textImage">
  [314] eq
  [315] jmpifz [346] ............................ (case) "#textImage":
  [318] getparam 0 .............................. <me>
  [320] getlocal 1 .............................. <tX>
  [322] getlocal 2 .............................. <tY>
  [324] getparam 2 .............................. <tOrCols>
  [326] getparam 3 .............................. <tMultiplier>
  [328] getparam 4 .............................. <tSpeed>
  [330] getprop 311 ............................. <pActiveColors>
  [333] getparam 6 .............................. <tHorz>
  [335] pushint8 1 .............................. <1>
  [337] pusharglist 9 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 1>
  [339] objcall 208 ............................. <me.textImage(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 1)>
  [341] setlocal 3 .............................. tCols = me.textImage(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 1)
  [343] jmp [424]
  [346] peek 0
  [348] pushcons 12 ............................. <"#textImage2">
  [350] eq
  [351] jmpifz [382] ............................ (case) "#textImage2":
  [354] getparam 0 .............................. <me>
  [356] getlocal 1 .............................. <tX>
  [358] getlocal 2 .............................. <tY>
  [360] getparam 2 .............................. <tOrCols>
  [362] getparam 3 .............................. <tMultiplier>
  [364] getparam 4 .............................. <tSpeed>
  [366] getprop 311 ............................. <pActiveColors>
  [369] getparam 6 .............................. <tHorz>
  [371] pushint8 2 .............................. <2>
  [373] pusharglist 9 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 2>
  [375] objcall 208 ............................. <me.textImage(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 2)>
  [377] setlocal 3 .............................. tCols = me.textImage(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz, 2)
  [379] jmp [424]
  [382] peek 0
  [384] pushcons 13 ............................. <"#blink">
  [386] eq
  [387] jmpifz [417] ............................ (case) "#blink":
  [390] getparam 0 .............................. <me>
  [392] getlocal 1 .............................. <tX>
  [394] getlocal 2 .............................. <tY>
  [396] getparam 2 .............................. <tOrCols>
  [398] getparam 3 .............................. <tMultiplier>
  [400] getparam 4 .............................. <tSpeed>
  [402] getprop 311 ............................. <pActiveColors>
  [405] getparam 6 .............................. <tHorz>
  [407] pusharglist 8 ........................... <me, tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz>
  [409] objcall 310 ............................. <me.blink(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz)>
  [412] setlocal 3 .............................. tCols = me.blink(tX, tY, tOrCols, tMultiplier, tSpeed, pActiveColors, tHorz)
  [414] jmp [424] ............................... (case) otherwise:
  [417] pop 1
  [419] pushzero ................................ <0>
  [420] pusharglistnoret 1 ...................... <0>
  [422] extcall 13 .............................. return 0
  [424] pop 1 ................................... end case
  [426] getlocal 3 .............................. <tCols>
  [428] getobjprop 235 .......................... <tCols.ilk>
  [430] pushsymb 303 ............................ <#list>
  [433] nteq .................................... <tCols.ilk <> #list>
  [434] jmpifz [485] ............................ if tCols.ilk <> #list then
  [437] getlocal 3 .............................. <tCols>
  [439] pushzero ................................ <0>
  [440] eq ...................................... <tCols = 0>
  [441] jmpifz [470] ............................ if tCols = 0 then / else
  [444] getprop 221 ............................. <pSpriteList>
  [446] getlocal 0 .............................. <i>
  [448] pusharglist 2 ........................... <pSpriteList, i>
  [450] objcall 73 .............................. <pSpriteList[i]>
  [452] pushint16 255 ........................... <255>
  [455] pushint16 255 ........................... <255>
  [458] pushint16 255 ........................... <255>
  [461] pusharglist 3 ........................... <255, 255, 255>
  [463] extcall 253 ............................. <rgb(255, 255, 255)>
  [465] setobjprop 114 .......................... pSpriteList[i].bgColor = rgb(255, 255, 255)
  [467] jmp [482]
  [470] getprop 221 ............................. <pSpriteList>
  [472] getlocal 0 .............................. <i>
  [474] pusharglist 2 ........................... <pSpriteList, i>
  [476] objcall 73 .............................. <pSpriteList[i]>
  [478] getlocal 3 .............................. <tCols>
  [480] setobjprop 114 .......................... pSpriteList[i].bgColor = tCols
  [482] jmp [523] ............................... next repeat
  [485] getprop 221 ............................. <pSpriteList>
  [487] getlocal 0 .............................. <i>
  [489] pusharglist 2 ........................... <pSpriteList, i>
  [491] objcall 73 .............................. <pSpriteList[i]>
  [493] getlocal 3 .............................. <tCols>
  [495] pushint8 1 .............................. <1>
  [497] pusharglist 2 ........................... <tCols, 1>
  [499] objcall 73 .............................. <tCols[1]>
  [501] getlocal 3 .............................. <tCols>
  [503] pushint8 2 .............................. <2>
  [505] pusharglist 2 ........................... <tCols, 2>
  [507] objcall 73 .............................. <tCols[2]>
  [509] getlocal 3 .............................. <tCols>
  [511] pushint8 3 .............................. <3>
  [513] pusharglist 2 ........................... <tCols, 3>
  [515] objcall 73 .............................. <tCols[3]>
  [517] pusharglist 3 ........................... <tCols[1], tCols[2], tCols[3]>
  [519] extcall 253 ............................. <rgb(tCols[1], tCols[2], tCols[3])>
  [521] setobjprop 114 .......................... pSpriteList[i].bgColor = rgb(tCols[1], tCols[2], tCols[3])
  [523] pushint8 1
  [525] getlocal 0
  [527] add
  [528] setlocal 0
  [530] endrepeat [  9]
  [533] ret
end

on blink me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange, tHorz
  [  0] getprop 228 ............................. <pDiscoCounter>
  [  2] pushint8 9 .............................. <9>
  [  4] mod ..................................... <pDiscoCounter mod 9>
  [  5] setlocal 0 .............................. tAnimFrame = pDiscoCounter mod 9
  [  7] pushcons 14 ............................. <"mammothblink">
  [  9] getlocal 0 .............................. <tAnimFrame>
  [ 11] pushint8 1 .............................. <1>
  [ 13] add ..................................... <tAnimFrame + 1>
  [ 14] joinstr ................................. <"mammothblink" & tAnimFrame + 1>
  [ 15] pusharglist 1 ........................... <"mammothblink" & tAnimFrame + 1>
  [ 17] extcall 2 ............................... <getmemnum("mammothblink" & tAnimFrame + 1)>
  [ 19] pusharglist 1 ........................... <getmemnum("mammothblink" & tAnimFrame + 1)>
  [ 21] extcall 1 ............................... <member(getmemnum("mammothblink" & tAnimFrame + 1))>
  [ 23] setlocal 1 .............................. tMem = member(getmemnum("mammothblink" & tAnimFrame + 1))
  [ 25] getlocal 1 .............................. <tMem>
  [ 27] getobjprop 260 .......................... <tMem.image>
  [ 30] setlocal 2 .............................. tImg = tMem.image
  [ 32] getlocal 2 .............................. <tImg>
  [ 34] getobjprop 262 .......................... <tImg.width>
  [ 37] setlocal 3 .............................. tWid = tImg.width
  [ 39] getlocal 3 .............................. <tWid>
  [ 41] pushint8 2 .............................. <2>
  [ 43] div ..................................... <tWid / 2>
  [ 44] pushint8 4 .............................. <4>
  [ 46] sub ..................................... <(tWid / 2) - 4>
  [ 47] setlocal 4 .............................. tMod = (tWid / 2) - 4
  [ 49] getlocal 2 .............................. <tImg>
  [ 51] getparam 1 .............................. <tX>
  [ 53] getlocal 4 .............................. <tMod>
  [ 55] add ..................................... <tX + tMod>
  [ 56] getparam 2 .............................. <tY>
  [ 58] getlocal 4 .............................. <tMod>
  [ 60] add ..................................... <tY + tMod>
  [ 61] pusharglist 3 ........................... <tImg, tX + tMod, tY + tMod>
  [ 63] objcall 263 ............................. <tImg.getPixel(tX + tMod, tY + tMod)>
  [ 66] pusharglistnoret 1 ...................... <tImg.getPixel(tX + tMod, tY + tMod)>
  [ 68] extcall 13 .............................. return tImg.getPixel(tX + tMod, tY + tMod)
  [ 70] ret
end

on textImage me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange, tHorz, tNr
  [  0] getparam 7 .............................. <tHorz>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tHorz = 1>
  [  5] jmpifz [ 20] ............................ if tHorz = 1 then
  [  8] getparam 1 .............................. <tX>
  [ 10] setlocal 0 .............................. tTemp = tX
  [ 12] getparam 2 .............................. <tY>
  [ 14] setparam 1 .............................. tX = tY
  [ 16] getlocal 0 .............................. <tTemp>
  [ 18] setparam 2 .............................. tY = tTemp
  [ 20] getprop 229 ............................. <pTextImageList>
  [ 22] pusharglist 0 ........................... <[]>
  [ 24] pushlist ................................ <[]>
  [ 25] pusharglist 0 ........................... <[]>
  [ 27] pushlist ................................ <[]>
  [ 28] pusharglist 0 ........................... <[]>
  [ 30] pushlist ................................ <[]>
  [ 31] pusharglist 0 ........................... <[]>
  [ 33] pushlist ................................ <[]>
  [ 34] pusharglist 0 ........................... <[]>
  [ 36] pushlist ................................ <[]>
  [ 37] pusharglist 0 ........................... <[]>
  [ 39] pushlist ................................ <[]>
  [ 40] pusharglist 0 ........................... <[]>
  [ 42] pushlist ................................ <[]>
  [ 43] pusharglist 7 ........................... <[[], [], [], [], [], [], []]>
  [ 45] pushlist ................................ <[[], [], [], [], [], [], []]>
  [ 46] eq ...................................... <pTextImageList = [[], [], [], [], [], [], []]>
  [ 47] jmpifz [ 67] ............................ if pTextImageList = [[], [], [], [], [], [], []] then
  [ 50] getparam 0 .............................. <me>
  [ 52] getparam 8 .............................. <tNr>
  [ 54] pusharglist 2 ........................... <me, tNr>
  [ 56] objcall 209 ............................. <me.getTextImage(tNr)>
  [ 58] not ..................................... <not me.getTextImage(tNr)>
  [ 59] jmpifz [ 67] ............................ if not me.getTextImage(tNr) then
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 13 .............................. return 0
  [ 67] getprop 228 ............................. <pDiscoCounter>
  [ 69] getprop 229 ............................. <pTextImageList>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 2 ........................... <pTextImageList, 1>
  [ 75] objcall 73 .............................. <pTextImageList[1]>
  [ 77] getobjprop 83 ........................... <pTextImageList[1].count>
  [ 79] mod ..................................... <pDiscoCounter mod pTextImageList[1].count>
  [ 80] setlocal 1 .............................. tSpot = pDiscoCounter mod pTextImageList[1].count
  [ 82] getparam 1 .............................. <tX>
  [ 84] getlocal 1 .............................. <tSpot>
  [ 86] add ..................................... <tX + tSpot>
  [ 87] getprop 229 ............................. <pTextImageList>
  [ 89] pushint8 1 .............................. <1>
  [ 91] pusharglist 2 ........................... <pTextImageList, 1>
  [ 93] objcall 73 .............................. <pTextImageList[1]>
  [ 95] getobjprop 83 ........................... <pTextImageList[1].count>
  [ 97] gt ...................................... <(tX + tSpot) > pTextImageList[1].count>
  [ 98] jmpifz [104] ............................ if (tX + tSpot) > pTextImageList[1].count then
  [101] pushzero ................................ <0>
  [102] setlocal 1 .............................. tSpot = 0
  [104] getprop 229 ............................. <pTextImageList>
  [106] getparam 2 .............................. <tY>
  [108] pusharglist 2 ........................... <pTextImageList, tY>
  [110] objcall 73 .............................. <pTextImageList[tY]>
  [112] getparam 1 .............................. <tX>
  [114] getlocal 1 .............................. <tSpot>
  [116] add ..................................... <tX + tSpot>
  [117] pusharglist 2 ........................... <pTextImageList[tY], tX + tSpot>
  [119] objcall 73 .............................. <pTextImageList[tY][tX + tSpot]>
  [121] jmpifz [158] ............................ if pTextImageList[tY][tX + tSpot] then / else
  [124] getparam 6 .............................. <tRange>
  [126] pushint8 4 .............................. <4>
  [128] pusharglist 2 ........................... <tRange, 4>
  [130] objcall 73 .............................. <tRange[4]>
  [132] getparam 6 .............................. <tRange>
  [134] pushint8 5 .............................. <5>
  [136] pusharglist 2 ........................... <tRange, 5>
  [138] objcall 73 .............................. <tRange[5]>
  [140] getparam 6 .............................. <tRange>
  [142] pushint8 6 .............................. <6>
  [144] pusharglist 2 ........................... <tRange, 6>
  [146] objcall 73 .............................. <tRange[6]>
  [148] pusharglist 3 ........................... <[tRange[4], tRange[5], tRange[6]]>
  [150] pushlist ................................ <[tRange[4], tRange[5], tRange[6]]>
  [151] pusharglistnoret 1 ...................... <[tRange[4], tRange[5], tRange[6]]>
  [153] extcall 13 .............................. return [tRange[4], tRange[5], tRange[6]]
  [155] jmp [189]
  [158] getparam 6 .............................. <tRange>
  [160] pushint8 1 .............................. <1>
  [162] pusharglist 2 ........................... <tRange, 1>
  [164] objcall 73 .............................. <tRange[1]>
  [166] getparam 6 .............................. <tRange>
  [168] pushint8 2 .............................. <2>
  [170] pusharglist 2 ........................... <tRange, 2>
  [172] objcall 73 .............................. <tRange[2]>
  [174] getparam 6 .............................. <tRange>
  [176] pushint8 3 .............................. <3>
  [178] pusharglist 2 ........................... <tRange, 3>
  [180] objcall 73 .............................. <tRange[3]>
  [182] pusharglist 3 ........................... <[tRange[1], tRange[2], tRange[3]]>
  [184] pushlist ................................ <[tRange[1], tRange[2], tRange[3]]>
  [185] pusharglistnoret 1 ...................... <[tRange[1], tRange[2], tRange[3]]>
  [187] extcall 13 .............................. return [tRange[1], tRange[2], tRange[3]]
  [189] ret
end

on getTextImage me, tNr
  [  0] pushcons 15 ............................. <"floortext">
  [  2] getparam 1 .............................. <tNr>
  [  4] joinstr ................................. <"floortext" & tNr>
  [  5] pusharglist 1 ........................... <"floortext" & tNr>
  [  7] extcall 313 ............................. <getMember("floortext" & tNr)>
  [ 10] getchainedprop 260 ...................... <getMember("floortext" & tNr).image>
  [ 13] pusharglist 1 ........................... <getMember("floortext" & tNr).image>
  [ 15] objcall 261 ............................. <getMember("floortext" & tNr).image.trimWhiteSpace()>
  [ 18] setlocal 0 .............................. tImg = getMember("floortext" & tNr).image.trimWhiteSpace()
  [ 20] pushint8 1 .............................. <1>
  [ 22] setlocal 1
  [ 24] getlocal 1
  [ 26] pushint8 7 .............................. <7>
  [ 28] lteq
  [ 29] jmpifz [121] ............................ repeat with i = 1 to 7
  [ 32] pushint8 1 .............................. <1>
  [ 34] setlocal 2
  [ 36] getlocal 2
  [ 38] getlocal 0 .............................. <tImg>
  [ 40] getobjprop 262 .......................... <tImg.width>
  [ 43] lteq
  [ 44] jmpifz [112] ............................ repeat with j = 1 to tImg.width
  [ 47] getlocal 0 .............................. <tImg>
  [ 49] getlocal 2 .............................. <j>
  [ 51] getlocal 1 .............................. <i>
  [ 53] pushsymb 27 ............................. <#integer>
  [ 55] pusharglist 4 ........................... <tImg, j, i, #integer>
  [ 57] objcall 263 ............................. <tImg.getPixel(j, i, #integer)>
  [ 60] setlocal 3 .............................. tColor = tImg.getPixel(j, i, #integer)
  [ 62] getlocal 3 .............................. <tColor>
  [ 64] pushzero ................................ <0>
  [ 65] eq ...................................... <tColor = 0>
  [ 66] jmpifz [ 88] ............................ if tColor = 0 then
  [ 69] getprop 229 ............................. <pTextImageList>
  [ 71] getlocal 1 .............................. <i>
  [ 73] pusharglist 2 ........................... <pTextImageList, i>
  [ 75] objcall 73 .............................. <pTextImageList[i]>
  [ 77] getlocal 2 .............................. <j>
  [ 79] pushint8 1 .............................. <1>
  [ 81] pusharglistnoret 3 ...................... <pTextImageList[i], j, 1>
  [ 83] objcall 199 ............................. pTextImageList[i][j] = 1
  [ 85] jmp [103] ............................... next repeat
  [ 88] getprop 229 ............................. <pTextImageList>
  [ 90] getlocal 1 .............................. <i>
  [ 92] pusharglist 2 ........................... <pTextImageList, i>
  [ 94] objcall 73 .............................. <pTextImageList[i]>
  [ 96] getlocal 2 .............................. <j>
  [ 98] pushzero ................................ <0>
  [ 99] pusharglistnoret 3 ...................... <pTextImageList[i], j, 0>
  [101] objcall 199 ............................. pTextImageList[i][j] = 0
  [103] pushint8 1
  [105] getlocal 2
  [107] add
  [108] setlocal 2
  [110] endrepeat [ 36]
  [112] pushint8 1
  [114] getlocal 1
  [116] add
  [117] setlocal 1
  [119] endrepeat [ 24]
  [121] pushint8 1 .............................. <1>
  [123] pusharglistnoret 1 ...................... <1>
  [125] extcall 13 .............................. return 1
  [127] ret
end

on randomColor me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 3 .............................. <3>
  [ 13] lteq
  [ 14] jmpifz [ 95] ............................ repeat with k = 1 to 3
  [ 17] getparam 6 .............................. <tRange>
  [ 19] getlocal 1 .............................. <k>
  [ 21] pushint8 3 .............................. <3>
  [ 23] add ..................................... <k + 3>
  [ 24] pusharglist 2 ........................... <tRange, k + 3>
  [ 26] objcall 73 .............................. <tRange[k + 3]>
  [ 28] setlocal 2 .............................. tMax = tRange[k + 3]
  [ 30] getparam 6 .............................. <tRange>
  [ 32] getlocal 1 .............................. <k>
  [ 34] pusharglist 2 ........................... <tRange, k>
  [ 36] objcall 73 .............................. <tRange[k]>
  [ 38] setlocal 3 .............................. tMin = tRange[k]
  [ 40] getlocal 2 .............................. <tMax>
  [ 42] getlocal 3 .............................. <tMin>
  [ 44] sub ..................................... <tMax - tMin>
  [ 45] setlocal 4 .............................. tdiff = tMax - tMin
  [ 47] getlocal 4 .............................. <tdiff>
  [ 49] pushint8 1 .............................. <1>
  [ 51] lt ...................................... <tdiff < 1>
  [ 52] jmpifz [ 68] ............................ if tdiff < 1 then
  [ 55] getlocal 0 .............................. <tCols>
  [ 57] getlocal 1 .............................. <k>
  [ 59] getlocal 3 .............................. <tMin>
  [ 61] pusharglistnoret 3 ...................... <tCols, k, tMin>
  [ 63] objcall 199 ............................. tCols[k] = tMin
  [ 65] jmp [ 86] ............................... next repeat
  [ 68] getlocal 0 .............................. <tCols>
  [ 70] getlocal 1 .............................. <k>
  [ 72] getlocal 3 .............................. <tMin>
  [ 74] getlocal 4 .............................. <tdiff>
  [ 76] pusharglist 1 ........................... <tdiff>
  [ 78] extcall 267 ............................. <random(tdiff)>
  [ 81] add ..................................... <tMin + random(tdiff)>
  [ 82] pusharglistnoret 3 ...................... <tCols, k, tMin + random(tdiff)>
  [ 84] objcall 199 ............................. tCols[k] = tMin + random(tdiff)
  [ 86] pushint8 1
  [ 88] getlocal 1
  [ 90] add
  [ 91] setlocal 1
  [ 93] endrepeat [  9]
  [ 95] getlocal 0 .............................. <tCols>
  [ 97] pusharglistnoret 1 ...................... <tCols>
  [ 99] extcall 13 .............................. return tCols
  [101] ret
end

on chessBoard me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] getprop 228 ............................. <pDiscoCounter>
  [  2] pushint8 2 .............................. <2>
  [  4] mod ..................................... <pDiscoCounter mod 2>
  [  5] setlocal 0 .............................. tPhase = pDiscoCounter mod 2
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] setlocal 1 .............................. tCols = []
  [ 12] pushint8 1 .............................. <1>
  [ 14] setlocal 2
  [ 16] getlocal 2
  [ 18] pushint8 3 .............................. <3>
  [ 20] lteq
  [ 21] jmpifz [ 96] ............................ repeat with k = 1 to 3
  [ 24] getparam 6 .............................. <tRange>
  [ 26] getlocal 2 .............................. <k>
  [ 28] pushint8 3 .............................. <3>
  [ 30] add ..................................... <k + 3>
  [ 31] pusharglist 2 ........................... <tRange, k + 3>
  [ 33] objcall 73 .............................. <tRange[k + 3]>
  [ 35] setlocal 3 .............................. tCol1 = tRange[k + 3]
  [ 37] getparam 6 .............................. <tRange>
  [ 39] getlocal 2 .............................. <k>
  [ 41] pusharglist 2 ........................... <tRange, k>
  [ 43] objcall 73 .............................. <tRange[k]>
  [ 45] setlocal 4 .............................. tCol2 = tRange[k]
  [ 47] getparam 1 .............................. <tX>
  [ 49] getparam 2 .............................. <tY>
  [ 51] add ..................................... <tX + tY>
  [ 52] getlocal 0 .............................. <tPhase>
  [ 54] add ..................................... <tX + tY + tPhase>
  [ 55] pushint8 2 .............................. <2>
  [ 57] mod ..................................... <(tX + tY + tPhase) mod 2>
  [ 58] pushint8 1 .............................. <1>
  [ 60] eq ...................................... <((tX + tY + tPhase) mod 2) = 1>
  [ 61] jmpifz [ 77] ............................ if ((tX + tY + tPhase) mod 2) = 1 then
  [ 64] getlocal 1 .............................. <tCols>
  [ 66] getlocal 2 .............................. <k>
  [ 68] getlocal 3 .............................. <tCol1>
  [ 70] pusharglistnoret 3 ...................... <tCols, k, tCol1>
  [ 72] objcall 199 ............................. tCols[k] = tCol1
  [ 74] jmp [ 87] ............................... next repeat
  [ 77] getlocal 1 .............................. <tCols>
  [ 79] getlocal 2 .............................. <k>
  [ 81] getlocal 4 .............................. <tCol2>
  [ 83] pusharglistnoret 3 ...................... <tCols, k, tCol2>
  [ 85] objcall 199 ............................. tCols[k] = tCol2
  [ 87] pushint8 1
  [ 89] getlocal 2
  [ 91] add
  [ 92] setlocal 2
  [ 94] endrepeat [ 16]
  [ 96] getlocal 1 .............................. <tCols>
  [ 98] pusharglistnoret 1 ...................... <tCols>
  [100] extcall 13 .............................. return tCols
  [102] ret
end

on vertRotateSin me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 3 .............................. <3>
  [ 13] lteq
  [ 14] jmpifz [163] ............................ repeat with k = 1 to 3
  [ 17] getlocal 0 .............................. <tCols>
  [ 19] getlocal 1 .............................. <k>
  [ 21] getparam 3 .............................. <tOrCols>
  [ 23] getlocal 1 .............................. <k>
  [ 25] pusharglist 2 ........................... <tOrCols, k>
  [ 27] objcall 73 .............................. <tOrCols[k]>
  [ 29] getparam 1 .............................. <tX>
  [ 31] getparam 2 .............................. <tY>
  [ 33] add ..................................... <tX + tY>
  [ 34] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 35] getparam 4 .............................. <tMultiplier>
  [ 37] getprop 227 ............................. <pSin>
  [ 39] pusharglist 1 ........................... <pSin>
  [ 41] extcall 275 ............................. <sin(pSin)>
  [ 44] mul ..................................... <tMultiplier * sin(pSin)>
  [ 45] getparam 5 .............................. <tSpeed>
  [ 47] mul ..................................... <tMultiplier * sin(pSin) * tSpeed>
  [ 48] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)>
  [ 49] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)>
  [ 51] objcall 199 ............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * sin(pSin) * tSpeed)
  [ 53] getparam 6 .............................. <tRange>
  [ 55] getlocal 1 .............................. <k>
  [ 57] pushint8 3 .............................. <3>
  [ 59] add ..................................... <k + 3>
  [ 60] pusharglist 2 ........................... <tRange, k + 3>
  [ 62] objcall 73 .............................. <tRange[k + 3]>
  [ 64] setlocal 2 .............................. tMax = tRange[k + 3]
  [ 66] getparam 6 .............................. <tRange>
  [ 68] getlocal 1 .............................. <k>
  [ 70] pusharglist 2 ........................... <tRange, k>
  [ 72] objcall 73 .............................. <tRange[k]>
  [ 74] setlocal 3 .............................. tMin = tRange[k]
  [ 76] getlocal 0 .............................. <tCols>
  [ 78] getlocal 1 .............................. <k>
  [ 80] pusharglist 2 ........................... <tCols, k>
  [ 82] objcall 73 .............................. <tCols[k]>
  [ 84] getlocal 2 .............................. <tMax>
  [ 86] gt ...................................... <tCols[k] > tMax>
  [ 87] jmpifz [115] ............................ if tCols[k] > tMax then
  [ 90] getlocal 0 .............................. <tCols>
  [ 92] getlocal 1 .............................. <k>
  [ 94] getlocal 2 .............................. <tMax>
  [ 96] getlocal 0 .............................. <tCols>
  [ 98] getlocal 1 .............................. <k>
  [100] pusharglist 2 ........................... <tCols, k>
  [102] objcall 73 .............................. <tCols[k]>
  [104] getlocal 2 .............................. <tMax>
  [106] getlocal 3 .............................. <tMin>
  [108] sub ..................................... <tMax - tMin>
  [109] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [110] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [111] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [113] objcall 199 ............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [115] getlocal 0 .............................. <tCols>
  [117] getlocal 1 .............................. <k>
  [119] pusharglist 2 ........................... <tCols, k>
  [121] objcall 73 .............................. <tCols[k]>
  [123] getlocal 3 .............................. <tMin>
  [125] lt ...................................... <tCols[k] < tMin>
  [126] jmpifz [154] ............................ if tCols[k] < tMin then
  [129] getlocal 0 .............................. <tCols>
  [131] getlocal 1 .............................. <k>
  [133] getlocal 3 .............................. <tMin>
  [135] getlocal 0 .............................. <tCols>
  [137] getlocal 1 .............................. <k>
  [139] pusharglist 2 ........................... <tCols, k>
  [141] objcall 73 .............................. <tCols[k]>
  [143] getlocal 2 .............................. <tMax>
  [145] getlocal 3 .............................. <tMin>
  [147] sub ..................................... <tMax - tMin>
  [148] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [149] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [150] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [152] objcall 199 ............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [154] pushint8 1
  [156] getlocal 1
  [158] add
  [159] setlocal 1
  [161] endrepeat [  9]
  [163] getlocal 0 .............................. <tCols>
  [165] pusharglistnoret 1 ...................... <tCols>
  [167] extcall 13 .............................. return tCols
  [169] ret
end

on vertRotate me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] pushint8 1 .............................. <1>
  [  7] setlocal 1
  [  9] getlocal 1
  [ 11] pushint8 3 .............................. <3>
  [ 13] lteq
  [ 14] jmpifz [158] ............................ repeat with k = 1 to 3
  [ 17] getlocal 0 .............................. <tCols>
  [ 19] getlocal 1 .............................. <k>
  [ 21] getparam 3 .............................. <tOrCols>
  [ 23] getlocal 1 .............................. <k>
  [ 25] pusharglist 2 ........................... <tOrCols, k>
  [ 27] objcall 73 .............................. <tOrCols[k]>
  [ 29] getparam 1 .............................. <tX>
  [ 31] getparam 2 .............................. <tY>
  [ 33] add ..................................... <tX + tY>
  [ 34] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 35] getparam 4 .............................. <tMultiplier>
  [ 37] getprop 227 ............................. <pSin>
  [ 39] mul ..................................... <tMultiplier * pSin>
  [ 40] getparam 5 .............................. <tSpeed>
  [ 42] mul ..................................... <tMultiplier * pSin * tSpeed>
  [ 43] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 44] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 46] objcall 199 ............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)
  [ 48] getparam 6 .............................. <tRange>
  [ 50] getlocal 1 .............................. <k>
  [ 52] pushint8 3 .............................. <3>
  [ 54] add ..................................... <k + 3>
  [ 55] pusharglist 2 ........................... <tRange, k + 3>
  [ 57] objcall 73 .............................. <tRange[k + 3]>
  [ 59] setlocal 2 .............................. tMax = tRange[k + 3]
  [ 61] getparam 6 .............................. <tRange>
  [ 63] getlocal 1 .............................. <k>
  [ 65] pusharglist 2 ........................... <tRange, k>
  [ 67] objcall 73 .............................. <tRange[k]>
  [ 69] setlocal 3 .............................. tMin = tRange[k]
  [ 71] getlocal 0 .............................. <tCols>
  [ 73] getlocal 1 .............................. <k>
  [ 75] pusharglist 2 ........................... <tCols, k>
  [ 77] objcall 73 .............................. <tCols[k]>
  [ 79] getlocal 2 .............................. <tMax>
  [ 81] gt ...................................... <tCols[k] > tMax>
  [ 82] jmpifz [110] ............................ if tCols[k] > tMax then
  [ 85] getlocal 0 .............................. <tCols>
  [ 87] getlocal 1 .............................. <k>
  [ 89] getlocal 2 .............................. <tMax>
  [ 91] getlocal 0 .............................. <tCols>
  [ 93] getlocal 1 .............................. <k>
  [ 95] pusharglist 2 ........................... <tCols, k>
  [ 97] objcall 73 .............................. <tCols[k]>
  [ 99] getlocal 2 .............................. <tMax>
  [101] getlocal 3 .............................. <tMin>
  [103] sub ..................................... <tMax - tMin>
  [104] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [105] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [106] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [108] objcall 199 ............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [110] getlocal 0 .............................. <tCols>
  [112] getlocal 1 .............................. <k>
  [114] pusharglist 2 ........................... <tCols, k>
  [116] objcall 73 .............................. <tCols[k]>
  [118] getlocal 3 .............................. <tMin>
  [120] lt ...................................... <tCols[k] < tMin>
  [121] jmpifz [149] ............................ if tCols[k] < tMin then
  [124] getlocal 0 .............................. <tCols>
  [126] getlocal 1 .............................. <k>
  [128] getlocal 3 .............................. <tMin>
  [130] getlocal 0 .............................. <tCols>
  [132] getlocal 1 .............................. <k>
  [134] pusharglist 2 ........................... <tCols, k>
  [136] objcall 73 .............................. <tCols[k]>
  [138] getlocal 2 .............................. <tMax>
  [140] getlocal 3 .............................. <tMin>
  [142] sub ..................................... <tMax - tMin>
  [143] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [144] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [145] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [147] objcall 199 ............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [149] pushint8 1
  [151] getlocal 1
  [153] add
  [154] setlocal 1
  [156] endrepeat [  9]
  [158] getlocal 0 .............................. <tCols>
  [160] pusharglistnoret 1 ...................... <tCols>
  [162] extcall 13 .............................. return tCols
  [164] ret
end

on centerRotateMovX me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] getprop 228 ............................. <pDiscoCounter>
  [  7] pushint8 14 ............................. <14>
  [  9] mod ..................................... <pDiscoCounter mod 14>
  [ 10] pushint8 7 .............................. <7>
  [ 12] sub ..................................... <(pDiscoCounter mod 14) - 7>
  [ 13] pusharglist 1 ........................... <(pDiscoCounter mod 14) - 7>
  [ 15] extcall 172 ............................. <abs((pDiscoCounter mod 14) - 7)>
  [ 17] setlocal 1 .............................. tRow = abs((pDiscoCounter mod 14) - 7)
  [ 19] getlocal 1 .............................. <tRow>
  [ 21] setlocal 2 .............................. tCenterX = tRow
  [ 23] pushint8 4 .............................. <4>
  [ 25] setlocal 3 .............................. tCenterY = 4
  [ 27] getparam 1 .............................. <tX>
  [ 29] getlocal 2 .............................. <tCenterX>
  [ 31] sub ..................................... <tX - tCenterX>
  [ 32] pusharglist 1 ........................... <tX - tCenterX>
  [ 34] extcall 172 ............................. <abs(tX - tCenterX)>
  [ 36] getparam 2 .............................. <tY>
  [ 38] getlocal 3 .............................. <tCenterY>
  [ 40] sub ..................................... <tY - tCenterY>
  [ 41] pusharglist 1 ........................... <tY - tCenterY>
  [ 43] extcall 172 ............................. <abs(tY - tCenterY)>
  [ 45] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [ 46] setlocal 4 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [ 48] getparam 4 .............................. <tMultiplier>
  [ 50] getlocal 4 .............................. <tCenterMultiplier>
  [ 52] mul ..................................... <tMultiplier * tCenterMultiplier>
  [ 53] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [ 55] pushint8 1 .............................. <1>
  [ 57] setlocal 5
  [ 59] getlocal 5
  [ 61] pushint8 3 .............................. <3>
  [ 63] lteq
  [ 64] jmpifz [208] ............................ repeat with k = 1 to 3
  [ 67] getlocal 0 .............................. <tCols>
  [ 69] getlocal 5 .............................. <k>
  [ 71] getparam 3 .............................. <tOrCols>
  [ 73] getlocal 5 .............................. <k>
  [ 75] pusharglist 2 ........................... <tOrCols, k>
  [ 77] objcall 73 .............................. <tOrCols[k]>
  [ 79] getparam 1 .............................. <tX>
  [ 81] getparam 2 .............................. <tY>
  [ 83] add ..................................... <tX + tY>
  [ 84] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 85] getparam 4 .............................. <tMultiplier>
  [ 87] getprop 227 ............................. <pSin>
  [ 89] mul ..................................... <tMultiplier * pSin>
  [ 90] getparam 5 .............................. <tSpeed>
  [ 92] mul ..................................... <tMultiplier * pSin * tSpeed>
  [ 93] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 94] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 96] objcall 199 ............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)
  [ 98] getparam 6 .............................. <tRange>
  [100] getlocal 5 .............................. <k>
  [102] pushint8 3 .............................. <3>
  [104] add ..................................... <k + 3>
  [105] pusharglist 2 ........................... <tRange, k + 3>
  [107] objcall 73 .............................. <tRange[k + 3]>
  [109] setlocal 6 .............................. tMax = tRange[k + 3]
  [111] getparam 6 .............................. <tRange>
  [113] getlocal 5 .............................. <k>
  [115] pusharglist 2 ........................... <tRange, k>
  [117] objcall 73 .............................. <tRange[k]>
  [119] setlocal 7 .............................. tMin = tRange[k]
  [121] getlocal 0 .............................. <tCols>
  [123] getlocal 5 .............................. <k>
  [125] pusharglist 2 ........................... <tCols, k>
  [127] objcall 73 .............................. <tCols[k]>
  [129] getlocal 6 .............................. <tMax>
  [131] gt ...................................... <tCols[k] > tMax>
  [132] jmpifz [160] ............................ if tCols[k] > tMax then
  [135] getlocal 0 .............................. <tCols>
  [137] getlocal 5 .............................. <k>
  [139] getlocal 6 .............................. <tMax>
  [141] getlocal 0 .............................. <tCols>
  [143] getlocal 5 .............................. <k>
  [145] pusharglist 2 ........................... <tCols, k>
  [147] objcall 73 .............................. <tCols[k]>
  [149] getlocal 6 .............................. <tMax>
  [151] getlocal 7 .............................. <tMin>
  [153] sub ..................................... <tMax - tMin>
  [154] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [155] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [156] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [158] objcall 199 ............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [160] getlocal 0 .............................. <tCols>
  [162] getlocal 5 .............................. <k>
  [164] pusharglist 2 ........................... <tCols, k>
  [166] objcall 73 .............................. <tCols[k]>
  [168] getlocal 7 .............................. <tMin>
  [170] lt ...................................... <tCols[k] < tMin>
  [171] jmpifz [199] ............................ if tCols[k] < tMin then
  [174] getlocal 0 .............................. <tCols>
  [176] getlocal 5 .............................. <k>
  [178] getlocal 7 .............................. <tMin>
  [180] getlocal 0 .............................. <tCols>
  [182] getlocal 5 .............................. <k>
  [184] pusharglist 2 ........................... <tCols, k>
  [186] objcall 73 .............................. <tCols[k]>
  [188] getlocal 6 .............................. <tMax>
  [190] getlocal 7 .............................. <tMin>
  [192] sub ..................................... <tMax - tMin>
  [193] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [194] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [195] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [197] objcall 199 ............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [199] pushint8 1
  [201] getlocal 5
  [203] add
  [204] setlocal 5
  [206] endrepeat [ 59]
  [208] getlocal 0 .............................. <tCols>
  [210] pusharglistnoret 1 ...................... <tCols>
  [212] extcall 13 .............................. return tCols
  [214] ret
end

on centerRotateMovXY me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] getprop 228 ............................. <pDiscoCounter>
  [  7] pushint8 24 ............................. <24>
  [  9] mod ..................................... <pDiscoCounter mod 24>
  [ 10] setlocal 1 .............................. tPlace = pDiscoCounter mod 24
  [ 12] getlocal 1 .............................. <tPlace>
  [ 14] pushint8 6 .............................. <6>
  [ 16] lt ...................................... <tPlace < 6>
  [ 17] jmpifz [ 34] ............................ if tPlace < 6 then / else
  [ 20] getlocal 1 .............................. <tPlace>
  [ 22] pushint8 1 .............................. <1>
  [ 24] add ..................................... <tPlace + 1>
  [ 25] setlocal 2 .............................. tCenterX = tPlace + 1
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 3 .............................. tCenterY = 1
  [ 31] jmp [100]
  [ 34] getlocal 1 .............................. <tPlace>
  [ 36] pushint8 13 ............................. <13>
  [ 38] lt ...................................... <tPlace < 13>
  [ 39] jmpifz [ 56] ............................ if tPlace < 13 then / else
  [ 42] pushint8 7 .............................. <7>
  [ 44] setlocal 2 .............................. tCenterX = 7
  [ 46] getlocal 1 .............................. <tPlace>
  [ 48] pushint8 5 .............................. <5>
  [ 50] sub ..................................... <tPlace - 5>
  [ 51] setlocal 3 .............................. tCenterY = tPlace - 5
  [ 53] jmp [100]
  [ 56] getlocal 1 .............................. <tPlace>
  [ 58] pushint8 18 ............................. <18>
  [ 60] lt ...................................... <tPlace < 18>
  [ 61] jmpifz [ 85] ............................ if tPlace < 18 then / else
  [ 64] getlocal 1 .............................. <tPlace>
  [ 66] pushint8 18 ............................. <18>
  [ 68] sub ..................................... <tPlace - 18>
  [ 69] pusharglist 1 ........................... <tPlace - 18>
  [ 71] extcall 172 ............................. <abs(tPlace - 18)>
  [ 73] pushint8 1 .............................. <1>
  [ 75] add ..................................... <abs(tPlace - 18) + 1>
  [ 76] setlocal 2 .............................. tCenterX = abs(tPlace - 18) + 1
  [ 78] pushint8 7 .............................. <7>
  [ 80] setlocal 3 .............................. tCenterY = 7
  [ 82] jmp [100]
  [ 85] pushint8 1 .............................. <1>
  [ 87] setlocal 2 .............................. tCenterX = 1
  [ 89] getlocal 1 .............................. <tPlace>
  [ 91] pushint8 25 ............................. <25>
  [ 93] sub ..................................... <tPlace - 25>
  [ 94] pusharglist 1 ........................... <tPlace - 25>
  [ 96] extcall 172 ............................. <abs(tPlace - 25)>
  [ 98] setlocal 3 .............................. tCenterY = abs(tPlace - 25)
  [100] getparam 1 .............................. <tX>
  [102] getlocal 2 .............................. <tCenterX>
  [104] sub ..................................... <tX - tCenterX>
  [105] pusharglist 1 ........................... <tX - tCenterX>
  [107] extcall 172 ............................. <abs(tX - tCenterX)>
  [109] getparam 2 .............................. <tY>
  [111] getlocal 3 .............................. <tCenterY>
  [113] sub ..................................... <tY - tCenterY>
  [114] pusharglist 1 ........................... <tY - tCenterY>
  [116] extcall 172 ............................. <abs(tY - tCenterY)>
  [118] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [119] setlocal 4 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [121] getparam 4 .............................. <tMultiplier>
  [123] getlocal 4 .............................. <tCenterMultiplier>
  [125] mul ..................................... <tMultiplier * tCenterMultiplier>
  [126] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [128] pushint8 1 .............................. <1>
  [130] setlocal 5
  [132] getlocal 5
  [134] pushint8 3 .............................. <3>
  [136] lteq
  [137] jmpifz [287] ............................ repeat with k = 1 to 3
  [140] getlocal 0 .............................. <tCols>
  [142] getlocal 5 .............................. <k>
  [144] getparam 3 .............................. <tOrCols>
  [146] getlocal 5 .............................. <k>
  [148] pusharglist 2 ........................... <tOrCols, k>
  [150] objcall 73 .............................. <tOrCols[k]>
  [152] getparam 1 .............................. <tX>
  [154] getparam 2 .............................. <tY>
  [156] add ..................................... <tX + tY>
  [157] add ..................................... <tOrCols[k] + (tX + tY)>
  [158] getparam 4 .............................. <tMultiplier>
  [160] getprop 227 ............................. <pSin>
  [162] mul ..................................... <tMultiplier * pSin>
  [163] getparam 5 .............................. <tSpeed>
  [165] mul ..................................... <tMultiplier * pSin * tSpeed>
  [166] pushfloat32 7.0 ......................... <7.0>
  [171] div ..................................... <tMultiplier * pSin * tSpeed / 7.0>
  [172] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)>
  [173] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)>
  [175] objcall 199 ............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed / 7.0)
  [177] getparam 6 .............................. <tRange>
  [179] getlocal 5 .............................. <k>
  [181] pushint8 3 .............................. <3>
  [183] add ..................................... <k + 3>
  [184] pusharglist 2 ........................... <tRange, k + 3>
  [186] objcall 73 .............................. <tRange[k + 3]>
  [188] setlocal 6 .............................. tMax = tRange[k + 3]
  [190] getparam 6 .............................. <tRange>
  [192] getlocal 5 .............................. <k>
  [194] pusharglist 2 ........................... <tRange, k>
  [196] objcall 73 .............................. <tRange[k]>
  [198] setlocal 7 .............................. tMin = tRange[k]
  [200] getlocal 0 .............................. <tCols>
  [202] getlocal 5 .............................. <k>
  [204] pusharglist 2 ........................... <tCols, k>
  [206] objcall 73 .............................. <tCols[k]>
  [208] getlocal 6 .............................. <tMax>
  [210] gt ...................................... <tCols[k] > tMax>
  [211] jmpifz [239] ............................ if tCols[k] > tMax then
  [214] getlocal 0 .............................. <tCols>
  [216] getlocal 5 .............................. <k>
  [218] getlocal 6 .............................. <tMax>
  [220] getlocal 0 .............................. <tCols>
  [222] getlocal 5 .............................. <k>
  [224] pusharglist 2 ........................... <tCols, k>
  [226] objcall 73 .............................. <tCols[k]>
  [228] getlocal 6 .............................. <tMax>
  [230] getlocal 7 .............................. <tMin>
  [232] sub ..................................... <tMax - tMin>
  [233] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [234] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [235] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [237] objcall 199 ............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [239] getlocal 0 .............................. <tCols>
  [241] getlocal 5 .............................. <k>
  [243] pusharglist 2 ........................... <tCols, k>
  [245] objcall 73 .............................. <tCols[k]>
  [247] getlocal 7 .............................. <tMin>
  [249] lt ...................................... <tCols[k] < tMin>
  [250] jmpifz [278] ............................ if tCols[k] < tMin then
  [253] getlocal 0 .............................. <tCols>
  [255] getlocal 5 .............................. <k>
  [257] getlocal 7 .............................. <tMin>
  [259] getlocal 0 .............................. <tCols>
  [261] getlocal 5 .............................. <k>
  [263] pusharglist 2 ........................... <tCols, k>
  [265] objcall 73 .............................. <tCols[k]>
  [267] getlocal 6 .............................. <tMax>
  [269] getlocal 7 .............................. <tMin>
  [271] sub ..................................... <tMax - tMin>
  [272] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [273] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [274] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [276] objcall 199 ............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [278] pushint8 1
  [280] getlocal 5
  [282] add
  [283] setlocal 5
  [285] endrepeat [132]
  [287] getlocal 0 .............................. <tCols>
  [289] pusharglistnoret 1 ...................... <tCols>
  [291] extcall 13 .............................. return tCols
  [293] ret
end

on arrow me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tCols = []
  [  5] getprop 228 ............................. <pDiscoCounter>
  [  7] pushint8 14 ............................. <14>
  [  9] mod ..................................... <pDiscoCounter mod 14>
  [ 10] pushint8 7 .............................. <7>
  [ 12] sub ..................................... <(pDiscoCounter mod 14) - 7>
  [ 13] pusharglist 1 ........................... <(pDiscoCounter mod 14) - 7>
  [ 15] extcall 172 ............................. <abs((pDiscoCounter mod 14) - 7)>
  [ 17] setlocal 1 .............................. tRow = abs((pDiscoCounter mod 14) - 7)
  [ 19] getlocal 1 .............................. <tRow>
  [ 21] setlocal 2 .............................. tCenterX = tRow
  [ 23] pushzero ................................ <0>
  [ 24] setlocal 3 .............................. tCenterY = 0
  [ 26] getparam 1 .............................. <tX>
  [ 28] getlocal 2 .............................. <tCenterX>
  [ 30] sub ..................................... <tX - tCenterX>
  [ 31] pusharglist 1 ........................... <tX - tCenterX>
  [ 33] extcall 172 ............................. <abs(tX - tCenterX)>
  [ 35] getparam 2 .............................. <tY>
  [ 37] getlocal 3 .............................. <tCenterY>
  [ 39] sub ..................................... <tY - tCenterY>
  [ 40] pusharglist 1 ........................... <tY - tCenterY>
  [ 42] extcall 172 ............................. <abs(tY - tCenterY)>
  [ 44] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [ 45] setlocal 4 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [ 47] getparam 4 .............................. <tMultiplier>
  [ 49] getlocal 4 .............................. <tCenterMultiplier>
  [ 51] mul ..................................... <tMultiplier * tCenterMultiplier>
  [ 52] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [ 54] pushint8 1 .............................. <1>
  [ 56] setlocal 5
  [ 58] getlocal 5
  [ 60] pushint8 3 .............................. <3>
  [ 62] lteq
  [ 63] jmpifz [207] ............................ repeat with k = 1 to 3
  [ 66] getlocal 0 .............................. <tCols>
  [ 68] getlocal 5 .............................. <k>
  [ 70] getparam 3 .............................. <tOrCols>
  [ 72] getlocal 5 .............................. <k>
  [ 74] pusharglist 2 ........................... <tOrCols, k>
  [ 76] objcall 73 .............................. <tOrCols[k]>
  [ 78] getparam 1 .............................. <tX>
  [ 80] getparam 2 .............................. <tY>
  [ 82] add ..................................... <tX + tY>
  [ 83] add ..................................... <tOrCols[k] + (tX + tY)>
  [ 84] getparam 4 .............................. <tMultiplier>
  [ 86] getprop 227 ............................. <pSin>
  [ 88] mul ..................................... <tMultiplier * pSin>
  [ 89] getparam 5 .............................. <tSpeed>
  [ 91] mul ..................................... <tMultiplier * pSin * tSpeed>
  [ 92] add ..................................... <tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 93] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)>
  [ 95] objcall 199 ............................. tCols[k] = tOrCols[k] + (tX + tY) + (tMultiplier * pSin * tSpeed)
  [ 97] getparam 6 .............................. <tRange>
  [ 99] getlocal 5 .............................. <k>
  [101] pushint8 3 .............................. <3>
  [103] add ..................................... <k + 3>
  [104] pusharglist 2 ........................... <tRange, k + 3>
  [106] objcall 73 .............................. <tRange[k + 3]>
  [108] setlocal 6 .............................. tMax = tRange[k + 3]
  [110] getparam 6 .............................. <tRange>
  [112] getlocal 5 .............................. <k>
  [114] pusharglist 2 ........................... <tRange, k>
  [116] objcall 73 .............................. <tRange[k]>
  [118] setlocal 7 .............................. tMin = tRange[k]
  [120] getlocal 0 .............................. <tCols>
  [122] getlocal 5 .............................. <k>
  [124] pusharglist 2 ........................... <tCols, k>
  [126] objcall 73 .............................. <tCols[k]>
  [128] getlocal 6 .............................. <tMax>
  [130] gt ...................................... <tCols[k] > tMax>
  [131] jmpifz [159] ............................ if tCols[k] > tMax then
  [134] getlocal 0 .............................. <tCols>
  [136] getlocal 5 .............................. <k>
  [138] getlocal 6 .............................. <tMax>
  [140] getlocal 0 .............................. <tCols>
  [142] getlocal 5 .............................. <k>
  [144] pusharglist 2 ........................... <tCols, k>
  [146] objcall 73 .............................. <tCols[k]>
  [148] getlocal 6 .............................. <tMax>
  [150] getlocal 7 .............................. <tMin>
  [152] sub ..................................... <tMax - tMin>
  [153] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [154] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [155] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [157] objcall 199 ............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [159] getlocal 0 .............................. <tCols>
  [161] getlocal 5 .............................. <k>
  [163] pusharglist 2 ........................... <tCols, k>
  [165] objcall 73 .............................. <tCols[k]>
  [167] getlocal 7 .............................. <tMin>
  [169] lt ...................................... <tCols[k] < tMin>
  [170] jmpifz [198] ............................ if tCols[k] < tMin then
  [173] getlocal 0 .............................. <tCols>
  [175] getlocal 5 .............................. <k>
  [177] getlocal 7 .............................. <tMin>
  [179] getlocal 0 .............................. <tCols>
  [181] getlocal 5 .............................. <k>
  [183] pusharglist 2 ........................... <tCols, k>
  [185] objcall 73 .............................. <tCols[k]>
  [187] getlocal 6 .............................. <tMax>
  [189] getlocal 7 .............................. <tMin>
  [191] sub ..................................... <tMax - tMin>
  [192] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [193] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [194] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [196] objcall 199 ............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [198] pushint8 1
  [200] getlocal 5
  [202] add
  [203] setlocal 5
  [205] endrepeat [ 58]
  [207] getlocal 0 .............................. <tCols>
  [209] pusharglistnoret 1 ...................... <tCols>
  [211] extcall 13 .............................. return tCols
  [213] ret
end

on centerRotate me, tX, tY, tOrCols, tMultiplier, tSpeed, tRange
  [  0] pushint8 4 .............................. <4>
  [  2] setlocal 0 .............................. tCenterX = 4
  [  4] pushint8 4 .............................. <4>
  [  6] setlocal 1 .............................. tCenterY = 4
  [  8] getparam 1 .............................. <tX>
  [ 10] getlocal 0 .............................. <tCenterX>
  [ 12] sub ..................................... <tX - tCenterX>
  [ 13] pusharglist 1 ........................... <tX - tCenterX>
  [ 15] extcall 172 ............................. <abs(tX - tCenterX)>
  [ 17] getparam 2 .............................. <tY>
  [ 19] getlocal 1 .............................. <tCenterY>
  [ 21] sub ..................................... <tY - tCenterY>
  [ 22] pusharglist 1 ........................... <tY - tCenterY>
  [ 24] extcall 172 ............................. <abs(tY - tCenterY)>
  [ 26] add ..................................... <abs(tX - tCenterX) + abs(tY - tCenterY)>
  [ 27] setlocal 2 .............................. tCenterMultiplier = abs(tX - tCenterX) + abs(tY - tCenterY)
  [ 29] getparam 4 .............................. <tMultiplier>
  [ 31] getlocal 2 .............................. <tCenterMultiplier>
  [ 33] mul ..................................... <tMultiplier * tCenterMultiplier>
  [ 34] setparam 4 .............................. tMultiplier = tMultiplier * tCenterMultiplier
  [ 36] pusharglist 0 ........................... <[]>
  [ 38] pushlist ................................ <[]>
  [ 39] setlocal 3 .............................. tCols = []
  [ 41] pushint8 1 .............................. <1>
  [ 43] setlocal 4
  [ 45] getlocal 4
  [ 47] pushint8 3 .............................. <3>
  [ 49] lteq
  [ 50] jmpifz [194] ............................ repeat with k = 1 to 3
  [ 53] getlocal 3 .............................. <tCols>
  [ 55] getlocal 4 .............................. <k>
  [ 57] getparam 3 .............................. <tOrCols>
  [ 59] getlocal 4 .............................. <k>
  [ 61] pusharglist 2 ........................... <tOrCols, k>
  [ 63] objcall 73 .............................. <tOrCols[k]>
  [ 65] getparam 1 .............................. <tX>
  [ 67] getparam 2 .............................. <tY>
  [ 69] add ..................................... <tX + tY>
  [ 70] getparam 4 .............................. <tMultiplier>
  [ 72] mul ..................................... <(tX + tY) * tMultiplier>
  [ 73] add ..................................... <tOrCols[k] + ((tX + tY) * tMultiplier)>
  [ 74] getprop 227 ............................. <pSin>
  [ 76] getparam 5 .............................. <tSpeed>
  [ 78] mul ..................................... <pSin * tSpeed>
  [ 79] add ..................................... <tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)>
  [ 80] pusharglistnoret 3 ...................... <tCols, k, tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)>
  [ 82] objcall 199 ............................. tCols[k] = tOrCols[k] + ((tX + tY) * tMultiplier) + (pSin * tSpeed)
  [ 84] getparam 6 .............................. <tRange>
  [ 86] getlocal 4 .............................. <k>
  [ 88] pushint8 3 .............................. <3>
  [ 90] add ..................................... <k + 3>
  [ 91] pusharglist 2 ........................... <tRange, k + 3>
  [ 93] objcall 73 .............................. <tRange[k + 3]>
  [ 95] setlocal 5 .............................. tMax = tRange[k + 3]
  [ 97] getparam 6 .............................. <tRange>
  [ 99] getlocal 4 .............................. <k>
  [101] pusharglist 2 ........................... <tRange, k>
  [103] objcall 73 .............................. <tRange[k]>
  [105] setlocal 6 .............................. tMin = tRange[k]
  [107] getlocal 3 .............................. <tCols>
  [109] getlocal 4 .............................. <k>
  [111] pusharglist 2 ........................... <tCols, k>
  [113] objcall 73 .............................. <tCols[k]>
  [115] getlocal 5 .............................. <tMax>
  [117] gt ...................................... <tCols[k] > tMax>
  [118] jmpifz [146] ............................ if tCols[k] > tMax then
  [121] getlocal 3 .............................. <tCols>
  [123] getlocal 4 .............................. <k>
  [125] getlocal 5 .............................. <tMax>
  [127] getlocal 3 .............................. <tCols>
  [129] getlocal 4 .............................. <k>
  [131] pusharglist 2 ........................... <tCols, k>
  [133] objcall 73 .............................. <tCols[k]>
  [135] getlocal 5 .............................. <tMax>
  [137] getlocal 6 .............................. <tMin>
  [139] sub ..................................... <tMax - tMin>
  [140] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [141] sub ..................................... <tMax - (tCols[k] mod (tMax - tMin))>
  [142] pusharglistnoret 3 ...................... <tCols, k, tMax - (tCols[k] mod (tMax - tMin))>
  [144] objcall 199 ............................. tCols[k] = tMax - (tCols[k] mod (tMax - tMin))
  [146] getlocal 3 .............................. <tCols>
  [148] getlocal 4 .............................. <k>
  [150] pusharglist 2 ........................... <tCols, k>
  [152] objcall 73 .............................. <tCols[k]>
  [154] getlocal 6 .............................. <tMin>
  [156] lt ...................................... <tCols[k] < tMin>
  [157] jmpifz [185] ............................ if tCols[k] < tMin then
  [160] getlocal 3 .............................. <tCols>
  [162] getlocal 4 .............................. <k>
  [164] getlocal 6 .............................. <tMin>
  [166] getlocal 3 .............................. <tCols>
  [168] getlocal 4 .............................. <k>
  [170] pusharglist 2 ........................... <tCols, k>
  [172] objcall 73 .............................. <tCols[k]>
  [174] getlocal 5 .............................. <tMax>
  [176] getlocal 6 .............................. <tMin>
  [178] sub ..................................... <tMax - tMin>
  [179] mod ..................................... <tCols[k] mod (tMax - tMin)>
  [180] sub ..................................... <tMin - (tCols[k] mod (tMax - tMin))>
  [181] pusharglistnoret 3 ...................... <tCols, k, tMin - (tCols[k] mod (tMax - tMin))>
  [183] objcall 199 ............................. tCols[k] = tMin - (tCols[k] mod (tMax - tMin))
  [185] pushint8 1
  [187] getlocal 4
  [189] add
  [190] setlocal 4
  [192] endrepeat [ 45]
  [194] getlocal 3 .............................. <tCols>
  [196] pusharglistnoret 1 ...................... <tCols>
  [198] extcall 13 .............................. return tCols
  [200] ret
end

on animDiscoBall me
  [  0] getprop 230 ............................. <pDbFrameCount>
  [  2] pushint8 1 .............................. <1>
  [  4] add ..................................... <pDbFrameCount + 1>
  [  5] setprop 230 ............................. pDbFrameCount = pDbFrameCount + 1
  [  7] getprop 230 ............................. <pDbFrameCount>
  [  9] pushint8 2 .............................. <2>
  [ 11] mod ..................................... <pDbFrameCount mod 2>
  [ 12] pushzero ................................ <0>
  [ 13] nteq .................................... <(pDbFrameCount mod 2) <> 0>
  [ 14] jmpifz [ 21] ............................ if (pDbFrameCount mod 2) <> 0 then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 13 .............................. return 
  [ 21] getprop 233 ............................. <pDbDestRect>
  [ 23] getobjprop 235 .......................... <pDbDestRect.ilk>
  [ 25] pushsymb 234 ............................ <#rect>
  [ 27] eq ...................................... <pDbDestRect.ilk = #rect>
  [ 28] jmpifz [173] ............................ if pDbDestRect.ilk = #rect then
  [ 31] getprop 231 ............................. <pDbAnimFrame>
  [ 33] pushint8 1 .............................. <1>
  [ 35] add ..................................... <pDbAnimFrame + 1>
  [ 36] setprop 231 ............................. pDbAnimFrame = pDbAnimFrame + 1
  [ 38] getprop 231 ............................. <pDbAnimFrame>
  [ 40] pushint8 9 .............................. <9>
  [ 42] gt ...................................... <pDbAnimFrame > 9>
  [ 43] jmpifz [154] ............................ if pDbAnimFrame > 9 then
  [ 46] pushint8 1 .............................. <1>
  [ 48] setprop 231 ............................. pDbAnimFrame = 1
  [ 50] pushint16 1000 .......................... <1000>
  [ 53] pusharglist 1 ........................... <1000>
  [ 55] extcall 267 ............................. <random(1000)>
  [ 58] setlocal 0 .............................. tRandomSin = random(1000)
  [ 60] pushint8 100 ............................ <100>
  [ 62] pusharglist 1 ........................... <100>
  [ 64] extcall 267 ............................. <random(100)>
  [ 67] setlocal 1 .............................. tRandomDist = random(100)
  [ 69] getlocal 0 .............................. <tRandomSin>
  [ 71] pusharglist 1 ........................... <tRandomSin>
  [ 73] extcall 275 ............................. <sin(tRandomSin)>
  [ 76] getprop 233 ............................. <pDbDestRect>
  [ 78] getobjprop 262 .......................... <pDbDestRect.width>
  [ 81] mul ..................................... <sin(tRandomSin) * pDbDestRect.width>
  [ 82] pushint16 200 ........................... <200>
  [ 85] div ..................................... <sin(tRandomSin) * pDbDestRect.width / 200>
  [ 86] getlocal 1 .............................. <tRandomDist>
  [ 88] mul ..................................... <sin(tRandomSin) * pDbDestRect.width / 200 * tRandomDist>
  [ 89] getprop 233 ............................. <pDbDestRect>
  [ 91] getobjprop 281 .......................... <pDbDestRect.left>
  [ 94] add ..................................... <(sin(tRandomSin) * pDbDestRect.width / 200 * tRandomDist) + pDbDestRect.left>
  [ 95] getprop 233 ............................. <pDbDestRect>
  [ 97] getobjprop 262 .......................... <pDbDestRect.width>
  [100] pushint8 2 .............................. <2>
  [102] div ..................................... <pDbDestRect.width / 2>
  [103] add ..................................... <(sin(tRandomSin) * pDbDestRect.width / 200 * tRandomDist) + pDbDestRect.left + (pDbDestRect.width / 2)>
  [104] setlocal 2 .............................. tX = (sin(tRandomSin) * pDbDestRect.width / 200 * tRandomDist) + pDbDestRect.left + (pDbDestRect.width / 2)
  [106] getlocal 0 .............................. <tRandomSin>
  [108] pusharglist 1 ........................... <tRandomSin>
  [110] extcall 282 ............................. <cos(tRandomSin)>
  [113] getprop 233 ............................. <pDbDestRect>
  [115] getobjprop 283 .......................... <pDbDestRect.height>
  [118] mul ..................................... <cos(tRandomSin) * pDbDestRect.height>
  [119] pushint16 200 ........................... <200>
  [122] div ..................................... <cos(tRandomSin) * pDbDestRect.height / 200>
  [123] getlocal 1 .............................. <tRandomDist>
  [125] mul ..................................... <cos(tRandomSin) * pDbDestRect.height / 200 * tRandomDist>
  [126] getprop 233 ............................. <pDbDestRect>
  [128] getobjprop 138 .......................... <pDbDestRect.top>
  [130] add ..................................... <(cos(tRandomSin) * pDbDestRect.height / 200 * tRandomDist) + pDbDestRect.top>
  [131] getprop 233 ............................. <pDbDestRect>
  [133] getobjprop 283 .......................... <pDbDestRect.height>
  [136] pushint8 2 .............................. <2>
  [138] div ..................................... <pDbDestRect.height / 2>
  [139] add ..................................... <(cos(tRandomSin) * pDbDestRect.height / 200 * tRandomDist) + pDbDestRect.top + (pDbDestRect.height / 2)>
  [140] setlocal 3 .............................. tY = (cos(tRandomSin) * pDbDestRect.height / 200 * tRandomDist) + pDbDestRect.top + (pDbDestRect.height / 2)
  [142] getprop 232 ............................. <pDbStarSpr>
  [144] getlocal 2 .............................. <tX>
  [146] getlocal 3 .............................. <tY>
  [148] pusharglist 2 ........................... <tX, tY>
  [150] extcall 54 .............................. <point(tX, tY)>
  [152] setobjprop 59 ........................... pDbStarSpr.loc = point(tX, tY)
  [154] getprop 232 ............................. <pDbStarSpr>
  [156] getchainedprop 23 ....................... <pDbStarSpr.sprite>
  [158] pushcons 14 ............................. <"mammothblink">
  [160] getprop 231 ............................. <pDbAnimFrame>
  [162] joinstr ................................. <"mammothblink" & pDbAnimFrame>
  [163] pusharglist 1 ........................... <"mammothblink" & pDbAnimFrame>
  [165] extcall 2 ............................... <getmemnum("mammothblink" & pDbAnimFrame)>
  [167] pusharglist 1 ........................... <getmemnum("mammothblink" & pDbAnimFrame)>
  [169] extcall 1 ............................... <member(getmemnum("mammothblink" & pDbAnimFrame))>
  [171] setobjprop 1 ............................ pDbStarSpr.sprite.member = member(getmemnum("mammothblink" & pDbAnimFrame))
  [173] ret
end

on getSpriteList me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 221 ............................. pSpriteList = []
  [  5] pushsymb 287 ............................ <#room>
  [  8] pusharglist 1 ........................... <#room>
  [ 10] extcall 286 ............................. <getThread(#room)>
  [ 13] pusharglist 1 ........................... <getThread(#room)>
  [ 15] objcall 288 ............................. <getThread(#room).getInterface()>
  [ 18] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 20] objcall 289 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 23] setlocal 0 .............................. tObj = getThread(#room).getInterface().getRoomVisualizer()
  [ 25] getlocal 0 .............................. <tObj>
  [ 27] pushzero ................................ <0>
  [ 28] eq ...................................... <tObj = 0>
  [ 29] jmpifz [ 37] ............................ if tObj = 0 then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 13 .............................. return 0
  [ 37] pushint8 1 .............................. <1>
  [ 39] setlocal 1
  [ 41] getlocal 1
  [ 43] pushint8 49 ............................. <49>
  [ 45] lteq
  [ 46] jmpifz [ 98] ............................ repeat with i = 1 to 49
  [ 49] getlocal 0 .............................. <tObj>
  [ 51] pushcons 16 ............................. <"discotile">
  [ 53] getlocal 1 .............................. <i>
  [ 55] joinstr ................................. <"discotile" & i>
  [ 56] pusharglist 2 ........................... <tObj, "discotile" & i>
  [ 58] objcall 290 ............................. <tObj.getSprById("discotile" & i)>
  [ 61] setlocal 2 .............................. tSp = tObj.getSprById("discotile" & i)
  [ 63] getlocal 2 .............................. <tSp>
  [ 65] pushint8 1 .............................. <1>
  [ 67] lt ...................................... <tSp < 1>
  [ 68] jmpifz [ 81] ............................ if tSp < 1 then
  [ 71] pusharglist 0 ........................... <[]>
  [ 73] pushlist ................................ <[]>
  [ 74] setprop 221 ............................. pSpriteList = []
  [ 76] pushzero ................................ <0>
  [ 77] pusharglistnoret 1 ...................... <0>
  [ 79] extcall 13 .............................. return 0
  [ 81] getprop 221 ............................. <pSpriteList>
  [ 83] getlocal 2 .............................. <tSp>
  [ 85] pusharglistnoret 2 ...................... <pSpriteList, tSp>
  [ 87] objcall 157 ............................. pSpriteList.add(tSp)
  [ 89] pushint8 1
  [ 91] getlocal 1
  [ 93] add
  [ 94] setlocal 1
  [ 96] endrepeat [ 41]
  [ 98] getlocal 0 .............................. <tObj>
  [100] pushcons 17 ............................. <"disco_mirrorball">
  [102] pusharglist 2 ........................... <tObj, "disco_mirrorball">
  [104] objcall 290 ............................. <tObj.getSprById("disco_mirrorball")>
  [107] setlocal 2 .............................. tSp = tObj.getSprById("disco_mirrorball")
  [109] getlocal 2 .............................. <tSp>
  [111] pushint8 1 .............................. <1>
  [113] lt ...................................... <tSp < 1>
  [114] jmpifz [122] ............................ if tSp < 1 then
  [117] pushzero ................................ <0>
  [118] pusharglistnoret 1 ...................... <0>
  [120] extcall 13 .............................. return 0
  [122] getlocal 2 .............................. <tSp>
  [124] pushsymb 234 ............................ <#rect>
  [126] pushint8 1 .............................. <1>
  [128] pusharglist 3 ........................... <tSp, #rect, 1>
  [130] objcall 55 .............................. <tSp.rect[1]>
  [132] getlocal 2 .............................. <tSp>
  [134] pushsymb 234 ............................ <#rect>
  [136] pushint8 4 .............................. <4>
  [138] pusharglist 3 ........................... <tSp, #rect, 4>
  [140] objcall 55 .............................. <tSp.rect[4]>
  [142] getlocal 2 .............................. <tSp>
  [144] getobjprop 262 .......................... <tSp.width>
  [147] sub ..................................... <tSp.rect[4] - tSp.width>
  [148] getlocal 2 .............................. <tSp>
  [150] pushsymb 234 ............................ <#rect>
  [152] pushint8 3 .............................. <3>
  [154] pusharglist 3 ........................... <tSp, #rect, 3>
  [156] objcall 55 .............................. <tSp.rect[3]>
  [158] getlocal 2 .............................. <tSp>
  [160] pushsymb 234 ............................ <#rect>
  [162] pushint8 4 .............................. <4>
  [164] pusharglist 3 ........................... <tSp, #rect, 4>
  [166] objcall 55 .............................. <tSp.rect[4]>
  [168] pusharglist 4 ........................... <tSp.rect[1], tSp.rect[4] - tSp.width, tSp.rect[3], tSp.rect[4]>
  [170] extcall 234 ............................. <rect(tSp.rect[1], tSp.rect[4] - tSp.width, tSp.rect[3], tSp.rect[4])>
  [172] setprop 233 ............................. pDbDestRect = rect(tSp.rect[1], tSp.rect[4] - tSp.width, tSp.rect[3], tSp.rect[4])
  [174] getprop 232 ............................. <pDbStarSpr>
  [176] getlocal 2 .............................. <tSp>
  [178] getobjprop 26 ........................... <tSp.locZ>
  [180] pushint8 1 .............................. <1>
  [182] add ..................................... <tSp.locZ + 1>
  [183] setobjprop 26 ........................... pDbStarSpr.locZ = tSp.locZ + 1
  [185] pushint8 1 .............................. <1>
  [187] pusharglistnoret 1 ...................... <1>
  [189] extcall 13 .............................. return 1
  [191] ret
end
