property pWallPatterns, pWallPattern, pWallModel, pWallThumbSpr, pWallPreviewIdList, pFloorPatterns, pFloorPattern, pFloorModel, pFloorThumbSpr, pFloorPreviewIdList, pWallProps, pFloorProps

on construct me
  [  0] pushcons 0 .............................. <"catalog_wallpattern_patterns">
  [  2] pushzero ................................ <0>
  [  3] getfield ................................ <field("catalog_wallpattern_patterns")>
  [  4] setprop 449 ............................. pWallPatterns = field("catalog_wallpattern_patterns")
  [  7] pushzero ................................ <0>
  [  8] setprop 450 ............................. pWallPattern = 0
  [ 11] pushzero ................................ <0>
  [ 12] setprop 451 ............................. pWallModel = 0
  [ 15] pushcons 1 .............................. <"catalog_floorpattern_patterns">
  [ 17] pushzero ................................ <0>
  [ 18] getfield ................................ <field("catalog_floorpattern_patterns")>
  [ 19] setprop 452 ............................. pFloorPatterns = field("catalog_floorpattern_patterns")
  [ 22] pushzero ................................ <0>
  [ 23] setprop 453 ............................. pFloorPattern = 0
  [ 26] pushzero ................................ <0>
  [ 27] setprop 454 ............................. pFloorModel = 0
  [ 30] pusharglist 0 ........................... <[:]>
  [ 32] pushproplist ............................ <[:]>
  [ 33] setprop 455 ............................. pWallProps = [:]
  [ 36] pusharglist 0 ........................... <[:]>
  [ 38] pushproplist ............................ <[:]>
  [ 39] setprop 456 ............................. pFloorProps = [:]
  [ 42] pusharglist 0 ........................... <[]>
  [ 44] pushlist ................................ <[]>
  [ 45] setprop 457 ............................. pFloorPreviewIdList = []
  [ 48] getprop 457 ............................. <pFloorPreviewIdList>
  [ 51] pushcons 2 .............................. <"catalog_thumb_floor_pattern">
  [ 53] pusharglistnoret 2 ...................... <pFloorPreviewIdList, "catalog_thumb_floor_pattern">
  [ 55] objcall 340 ............................. pFloorPreviewIdList.add("catalog_thumb_floor_pattern")
  [ 58] getprop 457 ............................. <pFloorPreviewIdList>
  [ 61] pushcons 3 .............................. <"catalog_floor_preview_example">
  [ 63] pusharglistnoret 2 ...................... <pFloorPreviewIdList, "catalog_floor_preview_example">
  [ 65] objcall 340 ............................. pFloorPreviewIdList.add("catalog_floor_preview_example")
  [ 68] pusharglist 0 ........................... <[]>
  [ 70] pushlist ................................ <[]>
  [ 71] setprop 458 ............................. pWallPreviewIdList = []
  [ 74] getprop 458 ............................. <pWallPreviewIdList>
  [ 77] pushcons 4 .............................. <"catalog_thumb_wall_pattern">
  [ 79] pusharglistnoret 2 ...................... <pWallPreviewIdList, "catalog_thumb_wall_pattern">
  [ 81] objcall 340 ............................. pWallPreviewIdList.add("catalog_thumb_wall_pattern")
  [ 84] getprop 458 ............................. <pWallPreviewIdList>
  [ 87] pushcons 5 .............................. <"catalog_wall_preview_a_left">
  [ 89] pusharglistnoret 2 ...................... <pWallPreviewIdList, "catalog_wall_preview_a_left">
  [ 91] objcall 340 ............................. pWallPreviewIdList.add("catalog_wall_preview_a_left")
  [ 94] getprop 458 ............................. <pWallPreviewIdList>
  [ 97] pushcons 6 .............................. <"catalog_wall_preview_b_right">
  [ 99] pusharglistnoret 2 ...................... <pWallPreviewIdList, "catalog_wall_preview_b_right">
  [101] objcall 340 ............................. pWallPreviewIdList.add("catalog_wall_preview_b_right")
  [104] pushint8 1 .............................. <1>
  [106] pusharglistnoret 1 ...................... <1>
  [108] extcall 43 .............................. return 1
  [110] ret
end

on define me, tPageProps
  [  0] getparam 1 .............................. <tPageProps>
  [  2] getobjprop 135 .......................... <tPageProps.ilk>
  [  4] pushsymb 136 ............................ <#propList>
  [  6] nteq .................................... <tPageProps.ilk <> #propList>
  [  7] jmpifz [ 24] ............................ if tPageProps.ilk <> #propList then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 7 .............................. <"Incorrect Catalogue page data">
  [ 14] pushsymb 160 ............................ <#define>
  [ 16] pusharglist 3 ........................... <me, "Incorrect Catalogue page data", #define>
  [ 18] extcall 44 .............................. <error(me, "Incorrect Catalogue page data", #define)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Incorrect Catalogue page data", #define)>
  [ 22] extcall 43 .............................. return error(me, "Incorrect Catalogue page data", #define)
  [ 24] pushsymb 296 ............................ <#catalogue>
  [ 27] pusharglist 1 ........................... <#catalogue>
  [ 29] extcall 120 ............................. <getThread(#catalogue)>
  [ 31] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 33] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 35] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 37] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 39] setlocal 0 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 41] getlocal 0 .............................. <tWndObj>
  [ 43] not ..................................... <not tWndObj>
  [ 44] jmpifz [ 61] ............................ if not tWndObj then
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 8 .............................. <"Couldn't access catalogue window!">
  [ 51] pushsymb 160 ............................ <#define>
  [ 53] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #define>
  [ 55] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #define)>
  [ 57] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #define)>
  [ 59] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #define)
  [ 61] getparam 1 .............................. <tPageProps>
  [ 63] pushcons 9 .............................. <"productList">
  [ 65] pusharglist 2 ........................... <tPageProps, "productList">
  [ 67] objcall 82 .............................. <tPageProps["productList"]>
  [ 69] pusharglist 1 ........................... <tPageProps["productList"]>
  [ 71] extcall 139 ............................. <voidp(tPageProps["productList"])>
  [ 73] not ..................................... <not voidp(tPageProps["productList"])>
  [ 74] jmpifz [288] ............................ if not voidp(tPageProps["productList"]) then
  [ 77] getparam 1 .............................. <tPageProps>
  [ 79] pushcons 9 .............................. <"productList">
  [ 81] pusharglist 2 ........................... <tPageProps, "productList">
  [ 83] objcall 82 .............................. <tPageProps["productList"]>
  [ 85] getobjprop 156 .......................... <tPageProps["productList"].count>
  [ 87] pushint8 2 .............................. <2>
  [ 89] lt ...................................... <tPageProps["productList"].count < 2>
  [ 90] jmpifz [150] ............................ if tPageProps["productList"].count < 2 then
  [ 93] getlocal 0 .............................. <tWndObj>
  [ 95] pushcons 10 ............................. <"ctlg_buy_wall">
  [ 97] pusharglist 2 ........................... <tWndObj, "ctlg_buy_wall">
  [ 99] objcall 106 ............................. <tWndObj.elementExists("ctlg_buy_wall")>
  [101] jmpifz [119] ............................ if tWndObj.elementExists("ctlg_buy_wall") then
  [104] getlocal 0 .............................. <tWndObj>
  [106] pushcons 10 ............................. <"ctlg_buy_wall">
  [108] pusharglist 2 ........................... <tWndObj, "ctlg_buy_wall">
  [110] objcall 97 .............................. <tWndObj.getElement("ctlg_buy_wall")>
  [112] pushsymb 153 ............................ <#visible>
  [114] pushzero ................................ <0>
  [115] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_wall"), #visible, 0>
  [117] objcall 103 ............................. tWndObj.getElement("ctlg_buy_wall").setProperty(#visible, 0)
  [119] getlocal 0 .............................. <tWndObj>
  [121] pushcons 11 ............................. <"ctlg_buy_floor">
  [123] pusharglist 2 ........................... <tWndObj, "ctlg_buy_floor">
  [125] objcall 106 ............................. <tWndObj.elementExists("ctlg_buy_floor")>
  [127] jmpifz [145] ............................ if tWndObj.elementExists("ctlg_buy_floor") then
  [130] getlocal 0 .............................. <tWndObj>
  [132] pushcons 11 ............................. <"ctlg_buy_floor">
  [134] pusharglist 2 ........................... <tWndObj, "ctlg_buy_floor">
  [136] objcall 97 .............................. <tWndObj.getElement("ctlg_buy_floor")>
  [138] pushsymb 153 ............................ <#visible>
  [140] pushzero ................................ <0>
  [141] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_floor"), #visible, 0>
  [143] objcall 103 ............................. tWndObj.getElement("ctlg_buy_floor").setProperty(#visible, 0)
  [145] pushzero ................................ <0>
  [146] pusharglistnoret 1 ...................... <0>
  [148] extcall 43 .............................. return 0
  [150] getparam 1 .............................. <tPageProps>
  [152] pushcons 9 .............................. <"productList">
  [154] pusharglist 2 ........................... <tPageProps, "productList">
  [156] objcall 82 .............................. <tPageProps["productList"]>
  [158] pushint8 1 .............................. <1>
  [160] pusharglist 2 ........................... <tPageProps["productList"], 1>
  [162] objcall 82 .............................. <tPageProps["productList"][1]>
  [164] setprop 455 ............................. pWallProps = tPageProps["productList"][1]
  [167] getparam 1 .............................. <tPageProps>
  [169] pushcons 9 .............................. <"productList">
  [171] pusharglist 2 ........................... <tPageProps, "productList">
  [173] objcall 82 .............................. <tPageProps["productList"]>
  [175] pushint8 2 .............................. <2>
  [177] pusharglist 2 ........................... <tPageProps["productList"], 2>
  [179] objcall 82 .............................. <tPageProps["productList"][2]>
  [181] setprop 456 ............................. pFloorProps = tPageProps["productList"][2]
  [184] getparam 1 .............................. <tPageProps>
  [186] pushcons 9 .............................. <"productList">
  [188] pusharglist 2 ........................... <tPageProps, "productList">
  [190] objcall 82 .............................. <tPageProps["productList"]>
  [192] pushint8 1 .............................. <1>
  [194] pusharglist 2 ........................... <tPageProps["productList"], 1>
  [196] objcall 82 .............................. <tPageProps["productList"][1]>
  [198] pushcons 12 ............................. <"price">
  [200] pusharglist 2 ........................... <tPageProps["productList"][1], "price">
  [202] objcall 82 .............................. <tPageProps["productList"][1]["price"]>
  [204] setlocal 1 .............................. tProductPrice = tPageProps["productList"][1]["price"]
  [206] getlocal 1 .............................. <tProductPrice>
  [208] pusharglist 1 ........................... <tProductPrice>
  [210] extcall 139 ............................. <voidp(tProductPrice)>
  [212] not ..................................... <not voidp(tProductPrice)>
  [213] jmpifz [288] ............................ if not voidp(tProductPrice) then
  [216] getlocal 0 .............................. <tWndObj>
  [218] pushcons 13 ............................. <"ctlg_price_1">
  [220] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [222] objcall 106 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [224] jmpifz [288] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [227] getlocal 1 .............................. <tProductPrice>
  [229] pusharglist 1 ........................... <tProductPrice>
  [231] extcall 80 .............................. <value(tProductPrice)>
  [233] pushint8 1 .............................. <1>
  [235] gt ...................................... <value(tProductPrice) > 1>
  [236] jmpifz [255] ............................ if value(tProductPrice) > 1 then / else
  [239] getlocal 1 .............................. <tProductPrice>
  [241] pushcons 14 ............................. <"credits">
  [243] pushcons 14 ............................. <"credits">
  [245] pusharglist 2 ........................... <"credits", "credits">
  [247] extcall 39 .............................. <getText("credits", "credits")>
  [249] joinpadstr .............................. <tProductPrice && getText("credits", "credits")>
  [250] setlocal 2 .............................. tText = tProductPrice && getText("credits", "credits")
  [252] jmp [274]
  [255] getparam 1 .............................. <tPageProps>
  [257] pushcons 12 ............................. <"price">
  [259] pusharglist 2 ........................... <tPageProps, "price">
  [261] objcall 82 .............................. <tPageProps["price"]>
  [263] pushcons 15 ............................. <"credit">
  [265] pushcons 15 ............................. <"credit">
  [267] pusharglist 2 ........................... <"credit", "credit">
  [269] extcall 39 .............................. <getText("credit", "credit")>
  [271] joinpadstr .............................. <tPageProps["price"] && getText("credit", "credit")>
  [272] setlocal 2 .............................. tText = tPageProps["price"] && getText("credit", "credit")
  [274] getlocal 0 .............................. <tWndObj>
  [276] pushcons 13 ............................. <"ctlg_price_1">
  [278] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [280] objcall 97 .............................. <tWndObj.getElement("ctlg_price_1")>
  [282] getlocal 2 .............................. <tText>
  [284] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [286] objcall 98 .............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [288] getparam 0 .............................. <me>
  [290] pushcons 16 ............................. <"pattern">
  [292] pushint8 6 .............................. <6>
  [294] pusharglistnoret 3 ...................... <me, "pattern", 6>
  [296] objcall 447 ............................. me.setWallPaper("pattern", 6)
  [299] getparam 0 .............................. <me>
  [301] pushcons 16 ............................. <"pattern">
  [303] pushint8 3 .............................. <3>
  [305] pusharglistnoret 3 ...................... <me, "pattern", 3>
  [307] objcall 448 ............................. me.setFloorPattern("pattern", 3)
  [310] ret
end

on setWallPaper me, ttype, tChange
  [  0] getparam 1 .............................. <ttype>
  [  2] pushcons 16 ............................. <"pattern">
  [  4] eq ...................................... <ttype = "pattern">
  [  5] jmpifz [ 72] ............................ if ttype = "pattern" then / else
  [  8] getprop 450 ............................. <pWallPattern>
  [ 11] getparam 2 .............................. <tChange>
  [ 13] add ..................................... <pWallPattern + tChange>
  [ 14] setprop 450 ............................. pWallPattern = pWallPattern + tChange
  [ 17] getprop 450 ............................. <pWallPattern>
  [ 20] getprop 449 ............................. <pWallPatterns>
  [ 23] pushsymb 356 ............................ <#line>
  [ 26] pusharglist 2 ........................... <pWallPatterns, #line>
  [ 28] objcall 156 ............................. <pWallPatterns.line.count>
  [ 30] gt ...................................... <pWallPattern > pWallPatterns.line.count>
  [ 31] jmpifz [ 42] ............................ if pWallPattern > pWallPatterns.line.count then / else
  [ 34] pushint8 1 .............................. <1>
  [ 36] setprop 450 ............................. pWallPattern = 1
  [ 39] jmp [ 64]
  [ 42] getprop 450 ............................. <pWallPattern>
  [ 45] pushint8 1 .............................. <1>
  [ 47] lt ...................................... <pWallPattern < 1>
  [ 48] jmpifz [ 64] ............................ if pWallPattern < 1 then
  [ 51] getprop 449 ............................. <pWallPatterns>
  [ 54] pushsymb 356 ............................ <#line>
  [ 57] pusharglist 2 ........................... <pWallPatterns, #line>
  [ 59] objcall 156 ............................. <pWallPatterns.line.count>
  [ 61] setprop 450 ............................. pWallPattern = pWallPatterns.line.count
  [ 64] pushint8 1 .............................. <1>
  [ 66] setprop 451 ............................. pWallModel = 1
  [ 69] jmp [160]
  [ 72] getparam 1 .............................. <ttype>
  [ 74] pushcons 17 ............................. <"model">
  [ 76] eq ...................................... <ttype = "model">
  [ 77] jmpifz [160] ............................ if ttype = "model" then
  [ 80] getprop 451 ............................. <pWallModel>
  [ 83] getparam 2 .............................. <tChange>
  [ 85] add ..................................... <pWallModel + tChange>
  [ 86] setprop 451 ............................. pWallModel = pWallModel + tChange
  [ 89] getprop 451 ............................. <pWallModel>
  [ 92] getprop 449 ............................. <pWallPatterns>
  [ 95] pushsymb 356 ............................ <#line>
  [ 98] getprop 450 ............................. <pWallPattern>
  [101] pusharglist 3 ........................... <pWallPatterns, #line, pWallPattern>
  [103] objcall 159 ............................. <pWallPatterns.line[pWallPattern]>
  [105] pushzero ................................ <0>
  [106] getfield ................................ <field(pWallPatterns.line[pWallPattern])>
  [107] pushsymb 356 ............................ <#line>
  [110] pusharglist 2 ........................... <field(pWallPatterns.line[pWallPattern]), #line>
  [112] objcall 156 ............................. <field(pWallPatterns.line[pWallPattern]).line.count>
  [114] gt ...................................... <pWallModel > field(pWallPatterns.line[pWallPattern]).line.count>
  [115] jmpifz [126] ............................ if pWallModel > field(pWallPatterns.line[pWallPattern]).line.count then / else
  [118] pushint8 1 .............................. <1>
  [120] setprop 451 ............................. pWallModel = 1
  [123] jmp [160]
  [126] getprop 451 ............................. <pWallModel>
  [129] pushint8 1 .............................. <1>
  [131] lt ...................................... <pWallModel < 1>
  [132] jmpifz [160] ............................ if pWallModel < 1 then
  [135] getprop 449 ............................. <pWallPatterns>
  [138] pushsymb 356 ............................ <#line>
  [141] getprop 450 ............................. <pWallPattern>
  [144] pusharglist 3 ........................... <pWallPatterns, #line, pWallPattern>
  [146] objcall 159 ............................. <pWallPatterns.line[pWallPattern]>
  [148] pushzero ................................ <0>
  [149] getfield ................................ <field(pWallPatterns.line[pWallPattern])>
  [150] pushsymb 356 ............................ <#line>
  [153] pusharglist 2 ........................... <field(pWallPatterns.line[pWallPattern]), #line>
  [155] objcall 156 ............................. <field(pWallPatterns.line[pWallPattern]).line.count>
  [157] setprop 451 ............................. pWallModel = field(pWallPatterns.line[pWallPattern]).line.count
  [160] getprop 449 ............................. <pWallPatterns>
  [163] pushsymb 356 ............................ <#line>
  [166] getprop 450 ............................. <pWallPattern>
  [169] pusharglist 3 ........................... <pWallPatterns, #line, pWallPattern>
  [171] objcall 159 ............................. <pWallPatterns.line[pWallPattern]>
  [173] pushzero ................................ <0>
  [174] getfield ................................ <field(pWallPatterns.line[pWallPattern])>
  [175] setlocal 0 .............................. tmodel = field(pWallPatterns.line[pWallPattern])
  [177] getlocal 0 .............................. <tmodel>
  [179] pushsymb 356 ............................ <#line>
  [182] getprop 451 ............................. <pWallModel>
  [185] pusharglist 3 ........................... <tmodel, #line, pWallModel>
  [187] objcall 159 ............................. <tmodel.line[pWallModel]>
  [189] setlocal 1 .............................. tPattern = tmodel.line[pWallModel]
  [191] getmovieprop 157 ........................ <the itemDelimiter>
  [193] setlocal 2 .............................. tDelim = the itemDelimiter
  [195] pushcons 18 ............................. <",">
  [197] setmovieprop 157 ........................ the itemDelimiter = ","
  [199] getlocal 1 .............................. <tPattern>
  [201] pushsymb 158 ............................ <#item>
  [203] pushint8 1 .............................. <1>
  [205] pusharglist 3 ........................... <tPattern, #item, 1>
  [207] objcall 362 ............................. <tPattern.item[1]>
  [210] pushsymb 341 ............................ <#char>
  [213] pushint8 1 .............................. <1>
  [215] pusharglist 3 ........................... <tPattern.item[1], #char, 1>
  [217] objcall 159 ............................. <tPattern.item[1].char[1]>
  [219] setparam 1 .............................. ttype = tPattern.item[1].char[1]
  [221] getlocal 1 .............................. <tPattern>
  [223] pushsymb 158 ............................ <#item>
  [225] pushint8 2 .............................. <2>
  [227] pusharglist 3 ........................... <tPattern, #item, 2>
  [229] objcall 159 ............................. <tPattern.item[2]>
  [231] setlocal 3 .............................. tPalette = tPattern.item[2]
  [233] getlocal 1 .............................. <tPattern>
  [235] pushsymb 158 ............................ <#item>
  [237] pushint8 3 .............................. <3>
  [239] pusharglist 3 ........................... <tPattern, #item, 3>
  [241] objcall 159 ............................. <tPattern.item[3]>
  [243] pusharglist 1 ........................... <tPattern.item[3]>
  [245] extcall 79 .............................. <integer(tPattern.item[3])>
  [247] setlocal 4 .............................. tR = integer(tPattern.item[3])
  [249] getlocal 1 .............................. <tPattern>
  [251] pushsymb 158 ............................ <#item>
  [253] pushint8 4 .............................. <4>
  [255] pusharglist 3 ........................... <tPattern, #item, 4>
  [257] objcall 159 ............................. <tPattern.item[4]>
  [259] pusharglist 1 ........................... <tPattern.item[4]>
  [261] extcall 79 .............................. <integer(tPattern.item[4])>
  [263] setlocal 5 .............................. tG = integer(tPattern.item[4])
  [265] getlocal 1 .............................. <tPattern>
  [267] pushsymb 158 ............................ <#item>
  [269] pushint8 5 .............................. <5>
  [271] pusharglist 3 ........................... <tPattern, #item, 5>
  [273] objcall 159 ............................. <tPattern.item[5]>
  [275] pusharglist 1 ........................... <tPattern.item[5]>
  [277] extcall 79 .............................. <integer(tPattern.item[5])>
  [279] setlocal 6 .............................. tB = integer(tPattern.item[5])
  [281] getlocal 4 .............................. <tR>
  [283] getlocal 5 .............................. <tG>
  [285] getlocal 6 .............................. <tB>
  [287] pusharglist 3 ........................... <tR, tG, tB>
  [289] extcall 53 .............................. <rgb(tR, tG, tB)>
  [291] setlocal 7 .............................. tColor = rgb(tR, tG, tB)
  [293] pushcons 19 ............................. <"left">
  [295] getlocal 7 .............................. <tColor>
  [297] pushint8 16 ............................. <16>
  [299] pushint8 16 ............................. <16>
  [301] pushint8 16 ............................. <16>
  [303] pusharglist 3 ........................... <16, 16, 16>
  [305] extcall 53 .............................. <rgb(16, 16, 16)>
  [307] sub ..................................... <tColor - rgb(16, 16, 16)>
  [308] pushcons 20 ............................. <"right">
  [310] getlocal 7 .............................. <tColor>
  [312] pushcons 21 ............................. <"a">
  [314] getlocal 7 .............................. <tColor>
  [316] pushint8 16 ............................. <16>
  [318] pushint8 16 ............................. <16>
  [320] pushint8 16 ............................. <16>
  [322] pusharglist 3 ........................... <16, 16, 16>
  [324] extcall 53 .............................. <rgb(16, 16, 16)>
  [326] sub ..................................... <tColor - rgb(16, 16, 16)>
  [327] pushcons 22 ............................. <"b">
  [329] getlocal 7 .............................. <tColor>
  [331] pushcons 16 ............................. <"pattern">
  [333] getlocal 7 .............................. <tColor>
  [335] pusharglist 10 .......................... <["left": tColor - rgb(16, 16, 16), "right": tColor, "a": tColor - rgb(16, 16, 16), "b": tColor, "pattern": tColor]>
  [337] pushproplist ............................ <["left": tColor - rgb(16, 16, 16), "right": tColor, "a": tColor - rgb(16, 16, 16), "b": tColor, "pattern": tColor]>
  [338] setlocal 8 .............................. tColors = ["left": tColor - rgb(16, 16, 16), "right": tColor, "a": tColor - rgb(16, 16, 16), "b": tColor, "pattern": tColor]
  [340] getprop 455 ............................. <pWallProps>
  [343] pushcons 23 ............................. <"extra_parm">
  [345] getlocal 1 .............................. <tPattern>
  [347] pushsymb 158 ............................ <#item>
  [349] pushint8 6 .............................. <6>
  [351] pusharglist 3 ........................... <tPattern, #item, 6>
  [353] objcall 159 ............................. <tPattern.item[6]>
  [355] pusharglistnoret 3 ...................... <pWallProps, "extra_parm", tPattern.item[6]>
  [357] objcall 236 ............................. pWallProps["extra_parm"] = tPattern.item[6]
  [359] pushcons 24 ............................. <"_">
  [361] setmovieprop 157 ........................ the itemDelimiter = "_"
  [363] pushsymb 296 ............................ <#catalogue>
  [366] pusharglist 1 ........................... <#catalogue>
  [368] extcall 120 ............................. <getThread(#catalogue)>
  [370] pusharglist 1 ........................... <getThread(#catalogue)>
  [372] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [374] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [376] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [378] setlocal 9 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [380] getlocal 9 .............................. <tWndObj>
  [382] not ..................................... <not tWndObj>
  [383] jmpifz [401] ............................ if not tWndObj then
  [386] getparam 0 .............................. <me>
  [388] pushcons 8 .............................. <"Couldn't access catalogue window!">
  [390] pushsymb 447 ............................ <#setWallPaper>
  [393] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #setWallPaper>
  [395] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #setWallPaper)>
  [397] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #setWallPaper)>
  [399] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #setWallPaper)
  [401] getprop 458 ............................. <pWallPreviewIdList>
  [404] peek 0
  [406] pusharglist 1
  [408] extcall 156
  [410] pushint8 1
  [412] peek 0
  [414] peek 2
  [416] lteq
  [417] jmpifz [620] ............................ repeat with tid in pWallPreviewIdList
  [420] peek 2
  [422] peek 1
  [424] pusharglist 2
  [426] extcall 82
  [428] setlocal 10
  [430] getlocal 10 ............................. <tid>
  [432] pushsymb 158 ............................ <#item>
  [434] getlocal 10 ............................. <tid>
  [436] pushsymb 158 ............................ <#item>
  [438] pusharglist 2 ........................... <tid, #item>
  [440] objcall 156 ............................. <tid.item.count>
  [442] pusharglist 3 ........................... <tid, #item, tid.item.count>
  [444] objcall 159 ............................. <tid.item[tid.item.count]>
  [446] setlocal 11 ............................. tPiece = tid.item[tid.item.count]
  [448] pushcons 25 ............................. <"catalog_spaces_wall">
  [450] getparam 1 .............................. <ttype>
  [452] joinstr ................................. <"catalog_spaces_wall" & ttype>
  [453] pushcons 24 ............................. <"_">
  [455] joinstr ................................. <"catalog_spaces_wall" & ttype & "_">
  [456] getlocal 11 ............................. <tPiece>
  [458] joinstr ................................. <"catalog_spaces_wall" & ttype & "_" & tPiece>
  [459] setlocal 12 ............................. tMem = "catalog_spaces_wall" & ttype & "_" & tPiece
  [461] getlocal 12 ............................. <tMem>
  [463] pusharglist 1 ........................... <tMem>
  [465] extcall 90 .............................. <memberExists(tMem)>
  [467] jmpifz [595] ............................ if memberExists(tMem) then
  [470] getlocal 9 .............................. <tWndObj>
  [472] getlocal 10 ............................. <tid>
  [474] pusharglist 2 ........................... <tWndObj, tid>
  [476] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [478] jmpifz [592] ............................ if tWndObj.elementExists(tid) then
  [481] getlocal 12 ............................. <tMem>
  [483] pusharglist 1 ........................... <tMem>
  [485] extcall 194 ............................. <getmemnum(tMem)>
  [487] pusharglist 1 ........................... <getmemnum(tMem)>
  [489] extcall 175 ............................. <member(getmemnum(tMem))>
  [491] setlocal 13 ............................. tmember = member(getmemnum(tMem))
  [493] getlocal 13 ............................. <tmember>
  [495] getlocal 3 .............................. <tPalette>
  [497] pusharglist 1 ........................... <tPalette>
  [499] extcall 194 ............................. <getmemnum(tPalette)>
  [501] pusharglist 1 ........................... <getmemnum(tPalette)>
  [503] extcall 175 ............................. <member(getmemnum(tPalette))>
  [505] setobjprop 412 .......................... tmember.paletteRef = member(getmemnum(tPalette))
  [508] getlocal 13 ............................. <tmember>
  [510] getobjprop 36 ........................... <tmember.image>
  [512] setlocal 14 ............................. tImg = tmember.image
  [514] getlocal 9 .............................. <tWndObj>
  [516] getlocal 10 ............................. <tid>
  [518] pusharglist 2 ........................... <tWndObj, tid>
  [520] objcall 97 .............................. <tWndObj.getElement(tid)>
  [522] setlocal 15 ............................. tElem = tWndObj.getElement(tid)
  [524] getlocal 15 ............................. <tElem>
  [526] pushsymb 36 ............................. <#image>
  [528] pusharglist 2 ........................... <tElem, #image>
  [530] objcall 174 ............................. <tElem.getProperty(#image)>
  [532] setlocal 16 ............................. tDestImg = tElem.getProperty(#image)
  [534] getlocal 16 ............................. <tDestImg>
  [536] getobjprop 176 .......................... <tDestImg.rect>
  [538] setlocal 17 ............................. tRect = tDestImg.rect
  [540] getlocal 14 ............................. <tImg>
  [542] pusharglist 1 ........................... <tImg>
  [544] objcall 218 ............................. <tImg.createMatte()>
  [546] setlocal 18 ............................. tMatte = tImg.createMatte()
  [548] getlocal 16 ............................. <tDestImg>
  [550] getlocal 14 ............................. <tImg>
  [552] getlocal 17 ............................. <tRect>
  [554] getlocal 14 ............................. <tImg>
  [556] getobjprop 176 .......................... <tImg.rect>
  [558] pushsymb 219 ............................ <#maskImage>
  [560] getlocal 18 ............................. <tMatte>
  [562] pushsymb 179 ............................ <#ink>
  [564] pushint8 41 ............................. <41>
  [566] pushsymb 395 ............................ <#bgColor>
  [569] getlocal 8 .............................. <tColors>
  [571] getlocal 11 ............................. <tPiece>
  [573] pusharglist 2 ........................... <tColors, tPiece>
  [575] objcall 82 .............................. <tColors[tPiece]>
  [577] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: 41, #bgColor: tColors[tPiece]]>
  [579] pushproplist ............................ <[#maskImage: tMatte, #ink: 41, #bgColor: tColors[tPiece]]>
  [580] pusharglistnoret 5 ...................... <tDestImg, tImg, tRect, tImg.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tColors[tPiece]]>
  [582] objcall 180 ............................. tDestImg.copyPixels(tImg, tRect, tImg.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tColors[tPiece]])
  [584] getlocal 15 ............................. <tElem>
  [586] getlocal 16 ............................. <tDestImg>
  [588] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [590] objcall 181 ............................. tElem.feedImage(tDestImg)
  [592] jmp [615] ............................... next repeat
  [595] getparam 0 .............................. <me>
  [597] pushcons 26 ............................. <"Wall member not found:">
  [599] pushcons 25 ............................. <"catalog_spaces_wall">
  [601] joinpadstr .............................. <"Wall member not found:" && "catalog_spaces_wall">
  [602] getparam 1 .............................. <ttype>
  [604] joinstr ................................. <"Wall member not found:" && "catalog_spaces_wall" & ttype>
  [605] pushcons 24 ............................. <"_">
  [607] joinstr ................................. <"Wall member not found:" && "catalog_spaces_wall" & ttype & "_">
  [608] getlocal 11 ............................. <tPiece>
  [610] joinstr ................................. <"Wall member not found:" && "catalog_spaces_wall" & ttype & "_" & tPiece>
  [611] pusharglistnoret 2 ...................... <me, "Wall member not found:" && "catalog_spaces_wall" & ttype & "_" & tPiece>
  [613] extcall 44 .............................. error(me, "Wall member not found:" && "catalog_spaces_wall" & ttype & "_" & tPiece)
  [615] pushint8 1
  [617] add
  [618] endrepeat [412]
  [620] pop 3
  [622] getlocal 2 .............................. <tDelim>
  [624] setmovieprop 157 ........................ the itemDelimiter = tDelim
  [626] pushint8 1 .............................. <1>
  [628] pusharglistnoret 1 ...................... <1>
  [630] extcall 43 .............................. return 1
  [632] ret
end

on setFloorPattern me, ttype, tChange
  [  0] getparam 1 .............................. <ttype>
  [  2] pushcons 16 ............................. <"pattern">
  [  4] eq ...................................... <ttype = "pattern">
  [  5] jmpifz [ 72] ............................ if ttype = "pattern" then / else
  [  8] getprop 453 ............................. <pFloorPattern>
  [ 11] getparam 2 .............................. <tChange>
  [ 13] add ..................................... <pFloorPattern + tChange>
  [ 14] setprop 453 ............................. pFloorPattern = pFloorPattern + tChange
  [ 17] getprop 453 ............................. <pFloorPattern>
  [ 20] getprop 452 ............................. <pFloorPatterns>
  [ 23] pushsymb 356 ............................ <#line>
  [ 26] pusharglist 2 ........................... <pFloorPatterns, #line>
  [ 28] objcall 156 ............................. <pFloorPatterns.line.count>
  [ 30] gt ...................................... <pFloorPattern > pFloorPatterns.line.count>
  [ 31] jmpifz [ 42] ............................ if pFloorPattern > pFloorPatterns.line.count then / else
  [ 34] pushint8 1 .............................. <1>
  [ 36] setprop 453 ............................. pFloorPattern = 1
  [ 39] jmp [ 64]
  [ 42] getprop 453 ............................. <pFloorPattern>
  [ 45] pushint8 1 .............................. <1>
  [ 47] lt ...................................... <pFloorPattern < 1>
  [ 48] jmpifz [ 64] ............................ if pFloorPattern < 1 then
  [ 51] getprop 452 ............................. <pFloorPatterns>
  [ 54] pushsymb 356 ............................ <#line>
  [ 57] pusharglist 2 ........................... <pFloorPatterns, #line>
  [ 59] objcall 156 ............................. <pFloorPatterns.line.count>
  [ 61] setprop 453 ............................. pFloorPattern = pFloorPatterns.line.count
  [ 64] pushint8 1 .............................. <1>
  [ 66] setprop 454 ............................. pFloorModel = 1
  [ 69] jmp [160]
  [ 72] getparam 1 .............................. <ttype>
  [ 74] pushcons 17 ............................. <"model">
  [ 76] eq ...................................... <ttype = "model">
  [ 77] jmpifz [160] ............................ if ttype = "model" then
  [ 80] getprop 454 ............................. <pFloorModel>
  [ 83] getparam 2 .............................. <tChange>
  [ 85] add ..................................... <pFloorModel + tChange>
  [ 86] setprop 454 ............................. pFloorModel = pFloorModel + tChange
  [ 89] getprop 454 ............................. <pFloorModel>
  [ 92] getprop 452 ............................. <pFloorPatterns>
  [ 95] pushsymb 356 ............................ <#line>
  [ 98] getprop 453 ............................. <pFloorPattern>
  [101] pusharglist 3 ........................... <pFloorPatterns, #line, pFloorPattern>
  [103] objcall 159 ............................. <pFloorPatterns.line[pFloorPattern]>
  [105] pushzero ................................ <0>
  [106] getfield ................................ <field(pFloorPatterns.line[pFloorPattern])>
  [107] pushsymb 356 ............................ <#line>
  [110] pusharglist 2 ........................... <field(pFloorPatterns.line[pFloorPattern]), #line>
  [112] objcall 156 ............................. <field(pFloorPatterns.line[pFloorPattern]).line.count>
  [114] gt ...................................... <pFloorModel > field(pFloorPatterns.line[pFloorPattern]).line.count>
  [115] jmpifz [126] ............................ if pFloorModel > field(pFloorPatterns.line[pFloorPattern]).line.count then / else
  [118] pushint8 1 .............................. <1>
  [120] setprop 454 ............................. pFloorModel = 1
  [123] jmp [160]
  [126] getprop 454 ............................. <pFloorModel>
  [129] pushint8 1 .............................. <1>
  [131] lt ...................................... <pFloorModel < 1>
  [132] jmpifz [160] ............................ if pFloorModel < 1 then
  [135] getprop 452 ............................. <pFloorPatterns>
  [138] pushsymb 356 ............................ <#line>
  [141] getprop 453 ............................. <pFloorPattern>
  [144] pusharglist 3 ........................... <pFloorPatterns, #line, pFloorPattern>
  [146] objcall 159 ............................. <pFloorPatterns.line[pFloorPattern]>
  [148] pushzero ................................ <0>
  [149] getfield ................................ <field(pFloorPatterns.line[pFloorPattern])>
  [150] pushsymb 356 ............................ <#line>
  [153] pusharglist 2 ........................... <field(pFloorPatterns.line[pFloorPattern]), #line>
  [155] objcall 156 ............................. <field(pFloorPatterns.line[pFloorPattern]).line.count>
  [157] setprop 454 ............................. pFloorModel = field(pFloorPatterns.line[pFloorPattern]).line.count
  [160] getprop 452 ............................. <pFloorPatterns>
  [163] pushsymb 356 ............................ <#line>
  [166] getprop 453 ............................. <pFloorPattern>
  [169] pusharglist 3 ........................... <pFloorPatterns, #line, pFloorPattern>
  [171] objcall 159 ............................. <pFloorPatterns.line[pFloorPattern]>
  [173] pushzero ................................ <0>
  [174] getfield ................................ <field(pFloorPatterns.line[pFloorPattern])>
  [175] setlocal 0 .............................. tmodel = field(pFloorPatterns.line[pFloorPattern])
  [177] getlocal 0 .............................. <tmodel>
  [179] pushsymb 356 ............................ <#line>
  [182] getprop 454 ............................. <pFloorModel>
  [185] pusharglist 3 ........................... <tmodel, #line, pFloorModel>
  [187] objcall 159 ............................. <tmodel.line[pFloorModel]>
  [189] setlocal 1 .............................. tPattern = tmodel.line[pFloorModel]
  [191] getmovieprop 157 ........................ <the itemDelimiter>
  [193] setlocal 2 .............................. tDelim = the itemDelimiter
  [195] pushcons 18 ............................. <",">
  [197] setmovieprop 157 ........................ the itemDelimiter = ","
  [199] getlocal 1 .............................. <tPattern>
  [201] pushsymb 158 ............................ <#item>
  [203] pushint8 1 .............................. <1>
  [205] pusharglist 3 ........................... <tPattern, #item, 1>
  [207] objcall 362 ............................. <tPattern.item[1]>
  [210] pushsymb 341 ............................ <#char>
  [213] pushint8 1 .............................. <1>
  [215] pusharglist 3 ........................... <tPattern.item[1], #char, 1>
  [217] objcall 159 ............................. <tPattern.item[1].char[1]>
  [219] setparam 1 .............................. ttype = tPattern.item[1].char[1]
  [221] getlocal 1 .............................. <tPattern>
  [223] pushsymb 158 ............................ <#item>
  [225] pushint8 2 .............................. <2>
  [227] pusharglist 3 ........................... <tPattern, #item, 2>
  [229] objcall 159 ............................. <tPattern.item[2]>
  [231] setlocal 3 .............................. tPalette = tPattern.item[2]
  [233] getlocal 1 .............................. <tPattern>
  [235] pushsymb 158 ............................ <#item>
  [237] pushint8 3 .............................. <3>
  [239] pusharglist 3 ........................... <tPattern, #item, 3>
  [241] objcall 159 ............................. <tPattern.item[3]>
  [243] pusharglist 1 ........................... <tPattern.item[3]>
  [245] extcall 79 .............................. <integer(tPattern.item[3])>
  [247] setlocal 4 .............................. tR = integer(tPattern.item[3])
  [249] getlocal 1 .............................. <tPattern>
  [251] pushsymb 158 ............................ <#item>
  [253] pushint8 4 .............................. <4>
  [255] pusharglist 3 ........................... <tPattern, #item, 4>
  [257] objcall 159 ............................. <tPattern.item[4]>
  [259] pusharglist 1 ........................... <tPattern.item[4]>
  [261] extcall 79 .............................. <integer(tPattern.item[4])>
  [263] setlocal 5 .............................. tG = integer(tPattern.item[4])
  [265] getlocal 1 .............................. <tPattern>
  [267] pushsymb 158 ............................ <#item>
  [269] pushint8 5 .............................. <5>
  [271] pusharglist 3 ........................... <tPattern, #item, 5>
  [273] objcall 159 ............................. <tPattern.item[5]>
  [275] pusharglist 1 ........................... <tPattern.item[5]>
  [277] extcall 79 .............................. <integer(tPattern.item[5])>
  [279] setlocal 6 .............................. tB = integer(tPattern.item[5])
  [281] getlocal 4 .............................. <tR>
  [283] getlocal 5 .............................. <tG>
  [285] getlocal 6 .............................. <tB>
  [287] pusharglist 3 ........................... <tR, tG, tB>
  [289] extcall 53 .............................. <rgb(tR, tG, tB)>
  [291] setlocal 7 .............................. tColor = rgb(tR, tG, tB)
  [293] getprop 456 ............................. <pFloorProps>
  [296] pushcons 23 ............................. <"extra_parm">
  [298] getlocal 1 .............................. <tPattern>
  [300] pushsymb 158 ............................ <#item>
  [302] pushint8 6 .............................. <6>
  [304] pusharglist 3 ........................... <tPattern, #item, 6>
  [306] objcall 159 ............................. <tPattern.item[6]>
  [308] pusharglistnoret 3 ...................... <pFloorProps, "extra_parm", tPattern.item[6]>
  [310] objcall 236 ............................. pFloorProps["extra_parm"] = tPattern.item[6]
  [312] pushcons 24 ............................. <"_">
  [314] setmovieprop 157 ........................ the itemDelimiter = "_"
  [316] pushsymb 296 ............................ <#catalogue>
  [319] pusharglist 1 ........................... <#catalogue>
  [321] extcall 120 ............................. <getThread(#catalogue)>
  [323] pusharglist 1 ........................... <getThread(#catalogue)>
  [325] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [327] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [329] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [331] setlocal 8 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [333] getlocal 8 .............................. <tWndObj>
  [335] not ..................................... <not tWndObj>
  [336] jmpifz [354] ............................ if not tWndObj then
  [339] getparam 0 .............................. <me>
  [341] pushcons 8 .............................. <"Couldn't access catalogue window!">
  [343] pushsymb 448 ............................ <#setFloorPattern>
  [346] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #setFloorPattern>
  [348] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #setFloorPattern)>
  [350] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #setFloorPattern)>
  [352] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #setFloorPattern)
  [354] getprop 457 ............................. <pFloorPreviewIdList>
  [357] peek 0
  [359] pusharglist 1
  [361] extcall 156
  [363] pushint8 1
  [365] peek 0
  [367] peek 2
  [369] lteq
  [370] jmpifz [567] ............................ repeat with tid in pFloorPreviewIdList
  [373] peek 2
  [375] peek 1
  [377] pusharglist 2
  [379] extcall 82
  [381] setlocal 9
  [383] getlocal 9 .............................. <tid>
  [385] pushsymb 158 ............................ <#item>
  [387] getlocal 9 .............................. <tid>
  [389] pushsymb 158 ............................ <#item>
  [391] pusharglist 2 ........................... <tid, #item>
  [393] objcall 156 ............................. <tid.item.count>
  [395] pusharglist 3 ........................... <tid, #item, tid.item.count>
  [397] objcall 159 ............................. <tid.item[tid.item.count]>
  [399] setlocal 10 ............................. tPiece = tid.item[tid.item.count]
  [401] pushcons 27 ............................. <"catalog_spaces_floor">
  [403] getparam 1 .............................. <ttype>
  [405] joinstr ................................. <"catalog_spaces_floor" & ttype>
  [406] pushcons 24 ............................. <"_">
  [408] joinstr ................................. <"catalog_spaces_floor" & ttype & "_">
  [409] getlocal 10 ............................. <tPiece>
  [411] joinstr ................................. <"catalog_spaces_floor" & ttype & "_" & tPiece>
  [412] setlocal 11 ............................. tMem = "catalog_spaces_floor" & ttype & "_" & tPiece
  [414] getlocal 11 ............................. <tMem>
  [416] pusharglist 1 ........................... <tMem>
  [418] extcall 90 .............................. <memberExists(tMem)>
  [420] jmpifz [542] ............................ if memberExists(tMem) then
  [423] getlocal 8 .............................. <tWndObj>
  [425] getlocal 9 .............................. <tid>
  [427] pusharglist 2 ........................... <tWndObj, tid>
  [429] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [431] jmpifz [539] ............................ if tWndObj.elementExists(tid) then
  [434] getlocal 11 ............................. <tMem>
  [436] pusharglist 1 ........................... <tMem>
  [438] extcall 194 ............................. <getmemnum(tMem)>
  [440] pusharglist 1 ........................... <getmemnum(tMem)>
  [442] extcall 175 ............................. <member(getmemnum(tMem))>
  [444] setlocal 12 ............................. tmember = member(getmemnum(tMem))
  [446] getlocal 12 ............................. <tmember>
  [448] getlocal 3 .............................. <tPalette>
  [450] pusharglist 1 ........................... <tPalette>
  [452] extcall 194 ............................. <getmemnum(tPalette)>
  [454] pusharglist 1 ........................... <getmemnum(tPalette)>
  [456] extcall 175 ............................. <member(getmemnum(tPalette))>
  [458] setobjprop 412 .......................... tmember.paletteRef = member(getmemnum(tPalette))
  [461] getlocal 12 ............................. <tmember>
  [463] getobjprop 36 ........................... <tmember.image>
  [465] setlocal 13 ............................. tImg = tmember.image
  [467] getlocal 8 .............................. <tWndObj>
  [469] getlocal 9 .............................. <tid>
  [471] pusharglist 2 ........................... <tWndObj, tid>
  [473] objcall 97 .............................. <tWndObj.getElement(tid)>
  [475] setlocal 14 ............................. tElem = tWndObj.getElement(tid)
  [477] getlocal 14 ............................. <tElem>
  [479] pushsymb 36 ............................. <#image>
  [481] pusharglist 2 ........................... <tElem, #image>
  [483] objcall 174 ............................. <tElem.getProperty(#image)>
  [485] setlocal 15 ............................. tDestImg = tElem.getProperty(#image)
  [487] getlocal 15 ............................. <tDestImg>
  [489] getobjprop 176 .......................... <tDestImg.rect>
  [491] setlocal 16 ............................. tRect = tDestImg.rect
  [493] getlocal 13 ............................. <tImg>
  [495] pusharglist 1 ........................... <tImg>
  [497] objcall 218 ............................. <tImg.createMatte()>
  [499] setlocal 17 ............................. tMatte = tImg.createMatte()
  [501] getlocal 15 ............................. <tDestImg>
  [503] getlocal 13 ............................. <tImg>
  [505] getlocal 16 ............................. <tRect>
  [507] getlocal 13 ............................. <tImg>
  [509] getobjprop 176 .......................... <tImg.rect>
  [511] pushsymb 219 ............................ <#maskImage>
  [513] getlocal 17 ............................. <tMatte>
  [515] pushsymb 179 ............................ <#ink>
  [517] pushint8 41 ............................. <41>
  [519] pushsymb 395 ............................ <#bgColor>
  [522] getlocal 7 .............................. <tColor>
  [524] pusharglist 6 ........................... <[#maskImage: tMatte, #ink: 41, #bgColor: tColor]>
  [526] pushproplist ............................ <[#maskImage: tMatte, #ink: 41, #bgColor: tColor]>
  [527] pusharglistnoret 5 ...................... <tDestImg, tImg, tRect, tImg.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tColor]>
  [529] objcall 180 ............................. tDestImg.copyPixels(tImg, tRect, tImg.rect, [#maskImage: tMatte, #ink: 41, #bgColor: tColor])
  [531] getlocal 14 ............................. <tElem>
  [533] getlocal 15 ............................. <tDestImg>
  [535] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [537] objcall 181 ............................. tElem.feedImage(tDestImg)
  [539] jmp [562] ............................... next repeat
  [542] getparam 0 .............................. <me>
  [544] pushcons 26 ............................. <"Wall member not found:">
  [546] pushcons 27 ............................. <"catalog_spaces_floor">
  [548] joinpadstr .............................. <"Wall member not found:" && "catalog_spaces_floor">
  [549] getparam 1 .............................. <ttype>
  [551] joinstr ................................. <"Wall member not found:" && "catalog_spaces_floor" & ttype>
  [552] pushcons 24 ............................. <"_">
  [554] joinstr ................................. <"Wall member not found:" && "catalog_spaces_floor" & ttype & "_">
  [555] getlocal 10 ............................. <tPiece>
  [557] joinstr ................................. <"Wall member not found:" && "catalog_spaces_floor" & ttype & "_" & tPiece>
  [558] pusharglistnoret 2 ...................... <me, "Wall member not found:" && "catalog_spaces_floor" & ttype & "_" & tPiece>
  [560] extcall 44 .............................. error(me, "Wall member not found:" && "catalog_spaces_floor" & ttype & "_" & tPiece)
  [562] pushint8 1
  [564] add
  [565] endrepeat [365]
  [567] pop 3
  [569] getlocal 2 .............................. <tDelim>
  [571] setmovieprop 157 ........................ the itemDelimiter = tDelim
  [573] pushint8 1 .............................. <1>
  [575] pusharglistnoret 1 ...................... <1>
  [577] extcall 43 .............................. return 1
  [579] ret
end

on eventProc me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 100 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [ 21] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] pushcons 28 ............................. <"close">
  [ 12] eq ...................................... <tSprID = "close">
  [ 13] jmpifz [ 21] ............................ if tSprID = "close" then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 43 .............................. return 0
  [ 21] getparam 1 .............................. <tEvent>
  [ 23] pushsymb 147 ............................ <#mouseDown>
  [ 25] eq ...................................... <tEvent = #mouseDown>
  [ 26] jmpifz [280] ............................ if tEvent = #mouseDown then
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] peek 0 .................................. case tSprID of
  [ 33] pushcons 29 ............................. <"ctlg_wall_pattern_prev">
  [ 35] eq
  [ 36] jmpifz [ 54] ............................ (case) "ctlg_wall_pattern_prev":
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 16 ............................. <"pattern">
  [ 43] pushint8 1 .............................. <1>
  [ 45] inv ..................................... <-1>
  [ 46] pusharglistnoret 3 ...................... <me, "pattern", -1>
  [ 48] objcall 447 ............................. me.setWallPaper("pattern", -1)
  [ 51] jmp [278]
  [ 54] peek 0
  [ 56] pushcons 30 ............................. <"ctlg_wall_pattern_next">
  [ 58] eq
  [ 59] jmpifz [ 76] ............................ (case) "ctlg_wall_pattern_next":
  [ 62] getparam 0 .............................. <me>
  [ 64] pushcons 16 ............................. <"pattern">
  [ 66] pushint8 1 .............................. <1>
  [ 68] pusharglistnoret 3 ...................... <me, "pattern", 1>
  [ 70] objcall 447 ............................. me.setWallPaper("pattern", 1)
  [ 73] jmp [278]
  [ 76] peek 0
  [ 78] pushcons 31 ............................. <"ctlg_wall_color_prev">
  [ 80] eq
  [ 81] jmpifz [ 99] ............................ (case) "ctlg_wall_color_prev":
  [ 84] getparam 0 .............................. <me>
  [ 86] pushcons 17 ............................. <"model">
  [ 88] pushint8 1 .............................. <1>
  [ 90] inv ..................................... <-1>
  [ 91] pusharglistnoret 3 ...................... <me, "model", -1>
  [ 93] objcall 447 ............................. me.setWallPaper("model", -1)
  [ 96] jmp [278]
  [ 99] peek 0
  [101] pushcons 32 ............................. <"ctlg_wall_color_next">
  [103] eq
  [104] jmpifz [121] ............................ (case) "ctlg_wall_color_next":
  [107] getparam 0 .............................. <me>
  [109] pushcons 17 ............................. <"model">
  [111] pushint8 1 .............................. <1>
  [113] pusharglistnoret 3 ...................... <me, "model", 1>
  [115] objcall 447 ............................. me.setWallPaper("model", 1)
  [118] jmp [278]
  [121] peek 0
  [123] pushcons 33 ............................. <"ctlg_floor_pattern_prev">
  [125] eq
  [126] jmpifz [144] ............................ (case) "ctlg_floor_pattern_prev":
  [129] getparam 0 .............................. <me>
  [131] pushcons 16 ............................. <"pattern">
  [133] pushint8 1 .............................. <1>
  [135] inv ..................................... <-1>
  [136] pusharglistnoret 3 ...................... <me, "pattern", -1>
  [138] objcall 448 ............................. me.setFloorPattern("pattern", -1)
  [141] jmp [278]
  [144] peek 0
  [146] pushcons 34 ............................. <"ctlg_floor_pattern_next">
  [148] eq
  [149] jmpifz [166] ............................ (case) "ctlg_floor_pattern_next":
  [152] getparam 0 .............................. <me>
  [154] pushcons 16 ............................. <"pattern">
  [156] pushint8 1 .............................. <1>
  [158] pusharglistnoret 3 ...................... <me, "pattern", 1>
  [160] objcall 448 ............................. me.setFloorPattern("pattern", 1)
  [163] jmp [278]
  [166] peek 0
  [168] pushcons 35 ............................. <"ctlg_floor_color_prev">
  [170] eq
  [171] jmpifz [189] ............................ (case) "ctlg_floor_color_prev":
  [174] getparam 0 .............................. <me>
  [176] pushcons 17 ............................. <"model">
  [178] pushint8 1 .............................. <1>
  [180] inv ..................................... <-1>
  [181] pusharglistnoret 3 ...................... <me, "model", -1>
  [183] objcall 448 ............................. me.setFloorPattern("model", -1)
  [186] jmp [278]
  [189] peek 0
  [191] pushcons 36 ............................. <"ctlg_floor_color_next">
  [193] eq
  [194] jmpifz [211] ............................ (case) "ctlg_floor_color_next":
  [197] getparam 0 .............................. <me>
  [199] pushcons 17 ............................. <"model">
  [201] pushint8 1 .............................. <1>
  [203] pusharglistnoret 3 ...................... <me, "model", 1>
  [205] objcall 448 ............................. me.setFloorPattern("model", 1)
  [208] jmp [278]
  [211] peek 0
  [213] pushcons 10 ............................. <"ctlg_buy_wall">
  [215] eq
  [216] jmpifz [241] ............................ (case) "ctlg_buy_wall":
  [219] pushsymb 296 ............................ <#catalogue>
  [222] pusharglist 1 ........................... <#catalogue>
  [224] extcall 120 ............................. <getThread(#catalogue)>
  [226] pusharglist 1 ........................... <getThread(#catalogue)>
  [228] objcall 121 ............................. <getThread(#catalogue).getComponent()>
  [230] getprop 455 ............................. <pWallProps>
  [233] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pWallProps>
  [235] objcall 297 ............................. getThread(#catalogue).getComponent().checkProductOrder(pWallProps)
  [238] jmp [278]
  [241] peek 0
  [243] pushcons 11 ............................. <"ctlg_buy_floor">
  [245] eq
  [246] jmpifz [271] ............................ (case) "ctlg_buy_floor":
  [249] pushsymb 296 ............................ <#catalogue>
  [252] pusharglist 1 ........................... <#catalogue>
  [254] extcall 120 ............................. <getThread(#catalogue)>
  [256] pusharglist 1 ........................... <getThread(#catalogue)>
  [258] objcall 121 ............................. <getThread(#catalogue).getComponent()>
  [260] getprop 456 ............................. <pFloorProps>
  [263] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pFloorProps>
  [265] objcall 297 ............................. getThread(#catalogue).getComponent().checkProductOrder(pFloorProps)
  [268] jmp [278] ............................... (case) otherwise:
  [271] pop 1
  [273] pushzero ................................ <0>
  [274] pusharglistnoret 1 ...................... <0>
  [276] extcall 43 .............................. return 0
  [278] pop 1 ................................... end case
  [280] pushint8 1 .............................. <1>
  [282] pusharglistnoret 1 ...................... <1>
  [284] extcall 43 .............................. return 1
  [286] ret
end
