property pPageData, pSmallImg, pSelectedOrderNum, pSelectedColorNum, pSelectedProduct, pLastProductNum, pNumOfColorBoxies, pCurrentProductNum, pPetType, pPetTemplateObj, pPetRacesList, pNameCheckPending

on construct me
  [  0] pushsymb 296 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 120 ............................. <getThread(#catalogue)>
  [  7] pusharglist 1 ........................... <getThread(#catalogue)>
  [  9] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 11] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 13] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 15] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 17] getlocal 0 .............................. <tCataloguePage>
  [ 19] not ..................................... <not tCataloguePage>
  [ 20] jmpifz [ 37] ............................ if not tCataloguePage then
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 27] pushsymb 0 .............................. <#construct>
  [ 29] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #construct>
  [ 31] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #construct)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #construct)>
  [ 35] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #construct)
  [ 37] pushcons 1 .............................. <"fuse.object.classes">
  [ 39] pushcons 2 .............................. <RETURN>
  [ 41] pushcons 3 .............................. <"pet">
  [ 43] pusharglist 3 ........................... <"fuse.object.classes", RETURN, "pet">
  [ 45] extcall 502 ............................. <readValueFromField("fuse.object.classes", RETURN, "pet")>
  [ 48] pusharglist 1 ........................... <readValueFromField("fuse.object.classes", RETURN, "pet")>
  [ 50] extcall 80 .............................. <value(readValueFromField("fuse.object.classes", RETURN, "pet"))>
  [ 52] setlocal 1 .............................. tPetClass = value(readValueFromField("fuse.object.classes", RETURN, "pet"))
  [ 54] pushsymb 504 ............................ <#temp>
  [ 57] getlocal 1 .............................. <tPetClass>
  [ 59] pusharglist 2 ........................... <#temp, tPetClass>
  [ 61] extcall 42 .............................. <createObject(#temp, tPetClass)>
  [ 63] setprop 503 ............................. pPetTemplateObj = createObject(#temp, tPetClass)
  [ 66] pusharglist 0 ........................... <[:]>
  [ 68] pushproplist ............................ <[:]>
  [ 69] setprop 475 ............................. pPageData = [:]
  [ 72] pusharglist 0 ........................... <[:]>
  [ 74] pushproplist ............................ <[:]>
  [ 75] setprop 505 ............................. pPetRacesList = [:]
  [ 78] pushzero ................................ <0>
  [ 79] setlocal 2 .............................. i = 0
  [ 81] pushint8 1 .............................. <1>
  [ 83] jmpifz [395] ............................ repeat while 1
  [ 86] pushcons 4 .............................. <"pet_race_">
  [ 88] getlocal 2 .............................. <i>
  [ 90] joinstr ................................. <"pet_race_" & i>
  [ 91] pushcons 5 .............................. <"_000">
  [ 93] joinstr ................................. <"pet_race_" & i & "_000">
  [ 94] pusharglist 1 ........................... <"pet_race_" & i & "_000">
  [ 96] extcall 154 ............................. <textExists("pet_race_" & i & "_000")>
  [ 98] jmpifz [382] ............................ if textExists("pet_race_" & i & "_000") then / else
  [101] getlocal 2 .............................. <i>
  [103] pusharglist 1 ........................... <i>
  [105] extcall 89 .............................. <string(i)>
  [107] setlocal 3 .............................. tPetType = string(i)
  [109] pusharglist 0 ........................... <[]>
  [111] pushlist ................................ <[]>
  [112] setlocal 4 .............................. tTempRaces = []
  [114] getlocal 4 .............................. <tTempRaces>
  [116] pushcons 6 .............................. <"000">
  [118] pusharglistnoret 2 ...................... <tTempRaces, "000">
  [120] objcall 340 ............................. tTempRaces.add("000")
  [123] pushint8 1 .............................. <1>
  [125] setlocal 5 .............................. f = 1
  [127] pushint8 1 .............................. <1>
  [129] jmpifz [379] ............................ repeat while 1
  [132] getlocal 5 .............................. <f>
  [134] pusharglist 1 ........................... <f>
  [136] extcall 89 .............................. <string(f)>
  [138] getobjprop 193 .......................... <string(f).length>
  [140] pushint8 1 .............................. <1>
  [142] eq ...................................... <string(f).length = 1>
  [143] jmpifz [156] ............................ if string(f).length = 1 then / else
  [146] pushcons 7 .............................. <"00">
  [148] getlocal 5 .............................. <f>
  [150] joinstr ................................. <"00" & f>
  [151] setlocal 6 .............................. tTemp = "00" & f
  [153] jmp [188]
  [156] getlocal 5 .............................. <f>
  [158] pusharglist 1 ........................... <f>
  [160] extcall 89 .............................. <string(f)>
  [162] getobjprop 193 .......................... <string(f).length>
  [164] pushint8 2 .............................. <2>
  [166] eq ...................................... <string(f).length = 2>
  [167] jmpifz [180] ............................ if string(f).length = 2 then / else
  [170] pushcons 8 .............................. <"0">
  [172] getlocal 5 .............................. <f>
  [174] joinstr ................................. <"0" & f>
  [175] setlocal 6 .............................. tTemp = "0" & f
  [177] jmp [188]
  [180] getlocal 5 .............................. <f>
  [182] pusharglist 1 ........................... <f>
  [184] extcall 89 .............................. <string(f)>
  [186] setlocal 6 .............................. tTemp = string(f)
  [188] pushcons 4 .............................. <"pet_race_">
  [190] getlocal 2 .............................. <i>
  [192] joinstr ................................. <"pet_race_" & i>
  [193] pushcons 9 .............................. <"_">
  [195] joinstr ................................. <"pet_race_" & i & "_">
  [196] getlocal 6 .............................. <tTemp>
  [198] joinstr ................................. <"pet_race_" & i & "_" & tTemp>
  [199] pusharglist 1 ........................... <"pet_race_" & i & "_" & tTemp>
  [201] extcall 154 ............................. <textExists("pet_race_" & i & "_" & tTemp)>
  [203] jmpifz [218] ............................ if textExists("pet_race_" & i & "_" & tTemp) then / else
  [206] getlocal 4 .............................. <tTempRaces>
  [208] getlocal 6 .............................. <tTemp>
  [210] pusharglistnoret 2 ...................... <tTempRaces, tTemp>
  [212] objcall 340 ............................. tTempRaces.add(tTemp)
  [215] jmp [370]
  [218] pusharglist 0 ........................... <[]>
  [220] pushlist ................................ <[]>
  [221] setlocal 7 .............................. tColorList = []
  [223] pushcons 10 ............................. <"petColors_">
  [225] getlocal 3 .............................. <tPetType>
  [227] joinstr ................................. <"petColors_" & tPetType>
  [228] pusharglist 1 ........................... <"petColors_" & tPetType>
  [230] extcall 90 .............................. <memberExists("petColors_" & tPetType)>
  [232] jmpifz [357] ............................ if memberExists("petColors_" & tPetType) then / else
  [235] pushcons 10 ............................. <"petColors_">
  [237] getlocal 3 .............................. <tPetType>
  [239] joinstr ................................. <"petColors_" & tPetType>
  [240] pusharglist 1 ........................... <"petColors_" & tPetType>
  [242] extcall 194 ............................. <getmemnum("petColors_" & tPetType)>
  [244] pusharglist 1 ........................... <getmemnum("petColors_" & tPetType)>
  [246] extcall 175 ............................. <member(getmemnum("petColors_" & tPetType))>
  [248] getobjprop 506 .......................... <member(getmemnum("petColors_" & tPetType)).text>
  [251] setlocal 8 .............................. tColorTxt = member(getmemnum("petColors_" & tPetType)).text
  [253] pushint8 1 .............................. <1>
  [255] setlocal 9
  [257] getlocal 9
  [259] getlocal 8 .............................. <tColorTxt>
  [261] pushsymb 356 ............................ <#line>
  [264] pusharglist 2 ........................... <tColorTxt, #line>
  [266] objcall 156 ............................. <tColorTxt.line.count>
  [268] lteq
  [269] jmpifz [331] ............................ repeat with tLine = 1 to tColorTxt.line.count
  [272] getlocal 8 .............................. <tColorTxt>
  [274] pushsymb 356 ............................ <#line>
  [277] getlocal 9 .............................. <tLine>
  [279] pusharglist 3 ........................... <tColorTxt, #line, tLine>
  [281] objcall 362 ............................. <tColorTxt.line[tLine]>
  [284] getobjprop 193 .......................... <tColorTxt.line[tLine].length>
  [286] pushint8 7 .............................. <7>
  [288] eq ...................................... <tColorTxt.line[tLine].length = 7>
  [289] jmpifz [322] ............................ if tColorTxt.line[tLine].length = 7 then
  [292] getlocal 7 .............................. <tColorList>
  [294] getlocal 8 .............................. <tColorTxt>
  [296] pushsymb 356 ............................ <#line>
  [299] getlocal 9 .............................. <tLine>
  [301] pusharglist 3 ........................... <tColorTxt, #line, tLine>
  [303] objcall 362 ............................. <tColorTxt.line[tLine]>
  [306] pushsymb 341 ............................ <#char>
  [309] pushint8 2 .............................. <2>
  [311] pushint8 7 .............................. <7>
  [313] pusharglist 4 ........................... <tColorTxt.line[tLine], #char, 2, 7>
  [315] objcall 159 ............................. <tColorTxt.line[tLine].char[2..7]>
  [317] pusharglistnoret 2 ...................... <tColorList, tColorTxt.line[tLine].char[2..7]>
  [319] objcall 340 ............................. tColorList.add(tColorTxt.line[tLine].char[2..7])
  [322] pushint8 1
  [324] getlocal 9
  [326] add
  [327] setlocal 9
  [329] endrepeat [257]
  [331] getprop 505 ............................. <pPetRacesList>
  [334] getlocal 3 .............................. <tPetType>
  [336] pushcons 11 ............................. <"races">
  [338] getlocal 4 .............................. <tTempRaces>
  [340] pushcons 12 ............................. <"colors">
  [342] getlocal 7 .............................. <tColorList>
  [344] pusharglist 4 ........................... <["races": tTempRaces, "colors": tColorList]>
  [346] pushproplist ............................ <["races": tTempRaces, "colors": tColorList]>
  [347] pusharglistnoret 3 ...................... <pPetRacesList, tPetType, ["races": tTempRaces, "colors": tColorList]>
  [349] objcall 236 ............................. pPetRacesList[tPetType] = ["races": tTempRaces, "colors": tColorList]
  [351] jmp [379] ............................... exit repeat
  [354] jmp [370]
  [357] getparam 0 .............................. <me>
  [359] pushcons 13 ............................. <"Couldn't find pet colors member!">
  [361] pushsymb 0 .............................. <#construct>
  [363] pusharglistnoret 3 ...................... <me, "Couldn't find pet colors member!", #construct>
  [365] extcall 44 .............................. error(me, "Couldn't find pet colors member!", #construct)
  [367] jmp [379] ............................... exit repeat
  [370] getlocal 5 .............................. <f>
  [372] pushint8 1 .............................. <1>
  [374] add ..................................... <f + 1>
  [375] setlocal 5 .............................. f = f + 1
  [377] endrepeat [127]
  [379] jmp [385]
  [382] jmp [395] ............................... exit repeat
  [385] getlocal 2 .............................. <i>
  [387] pushint8 1 .............................. <1>
  [389] add ..................................... <i + 1>
  [390] setlocal 2 .............................. i = i + 1
  [392] endrepeat [ 81]
  [395] getparam 0 .............................. <me>
  [397] pushint8 1 .............................. <1>
  [399] pusharglistnoret 2 ...................... <me, 1>
  [401] objcall 354 ............................. me.regMsgList(1)
  [404] pushint8 1 .............................. <1>
  [406] pusharglistnoret 1 ...................... <1>
  [408] extcall 43 .............................. return 1
  [410] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 354 ............................. me.regMsgList(0)
  [  8] pushint8 1 .............................. <1>
  [ 10] pusharglistnoret 1 ...................... <1>
  [ 12] extcall 43 .............................. return 1
  [ 14] ret
end

on define me, tPageProps
  [  0] getparam 1 .............................. <tPageProps>
  [  2] getobjprop 135 .......................... <tPageProps.ilk>
  [  4] pushsymb 136 ............................ <#propList>
  [  6] nteq .................................... <tPageProps.ilk <> #propList>
  [  7] jmpifz [ 24] ............................ if tPageProps.ilk <> #propList then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 14 ............................. <"Incorrect Catalogue page data">
  [ 14] pushsymb 160 ............................ <#define>
  [ 16] pusharglist 3 ........................... <me, "Incorrect Catalogue page data", #define>
  [ 18] extcall 44 .............................. <error(me, "Incorrect Catalogue page data", #define)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Incorrect Catalogue page data", #define)>
  [ 22] extcall 43 .............................. return error(me, "Incorrect Catalogue page data", #define)
  [ 24] getparam 1 .............................. <tPageProps>
  [ 26] pushcons 15 ............................. <"productList">
  [ 28] pusharglist 2 ........................... <tPageProps, "productList">
  [ 30] objcall 82 .............................. <tPageProps["productList"]>
  [ 32] pusharglist 1 ........................... <tPageProps["productList"]>
  [ 34] extcall 139 ............................. <voidp(tPageProps["productList"])>
  [ 36] not ..................................... <not voidp(tPageProps["productList"])>
  [ 37] jmpifz [354] ............................ if not voidp(tPageProps["productList"]) then
  [ 40] getparam 1 .............................. <tPageProps>
  [ 42] pushcons 15 ............................. <"productList">
  [ 44] pusharglist 2 ........................... <tPageProps, "productList">
  [ 46] objcall 82 .............................. <tPageProps["productList"]>
  [ 48] setlocal 0 .............................. tProducts = tPageProps["productList"]
  [ 50] pushint8 1 .............................. <1>
  [ 52] setlocal 1
  [ 54] getlocal 1
  [ 56] getlocal 0 .............................. <tProducts>
  [ 58] getobjprop 156 .......................... <tProducts.count>
  [ 60] lteq
  [ 61] jmpifz [354] ............................ repeat with f = 1 to tProducts.count
  [ 64] getlocal 0 .............................. <tProducts>
  [ 66] getlocal 1 .............................. <f>
  [ 68] pusharglist 2 ........................... <tProducts, f>
  [ 70] objcall 82 .............................. <tProducts[f]>
  [ 72] pushcons 16 ............................. <"purchaseCode">
  [ 74] pusharglist 2 ........................... <tProducts[f], "purchaseCode">
  [ 76] objcall 82 .............................. <tProducts[f]["purchaseCode"]>
  [ 78] pusharglist 1 ........................... <tProducts[f]["purchaseCode"]>
  [ 80] extcall 139 ............................. <voidp(tProducts[f]["purchaseCode"])>
  [ 82] not ..................................... <not voidp(tProducts[f]["purchaseCode"])>
  [ 83] jmpifz [344] ............................ if not voidp(tProducts[f]["purchaseCode"]) then
  [ 86] getlocal 0 .............................. <tProducts>
  [ 88] getlocal 1 .............................. <f>
  [ 90] pusharglist 2 ........................... <tProducts, f>
  [ 92] objcall 82 .............................. <tProducts[f]>
  [ 94] pushcons 16 ............................. <"purchaseCode">
  [ 96] pusharglist 2 ........................... <tProducts[f], "purchaseCode">
  [ 98] objcall 82 .............................. <tProducts[f]["purchaseCode"]>
  [100] setlocal 2 .............................. tPurchaseCode = tProducts[f]["purchaseCode"]
  [102] getlocal 2 .............................. <tPurchaseCode>
  [104] pushsymb 341 ............................ <#char>
  [107] getlocal 2 .............................. <tPurchaseCode>
  [109] getobjprop 193 .......................... <tPurchaseCode.length>
  [111] pusharglist 3 ........................... <tPurchaseCode, #char, tPurchaseCode.length>
  [113] objcall 159 ............................. <tPurchaseCode.char[tPurchaseCode.length]>
  [115] setlocal 3 .............................. tPetType = tPurchaseCode.char[tPurchaseCode.length]
  [117] pushint8 1 .............................. <1>
  [119] setlocal 4
  [121] getlocal 4
  [123] pushint8 5 .............................. <5>
  [125] lteq
  [126] jmpifz [344] ............................ repeat with tPetCount = 1 to 5
  [129] getprop 505 ............................. <pPetRacesList>
  [132] getlocal 3 .............................. <tPetType>
  [134] pusharglist 2 ........................... <pPetRacesList, tPetType>
  [136] objcall 82 .............................. <pPetRacesList[tPetType]>
  [138] pusharglist 1 ........................... <pPetRacesList[tPetType]>
  [140] extcall 139 ............................. <voidp(pPetRacesList[tPetType])>
  [142] not ..................................... <not voidp(pPetRacesList[tPetType])>
  [143] jmpifz [335] ............................ if not voidp(pPetRacesList[tPetType]) then
  [146] getprop 505 ............................. <pPetRacesList>
  [149] getlocal 3 .............................. <tPetType>
  [151] pusharglist 2 ........................... <pPetRacesList, tPetType>
  [153] objcall 82 .............................. <pPetRacesList[tPetType]>
  [155] pushcons 11 ............................. <"races">
  [157] pusharglist 2 ........................... <pPetRacesList[tPetType], "races">
  [159] objcall 82 .............................. <pPetRacesList[tPetType]["races"]>
  [161] getobjprop 156 .......................... <pPetRacesList[tPetType]["races"].count>
  [163] setlocal 5 .............................. tCount = pPetRacesList[tPetType]["races"].count
  [165] getlocal 5 .............................. <tCount>
  [167] pushzero ................................ <0>
  [168] gt ...................................... <tCount > 0>
  [169] jmpifz [203] ............................ if tCount > 0 then / else
  [172] getprop 505 ............................. <pPetRacesList>
  [175] getlocal 3 .............................. <tPetType>
  [177] pusharglist 2 ........................... <pPetRacesList, tPetType>
  [179] objcall 82 .............................. <pPetRacesList[tPetType]>
  [181] pushcons 11 ............................. <"races">
  [183] pusharglist 2 ........................... <pPetRacesList[tPetType], "races">
  [185] objcall 82 .............................. <pPetRacesList[tPetType]["races"]>
  [187] getlocal 5 .............................. <tCount>
  [189] pusharglist 1 ........................... <tCount>
  [191] extcall 512 ............................. <random(tCount)>
  [194] pusharglist 2 ........................... <pPetRacesList[tPetType]["races"], random(tCount)>
  [196] objcall 82 .............................. <pPetRacesList[tPetType]["races"][random(tCount)]>
  [198] setlocal 6 .............................. tPetRace = pPetRacesList[tPetType]["races"][random(tCount)]
  [200] jmp [207]
  [203] pushcons 17 ............................. <EMPTY>
  [205] setlocal 6 .............................. tPetRace = EMPTY
  [207] getprop 505 ............................. <pPetRacesList>
  [210] getlocal 3 .............................. <tPetType>
  [212] pusharglist 2 ........................... <pPetRacesList, tPetType>
  [214] objcall 82 .............................. <pPetRacesList[tPetType]>
  [216] pushcons 12 ............................. <"colors">
  [218] pusharglist 2 ........................... <pPetRacesList[tPetType], "colors">
  [220] objcall 82 .............................. <pPetRacesList[tPetType]["colors"]>
  [222] getobjprop 156 .......................... <pPetRacesList[tPetType]["colors"].count>
  [224] setlocal 5 .............................. tCount = pPetRacesList[tPetType]["colors"].count
  [226] getlocal 5 .............................. <tCount>
  [228] pushzero ................................ <0>
  [229] gt ...................................... <tCount > 0>
  [230] jmpifz [264] ............................ if tCount > 0 then / else
  [233] getprop 505 ............................. <pPetRacesList>
  [236] getlocal 3 .............................. <tPetType>
  [238] pusharglist 2 ........................... <pPetRacesList, tPetType>
  [240] objcall 82 .............................. <pPetRacesList[tPetType]>
  [242] pushcons 12 ............................. <"colors">
  [244] pusharglist 2 ........................... <pPetRacesList[tPetType], "colors">
  [246] objcall 82 .............................. <pPetRacesList[tPetType]["colors"]>
  [248] getlocal 5 .............................. <tCount>
  [250] pusharglist 1 ........................... <tCount>
  [252] extcall 512 ............................. <random(tCount)>
  [255] pusharglist 2 ........................... <pPetRacesList[tPetType]["colors"], random(tCount)>
  [257] objcall 82 .............................. <pPetRacesList[tPetType]["colors"][random(tCount)]>
  [259] setlocal 7 .............................. tColor = pPetRacesList[tPetType]["colors"][random(tCount)]
  [261] jmp [268]
  [264] pushcons 17 ............................. <EMPTY>
  [266] setlocal 7 .............................. tColor = EMPTY
  [268] getlocal 0 .............................. <tProducts>
  [270] getlocal 1 .............................. <f>
  [272] pusharglist 2 ........................... <tProducts, f>
  [274] objcall 82 .............................. <tProducts[f]>
  [276] pusharglist 1 ........................... <tProducts[f]>
  [278] objcall 138 ............................. <tProducts[f].duplicate()>
  [280] setlocal 8 .............................. tProductData = tProducts[f].duplicate()
  [282] getlocal 8 .............................. <tProductData>
  [284] pushcons 18 ............................. <"petType">
  [286] getlocal 3 .............................. <tPetType>
  [288] pusharglistnoret 3 ...................... <tProductData, "petType", tPetType>
  [290] objcall 363 ............................. tProductData.addProp("petType", tPetType)
  [293] getlocal 8 .............................. <tProductData>
  [295] pushcons 19 ............................. <"petRace">
  [297] getlocal 6 .............................. <tPetRace>
  [299] pusharglistnoret 3 ...................... <tProductData, "petRace", tPetRace>
  [301] objcall 363 ............................. tProductData.addProp("petRace", tPetRace)
  [304] getlocal 8 .............................. <tProductData>
  [306] pushcons 20 ............................. <"petColor">
  [308] getlocal 7 .............................. <tColor>
  [310] pusharglistnoret 3 ...................... <tProductData, "petColor", tColor>
  [312] objcall 363 ............................. tProductData.addProp("petColor", tColor)
  [315] getprop 475 ............................. <pPageData>
  [318] pushcons 21 ............................. <"pet_">
  [320] getlocal 3 .............................. <tPetType>
  [322] joinstr ................................. <"pet_" & tPetType>
  [323] pushcons 9 .............................. <"_">
  [325] joinstr ................................. <"pet_" & tPetType & "_">
  [326] getlocal 4 .............................. <tPetCount>
  [328] joinstr ................................. <"pet_" & tPetType & "_" & tPetCount>
  [329] getlocal 8 .............................. <tProductData>
  [331] pusharglistnoret 3 ...................... <pPageData, "pet_" & tPetType & "_" & tPetCount, tProductData>
  [333] objcall 236 ............................. pPageData["pet_" & tPetType & "_" & tPetCount] = tProductData
  [335] pushint8 1
  [337] getlocal 4
  [339] add
  [340] setlocal 4
  [342] endrepeat [121]
  [344] pushint8 1
  [346] getlocal 1
  [348] add
  [349] setlocal 1
  [351] endrepeat [ 54]
  [354] getparam 0 .............................. <me>
  [356] pushint8 1 .............................. <1>
  [358] pusharglistnoret 2 ...................... <me, 1>
  [360] localcall 6 ............................. selectProduct(me, 1)
  [362] ret
end

on petNameApproved me
  [  0] getprop 150 ............................. <pSelectedProduct>
  [  2] getobjprop 135 .......................... <pSelectedProduct.ilk>
  [  4] pushsymb 136 ............................ <#propList>
  [  6] eq ...................................... <pSelectedProduct.ilk = #propList>
  [  7] jmpifz [ 28] ............................ if pSelectedProduct.ilk = #propList then
  [ 10] pushsymb 296 ............................ <#catalogue>
  [ 13] pusharglist 1 ........................... <#catalogue>
  [ 15] extcall 120 ............................. <getThread(#catalogue)>
  [ 17] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 19] objcall 121 ............................. <getThread(#catalogue).getComponent()>
  [ 21] getprop 150 ............................. <pSelectedProduct>
  [ 23] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pSelectedProduct>
  [ 25] objcall 297 ............................. getThread(#catalogue).getComponent().checkProductOrder(pSelectedProduct)
  [ 28] ret
end

on petNameUnacceptable me
  [  0] pushsymb 296 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 120 ............................. <getThread(#catalogue)>
  [  7] pusharglist 1 ........................... <getThread(#catalogue)>
  [  9] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 11] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 13] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 15] setlocal 0 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 17] getlocal 0 .............................. <tWndObj>
  [ 19] pushcons 22 ............................. <"dedication_text">
  [ 21] pusharglist 2 ........................... <tWndObj, "dedication_text">
  [ 23] objcall 106 ............................. <tWndObj.elementExists("dedication_text")>
  [ 25] jmpifz [ 42] ............................ if tWndObj.elementExists("dedication_text") then
  [ 28] getlocal 0 .............................. <tWndObj>
  [ 30] pushcons 22 ............................. <"dedication_text">
  [ 32] pusharglist 2 ........................... <tWndObj, "dedication_text">
  [ 34] objcall 97 .............................. <tWndObj.getElement("dedication_text")>
  [ 36] pushcons 17 ............................. <EMPTY>
  [ 38] pusharglistnoret 2 ...................... <tWndObj.getElement("dedication_text"), EMPTY>
  [ 40] objcall 98 .............................. tWndObj.getElement("dedication_text").setText(EMPTY)
  [ 42] pushsymb 495 ............................ <#alert>
  [ 45] pushsymb 496 ............................ <#msg>
  [ 48] pushcons 23 ............................. <"catalog_pet_unacceptable">
  [ 50] pushsymb 237 ............................ <#id>
  [ 52] pushcons 24 ............................. <"ctlg_petunacceptable">
  [ 54] pusharglist 4 ........................... <[#msg: "catalog_pet_unacceptable", #id: "ctlg_petunacceptable"]>
  [ 56] pushproplist ............................ <[#msg: "catalog_pet_unacceptable", #id: "ctlg_petunacceptable"]>
  [ 57] pusharglist 2 ........................... <#alert, [#msg: "catalog_pet_unacceptable", #id: "ctlg_petunacceptable"]>
  [ 59] extcall 494 ............................. <executeMessage(#alert, [#msg: "catalog_pet_unacceptable", #id: "ctlg_petunacceptable"])>
  [ 62] pusharglistnoret 1 ...................... <executeMessage(#alert, [#msg: "catalog_pet_unacceptable", #id: "ctlg_petunacceptable"])>
  [ 64] extcall 43 .............................. return executeMessage(#alert, [#msg: "catalog_pet_unacceptable", #id: "ctlg_petunacceptable"])
  [ 66] ret
end

on definePet me, tProps
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tdata = [:]
  [  5] getlocal 0 .............................. <tdata>
  [  7] pushsymb 86 ............................. <#name>
  [  9] pushcons 25 ............................. <"PetTemplate">
  [ 11] pusharglistnoret 3 ...................... <tdata, #name, "PetTemplate">
  [ 13] objcall 236 ............................. tdata[#name] = "PetTemplate"
  [ 15] getlocal 0 .............................. <tdata>
  [ 17] pushsymb 238 ............................ <#class>
  [ 19] pushcons 26 ............................. <"Pet Class">
  [ 21] pusharglistnoret 3 ...................... <tdata, #class, "Pet Class">
  [ 23] objcall 236 ............................. tdata[#class] = "Pet Class"
  [ 25] getlocal 0 .............................. <tdata>
  [ 27] pushsymb 240 ............................ <#direction>
  [ 29] pushint8 1 .............................. <1>
  [ 31] pushint8 1 .............................. <1>
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglist 3 ........................... <[1, 1, 1]>
  [ 37] pushlist ................................ <[1, 1, 1]>
  [ 38] pusharglistnoret 3 ...................... <tdata, #direction, [1, 1, 1]>
  [ 40] objcall 236 ............................. tdata[#direction] = [1, 1, 1]
  [ 42] getlocal 0 .............................. <tdata>
  [ 44] pushsymb 515 ............................ <#x>
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 3 ...................... <tdata, #x, 1>
  [ 51] objcall 236 ............................. tdata[#x] = 1
  [ 53] getlocal 0 .............................. <tdata>
  [ 55] pushsymb 516 ............................ <#y>
  [ 58] pushint8 1 .............................. <1>
  [ 60] pusharglistnoret 3 ...................... <tdata, #y, 1>
  [ 62] objcall 236 ............................. tdata[#y] = 1
  [ 64] getlocal 0 .............................. <tdata>
  [ 66] pushsymb 517 ............................ <#h>
  [ 69] pushint8 1 .............................. <1>
  [ 71] pusharglistnoret 3 ...................... <tdata, #h, 1>
  [ 73] objcall 236 ............................. tdata[#h] = 1
  [ 75] getlocal 0 .............................. <tdata>
  [ 77] pushsymb 518 ............................ <#figure>
  [ 80] getparam 1 .............................. <tProps>
  [ 82] pushcons 18 ............................. <"petType">
  [ 84] pusharglist 2 ........................... <tProps, "petType">
  [ 86] objcall 82 .............................. <tProps["petType"]>
  [ 88] getparam 1 .............................. <tProps>
  [ 90] pushcons 19 ............................. <"petRace">
  [ 92] pusharglist 2 ........................... <tProps, "petRace">
  [ 94] objcall 82 .............................. <tProps["petRace"]>
  [ 96] joinpadstr .............................. <tProps["petType"] && tProps["petRace"]>
  [ 97] getparam 1 .............................. <tProps>
  [ 99] pushcons 20 ............................. <"petColor">
  [101] pusharglist 2 ........................... <tProps, "petColor">
  [103] objcall 82 .............................. <tProps["petColor"]>
  [105] joinpadstr .............................. <tProps["petType"] && tProps["petRace"] && tProps["petColor"]>
  [106] pusharglistnoret 3 ...................... <tdata, #figure, tProps["petType"] && tProps["petRace"] && tProps["petColor"]>
  [108] objcall 236 ............................. tdata[#figure] = tProps["petType"] && tProps["petRace"] && tProps["petColor"]
  [110] getprop 503 ............................. <pPetTemplateObj>
  [113] pusharglist 1 ........................... <pPetTemplateObj>
  [115] extcall 139 ............................. <voidp(pPetTemplateObj)>
  [117] not ..................................... <not voidp(pPetTemplateObj)>
  [118] jmpifz [140] ............................ if not voidp(pPetTemplateObj) then / else
  [121] getprop 503 ............................. <pPetTemplateObj>
  [124] getlocal 0 .............................. <tdata>
  [126] pusharglistnoret 2 ...................... <pPetTemplateObj, tdata>
  [128] objcall 519 ............................. pPetTemplateObj.setup(tdata)
  [131] pushint8 1 .............................. <1>
  [133] pusharglistnoret 1 ...................... <1>
  [135] extcall 43 .............................. return 1
  [137] jmp [145]
  [140] pushzero ................................ <0>
  [141] pusharglistnoret 1 ...................... <0>
  [143] extcall 43 .............................. return 0
  [145] ret
end

on selectProduct me, tOrderNum
  [  0] pushsymb 296 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 120 ............................. <getThread(#catalogue)>
  [  7] pusharglist 1 ........................... <getThread(#catalogue)>
  [  9] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 11] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 13] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 15] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 17] getlocal 0 .............................. <tCataloguePage>
  [ 19] not ..................................... <not tCataloguePage>
  [ 20] jmpifz [ 37] ............................ if not tCataloguePage then
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 27] pushsymb 27 ............................. <#selectProduct>
  [ 29] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #selectProduct>
  [ 31] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #selectProduct)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #selectProduct)>
  [ 35] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #selectProduct)
  [ 37] getlocal 0 .............................. <tCataloguePage>
  [ 39] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 41] getparam 1 .............................. <tOrderNum>
  [ 43] pusharglist 1 ........................... <tOrderNum>
  [ 45] extcall 290 ............................. <integerp(tOrderNum)>
  [ 48] not ..................................... <not integerp(tOrderNum)>
  [ 49] jmpifz [ 66] ............................ if not integerp(tOrderNum) then
  [ 52] getparam 0 .............................. <me>
  [ 54] pushcons 27 ............................. <"Incorrect value">
  [ 56] pushsymb 27 ............................. <#selectProduct>
  [ 58] pusharglist 3 ........................... <me, "Incorrect value", #selectProduct>
  [ 60] extcall 44 .............................. <error(me, "Incorrect value", #selectProduct)>
  [ 62] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #selectProduct)>
  [ 64] extcall 43 .............................. return error(me, "Incorrect value", #selectProduct)
  [ 66] getprop 475 ............................. <pPageData>
  [ 69] pusharglist 1 ........................... <pPageData>
  [ 71] extcall 139 ............................. <voidp(pPageData)>
  [ 73] jmpifz [ 90] ............................ if voidp(pPageData) then
  [ 76] getparam 0 .............................. <me>
  [ 78] pushcons 28 ............................. <"product not found">
  [ 80] pushsymb 27 ............................. <#selectProduct>
  [ 82] pusharglist 3 ........................... <me, "product not found", #selectProduct>
  [ 84] extcall 44 .............................. <error(me, "product not found", #selectProduct)>
  [ 86] pusharglistnoret 1 ...................... <error(me, "product not found", #selectProduct)>
  [ 88] extcall 43 .............................. return error(me, "product not found", #selectProduct)
  [ 90] getprop 475 ............................. <pPageData>
  [ 93] getobjprop 156 .......................... <pPageData.count>
  [ 95] pushzero ................................ <0>
  [ 96] eq ...................................... <pPageData.count = 0>
  [ 97] jmpifz [104] ............................ if pPageData.count = 0 then
  [100] pusharglistnoret 0 ...................... <>
  [102] extcall 43 .............................. return 
  [104] getparam 1 .............................. <tOrderNum>
  [106] getprop 475 ............................. <pPageData>
  [109] getobjprop 156 .......................... <pPageData.count>
  [111] gt ...................................... <tOrderNum > pPageData.count>
  [112] jmpifz [119] ............................ if tOrderNum > pPageData.count then
  [115] pusharglistnoret 0 ...................... <>
  [117] extcall 43 .............................. return 
  [119] getprop 475 ............................. <pPageData>
  [122] getparam 1 .............................. <tOrderNum>
  [124] pusharglist 2 ........................... <pPageData, tOrderNum>
  [126] objcall 82 .............................. <pPageData[tOrderNum]>
  [128] pushint8 1 .............................. <1>
  [130] pusharglist 2 ........................... <pPageData[tOrderNum], 1>
  [132] objcall 82 .............................. <pPageData[tOrderNum][1]>
  [134] pusharglist 1 ........................... <pPageData[tOrderNum][1]>
  [136] extcall 139 ............................. <voidp(pPageData[tOrderNum][1])>
  [138] jmpifz [145] ............................ if voidp(pPageData[tOrderNum][1]) then
  [141] pusharglistnoret 0 ...................... <>
  [143] extcall 43 .............................. return 
  [145] getprop 475 ............................. <pPageData>
  [148] getparam 1 .............................. <tOrderNum>
  [150] pusharglist 2 ........................... <pPageData, tOrderNum>
  [152] objcall 82 .............................. <pPageData[tOrderNum]>
  [154] setprop 150 ............................. pSelectedProduct = pPageData[tOrderNum]
  [156] pushint8 1 .............................. <1>
  [158] setprop 477 ............................. pSelectedColorNum = 1
  [161] getparam 1 .............................. <tOrderNum>
  [163] setprop 476 ............................. pSelectedOrderNum = tOrderNum
  [166] getparam 0 .............................. <me>
  [168] getprop 150 ............................. <pSelectedProduct>
  [170] pusharglist 2 ........................... <me, pSelectedProduct>
  [172] objcall 500 ............................. <me.definePet(pSelectedProduct)>
  [175] pushint8 1 .............................. <1>
  [177] eq ...................................... <me.definePet(pSelectedProduct) = 1>
  [178] jmpifz [372] ............................ if me.definePet(pSelectedProduct) = 1 then
  [181] pushcons 29 ............................. <"ctlg_teaserimg_1">
  [183] setlocal 2 .............................. tElemID = "ctlg_teaserimg_1"
  [185] getlocal 1 .............................. <tWndObj>
  [187] getlocal 2 .............................. <tElemID>
  [189] pusharglist 2 ........................... <tWndObj, tElemID>
  [191] objcall 106 ............................. <tWndObj.elementExists(tElemID)>
  [193] jmpifz [372] ............................ if tWndObj.elementExists(tElemID) then
  [196] getlocal 1 .............................. <tWndObj>
  [198] getlocal 2 .............................. <tElemID>
  [200] pusharglist 2 ........................... <tWndObj, tElemID>
  [202] objcall 97 .............................. <tWndObj.getElement(tElemID)>
  [204] setlocal 3 .............................. tElem = tWndObj.getElement(tElemID)
  [206] getprop 503 ............................. <pPetTemplateObj>
  [209] pusharglist 1 ........................... <pPetTemplateObj>
  [211] objcall 245 ............................. <pPetTemplateObj.getPicture()>
  [213] setlocal 4 .............................. tImage = pPetTemplateObj.getPicture()
  [215] getlocal 4 .............................. <tImage>
  [217] getobjprop 135 .......................... <tImage.ilk>
  [219] pushsymb 36 ............................. <#image>
  [221] eq ...................................... <tImage.ilk = #image>
  [222] jmpifz [372] ............................ if tImage.ilk = #image then
  [225] getlocal 3 .............................. <tElem>
  [227] pushsymb 36 ............................. <#image>
  [229] pusharglist 2 ........................... <tElem, #image>
  [231] objcall 174 ............................. <tElem.getProperty(#image)>
  [233] setlocal 5 .............................. tDestImg = tElem.getProperty(#image)
  [235] getlocal 4 .............................. <tImage>
  [237] setlocal 6 .............................. tSourceImg = tImage
  [239] getlocal 5 .............................. <tDestImg>
  [241] getlocal 5 .............................. <tDestImg>
  [243] getobjprop 176 .......................... <tDestImg.rect>
  [245] pushint16 255 ........................... <255>
  [248] pushint16 255 ........................... <255>
  [251] pushint16 255 ........................... <255>
  [254] pusharglist 3 ........................... <255, 255, 255>
  [256] extcall 53 .............................. <rgb(255, 255, 255)>
  [258] pusharglistnoret 3 ...................... <tDestImg, tDestImg.rect, rgb(255, 255, 255)>
  [260] objcall 195 ............................. tDestImg.fill(tDestImg.rect, rgb(255, 255, 255))
  [262] getlocal 6 .............................. <tSourceImg>
  [264] getobjprop 176 .......................... <tSourceImg.rect>
  [266] pushint8 2 .............................. <2>
  [268] mul ..................................... <tSourceImg.rect * 2>
  [269] setlocal 7 .............................. tSourceRect = tSourceImg.rect * 2
  [271] getlocal 5 .............................. <tDestImg>
  [273] getobjprop 176 .......................... <tDestImg.rect>
  [275] getlocal 7 .............................. <tSourceRect>
  [277] sub ..................................... <tDestImg.rect - tSourceRect>
  [278] setlocal 8 .............................. tdestrect = tDestImg.rect - tSourceRect
  [280] pushint8 14 ............................. <14>
  [282] pushint8 7 .............................. <7>
  [284] inv ..................................... <-7>
  [285] pushint8 14 ............................. <14>
  [287] pushint8 7 .............................. <7>
  [289] inv ..................................... <-7>
  [290] pusharglist 4 ........................... <14, -7, 14, -7>
  [292] extcall 176 ............................. <rect(14, -7, 14, -7)>
  [294] setlocal 9 .............................. tMargins = rect(14, -7, 14, -7)
  [296] getlocal 8 .............................. <tdestrect>
  [298] getobjprop 177 .......................... <tdestrect.width>
  [300] pushint8 2 .............................. <2>
  [302] div ..................................... <tdestrect.width / 2>
  [303] getlocal 8 .............................. <tdestrect>
  [305] getobjprop 178 .......................... <tdestrect.height>
  [307] pushint8 2 .............................. <2>
  [309] div ..................................... <tdestrect.height / 2>
  [310] getlocal 7 .............................. <tSourceRect>
  [312] getobjprop 177 .......................... <tSourceRect.width>
  [314] getlocal 8 .............................. <tdestrect>
  [316] getobjprop 177 .......................... <tdestrect.width>
  [318] pushint8 2 .............................. <2>
  [320] div ..................................... <tdestrect.width / 2>
  [321] add ..................................... <tSourceRect.width + (tdestrect.width / 2)>
  [322] getlocal 8 .............................. <tdestrect>
  [324] getobjprop 178 .......................... <tdestrect.height>
  [326] pushint8 2 .............................. <2>
  [328] div ..................................... <tdestrect.height / 2>
  [329] getlocal 7 .............................. <tSourceRect>
  [331] getobjprop 178 .......................... <tSourceRect.height>
  [333] add ..................................... <(tdestrect.height / 2) + tSourceRect.height>
  [334] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tSourceRect.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceRect.height>
  [336] extcall 176 ............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceRect.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceRect.height)>
  [338] getlocal 9 .............................. <tMargins>
  [340] add ..................................... <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceRect.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceRect.height) + tMargins>
  [341] setlocal 8 .............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tSourceRect.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceRect.height) + tMargins
  [343] getlocal 5 .............................. <tDestImg>
  [345] getlocal 6 .............................. <tSourceImg>
  [347] getlocal 8 .............................. <tdestrect>
  [349] getlocal 6 .............................. <tSourceImg>
  [351] getobjprop 176 .......................... <tSourceImg.rect>
  [353] pushsymb 179 ............................ <#ink>
  [355] pushint8 36 ............................. <36>
  [357] pusharglist 2 ........................... <[#ink: 36]>
  [359] pushproplist ............................ <[#ink: 36]>
  [360] pusharglistnoret 5 ...................... <tDestImg, tSourceImg, tdestrect, tSourceImg.rect, [#ink: 36]>
  [362] objcall 180 ............................. tDestImg.copyPixels(tSourceImg, tdestrect, tSourceImg.rect, [#ink: 36])
  [364] getlocal 3 .............................. <tElem>
  [366] getlocal 5 .............................. <tDestImg>
  [368] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [370] objcall 181 ............................. tElem.feedImage(tDestImg)
  [372] getlocal 1 .............................. <tWndObj>
  [374] pushcons 30 ............................. <"ctlg_text_2">
  [376] pusharglist 2 ........................... <tWndObj, "ctlg_text_2">
  [378] objcall 106 ............................. <tWndObj.elementExists("ctlg_text_2")>
  [380] jmpifz [426] ............................ if tWndObj.elementExists("ctlg_text_2") then
  [383] pushcons 4 .............................. <"pet_race_">
  [385] getprop 150 ............................. <pSelectedProduct>
  [387] pushcons 18 ............................. <"petType">
  [389] pusharglist 2 ........................... <pSelectedProduct, "petType">
  [391] objcall 82 .............................. <pSelectedProduct["petType"]>
  [393] joinstr ................................. <"pet_race_" & pSelectedProduct["petType"]>
  [394] pushcons 9 .............................. <"_">
  [396] joinstr ................................. <"pet_race_" & pSelectedProduct["petType"] & "_">
  [397] getprop 150 ............................. <pSelectedProduct>
  [399] pushcons 19 ............................. <"petRace">
  [401] pusharglist 2 ........................... <pSelectedProduct, "petRace">
  [403] objcall 82 .............................. <pSelectedProduct["petRace"]>
  [405] joinstr ................................. <"pet_race_" & pSelectedProduct["petType"] & "_" & pSelectedProduct["petRace"]>
  [406] pusharglist 1 ........................... <"pet_race_" & pSelectedProduct["petType"] & "_" & pSelectedProduct["petRace"]>
  [408] extcall 39 .............................. <getText("pet_race_" & pSelectedProduct["petType"] & "_" & pSelectedProduct["petRace"])>
  [410] setlocal 10 ............................. tText = getText("pet_race_" & pSelectedProduct["petType"] & "_" & pSelectedProduct["petRace"])
  [412] getlocal 1 .............................. <tWndObj>
  [414] pushcons 30 ............................. <"ctlg_text_2">
  [416] pusharglist 2 ........................... <tWndObj, "ctlg_text_2">
  [418] objcall 97 .............................. <tWndObj.getElement("ctlg_text_2")>
  [420] getlocal 10 ............................. <tText>
  [422] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_text_2"), tText>
  [424] objcall 98 .............................. tWndObj.getElement("ctlg_text_2").setText(tText)
  [426] getprop 150 ............................. <pSelectedProduct>
  [428] pushcons 31 ............................. <"price">
  [430] pusharglist 2 ........................... <pSelectedProduct, "price">
  [432] objcall 82 .............................. <pSelectedProduct["price"]>
  [434] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [436] extcall 139 ............................. <voidp(pSelectedProduct["price"])>
  [438] not ..................................... <not voidp(pSelectedProduct["price"])>
  [439] jmpifz [526] ............................ if not voidp(pSelectedProduct["price"]) then
  [442] getlocal 1 .............................. <tWndObj>
  [444] pushcons 32 ............................. <"ctlg_price_1">
  [446] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [448] objcall 106 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [450] jmpifz [526] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [453] getprop 150 ............................. <pSelectedProduct>
  [455] pushcons 31 ............................. <"price">
  [457] pusharglist 2 ........................... <pSelectedProduct, "price">
  [459] objcall 82 .............................. <pSelectedProduct["price"]>
  [461] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [463] extcall 80 .............................. <value(pSelectedProduct["price"])>
  [465] pushint8 1 .............................. <1>
  [467] gt ...................................... <value(pSelectedProduct["price"]) > 1>
  [468] jmpifz [493] ............................ if value(pSelectedProduct["price"]) > 1 then / else
  [471] getprop 150 ............................. <pSelectedProduct>
  [473] pushcons 31 ............................. <"price">
  [475] pusharglist 2 ........................... <pSelectedProduct, "price">
  [477] objcall 82 .............................. <pSelectedProduct["price"]>
  [479] pushcons 33 ............................. <"credits">
  [481] pushcons 33 ............................. <"credits">
  [483] pusharglist 2 ........................... <"credits", "credits">
  [485] extcall 39 .............................. <getText("credits", "credits")>
  [487] joinpadstr .............................. <pSelectedProduct["price"] && getText("credits", "credits")>
  [488] setlocal 10 ............................. tText = pSelectedProduct["price"] && getText("credits", "credits")
  [490] jmp [512]
  [493] getprop 150 ............................. <pSelectedProduct>
  [495] pushcons 31 ............................. <"price">
  [497] pusharglist 2 ........................... <pSelectedProduct, "price">
  [499] objcall 82 .............................. <pSelectedProduct["price"]>
  [501] pushcons 34 ............................. <"credit">
  [503] pushcons 34 ............................. <"credit">
  [505] pusharglist 2 ........................... <"credit", "credit">
  [507] extcall 39 .............................. <getText("credit", "credit")>
  [509] joinpadstr .............................. <pSelectedProduct["price"] && getText("credit", "credit")>
  [510] setlocal 10 ............................. tText = pSelectedProduct["price"] && getText("credit", "credit")
  [512] getlocal 1 .............................. <tWndObj>
  [514] pushcons 32 ............................. <"ctlg_price_1">
  [516] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [518] objcall 97 .............................. <tWndObj.getElement("ctlg_price_1")>
  [520] getlocal 10 ............................. <tText>
  [522] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [524] objcall 98 .............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [526] getlocal 1 .............................. <tWndObj>
  [528] pushcons 35 ............................. <"ctlg_buy_button">
  [530] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [532] objcall 106 ............................. <tWndObj.elementExists("ctlg_buy_button")>
  [534] jmpifz [553] ............................ if tWndObj.elementExists("ctlg_buy_button") then
  [537] getlocal 1 .............................. <tWndObj>
  [539] pushcons 35 ............................. <"ctlg_buy_button">
  [541] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [543] objcall 97 .............................. <tWndObj.getElement("ctlg_buy_button")>
  [545] pushsymb 153 ............................ <#visible>
  [547] pushint8 1 .............................. <1>
  [549] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_button"), #visible, 1>
  [551] objcall 103 ............................. tWndObj.getElement("ctlg_buy_button").setProperty(#visible, 1)
  [553] getprop 476 ............................. <pSelectedOrderNum>
  [556] setprop 151 ............................. pLastProductNum = pSelectedOrderNum
  [558] ret
end

on nextProduct me
  [  0] getprop 475 ............................. <pPageData>
  [  3] getobjprop 135 .......................... <pPageData.ilk>
  [  5] pushsymb 136 ............................ <#propList>
  [  7] nteq .................................... <pPageData.ilk <> #propList>
  [  8] jmpifz [ 26] ............................ if pPageData.ilk <> #propList then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 36 ............................. <"Incorrect data">
  [ 15] pushsymb 484 ............................ <#nextProduct>
  [ 18] pusharglist 3 ........................... <me, "Incorrect data", #nextProduct>
  [ 20] extcall 44 .............................. <error(me, "Incorrect data", #nextProduct)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Incorrect data", #nextProduct)>
  [ 24] extcall 43 .............................. return error(me, "Incorrect data", #nextProduct)
  [ 26] getprop 151 ............................. <pLastProductNum>
  [ 28] pushint8 1 .............................. <1>
  [ 30] add ..................................... <pLastProductNum + 1>
  [ 31] setlocal 0 .............................. tNext = pLastProductNum + 1
  [ 33] getlocal 0 .............................. <tNext>
  [ 35] getprop 475 ............................. <pPageData>
  [ 38] getobjprop 156 .......................... <pPageData.count>
  [ 40] gt ...................................... <tNext > pPageData.count>
  [ 41] jmpifz [ 51] ............................ if tNext > pPageData.count then
  [ 44] getprop 475 ............................. <pPageData>
  [ 47] getobjprop 156 .......................... <pPageData.count>
  [ 49] setlocal 0 .............................. tNext = pPageData.count
  [ 51] getlocal 0 .............................. <tNext>
  [ 53] setprop 476 ............................. pSelectedOrderNum = tNext
  [ 56] getparam 0 .............................. <me>
  [ 58] getlocal 0 .............................. <tNext>
  [ 60] pusharglistnoret 2 ...................... <me, tNext>
  [ 62] localcall 6 ............................. selectProduct(me, tNext)
  [ 64] ret
end

on prevProduct me
  [  0] getprop 475 ............................. <pPageData>
  [  3] getobjprop 135 .......................... <pPageData.ilk>
  [  5] pushsymb 136 ............................ <#propList>
  [  7] nteq .................................... <pPageData.ilk <> #propList>
  [  8] jmpifz [ 26] ............................ if pPageData.ilk <> #propList then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 36 ............................. <"Incorrect data">
  [ 15] pushsymb 492 ............................ <#prewProduct>
  [ 18] pusharglist 3 ........................... <me, "Incorrect data", #prewProduct>
  [ 20] extcall 44 .............................. <error(me, "Incorrect data", #prewProduct)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Incorrect data", #prewProduct)>
  [ 24] extcall 43 .............................. return error(me, "Incorrect data", #prewProduct)
  [ 26] getprop 151 ............................. <pLastProductNum>
  [ 28] pushint8 1 .............................. <1>
  [ 30] sub ..................................... <pLastProductNum - 1>
  [ 31] setlocal 0 .............................. tPrev = pLastProductNum - 1
  [ 33] getlocal 0 .............................. <tPrev>
  [ 35] pushint8 1 .............................. <1>
  [ 37] lt ...................................... <tPrev < 1>
  [ 38] jmpifz [ 45] ............................ if tPrev < 1 then
  [ 41] pushint8 1 .............................. <1>
  [ 43] setlocal 0 .............................. tPrev = 1
  [ 45] getlocal 0 .............................. <tPrev>
  [ 47] setprop 476 ............................. pSelectedOrderNum = tPrev
  [ 50] getparam 0 .............................. <me>
  [ 52] getlocal 0 .............................. <tPrev>
  [ 54] pusharglistnoret 2 ...................... <me, tPrev>
  [ 56] localcall 6 ............................. selectProduct(me, tPrev)
  [ 58] ret
end

on eventProc me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 100 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [ 21] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] pushcons 37 ............................. <"close">
  [ 12] eq ...................................... <tSprID = "close">
  [ 13] jmpifz [ 21] ............................ if tSprID = "close" then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 43 .............................. return 0
  [ 21] getparam 1 .............................. <tEvent>
  [ 23] pushsymb 147 ............................ <#mouseDown>
  [ 25] eq ...................................... <tEvent = #mouseDown>
  [ 26] jmpifz [381] ............................ if tEvent = #mouseDown then
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] pushcons 35 ............................. <"ctlg_buy_button">
  [ 33] eq ...................................... <tSprID = "ctlg_buy_button">
  [ 34] jmpifz [322] ............................ if tSprID = "ctlg_buy_button" then / else
  [ 37] pushsymb 296 ............................ <#catalogue>
  [ 40] pusharglist 1 ........................... <#catalogue>
  [ 42] extcall 120 ............................. <getThread(#catalogue)>
  [ 44] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 46] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 48] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 50] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 52] setlocal 0 .............................. tWndObj = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 54] pushcons 17 ............................. <EMPTY>
  [ 56] setlocal 1 .............................. tText = EMPTY
  [ 58] getlocal 0 .............................. <tWndObj>
  [ 60] pushcons 22 ............................. <"dedication_text">
  [ 62] pusharglist 2 ........................... <tWndObj, "dedication_text">
  [ 64] objcall 106 ............................. <tWndObj.elementExists("dedication_text")>
  [ 66] jmpifz [ 95] ............................ if tWndObj.elementExists("dedication_text") then
  [ 69] getlocal 0 .............................. <tWndObj>
  [ 71] pushcons 22 ............................. <"dedication_text">
  [ 73] pusharglist 2 ........................... <tWndObj, "dedication_text">
  [ 75] objcall 97 .............................. <tWndObj.getElement("dedication_text")>
  [ 77] pusharglist 1 ........................... <tWndObj.getElement("dedication_text")>
  [ 79] objcall 39 .............................. <tWndObj.getElement("dedication_text").getText()>
  [ 81] setlocal 1 .............................. tText = tWndObj.getElement("dedication_text").getText()
  [ 83] getlocal 1 .............................. <tText>
  [ 85] pushcons 2 .............................. <RETURN>
  [ 87] pushcons 38 ............................. <"\\r">
  [ 89] pusharglist 3 ........................... <tText, RETURN, "\\r">
  [ 91] extcall 85 .............................. <replaceChunks(tText, RETURN, "\\r")>
  [ 93] setlocal 1 .............................. tText = replaceChunks(tText, RETURN, "\\r")
  [ 95] getlocal 1 .............................. <tText>
  [ 97] getobjprop 193 .......................... <tText.length>
  [ 99] pushint8 1 .............................. <1>
  [101] lt ...................................... <tText.length < 1>
  [102] jmpifz [132] ............................ if tText.length < 1 then / else
  [105] pushsymb 495 ............................ <#alert>
  [108] pushsymb 496 ............................ <#msg>
  [111] pushcons 39 ............................. <"catalog_give_petname">
  [113] pushsymb 237 ............................ <#id>
  [115] pushcons 40 ............................. <"ctlg_petmsg">
  [117] pusharglist 4 ........................... <[#msg: "catalog_give_petname", #id: "ctlg_petmsg"]>
  [119] pushproplist ............................ <[#msg: "catalog_give_petname", #id: "ctlg_petmsg"]>
  [120] pusharglist 2 ........................... <#alert, [#msg: "catalog_give_petname", #id: "ctlg_petmsg"]>
  [122] extcall 494 ............................. <executeMessage(#alert, [#msg: "catalog_give_petname", #id: "ctlg_petmsg"])>
  [125] pusharglistnoret 1 ...................... <executeMessage(#alert, [#msg: "catalog_give_petname", #id: "ctlg_petmsg"])>
  [127] extcall 43 .............................. return executeMessage(#alert, [#msg: "catalog_give_petname", #id: "ctlg_petmsg"])
  [129] jmp [166]
  [132] getlocal 1 .............................. <tText>
  [134] getobjprop 193 .......................... <tText.length>
  [136] pushint8 15 ............................. <15>
  [138] gt ...................................... <tText.length > 15>
  [139] jmpifz [166] ............................ if tText.length > 15 then
  [142] pushsymb 495 ............................ <#alert>
  [145] pushsymb 496 ............................ <#msg>
  [148] pushcons 41 ............................. <"catalog_pet_name_length">
  [150] pushsymb 237 ............................ <#id>
  [152] pushcons 40 ............................. <"ctlg_petmsg">
  [154] pusharglist 4 ........................... <[#msg: "catalog_pet_name_length", #id: "ctlg_petmsg"]>
  [156] pushproplist ............................ <[#msg: "catalog_pet_name_length", #id: "ctlg_petmsg"]>
  [157] pusharglist 2 ........................... <#alert, [#msg: "catalog_pet_name_length", #id: "ctlg_petmsg"]>
  [159] extcall 494 ............................. <executeMessage(#alert, [#msg: "catalog_pet_name_length", #id: "ctlg_petmsg"])>
  [162] pusharglistnoret 1 ...................... <executeMessage(#alert, [#msg: "catalog_pet_name_length", #id: "ctlg_petmsg"])>
  [164] extcall 43 .............................. return executeMessage(#alert, [#msg: "catalog_pet_name_length", #id: "ctlg_petmsg"])
  [166] getlocal 1 .............................. <tText>
  [168] pushsymb 341 ............................ <#char>
  [171] pushint8 1 .............................. <1>
  [173] pushint8 15 ............................. <15>
  [175] pusharglist 4 ........................... <tText, #char, 1, 15>
  [177] objcall 159 ............................. <tText.char[1..15]>
  [179] setlocal 1 .............................. tText = tText.char[1..15]
  [181] getlocal 1 .............................. <tText>
  [183] pushint8 1 .............................. <1>
  [185] pusharglist 2 ........................... <tText, 1>
  [187] extcall 330 ............................. <convertSpecialChars(tText, 1)>
  [190] setlocal 1 .............................. tText = convertSpecialChars(tText, 1)
  [192] getprop 150 ............................. <pSelectedProduct>
  [194] getobjprop 135 .......................... <pSelectedProduct.ilk>
  [196] pushsymb 136 ............................ <#propList>
  [198] nteq .................................... <pSelectedProduct.ilk <> #propList>
  [199] jmpifz [217] ............................ if pSelectedProduct.ilk <> #propList then
  [202] getparam 0 .............................. <me>
  [204] pushcons 42 ............................. <"incorrect Selected Product Data">
  [206] pushsymb 293 ............................ <#eventProc>
  [209] pusharglist 3 ........................... <me, "incorrect Selected Product Data", #eventProc>
  [211] extcall 44 .............................. <error(me, "incorrect Selected Product Data", #eventProc)>
  [213] pusharglistnoret 1 ...................... <error(me, "incorrect Selected Product Data", #eventProc)>
  [215] extcall 43 .............................. return error(me, "incorrect Selected Product Data", #eventProc)
  [217] pushint8 2 .............................. <2>
  [219] pusharglist 1 ........................... <2>
  [221] extcall 422 ............................. <numToChar(2)>
  [224] getprop 150 ............................. <pSelectedProduct>
  [226] pushcons 19 ............................. <"petRace">
  [228] pusharglist 2 ........................... <pSelectedProduct, "petRace">
  [230] objcall 82 .............................. <pSelectedProduct["petRace"]>
  [232] joinstr ................................. <numToChar(2) & pSelectedProduct["petRace"]>
  [233] pushint8 2 .............................. <2>
  [235] pusharglist 1 ........................... <2>
  [237] extcall 422 ............................. <numToChar(2)>
  [240] joinstr ................................. <numToChar(2) & pSelectedProduct["petRace"] & numToChar(2)>
  [241] getprop 150 ............................. <pSelectedProduct>
  [243] pushcons 20 ............................. <"petColor">
  [245] pusharglist 2 ........................... <pSelectedProduct, "petColor">
  [247] objcall 82 .............................. <pSelectedProduct["petColor"]>
  [249] joinstr ................................. <numToChar(2) & pSelectedProduct["petRace"] & numToChar(2) & pSelectedProduct["petColor"]>
  [250] setlocal 2 .............................. tPet = numToChar(2) & pSelectedProduct["petRace"] & numToChar(2) & pSelectedProduct["petColor"]
  [252] getprop 150 ............................. <pSelectedProduct>
  [254] pushcons 43 ............................. <"extra_parm">
  [256] getlocal 1 .............................. <tText>
  [258] getlocal 2 .............................. <tPet>
  [260] joinstr ................................. <tText & tPet>
  [261] pusharglistnoret 3 ...................... <pSelectedProduct, "extra_parm", tText & tPet>
  [263] objcall 236 ............................. pSelectedProduct["extra_parm"] = tText & tPet
  [265] pushcons 44 ............................. <"connection.info.id">
  [267] pushsymb 521 ............................ <#info>
  [270] pusharglist 2 ........................... <"connection.info.id", #info>
  [272] extcall 252 ............................. <getVariable("connection.info.id", #info)>
  [274] pusharglist 1 ........................... <getVariable("connection.info.id", #info)>
  [276] extcall 331 ............................. <connectionExists(getVariable("connection.info.id", #info))>
  [279] jmpifz [319] ............................ if connectionExists(getVariable("connection.info.id", #info)) then
  [282] pushint8 1 .............................. <1>
  [284] setprop 522 ............................. pNameCheckPending = 1
  [287] pushcons 44 ............................. <"connection.info.id">
  [289] pushsymb 521 ............................ <#info>
  [292] pusharglist 2 ........................... <"connection.info.id", #info>
  [294] extcall 252 ............................. <getVariable("connection.info.id", #info)>
  [296] pusharglist 1 ........................... <getVariable("connection.info.id", #info)>
  [298] extcall 332 ............................. <getConnection(getVariable("connection.info.id", #info))>
  [301] pushcons 45 ............................. <"APPROVENAME">
  [303] pushsymb 89 ............................. <#string>
  [305] getlocal 1 .............................. <tText>
  [307] pushsymb 79 ............................. <#integer>
  [309] pushint8 1 .............................. <1>
  [311] pusharglist 4 ........................... <[#string: tText, #integer: 1]>
  [313] pushproplist ............................ <[#string: tText, #integer: 1]>
  [314] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id", #info)), "APPROVENAME", [#string: tText, #integer: 1]>
  [316] objcall 333 ............................. getConnection(getVariable("connection.info.id", #info)).send("APPROVENAME", [#string: tText, #integer: 1])
  [319] jmp [381]
  [322] getparam 2 .............................. <tSprID>
  [324] pushcons 46 ............................. <"ctlg_nextmodel_button">
  [326] eq ...................................... <tSprID = "ctlg_nextmodel_button">
  [327] jmpifz [340] ............................ if tSprID = "ctlg_nextmodel_button" then / else
  [330] getparam 0 .............................. <me>
  [332] pusharglistnoret 1 ...................... <me>
  [334] objcall 484 ............................. me.nextProduct()
  [337] jmp [381]
  [340] getparam 2 .............................. <tSprID>
  [342] pushcons 47 ............................. <"ctlg_prevmodel_button">
  [344] eq ...................................... <tSprID = "ctlg_prevmodel_button">
  [345] jmpifz [358] ............................ if tSprID = "ctlg_prevmodel_button" then / else
  [348] getparam 0 .............................. <me>
  [350] pusharglistnoret 1 ...................... <me>
  [352] objcall 485 ............................. me.prevProduct()
  [355] jmp [381]
  [358] getparam 2 .............................. <tSprID>
  [360] pushcons 48 ............................. <"ctlg_text_3">
  [362] eq ...................................... <tSprID = "ctlg_text_3">
  [363] jmpifz [376] ............................ if tSprID = "ctlg_text_3" then / else
  [366] pushcons 49 ............................. <"TODO >>> link">
  [368] pusharglistnoret 1 ...................... <"TODO >>> link">
  [370] extcall 523 ............................. put "TODO >>> link"
  [373] jmp [381]
  [376] pushzero ................................ <0>
  [377] pusharglistnoret 1 ...................... <0>
  [379] extcall 43 .............................. return 0
  [381] pushint8 1 .............................. <1>
  [383] pusharglistnoret 1 ...................... <1>
  [385] extcall 43 .............................. return 1
  [387] ret
end

on handle_petnameapproved me, tMsg
  [  0] getprop 522 ............................. <pNameCheckPending>
  [  3] not ..................................... <not pNameCheckPending>
  [  4] jmpifz [ 13] ............................ if not pNameCheckPending then
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 43 .............................. return 1
  [ 13] pushzero ................................ <0>
  [ 14] setprop 522 ............................. pNameCheckPending = 0
  [ 17] getparam 1 .............................. <tMsg>
  [ 19] getchainedprop 525 ...................... <tMsg.connection>
  [ 22] getparam 1 .............................. <tMsg>
  [ 24] pusharglist 2 ........................... <tMsg.connection, tMsg>
  [ 26] objcall 526 ............................. <tMsg.connection.GetIntFrom(tMsg)>
  [ 29] setlocal 0 .............................. tParm = tMsg.connection.GetIntFrom(tMsg)
  [ 31] getlocal 0 .............................. <tParm>
  [ 33] pushzero ................................ <0>
  [ 34] eq ...................................... <tParm = 0>
  [ 35] jmpifz [ 48] ............................ if tParm = 0 then / else
  [ 38] getparam 0 .............................. <me>
  [ 40] pusharglistnoret 1 ...................... <me>
  [ 42] objcall 498 ............................. me.petNameApproved()
  [ 45] jmp [ 55]
  [ 48] getparam 0 .............................. <me>
  [ 50] pusharglistnoret 1 ...................... <me>
  [ 52] objcall 499 ............................. me.petNameUnacceptable()
  [ 55] ret
end

on regMsgList me, tBool
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. tMsgs = [:]
  [  5] getlocal 0 .............................. <tMsgs>
  [  7] pushint8 36 ............................. <36>
  [  9] pushsymb 529 ............................ <#handle_petnameapproved>
  [ 12] pusharglistnoret 3 ...................... <tMsgs, 36, #handle_petnameapproved>
  [ 14] objcall 368 ............................. tMsgs.setaProp(36, #handle_petnameapproved)
  [ 17] pusharglist 0 ........................... <[:]>
  [ 19] pushproplist ............................ <[:]>
  [ 20] setlocal 1 .............................. tCmds = [:]
  [ 22] getlocal 1 .............................. <tCmds>
  [ 24] pushcons 45 ............................. <"APPROVENAME">
  [ 26] pushint8 42 ............................. <42>
  [ 28] pusharglistnoret 3 ...................... <tCmds, "APPROVENAME", 42>
  [ 30] objcall 368 ............................. tCmds.setaProp("APPROVENAME", 42)
  [ 33] getparam 1 .............................. <tBool>
  [ 35] jmpifz [ 79] ............................ if tBool then / else
  [ 38] pushcons 44 ............................. <"connection.info.id">
  [ 40] pusharglist 1 ........................... <"connection.info.id">
  [ 42] extcall 252 ............................. <getVariable("connection.info.id")>
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglist 1 ........................... <me>
  [ 48] objcall 57 .............................. <me.getID()>
  [ 50] getlocal 0 .............................. <tMsgs>
  [ 52] pusharglistnoret 3 ...................... <getVariable("connection.info.id"), me.getID(), tMsgs>
  [ 54] extcall 369 ............................. registerListener(getVariable("connection.info.id"), me.getID(), tMsgs)
  [ 57] pushcons 44 ............................. <"connection.info.id">
  [ 59] pusharglist 1 ........................... <"connection.info.id">
  [ 61] extcall 252 ............................. <getVariable("connection.info.id")>
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglist 1 ........................... <me>
  [ 67] objcall 57 .............................. <me.getID()>
  [ 69] getlocal 1 .............................. <tCmds>
  [ 71] pusharglistnoret 3 ...................... <getVariable("connection.info.id"), me.getID(), tCmds>
  [ 73] extcall 370 ............................. registerCommands(getVariable("connection.info.id"), me.getID(), tCmds)
  [ 76] jmp [117]
  [ 79] pushcons 44 ............................. <"connection.info.id">
  [ 81] pusharglist 1 ........................... <"connection.info.id">
  [ 83] extcall 252 ............................. <getVariable("connection.info.id")>
  [ 85] getparam 0 .............................. <me>
  [ 87] pusharglist 1 ........................... <me>
  [ 89] objcall 57 .............................. <me.getID()>
  [ 91] getlocal 0 .............................. <tMsgs>
  [ 93] pusharglistnoret 3 ...................... <getVariable("connection.info.id"), me.getID(), tMsgs>
  [ 95] extcall 371 ............................. unregisterListener(getVariable("connection.info.id"), me.getID(), tMsgs)
  [ 98] pushcons 44 ............................. <"connection.info.id">
  [100] pusharglist 1 ........................... <"connection.info.id">
  [102] extcall 252 ............................. <getVariable("connection.info.id")>
  [104] getparam 0 .............................. <me>
  [106] pusharglist 1 ........................... <me>
  [108] objcall 57 .............................. <me.getID()>
  [110] getlocal 1 .............................. <tCmds>
  [112] pusharglistnoret 3 ...................... <getVariable("connection.info.id"), me.getID(), tCmds>
  [114] extcall 372 ............................. unregisterCommands(getVariable("connection.info.id"), me.getID(), tCmds)
  [117] pushint8 1 .............................. <1>
  [119] pusharglistnoret 1 ...................... <1>
  [121] extcall 43 .............................. return 1
  [123] ret
end
