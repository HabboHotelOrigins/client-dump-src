property pCatalogID, pWriterPages, pOpenWindow, pCurrentPageData, pPageListImg, pPagePropList, pPageLineHeight, pActivePageID, pProductPerPage, pSelectedProduct, pLastProductNum, pProductOffset, pPageLinkList, pSmallImg, pInfoWindowID, pPurchaseOkID, pPageProgramID, pLoaderObjID, pActiveOrderCode, pLoadingFlag

on construct me
  [  0] pushcons 0 .............................. <"Catalogue_window">
  [  2] setprop 31 .............................. pCatalogID = "Catalogue_window"
  [  4] pushint8 21 ............................. <21>
  [  6] setprop 32 .............................. pPageLineHeight = 21
  [  8] pushzero ................................ <0>
  [  9] setprop 33 .............................. pProductPerPage = 0
  [ 11] pushzero ................................ <0>
  [ 12] setprop 34 .............................. pProductOffset = 0
  [ 14] pushint8 32 ............................. <32>
  [ 16] pushint8 32 ............................. <32>
  [ 18] pushint8 24 ............................. <24>
  [ 20] pusharglist 3 ........................... <32, 32, 24>
  [ 22] extcall 36 .............................. <image(32, 32, 24)>
  [ 24] setprop 35 .............................. pSmallImg = image(32, 32, 24)
  [ 26] pushcons 1 .............................. <"Purchase info">
  [ 28] setprop 37 .............................. pInfoWindowID = "Purchase info"
  [ 30] pushcons 2 .............................. <"catalog_buyingSuccesfull">
  [ 32] pusharglist 1 ........................... <"catalog_buyingSuccesfull">
  [ 34] extcall 39 .............................. <getText("catalog_buyingSuccesfull")>
  [ 36] setprop 38 .............................. pPurchaseOkID = getText("catalog_buyingSuccesfull")
  [ 38] pushcons 3 .............................. <"Catalogue_page_prg">
  [ 40] setprop 40 .............................. pPageProgramID = "Catalogue_page_prg"
  [ 42] pushcons 4 .............................. <"Catalogue_loader">
  [ 44] setprop 41 .............................. pLoaderObjID = "Catalogue_loader"
  [ 46] getprop 41 .............................. <pLoaderObjID>
  [ 48] pushcons 5 .............................. <"Catalogue Loader Class">
  [ 50] pusharglist 2 ........................... <pLoaderObjID, "Catalogue Loader Class">
  [ 52] extcall 42 .............................. <createObject(pLoaderObjID, "Catalogue Loader Class")>
  [ 54] setlocal 0 .............................. tLoaderObj = createObject(pLoaderObjID, "Catalogue Loader Class")
  [ 56] getlocal 0 .............................. <tLoaderObj>
  [ 58] pushzero ................................ <0>
  [ 59] eq ...................................... <tLoaderObj = 0>
  [ 60] jmpifz [ 77] ............................ if tLoaderObj = 0 then
  [ 63] getparam 0 .............................. <me>
  [ 65] pushcons 6 .............................. <"Failed to create LoaderObj">
  [ 67] pushsymb 0 .............................. <#construct>
  [ 69] pusharglist 3 ........................... <me, "Failed to create LoaderObj", #construct>
  [ 71] extcall 44 .............................. <error(me, "Failed to create LoaderObj", #construct)>
  [ 73] pusharglistnoret 1 ...................... <error(me, "Failed to create LoaderObj", #construct)>
  [ 75] extcall 43 .............................. return error(me, "Failed to create LoaderObj", #construct)
  [ 77] pushint8 1 .............................. <1>
  [ 79] setprop 45 .............................. pLoadingFlag = 1
  [ 81] pusharglist 0 ........................... <>
  [ 83] extcall 47 .............................. <getUniqueID()>
  [ 85] setprop 46 .............................. pWriterPages = getUniqueID()
  [ 87] pushcons 7 .............................. <"struct.font.plain">
  [ 89] pusharglist 1 ........................... <"struct.font.plain">
  [ 91] extcall 48 .............................. <getStructVariable("struct.font.plain")>
  [ 93] setlocal 1 .............................. tPlain = getStructVariable("struct.font.plain")
  [ 95] pushcons 8 .............................. <"struct.font.bold">
  [ 97] pusharglist 1 ........................... <"struct.font.bold">
  [ 99] extcall 48 .............................. <getStructVariable("struct.font.bold")>
  [101] setlocal 2 .............................. tBold = getStructVariable("struct.font.bold")
  [103] pushcons 9 .............................. <"struct.font.link">
  [105] pusharglist 1 ........................... <"struct.font.link">
  [107] extcall 48 .............................. <getStructVariable("struct.font.link")>
  [109] setlocal 3 .............................. tLink = getStructVariable("struct.font.link")
  [111] pushsymb 49 ............................. <#font>
  [113] getlocal 2 .............................. <tBold>
  [115] pushsymb 49 ............................. <#font>
  [117] pusharglist 2 ........................... <tBold, #font>
  [119] objcall 50 .............................. <tBold.getaProp(#font)>
  [121] pushsymb 51 ............................. <#fontStyle>
  [123] getlocal 2 .............................. <tBold>
  [125] pushsymb 51 ............................. <#fontStyle>
  [127] pusharglist 2 ........................... <tBold, #fontStyle>
  [129] objcall 50 .............................. <tBold.getaProp(#fontStyle)>
  [131] pushsymb 52 ............................. <#color>
  [133] pushcons 10 ............................. <"#000000">
  [135] pusharglist 1 ........................... <"#000000">
  [137] extcall 53 .............................. <rgb("#000000")>
  [139] pusharglist 6 ........................... <[#font: tBold.getaProp(#font), #fontStyle: tBold.getaProp(#fontStyle), #color: rgb("#000000")]>
  [141] pushproplist ............................ <[#font: tBold.getaProp(#font), #fontStyle: tBold.getaProp(#fontStyle), #color: rgb("#000000")]>
  [142] setlocal 4 .............................. tMetrics = [#font: tBold.getaProp(#font), #fontStyle: tBold.getaProp(#fontStyle), #color: rgb("#000000")]
  [144] getprop 46 .............................. <pWriterPages>
  [146] getlocal 4 .............................. <tMetrics>
  [148] pusharglistnoret 2 ...................... <pWriterPages, tMetrics>
  [150] extcall 54 .............................. createWriter(pWriterPages, tMetrics)
  [152] pushsymb 56 ............................. <#enterRoom>
  [154] getparam 0 .............................. <me>
  [156] pusharglist 1 ........................... <me>
  [158] objcall 57 .............................. <me.getID()>
  [160] pushsymb 4 .............................. <#hideCatalogue>
  [162] pusharglistnoret 3 ...................... <#enterRoom, me.getID(), #hideCatalogue>
  [164] extcall 55 .............................. registerMessage(#enterRoom, me.getID(), #hideCatalogue)
  [166] pushsymb 58 ............................. <#leaveRoom>
  [168] getparam 0 .............................. <me>
  [170] pusharglist 1 ........................... <me>
  [172] objcall 57 .............................. <me.getID()>
  [174] pushsymb 4 .............................. <#hideCatalogue>
  [176] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #hideCatalogue>
  [178] extcall 55 .............................. registerMessage(#leaveRoom, me.getID(), #hideCatalogue)
  [180] pushsymb 59 ............................. <#changeRoom>
  [182] getparam 0 .............................. <me>
  [184] pusharglist 1 ........................... <me>
  [186] objcall 57 .............................. <me.getID()>
  [188] pushsymb 4 .............................. <#hideCatalogue>
  [190] pusharglistnoret 3 ...................... <#changeRoom, me.getID(), #hideCatalogue>
  [192] extcall 55 .............................. registerMessage(#changeRoom, me.getID(), #hideCatalogue)
  [194] pushsymb 60 ............................. <#show_catalogue>
  [196] getparam 0 .............................. <me>
  [198] pusharglist 1 ........................... <me>
  [200] objcall 57 .............................. <me.getID()>
  [202] pushsymb 3 .............................. <#showCatalogue>
  [204] pusharglistnoret 3 ...................... <#show_catalogue, me.getID(), #showCatalogue>
  [206] extcall 55 .............................. registerMessage(#show_catalogue, me.getID(), #showCatalogue)
  [208] pushsymb 61 ............................. <#hide_catalogue>
  [210] getparam 0 .............................. <me>
  [212] pusharglist 1 ........................... <me>
  [214] objcall 57 .............................. <me.getID()>
  [216] pushsymb 4 .............................. <#hideCatalogue>
  [218] pusharglistnoret 3 ...................... <#hide_catalogue, me.getID(), #hideCatalogue>
  [220] extcall 55 .............................. registerMessage(#hide_catalogue, me.getID(), #hideCatalogue)
  [222] pushsymb 62 ............................. <#show_hide_catalogue>
  [224] getparam 0 .............................. <me>
  [226] pusharglist 1 ........................... <me>
  [228] objcall 57 .............................. <me.getID()>
  [230] pushsymb 2 .............................. <#showHideCatalogue>
  [232] pusharglistnoret 3 ...................... <#show_hide_catalogue, me.getID(), #showHideCatalogue>
  [234] extcall 55 .............................. registerMessage(#show_hide_catalogue, me.getID(), #showHideCatalogue)
  [236] pushint8 1 .............................. <1>
  [238] pusharglistnoret 1 ...................... <1>
  [240] extcall 43 .............................. return 1
  [242] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 69 .............................. removeUpdate(me.getID())
  [ 10] getprop 40 .............................. <pPageProgramID>
  [ 12] pusharglist 1 ........................... <pPageProgramID>
  [ 14] extcall 70 .............................. <objectExists(pPageProgramID)>
  [ 16] jmpifz [ 25] ............................ if objectExists(pPageProgramID) then
  [ 19] getprop 40 .............................. <pPageProgramID>
  [ 21] pusharglistnoret 1 ...................... <pPageProgramID>
  [ 23] extcall 71 .............................. removeObject(pPageProgramID)
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglistnoret 1 ...................... <me>
  [ 29] objcall 4 ............................... me.hideCatalogue()
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglistnoret 1 ...................... <me>
  [ 35] objcall 7 ............................... me.hideOrderInfo()
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglistnoret 1 ...................... <me>
  [ 41] objcall 10 .............................. me.hidePurchaseOk()
  [ 43] getprop 46 .............................. <pWriterPages>
  [ 45] pusharglistnoret 1 ...................... <pWriterPages>
  [ 47] extcall 72 .............................. removeWriter(pWriterPages)
  [ 49] pushsymb 56 ............................. <#enterRoom>
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 57 .............................. <me.getID()>
  [ 57] pusharglistnoret 2 ...................... <#enterRoom, me.getID()>
  [ 59] extcall 73 .............................. unregisterMessage(#enterRoom, me.getID())
  [ 61] pushsymb 58 ............................. <#leaveRoom>
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglist 1 ........................... <me>
  [ 67] objcall 57 .............................. <me.getID()>
  [ 69] pusharglistnoret 2 ...................... <#leaveRoom, me.getID()>
  [ 71] extcall 73 .............................. unregisterMessage(#leaveRoom, me.getID())
  [ 73] pushsymb 59 ............................. <#changeRoom>
  [ 75] getparam 0 .............................. <me>
  [ 77] pusharglist 1 ........................... <me>
  [ 79] objcall 57 .............................. <me.getID()>
  [ 81] pusharglistnoret 2 ...................... <#changeRoom, me.getID()>
  [ 83] extcall 73 .............................. unregisterMessage(#changeRoom, me.getID())
  [ 85] pushsymb 60 ............................. <#show_catalogue>
  [ 87] getparam 0 .............................. <me>
  [ 89] pusharglist 1 ........................... <me>
  [ 91] objcall 57 .............................. <me.getID()>
  [ 93] pusharglistnoret 2 ...................... <#show_catalogue, me.getID()>
  [ 95] extcall 73 .............................. unregisterMessage(#show_catalogue, me.getID())
  [ 97] pushsymb 61 ............................. <#hide_catalogue>
  [ 99] getparam 0 .............................. <me>
  [101] pusharglist 1 ........................... <me>
  [103] objcall 57 .............................. <me.getID()>
  [105] pusharglistnoret 2 ...................... <#hide_catalogue, me.getID()>
  [107] extcall 73 .............................. unregisterMessage(#hide_catalogue, me.getID())
  [109] pushsymb 62 ............................. <#show_hide_catalogue>
  [111] getparam 0 .............................. <me>
  [113] pusharglist 1 ........................... <me>
  [115] objcall 57 .............................. <me.getID()>
  [117] pusharglistnoret 2 ...................... <#show_hide_catalogue, me.getID()>
  [119] extcall 73 .............................. unregisterMessage(#show_hide_catalogue, me.getID())
  [121] pushint8 1 .............................. <1>
  [123] pusharglistnoret 1 ...................... <1>
  [125] extcall 43 .............................. return 1
  [127] ret
end

on showHideCatalogue me
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] jmpifz [ 22] ............................ if windowExists(pCatalogID) then / else
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglist 1 ........................... <me>
  [ 13] objcall 4 ............................... <me.hideCatalogue()>
  [ 15] pusharglistnoret 1 ...................... <me.hideCatalogue()>
  [ 17] extcall 43 .............................. return me.hideCatalogue()
  [ 19] jmp [ 32]
  [ 22] getparam 0 .............................. <me>
  [ 24] pusharglist 1 ........................... <me>
  [ 26] objcall 3 ............................... <me.showCatalogue()>
  [ 28] pusharglistnoret 1 ...................... <me.showCatalogue()>
  [ 30] extcall 43 .............................. return me.showCatalogue()
  [ 32] ret
end

on showCatalogue me
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 25] ............................ if not windowExists(pCatalogID) then / else
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglistnoret 1 ...................... <me>
  [ 14] objcall 14 .............................. me.ChangeWindowView()
  [ 16] pushint8 1 .............................. <1>
  [ 18] pusharglistnoret 1 ...................... <1>
  [ 20] extcall 43 .............................. return 1
  [ 22] jmp [ 30]
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 43 .............................. return 0
  [ 30] ret
end

on hideCatalogue me
  [  0] getprop 41 .............................. <pLoaderObjID>
  [  2] pusharglist 1 ........................... <pLoaderObjID>
  [  4] extcall 70 .............................. <objectExists(pLoaderObjID)>
  [  6] jmpifz [ 19] ............................ if objectExists(pLoaderObjID) then
  [  9] getprop 41 .............................. <pLoaderObjID>
  [ 11] pusharglist 1 ........................... <pLoaderObjID>
  [ 13] extcall 75 .............................. <getObject(pLoaderObjID)>
  [ 15] pusharglistnoret 1 ...................... <getObject(pLoaderObjID)>
  [ 17] objcall 76 .............................. getObject(pLoaderObjID).hideLoadingScreen()
  [ 19] getprop 31 .............................. <pCatalogID>
  [ 21] pusharglist 1 ........................... <pCatalogID>
  [ 23] extcall 74 .............................. <windowExists(pCatalogID)>
  [ 25] jmpifz [ 41] ............................ if windowExists(pCatalogID) then / else
  [ 28] getprop 31 .............................. <pCatalogID>
  [ 30] pusharglist 1 ........................... <pCatalogID>
  [ 32] extcall 77 .............................. <removeWindow(pCatalogID)>
  [ 34] pusharglistnoret 1 ...................... <removeWindow(pCatalogID)>
  [ 36] extcall 43 .............................. return removeWindow(pCatalogID)
  [ 38] jmp [ 46]
  [ 41] pushzero ................................ <0>
  [ 42] pusharglistnoret 1 ...................... <0>
  [ 44] extcall 43 .............................. return 0
  [ 46] ret
end

on isVisible me
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] pusharglistnoret 1 ...................... <windowExists(pCatalogID)>
  [  8] extcall 43 .............................. return windowExists(pCatalogID)
  [ 10] ret
end

on showCatalogWasPublishedDialog me
  [  0] getprop 37 .............................. <pInfoWindowID>
  [  2] pushcons 11 ............................. <"habbo_simple.window">
  [  4] pusharglist 0 ........................... <>
  [  6] extcall 92 .............................. <VOID>
  [  8] pusharglist 0 ........................... <>
  [ 10] extcall 92 .............................. <VOID>
  [ 12] pushsymb 93 ............................. <#modal>
  [ 14] pusharglist 5 ........................... <pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal>
  [ 16] extcall 91 .............................. <createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal)>
  [ 18] not ..................................... <not createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal)>
  [ 19] jmpifz [ 39] ............................ if not createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal) then
  [ 22] getparam 0 .............................. <me>
  [ 24] pushcons 12 ............................. <"Couldn't create window to show purchase info!">
  [ 26] pushsymb 8 .............................. <#showNoBalance>
  [ 28] pushsymb 559 ............................ <#major>
  [ 31] pusharglist 4 ........................... <me, "Couldn't create window to show purchase info!", #showNoBalance, #major>
  [ 33] extcall 44 .............................. <error(me, "Couldn't create window to show purchase info!", #showNoBalance, #major)>
  [ 35] pusharglistnoret 1 ...................... <error(me, "Couldn't create window to show purchase info!", #showNoBalance, #major)>
  [ 37] extcall 43 .............................. return error(me, "Couldn't create window to show purchase info!", #showNoBalance, #major)
  [ 39] pushcons 13 ............................. <"habbo_alert_c.window">
  [ 41] setlocal 0 .............................. tWndFile = "habbo_alert_c.window"
  [ 43] getprop 37 .............................. <pInfoWindowID>
  [ 45] pusharglist 1 ........................... <pInfoWindowID>
  [ 47] extcall 78 .............................. <getWindow(pInfoWindowID)>
  [ 49] setlocal 1 .............................. tWndObj = getWindow(pInfoWindowID)
  [ 51] getlocal 1 .............................. <tWndObj>
  [ 53] getlocal 0 .............................. <tWndFile>
  [ 55] pusharglist 2 ........................... <tWndObj, tWndFile>
  [ 57] objcall 94 .............................. <tWndObj.merge(tWndFile)>
  [ 59] not ..................................... <not tWndObj.merge(tWndFile)>
  [ 60] jmpifz [ 69] ............................ if not tWndObj.merge(tWndFile) then
  [ 63] getlocal 1 .............................. <tWndObj>
  [ 65] pusharglistnoret 1 ...................... <tWndObj>
  [ 67] objcall 95 .............................. tWndObj.close()
  [ 69] getlocal 1 .............................. <tWndObj>
  [ 71] pushcons 14 ............................. <"alert_text">
  [ 73] pusharglist 2 ........................... <tWndObj, "alert_text">
  [ 75] objcall 97 .............................. <tWndObj.getElement("alert_text")>
  [ 77] pushcons 15 ............................. <"catalog_published">
  [ 79] pushcons 16 ............................. <"Catalog was published! Catalog data became invalid and you'll have to reopen it.">
  [ 81] pusharglist 2 ........................... <"catalog_published", "Catalog was published! Catalog data became invalid and you'll have to reopen it.">
  [ 83] extcall 39 .............................. <getText("catalog_published", "Catalog was published! Catalog data became invalid and you'll have to reopen it.")>
  [ 85] pusharglistnoret 2 ...................... <tWndObj.getElement("alert_text"), getText("catalog_published", "Catalog was published! Catalog data became invalid and you'll have to reopen it.")>
  [ 87] objcall 98 .............................. tWndObj.getElement("alert_text").setText(getText("catalog_published", "Catalog was published! Catalog data became invalid and you'll have to reopen it."))
  [ 89] getlocal 1 .............................. <tWndObj>
  [ 91] getparam 0 .............................. <me>
  [ 93] pusharglist 1 ........................... <me>
  [ 95] objcall 57 .............................. <me.getID()>
  [ 97] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [ 99] objcall 99 .............................. tWndObj.registerClient(me.getID())
  [101] getlocal 1 .............................. <tWndObj>
  [103] pushsymb 10 ............................. <#hidePurchaseOk>
  [105] getparam 0 .............................. <me>
  [107] pusharglist 1 ........................... <me>
  [109] objcall 57 .............................. <me.getID()>
  [111] pushsymb 100 ............................ <#mouseUp>
  [113] pusharglistnoret 4 ...................... <tWndObj, #hidePurchaseOk, me.getID(), #mouseUp>
  [115] objcall 101 ............................. tWndObj.registerProcedure(#hidePurchaseOk, me.getID(), #mouseUp)
  [117] getlocal 1 .............................. <tWndObj>
  [119] pushint8 1 .............................. <1>
  [121] pusharglistnoret 2 ...................... <tWndObj, 1>
  [123] objcall 104 ............................. tWndObj.lock(1)
  [125] pushint8 1 .............................. <1>
  [127] pusharglistnoret 1 ...................... <1>
  [129] extcall 43 .............................. return 1
  [131] ret
end

on getCatalogWindow me
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pCatalogID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 43 .............................. return 0
  [ 15] getprop 31 .............................. <pCatalogID>
  [ 17] pusharglist 1 ........................... <pCatalogID>
  [ 19] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 21] pusharglistnoret 1 ...................... <getWindow(pCatalogID)>
  [ 23] extcall 43 .............................. return getWindow(pCatalogID)
  [ 25] ret
end

on showOrderInfo me, tstate, tInfo
  [  0] getprop 37 .............................. <pInfoWindowID>
  [  2] pusharglist 1 ........................... <pInfoWindowID>
  [  4] extcall 74 .............................. <windowExists(pInfoWindowID)>
  [  6] jmpifz [ 14] ............................ if windowExists(pInfoWindowID) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 43 .............................. return 0
  [ 14] getparam 1 .............................. <tstate>
  [ 16] pushcons 17 ............................. <"OK">
  [ 18] eq ...................................... <tstate = "OK">
  [ 19] jmpifz [165] ............................ if tstate = "OK" then / else
  [ 22] getparam 2 .............................. <tInfo>
  [ 24] pushsymb 81 ............................. <#price>
  [ 26] pusharglist 2 ........................... <tInfo, #price>
  [ 28] objcall 82 .............................. <tInfo[#price]>
  [ 30] pusharglist 1 ........................... <tInfo[#price]>
  [ 32] extcall 80 .............................. <value(tInfo[#price])>
  [ 34] pusharglist 1 ........................... <value(tInfo[#price])>
  [ 36] extcall 79 .............................. <integer(value(tInfo[#price]))>
  [ 38] setlocal 0 .............................. tPrice = integer(value(tInfo[#price]))
  [ 40] pushsymb 83 ............................. <#session>
  [ 42] pusharglist 1 ........................... <#session>
  [ 44] extcall 75 .............................. <getObject(#session)>
  [ 46] pushcons 18 ............................. <"user_walletbalance">
  [ 48] pusharglist 2 ........................... <getObject(#session), "user_walletbalance">
  [ 50] objcall 84 .............................. <getObject(#session).get("user_walletbalance")>
  [ 52] pusharglist 1 ........................... <getObject(#session).get("user_walletbalance")>
  [ 54] extcall 80 .............................. <value(getObject(#session).get("user_walletbalance"))>
  [ 56] pusharglist 1 ........................... <value(getObject(#session).get("user_walletbalance"))>
  [ 58] extcall 79 .............................. <integer(value(getObject(#session).get("user_walletbalance")))>
  [ 60] setlocal 1 .............................. tWallet = integer(value(getObject(#session).get("user_walletbalance")))
  [ 62] pushcons 19 ............................. <"catalog_costs">
  [ 64] pushcons 20 ............................. <"\\x1 costs \\x2 credits">
  [ 66] pusharglist 2 ........................... <"catalog_costs", "\\x1 costs \\x2 credits">
  [ 68] extcall 39 .............................. <getText("catalog_costs", "\\x1 costs \\x2 credits")>
  [ 70] setlocal 2 .............................. tMsgA = getText("catalog_costs", "\\x1 costs \\x2 credits")
  [ 72] getlocal 2 .............................. <tMsgA>
  [ 74] pushcons 21 ............................. <"\\x1">
  [ 76] getparam 2 .............................. <tInfo>
  [ 78] pushsymb 86 ............................. <#name>
  [ 80] pusharglist 2 ........................... <tInfo, #name>
  [ 82] objcall 82 .............................. <tInfo[#name]>
  [ 84] pusharglist 3 ........................... <tMsgA, "\\x1", tInfo[#name]>
  [ 86] extcall 85 .............................. <replaceChunks(tMsgA, "\\x1", tInfo[#name])>
  [ 88] setlocal 2 .............................. tMsgA = replaceChunks(tMsgA, "\\x1", tInfo[#name])
  [ 90] getlocal 2 .............................. <tMsgA>
  [ 92] pushcons 22 ............................. <"\\x2">
  [ 94] getlocal 0 .............................. <tPrice>
  [ 96] pusharglist 3 ........................... <tMsgA, "\\x2", tPrice>
  [ 98] extcall 85 .............................. <replaceChunks(tMsgA, "\\x2", tPrice)>
  [100] setlocal 2 .............................. tMsgA = replaceChunks(tMsgA, "\\x2", tPrice)
  [102] pushcons 23 ............................. <"catalog_credits">
  [104] pusharglist 1 ........................... <"catalog_credits">
  [106] extcall 39 .............................. <getText("catalog_credits")>
  [108] pushcons 24 ............................. <"\\x">
  [110] getlocal 1 .............................. <tWallet>
  [112] pusharglist 3 ........................... <getText("catalog_credits"), "\\x", tWallet>
  [114] extcall 85 .............................. <replaceChunks(getText("catalog_credits"), "\\x", tWallet)>
  [116] setlocal 3 .............................. tMsgB = replaceChunks(getText("catalog_credits"), "\\x", tWallet)
  [118] getparam 2 .............................. <tInfo>
  [120] pushsymb 88 ............................. <#code>
  [122] pusharglist 2 ........................... <tInfo, #code>
  [124] objcall 82 .............................. <tInfo[#code]>
  [126] setprop 87 .............................. pActiveOrderCode = tInfo[#code]
  [128] pushcons 25 ............................. <"orderinfo">
  [130] setlocal 4 .............................. tWndType = "orderinfo"
  [132] getlocal 1 .............................. <tWallet>
  [134] getparam 2 .............................. <tInfo>
  [136] pushsymb 81 ............................. <#price>
  [138] pusharglist 2 ........................... <tInfo, #price>
  [140] objcall 82 .............................. <tInfo[#price]>
  [142] pusharglist 1 ........................... <tInfo[#price]>
  [144] extcall 80 .............................. <value(tInfo[#price])>
  [146] lt ...................................... <tWallet < value(tInfo[#price])>
  [147] jmpifz [162] ............................ if tWallet < value(tInfo[#price]) then
  [150] getparam 0 .............................. <me>
  [152] getparam 2 .............................. <tInfo>
  [154] pusharglist 2 ........................... <me, tInfo>
  [156] objcall 8 ............................... <me.showNoBalance(tInfo)>
  [158] pusharglistnoret 1 ...................... <me.showNoBalance(tInfo)>
  [160] extcall 43 .............................. return me.showNoBalance(tInfo)
  [162] jmp [193]
  [165] getparam 1 .............................. <tstate>
  [167] pushcons 26 ............................. <"ERROR">
  [169] eq ...................................... <tstate = "ERROR">
  [170] jmpifz [193] ............................ if tstate = "ERROR" then
  [173] pushcons 27 ............................. <"Error occured!">
  [175] setlocal 2 .............................. tMsgA = "Error occured!"
  [177] getparam 2 .............................. <tInfo>
  [179] pusharglist 1 ........................... <tInfo>
  [181] extcall 89 .............................. <string(tInfo)>
  [183] setlocal 3 .............................. tMsgB = string(tInfo)
  [185] pushcons 28 ............................. <EMPTY>
  [187] setprop 87 .............................. pActiveOrderCode = EMPTY
  [189] pushcons 29 ............................. <"message">
  [191] setlocal 4 .............................. tWndType = "message"
  [193] pushcons 30 ............................. <"habbo_">
  [195] getlocal 4 .............................. <tWndType>
  [197] joinstr ................................. <"habbo_" & tWndType>
  [198] pushcons 31 ............................. <"_dialog.window">
  [200] joinstr ................................. <"habbo_" & tWndType & "_dialog.window">
  [201] pusharglist 1 ........................... <"habbo_" & tWndType & "_dialog.window">
  [203] extcall 90 .............................. <memberExists("habbo_" & tWndType & "_dialog.window")>
  [205] not ..................................... <not memberExists("habbo_" & tWndType & "_dialog.window")>
  [206] jmpifz [230] ............................ if not memberExists("habbo_" & tWndType & "_dialog.window") then
  [209] getparam 0 .............................. <me>
  [211] pushcons 32 ............................. <"Window description not found:">
  [213] pushcons 30 ............................. <"habbo_">
  [215] joinpadstr .............................. <"Window description not found:" && "habbo_">
  [216] getlocal 4 .............................. <tWndType>
  [218] joinstr ................................. <"Window description not found:" && "habbo_" & tWndType>
  [219] pushcons 31 ............................. <"_dialog.window">
  [221] joinstr ................................. <"Window description not found:" && "habbo_" & tWndType & "_dialog.window">
  [222] pusharglist 2 ........................... <me, "Window description not found:" && "habbo_" & tWndType & "_dialog.window">
  [224] extcall 44 .............................. <error(me, "Window description not found:" && "habbo_" & tWndType & "_dialog.window")>
  [226] pusharglistnoret 1 ...................... <error(me, "Window description not found:" && "habbo_" & tWndType & "_dialog.window")>
  [228] extcall 43 .............................. return error(me, "Window description not found:" && "habbo_" & tWndType & "_dialog.window")
  [230] getprop 37 .............................. <pInfoWindowID>
  [232] pushcons 11 ............................. <"habbo_simple.window">
  [234] pusharglist 0 ........................... <>
  [236] extcall 92 .............................. <VOID>
  [238] pusharglist 0 ........................... <>
  [240] extcall 92 .............................. <VOID>
  [242] pushsymb 93 ............................. <#modal>
  [244] pusharglist 5 ........................... <pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal>
  [246] extcall 91 .............................. <createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal)>
  [248] not ..................................... <not createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal)>
  [249] jmpifz [264] ............................ if not createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal) then
  [252] getparam 0 .............................. <me>
  [254] pushcons 12 ............................. <"Couldn't create window to show purchase info!">
  [256] pusharglist 2 ........................... <me, "Couldn't create window to show purchase info!">
  [258] extcall 44 .............................. <error(me, "Couldn't create window to show purchase info!")>
  [260] pusharglistnoret 1 ...................... <error(me, "Couldn't create window to show purchase info!")>
  [262] extcall 43 .............................. return error(me, "Couldn't create window to show purchase info!")
  [264] getprop 37 .............................. <pInfoWindowID>
  [266] pusharglist 1 ........................... <pInfoWindowID>
  [268] extcall 78 .............................. <getWindow(pInfoWindowID)>
  [270] setlocal 5 .............................. tWndObj = getWindow(pInfoWindowID)
  [272] getlocal 5 .............................. <tWndObj>
  [274] pushcons 30 ............................. <"habbo_">
  [276] getlocal 4 .............................. <tWndType>
  [278] joinstr ................................. <"habbo_" & tWndType>
  [279] pushcons 31 ............................. <"_dialog.window">
  [281] joinstr ................................. <"habbo_" & tWndType & "_dialog.window">
  [282] pusharglist 2 ........................... <tWndObj, "habbo_" & tWndType & "_dialog.window">
  [284] objcall 94 .............................. <tWndObj.merge("habbo_" & tWndType & "_dialog.window")>
  [286] not ..................................... <not tWndObj.merge("habbo_" & tWndType & "_dialog.window")>
  [287] jmpifz [300] ............................ if not tWndObj.merge("habbo_" & tWndType & "_dialog.window") then
  [290] getlocal 5 .............................. <tWndObj>
  [292] pusharglist 1 ........................... <tWndObj>
  [294] objcall 95 .............................. <tWndObj.close()>
  [296] pusharglistnoret 1 ...................... <tWndObj.close()>
  [298] extcall 43 .............................. return tWndObj.close()
  [300] getlocal 5 .............................. <tWndObj>
  [302] pusharglistnoret 1 ...................... <tWndObj>
  [304] objcall 96 .............................. tWndObj.center()
  [306] getlocal 5 .............................. <tWndObj>
  [308] pushcons 30 ............................. <"habbo_">
  [310] getlocal 4 .............................. <tWndType>
  [312] joinstr ................................. <"habbo_" & tWndType>
  [313] pushcons 33 ............................. <"_text_a">
  [315] joinstr ................................. <"habbo_" & tWndType & "_text_a">
  [316] pusharglist 2 ........................... <tWndObj, "habbo_" & tWndType & "_text_a">
  [318] objcall 97 .............................. <tWndObj.getElement("habbo_" & tWndType & "_text_a")>
  [320] getlocal 2 .............................. <tMsgA>
  [322] pusharglistnoret 2 ...................... <tWndObj.getElement("habbo_" & tWndType & "_text_a"), tMsgA>
  [324] objcall 98 .............................. tWndObj.getElement("habbo_" & tWndType & "_text_a").setText(tMsgA)
  [326] getlocal 5 .............................. <tWndObj>
  [328] pushcons 30 ............................. <"habbo_">
  [330] getlocal 4 .............................. <tWndType>
  [332] joinstr ................................. <"habbo_" & tWndType>
  [333] pushcons 34 ............................. <"_text_b">
  [335] joinstr ................................. <"habbo_" & tWndType & "_text_b">
  [336] pusharglist 2 ........................... <tWndObj, "habbo_" & tWndType & "_text_b">
  [338] objcall 97 .............................. <tWndObj.getElement("habbo_" & tWndType & "_text_b")>
  [340] getlocal 3 .............................. <tMsgB>
  [342] pusharglistnoret 2 ...................... <tWndObj.getElement("habbo_" & tWndType & "_text_b"), tMsgB>
  [344] objcall 98 .............................. tWndObj.getElement("habbo_" & tWndType & "_text_b").setText(tMsgB)
  [346] getlocal 5 .............................. <tWndObj>
  [348] getparam 0 .............................. <me>
  [350] pusharglist 1 ........................... <me>
  [352] objcall 57 .............................. <me.getID()>
  [354] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [356] objcall 99 .............................. tWndObj.registerClient(me.getID())
  [358] getlocal 5 .............................. <tWndObj>
  [360] pushsymb 29 ............................. <#eventProcInfoWnd>
  [362] getparam 0 .............................. <me>
  [364] pusharglist 1 ........................... <me>
  [366] objcall 57 .............................. <me.getID()>
  [368] pushsymb 100 ............................ <#mouseUp>
  [370] pusharglistnoret 4 ...................... <tWndObj, #eventProcInfoWnd, me.getID(), #mouseUp>
  [372] objcall 101 ............................. tWndObj.registerProcedure(#eventProcInfoWnd, me.getID(), #mouseUp)
  [374] getlocal 5 .............................. <tWndObj>
  [376] pushsymb 102 ............................ <#locZ>
  [378] pushint32 22000000 ...................... <22000000>
  [383] pusharglistnoret 3 ...................... <tWndObj, #locZ, 22000000>
  [385] objcall 103 ............................. tWndObj.setProperty(#locZ, 22000000)
  [387] getlocal 5 .............................. <tWndObj>
  [389] pushint8 1 .............................. <1>
  [391] pusharglistnoret 2 ...................... <tWndObj, 1>
  [393] objcall 104 ............................. tWndObj.lock(1)
  [395] pushsymb 83 ............................. <#session>
  [397] pusharglist 1 ........................... <#session>
  [399] extcall 75 .............................. <getObject(#session)>
  [401] pushcons 35 ............................. <"user_rights">
  [403] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [405] objcall 84 .............................. <getObject(#session).get("user_rights")>
  [407] pushcons 36 ............................. <"fuse_trade">
  [409] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_trade">
  [411] objcall 105 ............................. <getObject(#session).get("user_rights").getOne("fuse_trade")>
  [413] not ..................................... <not getObject(#session).get("user_rights").getOne("fuse_trade")>
  [414] jmpifz [444] ............................ if not getObject(#session).get("user_rights").getOne("fuse_trade") then
  [417] getlocal 5 .............................. <tWndObj>
  [419] pushcons 37 ............................. <"buy_gift_ok">
  [421] pusharglist 2 ........................... <tWndObj, "buy_gift_ok">
  [423] objcall 106 ............................. <tWndObj.elementExists("buy_gift_ok")>
  [425] jmpifz [444] ............................ if tWndObj.elementExists("buy_gift_ok") then
  [428] getlocal 5 .............................. <tWndObj>
  [430] pushcons 37 ............................. <"buy_gift_ok">
  [432] pusharglist 2 ........................... <tWndObj, "buy_gift_ok">
  [434] objcall 97 .............................. <tWndObj.getElement("buy_gift_ok")>
  [436] pushsymb 107 ............................ <#blend>
  [438] pushint8 30 ............................. <30>
  [440] pusharglistnoret 3 ...................... <tWndObj.getElement("buy_gift_ok"), #blend, 30>
  [442] objcall 103 ............................. tWndObj.getElement("buy_gift_ok").setProperty(#blend, 30)
  [444] pushint8 1 .............................. <1>
  [446] pusharglistnoret 1 ...................... <1>
  [448] extcall 43 .............................. return 1
  [450] ret
end

on hideOrderInfo me
  [  0] getprop 37 .............................. <pInfoWindowID>
  [  2] pusharglist 1 ........................... <pInfoWindowID>
  [  4] extcall 74 .............................. <windowExists(pInfoWindowID)>
  [  6] not ..................................... <not windowExists(pInfoWindowID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pInfoWindowID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 43 .............................. return 0
  [ 15] getprop 37 .............................. <pInfoWindowID>
  [ 17] pusharglistnoret 1 ...................... <pInfoWindowID>
  [ 19] extcall 77 .............................. removeWindow(pInfoWindowID)
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 1 ...................... <1>
  [ 25] extcall 43 .............................. return 1
  [ 27] ret
end

on showNoBalance me, tInfo, tGeneralText
  [  0] getprop 37 .............................. <pInfoWindowID>
  [  2] pusharglist 1 ........................... <pInfoWindowID>
  [  4] extcall 74 .............................. <windowExists(pInfoWindowID)>
  [  6] jmpifz [ 14] ............................ if windowExists(pInfoWindowID) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 43 .............................. return 0
  [ 14] getparam 2 .............................. <tGeneralText>
  [ 16] jmpifz [ 30] ............................ if tGeneralText then / else
  [ 19] pushcons 38 ............................. <"Alert_no_credits">
  [ 21] pusharglist 1 ........................... <"Alert_no_credits">
  [ 23] extcall 39 .............................. <getText("Alert_no_credits")>
  [ 25] setlocal 0 .............................. tMsgA = getText("Alert_no_credits")
  [ 27] jmp [110]
  [ 30] getparam 1 .............................. <tInfo>
  [ 32] pushsymb 81 ............................. <#price>
  [ 34] pusharglist 2 ........................... <tInfo, #price>
  [ 36] objcall 82 .............................. <tInfo[#price]>
  [ 38] pusharglist 1 ........................... <tInfo[#price]>
  [ 40] extcall 80 .............................. <value(tInfo[#price])>
  [ 42] pusharglist 1 ........................... <value(tInfo[#price])>
  [ 44] extcall 79 .............................. <integer(value(tInfo[#price]))>
  [ 46] setlocal 1 .............................. tPrice = integer(value(tInfo[#price]))
  [ 48] pushsymb 83 ............................. <#session>
  [ 50] pusharglist 1 ........................... <#session>
  [ 52] extcall 75 .............................. <getObject(#session)>
  [ 54] pushcons 18 ............................. <"user_walletbalance">
  [ 56] pusharglist 2 ........................... <getObject(#session), "user_walletbalance">
  [ 58] objcall 84 .............................. <getObject(#session).get("user_walletbalance")>
  [ 60] pusharglist 1 ........................... <getObject(#session).get("user_walletbalance")>
  [ 62] extcall 80 .............................. <value(getObject(#session).get("user_walletbalance"))>
  [ 64] pusharglist 1 ........................... <value(getObject(#session).get("user_walletbalance"))>
  [ 66] extcall 79 .............................. <integer(value(getObject(#session).get("user_walletbalance")))>
  [ 68] setlocal 2 .............................. tWallet = integer(value(getObject(#session).get("user_walletbalance")))
  [ 70] pushcons 19 ............................. <"catalog_costs">
  [ 72] pushcons 20 ............................. <"\\x1 costs \\x2 credits">
  [ 74] pusharglist 2 ........................... <"catalog_costs", "\\x1 costs \\x2 credits">
  [ 76] extcall 39 .............................. <getText("catalog_costs", "\\x1 costs \\x2 credits")>
  [ 78] setlocal 0 .............................. tMsgA = getText("catalog_costs", "\\x1 costs \\x2 credits")
  [ 80] getlocal 0 .............................. <tMsgA>
  [ 82] pushcons 21 ............................. <"\\x1">
  [ 84] getparam 1 .............................. <tInfo>
  [ 86] pushsymb 86 ............................. <#name>
  [ 88] pusharglist 2 ........................... <tInfo, #name>
  [ 90] objcall 82 .............................. <tInfo[#name]>
  [ 92] pusharglist 3 ........................... <tMsgA, "\\x1", tInfo[#name]>
  [ 94] extcall 85 .............................. <replaceChunks(tMsgA, "\\x1", tInfo[#name])>
  [ 96] setlocal 0 .............................. tMsgA = replaceChunks(tMsgA, "\\x1", tInfo[#name])
  [ 98] getlocal 0 .............................. <tMsgA>
  [100] pushcons 22 ............................. <"\\x2">
  [102] getlocal 1 .............................. <tPrice>
  [104] pusharglist 3 ........................... <tMsgA, "\\x2", tPrice>
  [106] extcall 85 .............................. <replaceChunks(tMsgA, "\\x2", tPrice)>
  [108] setlocal 0 .............................. tMsgA = replaceChunks(tMsgA, "\\x2", tPrice)
  [110] pushsymb 83 ............................. <#session>
  [112] pusharglist 1 ........................... <#session>
  [114] extcall 75 .............................. <getObject(#session)>
  [116] pushcons 35 ............................. <"user_rights">
  [118] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [120] objcall 84 .............................. <getObject(#session).get("user_rights")>
  [122] pushcons 39 ............................. <"fuse_buy_credits">
  [124] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_buy_credits">
  [126] objcall 105 ............................. <getObject(#session).get("user_rights").getOne("fuse_buy_credits")>
  [128] jmpifz [138] ............................ if getObject(#session).get("user_rights").getOne("fuse_buy_credits") then / else
  [131] pushcons 40 ............................. <"habbo_orderinfo_nocredits.window">
  [133] setlocal 3 .............................. tWndFile = "habbo_orderinfo_nocredits.window"
  [135] jmp [142]
  [138] pushcons 41 ............................. <"habbo_orderinfo_cantbuycredits.window">
  [140] setlocal 3 .............................. tWndFile = "habbo_orderinfo_cantbuycredits.window"
  [142] getprop 37 .............................. <pInfoWindowID>
  [144] pushcons 11 ............................. <"habbo_simple.window">
  [146] pusharglist 0 ........................... <>
  [148] extcall 92 .............................. <VOID>
  [150] pusharglist 0 ........................... <>
  [152] extcall 92 .............................. <VOID>
  [154] pushsymb 93 ............................. <#modal>
  [156] pusharglist 5 ........................... <pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal>
  [158] extcall 91 .............................. <createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal)>
  [160] not ..................................... <not createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal)>
  [161] jmpifz [176] ............................ if not createWindow(pInfoWindowID, "habbo_simple.window", VOID, VOID, #modal) then
  [164] getparam 0 .............................. <me>
  [166] pushcons 12 ............................. <"Couldn't create window to show purchase info!">
  [168] pusharglist 2 ........................... <me, "Couldn't create window to show purchase info!">
  [170] extcall 44 .............................. <error(me, "Couldn't create window to show purchase info!")>
  [172] pusharglistnoret 1 ...................... <error(me, "Couldn't create window to show purchase info!")>
  [174] extcall 43 .............................. return error(me, "Couldn't create window to show purchase info!")
  [176] getprop 37 .............................. <pInfoWindowID>
  [178] pusharglist 1 ........................... <pInfoWindowID>
  [180] extcall 78 .............................. <getWindow(pInfoWindowID)>
  [182] setlocal 4 .............................. tWndObj = getWindow(pInfoWindowID)
  [184] getlocal 4 .............................. <tWndObj>
  [186] getlocal 3 .............................. <tWndFile>
  [188] pusharglist 2 ........................... <tWndObj, tWndFile>
  [190] objcall 94 .............................. <tWndObj.merge(tWndFile)>
  [192] not ..................................... <not tWndObj.merge(tWndFile)>
  [193] jmpifz [206] ............................ if not tWndObj.merge(tWndFile) then
  [196] getlocal 4 .............................. <tWndObj>
  [198] pusharglist 1 ........................... <tWndObj>
  [200] objcall 95 .............................. <tWndObj.close()>
  [202] pusharglistnoret 1 ...................... <tWndObj.close()>
  [204] extcall 43 .............................. return tWndObj.close()
  [206] getlocal 4 .............................. <tWndObj>
  [208] pusharglistnoret 1 ...................... <tWndObj>
  [210] objcall 96 .............................. tWndObj.center()
  [212] getlocal 4 .............................. <tWndObj>
  [214] pushcons 42 ............................. <"habbo_message_text_a">
  [216] pusharglist 2 ........................... <tWndObj, "habbo_message_text_a">
  [218] objcall 97 .............................. <tWndObj.getElement("habbo_message_text_a")>
  [220] getlocal 0 .............................. <tMsgA>
  [222] pusharglistnoret 2 ...................... <tWndObj.getElement("habbo_message_text_a"), tMsgA>
  [224] objcall 98 .............................. tWndObj.getElement("habbo_message_text_a").setText(tMsgA)
  [226] getlocal 4 .............................. <tWndObj>
  [228] getparam 0 .............................. <me>
  [230] pusharglist 1 ........................... <me>
  [232] objcall 57 .............................. <me.getID()>
  [234] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [236] objcall 99 .............................. tWndObj.registerClient(me.getID())
  [238] getlocal 4 .............................. <tWndObj>
  [240] pushsymb 29 ............................. <#eventProcInfoWnd>
  [242] getparam 0 .............................. <me>
  [244] pusharglist 1 ........................... <me>
  [246] objcall 57 .............................. <me.getID()>
  [248] pushsymb 100 ............................ <#mouseUp>
  [250] pusharglistnoret 4 ...................... <tWndObj, #eventProcInfoWnd, me.getID(), #mouseUp>
  [252] objcall 101 ............................. tWndObj.registerProcedure(#eventProcInfoWnd, me.getID(), #mouseUp)
  [254] getlocal 4 .............................. <tWndObj>
  [256] pushsymb 102 ............................ <#locZ>
  [258] pushint32 22000000 ...................... <22000000>
  [263] pusharglistnoret 3 ...................... <tWndObj, #locZ, 22000000>
  [265] objcall 103 ............................. tWndObj.setProperty(#locZ, 22000000)
  [267] getlocal 4 .............................. <tWndObj>
  [269] pushint8 1 .............................. <1>
  [271] pusharglistnoret 2 ...................... <tWndObj, 1>
  [273] objcall 104 ............................. tWndObj.lock(1)
  [275] pushint8 1 .............................. <1>
  [277] pusharglistnoret 1 ...................... <1>
  [279] extcall 43 .............................. return 1
  [281] ret
end

on showPurchaseOk me
  [  0] getprop 38 .............................. <pPurchaseOkID>
  [  2] pushcons 43 ............................. <"habbo_basic.window">
  [  4] pusharglist 0 ........................... <>
  [  6] extcall 92 .............................. <VOID>
  [  8] pusharglist 0 ........................... <>
  [ 10] extcall 92 .............................. <VOID>
  [ 12] pushsymb 93 ............................. <#modal>
  [ 14] pusharglist 5 ........................... <pPurchaseOkID, "habbo_basic.window", VOID, VOID, #modal>
  [ 16] extcall 91 .............................. <createWindow(pPurchaseOkID, "habbo_basic.window", VOID, VOID, #modal)>
  [ 18] not ..................................... <not createWindow(pPurchaseOkID, "habbo_basic.window", VOID, VOID, #modal)>
  [ 19] jmpifz [ 27] ............................ if not createWindow(pPurchaseOkID, "habbo_basic.window", VOID, VOID, #modal) then
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 43 .............................. return 0
  [ 27] getprop 38 .............................. <pPurchaseOkID>
  [ 29] pusharglist 1 ........................... <pPurchaseOkID>
  [ 31] extcall 78 .............................. <getWindow(pPurchaseOkID)>
  [ 33] setlocal 0 .............................. tWndObj = getWindow(pPurchaseOkID)
  [ 35] getlocal 0 .............................. <tWndObj>
  [ 37] pushcons 44 ............................. <"habbo_message_dialog.window">
  [ 39] pusharglist 2 ........................... <tWndObj, "habbo_message_dialog.window">
  [ 41] objcall 94 .............................. <tWndObj.merge("habbo_message_dialog.window")>
  [ 43] not ..................................... <not tWndObj.merge("habbo_message_dialog.window")>
  [ 44] jmpifz [ 57] ............................ if not tWndObj.merge("habbo_message_dialog.window") then
  [ 47] getlocal 0 .............................. <tWndObj>
  [ 49] pusharglist 1 ........................... <tWndObj>
  [ 51] objcall 95 .............................. <tWndObj.close()>
  [ 53] pusharglistnoret 1 ...................... <tWndObj.close()>
  [ 55] extcall 43 .............................. return tWndObj.close()
  [ 57] getlocal 0 .............................. <tWndObj>
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglist 1 ........................... <me>
  [ 63] objcall 57 .............................. <me.getID()>
  [ 65] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [ 67] objcall 99 .............................. tWndObj.registerClient(me.getID())
  [ 69] getlocal 0 .............................. <tWndObj>
  [ 71] pushsymb 10 ............................. <#hidePurchaseOk>
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglist 1 ........................... <me>
  [ 77] objcall 57 .............................. <me.getID()>
  [ 79] pushsymb 100 ............................ <#mouseUp>
  [ 81] pusharglistnoret 4 ...................... <tWndObj, #hidePurchaseOk, me.getID(), #mouseUp>
  [ 83] objcall 101 ............................. tWndObj.registerProcedure(#hidePurchaseOk, me.getID(), #mouseUp)
  [ 85] getlocal 0 .............................. <tWndObj>
  [ 87] pusharglistnoret 1 ...................... <tWndObj>
  [ 89] objcall 96 .............................. tWndObj.center()
  [ 91] getlocal 0 .............................. <tWndObj>
  [ 93] pushsymb 102 ............................ <#locZ>
  [ 95] pushint32 22000000 ...................... <22000000>
  [100] pusharglistnoret 3 ...................... <tWndObj, #locZ, 22000000>
  [102] objcall 103 ............................. tWndObj.setProperty(#locZ, 22000000)
  [104] getlocal 0 .............................. <tWndObj>
  [106] pushcons 45 ............................. <"habbo_message_text_b">
  [108] pusharglist 2 ........................... <tWndObj, "habbo_message_text_b">
  [110] objcall 97 .............................. <tWndObj.getElement("habbo_message_text_b")>
  [112] pushcons 46 ............................. <"catalog_itsurs">
  [114] pusharglist 1 ........................... <"catalog_itsurs">
  [116] extcall 39 .............................. <getText("catalog_itsurs")>
  [118] pusharglistnoret 2 ...................... <tWndObj.getElement("habbo_message_text_b"), getText("catalog_itsurs")>
  [120] objcall 98 .............................. tWndObj.getElement("habbo_message_text_b").setText(getText("catalog_itsurs"))
  [122] pushsymb 119 ............................ <#room>
  [124] pusharglist 1 ........................... <#room>
  [126] extcall 118 ............................. <threadExists(#room)>
  [128] jmpifz [167] ............................ if threadExists(#room) then
  [131] pushsymb 119 ............................ <#room>
  [133] pusharglist 1 ........................... <#room>
  [135] extcall 120 ............................. <getThread(#room)>
  [137] pusharglist 1 ........................... <getThread(#room)>
  [139] objcall 121 ............................. <getThread(#room).getComponent()>
  [141] getobjprop 122 .......................... <getThread(#room).getComponent().pRoomId>
  [143] pushcons 47 ............................. <"private">
  [145] eq ...................................... <getThread(#room).getComponent().pRoomId = "private">
  [146] jmpifz [167] ............................ if getThread(#room).getComponent().pRoomId = "private" then
  [149] pushsymb 119 ............................ <#room>
  [151] pusharglist 1 ........................... <#room>
  [153] extcall 120 ............................. <getThread(#room)>
  [155] pusharglist 1 ........................... <getThread(#room)>
  [157] objcall 123 ............................. <getThread(#room).getInterface()>
  [159] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [161] objcall 124 ............................. <getThread(#room).getInterface().getContainer()>
  [163] pusharglistnoret 1 ...................... <getThread(#room).getInterface().getContainer()>
  [165] objcall 125 ............................. getThread(#room).getInterface().getContainer().open()
  [167] pushint8 1 .............................. <1>
  [169] pusharglistnoret 1 ...................... <1>
  [171] extcall 43 .............................. return 1
  [173] ret
end

on hidePurchaseOk me, tOptionalEvent, tOptionalSprID
  [  0] getparam 1 .............................. <tOptionalEvent>
  [  2] pushsymb 100 ............................ <#mouseUp>
  [  4] eq ...................................... <tOptionalEvent = #mouseUp>
  [  5] jmpifz [ 77] ............................ if tOptionalEvent = #mouseUp then
  [  8] getparam 2 .............................. <tOptionalSprID>
  [ 10] pusharglist 1 ........................... <tOptionalSprID>
  [ 12] extcall 126 ............................. <stringp(tOptionalSprID)>
  [ 14] jmpifz [ 77] ............................ if stringp(tOptionalSprID) then
  [ 17] getparam 2 .............................. <tOptionalSprID>
  [ 19] pushcons 48 ............................. <"button_cancel">
  [ 21] eq ...................................... <tOptionalSprID = "button_cancel">
  [ 22] getparam 2 .............................. <tOptionalSprID>
  [ 24] pushcons 49 ............................. <"alert_ok">
  [ 26] eq ...................................... <tOptionalSprID = "alert_ok">
  [ 27] or ...................................... <(tOptionalSprID = "button_cancel") or (tOptionalSprID = "alert_ok")>
  [ 28] jmpifz [ 46] ............................ if (tOptionalSprID = "button_cancel") or (tOptionalSprID = "alert_ok") then
  [ 31] getprop 37 .............................. <pInfoWindowID>
  [ 33] pusharglist 1 ........................... <pInfoWindowID>
  [ 35] extcall 74 .............................. <windowExists(pInfoWindowID)>
  [ 37] jmpifz [ 46] ............................ if windowExists(pInfoWindowID) then
  [ 40] getprop 37 .............................. <pInfoWindowID>
  [ 42] pusharglistnoret 1 ...................... <pInfoWindowID>
  [ 44] extcall 77 .............................. removeWindow(pInfoWindowID)
  [ 46] getparam 2 .............................. <tOptionalSprID>
  [ 48] pushcons 50 ............................. <"close">
  [ 50] nteq .................................... <tOptionalSprID <> "close">
  [ 51] getparam 2 .............................. <tOptionalSprID>
  [ 53] pushcons 51 ............................. <"habbo_message_ok">
  [ 55] nteq .................................... <tOptionalSprID <> "habbo_message_ok">
  [ 56] and ..................................... <(tOptionalSprID <> "close") and (tOptionalSprID <> "habbo_message_ok")>
  [ 57] getparam 2 .............................. <tOptionalSprID>
  [ 59] pushcons 48 ............................. <"button_cancel">
  [ 61] eq ...................................... <tOptionalSprID = "button_cancel">
  [ 62] or ...................................... <((tOptionalSprID <> "close") and (tOptionalSprID <> "habbo_message_ok")) or (tOptionalSprID = "button_cancel")>
  [ 63] getparam 2 .............................. <tOptionalSprID>
  [ 65] pushcons 49 ............................. <"alert_ok">
  [ 67] eq ...................................... <tOptionalSprID = "alert_ok">
  [ 68] or ...................................... <((tOptionalSprID <> "close") and (tOptionalSprID <> "habbo_message_ok")) or (tOptionalSprID = "button_cancel") or (tOptionalSprID = "alert_ok")>
  [ 69] jmpifz [ 77] ............................ if ((tOptionalSprID <> "close") and (tOptionalSprID <> "habbo_message_ok")) or (tOptionalSprID = "button_cancel") or (tOptionalSprID = "alert_ok") then
  [ 72] pushzero ................................ <0>
  [ 73] pusharglistnoret 1 ...................... <0>
  [ 75] extcall 43 .............................. return 0
  [ 77] getprop 38 .............................. <pPurchaseOkID>
  [ 79] pusharglist 1 ........................... <pPurchaseOkID>
  [ 81] extcall 74 .............................. <windowExists(pPurchaseOkID)>
  [ 83] jmpifz [ 92] ............................ if windowExists(pPurchaseOkID) then
  [ 86] getprop 38 .............................. <pPurchaseOkID>
  [ 88] pusharglistnoret 1 ...................... <pPurchaseOkID>
  [ 90] extcall 77 .............................. removeWindow(pPurchaseOkID)
  [ 92] pushint8 1 .............................. <1>
  [ 94] pusharglistnoret 1 ...................... <1>
  [ 96] extcall 43 .............................. return 1
  [ 98] ret
end

on showBuyAsGift me, tBoolean
  [  0] getprop 37 .............................. <pInfoWindowID>
  [  2] pusharglist 1 ........................... <pInfoWindowID>
  [  4] extcall 78 .............................. <getWindow(pInfoWindowID)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pInfoWindowID)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tWndObj = 0>
  [ 12] jmpifz [ 20] ............................ if tWndObj = 0 then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 43 .............................. return 0
  [ 20] getlocal 0 .............................. <tWndObj>
  [ 22] pushcons 52 ............................. <"habbo_orderinfo_text_a">
  [ 24] pusharglist 2 ........................... <tWndObj, "habbo_orderinfo_text_a">
  [ 26] objcall 97 .............................. <tWndObj.getElement("habbo_orderinfo_text_a")>
  [ 28] pusharglist 1 ........................... <tWndObj.getElement("habbo_orderinfo_text_a")>
  [ 30] objcall 39 .............................. <tWndObj.getElement("habbo_orderinfo_text_a").getText()>
  [ 32] setlocal 1 .............................. tMsgA = tWndObj.getElement("habbo_orderinfo_text_a").getText()
  [ 34] getlocal 0 .............................. <tWndObj>
  [ 36] pushcons 53 ............................. <"habbo_orderinfo_text_b">
  [ 38] pusharglist 2 ........................... <tWndObj, "habbo_orderinfo_text_b">
  [ 40] objcall 97 .............................. <tWndObj.getElement("habbo_orderinfo_text_b")>
  [ 42] pusharglist 1 ........................... <tWndObj.getElement("habbo_orderinfo_text_b")>
  [ 44] objcall 39 .............................. <tWndObj.getElement("habbo_orderinfo_text_b").getText()>
  [ 46] setlocal 2 .............................. tMsgB = tWndObj.getElement("habbo_orderinfo_text_b").getText()
  [ 48] getlocal 0 .............................. <tWndObj>
  [ 50] pusharglistnoret 1 ...................... <tWndObj>
  [ 52] objcall 129 ............................. tWndObj.unmerge()
  [ 54] getparam 1 .............................. <tBoolean>
  [ 56] jmpifz [ 84] ............................ if tBoolean then / else
  [ 59] getlocal 0 .............................. <tWndObj>
  [ 61] pushcons 54 ............................. <"habbo_orderinfo_gift_dialog.window">
  [ 63] pusharglist 2 ........................... <tWndObj, "habbo_orderinfo_gift_dialog.window">
  [ 65] objcall 94 .............................. <tWndObj.merge("habbo_orderinfo_gift_dialog.window")>
  [ 67] not ..................................... <not tWndObj.merge("habbo_orderinfo_gift_dialog.window")>
  [ 68] jmpifz [ 81] ............................ if not tWndObj.merge("habbo_orderinfo_gift_dialog.window") then
  [ 71] getlocal 0 .............................. <tWndObj>
  [ 73] pusharglist 1 ........................... <tWndObj>
  [ 75] objcall 95 .............................. <tWndObj.close()>
  [ 77] pusharglistnoret 1 ...................... <tWndObj.close()>
  [ 79] extcall 43 .............................. return tWndObj.close()
  [ 81] jmp [106]
  [ 84] getlocal 0 .............................. <tWndObj>
  [ 86] pushcons 55 ............................. <"habbo_orderinfo_dialog.window">
  [ 88] pusharglist 2 ........................... <tWndObj, "habbo_orderinfo_dialog.window">
  [ 90] objcall 94 .............................. <tWndObj.merge("habbo_orderinfo_dialog.window")>
  [ 92] not ..................................... <not tWndObj.merge("habbo_orderinfo_dialog.window")>
  [ 93] jmpifz [106] ............................ if not tWndObj.merge("habbo_orderinfo_dialog.window") then
  [ 96] getlocal 0 .............................. <tWndObj>
  [ 98] pusharglist 1 ........................... <tWndObj>
  [100] objcall 95 .............................. <tWndObj.close()>
  [102] pusharglistnoret 1 ...................... <tWndObj.close()>
  [104] extcall 43 .............................. return tWndObj.close()
  [106] getlocal 0 .............................. <tWndObj>
  [108] pushsymb 102 ............................ <#locZ>
  [110] pushint32 22000000 ...................... <22000000>
  [115] pusharglistnoret 3 ...................... <tWndObj, #locZ, 22000000>
  [117] objcall 103 ............................. tWndObj.setProperty(#locZ, 22000000)
  [119] getlocal 0 .............................. <tWndObj>
  [121] pushcons 52 ............................. <"habbo_orderinfo_text_a">
  [123] pusharglist 2 ........................... <tWndObj, "habbo_orderinfo_text_a">
  [125] objcall 97 .............................. <tWndObj.getElement("habbo_orderinfo_text_a")>
  [127] getlocal 1 .............................. <tMsgA>
  [129] pusharglistnoret 2 ...................... <tWndObj.getElement("habbo_orderinfo_text_a"), tMsgA>
  [131] objcall 98 .............................. tWndObj.getElement("habbo_orderinfo_text_a").setText(tMsgA)
  [133] getlocal 0 .............................. <tWndObj>
  [135] pushcons 53 ............................. <"habbo_orderinfo_text_b">
  [137] pusharglist 2 ........................... <tWndObj, "habbo_orderinfo_text_b">
  [139] objcall 97 .............................. <tWndObj.getElement("habbo_orderinfo_text_b")>
  [141] getlocal 2 .............................. <tMsgB>
  [143] pusharglistnoret 2 ...................... <tWndObj.getElement("habbo_orderinfo_text_b"), tMsgB>
  [145] objcall 98 .............................. tWndObj.getElement("habbo_orderinfo_text_b").setText(tMsgB)
  [147] getlocal 0 .............................. <tWndObj>
  [149] pushsymb 30 ............................. <#eventProcKeyDown>
  [151] getparam 0 .............................. <me>
  [153] pusharglist 1 ........................... <me>
  [155] objcall 57 .............................. <me.getID()>
  [157] pushsymb 130 ............................ <#keyDown>
  [159] pusharglistnoret 4 ...................... <tWndObj, #eventProcKeyDown, me.getID(), #keyDown>
  [161] objcall 101 ............................. tWndObj.registerProcedure(#eventProcKeyDown, me.getID(), #keyDown)
  [163] ret
end

on saveCatalogueIndex me, tdata
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pCatalogID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 43 .............................. return 0
  [ 15] getparam 1 .............................. <tdata>
  [ 17] setprop 132 ............................. pPagePropList = tdata
  [ 19] getparam 0 .............................. <me>
  [ 21] getprop 132 ............................. <pPagePropList>
  [ 23] pusharglistnoret 2 ...................... <me, pPagePropList>
  [ 25] localcall 24 ............................ renderPageList(me, pPagePropList)
  [ 27] pusharglist 0 ........................... <>
  [ 29] extcall 92 .............................. <VOID>
  [ 31] setprop 133 ............................. pActivePageID = VOID
  [ 33] getparam 0 .............................. <me>
  [ 35] pushint8 1 .............................. <1>
  [ 37] pusharglistnoret 2 ...................... <me, 1>
  [ 39] localcall 26 ............................ selectPage(me, 1)
  [ 41] pushzero ................................ <0>
  [ 42] setprop 45 .............................. pLoadingFlag = 0
  [ 44] ret
end

on cataloguePageData me, tdata
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pCatalogID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 43 .............................. return 0
  [ 15] getparam 1 .............................. <tdata>
  [ 17] getobjprop 135 .......................... <tdata.ilk>
  [ 19] pushsymb 136 ............................ <#propList>
  [ 21] nteq .................................... <tdata.ilk <> #propList>
  [ 22] jmpifz [ 39] ............................ if tdata.ilk <> #propList then
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 56 ............................. <"Incorrect Catalogue page data">
  [ 29] pushsymb 13 ............................. <#cataloguePageData>
  [ 31] pusharglist 3 ........................... <me, "Incorrect Catalogue page data", #cataloguePageData>
  [ 33] extcall 44 .............................. <error(me, "Incorrect Catalogue page data", #cataloguePageData)>
  [ 35] pusharglistnoret 1 ...................... <error(me, "Incorrect Catalogue page data", #cataloguePageData)>
  [ 37] extcall 43 .............................. return error(me, "Incorrect Catalogue page data", #cataloguePageData)
  [ 39] getparam 1 .............................. <tdata>
  [ 41] pusharglist 1 ........................... <tdata>
  [ 43] objcall 138 ............................. <tdata.duplicate()>
  [ 45] setprop 137 ............................. pCurrentPageData = tdata.duplicate()
  [ 47] getprop 137 ............................. <pCurrentPageData>
  [ 49] pushcons 57 ............................. <"layout">
  [ 51] pusharglist 2 ........................... <pCurrentPageData, "layout">
  [ 53] objcall 82 .............................. <pCurrentPageData["layout"]>
  [ 55] pushcons 58 ............................. <".window">
  [ 57] joinstr ................................. <pCurrentPageData["layout"] & ".window">
  [ 58] setlocal 0 .............................. tLayout = pCurrentPageData["layout"] & ".window"
  [ 60] getlocal 0 .............................. <tLayout>
  [ 62] pusharglist 1 ........................... <tLayout>
  [ 64] extcall 90 .............................. <memberExists(tLayout)>
  [ 66] not ..................................... <not memberExists(tLayout)>
  [ 67] jmpifz [ 84] ............................ if not memberExists(tLayout) then
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 59 ............................. <"Catalogue page Layout not found!">
  [ 74] pushsymb 13 ............................. <#cataloguePageData>
  [ 76] pusharglistnoret 3 ...................... <me, "Catalogue page Layout not found!", #cataloguePageData>
  [ 78] extcall 44 .............................. error(me, "Catalogue page Layout not found!", #cataloguePageData)
  [ 80] pushcons 60 ............................. <"ctlg_layout1.window">
  [ 82] setlocal 0 .............................. tLayout = "ctlg_layout1.window"
  [ 84] getprop 137 ............................. <pCurrentPageData>
  [ 86] pushcons 61 ............................. <"linkList">
  [ 88] pusharglist 2 ........................... <pCurrentPageData, "linkList">
  [ 90] objcall 82 .............................. <pCurrentPageData["linkList"]>
  [ 92] pusharglist 1 ........................... <pCurrentPageData["linkList"]>
  [ 94] extcall 139 ............................. <voidp(pCurrentPageData["linkList"])>
  [ 96] not ..................................... <not voidp(pCurrentPageData["linkList"])>
  [ 97] jmpifz [171] ............................ if not voidp(pCurrentPageData["linkList"]) then / else
  [100] getprop 137 ............................. <pCurrentPageData>
  [102] pushcons 62 ............................. <"id">
  [104] pusharglist 2 ........................... <pCurrentPageData, "id">
  [106] objcall 82 .............................. <pCurrentPageData["id"]>
  [108] pusharglist 1 ........................... <pCurrentPageData["id"]>
  [110] extcall 139 ............................. <voidp(pCurrentPageData["id"])>
  [112] not ..................................... <not voidp(pCurrentPageData["id"])>
  [113] jmpifz [168] ............................ if not voidp(pCurrentPageData["id"]) then
  [116] getprop 132 ............................. <pPagePropList>
  [118] getprop 137 ............................. <pCurrentPageData>
  [120] pushcons 62 ............................. <"id">
  [122] pusharglist 2 ........................... <pCurrentPageData, "id">
  [124] objcall 82 .............................. <pCurrentPageData["id"]>
  [126] pusharglist 2 ........................... <pPagePropList, pCurrentPageData["id"]>
  [128] objcall 82 .............................. <pPagePropList[pCurrentPageData["id"]]>
  [130] pusharglist 1 ........................... <pPagePropList[pCurrentPageData["id"]]>
  [132] extcall 139 ............................. <voidp(pPagePropList[pCurrentPageData["id"]])>
  [134] not ..................................... <not voidp(pPagePropList[pCurrentPageData["id"]])>
  [135] jmpifz [168] ............................ if not voidp(pPagePropList[pCurrentPageData["id"]]) then
  [138] getprop 137 ............................. <pCurrentPageData>
  [140] pushcons 61 ............................. <"linkList">
  [142] pusharglist 2 ........................... <pCurrentPageData, "linkList">
  [144] objcall 82 .............................. <pCurrentPageData["linkList"]>
  [146] pusharglist 1 ........................... <pCurrentPageData["linkList"]>
  [148] objcall 138 ............................. <pCurrentPageData["linkList"].duplicate()>
  [150] setprop 140 ............................. pPageLinkList = pCurrentPageData["linkList"].duplicate()
  [152] getprop 140 ............................. <pPageLinkList>
  [154] pushint8 1 .............................. <1>
  [156] getprop 137 ............................. <pCurrentPageData>
  [158] pushcons 62 ............................. <"id">
  [160] pusharglist 2 ........................... <pCurrentPageData, "id">
  [162] objcall 82 .............................. <pCurrentPageData["id"]>
  [164] pusharglistnoret 3 ...................... <pPageLinkList, 1, pCurrentPageData["id"]>
  [166] objcall 141 ............................. pPageLinkList.addAt(1, pCurrentPageData["id"])
  [168] jmp [222]
  [171] getprop 140 ............................. <pPageLinkList>
  [173] pusharglist 1 ........................... <pPageLinkList>
  [175] extcall 139 ............................. <voidp(pPageLinkList)>
  [177] not ..................................... <not voidp(pPageLinkList)>
  [178] jmpifz [222] ............................ if not voidp(pPageLinkList) then
  [181] getprop 137 ............................. <pCurrentPageData>
  [183] pushcons 62 ............................. <"id">
  [185] pusharglist 2 ........................... <pCurrentPageData, "id">
  [187] objcall 82 .............................. <pCurrentPageData["id"]>
  [189] pusharglist 1 ........................... <pCurrentPageData["id"]>
  [191] extcall 139 ............................. <voidp(pCurrentPageData["id"])>
  [193] not ..................................... <not voidp(pCurrentPageData["id"])>
  [194] jmpifz [222] ............................ if not voidp(pCurrentPageData["id"]) then
  [197] getprop 140 ............................. <pPageLinkList>
  [199] getprop 137 ............................. <pCurrentPageData>
  [201] pushcons 62 ............................. <"id">
  [203] pusharglist 2 ........................... <pCurrentPageData, "id">
  [205] objcall 82 .............................. <pCurrentPageData["id"]>
  [207] pusharglist 2 ........................... <pPageLinkList, pCurrentPageData["id"]>
  [209] objcall 142 ............................. <pPageLinkList.findPos(pCurrentPageData["id"])>
  [211] pushzero ................................ <0>
  [212] eq ...................................... <pPageLinkList.findPos(pCurrentPageData["id"]) = 0>
  [213] jmpifz [222] ............................ if pPageLinkList.findPos(pCurrentPageData["id"]) = 0 then
  [216] pusharglist 0 ........................... <>
  [218] extcall 92 .............................. <VOID>
  [220] setprop 140 ............................. pPageLinkList = VOID
  [222] getparam 0 .............................. <me>
  [224] getlocal 0 .............................. <tLayout>
  [226] pusharglistnoret 2 ...................... <me, tLayout>
  [228] localcall 16 ............................ ChangeWindowView(me, tLayout)
  [230] ret
end

on ChangeWindowView me, tWindowName
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 78 .............................. <getWindow(pCatalogID)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] pusharglist 1 ........................... <tWndObj>
  [ 12] extcall 144 ............................. <objectp(tWndObj)>
  [ 14] jmpifz [ 55] ............................ if objectp(tWndObj) then / else
  [ 17] getprop 41 .............................. <pLoaderObjID>
  [ 19] pusharglist 1 ........................... <pLoaderObjID>
  [ 21] extcall 70 .............................. <objectExists(pLoaderObjID)>
  [ 23] jmpifz [ 36] ............................ if objectExists(pLoaderObjID) then
  [ 26] getprop 41 .............................. <pLoaderObjID>
  [ 28] pusharglist 1 ........................... <pLoaderObjID>
  [ 30] extcall 75 .............................. <getObject(pLoaderObjID)>
  [ 32] pusharglistnoret 1 ...................... <getObject(pLoaderObjID)>
  [ 34] objcall 76 .............................. getObject(pLoaderObjID).hideLoadingScreen()
  [ 36] getprop 145 ............................. <pOpenWindow>
  [ 38] pusharglist 1 ........................... <pOpenWindow>
  [ 40] extcall 139 ............................. <voidp(pOpenWindow)>
  [ 42] not ..................................... <not voidp(pOpenWindow)>
  [ 43] jmpifz [ 52] ............................ if not voidp(pOpenWindow) then
  [ 46] getlocal 0 .............................. <tWndObj>
  [ 48] pusharglistnoret 1 ...................... <tWndObj>
  [ 50] objcall 129 ............................. tWndObj.unmerge()
  [ 52] jmp [170]
  [ 55] getprop 31 .............................. <pCatalogID>
  [ 57] pushcons 63 ............................. <"habbo_catalogue.window">
  [ 59] pusharglist 2 ........................... <pCatalogID, "habbo_catalogue.window">
  [ 61] extcall 91 .............................. <createWindow(pCatalogID, "habbo_catalogue.window")>
  [ 63] not ..................................... <not createWindow(pCatalogID, "habbo_catalogue.window")>
  [ 64] jmpifz [ 84] ............................ if not createWindow(pCatalogID, "habbo_catalogue.window") then / else
  [ 67] getparam 0 .............................. <me>
  [ 69] pushcons 64 ............................. <"Failed to open Catalogue window!!!">
  [ 71] pushsymb 14 ............................. <#ChangeWindowView>
  [ 73] pusharglist 3 ........................... <me, "Failed to open Catalogue window!!!", #ChangeWindowView>
  [ 75] extcall 44 .............................. <error(me, "Failed to open Catalogue window!!!", #ChangeWindowView)>
  [ 77] pusharglistnoret 1 ...................... <error(me, "Failed to open Catalogue window!!!", #ChangeWindowView)>
  [ 79] extcall 43 .............................. return error(me, "Failed to open Catalogue window!!!", #ChangeWindowView)
  [ 81] jmp [170]
  [ 84] getprop 31 .............................. <pCatalogID>
  [ 86] pusharglist 1 ........................... <pCatalogID>
  [ 88] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 90] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 92] getlocal 0 .............................. <tWndObj>
  [ 94] pusharglistnoret 1 ...................... <tWndObj>
  [ 96] objcall 96 .............................. tWndObj.center()
  [ 98] getlocal 0 .............................. <tWndObj>
  [100] pushint8 30 ............................. <30>
  [102] inv ..................................... <-30>
  [103] pushint8 30 ............................. <30>
  [105] inv ..................................... <-30>
  [106] pusharglistnoret 3 ...................... <tWndObj, -30, -30>
  [108] objcall 146 ............................. tWndObj.moveBy(-30, -30)
  [110] getlocal 0 .............................. <tWndObj>
  [112] getparam 0 .............................. <me>
  [114] pusharglist 1 ........................... <me>
  [116] objcall 57 .............................. <me.getID()>
  [118] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [120] objcall 99 .............................. tWndObj.registerClient(me.getID())
  [122] getlocal 0 .............................. <tWndObj>
  [124] pushsymb 28 ............................. <#eventProcCatalogue>
  [126] getparam 0 .............................. <me>
  [128] pusharglist 1 ........................... <me>
  [130] objcall 57 .............................. <me.getID()>
  [132] pushsymb 100 ............................ <#mouseUp>
  [134] pusharglistnoret 4 ...................... <tWndObj, #eventProcCatalogue, me.getID(), #mouseUp>
  [136] objcall 101 ............................. tWndObj.registerProcedure(#eventProcCatalogue, me.getID(), #mouseUp)
  [138] getlocal 0 .............................. <tWndObj>
  [140] pushsymb 28 ............................. <#eventProcCatalogue>
  [142] getparam 0 .............................. <me>
  [144] pusharglist 1 ........................... <me>
  [146] objcall 57 .............................. <me.getID()>
  [148] pushsymb 147 ............................ <#mouseDown>
  [150] pusharglistnoret 4 ...................... <tWndObj, #eventProcCatalogue, me.getID(), #mouseDown>
  [152] objcall 101 ............................. tWndObj.registerProcedure(#eventProcCatalogue, me.getID(), #mouseDown)
  [154] getlocal 0 .............................. <tWndObj>
  [156] pushsymb 28 ............................. <#eventProcCatalogue>
  [158] getparam 0 .............................. <me>
  [160] pusharglist 1 ........................... <me>
  [162] objcall 57 .............................. <me.getID()>
  [164] pushsymb 130 ............................ <#keyDown>
  [166] pusharglistnoret 4 ...................... <tWndObj, #eventProcCatalogue, me.getID(), #keyDown>
  [168] objcall 101 ............................. tWndObj.registerProcedure(#eventProcCatalogue, me.getID(), #keyDown)
  [170] getparam 1 .............................. <tWindowName>
  [172] pusharglist 1 ........................... <tWindowName>
  [174] extcall 139 ............................. <voidp(tWindowName)>
  [176] not ..................................... <not voidp(tWindowName)>
  [177] jmpifz [233] ............................ if not voidp(tWindowName) then / else
  [180] pusharglistnoret 0 ...................... <>
  [182] extcall 148 ............................. try()
  [184] getlocal 0 .............................. <tWndObj>
  [186] getparam 1 .............................. <tWindowName>
  [188] pusharglist 2 ........................... <tWndObj, tWindowName>
  [190] objcall 94 .............................. <tWndObj.merge(tWindowName)>
  [192] setlocal 1 .............................. tResult = tWndObj.merge(tWindowName)
  [194] pusharglist 0 ........................... <>
  [196] extcall 149 ............................. <catch()>
  [198] getlocal 1 .............................. <tResult>
  [200] pushzero ................................ <0>
  [201] eq ...................................... <tResult = 0>
  [202] or ...................................... <catch() or (tResult = 0)>
  [203] jmpifz [226] ............................ if catch() or (tResult = 0) then
  [206] getlocal 0 .............................. <tWndObj>
  [208] pusharglistnoret 1 ...................... <tWndObj>
  [210] objcall 95 .............................. tWndObj.close()
  [212] getparam 0 .............................. <me>
  [214] pushcons 65 ............................. <"Incorrect Window Format">
  [216] pushsymb 14 ............................. <#ChangeWindowView>
  [218] pusharglist 3 ........................... <me, "Incorrect Window Format", #ChangeWindowView>
  [220] extcall 44 .............................. <error(me, "Incorrect Window Format", #ChangeWindowView)>
  [222] pusharglistnoret 1 ...................... <error(me, "Incorrect Window Format", #ChangeWindowView)>
  [224] extcall 43 .............................. return error(me, "Incorrect Window Format", #ChangeWindowView)
  [226] getparam 1 .............................. <tWindowName>
  [228] setprop 145 ............................. pOpenWindow = tWindowName
  [230] jmp [239]
  [233] pusharglist 0 ........................... <>
  [235] extcall 92 .............................. <VOID>
  [237] setprop 145 ............................. pOpenWindow = VOID
  [239] getprop 132 ............................. <pPagePropList>
  [241] pusharglist 1 ........................... <pPagePropList>
  [243] extcall 139 ............................. <voidp(pPagePropList)>
  [245] jmpifz [252] ............................ if voidp(pPagePropList) then
  [248] pushcons 66 ............................. <"ctlg_loading.window">
  [250] setparam 1 .............................. tWindowName = "ctlg_loading.window"
  [252] pushzero ................................ <0>
  [253] setprop 34 .............................. pProductOffset = 0
  [255] pushzero ................................ <0>
  [256] setprop 33 .............................. pProductPerPage = 0
  [258] pusharglist 0 ........................... <>
  [260] extcall 92 .............................. <VOID>
  [262] setprop 150 ............................. pSelectedProduct = VOID
  [264] pusharglist 0 ........................... <>
  [266] extcall 92 .............................. <VOID>
  [268] setprop 151 ............................. pLastProductNum = VOID
  [270] pushint8 1 .............................. <1>
  [272] setlocal 2 .............................. tFeedDataFlag = 1
  [274] pushzero ................................ <0>
  [275] setprop 33 .............................. pProductPerPage = 0
  [277] pushint8 1 .............................. <1>
  [279] setlocal 3
  [281] getlocal 3
  [283] pushint8 50 ............................. <50>
  [285] lteq
  [286] jmpifz [329] ............................ repeat with tProducts = 1 to 50
  [289] pushcons 67 ............................. <"ctlg_small_img_">
  [291] getlocal 3 .............................. <tProducts>
  [293] joinstr ................................. <"ctlg_small_img_" & tProducts>
  [294] setlocal 4 .............................. tid = "ctlg_small_img_" & tProducts
  [296] getlocal 0 .............................. <tWndObj>
  [298] getlocal 4 .............................. <tid>
  [300] pusharglist 2 ........................... <tWndObj, tid>
  [302] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [304] jmpifz [317] ............................ if tWndObj.elementExists(tid) then
  [307] getprop 33 .............................. <pProductPerPage>
  [309] pushint8 1 .............................. <1>
  [311] add ..................................... <pProductPerPage + 1>
  [312] setprop 33 .............................. pProductPerPage = pProductPerPage + 1
  [314] jmp [320] ............................... next repeat
  [317] jmp [329] ............................... exit repeat
  [320] pushint8 1
  [322] getlocal 3
  [324] add
  [325] setlocal 3
  [327] endrepeat [281]
  [329] getparam 1 .............................. <tWindowName>
  [331] peek 0 .................................. case tWindowName of
  [333] pusharglist 0 ........................... <>
  [335] extcall 92 .............................. <VOID>
  [337] nteq
  [338] jmpifz [349] ............................ (case) VOID, ...
  [341] peek 0
  [343] pushcons 66 ............................. <"ctlg_loading.window">
  [345] eq
  [346] jmpifz [376] ............................ (case) ..., "ctlg_loading.window":
  [349] getparam 0 .............................. <me>
  [351] pusharglistnoret 1 ...................... <me>
  [353] localcall 24 ............................ renderPageList(me)
  [355] getparam 0 .............................. <me>
  [357] pusharglist 1 ........................... <me>
  [359] objcall 121 ............................. <me.getComponent()>
  [361] pusharglistnoret 1 ...................... <me.getComponent()>
  [363] objcall 152 ............................. me.getComponent().retrieveCatalogueIndex()
  [365] pop 1
  [367] pushint8 1 .............................. <1>
  [369] pusharglistnoret 1 ...................... <1>
  [371] extcall 43 .............................. return 1
  [373] jmp [712]
  [376] peek 0
  [378] pushcons 68 ............................. <"frontpage.window">
  [380] eq
  [381] jmpifz [387] ............................ (case) "frontpage.window":
  [384] jmp [712]
  [387] peek 0
  [389] pushcons 60 ............................. <"ctlg_layout1.window">
  [391] nteq
  [392] jmpifz [403] ............................ (case) "ctlg_layout1.window", ...
  [395] peek 0
  [397] pushcons 69 ............................. <"ctlg_layout2.window">
  [399] eq
  [400] jmpifz [555] ............................ (case) ..., "ctlg_layout2.window":
  [403] getprop 137 ............................. <pCurrentPageData>
  [405] pushcons 70 ............................. <"teaserText">
  [407] pusharglist 2 ........................... <pCurrentPageData, "teaserText">
  [409] objcall 82 .............................. <pCurrentPageData["teaserText"]>
  [411] pusharglist 1 ........................... <pCurrentPageData["teaserText"]>
  [413] extcall 139 ............................. <voidp(pCurrentPageData["teaserText"])>
  [415] not ..................................... <not voidp(pCurrentPageData["teaserText"])>
  [416] jmpifz [454] ............................ if not voidp(pCurrentPageData["teaserText"]) then
  [419] getprop 137 ............................. <pCurrentPageData>
  [421] pushcons 70 ............................. <"teaserText">
  [423] pusharglist 2 ........................... <pCurrentPageData, "teaserText">
  [425] objcall 82 .............................. <pCurrentPageData["teaserText"]>
  [427] setlocal 5 .............................. tText = pCurrentPageData["teaserText"]
  [429] getlocal 0 .............................. <tWndObj>
  [431] pushcons 71 ............................. <"ctlg_description">
  [433] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [435] objcall 106 ............................. <tWndObj.elementExists("ctlg_description")>
  [437] jmpifz [454] ............................ if tWndObj.elementExists("ctlg_description") then
  [440] getlocal 0 .............................. <tWndObj>
  [442] pushcons 71 ............................. <"ctlg_description">
  [444] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [446] objcall 97 .............................. <tWndObj.getElement("ctlg_description")>
  [448] getlocal 5 .............................. <tText>
  [450] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_description"), tText>
  [452] objcall 98 .............................. tWndObj.getElement("ctlg_description").setText(tText)
  [454] getlocal 0 .............................. <tWndObj>
  [456] pushcons 72 ............................. <"ctlg_buy_button">
  [458] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [460] objcall 106 ............................. <tWndObj.elementExists("ctlg_buy_button")>
  [462] jmpifz [480] ............................ if tWndObj.elementExists("ctlg_buy_button") then
  [465] getlocal 0 .............................. <tWndObj>
  [467] pushcons 72 ............................. <"ctlg_buy_button">
  [469] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [471] objcall 97 .............................. <tWndObj.getElement("ctlg_buy_button")>
  [473] pushsymb 153 ............................ <#visible>
  [475] pushzero ................................ <0>
  [476] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_button"), #visible, 0>
  [478] objcall 103 ............................. tWndObj.getElement("ctlg_buy_button").setProperty(#visible, 0)
  [480] getlocal 0 .............................. <tWndObj>
  [482] pushcons 73 ............................. <"ctlg_select_product">
  [484] pusharglist 2 ........................... <tWndObj, "ctlg_select_product">
  [486] objcall 106 ............................. <tWndObj.elementExists("ctlg_select_product")>
  [488] pushcons 74 ............................. <"catalog_select_product">
  [490] pusharglist 1 ........................... <"catalog_select_product">
  [492] extcall 154 ............................. <textExists("catalog_select_product")>
  [494] and ..................................... <tWndObj.elementExists("ctlg_select_product") and textExists("catalog_select_product")>
  [495] jmpifz [516] ............................ if tWndObj.elementExists("ctlg_select_product") and textExists("catalog_select_product") then
  [498] getlocal 0 .............................. <tWndObj>
  [500] pushcons 73 ............................. <"ctlg_select_product">
  [502] pusharglist 2 ........................... <tWndObj, "ctlg_select_product">
  [504] objcall 97 .............................. <tWndObj.getElement("ctlg_select_product")>
  [506] pushcons 74 ............................. <"catalog_select_product">
  [508] pusharglist 1 ........................... <"catalog_select_product">
  [510] extcall 39 .............................. <getText("catalog_select_product")>
  [512] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_select_product"), getText("catalog_select_product")>
  [514] objcall 98 .............................. tWndObj.getElement("ctlg_select_product").setText(getText("catalog_select_product"))
  [516] getlocal 0 .............................. <tWndObj>
  [518] pushcons 75 ............................. <"ctlg_page_text">
  [520] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [522] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_text")>
  [524] pushcons 76 ............................. <"catalog_page">
  [526] pusharglist 1 ........................... <"catalog_page">
  [528] extcall 154 ............................. <textExists("catalog_page")>
  [530] and ..................................... <tWndObj.elementExists("ctlg_page_text") and textExists("catalog_page")>
  [531] jmpifz [552] ............................ if tWndObj.elementExists("ctlg_page_text") and textExists("catalog_page") then
  [534] getlocal 0 .............................. <tWndObj>
  [536] pushcons 75 ............................. <"ctlg_page_text">
  [538] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [540] objcall 97 .............................. <tWndObj.getElement("ctlg_page_text")>
  [542] pushcons 76 ............................. <"catalog_page">
  [544] pusharglist 1 ........................... <"catalog_page">
  [546] extcall 39 .............................. <getText("catalog_page")>
  [548] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_page_text"), getText("catalog_page")>
  [550] objcall 98 .............................. tWndObj.getElement("ctlg_page_text").setText(getText("catalog_page"))
  [552] jmp [712]
  [555] peek 0
  [557] pushcons 77 ............................. <"ctlg_productpage1.window">
  [559] nteq
  [560] jmpifz [587] ............................ (case) "ctlg_productpage1.window", ...
  [563] peek 0
  [565] pushcons 78 ............................. <"ctlg_productpage2.window">
  [567] nteq
  [568] jmpifz [587] ............................ (case) ..., "ctlg_productpage2.window", ...
  [571] peek 0
  [573] pushcons 79 ............................. <"ctlg_productpage3.window">
  [575] nteq
  [576] jmpifz [587] ............................ (case) ..., "ctlg_productpage3.window", ...
  [579] peek 0
  [581] pushcons 80 ............................. <"ctlg_productpage4.window">
  [583] eq
  [584] jmpifz [712] ............................ (case) ..., "ctlg_productpage4.window":
  [587] getprop 137 ............................. <pCurrentPageData>
  [589] pushcons 81 ............................. <"teaserImgList">
  [591] pusharglist 2 ........................... <pCurrentPageData, "teaserImgList">
  [593] objcall 82 .............................. <pCurrentPageData["teaserImgList"]>
  [595] pusharglist 1 ........................... <pCurrentPageData["teaserImgList"]>
  [597] extcall 139 ............................. <voidp(pCurrentPageData["teaserImgList"])>
  [599] getprop 137 ............................. <pCurrentPageData>
  [601] pushcons 82 ............................. <"productList">
  [603] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [605] objcall 82 .............................. <pCurrentPageData["productList"]>
  [607] pusharglist 1 ........................... <pCurrentPageData["productList"]>
  [609] extcall 139 ............................. <voidp(pCurrentPageData["productList"])>
  [611] not ..................................... <not voidp(pCurrentPageData["productList"])>
  [612] and ..................................... <voidp(pCurrentPageData["teaserImgList"]) and not voidp(pCurrentPageData["productList"])>
  [613] jmpifz [709] ............................ if voidp(pCurrentPageData["teaserImgList"]) and not voidp(pCurrentPageData["productList"]) then
  [616] getprop 137 ............................. <pCurrentPageData>
  [618] pushcons 82 ............................. <"productList">
  [620] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [622] objcall 82 .............................. <pCurrentPageData["productList"]>
  [624] getobjprop 135 .......................... <pCurrentPageData["productList"].ilk>
  [626] pushsymb 155 ............................ <#list>
  [628] eq ...................................... <pCurrentPageData["productList"].ilk = #list>
  [629] jmpifz [709] ............................ if pCurrentPageData["productList"].ilk = #list then
  [632] getprop 137 ............................. <pCurrentPageData>
  [634] pushcons 82 ............................. <"productList">
  [636] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [638] objcall 82 .............................. <pCurrentPageData["productList"]>
  [640] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [642] pushzero ................................ <0>
  [643] gt ...................................... <pCurrentPageData["productList"].count > 0>
  [644] jmpifz [709] ............................ if pCurrentPageData["productList"].count > 0 then
  [647] pushint8 1 .............................. <1>
  [649] setlocal 6
  [651] getlocal 6
  [653] getprop 137 ............................. <pCurrentPageData>
  [655] pushcons 82 ............................. <"productList">
  [657] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [659] objcall 82 .............................. <pCurrentPageData["productList"]>
  [661] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [663] lteq
  [664] jmpifz [709] ............................ repeat with tProductNum = 1 to pCurrentPageData["productList"].count
  [667] getprop 137 ............................. <pCurrentPageData>
  [669] pushcons 82 ............................. <"productList">
  [671] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [673] objcall 82 .............................. <pCurrentPageData["productList"]>
  [675] getlocal 6 .............................. <tProductNum>
  [677] pusharglist 2 ........................... <pCurrentPageData["productList"], tProductNum>
  [679] objcall 82 .............................. <pCurrentPageData["productList"][tProductNum]>
  [681] setlocal 7 .............................. tProps = pCurrentPageData["productList"][tProductNum]
  [683] pushcons 83 ............................. <"ctlg_teaserimg_">
  [685] getlocal 6 .............................. <tProductNum>
  [687] joinstr ................................. <"ctlg_teaserimg_" & tProductNum>
  [688] setlocal 8 .............................. tElemID = "ctlg_teaserimg_" & tProductNum
  [690] getparam 0 .............................. <me>
  [692] getlocal 7 .............................. <tProps>
  [694] getlocal 8 .............................. <tElemID>
  [696] pusharglistnoret 3 ...................... <me, tProps, tElemID>
  [698] localcall 23 ............................ showPreviewImage(me, tProps, tElemID)
  [700] pushint8 1
  [702] getlocal 6
  [704] add
  [705] setlocal 6
  [707] endrepeat [651]
  [709] jmp [712]
  [712] pop 1 ................................... end case
  [714] getlocal 2 .............................. <tFeedDataFlag>
  [716] jmpifz [725] ............................ if tFeedDataFlag then
  [719] getparam 0 .............................. <me>
  [721] pusharglistnoret 1 ...................... <me>
  [723] localcall 17 ............................ feedPageData(me)
  [725] getprop 40 .............................. <pPageProgramID>
  [727] pusharglist 1 ........................... <pPageProgramID>
  [729] extcall 70 .............................. <objectExists(pPageProgramID)>
  [731] jmpifz [740] ............................ if objectExists(pPageProgramID) then
  [734] getprop 40 .............................. <pPageProgramID>
  [736] pusharglistnoret 1 ...................... <pPageProgramID>
  [738] extcall 71 .............................. removeObject(pPageProgramID)
  [740] getprop 137 ............................. <pCurrentPageData>
  [742] getobjprop 135 .......................... <pCurrentPageData.ilk>
  [744] pushsymb 136 ............................ <#propList>
  [746] eq ...................................... <pCurrentPageData.ilk = #propList>
  [747] jmpifz [869] ............................ if pCurrentPageData.ilk = #propList then
  [750] getprop 137 ............................. <pCurrentPageData>
  [752] pushcons 57 ............................. <"layout">
  [754] pusharglist 2 ........................... <pCurrentPageData, "layout">
  [756] objcall 82 .............................. <pCurrentPageData["layout"]>
  [758] pusharglist 1 ........................... <pCurrentPageData["layout"]>
  [760] extcall 139 ............................. <voidp(pCurrentPageData["layout"])>
  [762] not ..................................... <not voidp(pCurrentPageData["layout"])>
  [763] jmpifz [869] ............................ if not voidp(pCurrentPageData["layout"]) then
  [766] getmovieprop 157 ........................ <the itemDelimiter>
  [768] setlocal 9 .............................. tDelim = the itemDelimiter
  [770] pushcons 84 ............................. <"_">
  [772] setmovieprop 157 ........................ the itemDelimiter = "_"
  [774] pushcons 85 ............................. <"Catalogue">
  [776] getprop 137 ............................. <pCurrentPageData>
  [778] pushcons 57 ............................. <"layout">
  [780] pusharglist 2 ........................... <pCurrentPageData, "layout">
  [782] objcall 82 .............................. <pCurrentPageData["layout"]>
  [784] pushsymb 158 ............................ <#item>
  [786] pushint8 2 .............................. <2>
  [788] pusharglist 3 ........................... <pCurrentPageData["layout"], #item, 2>
  [790] objcall 159 ............................. <pCurrentPageData["layout"].item[2]>
  [792] joinpadstr .............................. <"Catalogue" && pCurrentPageData["layout"].item[2]>
  [793] pushcons 86 ............................. <"Class">
  [795] joinpadstr .............................. <"Catalogue" && pCurrentPageData["layout"].item[2] && "Class">
  [796] setlocal 10 ............................. tClassMem = "Catalogue" && pCurrentPageData["layout"].item[2] && "Class"
  [798] getlocal 9 .............................. <tDelim>
  [800] setmovieprop 157 ........................ the itemDelimiter = tDelim
  [802] getlocal 10 ............................. <tClassMem>
  [804] pusharglist 1 ........................... <tClassMem>
  [806] extcall 90 .............................. <memberExists(tClassMem)>
  [808] jmpifz [869] ............................ if memberExists(tClassMem) then
  [811] getprop 40 .............................. <pPageProgramID>
  [813] getlocal 10 ............................. <tClassMem>
  [815] pusharglist 2 ........................... <pPageProgramID, tClassMem>
  [817] extcall 42 .............................. <createObject(pPageProgramID, tClassMem)>
  [819] setlocal 11 ............................. tPageObj = createObject(pPageProgramID, tClassMem)
  [821] getlocal 11 ............................. <tPageObj>
  [823] pushzero ................................ <0>
  [824] eq ...................................... <tPageObj = 0>
  [825] jmpifz [842] ............................ if tPageObj = 0 then
  [828] getparam 0 .............................. <me>
  [830] pushcons 87 ............................. <"Failed to create pageProgram">
  [832] pushsymb 14 ............................. <#ChangeWindowView>
  [834] pusharglist 3 ........................... <me, "Failed to create pageProgram", #ChangeWindowView>
  [836] extcall 44 .............................. <error(me, "Failed to create pageProgram", #ChangeWindowView)>
  [838] pusharglistnoret 1 ...................... <error(me, "Failed to create pageProgram", #ChangeWindowView)>
  [840] extcall 43 .............................. return error(me, "Failed to create pageProgram", #ChangeWindowView)
  [842] getprop 40 .............................. <pPageProgramID>
  [844] pusharglist 1 ........................... <pPageProgramID>
  [846] extcall 75 .............................. <getObject(pPageProgramID)>
  [848] pushsymb 160 ............................ <#define>
  [850] pusharglist 2 ........................... <getObject(pPageProgramID), #define>
  [852] objcall 161 ............................. <getObject(pPageProgramID).handler(#define)>
  [854] jmpifz [869] ............................ if getObject(pPageProgramID).handler(#define) then
  [857] getprop 40 .............................. <pPageProgramID>
  [859] pusharglist 1 ........................... <pPageProgramID>
  [861] extcall 75 .............................. <getObject(pPageProgramID)>
  [863] getprop 137 ............................. <pCurrentPageData>
  [865] pusharglistnoret 2 ...................... <getObject(pPageProgramID), pCurrentPageData>
  [867] objcall 160 ............................. getObject(pPageProgramID).define(pCurrentPageData)
  [869] pushzero ................................ <0>
  [870] setprop 45 .............................. pLoadingFlag = 0
  [872] ret
end

on feedPageData me
  [  0] getprop 137 ............................. <pCurrentPageData>
  [  2] getobjprop 135 .......................... <pCurrentPageData.ilk>
  [  4] pushsymb 136 ............................ <#propList>
  [  6] nteq .................................... <pCurrentPageData.ilk <> #propList>
  [  7] jmpifz [ 24] ............................ if pCurrentPageData.ilk <> #propList then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 88 ............................. <"Incorrect Data Format">
  [ 14] pushsymb 15 ............................. <#feedPageData>
  [ 16] pusharglist 3 ........................... <me, "Incorrect Data Format", #feedPageData>
  [ 18] extcall 44 .............................. <error(me, "Incorrect Data Format", #feedPageData)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Incorrect Data Format", #feedPageData)>
  [ 22] extcall 43 .............................. return error(me, "Incorrect Data Format", #feedPageData)
  [ 24] getprop 31 .............................. <pCatalogID>
  [ 26] pusharglist 1 ........................... <pCatalogID>
  [ 28] extcall 74 .............................. <windowExists(pCatalogID)>
  [ 30] not ..................................... <not windowExists(pCatalogID)>
  [ 31] jmpifz [ 38] ............................ if not windowExists(pCatalogID) then
  [ 34] pusharglistnoret 0 ...................... <>
  [ 36] extcall 43 .............................. return 
  [ 38] getprop 31 .............................. <pCatalogID>
  [ 40] pusharglist 1 ........................... <pCatalogID>
  [ 42] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 44] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 46] getlocal 0 .............................. <tWndObj>
  [ 48] pushcons 89 ............................. <"ctlg_header_img">
  [ 50] pusharglist 2 ........................... <tWndObj, "ctlg_header_img">
  [ 52] objcall 106 ............................. <tWndObj.elementExists("ctlg_header_img")>
  [ 54] jmpifz [219] ............................ if tWndObj.elementExists("ctlg_header_img") then
  [ 57] getprop 137 ............................. <pCurrentPageData>
  [ 59] pushcons 90 ............................. <"headerImage">
  [ 61] pusharglist 2 ........................... <pCurrentPageData, "headerImage">
  [ 63] objcall 82 .............................. <pCurrentPageData["headerImage"]>
  [ 65] pusharglist 1 ........................... <pCurrentPageData["headerImage"]>
  [ 67] extcall 139 ............................. <voidp(pCurrentPageData["headerImage"])>
  [ 69] not ..................................... <not voidp(pCurrentPageData["headerImage"])>
  [ 70] jmpifz [219] ............................ if not voidp(pCurrentPageData["headerImage"]) then
  [ 73] getprop 137 ............................. <pCurrentPageData>
  [ 75] pushcons 90 ............................. <"headerImage">
  [ 77] pusharglist 2 ........................... <pCurrentPageData, "headerImage">
  [ 79] objcall 82 .............................. <pCurrentPageData["headerImage"]>
  [ 81] pushzero ................................ <0>
  [ 82] gt ...................................... <pCurrentPageData["headerImage"] > 0>
  [ 83] jmpifz [219] ............................ if pCurrentPageData["headerImage"] > 0 then
  [ 86] getlocal 0 .............................. <tWndObj>
  [ 88] pushcons 89 ............................. <"ctlg_header_img">
  [ 90] pusharglist 2 ........................... <tWndObj, "ctlg_header_img">
  [ 92] objcall 97 .............................. <tWndObj.getElement("ctlg_header_img")>
  [ 94] setlocal 1 .............................. tElem = tWndObj.getElement("ctlg_header_img")
  [ 96] getlocal 1 .............................. <tElem>
  [ 98] pushsymb 36 ............................. <#image>
  [100] pusharglist 2 ........................... <tElem, #image>
  [102] objcall 174 ............................. <tElem.getProperty(#image)>
  [104] setlocal 2 .............................. tDestImg = tElem.getProperty(#image)
  [106] getprop 137 ............................. <pCurrentPageData>
  [108] pushcons 90 ............................. <"headerImage">
  [110] pusharglist 2 ........................... <pCurrentPageData, "headerImage">
  [112] objcall 82 .............................. <pCurrentPageData["headerImage"]>
  [114] pusharglist 1 ........................... <pCurrentPageData["headerImage"]>
  [116] extcall 175 ............................. <member(pCurrentPageData["headerImage"])>
  [118] getobjprop 36 ........................... <member(pCurrentPageData["headerImage"]).image>
  [120] setlocal 3 .............................. tSourceImg = member(pCurrentPageData["headerImage"]).image
  [122] getlocal 2 .............................. <tDestImg>
  [124] getobjprop 176 .......................... <tDestImg.rect>
  [126] getlocal 3 .............................. <tSourceImg>
  [128] getobjprop 176 .......................... <tSourceImg.rect>
  [130] sub ..................................... <tDestImg.rect - tSourceImg.rect>
  [131] setlocal 4 .............................. tdestrect = tDestImg.rect - tSourceImg.rect
  [133] pushzero ................................ <0>
  [134] pushzero ................................ <0>
  [135] pushzero ................................ <0>
  [136] pushzero ................................ <0>
  [137] pusharglist 4 ........................... <0, 0, 0, 0>
  [139] extcall 176 ............................. <rect(0, 0, 0, 0)>
  [141] setlocal 5 .............................. tMargins = rect(0, 0, 0, 0)
  [143] getlocal 4 .............................. <tdestrect>
  [145] getobjprop 177 .......................... <tdestrect.width>
  [147] pushint8 2 .............................. <2>
  [149] div ..................................... <tdestrect.width / 2>
  [150] getlocal 4 .............................. <tdestrect>
  [152] getobjprop 178 .......................... <tdestrect.height>
  [154] pushint8 2 .............................. <2>
  [156] div ..................................... <tdestrect.height / 2>
  [157] getlocal 3 .............................. <tSourceImg>
  [159] getobjprop 177 .......................... <tSourceImg.width>
  [161] getlocal 4 .............................. <tdestrect>
  [163] getobjprop 177 .......................... <tdestrect.width>
  [165] pushint8 2 .............................. <2>
  [167] div ..................................... <tdestrect.width / 2>
  [168] add ..................................... <tSourceImg.width + (tdestrect.width / 2)>
  [169] getlocal 4 .............................. <tdestrect>
  [171] getobjprop 178 .......................... <tdestrect.height>
  [173] pushint8 2 .............................. <2>
  [175] div ..................................... <tdestrect.height / 2>
  [176] getlocal 3 .............................. <tSourceImg>
  [178] getobjprop 178 .......................... <tSourceImg.height>
  [180] add ..................................... <(tdestrect.height / 2) + tSourceImg.height>
  [181] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height>
  [183] extcall 176 ............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height)>
  [185] getlocal 5 .............................. <tMargins>
  [187] add ..................................... <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height) + tMargins>
  [188] setlocal 4 .............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height) + tMargins
  [190] getlocal 2 .............................. <tDestImg>
  [192] getlocal 3 .............................. <tSourceImg>
  [194] getlocal 4 .............................. <tdestrect>
  [196] getlocal 3 .............................. <tSourceImg>
  [198] getobjprop 176 .......................... <tSourceImg.rect>
  [200] pushsymb 179 ............................ <#ink>
  [202] pushint8 8 .............................. <8>
  [204] pusharglist 2 ........................... <[#ink: 8]>
  [206] pushproplist ............................ <[#ink: 8]>
  [207] pusharglistnoret 5 ...................... <tDestImg, tSourceImg, tdestrect, tSourceImg.rect, [#ink: 8]>
  [209] objcall 180 ............................. tDestImg.copyPixels(tSourceImg, tdestrect, tSourceImg.rect, [#ink: 8])
  [211] getlocal 1 .............................. <tElem>
  [213] getlocal 2 .............................. <tDestImg>
  [215] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [217] objcall 181 ............................. tElem.feedImage(tDestImg)
  [219] getlocal 0 .............................. <tWndObj>
  [221] pushcons 91 ............................. <"ctlg_header_text">
  [223] pusharglist 2 ........................... <tWndObj, "ctlg_header_text">
  [225] objcall 106 ............................. <tWndObj.elementExists("ctlg_header_text")>
  [227] jmpifz [266] ............................ if tWndObj.elementExists("ctlg_header_text") then
  [230] getprop 137 ............................. <pCurrentPageData>
  [232] pushcons 92 ............................. <"headerText">
  [234] pusharglist 2 ........................... <pCurrentPageData, "headerText">
  [236] objcall 82 .............................. <pCurrentPageData["headerText"]>
  [238] pusharglist 1 ........................... <pCurrentPageData["headerText"]>
  [240] extcall 139 ............................. <voidp(pCurrentPageData["headerText"])>
  [242] not ..................................... <not voidp(pCurrentPageData["headerText"])>
  [243] jmpifz [266] ............................ if not voidp(pCurrentPageData["headerText"]) then
  [246] getlocal 0 .............................. <tWndObj>
  [248] pushcons 91 ............................. <"ctlg_header_text">
  [250] pusharglist 2 ........................... <tWndObj, "ctlg_header_text">
  [252] objcall 97 .............................. <tWndObj.getElement("ctlg_header_text")>
  [254] getprop 137 ............................. <pCurrentPageData>
  [256] pushcons 92 ............................. <"headerText">
  [258] pusharglist 2 ........................... <pCurrentPageData, "headerText">
  [260] objcall 82 .............................. <pCurrentPageData["headerText"]>
  [262] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_header_text"), pCurrentPageData["headerText"]>
  [264] objcall 98 .............................. tWndObj.getElement("ctlg_header_text").setText(pCurrentPageData["headerText"])
  [266] getprop 137 ............................. <pCurrentPageData>
  [268] pushcons 93 ............................. <"textList">
  [270] pusharglist 2 ........................... <pCurrentPageData, "textList">
  [272] objcall 82 .............................. <pCurrentPageData["textList"]>
  [274] pusharglist 1 ........................... <pCurrentPageData["textList"]>
  [276] extcall 139 ............................. <voidp(pCurrentPageData["textList"])>
  [278] not ..................................... <not voidp(pCurrentPageData["textList"])>
  [279] jmpifz [362] ............................ if not voidp(pCurrentPageData["textList"]) then
  [282] getprop 137 ............................. <pCurrentPageData>
  [284] pushcons 93 ............................. <"textList">
  [286] pusharglist 2 ........................... <pCurrentPageData, "textList">
  [288] objcall 82 .............................. <pCurrentPageData["textList"]>
  [290] setlocal 6 .............................. tTextList = pCurrentPageData["textList"]
  [292] getlocal 6 .............................. <tTextList>
  [294] getobjprop 135 .......................... <tTextList.ilk>
  [296] pushsymb 155 ............................ <#list>
  [298] eq ...................................... <tTextList.ilk = #list>
  [299] jmpifz [362] ............................ if tTextList.ilk = #list then
  [302] pushint8 1 .............................. <1>
  [304] setlocal 7
  [306] getlocal 7
  [308] getlocal 6 .............................. <tTextList>
  [310] getobjprop 156 .......................... <tTextList.count>
  [312] lteq
  [313] jmpifz [362] ............................ repeat with t = 1 to tTextList.count
  [316] getlocal 0 .............................. <tWndObj>
  [318] pushcons 94 ............................. <"ctlg_text_">
  [320] getlocal 7 .............................. <t>
  [322] joinstr ................................. <"ctlg_text_" & t>
  [323] pusharglist 2 ........................... <tWndObj, "ctlg_text_" & t>
  [325] objcall 106 ............................. <tWndObj.elementExists("ctlg_text_" & t)>
  [327] jmpifz [353] ............................ if tWndObj.elementExists("ctlg_text_" & t) then
  [330] getlocal 0 .............................. <tWndObj>
  [332] pushcons 94 ............................. <"ctlg_text_">
  [334] getlocal 7 .............................. <t>
  [336] joinstr ................................. <"ctlg_text_" & t>
  [337] pusharglist 2 ........................... <tWndObj, "ctlg_text_" & t>
  [339] objcall 97 .............................. <tWndObj.getElement("ctlg_text_" & t)>
  [341] getlocal 6 .............................. <tTextList>
  [343] getlocal 7 .............................. <t>
  [345] pusharglist 2 ........................... <tTextList, t>
  [347] objcall 82 .............................. <tTextList[t]>
  [349] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_text_" & t), tTextList[t]>
  [351] objcall 98 .............................. tWndObj.getElement("ctlg_text_" & t).setText(tTextList[t])
  [353] pushint8 1
  [355] getlocal 7
  [357] add
  [358] setlocal 7
  [360] endrepeat [306]
  [362] getprop 137 ............................. <pCurrentPageData>
  [364] pushcons 81 ............................. <"teaserImgList">
  [366] pusharglist 2 ........................... <pCurrentPageData, "teaserImgList">
  [368] objcall 82 .............................. <pCurrentPageData["teaserImgList"]>
  [370] pusharglist 1 ........................... <pCurrentPageData["teaserImgList"]>
  [372] extcall 139 ............................. <voidp(pCurrentPageData["teaserImgList"])>
  [374] not ..................................... <not voidp(pCurrentPageData["teaserImgList"])>
  [375] jmpifz [582] ............................ if not voidp(pCurrentPageData["teaserImgList"]) then
  [378] getprop 137 ............................. <pCurrentPageData>
  [380] pushcons 81 ............................. <"teaserImgList">
  [382] pusharglist 2 ........................... <pCurrentPageData, "teaserImgList">
  [384] objcall 82 .............................. <pCurrentPageData["teaserImgList"]>
  [386] setlocal 8 .............................. tImgList = pCurrentPageData["teaserImgList"]
  [388] getlocal 8 .............................. <tImgList>
  [390] getobjprop 135 .......................... <tImgList.ilk>
  [392] pushsymb 155 ............................ <#list>
  [394] eq ...................................... <tImgList.ilk = #list>
  [395] jmpifz [582] ............................ if tImgList.ilk = #list then
  [398] pushint8 1 .............................. <1>
  [400] setlocal 7
  [402] getlocal 7
  [404] getlocal 8 .............................. <tImgList>
  [406] getobjprop 156 .......................... <tImgList.count>
  [408] lteq
  [409] jmpifz [582] ............................ repeat with t = 1 to tImgList.count
  [412] getlocal 0 .............................. <tWndObj>
  [414] pushcons 83 ............................. <"ctlg_teaserimg_">
  [416] getlocal 7 .............................. <t>
  [418] joinstr ................................. <"ctlg_teaserimg_" & t>
  [419] pusharglist 2 ........................... <tWndObj, "ctlg_teaserimg_" & t>
  [421] objcall 106 ............................. <tWndObj.elementExists("ctlg_teaserimg_" & t)>
  [423] jmpifz [573] ............................ if tWndObj.elementExists("ctlg_teaserimg_" & t) then
  [426] getlocal 0 .............................. <tWndObj>
  [428] pushcons 83 ............................. <"ctlg_teaserimg_">
  [430] getlocal 7 .............................. <t>
  [432] joinstr ................................. <"ctlg_teaserimg_" & t>
  [433] pusharglist 2 ........................... <tWndObj, "ctlg_teaserimg_" & t>
  [435] objcall 97 .............................. <tWndObj.getElement("ctlg_teaserimg_" & t)>
  [437] setlocal 1 .............................. tElem = tWndObj.getElement("ctlg_teaserimg_" & t)
  [439] getlocal 8 .............................. <tImgList>
  [441] getlocal 7 .............................. <t>
  [443] pusharglist 2 ........................... <tImgList, t>
  [445] objcall 82 .............................. <tImgList[t]>
  [447] setlocal 9 .............................. tmember = tImgList[t]
  [449] getlocal 9 .............................. <tmember>
  [451] pushzero ................................ <0>
  [452] nteq .................................... <tmember <> 0>
  [453] jmpifz [573] ............................ if tmember <> 0 then
  [456] getlocal 1 .............................. <tElem>
  [458] pushsymb 36 ............................. <#image>
  [460] pusharglist 2 ........................... <tElem, #image>
  [462] objcall 174 ............................. <tElem.getProperty(#image)>
  [464] setlocal 2 .............................. tDestImg = tElem.getProperty(#image)
  [466] getlocal 9 .............................. <tmember>
  [468] pusharglist 1 ........................... <tmember>
  [470] extcall 175 ............................. <member(tmember)>
  [472] getobjprop 36 ........................... <member(tmember).image>
  [474] setlocal 3 .............................. tSourceImg = member(tmember).image
  [476] getlocal 2 .............................. <tDestImg>
  [478] getobjprop 176 .......................... <tDestImg.rect>
  [480] getlocal 3 .............................. <tSourceImg>
  [482] getobjprop 176 .......................... <tSourceImg.rect>
  [484] sub ..................................... <tDestImg.rect - tSourceImg.rect>
  [485] setlocal 4 .............................. tdestrect = tDestImg.rect - tSourceImg.rect
  [487] pushzero ................................ <0>
  [488] pushzero ................................ <0>
  [489] pushzero ................................ <0>
  [490] pushzero ................................ <0>
  [491] pusharglist 4 ........................... <0, 0, 0, 0>
  [493] extcall 176 ............................. <rect(0, 0, 0, 0)>
  [495] setlocal 5 .............................. tMargins = rect(0, 0, 0, 0)
  [497] getlocal 4 .............................. <tdestrect>
  [499] getobjprop 177 .......................... <tdestrect.width>
  [501] pushint8 2 .............................. <2>
  [503] div ..................................... <tdestrect.width / 2>
  [504] getlocal 4 .............................. <tdestrect>
  [506] getobjprop 178 .......................... <tdestrect.height>
  [508] pushint8 2 .............................. <2>
  [510] div ..................................... <tdestrect.height / 2>
  [511] getlocal 3 .............................. <tSourceImg>
  [513] getobjprop 177 .......................... <tSourceImg.width>
  [515] getlocal 4 .............................. <tdestrect>
  [517] getobjprop 177 .......................... <tdestrect.width>
  [519] pushint8 2 .............................. <2>
  [521] div ..................................... <tdestrect.width / 2>
  [522] add ..................................... <tSourceImg.width + (tdestrect.width / 2)>
  [523] getlocal 4 .............................. <tdestrect>
  [525] getobjprop 178 .......................... <tdestrect.height>
  [527] pushint8 2 .............................. <2>
  [529] div ..................................... <tdestrect.height / 2>
  [530] getlocal 3 .............................. <tSourceImg>
  [532] getobjprop 178 .......................... <tSourceImg.height>
  [534] add ..................................... <(tdestrect.height / 2) + tSourceImg.height>
  [535] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height>
  [537] extcall 176 ............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height)>
  [539] getlocal 5 .............................. <tMargins>
  [541] add ..................................... <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height) + tMargins>
  [542] setlocal 4 .............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height) + tMargins
  [544] getlocal 2 .............................. <tDestImg>
  [546] getlocal 3 .............................. <tSourceImg>
  [548] getlocal 4 .............................. <tdestrect>
  [550] getlocal 3 .............................. <tSourceImg>
  [552] getobjprop 176 .......................... <tSourceImg.rect>
  [554] pushsymb 179 ............................ <#ink>
  [556] pushint8 36 ............................. <36>
  [558] pusharglist 2 ........................... <[#ink: 36]>
  [560] pushproplist ............................ <[#ink: 36]>
  [561] pusharglistnoret 5 ...................... <tDestImg, tSourceImg, tdestrect, tSourceImg.rect, [#ink: 36]>
  [563] objcall 180 ............................. tDestImg.copyPixels(tSourceImg, tdestrect, tSourceImg.rect, [#ink: 36])
  [565] getlocal 1 .............................. <tElem>
  [567] getlocal 2 .............................. <tDestImg>
  [569] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [571] objcall 181 ............................. tElem.feedImage(tDestImg)
  [573] pushint8 1
  [575] getlocal 7
  [577] add
  [578] setlocal 7
  [580] endrepeat [402]
  [582] getprop 137 ............................. <pCurrentPageData>
  [584] pushcons 95 ............................. <"teaserSpecialText">
  [586] pusharglist 2 ........................... <pCurrentPageData, "teaserSpecialText">
  [588] objcall 82 .............................. <pCurrentPageData["teaserSpecialText"]>
  [590] pusharglist 1 ........................... <pCurrentPageData["teaserSpecialText"]>
  [592] extcall 139 ............................. <voidp(pCurrentPageData["teaserSpecialText"])>
  [594] not ..................................... <not voidp(pCurrentPageData["teaserSpecialText"])>
  [595] jmpifz [612] ............................ if not voidp(pCurrentPageData["teaserSpecialText"]) then
  [598] getparam 0 .............................. <me>
  [600] getprop 137 ............................. <pCurrentPageData>
  [602] pushcons 95 ............................. <"teaserSpecialText">
  [604] pusharglist 2 ........................... <pCurrentPageData, "teaserSpecialText">
  [606] objcall 82 .............................. <pCurrentPageData["teaserSpecialText"]>
  [608] pusharglistnoret 2 ...................... <me, pCurrentPageData["teaserSpecialText"]>
  [610] objcall 16 .............................. me.showSpecialText(pCurrentPageData["teaserSpecialText"])
  [612] getprop 137 ............................. <pCurrentPageData>
  [614] pushcons 82 ............................. <"productList">
  [616] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [618] objcall 82 .............................. <pCurrentPageData["productList"]>
  [620] pusharglist 1 ........................... <pCurrentPageData["productList"]>
  [622] extcall 139 ............................. <voidp(pCurrentPageData["productList"])>
  [624] not ..................................... <not voidp(pCurrentPageData["productList"])>
  [625] jmpifz [982] ............................ if not voidp(pCurrentPageData["productList"]) then
  [628] getprop 137 ............................. <pCurrentPageData>
  [630] pushcons 82 ............................. <"productList">
  [632] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [634] objcall 82 .............................. <pCurrentPageData["productList"]>
  [636] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [638] pushzero ................................ <0>
  [639] gt ...................................... <pCurrentPageData["productList"].count > 0>
  [640] jmpifz [982] ............................ if pCurrentPageData["productList"].count > 0 then
  [643] getprop 33 .............................. <pProductPerPage>
  [645] pushzero ................................ <0>
  [646] gt ...................................... <pProductPerPage > 0>
  [647] jmpifz [674] ............................ if pProductPerPage > 0 then / else
  [650] getparam 0 .............................. <me>
  [652] pusharglistnoret 1 ...................... <me>
  [654] localcall 22 ............................ ShowSmallIcons(me)
  [656] getprop 140 ............................. <pPageLinkList>
  [658] pusharglist 1 ........................... <pPageLinkList>
  [660] extcall 139 ............................. <voidp(pPageLinkList)>
  [662] jmpifz [671] ............................ if voidp(pPageLinkList) then
  [665] getparam 0 .............................. <me>
  [667] pusharglistnoret 1 ...................... <me>
  [669] localcall 20 ............................ showProductPageCounter(me)
  [671] jmp [982]
  [674] pushint8 1 .............................. <1>
  [676] setlocal 10
  [678] getlocal 10
  [680] pushint8 25 ............................. <25>
  [682] lteq
  [683] jmpifz [982] ............................ repeat with tNum = 1 to 25
  [686] pushcons 96 ............................. <"ctlg_buy_">
  [688] getlocal 10 ............................. <tNum>
  [690] joinstr ................................. <"ctlg_buy_" & tNum>
  [691] setlocal 11 ............................. tid = "ctlg_buy_" & tNum
  [693] getlocal 0 .............................. <tWndObj>
  [695] getlocal 11 ............................. <tid>
  [697] pusharglist 2 ........................... <tWndObj, tid>
  [699] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [701] jmpifz [969] ............................ if tWndObj.elementExists(tid) then
  [704] getlocal 10 ............................. <tNum>
  [706] getprop 137 ............................. <pCurrentPageData>
  [708] pushcons 82 ............................. <"productList">
  [710] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [712] objcall 82 .............................. <pCurrentPageData["productList"]>
  [714] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [716] gt ...................................... <tNum > pCurrentPageData["productList"].count>
  [717] jmpifz [738] ............................ if tNum > pCurrentPageData["productList"].count then / else
  [720] getlocal 0 .............................. <tWndObj>
  [722] getlocal 11 ............................. <tid>
  [724] pusharglist 2 ........................... <tWndObj, tid>
  [726] objcall 97 .............................. <tWndObj.getElement(tid)>
  [728] pushsymb 153 ............................ <#visible>
  [730] pushzero ................................ <0>
  [731] pusharglistnoret 3 ...................... <tWndObj.getElement(tid), #visible, 0>
  [733] objcall 103 ............................. tWndObj.getElement(tid).setProperty(#visible, 0)
  [735] jmp [966]
  [738] getprop 137 ............................. <pCurrentPageData>
  [740] pushcons 82 ............................. <"productList">
  [742] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [744] objcall 82 .............................. <pCurrentPageData["productList"]>
  [746] getlocal 10 ............................. <tNum>
  [748] pusharglist 2 ........................... <pCurrentPageData["productList"], tNum>
  [750] objcall 82 .............................. <pCurrentPageData["productList"][tNum]>
  [752] setlocal 12 ............................. tProduct = pCurrentPageData["productList"][tNum]
  [754] getlocal 12 ............................. <tProduct>
  [756] pushcons 97 ............................. <"name">
  [758] pusharglist 2 ........................... <tProduct, "name">
  [760] objcall 82 .............................. <tProduct["name"]>
  [762] pusharglist 1 ........................... <tProduct["name"]>
  [764] extcall 139 ............................. <voidp(tProduct["name"])>
  [766] not ..................................... <not voidp(tProduct["name"])>
  [767] jmpifz [807] ............................ if not voidp(tProduct["name"]) then
  [770] getlocal 0 .............................. <tWndObj>
  [772] pushcons 98 ............................. <"ctlg_product_name_">
  [774] getlocal 10 ............................. <tNum>
  [776] joinstr ................................. <"ctlg_product_name_" & tNum>
  [777] pusharglist 2 ........................... <tWndObj, "ctlg_product_name_" & tNum>
  [779] objcall 106 ............................. <tWndObj.elementExists("ctlg_product_name_" & tNum)>
  [781] jmpifz [807] ............................ if tWndObj.elementExists("ctlg_product_name_" & tNum) then
  [784] getlocal 0 .............................. <tWndObj>
  [786] pushcons 98 ............................. <"ctlg_product_name_">
  [788] getlocal 10 ............................. <tNum>
  [790] joinstr ................................. <"ctlg_product_name_" & tNum>
  [791] pusharglist 2 ........................... <tWndObj, "ctlg_product_name_" & tNum>
  [793] objcall 97 .............................. <tWndObj.getElement("ctlg_product_name_" & tNum)>
  [795] getlocal 12 ............................. <tProduct>
  [797] pushcons 97 ............................. <"name">
  [799] pusharglist 2 ........................... <tProduct, "name">
  [801] objcall 82 .............................. <tProduct["name"]>
  [803] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_product_name_" & tNum), tProduct["name"]>
  [805] objcall 98 .............................. tWndObj.getElement("ctlg_product_name_" & tNum).setText(tProduct["name"])
  [807] getlocal 12 ............................. <tProduct>
  [809] pushcons 99 ............................. <"description">
  [811] pusharglist 2 ........................... <tProduct, "description">
  [813] objcall 82 .............................. <tProduct["description"]>
  [815] pusharglist 1 ........................... <tProduct["description"]>
  [817] extcall 139 ............................. <voidp(tProduct["description"])>
  [819] not ..................................... <not voidp(tProduct["description"])>
  [820] jmpifz [860] ............................ if not voidp(tProduct["description"]) then
  [823] getlocal 0 .............................. <tWndObj>
  [825] pushcons 100 ............................ <"ctlg_description_">
  [827] getlocal 10 ............................. <tNum>
  [829] joinstr ................................. <"ctlg_description_" & tNum>
  [830] pusharglist 2 ........................... <tWndObj, "ctlg_description_" & tNum>
  [832] objcall 106 ............................. <tWndObj.elementExists("ctlg_description_" & tNum)>
  [834] jmpifz [860] ............................ if tWndObj.elementExists("ctlg_description_" & tNum) then
  [837] getlocal 0 .............................. <tWndObj>
  [839] pushcons 100 ............................ <"ctlg_description_">
  [841] getlocal 10 ............................. <tNum>
  [843] joinstr ................................. <"ctlg_description_" & tNum>
  [844] pusharglist 2 ........................... <tWndObj, "ctlg_description_" & tNum>
  [846] objcall 97 .............................. <tWndObj.getElement("ctlg_description_" & tNum)>
  [848] getlocal 12 ............................. <tProduct>
  [850] pushcons 99 ............................. <"description">
  [852] pusharglist 2 ........................... <tProduct, "description">
  [854] objcall 82 .............................. <tProduct["description"]>
  [856] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_description_" & tNum), tProduct["description"]>
  [858] objcall 98 .............................. tWndObj.getElement("ctlg_description_" & tNum).setText(tProduct["description"])
  [860] getlocal 12 ............................. <tProduct>
  [862] pushcons 101 ............................ <"price">
  [864] pusharglist 2 ........................... <tProduct, "price">
  [866] objcall 82 .............................. <tProduct["price"]>
  [868] pusharglist 1 ........................... <tProduct["price"]>
  [870] extcall 139 ............................. <voidp(tProduct["price"])>
  [872] not ..................................... <not voidp(tProduct["price"])>
  [873] jmpifz [966] ............................ if not voidp(tProduct["price"]) then
  [876] getlocal 0 .............................. <tWndObj>
  [878] pushcons 102 ............................ <"ctlg_price_">
  [880] getlocal 10 ............................. <tNum>
  [882] joinstr ................................. <"ctlg_price_" & tNum>
  [883] pusharglist 2 ........................... <tWndObj, "ctlg_price_" & tNum>
  [885] objcall 106 ............................. <tWndObj.elementExists("ctlg_price_" & tNum)>
  [887] jmpifz [966] ............................ if tWndObj.elementExists("ctlg_price_" & tNum) then
  [890] getlocal 12 ............................. <tProduct>
  [892] pushcons 101 ............................ <"price">
  [894] pusharglist 2 ........................... <tProduct, "price">
  [896] objcall 82 .............................. <tProduct["price"]>
  [898] pusharglist 1 ........................... <tProduct["price"]>
  [900] extcall 80 .............................. <value(tProduct["price"])>
  [902] pushint8 1 .............................. <1>
  [904] gt ...................................... <value(tProduct["price"]) > 1>
  [905] jmpifz [930] ............................ if value(tProduct["price"]) > 1 then / else
  [908] getlocal 12 ............................. <tProduct>
  [910] pushcons 101 ............................ <"price">
  [912] pusharglist 2 ........................... <tProduct, "price">
  [914] objcall 82 .............................. <tProduct["price"]>
  [916] pushcons 103 ............................ <"credits">
  [918] pushcons 103 ............................ <"credits">
  [920] pusharglist 2 ........................... <"credits", "credits">
  [922] extcall 39 .............................. <getText("credits", "credits")>
  [924] joinpadstr .............................. <tProduct["price"] && getText("credits", "credits")>
  [925] setlocal 13 ............................. tText = tProduct["price"] && getText("credits", "credits")
  [927] jmp [949]
  [930] getlocal 12 ............................. <tProduct>
  [932] pushcons 101 ............................ <"price">
  [934] pusharglist 2 ........................... <tProduct, "price">
  [936] objcall 82 .............................. <tProduct["price"]>
  [938] pushcons 104 ............................ <"credit">
  [940] pushcons 104 ............................ <"credit">
  [942] pusharglist 2 ........................... <"credit", "credit">
  [944] extcall 39 .............................. <getText("credit", "credit")>
  [946] joinpadstr .............................. <tProduct["price"] && getText("credit", "credit")>
  [947] setlocal 13 ............................. tText = tProduct["price"] && getText("credit", "credit")
  [949] getlocal 0 .............................. <tWndObj>
  [951] pushcons 102 ............................ <"ctlg_price_">
  [953] getlocal 10 ............................. <tNum>
  [955] joinstr ................................. <"ctlg_price_" & tNum>
  [956] pusharglist 2 ........................... <tWndObj, "ctlg_price_" & tNum>
  [958] objcall 97 .............................. <tWndObj.getElement("ctlg_price_" & tNum)>
  [960] getlocal 13 ............................. <tText>
  [962] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_" & tNum), tText>
  [964] objcall 98 .............................. tWndObj.getElement("ctlg_price_" & tNum).setText(tText)
  [966] jmp [972] ............................... next repeat
  [969] jmp [982] ............................... exit repeat
  [972] pushint8 1
  [974] getlocal 10
  [976] add
  [977] setlocal 10
  [979] endrepeat [678]
  [982] getlocal 0 .............................. <tWndObj>
  [984] pushcons 105 ............................ <"ctlg_price_box">
  [986] pusharglist 2 ........................... <tWndObj, "ctlg_price_box">
  [988] objcall 106 ............................. <tWndObj.elementExists("ctlg_price_box")>
  [990] jmpifz [1008] ........................... if tWndObj.elementExists("ctlg_price_box") then
  [993] getlocal 0 .............................. <tWndObj>
  [995] pushcons 105 ............................ <"ctlg_price_box">
  [997] pusharglist 2 ........................... <tWndObj, "ctlg_price_box">
  [999] objcall 97 .............................. <tWndObj.getElement("ctlg_price_box")>
  [1001] pushsymb 153 ........................... <#visible>
  [1003] pushzero ............................... <0>
  [1004] pusharglistnoret 3 ..................... <tWndObj.getElement("ctlg_price_box"), #visible, 0>
  [1006] objcall 103 ............................ tWndObj.getElement("ctlg_price_box").setProperty(#visible, 0)
  [1008] getprop 140 ............................ <pPageLinkList>
  [1010] pusharglist 1 .......................... <pPageLinkList>
  [1012] extcall 139 ............................ <voidp(pPageLinkList)>
  [1014] not .................................... <not voidp(pPageLinkList)>
  [1015] jmpifz [1027] .......................... if not voidp(pPageLinkList) then / else
  [1018] getparam 0 ............................. <me>
  [1020] pusharglistnoret 1 ..................... <me>
  [1022] localcall 21 ........................... showSubPageCounter(me)
  [1024] jmp [1087]
  [1027] pushcons 106 ........................... <"ctlg_nextpage_button">
  [1029] setlocal 11 ............................ tid = "ctlg_nextpage_button"
  [1031] getlocal 0 ............................. <tWndObj>
  [1033] getlocal 11 ............................ <tid>
  [1035] pusharglist 2 .......................... <tWndObj, tid>
  [1037] objcall 106 ............................ <tWndObj.elementExists(tid)>
  [1039] jmpifz [1057] .......................... if tWndObj.elementExists(tid) then
  [1042] getlocal 0 ............................. <tWndObj>
  [1044] getlocal 11 ............................ <tid>
  [1046] pusharglist 2 .......................... <tWndObj, tid>
  [1048] objcall 97 ............................. <tWndObj.getElement(tid)>
  [1050] pushsymb 153 ........................... <#visible>
  [1052] pushzero ............................... <0>
  [1053] pusharglistnoret 3 ..................... <tWndObj.getElement(tid), #visible, 0>
  [1055] objcall 103 ............................ tWndObj.getElement(tid).setProperty(#visible, 0)
  [1057] pushcons 107 ........................... <"ctlg_prevpage_button">
  [1059] setlocal 11 ............................ tid = "ctlg_prevpage_button"
  [1061] getlocal 0 ............................. <tWndObj>
  [1063] getlocal 11 ............................ <tid>
  [1065] pusharglist 2 .......................... <tWndObj, tid>
  [1067] objcall 106 ............................ <tWndObj.elementExists(tid)>
  [1069] jmpifz [1087] .......................... if tWndObj.elementExists(tid) then
  [1072] getlocal 0 ............................. <tWndObj>
  [1074] getlocal 11 ............................ <tid>
  [1076] pusharglist 2 .......................... <tWndObj, tid>
  [1078] objcall 97 ............................. <tWndObj.getElement(tid)>
  [1080] pushsymb 153 ........................... <#visible>
  [1082] pushzero ............................... <0>
  [1083] pusharglistnoret 3 ..................... <tWndObj.getElement(tid), #visible, 0>
  [1085] objcall 103 ............................ tWndObj.getElement(tid).setProperty(#visible, 0)
  [1087] pushcons 108 ........................... <"ctlg_loading_bg">
  [1089] setlocal 11 ............................ tid = "ctlg_loading_bg"
  [1091] getlocal 0 ............................. <tWndObj>
  [1093] getlocal 11 ............................ <tid>
  [1095] pusharglist 2 .......................... <tWndObj, tid>
  [1097] objcall 106 ............................ <tWndObj.elementExists(tid)>
  [1099] jmpifz [1117] .......................... if tWndObj.elementExists(tid) then
  [1102] getlocal 0 ............................. <tWndObj>
  [1104] getlocal 11 ............................ <tid>
  [1106] pusharglist 2 .......................... <tWndObj, tid>
  [1108] objcall 97 ............................. <tWndObj.getElement(tid)>
  [1110] pushsymb 153 ........................... <#visible>
  [1112] pushzero ............................... <0>
  [1113] pusharglistnoret 3 ..................... <tWndObj.getElement(tid), #visible, 0>
  [1115] objcall 103 ............................ tWndObj.getElement(tid).setProperty(#visible, 0)
  [1117] pushcons 109 ........................... <"ctlg_loading_box">
  [1119] setlocal 11 ............................ tid = "ctlg_loading_box"
  [1121] getlocal 0 ............................. <tWndObj>
  [1123] getlocal 11 ............................ <tid>
  [1125] pusharglist 2 .......................... <tWndObj, tid>
  [1127] objcall 106 ............................ <tWndObj.elementExists(tid)>
  [1129] jmpifz [1147] .......................... if tWndObj.elementExists(tid) then
  [1132] getlocal 0 ............................. <tWndObj>
  [1134] getlocal 11 ............................ <tid>
  [1136] pusharglist 2 .......................... <tWndObj, tid>
  [1138] objcall 97 ............................. <tWndObj.getElement(tid)>
  [1140] pushsymb 153 ........................... <#visible>
  [1142] pushzero ............................... <0>
  [1143] pusharglistnoret 3 ..................... <tWndObj.getElement(tid), #visible, 0>
  [1145] objcall 103 ............................ tWndObj.getElement(tid).setProperty(#visible, 0)
  [1147] pushcons 110 ........................... <"ctlg_loading_anim">
  [1149] setlocal 11 ............................ tid = "ctlg_loading_anim"
  [1151] getlocal 0 ............................. <tWndObj>
  [1153] getlocal 11 ............................ <tid>
  [1155] pusharglist 2 .......................... <tWndObj, tid>
  [1157] objcall 106 ............................ <tWndObj.elementExists(tid)>
  [1159] jmpifz [1177] .......................... if tWndObj.elementExists(tid) then
  [1162] getlocal 0 ............................. <tWndObj>
  [1164] getlocal 11 ............................ <tid>
  [1166] pusharglist 2 .......................... <tWndObj, tid>
  [1168] objcall 97 ............................. <tWndObj.getElement(tid)>
  [1170] pushsymb 153 ........................... <#visible>
  [1172] pushzero ............................... <0>
  [1173] pusharglistnoret 3 ..................... <tWndObj.getElement(tid), #visible, 0>
  [1175] objcall 103 ............................ tWndObj.getElement(tid).setProperty(#visible, 0)
  [1177] pushcons 111 ........................... <"ctlg_loading_text">
  [1179] setlocal 11 ............................ tid = "ctlg_loading_text"
  [1181] getlocal 0 ............................. <tWndObj>
  [1183] getlocal 11 ............................ <tid>
  [1185] pusharglist 2 .......................... <tWndObj, tid>
  [1187] objcall 106 ............................ <tWndObj.elementExists(tid)>
  [1189] jmpifz [1207] .......................... if tWndObj.elementExists(tid) then
  [1192] getlocal 0 ............................. <tWndObj>
  [1194] getlocal 11 ............................ <tid>
  [1196] pusharglist 2 .......................... <tWndObj, tid>
  [1198] objcall 97 ............................. <tWndObj.getElement(tid)>
  [1200] pushsymb 153 ........................... <#visible>
  [1202] pushzero ............................... <0>
  [1203] pusharglistnoret 3 ..................... <tWndObj.getElement(tid), #visible, 0>
  [1205] objcall 103 ............................ tWndObj.getElement(tid).setProperty(#visible, 0)
  [1207] ret
end

on showSpecialText me, tSpecialText
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 14] ............................ if not windowExists(pCatalogID) then
  [ 10] pusharglistnoret 0 ...................... <>
  [ 12] extcall 43 .............................. return 
  [ 14] getparam 1 .............................. <tSpecialText>
  [ 16] getobjprop 135 .......................... <tSpecialText.ilk>
  [ 18] pushsymb 89 ............................. <#string>
  [ 20] nteq .................................... <tSpecialText.ilk <> #string>
  [ 21] jmpifz [ 28] ............................ if tSpecialText.ilk <> #string then
  [ 24] pusharglistnoret 0 ...................... <>
  [ 26] extcall 43 .............................. return 
  [ 28] getparam 1 .............................. <tSpecialText>
  [ 30] getobjprop 193 .......................... <tSpecialText.length>
  [ 32] pushint8 2 .............................. <2>
  [ 34] lt ...................................... <tSpecialText.length < 2>
  [ 35] jmpifz [ 42] ............................ if tSpecialText.length < 2 then
  [ 38] pusharglistnoret 0 ...................... <>
  [ 40] extcall 43 .............................. return 
  [ 42] getprop 31 .............................. <pCatalogID>
  [ 44] pusharglist 1 ........................... <pCatalogID>
  [ 46] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 48] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 50] getlocal 0 .............................. <tWndObj>
  [ 52] pushcons 112 ............................ <"ctlg_special_img">
  [ 54] pusharglist 2 ........................... <tWndObj, "ctlg_special_img">
  [ 56] objcall 106 ............................. <tWndObj.elementExists("ctlg_special_img")>
  [ 58] not ..................................... <not tWndObj.elementExists("ctlg_special_img")>
  [ 59] jmpifz [ 66] ............................ if not tWndObj.elementExists("ctlg_special_img") then
  [ 62] pusharglistnoret 0 ...................... <>
  [ 64] extcall 43 .............................. return 
  [ 66] getlocal 0 .............................. <tWndObj>
  [ 68] pushcons 112 ............................ <"ctlg_special_img">
  [ 70] pusharglist 2 ........................... <tWndObj, "ctlg_special_img">
  [ 72] objcall 97 .............................. <tWndObj.getElement("ctlg_special_img")>
  [ 74] setlocal 1 .............................. tElem = tWndObj.getElement("ctlg_special_img")
  [ 76] getmovieprop 157 ........................ <the itemDelimiter>
  [ 78] setlocal 2 .............................. tDelim = the itemDelimiter
  [ 80] pushcons 113 ............................ <":">
  [ 82] setmovieprop 157 ........................ the itemDelimiter = ":"
  [ 84] getparam 1 .............................. <tSpecialText>
  [ 86] pushsymb 158 ............................ <#item>
  [ 88] pushint8 1 .............................. <1>
  [ 90] pusharglist 3 ........................... <tSpecialText, #item, 1>
  [ 92] objcall 159 ............................. <tSpecialText.item[1]>
  [ 94] pusharglist 1 ........................... <tSpecialText.item[1]>
  [ 96] extcall 79 .............................. <integer(tSpecialText.item[1])>
  [ 98] setlocal 3 .............................. ttype = integer(tSpecialText.item[1])
  [100] getparam 1 .............................. <tSpecialText>
  [102] pushsymb 158 ............................ <#item>
  [104] getparam 1 .............................. <tSpecialText>
  [106] pushsymb 158 ............................ <#item>
  [108] pusharglist 2 ........................... <tSpecialText, #item>
  [110] objcall 156 ............................. <tSpecialText.item.count>
  [112] pusharglist 3 ........................... <tSpecialText, #item, tSpecialText.item.count>
  [114] objcall 159 ............................. <tSpecialText.item[tSpecialText.item.count]>
  [116] setlocal 4 .............................. tText = tSpecialText.item[tSpecialText.item.count]
  [118] getlocal 2 .............................. <tDelim>
  [120] setmovieprop 157 ........................ the itemDelimiter = tDelim
  [122] getlocal 3 .............................. <ttype>
  [124] pusharglist 1 ........................... <ttype>
  [126] extcall 139 ............................. <voidp(ttype)>
  [128] jmpifz [135] ............................ if voidp(ttype) then
  [131] pushint8 1 .............................. <1>
  [133] setlocal 3 .............................. ttype = 1
  [135] pushcons 114 ............................ <"catalog_special_txtbg">
  [137] getlocal 3 .............................. <ttype>
  [139] joinstr ................................. <"catalog_special_txtbg" & ttype>
  [140] setlocal 5 .............................. tMem = "catalog_special_txtbg" & ttype
  [142] getlocal 5 .............................. <tMem>
  [144] pusharglist 1 ........................... <tMem>
  [146] extcall 90 .............................. <memberExists(tMem)>
  [148] jmpifz [295] ............................ if memberExists(tMem) then
  [151] getlocal 1 .............................. <tElem>
  [153] pushsymb 36 ............................. <#image>
  [155] pusharglist 2 ........................... <tElem, #image>
  [157] objcall 174 ............................. <tElem.getProperty(#image)>
  [159] setlocal 6 .............................. tDestImg = tElem.getProperty(#image)
  [161] getlocal 5 .............................. <tMem>
  [163] pusharglist 1 ........................... <tMem>
  [165] extcall 194 ............................. <getmemnum(tMem)>
  [167] pusharglist 1 ........................... <getmemnum(tMem)>
  [169] extcall 175 ............................. <member(getmemnum(tMem))>
  [171] getobjprop 36 ........................... <member(getmemnum(tMem)).image>
  [173] setlocal 7 .............................. tSourceImg = member(getmemnum(tMem)).image
  [175] getlocal 6 .............................. <tDestImg>
  [177] getlocal 6 .............................. <tDestImg>
  [179] getobjprop 176 .......................... <tDestImg.rect>
  [181] pushint16 255 ........................... <255>
  [184] pushint16 255 ........................... <255>
  [187] pushint16 255 ........................... <255>
  [190] pusharglist 3 ........................... <255, 255, 255>
  [192] extcall 53 .............................. <rgb(255, 255, 255)>
  [194] pusharglistnoret 3 ...................... <tDestImg, tDestImg.rect, rgb(255, 255, 255)>
  [196] objcall 195 ............................. tDestImg.fill(tDestImg.rect, rgb(255, 255, 255))
  [198] getlocal 6 .............................. <tDestImg>
  [200] getobjprop 176 .......................... <tDestImg.rect>
  [202] getlocal 7 .............................. <tSourceImg>
  [204] getobjprop 176 .......................... <tSourceImg.rect>
  [206] sub ..................................... <tDestImg.rect - tSourceImg.rect>
  [207] setlocal 8 .............................. tdestrect = tDestImg.rect - tSourceImg.rect
  [209] pushzero ................................ <0>
  [210] pushzero ................................ <0>
  [211] pushzero ................................ <0>
  [212] pushzero ................................ <0>
  [213] pusharglist 4 ........................... <0, 0, 0, 0>
  [215] extcall 176 ............................. <rect(0, 0, 0, 0)>
  [217] setlocal 9 .............................. tMargins = rect(0, 0, 0, 0)
  [219] getlocal 8 .............................. <tdestrect>
  [221] getobjprop 177 .......................... <tdestrect.width>
  [223] pushint8 2 .............................. <2>
  [225] div ..................................... <tdestrect.width / 2>
  [226] getlocal 8 .............................. <tdestrect>
  [228] getobjprop 178 .......................... <tdestrect.height>
  [230] pushint8 2 .............................. <2>
  [232] div ..................................... <tdestrect.height / 2>
  [233] getlocal 7 .............................. <tSourceImg>
  [235] getobjprop 177 .......................... <tSourceImg.width>
  [237] getlocal 8 .............................. <tdestrect>
  [239] getobjprop 177 .......................... <tdestrect.width>
  [241] pushint8 2 .............................. <2>
  [243] div ..................................... <tdestrect.width / 2>
  [244] add ..................................... <tSourceImg.width + (tdestrect.width / 2)>
  [245] getlocal 8 .............................. <tdestrect>
  [247] getobjprop 178 .......................... <tdestrect.height>
  [249] pushint8 2 .............................. <2>
  [251] div ..................................... <tdestrect.height / 2>
  [252] getlocal 7 .............................. <tSourceImg>
  [254] getobjprop 178 .......................... <tSourceImg.height>
  [256] add ..................................... <(tdestrect.height / 2) + tSourceImg.height>
  [257] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height>
  [259] extcall 176 ............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height)>
  [261] getlocal 9 .............................. <tMargins>
  [263] add ..................................... <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height) + tMargins>
  [264] setlocal 8 .............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height) + tMargins
  [266] getlocal 6 .............................. <tDestImg>
  [268] getlocal 7 .............................. <tSourceImg>
  [270] getlocal 8 .............................. <tdestrect>
  [272] getlocal 7 .............................. <tSourceImg>
  [274] getobjprop 176 .......................... <tSourceImg.rect>
  [276] pushsymb 179 ............................ <#ink>
  [278] pushint8 8 .............................. <8>
  [280] pusharglist 2 ........................... <[#ink: 8]>
  [282] pushproplist ............................ <[#ink: 8]>
  [283] pusharglistnoret 5 ...................... <tDestImg, tSourceImg, tdestrect, tSourceImg.rect, [#ink: 8]>
  [285] objcall 180 ............................. tDestImg.copyPixels(tSourceImg, tdestrect, tSourceImg.rect, [#ink: 8])
  [287] getlocal 1 .............................. <tElem>
  [289] getlocal 6 .............................. <tDestImg>
  [291] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [293] objcall 181 ............................. tElem.feedImage(tDestImg)
  [295] getlocal 0 .............................. <tWndObj>
  [297] pushcons 115 ............................ <"ctlg_special_txt">
  [299] pusharglist 2 ........................... <tWndObj, "ctlg_special_txt">
  [301] objcall 106 ............................. <tWndObj.elementExists("ctlg_special_txt")>
  [303] jmpifz [320] ............................ if tWndObj.elementExists("ctlg_special_txt") then
  [306] getlocal 0 .............................. <tWndObj>
  [308] pushcons 115 ............................ <"ctlg_special_txt">
  [310] pusharglist 2 ........................... <tWndObj, "ctlg_special_txt">
  [312] objcall 97 .............................. <tWndObj.getElement("ctlg_special_txt")>
  [314] getlocal 4 .............................. <tText>
  [316] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_special_txt"), tText>
  [318] objcall 98 .............................. tWndObj.getElement("ctlg_special_txt").setText(tText)
  [320] ret
end

on hideSpecialText me
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 14] ............................ if not windowExists(pCatalogID) then
  [ 10] pusharglistnoret 0 ...................... <>
  [ 12] extcall 43 .............................. return 
  [ 14] getprop 31 .............................. <pCatalogID>
  [ 16] pusharglist 1 ........................... <pCatalogID>
  [ 18] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 20] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 22] getlocal 0 .............................. <tWndObj>
  [ 24] pushcons 112 ............................ <"ctlg_special_img">
  [ 26] pusharglist 2 ........................... <tWndObj, "ctlg_special_img">
  [ 28] objcall 106 ............................. <tWndObj.elementExists("ctlg_special_img")>
  [ 30] jmpifz [ 45] ............................ if tWndObj.elementExists("ctlg_special_img") then
  [ 33] getlocal 0 .............................. <tWndObj>
  [ 35] pushcons 112 ............................ <"ctlg_special_img">
  [ 37] pusharglist 2 ........................... <tWndObj, "ctlg_special_img">
  [ 39] objcall 97 .............................. <tWndObj.getElement("ctlg_special_img")>
  [ 41] pusharglistnoret 1 ...................... <tWndObj.getElement("ctlg_special_img")>
  [ 43] objcall 199 ............................. tWndObj.getElement("ctlg_special_img").clearImage()
  [ 45] getlocal 0 .............................. <tWndObj>
  [ 47] pushcons 115 ............................ <"ctlg_special_txt">
  [ 49] pusharglist 2 ........................... <tWndObj, "ctlg_special_txt">
  [ 51] objcall 106 ............................. <tWndObj.elementExists("ctlg_special_txt")>
  [ 53] jmpifz [ 70] ............................ if tWndObj.elementExists("ctlg_special_txt") then
  [ 56] getlocal 0 .............................. <tWndObj>
  [ 58] pushcons 115 ............................ <"ctlg_special_txt">
  [ 60] pusharglist 2 ........................... <tWndObj, "ctlg_special_txt">
  [ 62] objcall 97 .............................. <tWndObj.getElement("ctlg_special_txt")>
  [ 64] pushcons 28 ............................. <EMPTY>
  [ 66] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_special_txt"), EMPTY>
  [ 68] objcall 98 .............................. tWndObj.getElement("ctlg_special_txt").setText(EMPTY)
  [ 70] ret
end

on showProductPageCounter me
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 14] ............................ if not windowExists(pCatalogID) then
  [ 10] pusharglistnoret 0 ...................... <>
  [ 12] extcall 43 .............................. return 
  [ 14] getprop 31 .............................. <pCatalogID>
  [ 16] pusharglist 1 ........................... <pCatalogID>
  [ 18] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 20] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 22] getprop 137 ............................. <pCurrentPageData>
  [ 24] pushcons 82 ............................. <"productList">
  [ 26] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [ 28] objcall 82 .............................. <pCurrentPageData["productList"]>
  [ 30] pusharglist 1 ........................... <pCurrentPageData["productList"]>
  [ 32] extcall 139 ............................. <voidp(pCurrentPageData["productList"])>
  [ 34] not ..................................... <not voidp(pCurrentPageData["productList"])>
  [ 35] jmpifz [613] ............................ if not voidp(pCurrentPageData["productList"]) then / else
  [ 38] getprop 33 .............................. <pProductPerPage>
  [ 40] getprop 137 ............................. <pCurrentPageData>
  [ 42] pushcons 82 ............................. <"productList">
  [ 44] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [ 46] objcall 82 .............................. <pCurrentPageData["productList"]>
  [ 48] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [ 50] gteq .................................... <pProductPerPage >= pCurrentPageData["productList"].count>
  [ 51] jmpifz [161] ............................ if pProductPerPage >= pCurrentPageData["productList"].count then / else
  [ 54] getlocal 0 .............................. <tWndObj>
  [ 56] pushcons 116 ............................ <"ctlg_next_button">
  [ 58] pusharglist 2 ........................... <tWndObj, "ctlg_next_button">
  [ 60] objcall 106 ............................. <tWndObj.elementExists("ctlg_next_button")>
  [ 62] jmpifz [ 80] ............................ if tWndObj.elementExists("ctlg_next_button") then
  [ 65] getlocal 0 .............................. <tWndObj>
  [ 67] pushcons 116 ............................ <"ctlg_next_button">
  [ 69] pusharglist 2 ........................... <tWndObj, "ctlg_next_button">
  [ 71] objcall 97 .............................. <tWndObj.getElement("ctlg_next_button")>
  [ 73] pushsymb 153 ............................ <#visible>
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_next_button"), #visible, 0>
  [ 78] objcall 103 ............................. tWndObj.getElement("ctlg_next_button").setProperty(#visible, 0)
  [ 80] getlocal 0 .............................. <tWndObj>
  [ 82] pushcons 117 ............................ <"ctlg_prev_button">
  [ 84] pusharglist 2 ........................... <tWndObj, "ctlg_prev_button">
  [ 86] objcall 106 ............................. <tWndObj.elementExists("ctlg_prev_button")>
  [ 88] jmpifz [106] ............................ if tWndObj.elementExists("ctlg_prev_button") then
  [ 91] getlocal 0 .............................. <tWndObj>
  [ 93] pushcons 117 ............................ <"ctlg_prev_button">
  [ 95] pusharglist 2 ........................... <tWndObj, "ctlg_prev_button">
  [ 97] objcall 97 .............................. <tWndObj.getElement("ctlg_prev_button")>
  [ 99] pushsymb 153 ............................ <#visible>
  [101] pushzero ................................ <0>
  [102] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_prev_button"), #visible, 0>
  [104] objcall 103 ............................. tWndObj.getElement("ctlg_prev_button").setProperty(#visible, 0)
  [106] getlocal 0 .............................. <tWndObj>
  [108] pushcons 118 ............................ <"ctlg_page_counter">
  [110] pusharglist 2 ........................... <tWndObj, "ctlg_page_counter">
  [112] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_counter")>
  [114] jmpifz [132] ............................ if tWndObj.elementExists("ctlg_page_counter") then
  [117] getlocal 0 .............................. <tWndObj>
  [119] pushcons 118 ............................ <"ctlg_page_counter">
  [121] pusharglist 2 ........................... <tWndObj, "ctlg_page_counter">
  [123] objcall 97 .............................. <tWndObj.getElement("ctlg_page_counter")>
  [125] pushsymb 153 ............................ <#visible>
  [127] pushzero ................................ <0>
  [128] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_page_counter"), #visible, 0>
  [130] objcall 103 ............................. tWndObj.getElement("ctlg_page_counter").setProperty(#visible, 0)
  [132] getlocal 0 .............................. <tWndObj>
  [134] pushcons 75 ............................. <"ctlg_page_text">
  [136] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [138] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_text")>
  [140] jmpifz [158] ............................ if tWndObj.elementExists("ctlg_page_text") then
  [143] getlocal 0 .............................. <tWndObj>
  [145] pushcons 75 ............................. <"ctlg_page_text">
  [147] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [149] objcall 97 .............................. <tWndObj.getElement("ctlg_page_text")>
  [151] pushsymb 153 ............................ <#visible>
  [153] pushzero ................................ <0>
  [154] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_page_text"), #visible, 0>
  [156] objcall 103 ............................. tWndObj.getElement("ctlg_page_text").setProperty(#visible, 0)
  [158] jmp [610]
  [161] getlocal 0 .............................. <tWndObj>
  [163] pushcons 75 ............................. <"ctlg_page_text">
  [165] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [167] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_text")>
  [169] jmpifz [196] ............................ if tWndObj.elementExists("ctlg_page_text") then
  [172] pushcons 76 ............................. <"catalog_page">
  [174] pushcons 119 ............................ <"page">
  [176] pusharglist 2 ........................... <"catalog_page", "page">
  [178] extcall 39 .............................. <getText("catalog_page", "page")>
  [180] setlocal 1 .............................. tPage = getText("catalog_page", "page")
  [182] getlocal 0 .............................. <tWndObj>
  [184] pushcons 75 ............................. <"ctlg_page_text">
  [186] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [188] objcall 97 .............................. <tWndObj.getElement("ctlg_page_text")>
  [190] getlocal 1 .............................. <tPage>
  [192] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_page_text"), tPage>
  [194] objcall 98 .............................. tWndObj.getElement("ctlg_page_text").setText(tPage)
  [196] getlocal 0 .............................. <tWndObj>
  [198] pushcons 118 ............................ <"ctlg_page_counter">
  [200] pusharglist 2 ........................... <tWndObj, "ctlg_page_counter">
  [202] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_counter")>
  [204] jmpifz [374] ............................ if tWndObj.elementExists("ctlg_page_counter") then
  [207] getprop 34 .............................. <pProductOffset>
  [209] getprop 33 .............................. <pProductPerPage>
  [211] div ..................................... <pProductOffset / pProductPerPage>
  [212] pusharglist 1 ........................... <pProductOffset / pProductPerPage>
  [214] extcall 79 .............................. <integer(pProductOffset / pProductPerPage)>
  [216] pushint8 1 .............................. <1>
  [218] add ..................................... <integer(pProductOffset / pProductPerPage) + 1>
  [219] setlocal 2 .............................. tCurrent = integer(pProductOffset / pProductPerPage) + 1
  [221] getprop 137 ............................. <pCurrentPageData>
  [223] pushcons 82 ............................. <"productList">
  [225] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [227] objcall 82 .............................. <pCurrentPageData["productList"]>
  [229] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [231] pusharglist 1 ........................... <pCurrentPageData["productList"].count>
  [233] extcall 200 ............................. <float(pCurrentPageData["productList"].count)>
  [235] getprop 33 .............................. <pProductPerPage>
  [237] pusharglist 1 ........................... <pProductPerPage>
  [239] extcall 200 ............................. <float(pProductPerPage)>
  [241] div ..................................... <float(pCurrentPageData["productList"].count) / float(pProductPerPage)>
  [242] setlocal 3 .............................. tTotalPages = float(pCurrentPageData["productList"].count) / float(pProductPerPage)
  [244] getlocal 3 .............................. <tTotalPages>
  [246] getlocal 3 .............................. <tTotalPages>
  [248] pusharglist 1 ........................... <tTotalPages>
  [250] extcall 79 .............................. <integer(tTotalPages)>
  [252] sub ..................................... <tTotalPages - integer(tTotalPages)>
  [253] pushzero ................................ <0>
  [254] gt ...................................... <(tTotalPages - integer(tTotalPages)) > 0>
  [255] jmpifz [272] ............................ if (tTotalPages - integer(tTotalPages)) > 0 then / else
  [258] getlocal 3 .............................. <tTotalPages>
  [260] pusharglist 1 ........................... <tTotalPages>
  [262] extcall 79 .............................. <integer(tTotalPages)>
  [264] pushint8 1 .............................. <1>
  [266] add ..................................... <integer(tTotalPages) + 1>
  [267] setlocal 3 .............................. tTotalPages = integer(tTotalPages) + 1
  [269] jmp [280]
  [272] getlocal 3 .............................. <tTotalPages>
  [274] pusharglist 1 ........................... <tTotalPages>
  [276] extcall 79 .............................. <integer(tTotalPages)>
  [278] setlocal 3 .............................. tTotalPages = integer(tTotalPages)
  [280] getlocal 2 .............................. <tCurrent>
  [282] pusharglist 1 ........................... <tCurrent>
  [284] extcall 89 .............................. <string(tCurrent)>
  [286] pushcons 120 ............................ <"/">
  [288] joinstr ................................. <string(tCurrent) & "/">
  [289] getlocal 3 .............................. <tTotalPages>
  [291] pusharglist 1 ........................... <tTotalPages>
  [293] extcall 79 .............................. <integer(tTotalPages)>
  [295] pusharglist 1 ........................... <integer(tTotalPages)>
  [297] extcall 89 .............................. <string(integer(tTotalPages))>
  [299] joinstr ................................. <string(tCurrent) & "/" & string(integer(tTotalPages))>
  [300] setlocal 4 .............................. tCounterText = string(tCurrent) & "/" & string(integer(tTotalPages))
  [302] getlocal 0 .............................. <tWndObj>
  [304] pushcons 118 ............................ <"ctlg_page_counter">
  [306] pusharglist 2 ........................... <tWndObj, "ctlg_page_counter">
  [308] objcall 97 .............................. <tWndObj.getElement("ctlg_page_counter")>
  [310] getlocal 4 .............................. <tCounterText>
  [312] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_page_counter"), tCounterText>
  [314] objcall 98 .............................. tWndObj.getElement("ctlg_page_counter").setText(tCounterText)
  [316] getlocal 2 .............................. <tCurrent>
  [318] pushint8 1 .............................. <1>
  [320] eq ...................................... <tCurrent = 1>
  [321] jmpifz [334] ............................ if tCurrent = 1 then / else
  [324] pushint8 1 .............................. <1>
  [326] setlocal 5 .............................. tNextButton = 1
  [328] pushzero ................................ <0>
  [329] setlocal 6 .............................. tPrewButton = 0
  [331] jmp [374]
  [334] getlocal 2 .............................. <tCurrent>
  [336] getlocal 3 .............................. <tTotalPages>
  [338] eq ...................................... <tCurrent = tTotalPages>
  [339] jmpifz [352] ............................ if tCurrent = tTotalPages then / else
  [342] pushzero ................................ <0>
  [343] setlocal 5 .............................. tNextButton = 0
  [345] pushint8 1 .............................. <1>
  [347] setlocal 6 .............................. tPrewButton = 1
  [349] jmp [374]
  [352] getlocal 2 .............................. <tCurrent>
  [354] pushint8 1 .............................. <1>
  [356] gt ...................................... <tCurrent > 1>
  [357] getlocal 2 .............................. <tCurrent>
  [359] getlocal 3 .............................. <tTotalPages>
  [361] lt ...................................... <tCurrent < tTotalPages>
  [362] and ..................................... <(tCurrent > 1) and (tCurrent < tTotalPages)>
  [363] jmpifz [374] ............................ if (tCurrent > 1) and (tCurrent < tTotalPages) then
  [366] pushint8 1 .............................. <1>
  [368] setlocal 5 .............................. tNextButton = 1
  [370] pushint8 1 .............................. <1>
  [372] setlocal 6 .............................. tPrewButton = 1
  [374] getlocal 0 .............................. <tWndObj>
  [376] pushcons 116 ............................ <"ctlg_next_button">
  [378] pusharglist 2 ........................... <tWndObj, "ctlg_next_button">
  [380] objcall 106 ............................. <tWndObj.elementExists("ctlg_next_button")>
  [382] jmpifz [438] ............................ if tWndObj.elementExists("ctlg_next_button") then
  [385] getlocal 0 .............................. <tWndObj>
  [387] pushcons 116 ............................ <"ctlg_next_button">
  [389] pusharglist 2 ........................... <tWndObj, "ctlg_next_button">
  [391] objcall 97 .............................. <tWndObj.getElement("ctlg_next_button")>
  [393] setlocal 7 .............................. tElem = tWndObj.getElement("ctlg_next_button")
  [395] getlocal 5 .............................. <tNextButton>
  [397] jmpifz [421] ............................ if tNextButton then / else
  [400] getlocal 7 .............................. <tElem>
  [402] getparam 0 .............................. <me>
  [404] pusharglistnoret 2 ...................... <tElem, me>
  [406] objcall 201 ............................. tElem.Activate(me)
  [408] getlocal 7 .............................. <tElem>
  [410] pushsymb 202 ............................ <#cursor>
  [412] pushcons 121 ............................ <"cursor.finger">
  [414] pusharglistnoret 3 ...................... <tElem, #cursor, "cursor.finger">
  [416] objcall 103 ............................. tElem.setProperty(#cursor, "cursor.finger")
  [418] jmp [438]
  [421] getlocal 7 .............................. <tElem>
  [423] getparam 0 .............................. <me>
  [425] pusharglistnoret 2 ...................... <tElem, me>
  [427] objcall 203 ............................. tElem.deactivate(me)
  [429] getlocal 7 .............................. <tElem>
  [431] pushsymb 202 ............................ <#cursor>
  [433] pushzero ................................ <0>
  [434] pusharglistnoret 3 ...................... <tElem, #cursor, 0>
  [436] objcall 103 ............................. tElem.setProperty(#cursor, 0)
  [438] getlocal 0 .............................. <tWndObj>
  [440] pushcons 117 ............................ <"ctlg_prev_button">
  [442] pusharglist 2 ........................... <tWndObj, "ctlg_prev_button">
  [444] objcall 106 ............................. <tWndObj.elementExists("ctlg_prev_button")>
  [446] jmpifz [502] ............................ if tWndObj.elementExists("ctlg_prev_button") then
  [449] getlocal 0 .............................. <tWndObj>
  [451] pushcons 117 ............................ <"ctlg_prev_button">
  [453] pusharglist 2 ........................... <tWndObj, "ctlg_prev_button">
  [455] objcall 97 .............................. <tWndObj.getElement("ctlg_prev_button")>
  [457] setlocal 7 .............................. tElem = tWndObj.getElement("ctlg_prev_button")
  [459] getlocal 6 .............................. <tPrewButton>
  [461] jmpifz [485] ............................ if tPrewButton then / else
  [464] getlocal 7 .............................. <tElem>
  [466] getparam 0 .............................. <me>
  [468] pusharglistnoret 2 ...................... <tElem, me>
  [470] objcall 201 ............................. tElem.Activate(me)
  [472] getlocal 7 .............................. <tElem>
  [474] pushsymb 202 ............................ <#cursor>
  [476] pushcons 121 ............................ <"cursor.finger">
  [478] pusharglistnoret 3 ...................... <tElem, #cursor, "cursor.finger">
  [480] objcall 103 ............................. tElem.setProperty(#cursor, "cursor.finger")
  [482] jmp [502]
  [485] getlocal 7 .............................. <tElem>
  [487] getparam 0 .............................. <me>
  [489] pusharglistnoret 2 ...................... <tElem, me>
  [491] objcall 203 ............................. tElem.deactivate(me)
  [493] getlocal 7 .............................. <tElem>
  [495] pushsymb 202 ............................ <#cursor>
  [497] pushzero ................................ <0>
  [498] pusharglistnoret 3 ...................... <tElem, #cursor, 0>
  [500] objcall 103 ............................. tElem.setProperty(#cursor, 0)
  [502] getlocal 0 .............................. <tWndObj>
  [504] pushcons 116 ............................ <"ctlg_next_button">
  [506] pusharglist 2 ........................... <tWndObj, "ctlg_next_button">
  [508] objcall 106 ............................. <tWndObj.elementExists("ctlg_next_button")>
  [510] jmpifz [529] ............................ if tWndObj.elementExists("ctlg_next_button") then
  [513] getlocal 0 .............................. <tWndObj>
  [515] pushcons 116 ............................ <"ctlg_next_button">
  [517] pusharglist 2 ........................... <tWndObj, "ctlg_next_button">
  [519] objcall 97 .............................. <tWndObj.getElement("ctlg_next_button")>
  [521] pushsymb 153 ............................ <#visible>
  [523] pushint8 1 .............................. <1>
  [525] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_next_button"), #visible, 1>
  [527] objcall 103 ............................. tWndObj.getElement("ctlg_next_button").setProperty(#visible, 1)
  [529] getlocal 0 .............................. <tWndObj>
  [531] pushcons 117 ............................ <"ctlg_prev_button">
  [533] pusharglist 2 ........................... <tWndObj, "ctlg_prev_button">
  [535] objcall 106 ............................. <tWndObj.elementExists("ctlg_prev_button")>
  [537] jmpifz [556] ............................ if tWndObj.elementExists("ctlg_prev_button") then
  [540] getlocal 0 .............................. <tWndObj>
  [542] pushcons 117 ............................ <"ctlg_prev_button">
  [544] pusharglist 2 ........................... <tWndObj, "ctlg_prev_button">
  [546] objcall 97 .............................. <tWndObj.getElement("ctlg_prev_button")>
  [548] pushsymb 153 ............................ <#visible>
  [550] pushint8 1 .............................. <1>
  [552] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_prev_button"), #visible, 1>
  [554] objcall 103 ............................. tWndObj.getElement("ctlg_prev_button").setProperty(#visible, 1)
  [556] getlocal 0 .............................. <tWndObj>
  [558] pushcons 118 ............................ <"ctlg_page_counter">
  [560] pusharglist 2 ........................... <tWndObj, "ctlg_page_counter">
  [562] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_counter")>
  [564] jmpifz [583] ............................ if tWndObj.elementExists("ctlg_page_counter") then
  [567] getlocal 0 .............................. <tWndObj>
  [569] pushcons 118 ............................ <"ctlg_page_counter">
  [571] pusharglist 2 ........................... <tWndObj, "ctlg_page_counter">
  [573] objcall 97 .............................. <tWndObj.getElement("ctlg_page_counter")>
  [575] pushsymb 153 ............................ <#visible>
  [577] pushint8 1 .............................. <1>
  [579] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_page_counter"), #visible, 1>
  [581] objcall 103 ............................. tWndObj.getElement("ctlg_page_counter").setProperty(#visible, 1)
  [583] getlocal 0 .............................. <tWndObj>
  [585] pushcons 75 ............................. <"ctlg_page_text">
  [587] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [589] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_text")>
  [591] jmpifz [610] ............................ if tWndObj.elementExists("ctlg_page_text") then
  [594] getlocal 0 .............................. <tWndObj>
  [596] pushcons 75 ............................. <"ctlg_page_text">
  [598] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [600] objcall 97 .............................. <tWndObj.getElement("ctlg_page_text")>
  [602] pushsymb 153 ............................ <#visible>
  [604] pushint8 1 .............................. <1>
  [606] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_page_text"), #visible, 1>
  [608] objcall 103 ............................. tWndObj.getElement("ctlg_page_text").setProperty(#visible, 1)
  [610] jmp [717]
  [613] getlocal 0 .............................. <tWndObj>
  [615] pushcons 116 ............................ <"ctlg_next_button">
  [617] pusharglist 2 ........................... <tWndObj, "ctlg_next_button">
  [619] objcall 106 ............................. <tWndObj.elementExists("ctlg_next_button")>
  [621] jmpifz [639] ............................ if tWndObj.elementExists("ctlg_next_button") then
  [624] getlocal 0 .............................. <tWndObj>
  [626] pushcons 116 ............................ <"ctlg_next_button">
  [628] pusharglist 2 ........................... <tWndObj, "ctlg_next_button">
  [630] objcall 97 .............................. <tWndObj.getElement("ctlg_next_button")>
  [632] pushsymb 153 ............................ <#visible>
  [634] pushzero ................................ <0>
  [635] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_next_button"), #visible, 0>
  [637] objcall 103 ............................. tWndObj.getElement("ctlg_next_button").setProperty(#visible, 0)
  [639] getlocal 0 .............................. <tWndObj>
  [641] pushcons 117 ............................ <"ctlg_prev_button">
  [643] pusharglist 2 ........................... <tWndObj, "ctlg_prev_button">
  [645] objcall 106 ............................. <tWndObj.elementExists("ctlg_prev_button")>
  [647] jmpifz [665] ............................ if tWndObj.elementExists("ctlg_prev_button") then
  [650] getlocal 0 .............................. <tWndObj>
  [652] pushcons 117 ............................ <"ctlg_prev_button">
  [654] pusharglist 2 ........................... <tWndObj, "ctlg_prev_button">
  [656] objcall 97 .............................. <tWndObj.getElement("ctlg_prev_button")>
  [658] pushsymb 153 ............................ <#visible>
  [660] pushzero ................................ <0>
  [661] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_prev_button"), #visible, 0>
  [663] objcall 103 ............................. tWndObj.getElement("ctlg_prev_button").setProperty(#visible, 0)
  [665] getlocal 0 .............................. <tWndObj>
  [667] pushcons 118 ............................ <"ctlg_page_counter">
  [669] pusharglist 2 ........................... <tWndObj, "ctlg_page_counter">
  [671] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_counter")>
  [673] jmpifz [691] ............................ if tWndObj.elementExists("ctlg_page_counter") then
  [676] getlocal 0 .............................. <tWndObj>
  [678] pushcons 118 ............................ <"ctlg_page_counter">
  [680] pusharglist 2 ........................... <tWndObj, "ctlg_page_counter">
  [682] objcall 97 .............................. <tWndObj.getElement("ctlg_page_counter")>
  [684] pushsymb 153 ............................ <#visible>
  [686] pushzero ................................ <0>
  [687] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_page_counter"), #visible, 0>
  [689] objcall 103 ............................. tWndObj.getElement("ctlg_page_counter").setProperty(#visible, 0)
  [691] getlocal 0 .............................. <tWndObj>
  [693] pushcons 75 ............................. <"ctlg_page_text">
  [695] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [697] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_text")>
  [699] jmpifz [717] ............................ if tWndObj.elementExists("ctlg_page_text") then
  [702] getlocal 0 .............................. <tWndObj>
  [704] pushcons 75 ............................. <"ctlg_page_text">
  [706] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [708] objcall 97 .............................. <tWndObj.getElement("ctlg_page_text")>
  [710] pushsymb 153 ............................ <#visible>
  [712] pushzero ................................ <0>
  [713] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_page_text"), #visible, 0>
  [715] objcall 103 ............................. tWndObj.getElement("ctlg_page_text").setProperty(#visible, 0)
  [717] ret
end

on showSubPageCounter me
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 24] ............................ if not windowExists(pCatalogID) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 122 ............................ <"Catalogue window not exists">
  [ 14] pushsymb 19 ............................. <#showSubPageCounter>
  [ 16] pusharglist 3 ........................... <me, "Catalogue window not exists", #showSubPageCounter>
  [ 18] extcall 44 .............................. <error(me, "Catalogue window not exists", #showSubPageCounter)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Catalogue window not exists", #showSubPageCounter)>
  [ 22] extcall 43 .............................. return error(me, "Catalogue window not exists", #showSubPageCounter)
  [ 24] getprop 31 .............................. <pCatalogID>
  [ 26] pusharglist 1 ........................... <pCatalogID>
  [ 28] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 30] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 32] getprop 140 ............................. <pPageLinkList>
  [ 34] pusharglist 1 ........................... <pPageLinkList>
  [ 36] extcall 139 ............................. <voidp(pPageLinkList)>
  [ 38] not ..................................... <not voidp(pPageLinkList)>
  [ 39] jmpifz [152] ............................ if not voidp(pPageLinkList) then / else
  [ 42] getprop 137 ............................. <pCurrentPageData>
  [ 44] pushcons 62 ............................. <"id">
  [ 46] pusharglist 2 ........................... <pCurrentPageData, "id">
  [ 48] objcall 82 .............................. <pCurrentPageData["id"]>
  [ 50] setlocal 1 .............................. tid = pCurrentPageData["id"]
  [ 52] getprop 140 ............................. <pPageLinkList>
  [ 54] getlocal 1 .............................. <tid>
  [ 56] pusharglist 2 ........................... <pPageLinkList, tid>
  [ 58] objcall 142 ............................. <pPageLinkList.findPos(tid)>
  [ 60] setlocal 2 .............................. tPageNum = pPageLinkList.findPos(tid)
  [ 62] getlocal 2 .............................. <tPageNum>
  [ 64] pushint8 1 .............................. <1>
  [ 66] lt ...................................... <tPageNum < 1>
  [ 67] jmpifz [ 74] ............................ if tPageNum < 1 then
  [ 70] pushint8 1 .............................. <1>
  [ 72] setlocal 2 .............................. tPageNum = 1
  [ 74] getlocal 0 .............................. <tWndObj>
  [ 76] pushcons 123 ............................ <"ctlg_subpage_counter">
  [ 78] pusharglist 2 ........................... <tWndObj, "ctlg_subpage_counter">
  [ 80] objcall 106 ............................. <tWndObj.elementExists("ctlg_subpage_counter")>
  [ 82] jmpifz [111] ............................ if tWndObj.elementExists("ctlg_subpage_counter") then
  [ 85] getlocal 2 .............................. <tPageNum>
  [ 87] pushcons 120 ............................ <"/">
  [ 89] joinstr ................................. <tPageNum & "/">
  [ 90] getprop 140 ............................. <pPageLinkList>
  [ 92] getobjprop 156 .......................... <pPageLinkList.count>
  [ 94] joinstr ................................. <tPageNum & "/" & pPageLinkList.count>
  [ 95] setlocal 3 .............................. tCounterText = tPageNum & "/" & pPageLinkList.count
  [ 97] getlocal 0 .............................. <tWndObj>
  [ 99] pushcons 123 ............................ <"ctlg_subpage_counter">
  [101] pusharglist 2 ........................... <tWndObj, "ctlg_subpage_counter">
  [103] objcall 97 .............................. <tWndObj.getElement("ctlg_subpage_counter")>
  [105] getlocal 3 .............................. <tCounterText>
  [107] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_subpage_counter"), tCounterText>
  [109] objcall 98 .............................. tWndObj.getElement("ctlg_subpage_counter").setText(tCounterText)
  [111] getlocal 2 .............................. <tPageNum>
  [113] pushint8 1 .............................. <1>
  [115] eq ...................................... <tPageNum = 1>
  [116] jmpifz [125] ............................ if tPageNum = 1 then / else
  [119] pushzero ................................ <0>
  [120] setlocal 4 .............................. tPrevButton = 0
  [122] jmp [129]
  [125] pushint8 1 .............................. <1>
  [127] setlocal 4 .............................. tPrevButton = 1
  [129] getlocal 2 .............................. <tPageNum>
  [131] getprop 140 ............................. <pPageLinkList>
  [133] getobjprop 156 .......................... <pPageLinkList.count>
  [135] eq ...................................... <tPageNum = pPageLinkList.count>
  [136] jmpifz [145] ............................ if tPageNum = pPageLinkList.count then / else
  [139] pushzero ................................ <0>
  [140] setlocal 5 .............................. tNextButton = 0
  [142] jmp [149]
  [145] pushint8 1 .............................. <1>
  [147] setlocal 5 .............................. tNextButton = 1
  [149] jmp [160]
  [152] pushint8 40 ............................. <40>
  [154] setlocal 6 .............................. tNextBlend = 40
  [156] pushint8 40 ............................. <40>
  [158] setlocal 7 .............................. tPrevBlend = 40
  [160] getlocal 0 .............................. <tWndObj>
  [162] pushcons 75 ............................. <"ctlg_page_text">
  [164] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [166] objcall 106 ............................. <tWndObj.elementExists("ctlg_page_text")>
  [168] jmpifz [195] ............................ if tWndObj.elementExists("ctlg_page_text") then
  [171] pushcons 76 ............................. <"catalog_page">
  [173] pushcons 119 ............................ <"page">
  [175] pusharglist 2 ........................... <"catalog_page", "page">
  [177] extcall 39 .............................. <getText("catalog_page", "page")>
  [179] setlocal 8 .............................. tPage = getText("catalog_page", "page")
  [181] getlocal 0 .............................. <tWndObj>
  [183] pushcons 75 ............................. <"ctlg_page_text">
  [185] pusharglist 2 ........................... <tWndObj, "ctlg_page_text">
  [187] objcall 97 .............................. <tWndObj.getElement("ctlg_page_text")>
  [189] getlocal 8 .............................. <tPage>
  [191] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_page_text"), tPage>
  [193] objcall 98 .............................. tWndObj.getElement("ctlg_page_text").setText(tPage)
  [195] pushcons 106 ............................ <"ctlg_nextpage_button">
  [197] setlocal 1 .............................. tid = "ctlg_nextpage_button"
  [199] getlocal 0 .............................. <tWndObj>
  [201] getlocal 1 .............................. <tid>
  [203] pusharglist 2 ........................... <tWndObj, tid>
  [205] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [207] jmpifz [263] ............................ if tWndObj.elementExists(tid) then
  [210] getlocal 0 .............................. <tWndObj>
  [212] getlocal 1 .............................. <tid>
  [214] pusharglist 2 ........................... <tWndObj, tid>
  [216] objcall 97 .............................. <tWndObj.getElement(tid)>
  [218] setlocal 9 .............................. tElem = tWndObj.getElement(tid)
  [220] getlocal 5 .............................. <tNextButton>
  [222] jmpifz [246] ............................ if tNextButton then / else
  [225] getlocal 9 .............................. <tElem>
  [227] getparam 0 .............................. <me>
  [229] pusharglistnoret 2 ...................... <tElem, me>
  [231] objcall 201 ............................. tElem.Activate(me)
  [233] getlocal 9 .............................. <tElem>
  [235] pushsymb 202 ............................ <#cursor>
  [237] pushcons 121 ............................ <"cursor.finger">
  [239] pusharglistnoret 3 ...................... <tElem, #cursor, "cursor.finger">
  [241] objcall 103 ............................. tElem.setProperty(#cursor, "cursor.finger")
  [243] jmp [263]
  [246] getlocal 9 .............................. <tElem>
  [248] getparam 0 .............................. <me>
  [250] pusharglistnoret 2 ...................... <tElem, me>
  [252] objcall 203 ............................. tElem.deactivate(me)
  [254] getlocal 9 .............................. <tElem>
  [256] pushsymb 202 ............................ <#cursor>
  [258] pushzero ................................ <0>
  [259] pusharglistnoret 3 ...................... <tElem, #cursor, 0>
  [261] objcall 103 ............................. tElem.setProperty(#cursor, 0)
  [263] pushcons 107 ............................ <"ctlg_prevpage_button">
  [265] setlocal 1 .............................. tid = "ctlg_prevpage_button"
  [267] getlocal 0 .............................. <tWndObj>
  [269] getlocal 1 .............................. <tid>
  [271] pusharglist 2 ........................... <tWndObj, tid>
  [273] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [275] jmpifz [331] ............................ if tWndObj.elementExists(tid) then
  [278] getlocal 0 .............................. <tWndObj>
  [280] getlocal 1 .............................. <tid>
  [282] pusharglist 2 ........................... <tWndObj, tid>
  [284] objcall 97 .............................. <tWndObj.getElement(tid)>
  [286] setlocal 9 .............................. tElem = tWndObj.getElement(tid)
  [288] getlocal 4 .............................. <tPrevButton>
  [290] jmpifz [314] ............................ if tPrevButton then / else
  [293] getlocal 9 .............................. <tElem>
  [295] getparam 0 .............................. <me>
  [297] pusharglistnoret 2 ...................... <tElem, me>
  [299] objcall 201 ............................. tElem.Activate(me)
  [301] getlocal 9 .............................. <tElem>
  [303] pushsymb 202 ............................ <#cursor>
  [305] pushcons 121 ............................ <"cursor.finger">
  [307] pusharglistnoret 3 ...................... <tElem, #cursor, "cursor.finger">
  [309] objcall 103 ............................. tElem.setProperty(#cursor, "cursor.finger")
  [311] jmp [331]
  [314] getlocal 9 .............................. <tElem>
  [316] getparam 0 .............................. <me>
  [318] pusharglistnoret 2 ...................... <tElem, me>
  [320] objcall 203 ............................. tElem.deactivate(me)
  [322] getlocal 9 .............................. <tElem>
  [324] pushsymb 202 ............................ <#cursor>
  [326] pushzero ................................ <0>
  [327] pusharglistnoret 3 ...................... <tElem, #cursor, 0>
  [329] objcall 103 ............................. tElem.setProperty(#cursor, 0)
  [331] ret
end

on ShowSmallIcons me, tstate, tPram
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 14] ............................ if not windowExists(pCatalogID) then
  [ 10] pusharglistnoret 0 ...................... <>
  [ 12] extcall 43 .............................. return 
  [ 14] getprop 31 .............................. <pCatalogID>
  [ 16] pusharglist 1 ........................... <pCatalogID>
  [ 18] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 20] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 22] getparam 1 .............................. <tstate>
  [ 24] peek 0 .................................. case tstate of
  [ 26] pusharglist 0 ........................... <>
  [ 28] extcall 92 .............................. <VOID>
  [ 30] eq
  [ 31] jmpifz [143] ............................ (case) VOID:
  [ 34] getprop 34 .............................. <pProductOffset>
  [ 36] pushint8 1 .............................. <1>
  [ 38] add ..................................... <pProductOffset + 1>
  [ 39] setlocal 1 .............................. tFirst = pProductOffset + 1
  [ 41] getlocal 1 .............................. <tFirst>
  [ 43] getprop 33 .............................. <pProductPerPage>
  [ 45] add ..................................... <tFirst + pProductPerPage>
  [ 46] setlocal 2 .............................. tLast = tFirst + pProductPerPage
  [ 48] getlocal 2 .............................. <tLast>
  [ 50] getprop 137 ............................. <pCurrentPageData>
  [ 52] pushcons 82 ............................. <"productList">
  [ 54] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [ 56] objcall 82 .............................. <pCurrentPageData["productList"]>
  [ 58] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [ 60] gt ...................................... <tLast > pCurrentPageData["productList"].count>
  [ 61] jmpifz [ 76] ............................ if tLast > pCurrentPageData["productList"].count then
  [ 64] getprop 137 ............................. <pCurrentPageData>
  [ 66] pushcons 82 ............................. <"productList">
  [ 68] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [ 70] objcall 82 .............................. <pCurrentPageData["productList"]>
  [ 72] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [ 74] setlocal 2 .............................. tLast = pCurrentPageData["productList"].count
  [ 76] pushint8 1 .............................. <1>
  [ 78] setlocal 3
  [ 80] getlocal 3
  [ 82] getprop 33 .............................. <pProductPerPage>
  [ 84] lteq
  [ 85] jmpifz [140] ............................ repeat with f = 1 to pProductPerPage
  [ 88] pushcons 67 ............................. <"ctlg_small_img_">
  [ 90] getlocal 3 .............................. <f>
  [ 92] joinstr ................................. <"ctlg_small_img_" & f>
  [ 93] setlocal 4 .............................. tid = "ctlg_small_img_" & f
  [ 95] getlocal 0 .............................. <tWndObj>
  [ 97] getlocal 4 .............................. <tid>
  [ 99] pusharglist 2 ........................... <tWndObj, tid>
  [101] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [103] jmpifz [131] ............................ if tWndObj.elementExists(tid) then
  [106] getlocal 0 .............................. <tWndObj>
  [108] getlocal 4 .............................. <tid>
  [110] pusharglist 2 ........................... <tWndObj, tid>
  [112] objcall 97 .............................. <tWndObj.getElement(tid)>
  [114] setlocal 5 .............................. tElem = tWndObj.getElement(tid)
  [116] getlocal 5 .............................. <tElem>
  [118] pusharglistnoret 1 ...................... <tElem>
  [120] objcall 199 ............................. tElem.clearImage()
  [122] getlocal 5 .............................. <tElem>
  [124] pushsymb 202 ............................ <#cursor>
  [126] pushzero ................................ <0>
  [127] pusharglistnoret 3 ...................... <tElem, #cursor, 0>
  [129] objcall 103 ............................. tElem.setProperty(#cursor, 0)
  [131] pushint8 1
  [133] getlocal 3
  [135] add
  [136] setlocal 3
  [138] endrepeat [ 80]
  [140] jmp [186]
  [143] peek 0
  [145] pushsymb 214 ............................ <#hilite>
  [147] nteq
  [148] jmpifz [159] ............................ (case) #hilite, ...
  [151] peek 0
  [153] pushsymb 215 ............................ <#unhilite>
  [155] eq
  [156] jmpifz [170] ............................ (case) ..., #unhilite:
  [159] getparam 2 .............................. <tPram>
  [161] setlocal 1 .............................. tFirst = tPram
  [163] getparam 2 .............................. <tPram>
  [165] setlocal 2 .............................. tLast = tPram
  [167] jmp [186] ............................... (case) otherwise:
  [170] pop 1
  [172] getparam 0 .............................. <me>
  [174] pushcons 124 ............................ <"unsupported mode">
  [176] pushsymb 20 ............................. <#ShowSmallIcons>
  [178] pusharglist 3 ........................... <me, "unsupported mode", #ShowSmallIcons>
  [180] extcall 44 .............................. <error(me, "unsupported mode", #ShowSmallIcons)>
  [182] pusharglistnoret 1 ...................... <error(me, "unsupported mode", #ShowSmallIcons)>
  [184] extcall 43 .............................. return error(me, "unsupported mode", #ShowSmallIcons)
  [186] pop 1 ................................... end case
  [188] getlocal 1 .............................. <tFirst>
  [190] pusharglist 1 ........................... <tFirst>
  [192] extcall 139 ............................. <voidp(tFirst)>
  [194] getlocal 2 .............................. <tLast>
  [196] pusharglist 1 ........................... <tLast>
  [198] extcall 139 ............................. <voidp(tLast)>
  [200] or ...................................... <voidp(tFirst) or voidp(tLast)>
  [201] jmpifz [208] ............................ if voidp(tFirst) or voidp(tLast) then
  [204] pusharglistnoret 0 ...................... <>
  [206] extcall 43 .............................. return 
  [208] getlocal 1 .............................. <tFirst>
  [210] pushint8 1 .............................. <1>
  [212] lt ...................................... <tFirst < 1>
  [213] getlocal 2 .............................. <tLast>
  [215] pushint8 1 .............................. <1>
  [217] lt ...................................... <tLast < 1>
  [218] or ...................................... <(tFirst < 1) or (tLast < 1)>
  [219] jmpifz [226] ............................ if (tFirst < 1) or (tLast < 1) then
  [222] pusharglistnoret 0 ...................... <>
  [224] extcall 43 .............................. return 
  [226] pushint8 1 .............................. <1>
  [228] setlocal 6 .............................. tCount = 1
  [230] getlocal 1 .............................. <tFirst>
  [232] setlocal 3
  [234] getlocal 3
  [236] getlocal 2 .............................. <tLast>
  [238] lteq
  [239] jmpifz [627] ............................ repeat with f = tFirst to tLast
  [242] getprop 137 ............................. <pCurrentPageData>
  [244] pushcons 82 ............................. <"productList">
  [246] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [248] objcall 82 .............................. <pCurrentPageData["productList"]>
  [250] getlocal 3 .............................. <f>
  [252] pusharglist 2 ........................... <pCurrentPageData["productList"], f>
  [254] objcall 82 .............................. <pCurrentPageData["productList"][f]>
  [256] pushcons 125 ............................ <"smallPrewImg">
  [258] pusharglist 2 ........................... <pCurrentPageData["productList"][f], "smallPrewImg">
  [260] objcall 82 .............................. <pCurrentPageData["productList"][f]["smallPrewImg"]>
  [262] pusharglist 1 ........................... <pCurrentPageData["productList"][f]["smallPrewImg"]>
  [264] extcall 139 ............................. <voidp(pCurrentPageData["productList"][f]["smallPrewImg"])>
  [266] not ..................................... <not voidp(pCurrentPageData["productList"][f]["smallPrewImg"])>
  [267] jmpifz [617] ............................ if not voidp(pCurrentPageData["productList"][f]["smallPrewImg"]) then
  [270] getprop 137 ............................. <pCurrentPageData>
  [272] pushcons 82 ............................. <"productList">
  [274] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [276] objcall 82 .............................. <pCurrentPageData["productList"]>
  [278] getlocal 3 .............................. <f>
  [280] pusharglist 2 ........................... <pCurrentPageData["productList"], f>
  [282] objcall 82 .............................. <pCurrentPageData["productList"][f]>
  [284] pushcons 125 ............................ <"smallPrewImg">
  [286] pusharglist 2 ........................... <pCurrentPageData["productList"][f], "smallPrewImg">
  [288] objcall 82 .............................. <pCurrentPageData["productList"][f]["smallPrewImg"]>
  [290] setlocal 7 .............................. tmember = pCurrentPageData["productList"][f]["smallPrewImg"]
  [292] getprop 137 ............................. <pCurrentPageData>
  [294] pushcons 82 ............................. <"productList">
  [296] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [298] objcall 82 .............................. <pCurrentPageData["productList"]>
  [300] getlocal 3 .............................. <f>
  [302] pusharglist 2 ........................... <pCurrentPageData["productList"], f>
  [304] objcall 82 .............................. <pCurrentPageData["productList"][f]>
  [306] pushcons 126 ............................ <"class">
  [308] pusharglist 2 ........................... <pCurrentPageData["productList"][f], "class">
  [310] objcall 82 .............................. <pCurrentPageData["productList"][f]["class"]>
  [312] setlocal 8 .............................. tClass = pCurrentPageData["productList"][f]["class"]
  [314] getprop 137 ............................. <pCurrentPageData>
  [316] pushcons 82 ............................. <"productList">
  [318] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [320] objcall 82 .............................. <pCurrentPageData["productList"]>
  [322] getlocal 3 .............................. <f>
  [324] pusharglist 2 ........................... <pCurrentPageData["productList"], f>
  [326] objcall 82 .............................. <pCurrentPageData["productList"][f]>
  [328] pushcons 127 ............................ <"partColors">
  [330] pusharglist 2 ........................... <pCurrentPageData["productList"][f], "partColors">
  [332] objcall 82 .............................. <pCurrentPageData["productList"][f]["partColors"]>
  [334] setlocal 9 .............................. tpartColors = pCurrentPageData["productList"][f]["partColors"]
  [336] pushcons 67 ............................. <"ctlg_small_img_">
  [338] getlocal 3 .............................. <f>
  [340] getprop 34 .............................. <pProductOffset>
  [342] sub ..................................... <f - pProductOffset>
  [343] joinstr ................................. <"ctlg_small_img_" & f - pProductOffset>
  [344] setlocal 4 .............................. tid = "ctlg_small_img_" & f - pProductOffset
  [346] getlocal 7 .............................. <tmember>
  [348] pushzero ................................ <0>
  [349] nteq .................................... <tmember <> 0>
  [350] jmpifz [617] ............................ if tmember <> 0 then
  [353] getlocal 0 .............................. <tWndObj>
  [355] getlocal 4 .............................. <tid>
  [357] pusharglist 2 ........................... <tWndObj, tid>
  [359] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [361] jmpifz [617] ............................ if tWndObj.elementExists(tid) then
  [364] getlocal 0 .............................. <tWndObj>
  [366] getlocal 4 .............................. <tid>
  [368] pusharglist 2 ........................... <tWndObj, tid>
  [370] objcall 97 .............................. <tWndObj.getElement(tid)>
  [372] setlocal 5 .............................. tElem = tWndObj.getElement(tid)
  [374] getparam 1 .............................. <tstate>
  [376] pusharglist 1 ........................... <tstate>
  [378] extcall 139 ............................. <voidp(tstate)>
  [380] not ..................................... <not voidp(tstate)>
  [381] jmpifz [409] ............................ if not voidp(tstate) then
  [384] getparam 1 .............................. <tstate>
  [386] pushsymb 214 ............................ <#hilite>
  [388] eq ...................................... <tstate = #hilite>
  [389] pushcons 128 ............................ <"ctlg_small_active_bg">
  [391] pusharglist 1 ........................... <"ctlg_small_active_bg">
  [393] extcall 90 .............................. <memberExists("ctlg_small_active_bg")>
  [395] and ..................................... <(tstate = #hilite) and memberExists("ctlg_small_active_bg")>
  [396] jmpifz [409] ............................ if (tstate = #hilite) and memberExists("ctlg_small_active_bg") then
  [399] pushcons 128 ............................ <"ctlg_small_active_bg">
  [401] pusharglist 1 ........................... <"ctlg_small_active_bg">
  [403] extcall 216 ............................. <getMember("ctlg_small_active_bg")>
  [405] getobjprop 36 ........................... <getMember("ctlg_small_active_bg").image>
  [407] setlocal 10 ............................. tBgImage = getMember("ctlg_small_active_bg").image
  [409] getlocal 8 .............................. <tClass>
  [411] pushcons 28 ............................. <EMPTY>
  [413] nteq .................................... <tClass <> EMPTY>
  [414] jmpifz [444] ............................ if tClass <> EMPTY then / else
  [417] pushcons 129 ............................ <"Preview_renderer">
  [419] pusharglist 1 ........................... <"Preview_renderer">
  [421] extcall 75 .............................. <getObject("Preview_renderer")>
  [423] pusharglist 0 ........................... <>
  [425] extcall 92 .............................. <VOID>
  [427] pusharglist 0 ........................... <>
  [429] extcall 92 .............................. <VOID>
  [431] getlocal 9 .............................. <tpartColors>
  [433] getlocal 8 .............................. <tClass>
  [435] pusharglist 5 ........................... <getObject("Preview_renderer"), VOID, VOID, tpartColors, tClass>
  [437] objcall 217 ............................. <getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tpartColors, tClass)>
  [439] setlocal 11 ............................. tRenderedImage = getObject("Preview_renderer").renderPreviewImage(VOID, VOID, tpartColors, tClass)
  [441] jmp [454]
  [444] getlocal 7 .............................. <tmember>
  [446] pusharglist 1 ........................... <tmember>
  [448] extcall 175 ............................. <member(tmember)>
  [450] getobjprop 36 ........................... <member(tmember).image>
  [452] setlocal 11 ............................. tRenderedImage = member(tmember).image
  [454] getlocal 5 .............................. <tElem>
  [456] pushsymb 177 ............................ <#width>
  [458] pusharglist 2 ........................... <tElem, #width>
  [460] objcall 174 ............................. <tElem.getProperty(#width)>
  [462] setlocal 12 ............................. tWid = tElem.getProperty(#width)
  [464] getlocal 5 .............................. <tElem>
  [466] pushsymb 178 ............................ <#height>
  [468] pusharglist 2 ........................... <tElem, #height>
  [470] objcall 174 ............................. <tElem.getProperty(#height)>
  [472] setlocal 13 ............................. tHei = tElem.getProperty(#height)
  [474] getlocal 12 ............................. <tWid>
  [476] getlocal 13 ............................. <tHei>
  [478] pushint8 32 ............................. <32>
  [480] pusharglist 3 ........................... <tWid, tHei, 32>
  [482] extcall 36 .............................. <image(tWid, tHei, 32)>
  [484] setlocal 14 ............................. tCenteredImage = image(tWid, tHei, 32)
  [486] getlocal 10 ............................. <tBgImage>
  [488] pusharglist 0 ........................... <>
  [490] extcall 92 .............................. <VOID>
  [492] nteq .................................... <tBgImage <> VOID>
  [493] jmpifz [512] ............................ if tBgImage <> VOID then
  [496] getlocal 14 ............................. <tCenteredImage>
  [498] getlocal 10 ............................. <tBgImage>
  [500] getlocal 10 ............................. <tBgImage>
  [502] getobjprop 176 .......................... <tBgImage.rect>
  [504] getlocal 10 ............................. <tBgImage>
  [506] getobjprop 176 .......................... <tBgImage.rect>
  [508] pusharglistnoret 4 ...................... <tCenteredImage, tBgImage, tBgImage.rect, tBgImage.rect>
  [510] objcall 180 ............................. tCenteredImage.copyPixels(tBgImage, tBgImage.rect, tBgImage.rect)
  [512] getlocal 11 ............................. <tRenderedImage>
  [514] pusharglist 1 ........................... <tRenderedImage>
  [516] objcall 218 ............................. <tRenderedImage.createMatte()>
  [518] setlocal 15 ............................. tMatte = tRenderedImage.createMatte()
  [520] getlocal 14 ............................. <tCenteredImage>
  [522] getobjprop 177 .......................... <tCenteredImage.width>
  [524] getlocal 11 ............................. <tRenderedImage>
  [526] getobjprop 177 .......................... <tRenderedImage.width>
  [528] sub ..................................... <tCenteredImage.width - tRenderedImage.width>
  [529] pushint8 2 .............................. <2>
  [531] div ..................................... <(tCenteredImage.width - tRenderedImage.width) / 2>
  [532] setlocal 16 ............................. tXchange = (tCenteredImage.width - tRenderedImage.width) / 2
  [534] getlocal 14 ............................. <tCenteredImage>
  [536] getobjprop 178 .......................... <tCenteredImage.height>
  [538] getlocal 11 ............................. <tRenderedImage>
  [540] getobjprop 178 .......................... <tRenderedImage.height>
  [542] sub ..................................... <tCenteredImage.height - tRenderedImage.height>
  [543] pushint8 2 .............................. <2>
  [545] div ..................................... <(tCenteredImage.height - tRenderedImage.height) / 2>
  [546] setlocal 17 ............................. tYchange = (tCenteredImage.height - tRenderedImage.height) / 2
  [548] getlocal 11 ............................. <tRenderedImage>
  [550] getobjprop 176 .......................... <tRenderedImage.rect>
  [552] getlocal 16 ............................. <tXchange>
  [554] getlocal 17 ............................. <tYchange>
  [556] getlocal 16 ............................. <tXchange>
  [558] getlocal 17 ............................. <tYchange>
  [560] pusharglist 4 ........................... <tXchange, tYchange, tXchange, tYchange>
  [562] extcall 176 ............................. <rect(tXchange, tYchange, tXchange, tYchange)>
  [564] add ..................................... <tRenderedImage.rect + rect(tXchange, tYchange, tXchange, tYchange)>
  [565] setlocal 18 ............................. tRect1 = tRenderedImage.rect + rect(tXchange, tYchange, tXchange, tYchange)
  [567] getlocal 14 ............................. <tCenteredImage>
  [569] getlocal 11 ............................. <tRenderedImage>
  [571] getlocal 18 ............................. <tRect1>
  [573] getlocal 11 ............................. <tRenderedImage>
  [575] getobjprop 176 .......................... <tRenderedImage.rect>
  [577] pushsymb 219 ............................ <#maskImage>
  [579] getlocal 15 ............................. <tMatte>
  [581] pushsymb 179 ............................ <#ink>
  [583] pushint8 41 ............................. <41>
  [585] pusharglist 4 ........................... <[#maskImage: tMatte, #ink: 41]>
  [587] pushproplist ............................ <[#maskImage: tMatte, #ink: 41]>
  [588] pusharglistnoret 5 ...................... <tCenteredImage, tRenderedImage, tRect1, tRenderedImage.rect, [#maskImage: tMatte, #ink: 41]>
  [590] objcall 180 ............................. tCenteredImage.copyPixels(tRenderedImage, tRect1, tRenderedImage.rect, [#maskImage: tMatte, #ink: 41])
  [592] getlocal 5 .............................. <tElem>
  [594] getlocal 14 ............................. <tCenteredImage>
  [596] pusharglistnoret 2 ...................... <tElem, tCenteredImage>
  [598] objcall 181 ............................. tElem.feedImage(tCenteredImage)
  [600] getlocal 5 .............................. <tElem>
  [602] pushsymb 202 ............................ <#cursor>
  [604] pushcons 121 ............................ <"cursor.finger">
  [606] pusharglistnoret 3 ...................... <tElem, #cursor, "cursor.finger">
  [608] objcall 103 ............................. tElem.setProperty(#cursor, "cursor.finger")
  [610] getlocal 6 .............................. <tCount>
  [612] pushint8 1 .............................. <1>
  [614] add ..................................... <tCount + 1>
  [615] setlocal 6 .............................. tCount = tCount + 1
  [617] pushint8 1
  [619] getlocal 3
  [621] add
  [622] setlocal 3
  [624] endrepeat [234]
  [627] ret
end

on showPreviewImage me, tProps, tElemID
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pCatalogID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 43 .............................. return 0
  [ 15] getprop 31 .............................. <pCatalogID>
  [ 17] pusharglist 1 ........................... <pCatalogID>
  [ 19] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 21] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 23] getparam 2 .............................. <tElemID>
  [ 25] pusharglist 1 ........................... <tElemID>
  [ 27] extcall 139 ............................. <voidp(tElemID)>
  [ 29] jmpifz [ 36] ............................ if voidp(tElemID) then
  [ 32] pushcons 130 ............................ <"ctlg_teaserimg_1">
  [ 34] setparam 2 .............................. tElemID = "ctlg_teaserimg_1"
  [ 36] getlocal 0 .............................. <tWndObj>
  [ 38] getparam 2 .............................. <tElemID>
  [ 40] pusharglist 2 ........................... <tWndObj, tElemID>
  [ 42] objcall 106 ............................. <tWndObj.elementExists(tElemID)>
  [ 44] not ..................................... <not tWndObj.elementExists(tElemID)>
  [ 45] jmpifz [ 52] ............................ if not tWndObj.elementExists(tElemID) then
  [ 48] pusharglistnoret 0 ...................... <>
  [ 50] extcall 43 .............................. return 
  [ 52] getparam 1 .............................. <tProps>
  [ 54] getobjprop 135 .......................... <tProps.ilk>
  [ 56] pushsymb 136 ............................ <#propList>
  [ 58] nteq .................................... <tProps.ilk <> #propList>
  [ 59] jmpifz [ 66] ............................ if tProps.ilk <> #propList then
  [ 62] pusharglistnoret 0 ...................... <>
  [ 64] extcall 43 .............................. return 
  [ 66] getlocal 0 .............................. <tWndObj>
  [ 68] getparam 2 .............................. <tElemID>
  [ 70] pusharglist 2 ........................... <tWndObj, tElemID>
  [ 72] objcall 97 .............................. <tWndObj.getElement(tElemID)>
  [ 74] setlocal 1 .............................. tElem = tWndObj.getElement(tElemID)
  [ 76] getparam 1 .............................. <tProps>
  [ 78] pushcons 131 ............................ <"prewImage">
  [ 80] pusharglist 2 ........................... <tProps, "prewImage">
  [ 82] objcall 82 .............................. <tProps["prewImage"]>
  [ 84] pusharglist 1 ........................... <tProps["prewImage"]>
  [ 86] extcall 139 ............................. <voidp(tProps["prewImage"])>
  [ 88] jmpifz [100] ............................ if voidp(tProps["prewImage"]) then
  [ 91] getparam 1 .............................. <tProps>
  [ 93] pushcons 131 ............................ <"prewImage">
  [ 95] pushzero ................................ <0>
  [ 96] pusharglistnoret 3 ...................... <tProps, "prewImage", 0>
  [ 98] objcall 236 ............................. tProps["prewImage"] = 0
  [100] getparam 1 .............................. <tProps>
  [102] pushcons 131 ............................ <"prewImage">
  [104] pusharglist 2 ........................... <tProps, "prewImage">
  [106] objcall 82 .............................. <tProps["prewImage"]>
  [108] pushzero ................................ <0>
  [109] gt ...................................... <tProps["prewImage"] > 0>
  [110] jmpifz [132] ............................ if tProps["prewImage"] > 0 then / else
  [113] getparam 1 .............................. <tProps>
  [115] pushcons 131 ............................ <"prewImage">
  [117] pusharglist 2 ........................... <tProps, "prewImage">
  [119] objcall 82 .............................. <tProps["prewImage"]>
  [121] pusharglist 1 ........................... <tProps["prewImage"]>
  [123] extcall 175 ............................. <member(tProps["prewImage"])>
  [125] getobjprop 36 ........................... <member(tProps["prewImage"]).image>
  [127] setlocal 2 .............................. tImage = member(tProps["prewImage"]).image
  [129] jmp [587]
  [132] getparam 1 .............................. <tProps>
  [134] pushcons 126 ............................ <"class">
  [136] pusharglist 2 ........................... <tProps, "class">
  [138] objcall 82 .............................. <tProps["class"]>
  [140] pusharglist 1 ........................... <tProps["class"]>
  [142] extcall 139 ............................. <voidp(tProps["class"])>
  [144] jmpifz [164] ............................ if voidp(tProps["class"]) then / else
  [147] getparam 0 .............................. <me>
  [149] pushcons 132 ............................ <"Class property missing">
  [151] pushsymb 21 ............................. <#showPreviewImage>
  [153] pusharglist 3 ........................... <me, "Class property missing", #showPreviewImage>
  [155] extcall 44 .............................. <error(me, "Class property missing", #showPreviewImage)>
  [157] pusharglistnoret 1 ...................... <error(me, "Class property missing", #showPreviewImage)>
  [159] extcall 43 .............................. return error(me, "Class property missing", #showPreviewImage)
  [161] jmp [174]
  [164] getparam 1 .............................. <tProps>
  [166] pushcons 126 ............................ <"class">
  [168] pusharglist 2 ........................... <tProps, "class">
  [170] objcall 82 .............................. <tProps["class"]>
  [172] setlocal 3 .............................. tClass = tProps["class"]
  [174] getparam 1 .............................. <tProps>
  [176] pushcons 133 ............................ <"direction">
  [178] pusharglist 2 ........................... <tProps, "direction">
  [180] objcall 82 .............................. <tProps["direction"]>
  [182] pusharglist 1 ........................... <tProps["direction"]>
  [184] extcall 139 ............................. <voidp(tProps["direction"])>
  [186] jmpifz [206] ............................ if voidp(tProps["direction"]) then / else
  [189] getparam 0 .............................. <me>
  [191] pushcons 134 ............................ <"Direction property missing">
  [193] pushsymb 21 ............................. <#showPreviewImage>
  [195] pusharglist 3 ........................... <me, "Direction property missing", #showPreviewImage>
  [197] extcall 44 .............................. <error(me, "Direction property missing", #showPreviewImage)>
  [199] pusharglistnoret 1 ...................... <error(me, "Direction property missing", #showPreviewImage)>
  [201] extcall 43 .............................. return error(me, "Direction property missing", #showPreviewImage)
  [203] jmp [254]
  [206] getparam 1 .............................. <tProps>
  [208] pushcons 133 ............................ <"direction">
  [210] pushcons 135 ............................ <"2,2,2">
  [212] pusharglistnoret 3 ...................... <tProps, "direction", "2,2,2">
  [214] objcall 236 ............................. tProps["direction"] = "2,2,2"
  [216] pushcons 136 ............................ <"[">
  [218] getparam 1 .............................. <tProps>
  [220] pushcons 133 ............................ <"direction">
  [222] pusharglist 2 ........................... <tProps, "direction">
  [224] objcall 82 .............................. <tProps["direction"]>
  [226] joinstr ................................. <"[" & tProps["direction"]>
  [227] pushcons 137 ............................ <"]">
  [229] joinstr ................................. <"[" & tProps["direction"] & "]">
  [230] pusharglist 1 ........................... <"[" & tProps["direction"] & "]">
  [232] extcall 80 .............................. <value("[" & tProps["direction"] & "]")>
  [234] setlocal 4 .............................. tDirection = value("[" & tProps["direction"] & "]")
  [236] getlocal 4 .............................. <tDirection>
  [238] getobjprop 156 .......................... <tDirection.count>
  [240] pushint8 3 .............................. <3>
  [242] lt ...................................... <tDirection.count < 3>
  [243] jmpifz [254] ............................ if tDirection.count < 3 then
  [246] pushzero ................................ <0>
  [247] pushzero ................................ <0>
  [248] pushzero ................................ <0>
  [249] pusharglist 3 ........................... <[0, 0, 0]>
  [251] pushlist ................................ <[0, 0, 0]>
  [252] setlocal 4 .............................. tDirection = [0, 0, 0]
  [254] getparam 1 .............................. <tProps>
  [256] pushcons 138 ............................ <"dimensions">
  [258] pusharglist 2 ........................... <tProps, "dimensions">
  [260] objcall 82 .............................. <tProps["dimensions"]>
  [262] pusharglist 1 ........................... <tProps["dimensions"]>
  [264] extcall 139 ............................. <voidp(tProps["dimensions"])>
  [266] jmpifz [286] ............................ if voidp(tProps["dimensions"]) then / else
  [269] getparam 0 .............................. <me>
  [271] pushcons 139 ............................ <"Dimensions property missing">
  [273] pushsymb 21 ............................. <#showPreviewImage>
  [275] pusharglist 3 ........................... <me, "Dimensions property missing", #showPreviewImage>
  [277] extcall 44 .............................. <error(me, "Dimensions property missing", #showPreviewImage)>
  [279] pusharglistnoret 1 ...................... <error(me, "Dimensions property missing", #showPreviewImage)>
  [281] extcall 43 .............................. return error(me, "Dimensions property missing", #showPreviewImage)
  [283] jmp [325]
  [286] pushcons 136 ............................ <"[">
  [288] getparam 1 .............................. <tProps>
  [290] pushcons 138 ............................ <"dimensions">
  [292] pusharglist 2 ........................... <tProps, "dimensions">
  [294] objcall 82 .............................. <tProps["dimensions"]>
  [296] joinstr ................................. <"[" & tProps["dimensions"]>
  [297] pushcons 137 ............................ <"]">
  [299] joinstr ................................. <"[" & tProps["dimensions"] & "]">
  [300] pusharglist 1 ........................... <"[" & tProps["dimensions"] & "]">
  [302] extcall 80 .............................. <value("[" & tProps["dimensions"] & "]")>
  [304] setlocal 5 .............................. tDimensions = value("[" & tProps["dimensions"] & "]")
  [306] getlocal 5 .............................. <tDimensions>
  [308] getobjprop 156 .......................... <tDimensions.count>
  [310] pushint8 2 .............................. <2>
  [312] lt ...................................... <tDimensions.count < 2>
  [313] jmpifz [325] ............................ if tDimensions.count < 2 then
  [316] pushint8 1 .............................. <1>
  [318] pushint8 1 .............................. <1>
  [320] pusharglist 2 ........................... <[1, 1]>
  [322] pushlist ................................ <[1, 1]>
  [323] setlocal 5 .............................. tDimensions = [1, 1]
  [325] getparam 1 .............................. <tProps>
  [327] pushcons 127 ............................ <"partColors">
  [329] pusharglist 2 ........................... <tProps, "partColors">
  [331] objcall 82 .............................. <tProps["partColors"]>
  [333] pusharglist 1 ........................... <tProps["partColors"]>
  [335] extcall 139 ............................. <voidp(tProps["partColors"])>
  [337] jmpifz [357] ............................ if voidp(tProps["partColors"]) then / else
  [340] getparam 0 .............................. <me>
  [342] pushcons 140 ............................ <"PartColors property missing">
  [344] pushsymb 21 ............................. <#showPreviewImage>
  [346] pusharglist 3 ........................... <me, "PartColors property missing", #showPreviewImage>
  [348] extcall 44 .............................. <error(me, "PartColors property missing", #showPreviewImage)>
  [350] pusharglistnoret 1 ...................... <error(me, "PartColors property missing", #showPreviewImage)>
  [352] extcall 43 .............................. return error(me, "PartColors property missing", #showPreviewImage)
  [354] jmp [385]
  [357] getparam 1 .............................. <tProps>
  [359] pushcons 127 ............................ <"partColors">
  [361] pusharglist 2 ........................... <tProps, "partColors">
  [363] objcall 82 .............................. <tProps["partColors"]>
  [365] setlocal 6 .............................. tpartColors = tProps["partColors"]
  [367] getlocal 6 .............................. <tpartColors>
  [369] pushcons 28 ............................. <EMPTY>
  [371] eq ...................................... <tpartColors = EMPTY>
  [372] getlocal 6 .............................. <tpartColors>
  [374] pushcons 141 ............................ <"0,0,0">
  [376] eq ...................................... <tpartColors = "0,0,0">
  [377] or ...................................... <(tpartColors = EMPTY) or (tpartColors = "0,0,0")>
  [378] jmpifz [385] ............................ if (tpartColors = EMPTY) or (tpartColors = "0,0,0") then
  [381] pushcons 142 ............................ <"*ffffff">
  [383] setlocal 6 .............................. tpartColors = "*ffffff"
  [385] getparam 1 .............................. <tProps>
  [387] pushcons 143 ............................ <"objectType">
  [389] pusharglist 2 ........................... <tProps, "objectType">
  [391] objcall 82 .............................. <tProps["objectType"]>
  [393] pusharglist 1 ........................... <tProps["objectType"]>
  [395] extcall 139 ............................. <voidp(tProps["objectType"])>
  [397] jmpifz [417] ............................ if voidp(tProps["objectType"]) then / else
  [400] getparam 0 .............................. <me>
  [402] pushcons 144 ............................ <"objectType property missing">
  [404] pushsymb 21 ............................. <#showPreviewImage>
  [406] pusharglist 3 ........................... <me, "objectType property missing", #showPreviewImage>
  [408] extcall 44 .............................. <error(me, "objectType property missing", #showPreviewImage)>
  [410] pusharglistnoret 1 ...................... <error(me, "objectType property missing", #showPreviewImage)>
  [412] extcall 43 .............................. return error(me, "objectType property missing", #showPreviewImage)
  [414] jmp [427]
  [417] getparam 1 .............................. <tProps>
  [419] pushcons 143 ............................ <"objectType">
  [421] pusharglist 2 ........................... <tProps, "objectType">
  [423] objcall 82 .............................. <tProps["objectType"]>
  [425] setlocal 7 .............................. tObjectType = tProps["objectType"]
  [427] pusharglist 0 ........................... <[:]>
  [429] pushproplist ............................ <[:]>
  [430] setlocal 8 .............................. tdata = [:]
  [432] getlocal 8 .............................. <tdata>
  [434] pushsymb 237 ............................ <#id>
  [436] pushcons 145 ............................ <"ctlg_previewObj">
  [438] pusharglistnoret 3 ...................... <tdata, #id, "ctlg_previewObj">
  [440] objcall 236 ............................. tdata[#id] = "ctlg_previewObj"
  [442] getlocal 8 .............................. <tdata>
  [444] pushsymb 238 ............................ <#class>
  [446] getlocal 3 .............................. <tClass>
  [448] pusharglistnoret 3 ...................... <tdata, #class, tClass>
  [450] objcall 236 ............................. tdata[#class] = tClass
  [452] getlocal 8 .............................. <tdata>
  [454] pushsymb 86 ............................. <#name>
  [456] getlocal 3 .............................. <tClass>
  [458] pusharglistnoret 3 ...................... <tdata, #name, tClass>
  [460] objcall 236 ............................. tdata[#name] = tClass
  [462] getlocal 8 .............................. <tdata>
  [464] pushsymb 239 ............................ <#custom>
  [466] getlocal 3 .............................. <tClass>
  [468] pusharglistnoret 3 ...................... <tdata, #custom, tClass>
  [470] objcall 236 ............................. tdata[#custom] = tClass
  [472] getlocal 8 .............................. <tdata>
  [474] pushsymb 240 ............................ <#direction>
  [476] getlocal 4 .............................. <tDirection>
  [478] pusharglistnoret 3 ...................... <tdata, #direction, tDirection>
  [480] objcall 236 ............................. tdata[#direction] = tDirection
  [482] getlocal 8 .............................. <tdata>
  [484] pushsymb 241 ............................ <#dimensions>
  [486] getlocal 5 .............................. <tDimensions>
  [488] pusharglistnoret 3 ...................... <tdata, #dimensions, tDimensions>
  [490] objcall 236 ............................. tdata[#dimensions] = tDimensions
  [492] getlocal 8 .............................. <tdata>
  [494] pushsymb 242 ............................ <#colors>
  [496] getlocal 6 .............................. <tpartColors>
  [498] pusharglistnoret 3 ...................... <tdata, #colors, tpartColors>
  [500] objcall 236 ............................. tdata[#colors] = tpartColors
  [502] getlocal 8 .............................. <tdata>
  [504] pushsymb 243 ............................ <#objectType>
  [506] getlocal 7 .............................. <tObjectType>
  [508] pusharglistnoret 3 ...................... <tdata, #objectType, tObjectType>
  [510] objcall 236 ............................. tdata[#objectType] = tObjectType
  [512] pushcons 145 ............................ <"ctlg_previewObj">
  [514] pusharglist 1 ........................... <"ctlg_previewObj">
  [516] extcall 70 .............................. <objectExists("ctlg_previewObj")>
  [518] not ..................................... <not objectExists("ctlg_previewObj")>
  [519] jmpifz [559] ............................ if not objectExists("ctlg_previewObj") then / else
  [522] pushcons 145 ............................ <"ctlg_previewObj">
  [524] pushcons 146 ............................ <"Product Preview Class">
  [526] pusharglist 1 ........................... <["Product Preview Class"]>
  [528] pushlist ................................ <["Product Preview Class"]>
  [529] pusharglist 2 ........................... <"ctlg_previewObj", ["Product Preview Class"]>
  [531] extcall 42 .............................. <createObject("ctlg_previewObj", ["Product Preview Class"])>
  [533] setlocal 9 .............................. tObj = createObject("ctlg_previewObj", ["Product Preview Class"])
  [535] getlocal 9 .............................. <tObj>
  [537] pushzero ................................ <0>
  [538] eq ...................................... <tObj = 0>
  [539] jmpifz [556] ............................ if tObj = 0 then
  [542] getparam 0 .............................. <me>
  [544] pushcons 147 ............................ <"Failed object creation!">
  [546] pushsymb 244 ............................ <#showHideDialog>
  [548] pusharglist 3 ........................... <me, "Failed object creation!", #showHideDialog>
  [550] extcall 44 .............................. <error(me, "Failed object creation!", #showHideDialog)>
  [552] pusharglistnoret 1 ...................... <error(me, "Failed object creation!", #showHideDialog)>
  [554] extcall 43 .............................. return error(me, "Failed object creation!", #showHideDialog)
  [556] jmp [567]
  [559] pushcons 145 ............................ <"ctlg_previewObj">
  [561] pusharglist 1 ........................... <"ctlg_previewObj">
  [563] extcall 75 .............................. <getObject("ctlg_previewObj")>
  [565] setlocal 9 .............................. tObj = getObject("ctlg_previewObj")
  [567] getlocal 9 .............................. <tObj>
  [569] getlocal 8 .............................. <tdata>
  [571] pusharglist 1 ........................... <tdata>
  [573] objcall 138 ............................. <tdata.duplicate()>
  [575] pusharglistnoret 2 ...................... <tObj, tdata.duplicate()>
  [577] objcall 160 ............................. tObj.define(tdata.duplicate())
  [579] getlocal 9 .............................. <tObj>
  [581] pusharglist 1 ........................... <tObj>
  [583] objcall 245 ............................. <tObj.getPicture()>
  [585] setlocal 2 .............................. tImage = tObj.getPicture()
  [587] getlocal 2 .............................. <tImage>
  [589] getobjprop 135 .......................... <tImage.ilk>
  [591] pushsymb 36 ............................. <#image>
  [593] eq ...................................... <tImage.ilk = #image>
  [594] jmpifz [731] ............................ if tImage.ilk = #image then
  [597] getlocal 1 .............................. <tElem>
  [599] pushsymb 36 ............................. <#image>
  [601] pusharglist 2 ........................... <tElem, #image>
  [603] objcall 174 ............................. <tElem.getProperty(#image)>
  [605] setlocal 10 ............................. tDestImg = tElem.getProperty(#image)
  [607] getlocal 2 .............................. <tImage>
  [609] setlocal 11 ............................. tSourceImg = tImage
  [611] getlocal 10 ............................. <tDestImg>
  [613] getlocal 10 ............................. <tDestImg>
  [615] getobjprop 176 .......................... <tDestImg.rect>
  [617] pushint16 255 ........................... <255>
  [620] pushint16 255 ........................... <255>
  [623] pushint16 255 ........................... <255>
  [626] pusharglist 3 ........................... <255, 255, 255>
  [628] extcall 53 .............................. <rgb(255, 255, 255)>
  [630] pusharglistnoret 3 ...................... <tDestImg, tDestImg.rect, rgb(255, 255, 255)>
  [632] objcall 195 ............................. tDestImg.fill(tDestImg.rect, rgb(255, 255, 255))
  [634] getlocal 10 ............................. <tDestImg>
  [636] getobjprop 176 .......................... <tDestImg.rect>
  [638] getlocal 11 ............................. <tSourceImg>
  [640] getobjprop 176 .......................... <tSourceImg.rect>
  [642] sub ..................................... <tDestImg.rect - tSourceImg.rect>
  [643] setlocal 12 ............................. tdestrect = tDestImg.rect - tSourceImg.rect
  [645] pushzero ................................ <0>
  [646] pushzero ................................ <0>
  [647] pushzero ................................ <0>
  [648] pushzero ................................ <0>
  [649] pusharglist 4 ........................... <0, 0, 0, 0>
  [651] extcall 176 ............................. <rect(0, 0, 0, 0)>
  [653] setlocal 13 ............................. tMargins = rect(0, 0, 0, 0)
  [655] getlocal 12 ............................. <tdestrect>
  [657] getobjprop 177 .......................... <tdestrect.width>
  [659] pushint8 2 .............................. <2>
  [661] div ..................................... <tdestrect.width / 2>
  [662] getlocal 12 ............................. <tdestrect>
  [664] getobjprop 178 .......................... <tdestrect.height>
  [666] pushint8 2 .............................. <2>
  [668] div ..................................... <tdestrect.height / 2>
  [669] getlocal 11 ............................. <tSourceImg>
  [671] getobjprop 177 .......................... <tSourceImg.width>
  [673] getlocal 12 ............................. <tdestrect>
  [675] getobjprop 177 .......................... <tdestrect.width>
  [677] pushint8 2 .............................. <2>
  [679] div ..................................... <tdestrect.width / 2>
  [680] add ..................................... <tSourceImg.width + (tdestrect.width / 2)>
  [681] getlocal 12 ............................. <tdestrect>
  [683] getobjprop 178 .......................... <tdestrect.height>
  [685] pushint8 2 .............................. <2>
  [687] div ..................................... <tdestrect.height / 2>
  [688] getlocal 11 ............................. <tSourceImg>
  [690] getobjprop 178 .......................... <tSourceImg.height>
  [692] add ..................................... <(tdestrect.height / 2) + tSourceImg.height>
  [693] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height>
  [695] extcall 176 ............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height)>
  [697] getlocal 13 ............................. <tMargins>
  [699] add ..................................... <rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height) + tMargins>
  [700] setlocal 12 ............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tSourceImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tSourceImg.height) + tMargins
  [702] getlocal 10 ............................. <tDestImg>
  [704] getlocal 11 ............................. <tSourceImg>
  [706] getlocal 12 ............................. <tdestrect>
  [708] getlocal 11 ............................. <tSourceImg>
  [710] getobjprop 176 .......................... <tSourceImg.rect>
  [712] pushsymb 179 ............................ <#ink>
  [714] pushint8 36 ............................. <36>
  [716] pusharglist 2 ........................... <[#ink: 36]>
  [718] pushproplist ............................ <[#ink: 36]>
  [719] pusharglistnoret 5 ...................... <tDestImg, tSourceImg, tdestrect, tSourceImg.rect, [#ink: 36]>
  [721] objcall 180 ............................. tDestImg.copyPixels(tSourceImg, tdestrect, tSourceImg.rect, [#ink: 36])
  [723] getlocal 1 .............................. <tElem>
  [725] getlocal 10 ............................. <tDestImg>
  [727] pusharglistnoret 2 ...................... <tElem, tDestImg>
  [729] objcall 181 ............................. tElem.feedImage(tDestImg)
  [731] pushint8 1 .............................. <1>
  [733] pusharglistnoret 1 ...................... <1>
  [735] extcall 43 .............................. return 1
  [737] ret
end

on renderPageList me, tPages
  [  0] pushcons 148 ............................ <"cat_index_marginv">
  [  2] pusharglist 1 ........................... <"cat_index_marginv">
  [  4] extcall 251 ............................. <variableExists("cat_index_marginv")>
  [  6] jmpifz [ 20] ............................ if variableExists("cat_index_marginv") then / else
  [  9] pushcons 148 ............................ <"cat_index_marginv">
  [ 11] pusharglist 1 ........................... <"cat_index_marginv">
  [ 13] extcall 252 ............................. <getVariable("cat_index_marginv")>
  [ 15] setlocal 0 .............................. tIndexVertMargin = getVariable("cat_index_marginv")
  [ 17] jmp [ 23]
  [ 20] pushzero ................................ <0>
  [ 21] setlocal 0 .............................. tIndexVertMargin = 0
  [ 23] getprop 31 .............................. <pCatalogID>
  [ 25] pusharglist 1 ........................... <pCatalogID>
  [ 27] extcall 74 .............................. <windowExists(pCatalogID)>
  [ 29] not ..................................... <not windowExists(pCatalogID)>
  [ 30] jmpifz [ 47] ............................ if not windowExists(pCatalogID) then
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 149 ............................ <"Failed to render the list of Catalogue pages!!!">
  [ 37] pushsymb 22 ............................. <#renderPageList>
  [ 39] pusharglist 3 ........................... <me, "Failed to render the list of Catalogue pages!!!", #renderPageList>
  [ 41] extcall 44 .............................. <error(me, "Failed to render the list of Catalogue pages!!!", #renderPageList)>
  [ 43] pusharglistnoret 1 ...................... <error(me, "Failed to render the list of Catalogue pages!!!", #renderPageList)>
  [ 45] extcall 43 .............................. return error(me, "Failed to render the list of Catalogue pages!!!", #renderPageList)
  [ 47] getprop 31 .............................. <pCatalogID>
  [ 49] pusharglist 1 ........................... <pCatalogID>
  [ 51] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 53] setlocal 1 .............................. tWndObj = getWindow(pCatalogID)
  [ 55] getlocal 1 .............................. <tWndObj>
  [ 57] pushcons 150 ............................ <"ctlg_pages">
  [ 59] pusharglist 2 ........................... <tWndObj, "ctlg_pages">
  [ 61] objcall 106 ............................. <tWndObj.elementExists("ctlg_pages")>
  [ 63] not ..................................... <not tWndObj.elementExists("ctlg_pages")>
  [ 64] jmpifz [ 81] ............................ if not tWndObj.elementExists("ctlg_pages") then
  [ 67] getparam 0 .............................. <me>
  [ 69] pushcons 151 ............................ <"Element not exists, failed to render Catalogue index!">
  [ 71] pushsymb 226 ............................ <#f>
  [ 73] pusharglist 3 ........................... <me, "Element not exists, failed to render Catalogue index!", #f>
  [ 75] extcall 44 .............................. <error(me, "Element not exists, failed to render Catalogue index!", #f)>
  [ 77] pusharglistnoret 1 ...................... <error(me, "Element not exists, failed to render Catalogue index!", #f)>
  [ 79] extcall 43 .............................. return error(me, "Element not exists, failed to render Catalogue index!", #f)
  [ 81] getlocal 1 .............................. <tWndObj>
  [ 83] pushcons 150 ............................ <"ctlg_pages">
  [ 85] pusharglist 2 ........................... <tWndObj, "ctlg_pages">
  [ 87] objcall 97 .............................. <tWndObj.getElement("ctlg_pages")>
  [ 89] setlocal 2 .............................. tElem = tWndObj.getElement("ctlg_pages")
  [ 91] getlocal 2 .............................. <tElem>
  [ 93] pushsymb 177 ............................ <#width>
  [ 95] pusharglist 2 ........................... <tElem, #width>
  [ 97] objcall 174 ............................. <tElem.getProperty(#width)>
  [ 99] setlocal 3 .............................. tWidth = tElem.getProperty(#width)
  [101] getlocal 2 .............................. <tElem>
  [103] pushsymb 178 ............................ <#height>
  [105] pusharglist 2 ........................... <tElem, #height>
  [107] objcall 174 ............................. <tElem.getProperty(#height)>
  [109] setlocal 4 .............................. tHeight = tElem.getProperty(#height)
  [111] pushcons 152 ............................ <"#DDDDDD">
  [113] pusharglist 1 ........................... <"#DDDDDD">
  [115] extcall 53 .............................. <rgb("#DDDDDD")>
  [117] setlocal 5 .............................. tBgColor = rgb("#DDDDDD")
  [119] pushint8 6 .............................. <6>
  [121] setlocal 6 .............................. tLeftMarg = 6
  [123] getprop 46 .............................. <pWriterPages>
  [125] pusharglist 1 ........................... <pWriterPages>
  [127] extcall 253 ............................. <getWriter(pWriterPages)>
  [129] setlocal 7 .............................. tWriteObj = getWriter(pWriterPages)
  [131] getprop 32 .............................. <pPageLineHeight>
  [133] getlocal 7 .............................. <tWriteObj>
  [135] pusharglist 1 ........................... <tWriteObj>
  [137] objcall 254 ............................. <tWriteObj.getFont()>
  [139] pushsymb 255 ............................ <#lineHeight>
  [141] pusharglist 2 ........................... <tWriteObj.getFont(), #lineHeight>
  [143] objcall 82 .............................. <tWriteObj.getFont()[#lineHeight]>
  [145] sub ..................................... <pPageLineHeight - tWriteObj.getFont()[#lineHeight]>
  [146] pushint8 2 .............................. <2>
  [148] div ..................................... <(pPageLineHeight - tWriteObj.getFont()[#lineHeight]) / 2>
  [149] getlocal 0 .............................. <tIndexVertMargin>
  [151] add ..................................... <((pPageLineHeight - tWriteObj.getFont()[#lineHeight]) / 2) + tIndexVertMargin>
  [152] setlocal 8 .............................. tVerticMarg = ((pPageLineHeight - tWriteObj.getFont()[#lineHeight]) / 2) + tIndexVertMargin
  [154] getparam 1 .............................. <tPages>
  [156] getobjprop 135 .......................... <tPages.ilk>
  [158] pushsymb 136 ............................ <#propList>
  [160] eq ...................................... <tPages.ilk = #propList>
  [161] jmpifz [173] ............................ if tPages.ilk = #propList then / else
  [164] getparam 1 .............................. <tPages>
  [166] getobjprop 156 .......................... <tPages.count>
  [168] setlocal 9 .............................. tPageCounter = tPages.count
  [170] jmp [176]
  [173] pushzero ................................ <0>
  [174] setlocal 9 .............................. tPageCounter = 0
  [176] getprop 32 .............................. <pPageLineHeight>
  [178] getlocal 9 .............................. <tPageCounter>
  [180] mul ..................................... <pPageLineHeight * tPageCounter>
  [181] pushint8 1 .............................. <1>
  [183] add ..................................... <(pPageLineHeight * tPageCounter) + 1>
  [184] setlocal 10 ............................. tImgHeight = (pPageLineHeight * tPageCounter) + 1
  [186] getlocal 10 ............................. <tImgHeight>
  [188] getlocal 4 .............................. <tHeight>
  [190] lt ...................................... <tImgHeight < tHeight>
  [191] jmpifz [198] ............................ if tImgHeight < tHeight then
  [194] getlocal 4 .............................. <tHeight>
  [196] setlocal 10 ............................. tImgHeight = tHeight
  [198] getlocal 3 .............................. <tWidth>
  [200] getlocal 6 .............................. <tLeftMarg>
  [202] sub ..................................... <tWidth - tLeftMarg>
  [203] getlocal 10 ............................. <tImgHeight>
  [205] pushint8 8 .............................. <8>
  [207] pusharglist 3 ........................... <tWidth - tLeftMarg, tImgHeight, 8>
  [209] extcall 36 .............................. <image(tWidth - tLeftMarg, tImgHeight, 8)>
  [211] setprop 256 ............................. pPageListImg = image(tWidth - tLeftMarg, tImgHeight, 8)
  [214] getprop 256 ............................. <pPageListImg>
  [217] pushzero ................................ <0>
  [218] pushzero ................................ <0>
  [219] getprop 256 ............................. <pPageListImg>
  [222] getobjprop 177 .......................... <pPageListImg.width>
  [224] getprop 256 ............................. <pPageListImg>
  [227] getobjprop 178 .......................... <pPageListImg.height>
  [229] pusharglist 4 ........................... <0, 0, pPageListImg.width, pPageListImg.height>
  [231] extcall 176 ............................. <rect(0, 0, pPageListImg.width, pPageListImg.height)>
  [233] getlocal 5 .............................. <tBgColor>
  [235] pusharglistnoret 3 ...................... <pPageListImg, rect(0, 0, pPageListImg.width, pPageListImg.height), tBgColor>
  [237] objcall 195 ............................. pPageListImg.fill(rect(0, 0, pPageListImg.width, pPageListImg.height), tBgColor)
  [239] getprop 256 ............................. <pPageListImg>
  [242] pushzero ................................ <0>
  [243] pushzero ................................ <0>
  [244] getprop 256 ............................. <pPageListImg>
  [247] getobjprop 177 .......................... <pPageListImg.width>
  [249] pushint8 1 .............................. <1>
  [251] pusharglist 4 ........................... <0, 0, pPageListImg.width, 1>
  [253] extcall 176 ............................. <rect(0, 0, pPageListImg.width, 1)>
  [255] pushsymb 257 ............................ <#shapeType>
  [258] pushsymb 176 ............................ <#rect>
  [260] pushsymb 258 ............................ <#lineSize>
  [263] pushint8 1 .............................. <1>
  [265] pushsymb 52 ............................. <#color>
  [267] pushcons 153 ............................ <"#AAAAAA">
  [269] pusharglist 1 ........................... <"#AAAAAA">
  [271] extcall 53 .............................. <rgb("#AAAAAA")>
  [273] pusharglist 6 ........................... <[#shapeType: #rect, #lineSize: 1, #color: rgb("#AAAAAA")]>
  [275] pushproplist ............................ <[#shapeType: #rect, #lineSize: 1, #color: rgb("#AAAAAA")]>
  [276] pusharglistnoret 3 ...................... <pPageListImg, rect(0, 0, pPageListImg.width, 1), [#shapeType: #rect, #lineSize: 1, #color: rgb("#AAAAAA")]>
  [278] objcall 259 ............................. pPageListImg.draw(rect(0, 0, pPageListImg.width, 1), [#shapeType: #rect, #lineSize: 1, #color: rgb("#AAAAAA")])
  [281] getparam 1 .............................. <tPages>
  [283] getobjprop 135 .......................... <tPages.ilk>
  [285] pushsymb 136 ............................ <#propList>
  [287] eq ...................................... <tPages.ilk = #propList>
  [288] jmpifz [458] ............................ if tPages.ilk = #propList then
  [291] pushint8 1 .............................. <1>
  [293] setlocal 11
  [295] getlocal 11
  [297] getparam 1 .............................. <tPages>
  [299] getobjprop 156 .......................... <tPages.count>
  [301] lteq
  [302] jmpifz [458] ............................ repeat with f = 1 to tPages.count
  [305] getparam 1 .............................. <tPages>
  [307] getlocal 11 ............................. <f>
  [309] pusharglist 2 ........................... <tPages, f>
  [311] objcall 82 .............................. <tPages[f]>
  [313] setlocal 12 ............................. tText = tPages[f]
  [315] getlocal 7 .............................. <tWriteObj>
  [317] getlocal 12 ............................. <tText>
  [319] pusharglist 2 ........................... <tWriteObj, tText>
  [321] objcall 260 ............................. <tWriteObj.render(tText)>
  [324] pusharglist 1 ........................... <tWriteObj.render(tText)>
  [326] objcall 138 ............................. <tWriteObj.render(tText).duplicate()>
  [328] setlocal 13 ............................. tPageImg = tWriteObj.render(tText).duplicate()
  [330] getlocal 6 .............................. <tLeftMarg>
  [332] setlocal 14 ............................. tX1 = tLeftMarg
  [334] getlocal 14 ............................. <tX1>
  [336] getlocal 13 ............................. <tPageImg>
  [338] getobjprop 177 .......................... <tPageImg.width>
  [340] add ..................................... <tX1 + tPageImg.width>
  [341] setlocal 15 ............................. tX2 = tX1 + tPageImg.width
  [343] getlocal 8 .............................. <tVerticMarg>
  [345] getprop 32 .............................. <pPageLineHeight>
  [347] getlocal 11 ............................. <f>
  [349] pushint8 1 .............................. <1>
  [351] sub ..................................... <f - 1>
  [352] mul ..................................... <pPageLineHeight * (f - 1)>
  [353] add ..................................... <tVerticMarg + (pPageLineHeight * (f - 1))>
  [354] pushint8 1 .............................. <1>
  [356] add ..................................... <tVerticMarg + (pPageLineHeight * (f - 1)) + 1>
  [357] setlocal 16 ............................. tY1 = tVerticMarg + (pPageLineHeight * (f - 1)) + 1
  [359] getlocal 16 ............................. <tY1>
  [361] getlocal 13 ............................. <tPageImg>
  [363] getobjprop 178 .......................... <tPageImg.height>
  [365] add ..................................... <tY1 + tPageImg.height>
  [366] setlocal 17 ............................. tY2 = tY1 + tPageImg.height
  [368] getlocal 14 ............................. <tX1>
  [370] getlocal 16 ............................. <tY1>
  [372] getlocal 15 ............................. <tX2>
  [374] getlocal 17 ............................. <tY2>
  [376] pusharglist 4 ........................... <tX1, tY1, tX2, tY2>
  [378] extcall 176 ............................. <rect(tX1, tY1, tX2, tY2)>
  [380] setlocal 18 ............................. tDstRect = rect(tX1, tY1, tX2, tY2)
  [382] getprop 256 ............................. <pPageListImg>
  [385] getlocal 13 ............................. <tPageImg>
  [387] getlocal 18 ............................. <tDstRect>
  [389] getlocal 13 ............................. <tPageImg>
  [391] getobjprop 176 .......................... <tPageImg.rect>
  [393] pusharglistnoret 4 ...................... <pPageListImg, tPageImg, tDstRect, tPageImg.rect>
  [395] objcall 180 ............................. pPageListImg.copyPixels(tPageImg, tDstRect, tPageImg.rect)
  [397] getprop 256 ............................. <pPageListImg>
  [400] pushzero ................................ <0>
  [401] getprop 32 .............................. <pPageLineHeight>
  [403] getlocal 11 ............................. <f>
  [405] mul ..................................... <pPageLineHeight * f>
  [406] getprop 256 ............................. <pPageListImg>
  [409] getobjprop 177 .......................... <pPageListImg.width>
  [411] getprop 32 .............................. <pPageLineHeight>
  [413] getlocal 11 ............................. <f>
  [415] mul ..................................... <pPageLineHeight * f>
  [416] pushint8 1 .............................. <1>
  [418] add ..................................... <(pPageLineHeight * f) + 1>
  [419] pusharglist 4 ........................... <0, pPageLineHeight * f, pPageListImg.width, (pPageLineHeight * f) + 1>
  [421] extcall 176 ............................. <rect(0, pPageLineHeight * f, pPageListImg.width, (pPageLineHeight * f) + 1)>
  [423] pushsymb 257 ............................ <#shapeType>
  [426] pushsymb 176 ............................ <#rect>
  [428] pushsymb 258 ............................ <#lineSize>
  [431] pushint8 1 .............................. <1>
  [433] pushsymb 52 ............................. <#color>
  [435] pushcons 153 ............................ <"#AAAAAA">
  [437] pusharglist 1 ........................... <"#AAAAAA">
  [439] extcall 53 .............................. <rgb("#AAAAAA")>
  [441] pusharglist 6 ........................... <[#shapeType: #rect, #lineSize: 1, #color: rgb("#AAAAAA")]>
  [443] pushproplist ............................ <[#shapeType: #rect, #lineSize: 1, #color: rgb("#AAAAAA")]>
  [444] pusharglistnoret 3 ...................... <pPageListImg, rect(0, pPageLineHeight * f, pPageListImg.width, (pPageLineHeight * f) + 1), [#shapeType: #rect, #lineSize: 1, #color: rgb("#AAAAAA")]>
  [446] objcall 259 ............................. pPageListImg.draw(rect(0, pPageLineHeight * f, pPageListImg.width, (pPageLineHeight * f) + 1), [#shapeType: #rect, #lineSize: 1, #color: rgb("#AAAAAA")])
  [449] pushint8 1
  [451] getlocal 11
  [453] add
  [454] setlocal 11
  [456] endrepeat [295]
  [458] pushcons 154 ............................ <"ctlg.pagelist.left">
  [460] pusharglist 1 ........................... <"ctlg.pagelist.left">
  [462] extcall 194 ............................. <getmemnum("ctlg.pagelist.left")>
  [464] pusharglist 1 ........................... <getmemnum("ctlg.pagelist.left")>
  [466] extcall 175 ............................. <member(getmemnum("ctlg.pagelist.left"))>
  [468] getobjprop 36 ........................... <member(getmemnum("ctlg.pagelist.left")).image>
  [470] setlocal 19 ............................. tLeftImg = member(getmemnum("ctlg.pagelist.left")).image
  [472] getprop 256 ............................. <pPageListImg>
  [475] getlocal 19 ............................. <tLeftImg>
  [477] pushzero ................................ <0>
  [478] pushzero ................................ <0>
  [479] getlocal 19 ............................. <tLeftImg>
  [481] getobjprop 177 .......................... <tLeftImg.width>
  [483] getprop 256 ............................. <pPageListImg>
  [486] getobjprop 178 .......................... <pPageListImg.height>
  [488] pusharglist 4 ........................... <0, 0, tLeftImg.width, pPageListImg.height>
  [490] extcall 176 ............................. <rect(0, 0, tLeftImg.width, pPageListImg.height)>
  [492] getlocal 19 ............................. <tLeftImg>
  [494] getobjprop 176 .......................... <tLeftImg.rect>
  [496] pusharglistnoret 4 ...................... <pPageListImg, tLeftImg, rect(0, 0, tLeftImg.width, pPageListImg.height), tLeftImg.rect>
  [498] objcall 180 ............................. pPageListImg.copyPixels(tLeftImg, rect(0, 0, tLeftImg.width, pPageListImg.height), tLeftImg.rect)
  [500] getlocal 2 .............................. <tElem>
  [502] getprop 256 ............................. <pPageListImg>
  [505] pusharglist 1 ........................... <pPageListImg>
  [507] objcall 138 ............................. <pPageListImg.duplicate()>
  [509] pusharglistnoret 2 ...................... <tElem, pPageListImg.duplicate()>
  [511] objcall 181 ............................. tElem.feedImage(pPageListImg.duplicate())
  [513] ret
end

on renderSelectPage me, tClickLine, tLastSelectLine
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 24] ............................ if not windowExists(pCatalogID) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 122 ............................ <"Catalogue window not exists">
  [ 14] pushsymb 24 ............................. <#selectPage>
  [ 16] pusharglist 3 ........................... <me, "Catalogue window not exists", #selectPage>
  [ 18] extcall 44 .............................. <error(me, "Catalogue window not exists", #selectPage)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Catalogue window not exists", #selectPage)>
  [ 22] extcall 43 .............................. return error(me, "Catalogue window not exists", #selectPage)
  [ 24] getprop 31 .............................. <pCatalogID>
  [ 26] pusharglist 1 ........................... <pCatalogID>
  [ 28] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 30] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 32] pushzero ................................ <0>
  [ 33] setlocal 1 .............................. tScrollOffset = 0
  [ 35] getlocal 0 .............................. <tWndObj>
  [ 37] pushcons 155 ............................ <"ctlg_pages_scroll">
  [ 39] pusharglist 2 ........................... <tWndObj, "ctlg_pages_scroll">
  [ 41] objcall 106 ............................. <tWndObj.elementExists("ctlg_pages_scroll")>
  [ 43] jmpifz [ 61] ............................ if tWndObj.elementExists("ctlg_pages_scroll") then
  [ 46] getlocal 0 .............................. <tWndObj>
  [ 48] pushcons 155 ............................ <"ctlg_pages_scroll">
  [ 50] pusharglist 2 ........................... <tWndObj, "ctlg_pages_scroll">
  [ 52] objcall 97 .............................. <tWndObj.getElement("ctlg_pages_scroll")>
  [ 54] pusharglist 1 ........................... <tWndObj.getElement("ctlg_pages_scroll")>
  [ 56] objcall 278 ............................. <tWndObj.getElement("ctlg_pages_scroll").getScrollOffset()>
  [ 59] setlocal 1 .............................. tScrollOffset = tWndObj.getElement("ctlg_pages_scroll").getScrollOffset()
  [ 61] pushcons 148 ............................ <"cat_index_marginv">
  [ 63] pusharglist 1 ........................... <"cat_index_marginv">
  [ 65] extcall 251 ............................. <variableExists("cat_index_marginv")>
  [ 67] jmpifz [ 81] ............................ if variableExists("cat_index_marginv") then / else
  [ 70] pushcons 148 ............................ <"cat_index_marginv">
  [ 72] pusharglist 1 ........................... <"cat_index_marginv">
  [ 74] extcall 252 ............................. <getVariable("cat_index_marginv")>
  [ 76] setlocal 2 .............................. tIndexVertMargin = getVariable("cat_index_marginv")
  [ 78] jmp [ 84]
  [ 81] pushzero ................................ <0>
  [ 82] setlocal 2 .............................. tIndexVertMargin = 0
  [ 84] getlocal 0 .............................. <tWndObj>
  [ 86] pushcons 150 ............................ <"ctlg_pages">
  [ 88] pusharglist 2 ........................... <tWndObj, "ctlg_pages">
  [ 90] objcall 97 .............................. <tWndObj.getElement("ctlg_pages")>
  [ 92] setlocal 3 .............................. tElem = tWndObj.getElement("ctlg_pages")
  [ 94] getlocal 3 .............................. <tElem>
  [ 96] pushsymb 36 ............................. <#image>
  [ 98] pusharglist 2 ........................... <tElem, #image>
  [100] objcall 174 ............................. <tElem.getProperty(#image)>
  [102] setlocal 4 .............................. tImg = tElem.getProperty(#image)
  [104] getparam 1 .............................. <tClickLine>
  [106] pushint8 1 .............................. <1>
  [108] sub ..................................... <tClickLine - 1>
  [109] getprop 32 .............................. <pPageLineHeight>
  [111] mul ..................................... <(tClickLine - 1) * pPageLineHeight>
  [112] pushint8 1 .............................. <1>
  [114] add ..................................... <((tClickLine - 1) * pPageLineHeight) + 1>
  [115] setlocal 5 .............................. tY1 = ((tClickLine - 1) * pPageLineHeight) + 1
  [117] getlocal 5 .............................. <tY1>
  [119] getprop 32 .............................. <pPageLineHeight>
  [121] add ..................................... <tY1 + pPageLineHeight>
  [122] pushint8 1 .............................. <1>
  [124] sub ..................................... <tY1 + pPageLineHeight - 1>
  [125] setlocal 6 .............................. tY2 = tY1 + pPageLineHeight - 1
  [127] getlocal 4 .............................. <tImg>
  [129] pushzero ................................ <0>
  [130] getlocal 5 .............................. <tY1>
  [132] getlocal 4 .............................. <tImg>
  [134] getobjprop 177 .......................... <tImg.width>
  [136] getlocal 6 .............................. <tY2>
  [138] pusharglist 4 ........................... <0, tY1, tImg.width, tY2>
  [140] extcall 176 ............................. <rect(0, tY1, tImg.width, tY2)>
  [142] pushcons 156 ............................ <"#EEEEEE">
  [144] pusharglist 1 ........................... <"#EEEEEE">
  [146] extcall 53 .............................. <rgb("#EEEEEE")>
  [148] pusharglistnoret 3 ...................... <tImg, rect(0, tY1, tImg.width, tY2), rgb("#EEEEEE")>
  [150] objcall 195 ............................. tImg.fill(rect(0, tY1, tImg.width, tY2), rgb("#EEEEEE"))
  [152] pushcons 157 ............................ <"ctlg.pagelist.left.active">
  [154] pusharglist 1 ........................... <"ctlg.pagelist.left.active">
  [156] extcall 194 ............................. <getmemnum("ctlg.pagelist.left.active")>
  [158] pusharglist 1 ........................... <getmemnum("ctlg.pagelist.left.active")>
  [160] extcall 175 ............................. <member(getmemnum("ctlg.pagelist.left.active"))>
  [162] getobjprop 36 ........................... <member(getmemnum("ctlg.pagelist.left.active")).image>
  [164] setlocal 7 .............................. tLeftImg = member(getmemnum("ctlg.pagelist.left.active")).image
  [166] getlocal 4 .............................. <tImg>
  [168] getlocal 7 .............................. <tLeftImg>
  [170] pushzero ................................ <0>
  [171] getlocal 5 .............................. <tY1>
  [173] getlocal 7 .............................. <tLeftImg>
  [175] getobjprop 177 .......................... <tLeftImg.width>
  [177] getlocal 6 .............................. <tY2>
  [179] pusharglist 4 ........................... <0, tY1, tLeftImg.width, tY2>
  [181] extcall 176 ............................. <rect(0, tY1, tLeftImg.width, tY2)>
  [183] getlocal 7 .............................. <tLeftImg>
  [185] getobjprop 176 .......................... <tLeftImg.rect>
  [187] pusharglistnoret 4 ...................... <tImg, tLeftImg, rect(0, tY1, tLeftImg.width, tY2), tLeftImg.rect>
  [189] objcall 180 ............................. tImg.copyPixels(tLeftImg, rect(0, tY1, tLeftImg.width, tY2), tLeftImg.rect)
  [191] getprop 46 .............................. <pWriterPages>
  [193] pusharglist 1 ........................... <pWriterPages>
  [195] extcall 253 ............................. <getWriter(pWriterPages)>
  [197] setlocal 8 .............................. tWriteObj = getWriter(pWriterPages)
  [199] getprop 32 .............................. <pPageLineHeight>
  [201] getlocal 8 .............................. <tWriteObj>
  [203] pusharglist 1 ........................... <tWriteObj>
  [205] objcall 254 ............................. <tWriteObj.getFont()>
  [207] pushsymb 255 ............................ <#lineHeight>
  [209] pusharglist 2 ........................... <tWriteObj.getFont(), #lineHeight>
  [211] objcall 82 .............................. <tWriteObj.getFont()[#lineHeight]>
  [213] sub ..................................... <pPageLineHeight - tWriteObj.getFont()[#lineHeight]>
  [214] pushint8 2 .............................. <2>
  [216] div ..................................... <(pPageLineHeight - tWriteObj.getFont()[#lineHeight]) / 2>
  [217] setlocal 9 .............................. tVerticMarg = (pPageLineHeight - tWriteObj.getFont()[#lineHeight]) / 2
  [219] pushint8 6 .............................. <6>
  [221] setlocal 10 ............................. tLeftMarg = 6
  [223] getprop 132 ............................. <pPagePropList>
  [225] getparam 1 .............................. <tClickLine>
  [227] pusharglist 2 ........................... <pPagePropList, tClickLine>
  [229] objcall 82 .............................. <pPagePropList[tClickLine]>
  [231] setlocal 11 ............................. tText = pPagePropList[tClickLine]
  [233] getlocal 8 .............................. <tWriteObj>
  [235] getlocal 11 ............................. <tText>
  [237] pusharglist 2 ........................... <tWriteObj, tText>
  [239] objcall 260 ............................. <tWriteObj.render(tText)>
  [242] pusharglist 1 ........................... <tWriteObj.render(tText)>
  [244] objcall 138 ............................. <tWriteObj.render(tText).duplicate()>
  [246] setlocal 12 ............................. tPageImg = tWriteObj.render(tText).duplicate()
  [248] getlocal 10 ............................. <tLeftMarg>
  [250] setlocal 13 ............................. tX1 = tLeftMarg
  [252] getlocal 13 ............................. <tX1>
  [254] getlocal 12 ............................. <tPageImg>
  [256] getobjprop 177 .......................... <tPageImg.width>
  [258] add ..................................... <tX1 + tPageImg.width>
  [259] setlocal 14 ............................. tX2 = tX1 + tPageImg.width
  [261] getlocal 9 .............................. <tVerticMarg>
  [263] getprop 32 .............................. <pPageLineHeight>
  [265] getparam 1 .............................. <tClickLine>
  [267] pushint8 1 .............................. <1>
  [269] sub ..................................... <tClickLine - 1>
  [270] mul ..................................... <pPageLineHeight * (tClickLine - 1)>
  [271] add ..................................... <tVerticMarg + (pPageLineHeight * (tClickLine - 1))>
  [272] pushint8 1 .............................. <1>
  [274] add ..................................... <tVerticMarg + (pPageLineHeight * (tClickLine - 1)) + 1>
  [275] getlocal 2 .............................. <tIndexVertMargin>
  [277] add ..................................... <tVerticMarg + (pPageLineHeight * (tClickLine - 1)) + 1 + tIndexVertMargin>
  [278] setlocal 5 .............................. tY1 = tVerticMarg + (pPageLineHeight * (tClickLine - 1)) + 1 + tIndexVertMargin
  [280] getlocal 5 .............................. <tY1>
  [282] getlocal 12 ............................. <tPageImg>
  [284] getobjprop 178 .......................... <tPageImg.height>
  [286] add ..................................... <tY1 + tPageImg.height>
  [287] setlocal 6 .............................. tY2 = tY1 + tPageImg.height
  [289] getlocal 13 ............................. <tX1>
  [291] getlocal 5 .............................. <tY1>
  [293] getlocal 14 ............................. <tX2>
  [295] getlocal 6 .............................. <tY2>
  [297] pusharglist 4 ........................... <tX1, tY1, tX2, tY2>
  [299] extcall 176 ............................. <rect(tX1, tY1, tX2, tY2)>
  [301] setlocal 15 ............................. tDstRect = rect(tX1, tY1, tX2, tY2)
  [303] getlocal 4 .............................. <tImg>
  [305] getlocal 12 ............................. <tPageImg>
  [307] getlocal 15 ............................. <tDstRect>
  [309] getlocal 12 ............................. <tPageImg>
  [311] getobjprop 176 .......................... <tPageImg.rect>
  [313] pusharglistnoret 4 ...................... <tImg, tPageImg, tDstRect, tPageImg.rect>
  [315] objcall 180 ............................. tImg.copyPixels(tPageImg, tDstRect, tPageImg.rect)
  [317] getparam 2 .............................. <tLastSelectLine>
  [319] pusharglist 1 ........................... <tLastSelectLine>
  [321] extcall 139 ............................. <voidp(tLastSelectLine)>
  [323] not ..................................... <not voidp(tLastSelectLine)>
  [324] jmpifz [385] ............................ if not voidp(tLastSelectLine) then
  [327] getparam 2 .............................. <tLastSelectLine>
  [329] pushint8 1 .............................. <1>
  [331] sub ..................................... <tLastSelectLine - 1>
  [332] getprop 32 .............................. <pPageLineHeight>
  [334] mul ..................................... <(tLastSelectLine - 1) * pPageLineHeight>
  [335] pushint8 1 .............................. <1>
  [337] add ..................................... <((tLastSelectLine - 1) * pPageLineHeight) + 1>
  [338] setlocal 5 .............................. tY1 = ((tLastSelectLine - 1) * pPageLineHeight) + 1
  [340] getlocal 5 .............................. <tY1>
  [342] getprop 32 .............................. <pPageLineHeight>
  [344] add ..................................... <tY1 + pPageLineHeight>
  [345] pushint8 1 .............................. <1>
  [347] sub ..................................... <tY1 + pPageLineHeight - 1>
  [348] setlocal 6 .............................. tY2 = tY1 + pPageLineHeight - 1
  [350] getlocal 4 .............................. <tImg>
  [352] getprop 256 ............................. <pPageListImg>
  [355] pushzero ................................ <0>
  [356] getlocal 5 .............................. <tY1>
  [358] getlocal 4 .............................. <tImg>
  [360] getobjprop 177 .......................... <tImg.width>
  [362] getlocal 6 .............................. <tY2>
  [364] pusharglist 4 ........................... <0, tY1, tImg.width, tY2>
  [366] extcall 176 ............................. <rect(0, tY1, tImg.width, tY2)>
  [368] pushzero ................................ <0>
  [369] getlocal 5 .............................. <tY1>
  [371] getlocal 4 .............................. <tImg>
  [373] getobjprop 177 .......................... <tImg.width>
  [375] getlocal 6 .............................. <tY2>
  [377] pusharglist 4 ........................... <0, tY1, tImg.width, tY2>
  [379] extcall 176 ............................. <rect(0, tY1, tImg.width, tY2)>
  [381] pusharglistnoret 4 ...................... <tImg, pPageListImg, rect(0, tY1, tImg.width, tY2), rect(0, tY1, tImg.width, tY2)>
  [383] objcall 180 ............................. tImg.copyPixels(pPageListImg, rect(0, tY1, tImg.width, tY2), rect(0, tY1, tImg.width, tY2))
  [385] getlocal 3 .............................. <tElem>
  [387] getlocal 4 .............................. <tImg>
  [389] pusharglistnoret 2 ...................... <tElem, tImg>
  [391] objcall 181 ............................. tElem.feedImage(tImg)
  [393] getlocal 1 .............................. <tScrollOffset>
  [395] pushzero ................................ <0>
  [396] gt ...................................... <tScrollOffset > 0>
  [397] getlocal 0 .............................. <tWndObj>
  [399] pushcons 155 ............................ <"ctlg_pages_scroll">
  [401] pusharglist 2 ........................... <tWndObj, "ctlg_pages_scroll">
  [403] objcall 106 ............................. <tWndObj.elementExists("ctlg_pages_scroll")>
  [405] and ..................................... <(tScrollOffset > 0) and tWndObj.elementExists("ctlg_pages_scroll")>
  [406] jmpifz [424] ............................ if (tScrollOffset > 0) and tWndObj.elementExists("ctlg_pages_scroll") then
  [409] getlocal 0 .............................. <tWndObj>
  [411] pushcons 155 ............................ <"ctlg_pages_scroll">
  [413] pusharglist 2 ........................... <tWndObj, "ctlg_pages_scroll">
  [415] objcall 97 .............................. <tWndObj.getElement("ctlg_pages_scroll")>
  [417] getlocal 1 .............................. <tScrollOffset>
  [419] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_pages_scroll"), tScrollOffset>
  [421] objcall 279 ............................. tWndObj.getElement("ctlg_pages_scroll").setScrollOffset(tScrollOffset)
  [424] ret
end

on selectPage me, tClickLine
  [  0] getprop 132 ............................. <pPagePropList>
  [  2] getobjprop 135 .......................... <pPagePropList.ilk>
  [  4] pushsymb 136 ............................ <#propList>
  [  6] nteq .................................... <pPagePropList.ilk <> #propList>
  [  7] jmpifz [ 24] ............................ if pPagePropList.ilk <> #propList then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 158 ............................ <"Incorrect PagePropList">
  [ 14] pushsymb 24 ............................. <#selectPage>
  [ 16] pusharglist 3 ........................... <me, "Incorrect PagePropList", #selectPage>
  [ 18] extcall 44 .............................. <error(me, "Incorrect PagePropList", #selectPage)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Incorrect PagePropList", #selectPage)>
  [ 22] extcall 43 .............................. return error(me, "Incorrect PagePropList", #selectPage)
  [ 24] getparam 1 .............................. <tClickLine>
  [ 26] getprop 132 ............................. <pPagePropList>
  [ 28] getobjprop 156 .......................... <pPagePropList.count>
  [ 30] gt ...................................... <tClickLine > pPagePropList.count>
  [ 31] getparam 1 .............................. <tClickLine>
  [ 33] pushint8 1 .............................. <1>
  [ 35] lt ...................................... <tClickLine < 1>
  [ 36] or ...................................... <(tClickLine > pPagePropList.count) or (tClickLine < 1)>
  [ 37] jmpifz [ 54] ............................ if (tClickLine > pPagePropList.count) or (tClickLine < 1) then
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 159 ............................ <"Failed to select Catalogue page!!!">
  [ 44] pushsymb 24 ............................. <#selectPage>
  [ 46] pusharglist 3 ........................... <me, "Failed to select Catalogue page!!!", #selectPage>
  [ 48] extcall 44 .............................. <error(me, "Failed to select Catalogue page!!!", #selectPage)>
  [ 50] pusharglistnoret 1 ...................... <error(me, "Failed to select Catalogue page!!!", #selectPage)>
  [ 52] extcall 43 .............................. return error(me, "Failed to select Catalogue page!!!", #selectPage)
  [ 54] getprop 132 ............................. <pPagePropList>
  [ 56] getparam 1 .............................. <tClickLine>
  [ 58] pusharglist 2 ........................... <pPagePropList, tClickLine>
  [ 60] objcall 284 ............................. <pPagePropList.getPropAt(tClickLine)>
  [ 63] setlocal 0 .............................. tPageID = pPagePropList.getPropAt(tClickLine)
  [ 65] getprop 133 ............................. <pActivePageID>
  [ 67] pusharglist 1 ........................... <pActivePageID>
  [ 69] extcall 139 ............................. <voidp(pActivePageID)>
  [ 71] not ..................................... <not voidp(pActivePageID)>
  [ 72] jmpifz [ 99] ............................ if not voidp(pActivePageID) then
  [ 75] getlocal 0 .............................. <tPageID>
  [ 77] getprop 133 ............................. <pActivePageID>
  [ 79] eq ...................................... <tPageID = pActivePageID>
  [ 80] jmpifz [ 89] ............................ if tPageID = pActivePageID then
  [ 83] pushint8 1 .............................. <1>
  [ 85] pusharglistnoret 1 ...................... <1>
  [ 87] extcall 43 .............................. return 1
  [ 89] getprop 132 ............................. <pPagePropList>
  [ 91] getprop 133 ............................. <pActivePageID>
  [ 93] pusharglist 2 ........................... <pPagePropList, pActivePageID>
  [ 95] objcall 142 ............................. <pPagePropList.findPos(pActivePageID)>
  [ 97] setlocal 1 .............................. tLastSelectLine = pPagePropList.findPos(pActivePageID)
  [ 99] getparam 0 .............................. <me>
  [101] getparam 1 .............................. <tClickLine>
  [103] getlocal 1 .............................. <tLastSelectLine>
  [105] pusharglistnoret 3 ...................... <me, tClickLine, tLastSelectLine>
  [107] localcall 25 ............................ renderSelectPage(me, tClickLine, tLastSelectLine)
  [109] getlocal 0 .............................. <tPageID>
  [111] setprop 133 ............................. pActivePageID = tPageID
  [113] pushint8 1 .............................. <1>
  [115] setprop 45 .............................. pLoadingFlag = 1
  [117] getparam 0 .............................. <me>
  [119] pusharglist 1 ........................... <me>
  [121] objcall 121 ............................. <me.getComponent()>
  [123] getlocal 0 .............................. <tPageID>
  [125] pusharglist 2 ........................... <me.getComponent(), tPageID>
  [127] objcall 285 ............................. <me.getComponent().retrieveCataloguePage(tPageID)>
  [130] setlocal 2 .............................. tStatus = me.getComponent().retrieveCataloguePage(tPageID)
  [132] getlocal 2 .............................. <tStatus>
  [134] jmpifz [157] ............................ if tStatus then
  [137] getprop 41 .............................. <pLoaderObjID>
  [139] pusharglist 1 ........................... <pLoaderObjID>
  [141] extcall 70 .............................. <objectExists(pLoaderObjID)>
  [143] jmpifz [157] ............................ if objectExists(pLoaderObjID) then
  [146] getprop 41 .............................. <pLoaderObjID>
  [148] pusharglist 1 ........................... <pLoaderObjID>
  [150] extcall 75 .............................. <getObject(pLoaderObjID)>
  [152] pusharglistnoret 1 ...................... <getObject(pLoaderObjID)>
  [154] objcall 286 ............................. getObject(pLoaderObjID).showLoadingScreen()
  [157] ret
end

on changeProductOffset me, tDirection
  [  0] getprop 137 ............................. <pCurrentPageData>
  [  2] pushcons 82 ............................. <"productList">
  [  4] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [  6] objcall 82 .............................. <pCurrentPageData["productList"]>
  [  8] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [ 10] pusharglist 1 ........................... <pCurrentPageData["productList"].count>
  [ 12] extcall 139 ............................. <voidp(pCurrentPageData["productList"].count)>
  [ 14] jmpifz [ 21] ............................ if voidp(pCurrentPageData["productList"].count) then
  [ 17] pusharglistnoret 0 ...................... <>
  [ 19] extcall 43 .............................. return 
  [ 21] getprop 33 .............................. <pProductPerPage>
  [ 23] getprop 137 ............................. <pCurrentPageData>
  [ 25] pushcons 82 ............................. <"productList">
  [ 27] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [ 29] objcall 82 .............................. <pCurrentPageData["productList"]>
  [ 31] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [ 33] gteq .................................... <pProductPerPage >= pCurrentPageData["productList"].count>
  [ 34] jmpifz [ 41] ............................ if pProductPerPage >= pCurrentPageData["productList"].count then
  [ 37] pusharglistnoret 0 ...................... <>
  [ 39] extcall 43 .............................. return 
  [ 41] getparam 1 .............................. <tDirection>
  [ 43] pushint8 1 .............................. <1>
  [ 45] eq ...................................... <tDirection = 1>
  [ 46] jmpifz [ 78] ............................ if tDirection = 1 then / else
  [ 49] getprop 34 .............................. <pProductOffset>
  [ 51] getprop 33 .............................. <pProductPerPage>
  [ 53] add ..................................... <pProductOffset + pProductPerPage>
  [ 54] getprop 137 ............................. <pCurrentPageData>
  [ 56] pushcons 82 ............................. <"productList">
  [ 58] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [ 60] objcall 82 .............................. <pCurrentPageData["productList"]>
  [ 62] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [ 64] lt ...................................... <(pProductOffset + pProductPerPage) < pCurrentPageData["productList"].count>
  [ 65] jmpifz [ 75] ............................ if (pProductOffset + pProductPerPage) < pCurrentPageData["productList"].count then
  [ 68] getprop 34 .............................. <pProductOffset>
  [ 70] getprop 33 .............................. <pProductPerPage>
  [ 72] add ..................................... <pProductOffset + pProductPerPage>
  [ 73] setprop 34 .............................. pProductOffset = pProductOffset + pProductPerPage
  [ 75] jmp [ 95]
  [ 78] getprop 34 .............................. <pProductOffset>
  [ 80] getprop 33 .............................. <pProductPerPage>
  [ 82] sub ..................................... <pProductOffset - pProductPerPage>
  [ 83] setprop 34 .............................. pProductOffset = pProductOffset - pProductPerPage
  [ 85] getprop 34 .............................. <pProductOffset>
  [ 87] pushzero ................................ <0>
  [ 88] lt ...................................... <pProductOffset < 0>
  [ 89] jmpifz [ 95] ............................ if pProductOffset < 0 then
  [ 92] pushzero ................................ <0>
  [ 93] setprop 34 .............................. pProductOffset = 0
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglistnoret 1 ...................... <me>
  [ 99] localcall 22 ............................ ShowSmallIcons(me)
  [101] getparam 0 .............................. <me>
  [103] pusharglistnoret 1 ...................... <me>
  [105] localcall 20 ............................ showProductPageCounter(me)
  [107] ret
end

on changeLinkPage me, tDirection
  [  0] getprop 140 ............................. <pPageLinkList>
  [  2] pusharglist 1 ........................... <pPageLinkList>
  [  4] extcall 139 ............................. <voidp(pPageLinkList)>
  [  6] not ..................................... <not voidp(pPageLinkList)>
  [  7] jmpifz [134] ............................ if not voidp(pPageLinkList) then
  [ 10] getprop 137 ............................. <pCurrentPageData>
  [ 12] pushcons 62 ............................. <"id">
  [ 14] pusharglist 2 ........................... <pCurrentPageData, "id">
  [ 16] objcall 82 .............................. <pCurrentPageData["id"]>
  [ 18] setlocal 0 .............................. tid = pCurrentPageData["id"]
  [ 20] getprop 140 ............................. <pPageLinkList>
  [ 22] getlocal 0 .............................. <tid>
  [ 24] pusharglist 2 ........................... <pPageLinkList, tid>
  [ 26] objcall 142 ............................. <pPageLinkList.findPos(tid)>
  [ 28] setlocal 1 .............................. tPos = pPageLinkList.findPos(tid)
  [ 30] getlocal 1 .............................. <tPos>
  [ 32] pushzero ................................ <0>
  [ 33] gt ...................................... <tPos > 0>
  [ 34] jmpifz [134] ............................ if tPos > 0 then
  [ 37] getlocal 1 .............................. <tPos>
  [ 39] getparam 1 .............................. <tDirection>
  [ 41] add ..................................... <tPos + tDirection>
  [ 42] setlocal 2 .............................. tPageNum = tPos + tDirection
  [ 44] getlocal 2 .............................. <tPageNum>
  [ 46] pushint8 1 .............................. <1>
  [ 48] lt ...................................... <tPageNum < 1>
  [ 49] jmpifz [ 56] ............................ if tPageNum < 1 then
  [ 52] pushint8 1 .............................. <1>
  [ 54] setlocal 2 .............................. tPageNum = 1
  [ 56] getlocal 2 .............................. <tPageNum>
  [ 58] getprop 140 ............................. <pPageLinkList>
  [ 60] getobjprop 156 .......................... <pPageLinkList.count>
  [ 62] gt ...................................... <tPageNum > pPageLinkList.count>
  [ 63] jmpifz [ 72] ............................ if tPageNum > pPageLinkList.count then
  [ 66] getprop 140 ............................. <pPageLinkList>
  [ 68] getobjprop 156 .......................... <pPageLinkList.count>
  [ 70] setlocal 2 .............................. tPageNum = pPageLinkList.count
  [ 72] getlocal 1 .............................. <tPos>
  [ 74] getlocal 2 .............................. <tPageNum>
  [ 76] nteq .................................... <tPos <> tPageNum>
  [ 77] jmpifz [134] ............................ if tPos <> tPageNum then
  [ 80] getprop 140 ............................. <pPageLinkList>
  [ 82] getlocal 2 .............................. <tPageNum>
  [ 84] pusharglist 2 ........................... <pPageLinkList, tPageNum>
  [ 86] objcall 82 .............................. <pPageLinkList[tPageNum]>
  [ 88] setlocal 3 .............................. tPageID = pPageLinkList[tPageNum]
  [ 90] pushint8 1 .............................. <1>
  [ 92] setprop 45 .............................. pLoadingFlag = 1
  [ 94] getparam 0 .............................. <me>
  [ 96] pusharglist 1 ........................... <me>
  [ 98] objcall 121 ............................. <me.getComponent()>
  [100] getlocal 3 .............................. <tPageID>
  [102] pusharglist 2 ........................... <me.getComponent(), tPageID>
  [104] objcall 285 ............................. <me.getComponent().retrieveCataloguePage(tPageID)>
  [107] setlocal 4 .............................. tStatus = me.getComponent().retrieveCataloguePage(tPageID)
  [109] getlocal 4 .............................. <tStatus>
  [111] jmpifz [134] ............................ if tStatus then
  [114] getprop 41 .............................. <pLoaderObjID>
  [116] pusharglist 1 ........................... <pLoaderObjID>
  [118] extcall 70 .............................. <objectExists(pLoaderObjID)>
  [120] jmpifz [134] ............................ if objectExists(pLoaderObjID) then
  [123] getprop 41 .............................. <pLoaderObjID>
  [125] pusharglist 1 ........................... <pLoaderObjID>
  [127] extcall 75 .............................. <getObject(pLoaderObjID)>
  [129] pusharglistnoret 1 ...................... <getObject(pLoaderObjID)>
  [131] objcall 286 ............................. getObject(pLoaderObjID).showLoadingScreen()
  [134] ret
end

on selectProduct me, tOrderNum, tFeedFlag
  [  0] getprop 31 .............................. <pCatalogID>
  [  2] pusharglist 1 ........................... <pCatalogID>
  [  4] extcall 74 .............................. <windowExists(pCatalogID)>
  [  6] not ..................................... <not windowExists(pCatalogID)>
  [  7] jmpifz [ 24] ............................ if not windowExists(pCatalogID) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 122 ............................ <"Catalogue window not exists">
  [ 14] pushsymb 27 ............................. <#selectProduct>
  [ 16] pusharglist 3 ........................... <me, "Catalogue window not exists", #selectProduct>
  [ 18] extcall 44 .............................. <error(me, "Catalogue window not exists", #selectProduct)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Catalogue window not exists", #selectProduct)>
  [ 22] extcall 43 .............................. return error(me, "Catalogue window not exists", #selectProduct)
  [ 24] getprop 31 .............................. <pCatalogID>
  [ 26] pusharglist 1 ........................... <pCatalogID>
  [ 28] extcall 78 .............................. <getWindow(pCatalogID)>
  [ 30] setlocal 0 .............................. tWndObj = getWindow(pCatalogID)
  [ 32] getparam 1 .............................. <tOrderNum>
  [ 34] pusharglist 1 ........................... <tOrderNum>
  [ 36] extcall 290 ............................. <integerp(tOrderNum)>
  [ 39] not ..................................... <not integerp(tOrderNum)>
  [ 40] jmpifz [ 57] ............................ if not integerp(tOrderNum) then
  [ 43] getparam 0 .............................. <me>
  [ 45] pushcons 160 ............................ <"Incorrect value">
  [ 47] pushsymb 27 ............................. <#selectProduct>
  [ 49] pusharglist 3 ........................... <me, "Incorrect value", #selectProduct>
  [ 51] extcall 44 .............................. <error(me, "Incorrect value", #selectProduct)>
  [ 53] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #selectProduct)>
  [ 55] extcall 43 .............................. return error(me, "Incorrect value", #selectProduct)
  [ 57] getprop 137 ............................. <pCurrentPageData>
  [ 59] pushcons 82 ............................. <"productList">
  [ 61] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [ 63] objcall 82 .............................. <pCurrentPageData["productList"]>
  [ 65] pusharglist 1 ........................... <pCurrentPageData["productList"]>
  [ 67] extcall 139 ............................. <voidp(pCurrentPageData["productList"])>
  [ 69] jmpifz [ 77] ............................ if voidp(pCurrentPageData["productList"]) then
  [ 72] pushzero ................................ <0>
  [ 73] pusharglistnoret 1 ...................... <0>
  [ 75] extcall 43 .............................. return 0
  [ 77] getparam 1 .............................. <tOrderNum>
  [ 79] getprop 34 .............................. <pProductOffset>
  [ 81] add ..................................... <tOrderNum + pProductOffset>
  [ 82] setlocal 1 .............................. tProductNum = tOrderNum + pProductOffset
  [ 84] getlocal 1 .............................. <tProductNum>
  [ 86] getprop 151 ............................. <pLastProductNum>
  [ 88] eq ...................................... <tProductNum = pLastProductNum>
  [ 89] jmpifz [ 97] ............................ if tProductNum = pLastProductNum then
  [ 92] pushzero ................................ <0>
  [ 93] pusharglistnoret 1 ...................... <0>
  [ 95] extcall 43 .............................. return 0
  [ 97] getlocal 1 .............................. <tProductNum>
  [ 99] getprop 137 ............................. <pCurrentPageData>
  [101] pushcons 82 ............................. <"productList">
  [103] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [105] objcall 82 .............................. <pCurrentPageData["productList"]>
  [107] getobjprop 156 .......................... <pCurrentPageData["productList"].count>
  [109] gt ...................................... <tProductNum > pCurrentPageData["productList"].count>
  [110] jmpifz [118] ............................ if tProductNum > pCurrentPageData["productList"].count then
  [113] pushzero ................................ <0>
  [114] pusharglistnoret 1 ...................... <0>
  [116] extcall 43 .............................. return 0
  [118] getprop 137 ............................. <pCurrentPageData>
  [120] pushcons 82 ............................. <"productList">
  [122] pusharglist 2 ........................... <pCurrentPageData, "productList">
  [124] objcall 82 .............................. <pCurrentPageData["productList"]>
  [126] getlocal 1 .............................. <tProductNum>
  [128] pusharglist 2 ........................... <pCurrentPageData["productList"], tProductNum>
  [130] objcall 82 .............................. <pCurrentPageData["productList"][tProductNum]>
  [132] setprop 150 ............................. pSelectedProduct = pCurrentPageData["productList"][tProductNum]
  [134] getprop 150 ............................. <pSelectedProduct>
  [136] getobjprop 135 .......................... <pSelectedProduct.ilk>
  [138] pushsymb 136 ............................ <#propList>
  [140] nteq .................................... <pSelectedProduct.ilk <> #propList>
  [141] jmpifz [158] ............................ if pSelectedProduct.ilk <> #propList then
  [144] getparam 0 .............................. <me>
  [146] pushcons 161 ............................ <"Incorrect product data">
  [148] pushsymb 27 ............................. <#selectProduct>
  [150] pusharglist 3 ........................... <me, "Incorrect product data", #selectProduct>
  [152] extcall 44 .............................. <error(me, "Incorrect product data", #selectProduct)>
  [154] pusharglistnoret 1 ...................... <error(me, "Incorrect product data", #selectProduct)>
  [156] extcall 43 .............................. return error(me, "Incorrect product data", #selectProduct)
  [158] getparam 2 .............................. <tFeedFlag>
  [160] pusharglist 1 ........................... <tFeedFlag>
  [162] extcall 139 ............................. <voidp(tFeedFlag)>
  [164] jmpifz [170] ............................ if voidp(tFeedFlag) then
  [167] pushzero ................................ <0>
  [168] setparam 2 .............................. tFeedFlag = 0
  [170] getparam 2 .............................. <tFeedFlag>
  [172] not ..................................... <not tFeedFlag>
  [173] jmpifz [182] ............................ if not tFeedFlag then
  [176] pushint8 1 .............................. <1>
  [178] pusharglistnoret 1 ...................... <1>
  [180] extcall 43 .............................. return 1
  [182] getparam 0 .............................. <me>
  [184] getprop 150 ............................. <pSelectedProduct>
  [186] pusharglistnoret 2 ...................... <me, pSelectedProduct>
  [188] objcall 21 .............................. me.showPreviewImage(pSelectedProduct)
  [190] getprop 150 ............................. <pSelectedProduct>
  [192] pushcons 97 ............................. <"name">
  [194] pusharglist 2 ........................... <pSelectedProduct, "name">
  [196] objcall 82 .............................. <pSelectedProduct["name"]>
  [198] pusharglist 1 ........................... <pSelectedProduct["name"]>
  [200] extcall 139 ............................. <voidp(pSelectedProduct["name"])>
  [202] not ..................................... <not voidp(pSelectedProduct["name"])>
  [203] jmpifz [237] ............................ if not voidp(pSelectedProduct["name"]) then
  [206] getlocal 0 .............................. <tWndObj>
  [208] pushcons 162 ............................ <"ctlg_product_name">
  [210] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [212] objcall 106 ............................. <tWndObj.elementExists("ctlg_product_name")>
  [214] jmpifz [237] ............................ if tWndObj.elementExists("ctlg_product_name") then
  [217] getlocal 0 .............................. <tWndObj>
  [219] pushcons 162 ............................ <"ctlg_product_name">
  [221] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [223] objcall 97 .............................. <tWndObj.getElement("ctlg_product_name")>
  [225] getprop 150 ............................. <pSelectedProduct>
  [227] pushcons 97 ............................. <"name">
  [229] pusharglist 2 ........................... <pSelectedProduct, "name">
  [231] objcall 82 .............................. <pSelectedProduct["name"]>
  [233] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_product_name"), pSelectedProduct["name"]>
  [235] objcall 98 .............................. tWndObj.getElement("ctlg_product_name").setText(pSelectedProduct["name"])
  [237] getprop 150 ............................. <pSelectedProduct>
  [239] pushcons 99 ............................. <"description">
  [241] pusharglist 2 ........................... <pSelectedProduct, "description">
  [243] objcall 82 .............................. <pSelectedProduct["description"]>
  [245] pusharglist 1 ........................... <pSelectedProduct["description"]>
  [247] extcall 139 ............................. <voidp(pSelectedProduct["description"])>
  [249] not ..................................... <not voidp(pSelectedProduct["description"])>
  [250] jmpifz [284] ............................ if not voidp(pSelectedProduct["description"]) then
  [253] getlocal 0 .............................. <tWndObj>
  [255] pushcons 71 ............................. <"ctlg_description">
  [257] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [259] objcall 106 ............................. <tWndObj.elementExists("ctlg_description")>
  [261] jmpifz [284] ............................ if tWndObj.elementExists("ctlg_description") then
  [264] getlocal 0 .............................. <tWndObj>
  [266] pushcons 71 ............................. <"ctlg_description">
  [268] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [270] objcall 97 .............................. <tWndObj.getElement("ctlg_description")>
  [272] getprop 150 ............................. <pSelectedProduct>
  [274] pushcons 99 ............................. <"description">
  [276] pusharglist 2 ........................... <pSelectedProduct, "description">
  [278] objcall 82 .............................. <pSelectedProduct["description"]>
  [280] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_description"), pSelectedProduct["description"]>
  [282] objcall 98 .............................. tWndObj.getElement("ctlg_description").setText(pSelectedProduct["description"])
  [284] getlocal 0 .............................. <tWndObj>
  [286] pushcons 105 ............................ <"ctlg_price_box">
  [288] pusharglist 2 ........................... <tWndObj, "ctlg_price_box">
  [290] objcall 106 ............................. <tWndObj.elementExists("ctlg_price_box")>
  [292] jmpifz [311] ............................ if tWndObj.elementExists("ctlg_price_box") then
  [295] getlocal 0 .............................. <tWndObj>
  [297] pushcons 105 ............................ <"ctlg_price_box">
  [299] pusharglist 2 ........................... <tWndObj, "ctlg_price_box">
  [301] objcall 97 .............................. <tWndObj.getElement("ctlg_price_box")>
  [303] pushsymb 153 ............................ <#visible>
  [305] pushint8 1 .............................. <1>
  [307] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_price_box"), #visible, 1>
  [309] objcall 103 ............................. tWndObj.getElement("ctlg_price_box").setProperty(#visible, 1)
  [311] getprop 150 ............................. <pSelectedProduct>
  [313] pushcons 101 ............................ <"price">
  [315] pusharglist 2 ........................... <pSelectedProduct, "price">
  [317] objcall 82 .............................. <pSelectedProduct["price"]>
  [319] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [321] extcall 139 ............................. <voidp(pSelectedProduct["price"])>
  [323] not ..................................... <not voidp(pSelectedProduct["price"])>
  [324] jmpifz [411] ............................ if not voidp(pSelectedProduct["price"]) then
  [327] getlocal 0 .............................. <tWndObj>
  [329] pushcons 163 ............................ <"ctlg_price_1">
  [331] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [333] objcall 106 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [335] jmpifz [411] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [338] getprop 150 ............................. <pSelectedProduct>
  [340] pushcons 101 ............................ <"price">
  [342] pusharglist 2 ........................... <pSelectedProduct, "price">
  [344] objcall 82 .............................. <pSelectedProduct["price"]>
  [346] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [348] extcall 80 .............................. <value(pSelectedProduct["price"])>
  [350] pushint8 1 .............................. <1>
  [352] gt ...................................... <value(pSelectedProduct["price"]) > 1>
  [353] jmpifz [378] ............................ if value(pSelectedProduct["price"]) > 1 then / else
  [356] getprop 150 ............................. <pSelectedProduct>
  [358] pushcons 101 ............................ <"price">
  [360] pusharglist 2 ........................... <pSelectedProduct, "price">
  [362] objcall 82 .............................. <pSelectedProduct["price"]>
  [364] pushcons 103 ............................ <"credits">
  [366] pushcons 103 ............................ <"credits">
  [368] pusharglist 2 ........................... <"credits", "credits">
  [370] extcall 39 .............................. <getText("credits", "credits")>
  [372] joinpadstr .............................. <pSelectedProduct["price"] && getText("credits", "credits")>
  [373] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credits", "credits")
  [375] jmp [397]
  [378] getprop 150 ............................. <pSelectedProduct>
  [380] pushcons 101 ............................ <"price">
  [382] pusharglist 2 ........................... <pSelectedProduct, "price">
  [384] objcall 82 .............................. <pSelectedProduct["price"]>
  [386] pushcons 104 ............................ <"credit">
  [388] pushcons 104 ............................ <"credit">
  [390] pusharglist 2 ........................... <"credit", "credit">
  [392] extcall 39 .............................. <getText("credit", "credit")>
  [394] joinpadstr .............................. <pSelectedProduct["price"] && getText("credit", "credit")>
  [395] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credit", "credit")
  [397] getlocal 0 .............................. <tWndObj>
  [399] pushcons 163 ............................ <"ctlg_price_1">
  [401] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [403] objcall 97 .............................. <tWndObj.getElement("ctlg_price_1")>
  [405] getlocal 2 .............................. <tText>
  [407] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [409] objcall 98 .............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [411] getlocal 0 .............................. <tWndObj>
  [413] pushcons 72 ............................. <"ctlg_buy_button">
  [415] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [417] objcall 106 ............................. <tWndObj.elementExists("ctlg_buy_button")>
  [419] jmpifz [438] ............................ if tWndObj.elementExists("ctlg_buy_button") then
  [422] getlocal 0 .............................. <tWndObj>
  [424] pushcons 72 ............................. <"ctlg_buy_button">
  [426] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [428] objcall 97 .............................. <tWndObj.getElement("ctlg_buy_button")>
  [430] pushsymb 153 ............................ <#visible>
  [432] pushint8 1 .............................. <1>
  [434] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_button"), #visible, 1>
  [436] objcall 103 ............................. tWndObj.getElement("ctlg_buy_button").setProperty(#visible, 1)
  [438] getparam 0 .............................. <me>
  [440] pushsymb 214 ............................ <#hilite>
  [442] getlocal 1 .............................. <tProductNum>
  [444] pusharglistnoret 3 ...................... <me, #hilite, tProductNum>
  [446] localcall 22 ............................ ShowSmallIcons(me, #hilite, tProductNum)
  [448] getparam 0 .............................. <me>
  [450] pushsymb 215 ............................ <#unhilite>
  [452] getprop 151 ............................. <pLastProductNum>
  [454] pusharglistnoret 3 ...................... <me, #unhilite, pLastProductNum>
  [456] localcall 22 ............................ ShowSmallIcons(me, #unhilite, pLastProductNum)
  [458] getparam 0 .............................. <me>
  [460] pusharglistnoret 1 ...................... <me>
  [462] objcall 17 .............................. me.hideSpecialText()
  [464] getprop 150 ............................. <pSelectedProduct>
  [466] pushcons 164 ............................ <"specialText">
  [468] pusharglist 2 ........................... <pSelectedProduct, "specialText">
  [470] objcall 82 .............................. <pSelectedProduct["specialText"]>
  [472] pusharglist 1 ........................... <pSelectedProduct["specialText"]>
  [474] extcall 139 ............................. <voidp(pSelectedProduct["specialText"])>
  [476] not ..................................... <not voidp(pSelectedProduct["specialText"])>
  [477] jmpifz [494] ............................ if not voidp(pSelectedProduct["specialText"]) then
  [480] getparam 0 .............................. <me>
  [482] getprop 150 ............................. <pSelectedProduct>
  [484] pushcons 164 ............................ <"specialText">
  [486] pusharglist 2 ........................... <pSelectedProduct, "specialText">
  [488] objcall 82 .............................. <pSelectedProduct["specialText"]>
  [490] pusharglistnoret 2 ...................... <me, pSelectedProduct["specialText"]>
  [492] objcall 16 .............................. me.showSpecialText(pSelectedProduct["specialText"])
  [494] getlocal 1 .............................. <tProductNum>
  [496] setprop 151 ............................. pLastProductNum = tProductNum
  [498] pushint8 1 .............................. <1>
  [500] pusharglistnoret 1 ...................... <1>
  [502] extcall 43 .............................. return 1
  [504] ret
end

on eventProcCatalogue me, tEvent, tSprID, tParam
  [  0] getparam 2 .............................. <tSprID>
  [  2] pushcons 50 ............................. <"close">
  [  4] nteq .................................... <tSprID <> "close">
  [  5] getprop 45 .............................. <pLoadingFlag>
  [  7] and ..................................... <(tSprID <> "close") and pLoadingFlag>
  [  8] jmpifz [ 16] ............................ if (tSprID <> "close") and pLoadingFlag then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 43 .............................. return 0
  [ 16] pushzero ................................ <0>
  [ 17] setlocal 0 .............................. tClassEventFlag = 0
  [ 19] getprop 40 .............................. <pPageProgramID>
  [ 21] pusharglist 1 ........................... <pPageProgramID>
  [ 23] extcall 70 .............................. <objectExists(pPageProgramID)>
  [ 25] jmpifz [ 63] ............................ if objectExists(pPageProgramID) then
  [ 28] getprop 40 .............................. <pPageProgramID>
  [ 30] pusharglist 1 ........................... <pPageProgramID>
  [ 32] extcall 75 .............................. <getObject(pPageProgramID)>
  [ 34] pushsymb 293 ............................ <#eventProc>
  [ 37] pusharglist 2 ........................... <getObject(pPageProgramID), #eventProc>
  [ 39] objcall 161 ............................. <getObject(pPageProgramID).handler(#eventProc)>
  [ 41] jmpifz [ 63] ............................ if getObject(pPageProgramID).handler(#eventProc) then
  [ 44] getprop 40 .............................. <pPageProgramID>
  [ 46] pusharglist 1 ........................... <pPageProgramID>
  [ 48] extcall 75 .............................. <getObject(pPageProgramID)>
  [ 50] getparam 1 .............................. <tEvent>
  [ 52] getparam 2 .............................. <tSprID>
  [ 54] getparam 3 .............................. <tParam>
  [ 56] pusharglist 4 ........................... <getObject(pPageProgramID), tEvent, tSprID, tParam>
  [ 58] objcall 293 ............................. <getObject(pPageProgramID).eventProc(tEvent, tSprID, tParam)>
  [ 61] setlocal 0 .............................. tClassEventFlag = getObject(pPageProgramID).eventProc(tEvent, tSprID, tParam)
  [ 63] getlocal 0 .............................. <tClassEventFlag>
  [ 65] jmpifz [ 73] ............................ if tClassEventFlag then
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 43 .............................. return 0
  [ 73] getparam 1 .............................. <tEvent>
  [ 75] pushsymb 100 ............................ <#mouseUp>
  [ 77] eq ...................................... <tEvent = #mouseUp>
  [ 78] jmpifz [ 95] ............................ if tEvent = #mouseUp then
  [ 81] getparam 2 .............................. <tSprID>
  [ 83] pushcons 50 ............................. <"close">
  [ 85] eq ...................................... <tSprID = "close">
  [ 86] jmpifz [ 95] ............................ if tSprID = "close" then
  [ 89] getparam 0 .............................. <me>
  [ 91] pusharglistnoret 1 ...................... <me>
  [ 93] objcall 4 ............................... me.hideCatalogue()
  [ 95] getparam 1 .............................. <tEvent>
  [ 97] pushsymb 147 ............................ <#mouseDown>
  [ 99] eq ...................................... <tEvent = #mouseDown>
  [100] jmpifz [414] ............................ if tEvent = #mouseDown then
  [103] getparam 2 .............................. <tSprID>
  [105] pushcons 150 ............................ <"ctlg_pages">
  [107] eq ...................................... <tSprID = "ctlg_pages">
  [108] jmpifz [177] ............................ if tSprID = "ctlg_pages" then / else
  [111] getprop 132 ............................. <pPagePropList>
  [113] getobjprop 135 .......................... <pPagePropList.ilk>
  [115] pushsymb 136 ............................ <#propList>
  [117] nteq .................................... <pPagePropList.ilk <> #propList>
  [118] jmpifz [125] ............................ if pPagePropList.ilk <> #propList then
  [121] pusharglistnoret 0 ...................... <>
  [123] extcall 43 .............................. return 
  [125] getparam 3 .............................. <tParam>
  [127] pushsymb 294 ............................ <#point>
  [130] pusharglist 2 ........................... <tParam, #point>
  [132] extcall 135 ............................. <ilk(tParam, #point)>
  [134] not ..................................... <not ilk(tParam, #point)>
  [135] getprop 132 ............................. <pPagePropList>
  [137] getobjprop 156 .......................... <pPagePropList.count>
  [139] pushzero ................................ <0>
  [140] eq ...................................... <pPagePropList.count = 0>
  [141] or ...................................... <not ilk(tParam, #point) or (pPagePropList.count = 0)>
  [142] jmpifz [149] ............................ if not ilk(tParam, #point) or (pPagePropList.count = 0) then
  [145] pusharglistnoret 0 ...................... <>
  [147] extcall 43 .............................. return 
  [149] getparam 3 .............................. <tParam>
  [151] getobjprop 295 .......................... <tParam.locV>
  [154] getprop 32 .............................. <pPageLineHeight>
  [156] div ..................................... <tParam.locV / pPageLineHeight>
  [157] pusharglist 1 ........................... <tParam.locV / pPageLineHeight>
  [159] extcall 79 .............................. <integer(tParam.locV / pPageLineHeight)>
  [161] pushint8 1 .............................. <1>
  [163] add ..................................... <integer(tParam.locV / pPageLineHeight) + 1>
  [164] setlocal 1 .............................. tClickLine = integer(tParam.locV / pPageLineHeight) + 1
  [166] getparam 0 .............................. <me>
  [168] getlocal 1 .............................. <tClickLine>
  [170] pusharglistnoret 2 ...................... <me, tClickLine>
  [172] localcall 26 ............................ selectPage(me, tClickLine)
  [174] jmp [414]
  [177] getparam 2 .............................. <tSprID>
  [179] pushcons 116 ............................ <"ctlg_next_button">
  [181] eq ...................................... <tSprID = "ctlg_next_button">
  [182] jmpifz [196] ............................ if tSprID = "ctlg_next_button" then / else
  [185] getparam 0 .............................. <me>
  [187] pushint8 1 .............................. <1>
  [189] pusharglistnoret 2 ...................... <me, 1>
  [191] objcall 25 .............................. me.changeProductOffset(1)
  [193] jmp [414]
  [196] getparam 2 .............................. <tSprID>
  [198] pushcons 117 ............................ <"ctlg_prev_button">
  [200] eq ...................................... <tSprID = "ctlg_prev_button">
  [201] jmpifz [216] ............................ if tSprID = "ctlg_prev_button" then / else
  [204] getparam 0 .............................. <me>
  [206] pushint8 1 .............................. <1>
  [208] inv ..................................... <-1>
  [209] pusharglistnoret 2 ...................... <me, -1>
  [211] objcall 25 .............................. me.changeProductOffset(-1)
  [213] jmp [414]
  [216] getparam 2 .............................. <tSprID>
  [218] pushcons 106 ............................ <"ctlg_nextpage_button">
  [220] eq ...................................... <tSprID = "ctlg_nextpage_button">
  [221] jmpifz [235] ............................ if tSprID = "ctlg_nextpage_button" then / else
  [224] getparam 0 .............................. <me>
  [226] pushint8 1 .............................. <1>
  [228] pusharglistnoret 2 ...................... <me, 1>
  [230] objcall 26 .............................. me.changeLinkPage(1)
  [232] jmp [414]
  [235] getparam 2 .............................. <tSprID>
  [237] pushcons 107 ............................ <"ctlg_prevpage_button">
  [239] eq ...................................... <tSprID = "ctlg_prevpage_button">
  [240] jmpifz [255] ............................ if tSprID = "ctlg_prevpage_button" then / else
  [243] getparam 0 .............................. <me>
  [245] pushint8 1 .............................. <1>
  [247] inv ..................................... <-1>
  [248] pusharglistnoret 2 ...................... <me, -1>
  [250] objcall 26 .............................. me.changeLinkPage(-1)
  [252] jmp [414]
  [255] getparam 2 .............................. <tSprID>
  [257] pushcons 67 ............................. <"ctlg_small_img_">
  [259] containsstr ............................. <tSprID contains "ctlg_small_img_">
  [260] jmpifz [310] ............................ if tSprID contains "ctlg_small_img_" then / else
  [263] getmovieprop 157 ........................ <the itemDelimiter>
  [265] setlocal 2 .............................. tItemDeLimiter = the itemDelimiter
  [267] pushcons 84 ............................. <"_">
  [269] setmovieprop 157 ........................ the itemDelimiter = "_"
  [271] getparam 2 .............................. <tSprID>
  [273] pushsymb 158 ............................ <#item>
  [275] getparam 2 .............................. <tSprID>
  [277] pushsymb 158 ............................ <#item>
  [279] pusharglist 2 ........................... <tSprID, #item>
  [281] objcall 156 ............................. <tSprID.item.count>
  [283] pusharglist 3 ........................... <tSprID, #item, tSprID.item.count>
  [285] objcall 159 ............................. <tSprID.item[tSprID.item.count]>
  [287] pusharglist 1 ........................... <tSprID.item[tSprID.item.count]>
  [289] extcall 79 .............................. <integer(tSprID.item[tSprID.item.count])>
  [291] setlocal 3 .............................. tProductOrderNum = integer(tSprID.item[tSprID.item.count])
  [293] getlocal 2 .............................. <tItemDeLimiter>
  [295] setmovieprop 157 ........................ the itemDelimiter = tItemDeLimiter
  [297] getparam 0 .............................. <me>
  [299] getlocal 3 .............................. <tProductOrderNum>
  [301] pushint8 1 .............................. <1>
  [303] pusharglistnoret 3 ...................... <me, tProductOrderNum, 1>
  [305] localcall 29 ............................ selectProduct(me, tProductOrderNum, 1)
  [307] jmp [414]
  [310] getparam 2 .............................. <tSprID>
  [312] pushcons 72 ............................. <"ctlg_buy_button">
  [314] eq ...................................... <tSprID = "ctlg_buy_button">
  [315] jmpifz [339] ............................ if tSprID = "ctlg_buy_button" then / else
  [318] pushsymb 296 ............................ <#catalogue>
  [321] pusharglist 1 ........................... <#catalogue>
  [323] extcall 120 ............................. <getThread(#catalogue)>
  [325] pusharglist 1 ........................... <getThread(#catalogue)>
  [327] objcall 121 ............................. <getThread(#catalogue).getComponent()>
  [329] getprop 150 ............................. <pSelectedProduct>
  [331] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pSelectedProduct>
  [333] objcall 297 ............................. getThread(#catalogue).getComponent().checkProductOrder(pSelectedProduct)
  [336] jmp [414]
  [339] getparam 2 .............................. <tSprID>
  [341] pushcons 96 ............................. <"ctlg_buy_">
  [343] containsstr ............................. <tSprID contains "ctlg_buy_">
  [344] jmpifz [414] ............................ if tSprID contains "ctlg_buy_" then / else
  [347] getmovieprop 157 ........................ <the itemDelimiter>
  [349] setlocal 2 .............................. tItemDeLimiter = the itemDelimiter
  [351] pushcons 84 ............................. <"_">
  [353] setmovieprop 157 ........................ the itemDelimiter = "_"
  [355] getparam 2 .............................. <tSprID>
  [357] pushsymb 158 ............................ <#item>
  [359] getparam 2 .............................. <tSprID>
  [361] pushsymb 158 ............................ <#item>
  [363] pusharglist 2 ........................... <tSprID, #item>
  [365] objcall 156 ............................. <tSprID.item.count>
  [367] pusharglist 3 ........................... <tSprID, #item, tSprID.item.count>
  [369] objcall 159 ............................. <tSprID.item[tSprID.item.count]>
  [371] pusharglist 1 ........................... <tSprID.item[tSprID.item.count]>
  [373] extcall 79 .............................. <integer(tSprID.item[tSprID.item.count])>
  [375] setlocal 3 .............................. tProductOrderNum = integer(tSprID.item[tSprID.item.count])
  [377] getlocal 2 .............................. <tItemDeLimiter>
  [379] setmovieprop 157 ........................ the itemDelimiter = tItemDeLimiter
  [381] getparam 0 .............................. <me>
  [383] getlocal 3 .............................. <tProductOrderNum>
  [385] pushzero ................................ <0>
  [386] pusharglist 3 ........................... <me, tProductOrderNum, 0>
  [388] objcall 27 .............................. <me.selectProduct(tProductOrderNum, 0)>
  [390] jmpifz [411] ............................ if me.selectProduct(tProductOrderNum, 0) then
  [393] pushsymb 296 ............................ <#catalogue>
  [396] pusharglist 1 ........................... <#catalogue>
  [398] extcall 120 ............................. <getThread(#catalogue)>
  [400] pusharglist 1 ........................... <getThread(#catalogue)>
  [402] objcall 121 ............................. <getThread(#catalogue).getComponent()>
  [404] getprop 150 ............................. <pSelectedProduct>
  [406] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pSelectedProduct>
  [408] objcall 297 ............................. getThread(#catalogue).getComponent().checkProductOrder(pSelectedProduct)
  [411] jmp [414]
  [414] ret
end

on eventProcInfoWnd me, tEvent, tSprID, tParam, tWndID
  [  0] getparam 2 .............................. <tSprID>
  [  2] peek 0 .................................. case tSprID of
  [  4] pushcons 165 ............................ <"habbo_decision_ok">
  [  6] nteq
  [  7] jmpifz [ 26] ............................ (case) "habbo_decision_ok", ...
  [ 10] peek 0
  [ 12] pushcons 51 ............................. <"habbo_message_ok">
  [ 14] nteq
  [ 15] jmpifz [ 26] ............................ (case) ..., "habbo_message_ok", ...
  [ 18] peek 0
  [ 20] pushcons 166 ............................ <"button_ok">
  [ 22] eq
  [ 23] jmpifz [227] ............................ (case) ..., "button_ok":
  [ 26] getprop 87 .............................. <pActiveOrderCode>
  [ 28] pushcons 28 ............................. <EMPTY>
  [ 30] eq ...................................... <pActiveOrderCode = EMPTY>
  [ 31] jmpifz [ 48] ............................ if pActiveOrderCode = EMPTY then
  [ 34] getprop 37 .............................. <pInfoWindowID>
  [ 36] pusharglistnoret 1 ...................... <pInfoWindowID>
  [ 38] extcall 77 .............................. removeWindow(pInfoWindowID)
  [ 40] pop 1
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglistnoret 1 ...................... <1>
  [ 46] extcall 43 .............................. return 1
  [ 48] getprop 37 .............................. <pInfoWindowID>
  [ 50] pusharglist 1 ........................... <pInfoWindowID>
  [ 52] extcall 78 .............................. <getWindow(pInfoWindowID)>
  [ 54] setlocal 0 .............................. tWndObj = getWindow(pInfoWindowID)
  [ 56] pusharglist 0 ........................... <[:]>
  [ 58] pushproplist ............................ <[:]>
  [ 59] setlocal 1 .............................. tGiftProps = [:]
  [ 61] getlocal 0 .............................. <tWndObj>
  [ 63] pushcons 167 ............................ <"shopping_gift_target">
  [ 65] pusharglist 2 ........................... <tWndObj, "shopping_gift_target">
  [ 67] objcall 106 ............................. <tWndObj.elementExists("shopping_gift_target")>
  [ 69] jmpifz [172] ............................ if tWndObj.elementExists("shopping_gift_target") then / else
  [ 72] getlocal 1 .............................. <tGiftProps>
  [ 74] pushcons 168 ............................ <"gift">
  [ 76] pushint8 1 .............................. <1>
  [ 78] pusharglistnoret 3 ...................... <tGiftProps, "gift", 1>
  [ 80] objcall 236 ............................. tGiftProps["gift"] = 1
  [ 82] getlocal 1 .............................. <tGiftProps>
  [ 84] pushcons 169 ............................ <"gift_receiver">
  [ 86] getlocal 0 .............................. <tWndObj>
  [ 88] pushcons 167 ............................ <"shopping_gift_target">
  [ 90] pusharglist 2 ........................... <tWndObj, "shopping_gift_target">
  [ 92] objcall 97 .............................. <tWndObj.getElement("shopping_gift_target")>
  [ 94] pusharglist 1 ........................... <tWndObj.getElement("shopping_gift_target")>
  [ 96] objcall 39 .............................. <tWndObj.getElement("shopping_gift_target").getText()>
  [ 98] pusharglistnoret 3 ...................... <tGiftProps, "gift_receiver", tWndObj.getElement("shopping_gift_target").getText()>
  [100] objcall 236 ............................. tGiftProps["gift_receiver"] = tWndObj.getElement("shopping_gift_target").getText()
  [102] getlocal 1 .............................. <tGiftProps>
  [104] pushcons 170 ............................ <"gift_msg">
  [106] getlocal 0 .............................. <tWndObj>
  [108] pushcons 171 ............................ <"shopping_greeting_field">
  [110] pusharglist 2 ........................... <tWndObj, "shopping_greeting_field">
  [112] objcall 97 .............................. <tWndObj.getElement("shopping_greeting_field")>
  [114] pusharglist 1 ........................... <tWndObj.getElement("shopping_greeting_field")>
  [116] objcall 39 .............................. <tWndObj.getElement("shopping_greeting_field").getText()>
  [118] pusharglistnoret 3 ...................... <tGiftProps, "gift_msg", tWndObj.getElement("shopping_greeting_field").getText()>
  [120] objcall 236 ............................. tGiftProps["gift_msg"] = tWndObj.getElement("shopping_greeting_field").getText()
  [122] getlocal 1 .............................. <tGiftProps>
  [124] pushcons 170 ............................ <"gift_msg">
  [126] pusharglist 2 ........................... <tGiftProps, "gift_msg">
  [128] objcall 82 .............................. <tGiftProps["gift_msg"]>
  [130] getobjprop 193 .......................... <tGiftProps["gift_msg"].length>
  [132] pushint16 150 ........................... <150>
  [135] gt ...................................... <tGiftProps["gift_msg"].length > 150>
  [136] jmpifz [139] ............................ if tGiftProps["gift_msg"].length > 150 then
  [139] getlocal 1 .............................. <tGiftProps>
  [141] pushcons 169 ............................ <"gift_receiver">
  [143] pusharglist 2 ........................... <tGiftProps, "gift_receiver">
  [145] objcall 82 .............................. <tGiftProps["gift_receiver"]>
  [147] pushcons 28 ............................. <EMPTY>
  [149] eq ...................................... <tGiftProps["gift_receiver"] = EMPTY>
  [150] jmpifz [169] ............................ if tGiftProps["gift_receiver"] = EMPTY then
  [153] pop 1
  [155] getparam 0 .............................. <me>
  [157] pushcons 172 ............................ <"User name missing!">
  [159] pushsymb 29 ............................. <#eventProcInfoWnd>
  [161] pusharglist 3 ........................... <me, "User name missing!", #eventProcInfoWnd>
  [163] extcall 44 .............................. <error(me, "User name missing!", #eventProcInfoWnd)>
  [165] pusharglistnoret 1 ...................... <error(me, "User name missing!", #eventProcInfoWnd)>
  [167] extcall 43 .............................. return error(me, "User name missing!", #eventProcInfoWnd)
  [169] jmp [201]
  [172] getlocal 1 .............................. <tGiftProps>
  [174] pushcons 168 ............................ <"gift">
  [176] pushzero ................................ <0>
  [177] pusharglistnoret 3 ...................... <tGiftProps, "gift", 0>
  [179] objcall 236 ............................. tGiftProps["gift"] = 0
  [181] getlocal 1 .............................. <tGiftProps>
  [183] pushcons 169 ............................ <"gift_receiver">
  [185] pushcons 28 ............................. <EMPTY>
  [187] pusharglistnoret 3 ...................... <tGiftProps, "gift_receiver", EMPTY>
  [189] objcall 236 ............................. tGiftProps["gift_receiver"] = EMPTY
  [191] getlocal 1 .............................. <tGiftProps>
  [193] pushcons 170 ............................ <"gift_msg">
  [195] pushcons 28 ............................. <EMPTY>
  [197] pusharglistnoret 3 ...................... <tGiftProps, "gift_msg", EMPTY>
  [199] objcall 236 ............................. tGiftProps["gift_msg"] = EMPTY
  [201] getparam 0 .............................. <me>
  [203] pusharglist 1 ........................... <me>
  [205] objcall 121 ............................. <me.getComponent()>
  [207] getlocal 1 .............................. <tGiftProps>
  [209] pusharglistnoret 2 ...................... <me.getComponent(), tGiftProps>
  [211] objcall 304 ............................. me.getComponent().purchaseProduct(tGiftProps)
  [214] getparam 0 .............................. <me>
  [216] pusharglistnoret 1 ...................... <me>
  [218] objcall 7 ............................... me.hideOrderInfo()
  [220] pushcons 28 ............................. <EMPTY>
  [222] setprop 87 .............................. pActiveOrderCode = EMPTY
  [224] jmp [486]
  [227] peek 0
  [229] pushcons 173 ............................ <"habbo_decision_cancel">
  [231] nteq
  [232] jmpifz [251] ............................ (case) "habbo_decision_cancel", ...
  [235] peek 0
  [237] pushcons 48 ............................. <"button_cancel">
  [239] nteq
  [240] jmpifz [251] ............................ (case) ..., "button_cancel", ...
  [243] peek 0
  [245] pushcons 50 ............................. <"close">
  [247] eq
  [248] jmpifz [264] ............................ (case) ..., "close":
  [251] getparam 0 .............................. <me>
  [253] pusharglistnoret 1 ...................... <me>
  [255] objcall 7 ............................... me.hideOrderInfo()
  [257] pushcons 28 ............................. <EMPTY>
  [259] setprop 87 .............................. pActiveOrderCode = EMPTY
  [261] jmp [486]
  [264] peek 0
  [266] pushcons 37 ............................. <"buy_gift_ok">
  [268] eq
  [269] jmpifz [310] ............................ (case) "buy_gift_ok":
  [272] getparam 4 .............................. <tWndID>
  [274] pusharglist 1 ........................... <tWndID>
  [276] extcall 78 .............................. <getWindow(tWndID)>
  [278] getparam 2 .............................. <tSprID>
  [280] pusharglist 2 ........................... <getWindow(tWndID), tSprID>
  [282] objcall 97 .............................. <getWindow(tWndID).getElement(tSprID)>
  [284] pushsymb 107 ............................ <#blend>
  [286] pusharglist 2 ........................... <getWindow(tWndID).getElement(tSprID), #blend>
  [288] objcall 174 ............................. <getWindow(tWndID).getElement(tSprID).getProperty(#blend)>
  [290] pushint8 100 ............................ <100>
  [292] eq ...................................... <getWindow(tWndID).getElement(tSprID).getProperty(#blend) = 100>
  [293] jmpifz [307] ............................ if getWindow(tWndID).getElement(tSprID).getProperty(#blend) = 100 then / else
  [296] getparam 0 .............................. <me>
  [298] pushint8 1 .............................. <1>
  [300] pusharglistnoret 2 ...................... <me, 1>
  [302] objcall 11 .............................. me.showBuyAsGift(1)
  [304] jmp [307]
  [307] jmp [486]
  [310] peek 0
  [312] pushcons 174 ............................ <"buy_gift_cancel">
  [314] eq
  [315] jmpifz [328] ............................ (case) "buy_gift_cancel":
  [318] getparam 0 .............................. <me>
  [320] pushzero ................................ <0>
  [321] pusharglistnoret 2 ...................... <me, 0>
  [323] objcall 11 .............................. me.showBuyAsGift(0)
  [325] jmp [486]
  [328] peek 0
  [330] pushcons 175 ............................ <"nobalance_ok">
  [332] eq
  [333] jmpifz [391] ............................ (case) "nobalance_ok":
  [336] pushcons 176 ............................ <"url_nobalance">
  [338] pusharglist 1 ........................... <"url_nobalance">
  [340] extcall 154 ............................. <textExists("url_nobalance")>
  [342] not ..................................... <not textExists("url_nobalance")>
  [343] jmpifz [353] ............................ if not textExists("url_nobalance") then
  [346] pop 1
  [348] pushzero ................................ <0>
  [349] pusharglistnoret 1 ...................... <0>
  [351] extcall 43 .............................. return 0
  [353] pushsymb 83 ............................. <#session>
  [355] pusharglist 1 ........................... <#session>
  [357] extcall 75 .............................. <getObject(#session)>
  [359] setlocal 2 .............................. tSession = getObject(#session)
  [361] pushcons 176 ............................ <"url_nobalance">
  [363] pusharglist 1 ........................... <"url_nobalance">
  [365] extcall 39 .............................. <getText("url_nobalance")>
  [367] setlocal 3 .............................. tURL = getText("url_nobalance")
  [369] getlocal 3 .............................. <tURL>
  [371] pushcons 177 ............................ <"_new">
  [373] pusharglistnoret 2 ...................... <tURL, "_new">
  [375] extcall 308 ............................. openNetPage(tURL, "_new")
  [378] getparam 0 .............................. <me>
  [380] pusharglistnoret 1 ...................... <me>
  [382] objcall 7 ............................... me.hideOrderInfo()
  [384] pushcons 28 ............................. <EMPTY>
  [386] setprop 87 .............................. pActiveOrderCode = EMPTY
  [388] jmp [486]
  [391] peek 0
  [393] pushcons 178 ............................ <"subscribe">
  [395] eq
  [396] jmpifz [486] ............................ (case) "subscribe":
  [399] pushsymb 83 ............................. <#session>
  [401] pusharglist 1 ........................... <#session>
  [403] extcall 75 .............................. <getObject(#session)>
  [405] setlocal 2 .............................. tSession = getObject(#session)
  [407] getlocal 2 .............................. <tSession>
  [409] pushsymb 306 ............................ <#userName>
  [412] pusharglist 2 ........................... <tSession, #userName>
  [414] objcall 84 .............................. <tSession.get(#userName)>
  [416] setlocal 4 .............................. tOwnName = tSession.get(#userName)
  [418] pushcons 179 ............................ <"url_subscribe">
  [420] pusharglist 1 ........................... <"url_subscribe">
  [422] extcall 39 .............................. <getText("url_subscribe")>
  [424] setlocal 3 .............................. tURL = getText("url_subscribe")
  [426] getlocal 3 .............................. <tURL>
  [428] getlocal 4 .............................. <tOwnName>
  [430] pusharglist 1 ........................... <tOwnName>
  [432] extcall 305 ............................. <urlEncode(tOwnName)>
  [435] joinstr ................................. <tURL & urlEncode(tOwnName)>
  [436] setlocal 3 .............................. tURL = tURL & urlEncode(tOwnName)
  [438] getlocal 2 .............................. <tSession>
  [440] pushcons 180 ............................ <"user_checksum">
  [442] pusharglist 2 ........................... <tSession, "user_checksum">
  [444] objcall 307 ............................. <tSession.exists("user_checksum")>
  [447] jmpifz [471] ............................ if tSession.exists("user_checksum") then
  [450] getlocal 3 .............................. <tURL>
  [452] pushcons 181 ............................ <"&sum=">
  [454] joinstr ................................. <tURL & "&sum=">
  [455] getlocal 2 .............................. <tSession>
  [457] pushcons 180 ............................ <"user_checksum">
  [459] pusharglist 2 ........................... <tSession, "user_checksum">
  [461] objcall 84 .............................. <tSession.get("user_checksum")>
  [463] pusharglist 1 ........................... <tSession.get("user_checksum")>
  [465] extcall 305 ............................. <urlEncode(tSession.get("user_checksum"))>
  [468] joinstr ................................. <tURL & "&sum=" & urlEncode(tSession.get("user_checksum"))>
  [469] setlocal 3 .............................. tURL = tURL & "&sum=" & urlEncode(tSession.get("user_checksum"))
  [471] getlocal 3 .............................. <tURL>
  [473] pushcons 177 ............................ <"_new">
  [475] pusharglistnoret 2 ...................... <tURL, "_new">
  [477] extcall 308 ............................. openNetPage(tURL, "_new")
  [480] getparam 0 .............................. <me>
  [482] pusharglistnoret 1 ...................... <me>
  [484] objcall 7 ............................... me.hideOrderInfo()
  [486] pop 1 ................................... end case
  [488] pushint8 1 .............................. <1>
  [490] pusharglistnoret 1 ...................... <1>
  [492] extcall 43 .............................. return 1
  [494] ret
end

on eventProcKeyDown me, tEvent, tSprID, tParam
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 314 .......................... <the key>
  [  5] pushcons 182 ............................ <TAB>
  [  7] eq ...................................... <the key = TAB>
  [  8] jmpifz [104] ............................ if the key = TAB then / else
  [ 11] getprop 37 .............................. <pInfoWindowID>
  [ 13] pusharglist 1 ........................... <pInfoWindowID>
  [ 15] extcall 74 .............................. <windowExists(pInfoWindowID)>
  [ 17] not ..................................... <not windowExists(pInfoWindowID)>
  [ 18] jmpifz [ 26] ............................ if not windowExists(pInfoWindowID) then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 43 .............................. return 0
  [ 26] getprop 37 .............................. <pInfoWindowID>
  [ 28] pusharglist 1 ........................... <pInfoWindowID>
  [ 30] extcall 78 .............................. <getWindow(pInfoWindowID)>
  [ 32] setlocal 0 .............................. tWndObj = getWindow(pInfoWindowID)
  [ 34] getparam 2 .............................. <tSprID>
  [ 36] pushcons 171 ............................ <"shopping_greeting_field">
  [ 38] eq ...................................... <tSprID = "shopping_greeting_field">
  [ 39] jmpifz [ 73] ............................ if tSprID = "shopping_greeting_field" then / else
  [ 42] getlocal 0 .............................. <tWndObj>
  [ 44] pushcons 167 ............................ <"shopping_gift_target">
  [ 46] pusharglist 2 ........................... <tWndObj, "shopping_gift_target">
  [ 48] objcall 97 .............................. <tWndObj.getElement("shopping_gift_target")>
  [ 50] setlocal 1 .............................. tElem = tWndObj.getElement("shopping_gift_target")
  [ 52] getlocal 1 .............................. <tElem>
  [ 54] pusharglist 1 ........................... <tElem>
  [ 56] extcall 144 ............................. <objectp(tElem)>
  [ 58] jmpifz [ 70] ............................ if objectp(tElem) then
  [ 61] getlocal 1 .............................. <tElem>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pusharglistnoret 2 ...................... <tElem, 1>
  [ 67] objcall 315 ............................. tElem.setFocus(1)
  [ 70] jmp [101]
  [ 73] getlocal 0 .............................. <tWndObj>
  [ 75] pushcons 171 ............................ <"shopping_greeting_field">
  [ 77] pusharglist 2 ........................... <tWndObj, "shopping_greeting_field">
  [ 79] objcall 97 .............................. <tWndObj.getElement("shopping_greeting_field")>
  [ 81] setlocal 1 .............................. tElem = tWndObj.getElement("shopping_greeting_field")
  [ 83] getlocal 1 .............................. <tElem>
  [ 85] pusharglist 1 ........................... <tElem>
  [ 87] extcall 144 ............................. <objectp(tElem)>
  [ 89] jmpifz [101] ............................ if objectp(tElem) then
  [ 92] getlocal 1 .............................. <tElem>
  [ 94] pushint8 1 .............................. <1>
  [ 96] pusharglistnoret 2 ...................... <tElem, 1>
  [ 98] objcall 315 ............................. tElem.setFocus(1)
  [101] jmp [109]
  [104] pusharglistnoret 0 ...................... <>
  [106] extcall 316 ............................. pass()
  [109] ret
end
