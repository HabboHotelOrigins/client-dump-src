property pPageData, pSmallImg, pSelectedOrderNum, pSelectedColorNum, pSelectedProduct, pLastProductNum, pNumOfColorBoxies

on construct me
  [  0] pushsymb 296 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 120 ............................. <getThread(#catalogue)>
  [  7] pusharglist 1 ........................... <getThread(#catalogue)>
  [  9] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 11] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 13] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 15] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 17] getlocal 0 .............................. <tCataloguePage>
  [ 19] not ..................................... <not tCataloguePage>
  [ 20] jmpifz [ 37] ............................ if not tCataloguePage then
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 27] pushsymb 0 .............................. <#construct>
  [ 29] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #construct>
  [ 31] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #construct)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #construct)>
  [ 35] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #construct)
  [ 37] pusharglist 0 ........................... <[:]>
  [ 39] pushproplist ............................ <[:]>
  [ 40] setprop 475 ............................. pPageData = [:]
  [ 43] pushint8 32 ............................. <32>
  [ 45] pushint8 32 ............................. <32>
  [ 47] pushint8 24 ............................. <24>
  [ 49] pusharglist 3 ........................... <32, 32, 24>
  [ 51] extcall 36 .............................. <image(32, 32, 24)>
  [ 53] setprop 35 .............................. pSmallImg = image(32, 32, 24)
  [ 55] pushint8 1 .............................. <1>
  [ 57] setprop 476 ............................. pSelectedOrderNum = 1
  [ 60] pushint8 1 .............................. <1>
  [ 62] setprop 477 ............................. pSelectedColorNum = 1
  [ 65] pushzero ................................ <0>
  [ 66] setprop 151 ............................. pLastProductNum = 0
  [ 68] pushzero ................................ <0>
  [ 69] setprop 478 ............................. pNumOfColorBoxies = 0
  [ 72] pushint8 1 .............................. <1>
  [ 74] setlocal 1
  [ 76] getlocal 1
  [ 78] pushint8 50 ............................. <50>
  [ 80] lteq
  [ 81] jmpifz [126] ............................ repeat with f = 1 to 50
  [ 84] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [ 86] getlocal 1 .............................. <f>
  [ 88] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [ 89] setlocal 2 .............................. tid = "ctlg_selectcolor_bg_" & f
  [ 91] getlocal 0 .............................. <tCataloguePage>
  [ 93] getlocal 2 .............................. <tid>
  [ 95] pusharglist 2 ........................... <tCataloguePage, tid>
  [ 97] objcall 106 ............................. <tCataloguePage.elementExists(tid)>
  [ 99] jmpifz [114] ............................ if tCataloguePage.elementExists(tid) then
  [102] getprop 478 ............................. <pNumOfColorBoxies>
  [105] pushint8 1 .............................. <1>
  [107] add ..................................... <pNumOfColorBoxies + 1>
  [108] setprop 478 ............................. pNumOfColorBoxies = pNumOfColorBoxies + 1
  [111] jmp [117] ............................... next repeat
  [114] jmp [126] ............................... exit repeat
  [117] pushint8 1
  [119] getlocal 1
  [121] add
  [122] setlocal 1
  [124] endrepeat [ 76]
  [126] pushint8 1 .............................. <1>
  [128] pusharglistnoret 1 ...................... <1>
  [130] extcall 43 .............................. return 1
  [132] ret
end

on define me, tPageProps
  [  0] getparam 1 .............................. <tPageProps>
  [  2] getobjprop 135 .......................... <tPageProps.ilk>
  [  4] pushsymb 136 ............................ <#propList>
  [  6] nteq .................................... <tPageProps.ilk <> #propList>
  [  7] jmpifz [ 24] ............................ if tPageProps.ilk <> #propList then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 2 .............................. <"Incorrect Catalogue page data">
  [ 14] pushsymb 160 ............................ <#define>
  [ 16] pusharglist 3 ........................... <me, "Incorrect Catalogue page data", #define>
  [ 18] extcall 44 .............................. <error(me, "Incorrect Catalogue page data", #define)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Incorrect Catalogue page data", #define)>
  [ 22] extcall 43 .............................. return error(me, "Incorrect Catalogue page data", #define)
  [ 24] pusharglist 0 ........................... <[:]>
  [ 26] pushproplist ............................ <[:]>
  [ 27] setprop 475 ............................. pPageData = [:]
  [ 30] getprop 475 ............................. <pPageData>
  [ 33] pusharglistnoret 1 ...................... <pPageData>
  [ 35] objcall 361 ............................. pPageData.sort()
  [ 38] getparam 1 .............................. <tPageProps>
  [ 40] pushcons 3 .............................. <"productList">
  [ 42] pusharglist 2 ........................... <tPageProps, "productList">
  [ 44] objcall 82 .............................. <tPageProps["productList"]>
  [ 46] pusharglist 1 ........................... <tPageProps["productList"]>
  [ 48] extcall 139 ............................. <voidp(tPageProps["productList"])>
  [ 50] not ..................................... <not voidp(tPageProps["productList"])>
  [ 51] jmpifz [241] ............................ if not voidp(tPageProps["productList"]) then
  [ 54] getparam 1 .............................. <tPageProps>
  [ 56] pushcons 3 .............................. <"productList">
  [ 58] pusharglist 2 ........................... <tPageProps, "productList">
  [ 60] objcall 82 .............................. <tPageProps["productList"]>
  [ 62] setlocal 0 .............................. tProducts = tPageProps["productList"]
  [ 64] getmovieprop 480 ........................ <the milliSeconds>
  [ 67] setlocal 1 .............................. aa = the milliSeconds
  [ 69] pushint8 1 .............................. <1>
  [ 71] setlocal 2
  [ 73] getlocal 2
  [ 75] getlocal 0 .............................. <tProducts>
  [ 77] getobjprop 156 .......................... <tProducts.count>
  [ 79] lteq
  [ 80] jmpifz [241] ............................ repeat with f = 1 to tProducts.count
  [ 83] getlocal 0 .............................. <tProducts>
  [ 85] getlocal 2 .............................. <f>
  [ 87] pusharglist 2 ........................... <tProducts, f>
  [ 89] objcall 82 .............................. <tProducts[f]>
  [ 91] pushcons 4 .............................. <"class">
  [ 93] pusharglist 2 ........................... <tProducts[f], "class">
  [ 95] objcall 82 .............................. <tProducts[f]["class"]>
  [ 97] pusharglist 1 ........................... <tProducts[f]["class"]>
  [ 99] extcall 139 ............................. <voidp(tProducts[f]["class"])>
  [101] not ..................................... <not voidp(tProducts[f]["class"])>
  [102] jmpifz [232] ............................ if not voidp(tProducts[f]["class"]) then
  [105] getlocal 0 .............................. <tProducts>
  [107] getlocal 2 .............................. <f>
  [109] pusharglist 2 ........................... <tProducts, f>
  [111] objcall 82 .............................. <tProducts[f]>
  [113] pushcons 4 .............................. <"class">
  [115] pusharglist 2 ........................... <tProducts[f], "class">
  [117] objcall 82 .............................. <tProducts[f]["class"]>
  [119] setlocal 3 .............................. tClass = tProducts[f]["class"]
  [121] getlocal 3 .............................. <tClass>
  [123] pushcons 5 .............................. <"*">
  [125] containsstr ............................. <tClass contains "*">
  [126] jmpifz [154] ............................ if tClass contains "*" then
  [129] getlocal 3 .............................. <tClass>
  [131] pushsymb 341 ............................ <#char>
  [134] pushint8 1 .............................. <1>
  [136] pushcons 5 .............................. <"*">
  [138] getlocal 3 .............................. <tClass>
  [140] pusharglist 2 ........................... <"*", tClass>
  [142] extcall 342 ............................. <offset("*", tClass)>
  [145] pushint8 1 .............................. <1>
  [147] sub ..................................... <offset("*", tClass) - 1>
  [148] pusharglist 4 ........................... <tClass, #char, 1, offset("*", tClass) - 1>
  [150] objcall 159 ............................. <tClass.char[1..offset("*", tClass) - 1]>
  [152] setlocal 3 .............................. tClass = tClass.char[1..offset("*", tClass) - 1]
  [154] getprop 475 ............................. <pPageData>
  [157] getlocal 3 .............................. <tClass>
  [159] pusharglist 2 ........................... <pPageData, tClass>
  [161] objcall 82 .............................. <pPageData[tClass]>
  [163] pusharglist 1 ........................... <pPageData[tClass]>
  [165] extcall 139 ............................. <voidp(pPageData[tClass])>
  [167] jmpifz [196] ............................ if voidp(pPageData[tClass]) then
  [170] getprop 475 ............................. <pPageData>
  [173] getlocal 3 .............................. <tClass>
  [175] pusharglist 0 ........................... <[:]>
  [177] pushproplist ............................ <[:]>
  [178] pusharglistnoret 3 ...................... <pPageData, tClass, [:]>
  [180] objcall 236 ............................. pPageData[tClass] = [:]
  [182] getprop 475 ............................. <pPageData>
  [185] getlocal 3 .............................. <tClass>
  [187] pusharglist 2 ........................... <pPageData, tClass>
  [189] objcall 82 .............................. <pPageData[tClass]>
  [191] pusharglistnoret 1 ...................... <pPageData[tClass]>
  [193] objcall 361 ............................. pPageData[tClass].sort()
  [196] getprop 475 ............................. <pPageData>
  [199] getlocal 3 .............................. <tClass>
  [201] pusharglist 2 ........................... <pPageData, tClass>
  [203] objcall 82 .............................. <pPageData[tClass]>
  [205] getlocal 0 .............................. <tProducts>
  [207] getlocal 2 .............................. <f>
  [209] pusharglist 2 ........................... <tProducts, f>
  [211] objcall 82 .............................. <tProducts[f]>
  [213] pushcons 4 .............................. <"class">
  [215] pusharglist 2 ........................... <tProducts[f], "class">
  [217] objcall 82 .............................. <tProducts[f]["class"]>
  [219] getlocal 0 .............................. <tProducts>
  [221] getlocal 2 .............................. <f>
  [223] pusharglist 2 ........................... <tProducts, f>
  [225] objcall 82 .............................. <tProducts[f]>
  [227] pusharglistnoret 3 ...................... <pPageData[tClass], tProducts[f]["class"], tProducts[f]>
  [229] objcall 363 ............................. pPageData[tClass].addProp(tProducts[f]["class"], tProducts[f])
  [232] pushint8 1
  [234] getlocal 2
  [236] add
  [237] setlocal 2
  [239] endrepeat [ 73]
  [241] getprop 475 ............................. <pPageData>
  [244] getobjprop 156 .......................... <pPageData.count>
  [246] pushint8 1 .............................. <1>
  [248] gt ...................................... <pPageData.count > 1>
  [249] jmpifz [284] ............................ if pPageData.count > 1 then
  [252] pushint8 1 .............................. <1>
  [254] setprop 476 ............................. pSelectedOrderNum = 1
  [257] pushint8 1 .............................. <1>
  [259] setprop 477 ............................. pSelectedColorNum = 1
  [262] getparam 0 .............................. <me>
  [264] pusharglistnoret 1 ...................... <me>
  [266] localcall 2 ............................. renderSmallIcons(me)
  [268] getparam 0 .............................. <me>
  [270] pushint8 1 .............................. <1>
  [272] pusharglistnoret 2 ...................... <me, 1>
  [274] localcall 4 ............................. selectProduct(me, 1)
  [276] getparam 0 .............................. <me>
  [278] pushint8 1 .............................. <1>
  [280] pusharglistnoret 2 ...................... <me, 1>
  [282] localcall 3 ............................. renderProductColors(me, 1)
  [284] ret
end

on renderSmallIcons me, tstate, tPram
  [  0] pushsymb 296 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 120 ............................. <getThread(#catalogue)>
  [  7] pusharglist 1 ........................... <getThread(#catalogue)>
  [  9] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 11] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 13] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 15] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 17] getlocal 0 .............................. <tCataloguePage>
  [ 19] not ..................................... <not tCataloguePage>
  [ 20] jmpifz [ 38] ............................ if not tCataloguePage then
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 27] pushsymb 472 ............................ <#renderSmallIcons>
  [ 30] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #renderSmallIcons>
  [ 32] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #renderSmallIcons)>
  [ 34] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #renderSmallIcons)>
  [ 36] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #renderSmallIcons)
  [ 38] getlocal 0 .............................. <tCataloguePage>
  [ 40] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 42] getparam 1 .............................. <tstate>
  [ 44] peek 0 .................................. case tstate of
  [ 46] pusharglist 0 ........................... <>
  [ 48] extcall 92 .............................. <VOID>
  [ 50] eq
  [ 51] jmpifz [138] ............................ (case) VOID:
  [ 54] pushint8 1 .............................. <1>
  [ 56] setlocal 2 .............................. tFirst = 1
  [ 58] getprop 475 ............................. <pPageData>
  [ 61] getobjprop 156 .......................... <pPageData.count>
  [ 63] setlocal 3 .............................. tLast = pPageData.count
  [ 65] pushint8 1 .............................. <1>
  [ 67] setlocal 4
  [ 69] getlocal 4
  [ 71] getprop 475 ............................. <pPageData>
  [ 74] getobjprop 156 .......................... <pPageData.count>
  [ 76] lteq
  [ 77] jmpifz [135] ............................ repeat with f = 1 to pPageData.count
  [ 80] pushcons 6 .............................. <"ctlg_small_img_">
  [ 82] getlocal 4 .............................. <f>
  [ 84] joinstr ................................. <"ctlg_small_img_" & f>
  [ 85] setlocal 5 .............................. tid = "ctlg_small_img_" & f
  [ 87] getlocal 1 .............................. <tWndObj>
  [ 89] getlocal 5 .............................. <tid>
  [ 91] pusharglist 2 ........................... <tWndObj, tid>
  [ 93] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [ 95] jmpifz [126] ............................ if tWndObj.elementExists(tid) then
  [ 98] getlocal 1 .............................. <tWndObj>
  [100] getlocal 5 .............................. <tid>
  [102] pusharglist 2 ........................... <tWndObj, tid>
  [104] objcall 97 .............................. <tWndObj.getElement(tid)>
  [106] pusharglistnoret 1 ...................... <tWndObj.getElement(tid)>
  [108] objcall 199 ............................. tWndObj.getElement(tid).clearImage()
  [110] getlocal 1 .............................. <tWndObj>
  [112] getlocal 5 .............................. <tid>
  [114] pusharglist 2 ........................... <tWndObj, tid>
  [116] objcall 97 .............................. <tWndObj.getElement(tid)>
  [118] pushsymb 179 ............................ <#ink>
  [120] pushint8 36 ............................. <36>
  [122] pusharglistnoret 3 ...................... <tWndObj.getElement(tid), #ink, 36>
  [124] objcall 103 ............................. tWndObj.getElement(tid).setProperty(#ink, 36)
  [126] pushint8 1
  [128] getlocal 4
  [130] add
  [131] setlocal 4
  [133] endrepeat [ 69]
  [135] jmp [181]
  [138] peek 0
  [140] pushsymb 214 ............................ <#hilite>
  [142] nteq
  [143] jmpifz [154] ............................ (case) #hilite, ...
  [146] peek 0
  [148] pushsymb 215 ............................ <#unhilite>
  [150] eq
  [151] jmpifz [165] ............................ (case) ..., #unhilite:
  [154] getparam 2 .............................. <tPram>
  [156] setlocal 2 .............................. tFirst = tPram
  [158] getparam 2 .............................. <tPram>
  [160] setlocal 3 .............................. tLast = tPram
  [162] jmp [181] ............................... (case) otherwise:
  [165] pop 1
  [167] getparam 0 .............................. <me>
  [169] pushcons 7 .............................. <"unsupported mode">
  [171] pushsymb 20 ............................. <#ShowSmallIcons>
  [173] pusharglist 3 ........................... <me, "unsupported mode", #ShowSmallIcons>
  [175] extcall 44 .............................. <error(me, "unsupported mode", #ShowSmallIcons)>
  [177] pusharglistnoret 1 ...................... <error(me, "unsupported mode", #ShowSmallIcons)>
  [179] extcall 43 .............................. return error(me, "unsupported mode", #ShowSmallIcons)
  [181] pop 1 ................................... end case
  [183] getlocal 2 .............................. <tFirst>
  [185] pusharglist 1 ........................... <tFirst>
  [187] extcall 139 ............................. <voidp(tFirst)>
  [189] getlocal 3 .............................. <tLast>
  [191] pusharglist 1 ........................... <tLast>
  [193] extcall 139 ............................. <voidp(tLast)>
  [195] or ...................................... <voidp(tFirst) or voidp(tLast)>
  [196] jmpifz [203] ............................ if voidp(tFirst) or voidp(tLast) then
  [199] pusharglistnoret 0 ...................... <>
  [201] extcall 43 .............................. return 
  [203] getlocal 2 .............................. <tFirst>
  [205] pushint8 1 .............................. <1>
  [207] lt ...................................... <tFirst < 1>
  [208] getlocal 3 .............................. <tLast>
  [210] pushint8 1 .............................. <1>
  [212] lt ...................................... <tLast < 1>
  [213] or ...................................... <(tFirst < 1) or (tLast < 1)>
  [214] jmpifz [221] ............................ if (tFirst < 1) or (tLast < 1) then
  [217] pusharglistnoret 0 ...................... <>
  [219] extcall 43 .............................. return 
  [221] getlocal 2 .............................. <tFirst>
  [223] setlocal 4
  [225] getlocal 4
  [227] getlocal 3 .............................. <tLast>
  [229] lteq
  [230] jmpifz [519] ............................ repeat with f = tFirst to tLast
  [233] getprop 475 ............................. <pPageData>
  [236] getlocal 4 .............................. <f>
  [238] pusharglist 2 ........................... <pPageData, f>
  [240] objcall 82 .............................. <pPageData[f]>
  [242] pushint8 1 .............................. <1>
  [244] pusharglist 2 ........................... <pPageData[f], 1>
  [246] objcall 82 .............................. <pPageData[f][1]>
  [248] pushcons 8 .............................. <"smallPrewImg">
  [250] pusharglist 2 ........................... <pPageData[f][1], "smallPrewImg">
  [252] objcall 82 .............................. <pPageData[f][1]["smallPrewImg"]>
  [254] pusharglist 1 ........................... <pPageData[f][1]["smallPrewImg"]>
  [256] extcall 139 ............................. <voidp(pPageData[f][1]["smallPrewImg"])>
  [258] not ..................................... <not voidp(pPageData[f][1]["smallPrewImg"])>
  [259] jmpifz [509] ............................ if not voidp(pPageData[f][1]["smallPrewImg"]) then
  [262] getprop 475 ............................. <pPageData>
  [265] getlocal 4 .............................. <f>
  [267] pusharglist 2 ........................... <pPageData, f>
  [269] objcall 82 .............................. <pPageData[f]>
  [271] pushint8 1 .............................. <1>
  [273] pusharglist 2 ........................... <pPageData[f], 1>
  [275] objcall 82 .............................. <pPageData[f][1]>
  [277] pushcons 8 .............................. <"smallPrewImg">
  [279] pusharglist 2 ........................... <pPageData[f][1], "smallPrewImg">
  [281] objcall 82 .............................. <pPageData[f][1]["smallPrewImg"]>
  [283] setlocal 6 .............................. tmember = pPageData[f][1]["smallPrewImg"]
  [285] pushcons 6 .............................. <"ctlg_small_img_">
  [287] getlocal 4 .............................. <f>
  [289] joinstr ................................. <"ctlg_small_img_" & f>
  [290] setlocal 5 .............................. tid = "ctlg_small_img_" & f
  [292] getlocal 6 .............................. <tmember>
  [294] pushzero ................................ <0>
  [295] nteq .................................... <tmember <> 0>
  [296] jmpifz [509] ............................ if tmember <> 0 then
  [299] getlocal 1 .............................. <tWndObj>
  [301] getlocal 5 .............................. <tid>
  [303] pusharglist 2 ........................... <tWndObj, tid>
  [305] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [307] jmpifz [509] ............................ if tWndObj.elementExists(tid) then
  [310] getprop 35 .............................. <pSmallImg>
  [312] getprop 35 .............................. <pSmallImg>
  [314] getobjprop 176 .......................... <pSmallImg.rect>
  [316] pushint16 255 ........................... <255>
  [319] pushint16 255 ........................... <255>
  [322] pushint16 255 ........................... <255>
  [325] pusharglist 3 ........................... <255, 255, 255>
  [327] extcall 53 .............................. <rgb(255, 255, 255)>
  [329] pusharglistnoret 3 ...................... <pSmallImg, pSmallImg.rect, rgb(255, 255, 255)>
  [331] objcall 195 ............................. pSmallImg.fill(pSmallImg.rect, rgb(255, 255, 255))
  [333] getparam 1 .............................. <tstate>
  [335] pusharglist 1 ........................... <tstate>
  [337] extcall 139 ............................. <voidp(tstate)>
  [339] not ..................................... <not voidp(tstate)>
  [340] jmpifz [384] ............................ if not voidp(tstate) then
  [343] getparam 1 .............................. <tstate>
  [345] pushsymb 214 ............................ <#hilite>
  [347] eq ...................................... <tstate = #hilite>
  [348] pushcons 9 .............................. <"ctlg_small_active2_bg">
  [350] pusharglist 1 ........................... <"ctlg_small_active2_bg">
  [352] extcall 90 .............................. <memberExists("ctlg_small_active2_bg")>
  [354] and ..................................... <(tstate = #hilite) and memberExists("ctlg_small_active2_bg")>
  [355] jmpifz [384] ............................ if (tstate = #hilite) and memberExists("ctlg_small_active2_bg") then
  [358] pushcons 9 .............................. <"ctlg_small_active2_bg">
  [360] pusharglist 1 ........................... <"ctlg_small_active2_bg">
  [362] extcall 175 ............................. <member("ctlg_small_active2_bg")>
  [364] getobjprop 36 ........................... <member("ctlg_small_active2_bg").image>
  [366] setlocal 7 .............................. tBgImage = member("ctlg_small_active2_bg").image
  [368] getprop 35 .............................. <pSmallImg>
  [370] getlocal 7 .............................. <tBgImage>
  [372] getlocal 7 .............................. <tBgImage>
  [374] getobjprop 176 .......................... <tBgImage.rect>
  [376] getprop 35 .............................. <pSmallImg>
  [378] getobjprop 176 .......................... <pSmallImg.rect>
  [380] pusharglistnoret 4 ...................... <pSmallImg, tBgImage, tBgImage.rect, pSmallImg.rect>
  [382] objcall 180 ............................. pSmallImg.copyPixels(tBgImage, tBgImage.rect, pSmallImg.rect)
  [384] getlocal 6 .............................. <tmember>
  [386] pusharglist 1 ........................... <tmember>
  [388] extcall 175 ............................. <member(tmember)>
  [390] getobjprop 36 ........................... <member(tmember).image>
  [392] setlocal 8 .............................. tTempSmallImg = member(tmember).image
  [394] getprop 35 .............................. <pSmallImg>
  [396] getobjprop 176 .......................... <pSmallImg.rect>
  [398] getlocal 8 .............................. <tTempSmallImg>
  [400] getobjprop 176 .......................... <tTempSmallImg.rect>
  [402] sub ..................................... <pSmallImg.rect - tTempSmallImg.rect>
  [403] setlocal 9 .............................. tdestrect = pSmallImg.rect - tTempSmallImg.rect
  [405] pushzero ................................ <0>
  [406] pushzero ................................ <0>
  [407] pushzero ................................ <0>
  [408] pushzero ................................ <0>
  [409] pusharglist 4 ........................... <0, 0, 0, 0>
  [411] extcall 176 ............................. <rect(0, 0, 0, 0)>
  [413] setlocal 10 ............................. tMargins = rect(0, 0, 0, 0)
  [415] getlocal 9 .............................. <tdestrect>
  [417] getobjprop 177 .......................... <tdestrect.width>
  [419] pushint8 2 .............................. <2>
  [421] div ..................................... <tdestrect.width / 2>
  [422] getlocal 9 .............................. <tdestrect>
  [424] getobjprop 178 .......................... <tdestrect.height>
  [426] pushint8 2 .............................. <2>
  [428] div ..................................... <tdestrect.height / 2>
  [429] getlocal 8 .............................. <tTempSmallImg>
  [431] getobjprop 177 .......................... <tTempSmallImg.width>
  [433] getlocal 9 .............................. <tdestrect>
  [435] getobjprop 177 .......................... <tdestrect.width>
  [437] pushint8 2 .............................. <2>
  [439] div ..................................... <tdestrect.width / 2>
  [440] add ..................................... <tTempSmallImg.width + (tdestrect.width / 2)>
  [441] getlocal 9 .............................. <tdestrect>
  [443] getobjprop 178 .......................... <tdestrect.height>
  [445] pushint8 2 .............................. <2>
  [447] div ..................................... <tdestrect.height / 2>
  [448] getlocal 8 .............................. <tTempSmallImg>
  [450] getobjprop 178 .......................... <tTempSmallImg.height>
  [452] add ..................................... <(tdestrect.height / 2) + tTempSmallImg.height>
  [453] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height>
  [455] extcall 176 ............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height)>
  [457] getlocal 10 ............................. <tMargins>
  [459] add ..................................... <rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height) + tMargins>
  [460] setlocal 9 .............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tTempSmallImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempSmallImg.height) + tMargins
  [462] getprop 35 .............................. <pSmallImg>
  [464] getlocal 8 .............................. <tTempSmallImg>
  [466] getlocal 9 .............................. <tdestrect>
  [468] getlocal 8 .............................. <tTempSmallImg>
  [470] getobjprop 176 .......................... <tTempSmallImg.rect>
  [472] pushsymb 179 ............................ <#ink>
  [474] pushint8 36 ............................. <36>
  [476] pusharglist 2 ........................... <[#ink: 36]>
  [478] pushproplist ............................ <[#ink: 36]>
  [479] pusharglistnoret 5 ...................... <pSmallImg, tTempSmallImg, tdestrect, tTempSmallImg.rect, [#ink: 36]>
  [481] objcall 180 ............................. pSmallImg.copyPixels(tTempSmallImg, tdestrect, tTempSmallImg.rect, [#ink: 36])
  [483] getlocal 1 .............................. <tWndObj>
  [485] getlocal 5 .............................. <tid>
  [487] pusharglist 2 ........................... <tWndObj, tid>
  [489] objcall 97 .............................. <tWndObj.getElement(tid)>
  [491] pusharglistnoret 1 ...................... <tWndObj.getElement(tid)>
  [493] objcall 199 ............................. tWndObj.getElement(tid).clearImage()
  [495] getlocal 1 .............................. <tWndObj>
  [497] getlocal 5 .............................. <tid>
  [499] pusharglist 2 ........................... <tWndObj, tid>
  [501] objcall 97 .............................. <tWndObj.getElement(tid)>
  [503] getprop 35 .............................. <pSmallImg>
  [505] pusharglistnoret 2 ...................... <tWndObj.getElement(tid), pSmallImg>
  [507] objcall 181 ............................. tWndObj.getElement(tid).feedImage(pSmallImg)
  [509] pushint8 1
  [511] getlocal 4
  [513] add
  [514] setlocal 4
  [516] endrepeat [225]
  [519] ret
end

on renderProductColors me, tOrderNum
  [  0] getparam 1 .............................. <tOrderNum>
  [  2] pusharglist 1 ........................... <tOrderNum>
  [  4] extcall 290 ............................. <integerp(tOrderNum)>
  [  7] not ..................................... <not integerp(tOrderNum)>
  [  8] jmpifz [ 26] ............................ if not integerp(tOrderNum) then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 10 ............................. <"Incorrect value">
  [ 15] pushsymb 473 ............................ <#renderProductColors>
  [ 18] pusharglist 3 ........................... <me, "Incorrect value", #renderProductColors>
  [ 20] extcall 44 .............................. <error(me, "Incorrect value", #renderProductColors)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #renderProductColors)>
  [ 24] extcall 43 .............................. return error(me, "Incorrect value", #renderProductColors)
  [ 26] getprop 475 ............................. <pPageData>
  [ 29] getobjprop 135 .......................... <pPageData.ilk>
  [ 31] pushsymb 136 ............................ <#propList>
  [ 33] nteq .................................... <pPageData.ilk <> #propList>
  [ 34] jmpifz [ 52] ............................ if pPageData.ilk <> #propList then
  [ 37] getparam 0 .............................. <me>
  [ 39] pushcons 11 ............................. <"page data not found">
  [ 41] pushsymb 473 ............................ <#renderProductColors>
  [ 44] pusharglist 3 ........................... <me, "page data not found", #renderProductColors>
  [ 46] extcall 44 .............................. <error(me, "page data not found", #renderProductColors)>
  [ 48] pusharglistnoret 1 ...................... <error(me, "page data not found", #renderProductColors)>
  [ 50] extcall 43 .............................. return error(me, "page data not found", #renderProductColors)
  [ 52] pushsymb 296 ............................ <#catalogue>
  [ 55] pusharglist 1 ........................... <#catalogue>
  [ 57] extcall 120 ............................. <getThread(#catalogue)>
  [ 59] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 61] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 63] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 65] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 67] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 69] getlocal 0 .............................. <tCataloguePage>
  [ 71] not ..................................... <not tCataloguePage>
  [ 72] jmpifz [ 89] ............................ if not tCataloguePage then
  [ 75] getparam 0 .............................. <me>
  [ 77] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 79] pushsymb 0 .............................. <#construct>
  [ 81] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #construct>
  [ 83] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #construct)>
  [ 85] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #construct)>
  [ 87] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #construct)
  [ 89] getlocal 0 .............................. <tCataloguePage>
  [ 91] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 93] pushint8 1 .............................. <1>
  [ 95] setlocal 2
  [ 97] getlocal 2
  [ 99] getprop 478 ............................. <pNumOfColorBoxies>
  [102] lteq
  [103] jmpifz [208] ............................ repeat with f = 1 to pNumOfColorBoxies
  [106] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [108] getlocal 2 .............................. <f>
  [110] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [111] setlocal 3 .............................. tid = "ctlg_selectcolor_bg_" & f
  [113] getlocal 0 .............................. <tCataloguePage>
  [115] getlocal 3 .............................. <tid>
  [117] pusharglist 2 ........................... <tCataloguePage, tid>
  [119] objcall 106 ............................. <tCataloguePage.elementExists(tid)>
  [121] jmpifz [165] ............................ if tCataloguePage.elementExists(tid) then
  [124] pushzero ................................ <0>
  [125] pusharglist 1 ........................... <0>
  [127] extcall 427 ............................. <paletteIndex(0)>
  [130] setlocal 4 .............................. tColor = paletteIndex(0)
  [132] getlocal 1 .............................. <tWndObj>
  [134] getlocal 3 .............................. <tid>
  [136] pusharglist 2 ........................... <tWndObj, tid>
  [138] objcall 97 .............................. <tWndObj.getElement(tid)>
  [140] pushsymb 395 ............................ <#bgColor>
  [143] getlocal 4 .............................. <tColor>
  [145] pusharglistnoret 3 ...................... <tWndObj.getElement(tid), #bgColor, tColor>
  [147] objcall 103 ............................. tWndObj.getElement(tid).setProperty(#bgColor, tColor)
  [149] getlocal 1 .............................. <tWndObj>
  [151] getlocal 3 .............................. <tid>
  [153] pusharglist 2 ........................... <tWndObj, tid>
  [155] objcall 97 .............................. <tWndObj.getElement(tid)>
  [157] pushsymb 107 ............................ <#blend>
  [159] pushint8 30 ............................. <30>
  [161] pusharglistnoret 3 ...................... <tWndObj.getElement(tid), #blend, 30>
  [163] objcall 103 ............................. tWndObj.getElement(tid).setProperty(#blend, 30)
  [165] pushcons 12 ............................. <"ctlg_selectcolor_">
  [167] getlocal 2 .............................. <f>
  [169] joinstr ................................. <"ctlg_selectcolor_" & f>
  [170] setlocal 3 .............................. tid = "ctlg_selectcolor_" & f
  [172] getlocal 0 .............................. <tCataloguePage>
  [174] getlocal 3 .............................. <tid>
  [176] pusharglist 2 ........................... <tCataloguePage, tid>
  [178] objcall 106 ............................. <tCataloguePage.elementExists(tid)>
  [180] jmpifz [199] ............................ if tCataloguePage.elementExists(tid) then
  [183] getlocal 1 .............................. <tWndObj>
  [185] getlocal 3 .............................. <tid>
  [187] pusharglist 2 ........................... <tWndObj, tid>
  [189] objcall 97 .............................. <tWndObj.getElement(tid)>
  [191] pushsymb 107 ............................ <#blend>
  [193] pushint8 30 ............................. <30>
  [195] pusharglistnoret 3 ...................... <tWndObj.getElement(tid), #blend, 30>
  [197] objcall 103 ............................. tWndObj.getElement(tid).setProperty(#blend, 30)
  [199] pushint8 1
  [201] getlocal 2
  [203] add
  [204] setlocal 2
  [206] endrepeat [ 97]
  [208] getparam 1 .............................. <tOrderNum>
  [210] getprop 475 ............................. <pPageData>
  [213] getobjprop 156 .......................... <pPageData.count>
  [215] lteq .................................... <tOrderNum <= pPageData.count>
  [216] jmpifz [455] ............................ if tOrderNum <= pPageData.count then
  [219] getprop 475 ............................. <pPageData>
  [222] getparam 1 .............................. <tOrderNum>
  [224] pusharglist 2 ........................... <pPageData, tOrderNum>
  [226] objcall 82 .............................. <pPageData[tOrderNum]>
  [228] setlocal 5 .............................. tProducts = pPageData[tOrderNum]
  [230] pushint8 1 .............................. <1>
  [232] setlocal 2
  [234] getlocal 2
  [236] getlocal 5 .............................. <tProducts>
  [238] getobjprop 156 .......................... <tProducts.count>
  [240] lteq
  [241] jmpifz [455] ............................ repeat with f = 1 to tProducts.count
  [244] getlocal 5 .............................. <tProducts>
  [246] getlocal 2 .............................. <f>
  [248] pusharglist 2 ........................... <tProducts, f>
  [250] objcall 82 .............................. <tProducts[f]>
  [252] pushcons 13 ............................. <"partColors">
  [254] pusharglist 2 ........................... <tProducts[f], "partColors">
  [256] objcall 82 .............................. <tProducts[f]["partColors"]>
  [258] pusharglist 1 ........................... <tProducts[f]["partColors"]>
  [260] extcall 139 ............................. <voidp(tProducts[f]["partColors"])>
  [262] not ..................................... <not voidp(tProducts[f]["partColors"])>
  [263] jmpifz [446] ............................ if not voidp(tProducts[f]["partColors"]) then
  [266] getmovieprop 157 ........................ <the itemDelimiter>
  [268] setlocal 6 .............................. tItemDeLimiter = the itemDelimiter
  [270] pushcons 14 ............................. <",">
  [272] setmovieprop 157 ........................ the itemDelimiter = ","
  [274] getlocal 5 .............................. <tProducts>
  [276] getlocal 2 .............................. <f>
  [278] pusharglist 2 ........................... <tProducts, f>
  [280] objcall 82 .............................. <tProducts[f]>
  [282] pushcons 13 ............................. <"partColors">
  [284] pusharglist 2 ........................... <tProducts[f], "partColors">
  [286] objcall 82 .............................. <tProducts[f]["partColors"]>
  [288] pushsymb 158 ............................ <#item>
  [290] getlocal 5 .............................. <tProducts>
  [292] getlocal 2 .............................. <f>
  [294] pusharglist 2 ........................... <tProducts, f>
  [296] objcall 82 .............................. <tProducts[f]>
  [298] pushcons 13 ............................. <"partColors">
  [300] pusharglist 2 ........................... <tProducts[f], "partColors">
  [302] objcall 82 .............................. <tProducts[f]["partColors"]>
  [304] pushsymb 158 ............................ <#item>
  [306] pusharglist 2 ........................... <tProducts[f]["partColors"], #item>
  [308] objcall 156 ............................. <tProducts[f]["partColors"].item.count>
  [310] pusharglist 3 ........................... <tProducts[f]["partColors"], #item, tProducts[f]["partColors"].item.count>
  [312] objcall 159 ............................. <tProducts[f]["partColors"].item[tProducts[f]["partColors"].item.count]>
  [314] setlocal 4 .............................. tColor = tProducts[f]["partColors"].item[tProducts[f]["partColors"].item.count]
  [316] getlocal 6 .............................. <tItemDeLimiter>
  [318] setmovieprop 157 ........................ the itemDelimiter = tItemDeLimiter
  [320] getlocal 4 .............................. <tColor>
  [322] pushsymb 341 ............................ <#char>
  [325] pushint8 1 .............................. <1>
  [327] pusharglist 3 ........................... <tColor, #char, 1>
  [329] objcall 159 ............................. <tColor.char[1]>
  [331] pushcons 15 ............................. <"#">
  [333] eq ...................................... <tColor.char[1] = "#">
  [334] jmpifz [348] ............................ if tColor.char[1] = "#" then / else
  [337] getlocal 4 .............................. <tColor>
  [339] pusharglist 1 ........................... <tColor>
  [341] extcall 53 .............................. <rgb(tColor)>
  [343] setlocal 4 .............................. tColor = rgb(tColor)
  [345] jmp [361]
  [348] getlocal 4 .............................. <tColor>
  [350] pusharglist 1 ........................... <tColor>
  [352] extcall 79 .............................. <integer(tColor)>
  [354] pusharglist 1 ........................... <integer(tColor)>
  [356] extcall 427 ............................. <paletteIndex(integer(tColor))>
  [359] setlocal 4 .............................. tColor = paletteIndex(integer(tColor))
  [361] pushcons 1 .............................. <"ctlg_selectcolor_bg_">
  [363] getlocal 2 .............................. <f>
  [365] joinstr ................................. <"ctlg_selectcolor_bg_" & f>
  [366] setlocal 3 .............................. tid = "ctlg_selectcolor_bg_" & f
  [368] getlocal 1 .............................. <tWndObj>
  [370] getlocal 3 .............................. <tid>
  [372] pusharglist 2 ........................... <tWndObj, tid>
  [374] objcall 106 ............................. <tWndObj.elementExists(tid)>
  [376] jmpifz [412] ............................ if tWndObj.elementExists(tid) then
  [379] getlocal 1 .............................. <tWndObj>
  [381] getlocal 3 .............................. <tid>
  [383] pusharglist 2 ........................... <tWndObj, tid>
  [385] objcall 97 .............................. <tWndObj.getElement(tid)>
  [387] pushsymb 395 ............................ <#bgColor>
  [390] getlocal 4 .............................. <tColor>
  [392] pusharglistnoret 3 ...................... <tWndObj.getElement(tid), #bgColor, tColor>
  [394] objcall 103 ............................. tWndObj.getElement(tid).setProperty(#bgColor, tColor)
  [396] getlocal 1 .............................. <tWndObj>
  [398] getlocal 3 .............................. <tid>
  [400] pusharglist 2 ........................... <tWndObj, tid>
  [402] objcall 97 .............................. <tWndObj.getElement(tid)>
  [404] pushsymb 107 ............................ <#blend>
  [406] pushint8 100 ............................ <100>
  [408] pusharglistnoret 3 ...................... <tWndObj.getElement(tid), #blend, 100>
  [410] objcall 103 ............................. tWndObj.getElement(tid).setProperty(#blend, 100)
  [412] pushcons 12 ............................. <"ctlg_selectcolor_">
  [414] getlocal 2 .............................. <f>
  [416] joinstr ................................. <"ctlg_selectcolor_" & f>
  [417] setlocal 3 .............................. tid = "ctlg_selectcolor_" & f
  [419] getlocal 0 .............................. <tCataloguePage>
  [421] getlocal 3 .............................. <tid>
  [423] pusharglist 2 ........................... <tCataloguePage, tid>
  [425] objcall 106 ............................. <tCataloguePage.elementExists(tid)>
  [427] jmpifz [446] ............................ if tCataloguePage.elementExists(tid) then
  [430] getlocal 1 .............................. <tWndObj>
  [432] getlocal 3 .............................. <tid>
  [434] pusharglist 2 ........................... <tWndObj, tid>
  [436] objcall 97 .............................. <tWndObj.getElement(tid)>
  [438] pushsymb 107 ............................ <#blend>
  [440] pushint8 100 ............................ <100>
  [442] pusharglistnoret 3 ...................... <tWndObj.getElement(tid), #blend, 100>
  [444] objcall 103 ............................. tWndObj.getElement(tid).setProperty(#blend, 100)
  [446] pushint8 1
  [448] getlocal 2
  [450] add
  [451] setlocal 2
  [453] endrepeat [234]
  [455] ret
end

on selectProduct me, tOrderNum
  [  0] pushsymb 296 ............................ <#catalogue>
  [  3] pusharglist 1 ........................... <#catalogue>
  [  5] extcall 120 ............................. <getThread(#catalogue)>
  [  7] pusharglist 1 ........................... <getThread(#catalogue)>
  [  9] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 11] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 13] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 15] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 17] getlocal 0 .............................. <tCataloguePage>
  [ 19] not ..................................... <not tCataloguePage>
  [ 20] jmpifz [ 37] ............................ if not tCataloguePage then
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 27] pushsymb 27 ............................. <#selectProduct>
  [ 29] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #selectProduct>
  [ 31] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #selectProduct)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #selectProduct)>
  [ 35] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #selectProduct)
  [ 37] getlocal 0 .............................. <tCataloguePage>
  [ 39] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 41] getparam 1 .............................. <tOrderNum>
  [ 43] pusharglist 1 ........................... <tOrderNum>
  [ 45] extcall 290 ............................. <integerp(tOrderNum)>
  [ 48] not ..................................... <not integerp(tOrderNum)>
  [ 49] jmpifz [ 66] ............................ if not integerp(tOrderNum) then
  [ 52] getparam 0 .............................. <me>
  [ 54] pushcons 10 ............................. <"Incorrect value">
  [ 56] pushsymb 27 ............................. <#selectProduct>
  [ 58] pusharglist 3 ........................... <me, "Incorrect value", #selectProduct>
  [ 60] extcall 44 .............................. <error(me, "Incorrect value", #selectProduct)>
  [ 62] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #selectProduct)>
  [ 64] extcall 43 .............................. return error(me, "Incorrect value", #selectProduct)
  [ 66] getprop 475 ............................. <pPageData>
  [ 69] pusharglist 1 ........................... <pPageData>
  [ 71] extcall 139 ............................. <voidp(pPageData)>
  [ 73] jmpifz [ 90] ............................ if voidp(pPageData) then
  [ 76] getparam 0 .............................. <me>
  [ 78] pushcons 16 ............................. <"product not found">
  [ 80] pushsymb 27 ............................. <#selectProduct>
  [ 82] pusharglist 3 ........................... <me, "product not found", #selectProduct>
  [ 84] extcall 44 .............................. <error(me, "product not found", #selectProduct)>
  [ 86] pusharglistnoret 1 ...................... <error(me, "product not found", #selectProduct)>
  [ 88] extcall 43 .............................. return error(me, "product not found", #selectProduct)
  [ 90] getparam 1 .............................. <tOrderNum>
  [ 92] getprop 475 ............................. <pPageData>
  [ 95] getobjprop 156 .......................... <pPageData.count>
  [ 97] gt ...................................... <tOrderNum > pPageData.count>
  [ 98] jmpifz [105] ............................ if tOrderNum > pPageData.count then
  [101] pusharglistnoret 0 ...................... <>
  [103] extcall 43 .............................. return 
  [105] getprop 475 ............................. <pPageData>
  [108] getparam 1 .............................. <tOrderNum>
  [110] pusharglist 2 ........................... <pPageData, tOrderNum>
  [112] objcall 82 .............................. <pPageData[tOrderNum]>
  [114] pushint8 1 .............................. <1>
  [116] pusharglist 2 ........................... <pPageData[tOrderNum], 1>
  [118] objcall 82 .............................. <pPageData[tOrderNum][1]>
  [120] pusharglist 1 ........................... <pPageData[tOrderNum][1]>
  [122] extcall 139 ............................. <voidp(pPageData[tOrderNum][1])>
  [124] jmpifz [131] ............................ if voidp(pPageData[tOrderNum][1]) then
  [127] pusharglistnoret 0 ...................... <>
  [129] extcall 43 .............................. return 
  [131] getprop 475 ............................. <pPageData>
  [134] getparam 1 .............................. <tOrderNum>
  [136] pusharglist 2 ........................... <pPageData, tOrderNum>
  [138] objcall 82 .............................. <pPageData[tOrderNum]>
  [140] pushint8 1 .............................. <1>
  [142] pusharglist 2 ........................... <pPageData[tOrderNum], 1>
  [144] objcall 82 .............................. <pPageData[tOrderNum][1]>
  [146] setprop 150 ............................. pSelectedProduct = pPageData[tOrderNum][1]
  [148] pushint8 1 .............................. <1>
  [150] setprop 477 ............................. pSelectedColorNum = 1
  [153] getparam 1 .............................. <tOrderNum>
  [155] setprop 476 ............................. pSelectedOrderNum = tOrderNum
  [158] getparam 0 .............................. <me>
  [160] getparam 1 .............................. <tOrderNum>
  [162] pusharglistnoret 2 ...................... <me, tOrderNum>
  [164] localcall 3 ............................. renderProductColors(me, tOrderNum)
  [166] pushsymb 296 ............................ <#catalogue>
  [169] pusharglist 1 ........................... <#catalogue>
  [171] extcall 120 ............................. <getThread(#catalogue)>
  [173] pusharglist 1 ........................... <getThread(#catalogue)>
  [175] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [177] getprop 150 ............................. <pSelectedProduct>
  [179] pusharglistnoret 2 ...................... <getThread(#catalogue).getInterface(), pSelectedProduct>
  [181] objcall 21 .............................. getThread(#catalogue).getInterface().showPreviewImage(pSelectedProduct)
  [183] getprop 150 ............................. <pSelectedProduct>
  [185] pushcons 17 ............................. <"name">
  [187] pusharglist 2 ........................... <pSelectedProduct, "name">
  [189] objcall 82 .............................. <pSelectedProduct["name"]>
  [191] pusharglist 1 ........................... <pSelectedProduct["name"]>
  [193] extcall 139 ............................. <voidp(pSelectedProduct["name"])>
  [195] not ..................................... <not voidp(pSelectedProduct["name"])>
  [196] jmpifz [230] ............................ if not voidp(pSelectedProduct["name"]) then
  [199] getlocal 1 .............................. <tWndObj>
  [201] pushcons 18 ............................. <"ctlg_product_name">
  [203] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [205] objcall 106 ............................. <tWndObj.elementExists("ctlg_product_name")>
  [207] jmpifz [230] ............................ if tWndObj.elementExists("ctlg_product_name") then
  [210] getlocal 1 .............................. <tWndObj>
  [212] pushcons 18 ............................. <"ctlg_product_name">
  [214] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [216] objcall 97 .............................. <tWndObj.getElement("ctlg_product_name")>
  [218] getprop 150 ............................. <pSelectedProduct>
  [220] pushcons 17 ............................. <"name">
  [222] pusharglist 2 ........................... <pSelectedProduct, "name">
  [224] objcall 82 .............................. <pSelectedProduct["name"]>
  [226] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_product_name"), pSelectedProduct["name"]>
  [228] objcall 98 .............................. tWndObj.getElement("ctlg_product_name").setText(pSelectedProduct["name"])
  [230] getprop 150 ............................. <pSelectedProduct>
  [232] pushcons 19 ............................. <"description">
  [234] pusharglist 2 ........................... <pSelectedProduct, "description">
  [236] objcall 82 .............................. <pSelectedProduct["description"]>
  [238] pusharglist 1 ........................... <pSelectedProduct["description"]>
  [240] extcall 139 ............................. <voidp(pSelectedProduct["description"])>
  [242] not ..................................... <not voidp(pSelectedProduct["description"])>
  [243] jmpifz [277] ............................ if not voidp(pSelectedProduct["description"]) then
  [246] getlocal 1 .............................. <tWndObj>
  [248] pushcons 20 ............................. <"ctlg_description">
  [250] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [252] objcall 106 ............................. <tWndObj.elementExists("ctlg_description")>
  [254] jmpifz [277] ............................ if tWndObj.elementExists("ctlg_description") then
  [257] getlocal 1 .............................. <tWndObj>
  [259] pushcons 20 ............................. <"ctlg_description">
  [261] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [263] objcall 97 .............................. <tWndObj.getElement("ctlg_description")>
  [265] getprop 150 ............................. <pSelectedProduct>
  [267] pushcons 19 ............................. <"description">
  [269] pusharglist 2 ........................... <pSelectedProduct, "description">
  [271] objcall 82 .............................. <pSelectedProduct["description"]>
  [273] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_description"), pSelectedProduct["description"]>
  [275] objcall 98 .............................. tWndObj.getElement("ctlg_description").setText(pSelectedProduct["description"])
  [277] getprop 150 ............................. <pSelectedProduct>
  [279] pushcons 21 ............................. <"price">
  [281] pusharglist 2 ........................... <pSelectedProduct, "price">
  [283] objcall 82 .............................. <pSelectedProduct["price"]>
  [285] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [287] extcall 139 ............................. <voidp(pSelectedProduct["price"])>
  [289] not ..................................... <not voidp(pSelectedProduct["price"])>
  [290] jmpifz [377] ............................ if not voidp(pSelectedProduct["price"]) then
  [293] getlocal 1 .............................. <tWndObj>
  [295] pushcons 22 ............................. <"ctlg_price_1">
  [297] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [299] objcall 106 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [301] jmpifz [377] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [304] getprop 150 ............................. <pSelectedProduct>
  [306] pushcons 21 ............................. <"price">
  [308] pusharglist 2 ........................... <pSelectedProduct, "price">
  [310] objcall 82 .............................. <pSelectedProduct["price"]>
  [312] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [314] extcall 80 .............................. <value(pSelectedProduct["price"])>
  [316] pushint8 1 .............................. <1>
  [318] gt ...................................... <value(pSelectedProduct["price"]) > 1>
  [319] jmpifz [344] ............................ if value(pSelectedProduct["price"]) > 1 then / else
  [322] getprop 150 ............................. <pSelectedProduct>
  [324] pushcons 21 ............................. <"price">
  [326] pusharglist 2 ........................... <pSelectedProduct, "price">
  [328] objcall 82 .............................. <pSelectedProduct["price"]>
  [330] pushcons 23 ............................. <"credits">
  [332] pushcons 23 ............................. <"credits">
  [334] pusharglist 2 ........................... <"credits", "credits">
  [336] extcall 39 .............................. <getText("credits", "credits")>
  [338] joinpadstr .............................. <pSelectedProduct["price"] && getText("credits", "credits")>
  [339] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credits", "credits")
  [341] jmp [363]
  [344] getprop 150 ............................. <pSelectedProduct>
  [346] pushcons 21 ............................. <"price">
  [348] pusharglist 2 ........................... <pSelectedProduct, "price">
  [350] objcall 82 .............................. <pSelectedProduct["price"]>
  [352] pushcons 24 ............................. <"credit">
  [354] pushcons 24 ............................. <"credit">
  [356] pusharglist 2 ........................... <"credit", "credit">
  [358] extcall 39 .............................. <getText("credit", "credit")>
  [360] joinpadstr .............................. <pSelectedProduct["price"] && getText("credit", "credit")>
  [361] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credit", "credit")
  [363] getlocal 1 .............................. <tWndObj>
  [365] pushcons 22 ............................. <"ctlg_price_1">
  [367] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [369] objcall 97 .............................. <tWndObj.getElement("ctlg_price_1")>
  [371] getlocal 2 .............................. <tText>
  [373] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [375] objcall 98 .............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [377] getlocal 1 .............................. <tWndObj>
  [379] pushcons 25 ............................. <"ctlg_buy_button">
  [381] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [383] objcall 106 ............................. <tWndObj.elementExists("ctlg_buy_button")>
  [385] jmpifz [404] ............................ if tWndObj.elementExists("ctlg_buy_button") then
  [388] getlocal 1 .............................. <tWndObj>
  [390] pushcons 25 ............................. <"ctlg_buy_button">
  [392] pusharglist 2 ........................... <tWndObj, "ctlg_buy_button">
  [394] objcall 97 .............................. <tWndObj.getElement("ctlg_buy_button")>
  [396] pushsymb 153 ............................ <#visible>
  [398] pushint8 1 .............................. <1>
  [400] pusharglistnoret 3 ...................... <tWndObj.getElement("ctlg_buy_button"), #visible, 1>
  [402] objcall 103 ............................. tWndObj.getElement("ctlg_buy_button").setProperty(#visible, 1)
  [404] getparam 0 .............................. <me>
  [406] pushsymb 214 ............................ <#hilite>
  [408] getparam 1 .............................. <tOrderNum>
  [410] pusharglistnoret 3 ...................... <me, #hilite, tOrderNum>
  [412] localcall 2 ............................. renderSmallIcons(me, #hilite, tOrderNum)
  [414] getparam 0 .............................. <me>
  [416] pushsymb 215 ............................ <#unhilite>
  [418] getprop 151 ............................. <pLastProductNum>
  [420] pusharglistnoret 3 ...................... <me, #unhilite, pLastProductNum>
  [422] localcall 2 ............................. renderSmallIcons(me, #unhilite, pLastProductNum)
  [424] getprop 476 ............................. <pSelectedOrderNum>
  [427] setprop 151 ............................. pLastProductNum = pSelectedOrderNum
  [429] ret
end

on selectColor me, tOrderNum
  [  0] getprop 476 ............................. <pSelectedOrderNum>
  [  3] pusharglist 1 ........................... <pSelectedOrderNum>
  [  5] extcall 139 ............................. <voidp(pSelectedOrderNum)>
  [  7] jmpifz [ 14] ............................ if voidp(pSelectedOrderNum) then
  [ 10] pusharglistnoret 0 ...................... <>
  [ 12] extcall 43 .............................. return 
  [ 14] pushsymb 296 ............................ <#catalogue>
  [ 17] pusharglist 1 ........................... <#catalogue>
  [ 19] extcall 120 ............................. <getThread(#catalogue)>
  [ 21] pusharglist 1 ........................... <getThread(#catalogue)>
  [ 23] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [ 25] pusharglist 1 ........................... <getThread(#catalogue).getInterface()>
  [ 27] objcall 5 ............................... <getThread(#catalogue).getInterface().getCatalogWindow()>
  [ 29] setlocal 0 .............................. tCataloguePage = getThread(#catalogue).getInterface().getCatalogWindow()
  [ 31] getlocal 0 .............................. <tCataloguePage>
  [ 33] not ..................................... <not tCataloguePage>
  [ 34] jmpifz [ 52] ............................ if not tCataloguePage then
  [ 37] getparam 0 .............................. <me>
  [ 39] pushcons 0 .............................. <"Couldn't access catalogue window!">
  [ 41] pushsymb 474 ............................ <#selectColor>
  [ 44] pusharglist 3 ........................... <me, "Couldn't access catalogue window!", #selectColor>
  [ 46] extcall 44 .............................. <error(me, "Couldn't access catalogue window!", #selectColor)>
  [ 48] pusharglistnoret 1 ...................... <error(me, "Couldn't access catalogue window!", #selectColor)>
  [ 50] extcall 43 .............................. return error(me, "Couldn't access catalogue window!", #selectColor)
  [ 52] getlocal 0 .............................. <tCataloguePage>
  [ 54] setlocal 1 .............................. tWndObj = tCataloguePage
  [ 56] getprop 476 ............................. <pSelectedOrderNum>
  [ 59] pusharglist 1 ........................... <pSelectedOrderNum>
  [ 61] extcall 290 ............................. <integerp(pSelectedOrderNum)>
  [ 64] not ..................................... <not integerp(pSelectedOrderNum)>
  [ 65] jmpifz [ 83] ............................ if not integerp(pSelectedOrderNum) then
  [ 68] getparam 0 .............................. <me>
  [ 70] pushcons 26 ............................. <"Incorrect SelectedOrderNum">
  [ 72] pushsymb 474 ............................ <#selectColor>
  [ 75] pusharglist 3 ........................... <me, "Incorrect SelectedOrderNum", #selectColor>
  [ 77] extcall 44 .............................. <error(me, "Incorrect SelectedOrderNum", #selectColor)>
  [ 79] pusharglistnoret 1 ...................... <error(me, "Incorrect SelectedOrderNum", #selectColor)>
  [ 81] extcall 43 .............................. return error(me, "Incorrect SelectedOrderNum", #selectColor)
  [ 83] getparam 1 .............................. <tOrderNum>
  [ 85] pusharglist 1 ........................... <tOrderNum>
  [ 87] extcall 290 ............................. <integerp(tOrderNum)>
  [ 90] not ..................................... <not integerp(tOrderNum)>
  [ 91] jmpifz [109] ............................ if not integerp(tOrderNum) then
  [ 94] getparam 0 .............................. <me>
  [ 96] pushcons 10 ............................. <"Incorrect value">
  [ 98] pushsymb 474 ............................ <#selectColor>
  [101] pusharglist 3 ........................... <me, "Incorrect value", #selectColor>
  [103] extcall 44 .............................. <error(me, "Incorrect value", #selectColor)>
  [105] pusharglistnoret 1 ...................... <error(me, "Incorrect value", #selectColor)>
  [107] extcall 43 .............................. return error(me, "Incorrect value", #selectColor)
  [109] getprop 475 ............................. <pPageData>
  [112] pusharglist 1 ........................... <pPageData>
  [114] extcall 139 ............................. <voidp(pPageData)>
  [116] jmpifz [134] ............................ if voidp(pPageData) then
  [119] getparam 0 .............................. <me>
  [121] pushcons 16 ............................. <"product not found">
  [123] pushsymb 474 ............................ <#selectColor>
  [126] pusharglist 3 ........................... <me, "product not found", #selectColor>
  [128] extcall 44 .............................. <error(me, "product not found", #selectColor)>
  [130] pusharglistnoret 1 ...................... <error(me, "product not found", #selectColor)>
  [132] extcall 43 .............................. return error(me, "product not found", #selectColor)
  [134] getprop 475 ............................. <pPageData>
  [137] getprop 476 ............................. <pSelectedOrderNum>
  [140] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [142] objcall 82 .............................. <pPageData[pSelectedOrderNum]>
  [144] pusharglist 1 ........................... <pPageData[pSelectedOrderNum]>
  [146] extcall 139 ............................. <voidp(pPageData[pSelectedOrderNum])>
  [148] jmpifz [155] ............................ if voidp(pPageData[pSelectedOrderNum]) then
  [151] pusharglistnoret 0 ...................... <>
  [153] extcall 43 .............................. return 
  [155] getparam 1 .............................. <tOrderNum>
  [157] getprop 475 ............................. <pPageData>
  [160] getprop 476 ............................. <pSelectedOrderNum>
  [163] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [165] objcall 82 .............................. <pPageData[pSelectedOrderNum]>
  [167] getobjprop 156 .......................... <pPageData[pSelectedOrderNum].count>
  [169] gt ...................................... <tOrderNum > pPageData[pSelectedOrderNum].count>
  [170] jmpifz [177] ............................ if tOrderNum > pPageData[pSelectedOrderNum].count then
  [173] pusharglistnoret 0 ...................... <>
  [175] extcall 43 .............................. return 
  [177] getparam 1 .............................. <tOrderNum>
  [179] setprop 477 ............................. pSelectedColorNum = tOrderNum
  [182] getprop 475 ............................. <pPageData>
  [185] getprop 476 ............................. <pSelectedOrderNum>
  [188] pusharglist 2 ........................... <pPageData, pSelectedOrderNum>
  [190] objcall 82 .............................. <pPageData[pSelectedOrderNum]>
  [192] getprop 477 ............................. <pSelectedColorNum>
  [195] pusharglist 2 ........................... <pPageData[pSelectedOrderNum], pSelectedColorNum>
  [197] objcall 82 .............................. <pPageData[pSelectedOrderNum][pSelectedColorNum]>
  [199] setprop 150 ............................. pSelectedProduct = pPageData[pSelectedOrderNum][pSelectedColorNum]
  [201] pushsymb 296 ............................ <#catalogue>
  [204] pusharglist 1 ........................... <#catalogue>
  [206] extcall 120 ............................. <getThread(#catalogue)>
  [208] pusharglist 1 ........................... <getThread(#catalogue)>
  [210] objcall 123 ............................. <getThread(#catalogue).getInterface()>
  [212] getprop 150 ............................. <pSelectedProduct>
  [214] pusharglistnoret 2 ...................... <getThread(#catalogue).getInterface(), pSelectedProduct>
  [216] objcall 21 .............................. getThread(#catalogue).getInterface().showPreviewImage(pSelectedProduct)
  [218] getprop 150 ............................. <pSelectedProduct>
  [220] pushcons 17 ............................. <"name">
  [222] pusharglist 2 ........................... <pSelectedProduct, "name">
  [224] objcall 82 .............................. <pSelectedProduct["name"]>
  [226] pusharglist 1 ........................... <pSelectedProduct["name"]>
  [228] extcall 139 ............................. <voidp(pSelectedProduct["name"])>
  [230] not ..................................... <not voidp(pSelectedProduct["name"])>
  [231] jmpifz [265] ............................ if not voidp(pSelectedProduct["name"]) then
  [234] getlocal 1 .............................. <tWndObj>
  [236] pushcons 18 ............................. <"ctlg_product_name">
  [238] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [240] objcall 106 ............................. <tWndObj.elementExists("ctlg_product_name")>
  [242] jmpifz [265] ............................ if tWndObj.elementExists("ctlg_product_name") then
  [245] getlocal 1 .............................. <tWndObj>
  [247] pushcons 18 ............................. <"ctlg_product_name">
  [249] pusharglist 2 ........................... <tWndObj, "ctlg_product_name">
  [251] objcall 97 .............................. <tWndObj.getElement("ctlg_product_name")>
  [253] getprop 150 ............................. <pSelectedProduct>
  [255] pushcons 17 ............................. <"name">
  [257] pusharglist 2 ........................... <pSelectedProduct, "name">
  [259] objcall 82 .............................. <pSelectedProduct["name"]>
  [261] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_product_name"), pSelectedProduct["name"]>
  [263] objcall 98 .............................. tWndObj.getElement("ctlg_product_name").setText(pSelectedProduct["name"])
  [265] getprop 150 ............................. <pSelectedProduct>
  [267] pushcons 19 ............................. <"description">
  [269] pusharglist 2 ........................... <pSelectedProduct, "description">
  [271] objcall 82 .............................. <pSelectedProduct["description"]>
  [273] pusharglist 1 ........................... <pSelectedProduct["description"]>
  [275] extcall 139 ............................. <voidp(pSelectedProduct["description"])>
  [277] not ..................................... <not voidp(pSelectedProduct["description"])>
  [278] jmpifz [312] ............................ if not voidp(pSelectedProduct["description"]) then
  [281] getlocal 1 .............................. <tWndObj>
  [283] pushcons 20 ............................. <"ctlg_description">
  [285] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [287] objcall 106 ............................. <tWndObj.elementExists("ctlg_description")>
  [289] jmpifz [312] ............................ if tWndObj.elementExists("ctlg_description") then
  [292] getlocal 1 .............................. <tWndObj>
  [294] pushcons 20 ............................. <"ctlg_description">
  [296] pusharglist 2 ........................... <tWndObj, "ctlg_description">
  [298] objcall 97 .............................. <tWndObj.getElement("ctlg_description")>
  [300] getprop 150 ............................. <pSelectedProduct>
  [302] pushcons 19 ............................. <"description">
  [304] pusharglist 2 ........................... <pSelectedProduct, "description">
  [306] objcall 82 .............................. <pSelectedProduct["description"]>
  [308] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_description"), pSelectedProduct["description"]>
  [310] objcall 98 .............................. tWndObj.getElement("ctlg_description").setText(pSelectedProduct["description"])
  [312] getprop 150 ............................. <pSelectedProduct>
  [314] pushcons 21 ............................. <"price">
  [316] pusharglist 2 ........................... <pSelectedProduct, "price">
  [318] objcall 82 .............................. <pSelectedProduct["price"]>
  [320] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [322] extcall 139 ............................. <voidp(pSelectedProduct["price"])>
  [324] not ..................................... <not voidp(pSelectedProduct["price"])>
  [325] jmpifz [412] ............................ if not voidp(pSelectedProduct["price"]) then
  [328] getlocal 1 .............................. <tWndObj>
  [330] pushcons 22 ............................. <"ctlg_price_1">
  [332] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [334] objcall 106 ............................. <tWndObj.elementExists("ctlg_price_1")>
  [336] jmpifz [412] ............................ if tWndObj.elementExists("ctlg_price_1") then
  [339] getprop 150 ............................. <pSelectedProduct>
  [341] pushcons 21 ............................. <"price">
  [343] pusharglist 2 ........................... <pSelectedProduct, "price">
  [345] objcall 82 .............................. <pSelectedProduct["price"]>
  [347] pusharglist 1 ........................... <pSelectedProduct["price"]>
  [349] extcall 80 .............................. <value(pSelectedProduct["price"])>
  [351] pushint8 1 .............................. <1>
  [353] gt ...................................... <value(pSelectedProduct["price"]) > 1>
  [354] jmpifz [379] ............................ if value(pSelectedProduct["price"]) > 1 then / else
  [357] getprop 150 ............................. <pSelectedProduct>
  [359] pushcons 21 ............................. <"price">
  [361] pusharglist 2 ........................... <pSelectedProduct, "price">
  [363] objcall 82 .............................. <pSelectedProduct["price"]>
  [365] pushcons 23 ............................. <"credits">
  [367] pushcons 23 ............................. <"credits">
  [369] pusharglist 2 ........................... <"credits", "credits">
  [371] extcall 39 .............................. <getText("credits", "credits")>
  [373] joinpadstr .............................. <pSelectedProduct["price"] && getText("credits", "credits")>
  [374] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credits", "credits")
  [376] jmp [398]
  [379] getprop 150 ............................. <pSelectedProduct>
  [381] pushcons 21 ............................. <"price">
  [383] pusharglist 2 ........................... <pSelectedProduct, "price">
  [385] objcall 82 .............................. <pSelectedProduct["price"]>
  [387] pushcons 24 ............................. <"credit">
  [389] pushcons 24 ............................. <"credit">
  [391] pusharglist 2 ........................... <"credit", "credit">
  [393] extcall 39 .............................. <getText("credit", "credit")>
  [395] joinpadstr .............................. <pSelectedProduct["price"] && getText("credit", "credit")>
  [396] setlocal 2 .............................. tText = pSelectedProduct["price"] && getText("credit", "credit")
  [398] getlocal 1 .............................. <tWndObj>
  [400] pushcons 22 ............................. <"ctlg_price_1">
  [402] pusharglist 2 ........................... <tWndObj, "ctlg_price_1">
  [404] objcall 97 .............................. <tWndObj.getElement("ctlg_price_1")>
  [406] getlocal 2 .............................. <tText>
  [408] pusharglistnoret 2 ...................... <tWndObj.getElement("ctlg_price_1"), tText>
  [410] objcall 98 .............................. tWndObj.getElement("ctlg_price_1").setText(tText)
  [412] ret
end

on eventProc me, tEvent, tSprID, tProp
  [  0] getparam 1 .............................. <tEvent>
  [  2] pushsymb 100 ............................ <#mouseUp>
  [  4] eq ...................................... <tEvent = #mouseUp>
  [  5] jmpifz [ 21] ............................ if tEvent = #mouseUp then
  [  8] getparam 2 .............................. <tSprID>
  [ 10] pushcons 27 ............................. <"close">
  [ 12] eq ...................................... <tSprID = "close">
  [ 13] jmpifz [ 21] ............................ if tSprID = "close" then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 43 .............................. return 0
  [ 21] getparam 1 .............................. <tEvent>
  [ 23] pushsymb 147 ............................ <#mouseDown>
  [ 25] eq ...................................... <tEvent = #mouseDown>
  [ 26] jmpifz [200] ............................ if tEvent = #mouseDown then
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] pushcons 6 .............................. <"ctlg_small_img_">
  [ 33] containsstr ............................. <tSprID contains "ctlg_small_img_">
  [ 34] jmpifz [ 82] ............................ if tSprID contains "ctlg_small_img_" then / else
  [ 37] getmovieprop 157 ........................ <the itemDelimiter>
  [ 39] setlocal 0 .............................. tItemDeLimiter = the itemDelimiter
  [ 41] pushcons 28 ............................. <"_">
  [ 43] setmovieprop 157 ........................ the itemDelimiter = "_"
  [ 45] getparam 2 .............................. <tSprID>
  [ 47] pushsymb 158 ............................ <#item>
  [ 49] getparam 2 .............................. <tSprID>
  [ 51] pushsymb 158 ............................ <#item>
  [ 53] pusharglist 2 ........................... <tSprID, #item>
  [ 55] objcall 156 ............................. <tSprID.item.count>
  [ 57] pusharglist 3 ........................... <tSprID, #item, tSprID.item.count>
  [ 59] objcall 159 ............................. <tSprID.item[tSprID.item.count]>
  [ 61] pusharglist 1 ........................... <tSprID.item[tSprID.item.count]>
  [ 63] extcall 79 .............................. <integer(tSprID.item[tSprID.item.count])>
  [ 65] setlocal 1 .............................. tProductOrderNum = integer(tSprID.item[tSprID.item.count])
  [ 67] getlocal 0 .............................. <tItemDeLimiter>
  [ 69] setmovieprop 157 ........................ the itemDelimiter = tItemDeLimiter
  [ 71] getparam 0 .............................. <me>
  [ 73] getlocal 1 .............................. <tProductOrderNum>
  [ 75] pusharglistnoret 2 ...................... <me, tProductOrderNum>
  [ 77] localcall 4 ............................. selectProduct(me, tProductOrderNum)
  [ 79] jmp [200]
  [ 82] getparam 2 .............................. <tSprID>
  [ 84] pushcons 12 ............................. <"ctlg_selectcolor_">
  [ 86] containsstr ............................. <tSprID contains "ctlg_selectcolor_">
  [ 87] getparam 2 .............................. <tSprID>
  [ 89] pushcons 29 ............................. <"ctlg_selectcolor_bg_10">
  [ 91] containsstr ............................. <tSprID contains "ctlg_selectcolor_bg_10">
  [ 92] or ...................................... <(tSprID contains "ctlg_selectcolor_") or (tSprID contains "ctlg_selectcolor_bg_10")>
  [ 93] jmpifz [141] ............................ if (tSprID contains "ctlg_selectcolor_") or (tSprID contains "ctlg_selectcolor_bg_10") then / else
  [ 96] getmovieprop 157 ........................ <the itemDelimiter>
  [ 98] setlocal 0 .............................. tItemDeLimiter = the itemDelimiter
  [100] pushcons 28 ............................. <"_">
  [102] setmovieprop 157 ........................ the itemDelimiter = "_"
  [104] getparam 2 .............................. <tSprID>
  [106] pushsymb 158 ............................ <#item>
  [108] getparam 2 .............................. <tSprID>
  [110] pushsymb 158 ............................ <#item>
  [112] pusharglist 2 ........................... <tSprID, #item>
  [114] objcall 156 ............................. <tSprID.item.count>
  [116] pusharglist 3 ........................... <tSprID, #item, tSprID.item.count>
  [118] objcall 159 ............................. <tSprID.item[tSprID.item.count]>
  [120] pusharglist 1 ........................... <tSprID.item[tSprID.item.count]>
  [122] extcall 79 .............................. <integer(tSprID.item[tSprID.item.count])>
  [124] setlocal 2 .............................. tOrderNum = integer(tSprID.item[tSprID.item.count])
  [126] getlocal 0 .............................. <tItemDeLimiter>
  [128] setmovieprop 157 ........................ the itemDelimiter = tItemDeLimiter
  [130] getparam 0 .............................. <me>
  [132] getlocal 2 .............................. <tOrderNum>
  [134] pusharglistnoret 2 ...................... <me, tOrderNum>
  [136] localcall 5 ............................. selectColor(me, tOrderNum)
  [138] jmp [200]
  [141] getparam 2 .............................. <tSprID>
  [143] pushcons 25 ............................. <"ctlg_buy_button">
  [145] eq ...................................... <tSprID = "ctlg_buy_button">
  [146] jmpifz [195] ............................ if tSprID = "ctlg_buy_button" then / else
  [149] getprop 150 ............................. <pSelectedProduct>
  [151] getobjprop 135 .......................... <pSelectedProduct.ilk>
  [153] pushsymb 136 ............................ <#propList>
  [155] nteq .................................... <pSelectedProduct.ilk <> #propList>
  [156] jmpifz [174] ............................ if pSelectedProduct.ilk <> #propList then
  [159] getparam 0 .............................. <me>
  [161] pushcons 30 ............................. <"incorrect Selected Product Data">
  [163] pushsymb 293 ............................ <#eventProc>
  [166] pusharglist 3 ........................... <me, "incorrect Selected Product Data", #eventProc>
  [168] extcall 44 .............................. <error(me, "incorrect Selected Product Data", #eventProc)>
  [170] pusharglistnoret 1 ...................... <error(me, "incorrect Selected Product Data", #eventProc)>
  [172] extcall 43 .............................. return error(me, "incorrect Selected Product Data", #eventProc)
  [174] pushsymb 296 ............................ <#catalogue>
  [177] pusharglist 1 ........................... <#catalogue>
  [179] extcall 120 ............................. <getThread(#catalogue)>
  [181] pusharglist 1 ........................... <getThread(#catalogue)>
  [183] objcall 121 ............................. <getThread(#catalogue).getComponent()>
  [185] getprop 150 ............................. <pSelectedProduct>
  [187] pusharglistnoret 2 ...................... <getThread(#catalogue).getComponent(), pSelectedProduct>
  [189] objcall 297 ............................. getThread(#catalogue).getComponent().checkProductOrder(pSelectedProduct)
  [192] jmp [200]
  [195] pushzero ................................ <0>
  [196] pusharglistnoret 1 ...................... <0>
  [198] extcall 43 .............................. return 0
  [200] pushint8 1 .............................. <1>
  [202] pusharglistnoret 1 ...................... <1>
  [204] extcall 43 .............................. return 1
  [206] ret
end
