property pClass, pName, pCustom, pLayerProps, pDirection, pDimensions, pPartColors, pAnimFrame, pObjectType, pLoczList

on construct me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setprop 383 ............................. pClass = EMPTY
  [  5] pushcons 0 .............................. <EMPTY>
  [  7] setprop 384 ............................. pName = EMPTY
  [ 10] pushcons 0 .............................. <EMPTY>
  [ 12] setprop 385 ............................. pCustom = EMPTY
  [ 15] pusharglist 0 ........................... <[]>
  [ 17] pushlist ................................ <[]>
  [ 18] setprop 386 ............................. pDirection = []
  [ 21] pusharglist 0 ........................... <[]>
  [ 23] pushlist ................................ <[]>
  [ 24] setprop 387 ............................. pDimensions = []
  [ 27] pusharglist 0 ........................... <[]>
  [ 29] pushlist ................................ <[]>
  [ 30] setprop 388 ............................. pPartColors = []
  [ 33] pushzero ................................ <0>
  [ 34] setprop 389 ............................. pAnimFrame = 0
  [ 37] pusharglist 0 ........................... <[]>
  [ 39] pushlist ................................ <[]>
  [ 40] setprop 390 ............................. pLayerProps = []
  [ 43] pushcons 0 .............................. <EMPTY>
  [ 45] setprop 391 ............................. pObjectType = EMPTY
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 43 .............................. return 1
  [ 54] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 390 ............................. pLayerProps = []
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 43 .............................. return 1
  [ 12] ret
end

on define me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 238 ............................ <#class>
  [  4] pusharglist 2 ........................... <tdata, #class>
  [  6] objcall 82 .............................. <tdata[#class]>
  [  8] setprop 383 ............................. pClass = tdata[#class]
  [ 11] getparam 1 .............................. <tdata>
  [ 13] pushsymb 86 ............................. <#name>
  [ 15] pusharglist 2 ........................... <tdata, #name>
  [ 17] objcall 82 .............................. <tdata[#name]>
  [ 19] setprop 384 ............................. pName = tdata[#name]
  [ 22] getparam 1 .............................. <tdata>
  [ 24] pushsymb 239 ............................ <#custom>
  [ 26] pusharglist 2 ........................... <tdata, #custom>
  [ 28] objcall 82 .............................. <tdata[#custom]>
  [ 30] setprop 385 ............................. pCustom = tdata[#custom]
  [ 33] getparam 1 .............................. <tdata>
  [ 35] pushsymb 240 ............................ <#direction>
  [ 37] pusharglist 2 ........................... <tdata, #direction>
  [ 39] objcall 82 .............................. <tdata[#direction]>
  [ 41] setprop 386 ............................. pDirection = tdata[#direction]
  [ 44] getparam 1 .............................. <tdata>
  [ 46] pushsymb 241 ............................ <#dimensions>
  [ 48] pusharglist 2 ........................... <tdata, #dimensions>
  [ 50] objcall 82 .............................. <tdata[#dimensions]>
  [ 52] setprop 387 ............................. pDimensions = tdata[#dimensions]
  [ 55] getparam 1 .............................. <tdata>
  [ 57] pushsymb 243 ............................ <#objectType>
  [ 59] pusharglist 2 ........................... <tdata, #objectType>
  [ 61] objcall 82 .............................. <tdata[#objectType]>
  [ 63] setprop 391 ............................. pObjectType = tdata[#objectType]
  [ 66] getprop 383 ............................. <pClass>
  [ 69] pushcons 1 .............................. <"*">
  [ 71] containsstr ............................. <pClass contains "*">
  [ 72] jmpifz [103] ............................ if pClass contains "*" then
  [ 75] getprop 383 ............................. <pClass>
  [ 78] pushsymb 341 ............................ <#char>
  [ 81] pushint8 1 .............................. <1>
  [ 83] pushcons 1 .............................. <"*">
  [ 85] getprop 383 ............................. <pClass>
  [ 88] pusharglist 2 ........................... <"*", pClass>
  [ 90] extcall 342 ............................. <offset("*", pClass)>
  [ 93] pushint8 1 .............................. <1>
  [ 95] sub ..................................... <offset("*", pClass) - 1>
  [ 96] pusharglist 4 ........................... <pClass, #char, 1, offset("*", pClass) - 1>
  [ 98] objcall 159 ............................. <pClass.char[1..offset("*", pClass) - 1]>
  [100] setprop 383 ............................. pClass = pClass.char[1..offset("*", pClass) - 1]
  [103] getprop 391 ............................. <pObjectType>
  [106] peek 0 .................................. case pObjectType of
  [108] pushcons 2 .............................. <"s">
  [110] eq
  [111] jmpifz [151] ............................ (case) "s":
  [114] getparam 0 .............................. <me>
  [116] getparam 1 .............................. <tdata>
  [118] pushsymb 242 ............................ <#colors>
  [120] pusharglist 2 ........................... <tdata, #colors>
  [122] objcall 82 .............................. <tdata[#colors]>
  [124] pusharglistnoret 2 ...................... <me, tdata[#colors]>
  [126] objcall 377 ............................. me.solveColors(tdata[#colors])
  [129] getparam 0 .............................. <me>
  [131] pusharglist 1 ........................... <me>
  [133] objcall 380 ............................. <me.solveStuffMembers()>
  [136] pushzero ................................ <0>
  [137] eq ...................................... <me.solveStuffMembers() = 0>
  [138] jmpifz [148] ............................ if me.solveStuffMembers() = 0 then
  [141] pop 1
  [143] pushzero ................................ <0>
  [144] pusharglistnoret 1 ...................... <0>
  [146] extcall 43 .............................. return 0
  [148] jmp [184]
  [151] peek 0
  [153] pushcons 3 .............................. <"i">
  [155] eq
  [156] jmpifz [184] ............................ (case) "i":
  [159] pusharglist 0 ........................... <[]>
  [161] pushlist ................................ <[]>
  [162] setprop 388 ............................. pPartColors = []
  [165] getparam 0 .............................. <me>
  [167] pusharglist 1 ........................... <me>
  [169] objcall 381 ............................. <me.solveItemMembers()>
  [172] pushzero ................................ <0>
  [173] eq ...................................... <me.solveItemMembers() = 0>
  [174] jmpifz [184] ............................ if me.solveItemMembers() = 0 then
  [177] pop 1
  [179] pushzero ................................ <0>
  [180] pusharglistnoret 1 ...................... <0>
  [182] extcall 43 .............................. return 0
  [184] pop 1 ................................... end case
  [186] pushint8 1 .............................. <1>
  [188] pusharglistnoret 1 ...................... <1>
  [190] extcall 43 .............................. return 1
  [192] ret
end

on getPicture me, tImg
  [  0] getprop 390 ............................. <pLayerProps>
  [  3] getobjprop 135 .......................... <pLayerProps.ilk>
  [  5] pushsymb 155 ............................ <#list>
  [  7] nteq .................................... <pLayerProps.ilk <> #list>
  [  8] jmpifz [ 26] ............................ if pLayerProps.ilk <> #list then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 4 .............................. <"Properties not found!!!">
  [ 15] pushsymb 392 ............................ <#getImage>
  [ 18] pusharglist 3 ........................... <me, "Properties not found!!!", #getImage>
  [ 20] extcall 44 .............................. <error(me, "Properties not found!!!", #getImage)>
  [ 22] pusharglistnoret 1 ...................... <error(me, "Properties not found!!!", #getImage)>
  [ 24] extcall 43 .............................. return error(me, "Properties not found!!!", #getImage)
  [ 26] getprop 390 ............................. <pLayerProps>
  [ 29] getobjprop 156 .......................... <pLayerProps.count>
  [ 31] pushint8 1 .............................. <1>
  [ 33] lt ...................................... <pLayerProps.count < 1>
  [ 34] jmpifz [ 52] ............................ if pLayerProps.count < 1 then
  [ 37] getparam 0 .............................. <me>
  [ 39] pushcons 5 .............................. <"No Properties!!!">
  [ 41] pushsymb 392 ............................ <#getImage>
  [ 44] pusharglist 3 ........................... <me, "No Properties!!!", #getImage>
  [ 46] extcall 44 .............................. <error(me, "No Properties!!!", #getImage)>
  [ 48] pusharglistnoret 1 ...................... <error(me, "No Properties!!!", #getImage)>
  [ 50] extcall 43 .............................. return error(me, "No Properties!!!", #getImage)
  [ 52] pushint16 300 ........................... <300>
  [ 55] pushint16 300 ........................... <300>
  [ 58] pushint8 24 ............................. <24>
  [ 60] pusharglist 3 ........................... <300, 300, 24>
  [ 62] extcall 36 .............................. <image(300, 300, 24)>
  [ 64] setlocal 0 .............................. tCanvas = image(300, 300, 24)
  [ 66] getlocal 0 .............................. <tCanvas>
  [ 68] getlocal 0 .............................. <tCanvas>
  [ 70] getobjprop 176 .......................... <tCanvas.rect>
  [ 72] pushint16 255 ........................... <255>
  [ 75] pushint16 255 ........................... <255>
  [ 78] pushint16 255 ........................... <255>
  [ 81] pusharglist 3 ........................... <255, 255, 255>
  [ 83] extcall 53 .............................. <rgb(255, 255, 255)>
  [ 85] pusharglistnoret 3 ...................... <tCanvas, tCanvas.rect, rgb(255, 255, 255)>
  [ 87] objcall 195 ............................. tCanvas.fill(tCanvas.rect, rgb(255, 255, 255))
  [ 89] pushzero ................................ <0>
  [ 90] setlocal 1 .............................. tFlipFlag = 0
  [ 92] getprop 391 ............................. <pObjectType>
  [ 95] peek 0 .................................. case pObjectType of
  [ 97] pushcons 3 .............................. <"i">
  [ 99] eq
  [100] jmpifz [156] ............................ (case) "i":
  [103] getprop 390 ............................. <pLayerProps>
  [106] pushint8 1 .............................. <1>
  [108] pusharglist 2 ........................... <pLayerProps, 1>
  [110] objcall 82 .............................. <pLayerProps[1]>
  [112] setlocal 2 .............................. tProps = pLayerProps[1]
  [114] getlocal 2 .............................. <tProps>
  [116] pushsymb 175 ............................ <#member>
  [118] pusharglist 2 ........................... <tProps, #member>
  [120] objcall 82 .............................. <tProps[#member]>
  [122] setlocal 3 .............................. tMemNum = tProps[#member]
  [124] getlocal 3 .............................. <tMemNum>
  [126] pusharglist 1 ........................... <tMemNum>
  [128] extcall 175 ............................. <member(tMemNum)>
  [130] getobjprop 36 ........................... <member(tMemNum).image>
  [132] setlocal 4 .............................. tImage = member(tMemNum).image
  [134] getlocal 4 .............................. <tImage>
  [136] pusharglist 1 ........................... <tImage>
  [138] objcall 138 ............................. <tImage.duplicate()>
  [140] setlocal 0 .............................. tCanvas = tImage.duplicate()
  [142] getlocal 2 .............................. <tProps>
  [144] pushsymb 393 ............................ <#flipH>
  [147] pusharglist 2 ........................... <tProps, #flipH>
  [149] objcall 82 .............................. <tProps[#flipH]>
  [151] setlocal 5 .............................. tFlipItem = tProps[#flipH]
  [153] jmp [449]
  [156] peek 0
  [158] pushcons 2 .............................. <"s">
  [160] eq
  [161] jmpifz [449] ............................ (case) "s":
  [164] pusharglist 0 ........................... <[:]>
  [166] pushproplist ............................ <[:]>
  [167] setlocal 6 .............................. tTempLayerProps = [:]
  [169] getlocal 6 .............................. <tTempLayerProps>
  [171] pusharglistnoret 1 ...................... <tTempLayerProps>
  [173] objcall 361 ............................. tTempLayerProps.sort()
  [176] pushint8 1 .............................. <1>
  [178] setlocal 7
  [180] getlocal 7
  [182] getprop 390 ............................. <pLayerProps>
  [185] getobjprop 156 .......................... <pLayerProps.count>
  [187] lteq
  [188] jmpifz [245] ............................ repeat with f = 1 to pLayerProps.count
  [191] getprop 394 ............................. <pLoczList>
  [194] getlocal 7 .............................. <f>
  [196] pusharglist 2 ........................... <pLoczList, f>
  [198] objcall 82 .............................. <pLoczList[f]>
  [200] getprop 386 ............................. <pDirection>
  [203] pushint8 1 .............................. <1>
  [205] pusharglist 2 ........................... <pDirection, 1>
  [207] objcall 82 .............................. <pDirection[1]>
  [209] pushint8 1 .............................. <1>
  [211] add ..................................... <pDirection[1] + 1>
  [212] pusharglist 2 ........................... <pLoczList[f], pDirection[1] + 1>
  [214] objcall 82 .............................. <pLoczList[f][pDirection[1] + 1]>
  [216] setlocal 8 .............................. tlocz = pLoczList[f][pDirection[1] + 1]
  [218] getlocal 6 .............................. <tTempLayerProps>
  [220] getlocal 8 .............................. <tlocz>
  [222] getprop 390 ............................. <pLayerProps>
  [225] getlocal 7 .............................. <f>
  [227] pusharglist 2 ........................... <pLayerProps, f>
  [229] objcall 82 .............................. <pLayerProps[f]>
  [231] pusharglistnoret 3 ...................... <tTempLayerProps, tlocz, pLayerProps[f]>
  [233] objcall 363 ............................. tTempLayerProps.addProp(tlocz, pLayerProps[f])
  [236] pushint8 1
  [238] getlocal 7
  [240] add
  [241] setlocal 7
  [243] endrepeat [180]
  [245] pushint8 1 .............................. <1>
  [247] setlocal 9
  [249] getlocal 9
  [251] getlocal 6 .............................. <tTempLayerProps>
  [253] getobjprop 156 .......................... <tTempLayerProps.count>
  [255] lteq
  [256] jmpifz [449] ............................ repeat with j = 1 to tTempLayerProps.count
  [259] getlocal 6 .............................. <tTempLayerProps>
  [261] getlocal 9 .............................. <j>
  [263] pusharglist 2 ........................... <tTempLayerProps, j>
  [265] objcall 82 .............................. <tTempLayerProps[j]>
  [267] setlocal 2 .............................. tProps = tTempLayerProps[j]
  [269] getlocal 2 .............................. <tProps>
  [271] pushsymb 175 ............................ <#member>
  [273] pusharglist 2 ........................... <tProps, #member>
  [275] objcall 82 .............................. <tProps[#member]>
  [277] setlocal 3 .............................. tMemNum = tProps[#member]
  [279] getlocal 2 .............................. <tProps>
  [281] pushsymb 107 ............................ <#blend>
  [283] pusharglist 2 ........................... <tProps, #blend>
  [285] objcall 82 .............................. <tProps[#blend]>
  [287] setlocal 10 ............................. tBlend = tProps[#blend]
  [289] getlocal 2 .............................. <tProps>
  [291] pushsymb 395 ............................ <#bgColor>
  [294] pusharglist 2 ........................... <tProps, #bgColor>
  [296] objcall 82 .............................. <tProps[#bgColor]>
  [298] setlocal 11 ............................. tColor = tProps[#bgColor]
  [300] getlocal 2 .............................. <tProps>
  [302] pushsymb 179 ............................ <#ink>
  [304] pusharglist 2 ........................... <tProps, #ink>
  [306] objcall 82 .............................. <tProps[#ink]>
  [308] setlocal 12 ............................. tInk = tProps[#ink]
  [310] getlocal 3 .............................. <tMemNum>
  [312] pusharglist 1 ........................... <tMemNum>
  [314] extcall 175 ............................. <member(tMemNum)>
  [316] getobjprop 36 ........................... <member(tMemNum).image>
  [318] setlocal 4 .............................. tImage = member(tMemNum).image
  [320] getlocal 3 .............................. <tMemNum>
  [322] pusharglist 1 ........................... <tMemNum>
  [324] extcall 175 ............................. <member(tMemNum)>
  [326] getobjprop 396 .......................... <member(tMemNum).regPoint>
  [329] setlocal 13 ............................. tRegp = member(tMemNum).regPoint
  [331] pushint8 100 ............................ <100>
  [333] getlocal 13 ............................. <tRegp>
  [335] pushint8 1 .............................. <1>
  [337] pusharglist 2 ........................... <tRegp, 1>
  [339] objcall 82 .............................. <tRegp[1]>
  [341] sub ..................................... <100 - tRegp[1]>
  [342] setlocal 14 ............................. tX = 100 - tRegp[1]
  [344] pushint16 150 ........................... <150>
  [347] getlocal 13 ............................. <tRegp>
  [349] pushint8 2 .............................. <2>
  [351] pusharglist 2 ........................... <tRegp, 2>
  [353] objcall 82 .............................. <tRegp[2]>
  [355] sub ..................................... <150 - tRegp[2]>
  [356] setlocal 15 ............................. tY = 150 - tRegp[2]
  [358] getlocal 14 ............................. <tX>
  [360] getlocal 15 ............................. <tY>
  [362] getlocal 14 ............................. <tX>
  [364] getlocal 4 .............................. <tImage>
  [366] getobjprop 177 .......................... <tImage.width>
  [368] add ..................................... <tX + tImage.width>
  [369] getlocal 15 ............................. <tY>
  [371] getlocal 4 .............................. <tImage>
  [373] getobjprop 178 .......................... <tImage.height>
  [375] add ..................................... <tY + tImage.height>
  [376] pusharglist 4 ........................... <tX, tY, tX + tImage.width, tY + tImage.height>
  [378] extcall 176 ............................. <rect(tX, tY, tX + tImage.width, tY + tImage.height)>
  [380] setlocal 16 ............................. tRect = rect(tX, tY, tX + tImage.width, tY + tImage.height)
  [382] getlocal 2 .............................. <tProps>
  [384] pushsymb 393 ............................ <#flipH>
  [387] pusharglist 2 ........................... <tProps, #flipH>
  [389] objcall 82 .............................. <tProps[#flipH]>
  [391] jmpifz [398] ............................ if tProps[#flipH] then
  [394] pushint8 1 .............................. <1>
  [396] setlocal 1 .............................. tFlipFlag = 1
  [398] getlocal 4 .............................. <tImage>
  [400] pusharglist 1 ........................... <tImage>
  [402] objcall 218 ............................. <tImage.createMatte()>
  [404] setlocal 17 ............................. tMatte = tImage.createMatte()
  [406] getlocal 0 .............................. <tCanvas>
  [408] getlocal 4 .............................. <tImage>
  [410] getlocal 16 ............................. <tRect>
  [412] getlocal 4 .............................. <tImage>
  [414] getobjprop 176 .......................... <tImage.rect>
  [416] pushsymb 219 ............................ <#maskImage>
  [418] getlocal 17 ............................. <tMatte>
  [420] pushsymb 179 ............................ <#ink>
  [422] getlocal 12 ............................. <tInk>
  [424] pushsymb 395 ............................ <#bgColor>
  [427] getlocal 11 ............................. <tColor>
  [429] pushsymb 107 ............................ <#blend>
  [431] getlocal 10 ............................. <tBlend>
  [433] pusharglist 8 ........................... <[#maskImage: tMatte, #ink: tInk, #bgColor: tColor, #blend: tBlend]>
  [435] pushproplist ............................ <[#maskImage: tMatte, #ink: tInk, #bgColor: tColor, #blend: tBlend]>
  [436] pusharglistnoret 5 ...................... <tCanvas, tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: tInk, #bgColor: tColor, #blend: tBlend]>
  [438] objcall 180 ............................. tCanvas.copyPixels(tImage, tRect, tImage.rect, [#maskImage: tMatte, #ink: tInk, #bgColor: tColor, #blend: tBlend])
  [440] pushint8 1
  [442] getlocal 9
  [444] add
  [445] setlocal 9
  [447] endrepeat [249]
  [449] pop 1 ................................... end case
  [451] getparam 1 .............................. <tImg>
  [453] pusharglist 1 ........................... <tImg>
  [455] extcall 139 ............................. <voidp(tImg)>
  [457] jmpifz [467] ............................ if voidp(tImg) then / else
  [460] getlocal 0 .............................. <tCanvas>
  [462] setparam 1 .............................. tImg = tCanvas
  [464] jmp [543]
  [467] getparam 1 .............................. <tImg>
  [469] getobjprop 176 .......................... <tImg.rect>
  [471] getlocal 0 .............................. <tCanvas>
  [473] getobjprop 176 .......................... <tCanvas.rect>
  [475] sub ..................................... <tImg.rect - tCanvas.rect>
  [476] setlocal 18 ............................. tdestrect = tImg.rect - tCanvas.rect
  [478] getlocal 18 ............................. <tdestrect>
  [480] getobjprop 177 .......................... <tdestrect.width>
  [482] pushint8 2 .............................. <2>
  [484] div ..................................... <tdestrect.width / 2>
  [485] getlocal 18 ............................. <tdestrect>
  [487] getobjprop 178 .......................... <tdestrect.height>
  [489] pushint8 2 .............................. <2>
  [491] div ..................................... <tdestrect.height / 2>
  [492] getlocal 0 .............................. <tCanvas>
  [494] getobjprop 177 .......................... <tCanvas.width>
  [496] getlocal 18 ............................. <tdestrect>
  [498] getobjprop 177 .......................... <tdestrect.width>
  [500] pushint8 2 .............................. <2>
  [502] div ..................................... <tdestrect.width / 2>
  [503] add ..................................... <tCanvas.width + (tdestrect.width / 2)>
  [504] getlocal 18 ............................. <tdestrect>
  [506] getobjprop 178 .......................... <tdestrect.height>
  [508] pushint8 2 .............................. <2>
  [510] div ..................................... <tdestrect.height / 2>
  [511] getlocal 0 .............................. <tCanvas>
  [513] getobjprop 178 .......................... <tCanvas.height>
  [515] add ..................................... <(tdestrect.height / 2) + tCanvas.height>
  [516] pusharglist 4 ........................... <tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height>
  [518] extcall 176 ............................. <rect(tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height)>
  [520] setlocal 18 ............................. tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tCanvas.width + (tdestrect.width / 2), (tdestrect.height / 2) + tCanvas.height)
  [522] getparam 1 .............................. <tImg>
  [524] getlocal 0 .............................. <tCanvas>
  [526] getlocal 18 ............................. <tdestrect>
  [528] getlocal 0 .............................. <tCanvas>
  [530] getobjprop 176 .......................... <tCanvas.rect>
  [532] pushsymb 179 ............................ <#ink>
  [534] pushint8 36 ............................. <36>
  [536] pusharglist 2 ........................... <[#ink: 36]>
  [538] pushproplist ............................ <[#ink: 36]>
  [539] pusharglistnoret 5 ...................... <tImg, tCanvas, tdestrect, tCanvas.rect, [#ink: 36]>
  [541] objcall 180 ............................. tImg.copyPixels(tCanvas, tdestrect, tCanvas.rect, [#ink: 36])
  [543] getlocal 5 .............................. <tFlipItem>
  [545] jmpifz [559] ............................ if tFlipItem then
  [548] getparam 0 .............................. <me>
  [550] getparam 1 .............................. <tImg>
  [552] pusharglist 2 ........................... <me, tImg>
  [554] objcall 376 ............................. <me.flipImage(tImg)>
  [557] setparam 1 .............................. tImg = me.flipImage(tImg)
  [559] getparam 1 .............................. <tImg>
  [561] pusharglist 1 ........................... <tImg>
  [563] objcall 397 ............................. <tImg.trimWhiteSpace()>
  [566] pusharglistnoret 1 ...................... <tImg.trimWhiteSpace()>
  [568] extcall 43 .............................. return tImg.trimWhiteSpace()
  [570] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 412 .......................... <tImg_a.paletteRef>
  [  5] setlocal 0 .............................. tPaletteRef = tImg_a.paletteRef
  [  7] getlocal 0 .............................. <tPaletteRef>
  [  9] getobjprop 135 .......................... <tPaletteRef.ilk>
  [ 11] pushsymb 175 ............................ <#member>
  [ 13] eq ...................................... <tPaletteRef.ilk = #member>
  [ 14] jmpifz [ 45] ............................ if tPaletteRef.ilk = #member then / else
  [ 17] getparam 1 .............................. <tImg_a>
  [ 19] getobjprop 177 .......................... <tImg_a.width>
  [ 21] getparam 1 .............................. <tImg_a>
  [ 23] getobjprop 178 .......................... <tImg_a.height>
  [ 25] getparam 1 .............................. <tImg_a>
  [ 27] getobjprop 413 .......................... <tImg_a.depth>
  [ 30] getlocal 0 .............................. <tPaletteRef>
  [ 32] pusharglist 1 ........................... <tPaletteRef>
  [ 34] extcall 175 ............................. <member(tPaletteRef)>
  [ 36] pusharglist 4 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth, member(tPaletteRef)>
  [ 38] extcall 36 .............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth, member(tPaletteRef))>
  [ 40] setlocal 1 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth, member(tPaletteRef))
  [ 42] jmp [ 61]
  [ 45] getparam 1 .............................. <tImg_a>
  [ 47] getobjprop 177 .......................... <tImg_a.width>
  [ 49] getparam 1 .............................. <tImg_a>
  [ 51] getobjprop 178 .......................... <tImg_a.height>
  [ 53] pushint8 32 ............................. <32>
  [ 55] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, 32>
  [ 57] extcall 36 .............................. <image(tImg_a.width, tImg_a.height, 32)>
  [ 59] setlocal 1 .............................. tImg_b = image(tImg_a.width, tImg_a.height, 32)
  [ 61] getparam 1 .............................. <tImg_a>
  [ 63] getobjprop 177 .......................... <tImg_a.width>
  [ 65] pushzero ................................ <0>
  [ 66] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 68] extcall 294 ............................. <point(tImg_a.width, 0)>
  [ 71] pushzero ................................ <0>
  [ 72] pushzero ................................ <0>
  [ 73] pusharglist 2 ........................... <0, 0>
  [ 75] extcall 294 ............................. <point(0, 0)>
  [ 78] pushzero ................................ <0>
  [ 79] getparam 1 .............................. <tImg_a>
  [ 81] getobjprop 178 .......................... <tImg_a.height>
  [ 83] pusharglist 2 ........................... <0, tImg_a.height>
  [ 85] extcall 294 ............................. <point(0, tImg_a.height)>
  [ 88] getparam 1 .............................. <tImg_a>
  [ 90] getobjprop 177 .......................... <tImg_a.width>
  [ 92] getparam 1 .............................. <tImg_a>
  [ 94] getobjprop 178 .......................... <tImg_a.height>
  [ 96] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 98] extcall 294 ............................. <point(tImg_a.width, tImg_a.height)>
  [101] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [103] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [104] setlocal 2 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [106] getlocal 1 .............................. <tImg_b>
  [108] getparam 1 .............................. <tImg_a>
  [110] getlocal 2 .............................. <tQuad>
  [112] getparam 1 .............................. <tImg_a>
  [114] getobjprop 176 .......................... <tImg_a.rect>
  [116] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [118] objcall 180 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [120] getlocal 1 .............................. <tImg_b>
  [122] pusharglistnoret 1 ...................... <tImg_b>
  [124] extcall 43 .............................. return tImg_b
  [126] ret
end

on solveColors me, tpartColors
  [  0] getparam 1 .............................. <tpartColors>
  [  2] pusharglist 1 ........................... <tpartColors>
  [  4] extcall 139 ............................. <voidp(tpartColors)>
  [  6] jmpifz [ 13] ............................ if voidp(tpartColors) then
  [  9] pushcons 6 .............................. <"0,0,0">
  [ 11] setparam 1 .............................. tpartColors = "0,0,0"
  [ 13] pusharglist 0 ........................... <[]>
  [ 15] pushlist ................................ <[]>
  [ 16] setprop 388 ............................. pPartColors = []
  [ 19] getmovieprop 157 ........................ <the itemDelimiter>
  [ 21] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 23] pushcons 7 .............................. <",">
  [ 25] setmovieprop 157 ........................ the itemDelimiter = ","
  [ 27] pushint8 1 .............................. <1>
  [ 29] setlocal 1
  [ 31] getlocal 1
  [ 33] getparam 1 .............................. <tpartColors>
  [ 35] pushsymb 158 ............................ <#item>
  [ 37] pusharglist 2 ........................... <tpartColors, #item>
  [ 39] objcall 156 ............................. <tpartColors.item.count>
  [ 41] lteq
  [ 42] jmpifz [ 76] ............................ repeat with i = 1 to tpartColors.item.count
  [ 45] getprop 388 ............................. <pPartColors>
  [ 48] getparam 1 .............................. <tpartColors>
  [ 50] pushsymb 158 ............................ <#item>
  [ 52] getlocal 1 .............................. <i>
  [ 54] pusharglist 3 ........................... <tpartColors, #item, i>
  [ 56] objcall 159 ............................. <tpartColors.item[i]>
  [ 58] pusharglist 1 ........................... <tpartColors.item[i]>
  [ 60] extcall 89 .............................. <string(tpartColors.item[i])>
  [ 62] pusharglistnoret 2 ...................... <pPartColors, string(tpartColors.item[i])>
  [ 64] objcall 340 ............................. pPartColors.add(string(tpartColors.item[i]))
  [ 67] pushint8 1
  [ 69] getlocal 1
  [ 71] add
  [ 72] setlocal 1
  [ 74] endrepeat [ 31]
  [ 76] getprop 388 ............................. <pPartColors>
  [ 79] getobjprop 156 .......................... <pPartColors.count>
  [ 81] setlocal 2
  [ 83] getlocal 2
  [ 85] pushint8 4 .............................. <4>
  [ 87] lteq
  [ 88] jmpifz [110] ............................ repeat with j = pPartColors.count to 4
  [ 91] getprop 388 ............................. <pPartColors>
  [ 94] pushcons 8 .............................. <"*ffffff">
  [ 96] pusharglistnoret 2 ...................... <pPartColors, "*ffffff">
  [ 98] objcall 340 ............................. pPartColors.add("*ffffff")
  [101] pushint8 1
  [103] getlocal 2
  [105] add
  [106] setlocal 2
  [108] endrepeat [ 83]
  [110] getlocal 0 .............................. <tDelim>
  [112] setmovieprop 157 ........................ the itemDelimiter = tDelim
  [114] ret
end

on solveInk me, tPart
  [  0] getprop 383 ............................. <pClass>
  [  3] pushcons 9 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 90 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 20] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushint8 8 .............................. <8>
  [ 16] pusharglistnoret 1 ...................... <8>
  [ 18] extcall 43 .............................. return 8
  [ 20] getprop 383 ............................. <pClass>
  [ 23] pushcons 9 .............................. <".props">
  [ 25] joinstr ................................. <pClass & ".props">
  [ 26] pusharglist 1 ........................... <pClass & ".props">
  [ 28] extcall 194 ............................. <getmemnum(pClass & ".props")>
  [ 30] pushzero ................................ <0>
  [ 31] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 32] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 34] extcall 80 .............................. <value(field(getmemnum(pClass & ".props")))>
  [ 36] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 38] getlocal 0 .............................. <tPropList>
  [ 40] pusharglist 1 ........................... <tPropList>
  [ 42] extcall 135 ............................. <ilk(tPropList)>
  [ 44] pushsymb 136 ............................ <#propList>
  [ 46] nteq .................................... <ilk(tPropList) <> #propList>
  [ 47] jmpifz [ 74] ............................ if ilk(tPropList) <> #propList then / else
  [ 50] getparam 0 .............................. <me>
  [ 52] getprop 383 ............................. <pClass>
  [ 55] pushcons 10 ............................. <".props is not valid!">
  [ 57] joinstr ................................. <pClass & ".props is not valid!">
  [ 58] pushsymb 378 ............................ <#solveInk>
  [ 61] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveInk>
  [ 63] extcall 44 .............................. error(me, pClass & ".props is not valid!", #solveInk)
  [ 65] pushint8 8 .............................. <8>
  [ 67] pusharglistnoret 1 ...................... <8>
  [ 69] extcall 43 .............................. return 8
  [ 71] jmp [136]
  [ 74] getlocal 0 .............................. <tPropList>
  [ 76] getparam 1 .............................. <tPart>
  [ 78] pusharglist 2 ........................... <tPropList, tPart>
  [ 80] objcall 82 .............................. <tPropList[tPart]>
  [ 82] pusharglist 0 ........................... <>
  [ 84] extcall 92 .............................. <VOID>
  [ 86] eq ...................................... <tPropList[tPart] = VOID>
  [ 87] jmpifz [ 96] ............................ if tPropList[tPart] = VOID then
  [ 90] pushint8 8 .............................. <8>
  [ 92] pusharglistnoret 1 ...................... <8>
  [ 94] extcall 43 .............................. return 8
  [ 96] getlocal 0 .............................. <tPropList>
  [ 98] getparam 1 .............................. <tPart>
  [100] pusharglist 2 ........................... <tPropList, tPart>
  [102] objcall 82 .............................. <tPropList[tPart]>
  [104] pushsymb 179 ............................ <#ink>
  [106] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [108] objcall 82 .............................. <tPropList[tPart][#ink]>
  [110] pusharglist 0 ........................... <>
  [112] extcall 92 .............................. <VOID>
  [114] nteq .................................... <tPropList[tPart][#ink] <> VOID>
  [115] jmpifz [136] ............................ if tPropList[tPart][#ink] <> VOID then
  [118] getlocal 0 .............................. <tPropList>
  [120] getparam 1 .............................. <tPart>
  [122] pusharglist 2 ........................... <tPropList, tPart>
  [124] objcall 82 .............................. <tPropList[tPart]>
  [126] pushsymb 179 ............................ <#ink>
  [128] pusharglist 2 ........................... <tPropList[tPart], #ink>
  [130] objcall 82 .............................. <tPropList[tPart][#ink]>
  [132] pusharglistnoret 1 ...................... <tPropList[tPart][#ink]>
  [134] extcall 43 .............................. return tPropList[tPart][#ink]
  [136] pushint8 8 .............................. <8>
  [138] pusharglistnoret 1 ...................... <8>
  [140] extcall 43 .............................. return 8
  [142] ret
end

on solveBlend me, tPart
  [  0] getprop 383 ............................. <pClass>
  [  3] pushcons 9 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 90 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 20] ............................ if not memberExists(pClass & ".props") then
  [ 14] pushint8 100 ............................ <100>
  [ 16] pusharglistnoret 1 ...................... <100>
  [ 18] extcall 43 .............................. return 100
  [ 20] getprop 383 ............................. <pClass>
  [ 23] pushcons 9 .............................. <".props">
  [ 25] joinstr ................................. <pClass & ".props">
  [ 26] pusharglist 1 ........................... <pClass & ".props">
  [ 28] extcall 194 ............................. <getmemnum(pClass & ".props")>
  [ 30] pushzero ................................ <0>
  [ 31] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 32] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 34] extcall 80 .............................. <value(field(getmemnum(pClass & ".props")))>
  [ 36] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 38] getlocal 0 .............................. <tPropList>
  [ 40] pusharglist 1 ........................... <tPropList>
  [ 42] extcall 135 ............................. <ilk(tPropList)>
  [ 44] pushsymb 136 ............................ <#propList>
  [ 46] nteq .................................... <ilk(tPropList) <> #propList>
  [ 47] jmpifz [ 74] ............................ if ilk(tPropList) <> #propList then / else
  [ 50] getparam 0 .............................. <me>
  [ 52] getprop 383 ............................. <pClass>
  [ 55] pushcons 10 ............................. <".props is not valid!">
  [ 57] joinstr ................................. <pClass & ".props is not valid!">
  [ 58] pushsymb 379 ............................ <#solveBlend>
  [ 61] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveBlend>
  [ 63] extcall 44 .............................. error(me, pClass & ".props is not valid!", #solveBlend)
  [ 65] pushint8 100 ............................ <100>
  [ 67] pusharglistnoret 1 ...................... <100>
  [ 69] extcall 43 .............................. return 100
  [ 71] jmp [136]
  [ 74] getlocal 0 .............................. <tPropList>
  [ 76] getparam 1 .............................. <tPart>
  [ 78] pusharglist 2 ........................... <tPropList, tPart>
  [ 80] objcall 82 .............................. <tPropList[tPart]>
  [ 82] pusharglist 0 ........................... <>
  [ 84] extcall 92 .............................. <VOID>
  [ 86] eq ...................................... <tPropList[tPart] = VOID>
  [ 87] jmpifz [ 96] ............................ if tPropList[tPart] = VOID then
  [ 90] pushint8 100 ............................ <100>
  [ 92] pusharglistnoret 1 ...................... <100>
  [ 94] extcall 43 .............................. return 100
  [ 96] getlocal 0 .............................. <tPropList>
  [ 98] getparam 1 .............................. <tPart>
  [100] pusharglist 2 ........................... <tPropList, tPart>
  [102] objcall 82 .............................. <tPropList[tPart]>
  [104] pushsymb 107 ............................ <#blend>
  [106] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [108] objcall 82 .............................. <tPropList[tPart][#blend]>
  [110] pusharglist 0 ........................... <>
  [112] extcall 92 .............................. <VOID>
  [114] nteq .................................... <tPropList[tPart][#blend] <> VOID>
  [115] jmpifz [136] ............................ if tPropList[tPart][#blend] <> VOID then
  [118] getlocal 0 .............................. <tPropList>
  [120] getparam 1 .............................. <tPart>
  [122] pusharglist 2 ........................... <tPropList, tPart>
  [124] objcall 82 .............................. <tPropList[tPart]>
  [126] pushsymb 107 ............................ <#blend>
  [128] pusharglist 2 ........................... <tPropList[tPart], #blend>
  [130] objcall 82 .............................. <tPropList[tPart][#blend]>
  [132] pusharglistnoret 1 ...................... <tPropList[tPart][#blend]>
  [134] extcall 43 .............................. return tPropList[tPart][#blend]
  [136] pushint8 100 ............................ <100>
  [138] pusharglistnoret 1 ...................... <100>
  [140] extcall 43 .............................. return 100
  [142] ret
end

on solveStuffMembers me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0 .............................. tMemNum = 1
  [  4] pushcons 11 ............................. <"a">
  [  6] pusharglist 1 ........................... <"a">
  [  8] extcall 421 ............................. <charToNum("a")>
  [ 11] setlocal 1 .............................. i = charToNum("a")
  [ 13] pushint8 1 .............................. <1>
  [ 15] setlocal 2 .............................. j = 1
  [ 17] pusharglist 0 ........................... <[]>
  [ 19] pushlist ................................ <[]>
  [ 20] setprop 390 ............................. pLayerProps = []
  [ 23] pusharglist 0 ........................... <[]>
  [ 25] pushlist ................................ <[]>
  [ 26] setprop 394 ............................. pLoczList = []
  [ 29] getlocal 0 .............................. <tMemNum>
  [ 31] pushzero ................................ <0>
  [ 32] gt ...................................... <tMemNum > 0>
  [ 33] jmpifz [692] ............................ repeat while tMemNum > 0
  [ 36] pushzero ................................ <0>
  [ 37] setlocal 3 .............................. tFound = 0
  [ 39] getlocal 3 .............................. <tFound>
  [ 41] pushzero ................................ <0>
  [ 42] eq ...................................... <tFound = 0>
  [ 43] jmpifz [371] ............................ repeat while tFound = 0
  [ 46] getprop 383 ............................. <pClass>
  [ 49] pushcons 12 ............................. <"_">
  [ 51] joinstr ................................. <pClass & "_">
  [ 52] getlocal 1 .............................. <i>
  [ 54] pusharglist 1 ........................... <i>
  [ 56] extcall 422 ............................. <numToChar(i)>
  [ 59] joinstr ................................. <pClass & "_" & numToChar(i)>
  [ 60] pushcons 12 ............................. <"_">
  [ 62] joinstr ................................. <pClass & "_" & numToChar(i) & "_">
  [ 63] pushcons 13 ............................. <"0">
  [ 65] joinstr ................................. <pClass & "_" & numToChar(i) & "_" & "0">
  [ 66] setlocal 4 .............................. tMemNameA = pClass & "_" & numToChar(i) & "_" & "0"
  [ 68] getprop 387 ............................. <pDimensions>
  [ 71] pusharglist 1 ........................... <pDimensions>
  [ 73] extcall 423 ............................. <listp(pDimensions)>
  [ 76] jmpifz [109] ............................ if listp(pDimensions) then
  [ 79] getlocal 4 .............................. <tMemNameA>
  [ 81] pushcons 12 ............................. <"_">
  [ 83] joinstr ................................. <tMemNameA & "_">
  [ 84] getprop 387 ............................. <pDimensions>
  [ 87] pushint8 1 .............................. <1>
  [ 89] pusharglist 2 ........................... <pDimensions, 1>
  [ 91] objcall 82 .............................. <pDimensions[1]>
  [ 93] joinstr ................................. <tMemNameA & "_" & pDimensions[1]>
  [ 94] pushcons 12 ............................. <"_">
  [ 96] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_">
  [ 97] getprop 387 ............................. <pDimensions>
  [100] pushint8 2 .............................. <2>
  [102] pusharglist 2 ........................... <pDimensions, 2>
  [104] objcall 82 .............................. <pDimensions[2]>
  [106] joinstr ................................. <tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]>
  [107] setlocal 4 .............................. tMemNameA = tMemNameA & "_" & pDimensions[1] & "_" & pDimensions[2]
  [109] getprop 386 ............................. <pDirection>
  [112] pusharglist 1 ........................... <pDirection>
  [114] extcall 139 ............................. <voidp(pDirection)>
  [116] not ..................................... <not voidp(pDirection)>
  [117] jmpifz [187] ............................ if not voidp(pDirection) then / else
  [120] getprop 386 ............................. <pDirection>
  [123] pusharglist 1 ........................... <pDirection>
  [125] extcall 156 ............................. <count(pDirection)>
  [127] getlocal 2 .............................. <j>
  [129] gteq .................................... <count(pDirection) >= j>
  [130] jmpifz [160] ............................ if count(pDirection) >= j then / else
  [133] getlocal 4 .............................. <tMemNameA>
  [135] pushcons 12 ............................. <"_">
  [137] joinstr ................................. <tMemNameA & "_">
  [138] getprop 386 ............................. <pDirection>
  [141] getlocal 2 .............................. <j>
  [143] pusharglist 2 ........................... <pDirection, j>
  [145] objcall 82 .............................. <pDirection[j]>
  [147] joinstr ................................. <tMemNameA & "_" & pDirection[j]>
  [148] pushcons 12 ............................. <"_">
  [150] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_">
  [151] getprop 389 ............................. <pAnimFrame>
  [154] joinstr ................................. <tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame>
  [155] setlocal 5 .............................. tMemName = tMemNameA & "_" & pDirection[j] & "_" & pAnimFrame
  [157] jmp [184]
  [160] getlocal 4 .............................. <tMemNameA>
  [162] pushcons 12 ............................. <"_">
  [164] joinstr ................................. <tMemNameA & "_">
  [165] getprop 386 ............................. <pDirection>
  [168] pushint8 1 .............................. <1>
  [170] pusharglist 2 ........................... <pDirection, 1>
  [172] objcall 82 .............................. <pDirection[1]>
  [174] joinstr ................................. <tMemNameA & "_" & pDirection[1]>
  [175] pushcons 12 ............................. <"_">
  [177] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_">
  [178] getprop 389 ............................. <pAnimFrame>
  [181] joinstr ................................. <tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame>
  [182] setlocal 5 .............................. tMemName = tMemNameA & "_" & pDirection[1] & "_" & pAnimFrame
  [184] jmp [198]
  [187] getlocal 4 .............................. <tMemNameA>
  [189] pushcons 12 ............................. <"_">
  [191] joinstr ................................. <tMemNameA & "_">
  [192] getprop 389 ............................. <pAnimFrame>
  [195] joinstr ................................. <tMemNameA & "_" & pAnimFrame>
  [196] setlocal 5 .............................. tMemName = tMemNameA & "_" & pAnimFrame
  [198] getlocal 5 .............................. <tMemName>
  [200] pusharglist 1 ........................... <tMemName>
  [202] extcall 194 ............................. <getmemnum(tMemName)>
  [204] setlocal 0 .............................. tMemNum = getmemnum(tMemName)
  [206] getlocal 5 .............................. <tMemName>
  [208] setlocal 6 .............................. tOldMemName = tMemName
  [210] getlocal 0 .............................. <tMemNum>
  [212] not ..................................... <not tMemNum>
  [213] jmpifz [235] ............................ if not tMemNum then
  [216] getlocal 4 .............................. <tMemNameA>
  [218] pushcons 14 ............................. <"_0_">
  [220] joinstr ................................. <tMemNameA & "_0_">
  [221] getprop 389 ............................. <pAnimFrame>
  [224] joinstr ................................. <tMemNameA & "_0_" & pAnimFrame>
  [225] setlocal 5 .............................. tMemName = tMemNameA & "_0_" & pAnimFrame
  [227] getlocal 5 .............................. <tMemName>
  [229] pusharglist 1 ........................... <tMemName>
  [231] extcall 194 ............................. <getmemnum(tMemName)>
  [233] setlocal 0 .............................. tMemNum = getmemnum(tMemName)
  [235] getlocal 0 .............................. <tMemNum>
  [237] not ..................................... <not tMemNum>
  [238] getlocal 2 .............................. <j>
  [240] pushint8 1 .............................. <1>
  [242] eq ...................................... <j = 1>
  [243] and ..................................... <not tMemNum and (j = 1)>
  [244] jmpifz [364] ............................ if not tMemNum and (j = 1) then
  [247] pushzero ................................ <0>
  [248] setlocal 3 .............................. tFound = 0
  [250] getprop 386 ............................. <pDirection>
  [253] pusharglist 1 ........................... <pDirection>
  [255] extcall 423 ............................. <listp(pDirection)>
  [258] jmpifz [361] ............................ if listp(pDirection) then
  [261] pushint8 1 .............................. <1>
  [263] setlocal 7
  [265] getlocal 7
  [267] getprop 386 ............................. <pDirection>
  [270] getobjprop 156 .......................... <pDirection.count>
  [272] lteq
  [273] jmpifz [310] ............................ repeat with tdir = 1 to pDirection.count
  [276] getprop 386 ............................. <pDirection>
  [279] getlocal 7 .............................. <tdir>
  [281] getprop 386 ............................. <pDirection>
  [284] getlocal 7 .............................. <tdir>
  [286] pusharglist 2 ........................... <pDirection, tdir>
  [288] objcall 82 .............................. <pDirection[tdir]>
  [290] pushint8 1 .............................. <1>
  [292] add ..................................... <pDirection[tdir] + 1>
  [293] pusharglist 1 ........................... <pDirection[tdir] + 1>
  [295] extcall 79 .............................. <integer(pDirection[tdir] + 1)>
  [297] pusharglistnoret 3 ...................... <pDirection, tdir, integer(pDirection[tdir] + 1)>
  [299] objcall 236 ............................. pDirection[tdir] = integer(pDirection[tdir] + 1)
  [301] pushint8 1
  [303] getlocal 7
  [305] add
  [306] setlocal 7
  [308] endrepeat [265]
  [310] getprop 386 ............................. <pDirection>
  [313] pushint8 1 .............................. <1>
  [315] pusharglist 2 ........................... <pDirection, 1>
  [317] objcall 82 .............................. <pDirection[1]>
  [319] pushint8 8 .............................. <8>
  [321] eq ...................................... <pDirection[1] = 8>
  [322] jmpifz [361] ............................ if pDirection[1] = 8 then
  [325] getparam 0 .............................. <me>
  [327] pushcons 15 ............................. <"Couldn't define members:">
  [329] getprop 383 ............................. <pClass>
  [332] joinpadstr .............................. <"Couldn't define members:" && pClass>
  [333] pushsymb 424 ............................ <#solveMembers>
  [336] pusharglistnoret 3 ...................... <me, "Couldn't define members:" && pClass, #solveMembers>
  [338] extcall 44 .............................. error(me, "Couldn't define members:" && pClass, #solveMembers)
  [340] pushcons 16 ............................. <"room_object_placeholder">
  [342] pusharglist 1 ........................... <"room_object_placeholder">
  [344] extcall 194 ............................. <getmemnum("room_object_placeholder")>
  [346] setlocal 0 .............................. tMemNum = getmemnum("room_object_placeholder")
  [348] pushzero ................................ <0>
  [349] pushzero ................................ <0>
  [350] pushzero ................................ <0>
  [351] pusharglist 3 ........................... <[0, 0, 0]>
  [353] pushlist ................................ <[0, 0, 0]>
  [354] setprop 386 ............................. pDirection = [0, 0, 0]
  [357] pushint8 1 .............................. <1>
  [359] setlocal 3 .............................. tFound = 1
  [361] jmp [368] ............................... next repeat
  [364] pushint8 1 .............................. <1>
  [366] setlocal 3 .............................. tFound = 1
  [368] endrepeat [ 39]
  [371] getlocal 0 .............................. <tMemNum>
  [373] pushzero ................................ <0>
  [374] nteq .................................... <tMemNum <> 0>
  [375] jmpifz [675] ............................ if tMemNum <> 0 then
  [378] getprop 394 ............................. <pLoczList>
  [381] pusharglist 0 ........................... <[]>
  [383] pushlist ................................ <[]>
  [384] pusharglistnoret 2 ...................... <pLoczList, []>
  [386] objcall 340 ............................. pLoczList.add([])
  [389] pushzero ................................ <0>
  [390] setlocal 7
  [392] getlocal 7
  [394] pushint8 7 .............................. <7>
  [396] lteq
  [397] jmpifz [441] ............................ repeat with tdir = 0 to 7
  [400] getprop 394 ............................. <pLoczList>
  [403] pusharglist 1 ........................... <pLoczList>
  [405] objcall 425 ............................. <pLoczList.getLast()>
  [408] getparam 0 .............................. <me>
  [410] getlocal 1 .............................. <i>
  [412] pusharglist 1 ........................... <i>
  [414] extcall 422 ............................. <numToChar(i)>
  [417] getlocal 7 .............................. <tdir>
  [419] pusharglist 3 ........................... <me, numToChar(i), tdir>
  [421] objcall 382 ............................. <me.solveLocZ(numToChar(i), tdir)>
  [424] getlocal 1 .............................. <i>
  [426] add ..................................... <me.solveLocZ(numToChar(i), tdir) + i>
  [427] pusharglistnoret 2 ...................... <pLoczList.getLast(), me.solveLocZ(numToChar(i), tdir) + i>
  [429] objcall 340 ............................. pLoczList.getLast().add(me.solveLocZ(numToChar(i), tdir) + i)
  [432] pushint8 1
  [434] getlocal 7
  [436] add
  [437] setlocal 7
  [439] endrepeat [392]
  [441] getlocal 0 .............................. <tMemNum>
  [443] pushint8 1 .............................. <1>
  [445] lt ...................................... <tMemNum < 1>
  [446] jmpifz [465] ............................ if tMemNum < 1 then / else
  [449] getlocal 0 .............................. <tMemNum>
  [451] pusharglist 1 ........................... <tMemNum>
  [453] extcall 426 ............................. <abs(tMemNum)>
  [456] setlocal 0 .............................. tMemNum = abs(tMemNum)
  [458] pushint8 1 .............................. <1>
  [460] setlocal 8 .............................. tFlipH = 1
  [462] jmp [468]
  [465] pushzero ................................ <0>
  [466] setlocal 8 .............................. tFlipH = 0
  [468] pusharglist 0 ........................... <[:]>
  [470] pushproplist ............................ <[:]>
  [471] setlocal 9 .............................. tProps = [:]
  [473] getlocal 9 .............................. <tProps>
  [475] pushsymb 175 ............................ <#member>
  [477] getlocal 0 .............................. <tMemNum>
  [479] pusharglistnoret 3 ...................... <tProps, #member, tMemNum>
  [481] objcall 236 ............................. tProps[#member] = tMemNum
  [483] getlocal 9 .............................. <tProps>
  [485] pushsymb 177 ............................ <#width>
  [487] getlocal 0 .............................. <tMemNum>
  [489] pusharglist 1 ........................... <tMemNum>
  [491] extcall 175 ............................. <member(tMemNum)>
  [493] getobjprop 177 .......................... <member(tMemNum).width>
  [495] pusharglistnoret 3 ...................... <tProps, #width, member(tMemNum).width>
  [497] objcall 236 ............................. tProps[#width] = member(tMemNum).width
  [499] getlocal 9 .............................. <tProps>
  [501] pushsymb 178 ............................ <#height>
  [503] getlocal 0 .............................. <tMemNum>
  [505] pusharglist 1 ........................... <tMemNum>
  [507] extcall 175 ............................. <member(tMemNum)>
  [509] getobjprop 178 .......................... <member(tMemNum).height>
  [511] pusharglistnoret 3 ...................... <tProps, #height, member(tMemNum).height>
  [513] objcall 236 ............................. tProps[#height] = member(tMemNum).height
  [515] getlocal 9 .............................. <tProps>
  [517] pushsymb 179 ............................ <#ink>
  [519] getparam 0 .............................. <me>
  [521] getlocal 1 .............................. <i>
  [523] pusharglist 1 ........................... <i>
  [525] extcall 422 ............................. <numToChar(i)>
  [528] pusharglist 2 ........................... <me, numToChar(i)>
  [530] objcall 378 ............................. <me.solveInk(numToChar(i))>
  [533] pusharglistnoret 3 ...................... <tProps, #ink, me.solveInk(numToChar(i))>
  [535] objcall 236 ............................. tProps[#ink] = me.solveInk(numToChar(i))
  [537] getlocal 9 .............................. <tProps>
  [539] pushsymb 107 ............................ <#blend>
  [541] getparam 0 .............................. <me>
  [543] getlocal 1 .............................. <i>
  [545] pusharglist 1 ........................... <i>
  [547] extcall 422 ............................. <numToChar(i)>
  [550] pusharglist 2 ........................... <me, numToChar(i)>
  [552] objcall 379 ............................. <me.solveBlend(numToChar(i))>
  [555] pusharglistnoret 3 ...................... <tProps, #blend, me.solveBlend(numToChar(i))>
  [557] objcall 236 ............................. tProps[#blend] = me.solveBlend(numToChar(i))
  [559] getlocal 9 .............................. <tProps>
  [561] pushsymb 393 ............................ <#flipH>
  [564] getlocal 8 .............................. <tFlipH>
  [566] pusharglistnoret 3 ...................... <tProps, #flipH, tFlipH>
  [568] objcall 236 ............................. tProps[#flipH] = tFlipH
  [570] getlocal 2 .............................. <j>
  [572] getprop 388 ............................. <pPartColors>
  [575] getobjprop 156 .......................... <pPartColors.count>
  [577] lteq .................................... <j <= pPartColors.count>
  [578] jmpifz [665] ............................ if j <= pPartColors.count then
  [581] getprop 388 ............................. <pPartColors>
  [584] getlocal 2 .............................. <j>
  [586] pusharglist 2 ........................... <pPartColors, j>
  [588] objcall 82 .............................. <pPartColors[j]>
  [590] pusharglist 1 ........................... <pPartColors[j]>
  [592] extcall 89 .............................. <string(pPartColors[j])>
  [594] pushsymb 341 ............................ <#char>
  [597] pushint8 1 .............................. <1>
  [599] pusharglist 3 ........................... <string(pPartColors[j]), #char, 1>
  [601] objcall 159 ............................. <string(pPartColors[j]).char[1]>
  [603] pushcons 17 ............................. <"#">
  [605] eq ...................................... <string(pPartColors[j]).char[1] = "#">
  [606] jmpifz [638] ............................ if string(pPartColors[j]).char[1] = "#" then / else
  [609] getlocal 9 .............................. <tProps>
  [611] pushsymb 395 ............................ <#bgColor>
  [614] getprop 388 ............................. <pPartColors>
  [617] getlocal 2 .............................. <j>
  [619] pusharglist 2 ........................... <pPartColors, j>
  [621] objcall 82 .............................. <pPartColors[j]>
  [623] pusharglist 1 ........................... <pPartColors[j]>
  [625] extcall 53 .............................. <rgb(pPartColors[j])>
  [627] pusharglistnoret 3 ...................... <tProps, #bgColor, rgb(pPartColors[j])>
  [629] objcall 236 ............................. tProps[#bgColor] = rgb(pPartColors[j])
  [631] pushint8 41 ............................. <41>
  [633] setlocal 10 ............................. tInk = 41
  [635] jmp [665]
  [638] getlocal 9 .............................. <tProps>
  [640] pushsymb 395 ............................ <#bgColor>
  [643] getprop 388 ............................. <pPartColors>
  [646] getlocal 2 .............................. <j>
  [648] pusharglist 2 ........................... <pPartColors, j>
  [650] objcall 82 .............................. <pPartColors[j]>
  [652] pusharglist 1 ........................... <pPartColors[j]>
  [654] extcall 79 .............................. <integer(pPartColors[j])>
  [656] pusharglist 1 ........................... <integer(pPartColors[j])>
  [658] extcall 427 ............................. <paletteIndex(integer(pPartColors[j]))>
  [661] pusharglistnoret 3 ...................... <tProps, #bgColor, paletteIndex(integer(pPartColors[j]))>
  [663] objcall 236 ............................. tProps[#bgColor] = paletteIndex(integer(pPartColors[j]))
  [665] getprop 390 ............................. <pLayerProps>
  [668] getlocal 9 .............................. <tProps>
  [670] pusharglistnoret 2 ...................... <pLayerProps, tProps>
  [672] objcall 428 ............................. pLayerProps.append(tProps)
  [675] getlocal 1 .............................. <i>
  [677] pushint8 1 .............................. <1>
  [679] add ..................................... <i + 1>
  [680] setlocal 1 .............................. i = i + 1
  [682] getlocal 2 .............................. <j>
  [684] pushint8 1 .............................. <1>
  [686] add ..................................... <j + 1>
  [687] setlocal 2 .............................. j = j + 1
  [689] endrepeat [ 29]
  [692] getprop 390 ............................. <pLayerProps>
  [695] getobjprop 156 .......................... <pLayerProps.count>
  [697] pushzero ................................ <0>
  [698] gt ...................................... <pLayerProps.count > 0>
  [699] jmpifz [711] ............................ if pLayerProps.count > 0 then / else
  [702] pushint8 1 .............................. <1>
  [704] pusharglistnoret 1 ...................... <1>
  [706] extcall 43 .............................. return 1
  [708] jmp [730]
  [711] getparam 0 .............................. <me>
  [713] pushcons 15 ............................. <"Couldn't define members:">
  [715] getprop 383 ............................. <pClass>
  [718] joinpadstr .............................. <"Couldn't define members:" && pClass>
  [719] pushsymb 380 ............................ <#solveStuffMembers>
  [722] pusharglist 3 ........................... <me, "Couldn't define members:" && pClass, #solveStuffMembers>
  [724] extcall 44 .............................. <error(me, "Couldn't define members:" && pClass, #solveStuffMembers)>
  [726] pusharglistnoret 1 ...................... <error(me, "Couldn't define members:" && pClass, #solveStuffMembers)>
  [728] extcall 43 .............................. return error(me, "Couldn't define members:" && pClass, #solveStuffMembers)
  [730] ret
end

on solveItemMembers me
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tMemNum = 0
  [  3] pusharglist 0 ........................... <[]>
  [  5] pushlist ................................ <[]>
  [  6] setprop 390 ............................. pLayerProps = []
  [  9] pushcons 18 ............................. <"rightwall">
  [ 11] getprop 383 ............................. <pClass>
  [ 14] joinpadstr .............................. <"rightwall" && pClass>
  [ 15] setlocal 1 .............................. tMemName = "rightwall" && pClass
  [ 17] getlocal 1 .............................. <tMemName>
  [ 19] pusharglist 1 ........................... <tMemName>
  [ 21] extcall 194 ............................. <getmemnum(tMemName)>
  [ 23] setlocal 0 .............................. tMemNum = getmemnum(tMemName)
  [ 25] pusharglist 0 ........................... <[:]>
  [ 27] pushproplist ............................ <[:]>
  [ 28] setlocal 2 .............................. tProps = [:]
  [ 30] getlocal 2 .............................. <tProps>
  [ 32] pushsymb 393 ............................ <#flipH>
  [ 35] getlocal 0 .............................. <tMemNum>
  [ 37] pushzero ................................ <0>
  [ 38] lt ...................................... <tMemNum < 0>
  [ 39] pusharglistnoret 3 ...................... <tProps, #flipH, tMemNum < 0>
  [ 41] objcall 236 ............................. tProps[#flipH] = tMemNum < 0
  [ 43] getlocal 2 .............................. <tProps>
  [ 45] pushsymb 175 ............................ <#member>
  [ 47] getlocal 0 .............................. <tMemNum>
  [ 49] pusharglist 1 ........................... <tMemNum>
  [ 51] extcall 426 ............................. <abs(tMemNum)>
  [ 54] pusharglistnoret 3 ...................... <tProps, #member, abs(tMemNum)>
  [ 56] objcall 236 ............................. tProps[#member] = abs(tMemNum)
  [ 58] getlocal 0 .............................. <tMemNum>
  [ 60] pushzero ................................ <0>
  [ 61] nteq .................................... <tMemNum <> 0>
  [ 62] jmpifz [ 75] ............................ if tMemNum <> 0 then
  [ 65] getprop 390 ............................. <pLayerProps>
  [ 68] getlocal 2 .............................. <tProps>
  [ 70] pusharglistnoret 2 ...................... <pLayerProps, tProps>
  [ 72] objcall 428 ............................. pLayerProps.append(tProps)
  [ 75] getprop 390 ............................. <pLayerProps>
  [ 78] getobjprop 156 .......................... <pLayerProps.count>
  [ 80] pushzero ................................ <0>
  [ 81] gt ...................................... <pLayerProps.count > 0>
  [ 82] jmpifz [ 94] ............................ if pLayerProps.count > 0 then / else
  [ 85] pushint8 1 .............................. <1>
  [ 87] pusharglistnoret 1 ...................... <1>
  [ 89] extcall 43 .............................. return 1
  [ 91] jmp [113]
  [ 94] getparam 0 .............................. <me>
  [ 96] pushcons 15 ............................. <"Couldn't define members:">
  [ 98] getprop 383 ............................. <pClass>
  [101] joinpadstr .............................. <"Couldn't define members:" && pClass>
  [102] pushsymb 381 ............................ <#solveItemMembers>
  [105] pusharglist 3 ........................... <me, "Couldn't define members:" && pClass, #solveItemMembers>
  [107] extcall 44 .............................. <error(me, "Couldn't define members:" && pClass, #solveItemMembers)>
  [109] pusharglistnoret 1 ...................... <error(me, "Couldn't define members:" && pClass, #solveItemMembers)>
  [111] extcall 43 .............................. return error(me, "Couldn't define members:" && pClass, #solveItemMembers)
  [113] ret
end

on solveLocZ me, tPart, tdir
  [  0] getprop 383 ............................. <pClass>
  [  3] pushcons 9 .............................. <".props">
  [  5] joinstr ................................. <pClass & ".props">
  [  6] pusharglist 1 ........................... <pClass & ".props">
  [  8] extcall 90 .............................. <memberExists(pClass & ".props")>
  [ 10] not ..................................... <not memberExists(pClass & ".props")>
  [ 11] jmpifz [ 25] ............................ if not memberExists(pClass & ".props") then
  [ 14] getparam 1 .............................. <tPart>
  [ 16] pusharglist 1 ........................... <tPart>
  [ 18] extcall 421 ............................. <charToNum(tPart)>
  [ 21] pusharglistnoret 1 ...................... <charToNum(tPart)>
  [ 23] extcall 43 .............................. return charToNum(tPart)
  [ 25] getprop 383 ............................. <pClass>
  [ 28] pushcons 9 .............................. <".props">
  [ 30] joinstr ................................. <pClass & ".props">
  [ 31] pusharglist 1 ........................... <pClass & ".props">
  [ 33] extcall 194 ............................. <getmemnum(pClass & ".props")>
  [ 35] pushzero ................................ <0>
  [ 36] getfield ................................ <field(getmemnum(pClass & ".props"))>
  [ 37] pusharglist 1 ........................... <field(getmemnum(pClass & ".props"))>
  [ 39] extcall 80 .............................. <value(field(getmemnum(pClass & ".props")))>
  [ 41] setlocal 0 .............................. tPropList = value(field(getmemnum(pClass & ".props")))
  [ 43] getlocal 0 .............................. <tPropList>
  [ 45] pusharglist 1 ........................... <tPropList>
  [ 47] extcall 135 ............................. <ilk(tPropList)>
  [ 49] pushsymb 136 ............................ <#propList>
  [ 51] nteq .................................... <ilk(tPropList) <> #propList>
  [ 52] jmpifz [ 78] ............................ if ilk(tPropList) <> #propList then / else
  [ 55] getparam 0 .............................. <me>
  [ 57] getprop 383 ............................. <pClass>
  [ 60] pushcons 10 ............................. <".props is not valid!">
  [ 62] joinstr ................................. <pClass & ".props is not valid!">
  [ 63] pushsymb 382 ............................ <#solveLocZ>
  [ 66] pusharglistnoret 3 ...................... <me, pClass & ".props is not valid!", #solveLocZ>
  [ 68] extcall 44 .............................. error(me, pClass & ".props is not valid!", #solveLocZ)
  [ 70] pushzero ................................ <0>
  [ 71] pusharglistnoret 1 ...................... <0>
  [ 73] extcall 43 .............................. return 0
  [ 75] jmp [153]
  [ 78] getlocal 0 .............................. <tPropList>
  [ 80] getparam 1 .............................. <tPart>
  [ 82] pusharglist 2 ........................... <tPropList, tPart>
  [ 84] objcall 82 .............................. <tPropList[tPart]>
  [ 86] pusharglist 0 ........................... <>
  [ 88] extcall 92 .............................. <VOID>
  [ 90] eq ...................................... <tPropList[tPart] = VOID>
  [ 91] jmpifz [ 99] ............................ if tPropList[tPart] = VOID then
  [ 94] pushzero ................................ <0>
  [ 95] pusharglistnoret 1 ...................... <0>
  [ 97] extcall 43 .............................. return 0
  [ 99] getlocal 0 .............................. <tPropList>
  [101] getparam 1 .............................. <tPart>
  [103] pusharglist 2 ........................... <tPropList, tPart>
  [105] objcall 82 .............................. <tPropList[tPart]>
  [107] pushsymb 435 ............................ <#zshift>
  [110] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [112] objcall 82 .............................. <tPropList[tPart][#zshift]>
  [114] pusharglist 0 ........................... <>
  [116] extcall 92 .............................. <VOID>
  [118] eq ...................................... <tPropList[tPart][#zshift] = VOID>
  [119] jmpifz [127] ............................ if tPropList[tPart][#zshift] = VOID then
  [122] pushzero ................................ <0>
  [123] pusharglistnoret 1 ...................... <0>
  [125] extcall 43 .............................. return 0
  [127] getlocal 0 .............................. <tPropList>
  [129] getparam 1 .............................. <tPart>
  [131] pusharglist 2 ........................... <tPropList, tPart>
  [133] objcall 82 .............................. <tPropList[tPart]>
  [135] pushsymb 435 ............................ <#zshift>
  [138] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [140] objcall 82 .............................. <tPropList[tPart][#zshift]>
  [142] getobjprop 156 .......................... <tPropList[tPart][#zshift].count>
  [144] getparam 2 .............................. <tdir>
  [146] lteq .................................... <tPropList[tPart][#zshift].count <= tdir>
  [147] jmpifz [153] ............................ if tPropList[tPart][#zshift].count <= tdir then
  [150] pushzero ................................ <0>
  [151] setparam 2 .............................. tdir = 0
  [153] getlocal 0 .............................. <tPropList>
  [155] getparam 1 .............................. <tPart>
  [157] pusharglist 2 ........................... <tPropList, tPart>
  [159] objcall 82 .............................. <tPropList[tPart]>
  [161] pushsymb 435 ............................ <#zshift>
  [164] pusharglist 2 ........................... <tPropList[tPart], #zshift>
  [166] objcall 82 .............................. <tPropList[tPart][#zshift]>
  [168] getparam 2 .............................. <tdir>
  [170] pushint8 1 .............................. <1>
  [172] add ..................................... <tdir + 1>
  [173] pusharglist 2 ........................... <tPropList[tPart][#zshift], tdir + 1>
  [175] objcall 82 .............................. <tPropList[tPart][#zshift][tdir + 1]>
  [177] pusharglistnoret 1 ...................... <tPropList[tPart][#zshift][tdir + 1]>
  [179] extcall 43 .............................. return tPropList[tPart][#zshift][tdir + 1]
  [181] ret
end
