property pState, pFigurePartListLoadedFlag, pAvailableSetListLoadedFlag, pRegMsgStruct, pCheckingName, pAgeCheckFlag, pParentEmailNeededFlag, pParentEmailAddress, pTotpVerificationCodeNeededFlag, pTotpVerificationCode

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. pValidPartProps = [:]
  [  5] pusharglist 0 ........................... <[:]>
  [  7] pushproplist ............................ <[:]>
  [  8] setlocal 1 .............................. pValidPartGroups = [:]
  [ 10] pushzero ................................ <0>
  [ 11] setprop 418 ............................. pFigurePartListLoadedFlag = 0
  [ 14] pushzero ................................ <0>
  [ 15] setprop 419 ............................. pAvailableSetListLoadedFlag = 0
  [ 18] pushzero ................................ <0>
  [ 19] setprop 420 ............................. pState = 0
  [ 22] pusharglist 0 ........................... <>
  [ 24] extcall 92 .............................. <VOID>
  [ 26] setprop 421 ............................. pAgeCheckFlag = VOID
  [ 29] pusharglist 0 ........................... <>
  [ 31] extcall 92 .............................. <VOID>
  [ 33] setprop 422 ............................. pParentEmailNeededFlag = VOID
  [ 36] pushcons 0 .............................. <EMPTY>
  [ 38] setprop 423 ............................. pParentEmailAddress = EMPTY
  [ 41] pusharglist 0 ........................... <>
  [ 43] extcall 92 .............................. <VOID>
  [ 45] setprop 424 ............................. pTotpVerificationCodeNeededFlag = VOID
  [ 48] pushcons 0 .............................. <EMPTY>
  [ 50] setprop 425 ............................. pTotpVerificationCode = EMPTY
  [ 53] pusharglist 0 ........................... <[:]>
  [ 55] pushproplist ............................ <[:]>
  [ 56] setprop 426 ............................. pRegMsgStruct = [:]
  [ 59] getprop 426 ............................. <pRegMsgStruct>
  [ 62] pushcons 1 .............................. <"parentagree">
  [ 64] pushsymb 121 ............................ <#id>
  [ 66] pushint8 1 .............................. <1>
  [ 68] pushcons 2 .............................. <"type">
  [ 70] pushsymb 427 ............................ <#boolean>
  [ 73] pusharglist 4 ........................... <[#id: 1, "type": #boolean]>
  [ 75] pushproplist ............................ <[#id: 1, "type": #boolean]>
  [ 76] pusharglistnoret 3 ...................... <pRegMsgStruct, "parentagree", [#id: 1, "type": #boolean]>
  [ 78] objcall 174 ............................. pRegMsgStruct["parentagree"] = [#id: 1, "type": #boolean]
  [ 80] getprop 426 ............................. <pRegMsgStruct>
  [ 83] pushcons 3 .............................. <"name">
  [ 85] pushsymb 121 ............................ <#id>
  [ 87] pushint8 2 .............................. <2>
  [ 89] pushcons 2 .............................. <"type">
  [ 91] pushsymb 176 ............................ <#string>
  [ 93] pusharglist 4 ........................... <[#id: 2, "type": #string]>
  [ 95] pushproplist ............................ <[#id: 2, "type": #string]>
  [ 96] pusharglistnoret 3 ...................... <pRegMsgStruct, "name", [#id: 2, "type": #string]>
  [ 98] objcall 174 ............................. pRegMsgStruct["name"] = [#id: 2, "type": #string]
  [100] getprop 426 ............................. <pRegMsgStruct>
  [103] pushcons 4 .............................. <"password">
  [105] pushsymb 121 ............................ <#id>
  [107] pushint8 3 .............................. <3>
  [109] pushcons 2 .............................. <"type">
  [111] pushsymb 176 ............................ <#string>
  [113] pusharglist 4 ........................... <[#id: 3, "type": #string]>
  [115] pushproplist ............................ <[#id: 3, "type": #string]>
  [116] pusharglistnoret 3 ...................... <pRegMsgStruct, "password", [#id: 3, "type": #string]>
  [118] objcall 174 ............................. pRegMsgStruct["password"] = [#id: 3, "type": #string]
  [120] getprop 426 ............................. <pRegMsgStruct>
  [123] pushcons 5 .............................. <"figure">
  [125] pushsymb 121 ............................ <#id>
  [127] pushint8 4 .............................. <4>
  [129] pushcons 2 .............................. <"type">
  [131] pushsymb 176 ............................ <#string>
  [133] pusharglist 4 ........................... <[#id: 4, "type": #string]>
  [135] pushproplist ............................ <[#id: 4, "type": #string]>
  [136] pusharglistnoret 3 ...................... <pRegMsgStruct, "figure", [#id: 4, "type": #string]>
  [138] objcall 174 ............................. pRegMsgStruct["figure"] = [#id: 4, "type": #string]
  [140] getprop 426 ............................. <pRegMsgStruct>
  [143] pushcons 6 .............................. <"sex">
  [145] pushsymb 121 ............................ <#id>
  [147] pushint8 5 .............................. <5>
  [149] pushcons 2 .............................. <"type">
  [151] pushsymb 176 ............................ <#string>
  [153] pusharglist 4 ........................... <[#id: 5, "type": #string]>
  [155] pushproplist ............................ <[#id: 5, "type": #string]>
  [156] pusharglistnoret 3 ...................... <pRegMsgStruct, "sex", [#id: 5, "type": #string]>
  [158] objcall 174 ............................. pRegMsgStruct["sex"] = [#id: 5, "type": #string]
  [160] getprop 426 ............................. <pRegMsgStruct>
  [163] pushcons 7 .............................. <"customData">
  [165] pushsymb 121 ............................ <#id>
  [167] pushint8 6 .............................. <6>
  [169] pushcons 2 .............................. <"type">
  [171] pushsymb 176 ............................ <#string>
  [173] pusharglist 4 ........................... <[#id: 6, "type": #string]>
  [175] pushproplist ............................ <[#id: 6, "type": #string]>
  [176] pusharglistnoret 3 ...................... <pRegMsgStruct, "customData", [#id: 6, "type": #string]>
  [178] objcall 174 ............................. pRegMsgStruct["customData"] = [#id: 6, "type": #string]
  [180] getprop 426 ............................. <pRegMsgStruct>
  [183] pushcons 8 .............................. <"email">
  [185] pushsymb 121 ............................ <#id>
  [187] pushint8 7 .............................. <7>
  [189] pushcons 2 .............................. <"type">
  [191] pushsymb 176 ............................ <#string>
  [193] pusharglist 4 ........................... <[#id: 7, "type": #string]>
  [195] pushproplist ............................ <[#id: 7, "type": #string]>
  [196] pusharglistnoret 3 ...................... <pRegMsgStruct, "email", [#id: 7, "type": #string]>
  [198] objcall 174 ............................. pRegMsgStruct["email"] = [#id: 7, "type": #string]
  [200] getprop 426 ............................. <pRegMsgStruct>
  [203] pushcons 9 .............................. <"birthday">
  [205] pushsymb 121 ............................ <#id>
  [207] pushint8 8 .............................. <8>
  [209] pushcons 2 .............................. <"type">
  [211] pushsymb 176 ............................ <#string>
  [213] pusharglist 4 ........................... <[#id: 8, "type": #string]>
  [215] pushproplist ............................ <[#id: 8, "type": #string]>
  [216] pusharglistnoret 3 ...................... <pRegMsgStruct, "birthday", [#id: 8, "type": #string]>
  [218] objcall 174 ............................. pRegMsgStruct["birthday"] = [#id: 8, "type": #string]
  [220] getprop 426 ............................. <pRegMsgStruct>
  [223] pushcons 10 ............................. <"directMail">
  [225] pushsymb 121 ............................ <#id>
  [227] pushint8 9 .............................. <9>
  [229] pushcons 2 .............................. <"type">
  [231] pushsymb 427 ............................ <#boolean>
  [234] pusharglist 4 ........................... <[#id: 9, "type": #boolean]>
  [236] pushproplist ............................ <[#id: 9, "type": #boolean]>
  [237] pusharglistnoret 3 ...................... <pRegMsgStruct, "directMail", [#id: 9, "type": #boolean]>
  [239] objcall 174 ............................. pRegMsgStruct["directMail"] = [#id: 9, "type": #boolean]
  [241] getprop 426 ............................. <pRegMsgStruct>
  [244] pushcons 11 ............................. <"has_read_agreement">
  [246] pushsymb 121 ............................ <#id>
  [248] pushint8 10 ............................. <10>
  [250] pushcons 2 .............................. <"type">
  [252] pushsymb 427 ............................ <#boolean>
  [255] pusharglist 4 ........................... <[#id: 10, "type": #boolean]>
  [257] pushproplist ............................ <[#id: 10, "type": #boolean]>
  [258] pusharglistnoret 3 ...................... <pRegMsgStruct, "has_read_agreement", [#id: 10, "type": #boolean]>
  [260] objcall 174 ............................. pRegMsgStruct["has_read_agreement"] = [#id: 10, "type": #boolean]
  [262] getprop 426 ............................. <pRegMsgStruct>
  [265] pushcons 12 ............................. <"isp_id">
  [267] pushsymb 121 ............................ <#id>
  [269] pushint8 11 ............................. <11>
  [271] pushcons 2 .............................. <"type">
  [273] pushsymb 176 ............................ <#string>
  [275] pusharglist 4 ........................... <[#id: 11, "type": #string]>
  [277] pushproplist ............................ <[#id: 11, "type": #string]>
  [278] pusharglistnoret 3 ...................... <pRegMsgStruct, "isp_id", [#id: 11, "type": #string]>
  [280] objcall 174 ............................. pRegMsgStruct["isp_id"] = [#id: 11, "type": #string]
  [282] getprop 426 ............................. <pRegMsgStruct>
  [285] pushcons 13 ............................. <"partnersite">
  [287] pushsymb 121 ............................ <#id>
  [289] pushint8 12 ............................. <12>
  [291] pushcons 2 .............................. <"type">
  [293] pushsymb 176 ............................ <#string>
  [295] pusharglist 4 ........................... <[#id: 12, "type": #string]>
  [297] pushproplist ............................ <[#id: 12, "type": #string]>
  [298] pusharglistnoret 3 ...................... <pRegMsgStruct, "partnersite", [#id: 12, "type": #string]>
  [300] objcall 174 ............................. pRegMsgStruct["partnersite"] = [#id: 12, "type": #string]
  [302] getprop 426 ............................. <pRegMsgStruct>
  [305] pushcons 14 ............................. <"oldpassword">
  [307] pushsymb 121 ............................ <#id>
  [309] pushint8 13 ............................. <13>
  [311] pushcons 2 .............................. <"type">
  [313] pushsymb 176 ............................ <#string>
  [315] pusharglist 4 ........................... <[#id: 13, "type": #string]>
  [317] pushproplist ............................ <[#id: 13, "type": #string]>
  [318] pusharglistnoret 3 ...................... <pRegMsgStruct, "oldpassword", [#id: 13, "type": #string]>
  [320] objcall 174 ............................. pRegMsgStruct["oldpassword"] = [#id: 13, "type": #string]
  [322] getprop 426 ............................. <pRegMsgStruct>
  [325] pushcons 15 ............................. <"onlineStatus">
  [327] pushsymb 121 ............................ <#id>
  [329] pushint8 14 ............................. <14>
  [331] pushcons 2 .............................. <"type">
  [333] pushsymb 427 ............................ <#boolean>
  [336] pusharglist 4 ........................... <[#id: 14, "type": #boolean]>
  [338] pushproplist ............................ <[#id: 14, "type": #boolean]>
  [339] pusharglistnoret 3 ...................... <pRegMsgStruct, "onlineStatus", [#id: 14, "type": #boolean]>
  [341] objcall 174 ............................. pRegMsgStruct["onlineStatus"] = [#id: 14, "type": #boolean]
  [343] getprop 426 ............................. <pRegMsgStruct>
  [346] pushcons 16 ............................. <"publicProfileEnabled">
  [348] pushsymb 121 ............................ <#id>
  [350] pushint8 15 ............................. <15>
  [352] pushcons 2 .............................. <"type">
  [354] pushsymb 427 ............................ <#boolean>
  [357] pusharglist 4 ........................... <[#id: 15, "type": #boolean]>
  [359] pushproplist ............................ <[#id: 15, "type": #boolean]>
  [360] pusharglistnoret 3 ...................... <pRegMsgStruct, "publicProfileEnabled", [#id: 15, "type": #boolean]>
  [362] objcall 174 ............................. pRegMsgStruct["publicProfileEnabled"] = [#id: 15, "type": #boolean]
  [364] getprop 426 ............................. <pRegMsgStruct>
  [367] pushcons 17 ............................. <"friendRequestsEnabled">
  [369] pushsymb 121 ............................ <#id>
  [371] pushint8 16 ............................. <16>
  [373] pushcons 2 .............................. <"type">
  [375] pushsymb 427 ............................ <#boolean>
  [378] pusharglist 4 ........................... <[#id: 16, "type": #boolean]>
  [380] pushproplist ............................ <[#id: 16, "type": #boolean]>
  [381] pusharglistnoret 3 ...................... <pRegMsgStruct, "friendRequestsEnabled", [#id: 16, "type": #boolean]>
  [383] objcall 174 ............................. pRegMsgStruct["friendRequestsEnabled"] = [#id: 16, "type": #boolean]
  [385] getprop 426 ............................. <pRegMsgStruct>
  [388] pushcons 18 ............................. <"offlineMessagingEnabled">
  [390] pushsymb 121 ............................ <#id>
  [392] pushint8 17 ............................. <17>
  [394] pushcons 2 .............................. <"type">
  [396] pushsymb 427 ............................ <#boolean>
  [399] pusharglist 4 ........................... <[#id: 17, "type": #boolean]>
  [401] pushproplist ............................ <[#id: 17, "type": #boolean]>
  [402] pusharglistnoret 3 ...................... <pRegMsgStruct, "offlineMessagingEnabled", [#id: 17, "type": #boolean]>
  [404] objcall 174 ............................. pRegMsgStruct["offlineMessagingEnabled"] = [#id: 17, "type": #boolean]
  [406] getprop 426 ............................. <pRegMsgStruct>
  [409] pushcons 19 ............................. <"totpCode">
  [411] pushsymb 121 ............................ <#id>
  [413] pushint8 18 ............................. <18>
  [415] pushcons 2 .............................. <"type">
  [417] pushsymb 176 ............................ <#string>
  [419] pusharglist 4 ........................... <[#id: 18, "type": #string]>
  [421] pushproplist ............................ <[#id: 18, "type": #string]>
  [422] pusharglistnoret 3 ...................... <pRegMsgStruct, "totpCode", [#id: 18, "type": #string]>
  [424] objcall 174 ............................. pRegMsgStruct["totpCode"] = [#id: 18, "type": #string]
  [426] pushsymb 429 ............................ <#enterRoom>
  [429] getparam 0 .............................. <me>
  [431] pusharglist 1 ........................... <me>
  [433] objcall 162 ............................. <me.getID()>
  [435] pushsymb 5 .............................. <#closeFigureCreator>
  [437] pusharglistnoret 3 ...................... <#enterRoom, me.getID(), #closeFigureCreator>
  [439] extcall 428 ............................. registerMessage(#enterRoom, me.getID(), #closeFigureCreator)
  [442] pushsymb 430 ............................ <#changeRoom>
  [445] getparam 0 .............................. <me>
  [447] pusharglist 1 ........................... <me>
  [449] objcall 162 ............................. <me.getID()>
  [451] pushsymb 5 .............................. <#closeFigureCreator>
  [453] pusharglistnoret 3 ...................... <#changeRoom, me.getID(), #closeFigureCreator>
  [455] extcall 428 ............................. registerMessage(#changeRoom, me.getID(), #closeFigureCreator)
  [458] pushsymb 431 ............................ <#leaveRoom>
  [461] getparam 0 .............................. <me>
  [463] pusharglist 1 ........................... <me>
  [465] objcall 162 ............................. <me.getID()>
  [467] pushsymb 5 .............................. <#closeFigureCreator>
  [469] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #closeFigureCreator>
  [471] extcall 428 ............................. registerMessage(#leaveRoom, me.getID(), #closeFigureCreator)
  [474] pushsymb 432 ............................ <#show_registration>
  [477] getparam 0 .............................. <me>
  [479] pusharglist 1 ........................... <me>
  [481] objcall 162 ............................. <me.getID()>
  [483] pushsymb 4 .............................. <#openFigureCreator>
  [485] pusharglistnoret 3 ...................... <#show_registration, me.getID(), #openFigureCreator>
  [487] extcall 428 ............................. registerMessage(#show_registration, me.getID(), #openFigureCreator)
  [490] pushsymb 433 ............................ <#hide_registration>
  [493] getparam 0 .............................. <me>
  [495] pusharglist 1 ........................... <me>
  [497] objcall 162 ............................. <me.getID()>
  [499] pushsymb 5 .............................. <#closeFigureCreator>
  [501] pusharglistnoret 3 ...................... <#hide_registration, me.getID(), #closeFigureCreator>
  [503] extcall 428 ............................. registerMessage(#hide_registration, me.getID(), #closeFigureCreator)
  [506] pushsymb 434 ............................ <#figure_ready>
  [509] getparam 0 .............................. <me>
  [511] pusharglist 1 ........................... <me>
  [513] objcall 162 ............................. <me.getID()>
  [515] pushsymb 405 ............................ <#figureSystemReady>
  [518] pusharglistnoret 3 ...................... <#figure_ready, me.getID(), #figureSystemReady>
  [520] extcall 428 ............................. registerMessage(#figure_ready, me.getID(), #figureSystemReady)
  [523] ret
end

on deconstruct me
  [  0] pushsymb 429 ............................ <#enterRoom>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 162 ............................. <me.getID()>
  [  9] pusharglistnoret 2 ...................... <#enterRoom, me.getID()>
  [ 11] extcall 437 ............................. unregisterMessage(#enterRoom, me.getID())
  [ 14] pushsymb 430 ............................ <#changeRoom>
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 162 ............................. <me.getID()>
  [ 23] pusharglistnoret 2 ...................... <#changeRoom, me.getID()>
  [ 25] extcall 437 ............................. unregisterMessage(#changeRoom, me.getID())
  [ 28] pushsymb 431 ............................ <#leaveRoom>
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 162 ............................. <me.getID()>
  [ 37] pusharglistnoret 2 ...................... <#leaveRoom, me.getID()>
  [ 39] extcall 437 ............................. unregisterMessage(#leaveRoom, me.getID())
  [ 42] pushsymb 432 ............................ <#show_registration>
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 162 ............................. <me.getID()>
  [ 51] pusharglistnoret 2 ...................... <#show_registration, me.getID()>
  [ 53] extcall 437 ............................. unregisterMessage(#show_registration, me.getID())
  [ 56] pushsymb 433 ............................ <#hide_registration>
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglist 1 ........................... <me>
  [ 63] objcall 162 ............................. <me.getID()>
  [ 65] pusharglistnoret 2 ...................... <#hide_registration, me.getID()>
  [ 67] extcall 437 ............................. unregisterMessage(#hide_registration, me.getID())
  [ 70] pushsymb 434 ............................ <#figure_ready>
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglist 1 ........................... <me>
  [ 77] objcall 162 ............................. <me.getID()>
  [ 79] pusharglistnoret 2 ...................... <#figure_ready, me.getID()>
  [ 81] extcall 437 ............................. unregisterMessage(#figure_ready, me.getID())
  [ 84] getparam 0 .............................. <me>
  [ 86] pushcons 20 ............................. <"reset">
  [ 88] pusharglist 2 ........................... <me, "reset">
  [ 90] objcall 150 ............................. <me.updateState("reset")>
  [ 92] pusharglistnoret 1 ...................... <me.updateState("reset")>
  [ 94] extcall 89 .............................. return me.updateState("reset")
  [ 96] ret
end

on setBlockTime me, tdata
  [  0] pushcons 21 ............................. <"blocktime">
  [  2] getparam 1 .............................. <tdata>
  [  4] pusharglistnoret 2 ...................... <"blocktime", tdata>
  [  6] extcall 438 ............................. setPref("blocktime", tdata)
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglistnoret 1 ...................... <me>
  [ 13] objcall 5 ............................... me.closeFigureCreator()
  [ 15] pushsymb 119 ............................ <#alert>
  [ 17] pushsymb 158 ............................ <#title>
  [ 19] pushcons 22 ............................. <"alert_win_coppa">
  [ 21] pushsymb 120 ............................ <#msg>
  [ 23] pushcons 23 ............................. <"alert_reg_age">
  [ 25] pushsymb 121 ............................ <#id>
  [ 27] pushcons 24 ............................. <"underage">
  [ 29] pushsymb 122 ............................ <#modal>
  [ 31] pushint8 1 .............................. <1>
  [ 33] pusharglist 8 ........................... <[#title: "alert_win_coppa", #msg: "alert_reg_age", #id: "underage", #modal: 1]>
  [ 35] pushproplist ............................ <[#title: "alert_win_coppa", #msg: "alert_reg_age", #id: "underage", #modal: 1]>
  [ 36] pusharglistnoret 2 ...................... <#alert, [#title: "alert_win_coppa", #msg: "alert_reg_age", #id: "underage", #modal: 1]>
  [ 38] extcall 118 ............................. executeMessage(#alert, [#title: "alert_win_coppa", #msg: "alert_reg_age", #id: "underage", #modal: 1])
  [ 40] pushcons 25 ............................. <"connection.info.id">
  [ 42] pusharglist 1 ........................... <"connection.info.id">
  [ 44] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 46] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 48] extcall 373 ............................. <removeConnection(getVariable("connection.info.id"))>
  [ 51] pusharglistnoret 1 ...................... <removeConnection(getVariable("connection.info.id"))>
  [ 53] extcall 89 .............................. return removeConnection(getVariable("connection.info.id"))
  [ 55] ret
end

on continueBlocking me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 5 ............................... me.closeFigureCreator()
  [  6] pushsymb 119 ............................ <#alert>
  [  8] pushsymb 158 ............................ <#title>
  [ 10] pushcons 22 ............................. <"alert_win_coppa">
  [ 12] pushsymb 120 ............................ <#msg>
  [ 14] pushcons 26 ............................. <"alert_reg_blocked">
  [ 16] pushsymb 121 ............................ <#id>
  [ 18] pushcons 24 ............................. <"underage">
  [ 20] pushsymb 122 ............................ <#modal>
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglist 8 ........................... <[#title: "alert_win_coppa", #msg: "alert_reg_blocked", #id: "underage", #modal: 1]>
  [ 26] pushproplist ............................ <[#title: "alert_win_coppa", #msg: "alert_reg_blocked", #id: "underage", #modal: 1]>
  [ 27] pusharglistnoret 2 ...................... <#alert, [#title: "alert_win_coppa", #msg: "alert_reg_blocked", #id: "underage", #modal: 1]>
  [ 29] extcall 118 ............................. executeMessage(#alert, [#title: "alert_win_coppa", #msg: "alert_reg_blocked", #id: "underage", #modal: 1])
  [ 31] pushcons 25 ............................. <"connection.info.id">
  [ 33] pusharglist 1 ........................... <"connection.info.id">
  [ 35] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 37] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 39] extcall 373 ............................. <removeConnection(getVariable("connection.info.id"))>
  [ 42] pusharglistnoret 1 ...................... <removeConnection(getVariable("connection.info.id"))>
  [ 44] extcall 89 .............................. return removeConnection(getVariable("connection.info.id"))
  [ 46] ret
end

on getRealtime me
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 88 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 11] pushcons 27 ............................. <"COPPA_REG_GETREALTIME">
  [ 13] pusharglistnoret 2 ...................... <getConnection(getVariable("connection.info.id")), "COPPA_REG_GETREALTIME">
  [ 15] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("COPPA_REG_GETREALTIME")
  [ 18] ret
end

on checkBlockTime me
  [  0] pushcons 28 ............................. <"Blocktime">
  [  2] pusharglist 1 ........................... <"Blocktime">
  [  4] extcall 441 ............................. <getPref("Blocktime")>
  [  7] setlocal 0 .............................. tdata = getPref("Blocktime")
  [  9] pushcons 25 ............................. <"connection.info.id">
  [ 11] pusharglist 1 ........................... <"connection.info.id">
  [ 13] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 15] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 17] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 20] pushcons 29 ............................. <"COPPA_REG_CHECKTIME">
  [ 22] pushsymb 176 ............................ <#string>
  [ 24] getlocal 0 .............................. <tdata>
  [ 26] pusharglist 2 ........................... <[#string: tdata]>
  [ 28] pushproplist ............................ <[#string: tdata]>
  [ 29] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "COPPA_REG_CHECKTIME", [#string: tdata]>
  [ 31] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("COPPA_REG_CHECKTIME", [#string: tdata])
  [ 34] ret
end

on resetBlockTime me
  [  0] pushcons 21 ............................. <"blocktime">
  [  2] pushcons 30 ............................. <"0">
  [  4] pusharglistnoret 2 ...................... <"blocktime", "0">
  [  6] extcall 438 ............................. setPref("blocktime", "0")
  [  9] getparam 0 .............................. <me>
  [ 11] pushcons 31 ............................. <"openFigureCreator">
  [ 13] pusharglist 2 ........................... <me, "openFigureCreator">
  [ 15] objcall 150 ............................. <me.updateState("openFigureCreator")>
  [ 17] pusharglistnoret 1 ...................... <me.updateState("openFigureCreator")>
  [ 19] extcall 89 .............................. return me.updateState("openFigureCreator")
  [ 21] ret
end

on openFigureCreator me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 31 ............................. <"openFigureCreator">
  [  4] pusharglist 2 ........................... <me, "openFigureCreator">
  [  6] objcall 150 ............................. <me.updateState("openFigureCreator")>
  [  8] pusharglistnoret 1 ...................... <me.updateState("openFigureCreator")>
  [ 10] extcall 89 .............................. return me.updateState("openFigureCreator")
  [ 12] ret
end

on openFigureUpdate me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 32 ............................. <"openFigureUpdate">
  [  4] pusharglist 2 ........................... <me, "openFigureUpdate">
  [  6] objcall 150 ............................. <me.updateState("openFigureUpdate")>
  [  8] pusharglistnoret 1 ...................... <me.updateState("openFigureUpdate")>
  [ 10] extcall 89 .............................. return me.updateState("openFigureUpdate")
  [ 12] ret
end

on closeFigureCreator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 370 ............................. <me.getInterface()>
  [  7] pusharglist 1 ........................... <me.getInterface()>
  [  9] objcall 5 ............................... <me.getInterface().closeFigureCreator()>
  [ 11] pusharglistnoret 1 ...................... <me.getInterface().closeFigureCreator()>
  [ 13] extcall 89 .............................. return me.getInterface().closeFigureCreator()
  [ 15] ret
end

on reRegistrationRequired me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"openForcedUpdate">
  [  4] pusharglist 2 ........................... <me, "openForcedUpdate">
  [  6] objcall 150 ............................. <me.updateState("openForcedUpdate")>
  [  8] pusharglistnoret 1 ...................... <me.updateState("openForcedUpdate")>
  [ 10] extcall 89 .............................. return me.updateState("openForcedUpdate")
  [ 12] ret
end

on figureSystemReady me
  [  0] getparam 0 .............................. <me>
  [  2] getprop 420 ............................. <pState>
  [  5] pusharglist 2 ........................... <me, pState>
  [  7] objcall 150 ............................. <me.updateState(pState)>
  [  9] pusharglistnoret 1 ...................... <me.updateState(pState)>
  [ 11] extcall 89 .............................. return me.updateState(pState)
  [ 13] ret
end

on checkUserName me, tNameStr
  [  0] pushsymb 442 ............................ <#string_validator>
  [  3] pusharglist 1 ........................... <#string_validator>
  [  5] extcall 95 .............................. <objectExists(#string_validator)>
  [  7] jmpifz [ 85] ............................ if objectExists(#string_validator) then
  [ 10] pushsymb 442 ............................ <#string_validator>
  [ 13] pusharglist 1 ........................... <#string_validator>
  [ 15] extcall 110 ............................. <getObject(#string_validator)>
  [ 17] getparam 1 .............................. <tNameStr>
  [ 19] pusharglist 2 ........................... <getObject(#string_validator), tNameStr>
  [ 21] objcall 443 ............................. <getObject(#string_validator).validateString(tNameStr)>
  [ 24] not ..................................... <not getObject(#string_validator).validateString(tNameStr)>
  [ 25] jmpifz [ 85] ............................ if not getObject(#string_validator).validateString(tNameStr) then
  [ 28] pushsymb 442 ............................ <#string_validator>
  [ 31] pusharglist 1 ........................... <#string_validator>
  [ 33] extcall 110 ............................. <getObject(#string_validator)>
  [ 35] pusharglist 1 ........................... <getObject(#string_validator)>
  [ 37] objcall 444 ............................. <getObject(#string_validator).getFailedChar()>
  [ 40] setlocal 0 .............................. tFailed = getObject(#string_validator).getFailedChar()
  [ 42] pushcons 34 ............................. <"alert_InvalidChar">
  [ 44] pushcons 35 ............................. <"alert_InvalidUserName">
  [ 46] pusharglist 1 ........................... <"alert_InvalidUserName">
  [ 48] extcall 74 .............................. <getText("alert_InvalidUserName")>
  [ 50] pushcons 36 ............................. <"\\x">
  [ 52] getlocal 0 .............................. <tFailed>
  [ 54] pusharglist 3 ........................... <getText("alert_InvalidUserName"), "\\x", tFailed>
  [ 56] extcall 445 ............................. <replaceChunks(getText("alert_InvalidUserName"), "\\x", tFailed)>
  [ 59] pusharglistnoret 2 ...................... <"alert_InvalidChar", replaceChunks(getText("alert_InvalidUserName"), "\\x", tFailed)>
  [ 61] extcall 134 ............................. setText("alert_InvalidChar", replaceChunks(getText("alert_InvalidUserName"), "\\x", tFailed))
  [ 63] pushsymb 119 ............................ <#alert>
  [ 65] pushsymb 120 ............................ <#msg>
  [ 67] pushcons 34 ............................. <"alert_InvalidChar">
  [ 69] pushsymb 121 ............................ <#id>
  [ 71] pushcons 37 ............................. <"nameinvalid">
  [ 73] pusharglist 4 ........................... <[#msg: "alert_InvalidChar", #id: "nameinvalid"]>
  [ 75] pushproplist ............................ <[#msg: "alert_InvalidChar", #id: "nameinvalid"]>
  [ 76] pusharglistnoret 2 ...................... <#alert, [#msg: "alert_InvalidChar", #id: "nameinvalid"]>
  [ 78] extcall 118 ............................. executeMessage(#alert, [#msg: "alert_InvalidChar", #id: "nameinvalid"])
  [ 80] pushzero ................................ <0>
  [ 81] pusharglistnoret 1 ...................... <0>
  [ 83] extcall 89 .............................. return 0
  [ 85] getparam 1 .............................. <tNameStr>
  [ 87] setprop 446 ............................. pCheckingName = tNameStr
  [ 90] pushcons 25 ............................. <"connection.info.id">
  [ 92] pushsymb 447 ............................ <#info>
  [ 95] pusharglist 2 ........................... <"connection.info.id", #info>
  [ 97] extcall 88 .............................. <getVariable("connection.info.id", #info)>
  [ 99] pusharglist 1 ........................... <getVariable("connection.info.id", #info)>
  [101] extcall 372 ............................. <connectionExists(getVariable("connection.info.id", #info))>
  [104] jmpifz [138] ............................ if connectionExists(getVariable("connection.info.id", #info)) then
  [107] pushcons 25 ............................. <"connection.info.id">
  [109] pushsymb 447 ............................ <#info>
  [112] pusharglist 2 ........................... <"connection.info.id", #info>
  [114] extcall 88 .............................. <getVariable("connection.info.id", #info)>
  [116] pusharglist 1 ........................... <getVariable("connection.info.id", #info)>
  [118] extcall 439 ............................. <getConnection(getVariable("connection.info.id", #info))>
  [121] pushcons 38 ............................. <"APPROVENAME">
  [123] pushsymb 176 ............................ <#string>
  [125] getparam 1 .............................. <tNameStr>
  [127] pushsymb 199 ............................ <#integer>
  [129] pushzero ................................ <0>
  [130] pusharglist 4 ........................... <[#string: tNameStr, #integer: 0]>
  [132] pushproplist ............................ <[#string: tNameStr, #integer: 0]>
  [133] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id", #info)), "APPROVENAME", [#string: tNameStr, #integer: 0]>
  [135] objcall 440 ............................. getConnection(getVariable("connection.info.id", #info)).send("APPROVENAME", [#string: tNameStr, #integer: 0])
  [138] pushint8 1 .............................. <1>
  [140] pusharglistnoret 1 ...................... <1>
  [142] extcall 89 .............................. return 1
  [144] ret
end

on sendNewFigureDataToServer me, tPropList
  [  0] pushcons 39 ............................. <"Figure_System">
  [  2] pusharglist 1 ........................... <"Figure_System">
  [  4] extcall 95 .............................. <objectExists("Figure_System")>
  [  6] not ..................................... <not objectExists("Figure_System")>
  [  7] jmpifz [ 25] ............................ if not objectExists("Figure_System") then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 40 ............................. <"Figure system object not found">
  [ 14] pushsymb 329 ............................ <#sendNewFigureDataToServer>
  [ 17] pusharglist 3 ........................... <me, "Figure system object not found", #sendNewFigureDataToServer>
  [ 19] extcall 85 .............................. <error(me, "Figure system object not found", #sendNewFigureDataToServer)>
  [ 21] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #sendNewFigureDataToServer)>
  [ 23] extcall 89 .............................. return error(me, "Figure system object not found", #sendNewFigureDataToServer)
  [ 25] getparam 1 .............................. <tPropList>
  [ 27] pushcons 5 .............................. <"figure">
  [ 29] pusharglist 2 ........................... <tPropList, "figure">
  [ 31] objcall 105 ............................. <tPropList["figure"]>
  [ 33] pusharglist 1 ........................... <tPropList["figure"]>
  [ 35] extcall 100 ............................. <voidp(tPropList["figure"])>
  [ 37] not ..................................... <not voidp(tPropList["figure"])>
  [ 38] jmpifz [ 86] ............................ if not voidp(tPropList["figure"]) then
  [ 41] pushcons 39 ............................. <"Figure_System">
  [ 43] pusharglist 1 ........................... <"Figure_System">
  [ 45] extcall 110 ............................. <getObject("Figure_System")>
  [ 47] getparam 1 .............................. <tPropList>
  [ 49] pushcons 5 .............................. <"figure">
  [ 51] pusharglist 2 ........................... <tPropList, "figure">
  [ 53] objcall 105 ............................. <tPropList["figure"]>
  [ 55] getparam 1 .............................. <tPropList>
  [ 57] pushcons 6 .............................. <"sex">
  [ 59] pusharglist 2 ........................... <tPropList, "sex">
  [ 61] objcall 105 ............................. <tPropList["sex"]>
  [ 63] pusharglist 3 ........................... <getObject("Figure_System"), tPropList["figure"], tPropList["sex"]>
  [ 65] objcall 449 ............................. <getObject("Figure_System").GenerateFigureDataToServerMode(tPropList["figure"], tPropList["sex"])>
  [ 68] setlocal 0 .............................. tFigure = getObject("Figure_System").GenerateFigureDataToServerMode(tPropList["figure"], tPropList["sex"])
  [ 70] getparam 1 .............................. <tPropList>
  [ 72] pushcons 5 .............................. <"figure">
  [ 74] getlocal 0 .............................. <tFigure>
  [ 76] pushcons 41 ............................. <"figuretoServer">
  [ 78] pusharglist 2 ........................... <tFigure, "figuretoServer">
  [ 80] objcall 105 ............................. <tFigure["figuretoServer"]>
  [ 82] pusharglistnoret 3 ...................... <tPropList, "figure", tFigure["figuretoServer"]>
  [ 84] objcall 174 ............................. tPropList["figure"] = tFigure["figuretoServer"]
  [ 86] pushcons 42 ............................. <"user_isp">
  [ 88] pusharglist 1 ........................... <"user_isp">
  [ 90] extcall 86 .............................. <variableExists("user_isp")>
  [ 92] jmpifz [123] ............................ if variableExists("user_isp") then
  [ 95] pushcons 42 ............................. <"user_isp">
  [ 97] pusharglist 1 ........................... <"user_isp">
  [ 99] extcall 88 .............................. <getVariable("user_isp")>
  [101] pusharglist 1 ........................... <getVariable("user_isp")>
  [103] extcall 100 ............................. <voidp(getVariable("user_isp"))>
  [105] not ..................................... <not voidp(getVariable("user_isp"))>
  [106] jmpifz [123] ............................ if not voidp(getVariable("user_isp")) then
  [109] getparam 1 .............................. <tPropList>
  [111] pushcons 12 ............................. <"isp_id">
  [113] pushcons 42 ............................. <"user_isp">
  [115] pusharglist 1 ........................... <"user_isp">
  [117] extcall 88 .............................. <getVariable("user_isp")>
  [119] pusharglistnoret 3 ...................... <tPropList, "isp_id", getVariable("user_isp")>
  [121] objcall 174 ............................. tPropList["isp_id"] = getVariable("user_isp")
  [123] pushcons 43 ............................. <"user_partnersite">
  [125] pusharglist 1 ........................... <"user_partnersite">
  [127] extcall 86 .............................. <variableExists("user_partnersite")>
  [129] jmpifz [160] ............................ if variableExists("user_partnersite") then
  [132] pushcons 43 ............................. <"user_partnersite">
  [134] pusharglist 1 ........................... <"user_partnersite">
  [136] extcall 88 .............................. <getVariable("user_partnersite")>
  [138] pusharglist 1 ........................... <getVariable("user_partnersite")>
  [140] extcall 100 ............................. <voidp(getVariable("user_partnersite"))>
  [142] not ..................................... <not voidp(getVariable("user_partnersite"))>
  [143] jmpifz [160] ............................ if not voidp(getVariable("user_partnersite")) then
  [146] getparam 1 .............................. <tPropList>
  [148] pushcons 13 ............................. <"partnersite">
  [150] pushcons 43 ............................. <"user_partnersite">
  [152] pusharglist 1 ........................... <"user_partnersite">
  [154] extcall 88 .............................. <getVariable("user_partnersite")>
  [156] pusharglistnoret 3 ...................... <tPropList, "partnersite", getVariable("user_partnersite")>
  [158] objcall 174 ............................. tPropList["partnersite"] = getVariable("user_partnersite")
  [160] pusharglist 0 ........................... <[:]>
  [162] pushproplist ............................ <[:]>
  [163] setlocal 1 .............................. tMsg = [:]
  [165] pushint8 1 .............................. <1>
  [167] setlocal 2
  [169] getlocal 2
  [171] getparam 1 .............................. <tPropList>
  [173] getobjprop 104 .......................... <tPropList.count>
  [175] lteq
  [176] jmpifz [390] ............................ repeat with f = 1 to tPropList.count
  [179] getparam 1 .............................. <tPropList>
  [181] getlocal 2 .............................. <f>
  [183] pusharglist 2 ........................... <tPropList, f>
  [185] objcall 204 ............................. <tPropList.getPropAt(f)>
  [187] setlocal 3 .............................. tProp = tPropList.getPropAt(f)
  [189] getparam 1 .............................. <tPropList>
  [191] getlocal 3 .............................. <tProp>
  [193] pusharglist 2 ........................... <tPropList, tProp>
  [195] objcall 105 ............................. <tPropList[tProp]>
  [197] pusharglist 1 ........................... <tPropList[tProp]>
  [199] extcall 100 ............................. <voidp(tPropList[tProp])>
  [201] jmpifz [222] ............................ if voidp(tPropList[tProp]) then
  [204] getparam 0 .............................. <me>
  [206] pushcons 44 ............................. <"Data missing!!">
  [208] getlocal 3 .............................. <tProp>
  [210] joinpadstr .............................. <"Data missing!!" && tProp>
  [211] pushsymb 329 ............................ <#sendNewFigureDataToServer>
  [214] pusharglist 3 ........................... <me, "Data missing!!" && tProp, #sendNewFigureDataToServer>
  [216] extcall 85 .............................. <error(me, "Data missing!!" && tProp, #sendNewFigureDataToServer)>
  [218] pusharglistnoret 1 ...................... <error(me, "Data missing!!" && tProp, #sendNewFigureDataToServer)>
  [220] extcall 89 .............................. return error(me, "Data missing!!" && tProp, #sendNewFigureDataToServer)
  [222] getparam 1 .............................. <tPropList>
  [224] getlocal 3 .............................. <tProp>
  [226] pusharglist 2 ........................... <tPropList, tProp>
  [228] objcall 105 ............................. <tPropList[tProp]>
  [230] setlocal 4 .............................. tValue = tPropList[tProp]
  [232] getprop 426 ............................. <pRegMsgStruct>
  [235] getlocal 3 .............................. <tProp>
  [237] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [239] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [241] pusharglist 1 ........................... <pRegMsgStruct[tProp]>
  [243] extcall 100 ............................. <voidp(pRegMsgStruct[tProp])>
  [245] not ..................................... <not voidp(pRegMsgStruct[tProp])>
  [246] jmpifz [381] ............................ if not voidp(pRegMsgStruct[tProp]) then
  [249] getlocal 1 .............................. <tMsg>
  [251] pushsymb 450 ............................ <#short>
  [254] getprop 426 ............................. <pRegMsgStruct>
  [257] getlocal 3 .............................. <tProp>
  [259] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [261] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [263] getobjprop 121 .......................... <pRegMsgStruct[tProp].id>
  [265] pusharglistnoret 3 ...................... <tMsg, #short, pRegMsgStruct[tProp].id>
  [267] objcall 250 ............................. tMsg.addProp(#short, pRegMsgStruct[tProp].id)
  [269] getprop 426 ............................. <pRegMsgStruct>
  [272] getlocal 3 .............................. <tProp>
  [274] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [276] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [278] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [280] pushsymb 427 ............................ <#boolean>
  [283] eq ...................................... <pRegMsgStruct[tProp].type = #boolean>
  [284] jmpifz [295] ............................ if pRegMsgStruct[tProp].type = #boolean then
  [287] getlocal 4 .............................. <tValue>
  [289] pusharglist 1 ........................... <tValue>
  [291] extcall 199 ............................. <integer(tValue)>
  [293] setlocal 4 .............................. tValue = integer(tValue)
  [295] getprop 426 ............................. <pRegMsgStruct>
  [298] getlocal 3 .............................. <tProp>
  [300] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [302] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [304] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [306] pushsymb 176 ............................ <#string>
  [308] eq ...................................... <pRegMsgStruct[tProp].type = #string>
  [309] getlocal 4 .............................. <tValue>
  [311] getobjprop 102 .......................... <tValue.ilk>
  [313] pushsymb 176 ............................ <#string>
  [315] nteq .................................... <tValue.ilk <> #string>
  [316] and ..................................... <(pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string)>
  [317] jmpifz [328] ............................ if (pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string) then
  [320] getlocal 4 .............................. <tValue>
  [322] pusharglist 1 ........................... <tValue>
  [324] extcall 176 ............................. <string(tValue)>
  [326] setlocal 4 .............................. tValue = string(tValue)
  [328] getprop 426 ............................. <pRegMsgStruct>
  [331] getlocal 3 .............................. <tProp>
  [333] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [335] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [337] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [339] pushsymb 450 ............................ <#short>
  [342] eq ...................................... <pRegMsgStruct[tProp].type = #short>
  [343] getlocal 4 .............................. <tValue>
  [345] getobjprop 102 .......................... <tValue.ilk>
  [347] pushsymb 199 ............................ <#integer>
  [349] nteq .................................... <tValue.ilk <> #integer>
  [350] and ..................................... <(pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer)>
  [351] jmpifz [362] ............................ if (pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer) then
  [354] getlocal 4 .............................. <tValue>
  [356] pusharglist 1 ........................... <tValue>
  [358] extcall 199 ............................. <integer(tValue)>
  [360] setlocal 4 .............................. tValue = integer(tValue)
  [362] getlocal 1 .............................. <tMsg>
  [364] getprop 426 ............................. <pRegMsgStruct>
  [367] getlocal 3 .............................. <tProp>
  [369] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [371] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [373] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [375] getlocal 4 .............................. <tValue>
  [377] pusharglistnoret 3 ...................... <tMsg, pRegMsgStruct[tProp].type, tValue>
  [379] objcall 250 ............................. tMsg.addProp(pRegMsgStruct[tProp].type, tValue)
  [381] pushint8 1
  [383] getlocal 2
  [385] add
  [386] setlocal 2
  [388] endrepeat [169]
  [390] pushcons 25 ............................. <"connection.info.id">
  [392] pusharglist 1 ........................... <"connection.info.id">
  [394] extcall 88 .............................. <getVariable("connection.info.id")>
  [396] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [398] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [401] jmpifz [431] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [404] pushcons 25 ............................. <"connection.info.id">
  [406] pusharglist 1 ........................... <"connection.info.id">
  [408] extcall 88 .............................. <getVariable("connection.info.id")>
  [410] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [412] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [415] pushcons 45 ............................. <"REGISTER">
  [417] getlocal 1 .............................. <tMsg>
  [419] pusharglist 3 ........................... <getConnection(getVariable("connection.info.id")), "REGISTER", tMsg>
  [421] objcall 440 ............................. <getConnection(getVariable("connection.info.id")).send("REGISTER", tMsg)>
  [424] pusharglistnoret 1 ...................... <getConnection(getVariable("connection.info.id")).send("REGISTER", tMsg)>
  [426] extcall 89 .............................. return getConnection(getVariable("connection.info.id")).send("REGISTER", tMsg)
  [428] jmp [453]
  [431] getparam 0 .............................. <me>
  [433] pushcons 46 ............................. <"Connection not found:">
  [435] pushcons 25 ............................. <"connection.info.id">
  [437] pusharglist 1 ........................... <"connection.info.id">
  [439] extcall 88 .............................. <getVariable("connection.info.id")>
  [441] joinpadstr .............................. <"Connection not found:" && getVariable("connection.info.id")>
  [442] pushsymb 329 ............................ <#sendNewFigureDataToServer>
  [445] pusharglist 3 ........................... <me, "Connection not found:" && getVariable("connection.info.id"), #sendNewFigureDataToServer>
  [447] extcall 85 .............................. <error(me, "Connection not found:" && getVariable("connection.info.id"), #sendNewFigureDataToServer)>
  [449] pusharglistnoret 1 ...................... <error(me, "Connection not found:" && getVariable("connection.info.id"), #sendNewFigureDataToServer)>
  [451] extcall 89 .............................. return error(me, "Connection not found:" && getVariable("connection.info.id"), #sendNewFigureDataToServer)
  [453] ret
end

on sendFigureUpdateToServer me, tPropList
  [  0] pushcons 39 ............................. <"Figure_System">
  [  2] pusharglist 1 ........................... <"Figure_System">
  [  4] extcall 95 .............................. <objectExists("Figure_System")>
  [  6] not ..................................... <not objectExists("Figure_System")>
  [  7] jmpifz [ 24] ............................ if not objectExists("Figure_System") then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 40 ............................. <"Figure system object not found">
  [ 14] pushsymb 149 ............................ <#sendFigureUpdateToServer>
  [ 16] pusharglist 3 ........................... <me, "Figure system object not found", #sendFigureUpdateToServer>
  [ 18] extcall 85 .............................. <error(me, "Figure system object not found", #sendFigureUpdateToServer)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #sendFigureUpdateToServer)>
  [ 22] extcall 89 .............................. return error(me, "Figure system object not found", #sendFigureUpdateToServer)
  [ 24] getparam 1 .............................. <tPropList>
  [ 26] pushcons 5 .............................. <"figure">
  [ 28] pusharglist 2 ........................... <tPropList, "figure">
  [ 30] objcall 105 ............................. <tPropList["figure"]>
  [ 32] pusharglist 1 ........................... <tPropList["figure"]>
  [ 34] extcall 100 ............................. <voidp(tPropList["figure"])>
  [ 36] not ..................................... <not voidp(tPropList["figure"])>
  [ 37] jmpifz [ 85] ............................ if not voidp(tPropList["figure"]) then
  [ 40] pushcons 39 ............................. <"Figure_System">
  [ 42] pusharglist 1 ........................... <"Figure_System">
  [ 44] extcall 110 ............................. <getObject("Figure_System")>
  [ 46] getparam 1 .............................. <tPropList>
  [ 48] pushcons 5 .............................. <"figure">
  [ 50] pusharglist 2 ........................... <tPropList, "figure">
  [ 52] objcall 105 ............................. <tPropList["figure"]>
  [ 54] getparam 1 .............................. <tPropList>
  [ 56] pushcons 6 .............................. <"sex">
  [ 58] pusharglist 2 ........................... <tPropList, "sex">
  [ 60] objcall 105 ............................. <tPropList["sex"]>
  [ 62] pusharglist 3 ........................... <getObject("Figure_System"), tPropList["figure"], tPropList["sex"]>
  [ 64] objcall 449 ............................. <getObject("Figure_System").GenerateFigureDataToServerMode(tPropList["figure"], tPropList["sex"])>
  [ 67] setlocal 0 .............................. tFigure = getObject("Figure_System").GenerateFigureDataToServerMode(tPropList["figure"], tPropList["sex"])
  [ 69] getparam 1 .............................. <tPropList>
  [ 71] pushcons 5 .............................. <"figure">
  [ 73] getlocal 0 .............................. <tFigure>
  [ 75] pushcons 41 ............................. <"figuretoServer">
  [ 77] pusharglist 2 ........................... <tFigure, "figuretoServer">
  [ 79] objcall 105 ............................. <tFigure["figuretoServer"]>
  [ 81] pusharglistnoret 3 ...................... <tPropList, "figure", tFigure["figuretoServer"]>
  [ 83] objcall 174 ............................. tPropList["figure"] = tFigure["figuretoServer"]
  [ 85] getparam 1 .............................. <tPropList>
  [ 87] pushcons 4 .............................. <"password">
  [ 89] pusharglist 2 ........................... <tPropList, "password">
  [ 91] objcall 105 ............................. <tPropList["password"]>
  [ 93] pusharglist 1 ........................... <tPropList["password"]>
  [ 95] extcall 100 ............................. <voidp(tPropList["password"])>
  [ 97] not ..................................... <not voidp(tPropList["password"])>
  [ 98] jmpifz [145] ............................ if not voidp(tPropList["password"]) then
  [101] getparam 1 .............................. <tPropList>
  [103] pushcons 4 .............................. <"password">
  [105] pusharglist 2 ........................... <tPropList, "password">
  [107] objcall 105 ............................. <tPropList["password"]>
  [109] peek 0 .................................. case tPropList["password"] of
  [111] pushcons 0 .............................. <EMPTY>
  [113] nteq
  [114] jmpifz [127] ............................ (case) EMPTY, ...
  [117] peek 0
  [119] pusharglist 0 ........................... <>
  [121] extcall 92 .............................. <VOID>
  [123] eq
  [124] jmpifz [143] ............................ (case) ..., VOID:
  [127] pop 1
  [129] getparam 0 .............................. <me>
  [131] pushcons 47 ............................. <"Password was reseted, abort update!">
  [133] pushsymb 149 ............................ <#sendFigureUpdateToServer>
  [135] pusharglist 3 ........................... <me, "Password was reseted, abort update!", #sendFigureUpdateToServer>
  [137] extcall 85 .............................. <error(me, "Password was reseted, abort update!", #sendFigureUpdateToServer)>
  [139] pusharglistnoret 1 ...................... <error(me, "Password was reseted, abort update!", #sendFigureUpdateToServer)>
  [141] extcall 89 .............................. return error(me, "Password was reseted, abort update!", #sendFigureUpdateToServer)
  [143] pop 1
  [145] pusharglist 0 ........................... <[:]>
  [147] pushproplist ............................ <[:]>
  [148] setlocal 1 .............................. tMsg = [:]
  [150] pushcons 5 .............................. <"figure">
  [152] pushcons 6 .............................. <"sex">
  [154] pushcons 7 .............................. <"customData">
  [156] pushcons 10 ............................. <"directMail">
  [158] pushcons 11 ............................. <"has_read_agreement">
  [160] pushcons 1 .............................. <"parentagree">
  [162] pushcons 15 ............................. <"onlineStatus">
  [164] pushcons 16 ............................. <"publicProfileEnabled">
  [166] pushcons 17 ............................. <"friendRequestsEnabled">
  [168] pushcons 18 ............................. <"offlineMessagingEnabled">
  [170] pushcons 19 ............................. <"totpCode">
  [172] pusharglist 11 .......................... <["figure", "sex", "customData", "directMail", "has_read_agreement", "parentagree", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled", "totpCode"]>
  [174] pushlist ................................ <["figure", "sex", "customData", "directMail", "has_read_agreement", "parentagree", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled", "totpCode"]>
  [175] peek 0
  [177] pusharglist 1
  [179] extcall 104
  [181] pushint8 1
  [183] peek 0
  [185] peek 2
  [187] lteq
  [188] jmpifz [435] ............................ repeat with tProp in ["figure", "sex", "customData", "directMail", "has_read_agreement", "parentagree", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled", "totpCode"]
  [191] peek 2
  [193] peek 1
  [195] pusharglist 2
  [197] extcall 105
  [199] setlocal 2
  [201] getparam 1 .............................. <tPropList>
  [203] getlocal 2 .............................. <tProp>
  [205] pusharglist 2 ........................... <tPropList, tProp>
  [207] objcall 105 ............................. <tPropList[tProp]>
  [209] setlocal 3 .............................. tValue = tPropList[tProp]
  [211] pushzero ................................ <0>
  [212] setlocal 4 .............................. tValueExists = 0
  [214] pushsymb 109 ............................ <#session>
  [216] pusharglist 1 ........................... <#session>
  [218] extcall 110 ............................. <getObject(#session)>
  [220] pushcons 48 ............................. <"user_">
  [222] getlocal 2 .............................. <tProp>
  [224] joinstr ................................. <"user_" & tProp>
  [225] pusharglist 2 ........................... <getObject(#session), "user_" & tProp>
  [227] objcall 175 ............................. <getObject(#session).exists("user_" & tProp)>
  [229] jmpifz [253] ............................ if getObject(#session).exists("user_" & tProp) then
  [232] pushsymb 109 ............................ <#session>
  [234] pusharglist 1 ........................... <#session>
  [236] extcall 110 ............................. <getObject(#session)>
  [238] pushcons 48 ............................. <"user_">
  [240] getlocal 2 .............................. <tProp>
  [242] joinstr ................................. <"user_" & tProp>
  [243] pusharglist 2 ........................... <getObject(#session), "user_" & tProp>
  [245] objcall 177 ............................. <getObject(#session).get("user_" & tProp)>
  [247] setlocal 5 .............................. tStoredValue = getObject(#session).get("user_" & tProp)
  [249] pushint8 1 .............................. <1>
  [251] setlocal 4 .............................. tValueExists = 1
  [253] getlocal 3 .............................. <tValue>
  [255] pusharglist 1 ........................... <[tValue]>
  [257] pushlist ................................ <[tValue]>
  [258] getlocal 5 .............................. <tStoredValue>
  [260] pusharglist 2 ........................... <[tValue], tStoredValue>
  [262] objcall 303 ............................. <[tValue].getPos(tStoredValue)>
  [265] not ..................................... <not [tValue].getPos(tStoredValue)>
  [266] getlocal 3 .............................. <tValue>
  [268] pusharglist 1 ........................... <tValue>
  [270] extcall 100 ............................. <voidp(tValue)>
  [272] not ..................................... <not voidp(tValue)>
  [273] and ..................................... <not [tValue].getPos(tStoredValue) and not voidp(tValue)>
  [274] getlocal 4 .............................. <tValueExists>
  [276] not ..................................... <not tValueExists>
  [277] or ...................................... <(not [tValue].getPos(tStoredValue) and not voidp(tValue)) or not tValueExists>
  [278] jmpifz [430] ............................ if (not [tValue].getPos(tStoredValue) and not voidp(tValue)) or not tValueExists then
  [281] getprop 426 ............................. <pRegMsgStruct>
  [284] getlocal 2 .............................. <tProp>
  [286] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [288] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [290] pusharglist 1 ........................... <pRegMsgStruct[tProp]>
  [292] extcall 100 ............................. <voidp(pRegMsgStruct[tProp])>
  [294] not ..................................... <not voidp(pRegMsgStruct[tProp])>
  [295] jmpifz [430] ............................ if not voidp(pRegMsgStruct[tProp]) then
  [298] getlocal 1 .............................. <tMsg>
  [300] pushsymb 450 ............................ <#short>
  [303] getprop 426 ............................. <pRegMsgStruct>
  [306] getlocal 2 .............................. <tProp>
  [308] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [310] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [312] getobjprop 121 .......................... <pRegMsgStruct[tProp].id>
  [314] pusharglistnoret 3 ...................... <tMsg, #short, pRegMsgStruct[tProp].id>
  [316] objcall 250 ............................. tMsg.addProp(#short, pRegMsgStruct[tProp].id)
  [318] getprop 426 ............................. <pRegMsgStruct>
  [321] getlocal 2 .............................. <tProp>
  [323] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [325] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [327] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [329] pushsymb 427 ............................ <#boolean>
  [332] eq ...................................... <pRegMsgStruct[tProp].type = #boolean>
  [333] jmpifz [344] ............................ if pRegMsgStruct[tProp].type = #boolean then
  [336] getlocal 3 .............................. <tValue>
  [338] pusharglist 1 ........................... <tValue>
  [340] extcall 199 ............................. <integer(tValue)>
  [342] setlocal 3 .............................. tValue = integer(tValue)
  [344] getprop 426 ............................. <pRegMsgStruct>
  [347] getlocal 2 .............................. <tProp>
  [349] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [351] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [353] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [355] pushsymb 176 ............................ <#string>
  [357] eq ...................................... <pRegMsgStruct[tProp].type = #string>
  [358] getlocal 3 .............................. <tValue>
  [360] getobjprop 102 .......................... <tValue.ilk>
  [362] pushsymb 176 ............................ <#string>
  [364] nteq .................................... <tValue.ilk <> #string>
  [365] and ..................................... <(pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string)>
  [366] jmpifz [377] ............................ if (pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string) then
  [369] getlocal 3 .............................. <tValue>
  [371] pusharglist 1 ........................... <tValue>
  [373] extcall 176 ............................. <string(tValue)>
  [375] setlocal 3 .............................. tValue = string(tValue)
  [377] getprop 426 ............................. <pRegMsgStruct>
  [380] getlocal 2 .............................. <tProp>
  [382] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [384] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [386] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [388] pushsymb 450 ............................ <#short>
  [391] eq ...................................... <pRegMsgStruct[tProp].type = #short>
  [392] getlocal 3 .............................. <tValue>
  [394] getobjprop 102 .......................... <tValue.ilk>
  [396] pushsymb 199 ............................ <#integer>
  [398] nteq .................................... <tValue.ilk <> #integer>
  [399] and ..................................... <(pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer)>
  [400] jmpifz [411] ............................ if (pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer) then
  [403] getlocal 3 .............................. <tValue>
  [405] pusharglist 1 ........................... <tValue>
  [407] extcall 199 ............................. <integer(tValue)>
  [409] setlocal 3 .............................. tValue = integer(tValue)
  [411] getlocal 1 .............................. <tMsg>
  [413] getprop 426 ............................. <pRegMsgStruct>
  [416] getlocal 2 .............................. <tProp>
  [418] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [420] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [422] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [424] getlocal 3 .............................. <tValue>
  [426] pusharglistnoret 3 ...................... <tMsg, pRegMsgStruct[tProp].type, tValue>
  [428] objcall 250 ............................. tMsg.addProp(pRegMsgStruct[tProp].type, tValue)
  [430] pushint8 1
  [432] add
  [433] endrepeat [183]
  [435] pop 3
  [437] pushcons 25 ............................. <"connection.info.id">
  [439] pusharglist 1 ........................... <"connection.info.id">
  [441] extcall 88 .............................. <getVariable("connection.info.id")>
  [443] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [445] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [448] jmpifz [478] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [451] pushcons 25 ............................. <"connection.info.id">
  [453] pusharglist 1 ........................... <"connection.info.id">
  [455] extcall 88 .............................. <getVariable("connection.info.id")>
  [457] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [459] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [462] pushcons 49 ............................. <"UPDATE">
  [464] getlocal 1 .............................. <tMsg>
  [466] pusharglist 3 ........................... <getConnection(getVariable("connection.info.id")), "UPDATE", tMsg>
  [468] objcall 440 ............................. <getConnection(getVariable("connection.info.id")).send("UPDATE", tMsg)>
  [471] pusharglistnoret 1 ...................... <getConnection(getVariable("connection.info.id")).send("UPDATE", tMsg)>
  [473] extcall 89 .............................. return getConnection(getVariable("connection.info.id")).send("UPDATE", tMsg)
  [475] jmp [499]
  [478] getparam 0 .............................. <me>
  [480] pushcons 46 ............................. <"Connection not found:">
  [482] pushcons 25 ............................. <"connection.info.id">
  [484] pusharglist 1 ........................... <"connection.info.id">
  [486] extcall 88 .............................. <getVariable("connection.info.id")>
  [488] joinpadstr .............................. <"Connection not found:" && getVariable("connection.info.id")>
  [489] pushsymb 149 ............................ <#sendFigureUpdateToServer>
  [491] pusharglist 3 ........................... <me, "Connection not found:" && getVariable("connection.info.id"), #sendFigureUpdateToServer>
  [493] extcall 85 .............................. <error(me, "Connection not found:" && getVariable("connection.info.id"), #sendFigureUpdateToServer)>
  [495] pusharglistnoret 1 ...................... <error(me, "Connection not found:" && getVariable("connection.info.id"), #sendFigureUpdateToServer)>
  [497] extcall 89 .............................. return error(me, "Connection not found:" && getVariable("connection.info.id"), #sendFigureUpdateToServer)
  [499] ret
end

on newFigureReady me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 5 ............................... me.closeFigureCreator()
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 50 ............................. <"start">
  [ 10] pusharglistnoret 2 ...................... <me, "start">
  [ 12] objcall 150 ............................. me.updateState("start")
  [ 14] pushint8 1 .............................. <1>
  [ 16] pusharglistnoret 1 ...................... <1>
  [ 18] extcall 89 .............................. return 1
  [ 20] ret
end

on figureUpdateReady me
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 88 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 35] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 51 ............................. <"INFORETRIEVE">
  [ 27] pusharglistnoret 2 ...................... <getConnection(getVariable("connection.info.id")), "INFORETRIEVE">
  [ 29] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("INFORETRIEVE")
  [ 32] jmp [ 53]
  [ 35] getparam 0 .............................. <me>
  [ 37] pushcons 46 ............................. <"Connection not found:">
  [ 39] pushcons 25 ............................. <"connection.info.id">
  [ 41] pusharglist 1 ........................... <"connection.info.id">
  [ 43] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 45] joinpadstr .............................. <"Connection not found:" && getVariable("connection.info.id")>
  [ 46] pushsymb 407 ............................ <#figureUpdateReady>
  [ 49] pusharglistnoret 3 ...................... <me, "Connection not found:" && getVariable("connection.info.id"), #figureUpdateReady>
  [ 51] extcall 85 .............................. error(me, "Connection not found:" && getVariable("connection.info.id"), #figureUpdateReady)
  [ 53] pushsymb 109 ............................ <#session>
  [ 55] pusharglist 1 ........................... <#session>
  [ 57] extcall 110 ............................. <getObject(#session)>
  [ 59] pushcons 52 ............................. <"conf_parent_email_request_reregistration">
  [ 61] pusharglist 2 ........................... <getObject(#session), "conf_parent_email_request_reregistration">
  [ 63] objcall 175 ............................. <getObject(#session).exists("conf_parent_email_request_reregistration")>
  [ 65] jmpifz [ 90] ............................ if getObject(#session).exists("conf_parent_email_request_reregistration") then
  [ 68] pushsymb 109 ............................ <#session>
  [ 70] pusharglist 1 ........................... <#session>
  [ 72] extcall 110 ............................. <getObject(#session)>
  [ 74] pushcons 52 ............................. <"conf_parent_email_request_reregistration">
  [ 76] pusharglist 2 ........................... <getObject(#session), "conf_parent_email_request_reregistration">
  [ 78] objcall 177 ............................. <getObject(#session).get("conf_parent_email_request_reregistration")>
  [ 80] jmpifz [ 90] ............................ if getObject(#session).get("conf_parent_email_request_reregistration") then
  [ 83] getparam 0 .............................. <me>
  [ 85] pusharglistnoret 1 ...................... <me>
  [ 87] objcall 411 ............................. me.sendParentEmail()
  [ 90] getparam 0 .............................. <me>
  [ 92] pusharglistnoret 1 ...................... <me>
  [ 94] objcall 5 ............................... me.closeFigureCreator()
  [ 96] getparam 0 .............................. <me>
  [ 98] pushcons 50 ............................. <"start">
  [100] pusharglist 2 ........................... <me, "start">
  [102] objcall 150 ............................. <me.updateState("start")>
  [104] pusharglistnoret 1 ...................... <me.updateState("start")>
  [106] extcall 89 .............................. return me.updateState("start")
  [108] ret
end

on setAvailableSetList me, tList
  [  0] getprop 418 ............................. <pFigurePartListLoadedFlag>
  [  3] getparam 1 .............................. <tList>
  [  5] pusharglist 1 ........................... <tList>
  [  7] extcall 100 ............................. <voidp(tList)>
  [  9] not ..................................... <not voidp(tList)>
  [ 10] and ..................................... <pFigurePartListLoadedFlag and not voidp(tList)>
  [ 11] jmpifz [ 80] ............................ if pFigurePartListLoadedFlag and not voidp(tList) then
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 1 .............................. <tList>
  [ 18] pusharglistnoret 2 ...................... <me, tList>
  [ 20] objcall 456 ............................. me.initializeSelectablePartList(tList)
  [ 23] pushint8 1 .............................. <1>
  [ 25] setprop 419 ............................. pAvailableSetListLoadedFlag = 1
  [ 28] getprop 420 ............................. <pState>
  [ 31] peek 0 .................................. case pState of
  [ 33] pushcons 31 ............................. <"openFigureCreator">
  [ 35] eq
  [ 36] jmpifz [ 56] ............................ (case) "openFigureCreator":
  [ 39] pop 1
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 31 ............................. <"openFigureCreator">
  [ 45] pusharglist 2 ........................... <me, "openFigureCreator">
  [ 47] objcall 150 ............................. <me.updateState("openFigureCreator")>
  [ 49] pusharglistnoret 1 ...................... <me.updateState("openFigureCreator")>
  [ 51] extcall 89 .............................. return me.updateState("openFigureCreator")
  [ 53] jmp [ 78]
  [ 56] peek 0
  [ 58] pushcons 32 ............................. <"openFigureUpdate">
  [ 60] eq
  [ 61] jmpifz [ 78] ............................ (case) "openFigureUpdate":
  [ 64] pop 1
  [ 66] getparam 0 .............................. <me>
  [ 68] pushcons 32 ............................. <"openFigureUpdate">
  [ 70] pusharglist 2 ........................... <me, "openFigureUpdate">
  [ 72] objcall 150 ............................. <me.updateState("openFigureUpdate")>
  [ 74] pusharglistnoret 1 ...................... <me.updateState("openFigureUpdate")>
  [ 76] extcall 89 .............................. return me.updateState("openFigureUpdate")
  [ 78] pop 1 ................................... end case
  [ 80] ret
end

on getAvailableSetList me
  [  0] getprop 418 ............................. <pFigurePartListLoadedFlag>
  [  3] pushint8 1 .............................. <1>
  [  5] eq ...................................... <pFigurePartListLoadedFlag = 1>
  [  6] getprop 419 ............................. <pAvailableSetListLoadedFlag>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <pAvailableSetListLoadedFlag = 0>
  [ 11] and ..................................... <(pFigurePartListLoadedFlag = 1) and (pAvailableSetListLoadedFlag = 0)>
  [ 12] jmpifz [ 47] ............................ if (pFigurePartListLoadedFlag = 1) and (pAvailableSetListLoadedFlag = 0) then
  [ 15] pushcons 25 ............................. <"connection.info.id">
  [ 17] pusharglist 1 ........................... <"connection.info.id">
  [ 19] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 21] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 23] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 26] jmpifz [ 47] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 29] pushcons 25 ............................. <"connection.info.id">
  [ 31] pusharglist 1 ........................... <"connection.info.id">
  [ 33] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 35] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 37] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 40] pushcons 53 ............................. <"GETAVAILABLESETS">
  [ 42] pusharglistnoret 2 ...................... <getConnection(getVariable("connection.info.id")), "GETAVAILABLESETS">
  [ 44] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("GETAVAILABLESETS")
  [ 47] ret
end

on checkAge me, tAge
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 88 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 34] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 54 ............................. <"AC">
  [ 27] getparam 1 .............................. <tAge>
  [ 29] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "AC", tAge>
  [ 31] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("AC", tAge)
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 1 ...................... <1>
  [ 38] extcall 89 .............................. return 1
  [ 40] ret
end

on checkEmailAddress me, tEmail
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 88 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 39] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 55 ............................. <"APPROVEEMAIL">
  [ 27] pushsymb 176 ............................ <#string>
  [ 29] getparam 1 .............................. <tEmail>
  [ 31] pusharglist 2 ........................... <[#string: tEmail]>
  [ 33] pushproplist ............................ <[#string: tEmail]>
  [ 34] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "APPROVEEMAIL", [#string: tEmail]>
  [ 36] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("APPROVEEMAIL", [#string: tEmail])
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 1 ...................... <1>
  [ 43] extcall 89 .............................. return 1
  [ 45] ret
end

on sendTotpEmailVerificationNeededQuery me, tEmail
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 88 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 39] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 56 ............................. <"TOTP_EMAIL_REQUIRED">
  [ 27] pushsymb 176 ............................ <#string>
  [ 29] getparam 1 .............................. <tEmail>
  [ 31] pusharglist 2 ........................... <[#string: tEmail]>
  [ 33] pushproplist ............................ <[#string: tEmail]>
  [ 34] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "TOTP_EMAIL_REQUIRED", [#string: tEmail]>
  [ 36] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("TOTP_EMAIL_REQUIRED", [#string: tEmail])
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 1 ...................... <1>
  [ 43] extcall 89 .............................. return 1
  [ 45] ret
end

on parentEmailNeedQuery me, tBirthday, tHabboID
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 88 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 43] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 57 ............................. <"PARENT_EMAIL_REQUIRED">
  [ 27] pushsymb 176 ............................ <#string>
  [ 29] getparam 1 .............................. <tBirthday>
  [ 31] pushsymb 176 ............................ <#string>
  [ 33] getparam 2 .............................. <tHabboID>
  [ 35] pusharglist 4 ........................... <[#string: tBirthday, #string: tHabboID]>
  [ 37] pushproplist ............................ <[#string: tBirthday, #string: tHabboID]>
  [ 38] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "PARENT_EMAIL_REQUIRED", [#string: tBirthday, #string: tHabboID]>
  [ 40] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("PARENT_EMAIL_REQUIRED", [#string: tBirthday, #string: tHabboID])
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 89 .............................. return 1
  [ 49] ret
end

on sendParentEmail me
  [  0] getprop 423 ............................. <pParentEmailAddress>
  [  3] pushcons 0 .............................. <EMPTY>
  [  5] nteq .................................... <pParentEmailAddress <> EMPTY>
  [  6] jmpifz [ 53] ............................ if pParentEmailAddress <> EMPTY then
  [  9] getprop 423 ............................. <pParentEmailAddress>
  [ 12] setlocal 0 .............................. tParentEmail = pParentEmailAddress
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 25] jmpifz [ 53] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 28] pushcons 25 ............................. <"connection.info.id">
  [ 30] pusharglist 1 ........................... <"connection.info.id">
  [ 32] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 34] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 36] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 39] pushcons 58 ............................. <"SEND_PARENT_EMAIL">
  [ 41] pushsymb 176 ............................ <#string>
  [ 43] getlocal 0 .............................. <tParentEmail>
  [ 45] pusharglist 2 ........................... <[#string: tParentEmail]>
  [ 47] pushproplist ............................ <[#string: tParentEmail]>
  [ 48] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "SEND_PARENT_EMAIL", [#string: tParentEmail]>
  [ 50] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("SEND_PARENT_EMAIL", [#string: tParentEmail])
  [ 53] pushint8 1 .............................. <1>
  [ 55] pusharglistnoret 1 ...................... <1>
  [ 57] extcall 89 .............................. return 1
  [ 59] ret
end

on validateParentEmail me, tUserEmail, tParentEmail
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 88 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 39] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 59 ............................. <"VALIDATE_PARENT_EMAIL">
  [ 27] pushsymb 176 ............................ <#string>
  [ 29] getparam 2 .............................. <tParentEmail>
  [ 31] pusharglist 2 ........................... <[#string: tParentEmail]>
  [ 33] pushproplist ............................ <[#string: tParentEmail]>
  [ 34] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "VALIDATE_PARENT_EMAIL", [#string: tParentEmail]>
  [ 36] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("VALIDATE_PARENT_EMAIL", [#string: tParentEmail])
  [ 39] getparam 2 .............................. <tParentEmail>
  [ 41] setprop 423 ............................. pParentEmailAddress = tParentEmail
  [ 44] pushint8 1 .............................. <1>
  [ 46] pusharglistnoret 1 ...................... <1>
  [ 48] extcall 89 .............................. return 1
  [ 50] ret
end

on sendValidatePassword me, tPassword
  [  0] getparam 1 .............................. <tPassword>
  [  2] pusharglist 1 ........................... <tPassword>
  [  4] extcall 100 ............................. <voidp(tPassword)>
  [  6] getparam 1 .............................. <tPassword>
  [  8] pusharglist 1 ........................... <tPassword>
  [ 10] extcall 102 ............................. <ilk(tPassword)>
  [ 12] pushsymb 176 ............................ <#string>
  [ 14] nteq .................................... <ilk(tPassword) <> #string>
  [ 15] or ...................................... <voidp(tPassword) or (ilk(tPassword) <> #string)>
  [ 16] jmpifz [ 23] ............................ if voidp(tPassword) or (ilk(tPassword) <> #string) then
  [ 19] pushcons 0 .............................. <EMPTY>
  [ 21] setparam 1 .............................. tPassword = EMPTY
  [ 23] pushsymb 109 ............................ <#session>
  [ 25] pusharglist 1 ........................... <#session>
  [ 27] extcall 110 ............................. <getObject(#session)>
  [ 29] pushsymb 296 ............................ <#userName>
  [ 32] pusharglist 2 ........................... <getObject(#session), #userName>
  [ 34] objcall 177 ............................. <getObject(#session).get(#userName)>
  [ 36] setlocal 0 .............................. tUserName = getObject(#session).get(#userName)
  [ 38] pushcons 25 ............................. <"connection.info.id">
  [ 40] pusharglist 1 ........................... <"connection.info.id">
  [ 42] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 44] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 46] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 49] jmpifz [ 81] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 52] pushcons 25 ............................. <"connection.info.id">
  [ 54] pusharglist 1 ........................... <"connection.info.id">
  [ 56] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 58] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 60] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 63] pushcons 60 ............................. <"APPROVE_PASSWORD">
  [ 65] pushsymb 176 ............................ <#string>
  [ 67] getlocal 0 .............................. <tUserName>
  [ 69] pushsymb 176 ............................ <#string>
  [ 71] getparam 1 .............................. <tPassword>
  [ 73] pusharglist 4 ........................... <[#string: tUserName, #string: tPassword]>
  [ 75] pushproplist ............................ <[#string: tUserName, #string: tPassword]>
  [ 76] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "APPROVE_PASSWORD", [#string: tUserName, #string: tPassword]>
  [ 78] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("APPROVE_PASSWORD", [#string: tUserName, #string: tPassword])
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglistnoret 1 ...................... <1>
  [ 85] extcall 89 .............................. return 1
  [ 87] ret
end

on setAgeCheckResult me, tFlag
  [  0] getparam 1 .............................. <tFlag>
  [  2] setprop 421 ............................. pAgeCheckFlag = tFlag
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 370 ............................. <me.getInterface()>
  [ 12] getparam 1 .............................. <tFlag>
  [ 14] pusharglist 2 ........................... <me.getInterface(), tFlag>
  [ 16] objcall 7 ............................... <me.getInterface().finishRegistration(tFlag)>
  [ 18] pusharglistnoret 1 ...................... <me.getInterface().finishRegistration(tFlag)>
  [ 20] extcall 89 .............................. return me.getInterface().finishRegistration(tFlag)
  [ 22] ret
end

on getAgeCheckResult me
  [  0] getprop 421 ............................. <pAgeCheckFlag>
  [  3] pusharglistnoret 1 ...................... <pAgeCheckFlag>
  [  5] extcall 89 .............................. return pAgeCheckFlag
  [  7] ret
end

on onTotpEmailVerificationNeedQueryResult me, tFlag
  [  0] getparam 1 .............................. <tFlag>
  [  2] setprop 424 ............................. pTotpVerificationCodeNeededFlag = tFlag
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 370 ............................. <me.getInterface()>
  [ 12] getparam 1 .............................. <tFlag>
  [ 14] pusharglist 2 ........................... <me.getInterface(), tFlag>
  [ 16] objcall 15 .............................. <me.getInterface().totpEmailVerificationStatus(tFlag)>
  [ 18] pusharglistnoret 1 ...................... <me.getInterface().totpEmailVerificationStatus(tFlag)>
  [ 20] extcall 89 .............................. return me.getInterface().totpEmailVerificationStatus(tFlag)
  [ 22] ret
end

on parentEmailNeedQueryResult me, tFlag
  [  0] getparam 1 .............................. <tFlag>
  [  2] setprop 422 ............................. pParentEmailNeededFlag = tFlag
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 370 ............................. <me.getInterface()>
  [ 12] getparam 1 .............................. <tFlag>
  [ 14] pusharglist 2 ........................... <me.getInterface(), tFlag>
  [ 16] objcall 16 .............................. <me.getInterface().parentEmailQueryStatus(tFlag)>
  [ 18] pusharglistnoret 1 ...................... <me.getInterface().parentEmailQueryStatus(tFlag)>
  [ 20] extcall 89 .............................. return me.getInterface().parentEmailQueryStatus(tFlag)
  [ 22] ret
end

on parentEmailValidated me, tFlag
  [  0] getparam 1 .............................. <tFlag>
  [  2] jmpifz [ 19] ............................ if tFlag then / else
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 370 ............................. <me.getInterface()>
  [ 12] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 14] objcall 17 .............................. me.getInterface().parentEmailOk()
  [ 16] jmp [ 35]
  [ 19] pushcons 0 .............................. <EMPTY>
  [ 21] setprop 423 ............................. pParentEmailAddress = EMPTY
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 370 ............................. <me.getInterface()>
  [ 31] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 33] objcall 18 .............................. me.getInterface().parentEmailIncorrect()
  [ 35] ret
end

on getParentEmailNeededFlag me
  [  0] getprop 422 ............................. <pParentEmailNeededFlag>
  [  3] pusharglistnoret 1 ...................... <pParentEmailNeededFlag>
  [  5] extcall 89 .............................. return pParentEmailNeededFlag
  [  7] ret
end

on sendUpdateAccountMsg me, tPropList
  [  0] getparam 1 .............................. <tPropList>
  [  2] pushsymb 182 ............................ <#propList>
  [  4] pusharglist 2 ........................... <tPropList, #propList>
  [  6] extcall 102 ............................. <ilk(tPropList, #propList)>
  [  8] not ..................................... <not ilk(tPropList, #propList)>
  [  9] jmpifz [ 33] ............................ if not ilk(tPropList, #propList) then / else
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 61 ............................. <"tPropList was not propertylist:">
  [ 16] getparam 1 .............................. <tPropList>
  [ 18] joinpadstr .............................. <"tPropList was not propertylist:" && tPropList>
  [ 19] pushsymb 461 ............................ <#sendUpdateMsg>
  [ 22] pusharglist 3 ........................... <me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg>
  [ 24] extcall 85 .............................. <error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)>
  [ 28] extcall 89 .............................. return error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)
  [ 30] jmp [179]
  [ 33] getparam 1 .............................. <tPropList>
  [ 35] pushcons 14 ............................. <"oldpassword">
  [ 37] pusharglist 2 ........................... <tPropList, "oldpassword">
  [ 39] objcall 105 ............................. <tPropList["oldpassword"]>
  [ 41] pusharglist 1 ........................... <tPropList["oldpassword"]>
  [ 43] extcall 100 ............................. <voidp(tPropList["oldpassword"])>
  [ 45] getparam 1 .............................. <tPropList>
  [ 47] pushcons 9 .............................. <"birthday">
  [ 49] pusharglist 2 ........................... <tPropList, "birthday">
  [ 51] objcall 105 ............................. <tPropList["birthday"]>
  [ 53] pusharglist 1 ........................... <tPropList["birthday"]>
  [ 55] extcall 100 ............................. <voidp(tPropList["birthday"])>
  [ 57] or ...................................... <voidp(tPropList["oldpassword"]) or voidp(tPropList["birthday"])>
  [ 58] jmpifz [ 82] ............................ if voidp(tPropList["oldpassword"]) or voidp(tPropList["birthday"]) then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] pushcons 62 ............................. <"Missing old password or birthday:">
  [ 65] getparam 1 .............................. <tPropList>
  [ 67] joinpadstr .............................. <"Missing old password or birthday:" && tPropList>
  [ 68] pushsymb 461 ............................ <#sendUpdateMsg>
  [ 71] pusharglist 3 ........................... <me, "Missing old password or birthday:" && tPropList, #sendUpdateMsg>
  [ 73] extcall 85 .............................. <error(me, "Missing old password or birthday:" && tPropList, #sendUpdateMsg)>
  [ 75] pusharglistnoret 1 ...................... <error(me, "Missing old password or birthday:" && tPropList, #sendUpdateMsg)>
  [ 77] extcall 89 .............................. return error(me, "Missing old password or birthday:" && tPropList, #sendUpdateMsg)
  [ 79] jmp [179]
  [ 82] getparam 1 .............................. <tPropList>
  [ 84] pushcons 4 .............................. <"password">
  [ 86] pusharglist 2 ........................... <tPropList, "password">
  [ 88] objcall 105 ............................. <tPropList["password"]>
  [ 90] pusharglist 1 ........................... <tPropList["password"]>
  [ 92] extcall 100 ............................. <voidp(tPropList["password"])>
  [ 94] getparam 1 .............................. <tPropList>
  [ 96] pushcons 8 .............................. <"email">
  [ 98] pusharglist 2 ........................... <tPropList, "email">
  [100] objcall 105 ............................. <tPropList["email"]>
  [102] pusharglist 1 ........................... <tPropList["email"]>
  [104] extcall 100 ............................. <voidp(tPropList["email"])>
  [106] and ..................................... <voidp(tPropList["password"]) and voidp(tPropList["email"])>
  [107] jmpifz [131] ............................ if voidp(tPropList["password"]) and voidp(tPropList["email"]) then / else
  [110] getparam 0 .............................. <me>
  [112] pushcons 63 ............................. <"Password or email required:">
  [114] getparam 1 .............................. <tPropList>
  [116] joinpadstr .............................. <"Password or email required:" && tPropList>
  [117] pushsymb 461 ............................ <#sendUpdateMsg>
  [120] pusharglist 3 ........................... <me, "Password or email required:" && tPropList, #sendUpdateMsg>
  [122] extcall 85 .............................. <error(me, "Password or email required:" && tPropList, #sendUpdateMsg)>
  [124] pusharglistnoret 1 ...................... <error(me, "Password or email required:" && tPropList, #sendUpdateMsg)>
  [126] extcall 89 .............................. return error(me, "Password or email required:" && tPropList, #sendUpdateMsg)
  [128] jmp [179]
  [131] getparam 1 .............................. <tPropList>
  [133] pushcons 4 .............................. <"password">
  [135] pusharglist 2 ........................... <tPropList, "password">
  [137] objcall 105 ............................. <tPropList["password"]>
  [139] pusharglist 1 ........................... <tPropList["password"]>
  [141] extcall 100 ............................. <voidp(tPropList["password"])>
  [143] not ..................................... <not voidp(tPropList["password"])>
  [144] getparam 1 .............................. <tPropList>
  [146] pushcons 8 .............................. <"email">
  [148] pusharglist 2 ........................... <tPropList, "email">
  [150] objcall 105 ............................. <tPropList["email"]>
  [152] pusharglist 1 ........................... <tPropList["email"]>
  [154] extcall 100 ............................. <voidp(tPropList["email"])>
  [156] not ..................................... <not voidp(tPropList["email"])>
  [157] and ..................................... <not voidp(tPropList["password"]) and not voidp(tPropList["email"])>
  [158] jmpifz [179] ............................ if not voidp(tPropList["password"]) and not voidp(tPropList["email"]) then
  [161] getparam 0 .............................. <me>
  [163] pushcons 64 ............................. <"Password and email cannot appear together:">
  [165] getparam 1 .............................. <tPropList>
  [167] joinpadstr .............................. <"Password and email cannot appear together:" && tPropList>
  [168] pushsymb 461 ............................ <#sendUpdateMsg>
  [171] pusharglist 3 ........................... <me, "Password and email cannot appear together:" && tPropList, #sendUpdateMsg>
  [173] extcall 85 .............................. <error(me, "Password and email cannot appear together:" && tPropList, #sendUpdateMsg)>
  [175] pusharglistnoret 1 ...................... <error(me, "Password and email cannot appear together:" && tPropList, #sendUpdateMsg)>
  [177] extcall 89 .............................. return error(me, "Password and email cannot appear together:" && tPropList, #sendUpdateMsg)
  [179] pusharglist 0 ........................... <[:]>
  [181] pushproplist ............................ <[:]>
  [182] setlocal 0 .............................. tMsg = [:]
  [184] pushint8 1 .............................. <1>
  [186] setlocal 1
  [188] getlocal 1
  [190] getparam 1 .............................. <tPropList>
  [192] getobjprop 104 .......................... <tPropList.count>
  [194] lteq
  [195] jmpifz [430] ............................ repeat with f = 1 to tPropList.count
  [198] getparam 1 .............................. <tPropList>
  [200] getlocal 1 .............................. <f>
  [202] pusharglist 2 ........................... <tPropList, f>
  [204] objcall 204 ............................. <tPropList.getPropAt(f)>
  [206] setlocal 2 .............................. tProp = tPropList.getPropAt(f)
  [208] getparam 1 .............................. <tPropList>
  [210] getlocal 2 .............................. <tProp>
  [212] pusharglist 2 ........................... <tPropList, tProp>
  [214] objcall 105 ............................. <tPropList[tProp]>
  [216] pusharglist 1 ........................... <tPropList[tProp]>
  [218] extcall 100 ............................. <voidp(tPropList[tProp])>
  [220] jmpifz [241] ............................ if voidp(tPropList[tProp]) then
  [223] getparam 0 .............................. <me>
  [225] pushcons 44 ............................. <"Data missing!!">
  [227] getlocal 2 .............................. <tProp>
  [229] joinpadstr .............................. <"Data missing!!" && tProp>
  [230] pushsymb 461 ............................ <#sendUpdateMsg>
  [233] pusharglist 3 ........................... <me, "Data missing!!" && tProp, #sendUpdateMsg>
  [235] extcall 85 .............................. <error(me, "Data missing!!" && tProp, #sendUpdateMsg)>
  [237] pusharglistnoret 1 ...................... <error(me, "Data missing!!" && tProp, #sendUpdateMsg)>
  [239] extcall 89 .............................. return error(me, "Data missing!!" && tProp, #sendUpdateMsg)
  [241] getparam 1 .............................. <tPropList>
  [243] getlocal 2 .............................. <tProp>
  [245] pusharglist 2 ........................... <tPropList, tProp>
  [247] objcall 105 ............................. <tPropList[tProp]>
  [249] setlocal 3 .............................. tValue = tPropList[tProp]
  [251] getprop 426 ............................. <pRegMsgStruct>
  [254] getlocal 2 .............................. <tProp>
  [256] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [258] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [260] pusharglist 1 ........................... <pRegMsgStruct[tProp]>
  [262] extcall 100 ............................. <voidp(pRegMsgStruct[tProp])>
  [264] not ..................................... <not voidp(pRegMsgStruct[tProp])>
  [265] jmpifz [403] ............................ if not voidp(pRegMsgStruct[tProp]) then
  [268] getlocal 0 .............................. <tMsg>
  [270] pushsymb 450 ............................ <#short>
  [273] getprop 426 ............................. <pRegMsgStruct>
  [276] getlocal 2 .............................. <tProp>
  [278] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [280] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [282] getobjprop 121 .......................... <pRegMsgStruct[tProp].id>
  [284] pusharglistnoret 3 ...................... <tMsg, #short, pRegMsgStruct[tProp].id>
  [286] objcall 250 ............................. tMsg.addProp(#short, pRegMsgStruct[tProp].id)
  [288] getprop 426 ............................. <pRegMsgStruct>
  [291] getlocal 2 .............................. <tProp>
  [293] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [295] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [297] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [299] pushsymb 427 ............................ <#boolean>
  [302] eq ...................................... <pRegMsgStruct[tProp].type = #boolean>
  [303] jmpifz [314] ............................ if pRegMsgStruct[tProp].type = #boolean then
  [306] getlocal 3 .............................. <tValue>
  [308] pusharglist 1 ........................... <tValue>
  [310] extcall 199 ............................. <integer(tValue)>
  [312] setlocal 3 .............................. tValue = integer(tValue)
  [314] getprop 426 ............................. <pRegMsgStruct>
  [317] getlocal 2 .............................. <tProp>
  [319] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [321] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [323] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [325] pushsymb 176 ............................ <#string>
  [327] eq ...................................... <pRegMsgStruct[tProp].type = #string>
  [328] getlocal 3 .............................. <tValue>
  [330] getobjprop 102 .......................... <tValue.ilk>
  [332] pushsymb 176 ............................ <#string>
  [334] nteq .................................... <tValue.ilk <> #string>
  [335] and ..................................... <(pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string)>
  [336] jmpifz [347] ............................ if (pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string) then
  [339] getlocal 3 .............................. <tValue>
  [341] pusharglist 1 ........................... <tValue>
  [343] extcall 176 ............................. <string(tValue)>
  [345] setlocal 3 .............................. tValue = string(tValue)
  [347] getprop 426 ............................. <pRegMsgStruct>
  [350] getlocal 2 .............................. <tProp>
  [352] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [354] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [356] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [358] pushsymb 450 ............................ <#short>
  [361] eq ...................................... <pRegMsgStruct[tProp].type = #short>
  [362] getlocal 3 .............................. <tValue>
  [364] getobjprop 102 .......................... <tValue.ilk>
  [366] pushsymb 199 ............................ <#integer>
  [368] nteq .................................... <tValue.ilk <> #integer>
  [369] and ..................................... <(pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer)>
  [370] jmpifz [381] ............................ if (pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer) then
  [373] getlocal 3 .............................. <tValue>
  [375] pusharglist 1 ........................... <tValue>
  [377] extcall 199 ............................. <integer(tValue)>
  [379] setlocal 3 .............................. tValue = integer(tValue)
  [381] getlocal 0 .............................. <tMsg>
  [383] getprop 426 ............................. <pRegMsgStruct>
  [386] getlocal 2 .............................. <tProp>
  [388] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [390] objcall 105 ............................. <pRegMsgStruct[tProp]>
  [392] getobjprop 194 .......................... <pRegMsgStruct[tProp].type>
  [394] getlocal 3 .............................. <tValue>
  [396] pusharglistnoret 3 ...................... <tMsg, pRegMsgStruct[tProp].type, tValue>
  [398] objcall 250 ............................. tMsg.addProp(pRegMsgStruct[tProp].type, tValue)
  [400] jmp [421] ............................... next repeat
  [403] getparam 0 .............................. <me>
  [405] pushcons 65 ............................. <"Data property not found from structs!">
  [407] getlocal 2 .............................. <tProp>
  [409] joinpadstr .............................. <"Data property not found from structs!" && tProp>
  [410] pushsymb 461 ............................ <#sendUpdateMsg>
  [413] pusharglist 3 ........................... <me, "Data property not found from structs!" && tProp, #sendUpdateMsg>
  [415] extcall 85 .............................. <error(me, "Data property not found from structs!" && tProp, #sendUpdateMsg)>
  [417] pusharglistnoret 1 ...................... <error(me, "Data property not found from structs!" && tProp, #sendUpdateMsg)>
  [419] extcall 89 .............................. return error(me, "Data property not found from structs!" && tProp, #sendUpdateMsg)
  [421] pushint8 1
  [423] getlocal 1
  [425] add
  [426] setlocal 1
  [428] endrepeat [188]
  [430] pushcons 25 ............................. <"connection.info.id">
  [432] pusharglist 1 ........................... <"connection.info.id">
  [434] extcall 88 .............................. <getVariable("connection.info.id")>
  [436] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [438] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [441] jmpifz [464] ............................ if connectionExists(getVariable("connection.info.id")) then
  [444] pushcons 25 ............................. <"connection.info.id">
  [446] pusharglist 1 ........................... <"connection.info.id">
  [448] extcall 88 .............................. <getVariable("connection.info.id")>
  [450] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [452] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [455] pushcons 66 ............................. <"UPDATE_ACCOUNT">
  [457] getlocal 0 .............................. <tMsg>
  [459] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "UPDATE_ACCOUNT", tMsg>
  [461] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("UPDATE_ACCOUNT", tMsg)
  [464] ret
end

on submitGdprRequestMsg me, tPropList
  [  0] getparam 1 .............................. <tPropList>
  [  2] pushsymb 182 ............................ <#propList>
  [  4] pusharglist 2 ........................... <tPropList, #propList>
  [  6] extcall 102 ............................. <ilk(tPropList, #propList)>
  [  8] not ..................................... <not ilk(tPropList, #propList)>
  [  9] jmpifz [ 33] ............................ if not ilk(tPropList, #propList) then / else
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 61 ............................. <"tPropList was not propertylist:">
  [ 16] getparam 1 .............................. <tPropList>
  [ 18] joinpadstr .............................. <"tPropList was not propertylist:" && tPropList>
  [ 19] pushsymb 461 ............................ <#sendUpdateMsg>
  [ 22] pusharglist 3 ........................... <me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg>
  [ 24] extcall 85 .............................. <error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)>
  [ 28] extcall 89 .............................. return error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)
  [ 30] jmp [ 66]
  [ 33] getparam 1 .............................. <tPropList>
  [ 35] pushcons 67 ............................. <"gdprRequestType">
  [ 37] pusharglist 2 ........................... <tPropList, "gdprRequestType">
  [ 39] objcall 105 ............................. <tPropList["gdprRequestType"]>
  [ 41] pusharglist 1 ........................... <tPropList["gdprRequestType"]>
  [ 43] extcall 100 ............................. <voidp(tPropList["gdprRequestType"])>
  [ 45] jmpifz [ 66] ............................ if voidp(tPropList["gdprRequestType"]) then
  [ 48] getparam 0 .............................. <me>
  [ 50] pushcons 68 ............................. <"Missing GDPR request type:">
  [ 52] getparam 1 .............................. <tPropList>
  [ 54] joinpadstr .............................. <"Missing GDPR request type:" && tPropList>
  [ 55] pushsymb 461 ............................ <#sendUpdateMsg>
  [ 58] pusharglist 3 ........................... <me, "Missing GDPR request type:" && tPropList, #sendUpdateMsg>
  [ 60] extcall 85 .............................. <error(me, "Missing GDPR request type:" && tPropList, #sendUpdateMsg)>
  [ 62] pusharglistnoret 1 ...................... <error(me, "Missing GDPR request type:" && tPropList, #sendUpdateMsg)>
  [ 64] extcall 89 .............................. return error(me, "Missing GDPR request type:" && tPropList, #sendUpdateMsg)
  [ 66] getparam 1 .............................. <tPropList>
  [ 68] pushcons 67 ............................. <"gdprRequestType">
  [ 70] pusharglist 2 ........................... <tPropList, "gdprRequestType">
  [ 72] objcall 105 ............................. <tPropList["gdprRequestType"]>
  [ 74] setlocal 0 .............................. tValue = tPropList["gdprRequestType"]
  [ 76] pushcons 25 ............................. <"connection.info.id">
  [ 78] pusharglist 1 ........................... <"connection.info.id">
  [ 80] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 82] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 84] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 87] jmpifz [119] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 90] pushcons 25 ............................. <"connection.info.id">
  [ 92] pusharglist 1 ........................... <"connection.info.id">
  [ 94] extcall 88 .............................. <getVariable("connection.info.id")>
  [ 96] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 98] extcall 439 ............................. <getConnection(getVariable("connection.info.id"))>
  [101] pushcons 69 ............................. <"SUBMIT_GDPR_REQUEST">
  [103] pushsymb 199 ............................ <#integer>
  [105] getlocal 0 .............................. <tValue>
  [107] pusharglist 1 ........................... <tValue>
  [109] extcall 199 ............................. <integer(tValue)>
  [111] pusharglist 2 ........................... <[#integer: integer(tValue)]>
  [113] pushproplist ............................ <[#integer: integer(tValue)]>
  [114] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "SUBMIT_GDPR_REQUEST", [#integer: integer(tValue)]>
  [116] objcall 440 ............................. getConnection(getVariable("connection.info.id")).send("SUBMIT_GDPR_REQUEST", [#integer: integer(tValue)])
  [119] ret
end

on getState me
  [  0] getprop 420 ............................. <pState>
  [  3] pusharglistnoret 1 ...................... <pState>
  [  5] extcall 89 .............................. return pState
  [  7] ret
end

on updateState me, tstate, tProps
  [  0] getparam 1 .............................. <tstate>
  [  2] peek 0 .................................. case tstate of
  [  4] pushcons 20 ............................. <"reset">
  [  6] eq
  [  7] jmpifz [ 31] ............................ (case) "reset":
  [ 10] getparam 1 .............................. <tstate>
  [ 12] setprop 420 ............................. pState = tstate
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglistnoret 1 ...................... <me>
  [ 19] objcall 1 ............................... me.construct()
  [ 21] pop 1
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 1 ...................... <0>
  [ 26] extcall 89 .............................. return 0
  [ 28] jmp [1158]
  [ 31] peek 0
  [ 33] pushcons 70 ............................. <"loadFigurePartList">
  [ 35] eq
  [ 36] jmpifz [145] ............................ (case) "loadFigurePartList":
  [ 39] pop 1
  [ 41] pusharglistnoret 0 ...................... <>
  [ 43] extcall 89 .............................. return 
  [ 45] getparam 1 .............................. <tstate>
  [ 47] setprop 420 ............................. pState = tstate
  [ 50] pushcons 71 ............................. <"external.figurepartlist.txt">
  [ 52] pusharglist 1 ........................... <"external.figurepartlist.txt">
  [ 54] extcall 88 .............................. <getVariable("external.figurepartlist.txt")>
  [ 56] setlocal 0 .............................. tURL = getVariable("external.figurepartlist.txt")
  [ 58] getlocal 0 .............................. <tURL>
  [ 60] setlocal 1 .............................. tMem = tURL
  [ 62] getmovieprop 462 ........................ <the moviePath>
  [ 65] pushcons 72 ............................. <"http://">
  [ 67] containsstr ............................. <the moviePath contains "http://">
  [ 68] jmpifz [ 85] ............................ if the moviePath contains "http://" then / else
  [ 71] getlocal 0 .............................. <tURL>
  [ 73] pushcons 73 ............................. <"?">
  [ 75] joinstr ................................. <tURL & "?">
  [ 76] getmovieprop 381 ........................ <the milliSeconds>
  [ 79] joinstr ................................. <tURL & "?" & the milliSeconds>
  [ 80] setlocal 0 .............................. tURL = tURL & "?" & the milliSeconds
  [ 82] jmp [104]
  [ 85] getlocal 0 .............................. <tURL>
  [ 87] pushcons 72 ............................. <"http://">
  [ 89] containsstr ............................. <tURL contains "http://">
  [ 90] jmpifz [104] ............................ if tURL contains "http://" then
  [ 93] getlocal 0 .............................. <tURL>
  [ 95] pushcons 73 ............................. <"?">
  [ 97] joinstr ................................. <tURL & "?">
  [ 98] getmovieprop 381 ........................ <the milliSeconds>
  [101] joinstr ................................. <tURL & "?" & the milliSeconds>
  [102] setlocal 0 .............................. tURL = tURL & "?" & the milliSeconds
  [104] getlocal 0 .............................. <tURL>
  [106] getlocal 1 .............................. <tMem>
  [108] pushsymb 195 ............................ <#field>
  [110] pushint8 1 .............................. <1>
  [112] pusharglist 4 ........................... <tURL, tMem, #field, 1>
  [114] extcall 463 ............................. <queueDownload(tURL, tMem, #field, 1)>
  [117] setlocal 2 .............................. tmember = queueDownload(tURL, tMem, #field, 1)
  [119] pop 1
  [121] getlocal 2 .............................. <tmember>
  [123] pushsymb 150 ............................ <#updateState>
  [125] getparam 0 .............................. <me>
  [127] pusharglist 1 ........................... <me>
  [129] objcall 162 ............................. <me.getID()>
  [131] pushcons 74 ............................. <"initialize">
  [133] pusharglist 4 ........................... <tmember, #updateState, me.getID(), "initialize">
  [135] extcall 464 ............................. <registerDownloadCallback(tmember, #updateState, me.getID(), "initialize")>
  [138] pusharglistnoret 1 ...................... <registerDownloadCallback(tmember, #updateState, me.getID(), "initialize")>
  [140] extcall 89 .............................. return registerDownloadCallback(tmember, #updateState, me.getID(), "initialize")
  [142] jmp [1158]
  [145] peek 0
  [147] pushcons 74 ............................. <"initialize">
  [149] eq
  [150] jmpifz [301] ............................ (case) "initialize":
  [153] getparam 1 .............................. <tstate>
  [155] setprop 420 ............................. pState = tstate
  [158] pushcons 71 ............................. <"external.figurepartlist.txt">
  [160] pusharglist 1 ........................... <"external.figurepartlist.txt">
  [162] extcall 88 .............................. <getVariable("external.figurepartlist.txt")>
  [164] setlocal 3 .............................. tMemName = getVariable("external.figurepartlist.txt")
  [166] getlocal 3 .............................. <tMemName>
  [168] pushzero ................................ <0>
  [169] eq ...................................... <tMemName = 0>
  [170] jmpifz [177] ............................ if tMemName = 0 then
  [173] pushcons 0 .............................. <EMPTY>
  [175] setlocal 3 .............................. tMemName = EMPTY
  [177] getlocal 3 .............................. <tMemName>
  [179] pusharglist 1 ........................... <tMemName>
  [181] extcall 465 ............................. <memberExists(tMemName)>
  [184] not ..................................... <not memberExists(tMemName)>
  [185] jmpifz [207] ............................ if not memberExists(tMemName) then / else
  [188] pusharglist 0 ........................... <>
  [190] extcall 92 .............................. <VOID>
  [192] setlocal 4 .............................. tValidpartList = VOID
  [194] getparam 0 .............................. <me>
  [196] pushcons 75 ............................. <"Failure while loading part list">
  [198] pushsymb 150 ............................ <#updateState>
  [200] pusharglistnoret 3 ...................... <me, "Failure while loading part list", #updateState>
  [202] extcall 85 .............................. error(me, "Failure while loading part list", #updateState)
  [204] jmp [245]
  [207] pusharglistnoret 0 ...................... <>
  [209] extcall 466 ............................. try()
  [212] getlocal 3 .............................. <tMemName>
  [214] pusharglist 1 ........................... <tMemName>
  [216] extcall 219 ............................. <getmemnum(tMemName)>
  [218] pusharglist 1 ........................... <getmemnum(tMemName)>
  [220] extcall 218 ............................. <member(getmemnum(tMemName))>
  [222] getobjprop 467 .......................... <member(getmemnum(tMemName)).text>
  [225] pusharglist 1 ........................... <member(getmemnum(tMemName)).text>
  [227] extcall 113 ............................. <value(member(getmemnum(tMemName)).text)>
  [229] setlocal 4 .............................. tValidpartList = value(member(getmemnum(tMemName)).text)
  [231] pusharglist 0 ........................... <>
  [233] extcall 468 ............................. <catch()>
  [236] jmpifz [245] ............................ if catch() then
  [239] pusharglist 0 ........................... <>
  [241] extcall 92 .............................. <VOID>
  [243] setlocal 4 .............................. tValidpartList = VOID
  [245] getparam 0 .............................. <me>
  [247] getlocal 4 .............................. <tValidpartList>
  [249] pusharglistnoret 2 ...................... <me, tValidpartList>
  [251] objcall 469 ............................. me.initializeValidPartLists(tValidpartList)
  [254] pushint8 1 .............................. <1>
  [256] setprop 418 ............................. pFigurePartListLoadedFlag = 1
  [259] pushcons 76 ............................. <"figurepartlist.loaded">
  [261] pushint8 1 .............................. <1>
  [263] pusharglistnoret 2 ...................... <"figurepartlist.loaded", 1>
  [265] extcall 87 .............................. setVariable("figurepartlist.loaded", 1)
  [267] getlocal 3 .............................. <tMemName>
  [269] pusharglist 1 ........................... <tMemName>
  [271] extcall 465 ............................. <memberExists(tMemName)>
  [274] jmpifz [284] ............................ if memberExists(tMemName) then
  [277] getlocal 3 .............................. <tMemName>
  [279] pusharglistnoret 1 ...................... <tMemName>
  [281] extcall 470 ............................. removeMember(tMemName)
  [284] pop 1
  [286] getparam 0 .............................. <me>
  [288] pushcons 50 ............................. <"start">
  [290] pusharglist 2 ........................... <me, "start">
  [292] objcall 150 ............................. <me.updateState("start")>
  [294] pusharglistnoret 1 ...................... <me.updateState("start")>
  [296] extcall 89 .............................. return me.updateState("start")
  [298] jmp [1158]
  [301] peek 0
  [303] pushcons 50 ............................. <"start">
  [305] eq
  [306] jmpifz [325] ............................ (case) "start":
  [309] getparam 1 .............................. <tstate>
  [311] setprop 420 ............................. pState = tstate
  [314] pop 1
  [316] pushint8 1 .............................. <1>
  [318] pusharglistnoret 1 ...................... <1>
  [320] extcall 89 .............................. return 1
  [322] jmp [1158]
  [325] peek 0
  [327] pushcons 31 ............................. <"openFigureCreator">
  [329] eq
  [330] jmpifz [585] ............................ (case) "openFigureCreator":
  [333] getparam 1 .............................. <tstate>
  [335] setprop 420 ............................. pState = tstate
  [338] pushcons 39 ............................. <"Figure_System">
  [340] pusharglist 1 ........................... <"Figure_System">
  [342] extcall 95 .............................. <objectExists("Figure_System")>
  [344] not ..................................... <not objectExists("Figure_System")>
  [345] jmpifz [364] ............................ if not objectExists("Figure_System") then
  [348] pop 1
  [350] getparam 0 .............................. <me>
  [352] pushcons 40 ............................. <"Figure system object not found">
  [354] pushsymb 150 ............................ <#updateState>
  [356] pusharglist 3 ........................... <me, "Figure system object not found", #updateState>
  [358] extcall 85 .............................. <error(me, "Figure system object not found", #updateState)>
  [360] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #updateState)>
  [362] extcall 89 .............................. return error(me, "Figure system object not found", #updateState)
  [364] pushsymb 109 ............................ <#session>
  [366] pusharglist 1 ........................... <#session>
  [368] extcall 95 .............................. <objectExists(#session)>
  [370] not ..................................... <not objectExists(#session)>
  [371] jmpifz [390] ............................ if not objectExists(#session) then
  [374] pop 1
  [376] getparam 0 .............................. <me>
  [378] pushcons 77 ............................. <"Session object not found">
  [380] pushsymb 150 ............................ <#updateState>
  [382] pusharglist 3 ........................... <me, "Session object not found", #updateState>
  [384] extcall 85 .............................. <error(me, "Session object not found", #updateState)>
  [386] pusharglistnoret 1 ...................... <error(me, "Session object not found", #updateState)>
  [388] extcall 89 .............................. return error(me, "Session object not found", #updateState)
  [390] pushsymb 368 ............................ <#login>
  [393] pusharglist 1 ........................... <#login>
  [395] extcall 367 ............................. <threadExists(#login)>
  [398] pushcons 25 ............................. <"connection.info.id">
  [400] pusharglist 1 ........................... <"connection.info.id">
  [402] extcall 88 .............................. <getVariable("connection.info.id")>
  [404] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [406] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [409] not ..................................... <not connectionExists(getVariable("connection.info.id"))>
  [410] and ..................................... <threadExists(#login) and not connectionExists(getVariable("connection.info.id"))>
  [411] jmpifz [445] ............................ if threadExists(#login) and not connectionExists(getVariable("connection.info.id")) then / else
  [414] pushsymb 368 ............................ <#login>
  [417] pusharglist 1 ........................... <#login>
  [419] extcall 369 ............................. <getThread(#login)>
  [422] pusharglist 1 ........................... <getThread(#login)>
  [424] objcall 114 ............................. <getThread(#login).getComponent()>
  [426] pusharglistnoret 1 ...................... <getThread(#login).getComponent()>
  [428] objcall 471 ............................. getThread(#login).getComponent().connect()
  [431] getparam 0 .............................. <me>
  [433] pusharglist 1 ........................... <me>
  [435] objcall 370 ............................. <me.getInterface()>
  [438] pusharglistnoret 1 ...................... <me.getInterface()>
  [440] objcall 6 ............................... me.getInterface().showLoadingWindow()
  [442] jmp [574]
  [445] pushsymb 472 ............................ <#getServerDate>
  [448] pusharglist 1 ........................... <#getServerDate>
  [450] extcall 95 .............................. <objectExists(#getServerDate)>
  [452] jmpifz [483] ............................ if objectExists(#getServerDate) then
  [455] pushsymb 109 ............................ <#session>
  [457] pusharglist 1 ........................... <#session>
  [459] extcall 110 ............................. <getObject(#session)>
  [461] pushcons 78 ............................. <"server_date">
  [463] pusharglist 2 ........................... <getObject(#session), "server_date">
  [465] objcall 175 ............................. <getObject(#session).exists("server_date")>
  [467] not ..................................... <not getObject(#session).exists("server_date")>
  [468] jmpifz [483] ............................ if not getObject(#session).exists("server_date") then
  [471] pushsymb 472 ............................ <#getServerDate>
  [474] pusharglist 1 ........................... <#getServerDate>
  [476] extcall 110 ............................. <getObject(#getServerDate)>
  [478] pusharglistnoret 1 ...................... <getObject(#getServerDate)>
  [480] objcall 473 ............................. getObject(#getServerDate).getDate()
  [483] pushcons 79 ............................. <"topt_verification">
  [485] setlocal 5 .............................. tRegistrationProcessMode = "topt_verification"
  [487] pushsymb 109 ............................ <#session>
  [489] pusharglist 1 ........................... <#session>
  [491] extcall 110 ............................. <getObject(#session)>
  [493] pushcons 80 ............................. <"conf_coppa">
  [495] pusharglist 2 ........................... <getObject(#session), "conf_coppa">
  [497] objcall 177 ............................. <getObject(#session).get("conf_coppa")>
  [499] pushcons 28 ............................. <"Blocktime">
  [501] pusharglist 1 ........................... <"Blocktime">
  [503] extcall 441 ............................. <getPref("Blocktime")>
  [506] pushzero ................................ <0>
  [507] gt ...................................... <getPref("Blocktime") > 0>
  [508] and ..................................... <getObject(#session).get("conf_coppa") and (getPref("Blocktime") > 0)>
  [509] jmpifz [525] ............................ if getObject(#session).get("conf_coppa") and (getPref("Blocktime") > 0) then
  [512] pop 1
  [514] getparam 0 .............................. <me>
  [516] pusharglist 1 ........................... <me>
  [518] objcall 401 ............................. <me.checkBlockTime()>
  [521] pusharglistnoret 1 ...................... <me.checkBlockTime()>
  [523] extcall 89 .............................. return me.checkBlockTime()
  [525] pushcons 39 ............................. <"Figure_System">
  [527] pusharglist 1 ........................... <"Figure_System">
  [529] extcall 110 ............................. <getObject("Figure_System")>
  [531] pusharglist 1 ........................... <getObject("Figure_System")>
  [533] objcall 474 ............................. <getObject("Figure_System").isFigureSystemReady()>
  [536] not ..................................... <not getObject("Figure_System").isFigureSystemReady()>
  [537] jmpifz [561] ............................ if not getObject("Figure_System").isFigureSystemReady() then / else
  [540] getparam 0 .............................. <me>
  [542] pusharglist 1 ........................... <me>
  [544] objcall 370 ............................. <me.getInterface()>
  [547] pusharglistnoret 1 ...................... <me.getInterface()>
  [549] objcall 6 ............................... me.getInterface().showLoadingWindow()
  [551] pop 1
  [553] pushzero ................................ <0>
  [554] pusharglistnoret 1 ...................... <0>
  [556] extcall 89 .............................. return 0
  [558] jmp [574]
  [561] getparam 0 .............................. <me>
  [563] pusharglist 1 ........................... <me>
  [565] objcall 370 ............................. <me.getInterface()>
  [568] getlocal 5 .............................. <tRegistrationProcessMode>
  [570] pusharglistnoret 2 ...................... <me.getInterface(), tRegistrationProcessMode>
  [572] objcall 4 ............................... me.getInterface().openFigureCreator(tRegistrationProcessMode)
  [574] pop 1
  [576] pushint8 1 .............................. <1>
  [578] pusharglistnoret 1 ...................... <1>
  [580] extcall 89 .............................. return 1
  [582] jmp [1158]
  [585] peek 0
  [587] pushcons 32 ............................. <"openFigureUpdate">
  [589] eq
  [590] jmpifz [733] ............................ (case) "openFigureUpdate":
  [593] getparam 1 .............................. <tstate>
  [595] setprop 420 ............................. pState = tstate
  [598] pushcons 39 ............................. <"Figure_System">
  [600] pusharglist 1 ........................... <"Figure_System">
  [602] extcall 95 .............................. <objectExists("Figure_System")>
  [604] not ..................................... <not objectExists("Figure_System")>
  [605] jmpifz [624] ............................ if not objectExists("Figure_System") then
  [608] pop 1
  [610] getparam 0 .............................. <me>
  [612] pushcons 40 ............................. <"Figure system object not found">
  [614] pushsymb 150 ............................ <#updateState>
  [616] pusharglist 3 ........................... <me, "Figure system object not found", #updateState>
  [618] extcall 85 .............................. <error(me, "Figure system object not found", #updateState)>
  [620] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #updateState)>
  [622] extcall 89 .............................. return error(me, "Figure system object not found", #updateState)
  [624] pushcons 39 ............................. <"Figure_System">
  [626] pusharglist 1 ........................... <"Figure_System">
  [628] extcall 110 ............................. <getObject("Figure_System")>
  [630] pusharglist 1 ........................... <getObject("Figure_System")>
  [632] objcall 474 ............................. <getObject("Figure_System").isFigureSystemReady()>
  [635] not ..................................... <not getObject("Figure_System").isFigureSystemReady()>
  [636] jmpifz [658] ............................ if not getObject("Figure_System").isFigureSystemReady() then
  [639] getparam 0 .............................. <me>
  [641] pusharglist 1 ........................... <me>
  [643] objcall 370 ............................. <me.getInterface()>
  [646] pushcons 81 ............................. <"update">
  [648] pusharglistnoret 2 ...................... <me.getInterface(), "update">
  [650] objcall 6 ............................... me.getInterface().showLoadingWindow("update")
  [652] pop 1
  [654] pusharglistnoret 0 ...................... <>
  [656] extcall 89 .............................. return 
  [658] pushcons 39 ............................. <"Figure_System">
  [660] pusharglist 1 ........................... <"Figure_System">
  [662] extcall 110 ............................. <getObject("Figure_System")>
  [664] pushsymb 109 ............................ <#session>
  [666] pusharglist 1 ........................... <#session>
  [668] extcall 110 ............................. <getObject(#session)>
  [670] pushcons 82 ............................. <"user_figure">
  [672] pusharglist 2 ........................... <getObject(#session), "user_figure">
  [674] objcall 177 ............................. <getObject(#session).get("user_figure")>
  [676] pushsymb 109 ............................ <#session>
  [678] pusharglist 1 ........................... <#session>
  [680] extcall 110 ............................. <getObject(#session)>
  [682] pushcons 83 ............................. <"user_sex">
  [684] pusharglist 2 ........................... <getObject(#session), "user_sex">
  [686] objcall 177 ............................. <getObject(#session).get("user_sex")>
  [688] pusharglist 3 ........................... <getObject("Figure_System"), getObject(#session).get("user_figure"), getObject(#session).get("user_sex")>
  [690] objcall 475 ............................. <getObject("Figure_System").validateFigure(getObject(#session).get("user_figure"), getObject(#session).get("user_sex"))>
  [693] setlocal 6 .............................. tFigure = getObject("Figure_System").validateFigure(getObject(#session).get("user_figure"), getObject(#session).get("user_sex"))
  [695] pushsymb 109 ............................ <#session>
  [697] pusharglist 1 ........................... <#session>
  [699] extcall 110 ............................. <getObject(#session)>
  [701] pushcons 82 ............................. <"user_figure">
  [703] getlocal 6 .............................. <tFigure>
  [705] pusharglistnoret 3 ...................... <getObject(#session), "user_figure", tFigure>
  [707] objcall 111 ............................. getObject(#session).set("user_figure", tFigure)
  [709] getparam 0 .............................. <me>
  [711] pusharglist 1 ........................... <me>
  [713] objcall 370 ............................. <me.getInterface()>
  [716] pushcons 81 ............................. <"update">
  [718] pusharglistnoret 2 ...................... <me.getInterface(), "update">
  [720] objcall 3 ............................... me.getInterface().showHideFigureCreator("update")
  [722] pop 1
  [724] pushint8 1 .............................. <1>
  [726] pusharglistnoret 1 ...................... <1>
  [728] extcall 89 .............................. return 1
  [730] jmp [1158]
  [733] peek 0
  [735] pushcons 33 ............................. <"openForcedUpdate">
  [737] eq
  [738] jmpifz [1139] ........................... (case) "openForcedUpdate":
  [741] getparam 1 .............................. <tstate>
  [743] setprop 420 ............................. pState = tstate
  [746] pushcons 39 ............................. <"Figure_System">
  [748] pusharglist 1 ........................... <"Figure_System">
  [750] extcall 95 .............................. <objectExists("Figure_System")>
  [752] not ..................................... <not objectExists("Figure_System")>
  [753] jmpifz [772] ............................ if not objectExists("Figure_System") then
  [756] pop 1
  [758] getparam 0 .............................. <me>
  [760] pushcons 40 ............................. <"Figure system object not found">
  [762] pushsymb 150 ............................ <#updateState>
  [764] pusharglist 3 ........................... <me, "Figure system object not found", #updateState>
  [766] extcall 85 .............................. <error(me, "Figure system object not found", #updateState)>
  [768] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #updateState)>
  [770] extcall 89 .............................. return error(me, "Figure system object not found", #updateState)
  [772] pushcons 39 ............................. <"Figure_System">
  [774] pusharglist 1 ........................... <"Figure_System">
  [776] extcall 110 ............................. <getObject("Figure_System")>
  [778] pusharglist 1 ........................... <getObject("Figure_System")>
  [780] objcall 474 ............................. <getObject("Figure_System").isFigureSystemReady()>
  [783] not ..................................... <not getObject("Figure_System").isFigureSystemReady()>
  [784] jmpifz [806] ............................ if not getObject("Figure_System").isFigureSystemReady() then
  [787] getparam 0 .............................. <me>
  [789] pusharglist 1 ........................... <me>
  [791] objcall 370 ............................. <me.getInterface()>
  [794] pushcons 84 ............................. <"forced">
  [796] pusharglistnoret 2 ...................... <me.getInterface(), "forced">
  [798] objcall 6 ............................... me.getInterface().showLoadingWindow("forced")
  [800] pop 1
  [802] pusharglistnoret 0 ...................... <>
  [804] extcall 89 .............................. return 
  [806] pushcons 39 ............................. <"Figure_System">
  [808] pusharglist 1 ........................... <"Figure_System">
  [810] extcall 110 ............................. <getObject("Figure_System")>
  [812] pushsymb 109 ............................ <#session>
  [814] pusharglist 1 ........................... <#session>
  [816] extcall 110 ............................. <getObject(#session)>
  [818] pushcons 82 ............................. <"user_figure">
  [820] pusharglist 2 ........................... <getObject(#session), "user_figure">
  [822] objcall 177 ............................. <getObject(#session).get("user_figure")>
  [824] pushsymb 109 ............................ <#session>
  [826] pusharglist 1 ........................... <#session>
  [828] extcall 110 ............................. <getObject(#session)>
  [830] pushcons 83 ............................. <"user_sex">
  [832] pusharglist 2 ........................... <getObject(#session), "user_sex">
  [834] objcall 177 ............................. <getObject(#session).get("user_sex")>
  [836] pusharglist 3 ........................... <getObject("Figure_System"), getObject(#session).get("user_figure"), getObject(#session).get("user_sex")>
  [838] objcall 475 ............................. <getObject("Figure_System").validateFigure(getObject(#session).get("user_figure"), getObject(#session).get("user_sex"))>
  [841] setlocal 6 .............................. tFigure = getObject("Figure_System").validateFigure(getObject(#session).get("user_figure"), getObject(#session).get("user_sex"))
  [843] pushsymb 109 ............................ <#session>
  [845] pusharglist 1 ........................... <#session>
  [847] extcall 110 ............................. <getObject(#session)>
  [849] pushcons 82 ............................. <"user_figure">
  [851] getlocal 6 .............................. <tFigure>
  [853] pusharglistnoret 3 ...................... <getObject(#session), "user_figure", tFigure>
  [855] objcall 111 ............................. getObject(#session).set("user_figure", tFigure)
  [857] pushsymb 109 ............................ <#session>
  [859] pusharglist 1 ........................... <#session>
  [861] extcall 110 ............................. <getObject(#session)>
  [863] pushcons 80 ............................. <"conf_coppa">
  [865] pusharglist 2 ........................... <getObject(#session), "conf_coppa">
  [867] objcall 177 ............................. <getObject(#session).get("conf_coppa")>
  [869] setlocal 7 .............................. tCoppaFlag = getObject(#session).get("conf_coppa")
  [871] pushsymb 109 ............................ <#session>
  [873] pusharglist 1 ........................... <#session>
  [875] extcall 110 ............................. <getObject(#session)>
  [877] pushcons 52 ............................. <"conf_parent_email_request_reregistration">
  [879] pusharglist 2 ........................... <getObject(#session), "conf_parent_email_request_reregistration">
  [881] objcall 177 ............................. <getObject(#session).get("conf_parent_email_request_reregistration")>
  [883] setlocal 8 .............................. tParentEmailFlag = getObject(#session).get("conf_parent_email_request_reregistration")
  [885] getlocal 7 .............................. <tCoppaFlag>
  [887] pushint8 1 .............................. <1>
  [889] eq ...................................... <tCoppaFlag = 1>
  [890] getlocal 8 .............................. <tParentEmailFlag>
  [892] pushzero ................................ <0>
  [893] eq ...................................... <tParentEmailFlag = 0>
  [894] and ..................................... <(tCoppaFlag = 1) and (tParentEmailFlag = 0)>
  [895] jmpifz [916] ............................ if (tCoppaFlag = 1) and (tParentEmailFlag = 0) then / else
  [898] getparam 0 .............................. <me>
  [900] pusharglist 1 ........................... <me>
  [902] objcall 370 ............................. <me.getInterface()>
  [905] pushcons 85 ............................. <"coppa_forced">
  [907] pushint8 1 .............................. <1>
  [909] pusharglistnoret 3 ...................... <me.getInterface(), "coppa_forced", 1>
  [911] objcall 3 ............................... me.getInterface().showHideFigureCreator("coppa_forced", 1)
  [913] jmp [994]
  [916] getlocal 7 .............................. <tCoppaFlag>
  [918] pushint8 1 .............................. <1>
  [920] eq ...................................... <tCoppaFlag = 1>
  [921] getlocal 8 .............................. <tParentEmailFlag>
  [923] pushint8 1 .............................. <1>
  [925] eq ...................................... <tParentEmailFlag = 1>
  [926] and ..................................... <(tCoppaFlag = 1) and (tParentEmailFlag = 1)>
  [927] jmpifz [948] ............................ if (tCoppaFlag = 1) and (tParentEmailFlag = 1) then / else
  [930] getparam 0 .............................. <me>
  [932] pusharglist 1 ........................... <me>
  [934] objcall 370 ............................. <me.getInterface()>
  [937] pushcons 86 ............................. <"parent_email_coppa_forced">
  [939] pushint8 1 .............................. <1>
  [941] pusharglistnoret 3 ...................... <me.getInterface(), "parent_email_coppa_forced", 1>
  [943] objcall 3 ............................... me.getInterface().showHideFigureCreator("parent_email_coppa_forced", 1)
  [945] jmp [994]
  [948] getlocal 7 .............................. <tCoppaFlag>
  [950] pushzero ................................ <0>
  [951] eq ...................................... <tCoppaFlag = 0>
  [952] getlocal 8 .............................. <tParentEmailFlag>
  [954] pushint8 1 .............................. <1>
  [956] eq ...................................... <tParentEmailFlag = 1>
  [957] and ..................................... <(tCoppaFlag = 0) and (tParentEmailFlag = 1)>
  [958] jmpifz [979] ............................ if (tCoppaFlag = 0) and (tParentEmailFlag = 1) then / else
  [961] getparam 0 .............................. <me>
  [963] pusharglist 1 ........................... <me>
  [965] objcall 370 ............................. <me.getInterface()>
  [968] pushcons 87 ............................. <"parent_email_forced">
  [970] pushint8 1 .............................. <1>
  [972] pusharglistnoret 3 ...................... <me.getInterface(), "parent_email_forced", 1>
  [974] objcall 3 ............................... me.getInterface().showHideFigureCreator("parent_email_forced", 1)
  [976] jmp [994]
  [979] getparam 0 .............................. <me>
  [981] pusharglist 1 ........................... <me>
  [983] objcall 370 ............................. <me.getInterface()>
  [986] pushcons 84 ............................. <"forced">
  [988] pushint8 1 .............................. <1>
  [990] pusharglistnoret 3 ...................... <me.getInterface(), "forced", 1>
  [992] objcall 3 ............................... me.getInterface().showHideFigureCreator("forced", 1)
  [994] pushsymb 109 ............................ <#session>
  [996] pusharglist 1 ........................... <#session>
  [998] extcall 110 ............................. <getObject(#session)>
  [1000] pushcons 52 ............................ <"conf_parent_email_request_reregistration">
  [1002] pusharglist 2 .......................... <getObject(#session), "conf_parent_email_request_reregistration">
  [1004] objcall 177 ............................ <getObject(#session).get("conf_parent_email_request_reregistration")>
  [1006] jmpifz [1128] .......................... if getObject(#session).get("conf_parent_email_request_reregistration") then
  [1009] pushsymb 109 ........................... <#session>
  [1011] pusharglist 1 .......................... <#session>
  [1013] extcall 110 ............................ <getObject(#session)>
  [1015] pushcons 88 ............................ <"user_birthday">
  [1017] pusharglist 2 .......................... <getObject(#session), "user_birthday">
  [1019] objcall 177 ............................ <getObject(#session).get("user_birthday")>
  [1021] setlocal 9 ............................. tTempBirthday = getObject(#session).get("user_birthday")
  [1023] pushcons 0 ............................. <EMPTY>
  [1025] setlocal 10 ............................ tBirthday = EMPTY
  [1027] getlocal 9 ............................. <tTempBirthday>
  [1029] pusharglist 1 .......................... <tTempBirthday>
  [1031] extcall 347 ............................ <stringp(tTempBirthday)>
  [1034] jmpifz [1103] .......................... if stringp(tTempBirthday) then
  [1037] getmovieprop 198 ....................... <the itemDelimiter>
  [1039] setlocal 11 ............................ tDelim = the itemDelimiter
  [1041] pushcons 89 ............................ <".">
  [1043] setmovieprop 198 ....................... the itemDelimiter = "."
  [1045] getlocal 9 ............................. <tTempBirthday>
  [1047] pushsymb 200 ........................... <#item>
  [1049] pusharglist 2 .......................... <tTempBirthday, #item>
  [1051] objcall 104 ............................ <tTempBirthday.item.count>
  [1053] pushint8 3 ............................. <3>
  [1055] eq ..................................... <tTempBirthday.item.count = 3>
  [1056] jmpifz [1099] .......................... if tTempBirthday.item.count = 3 then
  [1059] getlocal 9 ............................. <tTempBirthday>
  [1061] pushsymb 200 ........................... <#item>
  [1063] pushint8 3 ............................. <3>
  [1065] pusharglist 3 .......................... <tTempBirthday, #item, 3>
  [1067] objcall 186 ............................ <tTempBirthday.item[3]>
  [1069] pushcons 89 ............................ <".">
  [1071] joinstr ................................ <tTempBirthday.item[3] & ".">
  [1072] getlocal 9 ............................. <tTempBirthday>
  [1074] pushsymb 200 ........................... <#item>
  [1076] pushint8 2 ............................. <2>
  [1078] pusharglist 3 .......................... <tTempBirthday, #item, 2>
  [1080] objcall 186 ............................ <tTempBirthday.item[2]>
  [1082] joinstr ................................ <tTempBirthday.item[3] & "." & tTempBirthday.item[2]>
  [1083] pushcons 89 ............................ <".">
  [1085] joinstr ................................ <tTempBirthday.item[3] & "." & tTempBirthday.item[2] & ".">
  [1086] getlocal 9 ............................. <tTempBirthday>
  [1088] pushsymb 200 ........................... <#item>
  [1090] pushint8 1 ............................. <1>
  [1092] pusharglist 3 .......................... <tTempBirthday, #item, 1>
  [1094] objcall 186 ............................ <tTempBirthday.item[1]>
  [1096] joinstr ................................ <tTempBirthday.item[3] & "." & tTempBirthday.item[2] & "." & tTempBirthday.item[1]>
  [1097] setlocal 10 ............................ tBirthday = tTempBirthday.item[3] & "." & tTempBirthday.item[2] & "." & tTempBirthday.item[1]
  [1099] getlocal 11 ............................ <tDelim>
  [1101] setmovieprop 198 ....................... the itemDelimiter = tDelim
  [1103] pushsymb 109 ........................... <#session>
  [1105] pusharglist 1 .......................... <#session>
  [1107] extcall 110 ............................ <getObject(#session)>
  [1109] pushcons 90 ............................ <"user_name">
  [1111] pusharglist 2 .......................... <getObject(#session), "user_name">
  [1113] objcall 177 ............................ <getObject(#session).get("user_name")>
  [1115] setlocal 12 ............................ tHabboID = getObject(#session).get("user_name")
  [1117] getparam 0 ............................. <me>
  [1119] getlocal 10 ............................ <tBirthday>
  [1121] getlocal 12 ............................ <tHabboID>
  [1123] pusharglistnoret 3 ..................... <me, tBirthday, tHabboID>
  [1125] objcall 335 ............................ me.parentEmailNeedQuery(tBirthday, tHabboID)
  [1128] pop 1
  [1130] pushint8 1 ............................. <1>
  [1132] pusharglistnoret 1 ..................... <1>
  [1134] extcall 89 ............................. return 1
  [1136] jmp [1158] ............................. (case) otherwise:
  [1139] pop 1
  [1141] getparam 0 ............................. <me>
  [1143] pushcons 91 ............................ <"Unknown state:">
  [1145] getparam 1 ............................. <tstate>
  [1147] joinpadstr ............................. <"Unknown state:" && tstate>
  [1148] pushsymb 150 ........................... <#updateState>
  [1150] pusharglist 3 .......................... <me, "Unknown state:" && tstate, #updateState>
  [1152] extcall 85 ............................. <error(me, "Unknown state:" && tstate, #updateState)>
  [1154] pusharglistnoret 1 ..................... <error(me, "Unknown state:" && tstate, #updateState)>
  [1156] extcall 89 ............................. return error(me, "Unknown state:" && tstate, #updateState)
  [1158] pop 1 .................................. end case
  [1160] ret
end
