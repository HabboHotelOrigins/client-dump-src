property pState, pFigurePartListLoadedFlag, pAvailableSetListLoadedFlag, pRegMsgStruct, pCheckingName, pAgeCheckFlag, pParentEmailNeededFlag, pParentEmailAddress, pTotpVerificationCodeNeededFlag, pTotpVerificationCode

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setlocal 0 .............................. pValidPartProps = [:]
  [  5] pusharglist 0 ........................... <[:]>
  [  7] pushproplist ............................ <[:]>
  [  8] setlocal 1 .............................. pValidPartGroups = [:]
  [ 10] pushzero ................................ <0>
  [ 11] setprop 460 ............................. pFigurePartListLoadedFlag = 0
  [ 14] pushzero ................................ <0>
  [ 15] setprop 461 ............................. pAvailableSetListLoadedFlag = 0
  [ 18] pushzero ................................ <0>
  [ 19] setprop 26 .............................. pState = 0
  [ 21] pusharglist 0 ........................... <>
  [ 23] extcall 41 .............................. <VOID>
  [ 25] setprop 462 ............................. pAgeCheckFlag = VOID
  [ 28] pusharglist 0 ........................... <>
  [ 30] extcall 41 .............................. <VOID>
  [ 32] setprop 463 ............................. pParentEmailNeededFlag = VOID
  [ 35] pushcons 0 .............................. <EMPTY>
  [ 37] setprop 464 ............................. pParentEmailAddress = EMPTY
  [ 40] pusharglist 0 ........................... <>
  [ 42] extcall 41 .............................. <VOID>
  [ 44] setprop 465 ............................. pTotpVerificationCodeNeededFlag = VOID
  [ 47] pushcons 0 .............................. <EMPTY>
  [ 49] setprop 466 ............................. pTotpVerificationCode = EMPTY
  [ 52] pusharglist 0 ........................... <[:]>
  [ 54] pushproplist ............................ <[:]>
  [ 55] setprop 467 ............................. pRegMsgStruct = [:]
  [ 58] getprop 467 ............................. <pRegMsgStruct>
  [ 61] pushcons 1 .............................. <"parentagree">
  [ 63] pushsymb 185 ............................ <#id>
  [ 65] pushint8 1 .............................. <1>
  [ 67] pushcons 2 .............................. <"type">
  [ 69] pushsymb 468 ............................ <#boolean>
  [ 72] pusharglist 4 ........................... <[#id: 1, "type": #boolean]>
  [ 74] pushproplist ............................ <[#id: 1, "type": #boolean]>
  [ 75] pusharglistnoret 3 ...................... <pRegMsgStruct, "parentagree", [#id: 1, "type": #boolean]>
  [ 77] objcall 233 ............................. pRegMsgStruct["parentagree"] = [#id: 1, "type": #boolean]
  [ 79] getprop 467 ............................. <pRegMsgStruct>
  [ 82] pushcons 3 .............................. <"name">
  [ 84] pushsymb 185 ............................ <#id>
  [ 86] pushint8 2 .............................. <2>
  [ 88] pushcons 2 .............................. <"type">
  [ 90] pushsymb 234 ............................ <#string>
  [ 92] pusharglist 4 ........................... <[#id: 2, "type": #string]>
  [ 94] pushproplist ............................ <[#id: 2, "type": #string]>
  [ 95] pusharglistnoret 3 ...................... <pRegMsgStruct, "name", [#id: 2, "type": #string]>
  [ 97] objcall 233 ............................. pRegMsgStruct["name"] = [#id: 2, "type": #string]
  [ 99] getprop 467 ............................. <pRegMsgStruct>
  [102] pushcons 4 .............................. <"password">
  [104] pushsymb 185 ............................ <#id>
  [106] pushint8 3 .............................. <3>
  [108] pushcons 2 .............................. <"type">
  [110] pushsymb 234 ............................ <#string>
  [112] pusharglist 4 ........................... <[#id: 3, "type": #string]>
  [114] pushproplist ............................ <[#id: 3, "type": #string]>
  [115] pusharglistnoret 3 ...................... <pRegMsgStruct, "password", [#id: 3, "type": #string]>
  [117] objcall 233 ............................. pRegMsgStruct["password"] = [#id: 3, "type": #string]
  [119] getprop 467 ............................. <pRegMsgStruct>
  [122] pushcons 5 .............................. <"figure">
  [124] pushsymb 185 ............................ <#id>
  [126] pushint8 4 .............................. <4>
  [128] pushcons 2 .............................. <"type">
  [130] pushsymb 234 ............................ <#string>
  [132] pusharglist 4 ........................... <[#id: 4, "type": #string]>
  [134] pushproplist ............................ <[#id: 4, "type": #string]>
  [135] pusharglistnoret 3 ...................... <pRegMsgStruct, "figure", [#id: 4, "type": #string]>
  [137] objcall 233 ............................. pRegMsgStruct["figure"] = [#id: 4, "type": #string]
  [139] getprop 467 ............................. <pRegMsgStruct>
  [142] pushcons 6 .............................. <"sex">
  [144] pushsymb 185 ............................ <#id>
  [146] pushint8 5 .............................. <5>
  [148] pushcons 2 .............................. <"type">
  [150] pushsymb 234 ............................ <#string>
  [152] pusharglist 4 ........................... <[#id: 5, "type": #string]>
  [154] pushproplist ............................ <[#id: 5, "type": #string]>
  [155] pusharglistnoret 3 ...................... <pRegMsgStruct, "sex", [#id: 5, "type": #string]>
  [157] objcall 233 ............................. pRegMsgStruct["sex"] = [#id: 5, "type": #string]
  [159] getprop 467 ............................. <pRegMsgStruct>
  [162] pushcons 7 .............................. <"customData">
  [164] pushsymb 185 ............................ <#id>
  [166] pushint8 6 .............................. <6>
  [168] pushcons 2 .............................. <"type">
  [170] pushsymb 234 ............................ <#string>
  [172] pusharglist 4 ........................... <[#id: 6, "type": #string]>
  [174] pushproplist ............................ <[#id: 6, "type": #string]>
  [175] pusharglistnoret 3 ...................... <pRegMsgStruct, "customData", [#id: 6, "type": #string]>
  [177] objcall 233 ............................. pRegMsgStruct["customData"] = [#id: 6, "type": #string]
  [179] getprop 467 ............................. <pRegMsgStruct>
  [182] pushcons 8 .............................. <"email">
  [184] pushsymb 185 ............................ <#id>
  [186] pushint8 7 .............................. <7>
  [188] pushcons 2 .............................. <"type">
  [190] pushsymb 234 ............................ <#string>
  [192] pusharglist 4 ........................... <[#id: 7, "type": #string]>
  [194] pushproplist ............................ <[#id: 7, "type": #string]>
  [195] pusharglistnoret 3 ...................... <pRegMsgStruct, "email", [#id: 7, "type": #string]>
  [197] objcall 233 ............................. pRegMsgStruct["email"] = [#id: 7, "type": #string]
  [199] getprop 467 ............................. <pRegMsgStruct>
  [202] pushcons 9 .............................. <"birthday">
  [204] pushsymb 185 ............................ <#id>
  [206] pushint8 8 .............................. <8>
  [208] pushcons 2 .............................. <"type">
  [210] pushsymb 234 ............................ <#string>
  [212] pusharglist 4 ........................... <[#id: 8, "type": #string]>
  [214] pushproplist ............................ <[#id: 8, "type": #string]>
  [215] pusharglistnoret 3 ...................... <pRegMsgStruct, "birthday", [#id: 8, "type": #string]>
  [217] objcall 233 ............................. pRegMsgStruct["birthday"] = [#id: 8, "type": #string]
  [219] getprop 467 ............................. <pRegMsgStruct>
  [222] pushcons 10 ............................. <"directMail">
  [224] pushsymb 185 ............................ <#id>
  [226] pushint8 9 .............................. <9>
  [228] pushcons 2 .............................. <"type">
  [230] pushsymb 468 ............................ <#boolean>
  [233] pusharglist 4 ........................... <[#id: 9, "type": #boolean]>
  [235] pushproplist ............................ <[#id: 9, "type": #boolean]>
  [236] pusharglistnoret 3 ...................... <pRegMsgStruct, "directMail", [#id: 9, "type": #boolean]>
  [238] objcall 233 ............................. pRegMsgStruct["directMail"] = [#id: 9, "type": #boolean]
  [240] getprop 467 ............................. <pRegMsgStruct>
  [243] pushcons 11 ............................. <"has_read_agreement">
  [245] pushsymb 185 ............................ <#id>
  [247] pushint8 10 ............................. <10>
  [249] pushcons 2 .............................. <"type">
  [251] pushsymb 468 ............................ <#boolean>
  [254] pusharglist 4 ........................... <[#id: 10, "type": #boolean]>
  [256] pushproplist ............................ <[#id: 10, "type": #boolean]>
  [257] pusharglistnoret 3 ...................... <pRegMsgStruct, "has_read_agreement", [#id: 10, "type": #boolean]>
  [259] objcall 233 ............................. pRegMsgStruct["has_read_agreement"] = [#id: 10, "type": #boolean]
  [261] getprop 467 ............................. <pRegMsgStruct>
  [264] pushcons 12 ............................. <"isp_id">
  [266] pushsymb 185 ............................ <#id>
  [268] pushint8 11 ............................. <11>
  [270] pushcons 2 .............................. <"type">
  [272] pushsymb 234 ............................ <#string>
  [274] pusharglist 4 ........................... <[#id: 11, "type": #string]>
  [276] pushproplist ............................ <[#id: 11, "type": #string]>
  [277] pusharglistnoret 3 ...................... <pRegMsgStruct, "isp_id", [#id: 11, "type": #string]>
  [279] objcall 233 ............................. pRegMsgStruct["isp_id"] = [#id: 11, "type": #string]
  [281] getprop 467 ............................. <pRegMsgStruct>
  [284] pushcons 13 ............................. <"partnersite">
  [286] pushsymb 185 ............................ <#id>
  [288] pushint8 12 ............................. <12>
  [290] pushcons 2 .............................. <"type">
  [292] pushsymb 234 ............................ <#string>
  [294] pusharglist 4 ........................... <[#id: 12, "type": #string]>
  [296] pushproplist ............................ <[#id: 12, "type": #string]>
  [297] pusharglistnoret 3 ...................... <pRegMsgStruct, "partnersite", [#id: 12, "type": #string]>
  [299] objcall 233 ............................. pRegMsgStruct["partnersite"] = [#id: 12, "type": #string]
  [301] getprop 467 ............................. <pRegMsgStruct>
  [304] pushcons 14 ............................. <"oldpassword">
  [306] pushsymb 185 ............................ <#id>
  [308] pushint8 13 ............................. <13>
  [310] pushcons 2 .............................. <"type">
  [312] pushsymb 234 ............................ <#string>
  [314] pusharglist 4 ........................... <[#id: 13, "type": #string]>
  [316] pushproplist ............................ <[#id: 13, "type": #string]>
  [317] pusharglistnoret 3 ...................... <pRegMsgStruct, "oldpassword", [#id: 13, "type": #string]>
  [319] objcall 233 ............................. pRegMsgStruct["oldpassword"] = [#id: 13, "type": #string]
  [321] getprop 467 ............................. <pRegMsgStruct>
  [324] pushcons 15 ............................. <"onlineStatus">
  [326] pushsymb 185 ............................ <#id>
  [328] pushint8 14 ............................. <14>
  [330] pushcons 2 .............................. <"type">
  [332] pushsymb 468 ............................ <#boolean>
  [335] pusharglist 4 ........................... <[#id: 14, "type": #boolean]>
  [337] pushproplist ............................ <[#id: 14, "type": #boolean]>
  [338] pusharglistnoret 3 ...................... <pRegMsgStruct, "onlineStatus", [#id: 14, "type": #boolean]>
  [340] objcall 233 ............................. pRegMsgStruct["onlineStatus"] = [#id: 14, "type": #boolean]
  [342] getprop 467 ............................. <pRegMsgStruct>
  [345] pushcons 16 ............................. <"publicProfileEnabled">
  [347] pushsymb 185 ............................ <#id>
  [349] pushint8 15 ............................. <15>
  [351] pushcons 2 .............................. <"type">
  [353] pushsymb 468 ............................ <#boolean>
  [356] pusharglist 4 ........................... <[#id: 15, "type": #boolean]>
  [358] pushproplist ............................ <[#id: 15, "type": #boolean]>
  [359] pusharglistnoret 3 ...................... <pRegMsgStruct, "publicProfileEnabled", [#id: 15, "type": #boolean]>
  [361] objcall 233 ............................. pRegMsgStruct["publicProfileEnabled"] = [#id: 15, "type": #boolean]
  [363] getprop 467 ............................. <pRegMsgStruct>
  [366] pushcons 17 ............................. <"friendRequestsEnabled">
  [368] pushsymb 185 ............................ <#id>
  [370] pushint8 16 ............................. <16>
  [372] pushcons 2 .............................. <"type">
  [374] pushsymb 468 ............................ <#boolean>
  [377] pusharglist 4 ........................... <[#id: 16, "type": #boolean]>
  [379] pushproplist ............................ <[#id: 16, "type": #boolean]>
  [380] pusharglistnoret 3 ...................... <pRegMsgStruct, "friendRequestsEnabled", [#id: 16, "type": #boolean]>
  [382] objcall 233 ............................. pRegMsgStruct["friendRequestsEnabled"] = [#id: 16, "type": #boolean]
  [384] getprop 467 ............................. <pRegMsgStruct>
  [387] pushcons 18 ............................. <"offlineMessagingEnabled">
  [389] pushsymb 185 ............................ <#id>
  [391] pushint8 17 ............................. <17>
  [393] pushcons 2 .............................. <"type">
  [395] pushsymb 468 ............................ <#boolean>
  [398] pusharglist 4 ........................... <[#id: 17, "type": #boolean]>
  [400] pushproplist ............................ <[#id: 17, "type": #boolean]>
  [401] pusharglistnoret 3 ...................... <pRegMsgStruct, "offlineMessagingEnabled", [#id: 17, "type": #boolean]>
  [403] objcall 233 ............................. pRegMsgStruct["offlineMessagingEnabled"] = [#id: 17, "type": #boolean]
  [405] getprop 467 ............................. <pRegMsgStruct>
  [408] pushcons 19 ............................. <"totpCode">
  [410] pushsymb 185 ............................ <#id>
  [412] pushint8 18 ............................. <18>
  [414] pushcons 2 .............................. <"type">
  [416] pushsymb 234 ............................ <#string>
  [418] pusharglist 4 ........................... <[#id: 18, "type": #string]>
  [420] pushproplist ............................ <[#id: 18, "type": #string]>
  [421] pusharglistnoret 3 ...................... <pRegMsgStruct, "totpCode", [#id: 18, "type": #string]>
  [423] objcall 233 ............................. pRegMsgStruct["totpCode"] = [#id: 18, "type": #string]
  [425] pushsymb 470 ............................ <#enterRoom>
  [428] getparam 0 .............................. <me>
  [430] pusharglist 1 ........................... <me>
  [432] objcall 85 .............................. <me.getID()>
  [434] pushsymb 95 ............................. <#closeFigureCreator>
  [436] pusharglistnoret 3 ...................... <#enterRoom, me.getID(), #closeFigureCreator>
  [438] extcall 469 ............................. registerMessage(#enterRoom, me.getID(), #closeFigureCreator)
  [441] pushsymb 471 ............................ <#changeRoom>
  [444] getparam 0 .............................. <me>
  [446] pusharglist 1 ........................... <me>
  [448] objcall 85 .............................. <me.getID()>
  [450] pushsymb 95 ............................. <#closeFigureCreator>
  [452] pusharglistnoret 3 ...................... <#changeRoom, me.getID(), #closeFigureCreator>
  [454] extcall 469 ............................. registerMessage(#changeRoom, me.getID(), #closeFigureCreator)
  [457] pushsymb 472 ............................ <#leaveRoom>
  [460] getparam 0 .............................. <me>
  [462] pusharglist 1 ........................... <me>
  [464] objcall 85 .............................. <me.getID()>
  [466] pushsymb 95 ............................. <#closeFigureCreator>
  [468] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #closeFigureCreator>
  [470] extcall 469 ............................. registerMessage(#leaveRoom, me.getID(), #closeFigureCreator)
  [473] pushsymb 473 ............................ <#show_registration>
  [476] getparam 0 .............................. <me>
  [478] pusharglist 1 ........................... <me>
  [480] objcall 85 .............................. <me.getID()>
  [482] pushsymb 94 ............................. <#openFigureCreator>
  [484] pusharglistnoret 3 ...................... <#show_registration, me.getID(), #openFigureCreator>
  [486] extcall 469 ............................. registerMessage(#show_registration, me.getID(), #openFigureCreator)
  [489] pushsymb 474 ............................ <#hide_registration>
  [492] getparam 0 .............................. <me>
  [494] pusharglist 1 ........................... <me>
  [496] objcall 85 .............................. <me.getID()>
  [498] pushsymb 95 ............................. <#closeFigureCreator>
  [500] pusharglistnoret 3 ...................... <#hide_registration, me.getID(), #closeFigureCreator>
  [502] extcall 469 ............................. registerMessage(#hide_registration, me.getID(), #closeFigureCreator)
  [505] pushsymb 475 ............................ <#figure_ready>
  [508] getparam 0 .............................. <me>
  [510] pusharglist 1 ........................... <me>
  [512] objcall 85 .............................. <me.getID()>
  [514] pushsymb 456 ............................ <#figureSystemReady>
  [517] pusharglistnoret 3 ...................... <#figure_ready, me.getID(), #figureSystemReady>
  [519] extcall 469 ............................. registerMessage(#figure_ready, me.getID(), #figureSystemReady)
  [522] ret
end

on deconstruct me
  [  0] pushsymb 470 ............................ <#enterRoom>
  [  3] getparam 0 .............................. <me>
  [  5] pusharglist 1 ........................... <me>
  [  7] objcall 85 .............................. <me.getID()>
  [  9] pusharglistnoret 2 ...................... <#enterRoom, me.getID()>
  [ 11] extcall 478 ............................. unregisterMessage(#enterRoom, me.getID())
  [ 14] pushsymb 471 ............................ <#changeRoom>
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 85 .............................. <me.getID()>
  [ 23] pusharglistnoret 2 ...................... <#changeRoom, me.getID()>
  [ 25] extcall 478 ............................. unregisterMessage(#changeRoom, me.getID())
  [ 28] pushsymb 472 ............................ <#leaveRoom>
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 85 .............................. <me.getID()>
  [ 37] pusharglistnoret 2 ...................... <#leaveRoom, me.getID()>
  [ 39] extcall 478 ............................. unregisterMessage(#leaveRoom, me.getID())
  [ 42] pushsymb 473 ............................ <#show_registration>
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 85 .............................. <me.getID()>
  [ 51] pusharglistnoret 2 ...................... <#show_registration, me.getID()>
  [ 53] extcall 478 ............................. unregisterMessage(#show_registration, me.getID())
  [ 56] pushsymb 474 ............................ <#hide_registration>
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglist 1 ........................... <me>
  [ 63] objcall 85 .............................. <me.getID()>
  [ 65] pusharglistnoret 2 ...................... <#hide_registration, me.getID()>
  [ 67] extcall 478 ............................. unregisterMessage(#hide_registration, me.getID())
  [ 70] pushsymb 475 ............................ <#figure_ready>
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglist 1 ........................... <me>
  [ 77] objcall 85 .............................. <me.getID()>
  [ 79] pusharglistnoret 2 ...................... <#figure_ready, me.getID()>
  [ 81] extcall 478 ............................. unregisterMessage(#figure_ready, me.getID())
  [ 84] getparam 0 .............................. <me>
  [ 86] pushcons 20 ............................. <"reset">
  [ 88] pusharglist 2 ........................... <me, "reset">
  [ 90] objcall 27 .............................. <me.updateState("reset")>
  [ 92] pusharglistnoret 1 ...................... <me.updateState("reset")>
  [ 94] extcall 23 .............................. return me.updateState("reset")
  [ 96] ret
end

on setBlockTime me, tdata
  [  0] pushcons 21 ............................. <"blocktime">
  [  2] getparam 1 .............................. <tdata>
  [  4] pusharglistnoret 2 ...................... <"blocktime", tdata>
  [  6] extcall 479 ............................. setPref("blocktime", tdata)
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglistnoret 1 ...................... <me>
  [ 13] objcall 95 .............................. me.closeFigureCreator()
  [ 15] pushsymb 183 ............................ <#alert>
  [ 17] pushsymb 218 ............................ <#title>
  [ 19] pushcons 22 ............................. <"alert_win_coppa">
  [ 21] pushsymb 184 ............................ <#Msg>
  [ 23] pushcons 23 ............................. <"alert_reg_age">
  [ 25] pushsymb 185 ............................ <#id>
  [ 27] pushcons 24 ............................. <"underage">
  [ 29] pushsymb 186 ............................ <#modal>
  [ 31] pushint8 1 .............................. <1>
  [ 33] pusharglist 8 ........................... <[#title: "alert_win_coppa", #Msg: "alert_reg_age", #id: "underage", #modal: 1]>
  [ 35] pushproplist ............................ <[#title: "alert_win_coppa", #Msg: "alert_reg_age", #id: "underage", #modal: 1]>
  [ 36] pusharglistnoret 2 ...................... <#alert, [#title: "alert_win_coppa", #Msg: "alert_reg_age", #id: "underage", #modal: 1]>
  [ 38] extcall 182 ............................. executeMessage(#alert, [#title: "alert_win_coppa", #Msg: "alert_reg_age", #id: "underage", #modal: 1])
  [ 40] pushcons 25 ............................. <"connection.info.id">
  [ 42] pusharglist 1 ........................... <"connection.info.id">
  [ 44] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 46] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 48] extcall 428 ............................. <removeConnection(getVariable("connection.info.id"))>
  [ 51] pusharglistnoret 1 ...................... <removeConnection(getVariable("connection.info.id"))>
  [ 53] extcall 23 .............................. return removeConnection(getVariable("connection.info.id"))
  [ 55] ret
end

on continueBlocking me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 95 .............................. me.closeFigureCreator()
  [  6] pushsymb 183 ............................ <#alert>
  [  8] pushsymb 218 ............................ <#title>
  [ 10] pushcons 22 ............................. <"alert_win_coppa">
  [ 12] pushsymb 184 ............................ <#Msg>
  [ 14] pushcons 26 ............................. <"alert_reg_blocked">
  [ 16] pushsymb 185 ............................ <#id>
  [ 18] pushcons 24 ............................. <"underage">
  [ 20] pushsymb 186 ............................ <#modal>
  [ 22] pushint8 1 .............................. <1>
  [ 24] pusharglist 8 ........................... <[#title: "alert_win_coppa", #Msg: "alert_reg_blocked", #id: "underage", #modal: 1]>
  [ 26] pushproplist ............................ <[#title: "alert_win_coppa", #Msg: "alert_reg_blocked", #id: "underage", #modal: 1]>
  [ 27] pusharglistnoret 2 ...................... <#alert, [#title: "alert_win_coppa", #Msg: "alert_reg_blocked", #id: "underage", #modal: 1]>
  [ 29] extcall 182 ............................. executeMessage(#alert, [#title: "alert_win_coppa", #Msg: "alert_reg_blocked", #id: "underage", #modal: 1])
  [ 31] pushcons 25 ............................. <"connection.info.id">
  [ 33] pusharglist 1 ........................... <"connection.info.id">
  [ 35] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 37] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 39] extcall 428 ............................. <removeConnection(getVariable("connection.info.id"))>
  [ 42] pusharglistnoret 1 ...................... <removeConnection(getVariable("connection.info.id"))>
  [ 44] extcall 23 .............................. return removeConnection(getVariable("connection.info.id"))
  [ 46] ret
end

on getRealtime me
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 84 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 11] pushcons 27 ............................. <"COPPA_REG_GETREALTIME">
  [ 13] pusharglistnoret 2 ...................... <getConnection(getVariable("connection.info.id")), "COPPA_REG_GETREALTIME">
  [ 15] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("COPPA_REG_GETREALTIME")
  [ 18] ret
end

on checkBlockTime me
  [  0] pushcons 28 ............................. <"Blocktime">
  [  2] pusharglist 1 ........................... <"Blocktime">
  [  4] extcall 482 ............................. <getPref("Blocktime")>
  [  7] setlocal 0 .............................. tdata = getPref("Blocktime")
  [  9] pushcons 25 ............................. <"connection.info.id">
  [ 11] pusharglist 1 ........................... <"connection.info.id">
  [ 13] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 15] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 17] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 20] pushcons 29 ............................. <"COPPA_REG_CHECKTIME">
  [ 22] pushsymb 234 ............................ <#string>
  [ 24] getlocal 0 .............................. <tdata>
  [ 26] pusharglist 2 ........................... <[#string: tdata]>
  [ 28] pushproplist ............................ <[#string: tdata]>
  [ 29] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "COPPA_REG_CHECKTIME", [#string: tdata]>
  [ 31] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("COPPA_REG_CHECKTIME", [#string: tdata])
  [ 34] ret
end

on resetBlockTime me
  [  0] pushcons 21 ............................. <"blocktime">
  [  2] pushcons 30 ............................. <"0">
  [  4] pusharglistnoret 2 ...................... <"blocktime", "0">
  [  6] extcall 479 ............................. setPref("blocktime", "0")
  [  9] getparam 0 .............................. <me>
  [ 11] pushcons 31 ............................. <"openFigureCreator">
  [ 13] pusharglist 2 ........................... <me, "openFigureCreator">
  [ 15] objcall 27 .............................. <me.updateState("openFigureCreator")>
  [ 17] pusharglistnoret 1 ...................... <me.updateState("openFigureCreator")>
  [ 19] extcall 23 .............................. return me.updateState("openFigureCreator")
  [ 21] ret
end

on openFigureCreator me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 31 ............................. <"openFigureCreator">
  [  4] pusharglist 2 ........................... <me, "openFigureCreator">
  [  6] objcall 27 .............................. <me.updateState("openFigureCreator")>
  [  8] pusharglistnoret 1 ...................... <me.updateState("openFigureCreator")>
  [ 10] extcall 23 .............................. return me.updateState("openFigureCreator")
  [ 12] ret
end

on openFigureUpdate me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 32 ............................. <"openFigureUpdate">
  [  4] pusharglist 2 ........................... <me, "openFigureUpdate">
  [  6] objcall 27 .............................. <me.updateState("openFigureUpdate")>
  [  8] pusharglistnoret 1 ...................... <me.updateState("openFigureUpdate")>
  [ 10] extcall 23 .............................. return me.updateState("openFigureUpdate")
  [ 12] ret
end

on closeFigureCreator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 43 .............................. <me.getInterface()>
  [  6] pusharglist 1 ........................... <me.getInterface()>
  [  8] objcall 95 .............................. <me.getInterface().closeFigureCreator()>
  [ 10] pusharglistnoret 1 ...................... <me.getInterface().closeFigureCreator()>
  [ 12] extcall 23 .............................. return me.getInterface().closeFigureCreator()
  [ 14] ret
end

on reRegistrationRequired me
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 33 ............................. <"openForcedUpdate">
  [  4] pusharglist 2 ........................... <me, "openForcedUpdate">
  [  6] objcall 27 .............................. <me.updateState("openForcedUpdate")>
  [  8] pusharglistnoret 1 ...................... <me.updateState("openForcedUpdate")>
  [ 10] extcall 23 .............................. return me.updateState("openForcedUpdate")
  [ 12] ret
end

on figureSystemReady me
  [  0] getparam 0 .............................. <me>
  [  2] getprop 26 .............................. <pState>
  [  4] pusharglist 2 ........................... <me, pState>
  [  6] objcall 27 .............................. <me.updateState(pState)>
  [  8] pusharglistnoret 1 ...................... <me.updateState(pState)>
  [ 10] extcall 23 .............................. return me.updateState(pState)
  [ 12] ret
end

on checkUserName me, tNameStr
  [  0] pushsymb 483 ............................ <#string_validator>
  [  3] pusharglist 1 ........................... <#string_validator>
  [  5] extcall 53 .............................. <objectExists(#string_validator)>
  [  7] jmpifz [ 85] ............................ if objectExists(#string_validator) then
  [ 10] pushsymb 483 ............................ <#string_validator>
  [ 13] pusharglist 1 ........................... <#string_validator>
  [ 15] extcall 29 .............................. <getObject(#string_validator)>
  [ 17] getparam 1 .............................. <tNameStr>
  [ 19] pusharglist 2 ........................... <getObject(#string_validator), tNameStr>
  [ 21] objcall 484 ............................. <getObject(#string_validator).validateString(tNameStr)>
  [ 24] not ..................................... <not getObject(#string_validator).validateString(tNameStr)>
  [ 25] jmpifz [ 85] ............................ if not getObject(#string_validator).validateString(tNameStr) then
  [ 28] pushsymb 483 ............................ <#string_validator>
  [ 31] pusharglist 1 ........................... <#string_validator>
  [ 33] extcall 29 .............................. <getObject(#string_validator)>
  [ 35] pusharglist 1 ........................... <getObject(#string_validator)>
  [ 37] objcall 485 ............................. <getObject(#string_validator).getFailedChar()>
  [ 40] setlocal 0 .............................. tFailed = getObject(#string_validator).getFailedChar()
  [ 42] pushcons 34 ............................. <"alert_InvalidChar">
  [ 44] pushcons 35 ............................. <"alert_InvalidUserName">
  [ 46] pusharglist 1 ........................... <"alert_InvalidUserName">
  [ 48] extcall 74 .............................. <getText("alert_InvalidUserName")>
  [ 50] pushcons 36 ............................. <"\\x">
  [ 52] getlocal 0 .............................. <tFailed>
  [ 54] pusharglist 3 ........................... <getText("alert_InvalidUserName"), "\\x", tFailed>
  [ 56] extcall 486 ............................. <replaceChunks(getText("alert_InvalidUserName"), "\\x", tFailed)>
  [ 59] pusharglistnoret 2 ...................... <"alert_InvalidChar", replaceChunks(getText("alert_InvalidUserName"), "\\x", tFailed)>
  [ 61] extcall 198 ............................. setText("alert_InvalidChar", replaceChunks(getText("alert_InvalidUserName"), "\\x", tFailed))
  [ 63] pushsymb 183 ............................ <#alert>
  [ 65] pushsymb 184 ............................ <#Msg>
  [ 67] pushcons 34 ............................. <"alert_InvalidChar">
  [ 69] pushsymb 185 ............................ <#id>
  [ 71] pushcons 37 ............................. <"nameinvalid">
  [ 73] pusharglist 4 ........................... <[#Msg: "alert_InvalidChar", #id: "nameinvalid"]>
  [ 75] pushproplist ............................ <[#Msg: "alert_InvalidChar", #id: "nameinvalid"]>
  [ 76] pusharglistnoret 2 ...................... <#alert, [#Msg: "alert_InvalidChar", #id: "nameinvalid"]>
  [ 78] extcall 182 ............................. executeMessage(#alert, [#Msg: "alert_InvalidChar", #id: "nameinvalid"])
  [ 80] pushzero ................................ <0>
  [ 81] pusharglistnoret 1 ...................... <0>
  [ 83] extcall 23 .............................. return 0
  [ 85] getparam 1 .............................. <tNameStr>
  [ 87] setprop 40 .............................. pCheckingName = tNameStr
  [ 89] pushcons 25 ............................. <"connection.info.id">
  [ 91] pushsymb 487 ............................ <#info>
  [ 94] pusharglist 2 ........................... <"connection.info.id", #info>
  [ 96] extcall 84 .............................. <getVariable("connection.info.id", #info)>
  [ 98] pusharglist 1 ........................... <getVariable("connection.info.id", #info)>
  [100] extcall 427 ............................. <connectionExists(getVariable("connection.info.id", #info))>
  [103] jmpifz [138] ............................ if connectionExists(getVariable("connection.info.id", #info)) then
  [106] pushcons 25 ............................. <"connection.info.id">
  [108] pushsymb 487 ............................ <#info>
  [111] pusharglist 2 ........................... <"connection.info.id", #info>
  [113] extcall 84 .............................. <getVariable("connection.info.id", #info)>
  [115] pusharglist 1 ........................... <getVariable("connection.info.id", #info)>
  [117] extcall 480 ............................. <getConnection(getVariable("connection.info.id", #info))>
  [120] pushcons 38 ............................. <"APPROVENAME">
  [122] pushsymb 234 ............................ <#string>
  [124] getparam 1 .............................. <tNameStr>
  [126] pushsymb 256 ............................ <#integer>
  [129] pushzero ................................ <0>
  [130] pusharglist 4 ........................... <[#string: tNameStr, #integer: 0]>
  [132] pushproplist ............................ <[#string: tNameStr, #integer: 0]>
  [133] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id", #info)), "APPROVENAME", [#string: tNameStr, #integer: 0]>
  [135] objcall 481 ............................. getConnection(getVariable("connection.info.id", #info)).send("APPROVENAME", [#string: tNameStr, #integer: 0])
  [138] pushint8 1 .............................. <1>
  [140] pusharglistnoret 1 ...................... <1>
  [142] extcall 23 .............................. return 1
  [144] ret
end

on sendNewFigureDataToServer me, tPropList
  [  0] pushcons 39 ............................. <"Figure_System">
  [  2] pusharglist 1 ........................... <"Figure_System">
  [  4] extcall 53 .............................. <objectExists("Figure_System")>
  [  6] not ..................................... <not objectExists("Figure_System")>
  [  7] jmpifz [ 25] ............................ if not objectExists("Figure_System") then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 40 ............................. <"Figure system object not found">
  [ 14] pushsymb 385 ............................ <#sendNewFigureDataToServer>
  [ 17] pusharglist 3 ........................... <me, "Figure system object not found", #sendNewFigureDataToServer>
  [ 19] extcall 162 ............................. <error(me, "Figure system object not found", #sendNewFigureDataToServer)>
  [ 21] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #sendNewFigureDataToServer)>
  [ 23] extcall 23 .............................. return error(me, "Figure system object not found", #sendNewFigureDataToServer)
  [ 25] getparam 1 .............................. <tPropList>
  [ 27] pushcons 5 .............................. <"figure">
  [ 29] pusharglist 2 ........................... <tPropList, "figure">
  [ 31] objcall 175 ............................. <tPropList["figure"]>
  [ 33] pusharglist 1 ........................... <tPropList["figure"]>
  [ 35] extcall 60 .............................. <voidp(tPropList["figure"])>
  [ 37] not ..................................... <not voidp(tPropList["figure"])>
  [ 38] jmpifz [ 86] ............................ if not voidp(tPropList["figure"]) then
  [ 41] pushcons 39 ............................. <"Figure_System">
  [ 43] pusharglist 1 ........................... <"Figure_System">
  [ 45] extcall 29 .............................. <getObject("Figure_System")>
  [ 47] getparam 1 .............................. <tPropList>
  [ 49] pushcons 5 .............................. <"figure">
  [ 51] pusharglist 2 ........................... <tPropList, "figure">
  [ 53] objcall 175 ............................. <tPropList["figure"]>
  [ 55] getparam 1 .............................. <tPropList>
  [ 57] pushcons 6 .............................. <"sex">
  [ 59] pusharglist 2 ........................... <tPropList, "sex">
  [ 61] objcall 175 ............................. <tPropList["sex"]>
  [ 63] pusharglist 3 ........................... <getObject("Figure_System"), tPropList["figure"], tPropList["sex"]>
  [ 65] objcall 489 ............................. <getObject("Figure_System").GenerateFigureDataToServerMode(tPropList["figure"], tPropList["sex"])>
  [ 68] setlocal 0 .............................. tFigure = getObject("Figure_System").GenerateFigureDataToServerMode(tPropList["figure"], tPropList["sex"])
  [ 70] getparam 1 .............................. <tPropList>
  [ 72] pushcons 5 .............................. <"figure">
  [ 74] getlocal 0 .............................. <tFigure>
  [ 76] pushcons 41 ............................. <"figuretoServer">
  [ 78] pusharglist 2 ........................... <tFigure, "figuretoServer">
  [ 80] objcall 175 ............................. <tFigure["figuretoServer"]>
  [ 82] pusharglistnoret 3 ...................... <tPropList, "figure", tFigure["figuretoServer"]>
  [ 84] objcall 233 ............................. tPropList["figure"] = tFigure["figuretoServer"]
  [ 86] pushcons 42 ............................. <"user_isp">
  [ 88] pusharglist 1 ........................... <"user_isp">
  [ 90] extcall 163 ............................. <variableExists("user_isp")>
  [ 92] jmpifz [123] ............................ if variableExists("user_isp") then
  [ 95] pushcons 42 ............................. <"user_isp">
  [ 97] pusharglist 1 ........................... <"user_isp">
  [ 99] extcall 84 .............................. <getVariable("user_isp")>
  [101] pusharglist 1 ........................... <getVariable("user_isp")>
  [103] extcall 60 .............................. <voidp(getVariable("user_isp"))>
  [105] not ..................................... <not voidp(getVariable("user_isp"))>
  [106] jmpifz [123] ............................ if not voidp(getVariable("user_isp")) then
  [109] getparam 1 .............................. <tPropList>
  [111] pushcons 12 ............................. <"isp_id">
  [113] pushcons 42 ............................. <"user_isp">
  [115] pusharglist 1 ........................... <"user_isp">
  [117] extcall 84 .............................. <getVariable("user_isp")>
  [119] pusharglistnoret 3 ...................... <tPropList, "isp_id", getVariable("user_isp")>
  [121] objcall 233 ............................. tPropList["isp_id"] = getVariable("user_isp")
  [123] pushcons 43 ............................. <"user_partnersite">
  [125] pusharglist 1 ........................... <"user_partnersite">
  [127] extcall 163 ............................. <variableExists("user_partnersite")>
  [129] jmpifz [160] ............................ if variableExists("user_partnersite") then
  [132] pushcons 43 ............................. <"user_partnersite">
  [134] pusharglist 1 ........................... <"user_partnersite">
  [136] extcall 84 .............................. <getVariable("user_partnersite")>
  [138] pusharglist 1 ........................... <getVariable("user_partnersite")>
  [140] extcall 60 .............................. <voidp(getVariable("user_partnersite"))>
  [142] not ..................................... <not voidp(getVariable("user_partnersite"))>
  [143] jmpifz [160] ............................ if not voidp(getVariable("user_partnersite")) then
  [146] getparam 1 .............................. <tPropList>
  [148] pushcons 13 ............................. <"partnersite">
  [150] pushcons 43 ............................. <"user_partnersite">
  [152] pusharglist 1 ........................... <"user_partnersite">
  [154] extcall 84 .............................. <getVariable("user_partnersite")>
  [156] pusharglistnoret 3 ...................... <tPropList, "partnersite", getVariable("user_partnersite")>
  [158] objcall 233 ............................. tPropList["partnersite"] = getVariable("user_partnersite")
  [160] pusharglist 0 ........................... <[:]>
  [162] pushproplist ............................ <[:]>
  [163] setlocal 1 .............................. tMsg = [:]
  [165] pushint8 1 .............................. <1>
  [167] setlocal 2
  [169] getlocal 2
  [171] getparam 1 .............................. <tPropList>
  [173] getobjprop 52 ........................... <tPropList.count>
  [175] lteq
  [176] jmpifz [396] ............................ repeat with f = 1 to tPropList.count
  [179] getparam 1 .............................. <tPropList>
  [181] getlocal 2 .............................. <f>
  [183] pusharglist 2 ........................... <tPropList, f>
  [185] objcall 261 ............................. <tPropList.getPropAt(f)>
  [188] setlocal 3 .............................. tProp = tPropList.getPropAt(f)
  [190] getparam 1 .............................. <tPropList>
  [192] getlocal 3 .............................. <tProp>
  [194] pusharglist 2 ........................... <tPropList, tProp>
  [196] objcall 175 ............................. <tPropList[tProp]>
  [198] pusharglist 1 ........................... <tPropList[tProp]>
  [200] extcall 60 .............................. <voidp(tPropList[tProp])>
  [202] jmpifz [223] ............................ if voidp(tPropList[tProp]) then
  [205] getparam 0 .............................. <me>
  [207] pushcons 44 ............................. <"Data missing!!">
  [209] getlocal 3 .............................. <tProp>
  [211] joinpadstr .............................. <"Data missing!!" && tProp>
  [212] pushsymb 385 ............................ <#sendNewFigureDataToServer>
  [215] pusharglist 3 ........................... <me, "Data missing!!" && tProp, #sendNewFigureDataToServer>
  [217] extcall 162 ............................. <error(me, "Data missing!!" && tProp, #sendNewFigureDataToServer)>
  [219] pusharglistnoret 1 ...................... <error(me, "Data missing!!" && tProp, #sendNewFigureDataToServer)>
  [221] extcall 23 .............................. return error(me, "Data missing!!" && tProp, #sendNewFigureDataToServer)
  [223] getparam 1 .............................. <tPropList>
  [225] getlocal 3 .............................. <tProp>
  [227] pusharglist 2 ........................... <tPropList, tProp>
  [229] objcall 175 ............................. <tPropList[tProp]>
  [231] setlocal 4 .............................. tValue = tPropList[tProp]
  [233] getprop 467 ............................. <pRegMsgStruct>
  [236] getlocal 3 .............................. <tProp>
  [238] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [240] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [242] pusharglist 1 ........................... <pRegMsgStruct[tProp]>
  [244] extcall 60 .............................. <voidp(pRegMsgStruct[tProp])>
  [246] not ..................................... <not voidp(pRegMsgStruct[tProp])>
  [247] jmpifz [387] ............................ if not voidp(pRegMsgStruct[tProp]) then
  [250] getlocal 1 .............................. <tMsg>
  [252] pushsymb 490 ............................ <#short>
  [255] getprop 467 ............................. <pRegMsgStruct>
  [258] getlocal 3 .............................. <tProp>
  [260] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [262] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [264] getobjprop 185 .......................... <pRegMsgStruct[tProp].id>
  [266] pusharglistnoret 3 ...................... <tMsg, #short, pRegMsgStruct[tProp].id>
  [268] objcall 306 ............................. tMsg.addProp(#short, pRegMsgStruct[tProp].id)
  [271] getprop 467 ............................. <pRegMsgStruct>
  [274] getlocal 3 .............................. <tProp>
  [276] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [278] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [280] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [282] pushsymb 468 ............................ <#boolean>
  [285] eq ...................................... <pRegMsgStruct[tProp].type = #boolean>
  [286] jmpifz [298] ............................ if pRegMsgStruct[tProp].type = #boolean then
  [289] getlocal 4 .............................. <tValue>
  [291] pusharglist 1 ........................... <tValue>
  [293] extcall 256 ............................. <integer(tValue)>
  [296] setlocal 4 .............................. tValue = integer(tValue)
  [298] getprop 467 ............................. <pRegMsgStruct>
  [301] getlocal 3 .............................. <tProp>
  [303] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [305] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [307] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [309] pushsymb 234 ............................ <#string>
  [311] eq ...................................... <pRegMsgStruct[tProp].type = #string>
  [312] getlocal 4 .............................. <tValue>
  [314] getobjprop 173 .......................... <tValue.ilk>
  [316] pushsymb 234 ............................ <#string>
  [318] nteq .................................... <tValue.ilk <> #string>
  [319] and ..................................... <(pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string)>
  [320] jmpifz [331] ............................ if (pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string) then
  [323] getlocal 4 .............................. <tValue>
  [325] pusharglist 1 ........................... <tValue>
  [327] extcall 234 ............................. <string(tValue)>
  [329] setlocal 4 .............................. tValue = string(tValue)
  [331] getprop 467 ............................. <pRegMsgStruct>
  [334] getlocal 3 .............................. <tProp>
  [336] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [338] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [340] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [342] pushsymb 490 ............................ <#short>
  [345] eq ...................................... <pRegMsgStruct[tProp].type = #short>
  [346] getlocal 4 .............................. <tValue>
  [348] getobjprop 173 .......................... <tValue.ilk>
  [350] pushsymb 256 ............................ <#integer>
  [353] nteq .................................... <tValue.ilk <> #integer>
  [354] and ..................................... <(pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer)>
  [355] jmpifz [367] ............................ if (pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer) then
  [358] getlocal 4 .............................. <tValue>
  [360] pusharglist 1 ........................... <tValue>
  [362] extcall 256 ............................. <integer(tValue)>
  [365] setlocal 4 .............................. tValue = integer(tValue)
  [367] getlocal 1 .............................. <tMsg>
  [369] getprop 467 ............................. <pRegMsgStruct>
  [372] getlocal 3 .............................. <tProp>
  [374] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [376] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [378] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [380] getlocal 4 .............................. <tValue>
  [382] pusharglistnoret 3 ...................... <tMsg, pRegMsgStruct[tProp].type, tValue>
  [384] objcall 306 ............................. tMsg.addProp(pRegMsgStruct[tProp].type, tValue)
  [387] pushint8 1
  [389] getlocal 2
  [391] add
  [392] setlocal 2
  [394] endrepeat [169]
  [396] pushcons 25 ............................. <"connection.info.id">
  [398] pusharglist 1 ........................... <"connection.info.id">
  [400] extcall 84 .............................. <getVariable("connection.info.id")>
  [402] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [404] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [407] jmpifz [437] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [410] pushcons 25 ............................. <"connection.info.id">
  [412] pusharglist 1 ........................... <"connection.info.id">
  [414] extcall 84 .............................. <getVariable("connection.info.id")>
  [416] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [418] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [421] pushcons 45 ............................. <"REGISTER">
  [423] getlocal 1 .............................. <tMsg>
  [425] pusharglist 3 ........................... <getConnection(getVariable("connection.info.id")), "REGISTER", tMsg>
  [427] objcall 481 ............................. <getConnection(getVariable("connection.info.id")).send("REGISTER", tMsg)>
  [430] pusharglistnoret 1 ...................... <getConnection(getVariable("connection.info.id")).send("REGISTER", tMsg)>
  [432] extcall 23 .............................. return getConnection(getVariable("connection.info.id")).send("REGISTER", tMsg)
  [434] jmp [459]
  [437] getparam 0 .............................. <me>
  [439] pushcons 46 ............................. <"Connection not found:">
  [441] pushcons 25 ............................. <"connection.info.id">
  [443] pusharglist 1 ........................... <"connection.info.id">
  [445] extcall 84 .............................. <getVariable("connection.info.id")>
  [447] joinpadstr .............................. <"Connection not found:" && getVariable("connection.info.id")>
  [448] pushsymb 385 ............................ <#sendNewFigureDataToServer>
  [451] pusharglist 3 ........................... <me, "Connection not found:" && getVariable("connection.info.id"), #sendNewFigureDataToServer>
  [453] extcall 162 ............................. <error(me, "Connection not found:" && getVariable("connection.info.id"), #sendNewFigureDataToServer)>
  [455] pusharglistnoret 1 ...................... <error(me, "Connection not found:" && getVariable("connection.info.id"), #sendNewFigureDataToServer)>
  [457] extcall 23 .............................. return error(me, "Connection not found:" && getVariable("connection.info.id"), #sendNewFigureDataToServer)
  [459] ret
end

on sendFigureUpdateToServer me, tPropList
  [  0] pushcons 39 ............................. <"Figure_System">
  [  2] pusharglist 1 ........................... <"Figure_System">
  [  4] extcall 53 .............................. <objectExists("Figure_System")>
  [  6] not ..................................... <not objectExists("Figure_System")>
  [  7] jmpifz [ 24] ............................ if not objectExists("Figure_System") then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 40 ............................. <"Figure system object not found">
  [ 14] pushsymb 211 ............................ <#sendFigureUpdateToServer>
  [ 16] pusharglist 3 ........................... <me, "Figure system object not found", #sendFigureUpdateToServer>
  [ 18] extcall 162 ............................. <error(me, "Figure system object not found", #sendFigureUpdateToServer)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #sendFigureUpdateToServer)>
  [ 22] extcall 23 .............................. return error(me, "Figure system object not found", #sendFigureUpdateToServer)
  [ 24] getparam 1 .............................. <tPropList>
  [ 26] pushcons 5 .............................. <"figure">
  [ 28] pusharglist 2 ........................... <tPropList, "figure">
  [ 30] objcall 175 ............................. <tPropList["figure"]>
  [ 32] pusharglist 1 ........................... <tPropList["figure"]>
  [ 34] extcall 60 .............................. <voidp(tPropList["figure"])>
  [ 36] not ..................................... <not voidp(tPropList["figure"])>
  [ 37] jmpifz [ 85] ............................ if not voidp(tPropList["figure"]) then
  [ 40] pushcons 39 ............................. <"Figure_System">
  [ 42] pusharglist 1 ........................... <"Figure_System">
  [ 44] extcall 29 .............................. <getObject("Figure_System")>
  [ 46] getparam 1 .............................. <tPropList>
  [ 48] pushcons 5 .............................. <"figure">
  [ 50] pusharglist 2 ........................... <tPropList, "figure">
  [ 52] objcall 175 ............................. <tPropList["figure"]>
  [ 54] getparam 1 .............................. <tPropList>
  [ 56] pushcons 6 .............................. <"sex">
  [ 58] pusharglist 2 ........................... <tPropList, "sex">
  [ 60] objcall 175 ............................. <tPropList["sex"]>
  [ 62] pusharglist 3 ........................... <getObject("Figure_System"), tPropList["figure"], tPropList["sex"]>
  [ 64] objcall 489 ............................. <getObject("Figure_System").GenerateFigureDataToServerMode(tPropList["figure"], tPropList["sex"])>
  [ 67] setlocal 0 .............................. tFigure = getObject("Figure_System").GenerateFigureDataToServerMode(tPropList["figure"], tPropList["sex"])
  [ 69] getparam 1 .............................. <tPropList>
  [ 71] pushcons 5 .............................. <"figure">
  [ 73] getlocal 0 .............................. <tFigure>
  [ 75] pushcons 41 ............................. <"figuretoServer">
  [ 77] pusharglist 2 ........................... <tFigure, "figuretoServer">
  [ 79] objcall 175 ............................. <tFigure["figuretoServer"]>
  [ 81] pusharglistnoret 3 ...................... <tPropList, "figure", tFigure["figuretoServer"]>
  [ 83] objcall 233 ............................. tPropList["figure"] = tFigure["figuretoServer"]
  [ 85] pusharglist 0 ........................... <[:]>
  [ 87] pushproplist ............................ <[:]>
  [ 88] setlocal 1 .............................. tMsg = [:]
  [ 90] pushcons 5 .............................. <"figure">
  [ 92] pushcons 6 .............................. <"sex">
  [ 94] pushcons 7 .............................. <"customData">
  [ 96] pushcons 10 ............................. <"directMail">
  [ 98] pushcons 11 ............................. <"has_read_agreement">
  [100] pushcons 1 .............................. <"parentagree">
  [102] pushcons 15 ............................. <"onlineStatus">
  [104] pushcons 16 ............................. <"publicProfileEnabled">
  [106] pushcons 17 ............................. <"friendRequestsEnabled">
  [108] pushcons 18 ............................. <"offlineMessagingEnabled">
  [110] pushcons 19 ............................. <"totpCode">
  [112] pusharglist 11 .......................... <["figure", "sex", "customData", "directMail", "has_read_agreement", "parentagree", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled", "totpCode"]>
  [114] pushlist ................................ <["figure", "sex", "customData", "directMail", "has_read_agreement", "parentagree", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled", "totpCode"]>
  [115] peek 0
  [117] pusharglist 1
  [119] extcall 52
  [121] pushint8 1
  [123] peek 0
  [125] peek 2
  [127] lteq
  [128] jmpifz [380] ............................ repeat with tProp in ["figure", "sex", "customData", "directMail", "has_read_agreement", "parentagree", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled", "totpCode"]
  [131] peek 2
  [133] peek 1
  [135] pusharglist 2
  [137] extcall 175
  [139] setlocal 2
  [141] getparam 1 .............................. <tPropList>
  [143] getlocal 2 .............................. <tProp>
  [145] pusharglist 2 ........................... <tPropList, tProp>
  [147] objcall 175 ............................. <tPropList[tProp]>
  [149] setlocal 3 .............................. tValue = tPropList[tProp]
  [151] pushzero ................................ <0>
  [152] setlocal 4 .............................. tValueExists = 0
  [154] pushsymb 30 ............................. <#session>
  [156] pusharglist 1 ........................... <#session>
  [158] extcall 29 .............................. <getObject(#session)>
  [160] pushcons 47 ............................. <"user_">
  [162] getlocal 2 .............................. <tProp>
  [164] joinstr ................................. <"user_" & tProp>
  [165] pusharglist 2 ........................... <getObject(#session), "user_" & tProp>
  [167] objcall 31 .............................. <getObject(#session).exists("user_" & tProp)>
  [169] jmpifz [193] ............................ if getObject(#session).exists("user_" & tProp) then
  [172] pushsymb 30 ............................. <#session>
  [174] pusharglist 1 ........................... <#session>
  [176] extcall 29 .............................. <getObject(#session)>
  [178] pushcons 47 ............................. <"user_">
  [180] getlocal 2 .............................. <tProp>
  [182] joinstr ................................. <"user_" & tProp>
  [183] pusharglist 2 ........................... <getObject(#session), "user_" & tProp>
  [185] objcall 32 .............................. <getObject(#session).get("user_" & tProp)>
  [187] setlocal 5 .............................. tStoredValue = getObject(#session).get("user_" & tProp)
  [189] pushint8 1 .............................. <1>
  [191] setlocal 4 .............................. tValueExists = 1
  [193] getlocal 3 .............................. <tValue>
  [195] pusharglist 1 ........................... <[tValue]>
  [197] pushlist ................................ <[tValue]>
  [198] getlocal 5 .............................. <tStoredValue>
  [200] pusharglist 2 ........................... <[tValue], tStoredValue>
  [202] objcall 359 ............................. <[tValue].getPos(tStoredValue)>
  [205] not ..................................... <not [tValue].getPos(tStoredValue)>
  [206] getlocal 3 .............................. <tValue>
  [208] pusharglist 1 ........................... <tValue>
  [210] extcall 60 .............................. <voidp(tValue)>
  [212] not ..................................... <not voidp(tValue)>
  [213] and ..................................... <not [tValue].getPos(tStoredValue) and not voidp(tValue)>
  [214] getlocal 4 .............................. <tValueExists>
  [216] not ..................................... <not tValueExists>
  [217] or ...................................... <(not [tValue].getPos(tStoredValue) and not voidp(tValue)) or not tValueExists>
  [218] jmpifz [375] ............................ if (not [tValue].getPos(tStoredValue) and not voidp(tValue)) or not tValueExists then
  [221] getprop 467 ............................. <pRegMsgStruct>
  [224] getlocal 2 .............................. <tProp>
  [226] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [228] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [230] pusharglist 1 ........................... <pRegMsgStruct[tProp]>
  [232] extcall 60 .............................. <voidp(pRegMsgStruct[tProp])>
  [234] not ..................................... <not voidp(pRegMsgStruct[tProp])>
  [235] jmpifz [375] ............................ if not voidp(pRegMsgStruct[tProp]) then
  [238] getlocal 1 .............................. <tMsg>
  [240] pushsymb 490 ............................ <#short>
  [243] getprop 467 ............................. <pRegMsgStruct>
  [246] getlocal 2 .............................. <tProp>
  [248] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [250] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [252] getobjprop 185 .......................... <pRegMsgStruct[tProp].id>
  [254] pusharglistnoret 3 ...................... <tMsg, #short, pRegMsgStruct[tProp].id>
  [256] objcall 306 ............................. tMsg.addProp(#short, pRegMsgStruct[tProp].id)
  [259] getprop 467 ............................. <pRegMsgStruct>
  [262] getlocal 2 .............................. <tProp>
  [264] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [266] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [268] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [270] pushsymb 468 ............................ <#boolean>
  [273] eq ...................................... <pRegMsgStruct[tProp].type = #boolean>
  [274] jmpifz [286] ............................ if pRegMsgStruct[tProp].type = #boolean then
  [277] getlocal 3 .............................. <tValue>
  [279] pusharglist 1 ........................... <tValue>
  [281] extcall 256 ............................. <integer(tValue)>
  [284] setlocal 3 .............................. tValue = integer(tValue)
  [286] getprop 467 ............................. <pRegMsgStruct>
  [289] getlocal 2 .............................. <tProp>
  [291] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [293] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [295] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [297] pushsymb 234 ............................ <#string>
  [299] eq ...................................... <pRegMsgStruct[tProp].type = #string>
  [300] getlocal 3 .............................. <tValue>
  [302] getobjprop 173 .......................... <tValue.ilk>
  [304] pushsymb 234 ............................ <#string>
  [306] nteq .................................... <tValue.ilk <> #string>
  [307] and ..................................... <(pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string)>
  [308] jmpifz [319] ............................ if (pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string) then
  [311] getlocal 3 .............................. <tValue>
  [313] pusharglist 1 ........................... <tValue>
  [315] extcall 234 ............................. <string(tValue)>
  [317] setlocal 3 .............................. tValue = string(tValue)
  [319] getprop 467 ............................. <pRegMsgStruct>
  [322] getlocal 2 .............................. <tProp>
  [324] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [326] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [328] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [330] pushsymb 490 ............................ <#short>
  [333] eq ...................................... <pRegMsgStruct[tProp].type = #short>
  [334] getlocal 3 .............................. <tValue>
  [336] getobjprop 173 .......................... <tValue.ilk>
  [338] pushsymb 256 ............................ <#integer>
  [341] nteq .................................... <tValue.ilk <> #integer>
  [342] and ..................................... <(pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer)>
  [343] jmpifz [355] ............................ if (pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer) then
  [346] getlocal 3 .............................. <tValue>
  [348] pusharglist 1 ........................... <tValue>
  [350] extcall 256 ............................. <integer(tValue)>
  [353] setlocal 3 .............................. tValue = integer(tValue)
  [355] getlocal 1 .............................. <tMsg>
  [357] getprop 467 ............................. <pRegMsgStruct>
  [360] getlocal 2 .............................. <tProp>
  [362] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [364] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [366] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [368] getlocal 3 .............................. <tValue>
  [370] pusharglistnoret 3 ...................... <tMsg, pRegMsgStruct[tProp].type, tValue>
  [372] objcall 306 ............................. tMsg.addProp(pRegMsgStruct[tProp].type, tValue)
  [375] pushint8 1
  [377] add
  [378] endrepeat [123]
  [380] pop 3
  [382] pushcons 25 ............................. <"connection.info.id">
  [384] pusharglist 1 ........................... <"connection.info.id">
  [386] extcall 84 .............................. <getVariable("connection.info.id")>
  [388] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [390] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [393] jmpifz [423] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [396] pushcons 25 ............................. <"connection.info.id">
  [398] pusharglist 1 ........................... <"connection.info.id">
  [400] extcall 84 .............................. <getVariable("connection.info.id")>
  [402] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [404] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [407] pushcons 48 ............................. <"UPDATE">
  [409] getlocal 1 .............................. <tMsg>
  [411] pusharglist 3 ........................... <getConnection(getVariable("connection.info.id")), "UPDATE", tMsg>
  [413] objcall 481 ............................. <getConnection(getVariable("connection.info.id")).send("UPDATE", tMsg)>
  [416] pusharglistnoret 1 ...................... <getConnection(getVariable("connection.info.id")).send("UPDATE", tMsg)>
  [418] extcall 23 .............................. return getConnection(getVariable("connection.info.id")).send("UPDATE", tMsg)
  [420] jmp [444]
  [423] getparam 0 .............................. <me>
  [425] pushcons 46 ............................. <"Connection not found:">
  [427] pushcons 25 ............................. <"connection.info.id">
  [429] pusharglist 1 ........................... <"connection.info.id">
  [431] extcall 84 .............................. <getVariable("connection.info.id")>
  [433] joinpadstr .............................. <"Connection not found:" && getVariable("connection.info.id")>
  [434] pushsymb 211 ............................ <#sendFigureUpdateToServer>
  [436] pusharglist 3 ........................... <me, "Connection not found:" && getVariable("connection.info.id"), #sendFigureUpdateToServer>
  [438] extcall 162 ............................. <error(me, "Connection not found:" && getVariable("connection.info.id"), #sendFigureUpdateToServer)>
  [440] pusharglistnoret 1 ...................... <error(me, "Connection not found:" && getVariable("connection.info.id"), #sendFigureUpdateToServer)>
  [442] extcall 23 .............................. return error(me, "Connection not found:" && getVariable("connection.info.id"), #sendFigureUpdateToServer)
  [444] ret
end

on newFigureReady me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 95 .............................. me.closeFigureCreator()
  [  6] getparam 0 .............................. <me>
  [  8] pushcons 49 ............................. <"start">
  [ 10] pusharglistnoret 2 ...................... <me, "start">
  [ 12] objcall 27 .............................. me.updateState("start")
  [ 14] pushint8 1 .............................. <1>
  [ 16] pusharglistnoret 1 ...................... <1>
  [ 18] extcall 23 .............................. return 1
  [ 20] ret
end

on figureUpdateReady me
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 84 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 35] ............................ if connectionExists(getVariable("connection.info.id")) then / else
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 50 ............................. <"INFORETRIEVE">
  [ 27] pusharglistnoret 2 ...................... <getConnection(getVariable("connection.info.id")), "INFORETRIEVE">
  [ 29] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("INFORETRIEVE")
  [ 32] jmp [ 52]
  [ 35] getparam 0 .............................. <me>
  [ 37] pushcons 46 ............................. <"Connection not found:">
  [ 39] pushcons 25 ............................. <"connection.info.id">
  [ 41] pusharglist 1 ........................... <"connection.info.id">
  [ 43] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 45] joinpadstr .............................. <"Connection not found:" && getVariable("connection.info.id")>
  [ 46] pushsymb 39 ............................. <#figureUpdateReady>
  [ 48] pusharglistnoret 3 ...................... <me, "Connection not found:" && getVariable("connection.info.id"), #figureUpdateReady>
  [ 50] extcall 162 ............................. error(me, "Connection not found:" && getVariable("connection.info.id"), #figureUpdateReady)
  [ 52] pushsymb 30 ............................. <#session>
  [ 54] pusharglist 1 ........................... <#session>
  [ 56] extcall 29 .............................. <getObject(#session)>
  [ 58] pushcons 51 ............................. <"conf_parent_email_request_reregistration">
  [ 60] pusharglist 2 ........................... <getObject(#session), "conf_parent_email_request_reregistration">
  [ 62] objcall 31 .............................. <getObject(#session).exists("conf_parent_email_request_reregistration")>
  [ 64] jmpifz [ 88] ............................ if getObject(#session).exists("conf_parent_email_request_reregistration") then
  [ 67] pushsymb 30 ............................. <#session>
  [ 69] pusharglist 1 ........................... <#session>
  [ 71] extcall 29 .............................. <getObject(#session)>
  [ 73] pushcons 51 ............................. <"conf_parent_email_request_reregistration">
  [ 75] pusharglist 2 ........................... <getObject(#session), "conf_parent_email_request_reregistration">
  [ 77] objcall 32 .............................. <getObject(#session).get("conf_parent_email_request_reregistration")>
  [ 79] jmpifz [ 88] ............................ if getObject(#session).get("conf_parent_email_request_reregistration") then
  [ 82] getparam 0 .............................. <me>
  [ 84] pusharglistnoret 1 ...................... <me>
  [ 86] objcall 33 .............................. me.sendParentEmail()
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglistnoret 1 ...................... <me>
  [ 92] objcall 95 .............................. me.closeFigureCreator()
  [ 94] getparam 0 .............................. <me>
  [ 96] pushcons 49 ............................. <"start">
  [ 98] pusharglist 2 ........................... <me, "start">
  [100] objcall 27 .............................. <me.updateState("start")>
  [102] pusharglistnoret 1 ...................... <me.updateState("start")>
  [104] extcall 23 .............................. return me.updateState("start")
  [106] ret
end

on setAvailableSetList me, tList
  [  0] getprop 460 ............................. <pFigurePartListLoadedFlag>
  [  3] getparam 1 .............................. <tList>
  [  5] pusharglist 1 ........................... <tList>
  [  7] extcall 60 .............................. <voidp(tList)>
  [  9] not ..................................... <not voidp(tList)>
  [ 10] and ..................................... <pFigurePartListLoadedFlag and not voidp(tList)>
  [ 11] jmpifz [ 79] ............................ if pFigurePartListLoadedFlag and not voidp(tList) then
  [ 14] getparam 0 .............................. <me>
  [ 16] getparam 1 .............................. <tList>
  [ 18] pusharglistnoret 2 ...................... <me, tList>
  [ 20] objcall 496 ............................. me.initializeSelectablePartList(tList)
  [ 23] pushint8 1 .............................. <1>
  [ 25] setprop 461 ............................. pAvailableSetListLoadedFlag = 1
  [ 28] getprop 26 .............................. <pState>
  [ 30] peek 0 .................................. case pState of
  [ 32] pushcons 31 ............................. <"openFigureCreator">
  [ 34] eq
  [ 35] jmpifz [ 55] ............................ (case) "openFigureCreator":
  [ 38] pop 1
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 31 ............................. <"openFigureCreator">
  [ 44] pusharglist 2 ........................... <me, "openFigureCreator">
  [ 46] objcall 27 .............................. <me.updateState("openFigureCreator")>
  [ 48] pusharglistnoret 1 ...................... <me.updateState("openFigureCreator")>
  [ 50] extcall 23 .............................. return me.updateState("openFigureCreator")
  [ 52] jmp [ 77]
  [ 55] peek 0
  [ 57] pushcons 32 ............................. <"openFigureUpdate">
  [ 59] eq
  [ 60] jmpifz [ 77] ............................ (case) "openFigureUpdate":
  [ 63] pop 1
  [ 65] getparam 0 .............................. <me>
  [ 67] pushcons 32 ............................. <"openFigureUpdate">
  [ 69] pusharglist 2 ........................... <me, "openFigureUpdate">
  [ 71] objcall 27 .............................. <me.updateState("openFigureUpdate")>
  [ 73] pusharglistnoret 1 ...................... <me.updateState("openFigureUpdate")>
  [ 75] extcall 23 .............................. return me.updateState("openFigureUpdate")
  [ 77] pop 1 ................................... end case
  [ 79] ret
end

on getAvailableSetList me
  [  0] getprop 460 ............................. <pFigurePartListLoadedFlag>
  [  3] pushint8 1 .............................. <1>
  [  5] eq ...................................... <pFigurePartListLoadedFlag = 1>
  [  6] getprop 461 ............................. <pAvailableSetListLoadedFlag>
  [  9] pushzero ................................ <0>
  [ 10] eq ...................................... <pAvailableSetListLoadedFlag = 0>
  [ 11] and ..................................... <(pFigurePartListLoadedFlag = 1) and (pAvailableSetListLoadedFlag = 0)>
  [ 12] jmpifz [ 47] ............................ if (pFigurePartListLoadedFlag = 1) and (pAvailableSetListLoadedFlag = 0) then
  [ 15] pushcons 25 ............................. <"connection.info.id">
  [ 17] pusharglist 1 ........................... <"connection.info.id">
  [ 19] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 21] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 23] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 26] jmpifz [ 47] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 29] pushcons 25 ............................. <"connection.info.id">
  [ 31] pusharglist 1 ........................... <"connection.info.id">
  [ 33] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 35] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 37] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 40] pushcons 52 ............................. <"GETAVAILABLESETS">
  [ 42] pusharglistnoret 2 ...................... <getConnection(getVariable("connection.info.id")), "GETAVAILABLESETS">
  [ 44] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("GETAVAILABLESETS")
  [ 47] ret
end

on checkAge me, tAge
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 84 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 34] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 53 ............................. <"AC">
  [ 27] getparam 1 .............................. <tAge>
  [ 29] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "AC", tAge>
  [ 31] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("AC", tAge)
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglistnoret 1 ...................... <1>
  [ 38] extcall 23 .............................. return 1
  [ 40] ret
end

on checkEmailAddress me, tEmail
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 84 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 39] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 54 ............................. <"APPROVEEMAIL">
  [ 27] pushsymb 234 ............................ <#string>
  [ 29] getparam 1 .............................. <tEmail>
  [ 31] pusharglist 2 ........................... <[#string: tEmail]>
  [ 33] pushproplist ............................ <[#string: tEmail]>
  [ 34] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "APPROVEEMAIL", [#string: tEmail]>
  [ 36] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("APPROVEEMAIL", [#string: tEmail])
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 1 ...................... <1>
  [ 43] extcall 23 .............................. return 1
  [ 45] ret
end

on sendTotpEmailVerificationNeededQuery me, tEmail
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 84 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 39] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 55 ............................. <"TOTP_EMAIL_REQUIRED">
  [ 27] pushsymb 234 ............................ <#string>
  [ 29] getparam 1 .............................. <tEmail>
  [ 31] pusharglist 2 ........................... <[#string: tEmail]>
  [ 33] pushproplist ............................ <[#string: tEmail]>
  [ 34] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "TOTP_EMAIL_REQUIRED", [#string: tEmail]>
  [ 36] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("TOTP_EMAIL_REQUIRED", [#string: tEmail])
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 1 ...................... <1>
  [ 43] extcall 23 .............................. return 1
  [ 45] ret
end

on parentEmailNeedQuery me, tBirthday, tHabboID
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 84 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 43] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 56 ............................. <"PARENT_EMAIL_REQUIRED">
  [ 27] pushsymb 234 ............................ <#string>
  [ 29] getparam 1 .............................. <tBirthday>
  [ 31] pushsymb 234 ............................ <#string>
  [ 33] getparam 2 .............................. <tHabboID>
  [ 35] pusharglist 4 ........................... <[#string: tBirthday, #string: tHabboID]>
  [ 37] pushproplist ............................ <[#string: tBirthday, #string: tHabboID]>
  [ 38] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "PARENT_EMAIL_REQUIRED", [#string: tBirthday, #string: tHabboID]>
  [ 40] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("PARENT_EMAIL_REQUIRED", [#string: tBirthday, #string: tHabboID])
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 23 .............................. return 1
  [ 49] ret
end

on sendParentEmail me
  [  0] getprop 464 ............................. <pParentEmailAddress>
  [  3] pushcons 0 .............................. <EMPTY>
  [  5] nteq .................................... <pParentEmailAddress <> EMPTY>
  [  6] jmpifz [ 53] ............................ if pParentEmailAddress <> EMPTY then
  [  9] getprop 464 ............................. <pParentEmailAddress>
  [ 12] setlocal 0 .............................. tParentEmail = pParentEmailAddress
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 25] jmpifz [ 53] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 28] pushcons 25 ............................. <"connection.info.id">
  [ 30] pusharglist 1 ........................... <"connection.info.id">
  [ 32] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 34] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 36] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 39] pushcons 57 ............................. <"SEND_PARENT_EMAIL">
  [ 41] pushsymb 234 ............................ <#string>
  [ 43] getlocal 0 .............................. <tParentEmail>
  [ 45] pusharglist 2 ........................... <[#string: tParentEmail]>
  [ 47] pushproplist ............................ <[#string: tParentEmail]>
  [ 48] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "SEND_PARENT_EMAIL", [#string: tParentEmail]>
  [ 50] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("SEND_PARENT_EMAIL", [#string: tParentEmail])
  [ 53] pushint8 1 .............................. <1>
  [ 55] pusharglistnoret 1 ...................... <1>
  [ 57] extcall 23 .............................. return 1
  [ 59] ret
end

on validateParentEmail me, tUserEmail, tParentEmail
  [  0] pushcons 25 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 84 .............................. <getVariable("connection.info.id")>
  [  6] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  8] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 11] jmpifz [ 39] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 14] pushcons 25 ............................. <"connection.info.id">
  [ 16] pusharglist 1 ........................... <"connection.info.id">
  [ 18] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 20] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 22] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 25] pushcons 58 ............................. <"VALIDATE_PARENT_EMAIL">
  [ 27] pushsymb 234 ............................ <#string>
  [ 29] getparam 2 .............................. <tParentEmail>
  [ 31] pusharglist 2 ........................... <[#string: tParentEmail]>
  [ 33] pushproplist ............................ <[#string: tParentEmail]>
  [ 34] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "VALIDATE_PARENT_EMAIL", [#string: tParentEmail]>
  [ 36] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("VALIDATE_PARENT_EMAIL", [#string: tParentEmail])
  [ 39] getparam 2 .............................. <tParentEmail>
  [ 41] setprop 464 ............................. pParentEmailAddress = tParentEmail
  [ 44] pushint8 1 .............................. <1>
  [ 46] pusharglistnoret 1 ...................... <1>
  [ 48] extcall 23 .............................. return 1
  [ 50] ret
end

on sendValidatePassword me, tPassword
  [  0] getparam 1 .............................. <tPassword>
  [  2] pusharglist 1 ........................... <tPassword>
  [  4] extcall 60 .............................. <voidp(tPassword)>
  [  6] getparam 1 .............................. <tPassword>
  [  8] pusharglist 1 ........................... <tPassword>
  [ 10] extcall 173 ............................. <ilk(tPassword)>
  [ 12] pushsymb 234 ............................ <#string>
  [ 14] nteq .................................... <ilk(tPassword) <> #string>
  [ 15] or ...................................... <voidp(tPassword) or (ilk(tPassword) <> #string)>
  [ 16] jmpifz [ 23] ............................ if voidp(tPassword) or (ilk(tPassword) <> #string) then
  [ 19] pushcons 0 .............................. <EMPTY>
  [ 21] setparam 1 .............................. tPassword = EMPTY
  [ 23] pushsymb 30 ............................. <#session>
  [ 25] pusharglist 1 ........................... <#session>
  [ 27] extcall 29 .............................. <getObject(#session)>
  [ 29] pushsymb 352 ............................ <#userName>
  [ 32] pusharglist 2 ........................... <getObject(#session), #userName>
  [ 34] objcall 32 .............................. <getObject(#session).get(#userName)>
  [ 36] setlocal 0 .............................. tUserName = getObject(#session).get(#userName)
  [ 38] pushcons 25 ............................. <"connection.info.id">
  [ 40] pusharglist 1 ........................... <"connection.info.id">
  [ 42] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 44] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 46] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 49] jmpifz [ 81] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 52] pushcons 25 ............................. <"connection.info.id">
  [ 54] pusharglist 1 ........................... <"connection.info.id">
  [ 56] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 58] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 60] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 63] pushcons 59 ............................. <"APPROVE_PASSWORD">
  [ 65] pushsymb 234 ............................ <#string>
  [ 67] getlocal 0 .............................. <tUserName>
  [ 69] pushsymb 234 ............................ <#string>
  [ 71] getparam 1 .............................. <tPassword>
  [ 73] pusharglist 4 ........................... <[#string: tUserName, #string: tPassword]>
  [ 75] pushproplist ............................ <[#string: tUserName, #string: tPassword]>
  [ 76] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "APPROVE_PASSWORD", [#string: tUserName, #string: tPassword]>
  [ 78] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("APPROVE_PASSWORD", [#string: tUserName, #string: tPassword])
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglistnoret 1 ...................... <1>
  [ 85] extcall 23 .............................. return 1
  [ 87] ret
end

on setAgeCheckResult me, tFlag
  [  0] getparam 1 .............................. <tFlag>
  [  2] setprop 462 ............................. pAgeCheckFlag = tFlag
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 43 .............................. <me.getInterface()>
  [ 11] getparam 1 .............................. <tFlag>
  [ 13] pusharglist 2 ........................... <me.getInterface(), tFlag>
  [ 15] objcall 97 .............................. <me.getInterface().finishRegistration(tFlag)>
  [ 17] pusharglistnoret 1 ...................... <me.getInterface().finishRegistration(tFlag)>
  [ 19] extcall 23 .............................. return me.getInterface().finishRegistration(tFlag)
  [ 21] ret
end

on getAgeCheckResult me
  [  0] getprop 462 ............................. <pAgeCheckFlag>
  [  3] pusharglistnoret 1 ...................... <pAgeCheckFlag>
  [  5] extcall 23 .............................. return pAgeCheckFlag
  [  7] ret
end

on onTotpEmailVerificationNeedQueryResult me, tFlag
  [  0] getparam 1 .............................. <tFlag>
  [  2] setprop 465 ............................. pTotpVerificationCodeNeededFlag = tFlag
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 43 .............................. <me.getInterface()>
  [ 11] getparam 1 .............................. <tFlag>
  [ 13] pusharglist 2 ........................... <me.getInterface(), tFlag>
  [ 15] objcall 98 .............................. <me.getInterface().totpEmailVerificationStatus(tFlag)>
  [ 17] pusharglistnoret 1 ...................... <me.getInterface().totpEmailVerificationStatus(tFlag)>
  [ 19] extcall 23 .............................. return me.getInterface().totpEmailVerificationStatus(tFlag)
  [ 21] ret
end

on parentEmailNeedQueryResult me, tFlag
  [  0] getparam 1 .............................. <tFlag>
  [  2] setprop 463 ............................. pParentEmailNeededFlag = tFlag
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 43 .............................. <me.getInterface()>
  [ 11] getparam 1 .............................. <tFlag>
  [ 13] pusharglist 2 ........................... <me.getInterface(), tFlag>
  [ 15] objcall 99 .............................. <me.getInterface().parentEmailQueryStatus(tFlag)>
  [ 17] pusharglistnoret 1 ...................... <me.getInterface().parentEmailQueryStatus(tFlag)>
  [ 19] extcall 23 .............................. return me.getInterface().parentEmailQueryStatus(tFlag)
  [ 21] ret
end

on parentEmailValidated me, tFlag
  [  0] getparam 1 .............................. <tFlag>
  [  2] jmpifz [ 18] ............................ if tFlag then / else
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 43 .............................. <me.getInterface()>
  [ 11] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 13] objcall 100 ............................. me.getInterface().parentEmailOk()
  [ 15] jmp [ 33]
  [ 18] pushcons 0 .............................. <EMPTY>
  [ 20] setprop 464 ............................. pParentEmailAddress = EMPTY
  [ 23] getparam 0 .............................. <me>
  [ 25] pusharglist 1 ........................... <me>
  [ 27] objcall 43 .............................. <me.getInterface()>
  [ 29] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 31] objcall 101 ............................. me.getInterface().parentEmailIncorrect()
  [ 33] ret
end

on getParentEmailNeededFlag me
  [  0] getprop 463 ............................. <pParentEmailNeededFlag>
  [  3] pusharglistnoret 1 ...................... <pParentEmailNeededFlag>
  [  5] extcall 23 .............................. return pParentEmailNeededFlag
  [  7] ret
end

on sendUpdateAccountMsg me, tPropList
  [  0] getparam 1 .............................. <tPropList>
  [  2] pushsymb 239 ............................ <#propList>
  [  4] pusharglist 2 ........................... <tPropList, #propList>
  [  6] extcall 173 ............................. <ilk(tPropList, #propList)>
  [  8] not ..................................... <not ilk(tPropList, #propList)>
  [  9] jmpifz [ 33] ............................ if not ilk(tPropList, #propList) then / else
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 60 ............................. <"tPropList was not propertylist:">
  [ 16] getparam 1 .............................. <tPropList>
  [ 18] joinpadstr .............................. <"tPropList was not propertylist:" && tPropList>
  [ 19] pushsymb 501 ............................ <#sendUpdateMsg>
  [ 22] pusharglist 3 ........................... <me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg>
  [ 24] extcall 162 ............................. <error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)>
  [ 28] extcall 23 .............................. return error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)
  [ 30] jmp [179]
  [ 33] getparam 1 .............................. <tPropList>
  [ 35] pushcons 14 ............................. <"oldpassword">
  [ 37] pusharglist 2 ........................... <tPropList, "oldpassword">
  [ 39] objcall 175 ............................. <tPropList["oldpassword"]>
  [ 41] pusharglist 1 ........................... <tPropList["oldpassword"]>
  [ 43] extcall 60 .............................. <voidp(tPropList["oldpassword"])>
  [ 45] getparam 1 .............................. <tPropList>
  [ 47] pushcons 9 .............................. <"birthday">
  [ 49] pusharglist 2 ........................... <tPropList, "birthday">
  [ 51] objcall 175 ............................. <tPropList["birthday"]>
  [ 53] pusharglist 1 ........................... <tPropList["birthday"]>
  [ 55] extcall 60 .............................. <voidp(tPropList["birthday"])>
  [ 57] or ...................................... <voidp(tPropList["oldpassword"]) or voidp(tPropList["birthday"])>
  [ 58] jmpifz [ 82] ............................ if voidp(tPropList["oldpassword"]) or voidp(tPropList["birthday"]) then / else
  [ 61] getparam 0 .............................. <me>
  [ 63] pushcons 61 ............................. <"Missing old password or birthday:">
  [ 65] getparam 1 .............................. <tPropList>
  [ 67] joinpadstr .............................. <"Missing old password or birthday:" && tPropList>
  [ 68] pushsymb 501 ............................ <#sendUpdateMsg>
  [ 71] pusharglist 3 ........................... <me, "Missing old password or birthday:" && tPropList, #sendUpdateMsg>
  [ 73] extcall 162 ............................. <error(me, "Missing old password or birthday:" && tPropList, #sendUpdateMsg)>
  [ 75] pusharglistnoret 1 ...................... <error(me, "Missing old password or birthday:" && tPropList, #sendUpdateMsg)>
  [ 77] extcall 23 .............................. return error(me, "Missing old password or birthday:" && tPropList, #sendUpdateMsg)
  [ 79] jmp [179]
  [ 82] getparam 1 .............................. <tPropList>
  [ 84] pushcons 4 .............................. <"password">
  [ 86] pusharglist 2 ........................... <tPropList, "password">
  [ 88] objcall 175 ............................. <tPropList["password"]>
  [ 90] pusharglist 1 ........................... <tPropList["password"]>
  [ 92] extcall 60 .............................. <voidp(tPropList["password"])>
  [ 94] getparam 1 .............................. <tPropList>
  [ 96] pushcons 8 .............................. <"email">
  [ 98] pusharglist 2 ........................... <tPropList, "email">
  [100] objcall 175 ............................. <tPropList["email"]>
  [102] pusharglist 1 ........................... <tPropList["email"]>
  [104] extcall 60 .............................. <voidp(tPropList["email"])>
  [106] and ..................................... <voidp(tPropList["password"]) and voidp(tPropList["email"])>
  [107] jmpifz [131] ............................ if voidp(tPropList["password"]) and voidp(tPropList["email"]) then / else
  [110] getparam 0 .............................. <me>
  [112] pushcons 62 ............................. <"Password or email required:">
  [114] getparam 1 .............................. <tPropList>
  [116] joinpadstr .............................. <"Password or email required:" && tPropList>
  [117] pushsymb 501 ............................ <#sendUpdateMsg>
  [120] pusharglist 3 ........................... <me, "Password or email required:" && tPropList, #sendUpdateMsg>
  [122] extcall 162 ............................. <error(me, "Password or email required:" && tPropList, #sendUpdateMsg)>
  [124] pusharglistnoret 1 ...................... <error(me, "Password or email required:" && tPropList, #sendUpdateMsg)>
  [126] extcall 23 .............................. return error(me, "Password or email required:" && tPropList, #sendUpdateMsg)
  [128] jmp [179]
  [131] getparam 1 .............................. <tPropList>
  [133] pushcons 4 .............................. <"password">
  [135] pusharglist 2 ........................... <tPropList, "password">
  [137] objcall 175 ............................. <tPropList["password"]>
  [139] pusharglist 1 ........................... <tPropList["password"]>
  [141] extcall 60 .............................. <voidp(tPropList["password"])>
  [143] not ..................................... <not voidp(tPropList["password"])>
  [144] getparam 1 .............................. <tPropList>
  [146] pushcons 8 .............................. <"email">
  [148] pusharglist 2 ........................... <tPropList, "email">
  [150] objcall 175 ............................. <tPropList["email"]>
  [152] pusharglist 1 ........................... <tPropList["email"]>
  [154] extcall 60 .............................. <voidp(tPropList["email"])>
  [156] not ..................................... <not voidp(tPropList["email"])>
  [157] and ..................................... <not voidp(tPropList["password"]) and not voidp(tPropList["email"])>
  [158] jmpifz [179] ............................ if not voidp(tPropList["password"]) and not voidp(tPropList["email"]) then
  [161] getparam 0 .............................. <me>
  [163] pushcons 63 ............................. <"Password and email cannot appear together:">
  [165] getparam 1 .............................. <tPropList>
  [167] joinpadstr .............................. <"Password and email cannot appear together:" && tPropList>
  [168] pushsymb 501 ............................ <#sendUpdateMsg>
  [171] pusharglist 3 ........................... <me, "Password and email cannot appear together:" && tPropList, #sendUpdateMsg>
  [173] extcall 162 ............................. <error(me, "Password and email cannot appear together:" && tPropList, #sendUpdateMsg)>
  [175] pusharglistnoret 1 ...................... <error(me, "Password and email cannot appear together:" && tPropList, #sendUpdateMsg)>
  [177] extcall 23 .............................. return error(me, "Password and email cannot appear together:" && tPropList, #sendUpdateMsg)
  [179] pusharglist 0 ........................... <[:]>
  [181] pushproplist ............................ <[:]>
  [182] setlocal 0 .............................. tMsg = [:]
  [184] pushint8 1 .............................. <1>
  [186] setlocal 1
  [188] getlocal 1
  [190] getparam 1 .............................. <tPropList>
  [192] getobjprop 52 ........................... <tPropList.count>
  [194] lteq
  [195] jmpifz [436] ............................ repeat with f = 1 to tPropList.count
  [198] getparam 1 .............................. <tPropList>
  [200] getlocal 1 .............................. <f>
  [202] pusharglist 2 ........................... <tPropList, f>
  [204] objcall 261 ............................. <tPropList.getPropAt(f)>
  [207] setlocal 2 .............................. tProp = tPropList.getPropAt(f)
  [209] getparam 1 .............................. <tPropList>
  [211] getlocal 2 .............................. <tProp>
  [213] pusharglist 2 ........................... <tPropList, tProp>
  [215] objcall 175 ............................. <tPropList[tProp]>
  [217] pusharglist 1 ........................... <tPropList[tProp]>
  [219] extcall 60 .............................. <voidp(tPropList[tProp])>
  [221] jmpifz [242] ............................ if voidp(tPropList[tProp]) then
  [224] getparam 0 .............................. <me>
  [226] pushcons 44 ............................. <"Data missing!!">
  [228] getlocal 2 .............................. <tProp>
  [230] joinpadstr .............................. <"Data missing!!" && tProp>
  [231] pushsymb 501 ............................ <#sendUpdateMsg>
  [234] pusharglist 3 ........................... <me, "Data missing!!" && tProp, #sendUpdateMsg>
  [236] extcall 162 ............................. <error(me, "Data missing!!" && tProp, #sendUpdateMsg)>
  [238] pusharglistnoret 1 ...................... <error(me, "Data missing!!" && tProp, #sendUpdateMsg)>
  [240] extcall 23 .............................. return error(me, "Data missing!!" && tProp, #sendUpdateMsg)
  [242] getparam 1 .............................. <tPropList>
  [244] getlocal 2 .............................. <tProp>
  [246] pusharglist 2 ........................... <tPropList, tProp>
  [248] objcall 175 ............................. <tPropList[tProp]>
  [250] setlocal 3 .............................. tValue = tPropList[tProp]
  [252] getprop 467 ............................. <pRegMsgStruct>
  [255] getlocal 2 .............................. <tProp>
  [257] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [259] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [261] pusharglist 1 ........................... <pRegMsgStruct[tProp]>
  [263] extcall 60 .............................. <voidp(pRegMsgStruct[tProp])>
  [265] not ..................................... <not voidp(pRegMsgStruct[tProp])>
  [266] jmpifz [409] ............................ if not voidp(pRegMsgStruct[tProp]) then
  [269] getlocal 0 .............................. <tMsg>
  [271] pushsymb 490 ............................ <#short>
  [274] getprop 467 ............................. <pRegMsgStruct>
  [277] getlocal 2 .............................. <tProp>
  [279] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [281] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [283] getobjprop 185 .......................... <pRegMsgStruct[tProp].id>
  [285] pusharglistnoret 3 ...................... <tMsg, #short, pRegMsgStruct[tProp].id>
  [287] objcall 306 ............................. tMsg.addProp(#short, pRegMsgStruct[tProp].id)
  [290] getprop 467 ............................. <pRegMsgStruct>
  [293] getlocal 2 .............................. <tProp>
  [295] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [297] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [299] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [301] pushsymb 468 ............................ <#boolean>
  [304] eq ...................................... <pRegMsgStruct[tProp].type = #boolean>
  [305] jmpifz [317] ............................ if pRegMsgStruct[tProp].type = #boolean then
  [308] getlocal 3 .............................. <tValue>
  [310] pusharglist 1 ........................... <tValue>
  [312] extcall 256 ............................. <integer(tValue)>
  [315] setlocal 3 .............................. tValue = integer(tValue)
  [317] getprop 467 ............................. <pRegMsgStruct>
  [320] getlocal 2 .............................. <tProp>
  [322] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [324] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [326] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [328] pushsymb 234 ............................ <#string>
  [330] eq ...................................... <pRegMsgStruct[tProp].type = #string>
  [331] getlocal 3 .............................. <tValue>
  [333] getobjprop 173 .......................... <tValue.ilk>
  [335] pushsymb 234 ............................ <#string>
  [337] nteq .................................... <tValue.ilk <> #string>
  [338] and ..................................... <(pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string)>
  [339] jmpifz [350] ............................ if (pRegMsgStruct[tProp].type = #string) and (tValue.ilk <> #string) then
  [342] getlocal 3 .............................. <tValue>
  [344] pusharglist 1 ........................... <tValue>
  [346] extcall 234 ............................. <string(tValue)>
  [348] setlocal 3 .............................. tValue = string(tValue)
  [350] getprop 467 ............................. <pRegMsgStruct>
  [353] getlocal 2 .............................. <tProp>
  [355] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [357] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [359] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [361] pushsymb 490 ............................ <#short>
  [364] eq ...................................... <pRegMsgStruct[tProp].type = #short>
  [365] getlocal 3 .............................. <tValue>
  [367] getobjprop 173 .......................... <tValue.ilk>
  [369] pushsymb 256 ............................ <#integer>
  [372] nteq .................................... <tValue.ilk <> #integer>
  [373] and ..................................... <(pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer)>
  [374] jmpifz [386] ............................ if (pRegMsgStruct[tProp].type = #short) and (tValue.ilk <> #integer) then
  [377] getlocal 3 .............................. <tValue>
  [379] pusharglist 1 ........................... <tValue>
  [381] extcall 256 ............................. <integer(tValue)>
  [384] setlocal 3 .............................. tValue = integer(tValue)
  [386] getlocal 0 .............................. <tMsg>
  [388] getprop 467 ............................. <pRegMsgStruct>
  [391] getlocal 2 .............................. <tProp>
  [393] pusharglist 2 ........................... <pRegMsgStruct, tProp>
  [395] objcall 175 ............................. <pRegMsgStruct[tProp]>
  [397] getobjprop 251 .......................... <pRegMsgStruct[tProp].type>
  [399] getlocal 3 .............................. <tValue>
  [401] pusharglistnoret 3 ...................... <tMsg, pRegMsgStruct[tProp].type, tValue>
  [403] objcall 306 ............................. tMsg.addProp(pRegMsgStruct[tProp].type, tValue)
  [406] jmp [427] ............................... next repeat
  [409] getparam 0 .............................. <me>
  [411] pushcons 64 ............................. <"Data property not found from structs!">
  [413] getlocal 2 .............................. <tProp>
  [415] joinpadstr .............................. <"Data property not found from structs!" && tProp>
  [416] pushsymb 501 ............................ <#sendUpdateMsg>
  [419] pusharglist 3 ........................... <me, "Data property not found from structs!" && tProp, #sendUpdateMsg>
  [421] extcall 162 ............................. <error(me, "Data property not found from structs!" && tProp, #sendUpdateMsg)>
  [423] pusharglistnoret 1 ...................... <error(me, "Data property not found from structs!" && tProp, #sendUpdateMsg)>
  [425] extcall 23 .............................. return error(me, "Data property not found from structs!" && tProp, #sendUpdateMsg)
  [427] pushint8 1
  [429] getlocal 1
  [431] add
  [432] setlocal 1
  [434] endrepeat [188]
  [436] pushcons 25 ............................. <"connection.info.id">
  [438] pusharglist 1 ........................... <"connection.info.id">
  [440] extcall 84 .............................. <getVariable("connection.info.id")>
  [442] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [444] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [447] jmpifz [470] ............................ if connectionExists(getVariable("connection.info.id")) then
  [450] pushcons 25 ............................. <"connection.info.id">
  [452] pusharglist 1 ........................... <"connection.info.id">
  [454] extcall 84 .............................. <getVariable("connection.info.id")>
  [456] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [458] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [461] pushcons 65 ............................. <"UPDATE_ACCOUNT">
  [463] getlocal 0 .............................. <tMsg>
  [465] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "UPDATE_ACCOUNT", tMsg>
  [467] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("UPDATE_ACCOUNT", tMsg)
  [470] ret
end

on submitGdprRequestMsg me, tPropList
  [  0] getparam 1 .............................. <tPropList>
  [  2] pushsymb 239 ............................ <#propList>
  [  4] pusharglist 2 ........................... <tPropList, #propList>
  [  6] extcall 173 ............................. <ilk(tPropList, #propList)>
  [  8] not ..................................... <not ilk(tPropList, #propList)>
  [  9] jmpifz [ 33] ............................ if not ilk(tPropList, #propList) then / else
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 60 ............................. <"tPropList was not propertylist:">
  [ 16] getparam 1 .............................. <tPropList>
  [ 18] joinpadstr .............................. <"tPropList was not propertylist:" && tPropList>
  [ 19] pushsymb 501 ............................ <#sendUpdateMsg>
  [ 22] pusharglist 3 ........................... <me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg>
  [ 24] extcall 162 ............................. <error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)>
  [ 28] extcall 23 .............................. return error(me, "tPropList was not propertylist:" && tPropList, #sendUpdateMsg)
  [ 30] jmp [ 66]
  [ 33] getparam 1 .............................. <tPropList>
  [ 35] pushcons 66 ............................. <"gdprRequestType">
  [ 37] pusharglist 2 ........................... <tPropList, "gdprRequestType">
  [ 39] objcall 175 ............................. <tPropList["gdprRequestType"]>
  [ 41] pusharglist 1 ........................... <tPropList["gdprRequestType"]>
  [ 43] extcall 60 .............................. <voidp(tPropList["gdprRequestType"])>
  [ 45] jmpifz [ 66] ............................ if voidp(tPropList["gdprRequestType"]) then
  [ 48] getparam 0 .............................. <me>
  [ 50] pushcons 67 ............................. <"Missing GDPR request type:">
  [ 52] getparam 1 .............................. <tPropList>
  [ 54] joinpadstr .............................. <"Missing GDPR request type:" && tPropList>
  [ 55] pushsymb 501 ............................ <#sendUpdateMsg>
  [ 58] pusharglist 3 ........................... <me, "Missing GDPR request type:" && tPropList, #sendUpdateMsg>
  [ 60] extcall 162 ............................. <error(me, "Missing GDPR request type:" && tPropList, #sendUpdateMsg)>
  [ 62] pusharglistnoret 1 ...................... <error(me, "Missing GDPR request type:" && tPropList, #sendUpdateMsg)>
  [ 64] extcall 23 .............................. return error(me, "Missing GDPR request type:" && tPropList, #sendUpdateMsg)
  [ 66] getparam 1 .............................. <tPropList>
  [ 68] pushcons 66 ............................. <"gdprRequestType">
  [ 70] pusharglist 2 ........................... <tPropList, "gdprRequestType">
  [ 72] objcall 175 ............................. <tPropList["gdprRequestType"]>
  [ 74] setlocal 0 .............................. tValue = tPropList["gdprRequestType"]
  [ 76] pushcons 25 ............................. <"connection.info.id">
  [ 78] pusharglist 1 ........................... <"connection.info.id">
  [ 80] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 82] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 84] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [ 87] jmpifz [121] ............................ if connectionExists(getVariable("connection.info.id")) then
  [ 90] pushcons 25 ............................. <"connection.info.id">
  [ 92] pusharglist 1 ........................... <"connection.info.id">
  [ 94] extcall 84 .............................. <getVariable("connection.info.id")>
  [ 96] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 98] extcall 480 ............................. <getConnection(getVariable("connection.info.id"))>
  [101] pushcons 68 ............................. <"SUBMIT_GDPR_REQUEST">
  [103] pushsymb 256 ............................ <#integer>
  [106] getlocal 0 .............................. <tValue>
  [108] pusharglist 1 ........................... <tValue>
  [110] extcall 256 ............................. <integer(tValue)>
  [113] pusharglist 2 ........................... <[#integer: integer(tValue)]>
  [115] pushproplist ............................ <[#integer: integer(tValue)]>
  [116] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "SUBMIT_GDPR_REQUEST", [#integer: integer(tValue)]>
  [118] objcall 481 ............................. getConnection(getVariable("connection.info.id")).send("SUBMIT_GDPR_REQUEST", [#integer: integer(tValue)])
  [121] ret
end

on getState me
  [  0] getprop 26 .............................. <pState>
  [  2] pusharglistnoret 1 ...................... <pState>
  [  4] extcall 23 .............................. return pState
  [  6] ret
end

on updateState me, tstate, tProps
  [  0] getparam 1 .............................. <tstate>
  [  2] peek 0 .................................. case tstate of
  [  4] pushcons 20 ............................. <"reset">
  [  6] eq
  [  7] jmpifz [ 30] ............................ (case) "reset":
  [ 10] getparam 1 .............................. <tstate>
  [ 12] setprop 26 .............................. pState = tstate
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglistnoret 1 ...................... <me>
  [ 18] objcall 0 ............................... me.construct()
  [ 20] pop 1
  [ 22] pushzero ................................ <0>
  [ 23] pusharglistnoret 1 ...................... <0>
  [ 25] extcall 23 .............................. return 0
  [ 27] jmp [1147]
  [ 30] peek 0
  [ 32] pushcons 69 ............................. <"loadFigurePartList">
  [ 34] eq
  [ 35] jmpifz [143] ............................ (case) "loadFigurePartList":
  [ 38] pop 1
  [ 40] pusharglistnoret 0 ...................... <>
  [ 42] extcall 23 .............................. return 
  [ 44] getparam 1 .............................. <tstate>
  [ 46] setprop 26 .............................. pState = tstate
  [ 48] pushcons 70 ............................. <"external.figurepartlist.txt">
  [ 50] pusharglist 1 ........................... <"external.figurepartlist.txt">
  [ 52] extcall 84 .............................. <getVariable("external.figurepartlist.txt")>
  [ 54] setlocal 0 .............................. tURL = getVariable("external.figurepartlist.txt")
  [ 56] getlocal 0 .............................. <tURL>
  [ 58] setlocal 1 .............................. tMem = tURL
  [ 60] getmovieprop 502 ........................ <the moviePath>
  [ 63] pushcons 71 ............................. <"http://">
  [ 65] containsstr ............................. <the moviePath contains "http://">
  [ 66] jmpifz [ 83] ............................ if the moviePath contains "http://" then / else
  [ 69] getlocal 0 .............................. <tURL>
  [ 71] pushcons 72 ............................. <"?">
  [ 73] joinstr ................................. <tURL & "?">
  [ 74] getmovieprop 436 ........................ <the milliSeconds>
  [ 77] joinstr ................................. <tURL & "?" & the milliSeconds>
  [ 78] setlocal 0 .............................. tURL = tURL & "?" & the milliSeconds
  [ 80] jmp [102]
  [ 83] getlocal 0 .............................. <tURL>
  [ 85] pushcons 71 ............................. <"http://">
  [ 87] containsstr ............................. <tURL contains "http://">
  [ 88] jmpifz [102] ............................ if tURL contains "http://" then
  [ 91] getlocal 0 .............................. <tURL>
  [ 93] pushcons 72 ............................. <"?">
  [ 95] joinstr ................................. <tURL & "?">
  [ 96] getmovieprop 436 ........................ <the milliSeconds>
  [ 99] joinstr ................................. <tURL & "?" & the milliSeconds>
  [100] setlocal 0 .............................. tURL = tURL & "?" & the milliSeconds
  [102] getlocal 0 .............................. <tURL>
  [104] getlocal 1 .............................. <tMem>
  [106] pushsymb 252 ............................ <#field>
  [108] pushint8 1 .............................. <1>
  [110] pusharglist 4 ........................... <tURL, tMem, #field, 1>
  [112] extcall 503 ............................. <queueDownload(tURL, tMem, #field, 1)>
  [115] setlocal 2 .............................. tmember = queueDownload(tURL, tMem, #field, 1)
  [117] pop 1
  [119] getlocal 2 .............................. <tmember>
  [121] pushsymb 27 ............................. <#updateState>
  [123] getparam 0 .............................. <me>
  [125] pusharglist 1 ........................... <me>
  [127] objcall 85 .............................. <me.getID()>
  [129] pushcons 73 ............................. <"initialize">
  [131] pusharglist 4 ........................... <tmember, #updateState, me.getID(), "initialize">
  [133] extcall 504 ............................. <registerDownloadCallback(tmember, #updateState, me.getID(), "initialize")>
  [136] pusharglistnoret 1 ...................... <registerDownloadCallback(tmember, #updateState, me.getID(), "initialize")>
  [138] extcall 23 .............................. return registerDownloadCallback(tmember, #updateState, me.getID(), "initialize")
  [140] jmp [1147]
  [143] peek 0
  [145] pushcons 73 ............................. <"initialize">
  [147] eq
  [148] jmpifz [300] ............................ (case) "initialize":
  [151] getparam 1 .............................. <tstate>
  [153] setprop 26 .............................. pState = tstate
  [155] pushcons 70 ............................. <"external.figurepartlist.txt">
  [157] pusharglist 1 ........................... <"external.figurepartlist.txt">
  [159] extcall 84 .............................. <getVariable("external.figurepartlist.txt")>
  [161] setlocal 3 .............................. tMemName = getVariable("external.figurepartlist.txt")
  [163] getlocal 3 .............................. <tMemName>
  [165] pushzero ................................ <0>
  [166] eq ...................................... <tMemName = 0>
  [167] jmpifz [174] ............................ if tMemName = 0 then
  [170] pushcons 0 .............................. <EMPTY>
  [172] setlocal 3 .............................. tMemName = EMPTY
  [174] getlocal 3 .............................. <tMemName>
  [176] pusharglist 1 ........................... <tMemName>
  [178] extcall 505 ............................. <memberExists(tMemName)>
  [181] not ..................................... <not memberExists(tMemName)>
  [182] jmpifz [204] ............................ if not memberExists(tMemName) then / else
  [185] pusharglist 0 ........................... <>
  [187] extcall 41 .............................. <VOID>
  [189] setlocal 4 .............................. tValidpartList = VOID
  [191] getparam 0 .............................. <me>
  [193] pushcons 74 ............................. <"Failure while loading part list">
  [195] pushsymb 27 ............................. <#updateState>
  [197] pusharglistnoret 3 ...................... <me, "Failure while loading part list", #updateState>
  [199] extcall 162 ............................. error(me, "Failure while loading part list", #updateState)
  [201] jmp [244]
  [204] pusharglistnoret 0 ...................... <>
  [206] extcall 506 ............................. try()
  [209] getlocal 3 .............................. <tMemName>
  [211] pusharglist 1 ........................... <tMemName>
  [213] extcall 276 ............................. <getmemnum(tMemName)>
  [216] pusharglist 1 ........................... <getmemnum(tMemName)>
  [218] extcall 275 ............................. <member(getmemnum(tMemName))>
  [221] getobjprop 507 .......................... <member(getmemnum(tMemName)).text>
  [224] pusharglist 1 ........................... <member(getmemnum(tMemName)).text>
  [226] extcall 49 .............................. <value(member(getmemnum(tMemName)).text)>
  [228] setlocal 4 .............................. tValidpartList = value(member(getmemnum(tMemName)).text)
  [230] pusharglist 0 ........................... <>
  [232] extcall 508 ............................. <catch()>
  [235] jmpifz [244] ............................ if catch() then
  [238] pusharglist 0 ........................... <>
  [240] extcall 41 .............................. <VOID>
  [242] setlocal 4 .............................. tValidpartList = VOID
  [244] getparam 0 .............................. <me>
  [246] getlocal 4 .............................. <tValidpartList>
  [248] pusharglistnoret 2 ...................... <me, tValidpartList>
  [250] objcall 509 ............................. me.initializeValidPartLists(tValidpartList)
  [253] pushint8 1 .............................. <1>
  [255] setprop 460 ............................. pFigurePartListLoadedFlag = 1
  [258] pushcons 75 ............................. <"figurepartlist.loaded">
  [260] pushint8 1 .............................. <1>
  [262] pusharglistnoret 2 ...................... <"figurepartlist.loaded", 1>
  [264] extcall 164 ............................. setVariable("figurepartlist.loaded", 1)
  [266] getlocal 3 .............................. <tMemName>
  [268] pusharglist 1 ........................... <tMemName>
  [270] extcall 505 ............................. <memberExists(tMemName)>
  [273] jmpifz [283] ............................ if memberExists(tMemName) then
  [276] getlocal 3 .............................. <tMemName>
  [278] pusharglistnoret 1 ...................... <tMemName>
  [280] extcall 510 ............................. removeMember(tMemName)
  [283] pop 1
  [285] getparam 0 .............................. <me>
  [287] pushcons 49 ............................. <"start">
  [289] pusharglist 2 ........................... <me, "start">
  [291] objcall 27 .............................. <me.updateState("start")>
  [293] pusharglistnoret 1 ...................... <me.updateState("start")>
  [295] extcall 23 .............................. return me.updateState("start")
  [297] jmp [1147]
  [300] peek 0
  [302] pushcons 49 ............................. <"start">
  [304] eq
  [305] jmpifz [323] ............................ (case) "start":
  [308] getparam 1 .............................. <tstate>
  [310] setprop 26 .............................. pState = tstate
  [312] pop 1
  [314] pushint8 1 .............................. <1>
  [316] pusharglistnoret 1 ...................... <1>
  [318] extcall 23 .............................. return 1
  [320] jmp [1147]
  [323] peek 0
  [325] pushcons 31 ............................. <"openFigureCreator">
  [327] eq
  [328] jmpifz [579] ............................ (case) "openFigureCreator":
  [331] getparam 1 .............................. <tstate>
  [333] setprop 26 .............................. pState = tstate
  [335] pushcons 39 ............................. <"Figure_System">
  [337] pusharglist 1 ........................... <"Figure_System">
  [339] extcall 53 .............................. <objectExists("Figure_System")>
  [341] not ..................................... <not objectExists("Figure_System")>
  [342] jmpifz [361] ............................ if not objectExists("Figure_System") then
  [345] pop 1
  [347] getparam 0 .............................. <me>
  [349] pushcons 40 ............................. <"Figure system object not found">
  [351] pushsymb 27 ............................. <#updateState>
  [353] pusharglist 3 ........................... <me, "Figure system object not found", #updateState>
  [355] extcall 162 ............................. <error(me, "Figure system object not found", #updateState)>
  [357] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #updateState)>
  [359] extcall 23 .............................. return error(me, "Figure system object not found", #updateState)
  [361] pushsymb 30 ............................. <#session>
  [363] pusharglist 1 ........................... <#session>
  [365] extcall 53 .............................. <objectExists(#session)>
  [367] not ..................................... <not objectExists(#session)>
  [368] jmpifz [387] ............................ if not objectExists(#session) then
  [371] pop 1
  [373] getparam 0 .............................. <me>
  [375] pushcons 76 ............................. <"Session object not found">
  [377] pushsymb 27 ............................. <#updateState>
  [379] pusharglist 3 ........................... <me, "Session object not found", #updateState>
  [381] extcall 162 ............................. <error(me, "Session object not found", #updateState)>
  [383] pusharglistnoret 1 ...................... <error(me, "Session object not found", #updateState)>
  [385] extcall 23 .............................. return error(me, "Session object not found", #updateState)
  [387] pushsymb 424 ............................ <#login>
  [390] pusharglist 1 ........................... <#login>
  [392] extcall 423 ............................. <threadExists(#login)>
  [395] pushcons 25 ............................. <"connection.info.id">
  [397] pusharglist 1 ........................... <"connection.info.id">
  [399] extcall 84 .............................. <getVariable("connection.info.id")>
  [401] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [403] extcall 427 ............................. <connectionExists(getVariable("connection.info.id"))>
  [406] not ..................................... <not connectionExists(getVariable("connection.info.id"))>
  [407] and ..................................... <threadExists(#login) and not connectionExists(getVariable("connection.info.id"))>
  [408] jmpifz [441] ............................ if threadExists(#login) and not connectionExists(getVariable("connection.info.id")) then / else
  [411] pushsymb 424 ............................ <#login>
  [414] pusharglist 1 ........................... <#login>
  [416] extcall 425 ............................. <getThread(#login)>
  [419] pusharglist 1 ........................... <getThread(#login)>
  [421] objcall 25 .............................. <getThread(#login).getComponent()>
  [423] pusharglistnoret 1 ...................... <getThread(#login).getComponent()>
  [425] objcall 511 ............................. getThread(#login).getComponent().connect()
  [428] getparam 0 .............................. <me>
  [430] pusharglist 1 ........................... <me>
  [432] objcall 43 .............................. <me.getInterface()>
  [434] pusharglistnoret 1 ...................... <me.getInterface()>
  [436] objcall 96 .............................. me.getInterface().showLoadingWindow()
  [438] jmp [568]
  [441] pushsymb 512 ............................ <#getServerDate>
  [444] pusharglist 1 ........................... <#getServerDate>
  [446] extcall 53 .............................. <objectExists(#getServerDate)>
  [448] jmpifz [479] ............................ if objectExists(#getServerDate) then
  [451] pushsymb 30 ............................. <#session>
  [453] pusharglist 1 ........................... <#session>
  [455] extcall 29 .............................. <getObject(#session)>
  [457] pushcons 77 ............................. <"server_date">
  [459] pusharglist 2 ........................... <getObject(#session), "server_date">
  [461] objcall 31 .............................. <getObject(#session).exists("server_date")>
  [463] not ..................................... <not getObject(#session).exists("server_date")>
  [464] jmpifz [479] ............................ if not getObject(#session).exists("server_date") then
  [467] pushsymb 512 ............................ <#getServerDate>
  [470] pusharglist 1 ........................... <#getServerDate>
  [472] extcall 29 .............................. <getObject(#getServerDate)>
  [474] pusharglistnoret 1 ...................... <getObject(#getServerDate)>
  [476] objcall 513 ............................. getObject(#getServerDate).getDate()
  [479] pushcons 78 ............................. <"topt_verification">
  [481] setlocal 5 .............................. tRegistrationProcessMode = "topt_verification"
  [483] pushsymb 30 ............................. <#session>
  [485] pusharglist 1 ........................... <#session>
  [487] extcall 29 .............................. <getObject(#session)>
  [489] pushcons 79 ............................. <"conf_coppa">
  [491] pusharglist 2 ........................... <getObject(#session), "conf_coppa">
  [493] objcall 32 .............................. <getObject(#session).get("conf_coppa")>
  [495] pushcons 28 ............................. <"Blocktime">
  [497] pusharglist 1 ........................... <"Blocktime">
  [499] extcall 482 ............................. <getPref("Blocktime")>
  [502] pushzero ................................ <0>
  [503] gt ...................................... <getPref("Blocktime") > 0>
  [504] and ..................................... <getObject(#session).get("conf_coppa") and (getPref("Blocktime") > 0)>
  [505] jmpifz [521] ............................ if getObject(#session).get("conf_coppa") and (getPref("Blocktime") > 0) then
  [508] pop 1
  [510] getparam 0 .............................. <me>
  [512] pusharglist 1 ........................... <me>
  [514] objcall 454 ............................. <me.checkBlockTime()>
  [517] pusharglistnoret 1 ...................... <me.checkBlockTime()>
  [519] extcall 23 .............................. return me.checkBlockTime()
  [521] pushcons 39 ............................. <"Figure_System">
  [523] pusharglist 1 ........................... <"Figure_System">
  [525] extcall 29 .............................. <getObject("Figure_System")>
  [527] pusharglist 1 ........................... <getObject("Figure_System")>
  [529] objcall 514 ............................. <getObject("Figure_System").isFigureSystemReady()>
  [532] not ..................................... <not getObject("Figure_System").isFigureSystemReady()>
  [533] jmpifz [556] ............................ if not getObject("Figure_System").isFigureSystemReady() then / else
  [536] getparam 0 .............................. <me>
  [538] pusharglist 1 ........................... <me>
  [540] objcall 43 .............................. <me.getInterface()>
  [542] pusharglistnoret 1 ...................... <me.getInterface()>
  [544] objcall 96 .............................. me.getInterface().showLoadingWindow()
  [546] pop 1
  [548] pushzero ................................ <0>
  [549] pusharglistnoret 1 ...................... <0>
  [551] extcall 23 .............................. return 0
  [553] jmp [568]
  [556] getparam 0 .............................. <me>
  [558] pusharglist 1 ........................... <me>
  [560] objcall 43 .............................. <me.getInterface()>
  [562] getlocal 5 .............................. <tRegistrationProcessMode>
  [564] pusharglistnoret 2 ...................... <me.getInterface(), tRegistrationProcessMode>
  [566] objcall 94 .............................. me.getInterface().openFigureCreator(tRegistrationProcessMode)
  [568] pop 1
  [570] pushint8 1 .............................. <1>
  [572] pusharglistnoret 1 ...................... <1>
  [574] extcall 23 .............................. return 1
  [576] jmp [1147]
  [579] peek 0
  [581] pushcons 32 ............................. <"openFigureUpdate">
  [583] eq
  [584] jmpifz [724] ............................ (case) "openFigureUpdate":
  [587] getparam 1 .............................. <tstate>
  [589] setprop 26 .............................. pState = tstate
  [591] pushcons 39 ............................. <"Figure_System">
  [593] pusharglist 1 ........................... <"Figure_System">
  [595] extcall 53 .............................. <objectExists("Figure_System")>
  [597] not ..................................... <not objectExists("Figure_System")>
  [598] jmpifz [617] ............................ if not objectExists("Figure_System") then
  [601] pop 1
  [603] getparam 0 .............................. <me>
  [605] pushcons 40 ............................. <"Figure system object not found">
  [607] pushsymb 27 ............................. <#updateState>
  [609] pusharglist 3 ........................... <me, "Figure system object not found", #updateState>
  [611] extcall 162 ............................. <error(me, "Figure system object not found", #updateState)>
  [613] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #updateState)>
  [615] extcall 23 .............................. return error(me, "Figure system object not found", #updateState)
  [617] pushcons 39 ............................. <"Figure_System">
  [619] pusharglist 1 ........................... <"Figure_System">
  [621] extcall 29 .............................. <getObject("Figure_System")>
  [623] pusharglist 1 ........................... <getObject("Figure_System")>
  [625] objcall 514 ............................. <getObject("Figure_System").isFigureSystemReady()>
  [628] not ..................................... <not getObject("Figure_System").isFigureSystemReady()>
  [629] jmpifz [650] ............................ if not getObject("Figure_System").isFigureSystemReady() then
  [632] getparam 0 .............................. <me>
  [634] pusharglist 1 ........................... <me>
  [636] objcall 43 .............................. <me.getInterface()>
  [638] pushcons 80 ............................. <"update">
  [640] pusharglistnoret 2 ...................... <me.getInterface(), "update">
  [642] objcall 96 .............................. me.getInterface().showLoadingWindow("update")
  [644] pop 1
  [646] pusharglistnoret 0 ...................... <>
  [648] extcall 23 .............................. return 
  [650] pushcons 39 ............................. <"Figure_System">
  [652] pusharglist 1 ........................... <"Figure_System">
  [654] extcall 29 .............................. <getObject("Figure_System")>
  [656] pushsymb 30 ............................. <#session>
  [658] pusharglist 1 ........................... <#session>
  [660] extcall 29 .............................. <getObject(#session)>
  [662] pushcons 81 ............................. <"user_figure">
  [664] pusharglist 2 ........................... <getObject(#session), "user_figure">
  [666] objcall 32 .............................. <getObject(#session).get("user_figure")>
  [668] pushsymb 30 ............................. <#session>
  [670] pusharglist 1 ........................... <#session>
  [672] extcall 29 .............................. <getObject(#session)>
  [674] pushcons 82 ............................. <"user_sex">
  [676] pusharglist 2 ........................... <getObject(#session), "user_sex">
  [678] objcall 32 .............................. <getObject(#session).get("user_sex")>
  [680] pusharglist 3 ........................... <getObject("Figure_System"), getObject(#session).get("user_figure"), getObject(#session).get("user_sex")>
  [682] objcall 515 ............................. <getObject("Figure_System").validateFigure(getObject(#session).get("user_figure"), getObject(#session).get("user_sex"))>
  [685] setlocal 6 .............................. tFigure = getObject("Figure_System").validateFigure(getObject(#session).get("user_figure"), getObject(#session).get("user_sex"))
  [687] pushsymb 30 ............................. <#session>
  [689] pusharglist 1 ........................... <#session>
  [691] extcall 29 .............................. <getObject(#session)>
  [693] pushcons 81 ............................. <"user_figure">
  [695] getlocal 6 .............................. <tFigure>
  [697] pusharglistnoret 3 ...................... <getObject(#session), "user_figure", tFigure>
  [699] objcall 36 .............................. getObject(#session).set("user_figure", tFigure)
  [701] getparam 0 .............................. <me>
  [703] pusharglist 1 ........................... <me>
  [705] objcall 43 .............................. <me.getInterface()>
  [707] pushcons 80 ............................. <"update">
  [709] pusharglistnoret 2 ...................... <me.getInterface(), "update">
  [711] objcall 93 .............................. me.getInterface().showHideFigureCreator("update")
  [713] pop 1
  [715] pushint8 1 .............................. <1>
  [717] pusharglistnoret 1 ...................... <1>
  [719] extcall 23 .............................. return 1
  [721] jmp [1147]
  [724] peek 0
  [726] pushcons 33 ............................. <"openForcedUpdate">
  [728] eq
  [729] jmpifz [1128] ........................... (case) "openForcedUpdate":
  [732] getparam 1 .............................. <tstate>
  [734] setprop 26 .............................. pState = tstate
  [736] pushcons 39 ............................. <"Figure_System">
  [738] pusharglist 1 ........................... <"Figure_System">
  [740] extcall 53 .............................. <objectExists("Figure_System")>
  [742] not ..................................... <not objectExists("Figure_System")>
  [743] jmpifz [762] ............................ if not objectExists("Figure_System") then
  [746] pop 1
  [748] getparam 0 .............................. <me>
  [750] pushcons 40 ............................. <"Figure system object not found">
  [752] pushsymb 27 ............................. <#updateState>
  [754] pusharglist 3 ........................... <me, "Figure system object not found", #updateState>
  [756] extcall 162 ............................. <error(me, "Figure system object not found", #updateState)>
  [758] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #updateState)>
  [760] extcall 23 .............................. return error(me, "Figure system object not found", #updateState)
  [762] pushcons 39 ............................. <"Figure_System">
  [764] pusharglist 1 ........................... <"Figure_System">
  [766] extcall 29 .............................. <getObject("Figure_System")>
  [768] pusharglist 1 ........................... <getObject("Figure_System")>
  [770] objcall 514 ............................. <getObject("Figure_System").isFigureSystemReady()>
  [773] not ..................................... <not getObject("Figure_System").isFigureSystemReady()>
  [774] jmpifz [795] ............................ if not getObject("Figure_System").isFigureSystemReady() then
  [777] getparam 0 .............................. <me>
  [779] pusharglist 1 ........................... <me>
  [781] objcall 43 .............................. <me.getInterface()>
  [783] pushcons 83 ............................. <"forced">
  [785] pusharglistnoret 2 ...................... <me.getInterface(), "forced">
  [787] objcall 96 .............................. me.getInterface().showLoadingWindow("forced")
  [789] pop 1
  [791] pusharglistnoret 0 ...................... <>
  [793] extcall 23 .............................. return 
  [795] pushcons 39 ............................. <"Figure_System">
  [797] pusharglist 1 ........................... <"Figure_System">
  [799] extcall 29 .............................. <getObject("Figure_System")>
  [801] pushsymb 30 ............................. <#session>
  [803] pusharglist 1 ........................... <#session>
  [805] extcall 29 .............................. <getObject(#session)>
  [807] pushcons 81 ............................. <"user_figure">
  [809] pusharglist 2 ........................... <getObject(#session), "user_figure">
  [811] objcall 32 .............................. <getObject(#session).get("user_figure")>
  [813] pushsymb 30 ............................. <#session>
  [815] pusharglist 1 ........................... <#session>
  [817] extcall 29 .............................. <getObject(#session)>
  [819] pushcons 82 ............................. <"user_sex">
  [821] pusharglist 2 ........................... <getObject(#session), "user_sex">
  [823] objcall 32 .............................. <getObject(#session).get("user_sex")>
  [825] pusharglist 3 ........................... <getObject("Figure_System"), getObject(#session).get("user_figure"), getObject(#session).get("user_sex")>
  [827] objcall 515 ............................. <getObject("Figure_System").validateFigure(getObject(#session).get("user_figure"), getObject(#session).get("user_sex"))>
  [830] setlocal 6 .............................. tFigure = getObject("Figure_System").validateFigure(getObject(#session).get("user_figure"), getObject(#session).get("user_sex"))
  [832] pushsymb 30 ............................. <#session>
  [834] pusharglist 1 ........................... <#session>
  [836] extcall 29 .............................. <getObject(#session)>
  [838] pushcons 81 ............................. <"user_figure">
  [840] getlocal 6 .............................. <tFigure>
  [842] pusharglistnoret 3 ...................... <getObject(#session), "user_figure", tFigure>
  [844] objcall 36 .............................. getObject(#session).set("user_figure", tFigure)
  [846] pushsymb 30 ............................. <#session>
  [848] pusharglist 1 ........................... <#session>
  [850] extcall 29 .............................. <getObject(#session)>
  [852] pushcons 79 ............................. <"conf_coppa">
  [854] pusharglist 2 ........................... <getObject(#session), "conf_coppa">
  [856] objcall 32 .............................. <getObject(#session).get("conf_coppa")>
  [858] setlocal 7 .............................. tCoppaFlag = getObject(#session).get("conf_coppa")
  [860] pushsymb 30 ............................. <#session>
  [862] pusharglist 1 ........................... <#session>
  [864] extcall 29 .............................. <getObject(#session)>
  [866] pushcons 51 ............................. <"conf_parent_email_request_reregistration">
  [868] pusharglist 2 ........................... <getObject(#session), "conf_parent_email_request_reregistration">
  [870] objcall 32 .............................. <getObject(#session).get("conf_parent_email_request_reregistration")>
  [872] setlocal 8 .............................. tParentEmailFlag = getObject(#session).get("conf_parent_email_request_reregistration")
  [874] getlocal 7 .............................. <tCoppaFlag>
  [876] pushint8 1 .............................. <1>
  [878] eq ...................................... <tCoppaFlag = 1>
  [879] getlocal 8 .............................. <tParentEmailFlag>
  [881] pushzero ................................ <0>
  [882] eq ...................................... <tParentEmailFlag = 0>
  [883] and ..................................... <(tCoppaFlag = 1) and (tParentEmailFlag = 0)>
  [884] jmpifz [904] ............................ if (tCoppaFlag = 1) and (tParentEmailFlag = 0) then / else
  [887] getparam 0 .............................. <me>
  [889] pusharglist 1 ........................... <me>
  [891] objcall 43 .............................. <me.getInterface()>
  [893] pushcons 84 ............................. <"coppa_forced">
  [895] pushint8 1 .............................. <1>
  [897] pusharglistnoret 3 ...................... <me.getInterface(), "coppa_forced", 1>
  [899] objcall 93 .............................. me.getInterface().showHideFigureCreator("coppa_forced", 1)
  [901] jmp [979]
  [904] getlocal 7 .............................. <tCoppaFlag>
  [906] pushint8 1 .............................. <1>
  [908] eq ...................................... <tCoppaFlag = 1>
  [909] getlocal 8 .............................. <tParentEmailFlag>
  [911] pushint8 1 .............................. <1>
  [913] eq ...................................... <tParentEmailFlag = 1>
  [914] and ..................................... <(tCoppaFlag = 1) and (tParentEmailFlag = 1)>
  [915] jmpifz [935] ............................ if (tCoppaFlag = 1) and (tParentEmailFlag = 1) then / else
  [918] getparam 0 .............................. <me>
  [920] pusharglist 1 ........................... <me>
  [922] objcall 43 .............................. <me.getInterface()>
  [924] pushcons 85 ............................. <"parent_email_coppa_forced">
  [926] pushint8 1 .............................. <1>
  [928] pusharglistnoret 3 ...................... <me.getInterface(), "parent_email_coppa_forced", 1>
  [930] objcall 93 .............................. me.getInterface().showHideFigureCreator("parent_email_coppa_forced", 1)
  [932] jmp [979]
  [935] getlocal 7 .............................. <tCoppaFlag>
  [937] pushzero ................................ <0>
  [938] eq ...................................... <tCoppaFlag = 0>
  [939] getlocal 8 .............................. <tParentEmailFlag>
  [941] pushint8 1 .............................. <1>
  [943] eq ...................................... <tParentEmailFlag = 1>
  [944] and ..................................... <(tCoppaFlag = 0) and (tParentEmailFlag = 1)>
  [945] jmpifz [965] ............................ if (tCoppaFlag = 0) and (tParentEmailFlag = 1) then / else
  [948] getparam 0 .............................. <me>
  [950] pusharglist 1 ........................... <me>
  [952] objcall 43 .............................. <me.getInterface()>
  [954] pushcons 86 ............................. <"parent_email_forced">
  [956] pushint8 1 .............................. <1>
  [958] pusharglistnoret 3 ...................... <me.getInterface(), "parent_email_forced", 1>
  [960] objcall 93 .............................. me.getInterface().showHideFigureCreator("parent_email_forced", 1)
  [962] jmp [979]
  [965] getparam 0 .............................. <me>
  [967] pusharglist 1 ........................... <me>
  [969] objcall 43 .............................. <me.getInterface()>
  [971] pushcons 83 ............................. <"forced">
  [973] pushint8 1 .............................. <1>
  [975] pusharglistnoret 3 ...................... <me.getInterface(), "forced", 1>
  [977] objcall 93 .............................. me.getInterface().showHideFigureCreator("forced", 1)
  [979] pushsymb 30 ............................. <#session>
  [981] pusharglist 1 ........................... <#session>
  [983] extcall 29 .............................. <getObject(#session)>
  [985] pushcons 51 ............................. <"conf_parent_email_request_reregistration">
  [987] pusharglist 2 ........................... <getObject(#session), "conf_parent_email_request_reregistration">
  [989] objcall 32 .............................. <getObject(#session).get("conf_parent_email_request_reregistration")>
  [991] jmpifz [1117] ........................... if getObject(#session).get("conf_parent_email_request_reregistration") then
  [994] pushsymb 30 ............................. <#session>
  [996] pusharglist 1 ........................... <#session>
  [998] extcall 29 .............................. <getObject(#session)>
  [1000] pushcons 87 ............................ <"user_birthday">
  [1002] pusharglist 2 .......................... <getObject(#session), "user_birthday">
  [1004] objcall 32 ............................. <getObject(#session).get("user_birthday")>
  [1006] setlocal 9 ............................. tTempBirthday = getObject(#session).get("user_birthday")
  [1008] pushcons 0 ............................. <EMPTY>
  [1010] setlocal 10 ............................ tBirthday = EMPTY
  [1012] getlocal 9 ............................. <tTempBirthday>
  [1014] pusharglist 1 .......................... <tTempBirthday>
  [1016] extcall 402 ............................ <stringp(tTempBirthday)>
  [1019] jmpifz [1092] .......................... if stringp(tTempBirthday) then
  [1022] getmovieprop 255 ....................... <the itemDelimiter>
  [1024] setlocal 11 ............................ tDelim = the itemDelimiter
  [1026] pushcons 88 ............................ <".">
  [1028] setmovieprop 255 ....................... the itemDelimiter = "."
  [1030] getlocal 9 ............................. <tTempBirthday>
  [1032] pushsymb 257 ........................... <#item>
  [1035] pusharglist 2 .......................... <tTempBirthday, #item>
  [1037] objcall 52 ............................. <tTempBirthday.item.count>
  [1039] pushint8 3 ............................. <3>
  [1041] eq ..................................... <tTempBirthday.item.count = 3>
  [1042] jmpifz [1088] .......................... if tTempBirthday.item.count = 3 then
  [1045] getlocal 9 ............................. <tTempBirthday>
  [1047] pushsymb 257 ........................... <#item>
  [1050] pushint8 3 ............................. <3>
  [1052] pusharglist 3 .......................... <tTempBirthday, #item, 3>
  [1054] objcall 243 ............................ <tTempBirthday.item[3]>
  [1056] pushcons 88 ............................ <".">
  [1058] joinstr ................................ <tTempBirthday.item[3] & ".">
  [1059] getlocal 9 ............................. <tTempBirthday>
  [1061] pushsymb 257 ........................... <#item>
  [1064] pushint8 2 ............................. <2>
  [1066] pusharglist 3 .......................... <tTempBirthday, #item, 2>
  [1068] objcall 243 ............................ <tTempBirthday.item[2]>
  [1070] joinstr ................................ <tTempBirthday.item[3] & "." & tTempBirthday.item[2]>
  [1071] pushcons 88 ............................ <".">
  [1073] joinstr ................................ <tTempBirthday.item[3] & "." & tTempBirthday.item[2] & ".">
  [1074] getlocal 9 ............................. <tTempBirthday>
  [1076] pushsymb 257 ........................... <#item>
  [1079] pushint8 1 ............................. <1>
  [1081] pusharglist 3 .......................... <tTempBirthday, #item, 1>
  [1083] objcall 243 ............................ <tTempBirthday.item[1]>
  [1085] joinstr ................................ <tTempBirthday.item[3] & "." & tTempBirthday.item[2] & "." & tTempBirthday.item[1]>
  [1086] setlocal 10 ............................ tBirthday = tTempBirthday.item[3] & "." & tTempBirthday.item[2] & "." & tTempBirthday.item[1]
  [1088] getlocal 11 ............................ <tDelim>
  [1090] setmovieprop 255 ....................... the itemDelimiter = tDelim
  [1092] pushsymb 30 ............................ <#session>
  [1094] pusharglist 1 .......................... <#session>
  [1096] extcall 29 ............................. <getObject(#session)>
  [1098] pushcons 89 ............................ <"user_name">
  [1100] pusharglist 2 .......................... <getObject(#session), "user_name">
  [1102] objcall 32 ............................. <getObject(#session).get("user_name")>
  [1104] setlocal 12 ............................ tHabboID = getObject(#session).get("user_name")
  [1106] getparam 0 ............................. <me>
  [1108] getlocal 10 ............................ <tBirthday>
  [1110] getlocal 12 ............................ <tHabboID>
  [1112] pusharglistnoret 3 ..................... <me, tBirthday, tHabboID>
  [1114] objcall 390 ............................ me.parentEmailNeedQuery(tBirthday, tHabboID)
  [1117] pop 1
  [1119] pushint8 1 ............................. <1>
  [1121] pusharglistnoret 1 ..................... <1>
  [1123] extcall 23 ............................. return 1
  [1125] jmp [1147] ............................. (case) otherwise:
  [1128] pop 1
  [1130] getparam 0 ............................. <me>
  [1132] pushcons 90 ............................ <"Unknown state:">
  [1134] getparam 1 ............................. <tstate>
  [1136] joinpadstr ............................. <"Unknown state:" && tstate>
  [1137] pushsymb 27 ............................ <#updateState>
  [1139] pusharglist 3 .......................... <me, "Unknown state:" && tstate, #updateState>
  [1141] extcall 162 ............................ <error(me, "Unknown state:" && tstate, #updateState)>
  [1143] pusharglistnoret 1 ..................... <error(me, "Unknown state:" && tstate, #updateState)>
  [1145] extcall 23 ............................. return error(me, "Unknown state:" && tstate, #updateState)
  [1147] pop 1 .................................. end case
  [1149] ret
end
