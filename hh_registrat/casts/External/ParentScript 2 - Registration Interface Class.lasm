property pTempPassword, pOpenWindow, pWindowTitle, pmode, pOldFigure, pOldSex, pPartChangeButtons, pBodyPartObjects, pPeopleSize, pBuffer, pFlipList, pNameChecked, pEmailChecked, pLastNameCheck, pPropsToServer, pErrorMsg, pRegProcess, pRegProcessLocation, pVerifyChangeWndID, pLastWindow, pPwdEmailUpdateForced, pPasswordErrors, pUpdatingPassword, pPasswordChecked, pUpdatePropsToServer

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 69 .............................. pTempPassword = [:]
  [  5] pusharglist 0 ........................... <[:]>
  [  7] pushproplist ............................ <[:]>
  [  8] setprop 70 .............................. pPropsToServer = [:]
  [ 10] pusharglist 0 ........................... <[:]>
  [ 12] pushproplist ............................ <[:]>
  [ 13] setprop 71 .............................. pPartChangeButtons = [:]
  [ 15] pushcons 0 .............................. <EMPTY>
  [ 17] setprop 72 .............................. pLastNameCheck = EMPTY
  [ 19] pushcons 1 .............................. <"win_figurecreator">
  [ 21] pushcons 2 .............................. <"Your own Habbo">
  [ 23] pusharglist 2 ........................... <"win_figurecreator", "Your own Habbo">
  [ 25] extcall 74 .............................. <getText("win_figurecreator", "Your own Habbo")>
  [ 27] setprop 73 .............................. pWindowTitle = getText("win_figurecreator", "Your own Habbo")
  [ 29] pushcons 0 .............................. <EMPTY>
  [ 31] setprop 75 .............................. pOpenWindow = EMPTY
  [ 33] pushint8 1 .............................. <1>
  [ 35] setprop 76 .............................. pRegProcessLocation = 1
  [ 37] pushcons 3 .............................. <"VerifyingChangeWindow">
  [ 39] setprop 77 .............................. pVerifyChangeWndID = "VerifyingChangeWindow"
  [ 41] pushcons 0 .............................. <EMPTY>
  [ 43] setprop 78 .............................. pLastWindow = EMPTY
  [ 45] pushzero ................................ <0>
  [ 46] setprop 79 .............................. pPwdEmailUpdateForced = 0
  [ 48] pushcons 0 .............................. <EMPTY>
  [ 50] setprop 80 .............................. pPasswordErrors = EMPTY
  [ 52] pushzero ................................ <0>
  [ 53] setprop 81 .............................. pUpdatingPassword = 0
  [ 55] pushzero ................................ <0>
  [ 56] setprop 82 .............................. pPasswordChecked = 0
  [ 58] pusharglist 0 ........................... <[:]>
  [ 60] pushproplist ............................ <[:]>
  [ 61] setprop 83 .............................. pUpdatePropsToServer = [:]
  [ 63] pushcons 4 .............................. <"registration.props">
  [ 65] pusharglist 1 ........................... <"registration.props">
  [ 67] extcall 84 .............................. <dumpVariableField("registration.props")>
  [ 69] not ..................................... <not dumpVariableField("registration.props")>
  [ 70] jmpifz [ 83] ............................ if not dumpVariableField("registration.props") then
  [ 73] getparam 0 .............................. <me>
  [ 75] pushcons 5 .............................. <"registration props field not found!">
  [ 77] pushsymb 1 .............................. <#construct>
  [ 79] pusharglistnoret 3 ...................... <me, "registration props field not found!", #construct>
  [ 81] extcall 85 .............................. error(me, "registration props field not found!", #construct)
  [ 83] pushcons 6 .............................. <"permitted.name.chars">
  [ 85] pusharglist 1 ........................... <"permitted.name.chars">
  [ 87] extcall 86 .............................. <variableExists("permitted.name.chars")>
  [ 89] not ..................................... <not variableExists("permitted.name.chars")>
  [ 90] jmpifz [101] ............................ if not variableExists("permitted.name.chars") then
  [ 93] pushcons 6 .............................. <"permitted.name.chars">
  [ 95] pushcons 7 .............................. <"1234567890qwertyuiopasdfghjklzxcvbnm_-=+?!@<>:.,">
  [ 97] pusharglistnoret 2 ...................... <"permitted.name.chars", "1234567890qwertyuiopasdfghjklzxcvbnm_-=+?!@<>:.,">
  [ 99] extcall 87 .............................. setVariable("permitted.name.chars", "1234567890qwertyuiopasdfghjklzxcvbnm_-=+?!@<>:.,")
  [101] pushcons 8 .............................. <"permitted.password.chars">
  [103] pusharglist 1 ........................... <"permitted.password.chars">
  [105] extcall 86 .............................. <variableExists("permitted.password.chars")>
  [107] not ..................................... <not variableExists("permitted.password.chars")>
  [108] jmpifz [123] ............................ if not variableExists("permitted.password.chars") then
  [111] pushcons 8 .............................. <"permitted.password.chars">
  [113] pushcons 6 .............................. <"permitted.name.chars">
  [115] pusharglist 1 ........................... <"permitted.name.chars">
  [117] extcall 88 .............................. <getVariable("permitted.name.chars")>
  [119] pusharglistnoret 2 ...................... <"permitted.password.chars", getVariable("permitted.name.chars")>
  [121] extcall 87 .............................. setVariable("permitted.password.chars", getVariable("permitted.name.chars"))
  [123] pushcons 9 .............................. <"denied.name.chars">
  [125] pusharglist 1 ........................... <"denied.name.chars">
  [127] extcall 86 .............................. <variableExists("denied.name.chars")>
  [129] not ..................................... <not variableExists("denied.name.chars")>
  [130] jmpifz [141] ............................ if not variableExists("denied.name.chars") then
  [133] pushcons 9 .............................. <"denied.name.chars">
  [135] pushcons 10 ............................. <"_">
  [137] pusharglistnoret 2 ...................... <"denied.name.chars", "_">
  [139] extcall 87 .............................. setVariable("denied.name.chars", "_")
  [141] pushint8 1 .............................. <1>
  [143] pusharglistnoret 1 ...................... <1>
  [145] extcall 89 .............................. return 1
  [147] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 92 .............................. <VOID>
  [  4] setprop 91 .............................. pBodyPartObjects = VOID
  [  6] getprop 73 .............................. <pWindowTitle>
  [  8] pusharglist 1 ........................... <pWindowTitle>
  [ 10] extcall 93 .............................. <windowExists(pWindowTitle)>
  [ 12] jmpifz [ 21] ............................ if windowExists(pWindowTitle) then
  [ 15] getprop 73 .............................. <pWindowTitle>
  [ 17] pusharglistnoret 1 ...................... <pWindowTitle>
  [ 19] extcall 94 .............................. removeWindow(pWindowTitle)
  [ 21] pushsymb 96 ............................. <#temp_humanobj_figurecreator>
  [ 23] pusharglist 1 ........................... <#temp_humanobj_figurecreator>
  [ 25] extcall 95 .............................. <objectExists(#temp_humanobj_figurecreator)>
  [ 27] jmpifz [ 36] ............................ if objectExists(#temp_humanobj_figurecreator) then
  [ 30] pushsymb 96 ............................. <#temp_humanobj_figurecreator>
  [ 32] pusharglistnoret 1 ...................... <#temp_humanobj_figurecreator>
  [ 34] extcall 97 .............................. removeObject(#temp_humanobj_figurecreator)
  [ 36] pushcons 11 ............................. <"CountryMngr">
  [ 38] pusharglist 1 ........................... <"CountryMngr">
  [ 40] extcall 95 .............................. <objectExists("CountryMngr")>
  [ 42] jmpifz [ 51] ............................ if objectExists("CountryMngr") then
  [ 45] pushcons 11 ............................. <"CountryMngr">
  [ 47] pusharglistnoret 1 ...................... <"CountryMngr">
  [ 49] extcall 97 .............................. removeObject("CountryMngr")
  [ 51] pushint8 1 .............................. <1>
  [ 53] pusharglistnoret 1 ...................... <1>
  [ 55] extcall 89 .............................. return 1
  [ 57] ret
end

on showHideFigureCreator me, tNewOrUpdate, tForceOpen
  [  0] getprop 73 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 93 .............................. <windowExists(pWindowTitle)>
  [  6] getprop 75 .............................. <pOpenWindow>
  [  8] pushcons 12 ............................. <"reg_loading.window">
  [ 10] nteq .................................... <pOpenWindow <> "reg_loading.window">
  [ 11] and ..................................... <windowExists(pWindowTitle) and (pOpenWindow <> "reg_loading.window")>
  [ 12] getparam 2 .............................. <tForceOpen>
  [ 14] not ..................................... <not tForceOpen>
  [ 15] and ..................................... <windowExists(pWindowTitle) and (pOpenWindow <> "reg_loading.window") and not tForceOpen>
  [ 16] jmpifz [ 32] ............................ if windowExists(pWindowTitle) and (pOpenWindow <> "reg_loading.window") and not tForceOpen then / else
  [ 19] getparam 0 .............................. <me>
  [ 21] pusharglist 1 ........................... <me>
  [ 23] objcall 5 ............................... <me.closeFigureCreator()>
  [ 25] pusharglistnoret 1 ...................... <me.closeFigureCreator()>
  [ 27] extcall 89 .............................. return me.closeFigureCreator()
  [ 29] jmp [ 44]
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 1 .............................. <tNewOrUpdate>
  [ 36] pusharglist 2 ........................... <me, tNewOrUpdate>
  [ 38] objcall 4 ............................... <me.openFigureCreator(tNewOrUpdate)>
  [ 40] pusharglistnoret 1 ...................... <me.openFigureCreator(tNewOrUpdate)>
  [ 42] extcall 89 .............................. return me.openFigureCreator(tNewOrUpdate)
  [ 44] ret
end

on openFigureCreator me, tMode
  [  0] getparam 1 .............................. <tMode>
  [  2] pusharglist 1 ........................... <tMode>
  [  4] extcall 100 ............................. <voidp(tMode)>
  [  6] not ..................................... <not voidp(tMode)>
  [  7] jmpifz [ 18] ............................ if not voidp(tMode) then
  [ 10] getparam 0 .............................. <me>
  [ 12] getparam 1 .............................. <tMode>
  [ 14] pusharglistnoret 2 ...................... <me, tMode>
  [ 16] objcall 24 .............................. me.defineModes(tMode)
  [ 18] getparam 1 .............................. <tMode>
  [ 20] pushcons 13 ............................. <".process">
  [ 22] joinstr ................................. <tMode & ".process">
  [ 23] pusharglist 1 ........................... <tMode & ".process">
  [ 25] extcall 101 ............................. <getVariableValue(tMode & ".process")>
  [ 27] setlocal 0 .............................. tRegPages = getVariableValue(tMode & ".process")
  [ 29] getlocal 0 .............................. <tRegPages>
  [ 31] getobjprop 102 .......................... <tRegPages.ilk>
  [ 33] pushsymb 103 ............................ <#list>
  [ 35] nteq .................................... <tRegPages.ilk <> #list>
  [ 36] jmpifz [ 56] ............................ if tRegPages.ilk <> #list then / else
  [ 39] pushcons 14 ............................. <"reg_namepage.window">
  [ 41] setlocal 1 .............................. tWindow = "reg_namepage.window"
  [ 43] getparam 0 .............................. <me>
  [ 45] pushcons 15 ............................. <"registration process variable not found">
  [ 47] pushsymb 4 .............................. <#openFigureCreator>
  [ 49] pusharglistnoret 3 ...................... <me, "registration process variable not found", #openFigureCreator>
  [ 51] extcall 85 .............................. error(me, "registration process variable not found", #openFigureCreator)
  [ 53] jmp [ 82]
  [ 56] getlocal 0 .............................. <tRegPages>
  [ 58] getobjprop 104 .......................... <tRegPages.count>
  [ 60] pushzero ................................ <0>
  [ 61] gt ...................................... <tRegPages.count > 0>
  [ 62] jmpifz [ 82] ............................ if tRegPages.count > 0 then
  [ 65] pushint8 1 .............................. <1>
  [ 67] setprop 76 .............................. pRegProcessLocation = 1
  [ 69] getlocal 0 .............................. <tRegPages>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 2 ........................... <tRegPages, 1>
  [ 75] objcall 105 ............................. <tRegPages[1]>
  [ 77] pushcons 16 ............................. <".window">
  [ 79] joinstr ................................. <tRegPages[1] & ".window">
  [ 80] setlocal 1 .............................. tWindow = tRegPages[1] & ".window"
  [ 82] getparam 0 .............................. <me>
  [ 84] getlocal 1 .............................. <tWindow>
  [ 86] pusharglist 2 ........................... <me, tWindow>
  [ 88] objcall 60 .............................. <me.enterPage(tWindow)>
  [ 90] pusharglistnoret 1 ...................... <me.enterPage(tWindow)>
  [ 92] extcall 89 .............................. return me.enterPage(tWindow)
  [ 94] ret
end

on closeFigureCreator me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 70 .............................. pPropsToServer = [:]
  [  5] pusharglist 0 ........................... <>
  [  7] extcall 92 .............................. <VOID>
  [  9] setprop 91 .............................. pBodyPartObjects = VOID
  [ 11] getprop 73 .............................. <pWindowTitle>
  [ 13] pusharglist 1 ........................... <pWindowTitle>
  [ 15] extcall 93 .............................. <windowExists(pWindowTitle)>
  [ 17] jmpifz [ 26] ............................ if windowExists(pWindowTitle) then
  [ 20] getprop 73 .............................. <pWindowTitle>
  [ 22] pusharglistnoret 1 ...................... <pWindowTitle>
  [ 24] extcall 94 .............................. removeWindow(pWindowTitle)
  [ 26] pushsymb 109 ............................ <#session>
  [ 28] pusharglist 1 ........................... <#session>
  [ 30] extcall 95 .............................. <objectExists(#session)>
  [ 32] jmpifz [ 48] ............................ if objectExists(#session) then
  [ 35] pushsymb 109 ............................ <#session>
  [ 37] pusharglist 1 ........................... <#session>
  [ 39] extcall 110 ............................. <getObject(#session)>
  [ 41] pushcons 17 ............................. <"creatingCharacter">
  [ 43] pushzero ................................ <0>
  [ 44] pusharglistnoret 3 ...................... <getObject(#session), "creatingCharacter", 0>
  [ 46] objcall 111 ............................. getObject(#session).set("creatingCharacter", 0)
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 89 .............................. return 1
  [ 54] ret
end

on showLoadingWindow me, tMode
  [  0] getparam 1 .............................. <tMode>
  [  2] setprop 112 ............................. pmode = tMode
  [  4] getparam 0 .............................. <me>
  [  6] pushcons 12 ............................. <"reg_loading.window">
  [  8] pusharglistnoret 2 ...................... <me, "reg_loading.window">
  [ 10] objcall 26 .............................. me.ChangeWindowView("reg_loading.window")
  [ 12] getparam 0 .............................. <me>
  [ 14] pusharglistnoret 1 ...................... <me>
  [ 16] objcall 23 .............................. me.blinkLoading()
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 1 ...................... <1>
  [ 22] extcall 89 .............................. return 1
  [ 24] ret
end

on finishRegistration me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pusharglist 1 ........................... <tdata>
  [  4] extcall 113 ............................. <value(tdata)>
  [  6] setlocal 0 .............................. tAgeOk = value(tdata)
  [  8] getlocal 0 .............................. <tAgeOk>
  [ 10] jmpifz [ 24] ............................ if tAgeOk then / else
  [ 13] getparam 0 .............................. <me>
  [ 15] pushint8 1 .............................. <1>
  [ 17] pusharglistnoret 2 ...................... <me, 1>
  [ 19] objcall 58 .............................. me.changePage(1)
  [ 21] jmp [ 34]
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglist 1 ........................... <me>
  [ 28] objcall 114 ............................. <me.getComponent()>
  [ 30] pusharglistnoret 1 ...................... <me.getComponent()>
  [ 32] objcall 115 ............................. me.getComponent().getRealtime()
  [ 34] ret
end

on userNameOk me
  [  0] getprop 75 .............................. <pOpenWindow>
  [  2] pushcons 12 ............................. <"reg_loading.window">
  [  4] eq ...................................... <pOpenWindow = "reg_loading.window">
  [  5] jmpifz [ 16] ............................ if pOpenWindow = "reg_loading.window" then
  [  8] getparam 0 .............................. <me>
  [ 10] pushint8 1 .............................. <1>
  [ 12] pusharglistnoret 2 ...................... <me, 1>
  [ 14] objcall 58 .............................. me.changePage(1)
  [ 16] ret
end

on userNameUnacceptable me
  [  0] getprop 75 .............................. <pOpenWindow>
  [  2] pushcons 12 ............................. <"reg_loading.window">
  [  4] eq ...................................... <pOpenWindow = "reg_loading.window">
  [  5] jmpifz [ 16] ............................ if pOpenWindow = "reg_loading.window" then
  [  8] getparam 0 .............................. <me>
  [ 10] pushcons 14 ............................. <"reg_namepage.window">
  [ 12] pusharglistnoret 2 ...................... <me, "reg_namepage.window">
  [ 14] objcall 58 .............................. me.changePage("reg_namepage.window")
  [ 16] pushsymb 119 ............................ <#alert>
  [ 18] pushsymb 120 ............................ <#msg>
  [ 20] pushcons 18 ............................. <"Alert_unacceptableName">
  [ 22] pushsymb 121 ............................ <#id>
  [ 24] pushcons 19 ............................. <"namenogood">
  [ 26] pushsymb 122 ............................ <#modal>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 6 ........................... <[#msg: "Alert_unacceptableName", #id: "namenogood", #modal: 1]>
  [ 32] pushproplist ............................ <[#msg: "Alert_unacceptableName", #id: "namenogood", #modal: 1]>
  [ 33] pusharglistnoret 2 ...................... <#alert, [#msg: "Alert_unacceptableName", #id: "namenogood", #modal: 1]>
  [ 35] extcall 118 ............................. executeMessage(#alert, [#msg: "Alert_unacceptableName", #id: "namenogood", #modal: 1])
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglistnoret 1 ...................... <me>
  [ 41] objcall 54 .............................. me.clearUserNameField()
  [ 43] ret
end

on userNameTooLong me
  [  0] getprop 75 .............................. <pOpenWindow>
  [  2] pushcons 12 ............................. <"reg_loading.window">
  [  4] eq ...................................... <pOpenWindow = "reg_loading.window">
  [  5] jmpifz [ 16] ............................ if pOpenWindow = "reg_loading.window" then
  [  8] getparam 0 .............................. <me>
  [ 10] pushcons 14 ............................. <"reg_namepage.window">
  [ 12] pusharglistnoret 2 ...................... <me, "reg_namepage.window">
  [ 14] objcall 58 .............................. me.changePage("reg_namepage.window")
  [ 16] pushsymb 119 ............................ <#alert>
  [ 18] pushsymb 120 ............................ <#msg>
  [ 20] pushcons 20 ............................. <"Alert_NameTooLong">
  [ 22] pushsymb 121 ............................ <#id>
  [ 24] pushcons 21 ............................. <"nametoolong">
  [ 26] pushsymb 122 ............................ <#modal>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 6 ........................... <[#msg: "Alert_NameTooLong", #id: "nametoolong", #modal: 1]>
  [ 32] pushproplist ............................ <[#msg: "Alert_NameTooLong", #id: "nametoolong", #modal: 1]>
  [ 33] pusharglistnoret 2 ...................... <#alert, [#msg: "Alert_NameTooLong", #id: "nametoolong", #modal: 1]>
  [ 35] extcall 118 ............................. executeMessage(#alert, [#msg: "Alert_NameTooLong", #id: "nametoolong", #modal: 1])
  [ 37] ret
end

on userNameAlreadyReserved me
  [  0] getprop 75 .............................. <pOpenWindow>
  [  2] pushcons 12 ............................. <"reg_loading.window">
  [  4] eq ...................................... <pOpenWindow = "reg_loading.window">
  [  5] jmpifz [ 16] ............................ if pOpenWindow = "reg_loading.window" then
  [  8] getparam 0 .............................. <me>
  [ 10] pushcons 14 ............................. <"reg_namepage.window">
  [ 12] pusharglistnoret 2 ...................... <me, "reg_namepage.window">
  [ 14] objcall 58 .............................. me.changePage("reg_namepage.window")
  [ 16] pushsymb 119 ............................ <#alert>
  [ 18] pushsymb 120 ............................ <#msg>
  [ 20] pushcons 22 ............................. <"Alert_NameAlreadyUse">
  [ 22] pushsymb 121 ............................ <#id>
  [ 24] pushcons 23 ............................. <"namereserved">
  [ 26] pushsymb 122 ............................ <#modal>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 6 ........................... <[#msg: "Alert_NameAlreadyUse", #id: "namereserved", #modal: 1]>
  [ 32] pushproplist ............................ <[#msg: "Alert_NameAlreadyUse", #id: "namereserved", #modal: 1]>
  [ 33] pusharglistnoret 2 ...................... <#alert, [#msg: "Alert_NameAlreadyUse", #id: "namereserved", #modal: 1]>
  [ 35] extcall 118 ............................. executeMessage(#alert, [#msg: "Alert_NameAlreadyUse", #id: "namereserved", #modal: 1])
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglistnoret 1 ...................... <me>
  [ 41] objcall 54 .............................. me.clearUserNameField()
  [ 43] ret
end

on userEmailOk me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 123 ............................. pEmailChecked = 1
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 1 ...................... <1>
  [  8] extcall 89 .............................. return 1
  [ 10] ret
end

on userPasswordResult me, tResult
  [  0] getparam 1 .............................. <tResult>
  [  2] pusharglist 1 ........................... <tResult>
  [  4] extcall 100 ............................. <voidp(tResult)>
  [  6] jmpifz [ 23] ............................ if voidp(tResult) then
  [  9] getparam 0 .............................. <me>
  [ 11] pushcons 24 ............................. <"Invalid password result!">
  [ 13] pushsymb 13 ............................. <#userPasswordResult>
  [ 15] pusharglist 3 ........................... <me, "Invalid password result!", #userPasswordResult>
  [ 17] extcall 85 .............................. <error(me, "Invalid password result!", #userPasswordResult)>
  [ 19] pusharglistnoret 1 ...................... <error(me, "Invalid password result!", #userPasswordResult)>
  [ 21] extcall 89 .............................. return error(me, "Invalid password result!", #userPasswordResult)
  [ 23] getparam 1 .............................. <tResult>
  [ 25] peek 0 .................................. case tResult of
  [ 27] pushzero ................................ <0>
  [ 28] eq
  [ 29] jmpifz [ 43] ............................ (case) 0:
  [ 32] pushint8 1 .............................. <1>
  [ 34] setprop 82 .............................. pPasswordChecked = 1
  [ 36] pushcons 0 .............................. <EMPTY>
  [ 38] setprop 80 .............................. pPasswordErrors = EMPTY
  [ 40] jmp [176]
  [ 43] peek 0
  [ 45] pushint8 1 .............................. <1>
  [ 47] eq
  [ 48] jmpifz [ 68] ............................ (case) 1:
  [ 51] pushzero ................................ <0>
  [ 52] setprop 82 .............................. pPasswordChecked = 0
  [ 54] pushcons 25 ............................. <"Alert_YourPasswordIsTooShort">
  [ 56] pusharglist 1 ........................... <"Alert_YourPasswordIsTooShort">
  [ 58] extcall 74 .............................. <getText("Alert_YourPasswordIsTooShort")>
  [ 60] pushcons 26 ............................. <RETURN>
  [ 62] joinstr ................................. <getText("Alert_YourPasswordIsTooShort") & RETURN>
  [ 63] setprop 80 .............................. pPasswordErrors = getText("Alert_YourPasswordIsTooShort") & RETURN
  [ 65] jmp [176]
  [ 68] peek 0
  [ 70] pushint8 2 .............................. <2>
  [ 72] eq
  [ 73] jmpifz [ 93] ............................ (case) 2:
  [ 76] pushzero ................................ <0>
  [ 77] setprop 82 .............................. pPasswordChecked = 0
  [ 79] pushcons 27 ............................. <"alert_tooLongPW">
  [ 81] pusharglist 1 ........................... <"alert_tooLongPW">
  [ 83] extcall 74 .............................. <getText("alert_tooLongPW")>
  [ 85] pushcons 26 ............................. <RETURN>
  [ 87] joinstr ................................. <getText("alert_tooLongPW") & RETURN>
  [ 88] setprop 80 .............................. pPasswordErrors = getText("alert_tooLongPW") & RETURN
  [ 90] jmp [176]
  [ 93] peek 0
  [ 95] pushint8 3 .............................. <3>
  [ 97] eq
  [ 98] jmpifz [129] ............................ (case) 3:
  [101] pushzero ................................ <0>
  [102] setprop 82 .............................. pPasswordChecked = 0
  [104] pushcons 8 .............................. <"permitted.password.chars">
  [106] pusharglist 1 ........................... <"permitted.password.chars">
  [108] extcall 88 .............................. <getVariable("permitted.password.chars")>
  [110] setlocal 0 .............................. tValidKeys = getVariable("permitted.password.chars")
  [112] pushcons 28 ............................. <"reg_use_allowed_chars">
  [114] pusharglist 1 ........................... <"reg_use_allowed_chars">
  [116] extcall 74 .............................. <getText("reg_use_allowed_chars")>
  [118] getlocal 0 .............................. <tValidKeys>
  [120] joinpadstr .............................. <getText("reg_use_allowed_chars") && tValidKeys>
  [121] pushcons 26 ............................. <RETURN>
  [123] joinstr ................................. <getText("reg_use_allowed_chars") && tValidKeys & RETURN>
  [124] setprop 80 .............................. pPasswordErrors = getText("reg_use_allowed_chars") && tValidKeys & RETURN
  [126] jmp [176]
  [129] peek 0
  [131] pushint8 4 .............................. <4>
  [133] eq
  [134] jmpifz [154] ............................ (case) 4:
  [137] pushzero ................................ <0>
  [138] setprop 82 .............................. pPasswordChecked = 0
  [140] pushcons 29 ............................. <"reg_passwordContainsNoNumber">
  [142] pusharglist 1 ........................... <"reg_passwordContainsNoNumber">
  [144] extcall 74 .............................. <getText("reg_passwordContainsNoNumber")>
  [146] pushcons 26 ............................. <RETURN>
  [148] joinstr ................................. <getText("reg_passwordContainsNoNumber") & RETURN>
  [149] setprop 80 .............................. pPasswordErrors = getText("reg_passwordContainsNoNumber") & RETURN
  [151] jmp [176]
  [154] peek 0
  [156] pushint8 5 .............................. <5>
  [158] eq
  [159] jmpifz [176] ............................ (case) 5:
  [162] pushzero ................................ <0>
  [163] setprop 82 .............................. pPasswordChecked = 0
  [165] pushcons 30 ............................. <"reg_nameAndPassTooSimilar">
  [167] pusharglist 1 ........................... <"reg_nameAndPassTooSimilar">
  [169] extcall 74 .............................. <getText("reg_nameAndPassTooSimilar")>
  [171] pushcons 26 ............................. <RETURN>
  [173] joinstr ................................. <getText("reg_nameAndPassTooSimilar") & RETURN>
  [174] setprop 80 .............................. pPasswordErrors = getText("reg_nameAndPassTooSimilar") & RETURN
  [176] pop 1 ................................... end case
  [178] getprop 81 .............................. <pUpdatingPassword>
  [180] jmpifz [383] ............................ if pUpdatingPassword then / else
  [183] getparam 1 .............................. <tResult>
  [185] pushzero ................................ <0>
  [186] eq ...................................... <tResult = 0>
  [187] jmpifz [310] ............................ if tResult = 0 then / else
  [190] getprop 83 .............................. <pUpdatePropsToServer>
  [192] pushsymb 124 ............................ <#day>
  [194] pusharglist 2 ........................... <pUpdatePropsToServer, #day>
  [196] objcall 105 ............................. <pUpdatePropsToServer[#day]>
  [198] setlocal 1 .............................. tDay = pUpdatePropsToServer[#day]
  [200] getprop 83 .............................. <pUpdatePropsToServer>
  [202] pushsymb 125 ............................ <#month>
  [204] pusharglist 2 ........................... <pUpdatePropsToServer, #month>
  [206] objcall 105 ............................. <pUpdatePropsToServer[#month]>
  [208] setlocal 2 .............................. tMonth = pUpdatePropsToServer[#month]
  [210] getprop 83 .............................. <pUpdatePropsToServer>
  [212] pushsymb 126 ............................ <#year>
  [214] pusharglist 2 ........................... <pUpdatePropsToServer, #year>
  [216] objcall 105 ............................. <pUpdatePropsToServer[#year]>
  [218] setlocal 3 .............................. tYear = pUpdatePropsToServer[#year]
  [220] getlocal 1 .............................. <tDay>
  [222] pushint8 10 ............................. <10>
  [224] lt ...................................... <tDay < 10>
  [225] jmpifz [235] ............................ if tDay < 10 then
  [228] pushcons 31 ............................. <"0">
  [230] getlocal 1 .............................. <tDay>
  [232] joinstr ................................. <"0" & tDay>
  [233] setlocal 1 .............................. tDay = "0" & tDay
  [235] getlocal 2 .............................. <tMonth>
  [237] pushint8 10 ............................. <10>
  [239] lt ...................................... <tMonth < 10>
  [240] jmpifz [250] ............................ if tMonth < 10 then
  [243] pushcons 31 ............................. <"0">
  [245] getlocal 2 .............................. <tMonth>
  [247] joinstr ................................. <"0" & tMonth>
  [248] setlocal 2 .............................. tMonth = "0" & tMonth
  [250] getlocal 1 .............................. <tDay>
  [252] pushcons 32 ............................. <".">
  [254] joinstr ................................. <tDay & ".">
  [255] getlocal 2 .............................. <tMonth>
  [257] joinstr ................................. <tDay & "." & tMonth>
  [258] pushcons 32 ............................. <".">
  [260] joinstr ................................. <tDay & "." & tMonth & ".">
  [261] getlocal 3 .............................. <tYear>
  [263] joinstr ................................. <tDay & "." & tMonth & "." & tYear>
  [264] setlocal 4 .............................. tDOB = tDay & "." & tMonth & "." & tYear
  [266] pushcons 33 ............................. <"oldpassword">
  [268] getprop 83 .............................. <pUpdatePropsToServer>
  [270] pushsymb 127 ............................ <#currPwd>
  [272] pusharglist 2 ........................... <pUpdatePropsToServer, #currPwd>
  [274] objcall 105 ............................. <pUpdatePropsToServer[#currPwd]>
  [276] pushcons 34 ............................. <"birthday">
  [278] getlocal 4 .............................. <tDOB>
  [280] pushcons 35 ............................. <"password">
  [282] getprop 83 .............................. <pUpdatePropsToServer>
  [284] pushsymb 128 ............................ <#newPwd>
  [286] pusharglist 2 ........................... <pUpdatePropsToServer, #newPwd>
  [288] objcall 105 ............................. <pUpdatePropsToServer[#newPwd]>
  [290] pusharglist 6 ........................... <["oldpassword": pUpdatePropsToServer[#currPwd], "birthday": tDOB, "password": pUpdatePropsToServer[#newPwd]]>
  [292] pushproplist ............................ <["oldpassword": pUpdatePropsToServer[#currPwd], "birthday": tDOB, "password": pUpdatePropsToServer[#newPwd]]>
  [293] setlocal 5 .............................. tProp = ["oldpassword": pUpdatePropsToServer[#currPwd], "birthday": tDOB, "password": pUpdatePropsToServer[#newPwd]]
  [295] getparam 0 .............................. <me>
  [297] pusharglist 1 ........................... <me>
  [299] objcall 114 ............................. <me.getComponent()>
  [301] getlocal 5 .............................. <tProp>
  [303] pusharglistnoret 2 ...................... <me.getComponent(), tProp>
  [305] objcall 129 ............................. me.getComponent().sendUpdateAccountMsg(tProp)
  [307] jmp [380]
  [310] getprop 77 .............................. <pVerifyChangeWndID>
  [312] pusharglist 1 ........................... <pVerifyChangeWndID>
  [314] extcall 130 ............................. <getWindow(pVerifyChangeWndID)>
  [316] setlocal 6 .............................. tWndObj = getWindow(pVerifyChangeWndID)
  [318] getlocal 6 .............................. <tWndObj>
  [320] pusharglistnoret 1 ...................... <tWndObj>
  [322] objcall 131 ............................. tWndObj.unmerge()
  [324] getlocal 6 .............................. <tWndObj>
  [326] getprop 78 .............................. <pLastWindow>
  [328] pusharglistnoret 2 ...................... <tWndObj, pLastWindow>
  [330] objcall 132 ............................. tWndObj.merge(pLastWindow)
  [332] getlocal 6 .............................. <tWndObj>
  [334] pushcons 36 ............................. <"updateaccount_topic">
  [336] pusharglist 2 ........................... <tWndObj, "updateaccount_topic">
  [338] objcall 133 ............................. <tWndObj.getElement("updateaccount_topic")>
  [340] getprop 80 .............................. <pPasswordErrors>
  [342] pusharglist 1 ........................... <pPasswordErrors>
  [344] extcall 74 .............................. <getText(pPasswordErrors)>
  [346] pusharglistnoret 2 ...................... <tWndObj.getElement("updateaccount_topic"), getText(pPasswordErrors)>
  [348] objcall 134 ............................. tWndObj.getElement("updateaccount_topic").setText(getText(pPasswordErrors))
  [350] getlocal 6 .............................. <tWndObj>
  [352] pushcons 37 ............................. <"monthDrop">
  [354] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [356] objcall 135 ............................. <tWndObj.elementExists("monthDrop")>
  [358] jmpifz [374] ............................ if tWndObj.elementExists("monthDrop") then
  [361] getlocal 6 .............................. <tWndObj>
  [363] pushcons 37 ............................. <"monthDrop">
  [365] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [367] objcall 133 ............................. <tWndObj.getElement("monthDrop")>
  [369] pushzero ................................ <0>
  [370] pusharglistnoret 2 ...................... <tWndObj.getElement("monthDrop"), 0>
  [372] objcall 136 ............................. tWndObj.getElement("monthDrop").setOrdering(0)
  [374] getparam 0 .............................. <me>
  [376] pusharglistnoret 1 ...................... <me>
  [378] objcall 62 .............................. me.highlightVerifyTopic()
  [380] jmp [391]
  [383] getparam 0 .............................. <me>
  [385] pushint8 1 .............................. <1>
  [387] pusharglistnoret 2 ...................... <me, 1>
  [389] objcall 58 .............................. me.changePage(1)
  [391] pushint8 1 .............................. <1>
  [393] pusharglistnoret 1 ...................... <1>
  [395] extcall 89 .............................. return 1
  [397] ret
end

on userEmailUnacceptable me
  [  0] pushzero ................................ <0>
  [  1] setprop 123 ............................. pEmailChecked = 0
  [  3] getprop 75 .............................. <pOpenWindow>
  [  5] peek 0 .................................. case pOpenWindow of
  [  7] pushcons 38 ............................. <"reg_info_update.window">
  [  9] eq
  [ 10] jmpifz [ 19] ............................ (case) "reg_info_update.window":
  [ 13] getprop 77 .............................. <pVerifyChangeWndID>
  [ 15] pusharglistnoret 1 ...................... <pVerifyChangeWndID>
  [ 17] extcall 94 .............................. removeWindow(pVerifyChangeWndID)
  [ 19] pop 1
  [ 21] pushsymb 119 ............................ <#alert>
  [ 23] pushsymb 120 ............................ <#msg>
  [ 25] pushcons 39 ............................. <"reg_verification_invalidEmail">
  [ 27] pushsymb 121 ............................ <#id>
  [ 29] pushcons 40 ............................. <"emailnogood">
  [ 31] pushsymb 122 ............................ <#modal>
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglist 6 ........................... <[#msg: "reg_verification_invalidEmail", #id: "emailnogood", #modal: 1]>
  [ 37] pushproplist ............................ <[#msg: "reg_verification_invalidEmail", #id: "emailnogood", #modal: 1]>
  [ 38] pusharglistnoret 2 ...................... <#alert, [#msg: "reg_verification_invalidEmail", #id: "emailnogood", #modal: 1]>
  [ 40] extcall 118 ............................. executeMessage(#alert, [#msg: "reg_verification_invalidEmail", #id: "emailnogood", #modal: 1])
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglistnoret 1 ...................... <1>
  [ 46] extcall 89 .............................. return 1
  [ 48] ret
end

on totpEmailVerificationStatus me, tFlag
  [  0] getprop 112 ............................. <pmode>
  [  2] pushcons 41 ............................. <"topt_verification">
  [  4] eq ...................................... <pmode = "topt_verification">
  [  5] jmpifz [ 38] ............................ if pmode = "topt_verification" then
  [  8] getparam 1 .............................. <tFlag>
  [ 10] jmpifz [ 24] ............................ if tFlag then / else
  [ 13] getparam 0 .............................. <me>
  [ 15] pushint8 1 .............................. <1>
  [ 17] pusharglistnoret 2 ...................... <me, 1>
  [ 19] objcall 58 .............................. me.changePage(1)
  [ 21] jmp [ 38]
  [ 24] getparam 0 .............................. <me>
  [ 26] pusharglistnoret 1 ...................... <me>
  [ 28] objcall 53 .............................. me.totpVerificationNotNeeded()
  [ 30] getparam 0 .............................. <me>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pusharglistnoret 2 ...................... <me, 1>
  [ 36] objcall 58 .............................. me.changePage(1)
  [ 38] ret
end

on parentEmailQueryStatus me, tFlag
  [  0] getprop 112 ............................. <pmode>
  [  2] pushcons 42 ............................. <"parent_email">
  [  4] eq ...................................... <pmode = "parent_email">
  [  5] getprop 112 ............................. <pmode>
  [  7] pushcons 43 ............................. <"parent_email_strong_coppa">
  [  9] eq ...................................... <pmode = "parent_email_strong_coppa">
  [ 10] or ...................................... <(pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [ 11] jmpifz [ 56] ............................ if (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") then / else
  [ 14] getparam 1 .............................. <tFlag>
  [ 16] not ..................................... <not tFlag>
  [ 17] jmpifz [ 39] ............................ if not tFlag then / else
  [ 20] getprop 75 .............................. <pOpenWindow>
  [ 22] pushcons 12 ............................. <"reg_loading.window">
  [ 24] eq ...................................... <pOpenWindow = "reg_loading.window">
  [ 25] jmpifz [ 36] ............................ if pOpenWindow = "reg_loading.window" then
  [ 28] getparam 0 .............................. <me>
  [ 30] pushint8 1 .............................. <1>
  [ 32] pusharglistnoret 2 ...................... <me, 1>
  [ 34] objcall 58 .............................. me.changePage(1)
  [ 36] jmp [ 53]
  [ 39] getparam 0 .............................. <me>
  [ 41] pusharglistnoret 1 ...................... <me>
  [ 43] objcall 52 .............................. me.parentEmailNotNeeded()
  [ 45] getparam 0 .............................. <me>
  [ 47] pushint8 1 .............................. <1>
  [ 49] pusharglistnoret 2 ...................... <me, 1>
  [ 51] objcall 58 .............................. me.changePage(1)
  [ 53] jmp [ 70]
  [ 56] getparam 1 .............................. <tFlag>
  [ 58] pushint8 1 .............................. <1>
  [ 60] eq ...................................... <tFlag = 1>
  [ 61] jmpifz [ 70] ............................ if tFlag = 1 then
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglistnoret 1 ...................... <me>
  [ 68] objcall 52 .............................. me.parentEmailNotNeeded()
  [ 70] ret
end

on parentEmailOk me
  [  0] getprop 146 ............................. <pRegProcess>
  [  2] getobjprop 102 .......................... <pRegProcess.ilk>
  [  4] pushsymb 103 ............................ <#list>
  [  6] eq ...................................... <pRegProcess.ilk = #list>
  [  7] jmpifz [166] ............................ if pRegProcess.ilk = #list then
  [ 10] getprop 112 ............................. <pmode>
  [ 12] pushcons 42 ............................. <"parent_email">
  [ 14] eq ...................................... <pmode = "parent_email">
  [ 15] getprop 112 ............................. <pmode>
  [ 17] pushcons 43 ............................. <"parent_email_strong_coppa">
  [ 19] eq ...................................... <pmode = "parent_email_strong_coppa">
  [ 20] or ...................................... <(pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [ 21] jmpifz [ 61] ............................ if (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") then / else
  [ 24] getprop 146 ............................. <pRegProcess>
  [ 26] pushcons 44 ............................. <"reg_parent_email">
  [ 28] pusharglist 2 ........................... <pRegProcess, "reg_parent_email">
  [ 30] objcall 147 ............................. <pRegProcess.findPos("reg_parent_email")>
  [ 32] setlocal 0 .............................. tPos = pRegProcess.findPos("reg_parent_email")
  [ 34] getprop 146 ............................. <pRegProcess>
  [ 36] getlocal 0 .............................. <tPos>
  [ 38] pushint8 1 .............................. <1>
  [ 40] add ..................................... <tPos + 1>
  [ 41] pusharglist 2 ........................... <pRegProcess, tPos + 1>
  [ 43] objcall 105 ............................. <pRegProcess[tPos + 1]>
  [ 45] setlocal 1 .............................. tNextPage = pRegProcess[tPos + 1]
  [ 47] getparam 0 .............................. <me>
  [ 49] getlocal 1 .............................. <tNextPage>
  [ 51] pushcons 16 ............................. <".window">
  [ 53] joinstr ................................. <tNextPage & ".window">
  [ 54] pusharglistnoret 2 ...................... <me, tNextPage & ".window">
  [ 56] objcall 58 .............................. me.changePage(tNextPage & ".window")
  [ 58] jmp [166]
  [ 61] getprop 76 .............................. <pRegProcessLocation>
  [ 63] getprop 146 ............................. <pRegProcess>
  [ 65] getobjprop 104 .......................... <pRegProcess.count>
  [ 67] eq ...................................... <pRegProcessLocation = pRegProcess.count>
  [ 68] jmpifz [132] ............................ if pRegProcessLocation = pRegProcess.count then / else
  [ 71] pushsymb 109 ............................ <#session>
  [ 73] pusharglist 1 ........................... <#session>
  [ 75] extcall 110 ............................. <getObject(#session)>
  [ 77] pushcons 45 ............................. <"user_figure">
  [ 79] getprop 70 .............................. <pPropsToServer>
  [ 81] pushcons 46 ............................. <"figure">
  [ 83] pusharglist 2 ........................... <pPropsToServer, "figure">
  [ 85] objcall 105 ............................. <pPropsToServer["figure"]>
  [ 87] pusharglist 1 ........................... <pPropsToServer["figure"]>
  [ 89] objcall 148 ............................. <pPropsToServer["figure"].duplicate()>
  [ 91] pusharglistnoret 3 ...................... <getObject(#session), "user_figure", pPropsToServer["figure"].duplicate()>
  [ 93] objcall 111 ............................. getObject(#session).set("user_figure", pPropsToServer["figure"].duplicate())
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglist 1 ........................... <me>
  [ 99] objcall 114 ............................. <me.getComponent()>
  [101] getprop 70 .............................. <pPropsToServer>
  [103] pusharglistnoret 2 ...................... <me.getComponent(), pPropsToServer>
  [105] objcall 149 ............................. me.getComponent().sendFigureUpdateToServer(pPropsToServer)
  [107] getparam 0 .............................. <me>
  [109] pusharglist 1 ........................... <me>
  [111] objcall 114 ............................. <me.getComponent()>
  [113] pushcons 47 ............................. <"start">
  [115] pusharglistnoret 2 ...................... <me.getComponent(), "start">
  [117] objcall 150 ............................. me.getComponent().updateState("start")
  [119] getparam 0 .............................. <me>
  [121] pusharglist 1 ........................... <me>
  [123] objcall 5 ............................... <me.closeFigureCreator()>
  [125] pusharglistnoret 1 ...................... <me.closeFigureCreator()>
  [127] extcall 89 .............................. return me.closeFigureCreator()
  [129] jmp [166]
  [132] getprop 146 ............................. <pRegProcess>
  [134] pushcons 44 ............................. <"reg_parent_email">
  [136] pusharglist 2 ........................... <pRegProcess, "reg_parent_email">
  [138] objcall 147 ............................. <pRegProcess.findPos("reg_parent_email")>
  [140] setlocal 0 .............................. tPos = pRegProcess.findPos("reg_parent_email")
  [142] getprop 146 ............................. <pRegProcess>
  [144] getlocal 0 .............................. <tPos>
  [146] pushint8 1 .............................. <1>
  [148] add ..................................... <tPos + 1>
  [149] pusharglist 2 ........................... <pRegProcess, tPos + 1>
  [151] objcall 105 ............................. <pRegProcess[tPos + 1]>
  [153] setlocal 1 .............................. tNextPage = pRegProcess[tPos + 1]
  [155] getparam 0 .............................. <me>
  [157] getlocal 1 .............................. <tNextPage>
  [159] pushcons 16 ............................. <".window">
  [161] joinstr ................................. <tNextPage & ".window">
  [162] pusharglistnoret 2 ...................... <me, tNextPage & ".window">
  [164] objcall 58 .............................. me.changePage(tNextPage & ".window")
  [166] ret
end

on parentEmailIncorrect me
  [  0] getprop 75 .............................. <pOpenWindow>
  [  2] pushcons 48 ............................. <"reg_parent_email.window">
  [  4] nteq .................................... <pOpenWindow <> "reg_parent_email.window">
  [  5] jmpifz [ 16] ............................ if pOpenWindow <> "reg_parent_email.window" then
  [  8] getparam 0 .............................. <me>
  [ 10] pushcons 48 ............................. <"reg_parent_email.window">
  [ 12] pusharglistnoret 2 ...................... <me, "reg_parent_email.window">
  [ 14] objcall 58 .............................. me.changePage("reg_parent_email.window")
  [ 16] pushsymb 119 ............................ <#alert>
  [ 18] pushsymb 120 ............................ <#msg>
  [ 20] pushcons 49 ............................. <"alert_reg_parent_email">
  [ 22] pushsymb 121 ............................ <#id>
  [ 24] pushcons 50 ............................. <"parentemailincorrect">
  [ 26] pushsymb 122 ............................ <#modal>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglist 6 ........................... <[#msg: "alert_reg_parent_email", #id: "parentemailincorrect", #modal: 1]>
  [ 32] pushproplist ............................ <[#msg: "alert_reg_parent_email", #id: "parentemailincorrect", #modal: 1]>
  [ 33] pusharglistnoret 2 ...................... <#alert, [#msg: "alert_reg_parent_email", #id: "parentemailincorrect", #modal: 1]>
  [ 35] extcall 118 ............................. executeMessage(#alert, [#msg: "alert_reg_parent_email", #id: "parentemailincorrect", #modal: 1])
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 89 .............................. return 0
  [ 42] ret
end

on openPasswordUpdate me, tForced, tMsg
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 153 ............................ <#password>
  [  4] getparam 1 .............................. <tForced>
  [  6] getparam 2 .............................. <tMsg>
  [  8] pusharglistnoret 4 ...................... <me, #password, tForced, tMsg>
  [ 10] objcall 21 .............................. me.openPwdEmailUpdate(#password, tForced, tMsg)
  [ 12] ret
end

on openEmailUpdate me, tForced, tMsg
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 156 ............................ <#email>
  [  4] getparam 1 .............................. <tForced>
  [  6] getparam 2 .............................. <tMsg>
  [  8] pusharglistnoret 4 ...................... <me, #email, tForced, tMsg>
  [ 10] objcall 21 .............................. me.openPwdEmailUpdate(#email, tForced, tMsg)
  [ 12] ret
end

on openPwdEmailUpdate me, ttype, tForced, tMsg
  [  0] getparam 2 .............................. <tForced>
  [  2] jmpifz [  9] ............................ if tForced then
  [  5] pushint8 1 .............................. <1>
  [  7] setprop 79 .............................. pPwdEmailUpdateForced = 1
  [  9] getparam 1 .............................. <ttype>
  [ 11] pushsymb 153 ............................ <#password>
  [ 13] eq ...................................... <ttype = #password>
  [ 14] jmpifz [ 32] ............................ if ttype = #password then / else
  [ 17] pushcons 51 ............................. <"reg_changePassword">
  [ 19] pusharglist 1 ........................... <"reg_changePassword">
  [ 21] extcall 74 .............................. <getText("reg_changePassword")>
  [ 23] setlocal 0 .............................. tWindowTitleStr = getText("reg_changePassword")
  [ 25] pushcons 52 ............................. <"reg_update_password.window">
  [ 27] setlocal 1 .............................. tWndType = "reg_update_password.window"
  [ 29] jmp [ 44]
  [ 32] pushcons 53 ............................. <"reg_changeEmail">
  [ 34] pusharglist 1 ........................... <"reg_changeEmail">
  [ 36] extcall 74 .............................. <getText("reg_changeEmail")>
  [ 38] setlocal 0 .............................. tWindowTitleStr = getText("reg_changeEmail")
  [ 40] pushcons 54 ............................. <"reg_update_email.window">
  [ 42] setlocal 1 .............................. tWndType = "reg_update_email.window"
  [ 44] getprop 77 .............................. <pVerifyChangeWndID>
  [ 46] pusharglist 0 ........................... <>
  [ 48] extcall 92 .............................. <VOID>
  [ 50] pushzero ................................ <0>
  [ 51] pushzero ................................ <0>
  [ 52] pushsymb 122 ............................ <#modal>
  [ 54] pusharglist 5 ........................... <pVerifyChangeWndID, VOID, 0, 0, #modal>
  [ 56] extcall 157 ............................. <createWindow(pVerifyChangeWndID, VOID, 0, 0, #modal)>
  [ 58] not ..................................... <not createWindow(pVerifyChangeWndID, VOID, 0, 0, #modal)>
  [ 59] jmpifz [ 67] ............................ if not createWindow(pVerifyChangeWndID, VOID, 0, 0, #modal) then
  [ 62] pushzero ................................ <0>
  [ 63] pusharglistnoret 1 ...................... <0>
  [ 65] extcall 89 .............................. return 0
  [ 67] pusharglist 0 ........................... <[:]>
  [ 69] pushproplist ............................ <[:]>
  [ 70] setprop 69 .............................. pTempPassword = [:]
  [ 72] getprop 77 .............................. <pVerifyChangeWndID>
  [ 74] pusharglist 1 ........................... <pVerifyChangeWndID>
  [ 76] extcall 130 ............................. <getWindow(pVerifyChangeWndID)>
  [ 78] setlocal 2 .............................. tWinObj = getWindow(pVerifyChangeWndID)
  [ 80] getlocal 2 .............................. <tWinObj>
  [ 82] pushsymb 158 ............................ <#title>
  [ 84] getlocal 0 .............................. <tWindowTitleStr>
  [ 86] pusharglistnoret 3 ...................... <tWinObj, #title, tWindowTitleStr>
  [ 88] objcall 159 ............................. tWinObj.setProperty(#title, tWindowTitleStr)
  [ 90] getlocal 2 .............................. <tWinObj>
  [ 92] pushcons 55 ............................. <"habbo_simple.window">
  [ 94] pusharglistnoret 2 ...................... <tWinObj, "habbo_simple.window">
  [ 96] objcall 132 ............................. tWinObj.merge("habbo_simple.window")
  [ 98] getlocal 2 .............................. <tWinObj>
  [100] getlocal 1 .............................. <tWndType>
  [102] pusharglistnoret 2 ...................... <tWinObj, tWndType>
  [104] objcall 132 ............................. tWinObj.merge(tWndType)
  [106] getlocal 2 .............................. <tWinObj>
  [108] pusharglistnoret 1 ...................... <tWinObj>
  [110] objcall 160 ............................. tWinObj.center()
  [112] getlocal 2 .............................. <tWinObj>
  [114] pushcons 37 ............................. <"monthDrop">
  [116] pusharglist 2 ........................... <tWinObj, "monthDrop">
  [118] objcall 135 ............................. <tWinObj.elementExists("monthDrop")>
  [120] jmpifz [136] ............................ if tWinObj.elementExists("monthDrop") then
  [123] getlocal 2 .............................. <tWinObj>
  [125] pushcons 37 ............................. <"monthDrop">
  [127] pusharglist 2 ........................... <tWinObj, "monthDrop">
  [129] objcall 133 ............................. <tWinObj.getElement("monthDrop")>
  [131] pushzero ................................ <0>
  [132] pusharglistnoret 2 ...................... <tWinObj.getElement("monthDrop"), 0>
  [134] objcall 136 ............................. tWinObj.getElement("monthDrop").setOrdering(0)
  [136] getprop 79 .............................. <pPwdEmailUpdateForced>
  [138] getlocal 2 .............................. <tWinObj>
  [140] pushcons 56 ............................. <"update_cancel_button">
  [142] pusharglist 2 ........................... <tWinObj, "update_cancel_button">
  [144] objcall 135 ............................. <tWinObj.elementExists("update_cancel_button")>
  [146] and ..................................... <pPwdEmailUpdateForced and tWinObj.elementExists("update_cancel_button")>
  [147] jmpifz [162] ............................ if pPwdEmailUpdateForced and tWinObj.elementExists("update_cancel_button") then
  [150] getlocal 2 .............................. <tWinObj>
  [152] pushcons 56 ............................. <"update_cancel_button">
  [154] pusharglist 2 ........................... <tWinObj, "update_cancel_button">
  [156] objcall 133 ............................. <tWinObj.getElement("update_cancel_button")>
  [158] pusharglistnoret 1 ...................... <tWinObj.getElement("update_cancel_button")>
  [160] objcall 161 ............................. tWinObj.getElement("update_cancel_button").deactivate()
  [162] getparam 3 .............................. <tMsg>
  [164] pusharglist 1 ........................... <tMsg>
  [166] extcall 100 ............................. <voidp(tMsg)>
  [168] not ..................................... <not voidp(tMsg)>
  [169] getlocal 2 .............................. <tWinObj>
  [171] pushcons 36 ............................. <"updateaccount_topic">
  [173] pusharglist 2 ........................... <tWinObj, "updateaccount_topic">
  [175] objcall 135 ............................. <tWinObj.elementExists("updateaccount_topic")>
  [177] and ..................................... <not voidp(tMsg) and tWinObj.elementExists("updateaccount_topic")>
  [178] jmpifz [195] ............................ if not voidp(tMsg) and tWinObj.elementExists("updateaccount_topic") then
  [181] getlocal 2 .............................. <tWinObj>
  [183] pushcons 36 ............................. <"updateaccount_topic">
  [185] pusharglist 2 ........................... <tWinObj, "updateaccount_topic">
  [187] objcall 133 ............................. <tWinObj.getElement("updateaccount_topic")>
  [189] getparam 3 .............................. <tMsg>
  [191] pusharglistnoret 2 ...................... <tWinObj.getElement("updateaccount_topic"), tMsg>
  [193] objcall 134 ............................. tWinObj.getElement("updateaccount_topic").setText(tMsg)
  [195] getlocal 2 .............................. <tWinObj>
  [197] pushsymb 68 ............................. <#eventProcVerifyWindow>
  [199] getparam 0 .............................. <me>
  [201] pusharglist 1 ........................... <me>
  [203] objcall 162 ............................. <me.getID()>
  [205] pushsymb 0 .............................. <#mouseUp>
  [207] pusharglistnoret 4 ...................... <tWinObj, #eventProcVerifyWindow, me.getID(), #mouseUp>
  [209] objcall 163 ............................. tWinObj.registerProcedure(#eventProcVerifyWindow, me.getID(), #mouseUp)
  [211] getlocal 2 .............................. <tWinObj>
  [213] pushsymb 68 ............................. <#eventProcVerifyWindow>
  [215] getparam 0 .............................. <me>
  [217] pusharglist 1 ........................... <me>
  [219] objcall 162 ............................. <me.getID()>
  [221] pushsymb 164 ............................ <#keyDown>
  [223] pusharglistnoret 4 ...................... <tWinObj, #eventProcVerifyWindow, me.getID(), #keyDown>
  [225] objcall 163 ............................. tWinObj.registerProcedure(#eventProcVerifyWindow, me.getID(), #keyDown)
  [227] ret
end

on openGdprRequestWindow me
  [  0] pushcons 57 ............................. <"reg_gdpr_request">
  [  2] pusharglist 1 ........................... <"reg_gdpr_request">
  [  4] extcall 74 .............................. <getText("reg_gdpr_request")>
  [  6] setlocal 0 .............................. tWindowTitleStr = getText("reg_gdpr_request")
  [  8] pushcons 58 ............................. <"reg_gdpr_requests.window">
  [ 10] setlocal 1 .............................. tWndType = "reg_gdpr_requests.window"
  [ 12] getprop 77 .............................. <pVerifyChangeWndID>
  [ 14] pusharglist 0 ........................... <>
  [ 16] extcall 92 .............................. <VOID>
  [ 18] pushzero ................................ <0>
  [ 19] pushzero ................................ <0>
  [ 20] pushsymb 122 ............................ <#modal>
  [ 22] pusharglist 5 ........................... <pVerifyChangeWndID, VOID, 0, 0, #modal>
  [ 24] extcall 157 ............................. <createWindow(pVerifyChangeWndID, VOID, 0, 0, #modal)>
  [ 26] not ..................................... <not createWindow(pVerifyChangeWndID, VOID, 0, 0, #modal)>
  [ 27] jmpifz [ 35] ............................ if not createWindow(pVerifyChangeWndID, VOID, 0, 0, #modal) then
  [ 30] pushzero ................................ <0>
  [ 31] pusharglistnoret 1 ...................... <0>
  [ 33] extcall 89 .............................. return 0
  [ 35] getprop 77 .............................. <pVerifyChangeWndID>
  [ 37] pusharglist 1 ........................... <pVerifyChangeWndID>
  [ 39] extcall 130 ............................. <getWindow(pVerifyChangeWndID)>
  [ 41] setlocal 2 .............................. tWinObj = getWindow(pVerifyChangeWndID)
  [ 43] getlocal 2 .............................. <tWinObj>
  [ 45] pushsymb 158 ............................ <#title>
  [ 47] getlocal 0 .............................. <tWindowTitleStr>
  [ 49] pusharglistnoret 3 ...................... <tWinObj, #title, tWindowTitleStr>
  [ 51] objcall 159 ............................. tWinObj.setProperty(#title, tWindowTitleStr)
  [ 53] getlocal 2 .............................. <tWinObj>
  [ 55] pushcons 55 ............................. <"habbo_simple.window">
  [ 57] pusharglistnoret 2 ...................... <tWinObj, "habbo_simple.window">
  [ 59] objcall 132 ............................. tWinObj.merge("habbo_simple.window")
  [ 61] getlocal 2 .............................. <tWinObj>
  [ 63] getlocal 1 .............................. <tWndType>
  [ 65] pusharglistnoret 2 ...................... <tWinObj, tWndType>
  [ 67] objcall 132 ............................. tWinObj.merge(tWndType)
  [ 69] getlocal 2 .............................. <tWinObj>
  [ 71] pusharglistnoret 1 ...................... <tWinObj>
  [ 73] objcall 160 ............................. tWinObj.center()
  [ 75] getlocal 2 .............................. <tWinObj>
  [ 77] pushsymb 68 ............................. <#eventProcVerifyWindow>
  [ 79] getparam 0 .............................. <me>
  [ 81] pusharglist 1 ........................... <me>
  [ 83] objcall 162 ............................. <me.getID()>
  [ 85] pushsymb 0 .............................. <#mouseUp>
  [ 87] pusharglistnoret 4 ...................... <tWinObj, #eventProcVerifyWindow, me.getID(), #mouseUp>
  [ 89] objcall 163 ............................. tWinObj.registerProcedure(#eventProcVerifyWindow, me.getID(), #mouseUp)
  [ 91] getlocal 2 .............................. <tWinObj>
  [ 93] pushsymb 68 ............................. <#eventProcVerifyWindow>
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglist 1 ........................... <me>
  [ 99] objcall 162 ............................. <me.getID()>
  [101] pushsymb 164 ............................ <#keyDown>
  [103] pusharglistnoret 4 ...................... <tWinObj, #eventProcVerifyWindow, me.getID(), #keyDown>
  [105] objcall 163 ............................. tWinObj.registerProcedure(#eventProcVerifyWindow, me.getID(), #keyDown)
  [107] ret
end

on blinkLoading me
  [  0] getprop 73 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 130 ............................. <getWindow(pWindowTitle)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tWndObj = 0>
  [ 12] jmpifz [ 20] ............................ if tWndObj = 0 then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 89 .............................. return 0
  [ 20] getlocal 0 .............................. <tWndObj>
  [ 22] pushcons 59 ............................. <"reg_loading">
  [ 24] pusharglist 2 ........................... <tWndObj, "reg_loading">
  [ 26] objcall 133 ............................. <tWndObj.getElement("reg_loading")>
  [ 28] setlocal 1 .............................. tElem = tWndObj.getElement("reg_loading")
  [ 30] getlocal 1 .............................. <tElem>
  [ 32] pushzero ................................ <0>
  [ 33] eq ...................................... <tElem = 0>
  [ 34] jmpifz [ 42] ............................ if tElem = 0 then
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 89 .............................. return 0
  [ 42] getlocal 1 .............................. <tElem>
  [ 44] pushsymb 169 ............................ <#visible>
  [ 46] getlocal 1 .............................. <tElem>
  [ 48] pushsymb 169 ............................ <#visible>
  [ 50] pusharglist 2 ........................... <tElem, #visible>
  [ 52] objcall 170 ............................. <tElem.getProperty(#visible)>
  [ 54] not ..................................... <not tElem.getProperty(#visible)>
  [ 55] pusharglistnoret 3 ...................... <tElem, #visible, not tElem.getProperty(#visible)>
  [ 57] objcall 159 ............................. tElem.setProperty(#visible, not tElem.getProperty(#visible))
  [ 59] getparam 0 .............................. <me>
  [ 61] pushint16 500 ........................... <500>
  [ 64] pushsymb 23 ............................. <#blinkLoading>
  [ 66] pusharglistnoret 3 ...................... <me, 500, #blinkLoading>
  [ 68] objcall 171 ............................. me.delay(500, #blinkLoading)
  [ 70] pushint8 1 .............................. <1>
  [ 72] pusharglistnoret 1 ...................... <1>
  [ 74] extcall 89 .............................. return 1
  [ 76] ret
end

on defineModes me, tMode
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 70 .............................. pPropsToServer = [:]
  [  5] pusharglist 0 ........................... <[:]>
  [  7] pushproplist ............................ <[:]>
  [  8] setprop 69 .............................. pTempPassword = [:]
  [ 10] pusharglist 0 ........................... <[:]>
  [ 12] pushproplist ............................ <[:]>
  [ 13] setprop 71 .............................. pPartChangeButtons = [:]
  [ 15] pushcons 0 .............................. <EMPTY>
  [ 17] setprop 72 .............................. pLastNameCheck = EMPTY
  [ 19] getparam 1 .............................. <tMode>
  [ 21] setprop 112 ............................. pmode = tMode
  [ 23] getprop 112 ............................. <pmode>
  [ 25] pushcons 13 ............................. <".process">
  [ 27] joinstr ................................. <pmode & ".process">
  [ 28] pusharglist 1 ........................... <pmode & ".process">
  [ 30] extcall 101 ............................. <getVariableValue(pmode & ".process")>
  [ 32] setprop 146 ............................. pRegProcess = getVariableValue(pmode & ".process")
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglistnoret 1 ...................... <me>
  [ 38] objcall 25 .............................. me.NewFigureInformation()
  [ 40] getprop 112 ............................. <pmode>
  [ 42] pushcons 60 ............................. <"registration">
  [ 44] eq ...................................... <pmode = "registration">
  [ 45] getprop 112 ............................. <pmode>
  [ 47] pushcons 42 ............................. <"parent_email">
  [ 49] eq ...................................... <pmode = "parent_email">
  [ 50] or ...................................... <(pmode = "registration") or (pmode = "parent_email")>
  [ 51] getprop 112 ............................. <pmode>
  [ 53] pushcons 43 ............................. <"parent_email_strong_coppa">
  [ 55] eq ...................................... <pmode = "parent_email_strong_coppa">
  [ 56] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [ 57] getprop 112 ............................. <pmode>
  [ 59] pushcons 41 ............................. <"topt_verification">
  [ 61] eq ...................................... <pmode = "topt_verification">
  [ 62] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification")>
  [ 63] jmpifz [ 72] ............................ if (pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification") then / else
  [ 66] pushzero ................................ <0>
  [ 67] setprop 173 ............................. pNameChecked = 0
  [ 69] jmp [ 82]
  [ 72] pushint8 1 .............................. <1>
  [ 74] setprop 173 ............................. pNameChecked = 1
  [ 76] getparam 0 .............................. <me>
  [ 78] pusharglistnoret 1 ...................... <me>
  [ 80] objcall 27 .............................. me.getMyInformation()
  [ 82] ret
end

on NewFigureInformation me
  [  0] getprop 70 .............................. <pPropsToServer>
  [  2] pushcons 61 ............................. <"name">
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] pusharglistnoret 3 ...................... <pPropsToServer, "name", EMPTY>
  [  8] objcall 174 ............................. pPropsToServer["name"] = EMPTY
  [ 10] getprop 70 .............................. <pPropsToServer>
  [ 12] pushcons 46 ............................. <"figure">
  [ 14] pusharglist 0 ........................... <[:]>
  [ 16] pushproplist ............................ <[:]>
  [ 17] pusharglistnoret 3 ...................... <pPropsToServer, "figure", [:]>
  [ 19] objcall 174 ............................. pPropsToServer["figure"] = [:]
  [ 21] getprop 70 .............................. <pPropsToServer>
  [ 23] pushcons 62 ............................. <"sex">
  [ 25] pushcons 63 ............................. <"M">
  [ 27] pusharglistnoret 3 ...................... <pPropsToServer, "sex", "M">
  [ 29] objcall 174 ............................. pPropsToServer["sex"] = "M"
  [ 31] getprop 70 .............................. <pPropsToServer>
  [ 33] pushcons 64 ............................. <"customData">
  [ 35] pushcons 0 .............................. <EMPTY>
  [ 37] pusharglistnoret 3 ...................... <pPropsToServer, "customData", EMPTY>
  [ 39] objcall 174 ............................. pPropsToServer["customData"] = EMPTY
  [ 41] getprop 70 .............................. <pPropsToServer>
  [ 43] pushcons 65 ............................. <"email">
  [ 45] pushcons 0 .............................. <EMPTY>
  [ 47] pusharglistnoret 3 ...................... <pPropsToServer, "email", EMPTY>
  [ 49] objcall 174 ............................. pPropsToServer["email"] = EMPTY
  [ 51] getprop 70 .............................. <pPropsToServer>
  [ 53] pushcons 34 ............................. <"birthday">
  [ 55] pushcons 0 .............................. <EMPTY>
  [ 57] pusharglistnoret 3 ...................... <pPropsToServer, "birthday", EMPTY>
  [ 59] objcall 174 ............................. pPropsToServer["birthday"] = EMPTY
  [ 61] getprop 70 .............................. <pPropsToServer>
  [ 63] pushcons 66 ............................. <"has_read_agreement">
  [ 65] pushcons 31 ............................. <"0">
  [ 67] pusharglistnoret 3 ...................... <pPropsToServer, "has_read_agreement", "0">
  [ 69] objcall 174 ............................. pPropsToServer["has_read_agreement"] = "0"
  [ 71] getprop 70 .............................. <pPropsToServer>
  [ 73] pushcons 67 ............................. <"parentagree">
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglistnoret 3 ...................... <pPropsToServer, "parentagree", 1>
  [ 79] objcall 174 ............................. pPropsToServer["parentagree"] = 1
  [ 81] getprop 70 .............................. <pPropsToServer>
  [ 83] pushcons 68 ............................. <"onlineStatus">
  [ 85] pushint8 1 .............................. <1>
  [ 87] pusharglistnoret 3 ...................... <pPropsToServer, "onlineStatus", 1>
  [ 89] objcall 174 ............................. pPropsToServer["onlineStatus"] = 1
  [ 91] getprop 70 .............................. <pPropsToServer>
  [ 93] pushcons 69 ............................. <"publicProfileEnabled">
  [ 95] pushint8 1 .............................. <1>
  [ 97] pusharglistnoret 3 ...................... <pPropsToServer, "publicProfileEnabled", 1>
  [ 99] objcall 174 ............................. pPropsToServer["publicProfileEnabled"] = 1
  [101] getprop 70 .............................. <pPropsToServer>
  [103] pushcons 70 ............................. <"friendRequestsEnabled">
  [105] pushint8 1 .............................. <1>
  [107] pusharglistnoret 3 ...................... <pPropsToServer, "friendRequestsEnabled", 1>
  [109] objcall 174 ............................. pPropsToServer["friendRequestsEnabled"] = 1
  [111] getprop 70 .............................. <pPropsToServer>
  [113] pushcons 71 ............................. <"offlineMessagingEnabled">
  [115] pushint8 1 .............................. <1>
  [117] pusharglistnoret 3 ...................... <pPropsToServer, "offlineMessagingEnabled", 1>
  [119] objcall 174 ............................. pPropsToServer["offlineMessagingEnabled"] = 1
  [121] getprop 70 .............................. <pPropsToServer>
  [123] pushcons 72 ............................. <"totpCode">
  [125] pushcons 0 .............................. <EMPTY>
  [127] pusharglistnoret 3 ...................... <pPropsToServer, "totpCode", EMPTY>
  [129] objcall 174 ............................. pPropsToServer["totpCode"] = EMPTY
  [131] pushsymb 109 ............................ <#session>
  [133] pusharglist 1 ........................... <#session>
  [135] extcall 110 ............................. <getObject(#session)>
  [137] pushcons 73 ............................. <"conf_allow_direct_mail">
  [139] pusharglist 2 ........................... <getObject(#session), "conf_allow_direct_mail">
  [141] objcall 175 ............................. <getObject(#session).exists("conf_allow_direct_mail")>
  [143] jmpifz [173] ............................ if getObject(#session).exists("conf_allow_direct_mail") then / else
  [146] getprop 70 .............................. <pPropsToServer>
  [148] pushcons 74 ............................. <"directMail">
  [150] pushsymb 109 ............................ <#session>
  [152] pusharglist 1 ........................... <#session>
  [154] extcall 110 ............................. <getObject(#session)>
  [156] pushcons 73 ............................. <"conf_allow_direct_mail">
  [158] pusharglist 2 ........................... <getObject(#session), "conf_allow_direct_mail">
  [160] objcall 177 ............................. <getObject(#session).get("conf_allow_direct_mail")>
  [162] pusharglist 1 ........................... <getObject(#session).get("conf_allow_direct_mail")>
  [164] extcall 176 ............................. <string(getObject(#session).get("conf_allow_direct_mail"))>
  [166] pusharglistnoret 3 ...................... <pPropsToServer, "directMail", string(getObject(#session).get("conf_allow_direct_mail"))>
  [168] objcall 174 ............................. pPropsToServer["directMail"] = string(getObject(#session).get("conf_allow_direct_mail"))
  [170] jmp [183]
  [173] getprop 70 .............................. <pPropsToServer>
  [175] pushcons 74 ............................. <"directMail">
  [177] pushcons 31 ............................. <"0">
  [179] pusharglistnoret 3 ...................... <pPropsToServer, "directMail", "0">
  [181] objcall 174 ............................. pPropsToServer["directMail"] = "0"
  [183] ret
end

on ChangeWindowView me, tWindowName
  [  0] getprop 73 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 93 .............................. <windowExists(pWindowTitle)>
  [  6] not ..................................... <not windowExists(pWindowTitle)>
  [  7] jmpifz [117] ............................ if not windowExists(pWindowTitle) then / else
  [ 10] getprop 112 ............................. <pmode>
  [ 12] pushcons 75 ............................. <"forced">
  [ 14] eq ...................................... <pmode = "forced">
  [ 15] jmpifz [ 33] ............................ if pmode = "forced" then / else
  [ 18] getprop 73 .............................. <pWindowTitle>
  [ 20] pushcons 55 ............................. <"habbo_simple.window">
  [ 22] pushzero ................................ <0>
  [ 23] pushzero ................................ <0>
  [ 24] pushsymb 122 ............................ <#modal>
  [ 26] pusharglistnoret 5 ...................... <pWindowTitle, "habbo_simple.window", 0, 0, #modal>
  [ 28] extcall 157 ............................. createWindow(pWindowTitle, "habbo_simple.window", 0, 0, #modal)
  [ 30] jmp [ 46]
  [ 33] getprop 73 .............................. <pWindowTitle>
  [ 35] pushcons 76 ............................. <"habbo_basic.window">
  [ 37] pushint16 381 ........................... <381>
  [ 40] pushint8 73 ............................. <73>
  [ 42] pusharglistnoret 4 ...................... <pWindowTitle, "habbo_basic.window", 381, 73>
  [ 44] extcall 157 ............................. createWindow(pWindowTitle, "habbo_basic.window", 381, 73)
  [ 46] getprop 73 .............................. <pWindowTitle>
  [ 48] pusharglist 1 ........................... <pWindowTitle>
  [ 50] extcall 130 ............................. <getWindow(pWindowTitle)>
  [ 52] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 54] getlocal 0 .............................. <tWndObj>
  [ 56] getparam 0 .............................. <me>
  [ 58] pusharglist 1 ........................... <me>
  [ 60] objcall 162 ............................. <me.getID()>
  [ 62] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [ 64] objcall 178 ............................. tWndObj.registerClient(me.getID())
  [ 66] getlocal 0 .............................. <tWndObj>
  [ 68] pushsymb 67 ............................. <#eventProcFigurecreator>
  [ 70] getparam 0 .............................. <me>
  [ 72] pusharglist 1 ........................... <me>
  [ 74] objcall 162 ............................. <me.getID()>
  [ 76] pushsymb 179 ............................ <#mouseDown>
  [ 78] pusharglistnoret 4 ...................... <tWndObj, #eventProcFigurecreator, me.getID(), #mouseDown>
  [ 80] objcall 163 ............................. tWndObj.registerProcedure(#eventProcFigurecreator, me.getID(), #mouseDown)
  [ 82] getlocal 0 .............................. <tWndObj>
  [ 84] pushsymb 67 ............................. <#eventProcFigurecreator>
  [ 86] getparam 0 .............................. <me>
  [ 88] pusharglist 1 ........................... <me>
  [ 90] objcall 162 ............................. <me.getID()>
  [ 92] pushsymb 0 .............................. <#mouseUp>
  [ 94] pusharglistnoret 4 ...................... <tWndObj, #eventProcFigurecreator, me.getID(), #mouseUp>
  [ 96] objcall 163 ............................. tWndObj.registerProcedure(#eventProcFigurecreator, me.getID(), #mouseUp)
  [ 98] getlocal 0 .............................. <tWndObj>
  [100] pushsymb 67 ............................. <#eventProcFigurecreator>
  [102] getparam 0 .............................. <me>
  [104] pusharglist 1 ........................... <me>
  [106] objcall 162 ............................. <me.getID()>
  [108] pushsymb 164 ............................ <#keyDown>
  [110] pusharglistnoret 4 ...................... <tWndObj, #eventProcFigurecreator, me.getID(), #keyDown>
  [112] objcall 163 ............................. tWndObj.registerProcedure(#eventProcFigurecreator, me.getID(), #keyDown)
  [114] jmp [131]
  [117] getprop 73 .............................. <pWindowTitle>
  [119] pusharglist 1 ........................... <pWindowTitle>
  [121] extcall 130 ............................. <getWindow(pWindowTitle)>
  [123] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [125] getlocal 0 .............................. <tWndObj>
  [127] pusharglistnoret 1 ...................... <tWndObj>
  [129] objcall 131 ............................. tWndObj.unmerge()
  [131] getlocal 0 .............................. <tWndObj>
  [133] getparam 1 .............................. <tWindowName>
  [135] pusharglistnoret 2 ...................... <tWndObj, tWindowName>
  [137] objcall 132 ............................. tWndObj.merge(tWindowName)
  [139] getprop 112 ............................. <pmode>
  [141] pushcons 75 ............................. <"forced">
  [143] eq ...................................... <pmode = "forced">
  [144] jmpifz [163] ............................ if pmode = "forced" then
  [147] getlocal 0 .............................. <tWndObj>
  [149] pusharglistnoret 1 ...................... <tWndObj>
  [151] objcall 160 ............................. tWndObj.center()
  [153] getlocal 0 .............................. <tWndObj>
  [155] pushint16 172 ........................... <172>
  [158] pushzero ................................ <0>
  [159] pusharglistnoret 3 ...................... <tWndObj, 172, 0>
  [161] objcall 180 ............................. tWndObj.moveBy(172, 0)
  [163] getparam 1 .............................. <tWindowName>
  [165] setprop 75 .............................. pOpenWindow = tWindowName
  [167] ret
end

on getMyInformation me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 70 .............................. pPropsToServer = [:]
  [  5] pushcons 61 ............................. <"name">
  [  7] pushcons 35 ............................. <"password">
  [  9] pushcons 46 ............................. <"figure">
  [ 11] pushcons 62 ............................. <"sex">
  [ 13] pushcons 64 ............................. <"customData">
  [ 15] pushcons 65 ............................. <"email">
  [ 17] pushcons 34 ............................. <"birthday">
  [ 19] pushcons 74 ............................. <"directMail">
  [ 21] pushcons 68 ............................. <"onlineStatus">
  [ 23] pushcons 69 ............................. <"publicProfileEnabled">
  [ 25] pushcons 70 ............................. <"friendRequestsEnabled">
  [ 27] pushcons 71 ............................. <"offlineMessagingEnabled">
  [ 29] pusharglist 12 .......................... <["name", "password", "figure", "sex", "customData", "email", "birthday", "directMail", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled"]>
  [ 31] pushlist ................................ <["name", "password", "figure", "sex", "customData", "email", "birthday", "directMail", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled"]>
  [ 32] setlocal 0 .............................. tTempProps = ["name", "password", "figure", "sex", "customData", "email", "birthday", "directMail", "onlineStatus", "publicProfileEnabled", "friendRequestsEnabled", "offlineMessagingEnabled"]
  [ 34] getlocal 0 .............................. <tTempProps>
  [ 36] peek 0
  [ 38] pusharglist 1
  [ 40] extcall 104
  [ 42] pushint8 1
  [ 44] peek 0
  [ 46] peek 2
  [ 48] lteq
  [ 49] jmpifz [160] ............................ repeat with tProp in tTempProps
  [ 52] peek 2
  [ 54] peek 1
  [ 56] pusharglist 2
  [ 58] extcall 105
  [ 60] setlocal 1
  [ 62] pushsymb 109 ............................ <#session>
  [ 64] pusharglist 1 ........................... <#session>
  [ 66] extcall 110 ............................. <getObject(#session)>
  [ 68] pushcons 77 ............................. <"user_">
  [ 70] getlocal 1 .............................. <tProp>
  [ 72] joinstr ................................. <"user_" & tProp>
  [ 73] pusharglist 2 ........................... <getObject(#session), "user_" & tProp>
  [ 75] objcall 175 ............................. <getObject(#session).exists("user_" & tProp)>
  [ 77] jmpifz [145] ............................ if getObject(#session).exists("user_" & tProp) then
  [ 80] pushsymb 109 ............................ <#session>
  [ 82] pusharglist 1 ........................... <#session>
  [ 84] extcall 110 ............................. <getObject(#session)>
  [ 86] pushcons 77 ............................. <"user_">
  [ 88] getlocal 1 .............................. <tProp>
  [ 90] joinstr ................................. <"user_" & tProp>
  [ 91] pusharglist 2 ........................... <getObject(#session), "user_" & tProp>
  [ 93] objcall 177 ............................. <getObject(#session).get("user_" & tProp)>
  [ 95] setlocal 2 .............................. tdata = getObject(#session).get("user_" & tProp)
  [ 97] getlocal 2 .............................. <tdata>
  [ 99] getobjprop 102 .......................... <tdata.ilk>
  [101] pushsymb 103 ............................ <#list>
  [103] eq ...................................... <tdata.ilk = #list>
  [104] getlocal 2 .............................. <tdata>
  [106] getobjprop 102 .......................... <tdata.ilk>
  [108] pushsymb 182 ............................ <#propList>
  [110] eq ...................................... <tdata.ilk = #propList>
  [111] or ...................................... <(tdata.ilk = #list) or (tdata.ilk = #propList)>
  [112] jmpifz [132] ............................ if (tdata.ilk = #list) or (tdata.ilk = #propList) then / else
  [115] getprop 70 .............................. <pPropsToServer>
  [117] getlocal 1 .............................. <tProp>
  [119] getlocal 2 .............................. <tdata>
  [121] pusharglist 1 ........................... <tdata>
  [123] objcall 148 ............................. <tdata.duplicate()>
  [125] pusharglistnoret 3 ...................... <pPropsToServer, tProp, tdata.duplicate()>
  [127] objcall 174 ............................. pPropsToServer[tProp] = tdata.duplicate()
  [129] jmp [142]
  [132] getprop 70 .............................. <pPropsToServer>
  [134] getlocal 1 .............................. <tProp>
  [136] getlocal 2 .............................. <tdata>
  [138] pusharglistnoret 3 ...................... <pPropsToServer, tProp, tdata>
  [140] objcall 174 ............................. pPropsToServer[tProp] = tdata
  [142] jmp [155] ............................... next repeat
  [145] getprop 70 .............................. <pPropsToServer>
  [147] getlocal 1 .............................. <tProp>
  [149] pushcons 0 .............................. <EMPTY>
  [151] pusharglistnoret 3 ...................... <pPropsToServer, tProp, EMPTY>
  [153] objcall 174 ............................. pPropsToServer[tProp] = EMPTY
  [155] pushint8 1
  [157] add
  [158] endrepeat [ 44]
  [160] pop 3
  [162] getprop 70 .............................. <pPropsToServer>
  [164] pushcons 46 ............................. <"figure">
  [166] pusharglist 2 ........................... <pPropsToServer, "figure">
  [168] objcall 105 ............................. <pPropsToServer["figure"]>
  [170] pushcons 78 ............................. <"li">
  [172] pusharglistnoret 2 ...................... <pPropsToServer["figure"], "li">
  [174] objcall 183 ............................. pPropsToServer["figure"].deleteProp("li")
  [176] getprop 70 .............................. <pPropsToServer>
  [178] pushcons 46 ............................. <"figure">
  [180] pusharglist 2 ........................... <pPropsToServer, "figure">
  [182] objcall 105 ............................. <pPropsToServer["figure"]>
  [184] pushcons 79 ............................. <"ri">
  [186] pusharglistnoret 2 ...................... <pPropsToServer["figure"], "ri">
  [188] objcall 183 ............................. pPropsToServer["figure"].deleteProp("ri")
  [190] getprop 70 .............................. <pPropsToServer>
  [192] pushcons 46 ............................. <"figure">
  [194] pusharglist 2 ........................... <pPropsToServer, "figure">
  [196] objcall 105 ............................. <pPropsToServer["figure"]>
  [198] pusharglist 1 ........................... <pPropsToServer["figure"]>
  [200] objcall 148 ............................. <pPropsToServer["figure"].duplicate()>
  [202] setprop 184 ............................. pOldFigure = pPropsToServer["figure"].duplicate()
  [204] getprop 70 .............................. <pPropsToServer>
  [206] pushcons 62 ............................. <"sex">
  [208] pusharglist 2 ........................... <pPropsToServer, "sex">
  [210] objcall 105 ............................. <pPropsToServer["sex"]>
  [212] pushsymb 185 ............................ <#char>
  [214] pushint8 1 .............................. <1>
  [216] pusharglist 3 ........................... <pPropsToServer["sex"], #char, 1>
  [218] objcall 186 ............................. <pPropsToServer["sex"].char[1]>
  [220] pushcons 80 ............................. <"f">
  [222] eq ...................................... <pPropsToServer["sex"].char[1] = "f">
  [223] getprop 70 .............................. <pPropsToServer>
  [225] pushcons 62 ............................. <"sex">
  [227] pusharglist 2 ........................... <pPropsToServer, "sex">
  [229] objcall 105 ............................. <pPropsToServer["sex"]>
  [231] pushsymb 185 ............................ <#char>
  [233] pushint8 1 .............................. <1>
  [235] pusharglist 3 ........................... <pPropsToServer["sex"], #char, 1>
  [237] objcall 186 ............................. <pPropsToServer["sex"].char[1]>
  [239] pushcons 81 ............................. <"F">
  [241] eq ...................................... <pPropsToServer["sex"].char[1] = "F">
  [242] or ...................................... <(pPropsToServer["sex"].char[1] = "f") or (pPropsToServer["sex"].char[1] = "F")>
  [243] jmpifz [259] ............................ if (pPropsToServer["sex"].char[1] = "f") or (pPropsToServer["sex"].char[1] = "F") then / else
  [246] getprop 70 .............................. <pPropsToServer>
  [248] pushcons 62 ............................. <"sex">
  [250] pushcons 81 ............................. <"F">
  [252] pusharglistnoret 3 ...................... <pPropsToServer, "sex", "F">
  [254] objcall 174 ............................. pPropsToServer["sex"] = "F"
  [256] jmp [269]
  [259] getprop 70 .............................. <pPropsToServer>
  [261] pushcons 62 ............................. <"sex">
  [263] pushcons 63 ............................. <"M">
  [265] pusharglistnoret 3 ...................... <pPropsToServer, "sex", "M">
  [267] objcall 174 ............................. pPropsToServer["sex"] = "M"
  [269] getprop 70 .............................. <pPropsToServer>
  [271] pushcons 62 ............................. <"sex">
  [273] pusharglist 2 ........................... <pPropsToServer, "sex">
  [275] objcall 105 ............................. <pPropsToServer["sex"]>
  [277] setprop 187 ............................. pOldSex = pPropsToServer["sex"]
  [279] ret
end

on setMyDataToFields me
  [  0] getprop 73 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 130 ............................. <getWindow(pWindowTitle)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [  8] pusharglist 0 ........................... <[:]>
  [ 10] pushproplist ............................ <[:]>
  [ 11] setlocal 1 .............................. tTempProps = [:]
  [ 13] getprop 75 .............................. <pOpenWindow>
  [ 15] peek 0 .................................. case pOpenWindow of
  [ 17] pushcons 82 ............................. <"reg_welcome.window">
  [ 19] eq
  [ 20] jmpifz [117] ............................ (case) "reg_welcome.window":
  [ 23] getprop 112 ............................. <pmode>
  [ 25] pushcons 75 ............................. <"forced">
  [ 27] eq ...................................... <pmode = "forced">
  [ 28] getprop 112 ............................. <pmode>
  [ 30] pushcons 83 ............................. <"parent_email_forced">
  [ 32] eq ...................................... <pmode = "parent_email_forced">
  [ 33] or ...................................... <(pmode = "forced") or (pmode = "parent_email_forced")>
  [ 34] jmpifz [114] ............................ if (pmode = "forced") or (pmode = "parent_email_forced") then
  [ 37] getlocal 0 .............................. <tWndObj>
  [ 39] pushcons 84 ............................. <"reg_exit_button">
  [ 41] pusharglist 2 ........................... <tWndObj, "reg_exit_button">
  [ 43] objcall 135 ............................. <tWndObj.elementExists("reg_exit_button")>
  [ 45] jmpifz [ 60] ............................ if tWndObj.elementExists("reg_exit_button") then
  [ 48] getlocal 0 .............................. <tWndObj>
  [ 50] pushcons 84 ............................. <"reg_exit_button">
  [ 52] pusharglist 2 ........................... <tWndObj, "reg_exit_button">
  [ 54] objcall 133 ............................. <tWndObj.getElement("reg_exit_button")>
  [ 56] pusharglistnoret 1 ...................... <tWndObj.getElement("reg_exit_button")>
  [ 58] objcall 189 ............................. tWndObj.getElement("reg_exit_button").hide()
  [ 60] getlocal 0 .............................. <tWndObj>
  [ 62] pushcons 85 ............................. <"reg_welcome_balloon">
  [ 64] pusharglist 2 ........................... <tWndObj, "reg_welcome_balloon">
  [ 66] objcall 133 ............................. <tWndObj.getElement("reg_welcome_balloon")>
  [ 68] pushcons 86 ............................. <"reg_forcedupdate">
  [ 70] pusharglist 1 ........................... <"reg_forcedupdate">
  [ 72] extcall 74 .............................. <getText("reg_forcedupdate")>
  [ 74] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_welcome_balloon"), getText("reg_forcedupdate")>
  [ 76] objcall 134 ............................. tWndObj.getElement("reg_welcome_balloon").setText(getText("reg_forcedupdate"))
  [ 78] getlocal 0 .............................. <tWndObj>
  [ 80] pushcons 87 ............................. <"reg_welcome_header">
  [ 82] pusharglist 2 ........................... <tWndObj, "reg_welcome_header">
  [ 84] objcall 133 ............................. <tWndObj.getElement("reg_welcome_header")>
  [ 86] pushcons 88 ............................. <"reg_forcedupdate2">
  [ 88] pusharglist 1 ........................... <"reg_forcedupdate2">
  [ 90] extcall 74 .............................. <getText("reg_forcedupdate2")>
  [ 92] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_welcome_header"), getText("reg_forcedupdate2")>
  [ 94] objcall 134 ............................. tWndObj.getElement("reg_welcome_header").setText(getText("reg_forcedupdate2"))
  [ 96] getlocal 0 .............................. <tWndObj>
  [ 98] pushcons 89 ............................. <"reg_welcome_txt">
  [100] pusharglist 2 ........................... <tWndObj, "reg_welcome_txt">
  [102] objcall 133 ............................. <tWndObj.getElement("reg_welcome_txt")>
  [104] pushcons 90 ............................. <"reg_forcedupdate3">
  [106] pusharglist 1 ........................... <"reg_forcedupdate3">
  [108] extcall 74 .............................. <getText("reg_forcedupdate3")>
  [110] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_welcome_txt"), getText("reg_forcedupdate3")>
  [112] objcall 134 ............................. tWndObj.getElement("reg_welcome_txt").setText(getText("reg_forcedupdate3"))
  [114] jmp [869]
  [117] peek 0
  [119] pushcons 91 ............................. <"reg_coppa_forced.window">
  [121] eq
  [122] jmpifz [205] ............................ (case) "reg_coppa_forced.window":
  [125] getlocal 0 .............................. <tWndObj>
  [127] pushcons 84 ............................. <"reg_exit_button">
  [129] pusharglist 2 ........................... <tWndObj, "reg_exit_button">
  [131] objcall 135 ............................. <tWndObj.elementExists("reg_exit_button")>
  [133] jmpifz [148] ............................ if tWndObj.elementExists("reg_exit_button") then
  [136] getlocal 0 .............................. <tWndObj>
  [138] pushcons 84 ............................. <"reg_exit_button">
  [140] pusharglist 2 ........................... <tWndObj, "reg_exit_button">
  [142] objcall 133 ............................. <tWndObj.getElement("reg_exit_button")>
  [144] pusharglistnoret 1 ...................... <tWndObj.getElement("reg_exit_button")>
  [146] objcall 189 ............................. tWndObj.getElement("reg_exit_button").hide()
  [148] getlocal 0 .............................. <tWndObj>
  [150] pushcons 85 ............................. <"reg_welcome_balloon">
  [152] pusharglist 2 ........................... <tWndObj, "reg_welcome_balloon">
  [154] objcall 133 ............................. <tWndObj.getElement("reg_welcome_balloon")>
  [156] pushcons 86 ............................. <"reg_forcedupdate">
  [158] pusharglist 1 ........................... <"reg_forcedupdate">
  [160] extcall 74 .............................. <getText("reg_forcedupdate")>
  [162] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_welcome_balloon"), getText("reg_forcedupdate")>
  [164] objcall 134 ............................. tWndObj.getElement("reg_welcome_balloon").setText(getText("reg_forcedupdate"))
  [166] getlocal 0 .............................. <tWndObj>
  [168] pushcons 87 ............................. <"reg_welcome_header">
  [170] pusharglist 2 ........................... <tWndObj, "reg_welcome_header">
  [172] objcall 133 ............................. <tWndObj.getElement("reg_welcome_header")>
  [174] pushcons 88 ............................. <"reg_forcedupdate2">
  [176] pusharglist 1 ........................... <"reg_forcedupdate2">
  [178] extcall 74 .............................. <getText("reg_forcedupdate2")>
  [180] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_welcome_header"), getText("reg_forcedupdate2")>
  [182] objcall 134 ............................. tWndObj.getElement("reg_welcome_header").setText(getText("reg_forcedupdate2"))
  [184] getlocal 0 .............................. <tWndObj>
  [186] pushcons 89 ............................. <"reg_welcome_txt">
  [188] pusharglist 2 ........................... <tWndObj, "reg_welcome_txt">
  [190] objcall 133 ............................. <tWndObj.getElement("reg_welcome_txt")>
  [192] pushcons 90 ............................. <"reg_forcedupdate3">
  [194] pusharglist 1 ........................... <"reg_forcedupdate3">
  [196] extcall 74 .............................. <getText("reg_forcedupdate3")>
  [198] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_welcome_txt"), getText("reg_forcedupdate3")>
  [200] objcall 134 ............................. tWndObj.getElement("reg_welcome_txt").setText(getText("reg_forcedupdate3"))
  [202] jmp [869]
  [205] peek 0
  [207] pushcons 92 ............................. <"reg_legal.window">
  [209] eq
  [210] jmpifz [265] ............................ (case) "reg_legal.window":
  [213] getprop 70 .............................. <pPropsToServer>
  [215] pushcons 67 ............................. <"parentagree">
  [217] pusharglist 2 ........................... <pPropsToServer, "parentagree">
  [219] objcall 105 ............................. <pPropsToServer["parentagree"]>
  [221] pushzero ................................ <0>
  [222] eq ...................................... <pPropsToServer["parentagree"] = 0>
  [223] jmpifz [262] ............................ if pPropsToServer["parentagree"] = 0 then
  [226] getlocal 0 .............................. <tWndObj>
  [228] pushcons 93 ............................. <"reg_legal_header">
  [230] pusharglist 2 ........................... <tWndObj, "reg_legal_header">
  [232] objcall 133 ............................. <tWndObj.getElement("reg_legal_header")>
  [234] pushcons 94 ............................. <"reg_legal_header2">
  [236] pusharglist 1 ........................... <"reg_legal_header2">
  [238] extcall 74 .............................. <getText("reg_legal_header2")>
  [240] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_legal_header"), getText("reg_legal_header2")>
  [242] objcall 134 ............................. tWndObj.getElement("reg_legal_header").setText(getText("reg_legal_header2"))
  [244] getlocal 0 .............................. <tWndObj>
  [246] pushcons 95 ............................. <"reg_agree_text">
  [248] pusharglist 2 ........................... <tWndObj, "reg_agree_text">
  [250] objcall 133 ............................. <tWndObj.getElement("reg_agree_text")>
  [252] pushcons 96 ............................. <"reg_agree2">
  [254] pusharglist 1 ........................... <"reg_agree2">
  [256] extcall 74 .............................. <getText("reg_agree2")>
  [258] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_agree_text"), getText("reg_agree2")>
  [260] objcall 134 ............................. tWndObj.getElement("reg_agree_text").setText(getText("reg_agree2"))
  [262] jmp [869]
  [265] peek 0
  [267] pushcons 14 ............................. <"reg_namepage.window">
  [269] eq
  [270] jmpifz [460] ............................ (case) "reg_namepage.window":
  [273] getprop 112 ............................. <pmode>
  [275] pushcons 60 ............................. <"registration">
  [277] eq ...................................... <pmode = "registration">
  [278] getprop 112 ............................. <pmode>
  [280] pushcons 42 ............................. <"parent_email">
  [282] eq ...................................... <pmode = "parent_email">
  [283] or ...................................... <(pmode = "registration") or (pmode = "parent_email")>
  [284] getprop 112 ............................. <pmode>
  [286] pushcons 43 ............................. <"parent_email_strong_coppa">
  [288] eq ...................................... <pmode = "parent_email_strong_coppa">
  [289] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [290] getprop 112 ............................. <pmode>
  [292] pushcons 41 ............................. <"topt_verification">
  [294] eq ...................................... <pmode = "topt_verification">
  [295] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification")>
  [296] jmpifz [316] ............................ if (pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification") then / else
  [299] getlocal 0 .............................. <tWndObj>
  [301] pushcons 97 ............................. <"char_name_field">
  [303] pusharglist 2 ........................... <tWndObj, "char_name_field">
  [305] objcall 133 ............................. <tWndObj.getElement("char_name_field")>
  [307] pushint8 1 .............................. <1>
  [309] pusharglistnoret 2 ...................... <tWndObj.getElement("char_name_field"), 1>
  [311] objcall 190 ............................. tWndObj.getElement("char_name_field").setFocus(1)
  [313] jmp [365]
  [316] getlocal 0 .............................. <tWndObj>
  [318] pushcons 97 ............................. <"char_name_field">
  [320] pusharglist 2 ........................... <tWndObj, "char_name_field">
  [322] objcall 133 ............................. <tWndObj.getElement("char_name_field")>
  [324] pushsymb 191 ............................ <#blend>
  [326] pushint8 30 ............................. <30>
  [328] pusharglistnoret 3 ...................... <tWndObj.getElement("char_name_field"), #blend, 30>
  [330] objcall 159 ............................. tWndObj.getElement("char_name_field").setProperty(#blend, 30)
  [332] getlocal 0 .............................. <tWndObj>
  [334] pushcons 97 ............................. <"char_name_field">
  [336] pusharglist 2 ........................... <tWndObj, "char_name_field">
  [338] objcall 133 ............................. <tWndObj.getElement("char_name_field")>
  [340] pushzero ................................ <0>
  [341] pusharglistnoret 2 ...................... <tWndObj.getElement("char_name_field"), 0>
  [343] objcall 192 ............................. tWndObj.getElement("char_name_field").setEdit(0)
  [345] getlocal 0 .............................. <tWndObj>
  [347] pushcons 97 ............................. <"char_name_field">
  [349] pusharglist 2 ........................... <tWndObj, "char_name_field">
  [351] objcall 133 ............................. <tWndObj.getElement("char_name_field")>
  [353] getprop 70 .............................. <pPropsToServer>
  [355] pushcons 61 ............................. <"name">
  [357] pusharglist 2 ........................... <pPropsToServer, "name">
  [359] objcall 105 ............................. <pPropsToServer["name"]>
  [361] pusharglistnoret 2 ...................... <tWndObj.getElement("char_name_field"), pPropsToServer["name"]>
  [363] objcall 134 ............................. tWndObj.getElement("char_name_field").setText(pPropsToServer["name"])
  [365] pushcons 61 ............................. <"name">
  [367] pushcons 97 ............................. <"char_name_field">
  [369] pusharglist 2 ........................... <["name": "char_name_field"]>
  [371] pushproplist ............................ <["name": "char_name_field"]>
  [372] setlocal 1 .............................. tTempProps = ["name": "char_name_field"]
  [374] pushcons 98 ............................. <"username_input.font.size">
  [376] pusharglist 1 ........................... <"username_input.font.size">
  [378] extcall 86 .............................. <variableExists("username_input.font.size")>
  [380] jmpifz [457] ............................ if variableExists("username_input.font.size") then
  [383] getlocal 0 .............................. <tWndObj>
  [385] pushcons 97 ............................. <"char_name_field">
  [387] pusharglist 2 ........................... <tWndObj, "char_name_field">
  [389] objcall 133 ............................. <tWndObj.getElement("char_name_field")>
  [391] setlocal 2 .............................. tElem = tWndObj.getElement("char_name_field")
  [393] getlocal 2 .............................. <tElem>
  [395] pushzero ................................ <0>
  [396] eq ...................................... <tElem = 0>
  [397] jmpifz [407] ............................ if tElem = 0 then
  [400] pop 1
  [402] pushzero ................................ <0>
  [403] pusharglistnoret 1 ...................... <0>
  [405] extcall 89 .............................. return 0
  [407] getlocal 2 .............................. <tElem>
  [409] getobjprop 193 .......................... <tElem.pMember>
  [411] pusharglist 0 ........................... <>
  [413] extcall 92 .............................. <VOID>
  [415] eq ...................................... <tElem.pMember = VOID>
  [416] jmpifz [426] ............................ if tElem.pMember = VOID then
  [419] pop 1
  [421] pushzero ................................ <0>
  [422] pusharglistnoret 1 ...................... <0>
  [424] extcall 89 .............................. return 0
  [426] getlocal 2 .............................. <tElem>
  [428] getchainedprop 193 ...................... <tElem.pMember>
  [430] getobjprop 194 .......................... <tElem.pMember.type>
  [432] pushsymb 195 ............................ <#field>
  [434] nteq .................................... <tElem.pMember.type <> #field>
  [435] jmpifz [445] ............................ if tElem.pMember.type <> #field then
  [438] pop 1
  [440] pushzero ................................ <0>
  [441] pusharglistnoret 1 ...................... <0>
  [443] extcall 89 .............................. return 0
  [445] getlocal 2 .............................. <tElem>
  [447] getchainedprop 193 ...................... <tElem.pMember>
  [449] pushcons 98 ............................. <"username_input.font.size">
  [451] pusharglist 1 ........................... <"username_input.font.size">
  [453] extcall 196 ............................. <getIntVariable("username_input.font.size")>
  [455] setobjprop 197 .......................... tElem.pMember.fontSize = getIntVariable("username_input.font.size")
  [457] jmp [869]
  [460] peek 0
  [462] pushcons 99 ............................. <"reg_namepage_mission.window">
  [464] eq
  [465] jmpifz [498] ............................ (case) "reg_namepage_mission.window":
  [468] getlocal 0 .............................. <tWndObj>
  [470] pushcons 100 ............................ <"char_mission_field">
  [472] pusharglist 2 ........................... <tWndObj, "char_mission_field">
  [474] objcall 133 ............................. <tWndObj.getElement("char_mission_field")>
  [476] pushint8 1 .............................. <1>
  [478] pusharglistnoret 2 ...................... <tWndObj.getElement("char_mission_field"), 1>
  [480] objcall 190 ............................. tWndObj.getElement("char_mission_field").setFocus(1)
  [482] pushcons 61 ............................. <"name">
  [484] pushcons 97 ............................. <"char_name_field">
  [486] pushcons 64 ............................. <"customData">
  [488] pushcons 100 ............................ <"char_mission_field">
  [490] pusharglist 4 ........................... <["name": "char_name_field", "customData": "char_mission_field"]>
  [492] pushproplist ............................ <["name": "char_name_field", "customData": "char_mission_field"]>
  [493] setlocal 1 .............................. tTempProps = ["name": "char_name_field", "customData": "char_mission_field"]
  [495] jmp [869]
  [498] peek 0
  [500] pushcons 101 ............................ <"reg_infopage.window">
  [502] eq
  [503] jmpifz [668] ............................ (case) "reg_infopage.window":
  [506] pushcons 65 ............................. <"email">
  [508] pushcons 102 ............................ <"char_email_field">
  [510] pusharglist 2 ........................... <["email": "char_email_field"]>
  [512] pushproplist ............................ <["email": "char_email_field"]>
  [513] setlocal 1 .............................. tTempProps = ["email": "char_email_field"]
  [515] pusharglist 0 ........................... <[:]>
  [517] pushproplist ............................ <[:]>
  [518] setprop 69 .............................. pTempPassword = [:]
  [520] getmovieprop 198 ........................ <the itemDelimiter>
  [522] setlocal 3 .............................. tDelim = the itemDelimiter
  [524] pushcons 32 ............................. <".">
  [526] setmovieprop 198 ........................ the itemDelimiter = "."
  [528] getlocal 0 .............................. <tWndObj>
  [530] pushcons 103 ............................ <"char_dd_field">
  [532] pusharglist 2 ........................... <tWndObj, "char_dd_field">
  [534] objcall 133 ............................. <tWndObj.getElement("char_dd_field")>
  [536] getprop 70 .............................. <pPropsToServer>
  [538] pushcons 34 ............................. <"birthday">
  [540] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [542] objcall 105 ............................. <pPropsToServer["birthday"]>
  [544] pushsymb 200 ............................ <#item>
  [546] pushint8 1 .............................. <1>
  [548] pusharglist 3 ........................... <pPropsToServer["birthday"], #item, 1>
  [550] objcall 186 ............................. <pPropsToServer["birthday"].item[1]>
  [552] pusharglist 1 ........................... <pPropsToServer["birthday"].item[1]>
  [554] extcall 199 ............................. <integer(pPropsToServer["birthday"].item[1])>
  [556] pusharglistnoret 2 ...................... <tWndObj.getElement("char_dd_field"), integer(pPropsToServer["birthday"].item[1])>
  [558] objcall 134 ............................. tWndObj.getElement("char_dd_field").setText(integer(pPropsToServer["birthday"].item[1]))
  [560] getprop 70 .............................. <pPropsToServer>
  [562] pushcons 34 ............................. <"birthday">
  [564] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [566] objcall 105 ............................. <pPropsToServer["birthday"]>
  [568] pusharglist 1 ........................... <pPropsToServer["birthday"]>
  [570] extcall 100 ............................. <voidp(pPropsToServer["birthday"])>
  [572] not ..................................... <not voidp(pPropsToServer["birthday"])>
  [573] jmpifz [623] ............................ if not voidp(pPropsToServer["birthday"]) then
  [576] getlocal 0 .............................. <tWndObj>
  [578] pushcons 37 ............................. <"monthDrop">
  [580] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [582] objcall 133 ............................. <tWndObj.getElement("monthDrop")>
  [584] pushzero ................................ <0>
  [585] pusharglistnoret 2 ...................... <tWndObj.getElement("monthDrop"), 0>
  [587] objcall 136 ............................. tWndObj.getElement("monthDrop").setOrdering(0)
  [589] getlocal 0 .............................. <tWndObj>
  [591] pushcons 37 ............................. <"monthDrop">
  [593] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [595] objcall 133 ............................. <tWndObj.getElement("monthDrop")>
  [597] getprop 70 .............................. <pPropsToServer>
  [599] pushcons 34 ............................. <"birthday">
  [601] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [603] objcall 105 ............................. <pPropsToServer["birthday"]>
  [605] pushsymb 200 ............................ <#item>
  [607] pushint8 2 .............................. <2>
  [609] pusharglist 3 ........................... <pPropsToServer["birthday"], #item, 2>
  [611] objcall 186 ............................. <pPropsToServer["birthday"].item[2]>
  [613] pusharglist 1 ........................... <pPropsToServer["birthday"].item[2]>
  [615] extcall 199 ............................. <integer(pPropsToServer["birthday"].item[2])>
  [617] pushint8 1 .............................. <1>
  [619] pusharglistnoret 3 ...................... <tWndObj.getElement("monthDrop"), integer(pPropsToServer["birthday"].item[2]), 1>
  [621] objcall 201 ............................. tWndObj.getElement("monthDrop").setSelection(integer(pPropsToServer["birthday"].item[2]), 1)
  [623] getlocal 0 .............................. <tWndObj>
  [625] pushcons 104 ............................ <"char_yyyy_field">
  [627] pusharglist 2 ........................... <tWndObj, "char_yyyy_field">
  [629] objcall 133 ............................. <tWndObj.getElement("char_yyyy_field")>
  [631] getprop 70 .............................. <pPropsToServer>
  [633] pushcons 34 ............................. <"birthday">
  [635] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [637] objcall 105 ............................. <pPropsToServer["birthday"]>
  [639] pushsymb 200 ............................ <#item>
  [641] pushint8 3 .............................. <3>
  [643] pusharglist 3 ........................... <pPropsToServer["birthday"], #item, 3>
  [645] objcall 186 ............................. <pPropsToServer["birthday"].item[3]>
  [647] pusharglistnoret 2 ...................... <tWndObj.getElement("char_yyyy_field"), pPropsToServer["birthday"].item[3]>
  [649] objcall 134 ............................. tWndObj.getElement("char_yyyy_field").setText(pPropsToServer["birthday"].item[3])
  [651] getlocal 3 .............................. <tDelim>
  [653] setmovieprop 198 ........................ the itemDelimiter = tDelim
  [655] getparam 0 .............................. <me>
  [657] pushcons 105 ............................ <"char_spam_checkbox">
  [659] pushcons 74 ............................. <"directMail">
  [661] pusharglistnoret 3 ...................... <me, "char_spam_checkbox", "directMail">
  [663] objcall 31 .............................. me.updateCheckButton("char_spam_checkbox", "directMail")
  [665] jmp [869]
  [668] peek 0
  [670] pushcons 106 ............................ <"reg_infopage_no_age.window">
  [672] eq
  [673] jmpifz [684] ............................ (case) "reg_infopage_no_age.window":
  [676] pusharglist 0 ........................... <[:]>
  [678] pushproplist ............................ <[:]>
  [679] setprop 69 .............................. pTempPassword = [:]
  [681] jmp [869]
  [684] peek 0
  [686] pushcons 107 ............................ <"reg_confirm.window">
  [688] eq
  [689] jmpifz [869] ............................ (case) "reg_confirm.window":
  [692] getlocal 0 .............................. <tWndObj>
  [694] pushcons 108 ............................ <"reg_name">
  [696] pusharglist 2 ........................... <tWndObj, "reg_name">
  [698] objcall 135 ............................. <tWndObj.elementExists("reg_name")>
  [700] jmpifz [736] ............................ if tWndObj.elementExists("reg_name") then
  [703] pushcons 109 ............................ <"reg_check_name">
  [705] pushcons 109 ............................ <"reg_check_name">
  [707] pusharglist 2 ........................... <"reg_check_name", "reg_check_name">
  [709] extcall 74 .............................. <getText("reg_check_name", "reg_check_name")>
  [711] getprop 70 .............................. <pPropsToServer>
  [713] pushcons 61 ............................. <"name">
  [715] pusharglist 2 ........................... <pPropsToServer, "name">
  [717] objcall 105 ............................. <pPropsToServer["name"]>
  [719] joinpadstr .............................. <getText("reg_check_name", "reg_check_name") && pPropsToServer["name"]>
  [720] setlocal 4 .............................. tText = getText("reg_check_name", "reg_check_name") && pPropsToServer["name"]
  [722] getlocal 0 .............................. <tWndObj>
  [724] pushcons 108 ............................ <"reg_name">
  [726] pusharglist 2 ........................... <tWndObj, "reg_name">
  [728] objcall 133 ............................. <tWndObj.getElement("reg_name")>
  [730] getlocal 4 .............................. <tText>
  [732] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_name"), tText>
  [734] objcall 134 ............................. tWndObj.getElement("reg_name").setText(tText)
  [736] getlocal 0 .............................. <tWndObj>
  [738] pushcons 110 ............................ <"reg_age">
  [740] pusharglist 2 ........................... <tWndObj, "reg_age">
  [742] objcall 135 ............................. <tWndObj.elementExists("reg_age")>
  [744] jmpifz [825] ............................ if tWndObj.elementExists("reg_age") then
  [747] pushsymb 202 ............................ <#dateFormatter>
  [749] pusharglist 1 ........................... <#dateFormatter>
  [751] extcall 95 .............................. <objectExists(#dateFormatter)>
  [753] jmpifz [792] ............................ if objectExists(#dateFormatter) then / else
  [756] pushsymb 202 ............................ <#dateFormatter>
  [758] pusharglist 1 ........................... <#dateFormatter>
  [760] extcall 110 ............................. <getObject(#dateFormatter)>
  [762] getprop 70 .............................. <pPropsToServer>
  [764] pushcons 34 ............................. <"birthday">
  [766] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [768] objcall 105 ............................. <pPropsToServer["birthday"]>
  [770] pusharglist 2 ........................... <getObject(#dateFormatter), pPropsToServer["birthday"]>
  [772] objcall 203 ............................. <getObject(#dateFormatter).getLocalDateFromStr(pPropsToServer["birthday"])>
  [774] setlocal 5 .............................. tDate = getObject(#dateFormatter).getLocalDateFromStr(pPropsToServer["birthday"])
  [776] pushcons 111 ............................ <"reg_check_age">
  [778] pushcons 111 ............................ <"reg_check_age">
  [780] pusharglist 2 ........................... <"reg_check_age", "reg_check_age">
  [782] extcall 74 .............................. <getText("reg_check_age", "reg_check_age")>
  [784] getlocal 5 .............................. <tDate>
  [786] joinpadstr .............................. <getText("reg_check_age", "reg_check_age") && tDate>
  [787] setlocal 4 .............................. tText = getText("reg_check_age", "reg_check_age") && tDate
  [789] jmp [811]
  [792] pushcons 111 ............................ <"reg_check_age">
  [794] pushcons 111 ............................ <"reg_check_age">
  [796] pusharglist 2 ........................... <"reg_check_age", "reg_check_age">
  [798] extcall 74 .............................. <getText("reg_check_age", "reg_check_age")>
  [800] getprop 70 .............................. <pPropsToServer>
  [802] pushcons 34 ............................. <"birthday">
  [804] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [806] objcall 105 ............................. <pPropsToServer["birthday"]>
  [808] joinpadstr .............................. <getText("reg_check_age", "reg_check_age") && pPropsToServer["birthday"]>
  [809] setlocal 4 .............................. tText = getText("reg_check_age", "reg_check_age") && pPropsToServer["birthday"]
  [811] getlocal 0 .............................. <tWndObj>
  [813] pushcons 110 ............................ <"reg_age">
  [815] pusharglist 2 ........................... <tWndObj, "reg_age">
  [817] objcall 133 ............................. <tWndObj.getElement("reg_age")>
  [819] getlocal 4 .............................. <tText>
  [821] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_age"), tText>
  [823] objcall 134 ............................. tWndObj.getElement("reg_age").setText(tText)
  [825] getlocal 0 .............................. <tWndObj>
  [827] pushcons 112 ............................ <"reg_mail">
  [829] pusharglist 2 ........................... <tWndObj, "reg_mail">
  [831] objcall 135 ............................. <tWndObj.elementExists("reg_mail")>
  [833] jmpifz [869] ............................ if tWndObj.elementExists("reg_mail") then
  [836] pushcons 113 ............................ <"reg_check_mail">
  [838] pushcons 113 ............................ <"reg_check_mail">
  [840] pusharglist 2 ........................... <"reg_check_mail", "reg_check_mail">
  [842] extcall 74 .............................. <getText("reg_check_mail", "reg_check_mail")>
  [844] getprop 70 .............................. <pPropsToServer>
  [846] pushcons 65 ............................. <"email">
  [848] pusharglist 2 ........................... <pPropsToServer, "email">
  [850] objcall 105 ............................. <pPropsToServer["email"]>
  [852] joinpadstr .............................. <getText("reg_check_mail", "reg_check_mail") && pPropsToServer["email"]>
  [853] setlocal 4 .............................. tText = getText("reg_check_mail", "reg_check_mail") && pPropsToServer["email"]
  [855] getlocal 0 .............................. <tWndObj>
  [857] pushcons 112 ............................ <"reg_mail">
  [859] pusharglist 2 ........................... <tWndObj, "reg_mail">
  [861] objcall 133 ............................. <tWndObj.getElement("reg_mail")>
  [863] getlocal 4 .............................. <tText>
  [865] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_mail"), tText>
  [867] objcall 134 ............................. tWndObj.getElement("reg_mail").setText(tText)
  [869] pop 1 ................................... end case
  [871] pushint8 1 .............................. <1>
  [873] setlocal 6
  [875] getlocal 6
  [877] getlocal 1 .............................. <tTempProps>
  [879] getobjprop 104 .......................... <tTempProps.count>
  [881] lteq
  [882] jmpifz [945] ............................ repeat with f = 1 to tTempProps.count
  [885] getlocal 1 .............................. <tTempProps>
  [887] getlocal 6 .............................. <f>
  [889] pusharglist 2 ........................... <tTempProps, f>
  [891] objcall 204 ............................. <tTempProps.getPropAt(f)>
  [893] setlocal 7 .............................. tProp = tTempProps.getPropAt(f)
  [895] getlocal 1 .............................. <tTempProps>
  [897] getlocal 7 .............................. <tProp>
  [899] pusharglist 2 ........................... <tTempProps, tProp>
  [901] objcall 105 ............................. <tTempProps[tProp]>
  [903] setlocal 2 .............................. tElem = tTempProps[tProp]
  [905] getlocal 0 .............................. <tWndObj>
  [907] getlocal 2 .............................. <tElem>
  [909] pusharglist 2 ........................... <tWndObj, tElem>
  [911] objcall 135 ............................. <tWndObj.elementExists(tElem)>
  [913] jmpifz [936] ............................ if tWndObj.elementExists(tElem) then
  [916] getlocal 0 .............................. <tWndObj>
  [918] getlocal 2 .............................. <tElem>
  [920] pusharglist 2 ........................... <tWndObj, tElem>
  [922] objcall 133 ............................. <tWndObj.getElement(tElem)>
  [924] getprop 70 .............................. <pPropsToServer>
  [926] getlocal 7 .............................. <tProp>
  [928] pusharglist 2 ........................... <pPropsToServer, tProp>
  [930] objcall 105 ............................. <pPropsToServer[tProp]>
  [932] pusharglistnoret 2 ...................... <tWndObj.getElement(tElem), pPropsToServer[tProp]>
  [934] objcall 134 ............................. tWndObj.getElement(tElem).setText(pPropsToServer[tProp])
  [936] pushint8 1
  [938] getlocal 6
  [940] add
  [941] setlocal 6
  [943] endrepeat [875]
  [945] getprop 146 ............................. <pRegProcess>
  [947] pushzero ................................ <0>
  [948] nteq .................................... <pRegProcess <> 0>
  [949] getprop 76 .............................. <pRegProcessLocation>
  [951] getobjprop 102 .......................... <pRegProcessLocation.ilk>
  [953] pushsymb 199 ............................ <#integer>
  [955] eq ...................................... <pRegProcessLocation.ilk = #integer>
  [956] and ..................................... <(pRegProcess <> 0) and (pRegProcessLocation.ilk = #integer)>
  [957] jmpifz [1316] ........................... if (pRegProcess <> 0) and (pRegProcessLocation.ilk = #integer) then
  [960] getlocal 0 .............................. <tWndObj>
  [962] pushcons 114 ............................ <"reg_page_number">
  [964] pusharglist 2 ........................... <tWndObj, "reg_page_number">
  [966] objcall 135 ............................. <tWndObj.elementExists("reg_page_number")>
  [968] jmpifz [1005] ........................... if tWndObj.elementExists("reg_page_number") then
  [971] getprop 112 ............................. <pmode>
  [973] pushcons 115 ............................ <"update">
  [975] nteq .................................... <pmode <> "update">
  [976] jmpifz [1005] ........................... if pmode <> "update" then
  [979] getprop 76 .............................. <pRegProcessLocation>
  [981] pushcons 116 ............................ <"/">
  [983] joinstr ................................. <pRegProcessLocation & "/">
  [984] getprop 146 ............................. <pRegProcess>
  [986] getobjprop 104 .......................... <pRegProcess.count>
  [988] joinstr ................................. <pRegProcessLocation & "/" & pRegProcess.count>
  [989] setlocal 4 .............................. tText = pRegProcessLocation & "/" & pRegProcess.count
  [991] getlocal 0 .............................. <tWndObj>
  [993] pushcons 114 ............................ <"reg_page_number">
  [995] pusharglist 2 ........................... <tWndObj, "reg_page_number">
  [997] objcall 133 ............................. <tWndObj.getElement("reg_page_number")>
  [999] getlocal 4 .............................. <tText>
  [1001] pusharglistnoret 2 ..................... <tWndObj.getElement("reg_page_number"), tText>
  [1003] objcall 134 ............................ tWndObj.getElement("reg_page_number").setText(tText)
  [1005] getprop 112 ............................ <pmode>
  [1007] pushcons 115 ........................... <"update">
  [1009] eq ..................................... <pmode = "update">
  [1010] getprop 76 ............................. <pRegProcessLocation>
  [1012] pushint8 1 ............................. <1>
  [1014] eq ..................................... <pRegProcessLocation = 1>
  [1015] and .................................... <(pmode = "update") and (pRegProcessLocation = 1)>
  [1016] jmpifz [1045] .......................... if (pmode = "update") and (pRegProcessLocation = 1) then / else
  [1019] getlocal 0 ............................. <tWndObj>
  [1021] pushcons 117 ........................... <"reg_prev_button">
  [1023] pusharglist 2 .......................... <tWndObj, "reg_prev_button">
  [1025] objcall 135 ............................ <tWndObj.elementExists("reg_prev_button")>
  [1027] jmpifz [1042] .......................... if tWndObj.elementExists("reg_prev_button") then
  [1030] getlocal 0 ............................. <tWndObj>
  [1032] pushcons 117 ........................... <"reg_prev_button">
  [1034] pusharglist 2 .......................... <tWndObj, "reg_prev_button">
  [1036] objcall 133 ............................ <tWndObj.getElement("reg_prev_button")>
  [1038] pusharglistnoret 1 ..................... <tWndObj.getElement("reg_prev_button")>
  [1040] objcall 189 ............................ tWndObj.getElement("reg_prev_button").hide()
  [1042] jmp [1139]
  [1045] getprop 112 ............................ <pmode>
  [1047] pushcons 115 ........................... <"update">
  [1049] eq ..................................... <pmode = "update">
  [1050] getprop 76 ............................. <pRegProcessLocation>
  [1052] pushint8 1 ............................. <1>
  [1054] nteq ................................... <pRegProcessLocation <> 1>
  [1055] and .................................... <(pmode = "update") and (pRegProcessLocation <> 1)>
  [1056] jmpifz [1085] .......................... if (pmode = "update") and (pRegProcessLocation <> 1) then / else
  [1059] getlocal 0 ............................. <tWndObj>
  [1061] pushcons 118 ........................... <"reg_cancel_button">
  [1063] pusharglist 2 .......................... <tWndObj, "reg_cancel_button">
  [1065] objcall 135 ............................ <tWndObj.elementExists("reg_cancel_button")>
  [1067] jmpifz [1082] .......................... if tWndObj.elementExists("reg_cancel_button") then
  [1070] getlocal 0 ............................. <tWndObj>
  [1072] pushcons 118 ........................... <"reg_cancel_button">
  [1074] pusharglist 2 .......................... <tWndObj, "reg_cancel_button">
  [1076] objcall 133 ............................ <tWndObj.getElement("reg_cancel_button")>
  [1078] pusharglistnoret 1 ..................... <tWndObj.getElement("reg_cancel_button")>
  [1080] objcall 189 ............................ tWndObj.getElement("reg_cancel_button").hide()
  [1082] jmp [1139]
  [1085] getprop 112 ............................ <pmode>
  [1087] pushcons 115 ........................... <"update">
  [1089] nteq ................................... <pmode <> "update">
  [1090] jmpifz [1139] .......................... if pmode <> "update" then
  [1093] getlocal 0 ............................. <tWndObj>
  [1095] pushcons 119 ........................... <"reg_done_button">
  [1097] pusharglist 2 .......................... <tWndObj, "reg_done_button">
  [1099] objcall 135 ............................ <tWndObj.elementExists("reg_done_button")>
  [1101] jmpifz [1116] .......................... if tWndObj.elementExists("reg_done_button") then
  [1104] getlocal 0 ............................. <tWndObj>
  [1106] pushcons 119 ........................... <"reg_done_button">
  [1108] pusharglist 2 .......................... <tWndObj, "reg_done_button">
  [1110] objcall 133 ............................ <tWndObj.getElement("reg_done_button")>
  [1112] pusharglistnoret 1 ..................... <tWndObj.getElement("reg_done_button")>
  [1114] objcall 189 ............................ tWndObj.getElement("reg_done_button").hide()
  [1116] getlocal 0 ............................. <tWndObj>
  [1118] pushcons 118 ........................... <"reg_cancel_button">
  [1120] pusharglist 2 .......................... <tWndObj, "reg_cancel_button">
  [1122] objcall 135 ............................ <tWndObj.elementExists("reg_cancel_button")>
  [1124] jmpifz [1139] .......................... if tWndObj.elementExists("reg_cancel_button") then
  [1127] getlocal 0 ............................. <tWndObj>
  [1129] pushcons 118 ........................... <"reg_cancel_button">
  [1131] pusharglist 2 .......................... <tWndObj, "reg_cancel_button">
  [1133] objcall 133 ............................ <tWndObj.getElement("reg_cancel_button")>
  [1135] pusharglistnoret 1 ..................... <tWndObj.getElement("reg_cancel_button")>
  [1137] objcall 189 ............................ tWndObj.getElement("reg_cancel_button").hide()
  [1139] getprop 76 ............................. <pRegProcessLocation>
  [1141] getprop 146 ............................ <pRegProcess>
  [1143] getobjprop 104 ......................... <pRegProcess.count>
  [1145] eq ..................................... <pRegProcessLocation = pRegProcess.count>
  [1146] jmpifz [1316] .......................... if pRegProcessLocation = pRegProcess.count then
  [1149] getprop 112 ............................ <pmode>
  [1151] pushcons 60 ............................ <"registration">
  [1153] nteq ................................... <pmode <> "registration">
  [1154] getprop 112 ............................ <pmode>
  [1156] pushcons 120 ........................... <" parent_email">
  [1158] nteq ................................... <pmode <> " parent_email">
  [1159] and .................................... <(pmode <> "registration") and (pmode <> " parent_email")>
  [1160] getprop 112 ............................ <pmode>
  [1162] pushcons 41 ............................ <"topt_verification">
  [1164] nteq ................................... <pmode <> "topt_verification">
  [1165] and .................................... <(pmode <> "registration") and (pmode <> " parent_email") and (pmode <> "topt_verification")>
  [1166] jmpifz [1316] .......................... if (pmode <> "registration") and (pmode <> " parent_email") and (pmode <> "topt_verification") then
  [1169] getlocal 0 ............................. <tWndObj>
  [1171] pushcons 119 ........................... <"reg_done_button">
  [1173] pusharglist 2 .......................... <tWndObj, "reg_done_button">
  [1175] objcall 135 ............................ <tWndObj.elementExists("reg_done_button")>
  [1177] getlocal 0 ............................. <tWndObj>
  [1179] pushcons 114 ........................... <"reg_page_number">
  [1181] pusharglist 2 .......................... <tWndObj, "reg_page_number">
  [1183] objcall 135 ............................ <tWndObj.elementExists("reg_page_number")>
  [1185] and .................................... <tWndObj.elementExists("reg_done_button") and tWndObj.elementExists("reg_page_number")>
  [1186] jmpifz [1316] .......................... if tWndObj.elementExists("reg_done_button") and tWndObj.elementExists("reg_page_number") then
  [1189] getlocal 0 ............................. <tWndObj>
  [1191] pushcons 119 ........................... <"reg_done_button">
  [1193] pusharglist 2 .......................... <tWndObj, "reg_done_button">
  [1195] objcall 133 ............................ <tWndObj.getElement("reg_done_button")>
  [1197] pusharglistnoret 1 ..................... <tWndObj.getElement("reg_done_button")>
  [1199] objcall 205 ............................ tWndObj.getElement("reg_done_button").show()
  [1201] getlocal 0 ............................. <tWndObj>
  [1203] pushcons 121 ........................... <"reg_next_button">
  [1205] pusharglist 2 .......................... <tWndObj, "reg_next_button">
  [1207] objcall 133 ............................ <tWndObj.getElement("reg_next_button")>
  [1209] pusharglistnoret 1 ..................... <tWndObj.getElement("reg_next_button")>
  [1211] objcall 189 ............................ tWndObj.getElement("reg_next_button").hide()
  [1213] getlocal 0 ............................. <tWndObj>
  [1215] pushcons 121 ........................... <"reg_next_button">
  [1217] pusharglist 2 .......................... <tWndObj, "reg_next_button">
  [1219] objcall 133 ............................ <tWndObj.getElement("reg_next_button")>
  [1221] pushsymb 206 ........................... <#locH>
  [1223] pusharglist 2 .......................... <tWndObj.getElement("reg_next_button"), #locH>
  [1225] objcall 170 ............................ <tWndObj.getElement("reg_next_button").getProperty(#locH)>
  [1227] getlocal 0 ............................. <tWndObj>
  [1229] pushcons 119 ........................... <"reg_done_button">
  [1231] pusharglist 2 .......................... <tWndObj, "reg_done_button">
  [1233] objcall 133 ............................ <tWndObj.getElement("reg_done_button")>
  [1235] pushsymb 206 ........................... <#locH>
  [1237] pusharglist 2 .......................... <tWndObj.getElement("reg_done_button"), #locH>
  [1239] objcall 170 ............................ <tWndObj.getElement("reg_done_button").getProperty(#locH)>
  [1241] sub .................................... <tWndObj.getElement("reg_next_button").getProperty(#locH) - tWndObj.getElement("reg_done_button").getProperty(#locH)>
  [1242] setlocal 8 ............................. tMoveX = tWndObj.getElement("reg_next_button").getProperty(#locH) - tWndObj.getElement("reg_done_button").getProperty(#locH)
  [1244] getlocal 0 ............................. <tWndObj>
  [1246] pushcons 119 ........................... <"reg_done_button">
  [1248] pusharglist 2 .......................... <tWndObj, "reg_done_button">
  [1250] objcall 133 ............................ <tWndObj.getElement("reg_done_button")>
  [1252] pushsymb 206 ........................... <#locH>
  [1254] pusharglist 2 .......................... <tWndObj.getElement("reg_done_button"), #locH>
  [1256] objcall 170 ............................ <tWndObj.getElement("reg_done_button").getProperty(#locH)>
  [1258] getlocal 8 ............................. <tMoveX>
  [1260] add .................................... <tWndObj.getElement("reg_done_button").getProperty(#locH) + tMoveX>
  [1261] setlocal 8 ............................. tMoveX = tWndObj.getElement("reg_done_button").getProperty(#locH) + tMoveX
  [1263] getlocal 0 ............................. <tWndObj>
  [1265] pushcons 119 ........................... <"reg_done_button">
  [1267] pusharglist 2 .......................... <tWndObj, "reg_done_button">
  [1269] objcall 133 ............................ <tWndObj.getElement("reg_done_button")>
  [1271] pushsymb 206 ........................... <#locH>
  [1273] getlocal 8 ............................. <tMoveX>
  [1275] pusharglistnoret 3 ..................... <tWndObj.getElement("reg_done_button"), #locH, tMoveX>
  [1277] objcall 159 ............................ tWndObj.getElement("reg_done_button").setProperty(#locH, tMoveX)
  [1279] getprop 76 ............................. <pRegProcessLocation>
  [1281] pushcons 116 ........................... <"/">
  [1283] joinstr ................................ <pRegProcessLocation & "/">
  [1284] getprop 146 ............................ <pRegProcess>
  [1286] getobjprop 104 ......................... <pRegProcess.count>
  [1288] joinstr ................................ <pRegProcessLocation & "/" & pRegProcess.count>
  [1289] setlocal 4 ............................. tText = pRegProcessLocation & "/" & pRegProcess.count
  [1291] getlocal 0 ............................. <tWndObj>
  [1293] pushcons 114 ........................... <"reg_page_number">
  [1295] pusharglist 2 .......................... <tWndObj, "reg_page_number">
  [1297] objcall 135 ............................ <tWndObj.elementExists("reg_page_number")>
  [1299] jmpifz [1316] .......................... if tWndObj.elementExists("reg_page_number") then
  [1302] getlocal 0 ............................. <tWndObj>
  [1304] pushcons 114 ........................... <"reg_page_number">
  [1306] pusharglist 2 .......................... <tWndObj, "reg_page_number">
  [1308] objcall 133 ............................ <tWndObj.getElement("reg_page_number")>
  [1310] getlocal 4 ............................. <tText>
  [1312] pusharglistnoret 2 ..................... <tWndObj.getElement("reg_page_number"), tText>
  [1314] objcall 134 ............................ tWndObj.getElement("reg_page_number").setText(tText)
  [1316] ret
end

on getMyDataFromFields me
  [  0] getprop 73 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 130 ............................. <getWindow(pWindowTitle)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [  8] pusharglist 0 ........................... <[:]>
  [ 10] pushproplist ............................ <[:]>
  [ 11] setlocal 1 .............................. tTempProps = [:]
  [ 13] getprop 75 .............................. <pOpenWindow>
  [ 15] peek 0 .................................. case pOpenWindow of
  [ 17] pushcons 14 ............................. <"reg_namepage.window">
  [ 19] eq
  [ 20] jmpifz [ 35] ............................ (case) "reg_namepage.window":
  [ 23] pushcons 61 ............................. <"name">
  [ 25] pushcons 97 ............................. <"char_name_field">
  [ 27] pusharglist 2 ........................... <["name": "char_name_field"]>
  [ 29] pushproplist ............................ <["name": "char_name_field"]>
  [ 30] setlocal 1 .............................. tTempProps = ["name": "char_name_field"]
  [ 32] jmp [261]
  [ 35] peek 0
  [ 37] pushcons 99 ............................. <"reg_namepage_mission.window">
  [ 39] eq
  [ 40] jmpifz [ 55] ............................ (case) "reg_namepage_mission.window":
  [ 43] pushcons 64 ............................. <"customData">
  [ 45] pushcons 100 ............................ <"char_mission_field">
  [ 47] pusharglist 2 ........................... <["customData": "char_mission_field"]>
  [ 49] pushproplist ............................ <["customData": "char_mission_field"]>
  [ 50] setlocal 1 .............................. tTempProps = ["customData": "char_mission_field"]
  [ 52] jmp [261]
  [ 55] peek 0
  [ 57] pushcons 101 ............................ <"reg_infopage.window">
  [ 59] eq
  [ 60] jmpifz [244] ............................ (case) "reg_infopage.window":
  [ 63] getlocal 0 .............................. <tWndObj>
  [ 65] pushcons 103 ............................ <"char_dd_field">
  [ 67] pusharglist 2 ........................... <tWndObj, "char_dd_field">
  [ 69] objcall 133 ............................. <tWndObj.getElement("char_dd_field")>
  [ 71] pusharglist 1 ........................... <tWndObj.getElement("char_dd_field")>
  [ 73] objcall 74 .............................. <tWndObj.getElement("char_dd_field").getText()>
  [ 75] pusharglist 1 ........................... <tWndObj.getElement("char_dd_field").getText()>
  [ 77] extcall 199 ............................. <integer(tWndObj.getElement("char_dd_field").getText())>
  [ 79] setlocal 2 .............................. tDay = integer(tWndObj.getElement("char_dd_field").getText())
  [ 81] getlocal 0 .............................. <tWndObj>
  [ 83] pushcons 37 ............................. <"monthDrop">
  [ 85] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [ 87] objcall 135 ............................. <tWndObj.elementExists("monthDrop")>
  [ 89] not ..................................... <not tWndObj.elementExists("monthDrop")>
  [ 90] jmpifz [109] ............................ if not tWndObj.elementExists("monthDrop") then
  [ 93] pop 1
  [ 95] getparam 0 .............................. <me>
  [ 97] pushcons 122 ............................ <"No month drop!">
  [ 99] pushsymb 59 ............................. <#leavePage>
  [101] pusharglist 3 ........................... <me, "No month drop!", #leavePage>
  [103] extcall 85 .............................. <error(me, "No month drop!", #leavePage)>
  [105] pusharglistnoret 1 ...................... <error(me, "No month drop!", #leavePage)>
  [107] extcall 89 .............................. return error(me, "No month drop!", #leavePage)
  [109] getlocal 0 .............................. <tWndObj>
  [111] pushcons 37 ............................. <"monthDrop">
  [113] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [115] objcall 133 ............................. <tWndObj.getElement("monthDrop")>
  [117] pusharglist 1 ........................... <tWndObj.getElement("monthDrop")>
  [119] objcall 212 ............................. <tWndObj.getElement("monthDrop").getSelection()>
  [121] setlocal 3 .............................. tMonthSelection = tWndObj.getElement("monthDrop").getSelection()
  [123] getlocal 3 .............................. <tMonthSelection>
  [125] getlocal 3 .............................. <tMonthSelection>
  [127] getobjprop 214 .......................... <tMonthSelection.length>
  [129] pushint8 1 .............................. <1>
  [131] sub ..................................... <tMonthSelection.length - 1>
  [132] getlocal 3 .............................. <tMonthSelection>
  [134] getobjprop 214 .......................... <tMonthSelection.length>
  [136] pusharglist 3 ........................... <tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length>
  [138] extcall 213 ............................. <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [140] pusharglist 1 ........................... <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [142] extcall 199 ............................. <integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))>
  [144] setlocal 4 .............................. tMonth = integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))
  [146] getlocal 0 .............................. <tWndObj>
  [148] pushcons 104 ............................ <"char_yyyy_field">
  [150] pusharglist 2 ........................... <tWndObj, "char_yyyy_field">
  [152] objcall 133 ............................. <tWndObj.getElement("char_yyyy_field")>
  [154] pusharglist 1 ........................... <tWndObj.getElement("char_yyyy_field")>
  [156] objcall 74 .............................. <tWndObj.getElement("char_yyyy_field").getText()>
  [158] pusharglist 1 ........................... <tWndObj.getElement("char_yyyy_field").getText()>
  [160] extcall 199 ............................. <integer(tWndObj.getElement("char_yyyy_field").getText())>
  [162] setlocal 5 .............................. tYear = integer(tWndObj.getElement("char_yyyy_field").getText())
  [164] getlocal 2 .............................. <tDay>
  [166] pushint8 10 ............................. <10>
  [168] lt ...................................... <tDay < 10>
  [169] getlocal 2 .............................. <tDay>
  [171] pusharglist 1 ........................... <tDay>
  [173] extcall 100 ............................. <voidp(tDay)>
  [175] not ..................................... <not voidp(tDay)>
  [176] and ..................................... <(tDay < 10) and not voidp(tDay)>
  [177] jmpifz [187] ............................ if (tDay < 10) and not voidp(tDay) then
  [180] pushcons 31 ............................. <"0">
  [182] getlocal 2 .............................. <tDay>
  [184] joinstr ................................. <"0" & tDay>
  [185] setlocal 2 .............................. tDay = "0" & tDay
  [187] getlocal 4 .............................. <tMonth>
  [189] pushint8 10 ............................. <10>
  [191] lt ...................................... <tMonth < 10>
  [192] getlocal 4 .............................. <tMonth>
  [194] pusharglist 1 ........................... <tMonth>
  [196] extcall 100 ............................. <voidp(tMonth)>
  [198] not ..................................... <not voidp(tMonth)>
  [199] and ..................................... <(tMonth < 10) and not voidp(tMonth)>
  [200] jmpifz [210] ............................ if (tMonth < 10) and not voidp(tMonth) then
  [203] pushcons 31 ............................. <"0">
  [205] getlocal 4 .............................. <tMonth>
  [207] joinstr ................................. <"0" & tMonth>
  [208] setlocal 4 .............................. tMonth = "0" & tMonth
  [210] getprop 70 .............................. <pPropsToServer>
  [212] pushcons 34 ............................. <"birthday">
  [214] getlocal 2 .............................. <tDay>
  [216] pushcons 32 ............................. <".">
  [218] joinstr ................................. <tDay & ".">
  [219] getlocal 4 .............................. <tMonth>
  [221] joinstr ................................. <tDay & "." & tMonth>
  [222] pushcons 32 ............................. <".">
  [224] joinstr ................................. <tDay & "." & tMonth & ".">
  [225] getlocal 5 .............................. <tYear>
  [227] joinstr ................................. <tDay & "." & tMonth & "." & tYear>
  [228] pusharglistnoret 3 ...................... <pPropsToServer, "birthday", tDay & "." & tMonth & "." & tYear>
  [230] objcall 174 ............................. pPropsToServer["birthday"] = tDay & "." & tMonth & "." & tYear
  [232] pushcons 65 ............................. <"email">
  [234] pushcons 102 ............................ <"char_email_field">
  [236] pusharglist 2 ........................... <["email": "char_email_field"]>
  [238] pushproplist ............................ <["email": "char_email_field"]>
  [239] setlocal 1 .............................. tTempProps = ["email": "char_email_field"]
  [241] jmp [261]
  [244] peek 0
  [246] pushcons 106 ............................ <"reg_infopage_no_age.window">
  [248] eq
  [249] jmpifz [261] ............................ (case) "reg_infopage_no_age.window":
  [252] pushcons 65 ............................. <"email">
  [254] pushcons 102 ............................ <"char_email_field">
  [256] pusharglist 2 ........................... <["email": "char_email_field"]>
  [258] pushproplist ............................ <["email": "char_email_field"]>
  [259] setlocal 1 .............................. tTempProps = ["email": "char_email_field"]
  [261] pop 1 ................................... end case
  [263] pushint8 1 .............................. <1>
  [265] setlocal 6
  [267] getlocal 6
  [269] getlocal 1 .............................. <tTempProps>
  [271] getobjprop 104 .......................... <tTempProps.count>
  [273] lteq
  [274] jmpifz [347] ............................ repeat with f = 1 to tTempProps.count
  [277] getlocal 1 .............................. <tTempProps>
  [279] getlocal 6 .............................. <f>
  [281] pusharglist 2 ........................... <tTempProps, f>
  [283] objcall 204 ............................. <tTempProps.getPropAt(f)>
  [285] setlocal 7 .............................. tProp = tTempProps.getPropAt(f)
  [287] getlocal 1 .............................. <tTempProps>
  [289] getlocal 7 .............................. <tProp>
  [291] pusharglist 2 ........................... <tTempProps, tProp>
  [293] objcall 105 ............................. <tTempProps[tProp]>
  [295] setlocal 8 .............................. tElem = tTempProps[tProp]
  [297] getlocal 0 .............................. <tWndObj>
  [299] getlocal 8 .............................. <tElem>
  [301] pusharglist 2 ........................... <tWndObj, tElem>
  [303] objcall 135 ............................. <tWndObj.elementExists(tElem)>
  [305] jmpifz [338] ............................ if tWndObj.elementExists(tElem) then
  [308] getlocal 0 .............................. <tWndObj>
  [310] getlocal 8 .............................. <tElem>
  [312] pusharglist 2 ........................... <tWndObj, tElem>
  [314] objcall 133 ............................. <tWndObj.getElement(tElem)>
  [316] pusharglist 1 ........................... <tWndObj.getElement(tElem)>
  [318] objcall 74 .............................. <tWndObj.getElement(tElem).getText()>
  [320] pushint8 1 .............................. <1>
  [322] pusharglist 2 ........................... <tWndObj.getElement(tElem).getText(), 1>
  [324] extcall 215 ............................. <convertSpecialChars(tWndObj.getElement(tElem).getText(), 1)>
  [326] setlocal 9 .............................. tElemTxt = convertSpecialChars(tWndObj.getElement(tElem).getText(), 1)
  [328] getprop 70 .............................. <pPropsToServer>
  [330] getlocal 7 .............................. <tProp>
  [332] getlocal 9 .............................. <tElemTxt>
  [334] pusharglistnoret 3 ...................... <pPropsToServer, tProp, tElemTxt>
  [336] objcall 174 ............................. pPropsToServer[tProp] = tElemTxt
  [338] pushint8 1
  [340] getlocal 6
  [342] add
  [343] setlocal 6
  [345] endrepeat [267]
  [347] pushint8 1 .............................. <1>
  [349] pusharglistnoret 1 ...................... <1>
  [351] extcall 89 .............................. return 1
  [353] ret
end

on updateSexRadioButtons me
  [  0] pushcons 123 ............................ <"button.radio.on">
  [  2] pusharglist 1 ........................... <"button.radio.on">
  [  4] extcall 219 ............................. <getmemnum("button.radio.on")>
  [  6] pusharglist 1 ........................... <getmemnum("button.radio.on")>
  [  8] extcall 218 ............................. <member(getmemnum("button.radio.on"))>
  [ 10] getobjprop 220 .......................... <member(getmemnum("button.radio.on")).image>
  [ 12] setlocal 0 .............................. tRadioButtonOnImg = member(getmemnum("button.radio.on")).image
  [ 14] pushcons 124 ............................ <"button.radio.off">
  [ 16] pusharglist 1 ........................... <"button.radio.off">
  [ 18] extcall 219 ............................. <getmemnum("button.radio.off")>
  [ 20] pusharglist 1 ........................... <getmemnum("button.radio.off")>
  [ 22] extcall 218 ............................. <member(getmemnum("button.radio.off"))>
  [ 24] getobjprop 220 .......................... <member(getmemnum("button.radio.off")).image>
  [ 26] setlocal 1 .............................. tRadioButtonOffImg = member(getmemnum("button.radio.off")).image
  [ 28] getprop 70 .............................. <pPropsToServer>
  [ 30] pushcons 62 ............................. <"sex">
  [ 32] pusharglist 2 ........................... <pPropsToServer, "sex">
  [ 34] objcall 105 ............................. <pPropsToServer["sex"]>
  [ 36] pusharglist 1 ........................... <pPropsToServer["sex"]>
  [ 38] extcall 100 ............................. <voidp(pPropsToServer["sex"])>
  [ 40] jmpifz [ 53] ............................ if voidp(pPropsToServer["sex"]) then
  [ 43] getprop 70 .............................. <pPropsToServer>
  [ 45] pushcons 62 ............................. <"sex">
  [ 47] pushcons 63 ............................. <"M">
  [ 49] pusharglistnoret 3 ...................... <pPropsToServer, "sex", "M">
  [ 51] objcall 174 ............................. pPropsToServer["sex"] = "M"
  [ 53] getprop 73 .............................. <pWindowTitle>
  [ 55] pusharglist 1 ........................... <pWindowTitle>
  [ 57] extcall 130 ............................. <getWindow(pWindowTitle)>
  [ 59] setlocal 2 .............................. tWndObj = getWindow(pWindowTitle)
  [ 61] getprop 70 .............................. <pPropsToServer>
  [ 63] pushcons 62 ............................. <"sex">
  [ 65] pusharglist 2 ........................... <pPropsToServer, "sex">
  [ 67] objcall 105 ............................. <pPropsToServer["sex"]>
  [ 69] pushcons 81 ............................. <"F">
  [ 71] containsstr ............................. <pPropsToServer["sex"] contains "F">
  [ 72] jmpifz [128] ............................ if pPropsToServer["sex"] contains "F" then / else
  [ 75] getlocal 2 .............................. <tWndObj>
  [ 77] pushcons 125 ............................ <"char_sex_f">
  [ 79] pusharglist 2 ........................... <tWndObj, "char_sex_f">
  [ 81] objcall 135 ............................. <tWndObj.elementExists("char_sex_f")>
  [ 83] jmpifz [100] ............................ if tWndObj.elementExists("char_sex_f") then
  [ 86] getlocal 2 .............................. <tWndObj>
  [ 88] pushcons 125 ............................ <"char_sex_f">
  [ 90] pusharglist 2 ........................... <tWndObj, "char_sex_f">
  [ 92] objcall 133 ............................. <tWndObj.getElement("char_sex_f")>
  [ 94] getlocal 0 .............................. <tRadioButtonOnImg>
  [ 96] pusharglistnoret 2 ...................... <tWndObj.getElement("char_sex_f"), tRadioButtonOnImg>
  [ 98] objcall 221 ............................. tWndObj.getElement("char_sex_f").feedImage(tRadioButtonOnImg)
  [100] getlocal 2 .............................. <tWndObj>
  [102] pushcons 126 ............................ <"char_sex_m">
  [104] pusharglist 2 ........................... <tWndObj, "char_sex_m">
  [106] objcall 135 ............................. <tWndObj.elementExists("char_sex_m")>
  [108] jmpifz [125] ............................ if tWndObj.elementExists("char_sex_m") then
  [111] getlocal 2 .............................. <tWndObj>
  [113] pushcons 126 ............................ <"char_sex_m">
  [115] pusharglist 2 ........................... <tWndObj, "char_sex_m">
  [117] objcall 133 ............................. <tWndObj.getElement("char_sex_m")>
  [119] getlocal 1 .............................. <tRadioButtonOffImg>
  [121] pusharglistnoret 2 ...................... <tWndObj.getElement("char_sex_m"), tRadioButtonOffImg>
  [123] objcall 221 ............................. tWndObj.getElement("char_sex_m").feedImage(tRadioButtonOffImg)
  [125] jmp [178]
  [128] getlocal 2 .............................. <tWndObj>
  [130] pushcons 126 ............................ <"char_sex_m">
  [132] pusharglist 2 ........................... <tWndObj, "char_sex_m">
  [134] objcall 135 ............................. <tWndObj.elementExists("char_sex_m")>
  [136] jmpifz [153] ............................ if tWndObj.elementExists("char_sex_m") then
  [139] getlocal 2 .............................. <tWndObj>
  [141] pushcons 126 ............................ <"char_sex_m">
  [143] pusharglist 2 ........................... <tWndObj, "char_sex_m">
  [145] objcall 133 ............................. <tWndObj.getElement("char_sex_m")>
  [147] getlocal 0 .............................. <tRadioButtonOnImg>
  [149] pusharglistnoret 2 ...................... <tWndObj.getElement("char_sex_m"), tRadioButtonOnImg>
  [151] objcall 221 ............................. tWndObj.getElement("char_sex_m").feedImage(tRadioButtonOnImg)
  [153] getlocal 2 .............................. <tWndObj>
  [155] pushcons 125 ............................ <"char_sex_f">
  [157] pusharglist 2 ........................... <tWndObj, "char_sex_f">
  [159] objcall 135 ............................. <tWndObj.elementExists("char_sex_f")>
  [161] jmpifz [178] ............................ if tWndObj.elementExists("char_sex_f") then
  [164] getlocal 2 .............................. <tWndObj>
  [166] pushcons 125 ............................ <"char_sex_f">
  [168] pusharglist 2 ........................... <tWndObj, "char_sex_f">
  [170] objcall 133 ............................. <tWndObj.getElement("char_sex_f")>
  [172] getlocal 1 .............................. <tRadioButtonOffImg>
  [174] pusharglistnoret 2 ...................... <tWndObj.getElement("char_sex_f"), tRadioButtonOffImg>
  [176] objcall 221 ............................. tWndObj.getElement("char_sex_f").feedImage(tRadioButtonOffImg)
  [178] ret
end

on updateCheckButton me, tElement, tProp, tChangeMode
  [  0] pushcons 127 ............................ <"button.checkbox.on">
  [  2] pusharglist 1 ........................... <"button.checkbox.on">
  [  4] extcall 219 ............................. <getmemnum("button.checkbox.on")>
  [  6] pusharglist 1 ........................... <getmemnum("button.checkbox.on")>
  [  8] extcall 218 ............................. <member(getmemnum("button.checkbox.on"))>
  [ 10] getobjprop 220 .......................... <member(getmemnum("button.checkbox.on")).image>
  [ 12] setlocal 0 .............................. tOnImg = member(getmemnum("button.checkbox.on")).image
  [ 14] pushcons 128 ............................ <"button.checkbox.off">
  [ 16] pusharglist 1 ........................... <"button.checkbox.off">
  [ 18] extcall 219 ............................. <getmemnum("button.checkbox.off")>
  [ 20] pusharglist 1 ........................... <getmemnum("button.checkbox.off")>
  [ 22] extcall 218 ............................. <member(getmemnum("button.checkbox.off"))>
  [ 24] getobjprop 220 .......................... <member(getmemnum("button.checkbox.off")).image>
  [ 26] setlocal 1 .............................. tOffImg = member(getmemnum("button.checkbox.off")).image
  [ 28] getprop 73 .............................. <pWindowTitle>
  [ 30] pusharglist 1 ........................... <pWindowTitle>
  [ 32] extcall 130 ............................. <getWindow(pWindowTitle)>
  [ 34] setlocal 2 .............................. tWndObj = getWindow(pWindowTitle)
  [ 36] getprop 70 .............................. <pPropsToServer>
  [ 38] getparam 2 .............................. <tProp>
  [ 40] pusharglist 2 ........................... <pPropsToServer, tProp>
  [ 42] objcall 105 ............................. <pPropsToServer[tProp]>
  [ 44] pusharglist 1 ........................... <pPropsToServer[tProp]>
  [ 46] extcall 100 ............................. <voidp(pPropsToServer[tProp])>
  [ 48] jmpifz [ 61] ............................ if voidp(pPropsToServer[tProp]) then
  [ 51] getprop 70 .............................. <pPropsToServer>
  [ 53] getparam 2 .............................. <tProp>
  [ 55] pushcons 31 ............................. <"0">
  [ 57] pusharglistnoret 3 ...................... <pPropsToServer, tProp, "0">
  [ 59] objcall 174 ............................. pPropsToServer[tProp] = "0"
  [ 61] getparam 3 .............................. <tChangeMode>
  [ 63] pusharglist 1 ........................... <tChangeMode>
  [ 65] extcall 100 ............................. <voidp(tChangeMode)>
  [ 67] jmpifz [ 73] ............................ if voidp(tChangeMode) then
  [ 70] pushzero ................................ <0>
  [ 71] setparam 3 .............................. tChangeMode = 0
  [ 73] getparam 3 .............................. <tChangeMode>
  [ 75] jmpifz [115] ............................ if tChangeMode then
  [ 78] getprop 70 .............................. <pPropsToServer>
  [ 80] getparam 2 .............................. <tProp>
  [ 82] pusharglist 2 ........................... <pPropsToServer, tProp>
  [ 84] objcall 105 ............................. <pPropsToServer[tProp]>
  [ 86] pushcons 129 ............................ <"1">
  [ 88] eq ...................................... <pPropsToServer[tProp] = "1">
  [ 89] jmpifz [105] ............................ if pPropsToServer[tProp] = "1" then / else
  [ 92] getprop 70 .............................. <pPropsToServer>
  [ 94] getparam 2 .............................. <tProp>
  [ 96] pushcons 31 ............................. <"0">
  [ 98] pusharglistnoret 3 ...................... <pPropsToServer, tProp, "0">
  [100] objcall 174 ............................. pPropsToServer[tProp] = "0"
  [102] jmp [115]
  [105] getprop 70 .............................. <pPropsToServer>
  [107] getparam 2 .............................. <tProp>
  [109] pushcons 129 ............................ <"1">
  [111] pusharglistnoret 3 ...................... <pPropsToServer, tProp, "1">
  [113] objcall 174 ............................. pPropsToServer[tProp] = "1"
  [115] getprop 70 .............................. <pPropsToServer>
  [117] getparam 2 .............................. <tProp>
  [119] pusharglist 2 ........................... <pPropsToServer, tProp>
  [121] objcall 105 ............................. <pPropsToServer[tProp]>
  [123] pushcons 129 ............................ <"1">
  [125] eq ...................................... <pPropsToServer[tProp] = "1">
  [126] jmpifz [157] ............................ if pPropsToServer[tProp] = "1" then / else
  [129] getlocal 2 .............................. <tWndObj>
  [131] getparam 1 .............................. <tElement>
  [133] pusharglist 2 ........................... <tWndObj, tElement>
  [135] objcall 135 ............................. <tWndObj.elementExists(tElement)>
  [137] jmpifz [154] ............................ if tWndObj.elementExists(tElement) then
  [140] getlocal 2 .............................. <tWndObj>
  [142] getparam 1 .............................. <tElement>
  [144] pusharglist 2 ........................... <tWndObj, tElement>
  [146] objcall 133 ............................. <tWndObj.getElement(tElement)>
  [148] getlocal 0 .............................. <tOnImg>
  [150] pusharglistnoret 2 ...................... <tWndObj.getElement(tElement), tOnImg>
  [152] objcall 221 ............................. tWndObj.getElement(tElement).feedImage(tOnImg)
  [154] jmp [182]
  [157] getlocal 2 .............................. <tWndObj>
  [159] getparam 1 .............................. <tElement>
  [161] pusharglist 2 ........................... <tWndObj, tElement>
  [163] objcall 135 ............................. <tWndObj.elementExists(tElement)>
  [165] jmpifz [182] ............................ if tWndObj.elementExists(tElement) then
  [168] getlocal 2 .............................. <tWndObj>
  [170] getparam 1 .............................. <tElement>
  [172] pusharglist 2 ........................... <tWndObj, tElement>
  [174] objcall 133 ............................. <tWndObj.getElement(tElement)>
  [176] getlocal 1 .............................. <tOffImg>
  [178] pusharglistnoret 2 ...................... <tWndObj.getElement(tElement), tOffImg>
  [180] objcall 221 ............................. tWndObj.getElement(tElement).feedImage(tOffImg)
  [182] ret
end

on createDefaultFigure me, tRandom
  [  0] pushcons 130 ............................ <"Figure_System">
  [  2] pusharglist 1 ........................... <"Figure_System">
  [  4] extcall 95 .............................. <objectExists("Figure_System")>
  [  6] not ..................................... <not objectExists("Figure_System")>
  [  7] jmpifz [ 24] ............................ if not objectExists("Figure_System") then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 131 ............................ <"Figure system object not found">
  [ 14] pushsymb 32 ............................. <#createDefaultFigure>
  [ 16] pusharglist 3 ........................... <me, "Figure system object not found", #createDefaultFigure>
  [ 18] extcall 85 .............................. <error(me, "Figure system object not found", #createDefaultFigure)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #createDefaultFigure)>
  [ 22] extcall 89 .............................. return error(me, "Figure system object not found", #createDefaultFigure)
  [ 24] getprop 70 .............................. <pPropsToServer>
  [ 26] pushcons 46 ............................. <"figure">
  [ 28] pusharglist 0 ........................... <[:]>
  [ 30] pushproplist ............................ <[:]>
  [ 31] pusharglistnoret 3 ...................... <pPropsToServer, "figure", [:]>
  [ 33] objcall 174 ............................. pPropsToServer["figure"] = [:]
  [ 35] getprop 184 ............................. <pOldFigure>
  [ 37] pusharglist 1 ........................... <pOldFigure>
  [ 39] extcall 100 ............................. <voidp(pOldFigure)>
  [ 41] not ..................................... <not voidp(pOldFigure)>
  [ 42] getprop 187 ............................. <pOldSex>
  [ 44] getprop 70 .............................. <pPropsToServer>
  [ 46] pushcons 62 ............................. <"sex">
  [ 48] pusharglist 2 ........................... <pPropsToServer, "sex">
  [ 50] objcall 105 ............................. <pPropsToServer["sex"]>
  [ 52] eq ...................................... <pOldSex = pPropsToServer["sex"]>
  [ 53] and ..................................... <not voidp(pOldFigure) and (pOldSex = pPropsToServer["sex"])>
  [ 54] jmpifz [207] ............................ if not voidp(pOldFigure) and (pOldSex = pPropsToServer["sex"]) then
  [ 57] getprop 70 .............................. <pPropsToServer>
  [ 59] pushcons 46 ............................. <"figure">
  [ 61] getprop 184 ............................. <pOldFigure>
  [ 63] pusharglistnoret 3 ...................... <pPropsToServer, "figure", pOldFigure>
  [ 65] objcall 174 ............................. pPropsToServer["figure"] = pOldFigure
  [ 67] pushcons 132 ............................ <"lh">
  [ 69] pushcons 133 ............................ <"ls">
  [ 71] pushcons 134 ............................ <"bd">
  [ 73] pushcons 135 ............................ <"sh">
  [ 75] pushcons 136 ............................ <"lg">
  [ 77] pushcons 137 ............................ <"ch">
  [ 79] pushcons 138 ............................ <"hd">
  [ 81] pushcons 139 ............................ <"fc">
  [ 83] pushcons 140 ............................ <"ey">
  [ 85] pushcons 141 ............................ <"hr">
  [ 87] pushcons 142 ............................ <"rh">
  [ 89] pushcons 143 ............................ <"rs">
  [ 91] pusharglist 12 .......................... <["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"]>
  [ 93] pushlist ................................ <["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"]>
  [ 94] peek 0
  [ 96] pusharglist 1
  [ 98] extcall 104
  [100] pushint8 1
  [102] peek 0
  [104] peek 2
  [106] lteq
  [107] jmpifz [189] ............................ repeat with tPart in ["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"]
  [110] peek 2
  [112] peek 1
  [114] pusharglist 2
  [116] extcall 105
  [118] setlocal 0
  [120] getprop 70 .............................. <pPropsToServer>
  [122] pushcons 46 ............................. <"figure">
  [124] pusharglist 2 ........................... <pPropsToServer, "figure">
  [126] objcall 105 ............................. <pPropsToServer["figure"]>
  [128] getlocal 0 .............................. <tPart>
  [130] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [132] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [134] pushcons 144 ............................ <"model">
  [136] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "model">
  [138] objcall 105 ............................. <pPropsToServer["figure"][tPart]["model"]>
  [140] setlocal 1 .............................. tmodel = pPropsToServer["figure"][tPart]["model"]
  [142] getprop 70 .............................. <pPropsToServer>
  [144] pushcons 46 ............................. <"figure">
  [146] pusharglist 2 ........................... <pPropsToServer, "figure">
  [148] objcall 105 ............................. <pPropsToServer["figure"]>
  [150] getlocal 0 .............................. <tPart>
  [152] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [154] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [156] pushcons 145 ............................ <"color">
  [158] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "color">
  [160] objcall 105 ............................. <pPropsToServer["figure"][tPart]["color"]>
  [162] setlocal 2 .............................. tColor = pPropsToServer["figure"][tPart]["color"]
  [164] getparam 0 .............................. <me>
  [166] getlocal 0 .............................. <tPart>
  [168] getlocal 1 .............................. <tmodel>
  [170] pusharglistnoret 3 ...................... <me, tPart, tmodel>
  [172] objcall 41 .............................. me.setPartModel(tPart, tmodel)
  [174] getparam 0 .............................. <me>
  [176] getlocal 0 .............................. <tPart>
  [178] getlocal 2 .............................. <tColor>
  [180] pusharglistnoret 3 ...................... <me, tPart, tColor>
  [182] objcall 40 .............................. me.setPartColor(tPart, tColor)
  [184] pushint8 1
  [186] add
  [187] endrepeat [102]
  [189] pop 3
  [191] getparam 0 .............................. <me>
  [193] pusharglistnoret 1 ...................... <me>
  [195] objcall 35 .............................. me.updateFigurePreview()
  [197] getparam 0 .............................. <me>
  [199] pusharglistnoret 1 ...................... <me>
  [201] objcall 36 .............................. me.updateAllPrewIcons()
  [203] pusharglistnoret 0 ...................... <>
  [205] extcall 89 .............................. return 
  [207] pushcons 141 ............................ <"hr">
  [209] pushcons 138 ............................ <"hd">
  [211] pushcons 137 ............................ <"ch">
  [213] pushcons 136 ............................ <"lg">
  [215] pushcons 135 ............................ <"sh">
  [217] pusharglist 5 ........................... <["hr", "hd", "ch", "lg", "sh"]>
  [219] pushlist ................................ <["hr", "hd", "ch", "lg", "sh"]>
  [220] peek 0
  [222] pusharglist 1
  [224] extcall 104
  [226] pushint8 1
  [228] peek 0
  [230] peek 2
  [232] lteq
  [233] jmpifz [597] ............................ repeat with tPart in ["hr", "hd", "ch", "lg", "sh"]
  [236] peek 2
  [238] peek 1
  [240] pusharglist 2
  [242] extcall 105
  [244] setlocal 0
  [246] getparam 1 .............................. <tRandom>
  [248] pusharglist 1 ........................... <tRandom>
  [250] extcall 100 ............................. <voidp(tRandom)>
  [252] jmpifz [258] ............................ if voidp(tRandom) then
  [255] pushzero ................................ <0>
  [256] setparam 1 .............................. tRandom = 0
  [258] getparam 1 .............................. <tRandom>
  [260] jmpifz [296] ............................ if tRandom then / else
  [263] pushcons 130 ............................ <"Figure_System">
  [265] pusharglist 1 ........................... <"Figure_System">
  [267] extcall 110 ............................. <getObject("Figure_System")>
  [269] getlocal 0 .............................. <tPart>
  [271] getprop 70 .............................. <pPropsToServer>
  [273] pushcons 62 ............................. <"sex">
  [275] pusharglist 2 ........................... <pPropsToServer, "sex">
  [277] objcall 105 ............................. <pPropsToServer["sex"]>
  [279] pusharglist 3 ........................... <getObject("Figure_System"), tPart, pPropsToServer["sex"]>
  [281] objcall 228 ............................. <getObject("Figure_System").getCountOfPart(tPart, pPropsToServer["sex"])>
  [283] setlocal 3 .............................. tMaxValue = getObject("Figure_System").getCountOfPart(tPart, pPropsToServer["sex"])
  [285] getlocal 3 .............................. <tMaxValue>
  [287] pusharglist 1 ........................... <tMaxValue>
  [289] extcall 229 ............................. <random(tMaxValue)>
  [291] setlocal 4 .............................. tNumber = random(tMaxValue)
  [293] jmp [300]
  [296] pushint8 1 .............................. <1>
  [298] setlocal 4 .............................. tNumber = 1
  [300] pushcons 130 ............................ <"Figure_System">
  [302] pusharglist 1 ........................... <"Figure_System">
  [304] extcall 110 ............................. <getObject("Figure_System")>
  [306] getlocal 0 .............................. <tPart>
  [308] getlocal 4 .............................. <tNumber>
  [310] getprop 70 .............................. <pPropsToServer>
  [312] pushcons 62 ............................. <"sex">
  [314] pusharglist 2 ........................... <pPropsToServer, "sex">
  [316] objcall 105 ............................. <pPropsToServer["sex"]>
  [318] pusharglist 4 ........................... <getObject("Figure_System"), tPart, tNumber, pPropsToServer["sex"]>
  [320] objcall 230 ............................. <getObject("Figure_System").getModelOfPartByOrderNum(tPart, tNumber, pPropsToServer["sex"])>
  [322] setlocal 5 .............................. tPartProps = getObject("Figure_System").getModelOfPartByOrderNum(tPart, tNumber, pPropsToServer["sex"])
  [324] getlocal 5 .............................. <tPartProps>
  [326] getobjprop 102 .......................... <tPartProps.ilk>
  [328] pushsymb 182 ............................ <#propList>
  [330] eq ...................................... <tPartProps.ilk = #propList>
  [331] jmpifz [591] ............................ if tPartProps.ilk = #propList then
  [334] getlocal 5 .............................. <tPartProps>
  [336] pushcons 146 ............................ <"firstcolor">
  [338] pusharglist 2 ........................... <tPartProps, "firstcolor">
  [340] objcall 105 ............................. <tPartProps["firstcolor"]>
  [342] setlocal 6 .............................. tColorList = tPartProps["firstcolor"]
  [344] getlocal 5 .............................. <tPartProps>
  [346] pushcons 147 ............................ <"setid">
  [348] pusharglist 2 ........................... <tPartProps, "setid">
  [350] objcall 105 ............................. <tPartProps["setid"]>
  [352] setlocal 7 .............................. tSetID = tPartProps["setid"]
  [354] pushint8 1 .............................. <1>
  [356] setlocal 8 .............................. tColorId = 1
  [358] getlocal 6 .............................. <tColorList>
  [360] pusharglist 1 ........................... <tColorList>
  [362] extcall 231 ............................. <listp(tColorList)>
  [364] not ..................................... <not listp(tColorList)>
  [365] jmpifz [376] ............................ if not listp(tColorList) then
  [368] getlocal 6 .............................. <tColorList>
  [370] pusharglist 1 ........................... <tColorList>
  [372] extcall 103 ............................. <list(tColorList)>
  [374] setlocal 6 .............................. tColorList = list(tColorList)
  [376] pushint8 1 .............................. <1>
  [378] setlocal 9
  [380] getlocal 9
  [382] getlocal 5 .............................. <tPartProps>
  [384] pushcons 148 ............................ <"changeparts">
  [386] pusharglist 2 ........................... <tPartProps, "changeparts">
  [388] objcall 105 ............................. <tPartProps["changeparts"]>
  [390] getobjprop 104 .......................... <tPartProps["changeparts"].count>
  [392] lteq
  [393] jmpifz [591] ............................ repeat with f = 1 to tPartProps["changeparts"].count
  [396] getlocal 5 .............................. <tPartProps>
  [398] pushcons 148 ............................ <"changeparts">
  [400] pusharglist 2 ........................... <tPartProps, "changeparts">
  [402] objcall 105 ............................. <tPartProps["changeparts"]>
  [404] getlocal 9 .............................. <f>
  [406] pusharglist 2 ........................... <tPartProps["changeparts"], f>
  [408] objcall 204 ............................. <tPartProps["changeparts"].getPropAt(f)>
  [410] setlocal 10 ............................. tMultiPart = tPartProps["changeparts"].getPropAt(f)
  [412] getlocal 5 .............................. <tPartProps>
  [414] pushcons 148 ............................ <"changeparts">
  [416] pusharglist 2 ........................... <tPartProps, "changeparts">
  [418] objcall 105 ............................. <tPartProps["changeparts"]>
  [420] getlocal 10 ............................. <tMultiPart>
  [422] pusharglist 2 ........................... <tPartProps["changeparts"], tMultiPart>
  [424] objcall 105 ............................. <tPartProps["changeparts"][tMultiPart]>
  [426] pusharglist 1 ........................... <tPartProps["changeparts"][tMultiPart]>
  [428] extcall 176 ............................. <string(tPartProps["changeparts"][tMultiPart])>
  [430] setlocal 1 .............................. tmodel = string(tPartProps["changeparts"][tMultiPart])
  [432] getlocal 1 .............................. <tmodel>
  [434] pushsymb 185 ............................ <#char>
  [436] pusharglist 2 ........................... <tmodel, #char>
  [438] objcall 104 ............................. <tmodel.char.count>
  [440] pushint8 1 .............................. <1>
  [442] eq ...................................... <tmodel.char.count = 1>
  [443] jmpifz [456] ............................ if tmodel.char.count = 1 then / else
  [446] pushcons 149 ............................ <"00">
  [448] getlocal 1 .............................. <tmodel>
  [450] joinstr ................................. <"00" & tmodel>
  [451] setlocal 1 .............................. tmodel = "00" & tmodel
  [453] jmp [477]
  [456] getlocal 1 .............................. <tmodel>
  [458] pushsymb 185 ............................ <#char>
  [460] pusharglist 2 ........................... <tmodel, #char>
  [462] objcall 104 ............................. <tmodel.char.count>
  [464] pushint8 2 .............................. <2>
  [466] eq ...................................... <tmodel.char.count = 2>
  [467] jmpifz [477] ............................ if tmodel.char.count = 2 then
  [470] pushcons 31 ............................. <"0">
  [472] getlocal 1 .............................. <tmodel>
  [474] joinstr ................................. <"0" & tmodel>
  [475] setlocal 1 .............................. tmodel = "0" & tmodel
  [477] getlocal 6 .............................. <tColorList>
  [479] getobjprop 104 .......................... <tColorList.count>
  [481] getlocal 9 .............................. <f>
  [483] gteq .................................... <tColorList.count >= f>
  [484] jmpifz [504] ............................ if tColorList.count >= f then / else
  [487] getlocal 6 .............................. <tColorList>
  [489] getlocal 9 .............................. <f>
  [491] pusharglist 2 ........................... <tColorList, f>
  [493] objcall 105 ............................. <tColorList[f]>
  [495] pusharglist 1 ........................... <tColorList[f]>
  [497] extcall 232 ............................. <rgb(tColorList[f])>
  [499] setlocal 2 .............................. tColor = rgb(tColorList[f])
  [501] jmp [518]
  [504] getlocal 6 .............................. <tColorList>
  [506] pushint8 1 .............................. <1>
  [508] pusharglist 2 ........................... <tColorList, 1>
  [510] objcall 105 ............................. <tColorList[1]>
  [512] pusharglist 1 ........................... <tColorList[1]>
  [514] extcall 232 ............................. <rgb(tColorList[1])>
  [516] setlocal 2 .............................. tColor = rgb(tColorList[1])
  [518] getparam 0 .............................. <me>
  [520] getlocal 10 ............................. <tMultiPart>
  [522] getlocal 1 .............................. <tmodel>
  [524] pusharglistnoret 3 ...................... <me, tMultiPart, tmodel>
  [526] objcall 41 .............................. me.setPartModel(tMultiPart, tmodel)
  [528] getparam 0 .............................. <me>
  [530] getlocal 10 ............................. <tMultiPart>
  [532] getlocal 2 .............................. <tColor>
  [534] pusharglistnoret 3 ...................... <me, tMultiPart, tColor>
  [536] objcall 40 .............................. me.setPartColor(tMultiPart, tColor)
  [538] getprop 70 .............................. <pPropsToServer>
  [540] pushcons 46 ............................. <"figure">
  [542] pusharglist 2 ........................... <pPropsToServer, "figure">
  [544] objcall 105 ............................. <pPropsToServer["figure"]>
  [546] getlocal 10 ............................. <tMultiPart>
  [548] pushcons 144 ............................ <"model">
  [550] getlocal 1 .............................. <tmodel>
  [552] pushcons 145 ............................ <"color">
  [554] getlocal 2 .............................. <tColor>
  [556] pushcons 147 ............................ <"setid">
  [558] getlocal 7 .............................. <tSetID>
  [560] pushcons 150 ............................ <"colorid">
  [562] getlocal 8 .............................. <tColorId>
  [564] pusharglist 8 ........................... <["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [566] pushproplist ............................ <["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [567] pusharglistnoret 3 ...................... <pPropsToServer["figure"], tMultiPart, ["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [569] objcall 174 ............................. pPropsToServer["figure"][tMultiPart] = ["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]
  [571] getparam 0 .............................. <me>
  [573] pushcons 151 ............................ <"partcolor">
  [575] getlocal 10 ............................. <tMultiPart>
  [577] pushzero ................................ <0>
  [578] pusharglistnoret 4 ...................... <me, "partcolor", tMultiPart, 0>
  [580] objcall 42 .............................. me.setIndexNumOfPartOrColor("partcolor", tMultiPart, 0)
  [582] pushint8 1
  [584] getlocal 9
  [586] add
  [587] setlocal 9
  [589] endrepeat [380]
  [591] pushint8 1
  [593] add
  [594] endrepeat [228]
  [597] pop 3
  [599] getparam 0 .............................. <me>
  [601] pusharglistnoret 1 ...................... <me>
  [603] objcall 35 .............................. me.updateFigurePreview()
  [605] getparam 0 .............................. <me>
  [607] pusharglistnoret 1 ...................... <me>
  [609] objcall 36 .............................. me.updateAllPrewIcons()
  [611] ret
end

on createTemplateHuman me
  [  0] getprop 91 .............................. <pBodyPartObjects>
  [  2] pusharglist 1 ........................... <pBodyPartObjects>
  [  4] extcall 100 ............................. <voidp(pBodyPartObjects)>
  [  6] not ..................................... <not voidp(pBodyPartObjects)>
  [  7] jmpifz [ 15] ............................ if not voidp(pBodyPartObjects) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 89 .............................. return 0
  [ 15] getprop 70 .............................. <pPropsToServer>
  [ 17] setlocal 0 .............................. tProps = pPropsToServer
  [ 19] pushcons 152 ............................ <"h">
  [ 21] setprop 244 ............................. pPeopleSize = "h"
  [ 23] pushint8 1 .............................. <1>
  [ 25] pushint8 1 .............................. <1>
  [ 27] pushint8 8 .............................. <8>
  [ 29] pusharglist 3 ........................... <1, 1, 8>
  [ 31] extcall 220 ............................. <image(1, 1, 8)>
  [ 33] setprop 245 ............................. pBuffer = image(1, 1, 8)
  [ 35] pushzero ................................ <0>
  [ 36] pushint8 1 .............................. <1>
  [ 38] pushint8 2 .............................. <2>
  [ 40] pushint8 3 .............................. <3>
  [ 42] pushint8 2 .............................. <2>
  [ 44] pushint8 1 .............................. <1>
  [ 46] pushzero ................................ <0>
  [ 47] pushint8 7 .............................. <7>
  [ 49] pusharglist 8 ........................... <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 51] pushlist ................................ <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 52] setprop 246 ............................. pFlipList = [0, 1, 2, 3, 2, 1, 0, 7]
  [ 54] pusharglist 0 ........................... <[:]>
  [ 56] pushproplist ............................ <[:]>
  [ 57] setprop 91 .............................. pBodyPartObjects = [:]
  [ 59] pushcons 132 ............................ <"lh">
  [ 61] pushcons 133 ............................ <"ls">
  [ 63] pushcons 134 ............................ <"bd">
  [ 65] pushcons 135 ............................ <"sh">
  [ 67] pushcons 136 ............................ <"lg">
  [ 69] pushcons 137 ............................ <"ch">
  [ 71] pushcons 138 ............................ <"hd">
  [ 73] pushcons 139 ............................ <"fc">
  [ 75] pushcons 140 ............................ <"ey">
  [ 77] pushcons 141 ............................ <"hr">
  [ 79] pushcons 142 ............................ <"rh">
  [ 81] pushcons 143 ............................ <"rs">
  [ 83] pusharglist 12 .......................... <["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"]>
  [ 85] pushlist ................................ <["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"]>
  [ 86] peek 0
  [ 88] pusharglist 1
  [ 90] extcall 104
  [ 92] pushint8 1
  [ 94] peek 0
  [ 96] peek 2
  [ 98] lteq
  [ 99] jmpifz [211] ............................ repeat with tPart in ["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"]
  [102] peek 2
  [104] peek 1
  [106] pusharglist 2
  [108] extcall 105
  [110] setlocal 1
  [112] getprop 70 .............................. <pPropsToServer>
  [114] pushcons 46 ............................. <"figure">
  [116] pusharglist 2 ........................... <pPropsToServer, "figure">
  [118] objcall 105 ............................. <pPropsToServer["figure"]>
  [120] getlocal 1 .............................. <tPart>
  [122] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [124] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [126] pushcons 144 ............................ <"model">
  [128] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "model">
  [130] objcall 105 ............................. <pPropsToServer["figure"][tPart]["model"]>
  [132] setlocal 2 .............................. tmodel = pPropsToServer["figure"][tPart]["model"]
  [134] getprop 70 .............................. <pPropsToServer>
  [136] pushcons 46 ............................. <"figure">
  [138] pusharglist 2 ........................... <pPropsToServer, "figure">
  [140] objcall 105 ............................. <pPropsToServer["figure"]>
  [142] getlocal 1 .............................. <tPart>
  [144] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [146] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [148] pushcons 145 ............................ <"color">
  [150] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "color">
  [152] objcall 105 ............................. <pPropsToServer["figure"][tPart]["color"]>
  [154] setlocal 3 .............................. tColor = pPropsToServer["figure"][tPart]["color"]
  [156] pushint8 1 .............................. <1>
  [158] setlocal 4 .............................. tDirection = 1
  [160] pushcons 153 ............................ <"std">
  [162] setlocal 5 .............................. tAction = "std"
  [164] getparam 0 .............................. <me>
  [166] setlocal 6 .............................. tAncestor = me
  [168] pushsymb 248 ............................ <#temp>
  [170] pushcons 154 ............................ <"Bodypart Template Class">
  [172] pusharglist 2 ........................... <#temp, "Bodypart Template Class">
  [174] extcall 247 ............................. <createObject(#temp, "Bodypart Template Class")>
  [176] setlocal 7 .............................. tTempPartObj = createObject(#temp, "Bodypart Template Class")
  [178] getlocal 7 .............................. <tTempPartObj>
  [180] getlocal 1 .............................. <tPart>
  [182] getlocal 2 .............................. <tmodel>
  [184] getlocal 3 .............................. <tColor>
  [186] getlocal 4 .............................. <tDirection>
  [188] getlocal 5 .............................. <tAction>
  [190] getlocal 6 .............................. <tAncestor>
  [192] pusharglistnoret 7 ...................... <tTempPartObj, tPart, tmodel, tColor, tDirection, tAction, tAncestor>
  [194] objcall 249 ............................. tTempPartObj.define(tPart, tmodel, tColor, tDirection, tAction, tAncestor)
  [196] getprop 91 .............................. <pBodyPartObjects>
  [198] getlocal 1 .............................. <tPart>
  [200] getlocal 7 .............................. <tTempPartObj>
  [202] pusharglistnoret 3 ...................... <pBodyPartObjects, tPart, tTempPartObj>
  [204] objcall 250 ............................. pBodyPartObjects.addProp(tPart, tTempPartObj)
  [206] pushint8 1
  [208] add
  [209] endrepeat [ 94]
  [211] pop 3
  [213] ret
end

on getSetID me, tPart
  [  0] getprop 70 .............................. <pPropsToServer>
  [  2] pushcons 46 ............................. <"figure">
  [  4] pusharglist 2 ........................... <pPropsToServer, "figure">
  [  6] objcall 105 ............................. <pPropsToServer["figure"]>
  [  8] getparam 1 .............................. <tPart>
  [ 10] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [ 12] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [ 14] pusharglist 1 ........................... <pPropsToServer["figure"][tPart]>
  [ 16] extcall 100 ............................. <voidp(pPropsToServer["figure"][tPart])>
  [ 18] jmpifz [ 38] ............................ if voidp(pPropsToServer["figure"][tPart]) then
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 155 ............................ <"Part missing:">
  [ 25] getparam 1 .............................. <tPart>
  [ 27] joinpadstr .............................. <"Part missing:" && tPart>
  [ 28] pushsymb 34 ............................. <#getSetID>
  [ 30] pusharglist 3 ........................... <me, "Part missing:" && tPart, #getSetID>
  [ 32] extcall 85 .............................. <error(me, "Part missing:" && tPart, #getSetID)>
  [ 34] pusharglistnoret 1 ...................... <error(me, "Part missing:" && tPart, #getSetID)>
  [ 36] extcall 89 .............................. return error(me, "Part missing:" && tPart, #getSetID)
  [ 38] getprop 70 .............................. <pPropsToServer>
  [ 40] pushcons 46 ............................. <"figure">
  [ 42] pusharglist 2 ........................... <pPropsToServer, "figure">
  [ 44] objcall 105 ............................. <pPropsToServer["figure"]>
  [ 46] getparam 1 .............................. <tPart>
  [ 48] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [ 50] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [ 52] pushcons 147 ............................ <"setid">
  [ 54] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "setid">
  [ 56] objcall 105 ............................. <pPropsToServer["figure"][tPart]["setid"]>
  [ 58] pusharglist 1 ........................... <pPropsToServer["figure"][tPart]["setid"]>
  [ 60] extcall 100 ............................. <voidp(pPropsToServer["figure"][tPart]["setid"])>
  [ 62] jmpifz [ 82] ............................ if voidp(pPropsToServer["figure"][tPart]["setid"]) then
  [ 65] getparam 0 .............................. <me>
  [ 67] pushcons 156 ............................ <"Part setid missing:">
  [ 69] getparam 1 .............................. <tPart>
  [ 71] joinpadstr .............................. <"Part setid missing:" && tPart>
  [ 72] pushsymb 34 ............................. <#getSetID>
  [ 74] pusharglist 3 ........................... <me, "Part setid missing:" && tPart, #getSetID>
  [ 76] extcall 85 .............................. <error(me, "Part setid missing:" && tPart, #getSetID)>
  [ 78] pusharglistnoret 1 ...................... <error(me, "Part setid missing:" && tPart, #getSetID)>
  [ 80] extcall 89 .............................. return error(me, "Part setid missing:" && tPart, #getSetID)
  [ 82] getprop 70 .............................. <pPropsToServer>
  [ 84] pushcons 46 ............................. <"figure">
  [ 86] pusharglist 2 ........................... <pPropsToServer, "figure">
  [ 88] objcall 105 ............................. <pPropsToServer["figure"]>
  [ 90] getparam 1 .............................. <tPart>
  [ 92] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [ 94] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [ 96] pushcons 147 ............................ <"setid">
  [ 98] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "setid">
  [100] objcall 105 ............................. <pPropsToServer["figure"][tPart]["setid"]>
  [102] pusharglistnoret 1 ...................... <pPropsToServer["figure"][tPart]["setid"]>
  [104] extcall 89 .............................. return pPropsToServer["figure"][tPart]["setid"]
  [106] ret
end

on updateFigurePreview me
  [  0] getprop 91 .............................. <pBodyPartObjects>
  [  2] pusharglist 1 ........................... <pBodyPartObjects>
  [  4] extcall 100 ............................. <voidp(pBodyPartObjects)>
  [  6] not ..................................... <not voidp(pBodyPartObjects)>
  [  7] getprop 73 .............................. <pWindowTitle>
  [  9] pusharglist 1 ........................... <pWindowTitle>
  [ 11] extcall 93 .............................. <windowExists(pWindowTitle)>
  [ 13] and ..................................... <not voidp(pBodyPartObjects) and windowExists(pWindowTitle)>
  [ 14] jmpifz [247] ............................ if not voidp(pBodyPartObjects) and windowExists(pWindowTitle) then
  [ 17] getprop 73 .............................. <pWindowTitle>
  [ 19] pusharglist 1 ........................... <pWindowTitle>
  [ 21] extcall 130 ............................. <getWindow(pWindowTitle)>
  [ 23] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 25] getlocal 0 .............................. <tWndObj>
  [ 27] pushcons 157 ............................ <"human.preview.img">
  [ 29] pusharglist 2 ........................... <tWndObj, "human.preview.img">
  [ 31] objcall 135 ............................. <tWndObj.elementExists("human.preview.img")>
  [ 33] jmpifz [247] ............................ if tWndObj.elementExists("human.preview.img") then
  [ 36] pushint8 64 ............................. <64>
  [ 38] pushint8 102 ............................ <102>
  [ 40] pushint8 16 ............................. <16>
  [ 42] pusharglist 3 ........................... <64, 102, 16>
  [ 44] extcall 220 ............................. <image(64, 102, 16)>
  [ 46] setlocal 1 .............................. tHumanImg = image(64, 102, 16)
  [ 48] getparam 0 .............................. <me>
  [ 50] pushcons 132 ............................ <"lh">
  [ 52] pushcons 133 ............................ <"ls">
  [ 54] pushcons 134 ............................ <"bd">
  [ 56] pushcons 135 ............................ <"sh">
  [ 58] pushcons 136 ............................ <"lg">
  [ 60] pushcons 137 ............................ <"ch">
  [ 62] pushcons 138 ............................ <"hd">
  [ 64] pushcons 139 ............................ <"fc">
  [ 66] pushcons 140 ............................ <"ey">
  [ 68] pushcons 141 ............................ <"hr">
  [ 70] pushcons 142 ............................ <"rh">
  [ 72] pushcons 143 ............................ <"rs">
  [ 74] pusharglist 12 .......................... <["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"]>
  [ 76] pushlist ................................ <["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"]>
  [ 77] getlocal 1 .............................. <tHumanImg>
  [ 79] pusharglistnoret 3 ...................... <me, ["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"], tHumanImg>
  [ 81] objcall 39 .............................. me.getPartImg(["lh", "ls", "bd", "sh", "lg", "ch", "hd", "fc", "ey", "hr", "rh", "rs"], tHumanImg)
  [ 83] getparam 0 .............................. <me>
  [ 85] getlocal 1 .............................. <tHumanImg>
  [ 87] pusharglist 2 ........................... <me, tHumanImg>
  [ 89] objcall 61 .............................. <me.flipImage(tHumanImg)>
  [ 91] setlocal 1 .............................. tHumanImg = me.flipImage(tHumanImg)
  [ 93] getlocal 0 .............................. <tWndObj>
  [ 95] pushcons 157 ............................ <"human.preview.img">
  [ 97] pusharglist 2 ........................... <tWndObj, "human.preview.img">
  [ 99] objcall 133 ............................. <tWndObj.getElement("human.preview.img")>
  [101] pushsymb 256 ............................ <#width>
  [104] pusharglist 2 ........................... <tWndObj.getElement("human.preview.img"), #width>
  [106] objcall 170 ............................. <tWndObj.getElement("human.preview.img").getProperty(#width)>
  [108] setlocal 2 .............................. tWidth = tWndObj.getElement("human.preview.img").getProperty(#width)
  [110] getlocal 0 .............................. <tWndObj>
  [112] pushcons 157 ............................ <"human.preview.img">
  [114] pusharglist 2 ........................... <tWndObj, "human.preview.img">
  [116] objcall 133 ............................. <tWndObj.getElement("human.preview.img")>
  [118] pushsymb 257 ............................ <#height>
  [121] pusharglist 2 ........................... <tWndObj.getElement("human.preview.img"), #height>
  [123] objcall 170 ............................. <tWndObj.getElement("human.preview.img").getProperty(#height)>
  [125] setlocal 3 .............................. tHeight = tWndObj.getElement("human.preview.img").getProperty(#height)
  [127] getlocal 2 .............................. <tWidth>
  [129] getlocal 3 .............................. <tHeight>
  [131] pushint8 16 ............................. <16>
  [133] pusharglist 3 ........................... <tWidth, tHeight, 16>
  [135] extcall 220 ............................. <image(tWidth, tHeight, 16)>
  [137] setlocal 4 .............................. tPrewImg = image(tWidth, tHeight, 16)
  [139] getlocal 4 .............................. <tPrewImg>
  [141] getobjprop 258 .......................... <tPrewImg.rect>
  [144] getlocal 1 .............................. <tHumanImg>
  [146] getobjprop 258 .......................... <tHumanImg.rect>
  [149] pushint8 2 .............................. <2>
  [151] mul ..................................... <tHumanImg.rect * 2>
  [152] sub ..................................... <tPrewImg.rect - (tHumanImg.rect * 2)>
  [153] setlocal 5 .............................. tdestrect = tPrewImg.rect - (tHumanImg.rect * 2)
  [155] pushint8 11 ............................. <11>
  [157] inv ..................................... <-11>
  [158] pushint8 6 .............................. <6>
  [160] inv ..................................... <-6>
  [161] pushint8 11 ............................. <11>
  [163] inv ..................................... <-11>
  [164] pushint8 6 .............................. <6>
  [166] inv ..................................... <-6>
  [167] pusharglist 4 ........................... <-11, -6, -11, -6>
  [169] extcall 258 ............................. <rect(-11, -6, -11, -6)>
  [172] setlocal 6 .............................. tMargins = rect(-11, -6, -11, -6)
  [174] pushzero ................................ <0>
  [175] getlocal 5 .............................. <tdestrect>
  [177] getobjprop 259 .......................... <tdestrect.bottom>
  [180] getlocal 1 .............................. <tHumanImg>
  [182] getobjprop 256 .......................... <tHumanImg.width>
  [185] pushint8 2 .............................. <2>
  [187] mul ..................................... <tHumanImg.width * 2>
  [188] getlocal 4 .............................. <tPrewImg>
  [190] getchainedprop 258 ...................... <tPrewImg.rect>
  [193] getobjprop 259 .......................... <tPrewImg.rect.bottom>
  [196] pusharglist 4 ........................... <0, tdestrect.bottom, tHumanImg.width * 2, tPrewImg.rect.bottom>
  [198] extcall 258 ............................. <rect(0, tdestrect.bottom, tHumanImg.width * 2, tPrewImg.rect.bottom)>
  [201] getlocal 6 .............................. <tMargins>
  [203] add ..................................... <rect(0, tdestrect.bottom, tHumanImg.width * 2, tPrewImg.rect.bottom) + tMargins>
  [204] setlocal 5 .............................. tdestrect = rect(0, tdestrect.bottom, tHumanImg.width * 2, tPrewImg.rect.bottom) + tMargins
  [206] getlocal 4 .............................. <tPrewImg>
  [208] getlocal 1 .............................. <tHumanImg>
  [210] getlocal 5 .............................. <tdestrect>
  [212] getlocal 1 .............................. <tHumanImg>
  [214] getobjprop 258 .......................... <tHumanImg.rect>
  [217] pusharglistnoret 4 ...................... <tPrewImg, tHumanImg, tdestrect, tHumanImg.rect>
  [219] objcall 260 ............................. tPrewImg.copyPixels(tHumanImg, tdestrect, tHumanImg.rect)
  [222] getlocal 0 .............................. <tWndObj>
  [224] pushcons 157 ............................ <"human.preview.img">
  [226] pusharglist 2 ........................... <tWndObj, "human.preview.img">
  [228] objcall 135 ............................. <tWndObj.elementExists("human.preview.img")>
  [230] jmpifz [247] ............................ if tWndObj.elementExists("human.preview.img") then
  [233] getlocal 0 .............................. <tWndObj>
  [235] pushcons 157 ............................ <"human.preview.img">
  [237] pusharglist 2 ........................... <tWndObj, "human.preview.img">
  [239] objcall 133 ............................. <tWndObj.getElement("human.preview.img")>
  [241] getlocal 4 .............................. <tPrewImg>
  [243] pusharglistnoret 2 ...................... <tWndObj.getElement("human.preview.img"), tPrewImg>
  [245] objcall 221 ............................. tWndObj.getElement("human.preview.img").feedImage(tPrewImg)
  [247] ret
end

on updateAllPrewIcons me
  [  0] pushcons 141 ............................ <"hr">
  [  2] pushcons 138 ............................ <"hd">
  [  4] pushcons 137 ............................ <"ch">
  [  6] pushcons 136 ............................ <"lg">
  [  8] pushcons 135 ............................ <"sh">
  [ 10] pusharglist 5 ........................... <["hr", "hd", "ch", "lg", "sh"]>
  [ 12] pushlist ................................ <["hr", "hd", "ch", "lg", "sh"]>
  [ 13] peek 0
  [ 15] pusharglist 1
  [ 17] extcall 104
  [ 19] pushint8 1
  [ 21] peek 0
  [ 23] peek 2
  [ 25] lteq
  [ 26] jmpifz [354] ............................ repeat with tPart in ["hr", "hd", "ch", "lg", "sh"]
  [ 29] peek 2
  [ 31] peek 1
  [ 33] pusharglist 2
  [ 35] extcall 105
  [ 37] setlocal 0
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 151 ............................ <"partcolor">
  [ 43] getlocal 0 .............................. <tPart>
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 4 ...................... <me, "partcolor", tPart, 0>
  [ 48] objcall 42 .............................. me.setIndexNumOfPartOrColor("partcolor", tPart, 0)
  [ 50] getparam 0 .............................. <me>
  [ 52] pushcons 158 ............................ <"partmodel">
  [ 54] getlocal 0 .............................. <tPart>
  [ 56] pushzero ................................ <0>
  [ 57] pusharglistnoret 4 ...................... <me, "partmodel", tPart, 0>
  [ 59] objcall 42 .............................. me.setIndexNumOfPartOrColor("partmodel", tPart, 0)
  [ 61] getprop 70 .............................. <pPropsToServer>
  [ 63] pushcons 46 ............................. <"figure">
  [ 65] pusharglist 2 ........................... <pPropsToServer, "figure">
  [ 67] objcall 105 ............................. <pPropsToServer["figure"]>
  [ 69] getlocal 0 .............................. <tPart>
  [ 71] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [ 73] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [ 75] pushcons 145 ............................ <"color">
  [ 77] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "color">
  [ 79] objcall 105 ............................. <pPropsToServer["figure"][tPart]["color"]>
  [ 81] pusharglist 1 ........................... <pPropsToServer["figure"][tPart]["color"]>
  [ 83] extcall 100 ............................. <voidp(pPropsToServer["figure"][tPart]["color"])>
  [ 85] not ..................................... <not voidp(pPropsToServer["figure"][tPart]["color"])>
  [ 86] jmpifz [348] ............................ if not voidp(pPropsToServer["figure"][tPart]["color"]) then
  [ 89] getparam 0 .............................. <me>
  [ 91] getlocal 0 .............................. <tPart>
  [ 93] getprop 70 .............................. <pPropsToServer>
  [ 95] pushcons 46 ............................. <"figure">
  [ 97] pusharglist 2 ........................... <pPropsToServer, "figure">
  [ 99] objcall 105 ............................. <pPropsToServer["figure"]>
  [101] getlocal 0 .............................. <tPart>
  [103] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [105] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [107] pushcons 145 ............................ <"color">
  [109] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "color">
  [111] objcall 105 ............................. <pPropsToServer["figure"][tPart]["color"]>
  [113] pusharglistnoret 3 ...................... <me, tPart, pPropsToServer["figure"][tPart]["color"]>
  [115] objcall 38 .............................. me.updatePartColorPreview(tPart, pPropsToServer["figure"][tPart]["color"])
  [117] getlocal 0 .............................. <tPart>
  [119] peek 0 .................................. case tPart of
  [121] pushcons 138 ............................ <"hd">
  [123] eq
  [124] jmpifz [211] ............................ (case) "hd":
  [127] pushcons 138 ............................ <"hd">
  [129] getprop 70 .............................. <pPropsToServer>
  [131] pushcons 46 ............................. <"figure">
  [133] pusharglist 2 ........................... <pPropsToServer, "figure">
  [135] objcall 105 ............................. <pPropsToServer["figure"]>
  [137] pushcons 138 ............................ <"hd">
  [139] pusharglist 2 ........................... <pPropsToServer["figure"], "hd">
  [141] objcall 105 ............................. <pPropsToServer["figure"]["hd"]>
  [143] pushcons 144 ............................ <"model">
  [145] pusharglist 2 ........................... <pPropsToServer["figure"]["hd"], "model">
  [147] objcall 105 ............................. <pPropsToServer["figure"]["hd"]["model"]>
  [149] pushcons 140 ............................ <"ey">
  [151] getprop 70 .............................. <pPropsToServer>
  [153] pushcons 46 ............................. <"figure">
  [155] pusharglist 2 ........................... <pPropsToServer, "figure">
  [157] objcall 105 ............................. <pPropsToServer["figure"]>
  [159] pushcons 140 ............................ <"ey">
  [161] pusharglist 2 ........................... <pPropsToServer["figure"], "ey">
  [163] objcall 105 ............................. <pPropsToServer["figure"]["ey"]>
  [165] pushcons 144 ............................ <"model">
  [167] pusharglist 2 ........................... <pPropsToServer["figure"]["ey"], "model">
  [169] objcall 105 ............................. <pPropsToServer["figure"]["ey"]["model"]>
  [171] pushcons 139 ............................ <"fc">
  [173] getprop 70 .............................. <pPropsToServer>
  [175] pushcons 46 ............................. <"figure">
  [177] pusharglist 2 ........................... <pPropsToServer, "figure">
  [179] objcall 105 ............................. <pPropsToServer["figure"]>
  [181] pushcons 139 ............................ <"fc">
  [183] pusharglist 2 ........................... <pPropsToServer["figure"], "fc">
  [185] objcall 105 ............................. <pPropsToServer["figure"]["fc"]>
  [187] pushcons 144 ............................ <"model">
  [189] pusharglist 2 ........................... <pPropsToServer["figure"]["fc"], "model">
  [191] objcall 105 ............................. <pPropsToServer["figure"]["fc"]["model"]>
  [193] pusharglist 6 ........................... <["hd": pPropsToServer["figure"]["hd"]["model"], "ey": pPropsToServer["figure"]["ey"]["model"], "fc": pPropsToServer["figure"]["fc"]["model"]]>
  [195] pushproplist ............................ <["hd": pPropsToServer["figure"]["hd"]["model"], "ey": pPropsToServer["figure"]["ey"]["model"], "fc": pPropsToServer["figure"]["fc"]["model"]]>
  [196] setlocal 1 .............................. tTemp = ["hd": pPropsToServer["figure"]["hd"]["model"], "ey": pPropsToServer["figure"]["ey"]["model"], "fc": pPropsToServer["figure"]["fc"]["model"]]
  [198] getparam 0 .............................. <me>
  [200] getlocal 0 .............................. <tPart>
  [202] getlocal 1 .............................. <tTemp>
  [204] pusharglistnoret 3 ...................... <me, tPart, tTemp>
  [206] objcall 37 .............................. me.updatePartPreview(tPart, tTemp)
  [208] jmp [346]
  [211] peek 0
  [213] pushcons 137 ............................ <"ch">
  [215] eq
  [216] jmpifz [303] ............................ (case) "ch":
  [219] pushcons 133 ............................ <"ls">
  [221] getprop 70 .............................. <pPropsToServer>
  [223] pushcons 46 ............................. <"figure">
  [225] pusharglist 2 ........................... <pPropsToServer, "figure">
  [227] objcall 105 ............................. <pPropsToServer["figure"]>
  [229] pushcons 133 ............................ <"ls">
  [231] pusharglist 2 ........................... <pPropsToServer["figure"], "ls">
  [233] objcall 105 ............................. <pPropsToServer["figure"]["ls"]>
  [235] pushcons 144 ............................ <"model">
  [237] pusharglist 2 ........................... <pPropsToServer["figure"]["ls"], "model">
  [239] objcall 105 ............................. <pPropsToServer["figure"]["ls"]["model"]>
  [241] pushcons 137 ............................ <"ch">
  [243] getprop 70 .............................. <pPropsToServer>
  [245] pushcons 46 ............................. <"figure">
  [247] pusharglist 2 ........................... <pPropsToServer, "figure">
  [249] objcall 105 ............................. <pPropsToServer["figure"]>
  [251] pushcons 137 ............................ <"ch">
  [253] pusharglist 2 ........................... <pPropsToServer["figure"], "ch">
  [255] objcall 105 ............................. <pPropsToServer["figure"]["ch"]>
  [257] pushcons 144 ............................ <"model">
  [259] pusharglist 2 ........................... <pPropsToServer["figure"]["ch"], "model">
  [261] objcall 105 ............................. <pPropsToServer["figure"]["ch"]["model"]>
  [263] pushcons 143 ............................ <"rs">
  [265] getprop 70 .............................. <pPropsToServer>
  [267] pushcons 46 ............................. <"figure">
  [269] pusharglist 2 ........................... <pPropsToServer, "figure">
  [271] objcall 105 ............................. <pPropsToServer["figure"]>
  [273] pushcons 143 ............................ <"rs">
  [275] pusharglist 2 ........................... <pPropsToServer["figure"], "rs">
  [277] objcall 105 ............................. <pPropsToServer["figure"]["rs"]>
  [279] pushcons 144 ............................ <"model">
  [281] pusharglist 2 ........................... <pPropsToServer["figure"]["rs"], "model">
  [283] objcall 105 ............................. <pPropsToServer["figure"]["rs"]["model"]>
  [285] pusharglist 6 ........................... <["ls": pPropsToServer["figure"]["ls"]["model"], "ch": pPropsToServer["figure"]["ch"]["model"], "rs": pPropsToServer["figure"]["rs"]["model"]]>
  [287] pushproplist ............................ <["ls": pPropsToServer["figure"]["ls"]["model"], "ch": pPropsToServer["figure"]["ch"]["model"], "rs": pPropsToServer["figure"]["rs"]["model"]]>
  [288] setlocal 1 .............................. tTemp = ["ls": pPropsToServer["figure"]["ls"]["model"], "ch": pPropsToServer["figure"]["ch"]["model"], "rs": pPropsToServer["figure"]["rs"]["model"]]
  [290] getparam 0 .............................. <me>
  [292] getlocal 0 .............................. <tPart>
  [294] getlocal 1 .............................. <tTemp>
  [296] pusharglistnoret 3 ...................... <me, tPart, tTemp>
  [298] objcall 37 .............................. me.updatePartPreview(tPart, tTemp)
  [300] jmp [346] ............................... (case) otherwise:
  [303] pusharglist 0 ........................... <[:]>
  [305] pushproplist ............................ <[:]>
  [306] setlocal 1 .............................. tTemp = [:]
  [308] getlocal 1 .............................. <tTemp>
  [310] getlocal 0 .............................. <tPart>
  [312] getprop 70 .............................. <pPropsToServer>
  [314] pushcons 46 ............................. <"figure">
  [316] pusharglist 2 ........................... <pPropsToServer, "figure">
  [318] objcall 105 ............................. <pPropsToServer["figure"]>
  [320] getlocal 0 .............................. <tPart>
  [322] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [324] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [326] pushcons 144 ............................ <"model">
  [328] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "model">
  [330] objcall 105 ............................. <pPropsToServer["figure"][tPart]["model"]>
  [332] pusharglistnoret 3 ...................... <tTemp, tPart, pPropsToServer["figure"][tPart]["model"]>
  [334] objcall 250 ............................. tTemp.addProp(tPart, pPropsToServer["figure"][tPart]["model"])
  [336] getparam 0 .............................. <me>
  [338] getlocal 0 .............................. <tPart>
  [340] getlocal 1 .............................. <tTemp>
  [342] pusharglistnoret 3 ...................... <me, tPart, tTemp>
  [344] objcall 37 .............................. me.updatePartPreview(tPart, tTemp)
  [346] pop 1 ................................... end case
  [348] pushint8 1
  [350] add
  [351] endrepeat [ 21]
  [354] pop 3
  [356] ret
end

on updatePartPreview me, tPart, tChangingPartPropList
  [  0] pushcons 159 ............................ <"part.">
  [  2] getparam 1 .............................. <tPart>
  [  4] joinstr ................................. <"part." & tPart>
  [  5] pushcons 160 ............................ <".preview">
  [  7] joinstr ................................. <"part." & tPart & ".preview">
  [  8] setlocal 0 .............................. tElemID = "part." & tPart & ".preview"
  [ 10] getprop 73 .............................. <pWindowTitle>
  [ 12] pusharglist 1 ........................... <pWindowTitle>
  [ 14] extcall 130 ............................. <getWindow(pWindowTitle)>
  [ 16] setlocal 1 .............................. tWndObj = getWindow(pWindowTitle)
  [ 18] getlocal 1 .............................. <tWndObj>
  [ 20] getlocal 0 .............................. <tElemID>
  [ 22] pusharglist 2 ........................... <tWndObj, tElemID>
  [ 24] objcall 133 ............................. <tWndObj.getElement(tElemID)>
  [ 26] setlocal 2 .............................. tElem = tWndObj.getElement(tElemID)
  [ 28] getprop 91 .............................. <pBodyPartObjects>
  [ 30] pusharglist 1 ........................... <pBodyPartObjects>
  [ 32] extcall 100 ............................. <voidp(pBodyPartObjects)>
  [ 34] not ..................................... <not voidp(pBodyPartObjects)>
  [ 35] getlocal 2 .............................. <tElem>
  [ 37] pushzero ................................ <0>
  [ 38] nteq .................................... <tElem <> 0>
  [ 39] and ..................................... <not voidp(pBodyPartObjects) and (tElem <> 0)>
  [ 40] jmpifz [424] ............................ if not voidp(pBodyPartObjects) and (tElem <> 0) then
  [ 43] pushint8 64 ............................. <64>
  [ 45] pushint8 102 ............................ <102>
  [ 47] pushint8 16 ............................. <16>
  [ 49] pusharglist 3 ........................... <64, 102, 16>
  [ 51] extcall 220 ............................. <image(64, 102, 16)>
  [ 53] setlocal 3 .............................. tTempPartImg = image(64, 102, 16)
  [ 55] pusharglist 0 ........................... <[]>
  [ 57] pushlist ................................ <[]>
  [ 58] setlocal 4 .............................. tPartList = []
  [ 60] getparam 1 .............................. <tPart>
  [ 62] peek 0 .................................. case tPart of
  [ 64] pushcons 138 ............................ <"hd">
  [ 66] eq
  [ 67] jmpifz [ 84] ............................ (case) "hd":
  [ 70] pushcons 138 ............................ <"hd">
  [ 72] pushcons 140 ............................ <"ey">
  [ 74] pushcons 139 ............................ <"fc">
  [ 76] pusharglist 3 ........................... <["hd", "ey", "fc"]>
  [ 78] pushlist ................................ <["hd", "ey", "fc"]>
  [ 79] setlocal 5 .............................. tTempChangingParts = ["hd", "ey", "fc"]
  [ 81] jmp [113]
  [ 84] peek 0
  [ 86] pushcons 137 ............................ <"ch">
  [ 88] eq
  [ 89] jmpifz [106] ............................ (case) "ch":
  [ 92] pushcons 133 ............................ <"ls">
  [ 94] pushcons 137 ............................ <"ch">
  [ 96] pushcons 143 ............................ <"rs">
  [ 98] pusharglist 3 ........................... <["ls", "ch", "rs"]>
  [100] pushlist ................................ <["ls", "ch", "rs"]>
  [101] setlocal 5 .............................. tTempChangingParts = ["ls", "ch", "rs"]
  [103] jmp [113] ............................... (case) otherwise:
  [106] getparam 1 .............................. <tPart>
  [108] pusharglist 1 ........................... <[tPart]>
  [110] pushlist ................................ <[tPart]>
  [111] setlocal 5 .............................. tTempChangingParts = [tPart]
  [113] pop 1 ................................... end case
  [115] getlocal 5 .............................. <tTempChangingParts>
  [117] peek 0
  [119] pusharglist 1
  [121] extcall 104
  [123] pushint8 1
  [125] peek 0
  [127] peek 2
  [129] lteq
  [130] jmpifz [267] ............................ repeat with tChancePart in tTempChangingParts
  [133] peek 2
  [135] peek 1
  [137] pusharglist 2
  [139] extcall 105
  [141] setlocal 6
  [143] getlocal 6 .............................. <tChancePart>
  [145] setlocal 7 .............................. tMultiPart = tChancePart
  [147] pushcons 141 ............................ <"hr">
  [149] pushcons 138 ............................ <"hd">
  [151] pushcons 137 ............................ <"ch">
  [153] pushcons 136 ............................ <"lg">
  [155] pushcons 135 ............................ <"sh">
  [157] pushcons 140 ............................ <"ey">
  [159] pushcons 139 ............................ <"fc">
  [161] pushcons 133 ............................ <"ls">
  [163] pushcons 143 ............................ <"rs">
  [165] pushcons 133 ............................ <"ls">
  [167] pushcons 143 ............................ <"rs">
  [169] pusharglist 11 .......................... <["hr", "hd", "ch", "lg", "sh", "ey", "fc", "ls", "rs", "ls", "rs"]>
  [171] pushlist ................................ <["hr", "hd", "ch", "lg", "sh", "ey", "fc", "ls", "rs", "ls", "rs"]>
  [172] setlocal 8 .............................. tTempChangeParts = ["hr", "hd", "ch", "lg", "sh", "ey", "fc", "ls", "rs", "ls", "rs"]
  [174] getlocal 8 .............................. <tTempChangeParts>
  [176] getlocal 7 .............................. <tMultiPart>
  [178] pusharglist 2 ........................... <tTempChangeParts, tMultiPart>
  [180] objcall 268 ............................. <tTempChangeParts.getOne(tMultiPart)>
  [183] pushzero ................................ <0>
  [184] gt ...................................... <tTempChangeParts.getOne(tMultiPart) > 0>
  [185] jmpifz [262] ............................ if tTempChangeParts.getOne(tMultiPart) > 0 then
  [188] getparam 2 .............................. <tChangingPartPropList>
  [190] getlocal 7 .............................. <tMultiPart>
  [192] pusharglist 2 ........................... <tChangingPartPropList, tMultiPart>
  [194] objcall 105 ............................. <tChangingPartPropList[tMultiPart]>
  [196] pusharglist 1 ........................... <tChangingPartPropList[tMultiPart]>
  [198] extcall 176 ............................. <string(tChangingPartPropList[tMultiPart])>
  [200] setlocal 9 .............................. tmodel = string(tChangingPartPropList[tMultiPart])
  [202] getlocal 4 .............................. <tPartList>
  [204] getlocal 7 .............................. <tMultiPart>
  [206] pusharglistnoret 2 ...................... <tPartList, tMultiPart>
  [208] objcall 269 ............................. tPartList.add(tMultiPart)
  [211] getlocal 9 .............................. <tmodel>
  [213] pusharglist 1 ........................... <tmodel>
  [215] extcall 214 ............................. <length(tmodel)>
  [217] pushint8 1 .............................. <1>
  [219] eq ...................................... <length(tmodel) = 1>
  [220] jmpifz [233] ............................ if length(tmodel) = 1 then / else
  [223] pushcons 149 ............................ <"00">
  [225] getlocal 9 .............................. <tmodel>
  [227] joinstr ................................. <"00" & tmodel>
  [228] setlocal 9 .............................. tmodel = "00" & tmodel
  [230] jmp [252]
  [233] getlocal 9 .............................. <tmodel>
  [235] pusharglist 1 ........................... <tmodel>
  [237] extcall 214 ............................. <length(tmodel)>
  [239] pushint8 2 .............................. <2>
  [241] eq ...................................... <length(tmodel) = 2>
  [242] jmpifz [252] ............................ if length(tmodel) = 2 then
  [245] pushcons 31 ............................. <"0">
  [247] getlocal 9 .............................. <tmodel>
  [249] joinstr ................................. <"0" & tmodel>
  [250] setlocal 9 .............................. tmodel = "0" & tmodel
  [252] getparam 0 .............................. <me>
  [254] getlocal 7 .............................. <tMultiPart>
  [256] getlocal 9 .............................. <tmodel>
  [258] pusharglistnoret 3 ...................... <me, tMultiPart, tmodel>
  [260] objcall 41 .............................. me.setPartModel(tMultiPart, tmodel)
  [262] pushint8 1
  [264] add
  [265] endrepeat [125]
  [267] pop 3
  [269] getparam 0 .............................. <me>
  [271] getlocal 4 .............................. <tPartList>
  [273] getlocal 3 .............................. <tTempPartImg>
  [275] pusharglistnoret 3 ...................... <me, tPartList, tTempPartImg>
  [277] objcall 39 .............................. me.getPartImg(tPartList, tTempPartImg)
  [279] getparam 0 .............................. <me>
  [281] getlocal 3 .............................. <tTempPartImg>
  [283] pusharglist 2 ........................... <me, tTempPartImg>
  [285] objcall 61 .............................. <me.flipImage(tTempPartImg)>
  [287] pusharglist 1 ........................... <me.flipImage(tTempPartImg)>
  [289] objcall 270 ............................. <me.flipImage(tTempPartImg).trimWhiteSpace()>
  [292] setlocal 3 .............................. tTempPartImg = me.flipImage(tTempPartImg).trimWhiteSpace()
  [294] getlocal 2 .............................. <tElem>
  [296] pushsymb 256 ............................ <#width>
  [299] pusharglist 2 ........................... <tElem, #width>
  [301] objcall 170 ............................. <tElem.getProperty(#width)>
  [303] setlocal 10 ............................. tWidth = tElem.getProperty(#width)
  [305] getlocal 2 .............................. <tElem>
  [307] pushsymb 257 ............................ <#height>
  [310] pusharglist 2 ........................... <tElem, #height>
  [312] objcall 170 ............................. <tElem.getProperty(#height)>
  [314] setlocal 11 ............................. tHeight = tElem.getProperty(#height)
  [316] getlocal 10 ............................. <tWidth>
  [318] getlocal 11 ............................. <tHeight>
  [320] pushint8 16 ............................. <16>
  [322] pusharglist 3 ........................... <tWidth, tHeight, 16>
  [324] extcall 220 ............................. <image(tWidth, tHeight, 16)>
  [326] setlocal 12 ............................. tPrewImg = image(tWidth, tHeight, 16)
  [328] getlocal 12 ............................. <tPrewImg>
  [330] getobjprop 258 .......................... <tPrewImg.rect>
  [333] getlocal 3 .............................. <tTempPartImg>
  [335] getobjprop 258 .......................... <tTempPartImg.rect>
  [338] sub ..................................... <tPrewImg.rect - tTempPartImg.rect>
  [339] setlocal 13 ............................. tdestrect = tPrewImg.rect - tTempPartImg.rect
  [341] getlocal 12 ............................. <tPrewImg>
  [343] getobjprop 256 .......................... <tPrewImg.width>
  [346] pushint8 2 .............................. <2>
  [348] div ..................................... <tPrewImg.width / 2>
  [349] getlocal 3 .............................. <tTempPartImg>
  [351] getobjprop 256 .......................... <tTempPartImg.width>
  [354] pushint8 2 .............................. <2>
  [356] div ..................................... <tTempPartImg.width / 2>
  [357] sub ..................................... <(tPrewImg.width / 2) - (tTempPartImg.width / 2)>
  [358] setlocal 14 ............................. tMarginH = (tPrewImg.width / 2) - (tTempPartImg.width / 2)
  [360] getlocal 12 ............................. <tPrewImg>
  [362] getobjprop 257 .......................... <tPrewImg.height>
  [365] pushint8 2 .............................. <2>
  [367] div ..................................... <tPrewImg.height / 2>
  [368] getlocal 3 .............................. <tTempPartImg>
  [370] getobjprop 257 .......................... <tTempPartImg.height>
  [373] pushint8 2 .............................. <2>
  [375] div ..................................... <tTempPartImg.height / 2>
  [376] sub ..................................... <(tPrewImg.height / 2) - (tTempPartImg.height / 2)>
  [377] setlocal 15 ............................. tMarginV = (tPrewImg.height / 2) - (tTempPartImg.height / 2)
  [379] getlocal 3 .............................. <tTempPartImg>
  [381] getobjprop 258 .......................... <tTempPartImg.rect>
  [384] getlocal 14 ............................. <tMarginH>
  [386] getlocal 15 ............................. <tMarginV>
  [388] getlocal 14 ............................. <tMarginH>
  [390] getlocal 15 ............................. <tMarginV>
  [392] pusharglist 4 ........................... <tMarginH, tMarginV, tMarginH, tMarginV>
  [394] extcall 258 ............................. <rect(tMarginH, tMarginV, tMarginH, tMarginV)>
  [397] add ..................................... <tTempPartImg.rect + rect(tMarginH, tMarginV, tMarginH, tMarginV)>
  [398] setlocal 13 ............................. tdestrect = tTempPartImg.rect + rect(tMarginH, tMarginV, tMarginH, tMarginV)
  [400] getlocal 12 ............................. <tPrewImg>
  [402] getlocal 3 .............................. <tTempPartImg>
  [404] getlocal 13 ............................. <tdestrect>
  [406] getlocal 3 .............................. <tTempPartImg>
  [408] getobjprop 258 .......................... <tTempPartImg.rect>
  [411] pusharglistnoret 4 ...................... <tPrewImg, tTempPartImg, tdestrect, tTempPartImg.rect>
  [413] objcall 260 ............................. tPrewImg.copyPixels(tTempPartImg, tdestrect, tTempPartImg.rect)
  [416] getlocal 2 .............................. <tElem>
  [418] getlocal 12 ............................. <tPrewImg>
  [420] pusharglistnoret 2 ...................... <tElem, tPrewImg>
  [422] objcall 221 ............................. tElem.feedImage(tPrewImg)
  [424] ret
end

on updatePartColorPreview me, tPart, tColor
  [  0] pushcons 161 ............................ <"part.color.">
  [  2] getparam 1 .............................. <tPart>
  [  4] joinstr ................................. <"part.color." & tPart>
  [  5] pushcons 160 ............................ <".preview">
  [  7] joinstr ................................. <"part.color." & tPart & ".preview">
  [  8] setlocal 0 .............................. tElemID = "part.color." & tPart & ".preview"
  [ 10] getparam 2 .............................. <tColor>
  [ 12] pusharglist 1 ........................... <tColor>
  [ 14] extcall 100 ............................. <voidp(tColor)>
  [ 16] jmpifz [ 34] ............................ if voidp(tColor) then
  [ 19] pushint16 255 ........................... <255>
  [ 22] pushint16 255 ........................... <255>
  [ 25] pushint16 255 ........................... <255>
  [ 28] pusharglist 3 ........................... <255, 255, 255>
  [ 30] extcall 232 ............................. <rgb(255, 255, 255)>
  [ 32] setparam 2 .............................. tColor = rgb(255, 255, 255)
  [ 34] getprop 73 .............................. <pWindowTitle>
  [ 36] pusharglist 1 ........................... <pWindowTitle>
  [ 38] extcall 130 ............................. <getWindow(pWindowTitle)>
  [ 40] setlocal 1 .............................. tWndObj = getWindow(pWindowTitle)
  [ 42] getlocal 1 .............................. <tWndObj>
  [ 44] getlocal 0 .............................. <tElemID>
  [ 46] pusharglist 2 ........................... <tWndObj, tElemID>
  [ 48] objcall 135 ............................. <tWndObj.elementExists(tElemID)>
  [ 50] jmpifz [ 73] ............................ if tWndObj.elementExists(tElemID) then
  [ 53] getlocal 1 .............................. <tWndObj>
  [ 55] getlocal 0 .............................. <tElemID>
  [ 57] pusharglist 2 ........................... <tWndObj, tElemID>
  [ 59] objcall 133 ............................. <tWndObj.getElement(tElemID)>
  [ 61] pushsymb 280 ............................ <#sprite>
  [ 64] pusharglist 2 ........................... <tWndObj.getElement(tElemID), #sprite>
  [ 66] objcall 170 ............................. <tWndObj.getElement(tElemID).getProperty(#sprite)>
  [ 68] getparam 2 .............................. <tColor>
  [ 70] setobjprop 281 .......................... tWndObj.getElement(tElemID).getProperty(#sprite).bgColor = tColor
  [ 73] ret
end

on getPartImg me, tPartList, tImg
  [  0] getparam 1 .............................. <tPartList>
  [  2] getobjprop 102 .......................... <tPartList.ilk>
  [  4] pushsymb 103 ............................ <#list>
  [  6] nteq .................................... <tPartList.ilk <> #list>
  [  7] jmpifz [ 17] ............................ if tPartList.ilk <> #list then
  [ 10] getparam 1 .............................. <tPartList>
  [ 12] pusharglist 1 ........................... <[tPartList]>
  [ 14] pushlist ................................ <[tPartList]>
  [ 15] setparam 1 .............................. tPartList = [tPartList]
  [ 17] getparam 1 .............................. <tPartList>
  [ 19] peek 0
  [ 21] pusharglist 1
  [ 23] extcall 104
  [ 25] pushint8 1
  [ 27] peek 0
  [ 29] peek 2
  [ 31] lteq
  [ 32] jmpifz [ 71] ............................ repeat with tPart in tPartList
  [ 35] peek 2
  [ 37] peek 1
  [ 39] pusharglist 2
  [ 41] extcall 105
  [ 43] setlocal 0
  [ 45] pushsymb 283 ............................ <#copyPicture>
  [ 48] getprop 91 .............................. <pBodyPartObjects>
  [ 50] getlocal 0 .............................. <tPart>
  [ 52] pusharglist 2 ........................... <pBodyPartObjects, tPart>
  [ 54] objcall 105 ............................. <pBodyPartObjects[tPart]>
  [ 56] pusharglist 1 ........................... <[pBodyPartObjects[tPart]]>
  [ 58] pushlist ................................ <[pBodyPartObjects[tPart]]>
  [ 59] getparam 2 .............................. <tImg>
  [ 61] pusharglistnoret 3 ...................... <#copyPicture, [pBodyPartObjects[tPart]], tImg>
  [ 63] extcall 282 ............................. call(#copyPicture, [pBodyPartObjects[tPart]], tImg)
  [ 66] pushint8 1
  [ 68] add
  [ 69] endrepeat [ 27]
  [ 71] pop 3
  [ 73] ret
end

on setPartColor me, tPart, tColor
  [  0] getprop 91 .............................. <pBodyPartObjects>
  [  2] pusharglist 1 ........................... <pBodyPartObjects>
  [  4] extcall 100 ............................. <voidp(pBodyPartObjects)>
  [  6] not ..................................... <not voidp(pBodyPartObjects)>
  [  7] jmpifz [ 31] ............................ if not voidp(pBodyPartObjects) then
  [ 10] pushsymb 285 ............................ <#setColor>
  [ 13] getprop 91 .............................. <pBodyPartObjects>
  [ 15] getparam 1 .............................. <tPart>
  [ 17] pusharglist 2 ........................... <pBodyPartObjects, tPart>
  [ 19] objcall 105 ............................. <pBodyPartObjects[tPart]>
  [ 21] pusharglist 1 ........................... <[pBodyPartObjects[tPart]]>
  [ 23] pushlist ................................ <[pBodyPartObjects[tPart]]>
  [ 24] getparam 2 .............................. <tColor>
  [ 26] pusharglistnoret 3 ...................... <#setColor, [pBodyPartObjects[tPart]], tColor>
  [ 28] extcall 282 ............................. call(#setColor, [pBodyPartObjects[tPart]], tColor)
  [ 31] ret
end

on setPartModel me, tPart, tmodel
  [  0] getprop 91 .............................. <pBodyPartObjects>
  [  2] pusharglist 1 ........................... <pBodyPartObjects>
  [  4] extcall 100 ............................. <voidp(pBodyPartObjects)>
  [  6] not ..................................... <not voidp(pBodyPartObjects)>
  [  7] jmpifz [ 31] ............................ if not voidp(pBodyPartObjects) then
  [ 10] pushsymb 286 ............................ <#setModel>
  [ 13] getprop 91 .............................. <pBodyPartObjects>
  [ 15] getparam 1 .............................. <tPart>
  [ 17] pusharglist 2 ........................... <pBodyPartObjects, tPart>
  [ 19] objcall 105 ............................. <pBodyPartObjects[tPart]>
  [ 21] pusharglist 1 ........................... <[pBodyPartObjects[tPart]]>
  [ 23] pushlist ................................ <[pBodyPartObjects[tPart]]>
  [ 24] getparam 2 .............................. <tmodel>
  [ 26] pusharglistnoret 3 ...................... <#setModel, [pBodyPartObjects[tPart]], tmodel>
  [ 28] extcall 282 ............................. call(#setModel, [pBodyPartObjects[tPart]], tmodel)
  [ 31] ret
end

on setIndexNumOfPartOrColor me, tChange, tPart, tOrderNum, tMaxValue
  [  0] getprop 71 .............................. <pPartChangeButtons>
  [  2] getparam 1 .............................. <tChange>
  [  4] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [  6] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [  8] pusharglist 1 ........................... <pPartChangeButtons[tChange]>
  [ 10] extcall 100 ............................. <voidp(pPartChangeButtons[tChange])>
  [ 12] jmpifz [ 26] ............................ if voidp(pPartChangeButtons[tChange]) then
  [ 15] getprop 71 .............................. <pPartChangeButtons>
  [ 17] getparam 1 .............................. <tChange>
  [ 19] pusharglist 0 ........................... <[:]>
  [ 21] pushproplist ............................ <[:]>
  [ 22] pusharglistnoret 3 ...................... <pPartChangeButtons, tChange, [:]>
  [ 24] objcall 174 ............................. pPartChangeButtons[tChange] = [:]
  [ 26] getprop 71 .............................. <pPartChangeButtons>
  [ 28] getparam 1 .............................. <tChange>
  [ 30] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [ 32] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [ 34] getparam 2 .............................. <tPart>
  [ 36] pusharglist 2 ........................... <pPartChangeButtons[tChange], tPart>
  [ 38] objcall 105 ............................. <pPartChangeButtons[tChange][tPart]>
  [ 40] pusharglist 1 ........................... <pPartChangeButtons[tChange][tPart]>
  [ 42] extcall 100 ............................. <voidp(pPartChangeButtons[tChange][tPart])>
  [ 44] jmpifz [ 64] ............................ if voidp(pPartChangeButtons[tChange][tPart]) then
  [ 47] getprop 71 .............................. <pPartChangeButtons>
  [ 49] getparam 1 .............................. <tChange>
  [ 51] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [ 53] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [ 55] getparam 2 .............................. <tPart>
  [ 57] pusharglist 0 ........................... <[:]>
  [ 59] pushproplist ............................ <[:]>
  [ 60] pusharglistnoret 3 ...................... <pPartChangeButtons[tChange], tPart, [:]>
  [ 62] objcall 174 ............................. pPartChangeButtons[tChange][tPart] = [:]
  [ 64] getparam 3 .............................. <tOrderNum>
  [ 66] pushzero ................................ <0>
  [ 67] eq ...................................... <tOrderNum = 0>
  [ 68] jmpifz [ 90] ............................ if tOrderNum = 0 then / else
  [ 71] getprop 71 .............................. <pPartChangeButtons>
  [ 73] getparam 1 .............................. <tChange>
  [ 75] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [ 77] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [ 79] getparam 2 .............................. <tPart>
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglistnoret 3 ...................... <pPartChangeButtons[tChange], tPart, 1>
  [ 85] objcall 174 ............................. pPartChangeButtons[tChange][tPart] = 1
  [ 87] jmp [205]
  [ 90] getprop 71 .............................. <pPartChangeButtons>
  [ 92] getparam 1 .............................. <tChange>
  [ 94] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [ 96] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [ 98] getparam 2 .............................. <tPart>
  [100] pusharglist 2 ........................... <pPartChangeButtons[tChange], tPart>
  [102] objcall 105 ............................. <pPartChangeButtons[tChange][tPart]>
  [104] getparam 3 .............................. <tOrderNum>
  [106] add ..................................... <pPartChangeButtons[tChange][tPart] + tOrderNum>
  [107] getparam 4 .............................. <tMaxValue>
  [109] gt ...................................... <(pPartChangeButtons[tChange][tPart] + tOrderNum) > tMaxValue>
  [110] jmpifz [132] ............................ if (pPartChangeButtons[tChange][tPart] + tOrderNum) > tMaxValue then / else
  [113] getprop 71 .............................. <pPartChangeButtons>
  [115] getparam 1 .............................. <tChange>
  [117] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [119] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [121] getparam 2 .............................. <tPart>
  [123] pushint8 1 .............................. <1>
  [125] pusharglistnoret 3 ...................... <pPartChangeButtons[tChange], tPart, 1>
  [127] objcall 174 ............................. pPartChangeButtons[tChange][tPart] = 1
  [129] jmp [205]
  [132] getprop 71 .............................. <pPartChangeButtons>
  [134] getparam 1 .............................. <tChange>
  [136] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [138] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [140] getparam 2 .............................. <tPart>
  [142] pusharglist 2 ........................... <pPartChangeButtons[tChange], tPart>
  [144] objcall 105 ............................. <pPartChangeButtons[tChange][tPart]>
  [146] getparam 3 .............................. <tOrderNum>
  [148] add ..................................... <pPartChangeButtons[tChange][tPart] + tOrderNum>
  [149] pushint8 1 .............................. <1>
  [151] lt ...................................... <(pPartChangeButtons[tChange][tPart] + tOrderNum) < 1>
  [152] jmpifz [174] ............................ if (pPartChangeButtons[tChange][tPart] + tOrderNum) < 1 then / else
  [155] getprop 71 .............................. <pPartChangeButtons>
  [157] getparam 1 .............................. <tChange>
  [159] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [161] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [163] getparam 2 .............................. <tPart>
  [165] getparam 4 .............................. <tMaxValue>
  [167] pusharglistnoret 3 ...................... <pPartChangeButtons[tChange], tPart, tMaxValue>
  [169] objcall 174 ............................. pPartChangeButtons[tChange][tPart] = tMaxValue
  [171] jmp [205]
  [174] getprop 71 .............................. <pPartChangeButtons>
  [176] getparam 1 .............................. <tChange>
  [178] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [180] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [182] getparam 2 .............................. <tPart>
  [184] getprop 71 .............................. <pPartChangeButtons>
  [186] getparam 1 .............................. <tChange>
  [188] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [190] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [192] getparam 2 .............................. <tPart>
  [194] pusharglist 2 ........................... <pPartChangeButtons[tChange], tPart>
  [196] objcall 105 ............................. <pPartChangeButtons[tChange][tPart]>
  [198] getparam 3 .............................. <tOrderNum>
  [200] add ..................................... <pPartChangeButtons[tChange][tPart] + tOrderNum>
  [201] pusharglistnoret 3 ...................... <pPartChangeButtons[tChange], tPart, pPartChangeButtons[tChange][tPart] + tOrderNum>
  [203] objcall 174 ............................. pPartChangeButtons[tChange][tPart] = pPartChangeButtons[tChange][tPart] + tOrderNum
  [205] getprop 71 .............................. <pPartChangeButtons>
  [207] getparam 1 .............................. <tChange>
  [209] pusharglist 2 ........................... <pPartChangeButtons, tChange>
  [211] objcall 105 ............................. <pPartChangeButtons[tChange]>
  [213] getparam 2 .............................. <tPart>
  [215] pusharglist 2 ........................... <pPartChangeButtons[tChange], tPart>
  [217] objcall 105 ............................. <pPartChangeButtons[tChange][tPart]>
  [219] pusharglistnoret 1 ...................... <pPartChangeButtons[tChange][tPart]>
  [221] extcall 89 .............................. return pPartChangeButtons[tChange][tPart]
  [223] ret
end

on changePart me, tPart, tButtonDir
  [  0] pushcons 130 ............................ <"Figure_System">
  [  2] pusharglist 1 ........................... <"Figure_System">
  [  4] extcall 95 .............................. <objectExists("Figure_System")>
  [  6] not ..................................... <not objectExists("Figure_System")>
  [  7] jmpifz [ 24] ............................ if not objectExists("Figure_System") then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 131 ............................ <"Figure system object not found">
  [ 14] pushsymb 43 ............................. <#changePart>
  [ 16] pusharglist 3 ........................... <me, "Figure system object not found", #changePart>
  [ 18] extcall 85 .............................. <error(me, "Figure system object not found", #changePart)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #changePart)>
  [ 22] extcall 89 .............................. return error(me, "Figure system object not found", #changePart)
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <tPart>
  [ 28] pusharglist 2 ........................... <me, tPart>
  [ 30] objcall 34 .............................. <me.getSetID(tPart)>
  [ 32] setlocal 0 .............................. tSetID = me.getSetID(tPart)
  [ 34] getlocal 0 .............................. <tSetID>
  [ 36] pushzero ................................ <0>
  [ 37] eq ...................................... <tSetID = 0>
  [ 38] jmpifz [ 55] ............................ if tSetID = 0 then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 162 ............................ <"Incorrect part data">
  [ 45] pushsymb 43 ............................. <#changePart>
  [ 47] pusharglist 3 ........................... <me, "Incorrect part data", #changePart>
  [ 49] extcall 85 .............................. <error(me, "Incorrect part data", #changePart)>
  [ 51] pusharglistnoret 1 ...................... <error(me, "Incorrect part data", #changePart)>
  [ 53] extcall 89 .............................. return error(me, "Incorrect part data", #changePart)
  [ 55] pushcons 130 ............................ <"Figure_System">
  [ 57] pusharglist 1 ........................... <"Figure_System">
  [ 59] extcall 110 ............................. <getObject("Figure_System")>
  [ 61] getparam 1 .............................. <tPart>
  [ 63] getprop 70 .............................. <pPropsToServer>
  [ 65] pushcons 62 ............................. <"sex">
  [ 67] pusharglist 2 ........................... <pPropsToServer, "sex">
  [ 69] objcall 105 ............................. <pPropsToServer["sex"]>
  [ 71] pusharglist 3 ........................... <getObject("Figure_System"), tPart, pPropsToServer["sex"]>
  [ 73] objcall 228 ............................. <getObject("Figure_System").getCountOfPart(tPart, pPropsToServer["sex"])>
  [ 75] setlocal 1 .............................. tMaxValue = getObject("Figure_System").getCountOfPart(tPart, pPropsToServer["sex"])
  [ 77] getparam 0 .............................. <me>
  [ 79] pushcons 158 ............................ <"partmodel">
  [ 81] getparam 1 .............................. <tPart>
  [ 83] getparam 2 .............................. <tButtonDir>
  [ 85] getlocal 1 .............................. <tMaxValue>
  [ 87] pusharglist 5 ........................... <me, "partmodel", tPart, tButtonDir, tMaxValue>
  [ 89] objcall 42 .............................. <me.setIndexNumOfPartOrColor("partmodel", tPart, tButtonDir, tMaxValue)>
  [ 91] setlocal 2 .............................. tPartIndexNum = me.setIndexNumOfPartOrColor("partmodel", tPart, tButtonDir, tMaxValue)
  [ 93] pushcons 130 ............................ <"Figure_System">
  [ 95] pusharglist 1 ........................... <"Figure_System">
  [ 97] extcall 110 ............................. <getObject("Figure_System")>
  [ 99] getparam 1 .............................. <tPart>
  [101] getlocal 2 .............................. <tPartIndexNum>
  [103] getprop 70 .............................. <pPropsToServer>
  [105] pushcons 62 ............................. <"sex">
  [107] pusharglist 2 ........................... <pPropsToServer, "sex">
  [109] objcall 105 ............................. <pPropsToServer["sex"]>
  [111] pusharglist 4 ........................... <getObject("Figure_System"), tPart, tPartIndexNum, pPropsToServer["sex"]>
  [113] objcall 230 ............................. <getObject("Figure_System").getModelOfPartByOrderNum(tPart, tPartIndexNum, pPropsToServer["sex"])>
  [115] setlocal 3 .............................. tPartProps = getObject("Figure_System").getModelOfPartByOrderNum(tPart, tPartIndexNum, pPropsToServer["sex"])
  [117] getlocal 3 .............................. <tPartProps>
  [119] getobjprop 102 .......................... <tPartProps.ilk>
  [121] pushsymb 182 ............................ <#propList>
  [123] eq ...................................... <tPartProps.ilk = #propList>
  [124] jmpifz [488] ............................ if tPartProps.ilk = #propList then
  [127] getlocal 3 .............................. <tPartProps>
  [129] pushcons 146 ............................ <"firstcolor">
  [131] pusharglist 2 ........................... <tPartProps, "firstcolor">
  [133] objcall 105 ............................. <tPartProps["firstcolor"]>
  [135] setlocal 4 .............................. tColorList = tPartProps["firstcolor"]
  [137] getlocal 3 .............................. <tPartProps>
  [139] pushcons 147 ............................ <"setid">
  [141] pusharglist 2 ........................... <tPartProps, "setid">
  [143] objcall 105 ............................. <tPartProps["setid"]>
  [145] setlocal 0 .............................. tSetID = tPartProps["setid"]
  [147] pushint8 1 .............................. <1>
  [149] setlocal 5 .............................. tColorId = 1
  [151] getlocal 4 .............................. <tColorList>
  [153] pusharglist 1 ........................... <tColorList>
  [155] extcall 231 ............................. <listp(tColorList)>
  [157] not ..................................... <not listp(tColorList)>
  [158] jmpifz [169] ............................ if not listp(tColorList) then
  [161] getlocal 4 .............................. <tColorList>
  [163] pusharglist 1 ........................... <tColorList>
  [165] extcall 103 ............................. <list(tColorList)>
  [167] setlocal 4 .............................. tColorList = list(tColorList)
  [169] pushint8 1 .............................. <1>
  [171] setlocal 6
  [173] getlocal 6
  [175] getlocal 3 .............................. <tPartProps>
  [177] pushcons 148 ............................ <"changeparts">
  [179] pusharglist 2 ........................... <tPartProps, "changeparts">
  [181] objcall 105 ............................. <tPartProps["changeparts"]>
  [183] getobjprop 104 .......................... <tPartProps["changeparts"].count>
  [185] lteq
  [186] jmpifz [384] ............................ repeat with f = 1 to tPartProps["changeparts"].count
  [189] getlocal 3 .............................. <tPartProps>
  [191] pushcons 148 ............................ <"changeparts">
  [193] pusharglist 2 ........................... <tPartProps, "changeparts">
  [195] objcall 105 ............................. <tPartProps["changeparts"]>
  [197] getlocal 6 .............................. <f>
  [199] pusharglist 2 ........................... <tPartProps["changeparts"], f>
  [201] objcall 204 ............................. <tPartProps["changeparts"].getPropAt(f)>
  [203] setlocal 7 .............................. tMultiPart = tPartProps["changeparts"].getPropAt(f)
  [205] getlocal 3 .............................. <tPartProps>
  [207] pushcons 148 ............................ <"changeparts">
  [209] pusharglist 2 ........................... <tPartProps, "changeparts">
  [211] objcall 105 ............................. <tPartProps["changeparts"]>
  [213] getlocal 7 .............................. <tMultiPart>
  [215] pusharglist 2 ........................... <tPartProps["changeparts"], tMultiPart>
  [217] objcall 105 ............................. <tPartProps["changeparts"][tMultiPart]>
  [219] pusharglist 1 ........................... <tPartProps["changeparts"][tMultiPart]>
  [221] extcall 176 ............................. <string(tPartProps["changeparts"][tMultiPart])>
  [223] setlocal 8 .............................. tmodel = string(tPartProps["changeparts"][tMultiPart])
  [225] getlocal 8 .............................. <tmodel>
  [227] pushsymb 185 ............................ <#char>
  [229] pusharglist 2 ........................... <tmodel, #char>
  [231] objcall 104 ............................. <tmodel.char.count>
  [233] pushint8 1 .............................. <1>
  [235] eq ...................................... <tmodel.char.count = 1>
  [236] jmpifz [249] ............................ if tmodel.char.count = 1 then / else
  [239] pushcons 149 ............................ <"00">
  [241] getlocal 8 .............................. <tmodel>
  [243] joinstr ................................. <"00" & tmodel>
  [244] setlocal 8 .............................. tmodel = "00" & tmodel
  [246] jmp [270]
  [249] getlocal 8 .............................. <tmodel>
  [251] pushsymb 185 ............................ <#char>
  [253] pusharglist 2 ........................... <tmodel, #char>
  [255] objcall 104 ............................. <tmodel.char.count>
  [257] pushint8 2 .............................. <2>
  [259] eq ...................................... <tmodel.char.count = 2>
  [260] jmpifz [270] ............................ if tmodel.char.count = 2 then
  [263] pushcons 31 ............................. <"0">
  [265] getlocal 8 .............................. <tmodel>
  [267] joinstr ................................. <"0" & tmodel>
  [268] setlocal 8 .............................. tmodel = "0" & tmodel
  [270] getlocal 4 .............................. <tColorList>
  [272] getobjprop 104 .......................... <tColorList.count>
  [274] getlocal 6 .............................. <f>
  [276] gteq .................................... <tColorList.count >= f>
  [277] jmpifz [297] ............................ if tColorList.count >= f then / else
  [280] getlocal 4 .............................. <tColorList>
  [282] getlocal 6 .............................. <f>
  [284] pusharglist 2 ........................... <tColorList, f>
  [286] objcall 105 ............................. <tColorList[f]>
  [288] pusharglist 1 ........................... <tColorList[f]>
  [290] extcall 232 ............................. <rgb(tColorList[f])>
  [292] setlocal 9 .............................. tColor = rgb(tColorList[f])
  [294] jmp [311]
  [297] getlocal 4 .............................. <tColorList>
  [299] pushint8 1 .............................. <1>
  [301] pusharglist 2 ........................... <tColorList, 1>
  [303] objcall 105 ............................. <tColorList[1]>
  [305] pusharglist 1 ........................... <tColorList[1]>
  [307] extcall 232 ............................. <rgb(tColorList[1])>
  [309] setlocal 9 .............................. tColor = rgb(tColorList[1])
  [311] getparam 0 .............................. <me>
  [313] getlocal 7 .............................. <tMultiPart>
  [315] getlocal 8 .............................. <tmodel>
  [317] pusharglistnoret 3 ...................... <me, tMultiPart, tmodel>
  [319] objcall 41 .............................. me.setPartModel(tMultiPart, tmodel)
  [321] getparam 0 .............................. <me>
  [323] getlocal 7 .............................. <tMultiPart>
  [325] getlocal 9 .............................. <tColor>
  [327] pusharglistnoret 3 ...................... <me, tMultiPart, tColor>
  [329] objcall 40 .............................. me.setPartColor(tMultiPart, tColor)
  [331] getprop 70 .............................. <pPropsToServer>
  [333] pushcons 46 ............................. <"figure">
  [335] pusharglist 2 ........................... <pPropsToServer, "figure">
  [337] objcall 105 ............................. <pPropsToServer["figure"]>
  [339] getlocal 7 .............................. <tMultiPart>
  [341] pushcons 144 ............................ <"model">
  [343] getlocal 8 .............................. <tmodel>
  [345] pushcons 145 ............................ <"color">
  [347] getlocal 9 .............................. <tColor>
  [349] pushcons 147 ............................ <"setid">
  [351] getlocal 0 .............................. <tSetID>
  [353] pushcons 150 ............................ <"colorid">
  [355] getlocal 5 .............................. <tColorId>
  [357] pusharglist 8 ........................... <["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [359] pushproplist ............................ <["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [360] pusharglistnoret 3 ...................... <pPropsToServer["figure"], tMultiPart, ["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]>
  [362] objcall 174 ............................. pPropsToServer["figure"][tMultiPart] = ["model": tmodel, "color": tColor, "setid": tSetID, "colorid": tColorId]
  [364] getparam 0 .............................. <me>
  [366] pushcons 151 ............................ <"partcolor">
  [368] getlocal 7 .............................. <tMultiPart>
  [370] pushzero ................................ <0>
  [371] pusharglistnoret 4 ...................... <me, "partcolor", tMultiPart, 0>
  [373] objcall 42 .............................. me.setIndexNumOfPartOrColor("partcolor", tMultiPart, 0)
  [375] pushint8 1
  [377] getlocal 6
  [379] add
  [380] setlocal 6
  [382] endrepeat [173]
  [384] getprop 70 .............................. <pPropsToServer>
  [386] pushcons 46 ............................. <"figure">
  [388] pusharglist 2 ........................... <pPropsToServer, "figure">
  [390] objcall 105 ............................. <pPropsToServer["figure"]>
  [392] getparam 1 .............................. <tPart>
  [394] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [396] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [398] pusharglist 1 ........................... <pPropsToServer["figure"][tPart]>
  [400] extcall 100 ............................. <voidp(pPropsToServer["figure"][tPart])>
  [402] not ..................................... <not voidp(pPropsToServer["figure"][tPart])>
  [403] jmpifz [456] ............................ if not voidp(pPropsToServer["figure"][tPart]) then
  [406] getprop 70 .............................. <pPropsToServer>
  [408] pushcons 46 ............................. <"figure">
  [410] pusharglist 2 ........................... <pPropsToServer, "figure">
  [412] objcall 105 ............................. <pPropsToServer["figure"]>
  [414] getparam 1 .............................. <tPart>
  [416] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [418] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [420] pushcons 145 ............................ <"color">
  [422] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "color">
  [424] objcall 105 ............................. <pPropsToServer["figure"][tPart]["color"]>
  [426] pusharglist 1 ........................... <pPropsToServer["figure"][tPart]["color"]>
  [428] extcall 100 ............................. <voidp(pPropsToServer["figure"][tPart]["color"])>
  [430] not ..................................... <not voidp(pPropsToServer["figure"][tPart]["color"])>
  [431] jmpifz [456] ............................ if not voidp(pPropsToServer["figure"][tPart]["color"]) then
  [434] getprop 70 .............................. <pPropsToServer>
  [436] pushcons 46 ............................. <"figure">
  [438] pusharglist 2 ........................... <pPropsToServer, "figure">
  [440] objcall 105 ............................. <pPropsToServer["figure"]>
  [442] getparam 1 .............................. <tPart>
  [444] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [446] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [448] pushcons 145 ............................ <"color">
  [450] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "color">
  [452] objcall 105 ............................. <pPropsToServer["figure"][tPart]["color"]>
  [454] setlocal 9 .............................. tColor = pPropsToServer["figure"][tPart]["color"]
  [456] getparam 0 .............................. <me>
  [458] pusharglistnoret 1 ...................... <me>
  [460] objcall 35 .............................. me.updateFigurePreview()
  [462] getparam 0 .............................. <me>
  [464] getparam 1 .............................. <tPart>
  [466] getlocal 9 .............................. <tColor>
  [468] pusharglistnoret 3 ...................... <me, tPart, tColor>
  [470] objcall 38 .............................. me.updatePartColorPreview(tPart, tColor)
  [472] getparam 0 .............................. <me>
  [474] getparam 1 .............................. <tPart>
  [476] getlocal 3 .............................. <tPartProps>
  [478] pushcons 148 ............................ <"changeparts">
  [480] pusharglist 2 ........................... <tPartProps, "changeparts">
  [482] objcall 105 ............................. <tPartProps["changeparts"]>
  [484] pusharglistnoret 3 ...................... <me, tPart, tPartProps["changeparts"]>
  [486] objcall 37 .............................. me.updatePartPreview(tPart, tPartProps["changeparts"])
  [488] ret
end

on changePartColor me, tPart, tButtonDir
  [  0] pushcons 130 ............................ <"Figure_System">
  [  2] pusharglist 1 ........................... <"Figure_System">
  [  4] extcall 95 .............................. <objectExists("Figure_System")>
  [  6] not ..................................... <not objectExists("Figure_System")>
  [  7] jmpifz [ 24] ............................ if not objectExists("Figure_System") then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 131 ............................ <"Figure system object not found">
  [ 14] pushsymb 44 ............................. <#changePartColor>
  [ 16] pusharglist 3 ........................... <me, "Figure system object not found", #changePartColor>
  [ 18] extcall 85 .............................. <error(me, "Figure system object not found", #changePartColor)>
  [ 20] pusharglistnoret 1 ...................... <error(me, "Figure system object not found", #changePartColor)>
  [ 22] extcall 89 .............................. return error(me, "Figure system object not found", #changePartColor)
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <tPart>
  [ 28] pusharglist 2 ........................... <me, tPart>
  [ 30] objcall 34 .............................. <me.getSetID(tPart)>
  [ 32] setlocal 0 .............................. tSetID = me.getSetID(tPart)
  [ 34] getlocal 0 .............................. <tSetID>
  [ 36] pushzero ................................ <0>
  [ 37] eq ...................................... <tSetID = 0>
  [ 38] jmpifz [ 55] ............................ if tSetID = 0 then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 162 ............................ <"Incorrect part data">
  [ 45] pushsymb 44 ............................. <#changePartColor>
  [ 47] pusharglist 3 ........................... <me, "Incorrect part data", #changePartColor>
  [ 49] extcall 85 .............................. <error(me, "Incorrect part data", #changePartColor)>
  [ 51] pusharglistnoret 1 ...................... <error(me, "Incorrect part data", #changePartColor)>
  [ 53] extcall 89 .............................. return error(me, "Incorrect part data", #changePartColor)
  [ 55] pushcons 130 ............................ <"Figure_System">
  [ 57] pusharglist 1 ........................... <"Figure_System">
  [ 59] extcall 110 ............................. <getObject("Figure_System")>
  [ 61] getparam 1 .............................. <tPart>
  [ 63] getlocal 0 .............................. <tSetID>
  [ 65] getprop 70 .............................. <pPropsToServer>
  [ 67] pushcons 62 ............................. <"sex">
  [ 69] pusharglist 2 ........................... <pPropsToServer, "sex">
  [ 71] objcall 105 ............................. <pPropsToServer["sex"]>
  [ 73] pusharglist 4 ........................... <getObject("Figure_System"), tPart, tSetID, pPropsToServer["sex"]>
  [ 75] objcall 291 ............................. <getObject("Figure_System").getCountOfPartColors(tPart, tSetID, pPropsToServer["sex"])>
  [ 78] setlocal 1 .............................. tMaxValue = getObject("Figure_System").getCountOfPartColors(tPart, tSetID, pPropsToServer["sex"])
  [ 80] getparam 0 .............................. <me>
  [ 82] pushcons 151 ............................ <"partcolor">
  [ 84] getparam 1 .............................. <tPart>
  [ 86] getparam 2 .............................. <tButtonDir>
  [ 88] getlocal 1 .............................. <tMaxValue>
  [ 90] pusharglist 5 ........................... <me, "partcolor", tPart, tButtonDir, tMaxValue>
  [ 92] objcall 42 .............................. <me.setIndexNumOfPartOrColor("partcolor", tPart, tButtonDir, tMaxValue)>
  [ 94] setlocal 2 .............................. tColorIndexNum = me.setIndexNumOfPartOrColor("partcolor", tPart, tButtonDir, tMaxValue)
  [ 96] pushcons 130 ............................ <"Figure_System">
  [ 98] pusharglist 1 ........................... <"Figure_System">
  [100] extcall 110 ............................. <getObject("Figure_System")>
  [102] getparam 1 .............................. <tPart>
  [104] getlocal 2 .............................. <tColorIndexNum>
  [106] getlocal 0 .............................. <tSetID>
  [108] getprop 70 .............................. <pPropsToServer>
  [110] pushcons 62 ............................. <"sex">
  [112] pusharglist 2 ........................... <pPropsToServer, "sex">
  [114] objcall 105 ............................. <pPropsToServer["sex"]>
  [116] pusharglist 5 ........................... <getObject("Figure_System"), tPart, tColorIndexNum, tSetID, pPropsToServer["sex"]>
  [118] objcall 292 ............................. <getObject("Figure_System").getColorOfPartByOrderNum(tPart, tColorIndexNum, tSetID, pPropsToServer["sex"])>
  [121] setlocal 3 .............................. tPartProps = getObject("Figure_System").getColorOfPartByOrderNum(tPart, tColorIndexNum, tSetID, pPropsToServer["sex"])
  [123] getlocal 3 .............................. <tPartProps>
  [125] getobjprop 102 .......................... <tPartProps.ilk>
  [127] pushsymb 182 ............................ <#propList>
  [129] eq ...................................... <tPartProps.ilk = #propList>
  [130] jmpifz [405] ............................ if tPartProps.ilk = #propList then
  [133] getlocal 3 .............................. <tPartProps>
  [135] pushcons 145 ............................ <"color">
  [137] pusharglist 2 ........................... <tPartProps, "color">
  [139] objcall 105 ............................. <tPartProps["color"]>
  [141] setlocal 4 .............................. tColorList = tPartProps["color"]
  [143] getlocal 4 .............................. <tColorList>
  [145] pusharglist 1 ........................... <tColorList>
  [147] extcall 231 ............................. <listp(tColorList)>
  [149] not ..................................... <not listp(tColorList)>
  [150] jmpifz [161] ............................ if not listp(tColorList) then
  [153] getlocal 4 .............................. <tColorList>
  [155] pusharglist 1 ........................... <tColorList>
  [157] extcall 103 ............................. <list(tColorList)>
  [159] setlocal 4 .............................. tColorList = list(tColorList)
  [161] pushint8 1 .............................. <1>
  [163] setlocal 5
  [165] getlocal 5
  [167] getlocal 3 .............................. <tPartProps>
  [169] pushcons 148 ............................ <"changeparts">
  [171] pusharglist 2 ........................... <tPartProps, "changeparts">
  [173] objcall 105 ............................. <tPartProps["changeparts"]>
  [175] getobjprop 104 .......................... <tPartProps["changeparts"].count>
  [177] lteq
  [178] jmpifz [301] ............................ repeat with f = 1 to tPartProps["changeparts"].count
  [181] getlocal 3 .............................. <tPartProps>
  [183] pushcons 148 ............................ <"changeparts">
  [185] pusharglist 2 ........................... <tPartProps, "changeparts">
  [187] objcall 105 ............................. <tPartProps["changeparts"]>
  [189] getlocal 5 .............................. <f>
  [191] pusharglist 2 ........................... <tPartProps["changeparts"], f>
  [193] objcall 204 ............................. <tPartProps["changeparts"].getPropAt(f)>
  [195] setlocal 6 .............................. tMultiPart = tPartProps["changeparts"].getPropAt(f)
  [197] getlocal 4 .............................. <tColorList>
  [199] getobjprop 104 .......................... <tColorList.count>
  [201] getlocal 5 .............................. <f>
  [203] gteq .................................... <tColorList.count >= f>
  [204] jmpifz [224] ............................ if tColorList.count >= f then / else
  [207] getlocal 4 .............................. <tColorList>
  [209] getlocal 5 .............................. <f>
  [211] pusharglist 2 ........................... <tColorList, f>
  [213] objcall 105 ............................. <tColorList[f]>
  [215] pusharglist 1 ........................... <tColorList[f]>
  [217] extcall 232 ............................. <rgb(tColorList[f])>
  [219] setlocal 7 .............................. tColor = rgb(tColorList[f])
  [221] jmp [238]
  [224] getlocal 4 .............................. <tColorList>
  [226] pushint8 1 .............................. <1>
  [228] pusharglist 2 ........................... <tColorList, 1>
  [230] objcall 105 ............................. <tColorList[1]>
  [232] pusharglist 1 ........................... <tColorList[1]>
  [234] extcall 232 ............................. <rgb(tColorList[1])>
  [236] setlocal 7 .............................. tColor = rgb(tColorList[1])
  [238] getparam 0 .............................. <me>
  [240] getlocal 6 .............................. <tMultiPart>
  [242] getlocal 7 .............................. <tColor>
  [244] pusharglistnoret 3 ...................... <me, tMultiPart, tColor>
  [246] objcall 40 .............................. me.setPartColor(tMultiPart, tColor)
  [248] getprop 70 .............................. <pPropsToServer>
  [250] pushcons 46 ............................. <"figure">
  [252] pusharglist 2 ........................... <pPropsToServer, "figure">
  [254] objcall 105 ............................. <pPropsToServer["figure"]>
  [256] getlocal 6 .............................. <tMultiPart>
  [258] pusharglist 2 ........................... <pPropsToServer["figure"], tMultiPart>
  [260] objcall 105 ............................. <pPropsToServer["figure"][tMultiPart]>
  [262] pushcons 145 ............................ <"color">
  [264] getlocal 7 .............................. <tColor>
  [266] pusharglistnoret 3 ...................... <pPropsToServer["figure"][tMultiPart], "color", tColor>
  [268] objcall 174 ............................. pPropsToServer["figure"][tMultiPart]["color"] = tColor
  [270] getprop 70 .............................. <pPropsToServer>
  [272] pushcons 46 ............................. <"figure">
  [274] pusharglist 2 ........................... <pPropsToServer, "figure">
  [276] objcall 105 ............................. <pPropsToServer["figure"]>
  [278] getlocal 6 .............................. <tMultiPart>
  [280] pusharglist 2 ........................... <pPropsToServer["figure"], tMultiPart>
  [282] objcall 105 ............................. <pPropsToServer["figure"][tMultiPart]>
  [284] pushcons 150 ............................ <"colorid">
  [286] getlocal 2 .............................. <tColorIndexNum>
  [288] pusharglistnoret 3 ...................... <pPropsToServer["figure"][tMultiPart], "colorid", tColorIndexNum>
  [290] objcall 174 ............................. pPropsToServer["figure"][tMultiPart]["colorid"] = tColorIndexNum
  [292] pushint8 1
  [294] getlocal 5
  [296] add
  [297] setlocal 5
  [299] endrepeat [165]
  [301] getprop 70 .............................. <pPropsToServer>
  [303] pushcons 46 ............................. <"figure">
  [305] pusharglist 2 ........................... <pPropsToServer, "figure">
  [307] objcall 105 ............................. <pPropsToServer["figure"]>
  [309] getparam 1 .............................. <tPart>
  [311] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [313] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [315] pusharglist 1 ........................... <pPropsToServer["figure"][tPart]>
  [317] extcall 100 ............................. <voidp(pPropsToServer["figure"][tPart])>
  [319] not ..................................... <not voidp(pPropsToServer["figure"][tPart])>
  [320] jmpifz [373] ............................ if not voidp(pPropsToServer["figure"][tPart]) then
  [323] getprop 70 .............................. <pPropsToServer>
  [325] pushcons 46 ............................. <"figure">
  [327] pusharglist 2 ........................... <pPropsToServer, "figure">
  [329] objcall 105 ............................. <pPropsToServer["figure"]>
  [331] getparam 1 .............................. <tPart>
  [333] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [335] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [337] pushcons 145 ............................ <"color">
  [339] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "color">
  [341] objcall 105 ............................. <pPropsToServer["figure"][tPart]["color"]>
  [343] pusharglist 1 ........................... <pPropsToServer["figure"][tPart]["color"]>
  [345] extcall 100 ............................. <voidp(pPropsToServer["figure"][tPart]["color"])>
  [347] not ..................................... <not voidp(pPropsToServer["figure"][tPart]["color"])>
  [348] jmpifz [373] ............................ if not voidp(pPropsToServer["figure"][tPart]["color"]) then
  [351] getprop 70 .............................. <pPropsToServer>
  [353] pushcons 46 ............................. <"figure">
  [355] pusharglist 2 ........................... <pPropsToServer, "figure">
  [357] objcall 105 ............................. <pPropsToServer["figure"]>
  [359] getparam 1 .............................. <tPart>
  [361] pusharglist 2 ........................... <pPropsToServer["figure"], tPart>
  [363] objcall 105 ............................. <pPropsToServer["figure"][tPart]>
  [365] pushcons 145 ............................ <"color">
  [367] pusharglist 2 ........................... <pPropsToServer["figure"][tPart], "color">
  [369] objcall 105 ............................. <pPropsToServer["figure"][tPart]["color"]>
  [371] setlocal 7 .............................. tColor = pPropsToServer["figure"][tPart]["color"]
  [373] getparam 0 .............................. <me>
  [375] pusharglistnoret 1 ...................... <me>
  [377] objcall 35 .............................. me.updateFigurePreview()
  [379] getparam 0 .............................. <me>
  [381] getparam 1 .............................. <tPart>
  [383] getlocal 7 .............................. <tColor>
  [385] pusharglistnoret 3 ...................... <me, tPart, tColor>
  [387] objcall 38 .............................. me.updatePartColorPreview(tPart, tColor)
  [389] getparam 0 .............................. <me>
  [391] getparam 1 .............................. <tPart>
  [393] getlocal 3 .............................. <tPartProps>
  [395] pushcons 148 ............................ <"changeparts">
  [397] pusharglist 2 ........................... <tPartProps, "changeparts">
  [399] objcall 105 ............................. <tPartProps["changeparts"]>
  [401] pusharglistnoret 3 ...................... <me, tPart, tPartProps["changeparts"]>
  [403] objcall 37 .............................. me.updatePartPreview(tPart, tPartProps["changeparts"])
  [405] ret
end

on focusKeyboardToSprite me, tElemID
  [  0] getprop 73 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 130 ............................. <getWindow(pWindowTitle)>
  [  6] getparam 1 .............................. <tElemID>
  [  8] pusharglist 2 ........................... <getWindow(pWindowTitle), tElemID>
  [ 10] objcall 133 ............................. <getWindow(pWindowTitle).getElement(tElemID)>
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 2 ...................... <getWindow(pWindowTitle).getElement(tElemID), 1>
  [ 16] objcall 190 ............................. getWindow(pWindowTitle).getElement(tElemID).setFocus(1)
  [ 18] ret
end

on checkName me
  [  0] getprop 112 ............................. <pmode>
  [  2] pushcons 60 ............................. <"registration">
  [  4] eq ...................................... <pmode = "registration">
  [  5] getprop 112 ............................. <pmode>
  [  7] pushcons 42 ............................. <"parent_email">
  [  9] eq ...................................... <pmode = "parent_email">
  [ 10] or ...................................... <(pmode = "registration") or (pmode = "parent_email")>
  [ 11] getprop 112 ............................. <pmode>
  [ 13] pushcons 43 ............................. <"parent_email_strong_coppa">
  [ 15] eq ...................................... <pmode = "parent_email_strong_coppa">
  [ 16] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [ 17] getprop 112 ............................. <pmode>
  [ 19] pushcons 41 ............................. <"topt_verification">
  [ 21] eq ...................................... <pmode = "topt_verification">
  [ 22] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification")>
  [ 23] jmpifz [212] ............................ if (pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification") then
  [ 26] getprop 73 .............................. <pWindowTitle>
  [ 28] pusharglist 1 ........................... <pWindowTitle>
  [ 30] extcall 130 ............................. <getWindow(pWindowTitle)>
  [ 32] pushcons 97 ............................. <"char_name_field">
  [ 34] pusharglist 2 ........................... <getWindow(pWindowTitle), "char_name_field">
  [ 36] objcall 133 ............................. <getWindow(pWindowTitle).getElement("char_name_field")>
  [ 38] setlocal 0 .............................. tField = getWindow(pWindowTitle).getElement("char_name_field")
  [ 40] getlocal 0 .............................. <tField>
  [ 42] pushzero ................................ <0>
  [ 43] eq ...................................... <tField = 0>
  [ 44] jmpifz [ 61] ............................ if tField = 0 then
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 163 ............................ <"Couldn't perform name check!">
  [ 51] pushsymb 46 ............................. <#checkName>
  [ 53] pusharglist 3 ........................... <me, "Couldn't perform name check!", #checkName>
  [ 55] extcall 85 .............................. <error(me, "Couldn't perform name check!", #checkName)>
  [ 57] pusharglistnoret 1 ...................... <error(me, "Couldn't perform name check!", #checkName)>
  [ 59] extcall 89 .............................. return error(me, "Couldn't perform name check!", #checkName)
  [ 61] getlocal 0 .............................. <tField>
  [ 63] pusharglist 1 ........................... <tField>
  [ 65] objcall 74 .............................. <tField.getText()>
  [ 67] pushsymb 294 ............................ <#word>
  [ 70] pushint8 1 .............................. <1>
  [ 72] pusharglist 3 ........................... <tField.getText(), #word, 1>
  [ 74] objcall 186 ............................. <tField.getText().word[1]>
  [ 76] setlocal 1 .............................. tName = tField.getText().word[1]
  [ 78] getlocal 0 .............................. <tField>
  [ 80] getlocal 1 .............................. <tName>
  [ 82] pusharglistnoret 2 ...................... <tField, tName>
  [ 84] objcall 134 ............................. tField.setText(tName)
  [ 86] getlocal 1 .............................. <tName>
  [ 88] pusharglist 1 ........................... <tName>
  [ 90] extcall 214 ............................. <length(tName)>
  [ 92] pushzero ................................ <0>
  [ 93] eq ...................................... <length(tName) = 0>
  [ 94] jmpifz [126] ............................ if length(tName) = 0 then / else
  [ 97] pushsymb 119 ............................ <#alert>
  [ 99] pushsymb 120 ............................ <#msg>
  [101] pushcons 164 ............................ <"Alert_NoNameSet">
  [103] pushsymb 121 ............................ <#id>
  [105] pushcons 165 ............................ <"nonameset">
  [107] pushsymb 122 ............................ <#modal>
  [109] pushint8 1 .............................. <1>
  [111] pusharglist 6 ........................... <[#msg: "Alert_NoNameSet", #id: "nonameset", #modal: 1]>
  [113] pushproplist ............................ <[#msg: "Alert_NoNameSet", #id: "nonameset", #modal: 1]>
  [114] pusharglistnoret 2 ...................... <#alert, [#msg: "Alert_NoNameSet", #id: "nonameset", #modal: 1]>
  [116] extcall 118 ............................. executeMessage(#alert, [#msg: "Alert_NoNameSet", #id: "nonameset", #modal: 1])
  [118] pushzero ................................ <0>
  [119] pusharglistnoret 1 ...................... <0>
  [121] extcall 89 .............................. return 0
  [123] jmp [212]
  [126] getlocal 1 .............................. <tName>
  [128] pusharglist 1 ........................... <tName>
  [130] extcall 214 ............................. <length(tName)>
  [132] pushcons 166 ............................ <"name.length.min">
  [134] pushint8 3 .............................. <3>
  [136] pusharglist 2 ........................... <"name.length.min", 3>
  [138] extcall 196 ............................. <getIntVariable("name.length.min", 3)>
  [140] lt ...................................... <length(tName) < getIntVariable("name.length.min", 3)>
  [141] jmpifz [181] ............................ if length(tName) < getIntVariable("name.length.min", 3) then / else
  [144] pushsymb 119 ............................ <#alert>
  [146] pushsymb 120 ............................ <#msg>
  [148] pushcons 167 ............................ <"Alert_YourNameIstooShort">
  [150] pushsymb 121 ............................ <#id>
  [152] pushcons 168 ............................ <"name2short">
  [154] pushsymb 122 ............................ <#modal>
  [156] pushint8 1 .............................. <1>
  [158] pusharglist 6 ........................... <[#msg: "Alert_YourNameIstooShort", #id: "name2short", #modal: 1]>
  [160] pushproplist ............................ <[#msg: "Alert_YourNameIstooShort", #id: "name2short", #modal: 1]>
  [161] pusharglistnoret 2 ...................... <#alert, [#msg: "Alert_YourNameIstooShort", #id: "name2short", #modal: 1]>
  [163] extcall 118 ............................. executeMessage(#alert, [#msg: "Alert_YourNameIstooShort", #id: "name2short", #modal: 1])
  [165] getparam 0 .............................. <me>
  [167] pushcons 97 ............................. <"char_name_field">
  [169] pusharglistnoret 2 ...................... <me, "char_name_field">
  [171] objcall 45 .............................. me.focusKeyboardToSprite("char_name_field")
  [173] pushzero ................................ <0>
  [174] pusharglistnoret 1 ...................... <0>
  [176] extcall 89 .............................. return 0
  [178] jmp [212]
  [181] getprop 72 .............................. <pLastNameCheck>
  [183] getlocal 1 .............................. <tName>
  [185] nteq .................................... <pLastNameCheck <> tName>
  [186] jmpifz [212] ............................ if pLastNameCheck <> tName then
  [189] getparam 0 .............................. <me>
  [191] pusharglist 1 ........................... <me>
  [193] objcall 114 ............................. <me.getComponent()>
  [195] getlocal 1 .............................. <tName>
  [197] pusharglist 2 ........................... <me.getComponent(), tName>
  [199] objcall 295 ............................. <me.getComponent().checkUserName(tName)>
  [202] pushzero ................................ <0>
  [203] eq ...................................... <me.getComponent().checkUserName(tName) = 0>
  [204] jmpifz [212] ............................ if me.getComponent().checkUserName(tName) = 0 then
  [207] pushzero ................................ <0>
  [208] pusharglistnoret 1 ...................... <0>
  [210] extcall 89 .............................. return 0
  [212] pushsymb 109 ............................ <#session>
  [214] pusharglist 1 ........................... <#session>
  [216] extcall 110 ............................. <getObject(#session)>
  [218] pushsymb 296 ............................ <#userName>
  [221] getlocal 1 .............................. <tName>
  [223] pusharglistnoret 3 ...................... <getObject(#session), #userName, tName>
  [225] objcall 111 ............................. getObject(#session).set(#userName, tName)
  [227] pushint8 1 .............................. <1>
  [229] setprop 173 ............................. pNameChecked = 1
  [231] pushint8 1 .............................. <1>
  [233] pusharglistnoret 1 ...................... <1>
  [235] extcall 89 .............................. return 1
  [237] ret
end

on checkPasswords me, tPwd1, tPwd2
  [  0] getparam 1 .............................. <tPwd1>
  [  2] pusharglist 1 ........................... <tPwd1>
  [  4] extcall 100 ............................. <voidp(tPwd1)>
  [  6] getparam 2 .............................. <tPwd2>
  [  8] pusharglist 1 ........................... <tPwd2>
  [ 10] extcall 100 ............................. <voidp(tPwd2)>
  [ 12] or ...................................... <voidp(tPwd1) or voidp(tPwd2)>
  [ 13] jmpifz [ 37] ............................ if voidp(tPwd1) or voidp(tPwd2) then
  [ 16] getprop 299 ............................. <pErrorMsg>
  [ 19] pushcons 169 ............................ <"Alert_WrongPassword">
  [ 21] pusharglist 1 ........................... <"Alert_WrongPassword">
  [ 23] extcall 74 .............................. <getText("Alert_WrongPassword")>
  [ 25] joinstr ................................. <pErrorMsg & getText("Alert_WrongPassword")>
  [ 26] pushcons 26 ............................. <RETURN>
  [ 28] joinstr ................................. <pErrorMsg & getText("Alert_WrongPassword") & RETURN>
  [ 29] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("Alert_WrongPassword") & RETURN
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 89 .............................. return 0
  [ 37] getparam 1 .............................. <tPwd1>
  [ 39] getobjprop 214 .......................... <tPwd1.length>
  [ 41] pushint8 1 .............................. <1>
  [ 43] lt ...................................... <tPwd1.length < 1>
  [ 44] getparam 2 .............................. <tPwd2>
  [ 46] getobjprop 214 .......................... <tPwd2.length>
  [ 48] pushint8 1 .............................. <1>
  [ 50] lt ...................................... <tPwd2.length < 1>
  [ 51] or ...................................... <(tPwd1.length < 1) or (tPwd2.length < 1)>
  [ 52] getparam 1 .............................. <tPwd1>
  [ 54] getparam 2 .............................. <tPwd2>
  [ 56] nteq .................................... <tPwd1 <> tPwd2>
  [ 57] or ...................................... <(tPwd1.length < 1) or (tPwd2.length < 1) or (tPwd1 <> tPwd2)>
  [ 58] jmpifz [ 82] ............................ if (tPwd1.length < 1) or (tPwd2.length < 1) or (tPwd1 <> tPwd2) then
  [ 61] getprop 299 ............................. <pErrorMsg>
  [ 64] pushcons 169 ............................ <"Alert_WrongPassword">
  [ 66] pusharglist 1 ........................... <"Alert_WrongPassword">
  [ 68] extcall 74 .............................. <getText("Alert_WrongPassword")>
  [ 70] joinstr ................................. <pErrorMsg & getText("Alert_WrongPassword")>
  [ 71] pushcons 26 ............................. <RETURN>
  [ 73] joinstr ................................. <pErrorMsg & getText("Alert_WrongPassword") & RETURN>
  [ 74] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("Alert_WrongPassword") & RETURN
  [ 77] pushzero ................................ <0>
  [ 78] pusharglistnoret 1 ...................... <0>
  [ 80] extcall 89 .............................. return 0
  [ 82] pushint8 1 .............................. <1>
  [ 84] pusharglistnoret 1 ...................... <1>
  [ 86] extcall 89 .............................. return 1
  [ 88] ret
end

on DEPR_checkPasswordsEnforced me, tPw1, tPw2
  [  0] getparam 1 .............................. <tPw1>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <tPw1 = 0>
  [  4] getparam 1 .............................. <tPw1>
  [  6] pusharglist 1 ........................... <tPw1>
  [  8] extcall 231 ............................. <listp(tPw1)>
  [ 10] not ..................................... <not listp(tPw1)>
  [ 11] or ...................................... <(tPw1 = 0) or not listp(tPw1)>
  [ 12] jmpifz [ 20] ............................ if (tPw1 = 0) or not listp(tPw1) then
  [ 15] pusharglist 0 ........................... <[]>
  [ 17] pushlist ................................ <[]>
  [ 18] setparam 1 .............................. tPw1 = []
  [ 20] getparam 2 .............................. <tPw2>
  [ 22] pushzero ................................ <0>
  [ 23] eq ...................................... <tPw2 = 0>
  [ 24] getparam 2 .............................. <tPw2>
  [ 26] pusharglist 1 ........................... <tPw2>
  [ 28] extcall 231 ............................. <listp(tPw2)>
  [ 30] not ..................................... <not listp(tPw2)>
  [ 31] or ...................................... <(tPw2 = 0) or not listp(tPw2)>
  [ 32] jmpifz [ 40] ............................ if (tPw2 = 0) or not listp(tPw2) then
  [ 35] pusharglist 0 ........................... <[]>
  [ 37] pushlist ................................ <[]>
  [ 38] setparam 2 .............................. tPw2 = []
  [ 40] pushint8 1 .............................. <1>
  [ 42] setlocal 0 .............................. tCheckOK = 1
  [ 44] getparam 1 .............................. <tPw1>
  [ 46] getparam 2 .............................. <tPw2>
  [ 48] nteq .................................... <tPw1 <> tPw2>
  [ 49] jmpifz [ 73] ............................ if tPw1 <> tPw2 then
  [ 52] getprop 299 ............................. <pErrorMsg>
  [ 55] pushcons 169 ............................ <"Alert_WrongPassword">
  [ 57] pusharglist 1 ........................... <"Alert_WrongPassword">
  [ 59] extcall 74 .............................. <getText("Alert_WrongPassword")>
  [ 61] joinstr ................................. <pErrorMsg & getText("Alert_WrongPassword")>
  [ 62] pushcons 26 ............................. <RETURN>
  [ 64] joinstr ................................. <pErrorMsg & getText("Alert_WrongPassword") & RETURN>
  [ 65] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("Alert_WrongPassword") & RETURN
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 89 .............................. return 0
  [ 73] pushcons 170 ............................ <"pass.length.min.patched">
  [ 75] pusharglist 1 ........................... <"pass.length.min.patched">
  [ 77] extcall 86 .............................. <variableExists("pass.length.min.patched")>
  [ 79] jmpifz [ 93] ............................ if variableExists("pass.length.min.patched") then / else
  [ 82] pushcons 170 ............................ <"pass.length.min.patched">
  [ 84] pusharglist 1 ........................... <"pass.length.min.patched">
  [ 86] extcall 196 ............................. <getIntVariable("pass.length.min.patched")>
  [ 88] setlocal 1 .............................. tMinPwdLen = getIntVariable("pass.length.min.patched")
  [ 90] jmp [103]
  [ 93] pushcons 171 ............................ <"pass.length.min">
  [ 95] pushint8 6 .............................. <6>
  [ 97] pusharglist 2 ........................... <"pass.length.min", 6>
  [ 99] extcall 196 ............................. <getIntVariable("pass.length.min", 6)>
  [101] setlocal 1 .............................. tMinPwdLen = getIntVariable("pass.length.min", 6)
  [103] getparam 1 .............................. <tPw1>
  [105] getobjprop 104 .......................... <tPw1.count>
  [107] getlocal 1 .............................. <tMinPwdLen>
  [109] lt ...................................... <tPw1.count < tMinPwdLen>
  [110] jmpifz [135] ............................ if tPw1.count < tMinPwdLen then / else
  [113] getprop 299 ............................. <pErrorMsg>
  [116] pushcons 25 ............................. <"Alert_YourPasswordIsTooShort">
  [118] pusharglist 1 ........................... <"Alert_YourPasswordIsTooShort">
  [120] extcall 74 .............................. <getText("Alert_YourPasswordIsTooShort")>
  [122] joinstr ................................. <pErrorMsg & getText("Alert_YourPasswordIsTooShort")>
  [123] pushcons 26 ............................. <RETURN>
  [125] joinstr ................................. <pErrorMsg & getText("Alert_YourPasswordIsTooShort") & RETURN>
  [126] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("Alert_YourPasswordIsTooShort") & RETURN
  [129] pushzero ................................ <0>
  [130] setlocal 0 .............................. tCheckOK = 0
  [132] jmp [164]
  [135] getparam 1 .............................. <tPw1>
  [137] getobjprop 104 .......................... <tPw1.count>
  [139] pushint8 32 ............................. <32>
  [141] gt ...................................... <tPw1.count > 32>
  [142] jmpifz [164] ............................ if tPw1.count > 32 then
  [145] getprop 299 ............................. <pErrorMsg>
  [148] pushcons 172 ............................ <"Alert_YourPasswordIsTooLong">
  [150] pusharglist 1 ........................... <"Alert_YourPasswordIsTooLong">
  [152] extcall 74 .............................. <getText("Alert_YourPasswordIsTooLong")>
  [154] joinstr ................................. <pErrorMsg & getText("Alert_YourPasswordIsTooLong")>
  [155] pushcons 26 ............................. <RETURN>
  [157] joinstr ................................. <pErrorMsg & getText("Alert_YourPasswordIsTooLong") & RETURN>
  [158] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("Alert_YourPasswordIsTooLong") & RETURN
  [161] pushzero ................................ <0>
  [162] setlocal 0 .............................. tCheckOK = 0
  [164] pushzero ................................ <0>
  [165] setlocal 2 .............................. tNumCheckOk = 0
  [167] pushint8 48 ............................. <48>
  [169] setlocal 3
  [171] getlocal 3
  [173] pushint8 57 ............................. <57>
  [175] lteq
  [176] jmpifz [214] ............................ repeat with c = 48 to 57
  [179] getparam 1 .............................. <tPw1>
  [181] getlocal 3 .............................. <c>
  [183] pusharglist 1 ........................... <c>
  [185] extcall 302 ............................. <numToChar(c)>
  [188] pusharglist 2 ........................... <tPw1, numToChar(c)>
  [190] objcall 303 ............................. <tPw1.getPos(numToChar(c))>
  [193] pushzero ................................ <0>
  [194] gt ...................................... <tPw1.getPos(numToChar(c)) > 0>
  [195] jmpifz [205] ............................ if tPw1.getPos(numToChar(c)) > 0 then
  [198] pushint8 1 .............................. <1>
  [200] setlocal 2 .............................. tNumCheckOk = 1
  [202] jmp [214] ............................... exit repeat
  [205] pushint8 1
  [207] getlocal 3
  [209] add
  [210] setlocal 3
  [212] endrepeat [171]
  [214] getlocal 2 .............................. <tNumCheckOk>
  [216] pushzero ................................ <0>
  [217] eq ...................................... <tNumCheckOk = 0>
  [218] jmpifz [240] ............................ if tNumCheckOk = 0 then
  [221] pushzero ................................ <0>
  [222] setlocal 0 .............................. tCheckOK = 0
  [224] getprop 299 ............................. <pErrorMsg>
  [227] pushcons 29 ............................. <"reg_passwordContainsNoNumber">
  [229] pusharglist 1 ........................... <"reg_passwordContainsNoNumber">
  [231] extcall 74 .............................. <getText("reg_passwordContainsNoNumber")>
  [233] joinstr ................................. <pErrorMsg & getText("reg_passwordContainsNoNumber")>
  [234] pushcons 26 ............................. <RETURN>
  [236] joinstr ................................. <pErrorMsg & getText("reg_passwordContainsNoNumber") & RETURN>
  [237] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("reg_passwordContainsNoNumber") & RETURN
  [240] pushsymb 109 ............................ <#session>
  [242] pusharglist 1 ........................... <#session>
  [244] extcall 110 ............................. <getObject(#session)>
  [246] pushsymb 296 ............................ <#userName>
  [249] pusharglist 2 ........................... <getObject(#session), #userName>
  [251] objcall 175 ............................. <getObject(#session).exists(#userName)>
  [253] not ..................................... <not getObject(#session).exists(#userName)>
  [254] jmpifz [263] ............................ if not getObject(#session).exists(#userName) then
  [257] pushint8 1 .............................. <1>
  [259] pusharglistnoret 1 ...................... <1>
  [261] extcall 89 .............................. return 1
  [263] pushsymb 109 ............................ <#session>
  [265] pusharglist 1 ........................... <#session>
  [267] extcall 110 ............................. <getObject(#session)>
  [269] pushsymb 296 ............................ <#userName>
  [272] pusharglist 2 ........................... <getObject(#session), #userName>
  [274] objcall 177 ............................. <getObject(#session).get(#userName)>
  [276] pushcons 0 .............................. <EMPTY>
  [278] eq ...................................... <getObject(#session).get(#userName) = EMPTY>
  [279] jmpifz [288] ............................ if getObject(#session).get(#userName) = EMPTY then
  [282] pushint8 1 .............................. <1>
  [284] pusharglistnoret 1 ...................... <1>
  [286] extcall 89 .............................. return 1
  [288] pushsymb 109 ............................ <#session>
  [290] pusharglist 1 ........................... <#session>
  [292] extcall 110 ............................. <getObject(#session)>
  [294] pushsymb 296 ............................ <#userName>
  [297] pusharglist 2 ........................... <getObject(#session), #userName>
  [299] objcall 177 ............................. <getObject(#session).get(#userName)>
  [301] setlocal 4 .............................. tNameStr = getObject(#session).get(#userName)
  [303] pushcons 0 .............................. <EMPTY>
  [305] setlocal 5 .............................. tPasswordStr = EMPTY
  [307] pushcons 0 .............................. <EMPTY>
  [309] setlocal 6 .............................. tPasswordRevStr = EMPTY
  [311] getlocal 4 .............................. <tNameStr>
  [313] getobjprop 214 .......................... <tNameStr.length>
  [315] pushint8 2 .............................. <2>
  [317] gt ...................................... <tNameStr.length > 2>
  [318] jmpifz [449] ............................ if tNameStr.length > 2 then
  [321] pushint8 1 .............................. <1>
  [323] setlocal 7
  [325] getlocal 7
  [327] getparam 1 .............................. <tPw1>
  [329] getobjprop 104 .......................... <tPw1.count>
  [331] lteq
  [332] jmpifz [357] ............................ repeat with i = 1 to tPw1.count
  [335] getlocal 5 .............................. <tPasswordStr>
  [337] getparam 1 .............................. <tPw1>
  [339] getlocal 7 .............................. <i>
  [341] pusharglist 2 ........................... <tPw1, i>
  [343] objcall 105 ............................. <tPw1[i]>
  [345] joinstr ................................. <tPasswordStr & tPw1[i]>
  [346] setlocal 5 .............................. tPasswordStr = tPasswordStr & tPw1[i]
  [348] pushint8 1
  [350] getlocal 7
  [352] add
  [353] setlocal 7
  [355] endrepeat [325]
  [357] pushzero ................................ <0>
  [358] setlocal 7
  [360] getlocal 7
  [362] getparam 1 .............................. <tPw1>
  [364] getobjprop 104 .......................... <tPw1.count>
  [366] pushint8 1 .............................. <1>
  [368] sub ..................................... <tPw1.count - 1>
  [369] lteq
  [370] jmpifz [400] ............................ repeat with i = 0 to tPw1.count - 1
  [373] getlocal 6 .............................. <tPasswordRevStr>
  [375] getparam 1 .............................. <tPw1>
  [377] getparam 1 .............................. <tPw1>
  [379] getobjprop 104 .......................... <tPw1.count>
  [381] getlocal 7 .............................. <i>
  [383] sub ..................................... <tPw1.count - i>
  [384] pusharglist 2 ........................... <tPw1, tPw1.count - i>
  [386] objcall 105 ............................. <tPw1[tPw1.count - i]>
  [388] joinstr ................................. <tPasswordRevStr & tPw1[tPw1.count - i]>
  [389] setlocal 6 .............................. tPasswordRevStr = tPasswordRevStr & tPw1[tPw1.count - i]
  [391] pushint8 1
  [393] getlocal 7
  [395] add
  [396] setlocal 7
  [398] endrepeat [360]
  [400] getlocal 4 .............................. <tNameStr>
  [402] getlocal 5 .............................. <tPasswordStr>
  [404] containsstr ............................. <tNameStr contains tPasswordStr>
  [405] getlocal 4 .............................. <tNameStr>
  [407] getlocal 6 .............................. <tPasswordRevStr>
  [409] containsstr ............................. <tNameStr contains tPasswordRevStr>
  [410] or ...................................... <(tNameStr contains tPasswordStr) or (tNameStr contains tPasswordRevStr)>
  [411] getlocal 5 .............................. <tPasswordStr>
  [413] getlocal 4 .............................. <tNameStr>
  [415] containsstr ............................. <tPasswordStr contains tNameStr>
  [416] or ...................................... <(tNameStr contains tPasswordStr) or (tNameStr contains tPasswordRevStr) or (tPasswordStr contains tNameStr)>
  [417] getlocal 6 .............................. <tPasswordRevStr>
  [419] getlocal 4 .............................. <tNameStr>
  [421] containsstr ............................. <tPasswordRevStr contains tNameStr>
  [422] or ...................................... <(tNameStr contains tPasswordStr) or (tNameStr contains tPasswordRevStr) or (tPasswordStr contains tNameStr) or (tPasswordRevStr contains tNameStr)>
  [423] setlocal 8 .............................. tSimilarityConflict = (tNameStr contains tPasswordStr) or (tNameStr contains tPasswordRevStr) or (tPasswordStr contains tNameStr) or (tPasswordRevStr contains tNameStr)
  [425] getlocal 8 .............................. <tSimilarityConflict>
  [427] jmpifz [449] ............................ if tSimilarityConflict then
  [430] getprop 299 ............................. <pErrorMsg>
  [433] pushcons 30 ............................. <"reg_nameAndPassTooSimilar">
  [435] pusharglist 1 ........................... <"reg_nameAndPassTooSimilar">
  [437] extcall 74 .............................. <getText("reg_nameAndPassTooSimilar")>
  [439] joinstr ................................. <pErrorMsg & getText("reg_nameAndPassTooSimilar")>
  [440] pushcons 26 ............................. <RETURN>
  [442] joinstr ................................. <pErrorMsg & getText("reg_nameAndPassTooSimilar") & RETURN>
  [443] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("reg_nameAndPassTooSimilar") & RETURN
  [446] pushzero ................................ <0>
  [447] setlocal 0 .............................. tCheckOK = 0
  [449] getlocal 0 .............................. <tCheckOK>
  [451] pusharglistnoret 1 ...................... <tCheckOK>
  [453] extcall 89 .............................. return tCheckOK
  [455] ret
end

on validateBirthday me, tYear, tMonth, tDay
  [  0] pusharglist 0 ........................... <>
  [  2] thebuiltin 315 .......................... <the paramCount>
  [  5] pushint8 4 .............................. <4>
  [  7] lt ...................................... <the paramCount < 4>
  [  8] jmpifz [ 16] ............................ if the paramCount < 4 then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 89 .............................. return 0
  [ 16] pushint8 1 .............................. <1>
  [ 18] setlocal 0 .............................. tBirthOK = 1
  [ 20] getparam 3 .............................. <tDay>
  [ 22] pusharglist 1 ........................... <tDay>
  [ 24] extcall 100 ............................. <voidp(tDay)>
  [ 26] getparam 3 .............................. <tDay>
  [ 28] pushint8 1 .............................. <1>
  [ 30] lt ...................................... <tDay < 1>
  [ 31] or ...................................... <voidp(tDay) or (tDay < 1)>
  [ 32] getparam 3 .............................. <tDay>
  [ 34] pushint8 31 ............................. <31>
  [ 36] gt ...................................... <tDay > 31>
  [ 37] or ...................................... <voidp(tDay) or (tDay < 1) or (tDay > 31)>
  [ 38] jmpifz [ 44] ............................ if voidp(tDay) or (tDay < 1) or (tDay > 31) then
  [ 41] pushzero ................................ <0>
  [ 42] setlocal 0 .............................. tBirthOK = 0
  [ 44] getparam 2 .............................. <tMonth>
  [ 46] pusharglist 1 ........................... <tMonth>
  [ 48] extcall 100 ............................. <voidp(tMonth)>
  [ 50] getparam 2 .............................. <tMonth>
  [ 52] pushint8 1 .............................. <1>
  [ 54] lt ...................................... <tMonth < 1>
  [ 55] or ...................................... <voidp(tMonth) or (tMonth < 1)>
  [ 56] getparam 2 .............................. <tMonth>
  [ 58] pushint8 12 ............................. <12>
  [ 60] gt ...................................... <tMonth > 12>
  [ 61] or ...................................... <voidp(tMonth) or (tMonth < 1) or (tMonth > 12)>
  [ 62] jmpifz [ 68] ............................ if voidp(tMonth) or (tMonth < 1) or (tMonth > 12) then
  [ 65] pushzero ................................ <0>
  [ 66] setlocal 0 .............................. tBirthOK = 0
  [ 68] getparam 1 .............................. <tYear>
  [ 70] pusharglist 1 ........................... <tYear>
  [ 72] extcall 100 ............................. <voidp(tYear)>
  [ 74] getparam 1 .............................. <tYear>
  [ 76] pushint16 1900 .......................... <1900>
  [ 79] lt ...................................... <tYear < 1900>
  [ 80] or ...................................... <voidp(tYear) or (tYear < 1900)>
  [ 81] getparam 1 .............................. <tYear>
  [ 83] pushint16 2100 .......................... <2100>
  [ 86] gt ...................................... <tYear > 2100>
  [ 87] or ...................................... <voidp(tYear) or (tYear < 1900) or (tYear > 2100)>
  [ 88] jmpifz [ 94] ............................ if voidp(tYear) or (tYear < 1900) or (tYear > 2100) then
  [ 91] pushzero ................................ <0>
  [ 92] setlocal 0 .............................. tBirthOK = 0
  [ 94] getlocal 0 .............................. <tBirthOK>
  [ 96] pushint8 1 .............................. <1>
  [ 98] eq ...................................... <tBirthOK = 1>
  [ 99] pushsymb 109 ............................ <#session>
  [101] pusharglist 1 ........................... <#session>
  [103] extcall 110 ............................. <getObject(#session)>
  [105] pushcons 173 ............................ <"server_date">
  [107] pusharglist 2 ........................... <getObject(#session), "server_date">
  [109] objcall 175 ............................. <getObject(#session).exists("server_date")>
  [111] and ..................................... <(tBirthOK = 1) and getObject(#session).exists("server_date")>
  [112] jmpifz [246] ............................ if (tBirthOK = 1) and getObject(#session).exists("server_date") then
  [115] pushsymb 109 ............................ <#session>
  [117] pusharglist 1 ........................... <#session>
  [119] extcall 110 ............................. <getObject(#session)>
  [121] pushcons 173 ............................ <"server_date">
  [123] pusharglist 2 ........................... <getObject(#session), "server_date">
  [125] objcall 177 ............................. <getObject(#session).get("server_date")>
  [127] setlocal 1 .............................. tServerDate = getObject(#session).get("server_date")
  [129] getmovieprop 198 ........................ <the itemDelimiter>
  [131] setlocal 2 .............................. tDelim = the itemDelimiter
  [133] pushcons 32 ............................. <".">
  [135] setmovieprop 198 ........................ the itemDelimiter = "."
  [137] getlocal 1 .............................. <tServerDate>
  [139] pushsymb 200 ............................ <#item>
  [141] pushint8 1 .............................. <1>
  [143] pusharglist 3 ........................... <tServerDate, #item, 1>
  [145] objcall 186 ............................. <tServerDate.item[1]>
  [147] pusharglist 1 ........................... <tServerDate.item[1]>
  [149] extcall 199 ............................. <integer(tServerDate.item[1])>
  [151] setlocal 3 .............................. tServerDay = integer(tServerDate.item[1])
  [153] getlocal 1 .............................. <tServerDate>
  [155] pushsymb 200 ............................ <#item>
  [157] pushint8 2 .............................. <2>
  [159] pusharglist 3 ........................... <tServerDate, #item, 2>
  [161] objcall 186 ............................. <tServerDate.item[2]>
  [163] pusharglist 1 ........................... <tServerDate.item[2]>
  [165] extcall 199 ............................. <integer(tServerDate.item[2])>
  [167] setlocal 4 .............................. tServerMonth = integer(tServerDate.item[2])
  [169] getlocal 1 .............................. <tServerDate>
  [171] pushsymb 200 ............................ <#item>
  [173] pushint8 3 .............................. <3>
  [175] pusharglist 3 ........................... <tServerDate, #item, 3>
  [177] objcall 186 ............................. <tServerDate.item[3]>
  [179] pusharglist 1 ........................... <tServerDate.item[3]>
  [181] extcall 199 ............................. <integer(tServerDate.item[3])>
  [183] setlocal 5 .............................. tServerYear = integer(tServerDate.item[3])
  [185] getparam 1 .............................. <tYear>
  [187] getlocal 5 .............................. <tServerYear>
  [189] gt ...................................... <tYear > tServerYear>
  [190] jmpifz [199] ............................ if tYear > tServerYear then / else
  [193] pushzero ................................ <0>
  [194] setlocal 0 .............................. tBirthOK = 0
  [196] jmp [242]
  [199] getparam 2 .............................. <tMonth>
  [201] getlocal 4 .............................. <tServerMonth>
  [203] gt ...................................... <tMonth > tServerMonth>
  [204] getparam 1 .............................. <tYear>
  [206] getlocal 5 .............................. <tServerYear>
  [208] eq ...................................... <tYear = tServerYear>
  [209] and ..................................... <(tMonth > tServerMonth) and (tYear = tServerYear)>
  [210] jmpifz [219] ............................ if (tMonth > tServerMonth) and (tYear = tServerYear) then / else
  [213] pushzero ................................ <0>
  [214] setlocal 0 .............................. tBirthOK = 0
  [216] jmp [242]
  [219] getparam 3 .............................. <tDay>
  [221] getlocal 3 .............................. <tServerDay>
  [223] gt ...................................... <tDay > tServerDay>
  [224] getparam 2 .............................. <tMonth>
  [226] getlocal 4 .............................. <tServerMonth>
  [228] eq ...................................... <tMonth = tServerMonth>
  [229] and ..................................... <(tDay > tServerDay) and (tMonth = tServerMonth)>
  [230] getparam 1 .............................. <tYear>
  [232] getlocal 5 .............................. <tServerYear>
  [234] eq ...................................... <tYear = tServerYear>
  [235] and ..................................... <(tDay > tServerDay) and (tMonth = tServerMonth) and (tYear = tServerYear)>
  [236] jmpifz [242] ............................ if (tDay > tServerDay) and (tMonth = tServerMonth) and (tYear = tServerYear) then
  [239] pushzero ................................ <0>
  [240] setlocal 0 .............................. tBirthOK = 0
  [242] getlocal 2 .............................. <tDelim>
  [244] setmovieprop 198 ........................ the itemDelimiter = tDelim
  [246] getlocal 0 .............................. <tBirthOK>
  [248] pusharglistnoret 1 ...................... <tBirthOK>
  [250] extcall 89 .............................. return tBirthOK
  [252] ret
end

on validateEmail me, tEmail
  [  0] pushzero ................................ <0>
  [  1] setlocal 0 .............................. tEmailOK = 0
  [  3] getparam 1 .............................. <tEmail>
  [  5] pusharglist 1 ........................... <tEmail>
  [  7] extcall 214 ............................. <length(tEmail)>
  [  9] pushint8 6 .............................. <6>
  [ 11] gt ...................................... <length(tEmail) > 6>
  [ 12] getparam 1 .............................. <tEmail>
  [ 14] pushcons 174 ............................ <"@">
  [ 16] containsstr ............................. <tEmail contains "@">
  [ 17] and ..................................... <(length(tEmail) > 6) and (tEmail contains "@")>
  [ 18] jmpifz [ 98] ............................ if (length(tEmail) > 6) and (tEmail contains "@") then
  [ 21] pushcons 174 ............................ <"@">
  [ 23] getparam 1 .............................. <tEmail>
  [ 25] pusharglist 2 ........................... <"@", tEmail>
  [ 27] extcall 321 ............................. <offset("@", tEmail)>
  [ 30] pushint8 1 .............................. <1>
  [ 32] add ..................................... <offset("@", tEmail) + 1>
  [ 33] setlocal 1
  [ 35] getlocal 1
  [ 37] getparam 1 .............................. <tEmail>
  [ 39] pusharglist 1 ........................... <tEmail>
  [ 41] extcall 214 ............................. <length(tEmail)>
  [ 43] lteq
  [ 44] jmpifz [ 98] ............................ repeat with f = offset("@", tEmail) + 1 to length(tEmail)
  [ 47] getparam 1 .............................. <tEmail>
  [ 49] pushsymb 185 ............................ <#char>
  [ 51] getlocal 1 .............................. <f>
  [ 53] pusharglist 3 ........................... <tEmail, #char, f>
  [ 55] objcall 186 ............................. <tEmail.char[f]>
  [ 57] pushcons 32 ............................. <".">
  [ 59] eq ...................................... <tEmail.char[f] = ".">
  [ 60] jmpifz [ 67] ............................ if tEmail.char[f] = "." then
  [ 63] pushint8 1 .............................. <1>
  [ 65] setlocal 0 .............................. tEmailOK = 1
  [ 67] getparam 1 .............................. <tEmail>
  [ 69] pushsymb 185 ............................ <#char>
  [ 71] getlocal 1 .............................. <f>
  [ 73] pusharglist 3 ........................... <tEmail, #char, f>
  [ 75] objcall 186 ............................. <tEmail.char[f]>
  [ 77] pushcons 174 ............................ <"@">
  [ 79] eq ...................................... <tEmail.char[f] = "@">
  [ 80] jmpifz [ 89] ............................ if tEmail.char[f] = "@" then
  [ 83] pushzero ................................ <0>
  [ 84] setlocal 0 .............................. tEmailOK = 0
  [ 86] jmp [ 98] ............................... exit repeat
  [ 89] pushint8 1
  [ 91] getlocal 1
  [ 93] add
  [ 94] setlocal 1
  [ 96] endrepeat [ 35]
  [ 98] getlocal 0 .............................. <tEmailOK>
  [100] pusharglistnoret 1 ...................... <tEmailOK>
  [102] extcall 89 .............................. return tEmailOK
  [104] ret
end

on checkAgreeTerms me
  [  0] pushcons 175 ............................ <"reg_terms">
  [  2] pusharglist 1 ........................... <"reg_terms">
  [  4] extcall 74 .............................. <getText("reg_terms")>
  [  6] pushcons 175 ............................ <"reg_terms">
  [  8] eq ...................................... <getText("reg_terms") = "reg_terms">
  [  9] jmpifz [ 17] ............................ if getText("reg_terms") = "reg_terms" then
  [ 12] pushzero ................................ <0>
  [ 13] pusharglistnoret 1 ...................... <0>
  [ 15] extcall 89 .............................. return 0
  [ 17] getprop 73 .............................. <pWindowTitle>
  [ 19] pusharglist 1 ........................... <pWindowTitle>
  [ 21] extcall 130 ............................. <getWindow(pWindowTitle)>
  [ 23] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 25] getlocal 0 .............................. <tWndObj>
  [ 27] pushcons 176 ............................ <"reg_termstxt">
  [ 29] pusharglist 2 ........................... <tWndObj, "reg_termstxt">
  [ 31] objcall 135 ............................. <tWndObj.elementExists("reg_termstxt")>
  [ 33] jmpifz [121] ............................ if tWndObj.elementExists("reg_termstxt") then / else
  [ 36] getlocal 0 .............................. <tWndObj>
  [ 38] pushcons 177 ............................ <"char_scrollbar">
  [ 40] pusharglist 2 ........................... <tWndObj, "char_scrollbar">
  [ 42] objcall 133 ............................. <tWndObj.getElement("char_scrollbar")>
  [ 44] pusharglist 1 ........................... <tWndObj.getElement("char_scrollbar")>
  [ 46] objcall 324 ............................. <tWndObj.getElement("char_scrollbar").getScrollOffset()>
  [ 49] setlocal 1 .............................. tScroll = tWndObj.getElement("char_scrollbar").getScrollOffset()
  [ 51] getlocal 0 .............................. <tWndObj>
  [ 53] pushcons 176 ............................ <"reg_termstxt">
  [ 55] pusharglist 2 ........................... <tWndObj, "reg_termstxt">
  [ 57] objcall 133 ............................. <tWndObj.getElement("reg_termstxt")>
  [ 59] pushsymb 220 ............................ <#image>
  [ 61] pusharglist 2 ........................... <tWndObj.getElement("reg_termstxt"), #image>
  [ 63] objcall 170 ............................. <tWndObj.getElement("reg_termstxt").getProperty(#image)>
  [ 65] getobjprop 257 .......................... <tWndObj.getElement("reg_termstxt").getProperty(#image).height>
  [ 68] getlocal 0 .............................. <tWndObj>
  [ 70] pushcons 176 ............................ <"reg_termstxt">
  [ 72] pusharglist 2 ........................... <tWndObj, "reg_termstxt">
  [ 74] objcall 133 ............................. <tWndObj.getElement("reg_termstxt")>
  [ 76] pushsymb 257 ............................ <#height>
  [ 79] pusharglist 2 ........................... <tWndObj.getElement("reg_termstxt"), #height>
  [ 81] objcall 170 ............................. <tWndObj.getElement("reg_termstxt").getProperty(#height)>
  [ 83] sub ..................................... <tWndObj.getElement("reg_termstxt").getProperty(#image).height - tWndObj.getElement("reg_termstxt").getProperty(#height)>
  [ 84] setlocal 2 .............................. tMaxH = tWndObj.getElement("reg_termstxt").getProperty(#image).height - tWndObj.getElement("reg_termstxt").getProperty(#height)
  [ 86] getlocal 1 .............................. <tScroll>
  [ 88] pushint8 2 .............................. <2>
  [ 90] add ..................................... <tScroll + 2>
  [ 91] getlocal 2 .............................. <tMaxH>
  [ 93] lt ...................................... <(tScroll + 2) < tMaxH>
  [ 94] jmpifz [118] ............................ if (tScroll + 2) < tMaxH then
  [ 97] getprop 299 ............................. <pErrorMsg>
  [100] pushcons 178 ............................ <"reg_readterms_alert">
  [102] pusharglist 1 ........................... <"reg_readterms_alert">
  [104] extcall 74 .............................. <getText("reg_readterms_alert")>
  [106] joinstr ................................. <pErrorMsg & getText("reg_readterms_alert")>
  [107] pushcons 26 ............................. <RETURN>
  [109] joinstr ................................. <pErrorMsg & getText("reg_readterms_alert") & RETURN>
  [110] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("reg_readterms_alert") & RETURN
  [113] pushzero ................................ <0>
  [114] pusharglistnoret 1 ...................... <0>
  [116] extcall 89 .............................. return 0
  [118] jmp [126]
  [121] pushzero ................................ <0>
  [122] pusharglistnoret 1 ...................... <0>
  [124] extcall 89 .............................. return 0
  [126] getprop 70 .............................. <pPropsToServer>
  [128] pushcons 66 ............................. <"has_read_agreement">
  [130] pusharglist 2 ........................... <pPropsToServer, "has_read_agreement">
  [132] objcall 105 ............................. <pPropsToServer["has_read_agreement"]>
  [134] pushcons 129 ............................ <"1">
  [136] nteq .................................... <pPropsToServer["has_read_agreement"] <> "1">
  [137] jmpifz [164] ............................ if pPropsToServer["has_read_agreement"] <> "1" then / else
  [140] getprop 299 ............................. <pErrorMsg>
  [143] pushcons 179 ............................ <"reg_agree_alert">
  [145] pusharglist 1 ........................... <"reg_agree_alert">
  [147] extcall 74 .............................. <getText("reg_agree_alert")>
  [149] joinstr ................................. <pErrorMsg & getText("reg_agree_alert")>
  [150] pushcons 26 ............................. <RETURN>
  [152] joinstr ................................. <pErrorMsg & getText("reg_agree_alert") & RETURN>
  [153] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("reg_agree_alert") & RETURN
  [156] pushzero ................................ <0>
  [157] pusharglistnoret 1 ...................... <0>
  [159] extcall 89 .............................. return 0
  [161] jmp [170]
  [164] pushint8 1 .............................. <1>
  [166] pusharglistnoret 1 ...................... <1>
  [168] extcall 89 .............................. return 1
  [170] ret
end

on parentEmailNotNeeded me
  [  0] getprop 146 ............................. <pRegProcess>
  [  2] getobjprop 102 .......................... <pRegProcess.ilk>
  [  4] pushsymb 103 ............................ <#list>
  [  6] eq ...................................... <pRegProcess.ilk = #list>
  [  7] jmpifz [ 36] ............................ if pRegProcess.ilk = #list then
  [ 10] getprop 146 ............................. <pRegProcess>
  [ 12] pushcons 44 ............................. <"reg_parent_email">
  [ 14] pusharglist 2 ........................... <pRegProcess, "reg_parent_email">
  [ 16] objcall 147 ............................. <pRegProcess.findPos("reg_parent_email")>
  [ 18] setlocal 0 .............................. tPos = pRegProcess.findPos("reg_parent_email")
  [ 20] getlocal 0 .............................. <tPos>
  [ 22] pushzero ................................ <0>
  [ 23] gt ...................................... <tPos > 0>
  [ 24] jmpifz [ 36] ............................ if tPos > 0 then
  [ 27] getprop 146 ............................. <pRegProcess>
  [ 29] getlocal 0 .............................. <tPos>
  [ 31] pusharglistnoret 2 ...................... <pRegProcess, tPos>
  [ 33] objcall 327 ............................. pRegProcess.deleteAt(tPos)
  [ 36] ret
end

on totpVerificationNotNeeded me
  [  0] getprop 146 ............................. <pRegProcess>
  [  2] getobjprop 102 .......................... <pRegProcess.ilk>
  [  4] pushsymb 103 ............................ <#list>
  [  6] eq ...................................... <pRegProcess.ilk = #list>
  [  7] jmpifz [ 36] ............................ if pRegProcess.ilk = #list then
  [ 10] getprop 146 ............................. <pRegProcess>
  [ 12] pushcons 180 ............................ <"reg_totp_email">
  [ 14] pusharglist 2 ........................... <pRegProcess, "reg_totp_email">
  [ 16] objcall 147 ............................. <pRegProcess.findPos("reg_totp_email")>
  [ 18] setlocal 0 .............................. tPos = pRegProcess.findPos("reg_totp_email")
  [ 20] getlocal 0 .............................. <tPos>
  [ 22] pushzero ................................ <0>
  [ 23] gt ...................................... <tPos > 0>
  [ 24] jmpifz [ 36] ............................ if tPos > 0 then
  [ 27] getprop 146 ............................. <pRegProcess>
  [ 29] getlocal 0 .............................. <tPos>
  [ 31] pusharglistnoret 2 ...................... <pRegProcess, tPos>
  [ 33] objcall 327 ............................. pRegProcess.deleteAt(tPos)
  [ 36] ret
end

on clearUserNameField me
  [  0] pushzero ................................ <0>
  [  1] setprop 173 ............................. pNameChecked = 0
  [  3] getprop 73 .............................. <pWindowTitle>
  [  5] pusharglist 1 ........................... <pWindowTitle>
  [  7] extcall 130 ............................. <getWindow(pWindowTitle)>
  [  9] pushcons 97 ............................. <"char_name_field">
  [ 11] pusharglist 2 ........................... <getWindow(pWindowTitle), "char_name_field">
  [ 13] objcall 133 ............................. <getWindow(pWindowTitle).getElement("char_name_field")>
  [ 15] setlocal 0 .............................. tElem = getWindow(pWindowTitle).getElement("char_name_field")
  [ 17] getlocal 0 .............................. <tElem>
  [ 19] pushzero ................................ <0>
  [ 20] eq ...................................... <tElem = 0>
  [ 21] jmpifz [ 29] ............................ if tElem = 0 then
  [ 24] pushzero ................................ <0>
  [ 25] pusharglistnoret 1 ...................... <0>
  [ 27] extcall 89 .............................. return 0
  [ 29] getlocal 0 .............................. <tElem>
  [ 31] pushcons 0 .............................. <EMPTY>
  [ 33] pusharglistnoret 2 ...................... <tElem, EMPTY>
  [ 35] objcall 134 ............................. tElem.setText(EMPTY)
  [ 37] getlocal 0 .............................. <tElem>
  [ 39] pushint8 1 .............................. <1>
  [ 41] pusharglistnoret 2 ...................... <tElem, 1>
  [ 43] objcall 190 ............................. tElem.setFocus(1)
  [ 45] ret
end

on ClearPasswordFields me
  [  0] getprop 73 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 130 ............................. <getWindow(pWindowTitle)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] pushcons 181 ............................ <"char_pw_field">
  [ 12] pusharglist 2 ........................... <tWndObj, "char_pw_field">
  [ 14] objcall 133 ............................. <tWndObj.getElement("char_pw_field")>
  [ 16] pushcons 0 .............................. <EMPTY>
  [ 18] pusharglistnoret 2 ...................... <tWndObj.getElement("char_pw_field"), EMPTY>
  [ 20] objcall 134 ............................. tWndObj.getElement("char_pw_field").setText(EMPTY)
  [ 22] getlocal 0 .............................. <tWndObj>
  [ 24] pushcons 182 ............................ <"char_pwagain_field">
  [ 26] pusharglist 2 ........................... <tWndObj, "char_pwagain_field">
  [ 28] objcall 133 ............................. <tWndObj.getElement("char_pwagain_field")>
  [ 30] pushcons 0 .............................. <EMPTY>
  [ 32] pusharglistnoret 2 ...................... <tWndObj.getElement("char_pwagain_field"), EMPTY>
  [ 34] objcall 134 ............................. tWndObj.getElement("char_pwagain_field").setText(EMPTY)
  [ 36] getprop 69 .............................. <pTempPassword>
  [ 38] pushcons 181 ............................ <"char_pw_field">
  [ 40] pushcons 0 .............................. <EMPTY>
  [ 42] pusharglistnoret 3 ...................... <pTempPassword, "char_pw_field", EMPTY>
  [ 44] objcall 174 ............................. pTempPassword["char_pw_field"] = EMPTY
  [ 46] getprop 69 .............................. <pTempPassword>
  [ 48] pushcons 182 ............................ <"char_pwagain_field">
  [ 50] pushcons 0 .............................. <EMPTY>
  [ 52] pusharglistnoret 3 ...................... <pTempPassword, "char_pwagain_field", EMPTY>
  [ 54] objcall 174 ............................. pTempPassword["char_pwagain_field"] = EMPTY
  [ 56] getlocal 0 .............................. <tWndObj>
  [ 58] pushcons 181 ............................ <"char_pw_field">
  [ 60] pusharglist 2 ........................... <tWndObj, "char_pw_field">
  [ 62] objcall 133 ............................. <tWndObj.getElement("char_pw_field")>
  [ 64] pushint8 1 .............................. <1>
  [ 66] pusharglistnoret 2 ...................... <tWndObj.getElement("char_pw_field"), 1>
  [ 68] objcall 190 ............................. tWndObj.getElement("char_pw_field").setFocus(1)
  [ 70] ret
end

on DEPR_getPassword me
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setlocal 0 .............................. tPw = EMPTY
  [  4] getprop 69 .............................. <pTempPassword>
  [  6] pushcons 181 ............................ <"char_pw_field">
  [  8] pusharglist 2 ........................... <pTempPassword, "char_pw_field">
  [ 10] objcall 105 ............................. <pTempPassword["char_pw_field"]>
  [ 12] peek 0
  [ 14] pusharglist 1
  [ 16] extcall 104
  [ 18] pushint8 1
  [ 20] peek 0
  [ 22] peek 2
  [ 24] lteq
  [ 25] jmpifz [ 50] ............................ repeat with f in pTempPassword["char_pw_field"]
  [ 28] peek 2
  [ 30] peek 1
  [ 32] pusharglist 2
  [ 34] extcall 105
  [ 36] setlocal 1
  [ 38] getlocal 0 .............................. <tPw>
  [ 40] getlocal 1 .............................. <f>
  [ 42] joinstr ................................. <tPw & f>
  [ 43] setlocal 0 .............................. tPw = tPw & f
  [ 45] pushint8 1
  [ 47] add
  [ 48] endrepeat [ 20]
  [ 50] pop 3
  [ 52] getlocal 0 .............................. <tPw>
  [ 54] pusharglistnoret 1 ...................... <tPw>
  [ 56] extcall 89 .............................. return tPw
  [ 58] ret
end

on registrationReady me
  [  0] pushsymb 109 ............................ <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 110 ............................. <getObject(#session)>
  [  6] pushsymb 296 ............................ <#userName>
  [  9] getprop 70 .............................. <pPropsToServer>
  [ 11] pushcons 61 ............................. <"name">
  [ 13] pusharglist 2 ........................... <pPropsToServer, "name">
  [ 15] objcall 105 ............................. <pPropsToServer["name"]>
  [ 17] pusharglistnoret 3 ...................... <getObject(#session), #userName, pPropsToServer["name"]>
  [ 19] objcall 111 ............................. getObject(#session).set(#userName, pPropsToServer["name"])
  [ 21] pushsymb 109 ............................ <#session>
  [ 23] pusharglist 1 ........................... <#session>
  [ 25] extcall 110 ............................. <getObject(#session)>
  [ 27] pushsymb 153 ............................ <#password>
  [ 29] getprop 70 .............................. <pPropsToServer>
  [ 31] pushcons 35 ............................. <"password">
  [ 33] pusharglist 2 ........................... <pPropsToServer, "password">
  [ 35] objcall 105 ............................. <pPropsToServer["password"]>
  [ 37] pusharglistnoret 3 ...................... <getObject(#session), #password, pPropsToServer["password"]>
  [ 39] objcall 111 ............................. getObject(#session).set(#password, pPropsToServer["password"])
  [ 41] pushsymb 109 ............................ <#session>
  [ 43] pusharglist 1 ........................... <#session>
  [ 45] extcall 110 ............................. <getObject(#session)>
  [ 47] pushsymb 156 ............................ <#email>
  [ 49] getprop 70 .............................. <pPropsToServer>
  [ 51] pushcons 65 ............................. <"email">
  [ 53] pusharglist 2 ........................... <pPropsToServer, "email">
  [ 55] objcall 105 ............................. <pPropsToServer["email"]>
  [ 57] pusharglistnoret 3 ...................... <getObject(#session), #email, pPropsToServer["email"]>
  [ 59] objcall 111 ............................. getObject(#session).set(#email, pPropsToServer["email"])
  [ 61] pushsymb 109 ............................ <#session>
  [ 63] pusharglist 1 ........................... <#session>
  [ 65] extcall 110 ............................. <getObject(#session)>
  [ 67] pushcons 45 ............................. <"user_figure">
  [ 69] getprop 70 .............................. <pPropsToServer>
  [ 71] pushcons 46 ............................. <"figure">
  [ 73] pusharglist 2 ........................... <pPropsToServer, "figure">
  [ 75] objcall 105 ............................. <pPropsToServer["figure"]>
  [ 77] pusharglist 1 ........................... <pPropsToServer["figure"]>
  [ 79] objcall 148 ............................. <pPropsToServer["figure"].duplicate()>
  [ 81] pusharglistnoret 3 ...................... <getObject(#session), "user_figure", pPropsToServer["figure"].duplicate()>
  [ 83] objcall 111 ............................. getObject(#session).set("user_figure", pPropsToServer["figure"].duplicate())
  [ 85] getprop 112 ............................. <pmode>
  [ 87] pushcons 60 ............................. <"registration">
  [ 89] eq ...................................... <pmode = "registration">
  [ 90] getprop 112 ............................. <pmode>
  [ 92] pushcons 42 ............................. <"parent_email">
  [ 94] eq ...................................... <pmode = "parent_email">
  [ 95] or ...................................... <(pmode = "registration") or (pmode = "parent_email")>
  [ 96] getprop 112 ............................. <pmode>
  [ 98] pushcons 43 ............................. <"parent_email_strong_coppa">
  [100] eq ...................................... <pmode = "parent_email_strong_coppa">
  [101] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [102] getprop 112 ............................. <pmode>
  [104] pushcons 41 ............................. <"topt_verification">
  [106] eq ...................................... <pmode = "topt_verification">
  [107] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification")>
  [108] jmpifz [152] ............................ if (pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification") then / else
  [111] pushcons 183 ............................ <"Figure_Preview">
  [113] pusharglist 1 ........................... <"Figure_Preview">
  [115] extcall 95 .............................. <objectExists("Figure_Preview")>
  [117] jmpifz [136] ............................ if objectExists("Figure_Preview") then
  [120] pushcons 183 ............................ <"Figure_Preview">
  [122] pusharglist 1 ........................... <"Figure_Preview">
  [124] extcall 110 ............................. <getObject("Figure_Preview")>
  [126] pushcons 152 ............................ <"h">
  [128] pushint8 3 .............................. <3>
  [130] pushcons 184 ............................ <"remove">
  [132] pusharglistnoret 4 ...................... <getObject("Figure_Preview"), "h", 3, "remove">
  [134] objcall 33 .............................. getObject("Figure_Preview").createTemplateHuman("h", 3, "remove")
  [136] getparam 0 .............................. <me>
  [138] pusharglist 1 ........................... <me>
  [140] objcall 114 ............................. <me.getComponent()>
  [142] getprop 70 .............................. <pPropsToServer>
  [144] pusharglistnoret 2 ...................... <me.getComponent(), pPropsToServer>
  [146] objcall 329 ............................. me.getComponent().sendNewFigureDataToServer(pPropsToServer)
  [149] jmp [164]
  [152] getparam 0 .............................. <me>
  [154] pusharglist 1 ........................... <me>
  [156] objcall 114 ............................. <me.getComponent()>
  [158] getprop 70 .............................. <pPropsToServer>
  [160] pusharglistnoret 2 ...................... <me.getComponent(), pPropsToServer>
  [162] objcall 149 ............................. me.getComponent().sendFigureUpdateToServer(pPropsToServer)
  [164] ret
end

on changePage me, tParm
  [  0] getparam 1 .............................. <tParm>
  [  2] pusharglist 1 ........................... <tParm>
  [  4] extcall 100 ............................. <voidp(tParm)>
  [  6] jmpifz [ 13] ............................ if voidp(tParm) then
  [  9] pushint8 1 .............................. <1>
  [ 11] setparam 1 .............................. tParm = 1
  [ 13] getprop 146 ............................. <pRegProcess>
  [ 15] pushzero ................................ <0>
  [ 16] eq ...................................... <pRegProcess = 0>
  [ 17] jmpifz [ 34] ............................ if pRegProcess = 0 then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 185 ............................ <"registration process not found">
  [ 24] pushsymb 58 ............................. <#changePage>
  [ 26] pusharglist 3 ........................... <me, "registration process not found", #changePage>
  [ 28] extcall 85 .............................. <error(me, "registration process not found", #changePage)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "registration process not found", #changePage)>
  [ 32] extcall 89 .............................. return error(me, "registration process not found", #changePage)
  [ 34] getparam 1 .............................. <tParm>
  [ 36] getobjprop 102 .......................... <tParm.ilk>
  [ 38] pushsymb 176 ............................ <#string>
  [ 40] eq ...................................... <tParm.ilk = #string>
  [ 41] jmpifz [ 61] ............................ if tParm.ilk = #string then / else
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglistnoret 1 ...................... <me>
  [ 48] objcall 29 .............................. me.getMyDataFromFields()
  [ 50] getparam 0 .............................. <me>
  [ 52] getparam 1 .............................. <tParm>
  [ 54] pusharglistnoret 2 ...................... <me, tParm>
  [ 56] objcall 60 .............................. me.enterPage(tParm)
  [ 58] jmp [161]
  [ 61] getparam 1 .............................. <tParm>
  [ 63] getobjprop 102 .......................... <tParm.ilk>
  [ 65] pushsymb 199 ............................ <#integer>
  [ 67] eq ...................................... <tParm.ilk = #integer>
  [ 68] jmpifz [161] ............................ if tParm.ilk = #integer then
  [ 71] getparam 1 .............................. <tParm>
  [ 73] pushzero ................................ <0>
  [ 74] gt ...................................... <tParm > 0>
  [ 75] jmpifz [ 99] ............................ if tParm > 0 then / else
  [ 78] getparam 0 .............................. <me>
  [ 80] getprop 75 .............................. <pOpenWindow>
  [ 82] pusharglist 2 ........................... <me, pOpenWindow>
  [ 84] objcall 59 .............................. <me.leavePage(pOpenWindow)>
  [ 86] pushzero ................................ <0>
  [ 87] eq ...................................... <me.leavePage(pOpenWindow) = 0>
  [ 88] jmpifz [ 96] ............................ if me.leavePage(pOpenWindow) = 0 then
  [ 91] pushzero ................................ <0>
  [ 92] pusharglistnoret 1 ...................... <0>
  [ 94] extcall 89 .............................. return 0
  [ 96] jmp [105]
  [ 99] getparam 0 .............................. <me>
  [101] pusharglistnoret 1 ...................... <me>
  [103] objcall 29 .............................. me.getMyDataFromFields()
  [105] getprop 76 .............................. <pRegProcessLocation>
  [107] getparam 1 .............................. <tParm>
  [109] add ..................................... <pRegProcessLocation + tParm>
  [110] setprop 76 .............................. pRegProcessLocation = pRegProcessLocation + tParm
  [112] getprop 76 .............................. <pRegProcessLocation>
  [114] pushint8 1 .............................. <1>
  [116] lt ...................................... <pRegProcessLocation < 1>
  [117] jmpifz [124] ............................ if pRegProcessLocation < 1 then
  [120] pushint8 1 .............................. <1>
  [122] setprop 76 .............................. pRegProcessLocation = 1
  [124] getprop 76 .............................. <pRegProcessLocation>
  [126] getprop 146 ............................. <pRegProcess>
  [128] getobjprop 104 .......................... <pRegProcess.count>
  [130] gt ...................................... <pRegProcessLocation > pRegProcess.count>
  [131] jmpifz [140] ............................ if pRegProcessLocation > pRegProcess.count then
  [134] getprop 146 ............................. <pRegProcess>
  [136] getobjprop 104 .......................... <pRegProcess.count>
  [138] setprop 76 .............................. pRegProcessLocation = pRegProcess.count
  [140] getprop 146 ............................. <pRegProcess>
  [142] getprop 76 .............................. <pRegProcessLocation>
  [144] pusharglist 2 ........................... <pRegProcess, pRegProcessLocation>
  [146] objcall 105 ............................. <pRegProcess[pRegProcessLocation]>
  [148] setlocal 0 .............................. tNextWindow = pRegProcess[pRegProcessLocation]
  [150] getparam 0 .............................. <me>
  [152] getlocal 0 .............................. <tNextWindow>
  [154] pushcons 16 ............................. <".window">
  [156] joinstr ................................. <tNextWindow & ".window">
  [157] pusharglistnoret 2 ...................... <me, tNextWindow & ".window">
  [159] objcall 60 .............................. me.enterPage(tNextWindow & ".window")
  [161] ret
end

on leavePage me, tCurrentWindow
  [  0] getparam 1 .............................. <tCurrentWindow>
  [  2] peek 0 .................................. case tCurrentWindow of
  [  4] pushcons 92 ............................. <"reg_legal.window">
  [  6] eq
  [  7] jmpifz [ 80] ............................ (case) "reg_legal.window":
  [ 10] pushcons 0 .............................. <EMPTY>
  [ 12] setprop 299 ............................. pErrorMsg = EMPTY
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 0 .............................. tProceed = 1
  [ 19] getlocal 0 .............................. <tProceed>
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglist 1 ........................... <me>
  [ 25] objcall 51 .............................. <me.checkAgreeTerms()>
  [ 27] and ..................................... <tProceed and me.checkAgreeTerms()>
  [ 28] setlocal 0 .............................. tProceed = tProceed and me.checkAgreeTerms()
  [ 30] getlocal 0 .............................. <tProceed>
  [ 32] jmpifz [ 44] ............................ if tProceed then / else
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 1 ...................... <me>
  [ 39] objcall 29 .............................. me.getMyDataFromFields()
  [ 41] jmp [ 77]
  [ 44] pushsymb 119 ............................ <#alert>
  [ 46] pushsymb 158 ............................ <#title>
  [ 48] pushcons 186 ............................ <"alert_reg_t">
  [ 50] pushsymb 120 ............................ <#msg>
  [ 52] getprop 299 ............................. <pErrorMsg>
  [ 55] pushsymb 121 ............................ <#id>
  [ 57] pushcons 187 ............................ <"problems">
  [ 59] pushsymb 122 ............................ <#modal>
  [ 61] pushint8 1 .............................. <1>
  [ 63] pusharglist 8 ........................... <[#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [ 65] pushproplist ............................ <[#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [ 66] pusharglistnoret 2 ...................... <#alert, [#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [ 68] extcall 118 ............................. executeMessage(#alert, [#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1])
  [ 70] pop 1
  [ 72] pushzero ................................ <0>
  [ 73] pusharglistnoret 1 ...................... <0>
  [ 75] extcall 89 .............................. return 0
  [ 77] jmp [1771]
  [ 80] peek 0
  [ 82] pushcons 14 ............................. <"reg_namepage.window">
  [ 84] eq
  [ 85] jmpifz [131] ............................ (case) "reg_namepage.window":
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglistnoret 1 ...................... <me>
  [ 92] objcall 29 .............................. me.getMyDataFromFields()
  [ 94] getprop 173 ............................. <pNameChecked>
  [ 96] pushzero ................................ <0>
  [ 97] eq ...................................... <pNameChecked = 0>
  [ 98] jmpifz [128] ............................ if pNameChecked = 0 then
  [101] getparam 0 .............................. <me>
  [103] pusharglist 1 ........................... <me>
  [105] objcall 46 .............................. <me.checkName()>
  [107] pushint8 1 .............................. <1>
  [109] eq ...................................... <me.checkName() = 1>
  [110] jmpifz [121] ............................ if me.checkName() = 1 then
  [113] getparam 0 .............................. <me>
  [115] pushcons 12 ............................. <"reg_loading.window">
  [117] pusharglistnoret 2 ...................... <me, "reg_loading.window">
  [119] objcall 26 .............................. me.ChangeWindowView("reg_loading.window")
  [121] pop 1
  [123] pushzero ................................ <0>
  [124] pusharglistnoret 1 ...................... <0>
  [126] extcall 89 .............................. return 0
  [128] jmp [1771]
  [131] peek 0
  [133] pushcons 99 ............................. <"reg_namepage_mission.window">
  [135] eq
  [136] jmpifz [148] ............................ (case) "reg_namepage_mission.window":
  [139] getparam 0 .............................. <me>
  [141] pusharglistnoret 1 ...................... <me>
  [143] objcall 29 .............................. me.getMyDataFromFields()
  [145] jmp [1771]
  [148] peek 0
  [150] pushcons 101 ............................ <"reg_infopage.window">
  [152] eq
  [153] jmpifz [721] ............................ (case) "reg_infopage.window":
  [156] getprop 73 .............................. <pWindowTitle>
  [158] pusharglist 1 ........................... <pWindowTitle>
  [160] extcall 93 .............................. <windowExists(pWindowTitle)>
  [162] not ..................................... <not windowExists(pWindowTitle)>
  [163] jmpifz [173] ............................ if not windowExists(pWindowTitle) then
  [166] pop 1
  [168] pushzero ................................ <0>
  [169] pusharglistnoret 1 ...................... <0>
  [171] extcall 89 .............................. return 0
  [173] getprop 73 .............................. <pWindowTitle>
  [175] pusharglist 1 ........................... <pWindowTitle>
  [177] extcall 130 ............................. <getWindow(pWindowTitle)>
  [179] setlocal 1 .............................. tWndObj = getWindow(pWindowTitle)
  [181] getlocal 1 .............................. <tWndObj>
  [183] pushcons 103 ............................ <"char_dd_field">
  [185] pusharglist 2 ........................... <tWndObj, "char_dd_field">
  [187] objcall 133 ............................. <tWndObj.getElement("char_dd_field")>
  [189] pusharglist 1 ........................... <tWndObj.getElement("char_dd_field")>
  [191] objcall 74 .............................. <tWndObj.getElement("char_dd_field").getText()>
  [193] pusharglist 1 ........................... <tWndObj.getElement("char_dd_field").getText()>
  [195] extcall 199 ............................. <integer(tWndObj.getElement("char_dd_field").getText())>
  [197] setlocal 2 .............................. tDay = integer(tWndObj.getElement("char_dd_field").getText())
  [199] getlocal 1 .............................. <tWndObj>
  [201] pushcons 37 ............................. <"monthDrop">
  [203] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [205] objcall 135 ............................. <tWndObj.elementExists("monthDrop")>
  [207] not ..................................... <not tWndObj.elementExists("monthDrop")>
  [208] jmpifz [227] ............................ if not tWndObj.elementExists("monthDrop") then
  [211] pop 1
  [213] getparam 0 .............................. <me>
  [215] pushcons 122 ............................ <"No month drop!">
  [217] pushsymb 59 ............................. <#leavePage>
  [219] pusharglist 3 ........................... <me, "No month drop!", #leavePage>
  [221] extcall 85 .............................. <error(me, "No month drop!", #leavePage)>
  [223] pusharglistnoret 1 ...................... <error(me, "No month drop!", #leavePage)>
  [225] extcall 89 .............................. return error(me, "No month drop!", #leavePage)
  [227] getlocal 1 .............................. <tWndObj>
  [229] pushcons 37 ............................. <"monthDrop">
  [231] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [233] objcall 133 ............................. <tWndObj.getElement("monthDrop")>
  [235] pusharglist 1 ........................... <tWndObj.getElement("monthDrop")>
  [237] objcall 212 ............................. <tWndObj.getElement("monthDrop").getSelection()>
  [239] setlocal 3 .............................. tMonthSelection = tWndObj.getElement("monthDrop").getSelection()
  [241] getlocal 3 .............................. <tMonthSelection>
  [243] getlocal 3 .............................. <tMonthSelection>
  [245] getobjprop 214 .......................... <tMonthSelection.length>
  [247] pushint8 1 .............................. <1>
  [249] sub ..................................... <tMonthSelection.length - 1>
  [250] getlocal 3 .............................. <tMonthSelection>
  [252] getobjprop 214 .......................... <tMonthSelection.length>
  [254] pusharglist 3 ........................... <tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length>
  [256] extcall 213 ............................. <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [258] pusharglist 1 ........................... <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [260] extcall 199 ............................. <integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))>
  [262] setlocal 4 .............................. tMonth = integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))
  [264] getlocal 1 .............................. <tWndObj>
  [266] pushcons 104 ............................ <"char_yyyy_field">
  [268] pusharglist 2 ........................... <tWndObj, "char_yyyy_field">
  [270] objcall 133 ............................. <tWndObj.getElement("char_yyyy_field")>
  [272] pusharglist 1 ........................... <tWndObj.getElement("char_yyyy_field")>
  [274] objcall 74 .............................. <tWndObj.getElement("char_yyyy_field").getText()>
  [276] pusharglist 1 ........................... <tWndObj.getElement("char_yyyy_field").getText()>
  [278] extcall 199 ............................. <integer(tWndObj.getElement("char_yyyy_field").getText())>
  [280] setlocal 5 .............................. tYear = integer(tWndObj.getElement("char_yyyy_field").getText())
  [282] getlocal 1 .............................. <tWndObj>
  [284] pushcons 102 ............................ <"char_email_field">
  [286] pusharglist 2 ........................... <tWndObj, "char_email_field">
  [288] objcall 133 ............................. <tWndObj.getElement("char_email_field")>
  [290] pusharglist 1 ........................... <tWndObj.getElement("char_email_field")>
  [292] objcall 74 .............................. <tWndObj.getElement("char_email_field").getText()>
  [294] setlocal 6 .............................. tEmail = tWndObj.getElement("char_email_field").getText()
  [296] pushcons 0 .............................. <EMPTY>
  [298] setprop 299 ............................. pErrorMsg = EMPTY
  [301] pushint8 1 .............................. <1>
  [303] setlocal 0 .............................. tProceed = 1
  [305] getlocal 0 .............................. <tProceed>
  [307] getparam 0 .............................. <me>
  [309] getprop 69 .............................. <pTempPassword>
  [311] pushcons 181 ............................ <"char_pw_field">
  [313] pusharglist 2 ........................... <pTempPassword, "char_pw_field">
  [315] objcall 105 ............................. <pTempPassword["char_pw_field"]>
  [317] getprop 69 .............................. <pTempPassword>
  [319] pushcons 182 ............................ <"char_pwagain_field">
  [321] pusharglist 2 ........................... <pTempPassword, "char_pwagain_field">
  [323] objcall 105 ............................. <pTempPassword["char_pwagain_field"]>
  [325] pusharglist 3 ........................... <me, pTempPassword["char_pw_field"], pTempPassword["char_pwagain_field"]>
  [327] objcall 47 .............................. <me.checkPasswords(pTempPassword["char_pw_field"], pTempPassword["char_pwagain_field"])>
  [329] and ..................................... <tProceed and me.checkPasswords(pTempPassword["char_pw_field"], pTempPassword["char_pwagain_field"])>
  [330] setlocal 0 .............................. tProceed = tProceed and me.checkPasswords(pTempPassword["char_pw_field"], pTempPassword["char_pwagain_field"])
  [332] getparam 0 .............................. <me>
  [334] getlocal 5 .............................. <tYear>
  [336] getlocal 4 .............................. <tMonth>
  [338] getlocal 2 .............................. <tDay>
  [340] pusharglist 4 ........................... <me, tYear, tMonth, tDay>
  [342] objcall 49 .............................. <me.validateBirthday(tYear, tMonth, tDay)>
  [344] setlocal 7 .............................. tBirthOK = me.validateBirthday(tYear, tMonth, tDay)
  [346] getlocal 0 .............................. <tProceed>
  [348] getlocal 7 .............................. <tBirthOK>
  [350] and ..................................... <tProceed and tBirthOK>
  [351] setlocal 0 .............................. tProceed = tProceed and tBirthOK
  [353] getparam 0 .............................. <me>
  [355] getlocal 6 .............................. <tEmail>
  [357] pusharglist 2 ........................... <me, tEmail>
  [359] objcall 50 .............................. <me.validateEmail(tEmail)>
  [361] setlocal 8 .............................. tEmailOK = me.validateEmail(tEmail)
  [363] getlocal 0 .............................. <tProceed>
  [365] getlocal 8 .............................. <tEmailOK>
  [367] and ..................................... <tProceed and tEmailOK>
  [368] setlocal 0 .............................. tProceed = tProceed and tEmailOK
  [370] getlocal 7 .............................. <tBirthOK>
  [372] not ..................................... <not tBirthOK>
  [373] jmpifz [392] ............................ if not tBirthOK then
  [376] getprop 299 ............................. <pErrorMsg>
  [379] pushcons 188 ............................ <"alert_reg_birthday">
  [381] pusharglist 1 ........................... <"alert_reg_birthday">
  [383] extcall 74 .............................. <getText("alert_reg_birthday")>
  [385] joinstr ................................. <pErrorMsg & getText("alert_reg_birthday")>
  [386] pushcons 26 ............................. <RETURN>
  [388] joinstr ................................. <pErrorMsg & getText("alert_reg_birthday") & RETURN>
  [389] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("alert_reg_birthday") & RETURN
  [392] getlocal 8 .............................. <tEmailOK>
  [394] not ..................................... <not tEmailOK>
  [395] jmpifz [414] ............................ if not tEmailOK then
  [398] getprop 299 ............................. <pErrorMsg>
  [401] pushcons 189 ............................ <"alert_reg_email">
  [403] pusharglist 1 ........................... <"alert_reg_email">
  [405] extcall 74 .............................. <getText("alert_reg_email")>
  [407] joinstr ................................. <pErrorMsg & getText("alert_reg_email")>
  [408] pushcons 26 ............................. <RETURN>
  [410] joinstr ................................. <pErrorMsg & getText("alert_reg_email") & RETURN>
  [411] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("alert_reg_email") & RETURN
  [414] getprop 80 .............................. <pPasswordErrors>
  [416] pushcons 0 .............................. <EMPTY>
  [418] nteq .................................... <pPasswordErrors <> EMPTY>
  [419] jmpifz [441] ............................ if pPasswordErrors <> EMPTY then
  [422] pushzero ................................ <0>
  [423] setlocal 0 .............................. tProceed = 0
  [425] getprop 299 ............................. <pErrorMsg>
  [428] getprop 80 .............................. <pPasswordErrors>
  [430] joinstr ................................. <pErrorMsg & pPasswordErrors>
  [431] pushcons 26 ............................. <RETURN>
  [433] joinstr ................................. <pErrorMsg & pPasswordErrors & RETURN>
  [434] setprop 299 ............................. pErrorMsg = pErrorMsg & pPasswordErrors & RETURN
  [437] pushcons 0 .............................. <EMPTY>
  [439] setprop 80 .............................. pPasswordErrors = EMPTY
  [441] getlocal 0 .............................. <tProceed>
  [443] not ..................................... <not tProceed>
  [444] jmpifz [480] ............................ if not tProceed then
  [447] pushsymb 119 ............................ <#alert>
  [449] pushsymb 158 ............................ <#title>
  [451] pushcons 186 ............................ <"alert_reg_t">
  [453] pushsymb 120 ............................ <#msg>
  [455] getprop 299 ............................. <pErrorMsg>
  [458] pushsymb 121 ............................ <#id>
  [460] pushcons 187 ............................ <"problems">
  [462] pushsymb 122 ............................ <#modal>
  [464] pushint8 1 .............................. <1>
  [466] pusharglist 8 ........................... <[#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [468] pushproplist ............................ <[#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [469] pusharglistnoret 2 ...................... <#alert, [#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [471] extcall 118 ............................. executeMessage(#alert, [#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1])
  [473] pop 1
  [475] pushzero ................................ <0>
  [476] pusharglistnoret 1 ...................... <0>
  [478] extcall 89 .............................. return 0
  [480] getprop 70 .............................. <pPropsToServer>
  [482] pushcons 35 ............................. <"password">
  [484] getprop 69 .............................. <pTempPassword>
  [486] pushcons 181 ............................ <"char_pw_field">
  [488] pusharglist 2 ........................... <pTempPassword, "char_pw_field">
  [490] objcall 105 ............................. <pTempPassword["char_pw_field"]>
  [492] pusharglistnoret 3 ...................... <pPropsToServer, "password", pTempPassword["char_pw_field"]>
  [494] objcall 174 ............................. pPropsToServer["password"] = pTempPassword["char_pw_field"]
  [496] getparam 0 .............................. <me>
  [498] pusharglistnoret 1 ...................... <me>
  [500] objcall 29 .............................. me.getMyDataFromFields()
  [502] getprop 82 .............................. <pPasswordChecked>
  [504] not ..................................... <not pPasswordChecked>
  [505] jmpifz [543] ............................ if not pPasswordChecked then
  [508] pushcons 0 .............................. <EMPTY>
  [510] setprop 80 .............................. pPasswordErrors = EMPTY
  [512] pushcons 0 .............................. <EMPTY>
  [514] setprop 299 ............................. pErrorMsg = EMPTY
  [517] getparam 0 .............................. <me>
  [519] pusharglist 1 ........................... <me>
  [521] objcall 114 ............................. <me.getComponent()>
  [523] getprop 70 .............................. <pPropsToServer>
  [525] pushcons 35 ............................. <"password">
  [527] pusharglist 2 ........................... <pPropsToServer, "password">
  [529] objcall 105 ............................. <pPropsToServer["password"]>
  [531] pusharglistnoret 2 ...................... <me.getComponent(), pPropsToServer["password"]>
  [533] objcall 332 ............................. me.getComponent().sendValidatePassword(pPropsToServer["password"])
  [536] pop 1
  [538] pushzero ................................ <0>
  [539] pusharglistnoret 1 ...................... <0>
  [541] extcall 89 .............................. return 0
  [543] getprop 123 ............................. <pEmailChecked>
  [545] not ..................................... <not pEmailChecked>
  [546] jmpifz [569] ............................ if not pEmailChecked then
  [549] getparam 0 .............................. <me>
  [551] pusharglist 1 ........................... <me>
  [553] objcall 114 ............................. <me.getComponent()>
  [555] getlocal 6 .............................. <tEmail>
  [557] pusharglistnoret 2 ...................... <me.getComponent(), tEmail>
  [559] objcall 333 ............................. me.getComponent().checkEmailAddress(tEmail)
  [562] pop 1
  [564] pushzero ................................ <0>
  [565] pusharglistnoret 1 ...................... <0>
  [567] extcall 89 .............................. return 0
  [569] getprop 112 ............................. <pmode>
  [571] pushcons 42 ............................. <"parent_email">
  [573] eq ...................................... <pmode = "parent_email">
  [574] getprop 112 ............................. <pmode>
  [576] pushcons 43 ............................. <"parent_email_strong_coppa">
  [578] eq ...................................... <pmode = "parent_email_strong_coppa">
  [579] or ...................................... <(pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [580] jmpifz [718] ............................ if (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") then
  [583] getparam 0 .............................. <me>
  [585] pusharglist 1 ........................... <me>
  [587] objcall 114 ............................. <me.getComponent()>
  [589] pusharglist 1 ........................... <me.getComponent()>
  [591] objcall 334 ............................. <me.getComponent().getParentEmailNeededFlag()>
  [594] pushint8 1 .............................. <1>
  [596] nteq .................................... <me.getComponent().getParentEmailNeededFlag() <> 1>
  [597] jmpifz [718] ............................ if me.getComponent().getParentEmailNeededFlag() <> 1 then
  [600] getmovieprop 198 ........................ <the itemDelimiter>
  [602] setlocal 9 .............................. tItemD = the itemDelimiter
  [604] pushcons 32 ............................. <".">
  [606] setmovieprop 198 ........................ the itemDelimiter = "."
  [608] getprop 70 .............................. <pPropsToServer>
  [610] pushcons 34 ............................. <"birthday">
  [612] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [614] objcall 105 ............................. <pPropsToServer["birthday"]>
  [616] pushsymb 200 ............................ <#item>
  [618] pushint8 3 .............................. <3>
  [620] pusharglist 3 ........................... <pPropsToServer["birthday"], #item, 3>
  [622] objcall 186 ............................. <pPropsToServer["birthday"].item[3]>
  [624] setlocal 10 ............................. tBirthday = pPropsToServer["birthday"].item[3]
  [626] getlocal 10 ............................. <tBirthday>
  [628] pushcons 32 ............................. <".">
  [630] joinstr ................................. <tBirthday & ".">
  [631] getprop 70 .............................. <pPropsToServer>
  [633] pushcons 34 ............................. <"birthday">
  [635] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [637] objcall 105 ............................. <pPropsToServer["birthday"]>
  [639] pushsymb 200 ............................ <#item>
  [641] pushint8 2 .............................. <2>
  [643] pusharglist 3 ........................... <pPropsToServer["birthday"], #item, 2>
  [645] objcall 186 ............................. <pPropsToServer["birthday"].item[2]>
  [647] joinstr ................................. <tBirthday & "." & pPropsToServer["birthday"].item[2]>
  [648] setlocal 10 ............................. tBirthday = tBirthday & "." & pPropsToServer["birthday"].item[2]
  [650] getlocal 10 ............................. <tBirthday>
  [652] pushcons 32 ............................. <".">
  [654] joinstr ................................. <tBirthday & ".">
  [655] getprop 70 .............................. <pPropsToServer>
  [657] pushcons 34 ............................. <"birthday">
  [659] pusharglist 2 ........................... <pPropsToServer, "birthday">
  [661] objcall 105 ............................. <pPropsToServer["birthday"]>
  [663] pushsymb 200 ............................ <#item>
  [665] pushint8 1 .............................. <1>
  [667] pusharglist 3 ........................... <pPropsToServer["birthday"], #item, 1>
  [669] objcall 186 ............................. <pPropsToServer["birthday"].item[1]>
  [671] joinstr ................................. <tBirthday & "." & pPropsToServer["birthday"].item[1]>
  [672] setlocal 10 ............................. tBirthday = tBirthday & "." & pPropsToServer["birthday"].item[1]
  [674] getlocal 9 .............................. <tItemD>
  [676] setmovieprop 198 ........................ the itemDelimiter = tItemD
  [678] getprop 70 .............................. <pPropsToServer>
  [680] pushcons 61 ............................. <"name">
  [682] pusharglist 2 ........................... <pPropsToServer, "name">
  [684] objcall 105 ............................. <pPropsToServer["name"]>
  [686] setlocal 11 ............................. tHabboID = pPropsToServer["name"]
  [688] getparam 0 .............................. <me>
  [690] pusharglist 1 ........................... <me>
  [692] objcall 114 ............................. <me.getComponent()>
  [694] getlocal 10 ............................. <tBirthday>
  [696] getlocal 11 ............................. <tHabboID>
  [698] pusharglistnoret 3 ...................... <me.getComponent(), tBirthday, tHabboID>
  [700] objcall 335 ............................. me.getComponent().parentEmailNeedQuery(tBirthday, tHabboID)
  [703] getparam 0 .............................. <me>
  [705] pushcons 12 ............................. <"reg_loading.window">
  [707] pusharglistnoret 2 ...................... <me, "reg_loading.window">
  [709] objcall 26 .............................. me.ChangeWindowView("reg_loading.window")
  [711] pop 1
  [713] pushzero ................................ <0>
  [714] pusharglistnoret 1 ...................... <0>
  [716] extcall 89 .............................. return 0
  [718] jmp [1771]
  [721] peek 0
  [723] pushcons 106 ............................ <"reg_infopage_no_age.window">
  [725] eq
  [726] jmpifz [1142] ........................... (case) "reg_infopage_no_age.window":
  [729] getprop 73 .............................. <pWindowTitle>
  [731] pusharglist 1 ........................... <pWindowTitle>
  [733] extcall 93 .............................. <windowExists(pWindowTitle)>
  [735] not ..................................... <not windowExists(pWindowTitle)>
  [736] jmpifz [746] ............................ if not windowExists(pWindowTitle) then
  [739] pop 1
  [741] pushzero ................................ <0>
  [742] pusharglistnoret 1 ...................... <0>
  [744] extcall 89 .............................. return 0
  [746] getprop 73 .............................. <pWindowTitle>
  [748] pusharglist 1 ........................... <pWindowTitle>
  [750] extcall 130 ............................. <getWindow(pWindowTitle)>
  [752] setlocal 1 .............................. tWndObj = getWindow(pWindowTitle)
  [754] getlocal 1 .............................. <tWndObj>
  [756] pushcons 102 ............................ <"char_email_field">
  [758] pusharglist 2 ........................... <tWndObj, "char_email_field">
  [760] objcall 133 ............................. <tWndObj.getElement("char_email_field")>
  [762] pusharglist 1 ........................... <tWndObj.getElement("char_email_field")>
  [764] objcall 74 .............................. <tWndObj.getElement("char_email_field").getText()>
  [766] setlocal 6 .............................. tEmail = tWndObj.getElement("char_email_field").getText()
  [768] pushcons 0 .............................. <EMPTY>
  [770] setprop 299 ............................. pErrorMsg = EMPTY
  [773] pushint8 1 .............................. <1>
  [775] setlocal 0 .............................. tProceed = 1
  [777] getlocal 0 .............................. <tProceed>
  [779] getparam 0 .............................. <me>
  [781] getprop 69 .............................. <pTempPassword>
  [783] pushcons 181 ............................ <"char_pw_field">
  [785] pusharglist 2 ........................... <pTempPassword, "char_pw_field">
  [787] objcall 105 ............................. <pTempPassword["char_pw_field"]>
  [789] getprop 69 .............................. <pTempPassword>
  [791] pushcons 182 ............................ <"char_pwagain_field">
  [793] pusharglist 2 ........................... <pTempPassword, "char_pwagain_field">
  [795] objcall 105 ............................. <pTempPassword["char_pwagain_field"]>
  [797] pusharglist 3 ........................... <me, pTempPassword["char_pw_field"], pTempPassword["char_pwagain_field"]>
  [799] objcall 47 .............................. <me.checkPasswords(pTempPassword["char_pw_field"], pTempPassword["char_pwagain_field"])>
  [801] and ..................................... <tProceed and me.checkPasswords(pTempPassword["char_pw_field"], pTempPassword["char_pwagain_field"])>
  [802] setlocal 0 .............................. tProceed = tProceed and me.checkPasswords(pTempPassword["char_pw_field"], pTempPassword["char_pwagain_field"])
  [804] getparam 0 .............................. <me>
  [806] getlocal 6 .............................. <tEmail>
  [808] pusharglist 2 ........................... <me, tEmail>
  [810] objcall 50 .............................. <me.validateEmail(tEmail)>
  [812] setlocal 8 .............................. tEmailOK = me.validateEmail(tEmail)
  [814] getlocal 0 .............................. <tProceed>
  [816] getlocal 8 .............................. <tEmailOK>
  [818] and ..................................... <tProceed and tEmailOK>
  [819] setlocal 0 .............................. tProceed = tProceed and tEmailOK
  [821] getlocal 8 .............................. <tEmailOK>
  [823] not ..................................... <not tEmailOK>
  [824] jmpifz [843] ............................ if not tEmailOK then
  [827] getprop 299 ............................. <pErrorMsg>
  [830] pushcons 189 ............................ <"alert_reg_email">
  [832] pusharglist 1 ........................... <"alert_reg_email">
  [834] extcall 74 .............................. <getText("alert_reg_email")>
  [836] joinstr ................................. <pErrorMsg & getText("alert_reg_email")>
  [837] pushcons 26 ............................. <RETURN>
  [839] joinstr ................................. <pErrorMsg & getText("alert_reg_email") & RETURN>
  [840] setprop 299 ............................. pErrorMsg = pErrorMsg & getText("alert_reg_email") & RETURN
  [843] getprop 80 .............................. <pPasswordErrors>
  [845] pushcons 0 .............................. <EMPTY>
  [847] nteq .................................... <pPasswordErrors <> EMPTY>
  [848] jmpifz [870] ............................ if pPasswordErrors <> EMPTY then
  [851] pushzero ................................ <0>
  [852] setlocal 0 .............................. tProceed = 0
  [854] getprop 299 ............................. <pErrorMsg>
  [857] getprop 80 .............................. <pPasswordErrors>
  [859] joinstr ................................. <pErrorMsg & pPasswordErrors>
  [860] pushcons 26 ............................. <RETURN>
  [862] joinstr ................................. <pErrorMsg & pPasswordErrors & RETURN>
  [863] setprop 299 ............................. pErrorMsg = pErrorMsg & pPasswordErrors & RETURN
  [866] pushcons 0 .............................. <EMPTY>
  [868] setprop 80 .............................. pPasswordErrors = EMPTY
  [870] getlocal 0 .............................. <tProceed>
  [872] not ..................................... <not tProceed>
  [873] jmpifz [909] ............................ if not tProceed then
  [876] pushsymb 119 ............................ <#alert>
  [878] pushsymb 158 ............................ <#title>
  [880] pushcons 186 ............................ <"alert_reg_t">
  [882] pushsymb 120 ............................ <#msg>
  [884] getprop 299 ............................. <pErrorMsg>
  [887] pushsymb 121 ............................ <#id>
  [889] pushcons 187 ............................ <"problems">
  [891] pushsymb 122 ............................ <#modal>
  [893] pushint8 1 .............................. <1>
  [895] pusharglist 8 ........................... <[#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [897] pushproplist ............................ <[#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [898] pusharglistnoret 2 ...................... <#alert, [#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1]>
  [900] extcall 118 ............................. executeMessage(#alert, [#title: "alert_reg_t", #msg: pErrorMsg, #id: "problems", #modal: 1])
  [902] pop 1
  [904] pushzero ................................ <0>
  [905] pusharglistnoret 1 ...................... <0>
  [907] extcall 89 .............................. return 0
  [909] getprop 70 .............................. <pPropsToServer>
  [911] pushcons 35 ............................. <"password">
  [913] getprop 69 .............................. <pTempPassword>
  [915] pushcons 181 ............................ <"char_pw_field">
  [917] pusharglist 2 ........................... <pTempPassword, "char_pw_field">
  [919] objcall 105 ............................. <pTempPassword["char_pw_field"]>
  [921] pusharglistnoret 3 ...................... <pPropsToServer, "password", pTempPassword["char_pw_field"]>
  [923] objcall 174 ............................. pPropsToServer["password"] = pTempPassword["char_pw_field"]
  [925] getparam 0 .............................. <me>
  [927] pusharglistnoret 1 ...................... <me>
  [929] objcall 29 .............................. me.getMyDataFromFields()
  [931] getprop 82 .............................. <pPasswordChecked>
  [933] not ..................................... <not pPasswordChecked>
  [934] jmpifz [972] ............................ if not pPasswordChecked then
  [937] pushcons 0 .............................. <EMPTY>
  [939] setprop 80 .............................. pPasswordErrors = EMPTY
  [941] pushcons 0 .............................. <EMPTY>
  [943] setprop 299 ............................. pErrorMsg = EMPTY
  [946] getparam 0 .............................. <me>
  [948] pusharglist 1 ........................... <me>
  [950] objcall 114 ............................. <me.getComponent()>
  [952] getprop 70 .............................. <pPropsToServer>
  [954] pushcons 35 ............................. <"password">
  [956] pusharglist 2 ........................... <pPropsToServer, "password">
  [958] objcall 105 ............................. <pPropsToServer["password"]>
  [960] pusharglistnoret 2 ...................... <me.getComponent(), pPropsToServer["password"]>
  [962] objcall 332 ............................. me.getComponent().sendValidatePassword(pPropsToServer["password"])
  [965] pop 1
  [967] pushzero ................................ <0>
  [968] pusharglistnoret 1 ...................... <0>
  [970] extcall 89 .............................. return 0
  [972] getprop 123 ............................. <pEmailChecked>
  [974] not ..................................... <not pEmailChecked>
  [975] jmpifz [998] ............................ if not pEmailChecked then
  [978] getparam 0 .............................. <me>
  [980] pusharglist 1 ........................... <me>
  [982] objcall 114 ............................. <me.getComponent()>
  [984] getlocal 6 .............................. <tEmail>
  [986] pusharglistnoret 2 ...................... <me.getComponent(), tEmail>
  [988] objcall 333 ............................. me.getComponent().checkEmailAddress(tEmail)
  [991] pop 1
  [993] pushzero ................................ <0>
  [994] pusharglistnoret 1 ...................... <0>
  [996] extcall 89 .............................. return 0
  [998] getprop 112 ............................. <pmode>
  [1000] pushcons 42 ............................ <"parent_email">
  [1002] eq ..................................... <pmode = "parent_email">
  [1003] getprop 112 ............................ <pmode>
  [1005] pushcons 43 ............................ <"parent_email_strong_coppa">
  [1007] eq ..................................... <pmode = "parent_email_strong_coppa">
  [1008] or ..................................... <(pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [1009] jmpifz [1139] .......................... if (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") then
  [1012] getparam 0 ............................. <me>
  [1014] pusharglist 1 .......................... <me>
  [1016] objcall 114 ............................ <me.getComponent()>
  [1018] pusharglist 1 .......................... <me.getComponent()>
  [1020] objcall 334 ............................ <me.getComponent().getParentEmailNeededFlag()>
  [1023] pushint8 1 ............................. <1>
  [1025] nteq ................................... <me.getComponent().getParentEmailNeededFlag() <> 1>
  [1026] jmpifz [1139] .......................... if me.getComponent().getParentEmailNeededFlag() <> 1 then
  [1029] getmovieprop 198 ....................... <the itemDelimiter>
  [1031] setlocal 9 ............................. tItemD = the itemDelimiter
  [1033] pushcons 32 ............................ <".">
  [1035] setmovieprop 198 ....................... the itemDelimiter = "."
  [1037] getprop 70 ............................. <pPropsToServer>
  [1039] pushcons 34 ............................ <"birthday">
  [1041] pusharglist 2 .......................... <pPropsToServer, "birthday">
  [1043] objcall 105 ............................ <pPropsToServer["birthday"]>
  [1045] pushsymb 200 ........................... <#item>
  [1047] pushint8 3 ............................. <3>
  [1049] pusharglist 3 .......................... <pPropsToServer["birthday"], #item, 3>
  [1051] objcall 186 ............................ <pPropsToServer["birthday"].item[3]>
  [1053] pushcons 32 ............................ <".">
  [1055] joinstr ................................ <pPropsToServer["birthday"].item[3] & ".">
  [1056] getprop 70 ............................. <pPropsToServer>
  [1058] pushcons 34 ............................ <"birthday">
  [1060] pusharglist 2 .......................... <pPropsToServer, "birthday">
  [1062] objcall 105 ............................ <pPropsToServer["birthday"]>
  [1064] pushsymb 200 ........................... <#item>
  [1066] pushint8 2 ............................. <2>
  [1068] pusharglist 3 .......................... <pPropsToServer["birthday"], #item, 2>
  [1070] objcall 186 ............................ <pPropsToServer["birthday"].item[2]>
  [1072] joinstr ................................ <pPropsToServer["birthday"].item[3] & "." & pPropsToServer["birthday"].item[2]>
  [1073] pushcons 32 ............................ <".">
  [1075] joinstr ................................ <pPropsToServer["birthday"].item[3] & "." & pPropsToServer["birthday"].item[2] & ".">
  [1076] getprop 70 ............................. <pPropsToServer>
  [1078] pushcons 34 ............................ <"birthday">
  [1080] pusharglist 2 .......................... <pPropsToServer, "birthday">
  [1082] objcall 105 ............................ <pPropsToServer["birthday"]>
  [1084] pushsymb 200 ........................... <#item>
  [1086] pushint8 1 ............................. <1>
  [1088] pusharglist 3 .......................... <pPropsToServer["birthday"], #item, 1>
  [1090] objcall 186 ............................ <pPropsToServer["birthday"].item[1]>
  [1092] joinstr ................................ <pPropsToServer["birthday"].item[3] & "." & pPropsToServer["birthday"].item[2] & "." & pPropsToServer["birthday"].item[1]>
  [1093] setlocal 10 ............................ tBirthday = pPropsToServer["birthday"].item[3] & "." & pPropsToServer["birthday"].item[2] & "." & pPropsToServer["birthday"].item[1]
  [1095] getlocal 9 ............................. <tItemD>
  [1097] setmovieprop 198 ....................... the itemDelimiter = tItemD
  [1099] getprop 70 ............................. <pPropsToServer>
  [1101] pushcons 61 ............................ <"name">
  [1103] pusharglist 2 .......................... <pPropsToServer, "name">
  [1105] objcall 105 ............................ <pPropsToServer["name"]>
  [1107] setlocal 11 ............................ tHabboID = pPropsToServer["name"]
  [1109] getparam 0 ............................. <me>
  [1111] pusharglist 1 .......................... <me>
  [1113] objcall 114 ............................ <me.getComponent()>
  [1115] getlocal 10 ............................ <tBirthday>
  [1117] getlocal 11 ............................ <tHabboID>
  [1119] pusharglistnoret 3 ..................... <me.getComponent(), tBirthday, tHabboID>
  [1121] objcall 335 ............................ me.getComponent().parentEmailNeedQuery(tBirthday, tHabboID)
  [1124] getparam 0 ............................. <me>
  [1126] pushcons 12 ............................ <"reg_loading.window">
  [1128] pusharglistnoret 2 ..................... <me, "reg_loading.window">
  [1130] objcall 26 ............................. me.ChangeWindowView("reg_loading.window")
  [1132] pop 1
  [1134] pushzero ............................... <0>
  [1135] pusharglistnoret 1 ..................... <0>
  [1137] extcall 89 ............................. return 0
  [1139] jmp [1771]
  [1142] peek 0
  [1144] pushcons 107 ........................... <"reg_confirm.window">
  [1146] eq
  [1147] jmpifz [1277] .......................... (case) "reg_confirm.window":
  [1150] pushsymb 109 ........................... <#session>
  [1152] pusharglist 1 .......................... <#session>
  [1154] extcall 110 ............................ <getObject(#session)>
  [1156] pushcons 190 ........................... <"conf_coppa">
  [1158] pusharglist 2 .......................... <getObject(#session), "conf_coppa">
  [1160] objcall 177 ............................ <getObject(#session).get("conf_coppa")>
  [1162] jmpifz [1266] .......................... if getObject(#session).get("conf_coppa") then / else
  [1165] getmovieprop 198 ....................... <the itemDelimiter>
  [1167] setlocal 9 ............................. tItemD = the itemDelimiter
  [1169] pushcons 32 ............................ <".">
  [1171] setmovieprop 198 ....................... the itemDelimiter = "."
  [1173] getprop 70 ............................. <pPropsToServer>
  [1175] pushcons 34 ............................ <"birthday">
  [1177] pusharglist 2 .......................... <pPropsToServer, "birthday">
  [1179] objcall 105 ............................ <pPropsToServer["birthday"]>
  [1181] pushsymb 200 ........................... <#item>
  [1183] pushint8 3 ............................. <3>
  [1185] pusharglist 3 .......................... <pPropsToServer["birthday"], #item, 3>
  [1187] objcall 186 ............................ <pPropsToServer["birthday"].item[3]>
  [1189] pushcons 32 ............................ <".">
  [1191] joinstr ................................ <pPropsToServer["birthday"].item[3] & ".">
  [1192] getprop 70 ............................. <pPropsToServer>
  [1194] pushcons 34 ............................ <"birthday">
  [1196] pusharglist 2 .......................... <pPropsToServer, "birthday">
  [1198] objcall 105 ............................ <pPropsToServer["birthday"]>
  [1200] pushsymb 200 ........................... <#item>
  [1202] pushint8 2 ............................. <2>
  [1204] pusharglist 3 .......................... <pPropsToServer["birthday"], #item, 2>
  [1206] objcall 186 ............................ <pPropsToServer["birthday"].item[2]>
  [1208] joinstr ................................ <pPropsToServer["birthday"].item[3] & "." & pPropsToServer["birthday"].item[2]>
  [1209] pushcons 32 ............................ <".">
  [1211] joinstr ................................ <pPropsToServer["birthday"].item[3] & "." & pPropsToServer["birthday"].item[2] & ".">
  [1212] getprop 70 ............................. <pPropsToServer>
  [1214] pushcons 34 ............................ <"birthday">
  [1216] pusharglist 2 .......................... <pPropsToServer, "birthday">
  [1218] objcall 105 ............................ <pPropsToServer["birthday"]>
  [1220] pushsymb 200 ........................... <#item>
  [1222] pushint8 1 ............................. <1>
  [1224] pusharglist 3 .......................... <pPropsToServer["birthday"], #item, 1>
  [1226] objcall 186 ............................ <pPropsToServer["birthday"].item[1]>
  [1228] joinstr ................................ <pPropsToServer["birthday"].item[3] & "." & pPropsToServer["birthday"].item[2] & "." & pPropsToServer["birthday"].item[1]>
  [1229] setlocal 12 ............................ tdata = pPropsToServer["birthday"].item[3] & "." & pPropsToServer["birthday"].item[2] & "." & pPropsToServer["birthday"].item[1]
  [1231] getlocal 9 ............................. <tItemD>
  [1233] setmovieprop 198 ....................... the itemDelimiter = tItemD
  [1235] getparam 0 ............................. <me>
  [1237] pusharglist 1 .......................... <me>
  [1239] objcall 114 ............................ <me.getComponent()>
  [1241] getlocal 12 ............................ <tdata>
  [1243] pusharglistnoret 2 ..................... <me.getComponent(), tdata>
  [1245] objcall 336 ............................ me.getComponent().checkAge(tdata)
  [1248] getparam 0 ............................. <me>
  [1250] pushcons 12 ............................ <"reg_loading.window">
  [1252] pusharglistnoret 2 ..................... <me, "reg_loading.window">
  [1254] objcall 26 ............................. me.ChangeWindowView("reg_loading.window")
  [1256] pop 1
  [1258] pushzero ............................... <0>
  [1259] pusharglistnoret 1 ..................... <0>
  [1261] extcall 89 ............................. return 0
  [1263] jmp [1274]
  [1266] pop 1
  [1268] pushint8 1 ............................. <1>
  [1270] pusharglistnoret 1 ..................... <1>
  [1272] extcall 89 ............................. return 1
  [1274] jmp [1771]
  [1277] peek 0
  [1279] pushcons 48 ............................ <"reg_parent_email.window">
  [1281] eq
  [1282] jmpifz [1370] .......................... (case) "reg_parent_email.window":
  [1285] getprop 73 ............................. <pWindowTitle>
  [1287] pusharglist 1 .......................... <pWindowTitle>
  [1289] extcall 130 ............................ <getWindow(pWindowTitle)>
  [1291] setlocal 1 ............................. tWndObj = getWindow(pWindowTitle)
  [1293] getlocal 1 ............................. <tWndObj>
  [1295] pushcons 191 ........................... <"reg_parent_email_field">
  [1297] pusharglist 2 .......................... <tWndObj, "reg_parent_email_field">
  [1299] objcall 133 ............................ <tWndObj.getElement("reg_parent_email_field")>
  [1301] pusharglist 1 .......................... <tWndObj.getElement("reg_parent_email_field")>
  [1303] objcall 74 ............................. <tWndObj.getElement("reg_parent_email_field").getText()>
  [1305] setlocal 13 ............................ tParentEmail = tWndObj.getElement("reg_parent_email_field").getText()
  [1307] getprop 70 ............................. <pPropsToServer>
  [1309] pushcons 65 ............................ <"email">
  [1311] pusharglist 2 .......................... <pPropsToServer, "email">
  [1313] objcall 105 ............................ <pPropsToServer["email"]>
  [1315] setlocal 14 ............................ tUserEmail = pPropsToServer["email"]
  [1317] getlocal 13 ............................ <tParentEmail>
  [1319] pushcons 0 ............................. <EMPTY>
  [1321] eq ..................................... <tParentEmail = EMPTY>
  [1322] jmpifz [1337] .......................... if tParentEmail = EMPTY then
  [1325] pop 1
  [1327] getparam 0 ............................. <me>
  [1329] pusharglist 1 .......................... <me>
  [1331] objcall 18 ............................. <me.parentEmailIncorrect()>
  [1333] pusharglistnoret 1 ..................... <me.parentEmailIncorrect()>
  [1335] extcall 89 ............................. return me.parentEmailIncorrect()
  [1337] getparam 0 ............................. <me>
  [1339] pusharglist 1 .......................... <me>
  [1341] objcall 114 ............................ <me.getComponent()>
  [1343] getlocal 14 ............................ <tUserEmail>
  [1345] getlocal 13 ............................ <tParentEmail>
  [1347] pusharglistnoret 3 ..................... <me.getComponent(), tUserEmail, tParentEmail>
  [1349] objcall 337 ............................ me.getComponent().validateParentEmail(tUserEmail, tParentEmail)
  [1352] getparam 0 ............................. <me>
  [1354] pushcons 12 ............................ <"reg_loading.window">
  [1356] pusharglistnoret 2 ..................... <me, "reg_loading.window">
  [1358] objcall 26 ............................. me.ChangeWindowView("reg_loading.window")
  [1360] pop 1
  [1362] pushzero ............................... <0>
  [1363] pusharglistnoret 1 ..................... <0>
  [1365] extcall 89 ............................. return 0
  [1367] jmp [1771]
  [1370] peek 0
  [1372] pushcons 192 ........................... <"reg_totp_email.window">
  [1374] eq
  [1375] jmpifz [1484] .......................... (case) "reg_totp_email.window":
  [1378] getprop 73 ............................. <pWindowTitle>
  [1380] pusharglist 1 .......................... <pWindowTitle>
  [1382] extcall 130 ............................ <getWindow(pWindowTitle)>
  [1384] setlocal 1 ............................. tWndObj = getWindow(pWindowTitle)
  [1386] getlocal 1 ............................. <tWndObj>
  [1388] pushcons 180 ........................... <"reg_totp_email">
  [1390] pusharglist 2 .......................... <tWndObj, "reg_totp_email">
  [1392] objcall 133 ............................ <tWndObj.getElement("reg_totp_email")>
  [1394] pusharglist 1 .......................... <tWndObj.getElement("reg_totp_email")>
  [1396] objcall 74 ............................. <tWndObj.getElement("reg_totp_email").getText()>
  [1398] setlocal 15 ............................ tTotpCode = tWndObj.getElement("reg_totp_email").getText()
  [1400] getlocal 15 ............................ <tTotpCode>
  [1402] pushcons 0 ............................. <EMPTY>
  [1404] eq ..................................... <tTotpCode = EMPTY>
  [1405] jmpifz [1420] .......................... if tTotpCode = EMPTY then
  [1408] pop 1
  [1410] getparam 0 ............................. <me>
  [1412] pusharglist 1 .......................... <me>
  [1414] objcall 18 ............................. <me.parentEmailIncorrect()>
  [1416] pusharglistnoret 1 ..................... <me.parentEmailIncorrect()>
  [1418] extcall 89 ............................. return me.parentEmailIncorrect()
  [1420] getprop 70 ............................. <pPropsToServer>
  [1422] pushcons 72 ............................ <"totpCode">
  [1424] getlocal 15 ............................ <tTotpCode>
  [1426] pusharglistnoret 3 ..................... <pPropsToServer, "totpCode", tTotpCode>
  [1428] objcall 174 ............................ pPropsToServer["totpCode"] = tTotpCode
  [1430] getprop 146 ............................ <pRegProcess>
  [1432] getobjprop 102 ......................... <pRegProcess.ilk>
  [1434] pushsymb 103 ........................... <#list>
  [1436] eq ..................................... <pRegProcess.ilk = #list>
  [1437] jmpifz [1474] .......................... if pRegProcess.ilk = #list then
  [1440] getprop 146 ............................ <pRegProcess>
  [1442] pushcons 180 ........................... <"reg_totp_email">
  [1444] pusharglist 2 .......................... <pRegProcess, "reg_totp_email">
  [1446] objcall 147 ............................ <pRegProcess.findPos("reg_totp_email")>
  [1448] setlocal 16 ............................ tPos = pRegProcess.findPos("reg_totp_email")
  [1450] getprop 146 ............................ <pRegProcess>
  [1452] getlocal 16 ............................ <tPos>
  [1454] pushint8 1 ............................. <1>
  [1456] add .................................... <tPos + 1>
  [1457] pusharglist 2 .......................... <pRegProcess, tPos + 1>
  [1459] objcall 105 ............................ <pRegProcess[tPos + 1]>
  [1461] setlocal 17 ............................ tNextPage = pRegProcess[tPos + 1]
  [1463] getparam 0 ............................. <me>
  [1465] getlocal 17 ............................ <tNextPage>
  [1467] pushcons 16 ............................ <".window">
  [1469] joinstr ................................ <tNextPage & ".window">
  [1470] pusharglistnoret 2 ..................... <me, tNextPage & ".window">
  [1472] objcall 58 ............................. me.changePage(tNextPage & ".window")
  [1474] pop 1
  [1476] pushzero ............................... <0>
  [1477] pusharglistnoret 1 ..................... <0>
  [1479] extcall 89 ............................. return 0
  [1481] jmp [1771]
  [1484] peek 0
  [1486] pushcons 193 ........................... <"reg_age_check.window">
  [1488] eq
  [1489] jmpifz [1771] .......................... (case) "reg_age_check.window":
  [1492] getprop 73 ............................. <pWindowTitle>
  [1494] pusharglist 1 .......................... <pWindowTitle>
  [1496] extcall 130 ............................ <getWindow(pWindowTitle)>
  [1498] setlocal 1 ............................. tWndObj = getWindow(pWindowTitle)
  [1500] getlocal 1 ............................. <tWndObj>
  [1502] pushcons 103 ........................... <"char_dd_field">
  [1504] pusharglist 2 .......................... <tWndObj, "char_dd_field">
  [1506] objcall 133 ............................ <tWndObj.getElement("char_dd_field")>
  [1508] pusharglist 1 .......................... <tWndObj.getElement("char_dd_field")>
  [1510] objcall 74 ............................. <tWndObj.getElement("char_dd_field").getText()>
  [1512] pusharglist 1 .......................... <tWndObj.getElement("char_dd_field").getText()>
  [1514] extcall 199 ............................ <integer(tWndObj.getElement("char_dd_field").getText())>
  [1516] setlocal 2 ............................. tDay = integer(tWndObj.getElement("char_dd_field").getText())
  [1518] getlocal 1 ............................. <tWndObj>
  [1520] pushcons 37 ............................ <"monthDrop">
  [1522] pusharglist 2 .......................... <tWndObj, "monthDrop">
  [1524] objcall 135 ............................ <tWndObj.elementExists("monthDrop")>
  [1526] not .................................... <not tWndObj.elementExists("monthDrop")>
  [1527] jmpifz [1546] .......................... if not tWndObj.elementExists("monthDrop") then
  [1530] pop 1
  [1532] getparam 0 ............................. <me>
  [1534] pushcons 122 ........................... <"No month drop!">
  [1536] pushsymb 59 ............................ <#leavePage>
  [1538] pusharglist 3 .......................... <me, "No month drop!", #leavePage>
  [1540] extcall 85 ............................. <error(me, "No month drop!", #leavePage)>
  [1542] pusharglistnoret 1 ..................... <error(me, "No month drop!", #leavePage)>
  [1544] extcall 89 ............................. return error(me, "No month drop!", #leavePage)
  [1546] getlocal 1 ............................. <tWndObj>
  [1548] pushcons 37 ............................ <"monthDrop">
  [1550] pusharglist 2 .......................... <tWndObj, "monthDrop">
  [1552] objcall 133 ............................ <tWndObj.getElement("monthDrop")>
  [1554] pusharglist 1 .......................... <tWndObj.getElement("monthDrop")>
  [1556] objcall 212 ............................ <tWndObj.getElement("monthDrop").getSelection()>
  [1558] setlocal 3 ............................. tMonthSelection = tWndObj.getElement("monthDrop").getSelection()
  [1560] getlocal 3 ............................. <tMonthSelection>
  [1562] getlocal 3 ............................. <tMonthSelection>
  [1564] getobjprop 214 ......................... <tMonthSelection.length>
  [1566] pushint8 1 ............................. <1>
  [1568] sub .................................... <tMonthSelection.length - 1>
  [1569] getlocal 3 ............................. <tMonthSelection>
  [1571] getobjprop 214 ......................... <tMonthSelection.length>
  [1573] pusharglist 3 .......................... <tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length>
  [1575] extcall 213 ............................ <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [1577] pusharglist 1 .......................... <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [1579] extcall 199 ............................ <integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))>
  [1581] setlocal 4 ............................. tMonth = integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))
  [1583] getlocal 1 ............................. <tWndObj>
  [1585] pushcons 104 ........................... <"char_yyyy_field">
  [1587] pusharglist 2 .......................... <tWndObj, "char_yyyy_field">
  [1589] objcall 133 ............................ <tWndObj.getElement("char_yyyy_field")>
  [1591] pusharglist 1 .......................... <tWndObj.getElement("char_yyyy_field")>
  [1593] objcall 74 ............................. <tWndObj.getElement("char_yyyy_field").getText()>
  [1595] pusharglist 1 .......................... <tWndObj.getElement("char_yyyy_field").getText()>
  [1597] extcall 199 ............................ <integer(tWndObj.getElement("char_yyyy_field").getText())>
  [1599] setlocal 5 ............................. tYear = integer(tWndObj.getElement("char_yyyy_field").getText())
  [1601] getlocal 2 ............................. <tDay>
  [1603] pusharglist 1 .......................... <tDay>
  [1605] extcall 100 ............................ <voidp(tDay)>
  [1607] getlocal 4 ............................. <tMonth>
  [1609] pusharglist 1 .......................... <tMonth>
  [1611] extcall 100 ............................ <voidp(tMonth)>
  [1613] or ..................................... <voidp(tDay) or voidp(tMonth)>
  [1614] getlocal 5 ............................. <tYear>
  [1616] pusharglist 1 .......................... <tYear>
  [1618] extcall 100 ............................ <voidp(tYear)>
  [1620] or ..................................... <voidp(tDay) or voidp(tMonth) or voidp(tYear)>
  [1621] getlocal 5 ............................. <tYear>
  [1623] pushint16 1900 ......................... <1900>
  [1626] lt ..................................... <tYear < 1900>
  [1627] or ..................................... <voidp(tDay) or voidp(tMonth) or voidp(tYear) or (tYear < 1900)>
  [1628] getlocal 4 ............................. <tMonth>
  [1630] pushint8 12 ............................ <12>
  [1632] gt ..................................... <tMonth > 12>
  [1633] or ..................................... <voidp(tDay) or voidp(tMonth) or voidp(tYear) or (tYear < 1900) or (tMonth > 12)>
  [1634] getlocal 2 ............................. <tDay>
  [1636] pushint8 31 ............................ <31>
  [1638] gt ..................................... <tDay > 31>
  [1639] or ..................................... <voidp(tDay) or voidp(tMonth) or voidp(tYear) or (tYear < 1900) or (tMonth > 12) or (tDay > 31)>
  [1640] jmpifz [1675] .......................... if voidp(tDay) or voidp(tMonth) or voidp(tYear) or (tYear < 1900) or (tMonth > 12) or (tDay > 31) then
  [1643] pushsymb 119 ........................... <#alert>
  [1645] pushsymb 158 ........................... <#title>
  [1647] pushcons 186 ........................... <"alert_reg_t">
  [1649] pushsymb 120 ........................... <#msg>
  [1651] pushcons 194 ........................... <"Alert_CheckBirthday">
  [1653] pushsymb 121 ........................... <#id>
  [1655] pushcons 187 ........................... <"problems">
  [1657] pushsymb 122 ........................... <#modal>
  [1659] pushint8 1 ............................. <1>
  [1661] pusharglist 8 .......................... <[#title: "alert_reg_t", #msg: "Alert_CheckBirthday", #id: "problems", #modal: 1]>
  [1663] pushproplist ........................... <[#title: "alert_reg_t", #msg: "Alert_CheckBirthday", #id: "problems", #modal: 1]>
  [1664] pusharglistnoret 2 ..................... <#alert, [#title: "alert_reg_t", #msg: "Alert_CheckBirthday", #id: "problems", #modal: 1]>
  [1666] extcall 118 ............................ executeMessage(#alert, [#title: "alert_reg_t", #msg: "Alert_CheckBirthday", #id: "problems", #modal: 1])
  [1668] pop 1
  [1670] pushzero ............................... <0>
  [1671] pusharglistnoret 1 ..................... <0>
  [1673] extcall 89 ............................. return 0
  [1675] getlocal 2 ............................. <tDay>
  [1677] pushint8 10 ............................ <10>
  [1679] lt ..................................... <tDay < 10>
  [1680] jmpifz [1690] .......................... if tDay < 10 then
  [1683] pushcons 31 ............................ <"0">
  [1685] getlocal 2 ............................. <tDay>
  [1687] joinstr ................................ <"0" & tDay>
  [1688] setlocal 2 ............................. tDay = "0" & tDay
  [1690] getlocal 4 ............................. <tMonth>
  [1692] pushint8 10 ............................ <10>
  [1694] lt ..................................... <tMonth < 10>
  [1695] jmpifz [1705] .......................... if tMonth < 10 then
  [1698] pushcons 31 ............................ <"0">
  [1700] getlocal 4 ............................. <tMonth>
  [1702] joinstr ................................ <"0" & tMonth>
  [1703] setlocal 4 ............................. tMonth = "0" & tMonth
  [1705] getlocal 5 ............................. <tYear>
  [1707] pushcons 32 ............................ <".">
  [1709] joinstr ................................ <tYear & ".">
  [1710] getlocal 4 ............................. <tMonth>
  [1712] joinstr ................................ <tYear & "." & tMonth>
  [1713] pushcons 32 ............................ <".">
  [1715] joinstr ................................ <tYear & "." & tMonth & ".">
  [1716] getlocal 2 ............................. <tDay>
  [1718] joinstr ................................ <tYear & "." & tMonth & "." & tDay>
  [1719] setlocal 12 ............................ tdata = tYear & "." & tMonth & "." & tDay
  [1721] getprop 70 ............................. <pPropsToServer>
  [1723] pushcons 34 ............................ <"birthday">
  [1725] getlocal 2 ............................. <tDay>
  [1727] pushcons 32 ............................ <".">
  [1729] joinstr ................................ <tDay & ".">
  [1730] getlocal 4 ............................. <tMonth>
  [1732] joinstr ................................ <tDay & "." & tMonth>
  [1733] pushcons 32 ............................ <".">
  [1735] joinstr ................................ <tDay & "." & tMonth & ".">
  [1736] getlocal 5 ............................. <tYear>
  [1738] joinstr ................................ <tDay & "." & tMonth & "." & tYear>
  [1739] pusharglistnoret 3 ..................... <pPropsToServer, "birthday", tDay & "." & tMonth & "." & tYear>
  [1741] objcall 174 ............................ pPropsToServer["birthday"] = tDay & "." & tMonth & "." & tYear
  [1743] getparam 0 ............................. <me>
  [1745] pusharglist 1 .......................... <me>
  [1747] objcall 114 ............................ <me.getComponent()>
  [1749] getlocal 12 ............................ <tdata>
  [1751] pusharglistnoret 2 ..................... <me.getComponent(), tdata>
  [1753] objcall 336 ............................ me.getComponent().checkAge(tdata)
  [1756] getparam 0 ............................. <me>
  [1758] pushcons 12 ............................ <"reg_loading.window">
  [1760] pusharglistnoret 2 ..................... <me, "reg_loading.window">
  [1762] objcall 26 ............................. me.ChangeWindowView("reg_loading.window")
  [1764] pop 1
  [1766] pushzero ............................... <0>
  [1767] pusharglistnoret 1 ..................... <0>
  [1769] extcall 89 ............................. return 0
  [1771] pop 1 .................................. end case
  [1773] pushint8 1 ............................. <1>
  [1775] pusharglistnoret 1 ..................... <1>
  [1777] extcall 89 ............................. return 1
  [1779] ret
end

on enterPage me, tWindow
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tWindow>
  [  4] pusharglistnoret 2 ...................... <me, tWindow>
  [  6] objcall 26 .............................. me.ChangeWindowView(tWindow)
  [  8] getparam 1 .............................. <tWindow>
  [ 10] peek 0 .................................. case tWindow of
  [ 12] pushcons 92 ............................. <"reg_legal.window">
  [ 14] eq
  [ 15] jmpifz [ 37] ............................ (case) "reg_legal.window":
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 28 .............................. me.setMyDataToFields()
  [ 24] getparam 0 .............................. <me>
  [ 26] pushcons 195 ............................ <"char_terms_checkbox">
  [ 28] pushcons 66 ............................. <"has_read_agreement">
  [ 30] pusharglistnoret 3 ...................... <me, "char_terms_checkbox", "has_read_agreement">
  [ 32] objcall 31 .............................. me.updateCheckButton("char_terms_checkbox", "has_read_agreement")
  [ 34] jmp [800]
  [ 37] peek 0
  [ 39] pushcons 14 ............................. <"reg_namepage.window">
  [ 41] eq
  [ 42] jmpifz [135] ............................ (case) "reg_namepage.window":
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglistnoret 1 ...................... <me>
  [ 49] objcall 28 .............................. me.setMyDataToFields()
  [ 51] getprop 112 ............................. <pmode>
  [ 53] pushcons 60 ............................. <"registration">
  [ 55] eq ...................................... <pmode = "registration">
  [ 56] getprop 112 ............................. <pmode>
  [ 58] pushcons 42 ............................. <"parent_email">
  [ 60] eq ...................................... <pmode = "parent_email">
  [ 61] or ...................................... <(pmode = "registration") or (pmode = "parent_email")>
  [ 62] getprop 112 ............................. <pmode>
  [ 64] pushcons 43 ............................. <"parent_email_strong_coppa">
  [ 66] eq ...................................... <pmode = "parent_email_strong_coppa">
  [ 67] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [ 68] getprop 112 ............................. <pmode>
  [ 70] pushcons 41 ............................. <"topt_verification">
  [ 72] eq ...................................... <pmode = "topt_verification">
  [ 73] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification")>
  [ 74] jmpifz [ 83] ............................ if (pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification") then / else
  [ 77] pushzero ................................ <0>
  [ 78] setprop 173 ............................. pNameChecked = 0
  [ 80] jmp [ 87]
  [ 83] pushint8 1 .............................. <1>
  [ 85] setprop 173 ............................. pNameChecked = 1
  [ 87] getprop 70 .............................. <pPropsToServer>
  [ 89] pushcons 46 ............................. <"figure">
  [ 91] pusharglist 2 ........................... <pPropsToServer, "figure">
  [ 93] objcall 105 ............................. <pPropsToServer["figure"]>
  [ 95] getobjprop 104 .......................... <pPropsToServer["figure"].count>
  [ 97] pushzero ................................ <0>
  [ 98] eq ...................................... <pPropsToServer["figure"].count = 0>
  [ 99] jmpifz [108] ............................ if pPropsToServer["figure"].count = 0 then
  [102] getparam 0 .............................. <me>
  [104] pusharglistnoret 1 ...................... <me>
  [106] objcall 32 .............................. me.createDefaultFigure()
  [108] getparam 0 .............................. <me>
  [110] pusharglistnoret 1 ...................... <me>
  [112] objcall 33 .............................. me.createTemplateHuman()
  [114] getparam 0 .............................. <me>
  [116] pusharglistnoret 1 ...................... <me>
  [118] objcall 30 .............................. me.updateSexRadioButtons()
  [120] getparam 0 .............................. <me>
  [122] pusharglistnoret 1 ...................... <me>
  [124] objcall 35 .............................. me.updateFigurePreview()
  [126] getparam 0 .............................. <me>
  [128] pusharglistnoret 1 ...................... <me>
  [130] objcall 36 .............................. me.updateAllPrewIcons()
  [132] jmp [800]
  [135] peek 0
  [137] pushcons 99 ............................. <"reg_namepage_mission.window">
  [139] eq
  [140] jmpifz [197] ............................ (case) "reg_namepage_mission.window":
  [143] getparam 0 .............................. <me>
  [145] pusharglistnoret 1 ...................... <me>
  [147] objcall 28 .............................. me.setMyDataToFields()
  [149] getprop 70 .............................. <pPropsToServer>
  [151] pushcons 46 ............................. <"figure">
  [153] pusharglist 2 ........................... <pPropsToServer, "figure">
  [155] objcall 105 ............................. <pPropsToServer["figure"]>
  [157] getobjprop 104 .......................... <pPropsToServer["figure"].count>
  [159] pushzero ................................ <0>
  [160] eq ...................................... <pPropsToServer["figure"].count = 0>
  [161] jmpifz [170] ............................ if pPropsToServer["figure"].count = 0 then
  [164] getparam 0 .............................. <me>
  [166] pusharglistnoret 1 ...................... <me>
  [168] objcall 32 .............................. me.createDefaultFigure()
  [170] getparam 0 .............................. <me>
  [172] pusharglistnoret 1 ...................... <me>
  [174] objcall 33 .............................. me.createTemplateHuman()
  [176] getparam 0 .............................. <me>
  [178] pusharglistnoret 1 ...................... <me>
  [180] objcall 30 .............................. me.updateSexRadioButtons()
  [182] getparam 0 .............................. <me>
  [184] pusharglistnoret 1 ...................... <me>
  [186] objcall 35 .............................. me.updateFigurePreview()
  [188] getparam 0 .............................. <me>
  [190] pusharglistnoret 1 ...................... <me>
  [192] objcall 36 .............................. me.updateAllPrewIcons()
  [194] jmp [800]
  [197] peek 0
  [199] pushcons 101 ............................ <"reg_infopage.window">
  [201] eq
  [202] jmpifz [282] ............................ (case) "reg_infopage.window":
  [205] pushzero ................................ <0>
  [206] setprop 82 .............................. pPasswordChecked = 0
  [208] getparam 0 .............................. <me>
  [210] pusharglistnoret 1 ...................... <me>
  [212] objcall 28 .............................. me.setMyDataToFields()
  [214] getprop 73 .............................. <pWindowTitle>
  [216] pusharglist 1 ........................... <pWindowTitle>
  [218] extcall 130 ............................. <getWindow(pWindowTitle)>
  [220] setlocal 0 .............................. tWinObj = getWindow(pWindowTitle)
  [222] getlocal 0 .............................. <tWinObj>
  [224] pushcons 37 ............................. <"monthDrop">
  [226] pusharglist 2 ........................... <tWinObj, "monthDrop">
  [228] objcall 135 ............................. <tWinObj.elementExists("monthDrop")>
  [230] jmpifz [246] ............................ if tWinObj.elementExists("monthDrop") then
  [233] getlocal 0 .............................. <tWinObj>
  [235] pushcons 37 ............................. <"monthDrop">
  [237] pusharglist 2 ........................... <tWinObj, "monthDrop">
  [239] objcall 133 ............................. <tWinObj.getElement("monthDrop")>
  [241] pushzero ................................ <0>
  [242] pusharglistnoret 2 ...................... <tWinObj.getElement("monthDrop"), 0>
  [244] objcall 136 ............................. tWinObj.getElement("monthDrop").setOrdering(0)
  [246] getprop 112 ............................. <pmode>
  [248] pushcons 115 ............................ <"update">
  [250] eq ...................................... <pmode = "update">
  [251] jmpifz [279] ............................ if pmode = "update" then
  [254] pushsymb 119 ............................ <#alert>
  [256] pushsymb 158 ............................ <#title>
  [258] pushcons 196 ............................ <"reg_note_title">
  [260] pushsymb 120 ............................ <#msg>
  [262] pushcons 197 ............................ <"reg_note_text">
  [264] pushsymb 121 ............................ <#id>
  [266] pushcons 198 ............................ <"pwnote">
  [268] pushsymb 122 ............................ <#modal>
  [270] pushint8 1 .............................. <1>
  [272] pusharglist 8 ........................... <[#title: "reg_note_title", #msg: "reg_note_text", #id: "pwnote", #modal: 1]>
  [274] pushproplist ............................ <[#title: "reg_note_title", #msg: "reg_note_text", #id: "pwnote", #modal: 1]>
  [275] pusharglistnoret 2 ...................... <#alert, [#title: "reg_note_title", #msg: "reg_note_text", #id: "pwnote", #modal: 1]>
  [277] extcall 118 ............................. executeMessage(#alert, [#title: "reg_note_title", #msg: "reg_note_text", #id: "pwnote", #modal: 1])
  [279] jmp [800]
  [282] peek 0
  [284] pushcons 199 ............................ <"reg_infopage_no_age">
  [286] eq
  [287] jmpifz [312] ............................ (case) "reg_infopage_no_age":
  [290] pushzero ................................ <0>
  [291] setprop 82 .............................. pPasswordChecked = 0
  [293] getparam 0 .............................. <me>
  [295] pusharglistnoret 1 ...................... <me>
  [297] objcall 28 .............................. me.setMyDataToFields()
  [299] getparam 0 .............................. <me>
  [301] pushcons 105 ............................ <"char_spam_checkbox">
  [303] pushcons 74 ............................. <"directMail">
  [305] pusharglistnoret 3 ...................... <me, "char_spam_checkbox", "directMail">
  [307] objcall 31 .............................. me.updateCheckButton("char_spam_checkbox", "directMail")
  [309] jmp [800]
  [312] peek 0
  [314] pushcons 38 ............................. <"reg_info_update.window">
  [316] eq
  [317] jmpifz [492] ............................ (case) "reg_info_update.window":
  [320] getparam 0 .............................. <me>
  [322] pusharglistnoret 1 ...................... <me>
  [324] objcall 28 .............................. me.setMyDataToFields()
  [326] getparam 0 .............................. <me>
  [328] pushcons 105 ............................ <"char_spam_checkbox">
  [330] pushcons 74 ............................. <"directMail">
  [332] pusharglistnoret 3 ...................... <me, "char_spam_checkbox", "directMail">
  [334] objcall 31 .............................. me.updateCheckButton("char_spam_checkbox", "directMail")
  [336] getparam 0 .............................. <me>
  [338] pushcons 200 ............................ <"char_online_status_checkbox">
  [340] pushcons 68 ............................. <"onlineStatus">
  [342] pusharglistnoret 3 ...................... <me, "char_online_status_checkbox", "onlineStatus">
  [344] objcall 31 .............................. me.updateCheckButton("char_online_status_checkbox", "onlineStatus")
  [346] getparam 0 .............................. <me>
  [348] pushcons 201 ............................ <"char_friend_requests_enabled_checkbox">
  [350] pushcons 70 ............................. <"friendRequestsEnabled">
  [352] pusharglistnoret 3 ...................... <me, "char_friend_requests_enabled_checkbox", "friendRequestsEnabled">
  [354] objcall 31 .............................. me.updateCheckButton("char_friend_requests_enabled_checkbox", "friendRequestsEnabled")
  [356] getparam 0 .............................. <me>
  [358] pushcons 202 ............................ <"char_offline_messaging_enabled_checkbox">
  [360] pushcons 71 ............................. <"offlineMessagingEnabled">
  [362] pusharglistnoret 3 ...................... <me, "char_offline_messaging_enabled_checkbox", "offlineMessagingEnabled">
  [364] objcall 31 .............................. me.updateCheckButton("char_offline_messaging_enabled_checkbox", "offlineMessagingEnabled")
  [366] getparam 0 .............................. <me>
  [368] pushcons 203 ............................ <"char_public_profile_enabled_checkbox">
  [370] pushcons 69 ............................. <"publicProfileEnabled">
  [372] pusharglistnoret 3 ...................... <me, "char_public_profile_enabled_checkbox", "publicProfileEnabled">
  [374] objcall 31 .............................. me.updateCheckButton("char_public_profile_enabled_checkbox", "publicProfileEnabled")
  [376] getprop 73 .............................. <pWindowTitle>
  [378] pusharglist 1 ........................... <pWindowTitle>
  [380] extcall 130 ............................. <getWindow(pWindowTitle)>
  [382] setlocal 0 .............................. tWinObj = getWindow(pWindowTitle)
  [384] getlocal 0 .............................. <tWinObj>
  [386] pushcons 204 ............................ <"update_change_email">
  [388] pusharglist 2 ........................... <tWinObj, "update_change_email">
  [390] objcall 133 ............................. <tWinObj.getElement("update_change_email")>
  [392] pusharglist 1 ........................... <tWinObj.getElement("update_change_email")>
  [394] objcall 74 .............................. <tWinObj.getElement("update_change_email").getText()>
  [396] setlocal 1 .............................. tStr = tWinObj.getElement("update_change_email").getText()
  [398] getlocal 1 .............................. <tStr>
  [400] pushcons 205 ............................ <" >>">
  [402] joinstr ................................. <tStr & " >>">
  [403] setlocal 1 .............................. tStr = tStr & " >>"
  [405] getlocal 0 .............................. <tWinObj>
  [407] pushcons 204 ............................ <"update_change_email">
  [409] pusharglist 2 ........................... <tWinObj, "update_change_email">
  [411] objcall 133 ............................. <tWinObj.getElement("update_change_email")>
  [413] getlocal 1 .............................. <tStr>
  [415] pusharglistnoret 2 ...................... <tWinObj.getElement("update_change_email"), tStr>
  [417] objcall 134 ............................. tWinObj.getElement("update_change_email").setText(tStr)
  [419] getlocal 0 .............................. <tWinObj>
  [421] pushcons 206 ............................ <"update_change_pwd">
  [423] pusharglist 2 ........................... <tWinObj, "update_change_pwd">
  [425] objcall 133 ............................. <tWinObj.getElement("update_change_pwd")>
  [427] pusharglist 1 ........................... <tWinObj.getElement("update_change_pwd")>
  [429] objcall 74 .............................. <tWinObj.getElement("update_change_pwd").getText()>
  [431] setlocal 1 .............................. tStr = tWinObj.getElement("update_change_pwd").getText()
  [433] getlocal 1 .............................. <tStr>
  [435] pushcons 205 ............................ <" >>">
  [437] joinstr ................................. <tStr & " >>">
  [438] setlocal 1 .............................. tStr = tStr & " >>"
  [440] getlocal 0 .............................. <tWinObj>
  [442] pushcons 206 ............................ <"update_change_pwd">
  [444] pusharglist 2 ........................... <tWinObj, "update_change_pwd">
  [446] objcall 133 ............................. <tWinObj.getElement("update_change_pwd")>
  [448] getlocal 1 .............................. <tStr>
  [450] pusharglistnoret 2 ...................... <tWinObj.getElement("update_change_pwd"), tStr>
  [452] objcall 134 ............................. tWinObj.getElement("update_change_pwd").setText(tStr)
  [454] getlocal 0 .............................. <tWinObj>
  [456] pushcons 207 ............................ <"gdpr_request">
  [458] pusharglist 2 ........................... <tWinObj, "gdpr_request">
  [460] objcall 133 ............................. <tWinObj.getElement("gdpr_request")>
  [462] pusharglist 1 ........................... <tWinObj.getElement("gdpr_request")>
  [464] objcall 74 .............................. <tWinObj.getElement("gdpr_request").getText()>
  [466] setlocal 1 .............................. tStr = tWinObj.getElement("gdpr_request").getText()
  [468] getlocal 1 .............................. <tStr>
  [470] pushcons 205 ............................ <" >>">
  [472] joinstr ................................. <tStr & " >>">
  [473] setlocal 1 .............................. tStr = tStr & " >>"
  [475] getlocal 0 .............................. <tWinObj>
  [477] pushcons 207 ............................ <"gdpr_request">
  [479] pusharglist 2 ........................... <tWinObj, "gdpr_request">
  [481] objcall 133 ............................. <tWinObj.getElement("gdpr_request")>
  [483] getlocal 1 .............................. <tStr>
  [485] pusharglistnoret 2 ...................... <tWinObj.getElement("gdpr_request"), tStr>
  [487] objcall 134 ............................. tWinObj.getElement("gdpr_request").setText(tStr)
  [489] jmp [800]
  [492] peek 0
  [494] pushcons 107 ............................ <"reg_confirm.window">
  [496] eq
  [497] jmpifz [519] ............................ (case) "reg_confirm.window":
  [500] getparam 0 .............................. <me>
  [502] pushcons 105 ............................ <"char_spam_checkbox">
  [504] pushcons 74 ............................. <"directMail">
  [506] pusharglistnoret 3 ...................... <me, "char_spam_checkbox", "directMail">
  [508] objcall 31 .............................. me.updateCheckButton("char_spam_checkbox", "directMail")
  [510] getparam 0 .............................. <me>
  [512] pusharglistnoret 1 ...................... <me>
  [514] objcall 28 .............................. me.setMyDataToFields()
  [516] jmp [800]
  [519] peek 0
  [521] pushcons 208 ............................ <"reg_done.window">
  [523] eq
  [524] jmpifz [687] ............................ (case) "reg_done.window":
  [527] getprop 73 .............................. <pWindowTitle>
  [529] pusharglist 1 ........................... <pWindowTitle>
  [531] extcall 130 ............................. <getWindow(pWindowTitle)>
  [533] setlocal 2 .............................. tWndObj = getWindow(pWindowTitle)
  [535] pushsymb 109 ............................ <#session>
  [537] pusharglist 1 ........................... <#session>
  [539] extcall 110 ............................. <getObject(#session)>
  [541] pushcons 45 ............................. <"user_figure">
  [543] getprop 70 .............................. <pPropsToServer>
  [545] pushcons 46 ............................. <"figure">
  [547] pusharglist 2 ........................... <pPropsToServer, "figure">
  [549] objcall 105 ............................. <pPropsToServer["figure"]>
  [551] pusharglist 1 ........................... <pPropsToServer["figure"]>
  [553] objcall 148 ............................. <pPropsToServer["figure"].duplicate()>
  [555] pusharglistnoret 3 ...................... <getObject(#session), "user_figure", pPropsToServer["figure"].duplicate()>
  [557] objcall 111 ............................. getObject(#session).set("user_figure", pPropsToServer["figure"].duplicate())
  [559] pushcons 183 ............................ <"Figure_Preview">
  [561] pusharglist 1 ........................... <"Figure_Preview">
  [563] extcall 95 .............................. <objectExists("Figure_Preview")>
  [565] jmpifz [605] ............................ if objectExists("Figure_Preview") then
  [568] pushcons 183 ............................ <"Figure_Preview">
  [570] pusharglist 1 ........................... <"Figure_Preview">
  [572] extcall 110 ............................. <getObject("Figure_Preview")>
  [574] pushcons 152 ............................ <"h">
  [576] pushint8 2 .............................. <2>
  [578] pushcons 209 ............................ <"gest">
  [580] pushcons 210 ............................ <"temp sml">
  [582] pusharglist 5 ........................... <getObject("Figure_Preview"), "h", 2, "gest", "temp sml">
  [584] objcall 33 .............................. <getObject("Figure_Preview").createTemplateHuman("h", 2, "gest", "temp sml")>
  [586] setlocal 3 .............................. tBuffer = getObject("Figure_Preview").createTemplateHuman("h", 2, "gest", "temp sml")
  [588] getlocal 2 .............................. <tWndObj>
  [590] pushcons 211 ............................ <"reg_ownhabbo">
  [592] pusharglist 2 ........................... <tWndObj, "reg_ownhabbo">
  [594] objcall 133 ............................. <tWndObj.getElement("reg_ownhabbo")>
  [596] pushsymb 346 ............................ <#buffer>
  [599] getlocal 3 .............................. <tBuffer>
  [601] pusharglistnoret 3 ...................... <tWndObj.getElement("reg_ownhabbo"), #buffer, tBuffer>
  [603] objcall 159 ............................. tWndObj.getElement("reg_ownhabbo").setProperty(#buffer, tBuffer)
  [605] getlocal 2 .............................. <tWndObj>
  [607] pushcons 212 ............................ <"reg_tutorial_link">
  [609] pusharglist 2 ........................... <tWndObj, "reg_tutorial_link">
  [611] objcall 135 ............................. <tWndObj.elementExists("reg_tutorial_link")>
  [613] jmpifz [684] ............................ if tWndObj.elementExists("reg_tutorial_link") then
  [616] pushcons 213 ............................ <"reg_tutorial_url">
  [618] pushcons 0 .............................. <EMPTY>
  [620] pusharglist 2 ........................... <"reg_tutorial_url", EMPTY>
  [622] extcall 74 .............................. <getText("reg_tutorial_url", EMPTY)>
  [624] setlocal 4 .............................. tLinkURL = getText("reg_tutorial_url", EMPTY)
  [626] getlocal 4 .............................. <tLinkURL>
  [628] pusharglist 1 ........................... <tLinkURL>
  [630] extcall 347 ............................. <stringp(tLinkURL)>
  [633] not ..................................... <not stringp(tLinkURL)>
  [634] getlocal 4 .............................. <tLinkURL>
  [636] getobjprop 214 .......................... <tLinkURL.length>
  [638] pushint8 10 ............................. <10>
  [640] lt ...................................... <tLinkURL.length < 10>
  [641] or ...................................... <not stringp(tLinkURL) or (tLinkURL.length < 10)>
  [642] jmpifz [663] ............................ if not stringp(tLinkURL) or (tLinkURL.length < 10) then / else
  [645] getlocal 2 .............................. <tWndObj>
  [647] pushcons 212 ............................ <"reg_tutorial_link">
  [649] pusharglist 2 ........................... <tWndObj, "reg_tutorial_link">
  [651] objcall 133 ............................. <tWndObj.getElement("reg_tutorial_link")>
  [653] pushsymb 169 ............................ <#visible>
  [655] pushzero ................................ <0>
  [656] pusharglistnoret 3 ...................... <tWndObj.getElement("reg_tutorial_link"), #visible, 0>
  [658] objcall 159 ............................. tWndObj.getElement("reg_tutorial_link").setProperty(#visible, 0)
  [660] jmp [684]
  [663] getlocal 2 .............................. <tWndObj>
  [665] pushcons 212 ............................ <"reg_tutorial_link">
  [667] pusharglist 2 ........................... <tWndObj, "reg_tutorial_link">
  [669] objcall 133 ............................. <tWndObj.getElement("reg_tutorial_link")>
  [671] pushcons 214 ............................ <"reg_tutorial_txt">
  [673] pusharglist 1 ........................... <"reg_tutorial_txt">
  [675] extcall 74 .............................. <getText("reg_tutorial_txt")>
  [677] pushcons 215 ............................ <">>">
  [679] joinpadstr .............................. <getText("reg_tutorial_txt") && ">>">
  [680] pusharglistnoret 2 ...................... <tWndObj.getElement("reg_tutorial_link"), getText("reg_tutorial_txt") && ">>">
  [682] objcall 134 ............................. tWndObj.getElement("reg_tutorial_link").setText(getText("reg_tutorial_txt") && ">>")
  [684] jmp [800]
  [687] peek 0
  [689] pushcons 82 ............................. <"reg_welcome.window">
  [691] eq
  [692] jmpifz [751] ............................ (case) "reg_welcome.window":
  [695] pushcons 216 ............................ <"balloon.margin.offset.v">
  [697] pusharglist 1 ........................... <"balloon.margin.offset.v">
  [699] extcall 86 .............................. <variableExists("balloon.margin.offset.v")>
  [701] jmpifz [742] ............................ if variableExists("balloon.margin.offset.v") then
  [704] getprop 73 .............................. <pWindowTitle>
  [706] pusharglist 1 ........................... <pWindowTitle>
  [708] extcall 130 ............................. <getWindow(pWindowTitle)>
  [710] setlocal 0 .............................. tWinObj = getWindow(pWindowTitle)
  [712] getlocal 0 .............................. <tWinObj>
  [714] pushcons 85 ............................. <"reg_welcome_balloon">
  [716] pusharglist 2 ........................... <tWinObj, "reg_welcome_balloon">
  [718] objcall 135 ............................. <tWinObj.elementExists("reg_welcome_balloon")>
  [720] jmpifz [742] ............................ if tWinObj.elementExists("reg_welcome_balloon") then
  [723] getlocal 0 .............................. <tWinObj>
  [725] pushcons 85 ............................. <"reg_welcome_balloon">
  [727] pusharglist 2 ........................... <tWinObj, "reg_welcome_balloon">
  [729] objcall 133 ............................. <tWinObj.getElement("reg_welcome_balloon")>
  [731] pushzero ................................ <0>
  [732] pushcons 216 ............................ <"balloon.margin.offset.v">
  [734] pusharglist 1 ........................... <"balloon.margin.offset.v">
  [736] extcall 88 .............................. <getVariable("balloon.margin.offset.v")>
  [738] pusharglistnoret 3 ...................... <tWinObj.getElement("reg_welcome_balloon"), 0, getVariable("balloon.margin.offset.v")>
  [740] objcall 180 ............................. tWinObj.getElement("reg_welcome_balloon").moveBy(0, getVariable("balloon.margin.offset.v"))
  [742] getparam 0 .............................. <me>
  [744] pusharglistnoret 1 ...................... <me>
  [746] objcall 28 .............................. me.setMyDataToFields()
  [748] jmp [800]
  [751] peek 0
  [753] pushcons 193 ............................ <"reg_age_check.window">
  [755] eq
  [756] jmpifz [794] ............................ (case) "reg_age_check.window":
  [759] getprop 73 .............................. <pWindowTitle>
  [761] pusharglist 1 ........................... <pWindowTitle>
  [763] extcall 130 ............................. <getWindow(pWindowTitle)>
  [765] setlocal 0 .............................. tWinObj = getWindow(pWindowTitle)
  [767] getlocal 0 .............................. <tWinObj>
  [769] pushcons 37 ............................. <"monthDrop">
  [771] pusharglist 2 ........................... <tWinObj, "monthDrop">
  [773] objcall 135 ............................. <tWinObj.elementExists("monthDrop")>
  [775] jmpifz [791] ............................ if tWinObj.elementExists("monthDrop") then
  [778] getlocal 0 .............................. <tWinObj>
  [780] pushcons 37 ............................. <"monthDrop">
  [782] pusharglist 2 ........................... <tWinObj, "monthDrop">
  [784] objcall 133 ............................. <tWinObj.getElement("monthDrop")>
  [786] pushzero ................................ <0>
  [787] pusharglistnoret 2 ...................... <tWinObj.getElement("monthDrop"), 0>
  [789] objcall 136 ............................. tWinObj.getElement("monthDrop").setOrdering(0)
  [791] jmp [800] ............................... (case) otherwise:
  [794] getparam 0 .............................. <me>
  [796] pusharglistnoret 1 ...................... <me>
  [798] objcall 28 .............................. me.setMyDataToFields()
  [800] pop 1 ................................... end case
  [802] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 256 .......................... <tImg_a.width>
  [  5] getparam 1 .............................. <tImg_a>
  [  7] getobjprop 257 .......................... <tImg_a.height>
  [ 10] getparam 1 .............................. <tImg_a>
  [ 12] getobjprop 351 .......................... <tImg_a.depth>
  [ 15] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth>
  [ 17] extcall 220 ............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth)>
  [ 19] setlocal 0 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth)
  [ 21] getparam 1 .............................. <tImg_a>
  [ 23] getobjprop 256 .......................... <tImg_a.width>
  [ 26] pushzero ................................ <0>
  [ 27] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 29] extcall 352 ............................. <point(tImg_a.width, 0)>
  [ 32] pushzero ................................ <0>
  [ 33] pushzero ................................ <0>
  [ 34] pusharglist 2 ........................... <0, 0>
  [ 36] extcall 352 ............................. <point(0, 0)>
  [ 39] pushzero ................................ <0>
  [ 40] getparam 1 .............................. <tImg_a>
  [ 42] getobjprop 257 .......................... <tImg_a.height>
  [ 45] pusharglist 2 ........................... <0, tImg_a.height>
  [ 47] extcall 352 ............................. <point(0, tImg_a.height)>
  [ 50] getparam 1 .............................. <tImg_a>
  [ 52] getobjprop 256 .......................... <tImg_a.width>
  [ 55] getparam 1 .............................. <tImg_a>
  [ 57] getobjprop 257 .......................... <tImg_a.height>
  [ 60] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 62] extcall 352 ............................. <point(tImg_a.width, tImg_a.height)>
  [ 65] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 67] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 68] setlocal 1 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [ 70] getlocal 0 .............................. <tImg_b>
  [ 72] getparam 1 .............................. <tImg_a>
  [ 74] getlocal 1 .............................. <tQuad>
  [ 76] getparam 1 .............................. <tImg_a>
  [ 78] getobjprop 258 .......................... <tImg_a.rect>
  [ 81] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [ 83] objcall 260 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [ 86] getlocal 0 .............................. <tImg_b>
  [ 88] pusharglistnoret 1 ...................... <tImg_b>
  [ 90] extcall 89 .............................. return tImg_b
  [ 92] ret
end

on highlightVerifyTopic me
  [  0] getprop 77 .............................. <pVerifyChangeWndID>
  [  2] pusharglist 1 ........................... <pVerifyChangeWndID>
  [  4] extcall 130 ............................. <getWindow(pVerifyChangeWndID)>
  [  6] pushcons 36 ............................. <"updateaccount_topic">
  [  8] pusharglist 2 ........................... <getWindow(pVerifyChangeWndID), "updateaccount_topic">
  [ 10] objcall 133 ............................. <getWindow(pVerifyChangeWndID).getElement("updateaccount_topic")>
  [ 12] pushsymb 356 ............................ <#color>
  [ 15] pushint16 220 ........................... <220>
  [ 18] pushint8 80 ............................. <80>
  [ 20] pushzero ................................ <0>
  [ 21] pusharglist 3 ........................... <220, 80, 0>
  [ 23] extcall 232 ............................. <rgb(220, 80, 0)>
  [ 25] pusharglistnoret 3 ...................... <getWindow(pVerifyChangeWndID).getElement("updateaccount_topic"), #color, rgb(220, 80, 0)>
  [ 27] objcall 159 ............................. getWindow(pVerifyChangeWndID).getElement("updateaccount_topic").setProperty(#color, rgb(220, 80, 0))
  [ 29] ret
end

on responseToAccountUpdate me, tStatus
  [  0] getprop 77 .............................. <pVerifyChangeWndID>
  [  2] pusharglist 1 ........................... <pVerifyChangeWndID>
  [  4] extcall 130 ............................. <getWindow(pVerifyChangeWndID)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pVerifyChangeWndID)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] pusharglistnoret 1 ...................... <tWndObj>
  [ 12] objcall 131 ............................. tWndObj.unmerge()
  [ 14] getparam 1 .............................. <tStatus>
  [ 16] peek 0 .................................. case tStatus of
  [ 18] pushcons 31 ............................. <"0">
  [ 20] eq
  [ 21] jmpifz [ 35] ............................ (case) "0":
  [ 24] getlocal 0 .............................. <tWndObj>
  [ 26] pushcons 217 ............................ <"reg_update_success.window">
  [ 28] pusharglistnoret 2 ...................... <tWndObj, "reg_update_success.window">
  [ 30] objcall 132 ............................. tWndObj.merge("reg_update_success.window")
  [ 32] jmp [185]
  [ 35] peek 0
  [ 37] pushcons 129 ............................ <"1">
  [ 39] eq
  [ 40] jmpifz [102] ............................ (case) "1":
  [ 43] getlocal 0 .............................. <tWndObj>
  [ 45] getprop 78 .............................. <pLastWindow>
  [ 47] pusharglistnoret 2 ...................... <tWndObj, pLastWindow>
  [ 49] objcall 132 ............................. tWndObj.merge(pLastWindow)
  [ 51] getlocal 0 .............................. <tWndObj>
  [ 53] pushcons 36 ............................. <"updateaccount_topic">
  [ 55] pusharglist 2 ........................... <tWndObj, "updateaccount_topic">
  [ 57] objcall 133 ............................. <tWndObj.getElement("updateaccount_topic")>
  [ 59] pushcons 218 ............................ <"reg_verification_incorrectPassword">
  [ 61] pusharglist 1 ........................... <"reg_verification_incorrectPassword">
  [ 63] extcall 74 .............................. <getText("reg_verification_incorrectPassword")>
  [ 65] pusharglistnoret 2 ...................... <tWndObj.getElement("updateaccount_topic"), getText("reg_verification_incorrectPassword")>
  [ 67] objcall 134 ............................. tWndObj.getElement("updateaccount_topic").setText(getText("reg_verification_incorrectPassword"))
  [ 69] getlocal 0 .............................. <tWndObj>
  [ 71] pushcons 37 ............................. <"monthDrop">
  [ 73] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [ 75] objcall 135 ............................. <tWndObj.elementExists("monthDrop")>
  [ 77] jmpifz [ 93] ............................ if tWndObj.elementExists("monthDrop") then
  [ 80] getlocal 0 .............................. <tWndObj>
  [ 82] pushcons 37 ............................. <"monthDrop">
  [ 84] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [ 86] objcall 133 ............................. <tWndObj.getElement("monthDrop")>
  [ 88] pushzero ................................ <0>
  [ 89] pusharglistnoret 2 ...................... <tWndObj.getElement("monthDrop"), 0>
  [ 91] objcall 136 ............................. tWndObj.getElement("monthDrop").setOrdering(0)
  [ 93] getparam 0 .............................. <me>
  [ 95] pusharglistnoret 1 ...................... <me>
  [ 97] objcall 62 .............................. me.highlightVerifyTopic()
  [ 99] jmp [185]
  [102] peek 0
  [104] pushcons 219 ............................ <"2">
  [106] eq
  [107] jmpifz [169] ............................ (case) "2":
  [110] getlocal 0 .............................. <tWndObj>
  [112] getprop 78 .............................. <pLastWindow>
  [114] pusharglistnoret 2 ...................... <tWndObj, pLastWindow>
  [116] objcall 132 ............................. tWndObj.merge(pLastWindow)
  [118] getlocal 0 .............................. <tWndObj>
  [120] pushcons 37 ............................. <"monthDrop">
  [122] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [124] objcall 135 ............................. <tWndObj.elementExists("monthDrop")>
  [126] jmpifz [142] ............................ if tWndObj.elementExists("monthDrop") then
  [129] getlocal 0 .............................. <tWndObj>
  [131] pushcons 37 ............................. <"monthDrop">
  [133] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [135] objcall 133 ............................. <tWndObj.getElement("monthDrop")>
  [137] pushzero ................................ <0>
  [138] pusharglistnoret 2 ...................... <tWndObj.getElement("monthDrop"), 0>
  [140] objcall 136 ............................. tWndObj.getElement("monthDrop").setOrdering(0)
  [142] getlocal 0 .............................. <tWndObj>
  [144] pushcons 36 ............................. <"updateaccount_topic">
  [146] pusharglist 2 ........................... <tWndObj, "updateaccount_topic">
  [148] objcall 133 ............................. <tWndObj.getElement("updateaccount_topic")>
  [150] pushcons 220 ............................ <"reg_verification_incorrectBirthday">
  [152] pusharglist 1 ........................... <"reg_verification_incorrectBirthday">
  [154] extcall 74 .............................. <getText("reg_verification_incorrectBirthday")>
  [156] pusharglistnoret 2 ...................... <tWndObj.getElement("updateaccount_topic"), getText("reg_verification_incorrectBirthday")>
  [158] objcall 134 ............................. tWndObj.getElement("updateaccount_topic").setText(getText("reg_verification_incorrectBirthday"))
  [160] getparam 0 .............................. <me>
  [162] pusharglistnoret 1 ...................... <me>
  [164] objcall 62 .............................. me.highlightVerifyTopic()
  [166] jmp [185] ............................... (case) otherwise:
  [169] pop 1
  [171] getparam 0 .............................. <me>
  [173] pushcons 221 ............................ <"Invalid parameter in ACCOUNT_UPDATE_STATUS">
  [175] pushsymb 63 ............................. <#responseToAccountUpdate>
  [177] pusharglist 3 ........................... <me, "Invalid parameter in ACCOUNT_UPDATE_STATUS", #responseToAccountUpdate>
  [179] extcall 85 .............................. <error(me, "Invalid parameter in ACCOUNT_UPDATE_STATUS", #responseToAccountUpdate)>
  [181] pusharglistnoret 1 ...................... <error(me, "Invalid parameter in ACCOUNT_UPDATE_STATUS", #responseToAccountUpdate)>
  [183] extcall 89 .............................. return error(me, "Invalid parameter in ACCOUNT_UPDATE_STATUS", #responseToAccountUpdate)
  [185] pop 1 ................................... end case
  [187] getprop 79 .............................. <pPwdEmailUpdateForced>
  [189] getlocal 0 .............................. <tWndObj>
  [191] pushcons 56 ............................. <"update_cancel_button">
  [193] pusharglist 2 ........................... <tWndObj, "update_cancel_button">
  [195] objcall 135 ............................. <tWndObj.elementExists("update_cancel_button")>
  [197] and ..................................... <pPwdEmailUpdateForced and tWndObj.elementExists("update_cancel_button")>
  [198] jmpifz [213] ............................ if pPwdEmailUpdateForced and tWndObj.elementExists("update_cancel_button") then
  [201] getlocal 0 .............................. <tWndObj>
  [203] pushcons 56 ............................. <"update_cancel_button">
  [205] pusharglist 2 ........................... <tWndObj, "update_cancel_button">
  [207] objcall 133 ............................. <tWndObj.getElement("update_cancel_button")>
  [209] pusharglistnoret 1 ...................... <tWndObj.getElement("update_cancel_button")>
  [211] objcall 161 ............................. tWndObj.getElement("update_cancel_button").deactivate()
  [213] ret
end

on responseToGdprRequest me, tStatus
  [  0] getprop 77 .............................. <pVerifyChangeWndID>
  [  2] pusharglist 1 ........................... <pVerifyChangeWndID>
  [  4] extcall 130 ............................. <getWindow(pVerifyChangeWndID)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pVerifyChangeWndID)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] pusharglistnoret 1 ...................... <tWndObj>
  [ 12] objcall 525 ............................. tWndObj.close()
  [ 15] getparam 1 .............................. <tStatus>
  [ 17] peek 0 .................................. case tStatus of
  [ 19] pushcons 129 ............................ <"1">
  [ 21] eq
  [ 22] jmpifz [ 49] ............................ (case) "1":
  [ 25] pushsymb 119 ............................ <#alert>
  [ 27] pushsymb 120 ............................ <#msg>
  [ 29] pushcons 222 ............................ <"Alert_GDPR_In_Progress">
  [ 31] pushsymb 121 ............................ <#id>
  [ 33] pushcons 223 ............................ <"GDPR_In_Progress">
  [ 35] pushsymb 122 ............................ <#modal>
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglist 6 ........................... <[#msg: "Alert_GDPR_In_Progress", #id: "GDPR_In_Progress", #modal: 1]>
  [ 41] pushproplist ............................ <[#msg: "Alert_GDPR_In_Progress", #id: "GDPR_In_Progress", #modal: 1]>
  [ 42] pusharglistnoret 2 ...................... <#alert, [#msg: "Alert_GDPR_In_Progress", #id: "GDPR_In_Progress", #modal: 1]>
  [ 44] extcall 118 ............................. executeMessage(#alert, [#msg: "Alert_GDPR_In_Progress", #id: "GDPR_In_Progress", #modal: 1])
  [ 46] jmp [ 89]
  [ 49] peek 0
  [ 51] pushcons 224 ............................ <"3">
  [ 53] eq
  [ 54] jmpifz [ 81] ............................ (case) "3":
  [ 57] pushsymb 119 ............................ <#alert>
  [ 59] pushsymb 120 ............................ <#msg>
  [ 61] pushcons 225 ............................ <"Alert_GDPR_Success">
  [ 63] pushsymb 121 ............................ <#id>
  [ 65] pushcons 226 ............................ <"GDPR_Success">
  [ 67] pushsymb 122 ............................ <#modal>
  [ 69] pushint8 1 .............................. <1>
  [ 71] pusharglist 6 ........................... <[#msg: "Alert_GDPR_Success", #id: "GDPR_Success", #modal: 1]>
  [ 73] pushproplist ............................ <[#msg: "Alert_GDPR_Success", #id: "GDPR_Success", #modal: 1]>
  [ 74] pusharglistnoret 2 ...................... <#alert, [#msg: "Alert_GDPR_Success", #id: "GDPR_Success", #modal: 1]>
  [ 76] extcall 118 ............................. executeMessage(#alert, [#msg: "Alert_GDPR_Success", #id: "GDPR_Success", #modal: 1])
  [ 78] jmp [ 89] ............................... (case) otherwise:
  [ 81] getlocal 0 .............................. <tWndObj>
  [ 83] pushcons 227 ............................ <"reg_gdpr_request_error.window">
  [ 85] pusharglistnoret 2 ...................... <tWndObj, "reg_gdpr_request_error.window">
  [ 87] objcall 132 ............................. tWndObj.merge("reg_gdpr_request_error.window")
  [ 89] pop 1 ................................... end case
  [ 91] ret
end

on blinkChecking me
  [  0] getprop 77 .............................. <pVerifyChangeWndID>
  [  2] pusharglist 1 ........................... <pVerifyChangeWndID>
  [  4] extcall 93 .............................. <windowExists(pVerifyChangeWndID)>
  [  6] not ..................................... <not windowExists(pVerifyChangeWndID)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pVerifyChangeWndID) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 89 .............................. return 0
  [ 15] pushsymb 359 ............................ <#checking_blinker>
  [ 18] pusharglist 1 ........................... <#checking_blinker>
  [ 20] extcall 358 ............................. <timeoutExists(#checking_blinker)>
  [ 23] jmpifz [ 31] ............................ if timeoutExists(#checking_blinker) then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 89 .............................. return 0
  [ 31] getprop 77 .............................. <pVerifyChangeWndID>
  [ 33] pusharglist 1 ........................... <pVerifyChangeWndID>
  [ 35] extcall 130 ............................. <getWindow(pVerifyChangeWndID)>
  [ 37] pushcons 228 ............................ <"updating_text">
  [ 39] pusharglist 2 ........................... <getWindow(pVerifyChangeWndID), "updating_text">
  [ 41] objcall 133 ............................. <getWindow(pVerifyChangeWndID).getElement("updating_text")>
  [ 43] setlocal 0 .............................. tElem = getWindow(pVerifyChangeWndID).getElement("updating_text")
  [ 45] getlocal 0 .............................. <tElem>
  [ 47] not ..................................... <not tElem>
  [ 48] jmpifz [ 56] ............................ if not tElem then
  [ 51] pushzero ................................ <0>
  [ 52] pusharglistnoret 1 ...................... <0>
  [ 54] extcall 89 .............................. return 0
  [ 56] getlocal 0 .............................. <tElem>
  [ 58] pushsymb 169 ............................ <#visible>
  [ 60] getlocal 0 .............................. <tElem>
  [ 62] pushsymb 169 ............................ <#visible>
  [ 64] pusharglist 2 ........................... <tElem, #visible>
  [ 66] objcall 170 ............................. <tElem.getProperty(#visible)>
  [ 68] not ..................................... <not tElem.getProperty(#visible)>
  [ 69] pusharglistnoret 3 ...................... <tElem, #visible, not tElem.getProperty(#visible)>
  [ 71] objcall 159 ............................. tElem.setProperty(#visible, not tElem.getProperty(#visible))
  [ 73] pushsymb 359 ............................ <#checking_blinker>
  [ 76] pushint16 500 ........................... <500>
  [ 79] pushsymb 65 ............................. <#blinkChecking>
  [ 81] getparam 0 .............................. <me>
  [ 83] pusharglist 1 ........................... <me>
  [ 85] objcall 162 ............................. <me.getID()>
  [ 87] pusharglist 0 ........................... <>
  [ 89] extcall 92 .............................. <VOID>
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglist 6 ........................... <#checking_blinker, 500, #blinkChecking, me.getID(), VOID, 1>
  [ 95] extcall 360 ............................. <createTimeout(#checking_blinker, 500, #blinkChecking, me.getID(), VOID, 1)>
  [ 98] pusharglistnoret 1 ...................... <createTimeout(#checking_blinker, 500, #blinkChecking, me.getID(), VOID, 1)>
  [100] extcall 89 .............................. return createTimeout(#checking_blinker, 500, #blinkChecking, me.getID(), VOID, 1)
  [102] ret
end

on updatePasswordAsterisks me, tParams
  [  0] getparam 1 .............................. <tParams>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglist 2 ........................... <tParams, 1>
  [  6] objcall 105 ............................. <tParams[1]>
  [  8] pusharglist 1 ........................... <tParams[1]>
  [ 10] extcall 130 ............................. <getWindow(tParams[1])>
  [ 12] setlocal 0 .............................. tWndObj = getWindow(tParams[1])
  [ 14] getlocal 0 .............................. <tWndObj>
  [ 16] pushzero ................................ <0>
  [ 17] eq ...................................... <tWndObj = 0>
  [ 18] jmpifz [ 26] ............................ if tWndObj = 0 then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 89 .............................. return 0
  [ 26] getparam 1 .............................. <tParams>
  [ 28] pushint8 2 .............................. <2>
  [ 30] pusharglist 2 ........................... <tParams, 2>
  [ 32] objcall 105 ............................. <tParams[2]>
  [ 34] setlocal 1 .............................. tElementId = tParams[2]
  [ 36] getlocal 0 .............................. <tWndObj>
  [ 38] getlocal 1 .............................. <tElementId>
  [ 40] pusharglist 2 ........................... <tWndObj, tElementId>
  [ 42] objcall 133 ............................. <tWndObj.getElement(tElementId)>
  [ 44] setlocal 2 .............................. tPwdElement = tWndObj.getElement(tElementId)
  [ 46] getlocal 2 .............................. <tPwdElement>
  [ 48] pushzero ................................ <0>
  [ 49] eq ...................................... <tPwdElement = 0>
  [ 50] jmpifz [ 58] ............................ if tPwdElement = 0 then
  [ 53] pushzero ................................ <0>
  [ 54] pusharglistnoret 1 ...................... <0>
  [ 56] extcall 89 .............................. return 0
  [ 58] getlocal 2 .............................. <tPwdElement>
  [ 60] pusharglist 1 ........................... <tPwdElement>
  [ 62] objcall 74 .............................. <tPwdElement.getText()>
  [ 64] setlocal 3 .............................. tPwdTxt = tPwdElement.getText()
  [ 66] pushint8 1 .............................. <1>
  [ 68] setlocal 4
  [ 70] getlocal 4
  [ 72] getlocal 3 .............................. <tPwdTxt>
  [ 74] getobjprop 214 .......................... <tPwdTxt.length>
  [ 76] lteq
  [ 77] jmpifz [168] ............................ repeat with i = 1 to tPwdTxt.length
  [ 80] getlocal 3 .............................. <tPwdTxt>
  [ 82] getlocal 4 .............................. <i>
  [ 84] getlocal 4 .............................. <i>
  [ 86] pusharglist 3 ........................... <tPwdTxt, i, i>
  [ 88] extcall 213 ............................. <chars(tPwdTxt, i, i)>
  [ 90] setlocal 5 .............................. tChar = chars(tPwdTxt, i, i)
  [ 92] getlocal 5 .............................. <tChar>
  [ 94] pushcons 229 ............................ <"*">
  [ 96] nteq .................................... <tChar <> "*">
  [ 97] getlocal 5 .............................. <tChar>
  [ 99] pushcons 230 ............................ <" ">
  [101] nteq .................................... <tChar <> " ">
  [102] and ..................................... <(tChar <> "*") and (tChar <> " ")>
  [103] jmpifz [159] ............................ if (tChar <> "*") and (tChar <> " ") then
  [106] getprop 69 .............................. <pTempPassword>
  [108] getlocal 1 .............................. <tElementId>
  [110] getprop 69 .............................. <pTempPassword>
  [112] getlocal 1 .............................. <tElementId>
  [114] pusharglist 2 ........................... <pTempPassword, tElementId>
  [116] objcall 105 ............................. <pTempPassword[tElementId]>
  [118] pushint8 1 .............................. <1>
  [120] getlocal 4 .............................. <i>
  [122] pushint8 1 .............................. <1>
  [124] sub ..................................... <i - 1>
  [125] pusharglist 3 ........................... <pTempPassword[tElementId], 1, i - 1>
  [127] extcall 213 ............................. <chars(pTempPassword[tElementId], 1, i - 1)>
  [129] getlocal 5 .............................. <tChar>
  [131] joinstr ................................. <chars(pTempPassword[tElementId], 1, i - 1) & tChar>
  [132] getprop 69 .............................. <pTempPassword>
  [134] getlocal 1 .............................. <tElementId>
  [136] pusharglist 2 ........................... <pTempPassword, tElementId>
  [138] objcall 105 ............................. <pTempPassword[tElementId]>
  [140] getlocal 4 .............................. <i>
  [142] pushint8 1 .............................. <1>
  [144] add ..................................... <i + 1>
  [145] getlocal 4 .............................. <i>
  [147] pushint8 1 .............................. <1>
  [149] add ..................................... <i + 1>
  [150] pusharglist 3 ........................... <pTempPassword[tElementId], i + 1, i + 1>
  [152] extcall 213 ............................. <chars(pTempPassword[tElementId], i + 1, i + 1)>
  [154] joinstr ................................. <chars(pTempPassword[tElementId], 1, i - 1) & tChar & chars(pTempPassword[tElementId], i + 1, i + 1)>
  [155] pusharglistnoret 3 ...................... <pTempPassword, tElementId, chars(pTempPassword[tElementId], 1, i - 1) & tChar & chars(pTempPassword[tElementId], i + 1, i + 1)>
  [157] objcall 174 ............................. pTempPassword[tElementId] = chars(pTempPassword[tElementId], 1, i - 1) & tChar & chars(pTempPassword[tElementId], i + 1, i + 1)
  [159] pushint8 1
  [161] getlocal 4
  [163] add
  [164] setlocal 4
  [166] endrepeat [ 70]
  [168] pushcons 0 .............................. <EMPTY>
  [170] setlocal 6 .............................. tStars = EMPTY
  [172] pushint8 1 .............................. <1>
  [174] setlocal 4
  [176] getlocal 4
  [178] getprop 69 .............................. <pTempPassword>
  [180] getlocal 1 .............................. <tElementId>
  [182] pusharglist 2 ........................... <pTempPassword, tElementId>
  [184] objcall 105 ............................. <pTempPassword[tElementId]>
  [186] getobjprop 214 .......................... <pTempPassword[tElementId].length>
  [188] lteq
  [189] jmpifz [208] ............................ repeat with i = 1 to pTempPassword[tElementId].length
  [192] getlocal 6 .............................. <tStars>
  [194] pushcons 229 ............................ <"*">
  [196] joinstr ................................. <tStars & "*">
  [197] setlocal 6 .............................. tStars = tStars & "*"
  [199] pushint8 1
  [201] getlocal 4
  [203] add
  [204] setlocal 4
  [206] endrepeat [176]
  [208] getlocal 2 .............................. <tPwdElement>
  [210] getlocal 6 .............................. <tStars>
  [212] pusharglistnoret 2 ...................... <tPwdElement, tStars>
  [214] objcall 134 ............................. tPwdElement.setText(tStars)
  [216] ret
end

on eventProcFigurecreator me, tEvent, tSprID, tParm, tWndID
  [  0] getparam 4 .............................. <tWndID>
  [  2] pusharglist 1 ........................... <tWndID>
  [  4] extcall 130 ............................. <getWindow(tWndID)>
  [  6] getparam 2 .............................. <tSprID>
  [  8] pusharglist 2 ........................... <getWindow(tWndID), tSprID>
  [ 10] objcall 133 ............................. <getWindow(tWndID).getElement(tSprID)>
  [ 12] pushsymb 258 ............................ <#rect>
  [ 15] pusharglist 2 ........................... <getWindow(tWndID).getElement(tSprID), #rect>
  [ 17] objcall 170 ............................. <getWindow(tWndID).getElement(tSprID).getProperty(#rect)>
  [ 19] setlocal 0 .............................. tRect = getWindow(tWndID).getElement(tSprID).getProperty(#rect)
  [ 21] getparam 1 .............................. <tEvent>
  [ 23] pushsymb 0 .............................. <#mouseUp>
  [ 25] eq ...................................... <tEvent = #mouseUp>
  [ 26] jmpifz [1071] ........................... if tEvent = #mouseUp then / else
  [ 29] getparam 2 .............................. <tSprID>
  [ 31] peek 0 .................................. case tSprID of
  [ 33] pushcons 231 ............................ <"close">
  [ 35] nteq
  [ 36] jmpifz [ 55] ............................ (case) "close", ...
  [ 39] peek 0
  [ 41] pushcons 118 ............................ <"reg_cancel_button">
  [ 43] nteq
  [ 44] jmpifz [ 55] ............................ (case) ..., "reg_cancel_button", ...
  [ 47] peek 0
  [ 49] pushcons 84 ............................. <"reg_exit_button">
  [ 51] eq
  [ 52] jmpifz [212] ............................ (case) ..., "reg_exit_button":
  [ 55] getprop 112 ............................. <pmode>
  [ 57] pushcons 60 ............................. <"registration">
  [ 59] eq ...................................... <pmode = "registration">
  [ 60] getprop 112 ............................. <pmode>
  [ 62] pushcons 42 ............................. <"parent_email">
  [ 64] eq ...................................... <pmode = "parent_email">
  [ 65] or ...................................... <(pmode = "registration") or (pmode = "parent_email")>
  [ 66] getprop 112 ............................. <pmode>
  [ 68] pushcons 43 ............................. <"parent_email_strong_coppa">
  [ 70] eq ...................................... <pmode = "parent_email_strong_coppa">
  [ 71] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [ 72] getprop 112 ............................. <pmode>
  [ 74] pushcons 41 ............................. <"topt_verification">
  [ 76] eq ...................................... <pmode = "topt_verification">
  [ 77] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification")>
  [ 78] jmpifz [107] ............................ if (pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification") then
  [ 81] getprop 146 ............................. <pRegProcess>
  [ 83] getobjprop 102 .......................... <pRegProcess.ilk>
  [ 85] pushsymb 103 ............................ <#list>
  [ 87] eq ...................................... <pRegProcess.ilk = #list>
  [ 88] jmpifz [107] ............................ if pRegProcess.ilk = #list then
  [ 91] getprop 76 .............................. <pRegProcessLocation>
  [ 93] getprop 146 ............................. <pRegProcess>
  [ 95] getobjprop 104 .......................... <pRegProcess.count>
  [ 97] eq ...................................... <pRegProcessLocation = pRegProcess.count>
  [ 98] jmpifz [107] ............................ if pRegProcessLocation = pRegProcess.count then
  [101] getparam 0 .............................. <me>
  [103] pusharglistnoret 1 ...................... <me>
  [105] objcall 57 .............................. me.registrationReady()
  [107] getparam 0 .............................. <me>
  [109] pusharglist 1 ........................... <me>
  [111] objcall 114 ............................. <me.getComponent()>
  [113] pusharglistnoret 1 ...................... <me.getComponent()>
  [115] objcall 5 ............................... me.getComponent().closeFigureCreator()
  [117] getparam 0 .............................. <me>
  [119] pusharglist 1 ........................... <me>
  [121] objcall 114 ............................. <me.getComponent()>
  [123] pushcons 47 ............................. <"start">
  [125] pusharglistnoret 2 ...................... <me.getComponent(), "start">
  [127] objcall 150 ............................. me.getComponent().updateState("start")
  [129] pushsymb 109 ............................ <#session>
  [131] pusharglist 1 ........................... <#session>
  [133] extcall 95 .............................. <objectExists(#session)>
  [135] jmpifz [209] ............................ if objectExists(#session) then
  [138] pushsymb 109 ............................ <#session>
  [140] pusharglist 1 ........................... <#session>
  [142] extcall 110 ............................. <getObject(#session)>
  [144] pushcons 232 ............................ <"userLoggedIn">
  [146] pusharglist 2 ........................... <getObject(#session), "userLoggedIn">
  [148] objcall 177 ............................. <getObject(#session).get("userLoggedIn")>
  [150] pushzero ................................ <0>
  [151] eq ...................................... <getObject(#session).get("userLoggedIn") = 0>
  [152] jmpifz [209] ............................ if getObject(#session).get("userLoggedIn") = 0 then
  [155] pushsymb 368 ............................ <#login>
  [158] pusharglist 1 ........................... <#login>
  [160] extcall 367 ............................. <threadExists(#login)>
  [163] jmpifz [184] ............................ if threadExists(#login) then
  [166] pushsymb 368 ............................ <#login>
  [169] pusharglist 1 ........................... <#login>
  [171] extcall 369 ............................. <getThread(#login)>
  [174] pusharglist 1 ........................... <getThread(#login)>
  [176] objcall 370 ............................. <getThread(#login).getInterface()>
  [179] pusharglistnoret 1 ...................... <getThread(#login).getInterface()>
  [181] objcall 371 ............................. getThread(#login).getInterface().showLogin()
  [184] pushcons 233 ............................ <"connection.info.id">
  [186] pusharglist 1 ........................... <"connection.info.id">
  [188] extcall 88 .............................. <getVariable("connection.info.id")>
  [190] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [192] extcall 372 ............................. <connectionExists(getVariable("connection.info.id"))>
  [195] jmpifz [209] ............................ if connectionExists(getVariable("connection.info.id")) then
  [198] pushcons 233 ............................ <"connection.info.id">
  [200] pusharglist 1 ........................... <"connection.info.id">
  [202] extcall 88 .............................. <getVariable("connection.info.id")>
  [204] pusharglistnoret 1 ...................... <getVariable("connection.info.id")>
  [206] extcall 373 ............................. removeConnection(getVariable("connection.info.id"))
  [209] jmp [1066]
  [212] peek 0
  [214] pushcons 234 ............................ <"reg_underage_button">
  [216] eq
  [217] jmpifz [233] ............................ (case) "reg_underage_button":
  [220] getparam 0 .............................. <me>
  [222] pusharglist 1 ........................... <me>
  [224] objcall 114 ............................. <me.getComponent()>
  [226] pusharglistnoret 1 ...................... <me.getComponent()>
  [228] objcall 115 ............................. me.getComponent().getRealtime()
  [230] jmp [1066]
  [233] peek 0
  [235] pushcons 235 ............................ <"reg_olderage_button">
  [237] eq
  [238] jmpifz [261] ............................ (case) "reg_olderage_button":
  [241] getprop 70 .............................. <pPropsToServer>
  [243] pushcons 67 ............................. <"parentagree">
  [245] pushzero ................................ <0>
  [246] pusharglistnoret 3 ...................... <pPropsToServer, "parentagree", 0>
  [248] objcall 174 ............................. pPropsToServer["parentagree"] = 0
  [250] getparam 0 .............................. <me>
  [252] pushint8 1 .............................. <1>
  [254] pusharglistnoret 2 ...................... <me, 1>
  [256] objcall 58 .............................. me.changePage(1)
  [258] jmp [1066]
  [261] peek 0
  [263] pushcons 121 ............................ <"reg_next_button">
  [265] eq
  [266] jmpifz [280] ............................ (case) "reg_next_button":
  [269] getparam 0 .............................. <me>
  [271] pushint8 1 .............................. <1>
  [273] pusharglistnoret 2 ...................... <me, 1>
  [275] objcall 58 .............................. me.changePage(1)
  [277] jmp [1066]
  [280] peek 0
  [282] pushcons 117 ............................ <"reg_prev_button">
  [284] eq
  [285] jmpifz [300] ............................ (case) "reg_prev_button":
  [288] getparam 0 .............................. <me>
  [290] pushint8 1 .............................. <1>
  [292] inv ..................................... <-1>
  [293] pusharglistnoret 2 ...................... <me, -1>
  [295] objcall 58 .............................. me.changePage(-1)
  [297] jmp [1066]
  [300] peek 0
  [302] pushcons 119 ............................ <"reg_done_button">
  [304] eq
  [305] jmpifz [395] ............................ (case) "reg_done_button":
  [308] getparam 0 .............................. <me>
  [310] getprop 75 .............................. <pOpenWindow>
  [312] pusharglist 2 ........................... <me, pOpenWindow>
  [314] objcall 59 .............................. <me.leavePage(pOpenWindow)>
  [316] pushint8 1 .............................. <1>
  [318] eq ...................................... <me.leavePage(pOpenWindow) = 1>
  [319] jmpifz [385] ............................ if me.leavePage(pOpenWindow) = 1 then / else
  [322] pushsymb 109 ............................ <#session>
  [324] pusharglist 1 ........................... <#session>
  [326] extcall 110 ............................. <getObject(#session)>
  [328] pushcons 45 ............................. <"user_figure">
  [330] getprop 70 .............................. <pPropsToServer>
  [332] pushcons 46 ............................. <"figure">
  [334] pusharglist 2 ........................... <pPropsToServer, "figure">
  [336] objcall 105 ............................. <pPropsToServer["figure"]>
  [338] pusharglist 1 ........................... <pPropsToServer["figure"]>
  [340] objcall 148 ............................. <pPropsToServer["figure"].duplicate()>
  [342] pusharglistnoret 3 ...................... <getObject(#session), "user_figure", pPropsToServer["figure"].duplicate()>
  [344] objcall 111 ............................. getObject(#session).set("user_figure", pPropsToServer["figure"].duplicate())
  [346] getparam 0 .............................. <me>
  [348] pusharglist 1 ........................... <me>
  [350] objcall 114 ............................. <me.getComponent()>
  [352] getprop 70 .............................. <pPropsToServer>
  [354] pusharglistnoret 2 ...................... <me.getComponent(), pPropsToServer>
  [356] objcall 149 ............................. me.getComponent().sendFigureUpdateToServer(pPropsToServer)
  [358] getparam 0 .............................. <me>
  [360] pusharglist 1 ........................... <me>
  [362] objcall 114 ............................. <me.getComponent()>
  [364] pushcons 47 ............................. <"start">
  [366] pusharglistnoret 2 ...................... <me.getComponent(), "start">
  [368] objcall 150 ............................. me.getComponent().updateState("start")
  [370] pop 1
  [372] getparam 0 .............................. <me>
  [374] pusharglist 1 ........................... <me>
  [376] objcall 5 ............................... <me.closeFigureCreator()>
  [378] pusharglistnoret 1 ...................... <me.closeFigureCreator()>
  [380] extcall 89 .............................. return me.closeFigureCreator()
  [382] jmp [392]
  [385] pop 1
  [387] pushzero ................................ <0>
  [388] pusharglistnoret 1 ...................... <0>
  [390] extcall 89 .............................. return 0
  [392] jmp [1066]
  [395] peek 0
  [397] pushcons 236 ............................ <"reg_ready">
  [399] eq
  [400] jmpifz [434] ............................ (case) "reg_ready":
  [403] getparam 0 .............................. <me>
  [405] pusharglistnoret 1 ...................... <me>
  [407] objcall 57 .............................. me.registrationReady()
  [409] getparam 0 .............................. <me>
  [411] pusharglist 1 ........................... <me>
  [413] objcall 114 ............................. <me.getComponent()>
  [415] pusharglistnoret 1 ...................... <me.getComponent()>
  [417] objcall 5 ............................... me.getComponent().closeFigureCreator()
  [419] getparam 0 .............................. <me>
  [421] pusharglist 1 ........................... <me>
  [423] objcall 114 ............................. <me.getComponent()>
  [425] pushcons 47 ............................. <"start">
  [427] pusharglistnoret 2 ...................... <me.getComponent(), "start">
  [429] objcall 150 ............................. me.getComponent().updateState("start")
  [431] jmp [1066]
  [434] peek 0
  [436] pushcons 126 ............................ <"char_sex_m">
  [438] eq
  [439] jmpifz [469] ............................ (case) "char_sex_m":
  [442] getprop 70 .............................. <pPropsToServer>
  [444] pushcons 62 ............................. <"sex">
  [446] pushcons 63 ............................. <"M">
  [448] pusharglistnoret 3 ...................... <pPropsToServer, "sex", "M">
  [450] objcall 174 ............................. pPropsToServer["sex"] = "M"
  [452] getparam 0 .............................. <me>
  [454] pushint8 1 .............................. <1>
  [456] pusharglistnoret 2 ...................... <me, 1>
  [458] objcall 32 .............................. me.createDefaultFigure(1)
  [460] getparam 0 .............................. <me>
  [462] pusharglistnoret 1 ...................... <me>
  [464] objcall 30 .............................. me.updateSexRadioButtons()
  [466] jmp [1066]
  [469] peek 0
  [471] pushcons 125 ............................ <"char_sex_f">
  [473] eq
  [474] jmpifz [504] ............................ (case) "char_sex_f":
  [477] getprop 70 .............................. <pPropsToServer>
  [479] pushcons 62 ............................. <"sex">
  [481] pushcons 81 ............................. <"F">
  [483] pusharglistnoret 3 ...................... <pPropsToServer, "sex", "F">
  [485] objcall 174 ............................. pPropsToServer["sex"] = "F"
  [487] getparam 0 .............................. <me>
  [489] pushint8 1 .............................. <1>
  [491] pusharglistnoret 2 ...................... <me, 1>
  [493] objcall 32 .............................. me.createDefaultFigure(1)
  [495] getparam 0 .............................. <me>
  [497] pusharglistnoret 1 ...................... <me>
  [499] objcall 30 .............................. me.updateSexRadioButtons()
  [501] jmp [1066]
  [504] peek 0
  [506] pushcons 105 ............................ <"char_spam_checkbox">
  [508] eq
  [509] jmpifz [527] ............................ (case) "char_spam_checkbox":
  [512] getparam 0 .............................. <me>
  [514] pushcons 105 ............................ <"char_spam_checkbox">
  [516] pushcons 74 ............................. <"directMail">
  [518] pushint8 1 .............................. <1>
  [520] pusharglistnoret 4 ...................... <me, "char_spam_checkbox", "directMail", 1>
  [522] objcall 31 .............................. me.updateCheckButton("char_spam_checkbox", "directMail", 1)
  [524] jmp [1066]
  [527] peek 0
  [529] pushcons 200 ............................ <"char_online_status_checkbox">
  [531] eq
  [532] jmpifz [550] ............................ (case) "char_online_status_checkbox":
  [535] getparam 0 .............................. <me>
  [537] pushcons 200 ............................ <"char_online_status_checkbox">
  [539] pushcons 68 ............................. <"onlineStatus">
  [541] pushint8 1 .............................. <1>
  [543] pusharglistnoret 4 ...................... <me, "char_online_status_checkbox", "onlineStatus", 1>
  [545] objcall 31 .............................. me.updateCheckButton("char_online_status_checkbox", "onlineStatus", 1)
  [547] jmp [1066]
  [550] peek 0
  [552] pushcons 201 ............................ <"char_friend_requests_enabled_checkbox">
  [554] eq
  [555] jmpifz [573] ............................ (case) "char_friend_requests_enabled_checkbox":
  [558] getparam 0 .............................. <me>
  [560] pushcons 201 ............................ <"char_friend_requests_enabled_checkbox">
  [562] pushcons 70 ............................. <"friendRequestsEnabled">
  [564] pushint8 1 .............................. <1>
  [566] pusharglistnoret 4 ...................... <me, "char_friend_requests_enabled_checkbox", "friendRequestsEnabled", 1>
  [568] objcall 31 .............................. me.updateCheckButton("char_friend_requests_enabled_checkbox", "friendRequestsEnabled", 1)
  [570] jmp [1066]
  [573] peek 0
  [575] pushcons 202 ............................ <"char_offline_messaging_enabled_checkbox">
  [577] eq
  [578] jmpifz [596] ............................ (case) "char_offline_messaging_enabled_checkbox":
  [581] getparam 0 .............................. <me>
  [583] pushcons 202 ............................ <"char_offline_messaging_enabled_checkbox">
  [585] pushcons 71 ............................. <"offlineMessagingEnabled">
  [587] pushint8 1 .............................. <1>
  [589] pusharglistnoret 4 ...................... <me, "char_offline_messaging_enabled_checkbox", "offlineMessagingEnabled", 1>
  [591] objcall 31 .............................. me.updateCheckButton("char_offline_messaging_enabled_checkbox", "offlineMessagingEnabled", 1)
  [593] jmp [1066]
  [596] peek 0
  [598] pushcons 203 ............................ <"char_public_profile_enabled_checkbox">
  [600] eq
  [601] jmpifz [619] ............................ (case) "char_public_profile_enabled_checkbox":
  [604] getparam 0 .............................. <me>
  [606] pushcons 203 ............................ <"char_public_profile_enabled_checkbox">
  [608] pushcons 69 ............................. <"publicProfileEnabled">
  [610] pushint8 1 .............................. <1>
  [612] pusharglistnoret 4 ...................... <me, "char_public_profile_enabled_checkbox", "publicProfileEnabled", 1>
  [614] objcall 31 .............................. me.updateCheckButton("char_public_profile_enabled_checkbox", "publicProfileEnabled", 1)
  [616] jmp [1066]
  [619] peek 0
  [621] pushcons 195 ............................ <"char_terms_checkbox">
  [623] eq
  [624] jmpifz [642] ............................ (case) "char_terms_checkbox":
  [627] getparam 0 .............................. <me>
  [629] pushcons 195 ............................ <"char_terms_checkbox">
  [631] pushcons 66 ............................. <"has_read_agreement">
  [633] pushint8 1 .............................. <1>
  [635] pusharglistnoret 4 ...................... <me, "char_terms_checkbox", "has_read_agreement", 1>
  [637] objcall 31 .............................. me.updateCheckButton("char_terms_checkbox", "has_read_agreement", 1)
  [639] jmp [1066]
  [642] peek 0
  [644] pushcons 237 ............................ <"char_permission_checkbox">
  [646] eq
  [647] jmpifz [665] ............................ (case) "char_permission_checkbox":
  [650] getparam 0 .............................. <me>
  [652] pushcons 237 ............................ <"char_permission_checkbox">
  [654] pushcons 238 ............................ <"parent_permission">
  [656] pushint8 1 .............................. <1>
  [658] pusharglistnoret 4 ...................... <me, "char_permission_checkbox", "parent_permission", 1>
  [660] objcall 31 .............................. me.updateCheckButton("char_permission_checkbox", "parent_permission", 1)
  [662] jmp [1066]
  [665] peek 0
  [667] pushcons 97 ............................. <"char_name_field">
  [669] eq
  [670] jmpifz [713] ............................ (case) "char_name_field":
  [673] getprop 173 ............................. <pNameChecked>
  [675] pushint8 1 .............................. <1>
  [677] eq ...................................... <pNameChecked = 1>
  [678] jmpifz [710] ............................ if pNameChecked = 1 then
  [681] getprop 112 ............................. <pmode>
  [683] pushcons 60 ............................. <"registration">
  [685] eq ...................................... <pmode = "registration">
  [686] getprop 112 ............................. <pmode>
  [688] pushcons 42 ............................. <"parent_email">
  [690] eq ...................................... <pmode = "parent_email">
  [691] or ...................................... <(pmode = "registration") or (pmode = "parent_email")>
  [692] getprop 112 ............................. <pmode>
  [694] pushcons 43 ............................. <"parent_email_strong_coppa">
  [696] eq ...................................... <pmode = "parent_email_strong_coppa">
  [697] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa")>
  [698] getprop 112 ............................. <pmode>
  [700] pushcons 41 ............................. <"topt_verification">
  [702] eq ...................................... <pmode = "topt_verification">
  [703] or ...................................... <(pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification")>
  [704] jmpifz [710] ............................ if (pmode = "registration") or (pmode = "parent_email") or (pmode = "parent_email_strong_coppa") or (pmode = "topt_verification") then
  [707] pushzero ................................ <0>
  [708] setprop 173 ............................. pNameChecked = 0
  [710] jmp [1066]
  [713] peek 0
  [715] pushcons 102 ............................ <"char_email_field">
  [717] eq
  [718] jmpifz [727] ............................ (case) "char_email_field":
  [721] pushzero ................................ <0>
  [722] setprop 123 ............................. pEmailChecked = 0
  [724] jmp [1066]
  [727] peek 0
  [729] pushcons 239 ............................ <"char_continent_drop">
  [731] eq
  [732] jmpifz [771] ............................ (case) "char_continent_drop":
  [735] pushcons 11 ............................. <"CountryMngr">
  [737] pusharglist 1 ........................... <"CountryMngr">
  [739] extcall 110 ............................. <getObject("CountryMngr")>
  [741] getparam 3 .............................. <tParm>
  [743] pusharglist 2 ........................... <getObject("CountryMngr"), tParm>
  [745] objcall 374 ............................. <getObject("CountryMngr").getCountryListImg(tParm)>
  [748] setlocal 1 .............................. tCountryListImg = getObject("CountryMngr").getCountryListImg(tParm)
  [750] getprop 73 .............................. <pWindowTitle>
  [752] pusharglist 1 ........................... <pWindowTitle>
  [754] extcall 130 ............................. <getWindow(pWindowTitle)>
  [756] pushcons 240 ............................ <"char_country_field">
  [758] pusharglist 2 ........................... <getWindow(pWindowTitle), "char_country_field">
  [760] objcall 133 ............................. <getWindow(pWindowTitle).getElement("char_country_field")>
  [762] getlocal 1 .............................. <tCountryListImg>
  [764] pusharglistnoret 2 ...................... <getWindow(pWindowTitle).getElement("char_country_field"), tCountryListImg>
  [766] objcall 221 ............................. getWindow(pWindowTitle).getElement("char_country_field").feedImage(tCountryListImg)
  [768] jmp [1066]
  [771] peek 0
  [773] pushcons 241 ............................ <"char_terms_linktext">
  [775] eq
  [776] jmpifz [789] ............................ (case) "char_terms_linktext":
  [779] pushcons 242 ............................ <"url_helpterms">
  [781] pusharglistnoret 1 ...................... <"url_helpterms">
  [783] extcall 375 ............................. openNetPage("url_helpterms")
  [786] jmp [1066]
  [789] peek 0
  [791] pushcons 243 ............................ <"char_pledge_linktext">
  [793] eq
  [794] jmpifz [807] ............................ (case) "char_pledge_linktext":
  [797] pushcons 244 ............................ <"url_helppledge">
  [799] pusharglistnoret 1 ...................... <"url_helppledge">
  [801] extcall 375 ............................. openNetPage("url_helppledge")
  [804] jmp [1066]
  [807] peek 0
  [809] pushcons 245 ............................ <"char_ppledge_linktext">
  [811] eq
  [812] jmpifz [825] ............................ (case) "char_ppledge_linktext":
  [815] pushcons 246 ............................ <"url_privacypledge">
  [817] pusharglistnoret 1 ...................... <"url_privacypledge">
  [819] extcall 375 ............................. openNetPage("url_privacypledge")
  [822] jmp [1066]
  [825] peek 0
  [827] pushcons 247 ............................ <"char_pglink">
  [829] eq
  [830] jmpifz [843] ............................ (case) "char_pglink":
  [833] pushcons 248 ............................ <"url_helpparents">
  [835] pusharglistnoret 1 ...................... <"url_helpparents">
  [837] extcall 375 ............................. openNetPage("url_helpparents")
  [840] jmp [1066]
  [843] peek 0
  [845] pushcons 249 ............................ <"reg_parentemail_link1">
  [847] eq
  [848] jmpifz [861] ............................ (case) "reg_parentemail_link1":
  [851] pushcons 250 ............................ <"reg_parentemail_link_url1">
  [853] pusharglistnoret 1 ...................... <"reg_parentemail_link_url1">
  [855] extcall 375 ............................. openNetPage("reg_parentemail_link_url1")
  [858] jmp [1066]
  [861] peek 0
  [863] pushcons 251 ............................ <"reg_parentemail_link2">
  [865] eq
  [866] jmpifz [879] ............................ (case) "reg_parentemail_link2":
  [869] pushcons 252 ............................ <"reg_parentemail_link_url2">
  [871] pusharglistnoret 1 ...................... <"reg_parentemail_link_url2">
  [873] extcall 375 ............................. openNetPage("reg_parentemail_link_url2")
  [876] jmp [1066]
  [879] peek 0
  [881] pushcons 206 ............................ <"update_change_pwd">
  [883] eq
  [884] jmpifz [898] ............................ (case) "update_change_pwd":
  [887] getparam 0 .............................. <me>
  [889] pushsymb 153 ............................ <#password>
  [891] pusharglistnoret 2 ...................... <me, #password>
  [893] objcall 21 .............................. me.openPwdEmailUpdate(#password)
  [895] jmp [1066]
  [898] peek 0
  [900] pushcons 204 ............................ <"update_change_email">
  [902] eq
  [903] jmpifz [917] ............................ (case) "update_change_email":
  [906] getparam 0 .............................. <me>
  [908] pushsymb 156 ............................ <#email>
  [910] pusharglistnoret 2 ...................... <me, #email>
  [912] objcall 21 .............................. me.openPwdEmailUpdate(#email)
  [914] jmp [1066]
  [917] peek 0
  [919] pushcons 207 ............................ <"gdpr_request">
  [921] eq
  [922] jmpifz [934] ............................ (case) "gdpr_request":
  [925] getparam 0 .............................. <me>
  [927] pusharglistnoret 1 ...................... <me>
  [929] objcall 22 .............................. me.openGdprRequestWindow()
  [931] jmp [1066]
  [934] peek 0
  [936] pushcons 212 ............................ <"reg_tutorial_link">
  [938] eq
  [939] jmpifz [954] ............................ (case) "reg_tutorial_link":
  [942] pushcons 213 ............................ <"reg_tutorial_url">
  [944] pushcons 253 ............................ <"_new">
  [946] pusharglistnoret 2 ...................... <"reg_tutorial_url", "_new">
  [948] extcall 375 ............................. openNetPage("reg_tutorial_url", "_new")
  [951] jmp [1066] .............................. (case) otherwise:
  [954] getparam 2 .............................. <tSprID>
  [956] pushcons 254 ............................ <"change">
  [958] containsstr ............................. <tSprID contains "change">
  [959] getparam 2 .............................. <tSprID>
  [961] pushcons 255 ............................ <"button">
  [963] containsstr ............................. <tSprID contains "button">
  [964] and ..................................... <(tSprID contains "change") and (tSprID contains "button")>
  [965] jmpifz [1066] ........................... if (tSprID contains "change") and (tSprID contains "button") then
  [968] getmovieprop 198 ........................ <the itemDelimiter>
  [970] setlocal 2 .............................. tTempDelim = the itemDelimiter
  [972] pushcons 32 ............................. <".">
  [974] setmovieprop 198 ........................ the itemDelimiter = "."
  [976] getparam 2 .............................. <tSprID>
  [978] pushsymb 200 ............................ <#item>
  [980] pushint8 2 .............................. <2>
  [982] pusharglist 3 ........................... <tSprID, #item, 2>
  [984] objcall 186 ............................. <tSprID.item[2]>
  [986] setlocal 3 .............................. tPart = tSprID.item[2]
  [988] getparam 2 .............................. <tSprID>
  [990] pushsymb 200 ............................ <#item>
  [992] getparam 2 .............................. <tSprID>
  [994] pushsymb 200 ............................ <#item>
  [996] pusharglist 2 ........................... <tSprID, #item>
  [998] objcall 104 ............................. <tSprID.item.count>
  [1000] pushint8 1 ............................. <1>
  [1002] sub .................................... <tSprID.item.count - 1>
  [1003] pusharglist 3 .......................... <tSprID, #item, tSprID.item.count - 1>
  [1005] objcall 186 ............................ <tSprID.item[tSprID.item.count - 1]>
  [1007] setlocal 4 ............................. tButtonType = tSprID.item[tSprID.item.count - 1]
  [1009] getlocal 2 ............................. <tTempDelim>
  [1011] setmovieprop 198 ....................... the itemDelimiter = tTempDelim
  [1013] getlocal 4 ............................. <tButtonType>
  [1015] pushcons 256 ........................... <"left">
  [1018] containsstr ............................ <tButtonType contains "left">
  [1019] jmpifz [1030] .......................... if tButtonType contains "left" then / else
  [1022] pushint8 1 ............................. <1>
  [1024] inv .................................... <-1>
  [1025] setlocal 4 ............................. tButtonType = -1
  [1027] jmp [1034]
  [1030] pushint8 1 ............................. <1>
  [1032] setlocal 4 ............................. tButtonType = 1
  [1034] getparam 2 ............................. <tSprID>
  [1036] pushcons 145 ........................... <"color">
  [1038] containsstr ............................ <tSprID contains "color">
  [1039] not .................................... <not (tSprID contains "color")>
  [1040] jmpifz [1056] .......................... if not (tSprID contains "color") then / else
  [1043] getparam 0 ............................. <me>
  [1045] getlocal 3 ............................. <tPart>
  [1047] getlocal 4 ............................. <tButtonType>
  [1049] pusharglistnoret 3 ..................... <me, tPart, tButtonType>
  [1051] objcall 43 ............................. me.changePart(tPart, tButtonType)
  [1053] jmp [1066]
  [1056] getparam 0 ............................. <me>
  [1058] getlocal 3 ............................. <tPart>
  [1060] getlocal 4 ............................. <tButtonType>
  [1062] pusharglistnoret 3 ..................... <me, tPart, tButtonType>
  [1064] objcall 44 ............................. me.changePartColor(tPart, tButtonType)
  [1066] pop 1 .................................. end case
  [1068] jmp [2216]
  [1071] getparam 1 ............................. <tEvent>
  [1073] pushsymb 164 ........................... <#keyDown>
  [1075] eq ..................................... <tEvent = #keyDown>
  [1076] jmpifz [2216] .......................... if tEvent = #keyDown then
  [1079] getparam 2 ............................. <tSprID>
  [1081] peek 0 ................................. case tSprID of
  [1083] pushcons 97 ............................ <"char_name_field">
  [1085] eq
  [1086] jmpifz [1451] .......................... (case) "char_name_field":
  [1089] pusharglist 0 .......................... <>
  [1091] thebuiltin 377 ......................... <the key>
  [1094] pusharglist 1 .......................... <the key>
  [1096] extcall 376 ............................ <charToNum(the key)>
  [1099] pushzero ............................... <0>
  [1100] eq ..................................... <charToNum(the key) = 0>
  [1101] jmpifz [1111] .......................... if charToNum(the key) = 0 then
  [1104] pop 1
  [1106] pushzero ............................... <0>
  [1107] pusharglistnoret 1 ..................... <0>
  [1109] extcall 89 ............................. return 0
  [1111] pushcons 6 ............................. <"permitted.name.chars">
  [1113] pusharglist 1 .......................... <"permitted.name.chars">
  [1115] extcall 88 ............................. <getVariable("permitted.name.chars")>
  [1117] setlocal 5 ............................. tValidKeys = getVariable("permitted.name.chars")
  [1119] pushcons 9 ............................. <"denied.name.chars">
  [1121] pushcons 0 ............................. <EMPTY>
  [1123] pusharglist 2 .......................... <"denied.name.chars", EMPTY>
  [1125] extcall 88 ............................. <getVariable("denied.name.chars", EMPTY)>
  [1127] setlocal 6 ............................. tDeniedKeys = getVariable("denied.name.chars", EMPTY)
  [1129] getlocal 5 ............................. <tValidKeys>
  [1131] pusharglist 0 .......................... <>
  [1133] thebuiltin 377 ......................... <the key>
  [1136] containsstr ............................ <tValidKeys contains the key>
  [1137] not .................................... <not (tValidKeys contains the key)>
  [1138] jmpifz [1441] .......................... if not (tValidKeys contains the key) then / else
  [1141] pusharglist 0 .......................... <>
  [1143] thebuiltin 378 ......................... <the keyCode>
  [1146] peek 0 ................................. case the keyCode of
  [1148] pushint8 36 ............................ <36>
  [1150] eq
  [1151] jmpifz [1165] .......................... (case) 36:
  [1154] pop 2
  [1156] pushint8 1 ............................. <1>
  [1158] pusharglistnoret 1 ..................... <1>
  [1160] extcall 89 ............................. return 1
  [1162] jmp [1436]
  [1165] peek 0
  [1167] pushint8 48 ............................ <48>
  [1169] eq
  [1170] jmpifz [1189] .......................... (case) 48:
  [1173] getparam 0 ............................. <me>
  [1175] pusharglistnoret 1 ..................... <me>
  [1177] objcall 46 ............................. me.checkName()
  [1179] pop 2
  [1181] pushzero ............................... <0>
  [1182] pusharglistnoret 1 ..................... <0>
  [1184] extcall 89 ............................. return 0
  [1186] jmp [1436]
  [1189] peek 0
  [1191] pushint8 49 ............................ <49>
  [1193] eq
  [1194] jmpifz [1243] .......................... (case) 49:
  [1197] getlocal 5 ............................. <tValidKeys>
  [1199] getobjprop 214 ......................... <tValidKeys.length>
  [1201] pushzero ............................... <0>
  [1202] gt ..................................... <tValidKeys.length > 0>
  [1203] jmpifz [1232] .......................... if tValidKeys.length > 0 then
  [1206] pushsymb 379 ........................... <#helptooltip>
  [1209] pushsymb 120 ........................... <#msg>
  [1211] pushcons 28 ............................ <"reg_use_allowed_chars">
  [1213] pusharglist 1 .......................... <"reg_use_allowed_chars">
  [1215] extcall 74 ............................. <getText("reg_use_allowed_chars")>
  [1217] getlocal 5 ............................. <tValidKeys>
  [1219] joinpadstr ............................. <getText("reg_use_allowed_chars") && tValidKeys>
  [1220] pushsymb 380 ........................... <#pos>
  [1223] getlocal 0 ............................. <tRect>
  [1225] pusharglist 4 .......................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1227] pushproplist ........................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1228] pusharglistnoret 2 ..................... <#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1230] extcall 118 ............................ executeMessage(#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect])
  [1232] pop 2
  [1234] pushint8 1 ............................. <1>
  [1236] pusharglistnoret 1 ..................... <1>
  [1238] extcall 89 ............................. return 1
  [1240] jmp [1436]
  [1243] peek 0
  [1245] pushint8 51 ............................ <51>
  [1247] eq
  [1248] jmpifz [1261] .......................... (case) 51:
  [1251] pop 2
  [1253] pushzero ............................... <0>
  [1254] pusharglistnoret 1 ..................... <0>
  [1256] extcall 89 ............................. return 0
  [1258] jmp [1436]
  [1261] peek 0
  [1263] pushint8 117 ........................... <117>
  [1265] eq
  [1266] jmpifz [1297] .......................... (case) 117:
  [1269] getprop 73 ............................. <pWindowTitle>
  [1271] pusharglist 1 .......................... <pWindowTitle>
  [1273] extcall 130 ............................ <getWindow(pWindowTitle)>
  [1275] getparam 2 ............................. <tSprID>
  [1277] pusharglist 2 .......................... <getWindow(pWindowTitle), tSprID>
  [1279] objcall 133 ............................ <getWindow(pWindowTitle).getElement(tSprID)>
  [1281] pushcons 0 ............................. <EMPTY>
  [1283] pusharglistnoret 2 ..................... <getWindow(pWindowTitle).getElement(tSprID), EMPTY>
  [1285] objcall 134 ............................ getWindow(pWindowTitle).getElement(tSprID).setText(EMPTY)
  [1287] pop 2
  [1289] pushzero ............................... <0>
  [1290] pusharglistnoret 1 ..................... <0>
  [1292] extcall 89 ............................. return 0
  [1294] jmp [1436]
  [1297] peek 0
  [1299] pushint8 123 ........................... <123>
  [1301] nteq
  [1302] jmpifz [1329] .......................... (case) 123, ...
  [1305] peek 0
  [1307] pushint8 124 ........................... <124>
  [1309] nteq
  [1310] jmpifz [1329] .......................... (case) ..., 124, ...
  [1313] peek 0
  [1315] pushint8 125 ........................... <125>
  [1317] nteq
  [1318] jmpifz [1329] .......................... (case) ..., 125, ...
  [1321] peek 0
  [1323] pushint8 126 ........................... <126>
  [1325] eq
  [1326] jmpifz [1339] .......................... (case) ..., 126:
  [1329] pop 2
  [1331] pushzero ............................... <0>
  [1332] pusharglistnoret 1 ..................... <0>
  [1334] extcall 89 ............................. return 0
  [1336] jmp [1436] ............................. (case) otherwise:
  [1339] getlocal 6 ............................. <tDeniedKeys>
  [1341] pusharglist 0 .......................... <>
  [1343] thebuiltin 377 ......................... <the key>
  [1346] containsstr ............................ <tDeniedKeys contains the key>
  [1347] jmpifz [1384] .......................... if tDeniedKeys contains the key then
  [1350] pushsymb 379 ........................... <#helptooltip>
  [1353] pushsymb 120 ........................... <#msg>
  [1355] pushcons 28 ............................ <"reg_use_allowed_chars">
  [1357] pusharglist 1 .......................... <"reg_use_allowed_chars">
  [1359] extcall 74 ............................. <getText("reg_use_allowed_chars")>
  [1361] getlocal 5 ............................. <tValidKeys>
  [1363] joinpadstr ............................. <getText("reg_use_allowed_chars") && tValidKeys>
  [1364] pushsymb 380 ........................... <#pos>
  [1367] getlocal 0 ............................. <tRect>
  [1369] pusharglist 4 .......................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1371] pushproplist ........................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1372] pusharglistnoret 2 ..................... <#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1374] extcall 118 ............................ executeMessage(#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect])
  [1376] pop 2
  [1378] pushint8 1 ............................. <1>
  [1380] pusharglistnoret 1 ..................... <1>
  [1382] extcall 89 ............................. return 1
  [1384] getlocal 5 ............................. <tValidKeys>
  [1386] pushcons 0 ............................. <EMPTY>
  [1388] eq ..................................... <tValidKeys = EMPTY>
  [1389] jmpifz [1402] .......................... if tValidKeys = EMPTY then / else
  [1392] pop 2
  [1394] pushzero ............................... <0>
  [1395] pusharglistnoret 1 ..................... <0>
  [1397] extcall 89 ............................. return 0
  [1399] jmp [1436]
  [1402] pushsymb 379 ........................... <#helptooltip>
  [1405] pushsymb 120 ........................... <#msg>
  [1407] pushcons 28 ............................ <"reg_use_allowed_chars">
  [1409] pusharglist 1 .......................... <"reg_use_allowed_chars">
  [1411] extcall 74 ............................. <getText("reg_use_allowed_chars")>
  [1413] getlocal 5 ............................. <tValidKeys>
  [1415] joinpadstr ............................. <getText("reg_use_allowed_chars") && tValidKeys>
  [1416] pushsymb 380 ........................... <#pos>
  [1419] getlocal 0 ............................. <tRect>
  [1421] pusharglist 4 .......................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1423] pushproplist ........................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1424] pusharglistnoret 2 ..................... <#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1426] extcall 118 ............................ executeMessage(#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect])
  [1428] pop 2
  [1430] pushint8 1 ............................. <1>
  [1432] pusharglistnoret 1 ..................... <1>
  [1434] extcall 89 ............................. return 1
  [1436] pop 1 .................................. end case
  [1438] jmp [1448]
  [1441] pop 1
  [1443] pushzero ............................... <0>
  [1444] pusharglistnoret 1 ..................... <0>
  [1446] extcall 89 ............................. return 0
  [1448] jmp [2214]
  [1451] peek 0
  [1453] pushcons 181 ........................... <"char_pw_field">
  [1455] nteq
  [1456] jmpifz [1467] .......................... (case) "char_pw_field", ...
  [1459] peek 0
  [1461] pushcons 182 ........................... <"char_pwagain_field">
  [1463] eq
  [1464] jmpifz [1923] .......................... (case) ..., "char_pwagain_field":
  [1467] pushcons 8 ............................. <"permitted.password.chars">
  [1469] pusharglist 1 .......................... <"permitted.password.chars">
  [1471] extcall 88 ............................. <getVariable("permitted.password.chars")>
  [1473] setlocal 5 ............................. tValidKeys = getVariable("permitted.password.chars")
  [1475] getprop 173 ............................ <pNameChecked>
  [1477] pushzero ............................... <0>
  [1478] eq ..................................... <pNameChecked = 0>
  [1479] jmpifz [1500] .......................... if pNameChecked = 0 then
  [1482] getparam 0 ............................. <me>
  [1484] pusharglist 1 .......................... <me>
  [1486] objcall 46 ............................. <me.checkName()>
  [1488] not .................................... <not me.checkName()>
  [1489] jmpifz [1500] .......................... if not me.checkName() then
  [1492] pop 1
  [1494] pushint8 1 ............................. <1>
  [1496] pusharglistnoret 1 ..................... <1>
  [1498] extcall 89 ............................. return 1
  [1500] getprop 69 ............................. <pTempPassword>
  [1502] getparam 2 ............................. <tSprID>
  [1504] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1506] objcall 105 ............................ <pTempPassword[tSprID]>
  [1508] pusharglist 1 .......................... <pTempPassword[tSprID]>
  [1510] extcall 100 ............................ <voidp(pTempPassword[tSprID])>
  [1512] jmpifz [1525] .......................... if voidp(pTempPassword[tSprID]) then
  [1515] getprop 69 ............................. <pTempPassword>
  [1517] getparam 2 ............................. <tSprID>
  [1519] pushcons 0 ............................. <EMPTY>
  [1521] pusharglistnoret 3 ..................... <pTempPassword, tSprID, EMPTY>
  [1523] objcall 174 ............................ pTempPassword[tSprID] = EMPTY
  [1525] pusharglist 0 .......................... <>
  [1527] thebuiltin 378 ......................... <the keyCode>
  [1530] peek 0 ................................. case the keyCode of
  [1532] pushint8 36 ............................ <36>
  [1534] eq
  [1535] jmpifz [1549] .......................... (case) 36:
  [1538] pop 2
  [1540] pushint8 1 ............................. <1>
  [1542] pusharglistnoret 1 ..................... <1>
  [1544] extcall 89 ............................. return 1
  [1546] jmp [1873]
  [1549] peek 0
  [1551] pushint8 48 ............................ <48>
  [1553] eq
  [1554] jmpifz [1567] .......................... (case) 48:
  [1557] pop 2
  [1559] pushzero ............................... <0>
  [1560] pusharglistnoret 1 ..................... <0>
  [1562] extcall 89 ............................. return 0
  [1564] jmp [1873]
  [1567] peek 0
  [1569] pushint8 49 ............................ <49>
  [1571] eq
  [1572] jmpifz [1621] .......................... (case) 49:
  [1575] getlocal 5 ............................. <tValidKeys>
  [1577] getobjprop 214 ......................... <tValidKeys.length>
  [1579] pushzero ............................... <0>
  [1580] gt ..................................... <tValidKeys.length > 0>
  [1581] jmpifz [1610] .......................... if tValidKeys.length > 0 then
  [1584] pushsymb 379 ........................... <#helptooltip>
  [1587] pushsymb 120 ........................... <#msg>
  [1589] pushcons 28 ............................ <"reg_use_allowed_chars">
  [1591] pusharglist 1 .......................... <"reg_use_allowed_chars">
  [1593] extcall 74 ............................. <getText("reg_use_allowed_chars")>
  [1595] getlocal 5 ............................. <tValidKeys>
  [1597] joinpadstr ............................. <getText("reg_use_allowed_chars") && tValidKeys>
  [1598] pushsymb 380 ........................... <#pos>
  [1601] getlocal 0 ............................. <tRect>
  [1603] pusharglist 4 .......................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1605] pushproplist ........................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1606] pusharglistnoret 2 ..................... <#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1608] extcall 118 ............................ executeMessage(#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect])
  [1610] pop 2
  [1612] pushint8 1 ............................. <1>
  [1614] pusharglistnoret 1 ..................... <1>
  [1616] extcall 89 ............................. return 1
  [1618] jmp [1873]
  [1621] peek 0
  [1623] pushint8 123 ........................... <123>
  [1625] nteq
  [1626] jmpifz [1653] .......................... (case) 123, ...
  [1629] peek 0
  [1631] pushint8 124 ........................... <124>
  [1633] nteq
  [1634] jmpifz [1653] .......................... (case) ..., 124, ...
  [1637] peek 0
  [1639] pushint8 125 ........................... <125>
  [1641] nteq
  [1642] jmpifz [1653] .......................... (case) ..., 125, ...
  [1645] peek 0
  [1647] pushint8 126 ........................... <126>
  [1649] eq
  [1650] jmpifz [1664] .......................... (case) ..., 126:
  [1653] pop 2
  [1655] pushint8 1 ............................. <1>
  [1657] pusharglistnoret 1 ..................... <1>
  [1659] extcall 89 ............................. return 1
  [1661] jmp [1873]
  [1664] peek 0
  [1666] pushint8 51 ............................ <51>
  [1668] eq
  [1669] jmpifz [1723] .......................... (case) 51:
  [1672] getprop 69 ............................. <pTempPassword>
  [1674] getparam 2 ............................. <tSprID>
  [1676] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1678] objcall 105 ............................ <pTempPassword[tSprID]>
  [1680] getobjprop 214 ......................... <pTempPassword[tSprID].length>
  [1682] pushzero ............................... <0>
  [1683] gt ..................................... <pTempPassword[tSprID].length > 0>
  [1684] jmpifz [1720] .......................... if pTempPassword[tSprID].length > 0 then
  [1687] getprop 69 ............................. <pTempPassword>
  [1689] getparam 2 ............................. <tSprID>
  [1691] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1693] objcall 105 ............................ <pTempPassword[tSprID]>
  [1695] setlocal 7 ............................. tTempPass = pTempPassword[tSprID]
  [1697] getprop 69 ............................. <pTempPassword>
  [1699] getparam 2 ............................. <tSprID>
  [1701] getlocal 7 ............................. <tTempPass>
  [1703] pushint8 1 ............................. <1>
  [1705] getlocal 7 ............................. <tTempPass>
  [1707] getobjprop 214 ......................... <tTempPass.length>
  [1709] pushint8 1 ............................. <1>
  [1711] sub .................................... <tTempPass.length - 1>
  [1712] pusharglist 3 .......................... <tTempPass, 1, tTempPass.length - 1>
  [1714] extcall 213 ............................ <chars(tTempPass, 1, tTempPass.length - 1)>
  [1716] pusharglistnoret 3 ..................... <pTempPassword, tSprID, chars(tTempPass, 1, tTempPass.length - 1)>
  [1718] objcall 174 ............................ pTempPassword[tSprID] = chars(tTempPass, 1, tTempPass.length - 1)
  [1720] jmp [1873]
  [1723] peek 0
  [1725] pushint8 117 ........................... <117>
  [1727] eq
  [1728] jmpifz [1762] .......................... (case) 117:
  [1731] getparam 4 ............................. <tWndID>
  [1733] pusharglist 1 .......................... <tWndID>
  [1735] extcall 130 ............................ <getWindow(tWndID)>
  [1737] getparam 2 ............................. <tSprID>
  [1739] pusharglist 2 .......................... <getWindow(tWndID), tSprID>
  [1741] objcall 133 ............................ <getWindow(tWndID).getElement(tSprID)>
  [1743] pushcons 0 ............................. <EMPTY>
  [1745] pusharglistnoret 2 ..................... <getWindow(tWndID).getElement(tSprID), EMPTY>
  [1747] objcall 134 ............................ getWindow(tWndID).getElement(tSprID).setText(EMPTY)
  [1749] getprop 69 ............................. <pTempPassword>
  [1751] getparam 2 ............................. <tSprID>
  [1753] pushcons 0 ............................. <EMPTY>
  [1755] pusharglistnoret 3 ..................... <pTempPassword, tSprID, EMPTY>
  [1757] objcall 174 ............................ pTempPassword[tSprID] = EMPTY
  [1759] jmp [1873] ............................. (case) otherwise:
  [1762] pushcons 8 ............................. <"permitted.password.chars">
  [1764] pusharglist 1 .......................... <"permitted.password.chars">
  [1766] extcall 88 ............................. <getVariable("permitted.password.chars")>
  [1768] setlocal 5 ............................. tValidKeys = getVariable("permitted.password.chars")
  [1770] pusharglist 0 .......................... <>
  [1772] thebuiltin 377 ......................... <the key>
  [1775] setlocal 8 ............................. tTheKey = the key
  [1777] getlocal 5 ............................. <tValidKeys>
  [1779] pushcons 0 ............................. <EMPTY>
  [1781] eq ..................................... <tValidKeys = EMPTY>
  [1782] not .................................... <not (tValidKeys = EMPTY)>
  [1783] jmpifz [1873] .......................... if not (tValidKeys = EMPTY) then
  [1786] getlocal 5 ............................. <tValidKeys>
  [1788] getlocal 8 ............................. <tTheKey>
  [1790] containsstr ............................ <tValidKeys contains tTheKey>
  [1791] not .................................... <not (tValidKeys contains tTheKey)>
  [1792] jmpifz [1829] .......................... if not (tValidKeys contains tTheKey) then
  [1795] pushsymb 379 ........................... <#helptooltip>
  [1798] pushsymb 120 ........................... <#msg>
  [1800] pushcons 28 ............................ <"reg_use_allowed_chars">
  [1802] pusharglist 1 .......................... <"reg_use_allowed_chars">
  [1804] extcall 74 ............................. <getText("reg_use_allowed_chars")>
  [1806] getlocal 5 ............................. <tValidKeys>
  [1808] joinpadstr ............................. <getText("reg_use_allowed_chars") && tValidKeys>
  [1809] pushsymb 380 ........................... <#pos>
  [1812] getlocal 0 ............................. <tRect>
  [1814] pusharglist 4 .......................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1816] pushproplist ........................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1817] pusharglistnoret 2 ..................... <#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [1819] extcall 118 ............................ executeMessage(#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect])
  [1821] pop 2
  [1823] pushint8 1 ............................. <1>
  [1825] pusharglistnoret 1 ..................... <1>
  [1827] extcall 89 ............................. return 1
  [1829] getprop 69 ............................. <pTempPassword>
  [1831] getparam 2 ............................. <tSprID>
  [1833] pusharglist 2 .......................... <pTempPassword, tSprID>
  [1835] objcall 105 ............................ <pTempPassword[tSprID]>
  [1837] getobjprop 214 ......................... <pTempPassword[tSprID].length>
  [1839] pushint8 32 ............................ <32>
  [1841] gt ..................................... <pTempPassword[tSprID].length > 32>
  [1842] jmpifz [1873] .......................... if pTempPassword[tSprID].length > 32 then
  [1845] pushsymb 379 ........................... <#helptooltip>
  [1848] pushsymb 120 ........................... <#msg>
  [1850] pushcons 257 ........................... <"alert_shortenPW">
  [1853] pushsymb 380 ........................... <#pos>
  [1856] getlocal 0 ............................. <tRect>
  [1858] pusharglist 4 .......................... <[#msg: "alert_shortenPW", #pos: tRect]>
  [1860] pushproplist ........................... <[#msg: "alert_shortenPW", #pos: tRect]>
  [1861] pusharglistnoret 2 ..................... <#helptooltip, [#msg: "alert_shortenPW", #pos: tRect]>
  [1863] extcall 118 ............................ executeMessage(#helptooltip, [#msg: "alert_shortenPW", #pos: tRect])
  [1865] pop 2
  [1867] pushint8 1 ............................. <1>
  [1869] pusharglistnoret 1 ..................... <1>
  [1871] extcall 89 ............................. return 1
  [1873] pop 1 .................................. end case
  [1875] pushzero ............................... <0>
  [1876] setprop 82 ............................. pPasswordChecked = 0
  [1878] pushcons 258 ........................... <"asteriskUpdate">
  [1881] getmovieprop 381 ....................... <the milliSeconds>
  [1884] joinstr ................................ <"asteriskUpdate" & the milliSeconds>
  [1885] setlocal 9 ............................. tTimeoutHideName = "asteriskUpdate" & the milliSeconds
  [1887] getlocal 9 ............................. <tTimeoutHideName>
  [1889] pushint8 1 ............................. <1>
  [1891] pushsymb 66 ............................ <#updatePasswordAsterisks>
  [1893] getparam 0 ............................. <me>
  [1895] pusharglist 1 .......................... <me>
  [1897] objcall 162 ............................ <me.getID()>
  [1899] getparam 4 ............................. <tWndID>
  [1901] getparam 2 ............................. <tSprID>
  [1903] pusharglist 2 .......................... <[tWndID, tSprID]>
  [1905] pushlist ............................... <[tWndID, tSprID]>
  [1906] pushint8 1 ............................. <1>
  [1908] pusharglistnoret 6 ..................... <tTimeoutHideName, 1, #updatePasswordAsterisks, me.getID(), [tWndID, tSprID], 1>
  [1910] extcall 360 ............................ createTimeout(tTimeoutHideName, 1, #updatePasswordAsterisks, me.getID(), [tWndID, tSprID], 1)
  [1913] pop 1
  [1915] pushzero ............................... <0>
  [1916] pusharglistnoret 1 ..................... <0>
  [1918] extcall 89 ............................. return 0
  [1920] jmp [2214]
  [1923] peek 0
  [1925] pushcons 102 ........................... <"char_email_field">
  [1927] eq
  [1928] jmpifz [1941] .......................... (case) "char_email_field":
  [1931] pop 1
  [1933] pushzero ............................... <0>
  [1934] pusharglistnoret 1 ..................... <0>
  [1936] extcall 89 ............................. return 0
  [1938] jmp [2214]
  [1941] peek 0
  [1943] pushcons 103 ........................... <"char_dd_field">
  [1945] eq
  [1946] jmpifz [2079] .......................... (case) "char_dd_field":
  [1949] pusharglist 0 .......................... <>
  [1951] thebuiltin 378 ......................... <the keyCode>
  [1954] peek 0 ................................. case the keyCode of
  [1956] pushint8 48 ............................ <48>
  [1958] eq
  [1959] jmpifz [1972] .......................... (case) 48:
  [1962] pop 2
  [1964] pushzero ............................... <0>
  [1965] pusharglistnoret 1 ..................... <0>
  [1967] extcall 89 ............................. return 0
  [1969] jmp [2074]
  [1972] peek 0
  [1974] pushint8 51 ............................ <51>
  [1976] eq
  [1977] jmpifz [1990] .......................... (case) 51:
  [1980] pop 2
  [1982] pushzero ............................... <0>
  [1983] pusharglistnoret 1 ..................... <0>
  [1985] extcall 89 ............................. return 0
  [1987] jmp [2074]
  [1990] peek 0
  [1992] pushint8 117 ........................... <117>
  [1994] eq
  [1995] jmpifz [2008] .......................... (case) 117:
  [1998] pop 2
  [2000] pushzero ............................... <0>
  [2001] pusharglistnoret 1 ..................... <0>
  [2003] extcall 89 ............................. return 0
  [2005] jmp [2074] ............................. (case) otherwise:
  [2008] getparam 4 ............................. <tWndID>
  [2010] pusharglist 1 .......................... <tWndID>
  [2012] extcall 130 ............................ <getWindow(tWndID)>
  [2014] getparam 2 ............................. <tSprID>
  [2016] pusharglist 2 .......................... <getWindow(tWndID), tSprID>
  [2018] objcall 133 ............................ <getWindow(tWndID).getElement(tSprID)>
  [2020] pusharglist 1 .......................... <getWindow(tWndID).getElement(tSprID)>
  [2022] objcall 74 ............................. <getWindow(tWndID).getElement(tSprID).getText()>
  [2024] getobjprop 214 ......................... <getWindow(tWndID).getElement(tSprID).getText().length>
  [2026] pushint8 2 ............................. <2>
  [2028] gteq ................................... <getWindow(tWndID).getElement(tSprID).getText().length >= 2>
  [2029] jmpifz [2040] .......................... if getWindow(tWndID).getElement(tSprID).getText().length >= 2 then
  [2032] pop 2
  [2034] pushint8 1 ............................. <1>
  [2036] pusharglistnoret 1 ..................... <1>
  [2038] extcall 89 ............................. return 1
  [2040] pusharglist 0 .......................... <>
  [2042] thebuiltin 377 ......................... <the key>
  [2045] pusharglist 1 .......................... <the key>
  [2047] extcall 376 ............................ <charToNum(the key)>
  [2050] setlocal 10 ............................ tASCII = charToNum(the key)
  [2052] getlocal 10 ............................ <tASCII>
  [2054] pushint8 48 ............................ <48>
  [2056] lt ..................................... <tASCII < 48>
  [2057] getlocal 10 ............................ <tASCII>
  [2059] pushint8 57 ............................ <57>
  [2061] gt ..................................... <tASCII > 57>
  [2062] or ..................................... <(tASCII < 48) or (tASCII > 57)>
  [2063] jmpifz [2074] .......................... if (tASCII < 48) or (tASCII > 57) then
  [2066] pop 2
  [2068] pushint8 1 ............................. <1>
  [2070] pusharglistnoret 1 ..................... <1>
  [2072] extcall 89 ............................. return 1
  [2074] pop 1 .................................. end case
  [2076] jmp [2214]
  [2079] peek 0
  [2081] pushcons 104 ........................... <"char_yyyy_field">
  [2083] eq
  [2084] jmpifz [2214] .......................... (case) "char_yyyy_field":
  [2087] pusharglist 0 .......................... <>
  [2089] thebuiltin 378 ......................... <the keyCode>
  [2092] peek 0 ................................. case the keyCode of
  [2094] pushint8 48 ............................ <48>
  [2096] eq
  [2097] jmpifz [2110] .......................... (case) 48:
  [2100] pop 2
  [2102] pushzero ............................... <0>
  [2103] pusharglistnoret 1 ..................... <0>
  [2105] extcall 89 ............................. return 0
  [2107] jmp [2212]
  [2110] peek 0
  [2112] pushint8 51 ............................ <51>
  [2114] eq
  [2115] jmpifz [2128] .......................... (case) 51:
  [2118] pop 2
  [2120] pushzero ............................... <0>
  [2121] pusharglistnoret 1 ..................... <0>
  [2123] extcall 89 ............................. return 0
  [2125] jmp [2212]
  [2128] peek 0
  [2130] pushint8 117 ........................... <117>
  [2132] eq
  [2133] jmpifz [2146] .......................... (case) 117:
  [2136] pop 2
  [2138] pushzero ............................... <0>
  [2139] pusharglistnoret 1 ..................... <0>
  [2141] extcall 89 ............................. return 0
  [2143] jmp [2212] ............................. (case) otherwise:
  [2146] getparam 4 ............................. <tWndID>
  [2148] pusharglist 1 .......................... <tWndID>
  [2150] extcall 130 ............................ <getWindow(tWndID)>
  [2152] getparam 2 ............................. <tSprID>
  [2154] pusharglist 2 .......................... <getWindow(tWndID), tSprID>
  [2156] objcall 133 ............................ <getWindow(tWndID).getElement(tSprID)>
  [2158] pusharglist 1 .......................... <getWindow(tWndID).getElement(tSprID)>
  [2160] objcall 74 ............................. <getWindow(tWndID).getElement(tSprID).getText()>
  [2162] getobjprop 214 ......................... <getWindow(tWndID).getElement(tSprID).getText().length>
  [2164] pushint8 4 ............................. <4>
  [2166] gteq ................................... <getWindow(tWndID).getElement(tSprID).getText().length >= 4>
  [2167] jmpifz [2178] .......................... if getWindow(tWndID).getElement(tSprID).getText().length >= 4 then
  [2170] pop 2
  [2172] pushint8 1 ............................. <1>
  [2174] pusharglistnoret 1 ..................... <1>
  [2176] extcall 89 ............................. return 1
  [2178] pusharglist 0 .......................... <>
  [2180] thebuiltin 377 ......................... <the key>
  [2183] pusharglist 1 .......................... <the key>
  [2185] extcall 376 ............................ <charToNum(the key)>
  [2188] setlocal 10 ............................ tASCII = charToNum(the key)
  [2190] getlocal 10 ............................ <tASCII>
  [2192] pushint8 48 ............................ <48>
  [2194] lt ..................................... <tASCII < 48>
  [2195] getlocal 10 ............................ <tASCII>
  [2197] pushint8 57 ............................ <57>
  [2199] gt ..................................... <tASCII > 57>
  [2200] or ..................................... <(tASCII < 48) or (tASCII > 57)>
  [2201] jmpifz [2212] .......................... if (tASCII < 48) or (tASCII > 57) then
  [2204] pop 2
  [2206] pushint8 1 ............................. <1>
  [2208] pusharglistnoret 1 ..................... <1>
  [2210] extcall 89 ............................. return 1
  [2212] pop 1 .................................. end case
  [2214] pop 1 .................................. end case
  [2216] ret
end

on eventProcVerifyWindow me, tEvent, tSprID, tParm, tWndID
  [  0] getparam 4 .............................. <tWndID>
  [  2] pusharglist 1 ........................... <tWndID>
  [  4] extcall 130 ............................. <getWindow(tWndID)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(tWndID)
  [  8] getlocal 0 .............................. <tWndObj>
  [ 10] not ..................................... <not tWndObj>
  [ 11] jmpifz [ 19] ............................ if not tWndObj then
  [ 14] pushzero ................................ <0>
  [ 15] pusharglistnoret 1 ...................... <0>
  [ 17] extcall 89 .............................. return 0
  [ 19] getprop 69 .............................. <pTempPassword>
  [ 21] getparam 2 .............................. <tSprID>
  [ 23] pusharglist 2 ........................... <pTempPassword, tSprID>
  [ 25] objcall 105 ............................. <pTempPassword[tSprID]>
  [ 27] pusharglist 1 ........................... <pTempPassword[tSprID]>
  [ 29] extcall 100 ............................. <voidp(pTempPassword[tSprID])>
  [ 31] jmpifz [ 44] ............................ if voidp(pTempPassword[tSprID]) then
  [ 34] getprop 69 .............................. <pTempPassword>
  [ 36] getparam 2 .............................. <tSprID>
  [ 38] pushcons 0 .............................. <EMPTY>
  [ 40] pusharglistnoret 3 ...................... <pTempPassword, tSprID, EMPTY>
  [ 42] objcall 174 ............................. pTempPassword[tSprID] = EMPTY
  [ 44] getparam 4 .............................. <tWndID>
  [ 46] pusharglist 1 ........................... <tWndID>
  [ 48] extcall 130 ............................. <getWindow(tWndID)>
  [ 50] getparam 2 .............................. <tSprID>
  [ 52] pusharglist 2 ........................... <getWindow(tWndID), tSprID>
  [ 54] objcall 133 ............................. <getWindow(tWndID).getElement(tSprID)>
  [ 56] pushsymb 258 ............................ <#rect>
  [ 59] pusharglist 2 ........................... <getWindow(tWndID).getElement(tSprID), #rect>
  [ 61] objcall 170 ............................. <getWindow(tWndID).getElement(tSprID).getProperty(#rect)>
  [ 63] setlocal 1 .............................. tRect = getWindow(tWndID).getElement(tSprID).getProperty(#rect)
  [ 65] getparam 1 .............................. <tEvent>
  [ 67] pushsymb 164 ............................ <#keyDown>
  [ 69] eq ...................................... <tEvent = #keyDown>
  [ 70] jmpifz [571] ............................ if tEvent = #keyDown then / else
  [ 73] pusharglist 0 ........................... <>
  [ 75] thebuiltin 378 .......................... <the keyCode>
  [ 78] peek 0 .................................. case the keyCode of
  [ 80] pushint8 36 ............................. <36>
  [ 82] eq
  [ 83] jmpifz [ 97] ............................ (case) 36:
  [ 86] pop 1
  [ 88] pushint8 1 .............................. <1>
  [ 90] pusharglistnoret 1 ...................... <1>
  [ 92] extcall 89 .............................. return 1
  [ 94] jmp [566]
  [ 97] peek 0
  [ 99] pushint8 48 ............................. <48>
  [101] eq
  [102] jmpifz [115] ............................ (case) 48:
  [105] pop 1
  [107] pushzero ................................ <0>
  [108] pusharglistnoret 1 ...................... <0>
  [110] extcall 89 .............................. return 0
  [112] jmp [566]
  [115] peek 0
  [117] pushint8 49 ............................. <49>
  [119] eq
  [120] jmpifz [134] ............................ (case) 49:
  [123] pop 1
  [125] pushint8 1 .............................. <1>
  [127] pusharglistnoret 1 ...................... <1>
  [129] extcall 89 .............................. return 1
  [131] jmp [566]
  [134] peek 0
  [136] pushint8 51 ............................. <51>
  [138] eq
  [139] jmpifz [193] ............................ (case) 51:
  [142] getprop 69 .............................. <pTempPassword>
  [144] getparam 2 .............................. <tSprID>
  [146] pusharglist 2 ........................... <pTempPassword, tSprID>
  [148] objcall 105 ............................. <pTempPassword[tSprID]>
  [150] getobjprop 214 .......................... <pTempPassword[tSprID].length>
  [152] pushzero ................................ <0>
  [153] gt ...................................... <pTempPassword[tSprID].length > 0>
  [154] jmpifz [190] ............................ if pTempPassword[tSprID].length > 0 then
  [157] getprop 69 .............................. <pTempPassword>
  [159] getparam 2 .............................. <tSprID>
  [161] pusharglist 2 ........................... <pTempPassword, tSprID>
  [163] objcall 105 ............................. <pTempPassword[tSprID]>
  [165] setlocal 2 .............................. tTempPass = pTempPassword[tSprID]
  [167] getprop 69 .............................. <pTempPassword>
  [169] getparam 2 .............................. <tSprID>
  [171] getlocal 2 .............................. <tTempPass>
  [173] pushint8 1 .............................. <1>
  [175] getlocal 2 .............................. <tTempPass>
  [177] getobjprop 214 .......................... <tTempPass.length>
  [179] pushint8 1 .............................. <1>
  [181] sub ..................................... <tTempPass.length - 1>
  [182] pusharglist 3 ........................... <tTempPass, 1, tTempPass.length - 1>
  [184] extcall 213 ............................. <chars(tTempPass, 1, tTempPass.length - 1)>
  [186] pusharglistnoret 3 ...................... <pTempPassword, tSprID, chars(tTempPass, 1, tTempPass.length - 1)>
  [188] objcall 174 ............................. pTempPassword[tSprID] = chars(tTempPass, 1, tTempPass.length - 1)
  [190] jmp [566]
  [193] peek 0
  [195] pushint8 117 ............................ <117>
  [197] eq
  [198] jmpifz [214] ............................ (case) 117:
  [201] getprop 69 .............................. <pTempPassword>
  [203] getparam 2 .............................. <tSprID>
  [205] pushcons 0 .............................. <EMPTY>
  [207] pusharglistnoret 3 ...................... <pTempPassword, tSprID, EMPTY>
  [209] objcall 174 ............................. pTempPassword[tSprID] = EMPTY
  [211] jmp [566] ............................... (case) otherwise:
  [214] pushcons 259 ............................ <"char_currpwd_field">
  [217] pushcons 260 ............................ <"char_newpwd1_field">
  [220] pushcons 261 ............................ <"char_newpwd2_field">
  [223] pusharglist 3 ........................... <"char_currpwd_field", "char_newpwd1_field", "char_newpwd2_field">
  [225] extcall 103 ............................. <list("char_currpwd_field", "char_newpwd1_field", "char_newpwd2_field")>
  [227] setlocal 3 .............................. tPasswordFields = list("char_currpwd_field", "char_newpwd1_field", "char_newpwd2_field")
  [229] pushcons 103 ............................ <"char_dd_field">
  [231] pushcons 104 ............................ <"char_yyyy_field">
  [233] pusharglist 2 ........................... <"char_dd_field", "char_yyyy_field">
  [235] extcall 103 ............................. <list("char_dd_field", "char_yyyy_field")>
  [237] setlocal 4 .............................. tDOBFields = list("char_dd_field", "char_yyyy_field")
  [239] pusharglist 0 ........................... <>
  [241] thebuiltin 377 .......................... <the key>
  [244] setlocal 5 .............................. tTheKey = the key
  [246] getlocal 5 .............................. <tTheKey>
  [248] pusharglist 1 ........................... <tTheKey>
  [250] extcall 376 ............................. <charToNum(tTheKey)>
  [253] setlocal 6 .............................. tASCII = charToNum(tTheKey)
  [255] getlocal 3 .............................. <tPasswordFields>
  [257] getparam 2 .............................. <tSprID>
  [259] pusharglist 2 ........................... <tPasswordFields, tSprID>
  [261] objcall 303 ............................. <tPasswordFields.getPos(tSprID)>
  [264] pushzero ................................ <0>
  [265] gt ...................................... <tPasswordFields.getPos(tSprID) > 0>
  [266] jmpifz [456] ............................ if tPasswordFields.getPos(tSprID) > 0 then / else
  [269] pusharglist 0 ........................... <>
  [271] thebuiltin 378 .......................... <the keyCode>
  [274] pushint8 122 ............................ <122>
  [276] gt ...................................... <the keyCode > 122>
  [277] pusharglist 0 ........................... <>
  [279] thebuiltin 378 .......................... <the keyCode>
  [282] pushint8 127 ............................ <127>
  [284] lt ...................................... <the keyCode < 127>
  [285] and ..................................... <(the keyCode > 122) and (the keyCode < 127)>
  [286] jmpifz [297] ............................ if (the keyCode > 122) and (the keyCode < 127) then
  [289] pop 1
  [291] pushint8 1 .............................. <1>
  [293] pusharglistnoret 1 ...................... <1>
  [295] extcall 89 .............................. return 1
  [297] pushcons 8 .............................. <"permitted.password.chars">
  [299] pusharglist 1 ........................... <"permitted.password.chars">
  [301] extcall 88 .............................. <getVariable("permitted.password.chars")>
  [303] setlocal 7 .............................. tValidKeys = getVariable("permitted.password.chars")
  [305] pusharglist 0 ........................... <>
  [307] thebuiltin 377 .......................... <the key>
  [310] setlocal 5 .............................. tTheKey = the key
  [312] getlocal 7 .............................. <tValidKeys>
  [314] pushcons 0 .............................. <EMPTY>
  [316] eq ...................................... <tValidKeys = EMPTY>
  [317] not ..................................... <not (tValidKeys = EMPTY)>
  [318] jmpifz [408] ............................ if not (tValidKeys = EMPTY) then
  [321] getlocal 7 .............................. <tValidKeys>
  [323] getlocal 5 .............................. <tTheKey>
  [325] containsstr ............................. <tValidKeys contains tTheKey>
  [326] not ..................................... <not (tValidKeys contains tTheKey)>
  [327] jmpifz [364] ............................ if not (tValidKeys contains tTheKey) then
  [330] pushsymb 379 ............................ <#helptooltip>
  [333] pushsymb 120 ............................ <#msg>
  [335] pushcons 28 ............................. <"reg_use_allowed_chars">
  [337] pusharglist 1 ........................... <"reg_use_allowed_chars">
  [339] extcall 74 .............................. <getText("reg_use_allowed_chars")>
  [341] getlocal 7 .............................. <tValidKeys>
  [343] joinpadstr .............................. <getText("reg_use_allowed_chars") && tValidKeys>
  [344] pushsymb 380 ............................ <#pos>
  [347] getlocal 1 .............................. <tRect>
  [349] pusharglist 4 ........................... <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [351] pushproplist ............................ <[#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [352] pusharglistnoret 2 ...................... <#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect]>
  [354] extcall 118 ............................. executeMessage(#helptooltip, [#msg: getText("reg_use_allowed_chars") && tValidKeys, #pos: tRect])
  [356] pop 1
  [358] pushint8 1 .............................. <1>
  [360] pusharglistnoret 1 ...................... <1>
  [362] extcall 89 .............................. return 1
  [364] getprop 69 .............................. <pTempPassword>
  [366] getparam 2 .............................. <tSprID>
  [368] pusharglist 2 ........................... <pTempPassword, tSprID>
  [370] objcall 105 ............................. <pTempPassword[tSprID]>
  [372] getobjprop 214 .......................... <pTempPassword[tSprID].length>
  [374] pushint8 32 ............................. <32>
  [376] gt ...................................... <pTempPassword[tSprID].length > 32>
  [377] jmpifz [408] ............................ if pTempPassword[tSprID].length > 32 then
  [380] pushsymb 379 ............................ <#helptooltip>
  [383] pushsymb 120 ............................ <#msg>
  [385] pushcons 257 ............................ <"alert_shortenPW">
  [388] pushsymb 380 ............................ <#pos>
  [391] getlocal 1 .............................. <tRect>
  [393] pusharglist 4 ........................... <[#msg: "alert_shortenPW", #pos: tRect]>
  [395] pushproplist ............................ <[#msg: "alert_shortenPW", #pos: tRect]>
  [396] pusharglistnoret 2 ...................... <#helptooltip, [#msg: "alert_shortenPW", #pos: tRect]>
  [398] extcall 118 ............................. executeMessage(#helptooltip, [#msg: "alert_shortenPW", #pos: tRect])
  [400] pop 1
  [402] pushint8 1 .............................. <1>
  [404] pusharglistnoret 1 ...................... <1>
  [406] extcall 89 .............................. return 1
  [408] pushzero ................................ <0>
  [409] setprop 82 .............................. pPasswordChecked = 0
  [411] pushcons 258 ............................ <"asteriskUpdate">
  [414] getmovieprop 381 ........................ <the milliSeconds>
  [417] joinstr ................................. <"asteriskUpdate" & the milliSeconds>
  [418] setlocal 8 .............................. tTimeoutHideName = "asteriskUpdate" & the milliSeconds
  [420] getlocal 8 .............................. <tTimeoutHideName>
  [422] pushint8 1 .............................. <1>
  [424] pushsymb 66 ............................. <#updatePasswordAsterisks>
  [426] getparam 0 .............................. <me>
  [428] pusharglist 1 ........................... <me>
  [430] objcall 162 ............................. <me.getID()>
  [432] getparam 4 .............................. <tWndID>
  [434] getparam 2 .............................. <tSprID>
  [436] pusharglist 2 ........................... <[tWndID, tSprID]>
  [438] pushlist ................................ <[tWndID, tSprID]>
  [439] pushint8 1 .............................. <1>
  [441] pusharglistnoret 6 ...................... <tTimeoutHideName, 1, #updatePasswordAsterisks, me.getID(), [tWndID, tSprID], 1>
  [443] extcall 360 ............................. createTimeout(tTimeoutHideName, 1, #updatePasswordAsterisks, me.getID(), [tWndID, tSprID], 1)
  [446] pop 1
  [448] pushzero ................................ <0>
  [449] pusharglistnoret 1 ...................... <0>
  [451] extcall 89 .............................. return 0
  [453] jmp [566]
  [456] getlocal 4 .............................. <tDOBFields>
  [458] getparam 2 .............................. <tSprID>
  [460] pusharglist 2 ........................... <tDOBFields, tSprID>
  [462] objcall 303 ............................. <tDOBFields.getPos(tSprID)>
  [465] pushzero ................................ <0>
  [466] gt ...................................... <tDOBFields.getPos(tSprID) > 0>
  [467] jmpifz [566] ............................ if tDOBFields.getPos(tSprID) > 0 then
  [470] getlocal 6 .............................. <tASCII>
  [472] pushint8 48 ............................. <48>
  [474] lt ...................................... <tASCII < 48>
  [475] getlocal 6 .............................. <tASCII>
  [477] pushint8 57 ............................. <57>
  [479] gt ...................................... <tASCII > 57>
  [480] or ...................................... <(tASCII < 48) or (tASCII > 57)>
  [481] jmpifz [495] ............................ if (tASCII < 48) or (tASCII > 57) then / else
  [484] pop 1
  [486] pushint8 1 .............................. <1>
  [488] pusharglistnoret 1 ...................... <1>
  [490] extcall 89 .............................. return 1
  [492] jmp [566]
  [495] getparam 2 .............................. <tSprID>
  [497] pushcons 103 ............................ <"char_dd_field">
  [499] eq ...................................... <tSprID = "char_dd_field">
  [500] getlocal 0 .............................. <tWndObj>
  [502] pushcons 103 ............................ <"char_dd_field">
  [504] pusharglist 2 ........................... <tWndObj, "char_dd_field">
  [506] objcall 133 ............................. <tWndObj.getElement("char_dd_field")>
  [508] pusharglist 1 ........................... <tWndObj.getElement("char_dd_field")>
  [510] objcall 74 .............................. <tWndObj.getElement("char_dd_field").getText()>
  [512] getobjprop 214 .......................... <tWndObj.getElement("char_dd_field").getText().length>
  [514] pushint8 2 .............................. <2>
  [516] gteq .................................... <tWndObj.getElement("char_dd_field").getText().length >= 2>
  [517] and ..................................... <(tSprID = "char_dd_field") and (tWndObj.getElement("char_dd_field").getText().length >= 2)>
  [518] jmpifz [532] ............................ if (tSprID = "char_dd_field") and (tWndObj.getElement("char_dd_field").getText().length >= 2) then / else
  [521] pop 1
  [523] pushint8 1 .............................. <1>
  [525] pusharglistnoret 1 ...................... <1>
  [527] extcall 89 .............................. return 1
  [529] jmp [566]
  [532] getparam 2 .............................. <tSprID>
  [534] pushcons 104 ............................ <"char_yyyy_field">
  [536] eq ...................................... <tSprID = "char_yyyy_field">
  [537] getlocal 0 .............................. <tWndObj>
  [539] pushcons 104 ............................ <"char_yyyy_field">
  [541] pusharglist 2 ........................... <tWndObj, "char_yyyy_field">
  [543] objcall 133 ............................. <tWndObj.getElement("char_yyyy_field")>
  [545] pusharglist 1 ........................... <tWndObj.getElement("char_yyyy_field")>
  [547] objcall 74 .............................. <tWndObj.getElement("char_yyyy_field").getText()>
  [549] getobjprop 214 .......................... <tWndObj.getElement("char_yyyy_field").getText().length>
  [551] pushint8 4 .............................. <4>
  [553] gteq .................................... <tWndObj.getElement("char_yyyy_field").getText().length >= 4>
  [554] and ..................................... <(tSprID = "char_yyyy_field") and (tWndObj.getElement("char_yyyy_field").getText().length >= 4)>
  [555] jmpifz [566] ............................ if (tSprID = "char_yyyy_field") and (tWndObj.getElement("char_yyyy_field").getText().length >= 4) then
  [558] pop 1
  [560] pushint8 1 .............................. <1>
  [562] pusharglistnoret 1 ...................... <1>
  [564] extcall 89 .............................. return 1
  [566] pop 1 ................................... end case
  [568] jmp [1714]
  [571] getparam 2 .............................. <tSprID>
  [573] peek 0 .................................. case tSprID of
  [575] pushcons 56 ............................. <"update_cancel_button">
  [577] nteq
  [578] jmpifz [590] ............................ (case) "update_cancel_button", ...
  [581] peek 0
  [583] pushcons 262 ............................ <"updateok_ok_button">
  [586] eq
  [587] jmpifz [610] ............................ (case) ..., "updateok_ok_button":
  [590] pusharglist 0 ........................... <[:]>
  [592] pushproplist ............................ <[:]>
  [593] setprop 69 .............................. pTempPassword = [:]
  [595] getparam 4 .............................. <tWndID>
  [597] pusharglistnoret 1 ...................... <tWndID>
  [599] extcall 94 .............................. removeWindow(tWndID)
  [601] pushzero ................................ <0>
  [602] setprop 79 .............................. pPwdEmailUpdateForced = 0
  [604] pushzero ................................ <0>
  [605] setprop 81 .............................. pUpdatingPassword = 0
  [607] jmp [1712]
  [610] peek 0
  [612] pushcons 263 ............................ <"updatepw_ok_button">
  [615] eq
  [616] jmpifz [1095] ........................... (case) "updatepw_ok_button":
  [619] pushzero ................................ <0>
  [620] setprop 82 .............................. pPasswordChecked = 0
  [622] pushint8 1 .............................. <1>
  [624] setprop 81 .............................. pUpdatingPassword = 1
  [626] pushcons 0 .............................. <EMPTY>
  [628] setprop 299 ............................. pErrorMsg = EMPTY
  [631] pusharglist 0 ........................... <[:]>
  [633] pushproplist ............................ <[:]>
  [634] setprop 83 .............................. pUpdatePropsToServer = [:]
  [636] getprop 69 .............................. <pTempPassword>
  [638] pushcons 259 ............................ <"char_currpwd_field">
  [641] pusharglist 2 ........................... <pTempPassword, "char_currpwd_field">
  [643] objcall 105 ............................. <pTempPassword["char_currpwd_field"]>
  [645] setlocal 9 .............................. tCurrPwd = pTempPassword["char_currpwd_field"]
  [647] getprop 83 .............................. <pUpdatePropsToServer>
  [649] pushsymb 127 ............................ <#currPwd>
  [651] getlocal 9 .............................. <tCurrPwd>
  [653] pusharglistnoret 3 ...................... <pUpdatePropsToServer, #currPwd, tCurrPwd>
  [655] objcall 174 ............................. pUpdatePropsToServer[#currPwd] = tCurrPwd
  [657] getlocal 9 .............................. <tCurrPwd>
  [659] pusharglist 1 ........................... <tCurrPwd>
  [661] extcall 100 ............................. <voidp(tCurrPwd)>
  [663] getlocal 9 .............................. <tCurrPwd>
  [665] getobjprop 214 .......................... <tCurrPwd.length>
  [667] pushint8 1 .............................. <1>
  [669] lt ...................................... <tCurrPwd.length < 1>
  [670] or ...................................... <voidp(tCurrPwd) or (tCurrPwd.length < 1)>
  [671] jmpifz [706] ............................ if voidp(tCurrPwd) or (tCurrPwd.length < 1) then
  [674] getlocal 0 .............................. <tWndObj>
  [676] pushcons 36 ............................. <"updateaccount_topic">
  [678] pusharglist 2 ........................... <tWndObj, "updateaccount_topic">
  [680] objcall 133 ............................. <tWndObj.getElement("updateaccount_topic")>
  [682] pushcons 264 ............................ <"Alert_ForgotSetPassword">
  [685] pusharglist 1 ........................... <"Alert_ForgotSetPassword">
  [687] extcall 74 .............................. <getText("Alert_ForgotSetPassword")>
  [689] pusharglistnoret 2 ...................... <tWndObj.getElement("updateaccount_topic"), getText("Alert_ForgotSetPassword")>
  [691] objcall 134 ............................. tWndObj.getElement("updateaccount_topic").setText(getText("Alert_ForgotSetPassword"))
  [693] getparam 0 .............................. <me>
  [695] pusharglistnoret 1 ...................... <me>
  [697] objcall 62 .............................. me.highlightVerifyTopic()
  [699] pop 1
  [701] pushzero ................................ <0>
  [702] pusharglistnoret 1 ...................... <0>
  [704] extcall 89 .............................. return 0
  [706] getlocal 0 .............................. <tWndObj>
  [708] pushcons 103 ............................ <"char_dd_field">
  [710] pusharglist 2 ........................... <tWndObj, "char_dd_field">
  [712] objcall 133 ............................. <tWndObj.getElement("char_dd_field")>
  [714] pusharglist 1 ........................... <tWndObj.getElement("char_dd_field")>
  [716] objcall 74 .............................. <tWndObj.getElement("char_dd_field").getText()>
  [718] pusharglist 1 ........................... <tWndObj.getElement("char_dd_field").getText()>
  [720] extcall 199 ............................. <integer(tWndObj.getElement("char_dd_field").getText())>
  [722] setlocal 10 ............................. tDay = integer(tWndObj.getElement("char_dd_field").getText())
  [724] getlocal 0 .............................. <tWndObj>
  [726] pushcons 37 ............................. <"monthDrop">
  [728] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [730] objcall 135 ............................. <tWndObj.elementExists("monthDrop")>
  [732] not ..................................... <not tWndObj.elementExists("monthDrop")>
  [733] jmpifz [752] ............................ if not tWndObj.elementExists("monthDrop") then
  [736] pop 1
  [738] getparam 0 .............................. <me>
  [740] pushcons 122 ............................ <"No month drop!">
  [742] pushsymb 59 ............................. <#leavePage>
  [744] pusharglist 3 ........................... <me, "No month drop!", #leavePage>
  [746] extcall 85 .............................. <error(me, "No month drop!", #leavePage)>
  [748] pusharglistnoret 1 ...................... <error(me, "No month drop!", #leavePage)>
  [750] extcall 89 .............................. return error(me, "No month drop!", #leavePage)
  [752] getlocal 0 .............................. <tWndObj>
  [754] pushcons 37 ............................. <"monthDrop">
  [756] pusharglist 2 ........................... <tWndObj, "monthDrop">
  [758] objcall 133 ............................. <tWndObj.getElement("monthDrop")>
  [760] pusharglist 1 ........................... <tWndObj.getElement("monthDrop")>
  [762] objcall 212 ............................. <tWndObj.getElement("monthDrop").getSelection()>
  [764] setlocal 11 ............................. tMonthSelection = tWndObj.getElement("monthDrop").getSelection()
  [766] getlocal 11 ............................. <tMonthSelection>
  [768] getlocal 11 ............................. <tMonthSelection>
  [770] getobjprop 214 .......................... <tMonthSelection.length>
  [772] pushint8 1 .............................. <1>
  [774] sub ..................................... <tMonthSelection.length - 1>
  [775] getlocal 11 ............................. <tMonthSelection>
  [777] getobjprop 214 .......................... <tMonthSelection.length>
  [779] pusharglist 3 ........................... <tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length>
  [781] extcall 213 ............................. <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [783] pusharglist 1 ........................... <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [785] extcall 199 ............................. <integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))>
  [787] setlocal 12 ............................. tMonth = integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))
  [789] getlocal 0 .............................. <tWndObj>
  [791] pushcons 104 ............................ <"char_yyyy_field">
  [793] pusharglist 2 ........................... <tWndObj, "char_yyyy_field">
  [795] objcall 133 ............................. <tWndObj.getElement("char_yyyy_field")>
  [797] pusharglist 1 ........................... <tWndObj.getElement("char_yyyy_field")>
  [799] objcall 74 .............................. <tWndObj.getElement("char_yyyy_field").getText()>
  [801] pusharglist 1 ........................... <tWndObj.getElement("char_yyyy_field").getText()>
  [803] extcall 199 ............................. <integer(tWndObj.getElement("char_yyyy_field").getText())>
  [805] setlocal 13 ............................. tYear = integer(tWndObj.getElement("char_yyyy_field").getText())
  [807] getlocal 10 ............................. <tDay>
  [809] pushint8 1 .............................. <1>
  [811] lt ...................................... <tDay < 1>
  [812] getlocal 12 ............................. <tMonth>
  [814] pushint8 1 .............................. <1>
  [816] lt ...................................... <tMonth < 1>
  [817] or ...................................... <(tDay < 1) or (tMonth < 1)>
  [818] getlocal 13 ............................. <tYear>
  [820] pushint8 1 .............................. <1>
  [822] lt ...................................... <tYear < 1>
  [823] or ...................................... <(tDay < 1) or (tMonth < 1) or (tYear < 1)>
  [824] jmpifz [858] ............................ if (tDay < 1) or (tMonth < 1) or (tYear < 1) then
  [827] getlocal 0 .............................. <tWndObj>
  [829] pushcons 36 ............................. <"updateaccount_topic">
  [831] pusharglist 2 ........................... <tWndObj, "updateaccount_topic">
  [833] objcall 133 ............................. <tWndObj.getElement("updateaccount_topic")>
  [835] pushcons 194 ............................ <"Alert_CheckBirthday">
  [837] pusharglist 1 ........................... <"Alert_CheckBirthday">
  [839] extcall 74 .............................. <getText("Alert_CheckBirthday")>
  [841] pusharglistnoret 2 ...................... <tWndObj.getElement("updateaccount_topic"), getText("Alert_CheckBirthday")>
  [843] objcall 134 ............................. tWndObj.getElement("updateaccount_topic").setText(getText("Alert_CheckBirthday"))
  [845] getparam 0 .............................. <me>
  [847] pusharglistnoret 1 ...................... <me>
  [849] objcall 62 .............................. me.highlightVerifyTopic()
  [851] pop 1
  [853] pushzero ................................ <0>
  [854] pusharglistnoret 1 ...................... <0>
  [856] extcall 89 .............................. return 0
  [858] getprop 83 .............................. <pUpdatePropsToServer>
  [860] pushsymb 124 ............................ <#day>
  [862] getlocal 10 ............................. <tDay>
  [864] pusharglistnoret 3 ...................... <pUpdatePropsToServer, #day, tDay>
  [866] objcall 174 ............................. pUpdatePropsToServer[#day] = tDay
  [868] getprop 83 .............................. <pUpdatePropsToServer>
  [870] pushsymb 125 ............................ <#month>
  [872] getlocal 12 ............................. <tMonth>
  [874] pusharglistnoret 3 ...................... <pUpdatePropsToServer, #month, tMonth>
  [876] objcall 174 ............................. pUpdatePropsToServer[#month] = tMonth
  [878] getprop 83 .............................. <pUpdatePropsToServer>
  [880] pushsymb 126 ............................ <#year>
  [882] getlocal 13 ............................. <tYear>
  [884] pusharglistnoret 3 ...................... <pUpdatePropsToServer, #year, tYear>
  [886] objcall 174 ............................. pUpdatePropsToServer[#year] = tYear
  [888] getprop 69 .............................. <pTempPassword>
  [890] pushcons 260 ............................ <"char_newpwd1_field">
  [893] pusharglist 2 ........................... <pTempPassword, "char_newpwd1_field">
  [895] objcall 105 ............................. <pTempPassword["char_newpwd1_field"]>
  [897] setlocal 14 ............................. tPw1 = pTempPassword["char_newpwd1_field"]
  [899] getprop 69 .............................. <pTempPassword>
  [901] pushcons 261 ............................ <"char_newpwd2_field">
  [904] pusharglist 2 ........................... <pTempPassword, "char_newpwd2_field">
  [906] objcall 105 ............................. <pTempPassword["char_newpwd2_field"]>
  [908] setlocal 15 ............................. tPw2 = pTempPassword["char_newpwd2_field"]
  [910] getparam 0 .............................. <me>
  [912] getlocal 14 ............................. <tPw1>
  [914] getlocal 15 ............................. <tPw2>
  [916] pusharglist 3 ........................... <me, tPw1, tPw2>
  [918] objcall 47 .............................. <me.checkPasswords(tPw1, tPw2)>
  [920] not ..................................... <not me.checkPasswords(tPw1, tPw2)>
  [921] jmpifz [1019] ........................... if not me.checkPasswords(tPw1, tPw2) then
  [924] getlocal 0 .............................. <tWndObj>
  [926] pushcons 260 ............................ <"char_newpwd1_field">
  [929] pusharglist 2 ........................... <tWndObj, "char_newpwd1_field">
  [931] objcall 133 ............................. <tWndObj.getElement("char_newpwd1_field")>
  [933] pushcons 0 .............................. <EMPTY>
  [935] pusharglistnoret 2 ...................... <tWndObj.getElement("char_newpwd1_field"), EMPTY>
  [937] objcall 134 ............................. tWndObj.getElement("char_newpwd1_field").setText(EMPTY)
  [939] getlocal 0 .............................. <tWndObj>
  [941] pushcons 261 ............................ <"char_newpwd2_field">
  [944] pusharglist 2 ........................... <tWndObj, "char_newpwd2_field">
  [946] objcall 133 ............................. <tWndObj.getElement("char_newpwd2_field")>
  [948] pushcons 0 .............................. <EMPTY>
  [950] pusharglistnoret 2 ...................... <tWndObj.getElement("char_newpwd2_field"), EMPTY>
  [952] objcall 134 ............................. tWndObj.getElement("char_newpwd2_field").setText(EMPTY)
  [954] getlocal 0 .............................. <tWndObj>
  [956] pushcons 260 ............................ <"char_newpwd1_field">
  [959] pusharglist 2 ........................... <tWndObj, "char_newpwd1_field">
  [961] objcall 133 ............................. <tWndObj.getElement("char_newpwd1_field")>
  [963] pushint8 1 .............................. <1>
  [965] pusharglistnoret 2 ...................... <tWndObj.getElement("char_newpwd1_field"), 1>
  [967] objcall 190 ............................. tWndObj.getElement("char_newpwd1_field").setFocus(1)
  [969] getlocal 0 .............................. <tWndObj>
  [971] pushcons 36 ............................. <"updateaccount_topic">
  [973] pusharglist 2 ........................... <tWndObj, "updateaccount_topic">
  [975] objcall 133 ............................. <tWndObj.getElement("updateaccount_topic")>
  [977] getprop 299 ............................. <pErrorMsg>
  [980] pusharglistnoret 2 ...................... <tWndObj.getElement("updateaccount_topic"), pErrorMsg>
  [982] objcall 134 ............................. tWndObj.getElement("updateaccount_topic").setText(pErrorMsg)
  [984] getparam 0 .............................. <me>
  [986] pusharglistnoret 1 ...................... <me>
  [988] objcall 62 .............................. me.highlightVerifyTopic()
  [990] getprop 69 .............................. <pTempPassword>
  [992] pushcons 260 ............................ <"char_newpwd1_field">
  [995] pushcons 0 .............................. <EMPTY>
  [997] pusharglistnoret 3 ...................... <pTempPassword, "char_newpwd1_field", EMPTY>
  [999] objcall 174 ............................. pTempPassword["char_newpwd1_field"] = EMPTY
  [1001] getprop 69 ............................. <pTempPassword>
  [1003] pushcons 261 ........................... <"char_newpwd2_field">
  [1006] pushcons 0 ............................. <EMPTY>
  [1008] pusharglistnoret 3 ..................... <pTempPassword, "char_newpwd2_field", EMPTY>
  [1010] objcall 174 ............................ pTempPassword["char_newpwd2_field"] = EMPTY
  [1012] pop 1
  [1014] pushzero ............................... <0>
  [1015] pusharglistnoret 1 ..................... <0>
  [1017] extcall 89 ............................. return 0
  [1019] getlocal 14 ............................ <tPw1>
  [1021] setlocal 16 ............................ tNewPwd = tPw1
  [1023] getprop 83 ............................. <pUpdatePropsToServer>
  [1025] pushsymb 128 ........................... <#newPwd>
  [1027] getlocal 16 ............................ <tNewPwd>
  [1029] pusharglistnoret 3 ..................... <pUpdatePropsToServer, #newPwd, tNewPwd>
  [1031] objcall 174 ............................ pUpdatePropsToServer[#newPwd] = tNewPwd
  [1033] getlocal 0 ............................. <tWndObj>
  [1035] pusharglistnoret 1 ..................... <tWndObj>
  [1037] objcall 131 ............................ tWndObj.unmerge()
  [1039] getlocal 0 ............................. <tWndObj>
  [1041] pushcons 265 ........................... <"reg_update_progress.window">
  [1044] pusharglistnoret 2 ..................... <tWndObj, "reg_update_progress.window">
  [1046] objcall 132 ............................ tWndObj.merge("reg_update_progress.window")
  [1048] pushcons 52 ............................ <"reg_update_password.window">
  [1050] setprop 78 ............................. pLastWindow = "reg_update_password.window"
  [1052] pusharglist 0 .......................... <[:]>
  [1054] pushproplist ........................... <[:]>
  [1055] setprop 69 ............................. pTempPassword = [:]
  [1057] getparam 0 ............................. <me>
  [1059] pusharglistnoret 1 ..................... <me>
  [1061] objcall 65 ............................. me.blinkChecking()
  [1063] pushcons 0 ............................. <EMPTY>
  [1065] setprop 80 ............................. pPasswordErrors = EMPTY
  [1067] pushcons 0 ............................. <EMPTY>
  [1069] setprop 299 ............................ pErrorMsg = EMPTY
  [1072] getparam 0 ............................. <me>
  [1074] pusharglist 1 .......................... <me>
  [1076] objcall 114 ............................ <me.getComponent()>
  [1078] getlocal 16 ............................ <tNewPwd>
  [1080] pusharglistnoret 2 ..................... <me.getComponent(), tNewPwd>
  [1082] objcall 332 ............................ me.getComponent().sendValidatePassword(tNewPwd)
  [1085] pop 1
  [1087] pushzero ............................... <0>
  [1088] pusharglistnoret 1 ..................... <0>
  [1090] extcall 89 ............................. return 0
  [1092] jmp [1712]
  [1095] peek 0
  [1097] pushcons 266 ........................... <"updatemail_ok_button">
  [1100] eq
  [1101] jmpifz [1580] .......................... (case) "updatemail_ok_button":
  [1104] getprop 77 ............................. <pVerifyChangeWndID>
  [1106] pusharglist 1 .......................... <pVerifyChangeWndID>
  [1108] extcall 130 ............................ <getWindow(pVerifyChangeWndID)>
  [1110] setlocal 0 ............................. tWndObj = getWindow(pVerifyChangeWndID)
  [1112] getlocal 0 ............................. <tWndObj>
  [1114] pushcons 267 ........................... <"char_newemail_field">
  [1117] pusharglist 2 .......................... <tWndObj, "char_newemail_field">
  [1119] objcall 133 ............................ <tWndObj.getElement("char_newemail_field")>
  [1121] pusharglist 1 .......................... <tWndObj.getElement("char_newemail_field")>
  [1123] objcall 74 ............................. <tWndObj.getElement("char_newemail_field").getText()>
  [1125] setlocal 17 ............................ tEmail = tWndObj.getElement("char_newemail_field").getText()
  [1127] getlocal 0 ............................. <tWndObj>
  [1129] pushcons 104 ........................... <"char_yyyy_field">
  [1131] pusharglist 2 .......................... <tWndObj, "char_yyyy_field">
  [1133] objcall 133 ............................ <tWndObj.getElement("char_yyyy_field")>
  [1135] pusharglist 1 .......................... <tWndObj.getElement("char_yyyy_field")>
  [1137] objcall 74 ............................. <tWndObj.getElement("char_yyyy_field").getText()>
  [1139] pusharglist 1 .......................... <tWndObj.getElement("char_yyyy_field").getText()>
  [1141] extcall 199 ............................ <integer(tWndObj.getElement("char_yyyy_field").getText())>
  [1143] setlocal 13 ............................ tYear = integer(tWndObj.getElement("char_yyyy_field").getText())
  [1145] getlocal 0 ............................. <tWndObj>
  [1147] pushcons 37 ............................ <"monthDrop">
  [1149] pusharglist 2 .......................... <tWndObj, "monthDrop">
  [1151] objcall 135 ............................ <tWndObj.elementExists("monthDrop")>
  [1153] not .................................... <not tWndObj.elementExists("monthDrop")>
  [1154] jmpifz [1173] .......................... if not tWndObj.elementExists("monthDrop") then
  [1157] pop 1
  [1159] getparam 0 ............................. <me>
  [1161] pushcons 122 ........................... <"No month drop!">
  [1163] pushsymb 59 ............................ <#leavePage>
  [1165] pusharglist 3 .......................... <me, "No month drop!", #leavePage>
  [1167] extcall 85 ............................. <error(me, "No month drop!", #leavePage)>
  [1169] pusharglistnoret 1 ..................... <error(me, "No month drop!", #leavePage)>
  [1171] extcall 89 ............................. return error(me, "No month drop!", #leavePage)
  [1173] getlocal 0 ............................. <tWndObj>
  [1175] pushcons 37 ............................ <"monthDrop">
  [1177] pusharglist 2 .......................... <tWndObj, "monthDrop">
  [1179] objcall 133 ............................ <tWndObj.getElement("monthDrop")>
  [1181] pusharglist 1 .......................... <tWndObj.getElement("monthDrop")>
  [1183] objcall 212 ............................ <tWndObj.getElement("monthDrop").getSelection()>
  [1185] setlocal 11 ............................ tMonthSelection = tWndObj.getElement("monthDrop").getSelection()
  [1187] getlocal 11 ............................ <tMonthSelection>
  [1189] getlocal 11 ............................ <tMonthSelection>
  [1191] getobjprop 214 ......................... <tMonthSelection.length>
  [1193] pushint8 1 ............................. <1>
  [1195] sub .................................... <tMonthSelection.length - 1>
  [1196] getlocal 11 ............................ <tMonthSelection>
  [1198] getobjprop 214 ......................... <tMonthSelection.length>
  [1200] pusharglist 3 .......................... <tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length>
  [1202] extcall 213 ............................ <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [1204] pusharglist 1 .......................... <chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length)>
  [1206] extcall 199 ............................ <integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))>
  [1208] setlocal 12 ............................ tMonth = integer(chars(tMonthSelection, tMonthSelection.length - 1, tMonthSelection.length))
  [1210] getlocal 0 ............................. <tWndObj>
  [1212] pushcons 103 ........................... <"char_dd_field">
  [1214] pusharglist 2 .......................... <tWndObj, "char_dd_field">
  [1216] objcall 133 ............................ <tWndObj.getElement("char_dd_field")>
  [1218] pusharglist 1 .......................... <tWndObj.getElement("char_dd_field")>
  [1220] objcall 74 ............................. <tWndObj.getElement("char_dd_field").getText()>
  [1222] pusharglist 1 .......................... <tWndObj.getElement("char_dd_field").getText()>
  [1224] extcall 199 ............................ <integer(tWndObj.getElement("char_dd_field").getText())>
  [1226] setlocal 10 ............................ tDay = integer(tWndObj.getElement("char_dd_field").getText())
  [1228] getprop 69 ............................. <pTempPassword>
  [1230] pushcons 259 ........................... <"char_currpwd_field">
  [1233] pusharglist 2 .......................... <pTempPassword, "char_currpwd_field">
  [1235] objcall 105 ............................ <pTempPassword["char_currpwd_field"]>
  [1237] setlocal 9 ............................. tCurrPwd = pTempPassword["char_currpwd_field"]
  [1239] getlocal 9 ............................. <tCurrPwd>
  [1241] pusharglist 1 .......................... <tCurrPwd>
  [1243] extcall 100 ............................ <voidp(tCurrPwd)>
  [1245] getlocal 9 ............................. <tCurrPwd>
  [1247] pusharglist 1 .......................... <tCurrPwd>
  [1249] extcall 102 ............................ <ilk(tCurrPwd)>
  [1251] pushsymb 176 ........................... <#string>
  [1253] nteq ................................... <ilk(tCurrPwd) <> #string>
  [1254] or ..................................... <voidp(tCurrPwd) or (ilk(tCurrPwd) <> #string)>
  [1255] jmpifz [1290] .......................... if voidp(tCurrPwd) or (ilk(tCurrPwd) <> #string) then
  [1258] getlocal 0 ............................. <tWndObj>
  [1260] pushcons 36 ............................ <"updateaccount_topic">
  [1262] pusharglist 2 .......................... <tWndObj, "updateaccount_topic">
  [1264] objcall 133 ............................ <tWndObj.getElement("updateaccount_topic")>
  [1266] pushcons 264 ........................... <"Alert_ForgotSetPassword">
  [1269] pusharglist 1 .......................... <"Alert_ForgotSetPassword">
  [1271] extcall 74 ............................. <getText("Alert_ForgotSetPassword")>
  [1273] pusharglistnoret 2 ..................... <tWndObj.getElement("updateaccount_topic"), getText("Alert_ForgotSetPassword")>
  [1275] objcall 134 ............................ tWndObj.getElement("updateaccount_topic").setText(getText("Alert_ForgotSetPassword"))
  [1277] getparam 0 ............................. <me>
  [1279] pusharglistnoret 1 ..................... <me>
  [1281] objcall 62 ............................. me.highlightVerifyTopic()
  [1283] pop 1
  [1285] pushzero ............................... <0>
  [1286] pusharglistnoret 1 ..................... <0>
  [1288] extcall 89 ............................. return 0
  [1290] getlocal 10 ............................ <tDay>
  [1292] pushint8 1 ............................. <1>
  [1294] lt ..................................... <tDay < 1>
  [1295] getlocal 12 ............................ <tMonth>
  [1297] pushint8 1 ............................. <1>
  [1299] lt ..................................... <tMonth < 1>
  [1300] or ..................................... <(tDay < 1) or (tMonth < 1)>
  [1301] getlocal 13 ............................ <tYear>
  [1303] pushint8 1 ............................. <1>
  [1305] lt ..................................... <tYear < 1>
  [1306] or ..................................... <(tDay < 1) or (tMonth < 1) or (tYear < 1)>
  [1307] jmpifz [1341] .......................... if (tDay < 1) or (tMonth < 1) or (tYear < 1) then
  [1310] getlocal 0 ............................. <tWndObj>
  [1312] pushcons 36 ............................ <"updateaccount_topic">
  [1314] pusharglist 2 .......................... <tWndObj, "updateaccount_topic">
  [1316] objcall 133 ............................ <tWndObj.getElement("updateaccount_topic")>
  [1318] pushcons 194 ........................... <"Alert_CheckBirthday">
  [1320] pusharglist 1 .......................... <"Alert_CheckBirthday">
  [1322] extcall 74 ............................. <getText("Alert_CheckBirthday")>
  [1324] pusharglistnoret 2 ..................... <tWndObj.getElement("updateaccount_topic"), getText("Alert_CheckBirthday")>
  [1326] objcall 134 ............................ tWndObj.getElement("updateaccount_topic").setText(getText("Alert_CheckBirthday"))
  [1328] getparam 0 ............................. <me>
  [1330] pusharglistnoret 1 ..................... <me>
  [1332] objcall 62 ............................. me.highlightVerifyTopic()
  [1334] pop 1
  [1336] pushzero ............................... <0>
  [1337] pusharglistnoret 1 ..................... <0>
  [1339] extcall 89 ............................. return 0
  [1341] pushzero ............................... <0>
  [1342] setlocal 18 ............................ tEmailOK = 0
  [1344] getlocal 17 ............................ <tEmail>
  [1346] pusharglist 1 .......................... <tEmail>
  [1348] extcall 214 ............................ <length(tEmail)>
  [1350] pushint8 6 ............................. <6>
  [1352] gt ..................................... <length(tEmail) > 6>
  [1353] getlocal 17 ............................ <tEmail>
  [1355] pushcons 174 ........................... <"@">
  [1357] containsstr ............................ <tEmail contains "@">
  [1358] and .................................... <(length(tEmail) > 6) and (tEmail contains "@")>
  [1359] jmpifz [1439] .......................... if (length(tEmail) > 6) and (tEmail contains "@") then
  [1362] pushcons 174 ........................... <"@">
  [1364] getlocal 17 ............................ <tEmail>
  [1366] pusharglist 2 .......................... <"@", tEmail>
  [1368] extcall 321 ............................ <offset("@", tEmail)>
  [1371] pushint8 1 ............................. <1>
  [1373] add .................................... <offset("@", tEmail) + 1>
  [1374] setlocal 19
  [1376] getlocal 19
  [1378] getlocal 17 ............................ <tEmail>
  [1380] pusharglist 1 .......................... <tEmail>
  [1382] extcall 214 ............................ <length(tEmail)>
  [1384] lteq
  [1385] jmpifz [1439] .......................... repeat with f = offset("@", tEmail) + 1 to length(tEmail)
  [1388] getlocal 17 ............................ <tEmail>
  [1390] pushsymb 185 ........................... <#char>
  [1392] getlocal 19 ............................ <f>
  [1394] pusharglist 3 .......................... <tEmail, #char, f>
  [1396] objcall 186 ............................ <tEmail.char[f]>
  [1398] pushcons 32 ............................ <".">
  [1400] eq ..................................... <tEmail.char[f] = ".">
  [1401] jmpifz [1408] .......................... if tEmail.char[f] = "." then
  [1404] pushint8 1 ............................. <1>
  [1406] setlocal 18 ............................ tEmailOK = 1
  [1408] getlocal 17 ............................ <tEmail>
  [1410] pushsymb 185 ........................... <#char>
  [1412] getlocal 19 ............................ <f>
  [1414] pusharglist 3 .......................... <tEmail, #char, f>
  [1416] objcall 186 ............................ <tEmail.char[f]>
  [1418] pushcons 174 ........................... <"@">
  [1420] eq ..................................... <tEmail.char[f] = "@">
  [1421] jmpifz [1430] .......................... if tEmail.char[f] = "@" then
  [1424] pushzero ............................... <0>
  [1425] setlocal 18 ............................ tEmailOK = 0
  [1427] jmp [1439] ............................. exit repeat
  [1430] pushint8 1
  [1432] getlocal 19
  [1434] add
  [1435] setlocal 19
  [1437] endrepeat [1376]
  [1439] getlocal 18 ............................ <tEmailOK>
  [1441] not .................................... <not tEmailOK>
  [1442] jmpifz [1472] .......................... if not tEmailOK then / else
  [1445] getlocal 0 ............................. <tWndObj>
  [1447] pushcons 36 ............................ <"updateaccount_topic">
  [1449] pusharglist 2 .......................... <tWndObj, "updateaccount_topic">
  [1451] objcall 133 ............................ <tWndObj.getElement("updateaccount_topic")>
  [1453] pushcons 39 ............................ <"reg_verification_invalidEmail">
  [1455] pusharglist 1 .......................... <"reg_verification_invalidEmail">
  [1457] extcall 74 ............................. <getText("reg_verification_invalidEmail")>
  [1459] pusharglistnoret 2 ..................... <tWndObj.getElement("updateaccount_topic"), getText("reg_verification_invalidEmail")>
  [1461] objcall 134 ............................ tWndObj.getElement("updateaccount_topic").setText(getText("reg_verification_invalidEmail"))
  [1463] getparam 0 ............................. <me>
  [1465] pusharglistnoret 1 ..................... <me>
  [1467] objcall 62 ............................. me.highlightVerifyTopic()
  [1469] jmp [1577]
  [1472] getlocal 0 ............................. <tWndObj>
  [1474] pusharglistnoret 1 ..................... <tWndObj>
  [1476] objcall 131 ............................ tWndObj.unmerge()
  [1478] getlocal 0 ............................. <tWndObj>
  [1480] pushcons 265 ........................... <"reg_update_progress.window">
  [1483] pusharglistnoret 2 ..................... <tWndObj, "reg_update_progress.window">
  [1485] objcall 132 ............................ tWndObj.merge("reg_update_progress.window")
  [1487] pushcons 54 ............................ <"reg_update_email.window">
  [1489] setprop 78 ............................. pLastWindow = "reg_update_email.window"
  [1491] pusharglist 0 .......................... <[:]>
  [1493] pushproplist ........................... <[:]>
  [1494] setprop 69 ............................. pTempPassword = [:]
  [1496] getparam 0 ............................. <me>
  [1498] pusharglistnoret 1 ..................... <me>
  [1500] objcall 65 ............................. me.blinkChecking()
  [1502] getlocal 10 ............................ <tDay>
  [1504] pushint8 10 ............................ <10>
  [1506] lt ..................................... <tDay < 10>
  [1507] jmpifz [1517] .......................... if tDay < 10 then
  [1510] pushcons 31 ............................ <"0">
  [1512] getlocal 10 ............................ <tDay>
  [1514] joinstr ................................ <"0" & tDay>
  [1515] setlocal 10 ............................ tDay = "0" & tDay
  [1517] getlocal 12 ............................ <tMonth>
  [1519] pushint8 10 ............................ <10>
  [1521] lt ..................................... <tMonth < 10>
  [1522] jmpifz [1532] .......................... if tMonth < 10 then
  [1525] pushcons 31 ............................ <"0">
  [1527] getlocal 12 ............................ <tMonth>
  [1529] joinstr ................................ <"0" & tMonth>
  [1530] setlocal 12 ............................ tMonth = "0" & tMonth
  [1532] getlocal 10 ............................ <tDay>
  [1534] pushcons 32 ............................ <".">
  [1536] joinstr ................................ <tDay & ".">
  [1537] getlocal 12 ............................ <tMonth>
  [1539] joinstr ................................ <tDay & "." & tMonth>
  [1540] pushcons 32 ............................ <".">
  [1542] joinstr ................................ <tDay & "." & tMonth & ".">
  [1543] getlocal 13 ............................ <tYear>
  [1545] joinstr ................................ <tDay & "." & tMonth & "." & tYear>
  [1546] setlocal 20 ............................ tDOB = tDay & "." & tMonth & "." & tYear
  [1548] pushcons 33 ............................ <"oldpassword">
  [1550] getlocal 9 ............................. <tCurrPwd>
  [1552] pushcons 34 ............................ <"birthday">
  [1554] getlocal 20 ............................ <tDOB>
  [1556] pushcons 65 ............................ <"email">
  [1558] getlocal 17 ............................ <tEmail>
  [1560] pusharglist 6 .......................... <["oldpassword": tCurrPwd, "birthday": tDOB, "email": tEmail]>
  [1562] pushproplist ........................... <["oldpassword": tCurrPwd, "birthday": tDOB, "email": tEmail]>
  [1563] setlocal 21 ............................ tProp = ["oldpassword": tCurrPwd, "birthday": tDOB, "email": tEmail]
  [1565] getparam 0 ............................. <me>
  [1567] pusharglist 1 .......................... <me>
  [1569] objcall 114 ............................ <me.getComponent()>
  [1571] getlocal 21 ............................ <tProp>
  [1573] pusharglistnoret 2 ..................... <me.getComponent(), tProp>
  [1575] objcall 129 ............................ me.getComponent().sendUpdateAccountMsg(tProp)
  [1577] jmp [1712]
  [1580] peek 0
  [1582] pushcons 268 ........................... <"gdpr_access_request_button">
  [1585] eq
  [1586] jmpifz [1647] .......................... (case) "gdpr_access_request_button":
  [1589] getprop 77 ............................. <pVerifyChangeWndID>
  [1591] pusharglist 1 .......................... <pVerifyChangeWndID>
  [1593] extcall 130 ............................ <getWindow(pVerifyChangeWndID)>
  [1595] setlocal 0 ............................. tWndObj = getWindow(pVerifyChangeWndID)
  [1597] getlocal 0 ............................. <tWndObj>
  [1599] pusharglistnoret 1 ..................... <tWndObj>
  [1601] objcall 131 ............................ tWndObj.unmerge()
  [1603] getlocal 0 ............................. <tWndObj>
  [1605] pushcons 265 ........................... <"reg_update_progress.window">
  [1608] pusharglistnoret 2 ..................... <tWndObj, "reg_update_progress.window">
  [1610] objcall 132 ............................ tWndObj.merge("reg_update_progress.window")
  [1612] pushcons 58 ............................ <"reg_gdpr_requests.window">
  [1614] setprop 78 ............................. pLastWindow = "reg_gdpr_requests.window"
  [1616] getparam 0 ............................. <me>
  [1618] pusharglistnoret 1 ..................... <me>
  [1620] objcall 65 ............................. me.blinkChecking()
  [1622] pushcons 269 ........................... <"gdprRequestType">
  [1625] pushzero ............................... <0>
  [1626] pusharglist 2 .......................... <["gdprRequestType": 0]>
  [1628] pushproplist ........................... <["gdprRequestType": 0]>
  [1629] setlocal 21 ............................ tProp = ["gdprRequestType": 0]
  [1631] getparam 0 ............................. <me>
  [1633] pusharglist 1 .......................... <me>
  [1635] objcall 114 ............................ <me.getComponent()>
  [1637] getlocal 21 ............................ <tProp>
  [1639] pusharglistnoret 2 ..................... <me.getComponent(), tProp>
  [1641] objcall 394 ............................ me.getComponent().submitGdprRequestMsg(tProp)
  [1644] jmp [1712]
  [1647] peek 0
  [1649] pushcons 270 ........................... <"gdpr_erasure_request_button">
  [1652] eq
  [1653] jmpifz [1712] .......................... (case) "gdpr_erasure_request_button":
  [1656] getprop 77 ............................. <pVerifyChangeWndID>
  [1658] pusharglist 1 .......................... <pVerifyChangeWndID>
  [1660] extcall 130 ............................ <getWindow(pVerifyChangeWndID)>
  [1662] setlocal 0 ............................. tWndObj = getWindow(pVerifyChangeWndID)
  [1664] getlocal 0 ............................. <tWndObj>
  [1666] pusharglistnoret 1 ..................... <tWndObj>
  [1668] objcall 131 ............................ tWndObj.unmerge()
  [1670] getlocal 0 ............................. <tWndObj>
  [1672] pushcons 265 ........................... <"reg_update_progress.window">
  [1675] pusharglistnoret 2 ..................... <tWndObj, "reg_update_progress.window">
  [1677] objcall 132 ............................ tWndObj.merge("reg_update_progress.window")
  [1679] pushcons 58 ............................ <"reg_gdpr_requests.window">
  [1681] setprop 78 ............................. pLastWindow = "reg_gdpr_requests.window"
  [1683] getparam 0 ............................. <me>
  [1685] pusharglistnoret 1 ..................... <me>
  [1687] objcall 65 ............................. me.blinkChecking()
  [1689] pushcons 269 ........................... <"gdprRequestType">
  [1692] pushint8 2 ............................. <2>
  [1694] pusharglist 2 .......................... <["gdprRequestType": 2]>
  [1696] pushproplist ........................... <["gdprRequestType": 2]>
  [1697] setlocal 21 ............................ tProp = ["gdprRequestType": 2]
  [1699] getparam 0 ............................. <me>
  [1701] pusharglist 1 .......................... <me>
  [1703] objcall 114 ............................ <me.getComponent()>
  [1705] getlocal 21 ............................ <tProp>
  [1707] pusharglistnoret 2 ..................... <me.getComponent(), tProp>
  [1709] objcall 394 ............................ me.getComponent().submitGdprRequestMsg(tProp)
  [1712] pop 1 .................................. end case
  [1714] ret
end
