property pSprite, pScrImg, pwidth, pheight, pVX, pVY, pTargetObj, pTargetSpr, pJumperObj, pXFactor, pZoom, pSpeed, pFlexible, pTransitBuffer, pTransitState, pTargetPoint, pLastCropPoint, pFadeSpeed, pTransition, pTextImgBuffer, pTextShowState, pTextShowTime, pTextBlend, StateOfAd, adShowTime, adMember, adLink, adIdNum, AdWaitScore, pWriterID

on construct me
  [  0] pushint8 108 ............................ <108>
  [  2] setprop 512 ............................. pheight = 108
  [  5] pushint8 102 ............................ <102>
  [  7] setprop 513 ............................. pwidth = 102
  [ 10] pushfloat32 0.0 ......................... <0.0>
  [ 15] setprop 514 ............................. pVX = 0.0
  [ 18] pushfloat32 0.0 ......................... <0.0>
  [ 23] setprop 515 ............................. pVY = 0.0
  [ 26] pushint8 32 ............................. <32>
  [ 28] setprop 27 .............................. pXFactor = 32
  [ 30] pushint8 4 .............................. <4>
  [ 32] setprop 516 ............................. pZoom = 4
  [ 35] pushfloat32 10.0 ........................ <10.0>
  [ 40] setprop 49 .............................. pSpeed = 10.0
  [ 42] pushfloat32 50.0 ........................ <50.0>
  [ 47] setprop 517 ............................. pFlexible = 50.0
  [ 50] pushzero ................................ <0>
  [ 51] setprop 518 ............................. pTransitState = 0
  [ 54] pusharglist 0 ........................... <>
  [ 56] extcall 198 ............................. <VOID>
  [ 58] setprop 519 ............................. pTargetObj = VOID
  [ 61] pusharglist 0 ........................... <>
  [ 63] extcall 198 ............................. <VOID>
  [ 65] setprop 520 ............................. pTargetSpr = VOID
  [ 68] pushzero ................................ <0>
  [ 69] pushzero ................................ <0>
  [ 70] pusharglist 2 ........................... <0, 0>
  [ 72] extcall 41 .............................. <point(0, 0)>
  [ 74] setprop 521 ............................. pLastCropPoint = point(0, 0)
  [ 77] pushsymb 24 ............................. <#room>
  [ 79] pusharglist 1 ........................... <#room>
  [ 81] extcall 23 .............................. <getThread(#room)>
  [ 83] pusharglist 1 ........................... <getThread(#room)>
  [ 85] objcall 25 .............................. <getThread(#room).getInterface()>
  [ 87] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 89] objcall 143 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 91] pushcons 0 .............................. <"cam1">
  [ 93] pusharglist 2 ........................... <getThread(#room).getInterface().getRoomVisualizer(), "cam1">
  [ 95] objcall 144 ............................. <getThread(#room).getInterface().getRoomVisualizer().getSprById("cam1")>
  [ 97] setprop 522 ............................. pSprite = getThread(#room).getInterface().getRoomVisualizer().getSprById("cam1")
  [100] pushcons 1 .............................. <"fuse_screen">
  [102] pusharglist 1 ........................... <"fuse_screen">
  [104] extcall 74 .............................. <getmemnum("fuse_screen")>
  [106] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [108] extcall 73 .............................. <member(getmemnum("fuse_screen"))>
  [110] getobjprop 86 ........................... <member(getmemnum("fuse_screen")).image>
  [112] setprop 523 ............................. pScrImg = member(getmemnum("fuse_screen")).image
  [115] getprop 522 ............................. <pSprite>
  [118] setprop 520 ............................. pTargetSpr = pSprite
  [121] pushcons 2 .............................. <"fuse_screen_logo">
  [123] pusharglist 1 ........................... <"fuse_screen_logo">
  [125] extcall 524 ............................. <memberExists("fuse_screen_logo")>
  [128] jmpifz [160] ............................ if memberExists("fuse_screen_logo") then
  [131] getprop 523 ............................. <pScrImg>
  [134] pushcons 2 .............................. <"fuse_screen_logo">
  [136] pusharglist 1 ........................... <"fuse_screen_logo">
  [138] extcall 74 .............................. <getmemnum("fuse_screen_logo")>
  [140] pusharglist 1 ........................... <getmemnum("fuse_screen_logo")>
  [142] extcall 73 .............................. <member(getmemnum("fuse_screen_logo"))>
  [144] getobjprop 86 ........................... <member(getmemnum("fuse_screen_logo")).image>
  [146] getprop 523 ............................. <pScrImg>
  [149] getobjprop 92 ........................... <pScrImg.rect>
  [151] getprop 523 ............................. <pScrImg>
  [154] getobjprop 92 ........................... <pScrImg.rect>
  [156] pusharglistnoret 4 ...................... <pScrImg, member(getmemnum("fuse_screen_logo")).image, pScrImg.rect, pScrImg.rect>
  [158] objcall 97 .............................. pScrImg.copyPixels(member(getmemnum("fuse_screen_logo")).image, pScrImg.rect, pScrImg.rect)
  [160] pushzero ................................ <0>
  [161] setprop 525 ............................. pTransition = 0
  [164] pushzero ................................ <0>
  [165] setprop 526 ............................. pTextShowState = 0
  [168] pushzero ................................ <0>
  [169] setprop 527 ............................. StateOfAd = 0
  [172] pushzero ................................ <0>
  [173] setprop 528 ............................. AdWaitScore = 0
  [176] pusharglist 0 ........................... <>
  [178] extcall 198 ............................. <VOID>
  [180] setprop 529 ............................. adIdNum = VOID
  [183] pusharglist 0 ........................... <>
  [185] extcall 531 ............................. <getUniqueID()>
  [188] setprop 530 ............................. pWriterID = getUniqueID()
  [191] pushcons 3 .............................. <"struct.font.bold">
  [193] pusharglist 1 ........................... <"struct.font.bold">
  [195] extcall 532 ............................. <getStructVariable("struct.font.bold")>
  [198] setlocal 0 .............................. tMetrics = getStructVariable("struct.font.bold")
  [200] getlocal 0 .............................. <tMetrics>
  [202] pushsymb 533 ............................ <#color>
  [205] pushcons 4 .............................. <"#FFFF99">
  [207] pusharglist 1 ........................... <"#FFFF99">
  [209] extcall 87 .............................. <rgb("#FFFF99")>
  [211] pusharglistnoret 3 ...................... <tMetrics, #color, rgb("#FFFF99")>
  [213] objcall 410 ............................. tMetrics.setaProp(#color, rgb("#FFFF99"))
  [216] getlocal 0 .............................. <tMetrics>
  [218] pushsymb 163 ............................ <#bgColor>
  [220] pushzero ................................ <0>
  [221] pushzero ................................ <0>
  [222] pushzero ................................ <0>
  [223] pusharglist 3 ........................... <0, 0, 0>
  [225] extcall 87 .............................. <rgb(0, 0, 0)>
  [227] pusharglistnoret 3 ...................... <tMetrics, #bgColor, rgb(0, 0, 0)>
  [229] objcall 410 ............................. tMetrics.setaProp(#bgColor, rgb(0, 0, 0))
  [232] getprop 530 ............................. <pWriterID>
  [235] getlocal 0 .............................. <tMetrics>
  [237] pusharglist 2 ........................... <pWriterID, tMetrics>
  [239] extcall 534 ............................. <createWriter(pWriterID, tMetrics)>
  [242] not ..................................... <not createWriter(pWriterID, tMetrics)>
  [243] jmpifz [263] ............................ if not createWriter(pWriterID, tMetrics) then / else
  [246] getparam 0 .............................. <me>
  [248] pushcons 5 .............................. <"Couldn't create writer for screen!">
  [250] pushsymb 228 ............................ <#construct>
  [252] pusharglist 3 ........................... <me, "Couldn't create writer for screen!", #construct>
  [254] extcall 101 ............................. <error(me, "Couldn't create writer for screen!", #construct)>
  [256] pusharglistnoret 1 ...................... <error(me, "Couldn't create writer for screen!", #construct)>
  [258] extcall 15 .............................. return error(me, "Couldn't create writer for screen!", #construct)
  [260] jmp [313]
  [263] getprop 530 ............................. <pWriterID>
  [266] pusharglist 1 ........................... <pWriterID>
  [268] extcall 535 ............................. <getWriter(pWriterID)>
  [271] pushsymb 536 ............................ <#alignment>
  [274] pushsymb 257 ............................ <#center>
  [277] pushsymb 92 ............................. <#rect>
  [279] pushzero ................................ <0>
  [280] pushzero ................................ <0>
  [281] pushint8 108 ............................ <108>
  [283] pushint8 10 ............................. <10>
  [285] pusharglist 4 ........................... <0, 0, 108, 10>
  [287] extcall 92 .............................. <rect(0, 0, 108, 10)>
  [289] pusharglist 4 ........................... <[#alignment: #center, #rect: rect(0, 0, 108, 10)]>
  [291] pushproplist ............................ <[#alignment: #center, #rect: rect(0, 0, 108, 10)]>
  [292] pusharglistnoret 2 ...................... <getWriter(pWriterID), [#alignment: #center, #rect: rect(0, 0, 108, 10)]>
  [294] objcall 249 ............................. getWriter(pWriterID).define([#alignment: #center, #rect: rect(0, 0, 108, 10)])
  [296] getparam 0 .............................. <me>
  [298] pusharglist 1 ........................... <me>
  [300] objcall 61 .............................. <me.getID()>
  [302] pusharglistnoret 1 ...................... <me.getID()>
  [304] extcall 537 ............................. receivePrepare(me.getID())
  [307] pushint8 1 .............................. <1>
  [309] pusharglistnoret 1 ...................... <1>
  [311] extcall 15 .............................. return 1
  [313] ret
end

on deconstruct me
  [  0] getprop 530 ............................. <pWriterID>
  [  3] pusharglistnoret 1 ...................... <pWriterID>
  [  5] extcall 539 ............................. removeWriter(pWriterID)
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 61 .............................. <me.getID()>
  [ 14] pusharglistnoret 1 ...................... <me.getID()>
  [ 16] extcall 540 ............................. removePrepare(me.getID())
  [ 19] pushint8 1 .............................. <1>
  [ 21] pusharglistnoret 1 ...................... <1>
  [ 23] extcall 15 .............................. return 1
  [ 25] ret
end

on fuseShow_setcamera me, tNumber
  [  0] getprop 525 ............................. <pTransition>
  [  3] pushcons 6 .............................. <"fade">
  [  5] nteq .................................... <pTransition <> "fade">
  [  6] jmpifz [ 13] ............................ if pTransition <> "fade" then
  [  9] pushzero ................................ <0>
  [ 10] setprop 525 ............................. pTransition = 0
  [ 13] getparam 1 .............................. <tNumber>
  [ 15] pushint8 1 .............................. <1>
  [ 17] eq ...................................... <tNumber = 1>
  [ 18] jmpifz [ 26] ............................ if tNumber = 1 then
  [ 21] pushint8 2 .............................. <2>
  [ 23] setprop 516 ............................. pZoom = 2
  [ 26] getparam 1 .............................. <tNumber>
  [ 28] pushint8 2 .............................. <2>
  [ 30] eq ...................................... <tNumber = 2>
  [ 31] jmpifz [ 39] ............................ if tNumber = 2 then
  [ 34] pushint8 4 .............................. <4>
  [ 36] setprop 516 ............................. pZoom = 4
  [ 39] ret
end

on fuseShow_targetcamera me, tTrgUserID
  [  0] pushsymb 24 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 23 .............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 128 ............................. <getThread(#room).getComponent()>
  [ 10] getparam 1 .............................. <tTrgUserID>
  [ 12] pusharglist 2 ........................... <getThread(#room).getComponent(), tTrgUserID>
  [ 14] objcall 491 ............................. <getThread(#room).getComponent().userObjectExists(tTrgUserID)>
  [ 17] not ..................................... <not getThread(#room).getComponent().userObjectExists(tTrgUserID)>
  [ 18] jmpifz [ 51] ............................ if not getThread(#room).getComponent().userObjectExists(tTrgUserID) then
  [ 21] pusharglist 0 ........................... <>
  [ 23] extcall 198 ............................. <VOID>
  [ 25] setparam 1 .............................. tTrgUserID = VOID
  [ 27] getprop 522 ............................. <pSprite>
  [ 30] setprop 520 ............................. pTargetSpr = pSprite
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 7 .............................. <"User object not found:">
  [ 37] getparam 1 .............................. <tTrgUserID>
  [ 39] joinpadstr .............................. <"User object not found:" && tTrgUserID>
  [ 40] pushsymb 503 ............................ <#fuseShow_targetcamera>
  [ 43] pusharglist 3 ........................... <me, "User object not found:" && tTrgUserID, #fuseShow_targetcamera>
  [ 45] extcall 101 ............................. <error(me, "User object not found:" && tTrgUserID, #fuseShow_targetcamera)>
  [ 47] pusharglistnoret 1 ...................... <error(me, "User object not found:" && tTrgUserID, #fuseShow_targetcamera)>
  [ 49] extcall 15 .............................. return error(me, "User object not found:" && tTrgUserID, #fuseShow_targetcamera)
  [ 51] pushsymb 24 ............................. <#room>
  [ 53] pusharglist 1 ........................... <#room>
  [ 55] extcall 23 .............................. <getThread(#room)>
  [ 57] pusharglist 1 ........................... <getThread(#room)>
  [ 59] objcall 128 ............................. <getThread(#room).getComponent()>
  [ 61] getparam 1 .............................. <tTrgUserID>
  [ 63] pusharglist 2 ........................... <getThread(#room).getComponent(), tTrgUserID>
  [ 65] objcall 386 ............................. <getThread(#room).getComponent().getUserObject(tTrgUserID)>
  [ 68] pusharglist 1 ........................... <getThread(#room).getComponent().getUserObject(tTrgUserID)>
  [ 70] objcall 542 ............................. <getThread(#room).getComponent().getUserObject(tTrgUserID).getSprites()>
  [ 73] pushint8 1 .............................. <1>
  [ 75] pusharglist 2 ........................... <getThread(#room).getComponent().getUserObject(tTrgUserID).getSprites(), 1>
  [ 77] objcall 83 .............................. <getThread(#room).getComponent().getUserObject(tTrgUserID).getSprites()[1]>
  [ 79] setprop 520 ............................. pTargetSpr = getThread(#room).getComponent().getUserObject(tTrgUserID).getSprites()[1]
  [ 82] getparam 1 .............................. <tTrgUserID>
  [ 84] setprop 519 ............................. pTargetObj = tTrgUserID
  [ 87] pushfloat32 50.0 ........................ <50.0>
  [ 92] pushint8 10 ............................. <10>
  [ 94] pusharglist 1 ........................... <10>
  [ 96] extcall 94 .............................. <random(10)>
  [ 98] add ..................................... <50.0 + random(10)>
  [ 99] setprop 49 .............................. pSpeed = 50.0 + random(10)
  [101] pushfloat32 10.0 ........................ <10.0>
  [106] pushint8 20 ............................. <20>
  [108] pusharglist 1 ........................... <20>
  [110] extcall 94 .............................. <random(20)>
  [112] add ..................................... <10.0 + random(20)>
  [113] setprop 517 ............................. pFlexible = 10.0 + random(20)
  [116] pushint8 1 .............................. <1>
  [118] pusharglistnoret 1 ...................... <1>
  [120] extcall 15 .............................. return 1
  [122] ret
end

on fuseShow_transition me, tTran
  [  0] getprop 527 ............................. <StateOfAd>
  [  3] pushzero ................................ <0>
  [  4] eq ...................................... <StateOfAd = 0>
  [  5] jmpifz [115] ............................ if StateOfAd = 0 then
  [  8] getparam 1 .............................. <tTran>
  [ 10] peek 0 .................................. case tTran of
  [ 12] pushcons 8 .............................. <"cameraPan">
  [ 14] eq
  [ 15] jmpifz [ 62] ............................ (case) "cameraPan":
  [ 18] pushcons 8 .............................. <"cameraPan">
  [ 20] setprop 525 ............................. pTransition = "cameraPan"
  [ 23] pusharglist 0 ........................... <>
  [ 25] extcall 198 ............................. <VOID>
  [ 27] setprop 519 ............................. pTargetObj = VOID
  [ 30] pushfloat32 5.0 ......................... <5.0>
  [ 35] pushint8 25 ............................. <25>
  [ 37] pusharglist 1 ........................... <25>
  [ 39] extcall 94 .............................. <random(25)>
  [ 41] add ..................................... <5.0 + random(25)>
  [ 42] setprop 49 .............................. pSpeed = 5.0 + random(25)
  [ 44] pushfloat32 30.0 ........................ <30.0>
  [ 49] pushint8 20 ............................. <20>
  [ 51] pusharglist 1 ........................... <20>
  [ 53] extcall 94 .............................. <random(20)>
  [ 55] add ..................................... <30.0 + random(20)>
  [ 56] setprop 517 ............................. pFlexible = 30.0 + random(20)
  [ 59] jmp [113]
  [ 62] peek 0
  [ 64] pushcons 6 .............................. <"fade">
  [ 66] eq
  [ 67] jmpifz [113] ............................ (case) "fade":
  [ 70] pushcons 6 .............................. <"fade">
  [ 72] setprop 525 ............................. pTransition = "fade"
  [ 75] pusharglist 0 ........................... <>
  [ 77] extcall 198 ............................. <VOID>
  [ 79] setprop 519 ............................. pTargetObj = VOID
  [ 82] getprop 512 ............................. <pheight>
  [ 85] getprop 513 ............................. <pwidth>
  [ 88] pushint8 16 ............................. <16>
  [ 90] pusharglist 3 ........................... <pheight, pwidth, 16>
  [ 92] extcall 86 .............................. <image(pheight, pwidth, 16)>
  [ 94] setprop 544 ............................. pTransitBuffer = image(pheight, pwidth, 16)
  [ 97] pushzero ................................ <0>
  [ 98] setprop 518 ............................. pTransitState = 0
  [101] pushint8 2 .............................. <2>
  [103] pusharglist 1 ........................... <2>
  [105] extcall 94 .............................. <random(2)>
  [107] pushint8 10 ............................. <10>
  [109] mul ..................................... <random(2) * 10>
  [110] setprop 545 ............................. pFadeSpeed = random(2) * 10
  [113] pop 1 ................................... end case
  [115] ret
end

on fuseShow_showtext me, tText
  [  0] getprop 527 ............................. <StateOfAd>
  [  3] pushzero ................................ <0>
  [  4] eq ...................................... <StateOfAd = 0>
  [  5] jmpifz [162] ............................ if StateOfAd = 0 then
  [  8] getmovieprop 292 ........................ <the itemDelimiter>
  [ 11] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 13] pushcons 9 .............................. <"/">
  [ 15] setmovieprop 292 ........................ the itemDelimiter = "/"
  [ 18] getparam 1 .............................. <tText>
  [ 20] pushsymb 295 ............................ <#item>
  [ 23] pusharglist 2 ........................... <tText, #item>
  [ 25] objcall 82 .............................. <tText.item.count>
  [ 27] pushint8 1 .............................. <1>
  [ 29] gt ...................................... <tText.item.count > 1>
  [ 30] jmpifz [109] ............................ if tText.item.count > 1 then
  [ 33] pushcons 10 ............................. <EMPTY>
  [ 35] setlocal 1 .............................. tTemp = EMPTY
  [ 37] pushint8 1 .............................. <1>
  [ 39] setlocal 2
  [ 41] getlocal 2
  [ 43] getparam 1 .............................. <tText>
  [ 45] pushsymb 295 ............................ <#item>
  [ 48] pusharglist 2 ........................... <tText, #item>
  [ 50] objcall 82 .............................. <tText.item.count>
  [ 52] lteq
  [ 53] jmpifz [ 84] ............................ repeat with f = 1 to tText.item.count
  [ 56] getlocal 1 .............................. <tTemp>
  [ 58] getparam 1 .............................. <tText>
  [ 60] pushsymb 295 ............................ <#item>
  [ 63] getlocal 2 .............................. <f>
  [ 65] pusharglist 3 ........................... <tText, #item, f>
  [ 67] objcall 150 ............................. <tText.item[f]>
  [ 69] joinstr ................................. <tTemp & tText.item[f]>
  [ 70] pushcons 11 ............................. <RETURN>
  [ 72] joinstr ................................. <tTemp & tText.item[f] & RETURN>
  [ 73] setlocal 1 .............................. tTemp = tTemp & tText.item[f] & RETURN
  [ 75] pushint8 1
  [ 77] getlocal 2
  [ 79] add
  [ 80] setlocal 2
  [ 82] endrepeat [ 41]
  [ 84] getlocal 1 .............................. <tTemp>
  [ 86] pushsymb 406 ............................ <#line>
  [ 89] pushint8 1 .............................. <1>
  [ 91] getlocal 1 .............................. <tTemp>
  [ 93] pushsymb 406 ............................ <#line>
  [ 96] pusharglist 2 ........................... <tTemp, #line>
  [ 98] objcall 82 .............................. <tTemp.line.count>
  [100] pushint8 1 .............................. <1>
  [102] sub ..................................... <tTemp.line.count - 1>
  [103] pusharglist 4 ........................... <tTemp, #line, 1, tTemp.line.count - 1>
  [105] objcall 150 ............................. <tTemp.line[1..tTemp.line.count - 1]>
  [107] setparam 1 .............................. tText = tTemp.line[1..tTemp.line.count - 1]
  [109] getlocal 0 .............................. <tDelim>
  [111] setmovieprop 292 ........................ the itemDelimiter = tDelim
  [114] getprop 530 ............................. <pWriterID>
  [117] pusharglist 1 ........................... <pWriterID>
  [119] extcall 535 ............................. <getWriter(pWriterID)>
  [122] setlocal 3 .............................. tWriObj = getWriter(pWriterID)
  [124] getlocal 3 .............................. <tWriObj>
  [126] pushzero ................................ <0>
  [127] nteq .................................... <tWriObj <> 0>
  [128] jmpifz [162] ............................ if tWriObj <> 0 then
  [131] pushint8 1 .............................. <1>
  [133] setprop 526 ............................. pTextShowState = 1
  [136] getlocal 3 .............................. <tWriObj>
  [138] getparam 1 .............................. <tText>
  [140] pusharglist 2 ........................... <tWriObj, tText>
  [142] objcall 548 ............................. <tWriObj.render(tText)>
  [145] setprop 547 ............................. pTextImgBuffer = tWriObj.render(tText)
  [148] pushint16 12000 ......................... <12000>
  [151] getmovieprop 48 ......................... <the milliSeconds>
  [153] add ..................................... <12000 + the milliSeconds>
  [154] setprop 549 ............................. pTextShowTime = 12000 + the milliSeconds
  [157] pushint8 100 ............................ <100>
  [159] setprop 550 ............................. pTextBlend = 100
  [162] ret
end

on fuseShow_ad me, tFuse_s
  [  0] getparam 1 .............................. <tFuse_s>
  [  2] pushsymb 555 ............................ <#word>
  [  5] pushint8 1 .............................. <1>
  [  7] pusharglist 3 ........................... <tFuse_s, #word, 1>
  [  9] objcall 150 ............................. <tFuse_s.word[1]>
  [ 11] setprop 529 ............................. adIdNum = tFuse_s.word[1]
  [ 14] getparam 1 .............................. <tFuse_s>
  [ 16] pushsymb 555 ............................ <#word>
  [ 19] pushint8 2 .............................. <2>
  [ 21] pusharglist 3 ........................... <tFuse_s, #word, 2>
  [ 23] objcall 150 ............................. <tFuse_s.word[2]>
  [ 25] setprop 556 ............................. adMember = tFuse_s.word[2]
  [ 28] getparam 1 .............................. <tFuse_s>
  [ 30] pushsymb 555 ............................ <#word>
  [ 33] pushint8 3 .............................. <3>
  [ 35] pusharglist 3 ........................... <tFuse_s, #word, 3>
  [ 37] objcall 150 ............................. <tFuse_s.word[3]>
  [ 39] setprop 557 ............................. adLink = tFuse_s.word[3]
  [ 42] pushzero ................................ <0>
  [ 43] setprop 526 ............................. pTextShowState = 0
  [ 46] ret
end

on fuseShow_Activate_ad me
  [  0] getprop 556 ............................. <adMember>
  [  3] pusharglist 1 ........................... <adMember>
  [  5] extcall 181 ............................. <voidp(adMember)>
  [  7] not ..................................... <not voidp(adMember)>
  [  8] jmpifz [131] ............................ if not voidp(adMember) then
  [ 11] pushint8 1 .............................. <1>
  [ 13] setprop 527 ............................. StateOfAd = 1
  [ 16] pushzero ................................ <0>
  [ 17] setprop 528 ............................. AdWaitScore = 0
  [ 20] pushcons 6 .............................. <"fade">
  [ 22] setprop 525 ............................. pTransition = "fade"
  [ 25] pusharglist 0 ........................... <>
  [ 27] extcall 198 ............................. <VOID>
  [ 29] setprop 519 ............................. pTargetObj = VOID
  [ 32] pushzero ................................ <0>
  [ 33] setprop 518 ............................. pTransitState = 0
  [ 36] pushint8 10 ............................. <10>
  [ 38] setprop 545 ............................. pFadeSpeed = 10
  [ 41] pushint16 12000 ......................... <12000>
  [ 44] getmovieprop 48 ......................... <the milliSeconds>
  [ 46] add ..................................... <12000 + the milliSeconds>
  [ 47] setprop 559 ............................. adShowTime = 12000 + the milliSeconds
  [ 50] getprop 512 ............................. <pheight>
  [ 53] getprop 513 ............................. <pwidth>
  [ 56] pushint8 16 ............................. <16>
  [ 58] pusharglist 3 ........................... <pheight, pwidth, 16>
  [ 60] extcall 86 .............................. <image(pheight, pwidth, 16)>
  [ 62] setprop 544 ............................. pTransitBuffer = image(pheight, pwidth, 16)
  [ 65] getprop 544 ............................. <pTransitBuffer>
  [ 68] pushzero ................................ <0>
  [ 69] pushzero ................................ <0>
  [ 70] getprop 512 ............................. <pheight>
  [ 73] getprop 513 ............................. <pwidth>
  [ 76] pusharglist 4 ........................... <0, 0, pheight, pwidth>
  [ 78] extcall 92 .............................. <rect(0, 0, pheight, pwidth)>
  [ 80] pushzero ................................ <0>
  [ 81] pushzero ................................ <0>
  [ 82] pushzero ................................ <0>
  [ 83] pusharglist 3 ........................... <0, 0, 0>
  [ 85] extcall 87 .............................. <rgb(0, 0, 0)>
  [ 87] pusharglistnoret 3 ...................... <pTransitBuffer, rect(0, 0, pheight, pwidth), rgb(0, 0, 0)>
  [ 89] objcall 93 .............................. pTransitBuffer.fill(rect(0, 0, pheight, pwidth), rgb(0, 0, 0))
  [ 91] getprop 522 ............................. <pSprite>
  [ 94] pusharglist 1 ........................... <pSprite>
  [ 96] extcall 181 ............................. <voidp(pSprite)>
  [ 98] not ..................................... <not voidp(pSprite)>
  [ 99] jmpifz [131] ............................ if not voidp(pSprite) then
  [102] getprop 522 ............................. <pSprite>
  [105] pushcons 12 ............................. <"cursor.finger">
  [107] pusharglist 1 ........................... <"cursor.finger">
  [109] extcall 74 .............................. <getmemnum("cursor.finger")>
  [111] pusharglist 1 ........................... <getmemnum("cursor.finger")>
  [113] extcall 73 .............................. <member(getmemnum("cursor.finger"))>
  [115] pushcons 13 ............................. <"cursor.finger.mask">
  [117] pusharglist 1 ........................... <"cursor.finger.mask">
  [119] extcall 74 .............................. <getmemnum("cursor.finger.mask")>
  [121] pusharglist 1 ........................... <getmemnum("cursor.finger.mask")>
  [123] extcall 73 .............................. <member(getmemnum("cursor.finger.mask"))>
  [125] pusharglist 2 ........................... <[member(getmemnum("cursor.finger")), member(getmemnum("cursor.finger.mask"))]>
  [127] pushlist ................................ <[member(getmemnum("cursor.finger")), member(getmemnum("cursor.finger.mask"))]>
  [128] setobjprop 466 .......................... pSprite.cursor = [member(getmemnum("cursor.finger")), member(getmemnum("cursor.finger.mask"))]
  [131] ret
end

on mouseDown me
  [  0] getprop 557 ............................. <adLink>
  [  3] pusharglist 1 ........................... <adLink>
  [  5] extcall 181 ............................. <voidp(adLink)>
  [  7] jmpifz [ 20] ............................ if voidp(adLink) then
  [ 10] pusharglistnoret 0 ...................... <>
  [ 12] extcall 560 ............................. dontPassEvent()
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 15 .............................. return 0
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 14 ........................... <me.spriteNum>
  [ 24] pushint8 6 .............................. <6>
  [ 26] get 6 ................................... <the cursor of sprite me.spriteNum>
  [ 28] pushzero ................................ <0>
  [ 29] nteq .................................... <the cursor of sprite me.spriteNum <> 0>
  [ 30] jmpifz [ 72] ............................ if the cursor of sprite me.spriteNum <> 0 then
  [ 33] getprop 557 ............................. <adLink>
  [ 36] pushcons 14 ............................. <"http:">
  [ 38] containsstr ............................. <adLink contains "http:">
  [ 39] jmpifz [ 50] ............................ if adLink contains "http:" then
  [ 42] getprop 557 ............................. <adLink>
  [ 45] pusharglistnoret 1 ...................... <adLink>
  [ 47] extcall 561 ............................. openNetPage(adLink)
  [ 50] pushcons 15 ............................. <"connection.info.id">
  [ 52] pusharglist 1 ........................... <"connection.info.id">
  [ 54] extcall 290 ............................. <getVariable("connection.info.id")>
  [ 57] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 59] extcall 289 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 62] pushcons 16 ............................. <"ADCLICK">
  [ 64] getprop 529 ............................. <adIdNum>
  [ 67] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.info.id")), "ADCLICK", adIdNum>
  [ 69] objcall 291 ............................. getConnection(getVariable("connection.info.id")).send("ADCLICK", adIdNum)
  [ 72] ret
end

on prepare me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 198 ............................. <VOID>
  [  4] setprop 562 ............................. pJumperObj = VOID
  [  7] pushsymb 369 ............................ <#playpackpelle_obj>
  [ 10] pusharglist 1 ........................... <#playpackpelle_obj>
  [ 12] extcall 131 ............................. <objectExists(#playpackpelle_obj)>
  [ 14] jmpifz [ 30] ............................ if objectExists(#playpackpelle_obj) then / else
  [ 17] pushsymb 369 ............................ <#playpackpelle_obj>
  [ 20] pusharglist 1 ........................... <#playpackpelle_obj>
  [ 22] extcall 20 .............................. <getObject(#playpackpelle_obj)>
  [ 24] setprop 562 ............................. pJumperObj = getObject(#playpackpelle_obj)
  [ 27] jmp [ 50]
  [ 30] pushsymb 368 ............................ <#jumpingpelle_obj>
  [ 33] pusharglist 1 ........................... <#jumpingpelle_obj>
  [ 35] extcall 131 ............................. <objectExists(#jumpingpelle_obj)>
  [ 37] jmpifz [ 50] ............................ if objectExists(#jumpingpelle_obj) then
  [ 40] pushsymb 368 ............................ <#jumpingpelle_obj>
  [ 43] pusharglist 1 ........................... <#jumpingpelle_obj>
  [ 45] extcall 20 .............................. <getObject(#jumpingpelle_obj)>
  [ 47] setprop 562 ............................. pJumperObj = getObject(#jumpingpelle_obj)
  [ 50] getprop 562 ............................. <pJumperObj>
  [ 53] pusharglist 1 ........................... <pJumperObj>
  [ 55] extcall 181 ............................. <voidp(pJumperObj)>
  [ 57] not ..................................... <not voidp(pJumperObj)>
  [ 58] jmpifz [181] ............................ if not voidp(pJumperObj) then
  [ 61] getprop 562 ............................. <pJumperObj>
  [ 64] getobjprop 17 ........................... <pJumperObj.pJumpReady>
  [ 66] jmpifz [ 79] ............................ if pJumperObj.pJumpReady then / else
  [ 69] pusharglist 0 ........................... <>
  [ 71] extcall 198 ............................. <VOID>
  [ 73] setprop 562 ............................. pJumperObj = VOID
  [ 76] jmp [181]
  [ 79] getprop 562 ............................. <pJumperObj>
  [ 82] getobjprop 75 ........................... <pJumperObj.pScreenUpOrDown>
  [ 84] pushsymb 125 ............................ <#down>
  [ 86] eq ...................................... <pJumperObj.pScreenUpOrDown = #down>
  [ 87] jmpifz [137] ............................ if pJumperObj.pScreenUpOrDown = #down then / else
  [ 90] pusharglist 0 ........................... <>
  [ 92] extcall 198 ............................. <VOID>
  [ 94] setlocal 0 .............................. bufferImage = VOID
  [ 96] pushint8 4 .............................. <4>
  [ 98] setprop 516 ............................. pZoom = 4
  [101] pushzero ................................ <0>
  [102] setprop 518 ............................. pTransitState = 0
  [105] getparam 0 .............................. <me>
  [107] getprop 562 ............................. <pJumperObj>
  [110] getobjprop 67 ........................... <pJumperObj.pMyLoc>
  [112] pushzero ................................ <0>
  [113] pushint8 2 .............................. <2>
  [115] pusharglist 2 ........................... <0, 2>
  [117] extcall 41 .............................. <point(0, 2)>
  [119] sub ..................................... <pJumperObj.pMyLoc - point(0, 2)>
  [120] pusharglistnoret 2 ...................... <me, pJumperObj.pMyLoc - point(0, 2)>
  [122] objcall 511 ............................. me.cameraCrop(pJumperObj.pMyLoc - point(0, 2))
  [125] pushint8 1 .............................. <1>
  [127] setprop 528 ............................. AdWaitScore = 1
  [130] pushzero ................................ <0>
  [131] setprop 527 ............................. StateOfAd = 0
  [134] jmp [181]
  [137] getprop 562 ............................. <pJumperObj>
  [140] getobjprop 88 ........................... <pJumperObj.pPelleBgImg>
  [142] pusharglist 1 ........................... <pJumperObj.pPelleBgImg>
  [144] extcall 181 ............................. <voidp(pJumperObj.pPelleBgImg)>
  [146] not ..................................... <not voidp(pJumperObj.pPelleBgImg)>
  [147] jmpifz [181] ............................ if not voidp(pJumperObj.pPelleBgImg) then
  [150] pushcons 1 .............................. <"fuse_screen">
  [152] pusharglist 1 ........................... <"fuse_screen">
  [154] extcall 74 .............................. <getmemnum("fuse_screen")>
  [156] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [158] extcall 73 .............................. <member(getmemnum("fuse_screen"))>
  [160] getchainedprop 86 ....................... <member(getmemnum("fuse_screen")).image>
  [162] getprop 562 ............................. <pJumperObj>
  [165] getobjprop 88 ........................... <pJumperObj.pPelleBgImg>
  [167] getprop 523 ............................. <pScrImg>
  [170] getobjprop 92 ........................... <pScrImg.rect>
  [172] getprop 523 ............................. <pScrImg>
  [175] getobjprop 92 ........................... <pScrImg.rect>
  [177] pusharglistnoret 4 ...................... <member(getmemnum("fuse_screen")).image, pJumperObj.pPelleBgImg, pScrImg.rect, pScrImg.rect>
  [179] objcall 97 .............................. member(getmemnum("fuse_screen")).image.copyPixels(pJumperObj.pPelleBgImg, pScrImg.rect, pScrImg.rect)
  [181] getprop 562 ............................. <pJumperObj>
  [184] pusharglist 1 ........................... <pJumperObj>
  [186] extcall 181 ............................. <voidp(pJumperObj)>
  [188] getprop 526 ............................. <pTextShowState>
  [191] pushzero ................................ <0>
  [192] eq ...................................... <pTextShowState = 0>
  [193] and ..................................... <voidp(pJumperObj) and (pTextShowState = 0)>
  [194] getprop 527 ............................. <StateOfAd>
  [197] pushzero ................................ <0>
  [198] eq ...................................... <StateOfAd = 0>
  [199] and ..................................... <voidp(pJumperObj) and (pTextShowState = 0) and (StateOfAd = 0)>
  [200] jmpifz [365] ............................ if voidp(pJumperObj) and (pTextShowState = 0) and (StateOfAd = 0) then / else
  [203] getprop 525 ............................. <pTransition>
  [206] pushzero ................................ <0>
  [207] eq ...................................... <pTransition = 0>
  [208] jmpifz [237] ............................ if pTransition = 0 then / else
  [211] getprop 519 ............................. <pTargetObj>
  [214] pusharglist 1 ........................... <pTargetObj>
  [216] extcall 181 ............................. <voidp(pTargetObj)>
  [218] not ..................................... <not voidp(pTargetObj)>
  [219] jmpifz [234] ............................ if not voidp(pTargetObj) then
  [222] getparam 0 .............................. <me>
  [224] getprop 520 ............................. <pTargetSpr>
  [227] getobjprop 62 ........................... <pTargetSpr.loc>
  [229] pusharglistnoret 2 ...................... <me, pTargetSpr.loc>
  [231] objcall 508 ............................. me.cameraPan(pTargetSpr.loc)
  [234] jmp [362]
  [237] getprop 525 ............................. <pTransition>
  [240] peek 0 .................................. case pTransition of
  [242] pushcons 8 .............................. <"cameraPan">
  [244] eq
  [245] jmpifz [274] ............................ (case) "cameraPan":
  [248] getprop 519 ............................. <pTargetObj>
  [251] pusharglist 1 ........................... <pTargetObj>
  [253] extcall 181 ............................. <voidp(pTargetObj)>
  [255] not ..................................... <not voidp(pTargetObj)>
  [256] jmpifz [271] ............................ if not voidp(pTargetObj) then
  [259] getparam 0 .............................. <me>
  [261] getprop 520 ............................. <pTargetSpr>
  [264] getobjprop 62 ........................... <pTargetSpr.loc>
  [266] pusharglistnoret 2 ...................... <me, pTargetSpr.loc>
  [268] objcall 508 ............................. me.cameraPan(pTargetSpr.loc)
  [271] jmp [360]
  [274] peek 0
  [276] pushcons 6 .............................. <"fade">
  [278] eq
  [279] jmpifz [360] ............................ (case) "fade":
  [282] getprop 519 ............................. <pTargetObj>
  [285] pusharglist 1 ........................... <pTargetObj>
  [287] extcall 181 ............................. <voidp(pTargetObj)>
  [289] not ..................................... <not voidp(pTargetObj)>
  [290] jmpifz [360] ............................ if not voidp(pTargetObj) then
  [293] getprop 522 ............................. <pSprite>
  [296] getobjprop 73 ........................... <pSprite.member>
  [298] pushcons 1 .............................. <"fuse_screen">
  [300] pusharglist 1 ........................... <"fuse_screen">
  [302] extcall 74 .............................. <getmemnum("fuse_screen")>
  [304] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [306] extcall 73 .............................. <member(getmemnum("fuse_screen"))>
  [308] nteq .................................... <pSprite.member <> member(getmemnum("fuse_screen"))>
  [309] jmpifz [348] ............................ if pSprite.member <> member(getmemnum("fuse_screen")) then
  [312] getprop 522 ............................. <pSprite>
  [315] pushcons 1 .............................. <"fuse_screen">
  [317] pusharglist 1 ........................... <"fuse_screen">
  [319] extcall 74 .............................. <getmemnum("fuse_screen")>
  [321] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [323] extcall 73 .............................. <member(getmemnum("fuse_screen"))>
  [325] setobjprop 73 ........................... pSprite.member = member(getmemnum("fuse_screen"))
  [327] getprop 522 ............................. <pSprite>
  [330] pushzero ................................ <0>
  [331] setobjprop 466 .......................... pSprite.cursor = 0
  [334] pusharglist 0 ........................... <>
  [336] extcall 198 ............................. <VOID>
  [338] setprop 529 ............................. adIdNum = VOID
  [341] pusharglist 0 ........................... <>
  [343] extcall 198 ............................. <VOID>
  [345] setprop 557 ............................. adLink = VOID
  [348] getparam 0 .............................. <me>
  [350] getprop 520 ............................. <pTargetSpr>
  [353] getobjprop 62 ........................... <pTargetSpr.loc>
  [355] pusharglistnoret 2 ...................... <me, pTargetSpr.loc>
  [357] objcall 509 ............................. me.cameraFade(pTargetSpr.loc)
  [360] pop 1 ................................... end case
  [362] jmp [386]
  [365] getprop 527 ............................. <StateOfAd>
  [368] pushzero ................................ <0>
  [369] nteq .................................... <StateOfAd <> 0>
  [370] getprop 528 ............................. <AdWaitScore>
  [373] pushzero ................................ <0>
  [374] eq ...................................... <AdWaitScore = 0>
  [375] and ..................................... <(StateOfAd <> 0) and (AdWaitScore = 0)>
  [376] jmpifz [386] ............................ if (StateOfAd <> 0) and (AdWaitScore = 0) then
  [379] getparam 0 .............................. <me>
  [381] pusharglistnoret 1 ...................... <me>
  [383] objcall 510 ............................. me.ad_system()
  [386] getprop 526 ............................. <pTextShowState>
  [389] pushzero ................................ <0>
  [390] nteq .................................... <pTextShowState <> 0>
  [391] jmpifz [421] ............................ if pTextShowState <> 0 then
  [394] getprop 562 ............................. <pJumperObj>
  [397] pusharglist 1 ........................... <pJumperObj>
  [399] extcall 181 ............................. <voidp(pJumperObj)>
  [401] jmpifz [414] ............................ if voidp(pJumperObj) then
  [404] getparam 0 .............................. <me>
  [406] getprop 521 ............................. <pLastCropPoint>
  [409] pusharglistnoret 2 ...................... <me, pLastCropPoint>
  [411] objcall 511 ............................. me.cameraCrop(pLastCropPoint)
  [414] getparam 0 .............................. <me>
  [416] pusharglistnoret 1 ...................... <me>
  [418] objcall 507 ............................. me.showText()
  [421] ret
end

on showText me
  [  0] getprop 526 ............................. <pTextShowState>
  [  3] getprop 547 ............................. <pTextImgBuffer>
  [  6] getobjprop 91 ........................... <pTextImgBuffer.height>
  [  8] lt ...................................... <pTextShowState < pTextImgBuffer.height>
  [  9] jmpifz [ 81] ............................ if pTextShowState < pTextImgBuffer.height then / else
  [ 12] getprop 523 ............................. <pScrImg>
  [ 15] pushcons 17 ............................. <"fuse_screen.bgbox">
  [ 17] pusharglist 1 ........................... <"fuse_screen.bgbox">
  [ 19] extcall 74 .............................. <getmemnum("fuse_screen.bgbox")>
  [ 21] pusharglist 1 ........................... <getmemnum("fuse_screen.bgbox")>
  [ 23] extcall 73 .............................. <member(getmemnum("fuse_screen.bgbox"))>
  [ 25] getobjprop 86 ........................... <member(getmemnum("fuse_screen.bgbox")).image>
  [ 27] pushzero ................................ <0>
  [ 28] getprop 513 ............................. <pwidth>
  [ 31] getprop 526 ............................. <pTextShowState>
  [ 34] sub ..................................... <pwidth - pTextShowState>
  [ 35] getprop 512 ............................. <pheight>
  [ 38] getprop 513 ............................. <pwidth>
  [ 41] pusharglist 4 ........................... <0, pwidth - pTextShowState, pheight, pwidth>
  [ 43] extcall 92 .............................. <rect(0, pwidth - pTextShowState, pheight, pwidth)>
  [ 45] pushcons 17 ............................. <"fuse_screen.bgbox">
  [ 47] pusharglist 1 ........................... <"fuse_screen.bgbox">
  [ 49] extcall 74 .............................. <getmemnum("fuse_screen.bgbox")>
  [ 51] pusharglist 1 ........................... <getmemnum("fuse_screen.bgbox")>
  [ 53] extcall 73 .............................. <member(getmemnum("fuse_screen.bgbox"))>
  [ 55] getobjprop 92 ........................... <member(getmemnum("fuse_screen.bgbox")).rect>
  [ 57] pushsymb 329 ............................ <#blend>
  [ 60] pushint8 40 ............................. <40>
  [ 62] pusharglist 2 ........................... <[#blend: 40]>
  [ 64] pushproplist ............................ <[#blend: 40]>
  [ 65] pusharglistnoret 5 ...................... <pScrImg, member(getmemnum("fuse_screen.bgbox")).image, rect(0, pwidth - pTextShowState, pheight, pwidth), member(getmemnum("fuse_screen.bgbox")).rect, [#blend: 40]>
  [ 67] objcall 97 .............................. pScrImg.copyPixels(member(getmemnum("fuse_screen.bgbox")).image, rect(0, pwidth - pTextShowState, pheight, pwidth), member(getmemnum("fuse_screen.bgbox")).rect, [#blend: 40])
  [ 69] getprop 526 ............................. <pTextShowState>
  [ 72] pushint8 2 .............................. <2>
  [ 74] add ..................................... <pTextShowState + 2>
  [ 75] setprop 526 ............................. pTextShowState = pTextShowState + 2
  [ 78] jmp [518]
  [ 81] getprop 526 ............................. <pTextShowState>
  [ 84] pushint8 20 ............................. <20>
  [ 86] add ..................................... <pTextShowState + 20>
  [ 87] setprop 526 ............................. pTextShowState = pTextShowState + 20
  [ 90] getprop 547 ............................. <pTextImgBuffer>
  [ 93] getobjprop 90 ........................... <pTextImgBuffer.width>
  [ 95] getprop 526 ............................. <pTextShowState>
  [ 98] getprop 547 ............................. <pTextImgBuffer>
  [101] getobjprop 91 ........................... <pTextImgBuffer.height>
  [103] sub ..................................... <pTextShowState - pTextImgBuffer.height>
  [104] sub ..................................... <pTextImgBuffer.width - (pTextShowState - pTextImgBuffer.height)>
  [105] setlocal 0 .............................. textLocH = pTextImgBuffer.width - (pTextShowState - pTextImgBuffer.height)
  [107] getlocal 0 .............................. <textLocH>
  [109] pushzero ................................ <0>
  [110] gt ...................................... <textLocH > 0>
  [111] jmpifz [235] ............................ if textLocH > 0 then / else
  [114] getprop 523 ............................. <pScrImg>
  [117] pushcons 17 ............................. <"fuse_screen.bgbox">
  [119] pusharglist 1 ........................... <"fuse_screen.bgbox">
  [121] extcall 74 .............................. <getmemnum("fuse_screen.bgbox")>
  [123] pusharglist 1 ........................... <getmemnum("fuse_screen.bgbox")>
  [125] extcall 73 .............................. <member(getmemnum("fuse_screen.bgbox"))>
  [127] getobjprop 86 ........................... <member(getmemnum("fuse_screen.bgbox")).image>
  [129] pushzero ................................ <0>
  [130] getprop 513 ............................. <pwidth>
  [133] getprop 547 ............................. <pTextImgBuffer>
  [136] getobjprop 91 ........................... <pTextImgBuffer.height>
  [138] sub ..................................... <pwidth - pTextImgBuffer.height>
  [139] pushint8 2 .............................. <2>
  [141] sub ..................................... <pwidth - pTextImgBuffer.height - 2>
  [142] getprop 512 ............................. <pheight>
  [145] getprop 513 ............................. <pwidth>
  [148] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth>
  [150] extcall 92 .............................. <rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth)>
  [152] pushcons 17 ............................. <"fuse_screen.bgbox">
  [154] pusharglist 1 ........................... <"fuse_screen.bgbox">
  [156] extcall 74 .............................. <getmemnum("fuse_screen.bgbox")>
  [158] pusharglist 1 ........................... <getmemnum("fuse_screen.bgbox")>
  [160] extcall 73 .............................. <member(getmemnum("fuse_screen.bgbox"))>
  [162] getobjprop 92 ........................... <member(getmemnum("fuse_screen.bgbox")).rect>
  [164] pushsymb 329 ............................ <#blend>
  [167] pushint8 40 ............................. <40>
  [169] pusharglist 2 ........................... <[#blend: 40]>
  [171] pushproplist ............................ <[#blend: 40]>
  [172] pusharglistnoret 5 ...................... <pScrImg, member(getmemnum("fuse_screen.bgbox")).image, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), member(getmemnum("fuse_screen.bgbox")).rect, [#blend: 40]>
  [174] objcall 97 .............................. pScrImg.copyPixels(member(getmemnum("fuse_screen.bgbox")).image, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), member(getmemnum("fuse_screen.bgbox")).rect, [#blend: 40])
  [176] getprop 523 ............................. <pScrImg>
  [179] getprop 547 ............................. <pTextImgBuffer>
  [182] getlocal 0 .............................. <textLocH>
  [184] getprop 513 ............................. <pwidth>
  [187] getprop 547 ............................. <pTextImgBuffer>
  [190] getobjprop 91 ........................... <pTextImgBuffer.height>
  [192] sub ..................................... <pwidth - pTextImgBuffer.height>
  [193] getprop 512 ............................. <pheight>
  [196] getlocal 0 .............................. <textLocH>
  [198] add ..................................... <pheight + textLocH>
  [199] getprop 513 ............................. <pwidth>
  [202] pusharglist 4 ........................... <textLocH, pwidth - pTextImgBuffer.height, pheight + textLocH, pwidth>
  [204] extcall 92 .............................. <rect(textLocH, pwidth - pTextImgBuffer.height, pheight + textLocH, pwidth)>
  [206] getprop 547 ............................. <pTextImgBuffer>
  [209] getobjprop 92 ........................... <pTextImgBuffer.rect>
  [211] pushsymb 329 ............................ <#blend>
  [214] pushint8 100 ............................ <100>
  [216] getlocal 0 .............................. <textLocH>
  [218] pushint8 8 .............................. <8>
  [220] sub ..................................... <textLocH - 8>
  [221] sub ..................................... <100 - (textLocH - 8)>
  [222] pushint8 20 ............................. <20>
  [224] sub ..................................... <100 - (textLocH - 8) - 20>
  [225] pusharglist 2 ........................... <[#blend: 100 - (textLocH - 8) - 20]>
  [227] pushproplist ............................ <[#blend: 100 - (textLocH - 8) - 20]>
  [228] pusharglistnoret 5 ...................... <pScrImg, pTextImgBuffer, rect(textLocH, pwidth - pTextImgBuffer.height, pheight + textLocH, pwidth), pTextImgBuffer.rect, [#blend: 100 - (textLocH - 8) - 20]>
  [230] objcall 97 .............................. pScrImg.copyPixels(pTextImgBuffer, rect(textLocH, pwidth - pTextImgBuffer.height, pheight + textLocH, pwidth), pTextImgBuffer.rect, [#blend: 100 - (textLocH - 8) - 20])
  [232] jmp [518]
  [235] getmovieprop 48 ......................... <the milliSeconds>
  [237] getprop 549 ............................. <pTextShowTime>
  [240] lt ...................................... <the milliSeconds < pTextShowTime>
  [241] jmpifz [371] ............................ if the milliSeconds < pTextShowTime then / else
  [244] getprop 550 ............................. <pTextBlend>
  [247] pushint8 80 ............................. <80>
  [249] gt ...................................... <pTextBlend > 80>
  [250] jmpifz [262] ............................ if pTextBlend > 80 then
  [253] getprop 550 ............................. <pTextBlend>
  [256] pushint8 10 ............................. <10>
  [258] sub ..................................... <pTextBlend - 10>
  [259] setprop 550 ............................. pTextBlend = pTextBlend - 10
  [262] getprop 523 ............................. <pScrImg>
  [265] pushcons 17 ............................. <"fuse_screen.bgbox">
  [267] pusharglist 1 ........................... <"fuse_screen.bgbox">
  [269] extcall 74 .............................. <getmemnum("fuse_screen.bgbox")>
  [271] pusharglist 1 ........................... <getmemnum("fuse_screen.bgbox")>
  [273] extcall 73 .............................. <member(getmemnum("fuse_screen.bgbox"))>
  [275] getobjprop 86 ........................... <member(getmemnum("fuse_screen.bgbox")).image>
  [277] pushzero ................................ <0>
  [278] getprop 513 ............................. <pwidth>
  [281] getprop 547 ............................. <pTextImgBuffer>
  [284] getobjprop 91 ........................... <pTextImgBuffer.height>
  [286] sub ..................................... <pwidth - pTextImgBuffer.height>
  [287] pushint8 2 .............................. <2>
  [289] sub ..................................... <pwidth - pTextImgBuffer.height - 2>
  [290] getprop 512 ............................. <pheight>
  [293] getprop 513 ............................. <pwidth>
  [296] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth>
  [298] extcall 92 .............................. <rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth)>
  [300] pushcons 17 ............................. <"fuse_screen.bgbox">
  [302] pusharglist 1 ........................... <"fuse_screen.bgbox">
  [304] extcall 74 .............................. <getmemnum("fuse_screen.bgbox")>
  [306] pusharglist 1 ........................... <getmemnum("fuse_screen.bgbox")>
  [308] extcall 73 .............................. <member(getmemnum("fuse_screen.bgbox"))>
  [310] getobjprop 92 ........................... <member(getmemnum("fuse_screen.bgbox")).rect>
  [312] pushsymb 329 ............................ <#blend>
  [315] pushint8 40 ............................. <40>
  [317] pusharglist 2 ........................... <[#blend: 40]>
  [319] pushproplist ............................ <[#blend: 40]>
  [320] pusharglistnoret 5 ...................... <pScrImg, member(getmemnum("fuse_screen.bgbox")).image, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), member(getmemnum("fuse_screen.bgbox")).rect, [#blend: 40]>
  [322] objcall 97 .............................. pScrImg.copyPixels(member(getmemnum("fuse_screen.bgbox")).image, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), member(getmemnum("fuse_screen.bgbox")).rect, [#blend: 40])
  [324] getprop 523 ............................. <pScrImg>
  [327] getprop 547 ............................. <pTextImgBuffer>
  [330] pushzero ................................ <0>
  [331] getprop 513 ............................. <pwidth>
  [334] getprop 547 ............................. <pTextImgBuffer>
  [337] getobjprop 91 ........................... <pTextImgBuffer.height>
  [339] sub ..................................... <pwidth - pTextImgBuffer.height>
  [340] getprop 512 ............................. <pheight>
  [343] getprop 513 ............................. <pwidth>
  [346] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height, pheight, pwidth>
  [348] extcall 92 .............................. <rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth)>
  [350] getprop 547 ............................. <pTextImgBuffer>
  [353] getobjprop 92 ........................... <pTextImgBuffer.rect>
  [355] pushsymb 329 ............................ <#blend>
  [358] getprop 550 ............................. <pTextBlend>
  [361] pusharglist 2 ........................... <[#blend: pTextBlend]>
  [363] pushproplist ............................ <[#blend: pTextBlend]>
  [364] pusharglistnoret 5 ...................... <pScrImg, pTextImgBuffer, rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth), pTextImgBuffer.rect, [#blend: pTextBlend]>
  [366] objcall 97 .............................. pScrImg.copyPixels(pTextImgBuffer, rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth), pTextImgBuffer.rect, [#blend: pTextBlend])
  [368] jmp [518]
  [371] getprop 550 ............................. <pTextBlend>
  [374] pushzero ................................ <0>
  [375] gt ...................................... <pTextBlend > 0>
  [376] jmpifz [388] ............................ if pTextBlend > 0 then
  [379] getprop 550 ............................. <pTextBlend>
  [382] pushint8 8 .............................. <8>
  [384] sub ..................................... <pTextBlend - 8>
  [385] setprop 550 ............................. pTextBlend = pTextBlend - 8
  [388] getprop 550 ............................. <pTextBlend>
  [391] pushzero ................................ <0>
  [392] lteq .................................... <pTextBlend <= 0>
  [393] jmpifz [404] ............................ if pTextBlend <= 0 then
  [396] pushzero ................................ <0>
  [397] setprop 550 ............................. pTextBlend = 0
  [400] pushzero ................................ <0>
  [401] setprop 526 ............................. pTextShowState = 0
  [404] getprop 523 ............................. <pScrImg>
  [407] pushcons 17 ............................. <"fuse_screen.bgbox">
  [409] pusharglist 1 ........................... <"fuse_screen.bgbox">
  [411] extcall 74 .............................. <getmemnum("fuse_screen.bgbox")>
  [413] pusharglist 1 ........................... <getmemnum("fuse_screen.bgbox")>
  [415] extcall 73 .............................. <member(getmemnum("fuse_screen.bgbox"))>
  [417] getobjprop 86 ........................... <member(getmemnum("fuse_screen.bgbox")).image>
  [419] pushzero ................................ <0>
  [420] getprop 513 ............................. <pwidth>
  [423] getprop 547 ............................. <pTextImgBuffer>
  [426] getobjprop 91 ........................... <pTextImgBuffer.height>
  [428] sub ..................................... <pwidth - pTextImgBuffer.height>
  [429] pushint8 2 .............................. <2>
  [431] sub ..................................... <pwidth - pTextImgBuffer.height - 2>
  [432] getprop 512 ............................. <pheight>
  [435] getprop 513 ............................. <pwidth>
  [438] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth>
  [440] extcall 92 .............................. <rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth)>
  [442] pushcons 17 ............................. <"fuse_screen.bgbox">
  [444] pusharglist 1 ........................... <"fuse_screen.bgbox">
  [446] extcall 74 .............................. <getmemnum("fuse_screen.bgbox")>
  [448] pusharglist 1 ........................... <getmemnum("fuse_screen.bgbox")>
  [450] extcall 73 .............................. <member(getmemnum("fuse_screen.bgbox"))>
  [452] getobjprop 92 ........................... <member(getmemnum("fuse_screen.bgbox")).rect>
  [454] pushsymb 329 ............................ <#blend>
  [457] getprop 550 ............................. <pTextBlend>
  [460] pushint8 2 .............................. <2>
  [462] div ..................................... <pTextBlend / 2>
  [463] pusharglist 1 ........................... <pTextBlend / 2>
  [465] extcall 173 ............................. <integer(pTextBlend / 2)>
  [467] pusharglist 2 ........................... <[#blend: integer(pTextBlend / 2)]>
  [469] pushproplist ............................ <[#blend: integer(pTextBlend / 2)]>
  [470] pusharglistnoret 5 ...................... <pScrImg, member(getmemnum("fuse_screen.bgbox")).image, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), member(getmemnum("fuse_screen.bgbox")).rect, [#blend: integer(pTextBlend / 2)]>
  [472] objcall 97 .............................. pScrImg.copyPixels(member(getmemnum("fuse_screen.bgbox")).image, rect(0, pwidth - pTextImgBuffer.height - 2, pheight, pwidth), member(getmemnum("fuse_screen.bgbox")).rect, [#blend: integer(pTextBlend / 2)])
  [474] getprop 523 ............................. <pScrImg>
  [477] getprop 547 ............................. <pTextImgBuffer>
  [480] pushzero ................................ <0>
  [481] getprop 513 ............................. <pwidth>
  [484] getprop 547 ............................. <pTextImgBuffer>
  [487] getobjprop 91 ........................... <pTextImgBuffer.height>
  [489] sub ..................................... <pwidth - pTextImgBuffer.height>
  [490] getprop 512 ............................. <pheight>
  [493] getprop 513 ............................. <pwidth>
  [496] pusharglist 4 ........................... <0, pwidth - pTextImgBuffer.height, pheight, pwidth>
  [498] extcall 92 .............................. <rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth)>
  [500] getprop 547 ............................. <pTextImgBuffer>
  [503] getobjprop 92 ........................... <pTextImgBuffer.rect>
  [505] pushsymb 329 ............................ <#blend>
  [508] getprop 550 ............................. <pTextBlend>
  [511] pusharglist 2 ........................... <[#blend: pTextBlend]>
  [513] pushproplist ............................ <[#blend: pTextBlend]>
  [514] pusharglistnoret 5 ...................... <pScrImg, pTextImgBuffer, rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth), pTextImgBuffer.rect, [#blend: pTextBlend]>
  [516] objcall 97 .............................. pScrImg.copyPixels(pTextImgBuffer, rect(0, pwidth - pTextImgBuffer.height, pheight, pwidth), pTextImgBuffer.rect, [#blend: pTextBlend])
  [518] ret
end

on cameraPan me, tTransitionTargetPoint
  [  0] getprop 521 ............................. <pLastCropPoint>
  [  3] getobjprop 64 ........................... <pLastCropPoint.locH>
  [  5] setlocal 0 .............................. tX = pLastCropPoint.locH
  [  7] getprop 521 ............................. <pLastCropPoint>
  [ 10] getobjprop 66 ........................... <pLastCropPoint.locV>
  [ 12] setlocal 1 .............................. tY = pLastCropPoint.locV
  [ 14] getparam 1 .............................. <tTransitionTargetPoint>
  [ 16] getobjprop 64 ........................... <tTransitionTargetPoint.locH>
  [ 18] getlocal 0 .............................. <tX>
  [ 20] sub ..................................... <tTransitionTargetPoint.locH - tX>
  [ 21] getprop 49 .............................. <pSpeed>
  [ 23] pushint8 100 ............................ <100>
  [ 25] div ..................................... <pSpeed / 100>
  [ 26] mul ..................................... <(tTransitionTargetPoint.locH - tX) * (pSpeed / 100)>
  [ 27] setlocal 2 .............................. tAX = (tTransitionTargetPoint.locH - tX) * (pSpeed / 100)
  [ 29] getparam 1 .............................. <tTransitionTargetPoint>
  [ 31] getobjprop 66 ........................... <tTransitionTargetPoint.locV>
  [ 33] getlocal 1 .............................. <tY>
  [ 35] sub ..................................... <tTransitionTargetPoint.locV - tY>
  [ 36] getprop 49 .............................. <pSpeed>
  [ 38] pushint8 100 ............................ <100>
  [ 40] div ..................................... <pSpeed / 100>
  [ 41] mul ..................................... <(tTransitionTargetPoint.locV - tY) * (pSpeed / 100)>
  [ 42] setlocal 3 .............................. tAY = (tTransitionTargetPoint.locV - tY) * (pSpeed / 100)
  [ 44] getprop 514 ............................. <pVX>
  [ 47] getlocal 2 .............................. <tAX>
  [ 49] add ..................................... <pVX + tAX>
  [ 50] getprop 517 ............................. <pFlexible>
  [ 53] pushint8 100 ............................ <100>
  [ 55] div ..................................... <pFlexible / 100>
  [ 56] mul ..................................... <(pVX + tAX) * (pFlexible / 100)>
  [ 57] setprop 514 ............................. pVX = (pVX + tAX) * (pFlexible / 100)
  [ 60] getprop 515 ............................. <pVY>
  [ 63] getlocal 3 .............................. <tAY>
  [ 65] add ..................................... <pVY + tAY>
  [ 66] getprop 517 ............................. <pFlexible>
  [ 69] pushint8 100 ............................ <100>
  [ 71] div ..................................... <pFlexible / 100>
  [ 72] mul ..................................... <(pVY + tAY) * (pFlexible / 100)>
  [ 73] setprop 515 ............................. pVY = (pVY + tAY) * (pFlexible / 100)
  [ 76] getlocal 0 .............................. <tX>
  [ 78] getprop 514 ............................. <pVX>
  [ 81] add ..................................... <tX + pVX>
  [ 82] setlocal 0 .............................. tX = tX + pVX
  [ 84] getlocal 1 .............................. <tY>
  [ 86] getprop 515 ............................. <pVY>
  [ 89] add ..................................... <tY + pVY>
  [ 90] setlocal 1 .............................. tY = tY + pVY
  [ 92] getparam 0 .............................. <me>
  [ 94] getlocal 0 .............................. <tX>
  [ 96] getlocal 1 .............................. <tY>
  [ 98] pusharglist 2 ........................... <tX, tY>
  [100] extcall 41 .............................. <point(tX, tY)>
  [102] pusharglistnoret 2 ...................... <me, point(tX, tY)>
  [104] objcall 511 ............................. me.cameraCrop(point(tX, tY))
  [107] ret
end

on cameraFade me, tTransitionTargetPoint
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tTransitionTargetPoint>
  [  4] pushint8 1 .............................. <1>
  [  6] pusharglistnoret 3 ...................... <me, tTransitionTargetPoint, 1>
  [  8] objcall 511 ............................. me.cameraCrop(tTransitionTargetPoint, 1)
  [ 11] getprop 518 ............................. <pTransitState>
  [ 14] getprop 545 ............................. <pFadeSpeed>
  [ 17] add ..................................... <pTransitState + pFadeSpeed>
  [ 18] setprop 518 ............................. pTransitState = pTransitState + pFadeSpeed
  [ 21] getprop 523 ............................. <pScrImg>
  [ 24] getprop 544 ............................. <pTransitBuffer>
  [ 27] getprop 544 ............................. <pTransitBuffer>
  [ 30] getobjprop 92 ........................... <pTransitBuffer.rect>
  [ 32] pushcons 1 .............................. <"fuse_screen">
  [ 34] pusharglist 1 ........................... <"fuse_screen">
  [ 36] extcall 74 .............................. <getmemnum("fuse_screen")>
  [ 38] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [ 40] extcall 73 .............................. <member(getmemnum("fuse_screen"))>
  [ 42] getobjprop 92 ........................... <member(getmemnum("fuse_screen")).rect>
  [ 44] pushsymb 329 ............................ <#blend>
  [ 47] getprop 518 ............................. <pTransitState>
  [ 50] pusharglist 2 ........................... <[#blend: pTransitState]>
  [ 52] pushproplist ............................ <[#blend: pTransitState]>
  [ 53] pusharglistnoret 5 ...................... <pScrImg, pTransitBuffer, pTransitBuffer.rect, member(getmemnum("fuse_screen")).rect, [#blend: pTransitState]>
  [ 55] objcall 97 .............................. pScrImg.copyPixels(pTransitBuffer, pTransitBuffer.rect, member(getmemnum("fuse_screen")).rect, [#blend: pTransitState])
  [ 57] getprop 518 ............................. <pTransitState>
  [ 60] pushint8 99 ............................. <99>
  [ 62] gt ...................................... <pTransitState > 99>
  [ 63] jmpifz [ 70] ............................ if pTransitState > 99 then
  [ 66] pushzero ................................ <0>
  [ 67] setprop 525 ............................. pTransition = 0
  [ 70] ret
end

on ad_system me
  [  0] getprop 525 ............................. <pTransition>
  [  3] pushzero ................................ <0>
  [  4] nteq .................................... <pTransition <> 0>
  [  5] jmpifz [ 78] ............................ if pTransition <> 0 then / else
  [  8] getprop 526 ............................. <pTextShowState>
  [ 11] pushzero ................................ <0>
  [ 12] eq ...................................... <pTextShowState = 0>
  [ 13] jmpifz [ 75] ............................ if pTextShowState = 0 then
  [ 16] getprop 518 ............................. <pTransitState>
  [ 19] getprop 545 ............................. <pFadeSpeed>
  [ 22] add ..................................... <pTransitState + pFadeSpeed>
  [ 23] setprop 518 ............................. pTransitState = pTransitState + pFadeSpeed
  [ 26] getprop 523 ............................. <pScrImg>
  [ 29] getprop 544 ............................. <pTransitBuffer>
  [ 32] getprop 544 ............................. <pTransitBuffer>
  [ 35] getobjprop 92 ........................... <pTransitBuffer.rect>
  [ 37] pushcons 1 .............................. <"fuse_screen">
  [ 39] pusharglist 1 ........................... <"fuse_screen">
  [ 41] extcall 74 .............................. <getmemnum("fuse_screen")>
  [ 43] pusharglist 1 ........................... <getmemnum("fuse_screen")>
  [ 45] extcall 73 .............................. <member(getmemnum("fuse_screen"))>
  [ 47] getobjprop 92 ........................... <member(getmemnum("fuse_screen")).rect>
  [ 49] pushsymb 329 ............................ <#blend>
  [ 52] getprop 518 ............................. <pTransitState>
  [ 55] pusharglist 2 ........................... <[#blend: pTransitState]>
  [ 57] pushproplist ............................ <[#blend: pTransitState]>
  [ 58] pusharglistnoret 5 ...................... <pScrImg, pTransitBuffer, pTransitBuffer.rect, member(getmemnum("fuse_screen")).rect, [#blend: pTransitState]>
  [ 60] objcall 97 .............................. pScrImg.copyPixels(pTransitBuffer, pTransitBuffer.rect, member(getmemnum("fuse_screen")).rect, [#blend: pTransitState])
  [ 62] getprop 518 ............................. <pTransitState>
  [ 65] pushint8 99 ............................. <99>
  [ 67] gt ...................................... <pTransitState > 99>
  [ 68] jmpifz [ 75] ............................ if pTransitState > 99 then
  [ 71] pushzero ................................ <0>
  [ 72] setprop 525 ............................. pTransition = 0
  [ 75] jmp [195]
  [ 78] getprop 522 ............................. <pSprite>
  [ 81] getchainedprop 73 ....................... <pSprite.member>
  [ 83] getobjprop 29 ........................... <pSprite.member.name>
  [ 85] getprop 556 ............................. <adMember>
  [ 88] nteq .................................... <pSprite.member.name <> adMember>
  [ 89] jmpifz [108] ............................ if pSprite.member.name <> adMember then
  [ 92] getprop 522 ............................. <pSprite>
  [ 95] getprop 556 ............................. <adMember>
  [ 98] pusharglist 1 ........................... <adMember>
  [100] extcall 74 .............................. <getmemnum(adMember)>
  [102] pusharglist 1 ........................... <getmemnum(adMember)>
  [104] extcall 73 .............................. <member(getmemnum(adMember))>
  [106] setobjprop 73 ........................... pSprite.member = member(getmemnum(adMember))
  [108] getmovieprop 48 ......................... <the milliSeconds>
  [110] getprop 559 ............................. <adShowTime>
  [113] gt ...................................... <the milliSeconds > adShowTime>
  [114] jmpifz [195] ............................ if the milliSeconds > adShowTime then
  [117] pushzero ................................ <0>
  [118] setprop 527 ............................. StateOfAd = 0
  [121] pushcons 6 .............................. <"fade">
  [123] setprop 525 ............................. pTransition = "fade"
  [126] pusharglist 0 ........................... <>
  [128] extcall 198 ............................. <VOID>
  [130] setprop 519 ............................. pTargetObj = VOID
  [133] getprop 512 ............................. <pheight>
  [136] getprop 513 ............................. <pwidth>
  [139] pushint8 16 ............................. <16>
  [141] pusharglist 3 ........................... <pheight, pwidth, 16>
  [143] extcall 86 .............................. <image(pheight, pwidth, 16)>
  [145] setprop 544 ............................. pTransitBuffer = image(pheight, pwidth, 16)
  [148] getprop 544 ............................. <pTransitBuffer>
  [151] pushzero ................................ <0>
  [152] pushzero ................................ <0>
  [153] getprop 512 ............................. <pheight>
  [156] getprop 513 ............................. <pwidth>
  [159] pusharglist 4 ........................... <0, 0, pheight, pwidth>
  [161] extcall 92 .............................. <rect(0, 0, pheight, pwidth)>
  [163] pushzero ................................ <0>
  [164] pushzero ................................ <0>
  [165] pushzero ................................ <0>
  [166] pusharglist 3 ........................... <0, 0, 0>
  [168] extcall 87 .............................. <rgb(0, 0, 0)>
  [170] pusharglistnoret 3 ...................... <pTransitBuffer, rect(0, 0, pheight, pwidth), rgb(0, 0, 0)>
  [172] objcall 93 .............................. pTransitBuffer.fill(rect(0, 0, pheight, pwidth), rgb(0, 0, 0))
  [174] pushzero ................................ <0>
  [175] setprop 518 ............................. pTransitState = 0
  [178] pushint8 20 ............................. <20>
  [180] setprop 545 ............................. pFadeSpeed = 20
  [183] getparam 0 .............................. <me>
  [185] getprop 521 ............................. <pLastCropPoint>
  [188] pushint8 1 .............................. <1>
  [190] pusharglistnoret 3 ...................... <me, pLastCropPoint, 1>
  [192] objcall 511 ............................. me.cameraCrop(pLastCropPoint, 1)
  [195] ret
end

on cameraCrop me, tpoint, tBufferImage
  [  0] getparam 1 .............................. <tpoint>
  [  2] setprop 521 ............................. pLastCropPoint = tpoint
  [  5] getprop 520 ............................. <pTargetSpr>
  [  8] pusharglist 1 ........................... <pTargetSpr>
  [ 10] extcall 181 ............................. <voidp(pTargetSpr)>
  [ 12] jmpifz [ 30] ............................ if voidp(pTargetSpr) then
  [ 15] getparam 0 .............................. <me>
  [ 17] pushcons 18 ............................. <"Target sprite not defined!">
  [ 19] pushsymb 511 ............................ <#cameraCrop>
  [ 22] pusharglist 3 ........................... <me, "Target sprite not defined!", #cameraCrop>
  [ 24] extcall 101 ............................. <error(me, "Target sprite not defined!", #cameraCrop)>
  [ 26] pusharglistnoret 1 ...................... <error(me, "Target sprite not defined!", #cameraCrop)>
  [ 28] extcall 15 .............................. return error(me, "Target sprite not defined!", #cameraCrop)
  [ 30] getprop 562 ............................. <pJumperObj>
  [ 33] pusharglist 1 ........................... <pJumperObj>
  [ 35] extcall 181 ............................. <voidp(pJumperObj)>
  [ 37] jmpifz [ 97] ............................ if voidp(pJumperObj) then
  [ 40] getparam 1 .............................. <tpoint>
  [ 42] pushzero ................................ <0>
  [ 43] pushint8 18 ............................. <18>
  [ 45] inv ..................................... <-18>
  [ 46] pusharglist 2 ........................... <0, -18>
  [ 48] extcall 41 .............................. <point(0, -18)>
  [ 50] add ..................................... <tpoint + point(0, -18)>
  [ 51] setparam 1 .............................. tpoint = tpoint + point(0, -18)
  [ 53] getprop 516 ............................. <pZoom>
  [ 56] pushint8 8 .............................. <8>
  [ 58] eq ...................................... <pZoom = 8>
  [ 59] jmpifz [ 75] ............................ if pZoom = 8 then
  [ 62] getparam 1 .............................. <tpoint>
  [ 64] pushzero ................................ <0>
  [ 65] pushint8 6 .............................. <6>
  [ 67] inv ..................................... <-6>
  [ 68] pusharglist 2 ........................... <0, -6>
  [ 70] extcall 41 .............................. <point(0, -6)>
  [ 72] add ..................................... <tpoint + point(0, -6)>
  [ 73] setparam 1 .............................. tpoint = tpoint + point(0, -6)
  [ 75] getprop 520 ............................. <pTargetSpr>
  [ 78] getobjprop 69 ........................... <pTargetSpr.flipH>
  [ 80] pushzero ................................ <0>
  [ 81] eq ...................................... <pTargetSpr.flipH = 0>
  [ 82] jmpifz [ 97] ............................ if pTargetSpr.flipH = 0 then
  [ 85] getparam 1 .............................. <tpoint>
  [ 87] getprop 27 .............................. <pXFactor>
  [ 89] pushzero ................................ <0>
  [ 90] pusharglist 2 ........................... <pXFactor, 0>
  [ 92] extcall 41 .............................. <point(pXFactor, 0)>
  [ 94] add ..................................... <tpoint + point(pXFactor, 0)>
  [ 95] setparam 1 .............................. tpoint = tpoint + point(pXFactor, 0)
  [ 97] getparam 1 .............................. <tpoint>
  [ 99] getobjprop 64 ........................... <tpoint.locH>
  [101] getprop 512 ............................. <pheight>
  [104] getprop 516 ............................. <pZoom>
  [107] div ..................................... <pheight / pZoom>
  [108] sub ..................................... <tpoint.locH - (pheight / pZoom)>
  [109] pushzero ................................ <0>
  [110] lt ...................................... <(tpoint.locH - (pheight / pZoom)) < 0>
  [111] jmpifz [125] ............................ if (tpoint.locH - (pheight / pZoom)) < 0 then
  [114] getparam 1 .............................. <tpoint>
  [116] getprop 512 ............................. <pheight>
  [119] getprop 516 ............................. <pZoom>
  [122] div ..................................... <pheight / pZoom>
  [123] setobjprop 64 ........................... tpoint.locH = pheight / pZoom
  [125] getparam 1 .............................. <tpoint>
  [127] getobjprop 64 ........................... <tpoint.locH>
  [129] getprop 512 ............................. <pheight>
  [132] getprop 516 ............................. <pZoom>
  [135] div ..................................... <pheight / pZoom>
  [136] add ..................................... <tpoint.locH + (pheight / pZoom)>
  [137] pusharglist 0 ........................... <>
  [139] thebuiltin 568 .......................... <the stageRight>
  [142] pusharglist 0 ........................... <>
  [144] thebuiltin 569 .......................... <the stageLeft>
  [147] sub ..................................... <the stageRight - the stageLeft>
  [148] gt ...................................... <(tpoint.locH + (pheight / pZoom)) > (the stageRight - the stageLeft)>
  [149] jmpifz [175] ............................ if (tpoint.locH + (pheight / pZoom)) > (the stageRight - the stageLeft) then
  [152] getparam 1 .............................. <tpoint>
  [154] pusharglist 0 ........................... <>
  [156] thebuiltin 568 .......................... <the stageRight>
  [159] pusharglist 0 ........................... <>
  [161] thebuiltin 569 .......................... <the stageLeft>
  [164] sub ..................................... <the stageRight - the stageLeft>
  [165] getprop 512 ............................. <pheight>
  [168] getprop 516 ............................. <pZoom>
  [171] div ..................................... <pheight / pZoom>
  [172] sub ..................................... <the stageRight - the stageLeft - (pheight / pZoom)>
  [173] setobjprop 64 ........................... tpoint.locH = the stageRight - the stageLeft - (pheight / pZoom)
  [175] getparam 1 .............................. <tpoint>
  [177] getobjprop 66 ........................... <tpoint.locV>
  [179] getprop 513 ............................. <pwidth>
  [182] getprop 516 ............................. <pZoom>
  [185] div ..................................... <pwidth / pZoom>
  [186] sub ..................................... <tpoint.locV - (pwidth / pZoom)>
  [187] pushzero ................................ <0>
  [188] lt ...................................... <(tpoint.locV - (pwidth / pZoom)) < 0>
  [189] jmpifz [203] ............................ if (tpoint.locV - (pwidth / pZoom)) < 0 then
  [192] getparam 1 .............................. <tpoint>
  [194] getprop 513 ............................. <pwidth>
  [197] getprop 516 ............................. <pZoom>
  [200] div ..................................... <pwidth / pZoom>
  [201] setobjprop 66 ........................... tpoint.locV = pwidth / pZoom
  [203] getparam 1 .............................. <tpoint>
  [205] getobjprop 66 ........................... <tpoint.locV>
  [207] getprop 513 ............................. <pwidth>
  [210] getprop 516 ............................. <pZoom>
  [213] div ..................................... <pwidth / pZoom>
  [214] add ..................................... <tpoint.locV + (pwidth / pZoom)>
  [215] pushint16 480 ........................... <480>
  [218] gt ...................................... <(tpoint.locV + (pwidth / pZoom)) > 480>
  [219] jmpifz [237] ............................ if (tpoint.locV + (pwidth / pZoom)) > 480 then
  [222] getparam 1 .............................. <tpoint>
  [224] pushint16 480 ........................... <480>
  [227] getprop 513 ............................. <pwidth>
  [230] getprop 516 ............................. <pZoom>
  [233] div ..................................... <pwidth / pZoom>
  [234] sub ..................................... <480 - (pwidth / pZoom)>
  [235] setobjprop 66 ........................... tpoint.locV = 480 - (pwidth / pZoom)
  [237] getparam 1 .............................. <tpoint>
  [239] getobjprop 64 ........................... <tpoint.locH>
  [241] getprop 512 ............................. <pheight>
  [244] getprop 516 ............................. <pZoom>
  [247] div ..................................... <pheight / pZoom>
  [248] sub ..................................... <tpoint.locH - (pheight / pZoom)>
  [249] getparam 1 .............................. <tpoint>
  [251] getobjprop 66 ........................... <tpoint.locV>
  [253] getprop 513 ............................. <pwidth>
  [256] getprop 516 ............................. <pZoom>
  [259] div ..................................... <pwidth / pZoom>
  [260] sub ..................................... <tpoint.locV - (pwidth / pZoom)>
  [261] getparam 1 .............................. <tpoint>
  [263] getobjprop 64 ........................... <tpoint.locH>
  [265] getprop 512 ............................. <pheight>
  [268] getprop 516 ............................. <pZoom>
  [271] div ..................................... <pheight / pZoom>
  [272] add ..................................... <tpoint.locH + (pheight / pZoom)>
  [273] getparam 1 .............................. <tpoint>
  [275] getobjprop 66 ........................... <tpoint.locV>
  [277] getprop 513 ............................. <pwidth>
  [280] getprop 516 ............................. <pZoom>
  [283] div ..................................... <pwidth / pZoom>
  [284] add ..................................... <tpoint.locV + (pwidth / pZoom)>
  [285] pusharglist 4 ........................... <tpoint.locH - (pheight / pZoom), tpoint.locV - (pwidth / pZoom), tpoint.locH + (pheight / pZoom), tpoint.locV + (pwidth / pZoom)>
  [287] extcall 92 .............................. <rect(tpoint.locH - (pheight / pZoom), tpoint.locV - (pwidth / pZoom), tpoint.locH + (pheight / pZoom), tpoint.locV + (pwidth / pZoom))>
  [289] setlocal 0 .............................. tCropRect = rect(tpoint.locH - (pheight / pZoom), tpoint.locV - (pwidth / pZoom), tpoint.locH + (pheight / pZoom), tpoint.locV + (pwidth / pZoom))
  [291] getmovieprop 570 ........................ <the stage>
  [294] getchainedprop 86 ....................... <(the stage).image>
  [296] getlocal 0 .............................. <tCropRect>
  [298] pusharglist 2 ........................... <(the stage).image, tCropRect>
  [300] objcall 571 ............................. <(the stage).image.crop(tCropRect)>
  [303] setlocal 1 .............................. tCropScrImg = (the stage).image.crop(tCropRect)
  [305] getparam 2 .............................. <tBufferImage>
  [307] pusharglist 1 ........................... <tBufferImage>
  [309] extcall 181 ............................. <voidp(tBufferImage)>
  [311] jmpifz [342] ............................ if voidp(tBufferImage) then / else
  [314] getprop 523 ............................. <pScrImg>
  [317] getlocal 1 .............................. <tCropScrImg>
  [319] pushzero ................................ <0>
  [320] pushzero ................................ <0>
  [321] getprop 512 ............................. <pheight>
  [324] getprop 513 ............................. <pwidth>
  [327] pusharglist 4 ........................... <0, 0, pheight, pwidth>
  [329] extcall 92 .............................. <rect(0, 0, pheight, pwidth)>
  [331] getlocal 1 .............................. <tCropScrImg>
  [333] getobjprop 92 ........................... <tCropScrImg.rect>
  [335] pusharglistnoret 4 ...................... <pScrImg, tCropScrImg, rect(0, 0, pheight, pwidth), tCropScrImg.rect>
  [337] objcall 97 .............................. pScrImg.copyPixels(tCropScrImg, rect(0, 0, pheight, pwidth), tCropScrImg.rect)
  [339] jmp [367]
  [342] getprop 544 ............................. <pTransitBuffer>
  [345] getlocal 1 .............................. <tCropScrImg>
  [347] pushzero ................................ <0>
  [348] pushzero ................................ <0>
  [349] getprop 512 ............................. <pheight>
  [352] getprop 513 ............................. <pwidth>
  [355] pusharglist 4 ........................... <0, 0, pheight, pwidth>
  [357] extcall 92 .............................. <rect(0, 0, pheight, pwidth)>
  [359] getlocal 1 .............................. <tCropScrImg>
  [361] getobjprop 92 ........................... <tCropScrImg.rect>
  [363] pusharglistnoret 4 ...................... <pTransitBuffer, tCropScrImg, rect(0, 0, pheight, pwidth), tCropScrImg.rect>
  [365] objcall 97 .............................. pTransitBuffer.copyPixels(tCropScrImg, rect(0, 0, pheight, pwidth), tCropScrImg.rect)
  [367] ret
end
