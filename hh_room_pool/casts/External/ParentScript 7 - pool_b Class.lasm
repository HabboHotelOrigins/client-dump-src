property pAnimCounter, pAnimList, pCurrentFrame, pCurtainsLocZ, pSplashs, pArrowCursor, pBalloonRightMargin

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 445 ............................. pSplashs = [:]
  [  6] pushcons 0 .............................. <"balloons.rightmargin">
  [  8] pushint16 720 ........................... <720>
  [ 11] pusharglist 2 ........................... <"balloons.rightmargin", 720>
  [ 13] extcall 126 ............................. <getIntVariable("balloons.rightmargin", 720)>
  [ 15] setprop 479 ............................. pBalloonRightMargin = getIntVariable("balloons.rightmargin", 720)
  [ 18] pushcons 0 .............................. <"balloons.rightmargin">
  [ 20] pushint16 597 ........................... <597>
  [ 23] pusharglistnoret 2 ...................... <"balloons.rightmargin", 597>
  [ 25] extcall 480 ............................. createVariable("balloons.rightmargin", 597)
  [ 28] pushcons 1 .............................. <"thread.pelle">
  [ 30] pusharglistnoret 1 ...................... <"thread.pelle">
  [ 32] extcall 446 ............................. initThread("thread.pelle")
  [ 35] pushint8 1 .............................. <1>
  [ 37] pusharglistnoret 1 ...................... <1>
  [ 39] extcall 15 .............................. return 1
  [ 41] ret
end

on deconstruct me
  [  0] pushsymb 127 ............................ <#pellehyppy>
  [  2] pusharglistnoret 1 ...................... <#pellehyppy>
  [  4] extcall 447 ............................. closeThread(#pellehyppy)
  [  7] pushcons 0 .............................. <"balloons.rightmargin">
  [  9] getprop 479 ............................. <pBalloonRightMargin>
  [ 12] pusharglistnoret 2 ...................... <"balloons.rightmargin", pBalloonRightMargin>
  [ 14] extcall 480 ............................. createVariable("balloons.rightmargin", pBalloonRightMargin)
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 61 .............................. <me.getID()>
  [ 23] pusharglistnoret 1 ...................... <me.getID()>
  [ 25] extcall 448 ............................. removeUpdate(me.getID())
  [ 28] pushsymb 449 ............................ <#waterripples>
  [ 31] pusharglist 1 ........................... <#waterripples>
  [ 33] extcall 131 ............................. <objectExists(#waterripples)>
  [ 35] jmpifz [ 45] ............................ if objectExists(#waterripples) then
  [ 38] pushsymb 449 ............................ <#waterripples>
  [ 41] pusharglistnoret 1 ...................... <#waterripples>
  [ 43] extcall 251 ............................. removeObject(#waterripples)
  [ 45] pushsymb 481 ............................ <#poolliftdoor>
  [ 48] pusharglist 1 ........................... <#poolliftdoor>
  [ 50] extcall 131 ............................. <objectExists(#poolliftdoor)>
  [ 52] jmpifz [ 62] ............................ if objectExists(#poolliftdoor) then
  [ 55] pushsymb 481 ............................ <#poolliftdoor>
  [ 58] pusharglistnoret 1 ...................... <#poolliftdoor>
  [ 60] extcall 251 ............................. removeObject(#poolliftdoor)
  [ 62] pushsymb 392 ............................ <#pool_fuse_screen>
  [ 65] pusharglist 1 ........................... <#pool_fuse_screen>
  [ 67] extcall 131 ............................. <objectExists(#pool_fuse_screen)>
  [ 69] jmpifz [ 79] ............................ if objectExists(#pool_fuse_screen) then
  [ 72] pushsymb 392 ............................ <#pool_fuse_screen>
  [ 75] pusharglistnoret 1 ...................... <#pool_fuse_screen>
  [ 77] extcall 251 ............................. removeObject(#pool_fuse_screen)
  [ 79] pusharglist 0 ........................... <[:]>
  [ 81] pushproplist ............................ <[:]>
  [ 82] setprop 445 ............................. pSplashs = [:]
  [ 85] pushsymb 133 ............................ <#pool_bigSplash>
  [ 87] pusharglist 1 ........................... <#pool_bigSplash>
  [ 89] extcall 131 ............................. <objectExists(#pool_bigSplash)>
  [ 91] jmpifz [100] ............................ if objectExists(#pool_bigSplash) then
  [ 94] pushsymb 133 ............................ <#pool_bigSplash>
  [ 96] pusharglistnoret 1 ...................... <#pool_bigSplash>
  [ 98] extcall 251 ............................. removeObject(#pool_bigSplash)
  [100] getparam 0 .............................. <me>
  [102] pusharglist 1 ........................... <me>
  [104] objcall 442 ............................. <me.removeArrowCursor()>
  [107] pusharglistnoret 1 ...................... <me.removeArrowCursor()>
  [109] extcall 15 .............................. return me.removeArrowCursor()
  [111] ret
end

on prepare me
  [  0] pushsymb 392 ............................ <#pool_fuse_screen>
  [  3] pushcons 2 .............................. <"FUSE screen Class">
  [  5] pusharglistnoret 2 ...................... <#pool_fuse_screen, "FUSE screen Class">
  [  7] extcall 134 ............................. createObject(#pool_fuse_screen, "FUSE screen Class")
  [  9] pusharglist 0 ........................... <[:]>
  [ 11] pushproplist ............................ <[:]>
  [ 12] setprop 445 ............................. pSplashs = [:]
  [ 15] pushzero ................................ <0>
  [ 16] setlocal 0
  [ 18] getlocal 0
  [ 20] pushint8 2 .............................. <2>
  [ 22] lteq
  [ 23] jmpifz [130] ............................ repeat with f = 0 to 2
  [ 26] pusharglist 0 ........................... <[:]>
  [ 28] pushproplist ............................ <[:]>
  [ 29] setlocal 1 .............................. tProps = [:]
  [ 31] getprop 445 ............................. <pSplashs>
  [ 34] pushcons 3 .............................. <"Splash">
  [ 36] getlocal 0 .............................. <f>
  [ 38] joinstr ................................. <"Splash" & f>
  [ 39] pushsymb 154 ............................ <#temp>
  [ 41] pushcons 4 .............................. <"AnimSprite Class">
  [ 43] pusharglist 2 ........................... <#temp, "AnimSprite Class">
  [ 45] extcall 134 ............................. <createObject(#temp, "AnimSprite Class")>
  [ 47] pusharglistnoret 3 ...................... <pSplashs, "Splash" & f, createObject(#temp, "AnimSprite Class")>
  [ 49] objcall 450 ............................. pSplashs.addProp("Splash" & f, createObject(#temp, "AnimSprite Class"))
  [ 52] getlocal 1 .............................. <tProps>
  [ 54] pushsymb 135 ............................ <#visible>
  [ 56] pushzero ................................ <0>
  [ 57] pusharglistnoret 3 ...................... <tProps, #visible, 0>
  [ 59] objcall 84 .............................. tProps[#visible] = 0
  [ 61] getlocal 1 .............................. <tProps>
  [ 63] pushsymb 136 ............................ <#AnimFrames>
  [ 65] pushint8 10 ............................. <10>
  [ 67] pusharglistnoret 3 ...................... <tProps, #AnimFrames, 10>
  [ 69] objcall 84 .............................. tProps[#AnimFrames] = 10
  [ 71] getlocal 1 .............................. <tProps>
  [ 73] pushsymb 137 ............................ <#startFrame>
  [ 75] pushzero ................................ <0>
  [ 76] pusharglistnoret 3 ...................... <tProps, #startFrame, 0>
  [ 78] objcall 84 .............................. tProps[#startFrame] = 0
  [ 80] getlocal 1 .............................. <tProps>
  [ 82] pushsymb 138 ............................ <#MemberName>
  [ 84] pushcons 5 .............................. <"splash_">
  [ 86] pusharglistnoret 3 ...................... <tProps, #MemberName, "splash_">
  [ 88] objcall 84 .............................. tProps[#MemberName] = "splash_"
  [ 90] getlocal 1 .............................. <tProps>
  [ 92] pushsymb 139 ............................ <#id>
  [ 94] pushcons 3 .............................. <"Splash">
  [ 96] getlocal 0 .............................. <f>
  [ 98] joinstr ................................. <"Splash" & f>
  [ 99] pusharglistnoret 3 ...................... <tProps, #id, "Splash" & f>
  [101] objcall 84 .............................. tProps[#id] = "Splash" & f
  [103] getprop 445 ............................. <pSplashs>
  [106] pushcons 3 .............................. <"Splash">
  [108] getlocal 0 .............................. <f>
  [110] joinstr ................................. <"Splash" & f>
  [111] pusharglist 2 ........................... <pSplashs, "Splash" & f>
  [113] objcall 83 .............................. <pSplashs["Splash" & f]>
  [115] getlocal 1 .............................. <tProps>
  [117] pusharglistnoret 2 ...................... <pSplashs["Splash" & f], tProps>
  [119] objcall 140 ............................. pSplashs["Splash" & f].setData(tProps)
  [121] pushint8 1
  [123] getlocal 0
  [125] add
  [126] setlocal 0
  [128] endrepeat [ 18]
  [130] pushsymb 449 ............................ <#waterripples>
  [133] pusharglist 1 ........................... <#waterripples>
  [135] extcall 131 ............................. <objectExists(#waterripples)>
  [137] not ..................................... <not objectExists(#waterripples)>
  [138] jmpifz [150] ............................ if not objectExists(#waterripples) then
  [141] pushsymb 449 ............................ <#waterripples>
  [144] pushcons 6 .............................. <"Water Ripple Effects Class">
  [146] pusharglistnoret 2 ...................... <#waterripples, "Water Ripple Effects Class">
  [148] extcall 134 ............................. createObject(#waterripples, "Water Ripple Effects Class")
  [150] pushsymb 481 ............................ <#poolliftdoor>
  [153] pusharglist 1 ........................... <#poolliftdoor>
  [155] extcall 131 ............................. <objectExists(#poolliftdoor)>
  [157] not ..................................... <not objectExists(#poolliftdoor)>
  [158] jmpifz [170] ............................ if not objectExists(#poolliftdoor) then
  [161] pushsymb 481 ............................ <#poolliftdoor>
  [164] pushcons 7 .............................. <"Elevator Door Class">
  [166] pusharglistnoret 2 ...................... <#poolliftdoor, "Elevator Door Class">
  [168] extcall 134 ............................. createObject(#poolliftdoor, "Elevator Door Class")
  [170] pushsymb 449 ............................ <#waterripples>
  [173] pusharglist 1 ........................... <#waterripples>
  [175] extcall 131 ............................. <objectExists(#waterripples)>
  [177] jmpifz [193] ............................ if objectExists(#waterripples) then
  [180] pushsymb 449 ............................ <#waterripples>
  [183] pusharglist 1 ........................... <#waterripples>
  [185] extcall 20 .............................. <getObject(#waterripples)>
  [187] pushcons 8 .............................. <"vesi2">
  [189] pusharglistnoret 2 ...................... <getObject(#waterripples), "vesi2">
  [191] objcall 1 ............................... getObject(#waterripples).Init("vesi2")
  [193] pushsymb 24 ............................. <#room>
  [195] pusharglist 1 ........................... <#room>
  [197] extcall 23 .............................. <getThread(#room)>
  [199] pusharglist 1 ........................... <getThread(#room)>
  [201] objcall 25 .............................. <getThread(#room).getInterface()>
  [203] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [205] objcall 143 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [207] pushcons 9 .............................. <"jumpticketautomatic">
  [209] pusharglist 2 ........................... <getThread(#room).getInterface().getRoomVisualizer(), "jumpticketautomatic">
  [211] objcall 144 ............................. <getThread(#room).getInterface().getRoomVisualizer().getSprById("jumpticketautomatic")>
  [213] setlocal 2 .............................. tSpr = getThread(#room).getInterface().getRoomVisualizer().getSprById("jumpticketautomatic")
  [215] getlocal 2 .............................. <tSpr>
  [217] pushsymb 478 ............................ <#eventProcJumpTicketAutomatic>
  [220] getparam 0 .............................. <me>
  [222] pusharglist 1 ........................... <me>
  [224] objcall 61 .............................. <me.getID()>
  [226] pushsymb 261 ............................ <#mouseDown>
  [229] pusharglistnoret 4 ...................... <tSpr, #eventProcJumpTicketAutomatic, me.getID(), #mouseDown>
  [231] extcall 260 ............................. registerProcedure(tSpr, #eventProcJumpTicketAutomatic, me.getID(), #mouseDown)
  [234] pushcons 10 ............................. <"pool_clickarea">
  [236] pushcons 11 ............................. <"floor">
  [238] pushcons 12 ............................. <"hiliter">
  [240] pushcons 8 .............................. <"vesi2">
  [242] pushcons 13 ............................. <"portaat1">
  [244] pushcons 14 ............................. <"portaat3">
  [246] pusharglist 6 ........................... <["pool_clickarea", "floor", "hiliter", "vesi2", "portaat1", "portaat3"]>
  [248] pushlist ................................ <["pool_clickarea", "floor", "hiliter", "vesi2", "portaat1", "portaat3"]>
  [249] peek 0
  [251] pusharglist 1
  [253] extcall 82
  [255] pushint8 1
  [257] peek 0
  [259] peek 2
  [261] lteq
  [262] jmpifz [321] ............................ repeat with tid in ["pool_clickarea", "floor", "hiliter", "vesi2", "portaat1", "portaat3"]
  [265] peek 2
  [267] peek 1
  [269] pusharglist 2
  [271] extcall 83
  [273] setlocal 3
  [275] pushsymb 24 ............................. <#room>
  [277] pusharglist 1 ........................... <#room>
  [279] extcall 23 .............................. <getThread(#room)>
  [281] pusharglist 1 ........................... <getThread(#room)>
  [283] objcall 25 .............................. <getThread(#room).getInterface()>
  [285] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [287] objcall 143 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [289] getlocal 3 .............................. <tid>
  [291] pusharglist 2 ........................... <getThread(#room).getInterface().getRoomVisualizer(), tid>
  [293] objcall 144 ............................. <getThread(#room).getInterface().getRoomVisualizer().getSprById(tid)>
  [295] setlocal 2 .............................. tSpr = getThread(#room).getInterface().getRoomVisualizer().getSprById(tid)
  [297] getlocal 2 .............................. <tSpr>
  [299] pushsymb 443 ............................ <#poolTeleport>
  [302] getparam 0 .............................. <me>
  [304] pusharglist 1 ........................... <me>
  [306] objcall 61 .............................. <me.getID()>
  [308] pushsymb 261 ............................ <#mouseDown>
  [311] pusharglistnoret 4 ...................... <tSpr, #poolTeleport, me.getID(), #mouseDown>
  [313] extcall 260 ............................. registerProcedure(tSpr, #poolTeleport, me.getID(), #mouseDown)
  [316] pushint8 1
  [318] add
  [319] endrepeat [257]
  [321] pop 3
  [323] pushzero ................................ <0>
  [324] setprop 451 ............................. pArrowCursor = 0
  [327] pushsymb 24 ............................. <#room>
  [329] pusharglist 1 ........................... <#room>
  [331] extcall 452 ............................. <threadExists(#room)>
  [334] jmpifz [351] ............................ if threadExists(#room) then
  [337] pushsymb 24 ............................. <#room>
  [339] pusharglist 1 ........................... <#room>
  [341] extcall 23 .............................. <getThread(#room)>
  [343] pusharglist 1 ........................... <getThread(#room)>
  [345] objcall 25 .............................. <getThread(#room).getInterface()>
  [347] pusharglistnoret 1 ...................... <getThread(#room).getInterface()>
  [349] objcall 237 ............................. getThread(#room).getInterface().hideRoomBar()
  [351] pushsymb 127 ............................ <#pellehyppy>
  [353] pusharglist 1 ........................... <#pellehyppy>
  [355] extcall 23 .............................. <getThread(#pellehyppy)>
  [357] pusharglist 1 ........................... <getThread(#pellehyppy)>
  [359] objcall 25 .............................. <getThread(#pellehyppy).getInterface()>
  [361] pusharglistnoret 1 ...................... <getThread(#pellehyppy).getInterface()>
  [363] objcall 236 ............................. getThread(#pellehyppy).getInterface().showRoomBar()
  [365] getparam 0 .............................. <me>
  [367] pusharglist 1 ........................... <me>
  [369] objcall 61 .............................. <me.getID()>
  [371] pusharglistnoret 1 ...................... <me.getID()>
  [373] extcall 453 ............................. receiveUpdate(me.getID())
  [376] pushint8 1 .............................. <1>
  [378] pusharglistnoret 1 ...................... <1>
  [380] extcall 15 .............................. return 1
  [382] ret
end

on showprogram me, tMsg
  [  0] pushsymb 24 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 23 .............................. <getThread(#room)>
  [  6] pusharglist 1 ........................... <getThread(#room)>
  [  8] objcall 128 ............................. <getThread(#room).getComponent()>
  [ 10] getobjprop 482 .......................... <getThread(#room).getComponent().pActiveFlag>
  [ 13] not ..................................... <not getThread(#room).getComponent().pActiveFlag>
  [ 14] jmpifz [ 22] ............................ if not getThread(#room).getComponent().pActiveFlag then
  [ 17] pushzero ................................ <0>
  [ 18] pusharglistnoret 1 ...................... <0>
  [ 20] extcall 15 .............................. return 0
  [ 22] getparam 1 .............................. <tMsg>
  [ 24] pusharglist 1 ........................... <tMsg>
  [ 26] extcall 181 ............................. <voidp(tMsg)>
  [ 28] jmpifz [ 36] ............................ if voidp(tMsg) then
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 15 .............................. return 0
  [ 36] getparam 1 .............................. <tMsg>
  [ 38] pushsymb 455 ............................ <#show_dest>
  [ 41] pusharglist 2 ........................... <tMsg, #show_dest>
  [ 43] objcall 83 .............................. <tMsg[#show_dest]>
  [ 45] setlocal 0 .............................. tDst = tMsg[#show_dest]
  [ 47] getparam 1 .............................. <tMsg>
  [ 49] pushsymb 456 ............................ <#show_command>
  [ 52] pusharglist 2 ........................... <tMsg, #show_command>
  [ 54] objcall 83 .............................. <tMsg[#show_command]>
  [ 56] setlocal 1 .............................. tCmd = tMsg[#show_command]
  [ 58] getparam 1 .............................. <tMsg>
  [ 60] pushsymb 457 ............................ <#show_params>
  [ 63] pusharglist 2 ........................... <tMsg, #show_params>
  [ 65] objcall 83 .............................. <tMsg[#show_params]>
  [ 67] setlocal 2 .............................. tPrm = tMsg[#show_params]
  [ 69] getlocal 0 .............................. <tDst>
  [ 71] pushcons 15 ............................. <"cam">
  [ 73] containsstr ............................. <tDst contains "cam">
  [ 74] jmpifz [120] ............................ if tDst contains "cam" then / else
  [ 77] pushsymb 392 ............................ <#pool_fuse_screen>
  [ 80] pusharglist 1 ........................... <#pool_fuse_screen>
  [ 82] extcall 131 ............................. <objectExists(#pool_fuse_screen)>
  [ 84] not ..................................... <not objectExists(#pool_fuse_screen)>
  [ 85] jmpifz [ 93] ............................ if not objectExists(#pool_fuse_screen) then
  [ 88] pushzero ................................ <0>
  [ 89] pusharglistnoret 1 ...................... <0>
  [ 91] extcall 15 .............................. return 0
  [ 93] pushcons 16 ............................. <"fuseShow_">
  [ 95] getlocal 1 .............................. <tCmd>
  [ 97] joinstr ................................. <"fuseShow_" & tCmd>
  [ 98] pusharglist 1 ........................... <"fuseShow_" & tCmd>
  [100] extcall 483 ............................. <symbol("fuseShow_" & tCmd)>
  [103] pushsymb 392 ............................ <#pool_fuse_screen>
  [106] pusharglist 1 ........................... <#pool_fuse_screen>
  [108] extcall 20 .............................. <getObject(#pool_fuse_screen)>
  [110] getlocal 2 .............................. <tPrm>
  [112] pusharglistnoret 3 ...................... <symbol("fuseShow_" & tCmd), getObject(#pool_fuse_screen), tPrm>
  [114] extcall 387 ............................. call(symbol("fuseShow_" & tCmd), getObject(#pool_fuse_screen), tPrm)
  [117] jmp [179]
  [120] getlocal 0 .............................. <tDst>
  [122] pushcons 3 .............................. <"Splash">
  [124] containsstr ............................. <tDst contains "Splash">
  [125] jmpifz [142] ............................ if tDst contains "Splash" then / else
  [128] getparam 0 .............................. <me>
  [130] getlocal 0 .............................. <tDst>
  [132] getlocal 1 .............................. <tCmd>
  [134] pusharglistnoret 3 ...................... <me, tDst, tCmd>
  [136] objcall 439 ............................. me.splash(tDst, tCmd)
  [139] jmp [179]
  [142] getlocal 0 .............................. <tDst>
  [144] pushcons 17 ............................. <"door">
  [146] containsstr ............................. <tDst contains "door">
  [147] jmpifz [179] ............................ if tDst contains "door" then / else
  [150] getparam 0 .............................. <me>
  [152] pushint16 200 ........................... <200>
  [155] pushsymb 477 ............................ <#elvatorDoor>
  [158] pushsymb 484 ............................ <#dest>
  [161] getlocal 0 .............................. <tDst>
  [163] pushsymb 485 ............................ <#command>
  [166] getlocal 1 .............................. <tCmd>
  [168] pusharglist 4 ........................... <[#dest: tDst, #command: tCmd]>
  [170] pushproplist ............................ <[#dest: tDst, #command: tCmd]>
  [171] pusharglistnoret 4 ...................... <me, 200, #elvatorDoor, [#dest: tDst, #command: tCmd]>
  [173] objcall 486 ............................. me.delay(200, #elvatorDoor, [#dest: tDst, #command: tCmd])
  [176] jmp [179]
  [179] ret
end

on splash me, tDest, tCommand
  [  0] getprop 445 ............................. <pSplashs>
  [  3] getparam 1 .............................. <tDest>
  [  5] pusharglist 2 ........................... <pSplashs, tDest>
  [  7] objcall 83 .............................. <pSplashs[tDest]>
  [  9] pusharglist 1 ........................... <pSplashs[tDest]>
  [ 11] extcall 181 ............................. <voidp(pSplashs[tDest])>
  [ 13] jmpifz [ 21] ............................ if voidp(pSplashs[tDest]) then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 15 .............................. return 0
  [ 21] pushsymb 141 ............................ <#Activate>
  [ 23] getprop 445 ............................. <pSplashs>
  [ 26] getparam 1 .............................. <tDest>
  [ 28] pusharglist 2 ........................... <pSplashs, tDest>
  [ 30] objcall 83 .............................. <pSplashs[tDest]>
  [ 32] pusharglistnoret 2 ...................... <#Activate, pSplashs[tDest]>
  [ 34] extcall 387 ............................. call(#Activate, pSplashs[tDest])
  [ 37] ret
end

on elvatorDoor me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 484 ............................ <#dest>
  [  5] pusharglist 2 ........................... <tProps, #dest>
  [  7] objcall 83 .............................. <tProps[#dest]>
  [  9] setlocal 0 .............................. tDst = tProps[#dest]
  [ 11] getparam 1 .............................. <tProps>
  [ 13] pushsymb 485 ............................ <#command>
  [ 16] pusharglist 2 ........................... <tProps, #command>
  [ 18] objcall 83 .............................. <tProps[#command]>
  [ 20] setlocal 1 .............................. tCmd = tProps[#command]
  [ 22] getlocal 1 .............................. <tCmd>
  [ 24] peek 0 .................................. case tCmd of
  [ 26] pushcons 18 ............................. <"open">
  [ 28] eq
  [ 29] jmpifz [ 44] ............................ (case) "open":
  [ 32] pushcons 19 ............................. <"towerdoor_2">
  [ 34] pusharglist 1 ........................... <"towerdoor_2">
  [ 36] extcall 461 ............................. <getMember("towerdoor_2")>
  [ 39] setlocal 2 .............................. tmember = getMember("towerdoor_2")
  [ 41] jmp [ 61]
  [ 44] peek 0
  [ 46] pushcons 20 ............................. <"close">
  [ 48] eq
  [ 49] jmpifz [ 61] ............................ (case) "close":
  [ 52] pushcons 21 ............................. <"towerdoor_0">
  [ 54] pusharglist 1 ........................... <"towerdoor_0">
  [ 56] extcall 461 ............................. <getMember("towerdoor_0")>
  [ 59] setlocal 2 .............................. tmember = getMember("towerdoor_0")
  [ 61] pop 1 ................................... end case
  [ 63] pushsymb 24 ............................. <#room>
  [ 65] pusharglist 1 ........................... <#room>
  [ 67] extcall 23 .............................. <getThread(#room)>
  [ 69] pusharglist 1 ........................... <getThread(#room)>
  [ 71] objcall 25 .............................. <getThread(#room).getInterface()>
  [ 73] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 75] objcall 143 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 77] setlocal 3 .............................. tVisObj = getThread(#room).getInterface().getRoomVisualizer()
  [ 79] getlocal 3 .............................. <tVisObj>
  [ 81] pushzero ................................ <0>
  [ 82] eq ...................................... <tVisObj = 0>
  [ 83] jmpifz [ 91] ............................ if tVisObj = 0 then
  [ 86] pushzero ................................ <0>
  [ 87] pusharglistnoret 1 ...................... <0>
  [ 89] extcall 15 .............................. return 0
  [ 91] getlocal 3 .............................. <tVisObj>
  [ 93] pushcons 22 ............................. <"lift_door">
  [ 95] pusharglist 2 ........................... <tVisObj, "lift_door">
  [ 97] objcall 144 ............................. <tVisObj.getSprById("lift_door")>
  [ 99] getlocal 2 .............................. <tmember>
  [101] pusharglistnoret 2 ...................... <tVisObj.getSprById("lift_door"), tmember>
  [103] objcall 327 ............................. tVisObj.getSprById("lift_door").setMember(tmember)
  [106] ret
end

on update me
  [  0] getprop 445 ............................. <pSplashs>
  [  3] getobjprop 82 ........................... <pSplashs.count>
  [  5] pushzero ................................ <0>
  [  6] gt ...................................... <pSplashs.count > 0>
  [  7] jmpifz [ 21] ............................ if pSplashs.count > 0 then
  [ 10] pushsymb 463 ............................ <#updateSplashs>
  [ 13] getprop 445 ............................. <pSplashs>
  [ 16] pusharglistnoret 2 ...................... <#updateSplashs, pSplashs>
  [ 18] extcall 387 ............................. call(#updateSplashs, pSplashs)
  [ 21] getprop 451 ............................. <pArrowCursor>
  [ 24] pusharglist 0 ........................... <>
  [ 26] thebuiltin 348 .......................... <the mouseH>
  [ 29] pushint8 25 ............................. <25>
  [ 31] lt ...................................... <the mouseH < 25>
  [ 32] or ...................................... <pArrowCursor or (the mouseH < 25)>
  [ 33] jmpifz [ 43] ............................ if pArrowCursor or (the mouseH < 25) then
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglistnoret 1 ...................... <me>
  [ 40] objcall 441 ............................. me.poolArrows()
  [ 43] ret
end

on poolArrows me
  [  0] pushzero ................................ <0>
  [  1] pushint8 13 ............................. <13>
  [  3] pusharglist 2 ........................... <[0, 13]>
  [  5] pushlist ................................ <[0, 13]>
  [  6] setlocal 0 .............................. tStartPos = [0, 13]
  [  8] pushsymb 24 ............................. <#room>
  [ 10] pusharglist 1 ........................... <#room>
  [ 12] extcall 23 .............................. <getThread(#room)>
  [ 14] pusharglist 1 ........................... <getThread(#room)>
  [ 16] objcall 25 .............................. <getThread(#room).getInterface()>
  [ 18] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 20] objcall 26 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 22] pusharglist 0 ........................... <>
  [ 24] thebuiltin 348 .......................... <the mouseH>
  [ 27] pusharglist 0 ........................... <>
  [ 29] thebuiltin 350 .......................... <the mouseV>
  [ 32] pusharglist 3 ........................... <getThread(#room).getInterface().getGeometry(), the mouseH, the mouseV>
  [ 34] objcall 464 ............................. <getThread(#room).getInterface().getGeometry().getWorldCoordinate(the mouseH, the mouseV)>
  [ 37] setlocal 1 .............................. tloc = getThread(#room).getInterface().getGeometry().getWorldCoordinate(the mouseH, the mouseV)
  [ 39] getlocal 1 .............................. <tloc>
  [ 41] getobjprop 10 ........................... <tloc.ilk>
  [ 43] pushsymb 465 ............................ <#list>
  [ 46] nteq .................................... <tloc.ilk <> #list>
  [ 47] jmpifz [ 61] ............................ if tloc.ilk <> #list then
  [ 50] getparam 0 .............................. <me>
  [ 52] pusharglist 1 ........................... <me>
  [ 54] objcall 442 ............................. <me.removeArrowCursor()>
  [ 57] pusharglistnoret 1 ...................... <me.removeArrowCursor()>
  [ 59] extcall 15 .............................. return me.removeArrowCursor()
  [ 61] getlocal 0 .............................. <tStartPos>
  [ 63] pushint8 1 .............................. <1>
  [ 65] pusharglist 2 ........................... <tStartPos, 1>
  [ 67] objcall 83 .............................. <tStartPos[1]>
  [ 69] getlocal 1 .............................. <tloc>
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglist 2 ........................... <tloc, 1>
  [ 75] objcall 83 .............................. <tloc[1]>
  [ 77] sub ..................................... <tStartPos[1] - tloc[1]>
  [ 78] getlocal 0 .............................. <tStartPos>
  [ 80] pushint8 2 .............................. <2>
  [ 82] pusharglist 2 ........................... <tStartPos, 2>
  [ 84] objcall 83 .............................. <tStartPos[2]>
  [ 86] getlocal 1 .............................. <tloc>
  [ 88] pushint8 2 .............................. <2>
  [ 90] pusharglist 2 ........................... <tloc, 2>
  [ 92] objcall 83 .............................. <tloc[2]>
  [ 94] sub ..................................... <tStartPos[2] - tloc[2]>
  [ 95] eq ...................................... <(tStartPos[1] - tloc[1]) = (tStartPos[2] - tloc[2])>
  [ 96] jmpifz [135] ............................ if (tStartPos[1] - tloc[1]) = (tStartPos[2] - tloc[2]) then / else
  [ 99] pushint8 1 .............................. <1>
  [101] setprop 451 ............................. pArrowCursor = 1
  [104] pushcons 23 ............................. <"cursor_arrow_l">
  [106] pusharglist 1 ........................... <"cursor_arrow_l">
  [108] extcall 74 .............................. <getmemnum("cursor_arrow_l")>
  [110] pusharglist 1 ........................... <getmemnum("cursor_arrow_l")>
  [112] extcall 73 .............................. <member(getmemnum("cursor_arrow_l"))>
  [114] pushcons 24 ............................. <"cursor_arrow_l_mask">
  [116] pusharglist 1 ........................... <"cursor_arrow_l_mask">
  [118] extcall 74 .............................. <getmemnum("cursor_arrow_l_mask")>
  [120] pusharglist 1 ........................... <getmemnum("cursor_arrow_l_mask")>
  [122] extcall 73 .............................. <member(getmemnum("cursor_arrow_l_mask"))>
  [124] pusharglist 2 ........................... <[member(getmemnum("cursor_arrow_l")), member(getmemnum("cursor_arrow_l_mask"))]>
  [126] pushlist ................................ <[member(getmemnum("cursor_arrow_l")), member(getmemnum("cursor_arrow_l_mask"))]>
  [127] pusharglistnoret 1 ...................... <[member(getmemnum("cursor_arrow_l")), member(getmemnum("cursor_arrow_l_mask"))]>
  [129] extcall 466 ............................. cursor([member(getmemnum("cursor_arrow_l")), member(getmemnum("cursor_arrow_l_mask"))])
  [132] jmp [142]
  [135] getparam 0 .............................. <me>
  [137] pusharglistnoret 1 ...................... <me>
  [139] objcall 442 ............................. me.removeArrowCursor()
  [142] ret
end

on removeArrowCursor me
  [  0] pushzero ................................ <0>
  [  1] setprop 451 ............................. pArrowCursor = 0
  [  4] pushint8 1 .............................. <1>
  [  6] inv ..................................... <-1>
  [  7] pusharglistnoret 1 ...................... <-1>
  [  9] extcall 466 ............................. cursor(-1)
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 15 .............................. return 1
  [ 18] ret
end

on eventProcJumpTicketAutomatic me
  [  0] pushsymb 127 ............................ <#pellehyppy>
  [  2] pusharglist 1 ........................... <#pellehyppy>
  [  4] extcall 452 ............................. <threadExists(#pellehyppy)>
  [  7] jmpifz [ 25] ............................ if threadExists(#pellehyppy) then / else
  [ 10] pushsymb 490 ............................ <#show_ticketWindow>
  [ 13] pusharglist 1 ........................... <#show_ticketWindow>
  [ 15] extcall 308 ............................. <executeMessage(#show_ticketWindow)>
  [ 18] pusharglistnoret 1 ...................... <executeMessage(#show_ticketWindow)>
  [ 20] extcall 15 .............................. return executeMessage(#show_ticketWindow)
  [ 22] jmp [ 30]
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 15 .............................. return 0
  [ 30] ret
end

on poolTeleport me, tEvent, tSprID, tParam
  [  0] pushsymb 21 ............................. <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 20 .............................. <getObject(#session)>
  [  6] pushcons 25 ............................. <"user_index">
  [  8] pusharglist 2 ........................... <getObject(#session), "user_index">
  [ 10] objcall 22 .............................. <getObject(#session).get("user_index")>
  [ 12] setlocal 0 .............................. tMyIndex = getObject(#session).get("user_index")
  [ 14] pushsymb 24 ............................. <#room>
  [ 16] pusharglist 1 ........................... <#room>
  [ 18] extcall 23 .............................. <getThread(#room)>
  [ 20] pusharglist 1 ........................... <getThread(#room)>
  [ 22] objcall 128 ............................. <getThread(#room).getComponent()>
  [ 24] getlocal 0 .............................. <tMyIndex>
  [ 26] pusharglist 2 ........................... <getThread(#room).getComponent(), tMyIndex>
  [ 28] objcall 491 ............................. <getThread(#room).getComponent().userObjectExists(tMyIndex)>
  [ 31] not ..................................... <not getThread(#room).getComponent().userObjectExists(tMyIndex)>
  [ 32] jmpifz [ 40] ............................ if not getThread(#room).getComponent().userObjectExists(tMyIndex) then
  [ 35] pushzero ................................ <0>
  [ 36] pusharglistnoret 1 ...................... <0>
  [ 38] extcall 15 .............................. return 0
  [ 40] pushsymb 24 ............................. <#room>
  [ 42] pusharglist 1 ........................... <#room>
  [ 44] extcall 23 .............................. <getThread(#room)>
  [ 46] pusharglist 1 ........................... <getThread(#room)>
  [ 48] objcall 128 ............................. <getThread(#room).getComponent()>
  [ 50] getlocal 0 .............................. <tMyIndex>
  [ 52] pusharglist 2 ........................... <getThread(#room).getComponent(), tMyIndex>
  [ 54] objcall 386 ............................. <getThread(#room).getComponent().getUserObject(tMyIndex)>
  [ 57] pusharglist 1 ........................... <getThread(#room).getComponent().getUserObject(tMyIndex)>
  [ 59] objcall 469 ............................. <getThread(#room).getComponent().getUserObject(tMyIndex).getLocation()>
  [ 62] setlocal 1 .............................. tloc = getThread(#room).getComponent().getUserObject(tMyIndex).getLocation()
  [ 64] pushsymb 24 ............................. <#room>
  [ 66] pusharglist 1 ........................... <#room>
  [ 68] extcall 23 .............................. <getThread(#room)>
  [ 70] pusharglist 1 ........................... <getThread(#room)>
  [ 72] objcall 25 .............................. <getThread(#room).getInterface()>
  [ 74] getparam 1 .............................. <tEvent>
  [ 76] pushcons 11 ............................. <"floor">
  [ 78] getparam 3 .............................. <tParam>
  [ 80] pusharglistnoret 4 ...................... <getThread(#room).getInterface(), tEvent, "floor", tParam>
  [ 82] objcall 470 ............................. getThread(#room).getInterface().eventProcRoom(tEvent, "floor", tParam)
  [ 85] getparam 2 .............................. <tSprID>
  [ 87] pushcons 10 ............................. <"pool_clickarea">
  [ 89] containsstr ............................. <tSprID contains "pool_clickarea">
  [ 90] not ..................................... <not (tSprID contains "pool_clickarea")>
  [ 91] getlocal 1 .............................. <tloc>
  [ 93] pushint8 3 .............................. <3>
  [ 95] pusharglist 2 ........................... <tloc, 3>
  [ 97] objcall 83 .............................. <tloc[3]>
  [ 99] pushint8 7 .............................. <7>
  [101] lt ...................................... <tloc[3] < 7>
  [102] and ..................................... <not (tSprID contains "pool_clickarea") and (tloc[3] < 7)>
  [103] jmpifz [202] ............................ if not (tSprID contains "pool_clickarea") and (tloc[3] < 7) then / else
  [106] getlocal 1 .............................. <tloc>
  [108] pushint8 2 .............................. <2>
  [110] pusharglist 2 ........................... <tloc, 2>
  [112] objcall 83 .............................. <tloc[2]>
  [114] pushint8 11 ............................. <11>
  [116] gt ...................................... <tloc[2] > 11>
  [117] getlocal 1 .............................. <tloc>
  [119] pushint8 1 .............................. <1>
  [121] pusharglist 2 ........................... <tloc, 1>
  [123] objcall 83 .............................. <tloc[1]>
  [125] pushint8 20 ............................. <20>
  [127] lt ...................................... <tloc[1] < 20>
  [128] and ..................................... <(tloc[2] > 11) and (tloc[1] < 20)>
  [129] jmpifz [167] ............................ if (tloc[2] > 11) and (tloc[1] < 20) then / else
  [132] pushcons 26 ............................. <"connection.room.id">
  [134] pusharglist 1 ........................... <"connection.room.id">
  [136] extcall 290 ............................. <getVariable("connection.room.id")>
  [139] pusharglist 1 ........................... <getVariable("connection.room.id")>
  [141] extcall 289 ............................. <getConnection(getVariable("connection.room.id"))>
  [144] pushcons 27 ............................. <"MOVE">
  [146] pushsymb 471 ............................ <#short>
  [149] pushint8 17 ............................. <17>
  [151] pushsymb 471 ............................ <#short>
  [154] pushint8 22 ............................. <22>
  [156] pusharglist 4 ........................... <[#short: 17, #short: 22]>
  [158] pushproplist ............................ <[#short: 17, #short: 22]>
  [159] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.room.id")), "MOVE", [#short: 17, #short: 22]>
  [161] objcall 291 ............................. getConnection(getVariable("connection.room.id")).send("MOVE", [#short: 17, #short: 22])
  [164] jmp [199]
  [167] pushcons 26 ............................. <"connection.room.id">
  [169] pusharglist 1 ........................... <"connection.room.id">
  [171] extcall 290 ............................. <getVariable("connection.room.id")>
  [174] pusharglist 1 ........................... <getVariable("connection.room.id")>
  [176] extcall 289 ............................. <getConnection(getVariable("connection.room.id"))>
  [179] pushcons 27 ............................. <"MOVE">
  [181] pushsymb 471 ............................ <#short>
  [184] pushint8 31 ............................. <31>
  [186] pushsymb 471 ............................ <#short>
  [189] pushint8 11 ............................. <11>
  [191] pusharglist 4 ........................... <[#short: 31, #short: 11]>
  [193] pushproplist ............................ <[#short: 31, #short: 11]>
  [194] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.room.id")), "MOVE", [#short: 31, #short: 11]>
  [196] objcall 291 ............................. getConnection(getVariable("connection.room.id")).send("MOVE", [#short: 31, #short: 11])
  [199] jmp [303]
  [202] getparam 2 .............................. <tSprID>
  [204] pushcons 10 ............................. <"pool_clickarea">
  [206] containsstr ............................. <tSprID contains "pool_clickarea">
  [207] getlocal 1 .............................. <tloc>
  [209] pushint8 3 .............................. <3>
  [211] pusharglist 2 ........................... <tloc, 3>
  [213] objcall 83 .............................. <tloc[3]>
  [215] pushint8 7 .............................. <7>
  [217] eq ...................................... <tloc[3] = 7>
  [218] and ..................................... <(tSprID contains "pool_clickarea") and (tloc[3] = 7)>
  [219] jmpifz [303] ............................ if (tSprID contains "pool_clickarea") and (tloc[3] = 7) then
  [222] getlocal 1 .............................. <tloc>
  [224] pushint8 2 .............................. <2>
  [226] pusharglist 2 ........................... <tloc, 2>
  [228] objcall 83 .............................. <tloc[2]>
  [230] pushint8 11 ............................. <11>
  [232] gt ...................................... <tloc[2] > 11>
  [233] jmpifz [271] ............................ if tloc[2] > 11 then / else
  [236] pushcons 26 ............................. <"connection.room.id">
  [238] pusharglist 1 ........................... <"connection.room.id">
  [240] extcall 290 ............................. <getVariable("connection.room.id")>
  [243] pusharglist 1 ........................... <getVariable("connection.room.id")>
  [245] extcall 289 ............................. <getConnection(getVariable("connection.room.id"))>
  [248] pushcons 27 ............................. <"MOVE">
  [250] pushsymb 471 ............................ <#short>
  [253] pushint8 17 ............................. <17>
  [255] pushsymb 471 ............................ <#short>
  [258] pushint8 21 ............................. <21>
  [260] pusharglist 4 ........................... <[#short: 17, #short: 21]>
  [262] pushproplist ............................ <[#short: 17, #short: 21]>
  [263] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.room.id")), "MOVE", [#short: 17, #short: 21]>
  [265] objcall 291 ............................. getConnection(getVariable("connection.room.id")).send("MOVE", [#short: 17, #short: 21])
  [268] jmp [303]
  [271] pushcons 26 ............................. <"connection.room.id">
  [273] pusharglist 1 ........................... <"connection.room.id">
  [275] extcall 290 ............................. <getVariable("connection.room.id")>
  [278] pusharglist 1 ........................... <getVariable("connection.room.id")>
  [280] extcall 289 ............................. <getConnection(getVariable("connection.room.id"))>
  [283] pushcons 27 ............................. <"MOVE">
  [285] pushsymb 471 ............................ <#short>
  [288] pushint8 31 ............................. <31>
  [290] pushsymb 471 ............................ <#short>
  [293] pushint8 10 ............................. <10>
  [295] pusharglist 4 ........................... <[#short: 31, #short: 10]>
  [297] pushproplist ............................ <[#short: 31, #short: 10]>
  [298] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.room.id")), "MOVE", [#short: 31, #short: 10]>
  [300] objcall 291 ............................. getConnection(getVariable("connection.room.id")).send("MOVE", [#short: 31, #short: 10])
  [303] ret
end
