property pAnimCounter, pAnimList, pCurrentFrame, pCurtainsLocZ, pSplashs, pArrowCursor

on construct me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 444 ............................. pCurtainsLocZ = [:]
  [  6] pusharglist 0 ........................... <[:]>
  [  8] pushproplist ............................ <[:]>
  [  9] setlocal 0 .............................. tProps = [:]
  [ 11] pusharglist 0 ........................... <[:]>
  [ 13] pushproplist ............................ <[:]>
  [ 14] setprop 445 ............................. pSplashs = [:]
  [ 17] pushcons 0 .............................. <"thread.pelle">
  [ 19] pusharglistnoret 1 ...................... <"thread.pelle">
  [ 21] extcall 446 ............................. initThread("thread.pelle")
  [ 24] pushint8 1 .............................. <1>
  [ 26] pusharglistnoret 1 ...................... <1>
  [ 28] extcall 15 .............................. return 1
  [ 30] ret
end

on deconstruct me
  [  0] pushsymb 127 ............................ <#pellehyppy>
  [  2] pusharglistnoret 1 ...................... <#pellehyppy>
  [  4] extcall 447 ............................. closeThread(#pellehyppy)
  [  7] getparam 0 .............................. <me>
  [  9] pusharglist 1 ........................... <me>
  [ 11] objcall 61 .............................. <me.getID()>
  [ 13] pusharglistnoret 1 ...................... <me.getID()>
  [ 15] extcall 448 ............................. removeUpdate(me.getID())
  [ 18] pushsymb 449 ............................ <#waterripples>
  [ 21] pusharglist 1 ........................... <#waterripples>
  [ 23] extcall 131 ............................. <objectExists(#waterripples)>
  [ 25] jmpifz [ 35] ............................ if objectExists(#waterripples) then
  [ 28] pushsymb 449 ............................ <#waterripples>
  [ 31] pusharglistnoret 1 ...................... <#waterripples>
  [ 33] extcall 251 ............................. removeObject(#waterripples)
  [ 35] pusharglist 0 ........................... <>
  [ 37] extcall 198 ............................. <VOID>
  [ 39] setprop 445 ............................. pSplashs = VOID
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglistnoret 1 ...................... <me>
  [ 46] objcall 442 ............................. me.removeArrowCursor()
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglistnoret 1 ...................... <1>
  [ 53] extcall 15 .............................. return 1
  [ 55] ret
end

on prepare me
  [  0] pusharglist 0 ........................... <[:]>
  [  2] pushproplist ............................ <[:]>
  [  3] setprop 444 ............................. pCurtainsLocZ = [:]
  [  6] pushint8 1 .............................. <1>
  [  8] setlocal 0
  [ 10] getlocal 0
  [ 12] pushint8 2 .............................. <2>
  [ 14] lteq
  [ 15] jmpifz [ 80] ............................ repeat with f = 1 to 2
  [ 18] pushsymb 24 ............................. <#room>
  [ 20] pusharglist 1 ........................... <#room>
  [ 22] extcall 23 .............................. <getThread(#room)>
  [ 24] pusharglist 1 ........................... <getThread(#room)>
  [ 26] objcall 25 .............................. <getThread(#room).getInterface()>
  [ 28] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 30] objcall 143 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 32] pushcons 1 .............................. <"curtains">
  [ 34] getlocal 0 .............................. <f>
  [ 36] joinstr ................................. <"curtains" & f>
  [ 37] pusharglist 2 ........................... <getThread(#room).getInterface().getRoomVisualizer(), "curtains" & f>
  [ 39] objcall 144 ............................. <getThread(#room).getInterface().getRoomVisualizer().getSprById("curtains" & f)>
  [ 41] setlocal 1 .............................. tSpr = getThread(#room).getInterface().getRoomVisualizer().getSprById("curtains" & f)
  [ 43] getprop 444 ............................. <pCurtainsLocZ>
  [ 46] pushcons 1 .............................. <"curtains">
  [ 48] getlocal 0 .............................. <f>
  [ 50] joinstr ................................. <"curtains" & f>
  [ 51] getlocal 1 .............................. <tSpr>
  [ 53] getobjprop 145 .......................... <tSpr.locZ>
  [ 55] pusharglistnoret 3 ...................... <pCurtainsLocZ, "curtains" & f, tSpr.locZ>
  [ 57] objcall 84 .............................. pCurtainsLocZ["curtains" & f] = tSpr.locZ
  [ 59] getlocal 1 .............................. <tSpr>
  [ 61] getlocal 1 .............................. <tSpr>
  [ 63] getobjprop 145 .......................... <tSpr.locZ>
  [ 65] pushint16 2000 .......................... <2000>
  [ 68] sub ..................................... <tSpr.locZ - 2000>
  [ 69] setobjprop 145 .......................... tSpr.locZ = tSpr.locZ - 2000
  [ 71] pushint8 1
  [ 73] getlocal 0
  [ 75] add
  [ 76] setlocal 0
  [ 78] endrepeat [ 10]
  [ 80] pusharglist 0 ........................... <[:]>
  [ 82] pushproplist ............................ <[:]>
  [ 83] setlocal 2 .............................. tProps = [:]
  [ 85] pusharglist 0 ........................... <[:]>
  [ 87] pushproplist ............................ <[:]>
  [ 88] setprop 445 ............................. pSplashs = [:]
  [ 91] getprop 445 ............................. <pSplashs>
  [ 94] pushcons 2 .............................. <"Splash0">
  [ 96] pushsymb 154 ............................ <#temp>
  [ 98] pushcons 3 .............................. <"AnimSprite Class">
  [100] pusharglist 2 ........................... <#temp, "AnimSprite Class">
  [102] extcall 134 ............................. <createObject(#temp, "AnimSprite Class")>
  [104] pusharglistnoret 3 ...................... <pSplashs, "Splash0", createObject(#temp, "AnimSprite Class")>
  [106] objcall 450 ............................. pSplashs.addProp("Splash0", createObject(#temp, "AnimSprite Class"))
  [109] getlocal 2 .............................. <tProps>
  [111] pushsymb 135 ............................ <#visible>
  [113] pushzero ................................ <0>
  [114] pusharglistnoret 3 ...................... <tProps, #visible, 0>
  [116] objcall 84 .............................. tProps[#visible] = 0
  [118] getlocal 2 .............................. <tProps>
  [120] pushsymb 136 ............................ <#AnimFrames>
  [122] pushint8 10 ............................. <10>
  [124] pusharglistnoret 3 ...................... <tProps, #AnimFrames, 10>
  [126] objcall 84 .............................. tProps[#AnimFrames] = 10
  [128] getlocal 2 .............................. <tProps>
  [130] pushsymb 137 ............................ <#startFrame>
  [132] pushzero ................................ <0>
  [133] pusharglistnoret 3 ...................... <tProps, #startFrame, 0>
  [135] objcall 84 .............................. tProps[#startFrame] = 0
  [137] getlocal 2 .............................. <tProps>
  [139] pushsymb 138 ............................ <#MemberName>
  [141] pushcons 4 .............................. <"splash_">
  [143] pusharglistnoret 3 ...................... <tProps, #MemberName, "splash_">
  [145] objcall 84 .............................. tProps[#MemberName] = "splash_"
  [147] getlocal 2 .............................. <tProps>
  [149] pushsymb 139 ............................ <#id>
  [151] pushcons 2 .............................. <"Splash0">
  [153] pusharglistnoret 3 ...................... <tProps, #id, "Splash0">
  [155] objcall 84 .............................. tProps[#id] = "Splash0"
  [157] getprop 445 ............................. <pSplashs>
  [160] pushcons 2 .............................. <"Splash0">
  [162] pusharglist 2 ........................... <pSplashs, "Splash0">
  [164] objcall 83 .............................. <pSplashs["Splash0"]>
  [166] getlocal 2 .............................. <tProps>
  [168] pusharglistnoret 2 ...................... <pSplashs["Splash0"], tProps>
  [170] objcall 140 ............................. pSplashs["Splash0"].setData(tProps)
  [172] pushsymb 449 ............................ <#waterripples>
  [175] pusharglist 1 ........................... <#waterripples>
  [177] extcall 131 ............................. <objectExists(#waterripples)>
  [179] not ..................................... <not objectExists(#waterripples)>
  [180] jmpifz [192] ............................ if not objectExists(#waterripples) then
  [183] pushsymb 449 ............................ <#waterripples>
  [186] pushcons 5 .............................. <"Water Ripple Effects Class">
  [188] pusharglistnoret 2 ...................... <#waterripples, "Water Ripple Effects Class">
  [190] extcall 134 ............................. createObject(#waterripples, "Water Ripple Effects Class")
  [192] pushsymb 449 ............................ <#waterripples>
  [195] pusharglist 1 ........................... <#waterripples>
  [197] extcall 20 .............................. <getObject(#waterripples)>
  [199] pushcons 6 .............................. <"vesi1">
  [201] pusharglistnoret 2 ...................... <getObject(#waterripples), "vesi1">
  [203] objcall 1 ............................... getObject(#waterripples).Init("vesi1")
  [205] pushcons 7 .............................. <"pool_clickarea">
  [207] pushcons 8 .............................. <"floor">
  [209] pushcons 9 .............................. <"hiliter">
  [211] pushcons 6 .............................. <"vesi1">
  [213] pushcons 10 ............................. <"portaat0">
  [215] pusharglist 5 ........................... <["pool_clickarea", "floor", "hiliter", "vesi1", "portaat0"]>
  [217] pushlist ................................ <["pool_clickarea", "floor", "hiliter", "vesi1", "portaat0"]>
  [218] peek 0
  [220] pusharglist 1
  [222] extcall 82
  [224] pushint8 1
  [226] peek 0
  [228] peek 2
  [230] lteq
  [231] jmpifz [290] ............................ repeat with tid in ["pool_clickarea", "floor", "hiliter", "vesi1", "portaat0"]
  [234] peek 2
  [236] peek 1
  [238] pusharglist 2
  [240] extcall 83
  [242] setlocal 3
  [244] pushsymb 24 ............................. <#room>
  [246] pusharglist 1 ........................... <#room>
  [248] extcall 23 .............................. <getThread(#room)>
  [250] pusharglist 1 ........................... <getThread(#room)>
  [252] objcall 25 .............................. <getThread(#room).getInterface()>
  [254] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [256] objcall 143 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [258] getlocal 3 .............................. <tid>
  [260] pusharglist 2 ........................... <getThread(#room).getInterface().getRoomVisualizer(), tid>
  [262] objcall 144 ............................. <getThread(#room).getInterface().getRoomVisualizer().getSprById(tid)>
  [264] setlocal 1 .............................. tSpr = getThread(#room).getInterface().getRoomVisualizer().getSprById(tid)
  [266] getlocal 1 .............................. <tSpr>
  [268] pushsymb 443 ............................ <#poolTeleport>
  [271] getparam 0 .............................. <me>
  [273] pusharglist 1 ........................... <me>
  [275] objcall 61 .............................. <me.getID()>
  [277] pushsymb 261 ............................ <#mouseDown>
  [280] pusharglistnoret 4 ...................... <tSpr, #poolTeleport, me.getID(), #mouseDown>
  [282] extcall 260 ............................. registerProcedure(tSpr, #poolTeleport, me.getID(), #mouseDown)
  [285] pushint8 1
  [287] add
  [288] endrepeat [226]
  [290] pop 3
  [292] pushzero ................................ <0>
  [293] setprop 451 ............................. pArrowCursor = 0
  [296] pushsymb 24 ............................. <#room>
  [298] pusharglist 1 ........................... <#room>
  [300] extcall 452 ............................. <threadExists(#room)>
  [303] jmpifz [320] ............................ if threadExists(#room) then
  [306] pushsymb 24 ............................. <#room>
  [308] pusharglist 1 ........................... <#room>
  [310] extcall 23 .............................. <getThread(#room)>
  [312] pusharglist 1 ........................... <getThread(#room)>
  [314] objcall 25 .............................. <getThread(#room).getInterface()>
  [316] pusharglistnoret 1 ...................... <getThread(#room).getInterface()>
  [318] objcall 237 ............................. getThread(#room).getInterface().hideRoomBar()
  [320] pushsymb 127 ............................ <#pellehyppy>
  [322] pusharglist 1 ........................... <#pellehyppy>
  [324] extcall 23 .............................. <getThread(#pellehyppy)>
  [326] pusharglist 1 ........................... <getThread(#pellehyppy)>
  [328] objcall 25 .............................. <getThread(#pellehyppy).getInterface()>
  [330] pusharglistnoret 1 ...................... <getThread(#pellehyppy).getInterface()>
  [332] objcall 236 ............................. getThread(#pellehyppy).getInterface().showRoomBar()
  [334] getparam 0 .............................. <me>
  [336] pusharglist 1 ........................... <me>
  [338] objcall 61 .............................. <me.getID()>
  [340] pusharglistnoret 1 ...................... <me.getID()>
  [342] extcall 453 ............................. receiveUpdate(me.getID())
  [345] ret
end

on showprogram me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pusharglist 1 ........................... <tMsg>
  [  4] extcall 181 ............................. <voidp(tMsg)>
  [  6] jmpifz [ 14] ............................ if voidp(tMsg) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 15 .............................. return 0
  [ 14] getparam 1 .............................. <tMsg>
  [ 16] pushsymb 455 ............................ <#show_dest>
  [ 19] pusharglist 2 ........................... <tMsg, #show_dest>
  [ 21] objcall 83 .............................. <tMsg[#show_dest]>
  [ 23] setlocal 0 .............................. tDest = tMsg[#show_dest]
  [ 25] getparam 1 .............................. <tMsg>
  [ 27] pushsymb 456 ............................ <#show_command>
  [ 30] pusharglist 2 ........................... <tMsg, #show_command>
  [ 32] objcall 83 .............................. <tMsg[#show_command]>
  [ 34] setlocal 1 .............................. tCommand = tMsg[#show_command]
  [ 36] getparam 1 .............................. <tMsg>
  [ 38] pushsymb 457 ............................ <#show_params>
  [ 41] pusharglist 2 ........................... <tMsg, #show_params>
  [ 43] objcall 83 .............................. <tMsg[#show_params]>
  [ 45] setlocal 2 .............................. tParm = tMsg[#show_params]
  [ 47] getlocal 0 .............................. <tDest>
  [ 49] pushcons 1 .............................. <"curtains">
  [ 51] containsstr ............................. <tDest contains "curtains">
  [ 52] jmpifz [ 69] ............................ if tDest contains "curtains" then / else
  [ 55] getparam 0 .............................. <me>
  [ 57] getlocal 0 .............................. <tDest>
  [ 59] getlocal 1 .............................. <tCommand>
  [ 61] pusharglistnoret 3 ...................... <me, tDest, tCommand>
  [ 63] objcall 438 ............................. me.curtains(tDest, tCommand)
  [ 66] jmp [ 88]
  [ 69] getlocal 0 .............................. <tDest>
  [ 71] pushcons 11 ............................. <"Splash">
  [ 73] containsstr ............................. <tDest contains "Splash">
  [ 74] jmpifz [ 88] ............................ if tDest contains "Splash" then
  [ 77] getparam 0 .............................. <me>
  [ 79] getlocal 0 .............................. <tDest>
  [ 81] getlocal 1 .............................. <tCommand>
  [ 83] pusharglistnoret 3 ...................... <me, tDest, tCommand>
  [ 85] objcall 439 ............................. me.splash(tDest, tCommand)
  [ 88] ret
end

on curtains me, tid, tCommand
  [  0] getparam 2 .............................. <tCommand>
  [  2] peek 0 .................................. case tCommand of
  [  4] pushcons 12 ............................. <"open">
  [  6] eq
  [  7] jmpifz [ 22] ............................ (case) "open":
  [ 10] pushcons 13 ............................. <"verhot auki">
  [ 12] pusharglist 1 ........................... <"verhot auki">
  [ 14] extcall 461 ............................. <getMember("verhot auki")>
  [ 17] setlocal 0 .............................. tmember = getMember("verhot auki")
  [ 19] jmp [ 39]
  [ 22] peek 0
  [ 24] pushcons 14 ............................. <"close">
  [ 26] eq
  [ 27] jmpifz [ 39] ............................ (case) "close":
  [ 30] pushcons 15 ............................. <"verho kiinni">
  [ 32] pusharglist 1 ........................... <"verho kiinni">
  [ 34] extcall 461 ............................. <getMember("verho kiinni")>
  [ 37] setlocal 0 .............................. tmember = getMember("verho kiinni")
  [ 39] pop 1 ................................... end case
  [ 41] pushsymb 24 ............................. <#room>
  [ 43] pusharglist 1 ........................... <#room>
  [ 45] extcall 23 .............................. <getThread(#room)>
  [ 47] pusharglist 1 ........................... <getThread(#room)>
  [ 49] objcall 25 .............................. <getThread(#room).getInterface()>
  [ 51] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 53] objcall 143 ............................. <getThread(#room).getInterface().getRoomVisualizer()>
  [ 55] setlocal 1 .............................. tVisObj = getThread(#room).getInterface().getRoomVisualizer()
  [ 57] getlocal 1 .............................. <tVisObj>
  [ 59] pushzero ................................ <0>
  [ 60] eq ...................................... <tVisObj = 0>
  [ 61] jmpifz [ 69] ............................ if tVisObj = 0 then
  [ 64] pushzero ................................ <0>
  [ 65] pusharglistnoret 1 ...................... <0>
  [ 67] extcall 15 .............................. return 0
  [ 69] getlocal 1 .............................. <tVisObj>
  [ 71] getparam 1 .............................. <tid>
  [ 73] pusharglist 2 ........................... <tVisObj, tid>
  [ 75] objcall 144 ............................. <tVisObj.getSprById(tid)>
  [ 77] getlocal 0 .............................. <tmember>
  [ 79] pusharglistnoret 2 ...................... <tVisObj.getSprById(tid), tmember>
  [ 81] objcall 327 ............................. tVisObj.getSprById(tid).setMember(tmember)
  [ 84] pushint8 1 .............................. <1>
  [ 86] pusharglistnoret 1 ...................... <1>
  [ 88] extcall 15 .............................. return 1
  [ 90] ret
end

on splash me, tDest, tCommand
  [  0] getprop 445 ............................. <pSplashs>
  [  3] getparam 1 .............................. <tDest>
  [  5] pusharglist 2 ........................... <pSplashs, tDest>
  [  7] objcall 83 .............................. <pSplashs[tDest]>
  [  9] pusharglist 1 ........................... <pSplashs[tDest]>
  [ 11] extcall 181 ............................. <voidp(pSplashs[tDest])>
  [ 13] jmpifz [ 21] ............................ if voidp(pSplashs[tDest]) then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 15 .............................. return 0
  [ 21] pushsymb 141 ............................ <#Activate>
  [ 23] getprop 445 ............................. <pSplashs>
  [ 26] getparam 1 .............................. <tDest>
  [ 28] pusharglist 2 ........................... <pSplashs, tDest>
  [ 30] objcall 83 .............................. <pSplashs[tDest]>
  [ 32] pusharglistnoret 2 ...................... <#Activate, pSplashs[tDest]>
  [ 34] extcall 387 ............................. call(#Activate, pSplashs[tDest])
  [ 37] ret
end

on update me
  [  0] getprop 445 ............................. <pSplashs>
  [  3] getobjprop 82 ........................... <pSplashs.count>
  [  5] pushzero ................................ <0>
  [  6] gt ...................................... <pSplashs.count > 0>
  [  7] jmpifz [ 21] ............................ if pSplashs.count > 0 then
  [ 10] pushsymb 463 ............................ <#updateSplashs>
  [ 13] getprop 445 ............................. <pSplashs>
  [ 16] pusharglistnoret 2 ...................... <#updateSplashs, pSplashs>
  [ 18] extcall 387 ............................. call(#updateSplashs, pSplashs)
  [ 21] getprop 451 ............................. <pArrowCursor>
  [ 24] pusharglist 0 ........................... <>
  [ 26] thebuiltin 348 .......................... <the mouseH>
  [ 29] pushint16 694 ........................... <694>
  [ 32] gt ...................................... <the mouseH > 694>
  [ 33] or ...................................... <pArrowCursor or (the mouseH > 694)>
  [ 34] jmpifz [ 44] ............................ if pArrowCursor or (the mouseH > 694) then
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglistnoret 1 ...................... <me>
  [ 41] objcall 441 ............................. me.poolArrows()
  [ 44] ret
end

on poolArrows me
  [  0] pushint8 19 ............................. <19>
  [  2] pushint8 3 .............................. <3>
  [  4] pusharglist 2 ........................... <[19, 3]>
  [  6] pushlist ................................ <[19, 3]>
  [  7] setlocal 0 .............................. tStartPos = [19, 3]
  [  9] pushsymb 24 ............................. <#room>
  [ 11] pusharglist 1 ........................... <#room>
  [ 13] extcall 23 .............................. <getThread(#room)>
  [ 15] pusharglist 1 ........................... <getThread(#room)>
  [ 17] objcall 25 .............................. <getThread(#room).getInterface()>
  [ 19] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [ 21] objcall 26 .............................. <getThread(#room).getInterface().getGeometry()>
  [ 23] pusharglist 0 ........................... <>
  [ 25] thebuiltin 348 .......................... <the mouseH>
  [ 28] pusharglist 0 ........................... <>
  [ 30] thebuiltin 350 .......................... <the mouseV>
  [ 33] pusharglist 3 ........................... <getThread(#room).getInterface().getGeometry(), the mouseH, the mouseV>
  [ 35] objcall 464 ............................. <getThread(#room).getInterface().getGeometry().getWorldCoordinate(the mouseH, the mouseV)>
  [ 38] setlocal 1 .............................. tloc = getThread(#room).getInterface().getGeometry().getWorldCoordinate(the mouseH, the mouseV)
  [ 40] getlocal 1 .............................. <tloc>
  [ 42] getobjprop 10 ........................... <tloc.ilk>
  [ 44] pushsymb 465 ............................ <#list>
  [ 47] nteq .................................... <tloc.ilk <> #list>
  [ 48] jmpifz [ 62] ............................ if tloc.ilk <> #list then
  [ 51] getparam 0 .............................. <me>
  [ 53] pusharglist 1 ........................... <me>
  [ 55] objcall 442 ............................. <me.removeArrowCursor()>
  [ 58] pusharglistnoret 1 ...................... <me.removeArrowCursor()>
  [ 60] extcall 15 .............................. return me.removeArrowCursor()
  [ 62] getlocal 0 .............................. <tStartPos>
  [ 64] pushint8 1 .............................. <1>
  [ 66] pusharglist 2 ........................... <tStartPos, 1>
  [ 68] objcall 83 .............................. <tStartPos[1]>
  [ 70] getlocal 1 .............................. <tloc>
  [ 72] pushint8 1 .............................. <1>
  [ 74] pusharglist 2 ........................... <tloc, 1>
  [ 76] objcall 83 .............................. <tloc[1]>
  [ 78] sub ..................................... <tStartPos[1] - tloc[1]>
  [ 79] getlocal 0 .............................. <tStartPos>
  [ 81] pushint8 2 .............................. <2>
  [ 83] pusharglist 2 ........................... <tStartPos, 2>
  [ 85] objcall 83 .............................. <tStartPos[2]>
  [ 87] getlocal 1 .............................. <tloc>
  [ 89] pushint8 2 .............................. <2>
  [ 91] pusharglist 2 ........................... <tloc, 2>
  [ 93] objcall 83 .............................. <tloc[2]>
  [ 95] sub ..................................... <tStartPos[2] - tloc[2]>
  [ 96] eq ...................................... <(tStartPos[1] - tloc[1]) = (tStartPos[2] - tloc[2])>
  [ 97] jmpifz [136] ............................ if (tStartPos[1] - tloc[1]) = (tStartPos[2] - tloc[2]) then / else
  [100] pushint8 1 .............................. <1>
  [102] setprop 451 ............................. pArrowCursor = 1
  [105] pushcons 16 ............................. <"cursor_arrow_r">
  [107] pusharglist 1 ........................... <"cursor_arrow_r">
  [109] extcall 74 .............................. <getmemnum("cursor_arrow_r")>
  [111] pusharglist 1 ........................... <getmemnum("cursor_arrow_r")>
  [113] extcall 73 .............................. <member(getmemnum("cursor_arrow_r"))>
  [115] pushcons 17 ............................. <"cursor_arrow_r_mask">
  [117] pusharglist 1 ........................... <"cursor_arrow_r_mask">
  [119] extcall 74 .............................. <getmemnum("cursor_arrow_r_mask")>
  [121] pusharglist 1 ........................... <getmemnum("cursor_arrow_r_mask")>
  [123] extcall 73 .............................. <member(getmemnum("cursor_arrow_r_mask"))>
  [125] pusharglist 2 ........................... <[member(getmemnum("cursor_arrow_r")), member(getmemnum("cursor_arrow_r_mask"))]>
  [127] pushlist ................................ <[member(getmemnum("cursor_arrow_r")), member(getmemnum("cursor_arrow_r_mask"))]>
  [128] pusharglistnoret 1 ...................... <[member(getmemnum("cursor_arrow_r")), member(getmemnum("cursor_arrow_r_mask"))]>
  [130] extcall 466 ............................. cursor([member(getmemnum("cursor_arrow_r")), member(getmemnum("cursor_arrow_r_mask"))])
  [133] jmp [143]
  [136] getparam 0 .............................. <me>
  [138] pusharglistnoret 1 ...................... <me>
  [140] objcall 442 ............................. me.removeArrowCursor()
  [143] ret
end

on removeArrowCursor me
  [  0] pushzero ................................ <0>
  [  1] setprop 451 ............................. pArrowCursor = 0
  [  4] pushint8 1 .............................. <1>
  [  6] inv ..................................... <-1>
  [  7] pusharglistnoret 1 ...................... <-1>
  [  9] extcall 466 ............................. cursor(-1)
  [ 12] pushint8 1 .............................. <1>
  [ 14] pusharglistnoret 1 ...................... <1>
  [ 16] extcall 15 .............................. return 1
  [ 18] ret
end

on poolTeleport me, tEvent, tSprID, tParm
  [  0] pushsymb 21 ............................. <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 20 .............................. <getObject(#session)>
  [  6] pushcons 18 ............................. <"user_index">
  [  8] pusharglist 2 ........................... <getObject(#session), "user_index">
  [ 10] objcall 22 .............................. <getObject(#session).get("user_index")>
  [ 12] setlocal 0 .............................. tMyIndex = getObject(#session).get("user_index")
  [ 14] pushsymb 24 ............................. <#room>
  [ 16] pusharglist 1 ........................... <#room>
  [ 18] extcall 23 .............................. <getThread(#room)>
  [ 20] pusharglist 1 ........................... <getThread(#room)>
  [ 22] objcall 128 ............................. <getThread(#room).getComponent()>
  [ 24] getlocal 0 .............................. <tMyIndex>
  [ 26] pusharglist 2 ........................... <getThread(#room).getComponent(), tMyIndex>
  [ 28] objcall 386 ............................. <getThread(#room).getComponent().getUserObject(tMyIndex)>
  [ 31] setlocal 1 .............................. tObject = getThread(#room).getComponent().getUserObject(tMyIndex)
  [ 33] getlocal 1 .............................. <tObject>
  [ 35] pushzero ................................ <0>
  [ 36] eq ...................................... <tObject = 0>
  [ 37] jmpifz [ 58] ............................ if tObject = 0 then
  [ 40] getparam 0 .............................. <me>
  [ 42] pushcons 19 ............................. <"Userobject not found:">
  [ 44] getlocal 0 .............................. <tMyIndex>
  [ 46] joinpadstr .............................. <"Userobject not found:" && tMyIndex>
  [ 47] pushsymb 443 ............................ <#poolTeleport>
  [ 50] pusharglist 3 ........................... <me, "Userobject not found:" && tMyIndex, #poolTeleport>
  [ 52] extcall 101 ............................. <error(me, "Userobject not found:" && tMyIndex, #poolTeleport)>
  [ 54] pusharglistnoret 1 ...................... <error(me, "Userobject not found:" && tMyIndex, #poolTeleport)>
  [ 56] extcall 15 .............................. return error(me, "Userobject not found:" && tMyIndex, #poolTeleport)
  [ 58] getlocal 1 .............................. <tObject>
  [ 60] pusharglist 1 ........................... <tObject>
  [ 62] objcall 469 ............................. <tObject.getLocation()>
  [ 65] setlocal 2 .............................. tloc = tObject.getLocation()
  [ 67] pushsymb 24 ............................. <#room>
  [ 69] pusharglist 1 ........................... <#room>
  [ 71] extcall 23 .............................. <getThread(#room)>
  [ 73] pusharglist 1 ........................... <getThread(#room)>
  [ 75] objcall 25 .............................. <getThread(#room).getInterface()>
  [ 77] getparam 1 .............................. <tEvent>
  [ 79] pushcons 8 .............................. <"floor">
  [ 81] getparam 3 .............................. <tParm>
  [ 83] pusharglistnoret 4 ...................... <getThread(#room).getInterface(), tEvent, "floor", tParm>
  [ 85] objcall 470 ............................. getThread(#room).getInterface().eventProcRoom(tEvent, "floor", tParm)
  [ 88] getparam 2 .............................. <tSprID>
  [ 90] pushcons 7 .............................. <"pool_clickarea">
  [ 92] containsstr ............................. <tSprID contains "pool_clickarea">
  [ 93] not ..................................... <not (tSprID contains "pool_clickarea")>
  [ 94] getlocal 2 .............................. <tloc>
  [ 96] pushint8 3 .............................. <3>
  [ 98] pusharglist 2 ........................... <tloc, 3>
  [100] objcall 83 .............................. <tloc[3]>
  [102] pushint8 7 .............................. <7>
  [104] lt ...................................... <tloc[3] < 7>
  [105] and ..................................... <not (tSprID contains "pool_clickarea") and (tloc[3] < 7)>
  [106] jmpifz [144] ............................ if not (tSprID contains "pool_clickarea") and (tloc[3] < 7) then / else
  [109] pushcons 20 ............................. <"connection.room.id">
  [111] pusharglist 1 ........................... <"connection.room.id">
  [113] extcall 290 ............................. <getVariable("connection.room.id")>
  [116] pusharglist 1 ........................... <getVariable("connection.room.id")>
  [118] extcall 289 ............................. <getConnection(getVariable("connection.room.id"))>
  [121] pushcons 21 ............................. <"MOVE">
  [123] pushsymb 471 ............................ <#short>
  [126] pushint8 21 ............................. <21>
  [128] pushsymb 471 ............................ <#short>
  [131] pushint8 28 ............................. <28>
  [133] pusharglist 4 ........................... <[#short: 21, #short: 28]>
  [135] pushproplist ............................ <[#short: 21, #short: 28]>
  [136] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.room.id")), "MOVE", [#short: 21, #short: 28]>
  [138] objcall 291 ............................. getConnection(getVariable("connection.room.id")).send("MOVE", [#short: 21, #short: 28])
  [141] jmp [196]
  [144] getparam 2 .............................. <tSprID>
  [146] pushcons 7 .............................. <"pool_clickarea">
  [148] containsstr ............................. <tSprID contains "pool_clickarea">
  [149] getlocal 2 .............................. <tloc>
  [151] pushint8 3 .............................. <3>
  [153] pusharglist 2 ........................... <tloc, 3>
  [155] objcall 83 .............................. <tloc[3]>
  [157] pushint8 7 .............................. <7>
  [159] eq ...................................... <tloc[3] = 7>
  [160] and ..................................... <(tSprID contains "pool_clickarea") and (tloc[3] = 7)>
  [161] jmpifz [196] ............................ if (tSprID contains "pool_clickarea") and (tloc[3] = 7) then
  [164] pushcons 20 ............................. <"connection.room.id">
  [166] pusharglist 1 ........................... <"connection.room.id">
  [168] extcall 290 ............................. <getVariable("connection.room.id")>
  [171] pusharglist 1 ........................... <getVariable("connection.room.id")>
  [173] extcall 289 ............................. <getConnection(getVariable("connection.room.id"))>
  [176] pushcons 21 ............................. <"MOVE">
  [178] pushsymb 471 ............................ <#short>
  [181] pushint8 20 ............................. <20>
  [183] pushsymb 471 ............................ <#short>
  [186] pushint8 28 ............................. <28>
  [188] pusharglist 4 ........................... <[#short: 20, #short: 28]>
  [190] pushproplist ............................ <[#short: 20, #short: 28]>
  [191] pusharglistnoret 3 ...................... <getConnection(getVariable("connection.room.id")), "MOVE", [#short: 20, #short: 28]>
  [193] objcall 291 ............................. getConnection(getVariable("connection.room.id")).send("MOVE", [#short: 20, #short: 28])
  [196] ret
end
