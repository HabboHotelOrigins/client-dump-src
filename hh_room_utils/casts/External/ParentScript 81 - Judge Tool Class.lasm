property pWindowID, pVote, pPerformerID

on construct me
  [  0] pushsymb 1625 ........................... <#judge_tool_window>
  [  3] setprop 494 ............................. pWindowID = #judge_tool_window
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 50 .............................. return 1
  [ 12] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 8 ............................... me.close()
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 1 ...................... <1>
  [ 10] extcall 50 .............................. return 1
  [ 12] ret
end

on close me
  [  0] getprop 494 ............................. <pWindowID>
  [  3] pusharglist 1 ........................... <pWindowID>
  [  5] extcall 72 .............................. <windowExists(pWindowID)>
  [  7] jmpifz [ 17] ............................ if windowExists(pWindowID) then
  [ 10] getprop 494 ............................. <pWindowID>
  [ 13] pusharglistnoret 1 ...................... <pWindowID>
  [ 15] extcall 129 ............................. removeWindow(pWindowID)
  [ 17] ret
end

on setState me, tstate, tPerformerID
  [  0] getparam 1 .............................. <tstate>
  [  2] pusharglist 1 ........................... <tstate>
  [  4] extcall 53 .............................. <integerp(tstate)>
  [  6] not ..................................... <not integerp(tstate)>
  [  7] jmpifz [ 15] ............................ if not integerp(tstate) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 50 .............................. return 0
  [ 15] getparam 1 .............................. <tstate>
  [ 17] pushzero ................................ <0>
  [ 18] eq ...................................... <tstate = 0>
  [ 19] jmpifz [ 32] ............................ if tstate = 0 then
  [ 22] getparam 0 .............................. <me>
  [ 24] pusharglist 1 ........................... <me>
  [ 26] objcall 8 ............................... <me.close()>
  [ 28] pusharglistnoret 1 ...................... <me.close()>
  [ 30] extcall 50 .............................. return me.close()
  [ 32] getprop 494 ............................. <pWindowID>
  [ 35] pusharglist 1 ........................... <pWindowID>
  [ 37] extcall 86 .............................. <createWindow(pWindowID)>
  [ 39] not ..................................... <not createWindow(pWindowID)>
  [ 40] jmpifz [ 54] ............................ if not createWindow(pWindowID) then
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglistnoret 1 ...................... <me>
  [ 47] objcall 8 ............................... me.close()
  [ 49] pushzero ................................ <0>
  [ 50] pusharglistnoret 1 ...................... <0>
  [ 52] extcall 50 .............................. return 0
  [ 54] getprop 494 ............................. <pWindowID>
  [ 57] pusharglist 1 ........................... <pWindowID>
  [ 59] extcall 87 .............................. <getWindow(pWindowID)>
  [ 61] setlocal 0 .............................. tWindow = getWindow(pWindowID)
  [ 63] getlocal 0 .............................. <tWindow>
  [ 65] pushsymb 273 ............................ <#title>
  [ 68] pushcons 0 .............................. <"judge_tool_title">
  [ 70] pusharglist 1 ........................... <"judge_tool_title">
  [ 72] extcall 31 .............................. <getText("judge_tool_title")>
  [ 74] pusharglistnoret 3 ...................... <tWindow, #title, getText("judge_tool_title")>
  [ 76] objcall 81 .............................. tWindow.setProperty(#title, getText("judge_tool_title"))
  [ 78] getlocal 0 .............................. <tWindow>
  [ 80] pushcons 1 .............................. <"habbo_full.window">
  [ 82] pusharglistnoret 2 ...................... <tWindow, "habbo_full.window">
  [ 84] objcall 88 .............................. tWindow.merge("habbo_full.window")
  [ 86] getparam 1 .............................. <tstate>
  [ 88] peek 0 .................................. case tstate of
  [ 90] pushint8 1 .............................. <1>
  [ 92] eq
  [ 93] jmpifz [107] ............................ (case) 1:
  [ 96] getlocal 0 .............................. <tWindow>
  [ 98] pushcons 2 .............................. <"judge_waiting.window">
  [100] pusharglistnoret 2 ...................... <tWindow, "judge_waiting.window">
  [102] objcall 88 .............................. tWindow.merge("judge_waiting.window")
  [104] jmp [303]
  [107] peek 0
  [109] pushint8 2 .............................. <2>
  [111] eq
  [112] jmpifz [177] ............................ (case) 2:
  [115] getparam 2 .............................. <tPerformerID>
  [117] pusharglist 1 ........................... <tPerformerID>
  [119] extcall 53 .............................. <integerp(tPerformerID)>
  [121] not ..................................... <not integerp(tPerformerID)>
  [122] jmpifz [137] ............................ if not integerp(tPerformerID) then
  [125] getparam 0 .............................. <me>
  [127] pusharglistnoret 1 ...................... <me>
  [129] objcall 8 ............................... me.close()
  [131] pop 1
  [133] pusharglistnoret 0 ...................... <>
  [135] extcall 50 .............................. return 
  [137] getparam 2 .............................. <tPerformerID>
  [139] setprop 1626 ............................ pPerformerID = tPerformerID
  [142] getlocal 0 .............................. <tWindow>
  [144] pushcons 3 .............................. <"judge_voting.window">
  [146] pusharglistnoret 2 ...................... <tWindow, "judge_voting.window">
  [148] objcall 88 .............................. tWindow.merge("judge_voting.window")
  [150] getlocal 0 .............................. <tWindow>
  [152] pushsymb 1624 ........................... <#eventProcVote>
  [155] getparam 0 .............................. <me>
  [157] pusharglist 1 ........................... <me>
  [159] objcall 89 .............................. <me.getID()>
  [161] pushsymb 119 ............................ <#mouseUp>
  [163] pusharglistnoret 4 ...................... <tWindow, #eventProcVote, me.getID(), #mouseUp>
  [165] objcall 91 .............................. tWindow.registerProcedure(#eventProcVote, me.getID(), #mouseUp)
  [167] getparam 0 .............................. <me>
  [169] pusharglistnoret 1 ...................... <me>
  [171] objcall 1623 ............................ me.updatePerformerInfo()
  [174] jmp [303]
  [177] peek 0
  [179] pushint8 3 .............................. <3>
  [181] eq
  [182] jmpifz [290] ............................ (case) 3:
  [185] getlocal 0 .............................. <tWindow>
  [187] pushcons 4 .............................. <"judge_ready.window">
  [189] pusharglistnoret 2 ...................... <tWindow, "judge_ready.window">
  [191] objcall 88 .............................. tWindow.merge("judge_ready.window")
  [193] getlocal 0 .............................. <tWindow>
  [195] pushcons 5 .............................. <"vote_result">
  [197] pusharglist 2 ........................... <tWindow, "vote_result">
  [199] objcall 94 .............................. <tWindow.elementExists("vote_result")>
  [201] jmpifz [280] ............................ if tWindow.elementExists("vote_result") then
  [204] getprop 1627 ............................ <pVote>
  [207] peek 0 .................................. case pVote of
  [209] pushint8 1 .............................. <1>
  [211] inv ..................................... <-1>
  [212] eq
  [213] jmpifz [237] ............................ (case) (-1):
  [216] getlocal 0 .............................. <tWindow>
  [218] pushcons 5 .............................. <"vote_result">
  [220] pusharglist 2 ........................... <tWindow, "vote_result">
  [222] objcall 92 .............................. <tWindow.getElement("vote_result")>
  [224] pushcons 6 .............................. <"judge_voted_no">
  [226] pusharglist 1 ........................... <"judge_voted_no">
  [228] extcall 31 .............................. <getText("judge_voted_no")>
  [230] pusharglistnoret 2 ...................... <tWindow.getElement("vote_result"), getText("judge_voted_no")>
  [232] objcall 93 .............................. tWindow.getElement("vote_result").setText(getText("judge_voted_no"))
  [234] jmp [278]
  [237] peek 0
  [239] pushint8 1 .............................. <1>
  [241] eq
  [242] jmpifz [266] ............................ (case) 1:
  [245] getlocal 0 .............................. <tWindow>
  [247] pushcons 5 .............................. <"vote_result">
  [249] pusharglist 2 ........................... <tWindow, "vote_result">
  [251] objcall 92 .............................. <tWindow.getElement("vote_result")>
  [253] pushcons 7 .............................. <"judge_voted_yes">
  [255] pusharglist 1 ........................... <"judge_voted_yes">
  [257] extcall 31 .............................. <getText("judge_voted_yes")>
  [259] pusharglistnoret 2 ...................... <tWindow.getElement("vote_result"), getText("judge_voted_yes")>
  [261] objcall 93 .............................. tWindow.getElement("vote_result").setText(getText("judge_voted_yes"))
  [263] jmp [278] ............................... (case) otherwise:
  [266] pop 2
  [268] getparam 0 .............................. <me>
  [270] pusharglist 1 ........................... <me>
  [272] objcall 8 ............................... <me.close()>
  [274] pusharglistnoret 1 ...................... <me.close()>
  [276] extcall 50 .............................. return me.close()
  [278] pop 1 ................................... end case
  [280] getparam 0 .............................. <me>
  [282] pusharglistnoret 1 ...................... <me>
  [284] objcall 1623 ............................ me.updatePerformerInfo()
  [287] jmp [303] ............................... (case) otherwise:
  [290] getparam 0 .............................. <me>
  [292] pusharglistnoret 1 ...................... <me>
  [294] objcall 8 ............................... me.close()
  [296] pop 1
  [298] pushzero ................................ <0>
  [299] pusharglistnoret 1 ...................... <0>
  [301] extcall 50 .............................. return 0
  [303] pop 1 ................................... end case
  [305] getlocal 0 .............................. <tWindow>
  [307] pushcons 8 .............................. <"close">
  [309] pusharglist 2 ........................... <tWindow, "close">
  [311] objcall 94 .............................. <tWindow.elementExists("close")>
  [313] jmpifz [329] ............................ if tWindow.elementExists("close") then
  [316] getlocal 0 .............................. <tWindow>
  [318] pushcons 8 .............................. <"close">
  [320] pusharglist 2 ........................... <tWindow, "close">
  [322] objcall 92 .............................. <tWindow.getElement("close")>
  [324] pusharglistnoret 1 ...................... <tWindow.getElement("close")>
  [326] objcall 315 ............................. tWindow.getElement("close").hide()
  [329] ret
end

on updatePerformerInfo me
  [  0] pushsymb 77 ............................. <#room>
  [  2] pusharglist 1 ........................... <#room>
  [  4] extcall 126 ............................. <threadExists(#room)>
  [  6] not ..................................... <not threadExists(#room)>
  [  7] jmpifz [ 15] ............................ if not threadExists(#room) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 50 .............................. return 0
  [ 15] pushsymb 77 ............................. <#room>
  [ 17] pusharglist 1 ........................... <#room>
  [ 19] extcall 76 .............................. <getThread(#room)>
  [ 21] pusharglist 1 ........................... <getThread(#room)>
  [ 23] objcall 82 .............................. <getThread(#room).getComponent()>
  [ 25] getprop 1626 ............................ <pPerformerID>
  [ 28] pusharglist 2 ........................... <getThread(#room).getComponent(), pPerformerID>
  [ 30] objcall 83 .............................. <getThread(#room).getComponent().getUserObjectByWebID(pPerformerID)>
  [ 32] setlocal 0 .............................. tuser = getThread(#room).getComponent().getUserObjectByWebID(pPerformerID)
  [ 34] getlocal 0 .............................. <tuser>
  [ 36] not ..................................... <not tuser>
  [ 37] jmpifz [ 50] ............................ if not tuser then
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglist 1 ........................... <me>
  [ 44] objcall 8 ............................... <me.close()>
  [ 46] pusharglistnoret 1 ...................... <me.close()>
  [ 48] extcall 50 .............................. return me.close()
  [ 50] getprop 494 ............................. <pWindowID>
  [ 53] pusharglist 1 ........................... <pWindowID>
  [ 55] extcall 87 .............................. <getWindow(pWindowID)>
  [ 57] setlocal 1 .............................. tWindow = getWindow(pWindowID)
  [ 59] getlocal 1 .............................. <tWindow>
  [ 61] not ..................................... <not tWindow>
  [ 62] jmpifz [ 70] ............................ if not tWindow then
  [ 65] pushzero ................................ <0>
  [ 66] pusharglistnoret 1 ...................... <0>
  [ 68] extcall 50 .............................. return 0
  [ 70] getlocal 1 .............................. <tWindow>
  [ 72] pushcons 9 .............................. <"performer_name">
  [ 74] pusharglist 2 ........................... <tWindow, "performer_name">
  [ 76] objcall 94 .............................. <tWindow.elementExists("performer_name")>
  [ 78] jmpifz [ 99] ............................ if tWindow.elementExists("performer_name") then
  [ 81] getlocal 1 .............................. <tWindow>
  [ 83] pushcons 9 .............................. <"performer_name">
  [ 85] pusharglist 2 ........................... <tWindow, "performer_name">
  [ 87] objcall 92 .............................. <tWindow.getElement("performer_name")>
  [ 89] getlocal 0 .............................. <tuser>
  [ 91] pusharglist 1 ........................... <tuser>
  [ 93] objcall 85 .............................. <tuser.getName()>
  [ 95] pusharglistnoret 2 ...................... <tWindow.getElement("performer_name"), tuser.getName()>
  [ 97] objcall 93 .............................. tWindow.getElement("performer_name").setText(tuser.getName())
  [ 99] getlocal 0 .............................. <tuser>
  [101] pushsymb 1226 ........................... <#head>
  [104] pusharglist 0 ........................... <>
  [106] extcall 118 ............................. <VOID>
  [108] pushint8 2 .............................. <2>
  [110] pushcons 10 ............................. <"sh">
  [112] pusharglist 5 ........................... <tuser, #head, VOID, 2, "sh">
  [114] objcall 1630 ............................ <tuser.getPartialPicture(#head, VOID, 2, "sh")>
  [117] setlocal 2 .............................. tImage = tuser.getPartialPicture(#head, VOID, 2, "sh")
  [119] getlocal 2 .............................. <tImage>
  [121] pusharglist 1 ........................... <tImage>
  [123] objcall 627 ............................. <tImage.trimWhiteSpace()>
  [126] setlocal 2 .............................. tImage = tImage.trimWhiteSpace()
  [128] getlocal 1 .............................. <tWindow>
  [130] pushcons 11 ............................. <"performer_image">
  [132] pusharglist 2 ........................... <tWindow, "performer_image">
  [134] objcall 94 .............................. <tWindow.elementExists("performer_image")>
  [136] jmpifz [153] ............................ if tWindow.elementExists("performer_image") then
  [139] getlocal 1 .............................. <tWindow>
  [141] pushcons 11 ............................. <"performer_image">
  [143] pusharglist 2 ........................... <tWindow, "performer_image">
  [145] objcall 92 .............................. <tWindow.getElement("performer_image")>
  [147] getlocal 2 .............................. <tImage>
  [149] pusharglistnoret 2 ...................... <tWindow.getElement("performer_image"), tImage>
  [151] objcall 170 ............................. tWindow.getElement("performer_image").feedImage(tImage)
  [153] ret
end

on eventProcVote me, tEvent, tSprID, tParam
  [  0] pushcons 12 ............................. <"connection.info.id">
  [  2] pusharglist 1 ........................... <"connection.info.id">
  [  4] extcall 267 ............................. <getVariable("connection.info.id")>
  [  7] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [  9] extcall 266 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 12] setlocal 0 .............................. tConn = getConnection(getVariable("connection.info.id"))
  [ 14] getlocal 0 .............................. <tConn>
  [ 16] not ..................................... <not tConn>
  [ 17] jmpifz [ 30] ............................ if not tConn then
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 1 ........................... <me>
  [ 24] objcall 8 ............................... <me.close()>
  [ 26] pusharglistnoret 1 ...................... <me.close()>
  [ 28] extcall 50 .............................. return me.close()
  [ 30] getparam 2 .............................. <tSprID>
  [ 32] peek 0 .................................. case tSprID of
  [ 34] pushcons 13 ............................. <"vote_button_yes">
  [ 36] eq
  [ 37] jmpifz [ 73] ............................ (case) "vote_button_yes":
  [ 40] pushint8 1 .............................. <1>
  [ 42] setprop 1627 ............................ pVote = 1
  [ 45] getparam 0 .............................. <me>
  [ 47] pushint8 3 .............................. <3>
  [ 49] pusharglistnoret 2 ...................... <me, 3>
  [ 51] objcall 1622 ............................ me.setState(3)
  [ 54] getlocal 0 .............................. <tConn>
  [ 56] pushcons 14 ............................. <"VOTE_PERFORMANCE">
  [ 58] pushsymb 172 ............................ <#integer>
  [ 60] pushint8 1 .............................. <1>
  [ 62] pusharglist 2 ........................... <[#integer: 1]>
  [ 64] pushproplist ............................ <[#integer: 1]>
  [ 65] pusharglistnoret 3 ...................... <tConn, "VOTE_PERFORMANCE", [#integer: 1]>
  [ 67] objcall 268 ............................. tConn.send("VOTE_PERFORMANCE", [#integer: 1])
  [ 70] jmp [113]
  [ 73] peek 0
  [ 75] pushcons 15 ............................. <"vote_button_no">
  [ 77] eq
  [ 78] jmpifz [113] ............................ (case) "vote_button_no":
  [ 81] pushint8 1 .............................. <1>
  [ 83] inv ..................................... <-1>
  [ 84] setprop 1627 ............................ pVote = -1
  [ 87] getparam 0 .............................. <me>
  [ 89] pushint8 3 .............................. <3>
  [ 91] pusharglistnoret 2 ...................... <me, 3>
  [ 93] objcall 1622 ............................ me.setState(3)
  [ 96] getlocal 0 .............................. <tConn>
  [ 98] pushcons 14 ............................. <"VOTE_PERFORMANCE">
  [100] pushsymb 172 ............................ <#integer>
  [102] pushint8 1 .............................. <1>
  [104] inv ..................................... <-1>
  [105] pusharglist 2 ........................... <[#integer: -1]>
  [107] pushproplist ............................ <[#integer: -1]>
  [108] pusharglistnoret 3 ...................... <tConn, "VOTE_PERFORMANCE", [#integer: -1]>
  [110] objcall 268 ............................. tConn.send("VOTE_PERFORMANCE", [#integer: -1])
  [113] pop 1 ................................... end case
  [115] ret
end
