property pBadges, pRects, pColumns, pMinRows, pGridSize, pWriterIdPlain, pWriterIdBold, pBg, pBgNew, pBgHilite

on construct me
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 804 ............................. pBadges = []
  [  6] pusharglist 0 ........................... <[:]>
  [  8] pushproplist ............................ <[:]>
  [  9] setprop 1419 ............................ pRects = [:]
  [ 12] pushint8 3 .............................. <3>
  [ 14] setprop 1420 ............................ pColumns = 3
  [ 17] pushint8 4 .............................. <4>
  [ 19] setprop 1421 ............................ pMinRows = 4
  [ 22] pushint8 47 ............................. <47>
  [ 24] setprop 1422 ............................ pGridSize = 47
  [ 27] pusharglist 0 ........................... <>
  [ 29] extcall 768 ............................. <getUniqueID()>
  [ 32] setprop 1423 ............................ pWriterIdPlain = getUniqueID()
  [ 35] pusharglist 0 ........................... <>
  [ 37] extcall 768 ............................. <getUniqueID()>
  [ 40] setprop 1424 ............................ pWriterIdBold = getUniqueID()
  [ 43] pushcons 0 .............................. <"badge_grid_bg">
  [ 45] pusharglist 1 ........................... <"badge_grid_bg">
  [ 47] extcall 204 ............................. <memberExists("badge_grid_bg")>
  [ 49] jmpifz [ 71] ............................ if memberExists("badge_grid_bg") then / else
  [ 52] pushcons 0 .............................. <"badge_grid_bg">
  [ 54] pusharglist 1 ........................... <"badge_grid_bg">
  [ 56] extcall 305 ............................. <getmemnum("badge_grid_bg")>
  [ 59] pusharglist 1 ........................... <getmemnum("badge_grid_bg")>
  [ 61] extcall 134 ............................. <member(getmemnum("badge_grid_bg"))>
  [ 63] getobjprop 175 .......................... <member(getmemnum("badge_grid_bg")).image>
  [ 65] setprop 1425 ............................ pBg = member(getmemnum("badge_grid_bg")).image
  [ 68] jmp [ 84]
  [ 71] pushint8 1 .............................. <1>
  [ 73] pushint8 1 .............................. <1>
  [ 75] pushint8 8 .............................. <8>
  [ 77] pusharglist 3 ........................... <1, 1, 8>
  [ 79] extcall 175 ............................. <image(1, 1, 8)>
  [ 81] setprop 1425 ............................ pBg = image(1, 1, 8)
  [ 84] pushcons 1 .............................. <"badge_grid_bg_new">
  [ 86] pusharglist 1 ........................... <"badge_grid_bg_new">
  [ 88] extcall 204 ............................. <memberExists("badge_grid_bg_new")>
  [ 90] jmpifz [112] ............................ if memberExists("badge_grid_bg_new") then / else
  [ 93] pushcons 1 .............................. <"badge_grid_bg_new">
  [ 95] pusharglist 1 ........................... <"badge_grid_bg_new">
  [ 97] extcall 305 ............................. <getmemnum("badge_grid_bg_new")>
  [100] pusharglist 1 ........................... <getmemnum("badge_grid_bg_new")>
  [102] extcall 134 ............................. <member(getmemnum("badge_grid_bg_new"))>
  [104] getobjprop 175 .......................... <member(getmemnum("badge_grid_bg_new")).image>
  [106] setprop 1426 ............................ pBgNew = member(getmemnum("badge_grid_bg_new")).image
  [109] jmp [125]
  [112] pushint8 1 .............................. <1>
  [114] pushint8 1 .............................. <1>
  [116] pushint8 8 .............................. <8>
  [118] pusharglist 3 ........................... <1, 1, 8>
  [120] extcall 175 ............................. <image(1, 1, 8)>
  [122] setprop 1426 ............................ pBgNew = image(1, 1, 8)
  [125] pushcons 2 .............................. <"badge_grid_bg_hilite">
  [127] pusharglist 1 ........................... <"badge_grid_bg_hilite">
  [129] extcall 204 ............................. <memberExists("badge_grid_bg_hilite")>
  [131] jmpifz [153] ............................ if memberExists("badge_grid_bg_hilite") then / else
  [134] pushcons 2 .............................. <"badge_grid_bg_hilite">
  [136] pusharglist 1 ........................... <"badge_grid_bg_hilite">
  [138] extcall 305 ............................. <getmemnum("badge_grid_bg_hilite")>
  [141] pusharglist 1 ........................... <getmemnum("badge_grid_bg_hilite")>
  [143] extcall 134 ............................. <member(getmemnum("badge_grid_bg_hilite"))>
  [145] getobjprop 175 .......................... <member(getmemnum("badge_grid_bg_hilite")).image>
  [147] setprop 1427 ............................ pBgHilite = member(getmemnum("badge_grid_bg_hilite")).image
  [150] jmp [166]
  [153] pushint8 1 .............................. <1>
  [155] pushint8 1 .............................. <1>
  [157] pushint8 8 .............................. <8>
  [159] pusharglist 3 ........................... <1, 1, 8>
  [161] extcall 175 ............................. <image(1, 1, 8)>
  [163] setprop 1427 ............................ pBgHilite = image(1, 1, 8)
  [166] pushint8 1 .............................. <1>
  [168] pusharglistnoret 1 ...................... <1>
  [170] extcall 50 .............................. return 1
  [172] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglistnoret 1 ...................... <me>
  [  4] objcall 1418 ............................ me.removeWriters()
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 50 .............................. return 1
  [ 13] ret
end

on render me, tBadges, tSelectedBadges, tNewBadges, tActiveBadge
  [  0] getparam 2 .............................. <tSelectedBadges>
  [  2] pusharglist 1 ........................... <tSelectedBadges>
  [  4] extcall 54 .............................. <voidp(tSelectedBadges)>
  [  6] jmpifz [ 14] ............................ if voidp(tSelectedBadges) then
  [  9] pusharglist 0 ........................... <[]>
  [ 11] pushlist ................................ <[]>
  [ 12] setparam 2 .............................. tSelectedBadges = []
  [ 14] getparam 1 .............................. <tBadges>
  [ 16] setprop 804 ............................. pBadges = tBadges
  [ 19] getparam 1 .............................. <tBadges>
  [ 21] getobjprop 105 .......................... <tBadges.count>
  [ 23] getprop 1420 ............................ <pColumns>
  [ 26] div ..................................... <tBadges.count / pColumns>
  [ 27] setlocal 0 .............................. tRows = tBadges.count / pColumns
  [ 29] getparam 1 .............................. <tBadges>
  [ 31] getobjprop 105 .......................... <tBadges.count>
  [ 33] getprop 1420 ............................ <pColumns>
  [ 36] mod ..................................... <tBadges.count mod pColumns>
  [ 37] pushzero ................................ <0>
  [ 38] gt ...................................... <(tBadges.count mod pColumns) > 0>
  [ 39] jmpifz [ 49] ............................ if (tBadges.count mod pColumns) > 0 then
  [ 42] getlocal 0 .............................. <tRows>
  [ 44] pushint8 1 .............................. <1>
  [ 46] add ..................................... <tRows + 1>
  [ 47] setlocal 0 .............................. tRows = tRows + 1
  [ 49] getlocal 0 .............................. <tRows>
  [ 51] getprop 1421 ............................ <pMinRows>
  [ 54] pusharglist 2 ........................... <tRows, pMinRows>
  [ 56] extcall 240 ............................. <max(tRows, pMinRows)>
  [ 58] setlocal 0 .............................. tRows = max(tRows, pMinRows)
  [ 60] getprop 1420 ............................ <pColumns>
  [ 63] getprop 1422 ............................ <pGridSize>
  [ 66] mul ..................................... <pColumns * pGridSize>
  [ 67] getlocal 0 .............................. <tRows>
  [ 69] getprop 1422 ............................ <pGridSize>
  [ 72] mul ..................................... <tRows * pGridSize>
  [ 73] pushint8 32 ............................. <32>
  [ 75] pusharglist 3 ........................... <pColumns * pGridSize, tRows * pGridSize, 32>
  [ 77] extcall 175 ............................. <image(pColumns * pGridSize, tRows * pGridSize, 32)>
  [ 79] setlocal 1 .............................. tListImage = image(pColumns * pGridSize, tRows * pGridSize, 32)
  [ 81] pushzero ................................ <0>
  [ 82] setlocal 2 .............................. tRow = 0
  [ 84] pushzero ................................ <0>
  [ 85] setlocal 3 .............................. tCol = 0
  [ 87] getlocal 0 .............................. <tRows>
  [ 89] getprop 1420 ............................ <pColumns>
  [ 92] mul ..................................... <tRows * pColumns>
  [ 93] setlocal 4 .............................. tLastIndex = tRows * pColumns
  [ 95] pushint8 1 .............................. <1>
  [ 97] setlocal 5
  [ 99] getlocal 5
  [101] getlocal 4 .............................. <tLastIndex>
  [103] lteq
  [104] jmpifz [408] ............................ repeat with tIndex = 1 to tLastIndex
  [107] getlocal 3 .............................. <tCol>
  [109] getprop 1422 ............................ <pGridSize>
  [112] mul ..................................... <tCol * pGridSize>
  [113] getlocal 2 .............................. <tRow>
  [115] getprop 1422 ............................ <pGridSize>
  [118] mul ..................................... <tRow * pGridSize>
  [119] getlocal 3 .............................. <tCol>
  [121] pushint8 1 .............................. <1>
  [123] add ..................................... <tCol + 1>
  [124] getprop 1422 ............................ <pGridSize>
  [127] mul ..................................... <(tCol + 1) * pGridSize>
  [128] getlocal 2 .............................. <tRow>
  [130] pushint8 1 .............................. <1>
  [132] add ..................................... <tRow + 1>
  [133] getprop 1422 ............................ <pGridSize>
  [136] mul ..................................... <(tRow + 1) * pGridSize>
  [137] pusharglist 4 ........................... <tCol * pGridSize, tRow * pGridSize, (tCol + 1) * pGridSize, (tRow + 1) * pGridSize>
  [139] extcall 39 .............................. <rect(tCol * pGridSize, tRow * pGridSize, (tCol + 1) * pGridSize, (tRow + 1) * pGridSize)>
  [141] setlocal 6 .............................. tTargetRect = rect(tCol * pGridSize, tRow * pGridSize, (tCol + 1) * pGridSize, (tRow + 1) * pGridSize)
  [143] getlocal 1 .............................. <tListImage>
  [145] getprop 1425 ............................ <pBg>
  [148] getlocal 6 .............................. <tTargetRect>
  [150] getprop 1425 ............................ <pBg>
  [153] getobjprop 39 ........................... <pBg.rect>
  [155] pusharglistnoret 4 ...................... <tListImage, pBg, tTargetRect, pBg.rect>
  [157] objcall 209 ............................. tListImage.copyPixels(pBg, tTargetRect, pBg.rect)
  [159] getlocal 5 .............................. <tIndex>
  [161] getparam 1 .............................. <tBadges>
  [163] getobjprop 105 .......................... <tBadges.count>
  [165] lteq .................................... <tIndex <= tBadges.count>
  [166] jmpifz [372] ............................ if tIndex <= tBadges.count then
  [169] getparam 1 .............................. <tBadges>
  [171] getlocal 5 .............................. <tIndex>
  [173] pusharglist 2 ........................... <tBadges, tIndex>
  [175] objcall 75 .............................. <tBadges[tIndex]>
  [177] setlocal 7 .............................. tBadgeID = tBadges[tIndex]
  [179] getparam 3 .............................. <tNewBadges>
  [181] getlocal 7 .............................. <tBadgeID>
  [183] pusharglist 2 ........................... <tNewBadges, tBadgeID>
  [185] objcall 194 ............................. <tNewBadges.getPos(tBadgeID)>
  [187] pushzero ................................ <0>
  [188] gt ...................................... <tNewBadges.getPos(tBadgeID) > 0>
  [189] jmpifz [208] ............................ if tNewBadges.getPos(tBadgeID) > 0 then
  [192] getlocal 1 .............................. <tListImage>
  [194] getprop 1426 ............................ <pBgNew>
  [197] getlocal 6 .............................. <tTargetRect>
  [199] getprop 1426 ............................ <pBgNew>
  [202] getobjprop 39 ........................... <pBgNew.rect>
  [204] pusharglistnoret 4 ...................... <tListImage, pBgNew, tTargetRect, pBgNew.rect>
  [206] objcall 209 ............................. tListImage.copyPixels(pBgNew, tTargetRect, pBgNew.rect)
  [208] getlocal 7 .............................. <tBadgeID>
  [210] getparam 4 .............................. <tActiveBadge>
  [212] eq ...................................... <tBadgeID = tActiveBadge>
  [213] jmpifz [232] ............................ if tBadgeID = tActiveBadge then
  [216] getlocal 1 .............................. <tListImage>
  [218] getprop 1427 ............................ <pBgHilite>
  [221] getlocal 6 .............................. <tTargetRect>
  [223] getprop 1427 ............................ <pBgHilite>
  [226] getobjprop 39 ........................... <pBgHilite.rect>
  [228] pusharglistnoret 4 ...................... <tListImage, pBgHilite, tTargetRect, pBgHilite.rect>
  [230] objcall 209 ............................. tListImage.copyPixels(pBgHilite, tTargetRect, pBgHilite.rect)
  [232] pushcons 3 .............................. <"badge">
  [234] getlocal 7 .............................. <tBadgeID>
  [236] joinpadstr .............................. <"badge" && tBadgeID>
  [237] pusharglist 1 ........................... <"badge" && tBadgeID>
  [239] extcall 305 ............................. <getmemnum("badge" && tBadgeID)>
  [242] pusharglist 1 ........................... <getmemnum("badge" && tBadgeID)>
  [244] extcall 134 ............................. <member(getmemnum("badge" && tBadgeID))>
  [246] getobjprop 175 .......................... <member(getmemnum("badge" && tBadgeID)).image>
  [248] setlocal 8 .............................. tBadgeImage = member(getmemnum("badge" && tBadgeID)).image
  [250] getlocal 8 .............................. <tBadgeImage>
  [252] getobjprop 146 .......................... <tBadgeImage.ilk>
  [254] pushsymb 175 ............................ <#image>
  [256] eq ...................................... <tBadgeImage.ilk = #image>
  [257] jmpifz [372] ............................ if tBadgeImage.ilk = #image then
  [260] getlocal 8 .............................. <tBadgeImage>
  [262] getobjprop 39 ........................... <tBadgeImage.rect>
  [264] pushzero ................................ <0>
  [265] pushzero ................................ <0>
  [266] pushint8 1 .............................. <1>
  [268] pushint8 1 .............................. <1>
  [270] pusharglist 4 ........................... <0, 0, 1, 1>
  [272] extcall 39 .............................. <rect(0, 0, 1, 1)>
  [274] eq ...................................... <tBadgeImage.rect = rect(0, 0, 1, 1)>
  [275] jmpifz [293] ............................ if tBadgeImage.rect = rect(0, 0, 1, 1) then
  [278] pushcons 4 .............................. <"loading_icon">
  [280] pusharglist 1 ........................... <"loading_icon">
  [282] extcall 305 ............................. <getmemnum("loading_icon")>
  [285] pusharglist 1 ........................... <getmemnum("loading_icon")>
  [287] extcall 134 ............................. <member(getmemnum("loading_icon"))>
  [289] getobjprop 175 .......................... <member(getmemnum("loading_icon")).image>
  [291] setlocal 8 .............................. tBadgeImage = member(getmemnum("loading_icon")).image
  [293] getparam 0 .............................. <me>
  [295] getlocal 8 .............................. <tBadgeImage>
  [297] getlocal 6 .............................. <tTargetRect>
  [299] pusharglist 3 ........................... <me, tBadgeImage, tTargetRect>
  [301] objcall 813 ............................. <me.centerImage(tBadgeImage, tTargetRect)>
  [304] setlocal 9 .............................. tCenteredImage = me.centerImage(tBadgeImage, tTargetRect)
  [306] getparam 2 .............................. <tSelectedBadges>
  [308] getlocal 7 .............................. <tBadgeID>
  [310] pusharglist 2 ........................... <tSelectedBadges, tBadgeID>
  [312] objcall 194 ............................. <tSelectedBadges.getPos(tBadgeID)>
  [314] pushzero ................................ <0>
  [315] eq ...................................... <tSelectedBadges.getPos(tBadgeID) = 0>
  [316] jmpifz [347] ............................ if tSelectedBadges.getPos(tBadgeID) = 0 then / else
  [319] getlocal 1 .............................. <tListImage>
  [321] getlocal 9 .............................. <tCenteredImage>
  [323] getlocal 6 .............................. <tTargetRect>
  [325] getlocal 9 .............................. <tCenteredImage>
  [327] getobjprop 39 ........................... <tCenteredImage.rect>
  [329] pushsymb 207 ............................ <#maskImage>
  [331] getlocal 9 .............................. <tCenteredImage>
  [333] pusharglist 1 ........................... <tCenteredImage>
  [335] objcall 208 ............................. <tCenteredImage.createMatte()>
  [337] pusharglist 2 ........................... <[#maskImage: tCenteredImage.createMatte()]>
  [339] pushproplist ............................ <[#maskImage: tCenteredImage.createMatte()]>
  [340] pusharglistnoret 5 ...................... <tListImage, tCenteredImage, tTargetRect, tCenteredImage.rect, [#maskImage: tCenteredImage.createMatte()]>
  [342] objcall 209 ............................. tListImage.copyPixels(tCenteredImage, tTargetRect, tCenteredImage.rect, [#maskImage: tCenteredImage.createMatte()])
  [344] jmp [372]
  [347] getlocal 1 .............................. <tListImage>
  [349] getlocal 9 .............................. <tCenteredImage>
  [351] getlocal 6 .............................. <tTargetRect>
  [353] getlocal 9 .............................. <tCenteredImage>
  [355] getobjprop 39 ........................... <tCenteredImage.rect>
  [357] pushsymb 196 ............................ <#ink>
  [359] pushint8 36 ............................. <36>
  [361] pushsymb 113 ............................ <#blend>
  [363] pushint8 15 ............................. <15>
  [365] pusharglist 4 ........................... <[#ink: 36, #blend: 15]>
  [367] pushproplist ............................ <[#ink: 36, #blend: 15]>
  [368] pusharglistnoret 5 ...................... <tListImage, tCenteredImage, tTargetRect, tCenteredImage.rect, [#ink: 36, #blend: 15]>
  [370] objcall 209 ............................. tListImage.copyPixels(tCenteredImage, tTargetRect, tCenteredImage.rect, [#ink: 36, #blend: 15])
  [372] getlocal 3 .............................. <tCol>
  [374] pushint8 1 .............................. <1>
  [376] add ..................................... <tCol + 1>
  [377] setlocal 3 .............................. tCol = tCol + 1
  [379] getlocal 3 .............................. <tCol>
  [381] getprop 1420 ............................ <pColumns>
  [384] gteq .................................... <tCol >= pColumns>
  [385] jmpifz [398] ............................ if tCol >= pColumns then
  [388] pushzero ................................ <0>
  [389] setlocal 3 .............................. tCol = 0
  [391] getlocal 2 .............................. <tRow>
  [393] pushint8 1 .............................. <1>
  [395] add ..................................... <tRow + 1>
  [396] setlocal 2 .............................. tRow = tRow + 1
  [398] pushint8 1
  [400] getlocal 5
  [402] add
  [403] setlocal 5
  [405] endrepeat [ 99]
  [408] getlocal 1 .............................. <tListImage>
  [410] pusharglistnoret 1 ...................... <tListImage>
  [412] extcall 50 .............................. return tListImage
  [414] ret
end

on getBadgeAt me, tpoint
  [  0] getparam 1 .............................. <tpoint>
  [  2] getobjprop 146 .......................... <tpoint.ilk>
  [  4] pushsymb 330 ............................ <#point>
  [  7] nteq .................................... <tpoint.ilk <> #point>
  [  8] jmpifz [ 28] ............................ if tpoint.ilk <> #point then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 5 .............................. <"Point expected.">
  [ 15] pushsymb 792 ............................ <#getBadgeAt>
  [ 18] pushsymb 124 ............................ <#major>
  [ 20] pusharglist 4 ........................... <me, "Point expected.", #getBadgeAt, #major>
  [ 22] extcall 123 ............................. <error(me, "Point expected.", #getBadgeAt, #major)>
  [ 24] pusharglistnoret 1 ...................... <error(me, "Point expected.", #getBadgeAt, #major)>
  [ 26] extcall 50 .............................. return error(me, "Point expected.", #getBadgeAt, #major)
  [ 28] getparam 1 .............................. <tpoint>
  [ 30] pushint8 1 .............................. <1>
  [ 32] pusharglist 2 ........................... <tpoint, 1>
  [ 34] objcall 75 .............................. <tpoint[1]>
  [ 36] getprop 1422 ............................ <pGridSize>
  [ 39] div ..................................... <tpoint[1] / pGridSize>
  [ 40] pushint8 1 .............................. <1>
  [ 42] add ..................................... <(tpoint[1] / pGridSize) + 1>
  [ 43] setlocal 0 .............................. tCol = (tpoint[1] / pGridSize) + 1
  [ 45] getlocal 0 .............................. <tCol>
  [ 47] getprop 1420 ............................ <pColumns>
  [ 50] gt ...................................... <tCol > pColumns>
  [ 51] jmpifz [ 59] ............................ if tCol > pColumns then
  [ 54] pushzero ................................ <0>
  [ 55] pusharglistnoret 1 ...................... <0>
  [ 57] extcall 50 .............................. return 0
  [ 59] getparam 1 .............................. <tpoint>
  [ 61] pushint8 2 .............................. <2>
  [ 63] pusharglist 2 ........................... <tpoint, 2>
  [ 65] objcall 75 .............................. <tpoint[2]>
  [ 67] getprop 1422 ............................ <pGridSize>
  [ 70] div ..................................... <tpoint[2] / pGridSize>
  [ 71] pushint8 1 .............................. <1>
  [ 73] add ..................................... <(tpoint[2] / pGridSize) + 1>
  [ 74] setlocal 1 .............................. tRow = (tpoint[2] / pGridSize) + 1
  [ 76] getlocal 1 .............................. <tRow>
  [ 78] pushint8 1 .............................. <1>
  [ 80] sub ..................................... <tRow - 1>
  [ 81] getprop 1420 ............................ <pColumns>
  [ 84] mul ..................................... <(tRow - 1) * pColumns>
  [ 85] getlocal 0 .............................. <tCol>
  [ 87] add ..................................... <((tRow - 1) * pColumns) + tCol>
  [ 88] setlocal 2 .............................. tIndex = ((tRow - 1) * pColumns) + tCol
  [ 90] getlocal 2 .............................. <tIndex>
  [ 92] pushzero ................................ <0>
  [ 93] gt ...................................... <tIndex > 0>
  [ 94] getlocal 2 .............................. <tIndex>
  [ 96] getprop 804 ............................. <pBadges>
  [ 99] getobjprop 105 .......................... <pBadges.count>
  [101] lteq .................................... <tIndex <= pBadges.count>
  [102] and ..................................... <(tIndex > 0) and (tIndex <= pBadges.count)>
  [103] jmpifz [119] ............................ if (tIndex > 0) and (tIndex <= pBadges.count) then
  [106] getprop 804 ............................. <pBadges>
  [109] getlocal 2 .............................. <tIndex>
  [111] pusharglist 2 ........................... <pBadges, tIndex>
  [113] objcall 75 .............................. <pBadges[tIndex]>
  [115] pusharglistnoret 1 ...................... <pBadges[tIndex]>
  [117] extcall 50 .............................. return pBadges[tIndex]
  [119] pushzero ................................ <0>
  [120] pusharglistnoret 1 ...................... <0>
  [122] extcall 50 .............................. return 0
  [124] ret
end

on renderAchievements me, tAchievements
  [  0] getparam 1 .............................. <tAchievements>
  [  2] getobjprop 146 .......................... <tAchievements.ilk>
  [  4] pushsymb 519 ............................ <#list>
  [  7] nteq .................................... <tAchievements.ilk <> #list>
  [  8] jmpifz [ 28] ............................ if tAchievements.ilk <> #list then
  [ 11] getparam 0 .............................. <me>
  [ 13] pushcons 6 .............................. <"Linear list expected.">
  [ 15] pushsymb 779 ............................ <#renderAchievements>
  [ 18] pushsymb 124 ............................ <#major>
  [ 20] pusharglist 4 ........................... <me, "Linear list expected.", #renderAchievements, #major>
  [ 22] extcall 123 ............................. <error(me, "Linear list expected.", #renderAchievements, #major)>
  [ 24] pusharglistnoret 1 ...................... <error(me, "Linear list expected.", #renderAchievements, #major)>
  [ 26] extcall 50 .............................. return error(me, "Linear list expected.", #renderAchievements, #major)
  [ 28] pushint16 300 ........................... <300>
  [ 31] getparam 1 .............................. <tAchievements>
  [ 33] getobjprop 105 .......................... <tAchievements.count>
  [ 35] getprop 1422 ............................ <pGridSize>
  [ 38] mul ..................................... <tAchievements.count * pGridSize>
  [ 39] pushint8 32 ............................. <32>
  [ 41] pusharglist 3 ........................... <300, tAchievements.count * pGridSize, 32>
  [ 43] extcall 175 ............................. <image(300, tAchievements.count * pGridSize, 32)>
  [ 45] setlocal 0 .............................. tListImage = image(300, tAchievements.count * pGridSize, 32)
  [ 47] pushcons 0 .............................. <"badge_grid_bg">
  [ 49] pusharglist 1 ........................... <"badge_grid_bg">
  [ 51] extcall 305 ............................. <getmemnum("badge_grid_bg")>
  [ 54] pusharglist 1 ........................... <getmemnum("badge_grid_bg")>
  [ 56] extcall 134 ............................. <member(getmemnum("badge_grid_bg"))>
  [ 58] getobjprop 175 .......................... <member(getmemnum("badge_grid_bg")).image>
  [ 60] setlocal 1 .............................. tBgImage = member(getmemnum("badge_grid_bg")).image
  [ 62] pushint8 1 .............................. <1>
  [ 64] setlocal 2
  [ 66] getlocal 2
  [ 68] getparam 1 .............................. <tAchievements>
  [ 70] getobjprop 105 .......................... <tAchievements.count>
  [ 72] lteq
  [ 73] jmpifz [502] ............................ repeat with tIndex = 1 to tAchievements.count
  [ 76] getparam 1 .............................. <tAchievements>
  [ 78] getlocal 2 .............................. <tIndex>
  [ 80] pusharglist 2 ........................... <tAchievements, tIndex>
  [ 82] objcall 75 .............................. <tAchievements[tIndex]>
  [ 84] setlocal 3 .............................. tBadgeID = tAchievements[tIndex]
  [ 86] pushzero ................................ <0>
  [ 87] getlocal 2 .............................. <tIndex>
  [ 89] pushint8 1 .............................. <1>
  [ 91] sub ..................................... <tIndex - 1>
  [ 92] getprop 1422 ............................ <pGridSize>
  [ 95] mul ..................................... <(tIndex - 1) * pGridSize>
  [ 96] getprop 1422 ............................ <pGridSize>
  [ 99] getlocal 2 .............................. <tIndex>
  [101] getprop 1422 ............................ <pGridSize>
  [104] mul ..................................... <tIndex * pGridSize>
  [105] pusharglist 4 ........................... <0, (tIndex - 1) * pGridSize, pGridSize, tIndex * pGridSize>
  [107] extcall 39 .............................. <rect(0, (tIndex - 1) * pGridSize, pGridSize, tIndex * pGridSize)>
  [109] setlocal 4 .............................. tbadgerect = rect(0, (tIndex - 1) * pGridSize, pGridSize, tIndex * pGridSize)
  [111] getlocal 0 .............................. <tListImage>
  [113] getlocal 1 .............................. <tBgImage>
  [115] getlocal 4 .............................. <tbadgerect>
  [117] getlocal 1 .............................. <tBgImage>
  [119] getobjprop 39 ........................... <tBgImage.rect>
  [121] pusharglistnoret 4 ...................... <tListImage, tBgImage, tbadgerect, tBgImage.rect>
  [123] objcall 209 ............................. tListImage.copyPixels(tBgImage, tbadgerect, tBgImage.rect)
  [125] pushcons 3 .............................. <"badge">
  [127] getlocal 3 .............................. <tBadgeID>
  [129] joinpadstr .............................. <"badge" && tBadgeID>
  [130] pusharglist 1 ........................... <"badge" && tBadgeID>
  [132] extcall 305 ............................. <getmemnum("badge" && tBadgeID)>
  [135] pusharglist 1 ........................... <getmemnum("badge" && tBadgeID)>
  [137] extcall 134 ............................. <member(getmemnum("badge" && tBadgeID))>
  [139] getobjprop 175 .......................... <member(getmemnum("badge" && tBadgeID)).image>
  [141] setlocal 5 .............................. tBadgeImage = member(getmemnum("badge" && tBadgeID)).image
  [143] getlocal 5 .............................. <tBadgeImage>
  [145] pusharglist 1 ........................... <tBadgeImage>
  [147] extcall 146 ............................. <ilk(tBadgeImage)>
  [149] pushsymb 175 ............................ <#image>
  [151] nteq .................................... <ilk(tBadgeImage) <> #image>
  [152] jmpifz [171] ............................ if ilk(tBadgeImage) <> #image then
  [155] getlocal 4 .............................. <tbadgerect>
  [157] getobjprop 95 ........................... <tbadgerect.width>
  [159] getlocal 4 .............................. <tbadgerect>
  [161] getobjprop 97 ........................... <tbadgerect.height>
  [163] pushint8 8 .............................. <8>
  [165] pusharglist 3 ........................... <tbadgerect.width, tbadgerect.height, 8>
  [167] extcall 175 ............................. <image(tbadgerect.width, tbadgerect.height, 8)>
  [169] setlocal 5 .............................. tBadgeImage = image(tbadgerect.width, tbadgerect.height, 8)
  [171] getparam 0 .............................. <me>
  [173] getlocal 5 .............................. <tBadgeImage>
  [175] getlocal 4 .............................. <tbadgerect>
  [177] pusharglist 3 ........................... <me, tBadgeImage, tbadgerect>
  [179] objcall 813 ............................. <me.centerImage(tBadgeImage, tbadgerect)>
  [182] setlocal 6 .............................. tCenteredImage = me.centerImage(tBadgeImage, tbadgerect)
  [184] getlocal 0 .............................. <tListImage>
  [186] getlocal 6 .............................. <tCenteredImage>
  [188] getlocal 4 .............................. <tbadgerect>
  [190] getlocal 6 .............................. <tCenteredImage>
  [192] getobjprop 39 ........................... <tCenteredImage.rect>
  [194] pushsymb 207 ............................ <#maskImage>
  [196] getlocal 6 .............................. <tCenteredImage>
  [198] pusharglist 1 ........................... <tCenteredImage>
  [200] objcall 208 ............................. <tCenteredImage.createMatte()>
  [202] pusharglist 2 ........................... <[#maskImage: tCenteredImage.createMatte()]>
  [204] pushproplist ............................ <[#maskImage: tCenteredImage.createMatte()]>
  [205] pusharglistnoret 5 ...................... <tListImage, tCenteredImage, tbadgerect, tCenteredImage.rect, [#maskImage: tCenteredImage.createMatte()]>
  [207] objcall 209 ............................. tListImage.copyPixels(tCenteredImage, tbadgerect, tCenteredImage.rect, [#maskImage: tCenteredImage.createMatte()])
  [209] getparam 0 .............................. <me>
  [211] pusharglist 1 ........................... <me>
  [213] objcall 1417 ............................ <me.getBoldWriter()>
  [216] setlocal 7 .............................. tWriter = me.getBoldWriter()
  [218] getlocal 7 .............................. <tWriter>
  [220] pushcons 7 .............................. <"badge_name_">
  [222] getlocal 3 .............................. <tBadgeID>
  [224] joinstr ................................. <"badge_name_" & tBadgeID>
  [225] pusharglist 1 ........................... <"badge_name_" & tBadgeID>
  [227] extcall 31 .............................. <getText("badge_name_" & tBadgeID)>
  [229] pusharglist 2 ........................... <tWriter, getText("badge_name_" & tBadgeID)>
  [231] objcall 394 ............................. <tWriter.render(getText("badge_name_" & tBadgeID))>
  [234] pusharglist 1 ........................... <tWriter.render(getText("badge_name_" & tBadgeID))>
  [236] objcall 176 ............................. <tWriter.render(getText("badge_name_" & tBadgeID)).duplicate()>
  [238] setlocal 8 .............................. tNameImage = tWriter.render(getText("badge_name_" & tBadgeID)).duplicate()
  [240] getlocal 4 .............................. <tbadgerect>
  [242] pushint8 3 .............................. <3>
  [244] pusharglist 2 ........................... <tbadgerect, 3>
  [246] objcall 75 .............................. <tbadgerect[3]>
  [248] pushint8 7 .............................. <7>
  [250] add ..................................... <tbadgerect[3] + 7>
  [251] setlocal 9 .............................. tLeft = tbadgerect[3] + 7
  [253] getlocal 9 .............................. <tLeft>
  [255] getlocal 8 .............................. <tNameImage>
  [257] getobjprop 95 ........................... <tNameImage.width>
  [259] add ..................................... <tLeft + tNameImage.width>
  [260] setlocal 10 ............................. tRight = tLeft + tNameImage.width
  [262] getlocal 4 .............................. <tbadgerect>
  [264] pushint8 2 .............................. <2>
  [266] pusharglist 2 ........................... <tbadgerect, 2>
  [268] objcall 75 .............................. <tbadgerect[2]>
  [270] setlocal 11 ............................. tTop = tbadgerect[2]
  [272] getlocal 11 ............................. <tTop>
  [274] getlocal 8 .............................. <tNameImage>
  [276] getobjprop 97 ........................... <tNameImage.height>
  [278] add ..................................... <tTop + tNameImage.height>
  [279] setlocal 12 ............................. tBottom = tTop + tNameImage.height
  [281] getlocal 9 .............................. <tLeft>
  [283] getlocal 11 ............................. <tTop>
  [285] getlocal 10 ............................. <tRight>
  [287] getlocal 12 ............................. <tBottom>
  [289] pusharglist 4 ........................... <tLeft, tTop, tRight, tBottom>
  [291] extcall 39 .............................. <rect(tLeft, tTop, tRight, tBottom)>
  [293] setlocal 13 ............................. tNameRect = rect(tLeft, tTop, tRight, tBottom)
  [295] getlocal 0 .............................. <tListImage>
  [297] getlocal 8 .............................. <tNameImage>
  [299] getlocal 13 ............................. <tNameRect>
  [301] getlocal 8 .............................. <tNameImage>
  [303] getobjprop 39 ........................... <tNameImage.rect>
  [305] pushsymb 196 ............................ <#ink>
  [307] pushint8 36 ............................. <36>
  [309] pusharglist 2 ........................... <[#ink: 36]>
  [311] pushproplist ............................ <[#ink: 36]>
  [312] pusharglistnoret 5 ...................... <tListImage, tNameImage, tNameRect, tNameImage.rect, [#ink: 36]>
  [314] objcall 209 ............................. tListImage.copyPixels(tNameImage, tNameRect, tNameImage.rect, [#ink: 36])
  [316] getlocal 13 ............................. <tNameRect>
  [318] pushint8 1 .............................. <1>
  [320] pusharglist 2 ........................... <tNameRect, 1>
  [322] objcall 75 .............................. <tNameRect[1]>
  [324] setlocal 9 .............................. tLeft = tNameRect[1]
  [326] getlocal 13 ............................. <tNameRect>
  [328] pushint8 4 .............................. <4>
  [330] pusharglist 2 ........................... <tNameRect, 4>
  [332] objcall 75 .............................. <tNameRect[4]>
  [334] setlocal 11 ............................. tTop = tNameRect[4]
  [336] getparam 0 .............................. <me>
  [338] pusharglist 1 ........................... <me>
  [340] objcall 1416 ............................ <me.getPlainWriter()>
  [343] setlocal 7 .............................. tWriter = me.getPlainWriter()
  [345] getlocal 7 .............................. <tWriter>
  [347] pushsymb 39 ............................. <#rect>
  [349] pushzero ................................ <0>
  [350] pushzero ................................ <0>
  [351] pushint16 240 ........................... <240>
  [354] pushzero ................................ <0>
  [355] pusharglist 4 ........................... <0, 0, 240, 0>
  [357] extcall 39 .............................. <rect(0, 0, 240, 0)>
  [359] pusharglistnoret 3 ...................... <tWriter, #rect, rect(0, 0, 240, 0)>
  [361] objcall 81 .............................. tWriter.setProperty(#rect, rect(0, 0, 240, 0))
  [363] pushcons 8 .............................. <"badge_desc_">
  [365] getlocal 3 .............................. <tBadgeID>
  [367] joinstr ................................. <"badge_desc_" & tBadgeID>
  [368] pusharglist 1 ........................... <"badge_desc_" & tBadgeID>
  [370] extcall 31 .............................. <getText("badge_desc_" & tBadgeID)>
  [372] setlocal 14 ............................. tDesc = getText("badge_desc_" & tBadgeID)
  [374] getlocal 7 .............................. <tWriter>
  [376] getlocal 14 ............................. <tDesc>
  [378] pusharglist 2 ........................... <tWriter, tDesc>
  [380] objcall 394 ............................. <tWriter.render(tDesc)>
  [383] pusharglist 1 ........................... <tWriter.render(tDesc)>
  [385] objcall 176 ............................. <tWriter.render(tDesc).duplicate()>
  [387] setlocal 15 ............................. tDescImage = tWriter.render(tDesc).duplicate()
  [389] getlocal 9 .............................. <tLeft>
  [391] getlocal 15 ............................. <tDescImage>
  [393] getobjprop 95 ........................... <tDescImage.width>
  [395] add ..................................... <tLeft + tDescImage.width>
  [396] setlocal 10 ............................. tRight = tLeft + tDescImage.width
  [398] getlocal 11 ............................. <tTop>
  [400] getlocal 15 ............................. <tDescImage>
  [402] getobjprop 97 ........................... <tDescImage.height>
  [404] add ..................................... <tTop + tDescImage.height>
  [405] setlocal 12 ............................. tBottom = tTop + tDescImage.height
  [407] getlocal 9 .............................. <tLeft>
  [409] getlocal 11 ............................. <tTop>
  [411] getlocal 10 ............................. <tRight>
  [413] getlocal 12 ............................. <tBottom>
  [415] pusharglist 4 ........................... <tLeft, tTop, tRight, tBottom>
  [417] extcall 39 .............................. <rect(tLeft, tTop, tRight, tBottom)>
  [419] setlocal 16 ............................. tDescRect = rect(tLeft, tTop, tRight, tBottom)
  [421] getlocal 16 ............................. <tDescRect>
  [423] pushint8 4 .............................. <4>
  [425] pusharglist 2 ........................... <tDescRect, 4>
  [427] objcall 75 .............................. <tDescRect[4]>
  [429] getlocal 4 .............................. <tbadgerect>
  [431] pushint8 4 .............................. <4>
  [433] pusharglist 2 ........................... <tbadgerect, 4>
  [435] objcall 75 .............................. <tbadgerect[4]>
  [437] gt ...................................... <tDescRect[4] > tbadgerect[4]>
  [438] jmpifz [457] ............................ if tDescRect[4] > tbadgerect[4] then
  [441] getlocal 16 ............................. <tDescRect>
  [443] pushint8 4 .............................. <4>
  [445] getlocal 4 .............................. <tbadgerect>
  [447] pushint8 4 .............................. <4>
  [449] pusharglist 2 ........................... <tbadgerect, 4>
  [451] objcall 75 .............................. <tbadgerect[4]>
  [453] pusharglistnoret 3 ...................... <tDescRect, 4, tbadgerect[4]>
  [455] objcall 73 .............................. tDescRect[4] = tbadgerect[4]
  [457] pushzero ................................ <0>
  [458] pushzero ................................ <0>
  [459] getlocal 16 ............................. <tDescRect>
  [461] getobjprop 95 ........................... <tDescRect.width>
  [463] getlocal 16 ............................. <tDescRect>
  [465] getobjprop 97 ........................... <tDescRect.height>
  [467] pusharglist 4 ........................... <0, 0, tDescRect.width, tDescRect.height>
  [469] extcall 39 .............................. <rect(0, 0, tDescRect.width, tDescRect.height)>
  [471] setlocal 17 ............................. tSourceRect = rect(0, 0, tDescRect.width, tDescRect.height)
  [473] getlocal 0 .............................. <tListImage>
  [475] getlocal 15 ............................. <tDescImage>
  [477] getlocal 16 ............................. <tDescRect>
  [479] getlocal 17 ............................. <tSourceRect>
  [481] pushsymb 196 ............................ <#ink>
  [483] pushint8 36 ............................. <36>
  [485] pusharglist 2 ........................... <[#ink: 36]>
  [487] pushproplist ............................ <[#ink: 36]>
  [488] pusharglistnoret 5 ...................... <tListImage, tDescImage, tDescRect, tSourceRect, [#ink: 36]>
  [490] objcall 209 ............................. tListImage.copyPixels(tDescImage, tDescRect, tSourceRect, [#ink: 36])
  [492] pushint8 1
  [494] getlocal 2
  [496] add
  [497] setlocal 2
  [499] endrepeat [ 66]
  [502] getlocal 0 .............................. <tListImage>
  [504] pusharglistnoret 1 ...................... <tListImage>
  [506] extcall 50 .............................. return tListImage
  [508] ret
end

on centerImage me, tImage, tRect
  [  0] getparam 1 .............................. <tImage>
  [  2] pusharglist 1 ........................... <tImage>
  [  4] extcall 146 ............................. <ilk(tImage)>
  [  6] pushsymb 175 ............................ <#image>
  [  8] nteq .................................... <ilk(tImage) <> #image>
  [  9] jmpifz [ 17] ............................ if ilk(tImage) <> #image then
  [ 12] pushzero ................................ <0>
  [ 13] pusharglistnoret 1 ...................... <0>
  [ 15] extcall 50 .............................. return 0
  [ 17] getparam 2 .............................. <tRect>
  [ 19] getobjprop 95 ........................... <tRect.width>
  [ 21] getparam 2 .............................. <tRect>
  [ 23] getobjprop 97 ........................... <tRect.height>
  [ 25] getparam 1 .............................. <tImage>
  [ 27] getobjprop 710 .......................... <tImage.depth>
  [ 30] pusharglist 3 ........................... <tRect.width, tRect.height, tImage.depth>
  [ 32] extcall 175 ............................. <image(tRect.width, tRect.height, tImage.depth)>
  [ 34] setlocal 0 .............................. tCentered = image(tRect.width, tRect.height, tImage.depth)
  [ 36] getparam 2 .............................. <tRect>
  [ 38] getobjprop 95 ........................... <tRect.width>
  [ 40] getparam 1 .............................. <tImage>
  [ 42] getobjprop 95 ........................... <tImage.width>
  [ 44] sub ..................................... <tRect.width - tImage.width>
  [ 45] pushint8 2 .............................. <2>
  [ 47] div ..................................... <(tRect.width - tImage.width) / 2>
  [ 48] setlocal 1 .............................. tOffH = (tRect.width - tImage.width) / 2
  [ 50] getparam 2 .............................. <tRect>
  [ 52] getobjprop 97 ........................... <tRect.height>
  [ 54] getparam 1 .............................. <tImage>
  [ 56] getobjprop 97 ........................... <tImage.height>
  [ 58] sub ..................................... <tRect.height - tImage.height>
  [ 59] pushint8 2 .............................. <2>
  [ 61] div ..................................... <(tRect.height - tImage.height) / 2>
  [ 62] setlocal 2 .............................. tOffV = (tRect.height - tImage.height) / 2
  [ 64] getparam 1 .............................. <tImage>
  [ 66] getobjprop 39 ........................... <tImage.rect>
  [ 68] getlocal 1 .............................. <tOffH>
  [ 70] getlocal 2 .............................. <tOffV>
  [ 72] getlocal 1 .............................. <tOffH>
  [ 74] getlocal 2 .............................. <tOffV>
  [ 76] pusharglist 4 ........................... <tOffH, tOffV, tOffH, tOffV>
  [ 78] extcall 39 .............................. <rect(tOffH, tOffV, tOffH, tOffV)>
  [ 80] add ..................................... <tImage.rect + rect(tOffH, tOffV, tOffH, tOffV)>
  [ 81] setlocal 3 .............................. tTargetRect = tImage.rect + rect(tOffH, tOffV, tOffH, tOffV)
  [ 83] getlocal 0 .............................. <tCentered>
  [ 85] getparam 1 .............................. <tImage>
  [ 87] getlocal 3 .............................. <tTargetRect>
  [ 89] getparam 1 .............................. <tImage>
  [ 91] getobjprop 39 ........................... <tImage.rect>
  [ 93] pusharglistnoret 4 ...................... <tCentered, tImage, tTargetRect, tImage.rect>
  [ 95] objcall 209 ............................. tCentered.copyPixels(tImage, tTargetRect, tImage.rect)
  [ 97] getlocal 0 .............................. <tCentered>
  [ 99] pusharglistnoret 1 ...................... <tCentered>
  [101] extcall 50 .............................. return tCentered
  [103] ret
end

on getPlainWriter me
  [  0] getprop 1423 ............................ <pWriterIdPlain>
  [  3] pusharglist 1 ........................... <pWriterIdPlain>
  [  5] extcall 381 ............................. <writerExists(pWriterIdPlain)>
  [  8] jmpifz [ 23] ............................ if writerExists(pWriterIdPlain) then
  [ 11] getprop 1423 ............................ <pWriterIdPlain>
  [ 14] pusharglist 1 ........................... <pWriterIdPlain>
  [ 16] extcall 392 ............................. <getWriter(pWriterIdPlain)>
  [ 19] pusharglistnoret 1 ...................... <getWriter(pWriterIdPlain)>
  [ 21] extcall 50 .............................. return getWriter(pWriterIdPlain)
  [ 23] pushcons 9 .............................. <"struct.font.plain">
  [ 25] pusharglist 1 ........................... <"struct.font.plain">
  [ 27] extcall 111 ............................. <getStructVariable("struct.font.plain")>
  [ 29] setlocal 0 .............................. tPlainStruct = getStructVariable("struct.font.plain")
  [ 31] getprop 1423 ............................ <pWriterIdPlain>
  [ 34] getlocal 0 .............................. <tPlainStruct>
  [ 36] pusharglistnoret 2 ...................... <pWriterIdPlain, tPlainStruct>
  [ 38] extcall 429 ............................. createWriter(pWriterIdPlain, tPlainStruct)
  [ 41] getprop 1423 ............................ <pWriterIdPlain>
  [ 44] pusharglist 1 ........................... <pWriterIdPlain>
  [ 46] extcall 392 ............................. <getWriter(pWriterIdPlain)>
  [ 49] setlocal 1 .............................. tWriter = getWriter(pWriterIdPlain)
  [ 51] getlocal 1 .............................. <tWriter>
  [ 53] pushsymb 647 ............................ <#wordWrap>
  [ 56] pushint8 1 .............................. <1>
  [ 58] pusharglistnoret 3 ...................... <tWriter, #wordWrap, 1>
  [ 60] objcall 81 .............................. tWriter.setProperty(#wordWrap, 1)
  [ 62] getprop 1423 ............................ <pWriterIdPlain>
  [ 65] pusharglist 1 ........................... <pWriterIdPlain>
  [ 67] extcall 392 ............................. <getWriter(pWriterIdPlain)>
  [ 70] pusharglistnoret 1 ...................... <getWriter(pWriterIdPlain)>
  [ 72] extcall 50 .............................. return getWriter(pWriterIdPlain)
  [ 74] ret
end

on getBoldWriter me
  [  0] getprop 1424 ............................ <pWriterIdBold>
  [  3] pusharglist 1 ........................... <pWriterIdBold>
  [  5] extcall 381 ............................. <writerExists(pWriterIdBold)>
  [  8] jmpifz [ 23] ............................ if writerExists(pWriterIdBold) then
  [ 11] getprop 1424 ............................ <pWriterIdBold>
  [ 14] pusharglist 1 ........................... <pWriterIdBold>
  [ 16] extcall 392 ............................. <getWriter(pWriterIdBold)>
  [ 19] pusharglistnoret 1 ...................... <getWriter(pWriterIdBold)>
  [ 21] extcall 50 .............................. return getWriter(pWriterIdBold)
  [ 23] pushcons 10 ............................. <"struct.font.bold">
  [ 25] pusharglist 1 ........................... <"struct.font.bold">
  [ 27] extcall 111 ............................. <getStructVariable("struct.font.bold")>
  [ 29] setlocal 0 .............................. tBoldStruct = getStructVariable("struct.font.bold")
  [ 31] getprop 1424 ............................ <pWriterIdBold>
  [ 34] getlocal 0 .............................. <tBoldStruct>
  [ 36] pusharglistnoret 2 ...................... <pWriterIdBold, tBoldStruct>
  [ 38] extcall 429 ............................. createWriter(pWriterIdBold, tBoldStruct)
  [ 41] getprop 1424 ............................ <pWriterIdBold>
  [ 44] pusharglist 1 ........................... <pWriterIdBold>
  [ 46] extcall 392 ............................. <getWriter(pWriterIdBold)>
  [ 49] pusharglistnoret 1 ...................... <getWriter(pWriterIdBold)>
  [ 51] extcall 50 .............................. return getWriter(pWriterIdBold)
  [ 53] ret
end

on removeWriters me
  [  0] getprop 1423 ............................ <pWriterIdPlain>
  [  3] pusharglist 1 ........................... <pWriterIdPlain>
  [  5] extcall 381 ............................. <writerExists(pWriterIdPlain)>
  [  8] jmpifz [ 19] ............................ if writerExists(pWriterIdPlain) then
  [ 11] getprop 1423 ............................ <pWriterIdPlain>
  [ 14] pusharglistnoret 1 ...................... <pWriterIdPlain>
  [ 16] extcall 383 ............................. removeWriter(pWriterIdPlain)
  [ 19] getprop 1424 ............................ <pWriterIdBold>
  [ 22] pusharglist 1 ........................... <pWriterIdBold>
  [ 24] extcall 381 ............................. <writerExists(pWriterIdBold)>
  [ 27] jmpifz [ 38] ............................ if writerExists(pWriterIdBold) then
  [ 30] getprop 1424 ............................ <pWriterIdBold>
  [ 33] pusharglistnoret 1 ...................... <pWriterIdBold>
  [ 35] extcall 383 ............................. removeWriter(pWriterIdBold)
  [ 38] ret
end
