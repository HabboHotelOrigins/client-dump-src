property pTotalAnimTime, pAnimStartTime, pScreenStartLoc, pSpriteData, pItemTravelDist, pMemberPrefix, pTimePerPhase, pFrameAmount, pPhaseAmount, pCurrentPhase, pCurrentFrame, pRunAnimation, pHostSpriteData

on construct me
  [  0] pushint16 700 ........................... <700>
  [  3] setprop 1569 ............................ pTotalAnimTime = 700
  [  6] pushint8 3 .............................. <3>
  [  8] setprop 1570 ............................ pPhaseAmount = 3
  [ 11] pushint8 2 .............................. <2>
  [ 13] setprop 1571 ............................ pFrameAmount = 2
  [ 16] pushint8 1 .............................. <1>
  [ 18] setprop 1572 ............................ pCurrentPhase = 1
  [ 21] getprop 1571 ............................ <pFrameAmount>
  [ 24] pusharglist 1 ........................... <pFrameAmount>
  [ 26] extcall 694 ............................. <random(pFrameAmount)>
  [ 29] setprop 1573 ............................ pCurrentFrame = random(pFrameAmount)
  [ 32] getprop 1569 ............................ <pTotalAnimTime>
  [ 35] getprop 1570 ............................ <pPhaseAmount>
  [ 38] div ..................................... <pTotalAnimTime / pPhaseAmount>
  [ 39] setprop 1574 ............................ pTimePerPhase = pTotalAnimTime / pPhaseAmount
  [ 42] pushcons 0 .............................. <"effect_cloud_">
  [ 44] setprop 1575 ............................ pMemberPrefix = "effect_cloud_"
  [ 47] pusharglist 0 ........................... <[]>
  [ 49] pushlist ................................ <[]>
  [ 50] setprop 1576 ............................ pSpriteData = []
  [ 53] pushzero ................................ <0>
  [ 54] setprop 1577 ............................ pRunAnimation = 0
  [ 57] pusharglist 0 ........................... <[:]>
  [ 59] pushproplist ............................ <[:]>
  [ 60] setprop 1578 ............................ pHostSpriteData = [:]
  [ 63] ret
end

on deconstruct me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 89 .............................. <me.getID()>
  [  6] pusharglistnoret 1 ...................... <me.getID()>
  [  8] extcall 323 ............................. removeUpdate(me.getID())
  [ 11] getprop 1576 ............................ <pSpriteData>
  [ 14] peek 0
  [ 16] pusharglist 1
  [ 18] extcall 105
  [ 20] pushint8 1
  [ 22] peek 0
  [ 24] peek 2
  [ 26] lteq
  [ 27] jmpifz [ 62] ............................ repeat with tSpriteData in pSpriteData
  [ 30] peek 2
  [ 32] peek 1
  [ 34] pusharglist 2
  [ 36] extcall 75
  [ 38] setlocal 0
  [ 40] getlocal 0 .............................. <tSpriteData>
  [ 42] pushsymb 300 ............................ <#sprite>
  [ 45] pusharglist 2 ........................... <tSpriteData, #sprite>
  [ 47] objcall 75 .............................. <tSpriteData[#sprite]>
  [ 49] getobjprop 303 .......................... <tSpriteData[#sprite].spriteNum>
  [ 52] pusharglistnoret 1 ...................... <tSpriteData[#sprite].spriteNum>
  [ 54] extcall 302 ............................. releaseSprite(tSpriteData[#sprite].spriteNum)
  [ 57] pushint8 1
  [ 59] add
  [ 60] endrepeat [ 22]
  [ 62] pop 3
  [ 64] getprop 1578 ............................ <pHostSpriteData>
  [ 67] pushsymb 300 ............................ <#sprite>
  [ 70] pusharglist 2 ........................... <pHostSpriteData, #sprite>
  [ 72] objcall 75 .............................. <pHostSpriteData[#sprite]>
  [ 74] pusharglist 0 ........................... <>
  [ 76] extcall 118 ............................. <VOID>
  [ 78] nteq .................................... <pHostSpriteData[#sprite] <> VOID>
  [ 79] jmpifz [127] ............................ if pHostSpriteData[#sprite] <> VOID then
  [ 82] getprop 1578 ............................ <pHostSpriteData>
  [ 85] pushsymb 300 ............................ <#sprite>
  [ 88] pusharglist 2 ........................... <pHostSpriteData, #sprite>
  [ 90] objcall 75 .............................. <pHostSpriteData[#sprite]>
  [ 92] getprop 1578 ............................ <pHostSpriteData>
  [ 95] pushsymb 1579 ........................... <#previousfcolor>
  [ 98] pusharglist 2 ........................... <pHostSpriteData, #previousfcolor>
  [100] objcall 75 .............................. <pHostSpriteData[#previousfcolor]>
  [102] setobjprop 393 .......................... pHostSpriteData[#sprite].color = pHostSpriteData[#previousfcolor]
  [105] getprop 1578 ............................ <pHostSpriteData>
  [108] pushsymb 300 ............................ <#sprite>
  [111] pusharglist 2 ........................... <pHostSpriteData, #sprite>
  [113] objcall 75 .............................. <pHostSpriteData[#sprite]>
  [115] getprop 1578 ............................ <pHostSpriteData>
  [118] pushsymb 1580 ........................... <#previousink>
  [121] pusharglist 2 ........................... <pHostSpriteData, #previousink>
  [123] objcall 75 .............................. <pHostSpriteData[#previousink]>
  [125] setobjprop 196 .......................... pHostSpriteData[#sprite].ink = pHostSpriteData[#previousink]
  [127] pusharglist 0 ........................... <[]>
  [129] pushlist ................................ <[]>
  [130] setprop 1576 ............................ pSpriteData = []
  [133] pusharglist 0 ........................... <[:]>
  [135] pushproplist ............................ <[:]>
  [136] setprop 1578 ............................ pHostSpriteData = [:]
  [139] ret
end

on removeFromObjectManager me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 89 .............................. <me.getID()>
  [  6] pusharglist 1 ........................... <me.getID()>
  [  8] extcall 158 ............................. <objectExists(me.getID())>
  [ 10] jmpifz [ 24] ............................ if objectExists(me.getID()) then
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglist 1 ........................... <me>
  [ 17] objcall 89 .............................. <me.getID()>
  [ 19] pusharglistnoret 1 ...................... <me.getID()>
  [ 21] extcall 262 ............................. removeObject(me.getID())
  [ 24] ret
end

on defineWithSprite me, tsprite, tSize, tLocOffset, tLocZOffset
  [  0] getparam 1 .............................. <tsprite>
  [  2] pusharglist 1 ........................... <tsprite>
  [  4] extcall 146 ............................. <ilk(tsprite)>
  [  6] pushsymb 300 ............................ <#sprite>
  [  9] nteq .................................... <ilk(tsprite) <> #sprite>
  [ 10] jmpifz [ 18] ............................ if ilk(tsprite) <> #sprite then
  [ 13] pushzero ................................ <0>
  [ 14] pusharglistnoret 1 ...................... <0>
  [ 16] extcall 50 .............................. return 0
  [ 18] getparam 2 .............................. <tSize>
  [ 20] pusharglist 1 ........................... <tSize>
  [ 22] extcall 54 .............................. <voidp(tSize)>
  [ 24] jmpifz [ 32] ............................ if voidp(tSize) then
  [ 27] pushsymb 1023 ........................... <#large>
  [ 30] setparam 2 .............................. tSize = #large
  [ 32] getparam 3 .............................. <tLocOffset>
  [ 34] pusharglist 1 ........................... <tLocOffset>
  [ 36] extcall 54 .............................. <voidp(tLocOffset)>
  [ 38] jmpifz [ 50] ............................ if voidp(tLocOffset) then
  [ 41] pushzero ................................ <0>
  [ 42] pushzero ................................ <0>
  [ 43] pusharglist 2 ........................... <0, 0>
  [ 45] extcall 330 ............................. <point(0, 0)>
  [ 48] setparam 3 .............................. tLocOffset = point(0, 0)
  [ 50] getparam 4 .............................. <tLocZOffset>
  [ 52] pusharglist 1 ........................... <tLocZOffset>
  [ 54] extcall 54 .............................. <voidp(tLocZOffset)>
  [ 56] jmpifz [ 62] ............................ if voidp(tLocZOffset) then
  [ 59] pushzero ................................ <0>
  [ 60] setparam 4 .............................. tLocZOffset = 0
  [ 62] getparam 1 .............................. <tsprite>
  [ 64] getobjprop 95 ........................... <tsprite.width>
  [ 66] setlocal 0 .............................. tWidth = tsprite.width
  [ 68] getparam 1 .............................. <tsprite>
  [ 70] getobjprop 97 ........................... <tsprite.height>
  [ 72] setlocal 1 .............................. tHeight = tsprite.height
  [ 74] getparam 1 .............................. <tsprite>
  [ 76] getobjprop 307 .......................... <tsprite.locH>
  [ 79] getlocal 0 .............................. <tWidth>
  [ 81] pushint8 2 .............................. <2>
  [ 83] div ..................................... <tWidth / 2>
  [ 84] add ..................................... <tsprite.locH + (tWidth / 2)>
  [ 85] getparam 1 .............................. <tsprite>
  [ 87] getobjprop 342 .......................... <tsprite.locV>
  [ 90] getlocal 1 .............................. <tHeight>
  [ 92] pushint8 2 .............................. <2>
  [ 94] div ..................................... <tHeight / 2>
  [ 95] sub ..................................... <tsprite.locV - (tHeight / 2)>
  [ 96] pusharglist 2 ........................... <tsprite.locH + (tWidth / 2), tsprite.locV - (tHeight / 2)>
  [ 98] extcall 330 ............................. <point(tsprite.locH + (tWidth / 2), tsprite.locV - (tHeight / 2))>
  [101] getparam 3 .............................. <tLocOffset>
  [103] add ..................................... <point(tsprite.locH + (tWidth / 2), tsprite.locV - (tHeight / 2)) + tLocOffset>
  [104] setlocal 2 .............................. tloc = point(tsprite.locH + (tWidth / 2), tsprite.locV - (tHeight / 2)) + tLocOffset
  [106] getparam 1 .............................. <tsprite>
  [108] getobjprop 308 .......................... <tsprite.locZ>
  [111] getparam 4 .............................. <tLocZOffset>
  [113] add ..................................... <tsprite.locZ + tLocZOffset>
  [114] setlocal 3 .............................. tlocz = tsprite.locZ + tLocZOffset
  [116] getparam 1 .............................. <tsprite>
  [118] getobjprop 39 ........................... <tsprite.rect>
  [120] setlocal 4 .............................. tRect = tsprite.rect
  [122] getprop 1578 ............................ <pHostSpriteData>
  [125] pushsymb 300 ............................ <#sprite>
  [128] getparam 1 .............................. <tsprite>
  [130] pusharglistnoret 3 ...................... <pHostSpriteData, #sprite, tsprite>
  [132] objcall 73 .............................. pHostSpriteData[#sprite] = tsprite
  [134] getprop 1578 ............................ <pHostSpriteData>
  [137] pushsymb 1580 ........................... <#previousink>
  [140] getparam 1 .............................. <tsprite>
  [142] getobjprop 196 .......................... <tsprite.ink>
  [144] pusharglistnoret 3 ...................... <pHostSpriteData, #previousink, tsprite.ink>
  [146] objcall 73 .............................. pHostSpriteData[#previousink] = tsprite.ink
  [148] getprop 1578 ............................ <pHostSpriteData>
  [151] pushsymb 1579 ........................... <#previousfcolor>
  [154] pushsymb 141 ............................ <#rgb>
  [156] pushzero ................................ <0>
  [157] pushzero ................................ <0>
  [158] pushzero ................................ <0>
  [159] pusharglist 4 ........................... <#rgb, 0, 0, 0>
  [161] extcall 393 ............................. <color(#rgb, 0, 0, 0)>
  [164] pusharglistnoret 3 ...................... <pHostSpriteData, #previousfcolor, color(#rgb, 0, 0, 0)>
  [166] objcall 73 .............................. pHostSpriteData[#previousfcolor] = color(#rgb, 0, 0, 0)
  [168] getparam 1 .............................. <tsprite>
  [170] pushsymb 141 ............................ <#rgb>
  [172] pushint16 150 ........................... <150>
  [175] pushint16 150 ........................... <150>
  [178] pushint16 150 ........................... <150>
  [181] pusharglist 4 ........................... <#rgb, 150, 150, 150>
  [183] extcall 393 ............................. <color(#rgb, 150, 150, 150)>
  [186] setobjprop 393 .......................... tsprite.color = color(#rgb, 150, 150, 150)
  [189] getparam 1 .............................. <tsprite>
  [191] pushint8 41 ............................. <41>
  [193] setobjprop 196 .......................... tsprite.ink = 41
  [195] getparam 0 .............................. <me>
  [197] getlocal 2 .............................. <tloc>
  [199] getlocal 3 .............................. <tlocz>
  [201] getparam 2 .............................. <tSize>
  [203] pusharglistnoret 4 ...................... <me, tloc, tlocz, tSize>
  [205] objcall 238 ............................. me.define(tloc, tlocz, tSize)
  [207] ret
end

on define me, tloc, tlocz, tSize
  [  0] getparam 1 .............................. <tloc>
  [  2] pusharglist 1 ........................... <tloc>
  [  4] extcall 54 .............................. <voidp(tloc)>
  [  6] jmpifz [ 14] ............................ if voidp(tloc) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 50 .............................. return 0
  [ 14] getparam 1 .............................. <tloc>
  [ 16] pusharglist 1 ........................... <tloc>
  [ 18] extcall 146 ............................. <ilk(tloc)>
  [ 20] pushsymb 330 ............................ <#point>
  [ 23] nteq .................................... <ilk(tloc) <> #point>
  [ 24] jmpifz [ 32] ............................ if ilk(tloc) <> #point then
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 50 .............................. return 0
  [ 32] getparam 2 .............................. <tlocz>
  [ 34] pusharglist 1 ........................... <tlocz>
  [ 36] extcall 54 .............................. <voidp(tlocz)>
  [ 38] jmpifz [ 46] ............................ if voidp(tlocz) then
  [ 41] pushzero ................................ <0>
  [ 42] pusharglistnoret 1 ...................... <0>
  [ 44] extcall 50 .............................. return 0
  [ 46] getparam 3 .............................. <tSize>
  [ 48] pusharglist 1 ........................... <tSize>
  [ 50] extcall 54 .............................. <voidp(tSize)>
  [ 52] jmpifz [ 60] ............................ if voidp(tSize) then
  [ 55] pushsymb 1023 ........................... <#large>
  [ 58] setparam 3 .............................. tSize = #large
  [ 60] getparam 1 .............................. <tloc>
  [ 62] setprop 1584 ............................ pScreenStartLoc = tloc
  [ 65] pushint8 3 .............................. <3>
  [ 67] setlocal 0 .............................. tSpriteCount = 3
  [ 69] pushint8 2 .............................. <2>
  [ 71] pusharglist 0 ........................... <>
  [ 73] extcall 1585 ............................ <PI>
  [ 76] mul ..................................... <2 * PI>
  [ 77] getlocal 0 .............................. <tSpriteCount>
  [ 79] div ..................................... <2 * PI / tSpriteCount>
  [ 80] setlocal 1 .............................. tAngleSectorSize = 2 * PI / tSpriteCount
  [ 82] pushint8 25 ............................. <25>
  [ 84] setlocal 2 .............................. tMaxItemTravelDist = 25
  [ 86] pushint16 200 ........................... <200>
  [ 89] setlocal 3 .............................. tLocZVariance = 200
  [ 91] getparam 3 .............................. <tSize>
  [ 93] pushsymb 1586 ........................... <#small>
  [ 96] eq ...................................... <tSize = #small>
  [ 97] jmpifz [116] ............................ if tSize = #small then
  [100] getlocal 2 .............................. <tMaxItemTravelDist>
  [102] pushint8 2 .............................. <2>
  [104] div ..................................... <tMaxItemTravelDist / 2>
  [105] setlocal 2 .............................. tMaxItemTravelDist = tMaxItemTravelDist / 2
  [107] getprop 1575 ............................ <pMemberPrefix>
  [110] pushcons 1 .............................. <"small_">
  [112] joinstr ................................. <pMemberPrefix & "small_">
  [113] setprop 1575 ............................ pMemberPrefix = pMemberPrefix & "small_"
  [116] pushint8 1 .............................. <1>
  [118] setlocal 4
  [120] getlocal 4
  [122] getlocal 0 .............................. <tSpriteCount>
  [124] lteq
  [125] jmpifz [348] ............................ repeat with i = 1 to tSpriteCount
  [128] getparam 0 .............................. <me>
  [130] pusharglist 1 ........................... <me>
  [132] objcall 89 .............................. <me.getID()>
  [134] pusharglist 1 ........................... <me.getID()>
  [136] extcall 301 ............................. <reserveSprite(me.getID())>
  [139] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [141] extcall 300 ............................. <sprite(reserveSprite(me.getID()))>
  [144] setlocal 5 .............................. tsprite = sprite(reserveSprite(me.getID()))
  [146] getlocal 4 .............................. <i>
  [148] pushint8 1 .............................. <1>
  [150] sub ..................................... <i - 1>
  [151] getlocal 1 .............................. <tAngleSectorSize>
  [153] mul ..................................... <(i - 1) * tAngleSectorSize>
  [154] getlocal 1 .............................. <tAngleSectorSize>
  [156] pusharglist 1 ........................... <tAngleSectorSize>
  [158] extcall 694 ............................. <random(tAngleSectorSize)>
  [161] add ..................................... <((i - 1) * tAngleSectorSize) + random(tAngleSectorSize)>
  [162] setlocal 6 .............................. tDirAngle = ((i - 1) * tAngleSectorSize) + random(tAngleSectorSize)
  [164] getlocal 6 .............................. <tDirAngle>
  [166] pusharglist 1 ........................... <tDirAngle>
  [168] extcall 1587 ............................ <cos(tDirAngle)>
  [171] getlocal 2 .............................. <tMaxItemTravelDist>
  [173] mul ..................................... <cos(tDirAngle) * tMaxItemTravelDist>
  [174] setlocal 7 .............................. tMaxTravelX = cos(tDirAngle) * tMaxItemTravelDist
  [176] getlocal 6 .............................. <tDirAngle>
  [178] pusharglist 1 ........................... <tDirAngle>
  [180] extcall 340 ............................. <sin(tDirAngle)>
  [183] getlocal 2 .............................. <tMaxItemTravelDist>
  [185] mul ..................................... <sin(tDirAngle) * tMaxItemTravelDist>
  [186] setlocal 8 .............................. tMaxTravelY = sin(tDirAngle) * tMaxItemTravelDist
  [188] getlocal 7 .............................. <tMaxTravelX>
  [190] pusharglist 1 ........................... <tMaxTravelX>
  [192] extcall 341 ............................. <float(tMaxTravelX)>
  [195] getprop 1569 ............................ <pTotalAnimTime>
  [198] div ..................................... <float(tMaxTravelX) / pTotalAnimTime>
  [199] setlocal 9 .............................. tPixelsPerMillisecX = float(tMaxTravelX) / pTotalAnimTime
  [201] getlocal 8 .............................. <tMaxTravelY>
  [203] pusharglist 1 ........................... <tMaxTravelY>
  [205] extcall 341 ............................. <float(tMaxTravelY)>
  [208] getprop 1569 ............................ <pTotalAnimTime>
  [211] div ..................................... <float(tMaxTravelY) / pTotalAnimTime>
  [212] setlocal 10 ............................. tPixelsPerMillisecY = float(tMaxTravelY) / pTotalAnimTime
  [214] getlocal 5 .............................. <tsprite>
  [216] pushint8 1 .............................. <1>
  [218] pusharglist 1 ........................... <1>
  [220] extcall 694 ............................. <random(1)>
  [223] setobjprop 339 .......................... tsprite.flipH = random(1)
  [226] getlocal 5 .............................. <tsprite>
  [228] pushint8 1 .............................. <1>
  [230] pusharglist 1 ........................... <1>
  [232] extcall 694 ............................. <random(1)>
  [235] setobjprop 857 .......................... tsprite.flipV = random(1)
  [238] pusharglist 0 ........................... <[:]>
  [240] pushproplist ............................ <[:]>
  [241] setlocal 11 ............................. tdata = [:]
  [243] getlocal 11 ............................. <tdata>
  [245] pushsymb 1588 ........................... <#IncrementX>
  [248] getlocal 9 .............................. <tPixelsPerMillisecX>
  [250] pusharglistnoret 3 ...................... <tdata, #IncrementX, tPixelsPerMillisecX>
  [252] objcall 73 .............................. tdata[#IncrementX] = tPixelsPerMillisecX
  [254] getlocal 11 ............................. <tdata>
  [256] pushsymb 1589 ........................... <#IncrementY>
  [259] getlocal 10 ............................. <tPixelsPerMillisecY>
  [261] pusharglistnoret 3 ...................... <tdata, #IncrementY, tPixelsPerMillisecY>
  [263] objcall 73 .............................. tdata[#IncrementY] = tPixelsPerMillisecY
  [265] getlocal 11 ............................. <tdata>
  [267] pushsymb 300 ............................ <#sprite>
  [270] getlocal 5 .............................. <tsprite>
  [272] pusharglistnoret 3 ...................... <tdata, #sprite, tsprite>
  [274] objcall 73 .............................. tdata[#sprite] = tsprite
  [276] getprop 1576 ............................ <pSpriteData>
  [279] getlocal 11 ............................. <tdata>
  [281] pusharglistnoret 2 ...................... <pSpriteData, tdata>
  [283] objcall 104 ............................. pSpriteData.add(tdata)
  [285] getlocal 5 .............................. <tsprite>
  [287] getprop 1575 ............................ <pMemberPrefix>
  [290] getprop 1572 ............................ <pCurrentPhase>
  [293] joinstr ................................. <pMemberPrefix & pCurrentPhase>
  [294] pushcons 2 .............................. <"_">
  [296] joinstr ................................. <pMemberPrefix & pCurrentPhase & "_">
  [297] getprop 1573 ............................ <pCurrentFrame>
  [300] joinstr ................................. <pMemberPrefix & pCurrentPhase & "_" & pCurrentFrame>
  [301] pusharglist 1 ........................... <pMemberPrefix & pCurrentPhase & "_" & pCurrentFrame>
  [303] extcall 305 ............................. <getmemnum(pMemberPrefix & pCurrentPhase & "_" & pCurrentFrame)>
  [306] pusharglist 1 ........................... <getmemnum(pMemberPrefix & pCurrentPhase & "_" & pCurrentFrame)>
  [308] extcall 134 ............................. <member(getmemnum(pMemberPrefix & pCurrentPhase & "_" & pCurrentFrame))>
  [310] setobjprop 134 .......................... tsprite.member = member(getmemnum(pMemberPrefix & pCurrentPhase & "_" & pCurrentFrame))
  [312] getlocal 5 .............................. <tsprite>
  [314] getparam 2 .............................. <tlocz>
  [316] getlocal 3 .............................. <tLocZVariance>
  [318] pusharglist 1 ........................... <tLocZVariance>
  [320] extcall 694 ............................. <random(tLocZVariance)>
  [323] add ..................................... <tlocz + random(tLocZVariance)>
  [324] getlocal 3 .............................. <tLocZVariance>
  [326] pushint8 2 .............................. <2>
  [328] div ..................................... <tLocZVariance / 2>
  [329] sub ..................................... <tlocz + random(tLocZVariance) - (tLocZVariance / 2)>
  [330] setobjprop 308 .......................... tsprite.locZ = tlocz + random(tLocZVariance) - (tLocZVariance / 2)
  [333] getlocal 5 .............................. <tsprite>
  [335] pushint8 8 .............................. <8>
  [337] setobjprop 196 .......................... tsprite.ink = 8
  [339] pushint8 1
  [341] getlocal 4
  [343] add
  [344] setlocal 4
  [346] endrepeat [120]
  [348] getmovieprop 391 ........................ <the milliSeconds>
  [351] setprop 1590 ............................ pAnimStartTime = the milliSeconds
  [354] pushint8 1 .............................. <1>
  [356] setprop 1577 ............................ pRunAnimation = 1
  [359] getparam 0 .............................. <me>
  [361] pusharglist 1 ........................... <me>
  [363] objcall 89 .............................. <me.getID()>
  [365] pusharglistnoret 1 ...................... <me.getID()>
  [367] extcall 332 ............................. receiveUpdate(me.getID())
  [370] ret
end

on update me
  [  0] getprop 1577 ............................ <pRunAnimation>
  [  3] not ..................................... <not pRunAnimation>
  [  4] jmpifz [ 12] ............................ if not pRunAnimation then
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 50 .............................. return 0
  [ 12] getmovieprop 391 ........................ <the milliSeconds>
  [ 15] getprop 1590 ............................ <pAnimStartTime>
  [ 18] sub ..................................... <the milliSeconds - pAnimStartTime>
  [ 19] setlocal 0 .............................. tMoveTime = the milliSeconds - pAnimStartTime
  [ 21] getlocal 0 .............................. <tMoveTime>
  [ 23] getprop 1569 ............................ <pTotalAnimTime>
  [ 26] gt ...................................... <tMoveTime > pTotalAnimTime>
  [ 27] jmpifz [ 46] ............................ if tMoveTime > pTotalAnimTime then
  [ 30] pushzero ................................ <0>
  [ 31] setprop 1577 ............................ pRunAnimation = 0
  [ 34] getparam 0 .............................. <me>
  [ 36] pusharglistnoret 1 ...................... <me>
  [ 38] objcall 1568 ............................ me.removeFromObjectManager()
  [ 41] pushzero ................................ <0>
  [ 42] pusharglistnoret 1 ...................... <0>
  [ 44] extcall 50 .............................. return 0
  [ 46] pushzero ................................ <0>
  [ 47] setlocal 1 .............................. tUpdatePhase = 0
  [ 49] getlocal 0 .............................. <tMoveTime>
  [ 51] getprop 1574 ............................ <pTimePerPhase>
  [ 54] div ..................................... <tMoveTime / pTimePerPhase>
  [ 55] pusharglist 1 ........................... <tMoveTime / pTimePerPhase>
  [ 57] extcall 172 ............................. <integer(tMoveTime / pTimePerPhase)>
  [ 59] pushint8 1 .............................. <1>
  [ 61] add ..................................... <integer(tMoveTime / pTimePerPhase) + 1>
  [ 62] setlocal 2 .............................. tCurrentPhase = integer(tMoveTime / pTimePerPhase) + 1
  [ 64] getlocal 2 .............................. <tCurrentPhase>
  [ 66] getprop 1572 ............................ <pCurrentPhase>
  [ 69] nteq .................................... <tCurrentPhase <> pCurrentPhase>
  [ 70] jmpifz [ 82] ............................ if tCurrentPhase <> pCurrentPhase then
  [ 73] pushint8 1 .............................. <1>
  [ 75] setlocal 1 .............................. tUpdatePhase = 1
  [ 77] getlocal 2 .............................. <tCurrentPhase>
  [ 79] setprop 1572 ............................ pCurrentPhase = tCurrentPhase
  [ 82] getprop 1576 ............................ <pSpriteData>
  [ 85] peek 0
  [ 87] pusharglist 1
  [ 89] extcall 105
  [ 91] pushint8 1
  [ 93] peek 0
  [ 95] peek 2
  [ 97] lteq
  [ 98] jmpifz [333] ............................ repeat with tSpriteData in pSpriteData
  [101] peek 2
  [103] peek 1
  [105] pusharglist 2
  [107] extcall 75
  [109] setlocal 3
  [111] pushint8 3 .............................. <3>
  [113] setlocal 4 .............................. tRandomUpdateTrigger = 3
  [115] getlocal 4 .............................. <tRandomUpdateTrigger>
  [117] pusharglist 1 ........................... <tRandomUpdateTrigger>
  [119] extcall 694 ............................. <random(tRandomUpdateTrigger)>
  [122] getlocal 4 .............................. <tRandomUpdateTrigger>
  [124] pushint8 1 .............................. <1>
  [126] sub ..................................... <tRandomUpdateTrigger - 1>
  [127] gt ...................................... <random(tRandomUpdateTrigger) > (tRandomUpdateTrigger - 1)>
  [128] getlocal 1 .............................. <tUpdatePhase>
  [130] or ...................................... <(random(tRandomUpdateTrigger) > (tRandomUpdateTrigger - 1)) or tUpdatePhase>
  [131] jmpifz [257] ............................ if (random(tRandomUpdateTrigger) > (tRandomUpdateTrigger - 1)) or tUpdatePhase then
  [134] getprop 1571 ............................ <pFrameAmount>
  [137] pusharglist 1 ........................... <pFrameAmount>
  [139] extcall 694 ............................. <random(pFrameAmount)>
  [142] setlocal 5 .............................. tNewFrame = random(pFrameAmount)
  [144] getlocal 3 .............................. <tSpriteData>
  [146] pushsymb 300 ............................ <#sprite>
  [149] pusharglist 2 ........................... <tSpriteData, #sprite>
  [151] objcall 75 .............................. <tSpriteData[#sprite]>
  [153] pushint8 1 .............................. <1>
  [155] pusharglist 1 ........................... <1>
  [157] extcall 694 ............................. <random(1)>
  [160] setobjprop 339 .......................... tSpriteData[#sprite].flipH = random(1)
  [163] getlocal 3 .............................. <tSpriteData>
  [165] pushsymb 300 ............................ <#sprite>
  [168] pusharglist 2 ........................... <tSpriteData, #sprite>
  [170] objcall 75 .............................. <tSpriteData[#sprite]>
  [172] pushint8 1 .............................. <1>
  [174] pusharglist 1 ........................... <1>
  [176] extcall 694 ............................. <random(1)>
  [179] setobjprop 857 .......................... tSpriteData[#sprite].flipV = random(1)
  [182] getlocal 3 .............................. <tSpriteData>
  [184] pushsymb 300 ............................ <#sprite>
  [187] pusharglist 2 ........................... <tSpriteData, #sprite>
  [189] objcall 75 .............................. <tSpriteData[#sprite]>
  [191] getprop 1575 ............................ <pMemberPrefix>
  [194] getprop 1572 ............................ <pCurrentPhase>
  [197] joinstr ................................. <pMemberPrefix & pCurrentPhase>
  [198] pushcons 2 .............................. <"_">
  [200] joinstr ................................. <pMemberPrefix & pCurrentPhase & "_">
  [201] getlocal 5 .............................. <tNewFrame>
  [203] joinstr ................................. <pMemberPrefix & pCurrentPhase & "_" & tNewFrame>
  [204] pusharglist 1 ........................... <pMemberPrefix & pCurrentPhase & "_" & tNewFrame>
  [206] extcall 305 ............................. <getmemnum(pMemberPrefix & pCurrentPhase & "_" & tNewFrame)>
  [209] pusharglist 1 ........................... <getmemnum(pMemberPrefix & pCurrentPhase & "_" & tNewFrame)>
  [211] extcall 134 ............................. <member(getmemnum(pMemberPrefix & pCurrentPhase & "_" & tNewFrame))>
  [213] setobjprop 134 .......................... tSpriteData[#sprite].member = member(getmemnum(pMemberPrefix & pCurrentPhase & "_" & tNewFrame))
  [215] getlocal 3 .............................. <tSpriteData>
  [217] pushsymb 1588 ........................... <#IncrementX>
  [220] getlocal 3 .............................. <tSpriteData>
  [222] pushsymb 1588 ........................... <#IncrementX>
  [225] pusharglist 2 ........................... <tSpriteData, #IncrementX>
  [227] objcall 75 .............................. <tSpriteData[#IncrementX]>
  [229] pushcons 3 .............................. <1.05000000000000004>
  [231] mul ..................................... <tSpriteData[#IncrementX] * 1.05000000000000004>
  [232] pusharglistnoret 3 ...................... <tSpriteData, #IncrementX, tSpriteData[#IncrementX] * 1.05000000000000004>
  [234] objcall 73 .............................. tSpriteData[#IncrementX] = tSpriteData[#IncrementX] * 1.05000000000000004
  [236] getlocal 3 .............................. <tSpriteData>
  [238] pushsymb 1589 ........................... <#IncrementY>
  [241] getlocal 3 .............................. <tSpriteData>
  [243] pushsymb 1589 ........................... <#IncrementY>
  [246] pusharglist 2 ........................... <tSpriteData, #IncrementY>
  [248] objcall 75 .............................. <tSpriteData[#IncrementY]>
  [250] pushcons 3 .............................. <1.05000000000000004>
  [252] mul ..................................... <tSpriteData[#IncrementY] * 1.05000000000000004>
  [253] pusharglistnoret 3 ...................... <tSpriteData, #IncrementY, tSpriteData[#IncrementY] * 1.05000000000000004>
  [255] objcall 73 .............................. tSpriteData[#IncrementY] = tSpriteData[#IncrementY] * 1.05000000000000004
  [257] getlocal 0 .............................. <tMoveTime>
  [259] getlocal 3 .............................. <tSpriteData>
  [261] pushsymb 1588 ........................... <#IncrementX>
  [264] pusharglist 2 ........................... <tSpriteData, #IncrementX>
  [266] objcall 75 .............................. <tSpriteData[#IncrementX]>
  [268] mul ..................................... <tMoveTime * tSpriteData[#IncrementX]>
  [269] getprop 1584 ............................ <pScreenStartLoc>
  [272] getobjprop 307 .......................... <pScreenStartLoc.locH>
  [275] add ..................................... <(tMoveTime * tSpriteData[#IncrementX]) + pScreenStartLoc.locH>
  [276] pusharglist 1 ........................... <(tMoveTime * tSpriteData[#IncrementX]) + pScreenStartLoc.locH>
  [278] extcall 172 ............................. <integer((tMoveTime * tSpriteData[#IncrementX]) + pScreenStartLoc.locH)>
  [280] setlocal 6 .............................. tLocX = integer((tMoveTime * tSpriteData[#IncrementX]) + pScreenStartLoc.locH)
  [282] getlocal 0 .............................. <tMoveTime>
  [284] getlocal 3 .............................. <tSpriteData>
  [286] pushsymb 1589 ........................... <#IncrementY>
  [289] pusharglist 2 ........................... <tSpriteData, #IncrementY>
  [291] objcall 75 .............................. <tSpriteData[#IncrementY]>
  [293] mul ..................................... <tMoveTime * tSpriteData[#IncrementY]>
  [294] getprop 1584 ............................ <pScreenStartLoc>
  [297] getobjprop 342 .......................... <pScreenStartLoc.locV>
  [300] add ..................................... <(tMoveTime * tSpriteData[#IncrementY]) + pScreenStartLoc.locV>
  [301] pusharglist 1 ........................... <(tMoveTime * tSpriteData[#IncrementY]) + pScreenStartLoc.locV>
  [303] extcall 172 ............................. <integer((tMoveTime * tSpriteData[#IncrementY]) + pScreenStartLoc.locV)>
  [305] setlocal 7 .............................. tLocY = integer((tMoveTime * tSpriteData[#IncrementY]) + pScreenStartLoc.locV)
  [307] getlocal 3 .............................. <tSpriteData>
  [309] pushsymb 300 ............................ <#sprite>
  [312] pusharglist 2 ........................... <tSpriteData, #sprite>
  [314] objcall 75 .............................. <tSpriteData[#sprite]>
  [316] getlocal 6 .............................. <tLocX>
  [318] getlocal 7 .............................. <tLocY>
  [320] pusharglist 2 ........................... <tLocX, tLocY>
  [322] extcall 330 ............................. <point(tLocX, tLocY)>
  [325] setobjprop 306 .......................... tSpriteData[#sprite].loc = point(tLocX, tLocY)
  [328] pushint8 1
  [330] add
  [331] endrepeat [ 93]
  [333] pop 3
  [335] getlocal 0 .............................. <tMoveTime>
  [337] pushfloat32 3.0 ......................... <3.0>
  [342] pushint8 4 .............................. <4>
  [344] div ..................................... <3.0 / 4>
  [345] getprop 1569 ............................ <pTotalAnimTime>
  [348] mul ..................................... <3.0 / 4 * pTotalAnimTime>
  [349] gt ...................................... <tMoveTime > (3.0 / 4 * pTotalAnimTime)>
  [350] jmpifz [363] ............................ if tMoveTime > (3.0 / 4 * pTotalAnimTime) then / else
  [353] getparam 0 .............................. <me>
  [355] pusharglistnoret 1 ...................... <me>
  [357] objcall 1568 ............................ me.removeFromObjectManager()
  [360] jmp [521]
  [363] getlocal 0 .............................. <tMoveTime>
  [365] pushfloat32 2.0 ......................... <2.0>
  [370] pushint8 4 .............................. <4>
  [372] div ..................................... <2.0 / 4>
  [373] getprop 1569 ............................ <pTotalAnimTime>
  [376] mul ..................................... <2.0 / 4 * pTotalAnimTime>
  [377] gt ...................................... <tMoveTime > (2.0 / 4 * pTotalAnimTime)>
  [378] getprop 1578 ............................ <pHostSpriteData>
  [381] pushsymb 300 ............................ <#sprite>
  [384] pusharglist 2 ........................... <pHostSpriteData, #sprite>
  [386] objcall 75 .............................. <pHostSpriteData[#sprite]>
  [388] pusharglist 0 ........................... <>
  [390] extcall 118 ............................. <VOID>
  [392] nteq .................................... <pHostSpriteData[#sprite] <> VOID>
  [393] and ..................................... <(tMoveTime > (2.0 / 4 * pTotalAnimTime)) and (pHostSpriteData[#sprite] <> VOID)>
  [394] jmpifz [426] ............................ if (tMoveTime > (2.0 / 4 * pTotalAnimTime)) and (pHostSpriteData[#sprite] <> VOID) then / else
  [397] getprop 1578 ............................ <pHostSpriteData>
  [400] pushsymb 300 ............................ <#sprite>
  [403] pusharglist 2 ........................... <pHostSpriteData, #sprite>
  [405] objcall 75 .............................. <pHostSpriteData[#sprite]>
  [407] pushsymb 141 ............................ <#rgb>
  [409] pushint8 50 ............................. <50>
  [411] pushint8 50 ............................. <50>
  [413] pushint8 50 ............................. <50>
  [415] pusharglist 4 ........................... <#rgb, 50, 50, 50>
  [417] extcall 393 ............................. <color(#rgb, 50, 50, 50)>
  [420] setobjprop 393 .......................... pHostSpriteData[#sprite].color = color(#rgb, 50, 50, 50)
  [423] jmp [521]
  [426] getlocal 0 .............................. <tMoveTime>
  [428] pushfloat32 1.0 ......................... <1.0>
  [433] pushint8 4 .............................. <4>
  [435] div ..................................... <1.0 / 4>
  [436] getprop 1569 ............................ <pTotalAnimTime>
  [439] mul ..................................... <1.0 / 4 * pTotalAnimTime>
  [440] gt ...................................... <tMoveTime > (1.0 / 4 * pTotalAnimTime)>
  [441] getprop 1578 ............................ <pHostSpriteData>
  [444] pushsymb 300 ............................ <#sprite>
  [447] pusharglist 2 ........................... <pHostSpriteData, #sprite>
  [449] objcall 75 .............................. <pHostSpriteData[#sprite]>
  [451] pusharglist 0 ........................... <>
  [453] extcall 118 ............................. <VOID>
  [455] nteq .................................... <pHostSpriteData[#sprite] <> VOID>
  [456] and ..................................... <(tMoveTime > (1.0 / 4 * pTotalAnimTime)) and (pHostSpriteData[#sprite] <> VOID)>
  [457] jmpifz [492] ............................ if (tMoveTime > (1.0 / 4 * pTotalAnimTime)) and (pHostSpriteData[#sprite] <> VOID) then / else
  [460] getprop 1578 ............................ <pHostSpriteData>
  [463] pushsymb 300 ............................ <#sprite>
  [466] pusharglist 2 ........................... <pHostSpriteData, #sprite>
  [468] objcall 75 .............................. <pHostSpriteData[#sprite]>
  [470] pushsymb 141 ............................ <#rgb>
  [472] pushint16 150 ........................... <150>
  [475] pushint16 150 ........................... <150>
  [478] pushint16 150 ........................... <150>
  [481] pusharglist 4 ........................... <#rgb, 150, 150, 150>
  [483] extcall 393 ............................. <color(#rgb, 150, 150, 150)>
  [486] setobjprop 393 .......................... pHostSpriteData[#sprite].color = color(#rgb, 150, 150, 150)
  [489] jmp [521]
  [492] getprop 1578 ............................ <pHostSpriteData>
  [495] pushsymb 300 ............................ <#sprite>
  [498] pusharglist 2 ........................... <pHostSpriteData, #sprite>
  [500] objcall 75 .............................. <pHostSpriteData[#sprite]>
  [502] pushsymb 141 ............................ <#rgb>
  [504] pushint16 255 ........................... <255>
  [507] pushint16 255 ........................... <255>
  [510] pushint16 255 ........................... <255>
  [513] pusharglist 4 ........................... <#rgb, 255, 255, 255>
  [515] extcall 393 ............................. <color(#rgb, 255, 255, 255)>
  [518] setobjprop 393 .......................... pHostSpriteData[#sprite].color = color(#rgb, 255, 255, 255)
  [521] ret
end
