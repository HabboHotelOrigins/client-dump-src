property pState, pCategoryIndex, pNodeCache, pNodeCacheExpList, pNaviHistory, pHideFullRoomsFlag, pRootUnitCatId, pRootFlatCatId, pDefaultUnitCatId, pDefaultFlatCatId, pUpdateInterval, pConnectionId

on construct me
  [  0] pushcons 0 .............................. <"navigator.visible.public.root">
  [  2] pusharglist 1 ........................... <"navigator.visible.public.root">
  [  4] extcall 52 .............................. <getIntVariable("navigator.visible.public.root")>
  [  6] pusharglist 1 ........................... <getIntVariable("navigator.visible.public.root")>
  [  8] extcall 51 .............................. <string(getIntVariable("navigator.visible.public.root"))>
  [ 10] setprop 50 .............................. pRootUnitCatId = string(getIntVariable("navigator.visible.public.root"))
  [ 12] pushcons 1 .............................. <"navigator.visible.private.root">
  [ 14] pusharglist 1 ........................... <"navigator.visible.private.root">
  [ 16] extcall 52 .............................. <getIntVariable("navigator.visible.private.root")>
  [ 18] pusharglist 1 ........................... <getIntVariable("navigator.visible.private.root")>
  [ 20] extcall 51 .............................. <string(getIntVariable("navigator.visible.private.root"))>
  [ 22] setprop 53 .............................. pRootFlatCatId = string(getIntVariable("navigator.visible.private.root"))
  [ 24] pushcons 2 .............................. <"navigator.public.default">
  [ 26] pusharglist 1 ........................... <"navigator.public.default">
  [ 28] extcall 54 .............................. <variableExists("navigator.public.default")>
  [ 30] jmpifz [ 48] ............................ if variableExists("navigator.public.default") then / else
  [ 33] pushcons 2 .............................. <"navigator.public.default">
  [ 35] pusharglist 1 ........................... <"navigator.public.default">
  [ 37] extcall 52 .............................. <getIntVariable("navigator.public.default")>
  [ 39] pusharglist 1 ........................... <getIntVariable("navigator.public.default")>
  [ 41] extcall 51 .............................. <string(getIntVariable("navigator.public.default"))>
  [ 43] setprop 55 .............................. pDefaultUnitCatId = string(getIntVariable("navigator.public.default"))
  [ 45] jmp [ 52]
  [ 48] getprop 50 .............................. <pRootUnitCatId>
  [ 50] setprop 55 .............................. pDefaultUnitCatId = pRootUnitCatId
  [ 52] pushcons 3 .............................. <"navigator.private.default">
  [ 54] pusharglist 1 ........................... <"navigator.private.default">
  [ 56] extcall 54 .............................. <variableExists("navigator.private.default")>
  [ 58] jmpifz [ 76] ............................ if variableExists("navigator.private.default") then / else
  [ 61] pushcons 3 .............................. <"navigator.private.default">
  [ 63] pusharglist 1 ........................... <"navigator.private.default">
  [ 65] extcall 52 .............................. <getIntVariable("navigator.private.default")>
  [ 67] pusharglist 1 ........................... <getIntVariable("navigator.private.default")>
  [ 69] extcall 51 .............................. <string(getIntVariable("navigator.private.default"))>
  [ 71] setprop 56 .............................. pDefaultFlatCatId = string(getIntVariable("navigator.private.default"))
  [ 73] jmp [ 80]
  [ 76] getprop 53 .............................. <pRootFlatCatId>
  [ 78] setprop 56 .............................. pDefaultFlatCatId = pRootFlatCatId
  [ 80] pusharglist 0 ........................... <[:]>
  [ 82] pushproplist ............................ <[:]>
  [ 83] setprop 57 .............................. pCategoryIndex = [:]
  [ 85] pusharglist 0 ........................... <[:]>
  [ 87] pushproplist ............................ <[:]>
  [ 88] setprop 58 .............................. pNodeCache = [:]
  [ 90] pusharglist 0 ........................... <[:]>
  [ 92] pushproplist ............................ <[:]>
  [ 93] setprop 59 .............................. pNodeCacheExpList = [:]
  [ 95] pusharglist 0 ........................... <[]>
  [ 97] pushlist ................................ <[]>
  [ 98] setprop 60 .............................. pNaviHistory = []
  [100] pushzero ................................ <0>
  [101] setprop 61 .............................. pHideFullRoomsFlag = 0
  [103] pushcons 4 .............................. <"navigator.updatetime">
  [105] pusharglist 1 ........................... <"navigator.updatetime">
  [107] extcall 52 .............................. <getIntVariable("navigator.updatetime")>
  [109] setprop 62 .............................. pUpdateInterval = getIntVariable("navigator.updatetime")
  [111] pushcons 5 .............................. <"connection.info.id">
  [113] pushsymb 65 ............................. <#info>
  [115] pusharglist 2 ........................... <"connection.info.id", #info>
  [117] extcall 64 .............................. <getVariableValue("connection.info.id", #info)>
  [119] setprop 63 .............................. pConnectionId = getVariableValue("connection.info.id", #info)
  [121] pushsymb 67 ............................. <#session>
  [123] pusharglist 1 ........................... <#session>
  [125] extcall 66 .............................. <getObject(#session)>
  [127] pushcons 6 .............................. <"lastroom">
  [129] pushcons 7 .............................. <"Entry">
  [131] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", "Entry">
  [133] objcall 68 .............................. getObject(#session).set("lastroom", "Entry")
  [135] pushsymb 70 ............................. <#userlogin>
  [137] getparam 0 .............................. <me>
  [139] pusharglist 1 ........................... <me>
  [141] objcall 71 .............................. <me.getID()>
  [143] pushsymb 49 ............................. <#updateState>
  [145] pusharglistnoret 3 ...................... <#userlogin, me.getID(), #updateState>
  [147] extcall 69 .............................. registerMessage(#userlogin, me.getID(), #updateState)
  [149] pushsymb 72 ............................. <#show_navigator>
  [151] getparam 0 .............................. <me>
  [153] pusharglist 1 ........................... <me>
  [155] objcall 71 .............................. <me.getID()>
  [157] pushsymb 2 .............................. <#showNavigator>
  [159] pusharglistnoret 3 ...................... <#show_navigator, me.getID(), #showNavigator>
  [161] extcall 69 .............................. registerMessage(#show_navigator, me.getID(), #showNavigator)
  [163] pushsymb 73 ............................. <#hide_navigator>
  [165] getparam 0 .............................. <me>
  [167] pusharglist 1 ........................... <me>
  [169] objcall 71 .............................. <me.getID()>
  [171] pushsymb 3 .............................. <#hideNavigator>
  [173] pusharglistnoret 3 ...................... <#hide_navigator, me.getID(), #hideNavigator>
  [175] extcall 69 .............................. registerMessage(#hide_navigator, me.getID(), #hideNavigator)
  [177] pushsymb 74 ............................. <#show_hide_navigator>
  [179] getparam 0 .............................. <me>
  [181] pusharglist 1 ........................... <me>
  [183] objcall 71 .............................. <me.getID()>
  [185] pushsymb 4 .............................. <#showhidenavigator>
  [187] pusharglistnoret 3 ...................... <#show_hide_navigator, me.getID(), #showhidenavigator>
  [189] extcall 69 .............................. registerMessage(#show_hide_navigator, me.getID(), #showhidenavigator)
  [191] pushsymb 6 .............................. <#leaveRoom>
  [193] getparam 0 .............................. <me>
  [195] pusharglist 1 ........................... <me>
  [197] objcall 71 .............................. <me.getID()>
  [199] pushsymb 6 .............................. <#leaveRoom>
  [201] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #leaveRoom>
  [203] extcall 69 .............................. registerMessage(#leaveRoom, me.getID(), #leaveRoom)
  [205] pushsymb 13 ............................. <#executeRoomEntry>
  [207] getparam 0 .............................. <me>
  [209] pusharglist 1 ........................... <me>
  [211] objcall 71 .............................. <me.getID()>
  [213] pushsymb 13 ............................. <#executeRoomEntry>
  [215] pusharglistnoret 3 ...................... <#executeRoomEntry, me.getID(), #executeRoomEntry>
  [217] extcall 69 .............................. registerMessage(#executeRoomEntry, me.getID(), #executeRoomEntry)
  [219] pushsymb 75 ............................. <#requestFlatStruct>
  [221] getparam 0 .............................. <me>
  [223] pusharglist 1 ........................... <me>
  [225] objcall 71 .............................. <me.getID()>
  [227] pushsymb 38 ............................. <#sendGetFlatInfo>
  [229] pusharglistnoret 3 ...................... <#requestFlatStruct, me.getID(), #sendGetFlatInfo>
  [231] extcall 69 .............................. registerMessage(#requestFlatStruct, me.getID(), #sendGetFlatInfo)
  [233] pushsymb 76 ............................. <#updateAvailableFlatCategories>
  [235] getparam 0 .............................. <me>
  [237] pusharglist 1 ........................... <me>
  [239] objcall 71 .............................. <me.getID()>
  [241] pushsymb 31 ............................. <#sendGetUserFlatCats>
  [243] pusharglistnoret 3 ...................... <#updateAvailableFlatCategories, me.getID(), #sendGetUserFlatCats>
  [245] extcall 69 .............................. registerMessage(#updateAvailableFlatCategories, me.getID(), #sendGetUserFlatCats)
  [247] pushint8 1 .............................. <1>
  [249] pusharglistnoret 1 ...................... <1>
  [251] extcall 77 .............................. return 1
  [253] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 79 .............................. <VOID>
  [  4] setprop 58 .............................. pNodeCache = VOID
  [  6] pusharglist 0 ........................... <>
  [  8] extcall 79 .............................. <VOID>
  [ 10] setprop 57 .............................. pCategoryIndex = VOID
  [ 12] pushsymb 70 ............................. <#userlogin>
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 71 .............................. <me.getID()>
  [ 20] pusharglistnoret 2 ...................... <#userlogin, me.getID()>
  [ 22] extcall 80 .............................. unregisterMessage(#userlogin, me.getID())
  [ 24] pushsymb 72 ............................. <#show_navigator>
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglist 1 ........................... <me>
  [ 30] objcall 71 .............................. <me.getID()>
  [ 32] pusharglistnoret 2 ...................... <#show_navigator, me.getID()>
  [ 34] extcall 80 .............................. unregisterMessage(#show_navigator, me.getID())
  [ 36] pushsymb 73 ............................. <#hide_navigator>
  [ 38] getparam 0 .............................. <me>
  [ 40] pusharglist 1 ........................... <me>
  [ 42] objcall 71 .............................. <me.getID()>
  [ 44] pusharglistnoret 2 ...................... <#hide_navigator, me.getID()>
  [ 46] extcall 80 .............................. unregisterMessage(#hide_navigator, me.getID())
  [ 48] pushsymb 74 ............................. <#show_hide_navigator>
  [ 50] getparam 0 .............................. <me>
  [ 52] pusharglist 1 ........................... <me>
  [ 54] objcall 71 .............................. <me.getID()>
  [ 56] pusharglistnoret 2 ...................... <#show_hide_navigator, me.getID()>
  [ 58] extcall 80 .............................. unregisterMessage(#show_hide_navigator, me.getID())
  [ 60] pushsymb 6 .............................. <#leaveRoom>
  [ 62] getparam 0 .............................. <me>
  [ 64] pusharglist 1 ........................... <me>
  [ 66] objcall 71 .............................. <me.getID()>
  [ 68] pusharglistnoret 2 ...................... <#leaveRoom, me.getID()>
  [ 70] extcall 80 .............................. unregisterMessage(#leaveRoom, me.getID())
  [ 72] pushsymb 13 ............................. <#executeRoomEntry>
  [ 74] getparam 0 .............................. <me>
  [ 76] pusharglist 1 ........................... <me>
  [ 78] objcall 71 .............................. <me.getID()>
  [ 80] pusharglistnoret 2 ...................... <#executeRoomEntry, me.getID()>
  [ 82] extcall 80 .............................. unregisterMessage(#executeRoomEntry, me.getID())
  [ 84] pushsymb 75 ............................. <#requestFlatStruct>
  [ 86] getparam 0 .............................. <me>
  [ 88] pusharglist 1 ........................... <me>
  [ 90] objcall 71 .............................. <me.getID()>
  [ 92] pusharglistnoret 2 ...................... <#requestFlatStruct, me.getID()>
  [ 94] extcall 80 .............................. unregisterMessage(#requestFlatStruct, me.getID())
  [ 96] pushsymb 76 ............................. <#updateAvailableFlatCategories>
  [ 98] getparam 0 .............................. <me>
  [100] pusharglist 1 ........................... <me>
  [102] objcall 71 .............................. <me.getID()>
  [104] pusharglistnoret 2 ...................... <#updateAvailableFlatCategories, me.getID()>
  [106] extcall 80 .............................. unregisterMessage(#updateAvailableFlatCategories, me.getID())
  [108] getparam 0 .............................. <me>
  [110] pushcons 8 .............................. <"reset">
  [112] pusharglist 2 ........................... <me, "reset">
  [114] objcall 49 .............................. <me.updateState("reset")>
  [116] pusharglistnoret 1 ...................... <me.updateState("reset")>
  [118] extcall 77 .............................. return me.updateState("reset")
  [120] ret
end

on showNavigator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 81 .............................. <me.getInterface()>
  [  6] pusharglist 1 ........................... <me.getInterface()>
  [  8] objcall 2 ............................... <me.getInterface().showNavigator()>
  [ 10] pusharglistnoret 1 ...................... <me.getInterface().showNavigator()>
  [ 12] extcall 77 .............................. return me.getInterface().showNavigator()
  [ 14] ret
end

on hideNavigator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 81 .............................. <me.getInterface()>
  [  6] pushsymb 82 ............................. <#hide>
  [  8] pusharglist 2 ........................... <me.getInterface(), #hide>
  [ 10] objcall 3 ............................... <me.getInterface().hideNavigator(#hide)>
  [ 12] pusharglistnoret 1 ...................... <me.getInterface().hideNavigator(#hide)>
  [ 14] extcall 77 .............................. return me.getInterface().hideNavigator(#hide)
  [ 16] ret
end

on showhidenavigator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 81 .............................. <me.getInterface()>
  [  6] pushsymb 82 ............................. <#hide>
  [  8] pusharglist 2 ........................... <me.getInterface(), #hide>
  [ 10] objcall 4 ............................... <me.getInterface().showhidenavigator(#hide)>
  [ 12] pusharglistnoret 1 ...................... <me.getInterface().showhidenavigator(#hide)>
  [ 14] extcall 77 .............................. return me.getInterface().showhidenavigator(#hide)
  [ 16] ret
end

on getState me
  [  0] getprop 83 .............................. <pState>
  [  2] pusharglistnoret 1 ...................... <pState>
  [  4] extcall 77 .............................. return pState
  [  6] ret
end

on leaveRoom me
  [  0] pushsymb 67 ............................. <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 66 .............................. <getObject(#session)>
  [  6] pushcons 6 .............................. <"lastroom">
  [  8] pushcons 7 .............................. <"Entry">
  [ 10] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", "Entry">
  [ 12] objcall 68 .............................. getObject(#session).set("lastroom", "Entry")
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 81 .............................. <me.getInterface()>
  [ 20] pusharglist 1 ........................... <me.getInterface()>
  [ 22] objcall 2 ............................... <me.getInterface().showNavigator()>
  [ 24] pusharglistnoret 1 ...................... <me.getInterface().showNavigator()>
  [ 26] extcall 77 .............................. return me.getInterface().showNavigator()
  [ 28] ret
end

on getNodeInfo me, tNodeId, tCategoryId
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 79 .............................. <VOID>
  [  6] eq ...................................... <tNodeId = VOID>
  [  7] jmpifz [ 15] ............................ if tNodeId = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 77 .............................. return 0
  [ 15] getparam 1 .............................. <tNodeId>
  [ 17] pushcons 9 .............................. <"/">
  [ 19] containsstr ............................. <tNodeId contains "/">
  [ 20] not ..................................... <not (tNodeId contains "/")>
  [ 21] jmpifz [115] ............................ if not (tNodeId contains "/") then
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <tNodeId>
  [ 28] pushcons 9 .............................. <"/">
  [ 30] joinstr ................................. <tNodeId & "/">
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 48 .............................. <me.getCurrentNodeMask()>
  [ 37] joinstr ................................. <tNodeId & "/" & me.getCurrentNodeMask()>
  [ 38] getparam 2 .............................. <tCategoryId>
  [ 40] pusharglist 3 ........................... <me, tNodeId & "/" & me.getCurrentNodeMask(), tCategoryId>
  [ 42] objcall 7 ............................... <me.getNodeInfo(tNodeId & "/" & me.getCurrentNodeMask(), tCategoryId)>
  [ 44] setlocal 0 .............................. tTestInfo = me.getNodeInfo(tNodeId & "/" & me.getCurrentNodeMask(), tCategoryId)
  [ 46] getlocal 0 .............................. <tTestInfo>
  [ 48] pushzero ................................ <0>
  [ 49] nteq .................................... <tTestInfo <> 0>
  [ 50] jmpifz [ 59] ............................ if tTestInfo <> 0 then
  [ 53] getlocal 0 .............................. <tTestInfo>
  [ 55] pusharglistnoret 1 ...................... <tTestInfo>
  [ 57] extcall 77 .............................. return tTestInfo
  [ 59] getparam 0 .............................. <me>
  [ 61] getparam 1 .............................. <tNodeId>
  [ 63] pushcons 10 ............................. <"/0">
  [ 65] joinstr ................................. <tNodeId & "/0">
  [ 66] getparam 2 .............................. <tCategoryId>
  [ 68] pusharglist 3 ........................... <me, tNodeId & "/0", tCategoryId>
  [ 70] objcall 7 ............................... <me.getNodeInfo(tNodeId & "/0", tCategoryId)>
  [ 72] setlocal 0 .............................. tTestInfo = me.getNodeInfo(tNodeId & "/0", tCategoryId)
  [ 74] getlocal 0 .............................. <tTestInfo>
  [ 76] pushzero ................................ <0>
  [ 77] nteq .................................... <tTestInfo <> 0>
  [ 78] jmpifz [ 87] ............................ if tTestInfo <> 0 then
  [ 81] getlocal 0 .............................. <tTestInfo>
  [ 83] pusharglistnoret 1 ...................... <tTestInfo>
  [ 85] extcall 77 .............................. return tTestInfo
  [ 87] getparam 0 .............................. <me>
  [ 89] getparam 1 .............................. <tNodeId>
  [ 91] pushcons 11 ............................. <"/1">
  [ 93] joinstr ................................. <tNodeId & "/1">
  [ 94] getparam 2 .............................. <tCategoryId>
  [ 96] pusharglist 3 ........................... <me, tNodeId & "/1", tCategoryId>
  [ 98] objcall 7 ............................... <me.getNodeInfo(tNodeId & "/1", tCategoryId)>
  [100] setlocal 0 .............................. tTestInfo = me.getNodeInfo(tNodeId & "/1", tCategoryId)
  [102] getlocal 0 .............................. <tTestInfo>
  [104] pushzero ................................ <0>
  [105] nteq .................................... <tTestInfo <> 0>
  [106] jmpifz [115] ............................ if tTestInfo <> 0 then
  [109] getlocal 0 .............................. <tTestInfo>
  [111] pusharglistnoret 1 ...................... <tTestInfo>
  [113] extcall 77 .............................. return tTestInfo
  [115] getparam 2 .............................. <tCategoryId>
  [117] pusharglist 0 ........................... <>
  [119] extcall 79 .............................. <VOID>
  [121] nteq .................................... <tCategoryId <> VOID>
  [122] jmpifz [165] ............................ if tCategoryId <> VOID then
  [125] getprop 58 .............................. <pNodeCache>
  [127] getparam 2 .............................. <tCategoryId>
  [129] pusharglist 2 ........................... <pNodeCache, tCategoryId>
  [131] objcall 84 .............................. <pNodeCache[tCategoryId]>
  [133] pusharglist 0 ........................... <>
  [135] extcall 79 .............................. <VOID>
  [137] nteq .................................... <pNodeCache[tCategoryId] <> VOID>
  [138] jmpifz [165] ............................ if pNodeCache[tCategoryId] <> VOID then
  [141] getprop 58 .............................. <pNodeCache>
  [143] getparam 2 .............................. <tCategoryId>
  [145] pusharglist 2 ........................... <pNodeCache, tCategoryId>
  [147] objcall 84 .............................. <pNodeCache[tCategoryId]>
  [149] pushsymb 85 ............................. <#children>
  [151] pusharglist 2 ........................... <pNodeCache[tCategoryId], #children>
  [153] objcall 84 .............................. <pNodeCache[tCategoryId][#children]>
  [155] getparam 1 .............................. <tNodeId>
  [157] pusharglist 2 ........................... <pNodeCache[tCategoryId][#children], tNodeId>
  [159] objcall 84 .............................. <pNodeCache[tCategoryId][#children][tNodeId]>
  [161] pusharglistnoret 1 ...................... <pNodeCache[tCategoryId][#children][tNodeId]>
  [163] extcall 77 .............................. return pNodeCache[tCategoryId][#children][tNodeId]
  [165] getprop 58 .............................. <pNodeCache>
  [167] getparam 1 .............................. <tNodeId>
  [169] pusharglist 2 ........................... <pNodeCache, tNodeId>
  [171] objcall 84 .............................. <pNodeCache[tNodeId]>
  [173] pusharglist 0 ........................... <>
  [175] extcall 79 .............................. <VOID>
  [177] nteq .................................... <pNodeCache[tNodeId] <> VOID>
  [178] jmpifz [193] ............................ if pNodeCache[tNodeId] <> VOID then
  [181] getprop 58 .............................. <pNodeCache>
  [183] getparam 1 .............................. <tNodeId>
  [185] pusharglist 2 ........................... <pNodeCache, tNodeId>
  [187] objcall 84 .............................. <pNodeCache[tNodeId]>
  [189] pusharglistnoret 1 ...................... <pNodeCache[tNodeId]>
  [191] extcall 77 .............................. return pNodeCache[tNodeId]
  [193] getprop 58 .............................. <pNodeCache>
  [195] peek 0
  [197] pusharglist 1
  [199] extcall 86
  [201] pushint8 1
  [203] peek 0
  [205] peek 2
  [207] lteq
  [208] jmpifz [266] ............................ repeat with tList in pNodeCache
  [211] peek 2
  [213] peek 1
  [215] pusharglist 2
  [217] extcall 84
  [219] setlocal 1
  [221] getlocal 1 .............................. <tList>
  [223] pushsymb 85 ............................. <#children>
  [225] pusharglist 2 ........................... <tList, #children>
  [227] objcall 84 .............................. <tList[#children]>
  [229] getparam 1 .............................. <tNodeId>
  [231] pusharglist 2 ........................... <tList[#children], tNodeId>
  [233] objcall 84 .............................. <tList[#children][tNodeId]>
  [235] pusharglist 0 ........................... <>
  [237] extcall 79 .............................. <VOID>
  [239] nteq .................................... <tList[#children][tNodeId] <> VOID>
  [240] jmpifz [261] ............................ if tList[#children][tNodeId] <> VOID then
  [243] getlocal 1 .............................. <tList>
  [245] pushsymb 85 ............................. <#children>
  [247] pusharglist 2 ........................... <tList, #children>
  [249] objcall 84 .............................. <tList[#children]>
  [251] getparam 1 .............................. <tNodeId>
  [253] pusharglist 2 ........................... <tList[#children], tNodeId>
  [255] objcall 84 .............................. <tList[#children][tNodeId]>
  [257] pusharglistnoret 1 ...................... <tList[#children][tNodeId]>
  [259] extcall 77 .............................. return tList[#children][tNodeId]
  [261] pushint8 1
  [263] add
  [264] endrepeat [203]
  [266] pop 3
  [268] pushzero ................................ <0>
  [269] pusharglistnoret 1 ...................... <0>
  [271] extcall 77 .............................. return 0
  [273] ret
end

on getTreeInfoFor me, tid
  [  0] getparam 1 .............................. <tid>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 79 .............................. <VOID>
  [  6] eq ...................................... <tid = VOID>
  [  7] jmpifz [ 15] ............................ if tid = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 77 .............................. return 0
  [ 15] getprop 57 .............................. <pCategoryIndex>
  [ 17] getparam 1 .............................. <tid>
  [ 19] pusharglist 2 ........................... <pCategoryIndex, tid>
  [ 21] objcall 84 .............................. <pCategoryIndex[tid]>
  [ 23] pusharglist 0 ........................... <>
  [ 25] extcall 79 .............................. <VOID>
  [ 27] eq ...................................... <pCategoryIndex[tid] = VOID>
  [ 28] jmpifz [ 36] ............................ if pCategoryIndex[tid] = VOID then
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 77 .............................. return 0
  [ 36] getprop 57 .............................. <pCategoryIndex>
  [ 38] getparam 1 .............................. <tid>
  [ 40] pusharglist 2 ........................... <pCategoryIndex, tid>
  [ 42] objcall 84 .............................. <pCategoryIndex[tid]>
  [ 44] pusharglistnoret 1 ...................... <pCategoryIndex[tid]>
  [ 46] extcall 77 .............................. return pCategoryIndex[tid]
  [ 48] ret
end

on setNodeProperty me, tNodeId, tProp, tValue
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pusharglist 2 ........................... <me, tNodeId>
  [  6] objcall 7 ............................... <me.getNodeInfo(tNodeId)>
  [  8] setlocal 0 .............................. tNodeInfo = me.getNodeInfo(tNodeId)
  [ 10] getlocal 0 .............................. <tNodeInfo>
  [ 12] pusharglist 1 ........................... <tNodeInfo>
  [ 14] extcall 92 .............................. <listp(tNodeInfo)>
  [ 16] not ..................................... <not listp(tNodeInfo)>
  [ 17] jmpifz [ 25] ............................ if not listp(tNodeInfo) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 77 .............................. return 0
  [ 25] getlocal 0 .............................. <tNodeInfo>
  [ 27] getparam 2 .............................. <tProp>
  [ 29] getparam 3 .............................. <tValue>
  [ 31] pusharglistnoret 3 ...................... <tNodeInfo, tProp, tValue>
  [ 33] objcall 93 .............................. tNodeInfo.setaProp(tProp, tValue)
  [ 35] pushint8 1 .............................. <1>
  [ 37] pusharglistnoret 1 ...................... <1>
  [ 39] extcall 77 .............................. return 1
  [ 41] ret
end

on getNodeProperty me, tNodeId, tProp
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 79 .............................. <VOID>
  [  6] eq ...................................... <tNodeId = VOID>
  [  7] jmpifz [ 15] ............................ if tNodeId = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 77 .............................. return 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 1 .............................. <tNodeId>
  [ 19] pusharglist 2 ........................... <me, tNodeId>
  [ 21] objcall 7 ............................... <me.getNodeInfo(tNodeId)>
  [ 23] setlocal 0 .............................. tNodeInfo = me.getNodeInfo(tNodeId)
  [ 25] getlocal 0 .............................. <tNodeInfo>
  [ 27] pushzero ................................ <0>
  [ 28] eq ...................................... <tNodeInfo = 0>
  [ 29] jmpifz [ 37] ............................ if tNodeInfo = 0 then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 77 .............................. return 0
  [ 37] getlocal 0 .............................. <tNodeInfo>
  [ 39] getparam 2 .............................. <tProp>
  [ 41] pusharglist 2 ........................... <tNodeInfo, tProp>
  [ 43] objcall 97 .............................. <tNodeInfo.getaProp(tProp)>
  [ 45] pusharglistnoret 1 ...................... <tNodeInfo.getaProp(tProp)>
  [ 47] extcall 77 .............................. return tNodeInfo.getaProp(tProp)
  [ 49] ret
end

on updateInterface me, tid
  [  0] getparam 1 .............................. <tid>
  [  2] pushsymb 98 ............................. <#own>
  [  4] eq ...................................... <tid = #own>
  [  5] getparam 1 .............................. <tid>
  [  7] pushsymb 99 ............................. <#src>
  [  9] eq ...................................... <tid = #src>
  [ 10] or ...................................... <(tid = #own) or (tid = #src)>
  [ 11] getparam 1 .............................. <tid>
  [ 13] pushsymb 100 ............................ <#fav>
  [ 15] eq ...................................... <tid = #fav>
  [ 16] or ...................................... <(tid = #own) or (tid = #src) or (tid = #fav)>
  [ 17] jmpifz [ 35] ............................ if (tid = #own) or (tid = #src) or (tid = #fav) then / else
  [ 20] getparam 0 .............................. <me>
  [ 22] getparam 1 .............................. <tid>
  [ 24] pusharglist 2 ........................... <me, tid>
  [ 26] objcall 24 .............................. <me.feedNewRoomList(tid)>
  [ 28] pusharglistnoret 1 ...................... <me.feedNewRoomList(tid)>
  [ 30] extcall 77 .............................. return me.feedNewRoomList(tid)
  [ 32] jmp [ 57]
  [ 35] getparam 0 .............................. <me>
  [ 37] getparam 1 .............................. <tid>
  [ 39] pushcons 9 .............................. <"/">
  [ 41] joinstr ................................. <tid & "/">
  [ 42] getparam 0 .............................. <me>
  [ 44] pusharglist 1 ........................... <me>
  [ 46] objcall 48 .............................. <me.getCurrentNodeMask()>
  [ 48] joinstr ................................. <tid & "/" & me.getCurrentNodeMask()>
  [ 49] pusharglist 2 ........................... <me, tid & "/" & me.getCurrentNodeMask()>
  [ 51] objcall 24 .............................. <me.feedNewRoomList(tid & "/" & me.getCurrentNodeMask())>
  [ 53] pusharglistnoret 1 ...................... <me.feedNewRoomList(tid & "/" & me.getCurrentNodeMask())>
  [ 55] extcall 77 .............................. return me.feedNewRoomList(tid & "/" & me.getCurrentNodeMask())
  [ 57] ret
end

on prepareRoomEntry me, tRoomID
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 101 ............................. <me.getComponent()>
  [  6] getparam 1 .............................. <tRoomID>
  [  8] pusharglist 2 ........................... <me.getComponent(), tRoomID>
  [ 10] objcall 7 ............................... <me.getComponent().getNodeInfo(tRoomID)>
  [ 12] setlocal 0 .............................. tRoomInfo = me.getComponent().getNodeInfo(tRoomID)
  [ 14] getlocal 0 .............................. <tRoomInfo>
  [ 16] pushzero ................................ <0>
  [ 17] eq ...................................... <tRoomInfo = 0>
  [ 18] jmpifz [ 26] ............................ if tRoomInfo = 0 then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 77 .............................. return 0
  [ 26] getlocal 0 .............................. <tRoomInfo>
  [ 28] pushsymb 102 ............................ <#nodeType>
  [ 30] pusharglist 2 ........................... <tRoomInfo, #nodeType>
  [ 32] objcall 84 .............................. <tRoomInfo[#nodeType]>
  [ 34] pushint8 1 .............................. <1>
  [ 36] eq ...................................... <tRoomInfo[#nodeType] = 1>
  [ 37] jmpifz [ 59] ............................ if tRoomInfo[#nodeType] = 1 then / else
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglist 1 ........................... <me>
  [ 44] objcall 101 ............................. <me.getComponent()>
  [ 46] getparam 1 .............................. <tRoomID>
  [ 48] pusharglist 2 ........................... <me.getComponent(), tRoomID>
  [ 50] objcall 13 .............................. <me.getComponent().executeRoomEntry(tRoomID)>
  [ 52] pusharglistnoret 1 ...................... <me.getComponent().executeRoomEntry(tRoomID)>
  [ 54] extcall 77 .............................. return me.getComponent().executeRoomEntry(tRoomID)
  [ 56] jmp [110]
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglist 1 ........................... <me>
  [ 63] objcall 81 .............................. <me.getInterface()>
  [ 65] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 67] objcall 3 ............................... me.getInterface().hideNavigator()
  [ 69] pushcons 12 ............................. <"receivedFlatStruct">
  [ 71] getparam 1 .............................. <tRoomID>
  [ 73] joinstr ................................. <"receivedFlatStruct" & tRoomID>
  [ 74] pusharglist 1 ........................... <"receivedFlatStruct" & tRoomID>
  [ 76] extcall 103 ............................. <symbol("receivedFlatStruct" & tRoomID)>
  [ 78] getparam 0 .............................. <me>
  [ 80] pusharglist 1 ........................... <me>
  [ 82] objcall 81 .............................. <me.getInterface()>
  [ 84] pusharglist 1 ........................... <me.getInterface()>
  [ 86] objcall 71 .............................. <me.getInterface().getID()>
  [ 88] pushsymb 104 ............................ <#checkFlatAccess>
  [ 90] pusharglistnoret 3 ...................... <symbol("receivedFlatStruct" & tRoomID), me.getInterface().getID(), #checkFlatAccess>
  [ 92] extcall 69 .............................. registerMessage(symbol("receivedFlatStruct" & tRoomID), me.getInterface().getID(), #checkFlatAccess)
  [ 94] getparam 0 .............................. <me>
  [ 96] pusharglist 1 ........................... <me>
  [ 98] objcall 101 ............................. <me.getComponent()>
  [100] getparam 1 .............................. <tRoomID>
  [102] pusharglist 2 ........................... <me.getComponent(), tRoomID>
  [104] objcall 38 .............................. <me.getComponent().sendGetFlatInfo(tRoomID)>
  [106] pusharglistnoret 1 ...................... <me.getComponent().sendGetFlatInfo(tRoomID)>
  [108] extcall 77 .............................. return me.getComponent().sendGetFlatInfo(tRoomID)
  [110] ret
end

on executeRoomEntry me, tNodeId, tRoomDataStruct
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 81 .............................. <me.getInterface()>
  [  6] pusharglistnoret 1 ...................... <me.getInterface()>
  [  8] objcall 3 ............................... me.getInterface().hideNavigator()
  [ 10] pushsymb 67 ............................. <#session>
  [ 12] pusharglist 1 ........................... <#session>
  [ 14] extcall 66 .............................. <getObject(#session)>
  [ 16] pushcons 6 .............................. <"lastroom">
  [ 18] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [ 20] objcall 107 ............................. <getObject(#session).get("lastroom")>
  [ 22] pushcons 7 .............................. <"Entry">
  [ 24] eq ...................................... <getObject(#session).get("lastroom") = "Entry">
  [ 25] jmpifz [105] ............................ if getObject(#session).get("lastroom") = "Entry" then / else
  [ 28] pushsymb 109 ............................ <#entry>
  [ 30] pusharglist 1 ........................... <#entry>
  [ 32] extcall 108 ............................. <threadExists(#entry)>
  [ 34] jmpifz [ 51] ............................ if threadExists(#entry) then
  [ 37] pushsymb 109 ............................ <#entry>
  [ 39] pusharglist 1 ........................... <#entry>
  [ 41] extcall 110 ............................. <getThread(#entry)>
  [ 43] pusharglist 1 ........................... <getThread(#entry)>
  [ 45] objcall 101 ............................. <getThread(#entry).getComponent()>
  [ 47] pusharglistnoret 1 ...................... <getThread(#entry).getComponent()>
  [ 49] objcall 111 ............................. getThread(#entry).getComponent().leaveEntry()
  [ 51] getparam 2 .............................. <tRoomDataStruct>
  [ 53] pusharglist 0 ........................... <>
  [ 55] extcall 79 .............................. <VOID>
  [ 57] eq ...................................... <tRoomDataStruct = VOID>
  [ 58] jmpifz [ 71] ............................ if tRoomDataStruct = VOID then
  [ 61] getparam 0 .............................. <me>
  [ 63] getparam 1 .............................. <tNodeId>
  [ 65] pusharglist 2 ........................... <me, tNodeId>
  [ 67] objcall 47 .............................. <me.getRoomProperties(tNodeId)>
  [ 69] setparam 2 .............................. tRoomDataStruct = me.getRoomProperties(tNodeId)
  [ 71] pushsymb 67 ............................. <#session>
  [ 73] pusharglist 1 ........................... <#session>
  [ 75] extcall 66 .............................. <getObject(#session)>
  [ 77] pushcons 6 .............................. <"lastroom">
  [ 79] getparam 2 .............................. <tRoomDataStruct>
  [ 81] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", tRoomDataStruct>
  [ 83] objcall 68 .............................. getObject(#session).set("lastroom", tRoomDataStruct)
  [ 85] getparam 0 .............................. <me>
  [ 87] pushint16 500 ........................... <500>
  [ 90] pushsymb 13 ............................. <#executeRoomEntry>
  [ 92] pusharglistnoret 3 ...................... <me, 500, #executeRoomEntry>
  [ 94] objcall 112 ............................. me.delay(500, #executeRoomEntry)
  [ 96] pushint8 1 .............................. <1>
  [ 98] pusharglistnoret 1 ...................... <1>
  [100] extcall 77 .............................. return 1
  [102] jmp [222]
  [105] getparam 1 .............................. <tNodeId>
  [107] pusharglist 1 ........................... <tNodeId>
  [109] extcall 113 ............................. <voidp(tNodeId)>
  [111] jmpifz [176] ............................ if voidp(tNodeId) then / else
  [114] pushsymb 67 ............................. <#session>
  [116] pusharglist 1 ........................... <#session>
  [118] extcall 66 .............................. <getObject(#session)>
  [120] pushcons 6 .............................. <"lastroom">
  [122] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [124] objcall 107 ............................. <getObject(#session).get("lastroom")>
  [126] getobjprop 114 .......................... <getObject(#session).get("lastroom").ilk>
  [128] pushsymb 115 ............................ <#propList>
  [130] eq ...................................... <getObject(#session).get("lastroom").ilk = #propList>
  [131] jmpifz [151] ............................ if getObject(#session).get("lastroom").ilk = #propList then / else
  [134] pushsymb 67 ............................. <#session>
  [136] pusharglist 1 ........................... <#session>
  [138] extcall 66 .............................. <getObject(#session)>
  [140] pushcons 6 .............................. <"lastroom">
  [142] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [144] objcall 107 ............................. <getObject(#session).get("lastroom")>
  [146] setparam 2 .............................. tRoomDataStruct = getObject(#session).get("lastroom")
  [148] jmp [173]
  [151] getparam 0 .............................. <me>
  [153] pushcons 13 ............................. <"Target room's ID expected!">
  [155] pushsymb 13 ............................. <#executeRoomEntry>
  [157] pusharglistnoret 3 ...................... <me, "Target room's ID expected!", #executeRoomEntry>
  [159] extcall 116 ............................. error(me, "Target room's ID expected!", #executeRoomEntry)
  [161] getparam 0 .............................. <me>
  [163] pushcons 14 ............................. <"enterEntry">
  [165] pusharglist 2 ........................... <me, "enterEntry">
  [167] objcall 49 .............................. <me.updateState("enterEntry")>
  [169] pusharglistnoret 1 ...................... <me.updateState("enterEntry")>
  [171] extcall 77 .............................. return me.updateState("enterEntry")
  [173] jmp [210]
  [176] getparam 2 .............................. <tRoomDataStruct>
  [178] pusharglist 0 ........................... <>
  [180] extcall 79 .............................. <VOID>
  [182] eq ...................................... <tRoomDataStruct = VOID>
  [183] jmpifz [196] ............................ if tRoomDataStruct = VOID then
  [186] getparam 0 .............................. <me>
  [188] getparam 1 .............................. <tNodeId>
  [190] pusharglist 2 ........................... <me, tNodeId>
  [192] objcall 47 .............................. <me.getRoomProperties(tNodeId)>
  [194] setparam 2 .............................. tRoomDataStruct = me.getRoomProperties(tNodeId)
  [196] pushsymb 67 ............................. <#session>
  [198] pusharglist 1 ........................... <#session>
  [200] extcall 66 .............................. <getObject(#session)>
  [202] pushcons 6 .............................. <"lastroom">
  [204] getparam 2 .............................. <tRoomDataStruct>
  [206] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", tRoomDataStruct>
  [208] objcall 68 .............................. getObject(#session).set("lastroom", tRoomDataStruct)
  [210] pushsymb 118 ............................ <#enterRoom>
  [212] getparam 2 .............................. <tRoomDataStruct>
  [214] pusharglist 2 ........................... <#enterRoom, tRoomDataStruct>
  [216] extcall 117 ............................. <executeMessage(#enterRoom, tRoomDataStruct)>
  [218] pusharglistnoret 1 ...................... <executeMessage(#enterRoom, tRoomDataStruct)>
  [220] extcall 77 .............................. return executeMessage(#enterRoom, tRoomDataStruct)
  [222] ret
end

on expandNode me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 81 .............................. <me.getInterface()>
  [  6] pusharglistnoret 1 ...................... <me.getInterface()>
  [  8] objcall 120 ............................. me.getInterface().clearRoomList()
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 81 .............................. <me.getInterface()>
  [ 16] pushsymb 121 ............................ <#categoryId>
  [ 18] getparam 1 .............................. <tNodeId>
  [ 20] pusharglistnoret 3 ...................... <me.getInterface(), #categoryId, tNodeId>
  [ 22] objcall 122 ............................. me.getInterface().setProperty(#categoryId, tNodeId)
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <tNodeId>
  [ 28] pusharglistnoret 2 ...................... <me, tNodeId>
  [ 30] objcall 16 .............................. me.createNaviHistory(tNodeId)
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 1 .............................. <tNodeId>
  [ 36] pusharglist 2 ........................... <me, tNodeId>
  [ 38] objcall 11 .............................. <me.updateInterface(tNodeId)>
  [ 40] pusharglistnoret 1 ...................... <me.updateInterface(tNodeId)>
  [ 42] extcall 77 .............................. return me.updateInterface(tNodeId)
  [ 44] ret
end

on expandHistoryItem me, tClickedItem
  [  0] getprop 60 .............................. <pNaviHistory>
  [  2] pusharglist 1 ........................... <pNaviHistory>
  [  4] extcall 92 .............................. <listp(pNaviHistory)>
  [  6] not ..................................... <not listp(pNaviHistory)>
  [  7] jmpifz [ 15] ............................ if not listp(pNaviHistory) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 77 .............................. return 0
  [ 15] getparam 1 .............................. <tClickedItem>
  [ 17] getprop 60 .............................. <pNaviHistory>
  [ 19] getobjprop 86 ........................... <pNaviHistory.count>
  [ 21] gt ...................................... <tClickedItem > pNaviHistory.count>
  [ 22] jmpifz [ 31] ............................ if tClickedItem > pNaviHistory.count then
  [ 25] getprop 60 .............................. <pNaviHistory>
  [ 27] getobjprop 86 ........................... <pNaviHistory.count>
  [ 29] setparam 1 .............................. tClickedItem = pNaviHistory.count
  [ 31] getparam 1 .............................. <tClickedItem>
  [ 33] pushzero ................................ <0>
  [ 34] eq ...................................... <tClickedItem = 0>
  [ 35] jmpifz [ 43] ............................ if tClickedItem = 0 then
  [ 38] pushzero ................................ <0>
  [ 39] pusharglistnoret 1 ...................... <0>
  [ 41] extcall 77 .............................. return 0
  [ 43] getprop 60 .............................. <pNaviHistory>
  [ 45] getparam 1 .............................. <tClickedItem>
  [ 47] pusharglist 2 ........................... <pNaviHistory, tClickedItem>
  [ 49] objcall 84 .............................. <pNaviHistory[tClickedItem]>
  [ 51] pushsymb 109 ............................ <#entry>
  [ 53] eq ...................................... <pNaviHistory[tClickedItem] = #entry>
  [ 54] jmpifz [ 88] ............................ if pNaviHistory[tClickedItem] = #entry then / else
  [ 57] pushcons 5 .............................. <"connection.info.id">
  [ 59] pusharglist 1 ........................... <"connection.info.id">
  [ 61] extcall 124 ............................. <getVariable("connection.info.id")>
  [ 63] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 65] extcall 123 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 67] pushcons 15 ............................. <"QUIT">
  [ 69] pusharglistnoret 2 ...................... <getConnection(getVariable("connection.info.id")), "QUIT">
  [ 71] objcall 125 ............................. getConnection(getVariable("connection.info.id")).send("QUIT")
  [ 73] getparam 0 .............................. <me>
  [ 75] pushcons 14 ............................. <"enterEntry">
  [ 77] pusharglist 2 ........................... <me, "enterEntry">
  [ 79] objcall 49 .............................. <me.updateState("enterEntry")>
  [ 81] pusharglistnoret 1 ...................... <me.updateState("enterEntry")>
  [ 83] extcall 77 .............................. return me.updateState("enterEntry")
  [ 85] jmp [106]
  [ 88] getparam 0 .............................. <me>
  [ 90] getprop 60 .............................. <pNaviHistory>
  [ 92] getparam 1 .............................. <tClickedItem>
  [ 94] pusharglist 2 ........................... <pNaviHistory, tClickedItem>
  [ 96] objcall 84 .............................. <pNaviHistory[tClickedItem]>
  [ 98] pusharglist 2 ........................... <me, pNaviHistory[tClickedItem]>
  [100] objcall 14 .............................. <me.expandNode(pNaviHistory[tClickedItem])>
  [102] pusharglistnoret 1 ...................... <me.expandNode(pNaviHistory[tClickedItem])>
  [104] extcall 77 .............................. return me.expandNode(pNaviHistory[tClickedItem])
  [106] ret
end

on createNaviHistory me, tCategoryId
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 60 .............................. pNaviHistory = []
  [  5] pushcons 16 ............................. <EMPTY>
  [  7] setlocal 0 .............................. tText = EMPTY
  [  9] getparam 1 .............................. <tCategoryId>
  [ 11] pusharglist 0 ........................... <>
  [ 13] extcall 79 .............................. <VOID>
  [ 15] eq ...................................... <tCategoryId = VOID>
  [ 16] jmpifz [ 24] ............................ if tCategoryId = VOID then
  [ 19] pushzero ................................ <0>
  [ 20] pusharglistnoret 1 ...................... <0>
  [ 22] extcall 77 .............................. return 0
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <tCategoryId>
  [ 28] pusharglist 2 ........................... <me, tCategoryId>
  [ 30] objcall 8 ............................... <me.getTreeInfoFor(tCategoryId)>
  [ 32] setlocal 1 .............................. tParentInfo = me.getTreeInfoFor(tCategoryId)
  [ 34] getparam 1 .............................. <tCategoryId>
  [ 36] getprop 50 .............................. <pRootUnitCatId>
  [ 38] eq ...................................... <tCategoryId = pRootUnitCatId>
  [ 39] getparam 1 .............................. <tCategoryId>
  [ 41] getprop 53 .............................. <pRootFlatCatId>
  [ 43] eq ...................................... <tCategoryId = pRootFlatCatId>
  [ 44] or ...................................... <(tCategoryId = pRootUnitCatId) or (tCategoryId = pRootFlatCatId)>
  [ 45] jmpifz [ 51] ............................ if (tCategoryId = pRootUnitCatId) or (tCategoryId = pRootFlatCatId) then
  [ 48] pushzero ................................ <0>
  [ 49] setlocal 1 .............................. tParentInfo = 0
  [ 51] getlocal 1 .............................. <tParentInfo>
  [ 53] pusharglist 1 ........................... <tParentInfo>
  [ 55] extcall 92 .............................. <listp(tParentInfo)>
  [ 57] jmpifz [ 80] ............................ if listp(tParentInfo) then
  [ 60] getlocal 1 .............................. <tParentInfo>
  [ 62] pushsymb 127 ............................ <#parentid>
  [ 64] pusharglist 2 ........................... <tParentInfo, #parentid>
  [ 66] objcall 84 .............................. <tParentInfo[#parentid]>
  [ 68] setlocal 2 .............................. tParentId = tParentInfo[#parentid]
  [ 70] getparam 0 .............................. <me>
  [ 72] getlocal 2 .............................. <tParentId>
  [ 74] pusharglist 2 ........................... <me, tParentId>
  [ 76] objcall 8 ............................... <me.getTreeInfoFor(tParentId)>
  [ 78] setlocal 1 .............................. tParentInfo = me.getTreeInfoFor(tParentId)
  [ 80] getlocal 1 .............................. <tParentInfo>
  [ 82] pushzero ................................ <0>
  [ 83] nteq .................................... <tParentInfo <> 0>
  [ 84] jmpifz [190] ............................ repeat while tParentInfo <> 0
  [ 87] getprop 60 .............................. <pNaviHistory>
  [ 89] getlocal 1 .............................. <tParentInfo>
  [ 91] pushsymb 127 ............................ <#parentid>
  [ 93] pusharglist 2 ........................... <tParentInfo, #parentid>
  [ 95] objcall 84 .............................. <tParentInfo[#parentid]>
  [ 97] pusharglist 2 ........................... <pNaviHistory, tParentInfo[#parentid]>
  [ 99] objcall 128 ............................. <pNaviHistory.getPos(tParentInfo[#parentid])>
  [101] pushzero ................................ <0>
  [102] gt ...................................... <pNaviHistory.getPos(tParentInfo[#parentid]) > 0>
  [103] jmpifz [122] ............................ if pNaviHistory.getPos(tParentInfo[#parentid]) > 0 then
  [106] pushzero ................................ <0>
  [107] setlocal 1 .............................. tParentInfo = 0
  [109] getparam 0 .............................. <me>
  [111] pushcons 17 ............................. <"Category loop detected in navigation data!">
  [113] pushsymb 16 ............................. <#createNaviHistory>
  [115] pusharglistnoret 3 ...................... <me, "Category loop detected in navigation data!", #createNaviHistory>
  [117] extcall 116 ............................. error(me, "Category loop detected in navigation data!", #createNaviHistory)
  [119] jmp [188] ............................... next repeat
  [122] getprop 60 .............................. <pNaviHistory>
  [124] pushint8 1 .............................. <1>
  [126] getlocal 2 .............................. <tParentId>
  [128] pusharglistnoret 3 ...................... <pNaviHistory, 1, tParentId>
  [130] objcall 129 ............................. pNaviHistory.addAt(1, tParentId)
  [132] getlocal 1 .............................. <tParentInfo>
  [134] pushsymb 130 ............................ <#name>
  [136] pusharglist 2 ........................... <tParentInfo, #name>
  [138] objcall 84 .............................. <tParentInfo[#name]>
  [140] pushcons 18 ............................. <RETURN>
  [142] joinstr ................................. <tParentInfo[#name] & RETURN>
  [143] getlocal 0 .............................. <tText>
  [145] joinstr ................................. <tParentInfo[#name] & RETURN & tText>
  [146] setlocal 0 .............................. tText = tParentInfo[#name] & RETURN & tText
  [148] getlocal 2 .............................. <tParentId>
  [150] getprop 50 .............................. <pRootUnitCatId>
  [152] eq ...................................... <tParentId = pRootUnitCatId>
  [153] getlocal 2 .............................. <tParentId>
  [155] getprop 53 .............................. <pRootFlatCatId>
  [157] eq ...................................... <tParentId = pRootFlatCatId>
  [158] or ...................................... <(tParentId = pRootUnitCatId) or (tParentId = pRootFlatCatId)>
  [159] jmpifz [168] ............................ if (tParentId = pRootUnitCatId) or (tParentId = pRootFlatCatId) then
  [162] pushzero ................................ <0>
  [163] setlocal 1 .............................. tParentInfo = 0
  [165] jmp [188] ............................... next repeat
  [168] getlocal 1 .............................. <tParentInfo>
  [170] pushsymb 127 ............................ <#parentid>
  [172] pusharglist 2 ........................... <tParentInfo, #parentid>
  [174] objcall 84 .............................. <tParentInfo[#parentid]>
  [176] setlocal 2 .............................. tParentId = tParentInfo[#parentid]
  [178] getparam 0 .............................. <me>
  [180] getlocal 2 .............................. <tParentId>
  [182] pusharglist 2 ........................... <me, tParentId>
  [184] objcall 8 ............................... <me.getTreeInfoFor(tParentId)>
  [186] setlocal 1 .............................. tParentInfo = me.getTreeInfoFor(tParentId)
  [188] endrepeat [ 80]
  [190] pushsymb 67 ............................. <#session>
  [192] pusharglist 1 ........................... <#session>
  [194] extcall 66 .............................. <getObject(#session)>
  [196] pushcons 6 .............................. <"lastroom">
  [198] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [200] objcall 107 ............................. <getObject(#session).get("lastroom")>
  [202] pushcons 7 .............................. <"Entry">
  [204] nteq .................................... <getObject(#session).get("lastroom") <> "Entry">
  [205] jmpifz [232] ............................ if getObject(#session).get("lastroom") <> "Entry" then
  [208] getprop 60 .............................. <pNaviHistory>
  [210] pushint8 1 .............................. <1>
  [212] pushsymb 109 ............................ <#entry>
  [214] pusharglistnoret 3 ...................... <pNaviHistory, 1, #entry>
  [216] objcall 129 ............................. pNaviHistory.addAt(1, #entry)
  [218] pushcons 19 ............................. <"nav_hotelview">
  [220] pusharglist 1 ........................... <"nav_hotelview">
  [222] extcall 131 ............................. <getText("nav_hotelview")>
  [224] pushcons 18 ............................. <RETURN>
  [226] joinstr ................................. <getText("nav_hotelview") & RETURN>
  [227] getlocal 0 .............................. <tText>
  [229] joinstr ................................. <getText("nav_hotelview") & RETURN & tText>
  [230] setlocal 0 .............................. tText = getText("nav_hotelview") & RETURN & tText
  [232] pushint16 -30003 ........................ <-30003>
  [235] pushzero ................................ <0>
  [236] pushzero ................................ <0>
  [237] pushzero ................................ <0>
  [238] pushzero ................................ <0>
  [239] pushzero ................................ <0>
  [240] pushzero ................................ <0>
  [241] pushzero ................................ <0>
  [242] pushzero ................................ <0>
  [243] deletechunk 5 ........................... delete char -30003 of tText
  [245] getparam 0 .............................. <me>
  [247] pusharglist 1 ........................... <me>
  [249] objcall 81 .............................. <me.getInterface()>
  [251] getparam 1 .............................. <tCategoryId>
  [253] getlocal 0 .............................. <tText>
  [255] pusharglistnoret 3 ...................... <me.getInterface(), tCategoryId, tText>
  [257] objcall 132 ............................. me.getInterface().renderHistory(tCategoryId, tText)
  [259] pushint8 1 .............................. <1>
  [261] pusharglistnoret 1 ...................... <1>
  [263] extcall 77 .............................. return 1
  [265] ret
end

on callNodeUpdate me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 81 .............................. <me.getInterface()>
  [  6] pusharglist 1 ........................... <me.getInterface()>
  [  8] objcall 136 ............................. <me.getInterface().getNaviView()>
  [ 10] peek 0 .................................. case me.getInterface().getNaviView() of
  [ 12] pushsymb 137 ............................ <#unit>
  [ 14] nteq
  [ 15] jmpifz [ 26] ............................ (case) #unit, ...
  [ 18] peek 0
  [ 20] pushsymb 138 ............................ <#flat>
  [ 22] eq
  [ 23] jmpifz [ 53] ............................ (case) ..., #flat:
  [ 26] pop 1
  [ 28] getparam 0 .............................. <me>
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglist 1 ........................... <me>
  [ 34] objcall 81 .............................. <me.getInterface()>
  [ 36] pushsymb 121 ............................ <#categoryId>
  [ 38] pusharglist 2 ........................... <me.getInterface(), #categoryId>
  [ 40] objcall 139 ............................. <me.getInterface().getProperty(#categoryId)>
  [ 42] pusharglist 2 ........................... <me, me.getInterface().getProperty(#categoryId)>
  [ 44] objcall 27 .............................. <me.sendNavigate(me.getInterface().getProperty(#categoryId))>
  [ 46] pusharglistnoret 1 ...................... <me.sendNavigate(me.getInterface().getProperty(#categoryId))>
  [ 48] extcall 77 .............................. return me.sendNavigate(me.getInterface().getProperty(#categoryId))
  [ 50] jmp [114]
  [ 53] peek 0
  [ 55] pushsymb 98 ............................. <#own>
  [ 57] eq
  [ 58] jmpifz [ 80] ............................ (case) #own:
  [ 61] pop 1
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglist 1 ........................... <me>
  [ 67] objcall 101 ............................. <me.getComponent()>
  [ 69] pusharglist 1 ........................... <me.getComponent()>
  [ 71] objcall 34 .............................. <me.getComponent().sendGetOwnFlats()>
  [ 73] pusharglistnoret 1 ...................... <me.getComponent().sendGetOwnFlats()>
  [ 75] extcall 77 .............................. return me.getComponent().sendGetOwnFlats()
  [ 77] jmp [114]
  [ 80] peek 0
  [ 82] pushsymb 100 ............................ <#fav>
  [ 84] eq
  [ 85] jmpifz [107] ............................ (case) #fav:
  [ 88] pop 1
  [ 90] getparam 0 .............................. <me>
  [ 92] pusharglist 1 ........................... <me>
  [ 94] objcall 101 ............................. <me.getComponent()>
  [ 96] pusharglist 1 ........................... <me.getComponent()>
  [ 98] objcall 35 .............................. <me.getComponent().sendGetFavoriteFlats()>
  [100] pusharglistnoret 1 ...................... <me.getComponent().sendGetFavoriteFlats()>
  [102] extcall 77 .............................. return me.getComponent().sendGetFavoriteFlats()
  [104] jmp [114] ............................... (case) otherwise:
  [107] pop 1
  [109] pushzero ................................ <0>
  [110] pusharglistnoret 1 ...................... <0>
  [112] extcall 77 .............................. return 0
  [114] pop 1 ................................... end case
  [116] ret
end

on showHideFullRooms me, tNodeId
  [  0] getprop 61 .............................. <pHideFullRoomsFlag>
  [  2] not ..................................... <not pHideFullRoomsFlag>
  [  3] setprop 61 .............................. pHideFullRoomsFlag = not pHideFullRoomsFlag
  [  5] getparam 0 .............................. <me>
  [  7] getparam 1 .............................. <tNodeId>
  [  9] pusharglist 2 ........................... <me, tNodeId>
  [ 11] objcall 11 .............................. <me.updateInterface(tNodeId)>
  [ 13] pusharglistnoret 1 ...................... <me.updateInterface(tNodeId)>
  [ 15] extcall 77 .............................. return me.updateInterface(tNodeId)
  [ 17] ret
end

on roomkioskGoingFlat me, tRoomProps
  [  0] getparam 1 .............................. <tRoomProps>
  [  2] pushsymb 140 ............................ <#flatId>
  [  4] getparam 1 .............................. <tRoomProps>
  [  6] pushsymb 141 ............................ <#id>
  [  8] pusharglist 2 ........................... <tRoomProps, #id>
  [ 10] objcall 84 .............................. <tRoomProps[#id]>
  [ 12] pusharglistnoret 3 ...................... <tRoomProps, #flatId, tRoomProps[#id]>
  [ 14] objcall 142 ............................. tRoomProps[#flatId] = tRoomProps[#id]
  [ 16] getparam 1 .............................. <tRoomProps>
  [ 18] pushsymb 141 ............................ <#id>
  [ 20] pushcons 20 ............................. <"f_">
  [ 22] getparam 1 .............................. <tRoomProps>
  [ 24] pushsymb 141 ............................ <#id>
  [ 26] pusharglist 2 ........................... <tRoomProps, #id>
  [ 28] objcall 84 .............................. <tRoomProps[#id]>
  [ 30] joinstr ................................. <"f_" & tRoomProps[#id]>
  [ 31] pusharglistnoret 3 ...................... <tRoomProps, #id, "f_" & tRoomProps[#id]>
  [ 33] objcall 142 ............................. tRoomProps[#id] = "f_" & tRoomProps[#id]
  [ 35] getparam 1 .............................. <tRoomProps>
  [ 37] pushsymb 102 ............................ <#nodeType>
  [ 39] pushint8 2 .............................. <2>
  [ 41] pusharglistnoret 3 ...................... <tRoomProps, #nodeType, 2>
  [ 43] objcall 142 ............................. tRoomProps[#nodeType] = 2
  [ 45] getprop 58 .............................. <pNodeCache>
  [ 47] pushsymb 98 ............................. <#own>
  [ 49] pusharglist 2 ........................... <pNodeCache, #own>
  [ 51] objcall 84 .............................. <pNodeCache[#own]>
  [ 53] pusharglist 0 ........................... <>
  [ 55] extcall 79 .............................. <VOID>
  [ 57] eq ...................................... <pNodeCache[#own] = VOID>
  [ 58] jmpifz [ 77] ............................ if pNodeCache[#own] = VOID then
  [ 61] getprop 58 .............................. <pNodeCache>
  [ 63] pushsymb 98 ............................. <#own>
  [ 65] pushsymb 85 ............................. <#children>
  [ 67] pusharglist 0 ........................... <[:]>
  [ 69] pushproplist ............................ <[:]>
  [ 70] pusharglist 2 ........................... <[#children: [:]]>
  [ 72] pushproplist ............................ <[#children: [:]]>
  [ 73] pusharglistnoret 3 ...................... <pNodeCache, #own, [#children: [:]]>
  [ 75] objcall 142 ............................. pNodeCache[#own] = [#children: [:]]
  [ 77] getprop 58 .............................. <pNodeCache>
  [ 79] pushsymb 98 ............................. <#own>
  [ 81] pusharglist 2 ........................... <pNodeCache, #own>
  [ 83] objcall 84 .............................. <pNodeCache[#own]>
  [ 85] pushsymb 85 ............................. <#children>
  [ 87] pusharglist 2 ........................... <pNodeCache[#own], #children>
  [ 89] objcall 84 .............................. <pNodeCache[#own][#children]>
  [ 91] getparam 1 .............................. <tRoomProps>
  [ 93] pushsymb 141 ............................ <#id>
  [ 95] pusharglist 2 ........................... <tRoomProps, #id>
  [ 97] objcall 84 .............................. <tRoomProps[#id]>
  [ 99] getparam 1 .............................. <tRoomProps>
  [101] pusharglistnoret 3 ...................... <pNodeCache[#own][#children], tRoomProps[#id], tRoomProps>
  [103] objcall 93 .............................. pNodeCache[#own][#children].setaProp(tRoomProps[#id], tRoomProps)
  [105] getparam 0 .............................. <me>
  [107] pusharglist 1 ........................... <me>
  [109] objcall 101 ............................. <me.getComponent()>
  [111] getparam 1 .............................. <tRoomProps>
  [113] pushsymb 141 ............................ <#id>
  [115] pusharglist 2 ........................... <tRoomProps, #id>
  [117] objcall 84 .............................. <tRoomProps[#id]>
  [119] pusharglistnoret 2 ...................... <me.getComponent(), tRoomProps[#id]>
  [121] objcall 13 .............................. me.getComponent().executeRoomEntry(tRoomProps[#id])
  [123] pushint8 1 .............................. <1>
  [125] pusharglistnoret 1 ...................... <1>
  [127] extcall 77 .............................. return 1
  [129] ret
end

on getFlatPassword me, tFlatID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 20 ............................. <"f_">
  [  4] getparam 1 .............................. <tFlatID>
  [  6] joinstr ................................. <"f_" & tFlatID>
  [  7] pusharglist 2 ........................... <me, "f_" & tFlatID>
  [  9] objcall 7 ............................... <me.getNodeInfo("f_" & tFlatID)>
  [ 11] setlocal 0 .............................. tFlatInfo = me.getNodeInfo("f_" & tFlatID)
  [ 13] getlocal 0 .............................. <tFlatInfo>
  [ 15] pushzero ................................ <0>
  [ 16] eq ...................................... <tFlatInfo = 0>
  [ 17] jmpifz [ 34] ............................ if tFlatInfo = 0 then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 21 ............................. <"Flat info is VOID">
  [ 24] pushsymb 20 ............................. <#getFlatPassword>
  [ 26] pusharglist 3 ........................... <me, "Flat info is VOID", #getFlatPassword>
  [ 28] extcall 116 ............................. <error(me, "Flat info is VOID", #getFlatPassword)>
  [ 30] pusharglistnoret 1 ...................... <error(me, "Flat info is VOID", #getFlatPassword)>
  [ 32] extcall 77 .............................. return error(me, "Flat info is VOID", #getFlatPassword)
  [ 34] getlocal 0 .............................. <tFlatInfo>
  [ 36] pushsymb 144 ............................ <#door>
  [ 38] pusharglist 2 ........................... <tFlatInfo, #door>
  [ 40] objcall 84 .............................. <tFlatInfo[#door]>
  [ 42] pushcons 22 ............................. <"password">
  [ 44] nteq .................................... <tFlatInfo[#door] <> "password">
  [ 45] jmpifz [ 53] ............................ if tFlatInfo[#door] <> "password" then
  [ 48] pushzero ................................ <0>
  [ 49] pusharglistnoret 1 ...................... <0>
  [ 51] extcall 77 .............................. return 0
  [ 53] getlocal 0 .............................. <tFlatInfo>
  [ 55] pushsymb 145 ............................ <#password>
  [ 57] pusharglist 2 ........................... <tFlatInfo, #password>
  [ 59] objcall 84 .............................. <tFlatInfo[#password]>
  [ 61] pusharglist 1 ........................... <tFlatInfo[#password]>
  [ 63] extcall 113 ............................. <voidp(tFlatInfo[#password])>
  [ 65] jmpifz [ 76] ............................ if voidp(tFlatInfo[#password]) then / else
  [ 68] pushzero ................................ <0>
  [ 69] pusharglistnoret 1 ...................... <0>
  [ 71] extcall 77 .............................. return 0
  [ 73] jmp [ 88]
  [ 76] getlocal 0 .............................. <tFlatInfo>
  [ 78] pushsymb 145 ............................ <#password>
  [ 80] pusharglist 2 ........................... <tFlatInfo, #password>
  [ 82] objcall 84 .............................. <tFlatInfo[#password]>
  [ 84] pusharglistnoret 1 ...................... <tFlatInfo[#password]>
  [ 86] extcall 77 .............................. return tFlatInfo[#password]
  [ 88] ret
end

on flatAccessResult me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] peek 0 .................................. case tMsg of
  [  4] pushcons 23 ............................. <"flat_letin">
  [  6] nteq
  [  7] jmpifz [ 18] ............................ (case) "flat_letin", ...
  [ 10] peek 0
  [ 12] pushcons 24 ............................. <"flatpassword_ok">
  [ 14] eq
  [ 15] jmpifz [ 21] ............................ (case) ..., "flatpassword_ok":
  [ 18] jmp [ 55]
  [ 21] peek 0
  [ 23] pushcons 25 ............................. <"incorrect flat password">
  [ 25] nteq
  [ 26] jmpifz [ 37] ............................ (case) "incorrect flat password", ...
  [ 29] peek 0
  [ 31] pushcons 26 ............................. <"password required">
  [ 33] eq
  [ 34] jmpifz [ 55] ............................ (case) ..., "password required":
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglist 1 ........................... <me>
  [ 41] objcall 81 .............................. <me.getInterface()>
  [ 43] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 45] objcall 148 ............................. me.getInterface().flatPasswordIncorrect()
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 14 ............................. <"enterEntry">
  [ 51] pusharglistnoret 2 ...................... <me, "enterEntry">
  [ 53] objcall 49 .............................. me.updateState("enterEntry")
  [ 55] pop 1 ................................... end case
  [ 57] ret
end

on delayedAlert me, tAlert, tDelay
  [  0] getparam 2 .............................. <tDelay>
  [  2] pushzero ................................ <0>
  [  3] gt ...................................... <tDelay > 0>
  [  4] jmpifz [ 30] ............................ if tDelay > 0 then / else
  [  7] pushsymb 151 ............................ <#temp>
  [  9] getparam 2 .............................. <tDelay>
  [ 11] pushsymb 22 ............................. <#delayedAlert>
  [ 13] getparam 0 .............................. <me>
  [ 15] pusharglist 1 ........................... <me>
  [ 17] objcall 71 .............................. <me.getID()>
  [ 19] getparam 1 .............................. <tAlert>
  [ 21] pushint8 1 .............................. <1>
  [ 23] pusharglistnoret 6 ...................... <#temp, tDelay, #delayedAlert, me.getID(), tAlert, 1>
  [ 25] extcall 150 ............................. createTimeout(#temp, tDelay, #delayedAlert, me.getID(), tAlert, 1)
  [ 27] jmp [ 43]
  [ 30] pushsymb 152 ............................ <#alert>
  [ 32] pushsymb 153 ............................ <#msg>
  [ 34] getparam 1 .............................. <tAlert>
  [ 36] pusharglist 2 ........................... <[#msg: tAlert]>
  [ 38] pushproplist ............................ <[#msg: tAlert]>
  [ 39] pusharglistnoret 2 ...................... <#alert, [#msg: tAlert]>
  [ 41] extcall 117 ............................. executeMessage(#alert, [#msg: tAlert])
  [ 43] ret
end

on checkCacheForNode me, tNodeId
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 79 .............................. <VOID>
  [  6] eq ...................................... <tNodeId = VOID>
  [  7] jmpifz [ 15] ............................ if tNodeId = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 77 .............................. return 0
  [ 15] getprop 59 .............................. <pNodeCacheExpList>
  [ 17] getparam 1 .............................. <tNodeId>
  [ 19] pusharglist 2 ........................... <pNodeCacheExpList, tNodeId>
  [ 21] objcall 84 .............................. <pNodeCacheExpList[tNodeId]>
  [ 23] pusharglist 0 ........................... <>
  [ 25] extcall 79 .............................. <VOID>
  [ 27] eq ...................................... <pNodeCacheExpList[tNodeId] = VOID>
  [ 28] jmpifz [ 36] ............................ if pNodeCacheExpList[tNodeId] = VOID then
  [ 31] pushzero ................................ <0>
  [ 32] pusharglistnoret 1 ...................... <0>
  [ 34] extcall 77 .............................. return 0
  [ 36] getparam 1 .............................. <tNodeId>
  [ 38] pushsymb 99 ............................. <#src>
  [ 40] eq ...................................... <tNodeId = #src>
  [ 41] jmpifz [ 50] ............................ if tNodeId = #src then
  [ 44] pushint8 1 .............................. <1>
  [ 46] pusharglistnoret 1 ...................... <1>
  [ 48] extcall 77 .............................. return 1
  [ 50] getmovieprop 156 ........................ <the milliSeconds>
  [ 52] getprop 59 .............................. <pNodeCacheExpList>
  [ 54] getparam 1 .............................. <tNodeId>
  [ 56] pusharglist 2 ........................... <pNodeCacheExpList, tNodeId>
  [ 58] objcall 84 .............................. <pNodeCacheExpList[tNodeId]>
  [ 60] sub ..................................... <the milliSeconds - pNodeCacheExpList[tNodeId]>
  [ 61] getprop 62 .............................. <pUpdateInterval>
  [ 63] lt ...................................... <(the milliSeconds - pNodeCacheExpList[tNodeId]) < pUpdateInterval>
  [ 64] jmpifz [ 73] ............................ if (the milliSeconds - pNodeCacheExpList[tNodeId]) < pUpdateInterval then
  [ 67] pushint8 1 .............................. <1>
  [ 69] pusharglistnoret 1 ...................... <1>
  [ 71] extcall 77 .............................. return 1
  [ 73] pushzero ................................ <0>
  [ 74] pusharglistnoret 1 ...................... <0>
  [ 76] extcall 77 .............................. return 0
  [ 78] ret
end

on feedNewRoomList me, tid
  [  0] getparam 1 .............................. <tid>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 79 .............................. <VOID>
  [  6] eq ...................................... <tid = VOID>
  [  7] jmpifz [ 15] ............................ if tid = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 77 .............................. return 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 1 .............................. <tid>
  [ 19] pusharglist 2 ........................... <me, tid>
  [ 21] objcall 7 ............................... <me.getNodeInfo(tid)>
  [ 23] setlocal 0 .............................. tNodeInfo = me.getNodeInfo(tid)
  [ 25] getlocal 0 .............................. <tNodeInfo>
  [ 27] pusharglist 1 ........................... <tNodeInfo>
  [ 29] extcall 92 .............................. <listp(tNodeInfo)>
  [ 31] not ..................................... <not listp(tNodeInfo)>
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 1 .............................. <tid>
  [ 36] pusharglist 2 ........................... <me, tid>
  [ 38] objcall 23 .............................. <me.checkCacheForNode(tid)>
  [ 40] not ..................................... <not me.checkCacheForNode(tid)>
  [ 41] or ...................................... <not listp(tNodeInfo) or not me.checkCacheForNode(tid)>
  [ 42] jmpifz [ 55] ............................ if not listp(tNodeInfo) or not me.checkCacheForNode(tid) then
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 17 .............................. <me.callNodeUpdate()>
  [ 51] pusharglistnoret 1 ...................... <me.callNodeUpdate()>
  [ 53] extcall 77 .............................. return me.callNodeUpdate()
  [ 55] getparam 0 .............................. <me>
  [ 57] pusharglist 1 ........................... <me>
  [ 59] objcall 81 .............................. <me.getInterface()>
  [ 61] getlocal 0 .............................. <tNodeInfo>
  [ 63] pushsymb 141 ............................ <#id>
  [ 65] pusharglist 2 ........................... <tNodeInfo, #id>
  [ 67] objcall 84 .............................. <tNodeInfo[#id]>
  [ 69] getlocal 0 .............................. <tNodeInfo>
  [ 71] pushsymb 85 ............................. <#children>
  [ 73] pusharglist 2 ........................... <tNodeInfo, #children>
  [ 75] objcall 84 .............................. <tNodeInfo[#children]>
  [ 77] pusharglistnoret 3 ...................... <me.getInterface(), tNodeInfo[#id], tNodeInfo[#children]>
  [ 79] objcall 157 ............................. me.getInterface().updateRoomList(tNodeInfo[#id], tNodeInfo[#children])
  [ 81] pushint8 1 .............................. <1>
  [ 83] pusharglistnoret 1 ...................... <1>
  [ 85] extcall 77 .............................. return 1
  [ 87] ret
end

on purgeNodeCacheExpList me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 59 .............................. <pNodeCacheExpList>
  [  8] getobjprop 86 ........................... <pNodeCacheExpList.count>
  [ 10] lteq
  [ 11] jmpifz [ 66] ............................ repeat with i = 1 to pNodeCacheExpList.count
  [ 14] getmovieprop 156 ........................ <the milliSeconds>
  [ 16] getprop 59 .............................. <pNodeCacheExpList>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <pNodeCacheExpList, i>
  [ 22] objcall 84 .............................. <pNodeCacheExpList[i]>
  [ 24] sub ..................................... <the milliSeconds - pNodeCacheExpList[i]>
  [ 25] getprop 62 .............................. <pUpdateInterval>
  [ 27] gt ...................................... <(the milliSeconds - pNodeCacheExpList[i]) > pUpdateInterval>
  [ 28] jmpifz [ 57] ............................ if (the milliSeconds - pNodeCacheExpList[i]) > pUpdateInterval then
  [ 31] getprop 59 .............................. <pNodeCacheExpList>
  [ 33] getlocal 0 .............................. <i>
  [ 35] pusharglist 2 ........................... <pNodeCacheExpList, i>
  [ 37] objcall 158 ............................. <pNodeCacheExpList.getPropAt(i)>
  [ 39] setlocal 1 .............................. tid = pNodeCacheExpList.getPropAt(i)
  [ 41] getprop 59 .............................. <pNodeCacheExpList>
  [ 43] getlocal 0 .............................. <i>
  [ 45] pusharglistnoret 2 ...................... <pNodeCacheExpList, i>
  [ 47] objcall 159 ............................. pNodeCacheExpList.deleteAt(i)
  [ 49] getprop 58 .............................. <pNodeCache>
  [ 51] getlocal 1 .............................. <tid>
  [ 53] pusharglistnoret 2 ...................... <pNodeCache, tid>
  [ 55] objcall 160 ............................. pNodeCache.deleteProp(tid)
  [ 57] pushint8 1
  [ 59] getlocal 0
  [ 61] add
  [ 62] setlocal 0
  [ 64] endrepeat [  4]
  [ 66] ret
end

on saveFlatResults me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pusharglist 1 ........................... <tMsg>
  [  4] extcall 92 .............................. <listp(tMsg)>
  [  6] jmpifz [ 39] ............................ if listp(tMsg) then
  [  9] getparam 1 .............................. <tMsg>
  [ 11] pushsymb 141 ............................ <#id>
  [ 13] pusharglist 2 ........................... <tMsg, #id>
  [ 15] objcall 84 .............................. <tMsg[#id]>
  [ 17] setlocal 0 .............................. tid = tMsg[#id]
  [ 19] getprop 58 .............................. <pNodeCache>
  [ 21] getlocal 0 .............................. <tid>
  [ 23] getparam 1 .............................. <tMsg>
  [ 25] pusharglistnoret 3 ...................... <pNodeCache, tid, tMsg>
  [ 27] objcall 142 ............................. pNodeCache[tid] = tMsg
  [ 29] getprop 59 .............................. <pNodeCacheExpList>
  [ 31] getlocal 0 .............................. <tid>
  [ 33] getmovieprop 156 ........................ <the milliSeconds>
  [ 35] pusharglistnoret 3 ...................... <pNodeCacheExpList, tid, the milliSeconds>
  [ 37] objcall 142 ............................. pNodeCacheExpList[tid] = the milliSeconds
  [ 39] getparam 0 .............................. <me>
  [ 41] getparam 1 .............................. <tMsg>
  [ 43] pushsymb 141 ............................ <#id>
  [ 45] pusharglist 2 ........................... <tMsg, #id>
  [ 47] objcall 84 .............................. <tMsg[#id]>
  [ 49] pusharglist 2 ........................... <me, tMsg[#id]>
  [ 51] objcall 24 .............................. <me.feedNewRoomList(tMsg[#id])>
  [ 53] pusharglistnoret 1 ...................... <me.feedNewRoomList(tMsg[#id])>
  [ 55] extcall 77 .............................. return me.feedNewRoomList(tMsg[#id])
  [ 57] ret
end

on sendNavigate me, tNodeId, tDepth
  [  0] getprop 63 .............................. <pConnectionId>
  [  2] pusharglist 1 ........................... <pConnectionId>
  [  4] extcall 162 ............................. <connectionExists(pConnectionId)>
  [  6] not ..................................... <not connectionExists(pConnectionId)>
  [  7] jmpifz [ 27] ............................ if not connectionExists(pConnectionId) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 27 ............................. <"Connection not found:">
  [ 14] getprop 63 .............................. <pConnectionId>
  [ 16] joinpadstr .............................. <"Connection not found:" && pConnectionId>
  [ 17] pushsymb 27 ............................. <#sendNavigate>
  [ 19] pusharglist 3 ........................... <me, "Connection not found:" && pConnectionId, #sendNavigate>
  [ 21] extcall 116 ............................. <error(me, "Connection not found:" && pConnectionId, #sendNavigate)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Connection not found:" && pConnectionId, #sendNavigate)>
  [ 25] extcall 77 .............................. return error(me, "Connection not found:" && pConnectionId, #sendNavigate)
  [ 27] getparam 1 .............................. <tNodeId>
  [ 29] pusharglist 0 ........................... <>
  [ 31] extcall 79 .............................. <VOID>
  [ 33] eq ...................................... <tNodeId = VOID>
  [ 34] jmpifz [ 51] ............................ if tNodeId = VOID then
  [ 37] getparam 0 .............................. <me>
  [ 39] pushcons 28 ............................. <"Node id is VOID">
  [ 41] pushsymb 27 ............................. <#sendNavigate>
  [ 43] pusharglist 3 ........................... <me, "Node id is VOID", #sendNavigate>
  [ 45] extcall 116 ............................. <error(me, "Node id is VOID", #sendNavigate)>
  [ 47] pusharglistnoret 1 ...................... <error(me, "Node id is VOID", #sendNavigate)>
  [ 49] extcall 77 .............................. return error(me, "Node id is VOID", #sendNavigate)
  [ 51] getparam 2 .............................. <tDepth>
  [ 53] pusharglist 0 ........................... <>
  [ 55] extcall 79 .............................. <VOID>
  [ 57] eq ...................................... <tDepth = VOID>
  [ 58] jmpifz [ 65] ............................ if tDepth = VOID then
  [ 61] pushint8 1 .............................. <1>
  [ 63] setparam 2 .............................. tDepth = 1
  [ 65] getparam 0 .............................. <me>
  [ 67] pusharglist 1 ........................... <me>
  [ 69] objcall 48 .............................. <me.getCurrentNodeMask()>
  [ 71] setlocal 0 .............................. tNodeMask = me.getCurrentNodeMask()
  [ 73] getparam 0 .............................. <me>
  [ 75] pushcons 29 ............................. <"Sending navigate, tNodeMask">
  [ 77] getlocal 0 .............................. <tNodeMask>
  [ 79] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask>
  [ 80] pushcons 30 ............................. <", tNodeId:">
  [ 82] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:">
  [ 83] getparam 1 .............................. <tNodeId>
  [ 85] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId>
  [ 86] pushcons 31 ............................. <", tDepth">
  [ 88] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId && ", tDepth">
  [ 89] getparam 2 .............................. <tDepth>
  [ 91] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId && ", tDepth" && tDepth>
  [ 92] pushsymb 27 ............................. <#sendNavigate>
  [ 94] pusharglistnoret 3 ...................... <me, "Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId && ", tDepth" && tDepth, #sendNavigate>
  [ 96] extcall 116 ............................. error(me, "Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId && ", tDepth" && tDepth, #sendNavigate)
  [ 98] getprop 63 .............................. <pConnectionId>
  [100] pusharglist 1 ........................... <pConnectionId>
  [102] extcall 123 ............................. <getConnection(pConnectionId)>
  [104] pushcons 32 ............................. <"NAVIGATE">
  [106] pushsymb 163 ............................ <#integer>
  [108] getlocal 0 .............................. <tNodeMask>
  [110] pushsymb 163 ............................ <#integer>
  [112] getparam 1 .............................. <tNodeId>
  [114] pusharglist 1 ........................... <tNodeId>
  [116] extcall 163 ............................. <integer(tNodeId)>
  [118] pushsymb 163 ............................ <#integer>
  [120] getparam 2 .............................. <tDepth>
  [122] pusharglist 6 ........................... <[#integer: tNodeMask, #integer: integer(tNodeId), #integer: tDepth]>
  [124] pushproplist ............................ <[#integer: tNodeMask, #integer: integer(tNodeId), #integer: tDepth]>
  [125] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "NAVIGATE", [#integer: tNodeMask, #integer: integer(tNodeId), #integer: tDepth]>
  [127] objcall 125 ............................. getConnection(pConnectionId).send("NAVIGATE", [#integer: tNodeMask, #integer: integer(tNodeId), #integer: tDepth])
  [129] getparam 0 .............................. <me>
  [131] pusharglistnoret 1 ...................... <me>
  [133] objcall 25 .............................. me.purgeNodeCacheExpList()
  [135] pushint8 1 .............................. <1>
  [137] pusharglistnoret 1 ...................... <1>
  [139] extcall 77 .............................. return 1
  [141] ret
end

on updateCategoryIndex me, tCategoryIndex
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getparam 1 .............................. <tCategoryIndex>
  [  8] getobjprop 86 ........................... <tCategoryIndex.count>
  [ 10] lteq
  [ 11] jmpifz [ 45] ............................ repeat with i = 1 to tCategoryIndex.count
  [ 14] getprop 57 .............................. <pCategoryIndex>
  [ 16] getparam 1 .............................. <tCategoryIndex>
  [ 18] getlocal 0 .............................. <i>
  [ 20] pusharglist 2 ........................... <tCategoryIndex, i>
  [ 22] objcall 158 ............................. <tCategoryIndex.getPropAt(i)>
  [ 24] getparam 1 .............................. <tCategoryIndex>
  [ 26] getlocal 0 .............................. <i>
  [ 28] pusharglist 2 ........................... <tCategoryIndex, i>
  [ 30] objcall 84 .............................. <tCategoryIndex[i]>
  [ 32] pusharglistnoret 3 ...................... <pCategoryIndex, tCategoryIndex.getPropAt(i), tCategoryIndex[i]>
  [ 34] objcall 93 .............................. pCategoryIndex.setaProp(tCategoryIndex.getPropAt(i), tCategoryIndex[i])
  [ 36] pushint8 1
  [ 38] getlocal 0
  [ 40] add
  [ 41] setlocal 0
  [ 43] endrepeat [  4]
  [ 45] pushint8 1 .............................. <1>
  [ 47] pusharglistnoret 1 ...................... <1>
  [ 49] extcall 77 .............................. return 1
  [ 51] ret
end

on saveNodeInfo me, tNodeInfo
  [  0] getparam 1 .............................. <tNodeInfo>
  [  2] pushsymb 141 ............................ <#id>
  [  4] pusharglist 2 ........................... <tNodeInfo, #id>
  [  6] objcall 84 .............................. <tNodeInfo[#id]>
  [  8] pushcons 9 .............................. <"/">
  [ 10] joinstr ................................. <tNodeInfo[#id] & "/">
  [ 11] getparam 1 .............................. <tNodeInfo>
  [ 13] pushsymb 167 ............................ <#nodeMask>
  [ 15] pusharglist 2 ........................... <tNodeInfo, #nodeMask>
  [ 17] objcall 84 .............................. <tNodeInfo[#nodeMask]>
  [ 19] joinstr ................................. <tNodeInfo[#id] & "/" & tNodeInfo[#nodeMask]>
  [ 20] setlocal 0 .............................. tNodeId = tNodeInfo[#id] & "/" & tNodeInfo[#nodeMask]
  [ 22] getparam 1 .............................. <tNodeInfo>
  [ 24] pusharglist 1 ........................... <tNodeInfo>
  [ 26] extcall 92 .............................. <listp(tNodeInfo)>
  [ 28] jmpifz [ 51] ............................ if listp(tNodeInfo) then
  [ 31] getprop 58 .............................. <pNodeCache>
  [ 33] getlocal 0 .............................. <tNodeId>
  [ 35] getparam 1 .............................. <tNodeInfo>
  [ 37] pusharglistnoret 3 ...................... <pNodeCache, tNodeId, tNodeInfo>
  [ 39] objcall 142 ............................. pNodeCache[tNodeId] = tNodeInfo
  [ 41] getprop 59 .............................. <pNodeCacheExpList>
  [ 43] getlocal 0 .............................. <tNodeId>
  [ 45] getmovieprop 156 ........................ <the milliSeconds>
  [ 47] pusharglistnoret 3 ...................... <pNodeCacheExpList, tNodeId, the milliSeconds>
  [ 49] objcall 142 ............................. pNodeCacheExpList[tNodeId] = the milliSeconds
  [ 51] getparam 0 .............................. <me>
  [ 53] getlocal 0 .............................. <tNodeId>
  [ 55] pusharglist 2 ........................... <me, tNodeId>
  [ 57] objcall 24 .............................. <me.feedNewRoomList(tNodeId)>
  [ 59] pusharglistnoret 1 ...................... <me.feedNewRoomList(tNodeId)>
  [ 61] extcall 77 .............................. return me.feedNewRoomList(tNodeId)
  [ 63] ret
end

on updateSingleFlatInfo me, tdata, tMode
  [  0] getparam 1 .............................. <tdata>
  [  2] pusharglist 1 ........................... <tdata>
  [  4] extcall 92 .............................. <listp(tdata)>
  [  6] jmpifz [166] ............................ if listp(tdata) then / else
  [  9] pushcons 20 ............................. <"f_">
  [ 11] getparam 1 .............................. <tdata>
  [ 13] pushsymb 140 ............................ <#flatId>
  [ 15] pusharglist 2 ........................... <tdata, #flatId>
  [ 17] objcall 84 .............................. <tdata[#flatId]>
  [ 19] joinstr ................................. <"f_" & tdata[#flatId]>
  [ 20] setlocal 0 .............................. tFlatID = "f_" & tdata[#flatId]
  [ 22] getparam 1 .............................. <tdata>
  [ 24] pushsymb 141 ............................ <#id>
  [ 26] getlocal 0 .............................. <tFlatID>
  [ 28] pusharglistnoret 3 ...................... <tdata, #id, tFlatID>
  [ 30] objcall 168 ............................. tdata.addProp(#id, tFlatID)
  [ 32] getprop 58 .............................. <pNodeCache>
  [ 34] peek 0
  [ 36] pusharglist 1
  [ 38] extcall 86
  [ 40] pushint8 1
  [ 42] peek 0
  [ 44] peek 2
  [ 46] lteq
  [ 47] jmpifz [146] ............................ repeat with myList in pNodeCache
  [ 50] peek 2
  [ 52] peek 1
  [ 54] pusharglist 2
  [ 56] extcall 84
  [ 58] setlocal 1
  [ 60] getlocal 1 .............................. <myList>
  [ 62] pushsymb 85 ............................. <#children>
  [ 64] pusharglist 2 ........................... <myList, #children>
  [ 66] objcall 84 .............................. <myList[#children]>
  [ 68] getlocal 0 .............................. <tFlatID>
  [ 70] pusharglist 2 ........................... <myList[#children], tFlatID>
  [ 72] objcall 84 .............................. <myList[#children][tFlatID]>
  [ 74] pusharglist 0 ........................... <>
  [ 76] extcall 79 .............................. <VOID>
  [ 78] nteq .................................... <myList[#children][tFlatID] <> VOID>
  [ 79] jmpifz [141] ............................ if myList[#children][tFlatID] <> VOID then
  [ 82] pushint8 1 .............................. <1>
  [ 84] setlocal 2
  [ 86] getlocal 2
  [ 88] getparam 1 .............................. <tdata>
  [ 90] pusharglist 1 ........................... <tdata>
  [ 92] objcall 86 .............................. <tdata.count()>
  [ 94] lteq
  [ 95] jmpifz [141] ............................ repeat with f = 1 to tdata.count()
  [ 98] getlocal 1 .............................. <myList>
  [100] pushsymb 85 ............................. <#children>
  [102] pusharglist 2 ........................... <myList, #children>
  [104] objcall 84 .............................. <myList[#children]>
  [106] getlocal 0 .............................. <tFlatID>
  [108] pusharglist 2 ........................... <myList[#children], tFlatID>
  [110] objcall 84 .............................. <myList[#children][tFlatID]>
  [112] getparam 1 .............................. <tdata>
  [114] getlocal 2 .............................. <f>
  [116] pusharglist 2 ........................... <tdata, f>
  [118] objcall 158 ............................. <tdata.getPropAt(f)>
  [120] getparam 1 .............................. <tdata>
  [122] getlocal 2 .............................. <f>
  [124] pusharglist 2 ........................... <tdata, f>
  [126] objcall 84 .............................. <tdata[f]>
  [128] pusharglistnoret 3 ...................... <myList[#children][tFlatID], tdata.getPropAt(f), tdata[f]>
  [130] objcall 93 .............................. myList[#children][tFlatID].setaProp(tdata.getPropAt(f), tdata[f])
  [132] pushint8 1
  [134] getlocal 2
  [136] add
  [137] setlocal 2
  [139] endrepeat [ 86]
  [141] pushint8 1
  [143] add
  [144] endrepeat [ 42]
  [146] pop 3
  [148] pushcons 12 ............................. <"receivedFlatStruct">
  [150] getlocal 0 .............................. <tFlatID>
  [152] joinstr ................................. <"receivedFlatStruct" & tFlatID>
  [153] pusharglist 1 ........................... <"receivedFlatStruct" & tFlatID>
  [155] extcall 103 ............................. <symbol("receivedFlatStruct" & tFlatID)>
  [157] getparam 1 .............................. <tdata>
  [159] pusharglistnoret 2 ...................... <symbol("receivedFlatStruct" & tFlatID), tdata>
  [161] extcall 117 ............................. executeMessage(symbol("receivedFlatStruct" & tFlatID), tdata)
  [163] jmp [180]
  [166] getparam 0 .............................. <me>
  [168] pushcons 33 ............................. <"Flat info parsing failed!">
  [170] pushsymb 30 ............................. <#updateSingleFlatInfo>
  [172] pusharglist 3 ........................... <me, "Flat info parsing failed!", #updateSingleFlatInfo>
  [174] extcall 116 ............................. <error(me, "Flat info parsing failed!", #updateSingleFlatInfo)>
  [176] pusharglistnoret 1 ...................... <error(me, "Flat info parsing failed!", #updateSingleFlatInfo)>
  [178] extcall 77 .............................. return error(me, "Flat info parsing failed!", #updateSingleFlatInfo)
  [180] ret
end

on sendGetUserFlatCats me
  [  0] getprop 63 .............................. <pConnectionId>
  [  2] pusharglist 1 ........................... <pConnectionId>
  [  4] extcall 162 ............................. <connectionExists(pConnectionId)>
  [  6] jmpifz [ 28] ............................ if connectionExists(pConnectionId) then / else
  [  9] getprop 63 .............................. <pConnectionId>
  [ 11] pusharglist 1 ........................... <pConnectionId>
  [ 13] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 15] pushcons 34 ............................. <"GETUSERFLATCATS">
  [ 17] pusharglist 2 ........................... <getConnection(pConnectionId), "GETUSERFLATCATS">
  [ 19] objcall 125 ............................. <getConnection(pConnectionId).send("GETUSERFLATCATS")>
  [ 21] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("GETUSERFLATCATS")>
  [ 23] extcall 77 .............................. return getConnection(pConnectionId).send("GETUSERFLATCATS")
  [ 25] jmp [ 45]
  [ 28] getparam 0 .............................. <me>
  [ 30] pushcons 27 ............................. <"Connection not found:">
  [ 32] getprop 63 .............................. <pConnectionId>
  [ 34] joinpadstr .............................. <"Connection not found:" && pConnectionId>
  [ 35] pushsymb 31 ............................. <#sendGetUserFlatCats>
  [ 37] pusharglist 3 ........................... <me, "Connection not found:" && pConnectionId, #sendGetUserFlatCats>
  [ 39] extcall 116 ............................. <error(me, "Connection not found:" && pConnectionId, #sendGetUserFlatCats)>
  [ 41] pusharglistnoret 1 ...................... <error(me, "Connection not found:" && pConnectionId, #sendGetUserFlatCats)>
  [ 43] extcall 77 .............................. return error(me, "Connection not found:" && pConnectionId, #sendGetUserFlatCats)
  [ 45] ret
end

on noflatsforuser me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 81 .............................. <me.getInterface()>
  [  6] pushcons 35 ............................. <"nav_private_norooms">
  [  8] pusharglist 1 ........................... <"nav_private_norooms">
  [ 10] extcall 131 ............................. <getText("nav_private_norooms")>
  [ 12] pusharglist 2 ........................... <me.getInterface(), getText("nav_private_norooms")>
  [ 14] objcall 173 ............................. <me.getInterface().showRoomlistError(getText("nav_private_norooms"))>
  [ 16] pusharglistnoret 1 ...................... <me.getInterface().showRoomlistError(getText("nav_private_norooms"))>
  [ 18] extcall 77 .............................. return me.getInterface().showRoomlistError(getText("nav_private_norooms"))
  [ 20] ret
end

on noflats me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 81 .............................. <me.getInterface()>
  [  6] pushcons 36 ............................. <"nav_prvrooms_notfound">
  [  8] pusharglist 1 ........................... <"nav_prvrooms_notfound">
  [ 10] extcall 131 ............................. <getText("nav_prvrooms_notfound")>
  [ 12] pusharglist 2 ........................... <me.getInterface(), getText("nav_prvrooms_notfound")>
  [ 14] objcall 173 ............................. <me.getInterface().showRoomlistError(getText("nav_prvrooms_notfound"))>
  [ 16] pusharglistnoret 1 ...................... <me.getInterface().showRoomlistError(getText("nav_prvrooms_notfound"))>
  [ 18] extcall 77 .............................. return me.getInterface().showRoomlistError(getText("nav_prvrooms_notfound"))
  [ 20] ret
end

on sendGetOwnFlats me
  [  0] getprop 63 .............................. <pConnectionId>
  [  2] pusharglist 1 ........................... <pConnectionId>
  [  4] extcall 162 ............................. <connectionExists(pConnectionId)>
  [  6] jmpifz [ 40] ............................ if connectionExists(pConnectionId) then / else
  [  9] getprop 63 .............................. <pConnectionId>
  [ 11] pusharglist 1 ........................... <pConnectionId>
  [ 13] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 15] pushcons 37 ............................. <"SUSERF">
  [ 17] pushsymb 67 ............................. <#session>
  [ 19] pusharglist 1 ........................... <#session>
  [ 21] extcall 66 .............................. <getObject(#session)>
  [ 23] pushcons 38 ............................. <"user_name">
  [ 25] pusharglist 2 ........................... <getObject(#session), "user_name">
  [ 27] objcall 107 ............................. <getObject(#session).get("user_name")>
  [ 29] pusharglist 3 ........................... <getConnection(pConnectionId), "SUSERF", getObject(#session).get("user_name")>
  [ 31] objcall 125 ............................. <getConnection(pConnectionId).send("SUSERF", getObject(#session).get("user_name"))>
  [ 33] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("SUSERF", getObject(#session).get("user_name"))>
  [ 35] extcall 77 .............................. return getConnection(pConnectionId).send("SUSERF", getObject(#session).get("user_name"))
  [ 37] jmp [ 45]
  [ 40] pushzero ................................ <0>
  [ 41] pusharglistnoret 1 ...................... <0>
  [ 43] extcall 77 .............................. return 0
  [ 45] ret
end

on sendGetFavoriteFlats me
  [  0] getprop 63 .............................. <pConnectionId>
  [  2] pusharglist 1 ........................... <pConnectionId>
  [  4] extcall 162 ............................. <connectionExists(pConnectionId)>
  [  6] jmpifz [ 34] ............................ if connectionExists(pConnectionId) then / else
  [  9] getprop 63 .............................. <pConnectionId>
  [ 11] pusharglist 1 ........................... <pConnectionId>
  [ 13] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 15] pushcons 39 ............................. <"GETFVRF">
  [ 17] pushsymb 174 ............................ <#boolean>
  [ 19] pushzero ................................ <0>
  [ 20] pusharglist 2 ........................... <[#boolean: 0]>
  [ 22] pushproplist ............................ <[#boolean: 0]>
  [ 23] pusharglist 3 ........................... <getConnection(pConnectionId), "GETFVRF", [#boolean: 0]>
  [ 25] objcall 125 ............................. <getConnection(pConnectionId).send("GETFVRF", [#boolean: 0])>
  [ 27] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("GETFVRF", [#boolean: 0])>
  [ 29] extcall 77 .............................. return getConnection(pConnectionId).send("GETFVRF", [#boolean: 0])
  [ 31] jmp [ 39]
  [ 34] pushzero ................................ <0>
  [ 35] pusharglistnoret 1 ...................... <0>
  [ 37] extcall 77 .............................. return 0
  [ 39] ret
end

on sendAddFavoriteFlat me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 102 ............................ <#nodeType>
  [  6] pusharglist 3 ........................... <me, tNodeId, #nodeType>
  [  8] objcall 10 .............................. <me.getNodeProperty(tNodeId, #nodeType)>
  [ 10] pushint8 1 .............................. <1>
  [ 12] eq ...................................... <me.getNodeProperty(tNodeId, #nodeType) = 1>
  [ 13] setlocal 0 .............................. tRoomType = me.getNodeProperty(tNodeId, #nodeType) = 1
  [ 15] getlocal 0 .............................. <tRoomType>
  [ 17] pushzero ................................ <0>
  [ 18] eq ...................................... <tRoomType = 0>
  [ 19] jmpifz [ 37] ............................ if tRoomType = 0 then / else
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 1 .............................. <tNodeId>
  [ 26] pushsymb 140 ............................ <#flatId>
  [ 28] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [ 30] objcall 10 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 32] setlocal 1 .............................. tRoomID = me.getNodeProperty(tNodeId, #flatId)
  [ 34] jmp [ 41]
  [ 37] getparam 1 .............................. <tNodeId>
  [ 39] setlocal 1 .............................. tRoomID = tNodeId
  [ 41] getlocal 1 .............................. <tRoomID>
  [ 43] pusharglist 1 ........................... <tRoomID>
  [ 45] extcall 163 ............................. <integer(tRoomID)>
  [ 47] setlocal 1 .............................. tRoomID = integer(tRoomID)
  [ 49] getprop 63 .............................. <pConnectionId>
  [ 51] pusharglist 1 ........................... <pConnectionId>
  [ 53] extcall 162 ............................. <connectionExists(pConnectionId)>
  [ 55] jmpifz [111] ............................ if connectionExists(pConnectionId) then / else
  [ 58] getlocal 1 .............................. <tRoomID>
  [ 60] pusharglist 1 ........................... <tRoomID>
  [ 62] extcall 113 ............................. <voidp(tRoomID)>
  [ 64] jmpifz [ 81] ............................ if voidp(tRoomID) then
  [ 67] getparam 0 .............................. <me>
  [ 69] pushcons 40 ............................. <"Room ID expected!">
  [ 71] pushsymb 36 ............................. <#sendAddFavoriteFlat>
  [ 73] pusharglist 3 ........................... <me, "Room ID expected!", #sendAddFavoriteFlat>
  [ 75] extcall 116 ............................. <error(me, "Room ID expected!", #sendAddFavoriteFlat)>
  [ 77] pusharglistnoret 1 ...................... <error(me, "Room ID expected!", #sendAddFavoriteFlat)>
  [ 79] extcall 77 .............................. return error(me, "Room ID expected!", #sendAddFavoriteFlat)
  [ 81] getprop 63 .............................. <pConnectionId>
  [ 83] pusharglist 1 ........................... <pConnectionId>
  [ 85] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 87] pushcons 41 ............................. <"ADD_FAVORITE_ROOM">
  [ 89] pushsymb 163 ............................ <#integer>
  [ 91] getlocal 0 .............................. <tRoomType>
  [ 93] pushsymb 163 ............................ <#integer>
  [ 95] getlocal 1 .............................. <tRoomID>
  [ 97] pusharglist 4 ........................... <[#integer: tRoomType, #integer: tRoomID]>
  [ 99] pushproplist ............................ <[#integer: tRoomType, #integer: tRoomID]>
  [100] pusharglist 3 ........................... <getConnection(pConnectionId), "ADD_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID]>
  [102] objcall 125 ............................. <getConnection(pConnectionId).send("ADD_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])>
  [104] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("ADD_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])>
  [106] extcall 77 .............................. return getConnection(pConnectionId).send("ADD_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])
  [108] jmp [116]
  [111] pushzero ................................ <0>
  [112] pusharglistnoret 1 ...................... <0>
  [114] extcall 77 .............................. return 0
  [116] ret
end

on sendRemoveFavoriteFlat me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 102 ............................ <#nodeType>
  [  6] pusharglist 3 ........................... <me, tNodeId, #nodeType>
  [  8] objcall 10 .............................. <me.getNodeProperty(tNodeId, #nodeType)>
  [ 10] pushint8 1 .............................. <1>
  [ 12] eq ...................................... <me.getNodeProperty(tNodeId, #nodeType) = 1>
  [ 13] setlocal 0 .............................. tRoomType = me.getNodeProperty(tNodeId, #nodeType) = 1
  [ 15] getlocal 0 .............................. <tRoomType>
  [ 17] pushzero ................................ <0>
  [ 18] eq ...................................... <tRoomType = 0>
  [ 19] jmpifz [ 37] ............................ if tRoomType = 0 then / else
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 1 .............................. <tNodeId>
  [ 26] pushsymb 140 ............................ <#flatId>
  [ 28] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [ 30] objcall 10 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 32] setlocal 1 .............................. tRoomID = me.getNodeProperty(tNodeId, #flatId)
  [ 34] jmp [ 41]
  [ 37] getparam 1 .............................. <tNodeId>
  [ 39] setlocal 1 .............................. tRoomID = tNodeId
  [ 41] getlocal 1 .............................. <tRoomID>
  [ 43] pusharglist 1 ........................... <tRoomID>
  [ 45] extcall 163 ............................. <integer(tRoomID)>
  [ 47] setlocal 1 .............................. tRoomID = integer(tRoomID)
  [ 49] getprop 63 .............................. <pConnectionId>
  [ 51] pusharglist 1 ........................... <pConnectionId>
  [ 53] extcall 162 ............................. <connectionExists(pConnectionId)>
  [ 55] jmpifz [111] ............................ if connectionExists(pConnectionId) then / else
  [ 58] getlocal 1 .............................. <tRoomID>
  [ 60] pusharglist 1 ........................... <tRoomID>
  [ 62] extcall 113 ............................. <voidp(tRoomID)>
  [ 64] jmpifz [ 81] ............................ if voidp(tRoomID) then
  [ 67] getparam 0 .............................. <me>
  [ 69] pushcons 42 ............................. <"Flat ID expected!">
  [ 71] pushsymb 37 ............................. <#sendRemoveFavoriteFlat>
  [ 73] pusharglist 3 ........................... <me, "Flat ID expected!", #sendRemoveFavoriteFlat>
  [ 75] extcall 116 ............................. <error(me, "Flat ID expected!", #sendRemoveFavoriteFlat)>
  [ 77] pusharglistnoret 1 ...................... <error(me, "Flat ID expected!", #sendRemoveFavoriteFlat)>
  [ 79] extcall 77 .............................. return error(me, "Flat ID expected!", #sendRemoveFavoriteFlat)
  [ 81] getprop 63 .............................. <pConnectionId>
  [ 83] pusharglist 1 ........................... <pConnectionId>
  [ 85] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 87] pushcons 43 ............................. <"DEL_FAVORITE_ROOM">
  [ 89] pushsymb 163 ............................ <#integer>
  [ 91] getlocal 0 .............................. <tRoomType>
  [ 93] pushsymb 163 ............................ <#integer>
  [ 95] getlocal 1 .............................. <tRoomID>
  [ 97] pusharglist 4 ........................... <[#integer: tRoomType, #integer: tRoomID]>
  [ 99] pushproplist ............................ <[#integer: tRoomType, #integer: tRoomID]>
  [100] pusharglist 3 ........................... <getConnection(pConnectionId), "DEL_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID]>
  [102] objcall 125 ............................. <getConnection(pConnectionId).send("DEL_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])>
  [104] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("DEL_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])>
  [106] extcall 77 .............................. return getConnection(pConnectionId).send("DEL_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])
  [108] jmp [116]
  [111] pushzero ................................ <0>
  [112] pusharglistnoret 1 ...................... <0>
  [114] extcall 77 .............................. return 0
  [116] ret
end

on sendGetFlatInfo me, tNodeId
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pushcons 20 ............................. <"f_">
  [  4] containsstr ............................. <tNodeId contains "f_">
  [  5] jmpifz [ 23] ............................ if tNodeId contains "f_" then / else
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tNodeId>
  [ 12] pushsymb 140 ............................ <#flatId>
  [ 14] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [ 16] objcall 10 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 18] setlocal 0 .............................. tFlatID = me.getNodeProperty(tNodeId, #flatId)
  [ 20] jmp [ 27]
  [ 23] getparam 1 .............................. <tNodeId>
  [ 25] setlocal 0 .............................. tFlatID = tNodeId
  [ 27] getprop 63 .............................. <pConnectionId>
  [ 29] pusharglist 1 ........................... <pConnectionId>
  [ 31] extcall 162 ............................. <connectionExists(pConnectionId)>
  [ 33] jmpifz [ 83] ............................ if connectionExists(pConnectionId) then / else
  [ 36] getlocal 0 .............................. <tFlatID>
  [ 38] pusharglist 1 ........................... <tFlatID>
  [ 40] extcall 113 ............................. <voidp(tFlatID)>
  [ 42] jmpifz [ 62] ............................ if voidp(tFlatID) then / else
  [ 45] getparam 0 .............................. <me>
  [ 47] pushcons 42 ............................. <"Flat ID expected!">
  [ 49] pushsymb 38 ............................. <#sendGetFlatInfo>
  [ 51] pusharglist 3 ........................... <me, "Flat ID expected!", #sendGetFlatInfo>
  [ 53] extcall 116 ............................. <error(me, "Flat ID expected!", #sendGetFlatInfo)>
  [ 55] pusharglistnoret 1 ...................... <error(me, "Flat ID expected!", #sendGetFlatInfo)>
  [ 57] extcall 77 .............................. return error(me, "Flat ID expected!", #sendGetFlatInfo)
  [ 59] jmp [ 80]
  [ 62] getprop 63 .............................. <pConnectionId>
  [ 64] pusharglist 1 ........................... <pConnectionId>
  [ 66] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 68] pushcons 44 ............................. <"GETFLATINFO">
  [ 70] getlocal 0 .............................. <tFlatID>
  [ 72] pusharglist 3 ........................... <getConnection(pConnectionId), "GETFLATINFO", tFlatID>
  [ 74] objcall 125 ............................. <getConnection(pConnectionId).send("GETFLATINFO", tFlatID)>
  [ 76] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("GETFLATINFO", tFlatID)>
  [ 78] extcall 77 .............................. return getConnection(pConnectionId).send("GETFLATINFO", tFlatID)
  [ 80] jmp [ 88]
  [ 83] pushzero ................................ <0>
  [ 84] pusharglistnoret 1 ...................... <0>
  [ 86] extcall 77 .............................. return 0
  [ 88] ret
end

on sendSearchFlats me, tQuery
  [  0] getprop 63 .............................. <pConnectionId>
  [  2] pusharglist 1 ........................... <pConnectionId>
  [  4] extcall 162 ............................. <connectionExists(pConnectionId)>
  [  6] jmpifz [ 72] ............................ if connectionExists(pConnectionId) then / else
  [  9] getparam 1 .............................. <tQuery>
  [ 11] pusharglist 1 ........................... <tQuery>
  [ 13] extcall 113 ............................. <voidp(tQuery)>
  [ 15] jmpifz [ 32] ............................ if voidp(tQuery) then
  [ 18] getparam 0 .............................. <me>
  [ 20] pushcons 45 ............................. <"Search query is void!">
  [ 22] pushsymb 39 ............................. <#sendSearchFlats>
  [ 24] pusharglist 3 ........................... <me, "Search query is void!", #sendSearchFlats>
  [ 26] extcall 116 ............................. <error(me, "Search query is void!", #sendSearchFlats)>
  [ 28] pusharglistnoret 1 ...................... <error(me, "Search query is void!", #sendSearchFlats)>
  [ 30] extcall 77 .............................. return error(me, "Search query is void!", #sendSearchFlats)
  [ 32] getparam 1 .............................. <tQuery>
  [ 34] pushint8 1 .............................. <1>
  [ 36] pusharglist 2 ........................... <tQuery, 1>
  [ 38] extcall 176 ............................. <convertSpecialChars(tQuery, 1)>
  [ 40] setparam 1 .............................. tQuery = convertSpecialChars(tQuery, 1)
  [ 42] getprop 63 .............................. <pConnectionId>
  [ 44] pusharglist 1 ........................... <pConnectionId>
  [ 46] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 48] pushcons 46 ............................. <"SRCHF">
  [ 50] pushsymb 51 ............................. <#string>
  [ 52] getparam 1 .............................. <tQuery>
  [ 54] pusharglist 1 ........................... <tQuery>
  [ 56] extcall 51 .............................. <string(tQuery)>
  [ 58] pusharglist 2 ........................... <[#string: string(tQuery)]>
  [ 60] pushproplist ............................ <[#string: string(tQuery)]>
  [ 61] pusharglist 3 ........................... <getConnection(pConnectionId), "SRCHF", [#string: string(tQuery)]>
  [ 63] objcall 125 ............................. <getConnection(pConnectionId).send("SRCHF", [#string: string(tQuery)])>
  [ 65] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("SRCHF", [#string: string(tQuery)])>
  [ 67] extcall 77 .............................. return getConnection(pConnectionId).send("SRCHF", [#string: string(tQuery)])
  [ 69] jmp [ 77]
  [ 72] pushzero ................................ <0>
  [ 73] pusharglistnoret 1 ...................... <0>
  [ 75] extcall 77 .............................. return 0
  [ 77] ret
end

on sendGetSpaceNodeUsers me, tNodeId
  [  0] getprop 63 .............................. <pConnectionId>
  [  2] pusharglist 1 ........................... <pConnectionId>
  [  4] extcall 162 ............................. <connectionExists(pConnectionId)>
  [  6] jmpifz [ 36] ............................ if connectionExists(pConnectionId) then
  [  9] getprop 63 .............................. <pConnectionId>
  [ 11] pusharglist 1 ........................... <pConnectionId>
  [ 13] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 15] pushcons 47 ............................. <"GETSPACENODEUSERS">
  [ 17] pushsymb 163 ............................ <#integer>
  [ 19] getparam 1 .............................. <tNodeId>
  [ 21] pusharglist 1 ........................... <tNodeId>
  [ 23] extcall 163 ............................. <integer(tNodeId)>
  [ 25] pusharglist 2 ........................... <[#integer: integer(tNodeId)]>
  [ 27] pushproplist ............................ <[#integer: integer(tNodeId)]>
  [ 28] pusharglist 3 ........................... <getConnection(pConnectionId), "GETSPACENODEUSERS", [#integer: integer(tNodeId)]>
  [ 30] objcall 125 ............................. <getConnection(pConnectionId).send("GETSPACENODEUSERS", [#integer: integer(tNodeId)])>
  [ 32] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("GETSPACENODEUSERS", [#integer: integer(tNodeId)])>
  [ 34] extcall 77 .............................. return getConnection(pConnectionId).send("GETSPACENODEUSERS", [#integer: integer(tNodeId)])
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 1 ...................... <0>
  [ 39] extcall 77 .............................. return 0
  [ 41] ret
end

on sendDeleteFlat me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 140 ............................ <#flatId>
  [  6] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [  8] objcall 10 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 10] setlocal 0 .............................. tFlatID = me.getNodeProperty(tNodeId, #flatId)
  [ 12] getprop 63 .............................. <pConnectionId>
  [ 14] pusharglist 1 ........................... <pConnectionId>
  [ 16] extcall 162 ............................. <connectionExists(pConnectionId)>
  [ 18] jmpifz [113] ............................ if connectionExists(pConnectionId) then / else
  [ 21] getprop 58 .............................. <pNodeCache>
  [ 23] pushsymb 98 ............................. <#own>
  [ 25] pusharglist 2 ........................... <pNodeCache, #own>
  [ 27] objcall 84 .............................. <pNodeCache[#own]>
  [ 29] pusharglist 1 ........................... <pNodeCache[#own]>
  [ 31] extcall 92 .............................. <listp(pNodeCache[#own])>
  [ 33] jmpifz [ 77] ............................ if listp(pNodeCache[#own]) then
  [ 36] getprop 58 .............................. <pNodeCache>
  [ 38] pushsymb 98 ............................. <#own>
  [ 40] pusharglist 2 ........................... <pNodeCache, #own>
  [ 42] objcall 84 .............................. <pNodeCache[#own]>
  [ 44] pushsymb 85 ............................. <#children>
  [ 46] pusharglist 2 ........................... <pNodeCache[#own], #children>
  [ 48] objcall 84 .............................. <pNodeCache[#own][#children]>
  [ 50] pusharglist 1 ........................... <pNodeCache[#own][#children]>
  [ 52] extcall 92 .............................. <listp(pNodeCache[#own][#children])>
  [ 54] jmpifz [ 77] ............................ if listp(pNodeCache[#own][#children]) then
  [ 57] getprop 58 .............................. <pNodeCache>
  [ 59] pushsymb 98 ............................. <#own>
  [ 61] pusharglist 2 ........................... <pNodeCache, #own>
  [ 63] objcall 84 .............................. <pNodeCache[#own]>
  [ 65] pushsymb 85 ............................. <#children>
  [ 67] pusharglist 2 ........................... <pNodeCache[#own], #children>
  [ 69] objcall 84 .............................. <pNodeCache[#own][#children]>
  [ 71] getparam 1 .............................. <tNodeId>
  [ 73] pusharglistnoret 2 ...................... <pNodeCache[#own][#children], tNodeId>
  [ 75] objcall 160 ............................. pNodeCache[#own][#children].deleteProp(tNodeId)
  [ 77] getlocal 0 .............................. <tFlatID>
  [ 79] pusharglist 0 ........................... <>
  [ 81] extcall 79 .............................. <VOID>
  [ 83] eq ...................................... <tFlatID = VOID>
  [ 84] jmpifz [ 92] ............................ if tFlatID = VOID then
  [ 87] pushzero ................................ <0>
  [ 88] pusharglistnoret 1 ...................... <0>
  [ 90] extcall 77 .............................. return 0
  [ 92] getprop 63 .............................. <pConnectionId>
  [ 94] pusharglist 1 ........................... <pConnectionId>
  [ 96] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 98] pushcons 48 ............................. <"DELETEFLAT">
  [100] getlocal 0 .............................. <tFlatID>
  [102] pusharglist 3 ........................... <getConnection(pConnectionId), "DELETEFLAT", tFlatID>
  [104] objcall 125 ............................. <getConnection(pConnectionId).send("DELETEFLAT", tFlatID)>
  [106] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("DELETEFLAT", tFlatID)>
  [108] extcall 77 .............................. return getConnection(pConnectionId).send("DELETEFLAT", tFlatID)
  [110] jmp [118]
  [113] pushzero ................................ <0>
  [114] pusharglistnoret 1 ...................... <0>
  [116] extcall 77 .............................. return 0
  [118] ret
end

on sendGetFlatCategory me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 140 ............................ <#flatId>
  [  6] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [  8] objcall 10 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 10] setlocal 0 .............................. tFlatID = me.getNodeProperty(tNodeId, #flatId)
  [ 12] getprop 63 .............................. <pConnectionId>
  [ 14] pusharglist 1 ........................... <pConnectionId>
  [ 16] extcall 162 ............................. <connectionExists(pConnectionId)>
  [ 18] jmpifz [ 70] ............................ if connectionExists(pConnectionId) then / else
  [ 21] getlocal 0 .............................. <tFlatID>
  [ 23] pusharglist 1 ........................... <tFlatID>
  [ 25] extcall 113 ............................. <voidp(tFlatID)>
  [ 27] jmpifz [ 44] ............................ if voidp(tFlatID) then
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 42 ............................. <"Flat ID expected!">
  [ 34] pushsymb 42 ............................. <#sendGetFlatCategory>
  [ 36] pusharglist 3 ........................... <me, "Flat ID expected!", #sendGetFlatCategory>
  [ 38] extcall 116 ............................. <error(me, "Flat ID expected!", #sendGetFlatCategory)>
  [ 40] pusharglistnoret 1 ...................... <error(me, "Flat ID expected!", #sendGetFlatCategory)>
  [ 42] extcall 77 .............................. return error(me, "Flat ID expected!", #sendGetFlatCategory)
  [ 44] getprop 63 .............................. <pConnectionId>
  [ 46] pusharglist 1 ........................... <pConnectionId>
  [ 48] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 50] pushcons 49 ............................. <"GETFLATCAT">
  [ 52] pushsymb 163 ............................ <#integer>
  [ 54] getlocal 0 .............................. <tFlatID>
  [ 56] pusharglist 1 ........................... <tFlatID>
  [ 58] extcall 163 ............................. <integer(tFlatID)>
  [ 60] pusharglist 2 ........................... <[#integer: integer(tFlatID)]>
  [ 62] pushproplist ............................ <[#integer: integer(tFlatID)]>
  [ 63] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "GETFLATCAT", [#integer: integer(tFlatID)]>
  [ 65] objcall 125 ............................. getConnection(pConnectionId).send("GETFLATCAT", [#integer: integer(tFlatID)])
  [ 67] jmp [ 75]
  [ 70] pushzero ................................ <0>
  [ 71] pusharglistnoret 1 ...................... <0>
  [ 73] extcall 77 .............................. return 0
  [ 75] ret
end

on sendSetFlatCategory me, tNodeId, tCategoryId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 140 ............................ <#flatId>
  [  6] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [  8] objcall 10 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 10] setlocal 0 .............................. tFlatID = me.getNodeProperty(tNodeId, #flatId)
  [ 12] getprop 63 .............................. <pConnectionId>
  [ 14] pusharglist 1 ........................... <pConnectionId>
  [ 16] extcall 162 ............................. <connectionExists(pConnectionId)>
  [ 18] jmpifz [ 78] ............................ if connectionExists(pConnectionId) then / else
  [ 21] getlocal 0 .............................. <tFlatID>
  [ 23] pusharglist 1 ........................... <tFlatID>
  [ 25] extcall 113 ............................. <voidp(tFlatID)>
  [ 27] jmpifz [ 44] ............................ if voidp(tFlatID) then
  [ 30] getparam 0 .............................. <me>
  [ 32] pushcons 42 ............................. <"Flat ID expected!">
  [ 34] pushsymb 43 ............................. <#sendSetFlatCategory>
  [ 36] pusharglist 3 ........................... <me, "Flat ID expected!", #sendSetFlatCategory>
  [ 38] extcall 116 ............................. <error(me, "Flat ID expected!", #sendSetFlatCategory)>
  [ 40] pusharglistnoret 1 ...................... <error(me, "Flat ID expected!", #sendSetFlatCategory)>
  [ 42] extcall 77 .............................. return error(me, "Flat ID expected!", #sendSetFlatCategory)
  [ 44] getprop 63 .............................. <pConnectionId>
  [ 46] pusharglist 1 ........................... <pConnectionId>
  [ 48] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 50] pushcons 50 ............................. <"SETFLATCAT">
  [ 52] pushsymb 163 ............................ <#integer>
  [ 54] getlocal 0 .............................. <tFlatID>
  [ 56] pusharglist 1 ........................... <tFlatID>
  [ 58] extcall 163 ............................. <integer(tFlatID)>
  [ 60] pushsymb 163 ............................ <#integer>
  [ 62] getparam 2 .............................. <tCategoryId>
  [ 64] pusharglist 1 ........................... <tCategoryId>
  [ 66] extcall 163 ............................. <integer(tCategoryId)>
  [ 68] pusharglist 4 ........................... <[#integer: integer(tFlatID), #integer: integer(tCategoryId)]>
  [ 70] pushproplist ............................ <[#integer: integer(tFlatID), #integer: integer(tCategoryId)]>
  [ 71] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "SETFLATCAT", [#integer: integer(tFlatID), #integer: integer(tCategoryId)]>
  [ 73] objcall 125 ............................. getConnection(pConnectionId).send("SETFLATCAT", [#integer: integer(tFlatID), #integer: integer(tCategoryId)])
  [ 75] jmp [ 83]
  [ 78] pushzero ................................ <0>
  [ 79] pusharglistnoret 1 ...................... <0>
  [ 81] extcall 77 .............................. return 0
  [ 83] ret
end

on sendupdateFlatInfo me, tPropList
  [  0] getparam 1 .............................. <tPropList>
  [  2] getobjprop 114 .......................... <tPropList.ilk>
  [  4] pushsymb 115 ............................ <#propList>
  [  6] nteq .................................... <tPropList.ilk <> #propList>
  [  7] getparam 1 .............................. <tPropList>
  [  9] pushsymb 140 ............................ <#flatId>
  [ 11] pusharglist 2 ........................... <tPropList, #flatId>
  [ 13] objcall 84 .............................. <tPropList[#flatId]>
  [ 15] pusharglist 1 ........................... <tPropList[#flatId]>
  [ 17] extcall 113 ............................. <voidp(tPropList[#flatId])>
  [ 19] or ...................................... <(tPropList.ilk <> #propList) or voidp(tPropList[#flatId])>
  [ 20] jmpifz [ 37] ............................ if (tPropList.ilk <> #propList) or voidp(tPropList[#flatId]) then
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 51 ............................. <"Cant send updateFlatInfo">
  [ 27] pushsymb 44 ............................. <#sendupdateFlatInfo>
  [ 29] pusharglist 3 ........................... <me, "Cant send updateFlatInfo", #sendupdateFlatInfo>
  [ 31] extcall 116 ............................. <error(me, "Cant send updateFlatInfo", #sendupdateFlatInfo)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "Cant send updateFlatInfo", #sendupdateFlatInfo)>
  [ 35] extcall 77 .............................. return error(me, "Cant send updateFlatInfo", #sendupdateFlatInfo)
  [ 37] getprop 63 .............................. <pConnectionId>
  [ 39] pusharglist 1 ........................... <pConnectionId>
  [ 41] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 43] pushcons 52 ............................. <"UPDATEFLAT">
  [ 45] pushsymb 163 ............................ <#integer>
  [ 47] getparam 1 .............................. <tPropList>
  [ 49] pushsymb 140 ............................ <#flatId>
  [ 51] pusharglist 2 ........................... <tPropList, #flatId>
  [ 53] objcall 84 .............................. <tPropList[#flatId]>
  [ 55] pusharglist 1 ........................... <tPropList[#flatId]>
  [ 57] extcall 163 ............................. <integer(tPropList[#flatId])>
  [ 59] pushsymb 51 ............................. <#string>
  [ 61] getparam 1 .............................. <tPropList>
  [ 63] pushsymb 130 ............................ <#name>
  [ 65] pusharglist 2 ........................... <tPropList, #name>
  [ 67] objcall 84 .............................. <tPropList[#name]>
  [ 69] pusharglist 1 ........................... <tPropList[#name]>
  [ 71] extcall 51 .............................. <string(tPropList[#name])>
  [ 73] pushsymb 51 ............................. <#string>
  [ 75] getparam 1 .............................. <tPropList>
  [ 77] pushsymb 178 ............................ <#description>
  [ 79] pusharglist 2 ........................... <tPropList, #description>
  [ 81] objcall 84 .............................. <tPropList[#description]>
  [ 83] pusharglist 1 ........................... <tPropList[#description]>
  [ 85] extcall 51 .............................. <string(tPropList[#description])>
  [ 87] pushsymb 51 ............................. <#string>
  [ 89] getparam 1 .............................. <tPropList>
  [ 91] pushsymb 144 ............................ <#door>
  [ 93] pusharglist 2 ........................... <tPropList, #door>
  [ 95] objcall 84 .............................. <tPropList[#door]>
  [ 97] pusharglist 1 ........................... <tPropList[#door]>
  [ 99] extcall 51 .............................. <string(tPropList[#door])>
  [101] pushsymb 51 ............................. <#string>
  [103] getparam 1 .............................. <tPropList>
  [105] pushsymb 145 ............................ <#password>
  [107] pusharglist 2 ........................... <tPropList, #password>
  [109] objcall 84 .............................. <tPropList[#password]>
  [111] pusharglist 1 ........................... <tPropList[#password]>
  [113] extcall 51 .............................. <string(tPropList[#password])>
  [115] pushsymb 163 ............................ <#integer>
  [117] getparam 1 .............................. <tPropList>
  [119] pushsymb 179 ............................ <#showownername>
  [121] pusharglist 2 ........................... <tPropList, #showownername>
  [123] objcall 84 .............................. <tPropList[#showownername]>
  [125] pusharglist 1 ........................... <tPropList[#showownername]>
  [127] extcall 163 ............................. <integer(tPropList[#showownername])>
  [129] pushsymb 163 ............................ <#integer>
  [131] getparam 1 .............................. <tPropList>
  [133] pushsymb 180 ............................ <#ableothersmovefurniture>
  [135] pusharglist 2 ........................... <tPropList, #ableothersmovefurniture>
  [137] objcall 84 .............................. <tPropList[#ableothersmovefurniture]>
  [139] pusharglist 1 ........................... <tPropList[#ableothersmovefurniture]>
  [141] extcall 163 ............................. <integer(tPropList[#ableothersmovefurniture])>
  [143] pushsymb 163 ............................ <#integer>
  [145] getparam 1 .............................. <tPropList>
  [147] pushsymb 181 ............................ <#maxVisitors>
  [149] pusharglist 2 ........................... <tPropList, #maxVisitors>
  [151] objcall 84 .............................. <tPropList[#maxVisitors]>
  [153] pusharglist 1 ........................... <tPropList[#maxVisitors]>
  [155] extcall 163 ............................. <integer(tPropList[#maxVisitors])>
  [157] pusharglist 16 .......................... <[#integer: integer(tPropList[#flatId]), #string: string(tPropList[#name]), #string: string(tPropList[#description]), #string: string(tPropList[#door]), #string: string(tPropList[#password]), #integer: integer(tPropList[#showownername]), #integer: integer(tPropList[#ableothersmovefurniture]), #integer: integer(tPropList[#maxVisitors])]>
  [159] pushproplist ............................ <[#integer: integer(tPropList[#flatId]), #string: string(tPropList[#name]), #string: string(tPropList[#description]), #string: string(tPropList[#door]), #string: string(tPropList[#password]), #integer: integer(tPropList[#showownername]), #integer: integer(tPropList[#ableothersmovefurniture]), #integer: integer(tPropList[#maxVisitors])]>
  [160] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "UPDATEFLAT", [#integer: integer(tPropList[#flatId]), #string: string(tPropList[#name]), #string: string(tPropList[#description]), #string: string(tPropList[#door]), #string: string(tPropList[#password]), #integer: integer(tPropList[#showownername]), #integer: integer(tPropList[#ableothersmovefurniture]), #integer: integer(tPropList[#maxVisitors])]>
  [162] objcall 125 ............................. getConnection(pConnectionId).send("UPDATEFLAT", [#integer: integer(tPropList[#flatId]), #string: string(tPropList[#name]), #string: string(tPropList[#description]), #string: string(tPropList[#door]), #string: string(tPropList[#password]), #integer: integer(tPropList[#showownername]), #integer: integer(tPropList[#ableothersmovefurniture]), #integer: integer(tPropList[#maxVisitors])])
  [164] pushint8 1 .............................. <1>
  [166] pusharglistnoret 1 ...................... <1>
  [168] extcall 77 .............................. return 1
  [170] ret
end

on sendRemoveAllRights me, tRoomID
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tRoomID>
  [  4] pushsymb 140 ............................ <#flatId>
  [  6] pusharglist 3 ........................... <me, tRoomID, #flatId>
  [  8] objcall 10 .............................. <me.getNodeProperty(tRoomID, #flatId)>
  [ 10] pusharglist 1 ........................... <me.getNodeProperty(tRoomID, #flatId)>
  [ 12] extcall 163 ............................. <integer(me.getNodeProperty(tRoomID, #flatId))>
  [ 14] setlocal 0 .............................. tFlatID = integer(me.getNodeProperty(tRoomID, #flatId))
  [ 16] getlocal 0 .............................. <tFlatID>
  [ 18] pusharglist 1 ........................... <tFlatID>
  [ 20] extcall 113 ............................. <voidp(tFlatID)>
  [ 22] jmpifz [ 30] ............................ if voidp(tFlatID) then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 77 .............................. return 0
  [ 30] getprop 63 .............................. <pConnectionId>
  [ 32] pusharglist 1 ........................... <pConnectionId>
  [ 34] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 36] pushcons 53 ............................. <"REMOVEALLRIGHTS">
  [ 38] pushsymb 163 ............................ <#integer>
  [ 40] getlocal 0 .............................. <tFlatID>
  [ 42] pusharglist 2 ........................... <[#integer: tFlatID]>
  [ 44] pushproplist ............................ <[#integer: tFlatID]>
  [ 45] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "REMOVEALLRIGHTS", [#integer: tFlatID]>
  [ 47] objcall 125 ............................. getConnection(pConnectionId).send("REMOVEALLRIGHTS", [#integer: tFlatID])
  [ 49] pushint8 1 .............................. <1>
  [ 51] pusharglistnoret 1 ...................... <1>
  [ 53] extcall 77 .............................. return 1
  [ 55] ret
end

on sendGetParentChain me, tRoomID
  [  0] getparam 1 .............................. <tRoomID>
  [  2] pusharglist 1 ........................... <tRoomID>
  [  4] extcall 113 ............................. <voidp(tRoomID)>
  [  6] jmpifz [ 14] ............................ if voidp(tRoomID) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 77 .............................. return 0
  [ 14] getprop 63 .............................. <pConnectionId>
  [ 16] pusharglist 1 ........................... <pConnectionId>
  [ 18] extcall 123 ............................. <getConnection(pConnectionId)>
  [ 20] pushcons 54 ............................. <"GETPARENTCHAIN">
  [ 22] pushsymb 163 ............................ <#integer>
  [ 24] getparam 1 .............................. <tRoomID>
  [ 26] pusharglist 1 ........................... <tRoomID>
  [ 28] extcall 163 ............................. <integer(tRoomID)>
  [ 30] pusharglist 2 ........................... <[#integer: integer(tRoomID)]>
  [ 32] pushproplist ............................ <[#integer: integer(tRoomID)]>
  [ 33] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "GETPARENTCHAIN", [#integer: integer(tRoomID)]>
  [ 35] objcall 125 ............................. getConnection(pConnectionId).send("GETPARENTCHAIN", [#integer: integer(tRoomID)])
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglistnoret 1 ...................... <1>
  [ 41] extcall 77 .............................. return 1
  [ 43] ret
end

on getRoomProperties me, tRoomID
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tRoomID>
  [  4] pusharglist 2 ........................... <me, tRoomID>
  [  6] objcall 7 ............................... <me.getNodeInfo(tRoomID)>
  [  8] setlocal 0 .............................. tProps = me.getNodeInfo(tRoomID)
  [ 10] getlocal 0 .............................. <tProps>
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 79 .............................. <VOID>
  [ 16] eq ...................................... <tProps = VOID>
  [ 17] jmpifz [ 37] ............................ if tProps = VOID then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 55 ............................. <"Couldn't find room properties:">
  [ 24] getparam 1 .............................. <tRoomID>
  [ 26] joinpadstr .............................. <"Couldn't find room properties:" && tRoomID>
  [ 27] pushsymb 47 ............................. <#getRoomProperties>
  [ 29] pusharglist 3 ........................... <me, "Couldn't find room properties:" && tRoomID, #getRoomProperties>
  [ 31] extcall 116 ............................. <error(me, "Couldn't find room properties:" && tRoomID, #getRoomProperties)>
  [ 33] pusharglistnoret 1 ...................... <error(me, "Couldn't find room properties:" && tRoomID, #getRoomProperties)>
  [ 35] extcall 77 .............................. return error(me, "Couldn't find room properties:" && tRoomID, #getRoomProperties)
  [ 37] getlocal 0 .............................. <tProps>
  [ 39] pushsymb 102 ............................ <#nodeType>
  [ 41] pusharglist 2 ........................... <tProps, #nodeType>
  [ 43] objcall 84 .............................. <tProps[#nodeType]>
  [ 45] pushint8 1 .............................. <1>
  [ 47] nteq .................................... <tProps[#nodeType] <> 1>
  [ 48] jmpifz [214] ............................ if tProps[#nodeType] <> 1 then / else
  [ 51] pusharglist 0 ........................... <[:]>
  [ 53] pushproplist ............................ <[:]>
  [ 54] setlocal 1 .............................. tStruct = [:]
  [ 56] getlocal 1 .............................. <tStruct>
  [ 58] pushsymb 141 ............................ <#id>
  [ 60] getlocal 0 .............................. <tProps>
  [ 62] pushsymb 140 ............................ <#flatId>
  [ 64] pusharglist 2 ........................... <tProps, #flatId>
  [ 66] objcall 84 .............................. <tProps[#flatId]>
  [ 68] pusharglist 1 ........................... <tProps[#flatId]>
  [ 70] extcall 51 .............................. <string(tProps[#flatId])>
  [ 72] pusharglistnoret 3 ...................... <tStruct, #id, string(tProps[#flatId])>
  [ 74] objcall 142 ............................. tStruct[#id] = string(tProps[#flatId])
  [ 76] getlocal 1 .............................. <tStruct>
  [ 78] pushsymb 130 ............................ <#name>
  [ 80] getlocal 0 .............................. <tProps>
  [ 82] pushsymb 130 ............................ <#name>
  [ 84] pusharglist 2 ........................... <tProps, #name>
  [ 86] objcall 84 .............................. <tProps[#name]>
  [ 88] pusharglistnoret 3 ...................... <tStruct, #name, tProps[#name]>
  [ 90] objcall 142 ............................. tStruct[#name] = tProps[#name]
  [ 92] getlocal 1 .............................. <tStruct>
  [ 94] pushsymb 183 ............................ <#type>
  [ 96] pushsymb 184 ............................ <#private>
  [ 98] pusharglistnoret 3 ...................... <tStruct, #type, #private>
  [100] objcall 142 ............................. tStruct[#type] = #private
  [102] getlocal 1 .............................. <tStruct>
  [104] pushsymb 185 ............................ <#marker>
  [106] getlocal 0 .............................. <tProps>
  [108] pushsymb 185 ............................ <#marker>
  [110] pusharglist 2 ........................... <tProps, #marker>
  [112] objcall 84 .............................. <tProps[#marker]>
  [114] pusharglistnoret 3 ...................... <tStruct, #marker, tProps[#marker]>
  [116] objcall 142 ............................. tStruct[#marker] = tProps[#marker]
  [118] getlocal 1 .............................. <tStruct>
  [120] pushsymb 186 ............................ <#owner>
  [122] getlocal 0 .............................. <tProps>
  [124] pushsymb 186 ............................ <#owner>
  [126] pusharglist 2 ........................... <tProps, #owner>
  [128] objcall 84 .............................. <tProps[#owner]>
  [130] pusharglistnoret 3 ...................... <tStruct, #owner, tProps[#owner]>
  [132] objcall 142 ............................. tStruct[#owner] = tProps[#owner]
  [134] getlocal 1 .............................. <tStruct>
  [136] pushsymb 144 ............................ <#door>
  [138] getlocal 0 .............................. <tProps>
  [140] pushsymb 144 ............................ <#door>
  [142] pusharglist 2 ........................... <tProps, #door>
  [144] objcall 84 .............................. <tProps[#door]>
  [146] pusharglistnoret 3 ...................... <tStruct, #door, tProps[#door]>
  [148] objcall 142 ............................. tStruct[#door] = tProps[#door]
  [150] getlocal 1 .............................. <tStruct>
  [152] pushsymb 187 ............................ <#port>
  [154] getlocal 0 .............................. <tProps>
  [156] pushsymb 187 ............................ <#port>
  [158] pusharglist 2 ........................... <tProps, #port>
  [160] objcall 84 .............................. <tProps[#port]>
  [162] pusharglistnoret 3 ...................... <tStruct, #port, tProps[#port]>
  [164] objcall 142 ............................. tStruct[#port] = tProps[#port]
  [166] getlocal 1 .............................. <tStruct>
  [168] pushsymb 188 ............................ <#trading>
  [170] getlocal 0 .............................. <tProps>
  [172] pushsymb 188 ............................ <#trading>
  [174] pusharglist 2 ........................... <tProps, #trading>
  [176] objcall 84 .............................. <tProps[#trading]>
  [178] pusharglistnoret 3 ...................... <tStruct, #trading, tProps[#trading]>
  [180] objcall 142 ............................. tStruct[#trading] = tProps[#trading]
  [182] getlocal 1 .............................. <tStruct>
  [184] pushsymb 189 ............................ <#teleport>
  [186] pushzero ................................ <0>
  [187] pusharglistnoret 3 ...................... <tStruct, #teleport, 0>
  [189] objcall 142 ............................. tStruct[#teleport] = 0
  [191] getlocal 1 .............................. <tStruct>
  [193] pushsymb 190 ............................ <#casts>
  [195] pushcons 56 ............................. <"room.cast.private">
  [197] pusharglist 1 ........................... <"room.cast.private">
  [199] extcall 64 .............................. <getVariableValue("room.cast.private")>
  [201] pusharglistnoret 3 ...................... <tStruct, #casts, getVariableValue("room.cast.private")>
  [203] objcall 142 ............................. tStruct[#casts] = getVariableValue("room.cast.private")
  [205] getlocal 1 .............................. <tStruct>
  [207] pusharglistnoret 1 ...................... <tStruct>
  [209] extcall 77 .............................. return tStruct
  [211] jmp [349]
  [214] pusharglist 0 ........................... <[:]>
  [216] pushproplist ............................ <[:]>
  [217] setlocal 1 .............................. tStruct = [:]
  [219] getlocal 1 .............................. <tStruct>
  [221] pushsymb 141 ............................ <#id>
  [223] getlocal 0 .............................. <tProps>
  [225] pushsymb 191 ............................ <#unitStrId>
  [227] pusharglist 2 ........................... <tProps, #unitStrId>
  [229] objcall 84 .............................. <tProps[#unitStrId]>
  [231] pusharglistnoret 3 ...................... <tStruct, #id, tProps[#unitStrId]>
  [233] objcall 142 ............................. tStruct[#id] = tProps[#unitStrId]
  [235] getlocal 1 .............................. <tStruct>
  [237] pushsymb 130 ............................ <#name>
  [239] getlocal 0 .............................. <tProps>
  [241] pushsymb 130 ............................ <#name>
  [243] pusharglist 2 ........................... <tProps, #name>
  [245] objcall 84 .............................. <tProps[#name]>
  [247] pusharglistnoret 3 ...................... <tStruct, #name, tProps[#name]>
  [249] objcall 142 ............................. tStruct[#name] = tProps[#name]
  [251] getlocal 1 .............................. <tStruct>
  [253] pushsymb 183 ............................ <#type>
  [255] pushsymb 192 ............................ <#public>
  [257] pusharglistnoret 3 ...................... <tStruct, #type, #public>
  [259] objcall 142 ............................. tStruct[#type] = #public
  [261] getlocal 1 .............................. <tStruct>
  [263] pushsymb 185 ............................ <#marker>
  [265] getlocal 0 .............................. <tProps>
  [267] pushsymb 185 ............................ <#marker>
  [269] pusharglist 2 ........................... <tProps, #marker>
  [271] objcall 84 .............................. <tProps[#marker]>
  [273] pusharglistnoret 3 ...................... <tStruct, #marker, tProps[#marker]>
  [275] objcall 142 ............................. tStruct[#marker] = tProps[#marker]
  [277] getlocal 1 .............................. <tStruct>
  [279] pushsymb 186 ............................ <#owner>
  [281] pushzero ................................ <0>
  [282] pusharglistnoret 3 ...................... <tStruct, #owner, 0>
  [284] objcall 142 ............................. tStruct[#owner] = 0
  [286] getlocal 1 .............................. <tStruct>
  [288] pushsymb 144 ............................ <#door>
  [290] getlocal 0 .............................. <tProps>
  [292] pushsymb 144 ............................ <#door>
  [294] pusharglist 2 ........................... <tProps, #door>
  [296] objcall 84 .............................. <tProps[#door]>
  [298] pusharglistnoret 3 ...................... <tStruct, #door, tProps[#door]>
  [300] objcall 142 ............................. tStruct[#door] = tProps[#door]
  [302] getlocal 1 .............................. <tStruct>
  [304] pushsymb 187 ............................ <#port>
  [306] getlocal 0 .............................. <tProps>
  [308] pushsymb 187 ............................ <#port>
  [310] pusharglist 2 ........................... <tProps, #port>
  [312] objcall 84 .............................. <tProps[#port]>
  [314] pusharglistnoret 3 ...................... <tStruct, #port, tProps[#port]>
  [316] objcall 142 ............................. tStruct[#port] = tProps[#port]
  [318] getlocal 1 .............................. <tStruct>
  [320] pushsymb 189 ............................ <#teleport>
  [322] pushzero ................................ <0>
  [323] pusharglistnoret 3 ...................... <tStruct, #teleport, 0>
  [325] objcall 142 ............................. tStruct[#teleport] = 0
  [327] getlocal 1 .............................. <tStruct>
  [329] pushsymb 190 ............................ <#casts>
  [331] getlocal 0 .............................. <tProps>
  [333] pushsymb 190 ............................ <#casts>
  [335] pusharglist 2 ........................... <tProps, #casts>
  [337] objcall 84 .............................. <tProps[#casts]>
  [339] pusharglistnoret 3 ...................... <tStruct, #casts, tProps[#casts]>
  [341] objcall 142 ............................. tStruct[#casts] = tProps[#casts]
  [343] getlocal 1 .............................. <tStruct>
  [345] pusharglistnoret 1 ...................... <tStruct>
  [347] extcall 77 .............................. return tStruct
  [349] ret
end

on getCurrentNodeMask me
  [  0] getprop 61 .............................. <pHideFullRoomsFlag>
  [  2] pusharglistnoret 1 ...................... <pHideFullRoomsFlag>
  [  4] extcall 77 .............................. return pHideFullRoomsFlag
  [  6] ret
end

on updateState me, tstate, tProps
  [  0] getparam 1 .............................. <tstate>
  [  2] peek 0 .................................. case tstate of
  [  4] pushcons 8 .............................. <"reset">
  [  6] eq
  [  7] jmpifz [ 35] ............................ (case) "reset":
  [ 10] getparam 1 .............................. <tstate>
  [ 12] setprop 83 .............................. pState = tstate
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglist 1 ........................... <me>
  [ 18] objcall 81 .............................. <me.getInterface()>
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 2 ...................... <me.getInterface(), 0>
  [ 23] objcall 195 ............................. me.getInterface().setUpdates(0)
  [ 25] pop 1
  [ 27] pushzero ................................ <0>
  [ 28] pusharglistnoret 1 ...................... <0>
  [ 30] extcall 77 .............................. return 0
  [ 32] jmp [302]
  [ 35] peek 0
  [ 37] pushcons 57 ............................. <"userLogin">
  [ 39] eq
  [ 40] jmpifz [199] ............................ (case) "userLogin":
  [ 43] getparam 1 .............................. <tstate>
  [ 45] setprop 83 .............................. pState = tstate
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglist 1 ........................... <me>
  [ 51] objcall 81 .............................. <me.getInterface()>
  [ 53] pushsymb 121 ............................ <#categoryId>
  [ 55] getprop 55 .............................. <pDefaultUnitCatId>
  [ 57] pushsymb 137 ............................ <#unit>
  [ 59] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, pDefaultUnitCatId, #unit>
  [ 61] objcall 122 ............................. me.getInterface().setProperty(#categoryId, pDefaultUnitCatId, #unit)
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglist 1 ........................... <me>
  [ 67] objcall 81 .............................. <me.getInterface()>
  [ 69] pushsymb 121 ............................ <#categoryId>
  [ 71] getprop 56 .............................. <pDefaultFlatCatId>
  [ 73] pushsymb 138 ............................ <#flat>
  [ 75] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, pDefaultFlatCatId, #flat>
  [ 77] objcall 122 ............................. me.getInterface().setProperty(#categoryId, pDefaultFlatCatId, #flat)
  [ 79] getparam 0 .............................. <me>
  [ 81] pusharglist 1 ........................... <me>
  [ 83] objcall 81 .............................. <me.getInterface()>
  [ 85] pushsymb 121 ............................ <#categoryId>
  [ 87] pushsymb 99 ............................. <#src>
  [ 89] pushsymb 99 ............................. <#src>
  [ 91] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, #src, #src>
  [ 93] objcall 122 ............................. me.getInterface().setProperty(#categoryId, #src, #src)
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglist 1 ........................... <me>
  [ 99] objcall 81 .............................. <me.getInterface()>
  [101] pushsymb 121 ............................ <#categoryId>
  [103] pushsymb 98 ............................. <#own>
  [105] pushsymb 98 ............................. <#own>
  [107] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, #own, #own>
  [109] objcall 122 ............................. me.getInterface().setProperty(#categoryId, #own, #own)
  [111] getparam 0 .............................. <me>
  [113] pusharglist 1 ........................... <me>
  [115] objcall 81 .............................. <me.getInterface()>
  [117] pushsymb 121 ............................ <#categoryId>
  [119] pushsymb 100 ............................ <#fav>
  [121] pushsymb 100 ............................ <#fav>
  [123] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, #fav, #fav>
  [125] objcall 122 ............................. me.getInterface().setProperty(#categoryId, #fav, #fav)
  [127] getprop 55 .............................. <pDefaultUnitCatId>
  [129] getprop 50 .............................. <pRootUnitCatId>
  [131] nteq .................................... <pDefaultUnitCatId <> pRootUnitCatId>
  [132] jmpifz [143] ............................ if pDefaultUnitCatId <> pRootUnitCatId then
  [135] getparam 0 .............................. <me>
  [137] getprop 55 .............................. <pDefaultUnitCatId>
  [139] pusharglistnoret 2 ...................... <me, pDefaultUnitCatId>
  [141] objcall 46 .............................. me.sendGetParentChain(pDefaultUnitCatId)
  [143] getparam 0 .............................. <me>
  [145] getprop 50 .............................. <pRootUnitCatId>
  [147] pusharglistnoret 2 ...................... <me, pRootUnitCatId>
  [149] objcall 27 .............................. me.sendNavigate(pRootUnitCatId)
  [151] getprop 56 .............................. <pDefaultFlatCatId>
  [153] getprop 53 .............................. <pRootFlatCatId>
  [155] nteq .................................... <pDefaultFlatCatId <> pRootFlatCatId>
  [156] jmpifz [167] ............................ if pDefaultFlatCatId <> pRootFlatCatId then
  [159] getparam 0 .............................. <me>
  [161] getprop 56 .............................. <pDefaultFlatCatId>
  [163] pusharglistnoret 2 ...................... <me, pDefaultFlatCatId>
  [165] objcall 46 .............................. me.sendGetParentChain(pDefaultFlatCatId)
  [167] getparam 0 .............................. <me>
  [169] getprop 53 .............................. <pRootFlatCatId>
  [171] pusharglistnoret 2 ...................... <me, pRootFlatCatId>
  [173] objcall 27 .............................. me.sendNavigate(pRootFlatCatId)
  [175] getparam 0 .............................. <me>
  [177] pushint16 2000 .......................... <2000>
  [180] pushsymb 49 ............................. <#updateState>
  [182] pushcons 58 ............................. <"openNavigator">
  [184] pusharglistnoret 4 ...................... <me, 2000, #updateState, "openNavigator">
  [186] objcall 112 ............................. me.delay(2000, #updateState, "openNavigator")
  [188] pop 1
  [190] pushint8 1 .............................. <1>
  [192] pusharglistnoret 1 ...................... <1>
  [194] extcall 77 .............................. return 1
  [196] jmp [302]
  [199] peek 0
  [201] pushcons 58 ............................. <"openNavigator">
  [203] eq
  [204] jmpifz [230] ............................ (case) "openNavigator":
  [207] getparam 1 .............................. <tstate>
  [209] setprop 83 .............................. pState = tstate
  [211] getparam 0 .............................. <me>
  [213] pusharglist 1 ........................... <me>
  [215] objcall 81 .............................. <me.getInterface()>
  [217] pusharglistnoret 1 ...................... <me.getInterface()>
  [219] objcall 2 ............................... me.getInterface().showNavigator()
  [221] pushsymb 76 ............................. <#updateAvailableFlatCategories>
  [223] pusharglistnoret 1 ...................... <#updateAvailableFlatCategories>
  [225] extcall 117 ............................. executeMessage(#updateAvailableFlatCategories)
  [227] jmp [302]
  [230] peek 0
  [232] pushcons 14 ............................. <"enterEntry">
  [234] eq
  [235] jmpifz [283] ............................ (case) "enterEntry":
  [238] getparam 1 .............................. <tstate>
  [240] setprop 83 .............................. pState = tstate
  [242] pushsymb 196 ............................ <#changeRoom>
  [244] pusharglistnoret 1 ...................... <#changeRoom>
  [246] extcall 117 ............................. executeMessage(#changeRoom)
  [248] pushsymb 6 .............................. <#leaveRoom>
  [250] pusharglistnoret 1 ...................... <#leaveRoom>
  [252] extcall 117 ............................. executeMessage(#leaveRoom)
  [254] getparam 0 .............................. <me>
  [256] getparam 0 .............................. <me>
  [258] pusharglist 1 ........................... <me>
  [260] objcall 81 .............................. <me.getInterface()>
  [262] pushsymb 121 ............................ <#categoryId>
  [264] pusharglist 2 ........................... <me.getInterface(), #categoryId>
  [266] objcall 139 ............................. <me.getInterface().getProperty(#categoryId)>
  [268] pusharglistnoret 2 ...................... <me, me.getInterface().getProperty(#categoryId)>
  [270] objcall 16 .............................. me.createNaviHistory(me.getInterface().getProperty(#categoryId))
  [272] pop 1
  [274] pushint8 1 .............................. <1>
  [276] pusharglistnoret 1 ...................... <1>
  [278] extcall 77 .............................. return 1
  [280] jmp [302] ............................... (case) otherwise:
  [283] pop 1
  [285] getparam 0 .............................. <me>
  [287] pushcons 59 ............................. <"Unknown state:">
  [289] getparam 1 .............................. <tstate>
  [291] joinpadstr .............................. <"Unknown state:" && tstate>
  [292] pushsymb 49 ............................. <#updateState>
  [294] pusharglist 3 ........................... <me, "Unknown state:" && tstate, #updateState>
  [296] extcall 116 ............................. <error(me, "Unknown state:" && tstate, #updateState)>
  [298] pusharglistnoret 1 ...................... <error(me, "Unknown state:" && tstate, #updateState)>
  [300] extcall 77 .............................. return error(me, "Unknown state:" && tstate, #updateState)
  [302] pop 1 ................................... end case
  [304] ret
end
