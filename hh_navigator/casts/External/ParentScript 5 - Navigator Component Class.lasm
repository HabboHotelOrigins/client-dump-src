property pState, pCategoryIndex, pNodeCache, pNodeCacheExpList, pNaviHistory, pHideFullRoomsFlag, pRootUnitCatId, pRootFlatCatId, pDefaultUnitCatId, pDefaultFlatCatId, pUpdateInterval, pConnectionId

on construct me
  [  0] pushcons 0 .............................. <"navigator.visible.public.root">
  [  2] pusharglist 1 ........................... <"navigator.visible.public.root">
  [  4] extcall 116 ............................. <getIntVariable("navigator.visible.public.root")>
  [  6] pusharglist 1 ........................... <getIntVariable("navigator.visible.public.root")>
  [  8] extcall 416 ............................. <string(getIntVariable("navigator.visible.public.root"))>
  [ 11] setprop 415 ............................. pRootUnitCatId = string(getIntVariable("navigator.visible.public.root"))
  [ 14] pushcons 1 .............................. <"navigator.visible.private.root">
  [ 16] pusharglist 1 ........................... <"navigator.visible.private.root">
  [ 18] extcall 116 ............................. <getIntVariable("navigator.visible.private.root")>
  [ 20] pusharglist 1 ........................... <getIntVariable("navigator.visible.private.root")>
  [ 22] extcall 416 ............................. <string(getIntVariable("navigator.visible.private.root"))>
  [ 25] setprop 417 ............................. pRootFlatCatId = string(getIntVariable("navigator.visible.private.root"))
  [ 28] pushcons 2 .............................. <"navigator.public.default">
  [ 30] pusharglist 1 ........................... <"navigator.public.default">
  [ 32] extcall 130 ............................. <variableExists("navigator.public.default")>
  [ 34] jmpifz [ 54] ............................ if variableExists("navigator.public.default") then / else
  [ 37] pushcons 2 .............................. <"navigator.public.default">
  [ 39] pusharglist 1 ........................... <"navigator.public.default">
  [ 41] extcall 116 ............................. <getIntVariable("navigator.public.default")>
  [ 43] pusharglist 1 ........................... <getIntVariable("navigator.public.default")>
  [ 45] extcall 416 ............................. <string(getIntVariable("navigator.public.default"))>
  [ 48] setprop 418 ............................. pDefaultUnitCatId = string(getIntVariable("navigator.public.default"))
  [ 51] jmp [ 60]
  [ 54] getprop 415 ............................. <pRootUnitCatId>
  [ 57] setprop 418 ............................. pDefaultUnitCatId = pRootUnitCatId
  [ 60] pushcons 3 .............................. <"navigator.private.default">
  [ 62] pusharglist 1 ........................... <"navigator.private.default">
  [ 64] extcall 130 ............................. <variableExists("navigator.private.default")>
  [ 66] jmpifz [ 86] ............................ if variableExists("navigator.private.default") then / else
  [ 69] pushcons 3 .............................. <"navigator.private.default">
  [ 71] pusharglist 1 ........................... <"navigator.private.default">
  [ 73] extcall 116 ............................. <getIntVariable("navigator.private.default")>
  [ 75] pusharglist 1 ........................... <getIntVariable("navigator.private.default")>
  [ 77] extcall 416 ............................. <string(getIntVariable("navigator.private.default"))>
  [ 80] setprop 419 ............................. pDefaultFlatCatId = string(getIntVariable("navigator.private.default"))
  [ 83] jmp [ 92]
  [ 86] getprop 417 ............................. <pRootFlatCatId>
  [ 89] setprop 419 ............................. pDefaultFlatCatId = pRootFlatCatId
  [ 92] pusharglist 0 ........................... <[:]>
  [ 94] pushproplist ............................ <[:]>
  [ 95] setprop 420 ............................. pCategoryIndex = [:]
  [ 98] pusharglist 0 ........................... <[:]>
  [100] pushproplist ............................ <[:]>
  [101] setprop 421 ............................. pNodeCache = [:]
  [104] pusharglist 0 ........................... <[:]>
  [106] pushproplist ............................ <[:]>
  [107] setprop 422 ............................. pNodeCacheExpList = [:]
  [110] pusharglist 0 ........................... <[]>
  [112] pushlist ................................ <[]>
  [113] setprop 423 ............................. pNaviHistory = []
  [116] pushzero ................................ <0>
  [117] setprop 424 ............................. pHideFullRoomsFlag = 0
  [120] pushcons 4 .............................. <"navigator.updatetime">
  [122] pusharglist 1 ........................... <"navigator.updatetime">
  [124] extcall 116 ............................. <getIntVariable("navigator.updatetime")>
  [126] setprop 425 ............................. pUpdateInterval = getIntVariable("navigator.updatetime")
  [129] pushcons 5 .............................. <"connection.info.id">
  [131] pushsymb 428 ............................ <#info>
  [134] pusharglist 2 ........................... <"connection.info.id", #info>
  [136] extcall 427 ............................. <getVariableValue("connection.info.id", #info)>
  [139] setprop 426 ............................. pConnectionId = getVariableValue("connection.info.id", #info)
  [142] pushsymb 159 ............................ <#session>
  [144] pusharglist 1 ........................... <#session>
  [146] extcall 158 ............................. <getObject(#session)>
  [148] pushcons 6 .............................. <"lastroom">
  [150] pushcons 7 .............................. <"Entry">
  [152] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", "Entry">
  [154] objcall 429 ............................. getObject(#session).set("lastroom", "Entry")
  [157] pushsymb 430 ............................ <#userlogin>
  [160] getparam 0 .............................. <me>
  [162] pusharglist 1 ........................... <me>
  [164] objcall 70 .............................. <me.getID()>
  [166] pushsymb 368 ............................ <#updateState>
  [169] pusharglistnoret 3 ...................... <#userlogin, me.getID(), #updateState>
  [171] extcall 316 ............................. registerMessage(#userlogin, me.getID(), #updateState)
  [174] pushsymb 431 ............................ <#show_navigator>
  [177] getparam 0 .............................. <me>
  [179] pusharglist 1 ........................... <me>
  [181] objcall 70 .............................. <me.getID()>
  [183] pushsymb 5 .............................. <#showNavigator>
  [185] pusharglistnoret 3 ...................... <#show_navigator, me.getID(), #showNavigator>
  [187] extcall 316 ............................. registerMessage(#show_navigator, me.getID(), #showNavigator)
  [190] pushsymb 432 ............................ <#hide_navigator>
  [193] getparam 0 .............................. <me>
  [195] pusharglist 1 ........................... <me>
  [197] objcall 70 .............................. <me.getID()>
  [199] pushsymb 6 .............................. <#hideNavigator>
  [201] pusharglistnoret 3 ...................... <#hide_navigator, me.getID(), #hideNavigator>
  [203] extcall 316 ............................. registerMessage(#hide_navigator, me.getID(), #hideNavigator)
  [206] pushsymb 433 ............................ <#show_hide_navigator>
  [209] getparam 0 .............................. <me>
  [211] pusharglist 1 ........................... <me>
  [213] objcall 70 .............................. <me.getID()>
  [215] pushsymb 7 .............................. <#showhidenavigator>
  [217] pusharglistnoret 3 ...................... <#show_hide_navigator, me.getID(), #showhidenavigator>
  [219] extcall 316 ............................. registerMessage(#show_hide_navigator, me.getID(), #showhidenavigator)
  [222] pushsymb 396 ............................ <#leaveRoom>
  [225] getparam 0 .............................. <me>
  [227] pusharglist 1 ........................... <me>
  [229] objcall 70 .............................. <me.getID()>
  [231] pushsymb 396 ............................ <#leaveRoom>
  [234] pusharglistnoret 3 ...................... <#leaveRoom, me.getID(), #leaveRoom>
  [236] extcall 316 ............................. registerMessage(#leaveRoom, me.getID(), #leaveRoom)
  [239] pushsymb 296 ............................ <#executeRoomEntry>
  [242] getparam 0 .............................. <me>
  [244] pusharglist 1 ........................... <me>
  [246] objcall 70 .............................. <me.getID()>
  [248] pushsymb 296 ............................ <#executeRoomEntry>
  [251] pusharglistnoret 3 ...................... <#executeRoomEntry, me.getID(), #executeRoomEntry>
  [253] extcall 316 ............................. registerMessage(#executeRoomEntry, me.getID(), #executeRoomEntry)
  [256] pushsymb 434 ............................ <#requestFlatStruct>
  [259] getparam 0 .............................. <me>
  [261] pusharglist 1 ........................... <me>
  [263] objcall 70 .............................. <me.getID()>
  [265] pushsymb 317 ............................ <#sendGetFlatInfo>
  [268] pusharglistnoret 3 ...................... <#requestFlatStruct, me.getID(), #sendGetFlatInfo>
  [270] extcall 316 ............................. registerMessage(#requestFlatStruct, me.getID(), #sendGetFlatInfo)
  [273] pushsymb 435 ............................ <#updateAvailableFlatCategories>
  [276] getparam 0 .............................. <me>
  [278] pusharglist 1 ........................... <me>
  [280] objcall 70 .............................. <me.getID()>
  [282] pushsymb 410 ............................ <#sendGetUserFlatCats>
  [285] pusharglistnoret 3 ...................... <#updateAvailableFlatCategories, me.getID(), #sendGetUserFlatCats>
  [287] extcall 316 ............................. registerMessage(#updateAvailableFlatCategories, me.getID(), #sendGetUserFlatCats)
  [290] pushint8 1 .............................. <1>
  [292] pusharglistnoret 1 ...................... <1>
  [294] extcall 36 .............................. return 1
  [296] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 50 .............................. <VOID>
  [  4] setprop 421 ............................. pNodeCache = VOID
  [  7] pusharglist 0 ........................... <>
  [  9] extcall 50 .............................. <VOID>
  [ 11] setprop 420 ............................. pCategoryIndex = VOID
  [ 14] pushsymb 430 ............................ <#userlogin>
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglist 1 ........................... <me>
  [ 21] objcall 70 .............................. <me.getID()>
  [ 23] pusharglistnoret 2 ...................... <#userlogin, me.getID()>
  [ 25] extcall 292 ............................. unregisterMessage(#userlogin, me.getID())
  [ 28] pushsymb 431 ............................ <#show_navigator>
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 70 .............................. <me.getID()>
  [ 37] pusharglistnoret 2 ...................... <#show_navigator, me.getID()>
  [ 39] extcall 292 ............................. unregisterMessage(#show_navigator, me.getID())
  [ 42] pushsymb 432 ............................ <#hide_navigator>
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 70 .............................. <me.getID()>
  [ 51] pusharglistnoret 2 ...................... <#hide_navigator, me.getID()>
  [ 53] extcall 292 ............................. unregisterMessage(#hide_navigator, me.getID())
  [ 56] pushsymb 433 ............................ <#show_hide_navigator>
  [ 59] getparam 0 .............................. <me>
  [ 61] pusharglist 1 ........................... <me>
  [ 63] objcall 70 .............................. <me.getID()>
  [ 65] pusharglistnoret 2 ...................... <#show_hide_navigator, me.getID()>
  [ 67] extcall 292 ............................. unregisterMessage(#show_hide_navigator, me.getID())
  [ 70] pushsymb 396 ............................ <#leaveRoom>
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglist 1 ........................... <me>
  [ 77] objcall 70 .............................. <me.getID()>
  [ 79] pusharglistnoret 2 ...................... <#leaveRoom, me.getID()>
  [ 81] extcall 292 ............................. unregisterMessage(#leaveRoom, me.getID())
  [ 84] pushsymb 296 ............................ <#executeRoomEntry>
  [ 87] getparam 0 .............................. <me>
  [ 89] pusharglist 1 ........................... <me>
  [ 91] objcall 70 .............................. <me.getID()>
  [ 93] pusharglistnoret 2 ...................... <#executeRoomEntry, me.getID()>
  [ 95] extcall 292 ............................. unregisterMessage(#executeRoomEntry, me.getID())
  [ 98] pushsymb 434 ............................ <#requestFlatStruct>
  [101] getparam 0 .............................. <me>
  [103] pusharglist 1 ........................... <me>
  [105] objcall 70 .............................. <me.getID()>
  [107] pusharglistnoret 2 ...................... <#requestFlatStruct, me.getID()>
  [109] extcall 292 ............................. unregisterMessage(#requestFlatStruct, me.getID())
  [112] pushsymb 435 ............................ <#updateAvailableFlatCategories>
  [115] getparam 0 .............................. <me>
  [117] pusharglist 1 ........................... <me>
  [119] objcall 70 .............................. <me.getID()>
  [121] pusharglistnoret 2 ...................... <#updateAvailableFlatCategories, me.getID()>
  [123] extcall 292 ............................. unregisterMessage(#updateAvailableFlatCategories, me.getID())
  [126] getparam 0 .............................. <me>
  [128] pushcons 8 .............................. <"reset">
  [130] pusharglist 2 ........................... <me, "reset">
  [132] objcall 368 ............................. <me.updateState("reset")>
  [135] pusharglistnoret 1 ...................... <me.updateState("reset")>
  [137] extcall 36 .............................. return me.updateState("reset")
  [139] ret
end

on showNavigator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pusharglist 1 ........................... <me.getInterface()>
  [  8] objcall 5 ............................... <me.getInterface().showNavigator()>
  [ 10] pusharglistnoret 1 ...................... <me.getInterface().showNavigator()>
  [ 12] extcall 36 .............................. return me.getInterface().showNavigator()
  [ 14] ret
end

on hideNavigator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pushsymb 61 ............................. <#hide>
  [  8] pusharglist 2 ........................... <me.getInterface(), #hide>
  [ 10] objcall 6 ............................... <me.getInterface().hideNavigator(#hide)>
  [ 12] pusharglistnoret 1 ...................... <me.getInterface().hideNavigator(#hide)>
  [ 14] extcall 36 .............................. return me.getInterface().hideNavigator(#hide)
  [ 16] ret
end

on showhidenavigator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pushsymb 61 ............................. <#hide>
  [  8] pusharglist 2 ........................... <me.getInterface(), #hide>
  [ 10] objcall 7 ............................... <me.getInterface().showhidenavigator(#hide)>
  [ 12] pusharglistnoret 1 ...................... <me.getInterface().showhidenavigator(#hide)>
  [ 14] extcall 36 .............................. return me.getInterface().showhidenavigator(#hide)
  [ 16] ret
end

on getState me
  [  0] getprop 436 ............................. <pState>
  [  3] pusharglistnoret 1 ...................... <pState>
  [  5] extcall 36 .............................. return pState
  [  7] ret
end

on leaveRoom me
  [  0] pushsymb 159 ............................ <#session>
  [  2] pusharglist 1 ........................... <#session>
  [  4] extcall 158 ............................. <getObject(#session)>
  [  6] pushcons 6 .............................. <"lastroom">
  [  8] pushcons 7 .............................. <"Entry">
  [ 10] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", "Entry">
  [ 12] objcall 429 ............................. getObject(#session).set("lastroom", "Entry")
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 57 .............................. <me.getInterface()>
  [ 21] pusharglist 1 ........................... <me.getInterface()>
  [ 23] objcall 5 ............................... <me.getInterface().showNavigator()>
  [ 25] pusharglistnoret 1 ...................... <me.getInterface().showNavigator()>
  [ 27] extcall 36 .............................. return me.getInterface().showNavigator()
  [ 29] ret
end

on getNodeInfo me, tNodeId, tCategoryId
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 50 .............................. <VOID>
  [  6] eq ...................................... <tNodeId = VOID>
  [  7] jmpifz [ 15] ............................ if tNodeId = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 36 .............................. return 0
  [ 15] getparam 1 .............................. <tNodeId>
  [ 17] pushcons 9 .............................. <"/">
  [ 19] containsstr ............................. <tNodeId contains "/">
  [ 20] not ..................................... <not (tNodeId contains "/")>
  [ 21] jmpifz [115] ............................ if not (tNodeId contains "/") then
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <tNodeId>
  [ 28] pushcons 9 .............................. <"/">
  [ 30] joinstr ................................. <tNodeId & "/">
  [ 31] getparam 0 .............................. <me>
  [ 33] pusharglist 1 ........................... <me>
  [ 35] objcall 251 ............................. <me.getCurrentNodeMask()>
  [ 37] joinstr ................................. <tNodeId & "/" & me.getCurrentNodeMask()>
  [ 38] getparam 2 .............................. <tCategoryId>
  [ 40] pusharglist 3 ........................... <me, tNodeId & "/" & me.getCurrentNodeMask(), tCategoryId>
  [ 42] objcall 144 ............................. <me.getNodeInfo(tNodeId & "/" & me.getCurrentNodeMask(), tCategoryId)>
  [ 44] setlocal 0 .............................. tTestInfo = me.getNodeInfo(tNodeId & "/" & me.getCurrentNodeMask(), tCategoryId)
  [ 46] getlocal 0 .............................. <tTestInfo>
  [ 48] pushzero ................................ <0>
  [ 49] nteq .................................... <tTestInfo <> 0>
  [ 50] jmpifz [ 59] ............................ if tTestInfo <> 0 then
  [ 53] getlocal 0 .............................. <tTestInfo>
  [ 55] pusharglistnoret 1 ...................... <tTestInfo>
  [ 57] extcall 36 .............................. return tTestInfo
  [ 59] getparam 0 .............................. <me>
  [ 61] getparam 1 .............................. <tNodeId>
  [ 63] pushcons 10 ............................. <"/0">
  [ 65] joinstr ................................. <tNodeId & "/0">
  [ 66] getparam 2 .............................. <tCategoryId>
  [ 68] pusharglist 3 ........................... <me, tNodeId & "/0", tCategoryId>
  [ 70] objcall 144 ............................. <me.getNodeInfo(tNodeId & "/0", tCategoryId)>
  [ 72] setlocal 0 .............................. tTestInfo = me.getNodeInfo(tNodeId & "/0", tCategoryId)
  [ 74] getlocal 0 .............................. <tTestInfo>
  [ 76] pushzero ................................ <0>
  [ 77] nteq .................................... <tTestInfo <> 0>
  [ 78] jmpifz [ 87] ............................ if tTestInfo <> 0 then
  [ 81] getlocal 0 .............................. <tTestInfo>
  [ 83] pusharglistnoret 1 ...................... <tTestInfo>
  [ 85] extcall 36 .............................. return tTestInfo
  [ 87] getparam 0 .............................. <me>
  [ 89] getparam 1 .............................. <tNodeId>
  [ 91] pushcons 11 ............................. <"/1">
  [ 93] joinstr ................................. <tNodeId & "/1">
  [ 94] getparam 2 .............................. <tCategoryId>
  [ 96] pusharglist 3 ........................... <me, tNodeId & "/1", tCategoryId>
  [ 98] objcall 144 ............................. <me.getNodeInfo(tNodeId & "/1", tCategoryId)>
  [100] setlocal 0 .............................. tTestInfo = me.getNodeInfo(tNodeId & "/1", tCategoryId)
  [102] getlocal 0 .............................. <tTestInfo>
  [104] pushzero ................................ <0>
  [105] nteq .................................... <tTestInfo <> 0>
  [106] jmpifz [115] ............................ if tTestInfo <> 0 then
  [109] getlocal 0 .............................. <tTestInfo>
  [111] pusharglistnoret 1 ...................... <tTestInfo>
  [113] extcall 36 .............................. return tTestInfo
  [115] getparam 2 .............................. <tCategoryId>
  [117] pusharglist 0 ........................... <>
  [119] extcall 50 .............................. <VOID>
  [121] nteq .................................... <tCategoryId <> VOID>
  [122] jmpifz [168] ............................ if tCategoryId <> VOID then
  [125] getprop 421 ............................. <pNodeCache>
  [128] getparam 2 .............................. <tCategoryId>
  [130] pusharglist 2 ........................... <pNodeCache, tCategoryId>
  [132] objcall 51 .............................. <pNodeCache[tCategoryId]>
  [134] pusharglist 0 ........................... <>
  [136] extcall 50 .............................. <VOID>
  [138] nteq .................................... <pNodeCache[tCategoryId] <> VOID>
  [139] jmpifz [168] ............................ if pNodeCache[tCategoryId] <> VOID then
  [142] getprop 421 ............................. <pNodeCache>
  [145] getparam 2 .............................. <tCategoryId>
  [147] pusharglist 2 ........................... <pNodeCache, tCategoryId>
  [149] objcall 51 .............................. <pNodeCache[tCategoryId]>
  [151] pushsymb 299 ............................ <#children>
  [154] pusharglist 2 ........................... <pNodeCache[tCategoryId], #children>
  [156] objcall 51 .............................. <pNodeCache[tCategoryId][#children]>
  [158] getparam 1 .............................. <tNodeId>
  [160] pusharglist 2 ........................... <pNodeCache[tCategoryId][#children], tNodeId>
  [162] objcall 51 .............................. <pNodeCache[tCategoryId][#children][tNodeId]>
  [164] pusharglistnoret 1 ...................... <pNodeCache[tCategoryId][#children][tNodeId]>
  [166] extcall 36 .............................. return pNodeCache[tCategoryId][#children][tNodeId]
  [168] getprop 421 ............................. <pNodeCache>
  [171] getparam 1 .............................. <tNodeId>
  [173] pusharglist 2 ........................... <pNodeCache, tNodeId>
  [175] objcall 51 .............................. <pNodeCache[tNodeId]>
  [177] pusharglist 0 ........................... <>
  [179] extcall 50 .............................. <VOID>
  [181] nteq .................................... <pNodeCache[tNodeId] <> VOID>
  [182] jmpifz [198] ............................ if pNodeCache[tNodeId] <> VOID then
  [185] getprop 421 ............................. <pNodeCache>
  [188] getparam 1 .............................. <tNodeId>
  [190] pusharglist 2 ........................... <pNodeCache, tNodeId>
  [192] objcall 51 .............................. <pNodeCache[tNodeId]>
  [194] pusharglistnoret 1 ...................... <pNodeCache[tNodeId]>
  [196] extcall 36 .............................. return pNodeCache[tNodeId]
  [198] getprop 421 ............................. <pNodeCache>
  [201] peek 0
  [203] pusharglist 1
  [205] extcall 125
  [207] pushint8 1
  [209] peek 0
  [211] peek 2
  [213] lteq
  [214] jmpifz [274] ............................ repeat with tList in pNodeCache
  [217] peek 2
  [219] peek 1
  [221] pusharglist 2
  [223] extcall 51
  [225] setlocal 1
  [227] getlocal 1 .............................. <tList>
  [229] pushsymb 299 ............................ <#children>
  [232] pusharglist 2 ........................... <tList, #children>
  [234] objcall 51 .............................. <tList[#children]>
  [236] getparam 1 .............................. <tNodeId>
  [238] pusharglist 2 ........................... <tList[#children], tNodeId>
  [240] objcall 51 .............................. <tList[#children][tNodeId]>
  [242] pusharglist 0 ........................... <>
  [244] extcall 50 .............................. <VOID>
  [246] nteq .................................... <tList[#children][tNodeId] <> VOID>
  [247] jmpifz [269] ............................ if tList[#children][tNodeId] <> VOID then
  [250] getlocal 1 .............................. <tList>
  [252] pushsymb 299 ............................ <#children>
  [255] pusharglist 2 ........................... <tList, #children>
  [257] objcall 51 .............................. <tList[#children]>
  [259] getparam 1 .............................. <tNodeId>
  [261] pusharglist 2 ........................... <tList[#children], tNodeId>
  [263] objcall 51 .............................. <tList[#children][tNodeId]>
  [265] pusharglistnoret 1 ...................... <tList[#children][tNodeId]>
  [267] extcall 36 .............................. return tList[#children][tNodeId]
  [269] pushint8 1
  [271] add
  [272] endrepeat [209]
  [274] pop 3
  [276] pushzero ................................ <0>
  [277] pusharglistnoret 1 ...................... <0>
  [279] extcall 36 .............................. return 0
  [281] ret
end

on getTreeInfoFor me, tid
  [  0] getparam 1 .............................. <tid>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 50 .............................. <VOID>
  [  6] eq ...................................... <tid = VOID>
  [  7] jmpifz [ 15] ............................ if tid = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 36 .............................. return 0
  [ 15] getprop 420 ............................. <pCategoryIndex>
  [ 18] getparam 1 .............................. <tid>
  [ 20] pusharglist 2 ........................... <pCategoryIndex, tid>
  [ 22] objcall 51 .............................. <pCategoryIndex[tid]>
  [ 24] pusharglist 0 ........................... <>
  [ 26] extcall 50 .............................. <VOID>
  [ 28] eq ...................................... <pCategoryIndex[tid] = VOID>
  [ 29] jmpifz [ 37] ............................ if pCategoryIndex[tid] = VOID then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 36 .............................. return 0
  [ 37] getprop 420 ............................. <pCategoryIndex>
  [ 40] getparam 1 .............................. <tid>
  [ 42] pusharglist 2 ........................... <pCategoryIndex, tid>
  [ 44] objcall 51 .............................. <pCategoryIndex[tid]>
  [ 46] pusharglistnoret 1 ...................... <pCategoryIndex[tid]>
  [ 48] extcall 36 .............................. return pCategoryIndex[tid]
  [ 50] ret
end

on setNodeProperty me, tNodeId, tProp, tValue
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pusharglist 2 ........................... <me, tNodeId>
  [  6] objcall 144 ............................. <me.getNodeInfo(tNodeId)>
  [  8] setlocal 0 .............................. tNodeInfo = me.getNodeInfo(tNodeId)
  [ 10] getlocal 0 .............................. <tNodeInfo>
  [ 12] pusharglist 1 ........................... <tNodeInfo>
  [ 14] extcall 101 ............................. <listp(tNodeInfo)>
  [ 16] not ..................................... <not listp(tNodeInfo)>
  [ 17] jmpifz [ 25] ............................ if not listp(tNodeInfo) then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 36 .............................. return 0
  [ 25] getlocal 0 .............................. <tNodeInfo>
  [ 27] getparam 2 .............................. <tProp>
  [ 29] getparam 3 .............................. <tValue>
  [ 31] pusharglistnoret 3 ...................... <tNodeInfo, tProp, tValue>
  [ 33] objcall 439 ............................. tNodeInfo.setaProp(tProp, tValue)
  [ 36] pushint8 1 .............................. <1>
  [ 38] pusharglistnoret 1 ...................... <1>
  [ 40] extcall 36 .............................. return 1
  [ 42] ret
end

on getNodeProperty me, tNodeId, tProp
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 50 .............................. <VOID>
  [  6] eq ...................................... <tNodeId = VOID>
  [  7] jmpifz [ 15] ............................ if tNodeId = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 36 .............................. return 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 1 .............................. <tNodeId>
  [ 19] pusharglist 2 ........................... <me, tNodeId>
  [ 21] objcall 144 ............................. <me.getNodeInfo(tNodeId)>
  [ 23] setlocal 0 .............................. tNodeInfo = me.getNodeInfo(tNodeId)
  [ 25] getlocal 0 .............................. <tNodeInfo>
  [ 27] pushzero ................................ <0>
  [ 28] eq ...................................... <tNodeInfo = 0>
  [ 29] jmpifz [ 37] ............................ if tNodeInfo = 0 then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 36 .............................. return 0
  [ 37] getlocal 0 .............................. <tNodeInfo>
  [ 39] getparam 2 .............................. <tProp>
  [ 41] pusharglist 2 ........................... <tNodeInfo, tProp>
  [ 43] objcall 440 ............................. <tNodeInfo.getaProp(tProp)>
  [ 46] pusharglistnoret 1 ...................... <tNodeInfo.getaProp(tProp)>
  [ 48] extcall 36 .............................. return tNodeInfo.getaProp(tProp)
  [ 50] ret
end

on updateInterface me, tid
  [  0] getparam 1 .............................. <tid>
  [  2] pushsymb 45 ............................. <#own>
  [  4] eq ...................................... <tid = #own>
  [  5] getparam 1 .............................. <tid>
  [  7] pushsymb 46 ............................. <#src>
  [  9] eq ...................................... <tid = #src>
  [ 10] or ...................................... <(tid = #own) or (tid = #src)>
  [ 11] getparam 1 .............................. <tid>
  [ 13] pushsymb 47 ............................. <#fav>
  [ 15] eq ...................................... <tid = #fav>
  [ 16] or ...................................... <(tid = #own) or (tid = #src) or (tid = #fav)>
  [ 17] jmpifz [ 36] ............................ if (tid = #own) or (tid = #src) or (tid = #fav) then / else
  [ 20] getparam 0 .............................. <me>
  [ 22] getparam 1 .............................. <tid>
  [ 24] pusharglist 2 ........................... <me, tid>
  [ 26] objcall 403 ............................. <me.feedNewRoomList(tid)>
  [ 29] pusharglistnoret 1 ...................... <me.feedNewRoomList(tid)>
  [ 31] extcall 36 .............................. return me.feedNewRoomList(tid)
  [ 33] jmp [ 59]
  [ 36] getparam 0 .............................. <me>
  [ 38] getparam 1 .............................. <tid>
  [ 40] pushcons 9 .............................. <"/">
  [ 42] joinstr ................................. <tid & "/">
  [ 43] getparam 0 .............................. <me>
  [ 45] pusharglist 1 ........................... <me>
  [ 47] objcall 251 ............................. <me.getCurrentNodeMask()>
  [ 49] joinstr ................................. <tid & "/" & me.getCurrentNodeMask()>
  [ 50] pusharglist 2 ........................... <me, tid & "/" & me.getCurrentNodeMask()>
  [ 52] objcall 403 ............................. <me.feedNewRoomList(tid & "/" & me.getCurrentNodeMask())>
  [ 55] pusharglistnoret 1 ...................... <me.feedNewRoomList(tid & "/" & me.getCurrentNodeMask())>
  [ 57] extcall 36 .............................. return me.feedNewRoomList(tid & "/" & me.getCurrentNodeMask())
  [ 59] ret
end

on prepareRoomEntry me, tRoomID
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 74 .............................. <me.getComponent()>
  [  6] getparam 1 .............................. <tRoomID>
  [  8] pusharglist 2 ........................... <me.getComponent(), tRoomID>
  [ 10] objcall 144 ............................. <me.getComponent().getNodeInfo(tRoomID)>
  [ 12] setlocal 0 .............................. tRoomInfo = me.getComponent().getNodeInfo(tRoomID)
  [ 14] getlocal 0 .............................. <tRoomInfo>
  [ 16] pushzero ................................ <0>
  [ 17] eq ...................................... <tRoomInfo = 0>
  [ 18] jmpifz [ 26] ............................ if tRoomInfo = 0 then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 36 .............................. return 0
  [ 26] getlocal 0 .............................. <tRoomInfo>
  [ 28] pushsymb 145 ............................ <#nodeType>
  [ 30] pusharglist 2 ........................... <tRoomInfo, #nodeType>
  [ 32] objcall 51 .............................. <tRoomInfo[#nodeType]>
  [ 34] pushint8 1 .............................. <1>
  [ 36] eq ...................................... <tRoomInfo[#nodeType] = 1>
  [ 37] jmpifz [ 60] ............................ if tRoomInfo[#nodeType] = 1 then / else
  [ 40] getparam 0 .............................. <me>
  [ 42] pusharglist 1 ........................... <me>
  [ 44] objcall 74 .............................. <me.getComponent()>
  [ 46] getparam 1 .............................. <tRoomID>
  [ 48] pusharglist 2 ........................... <me.getComponent(), tRoomID>
  [ 50] objcall 296 ............................. <me.getComponent().executeRoomEntry(tRoomID)>
  [ 53] pusharglistnoret 1 ...................... <me.getComponent().executeRoomEntry(tRoomID)>
  [ 55] extcall 36 .............................. return me.getComponent().executeRoomEntry(tRoomID)
  [ 57] jmp [115]
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglist 1 ........................... <me>
  [ 64] objcall 57 .............................. <me.getInterface()>
  [ 66] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 68] objcall 6 ............................... me.getInterface().hideNavigator()
  [ 70] pushcons 12 ............................. <"receivedFlatStruct">
  [ 72] getparam 1 .............................. <tRoomID>
  [ 74] joinstr ................................. <"receivedFlatStruct" & tRoomID>
  [ 75] pusharglist 1 ........................... <"receivedFlatStruct" & tRoomID>
  [ 77] extcall 293 ............................. <symbol("receivedFlatStruct" & tRoomID)>
  [ 80] getparam 0 .............................. <me>
  [ 82] pusharglist 1 ........................... <me>
  [ 84] objcall 57 .............................. <me.getInterface()>
  [ 86] pusharglist 1 ........................... <me.getInterface()>
  [ 88] objcall 70 .............................. <me.getInterface().getID()>
  [ 90] pushsymb 269 ............................ <#checkFlatAccess>
  [ 93] pusharglistnoret 3 ...................... <symbol("receivedFlatStruct" & tRoomID), me.getInterface().getID(), #checkFlatAccess>
  [ 95] extcall 316 ............................. registerMessage(symbol("receivedFlatStruct" & tRoomID), me.getInterface().getID(), #checkFlatAccess)
  [ 98] getparam 0 .............................. <me>
  [100] pusharglist 1 ........................... <me>
  [102] objcall 74 .............................. <me.getComponent()>
  [104] getparam 1 .............................. <tRoomID>
  [106] pusharglist 2 ........................... <me.getComponent(), tRoomID>
  [108] objcall 317 ............................. <me.getComponent().sendGetFlatInfo(tRoomID)>
  [111] pusharglistnoret 1 ...................... <me.getComponent().sendGetFlatInfo(tRoomID)>
  [113] extcall 36 .............................. return me.getComponent().sendGetFlatInfo(tRoomID)
  [115] ret
end

on executeRoomEntry me, tNodeId, tRoomDataStruct
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pusharglistnoret 1 ...................... <me.getInterface()>
  [  8] objcall 6 ............................... me.getInterface().hideNavigator()
  [ 10] pushsymb 159 ............................ <#session>
  [ 12] pusharglist 1 ........................... <#session>
  [ 14] extcall 158 ............................. <getObject(#session)>
  [ 16] pushcons 6 .............................. <"lastroom">
  [ 18] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [ 20] objcall 160 ............................. <getObject(#session).get("lastroom")>
  [ 22] pushcons 7 .............................. <"Entry">
  [ 24] eq ...................................... <getObject(#session).get("lastroom") = "Entry">
  [ 25] jmpifz [114] ............................ if getObject(#session).get("lastroom") = "Entry" then / else
  [ 28] pushsymb 444 ............................ <#entry>
  [ 31] pusharglist 1 ........................... <#entry>
  [ 33] extcall 443 ............................. <threadExists(#entry)>
  [ 36] jmpifz [ 56] ............................ if threadExists(#entry) then
  [ 39] pushsymb 444 ............................ <#entry>
  [ 42] pusharglist 1 ........................... <#entry>
  [ 44] extcall 445 ............................. <getThread(#entry)>
  [ 47] pusharglist 1 ........................... <getThread(#entry)>
  [ 49] objcall 74 .............................. <getThread(#entry).getComponent()>
  [ 51] pusharglistnoret 1 ...................... <getThread(#entry).getComponent()>
  [ 53] objcall 446 ............................. getThread(#entry).getComponent().leaveEntry()
  [ 56] getparam 2 .............................. <tRoomDataStruct>
  [ 58] pusharglist 0 ........................... <>
  [ 60] extcall 50 .............................. <VOID>
  [ 62] eq ...................................... <tRoomDataStruct = VOID>
  [ 63] jmpifz [ 77] ............................ if tRoomDataStruct = VOID then
  [ 66] getparam 0 .............................. <me>
  [ 68] getparam 1 .............................. <tNodeId>
  [ 70] pusharglist 2 ........................... <me, tNodeId>
  [ 72] objcall 414 ............................. <me.getRoomProperties(tNodeId)>
  [ 75] setparam 2 .............................. tRoomDataStruct = me.getRoomProperties(tNodeId)
  [ 77] pushsymb 159 ............................ <#session>
  [ 79] pusharglist 1 ........................... <#session>
  [ 81] extcall 158 ............................. <getObject(#session)>
  [ 83] pushcons 6 .............................. <"lastroom">
  [ 85] getparam 2 .............................. <tRoomDataStruct>
  [ 87] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", tRoomDataStruct>
  [ 89] objcall 429 ............................. getObject(#session).set("lastroom", tRoomDataStruct)
  [ 92] getparam 0 .............................. <me>
  [ 94] pushint16 500 ........................... <500>
  [ 97] pushsymb 296 ............................ <#executeRoomEntry>
  [100] pusharglistnoret 3 ...................... <me, 500, #executeRoomEntry>
  [102] objcall 447 ............................. me.delay(500, #executeRoomEntry)
  [105] pushint8 1 .............................. <1>
  [107] pusharglistnoret 1 ...................... <1>
  [109] extcall 36 .............................. return 1
  [111] jmp [239]
  [114] getparam 1 .............................. <tNodeId>
  [116] pusharglist 1 ........................... <tNodeId>
  [118] extcall 52 .............................. <voidp(tNodeId)>
  [120] jmpifz [189] ............................ if voidp(tNodeId) then / else
  [123] pushsymb 159 ............................ <#session>
  [125] pusharglist 1 ........................... <#session>
  [127] extcall 158 ............................. <getObject(#session)>
  [129] pushcons 6 .............................. <"lastroom">
  [131] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [133] objcall 160 ............................. <getObject(#session).get("lastroom")>
  [135] getobjprop 300 .......................... <getObject(#session).get("lastroom").ilk>
  [138] pushsymb 315 ............................ <#propList>
  [141] eq ...................................... <getObject(#session).get("lastroom").ilk = #propList>
  [142] jmpifz [162] ............................ if getObject(#session).get("lastroom").ilk = #propList then / else
  [145] pushsymb 159 ............................ <#session>
  [147] pusharglist 1 ........................... <#session>
  [149] extcall 158 ............................. <getObject(#session)>
  [151] pushcons 6 .............................. <"lastroom">
  [153] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [155] objcall 160 ............................. <getObject(#session).get("lastroom")>
  [157] setparam 2 .............................. tRoomDataStruct = getObject(#session).get("lastroom")
  [159] jmp [186]
  [162] getparam 0 .............................. <me>
  [164] pushcons 13 ............................. <"Target room's ID expected!">
  [166] pushsymb 296 ............................ <#executeRoomEntry>
  [169] pusharglistnoret 3 ...................... <me, "Target room's ID expected!", #executeRoomEntry>
  [171] extcall 69 .............................. error(me, "Target room's ID expected!", #executeRoomEntry)
  [173] getparam 0 .............................. <me>
  [175] pushcons 14 ............................. <"enterEntry">
  [177] pusharglist 2 ........................... <me, "enterEntry">
  [179] objcall 368 ............................. <me.updateState("enterEntry")>
  [182] pusharglistnoret 1 ...................... <me.updateState("enterEntry")>
  [184] extcall 36 .............................. return me.updateState("enterEntry")
  [186] jmp [225]
  [189] getparam 2 .............................. <tRoomDataStruct>
  [191] pusharglist 0 ........................... <>
  [193] extcall 50 .............................. <VOID>
  [195] eq ...................................... <tRoomDataStruct = VOID>
  [196] jmpifz [210] ............................ if tRoomDataStruct = VOID then
  [199] getparam 0 .............................. <me>
  [201] getparam 1 .............................. <tNodeId>
  [203] pusharglist 2 ........................... <me, tNodeId>
  [205] objcall 414 ............................. <me.getRoomProperties(tNodeId)>
  [208] setparam 2 .............................. tRoomDataStruct = me.getRoomProperties(tNodeId)
  [210] pushsymb 159 ............................ <#session>
  [212] pusharglist 1 ........................... <#session>
  [214] extcall 158 ............................. <getObject(#session)>
  [216] pushcons 6 .............................. <"lastroom">
  [218] getparam 2 .............................. <tRoomDataStruct>
  [220] pusharglistnoret 3 ...................... <getObject(#session), "lastroom", tRoomDataStruct>
  [222] objcall 429 ............................. getObject(#session).set("lastroom", tRoomDataStruct)
  [225] pushsymb 448 ............................ <#enterRoom>
  [228] getparam 2 .............................. <tRoomDataStruct>
  [230] pusharglist 2 ........................... <#enterRoom, tRoomDataStruct>
  [232] extcall 340 ............................. <executeMessage(#enterRoom, tRoomDataStruct)>
  [235] pusharglistnoret 1 ...................... <executeMessage(#enterRoom, tRoomDataStruct)>
  [237] extcall 36 .............................. return executeMessage(#enterRoom, tRoomDataStruct)
  [239] ret
end

on expandNode me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pusharglistnoret 1 ...................... <me.getInterface()>
  [  8] objcall 11 .............................. me.getInterface().clearRoomList()
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 57 .............................. <me.getInterface()>
  [ 16] pushsymb 82 ............................. <#categoryId>
  [ 18] getparam 1 .............................. <tNodeId>
  [ 20] pusharglistnoret 3 ...................... <me.getInterface(), #categoryId, tNodeId>
  [ 22] objcall 4 ............................... me.getInterface().setProperty(#categoryId, tNodeId)
  [ 24] getparam 0 .............................. <me>
  [ 26] getparam 1 .............................. <tNodeId>
  [ 28] pusharglistnoret 2 ...................... <me, tNodeId>
  [ 30] objcall 89 .............................. me.createNaviHistory(tNodeId)
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 1 .............................. <tNodeId>
  [ 36] pusharglist 2 ........................... <me, tNodeId>
  [ 38] objcall 91 .............................. <me.updateInterface(tNodeId)>
  [ 40] pusharglistnoret 1 ...................... <me.updateInterface(tNodeId)>
  [ 42] extcall 36 .............................. return me.updateInterface(tNodeId)
  [ 44] ret
end

on expandHistoryItem me, tClickedItem
  [  0] getprop 423 ............................. <pNaviHistory>
  [  3] pusharglist 1 ........................... <pNaviHistory>
  [  5] extcall 101 ............................. <listp(pNaviHistory)>
  [  7] not ..................................... <not listp(pNaviHistory)>
  [  8] jmpifz [ 16] ............................ if not listp(pNaviHistory) then
  [ 11] pushzero ................................ <0>
  [ 12] pusharglistnoret 1 ...................... <0>
  [ 14] extcall 36 .............................. return 0
  [ 16] getparam 1 .............................. <tClickedItem>
  [ 18] getprop 423 ............................. <pNaviHistory>
  [ 21] getobjprop 125 .......................... <pNaviHistory.count>
  [ 23] gt ...................................... <tClickedItem > pNaviHistory.count>
  [ 24] jmpifz [ 34] ............................ if tClickedItem > pNaviHistory.count then
  [ 27] getprop 423 ............................. <pNaviHistory>
  [ 30] getobjprop 125 .......................... <pNaviHistory.count>
  [ 32] setparam 1 .............................. tClickedItem = pNaviHistory.count
  [ 34] getparam 1 .............................. <tClickedItem>
  [ 36] pushzero ................................ <0>
  [ 37] eq ...................................... <tClickedItem = 0>
  [ 38] jmpifz [ 46] ............................ if tClickedItem = 0 then
  [ 41] pushzero ................................ <0>
  [ 42] pusharglistnoret 1 ...................... <0>
  [ 44] extcall 36 .............................. return 0
  [ 46] getprop 423 ............................. <pNaviHistory>
  [ 49] getparam 1 .............................. <tClickedItem>
  [ 51] pusharglist 2 ........................... <pNaviHistory, tClickedItem>
  [ 53] objcall 51 .............................. <pNaviHistory[tClickedItem]>
  [ 55] pushsymb 444 ............................ <#entry>
  [ 58] eq ...................................... <pNaviHistory[tClickedItem] = #entry>
  [ 59] jmpifz [ 96] ............................ if pNaviHistory[tClickedItem] = #entry then / else
  [ 62] pushcons 5 .............................. <"connection.info.id">
  [ 64] pusharglist 1 ........................... <"connection.info.id">
  [ 66] extcall 131 ............................. <getVariable("connection.info.id")>
  [ 68] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 70] extcall 450 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 73] pushcons 15 ............................. <"QUIT">
  [ 75] pusharglistnoret 2 ...................... <getConnection(getVariable("connection.info.id")), "QUIT">
  [ 77] objcall 451 ............................. getConnection(getVariable("connection.info.id")).send("QUIT")
  [ 80] getparam 0 .............................. <me>
  [ 82] pushcons 14 ............................. <"enterEntry">
  [ 84] pusharglist 2 ........................... <me, "enterEntry">
  [ 86] objcall 368 ............................. <me.updateState("enterEntry")>
  [ 89] pusharglistnoret 1 ...................... <me.updateState("enterEntry")>
  [ 91] extcall 36 .............................. return me.updateState("enterEntry")
  [ 93] jmp [116]
  [ 96] getparam 0 .............................. <me>
  [ 98] getprop 423 ............................. <pNaviHistory>
  [101] getparam 1 .............................. <tClickedItem>
  [103] pusharglist 2 ........................... <pNaviHistory, tClickedItem>
  [105] objcall 51 .............................. <pNaviHistory[tClickedItem]>
  [107] pusharglist 2 ........................... <me, pNaviHistory[tClickedItem]>
  [109] objcall 302 ............................. <me.expandNode(pNaviHistory[tClickedItem])>
  [112] pusharglistnoret 1 ...................... <me.expandNode(pNaviHistory[tClickedItem])>
  [114] extcall 36 .............................. return me.expandNode(pNaviHistory[tClickedItem])
  [116] ret
end

on createNaviHistory me, tCategoryId
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setprop 423 ............................. pNaviHistory = []
  [  6] pushcons 16 ............................. <EMPTY>
  [  8] setlocal 0 .............................. tText = EMPTY
  [ 10] getparam 1 .............................. <tCategoryId>
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 50 .............................. <VOID>
  [ 16] eq ...................................... <tCategoryId = VOID>
  [ 17] jmpifz [ 25] ............................ if tCategoryId = VOID then
  [ 20] pushzero ................................ <0>
  [ 21] pusharglistnoret 1 ...................... <0>
  [ 23] extcall 36 .............................. return 0
  [ 25] getparam 0 .............................. <me>
  [ 27] getparam 1 .............................. <tCategoryId>
  [ 29] pusharglist 2 ........................... <me, tCategoryId>
  [ 31] objcall 397 ............................. <me.getTreeInfoFor(tCategoryId)>
  [ 34] setlocal 1 .............................. tParentInfo = me.getTreeInfoFor(tCategoryId)
  [ 36] getparam 1 .............................. <tCategoryId>
  [ 38] getprop 415 ............................. <pRootUnitCatId>
  [ 41] eq ...................................... <tCategoryId = pRootUnitCatId>
  [ 42] getparam 1 .............................. <tCategoryId>
  [ 44] getprop 417 ............................. <pRootFlatCatId>
  [ 47] eq ...................................... <tCategoryId = pRootFlatCatId>
  [ 48] or ...................................... <(tCategoryId = pRootUnitCatId) or (tCategoryId = pRootFlatCatId)>
  [ 49] jmpifz [ 55] ............................ if (tCategoryId = pRootUnitCatId) or (tCategoryId = pRootFlatCatId) then
  [ 52] pushzero ................................ <0>
  [ 53] setlocal 1 .............................. tParentInfo = 0
  [ 55] getlocal 1 .............................. <tParentInfo>
  [ 57] pusharglist 1 ........................... <tParentInfo>
  [ 59] extcall 101 ............................. <listp(tParentInfo)>
  [ 61] jmpifz [ 86] ............................ if listp(tParentInfo) then
  [ 64] getlocal 1 .............................. <tParentInfo>
  [ 66] pushsymb 319 ............................ <#parentid>
  [ 69] pusharglist 2 ........................... <tParentInfo, #parentid>
  [ 71] objcall 51 .............................. <tParentInfo[#parentid]>
  [ 73] setlocal 2 .............................. tParentId = tParentInfo[#parentid]
  [ 75] getparam 0 .............................. <me>
  [ 77] getlocal 2 .............................. <tParentId>
  [ 79] pusharglist 2 ........................... <me, tParentId>
  [ 81] objcall 397 ............................. <me.getTreeInfoFor(tParentId)>
  [ 84] setlocal 1 .............................. tParentInfo = me.getTreeInfoFor(tParentId)
  [ 86] getlocal 1 .............................. <tParentInfo>
  [ 88] pushzero ................................ <0>
  [ 89] nteq .................................... <tParentInfo <> 0>
  [ 90] jmpifz [205] ............................ repeat while tParentInfo <> 0
  [ 93] getprop 423 ............................. <pNaviHistory>
  [ 96] getlocal 1 .............................. <tParentInfo>
  [ 98] pushsymb 319 ............................ <#parentid>
  [101] pusharglist 2 ........................... <tParentInfo, #parentid>
  [103] objcall 51 .............................. <tParentInfo[#parentid]>
  [105] pusharglist 2 ........................... <pNaviHistory, tParentInfo[#parentid]>
  [107] objcall 352 ............................. <pNaviHistory.getPos(tParentInfo[#parentid])>
  [110] pushzero ................................ <0>
  [111] gt ...................................... <pNaviHistory.getPos(tParentInfo[#parentid]) > 0>
  [112] jmpifz [131] ............................ if pNaviHistory.getPos(tParentInfo[#parentid]) > 0 then
  [115] pushzero ................................ <0>
  [116] setlocal 1 .............................. tParentInfo = 0
  [118] getparam 0 .............................. <me>
  [120] pushcons 17 ............................. <"Category loop detected in navigation data!">
  [122] pushsymb 89 ............................. <#createNaviHistory>
  [124] pusharglistnoret 3 ...................... <me, "Category loop detected in navigation data!", #createNaviHistory>
  [126] extcall 69 .............................. error(me, "Category loop detected in navigation data!", #createNaviHistory)
  [128] jmp [203] ............................... next repeat
  [131] getprop 423 ............................. <pNaviHistory>
  [134] pushint8 1 .............................. <1>
  [136] getlocal 2 .............................. <tParentId>
  [138] pusharglistnoret 3 ...................... <pNaviHistory, 1, tParentId>
  [140] objcall 453 ............................. pNaviHistory.addAt(1, tParentId)
  [143] getlocal 1 .............................. <tParentInfo>
  [145] pushsymb 76 ............................. <#name>
  [147] pusharglist 2 ........................... <tParentInfo, #name>
  [149] objcall 51 .............................. <tParentInfo[#name]>
  [151] pushcons 18 ............................. <RETURN>
  [153] joinstr ................................. <tParentInfo[#name] & RETURN>
  [154] getlocal 0 .............................. <tText>
  [156] joinstr ................................. <tParentInfo[#name] & RETURN & tText>
  [157] setlocal 0 .............................. tText = tParentInfo[#name] & RETURN & tText
  [159] getlocal 2 .............................. <tParentId>
  [161] getprop 415 ............................. <pRootUnitCatId>
  [164] eq ...................................... <tParentId = pRootUnitCatId>
  [165] getlocal 2 .............................. <tParentId>
  [167] getprop 417 ............................. <pRootFlatCatId>
  [170] eq ...................................... <tParentId = pRootFlatCatId>
  [171] or ...................................... <(tParentId = pRootUnitCatId) or (tParentId = pRootFlatCatId)>
  [172] jmpifz [181] ............................ if (tParentId = pRootUnitCatId) or (tParentId = pRootFlatCatId) then
  [175] pushzero ................................ <0>
  [176] setlocal 1 .............................. tParentInfo = 0
  [178] jmp [203] ............................... next repeat
  [181] getlocal 1 .............................. <tParentInfo>
  [183] pushsymb 319 ............................ <#parentid>
  [186] pusharglist 2 ........................... <tParentInfo, #parentid>
  [188] objcall 51 .............................. <tParentInfo[#parentid]>
  [190] setlocal 2 .............................. tParentId = tParentInfo[#parentid]
  [192] getparam 0 .............................. <me>
  [194] getlocal 2 .............................. <tParentId>
  [196] pusharglist 2 ........................... <me, tParentId>
  [198] objcall 397 ............................. <me.getTreeInfoFor(tParentId)>
  [201] setlocal 1 .............................. tParentInfo = me.getTreeInfoFor(tParentId)
  [203] endrepeat [ 86]
  [205] pushsymb 159 ............................ <#session>
  [207] pusharglist 1 ........................... <#session>
  [209] extcall 158 ............................. <getObject(#session)>
  [211] pushcons 6 .............................. <"lastroom">
  [213] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [215] objcall 160 ............................. <getObject(#session).get("lastroom")>
  [217] pushcons 7 .............................. <"Entry">
  [219] nteq .................................... <getObject(#session).get("lastroom") <> "Entry">
  [220] jmpifz [250] ............................ if getObject(#session).get("lastroom") <> "Entry" then
  [223] getprop 423 ............................. <pNaviHistory>
  [226] pushint8 1 .............................. <1>
  [228] pushsymb 444 ............................ <#entry>
  [231] pusharglistnoret 3 ...................... <pNaviHistory, 1, #entry>
  [233] objcall 453 ............................. pNaviHistory.addAt(1, #entry)
  [236] pushcons 19 ............................. <"nav_hotelview">
  [238] pusharglist 1 ........................... <"nav_hotelview">
  [240] extcall 26 .............................. <getText("nav_hotelview")>
  [242] pushcons 18 ............................. <RETURN>
  [244] joinstr ................................. <getText("nav_hotelview") & RETURN>
  [245] getlocal 0 .............................. <tText>
  [247] joinstr ................................. <getText("nav_hotelview") & RETURN & tText>
  [248] setlocal 0 .............................. tText = getText("nav_hotelview") & RETURN & tText
  [250] pushint16 -30003 ........................ <-30003>
  [253] pushzero ................................ <0>
  [254] pushzero ................................ <0>
  [255] pushzero ................................ <0>
  [256] pushzero ................................ <0>
  [257] pushzero ................................ <0>
  [258] pushzero ................................ <0>
  [259] pushzero ................................ <0>
  [260] pushzero ................................ <0>
  [261] deletechunk 5 ........................... delete char -30003 of tText
  [263] getparam 0 .............................. <me>
  [265] pusharglist 1 ........................... <me>
  [267] objcall 57 .............................. <me.getInterface()>
  [269] getparam 1 .............................. <tCategoryId>
  [271] getlocal 0 .............................. <tText>
  [273] pusharglistnoret 3 ...................... <me.getInterface(), tCategoryId, tText>
  [275] objcall 12 .............................. me.getInterface().renderHistory(tCategoryId, tText)
  [277] pushint8 1 .............................. <1>
  [279] pusharglistnoret 1 ...................... <1>
  [281] extcall 36 .............................. return 1
  [283] ret
end

on callNodeUpdate me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pusharglist 1 ........................... <me.getInterface()>
  [  8] objcall 2 ............................... <me.getInterface().getNaviView()>
  [ 10] peek 0 .................................. case me.getInterface().getNaviView() of
  [ 12] pushsymb 43 ............................. <#unit>
  [ 14] nteq
  [ 15] jmpifz [ 26] ............................ (case) #unit, ...
  [ 18] peek 0
  [ 20] pushsymb 44 ............................. <#flat>
  [ 22] eq
  [ 23] jmpifz [ 54] ............................ (case) ..., #flat:
  [ 26] pop 1
  [ 28] getparam 0 .............................. <me>
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglist 1 ........................... <me>
  [ 34] objcall 57 .............................. <me.getInterface()>
  [ 36] pushsymb 82 ............................. <#categoryId>
  [ 38] pusharglist 2 ........................... <me.getInterface(), #categoryId>
  [ 40] objcall 3 ............................... <me.getInterface().getProperty(#categoryId)>
  [ 42] pusharglist 2 ........................... <me, me.getInterface().getProperty(#categoryId)>
  [ 44] objcall 406 ............................. <me.sendNavigate(me.getInterface().getProperty(#categoryId))>
  [ 47] pusharglistnoret 1 ...................... <me.sendNavigate(me.getInterface().getProperty(#categoryId))>
  [ 49] extcall 36 .............................. return me.sendNavigate(me.getInterface().getProperty(#categoryId))
  [ 51] jmp [117]
  [ 54] peek 0
  [ 56] pushsymb 45 ............................. <#own>
  [ 58] eq
  [ 59] jmpifz [ 82] ............................ (case) #own:
  [ 62] pop 1
  [ 64] getparam 0 .............................. <me>
  [ 66] pusharglist 1 ........................... <me>
  [ 68] objcall 74 .............................. <me.getComponent()>
  [ 70] pusharglist 1 ........................... <me.getComponent()>
  [ 72] objcall 392 ............................. <me.getComponent().sendGetOwnFlats()>
  [ 75] pusharglistnoret 1 ...................... <me.getComponent().sendGetOwnFlats()>
  [ 77] extcall 36 .............................. return me.getComponent().sendGetOwnFlats()
  [ 79] jmp [117]
  [ 82] peek 0
  [ 84] pushsymb 47 ............................. <#fav>
  [ 86] eq
  [ 87] jmpifz [110] ............................ (case) #fav:
  [ 90] pop 1
  [ 92] getparam 0 .............................. <me>
  [ 94] pusharglist 1 ........................... <me>
  [ 96] objcall 74 .............................. <me.getComponent()>
  [ 98] pusharglist 1 ........................... <me.getComponent()>
  [100] objcall 363 ............................. <me.getComponent().sendGetFavoriteFlats()>
  [103] pusharglistnoret 1 ...................... <me.getComponent().sendGetFavoriteFlats()>
  [105] extcall 36 .............................. return me.getComponent().sendGetFavoriteFlats()
  [107] jmp [117] ............................... (case) otherwise:
  [110] pop 1
  [112] pushzero ................................ <0>
  [113] pusharglistnoret 1 ...................... <0>
  [115] extcall 36 .............................. return 0
  [117] pop 1 ................................... end case
  [119] ret
end

on showHideFullRooms me, tNodeId
  [  0] getprop 424 ............................. <pHideFullRoomsFlag>
  [  3] not ..................................... <not pHideFullRoomsFlag>
  [  4] setprop 424 ............................. pHideFullRoomsFlag = not pHideFullRoomsFlag
  [  7] getparam 0 .............................. <me>
  [  9] getparam 1 .............................. <tNodeId>
  [ 11] pusharglist 2 ........................... <me, tNodeId>
  [ 13] objcall 91 .............................. <me.updateInterface(tNodeId)>
  [ 15] pusharglistnoret 1 ...................... <me.updateInterface(tNodeId)>
  [ 17] extcall 36 .............................. return me.updateInterface(tNodeId)
  [ 19] ret
end

on roomkioskGoingFlat me, tRoomProps
  [  0] getparam 1 .............................. <tRoomProps>
  [  2] pushsymb 162 ............................ <#flatId>
  [  4] getparam 1 .............................. <tRoomProps>
  [  6] pushsymb 294 ............................ <#id>
  [  9] pusharglist 2 ........................... <tRoomProps, #id>
  [ 11] objcall 51 .............................. <tRoomProps[#id]>
  [ 13] pusharglistnoret 3 ...................... <tRoomProps, #flatId, tRoomProps[#id]>
  [ 15] objcall 55 .............................. tRoomProps[#flatId] = tRoomProps[#id]
  [ 17] getparam 1 .............................. <tRoomProps>
  [ 19] pushsymb 294 ............................ <#id>
  [ 22] pushcons 20 ............................. <"f_">
  [ 24] getparam 1 .............................. <tRoomProps>
  [ 26] pushsymb 294 ............................ <#id>
  [ 29] pusharglist 2 ........................... <tRoomProps, #id>
  [ 31] objcall 51 .............................. <tRoomProps[#id]>
  [ 33] joinstr ................................. <"f_" & tRoomProps[#id]>
  [ 34] pusharglistnoret 3 ...................... <tRoomProps, #id, "f_" & tRoomProps[#id]>
  [ 36] objcall 55 .............................. tRoomProps[#id] = "f_" & tRoomProps[#id]
  [ 38] getparam 1 .............................. <tRoomProps>
  [ 40] pushsymb 145 ............................ <#nodeType>
  [ 42] pushint8 2 .............................. <2>
  [ 44] pusharglistnoret 3 ...................... <tRoomProps, #nodeType, 2>
  [ 46] objcall 55 .............................. tRoomProps[#nodeType] = 2
  [ 48] getprop 421 ............................. <pNodeCache>
  [ 51] pushsymb 45 ............................. <#own>
  [ 53] pusharglist 2 ........................... <pNodeCache, #own>
  [ 55] objcall 51 .............................. <pNodeCache[#own]>
  [ 57] pusharglist 0 ........................... <>
  [ 59] extcall 50 .............................. <VOID>
  [ 61] eq ...................................... <pNodeCache[#own] = VOID>
  [ 62] jmpifz [ 83] ............................ if pNodeCache[#own] = VOID then
  [ 65] getprop 421 ............................. <pNodeCache>
  [ 68] pushsymb 45 ............................. <#own>
  [ 70] pushsymb 299 ............................ <#children>
  [ 73] pusharglist 0 ........................... <[:]>
  [ 75] pushproplist ............................ <[:]>
  [ 76] pusharglist 2 ........................... <[#children: [:]]>
  [ 78] pushproplist ............................ <[#children: [:]]>
  [ 79] pusharglistnoret 3 ...................... <pNodeCache, #own, [#children: [:]]>
  [ 81] objcall 55 .............................. pNodeCache[#own] = [#children: [:]]
  [ 83] getprop 421 ............................. <pNodeCache>
  [ 86] pushsymb 45 ............................. <#own>
  [ 88] pusharglist 2 ........................... <pNodeCache, #own>
  [ 90] objcall 51 .............................. <pNodeCache[#own]>
  [ 92] pushsymb 299 ............................ <#children>
  [ 95] pusharglist 2 ........................... <pNodeCache[#own], #children>
  [ 97] objcall 51 .............................. <pNodeCache[#own][#children]>
  [ 99] getparam 1 .............................. <tRoomProps>
  [101] pushsymb 294 ............................ <#id>
  [104] pusharglist 2 ........................... <tRoomProps, #id>
  [106] objcall 51 .............................. <tRoomProps[#id]>
  [108] getparam 1 .............................. <tRoomProps>
  [110] pusharglistnoret 3 ...................... <pNodeCache[#own][#children], tRoomProps[#id], tRoomProps>
  [112] objcall 439 ............................. pNodeCache[#own][#children].setaProp(tRoomProps[#id], tRoomProps)
  [115] getparam 0 .............................. <me>
  [117] pusharglist 1 ........................... <me>
  [119] objcall 74 .............................. <me.getComponent()>
  [121] getparam 1 .............................. <tRoomProps>
  [123] pushsymb 294 ............................ <#id>
  [126] pusharglist 2 ........................... <tRoomProps, #id>
  [128] objcall 51 .............................. <tRoomProps[#id]>
  [130] pusharglistnoret 2 ...................... <me.getComponent(), tRoomProps[#id]>
  [132] objcall 296 ............................. me.getComponent().executeRoomEntry(tRoomProps[#id])
  [135] pushint8 1 .............................. <1>
  [137] pusharglistnoret 1 ...................... <1>
  [139] extcall 36 .............................. return 1
  [141] ret
end

on getFlatPassword me, tFlatID
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 20 ............................. <"f_">
  [  4] getparam 1 .............................. <tFlatID>
  [  6] joinstr ................................. <"f_" & tFlatID>
  [  7] pusharglist 2 ........................... <me, "f_" & tFlatID>
  [  9] objcall 144 ............................. <me.getNodeInfo("f_" & tFlatID)>
  [ 11] setlocal 0 .............................. tFlatInfo = me.getNodeInfo("f_" & tFlatID)
  [ 13] getlocal 0 .............................. <tFlatInfo>
  [ 15] pushzero ................................ <0>
  [ 16] eq ...................................... <tFlatInfo = 0>
  [ 17] jmpifz [ 35] ............................ if tFlatInfo = 0 then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 21 ............................. <"Flat info is VOID">
  [ 24] pushsymb 399 ............................ <#getFlatPassword>
  [ 27] pusharglist 3 ........................... <me, "Flat info is VOID", #getFlatPassword>
  [ 29] extcall 69 .............................. <error(me, "Flat info is VOID", #getFlatPassword)>
  [ 31] pusharglistnoret 1 ...................... <error(me, "Flat info is VOID", #getFlatPassword)>
  [ 33] extcall 36 .............................. return error(me, "Flat info is VOID", #getFlatPassword)
  [ 35] getlocal 0 .............................. <tFlatInfo>
  [ 37] pushsymb 147 ............................ <#door>
  [ 39] pusharglist 2 ........................... <tFlatInfo, #door>
  [ 41] objcall 51 .............................. <tFlatInfo[#door]>
  [ 43] pushcons 22 ............................. <"password">
  [ 45] nteq .................................... <tFlatInfo[#door] <> "password">
  [ 46] jmpifz [ 54] ............................ if tFlatInfo[#door] <> "password" then
  [ 49] pushzero ................................ <0>
  [ 50] pusharglistnoret 1 ...................... <0>
  [ 52] extcall 36 .............................. return 0
  [ 54] getlocal 0 .............................. <tFlatInfo>
  [ 56] pushsymb 336 ............................ <#password>
  [ 59] pusharglist 2 ........................... <tFlatInfo, #password>
  [ 61] objcall 51 .............................. <tFlatInfo[#password]>
  [ 63] pusharglist 1 ........................... <tFlatInfo[#password]>
  [ 65] extcall 52 .............................. <voidp(tFlatInfo[#password])>
  [ 67] jmpifz [ 78] ............................ if voidp(tFlatInfo[#password]) then / else
  [ 70] pushzero ................................ <0>
  [ 71] pusharglistnoret 1 ...................... <0>
  [ 73] extcall 36 .............................. return 0
  [ 75] jmp [ 91]
  [ 78] getlocal 0 .............................. <tFlatInfo>
  [ 80] pushsymb 336 ............................ <#password>
  [ 83] pusharglist 2 ........................... <tFlatInfo, #password>
  [ 85] objcall 51 .............................. <tFlatInfo[#password]>
  [ 87] pusharglistnoret 1 ...................... <tFlatInfo[#password]>
  [ 89] extcall 36 .............................. return tFlatInfo[#password]
  [ 91] ret
end

on flatAccessResult me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] peek 0 .................................. case tMsg of
  [  4] pushcons 23 ............................. <"flat_letin">
  [  6] nteq
  [  7] jmpifz [ 18] ............................ (case) "flat_letin", ...
  [ 10] peek 0
  [ 12] pushcons 24 ............................. <"flatpassword_ok">
  [ 14] eq
  [ 15] jmpifz [ 21] ............................ (case) ..., "flatpassword_ok":
  [ 18] jmp [ 57]
  [ 21] peek 0
  [ 23] pushcons 25 ............................. <"incorrect flat password">
  [ 25] nteq
  [ 26] jmpifz [ 37] ............................ (case) "incorrect flat password", ...
  [ 29] peek 0
  [ 31] pushcons 26 ............................. <"password required">
  [ 33] eq
  [ 34] jmpifz [ 57] ............................ (case) ..., "password required":
  [ 37] getparam 0 .............................. <me>
  [ 39] pusharglist 1 ........................... <me>
  [ 41] objcall 57 .............................. <me.getInterface()>
  [ 43] pusharglistnoret 1 ...................... <me.getInterface()>
  [ 45] objcall 268 ............................. me.getInterface().flatPasswordIncorrect()
  [ 48] getparam 0 .............................. <me>
  [ 50] pushcons 14 ............................. <"enterEntry">
  [ 52] pusharglistnoret 2 ...................... <me, "enterEntry">
  [ 54] objcall 368 ............................. me.updateState("enterEntry")
  [ 57] pop 1 ................................... end case
  [ 59] ret
end

on delayedAlert me, tAlert, tDelay
  [  0] getparam 2 .............................. <tDelay>
  [  2] pushzero ................................ <0>
  [  3] gt ...................................... <tDelay > 0>
  [  4] jmpifz [ 32] ............................ if tDelay > 0 then / else
  [  7] pushsymb 459 ............................ <#temp>
  [ 10] getparam 2 .............................. <tDelay>
  [ 12] pushsymb 401 ............................ <#delayedAlert>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 70 .............................. <me.getID()>
  [ 21] getparam 1 .............................. <tAlert>
  [ 23] pushint8 1 .............................. <1>
  [ 25] pusharglistnoret 6 ...................... <#temp, tDelay, #delayedAlert, me.getID(), tAlert, 1>
  [ 27] extcall 117 ............................. createTimeout(#temp, tDelay, #delayedAlert, me.getID(), tAlert, 1)
  [ 29] jmp [ 48]
  [ 32] pushsymb 341 ............................ <#alert>
  [ 35] pushsymb 342 ............................ <#msg>
  [ 38] getparam 1 .............................. <tAlert>
  [ 40] pusharglist 2 ........................... <[#msg: tAlert]>
  [ 42] pushproplist ............................ <[#msg: tAlert]>
  [ 43] pusharglistnoret 2 ...................... <#alert, [#msg: tAlert]>
  [ 45] extcall 340 ............................. executeMessage(#alert, [#msg: tAlert])
  [ 48] ret
end

on checkCacheForNode me, tNodeId
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 50 .............................. <VOID>
  [  6] eq ...................................... <tNodeId = VOID>
  [  7] jmpifz [ 15] ............................ if tNodeId = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 36 .............................. return 0
  [ 15] getprop 422 ............................. <pNodeCacheExpList>
  [ 18] getparam 1 .............................. <tNodeId>
  [ 20] pusharglist 2 ........................... <pNodeCacheExpList, tNodeId>
  [ 22] objcall 51 .............................. <pNodeCacheExpList[tNodeId]>
  [ 24] pusharglist 0 ........................... <>
  [ 26] extcall 50 .............................. <VOID>
  [ 28] eq ...................................... <pNodeCacheExpList[tNodeId] = VOID>
  [ 29] jmpifz [ 37] ............................ if pNodeCacheExpList[tNodeId] = VOID then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 36 .............................. return 0
  [ 37] getparam 1 .............................. <tNodeId>
  [ 39] pushsymb 46 ............................. <#src>
  [ 41] eq ...................................... <tNodeId = #src>
  [ 42] jmpifz [ 51] ............................ if tNodeId = #src then
  [ 45] pushint8 1 .............................. <1>
  [ 47] pusharglistnoret 1 ...................... <1>
  [ 49] extcall 36 .............................. return 1
  [ 51] getmovieprop 462 ........................ <the milliSeconds>
  [ 54] getprop 422 ............................. <pNodeCacheExpList>
  [ 57] getparam 1 .............................. <tNodeId>
  [ 59] pusharglist 2 ........................... <pNodeCacheExpList, tNodeId>
  [ 61] objcall 51 .............................. <pNodeCacheExpList[tNodeId]>
  [ 63] sub ..................................... <the milliSeconds - pNodeCacheExpList[tNodeId]>
  [ 64] getprop 425 ............................. <pUpdateInterval>
  [ 67] lt ...................................... <(the milliSeconds - pNodeCacheExpList[tNodeId]) < pUpdateInterval>
  [ 68] jmpifz [ 77] ............................ if (the milliSeconds - pNodeCacheExpList[tNodeId]) < pUpdateInterval then
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglistnoret 1 ...................... <1>
  [ 75] extcall 36 .............................. return 1
  [ 77] pushzero ................................ <0>
  [ 78] pusharglistnoret 1 ...................... <0>
  [ 80] extcall 36 .............................. return 0
  [ 82] ret
end

on feedNewRoomList me, tid
  [  0] getparam 1 .............................. <tid>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 50 .............................. <VOID>
  [  6] eq ...................................... <tid = VOID>
  [  7] jmpifz [ 15] ............................ if tid = VOID then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 36 .............................. return 0
  [ 15] getparam 0 .............................. <me>
  [ 17] getparam 1 .............................. <tid>
  [ 19] pusharglist 2 ........................... <me, tid>
  [ 21] objcall 144 ............................. <me.getNodeInfo(tid)>
  [ 23] setlocal 0 .............................. tNodeInfo = me.getNodeInfo(tid)
  [ 25] getlocal 0 .............................. <tNodeInfo>
  [ 27] pusharglist 1 ........................... <tNodeInfo>
  [ 29] extcall 101 ............................. <listp(tNodeInfo)>
  [ 31] not ..................................... <not listp(tNodeInfo)>
  [ 32] getparam 0 .............................. <me>
  [ 34] getparam 1 .............................. <tid>
  [ 36] pusharglist 2 ........................... <me, tid>
  [ 38] objcall 402 ............................. <me.checkCacheForNode(tid)>
  [ 41] not ..................................... <not me.checkCacheForNode(tid)>
  [ 42] or ...................................... <not listp(tNodeInfo) or not me.checkCacheForNode(tid)>
  [ 43] jmpifz [ 57] ............................ if not listp(tNodeInfo) or not me.checkCacheForNode(tid) then
  [ 46] getparam 0 .............................. <me>
  [ 48] pusharglist 1 ........................... <me>
  [ 50] objcall 389 ............................. <me.callNodeUpdate()>
  [ 53] pusharglistnoret 1 ...................... <me.callNodeUpdate()>
  [ 55] extcall 36 .............................. return me.callNodeUpdate()
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglist 1 ........................... <me>
  [ 61] objcall 57 .............................. <me.getInterface()>
  [ 63] getlocal 0 .............................. <tNodeInfo>
  [ 65] pushsymb 294 ............................ <#id>
  [ 68] pusharglist 2 ........................... <tNodeInfo, #id>
  [ 70] objcall 51 .............................. <tNodeInfo[#id]>
  [ 72] getlocal 0 .............................. <tNodeInfo>
  [ 74] pushsymb 299 ............................ <#children>
  [ 77] pusharglist 2 ........................... <tNodeInfo, #children>
  [ 79] objcall 51 .............................. <tNodeInfo[#children]>
  [ 81] pusharglistnoret 3 ...................... <me.getInterface(), tNodeInfo[#id], tNodeInfo[#children]>
  [ 83] objcall 9 ............................... me.getInterface().updateRoomList(tNodeInfo[#id], tNodeInfo[#children])
  [ 85] pushint8 1 .............................. <1>
  [ 87] pusharglistnoret 1 ...................... <1>
  [ 89] extcall 36 .............................. return 1
  [ 91] ret
end

on purgeNodeCacheExpList me
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getprop 422 ............................. <pNodeCacheExpList>
  [  9] getobjprop 125 .......................... <pNodeCacheExpList.count>
  [ 11] lteq
  [ 12] jmpifz [ 76] ............................ repeat with i = 1 to pNodeCacheExpList.count
  [ 15] getmovieprop 462 ........................ <the milliSeconds>
  [ 18] getprop 422 ............................. <pNodeCacheExpList>
  [ 21] getlocal 0 .............................. <i>
  [ 23] pusharglist 2 ........................... <pNodeCacheExpList, i>
  [ 25] objcall 51 .............................. <pNodeCacheExpList[i]>
  [ 27] sub ..................................... <the milliSeconds - pNodeCacheExpList[i]>
  [ 28] getprop 425 ............................. <pUpdateInterval>
  [ 31] gt ...................................... <(the milliSeconds - pNodeCacheExpList[i]) > pUpdateInterval>
  [ 32] jmpifz [ 67] ............................ if (the milliSeconds - pNodeCacheExpList[i]) > pUpdateInterval then
  [ 35] getprop 422 ............................. <pNodeCacheExpList>
  [ 38] getlocal 0 .............................. <i>
  [ 40] pusharglist 2 ........................... <pNodeCacheExpList, i>
  [ 42] objcall 324 ............................. <pNodeCacheExpList.getPropAt(i)>
  [ 45] setlocal 1 .............................. tid = pNodeCacheExpList.getPropAt(i)
  [ 47] getprop 422 ............................. <pNodeCacheExpList>
  [ 50] getlocal 0 .............................. <i>
  [ 52] pusharglistnoret 2 ...................... <pNodeCacheExpList, i>
  [ 54] objcall 372 ............................. pNodeCacheExpList.deleteAt(i)
  [ 57] getprop 421 ............................. <pNodeCache>
  [ 60] getlocal 1 .............................. <tid>
  [ 62] pusharglistnoret 2 ...................... <pNodeCache, tid>
  [ 64] objcall 463 ............................. pNodeCache.deleteProp(tid)
  [ 67] pushint8 1
  [ 69] getlocal 0
  [ 71] add
  [ 72] setlocal 0
  [ 74] endrepeat [  4]
  [ 76] ret
end

on saveFlatResults me, tMsg
  [  0] getparam 1 .............................. <tMsg>
  [  2] pusharglist 1 ........................... <tMsg>
  [  4] extcall 101 ............................. <listp(tMsg)>
  [  6] jmpifz [ 43] ............................ if listp(tMsg) then
  [  9] getparam 1 .............................. <tMsg>
  [ 11] pushsymb 294 ............................ <#id>
  [ 14] pusharglist 2 ........................... <tMsg, #id>
  [ 16] objcall 51 .............................. <tMsg[#id]>
  [ 18] setlocal 0 .............................. tid = tMsg[#id]
  [ 20] getprop 421 ............................. <pNodeCache>
  [ 23] getlocal 0 .............................. <tid>
  [ 25] getparam 1 .............................. <tMsg>
  [ 27] pusharglistnoret 3 ...................... <pNodeCache, tid, tMsg>
  [ 29] objcall 55 .............................. pNodeCache[tid] = tMsg
  [ 31] getprop 422 ............................. <pNodeCacheExpList>
  [ 34] getlocal 0 .............................. <tid>
  [ 36] getmovieprop 462 ........................ <the milliSeconds>
  [ 39] pusharglistnoret 3 ...................... <pNodeCacheExpList, tid, the milliSeconds>
  [ 41] objcall 55 .............................. pNodeCacheExpList[tid] = the milliSeconds
  [ 43] getparam 0 .............................. <me>
  [ 45] getparam 1 .............................. <tMsg>
  [ 47] pushsymb 294 ............................ <#id>
  [ 50] pusharglist 2 ........................... <tMsg, #id>
  [ 52] objcall 51 .............................. <tMsg[#id]>
  [ 54] pusharglist 2 ........................... <me, tMsg[#id]>
  [ 56] objcall 403 ............................. <me.feedNewRoomList(tMsg[#id])>
  [ 59] pusharglistnoret 1 ...................... <me.feedNewRoomList(tMsg[#id])>
  [ 61] extcall 36 .............................. return me.feedNewRoomList(tMsg[#id])
  [ 63] ret
end

on sendNavigate me, tNodeId, tDepth
  [  0] getprop 426 ............................. <pConnectionId>
  [  3] pusharglist 1 ........................... <pConnectionId>
  [  5] extcall 464 ............................. <connectionExists(pConnectionId)>
  [  8] not ..................................... <not connectionExists(pConnectionId)>
  [  9] jmpifz [ 31] ............................ if not connectionExists(pConnectionId) then
  [ 12] getparam 0 .............................. <me>
  [ 14] pushcons 27 ............................. <"Connection not found:">
  [ 16] getprop 426 ............................. <pConnectionId>
  [ 19] joinpadstr .............................. <"Connection not found:" && pConnectionId>
  [ 20] pushsymb 406 ............................ <#sendNavigate>
  [ 23] pusharglist 3 ........................... <me, "Connection not found:" && pConnectionId, #sendNavigate>
  [ 25] extcall 69 .............................. <error(me, "Connection not found:" && pConnectionId, #sendNavigate)>
  [ 27] pusharglistnoret 1 ...................... <error(me, "Connection not found:" && pConnectionId, #sendNavigate)>
  [ 29] extcall 36 .............................. return error(me, "Connection not found:" && pConnectionId, #sendNavigate)
  [ 31] getparam 1 .............................. <tNodeId>
  [ 33] pusharglist 0 ........................... <>
  [ 35] extcall 50 .............................. <VOID>
  [ 37] eq ...................................... <tNodeId = VOID>
  [ 38] jmpifz [ 56] ............................ if tNodeId = VOID then
  [ 41] getparam 0 .............................. <me>
  [ 43] pushcons 28 ............................. <"Node id is VOID">
  [ 45] pushsymb 406 ............................ <#sendNavigate>
  [ 48] pusharglist 3 ........................... <me, "Node id is VOID", #sendNavigate>
  [ 50] extcall 69 .............................. <error(me, "Node id is VOID", #sendNavigate)>
  [ 52] pusharglistnoret 1 ...................... <error(me, "Node id is VOID", #sendNavigate)>
  [ 54] extcall 36 .............................. return error(me, "Node id is VOID", #sendNavigate)
  [ 56] getparam 2 .............................. <tDepth>
  [ 58] pusharglist 0 ........................... <>
  [ 60] extcall 50 .............................. <VOID>
  [ 62] eq ...................................... <tDepth = VOID>
  [ 63] jmpifz [ 70] ............................ if tDepth = VOID then
  [ 66] pushint8 1 .............................. <1>
  [ 68] setparam 2 .............................. tDepth = 1
  [ 70] getparam 0 .............................. <me>
  [ 72] pusharglist 1 ........................... <me>
  [ 74] objcall 251 ............................. <me.getCurrentNodeMask()>
  [ 76] setlocal 0 .............................. tNodeMask = me.getCurrentNodeMask()
  [ 78] getparam 0 .............................. <me>
  [ 80] pushcons 29 ............................. <"Sending navigate, tNodeMask">
  [ 82] getlocal 0 .............................. <tNodeMask>
  [ 84] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask>
  [ 85] pushcons 30 ............................. <", tNodeId:">
  [ 87] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:">
  [ 88] getparam 1 .............................. <tNodeId>
  [ 90] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId>
  [ 91] pushcons 31 ............................. <", tDepth">
  [ 93] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId && ", tDepth">
  [ 94] getparam 2 .............................. <tDepth>
  [ 96] joinpadstr .............................. <"Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId && ", tDepth" && tDepth>
  [ 97] pushsymb 406 ............................ <#sendNavigate>
  [100] pusharglistnoret 3 ...................... <me, "Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId && ", tDepth" && tDepth, #sendNavigate>
  [102] extcall 69 .............................. error(me, "Sending navigate, tNodeMask" && tNodeMask && ", tNodeId:" && tNodeId && ", tDepth" && tDepth, #sendNavigate)
  [104] getprop 426 ............................. <pConnectionId>
  [107] pusharglist 1 ........................... <pConnectionId>
  [109] extcall 450 ............................. <getConnection(pConnectionId)>
  [112] pushcons 32 ............................. <"NAVIGATE">
  [114] pushsymb 301 ............................ <#integer>
  [117] getlocal 0 .............................. <tNodeMask>
  [119] pushsymb 301 ............................ <#integer>
  [122] getparam 1 .............................. <tNodeId>
  [124] pusharglist 1 ........................... <tNodeId>
  [126] extcall 301 ............................. <integer(tNodeId)>
  [129] pushsymb 301 ............................ <#integer>
  [132] getparam 2 .............................. <tDepth>
  [134] pusharglist 6 ........................... <[#integer: tNodeMask, #integer: integer(tNodeId), #integer: tDepth]>
  [136] pushproplist ............................ <[#integer: tNodeMask, #integer: integer(tNodeId), #integer: tDepth]>
  [137] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "NAVIGATE", [#integer: tNodeMask, #integer: integer(tNodeId), #integer: tDepth]>
  [139] objcall 451 ............................. getConnection(pConnectionId).send("NAVIGATE", [#integer: tNodeMask, #integer: integer(tNodeId), #integer: tDepth])
  [142] getparam 0 .............................. <me>
  [144] pusharglistnoret 1 ...................... <me>
  [146] objcall 404 ............................. me.purgeNodeCacheExpList()
  [149] pushint8 1 .............................. <1>
  [151] pusharglistnoret 1 ...................... <1>
  [153] extcall 36 .............................. return 1
  [155] ret
end

on updateCategoryIndex me, tCategoryIndex
  [  0] pushint8 1 .............................. <1>
  [  2] setlocal 0
  [  4] getlocal 0
  [  6] getparam 1 .............................. <tCategoryIndex>
  [  8] getobjprop 125 .......................... <tCategoryIndex.count>
  [ 10] lteq
  [ 11] jmpifz [ 48] ............................ repeat with i = 1 to tCategoryIndex.count
  [ 14] getprop 420 ............................. <pCategoryIndex>
  [ 17] getparam 1 .............................. <tCategoryIndex>
  [ 19] getlocal 0 .............................. <i>
  [ 21] pusharglist 2 ........................... <tCategoryIndex, i>
  [ 23] objcall 324 ............................. <tCategoryIndex.getPropAt(i)>
  [ 26] getparam 1 .............................. <tCategoryIndex>
  [ 28] getlocal 0 .............................. <i>
  [ 30] pusharglist 2 ........................... <tCategoryIndex, i>
  [ 32] objcall 51 .............................. <tCategoryIndex[i]>
  [ 34] pusharglistnoret 3 ...................... <pCategoryIndex, tCategoryIndex.getPropAt(i), tCategoryIndex[i]>
  [ 36] objcall 439 ............................. pCategoryIndex.setaProp(tCategoryIndex.getPropAt(i), tCategoryIndex[i])
  [ 39] pushint8 1
  [ 41] getlocal 0
  [ 43] add
  [ 44] setlocal 0
  [ 46] endrepeat [  4]
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 1 ...................... <1>
  [ 52] extcall 36 .............................. return 1
  [ 54] ret
end

on saveNodeInfo me, tNodeInfo
  [  0] getparam 1 .............................. <tNodeInfo>
  [  2] pushsymb 294 ............................ <#id>
  [  5] pusharglist 2 ........................... <tNodeInfo, #id>
  [  7] objcall 51 .............................. <tNodeInfo[#id]>
  [  9] pushcons 9 .............................. <"/">
  [ 11] joinstr ................................. <tNodeInfo[#id] & "/">
  [ 12] getparam 1 .............................. <tNodeInfo>
  [ 14] pushsymb 467 ............................ <#nodeMask>
  [ 17] pusharglist 2 ........................... <tNodeInfo, #nodeMask>
  [ 19] objcall 51 .............................. <tNodeInfo[#nodeMask]>
  [ 21] joinstr ................................. <tNodeInfo[#id] & "/" & tNodeInfo[#nodeMask]>
  [ 22] setlocal 0 .............................. tNodeId = tNodeInfo[#id] & "/" & tNodeInfo[#nodeMask]
  [ 24] getparam 1 .............................. <tNodeInfo>
  [ 26] pusharglist 1 ........................... <tNodeInfo>
  [ 28] extcall 101 ............................. <listp(tNodeInfo)>
  [ 30] jmpifz [ 56] ............................ if listp(tNodeInfo) then
  [ 33] getprop 421 ............................. <pNodeCache>
  [ 36] getlocal 0 .............................. <tNodeId>
  [ 38] getparam 1 .............................. <tNodeInfo>
  [ 40] pusharglistnoret 3 ...................... <pNodeCache, tNodeId, tNodeInfo>
  [ 42] objcall 55 .............................. pNodeCache[tNodeId] = tNodeInfo
  [ 44] getprop 422 ............................. <pNodeCacheExpList>
  [ 47] getlocal 0 .............................. <tNodeId>
  [ 49] getmovieprop 462 ........................ <the milliSeconds>
  [ 52] pusharglistnoret 3 ...................... <pNodeCacheExpList, tNodeId, the milliSeconds>
  [ 54] objcall 55 .............................. pNodeCacheExpList[tNodeId] = the milliSeconds
  [ 56] getparam 0 .............................. <me>
  [ 58] getlocal 0 .............................. <tNodeId>
  [ 60] pusharglist 2 ........................... <me, tNodeId>
  [ 62] objcall 403 ............................. <me.feedNewRoomList(tNodeId)>
  [ 65] pusharglistnoret 1 ...................... <me.feedNewRoomList(tNodeId)>
  [ 67] extcall 36 .............................. return me.feedNewRoomList(tNodeId)
  [ 69] ret
end

on updateSingleFlatInfo me, tdata, tMode
  [  0] getparam 1 .............................. <tdata>
  [  2] pusharglist 1 ........................... <tdata>
  [  4] extcall 101 ............................. <listp(tdata)>
  [  6] jmpifz [175] ............................ if listp(tdata) then / else
  [  9] pushcons 20 ............................. <"f_">
  [ 11] getparam 1 .............................. <tdata>
  [ 13] pushsymb 162 ............................ <#flatId>
  [ 15] pusharglist 2 ........................... <tdata, #flatId>
  [ 17] objcall 51 .............................. <tdata[#flatId]>
  [ 19] joinstr ................................. <"f_" & tdata[#flatId]>
  [ 20] setlocal 0 .............................. tFlatID = "f_" & tdata[#flatId]
  [ 22] getparam 1 .............................. <tdata>
  [ 24] pushsymb 294 ............................ <#id>
  [ 27] getlocal 0 .............................. <tFlatID>
  [ 29] pusharglistnoret 3 ...................... <tdata, #id, tFlatID>
  [ 31] objcall 468 ............................. tdata.addProp(#id, tFlatID)
  [ 34] getprop 421 ............................. <pNodeCache>
  [ 37] peek 0
  [ 39] pusharglist 1
  [ 41] extcall 125
  [ 43] pushint8 1
  [ 45] peek 0
  [ 47] peek 2
  [ 49] lteq
  [ 50] jmpifz [153] ............................ repeat with myList in pNodeCache
  [ 53] peek 2
  [ 55] peek 1
  [ 57] pusharglist 2
  [ 59] extcall 51
  [ 61] setlocal 1
  [ 63] getlocal 1 .............................. <myList>
  [ 65] pushsymb 299 ............................ <#children>
  [ 68] pusharglist 2 ........................... <myList, #children>
  [ 70] objcall 51 .............................. <myList[#children]>
  [ 72] getlocal 0 .............................. <tFlatID>
  [ 74] pusharglist 2 ........................... <myList[#children], tFlatID>
  [ 76] objcall 51 .............................. <myList[#children][tFlatID]>
  [ 78] pusharglist 0 ........................... <>
  [ 80] extcall 50 .............................. <VOID>
  [ 82] nteq .................................... <myList[#children][tFlatID] <> VOID>
  [ 83] jmpifz [148] ............................ if myList[#children][tFlatID] <> VOID then
  [ 86] pushint8 1 .............................. <1>
  [ 88] setlocal 2
  [ 90] getlocal 2
  [ 92] getparam 1 .............................. <tdata>
  [ 94] pusharglist 1 ........................... <tdata>
  [ 96] objcall 125 ............................. <tdata.count()>
  [ 98] lteq
  [ 99] jmpifz [148] ............................ repeat with f = 1 to tdata.count()
  [102] getlocal 1 .............................. <myList>
  [104] pushsymb 299 ............................ <#children>
  [107] pusharglist 2 ........................... <myList, #children>
  [109] objcall 51 .............................. <myList[#children]>
  [111] getlocal 0 .............................. <tFlatID>
  [113] pusharglist 2 ........................... <myList[#children], tFlatID>
  [115] objcall 51 .............................. <myList[#children][tFlatID]>
  [117] getparam 1 .............................. <tdata>
  [119] getlocal 2 .............................. <f>
  [121] pusharglist 2 ........................... <tdata, f>
  [123] objcall 324 ............................. <tdata.getPropAt(f)>
  [126] getparam 1 .............................. <tdata>
  [128] getlocal 2 .............................. <f>
  [130] pusharglist 2 ........................... <tdata, f>
  [132] objcall 51 .............................. <tdata[f]>
  [134] pusharglistnoret 3 ...................... <myList[#children][tFlatID], tdata.getPropAt(f), tdata[f]>
  [136] objcall 439 ............................. myList[#children][tFlatID].setaProp(tdata.getPropAt(f), tdata[f])
  [139] pushint8 1
  [141] getlocal 2
  [143] add
  [144] setlocal 2
  [146] endrepeat [ 90]
  [148] pushint8 1
  [150] add
  [151] endrepeat [ 45]
  [153] pop 3
  [155] pushcons 12 ............................. <"receivedFlatStruct">
  [157] getlocal 0 .............................. <tFlatID>
  [159] joinstr ................................. <"receivedFlatStruct" & tFlatID>
  [160] pusharglist 1 ........................... <"receivedFlatStruct" & tFlatID>
  [162] extcall 293 ............................. <symbol("receivedFlatStruct" & tFlatID)>
  [165] getparam 1 .............................. <tdata>
  [167] pusharglistnoret 2 ...................... <symbol("receivedFlatStruct" & tFlatID), tdata>
  [169] extcall 340 ............................. executeMessage(symbol("receivedFlatStruct" & tFlatID), tdata)
  [172] jmp [190]
  [175] getparam 0 .............................. <me>
  [177] pushcons 33 ............................. <"Flat info parsing failed!">
  [179] pushsymb 409 ............................ <#updateSingleFlatInfo>
  [182] pusharglist 3 ........................... <me, "Flat info parsing failed!", #updateSingleFlatInfo>
  [184] extcall 69 .............................. <error(me, "Flat info parsing failed!", #updateSingleFlatInfo)>
  [186] pusharglistnoret 1 ...................... <error(me, "Flat info parsing failed!", #updateSingleFlatInfo)>
  [188] extcall 36 .............................. return error(me, "Flat info parsing failed!", #updateSingleFlatInfo)
  [190] ret
end

on sendGetUserFlatCats me
  [  0] getprop 426 ............................. <pConnectionId>
  [  3] pusharglist 1 ........................... <pConnectionId>
  [  5] extcall 464 ............................. <connectionExists(pConnectionId)>
  [  8] jmpifz [ 33] ............................ if connectionExists(pConnectionId) then / else
  [ 11] getprop 426 ............................. <pConnectionId>
  [ 14] pusharglist 1 ........................... <pConnectionId>
  [ 16] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 19] pushcons 34 ............................. <"GETUSERFLATCATS">
  [ 21] pusharglist 2 ........................... <getConnection(pConnectionId), "GETUSERFLATCATS">
  [ 23] objcall 451 ............................. <getConnection(pConnectionId).send("GETUSERFLATCATS")>
  [ 26] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("GETUSERFLATCATS")>
  [ 28] extcall 36 .............................. return getConnection(pConnectionId).send("GETUSERFLATCATS")
  [ 30] jmp [ 52]
  [ 33] getparam 0 .............................. <me>
  [ 35] pushcons 27 ............................. <"Connection not found:">
  [ 37] getprop 426 ............................. <pConnectionId>
  [ 40] joinpadstr .............................. <"Connection not found:" && pConnectionId>
  [ 41] pushsymb 410 ............................ <#sendGetUserFlatCats>
  [ 44] pusharglist 3 ........................... <me, "Connection not found:" && pConnectionId, #sendGetUserFlatCats>
  [ 46] extcall 69 .............................. <error(me, "Connection not found:" && pConnectionId, #sendGetUserFlatCats)>
  [ 48] pusharglistnoret 1 ...................... <error(me, "Connection not found:" && pConnectionId, #sendGetUserFlatCats)>
  [ 50] extcall 36 .............................. return error(me, "Connection not found:" && pConnectionId, #sendGetUserFlatCats)
  [ 52] ret
end

on noflatsforuser me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pushcons 35 ............................. <"nav_private_norooms">
  [  8] pusharglist 1 ........................... <"nav_private_norooms">
  [ 10] extcall 26 .............................. <getText("nav_private_norooms")>
  [ 12] pusharglist 2 ........................... <me.getInterface(), getText("nav_private_norooms")>
  [ 14] objcall 272 ............................. <me.getInterface().showRoomlistError(getText("nav_private_norooms"))>
  [ 17] pusharglistnoret 1 ...................... <me.getInterface().showRoomlistError(getText("nav_private_norooms"))>
  [ 19] extcall 36 .............................. return me.getInterface().showRoomlistError(getText("nav_private_norooms"))
  [ 21] ret
end

on noflats me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pushcons 36 ............................. <"nav_prvrooms_notfound">
  [  8] pusharglist 1 ........................... <"nav_prvrooms_notfound">
  [ 10] extcall 26 .............................. <getText("nav_prvrooms_notfound")>
  [ 12] pusharglist 2 ........................... <me.getInterface(), getText("nav_prvrooms_notfound")>
  [ 14] objcall 272 ............................. <me.getInterface().showRoomlistError(getText("nav_prvrooms_notfound"))>
  [ 17] pusharglistnoret 1 ...................... <me.getInterface().showRoomlistError(getText("nav_prvrooms_notfound"))>
  [ 19] extcall 36 .............................. return me.getInterface().showRoomlistError(getText("nav_prvrooms_notfound"))
  [ 21] ret
end

on sendGetOwnFlats me
  [  0] getprop 426 ............................. <pConnectionId>
  [  3] pusharglist 1 ........................... <pConnectionId>
  [  5] extcall 464 ............................. <connectionExists(pConnectionId)>
  [  8] jmpifz [ 45] ............................ if connectionExists(pConnectionId) then / else
  [ 11] getprop 426 ............................. <pConnectionId>
  [ 14] pusharglist 1 ........................... <pConnectionId>
  [ 16] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 19] pushcons 37 ............................. <"SUSERF">
  [ 21] pushsymb 159 ............................ <#session>
  [ 23] pusharglist 1 ........................... <#session>
  [ 25] extcall 158 ............................. <getObject(#session)>
  [ 27] pushcons 38 ............................. <"user_name">
  [ 29] pusharglist 2 ........................... <getObject(#session), "user_name">
  [ 31] objcall 160 ............................. <getObject(#session).get("user_name")>
  [ 33] pusharglist 3 ........................... <getConnection(pConnectionId), "SUSERF", getObject(#session).get("user_name")>
  [ 35] objcall 451 ............................. <getConnection(pConnectionId).send("SUSERF", getObject(#session).get("user_name"))>
  [ 38] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("SUSERF", getObject(#session).get("user_name"))>
  [ 40] extcall 36 .............................. return getConnection(pConnectionId).send("SUSERF", getObject(#session).get("user_name"))
  [ 42] jmp [ 50]
  [ 45] pushzero ................................ <0>
  [ 46] pusharglistnoret 1 ...................... <0>
  [ 48] extcall 36 .............................. return 0
  [ 50] ret
end

on sendGetFavoriteFlats me
  [  0] getprop 426 ............................. <pConnectionId>
  [  3] pusharglist 1 ........................... <pConnectionId>
  [  5] extcall 464 ............................. <connectionExists(pConnectionId)>
  [  8] jmpifz [ 40] ............................ if connectionExists(pConnectionId) then / else
  [ 11] getprop 426 ............................. <pConnectionId>
  [ 14] pusharglist 1 ........................... <pConnectionId>
  [ 16] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 19] pushcons 39 ............................. <"GETFVRF">
  [ 21] pushsymb 472 ............................ <#boolean>
  [ 24] pushzero ................................ <0>
  [ 25] pusharglist 2 ........................... <[#boolean: 0]>
  [ 27] pushproplist ............................ <[#boolean: 0]>
  [ 28] pusharglist 3 ........................... <getConnection(pConnectionId), "GETFVRF", [#boolean: 0]>
  [ 30] objcall 451 ............................. <getConnection(pConnectionId).send("GETFVRF", [#boolean: 0])>
  [ 33] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("GETFVRF", [#boolean: 0])>
  [ 35] extcall 36 .............................. return getConnection(pConnectionId).send("GETFVRF", [#boolean: 0])
  [ 37] jmp [ 45]
  [ 40] pushzero ................................ <0>
  [ 41] pusharglistnoret 1 ...................... <0>
  [ 43] extcall 36 .............................. return 0
  [ 45] ret
end

on sendAddFavoriteFlat me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 145 ............................ <#nodeType>
  [  6] pusharglist 3 ........................... <me, tNodeId, #nodeType>
  [  8] objcall 77 .............................. <me.getNodeProperty(tNodeId, #nodeType)>
  [ 10] pushint8 1 .............................. <1>
  [ 12] eq ...................................... <me.getNodeProperty(tNodeId, #nodeType) = 1>
  [ 13] setlocal 0 .............................. tRoomType = me.getNodeProperty(tNodeId, #nodeType) = 1
  [ 15] getlocal 0 .............................. <tRoomType>
  [ 17] pushzero ................................ <0>
  [ 18] eq ...................................... <tRoomType = 0>
  [ 19] jmpifz [ 37] ............................ if tRoomType = 0 then / else
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 1 .............................. <tNodeId>
  [ 26] pushsymb 162 ............................ <#flatId>
  [ 28] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [ 30] objcall 77 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 32] setlocal 1 .............................. tRoomID = me.getNodeProperty(tNodeId, #flatId)
  [ 34] jmp [ 41]
  [ 37] getparam 1 .............................. <tNodeId>
  [ 39] setlocal 1 .............................. tRoomID = tNodeId
  [ 41] getlocal 1 .............................. <tRoomID>
  [ 43] pusharglist 1 ........................... <tRoomID>
  [ 45] extcall 301 ............................. <integer(tRoomID)>
  [ 48] setlocal 1 .............................. tRoomID = integer(tRoomID)
  [ 50] getprop 426 ............................. <pConnectionId>
  [ 53] pusharglist 1 ........................... <pConnectionId>
  [ 55] extcall 464 ............................. <connectionExists(pConnectionId)>
  [ 58] jmpifz [120] ............................ if connectionExists(pConnectionId) then / else
  [ 61] getlocal 1 .............................. <tRoomID>
  [ 63] pusharglist 1 ........................... <tRoomID>
  [ 65] extcall 52 .............................. <voidp(tRoomID)>
  [ 67] jmpifz [ 85] ............................ if voidp(tRoomID) then
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 40 ............................. <"Room ID expected!">
  [ 74] pushsymb 362 ............................ <#sendAddFavoriteFlat>
  [ 77] pusharglist 3 ........................... <me, "Room ID expected!", #sendAddFavoriteFlat>
  [ 79] extcall 69 .............................. <error(me, "Room ID expected!", #sendAddFavoriteFlat)>
  [ 81] pusharglistnoret 1 ...................... <error(me, "Room ID expected!", #sendAddFavoriteFlat)>
  [ 83] extcall 36 .............................. return error(me, "Room ID expected!", #sendAddFavoriteFlat)
  [ 85] getprop 426 ............................. <pConnectionId>
  [ 88] pusharglist 1 ........................... <pConnectionId>
  [ 90] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 93] pushcons 41 ............................. <"ADD_FAVORITE_ROOM">
  [ 95] pushsymb 301 ............................ <#integer>
  [ 98] getlocal 0 .............................. <tRoomType>
  [100] pushsymb 301 ............................ <#integer>
  [103] getlocal 1 .............................. <tRoomID>
  [105] pusharglist 4 ........................... <[#integer: tRoomType, #integer: tRoomID]>
  [107] pushproplist ............................ <[#integer: tRoomType, #integer: tRoomID]>
  [108] pusharglist 3 ........................... <getConnection(pConnectionId), "ADD_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID]>
  [110] objcall 451 ............................. <getConnection(pConnectionId).send("ADD_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])>
  [113] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("ADD_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])>
  [115] extcall 36 .............................. return getConnection(pConnectionId).send("ADD_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])
  [117] jmp [125]
  [120] pushzero ................................ <0>
  [121] pusharglistnoret 1 ...................... <0>
  [123] extcall 36 .............................. return 0
  [125] ret
end

on sendRemoveFavoriteFlat me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 145 ............................ <#nodeType>
  [  6] pusharglist 3 ........................... <me, tNodeId, #nodeType>
  [  8] objcall 77 .............................. <me.getNodeProperty(tNodeId, #nodeType)>
  [ 10] pushint8 1 .............................. <1>
  [ 12] eq ...................................... <me.getNodeProperty(tNodeId, #nodeType) = 1>
  [ 13] setlocal 0 .............................. tRoomType = me.getNodeProperty(tNodeId, #nodeType) = 1
  [ 15] getlocal 0 .............................. <tRoomType>
  [ 17] pushzero ................................ <0>
  [ 18] eq ...................................... <tRoomType = 0>
  [ 19] jmpifz [ 37] ............................ if tRoomType = 0 then / else
  [ 22] getparam 0 .............................. <me>
  [ 24] getparam 1 .............................. <tNodeId>
  [ 26] pushsymb 162 ............................ <#flatId>
  [ 28] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [ 30] objcall 77 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 32] setlocal 1 .............................. tRoomID = me.getNodeProperty(tNodeId, #flatId)
  [ 34] jmp [ 41]
  [ 37] getparam 1 .............................. <tNodeId>
  [ 39] setlocal 1 .............................. tRoomID = tNodeId
  [ 41] getlocal 1 .............................. <tRoomID>
  [ 43] pusharglist 1 ........................... <tRoomID>
  [ 45] extcall 301 ............................. <integer(tRoomID)>
  [ 48] setlocal 1 .............................. tRoomID = integer(tRoomID)
  [ 50] getprop 426 ............................. <pConnectionId>
  [ 53] pusharglist 1 ........................... <pConnectionId>
  [ 55] extcall 464 ............................. <connectionExists(pConnectionId)>
  [ 58] jmpifz [120] ............................ if connectionExists(pConnectionId) then / else
  [ 61] getlocal 1 .............................. <tRoomID>
  [ 63] pusharglist 1 ........................... <tRoomID>
  [ 65] extcall 52 .............................. <voidp(tRoomID)>
  [ 67] jmpifz [ 85] ............................ if voidp(tRoomID) then
  [ 70] getparam 0 .............................. <me>
  [ 72] pushcons 42 ............................. <"Flat ID expected!">
  [ 74] pushsymb 367 ............................ <#sendRemoveFavoriteFlat>
  [ 77] pusharglist 3 ........................... <me, "Flat ID expected!", #sendRemoveFavoriteFlat>
  [ 79] extcall 69 .............................. <error(me, "Flat ID expected!", #sendRemoveFavoriteFlat)>
  [ 81] pusharglistnoret 1 ...................... <error(me, "Flat ID expected!", #sendRemoveFavoriteFlat)>
  [ 83] extcall 36 .............................. return error(me, "Flat ID expected!", #sendRemoveFavoriteFlat)
  [ 85] getprop 426 ............................. <pConnectionId>
  [ 88] pusharglist 1 ........................... <pConnectionId>
  [ 90] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 93] pushcons 43 ............................. <"DEL_FAVORITE_ROOM">
  [ 95] pushsymb 301 ............................ <#integer>
  [ 98] getlocal 0 .............................. <tRoomType>
  [100] pushsymb 301 ............................ <#integer>
  [103] getlocal 1 .............................. <tRoomID>
  [105] pusharglist 4 ........................... <[#integer: tRoomType, #integer: tRoomID]>
  [107] pushproplist ............................ <[#integer: tRoomType, #integer: tRoomID]>
  [108] pusharglist 3 ........................... <getConnection(pConnectionId), "DEL_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID]>
  [110] objcall 451 ............................. <getConnection(pConnectionId).send("DEL_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])>
  [113] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("DEL_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])>
  [115] extcall 36 .............................. return getConnection(pConnectionId).send("DEL_FAVORITE_ROOM", [#integer: tRoomType, #integer: tRoomID])
  [117] jmp [125]
  [120] pushzero ................................ <0>
  [121] pusharglistnoret 1 ...................... <0>
  [123] extcall 36 .............................. return 0
  [125] ret
end

on sendGetFlatInfo me, tNodeId
  [  0] getparam 1 .............................. <tNodeId>
  [  2] pushcons 20 ............................. <"f_">
  [  4] containsstr ............................. <tNodeId contains "f_">
  [  5] jmpifz [ 23] ............................ if tNodeId contains "f_" then / else
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tNodeId>
  [ 12] pushsymb 162 ............................ <#flatId>
  [ 14] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [ 16] objcall 77 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 18] setlocal 0 .............................. tFlatID = me.getNodeProperty(tNodeId, #flatId)
  [ 20] jmp [ 27]
  [ 23] getparam 1 .............................. <tNodeId>
  [ 25] setlocal 0 .............................. tFlatID = tNodeId
  [ 27] getprop 426 ............................. <pConnectionId>
  [ 30] pusharglist 1 ........................... <pConnectionId>
  [ 32] extcall 464 ............................. <connectionExists(pConnectionId)>
  [ 35] jmpifz [ 89] ............................ if connectionExists(pConnectionId) then / else
  [ 38] getlocal 0 .............................. <tFlatID>
  [ 40] pusharglist 1 ........................... <tFlatID>
  [ 42] extcall 52 .............................. <voidp(tFlatID)>
  [ 44] jmpifz [ 65] ............................ if voidp(tFlatID) then / else
  [ 47] getparam 0 .............................. <me>
  [ 49] pushcons 42 ............................. <"Flat ID expected!">
  [ 51] pushsymb 317 ............................ <#sendGetFlatInfo>
  [ 54] pusharglist 3 ........................... <me, "Flat ID expected!", #sendGetFlatInfo>
  [ 56] extcall 69 .............................. <error(me, "Flat ID expected!", #sendGetFlatInfo)>
  [ 58] pusharglistnoret 1 ...................... <error(me, "Flat ID expected!", #sendGetFlatInfo)>
  [ 60] extcall 36 .............................. return error(me, "Flat ID expected!", #sendGetFlatInfo)
  [ 62] jmp [ 86]
  [ 65] getprop 426 ............................. <pConnectionId>
  [ 68] pusharglist 1 ........................... <pConnectionId>
  [ 70] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 73] pushcons 44 ............................. <"GETFLATINFO">
  [ 75] getlocal 0 .............................. <tFlatID>
  [ 77] pusharglist 3 ........................... <getConnection(pConnectionId), "GETFLATINFO", tFlatID>
  [ 79] objcall 451 ............................. <getConnection(pConnectionId).send("GETFLATINFO", tFlatID)>
  [ 82] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("GETFLATINFO", tFlatID)>
  [ 84] extcall 36 .............................. return getConnection(pConnectionId).send("GETFLATINFO", tFlatID)
  [ 86] jmp [ 94]
  [ 89] pushzero ................................ <0>
  [ 90] pusharglistnoret 1 ...................... <0>
  [ 92] extcall 36 .............................. return 0
  [ 94] ret
end

on sendSearchFlats me, tQuery
  [  0] getprop 426 ............................. <pConnectionId>
  [  3] pusharglist 1 ........................... <pConnectionId>
  [  5] extcall 464 ............................. <connectionExists(pConnectionId)>
  [  8] jmpifz [ 81] ............................ if connectionExists(pConnectionId) then / else
  [ 11] getparam 1 .............................. <tQuery>
  [ 13] pusharglist 1 ........................... <tQuery>
  [ 15] extcall 52 .............................. <voidp(tQuery)>
  [ 17] jmpifz [ 35] ............................ if voidp(tQuery) then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 45 ............................. <"Search query is void!">
  [ 24] pushsymb 312 ............................ <#sendSearchFlats>
  [ 27] pusharglist 3 ........................... <me, "Search query is void!", #sendSearchFlats>
  [ 29] extcall 69 .............................. <error(me, "Search query is void!", #sendSearchFlats)>
  [ 31] pusharglistnoret 1 ...................... <error(me, "Search query is void!", #sendSearchFlats)>
  [ 33] extcall 36 .............................. return error(me, "Search query is void!", #sendSearchFlats)
  [ 35] getparam 1 .............................. <tQuery>
  [ 37] pushint8 1 .............................. <1>
  [ 39] pusharglist 2 ........................... <tQuery, 1>
  [ 41] extcall 386 ............................. <convertSpecialChars(tQuery, 1)>
  [ 44] setparam 1 .............................. tQuery = convertSpecialChars(tQuery, 1)
  [ 46] getprop 426 ............................. <pConnectionId>
  [ 49] pusharglist 1 ........................... <pConnectionId>
  [ 51] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 54] pushcons 46 ............................. <"SRCHF">
  [ 56] pushsymb 416 ............................ <#string>
  [ 59] getparam 1 .............................. <tQuery>
  [ 61] pusharglist 1 ........................... <tQuery>
  [ 63] extcall 416 ............................. <string(tQuery)>
  [ 66] pusharglist 2 ........................... <[#string: string(tQuery)]>
  [ 68] pushproplist ............................ <[#string: string(tQuery)]>
  [ 69] pusharglist 3 ........................... <getConnection(pConnectionId), "SRCHF", [#string: string(tQuery)]>
  [ 71] objcall 451 ............................. <getConnection(pConnectionId).send("SRCHF", [#string: string(tQuery)])>
  [ 74] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("SRCHF", [#string: string(tQuery)])>
  [ 76] extcall 36 .............................. return getConnection(pConnectionId).send("SRCHF", [#string: string(tQuery)])
  [ 78] jmp [ 86]
  [ 81] pushzero ................................ <0>
  [ 82] pusharglistnoret 1 ...................... <0>
  [ 84] extcall 36 .............................. return 0
  [ 86] ret
end

on sendGetSpaceNodeUsers me, tNodeId
  [  0] getprop 426 ............................. <pConnectionId>
  [  3] pusharglist 1 ........................... <pConnectionId>
  [  5] extcall 464 ............................. <connectionExists(pConnectionId)>
  [  8] jmpifz [ 43] ............................ if connectionExists(pConnectionId) then
  [ 11] getprop 426 ............................. <pConnectionId>
  [ 14] pusharglist 1 ........................... <pConnectionId>
  [ 16] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 19] pushcons 47 ............................. <"GETSPACENODEUSERS">
  [ 21] pushsymb 301 ............................ <#integer>
  [ 24] getparam 1 .............................. <tNodeId>
  [ 26] pusharglist 1 ........................... <tNodeId>
  [ 28] extcall 301 ............................. <integer(tNodeId)>
  [ 31] pusharglist 2 ........................... <[#integer: integer(tNodeId)]>
  [ 33] pushproplist ............................ <[#integer: integer(tNodeId)]>
  [ 34] pusharglist 3 ........................... <getConnection(pConnectionId), "GETSPACENODEUSERS", [#integer: integer(tNodeId)]>
  [ 36] objcall 451 ............................. <getConnection(pConnectionId).send("GETSPACENODEUSERS", [#integer: integer(tNodeId)])>
  [ 39] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("GETSPACENODEUSERS", [#integer: integer(tNodeId)])>
  [ 41] extcall 36 .............................. return getConnection(pConnectionId).send("GETSPACENODEUSERS", [#integer: integer(tNodeId)])
  [ 43] pushzero ................................ <0>
  [ 44] pusharglistnoret 1 ...................... <0>
  [ 46] extcall 36 .............................. return 0
  [ 48] ret
end

on sendDeleteFlat me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 162 ............................ <#flatId>
  [  6] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [  8] objcall 77 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 10] setlocal 0 .............................. tFlatID = me.getNodeProperty(tNodeId, #flatId)
  [ 12] getprop 426 ............................. <pConnectionId>
  [ 15] pusharglist 1 ........................... <pConnectionId>
  [ 17] extcall 464 ............................. <connectionExists(pConnectionId)>
  [ 20] jmpifz [124] ............................ if connectionExists(pConnectionId) then / else
  [ 23] getprop 421 ............................. <pNodeCache>
  [ 26] pushsymb 45 ............................. <#own>
  [ 28] pusharglist 2 ........................... <pNodeCache, #own>
  [ 30] objcall 51 .............................. <pNodeCache[#own]>
  [ 32] pusharglist 1 ........................... <pNodeCache[#own]>
  [ 34] extcall 101 ............................. <listp(pNodeCache[#own])>
  [ 36] jmpifz [ 85] ............................ if listp(pNodeCache[#own]) then
  [ 39] getprop 421 ............................. <pNodeCache>
  [ 42] pushsymb 45 ............................. <#own>
  [ 44] pusharglist 2 ........................... <pNodeCache, #own>
  [ 46] objcall 51 .............................. <pNodeCache[#own]>
  [ 48] pushsymb 299 ............................ <#children>
  [ 51] pusharglist 2 ........................... <pNodeCache[#own], #children>
  [ 53] objcall 51 .............................. <pNodeCache[#own][#children]>
  [ 55] pusharglist 1 ........................... <pNodeCache[#own][#children]>
  [ 57] extcall 101 ............................. <listp(pNodeCache[#own][#children])>
  [ 59] jmpifz [ 85] ............................ if listp(pNodeCache[#own][#children]) then
  [ 62] getprop 421 ............................. <pNodeCache>
  [ 65] pushsymb 45 ............................. <#own>
  [ 67] pusharglist 2 ........................... <pNodeCache, #own>
  [ 69] objcall 51 .............................. <pNodeCache[#own]>
  [ 71] pushsymb 299 ............................ <#children>
  [ 74] pusharglist 2 ........................... <pNodeCache[#own], #children>
  [ 76] objcall 51 .............................. <pNodeCache[#own][#children]>
  [ 78] getparam 1 .............................. <tNodeId>
  [ 80] pusharglistnoret 2 ...................... <pNodeCache[#own][#children], tNodeId>
  [ 82] objcall 463 ............................. pNodeCache[#own][#children].deleteProp(tNodeId)
  [ 85] getlocal 0 .............................. <tFlatID>
  [ 87] pusharglist 0 ........................... <>
  [ 89] extcall 50 .............................. <VOID>
  [ 91] eq ...................................... <tFlatID = VOID>
  [ 92] jmpifz [100] ............................ if tFlatID = VOID then
  [ 95] pushzero ................................ <0>
  [ 96] pusharglistnoret 1 ...................... <0>
  [ 98] extcall 36 .............................. return 0
  [100] getprop 426 ............................. <pConnectionId>
  [103] pusharglist 1 ........................... <pConnectionId>
  [105] extcall 450 ............................. <getConnection(pConnectionId)>
  [108] pushcons 48 ............................. <"DELETEFLAT">
  [110] getlocal 0 .............................. <tFlatID>
  [112] pusharglist 3 ........................... <getConnection(pConnectionId), "DELETEFLAT", tFlatID>
  [114] objcall 451 ............................. <getConnection(pConnectionId).send("DELETEFLAT", tFlatID)>
  [117] pusharglistnoret 1 ...................... <getConnection(pConnectionId).send("DELETEFLAT", tFlatID)>
  [119] extcall 36 .............................. return getConnection(pConnectionId).send("DELETEFLAT", tFlatID)
  [121] jmp [129]
  [124] pushzero ................................ <0>
  [125] pusharglistnoret 1 ...................... <0>
  [127] extcall 36 .............................. return 0
  [129] ret
end

on sendGetFlatCategory me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 162 ............................ <#flatId>
  [  6] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [  8] objcall 77 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 10] setlocal 0 .............................. tFlatID = me.getNodeProperty(tNodeId, #flatId)
  [ 12] getprop 426 ............................. <pConnectionId>
  [ 15] pusharglist 1 ........................... <pConnectionId>
  [ 17] extcall 464 ............................. <connectionExists(pConnectionId)>
  [ 20] jmpifz [ 78] ............................ if connectionExists(pConnectionId) then / else
  [ 23] getlocal 0 .............................. <tFlatID>
  [ 25] pusharglist 1 ........................... <tFlatID>
  [ 27] extcall 52 .............................. <voidp(tFlatID)>
  [ 29] jmpifz [ 47] ............................ if voidp(tFlatID) then
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 42 ............................. <"Flat ID expected!">
  [ 36] pushsymb 322 ............................ <#sendGetFlatCategory>
  [ 39] pusharglist 3 ........................... <me, "Flat ID expected!", #sendGetFlatCategory>
  [ 41] extcall 69 .............................. <error(me, "Flat ID expected!", #sendGetFlatCategory)>
  [ 43] pusharglistnoret 1 ...................... <error(me, "Flat ID expected!", #sendGetFlatCategory)>
  [ 45] extcall 36 .............................. return error(me, "Flat ID expected!", #sendGetFlatCategory)
  [ 47] getprop 426 ............................. <pConnectionId>
  [ 50] pusharglist 1 ........................... <pConnectionId>
  [ 52] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 55] pushcons 49 ............................. <"GETFLATCAT">
  [ 57] pushsymb 301 ............................ <#integer>
  [ 60] getlocal 0 .............................. <tFlatID>
  [ 62] pusharglist 1 ........................... <tFlatID>
  [ 64] extcall 301 ............................. <integer(tFlatID)>
  [ 67] pusharglist 2 ........................... <[#integer: integer(tFlatID)]>
  [ 69] pushproplist ............................ <[#integer: integer(tFlatID)]>
  [ 70] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "GETFLATCAT", [#integer: integer(tFlatID)]>
  [ 72] objcall 451 ............................. getConnection(pConnectionId).send("GETFLATCAT", [#integer: integer(tFlatID)])
  [ 75] jmp [ 83]
  [ 78] pushzero ................................ <0>
  [ 79] pusharglistnoret 1 ...................... <0>
  [ 81] extcall 36 .............................. return 0
  [ 83] ret
end

on sendSetFlatCategory me, tNodeId, tCategoryId
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tNodeId>
  [  4] pushsymb 162 ............................ <#flatId>
  [  6] pusharglist 3 ........................... <me, tNodeId, #flatId>
  [  8] objcall 77 .............................. <me.getNodeProperty(tNodeId, #flatId)>
  [ 10] setlocal 0 .............................. tFlatID = me.getNodeProperty(tNodeId, #flatId)
  [ 12] getprop 426 ............................. <pConnectionId>
  [ 15] pusharglist 1 ........................... <pConnectionId>
  [ 17] extcall 464 ............................. <connectionExists(pConnectionId)>
  [ 20] jmpifz [ 88] ............................ if connectionExists(pConnectionId) then / else
  [ 23] getlocal 0 .............................. <tFlatID>
  [ 25] pusharglist 1 ........................... <tFlatID>
  [ 27] extcall 52 .............................. <voidp(tFlatID)>
  [ 29] jmpifz [ 47] ............................ if voidp(tFlatID) then
  [ 32] getparam 0 .............................. <me>
  [ 34] pushcons 42 ............................. <"Flat ID expected!">
  [ 36] pushsymb 388 ............................ <#sendSetFlatCategory>
  [ 39] pusharglist 3 ........................... <me, "Flat ID expected!", #sendSetFlatCategory>
  [ 41] extcall 69 .............................. <error(me, "Flat ID expected!", #sendSetFlatCategory)>
  [ 43] pusharglistnoret 1 ...................... <error(me, "Flat ID expected!", #sendSetFlatCategory)>
  [ 45] extcall 36 .............................. return error(me, "Flat ID expected!", #sendSetFlatCategory)
  [ 47] getprop 426 ............................. <pConnectionId>
  [ 50] pusharglist 1 ........................... <pConnectionId>
  [ 52] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 55] pushcons 50 ............................. <"SETFLATCAT">
  [ 57] pushsymb 301 ............................ <#integer>
  [ 60] getlocal 0 .............................. <tFlatID>
  [ 62] pusharglist 1 ........................... <tFlatID>
  [ 64] extcall 301 ............................. <integer(tFlatID)>
  [ 67] pushsymb 301 ............................ <#integer>
  [ 70] getparam 2 .............................. <tCategoryId>
  [ 72] pusharglist 1 ........................... <tCategoryId>
  [ 74] extcall 301 ............................. <integer(tCategoryId)>
  [ 77] pusharglist 4 ........................... <[#integer: integer(tFlatID), #integer: integer(tCategoryId)]>
  [ 79] pushproplist ............................ <[#integer: integer(tFlatID), #integer: integer(tCategoryId)]>
  [ 80] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "SETFLATCAT", [#integer: integer(tFlatID), #integer: integer(tCategoryId)]>
  [ 82] objcall 451 ............................. getConnection(pConnectionId).send("SETFLATCAT", [#integer: integer(tFlatID), #integer: integer(tCategoryId)])
  [ 85] jmp [ 93]
  [ 88] pushzero ................................ <0>
  [ 89] pusharglistnoret 1 ...................... <0>
  [ 91] extcall 36 .............................. return 0
  [ 93] ret
end

on sendupdateFlatInfo me, tPropList
  [  0] getparam 1 .............................. <tPropList>
  [  2] getobjprop 300 .......................... <tPropList.ilk>
  [  5] pushsymb 315 ............................ <#propList>
  [  8] nteq .................................... <tPropList.ilk <> #propList>
  [  9] getparam 1 .............................. <tPropList>
  [ 11] pushsymb 162 ............................ <#flatId>
  [ 13] pusharglist 2 ........................... <tPropList, #flatId>
  [ 15] objcall 51 .............................. <tPropList[#flatId]>
  [ 17] pusharglist 1 ........................... <tPropList[#flatId]>
  [ 19] extcall 52 .............................. <voidp(tPropList[#flatId])>
  [ 21] or ...................................... <(tPropList.ilk <> #propList) or voidp(tPropList[#flatId])>
  [ 22] jmpifz [ 40] ............................ if (tPropList.ilk <> #propList) or voidp(tPropList[#flatId]) then
  [ 25] getparam 0 .............................. <me>
  [ 27] pushcons 51 ............................. <"Cant send updateFlatInfo">
  [ 29] pushsymb 387 ............................ <#sendupdateFlatInfo>
  [ 32] pusharglist 3 ........................... <me, "Cant send updateFlatInfo", #sendupdateFlatInfo>
  [ 34] extcall 69 .............................. <error(me, "Cant send updateFlatInfo", #sendupdateFlatInfo)>
  [ 36] pusharglistnoret 1 ...................... <error(me, "Cant send updateFlatInfo", #sendupdateFlatInfo)>
  [ 38] extcall 36 .............................. return error(me, "Cant send updateFlatInfo", #sendupdateFlatInfo)
  [ 40] pushcons 16 ............................. <EMPTY>
  [ 42] setlocal 0 .............................. tFlatMsg = EMPTY
  [ 44] pushsymb 162 ............................ <#flatId>
  [ 46] pushsymb 76 ............................. <#name>
  [ 48] pushsymb 147 ............................ <#door>
  [ 50] pushsymb 325 ............................ <#showownername>
  [ 53] pusharglist 4 ........................... <[#flatId, #name, #door, #showownername]>
  [ 55] pushlist ................................ <[#flatId, #name, #door, #showownername]>
  [ 56] peek 0
  [ 58] pusharglist 1
  [ 60] extcall 125
  [ 62] pushint8 1
  [ 64] peek 0
  [ 66] peek 2
  [ 68] lteq
  [ 69] jmpifz [103] ............................ repeat with tProp in [#flatId, #name, #door, #showownername]
  [ 72] peek 2
  [ 74] peek 1
  [ 76] pusharglist 2
  [ 78] extcall 51
  [ 80] setlocal 1
  [ 82] getlocal 0 .............................. <tFlatMsg>
  [ 84] getparam 1 .............................. <tPropList>
  [ 86] getlocal 1 .............................. <tProp>
  [ 88] pusharglist 2 ........................... <tPropList, tProp>
  [ 90] objcall 51 .............................. <tPropList[tProp]>
  [ 92] joinstr ................................. <tFlatMsg & tPropList[tProp]>
  [ 93] pushcons 9 .............................. <"/">
  [ 95] joinstr ................................. <tFlatMsg & tPropList[tProp] & "/">
  [ 96] setlocal 0 .............................. tFlatMsg = tFlatMsg & tPropList[tProp] & "/"
  [ 98] pushint8 1
  [100] add
  [101] endrepeat [ 64]
  [103] pop 3
  [105] getlocal 0 .............................. <tFlatMsg>
  [107] pushsymb 390 ............................ <#char>
  [110] pushint8 1 .............................. <1>
  [112] getlocal 0 .............................. <tFlatMsg>
  [114] pusharglist 1 ........................... <tFlatMsg>
  [116] extcall 369 ............................. <length(tFlatMsg)>
  [119] pushint8 1 .............................. <1>
  [121] sub ..................................... <length(tFlatMsg) - 1>
  [122] pusharglist 4 ........................... <tFlatMsg, #char, 1, length(tFlatMsg) - 1>
  [124] objcall 151 ............................. <tFlatMsg.char[1..length(tFlatMsg) - 1]>
  [126] setlocal 0 .............................. tFlatMsg = tFlatMsg.char[1..length(tFlatMsg) - 1]
  [128] getprop 426 ............................. <pConnectionId>
  [131] pusharglist 1 ........................... <pConnectionId>
  [133] extcall 450 ............................. <getConnection(pConnectionId)>
  [136] pushcons 52 ............................. <"UPDATEFLAT">
  [138] pushsymb 416 ............................ <#string>
  [141] getlocal 0 .............................. <tFlatMsg>
  [143] pusharglist 1 ........................... <tFlatMsg>
  [145] extcall 416 ............................. <string(tFlatMsg)>
  [148] pusharglist 2 ........................... <[#string: string(tFlatMsg)]>
  [150] pushproplist ............................ <[#string: string(tFlatMsg)]>
  [151] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "UPDATEFLAT", [#string: string(tFlatMsg)]>
  [153] objcall 451 ............................. getConnection(pConnectionId).send("UPDATEFLAT", [#string: string(tFlatMsg)])
  [156] getparam 1 .............................. <tPropList>
  [158] pushsymb 162 ............................ <#flatId>
  [160] pusharglist 2 ........................... <tPropList, #flatId>
  [162] objcall 51 .............................. <tPropList[#flatId]>
  [164] pusharglist 1 ........................... <tPropList[#flatId]>
  [166] extcall 416 ............................. <string(tPropList[#flatId])>
  [169] pushcons 9 .............................. <"/">
  [171] pusharglist 0 ........................... <>
  [173] extcall 155 ............................. <SPACE>
  [175] pusharglist 3 ........................... <string(tPropList[#flatId]), "/", SPACE>
  [177] extcall 385 ............................. <replaceChars(string(tPropList[#flatId]), "/", SPACE)>
  [180] pushcons 9 .............................. <"/">
  [182] joinstr ................................. <replaceChars(string(tPropList[#flatId]), "/", SPACE) & "/">
  [183] pushcons 18 ............................. <RETURN>
  [185] joinstr ................................. <replaceChars(string(tPropList[#flatId]), "/", SPACE) & "/" & RETURN>
  [186] setlocal 0 .............................. tFlatMsg = replaceChars(string(tPropList[#flatId]), "/", SPACE) & "/" & RETURN
  [188] getlocal 0 .............................. <tFlatMsg>
  [190] pushcons 53 ............................. <"description=">
  [192] joinstr ................................. <tFlatMsg & "description=">
  [193] getparam 1 .............................. <tPropList>
  [195] pushsymb 157 ............................ <#description>
  [197] pusharglist 2 ........................... <tPropList, #description>
  [199] objcall 51 .............................. <tPropList[#description]>
  [201] joinstr ................................. <tFlatMsg & "description=" & tPropList[#description]>
  [202] pushcons 18 ............................. <RETURN>
  [204] joinstr ................................. <tFlatMsg & "description=" & tPropList[#description] & RETURN>
  [205] setlocal 0 .............................. tFlatMsg = tFlatMsg & "description=" & tPropList[#description] & RETURN
  [207] getlocal 0 .............................. <tFlatMsg>
  [209] pushcons 54 ............................. <"password=">
  [211] joinstr ................................. <tFlatMsg & "password=">
  [212] getparam 1 .............................. <tPropList>
  [214] pushsymb 336 ............................ <#password>
  [217] pusharglist 2 ........................... <tPropList, #password>
  [219] objcall 51 .............................. <tPropList[#password]>
  [221] joinstr ................................. <tFlatMsg & "password=" & tPropList[#password]>
  [222] pushcons 18 ............................. <RETURN>
  [224] joinstr ................................. <tFlatMsg & "password=" & tPropList[#password] & RETURN>
  [225] setlocal 0 .............................. tFlatMsg = tFlatMsg & "password=" & tPropList[#password] & RETURN
  [227] getlocal 0 .............................. <tFlatMsg>
  [229] pushcons 55 ............................. <"allsuperuser=">
  [231] joinstr ................................. <tFlatMsg & "allsuperuser=">
  [232] getparam 1 .............................. <tPropList>
  [234] pushsymb 335 ............................ <#ableothersmovefurniture>
  [237] pusharglist 2 ........................... <tPropList, #ableothersmovefurniture>
  [239] objcall 51 .............................. <tPropList[#ableothersmovefurniture]>
  [241] joinstr ................................. <tFlatMsg & "allsuperuser=" & tPropList[#ableothersmovefurniture]>
  [242] pushcons 18 ............................. <RETURN>
  [244] joinstr ................................. <tFlatMsg & "allsuperuser=" & tPropList[#ableothersmovefurniture] & RETURN>
  [245] setlocal 0 .............................. tFlatMsg = tFlatMsg & "allsuperuser=" & tPropList[#ableothersmovefurniture] & RETURN
  [247] getlocal 0 .............................. <tFlatMsg>
  [249] pushcons 56 ............................. <"maxvisitors=">
  [251] joinstr ................................. <tFlatMsg & "maxvisitors=">
  [252] getparam 1 .............................. <tPropList>
  [254] pushsymb 326 ............................ <#maxVisitors>
  [257] pusharglist 2 ........................... <tPropList, #maxVisitors>
  [259] objcall 51 .............................. <tPropList[#maxVisitors]>
  [261] joinstr ................................. <tFlatMsg & "maxvisitors=" & tPropList[#maxVisitors]>
  [262] setlocal 0 .............................. tFlatMsg = tFlatMsg & "maxvisitors=" & tPropList[#maxVisitors]
  [264] pushcons 57 ............................. <"Sending update flat: ">
  [266] getlocal 0 .............................. <tFlatMsg>
  [268] joinpadstr .............................. <"Sending update flat: " && tFlatMsg>
  [269] pusharglistnoret 1 ...................... <"Sending update flat: " && tFlatMsg>
  [271] extcall 475 ............................. put "Sending update flat: " && tFlatMsg
  [274] getprop 426 ............................. <pConnectionId>
  [277] pusharglist 1 ........................... <pConnectionId>
  [279] extcall 450 ............................. <getConnection(pConnectionId)>
  [282] pushcons 58 ............................. <"SETFLATINFO">
  [284] pushsymb 416 ............................ <#string>
  [287] getlocal 0 .............................. <tFlatMsg>
  [289] pusharglist 1 ........................... <tFlatMsg>
  [291] extcall 416 ............................. <string(tFlatMsg)>
  [294] pusharglist 2 ........................... <[#string: string(tFlatMsg)]>
  [296] pushproplist ............................ <[#string: string(tFlatMsg)]>
  [297] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "SETFLATINFO", [#string: string(tFlatMsg)]>
  [299] objcall 451 ............................. getConnection(pConnectionId).send("SETFLATINFO", [#string: string(tFlatMsg)])
  [302] pushint8 1 .............................. <1>
  [304] pusharglistnoret 1 ...................... <1>
  [306] extcall 36 .............................. return 1
  [308] ret
end

on sendRemoveAllRights me, tRoomID
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tRoomID>
  [  4] pushsymb 162 ............................ <#flatId>
  [  6] pusharglist 3 ........................... <me, tRoomID, #flatId>
  [  8] objcall 77 .............................. <me.getNodeProperty(tRoomID, #flatId)>
  [ 10] pusharglist 1 ........................... <me.getNodeProperty(tRoomID, #flatId)>
  [ 12] extcall 301 ............................. <integer(me.getNodeProperty(tRoomID, #flatId))>
  [ 15] setlocal 0 .............................. tFlatID = integer(me.getNodeProperty(tRoomID, #flatId))
  [ 17] getlocal 0 .............................. <tFlatID>
  [ 19] pusharglist 1 ........................... <tFlatID>
  [ 21] extcall 52 .............................. <voidp(tFlatID)>
  [ 23] jmpifz [ 31] ............................ if voidp(tFlatID) then
  [ 26] pushzero ................................ <0>
  [ 27] pusharglistnoret 1 ...................... <0>
  [ 29] extcall 36 .............................. return 0
  [ 31] getprop 426 ............................. <pConnectionId>
  [ 34] pusharglist 1 ........................... <pConnectionId>
  [ 36] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 39] pushcons 59 ............................. <"REMOVEALLRIGHTS">
  [ 41] pushsymb 301 ............................ <#integer>
  [ 44] getlocal 0 .............................. <tFlatID>
  [ 46] pusharglist 2 ........................... <[#integer: tFlatID]>
  [ 48] pushproplist ............................ <[#integer: tFlatID]>
  [ 49] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "REMOVEALLRIGHTS", [#integer: tFlatID]>
  [ 51] objcall 451 ............................. getConnection(pConnectionId).send("REMOVEALLRIGHTS", [#integer: tFlatID])
  [ 54] pushint8 1 .............................. <1>
  [ 56] pusharglistnoret 1 ...................... <1>
  [ 58] extcall 36 .............................. return 1
  [ 60] ret
end

on sendGetParentChain me, tRoomID
  [  0] getparam 1 .............................. <tRoomID>
  [  2] pusharglist 1 ........................... <tRoomID>
  [  4] extcall 52 .............................. <voidp(tRoomID)>
  [  6] jmpifz [ 14] ............................ if voidp(tRoomID) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 36 .............................. return 0
  [ 14] getprop 426 ............................. <pConnectionId>
  [ 17] pusharglist 1 ........................... <pConnectionId>
  [ 19] extcall 450 ............................. <getConnection(pConnectionId)>
  [ 22] pushcons 60 ............................. <"GETPARENTCHAIN">
  [ 24] pushsymb 301 ............................ <#integer>
  [ 27] getparam 1 .............................. <tRoomID>
  [ 29] pusharglist 1 ........................... <tRoomID>
  [ 31] extcall 301 ............................. <integer(tRoomID)>
  [ 34] pusharglist 2 ........................... <[#integer: integer(tRoomID)]>
  [ 36] pushproplist ............................ <[#integer: integer(tRoomID)]>
  [ 37] pusharglistnoret 3 ...................... <getConnection(pConnectionId), "GETPARENTCHAIN", [#integer: integer(tRoomID)]>
  [ 39] objcall 451 ............................. getConnection(pConnectionId).send("GETPARENTCHAIN", [#integer: integer(tRoomID)])
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglistnoret 1 ...................... <1>
  [ 46] extcall 36 .............................. return 1
  [ 48] ret
end

on getRoomProperties me, tRoomID
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tRoomID>
  [  4] pusharglist 2 ........................... <me, tRoomID>
  [  6] objcall 144 ............................. <me.getNodeInfo(tRoomID)>
  [  8] setlocal 0 .............................. tProps = me.getNodeInfo(tRoomID)
  [ 10] getlocal 0 .............................. <tProps>
  [ 12] pusharglist 0 ........................... <>
  [ 14] extcall 50 .............................. <VOID>
  [ 16] eq ...................................... <tProps = VOID>
  [ 17] jmpifz [ 38] ............................ if tProps = VOID then
  [ 20] getparam 0 .............................. <me>
  [ 22] pushcons 61 ............................. <"Couldn't find room properties:">
  [ 24] getparam 1 .............................. <tRoomID>
  [ 26] joinpadstr .............................. <"Couldn't find room properties:" && tRoomID>
  [ 27] pushsymb 414 ............................ <#getRoomProperties>
  [ 30] pusharglist 3 ........................... <me, "Couldn't find room properties:" && tRoomID, #getRoomProperties>
  [ 32] extcall 69 .............................. <error(me, "Couldn't find room properties:" && tRoomID, #getRoomProperties)>
  [ 34] pusharglistnoret 1 ...................... <error(me, "Couldn't find room properties:" && tRoomID, #getRoomProperties)>
  [ 36] extcall 36 .............................. return error(me, "Couldn't find room properties:" && tRoomID, #getRoomProperties)
  [ 38] getlocal 0 .............................. <tProps>
  [ 40] pushsymb 145 ............................ <#nodeType>
  [ 42] pusharglist 2 ........................... <tProps, #nodeType>
  [ 44] objcall 51 .............................. <tProps[#nodeType]>
  [ 46] pushint8 1 .............................. <1>
  [ 48] nteq .................................... <tProps[#nodeType] <> 1>
  [ 49] jmpifz [228] ............................ if tProps[#nodeType] <> 1 then / else
  [ 52] pusharglist 0 ........................... <[:]>
  [ 54] pushproplist ............................ <[:]>
  [ 55] setlocal 1 .............................. tStruct = [:]
  [ 57] getlocal 1 .............................. <tStruct>
  [ 59] pushsymb 294 ............................ <#id>
  [ 62] getlocal 0 .............................. <tProps>
  [ 64] pushsymb 162 ............................ <#flatId>
  [ 66] pusharglist 2 ........................... <tProps, #flatId>
  [ 68] objcall 51 .............................. <tProps[#flatId]>
  [ 70] pusharglist 1 ........................... <tProps[#flatId]>
  [ 72] extcall 416 ............................. <string(tProps[#flatId])>
  [ 75] pusharglistnoret 3 ...................... <tStruct, #id, string(tProps[#flatId])>
  [ 77] objcall 55 .............................. tStruct[#id] = string(tProps[#flatId])
  [ 79] getlocal 1 .............................. <tStruct>
  [ 81] pushsymb 76 ............................. <#name>
  [ 83] getlocal 0 .............................. <tProps>
  [ 85] pushsymb 76 ............................. <#name>
  [ 87] pusharglist 2 ........................... <tProps, #name>
  [ 89] objcall 51 .............................. <tProps[#name]>
  [ 91] pusharglistnoret 3 ...................... <tStruct, #name, tProps[#name]>
  [ 93] objcall 55 .............................. tStruct[#name] = tProps[#name]
  [ 95] getlocal 1 .............................. <tStruct>
  [ 97] pushsymb 478 ............................ <#type>
  [100] pushsymb 479 ............................ <#private>
  [103] pusharglistnoret 3 ...................... <tStruct, #type, #private>
  [105] objcall 55 .............................. tStruct[#type] = #private
  [107] getlocal 1 .............................. <tStruct>
  [109] pushsymb 480 ............................ <#marker>
  [112] getlocal 0 .............................. <tProps>
  [114] pushsymb 480 ............................ <#marker>
  [117] pusharglist 2 ........................... <tProps, #marker>
  [119] objcall 51 .............................. <tProps[#marker]>
  [121] pusharglistnoret 3 ...................... <tStruct, #marker, tProps[#marker]>
  [123] objcall 55 .............................. tStruct[#marker] = tProps[#marker]
  [125] getlocal 1 .............................. <tStruct>
  [127] pushsymb 156 ............................ <#owner>
  [129] getlocal 0 .............................. <tProps>
  [131] pushsymb 156 ............................ <#owner>
  [133] pusharglist 2 ........................... <tProps, #owner>
  [135] objcall 51 .............................. <tProps[#owner]>
  [137] pusharglistnoret 3 ...................... <tStruct, #owner, tProps[#owner]>
  [139] objcall 55 .............................. tStruct[#owner] = tProps[#owner]
  [141] getlocal 1 .............................. <tStruct>
  [143] pushsymb 147 ............................ <#door>
  [145] getlocal 0 .............................. <tProps>
  [147] pushsymb 147 ............................ <#door>
  [149] pusharglist 2 ........................... <tProps, #door>
  [151] objcall 51 .............................. <tProps[#door]>
  [153] pusharglistnoret 3 ...................... <tStruct, #door, tProps[#door]>
  [155] objcall 55 .............................. tStruct[#door] = tProps[#door]
  [157] getlocal 1 .............................. <tStruct>
  [159] pushsymb 481 ............................ <#port>
  [162] getlocal 0 .............................. <tProps>
  [164] pushsymb 481 ............................ <#port>
  [167] pusharglist 2 ........................... <tProps, #port>
  [169] objcall 51 .............................. <tProps[#port]>
  [171] pusharglistnoret 3 ...................... <tStruct, #port, tProps[#port]>
  [173] objcall 55 .............................. tStruct[#port] = tProps[#port]
  [175] getlocal 1 .............................. <tStruct>
  [177] pushsymb 482 ............................ <#trading>
  [180] getlocal 0 .............................. <tProps>
  [182] pushsymb 482 ............................ <#trading>
  [185] pusharglist 2 ........................... <tProps, #trading>
  [187] objcall 51 .............................. <tProps[#trading]>
  [189] pusharglistnoret 3 ...................... <tStruct, #trading, tProps[#trading]>
  [191] objcall 55 .............................. tStruct[#trading] = tProps[#trading]
  [193] getlocal 1 .............................. <tStruct>
  [195] pushsymb 483 ............................ <#teleport>
  [198] pushzero ................................ <0>
  [199] pusharglistnoret 3 ...................... <tStruct, #teleport, 0>
  [201] objcall 55 .............................. tStruct[#teleport] = 0
  [203] getlocal 1 .............................. <tStruct>
  [205] pushsymb 484 ............................ <#casts>
  [208] pushcons 62 ............................. <"room.cast.private">
  [210] pusharglist 1 ........................... <"room.cast.private">
  [212] extcall 427 ............................. <getVariableValue("room.cast.private")>
  [215] pusharglistnoret 3 ...................... <tStruct, #casts, getVariableValue("room.cast.private")>
  [217] objcall 55 .............................. tStruct[#casts] = getVariableValue("room.cast.private")
  [219] getlocal 1 .............................. <tStruct>
  [221] pusharglistnoret 1 ...................... <tStruct>
  [223] extcall 36 .............................. return tStruct
  [225] jmp [373]
  [228] pusharglist 0 ........................... <[:]>
  [230] pushproplist ............................ <[:]>
  [231] setlocal 1 .............................. tStruct = [:]
  [233] getlocal 1 .............................. <tStruct>
  [235] pushsymb 294 ............................ <#id>
  [238] getlocal 0 .............................. <tProps>
  [240] pushsymb 146 ............................ <#unitStrId>
  [242] pusharglist 2 ........................... <tProps, #unitStrId>
  [244] objcall 51 .............................. <tProps[#unitStrId]>
  [246] pusharglistnoret 3 ...................... <tStruct, #id, tProps[#unitStrId]>
  [248] objcall 55 .............................. tStruct[#id] = tProps[#unitStrId]
  [250] getlocal 1 .............................. <tStruct>
  [252] pushsymb 76 ............................. <#name>
  [254] getlocal 0 .............................. <tProps>
  [256] pushsymb 76 ............................. <#name>
  [258] pusharglist 2 ........................... <tProps, #name>
  [260] objcall 51 .............................. <tProps[#name]>
  [262] pusharglistnoret 3 ...................... <tStruct, #name, tProps[#name]>
  [264] objcall 55 .............................. tStruct[#name] = tProps[#name]
  [266] getlocal 1 .............................. <tStruct>
  [268] pushsymb 478 ............................ <#type>
  [271] pushsymb 485 ............................ <#public>
  [274] pusharglistnoret 3 ...................... <tStruct, #type, #public>
  [276] objcall 55 .............................. tStruct[#type] = #public
  [278] getlocal 1 .............................. <tStruct>
  [280] pushsymb 480 ............................ <#marker>
  [283] getlocal 0 .............................. <tProps>
  [285] pushsymb 480 ............................ <#marker>
  [288] pusharglist 2 ........................... <tProps, #marker>
  [290] objcall 51 .............................. <tProps[#marker]>
  [292] pusharglistnoret 3 ...................... <tStruct, #marker, tProps[#marker]>
  [294] objcall 55 .............................. tStruct[#marker] = tProps[#marker]
  [296] getlocal 1 .............................. <tStruct>
  [298] pushsymb 156 ............................ <#owner>
  [300] pushzero ................................ <0>
  [301] pusharglistnoret 3 ...................... <tStruct, #owner, 0>
  [303] objcall 55 .............................. tStruct[#owner] = 0
  [305] getlocal 1 .............................. <tStruct>
  [307] pushsymb 147 ............................ <#door>
  [309] getlocal 0 .............................. <tProps>
  [311] pushsymb 147 ............................ <#door>
  [313] pusharglist 2 ........................... <tProps, #door>
  [315] objcall 51 .............................. <tProps[#door]>
  [317] pusharglistnoret 3 ...................... <tStruct, #door, tProps[#door]>
  [319] objcall 55 .............................. tStruct[#door] = tProps[#door]
  [321] getlocal 1 .............................. <tStruct>
  [323] pushsymb 481 ............................ <#port>
  [326] getlocal 0 .............................. <tProps>
  [328] pushsymb 481 ............................ <#port>
  [331] pusharglist 2 ........................... <tProps, #port>
  [333] objcall 51 .............................. <tProps[#port]>
  [335] pusharglistnoret 3 ...................... <tStruct, #port, tProps[#port]>
  [337] objcall 55 .............................. tStruct[#port] = tProps[#port]
  [339] getlocal 1 .............................. <tStruct>
  [341] pushsymb 483 ............................ <#teleport>
  [344] pushzero ................................ <0>
  [345] pusharglistnoret 3 ...................... <tStruct, #teleport, 0>
  [347] objcall 55 .............................. tStruct[#teleport] = 0
  [349] getlocal 1 .............................. <tStruct>
  [351] pushsymb 484 ............................ <#casts>
  [354] getlocal 0 .............................. <tProps>
  [356] pushsymb 484 ............................ <#casts>
  [359] pusharglist 2 ........................... <tProps, #casts>
  [361] objcall 51 .............................. <tProps[#casts]>
  [363] pusharglistnoret 3 ...................... <tStruct, #casts, tProps[#casts]>
  [365] objcall 55 .............................. tStruct[#casts] = tProps[#casts]
  [367] getlocal 1 .............................. <tStruct>
  [369] pusharglistnoret 1 ...................... <tStruct>
  [371] extcall 36 .............................. return tStruct
  [373] ret
end

on getCurrentNodeMask me
  [  0] getprop 424 ............................. <pHideFullRoomsFlag>
  [  3] pusharglistnoret 1 ...................... <pHideFullRoomsFlag>
  [  5] extcall 36 .............................. return pHideFullRoomsFlag
  [  7] ret
end

on updateState me, tstate, tProps
  [  0] getparam 1 .............................. <tstate>
  [  2] peek 0 .................................. case tstate of
  [  4] pushcons 8 .............................. <"reset">
  [  6] eq
  [  7] jmpifz [ 36] ............................ (case) "reset":
  [ 10] getparam 1 .............................. <tstate>
  [ 12] setprop 436 ............................. pState = tstate
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglist 1 ........................... <me>
  [ 19] objcall 57 .............................. <me.getInterface()>
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 2 ...................... <me.getInterface(), 0>
  [ 24] objcall 10 .............................. me.getInterface().setUpdates(0)
  [ 26] pop 1
  [ 28] pushzero ................................ <0>
  [ 29] pusharglistnoret 1 ...................... <0>
  [ 31] extcall 36 .............................. return 0
  [ 33] jmp [329]
  [ 36] peek 0
  [ 38] pushcons 63 ............................. <"userLogin">
  [ 40] eq
  [ 41] jmpifz [217] ............................ (case) "userLogin":
  [ 44] getparam 1 .............................. <tstate>
  [ 46] setprop 436 ............................. pState = tstate
  [ 49] getparam 0 .............................. <me>
  [ 51] pusharglist 1 ........................... <me>
  [ 53] objcall 57 .............................. <me.getInterface()>
  [ 55] pushsymb 82 ............................. <#categoryId>
  [ 57] getprop 418 ............................. <pDefaultUnitCatId>
  [ 60] pushsymb 43 ............................. <#unit>
  [ 62] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, pDefaultUnitCatId, #unit>
  [ 64] objcall 4 ............................... me.getInterface().setProperty(#categoryId, pDefaultUnitCatId, #unit)
  [ 66] getparam 0 .............................. <me>
  [ 68] pusharglist 1 ........................... <me>
  [ 70] objcall 57 .............................. <me.getInterface()>
  [ 72] pushsymb 82 ............................. <#categoryId>
  [ 74] getprop 419 ............................. <pDefaultFlatCatId>
  [ 77] pushsymb 44 ............................. <#flat>
  [ 79] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, pDefaultFlatCatId, #flat>
  [ 81] objcall 4 ............................... me.getInterface().setProperty(#categoryId, pDefaultFlatCatId, #flat)
  [ 83] getparam 0 .............................. <me>
  [ 85] pusharglist 1 ........................... <me>
  [ 87] objcall 57 .............................. <me.getInterface()>
  [ 89] pushsymb 82 ............................. <#categoryId>
  [ 91] pushsymb 46 ............................. <#src>
  [ 93] pushsymb 46 ............................. <#src>
  [ 95] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, #src, #src>
  [ 97] objcall 4 ............................... me.getInterface().setProperty(#categoryId, #src, #src)
  [ 99] getparam 0 .............................. <me>
  [101] pusharglist 1 ........................... <me>
  [103] objcall 57 .............................. <me.getInterface()>
  [105] pushsymb 82 ............................. <#categoryId>
  [107] pushsymb 45 ............................. <#own>
  [109] pushsymb 45 ............................. <#own>
  [111] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, #own, #own>
  [113] objcall 4 ............................... me.getInterface().setProperty(#categoryId, #own, #own)
  [115] getparam 0 .............................. <me>
  [117] pusharglist 1 ........................... <me>
  [119] objcall 57 .............................. <me.getInterface()>
  [121] pushsymb 82 ............................. <#categoryId>
  [123] pushsymb 47 ............................. <#fav>
  [125] pushsymb 47 ............................. <#fav>
  [127] pusharglistnoret 4 ...................... <me.getInterface(), #categoryId, #fav, #fav>
  [129] objcall 4 ............................... me.getInterface().setProperty(#categoryId, #fav, #fav)
  [131] getprop 418 ............................. <pDefaultUnitCatId>
  [134] getprop 415 ............................. <pRootUnitCatId>
  [137] nteq .................................... <pDefaultUnitCatId <> pRootUnitCatId>
  [138] jmpifz [151] ............................ if pDefaultUnitCatId <> pRootUnitCatId then
  [141] getparam 0 .............................. <me>
  [143] getprop 418 ............................. <pDefaultUnitCatId>
  [146] pusharglistnoret 2 ...................... <me, pDefaultUnitCatId>
  [148] objcall 413 ............................. me.sendGetParentChain(pDefaultUnitCatId)
  [151] getparam 0 .............................. <me>
  [153] getprop 415 ............................. <pRootUnitCatId>
  [156] pusharglistnoret 2 ...................... <me, pRootUnitCatId>
  [158] objcall 406 ............................. me.sendNavigate(pRootUnitCatId)
  [161] getprop 419 ............................. <pDefaultFlatCatId>
  [164] getprop 417 ............................. <pRootFlatCatId>
  [167] nteq .................................... <pDefaultFlatCatId <> pRootFlatCatId>
  [168] jmpifz [181] ............................ if pDefaultFlatCatId <> pRootFlatCatId then
  [171] getparam 0 .............................. <me>
  [173] getprop 419 ............................. <pDefaultFlatCatId>
  [176] pusharglistnoret 2 ...................... <me, pDefaultFlatCatId>
  [178] objcall 413 ............................. me.sendGetParentChain(pDefaultFlatCatId)
  [181] getparam 0 .............................. <me>
  [183] getprop 417 ............................. <pRootFlatCatId>
  [186] pusharglistnoret 2 ...................... <me, pRootFlatCatId>
  [188] objcall 406 ............................. me.sendNavigate(pRootFlatCatId)
  [191] getparam 0 .............................. <me>
  [193] pushint16 2000 .......................... <2000>
  [196] pushsymb 368 ............................ <#updateState>
  [199] pushcons 64 ............................. <"openNavigator">
  [201] pusharglistnoret 4 ...................... <me, 2000, #updateState, "openNavigator">
  [203] objcall 447 ............................. me.delay(2000, #updateState, "openNavigator")
  [206] pop 1
  [208] pushint8 1 .............................. <1>
  [210] pusharglistnoret 1 ...................... <1>
  [212] extcall 36 .............................. return 1
  [214] jmp [329]
  [217] peek 0
  [219] pushcons 64 ............................. <"openNavigator">
  [221] eq
  [222] jmpifz [251] ............................ (case) "openNavigator":
  [225] getparam 1 .............................. <tstate>
  [227] setprop 436 ............................. pState = tstate
  [230] getparam 0 .............................. <me>
  [232] pusharglist 1 ........................... <me>
  [234] objcall 57 .............................. <me.getInterface()>
  [236] pusharglistnoret 1 ...................... <me.getInterface()>
  [238] objcall 5 ............................... me.getInterface().showNavigator()
  [240] pushsymb 435 ............................ <#updateAvailableFlatCategories>
  [243] pusharglistnoret 1 ...................... <#updateAvailableFlatCategories>
  [245] extcall 340 ............................. executeMessage(#updateAvailableFlatCategories)
  [248] jmp [329]
  [251] peek 0
  [253] pushcons 14 ............................. <"enterEntry">
  [255] eq
  [256] jmpifz [309] ............................ (case) "enterEntry":
  [259] getparam 1 .............................. <tstate>
  [261] setprop 436 ............................. pState = tstate
  [264] pushsymb 488 ............................ <#changeRoom>
  [267] pusharglistnoret 1 ...................... <#changeRoom>
  [269] extcall 340 ............................. executeMessage(#changeRoom)
  [272] pushsymb 396 ............................ <#leaveRoom>
  [275] pusharglistnoret 1 ...................... <#leaveRoom>
  [277] extcall 340 ............................. executeMessage(#leaveRoom)
  [280] getparam 0 .............................. <me>
  [282] getparam 0 .............................. <me>
  [284] pusharglist 1 ........................... <me>
  [286] objcall 57 .............................. <me.getInterface()>
  [288] pushsymb 82 ............................. <#categoryId>
  [290] pusharglist 2 ........................... <me.getInterface(), #categoryId>
  [292] objcall 3 ............................... <me.getInterface().getProperty(#categoryId)>
  [294] pusharglistnoret 2 ...................... <me, me.getInterface().getProperty(#categoryId)>
  [296] objcall 89 .............................. me.createNaviHistory(me.getInterface().getProperty(#categoryId))
  [298] pop 1
  [300] pushint8 1 .............................. <1>
  [302] pusharglistnoret 1 ...................... <1>
  [304] extcall 36 .............................. return 1
  [306] jmp [329] ............................... (case) otherwise:
  [309] pop 1
  [311] getparam 0 .............................. <me>
  [313] pushcons 65 ............................. <"Unknown state:">
  [315] getparam 1 .............................. <tstate>
  [317] joinpadstr .............................. <"Unknown state:" && tstate>
  [318] pushsymb 368 ............................ <#updateState>
  [321] pusharglist 3 ........................... <me, "Unknown state:" && tstate, #updateState>
  [323] extcall 69 .............................. <error(me, "Unknown state:" && tstate, #updateState)>
  [325] pusharglistnoret 1 ...................... <error(me, "Unknown state:" && tstate, #updateState)>
  [327] extcall 36 .............................. return error(me, "Unknown state:" && tstate, #updateState)
  [329] pop 1 ................................... end case
  [331] ret
end
