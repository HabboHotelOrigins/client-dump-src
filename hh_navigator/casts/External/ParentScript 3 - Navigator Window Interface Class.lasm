property pWindowTitle, pOpenWindow, pProps, pGoLinkTextImg, pFullLinkTextImg, pOpenLinkTextImg, pHideFullLinkImages, pResourcesReady, pWriterPrivPlain, pWriterBackTabs, pWriterPlainNormLeft, pWriterPlainBoldLeft, pWriterPlainBoldCent, pWriterUnderNormLeft, pWriterPlainNormWrap, pCatBackImages, pRoomBackImages, pListItemHeight, pHistoryItemHeight, pRoomInfoHeight, pListAreaWidth, pBufferDepth, pLastWindowName

on construct me
  [  0] pushcons 0 .............................. <"navigator">
  [  2] pushcons 1 .............................. <"Hotel Navigator">
  [  4] pusharglist 2 ........................... <"navigator", "Hotel Navigator">
  [  6] extcall 26 .............................. <getText("navigator", "Hotel Navigator")>
  [  8] setprop 25 .............................. pWindowTitle = getText("navigator", "Hotel Navigator")
  [ 10] pusharglist 0 ........................... <[:]>
  [ 12] pushproplist ............................ <[:]>
  [ 13] setprop 27 .............................. pProps = [:]
  [ 15] pushint8 96 ............................. <96>
  [ 17] setprop 28 .............................. pRoomInfoHeight = 96
  [ 19] pushint16 311 ........................... <311>
  [ 22] setprop 29 .............................. pListAreaWidth = 311
  [ 24] pushint8 18 ............................. <18>
  [ 26] setprop 30 .............................. pListItemHeight = 18
  [ 28] pushint8 18 ............................. <18>
  [ 30] setprop 31 .............................. pHistoryItemHeight = 18
  [ 32] pushint8 32 ............................. <32>
  [ 34] setprop 32 .............................. pBufferDepth = 32
  [ 36] pushcons 2 .............................. <"nav_pr">
  [ 38] setprop 33 .............................. pOpenWindow = "nav_pr"
  [ 40] pushzero ................................ <0>
  [ 41] setprop 34 .............................. pResourcesReady = 0
  [ 43] pushcons 3 .............................. <EMPTY>
  [ 45] setprop 35 .............................. pLastWindowName = EMPTY
  [ 47] getparam 0 .............................. <me>
  [ 49] pusharglist 1 ........................... <me>
  [ 51] objcall 14 .............................. <me.createImgResources()>
  [ 53] pusharglistnoret 1 ...................... <me.createImgResources()>
  [ 55] extcall 36 .............................. return me.createImgResources()
  [ 57] ret
end

on deconstruct me
  [  0] pushsymb 39 ............................. <#login_a>
  [  2] pusharglist 1 ........................... <#login_a>
  [  4] extcall 38 .............................. <windowExists(#login_a)>
  [  6] jmpifz [ 15] ............................ if windowExists(#login_a) then
  [  9] pushsymb 39 ............................. <#login_a>
  [ 11] pusharglistnoret 1 ...................... <#login_a>
  [ 13] extcall 40 .............................. removeWindow(#login_a)
  [ 15] pushsymb 41 ............................. <#login_b>
  [ 17] pusharglist 1 ........................... <#login_b>
  [ 19] extcall 38 .............................. <windowExists(#login_b)>
  [ 21] jmpifz [ 30] ............................ if windowExists(#login_b) then
  [ 24] pushsymb 41 ............................. <#login_b>
  [ 26] pusharglistnoret 1 ...................... <#login_b>
  [ 28] extcall 40 .............................. removeWindow(#login_b)
  [ 30] pushsymb 42 ............................. <#login_totp>
  [ 32] pusharglist 1 ........................... <#login_totp>
  [ 34] extcall 38 .............................. <windowExists(#login_totp)>
  [ 36] jmpifz [ 45] ............................ if windowExists(#login_totp) then
  [ 39] pushsymb 42 ............................. <#login_totp>
  [ 41] pusharglistnoret 1 ...................... <#login_totp>
  [ 43] extcall 40 .............................. removeWindow(#login_totp)
  [ 45] getprop 25 .............................. <pWindowTitle>
  [ 47] pusharglist 1 ........................... <pWindowTitle>
  [ 49] extcall 38 .............................. <windowExists(pWindowTitle)>
  [ 51] jmpifz [ 60] ............................ if windowExists(pWindowTitle) then
  [ 54] getprop 25 .............................. <pWindowTitle>
  [ 56] pusharglistnoret 1 ...................... <pWindowTitle>
  [ 58] extcall 40 .............................. removeWindow(pWindowTitle)
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglist 1 ........................... <me>
  [ 64] objcall 15 .............................. <me.removeImgResources()>
  [ 66] pusharglistnoret 1 ...................... <me.removeImgResources()>
  [ 68] extcall 36 .............................. return me.removeImgResources()
  [ 70] ret
end

on getNaviView me
  [  0] getprop 33 .............................. <pOpenWindow>
  [  2] peek 0 .................................. case pOpenWindow of
  [  4] pushcons 2 .............................. <"nav_pr">
  [  6] eq
  [  7] jmpifz [ 21] ............................ (case) "nav_pr":
  [ 10] pop 1
  [ 12] pushsymb 43 ............................. <#unit>
  [ 14] pusharglistnoret 1 ...................... <#unit>
  [ 16] extcall 36 .............................. return #unit
  [ 18] jmp [164]
  [ 21] peek 0
  [ 23] pushcons 4 .............................. <"nav_gr0">
  [ 25] eq
  [ 26] jmpifz [ 40] ............................ (case) "nav_gr0":
  [ 29] pop 1
  [ 31] pushsymb 44 ............................. <#flat>
  [ 33] pusharglistnoret 1 ...................... <#flat>
  [ 35] extcall 36 .............................. return #flat
  [ 37] jmp [164]
  [ 40] peek 0
  [ 42] pushcons 5 .............................. <"nav_gr_own">
  [ 44] eq
  [ 45] jmpifz [ 59] ............................ (case) "nav_gr_own":
  [ 48] pop 1
  [ 50] pushsymb 45 ............................. <#own>
  [ 52] pusharglistnoret 1 ...................... <#own>
  [ 54] extcall 36 .............................. return #own
  [ 56] jmp [164]
  [ 59] peek 0
  [ 61] pushcons 6 .............................. <"nav_gr_src">
  [ 63] eq
  [ 64] jmpifz [ 78] ............................ (case) "nav_gr_src":
  [ 67] pop 1
  [ 69] pushsymb 46 ............................. <#src>
  [ 71] pusharglistnoret 1 ...................... <#src>
  [ 73] extcall 36 .............................. return #src
  [ 75] jmp [164]
  [ 78] peek 0
  [ 80] pushcons 7 .............................. <"nav_gr_fav">
  [ 82] eq
  [ 83] jmpifz [ 97] ............................ (case) "nav_gr_fav":
  [ 86] pop 1
  [ 88] pushsymb 47 ............................. <#fav>
  [ 90] pusharglistnoret 1 ...................... <#fav>
  [ 92] extcall 36 .............................. return #fav
  [ 94] jmp [164]
  [ 97] peek 0
  [ 99] pushcons 8 .............................. <"nav_gr_mod">
  [101] nteq
  [102] jmpifz [145] ............................ (case) "nav_gr_mod", ...
  [105] peek 0
  [107] pushcons 9 .............................. <"nav_gr_mod_b">
  [109] nteq
  [110] jmpifz [145] ............................ (case) ..., "nav_gr_mod_b", ...
  [113] peek 0
  [115] pushcons 10 ............................. <"nav_gr_modify_delete1">
  [117] nteq
  [118] jmpifz [145] ............................ (case) ..., "nav_gr_modify_delete1", ...
  [121] peek 0
  [123] pushcons 11 ............................. <"nav_gr_modify_delete2">
  [125] nteq
  [126] jmpifz [145] ............................ (case) ..., "nav_gr_modify_delete2", ...
  [129] peek 0
  [131] pushcons 12 ............................. <"nav_gr_modify_delete3">
  [133] nteq
  [134] jmpifz [145] ............................ (case) ..., "nav_gr_modify_delete3", ...
  [137] peek 0
  [139] pushcons 13 ............................. <"nav_modify_removerights">
  [141] eq
  [142] jmpifz [156] ............................ (case) ..., "nav_modify_removerights":
  [145] pop 1
  [147] pushsymb 48 ............................. <#mod>
  [149] pusharglistnoret 1 ...................... <#mod>
  [151] extcall 36 .............................. return #mod
  [153] jmp [164] ............................... (case) otherwise:
  [156] pop 1
  [158] pushsymb 49 ............................. <#none>
  [160] pusharglistnoret 1 ...................... <#none>
  [162] extcall 36 .............................. return #none
  [164] pop 1 ................................... end case
  [166] ret
end

on getProperty me, tProp, tView
  [  0] getparam 2 .............................. <tView>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 50 .............................. <VOID>
  [  6] eq ...................................... <tView = VOID>
  [  7] jmpifz [ 18] ............................ if tView = VOID then
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 2 ............................... <me.getNaviView()>
  [ 16] setparam 2 .............................. tView = me.getNaviView()
  [ 18] getparam 2 .............................. <tView>
  [ 20] pushsymb 48 ............................. <#mod>
  [ 22] eq ...................................... <tView = #mod>
  [ 23] jmpifz [ 30] ............................ if tView = #mod then
  [ 26] pushsymb 45 ............................. <#own>
  [ 28] setparam 2 .............................. tView = #own
  [ 30] getparam 2 .............................. <tView>
  [ 32] pushzero ................................ <0>
  [ 33] eq ...................................... <tView = 0>
  [ 34] jmpifz [ 45] ............................ if tView = 0 then
  [ 37] pusharglist 0 ........................... <>
  [ 39] extcall 50 .............................. <VOID>
  [ 41] pusharglistnoret 1 ...................... <VOID>
  [ 43] extcall 36 .............................. return VOID
  [ 45] getprop 27 .............................. <pProps>
  [ 47] getparam 2 .............................. <tView>
  [ 49] pusharglist 2 ........................... <pProps, tView>
  [ 51] objcall 51 .............................. <pProps[tView]>
  [ 53] pusharglist 0 ........................... <>
  [ 55] extcall 50 .............................. <VOID>
  [ 57] eq ...................................... <pProps[tView] = VOID>
  [ 58] jmpifz [ 69] ............................ if pProps[tView] = VOID then
  [ 61] pusharglist 0 ........................... <>
  [ 63] extcall 50 .............................. <VOID>
  [ 65] pusharglistnoret 1 ...................... <VOID>
  [ 67] extcall 36 .............................. return VOID
  [ 69] getprop 27 .............................. <pProps>
  [ 71] getparam 2 .............................. <tView>
  [ 73] pusharglist 2 ........................... <pProps, tView>
  [ 75] objcall 51 .............................. <pProps[tView]>
  [ 77] getparam 1 .............................. <tProp>
  [ 79] pusharglist 2 ........................... <pProps[tView], tProp>
  [ 81] objcall 51 .............................. <pProps[tView][tProp]>
  [ 83] pusharglist 1 ........................... <pProps[tView][tProp]>
  [ 85] extcall 52 .............................. <voidp(pProps[tView][tProp])>
  [ 87] not ..................................... <not voidp(pProps[tView][tProp])>
  [ 88] jmpifz [112] ............................ if not voidp(pProps[tView][tProp]) then / else
  [ 91] getprop 27 .............................. <pProps>
  [ 93] getparam 2 .............................. <tView>
  [ 95] pusharglist 2 ........................... <pProps, tView>
  [ 97] objcall 51 .............................. <pProps[tView]>
  [ 99] getparam 1 .............................. <tProp>
  [101] pusharglist 2 ........................... <pProps[tView], tProp>
  [103] objcall 51 .............................. <pProps[tView][tProp]>
  [105] pusharglistnoret 1 ...................... <pProps[tView][tProp]>
  [107] extcall 36 .............................. return pProps[tView][tProp]
  [109] jmp [120]
  [112] pusharglist 0 ........................... <>
  [114] extcall 50 .............................. <VOID>
  [116] pusharglistnoret 1 ...................... <VOID>
  [118] extcall 36 .............................. return VOID
  [120] ret
end

on setProperty me, tProp, tValue, tView
  [  0] getparam 3 .............................. <tView>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 50 .............................. <VOID>
  [  6] eq ...................................... <tView = VOID>
  [  7] jmpifz [ 18] ............................ if tView = VOID then
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 2 ............................... <me.getNaviView()>
  [ 16] setparam 3 .............................. tView = me.getNaviView()
  [ 18] getparam 3 .............................. <tView>
  [ 20] pushzero ................................ <0>
  [ 21] eq ...................................... <tView = 0>
  [ 22] jmpifz [ 30] ............................ if tView = 0 then
  [ 25] pushzero ................................ <0>
  [ 26] pusharglistnoret 1 ...................... <0>
  [ 28] extcall 36 .............................. return 0
  [ 30] getprop 27 .............................. <pProps>
  [ 32] getparam 3 .............................. <tView>
  [ 34] pusharglist 2 ........................... <pProps, tView>
  [ 36] objcall 51 .............................. <pProps[tView]>
  [ 38] pusharglist 0 ........................... <>
  [ 40] extcall 50 .............................. <VOID>
  [ 42] eq ...................................... <pProps[tView] = VOID>
  [ 43] jmpifz [ 57] ............................ if pProps[tView] = VOID then
  [ 46] getprop 27 .............................. <pProps>
  [ 48] getparam 3 .............................. <tView>
  [ 50] pusharglist 0 ........................... <[:]>
  [ 52] pushproplist ............................ <[:]>
  [ 53] pusharglistnoret 3 ...................... <pProps, tView, [:]>
  [ 55] objcall 55 .............................. pProps[tView] = [:]
  [ 57] getprop 27 .............................. <pProps>
  [ 59] getparam 3 .............................. <tView>
  [ 61] pusharglist 2 ........................... <pProps, tView>
  [ 63] objcall 51 .............................. <pProps[tView]>
  [ 65] getparam 1 .............................. <tProp>
  [ 67] getparam 2 .............................. <tValue>
  [ 69] pusharglistnoret 3 ...................... <pProps[tView], tProp, tValue>
  [ 71] objcall 55 .............................. pProps[tView][tProp] = tValue
  [ 73] pushint8 1 .............................. <1>
  [ 75] pusharglistnoret 1 ...................... <1>
  [ 77] extcall 36 .............................. return 1
  [ 79] ret
end

on showNavigator me
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pushint8 1 .............................. <1>
  [  8] pusharglistnoret 2 ...................... <me.getInterface(), 1>
  [ 10] objcall 10 .............................. me.getInterface().setUpdates(1)
  [ 12] getprop 25 .............................. <pWindowTitle>
  [ 14] pusharglist 1 ........................... <pWindowTitle>
  [ 16] extcall 38 .............................. <windowExists(pWindowTitle)>
  [ 18] jmpifz [ 34] ............................ if windowExists(pWindowTitle) then / else
  [ 21] getprop 25 .............................. <pWindowTitle>
  [ 23] pusharglist 1 ........................... <pWindowTitle>
  [ 25] extcall 58 .............................. <getWindow(pWindowTitle)>
  [ 27] pusharglistnoret 1 ...................... <getWindow(pWindowTitle)>
  [ 29] objcall 59 .............................. getWindow(pWindowTitle).show()
  [ 31] jmp [ 46]
  [ 34] getparam 0 .............................. <me>
  [ 36] getprop 33 .............................. <pOpenWindow>
  [ 38] pusharglist 2 ........................... <me, pOpenWindow>
  [ 40] objcall 8 ............................... <me.ChangeWindowView(pOpenWindow)>
  [ 42] pusharglistnoret 1 ...................... <me.ChangeWindowView(pOpenWindow)>
  [ 44] extcall 36 .............................. return me.ChangeWindowView(pOpenWindow)
  [ 46] pushzero ................................ <0>
  [ 47] pusharglistnoret 1 ...................... <0>
  [ 49] extcall 36 .............................. return 0
  [ 51] ret
end

on hideNavigator me, tHideOrRemove
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 57 .............................. <me.getInterface()>
  [  6] pushzero ................................ <0>
  [  7] pusharglistnoret 2 ...................... <me.getInterface(), 0>
  [  9] objcall 10 .............................. me.getInterface().setUpdates(0)
  [ 11] getparam 1 .............................. <tHideOrRemove>
  [ 13] pusharglist 1 ........................... <tHideOrRemove>
  [ 15] extcall 52 .............................. <voidp(tHideOrRemove)>
  [ 17] jmpifz [ 24] ............................ if voidp(tHideOrRemove) then
  [ 20] pushsymb 60 ............................. <#Remove>
  [ 22] setparam 1 .............................. tHideOrRemove = #Remove
  [ 24] getprop 25 .............................. <pWindowTitle>
  [ 26] pusharglist 1 ........................... <pWindowTitle>
  [ 28] extcall 38 .............................. <windowExists(pWindowTitle)>
  [ 30] jmpifz [ 60] ............................ if windowExists(pWindowTitle) then
  [ 33] getparam 1 .............................. <tHideOrRemove>
  [ 35] pushsymb 60 ............................. <#Remove>
  [ 37] eq ...................................... <tHideOrRemove = #Remove>
  [ 38] jmpifz [ 50] ............................ if tHideOrRemove = #Remove then / else
  [ 41] getprop 25 .............................. <pWindowTitle>
  [ 43] pusharglistnoret 1 ...................... <pWindowTitle>
  [ 45] extcall 40 .............................. removeWindow(pWindowTitle)
  [ 47] jmp [ 60]
  [ 50] getprop 25 .............................. <pWindowTitle>
  [ 52] pusharglist 1 ........................... <pWindowTitle>
  [ 54] extcall 58 .............................. <getWindow(pWindowTitle)>
  [ 56] pusharglistnoret 1 ...................... <getWindow(pWindowTitle)>
  [ 58] objcall 61 .............................. getWindow(pWindowTitle).hide()
  [ 60] pushint8 1 .............................. <1>
  [ 62] pusharglistnoret 1 ...................... <1>
  [ 64] extcall 36 .............................. return 1
  [ 66] ret
end

on showhidenavigator me, tHideOrRemove
  [  0] getparam 1 .............................. <tHideOrRemove>
  [  2] pusharglist 1 ........................... <tHideOrRemove>
  [  4] extcall 52 .............................. <voidp(tHideOrRemove)>
  [  6] jmpifz [ 13] ............................ if voidp(tHideOrRemove) then
  [  9] pushsymb 60 ............................. <#Remove>
  [ 11] setparam 1 .............................. tHideOrRemove = #Remove
  [ 13] getprop 25 .............................. <pWindowTitle>
  [ 15] pusharglist 1 ........................... <pWindowTitle>
  [ 17] extcall 38 .............................. <windowExists(pWindowTitle)>
  [ 19] jmpifz [ 57] ............................ if windowExists(pWindowTitle) then / else
  [ 22] getprop 25 .............................. <pWindowTitle>
  [ 24] pusharglist 1 ........................... <pWindowTitle>
  [ 26] extcall 58 .............................. <getWindow(pWindowTitle)>
  [ 28] pushsymb 63 ............................. <#visible>
  [ 30] pusharglist 2 ........................... <getWindow(pWindowTitle), #visible>
  [ 32] objcall 3 ............................... <getWindow(pWindowTitle).getProperty(#visible)>
  [ 34] jmpifz [ 48] ............................ if getWindow(pWindowTitle).getProperty(#visible) then / else
  [ 37] getparam 0 .............................. <me>
  [ 39] getparam 1 .............................. <tHideOrRemove>
  [ 41] pusharglistnoret 2 ...................... <me, tHideOrRemove>
  [ 43] objcall 6 ............................... me.hideNavigator(tHideOrRemove)
  [ 45] jmp [ 54]
  [ 48] getparam 0 .............................. <me>
  [ 50] pusharglistnoret 1 ...................... <me>
  [ 52] objcall 5 ............................... me.showNavigator()
  [ 54] jmp [ 63]
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglistnoret 1 ...................... <me>
  [ 61] objcall 5 ............................... me.showNavigator()
  [ 63] ret
end

on ChangeWindowView me, tWindowName
  [  0] getprop 25 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 58 .............................. <getWindow(pWindowTitle)>
  [  6] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [  8] pushzero ................................ <0>
  [  9] setlocal 1 .............................. tScrollOffset = 0
  [ 11] getlocal 0 .............................. <tWndObj>
  [ 13] pushzero ................................ <0>
  [ 14] nteq .................................... <tWndObj <> 0>
  [ 15] jmpifz [ 58] ............................ if tWndObj <> 0 then / else
  [ 18] getparam 1 .............................. <tWindowName>
  [ 20] pushcons 2 .............................. <"nav_pr">
  [ 22] containsstr ............................. <tWindowName contains "nav_pr">
  [ 23] getlocal 0 .............................. <tWndObj>
  [ 25] pushcons 14 ............................. <"nav_scrollbar">
  [ 27] pusharglist 2 ........................... <tWndObj, "nav_scrollbar">
  [ 29] objcall 64 .............................. <tWndObj.elementExists("nav_scrollbar")>
  [ 31] and ..................................... <(tWindowName contains "nav_pr") and tWndObj.elementExists("nav_scrollbar")>
  [ 32] jmpifz [ 49] ............................ if (tWindowName contains "nav_pr") and tWndObj.elementExists("nav_scrollbar") then
  [ 35] getlocal 0 .............................. <tWndObj>
  [ 37] pushcons 14 ............................. <"nav_scrollbar">
  [ 39] pusharglist 2 ........................... <tWndObj, "nav_scrollbar">
  [ 41] objcall 65 .............................. <tWndObj.getElement("nav_scrollbar")>
  [ 43] pusharglist 1 ........................... <tWndObj.getElement("nav_scrollbar")>
  [ 45] objcall 66 .............................. <tWndObj.getElement("nav_scrollbar").getScrollOffset()>
  [ 47] setlocal 1 .............................. tScrollOffset = tWndObj.getElement("nav_scrollbar").getScrollOffset()
  [ 49] getlocal 0 .............................. <tWndObj>
  [ 51] pusharglistnoret 1 ...................... <tWndObj>
  [ 53] objcall 67 .............................. tWndObj.unmerge()
  [ 55] jmp [109]
  [ 58] getprop 25 .............................. <pWindowTitle>
  [ 60] pushcons 15 ............................. <"habbo_basic.window">
  [ 62] pushint16 345 ........................... <345>
  [ 65] pushint8 20 ............................. <20>
  [ 67] pusharglist 4 ........................... <pWindowTitle, "habbo_basic.window", 345, 20>
  [ 69] extcall 68 .............................. <createWindow(pWindowTitle, "habbo_basic.window", 345, 20)>
  [ 71] not ..................................... <not createWindow(pWindowTitle, "habbo_basic.window", 345, 20)>
  [ 72] jmpifz [ 89] ............................ if not createWindow(pWindowTitle, "habbo_basic.window", 345, 20) then
  [ 75] getparam 0 .............................. <me>
  [ 77] pushcons 16 ............................. <"Failed to create window for Navigator!">
  [ 79] pushsymb 8 .............................. <#ChangeWindowView>
  [ 81] pusharglist 3 ........................... <me, "Failed to create window for Navigator!", #ChangeWindowView>
  [ 83] extcall 69 .............................. <error(me, "Failed to create window for Navigator!", #ChangeWindowView)>
  [ 85] pusharglistnoret 1 ...................... <error(me, "Failed to create window for Navigator!", #ChangeWindowView)>
  [ 87] extcall 36 .............................. return error(me, "Failed to create window for Navigator!", #ChangeWindowView)
  [ 89] getprop 25 .............................. <pWindowTitle>
  [ 91] pusharglist 1 ........................... <pWindowTitle>
  [ 93] extcall 58 .............................. <getWindow(pWindowTitle)>
  [ 95] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 97] getlocal 0 .............................. <tWndObj>
  [ 99] getparam 0 .............................. <me>
  [101] pusharglist 1 ........................... <me>
  [103] objcall 70 .............................. <me.getID()>
  [105] pusharglistnoret 2 ...................... <tWndObj, me.getID()>
  [107] objcall 71 .............................. tWndObj.registerClient(me.getID())
  [109] getlocal 0 .............................. <tWndObj>
  [111] getparam 1 .............................. <tWindowName>
  [113] pushcons 17 ............................. <".window">
  [115] joinstr ................................. <tWindowName & ".window">
  [116] pusharglist 2 ........................... <tWndObj, tWindowName & ".window">
  [118] objcall 72 .............................. <tWndObj.merge(tWindowName & ".window")>
  [120] not ..................................... <not tWndObj.merge(tWindowName & ".window")>
  [121] jmpifz [134] ............................ if not tWndObj.merge(tWindowName & ".window") then
  [124] getlocal 0 .............................. <tWndObj>
  [126] pusharglist 1 ........................... <tWndObj>
  [128] objcall 73 .............................. <tWndObj.close()>
  [130] pusharglistnoret 1 ...................... <tWndObj.close()>
  [132] extcall 36 .............................. return tWndObj.close()
  [134] getparam 1 .............................. <tWindowName>
  [136] setprop 35 .............................. pLastWindowName = tWindowName
  [138] getparam 1 .............................. <tWindowName>
  [140] peek 0 .................................. case tWindowName of
  [142] pushcons 18 ............................. <"nav_gr_password">
  [144] nteq
  [145] jmpifz [164] ............................ (case) "nav_gr_password", ...
  [148] peek 0
  [150] pushcons 19 ............................. <"nav_gr_trypassword">
  [152] nteq
  [153] jmpifz [164] ............................ (case) ..., "nav_gr_trypassword", ...
  [156] peek 0
  [158] pushcons 20 ............................. <"nav_gr_passwordincorrect">
  [160] eq
  [161] jmpifz [223] ............................ (case) ..., "nav_gr_passwordincorrect":
  [164] getparam 0 .............................. <me>
  [166] pusharglist 1 ........................... <me>
  [168] objcall 74 .............................. <me.getComponent()>
  [170] getparam 0 .............................. <me>
  [172] pushsymb 75 ............................. <#viewedNodeId>
  [174] pusharglist 2 ........................... <me, #viewedNodeId>
  [176] objcall 3 ............................... <me.getProperty(#viewedNodeId)>
  [178] pushsymb 76 ............................. <#name>
  [180] pusharglist 3 ........................... <me.getComponent(), me.getProperty(#viewedNodeId), #name>
  [182] objcall 77 .............................. <me.getComponent().getNodeProperty(me.getProperty(#viewedNodeId), #name)>
  [184] setlocal 2 .............................. tName = me.getComponent().getNodeProperty(me.getProperty(#viewedNodeId), #name)
  [186] getlocal 2 .............................. <tName>
  [188] pusharglist 1 ........................... <tName>
  [190] extcall 78 .............................. <stringp(tName)>
  [192] not ..................................... <not stringp(tName)>
  [193] jmpifz [200] ............................ if not stringp(tName) then
  [196] pushcons 3 .............................. <EMPTY>
  [198] setlocal 2 .............................. tName = EMPTY
  [200] getparam 0 .............................. <me>
  [202] getobjprop 25 ........................... <me.pWindowTitle>
  [204] pusharglist 1 ........................... <me.pWindowTitle>
  [206] extcall 58 .............................. <getWindow(me.pWindowTitle)>
  [208] pushcons 21 ............................. <"nav_roomname_text">
  [210] pusharglist 2 ........................... <getWindow(me.pWindowTitle), "nav_roomname_text">
  [212] objcall 65 .............................. <getWindow(me.pWindowTitle).getElement("nav_roomname_text")>
  [214] getlocal 2 .............................. <tName>
  [216] pusharglistnoret 2 ...................... <getWindow(me.pWindowTitle).getElement("nav_roomname_text"), tName>
  [218] objcall 79 .............................. getWindow(me.pWindowTitle).getElement("nav_roomname_text").setText(tName)
  [220] jmp [242]
  [223] peek 0
  [225] pushcons 22 ............................. <"nav_remove_rights">
  [227] eq
  [228] jmpifz [238] ............................ (case) "nav_remove_rights":
  [231] pusharglistnoret 0 ...................... <>
  [233] extcall 80 .............................. nothing()
  [235] jmp [242] ............................... (case) otherwise:
  [238] getparam 1 .............................. <tWindowName>
  [240] setprop 33 .............................. pOpenWindow = tWindowName
  [242] pop 1 ................................... end case
  [244] getlocal 0 .............................. <tWndObj>
  [246] pushcons 23 ............................. <"nav_roomlist">
  [248] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [250] objcall 64 .............................. <tWndObj.elementExists("nav_roomlist")>
  [252] jmpifz [267] ............................ if tWndObj.elementExists("nav_roomlist") then
  [255] getlocal 0 .............................. <tWndObj>
  [257] pushcons 23 ............................. <"nav_roomlist">
  [259] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [261] objcall 65 .............................. <tWndObj.getElement("nav_roomlist")>
  [263] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_roomlist")>
  [265] objcall 81 .............................. tWndObj.getElement("nav_roomlist").clearImage()
  [267] getparam 0 .............................. <me>
  [269] pushsymb 82 ............................. <#categoryId>
  [271] pusharglist 2 ........................... <me, #categoryId>
  [273] objcall 3 ............................... <me.getProperty(#categoryId)>
  [275] setlocal 3 .............................. tCategoryId = me.getProperty(#categoryId)
  [277] getparam 0 .............................. <me>
  [279] pushsymb 83 ............................. <#roomInfoState>
  [281] pusharglist 2 ........................... <me, #roomInfoState>
  [283] objcall 3 ............................... <me.getProperty(#roomInfoState)>
  [285] setlocal 4 .............................. tRoomInfoState = me.getProperty(#roomInfoState)
  [287] getparam 0 .............................. <me>
  [289] pusharglist 1 ........................... <me>
  [291] objcall 2 ............................... <me.getNaviView()>
  [293] setlocal 5 .............................. tNaviView = me.getNaviView()
  [295] getlocal 5 .............................. <tNaviView>
  [297] peek 0 .................................. case tNaviView of
  [299] pushsymb 43 ............................. <#unit>
  [301] eq
  [302] jmpifz [431] ............................ (case) #unit:
  [305] getlocal 0 .............................. <tWndObj>
  [307] pushsymb 84 ............................. <#eventProcNavigatorPublic>
  [309] getparam 0 .............................. <me>
  [311] pusharglist 1 ........................... <me>
  [313] objcall 70 .............................. <me.getID()>
  [315] pushsymb 85 ............................. <#mouseDown>
  [317] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorPublic, me.getID(), #mouseDown>
  [319] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorPublic, me.getID(), #mouseDown)
  [321] getlocal 0 .............................. <tWndObj>
  [323] pushsymb 84 ............................. <#eventProcNavigatorPublic>
  [325] getparam 0 .............................. <me>
  [327] pusharglist 1 ........................... <me>
  [329] objcall 70 .............................. <me.getID()>
  [331] pushsymb 87 ............................. <#mouseUp>
  [333] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorPublic, me.getID(), #mouseUp>
  [335] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorPublic, me.getID(), #mouseUp)
  [337] getlocal 0 .............................. <tWndObj>
  [339] pushsymb 84 ............................. <#eventProcNavigatorPublic>
  [341] getparam 0 .............................. <me>
  [343] pusharglist 1 ........................... <me>
  [345] objcall 70 .............................. <me.getID()>
  [347] pushsymb 88 ............................. <#keyDown>
  [349] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorPublic, me.getID(), #keyDown>
  [351] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorPublic, me.getID(), #keyDown)
  [353] getparam 0 .............................. <me>
  [355] pusharglist 1 ........................... <me>
  [357] objcall 74 .............................. <me.getComponent()>
  [359] getlocal 3 .............................. <tCategoryId>
  [361] pusharglistnoret 2 ...................... <me.getComponent(), tCategoryId>
  [363] objcall 89 .............................. me.getComponent().createNaviHistory(tCategoryId)
  [365] getparam 0 .............................. <me>
  [367] getlocal 3 .............................. <tCategoryId>
  [369] pusharglist 0 ........................... <>
  [371] extcall 50 .............................. <VOID>
  [373] pusharglistnoret 3 ...................... <me, tCategoryId, VOID>
  [375] objcall 9 ............................... me.updateRoomList(tCategoryId, VOID)
  [377] getlocal 4 .............................. <tRoomInfoState>
  [379] pushsymb 61 ............................. <#hide>
  [381] eq ...................................... <tRoomInfoState = #hide>
  [382] jmpifz [406] ............................ if tRoomInfoState = #hide then / else
  [385] getparam 0 .............................. <me>
  [387] pushsymb 83 ............................. <#roomInfoState>
  [389] pushsymb 59 ............................. <#show>
  [391] pusharglistnoret 3 ...................... <me, #roomInfoState, #show>
  [393] objcall 4 ............................... me.setProperty(#roomInfoState, #show)
  [395] getparam 0 .............................. <me>
  [397] pushsymb 61 ............................. <#hide>
  [399] pusharglistnoret 2 ...................... <me, #hide>
  [401] objcall 21 .............................. me.setRoomInfoArea(#hide)
  [403] jmp [420]
  [406] getparam 0 .............................. <me>
  [408] getparam 0 .............................. <me>
  [410] pushsymb 75 ............................. <#viewedNodeId>
  [412] pusharglist 2 ........................... <me, #viewedNodeId>
  [414] objcall 3 ............................... <me.getProperty(#viewedNodeId)>
  [416] pusharglistnoret 2 ...................... <me, me.getProperty(#viewedNodeId)>
  [418] objcall 13 .............................. me.showNodeInfo(me.getProperty(#viewedNodeId))
  [420] pop 1
  [422] pushint8 1 .............................. <1>
  [424] pusharglistnoret 1 ...................... <1>
  [426] extcall 36 .............................. return 1
  [428] jmp [693]
  [431] peek 0
  [433] pushsymb 44 ............................. <#flat>
  [435] nteq
  [436] jmpifz [463] ............................ (case) #flat, ...
  [439] peek 0
  [441] pushsymb 46 ............................. <#src>
  [443] nteq
  [444] jmpifz [463] ............................ (case) ..., #src, ...
  [447] peek 0
  [449] pushsymb 45 ............................. <#own>
  [451] nteq
  [452] jmpifz [463] ............................ (case) ..., #own, ...
  [455] peek 0
  [457] pushsymb 47 ............................. <#fav>
  [459] eq
  [460] jmpifz [612] ............................ (case) ..., #fav:
  [463] getlocal 0 .............................. <tWndObj>
  [465] pushsymb 90 ............................. <#eventProcNavigatorPrivate>
  [467] getparam 0 .............................. <me>
  [469] pusharglist 1 ........................... <me>
  [471] objcall 70 .............................. <me.getID()>
  [473] pushsymb 85 ............................. <#mouseDown>
  [475] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorPrivate, me.getID(), #mouseDown>
  [477] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorPrivate, me.getID(), #mouseDown)
  [479] getlocal 0 .............................. <tWndObj>
  [481] pushsymb 90 ............................. <#eventProcNavigatorPrivate>
  [483] getparam 0 .............................. <me>
  [485] pusharglist 1 ........................... <me>
  [487] objcall 70 .............................. <me.getID()>
  [489] pushsymb 87 ............................. <#mouseUp>
  [491] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorPrivate, me.getID(), #mouseUp>
  [493] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorPrivate, me.getID(), #mouseUp)
  [495] getlocal 0 .............................. <tWndObj>
  [497] pushsymb 90 ............................. <#eventProcNavigatorPrivate>
  [499] getparam 0 .............................. <me>
  [501] pusharglist 1 ........................... <me>
  [503] objcall 70 .............................. <me.getID()>
  [505] pushsymb 88 ............................. <#keyDown>
  [507] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorPrivate, me.getID(), #keyDown>
  [509] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorPrivate, me.getID(), #keyDown)
  [511] getlocal 5 .............................. <tNaviView>
  [513] pushsymb 44 ............................. <#flat>
  [515] eq ...................................... <tNaviView = #flat>
  [516] jmpifz [546] ............................ if tNaviView = #flat then / else
  [519] getparam 0 .............................. <me>
  [521] pusharglist 1 ........................... <me>
  [523] objcall 74 .............................. <me.getComponent()>
  [525] getlocal 3 .............................. <tCategoryId>
  [527] pusharglistnoret 2 ...................... <me.getComponent(), tCategoryId>
  [529] objcall 89 .............................. me.getComponent().createNaviHistory(tCategoryId)
  [531] getparam 0 .............................. <me>
  [533] getlocal 3 .............................. <tCategoryId>
  [535] pusharglist 0 ........................... <>
  [537] extcall 50 .............................. <VOID>
  [539] pusharglistnoret 3 ...................... <me, tCategoryId, VOID>
  [541] objcall 9 ............................... me.updateRoomList(tCategoryId, VOID)
  [543] jmp [558]
  [546] getparam 0 .............................. <me>
  [548] pusharglist 1 ........................... <me>
  [550] objcall 74 .............................. <me.getComponent()>
  [552] getlocal 3 .............................. <tCategoryId>
  [554] pusharglistnoret 2 ...................... <me.getComponent(), tCategoryId>
  [556] objcall 91 .............................. me.getComponent().updateInterface(tCategoryId)
  [558] getlocal 4 .............................. <tRoomInfoState>
  [560] pushsymb 61 ............................. <#hide>
  [562] eq ...................................... <tRoomInfoState = #hide>
  [563] jmpifz [587] ............................ if tRoomInfoState = #hide then / else
  [566] getparam 0 .............................. <me>
  [568] pushsymb 83 ............................. <#roomInfoState>
  [570] pushsymb 59 ............................. <#show>
  [572] pusharglistnoret 3 ...................... <me, #roomInfoState, #show>
  [574] objcall 4 ............................... me.setProperty(#roomInfoState, #show)
  [576] getparam 0 .............................. <me>
  [578] pushsymb 61 ............................. <#hide>
  [580] pusharglistnoret 2 ...................... <me, #hide>
  [582] objcall 21 .............................. me.setRoomInfoArea(#hide)
  [584] jmp [601]
  [587] getparam 0 .............................. <me>
  [589] getparam 0 .............................. <me>
  [591] pushsymb 75 ............................. <#viewedNodeId>
  [593] pusharglist 2 ........................... <me, #viewedNodeId>
  [595] objcall 3 ............................... <me.getProperty(#viewedNodeId)>
  [597] pusharglistnoret 2 ...................... <me, me.getProperty(#viewedNodeId)>
  [599] objcall 13 .............................. me.showNodeInfo(me.getProperty(#viewedNodeId))
  [601] pop 1
  [603] pushint8 1 .............................. <1>
  [605] pusharglistnoret 1 ...................... <1>
  [607] extcall 36 .............................. return 1
  [609] jmp [693]
  [612] peek 0
  [614] pushsymb 48 ............................. <#mod>
  [616] eq
  [617] jmpifz [693] ............................ (case) #mod:
  [620] getlocal 0 .............................. <tWndObj>
  [622] pushsymb 92 ............................. <#eventProcNavigatorModify>
  [624] getparam 0 .............................. <me>
  [626] pusharglist 1 ........................... <me>
  [628] objcall 70 .............................. <me.getID()>
  [630] pushsymb 85 ............................. <#mouseDown>
  [632] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorModify, me.getID(), #mouseDown>
  [634] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorModify, me.getID(), #mouseDown)
  [636] getlocal 0 .............................. <tWndObj>
  [638] pushsymb 92 ............................. <#eventProcNavigatorModify>
  [640] getparam 0 .............................. <me>
  [642] pusharglist 1 ........................... <me>
  [644] objcall 70 .............................. <me.getID()>
  [646] pushsymb 87 ............................. <#mouseUp>
  [648] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorModify, me.getID(), #mouseUp>
  [650] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorModify, me.getID(), #mouseUp)
  [652] getlocal 0 .............................. <tWndObj>
  [654] pushsymb 92 ............................. <#eventProcNavigatorModify>
  [656] getparam 0 .............................. <me>
  [658] pusharglist 1 ........................... <me>
  [660] objcall 70 .............................. <me.getID()>
  [662] pushsymb 88 ............................. <#keyDown>
  [664] pusharglistnoret 4 ...................... <tWndObj, #eventProcNavigatorModify, me.getID(), #keyDown>
  [666] objcall 86 .............................. tWndObj.registerProcedure(#eventProcNavigatorModify, me.getID(), #keyDown)
  [668] getlocal 0 .............................. <tWndObj>
  [670] pushcons 24 ............................. <"nav_choosecategory">
  [672] pusharglist 2 ........................... <tWndObj, "nav_choosecategory">
  [674] objcall 64 .............................. <tWndObj.elementExists("nav_choosecategory")>
  [676] jmpifz [693] ............................ if tWndObj.elementExists("nav_choosecategory") then
  [679] getparam 0 .............................. <me>
  [681] getparam 0 .............................. <me>
  [683] pushsymb 75 ............................. <#viewedNodeId>
  [685] pusharglist 2 ........................... <me, #viewedNodeId>
  [687] objcall 3 ............................... <me.getProperty(#viewedNodeId)>
  [689] pusharglistnoret 2 ...................... <me, me.getProperty(#viewedNodeId)>
  [691] objcall 93 .............................. me.prepareCategoryDropMenu(me.getProperty(#viewedNodeId))
  [693] pop 1 ................................... end case
  [695] pushint8 1 .............................. <1>
  [697] pusharglistnoret 1 ...................... <1>
  [699] extcall 36 .............................. return 1
  [701] ret
end

on updateRoomList me, tNodeId, tRoomList
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 22 .............................. me.setLoadingCursor(0)
  [  7] getparam 2 .............................. <tRoomList>
  [  9] pusharglist 1 ........................... <tRoomList>
  [ 11] extcall 101 ............................. <listp(tRoomList)>
  [ 13] jmpifz [115] ............................ if listp(tRoomList) then / else
  [ 16] getparam 0 .............................. <me>
  [ 18] getparam 2 .............................. <tRoomList>
  [ 20] pusharglist 2 ........................... <me, tRoomList>
  [ 22] objcall 18 .............................. <me.renderRoomList(tRoomList)>
  [ 24] setlocal 0 .............................. tImage = me.renderRoomList(tRoomList)
  [ 26] getparam 1 .............................. <tNodeId>
  [ 28] getparam 0 .............................. <me>
  [ 30] pushsymb 82 ............................. <#categoryId>
  [ 32] pushsymb 43 ............................. <#unit>
  [ 34] pusharglist 3 ........................... <me, #categoryId, #unit>
  [ 36] objcall 3 ............................... <me.getProperty(#categoryId, #unit)>
  [ 38] eq ...................................... <tNodeId = me.getProperty(#categoryId, #unit)>
  [ 39] jmpifz [ 54] ............................ if tNodeId = me.getProperty(#categoryId, #unit) then
  [ 42] getparam 0 .............................. <me>
  [ 44] pushsymb 102 ............................ <#cacheImg>
  [ 46] getlocal 0 .............................. <tImage>
  [ 48] pushsymb 43 ............................. <#unit>
  [ 50] pusharglistnoret 4 ...................... <me, #cacheImg, tImage, #unit>
  [ 52] objcall 4 ............................... me.setProperty(#cacheImg, tImage, #unit)
  [ 54] getparam 1 .............................. <tNodeId>
  [ 56] getparam 0 .............................. <me>
  [ 58] pushsymb 82 ............................. <#categoryId>
  [ 60] pushsymb 44 ............................. <#flat>
  [ 62] pusharglist 3 ........................... <me, #categoryId, #flat>
  [ 64] objcall 3 ............................... <me.getProperty(#categoryId, #flat)>
  [ 66] eq ...................................... <tNodeId = me.getProperty(#categoryId, #flat)>
  [ 67] jmpifz [ 82] ............................ if tNodeId = me.getProperty(#categoryId, #flat) then
  [ 70] getparam 0 .............................. <me>
  [ 72] pushsymb 102 ............................ <#cacheImg>
  [ 74] getlocal 0 .............................. <tImage>
  [ 76] pushsymb 44 ............................. <#flat>
  [ 78] pusharglistnoret 4 ...................... <me, #cacheImg, tImage, #flat>
  [ 80] objcall 4 ............................... me.setProperty(#cacheImg, tImage, #flat)
  [ 82] getparam 1 .............................. <tNodeId>
  [ 84] getparam 0 .............................. <me>
  [ 86] pushsymb 82 ............................. <#categoryId>
  [ 88] pusharglist 2 ........................... <me, #categoryId>
  [ 90] objcall 3 ............................... <me.getProperty(#categoryId)>
  [ 92] nteq .................................... <tNodeId <> me.getProperty(#categoryId)>
  [ 93] getparam 1 .............................. <tNodeId>
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglist 1 ........................... <me>
  [ 99] objcall 2 ............................... <me.getNaviView()>
  [101] nteq .................................... <tNodeId <> me.getNaviView()>
  [102] and ..................................... <(tNodeId <> me.getProperty(#categoryId)) and (tNodeId <> me.getNaviView())>
  [103] jmpifz [112] ............................ if (tNodeId <> me.getProperty(#categoryId)) and (tNodeId <> me.getNaviView()) then
  [106] pushint8 1 .............................. <1>
  [108] pusharglistnoret 1 ...................... <1>
  [110] extcall 36 .............................. return 1
  [112] jmp [173]
  [115] getparam 1 .............................. <tNodeId>
  [117] getparam 0 .............................. <me>
  [119] pushsymb 82 ............................. <#categoryId>
  [121] pusharglist 2 ........................... <me, #categoryId>
  [123] objcall 3 ............................... <me.getProperty(#categoryId)>
  [125] eq ...................................... <tNodeId = me.getProperty(#categoryId)>
  [126] getparam 0 .............................. <me>
  [128] pushsymb 102 ............................ <#cacheImg>
  [130] pusharglist 2 ........................... <me, #cacheImg>
  [132] objcall 3 ............................... <me.getProperty(#cacheImg)>
  [134] pusharglist 1 ........................... <me.getProperty(#cacheImg)>
  [136] extcall 52 .............................. <voidp(me.getProperty(#cacheImg))>
  [138] not ..................................... <not voidp(me.getProperty(#cacheImg))>
  [139] and ..................................... <(tNodeId = me.getProperty(#categoryId)) and not voidp(me.getProperty(#cacheImg))>
  [140] jmpifz [168] ............................ if (tNodeId = me.getProperty(#categoryId)) and not voidp(me.getProperty(#cacheImg)) then / else
  [143] getparam 0 .............................. <me>
  [145] pushsymb 102 ............................ <#cacheImg>
  [147] pusharglist 2 ........................... <me, #cacheImg>
  [149] objcall 3 ............................... <me.getProperty(#cacheImg)>
  [151] setlocal 0 .............................. tImage = me.getProperty(#cacheImg)
  [153] getparam 0 .............................. <me>
  [155] pusharglist 1 ........................... <me>
  [157] objcall 74 .............................. <me.getComponent()>
  [159] getparam 1 .............................. <tNodeId>
  [161] pusharglistnoret 2 ...................... <me.getComponent(), tNodeId>
  [163] objcall 91 .............................. me.getComponent().updateInterface(tNodeId)
  [165] jmp [173]
  [168] pushzero ................................ <0>
  [169] pusharglistnoret 1 ...................... <0>
  [171] extcall 36 .............................. return 0
  [173] getprop 25 .............................. <pWindowTitle>
  [175] pusharglist 1 ........................... <pWindowTitle>
  [177] extcall 58 .............................. <getWindow(pWindowTitle)>
  [179] setlocal 1 .............................. tWndObj = getWindow(pWindowTitle)
  [181] getlocal 1 .............................. <tWndObj>
  [183] pushzero ................................ <0>
  [184] eq ...................................... <tWndObj = 0>
  [185] jmpifz [193] ............................ if tWndObj = 0 then
  [188] pushzero ................................ <0>
  [189] pusharglistnoret 1 ...................... <0>
  [191] extcall 36 .............................. return 0
  [193] getparam 0 .............................. <me>
  [195] pusharglist 1 ........................... <me>
  [197] objcall 74 .............................. <me.getComponent()>
  [199] getparam 1 .............................. <tNodeId>
  [201] pushsymb 76 ............................. <#name>
  [203] pusharglist 3 ........................... <me.getComponent(), tNodeId, #name>
  [205] objcall 77 .............................. <me.getComponent().getNodeProperty(tNodeId, #name)>
  [207] setlocal 2 .............................. tName = me.getComponent().getNodeProperty(tNodeId, #name)
  [209] getlocal 2 .............................. <tName>
  [211] pushzero ................................ <0>
  [212] nteq .................................... <tName <> 0>
  [213] getlocal 1 .............................. <tWndObj>
  [215] pushcons 25 ............................. <"nav_roomlist_hd">
  [217] pusharglist 2 ........................... <tWndObj, "nav_roomlist_hd">
  [219] objcall 64 .............................. <tWndObj.elementExists("nav_roomlist_hd")>
  [221] and ..................................... <(tName <> 0) and tWndObj.elementExists("nav_roomlist_hd")>
  [222] jmpifz [251] ............................ if (tName <> 0) and tWndObj.elementExists("nav_roomlist_hd") then
  [225] getparam 0 .............................. <me>
  [227] getchainedprop 103 ...................... <me.pWriterPlainBoldLeft>
  [229] getlocal 2 .............................. <tName>
  [231] pusharglist 2 ........................... <me.pWriterPlainBoldLeft, tName>
  [233] objcall 104 ............................. <me.pWriterPlainBoldLeft.render(tName)>
  [235] setlocal 3 .............................. tHeaderImage = me.pWriterPlainBoldLeft.render(tName)
  [237] getlocal 1 .............................. <tWndObj>
  [239] pushcons 25 ............................. <"nav_roomlist_hd">
  [241] pusharglist 2 ........................... <tWndObj, "nav_roomlist_hd">
  [243] objcall 65 .............................. <tWndObj.getElement("nav_roomlist_hd")>
  [245] getlocal 3 .............................. <tHeaderImage>
  [247] pusharglistnoret 2 ...................... <tWndObj.getElement("nav_roomlist_hd"), tHeaderImage>
  [249] objcall 105 ............................. tWndObj.getElement("nav_roomlist_hd").feedImage(tHeaderImage)
  [251] getlocal 1 .............................. <tWndObj>
  [253] pushcons 23 ............................. <"nav_roomlist">
  [255] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [257] objcall 65 .............................. <tWndObj.getElement("nav_roomlist")>
  [259] setlocal 4 .............................. tLstElement = tWndObj.getElement("nav_roomlist")
  [261] getlocal 4 .............................. <tLstElement>
  [263] pushzero ................................ <0>
  [264] eq ...................................... <tLstElement = 0>
  [265] jmpifz [273] ............................ if tLstElement = 0 then
  [268] pushzero ................................ <0>
  [269] pusharglistnoret 1 ...................... <0>
  [271] extcall 36 .............................. return 0
  [273] getlocal 4 .............................. <tLstElement>
  [275] getlocal 0 .............................. <tImage>
  [277] pusharglistnoret 2 ...................... <tLstElement, tImage>
  [279] objcall 105 ............................. tLstElement.feedImage(tImage)
  [281] getparam 0 .............................. <me>
  [283] pusharglistnoret 1 ...................... <me>
  [285] objcall 20 .............................. me.setHideFullRoomsLink()
  [287] getlocal 1 .............................. <tWndObj>
  [289] pushcons 14 ............................. <"nav_scrollbar">
  [291] pusharglist 2 ........................... <tWndObj, "nav_scrollbar">
  [293] objcall 65 .............................. <tWndObj.getElement("nav_scrollbar")>
  [295] setlocal 5 .............................. tBarElement = tWndObj.getElement("nav_scrollbar")
  [297] getlocal 5 .............................. <tBarElement>
  [299] pushzero ................................ <0>
  [300] eq ...................................... <tBarElement = 0>
  [301] jmpifz [310] ............................ if tBarElement = 0 then
  [304] pushint8 1 .............................. <1>
  [306] pusharglistnoret 1 ...................... <1>
  [308] extcall 36 .............................. return 1
  [310] getlocal 5 .............................. <tBarElement>
  [312] pusharglist 1 ........................... <tBarElement>
  [314] objcall 66 .............................. <tBarElement.getScrollOffset()>
  [316] getlocal 0 .............................. <tImage>
  [318] getobjprop 106 .......................... <tImage.height>
  [320] gt ...................................... <tBarElement.getScrollOffset() > tImage.height>
  [321] jmpifz [343] ............................ if tBarElement.getScrollOffset() > tImage.height then
  [324] getlocal 5 .............................. <tBarElement>
  [326] getlocal 0 .............................. <tImage>
  [328] getobjprop 106 .......................... <tImage.height>
  [330] getlocal 4 .............................. <tLstElement>
  [332] pushsymb 106 ............................ <#height>
  [334] pusharglist 2 ........................... <tLstElement, #height>
  [336] objcall 3 ............................... <tLstElement.getProperty(#height)>
  [338] sub ..................................... <tImage.height - tLstElement.getProperty(#height)>
  [339] pusharglistnoret 2 ...................... <tBarElement, tImage.height - tLstElement.getProperty(#height)>
  [341] objcall 107 ............................. tBarElement.setScrollOffset(tImage.height - tLstElement.getProperty(#height))
  [343] pushint8 1 .............................. <1>
  [345] pusharglistnoret 1 ...................... <1>
  [347] extcall 36 .............................. return 1
  [349] ret
end

on setUpdates me, tBoolean
  [  0] getparam 1 .............................. <tBoolean>
  [  2] jmpifz [ 72] ............................ if tBoolean then / else
  [  5] getparam 0 .............................. <me>
  [  7] pusharglist 1 ........................... <me>
  [  9] objcall 74 .............................. <me.getComponent()>
  [ 11] getparam 0 .............................. <me>
  [ 13] pushsymb 82 ............................. <#categoryId>
  [ 15] pusharglist 2 ........................... <me, #categoryId>
  [ 17] objcall 3 ............................... <me.getProperty(#categoryId)>
  [ 19] pusharglistnoret 2 ...................... <me.getComponent(), me.getProperty(#categoryId)>
  [ 21] objcall 91 .............................. me.getComponent().updateInterface(me.getProperty(#categoryId))
  [ 23] pushsymb 115 ............................ <#navigator_update>
  [ 25] pusharglist 1 ........................... <#navigator_update>
  [ 27] extcall 114 ............................. <timeoutExists(#navigator_update)>
  [ 29] jmpifz [ 38] ............................ if timeoutExists(#navigator_update) then
  [ 32] pushint8 1 .............................. <1>
  [ 34] pusharglistnoret 1 ...................... <1>
  [ 36] extcall 36 .............................. return 1
  [ 38] pushcons 26 ............................. <"navigator.updatetime">
  [ 40] pusharglist 1 ........................... <"navigator.updatetime">
  [ 42] extcall 116 ............................. <getIntVariable("navigator.updatetime")>
  [ 44] setlocal 0 .............................. tUpdateInterval = getIntVariable("navigator.updatetime")
  [ 46] pushsymb 115 ............................ <#navigator_update>
  [ 48] getlocal 0 .............................. <tUpdateInterval>
  [ 50] pushsymb 10 ............................. <#setUpdates>
  [ 52] getparam 0 .............................. <me>
  [ 54] pusharglist 1 ........................... <me>
  [ 56] objcall 70 .............................. <me.getID()>
  [ 58] pushint8 1 .............................. <1>
  [ 60] pushzero ................................ <0>
  [ 61] pusharglist 6 ........................... <#navigator_update, tUpdateInterval, #setUpdates, me.getID(), 1, 0>
  [ 63] extcall 117 ............................. <createTimeout(#navigator_update, tUpdateInterval, #setUpdates, me.getID(), 1, 0)>
  [ 65] pusharglistnoret 1 ...................... <createTimeout(#navigator_update, tUpdateInterval, #setUpdates, me.getID(), 1, 0)>
  [ 67] extcall 36 .............................. return createTimeout(#navigator_update, tUpdateInterval, #setUpdates, me.getID(), 1, 0)
  [ 69] jmp [ 93]
  [ 72] pushsymb 115 ............................ <#navigator_update>
  [ 74] pusharglist 1 ........................... <#navigator_update>
  [ 76] extcall 114 ............................. <timeoutExists(#navigator_update)>
  [ 78] jmpifz [ 87] ............................ if timeoutExists(#navigator_update) then
  [ 81] pushsymb 115 ............................ <#navigator_update>
  [ 83] pusharglistnoret 1 ...................... <#navigator_update>
  [ 85] extcall 118 ............................. removeTimeout(#navigator_update)
  [ 87] pushint8 1 .............................. <1>
  [ 89] pusharglistnoret 1 ...................... <1>
  [ 91] extcall 36 .............................. return 1
  [ 93] ret
end

on clearRoomList me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 25 ........................... <me.pWindowTitle>
  [  4] pusharglist 1 ........................... <me.pWindowTitle>
  [  6] extcall 58 .............................. <getWindow(me.pWindowTitle)>
  [  8] setlocal 0 .............................. tWndObj = getWindow(me.pWindowTitle)
  [ 10] getlocal 0 .............................. <tWndObj>
  [ 12] pushzero ................................ <0>
  [ 13] eq ...................................... <tWndObj = 0>
  [ 14] jmpifz [ 22] ............................ if tWndObj = 0 then
  [ 17] pushzero ................................ <0>
  [ 18] pusharglistnoret 1 ...................... <0>
  [ 20] extcall 36 .............................. return 0
  [ 22] getlocal 0 .............................. <tWndObj>
  [ 24] pushcons 23 ............................. <"nav_roomlist">
  [ 26] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [ 28] objcall 64 .............................. <tWndObj.elementExists("nav_roomlist")>
  [ 30] jmpifz [ 45] ............................ if tWndObj.elementExists("nav_roomlist") then
  [ 33] getlocal 0 .............................. <tWndObj>
  [ 35] pushcons 23 ............................. <"nav_roomlist">
  [ 37] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [ 39] objcall 65 .............................. <tWndObj.getElement("nav_roomlist")>
  [ 41] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_roomlist")>
  [ 43] objcall 81 .............................. tWndObj.getElement("nav_roomlist").clearImage()
  [ 45] getlocal 0 .............................. <tWndObj>
  [ 47] pushcons 25 ............................. <"nav_roomlist_hd">
  [ 49] pusharglist 2 ........................... <tWndObj, "nav_roomlist_hd">
  [ 51] objcall 64 .............................. <tWndObj.elementExists("nav_roomlist_hd")>
  [ 53] jmpifz [ 68] ............................ if tWndObj.elementExists("nav_roomlist_hd") then
  [ 56] getlocal 0 .............................. <tWndObj>
  [ 58] pushcons 25 ............................. <"nav_roomlist_hd">
  [ 60] pusharglist 2 ........................... <tWndObj, "nav_roomlist_hd">
  [ 62] objcall 65 .............................. <tWndObj.getElement("nav_roomlist_hd")>
  [ 64] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_roomlist_hd")>
  [ 66] objcall 81 .............................. tWndObj.getElement("nav_roomlist_hd").clearImage()
  [ 68] getlocal 0 .............................. <tWndObj>
  [ 70] pushcons 23 ............................. <"nav_roomlist">
  [ 72] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [ 74] objcall 64 .............................. <tWndObj.elementExists("nav_roomlist")>
  [ 76] jmpifz [ 91] ............................ if tWndObj.elementExists("nav_roomlist") then
  [ 79] getlocal 0 .............................. <tWndObj>
  [ 81] pushcons 23 ............................. <"nav_roomlist">
  [ 83] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [ 85] objcall 65 .............................. <tWndObj.getElement("nav_roomlist")>
  [ 87] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_roomlist")>
  [ 89] objcall 121 ............................. tWndObj.getElement("nav_roomlist").clearBuffer()
  [ 91] getlocal 0 .............................. <tWndObj>
  [ 93] pushcons 25 ............................. <"nav_roomlist_hd">
  [ 95] pusharglist 2 ........................... <tWndObj, "nav_roomlist_hd">
  [ 97] objcall 64 .............................. <tWndObj.elementExists("nav_roomlist_hd")>
  [ 99] jmpifz [114] ............................ if tWndObj.elementExists("nav_roomlist_hd") then
  [102] getlocal 0 .............................. <tWndObj>
  [104] pushcons 25 ............................. <"nav_roomlist_hd">
  [106] pusharglist 2 ........................... <tWndObj, "nav_roomlist_hd">
  [108] objcall 65 .............................. <tWndObj.getElement("nav_roomlist_hd")>
  [110] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_roomlist_hd")>
  [112] objcall 121 ............................. tWndObj.getElement("nav_roomlist_hd").clearBuffer()
  [114] getlocal 0 .............................. <tWndObj>
  [116] pushcons 14 ............................. <"nav_scrollbar">
  [118] pusharglist 2 ........................... <tWndObj, "nav_scrollbar">
  [120] objcall 64 .............................. <tWndObj.elementExists("nav_scrollbar")>
  [122] jmpifz [138] ............................ if tWndObj.elementExists("nav_scrollbar") then
  [125] getlocal 0 .............................. <tWndObj>
  [127] pushcons 14 ............................. <"nav_scrollbar">
  [129] pusharglist 2 ........................... <tWndObj, "nav_scrollbar">
  [131] objcall 65 .............................. <tWndObj.getElement("nav_scrollbar")>
  [133] pushzero ................................ <0>
  [134] pusharglistnoret 2 ...................... <tWndObj.getElement("nav_scrollbar"), 0>
  [136] objcall 107 ............................. tWndObj.getElement("nav_scrollbar").setScrollOffset(0)
  [138] pushint8 1 .............................. <1>
  [140] pusharglistnoret 1 ...................... <1>
  [142] extcall 36 .............................. return 1
  [144] ret
end

on renderHistory me, tNodeId, tHistoryTxt
  [  0] getparam 1 .............................. <tNodeId>
  [  2] getparam 0 .............................. <me>
  [  4] pushsymb 82 ............................. <#categoryId>
  [  6] pusharglist 2 ........................... <me, #categoryId>
  [  8] objcall 3 ............................... <me.getProperty(#categoryId)>
  [ 10] eq ...................................... <tNodeId = me.getProperty(#categoryId)>
  [ 11] not ..................................... <not (tNodeId = me.getProperty(#categoryId))>
  [ 12] jmpifz [ 20] ............................ if not (tNodeId = me.getProperty(#categoryId)) then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 36 .............................. return 0
  [ 20] getparam 0 .............................. <me>
  [ 22] getobjprop 25 ........................... <me.pWindowTitle>
  [ 24] pusharglist 1 ........................... <me.pWindowTitle>
  [ 26] extcall 58 .............................. <getWindow(me.pWindowTitle)>
  [ 28] setlocal 0 .............................. tWndObj = getWindow(me.pWindowTitle)
  [ 30] getlocal 0 .............................. <tWndObj>
  [ 32] pushzero ................................ <0>
  [ 33] eq ...................................... <tWndObj = 0>
  [ 34] jmpifz [ 42] ............................ if tWndObj = 0 then
  [ 37] pushzero ................................ <0>
  [ 38] pusharglistnoret 1 ...................... <0>
  [ 40] extcall 36 .............................. return 0
  [ 42] getlocal 0 .............................. <tWndObj>
  [ 44] pushcons 27 ............................. <"nav_roomlistBackTabs">
  [ 46] pusharglist 2 ........................... <tWndObj, "nav_roomlistBackTabs">
  [ 48] objcall 65 .............................. <tWndObj.getElement("nav_roomlistBackTabs")>
  [ 50] setlocal 1 .............................. tElem = tWndObj.getElement("nav_roomlistBackTabs")
  [ 52] getlocal 1 .............................. <tElem>
  [ 54] pushzero ................................ <0>
  [ 55] eq ...................................... <tElem = 0>
  [ 56] jmpifz [ 64] ............................ if tElem = 0 then
  [ 59] pushzero ................................ <0>
  [ 60] pusharglistnoret 1 ...................... <0>
  [ 62] extcall 36 .............................. return 0
  [ 64] getparam 0 .............................. <me>
  [ 66] pushsymb 122 ............................ <#historyOrigV>
  [ 68] pusharglist 2 ........................... <me, #historyOrigV>
  [ 70] objcall 3 ............................... <me.getProperty(#historyOrigV)>
  [ 72] setlocal 2 .............................. tOffset = me.getProperty(#historyOrigV)
  [ 74] getlocal 2 .............................. <tOffset>
  [ 76] pusharglist 0 ........................... <>
  [ 78] extcall 50 .............................. <VOID>
  [ 80] eq ...................................... <tOffset = VOID>
  [ 81] jmpifz [110] ............................ if tOffset = VOID then
  [ 84] getlocal 0 .............................. <tWndObj>
  [ 86] pushcons 23 ............................. <"nav_roomlist">
  [ 88] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [ 90] objcall 65 .............................. <tWndObj.getElement("nav_roomlist")>
  [ 92] pushsymb 123 ............................ <#locV>
  [ 94] pusharglist 2 ........................... <tWndObj.getElement("nav_roomlist"), #locV>
  [ 96] objcall 3 ............................... <tWndObj.getElement("nav_roomlist").getProperty(#locV)>
  [ 98] setlocal 2 .............................. tOffset = tWndObj.getElement("nav_roomlist").getProperty(#locV)
  [100] getparam 0 .............................. <me>
  [102] pushsymb 122 ............................ <#historyOrigV>
  [104] getlocal 2 .............................. <tOffset>
  [106] pusharglistnoret 3 ...................... <me, #historyOrigV, tOffset>
  [108] objcall 4 ............................... me.setProperty(#historyOrigV, tOffset)
  [110] getparam 2 .............................. <tHistoryTxt>
  [112] pushsymb 124 ............................ <#line>
  [114] pusharglist 2 ........................... <tHistoryTxt, #line>
  [116] objcall 125 ............................. <tHistoryTxt.line.count>
  [118] setlocal 3 .............................. tItemCount = tHistoryTxt.line.count
  [120] getparam 2 .............................. <tHistoryTxt>
  [122] pushcons 3 .............................. <EMPTY>
  [124] eq ...................................... <tHistoryTxt = EMPTY>
  [125] jmpifz [131] ............................ if tHistoryTxt = EMPTY then
  [128] pushzero ................................ <0>
  [129] setlocal 3 .............................. tItemCount = 0
  [131] getlocal 2 .............................. <tOffset>
  [133] getlocal 0 .............................. <tWndObj>
  [135] pushcons 23 ............................. <"nav_roomlist">
  [137] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [139] objcall 65 .............................. <tWndObj.getElement("nav_roomlist")>
  [141] pushsymb 123 ............................ <#locV>
  [143] pusharglist 2 ........................... <tWndObj.getElement("nav_roomlist"), #locV>
  [145] objcall 3 ............................... <tWndObj.getElement("nav_roomlist").getProperty(#locV)>
  [147] sub ..................................... <tOffset - tWndObj.getElement("nav_roomlist").getProperty(#locV)>
  [148] setlocal 2 .............................. tOffset = tOffset - tWndObj.getElement("nav_roomlist").getProperty(#locV)
  [150] getlocal 3 .............................. <tItemCount>
  [152] getprop 31 .............................. <pHistoryItemHeight>
  [154] mul ..................................... <tItemCount * pHistoryItemHeight>
  [155] getlocal 2 .............................. <tOffset>
  [157] add ..................................... <(tItemCount * pHistoryItemHeight) + tOffset>
  [158] setlocal 2 .............................. tOffset = (tItemCount * pHistoryItemHeight) + tOffset
  [160] getparam 0 .............................. <me>
  [162] pusharglist 1 ........................... <me>
  [164] objcall 2 ............................... <me.getNaviView()>
  [166] pushsymb 44 ............................. <#flat>
  [168] eq ...................................... <me.getNaviView() = #flat>
  [169] getlocal 3 .............................. <tItemCount>
  [171] pushzero ................................ <0>
  [172] gt ...................................... <tItemCount > 0>
  [173] and ..................................... <(me.getNaviView() = #flat) and (tItemCount > 0)>
  [174] jmpifz [184] ............................ if (me.getNaviView() = #flat) and (tItemCount > 0) then
  [177] getlocal 2 .............................. <tOffset>
  [179] pushint8 7 .............................. <7>
  [181] add ..................................... <tOffset + 7>
  [182] setlocal 2 .............................. tOffset = tOffset + 7
  [184] getlocal 0 .............................. <tWndObj>
  [186] pushcons 25 ............................. <"nav_roomlist_hd">
  [188] pusharglist 2 ........................... <tWndObj, "nav_roomlist_hd">
  [190] objcall 65 .............................. <tWndObj.getElement("nav_roomlist_hd")>
  [192] pushzero ................................ <0>
  [193] getlocal 2 .............................. <tOffset>
  [195] pusharglistnoret 3 ...................... <tWndObj.getElement("nav_roomlist_hd"), 0, tOffset>
  [197] objcall 126 ............................. tWndObj.getElement("nav_roomlist_hd").moveBy(0, tOffset)
  [199] getlocal 0 .............................. <tWndObj>
  [201] pushcons 23 ............................. <"nav_roomlist">
  [203] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [205] objcall 65 .............................. <tWndObj.getElement("nav_roomlist")>
  [207] getlocal 0 .............................. <tWndObj>
  [209] pushcons 14 ............................. <"nav_scrollbar">
  [211] pusharglist 2 ........................... <tWndObj, "nav_scrollbar">
  [213] objcall 65 .............................. <tWndObj.getElement("nav_scrollbar")>
  [215] getlocal 0 .............................. <tWndObj>
  [217] pushcons 28 ............................. <"nav_roomlistArea">
  [219] pusharglist 2 ........................... <tWndObj, "nav_roomlistArea">
  [221] objcall 65 .............................. <tWndObj.getElement("nav_roomlistArea")>
  [223] pusharglist 3 ........................... <[tWndObj.getElement("nav_roomlist"), tWndObj.getElement("nav_scrollbar"), tWndObj.getElement("nav_roomlistArea")]>
  [225] pushlist ................................ <[tWndObj.getElement("nav_roomlist"), tWndObj.getElement("nav_scrollbar"), tWndObj.getElement("nav_roomlistArea")]>
  [226] setlocal 4 .............................. tScaleList = [tWndObj.getElement("nav_roomlist"), tWndObj.getElement("nav_scrollbar"), tWndObj.getElement("nav_roomlistArea")]
  [228] pushsymb 126 ............................ <#moveBy>
  [230] getlocal 4 .............................. <tScaleList>
  [232] pushzero ................................ <0>
  [233] getlocal 2 .............................. <tOffset>
  [235] pusharglistnoret 4 ...................... <#moveBy, tScaleList, 0, tOffset>
  [237] extcall 127 ............................. call(#moveBy, tScaleList, 0, tOffset)
  [239] pushsymb 128 ............................ <#resizeBy>
  [241] getlocal 4 .............................. <tScaleList>
  [243] pushzero ................................ <0>
  [244] getlocal 2 .............................. <tOffset>
  [246] inv ..................................... <-tOffset>
  [247] pusharglistnoret 4 ...................... <#resizeBy, tScaleList, 0, -tOffset>
  [249] extcall 127 ............................. call(#resizeBy, tScaleList, 0, -tOffset)
  [251] getparam 0 .............................. <me>
  [253] getchainedprop 129 ...................... <me.pWriterBackTabs>
  [255] getparam 2 .............................. <tHistoryTxt>
  [257] pusharglist 2 ........................... <me.pWriterBackTabs, tHistoryTxt>
  [259] objcall 104 ............................. <me.pWriterBackTabs.render(tHistoryTxt)>
  [261] setlocal 5 .............................. tTextImg = me.pWriterBackTabs.render(tHistoryTxt)
  [263] pushcons 29 ............................. <"nav_roomlist_marginv">
  [265] pusharglist 1 ........................... <"nav_roomlist_marginv">
  [267] extcall 130 ............................. <variableExists("nav_roomlist_marginv")>
  [269] jmpifz [332] ............................ if variableExists("nav_roomlist_marginv") then
  [272] pushcons 29 ............................. <"nav_roomlist_marginv">
  [274] pusharglist 1 ........................... <"nav_roomlist_marginv">
  [276] extcall 131 ............................. <getVariable("nav_roomlist_marginv")>
  [278] setlocal 6 .............................. tMargin = getVariable("nav_roomlist_marginv")
  [280] getlocal 5 .............................. <tTextImg>
  [282] getobjprop 133 .......................... <tTextImg.width>
  [284] getlocal 5 .............................. <tTextImg>
  [286] getobjprop 106 .......................... <tTextImg.height>
  [288] getlocal 6 .............................. <tMargin>
  [290] add ..................................... <tTextImg.height + tMargin>
  [291] getparam 0 .............................. <me>
  [293] getobjprop 32 ........................... <me.pBufferDepth>
  [295] pusharglist 3 ........................... <tTextImg.width, tTextImg.height + tMargin, me.pBufferDepth>
  [297] extcall 132 ............................. <image(tTextImg.width, tTextImg.height + tMargin, me.pBufferDepth)>
  [299] setlocal 7 .............................. tTempImg = image(tTextImg.width, tTextImg.height + tMargin, me.pBufferDepth)
  [301] getlocal 7 .............................. <tTempImg>
  [303] getlocal 5 .............................. <tTextImg>
  [305] getlocal 5 .............................. <tTextImg>
  [307] getobjprop 134 .......................... <tTextImg.rect>
  [309] pushzero ................................ <0>
  [310] getlocal 6 .............................. <tMargin>
  [312] pushzero ................................ <0>
  [313] getlocal 6 .............................. <tMargin>
  [315] pusharglist 4 ........................... <0, tMargin, 0, tMargin>
  [317] extcall 134 ............................. <rect(0, tMargin, 0, tMargin)>
  [319] add ..................................... <tTextImg.rect + rect(0, tMargin, 0, tMargin)>
  [320] getlocal 5 .............................. <tTextImg>
  [322] getobjprop 134 .......................... <tTextImg.rect>
  [324] pusharglistnoret 4 ...................... <tTempImg, tTextImg, tTextImg.rect + rect(0, tMargin, 0, tMargin), tTextImg.rect>
  [326] objcall 135 ............................. tTempImg.copyPixels(tTextImg, tTextImg.rect + rect(0, tMargin, 0, tMargin), tTextImg.rect)
  [328] getlocal 7 .............................. <tTempImg>
  [330] setlocal 5 .............................. tTextImg = tTempImg
  [332] getlocal 0 .............................. <tWndObj>
  [334] pushcons 30 ............................. <"nav_roomlistBackLinks">
  [336] pusharglist 2 ........................... <tWndObj, "nav_roomlistBackLinks">
  [338] objcall 65 .............................. <tWndObj.getElement("nav_roomlistBackLinks")>
  [340] getlocal 5 .............................. <tTextImg>
  [342] pusharglistnoret 2 ...................... <tWndObj.getElement("nav_roomlistBackLinks"), tTextImg>
  [344] objcall 105 ............................. tWndObj.getElement("nav_roomlistBackLinks").feedImage(tTextImg)
  [346] ret
end

on showNodeInfo me, tNodeId
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] pusharglistnoret 2 ...................... <me, 0>
  [  5] objcall 22 .............................. me.setLoadingCursor(0)
  [  7] getprop 25 .............................. <pWindowTitle>
  [  9] pusharglist 1 ........................... <pWindowTitle>
  [ 11] extcall 38 .............................. <windowExists(pWindowTitle)>
  [ 13] not ..................................... <not windowExists(pWindowTitle)>
  [ 14] jmpifz [ 22] ............................ if not windowExists(pWindowTitle) then
  [ 17] pushzero ................................ <0>
  [ 18] pusharglistnoret 1 ...................... <0>
  [ 20] extcall 36 .............................. return 0
  [ 22] getprop 25 .............................. <pWindowTitle>
  [ 24] pusharglist 1 ........................... <pWindowTitle>
  [ 26] extcall 58 .............................. <getWindow(pWindowTitle)>
  [ 28] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 30] getlocal 0 .............................. <tWndObj>
  [ 32] pushcons 31 ............................. <"nav_roomnfo_hd">
  [ 34] pusharglist 2 ........................... <tWndObj, "nav_roomnfo_hd">
  [ 36] objcall 65 .............................. <tWndObj.getElement("nav_roomnfo_hd")>
  [ 38] setlocal 1 .............................. tElem = tWndObj.getElement("nav_roomnfo_hd")
  [ 40] getlocal 1 .............................. <tElem>
  [ 42] pushzero ................................ <0>
  [ 43] eq ...................................... <tElem = 0>
  [ 44] jmpifz [ 52] ............................ if tElem = 0 then
  [ 47] pushzero ................................ <0>
  [ 48] pusharglistnoret 1 ...................... <0>
  [ 50] extcall 36 .............................. return 0
  [ 52] getparam 1 .............................. <tNodeId>
  [ 54] pusharglist 1 ........................... <tNodeId>
  [ 56] extcall 52 .............................. <voidp(tNodeId)>
  [ 58] not ..................................... <not voidp(tNodeId)>
  [ 59] jmpifz [ 84] ............................ if not voidp(tNodeId) then
  [ 62] getparam 0 .............................. <me>
  [ 64] pusharglist 1 ........................... <me>
  [ 66] objcall 74 .............................. <me.getComponent()>
  [ 68] getparam 1 .............................. <tNodeId>
  [ 70] getparam 0 .............................. <me>
  [ 72] pushsymb 82 ............................. <#categoryId>
  [ 74] pusharglist 2 ........................... <me, #categoryId>
  [ 76] objcall 3 ............................... <me.getProperty(#categoryId)>
  [ 78] pusharglist 3 ........................... <me.getComponent(), tNodeId, me.getProperty(#categoryId)>
  [ 80] objcall 144 ............................. <me.getComponent().getNodeInfo(tNodeId, me.getProperty(#categoryId))>
  [ 82] setlocal 2 .............................. tNodeInfo = me.getComponent().getNodeInfo(tNodeId, me.getProperty(#categoryId))
  [ 84] getlocal 2 .............................. <tNodeInfo>
  [ 86] pusharglist 1 ........................... <tNodeInfo>
  [ 88] extcall 101 ............................. <listp(tNodeInfo)>
  [ 90] not ..................................... <not listp(tNodeInfo)>
  [ 91] jmpifz [100] ............................ if not listp(tNodeInfo) then / else
  [ 94] pushzero ................................ <0>
  [ 95] setlocal 2 .............................. tNodeInfo = 0
  [ 97] jmp [116]
  [100] getlocal 2 .............................. <tNodeInfo>
  [102] pushsymb 145 ............................ <#nodeType>
  [104] pusharglist 2 ........................... <tNodeInfo, #nodeType>
  [106] objcall 51 .............................. <tNodeInfo[#nodeType]>
  [108] pushzero ................................ <0>
  [109] eq ...................................... <tNodeInfo[#nodeType] = 0>
  [110] jmpifz [116] ............................ if tNodeInfo[#nodeType] = 0 then
  [113] pushzero ................................ <0>
  [114] setlocal 2 .............................. tNodeInfo = 0
  [116] getparam 0 .............................. <me>
  [118] pushsymb 59 ............................. <#show>
  [120] pusharglistnoret 2 ...................... <me, #show>
  [122] objcall 21 .............................. me.setRoomInfoArea(#show)
  [124] getparam 0 .............................. <me>
  [126] pusharglist 1 ........................... <me>
  [128] objcall 2 ............................... <me.getNaviView()>
  [130] setlocal 3 .............................. tView = me.getNaviView()
  [132] getlocal 2 .............................. <tNodeInfo>
  [134] pushzero ................................ <0>
  [135] eq ...................................... <tNodeInfo = 0>
  [136] jmpifz [371] ............................ if tNodeInfo = 0 then / else
  [139] getlocal 3 .............................. <tView>
  [141] peek 0 .................................. case tView of
  [143] pushsymb 43 ............................. <#unit>
  [145] eq
  [146] jmpifz [172] ............................ (case) #unit:
  [149] pushcons 32 ............................. <"nav_ico_def_pr">
  [151] setlocal 4 .............................. tIconName = "nav_ico_def_pr"
  [153] pushcons 33 ............................. <"nav_public_helptext">
  [155] pusharglist 1 ........................... <"nav_public_helptext">
  [157] extcall 26 .............................. <getText("nav_public_helptext")>
  [159] setlocal 5 .............................. tRoomDesc = getText("nav_public_helptext")
  [161] pushcons 34 ............................. <"nav_public_helptext_hd">
  [163] pusharglist 1 ........................... <"nav_public_helptext_hd">
  [165] extcall 26 .............................. <getText("nav_public_helptext_hd")>
  [167] setlocal 6 .............................. tHeaderTxt = getText("nav_public_helptext_hd")
  [169] jmp [285]
  [172] peek 0
  [174] pushsymb 46 ............................. <#src>
  [176] eq
  [177] jmpifz [203] ............................ (case) #src:
  [180] pushcons 35 ............................. <"nav_ico_def_src">
  [182] setlocal 4 .............................. tIconName = "nav_ico_def_src"
  [184] pushcons 36 ............................. <"nav_search_helptext">
  [186] pusharglist 1 ........................... <"nav_search_helptext">
  [188] extcall 26 .............................. <getText("nav_search_helptext")>
  [190] setlocal 5 .............................. tRoomDesc = getText("nav_search_helptext")
  [192] pushcons 37 ............................. <"nav_private_helptext_hd">
  [194] pusharglist 1 ........................... <"nav_private_helptext_hd">
  [196] extcall 26 .............................. <getText("nav_private_helptext_hd")>
  [198] setlocal 6 .............................. tHeaderTxt = getText("nav_private_helptext_hd")
  [200] jmp [285]
  [203] peek 0
  [205] pushsymb 47 ............................. <#fav>
  [207] eq
  [208] jmpifz [234] ............................ (case) #fav:
  [211] pushcons 38 ............................. <"nav_ico_def_fav">
  [213] setlocal 4 .............................. tIconName = "nav_ico_def_fav"
  [215] pushcons 39 ............................. <"nav_favourites_helptext">
  [217] pusharglist 1 ........................... <"nav_favourites_helptext">
  [219] extcall 26 .............................. <getText("nav_favourites_helptext")>
  [221] setlocal 5 .............................. tRoomDesc = getText("nav_favourites_helptext")
  [223] pushcons 37 ............................. <"nav_private_helptext_hd">
  [225] pusharglist 1 ........................... <"nav_private_helptext_hd">
  [227] extcall 26 .............................. <getText("nav_private_helptext_hd")>
  [229] setlocal 6 .............................. tHeaderTxt = getText("nav_private_helptext_hd")
  [231] jmp [285]
  [234] peek 0
  [236] pushsymb 45 ............................. <#own>
  [238] eq
  [239] jmpifz [265] ............................ (case) #own:
  [242] pushcons 40 ............................. <"nav_ico_def_own">
  [244] setlocal 4 .............................. tIconName = "nav_ico_def_own"
  [246] pushcons 41 ............................. <"nav_ownrooms_helptext">
  [248] pusharglist 1 ........................... <"nav_ownrooms_helptext">
  [250] extcall 26 .............................. <getText("nav_ownrooms_helptext")>
  [252] setlocal 5 .............................. tRoomDesc = getText("nav_ownrooms_helptext")
  [254] pushcons 37 ............................. <"nav_private_helptext_hd">
  [256] pusharglist 1 ........................... <"nav_private_helptext_hd">
  [258] extcall 26 .............................. <getText("nav_private_helptext_hd")>
  [260] setlocal 6 .............................. tHeaderTxt = getText("nav_private_helptext_hd")
  [262] jmp [285] ............................... (case) otherwise:
  [265] pushcons 42 ............................. <"nav_ico_def_gr">
  [267] setlocal 4 .............................. tIconName = "nav_ico_def_gr"
  [269] pushcons 43 ............................. <"nav_private_helptext">
  [271] pusharglist 1 ........................... <"nav_private_helptext">
  [273] extcall 26 .............................. <getText("nav_private_helptext")>
  [275] setlocal 5 .............................. tRoomDesc = getText("nav_private_helptext")
  [277] pushcons 37 ............................. <"nav_private_helptext_hd">
  [279] pusharglist 1 ........................... <"nav_private_helptext_hd">
  [281] extcall 26 .............................. <getText("nav_private_helptext_hd")>
  [283] setlocal 6 .............................. tHeaderTxt = getText("nav_private_helptext_hd")
  [285] pop 1 ................................... end case
  [287] getlocal 0 .............................. <tWndObj>
  [289] pushcons 44 ............................. <"nav_modify_button">
  [291] pusharglist 2 ........................... <tWndObj, "nav_modify_button">
  [293] objcall 64 .............................. <tWndObj.elementExists("nav_modify_button")>
  [295] jmpifz [310] ............................ if tWndObj.elementExists("nav_modify_button") then
  [298] getlocal 0 .............................. <tWndObj>
  [300] pushcons 44 ............................. <"nav_modify_button">
  [302] pusharglist 2 ........................... <tWndObj, "nav_modify_button">
  [304] objcall 65 .............................. <tWndObj.getElement("nav_modify_button")>
  [306] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_modify_button")>
  [308] objcall 61 .............................. tWndObj.getElement("nav_modify_button").hide()
  [310] getlocal 0 .............................. <tWndObj>
  [312] pushcons 45 ............................. <"nav_addtofavourites_button">
  [314] pusharglist 2 ........................... <tWndObj, "nav_addtofavourites_button">
  [316] objcall 64 .............................. <tWndObj.elementExists("nav_addtofavourites_button")>
  [318] jmpifz [333] ............................ if tWndObj.elementExists("nav_addtofavourites_button") then
  [321] getlocal 0 .............................. <tWndObj>
  [323] pushcons 45 ............................. <"nav_addtofavourites_button">
  [325] pusharglist 2 ........................... <tWndObj, "nav_addtofavourites_button">
  [327] objcall 65 .............................. <tWndObj.getElement("nav_addtofavourites_button")>
  [329] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_addtofavourites_button")>
  [331] objcall 61 .............................. tWndObj.getElement("nav_addtofavourites_button").hide()
  [333] getlocal 0 .............................. <tWndObj>
  [335] pushcons 46 ............................. <"nav_removefavourites_button">
  [337] pusharglist 2 ........................... <tWndObj, "nav_removefavourites_button">
  [339] objcall 64 .............................. <tWndObj.elementExists("nav_removefavourites_button")>
  [341] jmpifz [356] ............................ if tWndObj.elementExists("nav_removefavourites_button") then
  [344] getlocal 0 .............................. <tWndObj>
  [346] pushcons 46 ............................. <"nav_removefavourites_button">
  [348] pusharglist 2 ........................... <tWndObj, "nav_removefavourites_button">
  [350] objcall 65 .............................. <tWndObj.getElement("nav_removefavourites_button")>
  [352] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_removefavourites_button")>
  [354] objcall 61 .............................. tWndObj.getElement("nav_removefavourites_button").hide()
  [356] getlocal 0 .............................. <tWndObj>
  [358] pushcons 47 ............................. <"nav_go_button">
  [360] pusharglist 2 ........................... <tWndObj, "nav_go_button">
  [362] objcall 65 .............................. <tWndObj.getElement("nav_go_button")>
  [364] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_go_button")>
  [366] objcall 61 .............................. tWndObj.getElement("nav_go_button").hide()
  [368] jmp [1094]
  [371] getlocal 3 .............................. <tView>
  [373] peek 0 .................................. case tView of
  [375] pushsymb 43 ............................. <#unit>
  [377] eq
  [378] jmpifz [680] ............................ (case) #unit:
  [381] pushcons 48 ............................. <"nav_venue_">
  [383] getlocal 2 .............................. <tNodeInfo>
  [385] pushsymb 146 ............................ <#unitStrId>
  [387] pusharglist 2 ........................... <tNodeInfo, #unitStrId>
  [389] objcall 51 .............................. <tNodeInfo[#unitStrId]>
  [391] joinstr ................................. <"nav_venue_" & tNodeInfo[#unitStrId]>
  [392] pushcons 49 ............................. <"/">
  [394] joinstr ................................. <"nav_venue_" & tNodeInfo[#unitStrId] & "/">
  [395] getlocal 2 .............................. <tNodeInfo>
  [397] pushsymb 147 ............................ <#door>
  [399] pusharglist 2 ........................... <tNodeInfo, #door>
  [401] objcall 51 .............................. <tNodeInfo[#door]>
  [403] joinstr ................................. <"nav_venue_" & tNodeInfo[#unitStrId] & "/" & tNodeInfo[#door]>
  [404] pushcons 50 ............................. <"_desc">
  [406] joinstr ................................. <"nav_venue_" & tNodeInfo[#unitStrId] & "/" & tNodeInfo[#door] & "_desc">
  [407] setlocal 7 .............................. tTextId = "nav_venue_" & tNodeInfo[#unitStrId] & "/" & tNodeInfo[#door] & "_desc"
  [409] getlocal 7 .............................. <tTextId>
  [411] pusharglist 1 ........................... <tTextId>
  [413] extcall 148 ............................. <textExists(tTextId)>
  [415] not ..................................... <not textExists(tTextId)>
  [416] jmpifz [472] ............................ if not textExists(tTextId) then
  [419] getmovieprop 149 ........................ <the itemDelimiter>
  [421] setlocal 8 .............................. tDelim = the itemDelimiter
  [423] pushcons 51 ............................. <"_">
  [425] setmovieprop 149 ........................ the itemDelimiter = "_"
  [427] pushcons 48 ............................. <"nav_venue_">
  [429] getlocal 2 .............................. <tNodeInfo>
  [431] pushsymb 146 ............................ <#unitStrId>
  [433] pusharglist 2 ........................... <tNodeInfo, #unitStrId>
  [435] objcall 51 .............................. <tNodeInfo[#unitStrId]>
  [437] pushsymb 150 ............................ <#item>
  [439] pushint8 1 .............................. <1>
  [441] getlocal 2 .............................. <tNodeInfo>
  [443] pushsymb 146 ............................ <#unitStrId>
  [445] pusharglist 2 ........................... <tNodeInfo, #unitStrId>
  [447] objcall 51 .............................. <tNodeInfo[#unitStrId]>
  [449] pushsymb 150 ............................ <#item>
  [451] pusharglist 2 ........................... <tNodeInfo[#unitStrId], #item>
  [453] objcall 125 ............................. <tNodeInfo[#unitStrId].item.count>
  [455] pushint8 1 .............................. <1>
  [457] sub ..................................... <tNodeInfo[#unitStrId].item.count - 1>
  [458] pusharglist 4 ........................... <tNodeInfo[#unitStrId], #item, 1, tNodeInfo[#unitStrId].item.count - 1>
  [460] objcall 151 ............................. <tNodeInfo[#unitStrId].item[1..tNodeInfo[#unitStrId].item.count - 1]>
  [462] joinstr ................................. <"nav_venue_" & tNodeInfo[#unitStrId].item[1..tNodeInfo[#unitStrId].item.count - 1]>
  [463] pushcons 50 ............................. <"_desc">
  [465] joinstr ................................. <"nav_venue_" & tNodeInfo[#unitStrId].item[1..tNodeInfo[#unitStrId].item.count - 1] & "_desc">
  [466] setlocal 7 .............................. tTextId = "nav_venue_" & tNodeInfo[#unitStrId].item[1..tNodeInfo[#unitStrId].item.count - 1] & "_desc"
  [468] getlocal 8 .............................. <tDelim>
  [470] setmovieprop 149 ........................ the itemDelimiter = tDelim
  [472] getlocal 7 .............................. <tTextId>
  [474] pusharglist 1 ........................... <tTextId>
  [476] extcall 26 .............................. <getText(tTextId)>
  [478] setlocal 5 .............................. tRoomDesc = getText(tTextId)
  [480] pushcons 52 ............................. <"thumb.">
  [482] getlocal 2 .............................. <tNodeInfo>
  [484] pushsymb 146 ............................ <#unitStrId>
  [486] pusharglist 2 ........................... <tNodeInfo, #unitStrId>
  [488] objcall 51 .............................. <tNodeInfo[#unitStrId]>
  [490] joinstr ................................. <"thumb." & tNodeInfo[#unitStrId]>
  [491] setlocal 4 .............................. tIconName = "thumb." & tNodeInfo[#unitStrId]
  [493] getlocal 4 .............................. <tIconName>
  [495] pusharglist 1 ........................... <tIconName>
  [497] extcall 152 ............................. <memberExists(tIconName)>
  [499] not ..................................... <not memberExists(tIconName)>
  [500] jmpifz [538] ............................ if not memberExists(tIconName) then
  [503] getmovieprop 149 ........................ <the itemDelimiter>
  [505] setlocal 8 .............................. tDelim = the itemDelimiter
  [507] pushcons 51 ............................. <"_">
  [509] setmovieprop 149 ........................ the itemDelimiter = "_"
  [511] getlocal 4 .............................. <tIconName>
  [513] pushsymb 150 ............................ <#item>
  [515] pushint8 1 .............................. <1>
  [517] getlocal 4 .............................. <tIconName>
  [519] pushsymb 150 ............................ <#item>
  [521] pusharglist 2 ........................... <tIconName, #item>
  [523] objcall 125 ............................. <tIconName.item.count>
  [525] pushint8 1 .............................. <1>
  [527] sub ..................................... <tIconName.item.count - 1>
  [528] pusharglist 4 ........................... <tIconName, #item, 1, tIconName.item.count - 1>
  [530] objcall 151 ............................. <tIconName.item[1..tIconName.item.count - 1]>
  [532] setlocal 4 .............................. tIconName = tIconName.item[1..tIconName.item.count - 1]
  [534] getlocal 8 .............................. <tDelim>
  [536] setmovieprop 149 ........................ the itemDelimiter = tDelim
  [538] getlocal 4 .............................. <tIconName>
  [540] pusharglist 1 ........................... <tIconName>
  [542] extcall 152 ............................. <memberExists(tIconName)>
  [544] not ..................................... <not memberExists(tIconName)>
  [545] jmpifz [552] ............................ if not memberExists(tIconName) then
  [548] pushcons 32 ............................. <"nav_ico_def_pr">
  [550] setlocal 4 .............................. tIconName = "nav_ico_def_pr"
  [552] getlocal 2 .............................. <tNodeInfo>
  [554] pushsymb 153 ............................ <#usercount>
  [556] pusharglist 2 ........................... <tNodeInfo, #usercount>
  [558] objcall 51 .............................. <tNodeInfo[#usercount]>
  [560] pusharglist 1 ........................... <tNodeInfo[#usercount]>
  [562] extcall 52 .............................. <voidp(tNodeInfo[#usercount])>
  [564] jmpifz [576] ............................ if voidp(tNodeInfo[#usercount]) then
  [567] getlocal 2 .............................. <tNodeInfo>
  [569] pushsymb 153 ............................ <#usercount>
  [571] pushzero ................................ <0>
  [572] pusharglistnoret 3 ...................... <tNodeInfo, #usercount, 0>
  [574] objcall 55 .............................. tNodeInfo[#usercount] = 0
  [576] getlocal 2 .............................. <tNodeInfo>
  [578] pushsymb 154 ............................ <#maxUsers>
  [580] pusharglist 2 ........................... <tNodeInfo, #maxUsers>
  [582] objcall 51 .............................. <tNodeInfo[#maxUsers]>
  [584] pusharglist 1 ........................... <tNodeInfo[#maxUsers]>
  [586] extcall 52 .............................. <voidp(tNodeInfo[#maxUsers])>
  [588] jmpifz [600] ............................ if voidp(tNodeInfo[#maxUsers]) then
  [591] getlocal 2 .............................. <tNodeInfo>
  [593] pushsymb 154 ............................ <#maxUsers>
  [595] pushzero ................................ <0>
  [596] pusharglistnoret 3 ...................... <tNodeInfo, #maxUsers, 0>
  [598] objcall 55 .............................. tNodeInfo[#maxUsers] = 0
  [600] getlocal 2 .............................. <tNodeInfo>
  [602] pushsymb 76 ............................. <#name>
  [604] pusharglist 2 ........................... <tNodeInfo, #name>
  [606] objcall 51 .............................. <tNodeInfo[#name]>
  [608] pusharglist 0 ........................... <>
  [610] extcall 155 ............................. <SPACE>
  [612] joinstr ................................. <tNodeInfo[#name] & SPACE>
  [613] pushcons 53 ............................. <"(">
  [615] joinstr ................................. <tNodeInfo[#name] & SPACE & "(">
  [616] getlocal 2 .............................. <tNodeInfo>
  [618] pushsymb 153 ............................ <#usercount>
  [620] pusharglist 2 ........................... <tNodeInfo, #usercount>
  [622] objcall 51 .............................. <tNodeInfo[#usercount]>
  [624] joinstr ................................. <tNodeInfo[#name] & SPACE & "(" & tNodeInfo[#usercount]>
  [625] pushcons 49 ............................. <"/">
  [627] joinstr ................................. <tNodeInfo[#name] & SPACE & "(" & tNodeInfo[#usercount] & "/">
  [628] getlocal 2 .............................. <tNodeInfo>
  [630] pushsymb 154 ............................ <#maxUsers>
  [632] pusharglist 2 ........................... <tNodeInfo, #maxUsers>
  [634] objcall 51 .............................. <tNodeInfo[#maxUsers]>
  [636] joinstr ................................. <tNodeInfo[#name] & SPACE & "(" & tNodeInfo[#usercount] & "/" & tNodeInfo[#maxUsers]>
  [637] pushcons 54 ............................. <") ">
  [639] joinstr ................................. <tNodeInfo[#name] & SPACE & "(" & tNodeInfo[#usercount] & "/" & tNodeInfo[#maxUsers] & ") ">
  [640] setlocal 6 .............................. tHeaderTxt = tNodeInfo[#name] & SPACE & "(" & tNodeInfo[#usercount] & "/" & tNodeInfo[#maxUsers] & ") "
  [642] getlocal 0 .............................. <tWndObj>
  [644] pushcons 45 ............................. <"nav_addtofavourites_button">
  [646] pusharglist 2 ........................... <tWndObj, "nav_addtofavourites_button">
  [648] objcall 64 .............................. <tWndObj.elementExists("nav_addtofavourites_button")>
  [650] jmpifz [665] ............................ if tWndObj.elementExists("nav_addtofavourites_button") then
  [653] getlocal 0 .............................. <tWndObj>
  [655] pushcons 45 ............................. <"nav_addtofavourites_button">
  [657] pusharglist 2 ........................... <tWndObj, "nav_addtofavourites_button">
  [659] objcall 65 .............................. <tWndObj.getElement("nav_addtofavourites_button")>
  [661] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_addtofavourites_button")>
  [663] objcall 59 .............................. tWndObj.getElement("nav_addtofavourites_button").show()
  [665] getlocal 0 .............................. <tWndObj>
  [667] pushcons 47 ............................. <"nav_go_button">
  [669] pusharglist 2 ........................... <tWndObj, "nav_go_button">
  [671] objcall 65 .............................. <tWndObj.getElement("nav_go_button")>
  [673] pusharglistnoret 1 ...................... <tWndObj.getElement("nav_go_button")>
  [675] objcall 59 .............................. tWndObj.getElement("nav_go_button").show()
  [677] jmp [1092] .............................. (case) otherwise:
  [680] getlocal 2 .............................. <tNodeInfo>
  [682] pushsymb 76 ............................. <#name>
  [684] pusharglist 2 ........................... <tNodeInfo, #name>
  [686] objcall 51 .............................. <tNodeInfo[#name]>
  [688] pusharglist 1 ........................... <tNodeInfo[#name]>
  [690] extcall 52 .............................. <voidp(tNodeInfo[#name])>
  [692] jmpifz [705] ............................ if voidp(tNodeInfo[#name]) then
  [695] getlocal 2 .............................. <tNodeInfo>
  [697] pushsymb 76 ............................. <#name>
  [699] pushcons 55 ............................. <"-">
  [701] pusharglistnoret 3 ...................... <tNodeInfo, #name, "-">
  [703] objcall 55 .............................. tNodeInfo[#name] = "-"
  [705] getlocal 2 .............................. <tNodeInfo>
  [707] pushsymb 153 ............................ <#usercount>
  [709] pusharglist 2 ........................... <tNodeInfo, #usercount>
  [711] objcall 51 .............................. <tNodeInfo[#usercount]>
  [713] pusharglist 1 ........................... <tNodeInfo[#usercount]>
  [715] extcall 52 .............................. <voidp(tNodeInfo[#usercount])>
  [717] jmpifz [729] ............................ if voidp(tNodeInfo[#usercount]) then
  [720] getlocal 2 .............................. <tNodeInfo>
  [722] pushsymb 153 ............................ <#usercount>
  [724] pushzero ................................ <0>
  [725] pusharglistnoret 3 ...................... <tNodeInfo, #usercount, 0>
  [727] objcall 55 .............................. tNodeInfo[#usercount] = 0
  [729] getlocal 2 .............................. <tNodeInfo>
  [731] pushsymb 154 ............................ <#maxUsers>
  [733] pusharglist 2 ........................... <tNodeInfo, #maxUsers>
  [735] objcall 51 .............................. <tNodeInfo[#maxUsers]>
  [737] pusharglist 1 ........................... <tNodeInfo[#maxUsers]>
  [739] extcall 52 .............................. <voidp(tNodeInfo[#maxUsers])>
  [741] jmpifz [753] ............................ if voidp(tNodeInfo[#maxUsers]) then
  [744] getlocal 2 .............................. <tNodeInfo>
  [746] pushsymb 154 ............................ <#maxUsers>
  [748] pushzero ................................ <0>
  [749] pusharglistnoret 3 ...................... <tNodeInfo, #maxUsers, 0>
  [751] objcall 55 .............................. tNodeInfo[#maxUsers] = 0
  [753] getlocal 2 .............................. <tNodeInfo>
  [755] pushsymb 156 ............................ <#owner>
  [757] pusharglist 2 ........................... <tNodeInfo, #owner>
  [759] objcall 51 .............................. <tNodeInfo[#owner]>
  [761] pusharglist 1 ........................... <tNodeInfo[#owner]>
  [763] extcall 52 .............................. <voidp(tNodeInfo[#owner])>
  [765] jmpifz [778] ............................ if voidp(tNodeInfo[#owner]) then
  [768] getlocal 2 .............................. <tNodeInfo>
  [770] pushsymb 156 ............................ <#owner>
  [772] pushcons 55 ............................. <"-">
  [774] pusharglistnoret 3 ...................... <tNodeInfo, #owner, "-">
  [776] objcall 55 .............................. tNodeInfo[#owner] = "-"
  [778] getlocal 2 .............................. <tNodeInfo>
  [780] pushsymb 157 ............................ <#description>
  [782] pusharglist 2 ........................... <tNodeInfo, #description>
  [784] objcall 51 .............................. <tNodeInfo[#description]>
  [786] pusharglist 1 ........................... <tNodeInfo[#description]>
  [788] extcall 52 .............................. <voidp(tNodeInfo[#description])>
  [790] jmpifz [803] ............................ if voidp(tNodeInfo[#description]) then
  [793] getlocal 2 .............................. <tNodeInfo>
  [795] pushsymb 157 ............................ <#description>
  [797] pushcons 55 ............................. <"-">
  [799] pusharglistnoret 3 ...................... <tNodeInfo, #description, "-">
  [801] objcall 55 .............................. tNodeInfo[#description] = "-"
  [803] pushsymb 159 ............................ <#session>
  [805] pusharglist 1 ........................... <#session>
  [807] extcall 158 ............................. <getObject(#session)>
  [809] pushcons 56 ............................. <"user_rights">
  [811] pusharglist 2 ........................... <getObject(#session), "user_rights">
  [813] objcall 160 ............................. <getObject(#session).get("user_rights")>
  [815] pushcons 57 ............................. <"fuse_see_flat_ids">
  [817] pusharglist 2 ........................... <getObject(#session).get("user_rights"), "fuse_see_flat_ids">
  [819] objcall 161 ............................. <getObject(#session).get("user_rights").getOne("fuse_see_flat_ids")>
  [821] pushzero ................................ <0>
  [822] nteq .................................... <getObject(#session).get("user_rights").getOne("fuse_see_flat_ids") <> 0>
  [823] jmpifz [854] ............................ if getObject(#session).get("user_rights").getOne("fuse_see_flat_ids") <> 0 then / else
  [826] getlocal 2 .............................. <tNodeInfo>
  [828] pushsymb 76 ............................. <#name>
  [830] pusharglist 2 ........................... <tNodeInfo, #name>
  [832] objcall 51 .............................. <tNodeInfo[#name]>
  [834] pushcons 58 ............................. <"(id: ">
  [836] joinpadstr .............................. <tNodeInfo[#name] && "(id: ">
  [837] getlocal 2 .............................. <tNodeInfo>
  [839] pushsymb 162 ............................ <#flatId>
  [841] pusharglist 2 ........................... <tNodeInfo, #flatId>
  [843] objcall 51 .............................. <tNodeInfo[#flatId]>
  [845] joinstr ................................. <tNodeInfo[#name] && "(id: " & tNodeInfo[#flatId]>
  [846] pushcons 59 ............................. <")">
  [848] joinstr ................................. <tNodeInfo[#name] && "(id: " & tNodeInfo[#flatId] & ")">
  [849] setlocal 9 .............................. tNameTxt = tNodeInfo[#name] && "(id: " & tNodeInfo[#flatId] & ")"
  [851] jmp [864]
  [854] getlocal 2 .............................. <tNodeInfo>
  [856] pushsymb 76 ............................. <#name>
  [858] pusharglist 2 ........................... <tNodeInfo, #name>
  [860] objcall 51 .............................. <tNodeInfo[#name]>
  [862] setlocal 9 .............................. tNameTxt = tNodeInfo[#name]
  [864] getlocal 9 .............................. <tNameTxt>
  [866] pushcons 60 ............................. <RETURN>
  [868] joinstr ................................. <tNameTxt & RETURN>
  [869] pushcons 53 ............................. <"(">
  [871] joinstr ................................. <tNameTxt & RETURN & "(">
  [872] getlocal 2 .............................. <tNodeInfo>
  [874] pushsymb 153 ............................ <#usercount>
  [876] pusharglist 2 ........................... <tNodeInfo, #usercount>
  [878] objcall 51 .............................. <tNodeInfo[#usercount]>
  [880] joinstr ................................. <tNameTxt & RETURN & "(" & tNodeInfo[#usercount]>
  [881] pushcons 49 ............................. <"/">
  [883] joinstr ................................. <tNameTxt & RETURN & "(" & tNodeInfo[#usercount] & "/">
  [884] getlocal 2 .............................. <tNodeInfo>
  [886] pushsymb 154 ............................ <#maxUsers>
  [888] pusharglist 2 ........................... <tNodeInfo, #maxUsers>
  [890] objcall 51 .............................. <tNodeInfo[#maxUsers]>
  [892] joinstr ................................. <tNameTxt & RETURN & "(" & tNodeInfo[#usercount] & "/" & tNodeInfo[#maxUsers]>
  [893] pushcons 54 ............................. <") ">
  [895] joinstr ................................. <tNameTxt & RETURN & "(" & tNodeInfo[#usercount] & "/" & tNodeInfo[#maxUsers] & ") ">
  [896] setlocal 6 .............................. tHeaderTxt = tNameTxt & RETURN & "(" & tNodeInfo[#usercount] & "/" & tNodeInfo[#maxUsers] & ") "
  [898] getlocal 6 .............................. <tHeaderTxt>
  [900] pushcons 61 ............................. <"nav_owner">
  [902] pusharglist 1 ........................... <"nav_owner">
  [904] extcall 26 .............................. <getText("nav_owner")>
  [906] joinstr ................................. <tHeaderTxt & getText("nav_owner")>
  [907] pushcons 62 ............................. <":">
  [909] joinstr ................................. <tHeaderTxt & getText("nav_owner") & ":">
  [910] getlocal 2 .............................. <tNodeInfo>
  [912] pushsymb 156 ............................ <#owner>
  [914] pusharglist 2 ........................... <tNodeInfo, #owner>
  [916] objcall 51 .............................. <tNodeInfo[#owner]>
  [918] joinpadstr .............................. <tHeaderTxt & getText("nav_owner") & ":" && tNodeInfo[#owner]>
  [919] setlocal 6 .............................. tHeaderTxt = tHeaderTxt & getText("nav_owner") & ":" && tNodeInfo[#owner]
  [921] getlocal 2 .............................. <tNodeInfo>
  [923] pushsymb 157 ............................ <#description>
  [925] pusharglist 2 ........................... <tNodeInfo, #description>
  [927] objcall 51 .............................. <tNodeInfo[#description]>
  [929] setlocal 5 .............................. tRoomDesc = tNodeInfo[#description]
  [931] getlocal 2 .............................. <tNodeInfo>
  [933] pushsymb 147 ............................ <#door>
  [935] pusharglist 2 ........................... <tNodeInfo, #door>
  [937] objcall 51 .............................. <tNodeInfo[#door]>
  [939] peek 0 .................................. case tNodeInfo[#door] of
  [941] pushcons 63 ............................. <"open">
  [943] eq
  [944] jmpifz [954] ............................ (case) "open":
  [947] pushcons 64 ............................. <"door_open">
  [949] setlocal 4 .............................. tIconName = "door_open"
  [951] jmp [998]
  [954] peek 0
  [956] pushcons 65 ............................. <"closed">
  [958] eq
  [959] jmpifz [969] ............................ (case) "closed":
  [962] pushcons 66 ............................. <"door_closed">
  [964] setlocal 4 .............................. tIconName = "door_closed"
  [966] jmp [998]
  [969] peek 0
  [971] pushcons 67 ............................. <"password">
  [973] eq
  [974] jmpifz [984] ............................ (case) "password":
  [977] pushcons 68 ............................. <"door_password">
  [979] setlocal 4 .............................. tIconName = "door_password"
  [981] jmp [998] ............................... (case) otherwise:
  [984] getlocal 2 .............................. <tNodeInfo>
  [986] pushsymb 147 ............................ <#door>
  [988] pushcons 63 ............................. <"open">
  [990] pusharglistnoret 3 ...................... <tNodeInfo, #door, "open">
  [992] objcall 55 .............................. tNodeInfo[#door] = "open"
  [994] pushcons 64 ............................. <"door_open">
  [996] setlocal 4 .............................. tIconName = "door_open"
  [998] pop 1 ................................... end case
  [1000] getlocal 0 ............................. <tWndObj>
  [1002] pushcons 44 ............................ <"nav_modify_button">
  [1004] pusharglist 2 .......................... <tWndObj, "nav_modify_button">
  [1006] objcall 64 ............................. <tWndObj.elementExists("nav_modify_button")>
  [1008] jmpifz [1023] .......................... if tWndObj.elementExists("nav_modify_button") then
  [1011] getlocal 0 ............................. <tWndObj>
  [1013] pushcons 44 ............................ <"nav_modify_button">
  [1015] pusharglist 2 .......................... <tWndObj, "nav_modify_button">
  [1017] objcall 65 ............................. <tWndObj.getElement("nav_modify_button")>
  [1019] pusharglistnoret 1 ..................... <tWndObj.getElement("nav_modify_button")>
  [1021] objcall 59 ............................. tWndObj.getElement("nav_modify_button").show()
  [1023] getlocal 0 ............................. <tWndObj>
  [1025] pushcons 45 ............................ <"nav_addtofavourites_button">
  [1027] pusharglist 2 .......................... <tWndObj, "nav_addtofavourites_button">
  [1029] objcall 64 ............................. <tWndObj.elementExists("nav_addtofavourites_button")>
  [1031] jmpifz [1046] .......................... if tWndObj.elementExists("nav_addtofavourites_button") then
  [1034] getlocal 0 ............................. <tWndObj>
  [1036] pushcons 45 ............................ <"nav_addtofavourites_button">
  [1038] pusharglist 2 .......................... <tWndObj, "nav_addtofavourites_button">
  [1040] objcall 65 ............................. <tWndObj.getElement("nav_addtofavourites_button")>
  [1042] pusharglistnoret 1 ..................... <tWndObj.getElement("nav_addtofavourites_button")>
  [1044] objcall 59 ............................. tWndObj.getElement("nav_addtofavourites_button").show()
  [1046] getlocal 0 ............................. <tWndObj>
  [1048] pushcons 46 ............................ <"nav_removefavourites_button">
  [1050] pusharglist 2 .......................... <tWndObj, "nav_removefavourites_button">
  [1052] objcall 64 ............................. <tWndObj.elementExists("nav_removefavourites_button")>
  [1054] jmpifz [1069] .......................... if tWndObj.elementExists("nav_removefavourites_button") then
  [1057] getlocal 0 ............................. <tWndObj>
  [1059] pushcons 46 ............................ <"nav_removefavourites_button">
  [1061] pusharglist 2 .......................... <tWndObj, "nav_removefavourites_button">
  [1063] objcall 65 ............................. <tWndObj.getElement("nav_removefavourites_button")>
  [1065] pusharglistnoret 1 ..................... <tWndObj.getElement("nav_removefavourites_button")>
  [1067] objcall 59 ............................. tWndObj.getElement("nav_removefavourites_button").show()
  [1069] getlocal 0 ............................. <tWndObj>
  [1071] pushcons 47 ............................ <"nav_go_button">
  [1073] pusharglist 2 .......................... <tWndObj, "nav_go_button">
  [1075] objcall 64 ............................. <tWndObj.elementExists("nav_go_button")>
  [1077] jmpifz [1092] .......................... if tWndObj.elementExists("nav_go_button") then
  [1080] getlocal 0 ............................. <tWndObj>
  [1082] pushcons 47 ............................ <"nav_go_button">
  [1084] pusharglist 2 .......................... <tWndObj, "nav_go_button">
  [1086] objcall 65 ............................. <tWndObj.getElement("nav_go_button")>
  [1088] pusharglistnoret 1 ..................... <tWndObj.getElement("nav_go_button")>
  [1090] objcall 59 ............................. tWndObj.getElement("nav_go_button").show()
  [1092] pop 1 .................................. end case
  [1094] getprop 103 ............................ <pWriterPlainBoldLeft>
  [1096] getlocal 6 ............................. <tHeaderTxt>
  [1098] pusharglist 2 .......................... <pWriterPlainBoldLeft, tHeaderTxt>
  [1100] objcall 104 ............................ <pWriterPlainBoldLeft.render(tHeaderTxt)>
  [1102] setlocal 10 ............................ tHeaderImage = pWriterPlainBoldLeft.render(tHeaderTxt)
  [1104] getlocal 1 ............................. <tElem>
  [1106] pushsymb 133 ........................... <#width>
  [1108] pusharglist 2 .......................... <tElem, #width>
  [1110] objcall 3 .............................. <tElem.getProperty(#width)>
  [1112] setlocal 11 ............................ tWidth = tElem.getProperty(#width)
  [1114] getprop 163 ............................ <pWriterPlainNormWrap>
  [1116] pushsymb 134 ........................... <#rect>
  [1118] pushzero ............................... <0>
  [1119] pushzero ............................... <0>
  [1120] getlocal 11 ............................ <tWidth>
  [1122] pushzero ............................... <0>
  [1123] pusharglist 4 .......................... <0, 0, tWidth, 0>
  [1125] extcall 134 ............................ <rect(0, 0, tWidth, 0)>
  [1127] pusharglist 2 .......................... <[#rect: rect(0, 0, tWidth, 0)]>
  [1129] pushproplist ........................... <[#rect: rect(0, 0, tWidth, 0)]>
  [1130] pusharglistnoret 2 ..................... <pWriterPlainNormWrap, [#rect: rect(0, 0, tWidth, 0)]>
  [1132] objcall 164 ............................ pWriterPlainNormWrap.define([#rect: rect(0, 0, tWidth, 0)])
  [1134] getprop 163 ............................ <pWriterPlainNormWrap>
  [1136] getlocal 5 ............................. <tRoomDesc>
  [1138] pusharglist 2 .......................... <pWriterPlainNormWrap, tRoomDesc>
  [1140] objcall 104 ............................ <pWriterPlainNormWrap.render(tRoomDesc)>
  [1142] setlocal 12 ............................ tImage = pWriterPlainNormWrap.render(tRoomDesc)
  [1144] pushint8 2 ............................. <2>
  [1146] setlocal 13 ............................ tMargin = 2
  [1148] getlocal 11 ............................ <tWidth>
  [1150] getlocal 10 ............................ <tHeaderImage>
  [1152] getobjprop 106 ......................... <tHeaderImage.height>
  [1154] getlocal 13 ............................ <tMargin>
  [1156] add .................................... <tHeaderImage.height + tMargin>
  [1157] getlocal 12 ............................ <tImage>
  [1159] getobjprop 106 ......................... <tImage.height>
  [1161] add .................................... <tHeaderImage.height + tMargin + tImage.height>
  [1162] pushint8 8 ............................. <8>
  [1164] pusharglist 3 .......................... <tWidth, tHeaderImage.height + tMargin + tImage.height, 8>
  [1166] extcall 132 ............................ <image(tWidth, tHeaderImage.height + tMargin + tImage.height, 8)>
  [1168] setlocal 14 ............................ tDataImage = image(tWidth, tHeaderImage.height + tMargin + tImage.height, 8)
  [1170] getlocal 14 ............................ <tDataImage>
  [1172] getlocal 10 ............................ <tHeaderImage>
  [1174] getlocal 10 ............................ <tHeaderImage>
  [1176] getobjprop 134 ......................... <tHeaderImage.rect>
  [1178] getlocal 10 ............................ <tHeaderImage>
  [1180] getobjprop 134 ......................... <tHeaderImage.rect>
  [1182] pusharglistnoret 4 ..................... <tDataImage, tHeaderImage, tHeaderImage.rect, tHeaderImage.rect>
  [1184] objcall 135 ............................ tDataImage.copyPixels(tHeaderImage, tHeaderImage.rect, tHeaderImage.rect)
  [1186] pushzero ............................... <0>
  [1187] pushzero ............................... <0>
  [1188] getlocal 12 ............................ <tImage>
  [1190] getobjprop 133 ......................... <tImage.width>
  [1192] getlocal 12 ............................ <tImage>
  [1194] getobjprop 106 ......................... <tImage.height>
  [1196] pusharglist 4 .......................... <0, 0, tImage.width, tImage.height>
  [1198] extcall 134 ............................ <rect(0, 0, tImage.width, tImage.height)>
  [1200] setlocal 15 ............................ tSourceRect = rect(0, 0, tImage.width, tImage.height)
  [1202] pushzero ............................... <0>
  [1203] getlocal 10 ............................ <tHeaderImage>
  [1205] getobjprop 106 ......................... <tHeaderImage.height>
  [1207] getlocal 13 ............................ <tMargin>
  [1209] add .................................... <tHeaderImage.height + tMargin>
  [1210] getlocal 12 ............................ <tImage>
  [1212] getobjprop 133 ......................... <tImage.width>
  [1214] getlocal 12 ............................ <tImage>
  [1216] getobjprop 106 ......................... <tImage.height>
  [1218] getlocal 10 ............................ <tHeaderImage>
  [1220] getobjprop 106 ......................... <tHeaderImage.height>
  [1222] add .................................... <tImage.height + tHeaderImage.height>
  [1223] getlocal 13 ............................ <tMargin>
  [1225] add .................................... <tImage.height + tHeaderImage.height + tMargin>
  [1226] pusharglist 4 .......................... <0, tHeaderImage.height + tMargin, tImage.width, tImage.height + tHeaderImage.height + tMargin>
  [1228] extcall 134 ............................ <rect(0, tHeaderImage.height + tMargin, tImage.width, tImage.height + tHeaderImage.height + tMargin)>
  [1230] setlocal 16 ............................ tTargetRect = rect(0, tHeaderImage.height + tMargin, tImage.width, tImage.height + tHeaderImage.height + tMargin)
  [1232] getlocal 14 ............................ <tDataImage>
  [1234] getlocal 12 ............................ <tImage>
  [1236] getlocal 16 ............................ <tTargetRect>
  [1238] getlocal 15 ............................ <tSourceRect>
  [1240] pusharglistnoret 4 ..................... <tDataImage, tImage, tTargetRect, tSourceRect>
  [1242] objcall 135 ............................ tDataImage.copyPixels(tImage, tTargetRect, tSourceRect)
  [1244] getlocal 1 ............................. <tElem>
  [1246] getlocal 14 ............................ <tDataImage>
  [1248] pusharglistnoret 2 ..................... <tElem, tDataImage>
  [1250] objcall 105 ............................ tElem.feedImage(tDataImage)
  [1252] getlocal 4 ............................. <tIconName>
  [1254] pusharglist 1 .......................... <tIconName>
  [1256] extcall 152 ............................ <memberExists(tIconName)>
  [1258] getlocal 0 ............................. <tWndObj>
  [1260] pushcons 69 ............................ <"nav_roomnfo_icon">
  [1262] pusharglist 2 .......................... <tWndObj, "nav_roomnfo_icon">
  [1264] objcall 64 ............................. <tWndObj.elementExists("nav_roomnfo_icon")>
  [1266] and .................................... <memberExists(tIconName) and tWndObj.elementExists("nav_roomnfo_icon")>
  [1267] jmpifz [1438] .......................... if memberExists(tIconName) and tWndObj.elementExists("nav_roomnfo_icon") then
  [1270] pushcons 69 ............................ <"nav_roomnfo_icon">
  [1272] setlocal 17 ............................ tElemID = "nav_roomnfo_icon"
  [1274] getlocal 4 ............................. <tIconName>
  [1276] pusharglist 1 .......................... <tIconName>
  [1278] extcall 166 ............................ <getmemnum(tIconName)>
  [1280] pusharglist 1 .......................... <getmemnum(tIconName)>
  [1282] extcall 165 ............................ <member(getmemnum(tIconName))>
  [1284] getobjprop 132 ......................... <member(getmemnum(tIconName)).image>
  [1286] setlocal 18 ............................ tTempImg = member(getmemnum(tIconName)).image
  [1288] getlocal 18 ............................ <tTempImg>
  [1290] pusharglist 1 .......................... <tTempImg>
  [1292] objcall 167 ............................ <tTempImg.trimWhiteSpace()>
  [1294] setlocal 18 ............................ tTempImg = tTempImg.trimWhiteSpace()
  [1296] getlocal 0 ............................. <tWndObj>
  [1298] getlocal 17 ............................ <tElemID>
  [1300] pusharglist 2 .......................... <tWndObj, tElemID>
  [1302] objcall 65 ............................. <tWndObj.getElement(tElemID)>
  [1304] setlocal 19 ............................ tElement = tWndObj.getElement(tElemID)
  [1306] getlocal 19 ............................ <tElement>
  [1308] pushsymb 133 ........................... <#width>
  [1310] pusharglist 2 .......................... <tElement, #width>
  [1312] objcall 3 .............................. <tElement.getProperty(#width)>
  [1314] setlocal 11 ............................ tWidth = tElement.getProperty(#width)
  [1316] getlocal 19 ............................ <tElement>
  [1318] pushsymb 106 ........................... <#height>
  [1320] pusharglist 2 .......................... <tElement, #height>
  [1322] objcall 3 .............................. <tElement.getProperty(#height)>
  [1324] setlocal 20 ............................ tHeight = tElement.getProperty(#height)
  [1326] getlocal 19 ............................ <tElement>
  [1328] pushsymb 168 ........................... <#depth>
  [1330] pusharglist 2 .......................... <tElement, #depth>
  [1332] objcall 3 .............................. <tElement.getProperty(#depth)>
  [1334] setlocal 21 ............................ tDepth = tElement.getProperty(#depth)
  [1336] getlocal 11 ............................ <tWidth>
  [1338] getlocal 20 ............................ <tHeight>
  [1340] getlocal 21 ............................ <tDepth>
  [1342] pusharglist 3 .......................... <tWidth, tHeight, tDepth>
  [1344] extcall 132 ............................ <image(tWidth, tHeight, tDepth)>
  [1346] setlocal 22 ............................ tPrewImg = image(tWidth, tHeight, tDepth)
  [1348] getlocal 22 ............................ <tPrewImg>
  [1350] getobjprop 134 ......................... <tPrewImg.rect>
  [1352] getlocal 18 ............................ <tTempImg>
  [1354] getobjprop 134 ......................... <tTempImg.rect>
  [1356] sub .................................... <tPrewImg.rect - tTempImg.rect>
  [1357] setlocal 23 ............................ tdestrect = tPrewImg.rect - tTempImg.rect
  [1359] getlocal 23 ............................ <tdestrect>
  [1361] getobjprop 133 ......................... <tdestrect.width>
  [1363] pushint8 2 ............................. <2>
  [1365] div .................................... <tdestrect.width / 2>
  [1366] getlocal 23 ............................ <tdestrect>
  [1368] getobjprop 106 ......................... <tdestrect.height>
  [1370] pushint8 2 ............................. <2>
  [1372] div .................................... <tdestrect.height / 2>
  [1373] getlocal 18 ............................ <tTempImg>
  [1375] getobjprop 133 ......................... <tTempImg.width>
  [1377] getlocal 23 ............................ <tdestrect>
  [1379] getobjprop 133 ......................... <tdestrect.width>
  [1381] pushint8 2 ............................. <2>
  [1383] div .................................... <tdestrect.width / 2>
  [1384] add .................................... <tTempImg.width + (tdestrect.width / 2)>
  [1385] getlocal 23 ............................ <tdestrect>
  [1387] getobjprop 106 ......................... <tdestrect.height>
  [1389] pushint8 2 ............................. <2>
  [1391] div .................................... <tdestrect.height / 2>
  [1392] getlocal 18 ............................ <tTempImg>
  [1394] getobjprop 106 ......................... <tTempImg.height>
  [1396] add .................................... <(tdestrect.height / 2) + tTempImg.height>
  [1397] pusharglist 4 .......................... <tdestrect.width / 2, tdestrect.height / 2, tTempImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempImg.height>
  [1399] extcall 134 ............................ <rect(tdestrect.width / 2, tdestrect.height / 2, tTempImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempImg.height)>
  [1401] setlocal 23 ............................ tdestrect = rect(tdestrect.width / 2, tdestrect.height / 2, tTempImg.width + (tdestrect.width / 2), (tdestrect.height / 2) + tTempImg.height)
  [1403] getlocal 22 ............................ <tPrewImg>
  [1405] getlocal 18 ............................ <tTempImg>
  [1407] getlocal 23 ............................ <tdestrect>
  [1409] getlocal 18 ............................ <tTempImg>
  [1411] getobjprop 134 ......................... <tTempImg.rect>
  [1413] pushsymb 169 ........................... <#ink>
  [1415] pushint8 8 ............................. <8>
  [1417] pusharglist 2 .......................... <[#ink: 8]>
  [1419] pushproplist ........................... <[#ink: 8]>
  [1420] pusharglistnoret 5 ..................... <tPrewImg, tTempImg, tdestrect, tTempImg.rect, [#ink: 8]>
  [1422] objcall 135 ............................ tPrewImg.copyPixels(tTempImg, tdestrect, tTempImg.rect, [#ink: 8])
  [1424] getlocal 19 ............................ <tElement>
  [1426] pusharglistnoret 1 ..................... <tElement>
  [1428] objcall 81 ............................. tElement.clearImage()
  [1430] getlocal 19 ............................ <tElement>
  [1432] getlocal 22 ............................ <tPrewImg>
  [1434] pusharglistnoret 2 ..................... <tElement, tPrewImg>
  [1436] objcall 105 ............................ tElement.feedImage(tPrewImg)
  [1438] pushint8 1 ............................. <1>
  [1440] pusharglistnoret 1 ..................... <1>
  [1442] extcall 36 ............................. return 1
  [1444] ret
end

on createImgResources me
  [  0] getprop 34 .............................. <pResourcesReady>
  [  2] jmpifz [ 10] ............................ if pResourcesReady then
  [  5] pushzero ................................ <0>
  [  6] pusharglistnoret 1 ...................... <0>
  [  8] extcall 36 .............................. return 0
  [ 10] pushcons 70 ............................. <"struct.font.plain">
  [ 12] pusharglist 1 ........................... <"struct.font.plain">
  [ 14] extcall 187 ............................. <getStructVariable("struct.font.plain")>
  [ 16] setlocal 0 .............................. tPlain = getStructVariable("struct.font.plain")
  [ 18] pushcons 71 ............................. <"struct.font.bold">
  [ 20] pusharglist 1 ........................... <"struct.font.bold">
  [ 22] extcall 187 ............................. <getStructVariable("struct.font.bold")>
  [ 24] setlocal 1 .............................. tBold = getStructVariable("struct.font.bold")
  [ 26] pushcons 72 ............................. <"struct.font.link">
  [ 28] pusharglist 1 ........................... <"struct.font.link">
  [ 30] extcall 187 ............................. <getStructVariable("struct.font.link")>
  [ 32] setlocal 2 .............................. tLink = getStructVariable("struct.font.link")
  [ 34] pushcons 73 ............................. <"nav_plain_norm_left">
  [ 36] getlocal 0 .............................. <tPlain>
  [ 38] pusharglistnoret 2 ...................... <"nav_plain_norm_left", tPlain>
  [ 40] extcall 188 ............................. createWriter("nav_plain_norm_left", tPlain)
  [ 42] pushcons 73 ............................. <"nav_plain_norm_left">
  [ 44] pusharglist 1 ........................... <"nav_plain_norm_left">
  [ 46] extcall 190 ............................. <getWriter("nav_plain_norm_left")>
  [ 48] setprop 189 ............................. pWriterPlainNormLeft = getWriter("nav_plain_norm_left")
  [ 50] pushcons 74 ............................. <"nav_plain_bold_left">
  [ 52] getlocal 1 .............................. <tBold>
  [ 54] pusharglistnoret 2 ...................... <"nav_plain_bold_left", tBold>
  [ 56] extcall 188 ............................. createWriter("nav_plain_bold_left", tBold)
  [ 58] pushcons 74 ............................. <"nav_plain_bold_left">
  [ 60] pusharglist 1 ........................... <"nav_plain_bold_left">
  [ 62] extcall 190 ............................. <getWriter("nav_plain_bold_left")>
  [ 64] setprop 103 ............................. pWriterPlainBoldLeft = getWriter("nav_plain_bold_left")
  [ 66] pushcons 75 ............................. <"nav_under_norm_left">
  [ 68] getlocal 2 .............................. <tLink>
  [ 70] pusharglistnoret 2 ...................... <"nav_under_norm_left", tLink>
  [ 72] extcall 188 ............................. createWriter("nav_under_norm_left", tLink)
  [ 74] pushcons 75 ............................. <"nav_under_norm_left">
  [ 76] pusharglist 1 ........................... <"nav_under_norm_left">
  [ 78] extcall 190 ............................. <getWriter("nav_under_norm_left")>
  [ 80] setprop 191 ............................. pWriterUnderNormLeft = getWriter("nav_under_norm_left")
  [ 82] pushcons 76 ............................. <"nav_plain_bold_cent">
  [ 84] getlocal 1 .............................. <tBold>
  [ 86] pusharglistnoret 2 ...................... <"nav_plain_bold_cent", tBold>
  [ 88] extcall 188 ............................. createWriter("nav_plain_bold_cent", tBold)
  [ 90] pushcons 76 ............................. <"nav_plain_bold_cent">
  [ 92] pusharglist 1 ........................... <"nav_plain_bold_cent">
  [ 94] extcall 190 ............................. <getWriter("nav_plain_bold_cent")>
  [ 96] setprop 192 ............................. pWriterPlainBoldCent = getWriter("nav_plain_bold_cent")
  [ 98] getprop 192 ............................. <pWriterPlainBoldCent>
  [100] pushsymb 193 ............................ <#alignment>
  [102] pushsymb 194 ............................ <#center>
  [104] pusharglist 2 ........................... <[#alignment: #center]>
  [106] pushproplist ............................ <[#alignment: #center]>
  [107] pusharglistnoret 2 ...................... <pWriterPlainBoldCent, [#alignment: #center]>
  [109] objcall 164 ............................. pWriterPlainBoldCent.define([#alignment: #center])
  [111] pushcons 77 ............................. <"nav_plain_norm_wrap">
  [113] getlocal 0 .............................. <tPlain>
  [115] pusharglistnoret 2 ...................... <"nav_plain_norm_wrap", tPlain>
  [117] extcall 188 ............................. createWriter("nav_plain_norm_wrap", tPlain)
  [119] pushcons 77 ............................. <"nav_plain_norm_wrap">
  [121] pusharglist 1 ........................... <"nav_plain_norm_wrap">
  [123] extcall 190 ............................. <getWriter("nav_plain_norm_wrap")>
  [125] setprop 163 ............................. pWriterPlainNormWrap = getWriter("nav_plain_norm_wrap")
  [127] getprop 163 ............................. <pWriterPlainNormWrap>
  [129] pushsymb 195 ............................ <#wordWrap>
  [131] pushint8 1 .............................. <1>
  [133] pusharglist 2 ........................... <[#wordWrap: 1]>
  [135] pushproplist ............................ <[#wordWrap: 1]>
  [136] pusharglistnoret 2 ...................... <pWriterPlainNormWrap, [#wordWrap: 1]>
  [138] objcall 164 ............................. pWriterPlainNormWrap.define([#wordWrap: 1])
  [140] pushcons 78 ............................. <"nav_private_plain">
  [142] getlocal 0 .............................. <tPlain>
  [144] pusharglistnoret 2 ...................... <"nav_private_plain", tPlain>
  [146] extcall 188 ............................. createWriter("nav_private_plain", tPlain)
  [148] pushcons 78 ............................. <"nav_private_plain">
  [150] pusharglist 1 ........................... <"nav_private_plain">
  [152] extcall 190 ............................. <getWriter("nav_private_plain")>
  [154] setprop 196 ............................. pWriterPrivPlain = getWriter("nav_private_plain")
  [156] getprop 196 ............................. <pWriterPrivPlain>
  [158] pushsymb 195 ............................ <#wordWrap>
  [160] pushzero ................................ <0>
  [161] pushsymb 197 ............................ <#fixedLineSpace>
  [163] getprop 30 .............................. <pListItemHeight>
  [165] pusharglist 4 ........................... <[#wordWrap: 0, #fixedLineSpace: pListItemHeight]>
  [167] pushproplist ............................ <[#wordWrap: 0, #fixedLineSpace: pListItemHeight]>
  [168] pusharglistnoret 2 ...................... <pWriterPrivPlain, [#wordWrap: 0, #fixedLineSpace: pListItemHeight]>
  [170] objcall 164 ............................. pWriterPrivPlain.define([#wordWrap: 0, #fixedLineSpace: pListItemHeight])
  [172] pushcons 79 ............................. <"nav_backtabs_plain">
  [174] getlocal 1 .............................. <tBold>
  [176] pusharglistnoret 2 ...................... <"nav_backtabs_plain", tBold>
  [178] extcall 188 ............................. createWriter("nav_backtabs_plain", tBold)
  [180] pushcons 79 ............................. <"nav_backtabs_plain">
  [182] pusharglist 1 ........................... <"nav_backtabs_plain">
  [184] extcall 190 ............................. <getWriter("nav_backtabs_plain")>
  [186] setprop 129 ............................. pWriterBackTabs = getWriter("nav_backtabs_plain")
  [188] getprop 129 ............................. <pWriterBackTabs>
  [190] pushsymb 195 ............................ <#wordWrap>
  [192] pushzero ................................ <0>
  [193] pushsymb 197 ............................ <#fixedLineSpace>
  [195] getprop 31 .............................. <pHistoryItemHeight>
  [197] pushsymb 198 ............................ <#color>
  [199] pushint8 51 ............................. <51>
  [201] pushint8 102 ............................ <102>
  [203] pushint8 102 ............................ <102>
  [205] pusharglist 3 ........................... <51, 102, 102>
  [207] extcall 199 ............................. <rgb(51, 102, 102)>
  [209] pusharglist 6 ........................... <[#wordWrap: 0, #fixedLineSpace: pHistoryItemHeight, #color: rgb(51, 102, 102)]>
  [211] pushproplist ............................ <[#wordWrap: 0, #fixedLineSpace: pHistoryItemHeight, #color: rgb(51, 102, 102)]>
  [212] pusharglistnoret 2 ...................... <pWriterBackTabs, [#wordWrap: 0, #fixedLineSpace: pHistoryItemHeight, #color: rgb(51, 102, 102)]>
  [214] objcall 164 ............................. pWriterBackTabs.define([#wordWrap: 0, #fixedLineSpace: pHistoryItemHeight, #color: rgb(51, 102, 102)])
  [216] getprop 191 ............................. <pWriterUnderNormLeft>
  [218] pushcons 80 ............................. <"nav_gobutton">
  [220] pusharglist 1 ........................... <"nav_gobutton">
  [222] extcall 26 .............................. <getText("nav_gobutton")>
  [224] pusharglist 2 ........................... <pWriterUnderNormLeft, getText("nav_gobutton")>
  [226] objcall 104 ............................. <pWriterUnderNormLeft.render(getText("nav_gobutton"))>
  [228] pusharglist 1 ........................... <pWriterUnderNormLeft.render(getText("nav_gobutton"))>
  [230] objcall 201 ............................. <pWriterUnderNormLeft.render(getText("nav_gobutton")).duplicate()>
  [232] setprop 200 ............................. pGoLinkTextImg = pWriterUnderNormLeft.render(getText("nav_gobutton")).duplicate()
  [234] getprop 191 ............................. <pWriterUnderNormLeft>
  [236] pushsymb 198 ............................ <#color>
  [238] pushint16 212 ........................... <212>
  [241] pushint8 121 ............................ <121>
  [243] pushint8 121 ............................ <121>
  [245] pusharglist 3 ........................... <212, 121, 121>
  [247] extcall 199 ............................. <rgb(212, 121, 121)>
  [249] pusharglist 2 ........................... <[#color: rgb(212, 121, 121)]>
  [251] pushproplist ............................ <[#color: rgb(212, 121, 121)]>
  [252] pusharglistnoret 2 ...................... <pWriterUnderNormLeft, [#color: rgb(212, 121, 121)]>
  [254] objcall 164 ............................. pWriterUnderNormLeft.define([#color: rgb(212, 121, 121)])
  [256] getprop 191 ............................. <pWriterUnderNormLeft>
  [258] pushcons 81 ............................. <"nav_fullbutton">
  [260] pusharglist 1 ........................... <"nav_fullbutton">
  [262] extcall 26 .............................. <getText("nav_fullbutton")>
  [264] pusharglist 2 ........................... <pWriterUnderNormLeft, getText("nav_fullbutton")>
  [266] objcall 104 ............................. <pWriterUnderNormLeft.render(getText("nav_fullbutton"))>
  [268] pusharglist 1 ........................... <pWriterUnderNormLeft.render(getText("nav_fullbutton"))>
  [270] objcall 201 ............................. <pWriterUnderNormLeft.render(getText("nav_fullbutton")).duplicate()>
  [272] setprop 202 ............................. pFullLinkTextImg = pWriterUnderNormLeft.render(getText("nav_fullbutton")).duplicate()
  [274] getprop 191 ............................. <pWriterUnderNormLeft>
  [276] pushsymb 198 ............................ <#color>
  [278] pushzero ................................ <0>
  [279] pushzero ................................ <0>
  [280] pushzero ................................ <0>
  [281] pusharglist 3 ........................... <0, 0, 0>
  [283] extcall 199 ............................. <rgb(0, 0, 0)>
  [285] pusharglist 2 ........................... <[#color: rgb(0, 0, 0)]>
  [287] pushproplist ............................ <[#color: rgb(0, 0, 0)]>
  [288] pusharglistnoret 2 ...................... <pWriterUnderNormLeft, [#color: rgb(0, 0, 0)]>
  [290] objcall 164 ............................. pWriterUnderNormLeft.define([#color: rgb(0, 0, 0)])
  [292] getprop 191 ............................. <pWriterUnderNormLeft>
  [294] pushcons 82 ............................. <"nav_openbutton">
  [296] pusharglist 1 ........................... <"nav_openbutton">
  [298] extcall 26 .............................. <getText("nav_openbutton")>
  [300] pusharglist 2 ........................... <pWriterUnderNormLeft, getText("nav_openbutton")>
  [302] objcall 104 ............................. <pWriterUnderNormLeft.render(getText("nav_openbutton"))>
  [304] pusharglist 1 ........................... <pWriterUnderNormLeft.render(getText("nav_openbutton"))>
  [306] objcall 201 ............................. <pWriterUnderNormLeft.render(getText("nav_openbutton")).duplicate()>
  [308] setprop 203 ............................. pOpenLinkTextImg = pWriterUnderNormLeft.render(getText("nav_openbutton")).duplicate()
  [310] pushcons 83 ............................. <"nav_showfull">
  [312] pushcons 72 ............................. <"struct.font.link">
  [314] pusharglist 1 ........................... <"struct.font.link">
  [316] extcall 187 ............................. <getStructVariable("struct.font.link")>
  [318] pusharglistnoret 2 ...................... <"nav_showfull", getStructVariable("struct.font.link")>
  [320] extcall 188 ............................. createWriter("nav_showfull", getStructVariable("struct.font.link"))
  [322] pushcons 83 ............................. <"nav_showfull">
  [324] pusharglist 1 ........................... <"nav_showfull">
  [326] extcall 190 ............................. <getWriter("nav_showfull")>
  [328] setlocal 3 .............................. tWriter = getWriter("nav_showfull")
  [330] getlocal 3 .............................. <tWriter>
  [332] pushsymb 195 ............................ <#wordWrap>
  [334] pushzero ................................ <0>
  [335] pushsymb 198 ............................ <#color>
  [337] pushcons 84 ............................. <"#7B9498">
  [339] pusharglist 1 ........................... <"#7B9498">
  [341] extcall 199 ............................. <rgb("#7B9498")>
  [343] pushsymb 193 ............................ <#alignment>
  [345] pushsymb 204 ............................ <#right>
  [347] pusharglist 6 ........................... <[#wordWrap: 0, #color: rgb("#7B9498"), #alignment: #right]>
  [349] pushproplist ............................ <[#wordWrap: 0, #color: rgb("#7B9498"), #alignment: #right]>
  [350] pusharglistnoret 2 ...................... <tWriter, [#wordWrap: 0, #color: rgb("#7B9498"), #alignment: #right]>
  [352] objcall 164 ............................. tWriter.define([#wordWrap: 0, #color: rgb("#7B9498"), #alignment: #right])
  [354] pusharglist 0 ........................... <[:]>
  [356] pushproplist ............................ <[:]>
  [357] setprop 205 ............................. pHideFullLinkImages = [:]
  [359] getprop 205 ............................. <pHideFullLinkImages>
  [361] pushsymb 59 ............................. <#show>
  [363] getlocal 3 .............................. <tWriter>
  [365] pushcons 83 ............................. <"nav_showfull">
  [367] pusharglist 1 ........................... <"nav_showfull">
  [369] extcall 26 .............................. <getText("nav_showfull")>
  [371] pusharglist 2 ........................... <tWriter, getText("nav_showfull")>
  [373] objcall 104 ............................. <tWriter.render(getText("nav_showfull"))>
  [375] pusharglist 1 ........................... <tWriter.render(getText("nav_showfull"))>
  [377] objcall 201 ............................. <tWriter.render(getText("nav_showfull")).duplicate()>
  [379] pusharglistnoret 3 ...................... <pHideFullLinkImages, #show, tWriter.render(getText("nav_showfull")).duplicate()>
  [381] objcall 55 .............................. pHideFullLinkImages[#show] = tWriter.render(getText("nav_showfull")).duplicate()
  [383] getprop 205 ............................. <pHideFullLinkImages>
  [385] pushsymb 61 ............................. <#hide>
  [387] getlocal 3 .............................. <tWriter>
  [389] pushcons 85 ............................. <"nav_hidefull">
  [391] pusharglist 1 ........................... <"nav_hidefull">
  [393] extcall 26 .............................. <getText("nav_hidefull")>
  [395] pusharglist 2 ........................... <tWriter, getText("nav_hidefull")>
  [397] objcall 104 ............................. <tWriter.render(getText("nav_hidefull"))>
  [399] pusharglist 1 ........................... <tWriter.render(getText("nav_hidefull"))>
  [401] objcall 201 ............................. <tWriter.render(getText("nav_hidefull")).duplicate()>
  [403] pusharglistnoret 3 ...................... <pHideFullLinkImages, #hide, tWriter.render(getText("nav_hidefull")).duplicate()>
  [405] objcall 55 .............................. pHideFullLinkImages[#hide] = tWriter.render(getText("nav_hidefull")).duplicate()
  [407] pushcons 83 ............................. <"nav_showfull">
  [409] pusharglistnoret 1 ...................... <"nav_showfull">
  [411] extcall 206 ............................. removeWriter("nav_showfull")
  [413] pusharglist 0 ........................... <>
  [415] extcall 50 .............................. <VOID>
  [417] setlocal 3 .............................. tWriter = VOID
  [419] pushcons 86 ............................. <"naviTempWindow">
  [421] pusharglistnoret 1 ...................... <"naviTempWindow">
  [423] extcall 68 .............................. createWindow("naviTempWindow")
  [425] pushcons 86 ............................. <"naviTempWindow">
  [427] pusharglist 1 ........................... <"naviTempWindow">
  [429] extcall 58 .............................. <getWindow("naviTempWindow")>
  [431] setlocal 4 .............................. tTempWindowObj = getWindow("naviTempWindow")
  [433] pusharglist 0 ........................... <[]>
  [435] pushlist ................................ <[]>
  [436] setprop 207 ............................. pRoomBackImages = []
  [438] getprop 207 ............................. <pRoomBackImages>
  [440] pushint8 1 .............................. <1>
  [442] pushint8 81 ............................. <81>
  [444] pusharglist 1 ........................... <81>
  [446] extcall 208 ............................. <paletteIndex(81)>
  [448] pusharglist 2 ........................... <1, paletteIndex(81)>
  [450] localcall 17 ............................ <createRoomItemImage(1, paletteIndex(81))>
  [452] pusharglistnoret 2 ...................... <pRoomBackImages, createRoomItemImage(1, paletteIndex(81))>
  [454] objcall 209 ............................. pRoomBackImages.add(createRoomItemImage(1, paletteIndex(81)))
  [456] getprop 207 ............................. <pRoomBackImages>
  [458] pushint8 2 .............................. <2>
  [460] pushint16 128 ........................... <128>
  [463] pusharglist 1 ........................... <128>
  [465] extcall 208 ............................. <paletteIndex(128)>
  [467] pusharglist 2 ........................... <2, paletteIndex(128)>
  [469] localcall 17 ............................ <createRoomItemImage(2, paletteIndex(128))>
  [471] pusharglistnoret 2 ...................... <pRoomBackImages, createRoomItemImage(2, paletteIndex(128))>
  [473] objcall 209 ............................. pRoomBackImages.add(createRoomItemImage(2, paletteIndex(128)))
  [475] getprop 207 ............................. <pRoomBackImages>
  [477] pushint8 3 .............................. <3>
  [479] pushint16 129 ........................... <129>
  [482] pusharglist 1 ........................... <129>
  [484] extcall 208 ............................. <paletteIndex(129)>
  [486] pusharglist 2 ........................... <3, paletteIndex(129)>
  [488] localcall 17 ............................ <createRoomItemImage(3, paletteIndex(129))>
  [490] pusharglistnoret 2 ...................... <pRoomBackImages, createRoomItemImage(3, paletteIndex(129))>
  [492] objcall 209 ............................. pRoomBackImages.add(createRoomItemImage(3, paletteIndex(129)))
  [494] getprop 207 ............................. <pRoomBackImages>
  [496] pushint8 4 .............................. <4>
  [498] pushint16 130 ........................... <130>
  [501] pusharglist 1 ........................... <130>
  [503] extcall 208 ............................. <paletteIndex(130)>
  [505] pusharglist 2 ........................... <4, paletteIndex(130)>
  [507] localcall 17 ............................ <createRoomItemImage(4, paletteIndex(130))>
  [509] pusharglistnoret 2 ...................... <pRoomBackImages, createRoomItemImage(4, paletteIndex(130))>
  [511] objcall 209 ............................. pRoomBackImages.add(createRoomItemImage(4, paletteIndex(130)))
  [513] getprop 207 ............................. <pRoomBackImages>
  [515] pushint8 5 .............................. <5>
  [517] pushint16 131 ........................... <131>
  [520] pusharglist 1 ........................... <131>
  [522] extcall 208 ............................. <paletteIndex(131)>
  [524] pusharglist 2 ........................... <5, paletteIndex(131)>
  [526] localcall 17 ............................ <createRoomItemImage(5, paletteIndex(131))>
  [528] pusharglistnoret 2 ...................... <pRoomBackImages, createRoomItemImage(5, paletteIndex(131))>
  [530] objcall 209 ............................. pRoomBackImages.add(createRoomItemImage(5, paletteIndex(131)))
  [532] pusharglist 0 ........................... <[]>
  [534] pushlist ................................ <[]>
  [535] setprop 210 ............................. pCatBackImages = []
  [537] getprop 210 ............................. <pCatBackImages>
  [539] pushint8 1 .............................. <1>
  [541] pushint8 81 ............................. <81>
  [543] pusharglist 1 ........................... <81>
  [545] extcall 208 ............................. <paletteIndex(81)>
  [547] pusharglist 2 ........................... <1, paletteIndex(81)>
  [549] localcall 16 ............................ <createCatItemImage(1, paletteIndex(81))>
  [551] pusharglistnoret 2 ...................... <pCatBackImages, createCatItemImage(1, paletteIndex(81))>
  [553] objcall 209 ............................. pCatBackImages.add(createCatItemImage(1, paletteIndex(81)))
  [555] getprop 210 ............................. <pCatBackImages>
  [557] pushint8 2 .............................. <2>
  [559] pushint16 128 ........................... <128>
  [562] pusharglist 1 ........................... <128>
  [564] extcall 208 ............................. <paletteIndex(128)>
  [566] pusharglist 2 ........................... <2, paletteIndex(128)>
  [568] localcall 16 ............................ <createCatItemImage(2, paletteIndex(128))>
  [570] pusharglistnoret 2 ...................... <pCatBackImages, createCatItemImage(2, paletteIndex(128))>
  [572] objcall 209 ............................. pCatBackImages.add(createCatItemImage(2, paletteIndex(128)))
  [574] getprop 210 ............................. <pCatBackImages>
  [576] pushint8 3 .............................. <3>
  [578] pushint16 129 ........................... <129>
  [581] pusharglist 1 ........................... <129>
  [583] extcall 208 ............................. <paletteIndex(129)>
  [585] pusharglist 2 ........................... <3, paletteIndex(129)>
  [587] localcall 16 ............................ <createCatItemImage(3, paletteIndex(129))>
  [589] pusharglistnoret 2 ...................... <pCatBackImages, createCatItemImage(3, paletteIndex(129))>
  [591] objcall 209 ............................. pCatBackImages.add(createCatItemImage(3, paletteIndex(129)))
  [593] getprop 210 ............................. <pCatBackImages>
  [595] pushint8 4 .............................. <4>
  [597] pushint16 130 ........................... <130>
  [600] pusharglist 1 ........................... <130>
  [602] extcall 208 ............................. <paletteIndex(130)>
  [604] pusharglist 2 ........................... <4, paletteIndex(130)>
  [606] localcall 16 ............................ <createCatItemImage(4, paletteIndex(130))>
  [608] pusharglistnoret 2 ...................... <pCatBackImages, createCatItemImage(4, paletteIndex(130))>
  [610] objcall 209 ............................. pCatBackImages.add(createCatItemImage(4, paletteIndex(130)))
  [612] pushcons 86 ............................. <"naviTempWindow">
  [614] pusharglistnoret 1 ...................... <"naviTempWindow">
  [616] extcall 40 .............................. removeWindow("naviTempWindow")
  [618] pushint8 1 .............................. <1>
  [620] setprop 34 .............................. pResourcesReady = 1
  [622] pushint8 1 .............................. <1>
  [624] pusharglistnoret 1 ...................... <1>
  [626] extcall 36 .............................. return 1
  [628] ret
end

on removeImgResources me
  [  0] getprop 34 .............................. <pResourcesReady>
  [  2] not ..................................... <not pResourcesReady>
  [  3] jmpifz [ 11] ............................ if not pResourcesReady then
  [  6] pushzero ................................ <0>
  [  7] pusharglistnoret 1 ...................... <0>
  [  9] extcall 36 .............................. return 0
  [ 11] getprop 189 ............................. <pWriterPlainNormLeft>
  [ 13] pusharglist 1 ........................... <pWriterPlainNormLeft>
  [ 15] objcall 70 .............................. <pWriterPlainNormLeft.getID()>
  [ 17] pusharglistnoret 1 ...................... <pWriterPlainNormLeft.getID()>
  [ 19] extcall 206 ............................. removeWriter(pWriterPlainNormLeft.getID())
  [ 21] pusharglist 0 ........................... <>
  [ 23] extcall 50 .............................. <VOID>
  [ 25] setprop 189 ............................. pWriterPlainNormLeft = VOID
  [ 27] getprop 103 ............................. <pWriterPlainBoldLeft>
  [ 29] pusharglist 1 ........................... <pWriterPlainBoldLeft>
  [ 31] objcall 70 .............................. <pWriterPlainBoldLeft.getID()>
  [ 33] pusharglistnoret 1 ...................... <pWriterPlainBoldLeft.getID()>
  [ 35] extcall 206 ............................. removeWriter(pWriterPlainBoldLeft.getID())
  [ 37] pusharglist 0 ........................... <>
  [ 39] extcall 50 .............................. <VOID>
  [ 41] setprop 103 ............................. pWriterPlainBoldLeft = VOID
  [ 43] getprop 191 ............................. <pWriterUnderNormLeft>
  [ 45] pusharglist 1 ........................... <pWriterUnderNormLeft>
  [ 47] objcall 70 .............................. <pWriterUnderNormLeft.getID()>
  [ 49] pusharglistnoret 1 ...................... <pWriterUnderNormLeft.getID()>
  [ 51] extcall 206 ............................. removeWriter(pWriterUnderNormLeft.getID())
  [ 53] pusharglist 0 ........................... <>
  [ 55] extcall 50 .............................. <VOID>
  [ 57] setprop 191 ............................. pWriterUnderNormLeft = VOID
  [ 59] getprop 192 ............................. <pWriterPlainBoldCent>
  [ 61] pusharglist 1 ........................... <pWriterPlainBoldCent>
  [ 63] objcall 70 .............................. <pWriterPlainBoldCent.getID()>
  [ 65] pusharglistnoret 1 ...................... <pWriterPlainBoldCent.getID()>
  [ 67] extcall 206 ............................. removeWriter(pWriterPlainBoldCent.getID())
  [ 69] pusharglist 0 ........................... <>
  [ 71] extcall 50 .............................. <VOID>
  [ 73] setprop 192 ............................. pWriterPlainBoldCent = VOID
  [ 75] getprop 163 ............................. <pWriterPlainNormWrap>
  [ 77] pusharglist 1 ........................... <pWriterPlainNormWrap>
  [ 79] objcall 70 .............................. <pWriterPlainNormWrap.getID()>
  [ 81] pusharglistnoret 1 ...................... <pWriterPlainNormWrap.getID()>
  [ 83] extcall 206 ............................. removeWriter(pWriterPlainNormWrap.getID())
  [ 85] pusharglist 0 ........................... <>
  [ 87] extcall 50 .............................. <VOID>
  [ 89] setprop 163 ............................. pWriterPlainNormWrap = VOID
  [ 91] getprop 196 ............................. <pWriterPrivPlain>
  [ 93] pusharglist 1 ........................... <pWriterPrivPlain>
  [ 95] objcall 70 .............................. <pWriterPrivPlain.getID()>
  [ 97] pusharglistnoret 1 ...................... <pWriterPrivPlain.getID()>
  [ 99] extcall 206 ............................. removeWriter(pWriterPrivPlain.getID())
  [101] pusharglist 0 ........................... <>
  [103] extcall 50 .............................. <VOID>
  [105] setprop 196 ............................. pWriterPrivPlain = VOID
  [107] getprop 129 ............................. <pWriterBackTabs>
  [109] pusharglist 1 ........................... <pWriterBackTabs>
  [111] objcall 70 .............................. <pWriterBackTabs.getID()>
  [113] pusharglistnoret 1 ...................... <pWriterBackTabs.getID()>
  [115] extcall 206 ............................. removeWriter(pWriterBackTabs.getID())
  [117] pusharglist 0 ........................... <>
  [119] extcall 50 .............................. <VOID>
  [121] setprop 129 ............................. pWriterBackTabs = VOID
  [123] pusharglist 0 ........................... <>
  [125] extcall 50 .............................. <VOID>
  [127] setprop 205 ............................. pHideFullLinkImages = VOID
  [129] pushzero ................................ <0>
  [130] setprop 34 .............................. pResourcesReady = 0
  [132] pushint8 1 .............................. <1>
  [134] pusharglistnoret 1 ...................... <1>
  [136] extcall 36 .............................. return 1
  [138] ret
end

on createCatItemImage tNum, tColor
  [  0] pushint16 311 ........................... <311>
  [  3] pushint8 16 ............................. <16>
  [  5] pushint8 8 .............................. <8>
  [  7] pushcons 87 ............................. <"nav_ui_palette">
  [  9] pusharglist 1 ........................... <"nav_ui_palette">
  [ 11] extcall 165 ............................. <member("nav_ui_palette")>
  [ 13] pusharglist 4 ........................... <311, 16, 8, member("nav_ui_palette")>
  [ 15] extcall 132 ............................. <image(311, 16, 8, member("nav_ui_palette"))>
  [ 17] setlocal 0 .............................. tImg = image(311, 16, 8, member("nav_ui_palette"))
  [ 19] pushcons 88 ............................. <"nav_rw_lf">
  [ 21] getparam 0 .............................. <tNum>
  [ 23] joinstr ................................. <"nav_rw_lf" & tNum>
  [ 24] pusharglist 1 ........................... <"nav_rw_lf" & tNum>
  [ 26] extcall 165 ............................. <member("nav_rw_lf" & tNum)>
  [ 28] getobjprop 132 .......................... <member("nav_rw_lf" & tNum).image>
  [ 30] setlocal 1 .............................. tSrc = member("nav_rw_lf" & tNum).image
  [ 32] getlocal 0 .............................. <tImg>
  [ 34] getlocal 1 .............................. <tSrc>
  [ 36] getlocal 1 .............................. <tSrc>
  [ 38] getobjprop 134 .......................... <tSrc.rect>
  [ 40] getlocal 1 .............................. <tSrc>
  [ 42] getobjprop 134 .......................... <tSrc.rect>
  [ 44] pusharglistnoret 4 ...................... <tImg, tSrc, tSrc.rect, tSrc.rect>
  [ 46] objcall 135 ............................. tImg.copyPixels(tSrc, tSrc.rect, tSrc.rect)
  [ 48] getlocal 0 .............................. <tImg>
  [ 50] pushint8 6 .............................. <6>
  [ 52] pushzero ................................ <0>
  [ 53] pushint16 311 ........................... <311>
  [ 56] pushint8 16 ............................. <16>
  [ 58] getparam 1 .............................. <tColor>
  [ 60] pusharglistnoret 6 ...................... <tImg, 6, 0, 311, 16, tColor>
  [ 62] objcall 216 ............................. tImg.fill(6, 0, 311, 16, tColor)
  [ 64] pushcons 88 ............................. <"nav_rw_lf">
  [ 66] getparam 0 .............................. <tNum>
  [ 68] joinstr ................................. <"nav_rw_lf" & tNum>
  [ 69] pusharglist 1 ........................... <"nav_rw_lf" & tNum>
  [ 71] extcall 165 ............................. <member("nav_rw_lf" & tNum)>
  [ 73] getobjprop 132 .......................... <member("nav_rw_lf" & tNum).image>
  [ 75] setlocal 1 .............................. tSrc = member("nav_rw_lf" & tNum).image
  [ 77] getlocal 0 .............................. <tImg>
  [ 79] getlocal 1 .............................. <tSrc>
  [ 81] pushint16 311 ........................... <311>
  [ 84] pushzero ................................ <0>
  [ 85] pusharglist 2 ........................... <311, 0>
  [ 87] extcall 217 ............................. <point(311, 0)>
  [ 89] pushint16 305 ........................... <305>
  [ 92] pushzero ................................ <0>
  [ 93] pusharglist 2 ........................... <305, 0>
  [ 95] extcall 217 ............................. <point(305, 0)>
  [ 97] pushint16 305 ........................... <305>
  [100] pushint8 16 ............................. <16>
  [102] pusharglist 2 ........................... <305, 16>
  [104] extcall 217 ............................. <point(305, 16)>
  [106] pushint16 311 ........................... <311>
  [109] pushint8 16 ............................. <16>
  [111] pusharglist 2 ........................... <311, 16>
  [113] extcall 217 ............................. <point(311, 16)>
  [115] pusharglist 4 ........................... <[point(311, 0), point(305, 0), point(305, 16), point(311, 16)]>
  [117] pushlist ................................ <[point(311, 0), point(305, 0), point(305, 16), point(311, 16)]>
  [118] getlocal 1 .............................. <tSrc>
  [120] getobjprop 134 .......................... <tSrc.rect>
  [122] pusharglistnoret 4 ...................... <tImg, tSrc, [point(311, 0), point(305, 0), point(305, 16), point(311, 16)], tSrc.rect>
  [124] objcall 135 ............................. tImg.copyPixels(tSrc, [point(311, 0), point(305, 0), point(305, 16), point(311, 16)], tSrc.rect)
  [126] pushcons 89 ............................. <"nav_rw_plus">
  [128] pusharglist 1 ........................... <"nav_rw_plus">
  [130] extcall 165 ............................. <member("nav_rw_plus")>
  [132] getobjprop 132 .......................... <member("nav_rw_plus").image>
  [134] setlocal 1 .............................. tSrc = member("nav_rw_plus").image
  [136] getlocal 0 .............................. <tImg>
  [138] getlocal 1 .............................. <tSrc>
  [140] pushint8 6 .............................. <6>
  [142] pushint8 4 .............................. <4>
  [144] pushint8 14 ............................. <14>
  [146] pushint8 12 ............................. <12>
  [148] pusharglist 4 ........................... <6, 4, 14, 12>
  [150] extcall 134 ............................. <rect(6, 4, 14, 12)>
  [152] getlocal 1 .............................. <tSrc>
  [154] getobjprop 134 .......................... <tSrc.rect>
  [156] pushsymb 169 ............................ <#ink>
  [158] pushint8 36 ............................. <36>
  [160] pusharglist 2 ........................... <[#ink: 36]>
  [162] pushproplist ............................ <[#ink: 36]>
  [163] pusharglistnoret 5 ...................... <tImg, tSrc, rect(6, 4, 14, 12), tSrc.rect, [#ink: 36]>
  [165] objcall 135 ............................. tImg.copyPixels(tSrc, rect(6, 4, 14, 12), tSrc.rect, [#ink: 36])
  [167] pushcons 90 ............................. <"nav_rw_arr">
  [169] pusharglist 1 ........................... <"nav_rw_arr">
  [171] extcall 165 ............................. <member("nav_rw_arr")>
  [173] getobjprop 132 .......................... <member("nav_rw_arr").image>
  [175] setlocal 1 .............................. tSrc = member("nav_rw_arr").image
  [177] getlocal 0 .............................. <tImg>
  [179] getlocal 1 .............................. <tSrc>
  [181] pushint16 286 ........................... <286>
  [184] pushint8 4 .............................. <4>
  [186] pushint16 293 ........................... <293>
  [189] pushint8 12 ............................. <12>
  [191] pusharglist 4 ........................... <286, 4, 293, 12>
  [193] extcall 134 ............................. <rect(286, 4, 293, 12)>
  [195] getlocal 1 .............................. <tSrc>
  [197] getobjprop 134 .......................... <tSrc.rect>
  [199] pushsymb 169 ............................ <#ink>
  [201] pushint8 36 ............................. <36>
  [203] pusharglist 2 ........................... <[#ink: 36]>
  [205] pushproplist ............................ <[#ink: 36]>
  [206] pusharglistnoret 5 ...................... <tImg, tSrc, rect(286, 4, 293, 12), tSrc.rect, [#ink: 36]>
  [208] objcall 135 ............................. tImg.copyPixels(tSrc, rect(286, 4, 293, 12), tSrc.rect, [#ink: 36])
  [210] getlocal 0 .............................. <tImg>
  [212] getlocal 1 .............................. <tSrc>
  [214] pushint16 293 ........................... <293>
  [217] pushint8 4 .............................. <4>
  [219] pushint16 300 ........................... <300>
  [222] pushint8 12 ............................. <12>
  [224] pusharglist 4 ........................... <293, 4, 300, 12>
  [226] extcall 134 ............................. <rect(293, 4, 300, 12)>
  [228] getlocal 1 .............................. <tSrc>
  [230] getobjprop 134 .......................... <tSrc.rect>
  [232] pushsymb 169 ............................ <#ink>
  [234] pushint8 36 ............................. <36>
  [236] pusharglist 2 ........................... <[#ink: 36]>
  [238] pushproplist ............................ <[#ink: 36]>
  [239] pusharglistnoret 5 ...................... <tImg, tSrc, rect(293, 4, 300, 12), tSrc.rect, [#ink: 36]>
  [241] objcall 135 ............................. tImg.copyPixels(tSrc, rect(293, 4, 300, 12), tSrc.rect, [#ink: 36])
  [243] getlocal 0 .............................. <tImg>
  [245] getlocal 1 .............................. <tSrc>
  [247] pushint16 300 ........................... <300>
  [250] pushint8 4 .............................. <4>
  [252] pushint16 307 ........................... <307>
  [255] pushint8 12 ............................. <12>
  [257] pusharglist 4 ........................... <300, 4, 307, 12>
  [259] extcall 134 ............................. <rect(300, 4, 307, 12)>
  [261] getlocal 1 .............................. <tSrc>
  [263] getobjprop 134 .......................... <tSrc.rect>
  [265] pushsymb 169 ............................ <#ink>
  [267] pushint8 36 ............................. <36>
  [269] pusharglist 2 ........................... <[#ink: 36]>
  [271] pushproplist ............................ <[#ink: 36]>
  [272] pusharglistnoret 5 ...................... <tImg, tSrc, rect(300, 4, 307, 12), tSrc.rect, [#ink: 36]>
  [274] objcall 135 ............................. tImg.copyPixels(tSrc, rect(300, 4, 307, 12), tSrc.rect, [#ink: 36])
  [276] getlocal 0 .............................. <tImg>
  [278] pusharglistnoret 1 ...................... <tImg>
  [280] extcall 36 .............................. return tImg
  [282] ret
end

on createRoomItemImage tNum, tColor
  [  0] pushint16 311 ........................... <311>
  [  3] pushint8 16 ............................. <16>
  [  5] pushint8 8 .............................. <8>
  [  7] pushcons 87 ............................. <"nav_ui_palette">
  [  9] pusharglist 1 ........................... <"nav_ui_palette">
  [ 11] extcall 165 ............................. <member("nav_ui_palette")>
  [ 13] pusharglist 4 ........................... <311, 16, 8, member("nav_ui_palette")>
  [ 15] extcall 132 ............................. <image(311, 16, 8, member("nav_ui_palette"))>
  [ 17] setlocal 0 .............................. tImg = image(311, 16, 8, member("nav_ui_palette"))
  [ 19] pushcons 88 ............................. <"nav_rw_lf">
  [ 21] pusharglist 1 ........................... <"nav_rw_lf">
  [ 23] extcall 165 ............................. <member("nav_rw_lf")>
  [ 25] getobjprop 132 .......................... <member("nav_rw_lf").image>
  [ 27] setlocal 1 .............................. tSrc = member("nav_rw_lf").image
  [ 29] getlocal 0 .............................. <tImg>
  [ 31] getlocal 1 .............................. <tSrc>
  [ 33] getlocal 1 .............................. <tSrc>
  [ 35] getobjprop 134 .......................... <tSrc.rect>
  [ 37] getlocal 1 .............................. <tSrc>
  [ 39] getobjprop 134 .......................... <tSrc.rect>
  [ 41] pusharglistnoret 4 ...................... <tImg, tSrc, tSrc.rect, tSrc.rect>
  [ 43] objcall 135 ............................. tImg.copyPixels(tSrc, tSrc.rect, tSrc.rect)
  [ 45] getlocal 0 .............................. <tImg>
  [ 47] pushint8 6 .............................. <6>
  [ 49] pushzero ................................ <0>
  [ 50] pushint16 246 ........................... <246>
  [ 53] pushint8 16 ............................. <16>
  [ 55] pushint8 82 ............................. <82>
  [ 57] pusharglist 1 ........................... <82>
  [ 59] extcall 208 ............................. <paletteIndex(82)>
  [ 61] pusharglistnoret 6 ...................... <tImg, 6, 0, 246, 16, paletteIndex(82)>
  [ 63] objcall 216 ............................. tImg.fill(6, 0, 246, 16, paletteIndex(82))
  [ 65] pushcons 88 ............................. <"nav_rw_lf">
  [ 67] pusharglist 1 ........................... <"nav_rw_lf">
  [ 69] extcall 165 ............................. <member("nav_rw_lf")>
  [ 71] getobjprop 132 .......................... <member("nav_rw_lf").image>
  [ 73] setlocal 1 .............................. tSrc = member("nav_rw_lf").image
  [ 75] getlocal 0 .............................. <tImg>
  [ 77] getlocal 1 .............................. <tSrc>
  [ 79] pushint16 251 ........................... <251>
  [ 82] pushzero ................................ <0>
  [ 83] pusharglist 2 ........................... <251, 0>
  [ 85] extcall 217 ............................. <point(251, 0)>
  [ 87] pushint16 245 ........................... <245>
  [ 90] pushzero ................................ <0>
  [ 91] pusharglist 2 ........................... <245, 0>
  [ 93] extcall 217 ............................. <point(245, 0)>
  [ 95] pushint16 245 ........................... <245>
  [ 98] pushint8 16 ............................. <16>
  [100] pusharglist 2 ........................... <245, 16>
  [102] extcall 217 ............................. <point(245, 16)>
  [104] pushint16 251 ........................... <251>
  [107] pushint8 16 ............................. <16>
  [109] pusharglist 2 ........................... <251, 16>
  [111] extcall 217 ............................. <point(251, 16)>
  [113] pusharglist 4 ........................... <[point(251, 0), point(245, 0), point(245, 16), point(251, 16)]>
  [115] pushlist ................................ <[point(251, 0), point(245, 0), point(245, 16), point(251, 16)]>
  [116] getlocal 1 .............................. <tSrc>
  [118] getobjprop 134 .......................... <tSrc.rect>
  [120] pusharglistnoret 4 ...................... <tImg, tSrc, [point(251, 0), point(245, 0), point(245, 16), point(251, 16)], tSrc.rect>
  [122] objcall 135 ............................. tImg.copyPixels(tSrc, [point(251, 0), point(245, 0), point(245, 16), point(251, 16)], tSrc.rect)
  [124] pushcons 88 ............................. <"nav_rw_lf">
  [126] getparam 0 .............................. <tNum>
  [128] joinstr ................................. <"nav_rw_lf" & tNum>
  [129] pusharglist 1 ........................... <"nav_rw_lf" & tNum>
  [131] extcall 165 ............................. <member("nav_rw_lf" & tNum)>
  [133] getobjprop 132 .......................... <member("nav_rw_lf" & tNum).image>
  [135] setlocal 1 .............................. tSrc = member("nav_rw_lf" & tNum).image
  [137] getlocal 0 .............................. <tImg>
  [139] getlocal 1 .............................. <tSrc>
  [141] pushint16 253 ........................... <253>
  [144] pushzero ................................ <0>
  [145] pushint16 259 ........................... <259>
  [148] pushint8 16 ............................. <16>
  [150] pusharglist 4 ........................... <253, 0, 259, 16>
  [152] extcall 134 ............................. <rect(253, 0, 259, 16)>
  [154] getlocal 1 .............................. <tSrc>
  [156] getobjprop 134 .......................... <tSrc.rect>
  [158] pusharglistnoret 4 ...................... <tImg, tSrc, rect(253, 0, 259, 16), tSrc.rect>
  [160] objcall 135 ............................. tImg.copyPixels(tSrc, rect(253, 0, 259, 16), tSrc.rect)
  [162] getlocal 0 .............................. <tImg>
  [164] pushint16 259 ........................... <259>
  [167] pushzero ................................ <0>
  [168] pushint16 305 ........................... <305>
  [171] pushint8 16 ............................. <16>
  [173] getparam 1 .............................. <tColor>
  [175] pusharglistnoret 6 ...................... <tImg, 259, 0, 305, 16, tColor>
  [177] objcall 216 ............................. tImg.fill(259, 0, 305, 16, tColor)
  [179] pushcons 88 ............................. <"nav_rw_lf">
  [181] getparam 0 .............................. <tNum>
  [183] joinstr ................................. <"nav_rw_lf" & tNum>
  [184] pusharglist 1 ........................... <"nav_rw_lf" & tNum>
  [186] extcall 165 ............................. <member("nav_rw_lf" & tNum)>
  [188] getobjprop 132 .......................... <member("nav_rw_lf" & tNum).image>
  [190] setlocal 1 .............................. tSrc = member("nav_rw_lf" & tNum).image
  [192] getlocal 0 .............................. <tImg>
  [194] getlocal 1 .............................. <tSrc>
  [196] pushint16 311 ........................... <311>
  [199] pushzero ................................ <0>
  [200] pusharglist 2 ........................... <311, 0>
  [202] extcall 217 ............................. <point(311, 0)>
  [204] pushint16 305 ........................... <305>
  [207] pushzero ................................ <0>
  [208] pusharglist 2 ........................... <305, 0>
  [210] extcall 217 ............................. <point(305, 0)>
  [212] pushint16 305 ........................... <305>
  [215] pushint8 16 ............................. <16>
  [217] pusharglist 2 ........................... <305, 16>
  [219] extcall 217 ............................. <point(305, 16)>
  [221] pushint16 311 ........................... <311>
  [224] pushint8 16 ............................. <16>
  [226] pusharglist 2 ........................... <311, 16>
  [228] extcall 217 ............................. <point(311, 16)>
  [230] pusharglist 4 ........................... <[point(311, 0), point(305, 0), point(305, 16), point(311, 16)]>
  [232] pushlist ................................ <[point(311, 0), point(305, 0), point(305, 16), point(311, 16)]>
  [233] getlocal 1 .............................. <tSrc>
  [235] getobjprop 134 .......................... <tSrc.rect>
  [237] pusharglistnoret 4 ...................... <tImg, tSrc, [point(311, 0), point(305, 0), point(305, 16), point(311, 16)], tSrc.rect>
  [239] objcall 135 ............................. tImg.copyPixels(tSrc, [point(311, 0), point(305, 0), point(305, 16), point(311, 16)], tSrc.rect)
  [241] pushcons 90 ............................. <"nav_rw_arr">
  [243] pusharglist 1 ........................... <"nav_rw_arr">
  [245] extcall 165 ............................. <member("nav_rw_arr")>
  [247] getobjprop 132 .......................... <member("nav_rw_arr").image>
  [249] setlocal 1 .............................. tSrc = member("nav_rw_arr").image
  [251] getlocal 0 .............................. <tImg>
  [253] getlocal 1 .............................. <tSrc>
  [255] pushint16 300 ........................... <300>
  [258] pushint8 4 .............................. <4>
  [260] pushint16 307 ........................... <307>
  [263] pushint8 12 ............................. <12>
  [265] pusharglist 4 ........................... <300, 4, 307, 12>
  [267] extcall 134 ............................. <rect(300, 4, 307, 12)>
  [269] getlocal 1 .............................. <tSrc>
  [271] getobjprop 134 .......................... <tSrc.rect>
  [273] pushsymb 169 ............................ <#ink>
  [275] pushint8 36 ............................. <36>
  [277] pusharglist 2 ........................... <[#ink: 36]>
  [279] pushproplist ............................ <[#ink: 36]>
  [280] pusharglistnoret 5 ...................... <tImg, tSrc, rect(300, 4, 307, 12), tSrc.rect, [#ink: 36]>
  [282] objcall 135 ............................. tImg.copyPixels(tSrc, rect(300, 4, 307, 12), tSrc.rect, [#ink: 36])
  [284] getlocal 0 .............................. <tImg>
  [286] pusharglistnoret 1 ...................... <tImg>
  [288] extcall 36 .............................. return tImg
  [290] ret
end

on renderRoomList me, tList
  [  0] getparam 1 .............................. <tList>
  [  2] pusharglist 1 ........................... <tList>
  [  4] extcall 101 ............................. <listp(tList)>
  [  6] not ..................................... <not listp(tList)>
  [  7] jmpifz [ 15] ............................ if not listp(tList) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 36 .............................. return 0
  [ 15] getparam 1 .............................. <tList>
  [ 17] getobjprop 125 .......................... <tList.count>
  [ 19] setlocal 0 .............................. tCount = tList.count
  [ 21] getlocal 0 .............................. <tCount>
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 30 ........................... <me.pListItemHeight>
  [ 27] mul ..................................... <tCount * me.pListItemHeight>
  [ 28] setlocal 1 .............................. tListHeight = tCount * me.pListItemHeight
  [ 30] getparam 0 .............................. <me>
  [ 32] getobjprop 29 ........................... <me.pListAreaWidth>
  [ 34] getlocal 1 .............................. <tListHeight>
  [ 36] getparam 0 .............................. <me>
  [ 38] getobjprop 32 ........................... <me.pBufferDepth>
  [ 40] pusharglist 3 ........................... <me.pListAreaWidth, tListHeight, me.pBufferDepth>
  [ 42] extcall 132 ............................. <image(me.pListAreaWidth, tListHeight, me.pBufferDepth)>
  [ 44] setlocal 2 .............................. tTargetImg = image(me.pListAreaWidth, tListHeight, me.pBufferDepth)
  [ 46] pushcons 91 ............................. <"lock1">
  [ 48] pusharglist 1 ........................... <"lock1">
  [ 50] extcall 166 ............................. <getmemnum("lock1")>
  [ 52] pusharglist 1 ........................... <getmemnum("lock1")>
  [ 54] extcall 165 ............................. <member(getmemnum("lock1"))>
  [ 56] getobjprop 132 .......................... <member(getmemnum("lock1")).image>
  [ 58] setlocal 3 .............................. tLockMemImgA = member(getmemnum("lock1")).image
  [ 60] pushcons 92 ............................. <"lock2">
  [ 62] pusharglist 1 ........................... <"lock2">
  [ 64] extcall 166 ............................. <getmemnum("lock2")>
  [ 66] pusharglist 1 ........................... <getmemnum("lock2")>
  [ 68] extcall 165 ............................. <member(getmemnum("lock2"))>
  [ 70] getobjprop 132 .......................... <member(getmemnum("lock2")).image>
  [ 72] setlocal 4 .............................. tLockMemImgB = member(getmemnum("lock2")).image
  [ 74] pushcons 3 .............................. <EMPTY>
  [ 76] setlocal 5 .............................. tNameTxt = EMPTY
  [ 78] pushint8 1 .............................. <1>
  [ 80] setlocal 6
  [ 82] getlocal 6
  [ 84] getlocal 0 .............................. <tCount>
  [ 86] lteq
  [ 87] jmpifz [338] ............................ repeat with i = 1 to tCount
  [ 90] getparam 1 .............................. <tList>
  [ 92] getlocal 6 .............................. <i>
  [ 94] pusharglist 2 ........................... <tList, i>
  [ 96] objcall 51 .............................. <tList[i]>
  [ 98] setlocal 7 .............................. tItem = tList[i]
  [100] getlocal 7 .............................. <tItem>
  [102] pushsymb 76 ............................. <#name>
  [104] pusharglist 2 ........................... <tItem, #name>
  [106] objcall 51 .............................. <tItem[#name]>
  [108] setlocal 8 .............................. tItemName = tItem[#name]
  [110] getlocal 5 .............................. <tNameTxt>
  [112] getlocal 8 .............................. <tItemName>
  [114] joinstr ................................. <tNameTxt & tItemName>
  [115] pushcons 60 ............................. <RETURN>
  [117] joinstr ................................. <tNameTxt & tItemName & RETURN>
  [118] setlocal 5 .............................. tNameTxt = tNameTxt & tItemName & RETURN
  [120] getlocal 7 .............................. <tItem>
  [122] pushsymb 154 ............................ <#maxUsers>
  [124] pusharglist 2 ........................... <tItem, #maxUsers>
  [126] objcall 51 .............................. <tItem[#maxUsers]>
  [128] pushint8 1 .............................. <1>
  [130] lt ...................................... <tItem[#maxUsers] < 1>
  [131] jmpifz [144] ............................ if tItem[#maxUsers] < 1 then
  [134] getlocal 7 .............................. <tItem>
  [136] pushsymb 154 ............................ <#maxUsers>
  [138] pushint8 25 ............................. <25>
  [140] pusharglistnoret 3 ...................... <tItem, #maxUsers, 25>
  [142] objcall 55 .............................. tItem[#maxUsers] = 25
  [144] getlocal 7 .............................. <tItem>
  [146] pushsymb 153 ............................ <#usercount>
  [148] pusharglist 2 ........................... <tItem, #usercount>
  [150] objcall 51 .............................. <tItem[#usercount]>
  [152] pusharglist 1 ........................... <tItem[#usercount]>
  [154] extcall 222 ............................. <float(tItem[#usercount])>
  [156] getlocal 7 .............................. <tItem>
  [158] pushsymb 154 ............................ <#maxUsers>
  [160] pusharglist 2 ........................... <tItem, #maxUsers>
  [162] objcall 51 .............................. <tItem[#maxUsers]>
  [164] div ..................................... <float(tItem[#usercount]) / tItem[#maxUsers]>
  [165] setlocal 9 .............................. tUserStatus = float(tItem[#usercount]) / tItem[#maxUsers]
  [167] getlocal 7 .............................. <tItem>
  [169] pushsymb 145 ............................ <#nodeType>
  [171] pusharglist 2 ........................... <tItem, #nodeType>
  [173] objcall 51 .............................. <tItem[#nodeType]>
  [175] pushzero ................................ <0>
  [176] eq ...................................... <tItem[#nodeType] = 0>
  [177] jmpifz [197] ............................ if tItem[#nodeType] = 0 then / else
  [180] getparam 0 .............................. <me>
  [182] pushsymb 223 ............................ <#cat>
  [184] getlocal 6 .............................. <i>
  [186] getlocal 2 .............................. <tTargetImg>
  [188] getlocal 9 .............................. <tUserStatus>
  [190] pusharglistnoret 5 ...................... <me, #cat, i, tTargetImg, tUserStatus>
  [192] objcall 19 .............................. me.renderRoomListItem(#cat, i, tTargetImg, tUserStatus)
  [194] jmp [219]
  [197] getparam 0 .............................. <me>
  [199] pushsymb 224 ............................ <#room>
  [201] getlocal 6 .............................. <i>
  [203] getlocal 2 .............................. <tTargetImg>
  [205] getlocal 9 .............................. <tUserStatus>
  [207] getlocal 7 .............................. <tItem>
  [209] pushsymb 145 ............................ <#nodeType>
  [211] pusharglist 2 ........................... <tItem, #nodeType>
  [213] objcall 51 .............................. <tItem[#nodeType]>
  [215] pusharglistnoret 6 ...................... <me, #room, i, tTargetImg, tUserStatus, tItem[#nodeType]>
  [217] objcall 19 .............................. me.renderRoomListItem(#room, i, tTargetImg, tUserStatus, tItem[#nodeType])
  [219] getlocal 7 .............................. <tItem>
  [221] pushsymb 147 ............................ <#door>
  [223] pusharglist 2 ........................... <tItem, #door>
  [225] objcall 51 .............................. <tItem[#door]>
  [227] peek 0 .................................. case tItem[#door] of
  [229] pushcons 65 ............................. <"closed">
  [231] eq
  [232] jmpifz [242] ............................ (case) "closed":
  [235] getlocal 3 .............................. <tLockMemImgA>
  [237] setlocal 10 ............................. tLockImg = tLockMemImgA
  [239] jmp [260]
  [242] peek 0
  [244] pushcons 67 ............................. <"password">
  [246] eq
  [247] jmpifz [257] ............................ (case) "password":
  [250] getlocal 4 .............................. <tLockMemImgB>
  [252] setlocal 10 ............................. tLockImg = tLockMemImgB
  [254] jmp [260] ............................... (case) otherwise:
  [257] pushzero ................................ <0>
  [258] setlocal 10 ............................. tLockImg = 0
  [260] pop 1 ................................... end case
  [262] getlocal 10 ............................. <tLockImg>
  [264] pushzero ................................ <0>
  [265] nteq .................................... <tLockImg <> 0>
  [266] jmpifz [329] ............................ if tLockImg <> 0 then
  [269] getlocal 10 ............................. <tLockImg>
  [271] getobjprop 134 .......................... <tLockImg.rect>
  [273] setlocal 11 ............................. tSrcRect = tLockImg.rect
  [275] getlocal 6 .............................. <i>
  [277] pushint8 1 .............................. <1>
  [279] sub ..................................... <i - 1>
  [280] getparam 0 .............................. <me>
  [282] getobjprop 30 ........................... <me.pListItemHeight>
  [284] mul ..................................... <(i - 1) * me.pListItemHeight>
  [285] setlocal 12 ............................. tLocV = (i - 1) * me.pListItemHeight
  [287] getlocal 11 ............................. <tSrcRect>
  [289] pushint8 7 .............................. <7>
  [291] getlocal 12 ............................. <tLocV>
  [293] pushint8 5 .............................. <5>
  [295] add ..................................... <tLocV + 5>
  [296] pushint8 7 .............................. <7>
  [298] getlocal 12 ............................. <tLocV>
  [300] pushint8 5 .............................. <5>
  [302] add ..................................... <tLocV + 5>
  [303] pusharglist 4 ........................... <7, tLocV + 5, 7, tLocV + 5>
  [305] extcall 134 ............................. <rect(7, tLocV + 5, 7, tLocV + 5)>
  [307] add ..................................... <tSrcRect + rect(7, tLocV + 5, 7, tLocV + 5)>
  [308] setlocal 13 ............................. tdestrect = tSrcRect + rect(7, tLocV + 5, 7, tLocV + 5)
  [310] getlocal 2 .............................. <tTargetImg>
  [312] getlocal 10 ............................. <tLockImg>
  [314] getlocal 13 ............................. <tdestrect>
  [316] getlocal 11 ............................. <tSrcRect>
  [318] pushsymb 169 ............................ <#ink>
  [320] pushint8 36 ............................. <36>
  [322] pusharglist 2 ........................... <[#ink: 36]>
  [324] pushproplist ............................ <[#ink: 36]>
  [325] pusharglistnoret 5 ...................... <tTargetImg, tLockImg, tdestrect, tSrcRect, [#ink: 36]>
  [327] objcall 135 ............................. tTargetImg.copyPixels(tLockImg, tdestrect, tSrcRect, [#ink: 36])
  [329] pushint8 1
  [331] getlocal 6
  [333] add
  [334] setlocal 6
  [336] endrepeat [ 82]
  [338] pushint16 -30003 ........................ <-30003>
  [341] pushzero ................................ <0>
  [342] pushzero ................................ <0>
  [343] pushzero ................................ <0>
  [344] pushzero ................................ <0>
  [345] pushzero ................................ <0>
  [346] pushzero ................................ <0>
  [347] pushzero ................................ <0>
  [348] pushint8 5 .............................. <5>
  [350] deletechunk 5 ........................... delete char -30003 of tNameTxt
  [352] pushcons 29 ............................. <"nav_roomlist_marginv">
  [354] pusharglist 1 ........................... <"nav_roomlist_marginv">
  [356] extcall 130 ............................. <variableExists("nav_roomlist_marginv")>
  [358] jmpifz [372] ............................ if variableExists("nav_roomlist_marginv") then / else
  [361] pushcons 29 ............................. <"nav_roomlist_marginv">
  [363] pusharglist 1 ........................... <"nav_roomlist_marginv">
  [365] extcall 131 ............................. <getVariable("nav_roomlist_marginv")>
  [367] setlocal 14 ............................. tNameVertMargin = getVariable("nav_roomlist_marginv")
  [369] jmp [375]
  [372] pushzero ................................ <0>
  [373] setlocal 14 ............................. tNameVertMargin = 0
  [375] getparam 0 .............................. <me>
  [377] getchainedprop 196 ...................... <me.pWriterPrivPlain>
  [379] getlocal 5 .............................. <tNameTxt>
  [381] pusharglist 2 ........................... <me.pWriterPrivPlain, tNameTxt>
  [383] objcall 104 ............................. <me.pWriterPrivPlain.render(tNameTxt)>
  [385] setlocal 15 ............................. tNameImage = me.pWriterPrivPlain.render(tNameTxt)
  [387] getlocal 2 .............................. <tTargetImg>
  [389] getlocal 15 ............................. <tNameImage>
  [391] getlocal 15 ............................. <tNameImage>
  [393] getobjprop 134 .......................... <tNameImage.rect>
  [395] pushint8 17 ............................. <17>
  [397] pushint8 5 .............................. <5>
  [399] inv ..................................... <-5>
  [400] getlocal 14 ............................. <tNameVertMargin>
  [402] add ..................................... <-5 + tNameVertMargin>
  [403] pushint8 17 ............................. <17>
  [405] pushint8 5 .............................. <5>
  [407] inv ..................................... <-5>
  [408] getlocal 14 ............................. <tNameVertMargin>
  [410] add ..................................... <-5 + tNameVertMargin>
  [411] pusharglist 4 ........................... <17, -5 + tNameVertMargin, 17, -5 + tNameVertMargin>
  [413] extcall 134 ............................. <rect(17, -5 + tNameVertMargin, 17, -5 + tNameVertMargin)>
  [415] add ..................................... <tNameImage.rect + rect(17, -5 + tNameVertMargin, 17, -5 + tNameVertMargin)>
  [416] getlocal 15 ............................. <tNameImage>
  [418] getobjprop 134 .......................... <tNameImage.rect>
  [420] pusharglistnoret 4 ...................... <tTargetImg, tNameImage, tNameImage.rect + rect(17, -5 + tNameVertMargin, 17, -5 + tNameVertMargin), tNameImage.rect>
  [422] objcall 135 ............................. tTargetImg.copyPixels(tNameImage, tNameImage.rect + rect(17, -5 + tNameVertMargin, 17, -5 + tNameVertMargin), tNameImage.rect)
  [424] getlocal 2 .............................. <tTargetImg>
  [426] pusharglistnoret 1 ...................... <tTargetImg>
  [428] extcall 36 .............................. return tTargetImg
  [430] ret
end

on renderRoomListItem me, ttype, tNum, tTargetImg, tUserStatus, tNodeType
  [  0] getparam 5 .............................. <tNodeType>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tNodeType = 1>
  [  5] jmpifz [ 74] ............................ if tNodeType = 1 then / else
  [  8] getparam 4 .............................. <tUserStatus>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <tUserStatus = 0>
  [ 12] jmpifz [ 22] ............................ if tUserStatus = 0 then / else
  [ 15] pushint8 1 .............................. <1>
  [ 17] setlocal 0 .............................. tBackImgId = 1
  [ 19] jmp [ 71]
  [ 22] getparam 4 .............................. <tUserStatus>
  [ 24] pushcons 93 ............................. <0.34000000000000002>
  [ 26] lt ...................................... <tUserStatus < 0.34000000000000002>
  [ 27] jmpifz [ 37] ............................ if tUserStatus < 0.34000000000000002 then / else
  [ 30] pushint8 2 .............................. <2>
  [ 32] setlocal 0 .............................. tBackImgId = 2
  [ 34] jmp [ 71]
  [ 37] getparam 4 .............................. <tUserStatus>
  [ 39] pushcons 94 ............................. <0.76000000000000001>
  [ 41] lt ...................................... <tUserStatus < 0.76000000000000001>
  [ 42] jmpifz [ 52] ............................ if tUserStatus < 0.76000000000000001 then / else
  [ 45] pushint8 3 .............................. <3>
  [ 47] setlocal 0 .............................. tBackImgId = 3
  [ 49] jmp [ 71]
  [ 52] getparam 4 .............................. <tUserStatus>
  [ 54] pushcons 95 ............................. <0.98999999999999999>
  [ 56] lt ...................................... <tUserStatus < 0.98999999999999999>
  [ 57] jmpifz [ 67] ............................ if tUserStatus < 0.98999999999999999 then / else
  [ 60] pushint8 4 .............................. <4>
  [ 62] setlocal 0 .............................. tBackImgId = 4
  [ 64] jmp [ 71]
  [ 67] pushint8 5 .............................. <5>
  [ 69] setlocal 0 .............................. tBackImgId = 5
  [ 71] jmp [143]
  [ 74] getparam 4 .............................. <tUserStatus>
  [ 76] pushzero ................................ <0>
  [ 77] eq ...................................... <tUserStatus = 0>
  [ 78] jmpifz [ 88] ............................ if tUserStatus = 0 then / else
  [ 81] pushint8 1 .............................. <1>
  [ 83] setlocal 0 .............................. tBackImgId = 1
  [ 85] jmp [143]
  [ 88] getparam 4 .............................. <tUserStatus>
  [ 90] pushcons 93 ............................. <0.34000000000000002>
  [ 92] lt ...................................... <tUserStatus < 0.34000000000000002>
  [ 93] jmpifz [103] ............................ if tUserStatus < 0.34000000000000002 then / else
  [ 96] pushint8 2 .............................. <2>
  [ 98] setlocal 0 .............................. tBackImgId = 2
  [100] jmp [143]
  [103] getparam 4 .............................. <tUserStatus>
  [105] pushcons 94 ............................. <0.76000000000000001>
  [107] lt ...................................... <tUserStatus < 0.76000000000000001>
  [108] jmpifz [118] ............................ if tUserStatus < 0.76000000000000001 then / else
  [111] pushint8 3 .............................. <3>
  [113] setlocal 0 .............................. tBackImgId = 3
  [115] jmp [143]
  [118] getparam 4 .............................. <tUserStatus>
  [120] pushcons 95 ............................. <0.98999999999999999>
  [122] lt ...................................... <tUserStatus < 0.98999999999999999>
  [123] getparam 1 .............................. <ttype>
  [125] pushsymb 223 ............................ <#cat>
  [127] eq ...................................... <ttype = #cat>
  [128] or ...................................... <(tUserStatus < 0.98999999999999999) or (ttype = #cat)>
  [129] jmpifz [139] ............................ if (tUserStatus < 0.98999999999999999) or (ttype = #cat) then / else
  [132] pushint8 4 .............................. <4>
  [134] setlocal 0 .............................. tBackImgId = 4
  [136] jmp [143]
  [139] pushint8 5 .............................. <5>
  [141] setlocal 0 .............................. tBackImgId = 5
  [143] getparam 1 .............................. <ttype>
  [145] pushsymb 224 ............................ <#room>
  [147] eq ...................................... <ttype = #room>
  [148] jmpifz [166] ............................ if ttype = #room then / else
  [151] getparam 0 .............................. <me>
  [153] pushsymb 207 ............................ <#pRoomBackImages>
  [155] getlocal 0 .............................. <tBackImgId>
  [157] pusharglist 3 ........................... <me, #pRoomBackImages, tBackImgId>
  [159] objcall 151 ............................. <me.pRoomBackImages[tBackImgId]>
  [161] setlocal 1 .............................. tBackImg = me.pRoomBackImages[tBackImgId]
  [163] jmp [178]
  [166] getparam 0 .............................. <me>
  [168] pushsymb 210 ............................ <#pCatBackImages>
  [170] getlocal 0 .............................. <tBackImgId>
  [172] pusharglist 3 ........................... <me, #pCatBackImages, tBackImgId>
  [174] objcall 151 ............................. <me.pCatBackImages[tBackImgId]>
  [176] setlocal 1 .............................. tBackImg = me.pCatBackImages[tBackImgId]
  [178] getparam 2 .............................. <tNum>
  [180] pushint8 1 .............................. <1>
  [182] sub ..................................... <tNum - 1>
  [183] getparam 0 .............................. <me>
  [185] getobjprop 30 ........................... <me.pListItemHeight>
  [187] mul ..................................... <(tNum - 1) * me.pListItemHeight>
  [188] setlocal 2 .............................. tLocV = (tNum - 1) * me.pListItemHeight
  [190] getlocal 1 .............................. <tBackImg>
  [192] getobjprop 134 .......................... <tBackImg.rect>
  [194] pushzero ................................ <0>
  [195] getlocal 2 .............................. <tLocV>
  [197] pushzero ................................ <0>
  [198] getlocal 2 .............................. <tLocV>
  [200] pusharglist 4 ........................... <0, tLocV, 0, tLocV>
  [202] extcall 134 ............................. <rect(0, tLocV, 0, tLocV)>
  [204] add ..................................... <tBackImg.rect + rect(0, tLocV, 0, tLocV)>
  [205] setlocal 3 .............................. tdestrect = tBackImg.rect + rect(0, tLocV, 0, tLocV)
  [207] getparam 3 .............................. <tTargetImg>
  [209] getlocal 1 .............................. <tBackImg>
  [211] getlocal 3 .............................. <tdestrect>
  [213] getlocal 1 .............................. <tBackImg>
  [215] getobjprop 134 .......................... <tBackImg.rect>
  [217] pusharglistnoret 4 ...................... <tTargetImg, tBackImg, tdestrect, tBackImg.rect>
  [219] objcall 135 ............................. tTargetImg.copyPixels(tBackImg, tdestrect, tBackImg.rect)
  [221] getparam 1 .............................. <ttype>
  [223] pushsymb 224 ............................ <#room>
  [225] eq ...................................... <ttype = #room>
  [226] jmpifz [360] ............................ if ttype = #room then / else
  [229] getlocal 0 .............................. <tBackImgId>
  [231] pushint8 5 .............................. <5>
  [233] eq ...................................... <tBackImgId = 5>
  [234] jmpifz [246] ............................ if tBackImgId = 5 then / else
  [237] getparam 0 .............................. <me>
  [239] getobjprop 202 .......................... <me.pFullLinkTextImg>
  [241] setlocal 4 .............................. tLinkImage = me.pFullLinkTextImg
  [243] jmp [252]
  [246] getparam 0 .............................. <me>
  [248] getobjprop 200 .......................... <me.pGoLinkTextImg>
  [250] setlocal 4 .............................. tLinkImage = me.pGoLinkTextImg
  [252] pushzero ................................ <0>
  [253] setlocal 5 .............................. tAddOffset = 0
  [255] pushcons 96 ............................. <"nav_golink_voffset">
  [257] pusharglist 1 ........................... <"nav_golink_voffset">
  [259] extcall 130 ............................. <variableExists("nav_golink_voffset")>
  [261] jmpifz [272] ............................ if variableExists("nav_golink_voffset") then
  [264] pushcons 96 ............................. <"nav_golink_voffset">
  [266] pusharglist 1 ........................... <"nav_golink_voffset">
  [268] extcall 131 ............................. <getVariable("nav_golink_voffset")>
  [270] setlocal 5 .............................. tAddOffset = getVariable("nav_golink_voffset")
  [272] getlocal 1 .............................. <tBackImg>
  [274] getobjprop 133 .......................... <tBackImg.width>
  [276] getlocal 4 .............................. <tLinkImage>
  [278] getobjprop 133 .......................... <tLinkImage.width>
  [280] sub ..................................... <tBackImg.width - tLinkImage.width>
  [281] pushint8 12 ............................. <12>
  [283] sub ..................................... <tBackImg.width - tLinkImage.width - 12>
  [284] setlocal 6 .............................. tX1 = tBackImg.width - tLinkImage.width - 12
  [286] getlocal 6 .............................. <tX1>
  [288] getlocal 4 .............................. <tLinkImage>
  [290] getobjprop 133 .......................... <tLinkImage.width>
  [292] add ..................................... <tX1 + tLinkImage.width>
  [293] setlocal 7 .............................. tX2 = tX1 + tLinkImage.width
  [295] pushint8 3 .............................. <3>
  [297] getlocal 2 .............................. <tLocV>
  [299] add ..................................... <3 + tLocV>
  [300] getlocal 5 .............................. <tAddOffset>
  [302] add ..................................... <3 + tLocV + tAddOffset>
  [303] setlocal 8 .............................. tY1 = 3 + tLocV + tAddOffset
  [305] getlocal 8 .............................. <tY1>
  [307] getlocal 4 .............................. <tLinkImage>
  [309] getobjprop 106 .......................... <tLinkImage.height>
  [311] add ..................................... <tY1 + tLinkImage.height>
  [312] setlocal 9 .............................. tY2 = tY1 + tLinkImage.height
  [314] getlocal 6 .............................. <tX1>
  [316] getlocal 8 .............................. <tY1>
  [318] getlocal 7 .............................. <tX2>
  [320] getlocal 9 .............................. <tY2>
  [322] pusharglist 4 ........................... <tX1, tY1, tX2, tY2>
  [324] extcall 134 ............................. <rect(tX1, tY1, tX2, tY2)>
  [326] setlocal 3 .............................. tdestrect = rect(tX1, tY1, tX2, tY2)
  [328] getparam 3 .............................. <tTargetImg>
  [330] getlocal 4 .............................. <tLinkImage>
  [332] getlocal 3 .............................. <tdestrect>
  [334] getlocal 4 .............................. <tLinkImage>
  [336] getobjprop 134 .......................... <tLinkImage.rect>
  [338] pushsymb 240 ............................ <#bgColor>
  [340] pushcons 97 ............................. <"#DDDDDD">
  [342] pusharglist 1 ........................... <"#DDDDDD">
  [344] extcall 199 ............................. <rgb("#DDDDDD")>
  [346] pushsymb 169 ............................ <#ink>
  [348] pushint8 36 ............................. <36>
  [350] pusharglist 4 ........................... <[#bgColor: rgb("#DDDDDD"), #ink: 36]>
  [352] pushproplist ............................ <[#bgColor: rgb("#DDDDDD"), #ink: 36]>
  [353] pusharglistnoret 5 ...................... <tTargetImg, tLinkImage, tdestrect, tLinkImage.rect, [#bgColor: rgb("#DDDDDD"), #ink: 36]>
  [355] objcall 135 ............................. tTargetImg.copyPixels(tLinkImage, tdestrect, tLinkImage.rect, [#bgColor: rgb("#DDDDDD"), #ink: 36])
  [357] jmp [467]
  [360] getlocal 1 .............................. <tBackImg>
  [362] getobjprop 133 .......................... <tBackImg.width>
  [364] getparam 0 .............................. <me>
  [366] getchainedprop 203 ...................... <me.pOpenLinkTextImg>
  [368] getobjprop 133 .......................... <me.pOpenLinkTextImg.width>
  [370] sub ..................................... <tBackImg.width - me.pOpenLinkTextImg.width>
  [371] pushint8 27 ............................. <27>
  [373] sub ..................................... <tBackImg.width - me.pOpenLinkTextImg.width - 27>
  [374] setlocal 6 .............................. tX1 = tBackImg.width - me.pOpenLinkTextImg.width - 27
  [376] getlocal 6 .............................. <tX1>
  [378] getparam 0 .............................. <me>
  [380] getchainedprop 203 ...................... <me.pOpenLinkTextImg>
  [382] getobjprop 133 .......................... <me.pOpenLinkTextImg.width>
  [384] add ..................................... <tX1 + me.pOpenLinkTextImg.width>
  [385] setlocal 7 .............................. tX2 = tX1 + me.pOpenLinkTextImg.width
  [387] getlocal 2 .............................. <tLocV>
  [389] getparam 0 .............................. <me>
  [391] getobjprop 30 ........................... <me.pListItemHeight>
  [393] getparam 0 .............................. <me>
  [395] getchainedprop 200 ...................... <me.pGoLinkTextImg>
  [397] getobjprop 106 .......................... <me.pGoLinkTextImg.height>
  [399] sub ..................................... <me.pListItemHeight - me.pGoLinkTextImg.height>
  [400] pushint8 2 .............................. <2>
  [402] div ..................................... <(me.pListItemHeight - me.pGoLinkTextImg.height) / 2>
  [403] add ..................................... <tLocV + ((me.pListItemHeight - me.pGoLinkTextImg.height) / 2)>
  [404] pushint8 1 .............................. <1>
  [406] sub ..................................... <tLocV + ((me.pListItemHeight - me.pGoLinkTextImg.height) / 2) - 1>
  [407] setlocal 8 .............................. tY1 = tLocV + ((me.pListItemHeight - me.pGoLinkTextImg.height) / 2) - 1
  [409] getlocal 8 .............................. <tY1>
  [411] getparam 0 .............................. <me>
  [413] getchainedprop 203 ...................... <me.pOpenLinkTextImg>
  [415] getobjprop 106 .......................... <me.pOpenLinkTextImg.height>
  [417] add ..................................... <tY1 + me.pOpenLinkTextImg.height>
  [418] setlocal 9 .............................. tY2 = tY1 + me.pOpenLinkTextImg.height
  [420] getlocal 6 .............................. <tX1>
  [422] getlocal 8 .............................. <tY1>
  [424] getlocal 7 .............................. <tX2>
  [426] getlocal 9 .............................. <tY2>
  [428] pusharglist 4 ........................... <tX1, tY1, tX2, tY2>
  [430] extcall 134 ............................. <rect(tX1, tY1, tX2, tY2)>
  [432] setlocal 3 .............................. tdestrect = rect(tX1, tY1, tX2, tY2)
  [434] getparam 3 .............................. <tTargetImg>
  [436] getparam 0 .............................. <me>
  [438] getobjprop 203 .......................... <me.pOpenLinkTextImg>
  [440] getlocal 3 .............................. <tdestrect>
  [442] getparam 0 .............................. <me>
  [444] getchainedprop 203 ...................... <me.pOpenLinkTextImg>
  [446] getobjprop 134 .......................... <me.pOpenLinkTextImg.rect>
  [448] pushsymb 240 ............................ <#bgColor>
  [450] pushcons 97 ............................. <"#DDDDDD">
  [452] pusharglist 1 ........................... <"#DDDDDD">
  [454] extcall 199 ............................. <rgb("#DDDDDD")>
  [456] pushsymb 169 ............................ <#ink>
  [458] pushint8 36 ............................. <36>
  [460] pusharglist 4 ........................... <[#bgColor: rgb("#DDDDDD"), #ink: 36]>
  [462] pushproplist ............................ <[#bgColor: rgb("#DDDDDD"), #ink: 36]>
  [463] pusharglistnoret 5 ...................... <tTargetImg, me.pOpenLinkTextImg, tdestrect, me.pOpenLinkTextImg.rect, [#bgColor: rgb("#DDDDDD"), #ink: 36]>
  [465] objcall 135 ............................. tTargetImg.copyPixels(me.pOpenLinkTextImg, tdestrect, me.pOpenLinkTextImg.rect, [#bgColor: rgb("#DDDDDD"), #ink: 36])
  [467] pushint8 1 .............................. <1>
  [469] pusharglistnoret 1 ...................... <1>
  [471] extcall 36 .............................. return 1
  [473] ret
end

on setHideFullRoomsLink me
  [  0] getprop 25 .............................. <pWindowTitle>
  [  2] pusharglist 1 ........................... <pWindowTitle>
  [  4] extcall 38 .............................. <windowExists(pWindowTitle)>
  [  6] not ..................................... <not windowExists(pWindowTitle)>
  [  7] jmpifz [ 15] ............................ if not windowExists(pWindowTitle) then
  [ 10] pushzero ................................ <0>
  [ 11] pusharglistnoret 1 ...................... <0>
  [ 13] extcall 36 .............................. return 0
  [ 15] getprop 25 .............................. <pWindowTitle>
  [ 17] pusharglist 1 ........................... <pWindowTitle>
  [ 19] extcall 58 .............................. <getWindow(pWindowTitle)>
  [ 21] setlocal 0 .............................. tWndObj = getWindow(pWindowTitle)
  [ 23] getlocal 0 .............................. <tWndObj>
  [ 25] pushcons 85 ............................. <"nav_hidefull">
  [ 27] pusharglist 2 ........................... <tWndObj, "nav_hidefull">
  [ 29] objcall 65 .............................. <tWndObj.getElement("nav_hidefull")>
  [ 31] setlocal 1 .............................. tElem = tWndObj.getElement("nav_hidefull")
  [ 33] getlocal 1 .............................. <tElem>
  [ 35] pushzero ................................ <0>
  [ 36] eq ...................................... <tElem = 0>
  [ 37] jmpifz [ 45] ............................ if tElem = 0 then
  [ 40] pushzero ................................ <0>
  [ 41] pusharglistnoret 1 ...................... <0>
  [ 43] extcall 36 .............................. return 0
  [ 45] getparam 0 .............................. <me>
  [ 47] pusharglist 1 ........................... <me>
  [ 49] objcall 74 .............................. <me.getComponent()>
  [ 51] pusharglist 1 ........................... <me.getComponent()>
  [ 53] objcall 251 ............................. <me.getComponent().getCurrentNodeMask()>
  [ 55] setlocal 2 .............................. tstate = me.getComponent().getCurrentNodeMask()
  [ 57] getlocal 2 .............................. <tstate>
  [ 59] jmpifz [ 75] ............................ if tstate then / else
  [ 62] getprop 205 ............................. <pHideFullLinkImages>
  [ 64] pushsymb 59 ............................. <#show>
  [ 66] pusharglist 2 ........................... <pHideFullLinkImages, #show>
  [ 68] objcall 51 .............................. <pHideFullLinkImages[#show]>
  [ 70] setlocal 3 .............................. tImage = pHideFullLinkImages[#show]
  [ 72] jmp [ 85]
  [ 75] getprop 205 ............................. <pHideFullLinkImages>
  [ 77] pushsymb 61 ............................. <#hide>
  [ 79] pusharglist 2 ........................... <pHideFullLinkImages, #hide>
  [ 81] objcall 51 .............................. <pHideFullLinkImages[#hide]>
  [ 83] setlocal 3 .............................. tImage = pHideFullLinkImages[#hide]
  [ 85] getlocal 3 .............................. <tImage>
  [ 87] getobjprop 133 .......................... <tImage.width>
  [ 89] getlocal 1 .............................. <tElem>
  [ 91] pushsymb 133 ............................ <#width>
  [ 93] pusharglist 2 ........................... <tElem, #width>
  [ 95] objcall 3 ............................... <tElem.getProperty(#width)>
  [ 97] sub ..................................... <tImage.width - tElem.getProperty(#width)>
  [ 98] setlocal 4 .............................. tOffX = tImage.width - tElem.getProperty(#width)
  [100] getlocal 1 .............................. <tElem>
  [102] getlocal 3 .............................. <tImage>
  [104] pusharglistnoret 2 ...................... <tElem, tImage>
  [106] objcall 105 ............................. tElem.feedImage(tImage)
  [108] getlocal 1 .............................. <tElem>
  [110] getlocal 4 .............................. <tOffX>
  [112] pushzero ................................ <0>
  [113] pusharglistnoret 3 ...................... <tElem, tOffX, 0>
  [115] objcall 252 ............................. tElem.adjustOffsetTo(tOffX, 0)
  [117] pushint8 1 .............................. <1>
  [119] pusharglistnoret 1 ...................... <1>
  [121] extcall 36 .............................. return 1
  [123] ret
end

on setRoomInfoArea me, tstate
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 25 ........................... <me.pWindowTitle>
  [  4] pusharglist 1 ........................... <me.pWindowTitle>
  [  6] extcall 38 .............................. <windowExists(me.pWindowTitle)>
  [  8] not ..................................... <not windowExists(me.pWindowTitle)>
  [  9] jmpifz [ 17] ............................ if not windowExists(me.pWindowTitle) then
  [ 12] pushzero ................................ <0>
  [ 13] pusharglistnoret 1 ...................... <0>
  [ 15] extcall 36 .............................. return 0
  [ 17] getparam 0 .............................. <me>
  [ 19] pushsymb 83 ............................. <#roomInfoState>
  [ 21] pusharglist 2 ........................... <me, #roomInfoState>
  [ 23] objcall 3 ............................... <me.getProperty(#roomInfoState)>
  [ 25] pusharglist 0 ........................... <>
  [ 27] extcall 50 .............................. <VOID>
  [ 29] eq ...................................... <me.getProperty(#roomInfoState) = VOID>
  [ 30] jmpifz [ 43] ............................ if me.getProperty(#roomInfoState) = VOID then
  [ 33] getparam 0 .............................. <me>
  [ 35] pushsymb 83 ............................. <#roomInfoState>
  [ 37] pushsymb 59 ............................. <#show>
  [ 39] pusharglistnoret 3 ...................... <me, #roomInfoState, #show>
  [ 41] objcall 4 ............................... me.setProperty(#roomInfoState, #show)
  [ 43] getparam 1 .............................. <tstate>
  [ 45] getparam 0 .............................. <me>
  [ 47] pushsymb 83 ............................. <#roomInfoState>
  [ 49] pusharglist 2 ........................... <me, #roomInfoState>
  [ 51] objcall 3 ............................... <me.getProperty(#roomInfoState)>
  [ 53] eq ...................................... <tstate = me.getProperty(#roomInfoState)>
  [ 54] jmpifz [ 62] ............................ if tstate = me.getProperty(#roomInfoState) then
  [ 57] pushzero ................................ <0>
  [ 58] pusharglistnoret 1 ...................... <0>
  [ 60] extcall 36 .............................. return 0
  [ 62] getparam 0 .............................. <me>
  [ 64] pushsymb 83 ............................. <#roomInfoState>
  [ 66] getparam 1 .............................. <tstate>
  [ 68] pusharglistnoret 3 ...................... <me, #roomInfoState, tstate>
  [ 70] objcall 4 ............................... me.setProperty(#roomInfoState, tstate)
  [ 72] getparam 1 .............................. <tstate>
  [ 74] pushsymb 61 ............................. <#hide>
  [ 76] eq ...................................... <tstate = #hide>
  [ 77] jmpifz [ 92] ............................ if tstate = #hide then
  [ 80] getparam 0 .............................. <me>
  [ 82] pushsymb 75 ............................. <#viewedNodeId>
  [ 84] pusharglist 0 ........................... <>
  [ 86] extcall 50 .............................. <VOID>
  [ 88] pusharglistnoret 3 ...................... <me, #viewedNodeId, VOID>
  [ 90] objcall 4 ............................... me.setProperty(#viewedNodeId, VOID)
  [ 92] getparam 0 .............................. <me>
  [ 94] getobjprop 25 ........................... <me.pWindowTitle>
  [ 96] pusharglist 1 ........................... <me.pWindowTitle>
  [ 98] extcall 58 .............................. <getWindow(me.pWindowTitle)>
  [100] setlocal 0 .............................. tWndObj = getWindow(me.pWindowTitle)
  [102] getlocal 0 .............................. <tWndObj>
  [104] pushcons 23 ............................. <"nav_roomlist">
  [106] pusharglist 2 ........................... <tWndObj, "nav_roomlist">
  [108] objcall 65 .............................. <tWndObj.getElement("nav_roomlist")>
  [110] getlocal 0 .............................. <tWndObj>
  [112] pushcons 14 ............................. <"nav_scrollbar">
  [114] pusharglist 2 ........................... <tWndObj, "nav_scrollbar">
  [116] objcall 65 .............................. <tWndObj.getElement("nav_scrollbar")>
  [118] getlocal 0 .............................. <tWndObj>
  [120] pushcons 28 ............................. <"nav_roomlistArea">
  [122] pusharglist 2 ........................... <tWndObj, "nav_roomlistArea">
  [124] objcall 65 .............................. <tWndObj.getElement("nav_roomlistArea")>
  [126] pusharglist 3 ........................... <[tWndObj.getElement("nav_roomlist"), tWndObj.getElement("nav_scrollbar"), tWndObj.getElement("nav_roomlistArea")]>
  [128] pushlist ................................ <[tWndObj.getElement("nav_roomlist"), tWndObj.getElement("nav_scrollbar"), tWndObj.getElement("nav_roomlistArea")]>
  [129] setlocal 1 .............................. tScaleElemList = [tWndObj.getElement("nav_roomlist"), tWndObj.getElement("nav_scrollbar"), tWndObj.getElement("nav_roomlistArea")]
  [131] getprop 28 .............................. <pRoomInfoHeight>
  [133] setlocal 2 .............................. tOffset = pRoomInfoHeight
  [135] getparam 1 .............................. <tstate>
  [137] pushsymb 59 ............................. <#show>
  [139] eq ...................................... <tstate = #show>
  [140] jmpifz [148] ............................ if tstate = #show then
  [143] getlocal 2 .............................. <tOffset>
  [145] inv ..................................... <-tOffset>
  [146] setlocal 2 .............................. tOffset = -tOffset
  [148] pushsymb 128 ............................ <#resizeBy>
  [150] getlocal 1 .............................. <tScaleElemList>
  [152] pushzero ................................ <0>
  [153] getlocal 2 .............................. <tOffset>
  [155] pusharglistnoret 4 ...................... <#resizeBy, tScaleElemList, 0, tOffset>
  [157] extcall 127 ............................. call(#resizeBy, tScaleElemList, 0, tOffset)
  [159] pushint8 1 .............................. <1>
  [161] pusharglistnoret 1 ...................... <1>
  [163] extcall 36 .............................. return 1
  [165] ret
end

on setLoadingCursor me, tstate
  [  0] getparam 1 .............................. <tstate>
  [  2] jmpifz [ 16] ............................ if tstate then / else
  [  5] pushsymb 257 ............................ <#timer>
  [  8] pusharglistnoret 1 ...................... <#timer>
  [ 10] extcall 256 ............................. setcursor(#timer)
  [ 13] jmp [ 24]
  [ 16] pushsymb 258 ............................ <#arrow>
  [ 19] pusharglistnoret 1 ...................... <#arrow>
  [ 21] extcall 256 ............................. setcursor(#arrow)
  [ 24] ret
end

on renderLoadingText me, tTempElementId
  [  0] getparam 1 .............................. <tTempElementId>
  [  2] pusharglist 1 ........................... <tTempElementId>
  [  4] extcall 52 .............................. <voidp(tTempElementId)>
  [  6] jmpifz [ 14] ............................ if voidp(tTempElementId) then
  [  9] pushzero ................................ <0>
  [ 10] pusharglistnoret 1 ...................... <0>
  [ 12] extcall 36 .............................. return 0
  [ 14] getparam 0 .............................. <me>
  [ 16] getobjprop 25 ........................... <me.pWindowTitle>
  [ 18] pusharglist 1 ........................... <me.pWindowTitle>
  [ 20] extcall 58 .............................. <getWindow(me.pWindowTitle)>
  [ 22] getparam 1 .............................. <tTempElementId>
  [ 24] pusharglist 2 ........................... <getWindow(me.pWindowTitle), tTempElementId>
  [ 26] objcall 65 .............................. <getWindow(me.pWindowTitle).getElement(tTempElementId)>
  [ 28] setlocal 0 .............................. tElem = getWindow(me.pWindowTitle).getElement(tTempElementId)
  [ 30] getlocal 0 .............................. <tElem>
  [ 32] pushsymb 133 ............................ <#width>
  [ 34] pusharglist 2 ........................... <tElem, #width>
  [ 36] objcall 3 ............................... <tElem.getProperty(#width)>
  [ 38] setlocal 1 .............................. tWidth = tElem.getProperty(#width)
  [ 40] getlocal 0 .............................. <tElem>
  [ 42] pushsymb 106 ............................ <#height>
  [ 44] pusharglist 2 ........................... <tElem, #height>
  [ 46] objcall 3 ............................... <tElem.getProperty(#height)>
  [ 48] setlocal 2 .............................. tHeight = tElem.getProperty(#height)
  [ 50] getlocal 1 .............................. <tWidth>
  [ 52] getlocal 2 .............................. <tHeight>
  [ 54] getprop 32 .............................. <pBufferDepth>
  [ 56] pusharglist 3 ........................... <tWidth, tHeight, pBufferDepth>
  [ 58] extcall 132 ............................. <image(tWidth, tHeight, pBufferDepth)>
  [ 60] setlocal 3 .............................. tTempImg = image(tWidth, tHeight, pBufferDepth)
  [ 62] getprop 192 ............................. <pWriterPlainBoldCent>
  [ 64] pushcons 98 ............................. <"loading">
  [ 66] pusharglist 1 ........................... <"loading">
  [ 68] extcall 26 .............................. <getText("loading")>
  [ 70] pusharglist 2 ........................... <pWriterPlainBoldCent, getText("loading")>
  [ 72] objcall 104 ............................. <pWriterPlainBoldCent.render(getText("loading"))>
  [ 74] setlocal 4 .............................. tTextImg = pWriterPlainBoldCent.render(getText("loading"))
  [ 76] getlocal 1 .............................. <tWidth>
  [ 78] getlocal 4 .............................. <tTextImg>
  [ 80] getobjprop 133 .......................... <tTextImg.width>
  [ 82] sub ..................................... <tWidth - tTextImg.width>
  [ 83] pushint8 2 .............................. <2>
  [ 85] div ..................................... <(tWidth - tTextImg.width) / 2>
  [ 86] setlocal 5 .............................. tOffX = (tWidth - tTextImg.width) / 2
  [ 88] getlocal 2 .............................. <tHeight>
  [ 90] getlocal 4 .............................. <tTextImg>
  [ 92] getobjprop 106 .......................... <tTextImg.height>
  [ 94] sub ..................................... <tHeight - tTextImg.height>
  [ 95] pushint8 2 .............................. <2>
  [ 97] div ..................................... <(tHeight - tTextImg.height) / 2>
  [ 98] setlocal 6 .............................. tOffY = (tHeight - tTextImg.height) / 2
  [100] getlocal 4 .............................. <tTextImg>
  [102] getobjprop 134 .......................... <tTextImg.rect>
  [104] getlocal 5 .............................. <tOffX>
  [106] getlocal 6 .............................. <tOffY>
  [108] getlocal 5 .............................. <tOffX>
  [110] getlocal 6 .............................. <tOffY>
  [112] pusharglist 4 ........................... <tOffX, tOffY, tOffX, tOffY>
  [114] extcall 134 ............................. <rect(tOffX, tOffY, tOffX, tOffY)>
  [116] add ..................................... <tTextImg.rect + rect(tOffX, tOffY, tOffX, tOffY)>
  [117] setlocal 7 .............................. tDstRect = tTextImg.rect + rect(tOffX, tOffY, tOffX, tOffY)
  [119] getlocal 3 .............................. <tTempImg>
  [121] getlocal 4 .............................. <tTextImg>
  [123] getlocal 7 .............................. <tDstRect>
  [125] getlocal 4 .............................. <tTextImg>
  [127] getobjprop 134 .......................... <tTextImg.rect>
  [129] pusharglistnoret 4 ...................... <tTempImg, tTextImg, tDstRect, tTextImg.rect>
  [131] objcall 135 ............................. tTempImg.copyPixels(tTextImg, tDstRect, tTextImg.rect)
  [133] getlocal 0 .............................. <tElem>
  [135] getlocal 3 .............................. <tTempImg>
  [137] pusharglistnoret 2 ...................... <tElem, tTempImg>
  [139] objcall 105 ............................. tElem.feedImage(tTempImg)
  [141] pushint8 1 .............................. <1>
  [143] pusharglistnoret 1 ...................... <1>
  [145] extcall 36 .............................. return 1
  [147] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 133 .......................... <tImg_a.width>
  [  4] getparam 1 .............................. <tImg_a>
  [  6] getobjprop 106 .......................... <tImg_a.height>
  [  8] getparam 1 .............................. <tImg_a>
  [ 10] getobjprop 168 .......................... <tImg_a.depth>
  [ 12] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth>
  [ 14] extcall 132 ............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth)>
  [ 16] setlocal 0 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth)
  [ 18] getparam 1 .............................. <tImg_a>
  [ 20] getobjprop 133 .......................... <tImg_a.width>
  [ 22] pushzero ................................ <0>
  [ 23] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 25] extcall 217 ............................. <point(tImg_a.width, 0)>
  [ 27] pushzero ................................ <0>
  [ 28] pushzero ................................ <0>
  [ 29] pusharglist 2 ........................... <0, 0>
  [ 31] extcall 217 ............................. <point(0, 0)>
  [ 33] pushzero ................................ <0>
  [ 34] getparam 1 .............................. <tImg_a>
  [ 36] getobjprop 106 .......................... <tImg_a.height>
  [ 38] pusharglist 2 ........................... <0, tImg_a.height>
  [ 40] extcall 217 ............................. <point(0, tImg_a.height)>
  [ 42] getparam 1 .............................. <tImg_a>
  [ 44] getobjprop 133 .......................... <tImg_a.width>
  [ 46] getparam 1 .............................. <tImg_a>
  [ 48] getobjprop 106 .......................... <tImg_a.height>
  [ 50] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 52] extcall 217 ............................. <point(tImg_a.width, tImg_a.height)>
  [ 54] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 56] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 57] setlocal 1 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [ 59] getlocal 0 .............................. <tImg_b>
  [ 61] getparam 1 .............................. <tImg_a>
  [ 63] getlocal 1 .............................. <tQuad>
  [ 65] getparam 1 .............................. <tImg_a>
  [ 67] getobjprop 134 .......................... <tImg_a.rect>
  [ 69] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [ 71] objcall 135 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [ 73] getlocal 0 .............................. <tImg_b>
  [ 75] pusharglistnoret 1 ...................... <tImg_b>
  [ 77] extcall 36 .............................. return tImg_b
  [ 79] ret
end
