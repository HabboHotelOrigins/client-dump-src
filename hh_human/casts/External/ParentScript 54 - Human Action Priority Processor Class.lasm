property pPriorityList, pEndList, pTerminationList, pCurrentActions, pHostObject

on construct me
  [  0] pushcons 0 .............................. <"fx">
  [  2] pushcons 1 .............................. <"wave">
  [  4] pushcons 2 .............................. <"dance">
  [  6] pushcons 3 .............................. <"mv">
  [  8] pushcons 4 .............................. <"sit">
  [ 10] pushcons 5 .............................. <"lay">
  [ 12] pusharglist 6 ........................... <["fx", "wave", "dance", "mv", "sit", "lay"]>
  [ 14] pushlist ................................ <["fx", "wave", "dance", "mv", "sit", "lay"]>
  [ 15] setprop 900 ............................. pPriorityList = ["fx", "wave", "dance", "mv", "sit", "lay"]
  [ 18] pushcons 6 .............................. <"std">
  [ 20] pushcons 3 .............................. <"mv">
  [ 22] pushcons 4 .............................. <"sit">
  [ 24] pushcons 5 .............................. <"lay">
  [ 26] pusharglist 3 ........................... <["mv", "sit", "lay"]>
  [ 28] pushlist ................................ <["mv", "sit", "lay"]>
  [ 29] pushcons 1 .............................. <"wave">
  [ 31] pushcons 2 .............................. <"dance">
  [ 33] pusharglist 1 ........................... <["dance"]>
  [ 35] pushlist ................................ <["dance"]>
  [ 36] pushcons 3 .............................. <"mv">
  [ 38] pushcons 4 .............................. <"sit">
  [ 40] pushcons 5 .............................. <"lay">
  [ 42] pusharglist 2 ........................... <["sit", "lay"]>
  [ 44] pushlist ................................ <["sit", "lay"]>
  [ 45] pushcons 4 .............................. <"sit">
  [ 47] pushcons 5 .............................. <"lay">
  [ 49] pusharglist 1 ........................... <["lay"]>
  [ 51] pushlist ................................ <["lay"]>
  [ 52] pusharglist 8 ........................... <["std": ["mv", "sit", "lay"], "wave": ["dance"], "mv": ["sit", "lay"], "sit": ["lay"]]>
  [ 54] pushproplist ............................ <["std": ["mv", "sit", "lay"], "wave": ["dance"], "mv": ["sit", "lay"], "sit": ["lay"]]>
  [ 55] setprop 901 ............................. pEndList = ["std": ["mv", "sit", "lay"], "wave": ["dance"], "mv": ["sit", "lay"], "sit": ["lay"]]
  [ 58] pushcons 2 .............................. <"dance">
  [ 60] pushcons 6 .............................. <"std">
  [ 62] pusharglist 2 ........................... <["dance": "std"]>
  [ 64] pushproplist ............................ <["dance": "std"]>
  [ 65] setprop 902 ............................. pTerminationList = ["dance": "std"]
  [ 68] pusharglist 0 ........................... <[]>
  [ 70] pushlist ................................ <[]>
  [ 71] setprop 903 ............................. pCurrentActions = []
  [ 74] pusharglist 0 ........................... <>
  [ 76] extcall 101 ............................. <VOID>
  [ 78] setprop 904 ............................. pHostObject = VOID
  [ 81] ret
end

on isPriorityTo me, tIs, tThan
  [  0] getprop 900 ............................. <pPriorityList>
  [  3] getparam 1 .............................. <tIs>
  [  5] pusharglist 2 ........................... <pPriorityList, tIs>
  [  7] objcall 482 ............................. <pPriorityList.getPos(tIs)>
  [ 10] pushzero ................................ <0>
  [ 11] eq ...................................... <pPriorityList.getPos(tIs) = 0>
  [ 12] jmpifz [ 23] ............................ if pPriorityList.getPos(tIs) = 0 then / else
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 189 ............................. return 0
  [ 20] jmp [ 85]
  [ 23] getprop 900 ............................. <pPriorityList>
  [ 26] getparam 2 .............................. <tThan>
  [ 28] pusharglist 2 ........................... <pPriorityList, tThan>
  [ 30] objcall 482 ............................. <pPriorityList.getPos(tThan)>
  [ 33] pushzero ................................ <0>
  [ 34] eq ...................................... <pPriorityList.getPos(tThan) = 0>
  [ 35] jmpifz [ 47] ............................ if pPriorityList.getPos(tThan) = 0 then / else
  [ 38] pushint8 1 .............................. <1>
  [ 40] pusharglistnoret 1 ...................... <1>
  [ 42] extcall 189 ............................. return 1
  [ 44] jmp [ 85]
  [ 47] getprop 900 ............................. <pPriorityList>
  [ 50] getparam 1 .............................. <tIs>
  [ 52] pusharglist 2 ........................... <pPriorityList, tIs>
  [ 54] objcall 482 ............................. <pPriorityList.getPos(tIs)>
  [ 57] getprop 900 ............................. <pPriorityList>
  [ 60] getparam 2 .............................. <tThan>
  [ 62] pusharglist 2 ........................... <pPriorityList, tThan>
  [ 64] objcall 482 ............................. <pPriorityList.getPos(tThan)>
  [ 67] lt ...................................... <pPriorityList.getPos(tIs) < pPriorityList.getPos(tThan)>
  [ 68] jmpifz [ 80] ............................ if pPriorityList.getPos(tIs) < pPriorityList.getPos(tThan) then / else
  [ 71] pushint8 1 .............................. <1>
  [ 73] pusharglistnoret 1 ...................... <1>
  [ 75] extcall 189 ............................. return 1
  [ 77] jmp [ 85]
  [ 80] pushzero ................................ <0>
  [ 81] pusharglistnoret 1 ...................... <0>
  [ 83] extcall 189 ............................. return 0
  [ 85] ret
end

on setHumanObject me, tHumanObj
  [  0] getparam 1 .............................. <tHumanObj>
  [  2] setprop 904 ............................. pHostObject = tHumanObj
  [  5] ret
end

on processAction me, tAction
  [  0] getprop 904 ............................. <pHostObject>
  [  3] pusharglist 1 ........................... <pHostObject>
  [  5] extcall 194 ............................. <voidp(pHostObject)>
  [  7] jmpifz [ 27] ............................ if voidp(pHostObject) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 7 .............................. <"Host object not set">
  [ 14] pushsymb 895 ............................ <#processAction>
  [ 17] pushsymb 177 ............................ <#major>
  [ 19] pusharglist 4 ........................... <me, "Host object not set", #processAction, #major>
  [ 21] extcall 176 ............................. <error(me, "Host object not set", #processAction, #major)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Host object not set", #processAction, #major)>
  [ 25] extcall 189 ............................. return error(me, "Host object not set", #processAction, #major)
  [ 27] getparam 1 .............................. <tAction>
  [ 29] pushsymb 434 ............................ <#word>
  [ 32] pushint8 2 .............................. <2>
  [ 34] getparam 1 .............................. <tAction>
  [ 36] pushsymb 434 ............................ <#word>
  [ 39] pusharglist 2 ........................... <tAction, #word>
  [ 41] objcall 172 ............................. <tAction.word.count>
  [ 43] pusharglist 4 ........................... <tAction, #word, 2, tAction.word.count>
  [ 45] objcall 311 ............................. <tAction.word[2..tAction.word.count]>
  [ 48] setlocal 0 .............................. tParams = tAction.word[2..tAction.word.count]
  [ 50] getparam 1 .............................. <tAction>
  [ 52] pushsymb 434 ............................ <#word>
  [ 55] pushint8 1 .............................. <1>
  [ 57] pusharglist 3 ........................... <tAction, #word, 1>
  [ 59] objcall 311 ............................. <tAction.word[1]>
  [ 62] setlocal 1 .............................. tActRoot = tAction.word[1]
  [ 64] getprop 900 ............................. <pPriorityList>
  [ 67] getlocal 1 .............................. <tActRoot>
  [ 69] pusharglist 2 ........................... <pPriorityList, tActRoot>
  [ 71] objcall 482 ............................. <pPriorityList.getPos(tActRoot)>
  [ 74] pushzero ................................ <0>
  [ 75] nteq .................................... <pPriorityList.getPos(tActRoot) <> 0>
  [ 76] jmpifz [107] ............................ if pPriorityList.getPos(tActRoot) <> 0 then
  [ 79] pushcons 8 .............................. <"action_">
  [ 81] getlocal 1 .............................. <tActRoot>
  [ 83] joinstr ................................. <"action_" & tActRoot>
  [ 84] pusharglist 1 ........................... <"action_" & tActRoot>
  [ 86] extcall 766 ............................. <symbol("action_" & tActRoot)>
  [ 89] getprop 904 ............................. <pHostObject>
  [ 92] pusharglist 1 ........................... <[pHostObject]>
  [ 94] pushlist ................................ <[pHostObject]>
  [ 95] getparam 1 .............................. <tAction>
  [ 97] pusharglistnoret 3 ...................... <symbol("action_" & tActRoot), [pHostObject], tAction>
  [ 99] extcall 205 ............................. call(symbol("action_" & tActRoot), [pHostObject], tAction)
  [101] pushint8 1 .............................. <1>
  [103] pusharglistnoret 1 ...................... <1>
  [105] extcall 189 ............................. return 1
  [107] getparam 0 .............................. <me>
  [109] getlocal 1 .............................. <tActRoot>
  [111] pusharglistnoret 2 ...................... <me, tActRoot>
  [113] objcall 898 ............................. me.endActions(tActRoot)
  [116] getparam 0 .............................. <me>
  [118] getparam 1 .............................. <tAction>
  [120] pusharglistnoret 2 ...................... <me, tAction>
  [122] objcall 896 ............................. me.addToCurrentActions(tAction)
  [125] getprop 903 ............................. <pCurrentActions>
  [128] pusharglistnoret 1 ...................... <pCurrentActions>
  [130] extcall 478 ............................. put pCurrentActions
  [133] getparam 0 .............................. <me>
  [135] getprop 903 ............................. <pCurrentActions>
  [138] pusharglist 2 ........................... <me, pCurrentActions>
  [140] objcall 899 ............................. <me.getActionIndex(pCurrentActions)>
  [143] setlocal 2 .............................. tActionIndex = me.getActionIndex(pCurrentActions)
  [145] pushsymb 88 ............................. <#validateFxForActionList>
  [147] getprop 904 ............................. <pHostObject>
  [150] pusharglist 1 ........................... <[pHostObject]>
  [152] pushlist ................................ <[pHostObject]>
  [153] getprop 903 ............................. <pCurrentActions>
  [156] getlocal 2 .............................. <tActionIndex>
  [158] pusharglist 4 ........................... <#validateFxForActionList, [pHostObject], pCurrentActions, tActionIndex>
  [160] extcall 205 ............................. <call(#validateFxForActionList, [pHostObject], pCurrentActions, tActionIndex)>
  [162] setlocal 3 .............................. tAllowFX = call(#validateFxForActionList, [pHostObject], pCurrentActions, tActionIndex)
  [164] pusharglist 0 ........................... <[]>
  [166] pushlist ................................ <[]>
  [167] setlocal 4 .............................. tActionList = []
  [169] getprop 903 ............................. <pCurrentActions>
  [172] pusharglist 1 ........................... <pCurrentActions>
  [174] objcall 220 ............................. <pCurrentActions.duplicate()>
  [176] setlocal 5 .............................. tUserActions = pCurrentActions.duplicate()
  [178] getlocal 5 .............................. <tUserActions>
  [180] getobjprop 172 .......................... <tUserActions.count>
  [182] setlocal 6
  [184] getlocal 6
  [186] pushint8 1 .............................. <1>
  [188] gteq
  [189] jmpifz [277] ............................ repeat with i = tUserActions.count down to 1
  [192] getlocal 5 .............................. <tUserActions>
  [194] getlocal 6 .............................. <i>
  [196] pusharglist 2 ........................... <tUserActions, i>
  [198] objcall 173 ............................. <tUserActions[i]>
  [200] setparam 1 .............................. tAction = tUserActions[i]
  [202] getparam 1 .............................. <tAction>
  [204] pushsymb 434 ............................ <#word>
  [207] pushint8 1 .............................. <1>
  [209] pusharglist 3 ........................... <tAction, #word, 1>
  [211] objcall 311 ............................. <tAction.word[1]>
  [214] setlocal 7 .............................. tName = tAction.word[1]
  [216] getprop 900 ............................. <pPriorityList>
  [219] getlocal 7 .............................. <tName>
  [221] pusharglist 2 ........................... <pPriorityList, tName>
  [223] objcall 290 ............................. <pPriorityList.findPos(tName)>
  [226] jmpifz [247] ............................ if pPriorityList.findPos(tName) then
  [229] getlocal 4 .............................. <tActionList>
  [231] getparam 1 .............................. <tAction>
  [233] pusharglistnoret 2 ...................... <tActionList, tAction>
  [235] objcall 389 ............................. tActionList.add(tAction)
  [238] getlocal 5 .............................. <tUserActions>
  [240] getlocal 6 .............................. <i>
  [242] pusharglistnoret 2 ...................... <tUserActions, i>
  [244] objcall 309 ............................. tUserActions.deleteAt(i)
  [247] getlocal 7 .............................. <tName>
  [249] pushcons 0 .............................. <"fx">
  [251] eq ...................................... <tName = "fx">
  [252] getlocal 3 .............................. <tAllowFX>
  [254] not ..................................... <not tAllowFX>
  [255] and ..................................... <(tName = "fx") and not tAllowFX>
  [256] jmpifz [268] ............................ if (tName = "fx") and not tAllowFX then
  [259] getlocal 5 .............................. <tUserActions>
  [261] getlocal 6 .............................. <i>
  [263] pusharglistnoret 2 ...................... <tUserActions, i>
  [265] objcall 309 ............................. tUserActions.deleteAt(i)
  [268] pushint8 -1
  [270] getlocal 6
  [272] add
  [273] setlocal 6
  [275] endrepeat [184]
  [277] pusharglist 0 ........................... <>
  [279] extcall 101 ............................. <VOID>
  [281] setlocal 8 .............................. tEffect = VOID
  [283] getlocal 5 .............................. <tUserActions>
  [285] peek 0
  [287] pusharglist 1
  [289] extcall 172
  [291] pushint8 1
  [293] peek 0
  [295] peek 2
  [297] lteq
  [298] jmpifz [354] ............................ repeat with tAction in tUserActions
  [301] peek 2
  [303] peek 1
  [305] pusharglist 2
  [307] extcall 173
  [309] setparam 1
  [311] getparam 1 .............................. <tAction>
  [313] pushsymb 434 ............................ <#word>
  [316] pushint8 1 .............................. <1>
  [318] pusharglist 3 ........................... <tAction, #word, 1>
  [320] objcall 311 ............................. <tAction.word[1]>
  [323] pushcons 0 .............................. <"fx">
  [325] eq ...................................... <tAction.word[1] = "fx">
  [326] jmpifz [340] ............................ if tAction.word[1] = "fx" then
  [329] getparam 1 .............................. <tAction>
  [331] pusharglist 1 ........................... <tAction>
  [333] objcall 220 ............................. <tAction.duplicate()>
  [335] setlocal 8 .............................. tEffect = tAction.duplicate()
  [337] jmp [349] ............................... next repeat
  [340] getlocal 4 .............................. <tActionList>
  [342] getparam 1 .............................. <tAction>
  [344] pusharglistnoret 2 ...................... <tActionList, tAction>
  [346] objcall 389 ............................. tActionList.add(tAction)
  [349] pushint8 1
  [351] add
  [352] endrepeat [293]
  [354] pop 3
  [356] getlocal 8 .............................. <tEffect>
  [358] pusharglist 0 ........................... <>
  [360] extcall 101 ............................. <VOID>
  [362] nteq .................................... <tEffect <> VOID>
  [363] jmpifz [375] ............................ if tEffect <> VOID then
  [366] getlocal 4 .............................. <tActionList>
  [368] getlocal 8 .............................. <tEffect>
  [370] pusharglistnoret 2 ...................... <tActionList, tEffect>
  [372] objcall 389 ............................. tActionList.add(tEffect)
  [375] getlocal 4 .............................. <tActionList>
  [377] peek 0
  [379] pusharglist 1
  [381] extcall 172
  [383] pushint8 1
  [385] peek 0
  [387] peek 2
  [389] lteq
  [390] jmpifz [440] ............................ repeat with tAction in tActionList
  [393] peek 2
  [395] peek 1
  [397] pusharglist 2
  [399] extcall 173
  [401] setparam 1
  [403] pushcons 8 .............................. <"action_">
  [405] getparam 1 .............................. <tAction>
  [407] pushsymb 434 ............................ <#word>
  [410] pushint8 1 .............................. <1>
  [412] pusharglist 3 ........................... <tAction, #word, 1>
  [414] objcall 311 ............................. <tAction.word[1]>
  [417] joinstr ................................. <"action_" & tAction.word[1]>
  [418] pusharglist 1 ........................... <"action_" & tAction.word[1]>
  [420] extcall 766 ............................. <symbol("action_" & tAction.word[1])>
  [423] getprop 904 ............................. <pHostObject>
  [426] pusharglist 1 ........................... <[pHostObject]>
  [428] pushlist ................................ <[pHostObject]>
  [429] getparam 1 .............................. <tAction>
  [431] pusharglistnoret 3 ...................... <symbol("action_" & tAction.word[1]), [pHostObject], tAction>
  [433] extcall 205 ............................. call(symbol("action_" & tAction.word[1]), [pHostObject], tAction)
  [435] pushint8 1
  [437] add
  [438] endrepeat [385]
  [440] pop 3
  [442] pushint8 1 .............................. <1>
  [444] pusharglistnoret 1 ...................... <1>
  [446] extcall 189 ............................. return 1
  [448] ret
end

on addToCurrentActions me, tAction
  [  0] ret
end

on terminateAction me, tAction
  [  0] getprop 904 ............................. <pHostObject>
  [  3] pusharglist 1 ........................... <pHostObject>
  [  5] extcall 194 ............................. <voidp(pHostObject)>
  [  7] jmpifz [ 27] ............................ if voidp(pHostObject) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 7 .............................. <"Host object not set">
  [ 14] pushsymb 895 ............................ <#processAction>
  [ 17] pushsymb 177 ............................ <#major>
  [ 19] pusharglist 4 ........................... <me, "Host object not set", #processAction, #major>
  [ 21] extcall 176 ............................. <error(me, "Host object not set", #processAction, #major)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Host object not set", #processAction, #major)>
  [ 25] extcall 189 ............................. return error(me, "Host object not set", #processAction, #major)
  [ 27] getparam 1 .............................. <tAction>
  [ 29] pushsymb 434 ............................ <#word>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pusharglist 3 ........................... <tAction, #word, 1>
  [ 36] objcall 311 ............................. <tAction.word[1]>
  [ 39] setlocal 0 .............................. tActRoot = tAction.word[1]
  [ 41] getprop 902 ............................. <pTerminationList>
  [ 44] getlocal 0 .............................. <tActRoot>
  [ 46] pusharglist 2 ........................... <pTerminationList, tActRoot>
  [ 48] objcall 272 ............................. <pTerminationList.getaProp(tActRoot)>
  [ 51] pusharglist 1 ........................... <pTerminationList.getaProp(tActRoot)>
  [ 53] extcall 194 ............................. <voidp(pTerminationList.getaProp(tActRoot))>
  [ 55] not ..................................... <not voidp(pTerminationList.getaProp(tActRoot))>
  [ 56] jmpifz [ 98] ............................ if not voidp(pTerminationList.getaProp(tActRoot)) then
  [ 59] getprop 902 ............................. <pTerminationList>
  [ 62] getlocal 0 .............................. <tActRoot>
  [ 64] pusharglist 2 ........................... <pTerminationList, tActRoot>
  [ 66] objcall 272 ............................. <pTerminationList.getaProp(tActRoot)>
  [ 69] setlocal 1 .............................. tTermination = pTerminationList.getaProp(tActRoot)
  [ 71] pushcons 8 .............................. <"action_">
  [ 73] getlocal 1 .............................. <tTermination>
  [ 75] joinstr ................................. <"action_" & tTermination>
  [ 76] getprop 904 ............................. <pHostObject>
  [ 79] pusharglist 1 ........................... <[pHostObject]>
  [ 81] pushlist ................................ <[pHostObject]>
  [ 82] getlocal 1 .............................. <tTermination>
  [ 84] pusharglistnoret 3 ...................... <"action_" & tTermination, [pHostObject], tTermination>
  [ 86] extcall 205 ............................. call("action_" & tTermination, [pHostObject], tTermination)
  [ 88] getprop 903 ............................. <pCurrentActions>
  [ 91] getlocal 0 .............................. <tActRoot>
  [ 93] pusharglistnoret 2 ...................... <pCurrentActions, tActRoot>
  [ 95] objcall 390 ............................. pCurrentActions.deleteOne(tActRoot)
  [ 98] pushint8 1 .............................. <1>
  [100] pusharglistnoret 1 ...................... <1>
  [102] extcall 189 ............................. return 1
  [104] ret
end

on endActions me, tCause
  [  0] getprop 904 ............................. <pHostObject>
  [  3] pusharglist 1 ........................... <pHostObject>
  [  5] extcall 194 ............................. <voidp(pHostObject)>
  [  7] jmpifz [ 27] ............................ if voidp(pHostObject) then
  [ 10] getparam 0 .............................. <me>
  [ 12] pushcons 7 .............................. <"Host object not set">
  [ 14] pushsymb 895 ............................ <#processAction>
  [ 17] pushsymb 177 ............................ <#major>
  [ 19] pusharglist 4 ........................... <me, "Host object not set", #processAction, #major>
  [ 21] extcall 176 ............................. <error(me, "Host object not set", #processAction, #major)>
  [ 23] pusharglistnoret 1 ...................... <error(me, "Host object not set", #processAction, #major)>
  [ 25] extcall 189 ............................. return error(me, "Host object not set", #processAction, #major)
  [ 27] getparam 1 .............................. <tCause>
  [ 29] pushsymb 434 ............................ <#word>
  [ 32] pushint8 1 .............................. <1>
  [ 34] pusharglist 3 ........................... <tCause, #word, 1>
  [ 36] objcall 311 ............................. <tCause.word[1]>
  [ 39] setlocal 0 .............................. tActRoot = tCause.word[1]
  [ 41] getprop 901 ............................. <pEndList>
  [ 44] getlocal 0 .............................. <tActRoot>
  [ 46] pusharglist 2 ........................... <pEndList, tActRoot>
  [ 48] objcall 272 ............................. <pEndList.getaProp(tActRoot)>
  [ 51] pusharglist 1 ........................... <pEndList.getaProp(tActRoot)>
  [ 53] extcall 194 ............................. <voidp(pEndList.getaProp(tActRoot))>
  [ 55] not ..................................... <not voidp(pEndList.getaProp(tActRoot))>
  [ 56] jmpifz [111] ............................ if not voidp(pEndList.getaProp(tActRoot)) then
  [ 59] getprop 901 ............................. <pEndList>
  [ 62] getlocal 0 .............................. <tActRoot>
  [ 64] pusharglist 2 ........................... <pEndList, tActRoot>
  [ 66] objcall 272 ............................. <pEndList.getaProp(tActRoot)>
  [ 69] peek 0
  [ 71] pusharglist 1
  [ 73] extcall 172
  [ 75] pushint8 1
  [ 77] peek 0
  [ 79] peek 2
  [ 81] lteq
  [ 82] jmpifz [109] ............................ repeat with tAct in pEndList.getaProp(tActRoot)
  [ 85] peek 2
  [ 87] peek 1
  [ 89] pusharglist 2
  [ 91] extcall 173
  [ 93] setlocal 1
  [ 95] getparam 0 .............................. <me>
  [ 97] getlocal 1 .............................. <tAct>
  [ 99] pusharglistnoret 2 ...................... <me, tAct>
  [101] objcall 897 ............................. me.terminateAction(tAct)
  [104] pushint8 1
  [106] add
  [107] endrepeat [ 77]
  [109] pop 3
  [111] pushint8 1 .............................. <1>
  [113] pusharglistnoret 1 ...................... <1>
  [115] extcall 189 ............................. return 1
  [117] ret
end

on getActionIndex me, tActionList
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tOut = []
  [  5] getparam 1 .............................. <tActionList>
  [  7] peek 0
  [  9] pusharglist 1
  [ 11] extcall 172
  [ 13] pushint8 1
  [ 15] peek 0
  [ 17] peek 2
  [ 19] lteq
  [ 20] jmpifz [ 57] ............................ repeat with tAction in tActionList
  [ 23] peek 2
  [ 25] peek 1
  [ 27] pusharglist 2
  [ 29] extcall 173
  [ 31] setlocal 1
  [ 33] getlocal 0 .............................. <tOut>
  [ 35] getlocal 1 .............................. <tAction>
  [ 37] pushsymb 434 ............................ <#word>
  [ 40] pushint8 1 .............................. <1>
  [ 42] pusharglist 3 ........................... <tAction, #word, 1>
  [ 44] objcall 311 ............................. <tAction.word[1]>
  [ 47] pusharglistnoret 2 ...................... <tOut, tAction.word[1]>
  [ 49] objcall 389 ............................. tOut.add(tAction.word[1])
  [ 52] pushint8 1
  [ 54] add
  [ 55] endrepeat [ 15]
  [ 57] pop 3
  [ 59] getlocal 0 .............................. <tOut>
  [ 61] pusharglistnoret 1 ...................... <tOut>
  [ 63] extcall 189 ............................. return tOut
  [ 65] ret
end
