property pName, pClass, pCustom, pSex, pModState, pCtrlType, pBadges, pID, pWebID, pBuffer, pSprite, pMatteSpr, pMember, pShadowSpr, pShadowFix, pDefShadowMem, pPartList, pPartIndex, pFlipList, pFlipPartList, pUpdateRect, pDirection, pLastDir, pHeadDir, pLocX, pLocY, pLocH, pLocFix, pXFactor, pYFactor, pHFactor, pScreenLoc, pStartLScreen, pDestLScreen, pRestingHeight, pAnimCounter, pMoveStart, pMoveTime, pEyesClosed, pSync, pChanges, pAlphaColor, pCanvasSize, pColors, pPeopleSize, pMainAction, pMoving, pTalking, pCarrying, pSleeping, pDancing, pWaving, pTrading, pAnimating, pSwim, pCurrentAnim, pGeometry, pExtraObjs, pExtraObjsActive, pInfoStruct, pCorrectLocZ, pPartClass, pQueuesWithObj, pPreviousLoc, pBaseLocZ, pGroupId, pStatusInGroup, pXP, pFx, pFXManager, pFrozenAnimFrame, pPartListSubSet, pPartListFull, pPartActionList, pPartOrderOld, pLeftHandUp, pRightHandUp, pRawFigure, pTypingSprite, pUserIsTyping, pUserTypingStartTime, pCanvasName, pDrinkEatTimeoutList, pDrinkEatParams, pCarryItemCode, pGesture, pSitting, pLayingDown, pPersistedFX

on construct me
  [  0] pushzero ................................ <0>
  [  1] setprop 98 .............................. pFrozenAnimFrame = 0
  [  3] pushzero ................................ <0>
  [  4] setprop 99 .............................. pID = 0
  [  6] pusharglist 0 ........................... <>
  [  8] extcall 101 ............................. <VOID>
  [ 10] setprop 100 ............................. pWebID = VOID
  [ 12] pushcons 0 .............................. <EMPTY>
  [ 14] setprop 102 ............................. pName = EMPTY
  [ 16] pusharglist 0 ........................... <[]>
  [ 18] pushlist ................................ <[]>
  [ 19] setprop 103 ............................. pPartList = []
  [ 21] pusharglist 0 ........................... <[:]>
  [ 23] pushproplist ............................ <[:]>
  [ 24] setprop 104 ............................. pPartIndex = [:]
  [ 26] pushzero ................................ <0>
  [ 27] pushint8 1 .............................. <1>
  [ 29] pushint8 2 .............................. <2>
  [ 31] pushint8 3 .............................. <3>
  [ 33] pushint8 2 .............................. <2>
  [ 35] pushint8 1 .............................. <1>
  [ 37] pushzero ................................ <0>
  [ 38] pushint8 7 .............................. <7>
  [ 40] pusharglist 8 ........................... <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 42] pushlist ................................ <[0, 1, 2, 3, 2, 1, 0, 7]>
  [ 43] setprop 105 ............................. pFlipList = [0, 1, 2, 3, 2, 1, 0, 7]
  [ 45] pushzero ................................ <0>
  [ 46] pushzero ................................ <0>
  [ 47] pusharglist 2 ........................... <0, 0>
  [ 49] extcall 107 ............................. <point(0, 0)>
  [ 51] setprop 106 ............................. pLocFix = point(0, 0)
  [ 53] pushzero ................................ <0>
  [ 54] pushzero ................................ <0>
  [ 55] pushzero ................................ <0>
  [ 56] pushzero ................................ <0>
  [ 57] pusharglist 4 ........................... <0, 0, 0, 0>
  [ 59] extcall 109 ............................. <rect(0, 0, 0, 0)>
  [ 61] setprop 108 ............................. pUpdateRect = rect(0, 0, 0, 0)
  [ 63] pushzero ................................ <0>
  [ 64] pushzero ................................ <0>
  [ 65] pushzero ................................ <0>
  [ 66] pusharglist 3 ........................... <[0, 0, 0]>
  [ 68] pushlist ................................ <[0, 0, 0]>
  [ 69] setprop 110 ............................. pScreenLoc = [0, 0, 0]
  [ 71] pushzero ................................ <0>
  [ 72] pushzero ................................ <0>
  [ 73] pushzero ................................ <0>
  [ 74] pusharglist 3 ........................... <[0, 0, 0]>
  [ 76] pushlist ................................ <[0, 0, 0]>
  [ 77] setprop 111 ............................. pStartLScreen = [0, 0, 0]
  [ 79] pushzero ................................ <0>
  [ 80] pushzero ................................ <0>
  [ 81] pushzero ................................ <0>
  [ 82] pusharglist 3 ........................... <[0, 0, 0]>
  [ 84] pushlist ................................ <[0, 0, 0]>
  [ 85] setprop 112 ............................. pDestLScreen = [0, 0, 0]
  [ 87] pushzero ................................ <0>
  [ 88] pushzero ................................ <0>
  [ 89] pushzero ................................ <0>
  [ 90] pusharglist 3 ........................... <[0, 0, 0]>
  [ 92] pushlist ................................ <[0, 0, 0]>
  [ 93] setprop 113 ............................. pPreviousLoc = [0, 0, 0]
  [ 95] pushfloat32 0.0 ......................... <0.0>
  [100] setprop 114 ............................. pRestingHeight = 0.0
  [102] pushzero ................................ <0>
  [103] setprop 115 ............................. pAnimCounter = 0
  [105] pushzero ................................ <0>
  [106] setprop 116 ............................. pMoveStart = 0
  [108] pushint16 500 ........................... <500>
  [111] setprop 117 ............................. pMoveTime = 500
  [113] pushzero ................................ <0>
  [114] setprop 118 ............................. pEyesClosed = 0
  [116] pushint8 1 .............................. <1>
  [118] setprop 119 ............................. pSync = 1
  [120] pushint8 1 .............................. <1>
  [122] setprop 120 ............................. pChanges = 1
  [124] pushcons 1 .............................. <"std">
  [126] setprop 121 ............................. pMainAction = "std"
  [128] pushzero ................................ <0>
  [129] setprop 122 ............................. pMoving = 0
  [131] pushzero ................................ <0>
  [132] setprop 123 ............................. pTalking = 0
  [134] pushzero ................................ <0>
  [135] setprop 124 ............................. pCarrying = 0
  [137] pushzero ................................ <0>
  [138] setprop 125 ............................. pSleeping = 0
  [140] pushzero ................................ <0>
  [141] setprop 126 ............................. pDancing = 0
  [143] pushzero ................................ <0>
  [144] setprop 127 ............................. pFx = 0
  [146] pushzero ................................ <0>
  [147] setprop 128 ............................. pWaving = 0
  [149] pushzero ................................ <0>
  [150] setprop 129 ............................. pTrading = 0
  [152] pushzero ................................ <0>
  [153] setprop 130 ............................. pCtrlType = 0
  [155] pushzero ................................ <0>
  [156] setprop 131 ............................. pAnimating = 0
  [158] pushzero ................................ <0>
  [159] setprop 132 ............................. pSwim = 0
  [161] pusharglist 0 ........................... <[:]>
  [163] pushproplist ............................ <[:]>
  [164] setprop 133 ............................. pBadges = [:]
  [166] pushcons 0 .............................. <EMPTY>
  [168] setprop 134 ............................. pCurrentAnim = EMPTY
  [170] pushint16 255 ........................... <255>
  [173] pushint16 255 ........................... <255>
  [176] pushint16 255 ........................... <255>
  [179] pusharglist 3 ........................... <255, 255, 255>
  [181] extcall 136 ............................. <rgb(255, 255, 255)>
  [183] setprop 135 ............................. pAlphaColor = rgb(255, 255, 255)
  [185] pushint8 1 .............................. <1>
  [187] setprop 119 ............................. pSync = 1
  [189] pusharglist 0 ........................... <[:]>
  [191] pushproplist ............................ <[:]>
  [192] setprop 137 ............................. pColors = [:]
  [194] pushzero ................................ <0>
  [195] setprop 138 ............................. pModState = 0
  [197] pusharglist 0 ........................... <[:]>
  [199] pushproplist ............................ <[:]>
  [200] setprop 139 ............................. pExtraObjs = [:]
  [202] pusharglist 0 ........................... <[:]>
  [204] pushproplist ............................ <[:]>
  [205] setprop 140 ............................. pExtraObjsActive = [:]
  [207] pushzero ................................ <0>
  [208] pusharglist 1 ........................... <0>
  [210] extcall 142 ............................. <member(0)>
  [212] setprop 141 ............................. pDefShadowMem = member(0)
  [214] pusharglist 0 ........................... <[:]>
  [216] pushproplist ............................ <[:]>
  [217] setprop 143 ............................. pInfoStruct = [:]
  [219] pushzero ................................ <0>
  [220] setprop 144 ............................. pQueuesWithObj = 0
  [222] pushzero ................................ <0>
  [223] setprop 145 ............................. pXP = 0
  [225] pushsymb 148 ............................ <#room>
  [227] pusharglist 1 ........................... <#room>
  [229] extcall 147 ............................. <getThread(#room)>
  [231] pusharglist 1 ........................... <getThread(#room)>
  [233] objcall 149 ............................. <getThread(#room).getInterface()>
  [235] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [237] objcall 150 ............................. <getThread(#room).getInterface().getGeometry()>
  [239] setprop 146 ............................. pGeometry = getThread(#room).getInterface().getGeometry()
  [241] getprop 146 ............................. <pGeometry>
  [243] getobjprop 151 .......................... <pGeometry.pXFactor>
  [245] setprop 151 ............................. pXFactor = pGeometry.pXFactor
  [247] getprop 146 ............................. <pGeometry>
  [249] getobjprop 152 .......................... <pGeometry.pYFactor>
  [251] setprop 152 ............................. pYFactor = pGeometry.pYFactor
  [253] getprop 146 ............................. <pGeometry>
  [255] getobjprop 153 .......................... <pGeometry.pHFactor>
  [257] setprop 153 ............................. pHFactor = pGeometry.pHFactor
  [259] pushzero ................................ <0>
  [260] setprop 154 ............................. pCorrectLocZ = 0
  [262] pushsymb 148 ............................ <#room>
  [264] pusharglist 1 ........................... <#room>
  [266] extcall 147 ............................. <getThread(#room)>
  [268] pusharglist 1 ........................... <getThread(#room)>
  [270] objcall 157 ............................. <getThread(#room).getComponent()>
  [272] pusharglist 1 ........................... <getThread(#room).getComponent()>
  [274] objcall 158 ............................. <getThread(#room).getComponent().getClassContainer()>
  [276] pushcons 2 .............................. <"bodypart">
  [278] pusharglist 2 ........................... <getThread(#room).getComponent().getClassContainer(), "bodypart">
  [280] objcall 159 ............................. <getThread(#room).getComponent().getClassContainer().GET("bodypart")>
  [282] pusharglist 1 ........................... <getThread(#room).getComponent().getClassContainer().GET("bodypart")>
  [284] extcall 156 ............................. <value(getThread(#room).getComponent().getClassContainer().GET("bodypart"))>
  [286] setprop 155 ............................. pPartClass = value(getThread(#room).getComponent().getClassContainer().GET("bodypart"))
  [288] pusharglist 0 ........................... <>
  [290] extcall 101 ............................. <VOID>
  [292] setprop 160 ............................. pGroupId = VOID
  [294] pusharglist 0 ........................... <>
  [296] extcall 101 ............................. <VOID>
  [298] setprop 161 ............................. pStatusInGroup = VOID
  [300] pushzero ................................ <0>
  [301] setprop 162 ............................. pBaseLocZ = 0
  [303] pushcons 3 .............................. <"human.size.64">
  [305] pusharglist 1 ........................... <"human.size.64">
  [307] extcall 164 ............................. <getVariable("human.size.64")>
  [309] setprop 163 ............................. pPeopleSize = getVariable("human.size.64")
  [311] pusharglist 0 ........................... <[:]>
  [313] pushproplist ............................ <[:]>
  [314] setprop 165 ............................. pRawFigure = [:]
  [316] pushcons 0 .............................. <EMPTY>
  [318] setprop 166 ............................. pPartOrderOld = EMPTY
  [320] pushzero ................................ <0>
  [321] setprop 167 ............................. pUserIsTyping = 0
  [323] pushzero ................................ <0>
  [324] setprop 168 ............................. pUserTypingStartTime = 0
  [326] pushcons 4 .............................. <"Canvas:">
  [328] pusharglist 0 ........................... <>
  [330] extcall 170 ............................. <getUniqueID()>
  [332] joinstr ................................. <"Canvas:" & getUniqueID()>
  [333] setprop 169 ............................. pCanvasName = "Canvas:" & getUniqueID()
  [335] pushcons 5 .............................. <"figure">
  [337] pushcons 6 .............................. <"head">
  [339] pushcons 7 .............................. <"speak">
  [341] pushcons 8 .............................. <"gesture">
  [343] pushcons 9 .............................. <"eye">
  [345] pushcons 10 ............................. <"handRight">
  [347] pushcons 11 ............................. <"handLeft">
  [349] pushcons 12 ............................. <"walk">
  [351] pushcons 13 ............................. <"sit">
  [353] pushcons 14 ............................. <"itemRight">
  [355] pusharglist 10 .......................... <["figure", "head", "speak", "gesture", "eye", "handRight", "handLeft", "walk", "sit", "itemRight"]>
  [357] pushlist ................................ <["figure", "head", "speak", "gesture", "eye", "handRight", "handLeft", "walk", "sit", "itemRight"]>
  [358] setlocal 0 .............................. tSubSetList = ["figure", "head", "speak", "gesture", "eye", "handRight", "handLeft", "walk", "sit", "itemRight"]
  [360] pusharglist 0 ........................... <[:]>
  [362] pushproplist ............................ <[:]>
  [363] setprop 171 ............................. pPartListSubSet = [:]
  [365] getlocal 0 .............................. <tSubSetList>
  [367] peek 0
  [369] pusharglist 1
  [371] extcall 172
  [373] pushint8 1
  [375] peek 0
  [377] peek 2
  [379] lteq
  [380] jmpifz [464] ............................ repeat with tSubSet in tSubSetList
  [383] peek 2
  [385] peek 1
  [387] pusharglist 2
  [389] extcall 173
  [391] setlocal 1
  [393] pushcons 15 ............................. <"human.partset.">
  [395] getlocal 1 .............................. <tSubSet>
  [397] joinstr ................................. <"human.partset." & tSubSet>
  [398] pushcons 16 ............................. <".">
  [400] joinstr ................................. <"human.partset." & tSubSet & ".">
  [401] getprop 163 ............................. <pPeopleSize>
  [403] joinstr ................................. <"human.partset." & tSubSet & "." & pPeopleSize>
  [404] setlocal 2 .............................. tSetName = "human.partset." & tSubSet & "." & pPeopleSize
  [406] getlocal 2 .............................. <tSetName>
  [408] pusharglist 1 ........................... <tSetName>
  [410] extcall 174 ............................. <variableExists(tSetName)>
  [412] not ..................................... <not variableExists(tSetName)>
  [413] jmpifz [445] ............................ if not variableExists(tSetName) then
  [416] getprop 171 ............................. <pPartListSubSet>
  [418] getlocal 1 .............................. <tSubSet>
  [420] pusharglist 0 ........................... <[]>
  [422] pushlist ................................ <[]>
  [423] pusharglistnoret 3 ...................... <pPartListSubSet, tSubSet, []>
  [425] objcall 175 ............................. pPartListSubSet[tSubSet] = []
  [427] getparam 0 .............................. <me>
  [429] getlocal 2 .............................. <tSetName>
  [431] pushcons 17 ............................. <"not found!">
  [433] joinpadstr .............................. <tSetName && "not found!">
  [434] pushsymb 0 .............................. <#construct>
  [436] pushsymb 177 ............................ <#major>
  [438] pusharglistnoret 4 ...................... <me, tSetName && "not found!", #construct, #major>
  [440] extcall 176 ............................. error(me, tSetName && "not found!", #construct, #major)
  [442] jmp [459] ............................... next repeat
  [445] getprop 171 ............................. <pPartListSubSet>
  [447] getlocal 1 .............................. <tSubSet>
  [449] getlocal 2 .............................. <tSetName>
  [451] pusharglist 1 ........................... <tSetName>
  [453] extcall 178 ............................. <getVariableValue(tSetName)>
  [455] pusharglistnoret 3 ...................... <pPartListSubSet, tSubSet, getVariableValue(tSetName)>
  [457] objcall 175 ............................. pPartListSubSet[tSubSet] = getVariableValue(tSetName)
  [459] pushint8 1
  [461] add
  [462] endrepeat [375]
  [464] pop 3
  [466] pushcons 18 ............................. <"human.parts.">
  [468] getprop 163 ............................. <pPeopleSize>
  [470] joinstr ................................. <"human.parts." & pPeopleSize>
  [471] pusharglist 1 ........................... <"human.parts." & pPeopleSize>
  [473] extcall 178 ............................. <getVariableValue("human.parts." & pPeopleSize)>
  [475] setprop 179 ............................. pPartListFull = getVariableValue("human.parts." & pPeopleSize)
  [477] getprop 179 ............................. <pPartListFull>
  [479] pusharglist 1 ........................... <pPartListFull>
  [481] extcall 180 ............................. <ilk(pPartListFull)>
  [483] pushsymb 181 ............................ <#list>
  [485] nteq .................................... <ilk(pPartListFull) <> #list>
  [486] jmpifz [494] ............................ if ilk(pPartListFull) <> #list then
  [489] pusharglist 0 ........................... <[]>
  [491] pushlist ................................ <[]>
  [492] setprop 179 ............................. pPartListFull = []
  [494] pushcons 19 ............................. <"human.parts.flipList">
  [496] pusharglist 1 ........................... <"human.parts.flipList">
  [498] extcall 164 ............................. <getVariable("human.parts.flipList")>
  [500] setprop 182 ............................. pFlipPartList = getVariable("human.parts.flipList")
  [502] getprop 182 ............................. <pFlipPartList>
  [504] pusharglist 1 ........................... <pFlipPartList>
  [506] extcall 180 ............................. <ilk(pFlipPartList)>
  [508] pushsymb 183 ............................ <#propList>
  [510] nteq .................................... <ilk(pFlipPartList) <> #propList>
  [511] jmpifz [519] ............................ if ilk(pFlipPartList) <> #propList then
  [514] pusharglist 0 ........................... <[:]>
  [516] pushproplist ............................ <[:]>
  [517] setprop 182 ............................. pFlipPartList = [:]
  [519] pusharglist 0 ........................... <[:]>
  [521] pushproplist ............................ <[:]>
  [522] setprop 306 ............................. pDrinkEatParams = [:]
  [525] pusharglist 0 ........................... <>
  [527] extcall 101 ............................. <VOID>
  [529] setprop 184 ............................. pPartActionList = VOID
  [531] pushzero ................................ <0>
  [532] setprop 185 ............................. pLeftHandUp = 0
  [534] pushzero ................................ <0>
  [535] setprop 186 ............................. pRightHandUp = 0
  [537] pusharglist 0 ........................... <[]>
  [539] pushlist ................................ <[]>
  [540] setprop 187 ............................. pDrinkEatTimeoutList = []
  [542] pusharglist 0 ........................... <>
  [544] extcall 101 ............................. <VOID>
  [546] setprop 188 ............................. pCarryItemCode = VOID
  [548] pushzero ................................ <0>
  [549] setprop 923 ............................. pGesture = 0
  [552] pushzero ................................ <0>
  [553] setprop 926 ............................. pSitting = 0
  [556] pushzero ................................ <0>
  [557] setprop 927 ............................. pLayingDown = 0
  [560] pushzero ................................ <0>
  [561] setprop 930 ............................. pPersistedFX = 0
  [564] pushint8 1 .............................. <1>
  [566] pusharglistnoret 1 ...................... <1>
  [568] extcall 189 ............................. return 1
  [570] ret
end

on deconstruct me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 101 ............................. <VOID>
  [  4] setprop 146 ............................. pGeometry = VOID
  [  6] pusharglist 0 ........................... <[]>
  [  8] pushlist ................................ <[]>
  [  9] setprop 103 ............................. pPartList = []
  [ 11] pusharglist 0 ........................... <[:]>
  [ 13] pushproplist ............................ <[:]>
  [ 14] setprop 104 ............................. pPartIndex = [:]
  [ 16] pusharglist 0 ........................... <[:]>
  [ 18] pushproplist ............................ <[:]>
  [ 19] setprop 143 ............................. pInfoStruct = [:]
  [ 21] getparam 0 .............................. <me>
  [ 23] pusharglistnoret 1 ...................... <me>
  [ 25] objcall 6 ............................... me.resetSpriteColors()
  [ 27] getprop 195 ............................. <pSprite>
  [ 29] pusharglist 1 ........................... <pSprite>
  [ 31] extcall 194 ............................. <voidp(pSprite)>
  [ 33] not ..................................... <not voidp(pSprite)>
  [ 34] jmpifz [ 45] ............................ if not voidp(pSprite) then
  [ 37] getprop 195 ............................. <pSprite>
  [ 39] getobjprop 197 .......................... <pSprite.spriteNum>
  [ 41] pusharglistnoret 1 ...................... <pSprite.spriteNum>
  [ 43] extcall 196 ............................. releaseSprite(pSprite.spriteNum)
  [ 45] getprop 198 ............................. <pMatteSpr>
  [ 47] pusharglist 1 ........................... <pMatteSpr>
  [ 49] extcall 194 ............................. <voidp(pMatteSpr)>
  [ 51] not ..................................... <not voidp(pMatteSpr)>
  [ 52] jmpifz [ 63] ............................ if not voidp(pMatteSpr) then
  [ 55] getprop 198 ............................. <pMatteSpr>
  [ 57] getobjprop 197 .......................... <pMatteSpr.spriteNum>
  [ 59] pusharglistnoret 1 ...................... <pMatteSpr.spriteNum>
  [ 61] extcall 196 ............................. releaseSprite(pMatteSpr.spriteNum)
  [ 63] getprop 199 ............................. <pShadowSpr>
  [ 65] pusharglist 1 ........................... <pShadowSpr>
  [ 67] extcall 194 ............................. <voidp(pShadowSpr)>
  [ 69] not ..................................... <not voidp(pShadowSpr)>
  [ 70] jmpifz [ 81] ............................ if not voidp(pShadowSpr) then
  [ 73] getprop 199 ............................. <pShadowSpr>
  [ 75] getobjprop 197 .......................... <pShadowSpr.spriteNum>
  [ 77] pusharglistnoret 1 ...................... <pShadowSpr.spriteNum>
  [ 79] extcall 196 ............................. releaseSprite(pShadowSpr.spriteNum)
  [ 81] getprop 200 ............................. <pTypingSprite>
  [ 83] pusharglist 1 ........................... <pTypingSprite>
  [ 85] extcall 194 ............................. <voidp(pTypingSprite)>
  [ 87] not ..................................... <not voidp(pTypingSprite)>
  [ 88] jmpifz [ 99] ............................ if not voidp(pTypingSprite) then
  [ 91] getprop 200 ............................. <pTypingSprite>
  [ 93] getobjprop 197 .......................... <pTypingSprite.spriteNum>
  [ 95] pusharglistnoret 1 ...................... <pTypingSprite.spriteNum>
  [ 97] extcall 196 ............................. releaseSprite(pTypingSprite.spriteNum)
  [ 99] getparam 0 .............................. <me>
  [101] pusharglist 1 ........................... <me>
  [103] objcall 47 .............................. <me.getCanvasName()>
  [105] pusharglist 1 ........................... <me.getCanvasName()>
  [107] extcall 201 ............................. <memberExists(me.getCanvasName())>
  [109] jmpifz [122] ............................ if memberExists(me.getCanvasName()) then
  [112] getparam 0 .............................. <me>
  [114] pusharglist 1 ........................... <me>
  [116] objcall 47 .............................. <me.getCanvasName()>
  [118] pusharglistnoret 1 ...................... <me.getCanvasName()>
  [120] extcall 202 ............................. removeMember(me.getCanvasName())
  [122] getprop 204 ............................. <pFXManager>
  [124] pusharglist 1 ........................... <pFXManager>
  [126] extcall 203 ............................. <objectp(pFXManager)>
  [128] jmpifz [137] ............................ if objectp(pFXManager) then
  [131] getprop 204 ............................. <pFXManager>
  [133] pusharglistnoret 1 ...................... <pFXManager>
  [135] objcall 1 ............................... pFXManager.deconstruct()
  [137] pusharglist 0 ........................... <>
  [139] extcall 101 ............................. <VOID>
  [141] setprop 204 ............................. pFXManager = VOID
  [143] pushzero ................................ <0>
  [144] setprop 127 ............................. pFx = 0
  [146] pushsymb 1 .............................. <#deconstruct>
  [148] getprop 139 ............................. <pExtraObjs>
  [150] pusharglistnoret 2 ...................... <#deconstruct, pExtraObjs>
  [152] extcall 205 ............................. call(#deconstruct, pExtraObjs)
  [154] pusharglist 0 ........................... <[:]>
  [156] pushproplist ............................ <[:]>
  [157] setprop 140 ............................. pExtraObjsActive = [:]
  [159] pusharglist 0 ........................... <>
  [161] extcall 101 ............................. <VOID>
  [163] setprop 139 ............................. pExtraObjs = VOID
  [165] pusharglist 0 ........................... <>
  [167] extcall 101 ............................. <VOID>
  [169] setprop 199 ............................. pShadowSpr = VOID
  [171] pusharglist 0 ........................... <>
  [173] extcall 101 ............................. <VOID>
  [175] setprop 198 ............................. pMatteSpr = VOID
  [177] pusharglist 0 ........................... <>
  [179] extcall 101 ............................. <VOID>
  [181] setprop 195 ............................. pSprite = VOID
  [183] pushcons 20 ............................. <"wavetimeout">
  [185] getparam 0 .............................. <me>
  [187] pusharglist 1 ........................... <me>
  [189] objcall 207 ............................. <me.getID()>
  [191] joinstr ................................. <"wavetimeout" & me.getID()>
  [192] pusharglist 1 ........................... <"wavetimeout" & me.getID()>
  [194] extcall 206 ............................. <timeout("wavetimeout" & me.getID())>
  [196] pusharglistnoret 1 ...................... <timeout("wavetimeout" & me.getID())>
  [198] objcall 208 ............................. timeout("wavetimeout" & me.getID()).forget()
  [200] getprop 187 ............................. <pDrinkEatTimeoutList>
  [202] peek 0
  [204] pusharglist 1
  [206] extcall 172
  [208] pushint8 1
  [210] peek 0
  [212] peek 2
  [214] lteq
  [215] jmpifz [243] ............................ repeat with tName in pDrinkEatTimeoutList
  [218] peek 2
  [220] peek 1
  [222] pusharglist 2
  [224] extcall 173
  [226] setlocal 0
  [228] getlocal 0 .............................. <tName>
  [230] pusharglist 1 ........................... <tName>
  [232] extcall 206 ............................. <timeout(tName)>
  [234] pusharglistnoret 1 ...................... <timeout(tName)>
  [236] objcall 208 ............................. timeout(tName).forget()
  [238] pushint8 1
  [240] add
  [241] endrepeat [210]
  [243] pop 3
  [245] pushint8 1 .............................. <1>
  [247] pusharglistnoret 1 ...................... <1>
  [249] extcall 189 ............................. return 1
  [251] ret
end

on define me, tdata
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tdata>
  [  4] pusharglistnoret 2 ...................... <me, tdata>
  [  6] objcall 4 ............................... me.setup(tdata)
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglist 1 ........................... <me>
  [ 12] objcall 47 .............................. <me.getCanvasName()>
  [ 14] pusharglist 1 ........................... <me.getCanvasName()>
  [ 16] extcall 201 ............................. <memberExists(me.getCanvasName())>
  [ 18] not ..................................... <not memberExists(me.getCanvasName())>
  [ 19] jmpifz [ 34] ............................ if not memberExists(me.getCanvasName()) then
  [ 22] getparam 0 .............................. <me>
  [ 24] pusharglist 1 ........................... <me>
  [ 26] objcall 47 .............................. <me.getCanvasName()>
  [ 28] pushsymb 211 ............................ <#bitmap>
  [ 30] pusharglistnoret 2 ...................... <me.getCanvasName(), #bitmap>
  [ 32] extcall 210 ............................. createMember(me.getCanvasName(), #bitmap)
  [ 34] getprop 212 ............................. <pCanvasSize>
  [ 36] pushsymb 213 ............................ <#std>
  [ 38] pusharglist 2 ........................... <pCanvasSize, #std>
  [ 40] objcall 173 ............................. <pCanvasSize[#std]>
  [ 42] setlocal 0 .............................. tSize = pCanvasSize[#std]
  [ 44] getparam 0 .............................. <me>
  [ 46] pusharglist 1 ........................... <me>
  [ 48] objcall 47 .............................. <me.getCanvasName()>
  [ 50] pusharglist 1 ........................... <me.getCanvasName()>
  [ 52] extcall 215 ............................. <getmemnum(me.getCanvasName())>
  [ 54] pusharglist 1 ........................... <getmemnum(me.getCanvasName())>
  [ 56] extcall 142 ............................. <member(getmemnum(me.getCanvasName()))>
  [ 58] setprop 214 ............................. pMember = member(getmemnum(me.getCanvasName()))
  [ 60] getprop 214 ............................. <pMember>
  [ 62] getlocal 0 .............................. <tSize>
  [ 64] pushint8 1 .............................. <1>
  [ 66] pusharglist 2 ........................... <tSize, 1>
  [ 68] objcall 173 ............................. <tSize[1]>
  [ 70] getlocal 0 .............................. <tSize>
  [ 72] pushint8 2 .............................. <2>
  [ 74] pusharglist 2 ........................... <tSize, 2>
  [ 76] objcall 173 ............................. <tSize[2]>
  [ 78] getlocal 0 .............................. <tSize>
  [ 80] pushint8 3 .............................. <3>
  [ 82] pusharglist 2 ........................... <tSize, 3>
  [ 84] objcall 173 ............................. <tSize[3]>
  [ 86] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [ 88] extcall 216 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [ 90] setobjprop 216 .......................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [ 92] getprop 214 ............................. <pMember>
  [ 94] pushzero ................................ <0>
  [ 95] getprop 214 ............................. <pMember>
  [ 97] getchainedprop 216 ...................... <pMember.image>
  [ 99] getobjprop 217 .......................... <pMember.image.height>
  [101] getlocal 0 .............................. <tSize>
  [103] pushint8 4 .............................. <4>
  [105] pusharglist 2 ........................... <tSize, 4>
  [107] objcall 173 ............................. <tSize[4]>
  [109] add ..................................... <pMember.image.height + tSize[4]>
  [110] pusharglist 2 ........................... <0, pMember.image.height + tSize[4]>
  [112] extcall 107 ............................. <point(0, pMember.image.height + tSize[4])>
  [114] setobjprop 218 .......................... pMember.regPoint = point(0, pMember.image.height + tSize[4])
  [116] getprop 214 ............................. <pMember>
  [118] getchainedprop 216 ...................... <pMember.image>
  [120] pusharglist 1 ........................... <pMember.image>
  [122] objcall 220 ............................. <pMember.image.duplicate()>
  [124] setprop 219 ............................. pBuffer = pMember.image.duplicate()
  [126] getparam 0 .............................. <me>
  [128] pusharglist 1 ........................... <me>
  [130] objcall 207 ............................. <me.getID()>
  [132] pusharglist 1 ........................... <me.getID()>
  [134] extcall 222 ............................. <reserveSprite(me.getID())>
  [136] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [138] extcall 221 ............................. <sprite(reserveSprite(me.getID()))>
  [140] setprop 195 ............................. pSprite = sprite(reserveSprite(me.getID()))
  [142] getprop 195 ............................. <pSprite>
  [144] getprop 214 ............................. <pMember>
  [146] getobjprop 223 .......................... <pMember.number>
  [148] setobjprop 224 .......................... pSprite.castNum = pMember.number
  [150] getprop 195 ............................. <pSprite>
  [152] getprop 214 ............................. <pMember>
  [154] getobjprop 225 .......................... <pMember.width>
  [156] setobjprop 225 .......................... pSprite.width = pMember.width
  [158] getprop 195 ............................. <pSprite>
  [160] getprop 214 ............................. <pMember>
  [162] getobjprop 217 .......................... <pMember.height>
  [164] setobjprop 217 .......................... pSprite.height = pMember.height
  [166] getparam 0 .............................. <me>
  [168] pusharglist 1 ........................... <me>
  [170] objcall 207 ............................. <me.getID()>
  [172] pusharglist 1 ........................... <me.getID()>
  [174] extcall 222 ............................. <reserveSprite(me.getID())>
  [176] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [178] extcall 221 ............................. <sprite(reserveSprite(me.getID()))>
  [180] setprop 198 ............................. pMatteSpr = sprite(reserveSprite(me.getID()))
  [182] getprop 198 ............................. <pMatteSpr>
  [184] getprop 214 ............................. <pMember>
  [186] getobjprop 223 .......................... <pMember.number>
  [188] setobjprop 224 .......................... pMatteSpr.castNum = pMember.number
  [190] pushzero ................................ <0>
  [191] setprop 226 ............................. pShadowFix = 0
  [193] getprop 163 ............................. <pPeopleSize>
  [195] pushcons 21 ............................. <"_std_sd_1_0_0">
  [197] joinstr ................................. <pPeopleSize & "_std_sd_1_0_0">
  [198] pusharglist 1 ........................... <pPeopleSize & "_std_sd_1_0_0">
  [200] extcall 215 ............................. <getmemnum(pPeopleSize & "_std_sd_1_0_0")>
  [202] pusharglist 1 ........................... <getmemnum(pPeopleSize & "_std_sd_1_0_0")>
  [204] extcall 142 ............................. <member(getmemnum(pPeopleSize & "_std_sd_1_0_0"))>
  [206] setprop 141 ............................. pDefShadowMem = member(getmemnum(pPeopleSize & "_std_sd_1_0_0"))
  [208] pushsymb 148 ............................ <#room>
  [210] pusharglist 1 ........................... <#room>
  [212] extcall 147 ............................. <getThread(#room)>
  [214] pusharglist 1 ........................... <getThread(#room)>
  [216] objcall 149 ............................. <getThread(#room).getInterface()>
  [218] pusharglist 1 ........................... <getThread(#room).getInterface()>
  [220] objcall 207 ............................. <getThread(#room).getInterface().getID()>
  [222] setlocal 1 .............................. tTargetID = getThread(#room).getInterface().getID()
  [224] getprop 198 ............................. <pMatteSpr>
  [226] getobjprop 197 .......................... <pMatteSpr.spriteNum>
  [228] getparam 0 .............................. <me>
  [230] pusharglist 1 ........................... <me>
  [232] objcall 207 ............................. <me.getID()>
  [234] pusharglistnoret 2 ...................... <pMatteSpr.spriteNum, me.getID()>
  [236] extcall 227 ............................. setEventBroker(pMatteSpr.spriteNum, me.getID())
  [238] getprop 198 ............................. <pMatteSpr>
  [240] pushsymb 228 ............................ <#eventProcUserObj>
  [242] getlocal 1 .............................. <tTargetID>
  [244] pushsymb 229 ............................ <#mouseDown>
  [246] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [248] objcall 230 ............................. pMatteSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [250] getprop 198 ............................. <pMatteSpr>
  [252] pushsymb 231 ............................ <#eventProcUserRollOver>
  [254] getlocal 1 .............................. <tTargetID>
  [256] pushsymb 232 ............................ <#mouseEnter>
  [258] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseEnter>
  [260] objcall 230 ............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseEnter)
  [262] getprop 198 ............................. <pMatteSpr>
  [264] pushsymb 231 ............................ <#eventProcUserRollOver>
  [266] getlocal 1 .............................. <tTargetID>
  [268] pushsymb 233 ............................ <#mouseLeave>
  [270] pusharglistnoret 4 ...................... <pMatteSpr, #eventProcUserRollOver, tTargetID, #mouseLeave>
  [272] objcall 230 ............................. pMatteSpr.registerProcedure(#eventProcUserRollOver, tTargetID, #mouseLeave)
  [274] getparam 0 .............................. <me>
  [276] pusharglist 1 ........................... <me>
  [278] objcall 207 ............................. <me.getID()>
  [280] pusharglist 1 ........................... <me.getID()>
  [282] extcall 222 ............................. <reserveSprite(me.getID())>
  [284] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [286] extcall 221 ............................. <sprite(reserveSprite(me.getID()))>
  [288] setprop 199 ............................. pShadowSpr = sprite(reserveSprite(me.getID()))
  [290] getprop 199 ............................. <pShadowSpr>
  [292] pusharglist 1 ........................... <pShadowSpr>
  [294] extcall 180 ............................. <ilk(pShadowSpr)>
  [296] pushsymb 221 ............................ <#sprite>
  [298] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [299] jmpifz [328] ............................ if ilk(pShadowSpr) = #sprite then
  [302] getprop 199 ............................. <pShadowSpr>
  [304] getobjprop 197 .......................... <pShadowSpr.spriteNum>
  [306] getparam 0 .............................. <me>
  [308] pusharglist 1 ........................... <me>
  [310] objcall 207 ............................. <me.getID()>
  [312] pusharglistnoret 2 ...................... <pShadowSpr.spriteNum, me.getID()>
  [314] extcall 227 ............................. setEventBroker(pShadowSpr.spriteNum, me.getID())
  [316] getprop 199 ............................. <pShadowSpr>
  [318] pushsymb 228 ............................ <#eventProcUserObj>
  [320] getlocal 1 .............................. <tTargetID>
  [322] pushsymb 229 ............................ <#mouseDown>
  [324] pusharglistnoret 4 ...................... <pShadowSpr, #eventProcUserObj, tTargetID, #mouseDown>
  [326] objcall 230 ............................. pShadowSpr.registerProcedure(#eventProcUserObj, tTargetID, #mouseDown)
  [328] getparam 0 .............................. <me>
  [330] pusharglistnoret 1 ...................... <me>
  [332] objcall 6 ............................... me.resetSpriteColors()
  [334] getprop 143 ............................. <pInfoStruct>
  [336] pushsymb 234 ............................ <#name>
  [338] getprop 102 ............................. <pName>
  [340] pusharglistnoret 3 ...................... <pInfoStruct, #name, pName>
  [342] objcall 175 ............................. pInfoStruct[#name] = pName
  [344] getprop 143 ............................. <pInfoStruct>
  [346] pushsymb 235 ............................ <#class>
  [348] getprop 236 ............................. <pClass>
  [350] pusharglistnoret 3 ...................... <pInfoStruct, #class, pClass>
  [352] objcall 175 ............................. pInfoStruct[#class] = pClass
  [354] getprop 143 ............................. <pInfoStruct>
  [356] pushsymb 237 ............................ <#custom>
  [358] getprop 238 ............................. <pCustom>
  [360] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [362] objcall 175 ............................. pInfoStruct[#custom] = pCustom
  [364] getprop 143 ............................. <pInfoStruct>
  [366] pushsymb 216 ............................ <#image>
  [368] getparam 0 .............................. <me>
  [370] pusharglist 1 ........................... <me>
  [372] objcall 19 .............................. <me.getPicture()>
  [374] pusharglistnoret 3 ...................... <pInfoStruct, #image, me.getPicture()>
  [376] objcall 175 ............................. pInfoStruct[#image] = me.getPicture()
  [378] getprop 143 ............................. <pInfoStruct>
  [380] pushsymb 239 ............................ <#ctrl>
  [382] pushcons 22 ............................. <"furniture">
  [384] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, "furniture">
  [386] objcall 175 ............................. pInfoStruct[#ctrl] = "furniture"
  [388] getprop 143 ............................. <pInfoStruct>
  [390] pushsymb 240 ............................ <#badges>
  [392] pusharglist 0 ........................... <[:]>
  [394] pushproplist ............................ <[:]>
  [395] pusharglistnoret 3 ...................... <pInfoStruct, #badges, [:]>
  [397] objcall 175 ............................. pInfoStruct[#badges] = [:]
  [399] pushsymb 148 ............................ <#room>
  [401] pusharglist 1 ........................... <#room>
  [403] extcall 147 ............................. <getThread(#room)>
  [405] setlocal 2 .............................. tThread = getThread(#room)
  [407] getlocal 2 .............................. <tThread>
  [409] pushzero ................................ <0>
  [410] nteq .................................... <tThread <> 0>
  [411] jmpifz [501] ............................ if tThread <> 0 then
  [414] getlocal 2 .............................. <tThread>
  [416] pusharglist 1 ........................... <tThread>
  [418] objcall 149 ............................. <tThread.getInterface()>
  [420] setlocal 3 .............................. tInterface = tThread.getInterface()
  [422] getlocal 3 .............................. <tInterface>
  [424] pushzero ................................ <0>
  [425] nteq .................................... <tInterface <> 0>
  [426] jmpifz [501] ............................ if tInterface <> 0 then
  [429] getlocal 2 .............................. <tThread>
  [431] pusharglist 1 ........................... <tThread>
  [433] objcall 149 ............................. <tThread.getInterface()>
  [435] pusharglist 1 ........................... <tThread.getInterface()>
  [437] objcall 241 ............................. <tThread.getInterface().getRoomVisualizer()>
  [439] setlocal 4 .............................. tViz = tThread.getInterface().getRoomVisualizer()
  [441] getlocal 4 .............................. <tViz>
  [443] pushzero ................................ <0>
  [444] nteq .................................... <tViz <> 0>
  [445] jmpifz [501] ............................ if tViz <> 0 then
  [448] getlocal 4 .............................. <tViz>
  [450] getparam 1 .............................. <tdata>
  [452] pushsymb 242 ............................ <#x>
  [454] pusharglist 2 ........................... <tdata, #x>
  [456] objcall 173 ............................. <tdata[#x]>
  [458] getparam 1 .............................. <tdata>
  [460] pushsymb 243 ............................ <#y>
  [462] pusharglist 2 ........................... <tdata, #y>
  [464] objcall 173 ............................. <tdata[#y]>
  [466] pushsymb 244 ............................ <#wallleft>
  [468] pushsymb 245 ............................ <#wallright>
  [470] pusharglist 2 ........................... <[#wallleft, #wallright]>
  [472] pushlist ................................ <[#wallleft, #wallright]>
  [473] pusharglist 4 ........................... <tViz, tdata[#x], tdata[#y], [#wallleft, #wallright]>
  [475] objcall 246 ............................. <tViz.getPartAtLocation(tdata[#x], tdata[#y], [#wallleft, #wallright])>
  [477] setlocal 5 .............................. tPart = tViz.getPartAtLocation(tdata[#x], tdata[#y], [#wallleft, #wallright])
  [479] getlocal 5 .............................. <tPart>
  [481] pushzero ................................ <0>
  [482] eq ...................................... <tPart = 0>
  [483] not ..................................... <not (tPart = 0)>
  [484] jmpifz [501] ............................ if not (tPart = 0) then
  [487] getlocal 5 .............................. <tPart>
  [489] pushsymb 247 ............................ <#locZ>
  [491] pusharglist 2 ........................... <tPart, #locZ>
  [493] objcall 173 ............................. <tPart[#locZ]>
  [495] pushint16 1000 .......................... <1000>
  [498] sub ..................................... <tPart[#locZ] - 1000>
  [499] setprop 162 ............................. pBaseLocZ = tPart[#locZ] - 1000
  [501] pushint8 1 .............................. <1>
  [503] pusharglistnoret 1 ...................... <1>
  [505] extcall 189 ............................. return 1
  [507] ret
end

on changeFigureAndData me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 101 ............................. <VOID>
  [  6] nteq .................................... <tdata <> VOID>
  [  7] jmpifz [ 53] ............................ if tdata <> VOID then / else
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 256 ............................ <#sex>
  [ 15] pusharglist 2 ........................... <tdata, #sex>
  [ 17] objcall 173 ............................. <tdata[#sex]>
  [ 19] setprop 255 ............................. pSex = tdata[#sex]
  [ 21] getparam 1 .............................. <tdata>
  [ 23] pushsymb 237 ............................ <#custom>
  [ 25] pusharglist 2 ........................... <tdata, #custom>
  [ 27] objcall 173 ............................. <tdata[#custom]>
  [ 29] setprop 238 ............................. pCustom = tdata[#custom]
  [ 31] getparam 1 .............................. <tdata>
  [ 33] pushsymb 257 ............................ <#figure>
  [ 36] pusharglist 2 ........................... <tdata, #figure>
  [ 38] objcall 173 ............................. <tdata[#figure]>
  [ 40] setlocal 0 .............................. tmodels = tdata[#figure]
  [ 42] getparam 0 .............................. <me>
  [ 44] getlocal 0 .............................. <tmodels>
  [ 46] pusharglistnoret 2 ...................... <me, tmodels>
  [ 48] objcall 44 .............................. me.setPartLists(tmodels)
  [ 50] jmp [ 59]
  [ 53] getparam 0 .............................. <me>
  [ 55] pusharglistnoret 1 ...................... <me>
  [ 57] objcall 44 .............................. me.setPartLists()
  [ 59] pushcons 0 .............................. <EMPTY>
  [ 61] setprop 166 ............................. pPartOrderOld = EMPTY
  [ 63] getparam 0 .............................. <me>
  [ 65] pusharglistnoret 1 ...................... <me>
  [ 67] objcall 45 .............................. me.arrangeParts()
  [ 69] getprop 131 ............................. <pAnimating>
  [ 71] setlocal 1 .............................. tAnimating = pAnimating
  [ 73] getparam 0 .............................. <me>
  [ 75] pusharglistnoret 1 ...................... <me>
  [ 77] objcall 34 .............................. me.resumeAnimation()
  [ 79] getlocal 1 .............................. <tAnimating>
  [ 81] setprop 131 ............................. pAnimating = tAnimating
  [ 83] pushint8 1 .............................. <1>
  [ 85] setprop 120 ............................. pChanges = 1
  [ 87] getparam 0 .............................. <me>
  [ 89] pushint8 1 .............................. <1>
  [ 91] pusharglistnoret 2 ...................... <me, 1>
  [ 93] objcall 39 .............................. me.render(1)
  [ 95] getparam 0 .............................. <me>
  [ 97] pusharglistnoret 1 ...................... <me>
  [ 99] objcall 40 .............................. me.reDraw()
  [101] getprop 143 ............................. <pInfoStruct>
  [103] pushsymb 216 ............................ <#image>
  [105] getparam 0 .............................. <me>
  [107] pusharglist 1 ........................... <me>
  [109] objcall 19 .............................. <me.getPicture()>
  [111] pusharglistnoret 3 ...................... <pInfoStruct, #image, me.getPicture()>
  [113] objcall 175 ............................. pInfoStruct[#image] = me.getPicture()
  [115] ret
end

on setup me, tdata
  [  0] getparam 1 .............................. <tdata>
  [  2] pushsymb 234 ............................ <#name>
  [  4] pusharglist 2 ........................... <tdata, #name>
  [  6] objcall 173 ............................. <tdata[#name]>
  [  8] setprop 102 ............................. pName = tdata[#name]
  [ 10] getparam 1 .............................. <tdata>
  [ 12] pushsymb 235 ............................ <#class>
  [ 14] pusharglist 2 ........................... <tdata, #class>
  [ 16] objcall 173 ............................. <tdata[#class]>
  [ 18] setprop 236 ............................. pClass = tdata[#class]
  [ 20] getparam 1 .............................. <tdata>
  [ 22] pushsymb 237 ............................ <#custom>
  [ 24] pusharglist 2 ........................... <tdata, #custom>
  [ 26] objcall 173 ............................. <tdata[#custom]>
  [ 28] setprop 238 ............................. pCustom = tdata[#custom]
  [ 30] getparam 1 .............................. <tdata>
  [ 32] pushsymb 256 ............................ <#sex>
  [ 35] pusharglist 2 ........................... <tdata, #sex>
  [ 37] objcall 173 ............................. <tdata[#sex]>
  [ 39] setprop 255 ............................. pSex = tdata[#sex]
  [ 41] getparam 1 .............................. <tdata>
  [ 43] pushsymb 261 ............................ <#direction>
  [ 46] pusharglist 2 ........................... <tdata, #direction>
  [ 48] objcall 173 ............................. <tdata[#direction]>
  [ 50] pushint8 1 .............................. <1>
  [ 52] pusharglist 2 ........................... <tdata[#direction], 1>
  [ 54] objcall 173 ............................. <tdata[#direction][1]>
  [ 56] setprop 260 ............................. pDirection = tdata[#direction][1]
  [ 59] getprop 260 ............................. <pDirection>
  [ 62] setprop 262 ............................. pHeadDir = pDirection
  [ 65] getprop 260 ............................. <pDirection>
  [ 68] setprop 263 ............................. pLastDir = pDirection
  [ 71] getparam 1 .............................. <tdata>
  [ 73] pushsymb 242 ............................ <#x>
  [ 75] pusharglist 2 ........................... <tdata, #x>
  [ 77] objcall 173 ............................. <tdata[#x]>
  [ 79] setprop 264 ............................. pLocX = tdata[#x]
  [ 82] getparam 1 .............................. <tdata>
  [ 84] pushsymb 243 ............................ <#y>
  [ 86] pusharglist 2 ........................... <tdata, #y>
  [ 88] objcall 173 ............................. <tdata[#y]>
  [ 90] setprop 265 ............................. pLocY = tdata[#y]
  [ 93] getparam 1 .............................. <tdata>
  [ 95] pushsymb 267 ............................ <#h>
  [ 98] pusharglist 2 ........................... <tdata, #h>
  [100] objcall 173 ............................. <tdata[#h]>
  [102] setprop 266 ............................. pLocH = tdata[#h]
  [105] getparam 1 .............................. <tdata>
  [107] pushsymb 268 ............................ <#badge>
  [110] pusharglist 2 ........................... <tdata, #badge>
  [112] objcall 173 ............................. <tdata[#badge]>
  [114] setprop 133 ............................. pBadges = tdata[#badge]
  [116] getparam 1 .............................. <tdata>
  [118] pushsymb 269 ............................ <#groupID>
  [121] pusharglist 2 ........................... <tdata, #groupID>
  [123] objcall 173 ............................. <tdata[#groupID]>
  [125] setprop 160 ............................. pGroupId = tdata[#groupID]
  [127] getparam 1 .............................. <tdata>
  [129] pushsymb 270 ............................ <#groupstatus>
  [132] pusharglist 2 ........................... <tdata, #groupstatus>
  [134] objcall 173 ............................. <tdata[#groupstatus]>
  [136] setprop 161 ............................. pStatusInGroup = tdata[#groupstatus]
  [138] getparam 1 .............................. <tdata>
  [140] pushsymb 271 ............................ <#xp>
  [143] pusharglist 2 ........................... <tdata, #xp>
  [145] objcall 272 ............................. <tdata.getaProp(#xp)>
  [148] setprop 145 ............................. pXP = tdata.getaProp(#xp)
  [150] getparam 1 .............................. <tdata>
  [152] pushsymb 273 ............................ <#webID>
  [155] pusharglist 2 ........................... <tdata, #webID>
  [157] objcall 272 ............................. <tdata.getaProp(#webID)>
  [160] pusharglist 1 ........................... <tdata.getaProp(#webID)>
  [162] extcall 194 ............................. <voidp(tdata.getaProp(#webID))>
  [164] not ..................................... <not voidp(tdata.getaProp(#webID))>
  [165] jmpifz [179] ............................ if not voidp(tdata.getaProp(#webID)) then
  [168] getparam 1 .............................. <tdata>
  [170] pushsymb 273 ............................ <#webID>
  [173] pusharglist 2 ........................... <tdata, #webID>
  [175] objcall 173 ............................. <tdata[#webID]>
  [177] setprop 100 ............................. pWebID = tdata[#webID]
  [179] pushcons 23 ............................. <"human.size.">
  [181] getprop 151 ............................. <pXFactor>
  [183] pusharglist 1 ........................... <pXFactor>
  [185] extcall 274 ............................. <integer(pXFactor)>
  [188] joinstr ................................. <"human.size." & integer(pXFactor)>
  [189] pusharglist 1 ........................... <"human.size." & integer(pXFactor)>
  [191] extcall 164 ............................. <getVariable("human.size." & integer(pXFactor))>
  [193] setprop 163 ............................. pPeopleSize = getVariable("human.size." & integer(pXFactor))
  [195] getprop 163 ............................. <pPeopleSize>
  [197] not ..................................... <not pPeopleSize>
  [198] jmpifz [218] ............................ if not pPeopleSize then
  [201] getparam 0 .............................. <me>
  [203] pushcons 24 ............................. <"People size not found, using default!">
  [205] pushsymb 4 .............................. <#setup>
  [207] pushsymb 275 ............................ <#minor>
  [210] pusharglistnoret 4 ...................... <me, "People size not found, using default!", #setup, #minor>
  [212] extcall 176 ............................. error(me, "People size not found, using default!", #setup, #minor)
  [214] pushcons 25 ............................. <"h">
  [216] setprop 163 ............................. pPeopleSize = "h"
  [218] pushsymb 277 ............................ <#session>
  [221] pusharglist 1 ........................... <#session>
  [223] extcall 276 ............................. <getObject(#session)>
  [226] pushcons 26 ............................. <"lastroom">
  [228] pusharglist 2 ........................... <getObject(#session), "lastroom">
  [230] objcall 159 ............................. <getObject(#session).GET("lastroom")>
  [232] setlocal 0 .............................. tRoomStruct = getObject(#session).GET("lastroom")
  [234] getlocal 0 .............................. <tRoomStruct>
  [236] pusharglist 1 ........................... <tRoomStruct>
  [238] extcall 278 ............................. <listp(tRoomStruct)>
  [241] not ..................................... <not listp(tRoomStruct)>
  [242] jmpifz [263] ............................ if not listp(tRoomStruct) then / else
  [245] getparam 0 .............................. <me>
  [247] pushcons 27 ............................. <"Room struct not saved in #session!">
  [249] pushsymb 0 .............................. <#construct>
  [251] pusharglistnoret 3 ...................... <me, "Room struct not saved in #session!", #construct>
  [253] extcall 176 ............................. error(me, "Room struct not saved in #session!", #construct)
  [255] pushsymb 279 ............................ <#public>
  [258] setlocal 1 .............................. ttype = #public
  [260] jmp [275]
  [263] getlocal 0 .............................. <tRoomStruct>
  [265] pushsymb 280 ............................ <#type>
  [268] pusharglist 2 ........................... <tRoomStruct, #type>
  [270] objcall 272 ............................. <tRoomStruct.getaProp(#type)>
  [273] setlocal 1 .............................. ttype = tRoomStruct.getaProp(#type)
  [275] getlocal 1 .............................. <ttype>
  [277] pushsymb 281 ............................ <#private>
  [280] eq ...................................... <ttype = #private>
  [281] jmpifz [291] ............................ if ttype = #private then / else
  [284] pushint8 1 .............................. <1>
  [286] setprop 154 ............................. pCorrectLocZ = 1
  [288] jmp [294]
  [291] pushzero ................................ <0>
  [292] setprop 154 ............................. pCorrectLocZ = 0
  [294] pushcons 28 ............................. <"human.canvas.">
  [296] getprop 163 ............................. <pPeopleSize>
  [298] joinstr ................................. <"human.canvas." & pPeopleSize>
  [299] pusharglist 1 ........................... <"human.canvas." & pPeopleSize>
  [301] extcall 164 ............................. <getVariable("human.canvas." & pPeopleSize)>
  [303] pusharglist 1 ........................... <getVariable("human.canvas." & pPeopleSize)>
  [305] extcall 156 ............................. <value(getVariable("human.canvas." & pPeopleSize))>
  [307] setprop 212 ............................. pCanvasSize = value(getVariable("human.canvas." & pPeopleSize))
  [309] getprop 212 ............................. <pCanvasSize>
  [311] not ..................................... <not pCanvasSize>
  [312] jmpifz [362] ............................ if not pCanvasSize then
  [315] getparam 0 .............................. <me>
  [317] pushcons 29 ............................. <"Canvas size not found, using default!">
  [319] pushsymb 4 .............................. <#setup>
  [321] pushsymb 275 ............................ <#minor>
  [324] pusharglistnoret 4 ...................... <me, "Canvas size not found, using default!", #setup, #minor>
  [326] extcall 176 ............................. error(me, "Canvas size not found, using default!", #setup, #minor)
  [328] pushsymb 213 ............................ <#std>
  [330] pushint8 64 ............................. <64>
  [332] pushint8 102 ............................ <102>
  [334] pushint8 32 ............................. <32>
  [336] pushint8 10 ............................. <10>
  [338] inv ..................................... <-10>
  [339] pusharglist 4 ........................... <[64, 102, 32, -10]>
  [341] pushlist ................................ <[64, 102, 32, -10]>
  [342] pushsymb 282 ............................ <#lay>
  [345] pushint8 89 ............................. <89>
  [347] pushint8 102 ............................ <102>
  [349] pushint8 32 ............................. <32>
  [351] pushint8 8 .............................. <8>
  [353] inv ..................................... <-8>
  [354] pusharglist 4 ........................... <[89, 102, 32, -8]>
  [356] pushlist ................................ <[89, 102, 32, -8]>
  [357] pusharglist 4 ........................... <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [359] pushproplist ............................ <[#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]>
  [360] setprop 212 ............................. pCanvasSize = [#std: [64, 102, 32, -10], #lay: [89, 102, 32, -8]]
  [362] getparam 0 .............................. <me>
  [364] getparam 1 .............................. <tdata>
  [366] pushsymb 257 ............................ <#figure>
  [369] pusharglist 2 ........................... <tdata, #figure>
  [371] objcall 173 ............................. <tdata[#figure]>
  [373] pusharglist 2 ........................... <me, tdata[#figure]>
  [375] objcall 44 .............................. <me.setPartLists(tdata[#figure])>
  [377] not ..................................... <not me.setPartLists(tdata[#figure])>
  [378] jmpifz [397] ............................ if not me.setPartLists(tdata[#figure]) then
  [381] getparam 0 .............................. <me>
  [383] pushcons 30 ............................. <"Couldn't create part lists!">
  [385] pushsymb 4 .............................. <#setup>
  [387] pushsymb 177 ............................ <#major>
  [389] pusharglist 4 ........................... <me, "Couldn't create part lists!", #setup, #major>
  [391] extcall 176 ............................. <error(me, "Couldn't create part lists!", #setup, #major)>
  [393] pusharglistnoret 1 ...................... <error(me, "Couldn't create part lists!", #setup, #major)>
  [395] extcall 189 ............................. return error(me, "Couldn't create part lists!", #setup, #major)
  [397] getparam 0 .............................. <me>
  [399] getprop 264 ............................. <pLocX>
  [402] getprop 265 ............................. <pLocY>
  [405] getprop 266 ............................. <pLocH>
  [408] getprop 262 ............................. <pHeadDir>
  [411] getprop 260 ............................. <pDirection>
  [414] pusharglistnoret 6 ...................... <me, pLocX, pLocY, pLocH, pHeadDir, pDirection>
  [416] objcall 7 ............................... me.resetValues(pLocX, pLocY, pLocH, pHeadDir, pDirection)
  [418] getparam 0 .............................. <me>
  [420] getprop 264 ............................. <pLocX>
  [423] getprop 265 ............................. <pLocY>
  [426] getprop 266 ............................. <pLocH>
  [429] getprop 260 ............................. <pDirection>
  [432] pusharglistnoret 5 ...................... <me, pLocX, pLocY, pLocH, pDirection>
  [434] objcall 8 ............................... me.Refresh(pLocX, pLocY, pLocH, pDirection)
  [436] pushzero ................................ <0>
  [437] setprop 119 ............................. pSync = 0
  [439] ret
end

on update me
  [  0] getprop 144 ............................. <pQueuesWithObj>
  [  2] jmpifz [ 20] ............................ if pQueuesWithObj then / else
  [  5] getparam 0 .............................. <me>
  [  7] pusharglistnoret 1 ...................... <me>
  [  9] objcall 38 .............................. me.prepare()
  [ 11] getparam 0 .............................. <me>
  [ 13] pusharglistnoret 1 ...................... <me>
  [ 15] objcall 39 .............................. me.render()
  [ 17] jmp [ 45]
  [ 20] getprop 119 ............................. <pSync>
  [ 22] not ..................................... <not pSync>
  [ 23] setprop 119 ............................. pSync = not pSync
  [ 25] getprop 119 ............................. <pSync>
  [ 27] jmpifz [ 39] ............................ if pSync then / else
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglistnoret 1 ...................... <me>
  [ 34] objcall 38 .............................. me.prepare()
  [ 36] jmp [ 45]
  [ 39] getparam 0 .............................. <me>
  [ 41] pusharglistnoret 1 ...................... <me>
  [ 43] objcall 39 .............................. me.render()
  [ 45] ret
end

on resetSpriteColors me
  [  0] getprop 195 ............................. <pSprite>
  [  2] pusharglist 1 ........................... <pSprite>
  [  4] extcall 180 ............................. <ilk(pSprite)>
  [  6] pushsymb 221 ............................ <#sprite>
  [  8] eq ...................................... <ilk(pSprite) = #sprite>
  [  9] jmpifz [ 45] ............................ if ilk(pSprite) = #sprite then
  [ 12] getprop 195 ............................. <pSprite>
  [ 14] pushint8 36 ............................. <36>
  [ 16] setobjprop 285 .......................... pSprite.ink = 36
  [ 19] getprop 195 ............................. <pSprite>
  [ 21] pushint8 100 ............................ <100>
  [ 23] setobjprop 286 .......................... pSprite.blend = 100
  [ 26] getprop 195 ............................. <pSprite>
  [ 28] pushzero ................................ <0>
  [ 29] pusharglist 1 ........................... <0>
  [ 31] extcall 287 ............................. <paletteIndex(0)>
  [ 34] setobjprop 288 .......................... pSprite.bgColor = paletteIndex(0)
  [ 37] getprop 195 ............................. <pSprite>
  [ 39] pushint16 255 ........................... <255>
  [ 42] setobjprop 289 .......................... pSprite.foreColor = 255
  [ 45] getprop 198 ............................. <pMatteSpr>
  [ 47] pusharglist 1 ........................... <pMatteSpr>
  [ 49] extcall 180 ............................. <ilk(pMatteSpr)>
  [ 51] pushsymb 221 ............................ <#sprite>
  [ 53] eq ...................................... <ilk(pMatteSpr) = #sprite>
  [ 54] jmpifz [ 89] ............................ if ilk(pMatteSpr) = #sprite then
  [ 57] getprop 198 ............................. <pMatteSpr>
  [ 59] pushint8 8 .............................. <8>
  [ 61] setobjprop 285 .......................... pMatteSpr.ink = 8
  [ 64] getprop 198 ............................. <pMatteSpr>
  [ 66] pushzero ................................ <0>
  [ 67] setobjprop 286 .......................... pMatteSpr.blend = 0
  [ 70] getprop 198 ............................. <pMatteSpr>
  [ 72] pushzero ................................ <0>
  [ 73] pusharglist 1 ........................... <0>
  [ 75] extcall 287 ............................. <paletteIndex(0)>
  [ 78] setobjprop 288 .......................... pMatteSpr.bgColor = paletteIndex(0)
  [ 81] getprop 198 ............................. <pMatteSpr>
  [ 83] pushint16 255 ........................... <255>
  [ 86] setobjprop 289 .......................... pMatteSpr.foreColor = 255
  [ 89] getprop 199 ............................. <pShadowSpr>
  [ 91] pusharglist 1 ........................... <pShadowSpr>
  [ 93] extcall 180 ............................. <ilk(pShadowSpr)>
  [ 95] pushsymb 221 ............................ <#sprite>
  [ 97] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [ 98] jmpifz [134] ............................ if ilk(pShadowSpr) = #sprite then
  [101] getprop 199 ............................. <pShadowSpr>
  [103] pushint8 16 ............................. <16>
  [105] setobjprop 286 .......................... pShadowSpr.blend = 16
  [108] getprop 199 ............................. <pShadowSpr>
  [110] pushint8 8 .............................. <8>
  [112] setobjprop 285 .......................... pShadowSpr.ink = 8
  [115] getprop 199 ............................. <pShadowSpr>
  [117] pushzero ................................ <0>
  [118] pusharglist 1 ........................... <0>
  [120] extcall 287 ............................. <paletteIndex(0)>
  [123] setobjprop 288 .......................... pShadowSpr.bgColor = paletteIndex(0)
  [126] getprop 199 ............................. <pShadowSpr>
  [128] pushint16 255 ........................... <255>
  [131] setobjprop 289 .......................... pShadowSpr.foreColor = 255
  [134] ret
end

on resetValues me, tX, tY, tH, tDirHead, tDirBody, tActionList
  [  0] getparam 6 .............................. <tActionList>
  [  2] pusharglist 0 ........................... <>
  [  4] extcall 101 ............................. <VOID>
  [  6] eq ...................................... <tActionList = VOID>
  [  7] jmpifz [ 15] ............................ if tActionList = VOID then
  [ 10] pusharglist 0 ........................... <[]>
  [ 12] pushlist ................................ <[]>
  [ 13] setparam 6 .............................. tActionList = []
  [ 15] getprop 144 ............................. <pQueuesWithObj>
  [ 17] getprop 113 ............................. <pPreviousLoc>
  [ 19] getparam 1 .............................. <tX>
  [ 21] getparam 2 .............................. <tY>
  [ 23] getparam 3 .............................. <tH>
  [ 25] pusharglist 3 ........................... <[tX, tY, tH]>
  [ 27] pushlist ................................ <[tX, tY, tH]>
  [ 28] eq ...................................... <pPreviousLoc = [tX, tY, tH]>
  [ 29] and ..................................... <pQueuesWithObj and (pPreviousLoc = [tX, tY, tH])>
  [ 30] jmpifz [ 39] ............................ if pQueuesWithObj and (pPreviousLoc = [tX, tY, tH]) then
  [ 33] pushint8 1 .............................. <1>
  [ 35] pusharglistnoret 1 ...................... <1>
  [ 37] extcall 189 ............................. return 1
  [ 39] getprop 126 ............................. <pDancing>
  [ 41] setlocal 0 .............................. tWasDancing = pDancing
  [ 43] pushzero ................................ <0>
  [ 44] setprop 122 ............................. pMoving = 0
  [ 46] getparam 6 .............................. <tActionList>
  [ 48] pushcons 31 ............................. <"trd">
  [ 50] pusharglist 2 ........................... <tActionList, "trd">
  [ 52] objcall 290 ............................. <tActionList.findPos("trd")>
  [ 55] pushzero ................................ <0>
  [ 56] gt ...................................... <tActionList.findPos("trd") > 0>
  [ 57] setprop 129 ............................. pTrading = tActionList.findPos("trd") > 0
  [ 59] pushzero ................................ <0>
  [ 60] setprop 130 ............................. pCtrlType = 0
  [ 62] getprop 126 ............................. <pDancing>
  [ 64] getprop 127 ............................. <pFx>
  [ 66] or ...................................... <pDancing or pFx>
  [ 67] setprop 131 ............................. pAnimating = pDancing or pFx
  [ 69] pushzero ................................ <0>
  [ 70] setprop 138 ............................. pModState = 0
  [ 72] pushzero ................................ <0>
  [ 73] setprop 144 ............................. pQueuesWithObj = 0
  [ 75] getlocal 0 .............................. <tWasDancing>
  [ 77] getprop 126 ............................. <pDancing>
  [ 79] not ..................................... <not pDancing>
  [ 80] and ..................................... <tWasDancing and not pDancing>
  [ 81] jmpifz [ 92] ............................ if tWasDancing and not pDancing then
  [ 84] pushsymb 292 ............................ <#updateInfoStandButtons>
  [ 87] pusharglistnoret 1 ...................... <#updateInfoStandButtons>
  [ 89] extcall 291 ............................. executeMessage(#updateInfoStandButtons)
  [ 92] pushint8 1 .............................. <1>
  [ 94] setlocal 1
  [ 96] getlocal 1
  [ 98] getprop 140 ............................. <pExtraObjsActive>
  [100] getobjprop 172 .......................... <pExtraObjsActive.count>
  [102] lteq
  [103] jmpifz [139] ............................ repeat with i = 1 to pExtraObjsActive.count
  [106] getprop 140 ............................. <pExtraObjsActive>
  [108] getlocal 1 .............................. <i>
  [110] pusharglist 2 ........................... <pExtraObjsActive, i>
  [112] objcall 293 ............................. <pExtraObjsActive.getPropAt(i)>
  [115] pushcons 32 ............................. <"IG_ICON">
  [117] nteq .................................... <pExtraObjsActive.getPropAt(i) <> "IG_ICON">
  [118] jmpifz [130] ............................ if pExtraObjsActive.getPropAt(i) <> "IG_ICON" then
  [121] getprop 140 ............................. <pExtraObjsActive>
  [123] getlocal 1 .............................. <i>
  [125] pushzero ................................ <0>
  [126] pusharglistnoret 3 ...................... <pExtraObjsActive, i, 0>
  [128] objcall 175 ............................. pExtraObjsActive[i] = 0
  [130] pushint8 1
  [132] getlocal 1
  [134] add
  [135] setlocal 1
  [137] endrepeat [ 96]
  [139] pushint8 1 .............................. <1>
  [141] inv ..................................... <-1>
  [142] pushint8 2 .............................. <2>
  [144] pusharglist 2 ........................... <-1, 2>
  [146] extcall 107 ............................. <point(-1, 2)>
  [148] setprop 106 ............................. pLocFix = point(-1, 2)
  [150] pushsymb 294 ............................ <#reset>
  [153] getprop 103 ............................. <pPartList>
  [155] pusharglistnoret 2 ...................... <#reset, pPartList>
  [157] extcall 205 ............................. call(#reset, pPartList)
  [159] getprop 146 ............................. <pGeometry>
  [161] pusharglist 0 ........................... <>
  [163] extcall 101 ............................. <VOID>
  [165] nteq .................................... <pGeometry <> VOID>
  [166] jmpifz [184] ............................ if pGeometry <> VOID then
  [169] getprop 146 ............................. <pGeometry>
  [171] getparam 1 .............................. <tX>
  [173] getparam 2 .............................. <tY>
  [175] getparam 3 .............................. <tH>
  [177] pusharglist 4 ........................... <pGeometry, tX, tY, tH>
  [179] objcall 295 ............................. <pGeometry.getScreenCoordinate(tX, tY, tH)>
  [182] setprop 110 ............................. pScreenLoc = pGeometry.getScreenCoordinate(tX, tY, tH)
  [184] getparam 1 .............................. <tX>
  [186] setprop 264 ............................. pLocX = tX
  [189] getparam 2 .............................. <tY>
  [191] setprop 265 ............................. pLocY = tY
  [194] getparam 3 .............................. <tH>
  [196] setprop 266 ............................. pLocH = tH
  [199] pushfloat32 0.0 ......................... <0.0>
  [204] setprop 114 ............................. pRestingHeight = 0.0
  [206] getparam 5 .............................. <tDirBody>
  [208] getparam 0 .............................. <me>
  [210] pusharglist 1 ........................... <me>
  [212] objcall 89 .............................. <me.getEffectDirOffset()>
  [214] add ..................................... <tDirBody + me.getEffectDirOffset()>
  [215] pushint8 8 .............................. <8>
  [217] mod ..................................... <(tDirBody + me.getEffectDirOffset()) mod 8>
  [218] setprop 260 ............................. pDirection = (tDirBody + me.getEffectDirOffset()) mod 8
  [221] getparam 4 .............................. <tDirHead>
  [223] getparam 0 .............................. <me>
  [225] pusharglist 1 ........................... <me>
  [227] objcall 89 .............................. <me.getEffectDirOffset()>
  [229] add ..................................... <tDirHead + me.getEffectDirOffset()>
  [230] pushint8 8 .............................. <8>
  [232] mod ..................................... <(tDirHead + me.getEffectDirOffset()) mod 8>
  [233] setprop 262 ............................. pHeadDir = (tDirHead + me.getEffectDirOffset()) mod 8
  [236] getparam 0 .............................. <me>
  [238] pusharglistnoret 1 ...................... <me>
  [240] objcall 50 .............................. me.resetAction()
  [242] getprop 139 ............................. <pExtraObjs>
  [244] getobjprop 172 .......................... <pExtraObjs.count>
  [246] pushzero ................................ <0>
  [247] gt ...................................... <pExtraObjs.count > 0>
  [248] jmpifz [259] ............................ if pExtraObjs.count > 0 then
  [251] pushsymb 8 .............................. <#Refresh>
  [253] getprop 139 ............................. <pExtraObjs>
  [255] pusharglistnoret 2 ...................... <#Refresh, pExtraObjs>
  [257] extcall 205 ............................. call(#Refresh, pExtraObjs)
  [259] ret
end

on Refresh me, tX, tY, tH
  [  0] getprop 144 ............................. <pQueuesWithObj>
  [  2] getprop 113 ............................. <pPreviousLoc>
  [  4] getparam 1 .............................. <tX>
  [  6] getparam 2 .............................. <tY>
  [  8] getparam 3 .............................. <tH>
  [ 10] pusharglist 3 ........................... <[tX, tY, tH]>
  [ 12] pushlist ................................ <[tX, tY, tH]>
  [ 13] eq ...................................... <pPreviousLoc = [tX, tY, tH]>
  [ 14] and ..................................... <pQueuesWithObj and (pPreviousLoc = [tX, tY, tH])>
  [ 15] jmpifz [ 24] ............................ if pQueuesWithObj and (pPreviousLoc = [tX, tY, tH]) then
  [ 18] pushint8 1 .............................. <1>
  [ 20] pusharglistnoret 1 ...................... <1>
  [ 22] extcall 189 ............................. return 1
  [ 24] getprop 127 ............................. <pFx>
  [ 26] pushzero ................................ <0>
  [ 27] gt ...................................... <pFx > 0>
  [ 28] getprop 126 ............................. <pDancing>
  [ 30] pushzero ................................ <0>
  [ 31] gt ...................................... <pDancing > 0>
  [ 32] or ...................................... <(pFx > 0) or (pDancing > 0)>
  [ 33] getprop 121 ............................. <pMainAction>
  [ 35] pushcons 33 ............................. <"lay">
  [ 37] eq ...................................... <pMainAction = "lay">
  [ 38] or ...................................... <(pFx > 0) or (pDancing > 0) or (pMainAction = "lay")>
  [ 39] jmpifz [ 48] ............................ if (pFx > 0) or (pDancing > 0) or (pMainAction = "lay") then
  [ 42] getprop 260 ............................. <pDirection>
  [ 45] setprop 262 ............................. pHeadDir = pDirection
  [ 48] pushsymb 304 ............................ <#defineDir>
  [ 51] getprop 103 ............................. <pPartList>
  [ 53] getprop 260 ............................. <pDirection>
  [ 56] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [ 58] extcall 205 ............................. call(#defineDir, pPartList, pDirection)
  [ 60] pushsymb 305 ............................ <#defineDirMultiple>
  [ 63] getprop 103 ............................. <pPartList>
  [ 65] getprop 262 ............................. <pHeadDir>
  [ 68] getprop 171 ............................. <pPartListSubSet>
  [ 70] pushcons 6 .............................. <"head">
  [ 72] pusharglist 2 ........................... <pPartListSubSet, "head">
  [ 74] objcall 173 ............................. <pPartListSubSet["head"]>
  [ 76] pusharglistnoret 4 ...................... <#defineDirMultiple, pPartList, pHeadDir, pPartListSubSet["head"]>
  [ 78] extcall 205 ............................. call(#defineDirMultiple, pPartList, pHeadDir, pPartListSubSet["head"])
  [ 80] getprop 124 ............................. <pCarrying>
  [ 82] pushzero ................................ <0>
  [ 83] nteq .................................... <pCarrying <> 0>
  [ 84] jmpifz [130] ............................ if pCarrying <> 0 then
  [ 87] pushcons 34 ............................. <"action_">
  [ 89] getprop 306 ............................. <pDrinkEatParams>
  [ 92] pushsymb 307 ............................ <#action>
  [ 95] pusharglist 2 ........................... <pDrinkEatParams, #action>
  [ 97] objcall 173 ............................. <pDrinkEatParams[#action]>
  [ 99] joinstr ................................. <"action_" & pDrinkEatParams[#action]>
  [100] getparam 0 .............................. <me>
  [102] pusharglist 1 ........................... <[me]>
  [104] pushlist ................................ <[me]>
  [105] getprop 306 ............................. <pDrinkEatParams>
  [108] pushsymb 307 ............................ <#action>
  [111] pusharglist 2 ........................... <pDrinkEatParams, #action>
  [113] objcall 173 ............................. <pDrinkEatParams[#action]>
  [115] getprop 306 ............................. <pDrinkEatParams>
  [118] pushsymb 308 ............................ <#params>
  [121] pusharglist 2 ........................... <pDrinkEatParams, #params>
  [123] objcall 173 ............................. <pDrinkEatParams[#params]>
  [125] joinpadstr .............................. <pDrinkEatParams[#action] && pDrinkEatParams[#params]>
  [126] pusharglistnoret 3 ...................... <"action_" & pDrinkEatParams[#action], [me], pDrinkEatParams[#action] && pDrinkEatParams[#params]>
  [128] extcall 205 ............................. call("action_" & pDrinkEatParams[#action], [me], pDrinkEatParams[#action] && pDrinkEatParams[#params])
  [130] getprop 923 ............................. <pGesture>
  [133] pushzero ................................ <0>
  [134] nteq .................................... <pGesture <> 0>
  [135] jmpifz [155] ............................ if pGesture <> 0 then
  [138] pushcons 35 ............................. <"action_gest">
  [140] getparam 0 .............................. <me>
  [142] pusharglist 1 ........................... <[me]>
  [144] pushlist ................................ <[me]>
  [145] pushcons 36 ............................. <"gest ">
  [147] getprop 923 ............................. <pGesture>
  [150] joinpadstr .............................. <"gest " && pGesture>
  [151] pusharglistnoret 3 ...................... <"action_gest", [me], "gest " && pGesture>
  [153] extcall 205 ............................. call("action_gest", [me], "gest " && pGesture)
  [155] getparam 0 .............................. <me>
  [157] pusharglistnoret 1 ...................... <me>
  [159] objcall 45 .............................. me.arrangeParts()
  [161] pushint8 1 .............................. <1>
  [163] setlocal 0 .............................. i = 1
  [165] getlocal 0 .............................. <i>
  [167] getprop 140 ............................. <pExtraObjsActive>
  [169] getobjprop 172 .......................... <pExtraObjsActive.count>
  [171] lteq .................................... <i <= pExtraObjsActive.count>
  [172] jmpifz [230] ............................ repeat while i <= pExtraObjsActive.count
  [175] getprop 140 ............................. <pExtraObjsActive>
  [177] getlocal 0 .............................. <i>
  [179] pusharglist 2 ........................... <pExtraObjsActive, i>
  [181] objcall 173 ............................. <pExtraObjsActive[i]>
  [183] pushzero ................................ <0>
  [184] eq ...................................... <pExtraObjsActive[i] = 0>
  [185] jmpifz [221] ............................ if pExtraObjsActive[i] = 0 then
  [188] getprop 139 ............................. <pExtraObjs>
  [190] getlocal 0 .............................. <i>
  [192] pusharglist 2 ........................... <pExtraObjs, i>
  [194] objcall 173 ............................. <pExtraObjs[i]>
  [196] pusharglistnoret 1 ...................... <pExtraObjs[i]>
  [198] objcall 1 ............................... pExtraObjs[i].deconstruct()
  [200] getprop 139 ............................. <pExtraObjs>
  [202] getlocal 0 .............................. <i>
  [204] pusharglistnoret 2 ...................... <pExtraObjs, i>
  [206] objcall 309 ............................. pExtraObjs.deleteAt(i)
  [209] getprop 140 ............................. <pExtraObjsActive>
  [211] getlocal 0 .............................. <i>
  [213] pusharglistnoret 2 ...................... <pExtraObjsActive, i>
  [215] objcall 309 ............................. pExtraObjsActive.deleteAt(i)
  [218] jmp [228] ............................... next repeat
  [221] getlocal 0 .............................. <i>
  [223] pushint8 1 .............................. <1>
  [225] add ..................................... <i + 1>
  [226] setlocal 0 .............................. i = i + 1
  [228] endrepeat [165]
  [230] pushint8 1 .............................. <1>
  [232] setprop 120 ............................. pChanges = 1
  [234] ret
end

on select me
  [  0] pushint8 1 .............................. <1>
  [  2] pusharglistnoret 1 ...................... <1>
  [  4] extcall 189 ............................. return 1
  [  6] ret
end

on getName me
  [  0] getprop 102 ............................. <pName>
  [  2] pusharglistnoret 1 ...................... <pName>
  [  4] extcall 189 ............................. return pName
  [  6] ret
end

on getClass me
  [  0] pushcons 37 ............................. <"user">
  [  2] pusharglistnoret 1 ...................... <"user">
  [  4] extcall 189 ............................. return "user"
  [  6] ret
end

on getCustom me
  [  0] getprop 238 ............................. <pCustom>
  [  2] pusharglistnoret 1 ...................... <pCustom>
  [  4] extcall 189 ............................. return pCustom
  [  6] ret
end

on getLocation me
  [  0] getprop 264 ............................. <pLocX>
  [  3] getprop 265 ............................. <pLocY>
  [  6] getprop 266 ............................. <pLocH>
  [  9] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [ 11] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [ 12] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [ 14] extcall 189 ............................. return [pLocX, pLocY, pLocH]
  [ 16] ret
end

on getScrLocation me
  [  0] getprop 110 ............................. <pScreenLoc>
  [  2] pusharglistnoret 1 ...................... <pScreenLoc>
  [  4] extcall 189 ............................. return pScreenLoc
  [  6] ret
end

on getTileCenter me
  [  0] getprop 110 ............................. <pScreenLoc>
  [  2] pushint8 1 .............................. <1>
  [  4] pusharglist 2 ........................... <pScreenLoc, 1>
  [  6] objcall 173 ............................. <pScreenLoc[1]>
  [  8] getprop 151 ............................. <pXFactor>
  [ 10] pushint8 2 .............................. <2>
  [ 12] div ..................................... <pXFactor / 2>
  [ 13] add ..................................... <pScreenLoc[1] + (pXFactor / 2)>
  [ 14] getprop 110 ............................. <pScreenLoc>
  [ 16] pushint8 2 .............................. <2>
  [ 18] pusharglist 2 ........................... <pScreenLoc, 2>
  [ 20] objcall 173 ............................. <pScreenLoc[2]>
  [ 22] pusharglist 2 ........................... <pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2]>
  [ 24] extcall 107 ............................. <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 26] pusharglistnoret 1 ...................... <point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])>
  [ 28] extcall 189 ............................. return point(pScreenLoc[1] + (pXFactor / 2), pScreenLoc[2])
  [ 30] ret
end

on getPartLocation me, tPart
  [  0] getprop 104 ............................. <pPartIndex>
  [  2] getparam 1 .............................. <tPart>
  [  4] pusharglist 2 ........................... <pPartIndex, tPart>
  [  6] objcall 173 ............................. <pPartIndex[tPart]>
  [  8] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 10] extcall 194 ............................. <voidp(pPartIndex[tPart])>
  [ 12] jmpifz [ 23] ............................ if voidp(pPartIndex[tPart]) then
  [ 15] pusharglist 0 ........................... <>
  [ 17] extcall 101 ............................. <VOID>
  [ 19] pusharglistnoret 1 ...................... <VOID>
  [ 21] extcall 189 ............................. return VOID
  [ 23] getprop 103 ............................. <pPartList>
  [ 25] getprop 104 ............................. <pPartIndex>
  [ 27] getparam 1 .............................. <tPart>
  [ 29] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 31] objcall 173 ............................. <pPartIndex[tPart]>
  [ 33] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 35] objcall 173 ............................. <pPartList[pPartIndex[tPart]]>
  [ 37] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 39] objcall 13 .............................. <pPartList[pPartIndex[tPart]].getLocation()>
  [ 41] setlocal 0 .............................. tPartLoc = pPartList[pPartIndex[tPart]].getLocation()
  [ 43] getprop 121 ............................. <pMainAction>
  [ 45] pushcons 33 ............................. <"lay">
  [ 47] nteq .................................... <pMainAction <> "lay">
  [ 48] jmpifz [ 64] ............................ if pMainAction <> "lay" then / else
  [ 51] getprop 195 ............................. <pSprite>
  [ 53] getobjprop 310 .......................... <pSprite.loc>
  [ 56] getlocal 0 .............................. <tPartLoc>
  [ 58] add ..................................... <pSprite.loc + tPartLoc>
  [ 59] setlocal 1 .............................. tloc = pSprite.loc + tPartLoc
  [ 61] jmp [108]
  [ 64] getprop 195 ............................. <pSprite>
  [ 66] pushsymb 109 ............................ <#rect>
  [ 68] pushint8 1 .............................. <1>
  [ 70] pusharglist 3 ........................... <pSprite, #rect, 1>
  [ 72] objcall 311 ............................. <pSprite.rect[1]>
  [ 75] getprop 195 ............................. <pSprite>
  [ 77] getobjprop 225 .......................... <pSprite.width>
  [ 79] pushint8 2 .............................. <2>
  [ 81] div ..................................... <pSprite.width / 2>
  [ 82] add ..................................... <pSprite.rect[1] + (pSprite.width / 2)>
  [ 83] getprop 195 ............................. <pSprite>
  [ 85] pushsymb 109 ............................ <#rect>
  [ 87] pushint8 2 .............................. <2>
  [ 89] pusharglist 3 ........................... <pSprite, #rect, 2>
  [ 91] objcall 311 ............................. <pSprite.rect[2]>
  [ 94] getprop 195 ............................. <pSprite>
  [ 96] getobjprop 217 .......................... <pSprite.height>
  [ 98] pushint8 2 .............................. <2>
  [100] div ..................................... <pSprite.height / 2>
  [101] add ..................................... <pSprite.rect[2] + (pSprite.height / 2)>
  [102] pusharglist 2 ........................... <pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2)>
  [104] extcall 107 ............................. <point(pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2))>
  [106] setlocal 1 .............................. tloc = point(pSprite.rect[1] + (pSprite.width / 2), pSprite.rect[2] + (pSprite.height / 2))
  [108] getlocal 1 .............................. <tloc>
  [110] pusharglistnoret 1 ...................... <tloc>
  [112] extcall 189 ............................. return tloc
  [114] ret
end

on getDirection me
  [  0] getprop 260 ............................. <pDirection>
  [  3] pusharglistnoret 1 ...................... <pDirection>
  [  5] extcall 189 ............................. return pDirection
  [  7] ret
end

on getPartColor me, tPart
  [  0] getprop 104 ............................. <pPartIndex>
  [  2] getparam 1 .............................. <tPart>
  [  4] pusharglist 2 ........................... <pPartIndex, tPart>
  [  6] objcall 173 ............................. <pPartIndex[tPart]>
  [  8] pusharglist 1 ........................... <pPartIndex[tPart]>
  [ 10] extcall 194 ............................. <voidp(pPartIndex[tPart])>
  [ 12] jmpifz [ 23] ............................ if voidp(pPartIndex[tPart]) then
  [ 15] pusharglist 0 ........................... <>
  [ 17] extcall 101 ............................. <VOID>
  [ 19] pusharglistnoret 1 ...................... <VOID>
  [ 21] extcall 189 ............................. return VOID
  [ 23] getprop 103 ............................. <pPartList>
  [ 25] getprop 104 ............................. <pPartIndex>
  [ 27] getparam 1 .............................. <tPart>
  [ 29] pusharglist 2 ........................... <pPartIndex, tPart>
  [ 31] objcall 173 ............................. <pPartIndex[tPart]>
  [ 33] pusharglist 2 ........................... <pPartList, pPartIndex[tPart]>
  [ 35] objcall 173 ............................. <pPartList[pPartIndex[tPart]]>
  [ 37] pusharglist 1 ........................... <pPartList[pPartIndex[tPart]]>
  [ 39] objcall 314 ............................. <pPartList[pPartIndex[tPart]].getColor()>
  [ 42] pusharglistnoret 1 ...................... <pPartList[pPartIndex[tPart]].getColor()>
  [ 44] extcall 189 ............................. return pPartList[pPartIndex[tPart]].getColor()
  [ 46] ret
end

on getPicture me, tImg
  [  0] getparam 0 .............................. <me>
  [  2] pushsymb 315 ............................ <#Full>
  [  5] getparam 1 .............................. <tImg>
  [  7] pushint8 4 .............................. <4>
  [  9] pushcons 25 ............................. <"h">
  [ 11] pusharglist 5 ........................... <me, #Full, tImg, 4, "h">
  [ 13] objcall 20 .............................. <me.getPartialPicture(#Full, tImg, 4, "h")>
  [ 15] pusharglistnoret 1 ...................... <me.getPartialPicture(#Full, tImg, 4, "h")>
  [ 17] extcall 189 ............................. return me.getPartialPicture(#Full, tImg, 4, "h")
  [ 19] ret
end

on getPartialPicture me, tPartList, tImg, tDirection, tPeopleSize
  [  0] getparam 1 .............................. <tPartList>
  [  2] getobjprop 180 .......................... <tPartList.ilk>
  [  4] pushsymb 181 ............................ <#list>
  [  6] nteq .................................... <tPartList.ilk <> #list>
  [  7] jmpifz [108] ............................ if tPartList.ilk <> #list then
  [ 10] pushcons 0 .............................. <EMPTY>
  [ 12] setlocal 0 .............................. tPartName = EMPTY
  [ 14] getparam 1 .............................. <tPartList>
  [ 16] pushsymb 317 ............................ <#head>
  [ 19] eq ...................................... <tPartList = #head>
  [ 20] jmpifz [ 36] ............................ if tPartList = #head then / else
  [ 23] getprop 171 ............................. <pPartListSubSet>
  [ 25] pushcons 6 .............................. <"head">
  [ 27] pusharglist 2 ........................... <pPartListSubSet, "head">
  [ 29] objcall 173 ............................. <pPartListSubSet["head"]>
  [ 31] setparam 1 .............................. tPartList = pPartListSubSet["head"]
  [ 33] jmp [ 92]
  [ 36] getparam 1 .............................. <tPartList>
  [ 38] pushsymb 315 ............................ <#Full>
  [ 41] eq ...................................... <tPartList = #Full>
  [ 42] jmpifz [ 55] ............................ if tPartList = #Full then / else
  [ 45] pushcons 18 ............................. <"human.parts.">
  [ 47] getprop 163 ............................. <pPeopleSize>
  [ 49] joinstr ................................. <"human.parts." & pPeopleSize>
  [ 50] setlocal 0 .............................. tPartName = "human.parts." & pPeopleSize
  [ 52] jmp [ 71]
  [ 55] getparam 1 .............................. <tPartList>
  [ 57] pushsymb 318 ............................ <#swimmer>
  [ 60] eq ...................................... <tPartList = #swimmer>
  [ 61] jmpifz [ 71] ............................ if tPartList = #swimmer then
  [ 64] pushcons 38 ............................. <"swimmer.parts.">
  [ 66] getprop 163 ............................. <pPeopleSize>
  [ 68] joinstr ................................. <"swimmer.parts." & pPeopleSize>
  [ 69] setlocal 0 .............................. tPartName = "swimmer.parts." & pPeopleSize
  [ 71] getlocal 0 .............................. <tPartName>
  [ 73] pusharglist 1 ........................... <tPartName>
  [ 75] extcall 174 ............................. <variableExists(tPartName)>
  [ 77] jmpifz [ 92] ............................ if variableExists(tPartName) then
  [ 80] getlocal 0 .............................. <tPartName>
  [ 82] pusharglist 1 ........................... <tPartName>
  [ 84] extcall 164 ............................. <getVariable(tPartName)>
  [ 86] pusharglist 1 ........................... <getVariable(tPartName)>
  [ 88] extcall 156 ............................. <value(getVariable(tPartName))>
  [ 90] setparam 1 .............................. tPartList = value(getVariable(tPartName))
  [ 92] getparam 1 .............................. <tPartList>
  [ 94] getobjprop 180 .......................... <tPartList.ilk>
  [ 96] pushsymb 181 ............................ <#list>
  [ 98] nteq .................................... <tPartList.ilk <> #list>
  [ 99] jmpifz [108] ............................ if tPartList.ilk <> #list then
  [102] getparam 2 .............................. <tImg>
  [104] pusharglistnoret 1 ...................... <tImg>
  [106] extcall 189 ............................. return tImg
  [108] getparam 2 .............................. <tImg>
  [110] pusharglist 1 ........................... <tImg>
  [112] extcall 194 ............................. <voidp(tImg)>
  [114] jmpifz [132] ............................ if voidp(tImg) then / else
  [117] pushint8 64 ............................. <64>
  [119] pushint8 102 ............................ <102>
  [121] pushint8 32 ............................. <32>
  [123] pusharglist 3 ........................... <64, 102, 32>
  [125] extcall 216 ............................. <image(64, 102, 32)>
  [127] setlocal 1 .............................. tCanvas = image(64, 102, 32)
  [129] jmp [136]
  [132] getparam 2 .............................. <tImg>
  [134] setlocal 1 .............................. tCanvas = tImg
  [136] getparam 3 .............................. <tDirection>
  [138] pusharglist 1 ........................... <tDirection>
  [140] extcall 194 ............................. <voidp(tDirection)>
  [142] jmpifz [150] ............................ if voidp(tDirection) then
  [145] getprop 260 ............................. <pDirection>
  [148] setparam 3 .............................. tDirection = pDirection
  [150] getparam 4 .............................. <tPeopleSize>
  [152] pusharglist 1 ........................... <tPeopleSize>
  [154] extcall 194 ............................. <voidp(tPeopleSize)>
  [156] jmpifz [163] ............................ if voidp(tPeopleSize) then
  [159] getprop 163 ............................. <pPeopleSize>
  [161] setparam 4 .............................. tPeopleSize = pPeopleSize
  [163] pushcons 16 ............................. <".">
  [165] getparam 3 .............................. <tDirection>
  [167] joinstr ................................. <"." & tDirection>
  [168] setlocal 2 .............................. tDirData = "." & tDirection
  [170] pusharglist 0 ........................... <[]>
  [172] pushlist ................................ <[]>
  [173] setlocal 3 .............................. tTempPartList = []
  [175] pushcons 18 ............................. <"human.parts.">
  [177] getprop 163 ............................. <pPeopleSize>
  [179] joinstr ................................. <"human.parts." & pPeopleSize>
  [180] getlocal 2 .............................. <tDirData>
  [182] joinstr ................................. <"human.parts." & pPeopleSize & tDirData>
  [183] setlocal 4 .............................. tPartOrder = "human.parts." & pPeopleSize & tDirData
  [185] getlocal 4 .............................. <tPartOrder>
  [187] pusharglist 1 ........................... <tPartOrder>
  [189] extcall 174 ............................. <variableExists(tPartOrder)>
  [191] not ..................................... <not variableExists(tPartOrder)>
  [192] jmpifz [282] ............................ if not variableExists(tPartOrder) then / else
  [195] getparam 0 .............................. <me>
  [197] pushcons 39 ............................. <"No human part order found">
  [199] getlocal 4 .............................. <tPartOrder>
  [201] joinpadstr .............................. <"No human part order found" && tPartOrder>
  [202] pushsymb 20 ............................. <#getPartialPicture>
  [204] pushsymb 177 ............................ <#major>
  [206] pusharglistnoret 4 ...................... <me, "No human part order found" && tPartOrder, #getPartialPicture, #major>
  [208] extcall 176 ............................. error(me, "No human part order found" && tPartOrder, #getPartialPicture, #major)
  [210] pushint8 1 .............................. <1>
  [212] setlocal 5
  [214] getlocal 5
  [216] getprop 104 ............................. <pPartIndex>
  [218] getobjprop 172 .......................... <pPartIndex.count>
  [220] lteq
  [221] jmpifz [279] ............................ repeat with i = 1 to pPartIndex.count
  [224] getprop 104 ............................. <pPartIndex>
  [226] getlocal 5 .............................. <i>
  [228] pusharglist 2 ........................... <pPartIndex, i>
  [230] objcall 293 ............................. <pPartIndex.getPropAt(i)>
  [233] setlocal 6 .............................. tPartSymbol = pPartIndex.getPropAt(i)
  [235] getparam 1 .............................. <tPartList>
  [237] getlocal 6 .............................. <tPartSymbol>
  [239] pusharglist 2 ........................... <tPartList, tPartSymbol>
  [241] objcall 290 ............................. <tPartList.findPos(tPartSymbol)>
  [244] pushzero ................................ <0>
  [245] gt ...................................... <tPartList.findPos(tPartSymbol) > 0>
  [246] jmpifz [270] ............................ if tPartList.findPos(tPartSymbol) > 0 then
  [249] getlocal 3 .............................. <tTempPartList>
  [251] getprop 103 ............................. <pPartList>
  [253] getprop 104 ............................. <pPartIndex>
  [255] getlocal 6 .............................. <tPartSymbol>
  [257] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [259] objcall 173 ............................. <pPartIndex[tPartSymbol]>
  [261] pusharglist 2 ........................... <pPartList, pPartIndex[tPartSymbol]>
  [263] objcall 173 ............................. <pPartList[pPartIndex[tPartSymbol]]>
  [265] pusharglistnoret 2 ...................... <tTempPartList, pPartList[pPartIndex[tPartSymbol]]>
  [267] objcall 319 ............................. tTempPartList.append(pPartList[pPartIndex[tPartSymbol]])
  [270] pushint8 1
  [272] getlocal 5
  [274] add
  [275] setlocal 5
  [277] endrepeat [214]
  [279] jmp [376]
  [282] getlocal 4 .............................. <tPartOrder>
  [284] pusharglist 1 ........................... <tPartOrder>
  [286] extcall 178 ............................. <getVariableValue(tPartOrder)>
  [288] setlocal 7 .............................. tPartDefinition = getVariableValue(tPartOrder)
  [290] getlocal 7 .............................. <tPartDefinition>
  [292] peek 0
  [294] pusharglist 1
  [296] extcall 172
  [298] pushint8 1
  [300] peek 0
  [302] peek 2
  [304] lteq
  [305] jmpifz [374] ............................ repeat with tPartSymbol in tPartDefinition
  [308] peek 2
  [310] peek 1
  [312] pusharglist 2
  [314] extcall 173
  [316] setlocal 6
  [318] getprop 104 ............................. <pPartIndex>
  [320] getlocal 6 .............................. <tPartSymbol>
  [322] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [324] objcall 173 ............................. <pPartIndex[tPartSymbol]>
  [326] pusharglist 1 ........................... <pPartIndex[tPartSymbol]>
  [328] extcall 194 ............................. <voidp(pPartIndex[tPartSymbol])>
  [330] not ..................................... <not voidp(pPartIndex[tPartSymbol])>
  [331] jmpifz [369] ............................ if not voidp(pPartIndex[tPartSymbol]) then
  [334] getparam 1 .............................. <tPartList>
  [336] getlocal 6 .............................. <tPartSymbol>
  [338] pusharglist 2 ........................... <tPartList, tPartSymbol>
  [340] objcall 290 ............................. <tPartList.findPos(tPartSymbol)>
  [343] pushzero ................................ <0>
  [344] gt ...................................... <tPartList.findPos(tPartSymbol) > 0>
  [345] jmpifz [369] ............................ if tPartList.findPos(tPartSymbol) > 0 then
  [348] getlocal 3 .............................. <tTempPartList>
  [350] getprop 103 ............................. <pPartList>
  [352] getprop 104 ............................. <pPartIndex>
  [354] getlocal 6 .............................. <tPartSymbol>
  [356] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [358] objcall 173 ............................. <pPartIndex[tPartSymbol]>
  [360] pusharglist 2 ........................... <pPartList, pPartIndex[tPartSymbol]>
  [362] objcall 173 ............................. <pPartList[pPartIndex[tPartSymbol]]>
  [364] pusharglistnoret 2 ...................... <tTempPartList, pPartList[pPartIndex[tPartSymbol]]>
  [366] objcall 319 ............................. tTempPartList.append(pPartList[pPartIndex[tPartSymbol]])
  [369] pushint8 1
  [371] add
  [372] endrepeat [300]
  [374] pop 3
  [376] pushsymb 320 ............................ <#copyPicture>
  [379] getlocal 3 .............................. <tTempPartList>
  [381] getlocal 1 .............................. <tCanvas>
  [383] getparam 3 .............................. <tDirection>
  [385] getparam 4 .............................. <tPeopleSize>
  [387] pusharglistnoret 5 ...................... <#copyPicture, tTempPartList, tCanvas, tDirection, tPeopleSize>
  [389] extcall 205 ............................. call(#copyPicture, tTempPartList, tCanvas, tDirection, tPeopleSize)
  [391] getlocal 1 .............................. <tCanvas>
  [393] pusharglistnoret 1 ...................... <tCanvas>
  [395] extcall 189 ............................. return tCanvas
  [397] ret
end

on getInfo me
  [  0] getprop 130 ............................. <pCtrlType>
  [  2] pushcons 0 .............................. <EMPTY>
  [  4] eq ...................................... <pCtrlType = EMPTY>
  [  5] jmpifz [ 21] ............................ if pCtrlType = EMPTY then / else
  [  8] getprop 143 ............................. <pInfoStruct>
  [ 10] pushsymb 239 ............................ <#ctrl>
  [ 12] pushcons 22 ............................. <"furniture">
  [ 14] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, "furniture">
  [ 16] objcall 175 ............................. pInfoStruct[#ctrl] = "furniture"
  [ 18] jmp [ 31]
  [ 21] getprop 143 ............................. <pInfoStruct>
  [ 23] pushsymb 239 ............................ <#ctrl>
  [ 25] getprop 130 ............................. <pCtrlType>
  [ 27] pusharglistnoret 3 ...................... <pInfoStruct, #ctrl, pCtrlType>
  [ 29] objcall 175 ............................. pInfoStruct[#ctrl] = pCtrlType
  [ 31] getprop 143 ............................. <pInfoStruct>
  [ 33] pushsymb 240 ............................ <#badges>
  [ 35] getparam 0 .............................. <me>
  [ 37] getobjprop 133 .......................... <me.pBadges>
  [ 39] pusharglistnoret 3 ...................... <pInfoStruct, #badges, me.pBadges>
  [ 41] objcall 175 ............................. pInfoStruct[#badges] = me.pBadges
  [ 43] getparam 0 .............................. <me>
  [ 45] getobjprop 133 .......................... <me.pBadges>
  [ 47] pusharglist 1 ........................... <me.pBadges>
  [ 49] extcall 194 ............................. <voidp(me.pBadges)>
  [ 51] jmpifz [ 98] ............................ if voidp(me.pBadges) then
  [ 54] pushcons 40 ............................. <"connection.info.id">
  [ 56] pusharglist 1 ........................... <"connection.info.id">
  [ 58] extcall 164 ............................. <getVariable("connection.info.id")>
  [ 60] pusharglist 1 ........................... <getVariable("connection.info.id")>
  [ 62] extcall 939 ............................. <getConnection(getVariable("connection.info.id"))>
  [ 65] setlocal 0 .............................. tConn = getConnection(getVariable("connection.info.id"))
  [ 67] getlocal 0 .............................. <tConn>
  [ 69] pushzero ................................ <0>
  [ 70] nteq .................................... <tConn <> 0>
  [ 71] jmpifz [ 98] ............................ if tConn <> 0 then
  [ 74] getlocal 0 .............................. <tConn>
  [ 76] pushcons 41 ............................. <"GETSELECTEDBADGES">
  [ 78] pushsymb 274 ............................ <#integer>
  [ 81] getparam 0 .............................. <me>
  [ 83] getobjprop 100 .......................... <me.pWebID>
  [ 85] pusharglist 1 ........................... <me.pWebID>
  [ 87] extcall 274 ............................. <integer(me.pWebID)>
  [ 90] pusharglist 2 ........................... <[#integer: integer(me.pWebID)]>
  [ 92] pushproplist ............................ <[#integer: integer(me.pWebID)]>
  [ 93] pusharglistnoret 3 ...................... <tConn, "GETSELECTEDBADGES", [#integer: integer(me.pWebID)]>
  [ 95] objcall 940 ............................. tConn.send("GETSELECTEDBADGES", [#integer: integer(me.pWebID)])
  [ 98] getprop 143 ............................. <pInfoStruct>
  [100] pushsymb 269 ............................ <#groupID>
  [103] getparam 0 .............................. <me>
  [105] getobjprop 160 .......................... <me.pGroupId>
  [107] pusharglistnoret 3 ...................... <pInfoStruct, #groupID, me.pGroupId>
  [109] objcall 175 ............................. pInfoStruct[#groupID] = me.pGroupId
  [111] getprop 238 ............................. <pCustom>
  [113] pushcons 0 .............................. <EMPTY>
  [115] eq ...................................... <pCustom = EMPTY>
  [116] jmpifz [126] ............................ if pCustom = EMPTY then / else
  [119] pushcons 0 .............................. <EMPTY>
  [121] setlocal 1 .............................. tPrefix = EMPTY
  [123] jmp [136]
  [126] getprop 238 ............................. <pCustom>
  [128] pushcons 42 ............................. <RETURN>
  [130] joinstr ................................. <pCustom & RETURN>
  [131] pushcons 42 ............................. <RETURN>
  [133] joinstr ................................. <pCustom & RETURN & RETURN>
  [134] setlocal 1 .............................. tPrefix = pCustom & RETURN & RETURN
  [136] getprop 129 ............................. <pTrading>
  [138] jmpifz [164] ............................ if pTrading then / else
  [141] getprop 143 ............................. <pInfoStruct>
  [143] pushsymb 237 ............................ <#custom>
  [145] getlocal 1 .............................. <tPrefix>
  [147] pushcons 43 ............................. <"human_trading">
  [149] pushcons 44 ............................. <"Trading">
  [151] pusharglist 2 ........................... <"human_trading", "Trading">
  [153] extcall 331 ............................. <getText("human_trading", "Trading")>
  [156] joinstr ................................. <tPrefix & getText("human_trading", "Trading")>
  [157] pusharglistnoret 3 ...................... <pInfoStruct, #custom, tPrefix & getText("human_trading", "Trading")>
  [159] objcall 175 ............................. pInfoStruct[#custom] = tPrefix & getText("human_trading", "Trading")
  [161] jmp [207]
  [164] getprop 124 ............................. <pCarrying>
  [166] pushzero ................................ <0>
  [167] nteq .................................... <pCarrying <> 0>
  [168] jmpifz [197] ............................ if pCarrying <> 0 then / else
  [171] getprop 143 ............................. <pInfoStruct>
  [173] pushsymb 237 ............................ <#custom>
  [175] getlocal 1 .............................. <tPrefix>
  [177] pushcons 45 ............................. <"human_carrying">
  [179] pushcons 46 ............................. <"Carrying:">
  [181] pusharglist 2 ........................... <"human_carrying", "Carrying:">
  [183] extcall 331 ............................. <getText("human_carrying", "Carrying:")>
  [186] joinstr ................................. <tPrefix & getText("human_carrying", "Carrying:")>
  [187] getprop 124 ............................. <pCarrying>
  [189] joinpadstr .............................. <tPrefix & getText("human_carrying", "Carrying:") && pCarrying>
  [190] pusharglistnoret 3 ...................... <pInfoStruct, #custom, tPrefix & getText("human_carrying", "Carrying:") && pCarrying>
  [192] objcall 175 ............................. pInfoStruct[#custom] = tPrefix & getText("human_carrying", "Carrying:") && pCarrying
  [194] jmp [207]
  [197] getprop 143 ............................. <pInfoStruct>
  [199] pushsymb 237 ............................ <#custom>
  [201] getprop 238 ............................. <pCustom>
  [203] pusharglistnoret 3 ...................... <pInfoStruct, #custom, pCustom>
  [205] objcall 175 ............................. pInfoStruct[#custom] = pCustom
  [207] getprop 143 ............................. <pInfoStruct>
  [209] pushsymb 271 ............................ <#xp>
  [212] getprop 145 ............................. <pXP>
  [214] pusharglistnoret 3 ...................... <pInfoStruct, #xp, pXP>
  [216] objcall 332 ............................. pInfoStruct.setaProp(#xp, pXP)
  [219] getprop 143 ............................. <pInfoStruct>
  [221] pushsymb 333 ............................ <#FX>
  [224] getparam 0 .............................. <me>
  [226] pusharglist 1 ........................... <me>
  [228] objcall 96 .............................. <me.getCurrentEffectState()>
  [230] pusharglistnoret 3 ...................... <pInfoStruct, #FX, me.getCurrentEffectState()>
  [232] objcall 332 ............................. pInfoStruct.setaProp(#FX, me.getCurrentEffectState())
  [235] getprop 143 ............................. <pInfoStruct>
  [237] pusharglistnoret 1 ...................... <pInfoStruct>
  [239] extcall 189 ............................. return pInfoStruct
  [241] ret
end

on getWebID me
  [  0] getprop 100 ............................. <pWebID>
  [  2] pusharglistnoret 1 ...................... <pWebID>
  [  4] extcall 189 ............................. return pWebID
  [  6] ret
end

on getSprites me
  [  0] getprop 199 ............................. <pShadowSpr>
  [  2] pusharglist 1 ........................... <pShadowSpr>
  [  4] extcall 180 ............................. <ilk(pShadowSpr)>
  [  6] pushsymb 221 ............................ <#sprite>
  [  8] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [  9] jmpifz [ 28] ............................ if ilk(pShadowSpr) = #sprite then / else
  [ 12] getprop 195 ............................. <pSprite>
  [ 14] getprop 199 ............................. <pShadowSpr>
  [ 16] getprop 198 ............................. <pMatteSpr>
  [ 18] pusharglist 3 ........................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 20] pushlist ................................ <[pSprite, pShadowSpr, pMatteSpr]>
  [ 21] pusharglistnoret 1 ...................... <[pSprite, pShadowSpr, pMatteSpr]>
  [ 23] extcall 189 ............................. return [pSprite, pShadowSpr, pMatteSpr]
  [ 25] jmp [ 39]
  [ 28] getprop 195 ............................. <pSprite>
  [ 30] getprop 198 ............................. <pMatteSpr>
  [ 32] pusharglist 2 ........................... <[pSprite, pMatteSpr]>
  [ 34] pushlist ................................ <[pSprite, pMatteSpr]>
  [ 35] pusharglistnoret 1 ...................... <[pSprite, pMatteSpr]>
  [ 37] extcall 189 ............................. return [pSprite, pMatteSpr]
  [ 39] ret
end

on getProperty me, tPropID
  [  0] getparam 1 .............................. <tPropID>
  [  2] peek 0 .................................. case tPropID of
  [  4] pushsymb 335 ............................ <#carrying>
  [  7] eq
  [  8] jmpifz [ 22] ............................ (case) #carrying:
  [ 11] pop 1
  [ 13] getprop 124 ............................. <pCarrying>
  [ 15] pusharglistnoret 1 ...................... <pCarrying>
  [ 17] extcall 189 ............................. return pCarrying
  [ 19] jmp [316]
  [ 22] peek 0
  [ 24] pushsymb 261 ............................ <#direction>
  [ 27] eq
  [ 28] jmpifz [ 43] ............................ (case) #direction:
  [ 31] pop 1
  [ 33] getprop 260 ............................. <pDirection>
  [ 36] pusharglistnoret 1 ...................... <pDirection>
  [ 38] extcall 189 ............................. return pDirection
  [ 40] jmp [316]
  [ 43] peek 0
  [ 45] pushsymb 336 ............................ <#dancing>
  [ 48] eq
  [ 49] jmpifz [ 63] ............................ (case) #dancing:
  [ 52] pop 1
  [ 54] getprop 126 ............................. <pDancing>
  [ 56] pusharglistnoret 1 ...................... <pDancing>
  [ 58] extcall 189 ............................. return pDancing
  [ 60] jmp [316]
  [ 63] peek 0
  [ 65] pushsymb 333 ............................ <#FX>
  [ 68] eq
  [ 69] jmpifz [ 83] ............................ (case) #FX:
  [ 72] pop 1
  [ 74] getprop 127 ............................. <pFx>
  [ 76] pusharglistnoret 1 ...................... <pFx>
  [ 78] extcall 189 ............................. return pFx
  [ 80] jmp [316]
  [ 83] peek 0
  [ 85] pushsymb 310 ............................ <#loc>
  [ 88] eq
  [ 89] jmpifz [113] ............................ (case) #loc:
  [ 92] pop 1
  [ 94] getprop 264 ............................. <pLocX>
  [ 97] getprop 265 ............................. <pLocY>
  [100] getprop 266 ............................. <pLocH>
  [103] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [105] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [106] pusharglistnoret 1 ...................... <[pLocX, pLocY, pLocH]>
  [108] extcall 189 ............................. return [pLocX, pLocY, pLocH]
  [110] jmp [316]
  [113] peek 0
  [115] pushsymb 337 ............................ <#mainAction>
  [118] eq
  [119] jmpifz [133] ............................ (case) #mainAction:
  [122] pop 1
  [124] getprop 121 ............................. <pMainAction>
  [126] pusharglistnoret 1 ...................... <pMainAction>
  [128] extcall 189 ............................. return pMainAction
  [130] jmp [316]
  [133] peek 0
  [135] pushsymb 338 ............................ <#moving>
  [138] eq
  [139] jmpifz [155] ............................ (case) #moving:
  [142] pop 1
  [144] getparam 0 .............................. <me>
  [146] getobjprop 122 .......................... <me.pMoving>
  [148] pusharglistnoret 1 ...................... <me.pMoving>
  [150] extcall 189 ............................. return me.pMoving
  [152] jmp [316]
  [155] peek 0
  [157] pushsymb 240 ............................ <#badges>
  [159] eq
  [160] jmpifz [176] ............................ (case) #badges:
  [163] pop 1
  [165] getparam 0 .............................. <me>
  [167] getobjprop 133 .......................... <me.pBadges>
  [169] pusharglistnoret 1 ...................... <me.pBadges>
  [171] extcall 189 ............................. return me.pBadges
  [173] jmp [316]
  [176] peek 0
  [178] pushsymb 339 ............................ <#swimming>
  [181] eq
  [182] jmpifz [198] ............................ (case) #swimming:
  [185] pop 1
  [187] getparam 0 .............................. <me>
  [189] getobjprop 132 .......................... <me.pSwim>
  [191] pusharglistnoret 1 ...................... <me.pSwim>
  [193] extcall 189 ............................. return me.pSwim
  [195] jmp [316]
  [198] peek 0
  [200] pushsymb 269 ............................ <#groupID>
  [203] eq
  [204] jmpifz [218] ............................ (case) #groupID:
  [207] pop 1
  [209] getprop 160 ............................. <pGroupId>
  [211] pusharglistnoret 1 ...................... <pGroupId>
  [213] extcall 189 ............................. return pGroupId
  [215] jmp [316]
  [218] peek 0
  [220] pushsymb 270 ............................ <#groupstatus>
  [223] eq
  [224] jmpifz [238] ............................ (case) #groupstatus:
  [227] pop 1
  [229] getprop 161 ............................. <pStatusInGroup>
  [231] pusharglistnoret 1 ...................... <pStatusInGroup>
  [233] extcall 189 ............................. return pStatusInGroup
  [235] jmp [316]
  [238] peek 0
  [240] pushsymb 340 ............................ <#typing>
  [243] eq
  [244] jmpifz [258] ............................ (case) #typing:
  [247] pop 1
  [249] getprop 167 ............................. <pUserIsTyping>
  [251] pusharglistnoret 1 ...................... <pUserIsTyping>
  [253] extcall 189 ............................. return pUserIsTyping
  [255] jmp [316]
  [258] peek 0
  [260] pushsymb 341 ............................ <#peoplesize>
  [263] eq
  [264] jmpifz [278] ............................ (case) #peoplesize:
  [267] pop 1
  [269] getprop 163 ............................. <pPeopleSize>
  [271] pusharglistnoret 1 ...................... <pPeopleSize>
  [273] extcall 189 ............................. return pPeopleSize
  [275] jmp [316]
  [278] peek 0
  [280] pushsymb 247 ............................ <#locZ>
  [282] eq
  [283] jmpifz [309] ............................ (case) #locZ:
  [286] getprop 195 ............................. <pSprite>
  [288] getobjprop 180 .......................... <pSprite.ilk>
  [290] pushsymb 221 ............................ <#sprite>
  [292] eq ...................................... <pSprite.ilk = #sprite>
  [293] jmpifz [306] ............................ if pSprite.ilk = #sprite then
  [296] pop 1
  [298] getprop 195 ............................. <pSprite>
  [300] getobjprop 247 .......................... <pSprite.locZ>
  [302] pusharglistnoret 1 ...................... <pSprite.locZ>
  [304] extcall 189 ............................. return pSprite.locZ
  [306] jmp [316] ............................... (case) otherwise:
  [309] pop 1
  [311] pushzero ................................ <0>
  [312] pusharglistnoret 1 ...................... <0>
  [314] extcall 189 ............................. return 0
  [316] pop 1 ................................... end case
  [318] ret
end

on setProperty me, tPropID, tValue
  [  0] getparam 1 .............................. <tPropID>
  [  2] peek 0 .................................. case tPropID of
  [  4] pushsymb 269 ............................ <#groupID>
  [  7] eq
  [  8] jmpifz [ 18] ............................ (case) #groupID:
  [ 11] getparam 2 .............................. <tValue>
  [ 13] setprop 160 ............................. pGroupId = tValue
  [ 15] jmp [ 41]
  [ 18] peek 0
  [ 20] pushsymb 270 ............................ <#groupstatus>
  [ 23] eq
  [ 24] jmpifz [ 34] ............................ (case) #groupstatus:
  [ 27] getparam 2 .............................. <tValue>
  [ 29] setprop 161 ............................. pStatusInGroup = tValue
  [ 31] jmp [ 41] ............................... (case) otherwise:
  [ 34] pop 1
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 1 ...................... <0>
  [ 39] extcall 189 ............................. return 0
  [ 41] pop 1 ................................... end case
  [ 43] ret
end

on setUserTypingStatus me, tValue
  [  0] getparam 1 .............................. <tValue>
  [  2] pushint8 1 .............................. <1>
  [  4] eq ...................................... <tValue = 1>
  [  5] jmpifz [102] ............................ if tValue = 1 then / else
  [  8] getprop 200 ............................. <pTypingSprite>
  [ 10] pusharglist 1 ........................... <pTypingSprite>
  [ 12] extcall 180 ............................. <ilk(pTypingSprite)>
  [ 14] pushsymb 221 ............................ <#sprite>
  [ 16] nteq .................................... <ilk(pTypingSprite) <> #sprite>
  [ 17] jmpifz [ 36] ............................ if ilk(pTypingSprite) <> #sprite then
  [ 20] getparam 0 .............................. <me>
  [ 22] pusharglist 1 ........................... <me>
  [ 24] objcall 207 ............................. <me.getID()>
  [ 26] pusharglist 1 ........................... <me.getID()>
  [ 28] extcall 222 ............................. <reserveSprite(me.getID())>
  [ 30] pusharglist 1 ........................... <reserveSprite(me.getID())>
  [ 32] extcall 221 ............................. <sprite(reserveSprite(me.getID()))>
  [ 34] setprop 200 ............................. pTypingSprite = sprite(reserveSprite(me.getID()))
  [ 36] getprop 200 ............................. <pTypingSprite>
  [ 38] pusharglist 1 ........................... <pTypingSprite>
  [ 40] extcall 180 ............................. <ilk(pTypingSprite)>
  [ 42] pushsymb 221 ............................ <#sprite>
  [ 44] eq ...................................... <ilk(pTypingSprite) = #sprite>
  [ 45] jmpifz [ 94] ............................ if ilk(pTypingSprite) = #sprite then
  [ 48] getprop 163 ............................. <pPeopleSize>
  [ 50] pushcons 47 ............................. <"sh">
  [ 52] eq ...................................... <pPeopleSize = "sh">
  [ 53] jmpifz [ 70] ............................ if pPeopleSize = "sh" then / else
  [ 56] getprop 200 ............................. <pTypingSprite>
  [ 58] pushcons 48 ............................. <"chat_typing_bubble_small">
  [ 60] pusharglist 1 ........................... <"chat_typing_bubble_small">
  [ 62] extcall 344 ............................. <getMember("chat_typing_bubble_small")>
  [ 65] setobjprop 142 .......................... pTypingSprite.member = getMember("chat_typing_bubble_small")
  [ 67] jmp [ 81]
  [ 70] getprop 200 ............................. <pTypingSprite>
  [ 72] pushcons 49 ............................. <"chat_typing_bubble">
  [ 74] pusharglist 1 ........................... <"chat_typing_bubble">
  [ 76] extcall 344 ............................. <getMember("chat_typing_bubble")>
  [ 79] setobjprop 142 .......................... pTypingSprite.member = getMember("chat_typing_bubble")
  [ 81] getprop 200 ............................. <pTypingSprite>
  [ 83] pushint8 8 .............................. <8>
  [ 85] setobjprop 285 .......................... pTypingSprite.ink = 8
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglistnoret 1 ...................... <me>
  [ 92] objcall 27 .............................. me.updateTypingSpriteLoc()
  [ 94] getmovieprop 345 ........................ <the milliSeconds>
  [ 97] setprop 168 ............................. pUserTypingStartTime = the milliSeconds
  [ 99] jmp [131]
  [102] getprop 200 ............................. <pTypingSprite>
  [104] pusharglist 1 ........................... <pTypingSprite>
  [106] extcall 180 ............................. <ilk(pTypingSprite)>
  [108] pushsymb 221 ............................ <#sprite>
  [110] eq ...................................... <ilk(pTypingSprite) = #sprite>
  [111] jmpifz [131] ............................ if ilk(pTypingSprite) = #sprite then
  [114] getprop 200 ............................. <pTypingSprite>
  [116] getobjprop 197 .......................... <pTypingSprite.spriteNum>
  [118] pusharglistnoret 1 ...................... <pTypingSprite.spriteNum>
  [120] extcall 196 ............................. releaseSprite(pTypingSprite.spriteNum)
  [122] pusharglist 0 ........................... <>
  [124] extcall 101 ............................. <VOID>
  [126] setprop 200 ............................. pTypingSprite = VOID
  [128] pushzero ................................ <0>
  [129] setprop 168 ............................. pUserTypingStartTime = 0
  [131] ret
end

on updateTypingSpriteLoc me
  [  0] getprop 200 ............................. <pTypingSprite>
  [  2] pusharglist 1 ........................... <pTypingSprite>
  [  4] extcall 180 ............................. <ilk(pTypingSprite)>
  [  6] pushsymb 221 ............................ <#sprite>
  [  8] eq ...................................... <ilk(pTypingSprite) = #sprite>
  [  9] getprop 195 ............................. <pSprite>
  [ 11] pusharglist 1 ........................... <pSprite>
  [ 13] extcall 180 ............................. <ilk(pSprite)>
  [ 15] pushsymb 221 ............................ <#sprite>
  [ 17] eq ...................................... <ilk(pSprite) = #sprite>
  [ 18] and ..................................... <(ilk(pTypingSprite) = #sprite) and (ilk(pSprite) = #sprite)>
  [ 19] jmpifz [ 90] ............................ if (ilk(pTypingSprite) = #sprite) and (ilk(pSprite) = #sprite) then
  [ 22] pushint8 57 ............................. <57>
  [ 24] pushint8 75 ............................. <75>
  [ 26] inv ..................................... <-75>
  [ 27] pusharglist 2 ........................... <57, -75>
  [ 29] extcall 107 ............................. <point(57, -75)>
  [ 31] setlocal 0 .............................. tOffset = point(57, -75)
  [ 33] pushint8 30 ............................. <30>
  [ 35] setlocal 1 .............................. tOffsetLocZ = 30
  [ 37] getprop 163 ............................. <pPeopleSize>
  [ 39] pushcons 47 ............................. <"sh">
  [ 41] eq ...................................... <pPeopleSize = "sh">
  [ 42] jmpifz [ 56] ............................ if pPeopleSize = "sh" then
  [ 45] pushint8 33 ............................. <33>
  [ 47] pushint8 40 ............................. <40>
  [ 49] inv ..................................... <-40>
  [ 50] pusharglist 2 ........................... <33, -40>
  [ 52] extcall 107 ............................. <point(33, -40)>
  [ 54] setlocal 0 .............................. tOffset = point(33, -40)
  [ 56] getprop 200 ............................. <pTypingSprite>
  [ 58] getprop 195 ............................. <pSprite>
  [ 60] getobjprop 310 .......................... <pSprite.loc>
  [ 63] getlocal 0 .............................. <tOffset>
  [ 65] add ..................................... <pSprite.loc + tOffset>
  [ 66] setobjprop 310 .......................... pTypingSprite.loc = pSprite.loc + tOffset
  [ 69] getprop 200 ............................. <pTypingSprite>
  [ 71] getprop 195 ............................. <pSprite>
  [ 73] getobjprop 346 .......................... <pSprite.visible>
  [ 76] setobjprop 346 .......................... pTypingSprite.visible = pSprite.visible
  [ 79] getprop 200 ............................. <pTypingSprite>
  [ 81] getprop 195 ............................. <pSprite>
  [ 83] getobjprop 247 .......................... <pSprite.locZ>
  [ 85] getlocal 1 .............................. <tOffsetLocZ>
  [ 87] add ..................................... <pSprite.locZ + tOffsetLocZ>
  [ 88] setobjprop 247 .......................... pTypingSprite.locZ = pSprite.locZ + tOffsetLocZ
  [ 90] ret
end

on getPartCarrying me, tPart
  [  0] getprop 171 ............................. <pPartListSubSet>
  [  2] pushcons 10 ............................. <"handRight">
  [  4] pusharglist 2 ........................... <pPartListSubSet, "handRight">
  [  6] objcall 173 ............................. <pPartListSubSet["handRight"]>
  [  8] getparam 1 .............................. <tPart>
  [ 10] pusharglist 2 ........................... <pPartListSubSet["handRight"], tPart>
  [ 12] objcall 290 ............................. <pPartListSubSet["handRight"].findPos(tPart)>
  [ 15] getparam 0 .............................. <me>
  [ 17] pushsymb 335 ............................ <#carrying>
  [ 20] pusharglist 2 ........................... <me, #carrying>
  [ 22] objcall 24 .............................. <me.getProperty(#carrying)>
  [ 24] and ..................................... <pPartListSubSet["handRight"].findPos(tPart) and me.getProperty(#carrying)>
  [ 25] jmpifz [ 34] ............................ if pPartListSubSet["handRight"].findPos(tPart) and me.getProperty(#carrying) then
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 1 ...................... <1>
  [ 32] extcall 189 ............................. return 1
  [ 34] pushzero ................................ <0>
  [ 35] pusharglistnoret 1 ...................... <0>
  [ 37] extcall 189 ............................. return 0
  [ 39] ret
end

on isInSwimsuit me
  [  0] pushzero ................................ <0>
  [  1] pusharglistnoret 1 ...................... <0>
  [  3] extcall 189 ............................. return 0
  [  5] ret
end

on closeEyes me
  [  0] getprop 121 ............................. <pMainAction>
  [  2] pushcons 33 ............................. <"lay">
  [  4] eq ...................................... <pMainAction = "lay">
  [  5] jmpifz [ 27] ............................ if pMainAction = "lay" then / else
  [  8] getparam 0 .............................. <me>
  [ 10] getprop 171 ............................. <pPartListSubSet>
  [ 12] pushcons 9 .............................. <"eye">
  [ 14] pusharglist 2 ........................... <pPartListSubSet, "eye">
  [ 16] objcall 173 ............................. <pPartListSubSet["eye"]>
  [ 18] pushcons 50 ............................. <"ley">
  [ 20] pusharglistnoret 3 ...................... <me, pPartListSubSet["eye"], "ley">
  [ 22] objcall 49 .............................. me.definePartListAction(pPartListSubSet["eye"], "ley")
  [ 24] jmp [ 43]
  [ 27] getparam 0 .............................. <me>
  [ 29] getprop 171 ............................. <pPartListSubSet>
  [ 31] pushcons 9 .............................. <"eye">
  [ 33] pusharglist 2 ........................... <pPartListSubSet, "eye">
  [ 35] objcall 173 ............................. <pPartListSubSet["eye"]>
  [ 37] pushcons 51 ............................. <"eyb">
  [ 39] pusharglistnoret 3 ...................... <me, pPartListSubSet["eye"], "eyb">
  [ 41] objcall 49 .............................. me.definePartListAction(pPartListSubSet["eye"], "eyb")
  [ 43] pushint8 1 .............................. <1>
  [ 45] setprop 118 ............................. pEyesClosed = 1
  [ 47] pushint8 1 .............................. <1>
  [ 49] setprop 120 ............................. pChanges = 1
  [ 51] ret
end

on openEyes me
  [  0] getprop 121 ............................. <pMainAction>
  [  2] pushcons 33 ............................. <"lay">
  [  4] eq ...................................... <pMainAction = "lay">
  [  5] jmpifz [ 27] ............................ if pMainAction = "lay" then / else
  [  8] getparam 0 .............................. <me>
  [ 10] getprop 171 ............................. <pPartListSubSet>
  [ 12] pushcons 9 .............................. <"eye">
  [ 14] pusharglist 2 ........................... <pPartListSubSet, "eye">
  [ 16] objcall 173 ............................. <pPartListSubSet["eye"]>
  [ 18] pushcons 33 ............................. <"lay">
  [ 20] pusharglistnoret 3 ...................... <me, pPartListSubSet["eye"], "lay">
  [ 22] objcall 49 .............................. me.definePartListAction(pPartListSubSet["eye"], "lay")
  [ 24] jmp [ 43]
  [ 27] getparam 0 .............................. <me>
  [ 29] getprop 171 ............................. <pPartListSubSet>
  [ 31] pushcons 9 .............................. <"eye">
  [ 33] pusharglist 2 ........................... <pPartListSubSet, "eye">
  [ 35] objcall 173 ............................. <pPartListSubSet["eye"]>
  [ 37] pushcons 1 .............................. <"std">
  [ 39] pusharglistnoret 3 ...................... <me, pPartListSubSet["eye"], "std">
  [ 41] objcall 49 .............................. me.definePartListAction(pPartListSubSet["eye"], "std")
  [ 43] pushzero ................................ <0>
  [ 44] setprop 118 ............................. pEyesClosed = 0
  [ 46] pushint8 1 .............................. <1>
  [ 48] setprop 120 ............................. pChanges = 1
  [ 50] ret
end

on startAnimation me, tMemName
  [  0] getparam 1 .............................. <tMemName>
  [  2] getprop 134 ............................. <pCurrentAnim>
  [  4] eq ...................................... <tMemName = pCurrentAnim>
  [  5] jmpifz [ 13] ............................ if tMemName = pCurrentAnim then
  [  8] pushzero ................................ <0>
  [  9] pusharglistnoret 1 ...................... <0>
  [ 11] extcall 189 ............................. return 0
  [ 13] getparam 1 .............................. <tMemName>
  [ 15] pusharglist 1 ........................... <tMemName>
  [ 17] extcall 201 ............................. <memberExists(tMemName)>
  [ 19] not ..................................... <not memberExists(tMemName)>
  [ 20] jmpifz [ 28] ............................ if not memberExists(tMemName) then
  [ 23] pushzero ................................ <0>
  [ 24] pusharglistnoret 1 ...................... <0>
  [ 26] extcall 189 ............................. return 0
  [ 28] getparam 1 .............................. <tMemName>
  [ 30] pusharglist 1 ........................... <tMemName>
  [ 32] extcall 215 ............................. <getmemnum(tMemName)>
  [ 34] pusharglist 1 ........................... <getmemnum(tMemName)>
  [ 36] extcall 142 ............................. <member(getmemnum(tMemName))>
  [ 38] setlocal 0 .............................. tmember = member(getmemnum(tMemName))
  [ 40] getlocal 0 .............................. <tmember>
  [ 42] getobjprop 349 .......................... <tmember.text>
  [ 45] setlocal 1 .............................. tList = tmember.text
  [ 47] getmovieprop 350 ........................ <the itemDelimiter>
  [ 50] setlocal 2 .............................. tTempDelim = the itemDelimiter
  [ 52] pushcons 52 ............................. <"/">
  [ 54] setmovieprop 350 ........................ the itemDelimiter = "/"
  [ 57] pushint8 1 .............................. <1>
  [ 59] setlocal 3
  [ 61] getlocal 3
  [ 63] getlocal 1 .............................. <tList>
  [ 65] pushsymb 351 ............................ <#line>
  [ 68] pusharglist 2 ........................... <tList, #line>
  [ 70] objcall 172 ............................. <tList.line.count>
  [ 72] lteq
  [ 73] jmpifz [259] ............................ repeat with i = 1 to tList.line.count
  [ 76] getlocal 1 .............................. <tList>
  [ 78] pushsymb 351 ............................ <#line>
  [ 81] getlocal 3 .............................. <i>
  [ 83] pusharglist 3 ........................... <tList, #line, i>
  [ 85] objcall 352 ............................. <tList.line[i]>
  [ 88] pushsymb 353 ............................ <#char>
  [ 91] pushint8 1 .............................. <1>
  [ 93] pusharglist 3 ........................... <tList.line[i], #char, 1>
  [ 95] objcall 311 ............................. <tList.line[i].char[1]>
  [ 98] setlocal 4 .............................. tChar = tList.line[i].char[1]
  [100] getlocal 4 .............................. <tChar>
  [102] pushcons 53 ............................. <"#">
  [104] nteq .................................... <tChar <> "#">
  [105] getlocal 4 .............................. <tChar>
  [107] pushcons 0 .............................. <EMPTY>
  [109] nteq .................................... <tChar <> EMPTY>
  [110] and ..................................... <(tChar <> "#") and (tChar <> EMPTY)>
  [111] jmpifz [250] ............................ if (tChar <> "#") and (tChar <> EMPTY) then
  [114] getlocal 1 .............................. <tList>
  [116] pushsymb 351 ............................ <#line>
  [119] getlocal 3 .............................. <i>
  [121] pusharglist 3 ........................... <tList, #line, i>
  [123] objcall 352 ............................. <tList.line[i]>
  [126] pushsymb 354 ............................ <#item>
  [129] pushint8 1 .............................. <1>
  [131] pusharglist 3 ........................... <tList.line[i], #item, 1>
  [133] objcall 311 ............................. <tList.line[i].item[1]>
  [136] setlocal 5 .............................. tPart = tList.line[i].item[1]
  [138] getlocal 1 .............................. <tList>
  [140] pushsymb 351 ............................ <#line>
  [143] getlocal 3 .............................. <i>
  [145] pusharglist 3 ........................... <tList, #line, i>
  [147] objcall 352 ............................. <tList.line[i]>
  [150] pushsymb 354 ............................ <#item>
  [153] pushint8 2 .............................. <2>
  [155] pusharglist 3 ........................... <tList.line[i], #item, 2>
  [157] objcall 311 ............................. <tList.line[i].item[2]>
  [160] setlocal 6 .............................. tAnim = tList.line[i].item[2]
  [162] getlocal 5 .............................. <tPart>
  [164] peek 0 .................................. case tPart of
  [166] pushcons 54 ............................. <"leftHandUp">
  [168] eq
  [169] jmpifz [179] ............................ (case) "leftHandUp":
  [172] pushint8 1 .............................. <1>
  [174] setprop 185 ............................. pLeftHandUp = 1
  [176] jmp [248]
  [179] peek 0
  [181] pushcons 55 ............................. <"all">
  [183] eq
  [184] jmpifz [219] ............................ (case) "all":
  [187] pushsymb 355 ............................ <#setAnimation>
  [190] getprop 103 ............................. <pPartList>
  [192] pushcons 55 ............................. <"all">
  [194] getlocal 6 .............................. <tAnim>
  [196] pusharglistnoret 4 ...................... <#setAnimation, pPartList, "all", tAnim>
  [198] extcall 205 ............................. call(#setAnimation, pPartList, "all", tAnim)
  [200] pushsymb 355 ............................ <#setAnimation>
  [203] getprop 204 ............................. <pFXManager>
  [205] pusharglist 1 ........................... <[pFXManager]>
  [207] pushlist ................................ <[pFXManager]>
  [208] pushcons 55 ............................. <"all">
  [210] getlocal 6 .............................. <tAnim>
  [212] pusharglistnoret 4 ...................... <#setAnimation, [pFXManager], "all", tAnim>
  [214] extcall 205 ............................. call(#setAnimation, [pFXManager], "all", tAnim)
  [216] jmp [248] ............................... (case) otherwise:
  [219] pushsymb 355 ............................ <#setAnimation>
  [222] getprop 103 ............................. <pPartList>
  [224] getlocal 5 .............................. <tPart>
  [226] getlocal 6 .............................. <tAnim>
  [228] pusharglistnoret 4 ...................... <#setAnimation, pPartList, tPart, tAnim>
  [230] extcall 205 ............................. call(#setAnimation, pPartList, tPart, tAnim)
  [232] pushsymb 355 ............................ <#setAnimation>
  [235] getprop 204 ............................. <pFXManager>
  [237] pusharglist 1 ........................... <[pFXManager]>
  [239] pushlist ................................ <[pFXManager]>
  [240] getlocal 5 .............................. <tPart>
  [242] getlocal 6 .............................. <tAnim>
  [244] pusharglistnoret 4 ...................... <#setAnimation, [pFXManager], tPart, tAnim>
  [246] extcall 205 ............................. call(#setAnimation, [pFXManager], tPart, tAnim)
  [248] pop 1 ................................... end case
  [250] pushint8 1
  [252] getlocal 3
  [254] add
  [255] setlocal 3
  [257] endrepeat [ 61]
  [259] getlocal 2 .............................. <tTempDelim>
  [261] setmovieprop 350 ........................ the itemDelimiter = tTempDelim
  [264] pushint8 1 .............................. <1>
  [266] setprop 131 ............................. pAnimating = 1
  [268] getparam 1 .............................. <tMemName>
  [270] setprop 134 ............................. pCurrentAnim = tMemName
  [272] ret
end

on stopAnimation me
  [  0] pushzero ................................ <0>
  [  1] setprop 131 ............................. pAnimating = 0
  [  3] pushcons 0 .............................. <EMPTY>
  [  5] setprop 134 ............................. pCurrentAnim = EMPTY
  [  7] pushsymb 362 ............................ <#remAnimation>
  [ 10] getprop 103 ............................. <pPartList>
  [ 12] pusharglistnoret 2 ...................... <#remAnimation, pPartList>
  [ 14] extcall 205 ............................. call(#remAnimation, pPartList)
  [ 16] getparam 0 .............................. <me>
  [ 18] pusharglistnoret 1 ...................... <me>
  [ 20] objcall 6 ............................... me.resetSpriteColors()
  [ 22] ret
end

on resumeAnimation me
  [  0] getprop 134 ............................. <pCurrentAnim>
  [  2] setlocal 0 .............................. tMemName = pCurrentAnim
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setprop 134 ............................. pCurrentAnim = EMPTY
  [  8] getparam 0 .............................. <me>
  [ 10] getlocal 0 .............................. <tMemName>
  [ 12] pusharglistnoret 2 ...................... <me, tMemName>
  [ 14] objcall 32 .............................. me.startAnimation(tMemName)
  [ 16] ret
end

on show me
  [  0] getprop 195 ............................. <pSprite>
  [  2] pushint8 1 .............................. <1>
  [  4] setobjprop 346 .......................... pSprite.visible = 1
  [  7] getprop 198 ............................. <pMatteSpr>
  [  9] pushint8 1 .............................. <1>
  [ 11] setobjprop 346 .......................... pMatteSpr.visible = 1
  [ 14] getprop 199 ............................. <pShadowSpr>
  [ 16] pusharglist 1 ........................... <pShadowSpr>
  [ 18] extcall 180 ............................. <ilk(pShadowSpr)>
  [ 20] pushsymb 221 ............................ <#sprite>
  [ 22] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [ 23] jmpifz [ 33] ............................ if ilk(pShadowSpr) = #sprite then
  [ 26] getprop 199 ............................. <pShadowSpr>
  [ 28] pushint8 1 .............................. <1>
  [ 30] setobjprop 346 .......................... pShadowSpr.visible = 1
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 27 .............................. me.updateTypingSpriteLoc()
  [ 39] getparam 0 .............................. <me>
  [ 41] pusharglist 1 ........................... <me>
  [ 43] objcall 91 .............................. <me.getEffectSpriteProps()>
  [ 45] setlocal 0 .............................. tFXSprites = me.getEffectSpriteProps()
  [ 47] getlocal 0 .............................. <tFXSprites>
  [ 49] peek 0
  [ 51] pusharglist 1
  [ 53] extcall 172
  [ 55] pushint8 1
  [ 57] peek 0
  [ 59] peek 2
  [ 61] lteq
  [ 62] jmpifz [ 98] ............................ repeat with tProps in tFXSprites
  [ 65] peek 2
  [ 67] peek 1
  [ 69] pusharglist 2
  [ 71] extcall 173
  [ 73] setlocal 1
  [ 75] getlocal 1 .............................. <tProps>
  [ 77] pushsymb 221 ............................ <#sprite>
  [ 79] pusharglist 2 ........................... <tProps, #sprite>
  [ 81] objcall 272 ............................. <tProps.getaProp(#sprite)>
  [ 84] setlocal 2 .............................. tsprite = tProps.getaProp(#sprite)
  [ 86] getlocal 2 .............................. <tsprite>
  [ 88] pushint8 1 .............................. <1>
  [ 90] setobjprop 346 .......................... tsprite.visible = 1
  [ 93] pushint8 1
  [ 95] add
  [ 96] endrepeat [ 57]
  [ 98] pop 3
  [100] ret
end

on hide me
  [  0] getprop 195 ............................. <pSprite>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 346 .......................... pSprite.visible = 0
  [  6] getprop 198 ............................. <pMatteSpr>
  [  8] pushzero ................................ <0>
  [  9] setobjprop 346 .......................... pMatteSpr.visible = 0
  [ 12] getprop 199 ............................. <pShadowSpr>
  [ 14] pusharglist 1 ........................... <pShadowSpr>
  [ 16] extcall 180 ............................. <ilk(pShadowSpr)>
  [ 18] pushsymb 221 ............................ <#sprite>
  [ 20] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [ 21] jmpifz [ 30] ............................ if ilk(pShadowSpr) = #sprite then
  [ 24] getprop 199 ............................. <pShadowSpr>
  [ 26] pushzero ................................ <0>
  [ 27] setobjprop 346 .......................... pShadowSpr.visible = 0
  [ 30] getparam 0 .............................. <me>
  [ 32] pusharglistnoret 1 ...................... <me>
  [ 34] objcall 27 .............................. me.updateTypingSpriteLoc()
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglist 1 ........................... <me>
  [ 40] objcall 91 .............................. <me.getEffectSpriteProps()>
  [ 42] setlocal 0 .............................. tFXSprites = me.getEffectSpriteProps()
  [ 44] getlocal 0 .............................. <tFXSprites>
  [ 46] peek 0
  [ 48] pusharglist 1
  [ 50] extcall 172
  [ 52] pushint8 1
  [ 54] peek 0
  [ 56] peek 2
  [ 58] lteq
  [ 59] jmpifz [ 94] ............................ repeat with tProps in tFXSprites
  [ 62] peek 2
  [ 64] peek 1
  [ 66] pusharglist 2
  [ 68] extcall 173
  [ 70] setlocal 1
  [ 72] getlocal 1 .............................. <tProps>
  [ 74] pushsymb 221 ............................ <#sprite>
  [ 76] pusharglist 2 ........................... <tProps, #sprite>
  [ 78] objcall 272 ............................. <tProps.getaProp(#sprite)>
  [ 81] setlocal 2 .............................. tsprite = tProps.getaProp(#sprite)
  [ 83] getlocal 2 .............................. <tsprite>
  [ 85] pushzero ................................ <0>
  [ 86] setobjprop 346 .......................... tsprite.visible = 0
  [ 89] pushint8 1
  [ 91] add
  [ 92] endrepeat [ 54]
  [ 94] pop 3
  [ 96] ret
end

on draw me, tRGB
  [  0] getparam 1 .............................. <tRGB>
  [  2] pusharglist 1 ........................... <tRGB>
  [  4] extcall 180 ............................. <ilk(tRGB)>
  [  6] pushsymb 366 ............................ <#color>
  [  9] nteq .................................... <ilk(tRGB) <> #color>
  [ 10] jmpifz [ 24] ............................ if ilk(tRGB) <> #color then
  [ 13] pushint16 255 ........................... <255>
  [ 16] pushzero ................................ <0>
  [ 17] pushzero ................................ <0>
  [ 18] pusharglist 3 ........................... <255, 0, 0>
  [ 20] extcall 136 ............................. <rgb(255, 0, 0)>
  [ 22] setparam 1 .............................. tRGB = rgb(255, 0, 0)
  [ 24] getprop 214 ............................. <pMember>
  [ 26] getchainedprop 216 ...................... <pMember.image>
  [ 28] getprop 214 ............................. <pMember>
  [ 30] getchainedprop 216 ...................... <pMember.image>
  [ 32] getobjprop 109 .......................... <pMember.image.rect>
  [ 34] pushsymb 367 ............................ <#shapeType>
  [ 37] pushsymb 109 ............................ <#rect>
  [ 39] pushsymb 366 ............................ <#color>
  [ 42] getparam 1 .............................. <tRGB>
  [ 44] pusharglist 4 ........................... <[#shapeType: #rect, #color: tRGB]>
  [ 46] pushproplist ............................ <[#shapeType: #rect, #color: tRGB]>
  [ 47] pusharglistnoret 3 ...................... <pMember.image, pMember.image.rect, [#shapeType: #rect, #color: tRGB]>
  [ 49] objcall 37 .............................. pMember.image.draw(pMember.image.rect, [#shapeType: #rect, #color: tRGB])
  [ 51] ret
end

on prepare me
  [  0] getprop 98 .............................. <pFrozenAnimFrame>
  [  2] not ..................................... <not pFrozenAnimFrame>
  [  3] jmpifz [ 19] ............................ if not pFrozenAnimFrame then / else
  [  6] getprop 115 ............................. <pAnimCounter>
  [  8] pushint8 1 .............................. <1>
  [ 10] add ..................................... <pAnimCounter + 1>
  [ 11] pushint8 4 .............................. <4>
  [ 13] mod ..................................... <(pAnimCounter + 1) mod 4>
  [ 14] setprop 115 ............................. pAnimCounter = (pAnimCounter + 1) mod 4
  [ 16] jmp [ 26]
  [ 19] getprop 98 .............................. <pFrozenAnimFrame>
  [ 21] pushint8 1 .............................. <1>
  [ 23] sub ..................................... <pFrozenAnimFrame - 1>
  [ 24] setprop 115 ............................. pAnimCounter = pFrozenAnimFrame - 1
  [ 26] getprop 118 ............................. <pEyesClosed>
  [ 28] getprop 125 ............................. <pSleeping>
  [ 30] not ..................................... <not pSleeping>
  [ 31] and ..................................... <pEyesClosed and not pSleeping>
  [ 32] jmpifz [ 44] ............................ if pEyesClosed and not pSleeping then / else
  [ 35] getparam 0 .............................. <me>
  [ 37] pusharglistnoret 1 ...................... <me>
  [ 39] objcall 31 .............................. me.openEyes()
  [ 41] jmp [ 63]
  [ 44] pushint8 30 ............................. <30>
  [ 46] pusharglist 1 ........................... <30>
  [ 48] extcall 369 ............................. <random(30)>
  [ 51] pushint8 3 .............................. <3>
  [ 53] eq ...................................... <random(30) = 3>
  [ 54] jmpifz [ 63] ............................ if random(30) = 3 then
  [ 57] getparam 0 .............................. <me>
  [ 59] pusharglistnoret 1 ...................... <me>
  [ 61] objcall 30 .............................. me.closeEyes()
  [ 63] getprop 123 ............................. <pTalking>
  [ 65] pushint8 3 .............................. <3>
  [ 67] pusharglist 1 ........................... <3>
  [ 69] extcall 369 ............................. <random(3)>
  [ 72] pushint8 1 .............................. <1>
  [ 74] gt ...................................... <random(3) > 1>
  [ 75] and ..................................... <pTalking and (random(3) > 1)>
  [ 76] jmpifz [129] ............................ if pTalking and (random(3) > 1) then / else
  [ 79] getprop 121 ............................. <pMainAction>
  [ 81] pushcons 33 ............................. <"lay">
  [ 83] eq ...................................... <pMainAction = "lay">
  [ 84] jmpifz [106] ............................ if pMainAction = "lay" then / else
  [ 87] getparam 0 .............................. <me>
  [ 89] getprop 171 ............................. <pPartListSubSet>
  [ 91] pushcons 7 .............................. <"speak">
  [ 93] pusharglist 2 ........................... <pPartListSubSet, "speak">
  [ 95] objcall 173 ............................. <pPartListSubSet["speak"]>
  [ 97] pushcons 56 ............................. <"lsp">
  [ 99] pusharglistnoret 3 ...................... <me, pPartListSubSet["speak"], "lsp">
  [101] objcall 49 .............................. me.definePartListAction(pPartListSubSet["speak"], "lsp")
  [103] jmp [122]
  [106] getparam 0 .............................. <me>
  [108] getprop 171 ............................. <pPartListSubSet>
  [110] pushcons 7 .............................. <"speak">
  [112] pusharglist 2 ........................... <pPartListSubSet, "speak">
  [114] objcall 173 ............................. <pPartListSubSet["speak"]>
  [116] pushcons 57 ............................. <"spk">
  [118] pusharglistnoret 3 ...................... <me, pPartListSubSet["speak"], "spk">
  [120] objcall 49 .............................. me.definePartListAction(pPartListSubSet["speak"], "spk")
  [122] pushint8 1 .............................. <1>
  [124] setprop 120 ............................. pChanges = 1
  [126] jmp [172]
  [129] getprop 121 ............................. <pMainAction>
  [131] pushcons 33 ............................. <"lay">
  [133] eq ...................................... <pMainAction = "lay">
  [134] jmpifz [156] ............................ if pMainAction = "lay" then / else
  [137] getparam 0 .............................. <me>
  [139] getprop 171 ............................. <pPartListSubSet>
  [141] pushcons 7 .............................. <"speak">
  [143] pusharglist 2 ........................... <pPartListSubSet, "speak">
  [145] objcall 173 ............................. <pPartListSubSet["speak"]>
  [147] pushcons 33 ............................. <"lay">
  [149] pusharglistnoret 3 ...................... <me, pPartListSubSet["speak"], "lay">
  [151] objcall 49 .............................. me.definePartListAction(pPartListSubSet["speak"], "lay")
  [153] jmp [172]
  [156] getparam 0 .............................. <me>
  [158] getprop 171 ............................. <pPartListSubSet>
  [160] pushcons 7 .............................. <"speak">
  [162] pusharglist 2 ........................... <pPartListSubSet, "speak">
  [164] objcall 173 ............................. <pPartListSubSet["speak"]>
  [166] pushcons 1 .............................. <"std">
  [168] pusharglistnoret 3 ...................... <me, pPartListSubSet["speak"], "std">
  [170] objcall 49 .............................. me.definePartListAction(pPartListSubSet["speak"], "std")
  [172] getprop 122 ............................. <pMoving>
  [174] jmpifz [228] ............................ if pMoving then
  [177] getmovieprop 345 ........................ <the milliSeconds>
  [180] getprop 116 ............................. <pMoveStart>
  [182] sub ..................................... <the milliSeconds - pMoveStart>
  [183] pusharglist 1 ........................... <the milliSeconds - pMoveStart>
  [185] extcall 370 ............................. <float(the milliSeconds - pMoveStart)>
  [188] getprop 117 ............................. <pMoveTime>
  [190] div ..................................... <float(the milliSeconds - pMoveStart) / pMoveTime>
  [191] setlocal 0 .............................. tFactor = float(the milliSeconds - pMoveStart) / pMoveTime
  [193] getlocal 0 .............................. <tFactor>
  [195] pushfloat32 1.0 ......................... <1.0>
  [200] gt ...................................... <tFactor > 1.0>
  [201] jmpifz [211] ............................ if tFactor > 1.0 then
  [204] pushfloat32 1.0 ......................... <1.0>
  [209] setlocal 0 .............................. tFactor = 1.0
  [211] getprop 112 ............................. <pDestLScreen>
  [213] getprop 111 ............................. <pStartLScreen>
  [215] sub ..................................... <pDestLScreen - pStartLScreen>
  [216] getlocal 0 .............................. <tFactor>
  [218] mul ..................................... <(pDestLScreen - pStartLScreen) * tFactor>
  [219] getprop 111 ............................. <pStartLScreen>
  [221] add ..................................... <((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen>
  [222] setprop 110 ............................. pScreenLoc = ((pDestLScreen - pStartLScreen) * tFactor) + pStartLScreen
  [224] pushint8 1 .............................. <1>
  [226] setprop 120 ............................. pChanges = 1
  [228] getprop 128 ............................. <pWaving>
  [230] getprop 121 ............................. <pMainAction>
  [232] pushcons 33 ............................. <"lay">
  [234] nteq .................................... <pMainAction <> "lay">
  [235] and ..................................... <pWaving and (pMainAction <> "lay")>
  [236] jmpifz [259] ............................ if pWaving and (pMainAction <> "lay") then
  [239] getparam 0 .............................. <me>
  [241] getprop 171 ............................. <pPartListSubSet>
  [243] pushcons 11 ............................. <"handLeft">
  [245] pusharglist 2 ........................... <pPartListSubSet, "handLeft">
  [247] objcall 173 ............................. <pPartListSubSet["handLeft"]>
  [249] pushcons 58 ............................. <"wav">
  [251] pusharglistnoret 3 ...................... <me, pPartListSubSet["handLeft"], "wav">
  [253] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handLeft"], "wav")
  [255] pushint8 1 .............................. <1>
  [257] setprop 120 ............................. pChanges = 1
  [259] getprop 126 ............................. <pDancing>
  [261] getprop 127 ............................. <pFx>
  [263] or ...................................... <pDancing or pFx>
  [264] jmpifz [275] ............................ if pDancing or pFx then
  [267] pushint8 1 .............................. <1>
  [269] setprop 131 ............................. pAnimating = 1
  [271] pushint8 1 .............................. <1>
  [273] setprop 120 ............................. pChanges = 1
  [275] getmovieprop 345 ........................ <the milliSeconds>
  [278] setlocal 1 .............................. tTimeNow = the milliSeconds
  [280] pushint16 30000 ......................... <30000>
  [283] setlocal 2 .............................. tMaxTypingTime = 30000
  [285] getlocal 1 .............................. <tTimeNow>
  [287] getprop 168 ............................. <pUserTypingStartTime>
  [289] sub ..................................... <tTimeNow - pUserTypingStartTime>
  [290] getlocal 2 .............................. <tMaxTypingTime>
  [292] gt ...................................... <(tTimeNow - pUserTypingStartTime) > tMaxTypingTime>
  [293] getprop 168 ............................. <pUserTypingStartTime>
  [295] pushzero ................................ <0>
  [296] nteq .................................... <pUserTypingStartTime <> 0>
  [297] and ..................................... <((tTimeNow - pUserTypingStartTime) > tMaxTypingTime) and (pUserTypingStartTime <> 0)>
  [298] jmpifz [311] ............................ if ((tTimeNow - pUserTypingStartTime) > tMaxTypingTime) and (pUserTypingStartTime <> 0) then
  [301] pushzero ................................ <0>
  [302] setprop 168 ............................. pUserTypingStartTime = 0
  [304] getparam 0 .............................. <me>
  [306] pushzero ................................ <0>
  [307] pusharglistnoret 2 ...................... <me, 0>
  [309] objcall 26 .............................. me.setUserTypingStatus(0)
  [311] ret
end

on render me, tForceUpdate
  [  0] pushsymb 5 .............................. <#update>
  [  2] getprop 139 ............................. <pExtraObjs>
  [  4] pusharglistnoret 2 ...................... <#update, pExtraObjs>
  [  6] extcall 205 ............................. call(#update, pExtraObjs)
  [  8] getprop 120 ............................. <pChanges>
  [ 10] not ..................................... <not pChanges>
  [ 11] jmpifz [ 18] ............................ if not pChanges then
  [ 14] pusharglistnoret 0 ...................... <>
  [ 16] extcall 189 ............................. return 
  [ 18] getparam 0 .............................. <me>
  [ 20] getobjprop 127 .......................... <me.pFx>
  [ 22] getparam 0 .............................. <me>
  [ 24] getobjprop 122 .......................... <me.pMoving>
  [ 26] or ...................................... <me.pFx or me.pMoving>
  [ 27] getparam 1 .............................. <tForceUpdate>
  [ 29] or ...................................... <me.pFx or me.pMoving or tForceUpdate>
  [ 30] not ..................................... <not (me.pFx or me.pMoving or tForceUpdate)>
  [ 31] jmpifz [ 81] ............................ if not (me.pFx or me.pMoving or tForceUpdate) then
  [ 34] getprop 163 ............................. <pPeopleSize>
  [ 36] pushcons 47 ............................. <"sh">
  [ 38] eq ...................................... <pPeopleSize = "sh">
  [ 39] jmpifz [ 49] ............................ if pPeopleSize = "sh" then / else
  [ 42] pushint8 4 .............................. <4>
  [ 44] setlocal 0 .............................. tSkipFreq = 4
  [ 46] jmp [ 53]
  [ 49] pushint8 5 .............................. <5>
  [ 51] setlocal 0 .............................. tSkipFreq = 5
  [ 53] getlocal 0 .............................. <tSkipFreq>
  [ 55] pusharglist 1 ........................... <tSkipFreq>
  [ 57] extcall 369 ............................. <random(tSkipFreq)>
  [ 60] pushint8 2 .............................. <2>
  [ 62] eq ...................................... <random(tSkipFreq) = 2>
  [ 63] jmpifz [ 81] ............................ if random(tSkipFreq) = 2 then
  [ 66] pushsymb 374 ............................ <#skipAnimationFrame>
  [ 69] getprop 103 ............................. <pPartList>
  [ 71] pusharglistnoret 2 ...................... <#skipAnimationFrame, pPartList>
  [ 73] extcall 205 ............................. call(#skipAnimationFrame, pPartList)
  [ 75] pushint8 1 .............................. <1>
  [ 77] pusharglistnoret 1 ...................... <1>
  [ 79] extcall 189 ............................. return 1
  [ 81] pushzero ................................ <0>
  [ 82] setprop 120 ............................. pChanges = 0
  [ 84] getprop 121 ............................. <pMainAction>
  [ 86] pushcons 33 ............................. <"lay">
  [ 88] eq ...................................... <pMainAction = "lay">
  [ 89] jmpifz [106] ............................ if pMainAction = "lay" then / else
  [ 92] getprop 212 ............................. <pCanvasSize>
  [ 94] pushsymb 282 ............................ <#lay>
  [ 97] pusharglist 2 ........................... <pCanvasSize, #lay>
  [ 99] objcall 173 ............................. <pCanvasSize[#lay]>
  [101] setlocal 1 .............................. tSize = pCanvasSize[#lay]
  [103] jmp [116]
  [106] getprop 212 ............................. <pCanvasSize>
  [108] pushsymb 213 ............................ <#std>
  [110] pusharglist 2 ........................... <pCanvasSize, #std>
  [112] objcall 173 ............................. <pCanvasSize[#std]>
  [114] setlocal 1 .............................. tSize = pCanvasSize[#std]
  [116] getprop 204 ............................. <pFXManager>
  [118] pushzero ................................ <0>
  [119] nteq .................................... <pFXManager <> 0>
  [120] jmpifz [219] ............................ if pFXManager <> 0 then
  [123] getlocal 1 .............................. <tSize>
  [125] pusharglist 1 ........................... <tSize>
  [127] objcall 220 ............................. <tSize.duplicate()>
  [129] setlocal 1 .............................. tSize = tSize.duplicate()
  [131] getprop 204 ............................. <pFXManager>
  [133] pusharglist 1 ........................... <pFXManager>
  [135] objcall 375 ............................. <pFXManager.getEffectSizeParams()>
  [138] setlocal 2 .............................. tEffectSize = pFXManager.getEffectSizeParams()
  [140] getlocal 2 .............................. <tEffectSize>
  [142] pushzero ................................ <0>
  [143] nteq .................................... <tEffectSize <> 0>
  [144] jmpifz [219] ............................ if tEffectSize <> 0 then
  [147] getlocal 2 .............................. <tEffectSize>
  [149] pushint8 1 .............................. <1>
  [151] pusharglist 2 ........................... <tEffectSize, 1>
  [153] objcall 173 ............................. <tEffectSize[1]>
  [155] getlocal 1 .............................. <tSize>
  [157] pushint8 1 .............................. <1>
  [159] pusharglist 2 ........................... <tSize, 1>
  [161] objcall 173 ............................. <tSize[1]>
  [163] gt ...................................... <tEffectSize[1] > tSize[1]>
  [164] jmpifz [183] ............................ if tEffectSize[1] > tSize[1] then
  [167] getlocal 1 .............................. <tSize>
  [169] pushint8 1 .............................. <1>
  [171] getlocal 2 .............................. <tEffectSize>
  [173] pushint8 1 .............................. <1>
  [175] pusharglist 2 ........................... <tEffectSize, 1>
  [177] objcall 173 ............................. <tEffectSize[1]>
  [179] pusharglistnoret 3 ...................... <tSize, 1, tEffectSize[1]>
  [181] objcall 175 ............................. tSize[1] = tEffectSize[1]
  [183] getlocal 2 .............................. <tEffectSize>
  [185] pushint8 2 .............................. <2>
  [187] pusharglist 2 ........................... <tEffectSize, 2>
  [189] objcall 173 ............................. <tEffectSize[2]>
  [191] getlocal 1 .............................. <tSize>
  [193] pushint8 2 .............................. <2>
  [195] pusharglist 2 ........................... <tSize, 2>
  [197] objcall 173 ............................. <tSize[2]>
  [199] gt ...................................... <tEffectSize[2] > tSize[2]>
  [200] jmpifz [219] ............................ if tEffectSize[2] > tSize[2] then
  [203] getlocal 1 .............................. <tSize>
  [205] pushint8 2 .............................. <2>
  [207] getlocal 2 .............................. <tEffectSize>
  [209] pushint8 2 .............................. <2>
  [211] pusharglist 2 ........................... <tEffectSize, 2>
  [213] objcall 173 ............................. <tEffectSize[2]>
  [215] pusharglistnoret 3 ...................... <tSize, 2, tEffectSize[2]>
  [217] objcall 175 ............................. tSize[2] = tEffectSize[2]
  [219] getprop 199 ............................. <pShadowSpr>
  [221] pusharglist 1 ........................... <pShadowSpr>
  [223] extcall 180 ............................. <ilk(pShadowSpr)>
  [225] pushsymb 221 ............................ <#sprite>
  [227] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [228] jmpifz [411] ............................ if ilk(pShadowSpr) = #sprite then
  [231] getprop 121 ............................. <pMainAction>
  [233] pushcons 13 ............................. <"sit">
  [235] eq ...................................... <pMainAction = "sit">
  [236] jmpifz [271] ............................ if pMainAction = "sit" then / else
  [239] getprop 199 ............................. <pShadowSpr>
  [241] getprop 163 ............................. <pPeopleSize>
  [243] pushcons 59 ............................. <"_sit_sd_1_">
  [245] joinstr ................................. <pPeopleSize & "_sit_sd_1_">
  [246] getprop 105 ............................. <pFlipList>
  [248] getprop 260 ............................. <pDirection>
  [251] pushint8 1 .............................. <1>
  [253] add ..................................... <pDirection + 1>
  [254] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [256] objcall 173 ............................. <pFlipList[pDirection + 1]>
  [258] joinstr ................................. <pPeopleSize & "_sit_sd_1_" & pFlipList[pDirection + 1]>
  [259] pushcons 60 ............................. <"_0">
  [261] joinstr ................................. <pPeopleSize & "_sit_sd_1_" & pFlipList[pDirection + 1] & "_0">
  [262] pusharglist 1 ........................... <pPeopleSize & "_sit_sd_1_" & pFlipList[pDirection + 1] & "_0">
  [264] extcall 215 ............................. <getmemnum(pPeopleSize & "_sit_sd_1_" & pFlipList[pDirection + 1] & "_0")>
  [266] setobjprop 224 .......................... pShadowSpr.castNum = getmemnum(pPeopleSize & "_sit_sd_1_" & pFlipList[pDirection + 1] & "_0")
  [268] jmp [411]
  [271] getprop 121 ............................. <pMainAction>
  [273] pushcons 33 ............................. <"lay">
  [275] eq ...................................... <pMainAction = "lay">
  [276] jmpifz [290] ............................ if pMainAction = "lay" then / else
  [279] getprop 199 ............................. <pShadowSpr>
  [281] pushzero ................................ <0>
  [282] setobjprop 224 .......................... pShadowSpr.castNum = 0
  [284] pushzero ................................ <0>
  [285] setprop 226 ............................. pShadowFix = 0
  [287] jmp [411]
  [290] getparam 0 .............................. <me>
  [292] getobjprop 127 .......................... <me.pFx>
  [294] jmpifz [385] ............................ if me.pFx then
  [297] getparam 0 .............................. <me>
  [299] pusharglist 1 ........................... <me>
  [301] objcall 90 .............................. <me.getEffectShadowName()>
  [303] setlocal 3 .............................. tShadowMem = me.getEffectShadowName()
  [305] getlocal 3 .............................. <tShadowMem>
  [307] pusharglist 0 ........................... <>
  [309] extcall 101 ............................. <VOID>
  [311] nteq .................................... <tShadowMem <> VOID>
  [312] jmpifz [385] ............................ if tShadowMem <> VOID then
  [315] getprop 163 ............................. <pPeopleSize>
  [317] pushcons 61 ............................. <"_">
  [319] joinstr ................................. <pPeopleSize & "_">
  [320] getlocal 3 .............................. <tShadowMem>
  [322] joinstr ................................. <pPeopleSize & "_" & tShadowMem>
  [323] pushcons 61 ............................. <"_">
  [325] joinstr ................................. <pPeopleSize & "_" & tShadowMem & "_">
  [326] getprop 260 ............................. <pDirection>
  [329] joinstr ................................. <pPeopleSize & "_" & tShadowMem & "_" & pDirection>
  [330] pushcons 60 ............................. <"_0">
  [332] joinstr ................................. <pPeopleSize & "_" & tShadowMem & "_" & pDirection & "_0">
  [333] pusharglist 1 ........................... <pPeopleSize & "_" & tShadowMem & "_" & pDirection & "_0">
  [335] extcall 215 ............................. <getmemnum(pPeopleSize & "_" & tShadowMem & "_" & pDirection & "_0")>
  [337] setlocal 4 .............................. tMemNum = getmemnum(pPeopleSize & "_" & tShadowMem & "_" & pDirection & "_0")
  [339] getlocal 4 .............................. <tMemNum>
  [341] pushzero ................................ <0>
  [342] eq ...................................... <tMemNum = 0>
  [343] jmpifz [379] ............................ if tMemNum = 0 then
  [346] getprop 163 ............................. <pPeopleSize>
  [348] pushcons 61 ............................. <"_">
  [350] joinstr ................................. <pPeopleSize & "_">
  [351] getlocal 3 .............................. <tShadowMem>
  [353] joinstr ................................. <pPeopleSize & "_" & tShadowMem>
  [354] pushcons 61 ............................. <"_">
  [356] joinstr ................................. <pPeopleSize & "_" & tShadowMem & "_">
  [357] getprop 105 ............................. <pFlipList>
  [359] getprop 260 ............................. <pDirection>
  [362] pushint8 1 .............................. <1>
  [364] add ..................................... <pDirection + 1>
  [365] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [367] objcall 173 ............................. <pFlipList[pDirection + 1]>
  [369] joinstr ................................. <pPeopleSize & "_" & tShadowMem & "_" & pFlipList[pDirection + 1]>
  [370] pushcons 60 ............................. <"_0">
  [372] joinstr ................................. <pPeopleSize & "_" & tShadowMem & "_" & pFlipList[pDirection + 1] & "_0">
  [373] pusharglist 1 ........................... <pPeopleSize & "_" & tShadowMem & "_" & pFlipList[pDirection + 1] & "_0">
  [375] extcall 215 ............................. <getmemnum(pPeopleSize & "_" & tShadowMem & "_" & pFlipList[pDirection + 1] & "_0")>
  [377] setlocal 4 .............................. tMemNum = getmemnum(pPeopleSize & "_" & tShadowMem & "_" & pFlipList[pDirection + 1] & "_0")
  [379] getprop 199 ............................. <pShadowSpr>
  [381] getlocal 4 .............................. <tMemNum>
  [383] setobjprop 224 .......................... pShadowSpr.castNum = tMemNum
  [385] getlocal 3 .............................. <tShadowMem>
  [387] pusharglist 0 ........................... <>
  [389] extcall 101 ............................. <VOID>
  [391] eq ...................................... <tShadowMem = VOID>
  [392] jmpifz [411] ............................ if tShadowMem = VOID then
  [395] getprop 199 ............................. <pShadowSpr>
  [397] getobjprop 142 .......................... <pShadowSpr.member>
  [399] getprop 141 ............................. <pDefShadowMem>
  [401] nteq .................................... <pShadowSpr.member <> pDefShadowMem>
  [402] jmpifz [411] ............................ if pShadowSpr.member <> pDefShadowMem then
  [405] getprop 199 ............................. <pShadowSpr>
  [407] getprop 141 ............................. <pDefShadowMem>
  [409] setobjprop 142 .......................... pShadowSpr.member = pDefShadowMem
  [411] getprop 219 ............................. <pBuffer>
  [413] getobjprop 225 .......................... <pBuffer.width>
  [415] getlocal 1 .............................. <tSize>
  [417] pushint8 1 .............................. <1>
  [419] pusharglist 2 ........................... <tSize, 1>
  [421] objcall 173 ............................. <tSize[1]>
  [423] nteq .................................... <pBuffer.width <> tSize[1]>
  [424] getprop 219 ............................. <pBuffer>
  [426] getobjprop 217 .......................... <pBuffer.height>
  [428] getlocal 1 .............................. <tSize>
  [430] pushint8 2 .............................. <2>
  [432] pusharglist 2 ........................... <tSize, 2>
  [434] objcall 173 ............................. <tSize[2]>
  [436] nteq .................................... <pBuffer.height <> tSize[2]>
  [437] or ...................................... <(pBuffer.width <> tSize[1]) or (pBuffer.height <> tSize[2])>
  [438] jmpifz [577] ............................ if (pBuffer.width <> tSize[1]) or (pBuffer.height <> tSize[2]) then
  [441] getprop 214 ............................. <pMember>
  [443] getlocal 1 .............................. <tSize>
  [445] pushint8 1 .............................. <1>
  [447] pusharglist 2 ........................... <tSize, 1>
  [449] objcall 173 ............................. <tSize[1]>
  [451] getlocal 1 .............................. <tSize>
  [453] pushint8 2 .............................. <2>
  [455] pusharglist 2 ........................... <tSize, 2>
  [457] objcall 173 ............................. <tSize[2]>
  [459] getlocal 1 .............................. <tSize>
  [461] pushint8 3 .............................. <3>
  [463] pusharglist 2 ........................... <tSize, 3>
  [465] objcall 173 ............................. <tSize[3]>
  [467] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [469] extcall 216 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [471] setobjprop 216 .......................... pMember.image = image(tSize[1], tSize[2], tSize[3])
  [473] getprop 214 ............................. <pMember>
  [475] pushzero ................................ <0>
  [476] getlocal 1 .............................. <tSize>
  [478] pushint8 2 .............................. <2>
  [480] pusharglist 2 ........................... <tSize, 2>
  [482] objcall 173 ............................. <tSize[2]>
  [484] getlocal 1 .............................. <tSize>
  [486] pushint8 4 .............................. <4>
  [488] pusharglist 2 ........................... <tSize, 4>
  [490] objcall 173 ............................. <tSize[4]>
  [492] add ..................................... <tSize[2] + tSize[4]>
  [493] pusharglist 2 ........................... <0, tSize[2] + tSize[4]>
  [495] extcall 107 ............................. <point(0, tSize[2] + tSize[4])>
  [497] setobjprop 218 .......................... pMember.regPoint = point(0, tSize[2] + tSize[4])
  [499] getprop 195 ............................. <pSprite>
  [501] getlocal 1 .............................. <tSize>
  [503] pushint8 1 .............................. <1>
  [505] pusharglist 2 ........................... <tSize, 1>
  [507] objcall 173 ............................. <tSize[1]>
  [509] setobjprop 225 .......................... pSprite.width = tSize[1]
  [511] getprop 195 ............................. <pSprite>
  [513] getlocal 1 .............................. <tSize>
  [515] pushint8 2 .............................. <2>
  [517] pusharglist 2 ........................... <tSize, 2>
  [519] objcall 173 ............................. <tSize[2]>
  [521] setobjprop 217 .......................... pSprite.height = tSize[2]
  [523] getprop 198 ............................. <pMatteSpr>
  [525] getlocal 1 .............................. <tSize>
  [527] pushint8 1 .............................. <1>
  [529] pusharglist 2 ........................... <tSize, 1>
  [531] objcall 173 ............................. <tSize[1]>
  [533] setobjprop 225 .......................... pMatteSpr.width = tSize[1]
  [535] getprop 198 ............................. <pMatteSpr>
  [537] getlocal 1 .............................. <tSize>
  [539] pushint8 2 .............................. <2>
  [541] pusharglist 2 ........................... <tSize, 2>
  [543] objcall 173 ............................. <tSize[2]>
  [545] setobjprop 217 .......................... pMatteSpr.height = tSize[2]
  [547] getlocal 1 .............................. <tSize>
  [549] pushint8 1 .............................. <1>
  [551] pusharglist 2 ........................... <tSize, 1>
  [553] objcall 173 ............................. <tSize[1]>
  [555] getlocal 1 .............................. <tSize>
  [557] pushint8 2 .............................. <2>
  [559] pusharglist 2 ........................... <tSize, 2>
  [561] objcall 173 ............................. <tSize[2]>
  [563] getlocal 1 .............................. <tSize>
  [565] pushint8 3 .............................. <3>
  [567] pusharglist 2 ........................... <tSize, 3>
  [569] objcall 173 ............................. <tSize[3]>
  [571] pusharglist 3 ........................... <tSize[1], tSize[2], tSize[3]>
  [573] extcall 216 ............................. <image(tSize[1], tSize[2], tSize[3])>
  [575] setprop 219 ............................. pBuffer = image(tSize[1], tSize[2], tSize[3])
  [577] getprop 214 ............................. <pMember>
  [579] pushzero ................................ <0>
  [580] getprop 214 ............................. <pMember>
  [582] pushsymb 218 ............................ <#regPoint>
  [584] pushint8 2 .............................. <2>
  [586] pusharglist 3 ........................... <pMember, #regPoint, 2>
  [588] objcall 311 ............................. <pMember.regPoint[2]>
  [591] pusharglist 2 ........................... <0, pMember.regPoint[2]>
  [593] extcall 107 ............................. <point(0, pMember.regPoint[2])>
  [595] setobjprop 218 .......................... pMember.regPoint = point(0, pMember.regPoint[2])
  [597] pushzero ................................ <0>
  [598] setprop 226 ............................. pShadowFix = 0
  [600] getprop 195 ............................. <pSprite>
  [602] getobjprop 376 .......................... <pSprite.flipH>
  [605] jmpifz [620] ............................ if pSprite.flipH then
  [608] getprop 195 ............................. <pSprite>
  [610] pushzero ................................ <0>
  [611] setobjprop 376 .......................... pSprite.flipH = 0
  [614] getprop 198 ............................. <pMatteSpr>
  [616] pushzero ................................ <0>
  [617] setobjprop 376 .......................... pMatteSpr.flipH = 0
  [620] getprop 199 ............................. <pShadowSpr>
  [622] pusharglist 1 ........................... <pShadowSpr>
  [624] extcall 180 ............................. <ilk(pShadowSpr)>
  [626] pushsymb 221 ............................ <#sprite>
  [628] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [629] jmpifz [638] ............................ if ilk(pShadowSpr) = #sprite then
  [632] getprop 199 ............................. <pShadowSpr>
  [634] pushzero ................................ <0>
  [635] setobjprop 376 .......................... pShadowSpr.flipH = 0
  [638] getprop 154 ............................. <pCorrectLocZ>
  [640] jmpifz [661] ............................ if pCorrectLocZ then / else
  [643] getprop 266 ............................. <pLocH>
  [646] getprop 114 ............................. <pRestingHeight>
  [648] add ..................................... <pLocH + pRestingHeight>
  [649] pushint16 1000 .......................... <1000>
  [652] mul ..................................... <(pLocH + pRestingHeight) * 1000>
  [653] pushint8 2 .............................. <2>
  [655] add ..................................... <((pLocH + pRestingHeight) * 1000) + 2>
  [656] setlocal 5 .............................. tOffZ = ((pLocH + pRestingHeight) * 1000) + 2
  [658] jmp [665]
  [661] pushint8 2 .............................. <2>
  [663] setlocal 5 .............................. tOffZ = 2
  [665] getprop 195 ............................. <pSprite>
  [667] getprop 110 ............................. <pScreenLoc>
  [669] pushint8 1 .............................. <1>
  [671] pusharglist 2 ........................... <pScreenLoc, 1>
  [673] objcall 173 ............................. <pScreenLoc[1]>
  [675] setobjprop 377 .......................... pSprite.locH = pScreenLoc[1]
  [678] getprop 195 ............................. <pSprite>
  [680] getprop 110 ............................. <pScreenLoc>
  [682] pushint8 2 .............................. <2>
  [684] pusharglist 2 ........................... <pScreenLoc, 2>
  [686] objcall 173 ............................. <pScreenLoc[2]>
  [688] setobjprop 378 .......................... pSprite.locV = pScreenLoc[2]
  [691] getprop 198 ............................. <pMatteSpr>
  [693] getprop 195 ............................. <pSprite>
  [695] getobjprop 310 .......................... <pSprite.loc>
  [698] setobjprop 310 .......................... pMatteSpr.loc = pSprite.loc
  [701] getprop 199 ............................. <pShadowSpr>
  [703] pusharglist 1 ........................... <pShadowSpr>
  [705] extcall 180 ............................. <ilk(pShadowSpr)>
  [707] pushsymb 221 ............................ <#sprite>
  [709] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [710] jmpifz [730] ............................ if ilk(pShadowSpr) = #sprite then
  [713] getprop 199 ............................. <pShadowSpr>
  [715] getprop 195 ............................. <pSprite>
  [717] getobjprop 310 .......................... <pSprite.loc>
  [720] getprop 226 ............................. <pShadowFix>
  [722] pushzero ................................ <0>
  [723] pusharglist 2 ........................... <[pShadowFix, 0]>
  [725] pushlist ................................ <[pShadowFix, 0]>
  [726] add ..................................... <pSprite.loc + [pShadowFix, 0]>
  [727] setobjprop 310 .......................... pShadowSpr.loc = pSprite.loc + [pShadowFix, 0]
  [730] getprop 162 ............................. <pBaseLocZ>
  [732] pushzero ................................ <0>
  [733] nteq .................................... <pBaseLocZ <> 0>
  [734] jmpifz [746] ............................ if pBaseLocZ <> 0 then / else
  [737] getprop 195 ............................. <pSprite>
  [739] getprop 162 ............................. <pBaseLocZ>
  [741] setobjprop 247 .......................... pSprite.locZ = pBaseLocZ
  [743] jmp [764]
  [746] getprop 195 ............................. <pSprite>
  [748] getprop 110 ............................. <pScreenLoc>
  [750] pushint8 3 .............................. <3>
  [752] pusharglist 2 ........................... <pScreenLoc, 3>
  [754] objcall 173 ............................. <pScreenLoc[3]>
  [756] getlocal 5 .............................. <tOffZ>
  [758] add ..................................... <pScreenLoc[3] + tOffZ>
  [759] getprop 162 ............................. <pBaseLocZ>
  [761] add ..................................... <pScreenLoc[3] + tOffZ + pBaseLocZ>
  [762] setobjprop 247 .......................... pSprite.locZ = pScreenLoc[3] + tOffZ + pBaseLocZ
  [764] getprop 198 ............................. <pMatteSpr>
  [766] getprop 195 ............................. <pSprite>
  [768] getobjprop 247 .......................... <pSprite.locZ>
  [770] pushint8 1 .............................. <1>
  [772] add ..................................... <pSprite.locZ + 1>
  [773] setobjprop 247 .......................... pMatteSpr.locZ = pSprite.locZ + 1
  [775] getprop 199 ............................. <pShadowSpr>
  [777] pusharglist 1 ........................... <pShadowSpr>
  [779] extcall 180 ............................. <ilk(pShadowSpr)>
  [781] pushsymb 221 ............................ <#sprite>
  [783] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [784] jmpifz [798] ............................ if ilk(pShadowSpr) = #sprite then
  [787] getprop 199 ............................. <pShadowSpr>
  [789] getprop 195 ............................. <pSprite>
  [791] getobjprop 247 .......................... <pSprite.locZ>
  [793] pushint8 3 .............................. <3>
  [795] sub ..................................... <pSprite.locZ - 3>
  [796] setobjprop 247 .......................... pShadowSpr.locZ = pSprite.locZ - 3
  [798] getparam 0 .............................. <me>
  [800] pusharglistnoret 1 ...................... <me>
  [802] objcall 27 .............................. me.updateTypingSpriteLoc()
  [804] getprop 219 ............................. <pBuffer>
  [806] getprop 219 ............................. <pBuffer>
  [808] getobjprop 109 .......................... <pBuffer.rect>
  [810] getprop 135 ............................. <pAlphaColor>
  [812] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [814] objcall 379 ............................. pBuffer.fill(pBuffer.rect, pAlphaColor)
  [817] getprop 103 ............................. <pPartList>
  [819] peek 0
  [821] pusharglist 1
  [823] extcall 172
  [825] pushint8 1
  [827] peek 0
  [829] peek 2
  [831] lteq
  [832] jmpifz [914] ............................ repeat with tPart in pPartList
  [835] peek 2
  [837] peek 1
  [839] pusharglist 2
  [841] extcall 173
  [843] setlocal 6
  [845] pushzero ................................ <0>
  [846] pushzero ................................ <0>
  [847] pushzero ................................ <0>
  [848] pushzero ................................ <0>
  [849] pusharglist 4 ........................... <[0, 0, 0, 0]>
  [851] pushlist ................................ <[0, 0, 0, 0]>
  [852] setlocal 7 .............................. tRectMod = [0, 0, 0, 0]
  [854] getlocal 6 .............................. <tPart>
  [856] getobjprop 380 .......................... <tPart.pPart>
  [859] pushcons 62 ............................. <"ey">
  [861] eq ...................................... <tPart.pPart = "ey">
  [862] jmpifz [899] ............................ if tPart.pPart = "ey" then
  [865] getprop 123 ............................. <pTalking>
  [867] jmpifz [899] ............................ if pTalking then
  [870] getprop 121 ............................. <pMainAction>
  [872] pushcons 33 ............................. <"lay">
  [874] nteq .................................... <pMainAction <> "lay">
  [875] getprop 115 ............................. <pAnimCounter>
  [877] pushint8 2 .............................. <2>
  [879] mod ..................................... <pAnimCounter mod 2>
  [880] pushzero ................................ <0>
  [881] eq ...................................... <(pAnimCounter mod 2) = 0>
  [882] and ..................................... <(pMainAction <> "lay") and ((pAnimCounter mod 2) = 0)>
  [883] jmpifz [899] ............................ if (pMainAction <> "lay") and ((pAnimCounter mod 2) = 0) then
  [886] pushzero ................................ <0>
  [887] pushint8 1 .............................. <1>
  [889] inv ..................................... <-1>
  [890] pushzero ................................ <0>
  [891] pushint8 1 .............................. <1>
  [893] inv ..................................... <-1>
  [894] pusharglist 4 ........................... <[0, -1, 0, -1]>
  [896] pushlist ................................ <[0, -1, 0, -1]>
  [897] setlocal 7 .............................. tRectMod = [0, -1, 0, -1]
  [899] getlocal 6 .............................. <tPart>
  [901] getparam 1 .............................. <tForceUpdate>
  [903] getlocal 7 .............................. <tRectMod>
  [905] pusharglistnoret 3 ...................... <tPart, tForceUpdate, tRectMod>
  [907] objcall 5 ............................... tPart.update(tForceUpdate, tRectMod)
  [909] pushint8 1
  [911] add
  [912] endrepeat [827]
  [914] pop 3
  [916] getprop 214 ............................. <pMember>
  [918] getchainedprop 216 ...................... <pMember.image>
  [920] getprop 219 ............................. <pBuffer>
  [922] getprop 108 ............................. <pUpdateRect>
  [924] getprop 108 ............................. <pUpdateRect>
  [926] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pUpdateRect, pUpdateRect>
  [928] objcall 381 ............................. pMember.image.copyPixels(pBuffer, pUpdateRect, pUpdateRect)
  [931] pushzero ................................ <0>
  [932] pushzero ................................ <0>
  [933] pushzero ................................ <0>
  [934] pushzero ................................ <0>
  [935] pusharglist 4 ........................... <0, 0, 0, 0>
  [937] extcall 109 ............................. <rect(0, 0, 0, 0)>
  [939] setprop 108 ............................. pUpdateRect = rect(0, 0, 0, 0)
  [941] getparam 0 .............................. <me>
  [943] pusharglistnoret 1 ...................... <me>
  [945] objcall 94 .............................. me.updateEffects()
  [947] ret
end

on reDraw me
  [  0] getprop 219 ............................. <pBuffer>
  [  2] getprop 219 ............................. <pBuffer>
  [  4] getobjprop 109 .......................... <pBuffer.rect>
  [  6] getprop 135 ............................. <pAlphaColor>
  [  8] pusharglistnoret 3 ...................... <pBuffer, pBuffer.rect, pAlphaColor>
  [ 10] objcall 379 ............................. pBuffer.fill(pBuffer.rect, pAlphaColor)
  [ 13] pushsymb 39 ............................. <#render>
  [ 15] getprop 103 ............................. <pPartList>
  [ 17] pusharglistnoret 2 ...................... <#render, pPartList>
  [ 19] extcall 205 ............................. call(#render, pPartList)
  [ 21] getprop 214 ............................. <pMember>
  [ 23] getchainedprop 216 ...................... <pMember.image>
  [ 25] getprop 219 ............................. <pBuffer>
  [ 27] getprop 219 ............................. <pBuffer>
  [ 29] getobjprop 109 .......................... <pBuffer.rect>
  [ 31] getprop 219 ............................. <pBuffer>
  [ 33] getobjprop 109 .......................... <pBuffer.rect>
  [ 35] pusharglistnoret 4 ...................... <pMember.image, pBuffer, pBuffer.rect, pBuffer.rect>
  [ 37] objcall 381 ............................. pMember.image.copyPixels(pBuffer, pBuffer.rect, pBuffer.rect)
  [ 40] ret
end

on getClearedFigurePartList me, tmodels
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tmodels>
  [  4] getparam 0 .............................. <me>
  [  6] pusharglist 1 ........................... <me>
  [  8] objcall 52 .............................. <me.getPartListNameBase()>
  [ 10] pusharglist 3 ........................... <me, tmodels, me.getPartListNameBase()>
  [ 12] objcall 42 .............................. <me.getSpecificClearedFigurePartList(tmodels, me.getPartListNameBase())>
  [ 14] pusharglistnoret 1 ...................... <me.getSpecificClearedFigurePartList(tmodels, me.getPartListNameBase())>
  [ 16] extcall 189 ............................. return me.getSpecificClearedFigurePartList(tmodels, me.getPartListNameBase())
  [ 18] ret
end

on getSpecificClearedFigurePartList me, tmodels, tListName
  [  0] getparam 2 .............................. <tListName>
  [  2] pushcons 16 ............................. <".">
  [  4] joinstr ................................. <tListName & ".">
  [  5] getprop 163 ............................. <pPeopleSize>
  [  7] joinstr ................................. <tListName & "." & pPeopleSize>
  [  8] pusharglist 1 ........................... <tListName & "." & pPeopleSize>
  [ 10] extcall 178 ............................. <getVariableValue(tListName & "." & pPeopleSize)>
  [ 12] setlocal 0 .............................. tPartList = getVariableValue(tListName & "." & pPeopleSize)
  [ 14] getlocal 0 .............................. <tPartList>
  [ 16] getobjprop 180 .......................... <tPartList.ilk>
  [ 18] pushsymb 181 ............................ <#list>
  [ 20] nteq .................................... <tPartList.ilk <> #list>
  [ 21] jmpifz [ 31] ............................ if tPartList.ilk <> #list then
  [ 24] pusharglist 0 ........................... <[]>
  [ 26] pushlist ................................ <[]>
  [ 27] pusharglistnoret 1 ...................... <[]>
  [ 29] extcall 189 ............................. return []
  [ 31] getlocal 0 .............................. <tPartList>
  [ 33] pusharglist 1 ........................... <tPartList>
  [ 35] objcall 220 ............................. <tPartList.duplicate()>
  [ 37] setlocal 1 .............................. tPartListLegal = tPartList.duplicate()
  [ 39] getprop 171 ............................. <pPartListSubSet>
  [ 41] pushcons 5 .............................. <"figure">
  [ 43] pusharglist 2 ........................... <pPartListSubSet, "figure">
  [ 45] objcall 173 ............................. <pPartListSubSet["figure"]>
  [ 47] peek 0
  [ 49] pusharglist 1
  [ 51] extcall 172
  [ 53] pushint8 1
  [ 55] peek 0
  [ 57] peek 2
  [ 59] lteq
  [ 60] jmpifz [105] ............................ repeat with tPart in pPartListSubSet["figure"]
  [ 63] peek 2
  [ 65] peek 1
  [ 67] pusharglist 2
  [ 69] extcall 173
  [ 71] setlocal 2
  [ 73] getlocal 0 .............................. <tPartList>
  [ 75] getlocal 2 .............................. <tPart>
  [ 77] pusharglist 2 ........................... <tPartList, tPart>
  [ 79] objcall 290 ............................. <tPartList.findPos(tPart)>
  [ 82] setlocal 3 .............................. tPos = tPartList.findPos(tPart)
  [ 84] getlocal 3 .............................. <tPos>
  [ 86] pushzero ................................ <0>
  [ 87] gt ...................................... <tPos > 0>
  [ 88] jmpifz [100] ............................ if tPos > 0 then
  [ 91] getlocal 0 .............................. <tPartList>
  [ 93] getlocal 3 .............................. <tPos>
  [ 95] pusharglistnoret 2 ...................... <tPartList, tPos>
  [ 97] objcall 309 ............................. tPartList.deleteAt(tPos)
  [100] pushint8 1
  [102] add
  [103] endrepeat [ 55]
  [105] pop 3
  [107] pushint8 1 .............................. <1>
  [109] setlocal 4
  [111] getlocal 4
  [113] getparam 1 .............................. <tmodels>
  [115] getobjprop 172 .......................... <tmodels.count>
  [117] lteq
  [118] jmpifz [176] ............................ repeat with i = 1 to tmodels.count
  [121] getparam 1 .............................. <tmodels>
  [123] getlocal 4 .............................. <i>
  [125] pusharglist 2 ........................... <tmodels, i>
  [127] objcall 293 ............................. <tmodels.getPropAt(i)>
  [130] setlocal 5 .............................. tPartName = tmodels.getPropAt(i)
  [132] getlocal 0 .............................. <tPartList>
  [134] getlocal 5 .............................. <tPartName>
  [136] pusharglist 2 ........................... <tPartList, tPartName>
  [138] objcall 290 ............................. <tPartList.findPos(tPartName)>
  [141] pushzero ................................ <0>
  [142] eq ...................................... <tPartList.findPos(tPartName) = 0>
  [143] getlocal 1 .............................. <tPartListLegal>
  [145] getlocal 5 .............................. <tPartName>
  [147] pusharglist 2 ........................... <tPartListLegal, tPartName>
  [149] objcall 290 ............................. <tPartListLegal.findPos(tPartName)>
  [152] pushzero ................................ <0>
  [153] gt ...................................... <tPartListLegal.findPos(tPartName) > 0>
  [154] and ..................................... <(tPartList.findPos(tPartName) = 0) and (tPartListLegal.findPos(tPartName) > 0)>
  [155] jmpifz [167] ............................ if (tPartList.findPos(tPartName) = 0) and (tPartListLegal.findPos(tPartName) > 0) then
  [158] getlocal 0 .............................. <tPartList>
  [160] getlocal 5 .............................. <tPartName>
  [162] pusharglistnoret 2 ...................... <tPartList, tPartName>
  [164] objcall 389 ............................. tPartList.add(tPartName)
  [167] pushint8 1
  [169] getlocal 4
  [171] add
  [172] setlocal 4
  [174] endrepeat [111]
  [176] getparam 0 .............................. <me>
  [178] pusharglist 1 ........................... <me>
  [180] objcall 92 .............................. <me.getEffectAddedPartIndex()>
  [182] setlocal 6 .............................. tEffectParts = me.getEffectAddedPartIndex()
  [184] pushint8 1 .............................. <1>
  [186] setlocal 4
  [188] getlocal 4
  [190] getlocal 6 .............................. <tEffectParts>
  [192] getobjprop 172 .......................... <tEffectParts.count>
  [194] lteq
  [195] jmpifz [240] ............................ repeat with i = 1 to tEffectParts.count
  [198] getlocal 6 .............................. <tEffectParts>
  [200] getlocal 4 .............................. <i>
  [202] pusharglist 2 ........................... <tEffectParts, i>
  [204] objcall 173 ............................. <tEffectParts[i]>
  [206] setlocal 5 .............................. tPartName = tEffectParts[i]
  [208] getlocal 0 .............................. <tPartList>
  [210] getlocal 5 .............................. <tPartName>
  [212] pusharglist 2 ........................... <tPartList, tPartName>
  [214] objcall 290 ............................. <tPartList.findPos(tPartName)>
  [217] pushzero ................................ <0>
  [218] eq ...................................... <tPartList.findPos(tPartName) = 0>
  [219] jmpifz [231] ............................ if tPartList.findPos(tPartName) = 0 then
  [222] getlocal 0 .............................. <tPartList>
  [224] getlocal 5 .............................. <tPartName>
  [226] pusharglistnoret 2 ...................... <tPartList, tPartName>
  [228] objcall 389 ............................. tPartList.add(tPartName)
  [231] pushint8 1
  [233] getlocal 4
  [235] add
  [236] setlocal 4
  [238] endrepeat [188]
  [240] getparam 0 .............................. <me>
  [242] pusharglist 1 ........................... <me>
  [244] objcall 93 .............................. <me.getEffectExcludedPartIndex()>
  [246] setlocal 7 .............................. tExcludedParts = me.getEffectExcludedPartIndex()
  [248] getlocal 7 .............................. <tExcludedParts>
  [250] peek 0
  [252] pusharglist 1
  [254] extcall 172
  [256] pushint8 1
  [258] peek 0
  [260] peek 2
  [262] lteq
  [263] jmpifz [290] ............................ repeat with tPartId in tExcludedParts
  [266] peek 2
  [268] peek 1
  [270] pusharglist 2
  [272] extcall 173
  [274] setlocal 8
  [276] getlocal 0 .............................. <tPartList>
  [278] getlocal 8 .............................. <tPartId>
  [280] pusharglistnoret 2 ...................... <tPartList, tPartId>
  [282] objcall 390 ............................. tPartList.deleteOne(tPartId)
  [285] pushint8 1
  [287] add
  [288] endrepeat [258]
  [290] pop 3
  [292] getlocal 0 .............................. <tPartList>
  [294] pusharglistnoret 1 ...................... <tPartList>
  [296] extcall 189 ............................. return tPartList
  [298] ret
end

on getRawFigure me
  [  0] getprop 165 ............................. <pRawFigure>
  [  2] pusharglistnoret 1 ...................... <pRawFigure>
  [  4] extcall 189 ............................. return pRawFigure
  [  6] ret
end

on setPartLists me, tmodels
  [  0] getprop 184 ............................. <pPartActionList>
  [  2] pusharglist 1 ........................... <pPartActionList>
  [  4] extcall 194 ............................. <voidp(pPartActionList)>
  [  6] jmpifz [ 15] ............................ if voidp(pPartActionList) then
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglistnoret 1 ...................... <me>
  [ 13] objcall 50 .............................. me.resetAction()
  [ 15] getparam 1 .............................. <tmodels>
  [ 17] pusharglist 0 ........................... <>
  [ 19] extcall 101 ............................. <VOID>
  [ 21] eq ...................................... <tmodels = VOID>
  [ 22] jmpifz [ 32] ............................ if tmodels = VOID then / else
  [ 25] getprop 165 ............................. <pRawFigure>
  [ 27] setparam 1 .............................. tmodels = pRawFigure
  [ 29] jmp [ 44]
  [ 32] getparam 1 .............................. <tmodels>
  [ 34] pusharglist 1 ........................... <tmodels>
  [ 36] objcall 220 ............................. <tmodels.duplicate()>
  [ 38] setparam 1 .............................. tmodels = tmodels.duplicate()
  [ 40] getparam 1 .............................. <tmodels>
  [ 42] setprop 165 ............................. pRawFigure = tmodels
  [ 44] getparam 0 .............................. <me>
  [ 46] getparam 1 .............................. <tmodels>
  [ 48] pusharglist 2 ........................... <me, tmodels>
  [ 50] objcall 41 .............................. <me.getClearedFigurePartList(tmodels)>
  [ 52] setlocal 0 .............................. tPartDefinition = me.getClearedFigurePartList(tmodels)
  [ 54] pusharglist 0 ........................... <[:]>
  [ 56] pushproplist ............................ <[:]>
  [ 57] setlocal 1 .............................. tCurrentPartList = [:]
  [ 59] getprop 103 ............................. <pPartList>
  [ 61] getobjprop 172 .......................... <pPartList.count>
  [ 63] setlocal 2
  [ 65] getlocal 2
  [ 67] pushint8 1 .............................. <1>
  [ 69] gteq
  [ 70] jmpifz [165] ............................ repeat with i = pPartList.count down to 1
  [ 73] getprop 103 ............................. <pPartList>
  [ 75] getlocal 2 .............................. <i>
  [ 77] pusharglist 2 ........................... <pPartList, i>
  [ 79] objcall 173 ............................. <pPartList[i]>
  [ 81] setlocal 3 .............................. tPartObj = pPartList[i]
  [ 83] getlocal 3 .............................. <tPartObj>
  [ 85] getobjprop 380 .......................... <tPartObj.pPart>
  [ 88] setlocal 4 .............................. tPartType = tPartObj.pPart
  [ 90] getlocal 0 .............................. <tPartDefinition>
  [ 92] getlocal 4 .............................. <tPartType>
  [ 94] pusharglist 2 ........................... <tPartDefinition, tPartType>
  [ 96] objcall 290 ............................. <tPartDefinition.findPos(tPartType)>
  [ 99] pushzero ................................ <0>
  [100] eq ...................................... <tPartDefinition.findPos(tPartType) = 0>
  [101] getprop 171 ............................. <pPartListSubSet>
  [103] pushcons 5 .............................. <"figure">
  [105] pusharglist 2 ........................... <pPartListSubSet, "figure">
  [107] objcall 173 ............................. <pPartListSubSet["figure"]>
  [109] getlocal 4 .............................. <tPartType>
  [111] pusharglist 2 ........................... <pPartListSubSet["figure"], tPartType>
  [113] objcall 290 ............................. <pPartListSubSet["figure"].findPos(tPartType)>
  [116] and ..................................... <(tPartDefinition.findPos(tPartType) = 0) and pPartListSubSet["figure"].findPos(tPartType)>
  [117] jmpifz [145] ............................ if (tPartDefinition.findPos(tPartType) = 0) and pPartListSubSet["figure"].findPos(tPartType) then
  [120] getprop 103 ............................. <pPartList>
  [122] getlocal 2 .............................. <i>
  [124] pusharglist 2 ........................... <pPartList, i>
  [126] objcall 173 ............................. <pPartList[i]>
  [128] pusharglistnoret 1 ...................... <pPartList[i]>
  [130] objcall 397 ............................. pPartList[i].clearGraphics()
  [133] getprop 103 ............................. <pPartList>
  [135] getlocal 2 .............................. <i>
  [137] pusharglistnoret 2 ...................... <pPartList, i>
  [139] objcall 309 ............................. pPartList.deleteAt(i)
  [142] jmp [156] ............................... next repeat
  [145] getlocal 1 .............................. <tCurrentPartList>
  [147] getlocal 4 .............................. <tPartType>
  [149] getlocal 3 .............................. <tPartObj>
  [151] pusharglistnoret 3 ...................... <tCurrentPartList, tPartType, tPartObj>
  [153] objcall 398 ............................. tCurrentPartList.addProp(tPartType, tPartObj)
  [156] pushint8 -1
  [158] getlocal 2
  [160] add
  [161] setlocal 2
  [163] endrepeat [ 65]
  [165] pusharglist 0 ........................... <[:]>
  [167] pushproplist ............................ <[:]>
  [168] setprop 104 ............................. pPartIndex = [:]
  [170] pusharglist 0 ........................... <[:]>
  [172] pushproplist ............................ <[:]>
  [173] setprop 137 ............................. pColors = [:]
  [175] pushcons 63 ............................. <"human.parts.animationList">
  [177] pusharglist 1 ........................... <"human.parts.animationList">
  [179] extcall 164 ............................. <getVariable("human.parts.animationList")>
  [181] setlocal 5 .............................. tAnimationList = getVariable("human.parts.animationList")
  [183] getlocal 5 .............................. <tAnimationList>
  [185] pusharglist 1 ........................... <tAnimationList>
  [187] extcall 180 ............................. <ilk(tAnimationList)>
  [189] pushsymb 183 ............................ <#propList>
  [191] nteq .................................... <ilk(tAnimationList) <> #propList>
  [192] jmpifz [200] ............................ if ilk(tAnimationList) <> #propList then
  [195] pusharglist 0 ........................... <[:]>
  [197] pushproplist ............................ <[:]>
  [198] setlocal 5 .............................. tAnimationList = [:]
  [200] pushint8 1 .............................. <1>
  [202] setlocal 2
  [204] getlocal 2
  [206] getlocal 0 .............................. <tPartDefinition>
  [208] getobjprop 172 .......................... <tPartDefinition.count>
  [210] lteq
  [211] jmpifz [994] ............................ repeat with i = 1 to tPartDefinition.count
  [214] getlocal 0 .............................. <tPartDefinition>
  [216] getlocal 2 .............................. <i>
  [218] pusharglist 2 ........................... <tPartDefinition, i>
  [220] objcall 173 ............................. <tPartDefinition[i]>
  [222] setlocal 6 .............................. tPartSymbol = tPartDefinition[i]
  [224] pusharglist 0 ........................... <[:]>
  [226] pushproplist ............................ <[:]>
  [227] setlocal 7 .............................. tmodel = [:]
  [229] getlocal 7 .............................. <tmodel>
  [231] pushcons 64 ............................. <"model">
  [233] pusharglist 0 ........................... <[]>
  [235] pushlist ................................ <[]>
  [236] pusharglistnoret 3 ...................... <tmodel, "model", []>
  [238] objcall 175 ............................. tmodel["model"] = []
  [240] getlocal 7 .............................. <tmodel>
  [242] pushcons 65 ............................. <"color">
  [244] pusharglist 0 ........................... <[]>
  [246] pushlist ................................ <[]>
  [247] pusharglistnoret 3 ...................... <tmodel, "color", []>
  [249] objcall 175 ............................. tmodel["color"] = []
  [251] getparam 1 .............................. <tmodels>
  [253] getlocal 6 .............................. <tPartSymbol>
  [255] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [257] objcall 173 ............................. <tmodels[tPartSymbol]>
  [259] pusharglist 1 ........................... <tmodels[tPartSymbol]>
  [261] extcall 194 ............................. <voidp(tmodels[tPartSymbol])>
  [263] not ..................................... <not voidp(tmodels[tPartSymbol])>
  [264] jmpifz [359] ............................ if not voidp(tmodels[tPartSymbol]) then
  [267] pushint8 1 .............................. <1>
  [269] setlocal 8
  [271] getlocal 8
  [273] getparam 1 .............................. <tmodels>
  [275] getobjprop 172 .......................... <tmodels.count>
  [277] lteq
  [278] jmpifz [359] ............................ repeat with j = 1 to tmodels.count
  [281] getparam 1 .............................. <tmodels>
  [283] getlocal 8 .............................. <j>
  [285] pusharglist 2 ........................... <tmodels, j>
  [287] objcall 293 ............................. <tmodels.getPropAt(j)>
  [290] getlocal 6 .............................. <tPartSymbol>
  [292] eq ...................................... <tmodels.getPropAt(j) = tPartSymbol>
  [293] jmpifz [350] ............................ if tmodels.getPropAt(j) = tPartSymbol then
  [296] getlocal 7 .............................. <tmodel>
  [298] pushcons 64 ............................. <"model">
  [300] pusharglist 2 ........................... <tmodel, "model">
  [302] objcall 173 ............................. <tmodel["model"]>
  [304] getparam 1 .............................. <tmodels>
  [306] getlocal 8 .............................. <j>
  [308] pusharglist 2 ........................... <tmodels, j>
  [310] objcall 173 ............................. <tmodels[j]>
  [312] pushcons 64 ............................. <"model">
  [314] pusharglist 2 ........................... <tmodels[j], "model">
  [316] objcall 173 ............................. <tmodels[j]["model"]>
  [318] pusharglistnoret 2 ...................... <tmodel["model"], tmodels[j]["model"]>
  [320] objcall 389 ............................. tmodel["model"].add(tmodels[j]["model"])
  [323] getlocal 7 .............................. <tmodel>
  [325] pushcons 65 ............................. <"color">
  [327] pusharglist 2 ........................... <tmodel, "color">
  [329] objcall 173 ............................. <tmodel["color"]>
  [331] getparam 1 .............................. <tmodels>
  [333] getlocal 8 .............................. <j>
  [335] pusharglist 2 ........................... <tmodels, j>
  [337] objcall 173 ............................. <tmodels[j]>
  [339] pushcons 65 ............................. <"color">
  [341] pusharglist 2 ........................... <tmodels[j], "color">
  [343] objcall 173 ............................. <tmodels[j]["color"]>
  [345] pusharglistnoret 2 ...................... <tmodel["color"], tmodels[j]["color"]>
  [347] objcall 389 ............................. tmodel["color"].add(tmodels[j]["color"])
  [350] pushint8 1
  [352] getlocal 8
  [354] add
  [355] setlocal 8
  [357] endrepeat [271]
  [359] pushint8 1 .............................. <1>
  [361] setlocal 8
  [363] getlocal 8
  [365] getlocal 7 .............................. <tmodel>
  [367] pushcons 65 ............................. <"color">
  [369] pusharglist 2 ........................... <tmodel, "color">
  [371] objcall 173 ............................. <tmodel["color"]>
  [373] getobjprop 172 .......................... <tmodel["color"].count>
  [375] lteq
  [376] jmpifz [515] ............................ repeat with j = 1 to tmodel["color"].count
  [379] getlocal 7 .............................. <tmodel>
  [381] pushcons 65 ............................. <"color">
  [383] pusharglist 2 ........................... <tmodel, "color">
  [385] objcall 173 ............................. <tmodel["color"]>
  [387] getlocal 8 .............................. <j>
  [389] pusharglist 2 ........................... <tmodel["color"], j>
  [391] objcall 173 ............................. <tmodel["color"][j]>
  [393] setlocal 9 .............................. tColor = tmodel["color"][j]
  [395] getlocal 9 .............................. <tColor>
  [397] pusharglist 1 ........................... <tColor>
  [399] extcall 194 ............................. <voidp(tColor)>
  [401] jmpifz [412] ............................ if voidp(tColor) then
  [404] pushcons 66 ............................. <"EEEEEE">
  [406] pusharglist 1 ........................... <"EEEEEE">
  [408] extcall 136 ............................. <rgb("EEEEEE")>
  [410] setlocal 9 .............................. tColor = rgb("EEEEEE")
  [412] getlocal 9 .............................. <tColor>
  [414] pusharglist 1 ........................... <tColor>
  [416] extcall 399 ............................. <stringp(tColor)>
  [419] jmpifz [436] ............................ if stringp(tColor) then
  [422] pushcons 67 ............................. <"rgb(">
  [424] getlocal 9 .............................. <tColor>
  [426] joinstr ................................. <"rgb(" & tColor>
  [427] pushcons 68 ............................. <")">
  [429] joinstr ................................. <"rgb(" & tColor & ")">
  [430] pusharglist 1 ........................... <"rgb(" & tColor & ")">
  [432] extcall 156 ............................. <value("rgb(" & tColor & ")")>
  [434] setlocal 9 .............................. tColor = value("rgb(" & tColor & ")")
  [436] getlocal 9 .............................. <tColor>
  [438] getobjprop 180 .......................... <tColor.ilk>
  [440] pushsymb 366 ............................ <#color>
  [443] nteq .................................... <tColor.ilk <> #color>
  [444] jmpifz [455] ............................ if tColor.ilk <> #color then
  [447] pushcons 66 ............................. <"EEEEEE">
  [449] pusharglist 1 ........................... <"EEEEEE">
  [451] extcall 136 ............................. <rgb("EEEEEE")>
  [453] setlocal 9 .............................. tColor = rgb("EEEEEE")
  [455] getlocal 9 .............................. <tColor>
  [457] getobjprop 400 .......................... <tColor.red>
  [460] getlocal 9 .............................. <tColor>
  [462] getobjprop 401 .......................... <tColor.green>
  [465] add ..................................... <tColor.red + tColor.green>
  [466] getlocal 9 .............................. <tColor>
  [468] getobjprop 402 .......................... <tColor.blue>
  [471] add ..................................... <tColor.red + tColor.green + tColor.blue>
  [472] pushint16 238 ........................... <238>
  [475] pushint8 3 .............................. <3>
  [477] mul ..................................... <238 * 3>
  [478] gt ...................................... <(tColor.red + tColor.green + tColor.blue) > (238 * 3)>
  [479] jmpifz [490] ............................ if (tColor.red + tColor.green + tColor.blue) > (238 * 3) then
  [482] pushcons 66 ............................. <"EEEEEE">
  [484] pusharglist 1 ........................... <"EEEEEE">
  [486] extcall 136 ............................. <rgb("EEEEEE")>
  [488] setlocal 9 .............................. tColor = rgb("EEEEEE")
  [490] getlocal 7 .............................. <tmodel>
  [492] pushcons 65 ............................. <"color">
  [494] pusharglist 2 ........................... <tmodel, "color">
  [496] objcall 173 ............................. <tmodel["color"]>
  [498] getlocal 8 .............................. <j>
  [500] getlocal 9 .............................. <tColor>
  [502] pusharglistnoret 3 ...................... <tmodel["color"], j, tColor>
  [504] objcall 175 ............................. tmodel["color"][j] = tColor
  [506] pushint8 1
  [508] getlocal 8
  [510] add
  [511] setlocal 8
  [513] endrepeat [363]
  [515] getparam 1 .............................. <tmodels>
  [517] getlocal 6 .............................. <tPartSymbol>
  [519] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [521] objcall 290 ............................. <tmodels.findPos(tPartSymbol)>
  [524] pushzero ................................ <0>
  [525] gt ...................................... <tmodels.findPos(tPartSymbol) > 0>
  [526] jmpifz [604] ............................ if tmodels.findPos(tPartSymbol) > 0 then
  [529] getparam 1 .............................. <tmodels>
  [531] getlocal 6 .............................. <tPartSymbol>
  [533] pusharglist 2 ........................... <tmodels, tPartSymbol>
  [535] objcall 173 ............................. <tmodels[tPartSymbol]>
  [537] setlocal 10 ............................. tPartModels = tmodels[tPartSymbol]
  [539] pushint8 1 .............................. <1>
  [541] setlocal 11
  [543] getlocal 11
  [545] getlocal 10 ............................. <tPartModels>
  [547] getobjprop 172 .......................... <tPartModels.count>
  [549] lteq
  [550] jmpifz [604] ............................ repeat with k = 1 to tPartModels.count
  [553] getlocal 10 ............................. <tPartModels>
  [555] getlocal 11 ............................. <k>
  [557] pusharglist 2 ........................... <tPartModels, k>
  [559] objcall 293 ............................. <tPartModels.getPropAt(k)>
  [562] setlocal 12 ............................. tPropKey = tPartModels.getPropAt(k)
  [564] getlocal 7 .............................. <tmodel>
  [566] getlocal 12 ............................. <tPropKey>
  [568] pusharglist 2 ........................... <tmodel, tPropKey>
  [570] objcall 290 ............................. <tmodel.findPos(tPropKey)>
  [573] pushzero ................................ <0>
  [574] eq ...................................... <tmodel.findPos(tPropKey) = 0>
  [575] jmpifz [595] ............................ if tmodel.findPos(tPropKey) = 0 then
  [578] getlocal 7 .............................. <tmodel>
  [580] getlocal 12 ............................. <tPropKey>
  [582] getlocal 10 ............................. <tPartModels>
  [584] getlocal 11 ............................. <k>
  [586] pusharglist 2 ........................... <tPartModels, k>
  [588] objcall 173 ............................. <tPartModels[k]>
  [590] pusharglistnoret 3 ...................... <tmodel, tPropKey, tPartModels[k]>
  [592] objcall 332 ............................. tmodel.setaProp(tPropKey, tPartModels[k])
  [595] pushint8 1
  [597] getlocal 11
  [599] add
  [600] setlocal 11
  [602] endrepeat [543]
  [604] getprop 182 ............................. <pFlipPartList>
  [606] getlocal 6 .............................. <tPartSymbol>
  [608] pusharglist 2 ........................... <pFlipPartList, tPartSymbol>
  [610] objcall 173 ............................. <pFlipPartList[tPartSymbol]>
  [612] setlocal 13 ............................. tFlipPart = pFlipPartList[tPartSymbol]
  [614] getprop 184 ............................. <pPartActionList>
  [616] getlocal 6 .............................. <tPartSymbol>
  [618] pusharglist 2 ........................... <pPartActionList, tPartSymbol>
  [620] objcall 173 ............................. <pPartActionList[tPartSymbol]>
  [622] setlocal 14 ............................. tAction = pPartActionList[tPartSymbol]
  [624] getlocal 14 ............................. <tAction>
  [626] pusharglist 1 ........................... <tAction>
  [628] extcall 194 ............................. <voidp(tAction)>
  [630] jmpifz [652] ............................ if voidp(tAction) then
  [633] pushcons 1 .............................. <"std">
  [635] setlocal 14 ............................. tAction = "std"
  [637] getparam 0 .............................. <me>
  [639] pushcons 69 ............................. <"Missing action for part">
  [641] getlocal 6 .............................. <tPartSymbol>
  [643] joinpadstr .............................. <"Missing action for part" && tPartSymbol>
  [644] pushsymb 44 ............................. <#setPartLists>
  [646] pushsymb 177 ............................ <#major>
  [648] pusharglistnoret 4 ...................... <me, "Missing action for part" && tPartSymbol, #setPartLists, #major>
  [650] extcall 176 ............................. error(me, "Missing action for part" && tPartSymbol, #setPartLists, #major)
  [652] getlocal 1 .............................. <tCurrentPartList>
  [654] getlocal 6 .............................. <tPartSymbol>
  [656] pusharglist 2 ........................... <tCurrentPartList, tPartSymbol>
  [658] objcall 290 ............................. <tCurrentPartList.findPos(tPartSymbol)>
  [661] pushzero ................................ <0>
  [662] eq ...................................... <tCurrentPartList.findPos(tPartSymbol) = 0>
  [663] jmpifz [816] ............................ if tCurrentPartList.findPos(tPartSymbol) = 0 then / else
  [666] getparam 0 .............................. <me>
  [668] getlocal 6 .............................. <tPartSymbol>
  [670] pusharglist 2 ........................... <me, tPartSymbol>
  [672] objcall 51 .............................. <me.getPartClass(tPartSymbol)>
  [674] setlocal 15 ............................. tPartClass = me.getPartClass(tPartSymbol)
  [676] pushsymb 404 ............................ <#temp>
  [679] getlocal 15 ............................. <tPartClass>
  [681] pusharglist 2 ........................... <#temp, tPartClass>
  [683] extcall 403 ............................. <createObject(#temp, tPartClass)>
  [686] setlocal 3 .............................. tPartObj = createObject(#temp, tPartClass)
  [688] getprop 260 ............................. <pDirection>
  [691] setlocal 16 ............................. tDirection = pDirection
  [693] getprop 171 ............................. <pPartListSubSet>
  [695] pushcons 6 .............................. <"head">
  [697] pusharglist 2 ........................... <pPartListSubSet, "head">
  [699] objcall 173 ............................. <pPartListSubSet["head"]>
  [701] getlocal 6 .............................. <tPartSymbol>
  [703] pusharglist 2 ........................... <pPartListSubSet["head"], tPartSymbol>
  [705] objcall 290 ............................. <pPartListSubSet["head"].findPos(tPartSymbol)>
  [708] pushzero ................................ <0>
  [709] gt ...................................... <pPartListSubSet["head"].findPos(tPartSymbol) > 0>
  [710] jmpifz [718] ............................ if pPartListSubSet["head"].findPos(tPartSymbol) > 0 then
  [713] getprop 262 ............................. <pHeadDir>
  [716] setlocal 16 ............................. tDirection = pHeadDir
  [718] getlocal 3 .............................. <tPartObj>
  [720] getlocal 6 .............................. <tPartSymbol>
  [722] getlocal 7 .............................. <tmodel>
  [724] pushcons 64 ............................. <"model">
  [726] pusharglist 2 ........................... <tmodel, "model">
  [728] objcall 173 ............................. <tmodel["model"]>
  [730] getlocal 7 .............................. <tmodel>
  [732] pushcons 65 ............................. <"color">
  [734] pusharglist 2 ........................... <tmodel, "color">
  [736] objcall 173 ............................. <tmodel["color"]>
  [738] getlocal 16 ............................. <tDirection>
  [740] getlocal 14 ............................. <tAction>
  [742] getparam 0 .............................. <me>
  [744] getlocal 13 ............................. <tFlipPart>
  [746] getlocal 7 .............................. <tmodel>
  [748] pushcons 70 ............................. <"ink">
  [750] pusharglist 2 ........................... <tmodel, "ink">
  [752] objcall 272 ............................. <tmodel.getaProp("ink")>
  [755] pusharglistnoret 9 ...................... <tPartObj, tPartSymbol, tmodel["model"], tmodel["color"], tDirection, tAction, me, tFlipPart, tmodel.getaProp("ink")>
  [757] objcall 2 ............................... tPartObj.define(tPartSymbol, tmodel["model"], tmodel["color"], tDirection, tAction, me, tFlipPart, tmodel.getaProp("ink"))
  [759] getlocal 7 .............................. <tmodel>
  [761] pushcons 71 ............................. <"blend">
  [763] pusharglist 2 ........................... <tmodel, "blend">
  [765] objcall 290 ............................. <tmodel.findPos("blend")>
  [768] pushzero ................................ <0>
  [769] gt ...................................... <tmodel.findPos("blend") > 0>
  [770] jmpifz [789] ............................ if tmodel.findPos("blend") > 0 then
  [773] getlocal 3 .............................. <tPartObj>
  [775] getlocal 7 .............................. <tmodel>
  [777] pushcons 71 ............................. <"blend">
  [779] pusharglist 2 ........................... <tmodel, "blend">
  [781] objcall 272 ............................. <tmodel.getaProp("blend")>
  [784] pusharglistnoret 2 ...................... <tPartObj, tmodel.getaProp("blend")>
  [786] objcall 405 ............................. tPartObj.defineBlend(tmodel.getaProp("blend"))
  [789] getlocal 3 .............................. <tPartObj>
  [791] getlocal 5 .............................. <tAnimationList>
  [793] getlocal 6 .............................. <tPartSymbol>
  [795] pusharglist 2 ........................... <tAnimationList, tPartSymbol>
  [797] objcall 173 ............................. <tAnimationList[tPartSymbol]>
  [799] pusharglistnoret 2 ...................... <tPartObj, tAnimationList[tPartSymbol]>
  [801] objcall 406 ............................. tPartObj.setAnimations(tAnimationList[tPartSymbol])
  [804] getprop 103 ............................. <pPartList>
  [806] getlocal 3 .............................. <tPartObj>
  [808] pusharglistnoret 2 ...................... <pPartList, tPartObj>
  [810] objcall 389 ............................. pPartList.add(tPartObj)
  [813] jmp [952]
  [816] getlocal 7 .............................. <tmodel>
  [818] pushcons 64 ............................. <"model">
  [820] pusharglist 2 ........................... <tmodel, "model">
  [822] objcall 173 ............................. <tmodel["model"]>
  [824] getobjprop 172 .......................... <tmodel["model"].count>
  [826] pushzero ................................ <0>
  [827] gt ...................................... <tmodel["model"].count > 0>
  [828] jmpifz [952] ............................ if tmodel["model"].count > 0 then
  [831] getprop 103 ............................. <pPartList>
  [833] getlocal 2 .............................. <i>
  [835] pusharglist 2 ........................... <pPartList, i>
  [837] objcall 173 ............................. <pPartList[i]>
  [839] pusharglistnoret 1 ...................... <pPartList[i]>
  [841] objcall 397 ............................. pPartList[i].clearGraphics()
  [844] getlocal 1 .............................. <tCurrentPartList>
  [846] getlocal 6 .............................. <tPartSymbol>
  [848] pusharglist 2 ........................... <tCurrentPartList, tPartSymbol>
  [850] objcall 173 ............................. <tCurrentPartList[tPartSymbol]>
  [852] setlocal 3 .............................. tPartObj = tCurrentPartList[tPartSymbol]
  [854] getlocal 3 .............................. <tPartObj>
  [856] getlocal 7 .............................. <tmodel>
  [858] pushcons 64 ............................. <"model">
  [860] pusharglist 2 ........................... <tmodel, "model">
  [862] objcall 173 ............................. <tmodel["model"]>
  [864] getlocal 7 .............................. <tmodel>
  [866] pushcons 65 ............................. <"color">
  [868] pusharglist 2 ........................... <tmodel, "color">
  [870] objcall 173 ............................. <tmodel["color"]>
  [872] pusharglistnoret 3 ...................... <tPartObj, tmodel["model"], tmodel["color"]>
  [874] objcall 407 ............................. tPartObj.changePartData(tmodel["model"], tmodel["color"])
  [877] getlocal 7 .............................. <tmodel>
  [879] pushcons 71 ............................. <"blend">
  [881] pusharglist 2 ........................... <tmodel, "blend">
  [883] objcall 290 ............................. <tmodel.findPos("blend")>
  [886] pushzero ................................ <0>
  [887] gt ...................................... <tmodel.findPos("blend") > 0>
  [888] jmpifz [907] ............................ if tmodel.findPos("blend") > 0 then
  [891] getlocal 3 .............................. <tPartObj>
  [893] getlocal 7 .............................. <tmodel>
  [895] pushcons 71 ............................. <"blend">
  [897] pusharglist 2 ........................... <tmodel, "blend">
  [899] objcall 272 ............................. <tmodel.getaProp("blend")>
  [902] pusharglistnoret 2 ...................... <tPartObj, tmodel.getaProp("blend")>
  [904] objcall 405 ............................. tPartObj.defineBlend(tmodel.getaProp("blend"))
  [907] getlocal 7 .............................. <tmodel>
  [909] pushcons 70 ............................. <"ink">
  [911] pusharglist 2 ........................... <tmodel, "ink">
  [913] objcall 290 ............................. <tmodel.findPos("ink")>
  [916] pushzero ................................ <0>
  [917] gt ...................................... <tmodel.findPos("ink") > 0>
  [918] jmpifz [937] ............................ if tmodel.findPos("ink") > 0 then
  [921] getlocal 3 .............................. <tPartObj>
  [923] getlocal 7 .............................. <tmodel>
  [925] pushcons 70 ............................. <"ink">
  [927] pusharglist 2 ........................... <tmodel, "ink">
  [929] objcall 272 ............................. <tmodel.getaProp("ink")>
  [932] pusharglistnoret 2 ...................... <tPartObj, tmodel.getaProp("ink")>
  [934] objcall 408 ............................. tPartObj.defineInk(tmodel.getaProp("ink"))
  [937] getlocal 3 .............................. <tPartObj>
  [939] getlocal 5 .............................. <tAnimationList>
  [941] getlocal 6 .............................. <tPartSymbol>
  [943] pusharglist 2 ........................... <tAnimationList, tPartSymbol>
  [945] objcall 173 ............................. <tAnimationList[tPartSymbol]>
  [947] pusharglistnoret 2 ...................... <tPartObj, tAnimationList[tPartSymbol]>
  [949] objcall 406 ............................. tPartObj.setAnimations(tAnimationList[tPartSymbol])
  [952] getlocal 7 .............................. <tmodel>
  [954] pushcons 65 ............................. <"color">
  [956] pusharglist 2 ........................... <tmodel, "color">
  [958] objcall 173 ............................. <tmodel["color"]>
  [960] getobjprop 172 .......................... <tmodel["color"].count>
  [962] pushzero ................................ <0>
  [963] gt ...................................... <tmodel["color"].count > 0>
  [964] jmpifz [984] ............................ if tmodel["color"].count > 0 then
  [967] getprop 137 ............................. <pColors>
  [969] getlocal 6 .............................. <tPartSymbol>
  [971] getlocal 7 .............................. <tmodel>
  [973] pushcons 65 ............................. <"color">
  [975] pusharglist 2 ........................... <tmodel, "color">
  [977] objcall 173 ............................. <tmodel["color"]>
  [979] pusharglistnoret 3 ...................... <pColors, tPartSymbol, tmodel["color"]>
  [981] objcall 332 ............................. pColors.setaProp(tPartSymbol, tmodel["color"])
  [984] pushint8 1
  [986] getlocal 2
  [988] add
  [989] setlocal 2
  [991] endrepeat [204]
  [994] pushint8 1 .............................. <1>
  [996] setlocal 2
  [998] getlocal 2
  [1000] getprop 103 ............................ <pPartList>
  [1002] getobjprop 172 ......................... <pPartList.count>
  [1004] lteq
  [1005] jmpifz [1036] .......................... repeat with i = 1 to pPartList.count
  [1008] getprop 104 ............................ <pPartIndex>
  [1010] getprop 103 ............................ <pPartList>
  [1012] getlocal 2 ............................. <i>
  [1014] pusharglist 2 .......................... <pPartList, i>
  [1016] objcall 173 ............................ <pPartList[i]>
  [1018] getobjprop 380 ......................... <pPartList[i].pPart>
  [1021] getlocal 2 ............................. <i>
  [1023] pusharglistnoret 3 ..................... <pPartIndex, pPartList[i].pPart, i>
  [1025] objcall 175 ............................ pPartIndex[pPartList[i].pPart] = i
  [1027] pushint8 1
  [1029] getlocal 2
  [1031] add
  [1032] setlocal 2
  [1034] endrepeat [998]
  [1036] pushint8 1 ............................. <1>
  [1038] pusharglistnoret 1 ..................... <1>
  [1040] extcall 189 ............................ return 1
  [1042] ret
end

on arrangeParts me, tOrderName
  [  0] pushcons 0 .............................. <EMPTY>
  [  2] setlocal 0 .............................. tPartOrder = EMPTY
  [  4] pushcons 0 .............................. <EMPTY>
  [  6] setlocal 1 .............................. tDirData = EMPTY
  [  8] getprop 260 ............................. <pDirection>
  [ 11] pusharglist 1 ........................... <pDirection>
  [ 13] extcall 194 ............................. <voidp(pDirection)>
  [ 15] not ..................................... <not voidp(pDirection)>
  [ 16] jmpifz [ 27] ............................ if not voidp(pDirection) then
  [ 19] pushcons 16 ............................. <".">
  [ 21] getprop 260 ............................. <pDirection>
  [ 24] joinstr ................................. <"." & pDirection>
  [ 25] setlocal 1 .............................. tDirData = "." & pDirection
  [ 27] getparam 1 .............................. <tOrderName>
  [ 29] pusharglist 1 ........................... <tOrderName>
  [ 31] extcall 194 ............................. <voidp(tOrderName)>
  [ 33] jmpifz [ 40] ............................ if voidp(tOrderName) then
  [ 36] pushcons 72 ............................. <"human.parts">
  [ 38] setparam 1 .............................. tOrderName = "human.parts"
  [ 40] getparam 1 .............................. <tOrderName>
  [ 42] pushcons 16 ............................. <".">
  [ 44] joinstr ................................. <tOrderName & ".">
  [ 45] getprop 163 ............................. <pPeopleSize>
  [ 47] joinstr ................................. <tOrderName & "." & pPeopleSize>
  [ 48] setlocal 0 .............................. tPartOrder = tOrderName & "." & pPeopleSize
  [ 50] getlocal 0 .............................. <tPartOrder>
  [ 52] pushcons 16 ............................. <".">
  [ 54] joinstr ................................. <tPartOrder & ".">
  [ 55] getprop 121 ............................. <pMainAction>
  [ 57] joinstr ................................. <tPartOrder & "." & pMainAction>
  [ 58] setlocal 2 .............................. tPartOrderAction = tPartOrder & "." & pMainAction
  [ 60] getlocal 2 .............................. <tPartOrderAction>
  [ 62] getlocal 1 .............................. <tDirData>
  [ 64] joinstr ................................. <tPartOrderAction & tDirData>
  [ 65] pusharglist 1 ........................... <tPartOrderAction & tDirData>
  [ 67] extcall 174 ............................. <variableExists(tPartOrderAction & tDirData)>
  [ 69] jmpifz [ 76] ............................ if variableExists(tPartOrderAction & tDirData) then
  [ 72] getlocal 2 .............................. <tPartOrderAction>
  [ 74] setlocal 0 .............................. tPartOrder = tPartOrderAction
  [ 76] getprop 185 ............................. <pLeftHandUp>
  [ 78] jmpifz [104] ............................ if pLeftHandUp then
  [ 81] getlocal 0 .............................. <tPartOrder>
  [ 83] pushcons 73 ............................. <".lh-up">
  [ 85] joinstr ................................. <tPartOrder & ".lh-up">
  [ 86] setlocal 3 .............................. tPartOrderLeftHand = tPartOrder & ".lh-up"
  [ 88] getlocal 3 .............................. <tPartOrderLeftHand>
  [ 90] getlocal 1 .............................. <tDirData>
  [ 92] joinstr ................................. <tPartOrderLeftHand & tDirData>
  [ 93] pusharglist 1 ........................... <tPartOrderLeftHand & tDirData>
  [ 95] extcall 174 ............................. <variableExists(tPartOrderLeftHand & tDirData)>
  [ 97] jmpifz [104] ............................ if variableExists(tPartOrderLeftHand & tDirData) then
  [100] getlocal 3 .............................. <tPartOrderLeftHand>
  [102] setlocal 0 .............................. tPartOrder = tPartOrderLeftHand
  [104] getprop 186 ............................. <pRightHandUp>
  [106] jmpifz [132] ............................ if pRightHandUp then
  [109] getlocal 0 .............................. <tPartOrder>
  [111] pushcons 74 ............................. <".rh-up">
  [113] joinstr ................................. <tPartOrder & ".rh-up">
  [114] setlocal 4 .............................. tPartOrderRightHand = tPartOrder & ".rh-up"
  [116] getlocal 4 .............................. <tPartOrderRightHand>
  [118] getlocal 1 .............................. <tDirData>
  [120] joinstr ................................. <tPartOrderRightHand & tDirData>
  [121] pusharglist 1 ........................... <tPartOrderRightHand & tDirData>
  [123] extcall 174 ............................. <variableExists(tPartOrderRightHand & tDirData)>
  [125] jmpifz [132] ............................ if variableExists(tPartOrderRightHand & tDirData) then
  [128] getlocal 4 .............................. <tPartOrderRightHand>
  [130] setlocal 0 .............................. tPartOrder = tPartOrderRightHand
  [132] getlocal 0 .............................. <tPartOrder>
  [134] getlocal 1 .............................. <tDirData>
  [136] joinstr ................................. <tPartOrder & tDirData>
  [137] setlocal 0 .............................. tPartOrder = tPartOrder & tDirData
  [139] getlocal 0 .............................. <tPartOrder>
  [141] getprop 166 ............................. <pPartOrderOld>
  [143] eq ...................................... <tPartOrder = pPartOrderOld>
  [144] jmpifz [153] ............................ if tPartOrder = pPartOrderOld then
  [147] pushint8 1 .............................. <1>
  [149] pusharglistnoret 1 ...................... <1>
  [151] extcall 189 ............................. return 1
  [153] getlocal 0 .............................. <tPartOrder>
  [155] pusharglist 1 ........................... <tPartOrder>
  [157] extcall 174 ............................. <variableExists(tPartOrder)>
  [159] not ..................................... <not variableExists(tPartOrder)>
  [160] jmpifz [181] ............................ if not variableExists(tPartOrder) then / else
  [163] getparam 0 .............................. <me>
  [165] pushcons 39 ............................. <"No human part order found">
  [167] getlocal 0 .............................. <tPartOrder>
  [169] joinpadstr .............................. <"No human part order found" && tPartOrder>
  [170] pushsymb 45 ............................. <#arrangeParts>
  [172] pushsymb 177 ............................ <#major>
  [174] pusharglistnoret 4 ...................... <me, "No human part order found" && tPartOrder, #arrangeParts, #major>
  [176] extcall 176 ............................. error(me, "No human part order found" && tPartOrder, #arrangeParts, #major)
  [178] jmp [324]
  [181] getlocal 0 .............................. <tPartOrder>
  [183] pusharglist 1 ........................... <tPartOrder>
  [185] extcall 178 ............................. <getVariableValue(tPartOrder)>
  [187] setlocal 5 .............................. tPartDefinition = getVariableValue(tPartOrder)
  [189] getprop 204 ............................. <pFXManager>
  [191] pushzero ................................ <0>
  [192] nteq .................................... <pFXManager <> 0>
  [193] jmpifz [208] ............................ if pFXManager <> 0 then
  [196] getprop 204 ............................. <pFXManager>
  [198] getlocal 5 .............................. <tPartDefinition>
  [200] getprop 260 ............................. <pDirection>
  [203] pusharglistnoret 3 ...................... <pFXManager, tPartDefinition, pDirection>
  [205] objcall 422 ............................. pFXManager.alignEffectBodyparts(tPartDefinition, pDirection)
  [208] pusharglist 0 ........................... <[]>
  [210] pushlist ................................ <[]>
  [211] setlocal 6 .............................. tTempPartList = []
  [213] getlocal 5 .............................. <tPartDefinition>
  [215] peek 0
  [217] pusharglist 1
  [219] extcall 172
  [221] pushint8 1
  [223] peek 0
  [225] peek 2
  [227] lteq
  [228] jmpifz [283] ............................ repeat with tPartSymbol in tPartDefinition
  [231] peek 2
  [233] peek 1
  [235] pusharglist 2
  [237] extcall 173
  [239] setlocal 7
  [241] getprop 104 ............................. <pPartIndex>
  [243] getlocal 7 .............................. <tPartSymbol>
  [245] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [247] objcall 173 ............................. <pPartIndex[tPartSymbol]>
  [249] pusharglist 1 ........................... <pPartIndex[tPartSymbol]>
  [251] extcall 194 ............................. <voidp(pPartIndex[tPartSymbol])>
  [253] not ..................................... <not voidp(pPartIndex[tPartSymbol])>
  [254] jmpifz [278] ............................ if not voidp(pPartIndex[tPartSymbol]) then
  [257] getlocal 6 .............................. <tTempPartList>
  [259] getprop 103 ............................. <pPartList>
  [261] getprop 104 ............................. <pPartIndex>
  [263] getlocal 7 .............................. <tPartSymbol>
  [265] pusharglist 2 ........................... <pPartIndex, tPartSymbol>
  [267] objcall 173 ............................. <pPartIndex[tPartSymbol]>
  [269] pusharglist 2 ........................... <pPartList, pPartIndex[tPartSymbol]>
  [271] objcall 173 ............................. <pPartList[pPartIndex[tPartSymbol]]>
  [273] pusharglistnoret 2 ...................... <tTempPartList, pPartList[pPartIndex[tPartSymbol]]>
  [275] objcall 319 ............................. tTempPartList.append(pPartList[pPartIndex[tPartSymbol]])
  [278] pushint8 1
  [280] add
  [281] endrepeat [223]
  [283] pop 3
  [285] getlocal 6 .............................. <tTempPartList>
  [287] getobjprop 172 .......................... <tTempPartList.count>
  [289] getprop 103 ............................. <pPartList>
  [291] getobjprop 172 .......................... <pPartList.count>
  [293] nteq .................................... <tTempPartList.count <> pPartList.count>
  [294] jmpifz [316] ............................ if tTempPartList.count <> pPartList.count then
  [297] getparam 0 .............................. <me>
  [299] pushcons 75 ............................. <"Invalid human part order">
  [301] getlocal 0 .............................. <tPartOrder>
  [303] joinpadstr .............................. <"Invalid human part order" && tPartOrder>
  [304] pushsymb 45 ............................. <#arrangeParts>
  [306] pushsymb 177 ............................ <#major>
  [308] pusharglist 4 ........................... <me, "Invalid human part order" && tPartOrder, #arrangeParts, #major>
  [310] extcall 176 ............................. <error(me, "Invalid human part order" && tPartOrder, #arrangeParts, #major)>
  [312] pusharglistnoret 1 ...................... <error(me, "Invalid human part order" && tPartOrder, #arrangeParts, #major)>
  [314] extcall 189 ............................. return error(me, "Invalid human part order" && tPartOrder, #arrangeParts, #major)
  [316] getlocal 6 .............................. <tTempPartList>
  [318] setprop 103 ............................. pPartList = tTempPartList
  [320] getlocal 0 .............................. <tPartOrder>
  [322] setprop 166 ............................. pPartOrderOld = tPartOrder
  [324] pushint8 1 .............................. <1>
  [326] setlocal 8
  [328] getlocal 8
  [330] getprop 103 ............................. <pPartList>
  [332] getobjprop 172 .......................... <pPartList.count>
  [334] lteq
  [335] jmpifz [366] ............................ repeat with i = 1 to pPartList.count
  [338] getprop 104 ............................. <pPartIndex>
  [340] getprop 103 ............................. <pPartList>
  [342] getlocal 8 .............................. <i>
  [344] pusharglist 2 ........................... <pPartList, i>
  [346] objcall 173 ............................. <pPartList[i]>
  [348] getobjprop 380 .......................... <pPartList[i].pPart>
  [351] getlocal 8 .............................. <i>
  [353] pusharglistnoret 3 ...................... <pPartIndex, pPartList[i].pPart, i>
  [355] objcall 175 ............................. pPartIndex[pPartList[i].pPart] = i
  [357] pushint8 1
  [359] getlocal 8
  [361] add
  [362] setlocal 8
  [364] endrepeat [328]
  [366] ret
end

on flipImage me, tImg_a
  [  0] getparam 1 .............................. <tImg_a>
  [  2] getobjprop 225 .......................... <tImg_a.width>
  [  4] getparam 1 .............................. <tImg_a>
  [  6] getobjprop 217 .......................... <tImg_a.height>
  [  8] getparam 1 .............................. <tImg_a>
  [ 10] getobjprop 427 .......................... <tImg_a.depth>
  [ 13] pusharglist 3 ........................... <tImg_a.width, tImg_a.height, tImg_a.depth>
  [ 15] extcall 216 ............................. <image(tImg_a.width, tImg_a.height, tImg_a.depth)>
  [ 17] setlocal 0 .............................. tImg_b = image(tImg_a.width, tImg_a.height, tImg_a.depth)
  [ 19] getparam 1 .............................. <tImg_a>
  [ 21] getobjprop 225 .......................... <tImg_a.width>
  [ 23] pushzero ................................ <0>
  [ 24] pusharglist 2 ........................... <tImg_a.width, 0>
  [ 26] extcall 107 ............................. <point(tImg_a.width, 0)>
  [ 28] pushzero ................................ <0>
  [ 29] pushzero ................................ <0>
  [ 30] pusharglist 2 ........................... <0, 0>
  [ 32] extcall 107 ............................. <point(0, 0)>
  [ 34] pushzero ................................ <0>
  [ 35] getparam 1 .............................. <tImg_a>
  [ 37] getobjprop 217 .......................... <tImg_a.height>
  [ 39] pusharglist 2 ........................... <0, tImg_a.height>
  [ 41] extcall 107 ............................. <point(0, tImg_a.height)>
  [ 43] getparam 1 .............................. <tImg_a>
  [ 45] getobjprop 225 .......................... <tImg_a.width>
  [ 47] getparam 1 .............................. <tImg_a>
  [ 49] getobjprop 217 .......................... <tImg_a.height>
  [ 51] pusharglist 2 ........................... <tImg_a.width, tImg_a.height>
  [ 53] extcall 107 ............................. <point(tImg_a.width, tImg_a.height)>
  [ 55] pusharglist 4 ........................... <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 57] pushlist ................................ <[point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]>
  [ 58] setlocal 1 .............................. tQuad = [point(tImg_a.width, 0), point(0, 0), point(0, tImg_a.height), point(tImg_a.width, tImg_a.height)]
  [ 60] getlocal 0 .............................. <tImg_b>
  [ 62] getparam 1 .............................. <tImg_a>
  [ 64] getlocal 1 .............................. <tQuad>
  [ 66] getparam 1 .............................. <tImg_a>
  [ 68] getobjprop 109 .......................... <tImg_a.rect>
  [ 70] pusharglistnoret 4 ...................... <tImg_b, tImg_a, tQuad, tImg_a.rect>
  [ 72] objcall 381 ............................. tImg_b.copyPixels(tImg_a, tQuad, tImg_a.rect)
  [ 75] getlocal 0 .............................. <tImg_b>
  [ 77] pusharglistnoret 1 ...................... <tImg_b>
  [ 79] extcall 189 ............................. return tImg_b
  [ 81] ret
end

on getCanvasName me
  [  0] getprop 169 ............................. <pCanvasName>
  [  2] pusharglistnoret 1 ...................... <pCanvasName>
  [  4] extcall 189 ............................. return pCanvasName
  [  6] ret
end

on getDefinedPartList me, tPartNameList
  [  0] pusharglist 0 ........................... <[]>
  [  2] pushlist ................................ <[]>
  [  3] setlocal 0 .............................. tPartList = []
  [  5] getparam 1 .............................. <tPartNameList>
  [  7] peek 0
  [  9] pusharglist 1
  [ 11] extcall 172
  [ 13] pushint8 1
  [ 15] peek 0
  [ 17] peek 2
  [ 19] lteq
  [ 20] jmpifz [ 79] ............................ repeat with tPartName in tPartNameList
  [ 23] peek 2
  [ 25] peek 1
  [ 27] pusharglist 2
  [ 29] extcall 173
  [ 31] setlocal 1
  [ 33] getprop 104 ............................. <pPartIndex>
  [ 35] getlocal 1 .............................. <tPartName>
  [ 37] pusharglist 2 ........................... <pPartIndex, tPartName>
  [ 39] objcall 173 ............................. <pPartIndex[tPartName]>
  [ 41] pusharglist 1 ........................... <pPartIndex[tPartName]>
  [ 43] extcall 194 ............................. <voidp(pPartIndex[tPartName])>
  [ 45] not ..................................... <not voidp(pPartIndex[tPartName])>
  [ 46] jmpifz [ 74] ............................ if not voidp(pPartIndex[tPartName]) then
  [ 49] getprop 104 ............................. <pPartIndex>
  [ 51] getlocal 1 .............................. <tPartName>
  [ 53] pusharglist 2 ........................... <pPartIndex, tPartName>
  [ 55] objcall 173 ............................. <pPartIndex[tPartName]>
  [ 57] setlocal 2 .............................. tPos = pPartIndex[tPartName]
  [ 59] getlocal 0 .............................. <tPartList>
  [ 61] getprop 103 ............................. <pPartList>
  [ 63] getlocal 2 .............................. <tPos>
  [ 65] pusharglist 2 ........................... <pPartList, tPos>
  [ 67] objcall 173 ............................. <pPartList[tPos]>
  [ 69] pusharglistnoret 2 ...................... <tPartList, pPartList[tPos]>
  [ 71] objcall 319 ............................. tPartList.append(pPartList[tPos])
  [ 74] pushint8 1
  [ 76] add
  [ 77] endrepeat [ 15]
  [ 79] pop 3
  [ 81] getlocal 0 .............................. <tPartList>
  [ 83] pusharglistnoret 1 ...................... <tPartList>
  [ 85] extcall 189 ............................. return tPartList
  [ 87] ret
end

on definePartListAction me, tPartList, tAction
  [  0] getprop 184 ............................. <pPartActionList>
  [  2] pusharglist 1 ........................... <pPartActionList>
  [  4] extcall 194 ............................. <voidp(pPartActionList)>
  [  6] jmpifz [ 15] ............................ if voidp(pPartActionList) then
  [  9] getparam 0 .............................. <me>
  [ 11] pusharglistnoret 1 ...................... <me>
  [ 13] objcall 50 .............................. me.resetAction()
  [ 15] getparam 1 .............................. <tPartList>
  [ 17] peek 0
  [ 19] pusharglist 1
  [ 21] extcall 172
  [ 23] pushint8 1
  [ 25] peek 0
  [ 27] peek 2
  [ 29] lteq
  [ 30] jmpifz [ 58] ............................ repeat with tPart in tPartList
  [ 33] peek 2
  [ 35] peek 1
  [ 37] pusharglist 2
  [ 39] extcall 173
  [ 41] setlocal 0
  [ 43] getprop 184 ............................. <pPartActionList>
  [ 45] getlocal 0 .............................. <tPart>
  [ 47] getparam 2 .............................. <tAction>
  [ 49] pusharglistnoret 3 ...................... <pPartActionList, tPart, tAction>
  [ 51] objcall 175 ............................. pPartActionList[tPart] = tAction
  [ 53] pushint8 1
  [ 55] add
  [ 56] endrepeat [ 25]
  [ 58] pop 3
  [ 60] pushsymb 432 ............................ <#defineAct>
  [ 63] getparam 0 .............................. <me>
  [ 65] getparam 1 .............................. <tPartList>
  [ 67] pusharglist 2 ........................... <me, tPartList>
  [ 69] objcall 48 .............................. <me.getDefinedPartList(tPartList)>
  [ 71] getparam 2 .............................. <tAction>
  [ 73] pusharglistnoret 3 ...................... <#defineAct, me.getDefinedPartList(tPartList), tAction>
  [ 75] extcall 205 ............................. call(#defineAct, me.getDefinedPartList(tPartList), tAction)
  [ 77] ret
end

on resetAction me
  [  0] pushcons 1 .............................. <"std">
  [  2] setprop 121 ............................. pMainAction = "std"
  [  4] pushzero ................................ <0>
  [  5] setprop 185 ............................. pLeftHandUp = 0
  [  7] pushzero ................................ <0>
  [  8] setprop 186 ............................. pRightHandUp = 0
  [ 10] getprop 184 ............................. <pPartActionList>
  [ 12] pusharglist 1 ........................... <pPartActionList>
  [ 14] extcall 194 ............................. <voidp(pPartActionList)>
  [ 16] jmpifz [ 24] ............................ if voidp(pPartActionList) then
  [ 19] pusharglist 0 ........................... <[:]>
  [ 21] pushproplist ............................ <[:]>
  [ 22] setprop 184 ............................. pPartActionList = [:]
  [ 24] getprop 184 ............................. <pPartActionList>
  [ 26] getobjprop 172 .......................... <pPartActionList.count>
  [ 28] pushzero ................................ <0>
  [ 29] eq ...................................... <pPartActionList.count = 0>
  [ 30] jmpifz [109] ............................ if pPartActionList.count = 0 then / else
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglist 1 ........................... <me>
  [ 37] objcall 52 .............................. <me.getPartListNameBase()>
  [ 39] pushcons 16 ............................. <".">
  [ 41] joinstr ................................. <me.getPartListNameBase() & ".">
  [ 42] getprop 163 ............................. <pPeopleSize>
  [ 44] joinstr ................................. <me.getPartListNameBase() & "." & pPeopleSize>
  [ 45] pusharglist 1 ........................... <me.getPartListNameBase() & "." & pPeopleSize>
  [ 47] extcall 178 ............................. <getVariableValue(me.getPartListNameBase() & "." & pPeopleSize)>
  [ 49] setlocal 0 .............................. tPartList = getVariableValue(me.getPartListNameBase() & "." & pPeopleSize)
  [ 51] getlocal 0 .............................. <tPartList>
  [ 53] getobjprop 180 .......................... <tPartList.ilk>
  [ 55] pushsymb 181 ............................ <#list>
  [ 57] eq ...................................... <tPartList.ilk = #list>
  [ 58] jmpifz [106] ............................ if tPartList.ilk = #list then
  [ 61] getlocal 0 .............................. <tPartList>
  [ 63] peek 0
  [ 65] pusharglist 1
  [ 67] extcall 172
  [ 69] pushint8 1
  [ 71] peek 0
  [ 73] peek 2
  [ 75] lteq
  [ 76] jmpifz [104] ............................ repeat with tPart in tPartList
  [ 79] peek 2
  [ 81] peek 1
  [ 83] pusharglist 2
  [ 85] extcall 173
  [ 87] setlocal 1
  [ 89] getprop 184 ............................. <pPartActionList>
  [ 91] getlocal 1 .............................. <tPart>
  [ 93] getprop 121 ............................. <pMainAction>
  [ 95] pusharglistnoret 3 ...................... <pPartActionList, tPart, pMainAction>
  [ 97] objcall 175 ............................. pPartActionList[tPart] = pMainAction
  [ 99] pushint8 1
  [101] add
  [102] endrepeat [ 71]
  [104] pop 3
  [106] jmp [142]
  [109] pushint8 1 .............................. <1>
  [111] setlocal 2
  [113] getlocal 2
  [115] getprop 184 ............................. <pPartActionList>
  [117] getobjprop 172 .......................... <pPartActionList.count>
  [119] lteq
  [120] jmpifz [142] ............................ repeat with i = 1 to pPartActionList.count
  [123] getprop 184 ............................. <pPartActionList>
  [125] getlocal 2 .............................. <i>
  [127] getprop 121 ............................. <pMainAction>
  [129] pusharglistnoret 3 ...................... <pPartActionList, i, pMainAction>
  [131] objcall 175 ............................. pPartActionList[i] = pMainAction
  [133] pushint8 1
  [135] getlocal 2
  [137] add
  [138] setlocal 2
  [140] endrepeat [113]
  [142] ret
end

on getPartClass me, tPartSymbol
  [  0] getprop 155 ............................. <pPartClass>
  [  2] pusharglistnoret 1 ...................... <pPartClass>
  [  4] extcall 189 ............................. return pPartClass
  [  6] ret
end

on getPartListNameBase me
  [  0] pushcons 72 ............................. <"human.parts">
  [  2] pusharglistnoret 1 ...................... <"human.parts">
  [  4] extcall 189 ............................. return "human.parts"
  [  6] ret
end

on releaseShadowSprite me
  [  0] getprop 199 ............................. <pShadowSpr>
  [  2] pusharglist 1 ........................... <pShadowSpr>
  [  4] extcall 180 ............................. <ilk(pShadowSpr)>
  [  6] pushsymb 221 ............................ <#sprite>
  [  8] eq ...................................... <ilk(pShadowSpr) = #sprite>
  [  9] jmpifz [ 26] ............................ if ilk(pShadowSpr) = #sprite then
  [ 12] getprop 199 ............................. <pShadowSpr>
  [ 14] getobjprop 197 .......................... <pShadowSpr.spriteNum>
  [ 16] pusharglistnoret 1 ...................... <pShadowSpr.spriteNum>
  [ 18] extcall 196 ............................. releaseSprite(pShadowSpr.spriteNum)
  [ 20] pusharglist 0 ........................... <>
  [ 22] extcall 101 ............................. <VOID>
  [ 24] setprop 199 ............................. pShadowSpr = VOID
  [ 26] ret
end

on action_std me, tProps
  [  0] getprop 927 ............................. <pLayingDown>
  [  3] getprop 926 ............................. <pSitting>
  [  6] or ...................................... <pLayingDown or pSitting>
  [  7] getprop 930 ............................. <pPersistedFX>
  [ 10] pushzero ................................ <0>
  [ 11] nteq .................................... <pPersistedFX <> 0>
  [ 12] and ..................................... <(pLayingDown or pSitting) and (pPersistedFX <> 0)>
  [ 13] jmpifz [ 23] ............................ if (pLayingDown or pSitting) and (pPersistedFX <> 0) then / else
  [ 16] pushint8 1 .............................. <1>
  [ 18] setlocal 0 .............................. tReactivateFX = 1
  [ 20] jmp [ 26]
  [ 23] pushzero ................................ <0>
  [ 24] setlocal 0 .............................. tReactivateFX = 0
  [ 26] pushzero ................................ <0>
  [ 27] setprop 927 ............................. pLayingDown = 0
  [ 30] pushzero ................................ <0>
  [ 31] setprop 926 ............................. pSitting = 0
  [ 34] getlocal 0 .............................. <tReactivateFX>
  [ 36] jmpifz [ 51] ............................ if tReactivateFX then
  [ 39] getparam 0 .............................. <me>
  [ 41] pushcons 76 ............................. <"fx">
  [ 43] getprop 930 ............................. <pPersistedFX>
  [ 46] joinpadstr .............................. <"fx" && pPersistedFX>
  [ 47] pusharglistnoret 2 ...................... <me, "fx" && pPersistedFX>
  [ 49] objcall 82 .............................. me.action_fx("fx" && pPersistedFX)
  [ 51] ret
end

on action_mv me, tProps
  [  0] getprop 927 ............................. <pLayingDown>
  [  3] getprop 926 ............................. <pSitting>
  [  6] or ...................................... <pLayingDown or pSitting>
  [  7] getprop 930 ............................. <pPersistedFX>
  [ 10] pushzero ................................ <0>
  [ 11] nteq .................................... <pPersistedFX <> 0>
  [ 12] and ..................................... <(pLayingDown or pSitting) and (pPersistedFX <> 0)>
  [ 13] jmpifz [ 23] ............................ if (pLayingDown or pSitting) and (pPersistedFX <> 0) then / else
  [ 16] pushint8 1 .............................. <1>
  [ 18] setlocal 0 .............................. tReactivateFX = 1
  [ 20] jmp [ 26]
  [ 23] pushzero ................................ <0>
  [ 24] setlocal 0 .............................. tReactivateFX = 0
  [ 26] pushzero ................................ <0>
  [ 27] setprop 927 ............................. pLayingDown = 0
  [ 30] pushzero ................................ <0>
  [ 31] setprop 926 ............................. pSitting = 0
  [ 34] pushcons 77 ............................. <"wlk">
  [ 36] setprop 121 ............................. pMainAction = "wlk"
  [ 38] pushint8 1 .............................. <1>
  [ 40] setprop 122 ............................. pMoving = 1
  [ 42] pushzero ................................ <0>
  [ 43] setprop 162 ............................. pBaseLocZ = 0
  [ 45] getmovieprop 350 ........................ <the itemDelimiter>
  [ 48] setlocal 1 .............................. tDelim = the itemDelimiter
  [ 50] pushcons 78 ............................. <",">
  [ 52] setmovieprop 350 ........................ the itemDelimiter = ","
  [ 55] getparam 1 .............................. <tProps>
  [ 57] pushsymb 434 ............................ <#word>
  [ 60] pushint8 2 .............................. <2>
  [ 62] pusharglist 3 ........................... <tProps, #word, 2>
  [ 64] objcall 311 ............................. <tProps.word[2]>
  [ 67] setlocal 2 .............................. tloc = tProps.word[2]
  [ 69] getlocal 2 .............................. <tloc>
  [ 71] pushsymb 354 ............................ <#item>
  [ 74] pushint8 1 .............................. <1>
  [ 76] pusharglist 3 ........................... <tloc, #item, 1>
  [ 78] objcall 311 ............................. <tloc.item[1]>
  [ 81] pusharglist 1 ........................... <tloc.item[1]>
  [ 83] extcall 274 ............................. <integer(tloc.item[1])>
  [ 86] setlocal 3 .............................. tLocX = integer(tloc.item[1])
  [ 88] getlocal 2 .............................. <tloc>
  [ 90] pushsymb 354 ............................ <#item>
  [ 93] pushint8 2 .............................. <2>
  [ 95] pusharglist 3 ........................... <tloc, #item, 2>
  [ 97] objcall 311 ............................. <tloc.item[2]>
  [100] pusharglist 1 ........................... <tloc.item[2]>
  [102] extcall 274 ............................. <integer(tloc.item[2])>
  [105] setlocal 4 .............................. tLocY = integer(tloc.item[2])
  [107] getlocal 2 .............................. <tloc>
  [109] pushsymb 354 ............................ <#item>
  [112] pushint8 3 .............................. <3>
  [114] pusharglist 3 ........................... <tloc, #item, 3>
  [116] objcall 311 ............................. <tloc.item[3]>
  [119] pusharglist 1 ........................... <tloc.item[3]>
  [121] extcall 435 ............................. <getLocalFloat(tloc.item[3])>
  [124] setlocal 5 .............................. tLocH = getLocalFloat(tloc.item[3])
  [126] getlocal 1 .............................. <tDelim>
  [128] setmovieprop 350 ........................ the itemDelimiter = tDelim
  [131] getmovieprop 345 ........................ <the milliSeconds>
  [134] setprop 116 ............................. pMoveStart = the milliSeconds
  [136] getprop 146 ............................. <pGeometry>
  [138] getprop 264 ............................. <pLocX>
  [141] getprop 265 ............................. <pLocY>
  [144] getprop 266 ............................. <pLocH>
  [147] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH>
  [149] objcall 295 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)>
  [152] setprop 111 ............................. pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH)
  [154] getprop 146 ............................. <pGeometry>
  [156] getlocal 3 .............................. <tLocX>
  [158] getlocal 4 .............................. <tLocY>
  [160] getlocal 5 .............................. <tLocH>
  [162] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [164] objcall 295 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [167] setprop 112 ............................. pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [169] getparam 0 .............................. <me>
  [171] getprop 171 ............................. <pPartListSubSet>
  [173] pushcons 12 ............................. <"walk">
  [175] pusharglist 2 ........................... <pPartListSubSet, "walk">
  [177] objcall 173 ............................. <pPartListSubSet["walk"]>
  [179] pushcons 77 ............................. <"wlk">
  [181] pusharglistnoret 3 ...................... <me, pPartListSubSet["walk"], "wlk">
  [183] objcall 49 .............................. me.definePartListAction(pPartListSubSet["walk"], "wlk")
  [185] getlocal 0 .............................. <tReactivateFX>
  [187] jmpifz [202] ............................ if tReactivateFX then
  [190] getparam 0 .............................. <me>
  [192] pushcons 76 ............................. <"fx">
  [194] getprop 930 ............................. <pPersistedFX>
  [197] joinpadstr .............................. <"fx" && pPersistedFX>
  [198] pusharglistnoret 2 ...................... <me, "fx" && pPersistedFX>
  [200] objcall 82 .............................. me.action_fx("fx" && pPersistedFX)
  [202] ret
end

on action_sld me, tProps
  [  0] pushzero ................................ <0>
  [  1] setprop 927 ............................. pLayingDown = 0
  [  4] pushzero ................................ <0>
  [  5] setprop 926 ............................. pSitting = 0
  [  8] pushint8 1 .............................. <1>
  [ 10] setprop 122 ............................. pMoving = 1
  [ 12] pushzero ................................ <0>
  [ 13] setprop 162 ............................. pBaseLocZ = 0
  [ 15] getmovieprop 350 ........................ <the itemDelimiter>
  [ 18] setlocal 0 .............................. tDelim = the itemDelimiter
  [ 20] pushcons 78 ............................. <",">
  [ 22] setmovieprop 350 ........................ the itemDelimiter = ","
  [ 25] getparam 1 .............................. <tProps>
  [ 27] pushsymb 434 ............................ <#word>
  [ 30] pushint8 2 .............................. <2>
  [ 32] pusharglist 3 ........................... <tProps, #word, 2>
  [ 34] objcall 311 ............................. <tProps.word[2]>
  [ 37] setlocal 1 .............................. tloc = tProps.word[2]
  [ 39] getlocal 1 .............................. <tloc>
  [ 41] pushsymb 354 ............................ <#item>
  [ 44] pushint8 1 .............................. <1>
  [ 46] pusharglist 3 ........................... <tloc, #item, 1>
  [ 48] objcall 311 ............................. <tloc.item[1]>
  [ 51] pusharglist 1 ........................... <tloc.item[1]>
  [ 53] extcall 274 ............................. <integer(tloc.item[1])>
  [ 56] setlocal 2 .............................. tLocX = integer(tloc.item[1])
  [ 58] getlocal 1 .............................. <tloc>
  [ 60] pushsymb 354 ............................ <#item>
  [ 63] pushint8 2 .............................. <2>
  [ 65] pusharglist 3 ........................... <tloc, #item, 2>
  [ 67] objcall 311 ............................. <tloc.item[2]>
  [ 70] pusharglist 1 ........................... <tloc.item[2]>
  [ 72] extcall 274 ............................. <integer(tloc.item[2])>
  [ 75] setlocal 3 .............................. tLocY = integer(tloc.item[2])
  [ 77] getlocal 1 .............................. <tloc>
  [ 79] pushsymb 354 ............................ <#item>
  [ 82] pushint8 3 .............................. <3>
  [ 84] pusharglist 3 ........................... <tloc, #item, 3>
  [ 86] objcall 311 ............................. <tloc.item[3]>
  [ 89] pusharglist 1 ........................... <tloc.item[3]>
  [ 91] extcall 435 ............................. <getLocalFloat(tloc.item[3])>
  [ 94] setlocal 4 .............................. tLocH = getLocalFloat(tloc.item[3])
  [ 96] getlocal 0 .............................. <tDelim>
  [ 98] setmovieprop 350 ........................ the itemDelimiter = tDelim
  [101] getparam 1 .............................. <tProps>
  [103] pushsymb 434 ............................ <#word>
  [106] pushint8 3 .............................. <3>
  [108] pusharglist 3 ........................... <tProps, #word, 3>
  [110] objcall 311 ............................. <tProps.word[3]>
  [113] pusharglist 1 ........................... <tProps.word[3]>
  [115] extcall 274 ............................. <integer(tProps.word[3])>
  [118] setprop 144 ............................. pQueuesWithObj = integer(tProps.word[3])
  [120] getprop 146 ............................. <pGeometry>
  [122] getprop 264 ............................. <pLocX>
  [125] getprop 265 ............................. <pLocY>
  [128] getprop 266 ............................. <pLocH>
  [131] getprop 114 ............................. <pRestingHeight>
  [133] add ..................................... <pLocH + pRestingHeight>
  [134] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [136] objcall 295 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [139] setprop 111 ............................. pStartLScreen = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [141] getprop 146 ............................. <pGeometry>
  [143] getlocal 2 .............................. <tLocX>
  [145] getlocal 3 .............................. <tLocY>
  [147] getlocal 4 .............................. <tLocH>
  [149] pusharglist 4 ........................... <pGeometry, tLocX, tLocY, tLocH>
  [151] objcall 295 ............................. <pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)>
  [154] setprop 112 ............................. pDestLScreen = pGeometry.getScreenCoordinate(tLocX, tLocY, tLocH)
  [156] getprop 264 ............................. <pLocX>
  [159] getprop 265 ............................. <pLocY>
  [162] getprop 266 ............................. <pLocH>
  [165] pusharglist 3 ........................... <[pLocX, pLocY, pLocH]>
  [167] pushlist ................................ <[pLocX, pLocY, pLocH]>
  [168] setprop 113 ............................. pPreviousLoc = [pLocX, pLocY, pLocH]
  [170] getparam 1 .............................. <tProps>
  [172] pushsymb 434 ............................ <#word>
  [175] pushint8 4 .............................. <4>
  [177] pusharglist 3 ........................... <tProps, #word, 4>
  [179] objcall 311 ............................. <tProps.word[4]>
  [182] setlocal 5 .............................. tStartTime = tProps.word[4]
  [184] getlocal 5 .............................. <tStartTime>
  [186] pusharglist 1 ........................... <tStartTime>
  [188] extcall 194 ............................. <voidp(tStartTime)>
  [190] jmpifz [201] ............................ if voidp(tStartTime) then / else
  [193] getmovieprop 345 ........................ <the milliSeconds>
  [196] setprop 116 ............................. pMoveStart = the milliSeconds
  [198] jmp [205]
  [201] getlocal 5 .............................. <tStartTime>
  [203] setprop 116 ............................. pMoveStart = tStartTime
  [205] ret
end

on action_sit me, tProps
  [  0] pushzero ................................ <0>
  [  1] setprop 927 ............................. pLayingDown = 0
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 926 ............................. pSitting = 1
  [  9] getprop 126 ............................. <pDancing>
  [ 11] jmpifz [ 20] ............................ if pDancing then
  [ 14] getparam 0 .............................. <me>
  [ 16] pusharglistnoret 1 ...................... <me>
  [ 18] objcall 74 .............................. me.stop_action_dance()
  [ 20] getparam 0 .............................. <me>
  [ 22] getprop 171 ............................. <pPartListSubSet>
  [ 24] pushcons 13 ............................. <"sit">
  [ 26] pusharglist 2 ........................... <pPartListSubSet, "sit">
  [ 28] objcall 173 ............................. <pPartListSubSet["sit"]>
  [ 30] pushcons 13 ............................. <"sit">
  [ 32] pusharglistnoret 3 ...................... <me, pPartListSubSet["sit"], "sit">
  [ 34] objcall 49 .............................. me.definePartListAction(pPartListSubSet["sit"], "sit")
  [ 36] pushcons 13 ............................. <"sit">
  [ 38] setprop 121 ............................. pMainAction = "sit"
  [ 40] getparam 1 .............................. <tProps>
  [ 42] pushsymb 434 ............................ <#word>
  [ 45] pushint8 2 .............................. <2>
  [ 47] pusharglist 3 ........................... <tProps, #word, 2>
  [ 49] objcall 311 ............................. <tProps.word[2]>
  [ 52] pusharglist 1 ........................... <tProps.word[2]>
  [ 54] extcall 435 ............................. <getLocalFloat(tProps.word[2])>
  [ 57] pushfloat32 1.0 ......................... <1.0>
  [ 62] sub ..................................... <getLocalFloat(tProps.word[2]) - 1.0>
  [ 63] setprop 114 ............................. pRestingHeight = getLocalFloat(tProps.word[2]) - 1.0
  [ 65] getprop 146 ............................. <pGeometry>
  [ 67] getprop 264 ............................. <pLocX>
  [ 70] getprop 265 ............................. <pLocY>
  [ 73] getprop 266 ............................. <pLocH>
  [ 76] getprop 114 ............................. <pRestingHeight>
  [ 78] add ..................................... <pLocH + pRestingHeight>
  [ 79] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [ 81] objcall 295 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [ 84] setprop 110 ............................. pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [ 86] getparam 1 .............................. <tProps>
  [ 88] pushsymb 434 ............................ <#word>
  [ 91] pushint8 3 .............................. <3>
  [ 93] pusharglist 3 ........................... <tProps, #word, 3>
  [ 95] objcall 311 ............................. <tProps.word[3]>
  [ 98] pusharglist 1 ........................... <tProps.word[3]>
  [100] extcall 274 ............................. <integer(tProps.word[3])>
  [103] setlocal 0 .............................. tIsInQueue = integer(tProps.word[3])
  [105] getlocal 0 .............................. <tIsInQueue>
  [107] setprop 144 ............................. pQueuesWithObj = tIsInQueue
  [109] getprop 124 ............................. <pCarrying>
  [111] pushzero ................................ <0>
  [112] nteq .................................... <pCarrying <> 0>
  [113] jmpifz [159] ............................ if pCarrying <> 0 then
  [116] pushcons 34 ............................. <"action_">
  [118] getprop 306 ............................. <pDrinkEatParams>
  [121] pushsymb 307 ............................ <#action>
  [124] pusharglist 2 ........................... <pDrinkEatParams, #action>
  [126] objcall 173 ............................. <pDrinkEatParams[#action]>
  [128] joinstr ................................. <"action_" & pDrinkEatParams[#action]>
  [129] getparam 0 .............................. <me>
  [131] pusharglist 1 ........................... <[me]>
  [133] pushlist ................................ <[me]>
  [134] getprop 306 ............................. <pDrinkEatParams>
  [137] pushsymb 307 ............................ <#action>
  [140] pusharglist 2 ........................... <pDrinkEatParams, #action>
  [142] objcall 173 ............................. <pDrinkEatParams[#action]>
  [144] getprop 306 ............................. <pDrinkEatParams>
  [147] pushsymb 308 ............................ <#params>
  [150] pusharglist 2 ........................... <pDrinkEatParams, #params>
  [152] objcall 173 ............................. <pDrinkEatParams[#params]>
  [154] joinpadstr .............................. <pDrinkEatParams[#action] && pDrinkEatParams[#params]>
  [155] pusharglistnoret 3 ...................... <"action_" & pDrinkEatParams[#action], [me], pDrinkEatParams[#action] && pDrinkEatParams[#params]>
  [157] extcall 205 ............................. call("action_" & pDrinkEatParams[#action], [me], pDrinkEatParams[#action] && pDrinkEatParams[#params])
  [159] ret
end

on action_lay me, tProps
  [  0] getprop 126 ............................. <pDancing>
  [  2] jmpifz [ 11] ............................ if pDancing then
  [  5] getparam 0 .............................. <me>
  [  7] pusharglistnoret 1 ...................... <me>
  [  9] objcall 74 .............................. me.stop_action_dance()
  [ 11] getprop 124 ............................. <pCarrying>
  [ 13] pushzero ................................ <0>
  [ 14] nteq .................................... <pCarrying <> 0>
  [ 15] jmpifz [ 24] ............................ if pCarrying <> 0 then
  [ 18] getparam 0 .............................. <me>
  [ 20] pusharglistnoret 1 ...................... <me>
  [ 22] objcall 62 .............................. me.stop_action_carry()
  [ 24] pushint8 1 .............................. <1>
  [ 26] setprop 927 ............................. pLayingDown = 1
  [ 29] pushzero ................................ <0>
  [ 30] setprop 926 ............................. pSitting = 0
  [ 33] pushcons 33 ............................. <"lay">
  [ 35] setprop 121 ............................. pMainAction = "lay"
  [ 37] pushzero ................................ <0>
  [ 38] setprop 124 ............................. pCarrying = 0
  [ 40] getparam 1 .............................. <tProps>
  [ 42] pushsymb 434 ............................ <#word>
  [ 45] pushint8 2 .............................. <2>
  [ 47] pusharglist 3 ........................... <tProps, #word, 2>
  [ 49] objcall 311 ............................. <tProps.word[2]>
  [ 52] pusharglist 1 ........................... <tProps.word[2]>
  [ 54] extcall 435 ............................. <getLocalFloat(tProps.word[2])>
  [ 57] setlocal 0 .............................. tRestingHeight = getLocalFloat(tProps.word[2])
  [ 59] getlocal 0 .............................. <tRestingHeight>
  [ 61] pushfloat32 0.0 ......................... <0.0>
  [ 66] lt ...................................... <tRestingHeight < 0.0>
  [ 67] jmpifz [ 91] ............................ if tRestingHeight < 0.0 then / else
  [ 70] getlocal 0 .............................. <tRestingHeight>
  [ 72] pusharglist 1 ........................... <tRestingHeight>
  [ 74] extcall 442 ............................. <abs(tRestingHeight)>
  [ 77] pushfloat32 1.0 ......................... <1.0>
  [ 82] sub ..................................... <abs(tRestingHeight) - 1.0>
  [ 83] setprop 114 ............................. pRestingHeight = abs(tRestingHeight) - 1.0
  [ 85] pushzero ................................ <0>
  [ 86] setlocal 1 .............................. tZOffset = 0
  [ 88] jmp [106]
  [ 91] getlocal 0 .............................. <tRestingHeight>
  [ 93] pushfloat32 1.0 ......................... <1.0>
  [ 98] sub ..................................... <tRestingHeight - 1.0>
  [ 99] setprop 114 ............................. pRestingHeight = tRestingHeight - 1.0
  [101] pushint16 2000 .......................... <2000>
  [104] setlocal 1 .............................. tZOffset = 2000
  [106] getprop 146 ............................. <pGeometry>
  [108] getprop 264 ............................. <pLocX>
  [111] getprop 265 ............................. <pLocY>
  [114] getprop 266 ............................. <pLocH>
  [117] getprop 114 ............................. <pRestingHeight>
  [119] add ..................................... <pLocH + pRestingHeight>
  [120] pusharglist 4 ........................... <pGeometry, pLocX, pLocY, pLocH + pRestingHeight>
  [122] objcall 295 ............................. <pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)>
  [125] setprop 110 ............................. pScreenLoc = pGeometry.getScreenCoordinate(pLocX, pLocY, pLocH + pRestingHeight)
  [127] getprop 151 ............................. <pXFactor>
  [129] pushint8 33 ............................. <33>
  [131] lt ...................................... <pXFactor < 33>
  [132] jmpifz [200] ............................ if pXFactor < 33 then / else
  [135] getprop 105 ............................. <pFlipList>
  [137] getprop 260 ............................. <pDirection>
  [140] pushint8 1 .............................. <1>
  [142] add ..................................... <pDirection + 1>
  [143] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [145] objcall 173 ............................. <pFlipList[pDirection + 1]>
  [147] peek 0 .................................. case pFlipList[pDirection + 1] of
  [149] pushint8 2 .............................. <2>
  [151] eq
  [152] jmpifz [173] ............................ (case) 2:
  [155] getprop 110 ............................. <pScreenLoc>
  [157] pushint8 10 ............................. <10>
  [159] inv ..................................... <-10>
  [160] pushint8 18 ............................. <18>
  [162] getlocal 1 .............................. <tZOffset>
  [164] pusharglist 3 ........................... <[-10, 18, tZOffset]>
  [166] pushlist ................................ <[-10, 18, tZOffset]>
  [167] add ..................................... <pScreenLoc + [-10, 18, tZOffset]>
  [168] setprop 110 ............................. pScreenLoc = pScreenLoc + [-10, 18, tZOffset]
  [170] jmp [195]
  [173] peek 0
  [175] pushzero ................................ <0>
  [176] eq
  [177] jmpifz [195] ............................ (case) 0:
  [180] getprop 110 ............................. <pScreenLoc>
  [182] pushint8 17 ............................. <17>
  [184] inv ..................................... <-17>
  [185] pushint8 18 ............................. <18>
  [187] getlocal 1 .............................. <tZOffset>
  [189] pusharglist 3 ........................... <[-17, 18, tZOffset]>
  [191] pushlist ................................ <[-17, 18, tZOffset]>
  [192] add ..................................... <pScreenLoc + [-17, 18, tZOffset]>
  [193] setprop 110 ............................. pScreenLoc = pScreenLoc + [-17, 18, tZOffset]
  [195] pop 1 ................................... end case
  [197] jmp [261]
  [200] getprop 105 ............................. <pFlipList>
  [202] getprop 260 ............................. <pDirection>
  [205] pushint8 1 .............................. <1>
  [207] add ..................................... <pDirection + 1>
  [208] pusharglist 2 ........................... <pFlipList, pDirection + 1>
  [210] objcall 173 ............................. <pFlipList[pDirection + 1]>
  [212] peek 0 .................................. case pFlipList[pDirection + 1] of
  [214] pushint8 2 .............................. <2>
  [216] eq
  [217] jmpifz [237] ............................ (case) 2:
  [220] getprop 110 ............................. <pScreenLoc>
  [222] pushint8 10 ............................. <10>
  [224] pushint8 30 ............................. <30>
  [226] getlocal 1 .............................. <tZOffset>
  [228] pusharglist 3 ........................... <[10, 30, tZOffset]>
  [230] pushlist ................................ <[10, 30, tZOffset]>
  [231] add ..................................... <pScreenLoc + [10, 30, tZOffset]>
  [232] setprop 110 ............................. pScreenLoc = pScreenLoc + [10, 30, tZOffset]
  [234] jmp [259]
  [237] peek 0
  [239] pushzero ................................ <0>
  [240] eq
  [241] jmpifz [259] ............................ (case) 0:
  [244] getprop 110 ............................. <pScreenLoc>
  [246] pushint8 47 ............................. <47>
  [248] inv ..................................... <-47>
  [249] pushint8 32 ............................. <32>
  [251] getlocal 1 .............................. <tZOffset>
  [253] pusharglist 3 ........................... <[-47, 32, tZOffset]>
  [255] pushlist ................................ <[-47, 32, tZOffset]>
  [256] add ..................................... <pScreenLoc + [-47, 32, tZOffset]>
  [257] setprop 110 ............................. pScreenLoc = pScreenLoc + [-47, 32, tZOffset]
  [259] pop 1 ................................... end case
  [261] getprop 151 ............................. <pXFactor>
  [263] pushint8 32 ............................. <32>
  [265] gt ...................................... <pXFactor > 32>
  [266] jmpifz [283] ............................ if pXFactor > 32 then / else
  [269] pushint8 30 ............................. <30>
  [271] pushint8 10 ............................. <10>
  [273] inv ..................................... <-10>
  [274] pusharglist 2 ........................... <30, -10>
  [276] extcall 107 ............................. <point(30, -10)>
  [278] setprop 106 ............................. pLocFix = point(30, -10)
  [280] jmp [294]
  [283] pushint8 35 ............................. <35>
  [285] pushint8 5 .............................. <5>
  [287] inv ..................................... <-5>
  [288] pusharglist 2 ........................... <35, -5>
  [290] extcall 107 ............................. <point(35, -5)>
  [292] setprop 106 ............................. pLocFix = point(35, -5)
  [294] getparam 0 .............................. <me>
  [296] getprop 179 ............................. <pPartListFull>
  [298] pushcons 33 ............................. <"lay">
  [300] pusharglistnoret 3 ...................... <me, pPartListFull, "lay">
  [302] objcall 49 .............................. me.definePartListAction(pPartListFull, "lay")
  [304] getprop 260 ............................. <pDirection>
  [307] pushzero ................................ <0>
  [308] eq ...................................... <pDirection = 0>
  [309] jmpifz [322] ............................ if pDirection = 0 then
  [312] pushint8 4 .............................. <4>
  [314] setprop 260 ............................. pDirection = 4
  [317] pushint8 4 .............................. <4>
  [319] setprop 262 ............................. pHeadDir = 4
  [322] pushsymb 304 ............................ <#defineDir>
  [325] getprop 103 ............................. <pPartList>
  [327] getprop 260 ............................. <pDirection>
  [330] pusharglistnoret 3 ...................... <#defineDir, pPartList, pDirection>
  [332] extcall 205 ............................. call(#defineDir, pPartList, pDirection)
  [334] ret
end

on carryObject me, tProps, tDefaultItem, tDefaultItemPublic
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 434 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 311 ............................. <tProps.word[2]>
  [ 12] setlocal 0 .............................. tItem = tProps.word[2]
  [ 14] getlocal 0 .............................. <tItem>
  [ 16] pusharglist 1 ........................... <tItem>
  [ 18] extcall 274 ............................. <integer(tItem)>
  [ 21] setlocal 1 .............................. tItemInt = integer(tItem)
  [ 23] getlocal 0 .............................. <tItem>
  [ 25] pusharglist 1 ........................... <tItem>
  [ 27] extcall 445 ............................. <string(tItem)>
  [ 30] setlocal 2 .............................. tItemString = string(tItem)
  [ 32] getlocal 1 .............................. <tItemInt>
  [ 34] pusharglist 1 ........................... <tItemInt>
  [ 36] extcall 445 ............................. <string(tItemInt)>
  [ 39] getlocal 2 .............................. <tItemString>
  [ 41] eq ...................................... <string(tItemInt) = tItemString>
  [ 42] setlocal 3 .............................. tIsInteger = string(tItemInt) = tItemString
  [ 44] getlocal 3 .............................. <tIsInteger>
  [ 46] getlocal 1 .............................. <tItemInt>
  [ 48] pushzero ................................ <0>
  [ 49] gt ...................................... <tItemInt > 0>
  [ 50] and ..................................... <tIsInteger and (tItemInt > 0)>
  [ 51] jmpifz [158] ............................ if tIsInteger and (tItemInt > 0) then / else
  [ 54] getlocal 1 .............................. <tItemInt>
  [ 56] setlocal 0 .............................. tItem = tItemInt
  [ 58] getlocal 0 .............................. <tItem>
  [ 60] setlocal 4 .............................. tCarrying = tItem
  [ 62] pushcons 79 ............................. <"handitem.right.">
  [ 64] getlocal 4 .............................. <tCarrying>
  [ 66] joinstr ................................. <"handitem.right." & tCarrying>
  [ 67] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 69] extcall 174 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 71] jmpifz [ 95] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 74] pushcons 79 ............................. <"handitem.right.">
  [ 76] getlocal 4 .............................. <tCarrying>
  [ 78] joinstr ................................. <"handitem.right." & tCarrying>
  [ 79] getparam 2 .............................. <tDefaultItem>
  [ 81] pusharglist 1 ........................... <tDefaultItem>
  [ 83] extcall 445 ............................. <string(tDefaultItem)>
  [ 86] pusharglist 2 ........................... <"handitem.right." & tCarrying, string(tDefaultItem)>
  [ 88] extcall 164 ............................. <getVariable("handitem.right." & tCarrying, string(tDefaultItem))>
  [ 90] setlocal 5 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, string(tDefaultItem))
  [ 92] jmp [104]
  [ 95] getparam 2 .............................. <tDefaultItem>
  [ 97] pusharglist 1 ........................... <tDefaultItem>
  [ 99] extcall 445 ............................. <string(tDefaultItem)>
  [102] setlocal 5 .............................. tCarryItm = string(tDefaultItem)
  [104] getparam 0 .............................. <me>
  [106] getprop 171 ............................. <pPartListSubSet>
  [108] pushcons 10 ............................. <"handRight">
  [110] pusharglist 2 ........................... <pPartListSubSet, "handRight">
  [112] objcall 173 ............................. <pPartListSubSet["handRight"]>
  [114] pushcons 80 ............................. <"crr">
  [116] pusharglistnoret 3 ...................... <me, pPartListSubSet["handRight"], "crr">
  [118] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handRight"], "crr")
  [120] pushsymb 433 ............................ <#setModel>
  [123] getparam 0 .............................. <me>
  [125] getprop 171 ............................. <pPartListSubSet>
  [127] pushcons 14 ............................. <"itemRight">
  [129] pusharglist 2 ........................... <pPartListSubSet, "itemRight">
  [131] objcall 173 ............................. <pPartListSubSet["itemRight"]>
  [133] pusharglist 2 ........................... <me, pPartListSubSet["itemRight"]>
  [135] objcall 48 .............................. <me.getDefinedPartList(pPartListSubSet["itemRight"])>
  [137] getlocal 5 .............................. <tCarryItm>
  [139] pusharglistnoret 3 ...................... <#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), tCarryItm>
  [141] extcall 205 ............................. call(#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), tCarryItm)
  [143] pushcons 81 ............................. <"handitem">
  [145] getlocal 4 .............................. <tCarrying>
  [147] joinstr ................................. <"handitem" & tCarrying>
  [148] pusharglist 1 ........................... <"handitem" & tCarrying>
  [150] extcall 331 ............................. <getText("handitem" & tCarrying)>
  [153] setprop 124 ............................. pCarrying = getText("handitem" & tCarrying)
  [155] jmp [248]
  [158] pushsymb 447 ............................ <#room_component>
  [161] pusharglist 1 ........................... <#room_component>
  [163] extcall 276 ............................. <getObject(#room_component)>
  [166] pusharglist 1 ........................... <getObject(#room_component)>
  [168] objcall 448 ............................. <getObject(#room_component).getRoomID()>
  [171] pushcons 82 ............................. <"private">
  [173] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [174] jmpifz [248] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [177] getparam 1 .............................. <tProps>
  [179] pushsymb 434 ............................ <#word>
  [182] pushint8 2 .............................. <2>
  [184] getparam 1 .............................. <tProps>
  [186] pushsymb 434 ............................ <#word>
  [189] pusharglist 2 ........................... <tProps, #word>
  [191] objcall 172 ............................. <tProps.word.count>
  [193] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [195] objcall 311 ............................. <tProps.word[2..tProps.word.count]>
  [198] setprop 124 ............................. pCarrying = tProps.word[2..tProps.word.count]
  [200] getparam 3 .............................. <tDefaultItemPublic>
  [202] pusharglist 1 ........................... <tDefaultItemPublic>
  [204] extcall 445 ............................. <string(tDefaultItemPublic)>
  [207] setlocal 5 .............................. tCarryItm = string(tDefaultItemPublic)
  [209] getparam 0 .............................. <me>
  [211] getprop 171 ............................. <pPartListSubSet>
  [213] pushcons 10 ............................. <"handRight">
  [215] pusharglist 2 ........................... <pPartListSubSet, "handRight">
  [217] objcall 173 ............................. <pPartListSubSet["handRight"]>
  [219] pushcons 80 ............................. <"crr">
  [221] pusharglistnoret 3 ...................... <me, pPartListSubSet["handRight"], "crr">
  [223] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handRight"], "crr")
  [225] pushsymb 433 ............................ <#setModel>
  [228] getparam 0 .............................. <me>
  [230] getprop 171 ............................. <pPartListSubSet>
  [232] pushcons 14 ............................. <"itemRight">
  [234] pusharglist 2 ........................... <pPartListSubSet, "itemRight">
  [236] objcall 173 ............................. <pPartListSubSet["itemRight"]>
  [238] pusharglist 2 ........................... <me, pPartListSubSet["itemRight"]>
  [240] objcall 48 .............................. <me.getDefinedPartList(pPartListSubSet["itemRight"])>
  [242] getlocal 5 .............................. <tCarryItm>
  [244] pusharglistnoret 3 ...................... <#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), tCarryItm>
  [246] extcall 205 ............................. call(#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), tCarryItm)
  [248] ret
end

on action_carryd me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tProps>
  [  4] pushcons 83 ............................. <"1">
  [  6] pushcons 83 ............................. <"1">
  [  8] pusharglistnoret 4 ...................... <me, tProps, "1", "1">
  [ 10] objcall 58 .............................. me.carryObject(tProps, "1", "1")
  [ 12] ret
end

on action_carryf me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tProps>
  [  4] pushcons 83 ............................. <"1">
  [  6] pushcons 84 ............................. <"4">
  [  8] pusharglistnoret 4 ...................... <me, tProps, "1", "4">
  [ 10] objcall 58 .............................. me.carryObject(tProps, "1", "4")
  [ 12] ret
end

on action_cri me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tProps>
  [  4] pushcons 85 ............................. <"75">
  [  6] pushcons 83 ............................. <"1">
  [  8] pusharglistnoret 4 ...................... <me, tProps, "75", "1">
  [ 10] objcall 58 .............................. me.carryObject(tProps, "75", "1")
  [ 12] ret
end

on stop_action_carry me, tProps
  [  0] pushzero ................................ <0>
  [  1] setprop 124 ............................. pCarrying = 0
  [  3] getprop 187 ............................. <pDrinkEatTimeoutList>
  [  5] peek 0
  [  7] pusharglist 1
  [  9] extcall 172
  [ 11] pushint8 1
  [ 13] peek 0
  [ 15] peek 2
  [ 17] lteq
  [ 18] jmpifz [ 46] ............................ repeat with tName in pDrinkEatTimeoutList
  [ 21] peek 2
  [ 23] peek 1
  [ 25] pusharglist 2
  [ 27] extcall 173
  [ 29] setlocal 0
  [ 31] getlocal 0 .............................. <tName>
  [ 33] pusharglist 1 ........................... <tName>
  [ 35] extcall 206 ............................. <timeout(tName)>
  [ 37] pusharglistnoret 1 ...................... <timeout(tName)>
  [ 39] objcall 208 ............................. timeout(tName).forget()
  [ 41] pushint8 1
  [ 43] add
  [ 44] endrepeat [ 13]
  [ 46] pop 3
  [ 48] pusharglist 0 ........................... <[]>
  [ 50] pushlist ................................ <[]>
  [ 51] setprop 187 ............................. pDrinkEatTimeoutList = []
  [ 53] getparam 0 .............................. <me>
  [ 55] getobjprop 127 .......................... <me.pFx>
  [ 57] not ..................................... <not me.pFx>
  [ 58] jmpifz [ 67] ............................ if not me.pFx then
  [ 61] getparam 0 .............................. <me>
  [ 63] pusharglistnoret 1 ...................... <me>
  [ 65] objcall 50 .............................. me.resetAction()
  [ 67] getparam 0 .............................. <me>
  [ 69] getprop 171 ............................. <pPartListSubSet>
  [ 71] pushcons 10 ............................. <"handRight">
  [ 73] pusharglist 2 ........................... <pPartListSubSet, "handRight">
  [ 75] objcall 173 ............................. <pPartListSubSet["handRight"]>
  [ 77] pushcons 1 .............................. <"std">
  [ 79] pusharglistnoret 3 ...................... <me, pPartListSubSet["handRight"], "std">
  [ 81] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handRight"], "std")
  [ 83] pushsymb 433 ............................ <#setModel>
  [ 86] getparam 0 .............................. <me>
  [ 88] getprop 171 ............................. <pPartListSubSet>
  [ 90] pushcons 14 ............................. <"itemRight">
  [ 92] pusharglist 2 ........................... <pPartListSubSet, "itemRight">
  [ 94] objcall 173 ............................. <pPartListSubSet["itemRight"]>
  [ 96] pusharglist 2 ........................... <me, pPartListSubSet["itemRight"]>
  [ 98] objcall 48 .............................. <me.getDefinedPartList(pPartListSubSet["itemRight"])>
  [100] pushcons 1 .............................. <"std">
  [102] pusharglistnoret 3 ...................... <#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), "std">
  [104] extcall 205 ............................. call(#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), "std")
  [106] getparam 0 .............................. <me>
  [108] pusharglistnoret 1 ...................... <me>
  [110] objcall 45 .............................. me.arrangeParts()
  [112] pushint8 1 .............................. <1>
  [114] setprop 120 ............................. pChanges = 1
  [116] getparam 0 .............................. <me>
  [118] pushint8 1 .............................. <1>
  [120] pusharglistnoret 2 ...................... <me, 1>
  [122] objcall 39 .............................. me.render(1)
  [124] ret
end

on stop_action_carryd me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tProps>
  [  4] pusharglistnoret 2 ...................... <me, tProps>
  [  6] objcall 62 .............................. me.stop_action_carry(tProps)
  [  8] ret
end

on stop_action_carryf me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tProps>
  [  4] pusharglistnoret 2 ...................... <me, tProps>
  [  6] objcall 62 .............................. me.stop_action_carry(tProps)
  [  8] ret
end

on stop_action_cri me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <tProps>
  [  4] pusharglistnoret 2 ...................... <me, tProps>
  [  6] objcall 62 .............................. me.stop_action_carry(tProps)
  [  8] ret
end

on useObject me, tProps, tDefaultItem, tDefaultItemPublic
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 434 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 311 ............................. <tProps.word[2]>
  [ 12] setlocal 0 .............................. tItem = tProps.word[2]
  [ 14] getlocal 0 .............................. <tItem>
  [ 16] pusharglist 1 ........................... <tItem>
  [ 18] extcall 274 ............................. <integer(tItem)>
  [ 21] setlocal 1 .............................. tItemInt = integer(tItem)
  [ 23] getlocal 0 .............................. <tItem>
  [ 25] pusharglist 1 ........................... <tItem>
  [ 27] extcall 445 ............................. <string(tItem)>
  [ 30] setlocal 2 .............................. tItemString = string(tItem)
  [ 32] getlocal 1 .............................. <tItemInt>
  [ 34] pusharglist 1 ........................... <tItemInt>
  [ 36] extcall 445 ............................. <string(tItemInt)>
  [ 39] getlocal 2 .............................. <tItemString>
  [ 41] eq ...................................... <string(tItemInt) = tItemString>
  [ 42] setlocal 3 .............................. tIsInteger = string(tItemInt) = tItemString
  [ 44] getlocal 3 .............................. <tIsInteger>
  [ 46] getlocal 1 .............................. <tItemInt>
  [ 48] pushzero ................................ <0>
  [ 49] gt ...................................... <tItemInt > 0>
  [ 50] and ..................................... <tIsInteger and (tItemInt > 0)>
  [ 51] jmpifz [186] ............................ if tIsInteger and (tItemInt > 0) then / else
  [ 54] getlocal 1 .............................. <tItemInt>
  [ 56] setlocal 0 .............................. tItem = tItemInt
  [ 58] getlocal 0 .............................. <tItem>
  [ 60] setlocal 4 .............................. tCarrying = tItem
  [ 62] pushcons 79 ............................. <"handitem.right.">
  [ 64] getlocal 4 .............................. <tCarrying>
  [ 66] joinstr ................................. <"handitem.right." & tCarrying>
  [ 67] pusharglist 1 ........................... <"handitem.right." & tCarrying>
  [ 69] extcall 174 ............................. <variableExists("handitem.right." & tCarrying)>
  [ 71] jmpifz [ 95] ............................ if variableExists("handitem.right." & tCarrying) then / else
  [ 74] pushcons 79 ............................. <"handitem.right.">
  [ 76] getlocal 4 .............................. <tCarrying>
  [ 78] joinstr ................................. <"handitem.right." & tCarrying>
  [ 79] getparam 2 .............................. <tDefaultItem>
  [ 81] pusharglist 1 ........................... <tDefaultItem>
  [ 83] extcall 445 ............................. <string(tDefaultItem)>
  [ 86] pusharglist 2 ........................... <"handitem.right." & tCarrying, string(tDefaultItem)>
  [ 88] extcall 164 ............................. <getVariable("handitem.right." & tCarrying, string(tDefaultItem))>
  [ 90] setlocal 5 .............................. tCarryItm = getVariable("handitem.right." & tCarrying, string(tDefaultItem))
  [ 92] jmp [104]
  [ 95] getparam 2 .............................. <tDefaultItem>
  [ 97] pusharglist 1 ........................... <tDefaultItem>
  [ 99] extcall 445 ............................. <string(tDefaultItem)>
  [102] setlocal 5 .............................. tCarryItm = string(tDefaultItem)
  [104] pushcons 81 ............................. <"handitem">
  [106] getlocal 4 .............................. <tCarrying>
  [108] joinstr ................................. <"handitem" & tCarrying>
  [109] pusharglist 1 ........................... <"handitem" & tCarrying>
  [111] extcall 446 ............................. <textExists("handitem" & tCarrying)>
  [114] jmpifz [134] ............................ if textExists("handitem" & tCarrying) then
  [117] pushcons 81 ............................. <"handitem">
  [119] getlocal 4 .............................. <tCarrying>
  [121] joinstr ................................. <"handitem" & tCarrying>
  [122] pushcons 81 ............................. <"handitem">
  [124] getlocal 4 .............................. <tCarrying>
  [126] joinstr ................................. <"handitem" & tCarrying>
  [127] pusharglist 2 ........................... <"handitem" & tCarrying, "handitem" & tCarrying>
  [129] extcall 331 ............................. <getText("handitem" & tCarrying, "handitem" & tCarrying)>
  [132] setprop 124 ............................. pCarrying = getText("handitem" & tCarrying, "handitem" & tCarrying)
  [134] getparam 0 .............................. <me>
  [136] getprop 171 ............................. <pPartListSubSet>
  [138] pushcons 10 ............................. <"handRight">
  [140] pusharglist 2 ........................... <pPartListSubSet, "handRight">
  [142] objcall 173 ............................. <pPartListSubSet["handRight"]>
  [144] pushcons 86 ............................. <"drk">
  [146] pusharglistnoret 3 ...................... <me, pPartListSubSet["handRight"], "drk">
  [148] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handRight"], "drk")
  [150] pushsymb 433 ............................ <#setModel>
  [153] getparam 0 .............................. <me>
  [155] getprop 171 ............................. <pPartListSubSet>
  [157] pushcons 14 ............................. <"itemRight">
  [159] pusharglist 2 ........................... <pPartListSubSet, "itemRight">
  [161] objcall 173 ............................. <pPartListSubSet["itemRight"]>
  [163] pusharglist 2 ........................... <me, pPartListSubSet["itemRight"]>
  [165] objcall 48 .............................. <me.getDefinedPartList(pPartListSubSet["itemRight"])>
  [167] getlocal 5 .............................. <tCarryItm>
  [169] pusharglistnoret 3 ...................... <#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), tCarryItm>
  [171] extcall 205 ............................. call(#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), tCarryItm)
  [173] pushint8 1 .............................. <1>
  [175] setprop 186 ............................. pRightHandUp = 1
  [177] getparam 0 .............................. <me>
  [179] pusharglistnoret 1 ...................... <me>
  [181] objcall 45 .............................. me.arrangeParts()
  [183] jmp [286]
  [186] pushsymb 447 ............................ <#room_component>
  [189] pusharglist 1 ........................... <#room_component>
  [191] extcall 276 ............................. <getObject(#room_component)>
  [194] pusharglist 1 ........................... <getObject(#room_component)>
  [196] objcall 448 ............................. <getObject(#room_component).getRoomID()>
  [199] pushcons 82 ............................. <"private">
  [201] nteq .................................... <getObject(#room_component).getRoomID() <> "private">
  [202] jmpifz [286] ............................ if getObject(#room_component).getRoomID() <> "private" then
  [205] getparam 1 .............................. <tProps>
  [207] pushsymb 434 ............................ <#word>
  [210] pushint8 2 .............................. <2>
  [212] getparam 1 .............................. <tProps>
  [214] pushsymb 434 ............................ <#word>
  [217] pusharglist 2 ........................... <tProps, #word>
  [219] objcall 172 ............................. <tProps.word.count>
  [221] pusharglist 4 ........................... <tProps, #word, 2, tProps.word.count>
  [223] objcall 311 ............................. <tProps.word[2..tProps.word.count]>
  [226] setprop 124 ............................. pCarrying = tProps.word[2..tProps.word.count]
  [228] getparam 3 .............................. <tDefaultItemPublic>
  [230] pusharglist 1 ........................... <tDefaultItemPublic>
  [232] extcall 445 ............................. <string(tDefaultItemPublic)>
  [235] setlocal 5 .............................. tCarryItm = string(tDefaultItemPublic)
  [237] getparam 0 .............................. <me>
  [239] getprop 171 ............................. <pPartListSubSet>
  [241] pushcons 10 ............................. <"handRight">
  [243] pusharglist 2 ........................... <pPartListSubSet, "handRight">
  [245] objcall 173 ............................. <pPartListSubSet["handRight"]>
  [247] pushcons 86 ............................. <"drk">
  [249] pusharglistnoret 3 ...................... <me, pPartListSubSet["handRight"], "drk">
  [251] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handRight"], "drk")
  [253] pushsymb 433 ............................ <#setModel>
  [256] getparam 0 .............................. <me>
  [258] getprop 171 ............................. <pPartListSubSet>
  [260] pushcons 14 ............................. <"itemRight">
  [262] pusharglist 2 ........................... <pPartListSubSet, "itemRight">
  [264] objcall 173 ............................. <pPartListSubSet["itemRight"]>
  [266] pusharglist 2 ........................... <me, pPartListSubSet["itemRight"]>
  [268] objcall 48 .............................. <me.getDefinedPartList(pPartListSubSet["itemRight"])>
  [270] getlocal 5 .............................. <tCarryItm>
  [272] pusharglistnoret 3 ...................... <#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), tCarryItm>
  [274] extcall 205 ............................. call(#setModel, me.getDefinedPartList(pPartListSubSet["itemRight"]), tCarryItm)
  [276] pushint8 1 .............................. <1>
  [278] setprop 186 ............................. pRightHandUp = 1
  [280] getparam 0 .............................. <me>
  [282] pusharglistnoret 1 ...................... <me>
  [284] objcall 45 .............................. me.arrangeParts()
  [286] ret
end

on action_usei me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 127 .......................... <me.pFx>
  [  4] not ..................................... <not me.pFx>
  [  5] jmpifz [ 20] ............................ if not me.pFx then
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tProps>
  [ 12] pushcons 83 ............................. <"1">
  [ 14] pushcons 83 ............................. <"1">
  [ 16] pusharglistnoret 4 ...................... <me, tProps, "1", "1">
  [ 18] objcall 63 .............................. me.useObject(tProps, "1", "1")
  [ 20] ret
end

on stop_action_usei me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 127 .......................... <me.pFx>
  [  4] not ..................................... <not me.pFx>
  [  5] jmpifz [ 14] ............................ if not me.pFx then
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglistnoret 1 ...................... <me>
  [ 12] objcall 50 .............................. me.resetAction()
  [ 14] pushint8 1 .............................. <1>
  [ 16] setprop 120 ............................. pChanges = 1
  [ 18] getparam 0 .............................. <me>
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 2 ...................... <me, 1>
  [ 24] objcall 39 .............................. me.render(1)
  [ 26] ret
end

on action_drink me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 127 .......................... <me.pFx>
  [  4] not ..................................... <not me.pFx>
  [  5] jmpifz [ 20] ............................ if not me.pFx then
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tProps>
  [ 12] pushcons 83 ............................. <"1">
  [ 14] pushcons 83 ............................. <"1">
  [ 16] pusharglistnoret 4 ...................... <me, tProps, "1", "1">
  [ 18] objcall 63 .............................. me.useObject(tProps, "1", "1")
  [ 20] ret
end

on action_eat me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 127 .......................... <me.pFx>
  [  4] not ..................................... <not me.pFx>
  [  5] jmpifz [ 20] ............................ if not me.pFx then
  [  8] getparam 0 .............................. <me>
  [ 10] getparam 1 .............................. <tProps>
  [ 12] pushcons 83 ............................. <"1">
  [ 14] pushcons 84 ............................. <"4">
  [ 16] pusharglistnoret 4 ...................... <me, tProps, "1", "4">
  [ 18] objcall 63 .............................. me.useObject(tProps, "1", "4")
  [ 20] ret
end

on action_talk me, tProps
  [  0] getprop 163 ............................. <pPeopleSize>
  [  2] pushcons 47 ............................. <"sh">
  [  4] eq ...................................... <pPeopleSize = "sh">
  [  5] jmpifz [ 24] ............................ if pPeopleSize = "sh" then
  [  8] getprop 121 ............................. <pMainAction>
  [ 10] pushcons 33 ............................. <"lay">
  [ 12] eq ...................................... <pMainAction = "lay">
  [ 13] jmpifz [ 24] ............................ if pMainAction = "lay" then
  [ 16] pushzero ................................ <0>
  [ 17] setprop 123 ............................. pTalking = 0
  [ 19] pushzero ................................ <0>
  [ 20] pusharglistnoret 1 ...................... <0>
  [ 22] extcall 189 ............................. return 0
  [ 24] pushint8 1 .............................. <1>
  [ 26] setprop 123 ............................. pTalking = 1
  [ 28] ret
end

on stop_action_talk me, tProps
  [  0] pushzero ................................ <0>
  [  1] setprop 123 ............................. pTalking = 0
  [  3] getprop 121 ............................. <pMainAction>
  [  5] pushcons 33 ............................. <"lay">
  [  7] eq ...................................... <pMainAction = "lay">
  [  8] jmpifz [ 30] ............................ if pMainAction = "lay" then / else
  [ 11] getparam 0 .............................. <me>
  [ 13] getprop 171 ............................. <pPartListSubSet>
  [ 15] pushcons 6 .............................. <"head">
  [ 17] pusharglist 2 ........................... <pPartListSubSet, "head">
  [ 19] objcall 173 ............................. <pPartListSubSet["head"]>
  [ 21] pushcons 33 ............................. <"lay">
  [ 23] pusharglistnoret 3 ...................... <me, pPartListSubSet["head"], "lay">
  [ 25] objcall 49 .............................. me.definePartListAction(pPartListSubSet["head"], "lay")
  [ 27] jmp [ 46]
  [ 30] getparam 0 .............................. <me>
  [ 32] getprop 171 ............................. <pPartListSubSet>
  [ 34] pushcons 6 .............................. <"head">
  [ 36] pusharglist 2 ........................... <pPartListSubSet, "head">
  [ 38] objcall 173 ............................. <pPartListSubSet["head"]>
  [ 40] pushcons 1 .............................. <"std">
  [ 42] pusharglistnoret 3 ...................... <me, pPartListSubSet["head"], "std">
  [ 44] objcall 49 .............................. me.definePartListAction(pPartListSubSet["head"], "std")
  [ 46] pushint8 1 .............................. <1>
  [ 48] setprop 120 ............................. pChanges = 1
  [ 50] getparam 0 .............................. <me>
  [ 52] pushint8 1 .............................. <1>
  [ 54] pusharglistnoret 2 ...................... <me, 1>
  [ 56] objcall 39 .............................. me.render(1)
  [ 58] ret
end

on action_gest me, tProps
  [  0] getprop 163 ............................. <pPeopleSize>
  [  2] pushcons 47 ............................. <"sh">
  [  4] eq ...................................... <pPeopleSize = "sh">
  [  5] jmpifz [ 13] ............................ if pPeopleSize = "sh" then
  [  8] pushzero ................................ <0>
  [  9] pusharglistnoret 1 ...................... <0>
  [ 11] extcall 189 ............................. return 0
  [ 13] getparam 1 .............................. <tProps>
  [ 15] pushsymb 434 ............................ <#word>
  [ 18] pushint8 2 .............................. <2>
  [ 20] pusharglist 3 ........................... <tProps, #word, 2>
  [ 22] objcall 311 ............................. <tProps.word[2]>
  [ 25] setlocal 0 .............................. tGesture = tProps.word[2]
  [ 27] getlocal 0 .............................. <tGesture>
  [ 29] pushcons 87 ............................. <"spr">
  [ 31] eq ...................................... <tGesture = "spr">
  [ 32] jmpifz [ 39] ............................ if tGesture = "spr" then
  [ 35] pushcons 88 ............................. <"srp">
  [ 37] setlocal 0 .............................. tGesture = "srp"
  [ 39] getprop 121 ............................. <pMainAction>
  [ 41] pushcons 33 ............................. <"lay">
  [ 43] eq ...................................... <pMainAction = "lay">
  [ 44] jmpifz [ 85] ............................ if pMainAction = "lay" then / else
  [ 47] pushcons 89 ............................. <"l">
  [ 49] getlocal 0 .............................. <tGesture>
  [ 51] pushsymb 353 ............................ <#char>
  [ 54] pushint8 1 .............................. <1>
  [ 56] pushint8 2 .............................. <2>
  [ 58] pusharglist 4 ........................... <tGesture, #char, 1, 2>
  [ 60] objcall 311 ............................. <tGesture.char[1..2]>
  [ 63] joinstr ................................. <"l" & tGesture.char[1..2]>
  [ 64] setlocal 0 .............................. tGesture = "l" & tGesture.char[1..2]
  [ 66] getparam 0 .............................. <me>
  [ 68] getprop 171 ............................. <pPartListSubSet>
  [ 70] pushcons 8 .............................. <"gesture">
  [ 72] pusharglist 2 ........................... <pPartListSubSet, "gesture">
  [ 74] objcall 173 ............................. <pPartListSubSet["gesture"]>
  [ 76] getlocal 0 .............................. <tGesture>
  [ 78] pusharglistnoret 3 ...................... <me, pPartListSubSet["gesture"], tGesture>
  [ 80] objcall 49 .............................. me.definePartListAction(pPartListSubSet["gesture"], tGesture)
  [ 82] jmp [125]
  [ 85] getparam 0 .............................. <me>
  [ 87] getprop 171 ............................. <pPartListSubSet>
  [ 89] pushcons 8 .............................. <"gesture">
  [ 91] pusharglist 2 ........................... <pPartListSubSet, "gesture">
  [ 93] objcall 173 ............................. <pPartListSubSet["gesture"]>
  [ 95] getlocal 0 .............................. <tGesture>
  [ 97] pusharglistnoret 3 ...................... <me, pPartListSubSet["gesture"], tGesture>
  [ 99] objcall 49 .............................. me.definePartListAction(pPartListSubSet["gesture"], tGesture)
  [101] getlocal 0 .............................. <tGesture>
  [103] pushcons 90 ............................. <"ohd">
  [105] eq ...................................... <tGesture = "ohd">
  [106] jmpifz [125] ............................ if tGesture = "ohd" then
  [109] getparam 0 .............................. <me>
  [111] getprop 171 ............................. <pPartListSubSet>
  [113] pushcons 6 .............................. <"head">
  [115] pusharglist 2 ........................... <pPartListSubSet, "head">
  [117] objcall 173 ............................. <pPartListSubSet["head"]>
  [119] pushcons 90 ............................. <"ohd">
  [121] pusharglistnoret 3 ...................... <me, pPartListSubSet["head"], "ohd">
  [123] objcall 49 .............................. me.definePartListAction(pPartListSubSet["head"], "ohd")
  [125] getlocal 0 .............................. <tGesture>
  [127] setprop 923 ............................. pGesture = tGesture
  [130] pushint8 1 .............................. <1>
  [132] setprop 120 ............................. pChanges = 1
  [134] getparam 0 .............................. <me>
  [136] pushint8 1 .............................. <1>
  [138] pusharglistnoret 2 ...................... <me, 1>
  [140] objcall 39 .............................. me.render(1)
  [142] ret
end

on stop_action_gest me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 91 ............................. <"gest std">
  [  4] pusharglistnoret 2 ...................... <me, "gest std">
  [  6] objcall 70 .............................. me.action_gest("gest std")
  [  8] pushzero ................................ <0>
  [  9] setprop 923 ............................. pGesture = 0
  [ 12] ret
end

on action_wave me, tProps
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 128 ............................. pWaving = 1
  [  4] pushint8 1 .............................. <1>
  [  6] setprop 185 ............................. pLeftHandUp = 1
  [  8] pushcons 20 ............................. <"wavetimeout">
  [ 10] getparam 0 .............................. <me>
  [ 12] pusharglist 1 ........................... <me>
  [ 14] objcall 207 ............................. <me.getID()>
  [ 16] joinstr ................................. <"wavetimeout" & me.getID()>
  [ 17] pusharglist 1 ........................... <"wavetimeout" & me.getID()>
  [ 19] extcall 206 ............................. <timeout("wavetimeout" & me.getID())>
  [ 21] pushint16 2000 .......................... <2000>
  [ 24] pushsymb 72 ............................. <#stop_action_wave>
  [ 26] getparam 0 .............................. <me>
  [ 28] pusharglistnoret 4 ...................... <timeout("wavetimeout" & me.getID()), 2000, #stop_action_wave, me>
  [ 30] objcall 458 ............................. timeout("wavetimeout" & me.getID()).new(2000, #stop_action_wave, me)
  [ 33] getparam 0 .............................. <me>
  [ 35] pusharglistnoret 1 ...................... <me>
  [ 37] objcall 33 .............................. me.stopAnimation()
  [ 39] ret
end

on stop_action_wave me
  [  0] pushcons 20 ............................. <"wavetimeout">
  [  2] getparam 0 .............................. <me>
  [  4] pusharglist 1 ........................... <me>
  [  6] objcall 207 ............................. <me.getID()>
  [  8] joinstr ................................. <"wavetimeout" & me.getID()>
  [  9] pusharglist 1 ........................... <"wavetimeout" & me.getID()>
  [ 11] extcall 206 ............................. <timeout("wavetimeout" & me.getID())>
  [ 13] pusharglistnoret 1 ...................... <timeout("wavetimeout" & me.getID())>
  [ 15] objcall 208 ............................. timeout("wavetimeout" & me.getID()).forget()
  [ 17] pushzero ................................ <0>
  [ 18] setprop 128 ............................. pWaving = 0
  [ 20] pushzero ................................ <0>
  [ 21] setprop 185 ............................. pLeftHandUp = 0
  [ 23] getparam 0 .............................. <me>
  [ 25] getobjprop 131 .......................... <me.pAnimating>
  [ 27] not ..................................... <not me.pAnimating>
  [ 28] jmpifz [ 47] ............................ if not me.pAnimating then
  [ 31] getparam 0 .............................. <me>
  [ 33] getprop 171 ............................. <pPartListSubSet>
  [ 35] pushcons 11 ............................. <"handLeft">
  [ 37] pusharglist 2 ........................... <pPartListSubSet, "handLeft">
  [ 39] objcall 173 ............................. <pPartListSubSet["handLeft"]>
  [ 41] getprop 121 ............................. <pMainAction>
  [ 43] pusharglistnoret 3 ...................... <me, pPartListSubSet["handLeft"], pMainAction>
  [ 45] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handLeft"], pMainAction)
  [ 47] pushint8 1 .............................. <1>
  [ 49] setprop 120 ............................. pChanges = 1
  [ 51] ret
end

on action_dance me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] pusharglist 1 ........................... <me>
  [  4] objcall 936 ............................. <me.allowDancing()>
  [  7] not ..................................... <not me.allowDancing()>
  [  8] jmpifz [ 17] ............................ if not me.allowDancing() then
  [ 11] pushint8 1 .............................. <1>
  [ 13] pusharglistnoret 1 ...................... <1>
  [ 15] extcall 189 ............................. return 1
  [ 17] getparam 0 .............................. <me>
  [ 19] pusharglistnoret 1 ...................... <me>
  [ 21] objcall 95 .............................. me.clearEffects()
  [ 23] getparam 1 .............................. <tProps>
  [ 25] pushsymb 434 ............................ <#word>
  [ 28] pushint8 2 .............................. <2>
  [ 30] pusharglist 3 ........................... <tProps, #word, 2>
  [ 32] objcall 311 ............................. <tProps.word[2]>
  [ 35] setlocal 0 .............................. tStyleNum = tProps.word[2]
  [ 37] getlocal 0 .............................. <tStyleNum>
  [ 39] pusharglist 1 ........................... <tStyleNum>
  [ 41] extcall 274 ............................. <integer(tStyleNum)>
  [ 44] setprop 126 ............................. pDancing = integer(tStyleNum)
  [ 46] getprop 126 ............................. <pDancing>
  [ 48] pusharglist 0 ........................... <>
  [ 50] extcall 101 ............................. <VOID>
  [ 52] eq ...................................... <pDancing = VOID>
  [ 53] jmpifz [ 60] ............................ if pDancing = VOID then
  [ 56] pushint8 1 .............................. <1>
  [ 58] setprop 126 ............................. pDancing = 1
  [ 60] pushcons 92 ............................. <"dance.">
  [ 62] getprop 126 ............................. <pDancing>
  [ 64] joinstr ................................. <"dance." & pDancing>
  [ 65] setlocal 1 .............................. tStyle = "dance." & pDancing
  [ 67] getlocal 0 .............................. <tStyleNum>
  [ 69] pushcons 93 ............................. <"0">
  [ 71] nteq .................................... <tStyleNum <> "0">
  [ 72] jmpifz [100] ............................ if tStyleNum <> "0" then / else
  [ 75] getparam 0 .............................. <me>
  [ 77] pushcons 0 .............................. <EMPTY>
  [ 79] pusharglistnoret 2 ...................... <me, EMPTY>
  [ 81] objcall 62 .............................. me.stop_action_carry(EMPTY)
  [ 83] getparam 0 .............................. <me>
  [ 85] pusharglistnoret 1 ...................... <me>
  [ 87] objcall 72 .............................. me.stop_action_wave()
  [ 89] getparam 0 .............................. <me>
  [ 91] getlocal 1 .............................. <tStyle>
  [ 93] pusharglistnoret 2 ...................... <me, tStyle>
  [ 95] objcall 32 .............................. me.startAnimation(tStyle)
  [ 97] jmp [127]
  [100] getparam 0 .............................. <me>
  [102] pusharglistnoret 1 ...................... <me>
  [104] objcall 33 .............................. me.stopAnimation()
  [106] pushzero ................................ <0>
  [107] setprop 126 ............................. pDancing = 0
  [109] getparam 0 .............................. <me>
  [111] pusharglistnoret 1 ...................... <me>
  [113] objcall 50 .............................. me.resetAction()
  [115] pushint8 1 .............................. <1>
  [117] setprop 120 ............................. pChanges = 1
  [119] getparam 0 .............................. <me>
  [121] pushint8 1 .............................. <1>
  [123] pusharglistnoret 2 ...................... <me, 1>
  [125] objcall 39 .............................. me.render(1)
  [127] pushsymb 459 ............................ <#updateInfostandAvatar>
  [130] pusharglistnoret 1 ...................... <#updateInfostandAvatar>
  [132] extcall 291 ............................. executeMessage(#updateInfostandAvatar)
  [135] ret
end

on allowDancing me
  [  0] getprop 121 ............................. <pMainAction>
  [  2] pushcons 33 ............................. <"lay">
  [  4] eq ...................................... <pMainAction = "lay">
  [  5] jmpifz [ 13] ............................ if pMainAction = "lay" then
  [  8] pushzero ................................ <0>
  [  9] pusharglistnoret 1 ...................... <0>
  [ 11] extcall 189 ............................. return 0
  [ 13] getprop 121 ............................. <pMainAction>
  [ 15] pushcons 13 ............................. <"sit">
  [ 17] eq ...................................... <pMainAction = "sit">
  [ 18] jmpifz [ 26] ............................ if pMainAction = "sit" then
  [ 21] pushzero ................................ <0>
  [ 22] pusharglistnoret 1 ...................... <0>
  [ 24] extcall 189 ............................. return 0
  [ 26] pushint8 1 .............................. <1>
  [ 28] pusharglistnoret 1 ...................... <1>
  [ 30] extcall 189 ............................. return 1
  [ 32] ret
end

on stop_action_dance me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] pushcons 94 ............................. <"dance 0">
  [  4] pusharglistnoret 2 ...................... <me, "dance 0">
  [  6] objcall 73 .............................. me.action_dance("dance 0")
  [  8] getparam 0 .............................. <me>
  [ 10] pusharglistnoret 1 ...................... <me>
  [ 12] objcall 50 .............................. me.resetAction()
  [ 14] pushint8 1 .............................. <1>
  [ 16] setprop 120 ............................. pChanges = 1
  [ 18] ret
end

on action_ohd me
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 127 .......................... <me.pFx>
  [  4] not ..................................... <not me.pFx>
  [  5] jmpifz [ 40] ............................ if not me.pFx then
  [  8] getparam 0 .............................. <me>
  [ 10] getprop 171 ............................. <pPartListSubSet>
  [ 12] pushcons 6 .............................. <"head">
  [ 14] pusharglist 2 ........................... <pPartListSubSet, "head">
  [ 16] objcall 173 ............................. <pPartListSubSet["head"]>
  [ 18] pushcons 90 ............................. <"ohd">
  [ 20] pusharglistnoret 3 ...................... <me, pPartListSubSet["head"], "ohd">
  [ 22] objcall 49 .............................. me.definePartListAction(pPartListSubSet["head"], "ohd")
  [ 24] getparam 0 .............................. <me>
  [ 26] getprop 171 ............................. <pPartListSubSet>
  [ 28] pushcons 10 ............................. <"handRight">
  [ 30] pusharglist 2 ........................... <pPartListSubSet, "handRight">
  [ 32] objcall 173 ............................. <pPartListSubSet["handRight"]>
  [ 34] pushcons 90 ............................. <"ohd">
  [ 36] pusharglistnoret 3 ...................... <me, pPartListSubSet["handRight"], "ohd">
  [ 38] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handRight"], "ohd")
  [ 40] ret
end

on action_trd me
  [  0] pushint8 1 .............................. <1>
  [  2] setprop 129 ............................. pTrading = 1
  [  4] ret
end

on action_sleep me, tSleep
  [  0] getparam 1 .............................. <tSleep>
  [  2] setprop 125 ............................. pSleeping = tSleep
  [  4] ret
end

on action_flatctrl me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 434 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 311 ............................. <tProps.word[2]>
  [ 12] setprop 130 ............................. pCtrlType = tProps.word[2]
  [ 14] ret
end

on action_mod me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 434 ............................ <#word>
  [  5] pushint8 2 .............................. <2>
  [  7] pusharglist 3 ........................... <tProps, #word, 2>
  [  9] objcall 311 ............................. <tProps.word[2]>
  [ 12] setprop 138 ............................. pModState = tProps.word[2]
  [ 14] ret
end

on action_sign me, props
  [  0] getparam 0 .............................. <me>
  [  2] getobjprop 127 .......................... <me.pFx>
  [  4] not ..................................... <not me.pFx>
  [  5] jmpifz [135] ............................ if not me.pFx then
  [  8] pushcons 95 ............................. <"sign">
  [ 10] getparam 1 .............................. <props>
  [ 12] pushsymb 434 ............................ <#word>
  [ 15] pushint8 2 .............................. <2>
  [ 17] pusharglist 3 ........................... <props, #word, 2>
  [ 19] objcall 311 ............................. <props.word[2]>
  [ 22] joinstr ................................. <"sign" & props.word[2]>
  [ 23] setlocal 0 .............................. tSignMem = "sign" & props.word[2]
  [ 25] getlocal 0 .............................. <tSignMem>
  [ 27] pusharglist 1 ........................... <tSignMem>
  [ 29] extcall 215 ............................. <getmemnum(tSignMem)>
  [ 31] pushzero ................................ <0>
  [ 32] eq ...................................... <getmemnum(tSignMem) = 0>
  [ 33] jmpifz [ 41] ............................ if getmemnum(tSignMem) = 0 then
  [ 36] pushzero ................................ <0>
  [ 37] pusharglistnoret 1 ...................... <0>
  [ 39] extcall 189 ............................. return 0
  [ 41] getparam 0 .............................. <me>
  [ 43] getprop 171 ............................. <pPartListSubSet>
  [ 45] pushcons 11 ............................. <"handLeft">
  [ 47] pusharglist 2 ........................... <pPartListSubSet, "handLeft">
  [ 49] objcall 173 ............................. <pPartListSubSet["handLeft"]>
  [ 51] pushcons 96 ............................. <"sig">
  [ 53] pusharglistnoret 3 ...................... <me, pPartListSubSet["handLeft"], "sig">
  [ 55] objcall 49 .............................. me.definePartListAction(pPartListSubSet["handLeft"], "sig")
  [ 57] pushcons 97 ............................. <"SIGN_EXTRA">
  [ 59] setlocal 1 .............................. tSignObjID = "SIGN_EXTRA"
  [ 61] getprop 140 ............................. <pExtraObjsActive>
  [ 63] getlocal 1 .............................. <tSignObjID>
  [ 65] pushint8 1 .............................. <1>
  [ 67] pusharglistnoret 3 ...................... <pExtraObjsActive, tSignObjID, 1>
  [ 69] objcall 332 ............................. pExtraObjsActive.setaProp(tSignObjID, 1)
  [ 72] getprop 139 ............................. <pExtraObjs>
  [ 74] getlocal 1 .............................. <tSignObjID>
  [ 76] pusharglist 2 ........................... <pExtraObjs, tSignObjID>
  [ 78] objcall 173 ............................. <pExtraObjs[tSignObjID]>
  [ 80] pusharglist 1 ........................... <pExtraObjs[tSignObjID]>
  [ 82] extcall 194 ............................. <voidp(pExtraObjs[tSignObjID])>
  [ 84] jmpifz [106] ............................ if voidp(pExtraObjs[tSignObjID]) then
  [ 87] getprop 139 ............................. <pExtraObjs>
  [ 89] getlocal 1 .............................. <tSignObjID>
  [ 91] pushsymb 404 ............................ <#temp>
  [ 94] pushcons 98 ............................. <"HumanExtra Sign Class">
  [ 96] pusharglist 2 ........................... <#temp, "HumanExtra Sign Class">
  [ 98] extcall 403 ............................. <createObject(#temp, "HumanExtra Sign Class")>
  [101] pusharglistnoret 3 ...................... <pExtraObjs, tSignObjID, createObject(#temp, "HumanExtra Sign Class")>
  [103] objcall 398 ............................. pExtraObjs.addProp(tSignObjID, createObject(#temp, "HumanExtra Sign Class"))
  [106] pushsymb 462 ............................ <#show_sign>
  [109] getprop 139 ............................. <pExtraObjs>
  [111] pushcons 99 ............................. <"sprite">
  [113] getprop 195 ............................. <pSprite>
  [115] pushcons 100 ............................ <"direction">
  [117] getprop 260 ............................. <pDirection>
  [120] pushcons 101 ............................ <"signmember">
  [122] getlocal 0 .............................. <tSignMem>
  [124] pusharglist 6 ........................... <["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [126] pushproplist ............................ <["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [127] pusharglistnoret 3 ...................... <#show_sign, pExtraObjs, ["sprite": pSprite, "direction": pDirection, "signmember": tSignMem]>
  [129] extcall 205 ............................. call(#show_sign, pExtraObjs, ["sprite": pSprite, "direction": pDirection, "signmember": tSignMem])
  [131] pushint8 1 .............................. <1>
  [133] setprop 185 ............................. pLeftHandUp = 1
  [135] ret
end

on action_joingame me, tProps
  [  0] getparam 1 .............................. <tProps>
  [  2] pushsymb 434 ............................ <#word>
  [  5] pusharglist 2 ........................... <tProps, #word>
  [  7] objcall 172 ............................. <tProps.word.count>
  [  9] pushint8 3 .............................. <3>
  [ 11] lt ...................................... <tProps.word.count < 3>
  [ 12] jmpifz [ 20] ............................ if tProps.word.count < 3 then
  [ 15] pushzero ................................ <0>
  [ 16] pusharglistnoret 1 ...................... <0>
  [ 18] extcall 189 ............................. return 0
  [ 20] pushcons 32 ............................. <"IG_ICON">
  [ 22] setlocal 0 .............................. tSignObjID = "IG_ICON"
  [ 24] getprop 140 ............................. <pExtraObjsActive>
  [ 26] getlocal 0 .............................. <tSignObjID>
  [ 28] pushint8 1 .............................. <1>
  [ 30] pusharglistnoret 3 ...................... <pExtraObjsActive, tSignObjID, 1>
  [ 32] objcall 332 ............................. pExtraObjsActive.setaProp(tSignObjID, 1)
  [ 35] getparam 1 .............................. <tProps>
  [ 37] getobjprop 466 .......................... <tProps.length>
  [ 40] pushcons 102 ............................ <"joingame">
  [ 42] pusharglist 1 ........................... <"joingame">
  [ 44] extcall 445 ............................. <string("joingame")>
  [ 47] getobjprop 466 .......................... <string("joingame").length>
  [ 50] eq ...................................... <tProps.length = string("joingame").length>
  [ 51] jmpifz [ 68] ............................ if tProps.length = string("joingame").length then
  [ 54] getprop 140 ............................. <pExtraObjsActive>
  [ 56] getlocal 0 .............................. <tSignObjID>
  [ 58] pushzero ................................ <0>
  [ 59] pusharglistnoret 3 ...................... <pExtraObjsActive, tSignObjID, 0>
  [ 61] objcall 332 ............................. pExtraObjsActive.setaProp(tSignObjID, 0)
  [ 64] pusharglistnoret 0 ...................... <>
  [ 66] extcall 189 ............................. return 
  [ 68] getprop 139 ............................. <pExtraObjs>
  [ 70] getlocal 0 .............................. <tSignObjID>
  [ 72] pusharglist 2 ........................... <pExtraObjs, tSignObjID>
  [ 74] objcall 290 ............................. <pExtraObjs.findPos(tSignObjID)>
  [ 77] pushzero ................................ <0>
  [ 78] eq ...................................... <pExtraObjs.findPos(tSignObjID) = 0>
  [ 79] jmpifz [117] ............................ if pExtraObjs.findPos(tSignObjID) = 0 then
  [ 82] pushsymb 404 ............................ <#temp>
  [ 85] pushcons 103 ............................ <"IG HumanIcon Class">
  [ 87] pusharglist 2 ........................... <#temp, "IG HumanIcon Class">
  [ 89] extcall 403 ............................. <createObject(#temp, "IG HumanIcon Class")>
  [ 92] setlocal 1 .............................. tObject = createObject(#temp, "IG HumanIcon Class")
  [ 94] getlocal 1 .............................. <tObject>
  [ 96] pushzero ................................ <0>
  [ 97] eq ...................................... <tObject = 0>
  [ 98] jmpifz [106] ............................ if tObject = 0 then
  [101] pushzero ................................ <0>
  [102] pusharglistnoret 1 ...................... <0>
  [104] extcall 189 ............................. return 0
  [106] getprop 139 ............................. <pExtraObjs>
  [108] getlocal 0 .............................. <tSignObjID>
  [110] getlocal 1 .............................. <tObject>
  [112] pusharglistnoret 3 ...................... <pExtraObjs, tSignObjID, tObject>
  [114] objcall 332 ............................. pExtraObjs.setaProp(tSignObjID, tObject)
  [117] pushsymb 467 ............................ <#show_ig_icon>
  [120] getprop 139 ............................. <pExtraObjs>
  [122] pushcons 104 ............................ <"userid">
  [124] getparam 0 .............................. <me>
  [126] pusharglist 1 ........................... <me>
  [128] objcall 207 ............................. <me.getID()>
  [130] pushcons 105 ............................ <"gameid">
  [132] getparam 1 .............................. <tProps>
  [134] pushsymb 434 ............................ <#word>
  [137] pushint8 2 .............................. <2>
  [139] pusharglist 3 ........................... <tProps, #word, 2>
  [141] objcall 311 ............................. <tProps.word[2]>
  [144] pushcons 106 ............................ <"gametype">
  [146] getparam 1 .............................. <tProps>
  [148] pushsymb 434 ............................ <#word>
  [151] pushint8 3 .............................. <3>
  [153] pusharglist 3 ........................... <tProps, #word, 3>
  [155] objcall 311 ............................. <tProps.word[3]>
  [158] pushcons 107 ............................ <"locz">
  [160] getprop 195 ............................. <pSprite>
  [162] getobjprop 247 .......................... <pSprite.locZ>
  [164] pusharglist 8 ........................... <["userid": me.getID(), "gameid": tProps.word[2], "gametype": tProps.word[3], "locz": pSprite.locZ]>
  [166] pushproplist ............................ <["userid": me.getID(), "gameid": tProps.word[2], "gametype": tProps.word[3], "locz": pSprite.locZ]>
  [167] pusharglistnoret 3 ...................... <#show_ig_icon, pExtraObjs, ["userid": me.getID(), "gameid": tProps.word[2], "gametype": tProps.word[3], "locz": pSprite.locZ]>
  [169] extcall 205 ............................. call(#show_ig_icon, pExtraObjs, ["userid": me.getID(), "gameid": tProps.word[2], "gametype": tProps.word[3], "locz": pSprite.locZ])
  [171] ret
end

on action_fx me, tProps
  [  0] getparam 0 .............................. <me>
  [  2] pushzero ................................ <0>
  [  3] setobjprop 930 .......................... me.pPersistedFX = 0
  [  6] getparam 1 .............................. <tProps>
  [  8] pusharglist 0 ........................... <>
  [ 10] extcall 101 ............................. <VOID>
  [ 12] eq ...................................... <tProps = VOID>
  [ 13] jmpifz [ 21] ............................ if tProps = VOID then
  [ 16] pushzero ................................ <0>
  [ 17] pusharglistnoret 1 ...................... <0>
  [ 19] extcall 189 ............................. return 0
  [ 21] getparam 1 .............................. <tProps>
  [ 23] getobjprop 466 .......................... <tProps.length>
  [ 26] pushint8 4 .............................. <4>
  [ 28] lt ...................................... <tProps.length < 4>
  [ 29] jmpifz [ 37] ............................ if tProps.length < 4 then
  [ 32] pushzero ................................ <0>
  [ 33] pusharglistnoret 1 ...................... <0>
  [ 35] extcall 189 ............................. return 0
  [ 37] getparam 1 .............................. <tProps>
  [ 39] pushsymb 353 ............................ <#char>
  [ 42] pushint8 4 .............................. <4>
  [ 44] getparam 1 .............................. <tProps>
  [ 46] getobjprop 466 .......................... <tProps.length>
  [ 49] pusharglist 4 ........................... <tProps, #char, 4, tProps.length>
  [ 51] objcall 311 ............................. <tProps.char[4..tProps.length]>
  [ 54] pusharglist 1 ........................... <tProps.char[4..tProps.length]>
  [ 56] extcall 274 ............................. <integer(tProps.char[4..tProps.length])>
  [ 59] setlocal 0 .............................. tID = integer(tProps.char[4..tProps.length])
  [ 61] getparam 0 .............................. <me>
  [ 63] pusharglist 1 ........................... <me>
  [ 65] objcall 97 .............................. <me.getEffectManager()>
  [ 67] setlocal 1 .............................. tManager = me.getEffectManager()
  [ 69] getlocal 1 .............................. <tManager>
  [ 71] pushzero ................................ <0>
  [ 72] eq ...................................... <tManager = 0>
  [ 73] jmpifz [ 81] ............................ if tManager = 0 then
  [ 76] pushzero ................................ <0>
  [ 77] pusharglistnoret 1 ...................... <0>
  [ 79] extcall 189 ............................. return 0
  [ 81] getlocal 0 .............................. <tID>
  [ 83] pushzero ................................ <0>
  [ 84] eq ...................................... <tID = 0>
  [ 85] jmpifz [120] ............................ if tID = 0 then
  [ 88] getparam 0 .............................. <me>
  [ 90] pusharglistnoret 1 ...................... <me>
  [ 92] objcall 95 .............................. me.clearEffects()
  [ 94] getparam 0 .............................. <me>
  [ 96] getlocal 0 .............................. <tID>
  [ 98] setobjprop 127 .......................... me.pFx = tID
  [100] getparam 0 .............................. <me>
  [102] pushzero ................................ <0>
  [103] setobjprop 930 .......................... me.pPersistedFX = 0
  [106] pushsymb 459 ............................ <#updateInfostandAvatar>
  [109] pusharglistnoret 1 ...................... <#updateInfostandAvatar>
  [111] extcall 291 ............................. executeMessage(#updateInfostandAvatar)
  [114] pushint8 1 .............................. <1>
  [116] pusharglistnoret 1 ...................... <1>
  [118] extcall 189 ............................. return 1
  [120] getlocal 1 .............................. <tManager>
  [122] getlocal 0 .............................. <tID>
  [124] pusharglist 2 ........................... <tManager, tID>
  [126] objcall 469 ............................. <tManager.effectExists(tID)>
  [129] jmpifz [138] ............................ if tManager.effectExists(tID) then
  [132] pushint8 1 .............................. <1>
  [134] pusharglistnoret 1 ...................... <1>
  [136] extcall 189 ............................. return 1
  [138] getparam 0 .............................. <me>
  [140] pusharglistnoret 1 ...................... <me>
  [142] objcall 95 .............................. me.clearEffects()
  [144] getlocal 1 .............................. <tManager>
  [146] getparam 0 .............................. <me>
  [148] getlocal 0 .............................. <tID>
  [150] pusharglist 3 ........................... <tManager, me, tID>
  [152] objcall 470 ............................. <tManager.constructEffect(me, tID)>
  [155] not ..................................... <not tManager.constructEffect(me, tID)>
  [156] jmpifz [179] ............................ if not tManager.constructEffect(me, tID) then
  [159] getparam 0 .............................. <me>
  [161] pushcons 108 ............................ <"Can not construct effect:">
  [163] getlocal 0 .............................. <tID>
  [165] joinpadstr .............................. <"Can not construct effect:" && tID>
  [166] pushsymb 82 ............................. <#action_fx>
  [168] pushsymb 275 ............................ <#minor>
  [171] pusharglist 4 ........................... <me, "Can not construct effect:" && tID, #action_fx, #minor>
  [173] extcall 176 ............................. <error(me, "Can not construct effect:" && tID, #action_fx, #minor)>
  [175] pusharglistnoret 1 ...................... <error(me, "Can not construct effect:" && tID, #action_fx, #minor)>
  [177] extcall 189 ............................. return error(me, "Can not construct effect:" && tID, #action_fx, #minor)
  [179] getparam 0 .............................. <me>
  [181] getlocal 0 .............................. <tID>
  [183] setobjprop 127 .......................... me.pFx = tID
  [185] pushsymb 459 ............................ <#updateInfostandAvatar>
  [188] pusharglistnoret 1 ...................... <#updateInfostandAvatar>
  [190] extcall 291 ............................. executeMessage(#updateInfostandAvatar)
  [193] pushint8 1 .............................. <1>
  [195] pusharglistnoret 1 ...................... <1>
  [197] extcall 189 ............................. return 1
  [199] ret
end

on persist_fx me, ttype
  [  0] getparam 0 .............................. <me>
  [  2] getparam 1 .............................. <ttype>
  [  4] setobjprop 930 .......................... me.pPersistedFX = ttype
  [  7] ret
end

on handle_user_carry_object me, tItemType, tItemName
  [  0] pushcons 109 ............................ <"carryd">
  [  2] setlocal 0 .............................. tAction = "carryd"
  [  4] getparam 1 .............................. <tItemType>
  [  6] pushint8 20 ............................. <20>
  [  8] eq ...................................... <tItemType = 20>
  [  9] jmpifz [ 16] ............................ if tItemType = 20 then
  [ 12] pushcons 110 ............................ <"cri">
  [ 14] setlocal 0 .............................. tAction = "cri"
  [ 16] getparam 1 .............................. <tItemType>
  [ 18] pushint8 101 ............................ <101>
  [ 20] eq ...................................... <tItemType = 101>
  [ 21] jmpifz [ 28] ............................ if tItemType = 101 then
  [ 24] pushcons 111 ............................ <"carryf">
  [ 26] setlocal 0 .............................. tAction = "carryf"
  [ 28] getparam 1 .............................. <tItemType>
  [ 30] pusharglist 1 ........................... <tItemType>
  [ 32] extcall 445 ............................. <string(tItemType)>
  [ 35] setlocal 1 .............................. tParams = string(tItemType)
  [ 37] getparam 1 .............................. <tItemType>
  [ 39] pushint8 100 ............................ <100>
  [ 41] eq ...................................... <tItemType = 100>
  [ 42] getparam 1 .............................. <tItemType>
  [ 44] pushint8 101 ............................ <101>
  [ 46] eq ...................................... <tItemType = 101>
  [ 47] or ...................................... <(tItemType = 100) or (tItemType = 101)>
  [ 48] jmpifz [ 55] ............................ if (tItemType = 100) or (tItemType = 101) then
  [ 51] getparam 2 .............................. <tItemName>
  [ 53] setlocal 1 .............................. tParams = tItemName
  [ 55] pushcons 34 ............................. <"action_">
  [ 57] getlocal 0 .............................. <tAction>
  [ 59] joinstr ................................. <"action_" & tAction>
  [ 60] getparam 0 .............................. <me>
  [ 62] pusharglist 1 ........................... <[me]>
  [ 64] pushlist ................................ <[me]>
  [ 65] getlocal 0 .............................. <tAction>
  [ 67] getlocal 1 .............................. <tParams>
  [ 69] joinpadstr .............................. <tAction && tParams>
  [ 70] pusharglistnoret 3 ...................... <"action_" & tAction, [me], tAction && tParams>
  [ 72] extcall 205 ............................. call("action_" & tAction, [me], tAction && tParams)
  [ 74] pushint8 1 .............................. <1>
  [ 76] setprop 120 ............................. pChanges = 1
  [ 78] getparam 0 .............................. <me>
  [ 80] pushint8 1 .............................. <1>
  [ 82] pusharglistnoret 2 ...................... <me, 1>
  [ 84] objcall 39 .............................. me.render(1)
  [ 86] getparam 1 .............................. <tItemType>
  [ 88] setprop 188 ............................. pCarryItemCode = tItemType
  [ 90] getparam 1 .............................. <tItemType>
  [ 92] pushzero ................................ <0>
  [ 93] eq ...................................... <tItemType = 0>
  [ 94] getparam 1 .............................. <tItemType>
  [ 96] pushint8 20 ............................. <20>
  [ 98] eq ...................................... <tItemType = 20>
  [ 99] or ...................................... <(tItemType = 0) or (tItemType = 20)>
  [100] jmpifz [113] ............................ if (tItemType = 0) or (tItemType = 20) then
  [103] pusharglist 0 ........................... <[:]>
  [105] pushproplist ............................ <[:]>
  [106] setprop 306 ............................. pDrinkEatParams = [:]
  [109] pusharglistnoret 0 ...................... <>
  [111] extcall 189 ............................. return 
  [113] pushsymb 85 ............................. <#execute_drink>
  [115] setlocal 2 .............................. tHandler = #execute_drink
  [117] getparam 1 .............................. <tItemType>
  [119] pushint8 101 ............................ <101>
  [121] eq ...................................... <tItemType = 101>
  [122] jmpifz [129] ............................ if tItemType = 101 then
  [125] pushsymb 84 ............................. <#execute_eat>
  [127] setlocal 2 .............................. tHandler = #execute_eat
  [129] pushsymb 308 ............................ <#params>
  [132] getlocal 1 .............................. <tParams>
  [134] pushsymb 307 ............................ <#action>
  [137] getlocal 0 .............................. <tAction>
  [139] pusharglist 4 ........................... <[#params: tParams, #action: tAction]>
  [141] pushproplist ............................ <[#params: tParams, #action: tAction]>
  [142] setprop 306 ............................. pDrinkEatParams = [#params: tParams, #action: tAction]
  [145] pushint8 1 .............................. <1>
  [147] setlocal 3
  [149] getlocal 3
  [151] pushint8 10 ............................. <10>
  [153] lteq
  [154] jmpifz [205] ............................ repeat with i = 1 to 10
  [157] pusharglist 0 ........................... <>
  [159] extcall 170 ............................. <getUniqueID()>
  [161] setlocal 4 .............................. tID = getUniqueID()
  [163] getlocal 4 .............................. <tID>
  [165] pusharglist 1 ........................... <tID>
  [167] extcall 206 ............................. <timeout(tID)>
  [169] getlocal 3 .............................. <i>
  [171] pushint8 10 ............................. <10>
  [173] mul ..................................... <i * 10>
  [174] pushint16 1000 .......................... <1000>
  [177] mul ..................................... <i * 10 * 1000>
  [178] getlocal 2 .............................. <tHandler>
  [180] getparam 0 .............................. <me>
  [182] pusharglistnoret 4 ...................... <timeout(tID), i * 10 * 1000, tHandler, me>
  [184] objcall 458 ............................. timeout(tID).new(i * 10 * 1000, tHandler, me)
  [187] getprop 187 ............................. <pDrinkEatTimeoutList>
  [189] getlocal 4 .............................. <tID>
  [191] pusharglistnoret 2 ...................... <pDrinkEatTimeoutList, tID>
  [193] objcall 389 ............................. pDrinkEatTimeoutList.add(tID)
  [196] pushint8 1
  [198] getlocal 3
  [200] add
  [201] setlocal 3
  [203] endrepeat [149]
  [205] pusharglist 0 ........................... <>
  [207] extcall 170 ............................. <getUniqueID()>
  [209] setlocal 4 .............................. tID = getUniqueID()
  [211] getlocal 4 .............................. <tID>
  [213] pusharglist 1 ........................... <tID>
  [215] extcall 206 ............................. <timeout(tID)>
  [217] pushint8 10 ............................. <10>
  [219] pushint8 10 ............................. <10>
  [221] mul ..................................... <10 * 10>
  [222] pushint16 1000 .......................... <1000>
  [225] mul ..................................... <10 * 10 * 1000>
  [226] pushint16 1000 .......................... <1000>
  [229] add ..................................... <(10 * 10 * 1000) + 1000>
  [230] pushsymb 62 ............................. <#stop_action_carry>
  [232] getparam 0 .............................. <me>
  [234] pusharglistnoret 4 ...................... <timeout(tID), (10 * 10 * 1000) + 1000, #stop_action_carry, me>
  [236] objcall 458 ............................. timeout(tID).new((10 * 10 * 1000) + 1000, #stop_action_carry, me)
  [239] getprop 187 ............................. <pDrinkEatTimeoutList>
  [241] getlocal 4 .............................. <tID>
  [243] pusharglistnoret 2 ...................... <pDrinkEatTimeoutList, tID>
  [245] objcall 389 ............................. pDrinkEatTimeoutList.add(tID)
  [248] ret
end

on execute_eat me, tTimeout
  [  0] getprop 187 ............................. <pDrinkEatTimeoutList>
  [  2] getparam 1 .............................. <tTimeout>
  [  4] getobjprop 234 .......................... <tTimeout.name>
  [  6] pusharglistnoret 2 ...................... <pDrinkEatTimeoutList, tTimeout.name>
  [  8] objcall 390 ............................. pDrinkEatTimeoutList.deleteOne(tTimeout.name)
  [ 11] getparam 1 .............................. <tTimeout>
  [ 13] getobjprop 234 .......................... <tTimeout.name>
  [ 15] pusharglist 1 ........................... <tTimeout.name>
  [ 17] extcall 206 ............................. <timeout(tTimeout.name)>
  [ 19] pusharglistnoret 1 ...................... <timeout(tTimeout.name)>
  [ 21] objcall 208 ............................. timeout(tTimeout.name).forget()
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 112 ............................ <"eat ">
  [ 27] getprop 306 ............................. <pDrinkEatParams>
  [ 30] pushsymb 308 ............................ <#params>
  [ 33] pusharglist 2 ........................... <pDrinkEatParams, #params>
  [ 35] objcall 173 ............................. <pDrinkEatParams[#params]>
  [ 37] joinstr ................................. <"eat " & pDrinkEatParams[#params]>
  [ 38] pusharglistnoret 2 ...................... <me, "eat " & pDrinkEatParams[#params]>
  [ 40] objcall 67 .............................. me.action_eat("eat " & pDrinkEatParams[#params])
  [ 42] pushint8 1 .............................. <1>
  [ 44] setprop 120 ............................. pChanges = 1
  [ 46] getparam 0 .............................. <me>
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 2 ...................... <me, 1>
  [ 52] objcall 39 .............................. me.render(1)
  [ 54] pusharglist 0 ........................... <>
  [ 56] extcall 170 ............................. <getUniqueID()>
  [ 58] setlocal 0 .............................. tID = getUniqueID()
  [ 60] getlocal 0 .............................. <tID>
  [ 62] pusharglist 1 ........................... <tID>
  [ 64] extcall 206 ............................. <timeout(tID)>
  [ 66] pushint16 500 ........................... <500>
  [ 69] pushsymb 86 ............................. <#execute_continue_carry>
  [ 71] getparam 0 .............................. <me>
  [ 73] pusharglistnoret 4 ...................... <timeout(tID), 500, #execute_continue_carry, me>
  [ 75] objcall 458 ............................. timeout(tID).new(500, #execute_continue_carry, me)
  [ 78] getprop 187 ............................. <pDrinkEatTimeoutList>
  [ 80] getlocal 0 .............................. <tID>
  [ 82] pusharglistnoret 2 ...................... <pDrinkEatTimeoutList, tID>
  [ 84] objcall 389 ............................. pDrinkEatTimeoutList.add(tID)
  [ 87] ret
end

on execute_drink me, tTimeout
  [  0] getprop 187 ............................. <pDrinkEatTimeoutList>
  [  2] getparam 1 .............................. <tTimeout>
  [  4] getobjprop 234 .......................... <tTimeout.name>
  [  6] pusharglistnoret 2 ...................... <pDrinkEatTimeoutList, tTimeout.name>
  [  8] objcall 390 ............................. pDrinkEatTimeoutList.deleteOne(tTimeout.name)
  [ 11] getparam 1 .............................. <tTimeout>
  [ 13] getobjprop 234 .......................... <tTimeout.name>
  [ 15] pusharglist 1 ........................... <tTimeout.name>
  [ 17] extcall 206 ............................. <timeout(tTimeout.name)>
  [ 19] pusharglistnoret 1 ...................... <timeout(tTimeout.name)>
  [ 21] objcall 208 ............................. timeout(tTimeout.name).forget()
  [ 23] getparam 0 .............................. <me>
  [ 25] pushcons 113 ............................ <"drink ">
  [ 27] getprop 306 ............................. <pDrinkEatParams>
  [ 30] pushsymb 308 ............................ <#params>
  [ 33] pusharglist 2 ........................... <pDrinkEatParams, #params>
  [ 35] objcall 173 ............................. <pDrinkEatParams[#params]>
  [ 37] joinstr ................................. <"drink " & pDrinkEatParams[#params]>
  [ 38] pusharglistnoret 2 ...................... <me, "drink " & pDrinkEatParams[#params]>
  [ 40] objcall 66 .............................. me.action_drink("drink " & pDrinkEatParams[#params])
  [ 42] pushint8 1 .............................. <1>
  [ 44] setprop 120 ............................. pChanges = 1
  [ 46] getparam 0 .............................. <me>
  [ 48] pushint8 1 .............................. <1>
  [ 50] pusharglistnoret 2 ...................... <me, 1>
  [ 52] objcall 39 .............................. me.render(1)
  [ 54] pusharglist 0 ........................... <>
  [ 56] extcall 170 ............................. <getUniqueID()>
  [ 58] setlocal 0 .............................. tID = getUniqueID()
  [ 60] getlocal 0 .............................. <tID>
  [ 62] pusharglist 1 ........................... <tID>
  [ 64] extcall 206 ............................. <timeout(tID)>
  [ 66] pushint16 500 ........................... <500>
  [ 69] pushsymb 86 ............................. <#execute_continue_carry>
  [ 71] getparam 0 .............................. <me>
  [ 73] pusharglistnoret 4 ...................... <timeout(tID), 500, #execute_continue_carry, me>
  [ 75] objcall 458 ............................. timeout(tID).new(500, #execute_continue_carry, me)
  [ 78] getprop 187 ............................. <pDrinkEatTimeoutList>
  [ 80] getlocal 0 .............................. <tID>
  [ 82] pusharglistnoret 2 ...................... <pDrinkEatTimeoutList, tID>
  [ 84] objcall 389 ............................. pDrinkEatTimeoutList.add(tID)
  [ 87] ret
end

on execute_continue_carry me, tTimeout
  [  0] getprop 187 ............................. <pDrinkEatTimeoutList>
  [  2] getparam 1 .............................. <tTimeout>
  [  4] getobjprop 234 .......................... <tTimeout.name>
  [  6] pusharglistnoret 2 ...................... <pDrinkEatTimeoutList, tTimeout.name>
  [  8] objcall 390 ............................. pDrinkEatTimeoutList.deleteOne(tTimeout.name)
  [ 11] getparam 1 .............................. <tTimeout>
  [ 13] getobjprop 234 .......................... <tTimeout.name>
  [ 15] pusharglist 1 ........................... <tTimeout.name>
  [ 17] extcall 206 ............................. <timeout(tTimeout.name)>
  [ 19] pusharglistnoret 1 ...................... <timeout(tTimeout.name)>
  [ 21] objcall 208 ............................. timeout(tTimeout.name).forget()
  [ 23] pushcons 34 ............................. <"action_">
  [ 25] getprop 306 ............................. <pDrinkEatParams>
  [ 28] pushsymb 307 ............................ <#action>
  [ 31] pusharglist 2 ........................... <pDrinkEatParams, #action>
  [ 33] objcall 173 ............................. <pDrinkEatParams[#action]>
  [ 35] joinstr ................................. <"action_" & pDrinkEatParams[#action]>
  [ 36] getparam 0 .............................. <me>
  [ 38] pusharglist 1 ........................... <[me]>
  [ 40] pushlist ................................ <[me]>
  [ 41] getprop 306 ............................. <pDrinkEatParams>
  [ 44] pushsymb 307 ............................ <#action>
  [ 47] pusharglist 2 ........................... <pDrinkEatParams, #action>
  [ 49] objcall 173 ............................. <pDrinkEatParams[#action]>
  [ 51] getprop 306 ............................. <pDrinkEatParams>
  [ 54] pushsymb 308 ............................ <#params>
  [ 57] pusharglist 2 ........................... <pDrinkEatParams, #params>
  [ 59] objcall 173 ............................. <pDrinkEatParams[#params]>
  [ 61] joinpadstr .............................. <pDrinkEatParams[#action] && pDrinkEatParams[#params]>
  [ 62] pusharglistnoret 3 ...................... <"action_" & pDrinkEatParams[#action], [me], pDrinkEatParams[#action] && pDrinkEatParams[#params]>
  [ 64] extcall 205 ............................. call("action_" & pDrinkEatParams[#action], [me], pDrinkEatParams[#action] && pDrinkEatParams[#params])
  [ 66] pushint8 1 .............................. <1>
  [ 68] setprop 120 ............................. pChanges = 1
  [ 70] getparam 0 .............................. <me>
  [ 72] pushint8 1 .............................. <1>
  [ 74] pusharglistnoret 2 ...................... <me, 1>
  [ 76] objcall 39 .............................. me.render(1)
  [ 78] ret
end

on handle_user_use_object me, tItemType
  [  0] getparam 1 .............................. <tItemType>
  [  2] pushzero ................................ <0>
  [  3] nteq .................................... <tItemType <> 0>
  [  4] jmpifz [ 21] ............................ if tItemType <> 0 then / else
  [  7] getparam 0 .............................. <me>
  [  9] pushcons 114 ............................ <"usei ">
  [ 11] getparam 1 .............................. <tItemType>
  [ 13] joinstr ................................. <"usei " & tItemType>
  [ 14] pusharglistnoret 2 ...................... <me, "usei " & tItemType>
  [ 16] objcall 64 .............................. me.action_usei("usei " & tItemType)
  [ 18] jmp [ 29]
  [ 21] getparam 0 .............................. <me>
  [ 23] pushcons 0 .............................. <EMPTY>
  [ 25] pusharglistnoret 2 ...................... <me, EMPTY>
  [ 27] objcall 65 .............................. me.stop_action_usei(EMPTY)
  [ 29] ret
end

on validateFxForActionList me, tActionDefs, tActionIndex
  [  0] getparam 1 .............................. <tActionDefs>
  [  2] pusharglist 1 ........................... <tActionDefs>
  [  4] extcall 180 ............................. <ilk(tActionDefs)>
  [  6] pushsymb 181 ............................ <#list>
  [  8] nteq .................................... <ilk(tActionDefs) <> #list>
  [  9] jmpifz [ 17] ............................ if ilk(tActionDefs) <> #list then
  [ 12] pushzero ................................ <0>
  [ 13] pusharglistnoret 1 ...................... <0>
  [ 15] extcall 189 ............................. return 0
  [ 17] getparam 2 .............................. <tActionIndex>
  [ 19] pusharglist 1 ........................... <tActionIndex>
  [ 21] extcall 180 ............................. <ilk(tActionIndex)>
  [ 23] pushsymb 181 ............................ <#list>
  [ 25] nteq .................................... <ilk(tActionIndex) <> #list>
  [ 26] jmpifz [ 34] ............................ if ilk(tActionIndex) <> #list then
  [ 29] pushzero ................................ <0>
  [ 30] pusharglistnoret 1 ...................... <0>
  [ 32] extcall 189 ............................. return 0
  [ 34] pusharglist 0 ........................... <>
  [ 36] extcall 101 ............................. <VOID>
  [ 38] setlocal 0 .............................. tEffectID = VOID
  [ 40] getprop 127 ............................. <pFx>
  [ 42] pushzero ................................ <0>
  [ 43] nteq .................................... <pFx <> 0>
  [ 44] jmpifz [ 51] ............................ if pFx <> 0 then
  [ 47] getprop 127 ............................. <pFx>
  [ 49] setlocal 0 .............................. tEffectID = pFx
  [ 51] pusharglist 0 ........................... <[]>
  [ 53] pushlist ................................ <[]>
  [ 54] setlocal 1 .............................. tActions = []
  [ 56] getparam 1 .............................. <tActionDefs>
  [ 58] peek 0
  [ 60] pusharglist 1
  [ 62] extcall 172
  [ 64] pushint8 1
  [ 66] peek 0
  [ 68] peek 2
  [ 70] lteq
  [ 71] jmpifz [157] ............................ repeat with tAction in tActionDefs
  [ 74] peek 2
  [ 76] peek 1
  [ 78] pusharglist 2
  [ 80] extcall 173
  [ 82] setlocal 2
  [ 84] getlocal 2 .............................. <tAction>
  [ 86] pusharglist 1 ........................... <tAction>
  [ 88] extcall 180 ............................. <ilk(tAction)>
  [ 90] pushsymb 183 ............................ <#propList>
  [ 92] eq ...................................... <ilk(tAction) = #propList>
  [ 93] jmpifz [152] ............................ if ilk(tAction) = #propList then
  [ 96] getlocal 2 .............................. <tAction>
  [ 98] pushsymb 234 ............................ <#name>
  [100] pusharglist 2 ........................... <tAction, #name>
  [102] objcall 272 ............................. <tAction.getaProp(#name)>
  [105] pushcons 76 ............................. <"fx">
  [107] eq ...................................... <tAction.getaProp(#name) = "fx">
  [108] jmpifz [136] ............................ if tAction.getaProp(#name) = "fx" then
  [111] getlocal 2 .............................. <tAction>
  [113] pushsymb 308 ............................ <#params>
  [116] pusharglist 2 ........................... <tAction, #params>
  [118] objcall 272 ............................. <tAction.getaProp(#params)>
  [121] pushsymb 434 ............................ <#word>
  [124] pushint8 2 .............................. <2>
  [126] pusharglist 3 ........................... <tAction.getaProp(#params), #word, 2>
  [128] objcall 311 ............................. <tAction.getaProp(#params).word[2]>
  [131] setlocal 0 .............................. tEffectID = tAction.getaProp(#params).word[2]
  [133] jmp [152] ............................... next repeat
  [136] getlocal 1 .............................. <tActions>
  [138] getlocal 2 .............................. <tAction>
  [140] pushsymb 234 ............................ <#name>
  [142] pusharglist 2 ........................... <tAction, #name>
  [144] objcall 272 ............................. <tAction.getaProp(#name)>
  [147] pusharglistnoret 2 ...................... <tActions, tAction.getaProp(#name)>
  [149] objcall 389 ............................. tActions.add(tAction.getaProp(#name))
  [152] pushint8 1
  [154] add
  [155] endrepeat [ 66]
  [157] pop 3
  [159] getprop 306 ............................. <pDrinkEatParams>
  [162] getobjprop 180 .......................... <pDrinkEatParams.ilk>
  [164] pushsymb 183 ............................ <#propList>
  [166] eq ...................................... <pDrinkEatParams.ilk = #propList>
  [167] jmpifz [194] ............................ if pDrinkEatParams.ilk = #propList then
  [170] getprop 124 ............................. <pCarrying>
  [172] pushzero ................................ <0>
  [173] nteq .................................... <pCarrying <> 0>
  [174] jmpifz [194] ............................ if pCarrying <> 0 then
  [177] getlocal 1 .............................. <tActions>
  [179] getprop 306 ............................. <pDrinkEatParams>
  [182] pushsymb 307 ............................ <#action>
  [185] pusharglist 2 ........................... <pDrinkEatParams, #action>
  [187] objcall 173 ............................. <pDrinkEatParams[#action]>
  [189] pusharglistnoret 2 ...................... <tActions, pDrinkEatParams[#action]>
  [191] objcall 389 ............................. tActions.add(pDrinkEatParams[#action])
  [194] getprop 926 ............................. <pSitting>
  [197] pushzero ................................ <0>
  [198] nteq .................................... <pSitting <> 0>
  [199] jmpifz [211] ............................ if pSitting <> 0 then
  [202] getlocal 1 .............................. <tActions>
  [204] pushcons 13 ............................. <"sit">
  [206] pusharglistnoret 2 ...................... <tActions, "sit">
  [208] objcall 389 ............................. tActions.add("sit")
  [211] getprop 927 ............................. <pLayingDown>
  [214] pushzero ................................ <0>
  [215] nteq .................................... <pLayingDown <> 0>
  [216] jmpifz [228] ............................ if pLayingDown <> 0 then
  [219] getlocal 1 .............................. <tActions>
  [221] pushcons 33 ............................. <"lay">
  [223] pusharglistnoret 2 ...................... <tActions, "lay">
  [225] objcall 389 ............................. tActions.add("lay")
  [228] getprop 126 ............................. <pDancing>
  [230] pushzero ................................ <0>
  [231] nteq .................................... <pDancing <> 0>
  [232] jmpifz [244] ............................ if pDancing <> 0 then
  [235] getlocal 1 .............................. <tActions>
  [237] pushcons 115 ............................ <"dance">
  [239] pusharglistnoret 2 ...................... <tActions, "dance">
  [241] objcall 389 ............................. tActions.add("dance")
  [244] getlocal 0 .............................. <tEffectID>
  [246] pusharglist 0 ........................... <>
  [248] extcall 101 ............................. <VOID>
  [250] eq ...................................... <tEffectID = VOID>
  [251] jmpifz [270] ............................ if tEffectID = VOID then
  [254] getprop 127 ............................. <pFx>
  [256] jmpifz [265] ............................ if pFx then
  [259] getparam 0 .............................. <me>
  [261] pusharglistnoret 1 ...................... <me>
  [263] objcall 95 .............................. me.clearEffects()
  [265] pushzero ................................ <0>
  [266] pusharglistnoret 1 ...................... <0>
  [268] extcall 189 ............................. return 0
  [270] pushcons 116 ............................ <"fx.blacklist.">
  [272] getlocal 0 .............................. <tEffectID>
  [274] joinstr ................................. <"fx.blacklist." & tEffectID>
  [275] setlocal 3 .............................. tVarName = "fx.blacklist." & tEffectID
  [277] getlocal 3 .............................. <tVarName>
  [279] pusharglist 1 ........................... <tVarName>
  [281] extcall 174 ............................. <variableExists(tVarName)>
  [283] not ..................................... <not variableExists(tVarName)>
  [284] jmpifz [293] ............................ if not variableExists(tVarName) then
  [287] pushint8 1 .............................. <1>
  [289] pusharglistnoret 1 ...................... <1>
  [291] extcall 189 ............................. return 1
  [293] getlocal 3 .............................. <tVarName>
  [295] pusharglist 1 ........................... <tVarName>
  [297] extcall 178 ............................. <getVariableValue(tVarName)>
  [299] setlocal 4 .............................. tBlackList = getVariableValue(tVarName)
  [301] getlocal 4 .............................. <tBlackList>
  [303] pusharglist 1 ........................... <tBlackList>
  [305] extcall 180 ............................. <ilk(tBlackList)>
  [307] pushsymb 181 ............................ <#list>
  [309] nteq .................................... <ilk(tBlackList) <> #list>
  [310] jmpifz [319] ............................ if ilk(tBlackList) <> #list then
  [313] pushint8 1 .............................. <1>
  [315] pusharglistnoret 1 ...................... <1>
  [317] extcall 189 ............................. return 1
  [319] pushcons 117 ............................ <"fx.whitelist.">
  [321] getlocal 0 .............................. <tEffectID>
  [323] joinstr ................................. <"fx.whitelist." & tEffectID>
  [324] pusharglist 1 ........................... <"fx.whitelist." & tEffectID>
  [326] extcall 174 ............................. <variableExists("fx.whitelist." & tEffectID)>
  [328] jmpifz [342] ............................ if variableExists("fx.whitelist." & tEffectID) then
  [331] pushcons 117 ............................ <"fx.whitelist.">
  [333] getlocal 0 .............................. <tEffectID>
  [335] joinstr ................................. <"fx.whitelist." & tEffectID>
  [336] pusharglist 1 ........................... <"fx.whitelist." & tEffectID>
  [338] extcall 178 ............................. <getVariableValue("fx.whitelist." & tEffectID)>
  [340] setlocal 5 .............................. tWhiteList = getVariableValue("fx.whitelist." & tEffectID)
  [342] getlocal 5 .............................. <tWhiteList>
  [344] pusharglist 1 ........................... <tWhiteList>
  [346] extcall 180 ............................. <ilk(tWhiteList)>
  [348] pushsymb 181 ............................ <#list>
  [350] nteq .................................... <ilk(tWhiteList) <> #list>
  [351] jmpifz [359] ............................ if ilk(tWhiteList) <> #list then
  [354] pusharglist 0 ........................... <[]>
  [356] pushlist ................................ <[]>
  [357] setlocal 5 .............................. tWhiteList = []
  [359] pushint8 1 .............................. <1>
  [361] setlocal 6 .............................. tAllow = 1
  [363] pusharglist 0 ........................... <[]>
  [365] pushlist ................................ <[]>
  [366] setlocal 7 .............................. tRemovedActions = []
  [368] getlocal 1 .............................. <tActions>
  [370] peek 0
  [372] pusharglist 1
  [374] extcall 172
  [376] pushint8 1
  [378] peek 0
  [380] peek 2
  [382] lteq
  [383] jmpifz [469] ............................ repeat with tAction in tActions
  [386] peek 2
  [388] peek 1
  [390] pusharglist 2
  [392] extcall 173
  [394] setlocal 2
  [396] getlocal 4 .............................. <tBlackList>
  [398] getlocal 2 .............................. <tAction>
  [400] pusharglist 2 ........................... <tBlackList, tAction>
  [402] objcall 481 ............................. <tBlackList.getOne(tAction)>
  [405] jmpifz [464] ............................ if tBlackList.getOne(tAction) then
  [408] getlocal 5 .............................. <tWhiteList>
  [410] getlocal 2 .............................. <tAction>
  [412] pusharglist 2 ........................... <tWhiteList, tAction>
  [414] objcall 481 ............................. <tWhiteList.getOne(tAction)>
  [417] jmpifz [448] ............................ if tWhiteList.getOne(tAction) then
  [420] getlocal 7 .............................. <tRemovedActions>
  [422] getlocal 2 .............................. <tAction>
  [424] pusharglistnoret 2 ...................... <tRemovedActions, tAction>
  [426] objcall 389 ............................. tRemovedActions.add(tAction)
  [429] pushcons 118 ............................ <"stop_action_">
  [431] getlocal 2 .............................. <tAction>
  [433] joinstr ................................. <"stop_action_" & tAction>
  [434] getparam 0 .............................. <me>
  [436] pusharglist 1 ........................... <[me]>
  [438] pushlist ................................ <[me]>
  [439] pushcons 0 .............................. <EMPTY>
  [441] pusharglistnoret 3 ...................... <"stop_action_" & tAction, [me], EMPTY>
  [443] extcall 205 ............................. call("stop_action_" & tAction, [me], EMPTY)
  [445] jmp [464] ............................... next repeat
  [448] getprop 127 ............................. <pFx>
  [450] jmpifz [461] ............................ if pFx then
  [453] getparam 0 .............................. <me>
  [455] pushint8 1 .............................. <1>
  [457] pusharglistnoret 2 ...................... <me, 1>
  [459] objcall 95 .............................. me.clearEffects(1)
  [461] pushzero ................................ <0>
  [462] setlocal 6 .............................. tAllow = 0
  [464] pushint8 1
  [466] add
  [467] endrepeat [378]
  [469] pop 3
  [471] getparam 1 .............................. <tActionDefs>
  [473] getobjprop 172 .......................... <tActionDefs.count>
  [475] setlocal 8
  [477] getlocal 8
  [479] pushint8 1 .............................. <1>
  [481] gteq
  [482] jmpifz [579] ............................ repeat with tNumAction = tActionDefs.count down to 1
  [485] getparam 1 .............................. <tActionDefs>
  [487] getlocal 8 .............................. <tNumAction>
  [489] pusharglist 2 ........................... <tActionDefs, tNumAction>
  [491] objcall 173 ............................. <tActionDefs[tNumAction]>
  [493] setlocal 2 .............................. tAction = tActionDefs[tNumAction]
  [495] getlocal 2 .............................. <tAction>
  [497] pusharglist 1 ........................... <tAction>
  [499] extcall 180 ............................. <ilk(tAction)>
  [501] pushsymb 183 ............................ <#propList>
  [503] nteq .................................... <ilk(tAction) <> #propList>
  [504] jmpifz [510] ............................ if ilk(tAction) <> #propList then
  [507] jmp [570] ............................... next repeat
  [510] getlocal 7 .............................. <tRemovedActions>
  [512] getlocal 2 .............................. <tAction>
  [514] pushsymb 234 ............................ <#name>
  [516] pusharglist 2 ........................... <tAction, #name>
  [518] objcall 173 ............................. <tAction[#name]>
  [520] pusharglist 2 ........................... <tRemovedActions, tAction[#name]>
  [522] objcall 481 ............................. <tRemovedActions.getOne(tAction[#name])>
  [525] jmpifz [570] ............................ if tRemovedActions.getOne(tAction[#name]) then
  [528] getparam 1 .............................. <tActionDefs>
  [530] getlocal 8 .............................. <tNumAction>
  [532] pusharglistnoret 2 ...................... <tActionDefs, tNumAction>
  [534] objcall 309 ............................. tActionDefs.deleteAt(tNumAction)
  [537] getparam 2 .............................. <tActionIndex>
  [539] getlocal 2 .............................. <tAction>
  [541] pushsymb 234 ............................ <#name>
  [543] pusharglist 2 ........................... <tAction, #name>
  [545] objcall 173 ............................. <tAction[#name]>
  [547] pusharglist 2 ........................... <tActionIndex, tAction[#name]>
  [549] objcall 482 ............................. <tActionIndex.getPos(tAction[#name])>
  [552] setlocal 9 .............................. tPos = tActionIndex.getPos(tAction[#name])
  [554] getlocal 9 .............................. <tPos>
  [556] pushzero ................................ <0>
  [557] gt ...................................... <tPos > 0>
  [558] jmpifz [570] ............................ if tPos > 0 then
  [561] getparam 2 .............................. <tActionIndex>
  [563] getlocal 9 .............................. <tPos>
  [565] pusharglistnoret 2 ...................... <tActionIndex, tPos>
  [567] objcall 309 ............................. tActionIndex.deleteAt(tPos)
  [570] pushint8 -1
  [572] getlocal 8
  [574] add
  [575] setlocal 8
  [577] endrepeat [477]
  [579] getprop 124 ............................. <pCarrying>
  [581] pushzero ................................ <0>
  [582] nteq .................................... <pCarrying <> 0>
  [583] jmpifz [603] ............................ if pCarrying <> 0 then
  [586] getlocal 1 .............................. <tActions>
  [588] getprop 306 ............................. <pDrinkEatParams>
  [591] pushsymb 307 ............................ <#action>
  [594] pusharglist 2 ........................... <pDrinkEatParams, #action>
  [596] objcall 173 ............................. <pDrinkEatParams[#action]>
  [598] pusharglistnoret 2 ...................... <tActions, pDrinkEatParams[#action]>
  [600] objcall 390 ............................. tActions.deleteOne(pDrinkEatParams[#action])
  [603] getprop 926 ............................. <pSitting>
  [606] pushzero ................................ <0>
  [607] nteq .................................... <pSitting <> 0>
  [608] jmpifz [620] ............................ if pSitting <> 0 then
  [611] getlocal 1 .............................. <tActions>
  [613] pushcons 13 ............................. <"sit">
  [615] pusharglistnoret 2 ...................... <tActions, "sit">
  [617] objcall 390 ............................. tActions.deleteOne("sit")
  [620] getprop 927 ............................. <pLayingDown>
  [623] pushzero ................................ <0>
  [624] nteq .................................... <pLayingDown <> 0>
  [625] jmpifz [637] ............................ if pLayingDown <> 0 then
  [628] getlocal 1 .............................. <tActions>
  [630] pushcons 33 ............................. <"lay">
  [632] pusharglistnoret 2 ...................... <tActions, "lay">
  [634] objcall 390 ............................. tActions.deleteOne("lay")
  [637] getprop 126 ............................. <pDancing>
  [639] pushzero ................................ <0>
  [640] nteq .................................... <pDancing <> 0>
  [641] jmpifz [653] ............................ if pDancing <> 0 then
  [644] getlocal 1 .............................. <tActions>
  [646] pushcons 115 ............................ <"dance">
  [648] pusharglistnoret 2 ...................... <tActions, "dance">
  [650] objcall 390 ............................. tActions.deleteOne("dance")
  [653] getlocal 6 .............................. <tAllow>
  [655] pusharglistnoret 1 ...................... <tAllow>
  [657] extcall 189 ............................. return tAllow
  [659] ret
end

on validateCarryForCurrentState me
  [  0] pusharglist 0 ........................... <>
  [  2] extcall 101 ............................. <VOID>
  [  4] setlocal 0 .............................. tEffectID = VOID
  [  6] getprop 127 ............................. <pFx>
  [  8] pushzero ................................ <0>
  [  9] nteq .................................... <pFx <> 0>
  [ 10] jmpifz [ 20] ............................ if pFx <> 0 then / else
  [ 13] getprop 127 ............................. <pFx>
  [ 15] setlocal 0 .............................. tEffectID = pFx
  [ 17] jmp [ 26]
  [ 20] pushint8 1 .............................. <1>
  [ 22] pusharglistnoret 1 ...................... <1>
  [ 24] extcall 189 ............................. return 1
  [ 26] pushcons 116 ............................ <"fx.blacklist.">
  [ 28] getlocal 0 .............................. <tEffectID>
  [ 30] joinstr ................................. <"fx.blacklist." & tEffectID>
  [ 31] setlocal 1 .............................. tVarName = "fx.blacklist." & tEffectID
  [ 33] getlocal 1 .............................. <tVarName>
  [ 35] pusharglist 1 ........................... <tVarName>
  [ 37] extcall 174 ............................. <variableExists(tVarName)>
  [ 39] not ..................................... <not variableExists(tVarName)>
  [ 40] jmpifz [ 49] ............................ if not variableExists(tVarName) then
  [ 43] pushint8 1 .............................. <1>
  [ 45] pusharglistnoret 1 ...................... <1>
  [ 47] extcall 189 ............................. return 1
  [ 49] getlocal 1 .............................. <tVarName>
  [ 51] pusharglist 1 ........................... <tVarName>
  [ 53] extcall 178 ............................. <getVariableValue(tVarName)>
  [ 55] setlocal 2 .............................. tBlackList = getVariableValue(tVarName)
  [ 57] getlocal 2 .............................. <tBlackList>
  [ 59] pusharglist 1 ........................... <tBlackList>
  [ 61] extcall 180 ............................. <ilk(tBlackList)>
  [ 63] pushsymb 181 ............................ <#list>
  [ 65] nteq .................................... <ilk(tBlackList) <> #list>
  [ 66] jmpifz [ 75] ............................ if ilk(tBlackList) <> #list then
  [ 69] pushint8 1 .............................. <1>
  [ 71] pusharglistnoret 1 ...................... <1>
  [ 73] extcall 189 ............................. return 1
  [ 75] getlocal 2 .............................. <tBlackList>
  [ 77] pushcons 109 ............................ <"carryd">
  [ 79] pusharglist 2 ........................... <tBlackList, "carryd">
  [ 81] objcall 482 ............................. <tBlackList.getPos("carryd")>
  [ 84] getlocal 2 .............................. <tBlackList>
  [ 86] pushcons 111 ............................ <"carryf">
  [ 88] pusharglist 2 ........................... <tBlackList, "carryf">
  [ 90] objcall 482 ............................. <tBlackList.getPos("carryf")>
  [ 93] or ...................................... <tBlackList.getPos("carryd") or tBlackList.getPos("carryf")>
  [ 94] getlocal 2 .............................. <tBlackList>
  [ 96] pushcons 110 ............................ <"cri">
  [ 98] pusharglist 2 ........................... <tBlackList, "cri">
  [100] objcall 482 ............................. <tBlackList.getPos("cri")>
  [103] or ...................................... <tBlackList.getPos("carryd") or tBlackList.getPos("carryf") or tBlackList.getPos("cri")>
  [104] jmpifz [115] ............................ if tBlackList.getPos("carryd") or tBlackList.getPos("carryf") or tBlackList.getPos("cri") then / else
  [107] pushzero ................................ <0>
  [108] pusharglistnoret 1 ...................... <0>
  [110] extcall 189 ............................. return 0
  [112] jmp [121]
  [115] pushint8 1 .............................. <1>
  [117] pusharglistnoret 1 ...................... <1>
  [119] extcall 189 ............................. return 1
  [121] ret
end

on getEffectDirOffset me
  [  0] getprop 204 ............................. <pFXManager>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <pFXManager = 0>
  [  4] jmpifz [ 12] ............................ if pFXManager = 0 then
  [  7] pushzero ................................ <0>
  [  8] pusharglistnoret 1 ...................... <0>
  [ 10] extcall 189 ............................. return 0
  [ 12] getprop 204 ............................. <pFXManager>
  [ 14] pusharglist 1 ........................... <pFXManager>
  [ 16] objcall 89 .............................. <pFXManager.getEffectDirOffset()>
  [ 18] pusharglistnoret 1 ...................... <pFXManager.getEffectDirOffset()>
  [ 20] extcall 189 ............................. return pFXManager.getEffectDirOffset()
  [ 22] ret
end

on getEffectShadowName me
  [  0] getprop 204 ............................. <pFXManager>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <pFXManager = 0>
  [  4] jmpifz [ 14] ............................ if pFXManager = 0 then
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] pusharglistnoret 1 ...................... <[]>
  [ 12] extcall 189 ............................. return []
  [ 14] getprop 204 ............................. <pFXManager>
  [ 16] pusharglist 1 ........................... <pFXManager>
  [ 18] objcall 90 .............................. <pFXManager.getEffectShadowName()>
  [ 20] pusharglistnoret 1 ...................... <pFXManager.getEffectShadowName()>
  [ 22] extcall 189 ............................. return pFXManager.getEffectShadowName()
  [ 24] ret
end

on getEffectSpriteProps me
  [  0] getprop 204 ............................. <pFXManager>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <pFXManager = 0>
  [  4] jmpifz [ 14] ............................ if pFXManager = 0 then
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] pusharglistnoret 1 ...................... <[]>
  [ 12] extcall 189 ............................. return []
  [ 14] getprop 204 ............................. <pFXManager>
  [ 16] pusharglist 1 ........................... <pFXManager>
  [ 18] objcall 91 .............................. <pFXManager.getEffectSpriteProps()>
  [ 20] pusharglistnoret 1 ...................... <pFXManager.getEffectSpriteProps()>
  [ 22] extcall 189 ............................. return pFXManager.getEffectSpriteProps()
  [ 24] ret
end

on getEffectAddedPartIndex me
  [  0] getprop 204 ............................. <pFXManager>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <pFXManager = 0>
  [  4] jmpifz [ 14] ............................ if pFXManager = 0 then
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] pusharglistnoret 1 ...................... <[]>
  [ 12] extcall 189 ............................. return []
  [ 14] getprop 204 ............................. <pFXManager>
  [ 16] pusharglist 1 ........................... <pFXManager>
  [ 18] objcall 92 .............................. <pFXManager.getEffectAddedPartIndex()>
  [ 20] pusharglistnoret 1 ...................... <pFXManager.getEffectAddedPartIndex()>
  [ 22] extcall 189 ............................. return pFXManager.getEffectAddedPartIndex()
  [ 24] ret
end

on getEffectExcludedPartIndex me
  [  0] getprop 204 ............................. <pFXManager>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <pFXManager = 0>
  [  4] jmpifz [ 14] ............................ if pFXManager = 0 then
  [  7] pusharglist 0 ........................... <[]>
  [  9] pushlist ................................ <[]>
  [ 10] pusharglistnoret 1 ...................... <[]>
  [ 12] extcall 189 ............................. return []
  [ 14] getprop 204 ............................. <pFXManager>
  [ 16] pusharglist 1 ........................... <pFXManager>
  [ 18] objcall 93 .............................. <pFXManager.getEffectExcludedPartIndex()>
  [ 20] pusharglistnoret 1 ...................... <pFXManager.getEffectExcludedPartIndex()>
  [ 22] extcall 189 ............................. return pFXManager.getEffectExcludedPartIndex()
  [ 24] ret
end

on updateEffects me
  [  0] getprop 204 ............................. <pFXManager>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <pFXManager = 0>
  [  4] jmpifz [ 13] ............................ if pFXManager = 0 then
  [  7] pushint8 1 .............................. <1>
  [  9] pusharglistnoret 1 ...................... <1>
  [ 11] extcall 189 ............................. return 1
  [ 13] getprop 204 ............................. <pFXManager>
  [ 15] getparam 0 .............................. <me>
  [ 17] pusharglistnoret 2 ...................... <pFXManager, me>
  [ 19] objcall 94 .............................. pFXManager.updateEffects(me)
  [ 21] ret
end

on clearEffects me, tTemp
  [  0] getparam 1 .............................. <tTemp>
  [  2] pushzero ................................ <0>
  [  3] nteq .................................... <tTemp <> 0>
  [  4] jmpifz [ 16] ............................ if tTemp <> 0 then
  [  7] getparam 0 .............................. <me>
  [  9] getparam 0 .............................. <me>
  [ 11] getobjprop 127 .......................... <me.pFx>
  [ 13] setobjprop 930 .......................... me.pPersistedFX = me.pFx
  [ 16] getprop 204 ............................. <pFXManager>
  [ 18] pushzero ................................ <0>
  [ 19] nteq .................................... <pFXManager <> 0>
  [ 20] jmpifz [ 31] ............................ if pFXManager <> 0 then
  [ 23] getprop 204 ............................. <pFXManager>
  [ 25] getparam 0 .............................. <me>
  [ 27] pusharglistnoret 2 ...................... <pFXManager, me>
  [ 29] objcall 95 .............................. pFXManager.clearEffects(me)
  [ 31] getparam 0 .............................. <me>
  [ 33] pushzero ................................ <0>
  [ 34] setobjprop 127 .......................... me.pFx = 0
  [ 36] getparam 0 .............................. <me>
  [ 38] pushint8 1 .............................. <1>
  [ 40] setobjprop 120 .......................... me.pChanges = 1
  [ 42] pushint8 1 .............................. <1>
  [ 44] pusharglistnoret 1 ...................... <1>
  [ 46] extcall 189 ............................. return 1
  [ 48] ret
end

on getCurrentEffectState me
  [  0] getprop 204 ............................. <pFXManager>
  [  2] pushzero ................................ <0>
  [  3] eq ...................................... <pFXManager = 0>
  [  4] jmpifz [ 15] ............................ if pFXManager = 0 then
  [  7] pusharglist 0 ........................... <>
  [  9] extcall 101 ............................. <VOID>
  [ 11] pusharglistnoret 1 ...................... <VOID>
  [ 13] extcall 189 ............................. return VOID
  [ 15] getprop 204 ............................. <pFXManager>
  [ 17] pusharglist 1 ........................... <pFXManager>
  [ 19] objcall 96 .............................. <pFXManager.getCurrentEffectState()>
  [ 21] pusharglistnoret 1 ...................... <pFXManager.getCurrentEffectState()>
  [ 23] extcall 189 ............................. return pFXManager.getCurrentEffectState()
  [ 25] ret
end

on getEffectManager me
  [  0] getprop 204 ............................. <pFXManager>
  [  2] pusharglist 1 ........................... <pFXManager>
  [  4] extcall 203 ............................. <objectp(pFXManager)>
  [  6] jmpifz [ 15] ............................ if objectp(pFXManager) then
  [  9] getprop 204 ............................. <pFXManager>
  [ 11] pusharglistnoret 1 ...................... <pFXManager>
  [ 13] extcall 189 ............................. return pFXManager
  [ 15] pushsymb 404 ............................ <#temp>
  [ 18] pushcons 119 ............................ <"Avatar Effect Manager">
  [ 20] pusharglist 2 ........................... <#temp, "Avatar Effect Manager">
  [ 22] extcall 403 ............................. <createObject(#temp, "Avatar Effect Manager")>
  [ 25] setprop 204 ............................. pFXManager = createObject(#temp, "Avatar Effect Manager")
  [ 27] getprop 204 ............................. <pFXManager>
  [ 29] pusharglistnoret 1 ...................... <pFXManager>
  [ 31] extcall 189 ............................. return pFXManager
  [ 33] ret
end
